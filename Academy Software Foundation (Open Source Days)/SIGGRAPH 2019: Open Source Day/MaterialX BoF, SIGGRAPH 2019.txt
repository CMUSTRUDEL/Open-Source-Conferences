Title: MaterialX BoF, SIGGRAPH 2019
Publication date: 2019-08-23
Playlist: SIGGRAPH 2019: Open Source Day
Description: 
	A discussion of the latest updates to the MaterialX open standard for rich material and lookdev content, including its new physically-based shading nodes and code generation framework. Part of Open Source Day at SIGGRAPH, hosted by Academy Software Foundation.

Speakers:
Doug Smythe, Industrial Light & Magic
Jonathan Stone, Lucasfilm
Davide Pesare, Adobe
Henrik Edstrom, Autodesk
Captions: 
	                              right hello everyone thanks for coming                               we are here today to discuss material X                               and open standard for network based CG                               object looks as I can read slides we                               have five presentations for you today                               there should be plenty of time at the                               end for Q&A so we're going to hold all                               of our questions until the end if that's                               okay with y'all                                I'm Doug Smith I will start with a quick                                recap of what material X is and discuss                                what's new and approved in the latest                                version then Jonathan stone will come up                                and describe even more new technology in                                the open-source library then David APIs                                re will come up and talk a little bit                                about some prototype work to support                                portable shaders using material X in                                Adobe's substance painter and substance                                designer tools very cool I'll be back up                                to talk a little bit about a material X                                based material interchange system we                                developed at ILM and finally Hendrick                                edge trim will give us an update on                                material X support in some of Autodesk's                                architecture and design products I said                                we have five today but there's also more                                presentations and discussions tomorrow                                at the Autodesk exhibitor session it's                                tomorrow                                                             interested in what you're hearing today                                even more so tomorrow because it's going                                to be jam-packed with action and demos                                we'll be showing some things from the                                Autodesk and Adobe teams some exciting                                prototypes and research projects                                including material design editing and                                transfer between substance designer maya                                new prototype looked of editor from                                Autodesk and rendering in various GCC                                viewports the material x viewer and the                                Arnold renderer so how many of you here                                at least somewhat familiar with what                                material X is hopefully most of you okay                                so just a very very quick overview of                                what material X is for those who are a                                little new to it                                it's a schema and a file format that's                                used to describe complete CG object                                looks the idea is that using material X                                you should be able to describe your                                shading networks your materials your                                rendering assignments and we hope                                everything soup-to-nuts that you might                                need to describe the look of a CG asset                                in an application independent portable                                open-source format that's the goal                                hopefully we're achieving some of that                                the specification also just defines                                exact behavior for a large number of                                standard nodes for things like reading                                texture images procedural pattern                                generation and various mathematical and                                image processing operations which all                                implementations are expected to support                                which provides a consistent predictable                                result when you're evaluating networks                                regardless of the application material X                                has a number of key features that make                                it pretty good it has strong data typing                                no fuzzing of value types it's fully                                color managed so you can keep track of                                what color spaces everything is in it's                                compatible with but doesn't require a                                lot of other open standards which we                                like around here it's live not baked                                which means that setups retain their                                original editable representation rather                                than having everything get down on two                                attributes on geometry but most                                importantly it's extremely extensible                                you can have user-defined those and                                shaders application specific node                                parameters and attributes if you need to                                branch off from the default and                                user-defined data types which is going                                to be really important coming up in some                                of the upcoming presentations over the                                past year we've been working with the                                Autodesk and Adobe folks to integrate                                material X capabilities into their                                products and prototypes and address the                                various things that came up along the                                way these have led to significant                                updates to the material X specification                                and library which is it now at version                                                                                                        right now on our github which you can                                access through material X or by finding                                 the big blue github button and clicking                                 on it to go there and speaking of the                                 neutral export site it's been updated                                 with a lot of new information as well as                                 some new fully functional sample Python                                 scripts to read parsed and right                                 material x files which is something I                                 needed to last year that we needed                                 examples of so what's new and improved                                 in                                                                       here I'm assuming that you guys have                                 memorized the one three six spec top to                                 bottom if not you can download online                                 it's                                                   reading I highly encourage you to get it                                 if you want a good night's sleep the                                 most important and biggest changed since                                 last year is the addition of shader Jen                                 this is a module to generate complex                                 portable rendering shaders using node                                 graphs along with the creation of a                                 number of physically based shading those                                 to use in these shader definition                                 diagraphs it's all really cool stuff and                                 Jonathan Stone will tell us all about it                                 in the next presentation                                 besides the shader Jen library in the                                 PBR nodes there is a number of other                                 additions several new nodes that are                                 described it there and the functionality                                 of many existing standard nodes has been                                 expanded with new things don't worry                                 about taking notes on this because it's                                 all in the changeless stock online so                                 I'm just you know trying to give you the                                 high level coverage of what we have here                                 some other things that are actually new                                 concepts in                                                      material X is a particular combination                                 of assignments of materials rendering                                 property and visibility to various                                 geometries material X has always been                                 able to specify a number of looks within                                 a file but there wasn't a mechanism to                                 say these four looks go together or this                                 is the set of defined looks for my asset                                 so in                                                                this as well as a way to say which look                                 is the currently active one so it's good                                 but if you're writing a you eyes using                                 material X to maintain your looks                                 another thing that got reworked was                                 geometric attributes in                                                 we had something called geometers which                                 were used to define and retrieve at                                 route values associated associated with                                 geometries but it turned out that using                                 these in filing strings were problematic                                 because of evaluation scope and so we                                 introduced the idea of tokens last year                                 in                                                          functionality that was left over has                                 been moved into something called geom                                 props which are now semantically                                 equivalent to us d's prim VARs we're                                 trying to be on the same page as our USD                                 friends so geometric properties are                                 defined using a new gene on prop def                                 element and you can view the value of it                                 using a jump value in your                                 no graph the next big change has to do                                 with the way that outputs of nodes are                                 defined for several years interlocks has                                 two supported nodes with multiple                                 outputs but it always felt like a bit of                                 an afterthought the node was declared                                 with this weird multi output type and                                 the multi output nodes had explicit                                 outputs while single output nodes had an                                 implicit but unnamed output but worse                                 the way that you access the nodes actual                                 outputs and types through the API was                                 different for single output versus multi                                 output types so in                                                     the definition of single and multiple                                 output types into a single syntax so                                 output names and types are now always                                 declared using child output elements and                                 the node def itself no longer declares a                                 type at all one side benefit of this                                 change is that you can now have default                                 input pass-through per output so you can                                 say default layer' this output is this                                 input the default value of this output                                 is that other input so systems that                                 don't understand your node will know                                 what to do to pass through values you                                 couldn't do this at all in                                            other miscellaneous changes due to                                 popular demand Swizzle on input channel                                 attribute is back so it's back and there                                 it's really great for on-the-fly type                                 conversion in channel extraction we've                                 added a few new UI related parameters                                 and attributes for the inputs there's a                                 new mirror mode to make it a little bit                                 more like you know the OS l set we                                 renamed the black mode to constant                                 because we felt that was more useful in                                 things like bump maps that don't have a                                 zero point zero value default value and                                 a bunch of other changes that you can                                 read about in the changed dock at the                                 moment as far as the library API we're a                                 little bit in the bifurcated State the                                 currently released code base is called                                 one                                                                      from                                                                     up and running and implement the                                 Autodesk standard surface Pixar's USD                                 preview service and Island unified surf                                 shaders entirely as node graphs plus                                 whatever else we had time to fit in                                 - that didn't break a                                 backwards-compatibility or more                                 importantly didn't break the demos that                                 we wanted to show you at SIGGRAPH this                                 year so on the top is what is in the                                 library now and below is some the stuff                                 that is coming real soon as soon as we                                 get back to work in the future                                 well more nodes more PBR knows we'll                                 always be great I'm actually hoping that                                 some of you guys can start contributing                                 nodes as material X's are files that we                                 can put into user contributed libraries                                 that would be really cool and I know                                 Jonathan's going to mention some new                                 things in his talk but mostly the                                 features whatever you guys want it to be                                 please join the discussion forum on                                 material x.org there's the button to get                                 to it on the website and let us know                                 what you think and yes the joining                                 button was broken for a little while                                 because of a change to Google Groups but                                 we think that's fixed now so that's it                                 for my part before I turn it over to                                 Jonathan like to thank all you for                                 coming and your interested in material X                                 and I would especially like to thank the                                 Academy Software Foundation for                                 organizing and sponsoring open-source                                 State here at SIGGRAPH and doing all the                                 legwork to get this thing put together                                 cuz it's a lot of work to put these                                 events together so thank you thank you                                 thank you now I'd like to turn over to                                 Jonathan stone who will talk more about                                 new stuff in the open source library                                 thank you                                 all right thank you very much Doug um so                                 yeah let's see                                 I'm Jonathan stone from the Lucasfilm                                 ADG and in this section I wanted to give                                 a high-level overview of the new                                 features in the material X codebase and                                 tool set and then talk briefly about                                 some more forward-looking work at                                 Lucasfilm Autodesk and Adobe so first to                                 give a bit of backstory many of the                                 technology updates this year had their                                 roots in a collaboration between                                 Lucasfilm and Autodesk that began back                                 in                                                               material X project Autodesk had been                                 developing their own internal material                                 format called abstract material graphs                                 and after a few discussions both of our                                 teams recognized that the two systems                                 were very closely aligned and that the                                 unique ideas and Autodesk's approach                                 would make material X more effective and                                 Universal so Autodesk soon moved their                                 development resources over to material X                                 and started developing a set of key                                 extensions that were given the name                                 shader X there were two main features                                 that shader X brought to the material X                                 project the first is a set of true                                 physically-based shading nodes so before                                 the shader X collaboration a                                 physically-based shader like standard                                 surface was effectively a black box with                                 material X able to describe the patterns                                 that fed into the shaders inputs but not                                 the shader itself now on material X has                                 a rich set of physically-based shading                                 notes to describe the different                                 distribution functions and layering                                 operations that compose a physically                                 based shader and the repository contains                                 shading graphs for both standard surface                                 and USB preview surface as initial                                 examples of how you can use the the near                                 node set the second new feature is the                                 one that Doug referenced earlier is a                                 general-purpose framework for shader                                 code generation which makes it                                 straightforward to convert a material x                                 document into domain specific shading                                 code in a language such as OS l or GLSL                                 now this this feature marks a pretty                                 fundamental shift for material acts as                                 it means that the application no longer                                 needs to encode either the rules of                                 material acts or the details of the node                                 set that it's using by converting                                 material directly into shader code it                                 can render any content                                 the material contains even a document                                 that's based on completely custom nodes                                 that can be rendered in this way as long                                 as the definitions of those custom nodes                                 are available at shader generation time                                 so early in the shader X collaboration                                 with Autodesk it became clear that the                                 combination of these two features would                                 enable the construction of a material X                                 viewer where cogeneration would be used                                 to convert the content into GLSL for the                                 application viewport we started on a                                 public prototype for this project in                                 early                                                                    work at Autodesk and it's now been                                 published back to material X master in                                 these two images you can see eylem X lab                                 production materials for bb-                                           rendering in the material x viewer and                                 you'll see more of these assets at the                                 auto decision series talks and in some                                 other sessions that you'll see here one                                 important advantage of having a standard                                 viewer in the repository is that it                                 provides a ground truth reference for                                 renders of material X content which can                                 easily be compared to other                                 implementations additionally we've                                 strive to keep the application the                                 viewer application simple enough that it                                 provides a good reference for how                                 material X shader code Jen can be                                 integrated into other applications so                                 taking this work forward into the future                                 we believe there's another compelling                                 use case for physically based shading                                 graphs which is in the translation from                                 one shading model to another this is a                                 feature that we've long wanted at                                 Lucasfilm and it came up very recently                                 in the development of our bb-                                           your assets for SIGGRAPH where we wanted                                 a simple consistent way to translate our                                 assets from lucasfilm's unified surf                                 just standard surface for rendering in                                 nan Lucasfilm tools and the left                                 screenshot you're seeing the original                                 bb-                                                                     right screenshot you're seeing the same                                 asset with a translation graph that                                 remap sits shading inputs from unified                                 surf to standard surface it's worth                                 noting this technology is still quite                                 early in development and the creation of                                 the translation graph itself is still a                                 manual process                                 but we believe it's very compelling for                                 the future and and I'm sorry we believe                                 this very compelling for the future and                                 it's something we wanted to discuss with                                 the community and bring up for others to                                 give feedback on so another compelling                                 project that could potentially be built                                 upon the new shader generation framework                                 is an automated texture Baker which                                 would flatten an arbitrarily complex                                 material X graphed down to a single                                 texture or a single udimm set for each                                 shader input this could be combined with                                 the shader translation graphs to provide                                 efficient preparation of materials for                                 different rendering targets in                                 situations where the flexibility of the                                 full node graph isn't required this is a                                 project that we're currently discussing                                 with a bunch of our partner Studios and                                 we'd encourage other teams to reach out                                 if they would be interested in                                 participating in that so finally I                                 wanted to know some of the pretty                                 fabulous new work that Autodesk and                                 Adobe are building upon the new feature                                 set in material X in this screenshot                                 you're seeing a prototype of material X                                 support in Maya with shader code                                 generation being used to automatically                                 generate the GLSL and OSL shaders that                                 are respectively rendered in the OpenGL                                 and Arnold viewports um                                 it's worth noting that not only the                                 pattern graphs are being converted to                                 shading code and rendered but also the                                 physically-based shading graphs using                                 the latest graph definition of standard                                 surface that Albert asked is added to                                 the material X repository ah this is                                 just a very first look at this this new                                 technology it's just a prototype but                                 much more detailed demos will be                                 provided at the Autodesk vision series                                 tomorrow so I encourage you guys to come                                 and check it out and on the adobe side                                 this is a prototype of material x                                 support in substance designer with a                                 portable material graph shown at the top                                 and the two viewports showing equivalent                                 visuals in opengl and array I won't go                                 into too much detail on this because                                 Java de pez array will be presenting                                 more details on this work later in the                                 session and also David Larson from ah                                 from the same team will show some cool                                 demos in substance designer and painter                                 at the Autodesk vision series tomorrow                                 afternoon                                 funnily I just wanted to express my                                 gratitude for the contributions of all                                 the people on this slide particular I                                 wanted to call out a new class Harrison                                 who couldn't be here at SIGGRAPH this                                 year but whose work was critical to many                                 of the advances that we're presenting                                 today                                 thank you very much                                 [Applause]                                 [Music]                                 hello everyone so yeah I am David                                 appeaser I had the lab that the                                 substance from Adobe and I'm going to                                 talk about why we care about material                                 acts today so I for you probably know it                                 but for those who don't making materials                                 and sharing them is really at the core                                 of what we do                                 substance and you know to for this to be                                 effective we really need to maximize the                                 portability of the the materials we                                 built so the way we usually go about it                                 is to build procedural textures and                                 those come usually from arbitrarily                                 complex compositing graphs which get                                 packaged nicely into archives that later                                 get baked now they get baked too touches                                 whether they're in memory or to watch                                 your files but usually what they get                                 back to is two standard shaders or the                                 other standard channels they get read                                 making assumptions on what the shader                                 knows about them that is albedo                                 roughness specular level normal map and                                 such so I really relies on knowing that                                 the consumer of these textures will know                                 what to do with them and now having                                 standard shader in our case we have a                                 model that's also based on the Disney                                 principle shared from                                                 assumption doesn't always hold for very                                 good reasons in across different                                 industries there's a need to have custom                                 shaders and disgusting shaders are not                                 just about how you layer your loops it's                                 also about are you going to modulate                                 your data and how you wanna modify your                                 patterns so we need some kind of editors                                 for shaders and this is actually                                 something we recognized years ago and we                                 shipped in                                      shader graph which was mostly successful                                 with architecture and design clients and                                 that was built in in partnership with                                 our friends at Nvidia was built on the                                 MDL language and API which was                                 particularly good for layering                                 thumpy ideas and that enabled us to                                 embed our partager inside our tools and                                 other you know also be compatible with                                 our MDL compliant renderers that was                                 great we were happy with the quality we                                 got out but this was largely not taken                                 advantage of by the film and the effects                                 and animation industry for a number of                                 reasons the principle one being that OSL                                 is the language of choice in in film                                 path tracers for number reasons and so                                 you know we started looking something                                 some other vector for carrying portable                                 networks and so we looked at material                                 acts which is not new for substance not                                 new for me I've been working on it for a                                 while but it's definitely not new                                 substance last year at the birds of a                                 feather we we showed a little prototype                                 to import material libraries that were                                 Danielson in collaboration with Island                                 and material libraries work you know                                 kept in sync and basically used as a                                 palette of colors that you can paint                                 instead of painting colors you painted                                 materials and these you know you could                                 export them these presets along with the                                 textures and your bindings into material                                 X package that was ready to be consumed                                 so we wanted to build on this idea but                                 now that there is shaky racks extension                                 to material X we could really push a                                 little further so we decided to work on                                 the material workflows and limit the                                 scope for efficiency to the area of                                 pattern modulation and stick with a                                 standard with a uber shader at the brdf                                 level and so we picked a standard                                 surface for that and so the idea was to                                 build an alternate node graph to our nd                                 l                                                                      yell in fact it's really using the same                                 core and it's an entirely compatible                                 what we had before so you can send save                                 an MDL and export it to to your clients                                 already but there's a couple of ways we                                 can do this                                 we could have added back end for MDL on                                 shadrach's we decided not to do it                                 because in our implementation is more                                 efficient to use the native the native                                 implementation of MDR in substance but                                 we also made sure that it can export                                 material acts and the way we went about                                 it is to basically implement every                                 single material ex node in MDL and make                                 that our new dictionary of note our new                                 shed the registry of of notes that along                                 with any sub graph you want to decide to                                 build and maybe custom graph custom                                 custom notes and once you have that                                 thanks to the magic of shielded arcs you                                 have oil OpenGL and OSL and you can                                 start massaging it for a little bit so                                 it fits your renderer in our case                                 renders we were targeting where our                                 internal renders so the MDL one of                                 course the IRA and our opengl viewport                                 in designer and it was cool because we                                 were able actually to live edit both and                                 they will confirm that it matches and                                 with a simple pressure of a button we                                 can export textures and send them to                                 material x view and verify that what you                                 export it actually looks with the way                                 you expect and play with parameters and                                 verify that they have they feel good                                 they have a good range they are well you                                 know organized and parameterised so this                                 is really the best initial validation -                                 we had because we know that this is not                                 something we wrote to extend on the                                 asset workflow on the other hand back go                                 back to model work we had to import                                 these materials into the shaders into                                 painter so we built a pipeline to import                                 this material shader shadows in painter                                 and if we could start playing the same                                 parameters but not only that if you                                 choose the right channels and you expose                                 them in a way that painter knows how to                                 use you can paint these parameters and                                 you can plug textures to them and you                                 can have fun with cleaning the model                                 before giving it back to autodesk to                                 continue to the next demo but                                 key takeaways let's see obviously we                                 think                                 is worth pursuing portable shaders that                                 was my premise we think material acts as                                 an effective carrier for it and not just                                 in its xml implementation but we're also                                 interested in moving forward and bad                                 between us d one of the nice side                                 effects of this is that we were able to                                 improve the api on designer for custom                                 no graphs so not available yet but by                                 the end of the year we should have a                                 designer version that has you can build                                 your own custom no graphs on and in our                                 case its material acts may be in your                                 case will be something else and because                                 of that our prototypes are and almost                                 entirely coded in the python plugin that                                 it's not yet but it's not unrealistic to                                 see it on github someday to download so                                 if you want to see more in depth come                                 see my colleague David Larsen presenting                                 at the artists vision series tomorrow                                 will go more in depth from these                                 prototypes or come to find us that the                                 substance booth                                 Thanks                                 [Applause]                                 okay here right I mean here this time to                                 talk a little bit about a new material                                 ex based material interchange system                                 developed at ILM the problem that we're                                 trying to solve here is pretty                                 straightforward we have artists working                                 in several different content and                                 creating packages for doing lighting                                 texturing to create materials for our CG                                 assets and we'd like to be able to apply                                 high-quality materials from a                                 centralized library very quickly                                 regardless of what package the artist is                                 using refine that material using the                                 native application tools to a final                                 quality level and then export it back                                 into the centralized library so we can                                 use it and modify in other packages with                                 minimal effort on the artists part so to                                 that end we've created a common material                                 library API built on material X with                                 other you know things like material                                 publishing and version control and other                                 glue functions like that and then we                                 wrote a material browser panel which                                 looks like this for that library with                                 drag-and-drop capability it can run as                                 either a standalone tool or as a plug-in                                 for various applications and it's the                                 hub for our shared materials all the                                 materials in the library our store is an                                 empty LX file which contains a material                                 with value and texture bindings as well                                 as a set of texture image files that the                                 shader inputs we are using for that                                 particular material so we can have rich                                 textured materials in our library so we                                 then wrote plug-ins for our DCC packages                                 to handle drop events from the common                                 material library and build native                                 materials in the application using the                                 values and textures from the the                                 Angelics file so here's a little video                                 demo and hopefully it will play for me                                 when I click on it to show how we can                                 use the commentary library to add                                 materials to our untextured bb-                                        in katana so playing okay so we have a                                 bunch of materials up on the right thing                                 and you know choose you know metal or                                 plastic whatever I'm going to start with                                 this paint material I click on it and                                 you see some details of it and then drag                                 it over and drop it on my material stack                                 and you see it gets created down on                                 materials if I open it up in my stack                                 and click it then it I see come on click                                 on there you go good boy you can see it                                 has all the values that are in there                                 from the reset so I'm going to turn up                                 and brighten it up a little bit to an                                 appropriate brightness level for a BB a                                 body color and let's see now I need to                                 do something else is grab another                                 material with this brick one drag it on                                 up                                 it appears down below so now I have a                                 couple of assigns already a set up with                                 the sell statements drag it up into                                 there and now I have my material                                 assignment on there but if I don't like                                 that one I can choose a different one                                 like maybe if I wanted to do a little                                 bit of car paint I can do that drag it                                 up there I have my material drag it up                                 onto the material assign and now I have                                 car paint on my model one last thing I'm                                 going to yeah any self-respecting of all                                 droid needs a glass lens material for                                 their eyeball so drag up some dirty                                 glass drop it on there like the thing up                                 to my material assignment and now he has                                 a glass shader on his eyeball so this is                                 you can see how I can very very quickly                                 get to a good starting point for doing                                 my real look dev with this things built                                 from a common you know starting point                                 that you know artists in any package can                                 use I can refine it until I'm happy with                                 it and then when I have a material that                                 I like I can publish it back into the                                 commentary library as a preset using                                 this expert panel where it's now                                 available for either me the user my show                                 or the whole facility to use in any                                 other tool that supports common material                                 library so for example now I'm going to                                 take one of these some of these                                 materials that we're in koma Tyrael and                                 drag them in and you Maya here so it's a                                 plane yeah so you select some geometry                                 drag it on it's like another piece of                                 geometry search for it by typing there's                                 our concrete library drag it on and                                 there we have our concrete things so                                 very very fast and it's all the texture                                 detail so what are we doing under the                                 hood it's not really magic the key is                                 that each material is referencing one of                                 a fixed set of shader interface                                 definitions which is a node F in                                 material xpeke and there's an                                 implementation of those shaders in each                                 of the packages so                                 for applications like Mari the mire                                 viewport and material X view which                                 support you know GLSL we can use native                                 material X and shader gen for other                                 applications like if you don't have you                                 know all the OS l and your random                                 anything we have native knows you can do                                 it with custom network nodes or Clarisse                                 you can you know custom dos written in                                 that language as long as it implements                                 the top-level shader that you need you                                 have complete parity and it all works so                                 it's a nice easy way to ease material X                                 into your workflows and get really high                                 good results very quickly I would like                                 to acknowledge and thank the project                                 team ILM who did all this work thank you                                 to those folks and the obligatory we are                                 hiring so if you would like to join our                                 merry band of people at all five ILM                                 studios across the world now please stop                                 by the Disney Studios weekend room for                                 attend and that's it for my talk thanks                                 again                                 like to bring up a Henrik to talk about                                 agriculture and design products                                 okay so I'm gonna give you a quick                                 update on the talk we gave last year at                                 the ball around using material acts for                                 architecture and design so I work in the                                 platform group at all risk where we                                 develop graphics technology for a lot of                                 our different products across our                                 different industries and yeah we have                                 well over a hundred product at all risk                                 it's not just max Maya Arnold the media                                 and entertainment side most of our                                 products are actually for our other                                 industries like AAC architecture like                                 this building I created in Revit and a                                 product design and manufacturing like                                 machine like this and obviously we need                                 materials for from all these different                                 products so one thing we're looking for                                 our orders is standardizing or rational                                 rationalizing all our types of data                                 materials being one of them so                                 preferably we want to see one standard                                 that we can use across all all our                                 industries and obviously there's been                                 great work on a media and entertainment                                 side especially from the Mayan oral team                                 Rama's here Alex so it makes a lot of                                 sense to to use material acts across the                                 board for all industries and we really                                 want to look for open standards and open                                 source as much as possible so that's                                 another reason why why material access                                 is really attractive for us and like a                                 unit I mentioned we've had this                                 collaboration since                                              something we've been working on for a                                 while                                 so I'm not going to touch on the                                 immediate entertainment side like the                                 management before we have a full session                                 tomorrow in our vision series where                                 we're gonna dive deep into that side so                                 I'm going to touch on the on the left                                 side here or a/c and manufacturing side                                 of things so last year at the both we                                 gave a quick proof of concept demo on                                 Kanban org this workflow going from                                 Revit into max unity and using substance                                 and rendering it in various different                                 renderers so if you're interested you                                 can you can check out the slides from                                 from last year and what we've been                                 working on this year is converting all                                 our existing materials                                 so we have a share material library that                                 we use in all the products you see down                                 here which is AutoCAD any mentor Revit                                 max fusion Navisworks and infraworks and                                 we just call the more risk materials so                                 we're mapping that to use material X and                                 standard surface so standard surface as                                 the common people are modeled for for                                 all this so the the PPR classes that we                                 used to have you know before in our                                 library and we've created no graphs and                                 that Maps those two to stand the surface                                 and all of this is eruption material X                                 and this is the simplest class is metal                                 but we have the similar mapping for all                                 the classes or materials like opaque                                 layer transparent and so on so now we                                 can render all the materials in from                                 Revit and in fusion                                                example in my ass taking the diffusion                                 materials and opening them in Maya and                                 you know he just works out of the box                                 with a with a material X and standard                                 surface representation and of course as                                 is representing the no graph the no                                 graph automatically shows up in in Maya                                 and you can continue working on it                                 inside of Maya which which is a really                                 nice benefit of this type of                                 representation and yeah                                 since the node graph is is you know what                                 we use to transport and then the                                 material X document not only can we open                                 in Maya it obviously shows up in                                 material X view and you get all the                                 parameters exposed and you can tweak                                 them and we can open it in our node                                 graph editor locked of X which we'll                                 talk more about tomorrow so you can                                 continue working on the material it's                                 not baked down to something that you can                                 just pass around between renders you can                                 actually continue working on it in                                 different DC's like the last year we                                 showed unity and you you know get it                                 into the unity no graph editor so that's                                 one of the really strong benefits of                                 material X and using that level of                                 abstraction for for material transport                                 so a couple of things that we've been                                 working on that we need for for                                 rx                                 library one thing is units so Eunice is                                 very important like in this example down                                 here to the right and you have a you                                 know a real physical material swatch                                 that you want to represent so in this                                 case it's you know it's                                                 and you want to define that in your                                 material so when are used to create                                 materials usually have you know a real                                 physical you know material they don't                                 want to match and also our products have                                 different working spaces and as you move                                 your assets or aggregate assets from                                 different products you want to have that                                 work automatically so our current                                 proposal is to treat unit similar to                                 what we have four color spaces in MMC                                 relax so you have a working space whips                                 which is going to be the default for                                 them for the document and then you can                                 optionally override that for any                                 individual parameters yeah                                 if needed so this is currently working                                 progress but this is something that we                                 would need to support our current                                 material library another thing that                                 we're working on is GLSL es backend so                                 WebGL is a very important platform for                                 us all our design products can export                                 you know they're designed to our shared                                 web viewer which we call the forge                                 viewer and and this is also something we                                 expose a third parties so they can build                                 custom web solutions on on top of that's                                 a text ax or like this configurator here                                 for for shares and so that's another                                 thing that's coming up so that's what                                 we'll do two main things I wanna give                                 special thanks to to Ashley and Bernard                                 and Roberto on on our team that's doing                                 most of the work on the architecture and                                 design side of things and of course                                 special thanks to Jonathan and doggin                                 and everyone at Lucasfilm and ILM for                                 for the great collaboration we have on                                 material X and yeah two things I want to                                 mention before I wrap up we talked about                                 standard servers quite a bit already in                                 in previous presentations we published                                 the white paper on that and we strongly                                 encouraged                                 everyone to you know give pull requests                                 and comment on that so we can all work                                 together in improving that specification                                 and it's on github github or risk                                 standardized surface and like Jonathan                                 mentioned we have a reference                                 implementation in material X so you can                                 use that IRA box and you will you know                                 automatically have this PBR model                                 working in all the renders that support                                 material X and last thing we have the                                 vision series tomorrow we're we going to                                 talk much more on the Emma nice space                                 when in Jonathan and they've Larson from                                 from Adobe so he are not I'm from                                 Lucasfilm and David Larsen from from the                                 substance team I was going to talk about                                 a many worthless so thanks a lot                                 [Applause]                                 all right so that's the end of the                                 prepared content since this is a birds                                 of a feather meeting we're going to                                 devote a lot of time I've got                                            on the clock before we run out of the                                 thing but I think we might be able to                                 stay a few minutes later if there's more                                 questions or discussion or things that                                 you guys want to bring up things that                                 would be good additions things that you                                 wondered why the heck did we do this or                                 just whatever I just want to open up the                                 floor you know ask questions about our                                 presentations you can ask the speakers                                 any questions so any questions uh happy                                 can you spell out like the current and                                 potential future relationships between                                 material X and USD where the lines are                                 and how they coexist and like what the                                 evolution of that is likely to be sure I                                 mean I can I can jump in with some of                                 the so we've been working a lot with                                 spiff and Jeremiah's on the USD team -                                 Ally on the the USD shade portion of USD                                 with material acts and I think this at                                 this point they're very nearly                                 isomorphic to each other and the idea is                                 that when the USD team does move forward                                 with a portable Network description that                                 that description will be material acts                                 right now they have these these sort of                                 early node descriptions that handle the                                 render man node set and that handle USD                                 preview surface and a handful of friend                                 nodes that interact with USB preview                                 surface but there isn't there isn't a                                 truly portable no description of                                 materials but I believe the plan is as                                 it has been that when that is                                 implemented it will be material acts                                 oh come on don't be shy                                 okay I guess we did a great job again I                                 would encourage our folks to come to the                                 thing tomorrow afternoon's the Autodesk                                 vision series that shows up in the                                 program of the Zipporah session it's                                                                                                       and we hope to see you all there                                 and if you haven't gotten a shirt or                                 stickers we have them outside so make                                 sure you get one                                 [Applause]
YouTube URL: https://www.youtube.com/watch?v=pQ11A9i0-no


