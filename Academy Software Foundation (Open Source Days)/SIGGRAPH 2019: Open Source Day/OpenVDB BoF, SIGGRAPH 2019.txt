Title: OpenVDB BoF, SIGGRAPH 2019
Publication date: 2019-08-19
Playlist: SIGGRAPH 2019: Open Source Day
Description: 
	Discussion on topics related to OpenVDB, including new governance as an Academy Software Foundation hosted project, ideas and plans for future development, and Q&A. Part of Open Source Day at SIGGRAPH 2019, hosted by Academy Software Foundation.

Speakers:
Ken Museth, Weta Digital 
Dan Bailey, Industrial Light & Magic
Jeff Lait, SideFX
Nick Avramoussis, DNEG
Peter Cucka, DreamWorks
Captions: 
	                              all right so hi everyone my name is Ken                               Moo sets I am head of simulation R&D at                               Wella and the chair of the Technical                               Committee for open MIDI be this is                               actually the first time we've we've done                               many buff before on open MIDI but it's                               the first time we've ever done slice so                               we'll see how that goes                               it's normally just a sort of a very                                improvised live session but these are                                the the member of the technical steering                                committee we have representations from                                DreamWorks Peter cuca one of the                                original developers deflate from side                                effects then Bailey from ILM and Nick                                from doneck and I'm representing whether                                we have been meeting very regularly oops                                the lights don't it's not shifting                                anymore so we've been meeting pretty                                regularly about once a week for the past                                seven eight months nine months and I                                would say the prime focus actually so                                yeah the minutes of course are in the                                github repo as well if you're interested                                and we also have listeners from I                                believe Intel and Autodesk and the                                minutes are uploaded to the Cape report                                in case you're interested so the main                                focus in these past nine months has been                                of course adoption by the Academy                                Software Foundation so we spent a lot of                                time talking about processes documenting                                things actually these are some of the                                things that Daniel already covered but                                we also did two releases we did one                                major release and follow up a minor                                release most of these are not really                                focusing so much on features as probably                                the biggest change was the the change                                from from vanilla make to see make but                                there's a lot of bug fixes optimizations                                and other changes that you can see in                                the change notes and we're currently                                working on a another minor release                                    that will have many new features in it                                and then we've also started                                collaborating with new external                                companies like Autodesk and NVIDIA so                                and then yeah for the big the big news                                of course was last week we were adopted                                as a full member                                we left the incubation stage which was                                quite exciting this is just talking                                about some of the things that we are                                planning to put in                                                      decide on when this will happen but it                                will hopefully be a couple of months                                after cigarette so the biggest the                                biggest new addition to this release I'm                                putting on the spot here actually is ax                                you've committed all right we talked                                about it so we actually want to talk                                about what it is very briefly or so yeah                                so I did a bit of a talk about this on                                Sunday for the up MIDI B course but for                                those that don't know Adina we developed                                something called a X which we funneled                                together with VBB which is a                                just-in-time compiled expression                                language to more easily allow you to                                interface directly with BB primitives so                                that's point solving to be voxel values                                and the whole idea is that you can it                                gives you that window just to start                                writing fast paralyzed herbal kernels                                over VDB data it's been pretty useful                                DNA it came up as we decided on it as a                                solution because of various pipeline                                related issues with plug-in V DB into                                countless D CCS and in-house software so                                and yeah we've just recently done a null                                point one release of ax it currently                                exists as a standalone piece of software                                on D next github so please feel free to                                go check it out and yeah the entire plan                                is for this to go into V DB as another                                complain                                which you can build it the only other                                dependency that it brings in is LLVM and                                I think it's a good freeway with you                                there are also new tools to compute                                distance functions more robust than what                                we currently have today there are                                sharpening filters Peters working on                                [Music]                                we have improvements in delayed loading                                from from Dan LM and then I'm expecting                                you to to add more improvements to the                                point support sort of in general and                                 then so this is this is sort of                                 outlining some of the things that is                                 sort of is under construction so to                                 speak we're not committing to this yet                                 but we're hoping this will come in the                                 libraries in probably a next major                                 release so true outer core so currently                                 really be supports delayed loading which                                 means it will only load what you are                                 touching in the client code the problem                                 is it's not unloading it again so the                                 the highest sort of watermark in terms                                 of memory footprint is whatever you have                                 ever touched so as you can imagine if                                 you're trying to render something and                                 the and the raytrace I actually touches                                 every single voxel well the maximum                                 footprint will be whatever the volume is                                 as a whole so this is an attempt to also                                 do unloading again so you can you can                                 you can render a volume with a with a                                 pre fixed memory for inverse Moll memory                                 footprint so this only works for                                 read-only applications we're also hoping                                 to add some more high-level applications                                 especially in the problem space of                                 fluids fluid solvers and we're also                                 talking about distributing potential                                 distributing VDB so using MPI message                                 passing interface for                                 simulations and then we're talking to                                 Autodesk so order disk or the Bifrost                                 team has developed a multi resolution                                 grid and they have offered to put it                                 into the library so we're in talks with                                 them to see if that's possible or what                                 that entails but that's quite exciting                                 that's it for me who's hello I'm Jeff                                 late I worked for side effects software                                 but side effects has had a long history                                 with VDB because we were like when the                                 first integrators it of it in directly                                 into a DCC and so thus we ended up on                                 the technical steering committee as well                                 to try and guide this project and it's                                 been quite an interesting experience                                 working with this so there's going to go                                 through the various things that we ran                                 into in this process the first is as                                 computer programmers you always have                                 tons of acronyms that you deal with but                                 there's a whole bunch of new ones that                                 came across here the first one actually                                 is a SWF that's W stands for software                                 the things been explained earlier I'm                                 actually curious if it's pronounced a                                 SWF for a swift because I've heard both                                 now can I have hands-free SWF ok hands                                 for a swift I think it's a SWF I'm sorry                                 it says it's been I think we have a                                 quorum here has been voted that way the                                 TAC is the technical advisory committee                                 and that seems to be the organization at                                 the top and below that each project has                                 the TSC which is a technical steering                                 committee and we have the entire                                 technical steering committee here for                                 VDB so when you ask questions were                                 actually all here and then we get into                                 licensing issues which gets very                                 exciting                                 DCO is developer certificate of origin                                 and this is where each of the year                                 commits you have to sign them off and                                 this is because the lawyers leave that                                 the commit history is not an accurate                                 proof of who actually committed it they                                 wanted actually listed of who actually                                 committed with commit log unfortunately                                 means if you make a commit and mess that                                 up you get to roll everything back and                                 try again but you know you learn                                 eventually CLA is for though contributor                                 License Agreement there we go and so                                 this is what every contributor needs to                                 have                                 if you actually look up on the Internet                                 DCO and CLA they will say which one                                 should you use and the answer is we get                                 to use both of them but so so that's                                 that was very interesting as PDX though                                 is a nice acronym that solves a lot of                                 problems because this is a way to deal                                 with licensing in in a consistent manner                                 where you're not dumping at tons tons of                                 boilerplate on every file and then                                 worrying that you've dropped the knot                                 somewhere and changed completely the                                 meaning of your license so with that in                                 mind we can go actually look at licenses                                 because one of the processes to graduate                                 is the the source code is swept four                                 licenses defined and if there's any                                 difficulties because everything was                                 wrapped with the dreamworks copyright                                 when VDB first went into open source and                                 then this result in some stuff for                                 example that side effects are                                 contributed to be double licensed so it                                 was just wrapped twice which apparently                                 is perfectly legitimate but those                                 licenses might be slightly different                                 like there ones in MPL                                                   a PSD with extensions are ones a                                 proprietary license and you're wondering                                 what's that's doing in there so we had                                 to go through and resolve these so you'd                                 have something like this a double                                 license file and then we'd have to cross                                 out all the special side effects stuff                                 because it's the same as a stuff above                                 and so we just have to make sure the                                 owner of that particular copyright side                                 effects gave permission for it to be                                 removed the next level is one that we                                 haven't done because we need permission                                 from Dreamworks directly to remove it                                 but this is when you have extensions and                                 clarifications of a license this causes                                 a hiccup on anyone trying to use your                                 project so when the strong                                 recommendations is that you restrict it                                 to just the actual licensing question so                                 there's no endorsement clauses and the                                 no liability disclaimer which people                                 like to put in there extra because they                                 want people that really know it's there                                 but then anyone who uses it needs to                                 double check so the the simplified forms                                 you can get it right down to something                                 like this in that SPD X line there it's                                 the one that allows it to link directly                                 to the MPL world without having to                                 dumping the whole license so from that                                 I'm going switch to version numbers                                 thanks Jeff hi I'm Dan from                                 I'm gonna talk a little bit about the                                 version numbers goose this is something                                 that comes up quite regularly about how                                 VDB is integrated into Houdini I think                                 it's a pretty elegant solution so I                                 thought I'd explain it in a bit more                                 detail firstly in terms of the three                                 version numbers that we have a major                                 minor and a patch version the major                                 number means the grid or transform ABI                                 so we'll only change the major number                                 once a year in line with the VFX                                 reference platform and that's any time                                 that we essentially change the size or                                 the layout of a VDB grid in memory the                                 minor version means any changes to the                                 API that don't touch the ABI and finally                                 the patch version is any changes that                                 needed to touch the API nor the ABI and                                 there's also an implication for the file                                 format versions as well but I didn't                                 cover that here and then just to look at                                 how that integrates into Houdini we've                                 obviously got open BBB integrations into                                 many other DTC's so I thought this is                                 particularly relevant if you're if                                 you're a vendor looking to integrate VDB                                 as well but essentially we have the kind                                 of on the on the left here we have the                                 native Houdini libraries and in blue is                                 the is the core library and then in the                                 orange we have the different kind of                                 Houdini toolkit libraries so we                                 essentially have first first thing that                                 we do is we make sure that the libraries                                 are suffix twith a kind of vendor suffix                                 like under Scorcese and then the the Lib                                 Houdini geo includes a bunch of other                                 stuff including the the VDB primitive                                 and then the soft v DB DSO is                                 essentially the equivalent of everything                                 on the right there so these two sides                                 are intended to be sort of equivalent                                 and if I show you what the actual                                 namespaces that are being used it should                                 become clear how this is how this is                                 helpful so for example in Houdini                                      which is what I'm using as a reference                                 here has the namespace v to says e                                 whereas if you install the open source                                 library we're actually installing                                     here so it's the later major version so                                 it's a new API so what we actually do                                 here is we have an api compatibility                                 flag where we can say let's compile it                                 but for ABI                                                              incur a copy passing data backwards and                                 forwards between kind of native Houdini                                 nodes and our                                 nodes which is really helpful and then                                 just a kind of minor clarification as                                 well because I've heard a few people get                                 a little bit confused by this                                 so because of course we're building a                                 later version of all of the Houdini                                 toolkit it's not possible to build that                                 against the version of open B DB that                                 shipped with Houdini because they are                                 going to be not in sync and it's gonna                                 be quite hard to sync those things up so                                 the simple solution is just to install                                 your own core open source library and                                 then to build against that the fact that                                 there are two kind of core libraries                                 available isn't really a big problem as                                 long as you can sort of easily pass the                                 data back and forth and then just to                                 highlight that of course the difference                                 in the version numbers the fact that we                                 were able to use the                                                     V DB and concurrently with a much later                                 release that was done just a few months                                 ago and have the to kind of play nicely                                 together is really cool thank you                                 one of the other processes involved to                                 graduate was to complete their best                                 practices badge and part of the best                                 practices badge was we needed to have a                                 security policy and a security expert                                 and the security expert search was a                                 little bit difficult because it needed                                 to be someone on the TSC that would be                                 knowledgeable about security and no one                                 was volunteering to be identified as the                                 person that was knowledgeable about                                 security so our solution mm-hmm                                 identified you so the solution is to                                 have a have a secret security expert so                                 we do have a security experts we can                                 provide a zero knowledge proof that                                 there exists a security expert but we                                 won't identify the exact identity of the                                 person so so having a security expert                                 the the the teamwork to work together                                 develop a security policy where we try                                 to address what it meant for security in                                 the VDB context because a lot of the                                 best practices was talking more about                                 web services where you've got crossed                                 cross-site scripting issues and things                                 like that but those obviously don't                                 apply to B DB so we said okay what are                                 the attack vectors for V DB and what are                                 the security things we will identify as                                 being serious and which ones will we say                                 are acceptable risks                                 so the first question is with files and                                 we really think that when you read a VDB                                 file they get from an untrusted source                                 it shouldn't execute arbitrary code that                                 seems pretty straightforward to make                                 that a hard requirement but it might run                                 out of memory and it might run forever                                 we are not going to guarantee our file                                 format doesn't have a way to basically                                 allocate infinite memory because when                                 the purposes of EDB is to compress giant                                 datasets into small amount of data so                                 when you expand it a memory might become                                 huge so this means in particular that's                                 probably really easy to make a denial of                                 service attack with VDB files if you                                 don't set you limits or something that                                 around it when it comes to the API where                                 again it might run out of memory and run                                 forever if you check if you make your                                 voxel size zero or something like that                                 are very close to zero and then if the                                 parameters are invalid it might execute                                 a random code and this is partly because                                 V DB is designed for speed first of all                                 we're not going to validate all of your                                 input if you're trying to access a                                 certain grid location that doesn't exist                                 we might just access random memory and                                 because it we very much have to put it                                 on on your shoes there so this is more                                 just saying that we are not taking                                 responsibility for this layer of the                                 security and that has to be at a higher                                 level but this caused us to think about                                 another aspect of security besides just                                 running oxic Wrentham code namely the                                 question of redaction and this is when                                 you have a file you won't give it to                                 someone else but you don't give all of                                 it to someone else and this might be                                 either on disk or maybe even in memory                                 or in process to another untrusted                                 application somewhere else and I thought                                 redaction was a well simplified thing of                                 how to redact PDS for example you just                                 draw black boxes over it right or you                                 change the background color to block but                                 yes so people are still making those                                 redaction errors with PDF today so                                 hopefully we don't make those redaction                                 areas errors with VD B's because in                                 particular VD B's have a strange                                 property where each voxel is storing                                 whether it's active or not and what its                                 data is so you can have the case where                                 you zero out all the data so it                                 disappears but the activity field still                                 tells you what that surfaces or                                 conversely you might deactivate a voxel                                 so it disappears but in memory it will                                 still have the actual value there so if                                 you want to                                 we docked something either rebuild the                                 grid directly with the values you want                                 to keep which is probably the safest way                                 or make sure you zero in activate and                                 then prune all the inactive tiles so the                                 higher-level quality doesn't exist I'd                                 like to just show how that works just to                                 to show the reduction does mean                                 something so this is the squab it's half                                 a squid half a crab and I've turned it                                 into a V DP and now I ran a wrangle and                                 I set it to zero so just zeroed out this                                 whole VDP so I'm like here you go you                                 can't tell what I have here it's gone                                 but I can just convert the topology into                                 a fog and use that to convert into a                                 level set and then erode that level set                                 and I've restored pretty much the                                 original squad so it's just to                                 demonstrate there is actually data still                                 bare so be careful with that the other                                 interest insecurity problem is                                 steganography which probably is not an                                 attack you won't actually protect                                 against because if someone's that trying                                 to leak data out this way you're                                 probably screwed anyways and so this is                                 steganography is when you can hide a                                 hidden message inside an innocuous image                                 and so like if I have a pixel image I                                 could put slight noise values that                                 provide my hidden message for someone                                 knows how to decode it so all the                                 standard approaches for images or voxel                                 betas would apply for V DB s like you                                 can either do like some large level                                 distortion and fast for it like in                                 Fourier space or maybe you can put                                 individual speckles in at the noise                                 level but there's a kind of a neat trick                                 you can do a scientist ins fields where                                 when we reconstruct the signed distance                                 field for display we only really use the                                 voxels immediately beside the zero                                 crossing but we have like a                                     bandwidth around there that we actually                                 store because you know we need it for                                 more accuracy or we're not growing                                 around and those those things still hold                                 value so in this case I've got two grids                                 and this is the same grid the one on the                                 left it looks like a plain flat box but                                 if I add a slight bias to it of like                                                                                                         values suddenly the secret message pops                                 up because it's actually stored in the                                 out-of-band foxhole values so I thought                                 that was kind of interesting                                 and then the last slide on this bit and                                 then we're gonna hand over to Nick to                                 talk a little bit more about see make                                 side of things I just thought it'd be                                 useful to put together a slide to                                 mention kind of how you'd actually                                 contribute to open VDB we very much                                 welcome external contributions to the                                 library but I thought I'd just quickly                                 run through different bits and pieces                                 that are involved first of all if you                                 are looking to contribute to open BD be                                 please to feel free to reach out to us                                 and kind of ask whether your                                 contribution makes sense whether it's                                 something that we think kind of might be                                 a good fit for the library we're more                                 than happy to kind of answer those types                                 of questions before you've done a ton of                                 work to try and get things in the next                                 step obviously is to fork the actual                                 repo you'll need to sign the CLA either                                 an individual one or a corporate one and                                 then finally making a pull request and                                 I've just quickly kind of listed all the                                 different sort of CI things that we                                 check forward and make sure that                                 everything's okay so typically what will                                 happen is if you're starting out of                                 fresh and you make a pull request a                                 bunch of things will fail because you                                 know you've got a few warnings in place                                 or you know it doesn't work in a                                 particular situation or you've                                 accidentally got a few trailing spaces                                 and this generally cannot catch people                                 out so I thought I just mentioned that                                 this is kind of what we test against to                                 make sure that everything everything                                 kind of works and I expect they will                                 gradually increase our CI to kind of                                 handle different situations and                                 different things so hopefully we'll                                 automate some of that process of making                                 sure that everything is kind of                                 sanitized before we can kind of accept                                 things in so yeah with that I think                                 we'll Hanover to Nick to talk about so                                 you making                                 you should keep                                 cool everyone and in case I forgot to                                 mention before my name is Nick and I'm                                 from Dean egg and as part of the                                     release we spent a lot of time looking                                 at the existing build systems in VDB and                                 that resulted in a new revamp to see                                 make system so you make already existed                                 and I'll touch more on Envy                                 I've touched more on that in a second                                 but the idea here was to well we                                 understood how important it was for C                                 make and well we understood how                                 important it was for build systems like                                 C made to exist in these kind of                                 projects to make it more portable and                                 easier to build not just in studios but                                 at home as well so hopefully this kind                                 of first pass this first refactor has                                 solved a lot of issues with the current                                 C make the previously make system so                                 first of all massive thanks to Nikolas                                 and Frederick who never had the pleasure                                 of meeting but our two contributors to                                 VB be back in                                      yeah Nikolas who implemented the first                                 part of the c-max system and without                                 them it would have been impossible to                                 really do this refactor so as I                                 mentioned it's been heavily factored for                                 obv                                                                      big PR which is if you're interested                                     so                                                                       to get in is one of the biggest you know                                 PRS that has gone into VB in terms of                                 the amount of collaboration on it the                                 amount of feedback but yeah I do want to                                 mention that and I'll positive a                                 dramatic effect in case I'm speaking too                                 much for someone but and none of us are                                 see make gurus okay so this was a                                 learning process for us all and I really                                 encourage the community to if you're                                 going to be using VDB to give us                                 constant feedback on this because yeah                                 there's gonna be bound to be something                                 that we've done perhaps not as standard                                 as C make would like and one of the                                 beauties of C make Bulls one of its                                 curses is that it's very easy to do                                 basically anything you want to break                                 from tradition of what C make allows you                                 to do                                 oh please do get in touch if you find                                 something which is not as he was                                 consider standard with the build system                                 so the entire process was tested on a                                 variety of platforms one of the biggest                                 things that keeps coming up is Windows                                 hopefully it won't anymore I don't know                                 we'll see but all the CI that has been                                 you know touched on just now runs on                                 Linux and Apple I don't think it was on                                 Windows yet does it yeah it does okay                                 cool so old Linux and Windows right okay                                 so yeah not Mac as of yet but I hope you                                 that's in the near future and it                                 exclusively uses the new C make build so                                 we've progressed from the old make files                                 but we're constantly finding                                 improvements for different and different                                 you know build matrices and different                                 platforms it's very difficult to test                                 everything especially because BTB comes                                 with a wide set of dependencies which                                 I'll touch on in a second and so                                 obviously if anything does crop up we're                                 constantly adding improvements there so                                 all this documentation is online links                                 at the bottom there we had a lot of                                 documentation for the make files                                 previews previously but this is now                                 online and not only has kind of an                                 introduction to what C make is how you                                 should use it how you can look into your                                 projects how you can you know deal with                                 different errors that C make might crop                                 up but also a kind of a boast list of B                                 B's dependencies what that relates to                                 different DC C's what you need to bear                                 in mind when trying to install VDB                                 relating to different dependency                                 versions so hopefully this documentation                                 it will alleviate more problems in the                                 future that people run into with                                 incompatible versions and things like                                 that so that is kind of the ideal like                                 bash script that you want to run when                                 building V DB that's kind of what we                                 wanted to get to just the idea that like                                 you've downloaded VD b I just want to                                 build it and tell me you know                                 progressively what's going wrong would                                 like for both information that will                                 allow me to help help me solve this                                 problem the idea being that if C make                                 succeeds that's it like good job well                                 done now you can run making it's going                                 to work so that was the idea behind this                                 new C make system so to help with                                 handling dependencies and handling                                 like look we have a whole range of                                 dependencies that we do becomes with                                 implemented a whole range of extensive                                 Stan extensive search paths for standard                                 systems included like including the                                 three platforms as I said previously in                                 terms of the default components that are                                 built with vbb we only enable the set of                                 components that would make VDB operates                                 to its fullest shall we say so the core                                 library need to be printing the Python                                 modules encompass dependencies which are                                 usually standard on people's systems                                 without going too crazy so for example                                 VDP view requires quite a few heavy                                 department but a few other dependencies                                 that aren't standard you notice again                                 require cpp unit stuff like this isn't                                 usually installed so again the whole                                 idea being that we should wanna you know                                 get me to be up and running as quickly                                 as possible there is quite a as I                                 mentioned many because of a lot of                                 dependencies in relative to other                                 open-source projects so this was one of                                 the beauties of see make is allowing you                                 allowing us to help kind of guide the                                 user of what exactly should be installed                                 what if there's any problems with                                 existing dependency versions but also                                 being able to completely skip that                                 process if you need to and customize the                                 dependency options and configurations                                 and depending on what you need and so                                 yeah just just to quickly go over this                                 these are kind of a boast list of all                                 dependencies that BTB comes with and                                 obviously you only one compiler and c                                 makes required and but all these if you                                 want to build the entire library all the                                 binary is the Python module so you make                                 the Houdini everything these are all the                                 dependencies that you need and regarding                                 the default options these are the only                                 the only ones that you actually need                                 enter to build the core library need to                                 be print and in the python module so                                 here's a quick example of just running                                 so you make now this will be the new                                 scene maple system looks like standard c                                 make prints to begin with if you know                                 your compiler versions etc etc it will                                 print the version of BTB that you're                                 building this is also true if you're                                 using B DB it sorry if you've already                                 built BBB and you're using it from                                 another application it will request and                                 try and configure the VB ABI and API                                 versions for you                                 and just off that is an example of what                                 this emic system would look like if it                                 can't find a dependency on your system                                 and so because we're all from studios                                 and we don't have too much experience                                 you know well it's more we need that                                 customizable control to allow us to link                                 to different dependencies and different                                 installation locations especially when                                 you're building against different DC C's                                 so we have developed a system where if                                 you can't find a dependency you have the                                 ability to provide it a route location                                 for that dependency so in the previous                                 example can find Ireland base you can                                 either provide a installation directory                                 where the libraries and include desist                                 paths include headers or install sorry                                 or you can provide them separately and                                 this latter point is quite important for                                 things like turn against Houdini where                                 things are deployed in separate folders                                 not necessarily in the same kind of                                 hierarchical like gnu structure of like                                 was it included in lib and these are                                 prioritized over your system search                                 paths so you can completely customize                                 the installation so regarding Houdini                                 one of the common things that people                                 have a constantly commented on forums                                 with people trying to running into                                 difficulties building BBB is just edenia                                 apprentice and it's super super easy to                                 to set up leave Yates the problem with                                 downloading that big dependency list it                                 comes with a lot of those standard                                 installations and so as you can see                                 Eenie comes with those and all you                                 really end up needing a see maker C++                                    compiler or for the time being and boost                                 and hopefully the boost thing actually                                 will go away but there's some work there                                 to be done so by default if you enable                                 the Houdini plug-in it will come                                 reconfigure all these dependencies for                                 you or even let's say you don't want to                                 build a new plugin but you have                                 apprentice installed you can just set                                 usually need to be on and provided aim                                 for the location to your Houdini                                 installation and it will configure                                 everything for you so no need no hassle                                 that of downloading custom dependencies                                 this is just a typical example of what C                                 make come on looks like now so a lot of                                 these options default to honor just                                 Blissett them here to be verbose the                                 the last four options they're V to be                                 print V to be LOD etc I think V DB                                 prints the only one that defaults to on                                 as I mentioned so it those last three                                 would be required that the others not so                                 much and yet this is this is this would                                 be this is commonly how I'm building it                                 on this machine providing it with any                                 routes on a Mac freighting an                                 installation prefix and then the                                 components I want to use yes just in                                 last tidbits I didn't know how much time                                 this was going to take so I just wanted                                 to cover a couple of other things there                                 are a suite of Advanced Options as well                                 that we've incorporated into the semuc                                 system and probably a lot more that we                                 need to do as well for example one of                                 the things I'm running into at the                                 moment is I want custom control over                                 where different modules get installed so                                 behind reasons tilt here the core                                 plug-in core library installed here so                                 there's there's lots of other extensions                                 to the CMake system we need to do but                                 just to go over a few advanced ones so                                 clang GCC and ICC are all supported and                                 with that you can unable to print strict                                 compilation so if any warnings get                                 treated as errors                                 lots of warnings are still present in                                 the library so we are actively trying to                                 finesse all that outs use system library                                 paths is helpful for users at home who                                 just want to be able to build against                                 system dependencies you can also skip                                 all of the kind of validations that                                 we've implemented if you so choose it's                                 at your own risk but we don't want                                 everyone to impose any you know like                                 restrictions unnecessarily so using                                 deprecated API order skipping those                                 checks is possible and finally and just                                 recently enable support for concurrent                                 malloc corporations which already                                 existed in to make files birth have also                                 transitioned over so that's TVB malloc J                                 malloc I think that's it yeah                                 and that's it from me I think cool                                 thanks guys this is the part where we go                                 to a live session and I think one of the                                 first questions we'd like to ask you                                 guys well actually how many of you guys                                 are using OB to be honest all familiar                                 with most that's cool so yeah I'm                                 curious to know what would you like to                                 see in the library and what you feel is                                 missing what's not working                                 I'm hoping so we had this session last                                 year and some of the feedback regard is                                 actually being reflected in what we're                                 working on like those comments about                                 adding multi-resolution supports to the                                 bread the late loading was also brought                                 up so we're certainly working about                                 other other things that you guys would                                 like to see                                 right                                 this is a classic problem and it's                                 actually something that we we worked on                                 at DreamWorks me hi Alden one of the                                 original developers came up with a very                                 clever trick so and it's actually                                 exposed I believe in one of the Houdini                                 notes so you can when you so the program                                 of course is when you go from a mesh to                                 a voxel representation you are softening                                 up sharp edges that's just a fact                                 but you can actually retain the sharp                                 edges when you mesh back again so in the                                 there's there's a node that takes a                                 volume and it has a second optional                                 input which is actually your D original                                 mesh if you if you feed it in the                                 original mesh before you started                                 fracturing it it will use that as a                                 guide and actually retain very sharp                                 corners so like cool I think it's                                 exposed in this up isn't it yeah i know                                 the trolls there oh yeah that one will                                 be tried a long time ago                                 right                                 are you thinking in terms of like a                                 brick map MIT MIT map like okay                                 right                                 [Music]                                 I definitely think it's an interesting                                 idea I'd not sure exactly what it would                                 entail but but I can't tell you that in                                 my opinion we're open Willoughby is                                 lacking behind is actually in terms of                                 rendering support so we've also had                                 people ask us for support for a motion                                 blur volumetric motion blur temporal                                 samples so it would be interesting if                                 you could yeah I know you guys figure it                                 out but right yeah yeah                                 that would be fantastic yeah yep I think                                 I mean I'm speaking for all of you you                                 should shut up but I don't think we have                                 rendering experts on the steering                                 committee so we are bit weary sort of                                 proposing ideas without actually having                                 experts so yeah if you guys could help                                 us I will be fantastic that's very cool                                 well you wanna well you also have                                 something you know they don't so hi I'm                                 will from Nvidia I don't have any                                 beautiful slides nothing like that                                 but we've been working on better                                 compatibility with open VDB and really                                 looking at exactly what minimal minimal                                 ABI breaking changes we can do to                                 leverage CUDA with open B DB and our                                 initial experiments have been very                                 successful so this is something that we                                 know is is very important there are a                                 lot of people out there with with GPUs                                 that they want to harness with their                                 open VB data sets the goal is to be able                                 to take existing                                 open V DB and run some of the                                 low-hanging fruit which would be a lot                                 of the you know basic for each                                 operations or dilations                                 to morphological changes filtering                                 things like that all on the GPU                                 there'll be no nothing Hardware specific                                 about it you're still program open B to                                 be exactly the same as you do you'll                                 just have to compile things with                                 MVCC compiler which based on clang it                                 should be theoretically seamless so                                 that's that's something with we're very                                 much focused on doing right now and the                                 changes that are required to open VDB as                                 it stands now are quite subtle and I                                 think there's probably a way of doing it                                 that you wouldn't need to see any change                                 at all if you weren't going to use any                                 of this CUDA those CUDA side of things                                 example the abstraction of execution                                 system and the abstraction of the                                 allocation system would need to occur so                                 there may be you know some small changes                                 especially down at the lower levels like                                 towards the lead buffers and things like                                 that where we have to actually template                                 in the allocator type but I think we can                                 default to the existing mechanism so it                                 should just work with your your build                                 systems and your compile settings                                 already and that's if you have any                                 specific questions about what we might                                 do I can't I can't say everything here                                 obviously but you can come and find me                                 and we can chat about it if you have                                 specific needs and requirements                                 regarding this aspect so this this might                                 tie into it because I don't know what                                 tree topology are necessarily planning                                 on using because we've been looking                                 we've had we have the complete template                                 at the possibility of change in your                                 tree branch size at each level of the                                 BTB hierarchy but we found in practice                                 we've just locked it down and haven't                                 wanted to change it and we're looking at                                 giant build times and using tons of                                 memory for VDB so we're saying is there                                 some of this we could improve if we                                 start d templatized and stuff so one of                                 our questions is do people use different                                 tree topologies or would you be upset if                                 we only had one tree topology or do you                                 know what I'm talking about so so VB is                                 a tree right and and you can actually                                 design your own tree you can decide how                                 deep it is the size of the leaf nodes                                 even you know size of intermediate nodes                                 and because it's because                                 it's very configurable it also means                                 it's slow to compile and as Jeff said we                                 often been thinking like who actually                                 changes who actually plays with these                                 parameters can we just lock them down or                                 is it I'm actually curious is it just a                                 leaf notes or is it the whole thing                                 okay okay I think okay right right                                 something yeah yeah yeah I mean in                                 principle you could actually take a VDP                                 and turn it into an octree but we don't                                 know anybody's ever done that                                 right right okay we might be looking                                 into that so I'm the fall guy the other                                 question is custom types so like you                                 have a grid of we have built-in grids                                 for like factory float and factory                                 double and float and double an int and                                 similarly with the point grid types and                                 I know as a DCC we ran into a trouble                                 where someone used an unsigned int type                                 that they added to their particular                                 build of evb so of course we couldn't                                 load it and it's not in the standard                                 either and so a question is how how                                 should we try and limit the number of                                 types we have so again we might be able                                 to pre-compile all these different types                                 or our people actually generate in new                                 types of grids so or do people know what                                 I'm saying so how many people here are                                 actually developing code with me as                                 opposed to using it a couple okay it's                                 open maybe is not I think the barrier to                                 entry is pretty high you know I'm                                 certainly the first to admit that it's                                 not an easy API or API to to work with                                 all right in this define you know say                                 for increased call this before it's call                                 this for vector                                                     course you don't put yourself in that                                 list you aren't called so that's why                                 we'd like to be able to say this is the                                 only set of grids that we've have                                 right                                 [Laughter]                                 good yeah and I'm assuming as a it's a                                 DCC you would prefer to limit the number                                 of types well it's not so much I want to                                 limit the number types as I want to                                  limit it to the ones that are in the                                  standard so if people push that back to                                  the b                                                                     of edenia will get those types and so I                                  guess if you need a custom type then                                  contact the TSC and we can adjust that                                  yeah and we'll just be passed with                                  flying data everywhere I mean it should                                  still move through the pipe but just no                                  one will know how to use it right                                  something I didn't mention in the in the                                  slide deck I just thought of it's worth                                  kind of bringing up one of the things                                  that we did over the last year is kind                                  of formalize the deprecation policy                                  which is basically what is going to be a                                  minimum version of everything that we                                  currently support if you download the                                  repo and the latest version of it right                                  now                                  and ultimately what we came up with us                                  we're going to support the current and                                  then the last two years of the visual                                  visual effects reference platform which                                  gives us a really nice way of kind of                                  dropping support for you know you've got                                  at least two years to move off that onto                                  the newer version of everything which                                  hopefully will will mean that as vendors                                  keep picking up the newer versions of                                  the VFX reference platform in studios                                  kind of lag behind with shows that the                                  delivering and things like that you can                                  still use the new features for a sort of                                  a period of time so as an example of                                  what that might mean we're currently                                  supporting the VFX reference platform                                                                                                       support for that at the end of this year                                  which means that we'll be able to use                                  C++                                                                 you'll need to need to we're already                                  using GCC                                                                 a relatively seamless transition that's                                  a useful one to mention and then I                                  thought it might touch on something that                                  Nick was saying earlier as well about                                  the different libraries and dependencies                                  and things we've been kind of talking                                  for a while about how do we reduce the                                  number of mandatory dependencies in BDB                                  so I thought it was worth kind of                                  highlighting that you know boost was one                                  that we wanted to kind of gradually cut                                  back on as more the standard library                                  supported the stuff that was that we've                                  kind of turned to boost to support and                                  things like TVB is is currently a                                  mandatory dependency and doesn't                                  necessarily need to be one of the other                                  areas that we've kind of talked about in                                  the past is something that might be                                  interesting is is and this is kind of                                  briefly mentioned in terms of texture                                  maps and things like that is the ability                                  to gather support                                                         you currently can't do and things like                                  that so I just wanted to kind of make                                  the pointer we're kind of thinking about                                  lots of these types of ideas but we're                                  very receptive to anything that you guys                                  are running into so if if you're willing                                  to kind of share                                  stuff that you kind of kind of run up                                  against then yeah definitely get in                                  touch with us and we can kind of factor                                  that into how we develop the library in                                  how we can i progress it and things i                                  know yeah i should point out that we hit                                  there's a mailing list set up by a SWF                                  for talking about it is that on my slide                                  Oh awesome                                  and so that's one way you can conjoining                                  in the conversation so we're at we got                                  two minutes left before we switch over                                  so last                                  no it's a good idea I think we certainly                                  thought about it I think that the                                  problem potential problem is that you                                  will have to maintain that right as you                                  as you as you modify values lower down                                  in the tree when when when I use syncing                                  up that statistics right yeah because                                  then the new tree has a state machine                                  right yeah                                  yeah                                  ya know it's it's not a bad idea at all                                  I mean we to some extent we're doing it                                  as metadata you know sometimes we bake                                  metadata into but that's global to the                                  whole grid so you just you just sort of                                  suggesting that we do that all right                                  thanks very much                                  [Applause]
YouTube URL: https://www.youtube.com/watch?v=iWGXFWmOvfc


