Title: OpenEXR BoF, SIGGRAPH 2019
Publication date: 2019-08-22
Playlist: SIGGRAPH 2019: Open Source Day
Description: 
	Discuss the latest on OpenEXR, a project hosted at Academy Software Foundation, and future areas of development. Part of Open Source Day at SIGGRAPH 2019, hosted by Academy Software Foundation.

Speaker: 
Cary Phillips, Industrial Light & Magic
Captions: 
	                              thanks for coming I assume that most of                               you are here because you want to talk                               about X arts itself I wanted to give a                               little bit of background about the                               Academy Software Foundation and what                               that means for the project we'll go over                               some of the recent stuff that's been                               going on and kind of how we got here                               the release that we're planning and some                                of the coming work and then most of the                                time will be opened up for a discussion                                about the future start with an                                introduction I'm Kerry Phillips I'm Rd                                supervisor at ILM I was around at ILM                                when Florian and ride and Drew and the                                others developed openexr from the very                                beginning I really had very little to do                                with it until very recently I was a part                                of the Academy Science and Technology                                Council that led to the development of                                the foundation and so through that and                                you know my history at ILM I felt a real                                conviction to see that the project is                                sort of shepherded into the foundation                                and that it it you know is well                                established as a success story for the                                foundation you know for anyone who's not                                familiar the software foundation was                                founded a year ago with the mission of                                ensuring the health of the open source                                software that we depend on in the                                industry there's a lot of organizations                                that put their support behind the                                foundation you know where all of this                                rubber hits the road is the actual                                projects and it's interesting that each                                of these projects and open timeline oh                                should be up here as of this week each                                of these projects is in a very different                                state of its lifecycle which is a kind                                of different test case for what the                                the foundation has to offer when I think                                about opening XR and what does success                                look like I think you know if you're a                                developer a group company or whatever in                                search of an imaging format and you                                happen upon the XR you know the repo the                                website or whatever you should see a                                healthy project you should not see a                                derelict neglected codebase C code                                that's maintained and modern and a                                healthy community people asking                                questions and getting help and in                                particular you know the particular phase                                that openexr is in right now is you know                                there was a period of time when it was a                                system developed by an internal group                                internal to ILM or you know what and                                Dreamworks other major contributors who                                were releasing it to the outside world                                that's not the phase that it's in right                                now and I think one of the things that                                the software foundation has to offer is                                to ensure that this is a community                                effort not dependent on any one                                individual or any one organization the                                other thing is that I think what the                                community needs out of openexr is                                primarily stability it's this should not                                be a project that sees a tremendous                                amount of churn or or change but                                reliability and instability and staying                                true to the original vision a little bit                                of history started in                                           released in                                     Florian wins saitec award in                                                                                                                 and DreamWorks and then a kind of period                                of dormancy                                                            and we two years ago succeeded in eking                                out a release that addressed some of the                                security vulnerabilities that had been                                been filed and then last year another                                maintenance release but that was quite a                                bit of effort to muster to get that out                                and                                so you know along comes the foundation                                there's a lot that's happened in the few                                months since the the project was brought                                into the foundation a lot of stuff going                                in we started out with something like a                                hundred and thirty open github issues                                thirty some poll requests I think we've                                succeeded in getting those down to a                                very manageable level and in general                                there's been a lot of traffic on the the                                repo people commenting which is really                                good to see and a lot of different                                people commenting which is good so who's                                 doing this steering committee is me                                 Cristina Templar elites from epic John                                 Murdoch for the Linux Foundation Kimball                                 Thurston Larry grits Nick Pacino Peter                                 Hillman rod Bogart Nick Rasmussen is the                                 the resident expert at ILM not formally                                 a part of the steering committee but one                                 of the the github repo committers and                                 one most knowledgeable about the library                                 so one of the things this kind of shape                                 to the effort that's been going on is                                 the Linux foundation's core                                 infrastructure initiative it's a set of                                 requirements that that are the the the                                 core sort of gate to the project being                                 fully adopted by the the Software                                 Foundation and it's a set of guidelines                                 that that sort of ensure the proper                                 health and robustness of the project in                                 general a lot of it has to do with                                 licensing both cleaning up licenses and                                 copyrights as well as easing the the the                                 contribution mechanism we're right on                                 the cusp of putting in place the                                 automated CLA mechanism so that when you                                 submit a pull request it'll                                 automatically verify that you have the                                 the right legal authorization to do that                                 the License Agreement in place                                 we've spent a lot of time cleaning                                 the documentation in the library not so                                 much the technical documentation but                                 just the information about how to get                                 help how to contribute you know better                                 release notes that kind of thing and                                 then a lot of effort has gone into the                                 bill system Kimball has completely                                 rewritten our see make system so it                                 actually works he's also gotten the                                 library to be warning free so dresses                                 all compiler warnings and we also have                                 code analysis in place some of the                                 earlier speakers have mentioned as your                                 pipelines is the CI system of that the                                 software foundation is settled on that's                                 up and running so you submit a PR and it                                 will automatically kick off a build and                                 reject if it fails torture Linux Windows                                 and Mac OS and simultaneous he runs on                                 the different VFX platforms this is all                                 very fresh so it's still a work in                                 progress and the analysis through sonar                                 cloud is is up and up and going as well                                 so we're still in the process of                                 establishing this but it's a good thing                                 the code coverage on the test suite and                                 openexr the initial report is pretty                                 pretty good to start out with security                                 is one of the things that we've had to                                 address openexr has the noble                                 distinction of being the one Software                                 Foundation project to have public                                 security vulnerabilities filed against                                 it they've all been addressed there are                                 a couple that have been are waiting in                                 the wings for the next release but just                                 feeling our way through the the proper                                 process of dealing with with reporting                                 of security issues is something that the                                 the foundation has been very helpful                                 with the issues involved involve things                                 like buffer overflow in integer overflow                                 primarily with images that are either                                 garbage or maliciously designed to like                                 very large images we're still in the                                 process of figuring out exactly how to                                 handle these these these edge cases                                 properly an interesting thing that came                                 up was the Google fuzz team suggested                                 that we integrate the the library with                                 their their fuzzing service that                                 basically bombarded it with with all                                 kinds of data to test edge cases we                                 decided that that's a level of security                                 of attention that we don't really have                                 the capacity to deal with and it's not                                 that important our industry so we've                                 declined on that but although they have                                 actually run the service and reported a                                 bunch of issues that we've dealt with                                 most of so bag we had hoped to have a                                 release by SIGGRAPH but decided not to                                 kill ourselves but give a little bit                                 more time to to get it out but it should                                 be coming soon this is maintenance only                                 it should be API compatible again the                                 the main thing is the C make system that                                 is up to modern standards a lot of bug                                 fixes and a lot of code improvements                                 making the transition to C++                                            removing some of the old cruft force                                 supporting C++                                                           the release process to use the automated                                 github release process the automated                                 tarball generation thing so we haven't                                 made a release in that mechanism yet so                                 that's that's coming a few more things                                 that are kind of waiting in the wings                                 the the as a part of the adoption the                                 the github repo is going to move into                                 the Academy Software Foundation                                 organization this hasn't happened yet                                 but that'll happen in the next few weeks                                 I guess word is that could be completely                                 transparent to everybody so                                 yeah I shouldn't really cause anybody                                 any issues                                 there's our intention is to continue the                                 modernization process and migrating                                 fully to to C++                                                          the steering committee about code                                 formatting and code style and I think                                 we've settled on that we're gonna run it                                 through playing tidy and get it all                                 nights and and neat and be done with it                                 the downside to that is kind of losing                                 line by line history and the repo but                                 the our senses that past projects that                                 have dealt with this have been thankful                                 that they've done it after the fact                                 another thing we would like to                                 eventually deprecated the use of Island                                 thread and migrate to C++                                              we don't want to have to maintain two                                 different bill systems the C make system                                 has not been reliable enough to really                                 count on that as our as our bill system                                 of choice but it is of course the only                                 system that works on Windows so we would                                 we think like to be able to deprecated                                 the the auto tools configuration but                                 we're only going to do that until we if                                 we decide that there's no people out                                 there that are not willing to use the                                 the C make system or any way we we don't                                 want have to continue maintaining to                                 build systems another thing a major                                 source of issues that people in the                                 community have is the the runtime code                                 generation that's that's built in the                                 half and compression table code that's                                 generated on the fly                                 that's the failing is a major source of                                 problems and we we think what we want to                                 do is just completely deprecated that                                 generate the code                                 and check it in to the repo so this is                                 the point at which I'd like to emphasize                                 how much fun this is and it is so much                                 fun that you want to be doing this                                 yourself you really do you know in all                                 seriousness it is fun and although our                                 organizations I am what a face book epic                                 fully embrace and support us doing this                                 for the most part we're doing this kind                                 of out of time stolen from lunchtime and                                 nights and weekends and you know it is a                                 volunteer hobby basically that we do                                 because we and we enjoy it I say this                                 for two reasons one is it's not like                                 there's a standing team of people that                                 are waiting to you know have work                                 requested of us that we can implement                                 and roll out this needs to be a                                 community effort and so if there's                                 things you want out of the out of the                                 library step up and help and I mean in                                 big ways and small ways if you find a                                 bug try to fix it and submit request the                                 idea is the steering committee is the                                 the gatekeepers that ensure that what                                 goes in is valid and and proper but                                 we've been doing more work lately over                                 the last couple months then we're gonna                                 be able to sustain going forward so                                 anyway one of the main ways to get                                 involved is comment the steering                                 committee kind of as we've been getting                                 our legs under the project and dealing                                 with a bit of the past you know but kind                                 of deferred maintenance well as kind of                                 lack of organization it's been having a                                 lot of discussions kind of internally                                 we're gonna be opening that to the                                 opening XR dev male alias so expect to                                 see a lot more traffic on there and                                 traffic of the form of hey what do we do                                 here what's the right thing to do here                                 that it really ought to be a community                                 effort talk with us if you want to get                                 involved read over the contributing                                 guidelines                                 you'll need a license agreement but                                 hopefully with the the foundation in                                 place that should be easier to come by                                 submit a pull request and we're going to                                 expect that anything that goes into the                                 library will will will will have a                                 corresponding you know validation test                                 as a part of the the test suite several                                 of the topics that have come up in                                 discussion that we want to open up the                                 floor to proposal about I math                                 lightweight reader                                 multiframe file format and multi-part                                 ordering I want to spend a little bit of                                 time talking about the first one and                                 then we'll open up for the rest so if                                 any of you were in the session this                                 morning at                                                               foundation overview the high math came                                 up as one issue that the people seem                                 keen on the idea is that there's a bunch                                 of different vector matrix math                                 utilities out there lots of projects                                 have got to develop their own for one                                 reason wouldn't it be better if if                                 multiple projects could use the same                                 thing and I math has a lot of fans and                                 supporters and and it's it's used the                                 thing that we've been talking about                                 proposing to do is to one modernize it                                 and you know update the code in various                                 ways split it out from openexr so that                                 it's a separate independent entity that                                 makes it easier to build and and and                                 distribute and integrate with other                                 applications one of the main objections                                 that people have about the library is                                 the use of exceptions and whether you                                 agree with it or not there's a lot of                                 people that want a vector matrix math                                 library that does not have support for                                 expression exceptions so                                 idea is to to make that configurable                                 there are literally millions of lines of                                 code that are built on top of this this                                 library and that Island in particular                                 and I think one of the things that we                                 feel going into this is that we're not                                 willing to make non backwards compatible                                 changes to the library I think there's                                 certain you know ship has sailed and in                                 certain aspects and we're not willing to                                 to make changes in the library that                                 would necessitate breaking you're fixing                                 a lot of code on top of it so that's                                 kind of one of the ground rules                                 but what we're imagining is this doesn't                                 exist yet but a repo at the level of the                                 Academy Software Foundation that's the                                 vector matrix box color quaternion                                 frustum that kind of thing as well as a                                 half library again giving an option                                 whether that's if deafs or templates or                                 something that would allow you to have a                                 version of the library without                                 exceptions possibly header only we want                                 to move a thread and and hopefully ie X                                 out of Island Basin into the VXR proper                                 this general utility oughta come with                                 Python bindings which are in pi PI I                                 math Pie Island base the kind of                                 universal consensus is boost Python is a                                 pain to deal with and people seem to                                 prefer PI by and                                                       bind                                                              generally think would be a good idea                                 what this would mean is that openexr                                 proper would have an external dependency                                 on I math but hopefully a lot of the the                                 CI infrastructure stuff that's going on                                 now should make that a lot easier to                                 deal with so before we go into the other                                 topics I'd like to open this up for                                 discussion                                 does anybody have any comments on this                                 I'd like to see the half library move                                 completely out of my mouth and stand                                 alone because it's often the only thing                                 that we're bringing in openexr                                      access to half or if we could even move                                 towards asking the C++ standards                                 committees to include it as a standard                                 type or simple things like that would                                 make it a bit easier to use so you want                                 it you want it separate so you can                                 include just that and nothing else                                 yep probably yes                                 I mean potentially it really depends                                 like having header only libraries is                                 also not super awesome for your build                                 times and things like that so if it just                                 still needing to have it as a thing                                 yeah                                 right so if you just want if you just                                 want to pull out half that H out of EXR                                 I math you have to you know your full                                 build time dependency resolution has to                                 support that properly and you can get                                 into compatibility issues there so                                 oftentimes you'll have a plugin that                                 needs half a little little small module                                 but you don't want to bring in the                                 dependency on the entire library                                 you know and and and machine learning as                                 well like I believe that's already on                                 their radar but I don't know what the                                 implementation will end up paying with                                 their B floats I guess for brain floats                                 or something so that's an adjacent                                 proposal                                 I guess there's probably a little bit of                                 research that needs to go into sorry a                                 little bit of research that needs to go                                 into the ultimate disposition of half                                 but it's probably not a bad idea for us                                 somehow collectively to be involved with                                 that just because as as the industry                                 like we probably have a longer                                 experience dealing with half than                                 anybody else right yeah                                 especially we've done a lot of work with                                 really weird corner cases like                                 exceptional value propagation and stuff                                 like that that if you're just coming to                                 it fresh because you're solving for                                 machine learning or whatever might not                                 have been an issue for you yet to split                                 it out as a separate library would make                                 life easier for the people that want to                                 use that and and nothing else it makes                                 it a little bit more cumbersome for                                 openexr because it it means it's another                                 external dependency                                 anybody else                                 yeah no I just want to take a                                 temperature in the room of like if if                                 this split and the kinds of changes we                                 talked about we're making would people                                 would that actually cause those of you                                 who I will not name but know who they                                 are to stop making additional                                 incompatible vector libraries separately                                 for every open source project so a                                 little earlier this year I think the                                 ffmpeg maintainer for openexr support                                 dropped out so has there been any                                 thought about trying to push open EXR                                 support and ffmpeg a little bit more and                                 support that effort                                 yeah we were talking about sort of                                 improving the state of the C bindings                                 that are kind of in there                                 and then that becomes a lot more                                 palatable for those guys to to adopt the                                 dependency because they they like to                                 build against C but we like I know we                                 have an internal version of the XR                                 reader for ffmpeg well so like we use it                                 to bake dailies for example right we                                 just pipe the XR straight into yeah                                 right yeah I don't know that we're                                 talking about FF play being able to be                                 the primary player yeah yeah                                 that's a good segue to the next topic                                 unless you want to just related to this                                 no there's a unofficial subset of                                 openexr that standardized as the asus                                 container format simp TST                                            that standard mandates no compression                                 can be used people ignore that all the                                 time but that's the mandate because the                                 standard the compression types that are                                 built into openexr are not nominative                                 lis referenceable standards has there                                 been any thought to standardizing some                                 of the compression methods that are                                 embodied in openexr anybody                                 they're not they're not they're not                                 likes empty spit standards though that's                                 the problem so so Joseph come to the                                 ASIS I'm right here in your row come to                                 the ASIS of birds of a feather at two                                 o'clock you have a little bit of a chat                                 about that yeah I would just also add                                 that there's a bird flying around no I I                                 would just say that the advice to people                                 who have questions like that of like                                 have you considered and then we all like                                 look at each other like no we haven't                                 considered that like that is your cue to                                 get involved in the project if you want                                 a particular future for EXR be the                                 person who makes that feature happen                                 that's a good segue to the next thing                                 that's come up that this was raised last                                 year at the birds of a feather it was                                 the question of a lightweight sea                                 version of the library this comes up in                                 various situations for for one reason or                                 another applications that don't want to                                 have to deal with the full complexity of                                 the library for embedded systems or                                 they're there is actually a sea API for                                 reading or GBA images in openexr I'm not                                 sure how widely it's used I have a sense                                 of where this is coming from that's not                                 really as a solution there is a library                                 out there called tiny EXR that is                                 maintained by a totally different                                 project and but it's just again this is                                 not something that the steering                                 committee is planning and thing out                                 there but if this is something that's of                                 interest to the community did I get a                                 volunteer over here and                                 as someone who still files everything                                 only six another topic that has come up                                 in discussion was the idea of a multi                                 frame pxr format and again I'm bringing                                 this up just because it came up in                                 discussion and not because we have a                                 particular proposal but does anybody                                 have anything to suggest or comment on                                 good idea a bad idea                                 there's already a lot of container                                 formats around I'm not sure that                                 inventing another one is should socially                                 be more like EXR media in mxf or                                 something that would be a better                                 alternative I don't know I think the                                 only reason this didn't get total                                 silence was that Peter Hillman wetter                                 who's not here said that he had actually                                 implemented something like this at                                 weather some time ago and so next topic                                 I'd come up is there anybody here from                                 foundry Oh                                 okay do you want to you want to                                 introduce the issue yeah or microphone                                 so foundry we've implemented behavior                                 for multi-part exile rendering in nuke                                 so the RGB a part when it's present is                                 always the first part                                 we've also added functionality so that                                 users can completely override the first                                 part to be anything that they want this                                 has given benefits for I think avi can                                 now read only the first part which gives                                 performance improvements and we would                                 like to see this workflow added to the                                 openexr specifications so that it can be                                 adopted as a recognized workflow                                 we needed a lot in post-production after                                 VFX like for the final D I will get                                 these openexr s that have you know                                    mats all as just separate channels in                                 the first layer and most of the software                                 will sit there and try to you know                                 uncompress or deal with all of those                                 channels when what we want to do we have                                 to just play the RGB once in real time                                 and deal with those if we want to stop                                 and access one of the mats we can always                                 do that so what we get openexr from                                 visual effects facilities with all those                                 matte channels it's during the                                 conforming process our editors have to                                 go through and split them out into                                 different layers so we would love it if                                 it became more of a standard that matte                                 channels and ancillary channels were in                                 separate layers rather than just                                 additional channels of them in the first                                 layering things this is what you're                                 suggesting then just a convention or is                                 there any actual change to the library                                 I'm I don't know if it's a convention or                                 change the library but it saved my ass                                 in that when I have a player going I can                                 automatically open the first layer of                                 files and give the user something that                                 they're happy about while I sneak in the                                 background and start loading all the                                 other ones so yeah it's it's a good good                                 good thing you know maybe it is just a                                 convention but the other things that                                 seems to you know the ability to do this                                 even a nuke is sort of like you know                                 well how do we do that you know what                                 menus do we have to go so if it was more                                 of the default operation you know maybe                                 that that would help and other                                 compositing platforms too                                 yeah just to reiterate the how useful                                 this has been and this was something                                 that we ran into with a variety of                                 visual effects vendors and software                                 handling this differently and I think                                 you can handle it as a convention but I                                 think it would be better off actually                                 put into putting some controls into                                 openexr                                 so it's something that like Josh was                                 saying developers of different software                                 are not trying to figure out how to                                 implement that but it's actually a                                 requirement in some way to identify the                                 RGB layer your beauty layer and                                 something that you you don't have to                                 guess whether some software is                                 implementing that correctly or they                                 followed that version of a convention                                 but it's just if they're using that                                 version of the library they have to                                 register that in a way that all of the                                 software is going to handle consistently                                 so I definitely think this would be a                                 key part moving forward to moving toward                                 multi-party xrs and and my experience                                 has been the biggest hindrance moving to                                 multi part from Singapore                                 so kind of related I think it I think                                 everybody's talking about reasons here                                 about performance about real time I had                                 a question I wondered if anybody else                                 had come across the problem of actually                                 having to decompress the file before we                                 upload it to the GPU because we run out                                 of bandwidth very rapidly and so I                                 wondered about has anyone talked to                                 Nvidia I know I have about could they                                 support some form of decompression on                                 the GPU I just say                                                    stereo                                                                 ride any form of er                                 I'm wondering if you have any plan to                                 support any other float formats                                 especially be float                                                understanding is FB                                           perspective of other vendors then Nvidia                                 be float                                                               didn't quite get to what the question is                                 [Laughter]                                 that's easier so my understanding of the                                 current format is that it's using FP                                    right so                                                                oh I see and the question is whether                                 there is any plan to support any other                                 format so for machine learning it would                                 be great for us to use be float                                          is a different distribution is                                          is there any plan for Dart                                 you mean just to the extent that openexr                                 files themselves are providing training                                 data or is that it's hasn't been on our                                 radar                                 [Music]                                 frankly I mean the other sort of yeah                                 I'm gonna twister your a question a                                 little bit like we have occasionally you                                 know had requests                                 maybe I'm the person who requested it I                                 don't know um for you know supporting                                 integer formats which some people still                                 use and are handy for things so the                                 maybe this just falls into that same                                 category of other you know other pixel                                 data types but we've never discussed                                 that but it's valid if you're interested                                 in that I will be more than happy to                                 talk to you about it                                 some of the EXR it would complicate some                                 of the efficiency of the EXR compression                                 schemes which are shockingly                                 knowledgeable about the ten bits and                                 five bits and you know how they go about                                 doing that compression so not all of                                 them so why require a lot more work than                                 just simply supporting it so in terms of                                 the hardware that supports that it's                                 mostly machine learning directed                                 hardware mainly FPGA CPUs from Google                                 and Zeon's from Intel and other hard                                 work from Intel also that's                                            so I assume there will be more                                 discussion happening around the be                                 float                                                                  want to make one more comment which is                                 to support that it would be useful to                                 have machine learning compatible or                                 useful                                 EXR files because right now we're forced                                 to store our corpuses like in tiff which                                 makes me cry every time I see it it's                                 like why aren't you using the library                                 that I'm working on so I'd like to say                                 that we've had occasional need for more                                 than                                                                                                                                  things just don't we need more dynamic                                 range for some things                                 so on the note of                                                       thing I noticed actually was a ticket in                                 about this and I think it got closed                                 probably because I didn't answer when I                                 took confidants actually comment she's                                 been busy but in                                                      the compression is currently as far as I                                 can tell compressing pairs of bytes                                 instead of compared compressing you know                                 four byte spans so as a result you can                                 very easily just get non compressing                                                                                                   obviously you should compress and                                 something discussion in that ticket was                                 sort of you know maybe it's time to add                                 a new compression codec anyway and that                                 would be an easier way to sort of fix                                 that problem and then just steer people                                 in that direction but you know with                                 everything moving in the cloud it would                                 actually be very advantageous to squeeze                                 some of those files down you know and                                 maybe see if there's anything that can                                 get the sizes down a little more and you                                 know low-hanging fruit ways and then                                 also you know potentially some you know                                 maybe some more advanced ways as well                                 like more modern compression one thing I                                 was looking at just elaborating that a                                 bit there's the discussion about you                                 know multi-frame codecs you know                                 presumably to reduce the size a lot                                 there are some compression codecs that                                 allow you to sort of pre compute a                                 dictionary of compression tables you                                 know maybe that would be a compromise                                 where you know we could have some pre                                 computed compression so that we squeeze                                 the files down a bit more without having                                 to deal with sort of random access                                 problems just a thought                                 oh yeah almir Larry with that one go                                 ahead and suggest it contribute this was                                 briefly mentioned in a conversation on                                 the on the list but uh have you guys                                 looked at like Z standard or other zeal                                 impressions or sorry not see the but                                 others equations the subject of doing                                 different levels of Z lib compression                                 has definitely come up recently yeah                                 that's the one                                 there's a mention of someone saying oh                                 yeah we're starting to look at other                                 compressions and I was like see Sanders                                 I noticed that one it's been coming up                                 on lately right I don't want to derail                                 but we only have five minutes or so left                                 one of the other things that that we                                 have been at what I've been thinking                                 about contributing is sort of a grouped                                 metadata attribute so basically you                                 could have a group of metadata that is                                 not it's just basically brought in and                                 not necessarily parsed through we should                                 help with the playback performance in                                 the real time scenario but also means                                 that we have large you could compress                                 that things have a smaller file these                                 words of things so I don't know if                                 there's any other I see Joseph racing                                 for the mic so at the moment if you want                                 to change one bit of metadata in the                                 file                                 supposedly say that it was shot at                                 what it was accidentally left to the                                 camera at like II I                                                      want to fix it you have to copy the                                 entire file there is no metadata update                                 in place                                 should there be that's sort of another                                 thing that's been related to this that                                 we've we've talked about where you                                 basically lightweight if it's size                                 compatible then                                 be able to just poke it in I don't know                                 I don't know where we'll get to with it                                 but that has definitely come up and                                 you'll ask one more question thank you                                 and there's box lunches back there if                                 you guys are staying around rez is up                                 next
YouTube URL: https://www.youtube.com/watch?v=qOlmRiHwRck


