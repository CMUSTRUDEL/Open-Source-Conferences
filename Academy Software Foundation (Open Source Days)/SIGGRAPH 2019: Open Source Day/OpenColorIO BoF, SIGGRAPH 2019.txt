Title: OpenColorIO BoF, SIGGRAPH 2019
Publication date: 2019-08-22
Playlist: SIGGRAPH 2019: Open Source Day
Description: 
	Discuss topics related to the open source project OpenColorIO, including new governance as an Academy Software Foundation hosted project, progress on OCIO version 2, and Q&A. Part of Open Source Day at SIGGRAPH 2019, hosted by Academy Software Foundation.

Speakers:
Michael Dolan, Sony Pictures Imageworks
Doug Walker, Autodesk
Patrick Hodoul, Autodesk
Mark Boorer, Industrial Light & Magic
Captions: 
	                              thanks everyone for sticking around                               following aces so I'm Michael Dolan um                               color scientists at Imageworks and                               current chair of open claro project                               through the a SWF so our agenda today                               i'm going to give a brief update on the                               overall project kind of our transition                               into academy software foundation                               I mean how that's gone and some of the                                updates that have come as a result of                                that to our code into our infrastructure                                I'm and then Doug Walker and Patrick                                O'Toole will cover some of the open                                Calero version                                                         on which is sure everyone's excited to                                hear about that and then mark for from                                ILM will cover some work he's been doing                                on a new companion project to open                                killari oh god open color math and then                                we'll have some time for discussion and                                Q&A at the end so yes so said I'm gonna                                give a brief project update so as you                                probably aware open color i/o we join                                the Academy Software Foundation this                                past year it was a unanimous vote back                                in January to join and that has sparked                                a lot of discussion and growth for the                                project and sort of reorganization of a                                lot of our structure so one of the first                                objectives as when B became Academy                                Software Foundation project was                                establishing technical steering                                committee which we have pretty good                                representation in the industry on that                                I'll point out those names briefly we                                meet weekly for a TSC meeting on Mondays                                it's public you're welcome to join if                                you ever want to have input part of the                                handoff from Imageworks                                to a SWF so our license remain the same                                we didn't change any of that so nothing                                too scary we moved our mail lists to the                                SWF if you're we're on them previously                                and you're probably on the new ones and                                nice thing is with the new mail list                                system we have with sov FIO we also have                                calendars and wikis and other things for                                its kind of aiding community discussion                                we are will be moving the repo soon to                                the Academy Software Foundation github                                account it's currently still on                                Imageworks while we were working out                                some remaining                                issues before we were able to move it                                also so if you looking in our github so                                part of joining a SWF is really                                establishing a better governance                                structure and our policies on everything                                from contributing governance security                                there's also a project charter a new                                clas so all of that is in our github                                repo please reference it it's a great                                way if you're interested in contributing                                or learning more about the project those                                are a great place to start so one of the                                things we've been working through this                                last year is when you join the SWF you                                become an incubator in Cubase in project                                which means you're a part of the                                organization but you're the foundation                                but you have to kind of you know work                                through some objectives before you                                become an adopted project and so we have                                been working hard at that this past year                                one of the steps we completed for that                                was achieving our core infrastructure                                initiative badge which is a program                                sponsored through the Linux Foundation                                which basically just make sure that our                                code is following good protocols of                                security and testability and you know                                all the other things to make software                                everyone be comfortable using it in                                their application and in their                                facilities make sure that we're you know                                following best practices so we've                                achieved a passing status on that badge                                and then the other thing is we have to                                pass a license scan before we that was                                sort of the blocker with us moving our                                repository to the Academy Software                                Foundation is passing a license scan and                                I'll talk a little bit more about sort                                of what we had to do to solve some                                issues that were in our repository in a                                little bit but but the issues that we                                did have have been solved so all the                                requirements for us to become an adopted                                project have been fulfilled and so we'll                                 be up for a vote soon to become the                                 second adopted project following open                                 BTB this is our technical steering                                 committee and so I'm the chair dog                                 walker is our chief architect and then                                 Sean Cooper Edina is our aces tech rep                                 so he's sort of our person to be our                                 official representative with aces and                                 you can see we have representation from                                 ILM Dean AG Imageworks foundry Autodesk                                 and Framestore                                 and you know open to other ideas of                                 people in the community who would want                                 to participate so please you know reach                                 out our meeting notes are all on a                                 github repo so you can see what we're                                 talking about and that this link will                                 have our schedule these slides will be                                 posted to the OCIO mail lists and slack                                 following this so don't feel like I've                                 taken notes you can get all this info so                                 one of the big things we've been                                 tackling in our incubation process along                                 with open VDB in openexr is re                                 structuring our CI and build and all the                                 infrastructure that makes open Calero                                 and one of the goals for swf this past                                 year was to get all these projects and                                 it's more of a uniform continuous                                 integration platform and so that we all                                 kind of are working the same way and you                                 know can share ideas and so there's been                                 a SWF CI working group that we've all                                 been a part of discussing these things                                 between the projects and collaborating                                 on solving them before we got there                                 though thankfully mark or kindly                                 restructured our repository and                                 modernized RC makes so we're in a good                                 place there and then following that was                                 our CI work with the other projects and                                 so part of that is the as all the                                 projects needs to be F together we                                 agreed that as your pipelines was the                                 right approach for our CI primarily                                 because it has full cross-platform                                 support Windows Mac OS and Linux so we                                 have successfully moved our entire CI                                 system to Azure and it's working on all                                 three platforms in one place which is                                 really helpful for testing our builds                                 and also one of the big things behind us                                 er that was of interest to us is that                                 you can hook up your own machines to run                                 builds on which will allow us to support                                 testing our GPU functionality a big part                                 of open Calero is having a GPU render                                 which is something we can't currently                                 test in CI so that's a big thing we want                                 to solve and so some preliminary work to                                 test that has been done and we're that's                                 future work is to actually get that                                 integrated into our CI there's part of                                 the working group was                                 some of the projects together we've                                 created a VFX reference platform                                 implementation docker images it's it's a                                 essentially it's a hierarchy of dr. of                                 docker images that inherit each other                                 that build a common VFX reference                                 platform image / and we tagged it per                                 year and so there there's like a base                                 image and then a common image inherits                                 from that and it has all the                                 dependencies that all the a SWF projects                                 rely on and everything is you know                                 adherence to the strict spec VFX                                 reference platform and then each of the                                 individual projects has an image on top                                 of that so open call area we have a                                 docker image just available to anyone                                 who wants to have a you know easy way to                                 build and test the project in all our                                 Linux CI is using that docker platform                                 now which is which is great and so as we                                 move towards VFX reference platform                                      and Python                                                             be able to be really efficiently testing                                 it and everyone that's you know working                                 on their third party or you know all the                                 companies they're writing software and                                 sticking to the VFX reference platform                                 spec will know that our stuff will work                                 and then the other side of it is we                                 implemented sonar cloud for our static                                 analysis so we could really test our                                 code and make sure that we're you know                                 following good security practices and                                 code quality and we've already had a                                 number of pull requests towards                                 resolving some of the issues that Sun or                                 cloud has helped us find in our code so                                 I mention license scan earlier the                                 reason we haven't been able to move our                                 project over at a SWF github account was                                 because if any of you familiar with open                                 call area repo we've had a lot of our                                 dependencies embedded in archives in                                 this directory called ext and that was                                 there to make it so that if anyone                                 wanted to build up in Calero you could                                 just clone a repo just build you don't                                 have to worry about pulling dependencies                                 and building everything else so that was                                 really convenient but it presents                                 various problems because some of those                                 projects don't have Foss compatible                                 licenses which is a requirement of the                                 you know Linux Foundation projects so                                 we've I've just finished some work or                                 we're in still in progress and kind of                                 completing it or we basically have                                 tripped all those third-party                                 dependencies out of the Oakland Claro                                 repo so now if you clone if you clone                                 our master branch and try to build it                                 it's going to look for those                                 dependencies on your system so you can                                 or you can point openko you know you can                                 point see make towards where your                                 dependencies exist and build but one of                                 the objectives we wanted to tackle with                                 that too is that because people have                                 grown so used to building open claro and                                 it's very easy to just you know clone                                 and build we wanted to still be able to                                 kind of support that ease of build for                                 users and so we rewrote a lot of our c                                 mcfine modules so that if you don't have                                 the dependencies on your system and if                                 you don't feel like building them we                                 there is an option to option OCIO                                 install ext packages which will actually                                 clone those upstream github repos and it                                 will build and statically link all the                                 dependencies that build time                                 automatically so we're trying to still                                 support that kind of ease of build but                                 for facilities that want to have more                                 control and you know and use their own                                 stuff that's supported as well just                                 highlight this year we did release open                                 Calero                                                                   a bug fix build but as there was an                                 announcement made recently that new                                    from foundry will be using that                                 primarily because it fixes some bugs we                                 had with default view and display                                 handling so that release has been up for                                 a while and we are in discussion as to                                 whether or not we'll do another point                                 release bug fix release in the near                                 future which more than likely there's                                 there's always a number of pull requests                                 that we could back port from our master                                 branch to the RB                                               discussing that are open to input there                                 as well oh and then also the                                          opened up compatibility with newer                                 versions of open image i/o which we had                                 versions                                                              C++                                                            incompatible                                 the way our apps were being built                                 previously so now we you can build the                                 open Calero apps like OCIO convert and                                 all all the apps that we supply those                                 will build with newer versions of open                                 image i/o which is a good thing                                 Tomas couldn't be here but Mexico but he                                 has been working on the Aces                                            config which is it's currently available                                 in his Fork of the open Collier configs                                 repository but he couldn't be here but                                 he supply to some information I could                                 present on kind of talking about some of                                 the things that's tackling of course a                                 lot of you are aware of the changes in                                 Aces                                                                  the single stage tone scale output                                 transforms for the blue light artifact                                 fix LMT that was discussed in the Aces                                 meeting and the unnecessary white space                                 and let's remove so a lot of the lot                                 files that were bundled in the earlier                                 versions of the Aces o co config had a                                 had a lot of whitespace prior to the                                 numbers in the lot and which was just                                 kind of you know taking up space in the                                 files so that has been kind of reduced                                 to just be a little bit more efficient                                 and then he implemented a post process                                 after the lots are generated which will                                 go in and remove any man's with and                                 replace them as zeros which will help                                 nuke not complain about that and other                                 applications that don't like to have                                 Mane's and lots the precision of the                                 Lots has been increased there's now                                 inverse versions of a lot of the                                 transfer function lots like the linear                                 tests RGB you know srgb to linear it                                 goes both ways for higher roundtrip                                 precision and then a big one I know for                                 frost is there's a new log to shaper the                                 previous shaper had a limited domain                                 that could support so if you had really                                 like really saturated colors and over                                 exposed areas you could encounter                                 clipping issues which would diverge                                 pretty greatly from other                                 implementations of the Aces OD T's so                                 the new shaper uses the same ACCC domain                                 negative some                                                         stops and so that should resolve a lot                                 of of those issues that's up for me I'm                                 going to hand it over to dog and Patrick                                 to talk about open Calero version two                                 thank you thank you Michael actually                                 before we get into a ob                                                to mention that that you know the big                                 change from last year for those of you                                 who were here at the birds of a feather                                 is that we're now part of the a SWF and                                 from my point of view that's a great                                 thing it makes it easier to contribute                                 to the project it makes it easier for                                 you to find out what's going on with the                                 project and track the progress but it's                                 it doesn't come for free as Michael was                                 going over there's there's a lot of                                 things in terms of adopting best                                 practices and so on and it was Michael                                 actually who did the lion's share of                                 that work so I just wanted to make sure                                 that we recognize Imageworks and                                 especially Michael for taking I was it                                 was it was definitely a lot of work so                                 on to open Claire IV - so I'm Doug                                 Walker for those of you who don't know                                 me on the project lead for OCIO v                                      I'm also serving as the chief architect                                 for open claw Rio on the technical                                 steering committee I'd like to introduce                                 Patrick O'Toole so Patrick is the lead                                 developer on the project for those of                                 you who don't recognize Patrick you                                 probably would recognize his avatar and                                 his pirate avatar on github so if you've                                 ever been on github and wonder who's                                 who's checking in all of those open                                 kario we separate that's checking in all                                 the zocalo features it's now you know                                 although otherwise I noticed you changed                                 your your avatar - yeah                                 chansu you can recognize it you can                                 recognize this this is this is a SWF you                                 know is no more messing around here so                                 so we've been we've been busy since last                                 time we presented at SIGGRAPH last year                                 so Autodesk has three full-time                                 engineers working on this so in addition                                 to myself and Patrick we have Bernard                                 LaFave back in Montreal who's been                                 working with us we've merged about a                                 hundred pr's since last SIGGRAPH                                        lines of code approximately added                                 increased the number of unit tests from                                                                                                       monthly v                                                                those of you who are who are interested                                 we we have these on the web via zoom                                 you're welcome to participate I'll give                                 you the details for how to join that at                                 the end but we we present the work that                                 we've just completed and the work that                                 we're about to start and we've gotten a                                 lot of great feedback from people who                                 have participated in that a little bit                                 about the development process but before                                 as a number of unit test is really a                                 critical point for us because it's a way                                 to guarantee some kind of quality it                                 does not mean but before it was not                                 working but not at all but just one day                                 we will have OCI uv                                                      something to check to see how what is                                 the code coverage but what does a unit                                 test so but we can guarantee a level of                                 quality for you guys which is extremely                                 important and extremely important for us                                 also as my guys                                 okay so development process so after a                                 lot of discussion and tries we now have                                 a way to work which is efficient for                                 everyone so if you shine for us so we                                 can make good progress but also                                 efficient for the community so we you                                 have time to review a command post                                 question or whatever so mainly what we                                 what we are this any time there isn't a                                 pull request we reply to reviewer oh                                 sorry                                 any time there is a yes far better I did                                 you are you listening what I was saying                                 before or just sleeping guys                                 so any time very simple requests we need                                 to have to reviewer and we put also                                 deadlines with not too long for us to                                 make some porous for normal I would say                                 normal and big poll requests                                 unfortunately we try to limit big poll                                 requests but it's not always the case we                                 are doing a huge ground walk to be able                                 to implement all the feature you would                                 see and this is not one line of code I'm                                 sorry guys but for very small we accept                                 one and it cannot quite fast                                 we also encourage everyone to look at                                 what we are doing so to come and see                                 whatever command it is it doesn't matter                                 just to have your feedback so and also                                 after a little bit before two weeks                                 varies or any time I try to put                                 something a reminder everyone so you can                                 have a look because I understand but                                 everyone is really busy so sometimes                                 it's good to have a reminder on that so                                 for us it's a good improvement as you                                 see we measure lots of stuff and because                                 we win based on the amount of work we                                 have to do we have to to speed a little                                 bit so we try to find a good balance                                 between the two                                 right so for those of you who were here                                 in                                                                      presented our proposed feature set for                                 open claro v                                                             that we published OCIO dev we got a lot                                 of great feedback on that                                 so you for those of you or have been                                 tracking the project you've seen the                                 list of features before so i'm not going                                 to go through these in                                 great detail we did that in in Prior                                 birds of a feather sessions but just                                 wanted to give you a sense of kind of                                 where we are on the various features so                                 yeah this is kind of giving you a sense                                 these are not all the same amount of                                 work to implement but nevertheless it's                                 it's if you want to draw the conclusion                                 that were a bit more than halfway                                 through the project that would be a fair                                 conclusion to draw so here is the                                 release plan for open choreo v                                         you know project estimates that Patrick                                 and I have done indicate that we should                                 be feature complete by SIGGRAPH of next                                 year for those of you who have seen the                                 VFX reference platform the draft has                                 been out for a couple of months now the                                 the quote for next year's reference                                 platform is                                                           year                                      so we feel that feature complete by                                 SIGGRAPH next year makes sense it would                                 allow products to start beta testing q                                  q                                                                   fixing during that period with you know                                 a stable release of the library by the                                 end of next year and products shipping                                 in hopefully the start of calendar year                                                                                                        major upgrade and we felt it was                                 important to you give people you know                                 good advance notice so that they can                                 plan this into their development                                 schedules so in terms of the                                 compatibility and the amount of work                                 that's going to be involved to to                                 transition to open claro v                                              point of view if you're a config author                                 v                                                                       should just work there are new features                                 that are being added and to take                                 advantage of those it will require using                                 you know bumping the version in the                                 config - - version                                                     same it's basically just adding optional                                 new fee                                 if you're a software developer the API                                 changes very depending on the area so                                 for the GPU API it was necessary to make                                 substantial changes in order to bring                                 the GPU render up to the same level of                                 quality that the CPU renderer provides                                 so there are some large changes in that                                 area for the CPU API we made some minor                                 changes we wanted to provide direct                                 support for integer pixel formats                                 provide more optimization options and so                                 forth so there are some minor changes                                 but very simple - to adapt to and of                                 course there will be new API calls for                                 new features all of the work is being                                 done in the master branch so those pull                                 requests are going into master you can                                 you know check the changes in the API at                                 the v                                                                 have every month we make presentation                                 that kind of goes through the changes to                                 the API so and and we post those zoom                                 sessions the recordings of the zoom                                 sessions online so that's the best way                                 of kind of tracking the feature progress                                 right now if I can add something just to                                 mention but we try to minimize the                                 amount of changes because we would like                                 but it's easy for developers to                                 integrate the OCIO v                                                   have to because we internal features etc                                 and the philosophy we following is that                                 it will break but it you will not have                                 side effect it's working but partially                                 working so for the Osseo config it will                                 load it will work as is and for the api                                 if there is a chance you will have a big                                 break and an easy path to change so for                                 you it would be extremely clear what to                                 do but extremely important for us right                                 so last year we did a demo this year in                                 the interest of time and trying to leave                                 more time for questions where we're just                                 gonna run through a couple of the new                                 feature highlights so                                 you want to cover the okay so that's one                                 of the major work we remained recently                                 no CEO ambassador CoV - so because we we                                 have the request to support more                                 bit-depth so now with the API you can                                 have that and we have also a channel of                                 the Ring it was already supported but it                                 was quite it require a lot of knowledge                                 about how to do that but in fact what we                                 proposed also is if there is a small                                 utility library which is outside the                                 library which will help you from to move                                 from the open imager your files back                                 directly to the OCIO image desk so it's                                 one line and you have the full support                                 native support ok so that's really what                                 we try to do is you have the four out                                 core guys let's say you can do whatever                                 you want obviously as it was before plus                                 a lot of unit tests to validate that but                                 this Nanavati                                 but for only of people which would like                                 just straightforward implementation you                                 use what Alper and it's really one line                                 so you have almost nothing to do                                 also we have added a new command line                                 tool which is not a tool to do something                                 but to validate the performance because                                 as you will see we introduced a lot of                                 improvement but it was everything was                                 done in our context we are images                                 machine and so on but most of the time                                 you can have issue on your context we                                 also do in your pipeline whatever and                                 you need to have tools to to understand                                 that so I don't know if you remember but                                 worthy add argument come online the                                 argument to existing tools so you can                                 have a feedback they are both feedback                                 or whatever is done for example when you                                 do                                 Oh CEO convert when you display and so                                 on and we will have OCIO path which is a                                 command-line tool just to you have your                                 image you have your config you want to                                 see what is the performance of that you                                 can run it on and you have numbers so                                 just to help you to isolate where this                                 slowdown could could be located ok these                                 are numbers we have now as I said it's                                 based on our environment so it's the                                 reason why we just put increase but as                                 you see we we have increased even in                                 floating cut paths which is quite good                                 because it was already existing and                                 already good but we also have                                 improvement in the integer code pad                                 because before the one of the problem                                 limitation let's say from our say oh you                                 have to load your image convert to float                                 and do your processing and convert back                                 to whatever bit that you would like to                                 add and now we natively support that and                                 we use that to improve the internal                                 pipeline so we have quite very                                 interesting improvement and also this is                                 not the last pull request it's all the                                 work we did during one year by adding                                 new new ups new improvement every one                                 the code so it's really a long term work                                 on that right but yeah hopefully people                                 would be pleased to see that we're                                 getting between                                                       improvements on the CPU path at the same                                 quality level soon ok so another of the                                 new features that we added has to do                                 with the Aces output transform and as                                 Michael was saying earlier Thomas Manson                                 column has done some work recently on                                 the Aces                                                                 work that HP did along with                                 contributions from a lot of the people                                 in this room and one of the things that                                 Thomas addressed that that Michael                                 mentioned was that you know                                 there have been various foreign posts                                 from people generally who have tried                                 sending very bright colors through the V                                 output transforms and they've compared                                 it to the CTL and found that it doesn't                                 match exactly and posted on forum saying                                 hey what's up with this and so Thomas                                 extended the shaper basically to try to                                 address the problem with bright colors                                 but and you know the the the issue with                                 this is that we're kind of running up                                 against the limitations of                                               let's work great for film print                                 emulations where you're modeling                                 something that has a limited dynamic                                 range but the Aces output transforms are                                 designed to work with very high dynamic                                 range wide color gamut source materials                                 so                                                                     be able to represent it perfectly so                                 what I'm showing here is sort of a                                 visualization of the errors in the                                     config for the rec                                                      using one of the standard aces test                                 Church the and Thomas has managed to                                 improve this somewhat but there there's                                 still some significant errors and so the                                 and by the way I have the if anyone                                 wants to see more details and compare                                 with Thomas's work I have that on my                                 laptop catch you later                                 but the ultimate solution to this is is                                 not to rely on                                                        some new support for aces math we didn't                                 have to code up the entire output                                 transform or anything like that it                                 turned out there was relatively small                                 amount of math that needed to be added                                 so we just added a few building blocks                                 that allow us to implement the output                                 transforms without meeting                                             that reduces the error to basically an                                 exact match to the to the AMPA CTL the                                 other sort of aces related feature that                                 we added is support for the common luck                                 format so we have now full read and                                 write support for                                 as                                                                      the documents that was published with                                 the Aces                                                                and as as you                                 I hope heard in in the Aces birds of a                                 feather there's work going on now in a                                 virtual working group and JD Vandenberg                                 has been doing great job on that with                                 help from Scott Dyer and and others so                                 there's a seal at v                                                      fall and I encourage you to get involved                                 in the virtual working group on that we                                 intend to support version three in open                                 call once it's published so you know we                                 think that this is offers up a lot of                                 very interesting workflow advantages one                                 of the things about this format that's a                                 little bit different from other lot                                 formats is the amount of metadata in the                                 lot so we're supporting the rich xml                                 metadata that's in the standard in the                                 existing standard which includes things                                 like description elements ID attributes                                 input output color space descriptors and                                 so forth so you can both read and write                                 that from open chloro yo now we've also                                 added support for autodesk CTF support a                                 format which is commonly format plus the                                 extensions needed to losslessly                                 serialize any open Claudio transform                                 into an XML file so this is something                                 that we think is very useful for                                 debugging amongst other alternatives to                                 be able sometimes if you're trying to                                 debug a config and you are you know                                 going from one color space to another                                 there hasn't been an easy way in the                                 past to kind of see under the hood what                                 open Claudio was you know how it was                                 actually constructing that transform                                 sequence so now there's a way of doing                                 that and there's a OCIO right command                                 line tool for producing the unbaked                                 output okay so in terms of areas to                                 contribute we'd like to encourage people                                 to contribute and get involved                                 [Music]                                 regardless of what your skills are what                                 your interests are how much time you                                 have we'll find a way for you to help so                                 as a developer we have a bunch of things                                 that we're looking for as a tester we're                                 looking for help and also has                                 documentation writer we're looking for                                 help so join so we have a Google group                                 for the v-                                                please join that and we're having a                                 meeting tomorrow here at the JW Marriott                                 in the only big three room from                                                                                                                some energy to maintain good first issue                                 or Lebel so anyone with whatever your                                 level of expertise or whatever you want                                 to contribute to documentation test code                                 or whatever you can check for that label                                 in in Geetha you will see a bunch of                                 stuff to improve which is quite small                                 and even you can ask question we are                                 really open to have external                                 contribution because as you you saw we                                 have already a lot of work to do on our                                 side so if we can receive help from your                                 community it will be great thanks guys                                 yeah okay and I just wanted to give a                                 shout out to autodesk for supporting                                 this work and particularly the maya and                                 flame teams for recognizing value of                                 open source software and making the                                 investment to contribute to that so                                 thank you very much                                 and with that I'll turn it over to mark                                 were from Island thank you okay so for                                 those of you who were well let's speak                                 into the microphone                                 yeah thanks all right for those of you                                 who are at SIGGRAPH in vancouver last                                 year we kind of spit balled a few ideas                                 about potentially extending some of open                                 Calleros math capabilities there's a                                 couple of things in the v                                              that include things like fixed                                 transforms or you know providing some                                 industry-standard                                 math transforms out of the box so you                                 weren't going away and writing your own                                 sRGB luck just to have you know simple                                 conversions and things like that and so                                 we've been spitballing a bit on that                                 over the last year and so I'd like to                                 just give a quick demo of a new library                                 that we're hoping to accompany open                                 Colorado to handle some of that                                 mathematical stuff and yeah just give                                 you a bit of a taste of what kind of                                 features it would have and gather a                                 feedback from the room here today to see                                 you know what direction we should go                                 with it so first what is open karma and                                 so it's gonna be a new library                                 complementing up in Colorado it provides                                 both a C and a C++ API and it contains                                 data types for describing things like                                 color primitives such as XY chromaticity                                 coordinates Korean response matrices                                 color space conversion matrices things                                 like that and at the moment for a lot of                                 color codes are certainly at least in in                                 my areas of the world you know you kind                                 of just used a Veck                                                 through all of the functions but this is                                 kind of hoping to provide a more type                                 safe secure way of describing well this                                 is a function that needs you know an XY                                 chromaticity so make sure you pass that                                 instead of accidentally giving it you                                 know an X Y Zed coordinate or something                                 like that                                 another feature is that it contains a                                 JIT compiled mathematical expression                                 evaluator so for those of you who have                                 kind of looked on open chloro for a                                 while a few years ago now I                                 an expression transform that we never                                 actually ended up merging into the the                                 code base because it kind of it didn't                                 quite fit and it also brought along a                                 few larger dependencies at the time but                                 I'm hoping that that same kind of math                                 and logic can find its way into this                                 library as well and complement the                                 features then and yet and there's                                 additional command-line tools as well                                 just to give you a few extra things in                                 your tool belt and so the core of open                                 column F is yet another excellent Yael                                 file at the moment it's just called                                 config OC m and I'm kind of envisaging                                 it just sitting alongside your conflict                                 OCIO file we could potentially talk                                 about merging it as part of the OCIO                                 configures well it has a couple of                                 sections so I'm going to blast through                                 the sections on the screen as well but                                 just to give you an upfront there's                                 sections for things like white points                                 for chromaticities of color spaces for                                 listing transfer functions cone response                                 matrices and and other random matrices                                 that you might have and so yeah this is                                 the first little bit so this is kind of                                 an example of what the white point                                 section of that config file might look                                 like we're using yellow references and                                 if I mouse cursor to I oh yeah there we                                 go so this little funny                                 ampersand it syntax is a gamble feature                                 called referencing so in the config file                                 you'll often have a chromaticity                                 coordinates a white space and rather                                 than having to copy-paste the same white                                 space again and again again throughout                                 the file you can use these reference                                 names to reference other parts of the                                 document and so in this case we have                                 just a few example random ones with XY                                 coordinates and then we have a section                                 of the file for listing primary                                 chromaticities so here's a small snippet                                 I have an example config that is quite a                                 lot more advanced so these ones are all                                 kind of industry standard color spaces                                 but you might find that you have your                                 own in your studio and want to add                                 additional color spaces to this kind of                                 list so you can see they're just simply                                 named and the library has a few features                                 where it looks up color spaces based on                                 the names in this list                                 we then have transfer functions so this                                 is the part that pretty much resembles                                 the expression transform from a few                                 years ago so the expression language is                                 very similar to sort of C or C++ with                                 the same sort of operators and order of                                 precedents and things like that it has a                                 couple of built-in variables so for                                 instance if you're running a                                            can use the value V to represent either                                 our G or B as the lot is evaluated on                                 each of those planes but otherwise you                                 can reference just the are channel                                 directly or things like that it has some                                 built-in functions as well like log and                                 POW and sign and all those sorts of                                 things that you'd expect to find in a                                 mathematical language and we can extend                                 that as needed if people find that                                 there's certain mathematical functions                                 that they want and one thing I'll say is                                 in so it isn't a programming language so                                 although we have support for sort of                                 conditionals and sort of a ternary                                 operator there these are really meant to                                 be short expressions so if we have                                 really really complicated mathematical                                 processes it's probably not the best fit                                 for these but yeah in the places where                                 I've used it and this has been perfectly                                 sufficient for handling most kind of                                    in and even some                                                         we here we have to represent both r                                      up from transformation for getting to                                 and from those those transfer functions                                 this bits kind of bit self-explanatory                                 but would you support any custom current                                 response matrix if you're doing you know                                 adaptive transforms so the Bradford and                                 cut outs who are here and if by some                                 miracle someone invents a new one                                 tomorrow you would just be able to edit                                 this file and add them in if you liked                                 and the last one is kind of a                                 get-out-of-jail-free card if you ever                                 have a matrix that you don't know any                                 other information about but you still                                 want to be able to use it in your color                                 chain this lets you just put a matrix in                                 as long as you know what the source                                 color space was it treats the name of                                 this as the destination and                                 we'll know where to fit it in when it's                                 building an opportune to dip transform                                 stuff so just a very brief show of some                                 of the C++ API and C I'm sorry for                                 putting code on a screen no one wants to                                 read short bit of it is in the C++ land                                 there's templated classes and functions                                 that you know this is an example where                                 you could paste in the names of some                                 known chromaticities and what                                 transmission you'd like and then the end                                 result will be a matrix that you can you                                 know express that transformation and                                 here's kind of the same program written                                 again in C instead so here I've got the                                 types for describing the matrix class                                 rather than being templated because we                                 don't have templates in see there just                                 underscore prefixed so suffixed with the                                 tighter type so this is a matrix                                 returning doubles and there's a function                                 here calculate color space matrices                                 that's also taking doubles and you can                                 access the elements and print out your                                 matrices so yet I mentioned it there'd                                 be a couple of command-line tools with                                 it so one that I play with reasonably                                 frequently in kind of when I'm building                                 my own open Calero configs is this sort                                 of ocm matrix tool and as you can kind                                 of see from the command line here all                                 you do is you just write the names of                                 the color spaces in in my case I also                                 added a dash dash nuke argument so that                                 it would just spit me out of a new color                                 space note that I can copy paste into                                 nuke but I also have another argument                                 that spits it out in OCIO kind of config                                 file syntax so it's easier to copy                                 pasted into an OCR config as well the                                 idea is though that with this library                                 under the hood we could just do this                                 kind of stuff in a transform you know so                                 rather than needing to bake out matrices                                 or embed matrices in the config files so                                 yep that kind of comes to another tool                                 we have which is ocm lot so in a similar                                 problem I often when I'm generating                                 config files from scratch we often want                                 to write out one d-lux for various                                 transfer functions that we have so                                 this tool also lets you just bake out                                 any other one deluxe or any of the                                 transformations either a lintel log or                                 log to linen or whatever format you'd                                 like yeah so that most of those parts                                 are in and working there's still some                                 cleanup that needs to happen on the code                                 but I'm hoping to have it kind of                                 uploaded and ready for people to to play                                 with within the next couple of weeks                                 this slide kind of has some future ideas                                 well it has the only one that I've come                                 up with which is to add an additional                                 ocm expression node inside of nuke I                                 don't know how many people use the new                                 expression node that I find it a tiny                                 bit limiting sometimes so I'm hoping to                                 you know get a few a bit more riches in                                 tax or some some better features to be                                 able to you know using an interactive                                 way yeah and I Lim is hiring in all of                                 our sites so if anyone's interested yeah                                 please visit our recruiting team or come                                 have a chat with me afterwards thank you                                 Thanks thanks mark yes no we have a bit                                 of time for Q&A anything for anyone that                                 presented                                 I made a question for mark could you                                 talk a little bit about the choice to                                 use external configs versus potentially                                 sort of hard-coding some of the common                                  color spaces I know there's been a                                  little bit of discussion about the need                                  for something like this for things like                                  USD that want to do sort of trivial                                  color transforms for previz and come up                                  in the context of simple texture                                  transforms I'm just curious what the                                  yeah so the other is I guess I should                                  mention this is kind of meant to                                  compliment if we did decide to have some                                  of these pre baked and provided by open                                  color II that that's still kind of on                                  the roadmap and one of the ideas to have                                  it's just we wanted a system where if                                  you were in a facility where you needed                                  to either override that or change the                                  way it worked or add your own                                  transformations we kind of wanted it to                                  be all in the same ecosystem                                  whereas we didn't want there to be a                                  divide between oh these are the things                                  that are built in but now I need to make                                  a new thing to you know do my                                  transformations that my company requires                                  or things like that yeah that makes                                  sense                                  any last questions as long as you're on                                  that slide so access to variables of                                  constants so you have there there are                                  certain built-in variables like the you                                  match the V or the RGB but no you can't                                  least or tap values in like user defined                                  variables or is that beyond the scope                                  it's not beyond the scope so under the                                  hood the system that does the expression                                  evaluation can take a dictionary of kind                                  of like key values for assigning                                  variables I haven't quite worked out a                                  nice pleasant way to express that in a                                  config file there's other things too                                  like yeah technically should you allow                                  multiple arguments into your functions                                  so if you had things like say I don't                                  know the arrow transforms and you wanted                                  to pass in the exposure index things                                  like that like it would be nice to be                                  able to express those in here as well so                                  yeah that those are all things that are                                  definitely not out of scope but I                                  haven't quite thought of a nice way to                                  present that and and show it but yeah                                  it's definitely not my question                                  any last questions cool thank you all                                  for joining us and in the update                                  [Applause]
YouTube URL: https://www.youtube.com/watch?v=L5dpFtgZuhQ


