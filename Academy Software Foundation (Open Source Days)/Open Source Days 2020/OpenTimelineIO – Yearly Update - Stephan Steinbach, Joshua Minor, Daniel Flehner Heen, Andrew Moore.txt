Title: OpenTimelineIO – Yearly Update - Stephan Steinbach, Joshua Minor, Daniel Flehner Heen, Andrew Moore
Publication date: 2020-09-10
Playlist: Open Source Days 2020
Description: 
	OpenTimelineIO – Yearly Update - Stephan Steinbach, Joshua Minor, Daniel Flehner Heen, Andrew Moore, Mike Mahony

We will present an overview of OpenTimelineIO project enhancements over the last year, our roadmap moving forward, as well as community use cases and contributions.
Captions: 
	                              hello everybody um uh                               i'm joshua miner and i'd like to welcome                               you all to                               the open timeline i o segment of the                               academy software foundation's open                               source days for                                    and today we're going to talk about open                               timeline io um                               uh first i'm going to give you an                                overview sort of status update                                uh you know what is otio and um what                                have we been up to for the past year or                                so                                um we have a couple of co-presenters                                from                                the community talking about use cases                                and how they're using otio in the in                                practice                                we do a little bit of road map um and                                then there'll be a good segment for                                uh live questions and answers at the end                                um so first let's start with just an                                overview of what is open timeline io in                                case um                                in case you're wondering um so open                                timeline io is                                it's an open source project it has three                                sort of main important parts                                the first is it's a file format                                for storing editorial timelines there's                                also                                an api for software engineers to use                                when building                                applications and workflows that use um                                timelines                                um it's also a set of adapter plug-ins                                for converting                                between open timeline io and other                                timeline form formats                                so just to sort of talk about in general                                like                                an editorial timeline um could be quite                                complex                                quite complex um kind of lots of tracks                                thousands of clips um and it can really                                kind of capture years of                                creative filmmaking decisions um so this                                image here                                is about                                                              toy story                                                             whole boatload of audio tracks and video                                tracks and                                lots of stuff going on in there um um so                                open timeline ao tries to capture this                                um uh the file format and the api for                                otio                                have a unified data model                                that has concepts like tracks and clips                                transitions like cross dissolves                                markers things like that                                so most of the things that you would see                                in an audio or video editing application                                can be represented in otio however otio                                doesn't actually deal with the                                actual like video or audio media itself                                um instead we use a media reference to                                point                                to where that audio or video is um in a                                file or url or wherever you want so                                otio is um dealing with the structure of                                everything and                                sort of pointers to the media um                                so um open timeline io can hold                                all that timeline information in a file                                um and then with adapters we can convert                                to and from                                uh lots of other formats um and since                                the adapters are plugins                                um the system can be extended um to                                support                                various you know common file formats in                                the industry as well as um formats                                that might be special to your workflow                                um and so by converting to and from                                those different formats                                um it allows us to interoperate with                                lots of applications                                um so we can interoperate in some form                                with all of these ones here                                and we also strongly encourage uh                                developers to add native                                otio support to their applications we'll                                talk about that a little bit                                later as well um so                                whether your application is some as a                                third party like commercial product                                or whether it's an in-house tool you can                                use uh                                software engineers can use the open                                 timeline io api                                 um to directly read and write otio files                                 as well as to manipulate the those data                                 structures in memory                                 um and so by doing so your ability your                                 application                                 will gain the ability to work with this                                 growing set of                                 adapters and gives your application the                                 flexibility to                                 read and write all these different                                 different file formats                                 otio also includes a utility application                                 and we call it otio view that lets you                                 look at the structure of a timeline                                 um and so this is meant for developers                                 who are                                 debugging or learning how the system                                 works it's not really meant to be an end                                 user tool                                 but it's really helpful for looking at                                 the structure of a timeline so here's um                                 here's a timeline a segment from one of                                 our recent films                                 and um uh you can see that                                 on the uh right side we're showing the                                 actual sort of contents of the                                 otio file format itself um so it's meant                                 to be                                 fairly readable um lots of words that                                 you might                                 expect um are in there um and you can                                 also see one of the key features of otio                                 in here                                 which is the ability for us to attach                                 arbitrary metadata                                 to basically any object within                                 an otio data structure so here i've                                 highlighted one of the clips                                 and you can see there's a dictionary of                                 metadata with some custom                                 pixar like production tracking                                 information                                 attached to this clip um so you can put                                 your metadata here as well                                 and that can coexist with other people's                                 metadata                                 so that's meant to be very extendable um                                 and so using that sort of metadata                                 capabilities to carry production                                 tracking information we can build                                 flexible workflows                                 with handoffs between different                                 commercial applications                                 legacy formats in-house tools you know                                 sort of whatever whatever is necessary                                 so this                                 round-trip example shows a workflow that                                 we have                                 in use at pixar                                 where we use aaf and edl to interoperate                                 between                                 third-party tools but pretty much                                 everything else                                 uses open timeline io and the adapters                                 allow us to                                 to bridge the gaps between those other                                 formats                                 we'd love in the future to have the                                 entire ecosystem                                 use otio natively to do away with the                                 adapters and so we're hoping to do this                                 in the future                                 um so now let's talk about the things                                 that we've done                                 over the past year or so since our last                                 update                                 one of the key things we did was we've                                 added                                 support for a bunch of different                                 programming languages                                 so previously open timelineo was                                 implemented in the pure python                                 um and this was great for getting the                                 api up and running it fits really well                                 with a lot of the                                 visual effects on animation studio                                 pipelines                                 and python is great we we love python                                 but it's not the right fit for everybody                                 um                                 and so uh we ported the core of                                 open timeline io to c plus plus um and                                 then wrapped that back                                 into python so you can get the same                                 functionality                                 um uh both both ways                                 um and uh this was meant to be backwards                                 compatible so                                 um python developers shouldn't really                                 have noticed much difference um there                                 was                                 maybe a little bit here and there but it                                 should have been a pretty smooth                                 transition                                 and then having the core in oti and sql                                 plus                                 lets applications and developers use                                 otio                                 without needing to include python in                                 their application                                 so in addition to the c plus api we now                                 have                                 swift bindings as well as a c api                                 and a java api and actually                                 two of those the java and c api                                 were done by our through um the google                                 summer of code project um                                 so karthik ayer was selected as our                                 google summer of code                                 intern um and karthik's project um                                 uh just wrapping up right now and we're                                 really happy with karthik's work i mean                                 he's been fantastic                                 um and participating in the google                                 summer of code was a really great                                 uh experience for all of us um and we we                                 um we thank                                 the academy software foundation for                                 setting that up and supporting us in                                 that way                                 and we look forward to um working                                 with google summer of code again                                 um and um karthik is amazing so thank                                 you                                 um so now that we have these different                                 apis so applications                                 written in in any of those languages can                                 use open timeline io                                 much much more easily um                                 so for example with the c plus plus api                                 reported the core                                 of otio and that actually doesn't                                 include the adapter so the adapters are                                 still                                 in python um but that means that your                                 application can                                 uh still read and write those other                                 formats by running them through a                                 utility that we provide called otio                                 convert                                 so that still gives your application all                                 those benefits without having to                                 actually include all of the                                 adapter code in your application                                 um so at pixar we've actually integrated                                 exactly in this way so our in-house                                 animation system called presto uses uh                                 the c plus plus api directly to read and                                 write otio                                 and we use otio convert to convert from                                 af for example um and a bunch of other                                 legacy proprietary formats that we've                                 used over the years                                 so this has been a great way to sort of                                 modernize our pipeline                                 without dropping support for those old                                 things                                 um                                 next um another um new feature that                                 we've added                                 last year is support for image sequences                                 um                                 and so if we go back to this diagram for                                 a minute                                 uh we can see that um this clip on the                                 the bottom track there                                 has a media reference uh which points to                                 uh the actual media on disk                                 um via a url url excuse me                                 um so lots of workflows involve sort of                                 relinking from one piece of media to                                 another                                 whether that's switching proxies or                                 doing some sort of online offline                                 conform                                 um and so uh new in this most recent                                 release of open timelineo                                 we have support for image sequence uh                                 references                                 um so an image sequence reference points                                 to a numbered sequence of image files                                 commonly in a folder on disk                                 and a lot of other systems will use like                                 a very compact                                 format for specifying how those you know                                 zero padding and things like that work                                 um the schema that we developed allows                                 for a really clear specification of the                                 naming conventions for those files                                 um so we have a prefix a suffix a start                                 frame                                 a frame step and zero padding                                 information um and so we believe that                                 this will support all the common file                                 naming conventions                                 used in our industry and                                 doing the schema like this is in line                                 with the design for                                 many other parts of otio where we're                                 favoring readability and clarity                                 over compactness um and adapters are                                 free to convert                                 to and from this and other syntax                                 like you might see in an application                                 like nuke or rv                                 that are more compact um                                 uh also i just want to highlight the                                 work for this was done                                 by netflix and storm studios and we                                 really appreciate the the collaboration                                 in them                                 next look at some of the improvements                                 we've done to the adapters                                 um so we made a bunch of improvements to                                 the                                 aaf adapter and this is mainly focused                                 on reading and writing                                 interoperating with avid media composer                                 we support more complex nesting and very                                 mixed frame rates um and                                 we got a lot of assistance and                                 participation from                                 cargo cult as well as technical                                 assistance from avid                                 so we really appreciate that we've come                                 a long way there's still                                 more more to add obviously but uh but it                                 works pretty well                                 um we've also had lots of community                                 contributions to                                 the final cut xml support um                                 edl improvements from rodeo effects                                 as well as improvements to the acadian                                 live                                 and xges support as well                                 next i want we want to highlight um                                 otio's integration with autodesk rv                                 application um                                 so what we've done is we've built a                                 plugin                                 for autodesk rv playback tool that                                 supports reading and writing otio files                                 directly in the rv interface                                 so rv supports python plugins and so                                 using the otio python api                                 we're able to read and write any format                                 that otio supports                                 and so just as an example here's an otio                                 file that we have from our editorial                                 department it's got two tracks in it                                 the video track has dozens of clips in                                 it                                 and the audio has a mix down of the                                 sequence so this just                                 happens to be one of the ways that we                                 work at pixar                                 um and so via this plugin within rv                                 you can select an otio file in the file                                 open dialog                                 and you can actually support any format                                 that otio supports                                 in here as well and click open and then                                 rv then                                 uses the otio api to read the timeline                                 and it builds an in-memory session with                                 all of the linked media spliced together                                 um so here we've we've loaded the same                                 document that we looked at before                                 and you'll notice the timeline down at                                 the bottom um you can see it has                                 all those dozens of clips um spliced                                 together and then if i were to press                                 play                                 you would hear the audio for this um                                 since we've we've recreated that                                 composition                                 in rv's node graph                                 um so uh this example sort of plug-in is                                 included in the open timeline                                 repository and this was a really nice                                 collaboration                                 between folks at pixar um some help from                                 people at dreamworks                                 um and and also technical support from                                 from autodesk                                 um so this is a really nice um thing uh                                 we hope to                                 add some more features to in the future                                 um but it's good to see this coming                                 together                                 um and next we'd like to                                 invite some of the folks from the                                 community to talk about how they're                                 using                                 open timeline io um and                                 for logistical reasons we've                                 pre-recorded these segments um                                 so um uh we're gonna start off with                                 welcoming daniel um he's also here for                                 q a later um to talk about how                                 um he's working with otio in hero and                                 in nuke studio                                 hi my name is daniel flanerheen and i'm                                 a pipeline developer                                 at storm studios in oslo norway and i've                                 written a plugin for hero                                 and the studio that lets you import and                                 export open timeline i o files directly                                 quick feature overview uh you can import                                 and                                 export entire timelines with audio video                                 tracks you can do constant                                 speed up or down or reverse you can do                                 cross dissolve                                 and fades tags and you can append tracks                                 to existing sequences to build                                 timelines since nested sequences aren't                                 supported in hero                                 this is solved by leaving a gap in the                                 original timeline                                 and creating additional sequences                                 i preserve links between audio video                                 tracks                                 for clips and                                 you can export a selection from the                                 timeline if you like                                 you get this additional import action in                                 your context menu either in the bin view                                 or in the sequence or timeline view                                 here i've imported a sample                                 timeline from the main repo                                 and when you export you set up this new                                 otio exporter content to get the oto                                 files                                 here's an example in otio view of the                                 result                                 and the plugin was originally written as                                 a part of                                 our delivery tools so                                 uh at the bottom left here we usually                                 start with the delivery specs from the                                 clients which we then parse and turn                                 into a bunch of json and python files                                 that describe the outputs we then pass                                 the                                 vfx edit from hero to our delivery tools                                 via                                 oto file uh and the delivery tools make                                 sure that we gather                                 the correct source files and convert the                                 naming                                 convention to the clients                                 and set up a bunch of batch renders                                 for the render farm which then produce                                 the movie                                 or image files and updates the                                 submission form                                 all based on the otio file                                 so we start in the in the timeline                                 of the hero update our edit                                 we add submission notes                                 as tags to the clips and we export                                 the selected shots                                 uh here we see it notio view again and                                 we can use uh the tag information                                 uh or the submission notes uh for the                                 slate frame for instance                                 and here we see that uh we use the note                                 uh which is more of a boss in the slave                                 frame and we use the                                 label or the subject uh                                 as a burning and we also                                 pass the the note to the submission form                                 at the bottom there                                 uh when required by the clients to                                 create a mini cut or if you want one                                 ourselves we can export the entire                                 timeline                                 to get the offline audio etc                                 and we then pass that to our custom mlt                                 adapter                                 and that goes to melt which is a                                 media loving toolkit's command line                                 video editor                                 which produces i mean cuts for us on the                                 farm                                 yeah so the plugin should be available                                 through the main open timeline i o repo                                 please check it out and thanks for your                                 time                                 all right thanks daniel um that's really                                 exciting to see um                                 i'm glad to see both an example of uh                                 you know integrations with the                                 uh third-party tools as well as a nice                                 studio workflow um really coming                                 together                                 in a powerful way so check out the code                                 that um they've contributed um                                 all right next i'd like to welcome                                 andrew moore from                                 the cargo cult to talk about how they're                                 using otio in their new product called                                 matchbox                                 hi there and greetings from wellington                                 new zealand                                 my name is andrew moore i'm a sound                                 editor and software developer based here                                 in wellington                                 and today i would like to share with you                                 a brand new change management tool                                 from the cargo cult it's called matchbox                                 and we've designed it from the ground up                                 with support for                                 the open timeline io platform                                 first let me give you a brief rundown of                                 where matchbox has come from                                 and why these kinds of tools have become                                 such an                                 invaluable part of our workflow here in                                 soundpost                                 as budgets decrease post-production                                 schedules shorten                                 and directors and editors become more                                 accustomed to making changes                                 right up to the last minute a hugely                                 important part                                 of our job has become chasing the cut                                 or reconforming all of our sound                                 editorial work                                 to meet the latest version of the                                 picture edit                                 for a long time getting edls from the                                 editorial department                                 was our lifeline providing a systematic                                 way to                                 track the changes that are being made                                 out of this                                 mess of shot names version numbers and                                 time code strings                                 conformalizer was born a dedicated tool                                 for comparing edls                                 and showing the differences finding the                                 bits that match                                 where they've shifted to and where the                                 new material is that you need to look at                                 you can then apply those changes to a                                 pro tools timeline                                 patch the holes smooth the edit points                                 and you're ready to continue on with                                 your work                                 etls have been good but they're not                                 without their problems                                 as the complexity of an editor's                                 timeline increases                                 say building comps applying effects or                                 creating nested sequences                                 so does the complexity of generating an                                 edl that we can use for a broader                                 top-down comparison                                 the better solution is just to work with                                 what the editor works with                                 no stripping of information or                                 flattening of tracks                                 just give us your multitrack timeline                                 and let us do the rest                                 it'll save time it'll save money                                 it'll get us a better result and it'll                                 help with communication between                                 departments                                 so this brings us to                                                 beginnings of creating the successor to                                 conformalizer                                   which by now is one of the most widely                                 used reconforming tools in the sound                                 post industry worldwide                                 and it's also where open timeline                                 becomes an integral part of the story                                 so why use otio                                 for us the answer is obvious this is all                                 about                                 timeline information we don't care where                                 the information has come from                                 or how it was generated we just want to                                 see it                                 we want to compare it and we want to try                                 and make sense                                 of what the differences are through open                                 timeline                                 not only do we have access to the native                                 and third-party adapters                                 af and xml being the most prevalent for                                 us                                 but also to all future developments that                                 happen as this platform evolves                                 and gets more widely adopted across the                                 industry                                 one parser can open the door to many                                 formats                                 and this then opens the door to anyone                                 who wants to build custom workflows                                 using otio                                 and leveraging matchbox's incredibly                                 powerful comparison tools                                 so let's take a look at all of this in                                 action and see just how powerful the                                 combination of matchbox and otio can be                                 here we have the latest version of the                                 cut handed over to us by the editorial                                 department                                 a pretty standard collection of files a                                 quicktime some audio guide tracks                                 an edl and we also have an aaf file                                 so let's just go ahead and import this                                 now                                 this af file here is simply a direct                                 export of the editor's timeline                                 as they're working on it in the cutting                                 room no pre-processing necessary                                 just select and export using open                                 timeline behind the scenes                                 we can simply drag and drop this file                                 onto the matchbox timeline                                 and we begin extracting all of the                                 necessary information                                 there is now also an otio file on disk                                 right next to the af                                 ready to be used for next time all ready                                 to be analyzed with any other otio                                 compatible tool                                 now let's grab the quicktime and those                                 audio guides                                 and let's also load the previous version                                 of the cart                                 which is conveniently stored in one easy                                 to access file right here                                 we simply call it a sequence file now                                 that we have everything loaded to our                                 new timeline                                 on the bottom and our old timeline on                                 the top let's just compare these two                                 and see what the differences are                                 what matchbox has done here is create a                                 number of events that are a match                                 between the old and new cuts                                 we can see where these sections have                                 been moved                                 where new shots have been inserted where                                 old                                 shots have been dropped where sections                                 have been                                 reordered and where shots have been                                 updated for a vfx update                                 very handy if we switch to the diffs                                 layer briefly                                 we can see here where matchbox has found                                 some things that we will be particularly                                 interested in                                 using the vfx tracing ability it has                                 found a clip here that has gone from                                 version                                      version                                                               comparison                                 of the images and show us exactly what's                                 changed                                 a helicopter has been added to the shot                                 here so we'd better make sure that the                                 sound effects editor knows about this                                 and adds one in for the next review                                 now that we have all of this info here                                 showing the matches between these two                                 versions                                 what can we do with it well we can run a                                 reconform to update all of our material                                 to this new version                                 we simply click on the run reconform                                 button up here                                 and get the process underway now                                 for us in the soundpost world we are                                 reconforming a pro tools session                                 which happens in real time as matchbox                                 does all the necessary editing for you                                 but what else can you do you can                                 reconform any text files                                 tab or comma separated that has standard                                 time code strings in it                                 perfect for reconforming a database of                                 dialogue or a list of specific vfx shots                                 that you might be interested in                                 you can also reconform a closed captions                                 file                                 but this isn't just about                                 post-production sound we can now                                 programmatically reconform a hero                                 timeline by selecting the                                 export hero reconform data option here                                 and then using our specialized system                                 inside hero to update your timeline to                                 the new cut                                 keep all of the work you've already done                                 getting your timeline set up                                 and just link to your new plates and get                                 back to the job at hand                                 all this data has obviously come out of                                 a non-linear editing system                                 in this case media composer but with                                 otio                                 you have the ability to incorporate                                 matchbox's powerful comparison tools                                 into your pipeline natively as a very                                 very basic example i have a simple                                 script set up here                                 to create an otio timeline there's                                 nothing fancy going on                                 we're just creating a few clips adding                                 them to our timeline                                 and creating an otio file now let's just                                 tweak things slightly                                 here's one where we've got version two                                 being generated right in front of us                                 after generating these files which you                                 can do using whatever data you have in                                 your pipeline                                 we can simply drag and drop these                                 directly into matchbox and hit compare                                 we immediately see where the matches are                                 and where the changes are                                 we can see there's been a new shot added                                 here and that this shot here has rolled                                 a certain number of frames                                 is just barely scratching the surface of                                 what can be done using this powerful                                 system                                 and we're very excited to see what kind                                 of workflows people will start to create                                 to streamline the process of comparison                                 of reconforming                                 of review but most importantly getting                                 the complicated work                                 of tracking changes out of the way so we                                 can all focus on creating beautiful                                 sounding and looking films                                 episodic shows commercials games                                 just telling stories and entertaining                                 people                                 so that's all for today thanks very much                                 for checking out this                                 quick demo of matchbox and how we are                                 utilizing open timeline io                                 to help people work smarter work faster                                 and have more time to focus on the                                 creative stuff that matters                                 awesome thank you andrew that was really                                 fantastic                                 i'm especially excited to see this uh                                 coming together                                 uh with the flexibility of otio all the                                 different adapters                                 um and having these sort of change                                 management things available in                                 our industry um we've been approached                                 many many times over the past few years                                 about                                 how do i compare two otio files and how                                 can i                                 how can i do this sort of comparison                                 stuff so um uh                                 i'm i'm really excited to check this out                                 um next we're going to talk uh                                 with mike mahoney from pixar                                 about the open timeline neo web service                                 that he's developed                                 hi everyone my name is mike mahoney i'm                                 a software engineer                                 in the production support engineering                                 team here at pixar i wanted to show you                                 today how we                                 use otio via a web service                                 to start off here is our place in the                                 pixar pipeline                                 we receive submissions from editorial                                 the domestic production version of the                                 film as well as any trailers                                 any of the                                                        versions of the film and stereo versions                                 of the film they're submitted to a web                                 application that the user then                                 interacts with to vet and catalog and                                 approve and store                                 the submissions they're then passed to                                 color grading and packaging and shipping                                 so we started using otio back on                                 incredibles                                   in                                                                    different way                                 prior to the movie dissolves were                                 handled on the production side of things                                 they were turned into a d shot which was                                 then passed to mastering for color                                 grading                                 incredibles                                                              shots separate                                 apply the grades in mastering and then                                 allow the mastering software to do the                                 dissolve                                 so at the time and for the previous                                                                                                      mastering in the form of a film log                                 that's just a playlist of shots but no                                 transition information                                 serendipitously the open timeline io                                 project was just spinning up                                 and as you can see here in this sample                                 otio file there was the concept of                                 transitions                                 seemed like a great place to start as we                                 dug in we started to find more useful                                 aspects of the otio project that really                                 sweetened the deal                                 the format conversion plug-ins provided                                 in the base                                 as well as the idea of the contrib                                 adapters and internal pixar adapters                                 meant that we could support in our                                 pipeline any of the various file formats                                 that                                 individual pieces of the pipeline might                                 need along the way so                                 when editorial would submit to this                                 cataloging web application you can see                                 here highlighted in yellow we                                 we immediately saved the submission in                                 its original file format to storage                                 and we found that a versatile way to                                 incorporate otio                                 into this application as well as others                                 was as a web application                                 that all playlists would pass through                                 upon retrieval from                                 storage you can see here that now by                                 virtue of the adapters we can support                                 either in or                                 out any of the file formats supported by                                 the open timeline io community                                 now a quick but important aside the cmx                                                                      edl adapter at the time didn't actually                                 support transitions but                                 after a bit of research figuring out                                 exactly how transitions were represented                                 in edls the actual implementation                                 inside the adapter to support writing                                 transitions                                 was super straightforward so as we                                 pulled the edls                                 out of the system for color grading as                                 requested by incredibles                                                 can now                                 satisfy that request along the way we                                 also began to realize that otio would                                 help us with catalog remastering                                 as new technology like hdr and                                         along thanks to the                                 up versioning built into the open                                 timeline io base any media that we pull                                 out whether it's legacy film logs                                 legacy otio versions it's all taken care                                 of and we always get                                 the latest and greatest when pulling                                 from storage so this primary application                                 as well as others we've written since                                 and scripts interact with otio via                                 a micro service you can see here it's                                 deployed to our internal cloud at a                                 production                                 and a staging environment as well as dev                                 environments and provides endpoints for                                 listing adapters as well as any kind of                                 conversion adapters are configured for                                 you can see in the example usage here                                 that we can take binary aaf                                 as input or edls or logs or urls with                                 authentication cookies which is actually                                 what we use most in this primary                                 application to fetch playlists from                                 an s                                                                     the httpi                                 command line utility for listing all of                                 the adapters that are currently                                 registered with                                 this host here's an example otio file                                 that is actually pretty                                 sparse one thing that i love about the                                 current otio implementation is that we                                 can                                 thin down to just the basics and it will                                 still be parsable upon ingest                                 we can then pipe that into our web                                 service and get it out as                                 a up versioned otio file                                 you can see here that media references                                 are actually connected through the                                 pixar media linker we can get it out as                                 an edl for example                                 we can get a as an edl that is in the                                 nucoda                                 style you can see here the two different                                 styles deal with the from comment in                                 different ways                                 we can get the media out as                                 play format for example pixar presto                                 playlist format                                 or as a film log saved to disk                                 via our utility here                                 pretty easy the microservice code itself                                 is pretty small only a couple hundred                                 lines written in the tornado framework                                 with python                                   benefits of this microweb service                                 architecture                                 include independent continuous                                 deployment to either a staging or                                 production environment                                 into multiple nodes since it's all                                 transient we can spin                                 up as many nodes as we need concurrent                                 processing any external dependencies                                 required by any of the adapters                                 are contained to the nodes that don't                                 need to be installed in every using                                 software package any number of using                                 services get to share the benefits of                                 maintaining                                 a single micro service deployment and                                 we've actually found that we can pass                                 the                                 endpoint off to our users and they find                                 it straightforward to                                 prototype and play with in script we                                 find that the development workflow is                                 also pretty straightforward                                 it involves three main players docker                                 get lab                                 and openshift which is actually a                                 container                                 orchestration platform built on top of                                 kubernetes our local development all                                 happens within                                 docker containers the otio package as                                 well as our pixar adapters                                 are pip installed via requirements text                                 file via                                 our internal px pi pi service and we use                                 a simple make file to spin up our dev                                 containers and run                                 unit tests and end-to-end tests which                                 have proved handy as the open timeline                                 io core package                                 evolves we use git lab to build and run                                 tests and perform reviews and deploy to                                 our various environments with the push                                 of a button                                 that's it thank you so much for watching                                 feel free to send me a message if you                                 have any questions                                 all right thanks mike um i'm i'm really                                 excited you know this is uh                                 to see um oti i used you know                                 close to home um but also in a really                                 flexible way that's that's made our                                 pipeline uh run                                 a lot a lot smoother so i appreciate                                 that                                 um okay next up let's talk about um our                                 road map and sort of where the project                                 is going                                 um in the future um and as part of that                                 we really want to highlight that                                 there's been a in the last year or so                                 there's been a really uh                                 strong sort of uptick in community                                 activity in the project um                                 we're getting a lot of questions and                                 ideas and code contributions from a lot                                 of different folks                                 um and we really appreciate this this                                 was one of the main reasons why                                 we wanted to open source open timeline                                 io and also to                                  engage with the academy and software                                  foundation                                  and to really find um you know our peers                                  working on the same kind of stuff                                  in lots of different companies lots of                                  different um use cases um and be able to                                  like                                  cooperate with each other which is                                  really great um                                  uh so what we're trying to do is we're                                  trying to shift to                                  some more community leadership on                                  specific projects                                  um and uh to set up some more sort of                                  working group                                  meetings and help kind of facilitate                                  people working on things so                                  um uh the um                                  recent uh image sequence uh support                                  project i think was a great example of                                  that where um                                  folks from a couple different companies                                  were able to um cooperate with each                                  other and                                  build an improvement to otio without our                                  sort of                                  um uh you know sort of core                                  team needing to do a lot of that that                                  work um                                  and and inviting new people into into                                  the project as well                                  um so we have a bunch of sort of                                  projects that are um                                  active in some form or another um some                                  more so than others                                  um there's been some improvements to our                                  continuous integration build system uh                                  we're switching                                  from travis to github actions for                                  example um                                  as well as improving our                                  cmake system um the google summer of                                  code project that i mentioned earlier                                  is wrapping up there's an effort                                  underway to                                  more formally document a sort of                                  specification for the otio                                  file format and data model                                  there's a contribution from autodesk                                  that's um                                  specifying a spatial coordinate system                                  schema                                  there's discussion about uh a prototype                                  of                                  an editing api so um with methods for                                  doing the sort of like overwrite insert                                  um those kinds of things that were                                  previously not                                  those operations were not really                                  represented in                                  otio um there's a blender integration                                  underway                                  um and improvements to the lens metadata                                  so                                  these are all like all sort of going in                                  some form or another                                  so if you want to participate in any of                                  those um you're welcome to                                  um uh there's also you know future                                  projects                                  things that we've we've talked about um                                  that are um                                  not necessarily underway at the moment                                  um but that we're                                  we're hoping that folks from the                                  community will will step up and                                  um and uh try to uh champion these                                  things so                                  um one of which is uh the non-linear                                  time warp effects                                  um we've made some stabs with this in                                  the past                                  uh somewhat unsuccessfully but um                                  but we would love to just move forward                                  on that that's something that comes up                                  quite                                  quite a lot um there's discussion about                                  annotations                                  um so draw overs and textual annotations                                  uh there's been requests for time                                  varying metadata so                                  something that might be sort of animated                                  over the course of a clip                                  or change over the course of a clip um                                  we                                  hope to uh do some improvements to the                                  way we represent                                  time um there's definitely some room for                                  uh improvement in our documentation um                                  and we'd like to support video effects                                  in the future as well                                  um and also just a shout out to you know                                  if you have an application that deals                                  with timelines                                  um please add otio support                                  into your application i think we're                                  getting we're getting pretty far with                                  the notion of adapters                                  um and plugins from from coming from the                                  community                                  but we really like to see uh developers                                  uh in this in in this realm uh                                  really adding native support um so                                  um we'll help to answer your questions                                  and and uh figure things out so                                  please reach out to us if you need some                                  help with that                                  um so if you'd like to get involved um                                  our our website is available at                                  opentimeline.io                                  we have a mailing list which is uh                                  mostly sort of announcements but we're                                  open to questions                                  and discussion on there as well um                                  there's a slack channel which                                  has quite a few people in it now that's                                  where a lot of the discussion is going                                  on                                  so you can join that there and we also                                  have every other week                                  um our steering committee meetings                                  which are open to everyone and we've                                  seen new people sort of showing up to                                  that                                  i'm getting a good discussion and that's                                  a great way to to meet the people who                                  are                                  involved and to talk about things                                  that you want to contribute with to or                                  or                                  or influence in our roadmap                                  and with that we'd like to open it up to                                  questions                                  and uh we have a bunch of people from                                  our                                  community here who are available to                                  answer things as well                                  hey we uh yeah we have one in the                                  q a list here from uh simran                                  and he asks will adapters be ported to c                                  plus officially or will this be up to                                  the community or is python going to be                                  this whole option                                  okay that's a great question um i would                                  say at the moment                                  we've we've got a few questions about                                  that at the moment we don't really have                                  plans to port those to seepless plus                                  it's not                                  really the top at the top of our list um                                  i think that                                  uh we're open to discussing that um                                  there's nothing really                                  preventing that um we were i think a                                  little shy                                  about introducing a plug-in mechanism to                                  the c-plus plus infrastructure there's a                                  bunch of different ways of doing that um                                  so if you have                                  sort of thoughts on how how that could                                  work well um that uh                                  it'll be it'll be good to know um so                                  it's not                                  it's not really high on our list but um                                  but if you want it like that's part of                                  this being a community driven project                                  um if that's something that the                                  community wants i'm more happy to help                                  facilitate that                                  great and uh we've got one other one                                  here                                  from him uh if the otio format is                                  extensible                                  would you recommend it as a native                                  storage format for an nle                                  any pitfalls um                                  yeah that's a great question um i think                                  that uh                                  you know we originated um                                  open timeline i o as an interchange                                  format                                  um and an interchange sort of workflow                                  thing                                  uh which is meant for the you know                                  something you would find in the sort of                                  import or export                                  dialogue in an application or                                  files that you're handing off but we                                  have had quite a few people ask about                                  uh you know using it more as like                                  the native file format for something or                                  using otio as the                                  sort of in-memory representation for for                                  something um                                  i would say that um if you were to go                                  that route you might be the first ones                                  to do it                                  um so it would be interesting to sort of                                  find out how that how that goes                                  um uh i think that um                                  we've certainly done some things                                  in-house where we're using otio as like                                  the primary file format for some of our                                  workflows                                  and just putting a lot of interesting                                  things into the metadata                                  for it um that's worked okay it doesn't                                  sometimes an application or a specific                                  workflow will want                                  um you know larger sort of binary things                                  or                                  or other stuff like that in in their                                  their native file format                                  so you may find some challenges there um                                  but uh                                  um but yeah i think that would be a                                  great thing to sort of um                                  talk with us more on on slack and and uh                                  at our tsc meetings and kind of find out                                  some more of like                                  what you have in mind with that                                  great any other questions                                  i think one question maybe we have for                                  the community is                                  um uh how did the                                  transition from the pure python to the                                  um c plus plus core work for people                                  um hopefully that went pretty smoothly                                  um i know we did hear from a couple                                  people who had some                                  some problems so if there's anybody                                  who's sort of still having problems                                  uh crossing that transition it would be                                  good for us to know                                  because we don't want folks having to                                  linger back on old versions of otio                                  and are there other things that you uh                                  feel that we should                                  have on our our roadmap that you that                                  you didn't see there or                                  the things that you're particularly                                  excited about                                  um feel free to chime in if there's                                  something that you want to                                  sort of upvote a bit                                  oh i see oh go ahead oh yeah i see a                                  question about                                  uh will otio help unify editorial                                  ingestion and interchange between                                  uh various editorial packages like avid                                  premiere final cut and                                  hero um i think that um                                  going straight from one non-linear                                  editing application to another                                  is something that oti could certainly                                  help with                                  um several of those uh sort of already                                  have                                  some uh some support for um                                  things like the final cut xml or aaf                                  format                                  um uh so that's something that                                  we'd love to sort of see in the future i                                  think our emphasis has been getting                                  things from non-linear editing                                  applications out to                                  sort of the rest of a visual effects                                  pipeline for example                                  um uh but there's nothing sort of                                  stopping us there i think that the                                  developers of several of those                                  applications have been                                  um maybe a little sort of uh                                  cautious or you know maybe supportive of                                  us but but not really like                                  um jumping in head first                                  um which is fine i think um uh i think                                  that's something that                                  as long as the community is sort of                                  asking for that from from those                                  um those folks i think that um i think                                  that could be really helpful                                  um yeah hopefully i answer your question                                  um the question do we support time based                                  conversions between                                  the ntsc non-integer rates and                                  integer rates we do have                                  some api for um for working with some of                                  those things                                  um we don't really have something to say                                  like conform your timeline                                  um uh from one of those rates to another                                  if that's                                  that's your question um so there's sort                                  of like low-level support for                                  uh for those rates um                                  but um uh but i think it would be up to                                  you to to write something to actually                                  define how you want to                                  snap things from from one to another                                  and that would be a great sort of use                                  case a great sort of                                  workflow use case to get into um so yeah                                  i was going to say maybe to add some                                  clarity to that also um                                  open timeline i o is frame rate agnostic                                  so you know unlike some other formats                                  that might                                  specify that everything is is in terms                                  of a given edit rate                                  um you're able to specify your time sort                                  of                                  in whatever way is native for the media                                  or if you wanted to specify everything                                  is being snapped to a given edit rate                                  you could do that                                  but again that's as josh was alluding to                                  that's an exercise for the user of open                                  timeline i o                                  to decide when they want to you know                                  use things at a certain rate or express                                  it in media native                                  um the next question is about is a rough                                  eta                                  for the um documentation overhaul uh                                  and no there isn't um uh                                  one thing that we're um                                  disgusting is uh you know as a community                                  based project it's a little hard for us                                  to sort of put deadlines on a lot of                                  things um                                  we've we've tried that in a few cases                                  that we're on our release schedule                                  um but at the moment there's no um                                  there's no schedule for the                                  documentation overhaul                                  if there's particular areas that you                                  feel uh we should focus on first or                                  whatever that                                  will be good to know                                  um let's see is anybody uh attempting to                                  use                                  the c plus api directly in their                                  native application                                  all right well perhaps we've um used up                                  all of everybody's questions                                  um maybe next time we'll do some prizes                                  for people that ask questions                                  um uh if you have other questions                                  later feel free to reach out to us on                                  the slack channel is probably our                                  preferred way of just sort of                                  sort of q a um the mailing list works                                  great as well                                  um and that's on the slide here i                                  believe that this                                  uh the recording of this session will be                                  available um                                  sometime soon and we're really glad to                                  talk with you all                                  and thanks to everybody who contributed                                  to the presentation                                  and everybody who's uh working on the                                  project um                                  it's been really really great to have                                  meet new people and                                  and to make uh make progress on on this                                  this project together so thank you                                  everybody
YouTube URL: https://www.youtube.com/watch?v=PeePyVrGY-M


