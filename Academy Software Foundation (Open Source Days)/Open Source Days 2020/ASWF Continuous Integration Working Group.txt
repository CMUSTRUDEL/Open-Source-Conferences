Title: ASWF Continuous Integration Working Group
Publication date: 2020-08-24
Playlist: Open Source Days 2020
Description: 
	ASWF Continuous Integration Working Group
Speakers: Christina Tempelaar-Lietz, Daniel Heckenberg, JF Panisset, Aloys Baillet

For more information about the Academy Software Foundation go to: https://www.aswf.io/
Captions: 
	                              uh welcome everyone to um                               this session where we will update the                               progress of the continuous integration                               working group the academy software                               foundation                               um we will have a few presentations                               uh i'll go through uh the proper agenda                               in a moment once um everyone's had a few                               seconds to uh to land                                and adjust                                as usual we do have                                both chat and q a in this session and as                                a fairly short session                                please don't feel that you need to wait                                until the end                                to post into the chat or the q a we'll                                do our best to overlap things as much as                                possible in order to                                um allow us to make best use of the time                                and um if uh we're planning on having a                                little bit of time at the end so                                we'll choose uh some of the questions                                that um                                have been upvoted uh in order to                                uh to answer those live the others we'll                                try and answer in the text box itself                                okay we have                                                       number so                                we will dive right in                                okay so today uh we'll give a quick                                update on                                what it is that we're trying to do with                                ci uh in the working group and for                                the academy software foundation in                                general with of course                                uh a short note to explain how                                these efforts uh relate to the vfx                                reference platform                                jf will be giving a bit of a background                                and                                also highlighting the current entry                                points in order to understand and                                redeploy                                the ci system for other needs alois will                                be giving an overview of                                the docker infrastructure that we're                                using to provide                                uh repeatable and efficient uh                                configuration and environments for our                                ci needs                                um christina will be giving us a case                                study example of how                                the ci system is being in use for one of                                our projects openexr                                and then we'll be going back to jf to                                discuss some of the                                active challenges that we're working on                                within the working group                                and that is definitely a hook for                                involvement from any of you or others                                that you may know who have                                interest or expertise in these                                challenging areas                                and lastly of course we'll have some                                time for discussion                                okay so as we move through you will hear                                from each of these people                                and hopefully see them on your screen                                and obviously they can each introduce                                themselves they go                                my name is daniel heckenberg i'm an rd                                supervisor at animal logic                                and i also serve as the chair of the                                aswf technical advisory committee and                                i've also been chairing the                                ci working group                                um contact details of course these are                                available elsewhere                                but if you'd like to take the moment now                                just to find the slack channel in                                particular                                we'll have this slide at the end of                                course of the session as well                                great so the ci infrastructure that we                                have                                developed uh was an attempt                                to uh provide modern                                uh ci infrastructure that would work                                well                                in an open source setting using                                primarily sort of github as the core of                                our                                as our open source control model                                this has undergone a number of                                evolutions and jf will talk to those in                                a moment but our goals                                were not only to serve our                                projects very well but also to really                                make it easy and encourage                                 best practice as a start so extending                                 our use of ci uh to things like static                                 analysis and so on                                 um and secondly also extending                                 um making making an infrastructure that                                 would make it easy for other                                 uh projects and other um                                 open source endeavors in order to pick                                 up parts of                                 sorry open source and proprietary studio                                 endeavors to pick up parts of                                 uh the system that we were developing                                 and reuse those in other contexts                                 and we'll be able to see how that's come                                 about particularly through the evolution                                 of the architecture that we're using                                 so a word about the vfx reference                                 platform                                 those of you who've been involved in                                 software development in our industry                                 will know that                                 the particular mix of commercial                                 binary components and large amounts of                                 open source                                 and proprietary in-house software create                                 a                                 a particular challenge for integration                                 and version management                                 um the vfx reference platform obviously                                 it was an attempt to                                 coordinate changes and testing                                 of all of those different combinations                                 in order to provide much                                 a much narrower matrix of configurations                                 and we are we are of course using that                                 uh                                 as the embodiment of our uh build                                 um configuration environment uh eloise                                 will talk a lot about                                 how we're actually taking the                                 essentially the specifications that the                                 best                                 vfx reform reference platform provides                                 and                                 uh turning those into concrete recipes                                 which we then use to build                                 uh docker containers which can be used                                 by our projects uh                                 or um for other purposes and indeed                                 uh we're doing that not only now for um                                 current and historical uh versions of                                 the reference platform but it also                                 allows us to do testing                                 for new and current versions as the                                 various components are developed                                 um there will be another session                                 specifically talking about the vfx                                 reference platform as part of open                                 source days                                 um happening tomorrow so please join in                                 there for more details                                 and with that uh we'll move over                                 to                                 just lost control good                                 sorry we're just having a mouse tussle                                 and with that we'll move over to                                 jf all yours uh                                 yes the remote control is                                 not working oh there we go just there's                                 a delay                                 okay uh so when the academy software                                 foundation                                 was uh first set up uh ci was                                 identified as one of the initial                                 deliverables                                 and the initial implementation was based                                 on a reference design that the linux                                 foundation had used                                 for some of its other uh                                 some of the other foundations that it                                 had helped                                 uh put in place so this was                                 a um and i am on the wrong slide                                 uh if anybody                                 is there any way that somebody could try                                 to control this                                 and move it backwards for me yes                                 i'll step in there we go there we go                                 okay                                 uh so the system was still using github                                 for and get for source code management                                 uh but                                 all other components uh were open source                                 and were hosted on a um                                 openstack uh cloud provider                                 and uh the                                 uh and then the system for managing                                 uh everything was based on uh                                 was based on jenkins and then a set                                 of predefined vms would host uh jenkins                                 linux and windows builders uh nexus for                                 artifact storage and then um                                 sonar cube for static analysis um                                 it turns out that it didn't work all                                 that well                                 for our needs it was somewhat                                 um it was uh somewhat uh java                                 centric because it had been really put                                 in place for uh                                 uh java based projects so it didn't work                                 as well for c                                 for our c mostly c plus and python                                 projects                                 um so and also it did not so the support                                 for windows was really not                                 quite there yet and it did not support                                 mac                                 so we then moved on to uh                                 a system fully based on github and azure                                 pipelines and the integration the                                 the interest of azure pipelines is that                                 it offered a modern                                 yaml based pipeline so you could define                                 uh your ci steps uh in a yaml file that                                 was controlled as part of your uh                                 of your source uh and it also                                 offered uh builder free builders for                                 linux windows and mac                                 uh which was a great attraction and                                 meant that our projects no longer had to                                 have                                 different ci's to cover different                                 platforms                                 it also supported build in container                                 workflows on linux and windows and                                 it had a number of third-party                                 integrations and we also                                 at that point we also moved to using the                                 sas based sonar cloud for static                                 analysis                                 but then um github basically azure                                 pipelines                                 kind of in a way although it is still                                 offered morphed into                                 uh github actions and github actions                                 having                                 kind of instantly so much mind share in                                 the open source community                                 we decided to transition to                                 github actions uh having ever you know                                 not having a separate ci system from the                                 scm system met fewer moving parts                                 it allowed us to do things like fairly                                 simply share                                 organizational level secrets so for                                 instance                                 a single token for sonar cloud analysis                                 or a single token                                 for github sorry pushing to docker                                 repositories could be shared across all                                 of our projects                                 it does offer uh linux windows                                 and mac builder builders and as i said                                 earlier it has                                 the widest develo open source developer                                 mindshare                                 a couple things that came up during the                                 the                                 keynote session is uh                                 the the desire to have a                                 a build infrastructure or a ci                                 infrastructure that is reproducible by                                 studios                                 see you cannot you know basically we it                                 is felt                                 that github at this point is                                 sufficiently                                 uh well known and even private                                 github instances are used by multiple                                 studios                                 that it really should and similarly                                 there are private versions                                 of external services like sonar cloud                                 that you could basically use the same                                 infrastructure                                 for building uh for either a private                                 build of an aswf project                                 or your own builds and then i also                                 wanted to uh point out that                                 we have a um                                 a reference project or a sample project                                 in                                 the uh aswf uh github                                 repo which uh is meant to capture                                 kind of the best practices and where                                 the projects what projects are agreeing                                 to                                 in terms of uh developer infrastructure                                 so it's kind of a developer-centric                                 piece of documentation if we want if you                                 want so                                 everybody is uh is who's interested is                                 encouraging he can look                                 and to contribute and that's it for me                                 so on to eloise                                 hi my name is i'm a development lead at                                 animal logic                                 and i've been involved with the aswf for                                 about a bit more than a year now year                                 and a half                                 um we started using docker                                 at animal logic in my personal                                 time a few years ago now and it felt                                 like                                 a good fit for the aswf needs                                 in terms of trying to have a platform                                 that would be consistent um and flexible                                 enough to run                                 unit test builds for many of the vfx                                 platform packages                                 one thing the main benefits we found                                 with the docker-based                                 approach that we used was mostly the                                 speed                                 when we run the test at the moment                                 in some of the platforms you still have                                 to build boost you still                                 have to build some of the upstream                                 dependencies before you can start                                 building um let's say open exr or                                 some of the other packages and then                                 running the test so you lose a lot of                                 time                                 before you know if you've broken                                 something in your builds                                 um so doca                                 allows you as a very lightweight virtual                                 machine to                                 have the same environment on it                                 at home on the cloud and to                                 know exactly how your tests are going to                                 land                                 um                                 so i'm trying to scroll down                                 thank you um so over the years                                 we've um created a vfx platform                                                                                            we've added                                                           with five and three um but the                                 making of the images for the year                                      were quite um                                 interesting because it was early on when                                 not                                 all packages had python                                  were not quite compatible yet but it was                                 a great place                                 to for people to actually try and make                                 sure that they had the python                                  environment working                                 and a few months ago we started with a                                                                      vfx here which is a brand new compiler                                 with new c plus                                 standard so these images have been able                                 to                                 allow all the different teams working on                                 on different packages to really test                                 their new the new compilers and make                                 sure that they                                 didn't break the old ones so if you go                                 on the                                 home page of the aswff github repository                                 you will see on in the readme all the                                 little all the                                 various images that we have um                                 i wanted to have a quick um                                 um recap on how much the images were                                 used so i ran some stats                                 and it's been quite popular openvdb                                 uh thanks to dan bailey was one of the                                 first clients of                                 uh pswf docker images um it's                                 now cloaking at                                                        open colorado was quite an early adopter                                 as well openyxr                                 um christina will talk about that a bit                                 more                                 open shading language uh as started                                 using this                                 just a few months ago open queue                                 was there as well we have pushed about                                                                                                in the cloud that it's a non-negligible                                 of                                 amount of data when you think about it                                 it's                                 um the biggest                                 packages are qt clang they're                                 all hundreds of megabytes each or more                                 than a gigabyte                                 for claims so it it takes a while to                                 upload and but the download on the cloud                                 is very quick so                                 it's still faster to download the                                 gigabyte of docker images than to                                 rebuild                                 um some of these packages like qt                                 we maintain actively about                                    um ci images so                                 that's the combination of all of the                                 fxes and the different packages that you                                 have here                                 and we have                                                          like qt                                 itself like um clang open exr                                 etc that are also maintained on the side                                 and used                                 so                                 go to the next slide slowly um                                 one of the things we're starting to work                                 on is                                 a set of runtime docker images so                                 the docker images that are used by the                                 ci system                                 are geared towards building software                                 and they have a lot of compilers a lot                                 of headers                                 um we can actually build slimmer images                                 for just runtime                                 that's something we started to                                 experiment with the usd working group                                 to be able to run usd on the cloud                                 inside jupyter notebooks for example                                 and we're also investigating how we can                                 make gpu                                 work in those docker                                 on the cloud you can make it work                                 locally on your workstation                                 quite easily but on the cloud is a                                 different problem altogether                                 so one of the things that                                 uh we're going to focus on now is                                 um how we go to provide this kind of                                 convenience on windows and mac                                 where containers are not as                                 experienced not as refined the                                 experience is quite rough to build                                 containers for windows                                 and mac does not actually support mac os                                 docker images                                 and in order to achieve that my hunch is                                 that we need to figure out a                                 package manager to build our packages                                 and to download them quickly                                 we'll still keep the docker convenience                                 for linux obviously where we can                                 but in order to replicate the ease of                                 use for ci                                 use cases i think we'll have to start                                 building                                 smaller packages and i'll leave                                 now the                                 to prisoner hi                                 so i'm christina templar elites i'm a                                 software engineer at epic games and i'm                                 also on the                                 tsc for openexr and i'm going to talk                                 about                                 continuous integration how we use it in                                 openexr                                 so our openasrci consists of two github                                 actions workflows                                 we have a ci workflow that is uh um we                                 call the ci workflow which is a                                 multi-platform multi-configuration set                                 of build jobs which are invoked upon                                 pull request and push                                 and then we also have an analysis                                 workflow that's a variety of slower                                 running jobs that are scheduled to run                                 weekly they                                 perform analysis on the on the library                                 and give us feedback like potential                                 security                                 vulnerabilities or potential memory                                 issues and so forth                                 these workflow files are described in                                 the repository in a directory called                                 github workflows and the name of the two                                 yaml files you'll see                                 listed here and let's see it do i have                                 control to go to the next slide                                 oh thank you so uh this is what you'll                                 see when you uh when you issue a pull                                 request to openexr                                 you'll see there's a section in the pull                                 request for checks                                 and it checks things like such that                                 you've signed off on your                                 on your submission and that you have are                                 signed up on your commit and that you've                                 assigned a cla and then now you'll also                                 see a series of builds get kicked off                                 which are a                                 bunch of different permutations of                                 different configurations                                 operating system different compilers                                 different vfx reference platforms                                 and these will all uh initially show a                                 small                                 yellow circle to the left of the job                                 that indicates it's running and once                                 they've completed they'll either have                                 a little green check mark or a little                                 red x indicating whether it's passed or                                 failed if your job does fail you can                                 click on the details link to the right                                 and that will take you to the output                                 logs to give you an indication of why it                                 failed                                 uh if someone could advance to the next                                 slide thank you                                 uh and then this is what the logs look                                 like you can also get to these logs by                                 clicking on the actions tab at the top                                 and if you click on if you come to them                                 via the actions tab you'll have to drill                                 down                                 into the ci to find your particular run                                 of the workflow                                 and then once you click on that you'll                                 see the list of jobs on the left                                 and then selecting a job which brings up                                 the logs for that job and within the                                 logs you'll see                                 a bunch of steps for that for that job                                 and then to the left of the step there's                                 a little carrot that you can twirl open                                 to see the                                 log output for that particular job to                                 give you some indication of why                                 the particular job failed is sometimes                                 they'll fail and have absolutely nothing                                 to do with your pull request sometimes                                 they                                 the checkout fails it freezes up or the                                 node entirely freezes up and doesn't run                                 anything and in that case                                 on the upper right here you can select                                 to rerun all jobs there isn't an option                                 to rerun just a single job                                 but usually if you just rerun all jobs                                 it runs everything and usually it                                 it it clears up any issues like a frozen                                 node that doesn't                                 happen too frequently um the next slide                                 so now i'm going to talk briefly about                                 what our what's in our analysis jobs and                                 our analysis workflow that runs weekly                                 we have a sonar cloud scan that performs                                 static analysis and it's configured to                                 also uh run coverage analysis we have a                                 valgrind memtrek job and then we have                                 openexr's                                 own fuzz test ilm imf fuzz test                                 next slide and uh                                 this is what the sonar cloud scan looks                                 like the center step the center filed                                 scan performs static analysis on both                                 compiled and source code                                 and it also uh is configured to run                                 coverage analysis                                 and this is uh this is what the sonar                                 cloud project page looks like for                                 openexr basically there's a                                 lot of information that you get back                                 from the scan it reports potential bugs                                 potential security vulnerabilities                                 code smells it gives an indication of                                 how well the library's code is covered                                 by the tests                                 in the library um the url is at the top                                 there                                 and uh there's there's a lot of                                 interesting information in here a lot of                                 historical metrics a lot of just fun                                 things to drill into so i encourage                                 people to go                                 look at this project page and poke                                 around and i think it's there's a lot of                                 fun information in there                                 next slide and then                                 as i said we also have a valgrind                                 memcheck job this profiles and debugs                                 the library detecting memory leaks and                                 errors things like uninitialized memory                                 or arrays out of bounds array access                                 and then we have openaxr's own fuzz test                                 ilm imf fuzz test this is                                 runs of its own fuzzing engine to uh                                 damage exr image files and then attempts                                 to                                 read them back in and see how resilient                                 the library is see if it produces any                                 failing assertions or any uh                                 if there's any potential memory leaks or                                 potential crashes                                 and then i also want to mention that                                 external to our ci were also now                                 monitored by google oss fuzz project                                 which is an online fuzzing                                 tool and that performs a comba it com                                 combines a bunch of different fuzzing                                 engines with a bunch of different                                 sanitizers and then reports back to us                                 potential                                 security vulnerabilities or potential                                 stability issues that we can                                 address and next slide                                 and then i also want to point out that                                 in the readme file which you                                 would have seen also in the docker                                 readme file um there's this                                 set of widgets here at the top and they                                 show this the current status of the                                 latest run of the ci workflow the latest                                 front of the                                 analysis workflow as well as the the                                 status of the latest                                 sonar cloud scan these are also links so                                 they're kind of convenient for being                                 able to get to that sonar cloud project                                 page if you don't want to go look for                                 that long url                                 and it also if you click on the cin                                 analysis uh                                 those links will take you to the the                                 logs for the latest uh runs of those                                 workflows                                 the next slide and then lastly i just                                 want to acknowledge michael dolan of                                 epic games who developed open colorio ci                                 and then dan bailey of ilm who developed                                 openvdb ci i leveraged their work                                 heavily and                                 developing open exrci and you'll see                                 if you look at the ci for the different                                 aswf projects there's a lot of                                 commonality so knowing this kind of                                 overview you                                 probably would be comfortable looking at                                 ci for the other projects                                 thank you and now i'll pass it back to                                 jf                                 perfect thank you and i did want to                                 while we're mentioning thanks to of                                 course                                 include a big thank you to the linux                                 foundation release engineering team                                 who provide underlying support for all                                 of the                                 infrastructure and expertise from other                                 projects are associated with                                 chess okay so next slide please                                 so um a very specific need that                                 our projects some of our projects have                                 is the ability to run opengl workloads                                 during the during the testing phase and                                 not only                                 opengl but actually hardware accelerated                                 opengl                                 in order to do conformance and exactness                                 testing in particular opens                                 ocio has both gpu and cpu paths and                                 needs to                                 uh verify those uh so that's proven to                                 be                                 quite a challenge to um                                 to provide this because free runners                                 provided                                 for open source uh in open source ci                                 systems typically do not                                 have uh gpus and systems that do have                                 gpus such as aws code builder typically                                 target cuda applications                                 not opengl applications that need an x                                 server                                 um there is a there's a tease                                 from one of the github roadmap issues                                 and that they                                 there may be an offering with gpu                                 accelerated                                 uh builders at some point in the future                                 but that is currently not uh available                                 uh                                 next slide please so one of the attempts                                 that we tried was to try to stand up                                 builders on the fly with uh terraform                                 and there's a number of requirements                                 that were                                 found you need a the nvidia grid driver                                 that provides accelerate hardware                                 accelerated opengl you need x server                                 uh you need to start your container with                                 very specific command line agreements                                 uh so right now we have a prototype but                                 we have not been able to productize that                                 yet and deliver that functionality uh                                 and we're looking at other options such                                 as using                                 uh libraries such as egl that avoid the                                 need for next server                                 and allow applications to speak directly                                 to the gpu                                 without requiring external machinery                                 we're                                 very much hoping to fight to have a                                 final solution in the next few weeks                                 next slide please and then                                 the other big deliverable is support for                                 windows and mac builds                                 and uh the what's interesting there is                                 the vfx reference platform                                 is now starting to specify baselines of                                 compiler and os versions for those                                 platforms                                 and that is what we're going to be                                 targeting                                 uh for now we don't think that we will                                 be you able to use                                 uh the container well especially uh as                                 there is no container support                                 on mac os except for the maximum orca                                 offering uh but there are enough                                 uh package managers that support those                                 platforms that we should be able to make                                 it work                                 and that's it for me                                 great thank you we've managed to get                                 through a lot of content                                 and uh unfortunately not much time for                                 discussion but that is an excellent hook                                 for uh to draw all of you into                                 further discussion on the slack channel                                 where we have all the time in the world                                 of course                                 um thanks again for all the presenters                                 and for all the work that others in the                                 working group have done over the last                                 year
YouTube URL: https://www.youtube.com/watch?v=BcCVHa5VH90


