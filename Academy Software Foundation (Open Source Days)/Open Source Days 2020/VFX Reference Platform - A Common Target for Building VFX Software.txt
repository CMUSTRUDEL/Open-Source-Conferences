Title: VFX Reference Platform - A Common Target for Building VFX Software
Publication date: 2020-08-24
Playlist: Open Source Days 2020
Description: 
	VFX Reference Platform - A Common Target for Building VFX Software
Speakers: Francois Chardavoine, Nick Cannon

For more information about the Academy Software Foundation go to: https://www.aswf.io/

An overview of the VFX Reference Platform initiative and summary of the latest collaborations across open source developers, studios and software vendors as we continue to address software versioning challenges and opportunities to improve interoperability.
Captions: 
	                              okay so welcome everybody to um                               to our talk on the visual effects                               reference platform and a big thank you                               to the academy software foundation for                               uh hope                               inviting us to talk here today um so                               my name is uh nick cannon uh i'm the cto                               at walt disney animation studios and i'm                               also going to be joined uh                                shortly by uh francois chardovine who's                                the vp of technology at lucasfilm                                um but today we're not representing our                                employers today we're representing uh                                the visual effects society technology                                committee and specifically our roles as                                co-leads of the vfx reference platform                                initiative                                and it's important to make that                                distinction because we're here                                representing um                                not just visual effects society members                                but the whole community of                                software developers of consumers artists                                studios um                                and so you know that's the context in                                which we're kind of presenting and                                talking to you today                                and what we want to talk to you about                                over the next kind of                                                 so                                is a little bit about what the platform                                is and a recap and even for those who                                think you know what it is or you do know                                what it is hopefully you'll be able to                                share something that you didn't                                know before um a little bit about how it                                works                                uh inside how the process works what's                                new and we have some                                uh some uh big announcements today that                                i'm                                excited to share and then a little bit                                about what's next what                                we see for the future and hopefully we                                have time at the end for questions and                                discussion as well                                um so what is the vfx reference platform                                um at a very high level it's a set of                                tool and library versions to be                                to be used as a common target platform                                for building                                software for the vfx and animation                                industry um                                it's a neutral and independent volunteer                                effort sponsored by the vs and one for                                the benefit of the vfx community                                and again this is really important to                                note like we do want to be independent                                it is a community driven                                uh effort so um you know so these events                                are super important                                important to us um we update the                                platform annually but there's a lot of                                activity that happens through the year                                we'll talk more about that in a minute                                and it's initially been focused on on                                linux and that's been a big part of the                                initial goals                                um because that's where a lot of the                                issues that we were trying to solve                                were appearing but to go before we go                                deeper into kind of what the platform is                                and                                why it's why it was needed uh it's                                important to                                understand a little bit of the history                                so we'll do a little bit of a history                                lesson                                uh for uh and we're gonna go back                                   years um to the year                                                                                                      um                                and uh and and what was happening in                                year                                               your high-end computer graphics had                                really been owned by silicon graphics                                sgi to that point                                and                                                                     of linux as a serious platform for                                digital content creation um and what we                                saw in year                                                                                                           which is the first                                at least on linux shake uh                                              uh                                the big composting package of the time                                released on linux                                and the following year maya                                           on linux for the first time                                 so suddenly we we had a suite of serious                                 digital content creation tools                                 available on linux and this marked the                                 beginning of a really                                 fundamental change in the economics of                                 running studios because suddenly                                 it commoditized the cost of of hardware                                 and the availability and                                 accessibility of these uh of these tools                                 and that meant suddenly you had more and                                 more artists wanting to collaborate                                 together                                 and this and and you know that became                                 more of an overhead of that                                 collaboration how do we                                 how do we ease that collaboration we                                 want to start creating pipeline tools                                 glue code                                 to kind of connect these different tools                                 together and to enable easy transfer of                                 data                                 and when you want to start writing tools                                 that connect to these                                 all these different software packages um                                 you're going to you want to make sure                                 there's                                 some level of compatibility between them                                 and guess what                                 the compatibility was an issue and we we                                 we saw                                 the beginnings of what a problem that                                 was later dubbed versionitis                                 where you write a bit of software um                                 that works with                                 with one product but then you know                                 there's an incompatibility with another                                 product and so                                 you can't it makes it hard to to                                 create these tools that can glue                                 everything together seamlessly without                                 these                                 compatibility issues this became such a                                 big issue                                 uh that in                                                              together                                 and really under the leadership of ray                                 feeney at the time the studio linux                                 initiative was created                                 and uh and you can if you don't know                                 about it you can check it out on                                 archive.org the                                 wayback machine studio.linux.com um                                 and uh this was a kind of an effort to                                 try and coordinate linux versions the                                 people using the linux distros and the                                 versions of distros they're using                                 between the vendors                                 and and the customers and it definitely                                 helps to some extent                                 but unfortunately you know this was a                                 challenging problem                                 and uh the problem with virginitis                                 continued to grow                                 to the point where uh at uh at                                                                                                       from vancouver that was i think                                 um their virgin islands was big enough                                 to get its very own birds of a feather                                 um and you know that was a packed room                                 in a hotel i                                 remember that well and you know lots of                                 uh uh                                 heated discussion people felt passionate                                 about it because they were people were                                 suffering on a day-to-day basis                                 and you know what people were                                 experiencing was upgrading versions of                                 software was really painful                                 and sometimes almost impossible you know                                 and it's certainly impractical                                 with huge amount of engineering overhead                                 and doing that and it was meaning that                                 the industry was slow to adopt new                                 technologies                                 and we were starting to stagnate we were                                 we were starting to you know because it                                 was so much effort just to upgrade a                                 component                                 we were not doing it and we and so the                                 industry was being held back from uh                                 from new features                                 um so the following year uh under the                                 leadership of robrito the the visual                                 effects society technology committee                                 kind of rebooted and reformed                                 um and uh and you know we were looking                                 at ways that we could help the industry                                 and virginities was a hot issue at the                                 time but hey we think we can do                                 something about this                                 we met with the software vendors or some                                 of the major software vendors                                 um at a at a an auto less hosted cto                                 meeting                                 with all the studios in                                            proposed a way forward with the vfx                                 reference platform and sought feedback                                 and a lot of input from                                 uh technology leaders uh and other                                 software vendors as well for                                 another discussions we were having that                                 really led to the formation of the vfx                                 reference platform that was launched in                                 in                                                                       to                                 francois who can uh tell us more about                                 it                                 yeah um so i think nick hinted at this                                 but                                 one aspect that's really specific i                                 think about visual effects and animation                                 on the linux platform is this notion of                                 integrated pipelines where                                 a lot of studios the industry at large                                 uses multiple major third-party                                 applications                                 essentially binary blobs on linux that                                 we use for content creation these are                                 the maya houdini katana nuke etc                                 and they're often treated as pipeline                                 development                                 platforms so their functionality is                                 heavily extended by proprietary plugins                                 these plugins are built on shared                                 libraries that are now used across                                 multiple applications                                 and in turn those plugins are uh often                                 rely                                 on additional third-party libraries like                                 qt python tbb                                 or industry libraries like openexr                                 and previously there really was no                                 coordination                                 between vendors on versions which meant                                 there there was so much effort spent in                                 trying to                                 build multiple targets coordinating                                 across compatibilities on the code side                                 not to mention the runtime side and and                                 this burden of support                                 was extremely high it was a large                                 portion of what                                 a lot of us in the industry were doing                                 so the goal here and why it was needed                                 was really to minimize incompatibilities                                 between software packages                                 and and find common ground for reducing                                 the software development friction                                 uh that everybody entails so that                                 everybody can actually focus on what we                                 care about which is pushing the state of                                 the art                                 and uh not not this business of uh                                 kind of a bureaucratic management of of                                 software versions                                 and overall it essentially encourages a                                 healthy linux ecosystem                                 in this kind of unique aspect where we                                 combine open source                                 with binary software uh for for all of                                 our day-to-day                                 um so how does this actually work in                                 practice                                 um obviously a lot of you have seen from                                 the participants are familiar with this                                 uh but essentially at its core uh we                                 have the visual effects societies uh                                 technology committee which i'd say                                 organizes the process of decision making                                 and the communication around it but is                                 truly independent across                                 all vendors and and users and studios                                 and and not just academy software                                 foundation members                                 obviously this is this is kind of a new                                 development which is extremely                                 beneficial but has                                 has been ongoing uh regardless and                                 we coordinate with um let me just move                                 this line                                 uh we coordinate with three of the major                                 vendors this is autodesk foundry and                                 side effects                                 essentially because these are some of                                 the larger                                 software packages or vendors that we all                                 rely on and and if we start there                                 it's a lot easier uh for for everyone                                 else to kind of tack onto that                                 this set of uh vendors is not not fixed                                 in time that could evolve                                 over time but it certainly was the the                                 best starting point for                                 for all of us to get to agree if we if                                 we could agree across the three vendors                                 and                                 the visual effects and animation                                 industry as a whole we had already made                                 a ton of progress here                                 and essentially this is openly                                 communicated this is an open process                                 uh where we communicate this to vfx                                 platform discuss which is a                                 google group that is open to everyone                                 and                                 we we really encourage as much feedback                                 and participation                                 as possible and revisit uh that that                                 feedback in an iterative process                                 more recently with the academy software                                 foundation coming in                                 as always we the philosophy for us is to                                 be                                 facilitators and not necessarily                                 evangelists and                                 get everyone to participate in the                                 process to reach the best possible                                 compromise for                                 everyone and and that compromise can                                 mean the difference between                                 leaning forward and pushing the industry                                 forward or minimizing change                                 and the burden for both software vendors                                 and um                                 industry participants uh studios that                                 have to deal with it                                 and a more recent aspect which is uh                                 kind of puts all of this in practice                                 is the the continuous integration                                 working group as part of the academy                                 software foundation                                 which helps automate the process of                                 builds targeting the visual effects                                 reference platform                                 and essentially validates a lot of those                                 decisions and and prove that they                                 continuously work                                 and run tests against those targets so                                 it's not just                                 putting out a white paper saying the                                 versions it's actually kind of testing                                 them out this is                                 like a real validation framework that we                                 hope to leverage and also beneficial for                                 a lot of studios that over time                                 may not have large software and r d                                 groups and can leverage some of these                                 these artifacts                                 more directly                                 and philosophically i think this is an                                 ongoing challenge i think it's been                                 really productive the discussions we've                                 had over the years in terms of that that                                 balance of leaning forward versus                                 compromise                                 recent ones that have been extremely                                 informative have been with                                 the the blender uh community for                                 instance that                                 uh prides itself on on leaning forward                                 but that we see a lot more studios                                 wanting to adopt and finding                                 right what the right blend is that                                 doesn't uh                                 compromise innovation for the software                                 vendors that really want to push forward                                 uh but also increases adoption and use                                 in that space                                 so the general schedule and how we go                                 about it uh again a lot of you familiar                                 with this but                                 essentially this we target a calendar                                 year and so                                 uh shortly after the calendar year                                 begins we start planning for                                 what the um the platform is going to be                                 for the year after that                                 and we get together as a group the the                                 small group that you saw with the uh                                 the the subset of vendors and us as                                 representatives from the vfxn animation                                 community and then we publish this first                                 draft                                 publicly there's nothing that's set in                                 stone at this point it's essentially                                 we've gotten a lot of big players to to                                 agree at least on this                                 what does everyone else think uh and we                                 we                                 give a lot of room for just community                                 feedback and iterating on some of the                                 points                                 where where we should lean forward where                                 we shouldn't uh and we have essentially                                 a first community meeting that typically                                 is around siggraph time                                 uh it doesn't have to be but obviously                                 it really helps to have more opportunity                                 to discuss                                 in person where where possible so that's                                 essentially what we're doing both now                                 and next week                                 um and then shortly after siggraph we                                 officially published a final draft                                 or the final version of what should be                                 targeted                                 for software that is built and released                                 in the next                                 calendar year now in some instances                                 there's late-breaking changes                                 these are not weighed lightly                                 these really need the general approval                                 of the community to make changes there's                                 a few instances where we                                 we know that there's some packages we                                 rely on the release later openvdb is a                                 good example of that                                 and we can sort of agree to it sooner                                 that we'll target a later release                                 uh but we also have to keep in mind that                                 it's extremely owners for large software                                 vendors                                 to suddenly make changes especially if                                 they tend to release software early in                                 the year                                 in the calendar year now potentially                                 they will only have a couple months to                                 make changes                                 and and we really have to balance uh the                                 the overall needs of what we're trying                                 to achieve                                 so what's new for next year uh                                 let's see the                                 did this go backwards no uh here we go                                 the a lot of the major recent changes                                 that we've looked at uh recently have                                 been essentially setting                                 the c plus uh default build version we                                 went from c                                 plus                                                                     these are some of the major changes                                 that we don't want to do too often we                                 often leap for ugly years to give people                                 some time to adopt and                                 uh and deploy and upgrade their                                 pipelines before a major change                                 two years later here we upgraded                                 upgraded the c plus standard as well                                 uh as well as gcc six um                                 and then uh last year essentially this                                 calendar year                                 python three was the big push this is                                 something that we have been                                 kind of punting down the road little by                                 little each year                                 given how much uh how hard it was going                                 to be for both studios and vendors                                 to uh to adopt but we knew we'd have to                                 deal with it sooner or later                                 so we kind of we set a line in the sand                                 and then we moved that line by one year                                 and now                                 and then we actually did it uh and                                 uh now is really the time where                                 everybody's pushing for python three and                                 that was just a major                                 milestone where the hope was to not                                 change too much                                 across a couple years to give people a                                 chance to upgrade to python                                    so now for next calendar year a couple                                 of the things that we're we're talking                                 about and that we're proposing and                                 and gathering feedback on are um                                 the question of which python                                                                                          again the kind of pros and cons around                                 leaning forward                                 uh we're going to tackle some of the                                 questions around qut licensing and what                                 does that mean in terms of choosing a                                 version                                 and choosing a licensing and whether the                                 choice of licensing should be specified                                 in the platform                                 uh more importantly and this has been an                                 ongoing topic                                 we're hoping to look beyond linux at                                 other platforms                                 i won't still steal mixed thunder on                                 this uh and more generally                                 using kind of build and deployment uh                                 opportunities by looking at the the                                 academy software foundation                                 docker efforts uh and nick i'll hand it                                 back to you for the rest                                 perfect thank you very much um okay                                 so uh this so what we're seeing right                                 here is                                 this is uh this is the platform so these                                 are the different components and this is                                 where we stand today uh candia                                         obviously the big change moving to                                 python                                     and so what does                                                         is still                                 still a draft for us um but here's the                                 here's the                                                            that's a bit of an eye chart so let's                                 kind of highlight some of the big                                 changes                                 um and so the the changes here are                                 highlighted in in orange and                                 some of the bolder ones i just want to                                 call out some big changes                                 this is still a draft so and we're not                                 going to finalize the platform for                                 another three to four weeks                                 so there's still and you know part of us                                 doing this event today is to kind of                                 invite you to give us feedback do you                                 see any issues if you have any concerns                                 with this                                 but i'll first call out um the c                                 compiler                                 uh and uh c plus plus at the bottom                                 there so we're taking a big leap this                                 year from                                 uh gcc six to gcc nine and that's going                                 to give us c plus plus                                                   has been                                 you know we've had a vocal group of                                 people who've been asking for this you                                 know really wanting to                                 modernize development practices in the                                 industry and so uh we're                                 very happy to to be proposing this uh                                 this move to gcc nine and c plus plus                                                                     and also wanted to call out kind of open                                 exr and open color i o you know                                 they've given their talks already you                                 know over the last uh                                 today and yesterday and um you know                                 there's major releases coming in                                 so it's it's really exciting you know i                                 you know i've been involved in this                                 initiative from the beginning                                 and seen some of these some of these                                 components stagnate so it's particularly                                 rewarding to see these                                 these major releases and really as a                                 result of the great work the academy                                 software foundation is doing in kind of                                 in kind of nurturing and sponsoring kind                                 of reinvigorating these projects so                                 i just want to call out that's great to                                 see something is not highly                                 highlighted i want to call out as well                                 is so far we're saying                                 python                                                                   next year as well                                 and uh and i'm already seeing questions                                 coming in the q and a                                 and thanks now and i'll i'll get to                                 those you know why moving to                                 three or eight i'll talk about that in                                 in in a little bit                                 um and you one other note i'll say you                                 know we've been as                                 we talked about in the history we've                                 been behind the curve for a long time                                 and                                 i think you know give or take one or two                                 maybe                                 what we're proposing right here is is                                 really getting to the latest major                                 version                                 of of almost all the components and that                                 really is a significant milestone it's                                 taken us maybe sort of                                 uh you know seven years to get here but                                 um it did what this really gives is                                 we've managed to coordinate a change uh                                 to to be on kind of modern                                 uh modern components and unlocking all                                 those capabilities so                                 uh you know and that's been uh due to                                 the great                                 input and collaboration cooperation from                                 the software vendors and and the studios                                 as well                                 so let's get into that uh question about                                 python three seven or three eight                                 um uh so python three seven was new                                 this year um we were talking about                                 python three i think since my very                                      i remember a meeting                                 where we were talking about python                                      and then i was like no way we                                 are we're doing that that's crazy so it                                 took us                                             we got to python three um better late                                 than never maybe                                 but um you know when we're definitely                                 hearing                                 many community requests for for us to                                 move to                                     um and uh you know definitely recognize                                 like that's what the community that's                                 what the community                                 uh you know the majority of people are                                 asking for um but there's some                                 practicalities around that                                 uh which i want to talk about you know                                 the migration from python                                   is going to take some time the vendors                                 have done a lot of work over the last                                    months                                 to be able to accommodate python                                      their                                 in in their products it's not                                 straightforward because of some of the                                 some of the things they have to link                                 against like you                                 your usd is highly complex boost is                                 complex                                 and so it means changing uh python                                 interpreters versions is is challenging                                 they actually most vendors actually have                                 two builds now they'll have a python two                                 build and a python                                           um and uh and it's going to take a while                                 for that for the customers for the big                                 studios                                 to migrate these enormous python                                        bases to python                                    um i will say like hopefully everyone                                 here from any studio you have your                                 python                                             plan in progress right now because uh                                 you're going to be left adrift in in                                 you know in a year or two if you if you                                 don't get moving                                 um you know and there is a fantastic                                 and you've just now under the academy                                 software foundation they have a python                                   working group                                 if you want help or input or guidance on                                 best practices around python                                             definitely uh check that out and and                                 sign up                                 for the slack channels and meetings                                 there um                                 but the reality is like the software                                 vendors having to support python                                   builds and a python                                          for for at least next year um                                 and support for every build they have to                                 support                                 it has a significant overhead in uh the                                 amount of build resources they have just                                 in terms of compute of like                                 you know they're doing doing frequent                                 builds of these very large pieces of                                 software                                 um all the qa they have to do the                                 testing the logistics around                                 uh around support and all that kind of                                 thing and and there's high complexity                                 around it                                 now the vendors are like they're they're                                 saying hey look if we if the                                 community really really wants us to go                                 to python                                                we'll we'll do it um um but but there                                 but there's this very significant                                 trade-off involved in doing that                                 and that is that the more testing and                                 integration they're doing the more                                 overhead that they have                                 means they have less engineering results                                 to create the new features                                 that the artists want and that their                                 customers are asking for                                 um so they're really going to listen to                                 their customers you know so so                                 you know it's it's not it's not yes                                 please give us feedback                                 but speak to the software vendors if                                 you're a customer a paying customer                                 software vendor and you want them to                                 move to python                                                     important to you than seeing                                 more features in the next version let                                 them know                                 so so far um uh                                 you know that that's the consensus being                                 that we talked to so actually do you                                 know what                                 we're still in this transition uh maybe                                 it's better to stay on python                                        just for one more year                                 um so that's what we're recommending                                 stay on time                                     but but let's use that year to work                                 towards dynamic python loading                                 in the big dcc products so that they can                                 more interchangeably switch out                                 different python versions without this                                 significant overhead and                                 all the vendors they want to get to the                                 point and here for the people that they                                 want to get one where                                 where we can stay on the lights with the                                 latest python each year so that is                                 absolutely the goal                                 it's just maybe too quick to do that for                                 next year                                 and something else we're looking into as                                 well is um                                 there is some limited uh binary space                                 compatibility between                                 uh python python                                                      looking into that it's a fairly limited                                 api we're not sure if that's going to be                                 useful or not but                                 that's also something potentially                                 another angle into giving some more                                 flexibility around by film releases                                 so that's quite a bit around python um i                                 i've seen a whole bunch of questions pop                                 up so we'll get to that in the q a and                                 we'll talk more about it                                 uh the next one uh an even more fun                                 topic qt licensing                                 so i will just preface this by saying i                                 am not a lawyer                                 uh this is not legal advice this is just                                 sharing some information for awareness                                 in case you weren't                                 weren't already aware of some changes in                                 qt licensing so                                 uh what isn't new is that qt is you know                                 sorry i say qt you're not cute it's a                                 habit i can't break it                                 uh so qt is dual licensed um                                 you pay for a commercial license and if                                 you don't then you're using the open                                 source                                 license and that open source license                                 changed uh with                                 uh qt                                                           changed from lgpl version                                           version                                    that does have implications for certain                                 types of uses of qt                                 shouldn't end up really in our industry                                 but if you're not sure if you're                                 questioning about it                                 it's worth checking out particularly if                                 you distribute products particularly for                                 embedded                                 applications so check out they've got a                                 great frequently asked questions                                 document on their website which explains                                 more about the implications of that                                 change                                 and then there was a there was another                                 change in just in january of this year                                 um that the qt company announced that                                 the long-term support releases                                 are only going to be available for                                 commercial licensees from qt                                      and the majority of licensees in in our                                 industry                                 and even with the software vendors tend                                 to use the open source license i think                                 there are some that use                                 commercial licensees most open source                                 and                                 uh again there's a link there where you                                 can you can see more about                                 about this change um and this one does                                 have implications                                 um qt                                                          um and and they've they've committed to                                 keep support                                 and point releases for qg                                             the release of qt                                 six but qt six is slated for release as                                 soon as the end of this year                                 um so i think and this is personal                                 speculation only on my um                                 for me i think probably can expect                                 another year of support from                                 uh for qut                                      for open source licensees and so this is                                 this is an issue for not just for our                                 industry it's for all                                 open source qt licensees this has been a                                 big discussion                                 when uh there's we're kind of we're                                 keeping in touch with the community                                 we're seeing what happens in this space                                 um you know                                 that the move from qt                                         was a tremendous effort for the software                                 vendors and if                                 that rubs into the yearbook we saw a few                                 fewer new features coming out because                                 they're putting a lot of engineering eff                                 into that                                 qt six is likely to be a similar kind of                                 transition and                                 uh we're not going to rush into that by                                 any means and and we've made good use of                                 the long-term support releases in the                                 past by sticking with a version of qt                                 for                                 for two to three years so um this this                                 is something that we will be watching                                 out for it's something we'll be talking                                 about over the next year but i just want                                 to make sure that everyone's                                 gonna make sure everyone's aware of this                                 change                                 okay so now now the exciting bit uh                                 beyond linux so                                 um very much folks on linux initially                                 lots of lots of requests                                 for uh for uh mac os and windows support                                 and so                                 from next year we will be supporting mac                                 os and windows                                 um but what does that mean in the in the                                 context of                                 the vpx reference platform it's really                                 about binary                                 like how do we how do we can we express                                 with a platform                                 a kind of a a a platform that's kind of                                 offers a higher degree of                                 binary compatibility and the way we do                                 that for linux is that we have                                 gcc we specify gcc and glibc the                                 compiler version and the sdk version um                                 so is it is it maybe we should do the                                 same thing for mac os                                 and windows um so we spent the last few                                 months doing a bunch of research into                                 this and trying to work out what the                                 appropriate way of doing things for each                                 of those platforms is                                 let's talk about mac os first um                                 so xcode the the ide on in this                                 ecosystem                                 uh has something called in that project                                 called the deployment target and that                                 identifies the kind of the earliest                                 operating system                                 version on which your software can run                                 um so that seems like a good basis on                                 which to say okay well                                 that's that's a solid foundation it                                 gives you an api compatibility                                 um and uh it's not just an x code on the                                 on the command line                                 with clang look at the compiler there's                                 a flag there                                 and and that really specifies the apis                                 that are marked as available                                 um uh when built when building and then                                 in the linker                                 you split this by uh you know that flag                                 there and                                 um and that really instructs the linker                                 to create a key in the info.plist file                                 which marks the executable as being able                                 to run or not for a given                                 os um you can set those things to be                                 different you really shouldn't i think                                 is the consensus                                 it doesn't really make much sense um                                 and in in what about the compiler                                 version well you know xcode                                 can install older or newer sdks so it                                 turns out there's really no need for us                                 to be able to specify an xcode version                                 um the minimum of that if we already                                 specified deployment target                                 then that's all that already implies                                 what versions of xcode are going to                                 work or not uh so really it turns out                                 and you know                                 making it simple but you know macro                                 support is as simple as                                 us defining what the minimum deployment                                 target is uh in                                 in xcode or uh on with those command                                 line options and we're saying that's                                 going to be                                       for uh for cy                                                           this is the sdk version this is the set                                 of apis this is not the os                                 version uh so the minimum os version                                 they'll be supported by                                 um by the various dcc products that then                                 has released it's                                 that's really up to them so clearly it                                 can't be older than                                                                                                         want to say it's                                                      beautiful whatever reasons that they may                                 have internally to want to do that                                 so again we're not saying the minimum                                 the minimum os is going to be guaranteed                                 to be                                       um uh it's really this is really about                                 api compatibility                                 so that's that's mac os um                                 oh and a little footnote on this we're                                 in our first year with this so we'll see                                 how we go but                                 it is still possible for runtime                                 behavior to be affected by                                 uh by the sdk and os versions and for                                 what hardware you're using and that kind                                 of thing                                 we're not sure how much of an issue this                                 is going to be um and                                 we'll we'll see how we go basically so                                 again it's                                 it's it'll be year one for us next year                                 we'll learn and we'll we'll adapt to                                 the way we specify for mac os if we need                                 to                                 okay windows um this has also been made                                 easier for us in recent years than it                                 was in the past when we looked at it so                                 api compatibility has been stable since                                 visual studio                                                                                                       more straightforward                                 and it turns out there's three key                                 components for vfx reference platform                                 support for windows                                 um first of all you got the windows sdk                                 um and actually v                                                       since visual studio                                       if we wanted to go back and guarantee                                 support for vista and windows                                                                                           but it doesn't seem to be any kind of                                 desire to want to do that uh so                                 we're going to we're going to specify                                 v                                                      um and the next one is essentially the                                 compiler version it's the platform tool                                 set                                 uh you know visual studio uh                                                                                they all use visual c plus plus                                       and any software built by any uh uh                                 any uh c plus                                                      backwards api compatible                                 so so we we we can use we can we can use                                 any of those                                 uh those platforms but                                 uh we also want to specify the c plus                                 plus language standard which we already                                 have in the platform and we're saying we                                 want to make it at c plus                                                                                                         not supported by visual studio                                           mostly supported                                 from visual studio                                      so that's what the windows support looks                                 like                                 we'll if we add with the windows sdk of                                 version                                                                visual studio                                      that gives us the uh the windows support                                 and uh what does this all look like we                                 gotta we bring it all together                                 um the platform for next year um we've                                 split out the uh the linux components so                                 we have                                 a section for linux section for mac os                                 section for windows and then                                  the common components that apply to                                  every operating system                                  this will be reflected on the website                                  just as soon as i                                  uh i hit sync after this so probably                                  from                                  just after midday uh pacific time anyway                                  the                                  um the vfx platform.com uh website will                                  be updated with all of this                                  there's also a footnote there explaining                                  a little bit more about um                                  the mac os aspect of it as well so                                  yeah check that out um                                  moving on from that um the academy                                  software foundation docker project                                  this was i think uh referred to this it                                  was talked about more extensively the                                  the ci working group uh talk yesterday                                  so check that out if you're interested                                  to know more about it                                  but uh i just wanna call this out                                  because it's a fantastic resource it                                  offers automated builds of                                  all of recent vfx reference platforms in                                  really easy to consume                                  uh docker images all the the at least                                  for linux at the cy                                    cy                                                                       for you to build against um and uh                                  definitely the plan is for them to be                                  able to offer                                  um mac os and windows builds in future                                  as well that we're standing up all the                                  infrastructure to do that so                                  um that's great i mean what that's meant                                  for us uh                                  from the platform perspective is much                                  faster validation when we first                                  published the draft of                                  in may for                                                             doing the bulk of the work and i'm just                                  a huge thank you to alloys for his work                                  on this                                  project it's it's it's a huge                                  contribution he's made to the community                                  um i just want to recognize all his                                  efforts um but so                                  so he took the the                                                      them in system                                  did some automated builds came up with                                  some issues and with some bugs and that                                  helped us tweak the platform and have                                  really                                  valuable feedback and it would have been                                  the kind of thing that maybe we wouldn't                                  have caught                                  until you know you know september                                  october of of                                  previous years so that's been hugely                                  useful it's also useful as a                                  as a source of kind of reference builds                                  um                                  uh so if you wanna know what compiler                                  flags to use uh that kind of thing then                                  again check out the                                  uh the docker project we want that to be                                  the kind of canonical                                  reference for how to build these                                  components in a sensible way                                  okay so that's what's what's new a                                  little bit about                                  what's next um uh the first thing is                                  kind of operating system trends um                                  you know just something we're seeing                                  obviously it's great now we're                                  supporting uh the                                  three major operating systems um what                                  we're also seeing is the the lines are                                  starting to blur between the operating                                  systems between containerization                                  and uh you know window system for linux                                  as well which is which is significant                                  development and                                  and potentially you know support there                                  for cuda and and other things                                  there's some really interesting                                  opportunities there and how we can                                  potentially blend                                  some of these different os capabilities                                  together um                                  so that's that's something we're keeping                                  an eye on and seeing what that means but                                  you know that                                  that's exciting um the other thing is it                                  just is it's just something it's not                                  nothing uh urgent but something to keep                                  an eye on from for the further future                                  is linux specifically um you know all                                  these complex dccs                                  these digital content creation tools                                  that we have that rely on you know uh                                  very complex um display mechanics and                                  accelerated                                  uh graphics they're very reliant on                                  opengl                                  and x                                                                   uh                                  being or so the x                                                        and                                  uh and the industry is really going to                                  need to get to to come together                                  to work out um you know how how                                  how do we continue to have a healthy eco                                  linux ecosystem                                  uh for uh for these really complex uh                                  desktop applications                                  um that these high-end graphics so                                  that's just something to think                                  that for us to think about and talk                                  about uh over the over the next few                                  years                                  um qt                                                                    talk about like i said before you know                                  there's now shorter support for the open                                  source licensees                                  qt                                                                      significant effort and                                  what's going to be the timing around                                  that so that's something to keep an eye                                  on                                  and then something else was mentioned in                                  the ci working group yesterday                                  um you know cross-platform portal                                  portable package definitions                                  uh is something that we that we don't                                  have any kind of standards for right now                                  and it's something that we're definitely                                  uh it's definitely sorely needed because                                  it's it's like it's going to be                                  something that's creating a big                                  administrative overhead so some of the                                  contenders there res conda conan                                  uh you know res is great for studios                                  some studios using it already                                  uh conan's being used and a fan tree                                  talked a little bit about that in their                                  talk um they've been making great use of                                  conan so                                  um you know the great thing is you know                                  the the software vendors                                  are are talking with each other                                  facilitated through the vfx reference                                  platform working group                                  through the uh the the the chemistry                                  foundation ci working group                                  so we really have this good ecosystem of                                  like coordination and facilitation of                                  how to how do we come you know how do we                                  harmonize and standardize on some of                                  these things so                                  i'm optimistic about about that one                                  i think and i think that's that's that's                                  kind of bringing us to our conclusion so                                  it's really over to you at this point                                  again we're a community driven                                  initiative we really rely on you on                                  feedback from you                                  so please reach out to us please you                                  know share with us kind of uh you know                                  what your needs are what your challenges                                  are how can the vfx reference platform                                  help                                  uh you know in the context of you know                                  us really tackling virginitis as                                  as the issue um let the software vendors                                  know what is important to you and                                  you know often yes studios will tell                                  them about what features they want and                                  that kind of thing                                  but make sure they they know what the                                  issues from a platform perspective                                  what are the challenges for software                                  integration what do you want from them                                  from                                  python versions or whatever it may be so                                  uh don't hold back in in                                  sharing that with them you know they can                                  only respond to what they're hearing                                  um just as a general note you know                                  please get involved with open source                                  projects contribute                                  to those that you care about um you know                                  again you know                                  the platform's only as healthy as the as                                  the components that are                                  uh that it represents uh and uh                                  and and and by the way you know the uh                                  our ideal is is that the components get                                  healthy enough that they can fall out of                                  the platform                                  at some point you know there's there are                                  plenty of great open source packages                                  and components that are essential to our                                  industry uh that are not in                                  the visual reference platform because                                  they're incredibly well behaved and                                  don't cause any version issues                                  so um you know that's another note just                                  to point out                                  and then finally like if you care about                                  a healthy sustainable linux ecosystem                                  then advocate for that and support the                                  linux distribution providers and make                                  sure that they know                                  what your needs are and make sure that                                  the                                  the software vendors know that you care                                  about linux as a                                  important platform um you know which                                  which you know which we've been using as                                  our primary platform for                                  for                                                                      a fantastic development environment and                                  such a                                  great environment for connecting these                                  these kind of disparate applications                                  together into this kind of seamless art                                  artist pipelines and collaboration                                  pipelines                                  so that's it i just have to say thank                                  you to a few people so                                  uh autodesk foundry side effects                                  software who've really been our partners                                  in the vfx reference platform                                  uh the academy software foundation for                                  the great work they're doing the vs for                                  sponsoring us and the tech committee has                                  done a great job of spinning out this                                  initiative                                  rob ray and david who were really                                  instrumental in the creation of the vfx                                  reference platform                                  and i won't read everyone's name on in                                  the middle there but you know these are                                  particularly                                  these these are contributors who've made                                  a particular contribution over the over                                  the last year or support from in the                                  last year                                  and particularly with um some of the uh                                  the support of windows and mac os as                                  well                                  and reached thank you to all members of                                  our community you know                                  it represents the vfx platform                                  discussion and by the way that can be                                  anyone so please sign up                                  to that google group but there's a link                                  coming up for that in                                  in a moment in fact probably right now                                  um and that really brings us to the end                                  so                                  uh just throw it open to questions i                                  know we've got a whole bunch in the q a                                  section there which i haven't had a                                  chance to look at because i've been i've                                  been busy uh                                  talking so maybe i'll hand over to                                  francois and he can start tackling some                                  of those and and                                  i'll take a look at them too                                  sure and and thank you thank you very                                  much for all of that um                                  there's a couple questions actually that                                  might be that tie into a general concept                                  around the vfx reference platform that                                  might be worth clarifying that                                  that a lot of the motivation for the                                  platform is to help specify to                                  software vendors and in particular                                  commercial software vendors                                  at least initially what is the common                                  target because that is the one that we                                  least control as a community and as a as                                  an industry compared to say open source                                  packages that have come out of our                                  industry                                  and it's really for the vendors to agree                                  on a set of versions to target                                  and less on mandates for everybody                                  consuming we're not telling studios how                                  to run their own internal                                  facilities and which versions they                                  should use we're only telling                                  vendors to minimize the matrix of                                  possible versions that we have to deal                                  with                                  uh as as clients essentially uh so that                                  then you can                                  choose within your studios what what to                                  use or not and                                  the the list of libraries or components                                  that are in the vfx reference platform                                  are uh are the ones that are problematic                                  if there isn't a problem with something                                  there's no point in                                  in specifying it uh or if there isn't                                  necessarily a clean resolution something                                  that's continuously evolving                                  uh usd is a good question of something                                  that's come up recently as a                                  when do we set the version and the                                  reality is it's been shifting so much                                  recently that                                  there isn't a lot of value in the short                                  term but there will be at some point                                  uh and we've done that but the                                  uh certain questions around for instance                                  uh mandating cmake                                  uh there's no point in telling you know                                  an isotropics or an autodesk you should                                  use cmake                                  uh which is essentially a lot of what                                  the goals of the the reference platform                                  are                                  and uh some of the common guidelines for                                  open source software for our industry                                  like standardizing on cmake that's an                                  area where the academy software                                  foundation can play                                  a really large role in promoting more of                                  a standard around how we build things                                  and that's that's where questions around                                  like res and                                  conda and conan and others come in as                                  well um                                  so that that goes a little bit i think                                  the the question around cmake and then                                  the other one which was around opengl is                                  versus vulgar                                  vulcan is is an example where it's a                                  challenge to deal with but mandating a                                  single version                                  is not necessarily going to to solve the                                  challenge as it is and in the past                                  that that hasn't been a problem there                                  hasn't been a vendor that's used a                                  different version of opengl                                  that suddenly prevents us from compiling                                  kind of standard libraries                                  there there's individual issues of                                  course that come up but not at                                  the scale where it bubbles up to being                                  uh                                  like an active member of the list uh                                  i would say great thanks once while i                                  i'll tackle                                  just some of some of the questions i can                                  answer pretty quickly um how does one                                  join the python                                                  so currently the python                                                  has                                  has two representatives from each of uh                                  the vs tech committee so that's francois                                  and i                                  uh two from autodesk two from side                                  effects                                  and uh two from foundry um and we and we                                  kept it at that intentionally for the                                  first few years just just to                                  drink but i just make sure we have some                                  stability and a common understanding and                                  i think that group's really working                                  really well now and so we'd absolutely                                  so we would i think consider opening                                  that up uh a little                                  not not to make poke but potentially                                  adding representatives from uh if you                                  represent a software vendor                                  um then uh then then absolutely you know                                  you contact us feedback vfxplatform.com                                  and and and you know and we can we can                                  have a discussion around around                                  uh around potential inclusion um and                                  also maybe in the future there's                                  potential to add                                  um uh uh                                  there's the potential to add some                                  representatives of the uh open source                                  community as well                                  um so you know and or or the other the                                  other                                  sort of uh stakeholders who aren't                                  really represented are                                  uh maintainers of some of the bigger                                  open source projects as well                                  so but we we don't want to make this                                  make this too big the the working group                                  keeping the working groups uh relatively                                  small and contains important because                                  we develop a trust where each of the                                  vendors who really you know some some of                                  them some of this                                  competitive nature between them they                                  actually got to point where they                                  they're quite open and sharing it really                                  helps them all out and helps us all out                                  so                                  we want to make it so big that they feel                                  like they can't share openly                                  that's one of the considerations one of                                  the other questions two of the other                                  questions are around                                  the providing of rpms from the automated                                  build system                                  um i think it'd be great to do that                                  that's not something for the vx                                  reference platform that's really                                  something to take to the uh to the ci                                  the the academy software foundation's                                  ci working group it's them who are                                  building uh that um                                  uh that build infrastructure and to have                                  the potential the ability to be able to                                  do that so definitely definitely                                  suggest taking that to them and a key                                  challenge there is also in maintaining                                  flexibility and how you might want to                                  use those                                  those build artifacts where rpms is                                  probably not                                  the the most flexible approach to for                                  for a lot of facilities that actually do                                  have to install                                  multiple versions in parallel link                                  against them in parallel and probably                                  dynamically set a runtime environment                                  that has to use a certain combination                                  based on on their preference and that's                                  where it bleeds into                                  things like res and and other packages                                  and that's that's been an ongoing topic                                  of discussion of how                                  do we how much of an active role does                                  the vfx                                  reference platform play in specifying or                                  mandating                                  a means in how to use those binary                                  artifacts that might be provided                                  uh and it's it's a complex one that                                  there isn't a lot of common alignment                                  but it's another area where again the                                  software                                  foundation can play a major role given                                  that the ci group is uh                                  is tackling this head-on and there's a                                  somewhat related just because of the rpm                                  aspect question around                                  coordination with um the uh the distros                                  and                                  we've often done especially these these                                  kinds of groups                                  uh every year a survey around who's                                  using what distro                                  overwhelmingly they they have been red                                  hat based or variant                                  like centos or fedora and so that's                                  essentially been the default and in                                  terms of coordination                                  there hasn't been a lot of effort in                                  active coordination for                                  upstream seeding of versions that we                                  care about where the biggest                                  coordination comes in is making sure                                  that the choices we make                                  will be easy to deploy or use or                                  implement based on what a general                                  current version is                                  in the industry and so looking at for                                  instance the dts compatibility                                  with red hat or centos versions and will                                  you even be able to use gcc six                                  on the common platform in the industry                                  and that that's the area where we've                                  um fostered a lot more kind of                                  conversation and iteration                                  uh we we haven't to this point actively                                  pushed on the the distros themselves                                  some of that is also a timing issue that                                  at the time when distros                                  make choices uh we tend to lag                                  uh like a year plus behind those where                                  we make a decision                                  software vendors have to implement them                                  then we start deploying it in production                                  which often takes its own                                  time sometimes up to year uh and and now                                  you're a couple years down the road from                                  when some of those decisions would have                                  been made at the district level                                  which makes that challenging                                  right another working question sorry                                  that i think maybe misunderstood how do                                  you join the python three working group                                  um there's definitely a slack channel in                                  the uh aswf uh                                  um uh slack workspace so you can you can                                  certainly join that to get to get some                                  activity and then i think                                  i think the meetings don't go to the                                  attack mailing list um                                  i think um                                  the another question was around qt                                     and                                  are we looking to try and get a bug                                  bug fixes back ported uh to                                       it's um this is a kind of an ongoing i                                  would say an ongoing dialogue between                                  the vendors who are                                  who are commercial licensees of uh of                                  cutie working with the qt company to try                                  and get that done                                  um like like any organization you know                                  the qt company you're getting lots of                                  requests from all over the place and                                  they're going to listen more to the                                  commercial licenses and also open source                                  licenses                                  and they're going to they're going to                                  make decisions about what they want to                                  do so                                  um again the vfx reference platform what                                  that does                                  that does give us the ability to engage                                  with the qt company and bring the                                  collective leverage                                  of the industry as a whole and so you                                  know                                  when we've we've not really made good uh                                  necessary needs to make a good use of                                  that but um                                  but a few years ago definitely i mean                                  the qt company uh well i guess when it                                  was when it was uh                                  just when i think it was about digital                                  but there were there was a good                                  engagement um with us to see graph and                                  um they've certainly been open to                                  feedback and that kind of thing so um                                  so yes uh i i but i think the qt company                                  is really moving on if they're focused                                  on qt six right now                                  um and another question any long-term                                  thoughts start to come out for other                                  platforms such as mobile or web-based                                  tools applications uh                                  not really uh honestly we've been very                                  focused on on windows and mac                                  and again so far the goal of the the                                  really the goals of the                                  reference platform been focused on                                  solving the issue of virginitis                                  and helping ensure we have a healthy                                  linux ecosystem for the industry                                  um and and so those goals may evolve                                  over time                                  but um uh you know so far                                  we haven't really had any you know and                                  if there are issues from the in out                                  there in the community around                                  uh you know web development or judgment                                  for mobile                                  let us know if we can help they                                  definitely want you looking at but we've                                  not heard anything about that so far                                  there's one there's one question as well                                  from eric about whether or not we were                                  thinking about collecting data                                  on what the usage breakdown is the                                  various vfx reference platform versions                                  of previous years in the wild and and                                  how much                                  we should be driving like sunsetting                                  some of those and no longer supporting                                  them                                  so a lot of that is driven not                                  necessarily by the the platform itself                                  but which                                  by which applications are still in use                                  at studios if you're using an ancient                                  version of maya or side effects or                                  something else                                  that requires an older version of qt or                                  python                                  studios are going to keep that alive                                  internally that's a bit of a decision                                  that                                  essentially there's a balance where uh                                  i don't know that there's a ton of value                                  in forcing individual studios to                                  push forward if they're not running into                                  trouble using something that they've                                  already invested in                                  what we really try to do uh just with                                  the general process in general                                  is uh tell vendors that you know                                  sometimes like i said if they release                                  early in the year it's challenging to                                  adopt the very latest                                  cy version of the reference platform and                                  so what we ask is                                  don't introduce yet another combination                                  of the matrix                                  try to stick to either the previous                                  year's version or the next year but at                                  least                                  stick to the set versions that your your                                  clients are used to dealing with                                  uh and that's that's how we reduce a                                  little bit of the complexity                                  but then if that application uh remains                                  in use for                                  another one or two years and certainly                                  that's not uncommon to drag on for a bit                                  uh especially with entrenched workflows                                  where there aren't a lot of resources to                                  update that to something new                                  um we there isn't necessarily an effort                                  to push for that i think the vendors                                  certainly have a lot of metrics around                                  which of their older versions are in                                  play and that could help inform i think                                  uh just from an informational point of                                  view a sense of                                  what's still in use which in turn                                  informs a lot of our own community open                                  source projects to know                                  like well if i deprecate this thing and                                  force you know c plus plus                                     this is the percentage of users that                                  can't use my library and                                  at least right now that that's i think                                  interesting information to gather                                  uh and something that's again also                                  useful in the context of the academy                                  software                                  foundation um but it's it's not                                  necessarily something where we would                                  push for deprecation from a vfx                                  reference platform                                  point of view um nick i don't know if                                  you feel differently                                  no no i i yeah i i i agree and i think                                  you know definitely                                  again we will listen to the needs of the                                  community and see what the issues are                                  and again we can start                                  you know evolving our philosophy and and                                  the goals of the platform but but                                  currently yeah i don't think we're                                  pushing to do that just address a couple                                  of uh other questions i saw you know                                  where do all the major major vendors                                  stand with the respect that python                                    builds                                  if you go to the vfxplatform.com website                                  under useful links there is a link to a                                  google spreadsheet that that is kind of                                  open to the community to update which                                  has                                  all the kind of uh open source and                                  commercial products and where they stand                                  with respect to python                                                 so and thanks to jf we just posted the                                  link in in the q a there if you don't                                  want to click on it directly                                  um uh what else is going to answer uh                                  so is the goal to skip to straight                                  straight to                                         i guess this is python                                                  i'm concerned because python is on                                  yearly releases now                                  um yeah i i i can't say i can't say yes                                  that's that's the goal but i think that                                  logically                                  that would be the way we would go is                                  that if we're not we're not moving to                                  uh                                                                      that we would be ready to                                  to to go to the latest stable supported                                  release                                  uh in the following year                                                 assuming we can work it out with the                                  vendors to get there but yeah                                  definitely that's that that's a goal uh                                  to get to that point where we can stay                                  with the latest release each year                                  um now that every every vendor is                                  starting to roll out uh                                  usd support wouldn't it be a good time                                  to add the vfx platform as well                                  uh this has definitely come up a lot uh                                  the                                  and usd is an interesting one it's a big                                  complex                                  library that's moving and instead of                                  tools it's moving really really fast                                  we don't want to hold that back so uh                                  you know it's one of those things that's                                  actually                                  moving fast enough and this is                                  definitely a challenge for the software                                  vendors this is a challenge for the                                  community                                  um and it's still trying to find its                                  place and                                  and and you know and and it has a                                  tremendous amount of capabilities like                                  they're getting battle proven in                                  production right now and that's                                  resulting in more changes                                  so i i don't i think it's too soon for                                  it to be part of the platform and for us                                  to be saying                                  hey everyone should stick on one release                                  for a hope for a whole                                            um i think that would be challenging i                                  think it would hold back progress for                                  the industry                                  so i think we're kind of we'll you know                                  the the the trade-off there is actually                                  a little bit of chaos                                  or not chaos maybe too but a little bit                                  of instability and                                  um and kind of version issues is kind of                                  okay in the early days because                                  what you get in return is a faster pace                                  of development uh and then maybe a                                  little bit further down uh we would look                                  to give some guidance on on                                  on usd compatibility um                                  as part of the platform                                  maybe the the one question that nick you                                  you touched upon uh while while                                  presenting but erin's question about                                  python                                                                  this is something that we've had                                  discussions about internally                                  but it's it's also one where i think                                  there's still an opportunity for for the                                  community and the vendors at large to                                  discuss                                  further i think based on the on the pros                                  and cons and the importance                                  i think that everybody using tools today                                  uh                                  really fleshing that out on vfx platform                                  discuss would be a really good next step                                  to get a sense of how much benefit                                  versus pain is incurred in comparing the                                  two                                  uh and help set the stage for the final                                  decision that that we're hoping to make                                  um in in a few weeks yeah and i will                                  share                                  thanks for i agree and i and you know                                  when you post on vfx platform discuss                                  know that a lot of influential people in                                  all the major software vendors are                                  reading what you post there                                  so uh even if they don't they're not                                  able to respond                                  uh definitely they will hear that                                  feedback um                                  uh question another question uh should                                  clang be considered as an alternative on                                  linux versus gcc                                  or being somewhat compatible with it                                  somehow uh unreal engines forces use                                  clang on linux                                  uh google filament mandates clang so                                  actually you can use clang we just                                  happen to specify gcc                                  but you can actually if you build clang                                  with the version of gcc we specify                                  to you know studios are having good uh                                  uh good experience doing that and using                                  that build of clang                                  to have to be to create compatible                                  software um                                  and that's something that we will we                                  need to look in a bit more in terms of                                  broadening how we define binary                                  compatibility on linux                                  um we didn't really get too much into                                  that this year because we were so                                  focused on it on mac os and windows                                  but um and and i think there's a on the                                  website                                  uh if you look at the footnote for gcc                                    that we added recently                                  i think it does talk a little bit about                                  how to build a little bit like building                                  clang with gcc to get some level of                                  binary compatibility                                  i think we've actually covered most of                                  the the questions in the q a                                  yeah feel free to reach out in the chat                                  as well                                  um yeah there's a good note from nathan                                  saying don't recommend visually mixing                                  visual c plus plus                                                                                                             we're not because now i think we're                                  specifying um                                  i remember the camera with exact but                                  visuals for your studio                                       i think that basically implies visual uh                                  visual c plus plus                                             isn't going to be supported and                                  shouldn't be used                                  uh we talk a lot about opengl but                                  nothing about metal on                                  on mac os um yes that's right                                  uh i i think you know most uh                                  software products have targeted opengl                                  because it's been cross-platform and it                                  gives you a broad surface to be able to                                  reach a broad audience                                  obviously when you're targeting to metal                                  you get all the benefits of the metal                                  brings but                                  you're limiting to a particular or you                                  know                                  a narrow set of platforms um so it's                                  really trade-offs that um                                  uh that uh the vendors have to make                                  um i think as we think about the purpose                                  and mission of the bishop expression                                  platform                                  we're trying to find a levels of                                  compatibility that are more kind of                                  cross-platform and open and flexible                                  who knows later down the line we may get                                  some more kind of like platform-specific                                  recommendations as well                                  um but that we're not not there yet                                  great i think that's that's it for all                                  the                                  the questions so um yeah with that for                                  anyone who's attending uh siggraph                                  uh attending in this virtual world um we                                  do have a birds of a feather                                  uh next week um where we will go uh                                  we'll                                  we'll recap of some of these things                                  we'll dive a bit deeper into into some                                  of the topics as well and hopefully have                                  some time for more discussion for anyone                                  who wants to come and join that                                  and you're and you're participating in                                  siggraph but thanks again to the academy                                  software foundation for hosting us                                  thanks francois                                  and uh and thank you for having us                                  thanks everyone
YouTube URL: https://www.youtube.com/watch?v=xNCeo9mjVNs


