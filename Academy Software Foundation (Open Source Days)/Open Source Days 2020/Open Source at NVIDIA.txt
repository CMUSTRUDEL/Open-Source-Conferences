Title: Open Source at NVIDIA
Publication date: 2020-08-24
Playlist: Open Source Days 2020
Description: 
	Open Source at NVIDIA
Speakers: Dirk Van Gelder

For more information about the Academy Software Foundation go to: https://www.aswf.io/

NVIDIA is a part of the open source community. We use open source software is used in almost every software project at toe company. In addition, we create and maintain dozens of open source software libraries for areas like deep learning, HPC, autonomous machines, rendering, design & visualization, and others. In this talk we will discuss the processes NVIDIA has put in place to streamline the licensing and intellectual property issues around open source software adoption, and discuss some of the public contributions the company has made. Recently NVIDIA has embraced Pixarâ€™s USD and Hydra as open standards to describe and render complex 3D worlds. We will discuss how these libraries are being adapted within NVIDIA to enable real time performance on complex virtual worlds, ray tracing with Vulkan and DX12, drawing many viewports concurrently, and streaming computational results from libraries like our PhysX simulation engine.
Captions: 
	                              hi everybody uh thanks for joining us                               today um                               so we're here to talk about open source                               at nvidia                               how we use open source software how we                               contribute to open source software and                               how we modify open source software to                               meet our needs                               um a little bit about me um my name is                                dirk van gelder i just joined nvidia so                                i'm a newbie and i'm trying to learn                                as we go um but before that i was an                                engineering lead at pixar animation                                studios for uh                                         but very excited to be here with you                                today                                so i wanted to talk a little bit about                                the history of open source and computer                                graphics                                because it used to be really hard to do                                when i started                                at pixar in the                                                        the company                                a lot of the studios you know the full                                proprietary code stacks were considered                                a competitive advantage                                um you know you wanted to lock away your                                intellectual property your patents                                um and you wanted to keep that to                                yourself because that was what was                                considered to give you an edge                                so we gave we made a lot of cool                                technology but it was really hard to                                share that with other people we couldn't                                talk about it with our co-workers at                                other companies and that felt kind of                                isolating                                um so i led uh pixar's first open source                                project open subdiv                                and it was really hard to figure out                                what we do with the patents what we do                                with                                licenses and what it even means and it                                was you know we managed to get through                                that and get it out there but it was it                                was harder                                and now it's much easier to do you see                                open source software in every place in                                computer graphics                                visual effects studios are running on                                open source operating systems                                and packages across the board and now we                                have an academy software foundation                                which runs this for us and i think it's                                uh it's a very cool development it was                                not always like this                                and it's pretty psyched i'm pretty                                psyched that it is the way it is                                now if you want to use open source                                software i want to talk a little bit                                about some of the things you might want                                to do                                one of those is licenses now this is                                review for a lot of people on this call                                but just in case                                um to talk about these things some                                licenses are                                permissive uh some software could come                                with a bsd and mit                                or apache license those are pretty                                equivalent apache says some things about                                patents                                i believe the academy software                                foundation is trying to standardize on                                you know something around apache                                and those generally if you're at a                                company who knows                                who has a pipeline for this setup if you                                have software with one of these licenses                                you can just ask                                and go through a process and use it and                                that's fantastic                                the software i work on omniverse has                                over                                                        licenses included within it but there                                are some things to watch out for                                some of the licenses are more                                restrictive like the gnu public license                                and the lesser-known public license the                                gnu public license says things about                                if you use software with a gpl license                                then your own software                                uh is it needs to be open source um the                                lgpl doesn't say that but it says some                                other things so                                if you do want to use open source                                software and it has one of those                                licenses                                be very sure to ask at your company what                                 that means and make sure that that's                                 cleared before you use it                                 just to avoid complications with a                                 disclaimer that i'm not a lawyer but                                 these are just things to keep in mind                                 now one question is why would nvidia                                 want to use open source want to                                 contribute to open source software why                                 is that important                                 now the thing is you know we make                                 platforms and we make chips and we make                                 a whole bunch of other things but we                                 want to empower developers to use them                                 and so if you're using a chip that has                                 several thousand cores on it and you                                 want to run the software on it that's                                 hard to do                                 that takes a lot to do so we want to                                 give developers software                                 to be able to get the best use out of                                 their gpus and particularly to use their                                 latest features when we roll out a                                 feature we want to have open source                                 software that backs that feature                                 so that people can learn how to use it                                 and really take advantage of the gpu to                                 their best abilities                                 the gpus best abilities and their best                                 abilities                                 so i'm going to talk about a couple                                 contributions that                                 open that nvidia has made to open source                                 but note on the bottom of the slide                                 there                                 developer.nvidia.com open dash source                                 almost all of the software packages that                                 we're going to talk about today                                 are listed on that page and their github                                 links are there and includes their open                                 source licenses                                 so if you want to find out more please                                 do go there and and find out                                 what those things are now the first                                 category is deep learning                                 deep learning is a really important                                 market for nvidia this is                                 you want to have a data center with                                 thousands of gpus spinning up                                 crunching a bunch of data and training                                 neural networks to learn about that data                                 and do things with it                                 so these are all software open source                                 software packages that nvidia has                                 created or contributed to                                 that allow you to do deep learning                                 another area is containers we've made                                 contributions to container runtimes                                 to enable nvidia gpus to work with these                                 containers                                 we didn't invent docker or kubernetes                                 but we've made contributions to help                                 them run with nvidia gpus because that's                                 very important                                 in data centers in particular                                 design and visualization remember these                                 two material definition language is                                 one of our contributions and universal                                 scene description                                 is a contribution by pixar we're going                                 to come back to these and talk about                                 these                                 in more detail in a little bit                                 autonomous vehicles we have our physics                                 simulation engine                                 which is super cool a gpu simulation                                 where you can have thousands of objects                                 simulating in real time i've been                                 playing with that recently                                 in addition we have image classification                                 image classification means                                 as you have an autonomous vehicle that's                                 driving around you have to recognize                                 like                                 where's the what's a fire hydrant what's                                 a stop sign what's another car                                 what's a pedestrian so these are                                 libraries that use artificial                                 intelligence to                                 help classify what's in the camera                                 sensor that's coming to an                                 autonomous vehicle and help that vehicle                                 reason about what's in front of it                                 similarly with redtail redtail is for                                 autonomous mobile robotics                                 but that allows perception and ai                                 contributions                                 for autonomous mobile robotics                                 high performance computing you know if                                 you want to take those thousands of                                 cuda cores on your nvidia gpu and you                                 want to crunch numbers with it                                 we want to give you the math libraries                                 to help you crunch those numbers without                                 writing                                 every single bit of low-level code                                 yourself we want to give you libraries                                 that allow you to get best gpu                                 utilization so that your                                 your methods run as fast as possible                                 high performance computing                                 and research this is where it gets kind                                 of wild a lot of the                                 research i wasn't aware of all the                                 research that happens at nvidia                                 i'm going to talk about a couple                                 examples today one example that i'm                                 going to talk about                                 is gagan at the bottom image generation                                 with generative adversarial neural                                 networks                                 and also kaulin inverse graphics                                 so let me jump in here so what we're                                 just what we're showing here is a video                                 about gogong                                 so again what this does is use                                 generative adversarial neural networks                                 literally neural networks that are                                 fighting with each other                                 which sounds amazing to be able to take                                 that segmentation map on the left                                 and say that color brown is rock and                                 it's been trained                                 on gazillions of pictures of nature                                 about what rock looks like                                 so it knows if you put brown there i'm                                 going to figure out                                 what rock is and i'm going to put rock                                 in that scene                                 using artificial intelligence here i'm                                 going to put a rock i'm going to put a                                 rock on the left-hand side                                 and it knows that that rock needs to                                 reflect in the water                                 even though you didn't tell it to                                 reflect in the water it's just looked at                                 lots of pictures of rocks and water and                                 it knows that there's reflection                                 there similarly for the vegetation                                 that's added                                 for the clouds in the sky all the images                                 on the right side are generated by a                                 neural network                                 it knows what mountains look like and it                                 knows that mountains reflect in water                                 and it knows here when you add snow into                                 this particular scene that the sky                                 should look different because it's been                                 trained on images                                 of the sky i'm going to talk about                                 another one here                                 this is an application which has been                                 trained you see these pictures of cars                                 on the left hand side                                 it's never been shown a                                               car this is with the library cowlin                                 it's only been shown lots and lots and                                 lots of pictures of cars                                 and from that it's figured out how to                                 make a                                                   this is a process called inverse                                 graphics graphics is the process where                                 you take a                                             and then from that                                                 create a                                          inverse graphics is create taking a                                    image                                 and generating                                                          takes advantage of a differential                                 renderer                                 to be able to render things and learn                                 when you render an object in                                         that does to the image                                 such that it can invert that this is                                 from the research department led by                                 sanja fidler and it's just amazing that                                 the work                                 it just seems like magic like how can                                 you take a picture of the side of a car                                 and make the back of it                                 because the computer knows what cars are                                 so                                 eventually i hope to understand this                                 stuff but i find it fascinating to see                                 and to watch literally magic well maybe                                 not literally                                 so one other thing that happens is you                                 saw that segmentation map                                 where there was different colors that                                 showed the pieces of the car                                 so this is generating a segmentation map                                 it knows what parts the windshield and                                 what's the hood and what's the tire and                                 what's the front headlight                                 and thus it generates on the                                            segmentation of that                                               different parts                                 and you can take advantage of that in                                 order to generate different materials                                 for those different parts                                 excuse me so you need you know you need                                 to know that the windshield is made of                                 glass and you need to know that the                                 headlight is made of glass but the hood                                 is not                                 and those segmentation maps are                                 generated by the ai technology from                                 nvidia research that is open source                                 in order to do that                                 so now i'm going to talk about something                                 if you saw ken youssef talk                                 this morning nano vdb is a                                 package that was released in open source                                 today by nvidia                                 at                                                       is a package developed by ken at digital                                 domain                                 and dreamworks and weda to be able to                                 take volumes and describe and process                                 those volumes                                 and nano vdb is a way of taking those                                 open vp volumes and turn them into                                 something that's a contiguous block of                                 memory that's very gpu friendly it's a                                 contiguous block of memory                                 with very few dependencies so that it                                 can really crank on the gpu and do                                 real-time retracing                                 here we have work by andrew andrew                                 reedmeyer                                 which is taking open nanovdb as a source                                 and then feeding it into a fluid sim                                 called flow on the gpu so this is all                                 enabled by nano vdb                                 released as open source today um one                                 thing i really like about nano vdb is                                 that it's just a single header                                 you can use it without any dependencies                                 and so it's when it says nano it is                                 really small and lightweight                                 and it enables you to do these things so                                 we're pretty psyched to contribute                                 nanovdb to the open source community                                 this may be one too many armadillos but                                 i can't get enough of watching these                                 clouds                                 float off this armadillo in real time                                 now one more example so this is not um                                 tracing                                 this is tracing a volume but it's                                 generating surfaces from that volume                                 in real time and this is                                             voxels                                 so nanovdb gives you the ability to do                                 real-time ray tracing                                 at interactive frame rates almost                                 independent of the underlying complexity                                 of the scene                                 this is all real time recorded recorded                                 off someone's desktop                                 so please do check out nanovdb                                 contribution                                 now i told you i was going to come back                                 to the material definition language                                 so mdl is a language which describes how                                 light interacts with surfaces it does                                 that                                 with energy conserving bsdfs and very                                 well                                 understood physically based properties                                 so that we can define physically based                                 materials and really understand how                                 light interacts with them                                 it was started in                                                  become open source                                 as of                                                         um so some of the nice things about the                                 material definition language                                 are that because we have a well                                 understood we really understand how                                 light interacts with these surfaces and                                 how these surfaces how these surface                                 materials work                                 we can have standardization among                                 different renderers                                 so we can generate something for inter                                 for real time rasterizing                                 interactive ray tracing and path tracing                                 and really know how they agree with each                                 other                                 a consistent look because of these                                 energy conserving vsdfs                                 so model defines how the light interacts                                 with a surface in a language in a c-like                                 language                                 um so it's a this is a you know it's a                                 blob of c like language which describes                                 it's a program now i'm going to jump                                 away from mdl and then jump right back                                 to it                                 i'm going to talk about usd this is                                 universal scene description                                 um developed by pixar animation studios                                 i may be biased but i think it's really                                 awesome                                 and we're very grateful for the for                                 pixar for contributing this to open                                 source and continuing to put the effort                                 that they do                                 into usd um it's built it's the it's the                                 culmination of several decades worth of                                 representations for                                                                                                        people collaborating on a film all                                 collaborating on in different parts of                                 that world                                 and how you do interchange among                                 different applications                                 and how you do that really scalably how                                 you have really complicated worlds flow                                 from one place to another within pixar                                 and that                                 is open sourced and it's gaining                                 widespread support in many dcc apps and                                 other production studios                                 and we're pretty psyched about it nvidia                                 is all in on usd                                 we think it's the bomb and you know we                                 just want to use it                                 it's being used throughout the company                                 uh the project that i'm working on                                 omniverse is based around usd and                                 you know we're psyched usd is great and                                 just to come back to muddle                                 to mdl so this is how you would take mdl                                 and embed it inside of usd                                 so here we have a program written in mdl                                 this nvidia slash coredefinitions.mdl                                 and that is embedded in a shader and a                                 material inside of usd so this becomes                                 a node inside of usd that interacts with                                 your renderer                                 so usb for us becomes a place where you                                 can encapsulate many different open                                 source                                 open source and not open source nodes                                 inside of a                                                       gathering place for many different                                 technologies                                 and we think that that's a pretty sweet                                 property                                 and there's a link on the bottom of the                                 page if you'd like to know more about                                 that                                 now i'm going to talk a little bit about                                 usd and hydra                                 and what they do and how we use them so                                 hydra                                 is the rendering architecture that's                                 included as part of usd                                 and so usd is the definition of the                                 scene hydra is the architecture which                                 can take that scene definition                                 and render it and produce pixels on the                                 back end                                 and we're going to talk a lot about                                 hydra particularly and usd                                 and what we've been doing to modify                                 those and enhance those for our work                                 within                                 nvidia so one of the things we noticed                                 is that usd you know you can go to one                                 app and save usd and go to another and                                 load it                                 but it also gives us the opportunity to                                 collaborate among                                 multiple among multiple users and                                 multiple apps interactively in real time                                 so i'm going to show you an example                                 where one can take                                 rhino                                                                using usd and our nucleus server be able                                 to communicate with                                 with omniverse interactively while you                                 work using the standard definition of                                 the                                                               so here again we're going to talk about                                 three different apps we're going to talk                                 about                                 rhino                                                                 studio max and revit                                 and how those things can use usd and                                 omniverse nucleus server                                 to communicate and give us real-time                                 path tracing                                 so this is the soho tower in beijing                                 it's a beautiful building                                 and the images that you're seeing here                                 are generated in real time in omniverse                                 they're real-time ray tracing                                 representations of that building                                 now we want to give artists working in                                 so here with rhino you have someone                                 shaping rhino on the left                                 and then bringing it into omniverse on                                 the right and showing how light plays                                 across that scene                                 similarly here we have an artist who is                                 moving buildings around                                 in                                                                communicating with omniverse to be able                                 to see how the light plays                                 and then we also have this is in revit                                 someone putting buildings                                 someone putting desks and computers and                                 then seeing in omniverse on the right                                 how the light plays across the scene                                 interactively so this is an example of                                 interactive collaboration through usd                                 and the nucleus server                                 with omniverse i'm going to talk a                                 little bit about                                 how getting real-time response getting                                 rapid response and real-time response                                 from usd and hydra                                 so this is a description of usd as it                                 exists in the open source repo                                 so you have usd on the left your scene                                 and you change an attribute say you                                 change a color                                 that's going to send a notice over to                                 usd imaging which is                                 the scene delegate which gathers                                 together all the information about                                 changing things in usd                                 and through an intermediate data                                 structure called the render index                                 communicates to the render delegate                                 which renders the picture now that's the                                 normal path that's great                                 but it's not super fast if you change                                 thousands of attributes all at the same                                 time                                 and so if you wanted to change thousands                                 of attributes all at the same time and                                 get really fast updates                                 you would need something like this other                                 people have done this animal logic has a                                 custom scene delegate that they use                                 as well as autodesk in their maya                                 application and                                 pixar has done this internally as well                                 custom team delegates for fast response                                 so here we use usd as the definition of                                 the world it is the ground truth                                 of what exists on the world where all                                 the objects are where all the materials                                 are                                 that's defined by usd now that static                                 scene is                                 is given to usd imaging and it's given                                 to our physics engine and the physics                                 engine takes that definition of the                                 world                                 and you know understands oh this is what                                 i need to do to run my physics and then                                 it starts running its physics and                                 say                                                                      sky                                 physics is communicating with the                                 omniverse steam delegate through a fast                                 path we have a set of data structures                                 that are really fast at sending all of                                 that data into the omniverse scene                                 delegate the omniverse team delegate                                 here acts                                 like an overlay on top of usd imaging                                 for the attributes that we know are                                 changing really rapidly                                 and so in that way we get real-time                                 updates with omniverse as an extension                                 to                                 um to usd and hydra                                 now another thing that we wanted to do                                 was we wanted to use vulcan and directx                                                                                                         exists                                 usd commutes to communicates to the                                 scene delegate we've cracked open those                                 render delegates and shown that we have                                 a pr man                                 storm and every render delegate in there                                 and the entity that wraps those up is a                                 hydra engine                                 and the hydra engines and the open                                 source repo have open gl dependencies                                 hydra started out entirely as an open as                                 an opengl thing                                 and pixar has been working to reduce the                                 opengl dependencies in hydra which is                                 awesome                                 and we're not totally there yet but we                                 see the progress but we wanted to jump                                 in and really get going                                 with vulcan and directx                                     so in order to do that we have a                                 separate hydra engine that is customized                                 for                                 vulcan and direct x                                                    omniverse scene delegate and our                                 omniverse render delegate                                 this is so that we can pass down command                                 cues and fill up those command cues with                                 all of the                                 commands necessary to draw the scene                                 we've abstracted away some of the vulcan                                 and directx                                    dependencies there so that the code can                                 work with both of those but it required                                 a customized hydra engine                                 um and and that's the way that we                                 accomplish that and then we have another                                 hydra engine                                 which is based on opengl for the                                 existing render delegates now                                 there's an asterisk there because this                                 is all work that's in progress                                 omniverse is the is the encapsulation of                                 a number of technical prototypes and                                 experiments that we've done                                 to figure out how to get best                                 performance out of hydra and usd                                 and what we're trying to do now is take                                 those things and refactor them into a                                 structure                                 that gives us that allows us to                                 interchange that allows us to use                                 different render delegates that allows                                 us to use our own render delegate                                 allows us to use real-time updates with                                 the omniverse scene delegate                                 and do that in a way that's well                                 structured i personally hope that this                                 also                                 allows us to create a contribution that                                 we can give back to the open source                                 community but                                 we're not committing to that but that's                                 what i personally hope                                 will end up with so i wanted to show you                                 an example of what happens when all of                                 these pieces come together                                 so this is a marbles demo that we did                                 for gtc                                      as you'll see this is running on a                                 single person's desktop                                 in real time showing physics                                 showing real-time ray tracing and                                 a number of artists contributed to this                                 work and it really shows off                                 what we're able to achieve in a system                                 that is built around open source                                 software                                 open source software is the core here                                 and it's an open standard and we want to                                 support that and build upon that                                 in ways that allow you to make a complex                                 interactive world                                 here you can see somebody running the                                 game                                 live this is all live none of this is                                 baked out and rendered                                 and so this is the work that we're doing                                 it's definitely a work in progress                                 but we want to continue to refine these                                 things to be able to best take advantage                                 of                                 hydra and usd um in real time with                                 real-time ray tracing                                 now this is all stuff that we're you                                 know this is all stuff that we're                                 working on as we said and if you're                                 working on similar things please do                                 reach out to us                                 um you know if you're doing vulcan with                                 hydra you're trying to do real-time                                 things with hydra                                 real-time ray tracing um usd interaction                                 um we'd love to chat you know this is um                                 it's open source and let's all be a                                 community and talk about it                                 because that's a thing that i'm very                                 excited to do                                 this is the end of our presentation i do                                 want to thank                                 the academy software foundation and the                                 linux foundation                                 for putting together such a sweet uh set                                 of presentations today and yesterday                                 it's just nice to see the community get                                 together and be able to talk about open                                 source software in this way and to be                                 able to have the visual effects and                                 animation community in particular                                 be a strong member of that community um                                 so thank you very much for joining us                                 today we have the esteemed ryan                                 stelzleny on our slack chat                                 um and um if there are any questions uh                                 we                                 we still have a few minutes to answer                                 them thank you for coming                                 i'm going to stop sharing and then go                                 over here                                 and then see we have                                                    very cool                                 oh larry grits hi larry nice to see you                                 i'm just going to read larry's thing                                 because larry's awesome i worked with                                 larry back in the day and                                 i think he's amazing derek an important                                 glt gpl subtlety                                 it's not the case that you if you use                                 gpl software that you were obligated to                                 open source your package                                 it's that you are only permitted to                                 redistribute a combined package of your                                 code and the gpl code if the whole thing                                 is licensed under gpo if you aren't                                 redistributing the software outside your                                 company eg an                                 internal tool you are under no such                                 obligation but one reason to be wary of                                 gpl code is that you may think today                                 that you have no interest in                                 redistributing your combined tool                                 but if later you change your mind and                                 want to turn it into an op                                 a commercial or open source app the use                                 of gpl software is internal                                 internal to it may may be the may limit                                 the means and licenses that you can                                 distribute it                                 so when in doubt with open source                                 software listen to larry grits                                 and thank you larry                                 and let's see                                 is there any other chat how exciting                                 that seems rather quiet i hope i didn't                                 bore you all to death or say things that                                 are completely obvious                                 oh there's a question in the qa or                                 there's a qa                                 oh where does mdl fit in with material x                                 that's a good question i think that                                 there are a number of developments i                                 believe happening with material x as a                                 standard                                 to be able to have material x work with                                 things like model and osl and other                                 things                                 um i don't i can't speak to those at the                                 moment                                 um i believe pixar is working on these                                 things and other people are                                 so i believe that um there's something                                 coming where material x and model can                                 work together                                 but i can't speak to that myself because                                 it's not an area of expertise                                 for me personally                                 i think materialx is great by the way                                 so quiet                                 and                                 i think if there are no questions                                 um i think if there are any questions                                 there is a                                 uh open source days nvidia channel on                                 the                                 aswf slack so please if you have any                                 questions                                 please go there and ask away on the                                 slack channel                                 thank you very much for coming today
YouTube URL: https://www.youtube.com/watch?v=ZQ6mTg3BEVg


