Title: New Developments in MaterialX
Publication date: 2020-08-24
Playlist: Open Source Days 2020
Description: 
	New Developments in MaterialX
Speakers: Doug Smythe, Jonathan Stone

For more information about the Academy Software Foundation go to: https://www.aswf.io/

MaterialX is an open standard for the description and transfer of rich material, shading and lookdev content between different DCC tools and renderers. In this session, we discuss many of the additions and improvements to the MaterialX specification, library, shader generation module and viewer from the past year, as well as providing a brief preview of current and future developments.
Captions: 
	                              all right hopefully we have everybody uh                               on board now                               um so let's get started uh hello                               everyone thanks for coming um                               i'm a doug smythe from industrial light                               magic and i'm here today to discuss some                               of the many additions and improvements                               that have been made to materialx over                               the past year                                and i'll also give you a brief preview                                of some current and future developments                                uh in the chat we have jonathan stone                                from lucasfilm's advanced development                                group                                and uh he can answer questions uh as                                they come up and will both be available                                afterwards for                                general q a so for those of you who are                                not as familiar with material x                                here's a brief overview it's a schema                                and file format that can be used to                                describe complete cg object looks                                using materialx you can describe your                                shading networks                                your materials your rendering                                assignments and hopefully everything you                                need                                to fully describe the look of a cg asset                                in an application independent                                portable open source format                                the specification also defines exact                                behavior for a large number of standard                                nodes                                for things like reading textures                                procedural pattern generation                                various mathematical and image                                processing operations                                various commonly used bsdf shading                                operations                                and nodes to blend and layer them all                                together in an energy conserving way                                this provides consistent predictable                                results                                when evaluating shading networks                                regardless of the application                                some key features of materialx include                                strong data typing                                full color management and compatibility                                with open with other open standards                                but most importantly it's very                                extensible with support for user-defined                                nodes                                shaders and data types as well as                                application specific                                attributes and parameters the bulk of                                material x is based on the idea of                                graphs of nodes with encapsulation                                rendering materials are associated with                                geometries in a look as seen in the                                upper right                                and the materials reference one and                                where shaders or                                other or surfaces or other types of                                shaders whose inputs can in turn be                                connected to graphs                                of pattern nodes but the nodes within a                                node graph can also be implemented as a                                graph of nodes                                and even the shaders themselves can be                                expressed as a grass                                a graph of bsdf and other nodes                                the parameter interface for every node                                regardless of type is defined using what                                we call a node def                                and the materialx specification provides                                definitions and implementations for a                                large set of pattern and bsdf nodes                                so for the rest of the talk i'm just                                going to assume that everyone is                                familiar with materialx and its nodes                                library and viewer and focus on what's                                changed over the past year                                to catch up on all things material x                                including current specification pdfs                                developer links and a developer guide                                and a link to our github                                please go to materialx.org                                so in this talk i'll go over new                                developments in five specific areas of                                material x                                updates to the specification where the                                standard nodes and structural elements                                that make up material x are defined                                updates to the shader generation module                                updates to the standalone viewer for                                materialx content materialx view                                updates to the open source materialx                                library and its api                                and improvements to the build                                 environment to support more development                                 platforms                                 i'll also note some newly added and                                 upcoming support for materialx content                                 in digital content creation applications                                 the first big update to the                                 specifications since last year is                                 support for units                                 the values for floating point and vector                                 inputs may                                 optionally be defined in terms of a                                 specific unit and unit type                                 which allows applications to                                 automatically convert values                                 from their specified unit into a scene                                 unit specified by the application                                 this way images and the quantities they                                 represent such as displacement amount                                 or the size of an image tile can be                                 specified in an absolute real-world size                                 and be converted automatically to the                                 expected scene units of the application                                 node definitions can also declare what                                 unit an implementation expects values to                                 be in                                 such as radians for trigonometric math                                 functions                                 in material x a single node class is                                 allowed to have multiple                                 node def signatures a to support                                 different combinations                                 of value types for the inputs and                                 outputs like float versus color                                 we found that there are a number of                                 situations where it could be impossible                                 to resolve exactly which node                                 signature to apply when some inputs were                                 unconnected and left at default values                                 so these have been corrected by creating                                 new nodes                                 so that all variants of a node have                                 exactly the same input and parameter                                 names                                 with only the types of the inputs and                                 the output varying from one node dev to                                 another                                 so these are the nodes that have been                                 affected by this change                                 we also introduced a complete set of                                 value comparison nodes so any desired                                 value test is now possible                                 of course we're continuing to work on                                 new ideas for the next version of                                 material x and i'll get to that in a                                 little bit                                 a large part of the work done in the                                 past year has been in improving the                                 quality of the shading in our shader gen                                 node implementations particularly for                                 glsl as seen in material xview                                 one big example of this is the addition                                 of energy compensation within certain                                 bsdf nodes                                 to compensate for energy missing from                                 multiple scattering on rough surfaces we                                 now use the method from turken                                 which is simple enough to be used both                                 offline and real-time rendering and                                 gives very good results                                 so here we can see a gold material that                                 was rendered in material x view                                 with energy compensation enabled on the                                 bottom compared to what we had before                                 without energy compensation                                 another very new big new addition is mdl                                 shader generation                                 joining the existing osl and glsl shader                                 generators                                 this work was a collaboration between                                 nvidia and autodesk and was presented                                 this year                                 at gtc                                                                   the results are                                 very very close match including the                                 fractal noise pattern on the                                 marble object on the right we expect                                 this                                 work to be merged into the                                             of the public material distribution on                                 github soon                                 like hopefully within the week or so                                 in the visual effects production world a                                 wedge is a series of images where one                                 value is gradually changed over a range                                 while all other values are held constant                                 materialx viewer has picked up a cool                                 new feature                                 where you can now generate a wedge image                                 of a float shader parameter by                                 hitting w images of the object geometry                                 are rendered into an offscreen buffer                                 and saved to disk                                 and all the shader ball images in the                                 talk today were generated using this new                                 feature                                 now the implementation is currently a                                 little bit primitive since you have to                                 edit a string of what parameter you want                                 to wedge in the viewer's source code and                                 then recompile                                 but it should be possible to add a more                                 friendly user interface for the feature                                 at some point                                 there's also a now a slider that you can                                 use to rotate the lighting environment i                                 don't know if you can see it in there                                 it's the                                 red box and there are any advanced                                 options um but it's really handy if you                                 want to see                                 like how highlights move over a surface                                 material or                                 to align the environment of the material                                 x view with                                 any other reference renders you might                                 have and then we also added a few more                                 command line options and hotkeys to make                                 using the program a little bit easier                                 a recently added feature is the ability                                 to take arbitrary material x pattern                                 graphs                                 and bake them down to a single texture                                 per shader input                                 including prop proper processing of                                 multiple udems                                 under the hood it's using the existing                                 shader gen glsl code generator to build                                 a shader execute that shader code and                                 write out a texture image                                 you can do this in material x view or                                 from a python script                                 and there's a sample python texture                                 baking script provided to show how to                                 use the new texture baker class                                 since last siggraph the materialx code                                 base has been updated to fully implement                                 the changes and features of the                                      rev                                                                     january                                      and its built-in document version                                 upgrade capability has been updated as                                 well                                 there's a few new utility methods in the                                 api to support new element types like gm                                 props and backdrop                                 elements as well as a standard platform                                 independent method to obtain the default                                 search path for documents                                 we also change the internal                                 representation of matrix types                                 so they are consistent with the                                 representation used in imath                                 usd and other commonly used libraries                                 for materialx builds we now support the                                 use of vs                                      clang                                                                   adding support for github actions to                                 provide continuous integration and cloud                                 testing                                 in april of this year the substance team                                 at adobe released a beta version                                 of the materialx plugin for substance                                 designer                                        with this plugin you can create shader                                 graphs in substance designer                                 and then view the graph in either opengl                                 or irae in the substance viewer                                 see your material directly in materialx                                 view or                                 export it into other materialx                                 compatible applications                                 there's also work being done in                                 autodesk's                                                              support there                                 exceeding it's currently at the level of                                 what they would call a technology demo                                 and even though they're issuing the                                 standard you know we make no promises                                 and there's no delivery date disclaimer                                 at this time they do have imported                                 materialx content working in the max                                 viewport and even at this stage it's                                 starting to look really really cool                                 autodesk has also continued to work on                                 the lookdevx editor for maya                                 which it showed a preview of at last                                 year's siggraph um                                 i don't know if there's anything said                                 about a release date or anything for the                                 product but                                 they are coming along very very nicely                                 and we'll see more                                 on that soon i'm sure                                 other things that are currently in the                                 works include                                 adding support for displacement shaders                                 in the osl                                 shader gen code generator improvements                                 to how                                 documents and their include files are                                 imported                                 oh i love this one a new shader                                 generator back end for spear view which                                 will enable the generation of                                 hlsl metal sl and webgl shaders                                 and javascript bindings for the                                 materialx api                                 yay um again i'll add that this                                 uh the little disclaimer that this is                                 work in progress in various forks of the                                 code base and we don't have an official                                 time frame for this to be merged in to                                 the main line                                 but this is all cool enough stuff that i                                 thought you guys would all be uh                                 interested                                 in hearing about it                                 as i mentioned earlier we are continuing                                 to work on improving material x                                 to that we are releasing a draft one                                 version                                 of the                                                                 seagraph                                 and here's a little sneak peek at some                                 of the upcoming enhancements that will                                 be added                                 the big one is material nodes these are                                 regular nodes                                 with material output types this replaces                                 the old material element                                 and shader refs and bind inputs and all                                 those things                                 should be much much nicer to work with                                 and i think that you will all really                                 like it                                 we're also adding a formalized target                                 definition element which will support                                 inheritance some new standard nodes                                 because                                 who doesn't like new nodes to play with                                 some new mechanisms for node                                 documentation and                                 nerd node organization um and we're also                                 taking the opportunity                                 to clean up uh some annoying legacy                                 things that made support in materialx in                                 applications a little bit more difficult                                 than it should be and                                 you know a whole lot more so that's a                                 brief overview what's coming in                                      we'll be talking about all of these                                 changes and more                                 at siggraph at our birds of a feather                                 session which is on tuesday august                                      at                                        we have a bunch of great speakers and                                 presentations and demos                                 and all that lined up and we'll be going                                 into a lot more detail on everything i                                 talked about today                                 as well as show and discuss other new                                 and future developments so if you're                                 registered for siggraph i hope that                                 you'll be able to join us                                 also at siggraph uh jonathan stone from                                 lucasfilm and nicholas harrison from                                 autodesk                                 will be discussing the material                                 physically based shading nodes in great                                 detail                                 at the physically based shading course                                 on wednesday morning the                                      so that's it for my talk thanks to all                                 of you for logging in and watching                                 and i'd especially like to thank the                                 academy software foundation for                                 organizing and sponsoring open source                                 days                                 and for inviting me here to speak with                                 you all today so with that                                 i'll open up to uh questions and                                 go there thanks everyone                                 okay                                 all right uh so how do we deal with                                 questions we uh                                 enter uh questions into the chat i                                 believe so                                 uh i can uh i can tackle some of the                                 questions that were just posted                                 um and answer them live um and of course                                 will be available                                 after this session as well uh if you                                 want to ask questions either                                 here or in the um asw up asws slack                                 but see i see a question from kristen                                 asking unreal engine supports this tech                                 um                                 we're working with epic to move that                                 forward there isn't anything                                 uh yet available in terms of material x                                 import export                                 for unreal engine but it's something                                 that                                 uh both we and epic are very interested                                 in and it's something we                                 we expect to see appear at some point                                 there's another question here from                                 ernest lee                                 i see when i looked at materialx in may                                 it seemed to lack a metallic                                 roughness material workflow there was a                                 disney material support                                 what is that um so you can define                                 something like a substance designer                                 metallic                                 roughness bsdf through the the core                                 material x physically based shading                                 nodes um we haven't                                 we haven't done that exercise inside of                                 the material xcode base but i believe                                 that adobe has already uh made some                                 strides                                 in that direction um and i'm not sure if                                 they're yet using bsdf graph to                                 represent but they certainly                                 uh can can express materials based on                                 the                                 metalness roughness workflow                                 in the same fashion that you can express                                 other shading models in in material acts                                 we're interested in having the disney                                 principled model                                 be added as an official graph so just a                                 little piece of data that describes the                                 connections between the bsdf nodes to                                 create disney principle                                 inside of um the materialx codebase                                 it's not something that we've had the                                 chance to do yet but it should be                                 straightforward to accomplish that                                 with the physically based shading nodes                                 similarly i think if                                 if a specific vendor wanted to                                 contribute a metalness                                 roughness graph for their particular                                 shading model we would definitely be                                 open to taking that as a contribution                                 to the materialx code base so that we                                 probably wouldn't author that                                 ourselves just unilaterally we'd want                                 that to be something that was                                 contributed by the vendor                                 that supports that particular shading                                 model                                 and also uh just point out in the um                                 you know the slides that i showed one of                                 the wedges was                                 the gold material that had the roughness                                 uh varying over the surface                                 um i believe that's using the conductor                                 brdf                                 um node internally uh to get the                                 metallic                                 look um so hopefully that's at least a                                 good starting point and                                 if not let us know what uh you think is                                 missing                                 and we'll be sure that proper support is                                 uh added you know we want to                                 be able to render whatever it is that                                 you guys need yeah                                 you could either create uh such a                                 workflow based on something like the                                 conductor node or based on the um                                 generalized schlick node depending on                                 how it's                                 how the underlying implementation is                                 done in the particular shader that                                 you're interested in                                 um in in something like unreal engine                                 for example that would be based                                 on the generalized schlick uh brdf                                 we can go into further details on that                                 in the                                 materialx discussion forum if you're                                 interested um i see one additional                                 question this is a really popular one                                 can you please talk a bit about usd and                                 materialx workflows                                 so i i don't want to steal the thunder                                 of what pixar plans to present                                 at siggraph but there's definitely new                                 developments in that space                                 that pixar will have a chance to talk                                 about um but                                 i don't want to yeah go into the details                                 of what what is being developed                                 just yet because i'd like to give them a                                 chance to speak to that                                 well when i see one more is there                                 support coming for                                 vulcan in the future so spear v uh would                                 be potentially a way to                                 integrate vulcan into the mix um our                                 viewer                                 is currently not based on vulcan but                                 we're very interested in creating a                                 version of that                                 that's falcon based in the future right                                 now it's based on opengl                                 but the same code generation approach                                 that works for opengl                                 or any other shooting language would                                 work for spear v                                 as well and there's no reason why it                                 couldn't be extended to vulcan-based                                 rendering engines in the future as well                                 yeah as far as uh there's a question a                                 follow-up about the usd and materialx                                 workflow                                 um that uh running the impression pixar                                 is not having a usd buff                                 um that i believe is true um                                 i i don't want to speak for them or                                 whatever but you know for whatever                                 reasons they                                 decided not to hold one um so they will                                 be making                                 whatever announcements they're going to                                 make at whatever time frame                                 uh they feel is right i i don't think                                 it's that far away but                                 you know i i certainly don't want to set                                 a time frame for them but                                 i'm very excited about it as well as you                                 are i can't wait to                                 hear what they say when they do say                                 something about it                                 absolutely                                 all right we have a few more minutes any                                 other questions in the                                 q a or the chat                                 i think that's it for the questions that                                 i see um at least                                 in the zoom chat but feel free to follow                                 up on the aswf                                 slack after this presentation and we can                                 we can help answer any additional                                 questions                                 keep an eye out for that and we also do                                 have                                 the uh official materialx discussion                                 group                                 uh if you want to open up to a wider                                 audience um                                 that you know you can join that through                                 materialx.org                                 um and there's also lots of ways to get                                 a hold of us                                 and the other developers working on                                 materialx                                 thanks so much everyone
YouTube URL: https://www.youtube.com/watch?v=kvYHVSkbaoM


