Title: SIGGRAPH 2020: Academy Software Foundation: Open Source Project Updates
Publication date: 2020-08-31
Playlist: SIGGRAPH 2020
Description: 
	A whirlwind tour of the latest updates to the six open source projects hosted at the Academy Software Foundation: OpenVDB, OpenColorIO, OpenCue, OpenEXR, OpenTimelineIO, and Open Shading Language.
Captions: 
	                              myself                               and your development actually goes all                               the way back to                                    and it was open sourced in                                        as you probably know it's uh it's                               essentially two things                               it's a it's a data structure and it's a                               toolbox of                               of tools that you can use to do uh                                sparse simulations for                                things like water fire and smoke and                                stuff like that                                um so next please                                so uh this is the the technical steering                                committee the current one                                um it has changed a little bit from from                                last year                                um so we have nick from double negative                                dan from industrial light magic peter                                unfortunately used to represent uh                                dreamworks but is currently on leave and                                we're                                sort of trying to to groom someone else                                to take over his spot                                uh we have jeff late from side effects                                and then i'm from uh                                from nvidia starting this year                                so this is uh a list of uh the current                                uh third-party software packages that                                have adopted openvdb                                and in the past couple of actually the                                past half year we had two new uh                                exciting companies so we have blender                                and we have ambergen a real-time fluid                                simulation that exports and imports                                openvdb so that's that's that's quite                                exciting                                next please so                                a few weeks ago we had the last major                                release it was                                                                                                    that's a there's a very long change list                                but in terms of new features                                uh it basically boils down to a new                                tools that allow us to                                very efficiently compute distances                                so we can use it to re-distance                                distance fields we can also use them to                                do something that we've never been able                                to do before which is                                take attributes that are associated with                                a surface                                and then propagate it into the embedding                                space                                of the surface which is uh very useful                                this is a a new algorithm uh that                                actually outperforms                                uh the existing functionality in openvdb                                uh and there are as you can see there                                are actually eight different                                tools that you can use they will                                currently it's just a tool                                but it will be exposed as houdini sobs                                in the future                                next please so                                one of the new exciting announcements we                                made this week                                was the intent to to adopt what's called                                nanovdb                                so nanovdb is uh sort of                                the first time that openvdb officially                                adds support for                                gpu for gpus gpu acceleration                                um so next piece it's contributed from                                um nvidia um and it's sort of it's                                characterized                                by by two things uh one is obviously the                                fact that it                                runs on the gpu uh so openvdb                                despite its success uh has never                                actually been                                um able to run on the gpu both because                                of                                the algorithms themselves but also                                because of the dependencies                                so nanovdb has very few dependencies                                so in a nutshell it's a serialized                                representation of the tree                                that is the backbone of a vdb grid                                so it's pointless which means that we                                can copy it very efficiently from                                the gpu to the cpu it offers the same                                benefits                                as we currently have in openmdb                                uh in fact a lot of our benchmarks have                                shown that it's faster than                                what we currently have in openmdb                                it's initially sort of targeting                                real-time rendering applications                                 so unlike openvdb it actually                                 includes meta-information metadata that                                 can benefit                                 ray tracing and volume integration so it                                 has                                 bounding box information baked into the                                 data structure and it also has                                 statistics like min and max                                 um you can do round trips so you can                                 serialize                                 an open vdb to a nano vdb and you can go                                 back again you can do round trips                                 um and it supports all the the value                                 types that you find in openvp                                 including points um another thing that                                 is is very unique is that it's agnostic                                 and it's nimble here's the name nano                                 um it's actually the                                 the sort of core functionality is a                                 single header file                                 um so one of the complaints that we've                                 had in the past                                 uh when people try to adopt open vdb is                                 there's a lot of dependencies um and                                 some of them are                                 quite tricky to to build and some of                                 them you might not want in your project                                 so nanovdb has has none of those it                                 the dependency on openvdb is completely                                 optional                                 it's actually implemented in two                                 languages                                 c plus plus                                            it also uses explicit memory alignment                                 which is new                                 and that actually allows it to uh sort                                 of tap into                                 a lot of different graphics apis so even                                 though it's developed at nvidia                                 it's not sort of it's not biased against                                 let's say cooler and opt cooler and                                 optics but it also supports things like                                 opengl and opencl dsl and in the future                                 we plan to add                                 webgl metal vulcan um                                 and then it's also worth noting that it                                 has a gpu sorry a cpu fallback                                 so even though it's it's designed to run                                 on a graphics card                                 you can also run it on on the cpu and                                 and the benchmarks that we've                                 performed actually shows that it's                                 slightly faster uh next place                                 so another uh exciting addition to the                                 library                                 is ax so ax comes from                                 double negative it's just in time compil                                 compile expression language that's sort                                 of specific to                                 a vdb it was actually announced                                 and released in a bitter form at digipro                                 two years ago but now is the time when                                 we                                 believe that it will actually be ready                                 for our production release probably                                 before the end of the year or at least                                 hopefully                                 so you're sort of seeing uh three                                 screenshots                                 uh the the two                                 brown uh screenshots we code in a sort                                 of illustrates the                                 the departure from sort of vanilla c                                 plus plus                                 code that you would need to write in                                 order to have a procedure to                                 modify uh the partic particle simulation                                 that you see on the right and at the                                 very bottom you see the same                                 code written in ax so it's it's very                                 compact                                 uh it's it's very intuitive um and it's                                 actually also very performant which is                                 really cool                                 so it actually targets the same speed as                                 as you would get with the raw c plus                                 plus                                 next place                                 so this is uh sort of a dump of                                 of what we have on the roadmap right now                                 so                                 as you can imagine we are very busy                                 integrating uh                                 ax and nanovdb we expect it to come out                                 uh hopefully before the end of the year                                 so we have                                 one major release coming up soon but we                                 still have a lot of other things on                                 on the roadmap so we still want to uh                                 adopt                                 a true multi-resolution in vdb so we're                                 still collaborating with                                 autodesk and the bifrost team that have                                 a very                                 uh cool approach to this we are also                                 talking                                 to double negative potentially to adopt                                 distributed                                 mpi support into vdb                                 um and a ton of other tools that you can                                 see on this line i won't go into all the                                 details                                 uh sort of in the the more uh sort of                                 uh what should i say things that that                                 you might feel on a day-to-day                                 uh changes will be will probably get rid                                 of                                 uh the the new make system build system                                 we want to re-haul all the documentation                                 uh we'll actually even re-haul some of                                 the                                 the file structures we also want to take                                 another look at the math library                                 the unit tests needs to be beefed up and                                 some of the units are actually too slow                                 so there's a lot of work                                 uh in that space as well but yeah as you                                 can see                                 there's a lot of work ahead of us so if                                 any of you are interested uh we would                                 love to                                 accept you into the project so next                                 please                                 so um we have a website um                                 there is a forum where you can ask                                 questions uh                                 we also have a weekly meeting                                 it's a tuesday                                                           can drop in                                 um you can also find a link to the                                 calendar sometimes we                                 may actually end up canceling or                                 changing the time                                 so keep an eye on that but yeah i hope                                 to                                 meet some of you online in in the future                                 thanks                                 great hi i'm doug walker i'm the                                 technology lead for color science at                                 autodesk and i'm serving as the chief                                 architect on the open clario tsc                                 i'm going to give you a whirlwind update                                 on the progress                                 of open clario over the past year next                                 slide please                                 so openclario is an open source library                                 for color management it joined the aswf                                 in february of                                                          status in november of last year                                 it was developed at sony pictures                                 imageworks and it's                                 supported in dozens of applications that                                 are used in the vfx industry                                 next slide please                                 so the technical steering committee                                 provides the governance for the project                                 and we meet weekly at                                       eastern time these are public meetings                                 on zoom and                                 anyone is welcome to join uh the current                                 um leadership which our elected roles on                                 the tsc                                 michael dolan is from epic games as the                                 chairperson                                 i'm serving as the chief architect and                                 shawn cooper from dnag                                 is the representative to the aces                                 project                                 we welcomed three new members on to the                                 tsc                                 this year mate shu from image works                                 carol payne from netflix and mark                                 titchener from                                 foundry next slide please                                 so this is a huge year for our project                                 because                                 we are launching our new version open                                 clario v                                  so this has um this initiative started                                 in uh                                                                  autodesk                                 we formed a ocio v                                                     year                                 and i'd like to thank the participants                                 from the vfx studios and interested in                                 vendors                                 for taking time to                                 guide us on new feature development                                 review the code etc their their                                 participation has been                                 invaluable uh and autodesk stepped up                                 and sponsored myself uh patrick o'doul                                 and bernard of the fed to work full-time                                 on this project                                 patrick has been the lead developer for                                 us                                 thanks a lot                                 so this is um as i said it's three years                                 in the making and there are a ton of new                                 features and i don't have time to                                 go into all of them uh some of the                                 key ones are a new gpu renderer native                                 support                                 for aces many user experience                                 enhancements to                                 make life easier for artists uh python                                 new set of python bindings that                                 michael contributed and and many other                                 new features                                 michael patrick and i wrote a paper for                                 digit pro this year and we went into                                 more detail on                                 on all the new features and we're                                 planning on posting that on the ocio                                 website shortly                                 next slide please                                 so this is our uh our timeline for the                                 project                                 so uh we                                 if for those of you who um were with us                                 at siggraph last year                                 in our roadmap presentation we indicated                                 that                                 we would be feature complete with v                                     siggraph this year                                 i'm pleased to report that we've tracked                                 that schedule                                 well we have a couple of pull requests                                 landing last week and this week but                                 feature                                 development is essentially finished and                                 we're now                                 entering a four-month period of                                 stabilization and bug fixing                                 so this is the point in time where                                 we are inviting developers to start                                 integrating the new version into their                                 applications                                 and provide us feedback we will use this                                 four month period to do any fine                                 tuning of features and fix bugs and so                                 forth                                 and then at the end of this year                                 planning on making the official                                 stable v                                                           what products will start shipping with                                 next year                                 oh lawrence yeah uh we are open clario                                 v                                                                       calendar year                                      and so we're looking forward to seeing a                                 product ship next year with v                                  next slide please so i'd like to give a                                 shout out to mario rokiki from dnag for                                 coming up with a cool new logo for the                                 project and a visual identity guide                                 this is really exciting and we are                                 leveraging that                                 for in next slide please                                 we are leveraging that for our                                 refreshed website and documentation so                                 if you go to opencolorio.org you'll see                                 our new landing page and this will                                 direct you to our new documentation                                 the documentation is a work in progress                                 but                                 we do have preliminary information on                                 all of the new v                                           and guide to upgrading to uh to v                                     we hope you'll check that out uh that                                 was that initiative was led by carol                                 payne of netflix                                 and sean cooper at d-neg and want to                                 extend my                                 sincere thanks to them for leading this                                 initiative                                 next slide so we're looking for                                 help and volunteers first of all to test                                 the new version                                 we're also looking for people to write                                 tutorials and review the documentation                                 and let us know if there are things that                                 they'd like to see                                 added there's a new version                                 of the aces config for open color i o                                 underway that will take advantage of the                                 new features in the library to                                 make the to improve the accuracy to                                 improve the                                 user experience for artists and to make                                 the config more compact                                 and so if you're interested in that we                                 encourage you to get involved that group                                 is meeting                                 every other week on tuesdays we're                                 looking for people to write new plugins                                 using v                                                            just ask thanks a lot                                 so here's how to get involved the new                                 code is                                 available in the master branch on github                                 the new                                 website and documentation is at                                 opencolorio.org                                 we have two mailing lists ocio dash dev                                 no cio dash user                                 you can join these at the aswf website                                 and we also have an active discussion on                                 slacks so                                 you're welcome to join the slack                                 instance as well                                 so that's uh that's it i hope you enjoy                                 the new features in openclario v                                  and uh that concludes the project update                                 thanks                                 hi everyone i'm brian cipriano i'm a                                 senior software engineer at google and                                 the                                 chairperson of the openqtsc and i'm                                 giving an update on the openq project                                 next slide please yeah so uh opeq                                 if you're not familiar with it is a                                 fully featured render manager                                 we call it a render manager as a                                 shorthand but really any kind of                                 distributed work can go through it uh                                 it's                                 agnostic to the software that that runs                                 on it so i can really run any kind of                                 workloads you have                                 um it we joined the aswf uh about a year                                 and a half ago                                 just before last last year's siggraph                                 so openq was developed originally                                 internally as a project                                 at sony pictures image works and                                 we here at google cloud worked with spi                                 to to open source it                                 uh around january of last year uh was                                 adopted by the aswf                                 uh shortly after that uh and since then                                 we've built out                                 a good pool of contributors and                                 committers especially on our tsc                                 from a bunch of different companies all                                 the major cloud providers are                                 are included there as well um so we do                                 uh                                 regular releases and uh we've done a                                 bunch of work over the past year that                                 i'll get to in                                 a bit next slide please                                 yeah so um we've done a lot of work over                                 the past year                                 um we've uh we've done a lot of work on                                 uh you know kind of sandbox deployments                                 and documentation you know help getting                                 up and running open queue quickly                                 i think when we launched originally it                                 was it's quite complex to set up an opeq                                 deployment even just to try it out so                                 uh we we specifically targeted that and                                 have some uh                                 some good stuff linked on our uh on the                                 openq website for how to get                                 uh uh an example deployment up and                                 running quickly                                 we've uh in in working to expand our                                 contributor pool                                 we've put together a bunch of uh                                 contributor guides um                                 guides for helping folks get set up on                                 all the different                                 platforms for making changes to the                                 system                                 um we just just recently announced that                                 our windows support is moving to beta                                 i think at this time at siggraph last                                 year we had no windows support                                 that was a few months ago we released an                                 alpha version of that                                 that's being now successfully used in                                 production by a few folks so we promoted                                 that to beta status                                 so we're very happy to see that move                                 along                                 we have also participated in google's                                 summer code program                                 this year uh which has been a really big                                 success uh we have                                 been working on a cloud plug-in for                                 managing render nodes in the cloud                                 vl and queue which should be                                 coming out within the next hopefully                                 making its way into the main branch of                                 open cue within the next month or so                                 we did a big a big migration to uh along                                 with the other                                 aswf projects to migrate our ci                                 pipelines and release pipelines into                                 github                                 actions we recently completed that so                                 everything is kind of nicely natively                                 integrated in github now                                 works works quite well uh kind of the                                 biggest                                 the biggest piece of work we've done                                 over the last year was all the kind of                                 small improvements and bug fixes and                                 stuff like that i think that probably                                 took the bulk of our time and and                                 a bit more than expected but uh as a                                 result open cue is is much more stable                                 and then nice to use than it was a year                                 ago so                                 if you haven't checked it out in a while                                 it's definitely worth again worth                                 another look again i think                                 um all that is kind of wrapped up in the                                 uh version                                                                                                 about a week ago so that should be                                 almost completely up to date with the                                 with the master branch                                 so check that out next slide                                 um yeah but a bit of statistics on our                                 on what we've been doing so we brought                                 the pool of contributors from about six                                 a year ago to                                                            you know active regular contributors                                 which is very nice to see the pool                                 committers went from two to six                                 as well you know we kind of have been                                 very active in seeking out amongst our                                 regular contributors folks who are ready                                 to be                                 you know reviewing code and merging it                                 in uh which is very nice to see                                 uh we we merge about three and a half                                 pr's per week                                 um which is pretty about about the same                                 place we were about a year ago                                 but uh it's in a much bigger pool of                                 contributors now so it's nice to see                                 things                                 uh keeping pace there and over the past                                 year we've closed                                                                                                         see                                 next uh for the next year                                 um some of these will look familiar from                                 from past presentations uh like i said                                 we spent spent a lot of time on kind of                                 smaller changes over the past year so                                 uh now kind of turning our attention                                 more towards the bigger ticket items                                 we definitely want to keep building out                                 more windows support                                 you know things like i think most of our                                 documentation is still geared towards                                 linux users getting started guys as well                                 um we we want to we want to you know                                 build out windows versions of that much                                 more as we now that we've entered beta                                 phase and things are more stable there                                 user management permissions is a big big                                 ticket item right now it's uh                                 kind of things are fairly open within                                 the system right now and and                                 we're working on working on designing a                                 kind of fine grain permissions model for                                 the system uh packaging installers                                 is a big thing right now there's a lot                                 of you know it's still                                 a fairly technical task to uh to set up                                 and run open queue                                 um lots of command line to run so we                                 hope to kind of                                 uh package that up and then build into                                 uh build some                                 some os native packages which will make                                 things a lot easier                                 um as we wrap up summer code we're                                 definitely going to be building more on                                 the cloud support that we have                                 um i think the base the kind of base                                 layer of it is coming from our summer                                 code student and uh we definitely plan                                 to build on that some more                                 um we                                 we will definitely want to keep growing                                 in the contributor pool i think we're                                 very happy with what's happened in the                                 past year but we're always seeking out                                 new folks to contribute and                                 graduate to become committers as well so                                 always on the lookout for that                                 and we're also looking to get openq                                 graduated as a project within the aswf                                 we're still currently in                                 incubation status and hopefully to                                 graduate on that soon                                 in the next few months next                                 cool so getting involved with open cue                                 link openq.io is a great place to start                                 for users or developers                                 that'll get you started with                                 documentation installers all that kind                                 of stuff                                 our main our main repo is linked here                                 where you can track our development                                 status and                                 file issues all that good stuff                                 we have a few we have users and                                 developers lists and forums linked here                                 as well                                 and we are also active on our slack                                 channel as well at                                 slack.aswf.io on the openq channel so                                 definitely find us there where we're                                 always hanging out and happy to answer                                 any questions                                 and i think that's it for me                                 hello um i guess good                                 emily thanks um so yeah so i'll give you                                 a brief update uh on openexr                                 um and uh i think i see a bunch of                                 questions in chat so i think i'll kind                                 of plow through a bunch of this stuff so                                 maybe go ahead and go next                                 and so i'll give a quick quick year in                                 view a little talk about aces                                 some of the stuff that we're doing for                                 our next version of opening xr                                 and um uh uh interesting development and                                 split out uh fro                                 of imath um so uh                                 next so over the past uh                                 years we've released i think eight                                 versions                                 of uh exr people quickly count                                 um and uh this actually represents more                                 than had been done                                 in the previous uh probably                                             so                                 and you'd think that's a lot of turn but                                 it's actually uh stability                                 uh what we did uh earlier this year is                                 is                                 join up with the google um auto fuzz um                                 uh project and and have have had them uh                                 pounding away at opening xr                                 feeding all kinds of garbage uh images                                 to it and so this is really about                                 stability                                 and um and making sure that it's a solid                                 secure                                 uh library for being as foundational as                                 it is                                 next                                 uh some of the other work that's been                                 going on that that we'll                                 we'll see um happening is that um                                 during one of the quiet periods of                                 opening are that                                 asus container spec chose to use um                                 open xr as the foundation of the the                                 storage format for asus                                 and they actually forked off sort of the                                 definition                                 of exr                                 and they introduced a whole number of                                 uh optional standard optional attributes                                 soas                                 um and                                 and and published a subset of open xr as                                 as a container spec                                 um and uh this was never actually rolled                                 back into open xr                                 um and so we'll be we'll be doing that                                 uh over the next little while and so if                                 you could go                                 next                                 and so this is a a                                 list                                 there we go um this is a list of of                                 those those attributes um                                 and the the reason we're calling this                                 out here um                                 is to if you could uh look at this this                                 link at the bottom and and take a look                                 at these and see if you're using them                                 internally                                 um and see if the definition differs                                 from um                                 uh what what you have internally then                                 i'm sure the                                 asus container folks would would really                                 like to hear                                 how they differ from what you're using                                 um                                 and and so we can resolve any uh any                                 potential conflicts there                                 um i think i'll i'll leave the                                 i won't read them all out um and so next                                 there are a couple of new attributes um                                 in this uh                                 one is to remove some vague things such                                 as aperture                                 so this is called out specifically as                                 f-stop or t-stop um                                 color temperature firmware version and                                 you know as                                 as things have gotten more advanced and                                 people are tracking temperature of                                 lenses for                                 for uh correcting distortion um                                 some other things just sort of became uh                                 necessary                                 next                                 and so on to the openexr uh sort of uh                                 major rewrite for for or not rewrite                                 major major update for for                                     um we've done a couple of things uh                                 one is we're getting rid of the ilm imf                                 uh name in terms of the library                                 uh and the folder and it'll just be open                                 exr                                 um this if you're using the cmg layer                                 will be transparent to you because it'll                                 just be the same                                 scenic alias the header file names are                                 all staying the same                                 they're not changing so you don't have                                 to change your code that                                 um we're we're we've split out                                 imath um and i'll talk more about that                                 in a moment                                 um and and sort of merging                                 iex and the ilm thread into open xr                                 just because that's where its primary                                 use was um                                 and uh                                 and and you can see the directory                                 structure there um and                                 and part of this cleanup is we're                                 actually we've we deprecated and we're                                 gonna remove the auto tools and other                                 similar things like that                                 that are sort of outdated next                                 well while we're at that sort of giant                                 reorg we also are going to                                 get rid of the master branch and have a                                 dev and a release branch                                 in the name of more inclusive language                                 but it also is clear just to know you                                 know where                                 development is happening and you know                                 what a stable release                                 branch is that you can pull on so next                                 so um as i mentioned imath um                                 we've we've pulled that out it's a                                 separate repository                                 uh in                                            it's uh largely going to be                                 header only and it's the subset that                                 people found useful to integrate                                 elsewhere                                 such as i think larry uses it in uh                                 in uh open shading language a bit and                                 things like that so uh maybe openvdb as                                 well uses it                                 next and so it                                 um one of the things that we've had                                 a google summer of code uh student                                 owen um working on on this as his                                 primary task                                 and so part of what he's done is uh                                 modernize                                 um the library a bit keeping a simple                                 api                                 there's more inline headers we've                                 removed                                 the iex and have                                 it's clear when you have                                 a function that can throw an exception                                 when you when you have one that doesn't                                 throw exceptions                                 uh he's done a lot of work with making                                 things uh const experts such that they                                 can be                                 more closely optimized                                 and finally the library is cuda                                 compatible with                                 a half type in in cuda and so you can                                 actually use                                 imath both in host code and in                                 cuda kernels which is pretty neat                                 next                                 so uh the back to open exr                                 um we are still looking at a couple of                                 of things that                                 actually cause the file format to change                                 slightly                                 um the                                 we're still examining whether to add to                                 be float                                            as as a supported data type we're also                                 looking at                                 sort of compressing and making                                 some of the parsing of openings our                                 files a little bit more efficient                                 um and and one of those methods might be                                 to move uh required attributes                                 um up to being a little structure at the                                 beginning of the file                                 um and another method might be to                                 actually move large chunks of metadata                                 into their own part type                                 next                                 um the other thing that we're doing in                                 open exr                                     making a new uh core i o layer um                                 this is largely driven out of a need for                                 for more performance                                 the existing library has some                                 good threading support but it also has a                                 fair amount of overhead                                 um associated with that um                                 and uh we're so we're rewriting the core                                 of of open xr                                 to have a low level c api which will be                                 fairly minimal but                                 um about complete and then                                 rebuilding the cos plus on top of that                                 and it gives us a good                                 way of making sure that we have we're                                 retaining exactly the same                                 api and the same behavior                                 but it should be this also enables us to                                 add                                 new more thread friendly api                                 such that you can have                                               however many threads you have in your                                 machine                                 blasting away at the same exr file                                 next and so just a quick preview of that                                 this is on my little machine at home                                 this is a ratio of the old library to                                 the new core                                 um in terms of reading an image sequence                                 um and and so it's a percentage of uh or                                 ratio of improvement                                 so you can see that um even up in the                                 into hyper threading                                 um there's still some performance gains                                 to be had                                 um from from just a                                 better management of of threads and                                 lower i o                                 next and so again thank you to owen                                 who's                                 spent the summer with us um and has                                 really helped clean up the repository                                 quite a bit and                                 and modernized it um and if you                                 go on to the next slide emily it's the                                 last one is just how to how to get                                 involved                                 and uh the usual list of things the                                 email list the                                 mail archive our repository um                                 we meet uh every uh every other week                                 for me it's friday but i think for those                                 in america it's in                                 um it's on thursday afternoon and so                                 hope to see you guys there thanks                                 hello um i'm nick porcino i am                                 representing the                                 i'm representing the tsc for open                                 timeline i o at slide police                                 so uh open timeline io is a project                                 developed by pixar animation studios                                 uh we joined the aswf                                 last summer and um so                                 we're pretty new it's an open source                                 interchange format for editorial                                 timeline information so the kind of                                 information that you're going to read                                 and write out of like avid or                                 adobe premiere things like that it's a                                 collection                                 of adapters for common file formats um                                 that used for use throughout the                                 industry all the way back to                                 edl's and we also have a set of                                 libraries                                 that you can use to develop new                                 functionality and directly integrate                                 open timeline io                                 we have a very active community that                                 we're very grateful for                                 and today we're releasing public beta                                    and has a number of interesting new                                 features                                 in it and i direct you to the release                                 notes next slide please                                 so the motivation for having uh                                 motivation for having something like                                 open timeline io is                                 that uh over time huge numbers of                                 editorial decisions accumulate into a                                 project                                 it can represent thousands of clips and                                 dozens                                 if not hundreds of tracks and on the                                 little small screenshot that we've got                                 here is a                                 portion of our recent film like just                                 kind of zoomed in to give you an                                 idea of what the complexity of a                                 timeline like this is                                 there's years of decisions in there and                                 being able to                                 take that information consistently and                                 losslessly                                 between the various tools and the                                 editorial pipeline                                 is really crucial for maintaining like                                 the coherency of the timeline                                 and creative decisions across                                 the workflow next slide please                                 so an open timeline io file itself um                                 is the collection of tracks the tracks                                 have clips                                 the clips reference media that can be                                 in any kind of format and the                                 clips are composed onto a track via like                                 gaps and transitions and are annotated                                 with markers                                 and this is all done in a consistent and                                 coherent way next slide please                                 so the way that you interoperate with                                 open timeline io presently is via the                                 open timeline io convert tool                                 command line tool takes open timeline i                                 o files                                 and converts it to and from edls                                 ales final cut xmls avid aff files and                                 so on                                 and you can extend the system yourself                                 by                                 writing your own plugins for your own                                 formats in python                                 next slide please so                                 the uh let's see this slide is the                                 native c plus plus integration native c                                 plus plus integration uh lets you read                                 and write                                 and operate with the open timeline i o                                 data structures in memory in your                                 application                                 directly this kind of integration is                                 much more seamless                                 than going through file adapters and um                                 pipeline file based workflows                                 so we're hoping that we're going to see                                 a migration                                 over the next little while to native                                 integration of this nature                                 next slide please so                                 in addition to the bindings and the                                 conversions and the file format                                 and we've also got a timeline viewer and                                 this is just a little screenshot of open                                 timeline i o view                                 showing how you can inspect a clip and                                 look at a bunch of                                 metadata this is super helpful for                                 understanding how data is transformed as                                 it moves through your pipeline and just                                 inspecting things for basic workflow and                                 debugging operations                                 my next slide please so                                 today and this is our battle tested                                 workflow                                 and the hat with the ears is our                                 proprietary                                 presto animation system so presto reads                                 and writes open timeline io                                  uh open timeline o converts to aaf um it                                  heads over to the avid and                                  for editorial decisions and editing and                                  finally comes all the way back to presto                                  and on the way                                  it can be sent out to rv for viewing or                                  for archive                                  and we can also send edls over to                                  grading                                  this is uh this is the historic workflow                                  next slide please                                  oops uh one back please                                  so as it as we move forward with                                  integration                                  things should be much smoother and much                                  more streamlined                                  where open timeline io files are                                  first-class citizens throughout the                                  entire pipeline                                  yeah next slide please the original                                  release of open timeline                                  last year was uh implemented in python                                  and it included open timeline i o                                  convert                                  next slide please uh earlier this year                                  we released a version uh where we built                                  a c                                  plus core api uh rebuilt the python api                                  on top of that                                  and uh the rest of the pipeline remains                                  the same next slide please                                  this year as a result of having the c                                  plus plus integration we've been able                                  also uh thanks in large part to uh                                  karthik writer our google summer of                                  code student uh we've been able to                                  introduce new bindings                                  particularly uh for c and                                  java which really broadens the                                  places that open timeline io can be                                  natively integrated                                  um next slide please                                  another contribution this one is a                                  community contribution that we're very                                  grateful for                                  is the ability to ingest image sequences                                  directly                                  so previously with open timeline io when                                  you had a                                  directory full of images that might have                                  come from a rendering application                                  they were in the form they would have                                  been in the form of a big pile of loose                                  files                                  and you would have to reference them                                  individually into clips                                  the contribution here was to describe                                  what the naming                                  convention is for files in a directory                                  and then                                  make image sequences within your tracks                                  and that can automatically uh discover                                  the files and incorporate them into the                                  timeline                                  and without that time-consuming uh                                  extra step of needing to make clips next                                  slide please                                  so um this is just a quick summary of um                                  updates on our adapters and improved                                  file format support                                  there's uh the af adapter for media                                  composer                                  and the final cut the final cut adapter                                  has                                  uh learned all about complex nesting and                                  varied frame rates                                  uh our edl support now supports wipes                                  reverses markers and                                  um a lot of other interesting new things                                  and                                  you can see a couple of other new                                  form excuse me a couple of other plugins                                  that have                                  just recently been introduced next slide                                  please                                  so another development that we're                                  excited about is                                  integration with rv so previously otio                                  convert could create rv files and then                                  rv could                                  open up a playlist for uh preview or                                  review                                  next slide please now                                  there's a native plugin so                                  rv can read open timeline io files                                  directly                                  and which is a great workflow                                  improvement                                  we can't write playlists from                                  rv so if anybody's looking for a place                                  where we would love to have a                                  contribution                                  being able to export a playlist from rv                                  out to open timeline io would be                                  fantastic                                  next slide please so here's uh                                  here's a screenshot in rv um showing a                                  little bit of that really complicated                                  timeline                                  uh from the earlier slide just uh                                  playing back natively in rv                                  so this is uh very exciting next slide                                  please                                  so um how to get involved                                  we have a number of community projects                                  underway right now                                  um and well obviously i'm very excited                                  about this so                                  anyway we've got uh effort to improve                                  continuous integration and how our build                                  systems work                                  there's language bindings underway we've                                  got an effort                                  to fully specify what the open timeline                                  io file                                  format looks like and what it contains                                  and what the expected operations                                  on open timeline ior there's work on                                  coordinate systems both temporal                                  and spatial and the hierarchies they're                                  upon                                  and this is important so that we can                                  start to                                  encode information in timelines like the                                  position of a clip region for example                                  over time and there's work underway to                                  design an editing api                                  and this will have common operations in                                  it like splitting and merging clips                                  and calculating intersections between                                  elements and so on and so forth                                  there's blender integration underway                                  that will provide                                  interoperation with blender's fantastic                                  sequencing                                  tool that they've introduced in the last                                  release                                  and we're also starting to carry lens                                  metadata and which is really quite an                                  important thing because                                  if something comes along some media                                  source                                  and it's referenced into the timeline                                  and it goes through a number of                                  transformations along the way                                  and in some cases we're going to want to                                  be able to recover data like the stuff                                  that uh kimball was mentioning earlier                                  um with the aces effort and we might                                  like to keep that information throughout                                  the pipeline recover it later                                  and then potentially put it back into                                  the files where it needs to be                                  so this provides a way that the lens                                  metadata can actually survive                                  transformations through the entire                                  editorial pipeline                                  next slide please                                  so how to get in touch with us i've got                                  the url there for our landing page                                  and the landing page has links to our                                  slack channel                                  our github and our read the docs                                  information                                  our mailing list and every two weeks we                                  have a meeting and you can find it on                                  the aswf calendar and                                  invite you to to join us so thank you                                  very much                                  bye                                  hello am i on very good                                  um so i'm going to give an update on                                  open chatting language                                  uh next slide please                                  thanks uh so just to review uh                                  shading is the part of                                                    makes objects look like different                                  materials like                                  wood rusty metal concrete or cloth                                  at each point on the object what color                                  is it how bright is it                                  um how much light reflects to which                                  directions                                  next slide place so                                  open shading language is a domain                                  specific language                                  that um that is used uh as an extension                                  language for renderers                                  to let people describe patterns and                                  materials                                  the software is delivered in the form of                                  a library                                  that's embedded into render so it's not                                  really a user                                  a user level app but it goes inside                                  other apps and numbers                                  this was a project that was started in                                                                                         image works for use in our proprietary                                  renderer                                  but fairly early in its life                                  we decided to open source it                                  um under a fairly permissive bsd license                                  and since then it has been adopted                                  into many other renders both                                  uh open source commercial and                                  proprietary across the industry                                  uh and has had over                                                                                                         from across the industry                                  um it's rapid uh                                  adoption uh in so many products and and                                  to become the de facto standard                                  uh earned it an academy science and                                  technology award in                                       and uh earlier this year we submitted                                  the project                                  and were adopted into the aswei next                                  slide list                                  so there have been other shading                                  languages before                                  but some of the design goals that really                                  make osl a little bit different are that                                  we really                                  designed it to be used in modern                                  physically based path tracers which is                                  the direction that the                                  industry is clearly going um and and                                  at the core of it is a lot of new                                  compiler tech                                  so we can be very efficient by doing a                                  lot of very aggressive                                  optimization and compilation down to                                  machine code on the fly                                  in the in the middle of the rendering                                  process we worked very hard to make sure                                  that the language was                                  not tied to any specific piece of                                  hardware um                                  and also not tied to                                  any particular rendering algorithm um                                  and certainly not to any                                  product and because of that and it's                                  as an open source project um really this                                  is probably the only                                  language implementation that's been used                                  you know in many different                                  products from different companies and                                  with different                                  um rendering algorithms                                  under next slide quiz                                  next uh so um uh we know                                  at least                                                             open shading language for their shading                                  and that's probably a vast                                  undercount because at this point nearly                                  all of the high-end                                  rendering systems used for film support                                  osl                                  to varying degrees so it's actually                                  quite challenging to                                  try to keep track of all the projects                                  that that music next slide                                  is nice uh so                                  yeah great uh so uh update on uh on                                  important things that have happened to                                  us in the last year                                  as i said we were adopted as an asw                                  project                                  so rather than being a bit of an ad hoc                                  run project primarily from one company                                  now we have a                                  former uh chart formal charter uh and                                  governance                                  uh rules for the project and a uh and a                                  technical steering committee                                  that is comprised of representatives um                                  from many                                  of the major stakeholders uh including                                  sony animal logic nvidia pixar                                  enag autodesk like a blunder project                                  and there are many other participants uh                                  as well                                  um we have a new set of millis so if you                                  found yourself                                  on the old mail list just go to the aswf                                  uh page and and sign up for the new one                                  that's where all the exciting                                  conversations are happening                                  um we are in the midst of uh                                  signing new contributor license                                  agreements uh again if you                                  if you sign the old ones as a                                  contributor you will need to do the new                                  ones                                  but uh but they're very closely related                                  it's only a minor change from the ones                                  we had in place before so hopefully                                  this will be straightforward for you and                                  once that's done we will                                  formally move the repository for the                                  code from the imageworks github page                                  onto the academy software foundation                                  account                                  and one of our big goals like when we                                  submitted the project                                  um like the major part of the motivation                                  there                                  was to take this project that is                                  important industry-wide infrastructure                                  and and really um emphasize that                                  it needs to be a community project there                                  are many stakeholders                                  and and we don't want it to be perceived                                  as as                                  um owned by a particular company it's                                  it's too important for that                                  um so part of our goal here for                                  graduation uh from an incubating project                                  uh to a                                  fully admitted one is committed                                  diversity and we don't mean that in the                                  demographic sense                                  we mean um making sure that the people                                  steering it and the people                                  writing the code and commuting the code                                  and ideas                                  are really not bottlenecked on any small                                  number of people or companies                                  but is is broadly representative of um                                  of the uh of the major stakeholding                                  companies and projects next please                                  nice uh we also are in the middle of a                                  major release right now                                  um so um we entered                                  uh beta at the beginning of august uh we                                  hope to have a final release                                  uh on september                                                           the                                  um the new uh supported uh production                                  release family and we have some language                                  improvements for shader writers                                  uh we've updated some of the major                                  dependencies in particular                                  we've dropped support for some of the                                  older llvm versions and added for some                                  of the newer ones                                  for renderers incorporating it we took                                  some care to make sure that we                                  now support thread safe on parallel                                  uh shader setup on the renderer side and                                  we've also improved some of the                                  um the just-in-time compilation speed um                                  right so uh test if you haven't already                                  uh we would like to                                  to obsolete the older uh                                               and make this the supported one moving                                  forward                                  um in fairly short order uh next slide                                  please                                  great um so there there are many things                                  that we can and will do in the future                                  um right right now there are two big                                  development efforts                                  underway um that i want you to be uh                                  appraised of                                  um the first one is there's an effort                                  that is led by                                  intel and pixar to add a new                                  interface for renders onto osl that                                  allows you to shade                                  not just one point at a time as we                                  currently do                                  but to shade in batches of eight or                                  sixteen points                                  at once with batches of points with the                                  same needing the same material shader                                  to be run and the point here is to                                  take advantage of widely available                                  hardware in particular intel's avx                                  and avx                                                                operate                                  in a parallel manner on sets of eight or                                                                      floats at a time and so we are we're                                  reducing the                                  the cost of evaluating any points at                                  once                                  the work is mostly done uh and it's it's                                  already being used                                  you know in production uh and in the                                  runaround product uh at pixar                                  um and we're we are breaking it into                                  chunks um to integrate back into the                                  main branch of osl development                                  so we're in the midst of that now the                                  other major project that's going                                  uh forward which um has had a lot of                                  work                                  uh initially by nvidia and is now                                  getting work from                                  from others is to make a gpu back-end                                  for osl                                  um particularly targeting uh cuda and                                  optics which seems to be the direction                                  that                                  most of the high-end film renderers are                                  going for their                                  gpu support um now we already have the                                  basics                                  working for many shaders um but um there                                  are many                                  corners of the language that have not                                  been fully fleshed out on the gpu side                                  so this is                                  ongoing work but a future major                                  release um you know we hope we'll                                  um we'll be able to say that we really                                  do support like all reasonable things                                  you can do in your language                                  next slide please great                                  um so you know if this interests you um                                  the obvious way is to follow along                                  are to um to watch the um                                  the issues and and pull requests on our                                  github page                                  um subscribe to the aswf uh mail list                                  where the development discussions happen                                  and we                                  like i said we do have this formal                                  technical steering committee                                  the meetings are open and they happen                                  every second week on thursdays at two                                  pacific time                                  as as a zoom call um those are those are                                  public um just look                                  on the aswf um median calendar and                                  and drop in if you're interested in um                                  seeing how this sausage is made so                                  uh next slide please                                  great and uh that's all i have for you                                  so thanks for your attention                                  so now we can open it up um if there are                                  any q a's                                  um i did see that there was one i think                                  this one's for you larry about                                  are existing clas invalidated with the                                  new repo                                  uh yes                                  the old clas for the old commits are                                  fine you don't have to resign                                  clas for uh for the things you did                                  before                                  but even if you signed one of the old                                  ones um                                  that that basically covered                                  contributions to                                  the imageworks owned repository so when                                  we move the repository over                                  to the aswf account you will need to                                  have your company sign the new                                  cla for the new repository um that this                                  is true of all of these projects it's                                  not specific to oslo                                  any other questions                                  okay um well in addition we will be                                  trying to post this                                  probably later next week on youtube and                                  for those who                                  missed our open source days which was                                  last week all of our projects did give                                  in-depth talks                                  and those will be posted on the academy                                  software foundation                                  youtube channel later this week as well                                  i encourage you to join our slack                                  channel                                  and then if you want to fight figure out                                  also how to get involved with all the                                  different projects                                  on the aswf site um aswf.ios                                  projects and i'll post it in the chat uh                                  there's all the different channels for                                  all the projects                                  so great so thank you everybody for                                  joining                                  you
YouTube URL: https://www.youtube.com/watch?v=OXvm_5jTguk


