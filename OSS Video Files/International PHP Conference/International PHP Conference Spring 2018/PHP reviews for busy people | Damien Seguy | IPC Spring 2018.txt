Title: PHP reviews for busy people | Damien Seguy | IPC Spring 2018
Publication date: 2019-01-23
Playlist: International PHP Conference Spring 2018
Description: 
	Damien Seguy (Exakat): Everyone fear the review of his own code. And to start with, there is no time. Because, what will happen once we have found something to detail ? In fact, a good code review means being ready to discuss a mere few lines, assess the context and evaluate an alternative, or not. It also means that when the code has become a dense jungle, there may hide monsters worse than a few errors. Using automated tools that are not scared by volume, weâ€™ll keep everything under control, without anyone else knowing about it.
Captions: 
	00:00:06,290 --> 00:00:12,210
so it's not immediately could repeat we

00:00:10,170 --> 00:00:16,260
reviews and how to review code quickly

00:00:12,210 --> 00:00:19,279
and maybe starts how to do those reviews

00:00:16,260 --> 00:00:21,600
[Music]

00:00:19,279 --> 00:00:26,820
you want maybe you want to start who's

00:00:21,600 --> 00:00:29,670
doing code reviews already oh so you

00:00:26,820 --> 00:00:32,189
want to do more than that that's it

00:00:29,670 --> 00:00:34,980
so like half of you say or better or

00:00:32,189 --> 00:00:36,899
better okay so that's the idea well

00:00:34,980 --> 00:00:38,219
what that's what we're going to go to

00:00:36,899 --> 00:00:41,460
cover we're going to cover different

00:00:38,219 --> 00:00:43,350
ways to include the code review as often

00:00:41,460 --> 00:00:45,780
as possible and maybe for those of you

00:00:43,350 --> 00:00:47,160
who are not doing them starch and for

00:00:45,780 --> 00:00:49,260
those of you who are already doing them

00:00:47,160 --> 00:00:52,620
maybe a few tricks to do a little more

00:00:49,260 --> 00:00:55,379
and and do them a little better so for

00:00:52,620 --> 00:00:59,300
those of you who don't know me I am I am

00:00:55,379 --> 00:01:01,920
a retiring house for Elephants and

00:00:59,300 --> 00:01:04,260
basically I'm doing static analysis for

00:01:01,920 --> 00:01:05,700
living so I review code and then I turn

00:01:04,260 --> 00:01:07,920
that into automated scripts that can

00:01:05,700 --> 00:01:09,299
review code and check my own code and

00:01:07,920 --> 00:01:12,330
saying that I do the same mistake that

00:01:09,299 --> 00:01:13,950
you do believe me you have to be really

00:01:12,330 --> 00:01:17,070
involved when you write that kind of

00:01:13,950 --> 00:01:24,090
software but anyway and I'm sorry I'm

00:01:17,070 --> 00:01:26,610
going to do that in English so if you

00:01:24,090 --> 00:01:28,680
have to start with just one and actually

00:01:26,610 --> 00:01:30,689
bring one piece of advice from this

00:01:28,680 --> 00:01:32,610
session that would be this one

00:01:30,689 --> 00:01:34,770
and we're going to start exactly with

00:01:32,610 --> 00:01:39,600
that who's doing code reviews at

00:01:34,770 --> 00:01:45,439
Colorado axe ation one - oh how come

00:01:39,600 --> 00:01:47,850
just stop working and you that's a break

00:01:45,439 --> 00:01:51,799
something different that's interesting

00:01:47,850 --> 00:01:51,799
any other suggestion

00:01:54,570 --> 00:01:59,020
yes yeah like reading a book but that's

00:01:57,280 --> 00:02:05,800
that's really that's the way I do it now

00:01:59,020 --> 00:02:06,340
any more English and then you pull your

00:02:05,800 --> 00:02:09,340
hair right

00:02:06,340 --> 00:02:12,130
yeah there's no suspense right but

00:02:09,340 --> 00:02:14,230
anyway I like what I like for relaxation

00:02:12,130 --> 00:02:16,780
what's what I take from the code review

00:02:14,230 --> 00:02:18,670
is the police I get from it it's like

00:02:16,780 --> 00:02:20,410
the fact that I've read something I find

00:02:18,670 --> 00:02:22,840
a potential bug and removed it and

00:02:20,410 --> 00:02:25,150
that's one less thing on my mind when

00:02:22,840 --> 00:02:26,860
I'm going to use the code or implement

00:02:25,150 --> 00:02:29,500
it or reduce it or refactor it or later

00:02:26,860 --> 00:02:31,930
so that's exactly why I'm doing it I

00:02:29,500 --> 00:02:34,000
like the fact that I will go and make Oh

00:02:31,930 --> 00:02:36,160
check something make it a little better

00:02:34,000 --> 00:02:39,190
and then go on with the rest of the busy

00:02:36,160 --> 00:02:42,190
frantic pipe piece I have all the time

00:02:39,190 --> 00:02:44,170
but then the first problem you have with

00:02:42,190 --> 00:02:46,900
this question with this suggestion is

00:02:44,170 --> 00:02:49,240
how do you fit that do you need an hour

00:02:46,900 --> 00:02:52,450
long to do code review during a small

00:02:49,240 --> 00:02:55,720
piece of time no the first suggestion is

00:02:52,450 --> 00:02:59,230
to time box it I think I mistake the

00:02:55,720 --> 00:03:01,870
switch the world right but anything that

00:02:59,230 --> 00:03:04,120
is 15 minutes where I'm going to have

00:03:01,870 --> 00:03:07,090
where I have nothing to do I mean

00:03:04,120 --> 00:03:08,620
nothing's precise I will fix I will use

00:03:07,090 --> 00:03:09,160
it for code review I don't need more

00:03:08,620 --> 00:03:11,320
than that

00:03:09,160 --> 00:03:13,510
I don't need less than that it's a good

00:03:11,320 --> 00:03:15,520
it's a good size and what can I fill

00:03:13,510 --> 00:03:17,709
that anything between amity before

00:03:15,520 --> 00:03:21,430
meeting if the meeting itself is too low

00:03:17,709 --> 00:03:23,489
is too late if something was any action

00:03:21,430 --> 00:03:25,900
was too long too slow or too fast

00:03:23,489 --> 00:03:29,010
there's always little moments like that

00:03:25,900 --> 00:03:32,050
before below 10 minutes is not enough

00:03:29,010 --> 00:03:34,600
beyond 20 minutes it will probably be no

00:03:32,050 --> 00:03:36,330
scheduled by something else so something

00:03:34,600 --> 00:03:39,070
in between is usually the good size

00:03:36,330 --> 00:03:40,690
besides it's time boxed which is one of

00:03:39,070 --> 00:03:42,850
the main problem of code reviews because

00:03:40,690 --> 00:03:45,730
if you ask me I'm going to spend hours

00:03:42,850 --> 00:03:48,040
on that okay so I just want to start

00:03:45,730 --> 00:03:49,900
doing it do something and then close it

00:03:48,040 --> 00:03:52,630
as soon as possible so I can switch to

00:03:49,900 --> 00:03:54,430
something else the other interesting

00:03:52,630 --> 00:03:57,070
part is although it's distraction free I

00:03:54,430 --> 00:03:59,560
can be interrupted during it okay it's

00:03:57,070 --> 00:04:03,220
not a main task I do it as a side side

00:03:59,560 --> 00:04:04,870
work a side core so I just going it and

00:04:03,220 --> 00:04:06,970
if something more important arise if I

00:04:04,870 --> 00:04:07,480
have to get someone on the situation I

00:04:06,970 --> 00:04:09,970
can

00:04:07,480 --> 00:04:11,650
doing that and switch to it so that's

00:04:09,970 --> 00:04:13,900
another interesting point I can use it

00:04:11,650 --> 00:04:16,600
as default but still switch to something

00:04:13,900 --> 00:04:19,180
else I want so that's a good idea we

00:04:16,600 --> 00:04:20,650
start with boxing those those time

00:04:19,180 --> 00:04:21,970
you're busy so you don't want to spend

00:04:20,650 --> 00:04:24,419
too much time but the question now is

00:04:21,970 --> 00:04:27,040
what the hell are we going to review

00:04:24,419 --> 00:04:29,199
because basically the situation in which

00:04:27,040 --> 00:04:31,900
you are is you don't know where to start

00:04:29,199 --> 00:04:34,270
do you you don't know what you start

00:04:31,900 --> 00:04:35,889
there's too many stuff basically the

00:04:34,270 --> 00:04:38,260
synopsis suffer could review looks like

00:04:35,889 --> 00:04:40,030
that you know what basically what you

00:04:38,260 --> 00:04:41,860
want you know basically what you want to

00:04:40,030 --> 00:04:44,350
look for in the code but there's this

00:04:41,860 --> 00:04:46,870
huge code source you have to score and

00:04:44,350 --> 00:04:48,100
read and as you said there's no suspense

00:04:46,870 --> 00:04:50,110
because you're going to read a lot of

00:04:48,100 --> 00:04:52,210
stuff that's useless and then maybe

00:04:50,110 --> 00:04:54,970
you'll find one of the things that are

00:04:52,210 --> 00:04:56,440
going to be fixed so it's that's that's

00:04:54,970 --> 00:04:59,020
too much on fifteen minutes we can't do

00:04:56,440 --> 00:05:01,150
that we need help we need help so for

00:04:59,020 --> 00:05:03,520
that we actually have to review the

00:05:01,150 --> 00:05:05,979
synopsis itself and make it a little

00:05:03,520 --> 00:05:08,199
shorter a little more accessible to us

00:05:05,979 --> 00:05:10,780
if you take a look at how we could we do

00:05:08,199 --> 00:05:13,180
could review we start by a rule and what

00:05:10,780 --> 00:05:15,870
by a rule is something that you want to

00:05:13,180 --> 00:05:18,400
enforce in your code do you want to have

00:05:15,870 --> 00:05:20,950
double or triple equals do you want to

00:05:18,400 --> 00:05:23,320
use equal prints do you want to use to

00:05:20,950 --> 00:05:25,599
check all this their pet the therapist

00:05:23,320 --> 00:05:27,520
compare comparisons stuff like that okay

00:05:25,599 --> 00:05:29,320
you start with something very simple

00:05:27,520 --> 00:05:31,389
like that we will do something close but

00:05:29,320 --> 00:05:32,710
more complicated later then when you

00:05:31,389 --> 00:05:34,570
know what you want to look for then that

00:05:32,710 --> 00:05:35,950
suddenly it's a lot easier you know how

00:05:34,570 --> 00:05:38,169
what you look for in the code you can

00:05:35,950 --> 00:05:39,849
search something in the code when you

00:05:38,169 --> 00:05:42,340
find something then you have the

00:05:39,849 --> 00:05:44,320
diagnostic right that's where you think

00:05:42,340 --> 00:05:46,810
about what you found and you decide if

00:05:44,320 --> 00:05:48,849
it's important or not and then you can

00:05:46,810 --> 00:05:50,380
do the fun part which is fixing right

00:05:48,849 --> 00:05:52,900
that's the moment where you have your

00:05:50,380 --> 00:05:54,610
problem you know what you want to do how

00:05:52,900 --> 00:05:57,490
are you going to solve it well that's

00:05:54,610 --> 00:06:00,400
time to be creative but most of the time

00:05:57,490 --> 00:06:02,530
we're stuck by the first steps right

00:06:00,400 --> 00:06:04,180
this is the moment that's boring we're

00:06:02,530 --> 00:06:05,260
going to review so much stuff before we

00:06:04,180 --> 00:06:05,860
actually end up with something

00:06:05,260 --> 00:06:08,110
interesting

00:06:05,860 --> 00:06:10,690
well the second part is the one that we

00:06:08,110 --> 00:06:13,139
are really interested so this is where I

00:06:10,690 --> 00:06:16,360
usually introduce static analysis and

00:06:13,139 --> 00:06:18,550
static analysis is going to do the core

00:06:16,360 --> 00:06:20,780
and the a/v work of searching for us

00:06:18,550 --> 00:06:23,450
until we can take over and do the

00:06:20,780 --> 00:06:27,770
clever and morph stripes part of the job

00:06:23,450 --> 00:06:29,090
anyone is used to do static analyses few

00:06:27,770 --> 00:06:31,820
of you oh yes

00:06:29,090 --> 00:06:33,560
okay so static analogies as usual and

00:06:31,820 --> 00:06:37,360
you have analogies and an adjective it

00:06:33,560 --> 00:06:39,980
means that it's kind of it's a kind of

00:06:37,360 --> 00:06:42,890
opposition there's dynamic analysis and

00:06:39,980 --> 00:06:45,320
static analysis dynamic analysis is when

00:06:42,890 --> 00:06:48,440
you run the code you feed it some data

00:06:45,320 --> 00:06:49,910
and you get some feedback okay so that

00:06:48,440 --> 00:06:52,100
covers actually unit tests

00:06:49,910 --> 00:06:53,900
well tests in general because test you

00:06:52,100 --> 00:06:56,510
cannot run the test until the code is

00:06:53,900 --> 00:06:58,070
actually working well static analysis is

00:06:56,510 --> 00:07:00,770
like reviewing the code it doesn't have

00:06:58,070 --> 00:07:02,840
enough to work maybe it comprised that

00:07:00,770 --> 00:07:04,130
would help but at least it cannot it

00:07:02,840 --> 00:07:07,430
doesn't have to work before we actually

00:07:04,130 --> 00:07:09,050
review it it's a really exciting time

00:07:07,430 --> 00:07:11,390
actually to work in static analysis

00:07:09,050 --> 00:07:13,910
because at the moment there's a huge

00:07:11,390 --> 00:07:16,010
amount of new tools and new techniques

00:07:13,910 --> 00:07:18,290
being applied okay I'm going to show you

00:07:16,010 --> 00:07:21,260
a few of them there's 90 of them

00:07:18,290 --> 00:07:24,590
currently available don't try them all

00:07:21,260 --> 00:07:26,390
you're going to be mad very fast choose

00:07:24,590 --> 00:07:27,860
at least one or two of them that's gonna

00:07:26,390 --> 00:07:29,180
be a good start five if you're really

00:07:27,860 --> 00:07:32,360
good but they may have some very

00:07:29,180 --> 00:07:35,510
specific usage which is going to talk

00:07:32,360 --> 00:07:37,940
about that generally speaking okay how

00:07:35,510 --> 00:07:41,120
does static analysis work to review how

00:07:37,940 --> 00:07:43,040
come help how come some other code can

00:07:41,120 --> 00:07:45,500
help us review piece and another piece

00:07:43,040 --> 00:07:48,229
of code that's that's the synopsis we

00:07:45,500 --> 00:07:50,090
start with we start with the kind of

00:07:48,229 --> 00:07:52,700
stuff that you call code which is

00:07:50,090 --> 00:07:54,890
basically a text file I'm sorry for you

00:07:52,700 --> 00:07:56,900
that's that's just that what it is and

00:07:54,890 --> 00:07:59,210
then we give that to the tokenizer of

00:07:56,900 --> 00:08:01,610
PHP to understand the different moving

00:07:59,210 --> 00:08:07,690
parts in that in that review anyone has

00:08:01,610 --> 00:08:09,860
ever used a tokenizer of PHP one okay -

00:08:07,690 --> 00:08:12,169
I'm going to rephrase that because I

00:08:09,860 --> 00:08:16,400
maybe the question was wrong whoever has

00:08:12,169 --> 00:08:19,250
used PHP okay so you've been all using

00:08:16,400 --> 00:08:21,470
the tokenizer tokenizer is actually the

00:08:19,250 --> 00:08:24,950
part of PHP that reads the file the text

00:08:21,470 --> 00:08:26,780
file turn it into tokens tokens like if

00:08:24,950 --> 00:08:29,000
you want words maybe letters if you

00:08:26,780 --> 00:08:31,550
really want to do know what it is

00:08:29,000 --> 00:08:34,060
exactly those D little bits of PHP that

00:08:31,550 --> 00:08:35,830
it can understand okay and the echo

00:08:34,060 --> 00:08:38,140
is not three or four letters is really

00:08:35,830 --> 00:08:40,029
one item of element that teach P can

00:08:38,140 --> 00:08:42,190
understand on the other hand each set

00:08:40,029 --> 00:08:45,279
isn't at home but STR till our is not

00:08:42,190 --> 00:08:48,040
one of those atoms for example when I

00:08:45,279 --> 00:08:49,720
mentioned it's a it's a text file you

00:08:48,040 --> 00:08:51,640
have to consider that one speech PS

00:08:49,720 --> 00:08:53,860
thought they are taking your tokens from

00:08:51,640 --> 00:08:55,810
the file it will get rid of one third

00:08:53,860 --> 00:08:58,870
because all of them are white color

00:08:55,810 --> 00:09:00,790
whitespace and comments and then it will

00:08:58,870 --> 00:09:03,700
get rid another third which are just the

00:09:00,790 --> 00:09:05,410
limiters if you have to take something

00:09:03,700 --> 00:09:07,360
also from this conference it's like one

00:09:05,410 --> 00:09:08,980
third of your code is useful the two

00:09:07,360 --> 00:09:11,710
third of it is just completely useless

00:09:08,980 --> 00:09:14,650
for PHP again I'm very sorry for that

00:09:11,710 --> 00:09:16,420
anyway from the tokens we have to build

00:09:14,650 --> 00:09:18,880
a number of different diagrams and

00:09:16,420 --> 00:09:20,380
relation between those tokens which

00:09:18,880 --> 00:09:22,390
means that we have to store them in some

00:09:20,380 --> 00:09:24,640
kind of database okay that database may

00:09:22,390 --> 00:09:26,890
be just memory that's the case of most

00:09:24,640 --> 00:09:28,510
of the tools who are going to see for

00:09:26,890 --> 00:09:30,339
exactly for example which is my tool we

00:09:28,510 --> 00:09:32,050
actually have a real database where we

00:09:30,339 --> 00:09:34,240
fit stuff and you can actually run all

00:09:32,050 --> 00:09:37,450
the queries later but once we have

00:09:34,240 --> 00:09:39,220
everything here the famous ast abstract

00:09:37,450 --> 00:09:41,790
syntax tree but there's a number of

00:09:39,220 --> 00:09:44,770
others like the dagger the flow control

00:09:41,790 --> 00:09:47,620
diagram the data great diagram lots of

00:09:44,770 --> 00:09:49,510
them we can move across the code we need

00:09:47,620 --> 00:09:52,180
to know what to look for

00:09:49,510 --> 00:09:55,000
okay and there's a bunch of different

00:09:52,180 --> 00:09:58,420
references that exist and that you can

00:09:55,000 --> 00:10:00,280
use to explain lyrically what you want

00:09:58,420 --> 00:10:02,200
to look for in the code that may be

00:10:00,280 --> 00:10:06,339
simple stuff number of parameters in the

00:10:02,200 --> 00:10:07,990
functions that may be bugs typical from

00:10:06,339 --> 00:10:10,120
PHP that may be a number of other things

00:10:07,990 --> 00:10:12,520
that may be just performances or just a

00:10:10,120 --> 00:10:15,060
recruitment like a gathering of specific

00:10:12,520 --> 00:10:17,650
rules for one one specific purpose

00:10:15,060 --> 00:10:19,690
anyway when you you get that you cross

00:10:17,650 --> 00:10:21,880
it with the database you get the audits

00:10:19,690 --> 00:10:24,610
and the audit just is everything that

00:10:21,880 --> 00:10:27,600
the machine can detect as pattern in

00:10:24,610 --> 00:10:29,890
your code that you should review and

00:10:27,600 --> 00:10:32,620
this is basically where you start

00:10:29,890 --> 00:10:34,690
working again you're going to finish the

00:10:32,620 --> 00:10:36,670
loop by getting the audit going exactly

00:10:34,690 --> 00:10:40,920
in the code where you want to go and

00:10:36,670 --> 00:10:44,020
then decide if it's worth fixing or not

00:10:40,920 --> 00:10:45,970
fun with that so let's go back to the

00:10:44,020 --> 00:10:49,110
relaxation part because I see you're a

00:10:45,970 --> 00:10:49,110
little tense at that point

00:10:50,370 --> 00:10:55,660
how do you work away with with that we

00:10:53,080 --> 00:10:57,700
said we want to have this little slot of

00:10:55,660 --> 00:10:59,290
time for code review and we've been

00:10:57,700 --> 00:11:00,910
working with something we have a meeting

00:10:59,290 --> 00:11:04,000
after that so that's the developer time

00:11:00,910 --> 00:11:06,700
we have this little span of time we can

00:11:04,000 --> 00:11:08,800
use and all most of the time you have to

00:11:06,700 --> 00:11:11,830
run that the static analysis before so

00:11:08,800 --> 00:11:13,960
you need to have the audits ready before

00:11:11,830 --> 00:11:15,880
okay now it's an automated tool you

00:11:13,960 --> 00:11:17,800
don't care about when it runs as long as

00:11:15,880 --> 00:11:20,620
it's run and it's done before you

00:11:17,800 --> 00:11:23,800
actually want to review it actually as a

00:11:20,620 --> 00:11:26,710
matter of fact I usually run exact ads

00:11:23,800 --> 00:11:28,630
on itself once a week that's completely

00:11:26,710 --> 00:11:30,250
sufficient I get way too many issues I

00:11:28,630 --> 00:11:33,370
usually don't say that in public but

00:11:30,250 --> 00:11:35,290
keep that for you please but I've got

00:11:33,370 --> 00:11:38,500
enough issues so that I can just go into

00:11:35,290 --> 00:11:41,740
audit and check whatever I want okay now

00:11:38,500 --> 00:11:43,480
most of the time you see that and the

00:11:41,740 --> 00:11:45,670
question is why is it that we don't

00:11:43,480 --> 00:11:48,370
include the run here on the new feature

00:11:45,670 --> 00:11:49,780
and you actually answer the question

00:11:48,370 --> 00:11:52,360
earlier that your cling my my

00:11:49,780 --> 00:11:54,130
presentation early you don't want to

00:11:52,360 --> 00:11:56,140
work on the same feature than the one

00:11:54,130 --> 00:11:57,280
you've been working you want to you know

00:11:56,140 --> 00:11:59,470
relax change your mind

00:11:57,280 --> 00:12:01,240
okay so most of the time you want to

00:11:59,470 --> 00:12:03,610
switch the part of the code you're

00:12:01,240 --> 00:12:07,750
reviewing to another one that's going to

00:12:03,610 --> 00:12:09,940
make your brain get some rest okay the

00:12:07,750 --> 00:12:13,140
other thing that we get is that this

00:12:09,940 --> 00:12:15,430
looks like a slow-moving system right

00:12:13,140 --> 00:12:19,000
what can we do that we could actually

00:12:15,430 --> 00:12:21,910
put them directly on the hook you can

00:12:19,000 --> 00:12:25,600
actually have static analysis up and

00:12:21,910 --> 00:12:27,910
during the coding or just a moment where

00:12:25,600 --> 00:12:29,740
you actually committing okay during the

00:12:27,910 --> 00:12:31,420
coding I could recommend pitch be

00:12:29,740 --> 00:12:33,750
inspector for those of you who using a

00:12:31,420 --> 00:12:38,500
PHP storm

00:12:33,750 --> 00:12:40,480
yeah so for example while you're coding

00:12:38,500 --> 00:12:42,880
the static analogies will review your

00:12:40,480 --> 00:12:45,250
code and give you two bits about what's

00:12:42,880 --> 00:12:47,860
wrong or what could be better okay along

00:12:45,250 --> 00:12:49,360
the way on the fly except that well it

00:12:47,860 --> 00:12:51,910
has to be real fast so it's pretty

00:12:49,360 --> 00:12:53,500
shallow test but again there are a

00:12:51,910 --> 00:12:55,780
number of them that are really efficient

00:12:53,500 --> 00:12:58,300
and that you already there you already

00:12:55,780 --> 00:13:01,210
know about it fix it and then commit it

00:12:58,300 --> 00:13:03,430
okay the other places is there

00:13:01,210 --> 00:13:05,080
the comic time and again this means that

00:13:03,430 --> 00:13:06,850
these static analogies ask to be

00:13:05,080 --> 00:13:08,860
extremely fast because at the commit

00:13:06,850 --> 00:13:10,120
you're really really really busy that's

00:13:08,860 --> 00:13:13,330
the moment where you're going to get

00:13:10,120 --> 00:13:14,980
relaxation so you want to commit it okay

00:13:13,330 --> 00:13:16,660
you have something is not compatible

00:13:14,980 --> 00:13:19,690
okay I fix it and then I commit that

00:13:16,660 --> 00:13:21,040
again again kind of shallow tests but

00:13:19,690 --> 00:13:23,560
there are a number of other tools that

00:13:21,040 --> 00:13:25,780
you can use I have given the three most

00:13:23,560 --> 00:13:27,340
common ones and then you can do your

00:13:25,780 --> 00:13:29,770
code review but those are two different

00:13:27,340 --> 00:13:31,600
things okay one is on the fly the other

00:13:29,770 --> 00:13:34,780
one is more relaxed and a little out of

00:13:31,600 --> 00:13:38,980
the the busy work on the code so that's

00:13:34,780 --> 00:13:41,710
the one we want to be working on okay so

00:13:38,980 --> 00:13:44,950
I'm just so what we want to do that we

00:13:41,710 --> 00:13:47,110
want to is go back there and do a an

00:13:44,950 --> 00:13:49,180
interesting code review and now the

00:13:47,110 --> 00:13:50,440
question is what do you look for in a

00:13:49,180 --> 00:13:54,490
code review when you're working like

00:13:50,440 --> 00:13:56,200
that we know when we know how to do it

00:13:54,490 --> 00:13:58,210
but where to start

00:13:56,200 --> 00:14:02,070
what's the first thing people look for

00:13:58,210 --> 00:14:02,070
when they're working on a code review

00:14:08,850 --> 00:14:12,970
okay that's documentation hopefully

00:14:11,320 --> 00:14:14,770
you're working on it so you probably

00:14:12,970 --> 00:14:25,960
have this documentation part but that's

00:14:14,770 --> 00:14:27,670
it that's an interesting point okay so

00:14:25,960 --> 00:14:29,260
usually the first thing that you're

00:14:27,670 --> 00:14:32,290
looking for is bugs because bugs

00:14:29,260 --> 00:14:34,090
directly impact what you're doing right

00:14:32,290 --> 00:14:36,960
you want to know make sure that the

00:14:34,090 --> 00:14:38,710
piece of code works as expected and

00:14:36,960 --> 00:14:40,630
we're still doing that

00:14:38,710 --> 00:14:42,070
on a busy schedule right we don't have a

00:14:40,630 --> 00:14:44,740
full afternoon to do a review and

00:14:42,070 --> 00:14:47,110
understand the the structure so let's

00:14:44,740 --> 00:14:49,120
start with that can you understand why

00:14:47,110 --> 00:14:52,710
we run this piece of code and just get

00:14:49,120 --> 00:14:52,710
one seven and not two of them

00:14:58,110 --> 00:15:04,319
so I run exactly that and I just got 1/7

00:15:01,779 --> 00:15:04,319
displayed

00:15:11,750 --> 00:15:22,010
what short is a string yeah sure these

00:15:14,750 --> 00:15:25,430
used as a string yeah yeah

00:15:22,010 --> 00:15:28,610
and short shot is the key the key from

00:15:25,430 --> 00:15:32,240
the earth the array is 72 here or 7.1

00:15:28,610 --> 00:15:34,910
here the first the first character of

00:15:32,240 --> 00:15:38,260
each of those strings is 7 right so I

00:15:34,910 --> 00:15:38,260
should actually have two of them not one

00:15:38,320 --> 00:15:44,960
come on is the first character the

00:15:43,220 --> 00:15:53,660
character starts at zero we're on PHP

00:15:44,960 --> 00:15:55,940
string starts at zero actually tweeted

00:15:53,660 --> 00:15:59,740
that last week so I expected someone to

00:15:55,940 --> 00:15:59,740
at least read that yes

00:16:01,420 --> 00:16:06,980
exactly the first integer the first the

00:16:04,760 --> 00:16:09,980
first index here is an integer does it

00:16:06,980 --> 00:16:13,790
look like normal pitch we accept only

00:16:09,980 --> 00:16:15,680
strings and integers as keys unless you

00:16:13,790 --> 00:16:16,250
make a world class but that's another

00:16:15,680 --> 00:16:18,680
story

00:16:16,250 --> 00:16:21,920
so it only accepts strings and integers

00:16:18,680 --> 00:16:23,960
and the strings themselves will be

00:16:21,920 --> 00:16:27,470
turning to integral if PHP can do that

00:16:23,960 --> 00:16:30,020
without raising any error so the 7/2 can

00:16:27,470 --> 00:16:32,060
be turned into a 7/2 integer without

00:16:30,020 --> 00:16:34,310
raising errors so PHP does it and then

00:16:32,060 --> 00:16:36,950
it reach there and there it's an integer

00:16:34,310 --> 00:16:39,440
and it's not translated again back to a

00:16:36,950 --> 00:16:42,320
string so the first one actually

00:16:39,440 --> 00:16:44,060
disappears PHP is not able to find the

00:16:42,320 --> 00:16:46,940
character it actually doesn't even raise

00:16:44,060 --> 00:16:48,980
an error it should tell us ok I've

00:16:46,940 --> 00:16:50,390
turned that into an integer and then

00:16:48,980 --> 00:16:52,670
that's not a string anymore you should

00:16:50,390 --> 00:16:56,810
do that this does not this is not the

00:16:52,670 --> 00:16:58,460
case with this which is a real number it

00:16:56,810 --> 00:17:00,080
does not translate that into a real

00:16:58,460 --> 00:17:01,550
number so the second one stays as a

00:17:00,080 --> 00:17:03,980
string because it cannot be turned into

00:17:01,550 --> 00:17:07,250
a bigger and then we have this one that

00:17:03,980 --> 00:17:10,280
splice so sometimes the machine is able

00:17:07,250 --> 00:17:12,709
to understand stuff in the code that

00:17:10,280 --> 00:17:15,800
maybe you never heard about or maybe you

00:17:12,709 --> 00:17:18,079
didn't pay attention to it so sometimes

00:17:15,800 --> 00:17:20,990
the static analysis is able to go really

00:17:18,079 --> 00:17:22,880
further than what you actually are used

00:17:20,990 --> 00:17:25,610
to and maybe that that doesn't happen

00:17:22,880 --> 00:17:27,020
often but what I like is that how many

00:17:25,610 --> 00:17:30,290
arrays do you have in each of your

00:17:27,020 --> 00:17:32,000
applications thousands right you're not

00:17:30,290 --> 00:17:34,970
able to check all of them and how they

00:17:32,000 --> 00:17:37,690
are used as as strings you're going to

00:17:34,970 --> 00:17:41,030
be bitten by this one quite unusually

00:17:37,690 --> 00:17:42,740
the usual the other test I would like to

00:17:41,030 --> 00:17:44,780
mention is this one and that's going to

00:17:42,740 --> 00:17:50,480
be the contrary question who doesn't

00:17:44,780 --> 00:17:52,430
understand the bug here no no no after

00:17:50,480 --> 00:17:54,200
answering with the previous one I don't

00:17:52,430 --> 00:17:55,130
want you to not understand that's the

00:17:54,200 --> 00:17:57,770
contrary here

00:17:55,130 --> 00:18:00,800
I'm usually you don't understand this

00:17:57,770 --> 00:18:03,760
one no I do I want people who have never

00:18:00,800 --> 00:18:03,760
heard about that bug

00:18:04,600 --> 00:18:09,470
do you yes okay so the prominent here

00:18:07,850 --> 00:18:13,760
I'm going to explain it Matt that's

00:18:09,470 --> 00:18:16,190
going to kill my thunder the problem

00:18:13,760 --> 00:18:18,440
here is that st repose is looking for

00:18:16,190 --> 00:18:19,550
the column inside the string variable

00:18:18,440 --> 00:18:21,440
that's fine okay

00:18:19,550 --> 00:18:23,540
except that s type horse is going to

00:18:21,440 --> 00:18:26,630
answer two things it's going to answer

00:18:23,540 --> 00:18:29,840
the position of the semicolon in the

00:18:26,630 --> 00:18:32,660
string starting at position zero so

00:18:29,840 --> 00:18:35,180
maybe maybe either the column is on the

00:18:32,660 --> 00:18:38,090
first row that's the first element of

00:18:35,180 --> 00:18:40,100
the string and maybe not if it's not

00:18:38,090 --> 00:18:42,980
found then stare pause is going to

00:18:40,100 --> 00:18:45,410
return null if it's on the first

00:18:42,980 --> 00:18:48,350
character it will return 0 and then PHP

00:18:45,410 --> 00:18:52,760
compare that to false null and falls

00:18:48,350 --> 00:18:54,920
both are equal double equal to 0 so here

00:18:52,760 --> 00:18:56,660
PHP is going to mistake the fact that

00:18:54,920 --> 00:18:59,480
the character is on the first string

00:18:56,660 --> 00:19:01,180
first character of the string and the

00:18:59,480 --> 00:19:04,040
fact that the character is not found

00:19:01,180 --> 00:19:06,530
then you've got a bug it's a very

00:19:04,040 --> 00:19:08,360
classic one so I'm I'm still happy that

00:19:06,530 --> 00:19:10,790
like three of you raised the hand to say

00:19:08,360 --> 00:19:12,260
that they don't understand that but most

00:19:10,790 --> 00:19:15,470
of the time you don't have to spend

00:19:12,260 --> 00:19:17,810
hours to explain that bug and again that

00:19:15,470 --> 00:19:21,080
kind of bug is also systematic it's like

00:19:17,810 --> 00:19:25,550
60% of PHP application have that kind of

00:19:21,080 --> 00:19:29,000
bug somewhere across the code 60% ok so

00:19:25,550 --> 00:19:31,610
it's like 2/3 of the rows the one behind

00:19:29,000 --> 00:19:34,610
are good and the two for third in front

00:19:31,610 --> 00:19:36,110
are not good so that happens often you

00:19:34,610 --> 00:19:39,290
know about it you don't want to spend

00:19:36,110 --> 00:19:41,810
hours explaining anyone why this bug is

00:19:39,290 --> 00:19:43,340
you find it you close it you commit it

00:19:41,810 --> 00:19:45,800
and the hooks are all going to pass

00:19:43,340 --> 00:19:47,990
easily and you're done do not even spend

00:19:45,800 --> 00:19:49,670
time teaching or explaining something

00:19:47,990 --> 00:19:52,460
that to someone else unless they really

00:19:49,670 --> 00:19:53,660
don't understand the back okay so you

00:19:52,460 --> 00:19:55,640
have two different kind of drugs the

00:19:53,660 --> 00:19:58,310
first one are very difficult very rare

00:19:55,640 --> 00:20:00,650
but when they open they bite hard the

00:19:58,310 --> 00:20:02,720
other ones are very common and those are

00:20:00,650 --> 00:20:05,450
the one also you want as busy people to

00:20:02,720 --> 00:20:08,030
fix without even asking anyone that

00:20:05,450 --> 00:20:10,540
should be a no-brainer do it get rid of

00:20:08,030 --> 00:20:14,390
it and don't talk about it anymore okay

00:20:10,540 --> 00:20:16,040
so that's the usual static but the usual

00:20:14,390 --> 00:20:18,830
approach when you want to do something

00:20:16,040 --> 00:20:20,780
into those 15 minutes okay look for

00:20:18,830 --> 00:20:22,520
either the easy bugs the classic ones

00:20:20,780 --> 00:20:25,460
because that's the one you want you

00:20:22,520 --> 00:20:26,780
don't want shame from and the one are

00:20:25,460 --> 00:20:28,250
easy to understand that probably

00:20:26,780 --> 00:20:30,860
everyone understands in the in the

00:20:28,250 --> 00:20:32,630
company or in the team and so just close

00:20:30,860 --> 00:20:34,820
them the ones are not easy to forget

00:20:32,630 --> 00:20:37,160
also it's like you know that these guys

00:20:34,820 --> 00:20:38,930
don't care about this kind of bug well

00:20:37,160 --> 00:20:40,460
you can you can complete them and just

00:20:38,930 --> 00:20:43,970
make sure that those bugs are always

00:20:40,460 --> 00:20:47,000
closed okay at best if you have a short

00:20:43,970 --> 00:20:49,160
list or not so short make it make it

00:20:47,000 --> 00:20:50,660
short don't start with a short list of

00:20:49,160 --> 00:20:53,390
bugs otherwise you're going to spend too

00:20:50,660 --> 00:20:55,220
much time okay the second thing that is

00:20:53,390 --> 00:20:57,380
interesting is that the machine is able

00:20:55,220 --> 00:21:00,260
to look at the code and suggest you

00:20:57,380 --> 00:21:04,430
something better so I'm going to ask you

00:21:00,260 --> 00:21:06,680
not to answer yeah leave some room for

00:21:04,430 --> 00:21:09,380
others could anyone suggest something to

00:21:06,680 --> 00:21:14,240
replace that ugly forage that's that's

00:21:09,380 --> 00:21:16,430
an ugly beast right that's actually one

00:21:14,240 --> 00:21:24,390
of my favorite PHP function very

00:21:16,430 --> 00:21:28,920
underestimated sorry nope nope

00:21:24,390 --> 00:21:35,340
I hear I heard a wall but that does not

00:21:28,920 --> 00:21:37,290
exist what else that's obviously

00:21:35,340 --> 00:21:40,130
something starting with array but with

00:21:37,290 --> 00:21:43,020
wife all right column yes

00:21:40,130 --> 00:21:45,480
all right column a rec column is a very

00:21:43,020 --> 00:21:48,510
nice little piece of function it takes

00:21:45,480 --> 00:21:51,360
the array and it will loop exactly like

00:21:48,510 --> 00:21:55,010
that across all these elements and look

00:21:51,360 --> 00:21:58,560
for the property or the indexed called a

00:21:55,010 --> 00:22:03,870
it works both for arrays and it works

00:21:58,560 --> 00:22:05,580
also for objects do not extract just one

00:22:03,870 --> 00:22:07,800
column of element from an array with a

00:22:05,580 --> 00:22:10,020
loop you can do that faster more

00:22:07,800 --> 00:22:12,210
efficiently and easier to read with that

00:22:10,020 --> 00:22:13,830
and again the machine is not a bug at

00:22:12,210 --> 00:22:15,990
that point it's not about is just a way

00:22:13,830 --> 00:22:17,880
to make the code better you can leave it

00:22:15,990 --> 00:22:20,460
down you can leave it say okay I don't

00:22:17,880 --> 00:22:22,410
need that speed boost so just just let

00:22:20,460 --> 00:22:24,420
it go and that can let in wait the next

00:22:22,410 --> 00:22:25,950
version or you can decide that yes

00:22:24,420 --> 00:22:27,090
that's something you want to use that's

00:22:25,950 --> 00:22:29,130
that's an interesting piece of

00:22:27,090 --> 00:22:30,930
information you want to add in your code

00:22:29,130 --> 00:22:32,970
and decide that those kind of

00:22:30,930 --> 00:22:35,250
suggestions is interesting to put in

00:22:32,970 --> 00:22:38,010
your code and then you have got a little

00:22:35,250 --> 00:22:40,830
a little bump of speed maybe okay if the

00:22:38,010 --> 00:22:43,500
the array is large if it's always cold

00:22:40,830 --> 00:22:45,240
then you're going to see something okay

00:22:43,500 --> 00:22:47,610
and those little things will add that's

00:22:45,240 --> 00:22:49,500
exactly what we want to do code reviews

00:22:47,610 --> 00:22:51,900
right are those little things that do

00:22:49,500 --> 00:22:54,210
not require our attention for half a day

00:22:51,900 --> 00:22:57,660
but maybe for fifteen minutes we can fix

00:22:54,210 --> 00:22:58,170
that commit and that's gone so on the

00:22:57,660 --> 00:23:01,320
end

00:22:58,170 --> 00:23:04,560
what can we target we can target easy

00:23:01,320 --> 00:23:06,990
bugs clean code in general you don't

00:23:04,560 --> 00:23:09,420
want to have those old ways of doing

00:23:06,990 --> 00:23:11,850
pitch before loops into your new PHP

00:23:09,420 --> 00:23:14,970
seven code so that's the vetting code

00:23:11,850 --> 00:23:18,210
you may learn something and you may also

00:23:14,970 --> 00:23:20,760
learn the local idiom the local idiom is

00:23:18,210 --> 00:23:22,710
the PHP you practice in your team that

00:23:20,760 --> 00:23:25,970
makes you kind of different from the

00:23:22,710 --> 00:23:29,040
other teams okay one classic example is

00:23:25,970 --> 00:23:33,390
if you if you send me a PR and you're

00:23:29,040 --> 00:23:36,130
using the short bracket arrays I will

00:23:33,390 --> 00:23:37,690
deny that hey Dad

00:23:36,130 --> 00:23:39,850
I started with I didn't start with

00:23:37,690 --> 00:23:42,610
speech p3 but I started PHP with the

00:23:39,850 --> 00:23:45,100
last millennium okay last not last

00:23:42,610 --> 00:23:47,680
decade not last century last millennium

00:23:45,100 --> 00:23:49,630
they're all the same but who cares I'm

00:23:47,680 --> 00:23:51,490
still using that okay I find it easier

00:23:49,630 --> 00:23:54,340
to read I spot them easily in the code I

00:23:51,490 --> 00:23:57,010
don't mix them with least or with array

00:23:54,340 --> 00:24:00,160
index whatever this is my choice okay

00:23:57,010 --> 00:24:02,440
you probably disagree I'm not asking you

00:24:00,160 --> 00:24:05,110
to raise your hand but you probably

00:24:02,440 --> 00:24:06,820
disagree that's not important if I go in

00:24:05,110 --> 00:24:08,830
your code if I can your team and your

00:24:06,820 --> 00:24:11,770
your convention is different I will

00:24:08,830 --> 00:24:14,680
adapt okay I will moan a little bit I

00:24:11,770 --> 00:24:17,320
will mention it but that's okay so what

00:24:14,680 --> 00:24:19,110
kind of though what can what's what's

00:24:17,320 --> 00:24:23,040
the take for example who's using a coal

00:24:19,110 --> 00:24:30,280
who's using a co in the code

00:24:23,040 --> 00:24:32,200
okay good third which is in print okay

00:24:30,280 --> 00:24:36,130
there's something missing there so who's

00:24:32,200 --> 00:24:39,520
using what else what are you using there

00:24:36,130 --> 00:24:41,080
are their answers you're not using you

00:24:39,520 --> 00:24:43,900
know that's possible that happens that's

00:24:41,080 --> 00:24:47,730
unusual I don't know prepare maybe not

00:24:43,900 --> 00:24:47,730
even know print no no display at all

00:24:48,420 --> 00:24:53,950
okay so you're using templating system

00:24:51,250 --> 00:24:56,230
okay that's the meaning okay we could

00:24:53,950 --> 00:24:58,120
actually add the short operator or we

00:24:56,230 --> 00:25:02,020
could also printf that's another option

00:24:58,120 --> 00:25:04,090
okay and if you take a look at this this

00:25:02,020 --> 00:25:06,790
answer this is this has been run on a

00:25:04,090 --> 00:25:11,470
piece of code and the piece of code is

00:25:06,790 --> 00:25:17,980
using basically 9000 time aiko and six

00:25:11,470 --> 00:25:20,400
time they're using print someone is a

00:25:17,980 --> 00:25:22,840
rebellion as a rebellion in that whole

00:25:20,400 --> 00:25:24,700
just leaving the sixth one and waiting

00:25:22,840 --> 00:25:27,370
for someone to happen to discover it

00:25:24,700 --> 00:25:28,830
okay that's that's way on the other hand

00:25:27,370 --> 00:25:34,480
for example the erase they're all

00:25:28,830 --> 00:25:38,170
systematically the good array it took

00:25:34,480 --> 00:25:41,170
too long for you to react this is so

00:25:38,170 --> 00:25:43,480
whatever the source one consistent is

00:25:41,170 --> 00:25:46,660
good I always like consistent so array

00:25:43,480 --> 00:25:48,970
all arrays or all all brackets is is

00:25:46,660 --> 00:25:49,930
good as long as you you're consistent

00:25:48,970 --> 00:25:53,170
with yourself it's just

00:25:49,930 --> 00:25:57,840
it's your time now how many other kind

00:25:53,170 --> 00:26:00,550
of characteristic I could use to do that

00:25:57,840 --> 00:26:01,900
I've got almost 20 of them

00:26:00,550 --> 00:26:03,640
I cannot even show them because you're

00:26:01,900 --> 00:26:05,680
not going to be able to be able to read

00:26:03,640 --> 00:26:08,410
them but here are different ways of

00:26:05,680 --> 00:26:11,500
things you can do both ways or two

00:26:08,410 --> 00:26:14,100
different ways in PHP with no impact or

00:26:11,500 --> 00:26:16,330
almost no impact and that still is

00:26:14,100 --> 00:26:19,150
something you can choose so for example

00:26:16,330 --> 00:26:22,390
class names when you do a new class you

00:26:19,150 --> 00:26:25,090
create an object and the constructor do

00:26:22,390 --> 00:26:27,360
not need any arguments you can drop the

00:26:25,090 --> 00:26:30,540
parentheses okay

00:26:27,360 --> 00:26:33,070
here apparently it's one-third two-third

00:26:30,540 --> 00:26:35,950
so this is typically the situation where

00:26:33,070 --> 00:26:37,630
no one is really neither agreeing either

00:26:35,950 --> 00:26:40,810
disagree they don't care it's something

00:26:37,630 --> 00:26:43,410
that's not important that could be

00:26:40,810 --> 00:26:46,120
cosine but here is not even enforced

00:26:43,410 --> 00:26:47,680
it's not enforced they don't care it's

00:26:46,120 --> 00:26:50,200
it could be okay it could be one way

00:26:47,680 --> 00:26:53,110
another one don't care because here we

00:26:50,200 --> 00:26:55,480
don't care about that the bracketed

00:26:53,110 --> 00:26:58,330
array the bracketed blocks whenever you

00:26:55,480 --> 00:27:00,340
have a control flow block and you have

00:26:58,330 --> 00:27:03,510
only one instruction behind do you put

00:27:00,340 --> 00:27:08,620
necessarily the curly braces or not

00:27:03,510 --> 00:27:14,770
don't say yes or no I don't care it's

00:27:08,620 --> 00:27:16,180
code style and it could be what else

00:27:14,770 --> 00:27:18,250
concatenation how do you do your

00:27:16,180 --> 00:27:20,440
concatenation do you do everything

00:27:18,250 --> 00:27:22,330
concatenate so with the dots or you do

00:27:20,440 --> 00:27:27,100
put them between double quotes and here

00:27:22,330 --> 00:27:28,480
dogs mmm or Sprint F or Sprint F but

00:27:27,100 --> 00:27:31,360
then that that's not for concatenation

00:27:28,480 --> 00:27:32,980
so here it's another it's another story

00:27:31,360 --> 00:27:35,710
this one is funny because you don't see

00:27:32,980 --> 00:27:40,110
do you use /n for a new line or you pay

00:27:35,710 --> 00:27:40,110
a PHP and off line

00:27:40,140 --> 00:27:45,430
now what's interesting I think is you

00:27:43,330 --> 00:27:48,390
look at one application whatever it is

00:27:45,430 --> 00:27:51,580
and you see where they are important

00:27:48,390 --> 00:27:54,070
where they focus the attention they are

00:27:51,580 --> 00:27:55,780
once when the color is unique or almost

00:27:54,070 --> 00:27:58,420
it means that that's something that's

00:27:55,780 --> 00:28:00,460
their standard so for example putting

00:27:58,420 --> 00:28:02,980
the constant you compare with on the

00:28:00,460 --> 00:28:03,549
right or on the left like your condition

00:28:02,980 --> 00:28:07,149
or

00:28:03,549 --> 00:28:09,039
not apparently here they're like 2005 of

00:28:07,149 --> 00:28:11,080
them they're doing one side and there's

00:28:09,039 --> 00:28:12,720
a very little like 17 it's difficult to

00:28:11,080 --> 00:28:15,220
read sorry for that

00:28:12,720 --> 00:28:16,929
17 times they use the Yoda so maybe they

00:28:15,220 --> 00:28:20,049
started doing your da but they did not

00:28:16,929 --> 00:28:22,179
go far that gives you an idea of how the

00:28:20,049 --> 00:28:26,190
team is doing that's their local idea

00:28:22,179 --> 00:28:28,960
that's the what's important to them okay

00:28:26,190 --> 00:28:30,940
yeah that's completely automated that's

00:28:28,960 --> 00:28:34,629
that's when one of the audit from from

00:28:30,940 --> 00:28:36,940
execute so there's currently I started

00:28:34,629 --> 00:28:39,309
with eight of them I actually wrote an

00:28:36,940 --> 00:28:41,789
article about how you well things that

00:28:39,309 --> 00:28:44,679
you could do it both ways and and and

00:28:41,789 --> 00:28:46,210
and that doesn't matter and then after

00:28:44,679 --> 00:28:48,609
that I actually included more and more

00:28:46,210 --> 00:28:50,440
and currently have 20 of them so you can

00:28:48,609 --> 00:28:52,059
can actually compare different projects

00:28:50,440 --> 00:28:56,590
just based on that that's kind of

00:28:52,059 --> 00:29:01,029
interesting okay so now we're done Oh 23

00:28:56,590 --> 00:29:03,009
minutes so I still have to finish the

00:29:01,029 --> 00:29:04,869
next problem we have to tackle is how

00:29:03,009 --> 00:29:06,970
are we going to handle all those rules

00:29:04,869 --> 00:29:09,129
that there's static analysis tool all

00:29:06,970 --> 00:29:11,980
going to give us because I've shown you

00:29:09,129 --> 00:29:15,100
where when to do it like 50 minutes how

00:29:11,980 --> 00:29:17,830
to look and other load it ready for for

00:29:15,100 --> 00:29:19,509
practice okay maybe choose it the way

00:29:17,830 --> 00:29:21,460
you want but maybe you're going to have

00:29:19,509 --> 00:29:22,690
too many errors or I mean too many

00:29:21,460 --> 00:29:26,200
issues and you don't know which one to

00:29:22,690 --> 00:29:28,899
start with in the idea any suggestion of

00:29:26,200 --> 00:29:33,989
how you when you have too many audits 20

00:29:28,899 --> 00:29:35,379
issues which one you want to choose the

00:29:33,989 --> 00:29:36,820
important ones

00:29:35,379 --> 00:29:40,559
that's good that's your definition of

00:29:36,820 --> 00:29:40,559
important right what's your definition

00:29:40,889 --> 00:29:48,789
the yeah the one that could could bugs

00:29:44,710 --> 00:29:52,289
that's an idea that's the choice of what

00:29:48,789 --> 00:29:55,600
I would go with importance with that

00:29:52,289 --> 00:29:58,330
yeah I understand but that's a style of

00:29:55,600 --> 00:30:00,309
thing okay I'm usually you remember we

00:29:58,330 --> 00:30:04,299
have 50 minutes we cannot end all our

00:30:00,309 --> 00:30:05,799
stuff so we have two main dimensions to

00:30:04,299 --> 00:30:08,710
welcome in aspect to take into

00:30:05,799 --> 00:30:11,009
consideration and let's let's do a

00:30:08,710 --> 00:30:14,669
little practice here are five of them

00:30:11,009 --> 00:30:14,669
there are five of them

00:30:15,200 --> 00:30:21,230
the first one the first one is easy okay

00:30:18,920 --> 00:30:22,490
everyone using plus plus but actually

00:30:21,230 --> 00:30:24,050
most of the time you just need the plus

00:30:22,490 --> 00:30:26,510
plus before because you don't read the

00:30:24,050 --> 00:30:28,880
value while you increment it okay that's

00:30:26,510 --> 00:30:31,010
a very classic mistake use age of of

00:30:28,880 --> 00:30:32,600
Erebus no scream of a writer please

00:30:31,010 --> 00:30:35,180
don't do that although there are a few

00:30:32,600 --> 00:30:38,570
situation where you can do it switch

00:30:35,180 --> 00:30:40,580
without default what the hell's that you

00:30:38,570 --> 00:30:44,240
check the situation when you when you

00:30:40,580 --> 00:30:45,950
don't know it you just accept printf too

00:30:44,240 --> 00:30:48,380
many variables or too little

00:30:45,950 --> 00:30:50,690
although too little tend to call you to

00:30:48,380 --> 00:30:53,240
be a to be a to end up in your logs so

00:30:50,690 --> 00:30:56,120
you may know about it but too many PHP

00:30:53,240 --> 00:30:58,760
doesn't care okay he has enough slots to

00:30:56,120 --> 00:31:01,130
fill so those are our lost variables and

00:30:58,760 --> 00:31:02,630
the last one I made it on purpose it's a

00:31:01,130 --> 00:31:04,820
little it's a little large but there's

00:31:02,630 --> 00:31:08,000
actually zero because a is added and

00:31:04,820 --> 00:31:09,500
subtracted which one do you want to

00:31:08,000 --> 00:31:19,700
choose which one is the most important

00:31:09,500 --> 00:31:22,130
to you switch okay so first thing you're

00:31:19,700 --> 00:31:25,520
not you do not agree secondly I'm the

00:31:22,130 --> 00:31:27,440
one talking so I'm going to choose first

00:31:25,520 --> 00:31:31,340
thing I check is how are they easy to

00:31:27,440 --> 00:31:34,010
change again remember we have to stay in

00:31:31,340 --> 00:31:36,800
those little slots so I try to take a

00:31:34,010 --> 00:31:38,990
look and understand by default if I

00:31:36,800 --> 00:31:41,150
don't know more than that which one are

00:31:38,990 --> 00:31:43,730
the easy ones because then I can I can

00:31:41,150 --> 00:31:47,390
still fit that into my time right

00:31:43,730 --> 00:31:51,200
so I basically add this this evaluation

00:31:47,390 --> 00:31:52,730
do you agree with this Lavelle or not

00:31:51,200 --> 00:31:56,510
I kept it very simple like three levels

00:31:52,730 --> 00:31:57,980
easy medium odd you could do more you

00:31:56,510 --> 00:32:00,710
could do less and then maybe you can

00:31:57,980 --> 00:32:02,570
switch them okay maybe hour maybe use

00:32:00,710 --> 00:32:05,720
age of a and the switch or the same

00:32:02,570 --> 00:32:06,200
level stuff like that but that's kind of

00:32:05,720 --> 00:32:09,590
different

00:32:06,200 --> 00:32:12,230
okay so first was the first I checked

00:32:09,590 --> 00:32:13,880
the one that are odd or not if they are

00:32:12,230 --> 00:32:14,840
easy then I can probably go in the code

00:32:13,880 --> 00:32:18,170
look at it understand the situation

00:32:14,840 --> 00:32:20,210
close that and commit good if they're

00:32:18,170 --> 00:32:22,190
hard if it's a default that I have to

00:32:20,210 --> 00:32:23,450
raise it raise an exception and create

00:32:22,190 --> 00:32:26,060
the exception and catch it somewhere

00:32:23,450 --> 00:32:27,740
later log it's somewhere that's going to

00:32:26,060 --> 00:32:28,470
be a little more okay maybe just trigger

00:32:27,740 --> 00:32:30,360
or

00:32:28,470 --> 00:32:32,250
i I don't know maybe very simple stuff

00:32:30,360 --> 00:32:35,220
but then I usually consider it's real

00:32:32,250 --> 00:32:37,289
order same stuff for our Abbas usually

00:32:35,220 --> 00:32:39,750
this the commercial a you have you have

00:32:37,289 --> 00:32:41,400
to handle some checks before you

00:32:39,750 --> 00:32:43,409
actually render the application when you

00:32:41,400 --> 00:32:46,679
run the function and get an error so I

00:32:43,409 --> 00:32:49,409
find it like medium error okay and the

00:32:46,679 --> 00:32:52,950
second aspect is how often are those

00:32:49,409 --> 00:32:54,570
error available in the code okay so the

00:32:52,950 --> 00:32:56,460
plus plus instead well the pre-press

00:32:54,570 --> 00:32:59,669
plus of the the pressure the the prayer

00:32:56,460 --> 00:33:01,320
post press plus it's like 90% of every

00:32:59,669 --> 00:33:03,360
pitch we could ask that kind of problem

00:33:01,320 --> 00:33:05,760
so if you want to solve that you're

00:33:03,360 --> 00:33:08,010
going to fix a huge amount of lines of

00:33:05,760 --> 00:33:11,280
code and you're going to have like 10%

00:33:08,010 --> 00:33:12,690
of the wall code blamed to you okay so

00:33:11,280 --> 00:33:13,260
it's easy but then there are too many

00:33:12,690 --> 00:33:15,750
options

00:33:13,260 --> 00:33:18,450
okay on the other hand these kind of

00:33:15,750 --> 00:33:21,090
problems which look stupids but does

00:33:18,450 --> 00:33:22,860
happen three times three portions so how

00:33:21,090 --> 00:33:25,530
many of us like in the room there's like

00:33:22,860 --> 00:33:26,850
a hundred or maybe less so maybe there

00:33:25,530 --> 00:33:29,520
are like two people in the room who has

00:33:26,850 --> 00:33:33,710
that problem in this code that does not

00:33:29,520 --> 00:33:33,710
happen but it's also very easy so easy

00:33:36,020 --> 00:33:41,429
easy and not frequent I just there on

00:33:39,330 --> 00:33:45,270
them and just remove them totally okay

00:33:41,429 --> 00:33:47,010
easy watch the one that are ordered then

00:33:45,270 --> 00:33:50,100
we can decide depending on their usage

00:33:47,010 --> 00:33:52,340
so I usually have this little graph

00:33:50,100 --> 00:33:55,470
that's actually a little easier to see

00:33:52,340 --> 00:33:57,690
if they are easy they are here if they

00:33:55,470 --> 00:34:00,330
grow or order they go to the top okay

00:33:57,690 --> 00:34:02,000
and then on the under each side you have

00:34:00,330 --> 00:34:05,549
how often does that happen

00:34:02,000 --> 00:34:09,990
okay and mixing both the frequency and

00:34:05,549 --> 00:34:12,240
the odd elements of in the or the task

00:34:09,990 --> 00:34:16,830
of fixing them you can actually draw

00:34:12,240 --> 00:34:20,490
that okay if it's easier not frequent I

00:34:16,830 --> 00:34:23,010
catch it if it's easy at freaking

00:34:20,490 --> 00:34:24,990
usually can fix them easily and indeed I

00:34:23,010 --> 00:34:28,190
mean you can fix them automatically and

00:34:24,990 --> 00:34:32,070
in between I have to stop at some level

00:34:28,190 --> 00:34:36,270
okay if you prefer you can also make a

00:34:32,070 --> 00:34:39,179
make an important emphasize on our easy

00:34:36,270 --> 00:34:42,060
they are first and then you can you get

00:34:39,179 --> 00:34:43,650
rid of the first ones this way

00:34:42,060 --> 00:34:45,420
that helps you you know separate between

00:34:43,650 --> 00:34:48,030
the one that you feel find out and

00:34:45,420 --> 00:34:53,460
define the one you have you have e you

00:34:48,030 --> 00:34:55,140
have easy on your coat finally finally I

00:34:53,460 --> 00:34:56,820
like to say we were under two bucks and

00:34:55,140 --> 00:34:58,860
we're going to switch back to what you

00:34:56,820 --> 00:35:00,510
mentioned earlier first thing you want

00:34:58,860 --> 00:35:01,140
to do is could review is learn about

00:35:00,510 --> 00:35:03,120
stuff

00:35:01,140 --> 00:35:05,160
okay we've learned about local idioms

00:35:03,120 --> 00:35:06,750
things that happen in the code and that

00:35:05,160 --> 00:35:09,030
interest you women because that's the

00:35:06,750 --> 00:35:11,310
way you do it here but while you hunt

00:35:09,030 --> 00:35:13,470
for bugs well you go Forex Pacific

00:35:11,310 --> 00:35:15,330
problems you're going to discover other

00:35:13,470 --> 00:35:17,070
things along the way and that may be

00:35:15,330 --> 00:35:18,990
simply because the static analyzer is

00:35:17,070 --> 00:35:21,030
going to bring you other things next to

00:35:18,990 --> 00:35:23,220
the same lines so you go in the file for

00:35:21,030 --> 00:35:25,500
one specific purpose but while you're

00:35:23,220 --> 00:35:27,270
there you can fix another or another

00:35:25,500 --> 00:35:30,030
bird next to it or you just can't

00:35:27,270 --> 00:35:32,580
discover it okay so what do I mean by

00:35:30,030 --> 00:35:33,570
discovery what could you do with just

00:35:32,580 --> 00:35:35,790
one variable

00:35:33,570 --> 00:35:41,670
what could you check with just one

00:35:35,790 --> 00:35:43,320
variable obviously the thing that's

00:35:41,670 --> 00:35:47,070
going to plague you is the variable that

00:35:43,320 --> 00:35:48,240
is read but never written the undefined

00:35:47,070 --> 00:35:51,090
variable okay

00:35:48,240 --> 00:35:52,650
that's maybe not a bug but at least it's

00:35:51,090 --> 00:35:56,190
filled your log so it's bad okay

00:35:52,650 --> 00:35:59,400
so variable that is available once and

00:35:56,190 --> 00:36:01,380
that just read that's a problem the

00:35:59,400 --> 00:36:03,450
other side is also wrong if it's a

00:36:01,380 --> 00:36:09,090
variable that is used once but only

00:36:03,450 --> 00:36:13,310
written dollar x is one great excellent

00:36:09,090 --> 00:36:15,750
what else never use that again

00:36:13,310 --> 00:36:18,630
don't laugh everyone in this room is

00:36:15,750 --> 00:36:20,220
doing that you've got lost variables

00:36:18,630 --> 00:36:21,660
like that and then suddenly later you

00:36:20,220 --> 00:36:23,670
want to reuse this variable and it

00:36:21,660 --> 00:36:25,350
already has a value and you wonder why

00:36:23,670 --> 00:36:28,740
the hell do I have this value there why

00:36:25,350 --> 00:36:30,840
I didn't oh yeah it was there maybe it's

00:36:28,740 --> 00:36:33,390
time to clean that so variable you can

00:36:30,840 --> 00:36:35,870
check if it's written only if it's read

00:36:33,390 --> 00:36:38,580
only but used once is usually or no no

00:36:35,870 --> 00:36:45,120
so you need that variable needs to be

00:36:38,580 --> 00:36:47,580
used twice at least right yes no if it's

00:36:45,120 --> 00:36:48,750
written twice well twice the error so

00:36:47,580 --> 00:36:51,030
that's the same as the processing

00:36:48,750 --> 00:36:53,820
problem is written twice same problem as

00:36:51,030 --> 00:36:55,370
usual it's written but never used if

00:36:53,820 --> 00:36:58,040
it's written and right

00:36:55,370 --> 00:37:02,600
he's read and written first you have to

00:36:58,040 --> 00:37:03,470
check the order secondly that's good but

00:37:02,600 --> 00:37:05,000
is it good enough

00:37:03,470 --> 00:37:06,590
thank you viable you just put one value

00:37:05,000 --> 00:37:13,610
and then you just reuse the same value

00:37:06,590 --> 00:37:16,580
inside another expression that's kind of

00:37:13,610 --> 00:37:18,440
documentation oh because you're giving a

00:37:16,580 --> 00:37:21,670
name to the value the intermediate value

00:37:18,440 --> 00:37:25,910
that's an interesting one

00:37:21,670 --> 00:37:27,380
okay I say to use this variable what

00:37:25,910 --> 00:37:28,730
else I just want to have the other

00:37:27,380 --> 00:37:30,740
balance okay because if you said

00:37:28,730 --> 00:37:32,600
something contrary I would say the other

00:37:30,740 --> 00:37:40,340
ones so it's fine so what else two

00:37:32,600 --> 00:37:43,400
variables use once that could be an idea

00:37:40,340 --> 00:37:45,650
yeah it's when when it's used although

00:37:43,400 --> 00:37:48,140
you're also introducing type adding we

00:37:45,650 --> 00:37:52,250
type typing and we're just talking about

00:37:48,140 --> 00:37:55,370
variable here the amount of them so the

00:37:52,250 --> 00:37:56,870
other side is if you put a result into a

00:37:55,370 --> 00:37:59,000
variable but you can't well you can't

00:37:56,870 --> 00:38:01,100
really move the whole expression to a

00:37:59,000 --> 00:38:02,780
larger expression because if it's large

00:38:01,100 --> 00:38:04,490
enough already and then you add an extra

00:38:02,780 --> 00:38:07,340
expression in it that's going to be

00:38:04,490 --> 00:38:09,350
completely unreadable so ready one

00:38:07,340 --> 00:38:12,590
variable that's used once and then well

00:38:09,350 --> 00:38:15,080
twice I would say it's also could we end

00:38:12,590 --> 00:38:20,750
up with the rule that the variable has

00:38:15,080 --> 00:38:23,600
to be written three times minimal no

00:38:20,750 --> 00:38:26,230
variable used below three times how much

00:38:23,600 --> 00:38:26,230
is that too much

00:38:30,160 --> 00:38:35,150
right twice is good right once is good

00:38:33,260 --> 00:38:38,390
also as we mentioned for readability

00:38:35,150 --> 00:38:40,010
okay but your imagine that just talking

00:38:38,390 --> 00:38:41,960
about one variable we started with the

00:38:40,010 --> 00:38:45,890
fact that undefined variable is a bug

00:38:41,960 --> 00:38:47,300
and we just used the our brain to check

00:38:45,890 --> 00:38:49,369
the different condition ended up with

00:38:47,300 --> 00:38:51,230
this stupid rule of three times minimal

00:38:49,369 --> 00:38:53,270
by variable that's way too much but

00:38:51,230 --> 00:38:54,650
maybe for your company that's not going

00:38:53,270 --> 00:38:57,610
to be way to match all that makes sense

00:38:54,650 --> 00:39:00,380
that may be a style remember local item

00:38:57,610 --> 00:39:03,020
no variable used below three times

00:39:00,380 --> 00:39:06,050
that's what we want here I don't know

00:39:03,020 --> 00:39:07,760
but anyway so discovery is important

00:39:06,050 --> 00:39:09,500
while you're at it while you're getting

00:39:07,760 --> 00:39:11,090
the audit for things you never heard

00:39:09,500 --> 00:39:13,970
about like the bug we've mentioned

00:39:11,090 --> 00:39:16,010
earlier but because of a new development

00:39:13,970 --> 00:39:18,770
because of a new feature of PHP you can

00:39:16,010 --> 00:39:20,660
learn other stuff from your code or for

00:39:18,770 --> 00:39:24,080
the technology of PHP off of the API

00:39:20,660 --> 00:39:26,330
you're using for the framework so the

00:39:24,080 --> 00:39:27,740
next step is we're still trying to fit

00:39:26,330 --> 00:39:29,180
there was fifteen minutes but we don't

00:39:27,740 --> 00:39:31,280
want those bugs to come back

00:39:29,180 --> 00:39:33,740
who's going to reintroduce the famous

00:39:31,280 --> 00:39:37,970
bugs we've been collecting and removing

00:39:33,740 --> 00:39:39,770
for few hours the newcomers newcomers

00:39:37,970 --> 00:39:41,450
they don't know how to do that they are

00:39:39,770 --> 00:39:43,910
not used to our local items they don't

00:39:41,450 --> 00:39:45,800
know what's important to us but since we

00:39:43,910 --> 00:39:47,390
are bank hunting are we just discovering

00:39:45,800 --> 00:39:49,790
the amount of problems we have in our

00:39:47,390 --> 00:39:51,590
code we can collect those we just keep

00:39:49,790 --> 00:39:53,510
the name of the analysis we want the

00:39:51,590 --> 00:39:54,890
rules that I mentioned earlier we

00:39:53,510 --> 00:39:57,740
collect them and we put them in our

00:39:54,890 --> 00:40:01,970
culture our culture our local way of

00:39:57,740 --> 00:40:03,950
coding is this amount of list all

00:40:01,970 --> 00:40:05,510
contingent question that continuous

00:40:03,950 --> 00:40:07,970
integration is the one that applies the

00:40:05,510 --> 00:40:09,740
rules so that's the tool but in terms of

00:40:07,970 --> 00:40:11,570
culture you know what you have

00:40:09,740 --> 00:40:14,030
discovered you know what you want to fix

00:40:11,570 --> 00:40:16,369
you collect them just for our to have

00:40:14,030 --> 00:40:19,100
one place where everyone knows about

00:40:16,369 --> 00:40:21,050
them including the new commerce and the

00:40:19,100 --> 00:40:23,750
strategy I've seen working very well

00:40:21,050 --> 00:40:25,820
with newcomers is that usually if you

00:40:23,750 --> 00:40:28,820
start with too many rules you're going

00:40:25,820 --> 00:40:31,700
to lose them you cannot start in a team

00:40:28,820 --> 00:40:34,730
and have 72 analysis to check all the

00:40:31,700 --> 00:40:36,770
time even if they're automated ok so you

00:40:34,730 --> 00:40:38,119
start with giving them a very known

00:40:36,770 --> 00:40:39,890
number of them I would say something

00:40:38,119 --> 00:40:41,630
between seven and ten depending on how

00:40:39,890 --> 00:40:43,520
easy an hour abuse they are all that

00:40:41,630 --> 00:40:45,350
could be a good start for the

00:40:43,520 --> 00:40:46,940
first month those are the first rule

00:40:45,350 --> 00:40:49,670
they want to check you want them to

00:40:46,940 --> 00:40:52,160
check all the time if they have extra

00:40:49,670 --> 00:40:54,290
bucks it's okay we can we can there's

00:40:52,160 --> 00:40:56,540
new Dementor it's a new comer right and

00:40:54,290 --> 00:40:58,790
then after a month when those rules are

00:40:56,540 --> 00:41:00,590
good then you can run an extra list and

00:40:58,790 --> 00:41:02,600
then the next month you had an extra

00:41:00,590 --> 00:41:04,340
list and once they have reach the level

00:41:02,600 --> 00:41:06,140
where do you have they are up to par

00:41:04,340 --> 00:41:08,300
with the rest of the team they can start

00:41:06,140 --> 00:41:10,820
having the same discovery than you do

00:41:08,300 --> 00:41:13,400
oh that's that's a good one this is this

00:41:10,820 --> 00:41:15,380
rule has to be added to our list of

00:41:13,400 --> 00:41:18,020
rules because it's going to improve us

00:41:15,380 --> 00:41:20,630
but they know exactly how you work here

00:41:18,020 --> 00:41:23,090
first and that's going to prevent you

00:41:20,630 --> 00:41:24,710
from you know reassessing all this time

00:41:23,090 --> 00:41:26,930
all the same rules you have to write

00:41:24,710 --> 00:41:31,460
that at some point so the newcomers will

00:41:26,930 --> 00:41:32,810
will be able to understand so do we

00:41:31,460 --> 00:41:35,810
agree that we should use that as a

00:41:32,810 --> 00:41:39,350
relaxation can we reuse every part of

00:41:35,810 --> 00:41:42,620
what that means aspect by aspect into

00:41:39,350 --> 00:41:43,900
our could reviews think about it next

00:41:42,620 --> 00:41:46,730
time you want to do some code review

00:41:43,900 --> 00:41:49,790
think about what you could do and get as

00:41:46,730 --> 00:41:52,370
relaxation the main takes from here

00:41:49,790 --> 00:41:54,560
automate as much as possible you don't

00:41:52,370 --> 00:41:56,780
want to search for bugs okay fix them

00:41:54,560 --> 00:41:58,370
diagnostic them that's where your brain

00:41:56,780 --> 00:42:01,730
is good you are neither a level of

00:41:58,370 --> 00:42:05,480
abstraction start with that select only

00:42:01,730 --> 00:42:09,080
the important one for you I have 650 of

00:42:05,480 --> 00:42:11,150
them just for exact add okay it takes a

00:42:09,080 --> 00:42:13,010
long time to run I get a lot of things

00:42:11,150 --> 00:42:14,990
in train interesting tidbits I have no

00:42:13,010 --> 00:42:16,790
time to fix everything so don't do

00:42:14,990 --> 00:42:19,310
everything all the time just select your

00:42:16,790 --> 00:42:20,960
rule and maybe discuss that with your

00:42:19,310 --> 00:42:22,640
peers you're here with a number of them

00:42:20,960 --> 00:42:24,380
that's the good time to discuss that

00:42:22,640 --> 00:42:27,080
kind of things okay but don't do all of

00:42:24,380 --> 00:42:28,850
them do the easy one first if you have

00:42:27,080 --> 00:42:30,440
to choose if you're really lost and have

00:42:28,850 --> 00:42:32,930
those five minutes and you'll know what

00:42:30,440 --> 00:42:35,840
to start do the easy ones okay that's

00:42:32,930 --> 00:42:39,470
always one thing fixed is always better

00:42:35,840 --> 00:42:43,550
and the usual target I have is 4 hours a

00:42:39,470 --> 00:42:46,820
day a week four hours a week that's like

00:42:43,550 --> 00:42:50,030
two poses every day - 15 minutes poses

00:42:46,820 --> 00:42:50,780
every day that's a goal but it's not too

00:42:50,030 --> 00:42:52,700
much either

00:42:50,780 --> 00:42:56,369
think about it how many coffee you can

00:42:52,700 --> 00:42:59,670
you can get from that time right so um

00:42:56,369 --> 00:43:01,259
there I collected almost all the links

00:42:59,670 --> 00:43:02,519
here but they will be there so if you

00:43:01,259 --> 00:43:03,960
want to take a picture that's the moment

00:43:02,519 --> 00:43:05,880
that will be in the slide which I will

00:43:03,960 --> 00:43:08,509
provide you the conference but some

00:43:05,880 --> 00:43:11,069
people wants to have that up to now all

00:43:08,509 --> 00:43:12,749
the tools I mentioned during the the

00:43:11,069 --> 00:43:16,440
presentation and I used for that

00:43:12,749 --> 00:43:18,509
presentation were there and I have

00:43:16,440 --> 00:43:20,700
another two minutes so I would like you

00:43:18,509 --> 00:43:25,170
to take your code and start doing code

00:43:20,700 --> 00:43:25,940
review now so thank you very much

00:43:25,170 --> 00:43:28,090
and

00:43:25,940 --> 00:43:34,239
[Applause]

00:43:28,090 --> 00:43:34,239

YouTube URL: https://www.youtube.com/watch?v=kqNF1t4tMvc


