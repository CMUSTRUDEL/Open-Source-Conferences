Title: Why you shouldn´t care about Security | Ben Dechrai | IPC Spring 2019
Publication date: 2019-10-10
Playlist: International PHP Conference Spring 2019
Description: 
	Speaker: Ben Dechrai (Auth0) | https://phpconference.com/speaker/ben-dechrai/

API development is fun! Everyone is doing it, from large organisations wanting to provide developer access to their systems, to small websites wanting to push web application business logic to the browser. Password security is boring. It’s also harder than you’d think. The number of reported system breeches is on the increase, with big names being hit by hackers. And when it comes to service oriented architecture, you have to secure multiple services. That’s just tedious. There are a number of solutions, but few that let you pretty much forget about security and access control. In this talk and demo, Ben will show how implementing an identity provider and using OAuth and OpenID Connect can allow you to ramp up your prototypes and MVPs with more ease and to concentrate on the core purpose of the APIs, rather than the layers of security that are a must in today’s digital world. Three takeaways: 1. You will gain an understanding of OAuth and Open ID Connect to authenticate and authorize a user. 2. You will learn about the use of claims and scopes to control access to certain features of a system. 3. You will see a live demo of how to integrate Auth0 with a common API platform.

🤗 Come, join us at the next International PHP Conference | https://phpconference.com/
👍 Like us on Facebook | https://www.facebook.com/ipc.germany/
👉 Follow us on Twitter | https://twitter.com/phpconference
Captions: 
	00:00:01,550 --> 00:00:08,670
[Music]

00:00:04,430 --> 00:00:10,200
all right it's just turned 12 so in

00:00:08,670 --> 00:00:15,420
order to try and make sure you all get

00:00:10,200 --> 00:00:17,730
to lunch on time I'll start thanks all

00:00:15,420 --> 00:00:20,340
for coming along my name is Ben Dekker I

00:00:17,730 --> 00:00:21,930
work for zero and today I want to talk

00:00:20,340 --> 00:00:24,990
to you about why you shouldn't care

00:00:21,930 --> 00:00:27,359
about security which is probably a

00:00:24,990 --> 00:00:28,789
really weird principle like isn't that

00:00:27,359 --> 00:00:31,439
world we're all supposed to care about

00:00:28,789 --> 00:00:34,800
but I think you shouldn't I'll tell you

00:00:31,439 --> 00:00:38,010
why but first a little bit about me so

00:00:34,800 --> 00:00:41,870
I'm a software engineer from way back

00:00:38,010 --> 00:00:44,370
when I started coding in PHP in 1999

00:00:41,870 --> 00:00:46,379
when it was still version 3 it's anybody

00:00:44,370 --> 00:00:48,719
here remember version 3 those are the

00:00:46,379 --> 00:00:53,039
days oh my god object-orientation who

00:00:48,719 --> 00:00:55,230
needs that right so I started in PHP I

00:00:53,039 --> 00:00:57,059
worked for digital agencies and then for

00:00:55,230 --> 00:00:59,879
product companies and eventually moved

00:00:57,059 --> 00:01:02,280
to Australia where I started finding out

00:00:59,879 --> 00:01:03,539
a lot more about communities I didn't

00:01:02,280 --> 00:01:05,820
know about me to up spec when I was in

00:01:03,539 --> 00:01:07,080
London but then I got to Australian I

00:01:05,820 --> 00:01:08,909
started doing more community stuff

00:01:07,080 --> 00:01:10,890
running some meetups and really enjoyed

00:01:08,909 --> 00:01:13,049
getting to know people and chat to them

00:01:10,890 --> 00:01:14,189
and started getting to few more

00:01:13,049 --> 00:01:16,950
conferences which was really

00:01:14,189 --> 00:01:18,810
nerve-wracking still is to be honest and

00:01:16,950 --> 00:01:20,040
from there I then found out that one of

00:01:18,810 --> 00:01:23,159
the things I was most passionate about

00:01:20,040 --> 00:01:26,159
was security privacy anonymity I've

00:01:23,159 --> 00:01:28,380
actually considered implanting silver

00:01:26,159 --> 00:01:30,840
foil under my head as a permanent hat

00:01:28,380 --> 00:01:32,100
and I think aluminium in the brain is

00:01:30,840 --> 00:01:33,479
not a good thing so I haven't done it

00:01:32,100 --> 00:01:36,420
yet I'll wait for somebody else to try

00:01:33,479 --> 00:01:38,670
that first but all of these things kind

00:01:36,420 --> 00:01:40,320
of culminated to me starting to work for

00:01:38,670 --> 00:01:42,540
zero so I started working there as a

00:01:40,320 --> 00:01:44,549
developer evangelist back in September

00:01:42,540 --> 00:01:46,229
and developer evangelist is still a bit

00:01:44,549 --> 00:01:47,790
of a strange word people think I'm gonna

00:01:46,229 --> 00:01:48,840
stand up here and look like a priest and

00:01:47,790 --> 00:01:51,149
tell you what exactly what you should

00:01:48,840 --> 00:01:54,409
believe but in fact what it is is that I

00:01:51,149 --> 00:01:57,450
evangelize developers back to or zero so

00:01:54,409 --> 00:01:58,680
because I love working and meeting the

00:01:57,450 --> 00:02:00,540
community I want to find out what

00:01:58,680 --> 00:02:02,579
problems you have and then be able to

00:02:00,540 --> 00:02:04,110
take that back to zero or any other

00:02:02,579 --> 00:02:06,240
company for that matter and try and make

00:02:04,110 --> 00:02:08,280
your lives easier so I'm not here to

00:02:06,240 --> 00:02:10,379
preach I'm here to have fun to share

00:02:08,280 --> 00:02:12,239
some thoughts meet you afterwards get

00:02:10,379 --> 00:02:13,720
some good questions and and see if

00:02:12,239 --> 00:02:15,210
there's any other ways that

00:02:13,720 --> 00:02:17,410
your problems can be solved more easily

00:02:15,210 --> 00:02:22,630
but the problem I want to solve today is

00:02:17,410 --> 00:02:24,280
security so in the beginning we had the

00:02:22,630 --> 00:02:26,710
whole our security is developed

00:02:24,280 --> 00:02:29,170
organically has anybody ever said that

00:02:26,710 --> 00:02:30,610
to anybody or ever heard that we just

00:02:29,170 --> 00:02:32,680
develop it organically we don't really

00:02:30,610 --> 00:02:37,420
have a process for doing security

00:02:32,680 --> 00:02:40,330
it just happens magically no Security's

00:02:37,420 --> 00:02:41,740
magic and from there we we want to work

00:02:40,330 --> 00:02:43,660
out how we can do better so we'll have a

00:02:41,740 --> 00:02:45,790
look at the organic method we'll look at

00:02:43,660 --> 00:02:46,810
ways of doing it better and then I want

00:02:45,790 --> 00:02:49,780
to finish off with how you can just not

00:02:46,810 --> 00:02:52,210
care so let's start having a look at the

00:02:49,780 --> 00:02:55,450
organically so it all started or Ganic

00:02:52,210 --> 00:02:57,880
lee we had a user and we have a website

00:02:55,450 --> 00:03:00,070
we've got this cloud thing in the middle

00:02:57,880 --> 00:03:03,100
and the user wants to request something

00:03:00,070 --> 00:03:05,140
from a server and the server returns a

00:03:03,100 --> 00:03:07,870
login page and the user passes the

00:03:05,140 --> 00:03:09,100
credentials in and then it goes off to a

00:03:07,870 --> 00:03:11,110
database to make sure that you're using

00:03:09,100 --> 00:03:13,090
a password are correct I assume they are

00:03:11,110 --> 00:03:14,200
it'll then send a response back to the

00:03:13,090 --> 00:03:16,030
server and the server can then render

00:03:14,200 --> 00:03:17,860
the success page we've all seen that

00:03:16,030 --> 00:03:20,140
right how many of us have written a

00:03:17,860 --> 00:03:21,970
login form like that how many of us have

00:03:20,140 --> 00:03:24,850
written a login form system like that in

00:03:21,970 --> 00:03:27,310
my last year there's still too many

00:03:24,850 --> 00:03:27,820
hands we shouldn't have to care about

00:03:27,310 --> 00:03:29,560
that

00:03:27,820 --> 00:03:31,120
because the problem now is somebody

00:03:29,560 --> 00:03:33,730
comes along and says let there be scale

00:03:31,120 --> 00:03:36,310
our service of really slow we've got too

00:03:33,730 --> 00:03:37,510
many users we need to shut our database

00:03:36,310 --> 00:03:40,300
whatever the problem is that we're

00:03:37,510 --> 00:03:42,310
trying to solve so we bring in three

00:03:40,300 --> 00:03:44,560
extra servers another database the

00:03:42,310 --> 00:03:46,000
databases talk to the servers and the

00:03:44,560 --> 00:03:48,250
databases need to synchronize with each

00:03:46,000 --> 00:03:49,900
other and then because we don't have

00:03:48,250 --> 00:03:52,000
state anymore because we were storing it

00:03:49,900 --> 00:03:54,190
all in a session cookie on the one

00:03:52,000 --> 00:03:55,989
server we now bring in a memcache or

00:03:54,190 --> 00:03:58,209
some kind of caching system at the top

00:03:55,989 --> 00:04:00,310
there so we can share the session across

00:03:58,209 --> 00:04:02,110
multiple servers and they've all got to

00:04:00,310 --> 00:04:03,580
communicate there and then we decide

00:04:02,110 --> 00:04:06,520
we're going to create an API to make our

00:04:03,580 --> 00:04:09,220
lives easier so the API needs to be able

00:04:06,520 --> 00:04:10,420
to be to to know whether or not the

00:04:09,220 --> 00:04:11,770
servers are allowed to talk to it so

00:04:10,420 --> 00:04:13,420
there's an authentication process there

00:04:11,770 --> 00:04:15,610
so the API now also needs to talk to the

00:04:13,420 --> 00:04:17,410
database to see not just if the users

00:04:15,610 --> 00:04:18,790
logged in but is this server allowed to

00:04:17,410 --> 00:04:21,280
talk to me is there a machine to machine

00:04:18,790 --> 00:04:23,800
or fent occation authorization here and

00:04:21,280 --> 00:04:26,350
then of course because we've got an API

00:04:23,800 --> 00:04:27,880
why not use rest to talk directly from

00:04:26,350 --> 00:04:29,199
the client to the aide

00:04:27,880 --> 00:04:30,490
so now the API needs to talk to the

00:04:29,199 --> 00:04:31,780
database in a second way to record

00:04:30,490 --> 00:04:33,580
whether the clients allowed to talk to

00:04:31,780 --> 00:04:34,750
it and somebody else says well you know

00:04:33,580 --> 00:04:36,099
if we've gotten a we've got all this

00:04:34,750 --> 00:04:38,650
database of users but we've got an

00:04:36,099 --> 00:04:40,780
active directory store why do we allow

00:04:38,650 --> 00:04:42,190
our people to log in either via single

00:04:40,780 --> 00:04:43,360
sign-on or just the same username and

00:04:42,190 --> 00:04:44,110
password that we've already got in

00:04:43,360 --> 00:04:45,819
Active Directory

00:04:44,110 --> 00:04:47,289
so we then connect all the service to

00:04:45,819 --> 00:04:49,210
Active Directory and we click the

00:04:47,289 --> 00:04:50,650
connect the API to Active Directory and

00:04:49,210 --> 00:04:52,090
then the Active Directory synchronizes

00:04:50,650 --> 00:04:53,979
with the database which synchronizes

00:04:52,090 --> 00:04:55,300
with the other database and then

00:04:53,979 --> 00:04:56,979
somebody says well we've got an API

00:04:55,300 --> 00:05:00,009
let's do the mobile app as well so the

00:04:56,979 --> 00:05:01,960
mobile app now talks to the API and

00:05:00,009 --> 00:05:03,460
that's just authentication and

00:05:01,960 --> 00:05:06,160
authorization we're not even passing

00:05:03,460 --> 00:05:08,680
data around yet so it gets complicated

00:05:06,160 --> 00:05:10,360
really quickly does anybody ever seen

00:05:08,680 --> 00:05:14,949
anything grow to this scale and pull

00:05:10,360 --> 00:05:16,300
their hair out about 10% yeah yes that's

00:05:14,949 --> 00:05:17,500
just for the authentication the identity

00:05:16,300 --> 00:05:19,780
management we haven't even looked at

00:05:17,500 --> 00:05:20,949
let's get them some data from the API or

00:05:19,780 --> 00:05:25,780
we're saying is I am I allowed to talk

00:05:20,949 --> 00:05:27,159
to the API it's complicated so how can

00:05:25,780 --> 00:05:30,430
we do it better let's take a step back

00:05:27,159 --> 00:05:32,680
we've got all this mess just here on the

00:05:30,430 --> 00:05:34,780
right hand side what can we do to clean

00:05:32,680 --> 00:05:37,300
that up so let's take that all out we'll

00:05:34,780 --> 00:05:39,490
add in an identity provider it's a

00:05:37,300 --> 00:05:41,830
single solution and you can host your

00:05:39,490 --> 00:05:44,440
own you can grab one like a cloud

00:05:41,830 --> 00:05:46,419
storage cloud solution like all-zero or

00:05:44,440 --> 00:05:47,800
kognito or any of the others but you

00:05:46,419 --> 00:05:51,099
grab yourself an identity provider whose

00:05:47,800 --> 00:05:52,449
sole job is to manage identity how many

00:05:51,099 --> 00:05:57,639
people here work for a company that

00:05:52,449 --> 00:05:59,050
produces identity software one so that

00:05:57,639 --> 00:06:00,639
person at the back there is the only

00:05:59,050 --> 00:06:03,820
person in this room who should write a

00:06:00,639 --> 00:06:05,800
login form because your businesses don't

00:06:03,820 --> 00:06:08,229
make more money by having better login

00:06:05,800 --> 00:06:09,280
they make more money by providing the

00:06:08,229 --> 00:06:12,400
service that your business provides

00:06:09,280 --> 00:06:14,409
better how many people here write their

00:06:12,400 --> 00:06:16,000
own merchant service like I want to

00:06:14,409 --> 00:06:17,710
process this credit card so I'm going to

00:06:16,000 --> 00:06:19,509
talk to the bank and bring the money out

00:06:17,710 --> 00:06:21,969
and do it all within your own system and

00:06:19,509 --> 00:06:25,380
your PCI compliant we don't do that

00:06:21,969 --> 00:06:28,960
anymore about two people do you work for

00:06:25,380 --> 00:06:31,150
money processing company oh you do okay

00:06:28,960 --> 00:06:32,440
so in the same ways we've got the

00:06:31,150 --> 00:06:34,060
identity provider on the back doing

00:06:32,440 --> 00:06:36,070
login we've got the person who does

00:06:34,060 --> 00:06:37,330
money management transactions doing the

00:06:36,070 --> 00:06:40,190
money side of things but we don't do

00:06:37,330 --> 00:06:42,410
that anymore we use stripe or use PayPal

00:06:40,190 --> 00:06:43,430
so externalizing whatever you tool

00:06:42,410 --> 00:06:44,480
you're going to use doesn't need to be

00:06:43,430 --> 00:06:46,460
all sir if you don't want to but just

00:06:44,480 --> 00:06:49,010
externalize that don't worry about it

00:06:46,460 --> 00:06:50,270
don't make it your problem so from this

00:06:49,010 --> 00:06:51,950
point here we can stop logging in

00:06:50,270 --> 00:06:53,210
directly to our servers our servers

00:06:51,950 --> 00:06:54,620
don't need to know our credentials we

00:06:53,210 --> 00:06:56,720
lock directly into the identity server

00:06:54,620 --> 00:06:59,360
the identity server can then tell us oh

00:06:56,720 --> 00:07:00,500
was who's just logged in and again our

00:06:59,360 --> 00:07:03,650
servers then don't need to know the

00:07:00,500 --> 00:07:05,210
passwords so what the risk profile is a

00:07:03,650 --> 00:07:08,510
lot lower now because we're not storing

00:07:05,210 --> 00:07:10,850
this sensitive information the API can

00:07:08,510 --> 00:07:12,470
also use those same tokens like the

00:07:10,850 --> 00:07:16,100
access tokens from the identity provider

00:07:12,470 --> 00:07:18,800
you can synchronize between users within

00:07:16,100 --> 00:07:21,110
a database you can allow the database to

00:07:18,800 --> 00:07:22,190
no extra profile information about the

00:07:21,110 --> 00:07:24,560
user but it still we don't have the

00:07:22,190 --> 00:07:25,970
credentials you can even synchronize

00:07:24,560 --> 00:07:28,130
with Active Directory a lot of identity

00:07:25,970 --> 00:07:33,260
providers will allow you to back off an

00:07:28,130 --> 00:07:35,240
existing user ad or any of the likely

00:07:33,260 --> 00:07:37,310
user management systems as a login

00:07:35,240 --> 00:07:39,290
provider or even just as a user store

00:07:37,310 --> 00:07:40,700
for the username and passwords and then

00:07:39,290 --> 00:07:42,560
you've got your identity provider that

00:07:40,700 --> 00:07:48,740
manages all of that token generation and

00:07:42,560 --> 00:07:51,110
management so let's take a step in and

00:07:48,740 --> 00:07:53,990
look at how token passing actually works

00:07:51,110 --> 00:07:56,900
on what is open ID Connect and a wolf

00:07:53,990 --> 00:07:58,100
how does this process work so that you

00:07:56,900 --> 00:08:00,800
don't need to know anything about who

00:07:58,100 --> 00:08:02,870
the user is until you have this token so

00:08:00,800 --> 00:08:04,930
we have the identity provider here at

00:08:02,870 --> 00:08:09,380
the top there on our server we have a

00:08:04,930 --> 00:08:11,169
client ID and a client secret so there's

00:08:09,380 --> 00:08:13,730
two different ways that you can do

00:08:11,169 --> 00:08:15,710
authentication or like management

00:08:13,730 --> 00:08:16,520
between your api's and web servers and

00:08:15,710 --> 00:08:19,490
the identity provider

00:08:16,520 --> 00:08:21,290
depending on how you hash the

00:08:19,490 --> 00:08:24,350
information you can either use a an H

00:08:21,290 --> 00:08:26,930
Mac or an RSA hashing with H Mac you're

00:08:24,350 --> 00:08:27,980
going to have a shared key and with RSA

00:08:26,930 --> 00:08:30,500
you're gonna have a public private key

00:08:27,980 --> 00:08:31,580
they're different use cases it's beyond

00:08:30,500 --> 00:08:32,750
the scope of this talk but if you want

00:08:31,580 --> 00:08:33,890
to know more about that come talk to me

00:08:32,750 --> 00:08:35,419
afterwards about why you would you

00:08:33,890 --> 00:08:36,410
choose one over the other so in this

00:08:35,419 --> 00:08:38,570
particular case we're gonna have a

00:08:36,410 --> 00:08:40,669
shared key process so we have the shared

00:08:38,570 --> 00:08:43,370
key on the server and we have the client

00:08:40,669 --> 00:08:44,870
ID so when the user comes across the

00:08:43,370 --> 00:08:46,670
server now what the server does is it

00:08:44,870 --> 00:08:49,220
doesn't redirect or doesn't generate a

00:08:46,670 --> 00:08:51,520
login page it sends the client ID

00:08:49,220 --> 00:08:54,080
back to the server with a 302 redirect

00:08:51,520 --> 00:08:56,089
so your browser now gets redirected

00:08:54,080 --> 00:08:57,920
providing the identity provider creates

00:08:56,089 --> 00:08:58,600
the login form thanks to our gentleman

00:08:57,920 --> 00:09:01,760
over back there

00:08:58,600 --> 00:09:03,080
so this login form is generated based on

00:09:01,760 --> 00:09:04,730
the client ID that's passed to the

00:09:03,080 --> 00:09:06,230
identity provide us the identity of Ida

00:09:04,730 --> 00:09:07,850
knows which client is trying to login

00:09:06,230 --> 00:09:09,890
I'm trying to log in to been decried

00:09:07,850 --> 00:09:12,589
calm therefore I'm going to provide this

00:09:09,890 --> 00:09:13,790
login form so I then type in my

00:09:12,589 --> 00:09:15,019
credentials I pass them back to the

00:09:13,790 --> 00:09:17,029
identity provided the identity provider

00:09:15,019 --> 00:09:18,769
will then look up my username and

00:09:17,029 --> 00:09:21,230
password and make sure they match and

00:09:18,769 --> 00:09:23,180
assuming they do it'll generate an

00:09:21,230 --> 00:09:26,029
authorization code which then passes

00:09:23,180 --> 00:09:27,740
back to the browser which the browser

00:09:26,029 --> 00:09:30,829
then automatically redirects back to the

00:09:27,740 --> 00:09:33,200
server so all the user is now seen as a

00:09:30,829 --> 00:09:34,700
login page they've submitted it for all

00:09:33,200 --> 00:09:35,959
intents and purposes it looks no

00:09:34,700 --> 00:09:38,779
different to any other kind of login

00:09:35,959 --> 00:09:42,140
experience but in the background your

00:09:38,779 --> 00:09:43,700
server now has the authorization code

00:09:42,140 --> 00:09:45,920
that has come back with that login

00:09:43,700 --> 00:09:47,660
process and using that authorization

00:09:45,920 --> 00:09:50,300
code and the private key or the shared

00:09:47,660 --> 00:09:51,740
password rather it sends those in a

00:09:50,300 --> 00:09:53,540
server to server communications that's

00:09:51,740 --> 00:09:55,430
the secure part there remember that the

00:09:53,540 --> 00:09:57,320
user area the browser is totally

00:09:55,430 --> 00:09:58,279
untrusted we can't trust what comes

00:09:57,320 --> 00:10:00,260
through which is why we use the

00:09:58,279 --> 00:10:03,829
authorization code to then pass back

00:10:00,260 --> 00:10:05,480
with the shared password so the identity

00:10:03,829 --> 00:10:06,620
provider can say well I know that you

00:10:05,480 --> 00:10:08,120
are definitely been decried oakum

00:10:06,620 --> 00:10:09,470
because you have just given me the

00:10:08,120 --> 00:10:11,329
shared password that only you and I

00:10:09,470 --> 00:10:13,190
should know and you've given musa this

00:10:11,329 --> 00:10:15,500
authorization code which I'd previously

00:10:13,190 --> 00:10:17,600
passed back to a browser because John

00:10:15,500 --> 00:10:20,360
Smith just logged in therefore I'm going

00:10:17,600 --> 00:10:21,800
to create a token for John Smith down on

00:10:20,360 --> 00:10:23,990
the bottom here I'm gonna send that

00:10:21,800 --> 00:10:26,300
token back to you the identity provider

00:10:23,990 --> 00:10:27,800
is now sure that John Smith is the

00:10:26,300 --> 00:10:29,329
person who logged in is sure that been

00:10:27,800 --> 00:10:30,890
decried or calm is the server that this

00:10:29,329 --> 00:10:32,560
person wants to login to and has just

00:10:30,890 --> 00:10:34,670
provided that token back to the server

00:10:32,560 --> 00:10:36,200
but again from the user experience

00:10:34,670 --> 00:10:38,060
perspective all they saw was a login

00:10:36,200 --> 00:10:41,140
form and you don't have to worry about

00:10:38,060 --> 00:10:43,310
any of the the password hashing

00:10:41,140 --> 00:10:46,930
migration issues and the few in the

00:10:43,310 --> 00:10:49,550
future securing your databases from that

00:10:46,930 --> 00:10:52,250
risk obviously you still want to secure

00:10:49,550 --> 00:10:54,940
your databases that's essentially how it

00:10:52,250 --> 00:10:54,940
works in the background

00:10:55,060 --> 00:10:59,650
so the changes that we see here now is

00:10:57,670 --> 00:11:02,890
that we're passing the credentials

00:10:59,650 --> 00:11:04,960
directly to the server which means that

00:11:02,890 --> 00:11:07,720
this token that gets generated once by

00:11:04,960 --> 00:11:11,110
the the web server if anybody here was

00:11:07,720 --> 00:11:12,850
in some balance talked yesterday with a

00:11:11,110 --> 00:11:14,320
couple of hens so he was talking about

00:11:12,850 --> 00:11:16,270
how you can take one token and you can

00:11:14,320 --> 00:11:18,490
chain it down the line so you can have a

00:11:16,270 --> 00:11:19,720
token that's generated for a particular

00:11:18,490 --> 00:11:21,940
user and you can provide it to any other

00:11:19,720 --> 00:11:23,350
entity and those entities can then trust

00:11:21,940 --> 00:11:25,240
that that information is correct with

00:11:23,350 --> 00:11:27,040
cookies for example you can't do that if

00:11:25,240 --> 00:11:28,540
I if my browser sends a cookie to Ben

00:11:27,040 --> 00:11:30,280
deck right calm and Ben deck right calm

00:11:28,540 --> 00:11:32,470
want to then make a request to API dot

00:11:30,280 --> 00:11:34,690
Ben decorator calm you can't really pass

00:11:32,470 --> 00:11:37,270
that cookie along you can sort off but

00:11:34,690 --> 00:11:39,160
it's tricky and there's potential

00:11:37,270 --> 00:11:40,990
backdoors and from abilities that could

00:11:39,160 --> 00:11:42,730
happen because you're essentially

00:11:40,990 --> 00:11:45,070
managing these tokens very manually and

00:11:42,730 --> 00:11:47,230
then you've got the main issues like

00:11:45,070 --> 00:11:48,340
cores and all the rest of it but in this

00:11:47,230 --> 00:11:50,560
case here because you've got a single

00:11:48,340 --> 00:11:52,330
token you can provide that to any other

00:11:50,560 --> 00:11:54,580
system within your ecosystem and that

00:11:52,330 --> 00:11:56,260
token can be used to either assert who

00:11:54,580 --> 00:11:58,330
you are or assert what you're allowed to

00:11:56,260 --> 00:12:01,690
do so an identity token or an access to

00:11:58,330 --> 00:12:03,070
them the access token can also be used

00:12:01,690 --> 00:12:05,860
directly between the server and the API

00:12:03,070 --> 00:12:08,350
the identity provider doesn't need to be

00:12:05,860 --> 00:12:09,370
involved because access tokens

00:12:08,350 --> 00:12:12,220
especially when you start looking at

00:12:09,370 --> 00:12:13,720
JSON web tokens they are self validating

00:12:12,220 --> 00:12:15,460
they have a signature which means that

00:12:13,720 --> 00:12:17,080
you're allowed to or you're able to

00:12:15,460 --> 00:12:20,320
determine whether or not the token has

00:12:17,080 --> 00:12:22,620
been modified so two systems can talk to

00:12:20,320 --> 00:12:24,670
each other and share a JSON web token

00:12:22,620 --> 00:12:27,370
without the identity provider you

00:12:24,670 --> 00:12:32,020
needing to be consulted about whether or

00:12:27,370 --> 00:12:33,850
not it's valid the login from the mobile

00:12:32,020 --> 00:12:36,070
similarly will just go directly to the

00:12:33,850 --> 00:12:37,660
identity provider and then they'll be

00:12:36,070 --> 00:12:39,910
able to use the same token or a

00:12:37,660 --> 00:12:41,470
different token still for that user to

00:12:39,910 --> 00:12:43,870
talk directly to the API so now we don't

00:12:41,470 --> 00:12:47,800
have that issue of logging in to the API

00:12:43,870 --> 00:12:49,140
for rest-based or whatever kind of soap

00:12:47,800 --> 00:12:51,460
whatever want you want to use

00:12:49,140 --> 00:12:56,050
connections to your API you're still

00:12:51,460 --> 00:12:59,110
using this single token so how can we

00:12:56,050 --> 00:13:00,310
just not care so this bars where I'm

00:12:59,110 --> 00:13:02,080
going to sit down I'm gonna try and do a

00:13:00,310 --> 00:13:06,190
demo because we all have lot rot live

00:13:02,080 --> 00:13:08,860
demos yeah good so I'm going to do a

00:13:06,190 --> 00:13:10,030
demo around all 0 naturally

00:13:08,860 --> 00:13:11,710
because that's the product that I'm most

00:13:10,030 --> 00:13:15,400
familiar with and there's anybody here

00:13:11,710 --> 00:13:16,780
used all 0 before a few hens one of the

00:13:15,400 --> 00:13:18,040
things so before I even started working

00:13:16,780 --> 00:13:19,540
for them one of the reasons why I

00:13:18,040 --> 00:13:21,070
started using it as a product is because

00:13:19,540 --> 00:13:22,630
the documentation is really quite

00:13:21,070 --> 00:13:23,800
awesome once you've created your

00:13:22,630 --> 00:13:26,080
application it almost gives you a

00:13:23,800 --> 00:13:28,030
step-by-step almost copy and paste way

00:13:26,080 --> 00:13:30,310
of setting your appeer application

00:13:28,030 --> 00:13:31,690
really quickly and for example once

00:13:30,310 --> 00:13:33,670
you've created an application you get

00:13:31,690 --> 00:13:35,590
this list here that says what are you

00:13:33,670 --> 00:13:36,610
integrating with you just click on it'll

00:13:35,590 --> 00:13:37,960
take you directly to the documentation

00:13:36,610 --> 00:13:40,390
I've actually had people come to me and

00:13:37,960 --> 00:13:41,920
say that they have used all zero

00:13:40,390 --> 00:13:44,290
documentation to get their Cognito

00:13:41,920 --> 00:13:49,030
integration working because apparently

00:13:44,290 --> 00:13:51,480
cognitive documentation is not as good I

00:13:49,030 --> 00:13:54,730
think is that politically correct to say

00:13:51,480 --> 00:13:56,590
all right so let's have a look at some

00:13:54,730 --> 00:13:59,020
code so naturally I'm gonna do it in PHP

00:13:56,590 --> 00:14:02,020
because we all like PHP here and I've

00:13:59,020 --> 00:14:03,130
got three code bases to look at so we've

00:14:02,020 --> 00:14:04,690
got the application which is kind of

00:14:03,130 --> 00:14:06,130
like the client so in this case I'm

00:14:04,690 --> 00:14:08,290
going to create a web application you

00:14:06,130 --> 00:14:10,930
could obviously use it for native mobile

00:14:08,290 --> 00:14:12,250
application as well as far as I'm aware

00:14:10,930 --> 00:14:15,280
you can't write native mobile

00:14:12,250 --> 00:14:17,680
applications in PHP if anybody knows of

00:14:15,280 --> 00:14:20,440
a way of doing that I'd love to know so

00:14:17,680 --> 00:14:22,180
we will do a web application so if we

00:14:20,440 --> 00:14:27,580
have a look here we've got a very simple

00:14:22,180 --> 00:14:29,110
application so I've used composer and

00:14:27,580 --> 00:14:31,540
basically the only thing I've said is I

00:14:29,110 --> 00:14:32,980
require all zero PHP and then you do

00:14:31,540 --> 00:14:35,380
composer install and you're pretty much

00:14:32,980 --> 00:14:37,960
ready to go so the main thing that we

00:14:35,380 --> 00:14:39,250
have in here is three files both 0 PHP

00:14:37,960 --> 00:14:41,560
which kinda like the bootstrap that's

00:14:39,250 --> 00:14:44,710
where the configuration stuff goes we've

00:14:41,560 --> 00:14:48,820
got index dot PHP just like the index

00:14:44,710 --> 00:14:49,840
doc beauty we've got login and logout in

00:14:48,820 --> 00:14:53,380
order to get this going

00:14:49,840 --> 00:14:54,520
we have the author 0 file can is that

00:14:53,380 --> 00:14:57,580
bright enough for the people at the back

00:14:54,520 --> 00:14:59,560
it's readable yes I'm getting nodding

00:14:57,580 --> 00:15:01,370
but no shaking so maybe you can't hear

00:14:59,560 --> 00:15:03,990
me either

00:15:01,370 --> 00:15:05,730
so we're pulling in autoload and I

00:15:03,990 --> 00:15:07,350
basically create a new or zero object

00:15:05,730 --> 00:15:09,720
and in there I've got all of my

00:15:07,350 --> 00:15:12,029
configuration so the thing that I know

00:15:09,720 --> 00:15:13,709
that I want to do is when you log in

00:15:12,029 --> 00:15:15,120
remember how we did the redirect from

00:15:13,709 --> 00:15:16,860
the identity provider back to the server

00:15:15,120 --> 00:15:19,019
so we needed to find there that's where

00:15:16,860 --> 00:15:20,940
we're going so local localhost port 3000

00:15:19,019 --> 00:15:23,009
is where this app is going to run

00:15:20,940 --> 00:15:24,000
so once I've logged in towards zero it's

00:15:23,009 --> 00:15:26,459
going to redirect me back to this

00:15:24,000 --> 00:15:28,560
application we've got the audience so

00:15:26,459 --> 00:15:31,440
the audience at the moment if anybody's

00:15:28,560 --> 00:15:33,060
used Open ID Connect in the past you'll

00:15:31,440 --> 00:15:35,100
probably be familiar with the user info

00:15:33,060 --> 00:15:38,160
endpoint so that's basically a pretty

00:15:35,100 --> 00:15:39,720
standard path on the identity providers

00:15:38,160 --> 00:15:42,870
URL which gives you information about

00:15:39,720 --> 00:15:44,579
the user a couple of other things so the

00:15:42,870 --> 00:15:46,290
domain that I'm connecting to for

00:15:44,579 --> 00:15:47,759
authentication and client ID and secret

00:15:46,290 --> 00:15:53,730
need to go in there so let's generate

00:15:47,759 --> 00:15:56,040
those so this is I've basically just

00:15:53,730 --> 00:15:57,509
logged into alcira comm and I've gone to

00:15:56,040 --> 00:15:59,279
the applications tab on the Left we're

00:15:57,509 --> 00:16:02,639
going to create an application and I'm

00:15:59,279 --> 00:16:08,160
going to call it IPC or my applied PC

00:16:02,639 --> 00:16:11,069
just IPC I'm fine I'm s we wanted to be

00:16:08,160 --> 00:16:13,260
a regular regular web application hit

00:16:11,069 --> 00:16:14,279
create and this is then where we see

00:16:13,260 --> 00:16:16,290
that screen that I was training before

00:16:14,279 --> 00:16:18,089
the QuickStart so you can go in and you

00:16:16,290 --> 00:16:19,829
can choose whatever technology I'm

00:16:18,089 --> 00:16:21,779
currently tethered to my mobile because

00:16:19,829 --> 00:16:23,880
the conference Wi-Fi is also slow there

00:16:21,779 --> 00:16:25,709
we go so here you can choose whichever

00:16:23,880 --> 00:16:27,360
technology you're using and I'll give

00:16:25,709 --> 00:16:29,339
you a step-by-step guide on how to

00:16:27,360 --> 00:16:31,380
integrate but I'm just going to step

00:16:29,339 --> 00:16:33,690
straight into the settings page where we

00:16:31,380 --> 00:16:37,380
have the client ID and the secret so

00:16:33,690 --> 00:16:45,560
I'll copy the client ID and punk that in

00:16:37,380 --> 00:16:45,560
here and the secret

00:16:49,960 --> 00:16:56,210
that's it so if we just have a quick

00:16:53,450 --> 00:16:59,360
look at the index dot PHP to see what

00:16:56,210 --> 00:17:01,400
happens in there it's not the prettiest

00:16:59,360 --> 00:17:03,590
I haven't used a templating language I'm

00:17:01,400 --> 00:17:06,500
sure a lot of you're cringing but it's a

00:17:03,590 --> 00:17:07,910
demo okay so we're putting in all syrup

00:17:06,500 --> 00:17:10,730
or PHP again so that we've got the

00:17:07,910 --> 00:17:12,560
configuration we're getting the user

00:17:10,730 --> 00:17:15,680
info was already created in or 0 as a

00:17:12,560 --> 00:17:17,120
instance of the all 0 object we're

00:17:15,680 --> 00:17:18,770
getting the user information out of that

00:17:17,120 --> 00:17:20,570
so the way that and this is the standard

00:17:18,770 --> 00:17:21,740
class that comes from all 0 the way that

00:17:20,570 --> 00:17:25,040
works is you'll either get something

00:17:21,740 --> 00:17:26,959
that evaluates to false ish if there's

00:17:25,040 --> 00:17:27,949
no user info so if there's no user info

00:17:26,959 --> 00:17:31,100
we're just going to display the login

00:17:27,949 --> 00:17:32,150
button button link otherwise we're going

00:17:31,100 --> 00:17:33,440
to go through and just print out some

00:17:32,150 --> 00:17:34,910
information so that you can see what's

00:17:33,440 --> 00:17:36,560
going on behind the scenes I wouldn't

00:17:34,910 --> 00:17:39,970
recommend perhaps dumping all of this

00:17:36,560 --> 00:17:41,900
out to in your production application

00:17:39,970 --> 00:17:43,010
but we'll have a look what's going on so

00:17:41,900 --> 00:17:44,930
we'll have a logout button just for

00:17:43,010 --> 00:17:46,640
convenience I'm going to print out the

00:17:44,930 --> 00:17:48,560
name of the person logged in show the

00:17:46,640 --> 00:17:52,250
image show what we're actually getting

00:17:48,560 --> 00:17:53,330
back in the user info variable there and

00:17:52,250 --> 00:17:55,460
then also just dump out the session

00:17:53,330 --> 00:17:56,390
because the library will put some stuff

00:17:55,460 --> 00:18:01,670
into the session just for convenience

00:17:56,390 --> 00:18:04,480
let's see how that looks so we've got

00:18:01,670 --> 00:18:04,480
our login button up here

00:18:09,830 --> 00:18:14,779
so the first thing that happens is we

00:18:11,720 --> 00:18:15,950
get a failure something went wrong so

00:18:14,779 --> 00:18:17,570
this is where the documentation starts

00:18:15,950 --> 00:18:20,690
helping you automatically in telling us

00:18:17,570 --> 00:18:22,669
of the URL a callback URL mismatch has

00:18:20,690 --> 00:18:26,049
occurred and basically this happens

00:18:22,669 --> 00:18:28,549
because if I'm an identity provider and

00:18:26,049 --> 00:18:31,369
Stasia has a website and she wants to

00:18:28,549 --> 00:18:33,259
use right and she wants to use my

00:18:31,369 --> 00:18:36,080
identity provider services for people to

00:18:33,259 --> 00:18:38,299
log in and then what's your name Alice

00:18:36,080 --> 00:18:40,340
comes along and says I'm going to use

00:18:38,299 --> 00:18:42,710
the same key but a different callback

00:18:40,340 --> 00:18:43,850
URL to hijack the information and

00:18:42,710 --> 00:18:46,940
pretend that somebody's logged in as me

00:18:43,850 --> 00:18:49,249
so I need to know who anastasiya is

00:18:46,940 --> 00:18:51,080
happy to have as a callback URL that's

00:18:49,249 --> 00:18:52,340
an extra level of security so that's

00:18:51,080 --> 00:18:57,769
something we need to set up again in all

00:18:52,340 --> 00:18:59,119
this here so if we jump over yeah go

00:18:57,769 --> 00:19:00,259
down a little so there's all sorts of

00:18:59,119 --> 00:19:01,429
other things you can do in here you can

00:19:00,259 --> 00:19:02,960
like change your colors and your logo

00:19:01,429 --> 00:19:05,149
and all the rest of it but essentially

00:19:02,960 --> 00:19:06,559
the main thing we want to do here and

00:19:05,149 --> 00:19:08,299
I'm gonna copy and paste because talking

00:19:06,559 --> 00:19:11,799
and talking at the same time is always a

00:19:08,299 --> 00:19:13,879
mistake and we're going to paste

00:19:11,799 --> 00:19:15,230
localhost for three thousand in there so

00:19:13,879 --> 00:19:18,350
that's once I've logged in that's where

00:19:15,230 --> 00:19:20,809
I want to be redirected back to now the

00:19:18,350 --> 00:19:22,970
other thing we also need to say define

00:19:20,809 --> 00:19:25,970
is where people are allowed to load the

00:19:22,970 --> 00:19:29,809
login page from so the origin so in this

00:19:25,970 --> 00:19:32,149
case here I'm just going to say look

00:19:29,809 --> 00:19:35,149
close port 3000 is a site that's allowed

00:19:32,149 --> 00:19:38,600
to use this instance of all 0 this

00:19:35,149 --> 00:19:40,249
tenancy as a login system so if I go

00:19:38,600 --> 00:19:45,789
down hit save and then we try login

00:19:40,249 --> 00:19:49,249
again it should just work let's go back

00:19:45,789 --> 00:19:51,789
refresh just in case to find the mouse

00:19:49,249 --> 00:19:51,789
cursor again

00:19:55,600 --> 00:19:59,210
so we have a default logo we've got the

00:19:58,040 --> 00:20:00,680
name of the application that we want to

00:19:59,210 --> 00:20:02,030
log in as we've automatically

00:20:00,680 --> 00:20:03,770
out-of-the-box got Facebook and Google

00:20:02,030 --> 00:20:05,480
login and there are others you can turn

00:20:03,770 --> 00:20:06,920
on off as well but what I'm going to do

00:20:05,480 --> 00:20:08,690
I don't actually have an account yet

00:20:06,920 --> 00:20:10,760
because we only just created it so I'm

00:20:08,690 --> 00:20:13,690
going to go over to sign up and I'm

00:20:10,760 --> 00:20:13,690
going to create them again

00:20:21,120 --> 00:20:25,320
now the next steps this will only ever

00:20:23,460 --> 00:20:26,700
happen the first time you log in or if

00:20:25,320 --> 00:20:29,510
the permissions that the applications

00:20:26,700 --> 00:20:32,880
wants to get changes and in this case we

00:20:29,510 --> 00:20:36,090
know that the application running on

00:20:32,880 --> 00:20:37,650
port 3000 one's access to my profile if

00:20:36,090 --> 00:20:45,059
we just jump back to the code very

00:20:37,650 --> 00:20:47,070
quickly you can see here we wanted the

00:20:45,059 --> 00:20:48,180
scope to be open ID so this is like we

00:20:47,070 --> 00:20:50,400
want to know who the person is but also

00:20:48,180 --> 00:20:51,720
profile which is basically a request to

00:20:50,400 --> 00:20:54,059
get more information about the user

00:20:51,720 --> 00:20:57,150
things like the name and the photo and

00:20:54,059 --> 00:20:58,470
email addresses so it's it's just

00:20:57,150 --> 00:21:00,450
double-checking with me here and if

00:20:58,470 --> 00:21:01,920
you've ever logged in via Twitter or

00:21:00,450 --> 00:21:03,780
Facebook into any other application

00:21:01,920 --> 00:21:05,880
you'll have seen similar things this

00:21:03,780 --> 00:21:07,140
application wants access to post your

00:21:05,880 --> 00:21:08,790
wall for example so these are all

00:21:07,140 --> 00:21:10,110
different types of scopes at the moment

00:21:08,790 --> 00:21:11,610
the only scope we want is profile access

00:21:10,110 --> 00:21:13,740
I'm happy to allow that so I click on

00:21:11,610 --> 00:21:16,429
the tick button and this is now where it

00:21:13,740 --> 00:21:18,630
redirects back to port 3000 on look lost

00:21:16,429 --> 00:21:19,800
if you look very quickly you're probably

00:21:18,630 --> 00:21:21,540
noticed it happening in the address bar

00:21:19,800 --> 00:21:23,250
there and there's a code that comes

00:21:21,540 --> 00:21:25,830
through so that's the authentication the

00:21:23,250 --> 00:21:27,900
authorization code which the application

00:21:25,830 --> 00:21:30,270
then sends back to off zero in order to

00:21:27,900 --> 00:21:33,750
get the token out so now we have the

00:21:30,270 --> 00:21:36,750
token and we can see my name according

00:21:33,750 --> 00:21:37,440
to the application that the user account

00:21:36,750 --> 00:21:38,850
that I just created

00:21:37,440 --> 00:21:40,350
it's just Benedict right calm it's

00:21:38,850 --> 00:21:42,570
because I didn't provide any other kind

00:21:40,350 --> 00:21:44,670
of name so all zero assumes email his

00:21:42,570 --> 00:21:47,130
name it's gotten my photo from somewhere

00:21:44,670 --> 00:21:48,809
I don't know where our cheese from

00:21:47,130 --> 00:21:49,679
Gravatar there so I've got a Gravatar

00:21:48,809 --> 00:21:52,650
accountants pulled that out

00:21:49,679 --> 00:21:53,790
automatically for me and then here's the

00:21:52,650 --> 00:21:56,760
information so that's the information

00:21:53,790 --> 00:21:58,679
that came out of the author zero object

00:21:56,760 --> 00:21:59,929
when we had the user info so

00:21:58,679 --> 00:22:02,309
automatically we've got there a

00:21:59,929 --> 00:22:04,260
subversive subject of this where every

00:22:02,309 --> 00:22:06,059
time I log in using the same account

00:22:04,260 --> 00:22:06,900
that string will always be the same so

00:22:06,059 --> 00:22:09,360
that's what you can use in your

00:22:06,900 --> 00:22:11,910
application as an identifier for the

00:22:09,360 --> 00:22:14,850
user who is logged in got the nickname

00:22:11,910 --> 00:22:16,080
name picture and updated at and then

00:22:14,850 --> 00:22:17,730
down the bottom we have what's in the

00:22:16,080 --> 00:22:19,559
session information so this is

00:22:17,730 --> 00:22:20,660
potentially a little more interesting

00:22:19,559 --> 00:22:24,809
for us so we've got an access token

00:22:20,660 --> 00:22:28,950
we've got an ID token if we take this ID

00:22:24,809 --> 00:22:31,620
token copy that and place it into so JWT

00:22:28,950 --> 00:22:33,780
dot IO is a pretty useful tool for

00:22:31,620 --> 00:22:35,499
looking at JSON web tokens so I've just

00:22:33,780 --> 00:22:37,549
pasted that in there

00:22:35,499 --> 00:22:42,379
but it's invalid because I've got a

00:22:37,549 --> 00:22:44,049
little bit of yeah a little bit of extra

00:22:42,379 --> 00:22:49,759
text on the top here that I don't need

00:22:44,049 --> 00:22:51,080
oops too much so you can see now it's

00:22:49,759 --> 00:22:52,700
it's not pink anymore it's been

00:22:51,080 --> 00:22:53,809
validated and we've got bits of

00:22:52,700 --> 00:22:57,139
information there so we can see it's

00:22:53,809 --> 00:23:00,080
JSON web token using the RSA sha-256

00:22:57,139 --> 00:23:01,789
hashing algorithm and the information

00:23:00,080 --> 00:23:03,409
that came out that we saw in the

00:23:01,789 --> 00:23:04,849
previous web page this has all just been

00:23:03,409 --> 00:23:08,809
given to us for free automatically by

00:23:04,849 --> 00:23:11,509
auth0 as soon as we logged in and then

00:23:08,809 --> 00:23:13,580
we father signature the bottom now

00:23:11,509 --> 00:23:17,570
you'll notice at the moment that the the

00:23:13,580 --> 00:23:21,109
audience is essentially like a base64

00:23:17,570 --> 00:23:23,840
euro encoded type string it's it's not

00:23:21,109 --> 00:23:25,999
really very useful or usable and also if

00:23:23,840 --> 00:23:28,580
we just jump back to this page here the

00:23:25,999 --> 00:23:29,960
access token this is an opaque access

00:23:28,580 --> 00:23:31,700
services it's just a string it doesn't

00:23:29,960 --> 00:23:33,200
really tell us very much and because

00:23:31,700 --> 00:23:34,789
we're automatically just asking for user

00:23:33,200 --> 00:23:36,049
information as opposed to trying to

00:23:34,789 --> 00:23:38,599
connect to any other kind of databases

00:23:36,049 --> 00:23:45,679
it's not giving us more than we actually

00:23:38,599 --> 00:23:47,509
need so if we change this now we want to

00:23:45,679 --> 00:23:49,609
so the bar mentioned before that had an

00:23:47,509 --> 00:23:51,470
API that runs on a different port so we

00:23:49,609 --> 00:23:53,720
have if I can get the copy and paste

00:23:51,470 --> 00:23:56,570
work we have a new application that

00:23:53,720 --> 00:23:59,389
we're going to create in fact it's it's

00:23:56,570 --> 00:24:01,070
a API that we want to create so we jump

00:23:59,389 --> 00:24:03,440
over to the API section on the left here

00:24:01,070 --> 00:24:08,059
we've got the API tab I'm going to just

00:24:03,440 --> 00:24:09,590
create an API I'm gonna call it IPC and

00:24:08,059 --> 00:24:17,090
it's gonna be on for three thousand or

00:24:09,590 --> 00:24:19,820
one so if you here is that I was testing

00:24:17,090 --> 00:24:21,559
this demo before and I already have one

00:24:19,820 --> 00:24:24,700
that's on the same so you can't have the

00:24:21,559 --> 00:24:26,809
same identifier because the the

00:24:24,700 --> 00:24:28,429
identifier there is actually what what

00:24:26,809 --> 00:24:29,929
zero uses to work out which API are

00:24:28,429 --> 00:24:32,509
trying to authenticate to so you can't

00:24:29,929 --> 00:24:36,429
have two with the same URL so what we'll

00:24:32,509 --> 00:24:36,429
do instead is we'll just jump over to

00:24:40,390 --> 00:24:44,230
the API list here we already have the

00:24:43,029 --> 00:24:47,649
API so here's the one that I created

00:24:44,230 --> 00:24:49,570
before on port 3000 on one so let's just

00:24:47,649 --> 00:24:52,149
edit this one instead rather than going

00:24:49,570 --> 00:24:54,399
from scratch so the next thing you need

00:24:52,149 --> 00:24:56,409
to do once you've created an API is you

00:24:54,399 --> 00:24:58,210
need to make sure that so we have you

00:24:56,409 --> 00:25:00,130
had your your application and the

00:24:58,210 --> 00:25:02,080
identity provider communicating

00:25:00,130 --> 00:25:03,669
machine-to-machine so you need to allow

00:25:02,080 --> 00:25:05,710
that to happen so into the

00:25:03,669 --> 00:25:08,769
machine-to-machine applications we'll

00:25:05,710 --> 00:25:10,330
see that we already have okay so we've

00:25:08,769 --> 00:25:13,960
got the new client here we need to

00:25:10,330 --> 00:25:16,210
authorize this API to accept tokens from

00:25:13,960 --> 00:25:17,320
the IPC client that we just created the

00:25:16,210 --> 00:25:21,279
application that we're working on at the

00:25:17,320 --> 00:25:22,929
moment that's all we need to do so the

00:25:21,279 --> 00:25:28,049
next thing we need to do is edit our

00:25:22,929 --> 00:25:32,260
client to want to talk to port 3000 or 1

00:25:28,049 --> 00:25:33,700
and in order to do that we come in here

00:25:32,260 --> 00:25:41,889
so at the moment the audience is the

00:25:33,700 --> 00:25:43,330
user info here and all I've done is I've

00:25:41,889 --> 00:25:46,559
just changed that to say the audience is

00:25:43,330 --> 00:25:49,210
now the application on board 3000 or 1

00:25:46,559 --> 00:25:51,340
and then the final piece of the puzzle

00:25:49,210 --> 00:25:53,710
is to look at the application that's

00:25:51,340 --> 00:26:00,149
actually running on port 3000 or 1 and

00:25:53,710 --> 00:26:03,220
we're going to look at the index dot PHP

00:26:00,149 --> 00:26:05,350
so this API is basically going to take

00:26:03,220 --> 00:26:06,039
the access token was provided to us and

00:26:05,350 --> 00:26:07,809
tell us about it

00:26:06,039 --> 00:26:09,010
that's all it doesn't amount but

00:26:07,809 --> 00:26:10,899
obviously there's no access token it

00:26:09,010 --> 00:26:12,610
can't tell us anything about it and this

00:26:10,899 --> 00:26:16,240
is just to show that passing that token

00:26:12,610 --> 00:26:17,769
along can still be verified so the only

00:26:16,240 --> 00:26:19,360
thing we need to do down here is that

00:26:17,769 --> 00:26:21,870
client secret that we had for the

00:26:19,360 --> 00:26:25,570
application because it's a shared secret

00:26:21,870 --> 00:26:27,549
set up here if we go back to this

00:26:25,570 --> 00:26:30,600
application here this is the client

00:26:27,549 --> 00:26:30,600
secret that we want to copy in

00:26:37,390 --> 00:26:41,600
that should work now let's log out and

00:26:40,580 --> 00:26:48,230
log back in again because we need to

00:26:41,600 --> 00:26:49,970
generate a new token one of my least

00:26:48,230 --> 00:26:51,500
favorite parts about doing live demos is

00:26:49,970 --> 00:26:58,580
straining to see what's going on behind

00:26:51,500 --> 00:27:03,980
me so let's go to the top look at it log

00:26:58,580 --> 00:27:06,230
in again now this time we're being asked

00:27:03,980 --> 00:27:07,670
to authenticate again we wouldn't

00:27:06,230 --> 00:27:09,500
normally need to do this except the

00:27:07,670 --> 00:27:11,270
audience has changed so we're getting a

00:27:09,500 --> 00:27:12,650
different kind of token now so it's just

00:27:11,270 --> 00:27:15,980
verifying that I'm still happy to share

00:27:12,650 --> 00:27:17,690
my profile information which I am once

00:27:15,980 --> 00:27:18,770
it returns back and you'll notice I

00:27:17,690 --> 00:27:20,570
didn't have to provide my username

00:27:18,770 --> 00:27:22,490
password because all zeros got a cookie

00:27:20,570 --> 00:27:25,610
with me so I'm still logged in with all

00:27:22,490 --> 00:27:27,740
0 and is able to then automatically pass

00:27:25,610 --> 00:27:28,760
me through to the application so for all

00:27:27,740 --> 00:27:29,750
intents and purposes it looks very

00:27:28,760 --> 00:27:32,450
similar I don't know what I want to

00:27:29,750 --> 00:27:34,400
translate it to maybe you can

00:27:32,450 --> 00:27:36,740
automatically interpret JSON web tokens

00:27:34,400 --> 00:27:38,240
I'm not sure you'll notice the ID token

00:27:36,740 --> 00:27:40,100
here now it looks like a JSON web token

00:27:38,240 --> 00:27:42,890
fact stand here for convenience so

00:27:40,100 --> 00:27:44,570
before we had that 34 th character

00:27:42,890 --> 00:27:46,160
string vo fake string that was really

00:27:44,570 --> 00:27:47,570
wasn't of any use it was just something

00:27:46,160 --> 00:27:56,030
that allowed us to talk to other API is

00:27:47,570 --> 00:27:59,840
if we look at this in JSON web JWT dot

00:27:56,030 --> 00:28:02,450
io will now notice that it's no longer

00:27:59,840 --> 00:28:04,940
an identity token it's still a JSON web

00:28:02,450 --> 00:28:06,200
token using the same algorithm but we

00:28:04,940 --> 00:28:08,150
have some different information down

00:28:06,200 --> 00:28:10,130
here now so we've got the issuer at the

00:28:08,150 --> 00:28:12,610
top that's the old CRO account that we

00:28:10,130 --> 00:28:14,270
used got a subject which is the account

00:28:12,610 --> 00:28:16,850
identifier that we saw on the previous

00:28:14,270 --> 00:28:19,190
page and the audience so put localhost

00:28:16,850 --> 00:28:21,890
3001 is now allowed to use this

00:28:19,190 --> 00:28:23,300
information user info is added in there

00:28:21,890 --> 00:28:24,950
automatically because we wanted the

00:28:23,300 --> 00:28:27,170
profile information and then we've got

00:28:24,950 --> 00:28:30,710
issued at expiry and some other tokens

00:28:27,170 --> 00:28:37,540
and scope information so now if I use

00:28:30,710 --> 00:28:37,540
this - let's just jump over to postman

00:28:38,260 --> 00:28:45,830
so if we now make a request on one

00:28:43,210 --> 00:28:48,950
headers so I'm gonna make a request up

00:28:45,830 --> 00:28:50,480
here to pour 3001 index dot PHP and

00:28:48,950 --> 00:28:52,730
we're going to pass in access token has

00:28:50,480 --> 00:28:54,080
a header so normally what you do is

00:28:52,730 --> 00:28:55,640
you'd use the authorization header and

00:28:54,080 --> 00:28:56,960
pass in a bearer token but at the moment

00:28:55,640 --> 00:28:58,580
all we want to do is just really grab a

00:28:56,960 --> 00:29:02,320
token and process it and see what's

00:28:58,580 --> 00:29:05,480
going on so I'm going to paste that

00:29:02,320 --> 00:29:07,460
access token that we just received we're

00:29:05,480 --> 00:29:10,160
going to send that through and if I

00:29:07,460 --> 00:29:14,180
scroll down we should theoretically know

00:29:10,160 --> 00:29:17,000
cookie for me body oh yeah so this is

00:29:14,180 --> 00:29:19,480
now the API running on port 3/3 3000 o1

00:29:17,000 --> 00:29:22,790
which has been able to take the token

00:29:19,480 --> 00:29:24,410
verify that it's valid very fine as

00:29:22,790 --> 00:29:26,750
valid that's why you're always very

00:29:24,410 --> 00:29:31,940
firemen and then extract the information

00:29:26,750 --> 00:29:35,810
out of it and that is simply this code

00:29:31,940 --> 00:29:37,490
here so we get the JWT verifier we're

00:29:35,810 --> 00:29:39,500
also using a case handler just to store

00:29:37,490 --> 00:29:41,690
a bit of information and then we just

00:29:39,500 --> 00:29:43,400
say access token is verifying decode get

00:29:41,690 --> 00:29:46,130
the access token out of the header and

00:29:43,400 --> 00:29:49,280
then pre-internet so in two lines plus

00:29:46,130 --> 00:29:53,240
offender stuff your application or api

00:29:49,280 --> 00:29:57,340
can now get access information from the

00:29:53,240 --> 00:30:03,560
application that needs to access the API

00:29:57,340 --> 00:30:05,960
how are you for time 32 so the other

00:30:03,560 --> 00:30:08,450
steps that I was hoping to show is

00:30:05,960 --> 00:30:12,380
basically integrating with this with

00:30:08,450 --> 00:30:13,240
laravel which would show you something

00:30:12,380 --> 00:30:16,220
along these lines

00:30:13,240 --> 00:30:19,930
so we've got a public API on port

00:30:16,220 --> 00:30:21,920
running on port 3000 and to lost- again

00:30:19,930 --> 00:30:23,420
and if we send a request through to that

00:30:21,920 --> 00:30:25,790
we've got hello from a public endpoint

00:30:23,420 --> 00:30:29,090
and then with a private endpoint at the

00:30:25,790 --> 00:30:30,440
moment because the token is invalid it

00:30:29,090 --> 00:30:33,350
gives us wrong number of segments if we

00:30:30,440 --> 00:30:34,790
paste the token in there then by

00:30:33,350 --> 00:30:36,170
modifying about seven different files

00:30:34,790 --> 00:30:38,840
and I basically just followed the

00:30:36,170 --> 00:30:41,480
laravel instructions on the website I

00:30:38,840 --> 00:30:46,910
was able to then authenticate somebody

00:30:41,480 --> 00:30:48,440
through laravel so the key I hope that

00:30:46,910 --> 00:30:50,119
you can take away from this as again

00:30:48,440 --> 00:30:52,789
webinar is all 0 or

00:30:50,119 --> 00:30:54,529
another identity provider the amount of

00:30:52,789 --> 00:30:56,869
code that I had to write in order to get

00:30:54,529 --> 00:30:58,729
authentication working within those two

00:30:56,869 --> 00:31:01,549
API is there is very thin it's a very

00:30:58,729 --> 00:31:03,979
light touch so if you within your

00:31:01,549 --> 00:31:05,569
organization within your pet project

00:31:03,979 --> 00:31:07,969
side project whatever it is if you are

00:31:05,569 --> 00:31:09,559
able to do away with having to worry

00:31:07,969 --> 00:31:11,239
about any of the identity any of the

00:31:09,559 --> 00:31:13,789
login any of the password management

00:31:11,239 --> 00:31:16,189
two-factor authentication social logon

00:31:13,789 --> 00:31:17,719
Active Directory Integration whatever it

00:31:16,189 --> 00:31:18,949
is you're trying to do if you don't have

00:31:17,719 --> 00:31:21,769
to worry about any of that and you can

00:31:18,949 --> 00:31:23,089
just use a third-party system or host

00:31:21,769 --> 00:31:24,679
something like key cloak in your own

00:31:23,089 --> 00:31:28,429
environment but that's kind of almost

00:31:24,679 --> 00:31:30,799
self-managed it reduces the the overhead

00:31:28,429 --> 00:31:34,189
that you have within your team to work

00:31:30,799 --> 00:31:38,029
on other more exciting things you can in

00:31:34,189 --> 00:31:39,439
fact one of the the biggest benefits

00:31:38,029 --> 00:31:41,659
that I've ever heard of was Atlassian

00:31:39,439 --> 00:31:44,989
recently moved over to an identity

00:31:41,659 --> 00:31:47,419
provider and they managed to they had 22

00:31:44,989 --> 00:31:48,439
are things 22 or 13 members of staff who

00:31:47,419 --> 00:31:50,869
were working on their login system

00:31:48,439 --> 00:31:52,189
full-time and they all moved over to

00:31:50,869 --> 00:31:55,849
work on feature management and bug

00:31:52,189 --> 00:31:57,829
remediation so their business benefit to

00:31:55,849 --> 00:31:59,479
their customers was able to ramp up so

00:31:57,829 --> 00:32:01,669
much faster because they didn't have

00:31:59,479 --> 00:32:03,979
developers working on what was not one

00:32:01,669 --> 00:32:07,759
of their core requirements because they

00:32:03,979 --> 00:32:10,849
managed to get another company who it is

00:32:07,759 --> 00:32:12,829
their core requirement so I hope that's

00:32:10,849 --> 00:32:14,839
giving you a bit of insight into how you

00:32:12,829 --> 00:32:15,889
can not care about security so much make

00:32:14,839 --> 00:32:17,479
it somebody else's problem

00:32:15,889 --> 00:32:19,399
but if you are making of somebody else's

00:32:17,479 --> 00:32:22,329
problem make sure that somebody else

00:32:19,399 --> 00:32:22,329
actually cares I've had that problem

00:32:27,140 --> 00:32:36,080
so with that said we have - 29 seconds I

00:32:32,030 --> 00:32:37,160
believe - go - two minutes to go thank

00:32:36,080 --> 00:32:38,390
you for sticking with me for the extra

00:32:37,160 --> 00:32:39,560
two minutes I'm gonna be around for the

00:32:38,390 --> 00:32:41,540
whole lunch break if you want to come

00:32:39,560 --> 00:32:42,830
ask me questions I'll take questions now

00:32:41,540 --> 00:32:45,620
but I understand if your two stomachs

00:32:42,830 --> 00:32:49,130
are rumbling conference attending is a

00:32:45,620 --> 00:32:51,050
very hunger producing activity so if you

00:32:49,130 --> 00:32:52,520
do need to go please do thank you for

00:32:51,050 --> 00:32:54,340
your time and if you have any questions

00:32:52,520 --> 00:32:57,530
please come and chat to me thanks

00:32:54,340 --> 00:33:11,270
[Applause]

00:32:57,530 --> 00:33:14,650
[Music]

00:33:11,270 --> 00:33:14,650

YouTube URL: https://www.youtube.com/watch?v=y14qdSJB-u8


