Title: Orchestrate your Docker Dev-Env | Sebastian Thoss
Publication date: 2020-03-25
Playlist: International PHP Cnference 2019
Description: 
	Do you have several repositories which use Docker, like us? Now they need to talk to each other on your local computer to be able to develop features which live in more than one repository. Today, I want to show you how we solved the problem. We orchestrate our Docker Dev-Env just with simple shell scripts, the support of a proxy image and some simple rules for every project. Let me show you how easy it is to build a Docker Dev-Env and how fast it will be to introduce additional projects.

Speaker: Sebastian Thoss (better ventures group GmbH) | https://phpconference.com/speaker/sebastian-thoss/ | https://twitter.com/dj_thossi

🤗 Come, join us at the next International PHP Conference | https://phpconference.com/
👍 Like us on Facebook | https://www.facebook.com/ipc.germany/
👉 Follow us on Twitter | https://twitter.com/phpconference
Captions: 
	00:00:00,070 --> 00:00:10,080
[Music]

00:00:07,250 --> 00:00:12,900
first of all this is a complete new

00:00:10,080 --> 00:00:14,580
slides I hope everything works out as a

00:00:12,900 --> 00:00:17,609
lot of animations in there hopefully

00:00:14,580 --> 00:00:19,740
that works so it's the first time I try

00:00:17,609 --> 00:00:23,220
this so sorry if something goes wrong

00:00:19,740 --> 00:00:26,550
you will get that SOI did but let's

00:00:23,220 --> 00:00:28,439
start let's start first Who am I

00:00:26,550 --> 00:00:31,050
I'm Sebastian I'm the founder of

00:00:28,439 --> 00:00:32,969
semester and I'm working part-time

00:00:31,050 --> 00:00:36,750
still as the chapter leading beckoned

00:00:32,969 --> 00:00:39,870
for the better ventures better ventures

00:00:36,750 --> 00:00:42,930
bit more known my Pedic company khatma

00:00:39,870 --> 00:00:46,219
Hawaii this is the main brand of better

00:00:42,930 --> 00:00:48,570
ventures we are working simply on

00:00:46,219 --> 00:00:50,520
everything which is print products and

00:00:48,570 --> 00:00:52,760
related to emotional events especially

00:00:50,520 --> 00:00:55,379
now Christmas season is one of our peak

00:00:52,760 --> 00:00:58,199
where we have a lot of like Christmas

00:00:55,379 --> 00:01:02,039
cards and already starting wedding

00:00:58,199 --> 00:01:04,890
invitations but enough about that one

00:01:02,039 --> 00:01:07,770
let's come to the topic what do we want

00:01:04,890 --> 00:01:08,909
to check in today let's first have a

00:01:07,770 --> 00:01:12,510
look on the problem

00:01:08,909 --> 00:01:16,049
denry I show you our solution explain a

00:01:12,510 --> 00:01:18,119
few things on our rules then I show you

00:01:16,049 --> 00:01:20,939
how to add even more projects into a

00:01:18,119 --> 00:01:23,220
andhaka defense and if we have time at

00:01:20,939 --> 00:01:26,009
the end let's try if you get some life

00:01:23,220 --> 00:01:27,540
coating done I have my own internet

00:01:26,009 --> 00:01:30,450
connection so that shouldn't be an issue

00:01:27,540 --> 00:01:36,150
today but let's let's start with the

00:01:30,450 --> 00:01:38,909
problem so the problem is I want to

00:01:36,150 --> 00:01:41,130
explain the problem on an example and

00:01:38,909 --> 00:01:44,159
the example is you want to unboard a new

00:01:41,130 --> 00:01:46,590
employee the solution we want to show I

00:01:44,159 --> 00:01:49,740
want to show you today is mainly the

00:01:46,590 --> 00:01:52,770
solution we found we've note by today

00:01:49,740 --> 00:01:55,079
that there are other solutions if you

00:01:52,770 --> 00:01:56,729
have other solutions found for what I

00:01:55,079 --> 00:01:58,500
show you today please approach me

00:01:56,729 --> 00:02:00,240
afterwards and let me know how your

00:01:58,500 --> 00:02:03,149
solution looks like because I'm curious

00:02:00,240 --> 00:02:06,180
to see more I'm curious to know how

00:02:03,149 --> 00:02:09,420
others solve the same problem but let's

00:02:06,180 --> 00:02:11,569
start so imagine a company has several

00:02:09,420 --> 00:02:13,189
applications

00:02:11,569 --> 00:02:15,200
Quan drops some elephants running

00:02:13,189 --> 00:02:17,719
somewhere they usually need databases

00:02:15,200 --> 00:02:19,400
and storages they have some

00:02:17,719 --> 00:02:22,060
configurations they have some deployment

00:02:19,400 --> 00:02:26,329
scripts and it might have emailing and

00:02:22,060 --> 00:02:28,310
and business intelligence tools all of

00:02:26,329 --> 00:02:32,079
this is running somewhere in the

00:02:28,310 --> 00:02:35,629
internet maybe in cloud maybe on-premise

00:02:32,079 --> 00:02:40,069
but developers tends simply to work

00:02:35,629 --> 00:02:42,680
locally so how it's all the time

00:02:40,069 --> 00:02:45,409
difficult to get different PHP versions

00:02:42,680 --> 00:02:47,900
different kind of applications running

00:02:45,409 --> 00:02:49,699
on your local machine so there was in

00:02:47,900 --> 00:02:52,489
the last couple of years something

00:02:49,699 --> 00:02:53,750
really really tiny feature came around

00:02:52,489 --> 00:02:57,469
the corner you might have heard it's

00:02:53,750 --> 00:03:01,280
called docker and that's that helped a

00:02:57,469 --> 00:03:04,549
lot because you can now properly version

00:03:01,280 --> 00:03:07,370
properly encapsulate applications in our

00:03:04,549 --> 00:03:09,439
own environments and run them locally on

00:03:07,370 --> 00:03:12,769
your machine but it's not just one

00:03:09,439 --> 00:03:16,849
developer used to work locally but

00:03:12,769 --> 00:03:19,389
several developers and imagine you get

00:03:16,849 --> 00:03:22,099
another you have an additional developer

00:03:19,389 --> 00:03:26,599
and that usually takes time to get them

00:03:22,099 --> 00:03:28,819
on speed so and let's have a look on how

00:03:26,599 --> 00:03:31,579
how the share is in the first days of a

00:03:28,819 --> 00:03:33,349
new developer in a team so the

00:03:31,579 --> 00:03:37,280
developers started simply with paperwork

00:03:33,349 --> 00:03:40,220
and learning about the company then we

00:03:37,280 --> 00:03:42,019
add up the time for configuring a

00:03:40,220 --> 00:03:44,209
computer and setting up the work desk

00:03:42,019 --> 00:03:48,949
like is it one screen or three screens

00:03:44,209 --> 00:03:51,519
or what's the stake and then we have 60%

00:03:48,949 --> 00:03:54,680
of the time is setup and debugging

00:03:51,519 --> 00:03:56,629
because usually nothing works if you

00:03:54,680 --> 00:03:58,579
start on a new machine if you start if

00:03:56,629 --> 00:04:01,069
you if you clone you get the information

00:03:58,579 --> 00:04:03,079
which repository you should clone for

00:04:01,069 --> 00:04:05,269
getting this task done and that's

00:04:03,079 --> 00:04:07,729
sometimes if it's if this task is the

00:04:05,269 --> 00:04:09,319
cross several repositories you need

00:04:07,729 --> 00:04:10,879
several repositories they somehow need

00:04:09,319 --> 00:04:13,659
to work together then you need to know

00:04:10,879 --> 00:04:15,469
ok there I have this and Dysport mapping

00:04:13,659 --> 00:04:17,599
it's a lot of debugging

00:04:15,469 --> 00:04:21,769
because this person doesn't know the

00:04:17,599 --> 00:04:23,719
tricks yet so we end up with a value

00:04:21,769 --> 00:04:27,310
addition in off the first couple of days

00:04:23,719 --> 00:04:27,310
of simply just 5%

00:04:27,790 --> 00:04:33,590
it increases over time sure but we

00:04:30,979 --> 00:04:37,100
usually say in the first three months of

00:04:33,590 --> 00:04:39,020
an of a developer there is no there is

00:04:37,100 --> 00:04:41,449
no proper value addition because the

00:04:39,020 --> 00:04:44,210
value this person adds he needs in

00:04:41,449 --> 00:04:47,720
support from other developers so we said

00:04:44,210 --> 00:04:52,009
okay how can we how can we get this

00:04:47,720 --> 00:04:55,610
problem optimized how can we get these

00:04:52,009 --> 00:04:58,789
people up to speed earlier and we needed

00:04:55,610 --> 00:05:00,380
a simple and fast and quick solution so

00:04:58,789 --> 00:05:03,289
and at this time we simply said it

00:05:00,380 --> 00:05:06,979
looked what do we have there so we

00:05:03,289 --> 00:05:10,100
simply have this have this running in

00:05:06,979 --> 00:05:14,870
the cloud so we moved and we have these

00:05:10,100 --> 00:05:17,120
kind of repository setups so on a

00:05:14,870 --> 00:05:20,169
computer on a local developers machine

00:05:17,120 --> 00:05:23,030
on a new machine we have web front end

00:05:20,169 --> 00:05:26,360
we have the transaction and mailings and

00:05:23,030 --> 00:05:29,599
we have somehow a web back-end or bi or

00:05:26,360 --> 00:05:32,750
whatever but the problem is they all

00:05:29,599 --> 00:05:35,380
share the same port because he used you

00:05:32,750 --> 00:05:38,690
you usually work locally with local host

00:05:35,380 --> 00:05:41,630
so you can either have the same ports or

00:05:38,690 --> 00:05:45,849
somehow get the local host and then have

00:05:41,630 --> 00:05:50,360
different port mapping but how are dad

00:05:45,849 --> 00:05:53,030
if they need to work together local host

00:05:50,360 --> 00:05:54,590
pointing to port 81 from one docker

00:05:53,030 --> 00:05:57,740
container to another docker container

00:05:54,590 --> 00:06:01,970
that doesn't work so we have a problem

00:05:57,740 --> 00:06:04,520
there so in the end we identified these

00:06:01,970 --> 00:06:08,000
estimating problems so we have the local

00:06:04,520 --> 00:06:11,720
host you are each project has to using

00:06:08,000 --> 00:06:14,240
local host each flow you repository uses

00:06:11,720 --> 00:06:17,449
the local ports of the machine and has

00:06:14,240 --> 00:06:19,370
own docker compose files so the own

00:06:17,449 --> 00:06:23,090
docker compose files is an hour it is an

00:06:19,370 --> 00:06:26,150
hour with our research even a benefit

00:06:23,090 --> 00:06:28,760
because the knowledge should stay in the

00:06:26,150 --> 00:06:31,490
in the repositories so of how to run

00:06:28,760 --> 00:06:36,300
that so what can we do there so we

00:06:31,490 --> 00:06:40,110
defined that we need a new

00:06:36,300 --> 00:06:42,539
ripped a new script box so this is a new

00:06:40,110 --> 00:06:45,990
repository I call this now dr. dev

00:06:42,539 --> 00:06:51,240
scripts we get to that point later as

00:06:45,990 --> 00:06:55,110
well and this git repository doesn't

00:06:51,240 --> 00:06:59,849
know about the this how to build each

00:06:55,110 --> 00:07:02,940
project what it does know is how to

00:06:59,849 --> 00:07:04,680
build a docker compose file how to run

00:07:02,940 --> 00:07:08,940
based on a docker compose file how to

00:07:04,680 --> 00:07:11,250
stop it and with this small list here it

00:07:08,940 --> 00:07:16,440
knows which kind of repositories it

00:07:11,250 --> 00:07:20,190
needs so when we run the build or the

00:07:16,440 --> 00:07:23,159
install script it simply will install

00:07:20,190 --> 00:07:26,520
these repositories which are configured

00:07:23,159 --> 00:07:30,479
into this system and then you simply can

00:07:26,520 --> 00:07:34,620
run that so what's the benefit of this

00:07:30,479 --> 00:07:36,719
we have already the for a new developer

00:07:34,620 --> 00:07:39,780
with a simple dock with the simple shell

00:07:36,719 --> 00:07:41,490
scripts all the positives available so

00:07:39,780 --> 00:07:43,830
the the developer only need the new

00:07:41,490 --> 00:07:46,550
developer only needs one git repository

00:07:43,830 --> 00:07:49,860
for the beginning and gets all projects

00:07:46,550 --> 00:07:51,270
so that's the benefit but we still have

00:07:49,860 --> 00:07:54,180
this problem that they can't talk

00:07:51,270 --> 00:07:56,310
properly so how did we say that how did

00:07:54,180 --> 00:08:00,719
we solve this one we saw if this one

00:07:56,310 --> 00:08:03,050
simply was the reverse proxy that's who

00:08:00,719 --> 00:08:05,729
knows what a reverse proxy for Dockers

00:08:03,050 --> 00:08:08,759
one two three four five okay good that I

00:08:05,729 --> 00:08:10,289
got the slides was dead just sure it was

00:08:08,759 --> 00:08:12,360
the reverse proxy you don't have these

00:08:10,289 --> 00:08:13,919
problems anymore of that that they can

00:08:12,360 --> 00:08:17,310
talk to each other that they use the

00:08:13,919 --> 00:08:20,190
same ports on the local machine but that

00:08:17,310 --> 00:08:23,250
will reverse proxy is simply or there

00:08:20,190 --> 00:08:26,039
are two reverse proxies we use for

00:08:23,250 --> 00:08:30,180
several kind of docker defense there's

00:08:26,039 --> 00:08:33,329
one from from Jason Wilder that's for a

00:08:30,180 --> 00:08:36,870
simple version yeah if you have simple

00:08:33,329 --> 00:08:41,010
projects which are just talking via HTTP

00:08:36,870 --> 00:08:43,520
together that is then you can use the

00:08:41,010 --> 00:08:46,140
Jason Wilder and it's even providing

00:08:43,520 --> 00:08:50,250
with the link I have there it even

00:08:46,140 --> 00:08:51,780
provides HTTP and those already in there

00:08:50,250 --> 00:08:54,060
you can use it's a bit bigger it's a

00:08:51,780 --> 00:08:57,090
tiny bit more complex to to get the

00:08:54,060 --> 00:08:59,370
initial configuration done but that even

00:08:57,090 --> 00:09:00,780
gives you opportunities to talk from

00:08:59,370 --> 00:09:04,310
docker container to docker container

00:09:00,780 --> 00:09:09,210
directly so based on based on host names

00:09:04,310 --> 00:09:11,490
and in the example I show you later we

00:09:09,210 --> 00:09:14,430
use the the J's and Wilder version

00:09:11,490 --> 00:09:17,370
because it's a simple example and that's

00:09:14,430 --> 00:09:20,190
even configured but traffic has the

00:09:17,370 --> 00:09:25,740
better graphics for us so to explain

00:09:20,190 --> 00:09:30,570
shortly again what what a reverse proxy

00:09:25,740 --> 00:09:32,670
is the reverse proxy is simply an daemon

00:09:30,570 --> 00:09:36,090
a kind of an application which is

00:09:32,670 --> 00:09:40,620
monitoring the docker daemon and knows

00:09:36,090 --> 00:09:42,720
which kind of of applications are

00:09:40,620 --> 00:09:44,640
running on docker so it can run as many

00:09:42,720 --> 00:09:48,660
applications in there as your hardware

00:09:44,640 --> 00:09:51,210
can can handle and the daemon and the

00:09:48,660 --> 00:09:54,660
traffic in front of it or the reverse

00:09:51,210 --> 00:09:58,350
proxy in front of it is checking what is

00:09:54,660 --> 00:10:02,040
there based on configurations it's even

00:09:58,350 --> 00:10:05,760
getting domain names and then you simply

00:10:02,040 --> 00:10:09,120
can forward domain names real host names

00:10:05,760 --> 00:10:11,430
to this traffic and to the reverse proxy

00:10:09,120 --> 00:10:13,440
and the reverse proxy is then handling

00:10:11,430 --> 00:10:15,570
everything internally Andres traffic

00:10:13,440 --> 00:10:17,610
like even stuff like load balancing is

00:10:15,570 --> 00:10:20,550
possible so if you want to test

00:10:17,610 --> 00:10:22,410
something with load balancing you can

00:10:20,550 --> 00:10:25,320
use that traffic is even there for you

00:10:22,410 --> 00:10:28,500
which can even be used in life

00:10:25,320 --> 00:10:35,780
environments so it's it's has quite a

00:10:28,500 --> 00:10:39,540
community I didn't expect that so to

00:10:35,780 --> 00:10:41,580
even like in a traffic and as I

00:10:39,540 --> 00:10:45,089
mentioned before the J's viola example

00:10:41,580 --> 00:10:47,430
has HTTPS for for the JSON Wilder

00:10:45,089 --> 00:10:51,200
example you need more than just that

00:10:47,430 --> 00:10:53,970
ng reverse proxy from from Jason Wahler

00:10:51,200 --> 00:10:56,839
but as well there is let's encrypt

00:10:53,970 --> 00:10:59,400
companion and if your machine is

00:10:56,839 --> 00:11:01,050
publicly available and these domains are

00:10:59,400 --> 00:11:01,930
publicly configured already to this

00:11:01,050 --> 00:11:04,779
machine

00:11:01,930 --> 00:11:07,390
then you could even set up a GPS so we

00:11:04,779 --> 00:11:09,250
have forex we don't use it in a

00:11:07,390 --> 00:11:10,990
production environment but we have for

00:11:09,250 --> 00:11:13,480
example our testing environments where

00:11:10,990 --> 00:11:16,390
we have eh GPS which are which are

00:11:13,480 --> 00:11:21,070
available from the outside if you know

00:11:16,390 --> 00:11:24,930
the URL they are even supported with

00:11:21,070 --> 00:11:28,450
still let's encrypt and even with the

00:11:24,930 --> 00:11:30,730
short lifetime of these SSL certificates

00:11:28,450 --> 00:11:32,620
it recreates the certificate on

00:11:30,730 --> 00:11:35,350
completely on its own so nothing to

00:11:32,620 --> 00:11:39,630
worry about nothing to care about it

00:11:35,350 --> 00:11:39,630
simply works if it's if it's configured

00:11:39,660 --> 00:11:46,149
good but let's come back to the system

00:11:44,380 --> 00:11:49,750
and let's have a look what changes we

00:11:46,149 --> 00:11:53,529
need so on the first change is we need

00:11:49,750 --> 00:11:57,760
to train we need to take off from these

00:11:53,529 --> 00:12:01,660
projects the port mapping to port 80 and

00:11:57,760 --> 00:12:05,250
port 4 3 3 now 4 4 3 sorry des is a

00:12:01,660 --> 00:12:08,459
necessary part of a have to stay up here

00:12:05,250 --> 00:12:11,050
they are needed for a reverse proxy

00:12:08,459 --> 00:12:15,250
everything else should simply expose

00:12:11,050 --> 00:12:20,020
port 80 what you configure but should

00:12:15,250 --> 00:12:22,290
not use it what we did for example

00:12:20,020 --> 00:12:24,370
especially for databases and development

00:12:22,290 --> 00:12:26,589
sometimes you simply want to have a look

00:12:24,370 --> 00:12:29,709
into the into the database you can

00:12:26,589 --> 00:12:34,300
configure that in two ways you can

00:12:29,709 --> 00:12:39,000
either use like logging into the docker

00:12:34,300 --> 00:12:42,040
container and then we had a we had a

00:12:39,000 --> 00:12:45,130
host name and then simply connect there

00:12:42,040 --> 00:12:47,650
to the database or what we do we have a

00:12:45,130 --> 00:12:49,630
simple list which is part of this

00:12:47,650 --> 00:12:51,940
repository of the docker def and for the

00:12:49,630 --> 00:12:54,430
docker def scripts there is simply a

00:12:51,940 --> 00:12:57,760
list in there which repository owns

00:12:54,430 --> 00:13:01,660
which port which database port so we can

00:12:57,760 --> 00:13:03,220
still run them next to each other they

00:13:01,660 --> 00:13:05,529
are not interfering with each other it's

00:13:03,220 --> 00:13:10,630
just simply that project has all the

00:13:05,529 --> 00:13:13,510
time 3 306 that oh 7 that Oh 8 so and

00:13:10,630 --> 00:13:15,379
that's fixed this is configured once and

00:13:13,510 --> 00:13:18,639
if you need if you want to introduce an

00:13:15,379 --> 00:13:23,959
project you simply add this to the list

00:13:18,639 --> 00:13:25,759
so that's one but to run all of this mr.

00:13:23,959 --> 00:13:29,299
reverse proxy on your local machine you

00:13:25,759 --> 00:13:30,949
need somehow host names so in local

00:13:29,299 --> 00:13:36,409
computer usually doesn't support host

00:13:30,949 --> 00:13:38,720
names out of the box but there is a I

00:13:36,409 --> 00:13:40,879
guess everyone knows there is to file it

00:13:38,720 --> 00:13:44,049
easy hosts well you can simply match

00:13:40,879 --> 00:13:46,909
host names through your local host so

00:13:44,049 --> 00:13:49,639
therefore we introduced another kind of

00:13:46,909 --> 00:13:52,759
small script and small list into the

00:13:49,639 --> 00:13:55,849
into the dev script and if you run the

00:13:52,759 --> 00:13:58,729
install as aged it will even do this for

00:13:55,849 --> 00:14:00,470
you so if the domain is configured it

00:13:58,729 --> 00:14:02,959
will even run it will even introduce

00:14:00,470 --> 00:14:05,119
this domain in your etc' host file and

00:14:02,959 --> 00:14:08,179
will mark it with the information this

00:14:05,119 --> 00:14:10,249
is like dr. dev scripts will add a

00:14:08,179 --> 00:14:12,799
comment at the end so you know if you

00:14:10,249 --> 00:14:16,220
want to add some stage you want to clean

00:14:12,799 --> 00:14:18,829
up DT seahorse's file that's that's

00:14:16,220 --> 00:14:21,019
coming from this environment you can

00:14:18,829 --> 00:14:22,909
delete this so what's the next install

00:14:21,019 --> 00:14:25,129
it will take care of this so all of this

00:14:22,909 --> 00:14:29,720
is even that is introduced in there in

00:14:25,129 --> 00:14:32,569
the docker dev scripts one more thing we

00:14:29,720 --> 00:14:37,100
need to change is or what we need to add

00:14:32,569 --> 00:14:41,689
is to configure two node or to notify

00:14:37,100 --> 00:14:44,569
the reverse proxy under which name this

00:14:41,689 --> 00:14:47,539
application is running and under which

00:14:44,569 --> 00:14:50,509
host name and application is is visible

00:14:47,539 --> 00:14:52,189
we need to add a few really few

00:14:50,509 --> 00:14:55,489
configurations to the docker compose

00:14:52,189 --> 00:14:57,169
file for us we e median T Phi to not put

00:14:55,489 --> 00:14:59,689
them to the docker compose file directly

00:14:57,169 --> 00:15:02,929
but to put it to a docker compose

00:14:59,689 --> 00:15:05,959
override so the docker compose stays

00:15:02,929 --> 00:15:08,059
clean to say okey the docker compose

00:15:05,959 --> 00:15:09,919
file only knows how to run what kind of

00:15:08,059 --> 00:15:13,399
environment variables are necessary to

00:15:09,919 --> 00:15:15,409
run the project singly and if you want

00:15:13,399 --> 00:15:17,569
to run this project not just singly but

00:15:15,409 --> 00:15:21,079
in in a decorative scripts environment

00:15:17,569 --> 00:15:23,149
or together with others then in the

00:15:21,079 --> 00:15:27,019
docker compose overwrite file you find

00:15:23,149 --> 00:15:28,790
the configurations you need and docker

00:15:27,019 --> 00:15:30,680
compose by default looks for

00:15:28,790 --> 00:15:35,320
filed if it's there it takes it if not

00:15:30,680 --> 00:15:38,690
it takes a default one but as promised

00:15:35,320 --> 00:15:40,760
there's the barcode don't vary don't you

00:15:38,690 --> 00:15:45,130
don't have to rush it stays for a couple

00:15:40,760 --> 00:15:52,030
of slides there's the barcode I put a

00:15:45,130 --> 00:15:55,790
extracted this whole project into into

00:15:52,030 --> 00:15:57,680
an own git repository repository in the

00:15:55,790 --> 00:16:00,320
end it's actually for git repositories

00:15:57,680 --> 00:16:03,890
because it's a full example with two

00:16:00,320 --> 00:16:05,540
applications to build and and if you

00:16:03,890 --> 00:16:08,450
look into this one it will only build

00:16:05,540 --> 00:16:10,730
actually was one real application in

00:16:08,450 --> 00:16:13,400
there because there is a branch for the

00:16:10,730 --> 00:16:15,350
second one so you can see actually on

00:16:13,400 --> 00:16:17,150
you can do a diff between the two

00:16:15,350 --> 00:16:20,120
branches to see what do I actually have

00:16:17,150 --> 00:16:23,720
to do in order all of this is pretty new

00:16:20,120 --> 00:16:25,280
so sorry the readme is X exists but in

00:16:23,720 --> 00:16:28,610
the readme you'll find simply just

00:16:25,280 --> 00:16:31,070
headlines so this is an open project so

00:16:28,610 --> 00:16:34,480
if and in there I'm not I'm a PHP

00:16:31,070 --> 00:16:38,720
developer as to most of you I guess and

00:16:34,480 --> 00:16:41,150
I'm not the best shade scripter in the

00:16:38,720 --> 00:16:43,930
world so I never learned share scripting

00:16:41,150 --> 00:16:45,890
this is simply okay try try endeavor or

00:16:43,930 --> 00:16:48,770
everything you find in there if you see

00:16:45,890 --> 00:16:51,380
bigger gaps if you see any shitty code

00:16:48,770 --> 00:16:53,750
in there I'm happy to get support on

00:16:51,380 --> 00:16:57,350
that one as well because this is simply

00:16:53,750 --> 00:16:59,720
it works it works now for three years so

00:16:57,350 --> 00:17:01,640
it works across several environments we

00:16:59,720 --> 00:17:04,130
check that it works on Linux if we check

00:17:01,640 --> 00:17:08,410
that it works on on Mac we avoided

00:17:04,130 --> 00:17:12,110
windows sorry because that no comment

00:17:08,410 --> 00:17:14,330
but it works on both environments we

00:17:12,110 --> 00:17:16,400
check that there is still the usual

00:17:14,330 --> 00:17:19,540
fight between Linux and Mac but that

00:17:16,400 --> 00:17:21,740
this project related that you your IDs

00:17:19,540 --> 00:17:23,090
so that you have some issues with you

00:17:21,740 --> 00:17:26,180
you IDs there you have some issues with

00:17:23,090 --> 00:17:29,150
that one but let's have a look what kind

00:17:26,180 --> 00:17:31,670
of features we have so there is because

00:17:29,150 --> 00:17:34,940
it's not just what we what I just showed

00:17:31,670 --> 00:17:37,490
you like the install build up stop down

00:17:34,940 --> 00:17:39,680
all of these is everything is there and

00:17:37,490 --> 00:17:41,000
these are simple share scripts which is

00:17:39,680 --> 00:17:42,550
which are nothing else doing then

00:17:41,000 --> 00:17:45,400
checking

00:17:42,550 --> 00:17:50,650
except the install checking if your

00:17:45,400 --> 00:17:52,600
environment if our goals are select it

00:17:50,650 --> 00:17:54,850
goes through the list of projects which

00:17:52,600 --> 00:17:56,830
should be built checks if they are there

00:17:54,850 --> 00:17:58,900
if they are there and they have a docker

00:17:56,830 --> 00:18:01,750
compose file then it runs to build up

00:17:58,900 --> 00:18:03,960
stop or down command you can overwrite

00:18:01,750 --> 00:18:07,150
them pretty simple I will show you later

00:18:03,960 --> 00:18:09,520
we have in the install we have as

00:18:07,150 --> 00:18:11,080
mentioned before setting up cloning

00:18:09,520 --> 00:18:17,650
repositories

00:18:11,080 --> 00:18:22,270
on top we have is setting up the domains

00:18:17,650 --> 00:18:24,460
in your htc hosts file all of this is in

00:18:22,270 --> 00:18:27,790
there as well but on top we have some

00:18:24,460 --> 00:18:30,700
backup and restore features because what

00:18:27,790 --> 00:18:32,860
I use used to do is okay I messed up

00:18:30,700 --> 00:18:34,810
this project including my including my

00:18:32,860 --> 00:18:36,790
my git commits and everything is messed

00:18:34,810 --> 00:18:40,750
up I simply want to delete this one

00:18:36,790 --> 00:18:42,880
project so this one environment not the

00:18:40,750 --> 00:18:45,730
whole dr. dev scripts but the web

00:18:42,880 --> 00:18:47,500
front-end for example and I want to and

00:18:45,730 --> 00:18:49,750
I can simply run the install this edge

00:18:47,500 --> 00:18:51,930
script and it will pull it again so I'd

00:18:49,750 --> 00:18:56,770
be cloning again it was set it up again

00:18:51,930 --> 00:18:59,910
but then I realized for them I forgot a

00:18:56,770 --> 00:19:04,630
few things to backup first first the

00:18:59,910 --> 00:19:06,460
idea folder so we used to have the idea

00:19:04,630 --> 00:19:07,390
folder this is the configuration folder

00:19:06,460 --> 00:19:10,990
for phpstorm

00:19:07,390 --> 00:19:12,940
we love to have them in their project so

00:19:10,990 --> 00:19:14,200
but in there is usually like

00:19:12,940 --> 00:19:17,640
configuration for the database

00:19:14,200 --> 00:19:21,700
configuration to whatever remote hosts

00:19:17,640 --> 00:19:25,630
configuration for which for specific

00:19:21,700 --> 00:19:28,480
settings for the project all of this is

00:19:25,630 --> 00:19:30,850
then gone so we set our okay let's back

00:19:28,480 --> 00:19:33,640
it up so let's have a backup and restore

00:19:30,850 --> 00:19:36,010
feature so if if for this project the

00:19:33,640 --> 00:19:38,520
witch gets installed an idea folder is

00:19:36,010 --> 00:19:41,520
existing already in the backup folder

00:19:38,520 --> 00:19:43,990
then it will restore it so you simply

00:19:41,520 --> 00:19:46,690
restart your phpstorm on that project

00:19:43,990 --> 00:19:48,790
and everything works as as usual but

00:19:46,690 --> 00:19:51,490
it's not just the idea folder it's as

00:19:48,790 --> 00:19:53,340
well the dot n file and it's as well the

00:19:51,490 --> 00:19:55,540
docker compose over right down there

00:19:53,340 --> 00:19:57,370
because there is usual

00:19:55,540 --> 00:19:59,980
these are usual in our environments are

00:19:57,370 --> 00:20:04,990
not versioned so we have them in negate

00:19:59,980 --> 00:20:08,140
ignore fire and there we solve that by

00:20:04,990 --> 00:20:10,240
simply backing it up and restoring and

00:20:08,140 --> 00:20:12,640
that usually works on the backup usually

00:20:10,240 --> 00:20:14,350
works on any kind of script like at the

00:20:12,640 --> 00:20:16,960
end of any kind of script if it's up

00:20:14,350 --> 00:20:20,500
stop down build these folders are

00:20:16,960 --> 00:20:22,210
getting backed up and on the install it

00:20:20,500 --> 00:20:27,160
checks first do I have something to

00:20:22,210 --> 00:20:32,680
restore or do I take the disk file which

00:20:27,160 --> 00:20:34,990
is usually version in the project good

00:20:32,680 --> 00:20:36,760
let's have a look on the folder

00:20:34,990 --> 00:20:41,020
structure folder structure is pretty

00:20:36,760 --> 00:20:43,390
simple as well we have the apps so what

00:20:41,020 --> 00:20:45,970
should be in mail the applications so

00:20:43,390 --> 00:20:49,000
that's where the the chase scripts will

00:20:45,970 --> 00:20:51,520
clone all the repositories into we have

00:20:49,000 --> 00:20:52,840
the environments it's a bit more strange

00:20:51,520 --> 00:20:55,570
name because that's the backup folder

00:20:52,840 --> 00:20:58,540
that's where all the configurations and

00:20:55,570 --> 00:21:00,340
all of the stuff gets backed up to and

00:20:58,540 --> 00:21:03,850
we have a scripts folder this is pretty

00:21:00,340 --> 00:21:05,950
much the place where we have some some

00:21:03,850 --> 00:21:08,320
internal scripts like how to how to

00:21:05,950 --> 00:21:11,080
backup the idea folder how to restore it

00:21:08,320 --> 00:21:14,650
all of this lives in there in there we

00:21:11,080 --> 00:21:15,940
have two default folder nets where all

00:21:14,650 --> 00:21:18,910
the default scripts are in there because

00:21:15,940 --> 00:21:21,040
you can put next to the default folder

00:21:18,910 --> 00:21:23,230
simply and with the same name as your

00:21:21,040 --> 00:21:25,690
application another folder and then

00:21:23,230 --> 00:21:27,490
introduce own app scripts or own build

00:21:25,690 --> 00:21:30,310
scripts if you have if you need to

00:21:27,490 --> 00:21:33,490
overwrite or the initial script so you

00:21:30,310 --> 00:21:38,290
can setup your own scripts there we have

00:21:33,490 --> 00:21:40,180
two domains txt that's pretty much the

00:21:38,290 --> 00:21:42,130
file which is needed where you have to

00:21:40,180 --> 00:21:44,610
all the domains in there which are which

00:21:42,130 --> 00:21:47,980
should be added to the etc' host file

00:21:44,610 --> 00:21:50,350
the project's SH in there is pretty much

00:21:47,980 --> 00:21:55,180
the list of repositories you want to

00:21:50,350 --> 00:21:57,370
clone and as usual as mentioned on the

00:21:55,180 --> 00:22:00,460
on the lowest level just as an example

00:21:57,370 --> 00:22:03,640
the install has aged up SH all of these

00:22:00,460 --> 00:22:06,100
I mentioned all especially these three

00:22:03,640 --> 00:22:07,179
files because these three files are the

00:22:06,100 --> 00:22:10,599
files you need

00:22:07,179 --> 00:22:12,489
to change if you want to set if you want

00:22:10,599 --> 00:22:15,759
to configure this whole dr. dev script

00:22:12,489 --> 00:22:18,159
for your own projects so the first one

00:22:15,759 --> 00:22:21,309
is you need to get DSN in the insta less

00:22:18,159 --> 00:22:21,789
8 script so that is pointing to my to my

00:22:21,309 --> 00:22:25,509
place

00:22:21,789 --> 00:22:28,839
so to my get up we simply you can define

00:22:25,509 --> 00:22:31,210
yourself if it's github or bitbucket or

00:22:28,839 --> 00:22:33,809
if you want to have the full one or if

00:22:31,210 --> 00:22:35,529
you have some across several

00:22:33,809 --> 00:22:38,950
repositories or across several

00:22:35,529 --> 00:22:41,379
namespaces then you can configure it and

00:22:38,950 --> 00:22:43,839
you can take this part here this is

00:22:41,379 --> 00:22:46,779
simply concatenated with what's in the

00:22:43,839 --> 00:22:51,940
project as age and in a project as age

00:22:46,779 --> 00:22:54,039
you find the project to clone and we I

00:22:51,940 --> 00:22:56,379
have to say we haven't tested this code

00:22:54,039 --> 00:23:01,570
yet across seven name will get

00:22:56,379 --> 00:23:02,499
namespaces for because of the slash in

00:23:01,570 --> 00:23:07,389
the namespaces

00:23:02,499 --> 00:23:10,839
that might get some conflicts on on the

00:23:07,389 --> 00:23:12,489
cloning into the right folders might be

00:23:10,839 --> 00:23:15,759
I haven't haven't tested it on that

00:23:12,489 --> 00:23:18,159
version yet but it simply clones it

00:23:15,759 --> 00:23:20,320
simply needs here in this lists to the

00:23:18,159 --> 00:23:23,019
order to clone and not just the order to

00:23:20,320 --> 00:23:25,179
clone but the project says as age is the

00:23:23,019 --> 00:23:28,899
main five for pretty much every job

00:23:25,179 --> 00:23:32,109
every task every share script because in

00:23:28,899 --> 00:23:34,119
there it knows which order so you want

00:23:32,109 --> 00:23:36,940
first usually you want to have at on the

00:23:34,119 --> 00:23:39,609
first place at the foxy because if the

00:23:36,940 --> 00:23:41,169
epoxy is booted and you have 20 projects

00:23:39,609 --> 00:23:43,599
to clone and the first one is the one

00:23:41,169 --> 00:23:47,070
you need let's clone and let's build

00:23:43,599 --> 00:23:47,070
them you can already use the proxy

00:23:47,129 --> 00:23:53,830
there's one more thing to change as

00:23:50,349 --> 00:23:55,809
mentioned before we should at the domain

00:23:53,830 --> 00:23:58,029
in the domains txt the domains which

00:23:55,809 --> 00:24:03,339
should be added to DTC host for this

00:23:58,029 --> 00:24:05,799
example I took the dummy a all of this

00:24:03,339 --> 00:24:09,070
as you see it here is already in the in

00:24:05,799 --> 00:24:11,859
the in this repository configured so you

00:24:09,070 --> 00:24:14,710
can simply take that run it see that it

00:24:11,859 --> 00:24:19,029
works test it and then configure to your

00:24:14,710 --> 00:24:20,270
need that's the configuration of the

00:24:19,029 --> 00:24:22,429
daka dev scripts

00:24:20,270 --> 00:24:24,620
but as mentioned before we have to

00:24:22,429 --> 00:24:28,550
configure if you things in the darker

00:24:24,620 --> 00:24:31,040
compost over right and we as mentioned

00:24:28,550 --> 00:24:34,550
before we even have a dist fire so we

00:24:31,040 --> 00:24:37,040
have the dist on a version to the to the

00:24:34,550 --> 00:24:39,740
git repository but on install it will

00:24:37,040 --> 00:24:43,490
simply copy this file and take it as it

00:24:39,740 --> 00:24:45,530
is but that is not versioned so you can

00:24:43,490 --> 00:24:48,620
change configurations you can change

00:24:45,530 --> 00:24:51,980
hosts files virtual host names if you if

00:24:48,620 --> 00:24:54,679
you need and they are not getting spread

00:24:51,980 --> 00:24:56,360
across all environments immediately - to

00:24:54,679 --> 00:24:59,390
every other developer so you're not

00:24:56,360 --> 00:25:02,090
destroying each other's work and in now

00:24:59,390 --> 00:25:06,890
we defined a few things so this is the

00:25:02,090 --> 00:25:09,710
configuration for the J's Wilder epoxy

00:25:06,890 --> 00:25:11,510
and there you have the simply just an

00:25:09,710 --> 00:25:13,309
additional environment variable which is

00:25:11,510 --> 00:25:15,920
called virtual host and then and then

00:25:13,309 --> 00:25:18,770
the host name and what you have to make

00:25:15,920 --> 00:25:20,480
sure is simply the network that all of

00:25:18,770 --> 00:25:23,120
the your projects are using the same

00:25:20,480 --> 00:25:27,500
network if not they simply can't see

00:25:23,120 --> 00:25:29,870
each other and that solves the problem

00:25:27,500 --> 00:25:32,960
is the network's there is a few more

00:25:29,870 --> 00:25:34,880
details there's a few more hints which

00:25:32,960 --> 00:25:37,670
for us actually turned out to be a

00:25:34,880 --> 00:25:40,040
benefit if you're in your project ayyyy

00:25:37,670 --> 00:25:45,710
and your project B your PHP containers

00:25:40,040 --> 00:25:50,929
are called PHP that gave us some trouble

00:25:45,710 --> 00:25:53,840
because we ended up on the wrong better

00:25:50,929 --> 00:25:56,690
in this case what we used to have there

00:25:53,840 --> 00:26:00,860
is an additional information in here to

00:25:56,690 --> 00:26:03,230
contain a name and put in here but put

00:26:00,860 --> 00:26:06,260
in here a container name which is unique

00:26:03,230 --> 00:26:07,670
so your service still can be called PHP

00:26:06,260 --> 00:26:10,370
you have if you want to boot this

00:26:07,670 --> 00:26:11,960
manually or up and down you don't have

00:26:10,370 --> 00:26:14,030
to have the full container name all the

00:26:11,960 --> 00:26:16,160
time but we have in the container name

00:26:14,030 --> 00:26:18,620
in this file here usually like docker

00:26:16,160 --> 00:26:22,970
deaf scripts underscore dummy a

00:26:18,620 --> 00:26:25,790
underscore PHP so it stays unique across

00:26:22,970 --> 00:26:28,640
all systems and no automatic load

00:26:25,790 --> 00:26:32,419
balancing which might be possible in

00:26:28,640 --> 00:26:33,890
these systems on kicking in because if

00:26:32,419 --> 00:26:36,560
you are ending up on a lope

00:26:33,890 --> 00:26:38,540
on a load-balanced PHP server and one

00:26:36,560 --> 00:26:42,500
and only every second request goes to

00:26:38,540 --> 00:26:44,590
the server you want that's trouble and

00:26:42,500 --> 00:26:47,210
so on but let's have a look how

00:26:44,590 --> 00:26:51,080
installing looks like as mentioned we

00:26:47,210 --> 00:26:53,780
will try this later on my computer if we

00:26:51,080 --> 00:26:54,620
have to time but let's have a look how

00:26:53,780 --> 00:26:57,320
this looks like

00:26:54,620 --> 00:27:04,130
so last opportunity for the barcode if

00:26:57,320 --> 00:27:07,310
anyone once needs good ok so that's how

00:27:04,130 --> 00:27:10,100
the the the instead script will look

00:27:07,310 --> 00:27:12,740
like in the end shortened adhere bid for

00:27:10,100 --> 00:27:14,560
the cloning shortened it a bit by

00:27:12,740 --> 00:27:17,480
building because the containers are

00:27:14,560 --> 00:27:20,870
we're already there or the images were

00:27:17,480 --> 00:27:22,580
already there so but in the end it

00:27:20,870 --> 00:27:25,310
starts with the cloning so it simply

00:27:22,580 --> 00:27:27,530
clones all the repositories what does it

00:27:25,310 --> 00:27:29,150
and what the install is sorry I forgot

00:27:27,530 --> 00:27:31,930
to start at the beginning what the

00:27:29,150 --> 00:27:35,000
install script on our end is doing is

00:27:31,930 --> 00:27:37,850
it's checking first if you have git

00:27:35,000 --> 00:27:40,610
installed a checking first if your door

00:27:37,850 --> 00:27:43,430
is installed so that these commands are

00:27:40,610 --> 00:27:45,950
existing so that you actually have a

00:27:43,430 --> 00:27:48,080
working environment so it would even not

00:27:45,950 --> 00:27:51,050
start for a new developer if this

00:27:48,080 --> 00:27:54,410
developer is missing docker so we have

00:27:51,050 --> 00:27:56,270
in at khatma hawaii we have a few more

00:27:54,410 --> 00:27:59,930
features in there because we have there

00:27:56,270 --> 00:28:02,660
some additional features for ant so

00:27:59,930 --> 00:28:04,910
that's so we check even that the ant

00:28:02,660 --> 00:28:07,400
environment is available so that ant

00:28:04,910 --> 00:28:09,410
scripts can run that is done at the far

00:28:07,400 --> 00:28:10,850
beginning then at the first one you need

00:28:09,410 --> 00:28:12,170
to enter your password of the machine

00:28:10,850 --> 00:28:13,730
don't get scared

00:28:12,170 --> 00:28:15,920
you can have a look at the code as

00:28:13,730 --> 00:28:18,740
simple and if you know if you don't

00:28:15,920 --> 00:28:20,540
trust us don't worry what this password

00:28:18,740 --> 00:28:23,570
is needed for is simply for the ETCs

00:28:20,540 --> 00:28:26,840
file so you can't change the et cos 5 is

00:28:23,570 --> 00:28:29,000
your local is your normal user so

00:28:26,840 --> 00:28:30,800
therefore we need shortly at the

00:28:29,000 --> 00:28:32,930
beginning the password just for adding

00:28:30,800 --> 00:28:34,880
these lines please have a look if you

00:28:32,930 --> 00:28:37,460
see there's some security holes I'm

00:28:34,880 --> 00:28:40,040
really happy to get their support

00:28:37,460 --> 00:28:42,350
because it's like it's one man it's a

00:28:40,040 --> 00:28:46,550
one man show to maintain that and it's

00:28:42,350 --> 00:28:47,779
simply just life that code because the

00:28:46,550 --> 00:28:51,649
other projects are Bay

00:28:47,779 --> 00:28:53,179
in in the companies for example in karma

00:28:51,649 --> 00:28:54,739
right we have already two of these

00:28:53,179 --> 00:28:58,029
environments because we are so big and

00:28:54,739 --> 00:29:00,259
have some applications running

00:28:58,029 --> 00:29:04,669
completely independent so we have two

00:29:00,259 --> 00:29:07,849
environments like that but yeah if you

00:29:04,669 --> 00:29:10,669
see if you have more details happy to

00:29:07,849 --> 00:29:13,879
get more information on that one so but

00:29:10,669 --> 00:29:17,090
Edmond as mentioned next cloning then we

00:29:13,879 --> 00:29:20,029
check if the override is it's in the in

00:29:17,090 --> 00:29:21,889
the backup if not it will copy it from

00:29:20,029 --> 00:29:24,519
the repository so it will copy it from

00:29:21,889 --> 00:29:27,589
the dist fire

00:29:24,519 --> 00:29:30,019
same for the dummy a then it will do the

00:29:27,589 --> 00:29:32,719
same with the N fire so it will copy the

00:29:30,019 --> 00:29:36,919
N fire from the N fittest because it's

00:29:32,719 --> 00:29:38,719
not there yet it's not backup yet then

00:29:36,919 --> 00:29:41,690
it checks if a doctor if this repository

00:29:38,719 --> 00:29:42,859
has a docker compose so sometimes we

00:29:41,690 --> 00:29:46,669
have compositor ease which are just

00:29:42,859 --> 00:29:49,129
libraries so they don't need anything on

00:29:46,669 --> 00:29:50,330
to run but they should be part of the

00:29:49,129 --> 00:29:52,089
code it should be part of this

00:29:50,330 --> 00:29:55,039
environment it should be available to

00:29:52,089 --> 00:29:58,070
change their code so we check if the

00:29:55,039 --> 00:30:00,109
docker compose file is there and if yes

00:29:58,070 --> 00:30:05,179
we simply run the docker the docker

00:30:00,109 --> 00:30:08,629
compose up minus T on the whole file so

00:30:05,179 --> 00:30:10,639
the same than for a dummy and then you

00:30:08,629 --> 00:30:12,499
see here the backup was not backup

00:30:10,639 --> 00:30:15,289
directories were in there so it creates

00:30:12,499 --> 00:30:18,109
an inner environment to dr. def proxy it

00:30:15,289 --> 00:30:20,119
backs up the docker compose file the

00:30:18,109 --> 00:30:22,099
backs up here the docker compose file

00:30:20,119 --> 00:30:25,899
and the end file and then everything

00:30:22,099 --> 00:30:29,539
should work so to test this simply

00:30:25,899 --> 00:30:32,450
that's what the dummy is doing nothing

00:30:29,539 --> 00:30:35,779
more that you can if if the install was

00:30:32,450 --> 00:30:36,999
was properly working you can simply run

00:30:35,779 --> 00:30:40,729
the domain on your local machine

00:30:36,999 --> 00:30:44,029
everything should be there and that is

00:30:40,729 --> 00:30:45,859
for the next steps because the next step

00:30:44,029 --> 00:30:52,009
would be ok why should we do this with

00:30:45,859 --> 00:30:55,820
one project let's have a second one the

00:30:52,009 --> 00:30:59,419
second one is simply introduced most of

00:30:55,820 --> 00:31:02,139
the configurations we saw already so

00:30:59,419 --> 00:31:08,359
let's have that in a different way I

00:31:02,139 --> 00:31:11,089
simply put the diffs from github so we

00:31:08,359 --> 00:31:14,119
simply add the second dummy we simply

00:31:11,089 --> 00:31:16,729
adhere the second dummy but the second

00:31:14,119 --> 00:31:20,659
dummy is not exactly the same but the

00:31:16,729 --> 00:31:24,039
second dummy actually has on install to

00:31:20,659 --> 00:31:26,359
run needs some composer dependencies

00:31:24,039 --> 00:31:28,879
that's the usual behavior that we have

00:31:26,359 --> 00:31:33,109
to get project if we want to get work

00:31:28,879 --> 00:31:35,450
projects running we have to get some

00:31:33,109 --> 00:31:38,209
additional steps done and that's what I

00:31:35,450 --> 00:31:40,820
mentioned earlier you simply can

00:31:38,209 --> 00:31:45,049
overwrite the install has a script based

00:31:40,820 --> 00:31:47,539
on project base by putting it into this

00:31:45,049 --> 00:31:49,759
explicit folded or explicit folder

00:31:47,539 --> 00:31:52,549
structure so under scripts create a

00:31:49,759 --> 00:31:56,059
creative folder of your of your project

00:31:52,549 --> 00:31:57,709
and put in Stella's HD R by today we

00:31:56,059 --> 00:31:59,059
already figured out that even that

00:31:57,709 --> 00:32:03,200
shouldn't be in here

00:31:59,059 --> 00:32:05,119
but should be part of your repository we

00:32:03,200 --> 00:32:07,369
haven't managed yet to change our all

00:32:05,119 --> 00:32:11,089
our repositories and all our projects in

00:32:07,369 --> 00:32:14,719
this way and get and get to check on on

00:32:11,089 --> 00:32:18,259
a specific at karma I we for example

00:32:14,719 --> 00:32:20,779
have this way plus the feature enhance

00:32:18,259 --> 00:32:23,929
so the on script is checking if in this

00:32:20,779 --> 00:32:27,409
project is a bit XML which is called

00:32:23,929 --> 00:32:29,959
them build project and if in this build

00:32:27,409 --> 00:32:33,159
project file is an install or a setup

00:32:29,959 --> 00:32:36,619
command and then it will run this on top

00:32:33,159 --> 00:32:39,649
so in this case here it's pretty simple

00:32:36,619 --> 00:32:41,989
give you sure it heads up standard stuff

00:32:39,649 --> 00:32:46,009
at the beginning we have adding some

00:32:41,989 --> 00:32:47,599
colors for to get better outputs getting

00:32:46,009 --> 00:32:50,839
into the directory running docker

00:32:47,599 --> 00:32:55,099
compose composer install and going back

00:32:50,839 --> 00:32:57,919
so not pretty as mentioned if there's if

00:32:55,099 --> 00:33:04,399
there are better ideas please I'm happy

00:32:57,919 --> 00:33:06,979
to learn but the good part we made it

00:33:04,399 --> 00:33:09,319
through all the slides let's have a try

00:33:06,979 --> 00:33:10,680
if we can do this time life coding

00:33:09,319 --> 00:33:14,400
without some

00:33:10,680 --> 00:33:16,170
something breaking okay good and feel

00:33:14,400 --> 00:33:18,240
free to start ask questions in the

00:33:16,170 --> 00:33:20,190
meanwhile so we can talk we can let's

00:33:18,240 --> 00:33:23,580
have a discussion main slides are done

00:33:20,190 --> 00:33:33,360
now the good stuff starts feel free to

00:33:23,580 --> 00:33:34,500
start asking questions let me just that

00:33:33,360 --> 00:33:37,400
should work

00:33:34,500 --> 00:33:37,400
good

00:33:45,190 --> 00:33:47,789
good

00:33:47,950 --> 00:33:59,140
so as mentioned it's pretty simple just

00:33:52,620 --> 00:34:01,750
cloning hopefully that works now yeah it

00:33:59,140 --> 00:34:04,890
takes a while no cloning this repository

00:34:01,750 --> 00:34:13,230
then going into the dr. dev scripts and

00:34:04,890 --> 00:34:13,230
then running simply install a sage yep

00:34:13,710 --> 00:34:24,340
that's it

00:34:15,160 --> 00:34:26,890
and now it's installing so in the end in

00:34:24,340 --> 00:34:29,050
the end when you when new developers

00:34:26,890 --> 00:34:33,280
join a team or even if you get a new box

00:34:29,050 --> 00:34:36,370
or if you if you have if you had

00:34:33,280 --> 00:34:37,810
problems before all of this is pretty

00:34:36,370 --> 00:34:40,060
simple the only thing you need to know

00:34:37,810 --> 00:34:42,130
is which repository to clone and to and

00:34:40,060 --> 00:34:43,840
how to run the install a sage and then

00:34:42,130 --> 00:34:48,040
the rest is already there so we can have

00:34:43,840 --> 00:34:56,500
a look we have a look everything is in

00:34:48,040 --> 00:34:58,630
here so we have that looks better so we

00:34:56,500 --> 00:35:02,140
have to backup the EPS folder as

00:34:58,630 --> 00:35:04,510
mentioned we have the environments

00:35:02,140 --> 00:35:06,340
folder as mentioned and then we have all

00:35:04,510 --> 00:35:10,110
these commands like even backup and

00:35:06,340 --> 00:35:14,500
restore settings to see if it's working

00:35:10,110 --> 00:35:18,100
let's know let's open the browser it

00:35:14,500 --> 00:35:22,000
works but the second is still not there

00:35:18,100 --> 00:35:24,340
so it's doing out there and now because

00:35:22,000 --> 00:35:28,930
I guess it's not running

00:35:24,340 --> 00:35:33,790
so the first project is working as we

00:35:28,930 --> 00:35:37,810
saw here as we saw here it installs the

00:35:33,790 --> 00:35:42,510
dummy a um but not that maybe it simply

00:35:37,810 --> 00:35:42,510
because of the wrong branch

00:35:43,600 --> 00:35:55,500
check it out get check out of the bib

00:35:48,690 --> 00:35:55,500
what is the Raj name look

00:36:02,750 --> 00:36:06,730
in Saratoga forgot to branch name

00:36:11,000 --> 00:36:16,460
just introduced dummy be okay

00:36:25,870 --> 00:36:32,480
okay well now I can even in there is as

00:36:30,830 --> 00:36:35,270
mentioned in yours everything we saw

00:36:32,480 --> 00:36:38,780
earlier in the diff I can simply run the

00:36:35,270 --> 00:36:40,750
install as H again so it won't clone all

00:36:38,780 --> 00:36:44,780
the others it simply will clone only the

00:36:40,750 --> 00:36:48,440
the dummy B and this time because I

00:36:44,780 --> 00:36:50,210
simply was running this fast enough one

00:36:48,440 --> 00:36:54,290
after another it still had the knowledge

00:36:50,210 --> 00:36:58,310
of the order to route the Zulu access to

00:36:54,290 --> 00:36:59,180
the ATC hosts file as you see it's a

00:36:58,310 --> 00:37:03,470
dummy project

00:36:59,180 --> 00:37:05,660
nothing major to be installed but it is

00:37:03,470 --> 00:37:09,350
running the install as H it's over right

00:37:05,660 --> 00:37:11,750
it took to overwrite but still they did

00:37:09,350 --> 00:37:14,660
the rest of it as well like booting it

00:37:11,750 --> 00:37:17,140
making sure that everything is there all

00:37:14,660 --> 00:37:17,140
of this yeah

00:37:32,570 --> 00:37:40,680
yes in in in a simple way instead of

00:37:38,580 --> 00:37:43,560
having just one up command which is

00:37:40,680 --> 00:37:45,330
booting everything you can you can put

00:37:43,560 --> 00:37:47,910
this you can tear this apart what we did

00:37:45,330 --> 00:37:49,500
as well we did it first in a simple way

00:37:47,910 --> 00:37:51,720
let let everything boot and then kill

00:37:49,500 --> 00:37:54,110
the containers you don't need so we had

00:37:51,720 --> 00:37:59,250
some we had on our local machines

00:37:54,110 --> 00:38:02,130
individual kill kill SH scripts but that

00:37:59,250 --> 00:38:04,530
was cheesy overtime so first by booting

00:38:02,130 --> 00:38:09,740
everything up so we simply introduced

00:38:04,530 --> 00:38:13,440
not just an app SH but for example up up

00:38:09,740 --> 00:38:16,500
order checking SH and restore order

00:38:13,440 --> 00:38:19,710
checking you need simply and we need for

00:38:16,500 --> 00:38:22,340
us an FTP in SFTP a database and an

00:38:19,710 --> 00:38:25,350
application all of them are getting in

00:38:22,340 --> 00:38:27,900
all our these are across two

00:38:25,350 --> 00:38:30,060
repositories so we simply run across two

00:38:27,900 --> 00:38:32,160
repositories some up commands but not

00:38:30,060 --> 00:38:34,230
everything so it because it's simply

00:38:32,160 --> 00:38:36,900
share scripts we can have a look we can

00:38:34,230 --> 00:38:38,580
have a look on them I opened all of them

00:38:36,900 --> 00:38:40,860
so the install is one of the most

00:38:38,580 --> 00:38:51,290
complex I know that is far too small

00:38:40,860 --> 00:38:51,290
give me a second sorry

00:38:52,320 --> 00:39:01,240
yeah there it's gone

00:38:55,570 --> 00:39:03,730
okay okay good it's dead

00:39:01,240 --> 00:39:07,210
especially for last lines last rows is

00:39:03,730 --> 00:39:08,740
it big enough or sure it's okay okay

00:39:07,210 --> 00:39:12,700
good yeah

00:39:08,740 --> 00:39:16,120
as mentioned here's to good DSM then we

00:39:12,700 --> 00:39:18,670
check if because we used SSH keys for

00:39:16,120 --> 00:39:21,900
authentication so we check if your

00:39:18,670 --> 00:39:25,600
public SSH file is there

00:39:21,900 --> 00:39:27,700
it currently has some issues this

00:39:25,600 --> 00:39:30,430
version explicitly has some issues if

00:39:27,700 --> 00:39:32,650
you have a passphrase in front of it and

00:39:30,430 --> 00:39:35,410
so on this we have the soft in other in

00:39:32,650 --> 00:39:37,600
other projects that already was

00:39:35,410 --> 00:39:42,310
passphrases but that code was so cheesy

00:39:37,600 --> 00:39:44,800
that I didn't dare to put it in the but

00:39:42,310 --> 00:39:46,990
yeah there is currently a problem if you

00:39:44,800 --> 00:39:50,680
have a prosperous in front of mr.

00:39:46,990 --> 00:39:54,600
Monsieur keys then it checks if you're

00:39:50,680 --> 00:39:58,600
darker compose command is available

00:39:54,600 --> 00:40:00,760
here's the update host files so that's

00:39:58,600 --> 00:40:06,490
two that's the code which needs the

00:40:00,760 --> 00:40:11,020
password which will run your which will

00:40:06,490 --> 00:40:12,850
run your now it is yours file like

00:40:11,020 --> 00:40:17,340
adding domains to the e.t.c host file

00:40:12,850 --> 00:40:19,780
that is the project as age this will

00:40:17,340 --> 00:40:22,660
there is the list of repositories in

00:40:19,780 --> 00:40:25,540
there again and that there's in there

00:40:22,660 --> 00:40:29,920
not just the repositories but there's in

00:40:25,540 --> 00:40:32,190
there like in a map so we can check if

00:40:29,920 --> 00:40:34,480
something is cloned already or not and

00:40:32,190 --> 00:40:37,230
then we simply run through a list

00:40:34,480 --> 00:40:39,610
through this list of clone of projects

00:40:37,230 --> 00:40:42,090
and check if they are closed if they are

00:40:39,610 --> 00:40:45,820
existing or if they should be cloned

00:40:42,090 --> 00:40:47,790
then we restore the settings so that's

00:40:45,820 --> 00:40:51,520
simply just calling the other command

00:40:47,790 --> 00:40:53,830
and then we simply check if the instant

00:40:51,520 --> 00:40:56,710
let's H needs to be called so if the if

00:40:53,830 --> 00:41:00,310
as we saw it the inside edge installed

00:40:56,710 --> 00:41:03,100
docker compose composure dependencies

00:41:00,310 --> 00:41:05,150
and if I run the install SH again for

00:41:03,100 --> 00:41:08,660
this for this directory

00:41:05,150 --> 00:41:10,789
will not run the insula seiche again so

00:41:08,660 --> 00:41:13,279
it will not run the cloning again so

00:41:10,789 --> 00:41:15,230
because that might effects if you have

00:41:13,279 --> 00:41:17,390
fixture files or configurations which

00:41:15,230 --> 00:41:18,890
need to be get generated and all of this

00:41:17,390 --> 00:41:21,589
is running again and again and again

00:41:18,890 --> 00:41:25,220
that cost trouble so and it's the same

00:41:21,589 --> 00:41:30,740
with the up SH um you can have a look to

00:41:25,220 --> 00:41:37,539
get you to show you what is needed come

00:41:30,740 --> 00:41:37,539
on let me make the presentation mode

00:41:38,260 --> 00:41:43,210
dear computer thank you very much

00:41:49,630 --> 00:41:58,279
up SH let me zoom in here makes it

00:41:55,039 --> 00:42:00,589
easier so the APIs H is pretty simple as

00:41:58,279 --> 00:42:03,589
well to answer your question we simply

00:42:00,589 --> 00:42:05,900
Ford for the app SH command so what we

00:42:03,589 --> 00:42:08,510
did in this in this command to simply

00:42:05,900 --> 00:42:11,270
just run a few of them we had an own

00:42:08,510 --> 00:42:13,880
list of projects which should be run and

00:42:11,270 --> 00:42:17,029
then we reused pretty much the code from

00:42:13,880 --> 00:42:20,059
here so to run each projects up command

00:42:17,029 --> 00:42:23,839
and then simply have that sorted in this

00:42:20,059 --> 00:42:26,390
way so we don't have any requirements to

00:42:23,839 --> 00:42:29,510
use this so to have it all the time

00:42:26,390 --> 00:42:31,490
putting everything but then you have

00:42:29,510 --> 00:42:33,799
usually have not just not just one

00:42:31,490 --> 00:42:37,160
repository you need to run together but

00:42:33,799 --> 00:42:39,200
maybe two out of five so to work to work

00:42:37,160 --> 00:42:41,630
them together so for your field but the

00:42:39,200 --> 00:42:43,789
other one needs Europe one of yours and

00:42:41,630 --> 00:42:46,099
two others to run so easy so you can

00:42:43,789 --> 00:42:49,809
extend it in this way pretty simple

00:42:46,099 --> 00:42:49,809
these are all small scripts

00:42:59,700 --> 00:43:05,610
we thought about ansible simple answers

00:43:03,300 --> 00:43:08,640
to answer with no knowledge and the

00:43:05,610 --> 00:43:11,490
company so that's the simple answer

00:43:08,640 --> 00:43:13,230
we thought about kubernetes too much to

00:43:11,490 --> 00:43:14,760
work on at this time too much to

00:43:13,230 --> 00:43:16,860
configure today we have it all with

00:43:14,760 --> 00:43:18,500
getting it for Amex already missed

00:43:16,860 --> 00:43:22,710
aquifer mech it's kubernetes in

00:43:18,500 --> 00:43:27,500
introduced already simply wasn't at this

00:43:22,710 --> 00:43:30,450
time so that's the simple answer and

00:43:27,500 --> 00:43:32,790
with we needed a quick solution we

00:43:30,450 --> 00:43:37,140
needed something to get this running

00:43:32,790 --> 00:43:40,020
because we we we're in a state that we

00:43:37,140 --> 00:43:42,750
moved away from Raymond and we had a

00:43:40,020 --> 00:43:44,700
really really nasty vagrant box with I

00:43:42,750 --> 00:43:47,250
think five different PHP versions

00:43:44,700 --> 00:43:49,170
installed and everything so much

00:43:47,250 --> 00:43:51,570
configured to work on a local machine

00:43:49,170 --> 00:43:54,660
that it doesn't fit any life environment

00:43:51,570 --> 00:43:56,430
anymore and with docker really in and

00:43:54,660 --> 00:43:58,290
this time we need docker came around the

00:43:56,430 --> 00:44:01,170
corner like quite big I think it was the

00:43:58,290 --> 00:44:02,460
third or fifth birthday of Tokyo three

00:44:01,170 --> 00:44:04,800
years ago

00:44:02,460 --> 00:44:06,510
it came around the corner and we said

00:44:04,800 --> 00:44:09,690
aqui come on let's let's talk erase

00:44:06,510 --> 00:44:12,090
everything to make it run on your local

00:44:09,690 --> 00:44:15,630
machine because we ended up standing

00:44:12,090 --> 00:44:17,520
with I think five or six senior

00:44:15,630 --> 00:44:20,250
developers in front of him damn Windows

00:44:17,520 --> 00:44:22,320
machine and we're figure trying to

00:44:20,250 --> 00:44:24,720
figure out why this vagrant boxes again

00:44:22,320 --> 00:44:27,390
not working on on this machine while it

00:44:24,720 --> 00:44:31,580
works on the next one so we took two

00:44:27,390 --> 00:44:34,110
steps first we introduced docker which

00:44:31,580 --> 00:44:36,720
significantly made our life easier

00:44:34,110 --> 00:44:40,080
because you can run as many PHP versions

00:44:36,720 --> 00:44:43,530
as you wish and I have defined for for

00:44:40,080 --> 00:44:46,580
my for my computer already that on my

00:44:43,530 --> 00:44:49,200
computer I don't use PHP at all so I

00:44:46,580 --> 00:44:50,820
just talked her the only thing I need to

00:44:49,200 --> 00:44:55,170
have locally installed is docker compose

00:44:50,820 --> 00:44:57,600
plus get everything aids is done inside

00:44:55,170 --> 00:45:00,210
docker containers like even if I work

00:44:57,600 --> 00:45:01,800
locally or if I run tests locally I

00:45:00,210 --> 00:45:03,750
usually connect to a docker container

00:45:01,800 --> 00:45:05,820
and run it in this environment because

00:45:03,750 --> 00:45:08,090
that is as close as possible to our life

00:45:05,820 --> 00:45:08,090
environment

00:45:17,160 --> 00:45:22,960
the SSH key you can simply solve this

00:45:20,980 --> 00:45:25,390
problem if you because it's your local

00:45:22,960 --> 00:45:27,850
machine mount your SSH key into the

00:45:25,390 --> 00:45:30,580
container so that's how we use it

00:45:27,850 --> 00:45:34,210
everyone sing and don't do this I agree

00:45:30,580 --> 00:45:36,040
if we are talking about EWS if we talk

00:45:34,210 --> 00:45:37,810
about production environments if you

00:45:36,040 --> 00:45:40,030
talk about environments which are far

00:45:37,810 --> 00:45:42,010
away from your local machine but it is

00:45:40,030 --> 00:45:45,520
your local machine if you have it is if

00:45:42,010 --> 00:45:49,390
you mount your SSH private public and

00:45:45,520 --> 00:45:50,800
private keys into your container the

00:45:49,390 --> 00:45:53,290
only thing you shouldn't you shouldn't

00:45:50,800 --> 00:45:55,480
do is really beat them into your

00:45:53,290 --> 00:45:58,060
container that you shouldn't mount them

00:45:55,480 --> 00:45:59,310
in via docker compose and that's and

00:45:58,060 --> 00:46:03,310
then you don't have to do these problems

00:45:59,310 --> 00:46:04,960
and that's how we simply solve that it's

00:46:03,310 --> 00:46:08,170
a different story if you want to run

00:46:04,960 --> 00:46:11,950
these containers then life later but

00:46:08,170 --> 00:46:18,340
they usually differ a bit okay do we

00:46:11,950 --> 00:46:22,960
have more questions this project is not

00:46:18,340 --> 00:46:25,870
with traffic this project here is is mr.

00:46:22,960 --> 00:46:28,870
Jason Wilder why that's the that's the

00:46:25,870 --> 00:46:31,960
container so in there in the repository

00:46:28,870 --> 00:46:34,740
in the docker def proxy repository you

00:46:31,960 --> 00:46:38,290
find in the readme file three links

00:46:34,740 --> 00:46:40,500
these are the three links to have four

00:46:38,290 --> 00:46:42,790
articles which I use to get this running

00:46:40,500 --> 00:46:46,540
so and especially the last one that's

00:46:42,790 --> 00:46:52,900
the one I had earlier in the slides and

00:46:46,540 --> 00:46:56,350
that's how how simple it can be so this

00:46:52,900 --> 00:46:57,490
project simply the reverse proxy simply

00:46:56,350 --> 00:47:00,280
doesn't know anything about other

00:46:57,490 --> 00:47:02,170
projects so the reverse proxy the only

00:47:00,280 --> 00:47:05,170
thing the reverse proxy knows about the

00:47:02,170 --> 00:47:10,990
dr. death is simply that we have here as

00:47:05,170 --> 00:47:14,020
well let me zoom in here the dark

00:47:10,990 --> 00:47:16,090
recompose overwrite llaman and that

00:47:14,020 --> 00:47:20,610
simply adds the port mappings and that

00:47:16,090 --> 00:47:23,700
simply adds the networks and that's all

00:47:20,610 --> 00:47:26,680
so because the reverse proxy is

00:47:23,700 --> 00:47:30,040
explicitly listening to the daka daemon

00:47:26,680 --> 00:47:33,370
and gets all the information from there

00:47:30,040 --> 00:47:36,100
in the in the case of traffic you get

00:47:33,370 --> 00:47:39,190
even you should not just pour mobbed

00:47:36,100 --> 00:47:40,690
eSports but you should map another port

00:47:39,190 --> 00:47:42,310
I think it's eighty eighty or eighty

00:47:40,690 --> 00:47:46,600
eighty eight I'm not hundred percent

00:47:42,310 --> 00:47:50,680
sure on the detail because there you get

00:47:46,600 --> 00:47:52,960
an an application rap fondant for

00:47:50,680 --> 00:47:54,850
traffic which shows you which containers

00:47:52,960 --> 00:47:57,010
are available and what names they have

00:47:54,850 --> 00:47:59,290
what domain names together they have how

00:47:57,010 --> 00:48:01,960
you can get to them the configuration on

00:47:59,290 --> 00:48:05,310
each project is pretty simple as

00:48:01,960 --> 00:48:08,470
mentioned as mentioned in here

00:48:05,310 --> 00:48:12,700
so here in this example is even the

00:48:08,470 --> 00:48:16,320
let's encrypt hostname so if you want to

00:48:12,700 --> 00:48:19,510
run this this dummy on an on a real

00:48:16,320 --> 00:48:22,390
server available from the outside so you

00:48:19,510 --> 00:48:26,800
simply take these comments away and it

00:48:22,390 --> 00:48:32,200
has SSH as I said sorry

00:48:26,800 --> 00:48:34,330
this is l1 for the configuration for

00:48:32,200 --> 00:48:38,470
Jason Wilder you have to have a virtual

00:48:34,330 --> 00:48:41,560
host here for traffic you have to add a

00:48:38,470 --> 00:48:45,340
label so traffic is using the labels of

00:48:41,560 --> 00:48:48,490
the of the containers to not interfere

00:48:45,340 --> 00:48:51,130
with environment variables so to not

00:48:48,490 --> 00:48:54,280
have their issues overlaps on that one

00:48:51,130 --> 00:48:57,400
so they have you decided for labels and

00:48:54,280 --> 00:49:00,520
this kind of a bit of a special way to

00:48:57,400 --> 00:49:03,070
write them but that all of this is on

00:49:00,520 --> 00:49:06,340
the website of traffic and traffic took

00:49:03,070 --> 00:49:15,630
us maybe half an even more to make it

00:49:06,340 --> 00:49:15,630
work let me see

00:49:15,770 --> 00:49:28,460
let me see that is our old version this

00:49:22,790 --> 00:49:31,790
is really an old code there should be a

00:49:28,460 --> 00:49:35,150
proxy so this is for example the proxy

00:49:31,790 --> 00:49:37,490
image traffic you have to add didn't you

00:49:35,150 --> 00:49:43,700
have to run this command and then you

00:49:37,490 --> 00:49:45,380
have to adhere at the bottom so the

00:49:43,700 --> 00:49:48,560
darker socket and you have to add a

00:49:45,380 --> 00:49:49,970
traffic Tama file that's why it got a

00:49:48,560 --> 00:49:56,090
bit more complicated because you know

00:49:49,970 --> 00:49:59,480
it's it would work without it would work

00:49:56,090 --> 00:50:02,000
was out but it didn't work well it was

00:49:59,480 --> 00:50:03,710
out and we wanted to have like safety

00:50:02,000 --> 00:50:05,990
and wildcard certificates in there

00:50:03,710 --> 00:50:08,590
because but you may this is really the

00:50:05,990 --> 00:50:11,780
first version we built three years ago

00:50:08,590 --> 00:50:14,240
so that might be not up to date anymore

00:50:11,780 --> 00:50:16,700
but this and and actually this traffic

00:50:14,240 --> 00:50:18,860
and for some reason I didn't figure out

00:50:16,700 --> 00:50:20,869
didn't start at the moment I wanted to

00:50:18,860 --> 00:50:23,510
pull it yesterday evening maybe it's

00:50:20,869 --> 00:50:25,670
because of the new the new I might make

00:50:23,510 --> 00:50:27,980
OS on my machine I figured it I didn't

00:50:25,670 --> 00:50:30,410
figure it out yet but yeah that's pretty

00:50:27,980 --> 00:50:34,240
much what you need there and then if you

00:50:30,410 --> 00:50:38,810
have a project running let's have a look

00:50:34,240 --> 00:50:42,500
the exam on an FTP so if you want to

00:50:38,810 --> 00:50:47,240
have an FTP running for for traffic you

00:50:42,500 --> 00:50:49,250
need simply that one you need to have

00:50:47,240 --> 00:50:52,820
here some aliases bit more configured

00:50:49,250 --> 00:50:56,390
and all of this then he is needed to get

00:50:52,820 --> 00:50:58,220
it working but the benefit of this is if

00:50:56,390 --> 00:51:03,050
it's if it's not an FTP but for example

00:50:58,220 --> 00:51:05,270
the database you simply can run even

00:51:03,050 --> 00:51:07,790
internally like inside the containers

00:51:05,270 --> 00:51:09,619
you don't have to map somehow the other

00:51:07,790 --> 00:51:12,770
container and use their container names

00:51:09,619 --> 00:51:14,869
you simply can use the host name no

00:51:12,770 --> 00:51:16,670
that's the benefit of traffic so you

00:51:14,869 --> 00:51:19,130
have more if you really have

00:51:16,670 --> 00:51:20,960
applications which talking which talking

00:51:19,130 --> 00:51:25,670
from one container to another directly

00:51:20,960 --> 00:51:28,820
not via HTTP then then traffic is your

00:51:25,670 --> 00:51:29,809
better friend so because traffic has

00:51:28,820 --> 00:51:31,699
their more features

00:51:29,809 --> 00:51:34,099
they're more benefits for internal

00:51:31,699 --> 00:51:36,769
communication while the Jason Wilder

00:51:34,099 --> 00:51:39,049
approach is simply making it available

00:51:36,769 --> 00:51:41,479
to the outside making a penis several

00:51:39,049 --> 00:51:43,219
applications independent applications to

00:51:41,479 --> 00:51:46,759
the outside so if it's like in our case

00:51:43,219 --> 00:51:52,009
mr. dummy's just a front end and a back

00:51:46,759 --> 00:51:57,109
end I didn't even try it yet see ya so

00:51:52,009 --> 00:51:58,910
so if you have like between a and B you

00:51:57,109 --> 00:52:01,269
can simply click back and forth so you

00:51:58,910 --> 00:52:05,119
see here there's a this is B this is a

00:52:01,269 --> 00:52:09,019
so you can you can click back and forth

00:52:05,119 --> 00:52:11,449
that works with the reverse proxy but if

00:52:09,019 --> 00:52:15,349
but if the containers have to talk to

00:52:11,449 --> 00:52:17,569
each other it is it is and you want to

00:52:15,349 --> 00:52:19,910
expand your project it's better to to

00:52:17,569 --> 00:52:22,189
use traffic because traffic has their

00:52:19,910 --> 00:52:28,479
more features as their more benefits as

00:52:22,189 --> 00:52:28,479
their more opportunities more questions

00:52:31,560 --> 00:52:37,790
sorry say that again please yes

00:52:43,320 --> 00:52:50,090
yes that's what I meant with I can show

00:52:47,610 --> 00:52:53,040
you that as well which one I use their

00:52:50,090 --> 00:53:00,660
doctor their scripts and that is no

00:52:53,040 --> 00:53:02,640
that's the proxy and it's in here let's

00:53:00,660 --> 00:53:04,380
zoom in here so that is that is the

00:53:02,640 --> 00:53:09,570
configuration for the JSON ball

00:53:04,380 --> 00:53:12,990
diversion and below here it's the let's

00:53:09,570 --> 00:53:14,700
encrypt and yes I agree I you're right

00:53:12,990 --> 00:53:15,960
you have this machine needs to be

00:53:14,700 --> 00:53:18,810
available from the outside

00:53:15,960 --> 00:53:21,360
so the HDP approach for the let's

00:53:18,810 --> 00:53:23,700
encrypt is on your local machine simply

00:53:21,360 --> 00:53:25,380
not working but if you have this if you

00:53:23,700 --> 00:53:27,810
want to run this for example as the test

00:53:25,380 --> 00:53:30,510
environment as a stage environment to

00:53:27,810 --> 00:53:35,250
test some features or just have some

00:53:30,510 --> 00:53:37,680
specific branches for for feature for

00:53:35,250 --> 00:53:38,160
feature testing available on a real

00:53:37,680 --> 00:53:40,950
machine

00:53:38,160 --> 00:53:43,890
which is available from the outside then

00:53:40,950 --> 00:53:46,950
as mentioned as shown in here you simply

00:53:43,890 --> 00:53:48,990
activate these two lines on that

00:53:46,950 --> 00:53:51,360
explicit machine and then the let's

00:53:48,990 --> 00:53:52,470
encrypt really does this hand over and

00:53:51,360 --> 00:53:55,410
check that everything is there and

00:53:52,470 --> 00:54:00,560
validates so that when you don't even

00:53:55,410 --> 00:54:00,560
you don't even see that okay

00:54:06,240 --> 00:54:11,570
okay that's quite nice that's a quite

00:54:08,790 --> 00:54:11,570
nice idea as well

00:54:21,090 --> 00:54:24,090
yep

00:54:30,440 --> 00:54:35,290
okay

00:54:32,330 --> 00:54:38,270
that's a good idea as well yeah yeah

00:54:35,290 --> 00:54:41,720
let's that's a good idea as well as as I

00:54:38,270 --> 00:54:44,540
showed you a few minutes ago our old our

00:54:41,720 --> 00:54:46,340
old box simply had self-signed so we

00:54:44,540 --> 00:54:48,410
serve signed and everything okay you had

00:54:46,340 --> 00:54:50,570
to click this is a self-signed yeah I

00:54:48,410 --> 00:54:53,720
know in the browser but that is simply

00:54:50,570 --> 00:54:56,930
on your local machine no one cares if

00:54:53,720 --> 00:54:57,890
you have to click this second time oh

00:54:56,930 --> 00:55:05,180
yeah

00:54:57,890 --> 00:55:08,060
more questions good if not would be a

00:55:05,180 --> 00:55:11,150
pretty much kind of on time 5 minutes

00:55:08,060 --> 00:55:13,730
early but then I think says thank you

00:55:11,150 --> 00:55:17,510
very much for joining thank you for the

00:55:13,730 --> 00:55:19,130
information you gave me and happy to get

00:55:17,510 --> 00:55:21,740
more details so please approach me

00:55:19,130 --> 00:55:24,820
afterwards if you have more details if

00:55:21,740 --> 00:55:26,860
you have more questions just I'm here

00:55:24,820 --> 00:55:27,320
thank you

00:55:26,860 --> 00:55:28,540
[Applause]

00:55:27,320 --> 00:55:30,630
[Music]

00:55:28,540 --> 00:55:40,939
[Applause]

00:55:30,630 --> 00:55:40,939
[Music]

00:55:43,830 --> 00:55:48,770

YouTube URL: https://www.youtube.com/watch?v=GIT8P__SVzU


