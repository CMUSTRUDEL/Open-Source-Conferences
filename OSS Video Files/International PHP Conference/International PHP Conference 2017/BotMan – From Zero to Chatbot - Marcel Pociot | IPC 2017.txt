Title: BotMan â€“ From Zero to Chatbot - Marcel Pociot | IPC 2017
Publication date: 2019-01-23
Playlist: International PHP Conference 2017
Description: 
	Marcel Pociot (ORT interactive GmbH) at IPC 2017: Have you tried to write a chatbot for multiple messaging platforms like Facebook or Slack? It is quite cumbersome as each messaging platform has its own API. Let us find out how to simplify this task and create an intelligent chatbot using PHP and BotMan, that is easy to use and powerful to extend with various tools such as natural language processing.
Captions: 
	00:00:02,100 --> 00:00:09,420
[Music]

00:00:05,480 --> 00:00:12,179
I'm sitting the whole talk because not

00:00:09,420 --> 00:00:15,089
only because I'm tired because there are

00:00:12,179 --> 00:00:16,770
quite a lot of examples in this code so

00:00:15,089 --> 00:00:19,320
I need to be in front of the keyboard so

00:00:16,770 --> 00:00:23,939
it's not only related to the fact that

00:00:19,320 --> 00:00:26,279
I'm a bit tired okay so um about me my

00:00:23,939 --> 00:00:30,330
name is Massimo geode I am from Germany

00:00:26,279 --> 00:00:33,030
I am working at a web agency in Krefeld

00:00:30,330 --> 00:00:36,390
as a back-end developer you can follow

00:00:33,030 --> 00:00:40,440
me on twitter if you want and when I'm

00:00:36,390 --> 00:00:42,120
not working at my day job I am doing a

00:00:40,440 --> 00:00:44,100
lot of open source because I think it's

00:00:42,120 --> 00:00:45,840
really important to give something back

00:00:44,100 --> 00:00:50,070
to the community because we're using

00:00:45,840 --> 00:00:54,270
open-source tools all the time with with

00:00:50,070 --> 00:00:57,030
tools like Apache and I mean PHP itself

00:00:54,270 --> 00:01:01,620
so I really like to contribute something

00:00:57,030 --> 00:01:06,000
back so I have I am not sure I think

00:01:01,620 --> 00:01:06,689
it's like 36 repositories with 600,000

00:01:06,000 --> 00:01:10,710
downloads

00:01:06,689 --> 00:01:14,820
total I also developed two chrome

00:01:10,710 --> 00:01:16,920
extensions that you can use for four

00:01:14,820 --> 00:01:20,759
level laravel test tools to quickly

00:01:16,920 --> 00:01:24,960
generate integration tests and for

00:01:20,759 --> 00:01:29,970
conception so that's mainly what I do

00:01:24,960 --> 00:01:32,579
it's like my day job let's talk about

00:01:29,970 --> 00:01:37,799
chat BOTS they're not as evil as the

00:01:32,579 --> 00:01:40,079
t1000 in here so let's start with the

00:01:37,799 --> 00:01:43,020
definition of a chat bot so according to

00:01:40,079 --> 00:01:46,470
Wikipedia a chat bot is a computer

00:01:43,020 --> 00:01:50,100
program that conducts a conversation and

00:01:46,470 --> 00:01:54,380
the conversation is either in a audio or

00:01:50,100 --> 00:01:57,509
textual representation and also

00:01:54,380 --> 00:01:59,850
wikipedia says that the chat bot then

00:01:57,509 --> 00:02:03,509
should pass the Turing test so that it

00:01:59,850 --> 00:02:07,500
should act as a human and convince the

00:02:03,509 --> 00:02:09,360
user that it's a human person my

00:02:07,500 --> 00:02:12,150
personal definition of a chat bot is

00:02:09,360 --> 00:02:13,560
more that it's just another interface

00:02:12,150 --> 00:02:16,620
that you can use

00:02:13,560 --> 00:02:20,040
to interact with your application so if

00:02:16,620 --> 00:02:22,560
it's your your browser or if it's an apt

00:02:20,040 --> 00:02:25,650
you can see a chat bot is pretty much

00:02:22,560 --> 00:02:27,780
just the same it's just an entire it's

00:02:25,650 --> 00:02:30,360
just an interface that your users can

00:02:27,780 --> 00:02:34,709
use to perform actions with your

00:02:30,360 --> 00:02:37,440
application and to give you some

00:02:34,709 --> 00:02:41,340
examples of what chat BOTS could do for

00:02:37,440 --> 00:02:44,700
you as developers or for your clients if

00:02:41,340 --> 00:02:47,340
you work for for like agencies there are

00:02:44,700 --> 00:02:50,760
a lot of use cases so there are there's

00:02:47,340 --> 00:02:53,970
this big topic of chat ops which is like

00:02:50,760 --> 00:02:57,150
DevOps but for chat applications and in

00:02:53,970 --> 00:02:59,010
this case this is my my personal slack

00:02:57,150 --> 00:03:02,690
bot that I developed for our company and

00:02:59,010 --> 00:03:06,030
what I can do with it I can create new

00:03:02,690 --> 00:03:07,560
servers or new websites using laravel

00:03:06,030 --> 00:03:11,370
forge if you're not familiar with it

00:03:07,560 --> 00:03:15,150
it's like a server provisioning system

00:03:11,370 --> 00:03:18,260
from laravel and so what this allows me

00:03:15,150 --> 00:03:20,730
to do is I can just write in slack

00:03:18,260 --> 00:03:23,760
mention the chat bar and say create a

00:03:20,730 --> 00:03:27,239
site for the environment test and then

00:03:23,760 --> 00:03:29,940
there's the repository name and the chat

00:03:27,239 --> 00:03:31,980
pod will receive this information create

00:03:29,940 --> 00:03:35,970
a database for me create the site on the

00:03:31,980 --> 00:03:38,489
server register it with nginx it will

00:03:35,970 --> 00:03:41,519
use the database configuration and it

00:03:38,489 --> 00:03:46,350
just it's automates the tasks that would

00:03:41,519 --> 00:03:48,540
normally take 10 to 15 minutes and the

00:03:46,350 --> 00:03:51,329
good thing about this is not only that

00:03:48,540 --> 00:03:54,480
it automates it and we're all lazy as

00:03:51,329 --> 00:03:56,250
developers but it also shares the

00:03:54,480 --> 00:03:59,100
information on slack so the whole team

00:03:56,250 --> 00:04:02,900
knows ok there's a new site available

00:03:59,100 --> 00:04:02,900
for me that I can develop on

00:04:05,290 --> 00:04:11,480
another example which is also in this

00:04:09,709 --> 00:04:15,110
case and slack is that you can't get

00:04:11,480 --> 00:04:17,420
information like this chat pod for

00:04:15,110 --> 00:04:21,769
example gets the DNS records for a

00:04:17,420 --> 00:04:24,020
domain and as as the laravel Forge

00:04:21,769 --> 00:04:28,610
deployment thing it also shares the

00:04:24,020 --> 00:04:30,530
information with the whole team and then

00:04:28,610 --> 00:04:33,590
chat bots are also great for marketing

00:04:30,530 --> 00:04:35,270
so this is from I don't know if you're

00:04:33,590 --> 00:04:38,140
familiar with TechCrunch it's quite a

00:04:35,270 --> 00:04:40,730
big technology website and what they do

00:04:38,140 --> 00:04:43,250
with facebook Messenger you can write

00:04:40,730 --> 00:04:45,830
the facebook messenger page or they a

00:04:43,250 --> 00:04:49,580
Facebook page and then you can subscribe

00:04:45,830 --> 00:04:53,650
to RSS feeds and then you receive those

00:04:49,580 --> 00:04:56,690
RSS feeds in facebook Messenger and the

00:04:53,650 --> 00:04:58,430
the big advantage of this is that the

00:04:56,690 --> 00:05:00,640
conversion rates for facebook Messenger

00:04:58,430 --> 00:05:04,010
are much higher than traditional email

00:05:00,640 --> 00:05:06,800
which is mostly because it's not so much

00:05:04,010 --> 00:05:09,560
so full of spam right now I mean this is

00:05:06,800 --> 00:05:11,840
probably going to change the more that

00:05:09,560 --> 00:05:18,260
people actually use chat BOTS but right

00:05:11,840 --> 00:05:21,080
now it works pretty good and also there

00:05:18,260 --> 00:05:24,860
is to get started with chat bot it's

00:05:21,080 --> 00:05:30,800
just it's just the right time so this is

00:05:24,860 --> 00:05:34,490
I think in 2015 the number of users in

00:05:30,800 --> 00:05:37,100
the top four messaging applications

00:05:34,490 --> 00:05:39,290
surpassed the number of users in the top

00:05:37,100 --> 00:05:42,770
four social networks so there is a user

00:05:39,290 --> 00:05:45,740
a user base which is just waiting for

00:05:42,770 --> 00:05:48,310
chat bot applications to be available

00:05:45,740 --> 00:05:48,310
for them

00:05:52,030 --> 00:05:57,310
all right so we're developers so let's

00:05:55,840 --> 00:06:00,900
build our own chat bot

00:05:57,310 --> 00:06:04,270
it should be easy right so this is just

00:06:00,900 --> 00:06:06,160
a small overview of all the available

00:06:04,270 --> 00:06:08,530
services that are out there if you want

00:06:06,160 --> 00:06:11,800
to build a chat bot so when you start

00:06:08,530 --> 00:06:13,960
with it you have to choose which service

00:06:11,800 --> 00:06:16,270
do you want to support is it Facebook

00:06:13,960 --> 00:06:19,090
Messenger is a telegram maybe you want

00:06:16,270 --> 00:06:21,700
some as a mass based chat but with in

00:06:19,090 --> 00:06:24,250
Twilio or next move slack

00:06:21,700 --> 00:06:27,430
there's also WeChat which is very

00:06:24,250 --> 00:06:29,080
popular in China for example so you have

00:06:27,430 --> 00:06:34,240
to decide which service you want to use

00:06:29,080 --> 00:06:38,490
and to just step back and show you how

00:06:34,240 --> 00:06:42,250
the chat BOTS in general works is

00:06:38,490 --> 00:06:46,810
actually for all these systems it's the

00:06:42,250 --> 00:06:48,760
same so you register your an application

00:06:46,810 --> 00:06:51,490
and a developer site for example for

00:06:48,760 --> 00:06:54,910
Facebook and then you give Facebook and

00:06:51,490 --> 00:06:57,750
URL for a web hook and what happens then

00:06:54,910 --> 00:07:00,940
is someone writes to your Facebook page

00:06:57,750 --> 00:07:03,220
Facebook will get the information that

00:07:00,940 --> 00:07:08,290
the user wrote and post it to your web

00:07:03,220 --> 00:07:11,710
book so this is this part and then your

00:07:08,290 --> 00:07:14,290
application needs to validate the

00:07:11,710 --> 00:07:19,030
incoming data and see what was the text

00:07:14,290 --> 00:07:20,800
what user sent the message and after you

00:07:19,030 --> 00:07:26,050
validated it you have to perform the

00:07:20,800 --> 00:07:27,520
actual actual message or action that you

00:07:26,050 --> 00:07:31,720
want to do for example deploying

00:07:27,520 --> 00:07:34,900
something and in between you might also

00:07:31,720 --> 00:07:37,060
need to check are we in a conversation

00:07:34,900 --> 00:07:40,390
has the user talked to the chat but

00:07:37,060 --> 00:07:43,420
before so maybe we need to give

00:07:40,390 --> 00:07:46,090
different information to them and as I

00:07:43,420 --> 00:07:48,640
said this all works in the same way for

00:07:46,090 --> 00:07:51,730
every service but every messaging

00:07:48,640 --> 00:07:54,180
service does it on its own so Facebook

00:07:51,730 --> 00:07:59,680
for example sends JSON data as post

00:07:54,180 --> 00:08:02,200
WeChat sends raw XML and also when you

00:07:59,680 --> 00:08:06,560
reply back to those services it's very

00:08:02,200 --> 00:08:11,240
different for Facebook you need to send

00:08:06,560 --> 00:08:13,520
the response to an API with Microsoft

00:08:11,240 --> 00:08:16,130
you have to do some oil flow and then

00:08:13,520 --> 00:08:20,600
send the response for a slack you just

00:08:16,130 --> 00:08:24,980
have to respond a JSON string so this

00:08:20,600 --> 00:08:29,660
all works in a different way for each

00:08:24,980 --> 00:08:32,240
driver implementation this is why I came

00:08:29,660 --> 00:08:34,160
up with the idea of having a having an

00:08:32,240 --> 00:08:36,620
abstraction layer on top of all these

00:08:34,160 --> 00:08:40,250
messaging services and that's where

00:08:36,620 --> 00:08:43,450
Batman was pretty much born which is

00:08:40,250 --> 00:08:43,450
this cute little robot

00:08:44,180 --> 00:08:48,470
so Batman is a PHP library its framework

00:08:46,580 --> 00:08:50,090
agnostic you can use it with with

00:08:48,470 --> 00:08:52,940
whichever framework you want

00:08:50,090 --> 00:08:56,120
or without a framework at all you can

00:08:52,940 --> 00:09:00,680
just require it with composer and get

00:08:56,120 --> 00:09:03,320
started right away or I also provide a

00:09:00,680 --> 00:09:08,840
thing which I call Batman studio which

00:09:03,320 --> 00:09:11,690
is a laravel application that has the

00:09:08,840 --> 00:09:14,390
Batman dependency underneath and just

00:09:11,690 --> 00:09:18,350
provides some nicer tools if you want to

00:09:14,390 --> 00:09:20,150
configure chat BOTS but it's not it's

00:09:18,350 --> 00:09:21,920
not a dependency you don't need to use

00:09:20,150 --> 00:09:26,720
Batman's studio you can use it in your

00:09:21,920 --> 00:09:28,790
application as well so when you start

00:09:26,720 --> 00:09:32,540
developing with Batman let's say you

00:09:28,790 --> 00:09:35,840
just created a new Batman studio

00:09:32,540 --> 00:09:38,570
application and so this is one of those

00:09:35,840 --> 00:09:41,000
features in the rural application it has

00:09:38,570 --> 00:09:42,920
a artisan command that allows you to

00:09:41,000 --> 00:09:46,520
list all the available drivers for

00:09:42,920 --> 00:09:48,590
Batman so here we see that for example

00:09:46,520 --> 00:09:51,560
the web driver is already installed and

00:09:48,590 --> 00:09:54,500
if we want to connect our chat bot with

00:09:51,560 --> 00:09:58,310
facebook Messenger we can just install

00:09:54,500 --> 00:10:00,020
the Facebook dependency if you don't use

00:09:58,310 --> 00:10:05,630
bot mentsuyu this would just be a

00:10:00,020 --> 00:10:07,610
composer require and after you you

00:10:05,630 --> 00:10:09,650
installed the driver you will have a

00:10:07,610 --> 00:10:12,470
configuration file where you just need

00:10:09,650 --> 00:10:14,330
to pass in your tokens for the messaging

00:10:12,470 --> 00:10:15,020
service that you use and then you're

00:10:14,330 --> 00:10:17,750
good to go

00:10:15,020 --> 00:10:19,340
so it's really just focused on having

00:10:17,750 --> 00:10:26,480
one code base for all mess

00:10:19,340 --> 00:10:28,850
services okay so the fundamentals of a

00:10:26,480 --> 00:10:30,980
chatbot is pretty simple so it's like

00:10:28,850 --> 00:10:33,140
the three main pillars you have to hear

00:10:30,980 --> 00:10:36,470
what the user says you have to process

00:10:33,140 --> 00:10:38,240
it and then you have to respond back so

00:10:36,470 --> 00:10:42,970
let's take a look at how this would look

00:10:38,240 --> 00:10:45,080
with Batman the API is pretty

00:10:42,970 --> 00:10:48,200
straightforward I guess so

00:10:45,080 --> 00:10:52,790
in this specific example we say when the

00:10:48,200 --> 00:10:55,460
chat bot hears the word keyword we will

00:10:52,790 --> 00:10:57,380
execute the closure function it will

00:10:55,460 --> 00:10:59,600
receive the chat bot instance and then

00:10:57,380 --> 00:11:02,330
we can just use bot reply and reply a

00:10:59,600 --> 00:11:06,110
string back or if you don't want

00:11:02,330 --> 00:11:08,900
closures you can also use a class and

00:11:06,110 --> 00:11:10,250
then an add sign and the method so this

00:11:08,900 --> 00:11:12,200
would in this case create a new

00:11:10,250 --> 00:11:17,000
controler instance and call the handle

00:11:12,200 --> 00:11:18,800
method on it and so with this you just

00:11:17,000 --> 00:11:20,990
define all the different commands that

00:11:18,800 --> 00:11:23,270
your chat bot can listen to and at the

00:11:20,990 --> 00:11:24,950
end of it you just say listen and this

00:11:23,270 --> 00:11:30,050
will loop through all the commands

00:11:24,950 --> 00:11:32,900
available so since this presentation is

00:11:30,050 --> 00:11:35,590
basically running on apartment studio I

00:11:32,900 --> 00:11:38,210
can just try it out so if I type keyword

00:11:35,590 --> 00:11:41,840
it goes into the closure and it says

00:11:38,210 --> 00:11:44,180
hello my friend and now this is just the

00:11:41,840 --> 00:11:46,760
web driver which you could also use in

00:11:44,180 --> 00:11:48,920
your web application and if you just

00:11:46,760 --> 00:11:55,270
connect this with Facebook it just works

00:11:48,920 --> 00:11:58,310
the same way so this for example is the

00:11:55,270 --> 00:11:59,930
integration with telegram with just the

00:11:58,310 --> 00:12:02,420
same codebase I just installed the

00:11:59,930 --> 00:12:04,220
telegram driver and configured it and

00:12:02,420 --> 00:12:07,030
this is what it would look like in

00:12:04,220 --> 00:12:07,030
facebook Messenger

00:12:10,269 --> 00:12:15,610
of course you're not limited to just

00:12:12,889 --> 00:12:18,500
reply one text so if I type tell me more

00:12:15,610 --> 00:12:20,329
the chat would would call the reply

00:12:18,500 --> 00:12:26,750
function multiple times and it would

00:12:20,329 --> 00:12:31,970
just apply multiple texts now I said

00:12:26,750 --> 00:12:35,480
that you can use Batman to have one code

00:12:31,970 --> 00:12:37,819
base for multiple drivers but maybe you

00:12:35,480 --> 00:12:40,490
want to have different commands for

00:12:37,819 --> 00:12:43,579
slack then for a telegram for example

00:12:40,490 --> 00:12:46,100
maybe the chat bots admins are only in

00:12:43,579 --> 00:12:48,199
slack and the other users are in

00:12:46,100 --> 00:12:52,160
telegram then you can use the group

00:12:48,199 --> 00:12:55,009
method with Batman give it the driver

00:12:52,160 --> 00:12:57,949
and all these commands will only be

00:12:55,009 --> 00:13:00,019
available for slack and all these

00:12:57,949 --> 00:13:02,509
commands in this group will only be

00:13:00,019 --> 00:13:08,379
available for telegram so this is a nice

00:13:02,509 --> 00:13:12,800
way to just structure your chat bot now

00:13:08,379 --> 00:13:14,449
listening to just strings is nice but we

00:13:12,800 --> 00:13:16,639
actually want to receive some

00:13:14,449 --> 00:13:18,829
information from our users so the

00:13:16,639 --> 00:13:21,740
easiest way to do this with Batman is

00:13:18,829 --> 00:13:26,899
having just curly braces around

00:13:21,740 --> 00:13:29,350
parameters and this will just be added

00:13:26,899 --> 00:13:32,720
to the closure as a second parameter

00:13:29,350 --> 00:13:36,230
which you can then use inside of it so

00:13:32,720 --> 00:13:38,569
if I type call me in my cell this will

00:13:36,230 --> 00:13:41,209
get passed it will see that call me and

00:13:38,569 --> 00:13:42,769
then there is some parameter and this

00:13:41,209 --> 00:13:45,379
parameter will be passed to the function

00:13:42,769 --> 00:13:50,839
and here we can just use it to reply

00:13:45,379 --> 00:13:53,269
something and also this isn't limited to

00:13:50,839 --> 00:13:56,389
just one parameter if you use multiple

00:13:53,269 --> 00:14:00,439
they will just get appended to the

00:13:56,389 --> 00:14:06,270
closure function so if I say I am kind

00:14:00,439 --> 00:14:09,220
of right this works too

00:14:06,270 --> 00:14:11,050
if you want even more control of these

00:14:09,220 --> 00:14:12,310
parameters maybe we want to validate

00:14:11,050 --> 00:14:16,480
them you can also use regular

00:14:12,310 --> 00:14:19,000
expressions so in this case I give it

00:14:16,480 --> 00:14:23,230
just the number of regular expression to

00:14:19,000 --> 00:14:28,890
only accept numbers so if I type I am 32

00:14:23,230 --> 00:14:31,899
years old which I am again all the

00:14:28,890 --> 00:14:34,240
regular expression matching groups will

00:14:31,899 --> 00:14:42,160
just be appended to the closure and you

00:14:34,240 --> 00:14:50,680
can use it in there and if I I am 30

00:14:42,160 --> 00:14:52,839
years old it wouldn't match now

00:14:50,680 --> 00:14:54,760
depending on the messaging services that

00:14:52,839 --> 00:14:58,029
you use you could also listen not only

00:14:54,760 --> 00:15:00,339
to text input but to attachments that

00:14:58,029 --> 00:15:03,399
your user sends to your chat bot so for

00:15:00,339 --> 00:15:06,580
example with Facebook or slack or

00:15:03,399 --> 00:15:10,990
telegram your users can send you images

00:15:06,580 --> 00:15:13,810
and with Batman you have a receives

00:15:10,990 --> 00:15:16,180
images function and it would just give

00:15:13,810 --> 00:15:22,930
you an array of images that you can

00:15:16,180 --> 00:15:24,580
access in the closure and also this just

00:15:22,930 --> 00:15:26,620
depending on the service and what

00:15:24,580 --> 00:15:29,170
functions are available in your services

00:15:26,620 --> 00:15:33,279
you can use it for videos as well all

00:15:29,170 --> 00:15:35,260
you or I think it works for Facebook to

00:15:33,279 --> 00:15:37,750
Facebook and telegram for example and I

00:15:35,260 --> 00:15:39,610
have the ability that your user can send

00:15:37,750 --> 00:15:41,620
a location and then you get a location

00:15:39,610 --> 00:15:48,940
object you get the latitude and the

00:15:41,620 --> 00:15:52,750
longitude you'd just saw that as I as I

00:15:48,940 --> 00:15:55,810
wrote I am 30 years old with the 30 as a

00:15:52,750 --> 00:15:58,329
word that you can also have fallback

00:15:55,810 --> 00:15:59,860
methods so this is especially useful if

00:15:58,329 --> 00:16:02,709
you want to give your users some

00:15:59,860 --> 00:16:06,880
information on how to actually use your

00:16:02,709 --> 00:16:09,700
chat bot so this method will always be

00:16:06,880 --> 00:16:12,190
executed when you just type in anything

00:16:09,700 --> 00:16:15,370
that doesn't match one of the commands

00:16:12,190 --> 00:16:17,820
so any garbage will go to the fallback

00:16:15,370 --> 00:16:17,820
method

00:16:19,460 --> 00:16:27,720
now Batman also provides the ability to

00:16:24,000 --> 00:16:30,480
store information that's related to the

00:16:27,720 --> 00:16:32,550
user so this was actually the code that

00:16:30,480 --> 00:16:36,210
was executed when I wrote I am 32 years

00:16:32,550 --> 00:16:39,090
old and what it does is it uses the user

00:16:36,210 --> 00:16:41,280
storage and then it saves which is just

00:16:39,090 --> 00:16:46,520
a key value store it's just a JSON file

00:16:41,280 --> 00:16:49,590
underneath and it just stores the age to

00:16:46,520 --> 00:16:53,190
the user so this is bound to the user

00:16:49,590 --> 00:16:56,670
that interacts with your chat pod which

00:16:53,190 --> 00:16:58,860
gets bound by the user ID from the

00:16:56,670 --> 00:17:04,829
messaging service so if you if someone

00:16:58,860 --> 00:17:08,459
else types how old am I we're just

00:17:04,829 --> 00:17:10,620
retrieving it from the storage and this

00:17:08,459 --> 00:17:16,770
will only be available to the user that

00:17:10,620 --> 00:17:18,329
actually has this in storage and in

00:17:16,770 --> 00:17:21,420
addition to the user storage there are

00:17:18,329 --> 00:17:24,120
two other storage types available one is

00:17:21,420 --> 00:17:27,900
the channel storage so this is useful

00:17:24,120 --> 00:17:30,630
for messaging services that have a kind

00:17:27,900 --> 00:17:32,670
of channel concept for example telegram

00:17:30,630 --> 00:17:35,970
has grouped group chats and group

00:17:32,670 --> 00:17:38,790
messages this would be a channel or for

00:17:35,970 --> 00:17:41,910
slack so you could store channel

00:17:38,790 --> 00:17:44,610
specific information and even one way

00:17:41,910 --> 00:17:47,910
higher would be the driver storage so

00:17:44,610 --> 00:17:51,180
that you can save arbitrary information

00:17:47,910 --> 00:17:54,080
to the Twitter or slack or Facebook

00:17:51,180 --> 00:17:54,080
driver instance

00:17:56,750 --> 00:18:02,820
but man also gives you the ability to

00:17:59,400 --> 00:18:05,790
react to certain events that happen in

00:18:02,820 --> 00:18:08,730
the whole lifecycle of your chatbot so

00:18:05,790 --> 00:18:10,740
for example with slack there is a team

00:18:08,730 --> 00:18:14,880
joint event that gets executed every

00:18:10,740 --> 00:18:17,930
time someone joins the channel and then

00:18:14,880 --> 00:18:20,700
you can just listen for this event and

00:18:17,930 --> 00:18:22,890
you get the payload of the event and

00:18:20,700 --> 00:18:25,590
then you can reply and just greet

00:18:22,890 --> 00:18:29,100
everyone that joins the channel or at

00:18:25,590 --> 00:18:31,140
the room with Facebook you have an event

00:18:29,100 --> 00:18:33,060
that gets executed every time the

00:18:31,140 --> 00:18:36,750
message that you send was actually read

00:18:33,060 --> 00:18:39,180
so you know that the payload has the

00:18:36,750 --> 00:18:41,160
user ID and then you can maybe perform

00:18:39,180 --> 00:18:43,950
some kind of logging something like that

00:18:41,160 --> 00:18:46,140
or just another example for telegram

00:18:43,950 --> 00:18:48,990
there is left chat member and then you

00:18:46,140 --> 00:18:52,220
can say goodbye but the user wouldn't

00:18:48,990 --> 00:18:52,220
see it because he already left

00:18:52,940 --> 00:18:58,950
okay so right now we always had just

00:18:56,190 --> 00:19:03,540
textual responses but it's also possible

00:18:58,950 --> 00:19:06,060
to reply with structured objects so

00:19:03,540 --> 00:19:09,150
messages that have attachments so in

00:19:06,060 --> 00:19:13,020
this case we just create an outgoing

00:19:09,150 --> 00:19:16,290
message object with a text and attach an

00:19:13,020 --> 00:19:20,880
image to it with an URL so if I type

00:19:16,290 --> 00:19:30,210
give me images it shows me the Batman

00:19:20,880 --> 00:19:34,760
logo and also this is just the same with

00:19:30,210 --> 00:19:34,760
videos so here's bigger break

00:19:37,830 --> 00:19:43,030
so this is a little bit more complex

00:19:40,750 --> 00:19:44,980
there's also driver specific responses

00:19:43,030 --> 00:19:47,470
so Facebook for example has this concept

00:19:44,980 --> 00:19:50,890
of templates that you can use in your

00:19:47,470 --> 00:19:55,200
chat pod application which is like a

00:19:50,890 --> 00:19:58,300
predefined layout that Facebook defines

00:19:55,200 --> 00:20:01,510
so in this case it's a list template

00:19:58,300 --> 00:20:05,260
which is just like like a list that has

00:20:01,510 --> 00:20:09,250
two elements each element has a title a

00:20:05,260 --> 00:20:11,920
subtitle an image and a button and with

00:20:09,250 --> 00:20:15,190
this you can create these templates and

00:20:11,920 --> 00:20:19,030
a object-oriented way and reply it just

00:20:15,190 --> 00:20:21,430
at the bottom and this is what it would

00:20:19,030 --> 00:20:22,900
look like on Facebook now this code

00:20:21,430 --> 00:20:26,140
wouldn't work on any other driver

00:20:22,900 --> 00:20:31,930
because this is Facebook specific but

00:20:26,140 --> 00:20:33,610
you can make use of it and this is just

00:20:31,930 --> 00:20:40,060
another example with the button template

00:20:33,610 --> 00:20:45,070
that Facebook provides and this is what

00:20:40,060 --> 00:20:48,250
it would look like okay I think it's

00:20:45,070 --> 00:20:51,190
maybe a bit too early for pizza but we

00:20:48,250 --> 00:20:53,950
might have everything in place to order

00:20:51,190 --> 00:20:57,550
pizza now with a chatbot right so maybe

00:20:53,950 --> 00:20:59,470
the user would say I want a large cap

00:20:57,550 --> 00:21:03,580
each other with extra cheese delivered

00:20:59,470 --> 00:21:05,740
to Holiday Inn City Center unic well we

00:21:03,580 --> 00:21:10,180
could do that with this fancy regular

00:21:05,740 --> 00:21:12,430
expression right well we normally

00:21:10,180 --> 00:21:15,460
wouldn't do it this way because if we

00:21:12,430 --> 00:21:17,440
think about it Pizza ordering is just a

00:21:15,460 --> 00:21:19,660
conversation so when I do it in real

00:21:17,440 --> 00:21:21,850
life I pick up the phone I call someone

00:21:19,660 --> 00:21:23,770
and then it's a conversation that

00:21:21,850 --> 00:21:26,440
happens so I tell them what pizza I want

00:21:23,770 --> 00:21:30,520
he asks me where I wanted to deliver it

00:21:26,440 --> 00:21:32,280
stuff like that so for this case Batman

00:21:30,520 --> 00:21:35,140
also has the ability to use

00:21:32,280 --> 00:21:37,330
conversations this is the easiest

00:21:35,140 --> 00:21:41,770
version of a conversation which is just

00:21:37,330 --> 00:21:44,320
one question so this gets triggered if

00:21:41,770 --> 00:21:47,830
the user types I want images and then

00:21:44,320 --> 00:21:51,039
the bot will ask ok which images

00:21:47,830 --> 00:21:51,820
and when the user answers to this

00:21:51,039 --> 00:21:54,399
question

00:21:51,820 --> 00:21:57,640
the next closure will get called with

00:21:54,399 --> 00:21:59,880
the answer and then this case we can

00:21:57,640 --> 00:22:04,269
just get the text of the answer and

00:21:59,880 --> 00:22:12,279
return an image so if I type I want

00:22:04,269 --> 00:22:16,179
images let me just feel that all love

00:22:12,279 --> 00:22:22,299
cat images so this is just the context

00:22:16,179 --> 00:22:25,960
and if I would type any any other

00:22:22,299 --> 00:22:29,769
commands to this answer it wouldn't call

00:22:25,960 --> 00:22:32,830
any other of the of the commands I might

00:22:29,769 --> 00:22:37,120
listen to so this is really bound to the

00:22:32,830 --> 00:22:40,029
question contexts now with the pizza

00:22:37,120 --> 00:22:42,309
conversation this isn't as simple as

00:22:40,029 --> 00:22:44,710
just one question because you might have

00:22:42,309 --> 00:22:48,279
multiple questions that you want to ask

00:22:44,710 --> 00:22:50,559
so there is a conversation object that

00:22:48,279 --> 00:22:53,500
you can use and extend on it's an

00:22:50,559 --> 00:22:55,720
abstract class and then you can just

00:22:53,500 --> 00:22:58,269
build your conversation classes that you

00:22:55,720 --> 00:23:02,440
get could you reuse throughout your

00:22:58,269 --> 00:23:04,570
application show a chatbot and the run

00:23:02,440 --> 00:23:07,360
method in a conversation is always the

00:23:04,570 --> 00:23:09,730
entry point so you always have you

00:23:07,360 --> 00:23:11,470
always need a run method that gets

00:23:09,730 --> 00:23:14,620
executed the first time the conversation

00:23:11,470 --> 00:23:16,899
starts so with the pizza example we

00:23:14,620 --> 00:23:20,740
could have a what pizza sighs do you

00:23:16,899 --> 00:23:23,830
want question and we get the answer and

00:23:20,740 --> 00:23:28,289
we can then just store it as an internal

00:23:23,830 --> 00:23:31,990
property on the conversation class and

00:23:28,289 --> 00:23:35,139
what you would do next is once we get

00:23:31,990 --> 00:23:39,850
the answer of size we can ask for the

00:23:35,139 --> 00:23:42,309
topping so this would be another

00:23:39,850 --> 00:23:44,740
question that asks what kind of topping

00:23:42,309 --> 00:23:49,380
do you want we store the answer as a

00:23:44,740 --> 00:23:49,380
property and ask for the address

00:23:49,639 --> 00:23:55,609
and this would be basically just the

00:23:53,119 --> 00:23:58,009
code for giving out the information that

00:23:55,609 --> 00:24:03,799
was stored inside of this conversation

00:23:58,009 --> 00:24:06,289
flow and to trigger these conversation

00:24:03,799 --> 00:24:08,419
but matt has a start conversation method

00:24:06,289 --> 00:24:13,509
that should just give an instance of the

00:24:08,419 --> 00:24:16,700
conversation class so to give it a try I

00:24:13,509 --> 00:24:17,179
want pizza it asks me what Pizza size do

00:24:16,700 --> 00:24:21,979
you want

00:24:17,179 --> 00:24:25,999
let's say XXL what kind of topping do

00:24:21,979 --> 00:24:31,519
you want I mean where can we deliver a

00:24:25,999 --> 00:24:33,440
tasty pizza all you day in so then the

00:24:31,519 --> 00:24:35,329
conversation has ended and we get all

00:24:33,440 --> 00:24:37,099
the information that was actually

00:24:35,329 --> 00:24:44,059
collected during this whole conversation

00:24:37,099 --> 00:24:48,079
process now there's one issue with this

00:24:44,059 --> 00:24:51,619
maybe the pizza delivery service where I

00:24:48,079 --> 00:24:54,379
want to ordered doesn't have a XXL pizza

00:24:51,619 --> 00:24:56,690
or the user enters I don't know like a

00:24:54,379 --> 00:24:59,289
wagon wheel and they don't have wagon

00:24:56,690 --> 00:25:02,239
wheel pizzas so what you can do instead

00:24:59,289 --> 00:25:04,639
with the messaging services that support

00:25:02,239 --> 00:25:07,549
this is you can add buttons to your

00:25:04,639 --> 00:25:10,669
questions so you just can create a

00:25:07,549 --> 00:25:13,639
question object with a text and add

00:25:10,669 --> 00:25:15,829
buttons to it so the label of the button

00:25:13,639 --> 00:25:17,959
in this case would be supersize and the

00:25:15,829 --> 00:25:23,029
value that you can use internally would

00:25:17,959 --> 00:25:27,589
be XSL or large and L and I just called

00:25:23,029 --> 00:25:30,619
this better pizza so this is what it

00:25:27,589 --> 00:25:33,739
would look like in the web driver so I

00:25:30,619 --> 00:25:37,570
can say supersize what topping do you

00:25:33,739 --> 00:25:41,320
want I want a hamburger on my pizza and

00:25:37,570 --> 00:25:41,320
again eunuch

00:25:42,480 --> 00:25:51,190
okay so and this is than the information

00:25:48,250 --> 00:25:56,380
that we get from the buttons so we can

00:25:51,190 --> 00:25:57,910
get the values out of the button so this

00:25:56,380 --> 00:26:00,280
allows you to structure your application

00:25:57,910 --> 00:26:04,210
code a bit better your compensation code

00:26:00,280 --> 00:26:08,190
and this is what it would look like in

00:26:04,210 --> 00:26:15,460
telegram as it supports these buttons or

00:26:08,190 --> 00:26:17,409
in Facebook okay we could take the whole

00:26:15,460 --> 00:26:19,299
Pizza ordering thing even one step

00:26:17,409 --> 00:26:21,880
further by using natural language

00:26:19,299 --> 00:26:24,039
processing so natural language

00:26:21,880 --> 00:26:26,740
processing basically means that we have

00:26:24,039 --> 00:26:28,590
a sentence like hey calendar scheduled

00:26:26,740 --> 00:26:31,600
dinner with Nicole at 8:00 p.m. tomorrow

00:26:28,590 --> 00:26:34,419
we use this sentence give it to a

00:26:31,600 --> 00:26:37,240
service and this service will then pull

00:26:34,419 --> 00:26:41,740
out information from this sentence that

00:26:37,240 --> 00:26:43,330
we can use in our program so we once we

00:26:41,740 --> 00:26:45,880
give it the sentence the service would

00:26:43,330 --> 00:26:49,360
detect okay the intent of this message

00:26:45,880 --> 00:26:52,450
is we want to create a meeting and this

00:26:49,360 --> 00:26:55,299
meeting intent has different entities so

00:26:52,450 --> 00:26:58,330
the name would be dinner with Nicole the

00:26:55,299 --> 00:27:03,090
invitee would be Nicole and the time

00:26:58,330 --> 00:27:03,090
would be well tomorrow at 8:00 p.m. and

00:27:03,780 --> 00:27:09,480
there are there are a few more services

00:27:07,120 --> 00:27:12,940
that provide natural language processing

00:27:09,480 --> 00:27:16,179
so those are pretty much like the big

00:27:12,940 --> 00:27:19,360
three API AI which was renamed a few

00:27:16,179 --> 00:27:22,740
weeks ago to dialog flow it's from

00:27:19,360 --> 00:27:25,330
Google and it's free there's with AI

00:27:22,740 --> 00:27:27,820
which is also free but they have some

00:27:25,330 --> 00:27:33,490
rate limits once you hit a specific

00:27:27,820 --> 00:27:36,100
number of API calls and there's which is

00:27:33,490 --> 00:27:38,770
very cool it's the service called rasa

00:27:36,100 --> 00:27:40,539
and Lu and this is an open-source Python

00:27:38,770 --> 00:27:45,970
server that you can run locally on your

00:27:40,539 --> 00:27:49,360
server so you don't have to give all the

00:27:45,970 --> 00:27:51,400
information a way to like Google maybe

00:27:49,360 --> 00:27:53,250
you don't want that depending on the

00:27:51,400 --> 00:27:56,740
shepherd need

00:27:53,250 --> 00:27:59,710
and this is what it would look like if

00:27:56,740 --> 00:28:01,930
you trained the natural language

00:27:59,710 --> 00:28:05,140
processing so you give it a few

00:28:01,930 --> 00:28:07,090
sentences that your users might give

00:28:05,140 --> 00:28:09,820
your chat bot or your application and

00:28:07,090 --> 00:28:12,460
then within these sentences you just

00:28:09,820 --> 00:28:14,950
define what the entities are so in this

00:28:12,460 --> 00:28:19,570
case small would be the size margarita

00:28:14,950 --> 00:28:21,640
would be the entity of the type and this

00:28:19,570 --> 00:28:24,730
is automatically detected by these

00:28:21,640 --> 00:28:26,950
services so it's an address you don't

00:28:24,730 --> 00:28:30,040
have to do this yourself most of these

00:28:26,950 --> 00:28:33,040
services automatically detects specific

00:28:30,040 --> 00:28:41,040
entities like zip codes country names

00:28:33,040 --> 00:28:44,020
addresses units things like that and

00:28:41,040 --> 00:28:47,050
with Batman this is actually pretty easy

00:28:44,020 --> 00:28:49,630
because but man has a middleware concept

00:28:47,050 --> 00:28:51,910
where we can hook in specific

00:28:49,630 --> 00:28:54,400
applications or parts of the application

00:28:51,910 --> 00:28:58,360
so in this case we would just create a

00:28:54,400 --> 00:29:01,390
API ai middleware give it our token and

00:28:58,360 --> 00:29:04,900
tell it we want to listen for the

00:29:01,390 --> 00:29:07,860
incoming action so this action is just

00:29:04,900 --> 00:29:11,470
the term that's used for API API AI

00:29:07,860 --> 00:29:14,650
which is just the intent name and then

00:29:11,470 --> 00:29:17,170
we say okay but man use this middleware

00:29:14,650 --> 00:29:19,540
for every message that you receive so

00:29:17,170 --> 00:29:23,470
every message that gets passed to your

00:29:19,540 --> 00:29:26,710
chat bot will first be sent to API AI or

00:29:23,470 --> 00:29:29,860
razza and LU or whatever and then we can

00:29:26,710 --> 00:29:36,490
say when you hear ordered pizza which is

00:29:29,860 --> 00:29:39,460
this message action then get some extra

00:29:36,490 --> 00:29:43,080
information that we extracted from API

00:29:39,460 --> 00:29:46,840
ai and then we can just reply them and

00:29:43,080 --> 00:29:49,690
we tell Batman that you only listen to

00:29:46,840 --> 00:29:51,580
this command if it is from this

00:29:49,690 --> 00:29:55,740
middleware so if someone just types

00:29:51,580 --> 00:29:55,740
ordered pizza this wouldn't get called

00:29:56,790 --> 00:30:02,770
now I have this rather an elusive

00:30:00,400 --> 00:30:10,380
running locally and then I could say for

00:30:02,770 --> 00:30:15,430
example I want a large salami it's with

00:30:10,380 --> 00:30:17,290
extra cheese something like that and out

00:30:15,430 --> 00:30:19,960
of this tax it would detect okay the

00:30:17,290 --> 00:30:23,020
type of the pizza is salami the size is

00:30:19,960 --> 00:30:27,550
large and topping on top of it is extra

00:30:23,020 --> 00:30:35,560
and cheese or I don't know something

00:30:27,550 --> 00:30:41,140
like I am hungry give me a medium with

00:30:35,560 --> 00:30:43,300
onions so this would just get passed to

00:30:41,140 --> 00:30:48,880
these services and they extract the

00:30:43,300 --> 00:30:52,410
information for you now what I showed

00:30:48,880 --> 00:30:55,060
you is always some reactions so the user

00:30:52,410 --> 00:30:57,940
talks to your chat bot or your messaging

00:30:55,060 --> 00:31:00,490
service and you reply but you can also

00:30:57,940 --> 00:31:03,010
originate messages so for example you

00:31:00,490 --> 00:31:06,190
could have a cron job that sends out

00:31:03,010 --> 00:31:10,030
status updates to your slack channel or

00:31:06,190 --> 00:31:13,360
to Facebook or telegram to specific

00:31:10,030 --> 00:31:17,710
users using this just the same method

00:31:13,360 --> 00:31:20,020
and just pass it the user ID or what's

00:31:17,710 --> 00:31:23,020
even more powerful is you have also the

00:31:20,020 --> 00:31:25,240
ability to originate conversations so

00:31:23,020 --> 00:31:27,130
you can start a conversation and on your

00:31:25,240 --> 00:31:29,950
own and send it to someone so for

00:31:27,130 --> 00:31:33,850
example after a conference like this you

00:31:29,950 --> 00:31:36,730
could send out feedback conversations

00:31:33,850 --> 00:31:38,620
through facebook messenger with buttons

00:31:36,730 --> 00:31:41,400
where people just rate the talks

00:31:38,620 --> 00:31:41,400
something of that

00:31:43,800 --> 00:31:53,440
okay so testing the whole thing Batman

00:31:50,530 --> 00:31:55,630
is pretty much the only chopped up

00:31:53,440 --> 00:31:58,090
framework that has testing really built

00:31:55,630 --> 00:32:02,500
into it because I think it's really

00:31:58,090 --> 00:32:05,670
super important and it has a few nice

00:32:02,500 --> 00:32:08,950
helpful methods to write really TDD

00:32:05,670 --> 00:32:12,220
chatbot applications so with your tests

00:32:08,950 --> 00:32:17,280
you have a bot instance that you can use

00:32:12,220 --> 00:32:20,350
to send fake messages and then assert

00:32:17,280 --> 00:32:24,340
replies so this is just a very simple

00:32:20,350 --> 00:32:27,280
example you can say okay this bot it

00:32:24,340 --> 00:32:33,940
receives the message test and then we

00:32:27,280 --> 00:32:37,750
assert that the reply is hello and in

00:32:33,940 --> 00:32:41,440
addition to this you also have various

00:32:37,750 --> 00:32:43,900
more advanced assertions available so

00:32:41,440 --> 00:32:46,450
you can assert that the reply is an

00:32:43,900 --> 00:32:48,100
array so you can assert that the reply

00:32:46,450 --> 00:32:51,370
is not something that it's a question

00:32:48,100 --> 00:32:54,730
that it's a template that maybe it's

00:32:51,370 --> 00:32:59,380
just a raw string so it really gives you

00:32:54,730 --> 00:33:07,540
a lot of information and tools to test

00:32:59,380 --> 00:33:09,040
your chatbot applications and I just

00:33:07,540 --> 00:33:11,260
talked about this briefly with the

00:33:09,040 --> 00:33:15,940
natural language processing you can

00:33:11,260 --> 00:33:18,010
extend Batman with middleware this is

00:33:15,940 --> 00:33:21,790
pretty much the middleware system and

00:33:18,010 --> 00:33:25,540
the flow of where you can hook into with

00:33:21,790 --> 00:33:28,450
your application so you can really

00:33:25,540 --> 00:33:31,090
extend the way that your chat pod works

00:33:28,450 --> 00:33:33,130
for example if you want to lock every

00:33:31,090 --> 00:33:35,320
incoming message you can just pass

00:33:33,130 --> 00:33:39,190
everything to the received middleware

00:33:35,320 --> 00:33:41,050
and to the sending middleware you can

00:33:39,190 --> 00:33:43,540
change the way that messages get matched

00:33:41,050 --> 00:33:45,810
for example you might want your messages

00:33:43,540 --> 00:33:48,400
only to get matched from some

00:33:45,810 --> 00:33:52,200
administrators so you would create your

00:33:48,400 --> 00:33:52,200
own matching middleware

00:33:53,490 --> 00:34:01,470
so it's it's very flexible if you want

00:33:57,059 --> 00:34:03,330
to extend on it and well yeah this is

00:34:01,470 --> 00:34:06,809
just an example of the log of middleware

00:34:03,330 --> 00:34:09,510
I just talked about that you can just

00:34:06,809 --> 00:34:16,950
apply it to the sending and receiving

00:34:09,510 --> 00:34:18,810
middleware and in addition to just

00:34:16,950 --> 00:34:21,000
having custom middleware you can also

00:34:18,810 --> 00:34:24,000
create custom drivers so for example

00:34:21,000 --> 00:34:25,619
maybe you have you don't want to support

00:34:24,000 --> 00:34:27,929
Facebook Messenger but you have a

00:34:25,619 --> 00:34:29,929
company internal Chapa tool then you can

00:34:27,929 --> 00:34:33,810
just create your own driver class and

00:34:29,929 --> 00:34:36,300
use it with Batman it's not limited to

00:34:33,810 --> 00:34:39,810
HTTP you can also use it for other

00:34:36,300 --> 00:34:43,919
protocols for example slack also has

00:34:39,810 --> 00:34:46,740
some WebSocket based services available

00:34:43,919 --> 00:34:51,649
so there's also a WebSocket service so

00:34:46,740 --> 00:34:51,649
you are in no way limited to that either

00:34:54,740 --> 00:35:01,890
okay I think I rushed a bit through it

00:34:58,369 --> 00:35:03,420
that's all I have so if you want more

00:35:01,890 --> 00:35:05,430
about it you want to know more about

00:35:03,420 --> 00:35:11,130
Batman you can find the official

00:35:05,430 --> 00:35:13,260
documentation at Batman dot IO which

00:35:11,130 --> 00:35:16,530
also links to the github repository if

00:35:13,260 --> 00:35:18,780
you want to look at the code and if

00:35:16,530 --> 00:35:20,760
you're into the whole chat pod kind of

00:35:18,780 --> 00:35:23,099
thing you can also take a look at built

00:35:20,760 --> 00:35:29,339
a chat pod IO which is a video course

00:35:23,099 --> 00:35:33,869
I'm going to record so yeah take a look

00:35:29,339 --> 00:35:37,580
at it do you have questions I think we

00:35:33,869 --> 00:35:37,580
have plenty of time for questions

00:35:42,329 --> 00:35:49,240
sorry yes

00:35:45,910 --> 00:35:51,640
so you mean buttons inside a slack yeah

00:35:49,240 --> 00:36:03,849
just as I saw it with the question that

00:35:51,640 --> 00:36:07,930
with the add button method here so if

00:36:03,849 --> 00:36:11,170
you use the the Add button syntax and

00:36:07,930 --> 00:36:14,230
you just use it with a slack then this

00:36:11,170 --> 00:36:17,440
will automatically be converted to the

00:36:14,230 --> 00:36:19,359
slack buttons yes so this really just

00:36:17,440 --> 00:36:21,430
depends on the messaging service that

00:36:19,359 --> 00:36:30,190
you use if the service supports buttons

00:36:21,430 --> 00:36:40,109
it's supported in Bodmin two more

00:36:30,190 --> 00:36:43,240
questions yeah this is also very

00:36:40,109 --> 00:36:47,470
messaging service dependent so for

00:36:43,240 --> 00:36:49,480
example with Facebook you only get the

00:36:47,470 --> 00:36:53,260
first name the last name and the profile

00:36:49,480 --> 00:36:57,369
image and for Facebook you also have the

00:36:53,260 --> 00:37:00,549
ability to link accounts so you're the

00:36:57,369 --> 00:37:02,740
facebook messenger user ID is completely

00:37:00,549 --> 00:37:04,960
different from the Facebook user ID and

00:37:02,740 --> 00:37:08,020
when you link accounts you can get more

00:37:04,960 --> 00:37:10,390
information but it just depends on the

00:37:08,020 --> 00:37:12,730
messaging service WeChat for example

00:37:10,390 --> 00:37:15,700
shows everything it shows where you live

00:37:12,730 --> 00:37:20,529
it shows the telephone number I think

00:37:15,700 --> 00:37:24,190
just everything is in there yeah but

00:37:20,529 --> 00:37:26,950
there is a which is not in the slides

00:37:24,190 --> 00:37:28,750
there's a get user method and it

00:37:26,950 --> 00:37:31,210
retrieves all the available information

00:37:28,750 --> 00:37:34,500
from the messaging service that is

00:37:31,210 --> 00:37:34,500
available to the user yeah

00:37:36,910 --> 00:37:56,269
yeah well I don't think there's a web

00:37:52,700 --> 00:37:59,480
hook for this so you want to interact

00:37:56,269 --> 00:38:15,440
with get sup on for example when an

00:37:59,480 --> 00:38:17,750
issue is create or well yeah you just

00:38:15,440 --> 00:38:20,299
have to do some mapping of the slack

00:38:17,750 --> 00:38:22,789
username and the github username which

00:38:20,299 --> 00:38:26,029
you could store in this user storage I

00:38:22,789 --> 00:38:29,029
showed and then you could just inside of

00:38:26,029 --> 00:38:31,819
these method you can just grab the

00:38:29,029 --> 00:38:33,829
repositories so you just have to do this

00:38:31,819 --> 00:38:53,839
mapping of the slack name and the github

00:38:33,829 --> 00:38:56,230
name yeah yes for the commands or you

00:38:53,839 --> 00:39:00,140
can get the information from the user

00:38:56,230 --> 00:39:06,680
but you would need if you have for

00:39:00,140 --> 00:39:09,619
example some static here's methods where

00:39:06,680 --> 00:39:11,750
is it like something like this if you

00:39:09,619 --> 00:39:13,099
have here's give me images and you your

00:39:11,750 --> 00:39:15,650
user rides it in

00:39:13,099 --> 00:39:18,589
I don't know Russian you would need to

00:39:15,650 --> 00:39:20,859
have this also in Russian in this case

00:39:18,589 --> 00:39:20,859
yeah

00:39:27,240 --> 00:39:56,470
more questions well I think you can do

00:39:53,110 --> 00:39:59,290
this with something like API AI so you

00:39:56,470 --> 00:40:00,880
could send every message to the natural

00:39:59,290 --> 00:40:04,450
language processing and I don't know

00:40:00,880 --> 00:40:06,940
like search for curse words and if he

00:40:04,450 --> 00:40:10,270
says maybe he's angry something

00:40:06,940 --> 00:40:13,570
like that but so you can just log every

00:40:10,270 --> 00:40:16,360
message that you receive and use this to

00:40:13,570 --> 00:40:19,330
to process it and find out the mood of

00:40:16,360 --> 00:40:23,200
your customer yeah you could use this

00:40:19,330 --> 00:40:24,910
with custom middleware but I think you

00:40:23,200 --> 00:40:27,990
would need some external service to

00:40:24,910 --> 00:40:45,550
detects if it's if he's happy or not

00:40:27,990 --> 00:40:49,570
yeah yes also so it would support it if

00:40:45,550 --> 00:40:50,950
you pass it in the huge methods because

00:40:49,570 --> 00:40:55,920
underneath it's just a regular

00:40:50,950 --> 00:40:55,920
expression so that would work yeah

00:41:06,690 --> 00:41:12,280
mm well I mean you basically just have

00:41:09,970 --> 00:41:17,070
these commands like in this case give me

00:41:12,280 --> 00:41:17,070
images and you want that to be Chinese

00:41:19,830 --> 00:41:33,430
yeah I'm not an expert on Chinese so I

00:41:29,860 --> 00:41:35,230
don't know but if you could wrap it in a

00:41:33,430 --> 00:41:37,600
regular expression it would work

00:41:35,230 --> 00:41:39,880
otherwise it might be better to use an

00:41:37,600 --> 00:41:43,570
external service like natural language

00:41:39,880 --> 00:41:47,260
processing for this but I don't know

00:41:43,570 --> 00:41:56,440
about Chinese so but on a technology

00:41:47,260 --> 00:41:59,320
base it would work yeah okay okay no

00:41:56,440 --> 00:42:01,010
more questions then thank you all for

00:41:59,320 --> 00:42:04,169
coming

00:42:01,010 --> 00:42:04,169
[Applause]

00:42:08,359 --> 00:42:10,420

YouTube URL: https://www.youtube.com/watch?v=d8Ao5ZlEl8o


