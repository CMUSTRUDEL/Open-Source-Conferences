Title: Async non-blocking Code Reviews | Frank Koornstra
Publication date: 2019-10-10
Playlist: Agile & Culture
Description: 
	Speaker: Frank Koornstra (Usabilla) | https://phpconference.com/speaker/frank-koornstra/

"It’s not personal” but it so is! Code reviews are still one of the biggest sources of conflict in a team and can delay value delivery by days if not weeks. I’d like to tell you why that is but more importantly hand you a method that will let you focus on what’s important: the work. We briefly touch on the psychological mechanics at work during PRs, look at statistics to fuel decisions around commenting, and then combine those two perspectives to create a solid code review etiquette for your team so you can achieve truly async non-blocking code reviews.

🤗 Come, join us at the next International PHP Conference | https://phpconference.com/
👍 Like us on Facebook | https://www.facebook.com/ipc.germany/
👉 Follow us on Twitter | https://twitter.com/phpconference
Captions: 
	00:00:01,550 --> 00:00:04,799
[Music]

00:00:04,819 --> 00:00:12,870
good afternoon Berlin it's nice to see

00:00:09,059 --> 00:00:15,179
hi it's nice to see so many of you here

00:00:12,870 --> 00:00:18,270
I like the talk before you like the talk

00:00:15,179 --> 00:00:20,220
like sound there's a hat come on I

00:00:18,270 --> 00:00:21,949
really like it we use all these static

00:00:20,220 --> 00:00:23,789
analysis tools and then there's a whole

00:00:21,949 --> 00:00:26,910
language that takes care of it it's

00:00:23,789 --> 00:00:28,080
great I'm gonna talk to you about the

00:00:26,910 --> 00:00:29,519
other end of the spectrum though I'm

00:00:28,080 --> 00:00:32,579
gonna talk to you about the process

00:00:29,519 --> 00:00:35,370
about async and non-blocking code

00:00:32,579 --> 00:00:37,980
reviews but first a little bit about

00:00:35,370 --> 00:00:40,710
scribes scribes are the people that

00:00:37,980 --> 00:00:43,469
copied over the Torah the Holy Scripture

00:00:40,710 --> 00:00:46,739
of the Jewish people for hundreds of

00:00:43,469 --> 00:00:49,920
years now and they do that too according

00:00:46,739 --> 00:00:52,289
to very specific rules they take one of

00:00:49,920 --> 00:00:54,750
about 60 to 80 sheets of parchment and

00:00:52,289 --> 00:00:57,649
that sheet of parchment is specifically

00:00:54,750 --> 00:01:01,609
specifically scraped cured paned

00:00:57,649 --> 00:01:03,960
prepared according to rules in the Torah

00:01:01,609 --> 00:01:05,760
they take that sheet of parchment a

00:01:03,960 --> 00:01:07,380
feather quill the original Torah and

00:01:05,760 --> 00:01:09,299
they start copying over the three

00:01:07,380 --> 00:01:13,560
hundred and four thousand eight hundred

00:01:09,299 --> 00:01:15,659
and five characters the Torah has also

00:01:13,560 --> 00:01:17,220
according to very specific telegraphic

00:01:15,659 --> 00:01:18,780
rules and when they are done with that

00:01:17,220 --> 00:01:21,060
sheet of parchment which takes him about

00:01:18,780 --> 00:01:23,640
a week they hand it over to the news

00:01:21,060 --> 00:01:25,920
crowd to a new tribe that new scribe

00:01:23,640 --> 00:01:29,189
takes it and the original Torah and

00:01:25,920 --> 00:01:33,119
starts counting all the letters the

00:01:29,189 --> 00:01:36,060
words sentences the paragraphs they

00:01:33,119 --> 00:01:37,710
start comparing the center letter in the

00:01:36,060 --> 00:01:39,240
center word in the center sentence in

00:01:37,710 --> 00:01:41,970
the center paragraph and when there are

00:01:39,240 --> 00:01:44,220
more than three errors that sheet of

00:01:41,970 --> 00:01:48,750
parchment will never become part of a

00:01:44,220 --> 00:01:50,189
new Torah a week of work scrapped you

00:01:48,750 --> 00:01:51,990
can't just throw that away by the way

00:01:50,189 --> 00:01:53,820
there's holy words on there so what you

00:01:51,990 --> 00:01:56,939
do is you put it in a clay jar you put

00:01:53,820 --> 00:01:59,700
that clay jar into a cave and you seal

00:01:56,939 --> 00:02:02,430
the cave this is where we found the Dead

00:01:59,700 --> 00:02:04,170
Sea Scrolls so what we base all our

00:02:02,430 --> 00:02:06,119
scriptures on is basically erroneous

00:02:04,170 --> 00:02:10,229
documents hundreds of years old

00:02:06,119 --> 00:02:12,690
I mean imagine making that fourth

00:02:10,229 --> 00:02:13,890
mistake there's no back space on the

00:02:12,690 --> 00:02:15,510
feather quill there's no screw

00:02:13,890 --> 00:02:18,569
get out and going like oh no by the way

00:02:15,510 --> 00:02:21,180
I'm in this no that's it one week of

00:02:18,569 --> 00:02:23,280
work done we go through some hardship we

00:02:21,180 --> 00:02:26,640
think when it comes to looking at each

00:02:23,280 --> 00:02:28,319
other's work and then having to have to

00:02:26,640 --> 00:02:32,550
go back on our errors but this this is

00:02:28,319 --> 00:02:35,310
like the the real deal right all right

00:02:32,550 --> 00:02:37,440
I'm franc corn so I work in this amazing

00:02:35,310 --> 00:02:39,660
team at user Villa we create voice of

00:02:37,440 --> 00:02:41,760
customer solutions and that means that

00:02:39,660 --> 00:02:43,080
we provide a tool that so that our

00:02:41,760 --> 00:02:46,050
customers know what their customers

00:02:43,080 --> 00:02:49,650
think of them we gather feedback through

00:02:46,050 --> 00:02:52,050
channels like mobile mobile apps through

00:02:49,650 --> 00:02:58,980
of course websites and also through

00:02:52,050 --> 00:03:02,550
email and to create that software we

00:02:58,980 --> 00:03:04,860
also do a lot of code reviews which got

00:03:02,550 --> 00:03:06,630
me interested in like how why is this

00:03:04,860 --> 00:03:08,580
sometimes so hard like how can we do

00:03:06,630 --> 00:03:09,120
this better and I want to talk to you

00:03:08,580 --> 00:03:11,459
about that

00:03:09,120 --> 00:03:13,950
but first let me ask you a question who

00:03:11,459 --> 00:03:16,709
here uses code reviews to merge their

00:03:13,950 --> 00:03:20,519
code into the vein branch more than 1/3

00:03:16,709 --> 00:03:25,040
of the time I'm expecting more hands

00:03:20,519 --> 00:03:30,239
here come on more than 2/3 of the time

00:03:25,040 --> 00:03:30,930
phew still almost always good on you

00:03:30,239 --> 00:03:33,570
good on you

00:03:30,930 --> 00:03:36,299
I hope to convince you to do a little

00:03:33,570 --> 00:03:37,799
bit more maybe and also how to diminish

00:03:36,299 --> 00:03:39,660
the effort so it makes it a little bit

00:03:37,799 --> 00:03:42,540
easier first I'm going to talk about

00:03:39,660 --> 00:03:44,730
those efforts and rewards and then how

00:03:42,540 --> 00:03:47,790
to apply some tricks to that to make it

00:03:44,730 --> 00:03:50,370
easier for yourself and finally how to

00:03:47,790 --> 00:03:52,500
apply that in a consistent manner so

00:03:50,370 --> 00:03:54,299
that you don't just walk out this room

00:03:52,500 --> 00:03:56,310
and go there was this dude at this

00:03:54,299 --> 00:03:59,459
conference and he said some smart things

00:03:56,310 --> 00:04:02,400
about this hopefully and what was it

00:03:59,459 --> 00:04:04,110
again no let's apply is consistently but

00:04:02,400 --> 00:04:09,480
first let's talk a little bit about

00:04:04,110 --> 00:04:11,730
rewards and efforts this balance must be

00:04:09,480 --> 00:04:15,060
pretty good because we're still doing

00:04:11,730 --> 00:04:17,250
code reviews right and you hear so much

00:04:15,060 --> 00:04:19,919
about the reward side it improves

00:04:17,250 --> 00:04:22,200
quality whatever you think of quality

00:04:19,919 --> 00:04:25,020
less defects more maintainability better

00:04:22,200 --> 00:04:26,820
readability better understanding with

00:04:25,020 --> 00:04:27,900
all the abilities that you can think of

00:04:26,820 --> 00:04:30,740
it wouldn't

00:04:27,900 --> 00:04:34,110
and also quality in terms of

00:04:30,740 --> 00:04:36,870
communications be that on the technical

00:04:34,110 --> 00:04:38,490
technological spectrum these are the

00:04:36,870 --> 00:04:39,750
patterns the Co patterns that we want to

00:04:38,490 --> 00:04:42,060
see these are the co-parents that we

00:04:39,750 --> 00:04:44,370
don't want to see this is the libraries

00:04:42,060 --> 00:04:47,100
we use for serialization key value

00:04:44,370 --> 00:04:50,490
storage all that kind of stuff be that

00:04:47,100 --> 00:04:52,200
on the domain end of it these are the

00:04:50,490 --> 00:04:54,960
concepts that we use and this is how

00:04:52,200 --> 00:04:57,960
they interact is that communication in

00:04:54,960 --> 00:05:01,290
the team or between teams but it would

00:04:57,960 --> 00:05:03,300
improve all of it and if you look at it

00:05:01,290 --> 00:05:05,580
like that better quality better

00:05:03,300 --> 00:05:08,520
communication it's like this perfect

00:05:05,580 --> 00:05:10,290
picture like this perfect picture of the

00:05:08,520 --> 00:05:13,320
Pyramids of Giza look at these people

00:05:10,290 --> 00:05:15,720
here in the front right they traveled on

00:05:13,320 --> 00:05:18,120
camels through the desert probably for

00:05:15,720 --> 00:05:22,770
days and now almost without water they

00:05:18,120 --> 00:05:25,770
reach the pyramids of giza sure that

00:05:22,770 --> 00:05:27,480
could be the case or you don't have the

00:05:25,770 --> 00:05:29,520
complete picture and that is what I want

00:05:27,480 --> 00:05:31,680
to give you I want to give the other

00:05:29,520 --> 00:05:33,870
side of the picture I want to swivel the

00:05:31,680 --> 00:05:35,400
camera slightly so that you can have

00:05:33,870 --> 00:05:37,590
that complete picture so that we also

00:05:35,400 --> 00:05:41,850
talk a little bit about the efforts

00:05:37,590 --> 00:05:44,760
involved in code reviews whoever the

00:05:41,850 --> 00:05:48,840
code reviews knows one thing they take

00:05:44,760 --> 00:05:50,790
time considerable amount of time I would

00:05:48,840 --> 00:05:52,710
say that was my intuition when I sort

00:05:50,790 --> 00:05:56,040
did some research for this talk but how

00:05:52,710 --> 00:05:58,140
much sometimes hard to say luckily were

00:05:56,040 --> 00:06:00,180
programmers and we have this amazing a

00:05:58,140 --> 00:06:02,310
company that has all our code and has an

00:06:00,180 --> 00:06:05,850
amazing API so I went into the github

00:06:02,310 --> 00:06:08,310
API looked at a few of our PRS a few of

00:06:05,850 --> 00:06:11,040
our projects and crunch the numbers on

00:06:08,310 --> 00:06:14,190
time okay two things to keep in mind

00:06:11,040 --> 00:06:17,040
here first of all correlation is not

00:06:14,190 --> 00:06:18,930
causation one thing goes up the other

00:06:17,040 --> 00:06:21,300
thing goes up might be that one cause of

00:06:18,930 --> 00:06:22,620
the other the other causes the one or

00:06:21,300 --> 00:06:24,660
that there's even a third factor

00:06:22,620 --> 00:06:28,380
involved causing both of them to go up

00:06:24,660 --> 00:06:31,200
and second this is not statistically

00:06:28,380 --> 00:06:33,150
significant in no way is this is this

00:06:31,200 --> 00:06:35,940
any significant hopefully also not for

00:06:33,150 --> 00:06:37,320
our company statistically not

00:06:35,940 --> 00:06:39,810
significant correlation is not causation

00:06:37,320 --> 00:06:42,890
but this is what you see for a few of

00:06:39,810 --> 00:06:42,890
the projects in use

00:06:44,580 --> 00:06:53,430
on the vertical axis you see the amount

00:06:47,110 --> 00:06:55,690
of time it takes on median to close APR

00:06:53,430 --> 00:06:58,780
categorized on the horizontal horizontal

00:06:55,690 --> 00:07:01,000
axis by the amount of route comments and

00:06:58,780 --> 00:07:03,699
a root comment to me is the comment that

00:07:01,000 --> 00:07:06,900
starts off this conversation every reply

00:07:03,699 --> 00:07:10,240
to that comment is not a root comment

00:07:06,900 --> 00:07:12,699
and what you see here is quite an

00:07:10,240 --> 00:07:15,159
upwards trend if if you get into the 20

00:07:12,699 --> 00:07:19,180
30 30 to 40 amount of rude comments I

00:07:15,159 --> 00:07:21,699
take you 400 up to 700 hours for even

00:07:19,180 --> 00:07:26,289
one of our projects on median to close

00:07:21,699 --> 00:07:28,469
that PR lots of time right yes of course

00:07:26,289 --> 00:07:31,300
stuff on this end of the spectrum

00:07:28,469 --> 00:07:32,919
probably bad code and bad code also has

00:07:31,300 --> 00:07:35,020
lots of comments and takes lots of time

00:07:32,919 --> 00:07:38,680
to fix but like you can see the trend

00:07:35,020 --> 00:07:40,599
and if you now divide this number by the

00:07:38,680 --> 00:07:42,759
amount of comments you have the median

00:07:40,599 --> 00:07:44,889
time to close one of those rude comments

00:07:42,759 --> 00:07:47,710
and here you can see as well as if you

00:07:44,889 --> 00:07:50,020
go over the 10m ten rude comments it's

00:07:47,710 --> 00:07:51,610
pretty reasonable to expect that takes

00:07:50,020 --> 00:07:57,940
about ten hours to close one of those

00:07:51,610 --> 00:08:00,909
who comments to really fix it right the

00:07:57,940 --> 00:08:03,009
only thing I want to say here is they

00:08:00,909 --> 00:08:05,620
take time sometimes we treat them as

00:08:03,009 --> 00:08:07,479
though they're free did you like fix

00:08:05,620 --> 00:08:09,789
this one line here there's a new line

00:08:07,479 --> 00:08:10,509
that I'm missing a new line here or one

00:08:09,789 --> 00:08:12,310
too many

00:08:10,509 --> 00:08:15,159
I don't like Airy map I want to have a

00:08:12,310 --> 00:08:16,990
for each right it's not gonna take you

00:08:15,159 --> 00:08:19,029
ten hours to fix one of those but some

00:08:16,990 --> 00:08:22,659
of these things could be a little bit

00:08:19,029 --> 00:08:25,090
easier all right you know what but at

00:08:22,659 --> 00:08:26,669
least the quality goes up right that's

00:08:25,090 --> 00:08:30,370
what we hope yes

00:08:26,669 --> 00:08:32,260
if you keep your PRS pretty small you

00:08:30,370 --> 00:08:34,589
see at last I did some nice research on

00:08:32,260 --> 00:08:36,969
this you see here the amount of time

00:08:34,589 --> 00:08:40,149
someone looks at a file versus the

00:08:36,969 --> 00:08:44,019
amount of files in that PR if you get to

00:08:40,149 --> 00:08:47,350
30 to 40 files takes only two minutes to

00:08:44,019 --> 00:08:49,290
scan one file that is a lot of lines

00:08:47,350 --> 00:08:52,590
scanned per minute

00:08:49,290 --> 00:08:55,650
what you see over on the left end is the

00:08:52,590 --> 00:08:57,180
loftware reality bike shedding as we

00:08:55,650 --> 00:08:59,400
sometimes know it or as cutting a

00:08:57,180 --> 00:09:01,680
Larissa yo you said it give me ten lines

00:08:59,400 --> 00:09:03,840
of the most honest man alive and I will

00:09:01,680 --> 00:09:05,940
find something in it to hang him it is

00:09:03,840 --> 00:09:08,910
not that disastrous luckily for us but

00:09:05,940 --> 00:09:11,190
we've all been in that PR there's only

00:09:08,910 --> 00:09:13,500
four lines change and still something

00:09:11,190 --> 00:09:18,150
someone somehow had to find something

00:09:13,500 --> 00:09:19,770
right all right you know what we're just

00:09:18,150 --> 00:09:21,060
gonna add more reviewers because like

00:09:19,770 --> 00:09:23,310
more reviewers look at different

00:09:21,060 --> 00:09:25,970
problems look at different files it's

00:09:23,310 --> 00:09:30,450
gonna be better except that it's not

00:09:25,970 --> 00:09:33,510
more reviewers make sure that you spend

00:09:30,450 --> 00:09:35,760
less time per reviewer I actually go

00:09:33,510 --> 00:09:39,600
gets worse the amount of defects found

00:09:35,760 --> 00:09:41,760
also gets down that is not the amount of

00:09:39,600 --> 00:09:44,460
defects found per reviewer this is the

00:09:41,760 --> 00:09:49,310
total amount of defects found with all

00:09:44,460 --> 00:09:53,790
those reviewers what you see here is the

00:09:49,310 --> 00:09:56,340
is the effect where if there's a crash

00:09:53,790 --> 00:09:59,010
and you have lots of bystanders the

00:09:56,340 --> 00:10:01,100
least of you have a less chance of

00:09:59,010 --> 00:10:04,140
actually a bystander helping you

00:10:01,100 --> 00:10:05,930
bystander effects everyone's

00:10:04,140 --> 00:10:09,960
responsibility is no one's

00:10:05,930 --> 00:10:13,380
responsibility times one factor

00:10:09,960 --> 00:10:16,920
cognitive load is another I use the

00:10:13,380 --> 00:10:18,270
villa we use rebasing so you have one

00:10:16,920 --> 00:10:19,950
committee introducing your interface

00:10:18,270 --> 00:10:22,080
three commits having implementations

00:10:19,950 --> 00:10:24,120
it's all fine and dandy comes to the

00:10:22,080 --> 00:10:26,640
review someone doesn't like the method

00:10:24,120 --> 00:10:28,080
name or the interface name for that

00:10:26,640 --> 00:10:30,060
first email you have a little bit of

00:10:28,080 --> 00:10:33,150
discretion finally okay fine well change

00:10:30,060 --> 00:10:34,830
it changing it in the interface not that

00:10:33,150 --> 00:10:37,350
big of a deal but now for the subsequent

00:10:34,830 --> 00:10:39,660
three commits don't first of all change

00:10:37,350 --> 00:10:42,120
it don't introduce new static analysis

00:10:39,660 --> 00:10:44,250
issues don't introduce new code style

00:10:42,120 --> 00:10:49,260
issues don't introduce new bugs that you

00:10:44,250 --> 00:10:52,290
your unit tests don't fake don't check

00:10:49,260 --> 00:10:54,120
oh yeah by the way your unit tests it'll

00:10:52,290 --> 00:10:56,910
work integration tests should still work

00:10:54,120 --> 00:10:58,740
acceptance tests should still work right

00:10:56,910 --> 00:11:00,699
I think we can agree there's a lot of

00:10:58,740 --> 00:11:03,649
cognitive load going on

00:11:00,699 --> 00:11:05,779
cognitive load time hits on morale even

00:11:03,649 --> 00:11:08,029
if things aren't worded as nicely as

00:11:05,779 --> 00:11:10,639
we'd like them to be these are all

00:11:08,029 --> 00:11:14,079
opportunity costs cost incurred because

00:11:10,639 --> 00:11:18,970
we can only spend a scarce resource once

00:11:14,079 --> 00:11:22,459
and as I went through this research a

00:11:18,970 --> 00:11:25,430
little sad because this looks pretty

00:11:22,459 --> 00:11:27,170
grim why are we doing this this reward

00:11:25,430 --> 00:11:31,189
site is pretty big with the effort sides

00:11:27,170 --> 00:11:33,050
pretty big as well and then I thought we

00:11:31,189 --> 00:11:35,360
should do better and I think we can do

00:11:33,050 --> 00:11:37,879
better by applying a few patterns that

00:11:35,360 --> 00:11:40,069
we well not we as PHP developers with

00:11:37,879 --> 00:11:42,290
the coding community as a whole have

00:11:40,069 --> 00:11:45,620
applied to code namely async and non

00:11:42,290 --> 00:11:56,810
blocking patterns first of all let's

00:11:45,620 --> 00:12:00,079
start off with async async to me is the

00:11:56,810 --> 00:12:02,060
fact that you have a PR and you discover

00:12:00,079 --> 00:12:04,519
a big issue right there's no like small

00:12:02,060 --> 00:12:07,819
issues doesn't apply to that but bigger

00:12:04,519 --> 00:12:10,910
issues and you can pick that out of the

00:12:07,819 --> 00:12:13,759
PR you can actually close a PR launch

00:12:10,910 --> 00:12:15,439
that issue in a new context wait for it

00:12:13,759 --> 00:12:20,060
to fall through and when it falls

00:12:15,439 --> 00:12:21,579
through you come back to the code what

00:12:20,060 --> 00:12:24,550
kind of issues are we talking about well

00:12:21,579 --> 00:12:27,139
we are a we're a pretty precise Bunch

00:12:24,550 --> 00:12:30,529
there's a lots of stuff that we look at

00:12:27,139 --> 00:12:32,000
when it comes to Co reviews but to look

00:12:30,529 --> 00:12:35,329
at this in a slightly structured manner

00:12:32,000 --> 00:12:37,519
I would propose reward versus conflict

00:12:35,329 --> 00:12:40,959
gives you nice or little quadrants to

00:12:37,519 --> 00:12:43,880
reason about and one thing's for sure

00:12:40,959 --> 00:12:45,889
you want the human beings to look at

00:12:43,880 --> 00:12:48,459
this side right because the low

00:12:45,889 --> 00:12:51,620
rewarding stuff is simply not worth it

00:12:48,459 --> 00:12:53,480
and the nice stuff about the low

00:12:51,620 --> 00:12:56,389
rewarding stuff is it's actually pretty

00:12:53,480 --> 00:13:00,199
easily tooled away well things like hack

00:12:56,389 --> 00:13:02,600
really help you leader but for our for

00:13:00,199 --> 00:13:03,290
us simple souls that can't use hack just

00:13:02,600 --> 00:13:06,199
yet

00:13:03,290 --> 00:13:08,680
PHP CS for your code style issues PHP

00:13:06,199 --> 00:13:11,779
stand for your static analysis issues

00:13:08,680 --> 00:13:14,030
these really help you in this low

00:13:11,779 --> 00:13:17,960
rewarding side of this picture

00:13:14,030 --> 00:13:19,730
and the low conflictual stuff that's

00:13:17,960 --> 00:13:22,370
actually pretty factual there's not a

00:13:19,730 --> 00:13:25,550
lot of discussions about a bug that

00:13:22,370 --> 00:13:28,700
exists functionality fails a little bit

00:13:25,550 --> 00:13:32,480
harder but let's say you have you you

00:13:28,700 --> 00:13:34,280
create your code with BDD practices you

00:13:32,480 --> 00:13:36,110
have that functionality now in a gherkin

00:13:34,280 --> 00:13:38,240
scenario you run behead you know that

00:13:36,110 --> 00:13:42,680
your functionality is exactly as you

00:13:38,240 --> 00:13:45,740
spectate low quality tests a little bit

00:13:42,680 --> 00:13:47,780
harder but also here tooling helps PHP

00:13:45,740 --> 00:13:50,270
infection for example creates mutations

00:13:47,780 --> 00:13:52,550
in your code and sees if your unit tests

00:13:50,270 --> 00:13:54,650
will catch those mutations so you know

00:13:52,550 --> 00:13:58,850
that your quality of the code of the

00:13:54,650 --> 00:14:00,950
test is pretty good all right low

00:13:58,850 --> 00:14:03,470
rewarding stuff gone low conflictual

00:14:00,950 --> 00:14:05,780
stuff gone now we have a highly

00:14:03,470 --> 00:14:08,450
conflictual highly rewarding and highly

00:14:05,780 --> 00:14:10,760
subjective quadrant left so let's see

00:14:08,450 --> 00:14:13,310
what we can do there well first of all

00:14:10,760 --> 00:14:16,430
that offloading like I said it works for

00:14:13,310 --> 00:14:18,380
bigger issues you come into a PR where

00:14:16,430 --> 00:14:20,750
this is the first PR where two services

00:14:18,380 --> 00:14:22,970
actually communicate with each other how

00:14:20,750 --> 00:14:24,770
great would it be to not discuss how

00:14:22,970 --> 00:14:27,589
that would actually work what the

00:14:24,770 --> 00:14:30,970
protocol is all these things in a low

00:14:27,589 --> 00:14:34,339
bandwidth environment like a code review

00:14:30,970 --> 00:14:37,010
instead lifts it out of there instead

00:14:34,339 --> 00:14:38,540
put it into a chapter meeting into a

00:14:37,010 --> 00:14:41,120
development meeting into a team meeting

00:14:38,540 --> 00:14:43,339
I don't know what you have but lift it

00:14:41,120 --> 00:14:45,380
into something higher bandwidth lift it

00:14:43,339 --> 00:14:47,089
into something where you can talk face

00:14:45,380 --> 00:14:51,080
to face and make quick decisions in

00:14:47,089 --> 00:14:52,700
interact way better right that works for

00:14:51,080 --> 00:14:55,250
technical stuff like communication

00:14:52,700 --> 00:14:58,640
between services but offloading also

00:14:55,250 --> 00:15:01,310
works for communication open that PR and

00:14:58,640 --> 00:15:04,670
you have a new teammate maybe sit with

00:15:01,310 --> 00:15:06,560
them and discuss because that gives them

00:15:04,670 --> 00:15:09,110
so much more opportunity ask questions

00:15:06,560 --> 00:15:10,580
for you to explain the architecture why

00:15:09,110 --> 00:15:11,930
you made specific choice and all that

00:15:10,580 --> 00:15:14,320
kind of stuff that high bandwidth

00:15:11,930 --> 00:15:16,220
environment helps them immensely or

00:15:14,320 --> 00:15:18,410
introducing a new component to an

00:15:16,220 --> 00:15:21,800
architecture how great would it be if

00:15:18,410 --> 00:15:23,480
you give a small presentation just a few

00:15:21,800 --> 00:15:25,310
slides where you go this is the kind of

00:15:23,480 --> 00:15:26,900
stuff that we want to achieve here this

00:15:25,310 --> 00:15:27,680
is the quality we're looking for this is

00:15:26,900 --> 00:15:30,800
the kind of review

00:15:27,680 --> 00:15:34,730
we want if we want from you right I'll

00:15:30,800 --> 00:15:36,950
float that the tools that we talked

00:15:34,730 --> 00:15:40,490
about before let's make sure we can run

00:15:36,950 --> 00:15:43,100
those locally because that is another

00:15:40,490 --> 00:15:44,959
thing if you open that PR and it's all

00:15:43,100 --> 00:15:46,339
still full with like code style issues

00:15:44,959 --> 00:15:48,440
and all kind of stuff you go okay fine

00:15:46,339 --> 00:15:50,480
I'll come back to this later and then

00:15:48,440 --> 00:15:52,220
maybe it takes a while and all the kind

00:15:50,480 --> 00:15:55,070
of stuff you want to run all that stuff

00:15:52,220 --> 00:15:56,570
locally what we do it user Villa is we

00:15:55,070 --> 00:15:59,510
use make files in combination with

00:15:56,570 --> 00:16:02,120
docker make files make sure that you run

00:15:59,510 --> 00:16:04,279
that stuff the same all the time all the

00:16:02,120 --> 00:16:07,270
configuration is the same all the like

00:16:04,279 --> 00:16:09,950
arguments are the same everything and

00:16:07,270 --> 00:16:12,140
docker to make sure that you run that

00:16:09,950 --> 00:16:14,480
stuff inside the build server inside

00:16:12,140 --> 00:16:19,160
your production staging and development

00:16:14,480 --> 00:16:21,980
environment exactly the same pairing is

00:16:19,160 --> 00:16:26,589
also a good way to get your code review

00:16:21,980 --> 00:16:29,959
before your code review you you you me

00:16:26,589 --> 00:16:32,120
we all have those idiosyncrasies in our

00:16:29,959 --> 00:16:35,060
code and that is perfectly fine everyone

00:16:32,120 --> 00:16:37,010
is supposed it can like air a map or for

00:16:35,060 --> 00:16:40,250
each over one another it doesn't matter

00:16:37,010 --> 00:16:42,140
to me but to get that stuff out before

00:16:40,250 --> 00:16:43,880
the code review is gonna save you a lot

00:16:42,140 --> 00:16:49,610
of time impairing is a really good way

00:16:43,880 --> 00:16:52,810
to do that and finally communicate

00:16:49,610 --> 00:16:55,550
upfront and this sounds very easy but a

00:16:52,810 --> 00:16:58,010
code code review is not the time for

00:16:55,550 --> 00:17:00,860
your info team to go you're using

00:16:58,010 --> 00:17:04,550
Couchbase yeah we use Redis for key

00:17:00,860 --> 00:17:06,410
value source you really hope you really

00:17:04,550 --> 00:17:09,350
should hope that your interfaces are

00:17:06,410 --> 00:17:12,020
good enough to wipe away that difference

00:17:09,350 --> 00:17:14,140
right and that goes for technical stuff

00:17:12,020 --> 00:17:17,510
but also goes for like co-designed

00:17:14,140 --> 00:17:18,860
create that UML create a UML in ten

00:17:17,510 --> 00:17:20,540
minutes twenty minutes

00:17:18,860 --> 00:17:22,550
discuss it with your senior people is

00:17:20,540 --> 00:17:24,130
this the kind of patterns we want to see

00:17:22,550 --> 00:17:27,439
or not want to see is this a right

00:17:24,130 --> 00:17:30,559
solution changing at UML takes you what

00:17:27,439 --> 00:17:33,290
one minute to changing it in the

00:17:30,559 --> 00:17:35,750
implementation in github or wherever you

00:17:33,290 --> 00:17:37,550
store your code doesn't matter Wow

00:17:35,750 --> 00:17:39,410
that is gonna take you a lot more time

00:17:37,550 --> 00:17:41,390
right

00:17:39,410 --> 00:17:43,310
alright those are a few of the async

00:17:41,390 --> 00:17:45,380
tricks I can think of you can probably

00:17:43,310 --> 00:17:51,080
think of a bunch more let's move on to

00:17:45,380 --> 00:17:52,490
Knobloch so now I'm blocking to me is

00:17:51,080 --> 00:17:56,020
the fact that you have the least amount

00:17:52,490 --> 00:17:59,000
of chance of having a blocking comment

00:17:56,020 --> 00:18:01,220
having a blocking and blocking to me is

00:17:59,000 --> 00:18:02,870
the fact that look I need you to fix

00:18:01,220 --> 00:18:05,320
this I need you to fix this before I can

00:18:02,870 --> 00:18:08,300
even a pro think of approving this right

00:18:05,320 --> 00:18:10,850
so utopia the thing that will always

00:18:08,300 --> 00:18:12,020
have these will not have any blocking

00:18:10,850 --> 00:18:14,990
comments with the least amount of chance

00:18:12,020 --> 00:18:16,670
that is something to strive for if you

00:18:14,990 --> 00:18:19,490
do hit one of those blocking comments

00:18:16,670 --> 00:18:21,380
I'd like to introduce you to a technique

00:18:19,490 --> 00:18:23,470
that they use in the Jeff Bezos

00:18:21,380 --> 00:18:27,830
introduced in Amazon management

00:18:23,470 --> 00:18:31,130
disagreeing commit probably know what

00:18:27,830 --> 00:18:34,280
it's about his stance is at at some

00:18:31,130 --> 00:18:37,430
point you are just sort of fantasizing

00:18:34,280 --> 00:18:38,960
about the future you have a value

00:18:37,430 --> 00:18:40,520
difference this needs to be more

00:18:38,960 --> 00:18:43,810
flexible no this needs to be more

00:18:40,520 --> 00:18:46,340
flexible no one's really right or wrong

00:18:43,810 --> 00:18:48,800
but at that point you might as well

00:18:46,340 --> 00:18:51,200
disagree and commit give the benefit

00:18:48,800 --> 00:18:53,390
maybe to the author they have most

00:18:51,200 --> 00:18:54,710
context probably they have most

00:18:53,390 --> 00:18:58,010
knowledge they looked into the code

00:18:54,710 --> 00:18:59,990
everything but the committing part that

00:18:58,010 --> 00:19:04,130
is very important you can never go back

00:18:59,990 --> 00:19:05,360
and say huh see told you I told you that

00:19:04,130 --> 00:19:10,340
that was the wrong decision

00:19:05,360 --> 00:19:13,880
now just disagree and commit we saw

00:19:10,340 --> 00:19:15,590
before that having more reviewers

00:19:13,880 --> 00:19:19,520
actually adding to your problem right so

00:19:15,590 --> 00:19:21,410
finding the right reviewers is key one

00:19:19,520 --> 00:19:25,040
method to do that is to tag your

00:19:21,410 --> 00:19:27,470
specialists for example you've been

00:19:25,040 --> 00:19:30,020
pondering on this query for a while

00:19:27,470 --> 00:19:32,060
it hits all the indexes it probably

00:19:30,020 --> 00:19:33,950
doesn't work pretty efficiently but you

00:19:32,060 --> 00:19:35,720
don't really know and you have a

00:19:33,950 --> 00:19:37,760
database specialist in your organization

00:19:35,720 --> 00:19:40,910
so how about when you open your own code

00:19:37,760 --> 00:19:43,460
review you add a comment in there and go

00:19:40,910 --> 00:19:45,440
hey at database specialist can you

00:19:43,460 --> 00:19:46,940
please take a look at this there's two

00:19:45,440 --> 00:19:49,040
things happening now that database

00:19:46,940 --> 00:19:51,020
specialist will gladly look at your PR

00:19:49,040 --> 00:19:52,610
because they know exactly what they need

00:19:51,020 --> 00:19:53,370
to look at it's going to be really

00:19:52,610 --> 00:19:56,720
efficient for them

00:19:53,370 --> 00:19:59,450
and second of all bystander effect

00:19:56,720 --> 00:20:02,460
doesn't apply anymore because there's no

00:19:59,450 --> 00:20:04,380
other coder that goes yeah there's

00:20:02,460 --> 00:20:06,600
probably someone else is gonna look at

00:20:04,380 --> 00:20:09,360
this part I don't really know

00:20:06,600 --> 00:20:13,350
right we all go I approve and no one has

00:20:09,360 --> 00:20:17,160
ever looked at it another tool to find

00:20:13,350 --> 00:20:19,080
the right reviewers is get kills and you

00:20:17,160 --> 00:20:20,780
give it to commits and it will tell you

00:20:19,080 --> 00:20:23,310
the most lines added and subtracted

00:20:20,780 --> 00:20:25,530
these are the people that give you good

00:20:23,310 --> 00:20:28,530
feedback so Renato oh there you go

00:20:25,530 --> 00:20:31,350
I need these would be good people for me

00:20:28,530 --> 00:20:33,300
to tag in this review they have they

00:20:31,350 --> 00:20:36,420
have most of the context that applies

00:20:33,300 --> 00:20:40,140
here alright and then we get to the

00:20:36,420 --> 00:20:45,230
commenting when we comment it's just one

00:20:40,140 --> 00:20:48,420
blob usually github request changes go

00:20:45,230 --> 00:20:51,480
alright I have 10 comments which one do

00:20:48,420 --> 00:20:53,670
you really need to change how about

00:20:51,480 --> 00:20:57,300
communicating that intent reserving that

00:20:53,670 --> 00:20:59,700
first character for that lock this is a

00:20:57,300 --> 00:21:02,100
blocking comment to me you need to solve

00:20:59,700 --> 00:21:04,710
this or this is really not an issue to

00:21:02,100 --> 00:21:07,500
me like it's a suggestion you can cannot

00:21:04,710 --> 00:21:09,270
do it but the other one will solve this

00:21:07,500 --> 00:21:11,280
asynchronously I don't really have the

00:21:09,270 --> 00:21:12,870
context now you need to maybe give a

00:21:11,280 --> 00:21:14,250
presentation about this component you

00:21:12,870 --> 00:21:17,310
need to know get me up to speed

00:21:14,250 --> 00:21:21,480
afterwards but this is not something

00:21:17,310 --> 00:21:21,780
that is per se blocking this thing all

00:21:21,480 --> 00:21:23,640
right

00:21:21,780 --> 00:21:26,430
so we have these async tricks we have

00:21:23,640 --> 00:21:29,250
these non-blocking tricks how do we

00:21:26,430 --> 00:21:31,850
apply this consistant I think what we

00:21:29,250 --> 00:21:35,520
should strive for is a code review

00:21:31,850 --> 00:21:37,320
etiquette etiquette is behaving yourself

00:21:35,520 --> 00:21:40,110
just a little bit better than you're

00:21:37,320 --> 00:21:42,600
supposed to in a specific context with

00:21:40,110 --> 00:21:45,420
that context that is highly important as

00:21:42,600 --> 00:21:49,170
usual so let me run you through a few of

00:21:45,420 --> 00:21:50,790
these first of all is this we could

00:21:49,170 --> 00:21:53,580
review inside your team outside your

00:21:50,790 --> 00:21:56,070
team some teams like some people really

00:21:53,580 --> 00:21:58,710
like it when other teams tweeze apart

00:21:56,070 --> 00:22:01,020
their PR they are looking for the

00:21:58,710 --> 00:22:03,480
perfect code the ultimate truth they

00:22:01,020 --> 00:22:06,120
just want everything pristine and that

00:22:03,480 --> 00:22:07,350
is absolutely fine but when I look at

00:22:06,120 --> 00:22:10,620
other people's code

00:22:07,350 --> 00:22:13,980
at other teams codes I tend to take a

00:22:10,620 --> 00:22:16,080
step back I tend to look at bigger

00:22:13,980 --> 00:22:17,730
issues are we now using event sourcing

00:22:16,080 --> 00:22:19,530
hey this is a new type of storage that

00:22:17,730 --> 00:22:20,940
we use should we really do that these

00:22:19,530 --> 00:22:22,290
are the code patterns we want to see

00:22:20,940 --> 00:22:24,770
these are the anti patterns that we

00:22:22,290 --> 00:22:28,820
don't want to see like bigger stuff

00:22:24,770 --> 00:22:31,110
blast radius is another one

00:22:28,820 --> 00:22:33,350
microservices by design had a pretty

00:22:31,110 --> 00:22:35,970
small blast radius and that is awesome

00:22:33,350 --> 00:22:37,550
introducing a new code style rule that

00:22:35,970 --> 00:22:41,040
you want to experiment with they're

00:22:37,550 --> 00:22:43,050
probably not gonna be a big issue try

00:22:41,040 --> 00:22:45,890
that same thing with a mall if you're

00:22:43,050 --> 00:22:52,860
gonna have hell to pay

00:22:45,890 --> 00:22:57,210
and finally robustness so if you're

00:22:52,860 --> 00:23:00,450
working on this new financial system by

00:22:57,210 --> 00:23:02,850
all means go all out nailed down every

00:23:00,450 --> 00:23:05,210
centimeter of that thing if you're

00:23:02,850 --> 00:23:07,560
working on a code I don't know

00:23:05,210 --> 00:23:09,390
statistics tool that spits out some

00:23:07,560 --> 00:23:11,370
numbers every three weeks four weeks and

00:23:09,390 --> 00:23:14,790
if it doesn't it's fine it does it the

00:23:11,370 --> 00:23:22,530
next week in that context that PR needs

00:23:14,790 --> 00:23:24,380
to look very different to all right we

00:23:22,530 --> 00:23:28,950
have these contacts we have these tricks

00:23:24,380 --> 00:23:31,530
what are we gonna do we're gonna sit in

00:23:28,950 --> 00:23:35,670
a room we're gonna talk to each other

00:23:31,530 --> 00:23:37,800
with our team with our chapter with our

00:23:35,670 --> 00:23:39,930
whole department I don't care go sit in

00:23:37,800 --> 00:23:43,320
a room every week two weeks month two

00:23:39,930 --> 00:23:46,470
months but just come together start

00:23:43,320 --> 00:23:48,420
doing code review reviews do what you do

00:23:46,470 --> 00:23:52,620
to your code but then to your review

00:23:48,420 --> 00:23:55,500
process get some code reviews that were

00:23:52,620 --> 00:23:57,710
highly conflictual logan's lates you a

00:23:55,500 --> 00:24:00,300
lot of comments not a lot of comments

00:23:57,710 --> 00:24:04,290
close pretty quickly didn't close

00:24:00,300 --> 00:24:08,610
quickly at all and then start looking in

00:24:04,290 --> 00:24:11,010
these contexts what applies what kind of

00:24:08,610 --> 00:24:14,240
tricks do we want to apply here what

00:24:11,010 --> 00:24:14,240
kind of how could we have done better

00:24:15,110 --> 00:24:19,980
what you're dabbling around here in is

00:24:17,880 --> 00:24:20,970
the complex quadrant of the kenefick

00:24:19,980 --> 00:24:22,590
framework

00:24:20,970 --> 00:24:25,380
canikin framework is a sense-making

00:24:22,590 --> 00:24:28,770
device it makes sense of your behavior

00:24:25,380 --> 00:24:31,350
my behavior in a very specific sort of

00:24:28,770 --> 00:24:35,940
environment and creating a code review

00:24:31,350 --> 00:24:39,210
etiquette that is pretty complex we're

00:24:35,940 --> 00:24:41,190
using retrospective causality Maria

00:24:39,210 --> 00:24:43,409
didn't have her morning coffee Marco

00:24:41,190 --> 00:24:46,620
said something not very nice on that Co

00:24:43,409 --> 00:24:48,530
review things exploded it was conflict

00:24:46,620 --> 00:24:51,390
all over the place

00:24:48,530 --> 00:24:54,600
retrospective causality teaches us how

00:24:51,390 --> 00:24:55,980
that works Marco didn't know Marco

00:24:54,600 --> 00:24:57,150
really didn't know Maria didn't have her

00:24:55,980 --> 00:25:01,140
morning coffee he would have been more

00:24:57,150 --> 00:25:03,120
gentle trust me and retrospective

00:25:01,140 --> 00:25:05,789
causality also teaches us how to handle

00:25:03,120 --> 00:25:10,080
that right how to create that emergent

00:25:05,789 --> 00:25:12,330
practice we probe by looking at those

00:25:10,080 --> 00:25:13,919
code reviews Bobby we sends by sitting

00:25:12,330 --> 00:25:16,320
in that room with our team with our

00:25:13,919 --> 00:25:18,600
development department with whoever you

00:25:16,320 --> 00:25:21,000
can think of and discussing amongst

00:25:18,600 --> 00:25:22,890
yourself what context are we in what

00:25:21,000 --> 00:25:25,799
trick should we have applied how could

00:25:22,890 --> 00:25:29,220
we have done better and you respond by

00:25:25,799 --> 00:25:31,770
walking out that room and applying that

00:25:29,220 --> 00:25:34,530
new knowledge this is now how we do code

00:25:31,770 --> 00:25:38,880
reviews this is how we treat each other

00:25:34,530 --> 00:25:40,650
this is good this is bad final words for

00:25:38,880 --> 00:25:42,780
you don't throw out the baby with the

00:25:40,650 --> 00:25:45,470
bathwater although I showed you that

00:25:42,780 --> 00:25:48,840
Commons take time and like all this

00:25:45,470 --> 00:25:50,580
opportunity cuts yes sure sure that's

00:25:48,840 --> 00:25:54,000
important but code reviews are important

00:25:50,580 --> 00:25:56,070
as well all right let's start just don't

00:25:54,000 --> 00:25:58,409
stop commenting don't stop doing code

00:25:56,070 --> 00:26:00,240
reviews but be mindful about the

00:25:58,409 --> 00:26:02,100
opportunity cause that you create in

00:26:00,240 --> 00:26:05,659
terms of time in terms of effort in

00:26:02,100 --> 00:26:08,190
terms of hits on morale all these things

00:26:05,659 --> 00:26:10,049
think about some async and non blocking

00:26:08,190 --> 00:26:13,470
tricks you can think of a bunch more you

00:26:10,049 --> 00:26:17,669
can drop a few is fine and then start

00:26:13,470 --> 00:26:21,000
doing code review reviews start creating

00:26:17,669 --> 00:26:22,890
that code review etiquette and that is I

00:26:21,000 --> 00:26:25,530
think the only way we can achieve truly

00:26:22,890 --> 00:26:27,820
async and non blocking code reviews

00:26:25,530 --> 00:26:31,220
thanks very much

00:26:27,820 --> 00:26:31,220
[Applause]

00:26:31,890 --> 00:26:48,380

YouTube URL: https://www.youtube.com/watch?v=_fEsf1WjVmg


