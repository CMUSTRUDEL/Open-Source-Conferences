Title: Maintain your Environment with Puppet - Hans Christian Otto | IPC13
Publication date: 2016-06-09
Playlist: International PHP Conference 2013
Description: 
	Hans-Christian Otto auf der International PHP Conference 2013 Ã¼ber Puppet, und wie man damit sein komplettes Environment verwalten kann.

More information: https://phpconference.com/en/
Captions: 
	00:00:05,480 --> 00:00:13,799
we're gonna talk about puppet and I've

00:00:08,700 --> 00:00:16,230
been doing puppets since 2011 I we

00:00:13,799 --> 00:00:18,000
migrated our service back then on a new

00:00:16,230 --> 00:00:21,390
infrastructure and a new data center

00:00:18,000 --> 00:00:23,400
with mall servers and I didn't want to

00:00:21,390 --> 00:00:26,340
do all this hassle with setting it up

00:00:23,400 --> 00:00:28,740
manually for back then it was like seven

00:00:26,340 --> 00:00:30,179
or nine soffits and this is why I

00:00:28,740 --> 00:00:31,980
started looking into puppet and I've

00:00:30,179 --> 00:00:34,230
been doing it since then and I really

00:00:31,980 --> 00:00:39,030
enjoy it who have you already used

00:00:34,230 --> 00:00:41,070
puppet okay that's good

00:00:39,030 --> 00:00:43,079
you might learn some new stuff as well

00:00:41,070 --> 00:00:47,250
but I'm not sure about that as well who

00:00:43,079 --> 00:00:52,050
have you uses vagrant nearly the same

00:00:47,250 --> 00:00:53,730
good anyone tried out chef those are

00:00:52,050 --> 00:00:58,340
different people than the puppet people

00:00:53,730 --> 00:01:00,719
that's nice okay someone used cfengine

00:00:58,340 --> 00:01:01,949
well you weren't in the solid talk right

00:01:00,719 --> 00:01:04,470
because they asked you as well and

00:01:01,949 --> 00:01:07,530
everyone laughed at least I did I'm

00:01:04,470 --> 00:01:09,210
sorry for using cfengine I use software

00:01:07,530 --> 00:01:12,900
developers who is a software developer

00:01:09,210 --> 00:01:15,049
here nice nice so you obviously use a

00:01:12,900 --> 00:01:17,939
version control system like git and

00:01:15,049 --> 00:01:19,229
subversion or mercurial or I don't know

00:01:17,939 --> 00:01:23,820
how they were called a couple of years

00:01:19,229 --> 00:01:27,479
ago who a few uses it for infrastructure

00:01:23,820 --> 00:01:29,369
like server configuration files quite

00:01:27,479 --> 00:01:31,500
more than those who use puppet and chef

00:01:29,369 --> 00:01:33,329
not sure if you just saw the config

00:01:31,500 --> 00:01:35,070
files there or have some other system

00:01:33,329 --> 00:01:37,320
I've been running but at least some of

00:01:35,070 --> 00:01:40,110
you already do that there are so many

00:01:37,320 --> 00:01:42,150
software developers who kind of are

00:01:40,110 --> 00:01:44,549
responsible for setting about setting up

00:01:42,150 --> 00:01:46,560
and configuring service as well and they

00:01:44,549 --> 00:01:48,390
always use version control systems with

00:01:46,560 --> 00:01:49,710
their source code but they don't do it

00:01:48,390 --> 00:01:51,299
with the service and this is something

00:01:49,710 --> 00:01:53,130
that should be changed from my point of

00:01:51,299 --> 00:01:56,399
view and this is a place where puppet

00:01:53,130 --> 00:01:59,280
can actually help us before we start

00:01:56,399 --> 00:02:01,170
with the content one little note if you

00:01:59,280 --> 00:02:03,210
have any questions just interrupt me

00:02:01,170 --> 00:02:05,280
immediately and ask them at that point

00:02:03,210 --> 00:02:07,020
don't save them for the end because I

00:02:05,280 --> 00:02:08,520
don't have that much time to stay here

00:02:07,020 --> 00:02:08,670
because of my flight I already mentioned

00:02:08,520 --> 00:02:11,310
that

00:02:08,670 --> 00:02:13,230
and in addition I won't know what I was

00:02:11,310 --> 00:02:17,819
talking about half an hour ago

00:02:13,230 --> 00:02:19,650
just interrupt me immediately let me

00:02:17,819 --> 00:02:21,330
tell you something about the agenda at

00:02:19,650 --> 00:02:23,010
first I'm gonna introduce you a little

00:02:21,330 --> 00:02:25,819
bit to pop it and tell you some bla bla

00:02:23,010 --> 00:02:29,159
stuff like where it came from and so on

00:02:25,819 --> 00:02:31,140
then I'm gonna show you some examples of

00:02:29,159 --> 00:02:33,900
what you can do with puppet and how you

00:02:31,140 --> 00:02:35,400
do it with puppet then I'll introduce

00:02:33,900 --> 00:02:37,319
you to vagrant because it said

00:02:35,400 --> 00:02:39,629
maintaining your environment and the

00:02:37,319 --> 00:02:42,540
environments of a software development

00:02:39,629 --> 00:02:44,549
company always means your production

00:02:42,540 --> 00:02:46,739
environment for sure maybe testing

00:02:44,549 --> 00:02:48,569
staging hopefully testing inter staging

00:02:46,739 --> 00:02:51,660
and the development environment that's

00:02:48,569 --> 00:02:53,970
where vagrant comes into play and at the

00:02:51,660 --> 00:02:56,430
end I'm gonna try to show you some more

00:02:53,970 --> 00:02:59,760
advanced puppet stuff really depends on

00:02:56,430 --> 00:03:02,879
how long it takes me to get there how

00:02:59,760 --> 00:03:05,099
much I can go into detail there the less

00:03:02,879 --> 00:03:06,900
stuff will be some last hints I always

00:03:05,099 --> 00:03:08,549
do that at the end of my talks I just

00:03:06,900 --> 00:03:10,379
throw some where it's at you and give

00:03:08,549 --> 00:03:11,549
you a short explanation but this is

00:03:10,379 --> 00:03:14,940
stuff that you might want to Google at

00:03:11,549 --> 00:03:19,700
home and I can't explain that much

00:03:14,940 --> 00:03:21,989
detail here okay let's get to puppet and

00:03:19,700 --> 00:03:25,139
yeah let me show you what we're going to

00:03:21,989 --> 00:03:27,720
talk about puppet is something like this

00:03:25,139 --> 00:03:30,180
where you control some puppets and your

00:03:27,720 --> 00:03:32,549
puppet master and stuff and we're also

00:03:30,180 --> 00:03:34,019
going to talk about chocolate here I'm

00:03:32,549 --> 00:03:35,340
sorry I didn't bring chocolate I always

00:03:34,019 --> 00:03:38,069
want to bring chocolate to this stuff

00:03:35,340 --> 00:03:40,769
but I always forget it sorry and we're

00:03:38,069 --> 00:03:43,980
also going to talk about this tweet by

00:03:40,769 --> 00:03:46,019
Dean Wilson which means which says do

00:03:43,980 --> 00:03:49,530
you know what we call adding monitoring

00:03:46,019 --> 00:03:52,260
to over 30 websites 10 servers and over

00:03:49,530 --> 00:03:54,989
50 services on those servers a pop and

00:03:52,260 --> 00:03:57,090
run and at the end I'm gonna tell you or

00:03:54,989 --> 00:04:00,540
show you how you can actually do this

00:03:57,090 --> 00:04:02,669
with puppet totally easily and every new

00:04:00,540 --> 00:04:06,209
server that pops up will automatically

00:04:02,669 --> 00:04:08,310
be monitoring but before we get to that

00:04:06,209 --> 00:04:12,120
it's gonna be a little bit dry I'm sorry

00:04:08,310 --> 00:04:14,819
for that because I'm going to tell you

00:04:12,120 --> 00:04:16,440
some history about poverty or not

00:04:14,819 --> 00:04:18,570
history but explain what it is

00:04:16,440 --> 00:04:21,690
poverty say configuration management

00:04:18,570 --> 00:04:23,760
software which means that is its purpose

00:04:21,690 --> 00:04:26,970
is to modify configuration files of

00:04:23,760 --> 00:04:28,650
services of software you installed in

00:04:26,970 --> 00:04:32,790
addition it's able to install software

00:04:28,650 --> 00:04:34,950
remove software and who are some do some

00:04:32,790 --> 00:04:38,400
other fancy stuff like managing services

00:04:34,950 --> 00:04:40,080
and yeah everything you can imagine the

00:04:38,400 --> 00:04:44,670
puppet is open-source but there is also

00:04:40,080 --> 00:04:48,390
a commercial version which has the same

00:04:44,670 --> 00:04:51,120
features as puppet plus some more tools

00:04:48,390 --> 00:04:53,130
which some of them are closed source but

00:04:51,120 --> 00:04:55,170
the major aspect of this puppet

00:04:53,130 --> 00:04:56,370
enterprise is that it's all integrated

00:04:55,170 --> 00:04:58,560
and you don't have to take care of

00:04:56,370 --> 00:05:00,390
integration of so many services it's

00:04:58,560 --> 00:05:04,260
probably really nice but I haven't used

00:05:00,390 --> 00:05:06,090
it yet puppet is written in Ruby I think

00:05:04,260 --> 00:05:07,770
it's important to mention this at a PHP

00:05:06,090 --> 00:05:10,050
conference I think there's no

00:05:07,770 --> 00:05:12,750
alternative to puppet which was written

00:05:10,050 --> 00:05:15,090
in PHP which is weird PHP developers

00:05:12,750 --> 00:05:17,250
tend to rewrite everything in PHP but

00:05:15,090 --> 00:05:19,680
they didn't for puppet as far as I know

00:05:17,250 --> 00:05:21,930
and it's not really that bad that it's

00:05:19,680 --> 00:05:23,940
written in Ruby because the puppet

00:05:21,930 --> 00:05:26,280
manifests the source code that we write

00:05:23,940 --> 00:05:27,990
is not written in Ruby that's a

00:05:26,280 --> 00:05:31,830
difference to chef where you have to

00:05:27,990 --> 00:05:33,720
write a ruby code all the time I don't

00:05:31,830 --> 00:05:35,430
really like Ruby I already develop some

00:05:33,720 --> 00:05:37,470
Ruby code but I don't really like it and

00:05:35,430 --> 00:05:40,710
it was one of the decisions for me to

00:05:37,470 --> 00:05:43,950
choose puppet over chef because if I

00:05:40,710 --> 00:05:46,680
have a programming language like Ruby I

00:05:43,950 --> 00:05:49,500
could in my configuration management

00:05:46,680 --> 00:05:52,200
source code for instance use active

00:05:49,500 --> 00:05:53,610
record and access a MySQL database and I

00:05:52,200 --> 00:05:55,560
don't really want to do that and it's

00:05:53,610 --> 00:05:58,229
pretty nice that puppet prohibits me

00:05:55,560 --> 00:06:01,620
from doing that so this was one of the

00:05:58,229 --> 00:06:03,810
only difference from functionality that

00:06:01,620 --> 00:06:05,820
I saw between puppet and chef back then

00:06:03,810 --> 00:06:07,740
so most of the stuffs that I'm going to

00:06:05,820 --> 00:06:09,660
tell you here could be applied to chef

00:06:07,740 --> 00:06:15,270
as well it's just a different syntax and

00:06:09,660 --> 00:06:18,780
it allows you to do some more stuff you

00:06:15,270 --> 00:06:21,180
can write plug-ins in Ruby for puppet I

00:06:18,780 --> 00:06:23,700
actually already did that they were like

00:06:21,180 --> 00:06:26,550
copy-paste adapt code so I copied

00:06:23,700 --> 00:06:28,080
something from one plug-in and changed a

00:06:26,550 --> 00:06:29,970
little bit of it and then it suddenly

00:06:28,080 --> 00:06:31,860
worked I still don't know how to do Ruby

00:06:29,970 --> 00:06:35,190
but I developed puppet plugins that's

00:06:31,860 --> 00:06:37,440
pretty nice but I'm also going to show

00:06:35,190 --> 00:06:39,150
you a way on how you don't have to write

00:06:37,440 --> 00:06:40,810
Ruby code in a situation we would

00:06:39,150 --> 00:06:43,320
normally write a

00:06:40,810 --> 00:06:43,320
a plug-in

00:06:44,770 --> 00:06:49,510
puppet can be run in a one-note setup

00:06:47,500 --> 00:06:51,850
which means you deploy your puppet

00:06:49,510 --> 00:06:54,550
source code on a machine and tell puppet

00:06:51,850 --> 00:06:57,010
please execute the source code but in

00:06:54,550 --> 00:06:59,080
addition you could also have a multi

00:06:57,010 --> 00:07:01,150
node setup a so-called master agent

00:06:59,080 --> 00:07:03,130
setup where you have the single node

00:07:01,150 --> 00:07:05,740
which is responsible for handling the

00:07:03,130 --> 00:07:10,750
configuration of all other nodes this is

00:07:05,740 --> 00:07:13,810
the so-called master some companies even

00:07:10,750 --> 00:07:16,330
use the one node set up in a big cluster

00:07:13,810 --> 00:07:19,150
so they have for instance Debian

00:07:16,330 --> 00:07:21,190
packages which distribute the puppet

00:07:19,150 --> 00:07:23,380
source code to all nodes and then

00:07:21,190 --> 00:07:25,840
execute it locally but you lose some

00:07:23,380 --> 00:07:27,370
features if you do that you don't have a

00:07:25,840 --> 00:07:29,440
single point of failure in that case

00:07:27,370 --> 00:07:32,979
which might be nice but you lose some

00:07:29,440 --> 00:07:34,750
features I would always suggest going

00:07:32,979 --> 00:07:36,100
the master agent way unless you have too

00:07:34,750 --> 00:07:39,370
many nodes and you can't scare your

00:07:36,100 --> 00:07:42,100
master anymore one important thing about

00:07:39,370 --> 00:07:45,460
puppet is that it's say that if you

00:07:42,100 --> 00:07:48,310
write puppet manifests though you write

00:07:45,460 --> 00:07:51,400
it in a declarative way compared to

00:07:48,310 --> 00:07:54,460
imperative or whatever so you don't say

00:07:51,400 --> 00:07:56,919
like apt-get install Apache but instead

00:07:54,460 --> 00:08:01,800
you say you should be an apache

00:07:56,919 --> 00:08:04,390
installed and oh i got notes about that

00:08:01,800 --> 00:08:06,580
too so you describe the state that

00:08:04,390 --> 00:08:09,520
should be achieved and you don't

00:08:06,580 --> 00:08:10,750
describe how to achieve that state for

00:08:09,520 --> 00:08:12,610
sure there are some exceptions where you

00:08:10,750 --> 00:08:16,450
have to describe the actions but most of

00:08:12,610 --> 00:08:18,430
the time this is true and puppets job is

00:08:16,450 --> 00:08:21,310
to ensure that this state is the current

00:08:18,430 --> 00:08:24,700
state of a node so this is what puppet

00:08:21,310 --> 00:08:27,340
basically does there's another very very

00:08:24,700 --> 00:08:31,180
important concept in puppet that mean

00:08:27,340 --> 00:08:36,099
that is item 14c who of you knows what

00:08:31,180 --> 00:08:40,630
it means okay idempotency is some

00:08:36,099 --> 00:08:42,700
mathematical term actually it means that

00:08:40,630 --> 00:08:45,400
it doesn't matter how often you execute

00:08:42,700 --> 00:08:49,510
an action the result should always be

00:08:45,400 --> 00:08:52,209
the same for instance doing a get

00:08:49,510 --> 00:08:53,950
request on a website it should be

00:08:52,209 --> 00:08:55,880
idempotent because you always get the

00:08:53,950 --> 00:08:58,460
same reason

00:08:55,880 --> 00:09:00,800
but if you append something to a file

00:08:58,460 --> 00:09:02,810
then that's not idempotent because if

00:09:00,800 --> 00:09:04,880
you do that twice it's going to be twice

00:09:02,810 --> 00:09:08,060
the size the file is going to be twice

00:09:04,880 --> 00:09:10,370
the size again if you write some content

00:09:08,060 --> 00:09:12,560
to a file and overwrite it every time

00:09:10,370 --> 00:09:14,660
that would be item potent again the same

00:09:12,560 --> 00:09:17,540
applies for everything you do in puppet

00:09:14,660 --> 00:09:19,160
it should be item potent and this is

00:09:17,540 --> 00:09:21,560
actually pretty nice because that means

00:09:19,160 --> 00:09:23,150
you can run puppet all the time like

00:09:21,560 --> 00:09:25,430
every five minutes every thirty minutes

00:09:23,150 --> 00:09:28,310
every thirty seconds if you have that

00:09:25,430 --> 00:09:30,680
much CPU left and puppet will always

00:09:28,310 --> 00:09:33,470
ensure that this state is present so one

00:09:30,680 --> 00:09:35,690
developer locks into an a machine and

00:09:33,470 --> 00:09:37,820
type something modify something puppets

00:09:35,690 --> 00:09:39,860
gonna immediately overwrite it

00:09:37,820 --> 00:09:41,720
that's way nice so then if it would like

00:09:39,860 --> 00:09:46,040
never do that and you wouldn't realize

00:09:41,720 --> 00:09:48,410
that something was changed enough of

00:09:46,040 --> 00:09:52,850
that blah blah let's get you some real

00:09:48,410 --> 00:09:54,650
code the first thing I always try to

00:09:52,850 --> 00:09:56,420
teach people about populous how to

00:09:54,650 --> 00:09:57,620
install a package because that's the

00:09:56,420 --> 00:10:00,320
thing you have to do when you want to

00:09:57,620 --> 00:10:02,870
set up a machine if you're in a Debian

00:10:00,320 --> 00:10:05,000
or Ubuntu machine you'll normally do

00:10:02,870 --> 00:10:07,520
like apt-get install apache2 or maybe

00:10:05,000 --> 00:10:10,000
aptitude install apache2 whatever if you

00:10:07,520 --> 00:10:12,680
want to install an apache to web server

00:10:10,000 --> 00:10:16,040
with the puppet you do puppet agent

00:10:12,680 --> 00:10:18,680
apply a patch each OPP this is actually

00:10:16,040 --> 00:10:20,570
a one-note setup if you this is what you

00:10:18,680 --> 00:10:22,430
would do in a one-note setup if you have

00:10:20,570 --> 00:10:24,410
master agent setup this all is a bit

00:10:22,430 --> 00:10:26,630
different but for getting started the

00:10:24,410 --> 00:10:31,570
one notes that i was totally fine and is

00:10:26,630 --> 00:10:34,430
way more easy so Apache 2.0 file name

00:10:31,570 --> 00:10:37,310
and this file has to have this content

00:10:34,430 --> 00:10:39,530
we define a so called resource of the

00:10:37,310 --> 00:10:41,990
type package give it the name of patchy

00:10:39,530 --> 00:10:45,290
to and say please ensure that this

00:10:41,990 --> 00:10:47,510
package this resource is present and if

00:10:45,290 --> 00:10:49,790
we run this now puppet is going to

00:10:47,510 --> 00:10:52,670
install an Apache two at the Apache two

00:10:49,790 --> 00:10:54,380
package if you would run it again

00:10:52,670 --> 00:10:56,660
it wouldn't install it again because it

00:10:54,380 --> 00:10:58,790
would check is there a package yes it is

00:10:56,660 --> 00:11:01,160
that package installed yes it is so

00:10:58,790 --> 00:11:05,600
don't do anything that's important for

00:11:01,160 --> 00:11:07,860
this item 410 see maybe one of you uses

00:11:05,600 --> 00:11:11,700
Red Hat on on red head if you

00:11:07,860 --> 00:11:13,770
install apache2 if you have to say yum

00:11:11,700 --> 00:11:17,010
install httpd instead of yum install

00:11:13,770 --> 00:11:18,660
apache2 no why no actually I do know why

00:11:17,010 --> 00:11:23,130
and it makes sense but it's weird in the

00:11:18,660 --> 00:11:25,710
first moment if you want to use that

00:11:23,130 --> 00:11:29,130
with puppet you have to do this again

00:11:25,710 --> 00:11:33,690
resource package the name httpd and show

00:11:29,130 --> 00:11:36,540
present so puppet is a wrapper provides

00:11:33,690 --> 00:11:38,160
a wrapper for this young or apt-get but

00:11:36,540 --> 00:11:41,490
it doesn't provide a wrapper for these

00:11:38,160 --> 00:11:43,320
package names you might want to ask what

00:11:41,490 --> 00:11:46,890
if I want to support both redhead and

00:11:43,320 --> 00:11:49,800
Ubuntu then you can use a switch case

00:11:46,890 --> 00:11:51,330
statement for instance and I introduce

00:11:49,800 --> 00:11:53,940
another concept here I introduce the

00:11:51,330 --> 00:11:56,460
concept of variables I create a variable

00:11:53,940 --> 00:11:58,560
web server package name and then I do a

00:11:56,460 --> 00:12:02,010
switch case in this funny syntax and say

00:11:58,560 --> 00:12:05,040
say if operating system is Ubuntu use

00:12:02,010 --> 00:12:07,220
Apache - if it's Red Hat use HTTP D and

00:12:05,040 --> 00:12:10,350
the default should be a battery - again

00:12:07,220 --> 00:12:13,800
and this variable variable can in turn

00:12:10,350 --> 00:12:16,890
be used as a name for this packet

00:12:13,800 --> 00:12:19,560
resource so this manifest would actually

00:12:16,890 --> 00:12:22,290
work on a boon to end on red head so the

00:12:19,560 --> 00:12:25,160
question was if puppet uses aptitude or

00:12:22,290 --> 00:12:26,910
app get or yum you normally get

00:12:25,160 --> 00:12:29,670
questions during the installation

00:12:26,910 --> 00:12:32,370
process and how does puppet handle that

00:12:29,670 --> 00:12:34,350
and the true the real answer would be it

00:12:32,370 --> 00:12:36,240
kind of ignores that it passes the flag

00:12:34,350 --> 00:12:40,380
that all questions should be answered

00:12:36,240 --> 00:12:42,420
with yes so this works out quite well

00:12:40,380 --> 00:12:45,510
actually I never experienced problems

00:12:42,420 --> 00:12:49,220
with that I had experienced problems

00:12:45,510 --> 00:12:52,830
with some package I think it was the

00:12:49,220 --> 00:12:55,860
Oracle jr. or something which has a

00:12:52,830 --> 00:12:58,230
license agreement question which is kind

00:12:55,860 --> 00:13:00,660
of different kind of weird and puppet

00:12:58,230 --> 00:13:02,190
failed for that at first but I figured

00:13:00,660 --> 00:13:03,930
out a way how I could tell the system

00:13:02,190 --> 00:13:07,410
that I already acknowledged the license

00:13:03,930 --> 00:13:09,900
and then it worked as well and you also

00:13:07,410 --> 00:13:12,150
asked that or mentioned that these

00:13:09,900 --> 00:13:13,830
package managers suggest installing

00:13:12,150 --> 00:13:15,780
other packages and this is something

00:13:13,830 --> 00:13:18,240
that puppet completely ignores it

00:13:15,780 --> 00:13:20,130
doesn't install suggested packages it

00:13:18,240 --> 00:13:21,540
does install dependencies obviously but

00:13:20,130 --> 00:13:22,860
not the suggested ones

00:13:21,540 --> 00:13:25,790
because if you want to have them you

00:13:22,860 --> 00:13:27,900
have to tell it to pop it on your own

00:13:25,790 --> 00:13:29,460
and repeating the questions for the

00:13:27,900 --> 00:13:34,260
camera by the way because someone looked

00:13:29,460 --> 00:13:36,870
a bit confused is that okay as an answer

00:13:34,260 --> 00:13:39,660
okay fine I might want to ask where does

00:13:36,870 --> 00:13:42,300
this operating system variable come from

00:13:39,660 --> 00:13:45,980
that's actually something where puppet

00:13:42,300 --> 00:13:50,520
leverages a different tool called factor

00:13:45,980 --> 00:13:52,890
which provides facts about notes so you

00:13:50,520 --> 00:13:54,780
can run this on every note where you

00:13:52,890 --> 00:13:56,610
install puppet there's also a factor

00:13:54,780 --> 00:14:00,330
automatically but it's a separate tool

00:13:56,610 --> 00:14:02,160
and it describes the current note so for

00:14:00,330 --> 00:14:03,360
instance it describes the operating

00:14:02,160 --> 00:14:05,220
system and all these facts are

00:14:03,360 --> 00:14:07,760
automatically available as variables and

00:14:05,220 --> 00:14:10,920
puppet but you could also access them

00:14:07,760 --> 00:14:13,350
using a command-line tool which is just

00:14:10,920 --> 00:14:15,450
called factor and if you call factor on

00:14:13,350 --> 00:14:17,430
the command line you do like this and

00:14:15,450 --> 00:14:19,200
then you wait and then you wait because

00:14:17,430 --> 00:14:21,900
it's for some reason incredibly slow

00:14:19,200 --> 00:14:23,760
maybe because it's Ruby I'm not sure and

00:14:21,900 --> 00:14:26,700
then some at some point you get this

00:14:23,760 --> 00:14:29,240
output and some more lines but the slide

00:14:26,700 --> 00:14:32,910
was too small and right here we find

00:14:29,240 --> 00:14:35,040
operating system equals one two and we

00:14:32,910 --> 00:14:37,170
also get some other information like the

00:14:35,040 --> 00:14:38,790
disk code name and the release version

00:14:37,170 --> 00:14:42,390
so if we have to discrete the English

00:14:38,790 --> 00:14:44,700
within our puppet manifests the release

00:14:42,390 --> 00:14:46,170
of for instance Ubuntu or whatever

00:14:44,700 --> 00:14:48,180
distribution you use they all have

00:14:46,170 --> 00:14:51,510
releases then you can use these

00:14:48,180 --> 00:14:53,610
variables and actually until I did this

00:14:51,510 --> 00:14:56,160
talk like a year ago at some conference

00:14:53,610 --> 00:14:58,350
I said Ivan on an Ubuntu system I don't

00:14:56,160 --> 00:15:00,210
know how to figure out which version it

00:14:58,350 --> 00:15:01,530
is and I'm so happy that I factor now

00:15:00,210 --> 00:15:03,660
and I can ask it that way

00:15:01,530 --> 00:15:05,430
someone told to me all this it is the

00:15:03,660 --> 00:15:07,080
issue it says that as well I'm happy

00:15:05,430 --> 00:15:09,840
about that but at first I really liked

00:15:07,080 --> 00:15:11,460
it to figure this out you can also see

00:15:09,840 --> 00:15:13,620
there it's like the IP address which is

00:15:11,460 --> 00:15:18,000
totally useful or you can see if it's a

00:15:13,620 --> 00:15:21,390
virtual machine and so on so much about

00:15:18,000 --> 00:15:24,240
factor at this point there's one

00:15:21,390 --> 00:15:25,800
important note about the puppet manifest

00:15:24,240 --> 00:15:28,560
the puppet manifests are those files

00:15:25,800 --> 00:15:29,820
that we just wrote and when you work

00:15:28,560 --> 00:15:31,590
with puppet you really have to

00:15:29,820 --> 00:15:33,600
understand that you have to treat them

00:15:31,590 --> 00:15:35,390
as source code you have to do what not

00:15:33,600 --> 00:15:37,370
everything you do with your diff

00:15:35,390 --> 00:15:39,050
every other source code you have to do

00:15:37,370 --> 00:15:40,640
with the puppet manifest that way as

00:15:39,050 --> 00:15:43,220
well this means for sure

00:15:40,640 --> 00:15:45,709
version control it most likely should

00:15:43,220 --> 00:15:48,019
mean ultimate testing as well and it

00:15:45,709 --> 00:15:49,610
means code review and whatever else you

00:15:48,019 --> 00:15:51,589
do you should do that with puppet

00:15:49,610 --> 00:15:53,930
manifests as well you can there's a tool

00:15:51,589 --> 00:15:54,620
puppet lint which checks if the file is

00:15:53,930 --> 00:15:58,490
valid

00:15:54,620 --> 00:16:01,100
there are also some IDs out there which

00:15:58,490 --> 00:16:04,040
support you in writing puppet manifests

00:16:01,100 --> 00:16:06,970
and nearly every IDE or editor has

00:16:04,040 --> 00:16:10,100
syntax highlighting at least for puppet

00:16:06,970 --> 00:16:12,380
so this is it's actually on tool that is

00:16:10,100 --> 00:16:14,510
quite a couple of years old now so there

00:16:12,380 --> 00:16:15,920
is some kind of echo system already does

00:16:14,510 --> 00:16:18,110
that answer your question did you want

00:16:15,920 --> 00:16:20,329
to go into another direction okay

00:16:18,110 --> 00:16:22,370
we just created one resource so

00:16:20,329 --> 00:16:24,440
everything is fine but as soon as we

00:16:22,370 --> 00:16:26,660
start defining more than one resource in

00:16:24,440 --> 00:16:27,560
our puppet manifests at some point we'll

00:16:26,660 --> 00:16:30,410
figure out that

00:16:27,560 --> 00:16:34,550
these resources are not applied in the

00:16:30,410 --> 00:16:36,709
aura that we write them down this

00:16:34,550 --> 00:16:38,089
actually makes sense at the first point

00:16:36,709 --> 00:16:40,459
you think why the hell would you what

00:16:38,089 --> 00:16:42,380
they do that but but you have so many

00:16:40,459 --> 00:16:45,079
dependencies between different resources

00:16:42,380 --> 00:16:47,360
that you couldn't order it sequentially

00:16:45,079 --> 00:16:49,760
and still understand what you're doing

00:16:47,360 --> 00:16:51,860
so it's really nice that puppet doesn't

00:16:49,760 --> 00:16:55,310
do it this way but instead you can

00:16:51,860 --> 00:16:59,540
define dependencies between resources

00:16:55,310 --> 00:17:02,000
and this is what we're gonna do here we

00:16:59,540 --> 00:17:04,040
have again this package web server the

00:17:02,000 --> 00:17:06,559
package for the pesci - web server or

00:17:04,040 --> 00:17:09,100
whatever web server we eight use and we

00:17:06,559 --> 00:17:11,329
say please ensure that its present in

00:17:09,100 --> 00:17:14,839
addition we're going to create the

00:17:11,329 --> 00:17:17,980
config file of our pet oh sorry have our

00:17:14,839 --> 00:17:20,630
light httpd web server in this case and

00:17:17,980 --> 00:17:22,549
we use the fire resource for that and

00:17:20,630 --> 00:17:25,819
say this file should somehow be handled

00:17:22,549 --> 00:17:27,650
by puppet actually we say please ensure

00:17:25,819 --> 00:17:31,160
that it's present and that the content

00:17:27,650 --> 00:17:33,559
is fubar if we would now run this

00:17:31,160 --> 00:17:37,460
manifest and puppet wood for some reason

00:17:33,559 --> 00:17:40,160
decide to evaluate this resource before

00:17:37,460 --> 00:17:42,740
this resource and the package is not yet

00:17:40,160 --> 00:17:45,559
installed puppet has gone fail because

00:17:42,740 --> 00:17:47,750
this directory doesn't exist so what we

00:17:45,559 --> 00:17:49,130
have to do is we have to say this

00:17:47,750 --> 00:17:51,650
resource the fire is

00:17:49,130 --> 00:17:55,669
requires the packet resource with the

00:17:51,650 --> 00:17:57,710
name web server package name actually

00:17:55,669 --> 00:18:00,470
you might have noticed this capital P

00:17:57,710 --> 00:18:04,460
there this is actually on purpose and

00:18:00,470 --> 00:18:07,370
pappad if you create a resource you

00:18:04,460 --> 00:18:09,470
write everything like lowercase as soon

00:18:07,370 --> 00:18:11,480
as your reference resource somewhere you

00:18:09,470 --> 00:18:14,780
have to write the first letter big it's

00:18:11,480 --> 00:18:16,250
a capital I guess that's because someone

00:18:14,780 --> 00:18:18,110
didn't know how to write a parser or

00:18:16,250 --> 00:18:21,830
something I got no sane reason for that

00:18:18,110 --> 00:18:24,740
sorry you just have to live with it

00:18:21,830 --> 00:18:26,690
I just showed you how to create a file

00:18:24,740 --> 00:18:28,760
and write some static content into it

00:18:26,690 --> 00:18:29,929
but that's quite boring and I'm gonna

00:18:28,760 --> 00:18:32,659
show you something that's a little bit

00:18:29,929 --> 00:18:34,789
more interesting this was the example we

00:18:32,659 --> 00:18:36,620
just had but instead of just writing

00:18:34,789 --> 00:18:40,280
static content in there you could say

00:18:36,620 --> 00:18:43,909
please use the file tempo bar as the

00:18:40,280 --> 00:18:46,159
source for this light httpd.conf and we

00:18:43,909 --> 00:18:48,230
can again use variables within this

00:18:46,159 --> 00:18:51,020
string for instance the fact of the

00:18:48,230 --> 00:18:53,630
hostname this will allow us already if

00:18:51,020 --> 00:18:56,240
we have several machines and several

00:18:53,630 --> 00:19:00,380
light httpd config files for this to

00:18:56,240 --> 00:19:02,270
store them all in one directory and give

00:19:00,380 --> 00:19:05,210
them a name depending on the hostname

00:19:02,270 --> 00:19:07,179
this is a bad practice I'm just going to

00:19:05,210 --> 00:19:10,909
show to you how that could work this way

00:19:07,179 --> 00:19:13,669
those of you who attended the talk about

00:19:10,909 --> 00:19:16,159
solid architecture and stuff know solid

00:19:13,669 --> 00:19:18,200
infrastructure and stuff they showed it

00:19:16,159 --> 00:19:19,460
as well there's really not the way you

00:19:18,200 --> 00:19:23,690
want to do it I'm going to show you how

00:19:19,460 --> 00:19:26,150
you want to do later in addition you can

00:19:23,690 --> 00:19:28,130
manage services with puppet despite all

00:19:26,150 --> 00:19:30,590
files and packages there's also services

00:19:28,130 --> 00:19:32,450
if we do this puppet we'll make sure

00:19:30,590 --> 00:19:35,030
that the service with the name light

00:19:32,450 --> 00:19:37,010
httpd is currently running and that it's

00:19:35,030 --> 00:19:39,590
enabled which would mean that it starts

00:19:37,010 --> 00:19:42,350
at boot up of the system puppet can

00:19:39,590 --> 00:19:44,600
handle this for like all the important

00:19:42,350 --> 00:19:47,659
Linux distributions and in some ways

00:19:44,600 --> 00:19:49,520
somehow and I don't know with Windows as

00:19:47,659 --> 00:19:51,260
well but I know nothing about them with

00:19:49,520 --> 00:19:56,480
no support of puppet I just read about

00:19:51,260 --> 00:19:58,280
it with her services we would also have

00:19:56,480 --> 00:20:00,169
to create a dependency obviously to the

00:19:58,280 --> 00:20:01,400
package because otherwise the service

00:20:00,169 --> 00:20:02,630
would try to be started without the

00:20:01,400 --> 00:20:06,020
package being installed which

00:20:02,630 --> 00:20:07,970
work out but there's actually something

00:20:06,020 --> 00:20:10,940
that's a bit cooler about dependencies

00:20:07,970 --> 00:20:13,370
than what I just showed you did one of

00:20:10,940 --> 00:20:15,050
you ever change a config file and forget

00:20:13,370 --> 00:20:16,850
to restart the service afterwards and

00:20:15,050 --> 00:20:18,200
wondered why is it not working why is it

00:20:16,850 --> 00:20:20,090
not working why is it not working

00:20:18,200 --> 00:20:22,010
yeah I did that I don't know how many

00:20:20,090 --> 00:20:24,380
times and actually when I started

00:20:22,010 --> 00:20:26,180
looking into puppet and chef when I

00:20:24,380 --> 00:20:26,930
realized this feature that I'm going to

00:20:26,180 --> 00:20:29,090
show you in a minute

00:20:26,930 --> 00:20:31,250
there was the Monroes like oh I won't

00:20:29,090 --> 00:20:34,760
have it because puppet helps us to not

00:20:31,250 --> 00:20:37,010
forget that let's imagine we have this

00:20:34,760 --> 00:20:39,170
package light httpd again and we have a

00:20:37,010 --> 00:20:42,250
sow's light httpd which requires the

00:20:39,170 --> 00:20:45,200
package and we also have a config file

00:20:42,250 --> 00:20:47,020
then we can add we have a venture

00:20:45,200 --> 00:20:50,540
present content fubar required package

00:20:47,020 --> 00:20:53,360
notify service light httpd this means

00:20:50,540 --> 00:20:55,700
that whenever this resource is changed

00:20:53,360 --> 00:20:59,690
in some way it's going to try to restart

00:20:55,700 --> 00:21:00,830
the service of light httpd this means if

00:20:59,690 --> 00:21:02,210
you for instance change the

00:21:00,830 --> 00:21:04,370
configuration within your puppet

00:21:02,210 --> 00:21:07,010
manifests deploy the puppet manifest and

00:21:04,370 --> 00:21:09,080
the server evaluates the new manifest

00:21:07,010 --> 00:21:11,390
it's going to automatically restart

00:21:09,080 --> 00:21:13,910
light shade light HTTP for sure you have

00:21:11,390 --> 00:21:15,590
to think of this line yes but you only

00:21:13,910 --> 00:21:17,390
have to write it once and not every time

00:21:15,590 --> 00:21:22,010
that you modify the configuration which

00:21:17,390 --> 00:21:23,900
was totally awesome ok now that we

00:21:22,010 --> 00:21:26,270
talked about that I want to get back to

00:21:23,900 --> 00:21:28,790
the files and I want to get talk about

00:21:26,270 --> 00:21:30,980
templates this is the way how you want

00:21:28,790 --> 00:21:32,900
to create different config files for

00:21:30,980 --> 00:21:36,110
different machines not the hostname

00:21:32,900 --> 00:21:39,080
thing I just showed you puppet has this

00:21:36,110 --> 00:21:41,390
templating language or uses this

00:21:39,080 --> 00:21:44,000
templating language which ER B which is

00:21:41,390 --> 00:21:47,510
I think embedded Ruby now I got no idea

00:21:44,000 --> 00:21:49,640
at some Ruby templating language and you

00:21:47,510 --> 00:21:52,550
can use it within puppet and say this

00:21:49,640 --> 00:21:56,150
file should have the contents that this

00:21:52,550 --> 00:21:59,330
template evaluation really would return

00:21:56,150 --> 00:22:01,940
and within that template we can again

00:21:59,330 --> 00:22:03,800
use variables for instance we could use

00:22:01,940 --> 00:22:05,750
facts but we can also use our own

00:22:03,800 --> 00:22:07,310
variables which could be created by

00:22:05,750 --> 00:22:10,100
facts

00:22:07,310 --> 00:22:12,050
I was actually already helping a couple

00:22:10,100 --> 00:22:15,140
of companies with their puppet setups

00:22:12,050 --> 00:22:16,250
and one mistake that nearly all of them

00:22:15,140 --> 00:22:18,410
did is they

00:22:16,250 --> 00:22:20,150
understand this templating feature and

00:22:18,410 --> 00:22:21,740
instead created all the different files

00:22:20,150 --> 00:22:24,020
for all the different hosts as I just

00:22:21,740 --> 00:22:26,060
showed and this doesn't really make it

00:22:24,020 --> 00:22:27,830
maintainable because you do a whole lot

00:22:26,060 --> 00:22:30,200
of copy and paste because we have a camp

00:22:27,830 --> 00:22:31,730
there's separate config file for every

00:22:30,200 --> 00:22:33,470
machine and if you want to change one

00:22:31,730 --> 00:22:36,080
well you're an arm machine you have to

00:22:33,470 --> 00:22:40,880
modify all these files so you really

00:22:36,080 --> 00:22:42,830
want to use these templates okay I'm

00:22:40,880 --> 00:22:44,690
gonna switch the topic for a second and

00:22:42,830 --> 00:22:46,220
I'm going to talk about vagrant we're

00:22:44,690 --> 00:22:48,920
going to talk about puppet again in a

00:22:46,220 --> 00:22:52,910
minute but I want to just introduce you

00:22:48,920 --> 00:22:55,030
to vagrant at this point vagrant is the

00:22:52,910 --> 00:22:58,880
tool developed by some cool American

00:22:55,030 --> 00:23:01,520
which helps you to leverage tools like

00:22:58,880 --> 00:23:05,150
puppet chef salt steak and all these

00:23:01,520 --> 00:23:07,370
conflict management tools and install a

00:23:05,150 --> 00:23:10,730
virtual machine for every developer on

00:23:07,370 --> 00:23:12,500
his on his computer that reproduces your

00:23:10,730 --> 00:23:15,140
production environment in some way and

00:23:12,500 --> 00:23:17,900
which sets up all the services you need

00:23:15,140 --> 00:23:19,390
and configures them and I don't know

00:23:17,900 --> 00:23:22,520
what else you have to do on a machine

00:23:19,390 --> 00:23:24,080
development machine and yeah he

00:23:22,520 --> 00:23:25,940
developed it as an open source project

00:23:24,080 --> 00:23:27,140
and at some point he founded a company

00:23:25,940 --> 00:23:29,750
and then and suddenly had to be

00:23:27,140 --> 00:23:34,640
enterprising so it had this logo right

00:23:29,750 --> 00:23:37,700
now but yeah let me tell you what the

00:23:34,640 --> 00:23:39,050
purpose of vagrant really is and it

00:23:37,700 --> 00:23:41,600
solves a problem that we all know

00:23:39,050 --> 00:23:44,480
imagine you are a producer of chocolate

00:23:41,600 --> 00:23:45,920
and you produce this awesome piece of

00:23:44,480 --> 00:23:47,900
chocolate and then you ship it to the

00:23:45,920 --> 00:23:50,210
customer and the customer looks at it

00:23:47,900 --> 00:23:52,010
and says well it's kind of broken and

00:23:50,210 --> 00:23:54,140
then you look at it again and it's like

00:23:52,010 --> 00:23:56,360
oh it's awesome and then you're gonna

00:23:54,140 --> 00:23:58,520
say yeah it works for me some sentence

00:23:56,360 --> 00:24:00,080
that illy every developer used I used it

00:23:58,520 --> 00:24:01,760
I don't know how many times I still use

00:24:00,080 --> 00:24:04,190
it when it gets to Internet Explorer 6

00:24:01,760 --> 00:24:06,770
but that's some completely different

00:24:04,190 --> 00:24:09,050
topic if you've never heard of it

00:24:06,770 --> 00:24:12,200
there's some explanation of the urban

00:24:09,050 --> 00:24:13,880
dictionary on what it means it's

00:24:12,200 --> 00:24:16,580
something that really every developer

00:24:13,880 --> 00:24:17,930
says because you change the code on your

00:24:16,580 --> 00:24:20,330
development machine you deploy to

00:24:17,930 --> 00:24:22,310
production something breaks and pop

00:24:20,330 --> 00:24:25,010
puppet and vagrant the combination of

00:24:22,310 --> 00:24:26,840
both helps us to make sure that this

00:24:25,010 --> 00:24:29,270
doesn't happen because the developer has

00:24:26,840 --> 00:24:30,169
a kind of replicate of the production

00:24:29,270 --> 00:24:32,840
environment on his

00:24:30,169 --> 00:24:34,789
local machine and this all is automated

00:24:32,840 --> 00:24:37,340
and I'm gonna show you how we use it in

00:24:34,789 --> 00:24:39,559
a second and it's pretty nice okay

00:24:37,340 --> 00:24:41,330
somewhere it's about a vagrant already

00:24:39,559 --> 00:24:44,059
mentioned it's for creating development

00:24:41,330 --> 00:24:47,119
machines it uses a puppet and chef

00:24:44,059 --> 00:24:52,039
it works with VirtualBox and VMware and

00:24:47,119 --> 00:24:54,019
some cloud providers as well so the

00:24:52,039 --> 00:24:56,359
VirtualBox integration is open source

00:24:54,019 --> 00:25:00,529
and free if you want to use VMware you

00:24:56,359 --> 00:25:03,230
have to pay like $80 per developer and

00:25:00,529 --> 00:25:05,509
you also have to pay $80 for the VMware

00:25:03,230 --> 00:25:07,429
license per developer so it's quite

00:25:05,509 --> 00:25:10,039
expensive but it's a really big

00:25:07,429 --> 00:25:13,309
performance boost and if you're a Mac OS

00:25:10,039 --> 00:25:15,590
user VirtualBox on the new Mavericks

00:25:13,309 --> 00:25:21,679
system is kind of weird and VMware is

00:25:15,590 --> 00:25:25,489
working quite well vagrant is written in

00:25:21,679 --> 00:25:27,169
Ruby as well and you can again extend it

00:25:25,489 --> 00:25:29,059
using Ruby and I already did that as

00:25:27,169 --> 00:25:30,919
well I've got no idea what that code did

00:25:29,059 --> 00:25:32,779
that I wrote there but the result was

00:25:30,919 --> 00:25:36,549
what I wanted so it's quite easy to

00:25:32,779 --> 00:25:39,109
extend it and it's again hopeful source

00:25:36,549 --> 00:25:42,529
let me show you a kind of a real-world

00:25:39,109 --> 00:25:44,720
example and how we use vagrant at puppet

00:25:42,529 --> 00:25:47,659
in our place and what it means to set up

00:25:44,720 --> 00:25:50,119
a new developer machine at our place the

00:25:47,659 --> 00:25:52,190
first thing you have to do is after

00:25:50,119 --> 00:25:54,109
getting an SSH key and signing up at

00:25:52,190 --> 00:25:56,359
github and stuff you have to clone a

00:25:54,109 --> 00:25:58,549
repository which lies on our internal

00:25:56,359 --> 00:26:00,259
github server and it's like some

00:25:58,549 --> 00:26:02,749
vagrants yes the ante this is the

00:26:00,259 --> 00:26:05,659
project we work in and after cloning

00:26:02,749 --> 00:26:07,940
that you move into it and you call in it

00:26:05,659 --> 00:26:09,559
applications init applications does

00:26:07,940 --> 00:26:11,539
nothing more than checking out a couple

00:26:09,559 --> 00:26:13,639
of other repositories that can contain

00:26:11,539 --> 00:26:16,249
our application source code so it's not

00:26:13,639 --> 00:26:20,179
really that important and then we do

00:26:16,249 --> 00:26:22,039
vagrant app and yeah then we go and grab

00:26:20,179 --> 00:26:24,499
a coffee because this is probably going

00:26:22,039 --> 00:26:27,289
to take some time with us it takes like

00:26:24,499 --> 00:26:28,730
two hours or something but we don't have

00:26:27,289 --> 00:26:30,619
to do anything in that time we can show

00:26:28,730 --> 00:26:32,330
that deal of developer around in our

00:26:30,619 --> 00:26:34,549
office and introduce them to everyone

00:26:32,330 --> 00:26:37,399
stuff we don't have to care about that

00:26:34,549 --> 00:26:41,040
and then we just open a web browser on

00:26:37,399 --> 00:26:44,100
this URL something like port 8080 to

00:26:41,040 --> 00:26:46,470
and some hostname and suddenly he's got

00:26:44,100 --> 00:26:47,880
our application up and running and our

00:26:46,470 --> 00:26:51,930
application up and running means that

00:26:47,880 --> 00:26:55,980
installed light httpd PHP MySQL coach DB

00:26:51,930 --> 00:26:56,520
Couchbase elasticsearch Redis I don't

00:26:55,980 --> 00:26:58,320
know what else

00:26:56,520 --> 00:26:59,910
so then start a couple of services in

00:26:58,320 --> 00:27:01,980
two hours without anyone doing anything

00:26:59,910 --> 00:27:04,770
this is something I really really

00:27:01,980 --> 00:27:06,750
appreciate but yeah you might want to

00:27:04,770 --> 00:27:08,730
ask what just happened at first we

00:27:06,750 --> 00:27:10,620
checked out the vagrant configuration

00:27:08,730 --> 00:27:12,840
this was this vagrancy has CNT

00:27:10,620 --> 00:27:14,910
repository it also contained our puppet

00:27:12,840 --> 00:27:16,620
configuration then we checked out the

00:27:14,910 --> 00:27:18,800
application source code this was init

00:27:16,620 --> 00:27:21,590
applications and we might about that one

00:27:18,800 --> 00:27:23,970
then we did vagrant up and that

00:27:21,590 --> 00:27:25,830
downloaded a so called vagrant box a

00:27:23,970 --> 00:27:28,740
vagrant box is kind of a template for

00:27:25,830 --> 00:27:32,220
virtual machines within vagrant so it's

00:27:28,740 --> 00:27:33,960
in our case just an empty Ubuntu I don't

00:27:32,220 --> 00:27:35,700
know the latest LTS version but it's

00:27:33,960 --> 00:27:37,770
something like that and it just

00:27:35,700 --> 00:27:39,150
downloads it and place it puts it

00:27:37,770 --> 00:27:41,270
somewhere and then it creates a new

00:27:39,150 --> 00:27:43,620
virtual machine out of this template and

00:27:41,270 --> 00:27:45,900
installed and configure it a couple of

00:27:43,620 --> 00:27:48,510
services there fetched a part of our

00:27:45,900 --> 00:27:50,670
production database and then the

00:27:48,510 --> 00:27:52,830
developer was able to use the his

00:27:50,670 --> 00:27:54,480
machine we're just totally awesome from

00:27:52,830 --> 00:27:55,380
my point of view you might want to ask

00:27:54,480 --> 00:27:57,540
why did that happen

00:27:55,380 --> 00:27:59,250
and the answer is quite simple we

00:27:57,540 --> 00:28:02,010
created a vagrant file within the

00:27:59,250 --> 00:28:04,950
repository and the vagrant file looks

00:28:02,010 --> 00:28:06,750
something like this you have this first

00:28:04,950 --> 00:28:09,450
line that does something I don't know

00:28:06,750 --> 00:28:13,380
it's Ruby and then you say please use

00:28:09,450 --> 00:28:16,650
the vagrant box with this name actually

00:28:13,380 --> 00:28:18,000
it's not an l2 yes in this case and if

00:28:16,650 --> 00:28:21,900
you don't have that box already

00:28:18,000 --> 00:28:24,630
downloaded from here and also creative

00:28:21,900 --> 00:28:27,000
port forwarding so that the port 80 of

00:28:24,630 --> 00:28:29,880
the virtual machine is available as port

00:28:27,000 --> 00:28:33,780
8080 too and my hypervisor so in my

00:28:29,880 --> 00:28:38,220
MacBook in my case and we also want to

00:28:33,780 --> 00:28:40,890
follow out the MySQL 7-hour case then we

00:28:38,220 --> 00:28:43,050
set up some shared folders we give this

00:28:40,890 --> 00:28:45,780
red folder name and then we say within

00:28:43,050 --> 00:28:48,030
the virtual machine the folder that is

00:28:45,780 --> 00:28:50,790
on my hypervisor at this path should be

00:28:48,030 --> 00:28:53,490
mounted to this path you can also set

00:28:50,790 --> 00:28:54,390
some contact options that it's using NFS

00:28:53,490 --> 00:28:57,180
man

00:28:54,390 --> 00:29:00,180
but yeah you really want to do that

00:28:57,180 --> 00:29:02,100
because without NFS it's quite slow let

00:29:00,180 --> 00:29:05,970
me just finish that and then I'll get

00:29:02,100 --> 00:29:09,120
back to you all so we tell it to use

00:29:05,970 --> 00:29:11,810
puppet with this weird Ruby syntax again

00:29:09,120 --> 00:29:15,540
we say this is your manifest file and

00:29:11,810 --> 00:29:17,670
also fetch puppet modules which are yeah

00:29:15,540 --> 00:29:20,460
third-party modules are our own modules

00:29:17,670 --> 00:29:23,010
from this path and vagrant will

00:29:20,460 --> 00:29:27,150
automatically mount these folders into

00:29:23,010 --> 00:29:31,200
the virtual machine then we just do some

00:29:27,150 --> 00:29:33,210
Ruby code and actually I didn't realize

00:29:31,200 --> 00:29:36,000
this until now but I'm still using the

00:29:33,210 --> 00:29:38,160
old vagrant fire syntax here changed

00:29:36,000 --> 00:29:40,290
some time ago but it's basically the

00:29:38,160 --> 00:29:42,420
same just some other words and namings

00:29:40,290 --> 00:29:44,040
and stuff and then if the answer is it

00:29:42,420 --> 00:29:46,260
doesn't you have this command line on

00:29:44,040 --> 00:29:48,270
Windows as well you have to do vagrant

00:29:46,260 --> 00:29:50,160
up there your there's as far as I know

00:29:48,270 --> 00:29:55,590
there is no user interface no graphical

00:29:50,160 --> 00:29:57,240
user interface for vagrant these days no

00:29:55,590 --> 00:29:59,250
this is not happening in the VMware

00:29:57,240 --> 00:30:03,420
application it's just on your command

00:29:59,250 --> 00:30:05,820
line on your control no windows are

00:30:03,420 --> 00:30:07,260
thingy and if you type in CMD there and

00:30:05,820 --> 00:30:09,150
press ENTER then you have some kind of a

00:30:07,260 --> 00:30:10,830
command line at least there was a couple

00:30:09,150 --> 00:30:12,720
of years ago and there you just have to

00:30:10,830 --> 00:30:16,320
say vagrant up it doesn't have to happen

00:30:12,720 --> 00:30:18,210
within VMware vagrant controls we enter

00:30:16,320 --> 00:30:20,340
and creates the virtual machine shuts it

00:30:18,210 --> 00:30:22,380
just puts it up and shuts it down and

00:30:20,340 --> 00:30:22,890
sets up port forwarding stands that that

00:30:22,380 --> 00:30:24,900
stuff

00:30:22,890 --> 00:30:27,000
the question was what why it makes sense

00:30:24,900 --> 00:30:29,310
to use VMware here because you don't

00:30:27,000 --> 00:30:30,930
have in your production environment you

00:30:29,310 --> 00:30:33,960
probably don't have Windows service to

00:30:30,930 --> 00:30:36,270
you so it makes sense to give the

00:30:33,960 --> 00:30:38,040
developer a linux or whatever machine

00:30:36,270 --> 00:30:39,930
you have in your production environment

00:30:38,040 --> 00:30:43,500
in this development environment as well

00:30:39,930 --> 00:30:45,810
and that's what we use VirtualBox of we

00:30:43,500 --> 00:30:48,660
and therefore there's another pretty

00:30:45,810 --> 00:30:50,700
cool feature in vagrant and vagrant

00:30:48,660 --> 00:30:53,640
supports multiple virtual machines

00:30:50,700 --> 00:30:55,260
within run vagrant file so for instance

00:30:53,640 --> 00:30:57,690
I could create this vagrant file which

00:30:55,260 --> 00:31:01,170
is kind of like what I did before here

00:30:57,690 --> 00:31:05,970
we say use this box and then we use

00:31:01,170 --> 00:31:08,220
config VM defined fubar bots and we

00:31:05,970 --> 00:31:11,549
distinguish the host names and the IP

00:31:08,220 --> 00:31:13,710
here and at the end we say please use

00:31:11,549 --> 00:31:16,530
this puppet file and if we do Wagner and

00:31:13,710 --> 00:31:18,990
up now vagrant will create three virtual

00:31:16,530 --> 00:31:20,580
machines and they are all going to use

00:31:18,990 --> 00:31:22,799
the same puppet configuration file

00:31:20,580 --> 00:31:24,659
they're all going to look the same they

00:31:22,799 --> 00:31:28,919
just have different IP addresses here

00:31:24,659 --> 00:31:29,940
and different host names and if you want

00:31:28,919 --> 00:31:31,860
to get your development environment

00:31:29,940 --> 00:31:34,049
closer to your production environment

00:31:31,860 --> 00:31:36,870
this is actually something you can use

00:31:34,049 --> 00:31:39,270
we use this for testing out rabbitmq but

00:31:36,870 --> 00:31:40,919
if you say that we have some problems

00:31:39,270 --> 00:31:42,929
communicating between our application

00:31:40,919 --> 00:31:44,700
selves and our database server and you

00:31:42,929 --> 00:31:46,950
want to reproduce this and development

00:31:44,700 --> 00:31:49,289
and come even closer to the production

00:31:46,950 --> 00:31:51,120
environment you can create something

00:31:49,289 --> 00:31:53,580
like this where you say okay I want one

00:31:51,120 --> 00:31:55,710
virtual machine called web which is the

00:31:53,580 --> 00:31:57,539
web server and we want one virtual

00:31:55,710 --> 00:32:00,390
machine called database which is going

00:31:57,539 --> 00:32:03,090
to be the database server then you can

00:32:00,390 --> 00:32:05,909
do this with vagrant as well and we

00:32:03,090 --> 00:32:09,419
include the same manifest file here

00:32:05,909 --> 00:32:11,840
again you might now wonder why do they

00:32:09,419 --> 00:32:14,340
get different configuration then and

00:32:11,840 --> 00:32:17,130
that is something where puppet has the

00:32:14,340 --> 00:32:19,620
concept of notes where you can just say

00:32:17,130 --> 00:32:21,750
ok I have an old web which gets packaged

00:32:19,620 --> 00:32:25,950
apache2 and I have no database which

00:32:21,750 --> 00:32:28,890
gets my SQL server and these note names

00:32:25,950 --> 00:32:31,500
are fetched from the hostname of the

00:32:28,890 --> 00:32:35,340
virtue of the machine so at first the

00:32:31,500 --> 00:32:36,990
checks is the hostname web does this

00:32:35,340 --> 00:32:38,700
match the hostname otherwise does it

00:32:36,990 --> 00:32:40,980
match the fully qualified domain name

00:32:38,700 --> 00:32:43,169
and I think something more does here and

00:32:40,980 --> 00:32:45,840
you could even use regular expressions

00:32:43,169 --> 00:32:49,760
here to say every machine that starts

00:32:45,840 --> 00:32:52,020
with web should get an Apache to install

00:32:49,760 --> 00:32:54,179
that's this is the way how you can

00:32:52,020 --> 00:32:56,250
distinguish different notes within

00:32:54,179 --> 00:32:57,780
puppet this is actually the format you

00:32:56,250 --> 00:33:01,530
would use on your puppet master as well

00:32:57,780 --> 00:33:05,130
or you use Huayra but i am not really

00:33:01,530 --> 00:33:07,620
that much into higher I'm gonna say

00:33:05,130 --> 00:33:09,840
somewhere it's about that later so yeah

00:33:07,620 --> 00:33:11,610
this is what you need on your puppet

00:33:09,840 --> 00:33:13,860
master as well so you're quite close to

00:33:11,610 --> 00:33:17,309
the production environment right now in

00:33:13,860 --> 00:33:18,400
your development environment before I

00:33:17,309 --> 00:33:20,290
get back to

00:33:18,400 --> 00:33:23,140
puppet there is one thing I want to say

00:33:20,290 --> 00:33:27,100
about vagrant vagrant has this Amazon

00:33:23,140 --> 00:33:29,320
ec2 integration for some time now which

00:33:27,100 --> 00:33:32,290
kind of allows you to you reuse your

00:33:29,320 --> 00:33:35,290
vagrant file and just say I want to use

00:33:32,290 --> 00:33:37,540
ec2 now and then type a grunt up and

00:33:35,290 --> 00:33:41,440
puppet is gonna start a vagrant is gonna

00:33:37,540 --> 00:33:43,930
start a machine on Amazon ec2 configure

00:33:41,440 --> 00:33:46,300
it using your puppet manifests our Zink

00:33:43,930 --> 00:33:49,540
the shared folder so it's one way in

00:33:46,300 --> 00:33:51,250
this case and also set up now I'm not

00:33:49,540 --> 00:33:52,870
sure of pod for weddings work but

00:33:51,250 --> 00:33:55,930
something like this works there as well

00:33:52,870 --> 00:33:57,670
so if you for instance have some tasks

00:33:55,930 --> 00:33:59,170
that you want to try out in development

00:33:57,670 --> 00:34:01,360
that needs more resources then your

00:33:59,170 --> 00:34:04,330
development machine has this is a way

00:34:01,360 --> 00:34:06,910
how you could leverage ec2 and ec2 is

00:34:04,330 --> 00:34:07,840
performance here this is just I never

00:34:06,910 --> 00:34:10,570
used it

00:34:07,840 --> 00:34:15,580
I know per piece and persons who used it

00:34:10,570 --> 00:34:17,710
but I never did it on my own ok I could

00:34:15,580 --> 00:34:19,360
foresee that kind of and we're kind of

00:34:17,710 --> 00:34:22,240
running out of time this is where I'm

00:34:19,360 --> 00:34:24,160
gonna speed things up a little maybe you

00:34:22,240 --> 00:34:26,560
won't understand every piece of what I

00:34:24,160 --> 00:34:28,000
just tell you in the next minutes and

00:34:26,560 --> 00:34:29,890
you won't understand every line of code

00:34:28,000 --> 00:34:31,300
the important part is that you

00:34:29,890 --> 00:34:34,600
understand the concepts and the ideas

00:34:31,300 --> 00:34:35,740
that I want to tell you and yeah what

00:34:34,600 --> 00:34:37,810
we're going to do now is we're gonna

00:34:35,740 --> 00:34:39,760
dive a bit deeper into what puppet

00:34:37,810 --> 00:34:42,100
actually could do and how you would

00:34:39,760 --> 00:34:43,570
wanna structure your puppet code the

00:34:42,100 --> 00:34:45,640
first thing that I'm gonna show you is

00:34:43,570 --> 00:34:47,680
class's puppet has this concept of

00:34:45,640 --> 00:34:49,540
classes which allow you to group

00:34:47,680 --> 00:34:51,580
together some resources for instance we

00:34:49,540 --> 00:34:54,460
could create this class light httpd

00:34:51,580 --> 00:34:56,830
which contains the package light httpd a

00:34:54,460 --> 00:34:58,930
file with the configuration and the

00:34:56,830 --> 00:35:01,600
service definition I left out the stuff

00:34:58,930 --> 00:35:04,060
we already talked about here and then we

00:35:01,600 --> 00:35:07,720
can just use the class by writing this

00:35:04,060 --> 00:35:09,220
and this is actually something you want

00:35:07,720 --> 00:35:11,380
to do you want to group together the

00:35:09,220 --> 00:35:15,850
resources because you want to reuse them

00:35:11,380 --> 00:35:17,890
maybe and yeah that's something we do in

00:35:15,850 --> 00:35:21,480
software development as well one note

00:35:17,890 --> 00:35:23,920
here classes and puppet are always

00:35:21,480 --> 00:35:28,180
Singleton's they can always only be

00:35:23,920 --> 00:35:29,470
instantiated once actually the only

00:35:28,180 --> 00:35:31,960
problem here is that they call it a

00:35:29,470 --> 00:35:33,520
classes it's no problem that there

00:35:31,960 --> 00:35:36,880
Singleton's alone can only be used once

00:35:33,520 --> 00:35:40,270
on a note it's just the name that is

00:35:36,880 --> 00:35:43,119
confusing here so the phone since

00:35:40,270 --> 00:35:45,040
machine can have the class I am a web

00:35:43,119 --> 00:35:46,390
server but it can't have that twice

00:35:45,040 --> 00:35:49,660
because it wouldn't make sense to

00:35:46,390 --> 00:35:51,940
install ID httpd twice and this is why

00:35:49,660 --> 00:35:57,250
they only can be applied once on a

00:35:51,940 --> 00:35:59,230
machine another concept of grouping the

00:35:57,250 --> 00:36:01,570
source code you write the puffit source

00:35:59,230 --> 00:36:03,880
code reader you write modules modules

00:36:01,570 --> 00:36:06,640
have this directory structure for

00:36:03,880 --> 00:36:08,770
instance module called light httpd would

00:36:06,640 --> 00:36:10,589
be in the directory light httpd and

00:36:08,770 --> 00:36:14,140
there would be a directory manifests

00:36:10,589 --> 00:36:17,109
with a file in it dot PP and in that we

00:36:14,140 --> 00:36:19,750
would define our class light HTTP so the

00:36:17,109 --> 00:36:22,810
code that we just wrote and then we can

00:36:19,750 --> 00:36:25,150
also add some files to that directory

00:36:22,810 --> 00:36:28,390
and use them using the file and source

00:36:25,150 --> 00:36:31,270
attribute I showed before and actually

00:36:28,390 --> 00:36:33,099
there's a special since I'm thinking I'm

00:36:31,270 --> 00:36:34,990
sure that in a minute sorry and also we

00:36:33,099 --> 00:36:37,000
can add templates to the modules and

00:36:34,990 --> 00:36:39,160
this allows us to encapsulate all the

00:36:37,000 --> 00:36:41,500
stuff that belongs to light HTTP into

00:36:39,160 --> 00:36:43,119
one directory structure and we can even

00:36:41,500 --> 00:36:44,560
share that on github for instance there

00:36:43,119 --> 00:36:50,440
are quite a lot of modules on github

00:36:44,560 --> 00:36:54,490
already if we now want to use one of

00:36:50,440 --> 00:36:56,460
these files like this one we can just

00:36:54,490 --> 00:36:59,380
write a file and show present sauce

00:36:56,460 --> 00:37:01,300
puppet colon slash slash or maybe

00:36:59,380 --> 00:37:04,000
backslash I don't know module slide

00:37:01,300 --> 00:37:06,310
httpd and extra HTML and puppet will

00:37:04,000 --> 00:37:09,010
automatically check the so-called module

00:37:06,310 --> 00:37:11,770
path we already configured it in vagrant

00:37:09,010 --> 00:37:13,960
and check if check if there's the module

00:37:11,770 --> 00:37:15,250
called light HTTP D and if if if there

00:37:13,960 --> 00:37:17,349
is one it checks

00:37:15,250 --> 00:37:20,440
is there a file within the files

00:37:17,349 --> 00:37:23,200
directory called index.html and this

00:37:20,440 --> 00:37:25,690
works on master agent and on single node

00:37:23,200 --> 00:37:29,530
setup so if you do this within vagrant

00:37:25,690 --> 00:37:31,510
it will just check on the module

00:37:29,530 --> 00:37:33,880
directory of the local virtual machine

00:37:31,510 --> 00:37:36,520
if you do that and I on a puppet master

00:37:33,880 --> 00:37:38,230
agent setup it will ask the master do

00:37:36,520 --> 00:37:38,770
you have a file with this name at this

00:37:38,230 --> 00:37:40,480
place

00:37:38,770 --> 00:37:42,880
and the master will transfer to the

00:37:40,480 --> 00:37:44,470
agent actually this communication

00:37:42,880 --> 00:37:45,280
between master and agent is done using

00:37:44,470 --> 00:37:48,340
HTTP

00:37:45,280 --> 00:37:50,290
especially HTTP with kind certificates

00:37:48,340 --> 00:37:52,750
so everything's encrypted except for the

00:37:50,290 --> 00:37:55,690
NSA broke it but could kind of be

00:37:52,750 --> 00:37:57,430
encrypted in theory and so you kind of

00:37:55,690 --> 00:37:59,050
have a secure channel between your

00:37:57,430 --> 00:38:02,650
agents and your notes and you can in

00:37:59,050 --> 00:38:07,660
theory transfer security occupants over

00:38:02,650 --> 00:38:09,640
that if we would want to use files we

00:38:07,660 --> 00:38:13,360
can use the same puppet colon slash

00:38:09,640 --> 00:38:15,760
slash syntax I already mentioned the

00:38:13,360 --> 00:38:17,290
module path for the PHP developers it's

00:38:15,760 --> 00:38:19,720
kind of something like the include path

00:38:17,290 --> 00:38:21,610
you can configure it and can use several

00:38:19,720 --> 00:38:23,380
directories and say please look at first

00:38:21,610 --> 00:38:25,210
and this one and this one and this one

00:38:23,380 --> 00:38:26,680
and we'll just try out all these

00:38:25,210 --> 00:38:29,860
directories and look for a module with

00:38:26,680 --> 00:38:32,590
the name that you use and you really

00:38:29,860 --> 00:38:34,780
want to do that this is basically the

00:38:32,590 --> 00:38:36,550
content of the solid talk that you want

00:38:34,780 --> 00:38:38,320
to do this they explained some work

00:38:36,550 --> 00:38:40,090
content but this is very very important

00:38:38,320 --> 00:38:42,370
you want to use modules otherwise you

00:38:40,090 --> 00:38:43,780
end up in fights with a couple of

00:38:42,370 --> 00:38:45,400
hundred or thousand lines of code and

00:38:43,780 --> 00:38:49,560
you never want to have a couple of

00:38:45,400 --> 00:38:49,560
hundred lines of code in one file

00:38:50,160 --> 00:38:55,870
modules are also kind of namespaces

00:38:53,140 --> 00:38:59,380
so we can create a file called light

00:38:55,870 --> 00:39:02,620
HTTP service and this would only manage

00:38:59,380 --> 00:39:04,570
the service of the web server and we

00:39:02,620 --> 00:39:07,060
could use it like this so it's just like

00:39:04,570 --> 00:39:10,810
the same you just use the double colon

00:39:07,060 --> 00:39:13,380
here and this service Tiffania this

00:39:10,810 --> 00:39:16,510
service class would be stored here in

00:39:13,380 --> 00:39:24,070
the light hd-dvd module manifests

00:39:16,510 --> 00:39:27,730
directory I want to get back to this

00:39:24,070 --> 00:39:29,590
quote with monitoring service using

00:39:27,730 --> 00:39:31,450
puppet this is actually one of the

00:39:29,590 --> 00:39:33,640
cooler features of puppet when I

00:39:31,450 --> 00:39:36,790
understood this I was even more happy

00:39:33,640 --> 00:39:38,560
with puppet if we want to achieve this

00:39:36,790 --> 00:39:40,690
there are two things we have to do at

00:39:38,560 --> 00:39:42,550
first we have to annotate the service

00:39:40,690 --> 00:39:44,200
that should be monitored we somehow have

00:39:42,550 --> 00:39:47,170
to say this is a machine that should be

00:39:44,200 --> 00:39:50,320
monitored and in addition we have to

00:39:47,170 --> 00:39:52,090
configure the Nagus machine the actual

00:39:50,320 --> 00:39:54,040
machine that does the monitoring tricks

00:39:52,090 --> 00:39:57,070
you could also use some other monitoring

00:39:54,040 --> 00:39:58,810
system we use I don't know the name its

00:39:57,070 --> 00:40:01,120
singer it king I know I don't know

00:39:58,810 --> 00:40:04,990
to pronounce it with just a snail's fork

00:40:01,120 --> 00:40:06,940
and puppet comes with resources for

00:40:04,990 --> 00:40:08,740
Negros which makes it very nice to use

00:40:06,940 --> 00:40:11,350
that but you can use whatever else you

00:40:08,740 --> 00:40:13,090
want to use and the concept that I'm

00:40:11,350 --> 00:40:17,350
introducing now is the concept of

00:40:13,090 --> 00:40:19,360
so-called exported resources this is

00:40:17,350 --> 00:40:21,310
actually taken from our from our puppet

00:40:19,360 --> 00:40:23,980
code with somewhere have this no

00:40:21,310 --> 00:40:25,450
definition observe and regular

00:40:23,980 --> 00:40:31,060
expression which says here should be a

00:40:25,450 --> 00:40:33,610
number and cross can calm and then we

00:40:31,060 --> 00:40:35,530
create this resource Negros host which

00:40:33,610 --> 00:40:40,060
gets the full qualified domain name of

00:40:35,530 --> 00:40:42,370
the server as the name and also we set

00:40:40,060 --> 00:40:44,440
this address parameter which is the IP

00:40:42,370 --> 00:40:47,980
address of the first network interface

00:40:44,440 --> 00:40:49,300
and then there is this funny at-at thing

00:40:47,980 --> 00:40:52,030
I don't know why they use these

00:40:49,300 --> 00:40:54,490
characters but they used it and this

00:40:52,030 --> 00:40:56,950
means that this resource is a exported

00:40:54,490 --> 00:40:58,930
resource exported resources are not

00:40:56,950 --> 00:41:02,860
going to be applied on the machines

00:40:58,930 --> 00:41:04,350
where they're defined so on this epsilon

00:41:02,860 --> 00:41:07,570
which is our application server

00:41:04,350 --> 00:41:10,660
nothing happens with this Nagios host

00:41:07,570 --> 00:41:13,120
resource but instead it sends it to the

00:41:10,660 --> 00:41:15,100
puppet master and set says I just

00:41:13,120 --> 00:41:15,640
exported this resource do whatever you

00:41:15,100 --> 00:41:17,920
want with it

00:41:15,640 --> 00:41:20,500
and this is one of the places where you

00:41:17,920 --> 00:41:21,970
need a puppet master if you do a single

00:41:20,500 --> 00:41:25,390
node setup this won't work

00:41:21,970 --> 00:41:27,690
and if we're now back on our an eggless

00:41:25,390 --> 00:41:30,400
monitoring host all we have to do is

00:41:27,690 --> 00:41:33,850
this is the host name of the node and

00:41:30,400 --> 00:41:37,630
then use this spaceship operator that's

00:41:33,850 --> 00:41:40,120
the actual name and you say please

00:41:37,630 --> 00:41:42,580
import all exported negatives host

00:41:40,120 --> 00:41:45,430
resources you don't have to write

00:41:42,580 --> 00:41:47,830
anything right here it's left empty on

00:41:45,430 --> 00:41:50,350
purpose no that's not true I wrote this

00:41:47,830 --> 00:41:53,680
one here right whenever one of these

00:41:50,350 --> 00:41:56,970
exported resources change restart the

00:41:53,680 --> 00:41:59,860
negative server it's in our case and

00:41:56,970 --> 00:42:02,200
this means all we have to do to monitor

00:41:59,860 --> 00:42:04,720
all our application services right these

00:42:02,200 --> 00:42:07,060
lines of codes and these lines of code

00:42:04,720 --> 00:42:10,480
and obviously install a monitoring

00:42:07,060 --> 00:42:11,740
software at first so he had to sum it up

00:42:10,480 --> 00:42:14,260
it's this

00:42:11,740 --> 00:42:16,119
and this was all we needed and all our

00:42:14,260 --> 00:42:20,050
machines were automatically monitored I

00:42:16,119 --> 00:42:22,089
really appreciated it in addition to

00:42:20,050 --> 00:42:24,849
these Negros host resources there's also

00:42:22,089 --> 00:42:26,980
a native service tree service resource

00:42:24,849 --> 00:42:30,130
so we can monitor your web service or

00:42:26,980 --> 00:42:36,339
MySQL service or whatever service you

00:42:30,130 --> 00:42:38,830
use and it's quite easy we were really

00:42:36,339 --> 00:42:40,000
talking a lot about resources I didn't

00:42:38,830 --> 00:42:43,300
always call him like that

00:42:40,000 --> 00:42:46,060
but I try to this was a resource and

00:42:43,300 --> 00:42:48,580
this was a resource and this was a

00:42:46,060 --> 00:42:51,310
resource and all these resource

00:42:48,580 --> 00:42:54,339
resources must be unique so I can only

00:42:51,310 --> 00:42:58,359
have one resource of the type service

00:42:54,339 --> 00:42:59,440
service with the name light httpd this

00:42:58,359 --> 00:43:01,570
is something you really have to

00:42:59,440 --> 00:43:04,780
understand and this is the same applies

00:43:01,570 --> 00:43:06,220
for classes obviously and that's the

00:43:04,780 --> 00:43:08,619
reason why they have to be unique

00:43:06,220 --> 00:43:14,080
because yeah it's just a resource and

00:43:08,619 --> 00:43:16,480
there's actually one way to create

00:43:14,080 --> 00:43:18,220
resources that can be applied multiple

00:43:16,480 --> 00:43:20,890
times and this is the concept of

00:43:18,220 --> 00:43:23,170
so-called defined types and contrast to

00:43:20,890 --> 00:43:28,020
classes they're allowed to have multiple

00:43:23,170 --> 00:43:30,089
instances we kind of already used some

00:43:28,020 --> 00:43:34,270
there nah never mind

00:43:30,089 --> 00:43:36,640
they are used exactly the same way like

00:43:34,270 --> 00:43:40,000
the resources that ship with puppet like

00:43:36,640 --> 00:43:41,680
for instance the fire resource and I

00:43:40,000 --> 00:43:44,170
actually got an example again from our

00:43:41,680 --> 00:43:46,540
real live code we have this light httpd

00:43:44,170 --> 00:43:47,859
enabled conf defined type and all it

00:43:46,540 --> 00:43:50,170
does is create a symlink

00:43:47,859 --> 00:43:53,080
from a directory where all available

00:43:50,170 --> 00:43:54,730
configuration files are to a directory

00:43:53,080 --> 00:43:59,440
we are all enabled configuration files

00:43:54,730 --> 00:44:01,330
are and yes there's one important thing

00:43:59,440 --> 00:44:02,619
this is the title of the resource we're

00:44:01,330 --> 00:44:04,869
going to use that on the next slide

00:44:02,619 --> 00:44:06,730
because implementing this defined type

00:44:04,869 --> 00:44:10,240
is actually quite easy as well instead

00:44:06,730 --> 00:44:11,080
of saying class light HTTP light httpd

00:44:10,240 --> 00:44:13,930
enabled conf

00:44:11,080 --> 00:44:17,320
we say define light httpd enable code

00:44:13,930 --> 00:44:19,210
and then we have this array of

00:44:17,320 --> 00:44:21,670
parameters which are optional in our

00:44:19,210 --> 00:44:25,069
case we don't have any and within this

00:44:21,670 --> 00:44:27,469
define type we define a resource

00:44:25,069 --> 00:44:30,799
use the title that I mentioned on the

00:44:27,469 --> 00:44:32,509
slide before and then we say like and

00:44:30,799 --> 00:44:34,400
show that it's a link and it points to

00:44:32,509 --> 00:44:36,559
somewhere notify the service require the

00:44:34,400 --> 00:44:40,369
web server and so on pretty

00:44:36,559 --> 00:44:42,079
uninteresting but this is how you can

00:44:40,369 --> 00:44:45,679
recreate reusable code that can be

00:44:42,079 --> 00:44:47,869
applied more than once we can against

00:44:45,679 --> 00:44:49,789
all these different types right next to

00:44:47,869 --> 00:44:54,829
classes in the manifest directory of our

00:44:49,789 --> 00:44:56,660
modules when you create defined types

00:44:54,829 --> 00:44:59,839
there are some things you might want to

00:44:56,660 --> 00:45:02,349
take care of first we already had this

00:44:59,839 --> 00:45:05,569
file and Shore present resource

00:45:02,349 --> 00:45:09,079
configuration parameter if you create

00:45:05,569 --> 00:45:11,150
defined types you might most likely want

00:45:09,079 --> 00:45:14,359
to implement these parameters and show

00:45:11,150 --> 00:45:17,689
present and ensure absent as well to be

00:45:14,359 --> 00:45:20,209
able to delete something and I mentioned

00:45:17,689 --> 00:45:21,829
this word idempotency at the beginning

00:45:20,209 --> 00:45:24,589
and it's very important that if you

00:45:21,829 --> 00:45:26,749
create defined types that everything you

00:45:24,589 --> 00:45:28,160
do there is idempotent because i'm

00:45:26,749 --> 00:45:29,989
otherwise puppet

00:45:28,160 --> 00:45:32,209
it's got puppet is gonna run multiple

00:45:29,989 --> 00:45:35,650
times on a node if something is not item

00:45:32,209 --> 00:45:39,319
410 some weird stuff is going to happen

00:45:35,650 --> 00:45:41,239
there's actually a exec resource type

00:45:39,319 --> 00:45:45,289
which executes something on the command

00:45:41,239 --> 00:45:47,479
line and it's quite nice for some stuff

00:45:45,289 --> 00:45:50,509
and you really need it when you create

00:45:47,479 --> 00:45:52,069
defined types but this is where you

00:45:50,509 --> 00:45:54,079
really have to care take care of the

00:45:52,069 --> 00:45:55,699
idempotency because most things you

00:45:54,079 --> 00:46:00,709
execute on command line aren't

00:45:55,699 --> 00:46:02,839
idempotent and i'm gonna show you a more

00:46:00,709 --> 00:46:05,229
real word and a more interesting example

00:46:02,839 --> 00:46:10,579
of a defined type right now and this is

00:46:05,229 --> 00:46:13,309
replication of a couch DB database couch

00:46:10,579 --> 00:46:15,439
TV is a very very awesome database it's

00:46:13,309 --> 00:46:16,849
like my favorite database I always do

00:46:15,439 --> 00:46:20,419
advertisement for it it's open source

00:46:16,849 --> 00:46:22,130
and you access it using HTTP so you send

00:46:20,419 --> 00:46:23,869
an HTTP request there and create a

00:46:22,130 --> 00:46:27,439
document within the database it's one of

00:46:23,869 --> 00:46:30,289
these no SQL document storages and also

00:46:27,439 --> 00:46:34,069
the replication that we want to

00:46:30,289 --> 00:46:37,339
configure here we want to replicate the

00:46:34,069 --> 00:46:38,720
database new logs from some machine to

00:46:37,339 --> 00:46:42,200
some other machine

00:46:38,720 --> 00:46:44,119
and starting this replication is done

00:46:42,200 --> 00:46:46,250
using HTTP as well you have to send a

00:46:44,119 --> 00:46:48,740
post request to some special URL off the

00:46:46,250 --> 00:46:51,859
couch DB and then couchdb will start

00:46:48,740 --> 00:46:55,490
replicating and doing this with puppet

00:46:51,859 --> 00:46:56,750
is not really fun I think I have an

00:46:55,490 --> 00:46:59,390
example in the second where someone

00:46:56,750 --> 00:47:01,010
tried something like this but this is a

00:46:59,390 --> 00:47:04,940
place where you would really want to

00:47:01,010 --> 00:47:07,010
start creating Ruby PI puppet plugins

00:47:04,940 --> 00:47:08,450
but I mentioned before I don't do Ruby I

00:47:07,010 --> 00:47:10,010
don't really like Ruby I don't want to

00:47:08,450 --> 00:47:11,720
learn Ruby that's the most important

00:47:10,010 --> 00:47:17,300
part but instead I want to stick with

00:47:11,720 --> 00:47:19,520
PHP or whatever and well so you have two

00:47:17,300 --> 00:47:22,099
options if you don't want to do Ruby you

00:47:19,520 --> 00:47:25,730
can try and create this within puppet or

00:47:22,099 --> 00:47:27,410
you can create a wrapper script and if

00:47:25,730 --> 00:47:29,450
you do something like this and puppet

00:47:27,410 --> 00:47:32,119
you might end up in this and something

00:47:29,450 --> 00:47:33,950
like this I took this from a company who

00:47:32,119 --> 00:47:37,369
I helped cleaning up their puppet

00:47:33,950 --> 00:47:39,109
manifests and yeah they install a PHP

00:47:37,369 --> 00:47:42,740
extension here and they create a couple

00:47:39,109 --> 00:47:45,500
of resources all of type x seck and they

00:47:42,740 --> 00:47:47,690
chain them after each other and this is

00:47:45,500 --> 00:47:49,130
quite ugly I could actually go into

00:47:47,690 --> 00:47:51,020
detail here but I'm not going to do that

00:47:49,130 --> 00:47:52,700
instead I'm going to show you how you

00:47:51,020 --> 00:47:55,910
could create a wrapper script and X is

00:47:52,700 --> 00:47:58,280
that from puppet getting back to the

00:47:55,910 --> 00:48:00,410
couch TV replication what we did is we

00:47:58,280 --> 00:48:01,849
created a small script in our case

00:48:00,410 --> 00:48:04,550
written in PHP but it doesn't matter

00:48:01,849 --> 00:48:06,440
which language you use and it's

00:48:04,550 --> 00:48:09,470
accessible like this I can say CouchDB

00:48:06,440 --> 00:48:12,589
replication add-on this database service

00:48:09,470 --> 00:48:15,440
or localhost port 5 984 which is the

00:48:12,589 --> 00:48:17,569
default couch to be port this database

00:48:15,440 --> 00:48:20,480
server should start a replication from

00:48:17,569 --> 00:48:25,310
this database which is his own database

00:48:20,480 --> 00:48:29,420
to some remote host same database name

00:48:25,310 --> 00:48:32,119
but other host and this PHP script does

00:48:29,420 --> 00:48:34,700
all the magic like get doing the HTTP

00:48:32,119 --> 00:48:38,839
request and so on also the script has

00:48:34,700 --> 00:48:40,160
and next to add there's also delete or

00:48:38,839 --> 00:48:44,800
remove I'm not sure right now and

00:48:40,160 --> 00:48:47,660
there's also exists which checks is this

00:48:44,800 --> 00:48:50,270
replication already set up and then I

00:48:47,660 --> 00:48:51,920
went I created this simple puppet

00:48:50,270 --> 00:48:55,540
manifests and I show

00:48:51,920 --> 00:48:59,030
a bit to explain it a bit easier I

00:48:55,540 --> 00:49:01,369
created a defined type called couch TV :

00:48:59,030 --> 00:49:04,430
: replication and it has the parameters

00:49:01,369 --> 00:49:07,010
and schewe source and target I then

00:49:04,430 --> 00:49:08,630
create a helper variable called param I

00:49:07,010 --> 00:49:11,329
just passed that to the command line

00:49:08,630 --> 00:49:16,220
script later and then I do a big switch

00:49:11,329 --> 00:49:20,270
case and check if case is pref insurers

00:49:16,220 --> 00:49:24,260
present then execute create CouchDB

00:49:20,270 --> 00:49:27,010
replication and the name is title which

00:49:24,260 --> 00:49:29,839
should say title here I'm sorry

00:49:27,010 --> 00:49:32,299
give this resource just some random name

00:49:29,839 --> 00:49:34,970
which is unique and then I say please

00:49:32,299 --> 00:49:38,260
execute CouchDB replication at with the

00:49:34,970 --> 00:49:42,260
parameters I created up here unless

00:49:38,260 --> 00:49:47,599
couchdb replication exists has a exit

00:49:42,260 --> 00:49:49,250
code of zero so you have to understand

00:49:47,599 --> 00:49:52,910
the concept of exit codes of shell

00:49:49,250 --> 00:49:55,369
scripts here and for Epson it's quite

00:49:52,910 --> 00:49:58,579
analog I just give it another name the

00:49:55,369 --> 00:50:01,549
resource and I say only if so this

00:49:58,579 --> 00:50:06,170
command will only execute it if this has

00:50:01,549 --> 00:50:08,930
an exit code of zero and then I remove

00:50:06,170 --> 00:50:10,400
it this is actually a pattern I were to

00:50:08,930 --> 00:50:12,589
kind of suggest to you if you don't want

00:50:10,400 --> 00:50:14,030
to do Ruby as well if you say I already

00:50:12,589 --> 00:50:17,690
got this cool command line script

00:50:14,030 --> 00:50:20,690
written and nodejs or whatever and yeah

00:50:17,690 --> 00:50:22,549
I really really like doing it this way

00:50:20,690 --> 00:50:25,250
right now because I don't want to do

00:50:22,549 --> 00:50:26,809
Ruby I'm running even more out of time

00:50:25,250 --> 00:50:29,809
than I expected but that's a good time

00:50:26,809 --> 00:50:31,760
because I got questions I want to get

00:50:29,809 --> 00:50:33,680
back to the exported resources because

00:50:31,760 --> 00:50:37,309
they're kind of the auto-discovery of

00:50:33,680 --> 00:50:39,920
puppet and we can use it for replication

00:50:37,309 --> 00:50:42,380
as well all our database servers export

00:50:39,920 --> 00:50:46,309
this CouchDB replication thing and all

00:50:42,380 --> 00:50:48,410
of them also collect all of them CouchDB

00:50:46,309 --> 00:50:50,299
replication defined types and this

00:50:48,410 --> 00:50:53,390
automatically set up a replication

00:50:50,299 --> 00:50:56,869
between all our database servers so if

00:50:53,390 --> 00:50:58,579
you have some application running that

00:50:56,869 --> 00:50:59,329
doesn't do auto discovery puppet will

00:50:58,579 --> 00:51:01,460
help you here

00:50:59,329 --> 00:51:03,290
yes we're running kind of short of time

00:51:01,460 --> 00:51:05,840
I'm not going to get into detail here

00:51:03,290 --> 00:51:08,090
you will get the slate slides after

00:51:05,840 --> 00:51:09,590
and can look into it and also I kind of

00:51:08,090 --> 00:51:11,360
cheated in this slide of it and there's

00:51:09,590 --> 00:51:12,920
something missing but you'll have those

00:51:11,360 --> 00:51:17,930
slides later and can figure out what it

00:51:12,920 --> 00:51:20,690
means this talk was called maintain your

00:51:17,930 --> 00:51:22,550
environment with puppet and also said

00:51:20,690 --> 00:51:24,680
something about how to get production

00:51:22,550 --> 00:51:26,990
staging and development closer to each

00:51:24,680 --> 00:51:30,110
other I already introduced you into

00:51:26,990 --> 00:51:32,390
vagrant but I didn't really tell you on

00:51:30,110 --> 00:51:34,130
how you could make sure that vagrant the

00:51:32,390 --> 00:51:36,260
vagrant puppet configuration and the

00:51:34,130 --> 00:51:38,480
production puppet configuration look

00:51:36,260 --> 00:51:40,640
similar of course you can reuse the

00:51:38,480 --> 00:51:43,190
modules Ryu created you really want to

00:51:40,640 --> 00:51:45,160
reuse the modules but the modules need

00:51:43,190 --> 00:51:49,190
to be configured in some way as well and

00:51:45,160 --> 00:51:52,130
I would suggest creating modules or at

00:51:49,190 --> 00:51:54,950
least classes I call them note classes

00:51:52,130 --> 00:51:57,800
which aggregates several modules and

00:51:54,950 --> 00:51:59,450
which pass parameters into these modules

00:51:57,800 --> 00:52:01,790
and yeah really

00:51:59,450 --> 00:52:03,680
define how forest your application

00:52:01,790 --> 00:52:05,750
server should look like the applications

00:52:03,680 --> 00:52:07,580
are most likely will need PHP if your

00:52:05,750 --> 00:52:09,800
PHP developer needs an Apache or

00:52:07,580 --> 00:52:11,510
whatever web server you have and this

00:52:09,800 --> 00:52:14,270
all will be grouped together here and

00:52:11,510 --> 00:52:15,710
you really want to use dependency

00:52:14,270 --> 00:52:18,080
injection here so if there's any

00:52:15,710 --> 00:52:21,500
configuration parameter for Apache two

00:52:18,080 --> 00:52:23,960
you want to create this parameter in

00:52:21,500 --> 00:52:25,400
your node class or role it's called role

00:52:23,960 --> 00:52:27,040
on the puppet world I didn't know that

00:52:25,400 --> 00:52:30,440
name before

00:52:27,040 --> 00:52:32,810
you want to really want to yeah inject

00:52:30,440 --> 00:52:35,600
this parameters through and give you the

00:52:32,810 --> 00:52:37,130
possibility for instance if you have the

00:52:35,600 --> 00:52:39,050
web server and the database of in your

00:52:37,130 --> 00:52:41,870
production environment and you use this

00:52:39,050 --> 00:52:44,690
node class web server you want to be

00:52:41,870 --> 00:52:46,970
able to configure the database server in

00:52:44,690 --> 00:52:48,410
some way and on your database

00:52:46,970 --> 00:52:51,260
nodes if you have this node class

00:52:48,410 --> 00:52:53,990
database you want to say which address

00:52:51,260 --> 00:52:56,770
should the database server bind on and

00:52:53,990 --> 00:53:00,350
this will be given through to the MySQL

00:52:56,770 --> 00:53:01,850
module in this case so this class uses

00:53:00,350 --> 00:53:03,980
several other classes like for instance

00:53:01,850 --> 00:53:06,560
the MySQL class and this one uses for

00:53:03,980 --> 00:53:08,840
instance the webserver class and the

00:53:06,560 --> 00:53:10,700
class that configures your configure

00:53:08,840 --> 00:53:12,530
your application and tells your

00:53:10,700 --> 00:53:15,590
application to use this database server

00:53:12,530 --> 00:53:17,030
and if you know if the staging

00:53:15,590 --> 00:53:18,590
environment you would probably change

00:53:17,030 --> 00:53:19,849
these variables and if you are in the

00:53:18,590 --> 00:53:23,300
year development

00:53:19,849 --> 00:53:26,010
vagrant note he will just import both

00:53:23,300 --> 00:53:28,859
note classes the database server and the

00:53:26,010 --> 00:53:31,800
web server bind on localhost and connect

00:53:28,859 --> 00:53:34,200
localhost and this gives you the chance

00:53:31,800 --> 00:53:37,109
to really reuse exactly the same

00:53:34,200 --> 00:53:40,020
configuration on production staging and

00:53:37,109 --> 00:53:43,470
environment a production staging and

00:53:40,020 --> 00:53:45,150
development sorry and this is the place

00:53:43,470 --> 00:53:47,130
where I kind of get to an end and only

00:53:45,150 --> 00:53:48,839
throw these random words at you because

00:53:47,130 --> 00:53:50,430
we're kind of running out of time I'm

00:53:48,839 --> 00:53:53,099
going to skip maybe gonna skip some of

00:53:50,430 --> 00:53:55,650
them an important notice when I

00:53:53,099 --> 00:53:58,859
introduced puppet to a friend couple of

00:53:55,650 --> 00:54:00,599
month or maybe years ago one concept

00:53:58,859 --> 00:54:02,730
that he didn't understand is that puppet

00:54:00,599 --> 00:54:04,829
is not only for bootstrapping or setting

00:54:02,730 --> 00:54:06,810
up your server initially but it's also

00:54:04,829 --> 00:54:08,910
for maintaining it and changing

00:54:06,810 --> 00:54:10,770
configurations so your puppet files

00:54:08,910 --> 00:54:12,569
should be item 410 so that they can be

00:54:10,770 --> 00:54:14,670
run like every five minutes or something

00:54:12,569 --> 00:54:17,280
we actually run them every five minutes

00:54:14,670 --> 00:54:19,680
I think this is something you really

00:54:17,280 --> 00:54:21,450
want to keep in mind and this explains

00:54:19,680 --> 00:54:23,430
why some things and puppet are more

00:54:21,450 --> 00:54:25,200
complicated then with simpler shell

00:54:23,430 --> 00:54:27,329
scripts because these shell scripts you

00:54:25,200 --> 00:54:29,069
create for setting up a server will only

00:54:27,329 --> 00:54:31,770
be run once and if you change something

00:54:29,069 --> 00:54:35,160
you SSH into the Machine and yeah change

00:54:31,770 --> 00:54:38,010
it manually actually I know one company

00:54:35,160 --> 00:54:40,290
who automated this all so much that if

00:54:38,010 --> 00:54:42,660
you ssh into one of the production

00:54:40,290 --> 00:54:44,280
servers there's automatically a ticket

00:54:42,660 --> 00:54:46,140
created in their issue trigger because

00:54:44,280 --> 00:54:48,960
it shows them that there's lack of

00:54:46,140 --> 00:54:50,790
automate automation somewhere this is

00:54:48,960 --> 00:54:53,640
kind of hard we don't do that but it

00:54:50,790 --> 00:54:56,540
might make sense for you also

00:54:53,640 --> 00:54:58,710
if you write clean puppet manifests and

00:54:56,540 --> 00:55:00,720
yeah do something like these note

00:54:58,710 --> 00:55:01,950
classes I just showed you they puppet

00:55:00,720 --> 00:55:04,500
manifests are kind of your

00:55:01,950 --> 00:55:06,089
infrastructure documentation because if

00:55:04,500 --> 00:55:07,890
you want to figure out if an applique

00:55:06,089 --> 00:55:09,780
twitch application know to which

00:55:07,890 --> 00:55:12,089
database of an application server starts

00:55:09,780 --> 00:55:13,859
talks to you just check out the manifest

00:55:12,089 --> 00:55:15,750
of that node and you see how it uses

00:55:13,859 --> 00:55:17,849
this database server and if you want to

00:55:15,750 --> 00:55:20,220
figure out what is installed on a

00:55:17,849 --> 00:55:22,380
application server you open up the class

00:55:20,220 --> 00:55:24,240
of the node class of application service

00:55:22,380 --> 00:55:26,550
and you see okay every application

00:55:24,240 --> 00:55:30,000
server gets a light httpd installed and

00:55:26,550 --> 00:55:31,829
gets PHP installed and so on many

00:55:30,000 --> 00:55:33,000
companies don't really document their

00:55:31,829 --> 00:55:36,930
infrastructure

00:55:33,000 --> 00:55:38,820
but if you use puppet kind of have some

00:55:36,930 --> 00:55:40,650
you have some kind of dirty

00:55:38,820 --> 00:55:41,550
documentation at least somewhere it's

00:55:40,650 --> 00:55:42,990
better than nothing

00:55:41,550 --> 00:55:45,000
this is something important if you

00:55:42,990 --> 00:55:47,610
create puppet modules and want to share

00:55:45,000 --> 00:55:49,650
them somehow and reuse them a puppet

00:55:47,610 --> 00:55:54,810
librarian or something like composer in

00:55:49,650 --> 00:55:57,960
the PHP world or NPM for nodejs bundler

00:55:54,810 --> 00:56:01,860
for Ruby so it allows you to define

00:55:57,960 --> 00:56:05,790
dependencies of your module and fetch

00:56:01,860 --> 00:56:07,830
them from from some central source also

00:56:05,790 --> 00:56:10,200
if you do puppet like with any other

00:56:07,830 --> 00:56:12,240
application that you develop you want to

00:56:10,200 --> 00:56:14,250
use automated testing there is for

00:56:12,240 --> 00:56:16,230
instance r-spec puppet and there's also

00:56:14,250 --> 00:56:19,950
server spec just Google both of them

00:56:16,230 --> 00:56:21,980
they help you with automated testing if

00:56:19,950 --> 00:56:25,500
you are a developer and heard of solid

00:56:21,980 --> 00:56:27,300
when you write puppet code please keep

00:56:25,500 --> 00:56:29,850
in mind that it's still a source code

00:56:27,300 --> 00:56:31,980
and most concepts of salep apply for

00:56:29,850 --> 00:56:33,120
pavatt as well the guys two hours ago

00:56:31,980 --> 00:56:34,740
explained that as well

00:56:33,120 --> 00:56:36,810
and I mentioned that two of the letters

00:56:34,740 --> 00:56:38,220
didn't make sense for puppet I didn't

00:56:36,810 --> 00:56:40,050
really think about which makes sense I

00:56:38,220 --> 00:56:43,020
just thought about the concepts and

00:56:40,050 --> 00:56:45,450
reuse them and reusing this next point

00:56:43,020 --> 00:56:49,380
everything you want to create should be

00:56:45,450 --> 00:56:51,750
reusable our first light HTTP module was

00:56:49,380 --> 00:56:53,820
only configuring our light httpd for the

00:56:51,750 --> 00:56:56,070
production environment at some point we

00:56:53,820 --> 00:56:58,410
installed JIRA and wanted to use light

00:56:56,070 --> 00:57:00,660
httpd as a reverse proxy and realized oh

00:56:58,410 --> 00:57:02,940
we can reuse the module because it is

00:57:00,660 --> 00:57:04,110
not configurable at all and this is

00:57:02,940 --> 00:57:07,290
something you really want to take care

00:57:04,110 --> 00:57:09,120
of when you create puppet modules if you

00:57:07,290 --> 00:57:11,010
want to use third-party puppet modules

00:57:09,120 --> 00:57:14,160
check out the puppet Forge or github

00:57:11,010 --> 00:57:16,620
there are plenty of modules out there a

00:57:14,160 --> 00:57:18,240
question that many people ask me is how

00:57:16,620 --> 00:57:20,970
does puppet help me with deploying your

00:57:18,240 --> 00:57:23,880
application and the answer is puppet

00:57:20,970 --> 00:57:26,730
might somehow help you for instance by

00:57:23,880 --> 00:57:29,310
installing Debian packages by using pair

00:57:26,730 --> 00:57:32,130
or git or whatever but puppet does no

00:57:29,310 --> 00:57:34,320
application deployment tool we use that

00:57:32,130 --> 00:57:36,690
as that and we had several problems with

00:57:34,320 --> 00:57:38,820
it so I wouldn't really suggest you to

00:57:36,690 --> 00:57:42,240
use it for that use some other tool like

00:57:38,820 --> 00:57:44,400
Capistrano I'm gonna skip a lot of this

00:57:42,240 --> 00:57:46,230
one but I'm going to mention this puppet

00:57:44,400 --> 00:57:46,730
when puppet overrides of fire you can

00:57:46,230 --> 00:57:49,070
config

00:57:46,730 --> 00:57:51,830
to always store the old contents of the

00:57:49,070 --> 00:57:54,020
file somewhere so if someone manipulated

00:57:51,830 --> 00:57:56,030
a file on the server and puppet overrode

00:57:54,020 --> 00:57:58,070
it you can still access the old contents

00:57:56,030 --> 00:58:01,700
and you also have some kind of history

00:57:58,070 --> 00:58:05,090
of the files I mentioned that puppet

00:58:01,700 --> 00:58:07,670
uses HTTP using SSL and there is some

00:58:05,090 --> 00:58:09,830
scripts the puppet certificate authority

00:58:07,670 --> 00:58:11,750
which manage all the client certificates

00:58:09,830 --> 00:58:13,820
our certificates that automatically

00:58:11,750 --> 00:58:16,040
generates them helps you signing them

00:58:13,820 --> 00:58:18,140
it's very very easy to use it's just

00:58:16,040 --> 00:58:19,609
like to command lines calls that you

00:58:18,140 --> 00:58:22,190
have to remember and then it will just

00:58:19,609 --> 00:58:24,830
work so you have an encrypted channel

00:58:22,190 --> 00:58:27,490
there with a certificate authority and

00:58:24,830 --> 00:58:30,109
it just works and it's quite easy

00:58:27,490 --> 00:58:32,150
not yet not going to get into this one

00:58:30,109 --> 00:58:34,400
this is an IDE that helps you with

00:58:32,150 --> 00:58:36,440
developing puppet manifests you might

00:58:34,400 --> 00:58:38,750
want to look it up I don't really use it

00:58:36,440 --> 00:58:41,750
but I heard about that it's quite nice I

00:58:38,750 --> 00:58:47,270
tried it I wasn't that happy Google this

00:58:41,750 --> 00:58:49,280
one not can't explain it this is an

00:58:47,270 --> 00:58:52,340
important note when you start when you

00:58:49,280 --> 00:58:54,080
like puppet you really want to use it

00:58:52,340 --> 00:58:56,480
for everything use it to set up your

00:58:54,080 --> 00:58:59,300
laptop it works very well on Linux

00:58:56,480 --> 00:59:00,950
obviously with boxing it works quite

00:58:59,300 --> 00:59:05,030
well on Mac OS as well I've got no idea

00:59:00,950 --> 00:59:06,560
if it works on Windows sorry another

00:59:05,030 --> 00:59:08,420
important thing is read the manual of

00:59:06,560 --> 00:59:11,090
puppet read it over and over and over

00:59:08,420 --> 00:59:12,530
again read all the resource types that

00:59:11,090 --> 00:59:14,510
are available because there's so many

00:59:12,530 --> 00:59:15,859
you can't keep them in mind but at some

00:59:14,510 --> 00:59:17,480
point you're gonna realize damn the

00:59:15,859 --> 00:59:19,630
stuff I implemented last week is already

00:59:17,480 --> 00:59:22,369
available as a puppetry resource type

00:59:19,630 --> 00:59:24,260
happens to me all the time the menu has

00:59:22,369 --> 00:59:26,119
gotten a bit better but it's sucked some

00:59:24,260 --> 00:59:28,190
time ago but what's really good is the

00:59:26,119 --> 00:59:29,750
IRC channel of puppet there are people

00:59:28,190 --> 00:59:31,490
in there who really want to help you and

00:59:29,750 --> 00:59:33,230
they are nice and stuff and they answer

00:59:31,490 --> 00:59:35,510
to your questions this is something that

00:59:33,230 --> 00:59:38,180
not many open-source projects really do

00:59:35,510 --> 00:59:41,480
that good as puppet does it so this just

00:59:38,180 --> 00:59:43,490
a hint check out the ISC channel you

00:59:41,480 --> 00:59:45,680
also might want to check out Saul stack

00:59:43,490 --> 00:59:47,660
and ansible which are kind of newish

00:59:45,680 --> 00:59:49,850
alternatives to puppet I really didn't

00:59:47,660 --> 00:59:51,890
look that much into them but especially

00:59:49,850 --> 00:59:55,070
Saul's like really really know looks

00:59:51,890 --> 00:59:58,640
promising I already mentioned this one

00:59:55,070 --> 01:00:00,440
sorry staging is important you create a

00:59:58,640 --> 01:00:02,030
staging environment for your

01:00:00,440 --> 01:00:03,500
salsa for your application and you also

01:00:02,030 --> 01:00:04,880
want to create a staging environment for

01:00:03,500 --> 01:00:07,280
your puppet manifest because otherwise

01:00:04,880 --> 01:00:09,440
you might maybe kill your production

01:00:07,280 --> 01:00:13,400
environment by uninstalling your

01:00:09,440 --> 01:00:15,020
webserver or something the last thing I

01:00:13,400 --> 01:00:16,579
mentioned no not the last thing but one

01:00:15,020 --> 01:00:18,380
thing I mentioned before is version your

01:00:16,579 --> 01:00:20,569
manifest put them into git or whatever

01:00:18,380 --> 01:00:23,119
and do continuous integration I

01:00:20,569 --> 01:00:25,550
mentioned two automated tests but as

01:00:23,119 --> 01:00:29,450
with normal software development tests

01:00:25,550 --> 01:00:31,190
them continuously yes it's obviously

01:00:29,450 --> 01:00:34,640
quite easy with Jenkins and see if these

01:00:31,190 --> 01:00:36,079
tools for PHP developers you might want

01:00:34,640 --> 01:00:37,849
to check out this thing it creates your

01:00:36,079 --> 01:00:40,849
puppet configuration in a vagrant file

01:00:37,849 --> 01:00:45,020
for PHP and it's easy to set up and just

01:00:40,849 --> 01:00:47,060
works also google this one it's quite

01:00:45,020 --> 01:00:49,040
new it's from the vagrant developer it's

01:00:47,060 --> 01:00:50,960
likely exported resources but it's way

01:00:49,040 --> 01:00:52,250
cooler and it's not puppet and it works

01:00:50,960 --> 01:00:54,530
without popping and works with

01:00:52,250 --> 01:00:57,260
everything and it's easy and yeah check

01:00:54,530 --> 01:00:59,349
it out it's also discovery for whatever

01:00:57,260 --> 01:01:02,660
you want

01:00:59,349 --> 01:01:04,640
one last thing this doesn't apply for

01:01:02,660 --> 01:01:07,849
this talk only but for every talk

01:01:04,640 --> 01:01:09,109
there's this open platform called joint

01:01:07,849 --> 01:01:11,329
in the organizers of the conference

01:01:09,109 --> 01:01:14,050
uploaded all talks of the conference

01:01:11,329 --> 01:01:16,250
there and you can rate the talks there

01:01:14,050 --> 01:01:18,410
it's actually in your interest to rate

01:01:16,250 --> 01:01:20,599
the talks because at first if you didn't

01:01:18,410 --> 01:01:22,579
like what I told you here you can write

01:01:20,599 --> 01:01:24,740
that down and they won't hire me or they

01:01:22,579 --> 01:01:28,280
won't invite me and again for doing this

01:01:24,740 --> 01:01:29,690
talk also it helps me to figure out what

01:01:28,280 --> 01:01:32,450
you didn't like because you can add

01:01:29,690 --> 01:01:35,300
comments especially if you give the talk

01:01:32,450 --> 01:01:36,980
a bad rating describe why because this

01:01:35,300 --> 01:01:38,630
helps our speakers to improve and it

01:01:36,980 --> 01:01:40,940
helps the conference organizers to

01:01:38,630 --> 01:01:43,220
improve the conferences and to improve

01:01:40,940 --> 01:01:45,319
which speakers to invite so it really

01:01:43,220 --> 01:01:47,869
asks you to rate all the talks that you

01:01:45,319 --> 01:01:52,089
attended have a safe trip home

01:01:47,869 --> 01:01:52,089

YouTube URL: https://www.youtube.com/watch?v=HjP-pbPxaWA


