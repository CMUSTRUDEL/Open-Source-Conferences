Title: NGINX -- The Web Server You Might Actually Like - Volker Dutsch | IPC13
Publication date: 2016-06-09
Playlist: International PHP Conference Spring 2013
Description: 
	Volker Dusch auf der International PHP Conference 2013 Spring Edition Ã¼ber Nginx.

Weitere Informationen: https://phpconference.com/de
Captions: 
	00:00:06,589 --> 00:00:15,450
hi since you're so many maybe I can get

00:00:12,840 --> 00:00:17,279
some of you to go somewhere else by

00:00:15,450 --> 00:00:19,529
telling you what the stock was will be

00:00:17,279 --> 00:00:21,750
about in like a minute so if you have

00:00:19,529 --> 00:00:24,420
done a lot of work with nginx before

00:00:21,750 --> 00:00:26,970
chances are I might bore you

00:00:24,420 --> 00:00:30,269
so there's a very cool rest talk across

00:00:26,970 --> 00:00:32,610
the room if you leave now like

00:00:30,269 --> 00:00:34,739
everything will be fine and and and you

00:00:32,610 --> 00:00:37,230
will have maybe more interesting 45

00:00:34,739 --> 00:00:38,879
minutes but as this is an introductory

00:00:37,230 --> 00:00:40,440
talk just to do some expectation

00:00:38,879 --> 00:00:44,250
management so you won't be disappointed

00:00:40,440 --> 00:00:46,620
afterwards okay

00:00:44,250 --> 00:00:51,059
since nobody seems want to be leaving

00:00:46,620 --> 00:00:56,610
thank you I guess I guess we can start

00:00:51,059 --> 00:01:00,059
then so hi I'm Fargo this is sort of

00:00:56,610 --> 00:01:02,059
what I do this PHP thing that runs this

00:01:00,059 --> 00:01:07,320
internet you might have heard of it ah

00:01:02,059 --> 00:01:10,350
for been doing that for like 10 maybe 12

00:01:07,320 --> 00:01:13,049
years now mostly interested in things

00:01:10,350 --> 00:01:15,270
like continuous integration the king

00:01:13,049 --> 00:01:18,630
code movement recently did some more

00:01:15,270 --> 00:01:20,159
stuff you call nowadays DevOps when I

00:01:18,630 --> 00:01:25,590
was young it was called talking to

00:01:20,159 --> 00:01:27,030
suicide mints and I've been into

00:01:25,590 --> 00:01:29,310
test-driven development for quite some

00:01:27,030 --> 00:01:34,790
time I do some contributions to phpunit

00:01:29,310 --> 00:01:34,790
um and my main focus in the last

00:01:35,869 --> 00:01:39,469
maybe half a year year was shipping

00:01:38,270 --> 00:01:41,119
getting features out of the door

00:01:39,469 --> 00:01:42,560
actually building things that people use

00:01:41,119 --> 00:01:45,859
and doing that in the continuous fashion

00:01:42,560 --> 00:01:47,990
and so if you like don't want to talk to

00:01:45,859 --> 00:01:49,250
me afterwards or something just read

00:01:47,990 --> 00:01:51,350
those books they're more interesting

00:01:49,250 --> 00:01:53,240
than me anyways and they say what I say

00:01:51,350 --> 00:01:55,459
in a way better and more coherent manner

00:01:53,240 --> 00:01:57,079
and like if you read those four books

00:01:55,459 --> 00:01:59,149
you're pretty much set to go to do

00:01:57,079 --> 00:02:01,189
whatever you want in take at least in

00:01:59,149 --> 00:02:04,280
web tech it's at least my opinion on

00:02:01,189 --> 00:02:07,429
those so if you never heard of them at

00:02:04,280 --> 00:02:10,690
least give them a look and see if

00:02:07,429 --> 00:02:10,690
something might be in there for you

00:02:11,530 --> 00:02:15,170
since people still are coming in I'm

00:02:13,579 --> 00:02:18,920
going to bore you with other things and

00:02:15,170 --> 00:02:22,459
this is where I'm working for whom I'm

00:02:18,920 --> 00:02:24,769
working for research get is a scientific

00:02:22,459 --> 00:02:26,299
network so we're trying to give science

00:02:24,769 --> 00:02:29,000
back to the people who actually make it

00:02:26,299 --> 00:02:31,940
the researchers it's been a very very

00:02:29,000 --> 00:02:35,660
cool time for us we yesterday announced

00:02:31,940 --> 00:02:38,450
that our third funding round we've got a

00:02:35,660 --> 00:02:39,950
we got funding from Bill Gates and a

00:02:38,450 --> 00:02:42,620
couple other investors which is really

00:02:39,950 --> 00:02:43,940
cool for us if you want to hear more

00:02:42,620 --> 00:02:45,889
about the company come talk to me

00:02:43,940 --> 00:02:48,319
afterwards I'm not going to bore you

00:02:45,889 --> 00:02:50,690
longer with that so if you want to get

00:02:48,319 --> 00:02:53,690
in touch all of those options are fine

00:02:50,690 --> 00:02:56,510
you can talk to me I know it's crazy to

00:02:53,690 --> 00:02:58,160
do that but like I will be here a little

00:02:56,510 --> 00:03:01,069
bit after the talks which has come up if

00:02:58,160 --> 00:03:04,120
there's something you want to know so to

00:03:01,069 --> 00:03:04,120
the main

00:03:05,910 --> 00:03:09,680
I'm sorry let's just try it let's just

00:03:08,250 --> 00:03:13,830
start with that again

00:03:09,680 --> 00:03:18,480
hey engine eggs it's awesome

00:03:13,830 --> 00:03:21,750
you should all use it maybe so but but

00:03:18,480 --> 00:03:22,920
we already have a patchy and so why do

00:03:21,750 --> 00:03:25,380
we need another web server if you

00:03:22,920 --> 00:03:27,000
already have a patch Ian this is sort of

00:03:25,380 --> 00:03:28,500
a question I had for a good chunk of

00:03:27,000 --> 00:03:30,830
years I mean Apache has always been a

00:03:28,500 --> 00:03:34,830
friend to me like we grew up together

00:03:30,830 --> 00:03:37,050
the first time I did something with a

00:03:34,830 --> 00:03:40,140
pet she was me when I was like 14 or 15

00:03:37,050 --> 00:03:41,730
and back then there was a website called

00:03:40,140 --> 00:03:43,560
Apache France org and

00:03:41,730 --> 00:03:45,030
they gave me a sip file and I was cool

00:03:43,560 --> 00:03:46,860
because I knew how to go with zip files

00:03:45,030 --> 00:03:48,810
back then and you could unpack it and

00:03:46,860 --> 00:03:50,310
then it was a little nice gooey and you

00:03:48,810 --> 00:03:52,200
didn't have to bother with the ugly

00:03:50,310 --> 00:03:54,510
command-line and it just like let you

00:03:52,200 --> 00:03:56,070
start a web server and PHP work with it

00:03:54,510 --> 00:03:57,840
because people really really really put

00:03:56,070 --> 00:04:00,150
a lot of effort in what PHP and making

00:03:57,840 --> 00:04:01,170
it work for people who just wanted to do

00:04:00,150 --> 00:04:03,470
things on the web and not learn

00:04:01,170 --> 00:04:06,750
technology like I didn't start out

00:04:03,470 --> 00:04:07,200
trying to understand how a web server

00:04:06,750 --> 00:04:09,300
works

00:04:07,200 --> 00:04:10,920
I started out because I could do things

00:04:09,300 --> 00:04:12,150
on the screen really easily and then I

00:04:10,920 --> 00:04:13,380
could show it to people and I could

00:04:12,150 --> 00:04:17,580
interact with it and was really awesome

00:04:13,380 --> 00:04:19,650
and I've grown up a little bit since

00:04:17,580 --> 00:04:20,190
that like not spiritually but like them

00:04:19,650 --> 00:04:25,680
or not

00:04:20,190 --> 00:04:28,260
um but Apache has been a really good

00:04:25,680 --> 00:04:31,440
friend but making it do things always

00:04:28,260 --> 00:04:36,600
seemed like it shouldn't be that hard

00:04:31,440 --> 00:04:39,960
and so when I had to do some more like

00:04:36,600 --> 00:04:41,790
real operations stuff and like not just

00:04:39,960 --> 00:04:43,140
making it do things but like making you

00:04:41,790 --> 00:04:44,970
do things repeatedly and without

00:04:43,140 --> 00:04:48,930
crashing and without waking me up in the

00:04:44,970 --> 00:04:51,390
night and that required reading a lot of

00:04:48,930 --> 00:04:52,890
documentation and I like I'm a web

00:04:51,390 --> 00:04:54,630
developer I don't read documentation

00:04:52,890 --> 00:04:56,010
unless someone forces me to and like if

00:04:54,630 --> 00:04:58,440
the documentation doesn't tell me the

00:04:56,010 --> 00:05:01,860
answer but just like that I should know

00:04:58,440 --> 00:05:05,400
things then maybe there's an easier way

00:05:01,860 --> 00:05:07,950
so like lighty came along and then nginx

00:05:05,400 --> 00:05:11,130
came along and they both have a couple

00:05:07,950 --> 00:05:13,740
nice different approaches so why I'm not

00:05:11,130 --> 00:05:15,720
talking about lighting and this is not a

00:05:13,740 --> 00:05:17,100
talk where I want to say like use this

00:05:15,720 --> 00:05:18,360
web server because it's better or use

00:05:17,100 --> 00:05:19,420
this web server because it's better I

00:05:18,360 --> 00:05:22,570
just want to talk to

00:05:19,420 --> 00:05:24,310
you about why I use nginx why I like it

00:05:22,570 --> 00:05:25,630
and what I think are it strong points

00:05:24,310 --> 00:05:26,470
and you can make up the rest for

00:05:25,630 --> 00:05:29,710
yourself

00:05:26,470 --> 00:05:31,450
the thing with slighty was was actually

00:05:29,710 --> 00:05:35,050
quite fun to use it was easy to set up

00:05:31,450 --> 00:05:37,390
and it just sometimes stopped responding

00:05:35,050 --> 00:05:41,380
to requests without actually like

00:05:37,390 --> 00:05:43,150
failing or shutting down and the like

00:05:41,380 --> 00:05:44,440
the community wasn't that active at the

00:05:43,150 --> 00:05:46,630
point in time where I tried to approach

00:05:44,440 --> 00:05:48,520
them actually don't know that well about

00:05:46,630 --> 00:05:51,520
the current status of the project but

00:05:48,520 --> 00:05:54,250
like just sort of silly glimpse been

00:05:51,520 --> 00:05:57,940
there tried it didn't work for me when

00:05:54,250 --> 00:05:59,710
somewhere else got happy there so if you

00:05:57,940 --> 00:06:02,230
have a different story that's like I'm

00:05:59,710 --> 00:06:04,960
not saying that this wasn't because I

00:06:02,230 --> 00:06:06,700
was stupid that's like most of the

00:06:04,960 --> 00:06:12,490
problems that I have are because of that

00:06:06,700 --> 00:06:15,190
but so that this is basically the agenda

00:06:12,490 --> 00:06:18,280
in like bullet points because I can't do

00:06:15,190 --> 00:06:21,220
pretty slides um so this is all we have

00:06:18,280 --> 00:06:24,880
to work with but I'm rather convinced

00:06:21,220 --> 00:06:26,560
that work also stay with me we're gonna

00:06:24,880 --> 00:06:28,540
through going to go through all those

00:06:26,560 --> 00:06:30,820
points I'm going to say a little bit to

00:06:28,540 --> 00:06:33,520
something and what I want to show you

00:06:30,820 --> 00:06:37,510
mostly with nginx is how easy it is to

00:06:33,520 --> 00:06:41,110
approach it and how little you have to

00:06:37,510 --> 00:06:43,270
do to actually make it do something you

00:06:41,110 --> 00:06:46,960
want and how well the developers of

00:06:43,270 --> 00:06:52,740
nginx understood what you want from the

00:06:46,960 --> 00:06:54,970
thing so you go to your Linux or Mac or

00:06:52,740 --> 00:06:59,050
command line of choice and you probably

00:06:54,970 --> 00:07:03,280
type app get install nginx or something

00:06:59,050 --> 00:07:05,860
and then this is the main files that

00:07:03,280 --> 00:07:07,510
we're going to be working with so nginx

00:07:05,860 --> 00:07:08,770
is two main configuration files I mean

00:07:07,510 --> 00:07:10,540
it has a lot more but this is all we

00:07:08,770 --> 00:07:11,920
have to care about because two files

00:07:10,540 --> 00:07:14,470
ought to be enough one line that's a

00:07:11,920 --> 00:07:16,450
file in the folder but let usually knock

00:07:14,470 --> 00:07:18,400
stuff so we have our basic nginx

00:07:16,450 --> 00:07:21,340
configuration and most systems provide

00:07:18,400 --> 00:07:22,630
like a confit folder for nginx which is

00:07:21,340 --> 00:07:24,340
like nothing special and I'm going to

00:07:22,630 --> 00:07:26,710
show you how you can put this somewhere

00:07:24,340 --> 00:07:31,780
else or how we can make your own because

00:07:26,710 --> 00:07:33,249
the way it works is very easy to work

00:07:31,780 --> 00:07:35,679
with and it's very

00:07:33,249 --> 00:07:37,179
front about what it does so whatever

00:07:35,679 --> 00:07:39,279
your distribution ships is engine

00:07:37,179 --> 00:07:41,799
ex-convicts you can also throw them away

00:07:39,279 --> 00:07:43,449
and write them by hand which is like for

00:07:41,799 --> 00:07:46,089
Apache configurations that came with

00:07:43,449 --> 00:07:48,759
those massive chunks of XML files which

00:07:46,089 --> 00:07:50,559
actually like I'm old and they're like

00:07:48,759 --> 00:07:52,869
XML files because I have auto-completion

00:07:50,559 --> 00:07:55,299
there and like it actually tells me what

00:07:52,869 --> 00:07:56,949
what I have to do but it was so much and

00:07:55,299 --> 00:07:59,499
it was in so many places and it got so

00:07:56,949 --> 00:08:01,119
confusing and nginx was like just put it

00:07:59,499 --> 00:08:02,889
here and doesn't matter what you write

00:08:01,119 --> 00:08:03,219
in each file we'll figure it out in the

00:08:02,889 --> 00:08:07,419
end

00:08:03,219 --> 00:08:08,679
and so this is like the very very basics

00:08:07,419 --> 00:08:12,099
that you're probably going to get from

00:08:08,679 --> 00:08:17,739
your from your distribution of choice

00:08:12,099 --> 00:08:19,239
and it looks rather straightforward and

00:08:17,739 --> 00:08:22,569
it actually is like this doesn't lie to

00:08:19,239 --> 00:08:27,610
you right user okay I run as nginx I

00:08:22,569 --> 00:08:29,649
have six worker processes doesn't really

00:08:27,610 --> 00:08:31,029
matter now I've told you later what what

00:08:29,649 --> 00:08:33,490
this actually means and then it says

00:08:31,029 --> 00:08:34,899
like so on which CPU should I run the

00:08:33,490 --> 00:08:36,699
worker so let's make a format where

00:08:34,899 --> 00:08:40,899
people can specify on which CPU which

00:08:36,699 --> 00:08:42,519
work a thread should run I guess you can

00:08:40,899 --> 00:08:44,680
figure out how the format works just by

00:08:42,519 --> 00:08:47,079
looking at the example and on which CPU

00:08:44,680 --> 00:08:48,790
which switch thing runs and like not

00:08:47,079 --> 00:08:50,680
that you need this usually but if you

00:08:48,790 --> 00:08:53,529
need it it's really really cool format

00:08:50,680 --> 00:08:56,050
it's so like okay so I want this to run

00:08:53,529 --> 00:08:58,360
on on that to CPU so I put two ones

00:08:56,050 --> 00:09:00,910
there okay and this is very friendly and

00:08:58,360 --> 00:09:03,250
very approachable I guess so then you

00:09:00,910 --> 00:09:05,110
can say the Aero lot whichever whichever

00:09:03,250 --> 00:09:06,639
lock you want to use which pit file you

00:09:05,110 --> 00:09:10,269
want to use and then how many

00:09:06,639 --> 00:09:12,699
connections you want to handle so this

00:09:10,269 --> 00:09:13,930
is the most complicated and most

00:09:12,699 --> 00:09:17,649
indented slide in the presentation

00:09:13,930 --> 00:09:19,930
because this is the complete flow

00:09:17,649 --> 00:09:21,189
through the configuration of nginx I

00:09:19,930 --> 00:09:23,290
thought I started with that because if

00:09:21,189 --> 00:09:25,209
we're like if we can understand the

00:09:23,290 --> 00:09:26,709
complex complicated file then the rest

00:09:25,209 --> 00:09:29,559
will be gone here we're going to be very

00:09:26,709 --> 00:09:31,750
easy so nginx splits its configuration

00:09:29,559 --> 00:09:34,750
in three areas of interest if you want

00:09:31,750 --> 00:09:36,430
to say there is global configuration

00:09:34,750 --> 00:09:39,009
which would like be above or whatever

00:09:36,430 --> 00:09:40,660
and then there is HDPE configuration

00:09:39,009 --> 00:09:42,629
which means like everything here that

00:09:40,660 --> 00:09:44,370
has that is related with nginx

00:09:42,629 --> 00:09:48,210
delivering and

00:09:44,370 --> 00:09:52,140
doing HTTP HTTP web stuff in general and

00:09:48,210 --> 00:09:54,380
then in those HTTP blocks there there

00:09:52,140 --> 00:09:58,020
you can have multiple server blocks

00:09:54,380 --> 00:10:01,170
think of server s like a domain you want

00:09:58,020 --> 00:10:03,060
to serve or yeah it's basically the

00:10:01,170 --> 00:10:05,940
easiest way or like multiple domains so

00:10:03,060 --> 00:10:07,430
like 1 1 to n domains for which you will

00:10:05,940 --> 00:10:10,770
have a where a specific configuration

00:10:07,430 --> 00:10:14,310
location is a path within this domain so

00:10:10,770 --> 00:10:17,040
it's like web stuff server stuff path

00:10:14,310 --> 00:10:19,260
stuff so the third block is then

00:10:17,040 --> 00:10:21,240
probably where you like put all your

00:10:19,260 --> 00:10:28,589
static assets and your PHP and whatever

00:10:21,240 --> 00:10:31,100
so the very basic HTTP stuff is you say

00:10:28,589 --> 00:10:33,390
ok so let's include all the mime types

00:10:31,100 --> 00:10:36,029
nginx comes with this mime type file

00:10:33,390 --> 00:10:39,180
where it defines like most of the things

00:10:36,029 --> 00:10:41,490
you'll ever need in recent versions I

00:10:39,180 --> 00:10:43,620
would say if you finds anything you will

00:10:41,490 --> 00:10:46,860
ever need and it will like just know

00:10:43,620 --> 00:10:48,690
which files it should deliver with with

00:10:46,860 --> 00:10:51,480
which headers and everything like that

00:10:48,690 --> 00:10:53,010
will be taken care for you so then the

00:10:51,480 --> 00:10:56,450
default type if if it shouldn't know

00:10:53,010 --> 00:10:58,890
something we'll pretend it's binary ok

00:10:56,450 --> 00:11:02,220
where do where do I want to echo it or

00:10:58,890 --> 00:11:04,230
when I put the access lock this has a

00:11:02,220 --> 00:11:06,300
couple configuration options depending

00:11:04,230 --> 00:11:08,160
if you want to do this on syslog or if

00:11:06,300 --> 00:11:09,690
you want to like put this in a special

00:11:08,160 --> 00:11:13,290
place to the lock rotation or what you

00:11:09,690 --> 00:11:15,390
actually want to include there the lock

00:11:13,290 --> 00:11:17,910
format is very Apache ation you can

00:11:15,390 --> 00:11:21,030
customize it easily if you want and then

00:11:17,910 --> 00:11:23,310
this is like send file says if there's a

00:11:21,030 --> 00:11:24,780
file and I don't like have a process of

00:11:23,310 --> 00:11:26,370
what should I send it to the user or

00:11:24,780 --> 00:11:29,790
should I say he doesn't have access and

00:11:26,370 --> 00:11:32,670
then you say send the file yes which is

00:11:29,790 --> 00:11:34,530
like mostly you come to nginx and say I

00:11:32,670 --> 00:11:36,420
have this concrete problem and the

00:11:34,530 --> 00:11:39,330
solution is you say this concrete

00:11:36,420 --> 00:11:41,839
problem space on semicolon and then it

00:11:39,330 --> 00:11:44,250
solves this problem for you

00:11:41,839 --> 00:11:46,830
keep-keep a lifetime out and then this

00:11:44,250 --> 00:11:49,020
is how nginx does multiple

00:11:46,830 --> 00:11:52,190
configurations you just say include all

00:11:49,020 --> 00:11:55,230
the files that match this scope path and

00:11:52,190 --> 00:11:58,140
let's go from there so if you want to do

00:11:55,230 --> 00:12:01,200
if you have like nginx configurations

00:11:58,140 --> 00:12:03,600
in your application or however however

00:12:01,200 --> 00:12:05,700
your your service are structured I'm you

00:12:03,600 --> 00:12:08,340
probably can figure out a easy way to

00:12:05,700 --> 00:12:10,530
include those and this is very cool

00:12:08,340 --> 00:12:12,150
because it you don't have to go to I

00:12:10,530 --> 00:12:13,680
know you can also do this with Apache

00:12:12,150 --> 00:12:15,510
but like it's one line and I like things

00:12:13,680 --> 00:12:19,440
that are one line that's sort of what I

00:12:15,510 --> 00:12:22,110
can keep in my head it's very easy to

00:12:19,440 --> 00:12:24,690
just put a small nginx file with your

00:12:22,110 --> 00:12:26,460
application and then no matter where you

00:12:24,690 --> 00:12:29,100
install it all you have to actually

00:12:26,460 --> 00:12:30,960
touch the system for is to say ok now

00:12:29,100 --> 00:12:33,120
include the nginx of like the internet

00:12:30,960 --> 00:12:38,010
configuration file of my application and

00:12:33,120 --> 00:12:39,960
that will take care of the rest so that

00:12:38,010 --> 00:12:42,630
was like the HTTP blog and that's all

00:12:39,960 --> 00:12:46,050
I'm going to say about like the big HTTP

00:12:42,630 --> 00:12:48,570
block so let's let's see for servers so

00:12:46,050 --> 00:12:50,520
servers we give we give it a name and we

00:12:48,570 --> 00:12:52,710
say like everything God well bash calm

00:12:50,520 --> 00:12:55,440
or everything got washed out the 'listen

00:12:52,710 --> 00:12:59,880
to port 80 and then do stuff with that

00:12:55,440 --> 00:13:01,290
um or like maybe you don't want to spell

00:12:59,880 --> 00:13:02,040
out the domain name maybe you have so

00:13:01,290 --> 00:13:04,170
many domains

00:13:02,040 --> 00:13:05,850
maybe we actually don't care all you say

00:13:04,170 --> 00:13:07,170
like everything else like everything

00:13:05,850 --> 00:13:10,820
where you couldn't find a match before

00:13:07,170 --> 00:13:13,290
big server name everything that do this

00:13:10,820 --> 00:13:16,830
which is also like a very nice way

00:13:13,290 --> 00:13:21,150
because it will sometimes it gets a

00:13:16,830 --> 00:13:22,890
little hassle with other web servers to

00:13:21,150 --> 00:13:24,570
say like ok now I need to define a

00:13:22,890 --> 00:13:27,420
virtual host for this and a virtual host

00:13:24,570 --> 00:13:29,550
for this and if I listen to port ad in

00:13:27,420 --> 00:13:32,580
this virtual host and I can't do it here

00:13:29,550 --> 00:13:35,040
or whatever and all of the all of the

00:13:32,580 --> 00:13:39,000
things you can get wrong it doesn't just

00:13:35,040 --> 00:13:41,250
let you do like if you just say like 7

00:13:39,000 --> 00:13:43,590
things listen to port 80 it will figure

00:13:41,250 --> 00:13:46,890
out what to put where and we'll also

00:13:43,590 --> 00:13:50,490
figure it out with HTTP which can be a

00:13:46,890 --> 00:13:52,470
problem using like host names and stuff

00:13:50,490 --> 00:13:55,230
but it will take care of it and it will

00:13:52,470 --> 00:13:56,520
figure it out for you so and then for

00:13:55,230 --> 00:13:58,770
the most basic thing if you want to

00:13:56,520 --> 00:14:02,220
serve static content like you have all

00:13:58,770 --> 00:14:03,660
your static content in this folder then

00:14:02,220 --> 00:14:06,570
you put this in the server block and

00:14:03,660 --> 00:14:08,550
then you're done this is like which we

00:14:06,570 --> 00:14:11,340
transcend file off with a send file on

00:14:08,550 --> 00:14:12,030
before so it sends files and now we just

00:14:11,340 --> 00:14:14,010
tell it

00:14:12,030 --> 00:14:16,140
for this server block where this

00:14:14,010 --> 00:14:19,620
location block is included in for

00:14:16,140 --> 00:14:25,080
everything like a pass starting with a

00:14:19,620 --> 00:14:28,130
slash this is the root of this this is

00:14:25,080 --> 00:14:29,610
the root in like the the photo for this

00:14:28,130 --> 00:14:31,290
for the server

00:14:29,610 --> 00:14:34,200
and like you go figure it out and it

00:14:31,290 --> 00:14:36,780
will figure it out and then you have

00:14:34,200 --> 00:14:38,970
like static content delivery I know this

00:14:36,780 --> 00:14:40,560
isn't as cool anymore as it was like 12

00:14:38,970 --> 00:14:42,600
years ago when I started and was really

00:14:40,560 --> 00:14:45,480
happy that files showed up but it's very

00:14:42,600 --> 00:14:47,070
easy to write and if you want to be like

00:14:45,480 --> 00:14:50,460
really fancy with your static content

00:14:47,070 --> 00:14:53,970
you can say like okay so everything that

00:14:50,460 --> 00:14:57,660
ends know everything that is in the

00:14:53,970 --> 00:14:59,460
folder j/s or image or CSS like this

00:14:57,660 --> 00:15:01,710
like is a basically our expression you

00:14:59,460 --> 00:15:04,920
have your starting slash and then one of

00:15:01,710 --> 00:15:06,720
those three folders just go there and

00:15:04,920 --> 00:15:08,820
deliver that and the rest you don't care

00:15:06,720 --> 00:15:11,340
about so this is it lets you write

00:15:08,820 --> 00:15:13,830
rather intuitive it looks a little weird

00:15:11,340 --> 00:15:16,589
at because you have to escape that slash

00:15:13,830 --> 00:15:19,350
but once you have written one or two of

00:15:16,589 --> 00:15:21,030
those it gets very very easy to make up

00:15:19,350 --> 00:15:22,950
write regular expressions of how your

00:15:21,030 --> 00:15:26,070
application is structured and they they

00:15:22,950 --> 00:15:28,050
don't have to be that complicated and it

00:15:26,070 --> 00:15:29,790
very easily adapts to what you already

00:15:28,050 --> 00:15:32,339
have and you don't have to put a lot of

00:15:29,790 --> 00:15:34,080
hassle in like you usually you don't

00:15:32,339 --> 00:15:35,730
even need rewrite rules because you can

00:15:34,080 --> 00:15:37,050
just define those location blocks in a

00:15:35,730 --> 00:15:39,150
smarter way and you don't have to say

00:15:37,050 --> 00:15:41,550
like if it goes there redirect to this

00:15:39,150 --> 00:15:43,410
URL and this URL maybe then redirects

00:15:41,550 --> 00:15:45,089
there like you just put bunch more

00:15:43,410 --> 00:15:47,910
location blocks in and let it let it

00:15:45,089 --> 00:15:49,589
figure things out so another example of

00:15:47,910 --> 00:15:53,640
the how the regular expressions thing

00:15:49,589 --> 00:15:57,540
could work um is saying like everything

00:15:53,640 --> 00:15:59,310
that has a dot in it like your dot h TX

00:15:57,540 --> 00:16:01,530
s because you have fun lying around for

00:15:59,310 --> 00:16:03,960
patch installations or your dot git

00:16:01,530 --> 00:16:05,360
folder because this is how you deploy or

00:16:03,960 --> 00:16:07,800
anything like that

00:16:05,360 --> 00:16:09,060
turn the access log off because we don't

00:16:07,800 --> 00:16:11,790
want to lock those requests

00:16:09,060 --> 00:16:13,589
turn the not found log off because we

00:16:11,790 --> 00:16:15,180
don't care if people try to request

00:16:13,589 --> 00:16:17,970
those files and we don't serve them and

00:16:15,180 --> 00:16:21,030
just don't like just say no you can't

00:16:17,970 --> 00:16:22,500
have that and deny all I think in the

00:16:21,030 --> 00:16:24,510
standard configuration will even produce

00:16:22,500 --> 00:16:25,600
a 404 so you don't even like leak

00:16:24,510 --> 00:16:29,230
information that it's a

00:16:25,600 --> 00:16:33,519
it's just like thank you go away and

00:16:29,230 --> 00:16:35,730
it's very like I fell for me this form

00:16:33,519 --> 00:16:38,889
it feels very straightforward and very

00:16:35,730 --> 00:16:41,019
easy to approach in the in the sense

00:16:38,889 --> 00:16:42,430
that you can just say okay I want to

00:16:41,019 --> 00:16:42,850
turn off the excess lock how do I do

00:16:42,430 --> 00:16:46,810
that

00:16:42,850 --> 00:16:48,970
excess lock off this is this is a way of

00:16:46,810 --> 00:16:52,930
communication with the with the thing

00:16:48,970 --> 00:16:57,880
that I can understand and follow on that

00:16:52,930 --> 00:17:01,630
respect this is how you do ss SS l and s

00:16:57,880 --> 00:17:03,459
or HTTP and HTTPS you say like for us

00:17:01,630 --> 00:17:05,589
for everything that arrives at this

00:17:03,459 --> 00:17:09,039
machine listen to Eddie and listen to

00:17:05,589 --> 00:17:12,189
four for three using SSL and older nginx

00:17:09,039 --> 00:17:14,020
versions you said SSL on but then you

00:17:12,189 --> 00:17:18,189
had also had to specify a port so they

00:17:14,020 --> 00:17:19,870
put it in one line like well no actually

00:17:18,189 --> 00:17:23,020
like SSL is a little bit more

00:17:19,870 --> 00:17:24,579
complicated and this is this is the

00:17:23,020 --> 00:17:28,030
whole story like this is everything you

00:17:24,579 --> 00:17:29,799
have to do for SSL and like those lines

00:17:28,030 --> 00:17:31,510
like I read them on the internet so I

00:17:29,799 --> 00:17:33,669
know they're safe so you can just

00:17:31,510 --> 00:17:37,419
blindly copy them right this is how this

00:17:33,669 --> 00:17:40,570
works let's I walk you through a little

00:17:37,419 --> 00:17:43,809
bit so this is your certificates which

00:17:40,570 --> 00:17:46,950
is your very basic like you can also use

00:17:43,809 --> 00:17:49,419
one Pam file and we'll figure it out and

00:17:46,950 --> 00:17:50,919
then you say this is your SSL session

00:17:49,419 --> 00:17:53,650
timeout this is where it should store

00:17:50,919 --> 00:17:55,720
the information and then you say SSL

00:17:53,650 --> 00:17:58,570
protocols and those are the ones that I

00:17:55,720 --> 00:17:59,919
support you say prefer server ciphers

00:17:58,570 --> 00:18:03,250
because there was a security

00:17:59,919 --> 00:18:04,750
vulnerability so we just don't let the

00:18:03,250 --> 00:18:07,809
client decide which cipher it wants to

00:18:04,750 --> 00:18:10,690
use all then those are the ciphers if

00:18:07,809 --> 00:18:12,850
you ever configured what ciphers some

00:18:10,690 --> 00:18:15,100
things reduce you know the format if not

00:18:12,850 --> 00:18:17,620
yes it really looks like that

00:18:15,100 --> 00:18:19,929
yes it's ugly I know you once have to

00:18:17,620 --> 00:18:22,450
like read how the thing is structured

00:18:19,929 --> 00:18:25,390
and what cypress tree I actually include

00:18:22,450 --> 00:18:28,570
it in there and how how old ah don't use

00:18:25,390 --> 00:18:31,000
md5 and don't use that and what those

00:18:28,570 --> 00:18:32,470
actually all mean it's rather easy to

00:18:31,000 --> 00:18:34,840
figure out because they're websites to

00:18:32,470 --> 00:18:36,700
help you and then you say like use

00:18:34,840 --> 00:18:38,290
elliptic curve ciphers because they're a

00:18:36,700 --> 00:18:39,340
little bit faster and don't consume so

00:18:38,290 --> 00:18:41,890
much

00:18:39,340 --> 00:18:45,730
so much CPU power there's a very nice

00:18:41,890 --> 00:18:48,490
SSL tester website out there which name

00:18:45,730 --> 00:18:50,170
I always forget when I want to promote

00:18:48,490 --> 00:18:51,640
it but it's the first thing that shows

00:18:50,170 --> 00:18:53,800
I've been Google when you say like SSL

00:18:51,640 --> 00:18:56,200
check and that will give you a very nice

00:18:53,800 --> 00:18:58,750
rating and tell you about security

00:18:56,200 --> 00:19:00,460
problems in your configuration and which

00:18:58,750 --> 00:19:02,800
lifeÃ­s you support and that sort of

00:19:00,460 --> 00:19:04,720
decrypts what you already what you

00:19:02,800 --> 00:19:07,750
already configured and I would very much

00:19:04,720 --> 00:19:09,520
add you if you do anything HTTPS to

00:19:07,750 --> 00:19:12,370
always like use one or two of those

00:19:09,520 --> 00:19:13,870
tools to check not what you think you

00:19:12,370 --> 00:19:16,960
configured but what actually happened

00:19:13,870 --> 00:19:19,030
and if there is any current problem with

00:19:16,960 --> 00:19:22,090
your SSL configuration because in the

00:19:19,030 --> 00:19:24,880
last couple again the last one or two

00:19:22,090 --> 00:19:27,100
years there has been a lot of busts and

00:19:24,880 --> 00:19:29,770
problems in SSL that have been

00:19:27,100 --> 00:19:31,660
discovered by people most of them

00:19:29,770 --> 00:19:39,070
they're very easy fixes for you just

00:19:31,660 --> 00:19:42,250
have to employ them so rewrites uh this

00:19:39,070 --> 00:19:43,780
is this is sort of the point where me

00:19:42,250 --> 00:19:48,400
and a pet she always had long nights

00:19:43,780 --> 00:19:52,300
together it usually ended up with me

00:19:48,400 --> 00:19:54,460
crying and or not understanding what I

00:19:52,300 --> 00:19:56,260
did anymore and the next day and just

00:19:54,460 --> 00:20:01,390
like never touching it again because it

00:19:56,260 --> 00:20:03,520
worked once so I've done a pet she eight

00:20:01,390 --> 00:20:05,680
nine years I used it on a good chunk of

00:20:03,520 --> 00:20:08,620
project but I can't for the hell of me

00:20:05,680 --> 00:20:12,040
remember what square brackets are and

00:20:08,620 --> 00:20:15,370
queue and RSQ and exclamation mark and

00:20:12,040 --> 00:20:17,530
all that stuff means and like like again

00:20:15,370 --> 00:20:19,030
this is totally my problem but this

00:20:17,530 --> 00:20:22,720
doesn't make me remember things that I

00:20:19,030 --> 00:20:25,180
don't know how to use so I'm happy and

00:20:22,720 --> 00:20:28,060
this is the very very basic rewrite rule

00:20:25,180 --> 00:20:30,390
that you might want to use like it's

00:20:28,060 --> 00:20:33,310
it's maybe a bit contrived example

00:20:30,390 --> 00:20:36,340
because you would do HTTP to HTTPS

00:20:33,310 --> 00:20:38,200
writing maybe in another way but I think

00:20:36,340 --> 00:20:40,570
it very nicely shows that you can just

00:20:38,200 --> 00:20:44,140
say like server everything that starts

00:20:40,570 --> 00:20:48,040
with HTTP rewrite it to this URL and

00:20:44,140 --> 00:20:50,220
those Hostin requests your environment

00:20:48,040 --> 00:20:52,360
variables is just something nginx

00:20:50,220 --> 00:20:53,770
automatically populated for you and that

00:20:52,360 --> 00:20:58,120
are there for you

00:20:53,770 --> 00:21:00,130
and initially like when I first saw

00:20:58,120 --> 00:21:02,530
someone talk about nginx and show me

00:21:00,130 --> 00:21:04,480
those variables my reaction was how do I

00:21:02,530 --> 00:21:07,030
get to know like which variables I

00:21:04,480 --> 00:21:08,860
should put where and like how do I even

00:21:07,030 --> 00:21:11,590
know that horse exists and the nice

00:21:08,860 --> 00:21:13,660
thing about this is you don't have to

00:21:11,590 --> 00:21:15,970
because if you have a problem and you go

00:21:13,660 --> 00:21:18,340
to their documentation then they just

00:21:15,970 --> 00:21:21,309
tells you how to solve it and I never

00:21:18,340 --> 00:21:24,100
like in the three or four years that I

00:21:21,309 --> 00:21:26,350
did stuff with nginx by now ran into

00:21:24,100 --> 00:21:27,970
problems where the documentation didn't

00:21:26,350 --> 00:21:30,970
tell me everything I needed to know to

00:21:27,970 --> 00:21:32,919
solve my problem this is a very very big

00:21:30,970 --> 00:21:34,120
achievement on their part because you

00:21:32,919 --> 00:21:35,350
don't actually have to read the

00:21:34,120 --> 00:21:37,299
documentation you just enter your

00:21:35,350 --> 00:21:39,910
problem guell you click the first link

00:21:37,299 --> 00:21:41,140
and then they show you first the code

00:21:39,910 --> 00:21:44,080
and after that if you're really

00:21:41,140 --> 00:21:46,090
interested and if you're like it's half

00:21:44,080 --> 00:21:47,740
an hour until I get to go home I might

00:21:46,090 --> 00:21:51,160
as well understand what I'm doing and

00:21:47,740 --> 00:21:52,510
then you just don't don't just take it

00:21:51,160 --> 00:21:55,299
and see that it works but you actually

00:21:52,510 --> 00:21:56,980
can read up on it and it's very concise

00:21:55,299 --> 00:22:01,450
in detail then it doesn't bore you to

00:21:56,980 --> 00:22:08,799
death so let's talk about something else

00:22:01,450 --> 00:22:14,530
Eero pages so for every 500 X arrow that

00:22:08,799 --> 00:22:16,120
pops up just go to 500 HTML so this is

00:22:14,530 --> 00:22:19,120
how you say which arrow page it should

00:22:16,120 --> 00:22:21,460
use you can also do the same thing for

00:22:19,120 --> 00:22:24,549
other arrows like 404 or whatever and

00:22:21,460 --> 00:22:27,640
then we define a location saying slash

00:22:24,549 --> 00:22:32,860
500 H tml so this just that's like an

00:22:27,640 --> 00:22:36,669
internal redirect and here we say this

00:22:32,860 --> 00:22:39,520
500 HTML is only reachable through an

00:22:36,669 --> 00:22:40,690
internal rerouting which means that if

00:22:39,520 --> 00:22:44,380
someone goes to your site and enter

00:22:40,690 --> 00:22:46,090
slash 500 H tml he can't access the

00:22:44,380 --> 00:22:47,919
Senate will say this doesn't exist

00:22:46,090 --> 00:22:51,790
because maybe you don't want to show

00:22:47,919 --> 00:22:54,010
your 500 page to the world but currently

00:22:51,790 --> 00:22:56,440
now nowadays with github and other sites

00:22:54,010 --> 00:22:58,540
like that where you basically put at

00:22:56,440 --> 00:23:00,370
least 20% of your design effort into

00:22:58,540 --> 00:23:01,630
your arrow page because that's like your

00:23:00,370 --> 00:23:02,919
customer experience and that's what

00:23:01,630 --> 00:23:05,860
they're going to see most of the time

00:23:02,919 --> 00:23:07,000
you actually want to expose this like

00:23:05,860 --> 00:23:08,650
you want to be hey

00:23:07,000 --> 00:23:11,799
we can link to our 500 page because

00:23:08,650 --> 00:23:13,210
we're like a startup and 404 and 500 is

00:23:11,799 --> 00:23:16,059
like something that we do branding with

00:23:13,210 --> 00:23:18,460
so you say like location slash 500 and

00:23:16,059 --> 00:23:21,549
then you say okay every 2500 which means

00:23:18,460 --> 00:23:24,220
like return of 500 error code if this

00:23:21,549 --> 00:23:28,390
location gets accessed 500 you can also

00:23:24,220 --> 00:23:30,760
say like 404 you can say redirects are

00:23:28,390 --> 00:23:32,200
like it could return a 302 with the

00:23:30,760 --> 00:23:34,630
correct parameters but you also could

00:23:32,200 --> 00:23:35,409
just say redirect which is a little bit

00:23:34,630 --> 00:23:38,230
more straightforward

00:23:35,409 --> 00:23:40,210
but this is also very cool just if you

00:23:38,230 --> 00:23:43,059
want to test things like what actually

00:23:40,210 --> 00:23:46,120
happens if if my my back end whatever

00:23:43,059 --> 00:23:49,210
back end that might be returns a 500 or

00:23:46,120 --> 00:23:51,309
returns a 4-3 or a 2005 or two then you

00:23:49,210 --> 00:23:53,650
just make something like that you access

00:23:51,309 --> 00:23:55,480
it and the thing actually tells you

00:23:53,650 --> 00:23:56,770
what's going to happen if the back end

00:23:55,480 --> 00:23:59,980
system responds with that code because

00:23:56,770 --> 00:24:02,679
what it does is make an internal 500

00:23:59,980 --> 00:24:04,750
throw that and respond to it and it's

00:24:02,679 --> 00:24:06,250
not like okay I have to understand how

00:24:04,750 --> 00:24:07,870
the thing works to see what it will

00:24:06,250 --> 00:24:11,710
produce when this happens but you can

00:24:07,870 --> 00:24:16,990
just go try it so this is how you do

00:24:11,710 --> 00:24:19,570
caching so content from those folders

00:24:16,990 --> 00:24:23,070
expires in 14 days and then we will do

00:24:19,570 --> 00:24:25,450
like all the caching headers and I

00:24:23,070 --> 00:24:27,309
actually don't remember if it also sets

00:24:25,450 --> 00:24:29,770
an e-tag I don't think so but like this

00:24:27,309 --> 00:24:31,390
will take care of all the caching

00:24:29,770 --> 00:24:32,770
headers so it will be understand by all

00:24:31,390 --> 00:24:34,870
the browsers and you don't have to worry

00:24:32,770 --> 00:24:37,299
about the details and I haven't found a

00:24:34,870 --> 00:24:38,980
case yet where this didn't work because

00:24:37,299 --> 00:24:41,530
you said it should expire in 14 days so

00:24:38,980 --> 00:24:44,590
will it expire in 14 days and the rest

00:24:41,530 --> 00:24:47,970
of the thing can handle itself and if

00:24:44,590 --> 00:24:50,320
you want to like talk to memcache then

00:24:47,970 --> 00:24:54,100
you have to actually write like four

00:24:50,320 --> 00:24:58,330
lines of configuration so the use case

00:24:54,100 --> 00:25:00,870
for this might be that you never heard

00:24:58,330 --> 00:25:00,870
of varnish

00:25:02,910 --> 00:25:07,330
no that's actually legitimate use cases

00:25:05,470 --> 00:25:09,040
for this too but like this would be an

00:25:07,330 --> 00:25:12,070
example of how you do full page caching

00:25:09,040 --> 00:25:14,680
a full page caching and nginx so you say

00:25:12,070 --> 00:25:16,660
the memcache key is the you are you are

00:25:14,680 --> 00:25:18,670
either was requested this is the

00:25:16,660 --> 00:25:21,160
memcache server this is the default type

00:25:18,670 --> 00:25:25,120
I'm gonna I'm going to be responding

00:25:21,160 --> 00:25:27,760
with and the arrow page in case of a 404

00:25:25,120 --> 00:25:33,450
is a fallback then this ad fallback just

00:25:27,760 --> 00:25:35,710
defines a fallback URL and which is

00:25:33,450 --> 00:25:37,630
something you can name a location like

00:25:35,710 --> 00:25:39,880
you can give this a name and then you

00:25:37,630 --> 00:25:41,920
can just say okay now if this wasn't

00:25:39,880 --> 00:25:44,260
found internally like it doesn't throw

00:25:41,920 --> 00:25:47,590
404 others a redirect or something but

00:25:44,260 --> 00:25:49,360
it just says like in case I couldn't

00:25:47,590 --> 00:25:52,030
resolve this from memcache just go to

00:25:49,360 --> 00:25:56,050
whatever I called add fallback and and

00:25:52,030 --> 00:25:59,550
resolve this and then you can also say

00:25:56,050 --> 00:26:02,260
so whatever you get from the back end is

00:25:59,550 --> 00:26:06,550
already gzipped because we didn't want

00:26:02,260 --> 00:26:07,930
to put that much stuff in memcache or

00:26:06,550 --> 00:26:10,180
because memcache pages are only one

00:26:07,930 --> 00:26:12,580
megabyte so let's just choose it that

00:26:10,180 --> 00:26:13,810
and then you run into this problem that

00:26:12,580 --> 00:26:15,580
someone comes with an old and an

00:26:13,810 --> 00:26:18,160
explorer that doesn't support gzip

00:26:15,580 --> 00:26:20,560
compression clicks on your side and gets

00:26:18,160 --> 00:26:24,790
those nice binary thing and then you say

00:26:20,560 --> 00:26:26,680
hmm so either I figure like I would have

00:26:24,790 --> 00:26:29,560
to figure out if it comes in as a cache

00:26:26,680 --> 00:26:31,750
request or something and then you can

00:26:29,560 --> 00:26:33,100
just tell nginx so if you know he

00:26:31,750 --> 00:26:35,560
doesn't understand what you're trying to

00:26:33,100 --> 00:26:38,080
say to him just unzip it and deliver it

00:26:35,560 --> 00:26:40,120
unzipped and this is one of those

00:26:38,080 --> 00:26:43,660
moments that made me very very happy

00:26:40,120 --> 00:26:45,220
because like I didn't want to deal with

00:26:43,660 --> 00:26:48,820
that like the moment I noticed it was

00:26:45,220 --> 00:26:50,380
like gzip is around for a while how come

00:26:48,820 --> 00:26:51,820
not all browsers are understanding this

00:26:50,380 --> 00:26:53,860
and how come caching had a song work

00:26:51,820 --> 00:26:55,960
like I expect them to why does the

00:26:53,860 --> 00:26:58,630
internet hate me again and then it was

00:26:55,960 --> 00:27:00,640
like oh it can't okay cool done don't

00:26:58,630 --> 00:27:02,890
never have to worry about that again and

00:27:00,640 --> 00:27:04,810
that was very nice so how do you do

00:27:02,890 --> 00:27:06,610
basic authentication with nginx this is

00:27:04,810 --> 00:27:10,120
like what you do with your HDX s files

00:27:06,610 --> 00:27:12,610
usually but you can configure them a lot

00:27:10,120 --> 00:27:14,200
of things in HDX is first but usually

00:27:12,610 --> 00:27:15,290
you do like authentication there and you

00:27:14,200 --> 00:27:17,330
say ah

00:27:15,290 --> 00:27:19,010
sake and this is like in your nice

00:27:17,330 --> 00:27:20,960
little pop-up where it says username and

00:27:19,010 --> 00:27:24,760
password this is the title and then you

00:27:20,960 --> 00:27:26,000
say here's a file like HT Pass VD file

00:27:24,760 --> 00:27:28,880
go

00:27:26,000 --> 00:27:30,950
this is everything like this is basic

00:27:28,880 --> 00:27:33,470
authentication with nginx you have to

00:27:30,950 --> 00:27:35,660
make this HD pass VD file which is like

00:27:33,470 --> 00:27:38,030
one Linux command and then you say this

00:27:35,660 --> 00:27:39,950
is the text this is the file don't you

00:27:38,030 --> 00:27:41,540
go deal with it because this will never

00:27:39,950 --> 00:27:43,430
change like authentication always work

00:27:41,540 --> 00:27:44,690
like that and probably you know better

00:27:43,430 --> 00:27:48,350
what are you doing then I do anyway so

00:27:44,690 --> 00:27:52,910
okay two lines of code yay okay this is

00:27:48,350 --> 00:27:58,610
how you do load balancing so request

00:27:52,910 --> 00:28:00,590
comes in and then you say like at

00:27:58,610 --> 00:28:03,020
upstream so this is this is this is a

00:28:00,590 --> 00:28:07,520
named location if you will or named

00:28:03,020 --> 00:28:09,530
thing and then you say those are the

00:28:07,520 --> 00:28:13,310
four servers you figure out how load

00:28:09,530 --> 00:28:14,990
balancing works I have work to do and it

00:28:13,310 --> 00:28:16,760
will do that very well and you can

00:28:14,990 --> 00:28:20,420
configure a lot of things there that you

00:28:16,760 --> 00:28:22,580
might need at some point you can say how

00:28:20,420 --> 00:28:25,070
strong the individual machines are you

00:28:22,580 --> 00:28:26,780
can make health checks you can what it

00:28:25,070 --> 00:28:29,120
will do by default is if one machine

00:28:26,780 --> 00:28:30,500
doesn't respond it will remember and it

00:28:29,120 --> 00:28:32,720
won't redirect traffic to that machine

00:28:30,500 --> 00:28:34,700
for go for a little bit because like the

00:28:32,720 --> 00:28:36,620
machine didn't respond so like let's

00:28:34,700 --> 00:28:38,720
just not go talk there if it doesn't

00:28:36,620 --> 00:28:40,760
know how to figure out if the machine is

00:28:38,720 --> 00:28:42,140
healthy or not they will then I think

00:28:40,760 --> 00:28:44,150
after 30 seconds in a default

00:28:42,140 --> 00:28:46,490
configuration go there again try again

00:28:44,150 --> 00:28:48,170
so you will have a couple 404s but you

00:28:46,490 --> 00:28:49,540
don't like it won't just because one

00:28:48,170 --> 00:28:51,530
server goes down it won't like

00:28:49,540 --> 00:28:53,060
completely blow up you still will have

00:28:51,530 --> 00:28:57,020
to deal with it but it's sort of nice

00:28:53,060 --> 00:28:59,300
about it and if one of the machines is a

00:28:57,020 --> 00:29:01,880
lot stronger you can just like say space

00:28:59,300 --> 00:29:03,080
wait is five and then this will be five

00:29:01,880 --> 00:29:08,180
times more important than all the other

00:29:03,080 --> 00:29:10,700
things in the configuration so and then

00:29:08,180 --> 00:29:12,530
usually with load balancing you run into

00:29:10,700 --> 00:29:14,570
this question where you say but we have

00:29:12,530 --> 00:29:15,190
a legacy application that store stuff on

00:29:14,570 --> 00:29:19,730
disk

00:29:15,190 --> 00:29:21,080
for example our sessions because well

00:29:19,730 --> 00:29:22,520
that's the way things are and we can't

00:29:21,080 --> 00:29:24,110
change that because we have like 10

00:29:22,520 --> 00:29:26,030
million lines of code lying around or

00:29:24,110 --> 00:29:28,669
like in my case it was like 2 million

00:29:26,030 --> 00:29:31,159
lines of code we don't want to

00:29:28,669 --> 00:29:32,929
change everything and we store PDFs on

00:29:31,159 --> 00:29:34,489
disks that we deliver from there so can

00:29:32,929 --> 00:29:38,210
you please make sure that every user

00:29:34,489 --> 00:29:42,080
always goes to the same machine and then

00:29:38,210 --> 00:29:43,539
you do this and that works that's really

00:29:42,080 --> 00:29:45,980
cool

00:29:43,539 --> 00:29:48,169
yeah sure like okay

00:29:45,980 --> 00:29:50,480
like do the app screen by hashing the IP

00:29:48,169 --> 00:29:52,489
and redirecting people there like you

00:29:50,480 --> 00:29:55,940
can do more complicated things than that

00:29:52,489 --> 00:29:57,799
but it this gets you a very very long

00:29:55,940 --> 00:30:00,200
way and this like will work with

00:29:57,799 --> 00:30:02,899
WordPress and with Drupal and with with

00:30:00,200 --> 00:30:05,029
all the things that in with at least if

00:30:02,899 --> 00:30:06,919
you use some modules like depend that

00:30:05,029 --> 00:30:08,239
the same person always goes to the same

00:30:06,919 --> 00:30:14,289
machine this is good enough

00:30:08,239 --> 00:30:18,129
and let's eight buy it that's beautiful

00:30:14,289 --> 00:30:21,080
so if you want to use nginx as a proxy

00:30:18,129 --> 00:30:22,580
this is how you do that so you say you

00:30:21,080 --> 00:30:24,350
define your server block and you define

00:30:22,580 --> 00:30:29,450
your location blog and you say so for

00:30:24,350 --> 00:30:33,259
everything go talk to HTTP 8000 and set

00:30:29,450 --> 00:30:35,629
the like set another header just because

00:30:33,259 --> 00:30:37,820
our back-end system might also like need

00:30:35,629 --> 00:30:39,350
the real IP that the request was made

00:30:37,820 --> 00:30:44,960
with so we're going to pass that one

00:30:39,350 --> 00:30:46,369
through and then you do that can read up

00:30:44,960 --> 00:30:48,080
in the documentation about that ass but

00:30:46,369 --> 00:30:54,769
it's in the base example if you say like

00:30:48,080 --> 00:30:57,049
nginx proxy yeah so this is the proxy

00:30:54,769 --> 00:30:59,059
configuration I for example have set up

00:30:57,049 --> 00:31:01,489
for Jenkins or something that doesn't

00:30:59,059 --> 00:31:02,840
like to be run on port 80 or doesn't

00:31:01,489 --> 00:31:05,269
like to like because it doesn't like

00:31:02,840 --> 00:31:07,489
administrator rights so they it kindly

00:31:05,269 --> 00:31:09,529
asks you so maybe you don't want to run

00:31:07,489 --> 00:31:11,029
me on port 80 especially if you have

00:31:09,529 --> 00:31:13,519
other services running on this machine

00:31:11,029 --> 00:31:16,039
and you only want to redirect like slash

00:31:13,519 --> 00:31:18,470
Jenkins then I would put here slash

00:31:16,039 --> 00:31:22,369
Jenkins slash and do all that and then

00:31:18,470 --> 00:31:24,649
it would proxy order to the local

00:31:22,369 --> 00:31:26,629
machine I could basically put anything

00:31:24,649 --> 00:31:28,549
in there that everything that in your

00:31:26,629 --> 00:31:30,710
head makes sense you can put there and

00:31:28,549 --> 00:31:32,419
we'll understand it and if you have very

00:31:30,710 --> 00:31:34,549
very strange ideas in your head then it

00:31:32,419 --> 00:31:36,649
will say that doesn't work but you

00:31:34,549 --> 00:31:38,809
probably meant to write that so try that

00:31:36,649 --> 00:31:40,489
and then that will work so it's a

00:31:38,809 --> 00:31:41,660
two-step process and that will always

00:31:40,489 --> 00:31:44,870
get you there

00:31:41,660 --> 00:31:47,170
okay but this is the International PHP

00:31:44,870 --> 00:31:49,520
conference and I have ten minutes left

00:31:47,170 --> 00:31:53,780
so let's talk a little bit about how you

00:31:49,520 --> 00:31:58,880
do it how you do PHP with nginx so who

00:31:53,780 --> 00:32:01,400
of you has heard of or use PHP fpm cool

00:31:58,880 --> 00:32:07,300
it's good to see that catching up that

00:32:01,400 --> 00:32:11,750
was a way different ratio last year so

00:32:07,300 --> 00:32:16,310
PHP fpm is something that nowadays comes

00:32:11,750 --> 00:32:18,740
with your favorite PHP distributor of

00:32:16,310 --> 00:32:20,450
choice if you run a Debian based system

00:32:18,740 --> 00:32:23,690
and you never heard of dot depth or DEP

00:32:20,450 --> 00:32:26,060
is really nice they give you current

00:32:23,690 --> 00:32:27,620
versions of all packages and you get PHP

00:32:26,060 --> 00:32:29,900
five three or five four and if th

00:32:27,620 --> 00:32:30,560
releases a new version you get that as a

00:32:29,900 --> 00:32:32,960
package

00:32:30,560 --> 00:32:34,370
a day later so if you don't want to

00:32:32,960 --> 00:32:37,640
compile everything yourself but still

00:32:34,370 --> 00:32:41,030
would like to not be stuck with PHP 5.2

00:32:37,640 --> 00:32:44,800
dot six or five dot 3.6 or whatever your

00:32:41,030 --> 00:32:50,390
LTS thinks is stable

00:32:44,800 --> 00:32:55,250
check out depth so PHP fpm so far CGI

00:32:50,390 --> 00:32:59,600
process manager is something that works

00:32:55,250 --> 00:33:01,370
like a Pesci pre for cur in a way but it

00:32:59,600 --> 00:33:04,940
only handles the PHP part so it's one

00:33:01,370 --> 00:33:06,980
thread that says I have a couple of

00:33:04,940 --> 00:33:09,170
requests coming in so I will spawn PHP

00:33:06,980 --> 00:33:11,570
processes those will wait for work if a

00:33:09,170 --> 00:33:13,460
web request comes in this I will

00:33:11,570 --> 00:33:17,360
dispatch which of the processes

00:33:13,460 --> 00:33:20,690
currently isn't doing anything and if

00:33:17,360 --> 00:33:22,400
one of them dies because you know PHP

00:33:20,690 --> 00:33:23,600
sometimes does that then I will just

00:33:22,400 --> 00:33:25,580
responded then I will take care of

00:33:23,600 --> 00:33:28,130
everything everything that you need and

00:33:25,580 --> 00:33:29,780
we're gonna be friends and this is

00:33:28,130 --> 00:33:31,400
actually a really really solid piece of

00:33:29,780 --> 00:33:34,040
software like I never ran into troubles

00:33:31,400 --> 00:33:38,120
with fpm itself and this is how you

00:33:34,040 --> 00:33:40,190
configure it so for the master process

00:33:38,120 --> 00:33:41,960
you say listen 9000 we're going to use

00:33:40,190 --> 00:33:45,110
this in the nginx configuration later

00:33:41,960 --> 00:33:48,920
then you say listen aloud clients so if

00:33:45,110 --> 00:33:52,280
you want to say like I only accept fast

00:33:48,920 --> 00:33:54,950
like CGI fast egi protocol coming from

00:33:52,280 --> 00:33:57,460
localhost you can do that

00:33:54,950 --> 00:34:03,409
this is how you do comments in nginx

00:33:57,460 --> 00:34:05,659
never and not in nginx and Anini never

00:34:03,409 --> 00:34:07,220
just leave that empty and don't comment

00:34:05,659 --> 00:34:10,339
it I tried that that cost me like three

00:34:07,220 --> 00:34:13,040
hours of my life because allowed clients

00:34:10,339 --> 00:34:15,829
empty means nobody is allowed and not

00:34:13,040 --> 00:34:16,940
everyone is allowed because it's really

00:34:15,829 --> 00:34:18,980
important there for configuration

00:34:16,940 --> 00:34:23,899
setting where say you shouldn't listen

00:34:18,980 --> 00:34:26,119
to anyone this is the user and the group

00:34:23,899 --> 00:34:27,649
it should run as and then this is you

00:34:26,119 --> 00:34:31,700
can tell it how to do process management

00:34:27,649 --> 00:34:34,760
so you can relating to how Apache prefer

00:34:31,700 --> 00:34:38,659
responds its spawns its children to do

00:34:34,760 --> 00:34:40,399
work you can say I want this dynamic

00:34:38,659 --> 00:34:43,040
aesthetic if you say static when you say

00:34:40,399 --> 00:34:45,649
just just make like 23 make like 20

00:34:43,040 --> 00:34:50,990
worker processes or threads or whatever

00:34:45,649 --> 00:34:53,270
and so here you can say I want as max 50

00:34:50,990 --> 00:34:56,149
PHP processes because we benchmark the

00:34:53,270 --> 00:34:57,710
system and if we like put more PHP

00:34:56,149 --> 00:35:01,849
processes and it doesn't really improve

00:34:57,710 --> 00:35:07,760
the response time and let's start off

00:35:01,849 --> 00:35:10,310
with 5 let's make sure we always have 5

00:35:07,760 --> 00:35:12,589
around and let's make let's make sure we

00:35:10,310 --> 00:35:14,060
at max have 35 around because we don't

00:35:12,589 --> 00:35:15,890
want to clatter the process list or like

00:35:14,060 --> 00:35:19,400
just because we had a lot of traffic

00:35:15,890 --> 00:35:21,410
ones doesn't mean we should always have

00:35:19,400 --> 00:35:23,599
like 30 40 worker processes and the

00:35:21,410 --> 00:35:25,280
thing will take care about like waiting

00:35:23,599 --> 00:35:26,750
a couple minutes okay there's no more

00:35:25,280 --> 00:35:28,160
traffic I will scale down it will shut

00:35:26,750 --> 00:35:30,109
down a couple processes so this

00:35:28,160 --> 00:35:32,329
everything of that will be taken care

00:35:30,109 --> 00:35:35,750
for you and this is how you integrated

00:35:32,329 --> 00:35:40,970
with nginx so is a fast CGI pass local

00:35:35,750 --> 00:35:43,910
host port 9000 the script name is my app

00:35:40,970 --> 00:35:45,890
index or PHP and you include fast CGI

00:35:43,910 --> 00:35:47,930
power arms include fast CJ arms it's

00:35:45,890 --> 00:35:49,940
like magic make everything work include

00:35:47,930 --> 00:35:51,589
if you don't do that

00:35:49,940 --> 00:35:53,560
then it won't work if you do that

00:35:51,589 --> 00:35:56,390
everything will be taking care for you

00:35:53,560 --> 00:35:58,160
this is actually just a file lying

00:35:56,390 --> 00:36:00,349
around in your nginx distribution so if

00:35:58,160 --> 00:36:02,569
you really want to figure out what are

00:36:00,349 --> 00:36:05,270
all the crazy headers it sets and how it

00:36:02,569 --> 00:36:07,970
actually how all the how all the

00:36:05,270 --> 00:36:11,030
environment for passages to look like

00:36:07,970 --> 00:36:14,079
for fpm to work you can look there but

00:36:11,030 --> 00:36:18,079
it just works so you don't have to and

00:36:14,079 --> 00:36:21,380
this is like the technolon for your

00:36:18,079 --> 00:36:23,420
standard modern ish PHP application

00:36:21,380 --> 00:36:27,760
where you would usually just rewrite

00:36:23,420 --> 00:36:30,200
everything to index or PHP and then have

00:36:27,760 --> 00:36:32,930
inside of your application a thing that

00:36:30,200 --> 00:36:36,140
looks at URL and then redirects it to

00:36:32,930 --> 00:36:37,760
the right controller so most modern PHP

00:36:36,140 --> 00:36:39,530
frameworks work like that and here we

00:36:37,760 --> 00:36:41,750
just cut out that step where we make a

00:36:39,530 --> 00:36:43,880
rewrite chest to go to index.php because

00:36:41,750 --> 00:36:46,400
we say we don't even care what the user

00:36:43,880 --> 00:36:48,890
requested this is what you're going to

00:36:46,400 --> 00:36:50,690
get and whatever you actually get

00:36:48,890 --> 00:36:53,270
delivered from the PHP the PHP will

00:36:50,690 --> 00:36:55,670
figure out anyways and it will have all

00:36:53,270 --> 00:36:59,300
the correct like you script filename

00:36:55,670 --> 00:37:01,310
pass info URL setting settings set so

00:36:59,300 --> 00:37:03,589
and if you have a different file layout

00:37:01,310 --> 00:37:07,089
because you have a order application or

00:37:03,589 --> 00:37:09,470
you made another decision or whatever

00:37:07,089 --> 00:37:13,480
this is one way of doing it where you

00:37:09,470 --> 00:37:16,940
can say so try if this your l exists if

00:37:13,480 --> 00:37:19,220
not try if this URL is if this is a

00:37:16,940 --> 00:37:23,150
folder and if that doesn't work out go

00:37:19,220 --> 00:37:26,480
to index.php so this is a very easy way

00:37:23,150 --> 00:37:28,640
to say like you try to find what could

00:37:26,480 --> 00:37:30,560
match and if it and if it doesn't then I

00:37:28,640 --> 00:37:33,609
will look into it and this helps like

00:37:30,560 --> 00:37:36,140
for most old applications that use

00:37:33,609 --> 00:37:40,220
Apache without we read rules this is

00:37:36,140 --> 00:37:41,869
what's gonna be working out but it does

00:37:40,220 --> 00:37:44,390
things in the file system so you might

00:37:41,869 --> 00:37:46,970
not want that or you might want to map

00:37:44,390 --> 00:37:51,349
it a little bit different so another way

00:37:46,970 --> 00:37:55,700
to do that is you just say if it ends in

00:37:51,349 --> 00:37:59,690
PHP dot PHP put it to my app slash

00:37:55,700 --> 00:38:03,650
source and then this is slash fast each

00:37:59,690 --> 00:38:05,930
script name so go find the appropriate

00:38:03,650 --> 00:38:08,450
PHP file that was requested in my source

00:38:05,930 --> 00:38:09,980
folder and redirect there like I said

00:38:08,450 --> 00:38:12,020
you probably won't be needing this with

00:38:09,980 --> 00:38:13,849
modern frameworks but those are like the

00:38:12,020 --> 00:38:15,589
three options and one of those will get

00:38:13,849 --> 00:38:16,440
you to the go for the application you

00:38:15,589 --> 00:38:20,819
care about

00:38:16,440 --> 00:38:22,710
and this is how you make it so that PHP

00:38:20,819 --> 00:38:25,349
runs on another server then you're a web

00:38:22,710 --> 00:38:28,319
server which is really really cool idea

00:38:25,349 --> 00:38:30,960
and very easy to do with nginx so you

00:38:28,319 --> 00:38:32,760
can just say the FASTA ji path is just

00:38:30,960 --> 00:38:35,760
go to another server and what that gives

00:38:32,760 --> 00:38:37,589
you is that you have your nginx and it

00:38:35,760 --> 00:38:41,609
does all your static content the best

00:38:37,589 --> 00:38:45,420
your caching but that's whatever it does

00:38:41,609 --> 00:38:48,960
your SSL offloading and this machine

00:38:45,420 --> 00:38:51,060
probably won't have that much load but

00:38:48,960 --> 00:38:53,069
it will have some and maybe you want

00:38:51,060 --> 00:38:54,569
your application server not be on the

00:38:53,069 --> 00:38:56,520
same machine because this is like the

00:38:54,569 --> 00:38:58,050
first thing you kind of do first you

00:38:56,520 --> 00:38:59,970
take the database server off then you

00:38:58,050 --> 00:39:01,170
might want to take the PHP to another

00:38:59,970 --> 00:39:05,760
server and then you actually want to

00:39:01,170 --> 00:39:08,550
think about architecture so what this

00:39:05,760 --> 00:39:11,160
gives you is it just says okay so this

00:39:08,550 --> 00:39:13,650
PHP fpm is on another server go go there

00:39:11,160 --> 00:39:16,349
and this is only for static content and

00:39:13,650 --> 00:39:18,180
you don't have to set up like another

00:39:16,349 --> 00:39:20,730
web server on the other machine and have

00:39:18,180 --> 00:39:23,760
them talk PHP GL - talk HTTP to each

00:39:20,730 --> 00:39:27,210
other it's very easy to say in fast eg I

00:39:23,760 --> 00:39:30,660
pass here say at upstream and then you

00:39:27,210 --> 00:39:34,619
have you define a block of three or four

00:39:30,660 --> 00:39:37,800
fast CGI things so what you can do and

00:39:34,619 --> 00:39:40,140
what's a very nice way of initially

00:39:37,800 --> 00:39:42,420
scaling something is have one web server

00:39:40,140 --> 00:39:45,420
and have three or four servers that do

00:39:42,420 --> 00:39:49,260
all the PHP work and distribute this not

00:39:45,420 --> 00:39:50,849
by having a proxy or have a web server

00:39:49,260 --> 00:39:52,920
on every machine but only have PHP

00:39:50,849 --> 00:39:54,630
running on each machine and then send

00:39:52,920 --> 00:39:57,780
the requests they are depending on the

00:39:54,630 --> 00:40:01,079
load even if you say like here above

00:39:57,780 --> 00:40:02,849
that set request header my special

00:40:01,079 --> 00:40:06,599
header that my application uses seven

00:40:02,849 --> 00:40:09,450
that will also propagate so the thing

00:40:06,599 --> 00:40:11,819
with with that is like PHP is a little

00:40:09,450 --> 00:40:16,440
different compared to other fast egi

00:40:11,819 --> 00:40:18,690
things so there's a small section in in

00:40:16,440 --> 00:40:21,480
a couple nginx files where they say this

00:40:18,690 --> 00:40:23,160
is what we used to make PHP work so you

00:40:21,480 --> 00:40:24,690
don't have to it doesn't say in the

00:40:23,160 --> 00:40:27,349
documentation but that's sort of the

00:40:24,690 --> 00:40:29,059
sentiment I'm getting from them

00:40:27,349 --> 00:40:33,020
okay since I already spoiled you with

00:40:29,059 --> 00:40:36,200
the what that slide that's the person I

00:40:33,020 --> 00:40:39,260
stole half of my talk from a couple like

00:40:36,200 --> 00:40:41,210
maybe two years ago and that first got

00:40:39,260 --> 00:40:45,260
me introduced to nginx so I included on

00:40:41,210 --> 00:40:48,470
every nginx slide this is one of the

00:40:45,260 --> 00:40:50,539
more one of his slide decks that show

00:40:48,470 --> 00:40:52,520
you a couple more advanced tricks you

00:40:50,539 --> 00:40:56,299
can do with nginx and how how do you how

00:40:52,520 --> 00:40:58,160
he does scaling and stuff like that so

00:40:56,299 --> 00:41:01,970
this is what you can look at afterwards

00:40:58,160 --> 00:41:04,270
so thank you very much for your

00:41:01,970 --> 00:41:04,270

YouTube URL: https://www.youtube.com/watch?v=YHcRzDKo6qU


