Title: !!Con West 2020 - Aaron Wood: The Ancient Greeks and Their Restless Cattle: 2300 years of Bigints!
Publication date: 2020-03-23
Playlist: !!Con West 2020
Description: 
	Presented at !!Con West 2020: http://bangbangcon.com/west

Previously on The Ancient and the Restless: Archimedes’ new BigNumeral class is the talk of the town, but his biggest rival is out to destroy and replace it. Not to be outdone, Archimedes poses a cattle-counting problem to cement his place at the top. As planned, the challenge proves insurmountable and interest in the problem eventually dies.

….Or does it?? In true soap opera fashion, the long-forgotten problem has reappeared with a vengeance. Will two millennia of maths and the advent of computers be enough to answer Archimedes’ challenge to find the number of Cattle Under The Sun?!

#bangbangcon #bangbangconwest #bangbangconwest2020
Captions: 
	00:00:27,480 --> 00:00:37,520
I thought I would talk about the joy, surprise, and excitement of soap operas. Okay. So previously,

00:00:37,640 --> 00:00:44,559
on The Ancient and the Restless, Nicky tries to share a tender moment with Archimedes,

00:00:44,559 --> 00:00:52,559
but he breaks the social rules, and “well actually”s her about the finite versus the

00:00:52,559 --> 00:00:57,070
infinite. And then computes the upper bound on the number of grains of sand that would

00:00:57,070 --> 00:01:05,540
fit in the universe. And what's interesting about this is that they had... The Greek numeral

00:01:05,540 --> 00:01:11,611
system had a myriad, which was 10^4, and they could go up to a myriad myriad, and that's

00:01:11,611 --> 00:01:24,160
kind of as high as it would go. 8-digit architecture. I mean, 10^63 is well beyond that. So he had

00:01:24,160 --> 00:01:32,690
to invent big numerals. And he published his results in a paper he called the Sand Reckoner.

00:01:32,690 --> 00:01:38,430
And that was really good. Then his rival across town, Catherine, was like... Hey, I've got

00:01:38,430 --> 00:01:47,920
a big numeral system of my own! And she has some plans for her big numeral system. And

00:01:47,920 --> 00:01:56,740
he doesn't want to cede his big numeral fame. So he challenges her to count the number of

00:01:56,740 --> 00:02:04,790
cattle. There's four colors of cattle, and it's divided into bulls and cows, and he gives

00:02:04,790 --> 00:02:09,849
a bunch of proportions for the bulls. Like white bulls are a half and a third of the

00:02:09,849 --> 00:02:18,500
black together with the yellow, et cetera. And then gives some proportions for the cows.

00:02:18,500 --> 00:02:24,580
You know, same sort of thing. White were a third and a fourth of the whole of the black.

00:02:24,580 --> 00:02:31,440
And so on and so on. And so Catherine gets to work, infinitely many solutions, because

00:02:31,440 --> 00:02:38,700
we've got 1 free parameter, she does some stuff, and does some more stuff, and she's

00:02:38,700 --> 00:02:43,020
like... Hey, the smallest number of cattle under the sun is 50 million, and you could

00:02:43,020 --> 00:02:50,461
take any multiple of this number and it would also work. And Archimedes is impressed. But

00:02:50,461 --> 00:02:58,319
not that impressed. And tells her that... So he ups the ante and he's like -- hey, with

00:02:58,319 --> 00:03:03,150
the white and black bulls together, they form a square! And when the yellow and dappled

00:03:03,150 --> 00:03:08,340
bulls are together, they form a triangle! So... And Catherine is like... Yeah, no big

00:03:08,340 --> 00:03:15,290
deal. How hard can it be? He's like... If you can do this, then I'll really be impressed.

00:03:15,290 --> 00:03:20,790
So Catherine knows about square numbers. She works some stuff out. She does some factoring,

00:03:20,790 --> 00:03:29,870
she gets a result about what K should be. She knows about triangular numbers. She does

00:03:29,870 --> 00:03:35,900
a few more things with the square number stuff. And she ends up figuring out... Hey! All I

00:03:35,900 --> 00:03:45,020
need to do is find an integer solution to this equation. Where Y is divisible by 4657.

00:03:45,020 --> 00:03:57,590
And that's where she stops. Not really possible. So Archimedes is very pleased with himself.

00:03:57,590 --> 00:04:06,470
And the problem kind of goes away. So fast-forward about 2,000 years, to French mathematician

00:04:06,470 --> 00:04:14,560
Lagrange. These equations are now known as Pell equations. X squared minus dY squared,

00:04:14,560 --> 00:04:21,889
where d is some positive integer, and Lagrange proved they had infinitely many solutions.

00:04:21,889 --> 00:04:28,189
Actually, much earlier than that, the Indians figured out how to do this, in 628, Brahmagupta

00:04:28,189 --> 00:04:34,151
figured out if you have one solution, you have infinitely many, and Bhaskara II had

00:04:34,151 --> 00:04:40,960
a method for producing that first solution. But the Europeans didn't know about the Indians'

00:04:40,960 --> 00:04:47,330
work, so they did it totally separately. From Wallace, Lord Branchner, and Lagrange came

00:04:47,330 --> 00:04:51,740
around and used continuous fractions. So you might be wondering... Why are they called

00:04:51,740 --> 00:04:58,659
Pell's equations? And it was just a mistake.

00:04:58,659 --> 00:05:00,759
(laughter)

00:05:00,759 --> 00:05:07,100
But when things get named, they just stay. So what's a continued fraction? Continued

00:05:07,100 --> 00:05:12,620
fraction, you start with a number bigger than one, you subtract the integer part, then you

00:05:12,620 --> 00:05:17,330
invert it, so it's bigger than one again, and you rinse and repeat. So for square root

00:05:17,330 --> 00:05:23,689
33, it might look like this. And a good fact about square roots is that there's a periodicity.

00:05:23,689 --> 00:05:29,870
You see that this bottom right one has the same result as the top right one. So this

00:05:29,870 --> 00:05:37,580
will just repeat indefinitely. 5 and then the 12110 will just keep going. These integer

00:05:37,580 --> 00:05:44,849
parts are sometimes called the quotients, and you can use the quotients to build rational

00:05:44,849 --> 00:05:53,050
approximations to the square root. So you take 51, 512, 5121 and build these approximations.

00:05:53,050 --> 00:05:59,419
They get closer and closer to the square root as you go. And really fascinating -- at the

00:05:59,419 --> 00:06:06,990
last one, the convergent gives a solution to Pell's equation. So, 23/4 sounds to 23,

00:06:06,990 --> 00:06:16,249
4 being a solution to x^2-33y^2=1 Then you take powers of that thing. And that gives

00:06:16,249 --> 00:06:21,430
you all the solutions. So once you find the first solution, you can just keep taking powers

00:06:21,430 --> 00:06:27,369
of this quadratic integer and now you get all the solutions. Fast-forward another 100

00:06:27,369 --> 00:06:35,030
years, and Amthor finds out about Archimedes' cattle problem, does all the same work, says

00:06:35,030 --> 00:06:41,289
hey, it's just a Pell equation. We know how to do that stuff now. I'll just use continued

00:06:41,289 --> 00:06:52,979
fractions. Has a period of 92. So the last convergent in that list has this. As the solution.

00:06:52,979 --> 00:07:00,629
But we need a y that's divisible by 4657, so we need to take the 2329th power of this

00:07:00,629 --> 00:07:11,520
thing, which as you can guess is not computable by a human. But anyways... She has this is

00:07:11,520 --> 00:07:26,279
the smallest solution. There are 206,000 digits, and the first four of them are 7766. So we

00:07:26,279 --> 00:07:33,289
fast-forward to 1965 and University of Waterloo, they've got this cool IBM 7040 with 32k of

00:07:33,289 --> 00:07:41,149
memory and decide to compute this thing. I know that's not as impressive as 434-bit modular

00:07:41,149 --> 00:07:42,879
arithmetic on a Commodore 64.

00:07:42,879 --> 00:07:43,879
(laughter)

00:07:43,879 --> 00:07:53,050
But they do this. It takes 7 hours and 49 minutes to compute. They published the first

00:07:53,050 --> 00:08:01,099
and last 50-digit numbers. There was a group also in 1889, that spent four years computing

00:08:01,099 --> 00:08:07,879
digits. Computed 30 digits of the front and 18 digits of the back. That was a good project.

00:08:07,879 --> 00:08:09,179
(laughter)

00:08:09,179 --> 00:08:18,770
Anyway, you might notice that the first four digits are 7760. So Amthor is mortified that...

00:08:18,770 --> 00:08:23,850
Luckily she didn't try to compute more than 4 digits. That would have been rough. Then

00:08:23,850 --> 00:08:30,419
in 1981, they had this new Cray 1 computer and they're like... Hey, we've got a new computer.

00:08:30,419 --> 00:08:36,210
Let's make sure things are set up right by just solving Archimedes' cattle problem. Sure.

00:08:36,210 --> 00:08:42,060
So they compute the digits in about... And do all the verification. It takes about 10

00:08:42,060 --> 00:08:46,540
digits. And then this Harry Nilson guy is like... It's never been published before.

00:08:46,540 --> 00:08:55,130
Might as well just publish what the solution looks like. On 47 pages. Where the digits

00:08:55,130 --> 00:09:07,070
are like 1/3 of actual size. So I thought we would maybe compute it right now. And I

00:09:07,070 --> 00:09:13,340
was really interested in doing it quickly. So I wrote my code in Ruby.

00:09:13,340 --> 00:09:14,680
(laughter)

00:09:14,680 --> 00:09:24,070
So... Uh-oh. Don't look, don't look! Close your eyes, close your eyes. Okay. That was

00:09:24,070 --> 00:09:31,421
close. I'm glad no one looked. Thanks. Yeah. So we got some continued fraction stuff. Not

00:09:31,421 --> 00:09:37,990
all that hard. You know. Pretty straightforward. And we had to take powers of quadratic integers,

00:09:37,990 --> 00:09:44,440
which is also not all that difficult to do. So hard code in the solution to part 1. Because

00:09:44,440 --> 00:09:52,000
I was too lazy to do that part. So yeah. The first solution we just need to compute the

00:09:52,000 --> 00:09:58,279
continued fraction convergent. And then we've got to take the 2329th power of that thing

00:09:58,279 --> 00:10:05,829
and multiply by those other values, and that's it. So we can print this thing off. Whoops.

00:10:05,829 --> 00:10:22,250
That's not what I meant to do. Whoops. So... Yeah. 0.01 seconds in Ruby. On this wimpy

00:10:22,250 --> 00:10:28,700
laptop. Probably we should... I got like... A minute left or something. So...

00:10:36,220 --> 00:10:45,120
>> 7760271486818269583866643...

00:10:45,120 --> 00:10:48,179
(laughter)

00:10:48,179 --> 00:10:49,580
>> Thanks!

00:10:49,580 --> 00:10:54,240

YouTube URL: https://www.youtube.com/watch?v=BVYotbZuiDY


