Title: !!Con 2020 - Bang Bang!! My Interpreter Shot Me Down! by Julia Tufts
Publication date: 2020-05-28
Playlist: !!Con 2020
Description: 
	Bang Bang!! My Interpreter Shot Me Down! by Julia Tufts

How does a JavaScript object feel when it’s hit with a !! operator? In this musical ballad, we’ll look at what a !! operator does at a high level and how it can be useful. Then we’ll explore what it does at a lower level, from the perspective of an object seething with resentment. We’ll discover how a !! is parsed and interpreted in V8, by following a multifaceted object’s descent into boolean reduction.

Julia is software engineer based in Brooklyn, originally from Halifax, Canada. She used to study classical music and graph theory, but now makes bleeps, bloops, and bad wordplay. She enjoys imbuing abstract concepts with tenderness.
Captions: 
	00:00:13,349 --> 00:00:20,310
and hopefully you can hear me yeah I'm

00:00:16,890 --> 00:00:23,189
Julia I'm quietly online under the

00:00:20,310 --> 00:00:25,439
Twitter handle big commitment and I

00:00:23,189 --> 00:00:27,270
wrote a song about JavaScript and

00:00:25,439 --> 00:00:29,670
JavaScript interpreters which may be

00:00:27,270 --> 00:00:32,820
shortly but first a little background

00:00:29,670 --> 00:00:35,910
and context so the inspiration for all

00:00:32,820 --> 00:00:38,670
of this was what if I made a cover of

00:00:35,910 --> 00:00:40,260
bang bang my baby shot me down but made

00:00:38,670 --> 00:00:46,770
it about the bang bang operator in java

00:00:40,260 --> 00:00:49,800
script and said so why a few reasons one

00:00:46,770 --> 00:00:51,059
I am committed to the full realization

00:00:49,800 --> 00:00:56,070
of terrible puns

00:00:51,059 --> 00:00:59,070
and secondly I was curious firstly just

00:00:56,070 --> 00:01:00,629
like okay if I made this turn with one

00:00:59,070 --> 00:01:02,730
song what would that even sound like

00:01:00,629 --> 00:01:06,600
what would the lyrics be who the

00:01:02,730 --> 00:01:08,910
characters in this view and secondly it

00:01:06,600 --> 00:01:11,310
just got me thinking like how does a

00:01:08,910 --> 00:01:13,920
bang-bang really work in JavaScript like

00:01:11,310 --> 00:01:17,400
I have some idea probable evaluate but

00:01:13,920 --> 00:01:21,689
really like what's going on if I have

00:01:17,400 --> 00:01:23,580
this expression bang bang variable

00:01:21,689 --> 00:01:26,790
that's really interested in digging into

00:01:23,580 --> 00:01:29,430
you like what what is this moment that

00:01:26,790 --> 00:01:31,259
like this final bang gets applied like

00:01:29,430 --> 00:01:33,420
this is oh no it just sounded like

00:01:31,259 --> 00:01:38,490
dramatic and I wanted to explore that

00:01:33,420 --> 00:01:43,530
more so yeah let's just review what

00:01:38,490 --> 00:01:47,250
abandoning is so it's just too logical

00:01:43,530 --> 00:01:50,520
not operator it's together so if you

00:01:47,250 --> 00:01:53,610
have a class boolean true by one bang

00:01:50,520 --> 00:01:55,170
you cross another thing true but it's a

00:01:53,610 --> 00:01:57,000
little more interesting in JavaScript

00:01:55,170 --> 00:02:01,469
land because you can apply this to

00:01:57,000 --> 00:02:03,990
anything such as numbers so number it's

00:02:01,469 --> 00:02:08,690
all typically a return true it's a

00:02:03,990 --> 00:02:15,390
foreign 0 which transpose strings

00:02:08,690 --> 00:02:23,549
shut up to char except the EPI string

00:02:15,390 --> 00:02:27,470
returns false and even objects so one

00:02:23,549 --> 00:02:30,390
here but this is a part that kind of

00:02:27,470 --> 00:02:33,209
like three weeks I was expecting this to

00:02:30,390 --> 00:02:35,069
return false actual returns true and

00:02:33,209 --> 00:02:38,130
actually similarly with lists or an

00:02:35,069 --> 00:02:41,130
empty list will return true as well so

00:02:38,130 --> 00:02:44,130
it seems that like most of the time like

00:02:41,130 --> 00:02:45,870
it's true but sometimes most times it's

00:02:44,130 --> 00:02:49,290
false but then sometimes it's true

00:02:45,870 --> 00:02:51,959
so what's that about

00:02:49,290 --> 00:02:56,310
so it turns out that like a bang-bang

00:02:51,959 --> 00:02:59,850
will return true if the input is truthy

00:02:56,310 --> 00:03:01,620
and both if it is false II and maybe

00:02:59,850 --> 00:03:03,420
you've just heard the turns truthy and

00:03:01,620 --> 00:03:05,640
falsy for the first time certain are

00:03:03,420 --> 00:03:08,580
like did you just make that up

00:03:05,640 --> 00:03:11,959
and no it's a real things someone else

00:03:08,580 --> 00:03:15,720
made it up I'm just the messenger so

00:03:11,959 --> 00:03:17,730
it's not too bad though so how we think

00:03:15,720 --> 00:03:20,190
about it is that there are only a set

00:03:17,730 --> 00:03:24,239
amount of falsity values there's each in

00:03:20,190 --> 00:03:26,910
total so they're the original false to

00:03:24,239 --> 00:03:29,220
you different flavors of zero the empty

00:03:26,910 --> 00:03:32,040
string all undefined and not the number

00:03:29,220 --> 00:03:37,620
and anything else will be considered

00:03:32,040 --> 00:03:40,049
truth you so now that we know a little

00:03:37,620 --> 00:03:42,600
bit about what a banding is how does a

00:03:40,049 --> 00:03:46,440
bang-bang work how does it get evaluated

00:03:42,600 --> 00:03:49,500
interpret it so turns out that computers

00:03:46,440 --> 00:03:53,910
are complicated browsers are complicated

00:03:49,500 --> 00:03:58,109
javascript is that's strange but to

00:03:53,910 --> 00:04:00,390
answer this a little bit so like your

00:03:58,109 --> 00:04:02,160
browser has the JavaScript engine and

00:04:00,390 --> 00:04:04,950
the JavaScript engine will run that

00:04:02,160 --> 00:04:08,910
JavaScript and every engine is a little

00:04:04,950 --> 00:04:11,250
bit different but more or less little

00:04:08,910 --> 00:04:13,709
leg press interpret compile and run and

00:04:11,250 --> 00:04:16,829
in v---aids case that was wool aside

00:04:13,709 --> 00:04:18,630
it's like it'll try to optimize it and

00:04:16,829 --> 00:04:20,310
then like there's this float right

00:04:18,630 --> 00:04:21,690
that's like sometimes it like I'll try

00:04:20,310 --> 00:04:28,770
this too much in the hustling to

00:04:21,690 --> 00:04:30,840
optimize it's a wild world out there but

00:04:28,770 --> 00:04:35,970
the song will cover this a bit more as

00:04:30,840 --> 00:04:38,510
well and yeah so and v8 is the

00:04:35,970 --> 00:04:40,700
JavaScript engine that chrome uses and

00:04:38,510 --> 00:04:42,830
not because it's open source I can

00:04:40,700 --> 00:04:49,280
attempt to dig through the code and

00:04:42,830 --> 00:04:51,380
understand what's going on so the song

00:04:49,280 --> 00:04:54,410
be coming up shortly so yeah I was like

00:04:51,380 --> 00:04:57,890
okay what what's the song going to be

00:04:54,410 --> 00:04:59,780
about and so taking all this and like

00:04:57,890 --> 00:05:01,670
digging through the code I decided to

00:04:59,780 --> 00:05:05,090
focus on okay what if I am the

00:05:01,670 --> 00:05:08,060
JavaScript object how do I travel

00:05:05,090 --> 00:05:10,310
through this engine pipeline through

00:05:08,060 --> 00:05:15,050
this parser and interpreter and how do I

00:05:10,310 --> 00:05:17,750
get a valuated odds so that's kind of

00:05:15,050 --> 00:05:21,760
what the song is about and I think the

00:05:17,750 --> 00:05:21,760
video will be ready to roll

00:05:24,390 --> 00:05:27,560
[Music]

00:05:37,670 --> 00:05:40,769
[Music]

00:05:43,770 --> 00:05:50,139
[Music]

00:05:54,800 --> 00:05:57,929
[Music]

00:06:05,380 --> 00:06:08,430
[Music]

00:06:22,150 --> 00:06:26,730
[Music]

00:06:29,070 --> 00:06:32,139
[Music]

00:06:35,440 --> 00:06:47,269
[Music]

00:06:51,450 --> 00:06:58,449
[Music]

00:07:07,730 --> 00:07:10,829
[Music]

00:07:15,590 --> 00:07:18,720
[Music]

00:07:22,940 --> 00:07:35,130
[Music]

00:07:37,990 --> 00:07:44,430
[Music]

00:07:54,470 --> 00:08:12,400
[Music]

00:08:11,240 --> 00:08:25,550
[Applause]

00:08:12,400 --> 00:08:25,550
[Music]

00:08:29,060 --> 00:08:32,329
[Music]

00:08:35,530 --> 00:09:00,110
[Music]

00:09:02,960 --> 00:09:43,250

YouTube URL: https://www.youtube.com/watch?v=lEx5y9qBow8


