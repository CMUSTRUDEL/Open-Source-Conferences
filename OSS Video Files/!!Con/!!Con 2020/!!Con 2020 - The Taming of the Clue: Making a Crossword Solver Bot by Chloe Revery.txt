Title: !!Con 2020 - The Taming of the Clue: Making a Crossword Solver Bot by Chloe Revery
Publication date: 2020-05-28
Playlist: !!Con 2020
Description: 
	The Taming of the Clue: Making a Crossword Solver Bot by Chloe Revery

Have you ever tried to solve a crossword puzzle and walked away stumped? Imagine being a secondhand pen plotter from the 1980s! The humble pen plotter – a robotic arm with pen attachments once used to draw graphs for business presentations – is about to get an upgrade! Together we’ll equip it with a shiny new algorithm that parses and solves modern crossword puzzles. On the way, we’ll invent a new file format (or two!), teach the plotter to write the alphabet, and learn about a plagiarism scandal that rocked the crossword world. In the grand finale, the plotter will go head-to-microchip with some of the best solvers in the U.S. in a race against the machine.

Chloe Revery is a San Francisco based coder who makes programs, puzzles, and puns. You can find her on Twitter at https://twitter.com/chloerevery.
Captions: 
	00:00:13,130 --> 00:00:19,160
hi my name is Chloe reverie and I am a

00:00:17,060 --> 00:00:22,610
crucifer bolused someone who enjoys

00:00:19,160 --> 00:00:24,170
making or solving crossword puzzles it's

00:00:22,610 --> 00:00:26,630
a more popular hobby than you might

00:00:24,170 --> 00:00:28,640
think here's a picture of the American

00:00:26,630 --> 00:00:30,800
crossword puzzle tournament where every

00:00:28,640 --> 00:00:32,630
year in Stamford Connecticut Kusa

00:00:30,800 --> 00:00:34,400
verbalist compete against each other to

00:00:32,630 --> 00:00:36,470
find the person who can solve the

00:00:34,400 --> 00:00:39,290
assigned puzzles fastest and with the

00:00:36,470 --> 00:00:42,230
fewest mistakes it's like a grown up SAT

00:00:39,290 --> 00:00:44,239
but people do it for fun I'd really like

00:00:42,230 --> 00:00:46,970
to compete but the truth is I'm not that

00:00:44,239 --> 00:00:50,780
good at solving puzzles but I can code

00:00:46,970 --> 00:00:52,400
and thus was born an idea I would write

00:00:50,780 --> 00:00:55,790
an algorithm that solves crossword

00:00:52,400 --> 00:00:58,040
puzzles but where to even begin luckily

00:00:55,790 --> 00:00:59,690
as a crew severe blissed I knew some

00:00:58,040 --> 00:01:02,630
secrets of the trade that could help me

00:00:59,690 --> 00:01:05,239
in my quest for starters crossword

00:01:02,630 --> 00:01:09,049
constructors are notorious plagiarists

00:01:05,239 --> 00:01:11,030
in 2016 a programmer named salt Watson

00:01:09,049 --> 00:01:13,220
discovered widespread plagiarism in the

00:01:11,030 --> 00:01:15,799
crossword community including several

00:01:13,220 --> 00:01:18,679
instances of direct plagiarism of clues

00:01:15,799 --> 00:01:21,799
themes and grid layouts but there was

00:01:18,679 --> 00:01:23,350
also unintentional plagiarism because of

00:01:21,799 --> 00:01:25,520
the structure of the English language

00:01:23,350 --> 00:01:28,219
constructors often find themselves

00:01:25,520 --> 00:01:29,899
relying heavily on certain words here

00:01:28,219 --> 00:01:31,850
are the ten words the most frequently

00:01:29,899 --> 00:01:35,240
appear in American crossword puzzles

00:01:31,850 --> 00:01:37,280
notice all the vowels now not only do

00:01:35,240 --> 00:01:39,499
these words appear all the time but they

00:01:37,280 --> 00:01:43,189
often appear with the exact same clues

00:01:39,499 --> 00:01:46,280
for example the clue eery has appeared

00:01:43,189 --> 00:01:48,920
in crosswords thousands of times but 20%

00:01:46,280 --> 00:01:52,999
of those times it appears with one of

00:01:48,920 --> 00:01:55,009
only five clues in this exact wording it

00:01:52,999 --> 00:01:57,950
turns out constructors can be really

00:01:55,009 --> 00:02:00,439
lazy and I wondered how much of a

00:01:57,950 --> 00:02:02,389
crossword puzzle could I solve simply by

00:02:00,439 --> 00:02:05,329
cross-referencing its clues with a

00:02:02,389 --> 00:02:08,119
historical clue database I decided to

00:02:05,329 --> 00:02:10,340
write an algorithm to find out just like

00:02:08,119 --> 00:02:13,010
a human solver the algorithm needs two

00:02:10,340 --> 00:02:15,920
pieces of input to do its work the grid

00:02:13,010 --> 00:02:17,780
layout and the clues and because there's

00:02:15,920 --> 00:02:19,880
no standard way to represent a puzzle

00:02:17,780 --> 00:02:21,410
programmatically we got to represent

00:02:19,880 --> 00:02:24,150
this data however we want

00:02:21,410 --> 00:02:25,950
since the data to represent a grid

00:02:24,150 --> 00:02:28,290
looks very different from the data that

00:02:25,950 --> 00:02:31,110
represents the clues I settled on two

00:02:28,290 --> 00:02:33,390
separate file formats in the grid file

00:02:31,110 --> 00:02:35,849
the first line is the puzzle dimensions

00:02:33,390 --> 00:02:37,920
for readability the rest of the file

00:02:35,849 --> 00:02:39,690
simply visually translates the puzzle

00:02:37,920 --> 00:02:41,940
with hashes for black squares and

00:02:39,690 --> 00:02:43,260
periods for blank ones when it's

00:02:41,940 --> 00:02:46,290
finished the puzzle should look like

00:02:43,260 --> 00:02:48,810
this the clues are a text file where the

00:02:46,290 --> 00:02:51,780
first two numbers are the XY position of

00:02:48,810 --> 00:02:53,909
the clue in the grid the third number is

00:02:51,780 --> 00:02:56,400
the direction of the clue zero for

00:02:53,909 --> 00:02:58,980
horizontal and one for vertical the rest

00:02:56,400 --> 00:03:00,709
of the line is the clue text once we

00:02:58,980 --> 00:03:03,060
established a format for the clue data

00:03:00,709 --> 00:03:06,060
it was easy to compare it with the

00:03:03,060 --> 00:03:07,769
historical database of clues so how much

00:03:06,060 --> 00:03:10,620
of the puzzle can be solved through this

00:03:07,769 --> 00:03:13,549
approach turns out to be a whopping 30

00:03:10,620 --> 00:03:18,299
percent so our puzzle has gone from this

00:03:13,549 --> 00:03:21,030
to this much better but we still have to

00:03:18,299 --> 00:03:22,799
solve the other 70% and that means we're

00:03:21,030 --> 00:03:25,319
going to need a way to generate answers

00:03:22,799 --> 00:03:29,220
for the remaining clues luckily I know

00:03:25,319 --> 00:03:31,620
just the tool AI is a magical tool that

00:03:29,220 --> 00:03:34,200
solves all of your problems just kidding

00:03:31,620 --> 00:03:37,160
actually AI is often good at solving

00:03:34,200 --> 00:03:39,419
very specific well-defined problems and

00:03:37,160 --> 00:03:41,849
unfortunately crossword puzzle clues

00:03:39,419 --> 00:03:44,790
differ widely in format meaning and

00:03:41,849 --> 00:03:46,470
style just how widely I was able to

00:03:44,790 --> 00:03:49,980
identify several different clue

00:03:46,470 --> 00:03:52,290
categories here's a sample because

00:03:49,980 --> 00:03:53,940
there's no one-size-fits-all solution we

00:03:52,290 --> 00:03:56,250
can use to generate answers for all

00:03:53,940 --> 00:03:57,870
these different types of clues we need

00:03:56,250 --> 00:04:00,419
to use a different approach for each

00:03:57,870 --> 00:04:02,579
clue type so I wrote a program that

00:04:00,419 --> 00:04:04,560
classifies clues based on heuristics I

00:04:02,579 --> 00:04:06,599
know are commonly used by constructors

00:04:04,560 --> 00:04:09,389
so we can use a different approach to

00:04:06,599 --> 00:04:12,329
solve each one for example if we see the

00:04:09,389 --> 00:04:14,280
clue love in Lille we can classify it as

00:04:12,329 --> 00:04:15,449
non-english because it contains a

00:04:14,280 --> 00:04:18,419
non-english word

00:04:15,449 --> 00:04:20,489
place or name now that we have this in

00:04:18,419 --> 00:04:23,160
place we can use a different API or

00:04:20,489 --> 00:04:24,810
strategy to generate the answers here's

00:04:23,160 --> 00:04:27,960
a sample of some of the approaches I

00:04:24,810 --> 00:04:30,180
used you're probably wondering what's up

00:04:27,960 --> 00:04:32,159
with puns it turns out computers are

00:04:30,180 --> 00:04:34,740
good at math but not so good at humor

00:04:32,159 --> 00:04:36,639
I'm several PhD short of figuring out

00:04:34,740 --> 00:04:39,099
how to solve this problem so I just

00:04:36,639 --> 00:04:41,319
over it now that we've generated

00:04:39,099 --> 00:04:43,419
possible answers for every clue we can

00:04:41,319 --> 00:04:45,580
use what we already know to winnow down

00:04:43,419 --> 00:04:47,590
our answer set so imagine that we have

00:04:45,580 --> 00:04:50,620
these possible answers for these clues

00:04:47,590 --> 00:04:52,539
of this length first we can remove all

00:04:50,620 --> 00:04:53,590
the answers that aren't the exact right

00:04:52,539 --> 00:04:55,930
length for the clue

00:04:53,590 --> 00:04:58,810
so goodbye Serena which is not five

00:04:55,930 --> 00:05:01,300
characters next we discard the answers

00:04:58,810 --> 00:05:03,699
that don't fit with a 30% of the grid we

00:05:01,300 --> 00:05:06,580
already know let's imagine that that

00:05:03,699 --> 00:05:08,529
disqualifies bake so now we have a much

00:05:06,580 --> 00:05:10,870
narrower set of answers to play with and

00:05:08,529 --> 00:05:12,580
to get the solution to the puzzle all we

00:05:10,870 --> 00:05:13,990
need to do is mash together every

00:05:12,580 --> 00:05:16,330
possible answer with every other

00:05:13,990 --> 00:05:20,279
possible answer until we get a grid that

00:05:16,330 --> 00:05:22,779
works there's just one problem with that

00:05:20,279 --> 00:05:24,669
even a small crossword turns out to be

00:05:22,779 --> 00:05:26,590
pretty big and there are just too many

00:05:24,669 --> 00:05:29,169
combinations to efficiently brute-force

00:05:26,590 --> 00:05:30,819
this problem luckily people who are

00:05:29,169 --> 00:05:32,800
really good at math have been working on

00:05:30,819 --> 00:05:35,759
this problem for decades they've even

00:05:32,800 --> 00:05:38,919
given it a name boolean satisfiability

00:05:35,759 --> 00:05:40,659
problem this is a class of problems in

00:05:38,919 --> 00:05:43,089
which the goal is to find an assignment

00:05:40,659 --> 00:05:45,339
for a large number of variables such

00:05:43,089 --> 00:05:48,400
that an overall formula evaluates to

00:05:45,339 --> 00:05:50,860
true the formula can be as simple as X

00:05:48,400 --> 00:05:53,409
and y equals true the satisfiability

00:05:50,860 --> 00:05:55,990
problem in this case is to find boolean

00:05:53,409 --> 00:05:58,750
values true or false for x and y that

00:05:55,990 --> 00:06:01,000
make the equation true once you express

00:05:58,750 --> 00:06:02,879
a problem is a boolean equation you can

00:06:01,000 --> 00:06:05,770
run it through a Sat solver for

00:06:02,879 --> 00:06:08,319
satisfiability an algorithm designed to

00:06:05,770 --> 00:06:10,240
solve this class of problems so how can

00:06:08,319 --> 00:06:12,430
we turn our partially filled grid and

00:06:10,240 --> 00:06:15,099
our set of possible answers into a

00:06:12,430 --> 00:06:17,110
boolean equation we start by imagining

00:06:15,099 --> 00:06:19,750
that each square in the crossword puzzle

00:06:17,110 --> 00:06:22,000
is its own variable since we've already

00:06:19,750 --> 00:06:24,279
generated a list of possible values for

00:06:22,000 --> 00:06:26,860
every square we have a starting set of

00:06:24,279 --> 00:06:28,930
possible values for each variable for

00:06:26,860 --> 00:06:32,050
example if we know that one across is

00:06:28,930 --> 00:06:35,710
either bead or drop square X one must

00:06:32,050 --> 00:06:37,240
contain either D or B so now we can

00:06:35,710 --> 00:06:39,699
write a boolean equation that represents

00:06:37,240 --> 00:06:42,969
all the possible values for one across

00:06:39,699 --> 00:06:45,879
like this this statement says that one

00:06:42,969 --> 00:06:47,889
across must be either bead or drop each

00:06:45,879 --> 00:06:48,670
variable has a special notation to make

00:06:47,889 --> 00:06:50,710
it more human

00:06:48,670 --> 00:06:52,660
eatable it contains the row and column

00:06:50,710 --> 00:06:55,120
number of the square and a possible

00:06:52,660 --> 00:06:57,190
value to fill it if we feed this

00:06:55,120 --> 00:07:00,160
expression into a Sat solver algorithm

00:06:57,190 --> 00:07:03,730
such as Z cheff it will output something

00:07:00,160 --> 00:07:05,910
like this telling us that the solution

00:07:03,730 --> 00:07:08,290
to the puzzle for one across is bead

00:07:05,910 --> 00:07:10,360
when I applied this formula to the

00:07:08,290 --> 00:07:13,900
entire puzzle and ran it through the Sat

00:07:10,360 --> 00:07:16,600
solver algorithm BAM I got a pretty

00:07:13,900 --> 00:07:18,490
filled puzzle it's not perfect but it's

00:07:16,600 --> 00:07:22,210
pretty good for an unthinking machine I

00:07:18,490 --> 00:07:24,370
call it the grid ler but the griddler is

00:07:22,210 --> 00:07:26,230
still trapped inside my computer unable

00:07:24,370 --> 00:07:28,600
to manifest in the physical world and

00:07:26,230 --> 00:07:31,060
compete against people so to bring it to

00:07:28,600 --> 00:07:33,130
life I called in a friend the pen

00:07:31,060 --> 00:07:35,200
plotter before there was the toner

00:07:33,130 --> 00:07:37,420
printer people used these plotters to

00:07:35,200 --> 00:07:39,490
draw detailed designs on paper it's

00:07:37,420 --> 00:07:41,860
essentially a programmable robotic arm

00:07:39,490 --> 00:07:44,290
with a pen attached nowadays the

00:07:41,860 --> 00:07:46,270
business world has moved on but I happen

00:07:44,290 --> 00:07:48,730
to have access to a fashionable vintage

00:07:46,270 --> 00:07:50,500
pen plotter from the 80s I realized I

00:07:48,730 --> 00:07:52,480
could use it to transcribe the filled

00:07:50,500 --> 00:07:53,110
puzzle onto paper after the algorithm

00:07:52,480 --> 00:07:56,020
solved it

00:07:53,110 --> 00:07:58,630
the only problem this plotter uses a

00:07:56,020 --> 00:08:01,510
domain-specific language called HP GL

00:07:58,630 --> 00:08:04,480
hewlett-packard graphics language it's

00:08:01,510 --> 00:08:07,180
not much fun here's the HP GL to draw a

00:08:04,480 --> 00:08:09,580
single line across the page we

00:08:07,180 --> 00:08:12,520
initialize select pen one from the

00:08:09,580 --> 00:08:15,280
repository move it to position absolute

00:08:12,520 --> 00:08:17,590
90 90 in the upper left of the page put

00:08:15,280 --> 00:08:19,930
the pen down to start drawing move the

00:08:17,590 --> 00:08:22,030
pen to position absolute 9900 at the

00:08:19,930 --> 00:08:24,730
right side of the page pick the pen up

00:08:22,030 --> 00:08:27,490
to stop drawing and finally put the pen

00:08:24,730 --> 00:08:28,000
back in the repository Wow that was

00:08:27,490 --> 00:08:30,670
terrible

00:08:28,000 --> 00:08:32,110
to avoid writing any more HP GL than

00:08:30,670 --> 00:08:34,180
absolutely necessary

00:08:32,110 --> 00:08:36,910
I wrote a python library that converts

00:08:34,180 --> 00:08:40,300
puzzle files blank partially filled or

00:08:36,910 --> 00:08:42,280
fully filled to HP GL and it turned out

00:08:40,300 --> 00:08:45,760
to be only marginally less terrible than

00:08:42,280 --> 00:08:48,910
the original HP GL here's a sample how

00:08:45,760 --> 00:08:50,830
you write the letter s so after spending

00:08:48,910 --> 00:08:52,840
an entire day relearning how to write

00:08:50,830 --> 00:08:54,970
the alphabet I was finally able to put

00:08:52,840 --> 00:08:59,080
everything together here's a video of

00:08:54,970 --> 00:09:00,790
the griddler at work so the plotter has

00:08:59,080 --> 00:09:01,960
interpreted the grid format and is

00:09:00,790 --> 00:09:05,200
recreating it on

00:09:01,960 --> 00:09:07,060
page including the black squares the pen

00:09:05,200 --> 00:09:09,310
plotter got tired at this point and had

00:09:07,060 --> 00:09:11,410
to nap but once I woke it up again it

00:09:09,310 --> 00:09:14,290
used that nifty library I wrote to fill

00:09:11,410 --> 00:09:17,290
in the letters too so what's next for

00:09:14,290 --> 00:09:18,670
the griddler well the American crossword

00:09:17,290 --> 00:09:21,640
puzzle tournament where the griddler

00:09:18,670 --> 00:09:24,690
will be competing remotely thank you for

00:09:21,640 --> 00:09:24,690

YouTube URL: https://www.youtube.com/watch?v=NWejhIM74do


