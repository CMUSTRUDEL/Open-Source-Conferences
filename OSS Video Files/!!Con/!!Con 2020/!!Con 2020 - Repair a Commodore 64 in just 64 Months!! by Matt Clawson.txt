Title: !!Con 2020 - Repair a Commodore 64 in just 64 Months!! by Matt Clawson
Publication date: 2020-05-28
Playlist: !!Con 2020
Description: 
	Repair a Commodore 64 in just 64 Months!! by Matt Clawson

It took me over 5 years, but I did eventually get my thrift store Commodore 64 up and running! Along the way, I encountered active online communities who are keeping old platforms alive by openly sharing technical documents, repair logs, and 21st century improvements to computers from the past.

I’ll share my experience of going from an absolute beginner with a broken computer to a beginner with a working computer! I’ll walk through some of my troubleshooting steps and simply explain the faulty subsystems which prevented the computer from working. You’ll learn about the challenges of working with old machines, see the tools folks use for repair, and be introduced to some of the cool hobbyist efforts that make impossible repairs possible.

Matt builds software for journalists and is located in Newark, NJ. He enjoys studying the history of computing and learning the inner workings of obsolete platforms adored by millions.
Captions: 
	00:00:12,740 --> 00:00:18,110
thank you so much and thank you to the

00:00:15,710 --> 00:00:20,840
bangbang con organizers for putting on

00:00:18,110 --> 00:00:23,210
this conference and for creating such a

00:00:20,840 --> 00:00:27,320
welcoming space for new speakers like me

00:00:23,210 --> 00:00:29,840
and for everyone else and yeah let's get

00:00:27,320 --> 00:00:32,809
to it today I just wanted to share with

00:00:29,840 --> 00:00:35,540
you like my multi-year saga of repairing

00:00:32,809 --> 00:00:38,420
my Commodore 64 that I found in the

00:00:35,540 --> 00:00:44,660
basement of a thrift store buried in the

00:00:38,420 --> 00:00:47,060
dust and dirt and just my experience of

00:00:44,660 --> 00:00:48,800
going from someone who had some basic

00:00:47,060 --> 00:00:52,190
working knowledge of playing around with

00:00:48,800 --> 00:00:53,329
electronics and someone who maybe has a

00:00:52,190 --> 00:00:55,040
little bit better of an understanding

00:00:53,329 --> 00:00:59,360
and appreciation for how these machines

00:00:55,040 --> 00:01:03,040
worked so let's talk about the Commodore

00:00:59,360 --> 00:01:06,560
64 for those who haven't used one before

00:01:03,040 --> 00:01:09,800
it might be a little unfamiliar this

00:01:06,560 --> 00:01:12,080
computer was released in 1982 it sold

00:01:09,800 --> 00:01:14,420
about 10 to 17 million units depending

00:01:12,080 --> 00:01:16,070
on who you ask and that puts it among

00:01:14,420 --> 00:01:19,790
the ranks of like the top selling

00:01:16,070 --> 00:01:21,770
computers of all time I think so when

00:01:19,790 --> 00:01:24,320
you turn this thing on you just get this

00:01:21,770 --> 00:01:25,909
screen and this is like a screen it

00:01:24,320 --> 00:01:27,920
represents a world of like infinite

00:01:25,909 --> 00:01:29,780
possibilities what you're looking at

00:01:27,920 --> 00:01:32,420
right here is an interpreter where you

00:01:29,780 --> 00:01:36,170
can just start typing in basic code like

00:01:32,420 --> 00:01:38,540
you the most common one is the 10 print

00:01:36,170 --> 00:01:40,820
go to tend you know hello we're all kind

00:01:38,540 --> 00:01:42,560
of thing you can just start going now

00:01:40,820 --> 00:01:45,850
you can also plug in cartridges in the

00:01:42,560 --> 00:01:47,600
back there's a floppy floppy disk

00:01:45,850 --> 00:01:49,580
attachment that you could use to load

00:01:47,600 --> 00:01:52,520
additional software and I'm sure there

00:01:49,580 --> 00:01:54,920
were many many users who never wrote a

00:01:52,520 --> 00:01:56,689
line of code or you know never created

00:01:54,920 --> 00:01:58,340
their own applications but use the

00:01:56,689 --> 00:01:59,930
software created by others and that's

00:01:58,340 --> 00:02:02,119
perfectly fine that's perfectly great

00:01:59,930 --> 00:02:03,049
but for those who wanted to learn the

00:02:02,119 --> 00:02:06,500
system a little bit better

00:02:03,049 --> 00:02:08,540
Commodore provided a programmers

00:02:06,500 --> 00:02:10,399
reference guide and this guide would

00:02:08,540 --> 00:02:12,019
basically explain to you like at a

00:02:10,399 --> 00:02:14,480
really low level how all the hardware

00:02:12,019 --> 00:02:16,220
worked and if you found that this game

00:02:14,480 --> 00:02:18,590
that you wrote or the software that you

00:02:16,220 --> 00:02:20,690
wrote in basic wasn't fast enough well

00:02:18,590 --> 00:02:22,340
their programmers reference guides would

00:02:20,690 --> 00:02:24,139
also teach you how to write assembly

00:02:22,340 --> 00:02:26,210
code and so instead of using an

00:02:24,139 --> 00:02:29,990
interpreted language you could

00:02:26,210 --> 00:02:31,820
right assembly and get that's so much

00:02:29,990 --> 00:02:34,100
more performance and interact directly

00:02:31,820 --> 00:02:37,250
with the graphics hardware on the system

00:02:34,100 --> 00:02:40,010
and really like a whole generation of

00:02:37,250 --> 00:02:42,350
programmers you know grew up with this

00:02:40,010 --> 00:02:45,920
machine and it changed the course of

00:02:42,350 --> 00:02:49,130
their lives and so why do I want one of

00:02:45,920 --> 00:02:52,400
these or why did I want one of these I'm

00:02:49,130 --> 00:02:54,710
not quite sure I was a little young to

00:02:52,400 --> 00:02:56,570
have ever like used a Commodore 64 and

00:02:54,710 --> 00:02:59,870
its heyday but I knew that it existed

00:02:56,570 --> 00:03:01,820
and I especially knew that it existed by

00:02:59,870 --> 00:03:05,570
way of the demo scene which is a really

00:03:01,820 --> 00:03:08,450
fascinating internet art subculture that

00:03:05,570 --> 00:03:10,130
I just really loved and a lot of folks

00:03:08,450 --> 00:03:13,220
in the demo scene also loved this system

00:03:10,130 --> 00:03:15,200
so I kind of wanted one to also I had

00:03:13,220 --> 00:03:16,310
spent some time studying like the

00:03:15,200 --> 00:03:17,840
architecture of the Nintendo

00:03:16,310 --> 00:03:19,400
Entertainment System and learning how

00:03:17,840 --> 00:03:21,350
that worked at a really low level and

00:03:19,400 --> 00:03:23,540
that was a really rich and rewarding

00:03:21,350 --> 00:03:24,590
experience and so I kind of wanted to do

00:03:23,540 --> 00:03:27,440
the same thing with the Commodore 64

00:03:24,590 --> 00:03:32,000
because they share this very similar

00:03:27,440 --> 00:03:33,590
processors and I thought it would be

00:03:32,000 --> 00:03:35,720
interesting to compare and contrast how

00:03:33,590 --> 00:03:37,850
engineers you know it took like the same

00:03:35,720 --> 00:03:43,520
like similar building blocks but created

00:03:37,850 --> 00:03:45,260
like vastly different systems and so if

00:03:43,520 --> 00:03:47,060
you look at these old computers and you

00:03:45,260 --> 00:03:50,780
compare them to computers of modern

00:03:47,060 --> 00:03:53,090
times it's clear to see that everything

00:03:50,780 --> 00:03:57,530
has gotten smaller everything has gotten

00:03:53,090 --> 00:03:58,850
more tightly integrated and the way that

00:03:57,530 --> 00:04:00,800
we think about fixing these old

00:03:58,850 --> 00:04:02,810
computers versus fixing old new

00:04:00,800 --> 00:04:04,870
computers is also drastically different

00:04:02,810 --> 00:04:08,450
on the left here you see an actual

00:04:04,870 --> 00:04:10,610
photograph of my board you can see that

00:04:08,450 --> 00:04:12,470
two chips are removed because I was

00:04:10,610 --> 00:04:14,840
debugging and trying to determine in

00:04:12,470 --> 00:04:18,049
faulty chips and so I was able to do

00:04:14,840 --> 00:04:22,480
that with relative ease and on the right

00:04:18,049 --> 00:04:25,850
you see a MacBook Pro 16 inch model and

00:04:22,480 --> 00:04:28,040
wow that just looks so crazy I don't

00:04:25,850 --> 00:04:30,500
know if I would ever try and fix a

00:04:28,040 --> 00:04:33,380
specific component on that thing and I

00:04:30,500 --> 00:04:35,720
don't think most people do certainly

00:04:33,380 --> 00:04:36,980
Apple you know has some sort of

00:04:35,720 --> 00:04:37,910
refurbishment center and I don't really

00:04:36,980 --> 00:04:39,800
know how that works

00:04:37,910 --> 00:04:42,199
but your average like mom-and-pop

00:04:39,800 --> 00:04:44,750
to repair shop probably would throw

00:04:42,199 --> 00:04:47,569
their hands up at this now there are

00:04:44,750 --> 00:04:49,610
some exceptions to this rule a fellow by

00:04:47,569 --> 00:04:52,550
the name of Louis Rossman based in

00:04:49,610 --> 00:04:56,720
Manhattan runs a computer repair shop

00:04:52,550 --> 00:04:58,400
and he is like a wizard he uses advanced

00:04:56,720 --> 00:05:01,759
micro soldering techniques you know

00:04:58,400 --> 00:05:04,069
under a microscope and he'll he'll debug

00:05:01,759 --> 00:05:05,690
and he'll replace like the missing

00:05:04,069 --> 00:05:06,349
components and repair traces and it's

00:05:05,690 --> 00:05:09,379
crazy

00:05:06,349 --> 00:05:14,180
but most people aren't gonna do that if

00:05:09,379 --> 00:05:16,190
you look at a Commodore 64 you you would

00:05:14,180 --> 00:05:17,419
notice that a lot of the chips

00:05:16,190 --> 00:05:21,979
and a lot of components on there

00:05:17,419 --> 00:05:25,750
bog-standard off the shelf and it was

00:05:21,979 --> 00:05:27,919
possible for people back back then to

00:05:25,750 --> 00:05:31,219
repair their own computers they could

00:05:27,919 --> 00:05:33,409
buy these replacement chips you know

00:05:31,219 --> 00:05:35,500
there's tons of 74,000 series logic

00:05:33,409 --> 00:05:39,020
which is like a de facto standard of the

00:05:35,500 --> 00:05:41,629
time and there's off-the-shelf DRAM

00:05:39,020 --> 00:05:44,000
chips so if your Ram chip fried you

00:05:41,629 --> 00:05:47,210
could you know look if you're lucky it

00:05:44,000 --> 00:05:48,590
was socketed so you just pluck it out if

00:05:47,210 --> 00:05:50,810
you're a little less lucky you'd

00:05:48,590 --> 00:05:52,789
probably have to wrestle with us on or

00:05:50,810 --> 00:05:56,659
sucker or if you were you know maybe a

00:05:52,789 --> 00:05:58,340
little bit more wealthy in today like

00:05:56,659 --> 00:05:59,690
you can use a dishonouring gun which

00:05:58,340 --> 00:06:03,710
kind of automates the process of

00:05:59,690 --> 00:06:07,370
removing chips from boards and it's

00:06:03,710 --> 00:06:10,279
really important to note that even back

00:06:07,370 --> 00:06:13,159
in the eighties commodore provided

00:06:10,279 --> 00:06:16,310
schematics to authorize like warranty

00:06:13,159 --> 00:06:18,379
centers and also just their customers if

00:06:16,310 --> 00:06:20,029
you opened up the programmers reference

00:06:18,379 --> 00:06:22,069
guy that i mentioned earlier you could

00:06:20,029 --> 00:06:24,770
fold out you would see a folded up

00:06:22,069 --> 00:06:26,529
schematic that you could unwrap and you

00:06:24,770 --> 00:06:28,699
would see how your computer was built

00:06:26,529 --> 00:06:30,159
imagine getting one of those now with

00:06:28,699 --> 00:06:33,139
your laptop

00:06:30,159 --> 00:06:34,539
you'd be overwhelmed and i was

00:06:33,139 --> 00:06:39,139
overwhelmed looking at this schematic

00:06:34,539 --> 00:06:44,419
when i got started it's just you know an

00:06:39,139 --> 00:06:46,460
insane amount of detail and you if you

00:06:44,419 --> 00:06:48,080
were you know trying to fix your whole

00:06:46,460 --> 00:06:49,669
computer back in the day if you were

00:06:48,080 --> 00:06:51,259
lucky one of those standard ships failed

00:06:49,669 --> 00:06:53,360
but if you were a little more unlucky

00:06:51,259 --> 00:06:56,030
maybe one of the

00:06:53,360 --> 00:06:58,009
custom parts failed and that was kind of

00:06:56,030 --> 00:06:59,659
like your sign that you need to send

00:06:58,009 --> 00:07:02,900
this off to an authorized warranty

00:06:59,659 --> 00:07:05,000
center and you know let them use their

00:07:02,900 --> 00:07:07,400
stock of like proprietary chips to

00:07:05,000 --> 00:07:10,360
repair your system today we don't really

00:07:07,400 --> 00:07:12,800
have the luxury of buying new Commodore

00:07:10,360 --> 00:07:16,759
6510 I think this chip number for the

00:07:12,800 --> 00:07:19,969
CPU you'd have to harvest them from some

00:07:16,759 --> 00:07:20,509
other broken machine if and hope that

00:07:19,969 --> 00:07:25,930
one that works

00:07:20,509 --> 00:07:29,360
ah so lucky for us in the year 2020

00:07:25,930 --> 00:07:32,659
information has been preserved and it's

00:07:29,360 --> 00:07:34,310
being shared online and I think anybody

00:07:32,659 --> 00:07:37,629
who ever tries to repair a Commodore 64

00:07:34,310 --> 00:07:40,189
will stumble upon this individuals

00:07:37,629 --> 00:07:43,310
website which is just a goldmine of

00:07:40,189 --> 00:07:46,009
information this uh ray Carlson I

00:07:43,310 --> 00:07:48,199
believe was a former Commodore repair

00:07:46,009 --> 00:07:49,219
tech and he has accumulated over the

00:07:48,199 --> 00:07:51,620
years

00:07:49,219 --> 00:07:54,469
tons of documentation tons of reference

00:07:51,620 --> 00:07:58,310
material and it's super critical and

00:07:54,469 --> 00:07:59,719
super useful for someone like me who is

00:07:58,310 --> 00:08:03,229
just getting started

00:07:59,719 --> 00:08:06,199
to be able to rely on the accumulated

00:08:03,229 --> 00:08:08,599
experience of someone like him and it's

00:08:06,199 --> 00:08:12,129
just amazing to me that he has

00:08:08,599 --> 00:08:18,889
documented this so thoroughly and

00:08:12,129 --> 00:08:24,050
sharing it for free so this is all well

00:08:18,889 --> 00:08:25,339
and good and if you are experienced you

00:08:24,050 --> 00:08:27,800
can sift through this information and

00:08:25,339 --> 00:08:29,180
you know what to look for but I wasn't

00:08:27,800 --> 00:08:31,699
really experienced when I started out

00:08:29,180 --> 00:08:33,019
when I got my Commodore 64 in a thrift

00:08:31,699 --> 00:08:37,099
shop it looked like this looked like a

00:08:33,019 --> 00:08:40,969
pretty good condition but when I turned

00:08:37,099 --> 00:08:46,130
it on I wa I was greeted with not a very

00:08:40,969 --> 00:08:47,600
friendly screen you might notice that

00:08:46,130 --> 00:08:51,199
this looks nothing like that friendly

00:08:47,600 --> 00:08:54,230
blue screen that we saw earlier I did

00:08:51,199 --> 00:08:56,180
not dare use video clip for this

00:08:54,230 --> 00:08:57,769
presentation but if this were a video

00:08:56,180 --> 00:08:59,570
you would see these colored dots

00:08:57,769 --> 00:09:04,569
wiggling and waving across the screen

00:08:59,570 --> 00:09:06,110
and the computer was totally unusable

00:09:04,569 --> 00:09:09,200
but that didn't

00:09:06,110 --> 00:09:11,810
me from trying to fix it I took apart my

00:09:09,200 --> 00:09:14,360
computer that's the thing that I kind of

00:09:11,810 --> 00:09:16,519
always do when I get old electronics I

00:09:14,360 --> 00:09:18,230
like to clean them up I like to make

00:09:16,519 --> 00:09:20,540
them presentable because I also want to

00:09:18,230 --> 00:09:22,339
use them they're not just sitting on a

00:09:20,540 --> 00:09:23,750
shelf I mean they they sometimes

00:09:22,339 --> 00:09:25,519
shouldn't sit on the shelf for a little

00:09:23,750 --> 00:09:27,829
while but every now and then I like to

00:09:25,519 --> 00:09:30,140
pick them up and use them so here's what

00:09:27,829 --> 00:09:33,890
my actual Commodore 64 looks like when

00:09:30,140 --> 00:09:36,500
you take it out of case for a beginner

00:09:33,890 --> 00:09:39,410
like this is scary what are all these

00:09:36,500 --> 00:09:44,000
chips on the board what do they mean how

00:09:39,410 --> 00:09:49,640
do they interact and I used raise

00:09:44,000 --> 00:09:51,670
documentation and I started you know

00:09:49,640 --> 00:09:54,649
trying to get a sense for like what's

00:09:51,670 --> 00:09:56,510
what's wrong with this like what part

00:09:54,649 --> 00:09:59,000
has failed what parts have failed

00:09:56,510 --> 00:10:03,260
I was completely you know fumbling

00:09:59,000 --> 00:10:07,579
around in the dark you can see here that

00:10:03,260 --> 00:10:09,649
ray lists all of areas chips and like

00:10:07,579 --> 00:10:12,649
their failure mode what does it look

00:10:09,649 --> 00:10:14,839
like when this chip fails and all I knew

00:10:12,649 --> 00:10:17,890
was that I had a black stream of dots on

00:10:14,839 --> 00:10:20,510
it he calls them blank screens and

00:10:17,890 --> 00:10:25,880
surprise surprise there are lots of

00:10:20,510 --> 00:10:27,949
blank screens I was overloaded with

00:10:25,880 --> 00:10:31,459
information I did not know what was

00:10:27,949 --> 00:10:34,279
important what was not important but I

00:10:31,459 --> 00:10:37,310
still tried I went through chip by chip

00:10:34,279 --> 00:10:38,750
and tried to replace some things one

00:10:37,310 --> 00:10:41,449
common thing that people recommend is

00:10:38,750 --> 00:10:42,949
piggybacking RAM basically just taking a

00:10:41,449 --> 00:10:44,810
replacement Ram chip and sticking it on

00:10:42,949 --> 00:10:46,610
top of one that you think might be

00:10:44,810 --> 00:10:50,480
working and I did that and of course

00:10:46,610 --> 00:10:52,250
that didn't work the sound chip is

00:10:50,480 --> 00:10:54,440
notorious for failing on the Commodore

00:10:52,250 --> 00:10:57,470
64 it's known as the SID you might have

00:10:54,440 --> 00:10:58,850
heard of it and sometimes when that ship

00:10:57,470 --> 00:11:00,620
fails it prevents the whole system from

00:10:58,850 --> 00:11:02,449
booting up so I plucked that out

00:11:00,620 --> 00:11:05,870
no luck there's another chip that fails

00:11:02,449 --> 00:11:07,790
a lot it's called the PLA the PLA is

00:11:05,870 --> 00:11:10,730
kind of like a switchboard operator for

00:11:07,790 --> 00:11:12,829
the system and in fact ship fails then

00:11:10,730 --> 00:11:15,430
nothing will work so I bought a

00:11:12,829 --> 00:11:19,030
replacement PLA from Germany by some guy

00:11:15,430 --> 00:11:23,290
and that didn't work either so

00:11:19,030 --> 00:11:25,870
I was just out of ideas I decided to set

00:11:23,290 --> 00:11:28,120
this project down and you know maybe

00:11:25,870 --> 00:11:29,550
come back to it when I could attack the

00:11:28,120 --> 00:11:32,440
problem with a little bit more rigor

00:11:29,550 --> 00:11:33,880
what I was doing was akin to you know if

00:11:32,440 --> 00:11:35,500
you had a programming project that

00:11:33,880 --> 00:11:37,480
you're working on and there was a bug I

00:11:35,500 --> 00:11:39,370
was basically just changing random

00:11:37,480 --> 00:11:41,050
things and hoping that something would

00:11:39,370 --> 00:11:43,720
work and just like that's no way to

00:11:41,050 --> 00:11:45,610
program that's not really a great way to

00:11:43,720 --> 00:11:53,470
diagnose a piece of hardware that's

00:11:45,610 --> 00:11:55,330
faulty so I spent some time working on

00:11:53,470 --> 00:11:56,200
other projects I kind of upgraded my

00:11:55,330 --> 00:11:57,850
tools a little bit

00:11:56,200 --> 00:12:00,250
I gained a better understanding for how

00:11:57,850 --> 00:12:04,210
they worked and a few years later I

00:12:00,250 --> 00:12:09,370
decided to come back to this project and

00:12:04,210 --> 00:12:11,290
I decided to take a more you know

00:12:09,370 --> 00:12:14,170
directed approach to figuring this out

00:12:11,290 --> 00:12:16,420
and with the first way that you the

00:12:14,170 --> 00:12:19,000
first thing that you need to do to fix

00:12:16,420 --> 00:12:21,340
something is understanding so let's take

00:12:19,000 --> 00:12:24,370
a look at the Commodore 64 circuit board

00:12:21,340 --> 00:12:26,320
and kind of break it down now there's

00:12:24,370 --> 00:12:28,330
lots going on you can ignore all those

00:12:26,320 --> 00:12:31,090
little like chocolate chip cookie type

00:12:28,330 --> 00:12:32,620
things those little capacitors and the

00:12:31,090 --> 00:12:36,130
other like impassive components on the

00:12:32,620 --> 00:12:38,980
board and we can focus on some of the

00:12:36,130 --> 00:12:40,780
more interesting chips on the top left

00:12:38,980 --> 00:12:44,260
we have i/o those are two identical

00:12:40,780 --> 00:12:47,380
chips and they are basically peripheral

00:12:44,260 --> 00:12:49,600
controllers next to them we have a

00:12:47,380 --> 00:12:52,260
series of roms they store things like

00:12:49,600 --> 00:12:54,430
the basic interpreter the kernel that

00:12:52,260 --> 00:12:56,490
basically provides low-level

00:12:54,430 --> 00:13:00,190
functionality to the rest of the system

00:12:56,490 --> 00:13:01,990
specific routines a ROM chip that

00:13:00,190 --> 00:13:03,910
basically just has the character data so

00:13:01,990 --> 00:13:08,130
like the actual text that you see when

00:13:03,910 --> 00:13:10,300
you type the CPU that's really important

00:13:08,130 --> 00:13:13,540
we also have the SID chip that we

00:13:10,300 --> 00:13:15,580
mentioned before below that the PLA the

00:13:13,540 --> 00:13:17,320
the RAM over to the bottom left of

00:13:15,580 --> 00:13:19,570
course we've got a cartridge connector

00:13:17,320 --> 00:13:21,340
and the power section of the board and

00:13:19,570 --> 00:13:23,170
there in the middle we have like the

00:13:21,340 --> 00:13:25,870
video section so you can kind of see

00:13:23,170 --> 00:13:27,850
that these different components of the

00:13:25,870 --> 00:13:32,110
board of the computer you know live in

00:13:27,850 --> 00:13:32,510
their own little regions and if we think

00:13:32,110 --> 00:13:35,090
about

00:13:32,510 --> 00:13:37,790
the physical layout of the board we can

00:13:35,090 --> 00:13:40,130
kind of map that to the schematic and so

00:13:37,790 --> 00:13:43,430
now we don't need to understand the

00:13:40,130 --> 00:13:48,200
whole schematic in order to you know

00:13:43,430 --> 00:13:50,000
attack this fix we can maybe take a more

00:13:48,200 --> 00:13:51,830
direct approach

00:13:50,000 --> 00:13:57,200
and we can focus on just the information

00:13:51,830 --> 00:14:00,830
that's important to us at that time now

00:13:57,200 --> 00:14:02,390
I don't have any specific like

00:14:00,830 --> 00:14:05,270
diagnostic equipment for the Commodore

00:14:02,390 --> 00:14:07,580
64 although it does exist so I didn't

00:14:05,270 --> 00:14:09,410
necessarily know that for instance all

00:14:07,580 --> 00:14:12,140
my RAM was working and then all my roms

00:14:09,410 --> 00:14:14,690
you know still we're returning valid

00:14:12,140 --> 00:14:18,310
data I didn't know that my PLA should be

00:14:14,690 --> 00:14:21,050
working because I had replaced it so I

00:14:18,310 --> 00:14:23,510
decided to first focus on the videos

00:14:21,050 --> 00:14:26,210
circuit we knew that we were seeing this

00:14:23,510 --> 00:14:29,330
weird like colored dots like what is

00:14:26,210 --> 00:14:31,940
that all about so let's zoom in on that

00:14:29,330 --> 00:14:33,170
this is the video region of the board

00:14:31,940 --> 00:14:36,170
normally this would have been covered

00:14:33,170 --> 00:14:37,670
with like an RF shield but none of us

00:14:36,170 --> 00:14:39,050
have x-ray vision and I don't have an

00:14:37,670 --> 00:14:42,440
x-ray display and I don't think you do

00:14:39,050 --> 00:14:46,040
either so like we have to take that

00:14:42,440 --> 00:14:47,180
thing off and we can see that on the

00:14:46,040 --> 00:14:48,410
circuit board now you can't see them in

00:14:47,180 --> 00:14:50,300
this picture but these chips are all

00:14:48,410 --> 00:14:52,070
labeled and so that's really useful for

00:14:50,300 --> 00:14:56,000
finding out where they exist on the

00:14:52,070 --> 00:14:58,790
circuit so u-19 this is I believe a Vic

00:14:56,000 --> 00:15:01,010
tube chip and so its role is to generate

00:14:58,790 --> 00:15:05,710
video signal but it needs some help from

00:15:01,010 --> 00:15:08,270
this little baby chip you 31 u 31 is a

00:15:05,710 --> 00:15:11,480
technically a dual voltage controlled

00:15:08,270 --> 00:15:13,400
oscillator its job is to take a clock

00:15:11,480 --> 00:15:15,050
signal of a certain frequency and a

00:15:13,400 --> 00:15:17,210
clock signal is kind of just like a

00:15:15,050 --> 00:15:19,100
beating drum I am NOT beating with any

00:15:17,210 --> 00:15:23,180
particular rhythm but use your

00:15:19,100 --> 00:15:27,140
imagination and so you 31 wants to take

00:15:23,180 --> 00:15:30,940
this particular clock signal and slow it

00:15:27,140 --> 00:15:37,540
down and output that slowdown signal on

00:15:30,940 --> 00:15:41,930
its pin ten six this clock signal is

00:15:37,540 --> 00:15:43,610
denoted on the schematic and all the

00:15:41,930 --> 00:15:44,990
other dot all the other clock signals

00:15:43,610 --> 00:15:46,390
that are relevant to this area of the

00:15:44,990 --> 00:15:50,500
circuit are also noted

00:15:46,390 --> 00:15:52,260
and we can use this information to our

00:15:50,500 --> 00:15:54,600
advantage

00:15:52,260 --> 00:15:56,770
thankfully I know I'm and I'm in a

00:15:54,600 --> 00:15:59,050
privileged position to be able to afford

00:15:56,770 --> 00:16:01,420
an oscilloscope which is a relatively

00:15:59,050 --> 00:16:02,710
expensive tool but these days you can

00:16:01,420 --> 00:16:06,040
actually get them for a whole lot

00:16:02,710 --> 00:16:08,800
cheaper and that's a great thing

00:16:06,040 --> 00:16:11,200
so I took my oscilloscope and I started

00:16:08,800 --> 00:16:13,450
probing around I measured the master

00:16:11,200 --> 00:16:16,600
clock signal when that looked fine and I

00:16:13,450 --> 00:16:21,640
then measured these pin six output on

00:16:16,600 --> 00:16:23,980
this unite on this you 3110 six supposed

00:16:21,640 --> 00:16:29,140
to be eight point one a twenty two

00:16:23,980 --> 00:16:32,260
megahertz but it's not not on my system

00:16:29,140 --> 00:16:35,500
I had this really messy signal this is

00:16:32,260 --> 00:16:38,080
not what you want to see and I knew this

00:16:35,500 --> 00:16:40,600
chip must be bad so I bought a

00:16:38,080 --> 00:16:43,360
replacement very fortunate that these

00:16:40,600 --> 00:16:47,170
things are still for sale I didn't have

00:16:43,360 --> 00:16:50,800
to get one from another system and so I

00:16:47,170 --> 00:16:54,160
installed it still a black screen but

00:16:50,800 --> 00:16:56,500
not a black screen with crazy dots just

00:16:54,160 --> 00:16:59,560
a solid black screen and so that got me

00:16:56,500 --> 00:17:03,340
thinking okay well the video seems to be

00:16:59,560 --> 00:17:07,690
good let's see if the rest of the system

00:17:03,340 --> 00:17:10,300
is operating now how can we do that well

00:17:07,690 --> 00:17:12,699
there are various tools that you can use

00:17:10,300 --> 00:17:14,890
like you could use a multimeter and try

00:17:12,699 --> 00:17:16,240
and see like okay what is the what are

00:17:14,890 --> 00:17:18,339
the various logic levels of these

00:17:16,240 --> 00:17:19,180
particular pins but that's not really a

00:17:18,339 --> 00:17:21,670
right tool for the job

00:17:19,180 --> 00:17:23,709
I use this thing called a logic probe

00:17:21,670 --> 00:17:27,579
I'm gonna kind of back and forth on my

00:17:23,709 --> 00:17:31,960
slides here but just bear with me this

00:17:27,579 --> 00:17:34,210
logic logic probe allows you to really

00:17:31,960 --> 00:17:37,030
easily determine if a given signal is a

00:17:34,210 --> 00:17:38,710
logical high or a logical low and if you

00:17:37,030 --> 00:17:40,680
put it on something like a RAM chip on

00:17:38,710 --> 00:17:43,990
like the address lines you could see

00:17:40,680 --> 00:17:46,240
that if you're getting alternating

00:17:43,990 --> 00:17:47,500
between low and high really fast this

00:17:46,240 --> 00:17:49,780
tool will make like a little buzzy sound

00:17:47,500 --> 00:17:53,470
if it's low or high and it also gives

00:17:49,780 --> 00:17:55,870
you these little indicators and so if

00:17:53,470 --> 00:17:59,230
you see activity like on the CPU bus or

00:17:55,870 --> 00:18:00,280
on like the RAM you can kind of be

00:17:59,230 --> 00:18:04,210
certain that

00:18:00,280 --> 00:18:07,570
the CPU is doing something and I wasn't

00:18:04,210 --> 00:18:10,770
seeing that behavior what I was seeing

00:18:07,570 --> 00:18:16,780
though is that this signal called reset

00:18:10,770 --> 00:18:17,680
was being held low on my system now what

00:18:16,780 --> 00:18:21,580
does that mean

00:18:17,680 --> 00:18:24,130
what is reset well if you consider a

00:18:21,580 --> 00:18:28,270
computer that's turned off and then you

00:18:24,130 --> 00:18:30,940
turn it on well how do how do you

00:18:28,270 --> 00:18:33,490
guarantee that the various components in

00:18:30,940 --> 00:18:35,170
the computer are going to be you know

00:18:33,490 --> 00:18:37,270
orchestrated properly and how can it the

00:18:35,170 --> 00:18:39,220
system initialize well you need to have

00:18:37,270 --> 00:18:43,330
a ground state you need to have a known

00:18:39,220 --> 00:18:47,520
good state to progress from and so the

00:18:43,330 --> 00:18:50,350
reset signal is the the tool for the job

00:18:47,520 --> 00:18:53,430
if you can generate a reset signal when

00:18:50,350 --> 00:18:56,230
the computer turns on you say ok well

00:18:53,430 --> 00:18:58,810
for the first you know half over one

00:18:56,230 --> 00:19:00,460
second after turning on the machine send

00:18:58,810 --> 00:19:01,930
a reset signal out and all the other

00:19:00,460 --> 00:19:03,880
chips will get this reset signal and

00:19:01,930 --> 00:19:06,910
they'll know to to do whatever they need

00:19:03,880 --> 00:19:10,150
to do internally and then we can turn

00:19:06,910 --> 00:19:12,100
off that reset signal and let the magic

00:19:10,150 --> 00:19:16,330
happen it kick-starts off all the rest

00:19:12,100 --> 00:19:18,820
of the the booting process and on my

00:19:16,330 --> 00:19:22,060
system this was not happening every

00:19:18,820 --> 00:19:24,010
single chip had the reset signal held

00:19:22,060 --> 00:19:27,070
low so they were constantly in this

00:19:24,010 --> 00:19:29,860
state of trying to reset and that's no

00:19:27,070 --> 00:19:32,370
bueno so if we take a closer look at the

00:19:29,860 --> 00:19:35,500
reset signal up the reset schematic

00:19:32,370 --> 00:19:37,930
section of the schematic we can see u-20

00:19:35,500 --> 00:19:40,240
here which is this chip on the left and

00:19:37,930 --> 00:19:42,550
we can see you ate here which is this

00:19:40,240 --> 00:19:45,600
chip on the right five five six

00:19:42,550 --> 00:19:49,450
indicates that this is a five five six

00:19:45,600 --> 00:19:51,520
timer chip and don't really have time to

00:19:49,450 --> 00:19:53,680
get too much into those but these chips

00:19:51,520 --> 00:19:55,960
can be used for generating all sorts of

00:19:53,680 --> 00:19:57,610
cool signals in this case the

00:19:55,960 --> 00:20:00,520
configuration of the five five six timer

00:19:57,610 --> 00:20:03,850
is set up in such a way that after a

00:20:00,520 --> 00:20:07,870
power is applied it will generate a

00:20:03,850 --> 00:20:11,020
quick blip for the reset to occur and it

00:20:07,870 --> 00:20:13,620
passes that reset signal over to you

00:20:11,020 --> 00:20:16,200
eight which is an inverter chip

00:20:13,620 --> 00:20:17,669
kind of takes like a thumbs up and turns

00:20:16,200 --> 00:20:21,659
into a thumbs down or a logical high to

00:20:17,669 --> 00:20:24,179
a logical low and the specifics of why

00:20:21,659 --> 00:20:27,419
that works the way it does again out of

00:20:24,179 --> 00:20:29,370
scope but basically this system was not

00:20:27,419 --> 00:20:32,220
working the way it should this reset

00:20:29,370 --> 00:20:36,720
signal was never being turned off and so

00:20:32,220 --> 00:20:39,600
I knew by my using my logic probe that

00:20:36,720 --> 00:20:41,880
the five five six end of the system was

00:20:39,600 --> 00:20:43,890
working I could see that for a little

00:20:41,880 --> 00:20:46,020
while the reset signal was being applied

00:20:43,890 --> 00:20:49,080
properly and then being turned off but

00:20:46,020 --> 00:20:51,270
if you follow the output the five five

00:20:49,080 --> 00:20:53,610
six over to the input of the you ate

00:20:51,270 --> 00:20:55,950
with a logic probe you can see the

00:20:53,610 --> 00:20:58,200
signal and then when you look at the

00:20:55,950 --> 00:21:00,360
output you can see the signal and the

00:20:58,200 --> 00:21:03,179
output on pin eight here was just

00:21:00,360 --> 00:21:04,890
constantly low and so that was my say

00:21:03,179 --> 00:21:07,289
that was my sign that I need to replace

00:21:04,890 --> 00:21:08,880
this chip so I replaced this chip and

00:21:07,289 --> 00:21:11,820
again I'm not going to show the video

00:21:08,880 --> 00:21:14,190
but here you can see me have right after

00:21:11,820 --> 00:21:16,919
the computer is turned on we have a

00:21:14,190 --> 00:21:18,149
logical low being output so all the

00:21:16,919 --> 00:21:21,059
chips in my computer

00:21:18,149 --> 00:21:25,770
get that little signal and a brief

00:21:21,059 --> 00:21:26,760
second later it goes too high and that's

00:21:25,770 --> 00:21:32,070
kind of reversed from what you might

00:21:26,760 --> 00:21:34,470
think but if you if you just give me a

00:21:32,070 --> 00:21:37,830
little faith you can know that this

00:21:34,470 --> 00:21:41,429
fixed the system you can see my

00:21:37,830 --> 00:21:43,140
extremely messy setup at home I have a

00:21:41,429 --> 00:21:47,490
lot of video game consoles I really like

00:21:43,140 --> 00:21:50,309
games play them when I can and I was so

00:21:47,490 --> 00:21:52,080
pleased to hear this to see this I did

00:21:50,309 --> 00:21:56,580
not hear it because unfortunately my SID

00:21:52,080 --> 00:21:59,760
chip is still dead but everything's

00:21:56,580 --> 00:22:01,320
working I wanted to talk a little bit

00:21:59,760 --> 00:22:03,240
more about preservation and nervous

00:22:01,320 --> 00:22:04,529
engineering because that's really

00:22:03,240 --> 00:22:06,029
important to keeping these old systems

00:22:04,529 --> 00:22:07,440
alive and I know I'm running a little

00:22:06,029 --> 00:22:09,330
over time so I'm just gonna whiz through

00:22:07,440 --> 00:22:10,529
this there's folks doing really amazing

00:22:09,330 --> 00:22:13,289
stuff

00:22:10,529 --> 00:22:15,480
dissolving chips in acid and imaging

00:22:13,289 --> 00:22:17,520
them and learning how they work at a

00:22:15,480 --> 00:22:19,320
super low level and we're using this

00:22:17,520 --> 00:22:21,179
knowledge to create modern replacements

00:22:19,320 --> 00:22:23,159
of those custom chips that I said had no

00:22:21,179 --> 00:22:25,300
replacements well now we have modern

00:22:23,159 --> 00:22:28,700
replacements and that's fantastic

00:22:25,300 --> 00:22:30,230
fortunately for the world at large you

00:22:28,700 --> 00:22:32,180
don't even need to have this original

00:22:30,230 --> 00:22:33,850
hardware anymore the folks at the

00:22:32,180 --> 00:22:36,350
Internet Archive are doing great job

00:22:33,850 --> 00:22:37,520
archiving the software and providing

00:22:36,350 --> 00:22:39,620
emulators that you can just run in your

00:22:37,520 --> 00:22:42,110
browser a project that I'm really

00:22:39,620 --> 00:22:48,920
fascinated by is the mr. fpga project

00:22:42,110 --> 00:22:52,160
which uses really cool technology to

00:22:48,920 --> 00:22:55,090
re-implement various computers and game

00:22:52,160 --> 00:22:59,090
systems in hardware which is really cool

00:22:55,090 --> 00:23:01,220
and that's it thank you so much i just

00:22:59,090 --> 00:23:03,560
want to you know take a moment to say

00:23:01,220 --> 00:23:05,660
thank you to all the essential workers

00:23:03,560 --> 00:23:07,610
they've always been essential

00:23:05,660 --> 00:23:10,070
it's just they haven't been properly

00:23:07,610 --> 00:23:12,260
recognized for that you can find me on

00:23:10,070 --> 00:23:14,950
twitter and that Claussen thank you so

00:23:12,260 --> 00:23:14,950

YouTube URL: https://www.youtube.com/watch?v=hpGoAbvsMyY


