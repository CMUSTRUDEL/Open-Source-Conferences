Title: !!Con 2021 - Ride on Model Railway Signalling using Kubernetes! by Jon Kingsley
Publication date: 2021-07-06
Playlist: !!Con 2021
Description: 
	Ride on Model Railway Signalling using Kubernetes! by Jon Kingsley

Have you ever wondered “what would happen if we used container architecture to avoid crashing ride-on model railways”? Wonder no longer! In this talk, we will cover the basics of running a small ride-on railway in your back yard, using Kubernetes and Raspberry Pis to deploy your signalling, control, and safety infrastructure, and learn how to apply concepts from full-scale railways to your own small-scale endeavours! Watching this talk entitles you to one free ticket to ride the Kubernetes line.

Jonathan is a software engineer at Orbit by day and live production tech, pyrotechnician, and musical theatre peformer by night. His interests include hardware reverse engineering and information security. He has once set a swimming pool on fire.
Captions: 
	00:00:13,679 --> 00:00:17,199
hello

00:00:14,400 --> 00:00:18,320
hello everybody it is absolutely

00:00:17,199 --> 00:00:21,359
marvelous to

00:00:18,320 --> 00:00:24,080
be presenting uh here the uh

00:00:21,359 --> 00:00:24,800
joys of ride on model railway signaling

00:00:24,080 --> 00:00:27,279
uh using

00:00:24,800 --> 00:00:28,400
kubernetes i would under any other

00:00:27,279 --> 00:00:31,599
circumstance have

00:00:28,400 --> 00:00:32,160
a live demo in this particular side deck

00:00:31,599 --> 00:00:34,960
for you

00:00:32,160 --> 00:00:36,719
but unfortunately i currently have a

00:00:34,960 --> 00:00:38,480
very blown up boiler

00:00:36,719 --> 00:00:40,480
sitting in the background behind me and

00:00:38,480 --> 00:00:42,719
a not insignificant amount of

00:00:40,480 --> 00:00:43,760
uh copper piping which i am currently in

00:00:42,719 --> 00:00:46,960
the process

00:00:43,760 --> 00:00:47,520
of uh reattaching to said boiler um but

00:00:46,960 --> 00:00:50,559
i do

00:00:47,520 --> 00:00:52,160
have a whole ton of very fun things to

00:00:50,559 --> 00:00:55,520
talk to you about when it comes to this

00:00:52,160 --> 00:00:58,559
so uh let's kick this off

00:00:55,520 --> 00:01:02,239
very very quickly who am i well i am

00:00:58,559 --> 00:01:04,559
john i do various snow sportsy things

00:01:02,239 --> 00:01:06,880
um i also do various train related

00:01:04,559 --> 00:01:07,600
things um as of the last uh half year or

00:01:06,880 --> 00:01:10,080
so

00:01:07,600 --> 00:01:11,280
and i am well known for basically

00:01:10,080 --> 00:01:13,840
breaking things

00:01:11,280 --> 00:01:15,520
uh in my off time i am a professional

00:01:13,840 --> 00:01:18,000
blow things up over

00:01:15,520 --> 00:01:20,080
which i think kind of comes along with

00:01:18,000 --> 00:01:23,119
the with the whole

00:01:20,080 --> 00:01:24,560
the whole corner of for example uh tiny

00:01:23,119 --> 00:01:27,280
steam locomotives

00:01:24,560 --> 00:01:27,840
um and i am a semi-professional uh bunny

00:01:27,280 --> 00:01:29,680
dad

00:01:27,840 --> 00:01:30,960
um i have to get him in here otherwise

00:01:29,680 --> 00:01:34,000
he will never let me

00:01:30,960 --> 00:01:36,320
live this down um so uh

00:01:34,000 --> 00:01:37,840
model trade signaling um so this is kind

00:01:36,320 --> 00:01:40,159
of an interesting topic

00:01:37,840 --> 00:01:41,600
because everyone when you kind of say

00:01:40,159 --> 00:01:43,280
model trains and

00:01:41,600 --> 00:01:45,759
you kind of think about that you usually

00:01:43,280 --> 00:01:48,079
think of like for example like engage or

00:01:45,759 --> 00:01:49,520
like double o gauge that quarter of

00:01:48,079 --> 00:01:51,280
things um

00:01:49,520 --> 00:01:53,040
that is not quite what we're talking

00:01:51,280 --> 00:01:55,680
about today we are talking about

00:01:53,040 --> 00:01:56,560
something a little bigger as the ride on

00:01:55,680 --> 00:02:00,079
section of

00:01:56,560 --> 00:02:01,520
the title may imply we are talking

00:02:00,079 --> 00:02:04,960
specifically about

00:02:01,520 --> 00:02:08,239
uh trains in the five and a quarter or

00:02:04,960 --> 00:02:11,200
seven and a half inch gauge variety

00:02:08,239 --> 00:02:12,319
um and these are of the the size that

00:02:11,200 --> 00:02:15,680
you can kind of

00:02:12,319 --> 00:02:18,959
fairly feasibly um build

00:02:15,680 --> 00:02:20,080
uh build either in a in a a small garden

00:02:18,959 --> 00:02:22,640
or anywhere else

00:02:20,080 --> 00:02:23,760
um a lot of conferences do tend to have

00:02:22,640 --> 00:02:26,879
tracks for these

00:02:23,760 --> 00:02:28,800
yes that's my new favorite pun um

00:02:26,879 --> 00:02:30,400
keeping an eye on the uh on the chat

00:02:28,800 --> 00:02:33,440
there but these are

00:02:30,400 --> 00:02:36,400
um some very interesting

00:02:33,440 --> 00:02:37,120
uh little bits of kit because they are

00:02:36,400 --> 00:02:39,760
probably

00:02:37,120 --> 00:02:40,720
the one of the most accessible sizes

00:02:39,760 --> 00:02:43,120
that you can get

00:02:40,720 --> 00:02:44,800
for kind of model model locomotives when

00:02:43,120 --> 00:02:45,519
you get outside of the kind of really

00:02:44,800 --> 00:02:48,560
model

00:02:45,519 --> 00:02:49,120
uh section and this for example is but

00:02:48,560 --> 00:02:53,040
one of

00:02:49,120 --> 00:02:56,000
my uh local um local model railway

00:02:53,040 --> 00:02:56,560
and they for example have a whole bunch

00:02:56,000 --> 00:02:59,599
of

00:02:56,560 --> 00:02:59,920
various um tracks that run around uh

00:02:59,599 --> 00:03:01,680
this

00:02:59,920 --> 00:03:03,760
this little little garden center that

00:03:01,680 --> 00:03:07,599
they have and they have at least

00:03:03,760 --> 00:03:09,040
two or three uh different um

00:03:07,599 --> 00:03:10,800
at least two or three different

00:03:09,040 --> 00:03:14,080
different sections of which the

00:03:10,800 --> 00:03:16,000
point is that uh

00:03:14,080 --> 00:03:17,120
they have a couple of different options

00:03:16,000 --> 00:03:19,920
in terms of

00:03:17,120 --> 00:03:21,760
how they route trains and there's a ton

00:03:19,920 --> 00:03:22,480
of big complicated things that you can

00:03:21,760 --> 00:03:24,480
do with

00:03:22,480 --> 00:03:26,799
train signaling but one of the main

00:03:24,480 --> 00:03:30,319
concepts that you get is this idea

00:03:26,799 --> 00:03:31,200
of blocks so this is applicable

00:03:30,319 --> 00:03:34,159
basically to

00:03:31,200 --> 00:03:34,959
all general methods of of doing train

00:03:34,159 --> 00:03:36,640
signaling

00:03:34,959 --> 00:03:38,480
um the in this instance we're

00:03:36,640 --> 00:03:41,040
specifically applying it to models

00:03:38,480 --> 00:03:42,720
so the um the way this operates

00:03:41,040 --> 00:03:46,239
effectively is that you separate

00:03:42,720 --> 00:03:49,920
each section of your track into a block

00:03:46,239 --> 00:03:50,640
and a block can have a single section of

00:03:49,920 --> 00:03:53,760
a train

00:03:50,640 --> 00:03:55,200
within it um the idea being that when a

00:03:53,760 --> 00:03:57,680
train goes into a

00:03:55,200 --> 00:03:58,640
a block that section of track is then

00:03:57,680 --> 00:04:01,840
effectively

00:03:58,640 --> 00:04:04,080
locked there is no no other trains

00:04:01,840 --> 00:04:05,760
should be able to go into that section

00:04:04,080 --> 00:04:08,239
of track until

00:04:05,760 --> 00:04:10,080
the until the train that has entered has

00:04:08,239 --> 00:04:11,599
subsequently left again

00:04:10,080 --> 00:04:13,120
and the whole point of this is

00:04:11,599 --> 00:04:15,680
effectively to

00:04:13,120 --> 00:04:17,040
very simply avoid having trains decide

00:04:15,680 --> 00:04:19,519
to

00:04:17,040 --> 00:04:21,280
magically disappear into one another as

00:04:19,519 --> 00:04:22,720
they occasionally tend to do if you

00:04:21,280 --> 00:04:26,000
don't control them

00:04:22,720 --> 00:04:27,199
and one of the main ways that train

00:04:26,000 --> 00:04:30,160
signaling operates

00:04:27,199 --> 00:04:31,840
is using these little devices called

00:04:30,160 --> 00:04:34,800
axle counters

00:04:31,840 --> 00:04:35,680
and like the name implies they count the

00:04:34,800 --> 00:04:38,560
number of

00:04:35,680 --> 00:04:39,759
members of acdc that go through them as

00:04:38,560 --> 00:04:43,600
they pass by

00:04:39,759 --> 00:04:46,639
um the way that that operates

00:04:43,600 --> 00:04:49,759
is that you have one of these at the

00:04:46,639 --> 00:04:53,120
entrance and exit to a section of track

00:04:49,759 --> 00:04:53,840
and for every um wheel and train axle

00:04:53,120 --> 00:04:56,880
that basically

00:04:53,840 --> 00:04:58,400
goes through it it counts it and then in

00:04:56,880 --> 00:05:01,360
order to figure out whether the

00:04:58,400 --> 00:05:02,639
line is clear it will compare the number

00:05:01,360 --> 00:05:05,840
of axles going

00:05:02,639 --> 00:05:08,000
in um and the time to determine

00:05:05,840 --> 00:05:08,880
the speed and if the train has cleared

00:05:08,000 --> 00:05:12,000
the area

00:05:08,880 --> 00:05:14,320
um it's a pretty simple concept um it's

00:05:12,000 --> 00:05:17,440
used in a combination with your like

00:05:14,320 --> 00:05:19,520
signal and control stuff um and which uh

00:05:17,440 --> 00:05:24,080
by the way i'm going to be open sourcing

00:05:19,520 --> 00:05:27,199
a very fun uh signaling control um

00:05:24,080 --> 00:05:29,039
vape on signal and control um system in

00:05:27,199 --> 00:05:30,400
react a little bit a little bit later

00:05:29,039 --> 00:05:31,120
down the line once i have that fully

00:05:30,400 --> 00:05:34,720
together

00:05:31,120 --> 00:05:36,800
um yes it wasn't

00:05:34,720 --> 00:05:38,320
what's in fact guns and roses not ac dc

00:05:36,800 --> 00:05:40,720
completely slipped my mind there

00:05:38,320 --> 00:05:42,000
um but yeah this is also coupled into

00:05:40,720 --> 00:05:43,840
safety interlocks

00:05:42,000 --> 00:05:45,600
um if you happen to have gates to cross

00:05:43,840 --> 00:05:46,960
the track for example that can be used

00:05:45,600 --> 00:05:49,280
to notify the driver

00:05:46,960 --> 00:05:51,199
um that's especially useful on the model

00:05:49,280 --> 00:05:52,720
scale because you are invariably going

00:05:51,199 --> 00:05:53,360
to come across a situation where

00:05:52,720 --> 00:05:56,720
somebody

00:05:53,360 --> 00:05:58,880
is going to need to go across your very

00:05:56,720 --> 00:06:01,039
small track that you have definitely not

00:05:58,880 --> 00:06:02,479
laid directly across your front door

00:06:01,039 --> 00:06:05,280
because that was the only

00:06:02,479 --> 00:06:06,240
like solid piece of concrete that you

00:06:05,280 --> 00:06:07,840
could find

00:06:06,240 --> 00:06:09,600
um and in that instance you probably

00:06:07,840 --> 00:06:12,639
want to make sure that you don't uh

00:06:09,600 --> 00:06:15,840
run them over at the horrific speed of

00:06:12,639 --> 00:06:17,120
uh four miles an hour so um

00:06:15,840 --> 00:06:19,600
how would you roll the hardware for this

00:06:17,120 --> 00:06:20,880
setup well uh building your own axle

00:06:19,600 --> 00:06:22,720
counters uh isn't

00:06:20,880 --> 00:06:24,240
honestly isn't too hard um in my

00:06:22,720 --> 00:06:26,400
instance i um

00:06:24,240 --> 00:06:27,360
have been working on some uh 3d print

00:06:26,400 --> 00:06:29,919
files for them

00:06:27,360 --> 00:06:30,560
uh run them up in resin uh mainly

00:06:29,919 --> 00:06:33,199
because

00:06:30,560 --> 00:06:34,960
you don't want to uh do that type of

00:06:33,199 --> 00:06:36,720
stuff in anything that isn't uv

00:06:34,960 --> 00:06:38,160
um resistant because they're gonna be

00:06:36,720 --> 00:06:40,240
outside the entire time

00:06:38,160 --> 00:06:42,000
um and you have a main kind of section

00:06:40,240 --> 00:06:42,880
of stuff right you have your on train

00:06:42,000 --> 00:06:44,960
hardware

00:06:42,880 --> 00:06:46,160
uh in order to handle your kind of

00:06:44,960 --> 00:06:48,479
general operation

00:06:46,160 --> 00:06:49,440
you then have individual nodes that are

00:06:48,479 --> 00:06:50,720
split out

00:06:49,440 --> 00:06:52,479
across the network so you've got your

00:06:50,720 --> 00:06:54,639
signals you've got your

00:06:52,479 --> 00:06:55,680
points control if you're doing automatic

00:06:54,639 --> 00:06:58,479
point switching

00:06:55,680 --> 00:06:58,880
you have your safety interlocks for

00:06:58,479 --> 00:07:01,440
things

00:06:58,880 --> 00:07:03,520
like your gates and sections uh where

00:07:01,440 --> 00:07:05,440
you're doing axle counting for example

00:07:03,520 --> 00:07:06,720
um and we have a ton of these different

00:07:05,440 --> 00:07:07,440
nodes on this network and they're all

00:07:06,720 --> 00:07:10,720
doing

00:07:07,440 --> 00:07:12,800
various discrete tasks um so i

00:07:10,720 --> 00:07:13,919
looking at this from a software

00:07:12,800 --> 00:07:16,960
engineered um

00:07:13,919 --> 00:07:17,360
perspective of things um took a look at

00:07:16,960 --> 00:07:20,560
this

00:07:17,360 --> 00:07:22,960
um and immediately a thought

00:07:20,560 --> 00:07:23,919
let's put all of this on raspberry pi's

00:07:22,960 --> 00:07:27,440
uh because

00:07:23,919 --> 00:07:29,440
obviously um but secondly um the

00:07:27,440 --> 00:07:31,039
second solution here well the biggest

00:07:29,440 --> 00:07:32,160
question here is you have a whole ton of

00:07:31,039 --> 00:07:35,599
stuff across a

00:07:32,160 --> 00:07:37,120
very large uh section of uh land and

00:07:35,599 --> 00:07:38,800
you're trying to get power to all of it

00:07:37,120 --> 00:07:41,680
and the last thing that you want to do

00:07:38,800 --> 00:07:43,120
is to um just kind of say screw it and

00:07:41,680 --> 00:07:45,680
electrify the rails

00:07:43,120 --> 00:07:46,720
um because that invariably tends to go

00:07:45,680 --> 00:07:49,680
very very badly

00:07:46,720 --> 00:07:51,120
um so the solution to this is uh power

00:07:49,680 --> 00:07:55,360
over ethernet

00:07:51,120 --> 00:07:58,479
so you can in fact um fairly easily

00:07:55,360 --> 00:08:00,879
if you go for some of the newer af specs

00:07:58,479 --> 00:08:01,840
get poe to run over very very long

00:08:00,879 --> 00:08:05,360
distances

00:08:01,840 --> 00:08:07,919
um so once you have uh

00:08:05,360 --> 00:08:09,520
gone full steam ahead and networked all

00:08:07,919 --> 00:08:11,840
of your nodes together

00:08:09,520 --> 00:08:12,800
um you then have like i say the problem

00:08:11,840 --> 00:08:16,000
of how

00:08:12,800 --> 00:08:16,960
to deploy all of these uh individual

00:08:16,000 --> 00:08:18,879
pieces together

00:08:16,960 --> 00:08:20,720
you have your on train hardware which is

00:08:18,879 --> 00:08:22,560
the bit that actually shows uh

00:08:20,720 --> 00:08:24,000
shows the driver how to where whether

00:08:22,560 --> 00:08:27,280
stuff is

00:08:24,000 --> 00:08:29,440
in fact driving correctly um you have

00:08:27,280 --> 00:08:31,520
your hardware on the signals themselves

00:08:29,440 --> 00:08:33,360
you have your axle counting

00:08:31,520 --> 00:08:34,560
um and you have your points in the

00:08:33,360 --> 00:08:37,599
specific instance

00:08:34,560 --> 00:08:40,800
um and each one of these i am deploying

00:08:37,599 --> 00:08:42,320
as its own discrete microservice

00:08:40,800 --> 00:08:44,560
because the great thing about

00:08:42,320 --> 00:08:48,080
microservices among other things

00:08:44,560 --> 00:08:49,760
is that you can deploy them on hardware

00:08:48,080 --> 00:08:51,519
as well as software

00:08:49,760 --> 00:08:52,800
i actually kind of got the idea for this

00:08:51,519 --> 00:08:55,519
from uh there's a

00:08:52,800 --> 00:08:56,880
really good um there's a really good um

00:08:55,519 --> 00:08:57,760
article that i would highly suggest you

00:08:56,880 --> 00:09:01,120
go and look up

00:08:57,760 --> 00:09:01,920
um that is talking about um i think it's

00:09:01,120 --> 00:09:04,480
inner now

00:09:01,920 --> 00:09:06,320
one very large uh us um fast food

00:09:04,480 --> 00:09:09,519
company that was actually using

00:09:06,320 --> 00:09:11,440
uh kubernetes to do um deployments to

00:09:09,519 --> 00:09:13,600
hardware in all of their kitchens

00:09:11,440 --> 00:09:16,080
um and or and basically push software

00:09:13,600 --> 00:09:19,279
updates uh to all of it um almost on

00:09:16,080 --> 00:09:21,839
like four times daily basis um so yeah

00:09:19,279 --> 00:09:23,200
the solution is to run uh what's

00:09:21,839 --> 00:09:26,240
specifically what's called

00:09:23,200 --> 00:09:26,720
micro kubernetes um so this is a build

00:09:26,240 --> 00:09:29,200
of it

00:09:26,720 --> 00:09:30,320
specifically designed to run on

00:09:29,200 --> 00:09:33,760
raspberry pi's

00:09:30,320 --> 00:09:36,640
um and uh effectively allows you

00:09:33,760 --> 00:09:37,600
to uh effectively allows you to uh go

00:09:36,640 --> 00:09:39,360
ahead and

00:09:37,600 --> 00:09:41,279
um effectively route everything

00:09:39,360 --> 00:09:42,800
throughout um the other the flip side of

00:09:41,279 --> 00:09:45,680
it as well is that we then have to have

00:09:42,800 --> 00:09:46,080
some of the ui components which is done

00:09:45,680 --> 00:09:49,120
through

00:09:46,080 --> 00:09:50,000
a combination of react and the worst

00:09:49,120 --> 00:09:53,680
javascript that

00:09:50,000 --> 00:09:55,519
god hath brought upon the earth um

00:09:53,680 --> 00:09:56,959
but yeah but there's a there's a reason

00:09:55,519 --> 00:09:59,440
that i'm open sourcing that later it

00:09:56,959 --> 00:10:00,800
currently looks like somebody has uh

00:09:59,440 --> 00:10:02,480
looks like someone's rather trained

00:10:00,800 --> 00:10:05,680
through it actually um

00:10:02,480 --> 00:10:06,480
unsurprisingly uh and finally at the end

00:10:05,680 --> 00:10:09,600
of all of this

00:10:06,480 --> 00:10:10,800
um in the joyous uh the joyous fun that

00:10:09,600 --> 00:10:13,440
we get off the back of it

00:10:10,800 --> 00:10:14,160
is this giant um horrific hellscape of a

00:10:13,440 --> 00:10:16,800
network

00:10:14,160 --> 00:10:19,519
where we have effectively um a

00:10:16,800 --> 00:10:23,040
console-backed service discovery system

00:10:19,519 --> 00:10:25,920
running on a train uh which then

00:10:23,040 --> 00:10:26,959
learns every single attached piece of

00:10:25,920 --> 00:10:30,320
infrastructure

00:10:26,959 --> 00:10:32,240
uh picks up all of the um picks up all

00:10:30,320 --> 00:10:34,640
of the associated nodes um

00:10:32,240 --> 00:10:35,279
and then communicates with the wider

00:10:34,640 --> 00:10:38,480
network

00:10:35,279 --> 00:10:40,399
using a uh local lora network if anyone

00:10:38,480 --> 00:10:43,440
is familiar with that that is a

00:10:40,399 --> 00:10:45,680
very nice little uh low-power

00:10:43,440 --> 00:10:46,640
internet of things network system that

00:10:45,680 --> 00:10:49,040
you can use

00:10:46,640 --> 00:10:50,000
so right finally why does this all

00:10:49,040 --> 00:10:52,399
matter well

00:10:50,000 --> 00:10:53,920
safety systems are incredibly important

00:10:52,399 --> 00:10:54,880
because occasionally you will get

00:10:53,920 --> 00:10:58,000
situations

00:10:54,880 --> 00:11:00,880
where um your trains will magically

00:10:58,000 --> 00:11:02,160
uh forget that they are in fact supposed

00:11:00,880 --> 00:11:04,959
to be more than eight bit and

00:11:02,160 --> 00:11:06,240
have two more than 256 axles on a train

00:11:04,959 --> 00:11:06,959
and then magically your train will

00:11:06,240 --> 00:11:09,040
disappear

00:11:06,959 --> 00:11:11,200
uh you do not want this to happen

00:11:09,040 --> 00:11:14,480
especially if it happens to be

00:11:11,200 --> 00:11:17,760
in your garden thank you very much

00:11:14,480 --> 00:11:18,320
i have just barely hit time on this i'm

00:11:17,760 --> 00:11:20,240
frankly

00:11:18,320 --> 00:11:22,079
not uh quite impressed that i managed to

00:11:20,240 --> 00:11:24,880
at all if you would like to

00:11:22,079 --> 00:11:25,519
find out more about all of the fun steam

00:11:24,880 --> 00:11:27,440
train and

00:11:25,519 --> 00:11:28,959
non-steam train related things i'm doing

00:11:27,440 --> 00:11:31,120
you can find me on twitter

00:11:28,959 --> 00:11:33,440
um i also stream on twitch under the

00:11:31,120 --> 00:11:35,839
same name and i am currently working on

00:11:33,440 --> 00:11:37,839
a desktop flamethrower so if you want to

00:11:35,839 --> 00:11:41,120
know more please do come along and say

00:11:37,839 --> 00:11:43,839
hi thank you very much and stay safe out

00:11:41,120 --> 00:11:43,839

YouTube URL: https://www.youtube.com/watch?v=KEff3FaTmvI


