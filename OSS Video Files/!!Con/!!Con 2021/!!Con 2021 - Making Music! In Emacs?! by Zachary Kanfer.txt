Title: !!Con 2021 - Making Music! In Emacs?! by Zachary Kanfer
Publication date: 2021-07-06
Playlist: !!Con 2021
Description: 
	Making Music! In Emacs?! by Zachary Kanfer

During quarantine, I found myself spending time with an Android app. One of the features this app has is composing music that loops endlessly. As with many programs, I wondered how much better this feature would be, if only it was inside Emacs. This talk explains how I made zmusic, my implementation inside Emacs, with detours through Emacs text properties, font rendering, the WAVE file format, and music theory. And hopefully at the end, weâ€™ll have something worth listening to.

Zachary spends a lot of time coding Lisp, playing guitars, and doing improv. He also runs Emacs NYC, and recently got into hats. Find him at zck.org.
Captions: 
	00:00:12,719 --> 00:00:16,000
hi

00:00:13,440 --> 00:00:16,880
i'm zachary canfer and this is making

00:00:16,000 --> 00:00:20,400
music

00:00:16,880 --> 00:00:21,279
in emacs so over quarantine i've been

00:00:20,400 --> 00:00:22,880
bored at home

00:00:21,279 --> 00:00:25,199
and i found this android app called

00:00:22,880 --> 00:00:26,880
anti-stress with a bunch of mini games

00:00:25,199 --> 00:00:29,519
and activities

00:00:26,880 --> 00:00:31,439
one of which is a way to make some some

00:00:29,519 --> 00:00:33,680
music some digital music

00:00:31,439 --> 00:00:34,960
and it's pretty cool but kind of as with

00:00:33,680 --> 00:00:38,320
a lot of things i want

00:00:34,960 --> 00:00:40,079
more features than the original app has

00:00:38,320 --> 00:00:42,160
so i thought about it and i said you

00:00:40,079 --> 00:00:44,000
know well i'm a programmer i could make

00:00:42,160 --> 00:00:45,520
something like this i just need to have

00:00:44,000 --> 00:00:48,399
to build it on a system that has a lot

00:00:45,520 --> 00:00:50,239
of flexibility and customizability

00:00:48,399 --> 00:00:53,199
and when i think about that kind of

00:00:50,239 --> 00:00:55,280
system i think about emacs

00:00:53,199 --> 00:00:56,840
now emacs is a text editor with a

00:00:55,280 --> 00:00:58,800
history going all the way back to the

00:00:56,840 --> 00:01:01,280
70s and it's

00:00:58,800 --> 00:01:02,719
super customizable one of the coolest

00:01:01,280 --> 00:01:03,680
things about it is the language that

00:01:02,719 --> 00:01:05,840
they use to

00:01:03,680 --> 00:01:07,439
build emacs is the same language that

00:01:05,840 --> 00:01:08,080
you can use to extend it so anything

00:01:07,439 --> 00:01:11,520
they can do

00:01:08,080 --> 00:01:13,920
the developers can do you can also do

00:01:11,520 --> 00:01:14,960
so i looked into uh the the features

00:01:13,920 --> 00:01:17,360
that emacs has

00:01:14,960 --> 00:01:18,960
and uh it actually turns out that it can

00:01:17,360 --> 00:01:21,759
play sounds

00:01:18,960 --> 00:01:24,320
uh and at least the way it plays sounds

00:01:21,759 --> 00:01:27,840
is with something called wave files

00:01:24,320 --> 00:01:30,000
but what are wav files

00:01:27,840 --> 00:01:31,600
so i searched the internet a little bit

00:01:30,000 --> 00:01:33,200
and turns out that wave is just a

00:01:31,600 --> 00:01:35,840
musical file format

00:01:33,200 --> 00:01:37,439
or as i came to learn it's kind of an

00:01:35,840 --> 00:01:41,200
annoying file format

00:01:37,439 --> 00:01:42,479
and here's why so numbers can either be

00:01:41,200 --> 00:01:44,320
one

00:01:42,479 --> 00:01:46,000
one byte numbers can be unsigned but if

00:01:44,320 --> 00:01:48,079
you have a two byte number it's actually

00:01:46,000 --> 00:01:51,680
a signed integer which

00:01:48,079 --> 00:01:53,360
is inconsistent and it's little endian

00:01:51,680 --> 00:01:55,360
by default

00:01:53,360 --> 00:01:56,399
you can switch it to big endian but if

00:01:55,360 --> 00:01:59,520
you do that

00:01:56,399 --> 00:02:01,439
emacs can't play it so little engine it

00:01:59,520 --> 00:02:03,680
is which i just find confusing to think

00:02:01,439 --> 00:02:06,240
about

00:02:03,680 --> 00:02:07,759
and there's duplicate data fields so

00:02:06,240 --> 00:02:10,000
here are three fields that are

00:02:07,759 --> 00:02:12,080
those make sense but then we have

00:02:10,000 --> 00:02:13,520
another field block a line that you just

00:02:12,080 --> 00:02:14,879
multiply a couple of the other fields

00:02:13,520 --> 00:02:18,400
together so

00:02:14,879 --> 00:02:19,040
it like it's entirely uh a combination

00:02:18,400 --> 00:02:21,440
of those other

00:02:19,040 --> 00:02:22,160
other fields but you need to have it or

00:02:21,440 --> 00:02:25,040
it's not a wav

00:02:22,160 --> 00:02:25,520
file and even more so there's a on this

00:02:25,040 --> 00:02:27,280
other

00:02:25,520 --> 00:02:29,040
field that is just you multiply three of

00:02:27,280 --> 00:02:30,959
them together so

00:02:29,040 --> 00:02:34,400
you can entirely calculate that but you

00:02:30,959 --> 00:02:36,800
have to do it and put it in the file

00:02:34,400 --> 00:02:38,000
so the last part of the file the biggest

00:02:36,800 --> 00:02:41,599
part of the file

00:02:38,000 --> 00:02:42,640
is data or as one website that i found

00:02:41,599 --> 00:02:47,280
described it

00:02:42,640 --> 00:02:51,200
the actual sound data now

00:02:47,280 --> 00:02:51,840
what is data and i looked more i found

00:02:51,200 --> 00:02:54,560
some more

00:02:51,840 --> 00:02:55,599
descriptions of it and it turns out that

00:02:54,560 --> 00:02:57,920
uh so it

00:02:55,599 --> 00:02:59,280
sound is a wave it's a waveform and if

00:02:57,920 --> 00:03:02,319
you just measure the height

00:02:59,280 --> 00:03:04,319
of that waveform and that's what the

00:03:02,319 --> 00:03:06,640
data is so this sample one

00:03:04,319 --> 00:03:07,920
it starts at eight goes nine eleven

00:03:06,640 --> 00:03:09,519
thirteen fourteen fifteen

00:03:07,920 --> 00:03:11,200
then back down if you just put those

00:03:09,519 --> 00:03:14,159
numbers in the file

00:03:11,200 --> 00:03:16,400
that's all the data is so great now we

00:03:14,159 --> 00:03:20,400
can i can write a wav file

00:03:16,400 --> 00:03:20,400
so let me demo uh z music

00:03:22,159 --> 00:03:28,879
so uh the highlighted blue row

00:03:25,680 --> 00:03:30,480
is a beat and if we start playing

00:03:28,879 --> 00:03:32,159
you see it's gonna go down and it's

00:03:30,480 --> 00:03:36,080
gonna wrap

00:03:32,159 --> 00:03:36,080
and you can use the mouse to add some

00:03:44,840 --> 00:03:47,840
notes

00:03:55,920 --> 00:03:59,439
and you can see we even have we can have

00:03:57,599 --> 00:04:01,840
beats with multiple notes on it that

00:03:59,439 --> 00:04:03,920
that's fine to do also

00:04:01,840 --> 00:04:06,560
so this is a really simple z music but

00:04:03,920 --> 00:04:06,560
that's fine

00:04:07,840 --> 00:04:11,040
so some other features that i didn't

00:04:09,200 --> 00:04:12,799
have time to demo uh you can have

00:04:11,040 --> 00:04:15,360
different scales what we used

00:04:12,799 --> 00:04:16,400
uh is the minor pentatonic which i

00:04:15,360 --> 00:04:17,919
picked because basically

00:04:16,400 --> 00:04:19,840
every note sounds good with every other

00:04:17,919 --> 00:04:20,639
note that's not the case for most other

00:04:19,840 --> 00:04:22,320
scales

00:04:20,639 --> 00:04:24,240
but if you want to you can swap out two

00:04:22,320 --> 00:04:26,160
for a minor scale a major scale any

00:04:24,240 --> 00:04:27,840
other scale you want

00:04:26,160 --> 00:04:30,000
uh you can also save your music to a

00:04:27,840 --> 00:04:32,320
file and the interesting part here is

00:04:30,000 --> 00:04:34,240
that i had to make silent notes

00:04:32,320 --> 00:04:36,080
normally if there's no notes on a beat

00:04:34,240 --> 00:04:37,199
we just don't play anything for that

00:04:36,080 --> 00:04:39,120
time step

00:04:37,199 --> 00:04:40,479
but if we ran into a file we have to put

00:04:39,120 --> 00:04:43,199
some data there

00:04:40,479 --> 00:04:45,440
to say don't make any noise during this

00:04:43,199 --> 00:04:46,800
time period

00:04:45,440 --> 00:04:50,639
and i also have terrible sounding

00:04:46,800 --> 00:04:54,160
keyboard support you'll see why later

00:04:50,639 --> 00:04:56,800
here's some things i learned about emacs

00:04:54,160 --> 00:04:58,080
so spacing issues so those things i was

00:04:56,800 --> 00:05:01,039
clicking on those dashes

00:04:58,080 --> 00:05:01,360
in the beat those are buttons in emacs

00:05:01,039 --> 00:05:03,199
uh

00:05:01,360 --> 00:05:04,639
and because of the way emacs buttons

00:05:03,199 --> 00:05:06,160
work you can't put two right next to

00:05:04,639 --> 00:05:07,440
each other there has to be a character

00:05:06,160 --> 00:05:09,199
between them

00:05:07,440 --> 00:05:10,720
now you could put a space between them

00:05:09,199 --> 00:05:12,000
which would work but

00:05:10,720 --> 00:05:13,120
then i found you might accidentally

00:05:12,000 --> 00:05:14,479
click on the space when you know

00:05:13,120 --> 00:05:15,039
especially if you're trying to go

00:05:14,479 --> 00:05:17,680
quickly

00:05:15,039 --> 00:05:18,880
so i looked into unicode to see if

00:05:17,680 --> 00:05:20,960
there's any characters that i could put

00:05:18,880 --> 00:05:22,400
there that maybe wouldn't be as big

00:05:20,960 --> 00:05:24,400
i found something called a zero with

00:05:22,400 --> 00:05:27,280
space which is great

00:05:24,400 --> 00:05:27,759
so i can put that character as not part

00:05:27,280 --> 00:05:29,919
of the

00:05:27,759 --> 00:05:31,600
either button in the middle but it won't

00:05:29,919 --> 00:05:33,520
take up any space you won't accidentally

00:05:31,600 --> 00:05:36,479
click on it

00:05:33,520 --> 00:05:37,520
but interestingly this zeroth space in

00:05:36,479 --> 00:05:40,320
emax

00:05:37,520 --> 00:05:40,320
has width

00:05:41,759 --> 00:05:45,840
so we're just going to insert a greater

00:05:43,520 --> 00:05:47,199
than symbol 200 zero with spaces and

00:05:45,840 --> 00:05:49,919
then a lesson symbol

00:05:47,199 --> 00:05:51,280
and if it really had zero with the those

00:05:49,919 --> 00:05:53,600
two uh the greater than lesson symbols

00:05:51,280 --> 00:05:55,840
would be right up against each other

00:05:53,600 --> 00:05:57,280
but we see that here they actually have

00:05:55,840 --> 00:05:59,120
width

00:05:57,280 --> 00:06:00,639
and what's happening is i think what's

00:05:59,120 --> 00:06:01,520
happening is the character itself is

00:06:00,639 --> 00:06:04,080
zero with

00:06:01,520 --> 00:06:04,720
but between each set of characters emacs

00:06:04,080 --> 00:06:08,560
reserves

00:06:04,720 --> 00:06:10,160
one pixel of width for the cursor

00:06:08,560 --> 00:06:12,000
it's hard to see but there's a there's a

00:06:10,160 --> 00:06:13,840
line flashing there that's the cursor

00:06:12,000 --> 00:06:17,039
between two zeroth spaces

00:06:13,840 --> 00:06:20,400
i think but it's still pretty close to

00:06:17,039 --> 00:06:22,319
zero width

00:06:20,400 --> 00:06:24,800
so so the first couple ways i tried to

00:06:22,319 --> 00:06:26,479
play sound don't actually work

00:06:24,800 --> 00:06:28,560
so like we were talking about before

00:06:26,479 --> 00:06:29,759
emacs can play sound can play these wav

00:06:28,560 --> 00:06:31,759
files

00:06:29,759 --> 00:06:33,199
but it blocks while it's playing them

00:06:31,759 --> 00:06:34,400
which is not great if you want to do

00:06:33,199 --> 00:06:36,240
things like

00:06:34,400 --> 00:06:38,400
add other notes while it's playing or

00:06:36,240 --> 00:06:41,039
even pause it

00:06:38,400 --> 00:06:42,960
e-max does have asynchronous ways of

00:06:41,039 --> 00:06:44,560
coding but if you do that

00:06:42,960 --> 00:06:46,960
it doesn't make any noise and i don't

00:06:44,560 --> 00:06:49,680
actually know why

00:06:46,960 --> 00:06:51,120
so the way i went with that works is you

00:06:49,680 --> 00:06:53,520
just take that wave data

00:06:51,120 --> 00:06:55,520
and you write it to disk and then you

00:06:53,520 --> 00:06:57,680
shell out to the native wave player on

00:06:55,520 --> 00:06:59,440
your operating system

00:06:57,680 --> 00:07:01,039
and that works as long as you only do it

00:06:59,440 --> 00:07:03,680
once at a time

00:07:01,039 --> 00:07:05,599
because if you if you have multiple uh

00:07:03,680 --> 00:07:07,599
if you if you call that multiple times

00:07:05,599 --> 00:07:10,000
at the same time if they're overlapping

00:07:07,599 --> 00:07:12,400
you'll get really weird interference

00:07:10,000 --> 00:07:14,560
and that's why the keyboard from before

00:07:12,400 --> 00:07:15,919
doesn't work well

00:07:14,560 --> 00:07:17,680
so here's the one thing i learned about

00:07:15,919 --> 00:07:20,479
music theory

00:07:17,680 --> 00:07:22,639
music theory is not easy to program with

00:07:20,479 --> 00:07:25,120
uh when i was looking for some concepts

00:07:22,639 --> 00:07:26,240
to program with i started i found scale

00:07:25,120 --> 00:07:28,240
degrees

00:07:26,240 --> 00:07:29,280
but you don't want to program with scale

00:07:28,240 --> 00:07:32,400
degrees

00:07:29,280 --> 00:07:35,280
so if we look uh this is a low c

00:07:32,400 --> 00:07:36,560
and then so that's the first the second

00:07:35,280 --> 00:07:38,560
of the scale all the way up

00:07:36,560 --> 00:07:40,960
this is the next see it's a c an octave

00:07:38,560 --> 00:07:42,400
up and that's also a first so

00:07:40,960 --> 00:07:44,240
with scale degrees by themselves you

00:07:42,400 --> 00:07:45,759
can't really differentiate between that

00:07:44,240 --> 00:07:48,560
which isn't great if you want to have

00:07:45,759 --> 00:07:49,599
at least an octave so then i found

00:07:48,560 --> 00:07:51,120
intervals

00:07:49,599 --> 00:07:53,039
and it turns out you don't want to

00:07:51,120 --> 00:07:55,039
really program the intervals either

00:07:53,039 --> 00:07:56,400
it does solve some of the problems so we

00:07:55,039 --> 00:07:59,199
see over here

00:07:56,400 --> 00:08:00,240
the octave is eight so that works but

00:07:59,199 --> 00:08:03,520
you see we have

00:08:00,240 --> 00:08:04,960
like a major third or a minor third

00:08:03,520 --> 00:08:06,720
so there's this extra data you have to

00:08:04,960 --> 00:08:10,000
kind of keep along with it

00:08:06,720 --> 00:08:11,759
you can't just say a third so i thought

00:08:10,000 --> 00:08:13,280
about it music's really frequencies

00:08:11,759 --> 00:08:15,759
so at a low level we're just going to

00:08:13,280 --> 00:08:18,000
say like an a like a concert a is just

00:08:15,759 --> 00:08:18,960
440 hertz

00:08:18,000 --> 00:08:21,039
and that's what we're going to use at

00:08:18,960 --> 00:08:22,080
the really low level the level that

00:08:21,039 --> 00:08:24,479
humans are going to use

00:08:22,080 --> 00:08:25,360
i'm going to say there's a root note and

00:08:24,479 --> 00:08:26,879
then we're just

00:08:25,360 --> 00:08:28,879
going to say how many semitones up from

00:08:26,879 --> 00:08:31,280
that root note you are

00:08:28,879 --> 00:08:32,320
uh and then we're just at the between

00:08:31,280 --> 00:08:33,919
that and the low level we're just going

00:08:32,320 --> 00:08:37,200
to transfer those to frequencies

00:08:33,919 --> 00:08:37,200
and use them it's going to work fine

00:08:37,360 --> 00:08:43,959
so that's pretty much it uh i have notes

00:08:40,000 --> 00:08:47,320
references and source code at zcck.org

00:08:43,959 --> 00:08:49,120
bangbangcon2021 i'm a co-organizer of

00:08:47,320 --> 00:08:51,440
emacsnyc.org

00:08:49,120 --> 00:08:53,040
and feel free to email me and i think we

00:08:51,440 --> 00:08:57,040
have about a little over a minute so

00:08:53,040 --> 00:08:58,959
let's uh do some more music

00:08:57,040 --> 00:09:00,080
one of the cool things is as you're

00:08:58,959 --> 00:09:02,000
building it up the

00:09:00,080 --> 00:09:04,560
the music kind of becomes more layered

00:09:02,000 --> 00:09:07,440
and so it sounds like a more complicated

00:09:04,560 --> 00:09:10,080
uh song than it than it is just based on

00:09:07,440 --> 00:09:23,839
the music at any one time

00:09:10,080 --> 00:09:23,839
you'll see what i mean

00:09:34,839 --> 00:09:37,839
foreign

00:09:47,470 --> 00:09:51,839
[Music]

00:09:48,839 --> 00:09:51,839
foreign

00:10:01,530 --> 00:10:05,560
[Music]

00:10:02,839 --> 00:10:10,320
so

00:10:05,560 --> 00:10:14,560
[Music]

00:10:10,320 --> 00:10:14,560

YouTube URL: https://www.youtube.com/watch?v=BeTDIrJeriI


