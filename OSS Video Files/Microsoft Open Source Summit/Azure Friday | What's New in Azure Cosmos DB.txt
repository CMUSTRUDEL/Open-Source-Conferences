Title: Azure Friday | What's New in Azure Cosmos DB
Publication date: 2018-02-15
Playlist: Microsoft Open Source Summit
Description: 
	Kirill Gavrylyuk returns to Azure Friday to update Scott Hanselman on what's new in Azure Cosmos DB, such as the Cassandra API for applications that are written for Apache Cassandra, updates to the Azure Table storage API, the Apache Spark Connector, the Graph API, partitioned collections, 99.999% (five 9s) SLA, and more.

Dear Cassandra Developers, welcome to Azure #CosmosDB! - https://azure.microsoft.com/en-us/blog/dear-cassandra-developers-welcome-to-azure-cosmosdb/
Introduction to Azure Cosmos DB Table API - https://docs.microsoft.com/en-us/azure/cosmos-db/table-introduction
Apache Spark to Azure #CosmosDB Connector is now generally available - https://azure.microsoft.com/en-us/blog/apache-spark-to-azure-cosmosdb-connector-is-now-generally-available/
Azure #CosmosDB Graph API now generally available - https://azure.microsoft.com/en-us/blog/azure-cosmosdb-graph-api-now-generally-available/
Partition and scale in Azure Cosmos DB - https://docs.microsoft.com/en-us/azure/cosmos-db/partition-data
Captions: 
	00:00:00,000 --> 00:00:02,769
>> Hey, friends. I'm Scott Hanselman.

00:00:02,769 --> 00:00:04,170
This is Azure Friday, and I'm talking with

00:00:04,170 --> 00:00:06,540
Karylle Gabbalok about Azure Cosmos DB.

00:00:06,540 --> 00:00:09,165
Bunch of big deliverables just recently happened.

00:00:09,165 --> 00:00:10,065
>> Thank you, Scott.

00:00:10,065 --> 00:00:11,970
It's always such a pleasure to be here.

00:00:11,970 --> 00:00:15,350
We released quite a few exciting features to Cosmos DB.

00:00:15,350 --> 00:00:17,875
Let's start with Cassandra API.

00:00:17,875 --> 00:00:19,650
So we recently announced availability of

00:00:19,650 --> 00:00:22,988
Cassandra API on Cosmos DB.

00:00:22,988 --> 00:00:27,335
Cosmos DB is a multi-model database as a service.

00:00:27,335 --> 00:00:29,730
It offers you ability to work

00:00:29,730 --> 00:00:32,430
with documents using Mongo, SQL API,

00:00:32,430 --> 00:00:34,680
work with graphs using

00:00:34,680 --> 00:00:38,640
Gremlin API without using Azure Table API.

00:00:38,640 --> 00:00:40,650
And now, it offers you Cassandra API

00:00:40,650 --> 00:00:42,495
as a protocol level so you can take

00:00:42,495 --> 00:00:45,045
any app or tools that

00:00:45,045 --> 00:00:47,828
you're familiar with if you're working with Cassandra,

00:00:47,828 --> 00:00:49,020
and bring it over to Cosmos DB

00:00:49,020 --> 00:00:50,360
and it'll continue to work.

00:00:50,360 --> 00:00:51,765
And we have a separate session

00:00:51,765 --> 00:00:53,485
that goes into details on this.

00:00:53,485 --> 00:00:55,440
>> So just like in the past where I could take

00:00:55,440 --> 00:00:57,855
my apps to talk to Mongo,

00:00:57,855 --> 00:00:59,460
point them to Cosmos DB,

00:00:59,460 --> 00:01:01,853
they don't know that they're not talking to Mongo,

00:01:01,853 --> 00:01:03,090
and they still work great,

00:01:03,090 --> 00:01:05,445
and they get additional features that Cosmos offers.

00:01:05,445 --> 00:01:07,075
I can do the same with Cassandra apps?

00:01:07,075 --> 00:01:08,303
>> Exactly, exactly.

00:01:08,303 --> 00:01:10,260
And that's a big difference from

00:01:10,260 --> 00:01:13,080
hosting this open source

00:01:13,080 --> 00:01:14,360
databases which are great databases,

00:01:14,360 --> 00:01:16,740
hosting them versus providing

00:01:16,740 --> 00:01:19,913
a protocol level support for APIs.

00:01:19,913 --> 00:01:23,225
Opening protocol level support for APIs

00:01:23,225 --> 00:01:25,200
allows us to bring all that goodness of

00:01:25,200 --> 00:01:27,440
Cosmos DB to these developers.

00:01:27,440 --> 00:01:30,030
>> Wow. And Cassandra is now part of the family?

00:01:30,030 --> 00:01:32,685
>> Exactly. And pretty excited about it.

00:01:32,685 --> 00:01:34,260
Obviously, it's in preview.

00:01:34,260 --> 00:01:36,735
Still some road ahead

00:01:36,735 --> 00:01:39,055
to get all of that compatibility sorted out.

00:01:39,055 --> 00:01:42,360
But quite few a few apps will work already,

00:01:42,360 --> 00:01:44,865
and please take it for a spin.

00:01:44,865 --> 00:01:48,165
Next is, we announced

00:01:48,165 --> 00:01:50,232
general availability of Azure Table API.

00:01:50,232 --> 00:01:52,323
That's an interesting story.

00:01:52,323 --> 00:01:54,345
If you worked with Azure before,

00:01:54,345 --> 00:01:57,305
you likely used Azure Table

00:01:57,305 --> 00:01:58,936
at least one point in your life.

00:01:58,936 --> 00:02:00,800
>> It's a big fundamental service of Azure.

00:02:00,800 --> 00:02:02,910
It's been around forever. It's fast. It's reliable.

00:02:02,910 --> 00:02:06,584
>> It stores your key value pairs,

00:02:06,584 --> 00:02:10,882
and works for many scenarios,

00:02:10,882 --> 00:02:13,570
and you are likely have been waiting for some of

00:02:13,570 --> 00:02:16,690
the features from Azure Table storage for a long time.

00:02:16,690 --> 00:02:20,510
For example, secondary indexes.

00:02:20,510 --> 00:02:23,920
And there was a reason

00:02:23,920 --> 00:02:26,725
why it was hard to implement directly into Table storage.

00:02:26,725 --> 00:02:29,815
We are offering now a Table storage API,

00:02:29,815 --> 00:02:33,490
100% compatible in Azure Cosmos DB,

00:02:33,490 --> 00:02:37,122
that brings you all those features that you are missing.

00:02:37,122 --> 00:02:39,618
So you can now do secondary indexes.

00:02:39,618 --> 00:02:43,164
You can now do global distribution.

00:02:43,164 --> 00:02:46,590
You can now get a slay for performance if you

00:02:46,590 --> 00:02:48,290
have a high-performance scenario running

00:02:48,290 --> 00:02:51,195
on Tables, and many more.

00:02:51,195 --> 00:02:54,990
We announced preview about half a year ago with

00:02:54,990 --> 00:02:58,830
general availability of Table API on Azure Cosmos DB.

00:02:58,830 --> 00:03:02,220
You can now take any app using any SDK.

00:03:02,220 --> 00:03:05,640
I'll give you an example.

00:03:05,640 --> 00:03:11,540
We have here, let's use this window.

00:03:13,570 --> 00:03:22,320
Here, we have an account I just created using Table API.

00:03:22,320 --> 00:03:23,840
I'm going to take a "Connection

00:03:23,840 --> 00:03:27,565
String" from this account,

00:03:27,565 --> 00:03:31,769
and I'm going to access it using Table storage.

00:03:31,769 --> 00:03:37,260
>> Azure Storage Explorer is a very popular tool

00:03:37,260 --> 00:03:39,385
among storage developers and

00:03:39,385 --> 00:03:42,015
the developers that use Azure Table storage.

00:03:42,015 --> 00:03:43,980
So I can connect to it.

00:03:43,980 --> 00:03:47,630
And in fact, I already have connected to it right here.

00:03:47,630 --> 00:03:50,130
So now I can go and interact with it.

00:03:50,130 --> 00:03:52,200
And it uses JavaScript as they gave for tables.

00:03:52,200 --> 00:03:54,650
>> Does it think it's talking to Azure Table storage now?

00:03:54,650 --> 00:03:55,120
>> Yes.

00:03:55,120 --> 00:03:55,880
>> So it doesn't know.

00:03:55,880 --> 00:03:57,130
>> It doesn't know.

00:03:57,130 --> 00:03:59,880
>> It's an existing tool. Again, same promise.

00:03:59,880 --> 00:04:01,140
>> Right. And this is the thing it's turning out to be

00:04:01,140 --> 00:04:02,955
really interesting about Cosmos DB,

00:04:02,955 --> 00:04:07,390
the fact that it's multi-modal and it works globally.

00:04:07,390 --> 00:04:11,010
It's giving you the best underlying database

00:04:11,010 --> 00:04:14,476
with your favorite binary format,

00:04:14,476 --> 00:04:17,640
Jason format, your favorite protocol on top.

00:04:17,640 --> 00:04:18,810
>> And especially great for

00:04:18,810 --> 00:04:20,265
developers who already have apps,

00:04:20,265 --> 00:04:21,540
because all these databases

00:04:21,540 --> 00:04:23,789
have lots of apps already written, except for some,

00:04:23,789 --> 00:04:25,530
that you don't have to change

00:04:25,530 --> 00:04:27,360
any line of code except for connections.

00:04:27,360 --> 00:04:28,650
>> And only good things happen.

00:04:28,650 --> 00:04:30,105
It just gets better, it gets faster.

00:04:30,105 --> 00:04:30,360
>> Yes.

00:04:30,360 --> 00:04:35,533
>> So just to proves the point that it actually works,

00:04:35,533 --> 00:04:36,744
we just created a table.

00:04:36,744 --> 00:04:41,368
We'll go back to our account,

00:04:41,368 --> 00:04:43,390
and we'll see that's,

00:04:43,390 --> 00:04:48,970
click "Refresh", and you see our table is created.

00:04:48,970 --> 00:04:50,160
And you can work now from

00:04:50,160 --> 00:04:51,825
storage explorer or from the portal.

00:04:51,825 --> 00:04:53,160
You worked with as stable as you worked

00:04:53,160 --> 00:04:55,015
with Azure storage Table,

00:04:55,015 --> 00:04:58,511
but you could get secondary indexes and a good news.

00:04:58,511 --> 00:05:01,615
>> Something else is

00:05:01,615 --> 00:05:03,670
the general availability of

00:05:03,670 --> 00:05:06,794
Spark connector for Cosmos DB.

00:05:06,794 --> 00:05:09,382
I believe we just recorded a session on it.

00:05:09,382 --> 00:05:11,295
Hopefully you'll see it soon.

00:05:11,295 --> 00:05:15,765
We're very excited because it allows you to do

00:05:15,765 --> 00:05:19,455
very complex aggregation analytical queries

00:05:19,455 --> 00:05:20,850
against the real time data

00:05:20,850 --> 00:05:21,830
that you're storing in Cosmos DB.

00:05:21,830 --> 00:05:26,427
Already, Cosmos DB is used often for real time data.

00:05:26,427 --> 00:05:28,225
Then it'll be hard to

00:05:28,225 --> 00:05:31,245
run complex analytical workloads on the real time data.

00:05:31,245 --> 00:05:33,580
With Spark and a native connector for

00:05:33,580 --> 00:05:36,200
Spark, we make it easy.

00:05:36,200 --> 00:05:37,715
And the beauty of

00:05:37,715 --> 00:05:39,958
native connector is that it's partition aware,

00:05:39,958 --> 00:05:42,365
so it only talks to the partition it used to talk to.

00:05:42,365 --> 00:05:44,838
It's very efficient, pretty fast.

00:05:44,838 --> 00:05:48,350
And that's the interesting thing we have announced is

00:05:48,350 --> 00:05:52,988
the general availability of Gremlin graph APIs.

00:05:52,988 --> 00:05:59,060
That feature has been released about half a year ago,

00:05:59,060 --> 00:06:02,570
and built and lots of investment went into it.

00:06:02,570 --> 00:06:05,975
Let me show you.

00:06:05,975 --> 00:06:07,880
Just in case if you haven't seen it,

00:06:07,880 --> 00:06:12,720
you can create graph database with Cosmos DB,

00:06:12,720 --> 00:06:14,907
and you can upload,

00:06:14,907 --> 00:06:17,563
you can use Gremlin protocol which is Apache Gremlin API.

00:06:17,563 --> 00:06:19,565
We haven't met them at the API,

00:06:19,565 --> 00:06:23,058
so you can bring your Gremlin apps to it.

00:06:23,058 --> 00:06:26,513
Here we have a Marvel heroes,

00:06:26,513 --> 00:06:33,618
something with demo commonly with our Gremlin support,

00:06:33,618 --> 00:06:35,850
and you can customize how you end this graph,

00:06:35,850 --> 00:06:41,620
you can look at the data using Jason or using visual.

00:06:41,620 --> 00:06:44,540
So many nice things we added the spot of declaring

00:06:44,540 --> 00:06:46,490
GA. Not only is it works

00:06:46,490 --> 00:06:48,614
now and it's robust and it's faster,

00:06:48,614 --> 00:06:50,390
you can also do things like,

00:06:50,390 --> 00:06:52,055
you can traverse the graph now.

00:06:52,055 --> 00:06:56,405
You can click,.

00:06:56,405 --> 00:06:57,460
>> I can't remember what the exact place it.

00:06:57,460 --> 00:07:01,140
the rest friends.

00:07:01,140 --> 00:07:05,406
>> You can look at what has a comment.

00:07:05,406 --> 00:07:09,970
Now and you can page through the comics.

00:07:11,080 --> 00:07:14,635
Right, and we do pagenation around neighbors

00:07:14,635 --> 00:07:15,730
and you can traverse the graph and

00:07:15,730 --> 00:07:18,830
see which path connects the tool.

00:07:18,830 --> 00:07:21,730
>> This really hits the Cosmos DB.

00:07:21,730 --> 00:07:25,255
You just went from a table storage on Cosmos

00:07:25,255 --> 00:07:27,250
to graph storage on

00:07:27,250 --> 00:07:30,060
Cosmos and document storage in between.

00:07:30,060 --> 00:07:32,650
I mean, it's really the database for any use.

00:07:32,650 --> 00:07:37,855
>> Yes. There are scenarios that we don't do,

00:07:37,855 --> 00:07:40,972
like we don't do super complex relational joints.

00:07:40,972 --> 00:07:41,320
>> Sure.

00:07:41,320 --> 00:07:47,110
>> But it's a good database for many use cases.

00:07:47,110 --> 00:07:50,950
>> Okay, another good things for,

00:07:50,950 --> 00:07:52,610
and I'm sure folks will be excited about,

00:07:52,610 --> 00:07:57,525
is we reduced some cost deduction.

00:07:57,525 --> 00:07:59,363
That's good let's call this way.

00:07:59,363 --> 00:08:00,710
So now, with Cosmos DB,

00:08:00,710 --> 00:08:05,365
you can create, actually let's create new graph,

00:08:05,365 --> 00:08:10,865
you can create partitioned collections

00:08:10,865 --> 00:08:12,770
with the minimum throughput of

00:08:12,770 --> 00:08:15,770
1000 as opposed to 2500 as was before.

00:08:15,770 --> 00:08:18,190
So for entry price used to be for petition collection

00:08:18,190 --> 00:08:21,110
used to be $150 per month,

00:08:21,110 --> 00:08:24,245
which is a lot, now it's $60, reduced.

00:08:24,245 --> 00:08:26,810
And you can still create Cosmos DB collections at $24,

00:08:26,810 --> 00:08:29,835
but also not all partitions as a single partition.

00:08:29,835 --> 00:08:32,075
So you can start with a pretty powerful

00:08:32,075 --> 00:08:34,830
collections for lots of data.

00:08:34,830 --> 00:08:36,575
But if you don't have a lot of support

00:08:36,575 --> 00:08:38,030
as common during development,

00:08:38,030 --> 00:08:39,930
you don't have to pay upfront a lot of money.

00:08:39,930 --> 00:08:41,525
You can start at $60 now,

00:08:41,525 --> 00:08:45,200
and it will keep going down as we progress.

00:08:45,200 --> 00:08:46,580
So that's, what?

00:08:46,580 --> 00:08:48,550
60% reduction.

00:08:48,550 --> 00:08:50,390
Good number.

00:08:50,390 --> 00:08:55,575
Finally, let's take a look what else I've missed.

00:08:55,575 --> 00:08:58,675
We have announce public preview aggregation

00:08:58,675 --> 00:09:00,440
pipelining unique index,

00:09:00,440 --> 00:09:04,080
I believe that we have a session on this, already.

00:09:04,080 --> 00:09:07,370
We've announced five nines SLAs

00:09:07,370 --> 00:09:11,057
that also took a lot of work.

00:09:11,057 --> 00:09:13,040
It's like one digit added,

00:09:13,040 --> 00:09:15,075
but it's a lot of work add.

00:09:15,075 --> 00:09:16,430
But now if you have

00:09:16,430 --> 00:09:18,250
a globally distributed account with Cosmos DB,

00:09:18,250 --> 00:09:20,660
your data is available with five nines

00:09:20,660 --> 00:09:23,865
SLAS which is very few services offer.

00:09:23,865 --> 00:09:27,035
That's a pretty high guarantee,

00:09:27,035 --> 00:09:29,930
and a bunch of metrics improvements

00:09:29,930 --> 00:09:31,910
that you could check out if you

00:09:31,910 --> 00:09:37,990
go to Cosmos DB and look at the 'METRICS' tab right here.

00:09:37,990 --> 00:09:42,240
With that, lots more exciting things are coming.

00:09:42,240 --> 00:09:43,870
>> How often does Cosmos get updated?

00:09:43,870 --> 00:09:45,960
Is it monthly, is it quarterly, is it every two weeks?

00:09:45,960 --> 00:09:46,630
>> Weekly.

00:09:46,630 --> 00:09:47,290
>> Really?

00:09:47,290 --> 00:09:47,670
>> Yes. It is one to two weeks.

00:09:47,670 --> 00:09:50,320
>> So you're quietly and silently improving every week?

00:09:50,320 --> 00:09:52,195
>> We keep on improving.Yes,

00:09:52,195 --> 00:09:54,925
it's a pretty oiled machinery.

00:09:54,925 --> 00:09:58,240
Obviously, there are only few times within

00:09:58,240 --> 00:10:00,005
a semester where we actually

00:10:00,005 --> 00:10:03,155
release publicly visible, noticeable things.

00:10:03,155 --> 00:10:04,510
>> Yeah, like this huge series

00:10:04,510 --> 00:10:06,310
of features you just released?

00:10:06,310 --> 00:10:09,130
>> Yes, it just

00:10:09,130 --> 00:10:15,460
exciting to see how robust and loyal it has become.

00:10:15,460 --> 00:10:16,980
>> That's great. Well congratulations,

00:10:16,980 --> 00:10:19,870
and we look forward to hearing even more about Cosmos DB.

00:10:19,870 --> 00:10:20,900
>> Thank you Scott.

00:10:20,900 --> 00:10:22,810
>> I'm learning about what's new with Cosmos DB

00:10:22,810 --> 00:10:26,060

YouTube URL: https://www.youtube.com/watch?v=MuW0_IlQ_XU


