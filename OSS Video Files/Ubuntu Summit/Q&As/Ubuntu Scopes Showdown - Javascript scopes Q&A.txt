Title: Ubuntu Scopes Showdown - Javascript scopes Q&A
Publication date: 2016-02-04
Playlist: Q&As
Description: 
	Join Marcus Tomlinson and David CallÃ© at 15:00 UTC for an hour of Q&A on Unity8 scopes in Javascript! Bring your questions in #ubuntu-on-air on freenode IRC, or just use the chat box at http://ubuntuonair.com/

Learn more and enter the competition at https://developer.ubuntu.com/showdown/
Captions: 
	00:00:00,000 --> 00:00:08,849
and so this is for the mutoscope

00:00:03,959 --> 00:00:11,849
showdown if you have heard about it it's

00:00:08,849 --> 00:00:16,830
a competition to make scopes for you too

00:00:11,849 --> 00:00:22,800
and for the fun so we are with Marcus

00:00:16,830 --> 00:00:25,800
two min son Marcus hey director yeah

00:00:22,800 --> 00:00:31,080
quick introduction I'm Marcus Tomlinson

00:00:25,800 --> 00:00:35,370
I work in the unity api's team so I work

00:00:31,080 --> 00:00:39,629
on a whole bunch of a PRS for unity you

00:00:35,370 --> 00:00:40,950
know notifications indicators all kinds

00:00:39,629 --> 00:00:45,120
of things but but mainly I've been

00:00:40,950 --> 00:00:47,789
involved in the scopes APR project you

00:00:45,120 --> 00:00:50,039
know right from the base API C++ API and

00:00:47,789 --> 00:00:53,629
lately recently I headed up the

00:00:50,039 --> 00:00:57,539
JavaScript bondings project and yeah

00:00:53,629 --> 00:01:01,730
pretty much involved in all levels right

00:00:57,539 --> 00:01:09,960
from the low-level RPC add up to the

00:01:01,730 --> 00:01:13,350
shell talking so yes lets me so the new

00:01:09,960 --> 00:01:20,640
just get bindings I have landed around

00:01:13,350 --> 00:01:23,869
october november i think have you had

00:01:20,640 --> 00:01:29,009
any like big bugs or big issues so far

00:01:23,869 --> 00:01:32,100
with it yeah i guess i guess probably

00:01:29,009 --> 00:01:35,430
the the only bugs that we really seeing

00:01:32,100 --> 00:01:39,329
are things we've overlooked the Scopes

00:01:35,430 --> 00:01:43,020
API is quite a large project so when

00:01:39,329 --> 00:01:47,369
bonding it's it can be easy to kind of

00:01:43,020 --> 00:01:50,070
miss those edge cases or some possible

00:01:47,369 --> 00:01:54,090
uses that we didn't fully bond so there

00:01:50,070 --> 00:01:57,299
hasn't been really any major issues with

00:01:54,090 --> 00:02:01,320
the API I think some people have some

00:01:57,299 --> 00:02:04,380
problems with the SDK yeah we try as

00:02:01,320 --> 00:02:08,340
much as we can do to help the SDK guys

00:02:04,380 --> 00:02:12,959
fixing those problems and yeah it's

00:02:08,340 --> 00:02:14,370
really just a matter of binding certain

00:02:12,959 --> 00:02:17,340
things that we forgot about

00:02:14,370 --> 00:02:21,330
like I said was a really massive project

00:02:17,340 --> 00:02:24,360
we try to we try to do what we did well

00:02:21,330 --> 00:02:26,430
so what is bound does work really well I

00:02:24,360 --> 00:02:30,030
think we haven't got a lot of bugs and

00:02:26,430 --> 00:02:32,340
for that stuff but it's just the things

00:02:30,030 --> 00:02:37,519
we forgot about so yeah I think all in

00:02:32,340 --> 00:02:40,260
all it's been pretty successful cool and

00:02:37,519 --> 00:02:44,250
well I still have a small issues with

00:02:40,260 --> 00:02:57,209
smelly shoe with buttons but will dig

00:02:44,250 --> 00:02:59,579
into this so um if you are on IRC and if

00:02:57,209 --> 00:03:02,129
you have any questions make sure you

00:02:59,579 --> 00:03:05,849
prefix you wish and with questions in

00:03:02,129 --> 00:03:08,940
caps oh here it is question from

00:03:05,849 --> 00:03:10,590
dragonbyte is there a performance heat

00:03:08,940 --> 00:03:14,970
using the best script over the other

00:03:10,590 --> 00:03:21,090
language there's a language being C++ or

00:03:14,970 --> 00:03:23,970
go yes yeah there's going to be a mean

00:03:21,090 --> 00:03:25,950
where we're talking about an interpreted

00:03:23,970 --> 00:03:28,290
language over compiled language here so

00:03:25,950 --> 00:03:30,000
yeah sure your archos scope and C++ is

00:03:28,290 --> 00:03:33,569
going to have a little more performance

00:03:30,000 --> 00:03:36,810
but not anything that you're going to

00:03:33,569 --> 00:03:39,680
notice we have done benchmarking node as

00:03:36,810 --> 00:03:44,099
you know is really high performance

00:03:39,680 --> 00:03:47,400
project it really when it comes to

00:03:44,099 --> 00:03:50,699
scopes your bottlenecks are not in the

00:03:47,400 --> 00:03:53,639
performance of your code their their

00:03:50,699 --> 00:03:55,199
network related so things like going and

00:03:53,639 --> 00:03:57,599
pulling a bunch of information from the

00:03:55,199 --> 00:03:58,739
online API and bringing it back that's

00:03:57,599 --> 00:04:00,810
where your bottlenecks are going to be

00:03:58,739 --> 00:04:02,669
and when you're looking at the same

00:04:00,810 --> 00:04:06,840
bottlenecks exists the existing for all

00:04:02,669 --> 00:04:10,099
languages in that matter the language is

00:04:06,840 --> 00:04:12,540
not really making much of a difference

00:04:10,099 --> 00:04:15,090
yeah they were there's going to be a

00:04:12,540 --> 00:04:18,299
performance at yeah i can i can say yeah

00:04:15,090 --> 00:04:23,419
but that that's more a academic answer

00:04:18,299 --> 00:04:25,720
than one that i can see or experience

00:04:23,419 --> 00:04:28,600
yes I can confirm

00:04:25,720 --> 00:04:33,270
this i replicated a few of my C C++

00:04:28,600 --> 00:04:36,100
scopes endeavor script and the only

00:04:33,270 --> 00:04:40,600
performance degradation I've seen is

00:04:36,100 --> 00:04:44,860
just network one you know so it's really

00:04:40,600 --> 00:04:51,310
the same there isn't a visible

00:04:44,860 --> 00:05:02,680
difference and do we have any more

00:04:51,310 --> 00:05:07,300
questions nope so um Marcus in terms of

00:05:02,680 --> 00:05:14,590
Fermi of bindings are we at one hundred

00:05:07,300 --> 00:05:16,480
percent coverage or no we're not one of

00:05:14,590 --> 00:05:20,530
the major holes that we have in the

00:05:16,480 --> 00:05:24,130
bondings is aggregation and at the

00:05:20,530 --> 00:05:26,910
moment it's it's it's a bigger problem

00:05:24,130 --> 00:05:29,140
than bondings we don't support

00:05:26,910 --> 00:05:32,380
aggregators and i scoped at the moment

00:05:29,140 --> 00:05:35,260
and that's a security decision an

00:05:32,380 --> 00:05:37,030
aggregator see that we have two security

00:05:35,260 --> 00:05:39,460
policies ready with scopes and that is

00:05:37,030 --> 00:05:42,340
you can either access local files or you

00:05:39,460 --> 00:05:44,830
can access network if we go and allow

00:05:42,340 --> 00:05:46,870
scopes to do both we have the security

00:05:44,830 --> 00:05:49,210
problem on our hands where you can go

00:05:46,870 --> 00:05:52,690
and access something locally and go and

00:05:49,210 --> 00:05:54,880
rip it off to a to a remote server so

00:05:52,690 --> 00:05:56,650
that this is why we've we've held back

00:05:54,880 --> 00:05:58,690
allowing aggregators in our store

00:05:56,650 --> 00:06:01,630
because then someone could write an

00:05:58,690 --> 00:06:04,000
aggregator that has one scope accessing

00:06:01,630 --> 00:06:05,500
local things passes up the results and

00:06:04,000 --> 00:06:09,610
then that aggregator goes and passes it

00:06:05,500 --> 00:06:14,550
off to a network scope so we've put off

00:06:09,610 --> 00:06:17,140
binding that because it's not a great

00:06:14,550 --> 00:06:20,200
Rick I mean it's not to requirement at

00:06:17,140 --> 00:06:22,390
this point so that's not there like I

00:06:20,200 --> 00:06:24,750
said the only bugs we're getting are

00:06:22,390 --> 00:06:28,050
things that we we may have overlooked

00:06:24,750 --> 00:06:32,290
bonding is is pretty good i would say

00:06:28,050 --> 00:06:35,349
not including aggregation where we must

00:06:32,290 --> 00:06:39,220
be other than probably near ninety

00:06:35,349 --> 00:06:40,900
percent i'll say that because I'm

00:06:39,220 --> 00:06:43,120
always surprised at how we forgot

00:06:40,900 --> 00:06:46,390
something but it's it's not big things

00:06:43,120 --> 00:06:48,190
that we forget and we we are really

00:06:46,390 --> 00:06:50,920
active in the project so if you do have

00:06:48,190 --> 00:06:53,680
a problem there's literally been about a

00:06:50,920 --> 00:06:56,380
24 hour turnaround with bug to fix at

00:06:53,680 --> 00:06:57,940
this point so if you do see that

00:06:56,380 --> 00:07:01,900
something is missing or something is

00:06:57,940 --> 00:07:05,070
working really log the bug we will try

00:07:01,900 --> 00:07:09,790
out within 24 hours to get it sorted out

00:07:05,070 --> 00:07:12,790
okay well ricardo de Silva is asking a

00:07:09,790 --> 00:07:14,620
binding questions can I use the new

00:07:12,790 --> 00:07:20,860
audio cards to other music playback

00:07:14,620 --> 00:07:30,010
directly on the search page in lon

00:07:20,860 --> 00:07:33,370
playback oh yeah new audio cards I think

00:07:30,010 --> 00:07:35,350
not the unfortunate hey you see this is

00:07:33,370 --> 00:07:37,060
exactly what I'm talking about so in

00:07:35,350 --> 00:07:40,480
line playback at something that landed

00:07:37,060 --> 00:07:43,540
probably you a few weeks ago and few

00:07:40,480 --> 00:07:47,050
weeks ago and yeah like improve the

00:07:43,540 --> 00:07:49,690
yesterday so it's very yet it's

00:07:47,050 --> 00:07:51,730
extremely new and yeah i think this

00:07:49,690 --> 00:07:55,930
raises a bigger problem and i think i

00:07:51,730 --> 00:07:59,130
should probably talk about it we we're

00:07:55,930 --> 00:08:01,330
currently working on a much larger scale

00:07:59,130 --> 00:08:05,710
improvement of how we manage our

00:08:01,330 --> 00:08:08,110
bondings it's a long it's it's like a

00:08:05,710 --> 00:08:09,940
long live live problem where you have

00:08:08,110 --> 00:08:13,000
bindings that are never totally in sync

00:08:09,940 --> 00:08:15,360
with the base APR there's always this

00:08:13,000 --> 00:08:18,400
like buffer that you have to overcome

00:08:15,360 --> 00:08:20,620
between the base APR being updated and

00:08:18,400 --> 00:08:23,229
then give it a couple weeks and then the

00:08:20,620 --> 00:08:25,060
bindings all catch up so one of the

00:08:23,229 --> 00:08:28,870
biggest problems is that we have guys

00:08:25,060 --> 00:08:30,370
that you know on different time zones or

00:08:28,870 --> 00:08:33,250
different teams that are working on the

00:08:30,370 --> 00:08:35,200
bonding and working on the base APR so

00:08:33,250 --> 00:08:38,589
what we're working on internally is a

00:08:35,200 --> 00:08:41,260
much better process for us to flag flag

00:08:38,589 --> 00:08:44,710
updates for bondings with the base APR

00:08:41,260 --> 00:08:47,110
updates so yeah we are aware of inline

00:08:44,710 --> 00:08:51,040
playback we got filters coming through

00:08:47,110 --> 00:08:52,600
on the C++ API as well we are planning

00:08:51,040 --> 00:08:55,209
to be a lot more in

00:08:52,600 --> 00:08:57,279
sync with the libe users we go forward

00:08:55,209 --> 00:09:00,910
using these new tools that we have

00:08:57,279 --> 00:09:03,339
internally but yes unfortunately for now

00:09:00,910 --> 00:09:05,980
inline playback is one that we do have

00:09:03,339 --> 00:09:09,009
to catch up on it's not available at the

00:09:05,980 --> 00:09:11,050
moment well do you think it's going to

00:09:09,009 --> 00:09:18,850
be available before the end of the show

00:09:11,050 --> 00:09:21,279
down uh yeah let me look into it it's

00:09:18,850 --> 00:09:24,040
it's going to be it's going to be me

00:09:21,279 --> 00:09:28,839
implementing it so yeah let me look into

00:09:24,040 --> 00:09:32,620
it tomorrow then let's see whoever asked

00:09:28,839 --> 00:09:37,959
the question could they could you report

00:09:32,620 --> 00:09:40,899
a bug against the actually I'm on RT

00:09:37,959 --> 00:09:43,810
they just paid cydia whatever bugs you

00:09:40,899 --> 00:09:48,459
have a reported against unity Jaya

00:09:43,810 --> 00:09:50,649
scopes um like I said once the bug is

00:09:48,459 --> 00:09:52,269
there then then it's you know not out of

00:09:50,649 --> 00:09:55,750
my notice art it's right there in front

00:09:52,269 --> 00:10:06,610
of me I will look into it hopefully I'll

00:09:55,750 --> 00:10:09,639
get to it tomorrow in and fix okay so

00:10:06,610 --> 00:10:12,490
another question can a ship a new online

00:10:09,639 --> 00:10:20,939
accounts provide the provider together

00:10:12,490 --> 00:10:23,019
with the scope yes you can although okay

00:10:20,939 --> 00:10:29,230
online accounts as a little bit of a

00:10:23,019 --> 00:10:30,459
tricky situation if you but your one one

00:10:29,230 --> 00:10:34,779
thing that's worth mentioning at this

00:10:30,459 --> 00:10:40,689
point as well the documentation for our

00:10:34,779 --> 00:10:43,300
base API is is mostly reusable for the

00:10:40,689 --> 00:10:44,620
bindings as well including JavaScript so

00:10:43,300 --> 00:10:50,170
if you if you go to

00:10:44,620 --> 00:10:59,170
developer.android.com maybe also paste a

00:10:50,170 --> 00:11:01,120
link for this I'll get to why I'm

00:10:59,170 --> 00:11:04,059
talking about this our paces an IRC

00:11:01,120 --> 00:11:05,860
channel so if you go to our api docs in

00:11:04,059 --> 00:11:09,760
the base api docs for

00:11:05,860 --> 00:11:13,980
herbs on that page a little further down

00:11:09,760 --> 00:11:19,440
you will get an online accounts section

00:11:13,980 --> 00:11:24,370
where very briefly I run through how to

00:11:19,440 --> 00:11:27,490
add on an accounts your scope please

00:11:24,370 --> 00:11:30,160
forgive me if I've laid every one day

00:11:27,490 --> 00:11:34,870
and there's no provider okay oh all

00:11:30,160 --> 00:11:37,120
right yeah this is the bit of an issue

00:11:34,870 --> 00:11:39,959
online accounts is not really an API

00:11:37,120 --> 00:11:45,130
that we it's not an API that we maintain

00:11:39,959 --> 00:11:49,260
this is an API from another team we are

00:11:45,130 --> 00:11:51,760
really just clients to it so let me

00:11:49,260 --> 00:11:53,829
during the session let me just do some

00:11:51,760 --> 00:11:55,630
research we can keep some questions

00:11:53,829 --> 00:11:57,490
coming as soon as I find the

00:11:55,630 --> 00:12:01,529
documentation for the online accounts

00:11:57,490 --> 00:12:08,589
APR then I'll paste it in IRC channel

00:12:01,529 --> 00:12:16,720
okay um but Z descriptor p IE is here to

00:12:08,589 --> 00:12:20,440
call online accounts sorry say again the

00:12:16,720 --> 00:12:24,550
javascript api for da scopes is here to

00:12:20,440 --> 00:12:28,390
access online accounts yeah it is bound

00:12:24,550 --> 00:12:30,610
yes ok so it's available but but perfect

00:12:28,390 --> 00:12:33,820
but yeah the question was can you can

00:12:30,610 --> 00:12:35,620
you can you provide a new provider ok

00:12:33,820 --> 00:12:40,149
you can you add a ship a new provider

00:12:35,620 --> 00:12:43,630
yeah you can bet that includes shipping

00:12:40,149 --> 00:12:47,079
a dot provide a file with your scope and

00:12:43,630 --> 00:12:48,760
there's very specific stuff you gotta

00:12:47,079 --> 00:12:52,500
stick in there that that's where it gets

00:12:48,760 --> 00:12:56,620
it gets out of our scope and into the

00:12:52,500 --> 00:12:58,149
web apps team so yes it is bound it is

00:12:56,620 --> 00:13:00,820
possible you can do it through

00:12:58,149 --> 00:13:03,579
JavaScript I just would like to find the

00:13:00,820 --> 00:13:05,800
documentation for that provider file so

00:13:03,579 --> 00:13:10,260
that it's that we can wrap up the

00:13:05,800 --> 00:13:15,040
question and I think every i have a link

00:13:10,260 --> 00:13:19,089
sushi the program starts the film and

00:13:15,040 --> 00:13:24,550
guides there is an online accounts guide

00:13:19,089 --> 00:13:25,930
I'm pasting the link on IRC and you

00:13:24,550 --> 00:13:29,410
should have pretty much everything you

00:13:25,930 --> 00:13:31,870
need well it's focused on uml but in

00:13:29,410 --> 00:13:49,180
terms of shipping your online account

00:13:31,870 --> 00:13:56,459
provider Jenny everyone okay any more

00:13:49,180 --> 00:14:00,309
questions on IRC it follow apparently um

00:13:56,459 --> 00:14:02,079
Makris so yet love scopes do you think

00:14:00,309 --> 00:14:07,569
we're going to see JavaScript scopes

00:14:02,079 --> 00:14:09,879
shipped by default like either the plan

00:14:07,569 --> 00:14:14,529
somewhere to ship a few diverse groups

00:14:09,879 --> 00:14:20,199
comes by default you mean in the system

00:14:14,529 --> 00:14:23,170
image yes uh I don't think there's been

00:14:20,199 --> 00:14:25,600
any work at the moment for internal

00:14:23,170 --> 00:14:27,850
scopes but we have been surprised to see

00:14:25,600 --> 00:14:29,949
a good couple of scope showing up in the

00:14:27,850 --> 00:14:32,319
store already i think i think there's

00:14:29,949 --> 00:14:33,850
about five of them and not all from the

00:14:32,319 --> 00:14:38,470
same developer either so that's quite

00:14:33,850 --> 00:14:40,899
cool the internal scopes yeah I think we

00:14:38,470 --> 00:14:46,779
could probably see more of them being

00:14:40,899 --> 00:14:50,470
written in JavaScript it's yeah i mean i

00:14:46,779 --> 00:14:52,240
don't i don't want to boast a toot my

00:14:50,470 --> 00:14:54,160
own horn but I think the JavaScript

00:14:52,240 --> 00:14:56,350
bindings are really making things a lot

00:14:54,160 --> 00:14:58,929
easier I mean we've simplified the

00:14:56,350 --> 00:15:03,129
process a lot by going the JavaScript

00:14:58,929 --> 00:15:04,929
route it's yeah as more people give it a

00:15:03,129 --> 00:15:06,339
go and try it out I think even

00:15:04,929 --> 00:15:08,860
internally we're going to have a lot

00:15:06,339 --> 00:15:10,509
more people writing JavaScript scopes

00:15:08,860 --> 00:15:13,569
because it's just the process is

00:15:10,509 --> 00:15:15,670
ridiculously easy now I mean you have

00:15:13,569 --> 00:15:18,009
one javascript file that's a couple

00:15:15,670 --> 00:15:20,439
hundred lines long and you're you know

00:15:18,009 --> 00:15:23,740
you're competing against the C++ scope

00:15:20,439 --> 00:15:27,459
that takes you know a couple hundred

00:15:23,740 --> 00:15:31,750
lines of code in you know 10 files so

00:15:27,459 --> 00:15:34,810
it's yeah it's looking really good

00:15:31,750 --> 00:15:38,670
I hope more people adapted yeah every if

00:15:34,810 --> 00:15:41,560
she knows the API you are going to query

00:15:38,670 --> 00:15:45,250
maybe in half an hour you can have a

00:15:41,560 --> 00:15:48,250
pretty decent scope actually it's very

00:15:45,250 --> 00:15:50,890
fast yeah definitely and and with most

00:15:48,250 --> 00:15:52,900
on on APRs returning JSON by default I

00:15:50,890 --> 00:15:54,970
mean it's probably seventy percent of

00:15:52,900 --> 00:15:59,530
them are they are doing that the passing

00:15:54,970 --> 00:16:01,600
is just ridiculously easy as well as you

00:15:59,530 --> 00:16:04,360
put a year going back and forward not

00:16:01,600 --> 00:16:08,260
just receiving data but up and down this

00:16:04,360 --> 00:16:10,660
is totally easy it is really it would I

00:16:08,260 --> 00:16:13,720
really like about what-what JavaScript

00:16:10,660 --> 00:16:17,470
does for scopes is that it really fits

00:16:13,720 --> 00:16:22,150
the domain really really well scopes are

00:16:17,470 --> 00:16:23,770
servers there are data servers they they

00:16:22,150 --> 00:16:27,730
take some requests than they pass back

00:16:23,770 --> 00:16:30,400
some information and they fit so well in

00:16:27,730 --> 00:16:33,220
the JavaScript world in that they sit

00:16:30,400 --> 00:16:35,920
there between your online API and your

00:16:33,220 --> 00:16:38,170
your user and everything just flows

00:16:35,920 --> 00:16:40,180
really really smoothly through it

00:16:38,170 --> 00:16:44,440
because it's designed to do exactly this

00:16:40,180 --> 00:16:47,820
so it's it's actually a wonder why we

00:16:44,440 --> 00:16:52,600
didn't have JavaScript bindings earlier

00:16:47,820 --> 00:16:55,360
so at least we have them Oh Reagan White

00:16:52,600 --> 00:16:57,310
has a great question is the JavaScript

00:16:55,360 --> 00:17:00,010
scopes is a gateway to get people in and

00:16:57,310 --> 00:17:01,780
then hope to present with C++ or will

00:17:00,010 --> 00:17:06,670
their scripts always via first class

00:17:01,780 --> 00:17:08,860
citizen like that no we know this if the

00:17:06,670 --> 00:17:10,900
intention isn't to have a limited Josh

00:17:08,860 --> 00:17:13,900
with API and bring people to see Miss

00:17:10,900 --> 00:17:16,540
bus we do want JavaScript to be a first

00:17:13,900 --> 00:17:18,970
class citizen definitely one of the one

00:17:16,540 --> 00:17:23,170
of the Crown's we did want to bring in

00:17:18,970 --> 00:17:25,540
was the web development guys you know a

00:17:23,170 --> 00:17:27,760
lot of people are writing web container

00:17:25,540 --> 00:17:29,890
apps for phones i mean we saw it with

00:17:27,760 --> 00:17:32,920
firefox that's how they they try to into

00:17:29,890 --> 00:17:36,310
the market and we have a lot of people

00:17:32,920 --> 00:17:40,060
out there a lot more people are likely

00:17:36,310 --> 00:17:41,350
to know javascript than C++ and and if I

00:17:40,060 --> 00:17:43,750
say it the other way around we have a

00:17:41,350 --> 00:17:45,410
very small community of people that know

00:17:43,750 --> 00:17:48,030
C++ well

00:17:45,410 --> 00:17:50,880
no we do one JavaScript to be a

00:17:48,030 --> 00:17:52,830
first-class citizen one group of people

00:17:50,880 --> 00:17:55,920
that we really obviously wanted to bring

00:17:52,830 --> 00:18:00,090
in was the node crowd with using node

00:17:55,920 --> 00:18:02,220
but not only that just the the web

00:18:00,090 --> 00:18:04,730
developers it guys as well because what

00:18:02,220 --> 00:18:09,660
we're trying to do with scopes a--'s is

00:18:04,730 --> 00:18:12,930
really a much simpler entry point to

00:18:09,660 --> 00:18:15,360
developing for the phone not it is not

00:18:12,930 --> 00:18:17,850
like writing an app where the entire

00:18:15,360 --> 00:18:21,930
stack is basically up to you from you

00:18:17,850 --> 00:18:23,430
are right down to the back end so we we

00:18:21,930 --> 00:18:25,590
want to basically take it even further

00:18:23,430 --> 00:18:28,230
and make it even simpler for guys to

00:18:25,590 --> 00:18:32,370
write and open it up to a larger crowd

00:18:28,230 --> 00:18:34,230
so yeah the bindings are more pick your

00:18:32,370 --> 00:18:36,780
language and go for it so if you're a go

00:18:34,230 --> 00:18:38,790
programmer and you pick go it's that's

00:18:36,780 --> 00:18:40,980
not all so through that direction it's

00:18:38,790 --> 00:18:43,080
not a way to get people into using C++

00:18:40,980 --> 00:18:44,900
or any other means it's really just to

00:18:43,080 --> 00:18:50,370
try and open ourselves up to as many

00:18:44,900 --> 00:18:53,700
developers as possible dragon bike is

00:18:50,370 --> 00:18:55,470
asking another question any other

00:18:53,700 --> 00:18:59,690
language is being looked at for being

00:18:55,470 --> 00:18:59,690
supported or you could it easier SDK

00:19:00,200 --> 00:19:08,310
okay so we have go bondings saying

00:19:05,910 --> 00:19:11,640
they're not supported in the SDK is not

00:19:08,310 --> 00:19:17,190
entirely correct but I but I would also

00:19:11,640 --> 00:19:18,390
say the same thing so we we might we

00:19:17,190 --> 00:19:21,450
might be looking into some other

00:19:18,390 --> 00:19:24,420
languages I'm not in a position to say

00:19:21,450 --> 00:19:27,840
but example maybe another good language

00:19:24,420 --> 00:19:31,230
that's easy to write would be Pathan but

00:19:27,840 --> 00:19:32,850
don't hold me to that but in terms of

00:19:31,230 --> 00:19:35,460
the languages we currently have are no

00:19:32,850 --> 00:19:39,210
go there isn't any templates in the SDK

00:19:35,460 --> 00:19:41,400
right now but that was quite a

00:19:39,210 --> 00:19:44,880
complicated conversation we've been

00:19:41,400 --> 00:19:49,050
having for a while because go developers

00:19:44,880 --> 00:19:51,210
are usually guys that are using terminal

00:19:49,050 --> 00:19:54,180
anyway they're they're using command

00:19:51,210 --> 00:19:57,120
line tools to compile and run in so what

00:19:54,180 --> 00:19:58,340
what we may need to do is redefine what

00:19:57,120 --> 00:20:03,110
we call the

00:19:58,340 --> 00:20:06,890
DK the SDK is too readily associated

00:20:03,110 --> 00:20:08,450
with QT creator now and no one's to

00:20:06,890 --> 00:20:10,970
blame for it I think it's just the way

00:20:08,450 --> 00:20:15,010
we've marketed it but what we want to

00:20:10,970 --> 00:20:17,419
move towards is more in SDK being a

00:20:15,010 --> 00:20:21,049
collection of tools that allow you to

00:20:17,419 --> 00:20:23,630
develop so what what I would like to see

00:20:21,049 --> 00:20:25,250
going forward and and again don't hold

00:20:23,630 --> 00:20:27,279
me to this because I'm gonna in a

00:20:25,250 --> 00:20:29,990
position to make these decisions but

00:20:27,279 --> 00:20:34,880
things like including plug-ins for

00:20:29,990 --> 00:20:36,890
Eclipse even or for other IDEs or having

00:20:34,880 --> 00:20:39,279
command line tools that are easy enough

00:20:36,890 --> 00:20:43,010
to use that you could integrate into

00:20:39,279 --> 00:20:46,760
another development environment and yeah

00:20:43,010 --> 00:20:52,600
the SDK as a term as a the definition of

00:20:46,760 --> 00:20:56,149
SDK may need to expand beyond the IDE

00:20:52,600 --> 00:21:01,580
yeah so I don't think we will be getting

00:20:56,149 --> 00:21:04,820
go templates and I'm not sure about

00:21:01,580 --> 00:21:07,429
other languages right now but again

00:21:04,820 --> 00:21:09,740
going back to depending on the developer

00:21:07,429 --> 00:21:12,320
go developer i think is more is not

00:21:09,740 --> 00:21:15,169
really at home using cute Creator who

00:21:12,320 --> 00:21:16,669
created just it's basically jumping

00:21:15,169 --> 00:21:20,890
through hoops to try and get cute

00:21:16,669 --> 00:21:27,710
creator to to compile the go project so

00:21:20,890 --> 00:21:31,130
that's a it's another story you took the

00:21:27,710 --> 00:21:33,399
Python a bit earlier and obviously I

00:21:31,130 --> 00:21:38,630
don't think we will have iphone scopes

00:21:33,399 --> 00:21:40,880
at least four arm devices we've had

00:21:38,630 --> 00:21:46,970
pythons cups for years on the desktop

00:21:40,880 --> 00:21:48,590
and yeah well I be like I could reveal

00:21:46,970 --> 00:21:50,809
it is something interesting I could

00:21:48,590 --> 00:21:52,370
reveal something interesting they are

00:21:50,809 --> 00:21:55,450
some scopes that are really written in

00:21:52,370 --> 00:21:58,700
part them that we're using today there

00:21:55,450 --> 00:22:01,190
they live on our smarts curb server so

00:21:58,700 --> 00:22:02,779
it's it's the Scopes that you that you

00:22:01,190 --> 00:22:05,960
have on your phone when you first boot

00:22:02,779 --> 00:22:07,460
up amazon ebay where the channel v

00:22:05,960 --> 00:22:10,309
scopes actually written in part and then

00:22:07,460 --> 00:22:11,580
sitting on a server this is just good

00:22:10,309 --> 00:22:13,710
but nice

00:22:11,580 --> 00:22:20,040
not a public API I actually wrote some

00:22:13,710 --> 00:22:21,690
of these and yeah yes this is the only

00:22:20,040 --> 00:22:25,470
place on the phone where you would have

00:22:21,690 --> 00:22:29,160
Typhon scopes it's correct so we have

00:22:25,470 --> 00:22:32,660
another question from recado how can I

00:22:29,160 --> 00:22:35,220
run my Jess cups on my phone when I get

00:22:32,660 --> 00:22:40,710
using the customs copeland for is not

00:22:35,220 --> 00:22:44,130
yet reported on the SDK right okay yeah

00:22:40,710 --> 00:22:49,740
so there's a limitation of the SDK at

00:22:44,130 --> 00:22:53,580
the moment I don't really recall why I

00:22:49,740 --> 00:22:57,090
think it's a legacy problem but custom

00:22:53,580 --> 00:23:01,020
scope runners was it was difficult for

00:22:57,090 --> 00:23:04,620
them to attach a GDB server for debug

00:23:01,020 --> 00:23:06,840
onto these custom scope runners it was

00:23:04,620 --> 00:23:08,690
easier for them to have a known

00:23:06,840 --> 00:23:12,780
executable which was the scope runner

00:23:08,690 --> 00:23:14,400
that runs C++ scopes now it's it's

00:23:12,780 --> 00:23:18,720
probably a limitation that can be

00:23:14,400 --> 00:23:21,540
removed on I've been trying to push for

00:23:18,720 --> 00:23:24,330
that to get updated that it's not the

00:23:21,540 --> 00:23:28,800
SDK teens faulted more they got a long

00:23:24,330 --> 00:23:31,740
long their plate so i may have to jump

00:23:28,800 --> 00:23:34,440
in to help there however it's not not

00:23:31,740 --> 00:23:38,040
always lost to test your scope on the

00:23:34,440 --> 00:23:43,230
phone it's a all you basically have to

00:23:38,040 --> 00:23:48,720
do is on the sdk hit you'll publish icon

00:23:43,230 --> 00:23:52,110
on the left of the sdk and basically you

00:23:48,720 --> 00:23:53,730
have two options you can or this these

00:23:52,110 --> 00:23:56,070
two buttons on their screen you build

00:23:53,730 --> 00:23:58,440
invalidate your cliq package that will

00:23:56,070 --> 00:24:01,500
make the click click package and then

00:23:58,440 --> 00:24:03,390
you can click install on the device so

00:24:01,500 --> 00:24:07,320
as long as you have your device plugged

00:24:03,390 --> 00:24:09,330
in you can get install in the rice and

00:24:07,320 --> 00:24:11,760
then it will be on the device to play

00:24:09,330 --> 00:24:14,030
with obviously this means that the sdk

00:24:11,760 --> 00:24:18,990
and the device won't be connected in

00:24:14,030 --> 00:24:21,060
terms of debugging or gdb but yeah at

00:24:18,990 --> 00:24:24,950
least you can run the scope on the phone

00:24:21,060 --> 00:24:31,880
you can test it and yeah

00:24:24,950 --> 00:24:35,240
so that's the route we take now well in

00:24:31,880 --> 00:24:38,330
terms of speaking of running scopes I

00:24:35,240 --> 00:24:41,240
have a question and you know if we are

00:24:38,330 --> 00:24:44,390
going to see improvements to the unity

00:24:41,240 --> 00:24:47,840
scopes to which is a tool that currently

00:24:44,390 --> 00:24:53,180
allows to run scopes and s up outside of

00:24:47,840 --> 00:24:56,270
the dash in a small window that's I came

00:24:53,180 --> 00:24:58,910
to the in hate that Z is unit eight dash

00:24:56,270 --> 00:25:03,230
Turing umesh we are going to

00:24:58,910 --> 00:25:06,890
improvements to that twist tool okay so

00:25:03,230 --> 00:25:10,990
yeah this is another big problem okay I

00:25:06,890 --> 00:25:10,990
think I should stop saying problem

00:25:11,230 --> 00:25:18,140
interesting challenge we have we have a

00:25:16,280 --> 00:25:22,130
bit of a challenge going forward with

00:25:18,140 --> 00:25:24,500
the unity scope tool and and it makes

00:25:22,130 --> 00:25:28,520
total sense when I explain it currently

00:25:24,500 --> 00:25:32,150
we have to have very specific scopes API

00:25:28,520 --> 00:25:34,580
and all the backend aprs and libraries

00:25:32,150 --> 00:25:39,050
install on your desktop in order to run

00:25:34,580 --> 00:25:40,880
that tool so if you're I mean you may be

00:25:39,050 --> 00:25:42,200
wanting to target an old phone this is

00:25:40,880 --> 00:25:45,050
going to become a problem going forward

00:25:42,200 --> 00:25:47,330
if you're targeting in older image and

00:25:45,050 --> 00:25:49,820
say you're on the bleeding edge ubuntu

00:25:47,330 --> 00:25:51,560
on your desktop we suddenly start

00:25:49,820 --> 00:25:53,300
running into the possibility of a

00:25:51,560 --> 00:25:56,630
problem between your desktop having

00:25:53,300 --> 00:26:00,710
api's or at least the framework that's

00:25:56,630 --> 00:26:03,410
not tied in with the the phone now the

00:26:00,710 --> 00:26:06,770
unity scope tool and our to root

00:26:03,410 --> 00:26:09,140
frameworks are not working together at

00:26:06,770 --> 00:26:12,380
the moment and that's the issue so going

00:26:09,140 --> 00:26:16,370
forward we're going to have to do some

00:26:12,380 --> 00:26:18,430
kind of virtualization and so so this is

00:26:16,370 --> 00:26:21,430
on the cards for improvements yeah

00:26:18,430 --> 00:26:25,160
basically we're going to either have to

00:26:21,430 --> 00:26:28,520
improve our emulator and that that would

00:26:25,160 --> 00:26:30,560
be the Android approach towards things

00:26:28,520 --> 00:26:34,550
you have an emulator and that would

00:26:30,560 --> 00:26:37,220
totally emulate the entire system so you

00:26:34,550 --> 00:26:38,690
know going going forward you can be on

00:26:37,220 --> 00:26:41,480
xenia land go have an

00:26:38,690 --> 00:26:42,980
you later for vivid tested out stick it

00:26:41,480 --> 00:26:46,370
on your vivid phone and no that's going

00:26:42,980 --> 00:26:50,710
to work so yeah that there's a whole lot

00:26:46,370 --> 00:26:54,440
of really big things planned for that

00:26:50,710 --> 00:26:56,690
the other option is to obviously just

00:26:54,440 --> 00:26:59,780
ensure that the frameworks from the

00:26:56,690 --> 00:27:01,760
chroot can be run or Alexei containers

00:26:59,780 --> 00:27:05,810
that there's a couple of options we can

00:27:01,760 --> 00:27:09,680
take there but yet the unity scope tool

00:27:05,810 --> 00:27:14,450
as it is right now may look a lot

00:27:09,680 --> 00:27:16,130
different come a few months so yeah

00:27:14,450 --> 00:27:20,440
there are some big plans the big

00:27:16,130 --> 00:27:24,020
improvements that need to happen nice a

00:27:20,440 --> 00:27:26,210
question from dragonbyte these scopes

00:27:24,020 --> 00:27:29,030
are for unity 8 which is coming to the

00:27:26,210 --> 00:27:31,640
stop soon and there is a tablet to come

00:27:29,030 --> 00:27:33,980
to come out in March does the different

00:27:31,640 --> 00:27:39,920
form factors cause any problems with

00:27:33,980 --> 00:27:41,750
development and the beginning no we've

00:27:39,920 --> 00:27:46,190
actually subscribes have been designed

00:27:41,750 --> 00:27:49,400
to be adaptive to different to different

00:27:46,190 --> 00:27:54,860
screen sizes if you look at your

00:27:49,400 --> 00:27:57,740
category layouts when you pass back when

00:27:54,860 --> 00:28:00,890
you pass back your preview objects from

00:27:57,740 --> 00:28:04,540
the preview method you can go and set up

00:28:00,890 --> 00:28:07,300
how you want your how you want the

00:28:04,540 --> 00:28:09,770
elements to appear on your preview

00:28:07,300 --> 00:28:12,950
depending on how many columns appear and

00:28:09,770 --> 00:28:15,740
that's that's really how it adapts to

00:28:12,950 --> 00:28:17,420
your larger screen so your scope can

00:28:15,740 --> 00:28:19,340
look a certain way if there's only one

00:28:17,420 --> 00:28:22,580
column and then you open it up maybe to

00:28:19,340 --> 00:28:25,330
a larger phone it has two columns and

00:28:22,580 --> 00:28:30,050
then a tablet has three columns etc

00:28:25,330 --> 00:28:32,720
there same I mean it's very likely we're

00:28:30,050 --> 00:28:35,660
going to have a whole bunch of new

00:28:32,720 --> 00:28:38,020
challenges to have to meet as we

00:28:35,660 --> 00:28:40,400
continue with the convergent story but

00:28:38,020 --> 00:28:43,610
currently just following that category

00:28:40,400 --> 00:28:48,380
layout scheme with we've really got a

00:28:43,610 --> 00:28:51,230
nice experience we've got the same

00:28:48,380 --> 00:28:52,490
scopes running on phones tablets and PCs

00:28:51,230 --> 00:28:55,760
already being demoed

00:28:52,490 --> 00:28:58,880
they're ready to be demoed at mwc as

00:28:55,760 --> 00:29:00,520
well they're looking really good so then

00:28:58,880 --> 00:29:04,160
I guess is another great thing about

00:29:00,520 --> 00:29:06,440
developing scopes is that you develop a

00:29:04,160 --> 00:29:08,809
scope now that scope is going to last a

00:29:06,440 --> 00:29:10,460
really long time it's it's going to

00:29:08,809 --> 00:29:13,520
stand the test of time it's going to end

00:29:10,460 --> 00:29:17,420
up on the PCs one day it's a really good

00:29:13,520 --> 00:29:20,059
investment rather than I mean a nap may

00:29:17,420 --> 00:29:23,710
may I mean the nap causes more problems

00:29:20,059 --> 00:29:23,710
in the scope it's just for the bedroom

00:29:25,809 --> 00:29:32,510
yeah one thing to note about this is

00:29:28,250 --> 00:29:36,050
that after a few years of a lot of

00:29:32,510 --> 00:29:39,440
Chinese the API is no very stable and I

00:29:36,050 --> 00:29:43,220
know that the team is committed to not

00:29:39,440 --> 00:29:46,250
drag this API so this is very good

00:29:43,220 --> 00:29:51,620
looking maybe one or two years three

00:29:46,250 --> 00:29:56,110
years forward scopes are a stable which

00:29:51,620 --> 00:29:58,730
is good dragonbyte is asking any

00:29:56,110 --> 00:30:00,620
suggestion for the for development and

00:29:58,730 --> 00:30:03,950
the beginning scopes when you don't have

00:30:00,620 --> 00:30:10,370
anybody from you or just I'll just use

00:30:03,950 --> 00:30:15,800
the SDK in ghetto personally I would

00:30:10,370 --> 00:30:21,620
suggest to use in iscap stool which is

00:30:15,800 --> 00:30:26,450
what pops up by default when you pick a

00:30:21,620 --> 00:30:29,000
desktop kids in the in the SDK and you

00:30:26,450 --> 00:30:34,940
try to run a scope it will just upon

00:30:29,000 --> 00:30:39,110
this tool and I wouldn't recommend the

00:30:34,940 --> 00:30:41,420
emulator simulator right now it's quite

00:30:39,110 --> 00:30:47,840
buggy and out of people are having

00:30:41,420 --> 00:30:50,360
issues with it so yeah in fact even so

00:30:47,840 --> 00:30:53,120
if I could say this even if you do have

00:30:50,360 --> 00:30:55,730
a phone it's actually really useful to

00:30:53,120 --> 00:30:57,470
run the scope from the SDK as well

00:30:55,730 --> 00:30:59,630
because the really nice thing you get

00:30:57,470 --> 00:31:01,910
with the tool that pops up is that you

00:30:59,630 --> 00:31:03,740
can drag it larger you can full screen

00:31:01,910 --> 00:31:05,179
it and then you can test your column

00:31:03,740 --> 00:31:06,350
layouts like we're talking about just

00:31:05,179 --> 00:31:08,539
now so you can

00:31:06,350 --> 00:31:10,220
try it out as a full screen application

00:31:08,539 --> 00:31:12,260
you can try you know stretch it to a

00:31:10,220 --> 00:31:14,210
tablet size stretch long way stretch it

00:31:12,260 --> 00:31:17,390
wide ways and you can see what it looks

00:31:14,210 --> 00:31:20,150
like in different profiles that that's

00:31:17,390 --> 00:31:22,669
really useful anyway and in fact testing

00:31:20,150 --> 00:31:29,030
on the device for me is is something I

00:31:22,669 --> 00:31:32,230
do nearer to the end anyway so yeah also

00:31:29,030 --> 00:31:36,049
note that you can you can with this to

00:31:32,230 --> 00:31:41,870
change your category and card layouts

00:31:36,049 --> 00:31:44,840
you can try completely different play

00:31:41,870 --> 00:31:47,510
out just in the tool and see if it works

00:31:44,840 --> 00:31:58,520
for your scalp or not so this is very

00:31:47,510 --> 00:32:05,570
interesting looks like we are out of

00:31:58,520 --> 00:32:11,770
questions for now so Marcus you have

00:32:05,570 --> 00:32:11,770
been working on you two for or longer

00:32:11,980 --> 00:32:18,289
I've been working at the company for how

00:32:14,720 --> 00:32:23,240
long well at the company and with Boone

00:32:18,289 --> 00:32:28,010
to follow me Oh with ubuntu ah for very

00:32:23,240 --> 00:32:29,960
long I've I've never really stuck to one

00:32:28,010 --> 00:32:33,470
specific operating system for a long

00:32:29,960 --> 00:32:35,960
time I used to be a windows gone and I

00:32:33,470 --> 00:32:38,510
switch to mac and but no matter which

00:32:35,960 --> 00:32:41,539
operating system i was using i always

00:32:38,510 --> 00:32:45,140
had a vm or a server running with ubuntu

00:32:41,539 --> 00:32:48,500
sir or you know a Raspberry Pi running

00:32:45,140 --> 00:32:52,760
ubuntu on it so I I've always got ubuntu

00:32:48,500 --> 00:33:00,289
in my life sir probably hmm 15 years

00:32:52,760 --> 00:33:04,159
maybe it's one thing i really i'm a C++

00:33:00,289 --> 00:33:06,350
programmer so one thing I i do a lot as

00:33:04,159 --> 00:33:09,260
in any of my open source projects that i

00:33:06,350 --> 00:33:11,570
right I always intend to have them cross

00:33:09,260 --> 00:33:15,440
platform so we're going to is my

00:33:11,570 --> 00:33:17,780
development machine toys and so I've

00:33:15,440 --> 00:33:20,150
always got a mix I'm got a windows

00:33:17,780 --> 00:33:23,240
machine and a mac and avoid I always got

00:33:20,150 --> 00:33:25,250
something to test my programs across but

00:33:23,240 --> 00:33:30,590
we're going to as always my go-to for

00:33:25,250 --> 00:33:33,740
development cool and can you tell us a

00:33:30,590 --> 00:33:36,500
bit more about oh no Jas integrates with

00:33:33,740 --> 00:33:39,950
JavaScript scopes I mean it is the

00:33:36,500 --> 00:33:45,020
angina VI in JavaScript scopes and it

00:33:39,950 --> 00:33:47,630
powers buying the beddings but um ah

00:33:45,020 --> 00:33:52,850
does he integrates easy chip on the

00:33:47,630 --> 00:33:58,670
phone do you ship it with the scope can

00:33:52,850 --> 00:34:01,070
you explain her okay all right so yeah

00:33:58,670 --> 00:34:03,860
just quickly to maybe answer other

00:34:01,070 --> 00:34:05,900
questions though node was the best

00:34:03,860 --> 00:34:11,000
choice for us to go we had a whole lot

00:34:05,900 --> 00:34:14,300
of other options like acute options qjs

00:34:11,000 --> 00:34:16,850
engine and or even using v8 directly but

00:34:14,300 --> 00:34:20,720
node was by far the best option to take

00:34:16,850 --> 00:34:24,649
and over and above all other advantages

00:34:20,720 --> 00:34:26,870
the npm the library ecosystem definitely

00:34:24,649 --> 00:34:30,350
is there is the big reason why we went

00:34:26,870 --> 00:34:34,220
with that so yeah so we had a bit of a

00:34:30,350 --> 00:34:38,630
challenge getting node getting node into

00:34:34,220 --> 00:34:41,860
the story one of the major challenges is

00:34:38,630 --> 00:34:45,350
that node is an extremely active project

00:34:41,860 --> 00:34:48,590
which is a good thing but is very

00:34:45,350 --> 00:34:51,649
difficult for a system like a phone

00:34:48,590 --> 00:34:54,200
where you want to lock down system

00:34:51,649 --> 00:34:56,360
images that can be persistent for a long

00:34:54,200 --> 00:34:58,220
period of time so you go and choose a

00:34:56,360 --> 00:35:01,700
node version you go and stick it on the

00:34:58,220 --> 00:35:04,700
system image and two months later the

00:35:01,700 --> 00:35:08,150
node is changed so so what we did was

00:35:04,700 --> 00:35:13,040
and quite interestingly this was

00:35:08,150 --> 00:35:17,570
motivated by our our move towards a

00:35:13,040 --> 00:35:21,860
snappy approach and where dependencies

00:35:17,570 --> 00:35:24,110
are shipped with the package this way we

00:35:21,860 --> 00:35:27,020
so basically the route that we took was

00:35:24,110 --> 00:35:31,550
every scope is shipped with a node

00:35:27,020 --> 00:35:33,290
executable in it this is the unity jf

00:35:31,550 --> 00:35:37,370
scopes launcher

00:35:33,290 --> 00:35:40,970
that is basically rap snowed in inside

00:35:37,370 --> 00:35:43,490
it does a little bit of smarts with

00:35:40,970 --> 00:35:44,780
scope stuff just so that it encapsulate

00:35:43,490 --> 00:35:48,020
that and doesn't make it any more

00:35:44,780 --> 00:35:51,880
complicated and that way your scope can

00:35:48,020 --> 00:35:56,630
go and be shipped with node in it and

00:35:51,880 --> 00:35:59,870
what to put it plainly stand the test of

00:35:56,630 --> 00:36:04,100
time it can sit there and work for like

00:35:59,870 --> 00:36:05,810
two years or however long it basically

00:36:04,100 --> 00:36:07,400
very little is going to break it because

00:36:05,810 --> 00:36:10,610
all this dependencies are they in the

00:36:07,400 --> 00:36:13,040
package whenever you feel like you want

00:36:10,610 --> 00:36:14,830
to get latest version of node or you

00:36:13,040 --> 00:36:17,420
read about something interesting that

00:36:14,830 --> 00:36:20,570
node has updated and you would like that

00:36:17,420 --> 00:36:23,090
in your scope it's super simple you load

00:36:20,570 --> 00:36:25,310
up your scope project again and you

00:36:23,090 --> 00:36:28,000
build it and during the build we go and

00:36:25,310 --> 00:36:31,520
pull a new version of node for you and

00:36:28,000 --> 00:36:33,830
you've got new features already with you

00:36:31,520 --> 00:36:37,280
so you build your scope stick it back on

00:36:33,830 --> 00:36:41,690
the store and you've got now your scope

00:36:37,280 --> 00:36:43,790
works or the later version of node yeah

00:36:41,690 --> 00:36:47,060
this this is really good for many

00:36:43,790 --> 00:36:51,530
reasons you know one one concern is

00:36:47,060 --> 00:36:54,500
security as well node you know if you

00:36:51,530 --> 00:36:56,360
have a security update and you feel like

00:36:54,500 --> 00:37:01,040
your scope may be vulnerable to that

00:36:56,360 --> 00:37:03,640
security flaw then I you can update it

00:37:01,040 --> 00:37:06,860
straight away I get to scope back up and

00:37:03,640 --> 00:37:10,100
everyone's happy whereas if we were

00:37:06,860 --> 00:37:12,770
maintaining this the node version on the

00:37:10,100 --> 00:37:16,250
system image it could update get assist

00:37:12,770 --> 00:37:19,580
a good security update we updated but

00:37:16,250 --> 00:37:23,000
unfortunately that update maybe is an

00:37:19,580 --> 00:37:26,090
ABR breaking update and breaks your

00:37:23,000 --> 00:37:27,320
scope now ABR breaks are not something

00:37:26,090 --> 00:37:30,350
you're going to see if you're rebuilding

00:37:27,320 --> 00:37:32,420
your scope so you know there were a

00:37:30,350 --> 00:37:34,580
number of reasons why shipping node with

00:37:32,420 --> 00:37:38,750
your scope was a far better route to

00:37:34,580 --> 00:37:41,380
take so yeah that's that's how we

00:37:38,750 --> 00:37:41,380
integrate node

00:37:52,880 --> 00:38:00,960
David

00:37:54,580 --> 00:38:02,950
muted wow I was muted Cyril is that I

00:38:00,960 --> 00:38:05,530
for a moment I was wondering where the

00:38:02,950 --> 00:38:07,600
hours muted and what happened to whether

00:38:05,530 --> 00:38:10,840
gay talking Tomas allegory backmasking

00:38:07,600 --> 00:38:15,270
false documentation for scopes is the

00:38:10,840 --> 00:38:18,670
developer that will come yes it is but

00:38:15,270 --> 00:38:21,820
the JavaScript the JavaScript scoped

00:38:18,670 --> 00:38:24,820
project is rather new so we don't have a

00:38:21,820 --> 00:38:28,660
lot of code samples for example but

00:38:24,820 --> 00:38:34,180
we'll make sure we have a bit more

00:38:28,660 --> 00:38:35,770
before the end of the show down but yes

00:38:34,180 --> 00:38:37,480
pretty much you have the API

00:38:35,770 --> 00:38:40,090
documentation you have guide you have

00:38:37,480 --> 00:38:45,130
toid tutorials and that should cover

00:38:40,090 --> 00:38:48,220
pretty much of your used cases but you

00:38:45,130 --> 00:38:52,060
know if you are if you have any use

00:38:48,220 --> 00:38:56,290
cases that are not covered of anything

00:38:52,060 --> 00:39:01,960
that seemed and clear just please file

00:38:56,290 --> 00:39:05,200
back on developer / sorry developer dash

00:39:01,960 --> 00:39:10,480
into dash come launch pad I'm just

00:39:05,200 --> 00:39:13,510
pasting the link yeah one one thing that

00:39:10,480 --> 00:39:18,300
we do have in the project itself is what

00:39:13,510 --> 00:39:21,010
if you you can pull unity Jaya scopes

00:39:18,300 --> 00:39:26,400
examples i think is the package and

00:39:21,010 --> 00:39:29,260
you'll get like three example projects

00:39:26,400 --> 00:39:31,480
which is all right but i think they're

00:39:29,260 --> 00:39:36,970
little dated they don't cover all of the

00:39:31,480 --> 00:39:39,370
binary if I hate to tell people to do

00:39:36,970 --> 00:39:41,650
this but what is really useful I do it

00:39:39,370 --> 00:39:43,930
myself fall for a lot of projects if you

00:39:41,650 --> 00:39:48,520
go and pull the source of the unity Jaya

00:39:43,930 --> 00:39:49,630
scopes project I do this with other

00:39:48,520 --> 00:39:52,240
projects I don't think it's that

00:39:49,630 --> 00:39:54,340
ridiculous if you look through the unit

00:39:52,240 --> 00:39:58,540
is in fact not unitus we have

00:39:54,340 --> 00:40:02,850
integration tests we have a bunch of

00:39:58,540 --> 00:40:06,490
scopes that that we run and test against

00:40:02,850 --> 00:40:08,359
so these scopes we try to use as much as

00:40:06,490 --> 00:40:11,150
the of the bindings as possible

00:40:08,359 --> 00:40:13,160
so using those as examples is really it

00:40:11,150 --> 00:40:14,509
I mean it's what I do with other

00:40:13,160 --> 00:40:16,400
projects as well I like to go and

00:40:14,509 --> 00:40:18,410
checking out their tests because say

00:40:16,400 --> 00:40:20,509
stories you know that they attempt to

00:40:18,410 --> 00:40:22,849
get as much coverage as possible so

00:40:20,509 --> 00:40:25,130
there are some examples in the source

00:40:22,849 --> 00:40:27,319
itself as well so this is the examples

00:40:25,130 --> 00:40:29,989
package and then they are some examples

00:40:27,319 --> 00:40:33,920
in the source code as well and then the

00:40:29,989 --> 00:40:36,170
online documentation dragon by sea

00:40:33,920 --> 00:40:39,529
dragon bait is asking about what about

00:40:36,170 --> 00:40:45,680
back and forth questions like forum or

00:40:39,529 --> 00:40:49,369
IRC so I'm myself i'm pretty much all

00:40:45,680 --> 00:40:54,380
day on moving to dash ab daredevil which

00:40:49,369 --> 00:40:58,460
is zia IRC channel for ab development

00:40:54,380 --> 00:41:00,999
well app apps and scopes so you can ask

00:40:58,460 --> 00:41:05,029
questions there and I know there are

00:41:00,999 --> 00:41:12,529
some of the people that are invested in

00:41:05,029 --> 00:41:15,069
scopes that are in your own here macro

00:41:12,529 --> 00:41:18,739
CA you are suggesting going to devil

00:41:15,069 --> 00:41:22,099
I've always sneak out I've always seen

00:41:18,739 --> 00:41:25,849
it as a place for like very low little

00:41:22,099 --> 00:41:30,980
questions like camel time being I mean

00:41:25,849 --> 00:41:36,170
stuff like that but each other that's

00:41:30,980 --> 00:41:37,779
fine I guess okay okay yeah I might not

00:41:36,170 --> 00:41:40,279
be on the channel that you're suggesting

00:41:37,779 --> 00:41:45,230
what what channel were you suggesting we

00:41:40,279 --> 00:41:50,539
to dash app that little okay I should

00:41:45,230 --> 00:41:57,289
probably join that and then you have

00:41:50,539 --> 00:42:01,369
asked me to which is checked quite a lot

00:41:57,289 --> 00:42:03,849
and if you ask a question about about

00:42:01,369 --> 00:42:13,239
Scopes there you should have answer

00:42:03,849 --> 00:42:13,239
quite fast I'm just going to a secure

00:42:16,440 --> 00:42:31,170
that's could be included come otherwise

00:42:27,280 --> 00:42:34,660
I mean we do a launch pad also has Q&A

00:42:31,170 --> 00:42:37,450
it's not necessarily a bug and you just

00:42:34,660 --> 00:42:43,780
have a question you can go to the unit

00:42:37,450 --> 00:42:46,960
ejs scopes project and yeah good there's

00:42:43,780 --> 00:42:50,290
a answers section let me get a link to

00:42:46,960 --> 00:42:54,880
the actual project yes hold on to the

00:42:50,290 --> 00:42:56,710
smart questions but we have yeah we've

00:42:54,880 --> 00:43:00,849
had two questions on there as well and

00:42:56,710 --> 00:43:05,950
we treat that the same as bugs in that

00:43:00,849 --> 00:43:07,720
we check them often enough and yeah

00:43:05,950 --> 00:43:18,609
we'll try to get back to you soon as

00:43:07,720 --> 00:43:29,349
possible nice um so I were I've been

00:43:18,609 --> 00:43:33,099
writing a Java Script scope and so I've

00:43:29,349 --> 00:43:35,560
been I have had some issues but maybe

00:43:33,099 --> 00:43:42,569
because I don't have a lot of experience

00:43:35,560 --> 00:43:42,569
with drew script about callbacks and I

00:43:42,780 --> 00:43:54,420
come from a Python background and so

00:43:46,690 --> 00:43:57,579
callbacks are a bit foreign to me um and

00:43:54,420 --> 00:44:01,930
do you have good examples of how to deal

00:43:57,579 --> 00:44:05,619
with callbacks from wave api's with the

00:44:01,930 --> 00:44:07,900
scripts it I think it's probably best to

00:44:05,619 --> 00:44:12,099
put it this way when you're when you're

00:44:07,900 --> 00:44:16,000
dealing with node uh it's it's just the

00:44:12,099 --> 00:44:21,069
way things are done it's people call it

00:44:16,000 --> 00:44:23,140
callback hell it can become that but it

00:44:21,069 --> 00:44:25,869
can be managed in fact I looked at you

00:44:23,140 --> 00:44:27,310
occurred from the first session and then

00:44:25,869 --> 00:44:28,510
that's a really nice way of doing it and

00:44:27,310 --> 00:44:31,020
that's that's the best

00:44:28,510 --> 00:44:34,360
thing I can suggest you essentially

00:44:31,020 --> 00:44:36,610
define your function as its own

00:44:34,360 --> 00:44:38,410
standalone section of code and later

00:44:36,610 --> 00:44:40,450
when you go and pass back what should be

00:44:38,410 --> 00:44:41,920
called the callback just put the name of

00:44:40,450 --> 00:44:43,920
that function rather than going and

00:44:41,920 --> 00:44:48,280
defining the whole thing in there like a

00:44:43,920 --> 00:44:49,870
lambda so that's a yeah that that really

00:44:48,280 --> 00:44:52,900
is the suggestion and that is the

00:44:49,870 --> 00:44:57,490
suggestion you will read online for

00:44:52,900 --> 00:45:01,330
using all kinds of node libraries it's

00:44:57,490 --> 00:45:03,310
just a node thing it callbacks all over

00:45:01,330 --> 00:45:07,600
the place it has to be that way because

00:45:03,310 --> 00:45:10,740
there is no there's no parallel threads

00:45:07,600 --> 00:45:15,130
per se not not at least available to you

00:45:10,740 --> 00:45:17,500
you you need to work within their main

00:45:15,130 --> 00:45:19,660
thread so if you want something to be

00:45:17,500 --> 00:45:22,840
called later or done in parallel it's

00:45:19,660 --> 00:45:30,580
all callbacks yes I've seen it called

00:45:22,840 --> 00:45:37,740
the callbacks ira need of help and yes

00:45:30,580 --> 00:45:41,650
dig into this can we use things like

00:45:37,740 --> 00:45:46,030
promises in scopes because no Jes has as

00:45:41,650 --> 00:45:51,420
this concept of promises where data from

00:45:46,030 --> 00:45:51,420
a callback is sent only when it's fear

00:45:52,170 --> 00:46:01,210
right yeah there's actually a promise

00:45:55,990 --> 00:46:05,640
library in n p.m. yes but as far as you

00:46:01,210 --> 00:46:16,180
know it's fine to use with scopes right

00:46:05,640 --> 00:46:19,000
um yeah it would be a have to have to be

00:46:16,180 --> 00:46:21,820
a case of Triton Edison anything goes

00:46:19,000 --> 00:46:25,300
wrong because it's a it should be all

00:46:21,820 --> 00:46:27,610
right see the thing with node is it

00:46:25,300 --> 00:46:31,360
really takes a lot of resource

00:46:27,610 --> 00:46:33,700
management out of our hands they have a

00:46:31,360 --> 00:46:35,590
lot of really smart stuff happening to

00:46:33,700 --> 00:46:38,890
make sure that objects are kept alive

00:46:35,590 --> 00:46:40,600
long enough that they don't get

00:46:38,890 --> 00:46:41,740
destroyed and things when they're still

00:46:40,600 --> 00:46:44,470
in scope of

00:46:41,740 --> 00:46:47,680
that should be called later so if you do

00:46:44,470 --> 00:46:49,750
use this it should be all right even if

00:46:47,680 --> 00:46:52,330
you've exited the scope of something

00:46:49,750 --> 00:46:56,380
else the objects that are required

00:46:52,330 --> 00:46:58,300
should still be a lot of etc sir yeah I

00:46:56,380 --> 00:47:02,920
would expect it to work if it doesn't it

00:46:58,300 --> 00:47:05,820
would be scary because I would be on the

00:47:02,920 --> 00:47:10,030
node side that would be an issue there

00:47:05,820 --> 00:47:15,520
ok so i guess it folks I haven't really

00:47:10,030 --> 00:47:19,600
tried I just added the card and then

00:47:15,520 --> 00:47:22,570
found in the right but yeah keep pasting

00:47:19,600 --> 00:47:25,180
you thank me question from bragging

00:47:22,570 --> 00:47:30,570
rights what is the class the coolest

00:47:25,180 --> 00:47:30,570
copious and so far it's ibas pjs i'll go

00:47:32,910 --> 00:47:45,580
is the coolest group hmm it really

00:47:43,090 --> 00:47:47,920
depends i mean it depends on your on

00:47:45,580 --> 00:47:49,570
your interest for me music is my big

00:47:47,920 --> 00:47:51,700
interest sorry like the music skirt but

00:47:49,570 --> 00:47:54,040
it's not influenced by the language it

00:47:51,700 --> 00:48:00,730
was written in it's just because it's a

00:47:54,040 --> 00:48:03,070
cool scope yeah i like the music scope

00:48:00,730 --> 00:48:05,680
because there's a shower out there and

00:48:03,070 --> 00:48:07,600
you can listen to stuff right in the now

00:48:05,680 --> 00:48:11,580
with inline playback even you can listen

00:48:07,600 --> 00:48:11,580
to stuff rod in the scope so that's cool

00:48:12,240 --> 00:48:22,420
yeah for myself it's probably am well i

00:48:17,140 --> 00:48:26,670
use a lot the new scope and it's very

00:48:22,420 --> 00:48:31,750
handy suggest I've just put it right

00:48:26,670 --> 00:48:36,060
right of my app scope and just use all

00:48:31,750 --> 00:48:40,300
the time pretty much always refreshed so

00:48:36,060 --> 00:48:46,720
it works very nicely I believe it c++ or

00:48:40,300 --> 00:48:50,250
go I'm not sure and then I discovered a

00:48:46,720 --> 00:48:50,250
new scope recently which is

00:48:50,630 --> 00:48:57,599
the common line scope reach which caused

00:48:54,559 --> 00:49:00,569
come online through I think it's the

00:48:57,599 --> 00:49:06,720
name of the website and basically just a

00:49:00,569 --> 00:49:09,450
bunch of bash snippets and and said well

00:49:06,720 --> 00:49:12,450
one liners it's very cool and you can

00:49:09,450 --> 00:49:16,859
actually copy them from the preview to

00:49:12,450 --> 00:49:20,880
the terminal and very nice it's a very

00:49:16,859 --> 00:49:29,640
nice IV and this one I haven't looked

00:49:20,880 --> 00:49:32,010
but I think it's a sickness person a new

00:49:29,640 --> 00:49:39,000
Marcus do you have scopes published in

00:49:32,010 --> 00:49:40,920
the store well not necessarily in the

00:49:39,000 --> 00:49:45,569
store but I have worked on the media

00:49:40,920 --> 00:49:49,260
scopes of da mafia work on the music and

00:49:45,569 --> 00:49:56,400
video scopes what else that I worked on

00:49:49,260 --> 00:49:58,200
worked on the YouTube scope mmm I've

00:49:56,400 --> 00:50:02,490
done what I did a lot of work on the

00:49:58,200 --> 00:50:04,290
remote scopes yeah I've got a few scopes

00:50:02,490 --> 00:50:15,390
they're not necessarily on the storm up

00:50:04,290 --> 00:50:20,280
there on the phone nice i do have a few

00:50:15,390 --> 00:50:28,440
scoops myself i need to polish and

00:50:20,280 --> 00:50:32,210
release ah for example the github scope

00:50:28,440 --> 00:50:35,790
which is example from the last session

00:50:32,210 --> 00:50:39,990
the cut securely on google will

00:50:35,790 --> 00:50:42,630
evaporate calm / showdown and there you

00:50:39,990 --> 00:50:44,400
have the code for the github scope so

00:50:42,630 --> 00:50:49,920
it's pretty cool if you want to have a

00:50:44,400 --> 00:50:53,880
look at how it all works and oh you can

00:50:49,920 --> 00:50:57,180
just use a simple web api and get Philip

00:50:53,880 --> 00:50:58,740
your data on your screen it's pretty

00:50:57,180 --> 00:51:03,420
easy

00:50:58,740 --> 00:51:06,480
and Mac is so we tell you you talked

00:51:03,420 --> 00:51:08,940
about features and how they are can

00:51:06,480 --> 00:51:17,580
going to come for the best scripts cups

00:51:08,940 --> 00:51:19,920
Oh was this post walk what are they I

00:51:17,580 --> 00:51:25,550
mean we already have the bat once but

00:51:19,920 --> 00:51:27,900
the difference so okay so departments

00:51:25,550 --> 00:51:29,550
it's very easy to see the partners is

00:51:27,900 --> 00:51:31,470
the same thing but they're not if you

00:51:29,550 --> 00:51:34,740
think about it so if you think about

00:51:31,470 --> 00:51:37,530
Amazon or Ebay is a good example you've

00:51:34,740 --> 00:51:39,450
got like departments that you could go

00:51:37,530 --> 00:51:42,990
through so you want to look for maybe

00:51:39,450 --> 00:51:47,420
computer parts so you got computer or

00:51:42,990 --> 00:51:49,680
maybe consumer electronics computer and

00:51:47,420 --> 00:51:53,940
parts something like that that would be

00:51:49,680 --> 00:51:56,310
the the the department route that you

00:51:53,940 --> 00:51:58,560
take then once you have your in the

00:51:56,310 --> 00:52:00,150
correct department you're going to have

00:51:58,560 --> 00:52:02,119
a whole bunch of stuff you have a whole

00:52:00,150 --> 00:52:05,160
bunch of computer parts you know yeah

00:52:02,119 --> 00:52:10,020
cpus power supplies motherboards all

00:52:05,160 --> 00:52:11,940
kinds of stuff now filters but gets

00:52:10,020 --> 00:52:14,160
really useful when you want to go a bit

00:52:11,940 --> 00:52:15,990
beyond what departments are available on

00:52:14,160 --> 00:52:18,180
the service so maybe they aren't

00:52:15,990 --> 00:52:20,130
departments like motherboards CPUs

00:52:18,180 --> 00:52:22,320
things like that so now filters you can

00:52:20,130 --> 00:52:24,540
do things like you can get really really

00:52:22,320 --> 00:52:26,580
crazy like okay I want things that

00:52:24,540 --> 00:52:29,220
include the tix motherboard I want

00:52:26,580 --> 00:52:32,790
things that are priced between so many

00:52:29,220 --> 00:52:35,520
dollars and so many dollars I want yeah

00:52:32,790 --> 00:52:37,440
a whole bunch of things that maybe for

00:52:35,520 --> 00:52:40,220
ebay things that have been listed in the

00:52:37,440 --> 00:52:42,570
last month and stuff like that and

00:52:40,220 --> 00:52:47,250
that's where filters gets really cool

00:52:42,570 --> 00:52:50,880
and yeah it's like a little icon you

00:52:47,250 --> 00:52:52,890
click next to the search bar although

00:52:50,880 --> 00:52:56,609
design might change so don't hold me to

00:52:52,890 --> 00:52:58,680
that and yeah you get a little pop over

00:52:56,609 --> 00:53:02,160
and you can you can select your filters

00:52:58,680 --> 00:53:04,170
and then it filters your results down it

00:53:02,160 --> 00:53:05,760
really makes narrowing down your

00:53:04,170 --> 00:53:09,869
searches especially in things like

00:53:05,760 --> 00:53:12,150
online stores maybe even large music

00:53:09,869 --> 00:53:14,400
databases for stuff like

00:53:12,150 --> 00:53:17,329
looking for the latest music from a

00:53:14,400 --> 00:53:21,599
certain band or things like that that

00:53:17,329 --> 00:53:23,520
that's really gets really useful yeah is

00:53:21,599 --> 00:53:26,210
so we are going to be able to pick

00:53:23,520 --> 00:53:35,099
several filters follow the same worry

00:53:26,210 --> 00:53:39,240
okay yeah that's cool and we are about

00:53:35,099 --> 00:53:42,150
to we're reaching the end of session if

00:53:39,240 --> 00:53:49,410
you have any more questions they should

00:53:42,150 --> 00:53:52,740
be asked now um what else so you have

00:53:49,410 --> 00:53:56,430
about some four weeks a bit less to

00:53:52,740 --> 00:54:02,010
enter the scopes contest there are

00:53:56,430 --> 00:54:09,329
already a few entries and the quite fun

00:54:02,010 --> 00:54:12,000
to play with um so this captured on is

00:54:09,329 --> 00:54:17,099
for scopes written in C++ Java scripts

00:54:12,000 --> 00:54:20,369
and go as a bunch of prizes to win and

00:54:17,099 --> 00:54:29,849
I'm just going to paste the URL one more

00:54:20,369 --> 00:54:33,750
time r it is and for example for the

00:54:29,849 --> 00:54:37,890
first prize is a system 76 me a cat with

00:54:33,750 --> 00:54:42,210
which is a mini computer she's very cool

00:54:37,890 --> 00:54:48,510
looking and it's like an int'l neck for

00:54:42,210 --> 00:54:54,900
example but with a 5th gen generation I

00:54:48,510 --> 00:54:58,859
five educator from this kind of stuff we

00:54:54,900 --> 00:55:03,809
also have a convergence back packs which

00:54:58,859 --> 00:55:06,690
are bluetooth keyboards and mouse and we

00:55:03,809 --> 00:55:11,670
have ubuntu phone with which are we Q

00:55:06,690 --> 00:55:14,730
equals e five and we also have IRA like

00:55:11,670 --> 00:55:19,470
that valve steam link and steam

00:55:14,730 --> 00:55:22,619
controllers which are really cool what

00:55:19,470 --> 00:55:24,710
else we have a raspberry pi 2 we have a

00:55:22,619 --> 00:55:27,980
prize in the contest

00:55:24,710 --> 00:55:31,339
the innovation prize which is for the

00:55:27,980 --> 00:55:35,180
most innovative and creative scope so if

00:55:31,339 --> 00:55:38,150
you have crazy ideas for example I've

00:55:35,180 --> 00:55:41,839
always had this idea of having a game

00:55:38,150 --> 00:55:43,190
made in the scope so I'm not sure it or

00:55:41,839 --> 00:55:46,750
it would walk maybe it will be an

00:55:43,190 --> 00:55:51,200
adventure game where you pick your next

00:55:46,750 --> 00:55:53,930
your next step but yeah for the most

00:55:51,200 --> 00:55:56,900
creative scope we have a raspberry pi to

00:55:53,930 --> 00:56:01,700
the steam controller and the convergence

00:55:56,900 --> 00:56:08,359
back so that's quite a lot of cool

00:56:01,700 --> 00:56:13,250
prizes and yeah if if you feel like

00:56:08,359 --> 00:56:16,580
making the scope I would hear new to two

00:56:13,250 --> 00:56:18,050
scopes I would invite you to make them

00:56:16,580 --> 00:56:22,070
in the vast script because it's really

00:56:18,050 --> 00:56:30,770
fast and you can really add a prototype

00:56:22,070 --> 00:56:33,020
in style workflow it's quite easy and

00:56:30,770 --> 00:56:37,250
yeah if you have any questions or if you

00:56:33,020 --> 00:56:39,650
can reach out to us on IRC on google to

00:56:37,250 --> 00:56:45,950
dash at that level and moving to dash

00:56:39,650 --> 00:56:48,140
devil on google+ twitter the regular

00:56:45,950 --> 00:56:52,599
moving to ab development accounts and

00:56:48,140 --> 00:56:57,490
we'll be there to answer your questions

00:56:52,599 --> 00:56:57,490
so do we have any more questions on IRC

00:57:00,099 --> 00:57:11,240
doesn't seem so Marcus do you have a

00:57:03,140 --> 00:57:16,220
less fold one last words have fun no

00:57:11,240 --> 00:57:20,480
yeah yeah I agree with David JavaScript

00:57:16,220 --> 00:57:23,000
scopes to give it a try if you I mean if

00:57:20,480 --> 00:57:26,750
you have any learning curve to to have

00:57:23,000 --> 00:57:29,300
to take on on scopes at all javascript

00:57:26,750 --> 00:57:33,650
is going to be by far the gentlest the

00:57:29,300 --> 00:57:35,119
curve so yeah remember to log bugs and

00:57:33,650 --> 00:57:37,339
questions as soon as you find them and

00:57:35,119 --> 00:57:38,800
we will try and get to them as soon as

00:57:37,339 --> 00:57:42,350
we can

00:57:38,800 --> 00:57:44,270
thanks Marcus thanks everyone for

00:57:42,350 --> 00:57:48,080
watching thanks for the question was

00:57:44,270 --> 00:57:54,290
really fun and there is another skype

00:57:48,080 --> 00:57:57,850
session which is tomorrow and you have

00:57:54,290 --> 00:58:00,830
any more questions I'll be there with

00:57:57,850 --> 00:58:08,210
maybe Marcus and maybe someone else from

00:58:00,830 --> 00:58:12,400
zoosk up steam we'll see bye everyone

00:58:08,210 --> 00:58:12,400

YouTube URL: https://www.youtube.com/watch?v=i7kHZc9M0pg


