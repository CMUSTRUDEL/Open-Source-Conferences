Title: LSB for Debian BoF
Publication date: 2017-12-02
Playlist: DebConf 14
Description: 
	by Didier Raboud

At: DebConf14
https://debconf14.debconf.org/
Room: Room 329
Scheduled start: 2014-08-24 19:00:00
Captions: 
	00:00:00,060 --> 00:00:05,970
so welcome to the Ellis people I'm bad

00:00:03,120 --> 00:00:08,610
we are more than two people so here's

00:00:05,970 --> 00:00:10,650
the little agenda have prepared just a

00:00:08,610 --> 00:00:12,929
short introduction on what's LSB if you

00:00:10,650 --> 00:00:15,210
don't know then discuss thesaurus

00:00:12,929 --> 00:00:17,340
package in Debian to specific binary

00:00:15,210 --> 00:00:20,430
packages that are LSB phase and LSB

00:00:17,340 --> 00:00:22,230
release and open discussion action

00:00:20,430 --> 00:00:24,199
points and feel free to interrupt at any

00:00:22,230 --> 00:00:29,099
given time if you have complements

00:00:24,199 --> 00:00:30,869
informations questions whatever so

00:00:29,099 --> 00:00:32,369
what's a lesbian from leukopenia

00:00:30,869 --> 00:00:33,719
the LSB is designed to be binary

00:00:32,369 --> 00:00:35,280
compatible and produce a stable

00:00:33,719 --> 00:00:38,010
application binary interface for

00:00:35,280 --> 00:00:41,070
independent software vendors you can

00:00:38,010 --> 00:00:43,680
check the link if you want the spec

00:00:41,070 --> 00:00:46,020
actually lists very extensively all

00:00:43,680 --> 00:00:48,390
interfaces so binary interfaces data

00:00:46,020 --> 00:00:50,010
definitions precisely so including the

00:00:48,390 --> 00:00:52,620
headers of the lavars libraries that

00:00:50,010 --> 00:00:54,660
have to be into they'll have to be into

00:00:52,620 --> 00:00:56,670
a given distribution the surnames etc

00:00:54,660 --> 00:01:00,030
across multiple architectures I think

00:00:56,670 --> 00:01:05,010
something like 14 architectures there

00:01:00,030 --> 00:01:08,180
was s 390x introduced recently in LSB

00:01:05,010 --> 00:01:10,380
well recently in terms of LSB time space

00:01:08,180 --> 00:01:14,250
like it was probably introduced last

00:01:10,380 --> 00:01:17,159
year unless B is there mostly as a

00:01:14,250 --> 00:01:19,799
useful reference for non free binaries

00:01:17,159 --> 00:01:21,570
so that you can compile them on amd64

00:01:19,799 --> 00:01:25,280
against a given set of libraries and

00:01:21,570 --> 00:01:28,950
expect that to work on any certified

00:01:25,280 --> 00:01:31,259
distribution and yeah it would just run

00:01:28,950 --> 00:01:33,840
without crashing and do what you want it

00:01:31,259 --> 00:01:36,210
to do of course if you have a free

00:01:33,840 --> 00:01:37,409
software you can just download the

00:01:36,210 --> 00:01:39,150
source and rebuild it in every

00:01:37,409 --> 00:01:42,390
distribution so it's not really there

00:01:39,150 --> 00:01:45,649
for for free software is more service

00:01:42,390 --> 00:01:47,899
from free software for non free vendors

00:01:45,649 --> 00:01:49,979
there are two tools that are available

00:01:47,899 --> 00:01:52,380
they're provided by the Linux Foundation

00:01:49,979 --> 00:01:53,939
one is an application checker that you

00:01:52,380 --> 00:01:56,610
can just upload your application and

00:01:53,939 --> 00:02:00,869
we'll check if the facia views are and

00:01:56,610 --> 00:02:02,460
the LSB released that you point to and

00:02:00,869 --> 00:02:04,500
the distribution checker that is

00:02:02,460 --> 00:02:07,590
something that will launch a virtual

00:02:04,500 --> 00:02:09,090
machine or within a machine I don't try

00:02:07,590 --> 00:02:09,580
to run that on your laptop because it

00:02:09,090 --> 00:02:11,260
will

00:02:09,580 --> 00:02:13,450
runners route and do many dirty things

00:02:11,260 --> 00:02:14,740
on your file system so that's why you

00:02:13,450 --> 00:02:19,420
should probably run it in a virtual

00:02:14,740 --> 00:02:22,270
machine last I tried it was a quite hard

00:02:19,420 --> 00:02:23,950
to run and the then you get like 500

00:02:22,270 --> 00:02:29,860
things that you have to fix in that bin

00:02:23,950 --> 00:02:32,020
and I probably mostly give up the source

00:02:29,860 --> 00:02:35,370
package in Debian you can check the

00:02:32,020 --> 00:02:38,140
tracker or the package pts for that

00:02:35,370 --> 00:02:40,510
basically is Jeff leaky and me for

00:02:38,140 --> 00:02:42,850
Debian Voland and some other people for

00:02:40,510 --> 00:02:45,340
you to have been also doing some changes

00:02:42,850 --> 00:02:48,130
there we have some differences between

00:02:45,340 --> 00:02:49,750
Debian and Ubuntu for mostly historical

00:02:48,130 --> 00:02:53,050
reasons they were implementing the

00:02:49,750 --> 00:02:55,270
upstart detection and feature functions

00:02:53,050 --> 00:02:57,700
there earlier than we have introduced in

00:02:55,270 --> 00:03:01,110
Debian and then we kind of have a little

00:02:57,700 --> 00:03:03,910
difference in some scripts for the exit

00:03:01,110 --> 00:03:06,700
the exit numbers that we should merge

00:03:03,910 --> 00:03:10,720
but it's a little tricky so it's just

00:03:06,700 --> 00:03:13,630
was pending work it's tricky to maintain

00:03:10,720 --> 00:03:16,930
well it's not a satisfied implementation

00:03:13,630 --> 00:03:19,000
Debian never actually went to Ellis to

00:03:16,930 --> 00:03:21,940
the new acceleration to get this do

00:03:19,000 --> 00:03:24,280
Debian certified mostly I think because

00:03:21,940 --> 00:03:26,680
no one was caring about that probably

00:03:24,280 --> 00:03:30,700
and because no one who was either asking

00:03:26,680 --> 00:03:32,830
for that the source package is a little

00:03:30,700 --> 00:03:35,200
tricky to maintain because if we don't

00:03:32,830 --> 00:03:39,130
do the check in then we just assume

00:03:35,200 --> 00:03:40,690
things work and then we just sometimes

00:03:39,130 --> 00:03:42,970
we have to do compromises for example

00:03:40,690 --> 00:03:46,200
the LSB for one that is supported in

00:03:42,970 --> 00:03:49,180
Weezy mandates QT 3 which was removed so

00:03:46,200 --> 00:03:51,760
we kind of decided we just add a readme

00:03:49,180 --> 00:03:53,890
so that if you need that you need to

00:03:51,760 --> 00:03:55,450
know there is a readme and it's read it

00:03:53,890 --> 00:03:58,840
and then you need to go and download the

00:03:55,450 --> 00:04:01,570
Qt 3 the latest QT 3 version compiled

00:03:58,840 --> 00:04:03,519
from the snapshots so the ID looked it's

00:04:01,570 --> 00:04:06,010
way better than having me or anyone else

00:04:03,519 --> 00:04:11,110
maintaining 53 for a time span of

00:04:06,010 --> 00:04:13,269
weezing the new problem that is that

00:04:11,110 --> 00:04:14,709
will probably hit back in some months is

00:04:13,269 --> 00:04:18,650
that it's probably vastly broken with

00:04:14,709 --> 00:04:21,949
system D because a large part of the LSP

00:04:18,650 --> 00:04:24,620
Espie norm is about how the inner

00:04:21,949 --> 00:04:26,600
scripts behave and what exactly you

00:04:24,620 --> 00:04:28,759
should put in an init script and how you

00:04:26,600 --> 00:04:31,690
interact with the in a script so that's

00:04:28,759 --> 00:04:35,660
probably broken now to the binaries

00:04:31,690 --> 00:04:38,090
there are two important binaries in the

00:04:35,660 --> 00:04:43,250
LSP package in fact I think there are 12

00:04:38,090 --> 00:04:44,780
the other one is our virtual like they

00:04:43,250 --> 00:04:46,789
only have dependencies like you can

00:04:44,780 --> 00:04:49,430
install LSB desktop and you get the

00:04:46,789 --> 00:04:52,729
dependencies to match what is mandated

00:04:49,430 --> 00:04:56,120
in the LSB desktop specification but

00:04:52,729 --> 00:04:57,830
these two are specific LSB bays and is

00:04:56,120 --> 00:04:59,780
one of the rare packages that are

00:04:57,830 --> 00:05:02,930
installed on all debit machines that

00:04:59,780 --> 00:05:05,090
which using CC init and is also running

00:05:02,930 --> 00:05:06,889
at every boot so it's shell script that

00:05:05,090 --> 00:05:09,680
is launched at every boot multiple times

00:05:06,889 --> 00:05:13,220
so trust me when you upload that you do

00:05:09,680 --> 00:05:16,310
it carefully remember the green house

00:05:13,220 --> 00:05:19,699
blocks and the wizzy boot that was in

00:05:16,310 --> 00:05:22,699
that that in that package it was

00:05:19,699 --> 00:05:24,410
actually a new thing in wizzy which

00:05:22,699 --> 00:05:27,260
makes me smile every time I see a busy

00:05:24,410 --> 00:05:29,630
machine boot but yeah it's for that

00:05:27,260 --> 00:05:31,729
anecdote so basically it has in it

00:05:29,630 --> 00:05:33,470
functions that implements some of the

00:05:31,729 --> 00:05:37,760
things that are mandated by LSB and that

00:05:33,470 --> 00:05:39,590
are used either by non Debian init

00:05:37,760 --> 00:05:41,210
scripts or by the benign scripts like

00:05:39,590 --> 00:05:43,699
the log daemon message and friends are

00:05:41,210 --> 00:05:45,949
all convenient functions to reduce

00:05:43,699 --> 00:05:47,539
output things to the screen and like you

00:05:45,949 --> 00:05:48,650
have one function to tell the first

00:05:47,539 --> 00:05:50,630
thing and then you have two or three

00:05:48,650 --> 00:05:52,099
functions that you can use to say this

00:05:50,630 --> 00:05:54,349
was done this wasn't just went on and

00:05:52,099 --> 00:05:56,510
had the points or other return lines and

00:05:54,349 --> 00:06:01,340
stuff like that there was also in it is

00:05:56,510 --> 00:06:04,099
upstart there was added I think after

00:06:01,340 --> 00:06:06,789
that was added to the policy just to

00:06:04,099 --> 00:06:10,310
make it easier to integrate the upstart

00:06:06,789 --> 00:06:12,880
in the system in Debian true but none of

00:06:10,310 --> 00:06:16,789
this is used was when using system D

00:06:12,880 --> 00:06:19,409
unless actually that's wrong unless you

00:06:16,789 --> 00:06:20,879
use the original in its crib

00:06:19,409 --> 00:06:23,969
and not the system Lee scripts because

00:06:20,879 --> 00:06:26,550
they will still run that show so unless

00:06:23,969 --> 00:06:29,489
we managed to transform all init scripts

00:06:26,550 --> 00:06:31,050
in Debian for Jesse to system the end

00:06:29,489 --> 00:06:35,039
with Rob CC in it which will not happen

00:06:31,050 --> 00:06:37,319
we can not drop that package at all this

00:06:35,039 --> 00:06:40,259
package has 13 powers of which 10 are no

00:06:37,319 --> 00:06:43,709
1 1 fix because like requests or wish

00:06:40,259 --> 00:06:47,729
lists that are not or just the diverge a

00:06:43,709 --> 00:06:49,019
little from the from the norm and there

00:06:47,729 --> 00:06:51,059
are some merging was you weren't betting

00:06:49,019 --> 00:06:53,279
there that we should just do to make

00:06:51,059 --> 00:06:56,009
sure we have the same I think it's bit

00:06:53,279 --> 00:06:59,639
of proc that has some tiny stupid

00:06:56,009 --> 00:07:03,360
differences that we just have to fix the

00:06:59,639 --> 00:07:05,939
other one is LSB release that chips a

00:07:03,360 --> 00:07:07,709
binary and your serve in to discriminate

00:07:05,939 --> 00:07:09,569
distributions basically LSB release will

00:07:07,709 --> 00:07:12,929
tell you if it's running itself on

00:07:09,569 --> 00:07:15,689
RedHat or on or on Debian or on you boo

00:07:12,929 --> 00:07:18,389
to in which version I mentioned the fact

00:07:15,689 --> 00:07:19,499
that it's silly because when you have a

00:07:18,389 --> 00:07:21,779
new application you should not be

00:07:19,499 --> 00:07:23,249
checking if if you are in on a certain

00:07:21,779 --> 00:07:25,379
distribution you should be checking for

00:07:23,249 --> 00:07:27,179
features so unless you do things for

00:07:25,379 --> 00:07:30,179
cloud or things that are at the

00:07:27,179 --> 00:07:31,860
distribution level no one should be

00:07:30,179 --> 00:07:39,029
using LSB release but

00:07:31,860 --> 00:07:40,499
94 source packages are doing that no

00:07:39,029 --> 00:07:46,319
there should not check for releases at

00:07:40,499 --> 00:07:49,139
all but yeah I mean it's used so and

00:07:46,319 --> 00:07:55,559
it's mandated in the LSB and people can

00:07:49,139 --> 00:07:57,360
assume it's theirs yeah exactly and the

00:07:55,559 --> 00:07:59,849
modules in which there are under

00:07:57,360 --> 00:08:03,409
architectures yep just speaking of Magra

00:07:59,849 --> 00:08:03,409
for just leave it there

00:08:04,240 --> 00:08:12,370
yeah pass it around I guess yeah yeah

00:08:07,090 --> 00:08:14,470
it's easy what the specific thing there

00:08:12,370 --> 00:08:15,340
is is that it's pilots pass on

00:08:14,470 --> 00:08:20,770
implementation

00:08:15,340 --> 00:08:23,950
quite old I try to add some some unit

00:08:20,770 --> 00:08:26,410
testing to be able to migrate that 2003

00:08:23,950 --> 00:08:28,270
without with a proper code but I just

00:08:26,410 --> 00:08:31,420
stopped in the middle of that because I

00:08:28,270 --> 00:08:33,550
mean it works with spice and - and we

00:08:31,420 --> 00:08:35,200
have Metin - anyway debian so I think

00:08:33,550 --> 00:08:38,110
you've been through as probably this

00:08:35,200 --> 00:08:42,070
automated fight in two to three thing

00:08:38,110 --> 00:08:43,599
which probably works or something but

00:08:42,070 --> 00:08:45,700
it's the via specific implementation

00:08:43,599 --> 00:08:47,410
that will gues build or invents the

00:08:45,700 --> 00:08:49,650
version number out of either the files

00:08:47,410 --> 00:08:52,570
from base files or using a PD cache

00:08:49,650 --> 00:08:54,550
smart which is broken

00:08:52,570 --> 00:08:57,280
apparently currently so it has three

00:08:54,550 --> 00:09:01,630
bugs that need to be checked but I

00:08:57,280 --> 00:09:03,880
didn't have time yeah that buff is going

00:09:01,630 --> 00:09:08,310
very fast that's good and now the open

00:09:03,880 --> 00:09:11,530
discussion what should be kept in Devon

00:09:08,310 --> 00:09:13,660
ie nothing so we'll just leave it as

00:09:11,530 --> 00:09:15,640
that I probably I would then orphan the

00:09:13,660 --> 00:09:19,360
package just to make it clear for

00:09:15,640 --> 00:09:21,700
everyone that I'm not caring about it we

00:09:19,360 --> 00:09:24,310
would keep LSB base analyst B release

00:09:21,700 --> 00:09:27,070
and drop the meta packages because they

00:09:24,310 --> 00:09:31,030
don't carry much interest if we're not

00:09:27,070 --> 00:09:34,240
certified fix the Box you know this bill

00:09:31,030 --> 00:09:36,750
really is an LSP bugs lsbe base don't

00:09:34,240 --> 00:09:39,880
touch the rest so we stay at LSB for one

00:09:36,750 --> 00:09:42,400
more fix the bugs upgrades to the latest

00:09:39,880 --> 00:09:45,160
LSP which is five with uh they have

00:09:42,400 --> 00:09:46,630
released better team but we need to do

00:09:45,160 --> 00:09:50,350
active checking otherwise it doesn't

00:09:46,630 --> 00:09:53,530
make much sense but that would need help

00:09:50,350 --> 00:09:55,390
because I spend a little time fixing the

00:09:53,530 --> 00:09:56,890
existing existing bugs mostly for the

00:09:55,390 --> 00:09:59,260
latest release and making sure

00:09:56,890 --> 00:10:01,690
some things were included and making

00:09:59,260 --> 00:10:03,400
sure LSB base was kind of useful but I

00:10:01,690 --> 00:10:07,449
don't have much interest in making

00:10:03,400 --> 00:10:11,029
non-free software work so yeah

00:10:07,449 --> 00:10:12,829
so I'll open the discussion I don't have

00:10:11,029 --> 00:10:18,170
much more to say than that so I welcome

00:10:12,829 --> 00:10:19,519
opinions volunteers or whatever or we

00:10:18,170 --> 00:10:23,810
can just stop and go to the beers to

00:10:19,519 --> 00:10:25,639
meet you can but good I have a question

00:10:23,810 --> 00:10:27,470
about the assistant D stuff have you

00:10:25,639 --> 00:10:28,970
been following as the LSP where group's

00:10:27,470 --> 00:10:33,410
anything about system D and what their

00:10:28,970 --> 00:10:36,350
antennas with the init scripts I don't

00:10:33,410 --> 00:10:42,440
know they have been discussing things

00:10:36,350 --> 00:10:43,759
yeah I think I just checked while

00:10:42,440 --> 00:10:45,709
preparing that I think they had a

00:10:43,759 --> 00:10:49,250
meeting in March and they said we do a

00:10:45,709 --> 00:10:51,259
github same and since then

00:10:49,250 --> 00:10:54,380
they're three unanswered pull requests

00:10:51,259 --> 00:10:57,860
there I don't to be mean that's just

00:10:54,380 --> 00:10:59,120
facts so I think they've been discussing

00:10:57,860 --> 00:11:01,220
the system D thing they've been

00:10:59,120 --> 00:11:03,529
discussing the dropping of qg3 for years

00:11:01,220 --> 00:11:05,870
I think it's being dropped in LSB five

00:11:03,529 --> 00:11:07,699
but much I don't know much more than

00:11:05,870 --> 00:11:19,670
that Jeff wouldn't know he's in both in

00:11:07,699 --> 00:11:23,600
there and speedran well make me think

00:11:19,670 --> 00:11:27,769
I'm not involved in not be maintenance

00:11:23,600 --> 00:11:30,589
of course that it's mostly a relic

00:11:27,769 --> 00:11:33,319
nowadays I mean do you know if it's

00:11:30,589 --> 00:11:38,389
really used in the non free world or is

00:11:33,319 --> 00:11:40,790
some promise we made and we we we keep

00:11:38,389 --> 00:11:43,550
because we are good at keeping promises

00:11:40,790 --> 00:11:46,160
I mean how important is it to to Debian

00:11:43,550 --> 00:11:48,050
or to any distribution I mean I think

00:11:46,160 --> 00:11:50,449
that's the core problem is that we don't

00:11:48,050 --> 00:11:52,730
know and I haven't had any feedback

00:11:50,449 --> 00:11:54,800
besides some people in using trying to

00:11:52,730 --> 00:11:58,910
install some random thing and having the

00:11:54,800 --> 00:12:01,459
init blob I mean the in and I think the

00:11:58,910 --> 00:12:03,560
scripts that installs the init is broken

00:12:01,459 --> 00:12:05,410
or was broken we just reverted something

00:12:03,560 --> 00:12:08,499
else

00:12:05,410 --> 00:12:09,730
I think the core the core problem is

00:12:08,499 --> 00:12:11,889
that we don't know we don't know if

00:12:09,730 --> 00:12:13,600
people are using it and I think we we

00:12:11,889 --> 00:12:15,970
have made a half promise I mean we

00:12:13,600 --> 00:12:18,189
promised that we do LSB and but there

00:12:15,970 --> 00:12:20,319
are viruses and readme files that just

00:12:18,189 --> 00:12:22,929
say this is not certified in this don't

00:12:20,319 --> 00:12:25,779
take it and take it granted as it will

00:12:22,929 --> 00:12:27,339
work so that's why I think either we do

00:12:25,779 --> 00:12:29,949
it properly and we make sure we certify

00:12:27,339 --> 00:12:31,720
it or we stop pretending and drop

00:12:29,949 --> 00:12:37,480
everything besides the singer actually

00:12:31,720 --> 00:12:39,009
needed and both need work and the no

00:12:37,480 --> 00:12:43,029
work thing is we just leave it at that

00:12:39,009 --> 00:12:44,829
for Jesse and just opening and okay you

00:12:43,029 --> 00:12:47,949
said about today well more or less the

00:12:44,829 --> 00:12:50,739
difference with a new situation but what

00:12:47,949 --> 00:12:55,449
kind of a thought or effort is given to

00:12:50,739 --> 00:12:57,160
LSB by other these fusions I think but I

00:12:55,449 --> 00:12:59,470
don't know I think Red Hat's manages to

00:12:57,160 --> 00:13:07,529
get itself certified I think you open

00:12:59,470 --> 00:13:12,429
Susie is getting itself certified - okay

00:13:07,529 --> 00:13:14,949
but decides that I don't know but just

00:13:12,429 --> 00:13:18,970
does anyone know in the audience if if

00:13:14,949 --> 00:13:21,519
LSB is used by people or is that an

00:13:18,970 --> 00:13:23,529
expectation from people I think it was

00:13:21,519 --> 00:13:25,119
more than just for ISPs part of the

00:13:23,529 --> 00:13:27,129
intent was to have binary portability

00:13:25,119 --> 00:13:30,999
between distributions and to ensure that

00:13:27,129 --> 00:13:34,239
no one distribution broke the ABI in

00:13:30,999 --> 00:13:35,919
such a way that that distros were going

00:13:34,239 --> 00:13:38,829
to start diverging so to some extent it

00:13:35,919 --> 00:13:41,259
was to prevent kind of what happened

00:13:38,829 --> 00:13:42,850
with with the UNIX where everything

00:13:41,259 --> 00:13:44,619
diverged and we wanted to keep you know

00:13:42,850 --> 00:13:47,139
what's one common standard so from that

00:13:44,619 --> 00:13:49,779
regard it still I think interesting to

00:13:47,139 --> 00:13:52,149
ensure that debian maintains a bi

00:13:49,779 --> 00:13:55,699
compliance but in terms of certification

00:13:52,149 --> 00:13:58,249
and some of the other tools I don't know

00:13:55,699 --> 00:14:00,949
worth the effort I mean it even mandates

00:13:58,249 --> 00:14:05,179
things in cups and I think the LSP

00:14:00,949 --> 00:14:07,389
mandates the support for cups 1.2 and we

00:14:05,179 --> 00:14:10,549
will have cups 2-0 in the next release

00:14:07,389 --> 00:14:12,589
and I'm almost sure the things that are

00:14:10,549 --> 00:14:14,959
broken in Abyei compressibility since

00:14:12,589 --> 00:14:17,480
then and we've not been checking you

00:14:14,959 --> 00:14:20,419
could do has not been checking and yeah

00:14:17,480 --> 00:14:22,459
and it's probably broken so the other

00:14:20,419 --> 00:14:25,399
thing is at one point we have a BTS tag

00:14:22,459 --> 00:14:28,129
that was associated I think we use Demi

00:14:25,399 --> 00:14:30,279
nutshells be at Lestat yeah Demi org is

00:14:28,129 --> 00:14:34,939
the BTS tag and when we encountered

00:14:30,279 --> 00:14:37,549
failures in the test suite bugs were

00:14:34,939 --> 00:14:41,660
filed on the appropriate packages and so

00:14:37,549 --> 00:14:45,889
I'm wondering if how many those still

00:14:41,660 --> 00:14:47,329
exist so you know you mentioned it you

00:14:45,889 --> 00:14:48,739
mentioned the bugs on the LSB packages

00:14:47,329 --> 00:14:50,389
themselves that are interesting to know

00:14:48,739 --> 00:14:53,029
how many of those are still open and

00:14:50,389 --> 00:14:55,160
then also you know if somebody wanted to

00:14:53,029 --> 00:14:57,339
run the notes again and see what's still

00:14:55,160 --> 00:14:59,899
failing and if new bugs need to be filed

00:14:57,339 --> 00:15:04,939
that effort might be kind of interesting

00:14:59,899 --> 00:15:07,399
but I mean yeah punch is welcome in the

00:15:04,939 --> 00:15:11,149
sense that I think the only way is to

00:15:07,399 --> 00:15:13,939
run regular Jenkins tests that would run

00:15:11,149 --> 00:15:15,559
that properly every you don't think you

00:15:13,939 --> 00:15:18,739
ever could be helps be test suite Turin

00:15:15,559 --> 00:15:20,449
run that way is at least unless they've

00:15:18,739 --> 00:15:23,569
done a lot of improvement it is a

00:15:20,449 --> 00:15:30,169
horrible mess that was inherited from a

00:15:23,569 --> 00:15:34,839
bunch of the old eunuchs it took a lot

00:15:30,169 --> 00:15:34,839
of effort to run yeah so yeah

00:15:36,570 --> 00:15:41,600
I mean my microphone feeding is if any

00:15:38,880 --> 00:15:45,330
if no one volunteers I will probably

00:15:41,600 --> 00:15:48,330
orphan it as is after fixing the easiest

00:15:45,330 --> 00:15:52,470
easy fixing bugs just to make it clear

00:15:48,330 --> 00:15:54,330
that nothing new will happen we have

00:15:52,470 --> 00:15:57,000
five days to merge the difference with

00:15:54,330 --> 00:16:02,340
Ubuntu guys and we'll just do that and

00:15:57,000 --> 00:16:04,680
then yeah I'm just reading the devs what

00:16:02,340 --> 00:16:08,610
we have in a bun too and it's not much

00:16:04,680 --> 00:16:10,620
yeah it's just a shell conditions in

00:16:08,610 --> 00:16:14,730
different organs I think and Python 3

00:16:10,620 --> 00:16:17,310
support yeah I mean the Python 3 is more

00:16:14,730 --> 00:16:18,660
a question for Debian decide if whether

00:16:17,310 --> 00:16:24,720
we want Python 3 in the phase

00:16:18,660 --> 00:16:27,690
installation or not and yeah because I

00:16:24,720 --> 00:16:32,070
mean because it's pulled by OSB released

00:16:27,690 --> 00:16:34,860
mostly LSP pays well as we release is

00:16:32,070 --> 00:16:38,490
pulled mostly by in build

00:16:34,860 --> 00:16:40,230
DD's I would say well yeah I did Lee for

00:16:38,490 --> 00:16:43,500
a lot of this packages you wanted to

00:16:40,230 --> 00:16:45,540
depend on either Python 2 or 3 the other

00:16:43,500 --> 00:16:47,760
said at least one of them is sufficient

00:16:45,540 --> 00:16:49,530
but not obviously shebang needs to

00:16:47,760 --> 00:16:52,470
re-examine derp the correct Python

00:16:49,530 --> 00:16:54,090
that's available I was like that I mean

00:16:52,470 --> 00:16:57,920
I've done that for a couple of packages

00:16:54,090 --> 00:16:57,920
where I actually wanted out but

00:16:59,880 --> 00:17:05,160
does anybody know what's in LSB five

00:17:02,029 --> 00:17:09,089
I've checked rapidly I think just more

00:17:05,160 --> 00:17:12,030
libraries some updates and yeah I didn't

00:17:09,089 --> 00:17:13,500
check wanna say so because that might

00:17:12,030 --> 00:17:15,809
make a big difference whether you decide

00:17:13,500 --> 00:17:17,039
to keep maintaining it or not I mean if

00:17:15,809 --> 00:17:19,169
there's gonna be no solution for the

00:17:17,039 --> 00:17:20,459
system B stuff and there's other

00:17:19,169 --> 00:17:26,160
dependencies that are gonna be hard for

00:17:20,459 --> 00:17:27,480
Debian to fulfill then well any other

00:17:26,160 --> 00:17:29,190
wave let me uh notice if they added

00:17:27,480 --> 00:17:30,900
things that aren't already in current

00:17:29,190 --> 00:17:32,820
Debian release the problem was with LSB

00:17:30,900 --> 00:17:35,100
not with Debian yeah cuz the whole point

00:17:32,820 --> 00:17:36,960
of do spaces no seriously the whole

00:17:35,100 --> 00:17:39,510
point of LSB is its supposed to document

00:17:36,960 --> 00:17:41,700
what's done the current consensus what

00:17:39,510 --> 00:17:43,409
are you exists in the distros and help

00:17:41,700 --> 00:17:45,289
the distros maintain that compliance so

00:17:43,409 --> 00:17:48,960
if they're going off and specifying

00:17:45,289 --> 00:17:51,179
things that aren't already the reality

00:17:48,960 --> 00:17:51,900
on the ground then there's nothing we

00:17:51,179 --> 00:17:53,970
can do about that

00:17:51,900 --> 00:17:56,549
and I think one way to look at it is to

00:17:53,970 --> 00:17:59,010
take a problem in the universe and look

00:17:56,549 --> 00:18:01,169
at very common non free tools that

00:17:59,010 --> 00:18:03,510
people use Skype is providing the bin

00:18:01,169 --> 00:18:05,880
packages Dropbox is providing the bin

00:18:03,510 --> 00:18:08,370
packages I don't know what other

00:18:05,880 --> 00:18:09,720
examples but most of native dancers um

00:18:08,370 --> 00:18:14,760
our sponsors

00:18:09,720 --> 00:18:16,530
yeah so are there the question and I

00:18:14,760 --> 00:18:18,240
suspect they're not using the LSB linker

00:18:16,530 --> 00:18:20,610
and they're probably doing other things

00:18:18,240 --> 00:18:22,169
and they probably explicitly test on the

00:18:20,610 --> 00:18:30,630
platforms that they support rather than

00:18:22,169 --> 00:18:33,840
count on the binary yeah I could just

00:18:30,630 --> 00:18:36,990
male yeah discuss to see and I mean

00:18:33,840 --> 00:18:40,860
Skype is not using q3 it's using keep

00:18:36,990 --> 00:18:43,590
fall yeah so well because parts of cute

00:18:40,860 --> 00:18:48,750
for were kind of integrated in LSB too

00:18:43,590 --> 00:18:52,260
so yeah I mean yeah the convincing

00:18:48,750 --> 00:18:53,909
factor would more be if if a big non

00:18:52,260 --> 00:18:55,919
free provider would say yes we do use

00:18:53,909 --> 00:18:58,919
that and we do expect and we pay people

00:18:55,919 --> 00:19:00,510
to make sure it happens in Devon or we

00:18:58,919 --> 00:19:02,760
don't pay but we convince them with beer

00:19:00,510 --> 00:19:05,690
or something laughs but see you scroll

00:19:02,760 --> 00:19:05,690
up to the beginning

00:19:05,740 --> 00:19:22,250
all right that was just not much sorry

00:19:14,440 --> 00:19:24,620
so any other inputs yeah you have any

00:19:22,250 --> 00:19:28,220
idea how much like how much effort it

00:19:24,620 --> 00:19:30,470
would need to do these well do the

00:19:28,220 --> 00:19:32,930
second options which are to keep LSB and

00:19:30,470 --> 00:19:34,910
fix the things and we're upgrade like

00:19:32,930 --> 00:19:38,750
how many more hands do you need on the

00:19:34,910 --> 00:19:42,500
on a package - I need patches on non

00:19:38,750 --> 00:19:44,240
five six bonds much and if we want to

00:19:42,500 --> 00:19:46,520
upgrade to others be five it's mostly I

00:19:44,240 --> 00:19:48,530
would say a half-day checking which

00:19:46,520 --> 00:19:50,330
libraries must be adding the

00:19:48,530 --> 00:19:53,900
dependencies to do virtual packages and

00:19:50,330 --> 00:19:54,950
then having someone Ted launch the

00:19:53,900 --> 00:19:57,920
distribution checker

00:19:54,950 --> 00:20:00,140
somehow and just that the problem is

00:19:57,920 --> 00:20:03,140
that if we run the distribution checker

00:20:00,140 --> 00:20:06,380
and it says there is a missing symbol in

00:20:03,140 --> 00:20:07,940
whichever library I'll file a bug

00:20:06,380 --> 00:20:09,710
against that library and the guys will

00:20:07,940 --> 00:20:11,660
say well yes but why need that patch

00:20:09,710 --> 00:20:14,510
that is changing this API for this

00:20:11,660 --> 00:20:16,760
present reason or this one and then we

00:20:14,510 --> 00:20:23,840
just have a non fixed bug and we fill

00:20:16,760 --> 00:20:25,460
out the certification so yes part of the

00:20:23,840 --> 00:20:27,320
certification yes something is that you

00:20:25,460 --> 00:20:29,150
you if we have a good reason for why

00:20:27,320 --> 00:20:30,740
we're doing something then we apply for

00:20:29,150 --> 00:20:35,330
an exception or we get them to fix the

00:20:30,740 --> 00:20:37,730
standard yeah yeah it's good but it's a

00:20:35,330 --> 00:20:39,110
lot of work - it's mostly bureaucratic

00:20:37,730 --> 00:20:42,200
work going back and forth

00:20:39,110 --> 00:20:45,620
yeah I must say I kind of expect that

00:20:42,200 --> 00:20:48,350
from Jeff Licio that is involved in both

00:20:45,620 --> 00:20:51,650
Debian vlsb package and the alertly

00:20:48,350 --> 00:20:53,179
process so I was that's the same the

00:20:51,650 --> 00:20:55,670
producers have been following the

00:20:53,179 --> 00:20:57,500
printing talk just earlier I'm exactly

00:20:55,670 --> 00:20:59,929
in the same situation I just ended up

00:20:57,500 --> 00:21:01,460
being maintaining LSP not because I'm

00:20:59,929 --> 00:21:05,290
interested in but because it was broken

00:21:01,460 --> 00:21:08,000
before a stable release so just doing it

00:21:05,290 --> 00:21:10,220
okay so if i run is the indus room

00:21:08,000 --> 00:21:13,990
checks the list of bugs and files one

00:21:10,220 --> 00:21:13,990
touch each and it's solved

00:21:14,310 --> 00:21:22,930
any other inputs do you have a web

00:21:20,080 --> 00:21:25,000
browser can we check the post that tag I

00:21:22,930 --> 00:21:44,260
was trying to come out to see if the

00:21:25,000 --> 00:21:48,840
Wi-Fi is kind of working oh yes yes yes

00:21:44,260 --> 00:21:52,600
yes everyone has read that of course yes

00:21:48,840 --> 00:21:57,670
I was just wondering do not attempt to

00:21:52,600 --> 00:22:03,580
use copy that's gonna wait filled blah

00:21:57,670 --> 00:22:05,740
blah while we wait for that does Jeff

00:22:03,580 --> 00:22:10,180
lacoya still work for the Linux

00:22:05,740 --> 00:22:13,110
Foundation I don't know I've seen his RC

00:22:10,180 --> 00:22:19,000
names in some blog posts they've been

00:22:13,110 --> 00:22:20,320
released for 5 beta - I think I haven't

00:22:19,000 --> 00:22:23,920
been in contact with him but I know he's

00:22:20,320 --> 00:22:27,750
under dependence be feeling this - it's

00:22:23,920 --> 00:22:27,750
not really a high traffic list

00:22:31,690 --> 00:22:49,249
okay the answer is no okay I don't know

00:22:42,379 --> 00:22:52,119
if that's better I will see if it works

00:22:49,249 --> 00:22:52,119
with screen Internet

00:22:59,460 --> 00:23:10,880
good thanks how does tax work what is it

00:23:07,670 --> 00:23:11,900
you go to UDT get your hat and it has a

00:23:10,880 --> 00:23:14,000
tag search

00:23:11,900 --> 00:23:19,910
I think there's a text search like

00:23:14,000 --> 00:23:22,810
they're in oh yeah you might be right us

00:23:19,910 --> 00:23:22,810
might be faster

00:23:24,100 --> 00:23:29,230
bugs use attack user Debian on a speed

00:23:31,780 --> 00:23:35,160
well you can just search for

00:23:36,540 --> 00:23:45,070
um that was useful

00:23:38,860 --> 00:23:46,870
okay good they're all good wasn't a good

00:23:45,070 --> 00:23:50,500
user name though can you just search for

00:23:46,870 --> 00:23:55,870
tells me without the user lego needed

00:23:50,500 --> 00:24:01,330
that only the site like a server so yeah

00:23:55,870 --> 00:24:04,690
I think that what I want is that the

00:24:01,330 --> 00:24:10,060
only one you filed there were dozens at

00:24:04,690 --> 00:24:11,350
one point so yeah I guess our yeah they

00:24:10,060 --> 00:24:14,590
should be because this one she likes

00:24:11,350 --> 00:24:27,100
your point they myself Roberto because

00:24:14,590 --> 00:24:30,550
the removed my ex packages and whoopsie

00:24:27,100 --> 00:24:34,110
I mean yeah like that it might remove

00:24:30,550 --> 00:24:34,110
that may be renamed yeah

00:24:35,520 --> 00:24:42,520
yeah so I'll check if I find something

00:24:39,220 --> 00:24:45,340
but yeah I would hope Jeff would be

00:24:42,520 --> 00:24:47,260
running this on Debian and would know

00:24:45,340 --> 00:24:51,610
the native how many failures there are

00:24:47,260 --> 00:24:53,650
but yeah so we have a website somewhere

00:24:51,610 --> 00:24:55,920
where they publish these numbers I think

00:24:53,650 --> 00:24:55,920
the

00:25:01,360 --> 00:25:11,130
they have this infrastructure program

00:25:04,929 --> 00:25:11,130
blah

00:25:15,730 --> 00:25:21,570
yeah and then you have a web interface

00:25:18,100 --> 00:25:26,409
of things that brung in the console and

00:25:21,570 --> 00:25:30,899
yeah you don't want to try that I was

00:25:26,409 --> 00:25:30,899
used to see some results somewhere

00:25:38,900 --> 00:25:42,190
I think they had

00:25:47,590 --> 00:25:50,830
distribution checker

00:25:55,350 --> 00:25:58,910
yeah I don't I can't find it now

00:26:09,780 --> 00:26:33,860
I mean they even test my plane started

00:26:18,420 --> 00:26:33,860
last week over 500 participants nice

00:26:34,250 --> 00:26:39,309
and that's just in the idea yeah

00:26:52,630 --> 00:26:59,830
and then you get it so I did mention

00:26:56,680 --> 00:27:01,330
valve earlier and it's a reasonably

00:26:59,830 --> 00:27:02,890
likely that they will at some point out

00:27:01,330 --> 00:27:05,740
strip of glue to in terms of sheer

00:27:02,890 --> 00:27:08,020
number of deployments in terms of being

00:27:05,740 --> 00:27:09,400
the largest Debian derivative because

00:27:08,020 --> 00:27:11,140
they have the steam OS which they are

00:27:09,400 --> 00:27:13,540
planning on licensing out to hardware

00:27:11,140 --> 00:27:17,440
manufacturers as a standard PC gaming

00:27:13,540 --> 00:27:19,390
console of sorts that they may be they

00:27:17,440 --> 00:27:21,160
may care a whole lot about this so it

00:27:19,390 --> 00:27:23,260
may be a good idea to make sure that

00:27:21,160 --> 00:27:35,380
they are part of discussions what had to

00:27:23,260 --> 00:27:37,450
check with him at least I'm not sure

00:27:35,380 --> 00:27:40,030
whether it was the last years but the

00:27:37,450 --> 00:27:44,140
last physical you do yes I think valve

00:27:40,030 --> 00:27:46,660
did run and session about ABI stability

00:27:44,140 --> 00:27:49,840
and the things that they would care

00:27:46,660 --> 00:27:52,870
about and mostly it was we want the

00:27:49,840 --> 00:27:58,720
latest graphics drivers but we want also

00:27:52,870 --> 00:28:02,670
to be stable and then we're like yeah

00:27:58,720 --> 00:28:05,890
just shipped routes with your compiled

00:28:02,670 --> 00:28:09,070
everything yeah no no they can't stand

00:28:05,890 --> 00:28:11,800
the comparison doesn't link but and we

00:28:09,070 --> 00:28:14,020
don't ship enough libraries to compiled

00:28:11,800 --> 00:28:16,240
statically but yeah there were like

00:28:14,020 --> 00:28:20,250
things that were asking it's like they

00:28:16,240 --> 00:28:22,930
were can you kick axe stable API yeah

00:28:20,250 --> 00:28:24,760
yet make it work with latest and media

00:28:22,930 --> 00:28:30,210
drivers which are binary Omni and

00:28:24,760 --> 00:28:30,210
require special specific equities API

00:28:31,890 --> 00:28:37,660
yeah and and in essence it was kind of

00:28:35,560 --> 00:28:39,940
very open-ended because in terms of what

00:28:37,660 --> 00:28:42,970
like open door gaben could provide

00:28:39,940 --> 00:28:46,420
stable enough for the lifetime of the

00:28:42,970 --> 00:28:48,340
game versus what they needed for that

00:28:46,420 --> 00:28:50,320
game to still be running because in

00:28:48,340 --> 00:28:53,650
essence they wanted to compile it once

00:28:50,320 --> 00:28:57,110
only and never recompile unless they

00:28:53,650 --> 00:29:00,530
really really have to because they

00:28:57,110 --> 00:29:06,530
like pork - longer term type of games so

00:29:00,530 --> 00:29:09,260
I mean just something he's asking ya LSB

00:29:06,530 --> 00:29:11,350
alone was obviously not not enough I

00:29:09,260 --> 00:29:16,750
mean part of the problem is just the

00:29:11,350 --> 00:29:24,260
scope I mean how'd you do - check

00:29:16,750 --> 00:29:26,300
700,000 interfaces of course and yeah

00:29:24,260 --> 00:29:30,980
more than a thousand five hundred

00:29:26,300 --> 00:29:35,720
libraries 32,000 classes looking forward

00:29:30,980 --> 00:29:38,480
to it so yeah so I have I've added some

00:29:35,720 --> 00:29:42,740
action points I'll probably start from

00:29:38,480 --> 00:29:45,460
the top and yeah if anyone's interested

00:29:42,740 --> 00:29:49,160
in helping feel free

00:29:45,460 --> 00:29:50,740
other than that I suggest we head out to

00:29:49,160 --> 00:29:57,580
tears

00:29:50,740 --> 00:29:57,580

YouTube URL: https://www.youtube.com/watch?v=3DcvyP9Q6MI


