Title: HP's OpenStack Helion: Debian all the way down
Publication date: 2017-12-02
Playlist: DebConf 14
Description: 
	by Rocky Craig

At: DebConf14
https://debconf14.debconf.org/
Room: Room 327
Scheduled start: 2014-08-25 16:30:00
Captions: 
	00:00:00,000 --> 00:00:04,910
this started doing some abouttwo stuff

00:00:02,370 --> 00:00:07,379
in the late 2000s and I've been working

00:00:04,910 --> 00:00:10,530
deeply or directly with Debian for about

00:00:07,379 --> 00:00:13,080
six months now so definitely a newbie in

00:00:10,530 --> 00:00:14,460
all of this but we have a purpose and a

00:00:13,080 --> 00:00:18,029
reason for doing this and it's to

00:00:14,460 --> 00:00:21,390
support HP's latest cloud product called

00:00:18,029 --> 00:00:22,650
HP OpenStack Helion that's the formal

00:00:21,390 --> 00:00:27,240
marketing name for it and there's a

00:00:22,650 --> 00:00:30,119
couple of different flavors of that this

00:00:27,240 --> 00:00:31,679
slide is supposed to show the product

00:00:30,119 --> 00:00:33,450
delivery ecosystem and we need to talk

00:00:31,679 --> 00:00:36,300
about the cloud product just a little

00:00:33,450 --> 00:00:38,160
bit to understand why Linux is become so

00:00:36,300 --> 00:00:40,739
important to us

00:00:38,160 --> 00:00:42,390
the Helion product is delivered as two

00:00:40,739 --> 00:00:45,530
separate editions one is kind of a

00:00:42,390 --> 00:00:49,649
do-it-yourself download free no support

00:00:45,530 --> 00:00:52,530
make those kind of experiments and give

00:00:49,649 --> 00:00:54,539
it a try and a run on its own and then

00:00:52,530 --> 00:00:56,550
we have a for sale version that comes

00:00:54,539 --> 00:00:59,670
with full support installation all that

00:00:56,550 --> 00:01:01,620
kind of thing the intent is to deliver

00:00:59,670 --> 00:01:05,070
an entire stack from the bottom where we

00:01:01,620 --> 00:01:06,659
would have hardware our servers our

00:01:05,070 --> 00:01:08,280
networking our storage that kind of

00:01:06,659 --> 00:01:09,720
thing all the way up through all the

00:01:08,280 --> 00:01:11,790
solutions the consulting the

00:01:09,720 --> 00:01:13,710
installation all that kind of help so

00:01:11,790 --> 00:01:15,659
that's what this slide is supposed to be

00:01:13,710 --> 00:01:16,680
showing in the vertical direction from

00:01:15,659 --> 00:01:19,080
all the way at the bottom of the

00:01:16,680 --> 00:01:22,200
hardware up to the top with guest

00:01:19,080 --> 00:01:23,820
operating systems now the we have lots

00:01:22,200 --> 00:01:25,500
of cloud developers we have lots of

00:01:23,820 --> 00:01:28,259
people playing in the OpenStack space

00:01:25,500 --> 00:01:29,729
and that's where they like to

00:01:28,259 --> 00:01:32,970
concentrate they want it to you know

00:01:29,729 --> 00:01:34,259
their idea of low level is Python they

00:01:32,970 --> 00:01:36,119
don't want to go below that they want to

00:01:34,259 --> 00:01:37,530
stay up in the cloud and the VMS and the

00:01:36,119 --> 00:01:39,540
virtual networking and all that stuff

00:01:37,530 --> 00:01:41,460
and that's good we need people like that

00:01:39,540 --> 00:01:43,799
that's where they we have to have those

00:01:41,460 --> 00:01:46,200
people take the direction that we want

00:01:43,799 --> 00:01:48,450
to go with this however everyone in this

00:01:46,200 --> 00:01:50,100
room knows for sure that somewhere

00:01:48,450 --> 00:01:51,240
there's Linux running somewhere there's

00:01:50,100 --> 00:01:52,860
real hardware somewhere there's

00:01:51,240 --> 00:01:53,430
electrons and spinning disks and things

00:01:52,860 --> 00:01:56,909
like that

00:01:53,430 --> 00:01:58,619
Linux matters our group was formed to

00:01:56,909 --> 00:02:01,590
take care of the fact that Linux really

00:01:58,619 --> 00:02:04,439
does matter so hopefully that's the last

00:02:01,590 --> 00:02:06,240
we'll talk a lot about OpenStack if

00:02:04,439 --> 00:02:07,890
you've looked through the diagram there

00:02:06,240 --> 00:02:09,569
a little bit you can see sort of towards

00:02:07,890 --> 00:02:11,740
the bottom just above the hardware is

00:02:09,569 --> 00:02:19,390
this thing called H Linux

00:02:11,740 --> 00:02:24,070
which is going to advance or not there

00:02:19,390 --> 00:02:27,700
we go we came up with an implementation

00:02:24,070 --> 00:02:29,740
that we're calling H Linux we're in this

00:02:27,700 --> 00:02:32,140
for a long time the one of the tenants

00:02:29,740 --> 00:02:34,780
of the cloud is for a large company like

00:02:32,140 --> 00:02:36,820
HP we can never turn this off once we've

00:02:34,780 --> 00:02:38,170
started taking on data and taking on

00:02:36,820 --> 00:02:39,760
customers and doing things we can't

00:02:38,170 --> 00:02:41,170
change our minds in three years and say

00:02:39,760 --> 00:02:43,030
it's just kiddin

00:02:41,170 --> 00:02:45,040
we didn't really want to do this after

00:02:43,030 --> 00:02:46,750
all we're in this for the long run and

00:02:45,040 --> 00:02:50,860
we have to make decisions based on

00:02:46,750 --> 00:02:53,500
supporting those long run choices so

00:02:50,860 --> 00:02:58,000
we've gone with our own linux and HP

00:02:53,500 --> 00:02:59,830
linux for two major reasons one is the

00:02:58,000 --> 00:03:02,620
business side of the equation why have

00:02:59,830 --> 00:03:04,030
our own Linux well if you remember back

00:03:02,620 --> 00:03:06,700
to that stack picture there's a couple

00:03:04,030 --> 00:03:09,730
of major segments to it we have a lot of

00:03:06,700 --> 00:03:11,320
influence on OpenStack we have a lot of

00:03:09,730 --> 00:03:13,810
the project team leaders half a dozen

00:03:11,320 --> 00:03:16,330
project team leaders and several dozen

00:03:13,810 --> 00:03:18,130
core reviewers and lots of influence in

00:03:16,330 --> 00:03:19,480
the OpenStack space we've made our

00:03:18,130 --> 00:03:21,610
commitment there we believe that's the

00:03:19,480 --> 00:03:23,230
way to go our public cloud is based

00:03:21,610 --> 00:03:25,210
heavily our current public cloud is

00:03:23,230 --> 00:03:27,160
based heavily on OpenStack so we've got

00:03:25,210 --> 00:03:29,560
the history to understand that that's a

00:03:27,160 --> 00:03:32,140
good decision for us to make we control

00:03:29,560 --> 00:03:34,210
the HP value add it's not just OpenStack

00:03:32,140 --> 00:03:37,120
and Helion there's a lot of HP

00:03:34,210 --> 00:03:39,250
customized things that allow cloud

00:03:37,120 --> 00:03:42,070
operators whether they're private cloud

00:03:39,250 --> 00:03:45,160
public cloud or hybrid to use our

00:03:42,070 --> 00:03:46,300
product to their advantage all the way

00:03:45,160 --> 00:03:48,220
at the bottom we control the hardware

00:03:46,300 --> 00:03:49,960
we've got the server's the the

00:03:48,220 --> 00:03:52,360
networking stuff the switch is the

00:03:49,960 --> 00:03:55,030
storage all the things that it takes to

00:03:52,360 --> 00:03:57,490
actually support the cloud because there

00:03:55,030 --> 00:04:01,120
is the physical side the one part where

00:03:57,490 --> 00:04:03,130
we do not have equivalent control over

00:04:01,120 --> 00:04:05,020
our own destiny is in the actual

00:04:03,130 --> 00:04:06,910
operating system the real operating

00:04:05,020 --> 00:04:10,480
system that's there we are currently

00:04:06,910 --> 00:04:13,900
using another Debian derivative that is

00:04:10,480 --> 00:04:17,400
more of a cooperative competition rings

00:04:13,900 --> 00:04:17,400
pretty good cooperative is hard

00:04:17,609 --> 00:04:20,890
arrangement with them they have their

00:04:19,299 --> 00:04:24,010
own cloud aspirations and the things

00:04:20,890 --> 00:04:25,160
that they want to do we're in this for

00:04:24,010 --> 00:04:27,110
the long run

00:04:25,160 --> 00:04:29,840
we're not sure that we can guarantee or

00:04:27,110 --> 00:04:32,450
control the level of cooperation we can

00:04:29,840 --> 00:04:35,630
get from these people over that long run

00:04:32,450 --> 00:04:37,340
nothing evil nothing bad but we just we

00:04:35,630 --> 00:04:39,110
want a similar level of control that we

00:04:37,340 --> 00:04:41,330
have in the other three areas that's why

00:04:39,110 --> 00:04:43,220
we want our own Linux distribution it

00:04:41,330 --> 00:04:44,870
restores that piece of control that we

00:04:43,220 --> 00:04:48,410
need over the entire equation and now we

00:04:44,870 --> 00:04:50,570
can go forward with confidence the other

00:04:48,410 --> 00:04:52,100
side of it is technical drivers why did

00:04:50,570 --> 00:04:55,490
we choose Debian there are plenty of

00:04:52,100 --> 00:04:58,610
choices out there for a base to do a

00:04:55,490 --> 00:05:00,560
distribution from we chose Debian for a

00:04:58,610 --> 00:05:02,390
couple reasons one is directives from on

00:05:00,560 --> 00:05:04,430
high that our cloud solution will be

00:05:02,390 --> 00:05:06,830
developed in open source the final

00:05:04,430 --> 00:05:08,750
solution will be open source except for

00:05:06,830 --> 00:05:11,360
the HP value add stuff at the very top

00:05:08,750 --> 00:05:13,010
but the foundation the the under layers

00:05:11,360 --> 00:05:15,170
everything talking to the hardware is

00:05:13,010 --> 00:05:16,700
going to be open source our current HP

00:05:15,170 --> 00:05:18,440
public cloud is based on a debian

00:05:16,700 --> 00:05:22,040
derivative so we've got lots of

00:05:18,440 --> 00:05:24,470
experience in the mostly Debian space HP

00:05:22,040 --> 00:05:26,600
does have a long and comfortable and and

00:05:24,470 --> 00:05:28,700
good record of working with Debian in

00:05:26,600 --> 00:05:30,560
the the Debian community we want to

00:05:28,700 --> 00:05:32,870
leverage off of that and actually we

00:05:30,560 --> 00:05:34,580
want to improve where we've been for the

00:05:32,870 --> 00:05:36,590
last couple of years and restore some of

00:05:34,580 --> 00:05:39,770
the things that were very very true say

00:05:36,590 --> 00:05:42,650
10 years ago and Debian is open enough

00:05:39,770 --> 00:05:44,480
it was it was there it's available just

00:05:42,650 --> 00:05:46,160
things that we can do to it if we need

00:05:44,480 --> 00:05:47,960
to for our needs and then there's ways

00:05:46,160 --> 00:05:50,240
we can give that back to the community

00:05:47,960 --> 00:05:53,810
in a very comfortable and supportive

00:05:50,240 --> 00:05:56,510
fashion so that's where we're headed is

00:05:53,810 --> 00:05:58,850
our own Debian based distro then there's

00:05:56,510 --> 00:06:01,970
time to market a lot of these plans were

00:05:58,850 --> 00:06:04,880
put into place quite a while ago as I

00:06:01,970 --> 00:06:06,110
said I've only been diving into Debian

00:06:04,880 --> 00:06:08,030
for about six months that's when our

00:06:06,110 --> 00:06:10,790
group was formed but there were already

00:06:08,030 --> 00:06:12,440
schedules set up to achieve these types

00:06:10,790 --> 00:06:15,080
of things with our own distro and they

00:06:12,440 --> 00:06:19,130
were pretty short there was a story

00:06:15,080 --> 00:06:22,130
recently about a train operators back in

00:06:19,130 --> 00:06:23,450
the 1960s in New York State that we're

00:06:22,130 --> 00:06:25,130
looking for ways to speed up their

00:06:23,450 --> 00:06:27,110
schedules get more trains on the tracks

00:06:25,130 --> 00:06:29,480
get more passengers to destinations and

00:06:27,110 --> 00:06:31,340
the bigwigs asked how fast can our

00:06:29,480 --> 00:06:33,590
trains go we need to make our trains go

00:06:31,340 --> 00:06:35,510
faster what's the maximum speed by the

00:06:33,590 --> 00:06:39,610
way you only have a month to figure it

00:06:35,510 --> 00:06:39,610
out and this is what they came up with

00:06:40,990 --> 00:06:45,110
this is exactly what they did they

00:06:43,220 --> 00:06:47,180
strapped some jet engines onto the train

00:06:45,110 --> 00:06:50,260
and ran it up the speed and it still

00:06:47,180 --> 00:06:55,310
holds the world's record for the fastest

00:06:50,260 --> 00:06:59,750
self-propelled train that's engineering

00:06:55,310 --> 00:07:01,100
I like the only thing I don't approve of

00:06:59,750 --> 00:07:07,310
is that they wore helmets during the

00:07:01,100 --> 00:07:08,840
test what was that for not gonna help

00:07:07,310 --> 00:07:11,000
you're either going to succeed wildly or

00:07:08,840 --> 00:07:13,790
fail while the the helmets will make a

00:07:11,000 --> 00:07:16,970
difference so along those lines we've

00:07:13,790 --> 00:07:18,860
charged ahead blindly boldly not knowing

00:07:16,970 --> 00:07:20,990
any better and this is what we've come

00:07:18,860 --> 00:07:22,280
up with we call it h linux and there's a

00:07:20,990 --> 00:07:24,710
secret to that and I'll let you in on it

00:07:22,280 --> 00:07:27,980
later it's composed of three main parts

00:07:24,710 --> 00:07:31,490
one is Debian org user space comes from

00:07:27,980 --> 00:07:33,530
Debian org we chose testing so we drive

00:07:31,490 --> 00:07:35,770
everything from testing we updated

00:07:33,530 --> 00:07:40,580
frequently we're doing two architectures

00:07:35,770 --> 00:07:42,170
MD 64 obviously why I 386 it feels like

00:07:40,580 --> 00:07:43,820
a smart thing to be doing from the

00:07:42,170 --> 00:07:45,260
get-go we might change our mind on that

00:07:43,820 --> 00:07:47,540
but it seems like would be easier to

00:07:45,260 --> 00:07:50,030
take it out later than add it later so

00:07:47,540 --> 00:07:53,240
we started with that now that ends up

00:07:50,030 --> 00:07:57,410
being about 65,000 packages in our full

00:07:53,240 --> 00:07:59,110
repo and HP has this internal process

00:07:57,410 --> 00:08:01,850
called the open source review board

00:07:59,110 --> 00:08:03,860
where we have to examine the licenses

00:08:01,850 --> 00:08:05,450
and the contents of every source package

00:08:03,860 --> 00:08:09,920
to make sure that we're not in violation

00:08:05,450 --> 00:08:12,020
of some GPL or an Athena license or the

00:08:09,920 --> 00:08:13,700
feral license things like that so we

00:08:12,020 --> 00:08:16,070
have a dedicated legal group that

00:08:13,700 --> 00:08:17,930
inspects all this stuff when we start

00:08:16,070 --> 00:08:20,840
from Debian as the source that job is

00:08:17,930 --> 00:08:23,450
greatly simplified it's very clear and

00:08:20,840 --> 00:08:24,890
very open the disclosure is there we

00:08:23,450 --> 00:08:26,630
don't use the kernel that we find in

00:08:24,890 --> 00:08:28,220
Debian testing we wanted something much

00:08:26,630 --> 00:08:31,820
later so we go straight to kernel.org

00:08:28,220 --> 00:08:34,669
and get essentially a month or two ago

00:08:31,820 --> 00:08:37,610
is colonel and track that continuously

00:08:34,669 --> 00:08:39,410
through time we obviously we have our

00:08:37,610 --> 00:08:41,539
own custom da config that we're we're

00:08:39,410 --> 00:08:44,450
tweaking as we go along the idea being

00:08:41,539 --> 00:08:47,740
to best support OpenStack and Helion on

00:08:44,450 --> 00:08:49,970
HP hardware but not exclusively that

00:08:47,740 --> 00:08:52,430
finally there's foreign packages there

00:08:49,970 --> 00:08:55,550
are some Debian packages and

00:08:52,430 --> 00:08:59,030
Davian sets of things out there that

00:08:55,550 --> 00:09:01,520
OpenStack needs to run we carry those as

00:08:59,030 --> 00:09:04,280
a one-off support effort on our part

00:09:01,520 --> 00:09:06,530
where our goal would be to take that and

00:09:04,280 --> 00:09:08,330
work with the upstream owners or or

00:09:06,530 --> 00:09:12,050
maintainer such as they are and help

00:09:08,330 --> 00:09:14,110
them get it into Debian testing so that

00:09:12,050 --> 00:09:17,630
it's not a one-off for us anymore it's

00:09:14,110 --> 00:09:21,500
driven by the community but those things

00:09:17,630 --> 00:09:25,220
that we mash up call each Linux we roll

00:09:21,500 --> 00:09:26,570
that and that's available all 65,000

00:09:25,220 --> 00:09:28,730
packages are available for the

00:09:26,570 --> 00:09:31,790
development group to use turns out they

00:09:28,730 --> 00:09:33,290
only need about 600 of them we're not

00:09:31,790 --> 00:09:35,840
putting a graphic environment on this

00:09:33,290 --> 00:09:37,520
this is mostly server type code so those

00:09:35,840 --> 00:09:40,720
600 packages are the ones that we're

00:09:37,520 --> 00:09:40,720
really really concerned with

00:09:46,270 --> 00:09:53,600
introduction maybe not for Helion we're

00:09:51,080 --> 00:09:55,580
using triple o from OpenStack OpenStack

00:09:53,600 --> 00:09:59,600
on OpenStack for the deployment

00:09:55,580 --> 00:10:01,730
development process that is the

00:09:59,600 --> 00:10:03,530
manufacturing is is centered around

00:10:01,730 --> 00:10:05,600
something called disk image builder it's

00:10:03,530 --> 00:10:07,430
a name of a program or Dib it's

00:10:05,600 --> 00:10:09,680
essentially a smart wrapper around Deb

00:10:07,430 --> 00:10:11,570
bootstrap so Deb bootstrap does what it

00:10:09,680 --> 00:10:13,100
does and then disk image builder pulls

00:10:11,570 --> 00:10:16,850
down extra things that some other

00:10:13,100 --> 00:10:19,190
integration manages the configuration

00:10:16,850 --> 00:10:21,380
does all that kind of stuff and what

00:10:19,190 --> 00:10:22,820
they end up with then is something that

00:10:21,380 --> 00:10:26,420
they can run down through more

00:10:22,820 --> 00:10:29,300
integration Helion does not use the

00:10:26,420 --> 00:10:31,460
OpenStack bits in Debian they're using

00:10:29,300 --> 00:10:33,380
them directly from OpenStack org so

00:10:31,460 --> 00:10:35,290
they're much tighter to upstream kind of

00:10:33,380 --> 00:10:38,990
like we're doing with testing and

00:10:35,290 --> 00:10:42,020
kernel.org they also pull things from pi

00:10:38,990 --> 00:10:44,750
PI and some other sources out on the net

00:10:42,020 --> 00:10:46,310
there's some HP value added code there

00:10:44,750 --> 00:10:48,560
are lots of HP value added code and then

00:10:46,310 --> 00:10:51,650
configuring all of that together that's

00:10:48,560 --> 00:10:53,210
where they end up with that 600 or so

00:10:51,650 --> 00:10:55,700
packages that they're actually using

00:10:53,210 --> 00:10:57,170
from the H Linux repo we get that

00:10:55,700 --> 00:10:59,900
information back as to what they're

00:10:57,170 --> 00:11:03,620
using so that we can do lots of repo

00:10:59,900 --> 00:11:06,020
manipulations calculations resolve some

00:11:03,620 --> 00:11:06,360
issues one of the things we can do very

00:11:06,020 --> 00:11:09,299
easy

00:11:06,360 --> 00:11:11,399
is this OS RB and security review of the

00:11:09,299 --> 00:11:13,230
packages you're using what's the license

00:11:11,399 --> 00:11:15,449
in each one or which one of them have

00:11:13,230 --> 00:11:17,069
some kind of security notification

00:11:15,449 --> 00:11:19,290
active against them and we can advise

00:11:17,069 --> 00:11:20,429
them change this package try something

00:11:19,290 --> 00:11:24,329
different did you know this has a

00:11:20,429 --> 00:11:25,829
security hole in it we can start doing

00:11:24,329 --> 00:11:27,629
product comparison and see what we're

00:11:25,829 --> 00:11:29,489
using and how we're using it where

00:11:27,629 --> 00:11:30,779
should we focus our efforts what where

00:11:29,489 --> 00:11:32,670
should we invest in the open-source

00:11:30,779 --> 00:11:35,309
community what packages should we be

00:11:32,670 --> 00:11:37,739
worried about can we try to predict the

00:11:35,309 --> 00:11:39,389
stability or the bug ability I think I

00:11:37,739 --> 00:11:41,009
heard the word the other day where can

00:11:39,389 --> 00:11:43,589
we go with this and then finally feed

00:11:41,009 --> 00:11:46,649
that back into the repo that we deliver

00:11:43,589 --> 00:11:48,540
how often do we do this what pieces do

00:11:46,649 --> 00:11:53,549
we deliver what else can we do so it's a

00:11:48,540 --> 00:11:55,559
very active loop we transform it a

00:11:53,549 --> 00:11:57,350
little bit along the way we're trying to

00:11:55,559 --> 00:11:59,429
keep it simple so we don't have a full

00:11:57,350 --> 00:12:00,959
offering of everything none of that none

00:11:59,429 --> 00:12:03,239
of the other flavors are there we're

00:12:00,959 --> 00:12:05,819
just we're just working with testing and

00:12:03,239 --> 00:12:07,259
then we do some branding or rebranding

00:12:05,819 --> 00:12:09,239
we were a little bit concerned about

00:12:07,259 --> 00:12:12,629
some of these packages escaping into the

00:12:09,239 --> 00:12:14,699
wild if you will that a deb package

00:12:12,629 --> 00:12:16,319
would end up on somebody else's system

00:12:14,699 --> 00:12:17,999
that really came from us and then we had

00:12:16,319 --> 00:12:20,399
touched and maybe done something too so

00:12:17,999 --> 00:12:22,499
we changed the branding to make sure

00:12:20,399 --> 00:12:25,529
that it's it's blatantly obvious no this

00:12:22,499 --> 00:12:26,910
this particular package came from HP we

00:12:25,529 --> 00:12:28,529
don't know where we got it but it came

00:12:26,910 --> 00:12:29,999
from HP we're not going to blame Debian

00:12:28,529 --> 00:12:33,029
for any problems we have with this or we

00:12:29,999 --> 00:12:35,489
we hope that's what will happen we've

00:12:33,029 --> 00:12:38,699
done a couple of reference ISOs for

00:12:35,489 --> 00:12:40,799
people to play with and get some some

00:12:38,699 --> 00:12:42,029
practical feel for what's in h linux

00:12:40,799 --> 00:12:44,850
it's not really part of our original

00:12:42,029 --> 00:12:46,649
design intent or product liverpool's but

00:12:44,850 --> 00:12:48,509
they're starting to gain in traction and

00:12:46,649 --> 00:12:52,319
as it's been discussed in some other

00:12:48,509 --> 00:12:54,540
forms here the installer takes a little

00:12:52,319 --> 00:12:56,100
bit of hand-holding and getting things

00:12:54,540 --> 00:12:58,230
to work it's absolutely getting better

00:12:56,100 --> 00:13:01,079
we've got a guy who's who's working on

00:12:58,230 --> 00:13:02,999
that and will be delivering some some

00:13:01,079 --> 00:13:07,559
customized O's to different internal

00:13:02,999 --> 00:13:11,160
customers so this is a kind of a rough

00:13:07,559 --> 00:13:14,549
flow of exactly how we do it as I said

00:13:11,160 --> 00:13:17,069
we've got three major sources go from

00:13:14,549 --> 00:13:19,680
Debian testing from an internal mirror

00:13:17,069 --> 00:13:23,309
that we maintain inside of HP

00:13:19,680 --> 00:13:25,139
kernel.org we take the n minus-1 kernel

00:13:23,309 --> 00:13:26,790
or one from a couple of months ago and

00:13:25,139 --> 00:13:28,579
then these foreign packages from

00:13:26,790 --> 00:13:31,529
different sources whether they're from

00:13:28,579 --> 00:13:33,360
Debian unstable we consider that to be a

00:13:31,529 --> 00:13:35,459
foreign package because it's outside of

00:13:33,360 --> 00:13:37,110
Debian testing so anything outside of

00:13:35,459 --> 00:13:39,660
Debian testing is a foreign package to

00:13:37,110 --> 00:13:42,689
us there's some very one off packages

00:13:39,660 --> 00:13:44,040
some tarballs things like that we would

00:13:42,689 --> 00:13:46,559
love to drive those to zero but that's

00:13:44,040 --> 00:13:48,509
not practical right this minute we take

00:13:46,559 --> 00:13:52,050
all three of those and kind of mash them

00:13:48,509 --> 00:13:56,369
up into a giant pool or a prototype pool

00:13:52,050 --> 00:13:59,189
and do rebranding in place on that pool

00:13:56,369 --> 00:14:01,529
push that over to the next chunk of the

00:13:59,189 --> 00:14:03,240
pipeline and that's where we take the

00:14:01,529 --> 00:14:05,819
pool and run all the standard Debian

00:14:03,240 --> 00:14:08,550
tools on it to create the disks the

00:14:05,819 --> 00:14:10,439
reference files do the GPG signing all

00:14:08,550 --> 00:14:12,569
those type of things

00:14:10,439 --> 00:14:14,100
got two big explosions here on

00:14:12,569 --> 00:14:15,149
validation and testing I'll talk about

00:14:14,100 --> 00:14:17,399
that in just a minute

00:14:15,149 --> 00:14:19,350
once we believe we have a good repo that

00:14:17,399 --> 00:14:21,899
looks and smells like a Debian Network

00:14:19,350 --> 00:14:24,269
repo supplies the packages we need for

00:14:21,899 --> 00:14:26,300
the use cases that we have which is HP

00:14:24,269 --> 00:14:29,189
Helion then we'll make it available

00:14:26,300 --> 00:14:31,170
internally only on different sites and

00:14:29,189 --> 00:14:33,499
and we encourage other sites within HP

00:14:31,170 --> 00:14:35,879
to cash that or mirror it themselves

00:14:33,499 --> 00:14:37,889
because we got kind of worldwide effort

00:14:35,879 --> 00:14:39,779
going on this the other thing that we

00:14:37,889 --> 00:14:40,860
host here is archives and I'll talk

00:14:39,779 --> 00:14:42,660
about that in a minute

00:14:40,860 --> 00:14:45,300
long-term archives of every one of these

00:14:42,660 --> 00:14:47,850
repo roles and we have the ability to do

00:14:45,300 --> 00:14:50,009
one-off repos or special repos or custom

00:14:47,850 --> 00:14:52,410
lists of packages for people who need it

00:14:50,009 --> 00:14:59,040
and that's all hosted on the tail end

00:14:52,410 --> 00:15:04,040
here one of the goals was to chase CI CD

00:14:59,040 --> 00:15:08,279
agile devops style repo as best we could

00:15:04,040 --> 00:15:11,490
we don't really have a version a solid

00:15:08,279 --> 00:15:14,399
version we are starting to establish a

00:15:11,490 --> 00:15:15,869
regular release cadence but for us we

00:15:14,399 --> 00:15:17,459
look at the top of the tree and how can

00:15:15,869 --> 00:15:19,709
we copy the latest changes out of

00:15:17,459 --> 00:15:21,209
testing kernel.org and these other

00:15:19,709 --> 00:15:24,809
packages and keep them fresh and

00:15:21,209 --> 00:15:26,160
available and ready to go we did change

00:15:24,809 --> 00:15:28,079
the nomenclature a little bit we don't

00:15:26,160 --> 00:15:29,730
call it testing to avoid confusion we

00:15:28,079 --> 00:15:32,160
call the release that we have cattle

00:15:29,730 --> 00:15:33,279
prod and you'll see some of us running

00:15:32,160 --> 00:15:34,930
around with cattle

00:15:33,279 --> 00:15:37,209
hats or if you're wearing a cattle prod

00:15:34,930 --> 00:15:39,850
hat let's raise your hand here we've got

00:15:37,209 --> 00:15:42,149
some some more HP people in here and

00:15:39,850 --> 00:15:47,199
I'll introduce them in a minute

00:15:42,149 --> 00:15:48,490
it was mainly to be not testing because

00:15:47,199 --> 00:15:50,410
number one it's an overloaded word

00:15:48,490 --> 00:15:52,180
number two it's it's too much of an

00:15:50,410 --> 00:15:53,829
implication that if there's a problem

00:15:52,180 --> 00:15:55,809
with this you go to the Debian community

00:15:53,829 --> 00:15:57,610
no there's if there's a problem you go

00:15:55,809 --> 00:15:59,199
to us and we will learn how to work with

00:15:57,610 --> 00:16:00,519
the Debian community to resolve those

00:15:59,199 --> 00:16:03,610
problems so we needed that different

00:16:00,519 --> 00:16:05,769
nomenclature we do these these regular

00:16:03,610 --> 00:16:07,899
roles we always save the old packages

00:16:05,769 --> 00:16:10,120
create these archives generate new

00:16:07,899 --> 00:16:14,649
indices and just kind of roll our top of

00:16:10,120 --> 00:16:16,300
tree through time and keep the role

00:16:14,649 --> 00:16:19,540
points make them available to the

00:16:16,300 --> 00:16:22,480
development teams when you start looking

00:16:19,540 --> 00:16:26,019
at managers and schedules and paying

00:16:22,480 --> 00:16:27,309
customers their excitement about

00:16:26,019 --> 00:16:29,860
continuous integration and continuous

00:16:27,309 --> 00:16:32,819
deployment starts following falling off

00:16:29,860 --> 00:16:35,860
they want to see the June 2014 release

00:16:32,819 --> 00:16:37,480
they want a frozen point in time so

00:16:35,860 --> 00:16:39,939
we've come up with a mechanism to bridge

00:16:37,480 --> 00:16:41,829
the gap between CI CD which developers

00:16:39,939 --> 00:16:44,500
love and frozen points in time which

00:16:41,829 --> 00:16:45,519
customers love I'll talk about that in

00:16:44,500 --> 00:16:47,949
just a little bit also

00:16:45,519 --> 00:16:49,839
but these frozen points also allow us to

00:16:47,949 --> 00:16:51,819
tell the different development teams

00:16:49,839 --> 00:16:53,949
choose what you want choose what works

00:16:51,819 --> 00:16:55,720
for you we do this every two weeks or so

00:16:53,949 --> 00:16:57,550
you can find one in there that will make

00:16:55,720 --> 00:16:59,860
you happy and will work with you on how

00:16:57,550 --> 00:17:02,500
to upgrade individual packages as needed

00:16:59,860 --> 00:17:08,860
and keep that flow for you as a legacy

00:17:02,500 --> 00:17:12,429
archive mentioned testing a couple of

00:17:08,860 --> 00:17:14,860
times two of the gentlemen here bill and

00:17:12,429 --> 00:17:17,559
Cameron who are here all week and catch

00:17:14,860 --> 00:17:21,760
their act at the Marriot City Center are

00:17:17,559 --> 00:17:24,339
working on our testing framework the

00:17:21,760 --> 00:17:26,770
idea is that we have a framework which

00:17:24,339 --> 00:17:29,220
is independent of any other product that

00:17:26,770 --> 00:17:32,220
really supports remote execution because

00:17:29,220 --> 00:17:32,220
internally

00:17:34,150 --> 00:17:40,360
I have no idea what that said I hope I

00:17:36,160 --> 00:17:42,730
wasn't kicked me in internally we have a

00:17:40,360 --> 00:17:46,450
lot of hardware partners that want to do

00:17:42,730 --> 00:17:48,760
qualification testing on h linux but we

00:17:46,450 --> 00:17:50,590
don't want to have 30 pallets of

00:17:48,760 --> 00:17:52,450
equipment showing up to the Fort Collins

00:17:50,590 --> 00:17:53,800
Colorado site all the time and run all

00:17:52,450 --> 00:17:56,470
that so we want to be able to drive

00:17:53,800 --> 00:17:59,110
these remote tests with our help and we

00:17:56,470 --> 00:18:00,880
can test Hardware remotely to do

00:17:59,110 --> 00:18:05,850
qualification cycles so that we can

00:18:00,880 --> 00:18:08,740
fulfill the stack so what tardis does is

00:18:05,850 --> 00:18:10,480
support that remote execution and we're

00:18:08,740 --> 00:18:12,100
in the early days of being able to do

00:18:10,480 --> 00:18:15,820
things with it the remote execution

00:18:12,100 --> 00:18:17,920
works the framework works it can install

00:18:15,820 --> 00:18:20,920
and deploy on bare metal virtual

00:18:17,920 --> 00:18:23,020
machines Linux containers any type of

00:18:20,920 --> 00:18:26,350
abstracted hardware that's targeted to

00:18:23,020 --> 00:18:30,130
run H Linux in a production setting do

00:18:26,350 --> 00:18:31,630
tests record tests conditional tests all

00:18:30,130 --> 00:18:33,940
the type of stuff you'd expect from a

00:18:31,630 --> 00:18:37,240
test framework but in a very controlled

00:18:33,940 --> 00:18:39,190
fashion and with remote execution we're

00:18:37,240 --> 00:18:42,550
looking long-term but how do we

00:18:39,190 --> 00:18:45,790
integrate the things we find in H Linux

00:18:42,550 --> 00:18:49,030
back with Debian and the bug tracking

00:18:45,790 --> 00:18:51,100
and systems they're so long-term we have

00:18:49,030 --> 00:18:52,420
lots of goals for this short term we're

00:18:51,100 --> 00:18:57,190
just trying to get it running just like

00:18:52,420 --> 00:18:58,720
we did with the repo finally there's

00:18:57,190 --> 00:19:00,430
there's policies because now that we

00:18:58,720 --> 00:19:02,410
have this up and running and people are

00:19:00,430 --> 00:19:04,240
using it they say well when you're going

00:19:02,410 --> 00:19:05,710
to roll it and when what kernels in it

00:19:04,240 --> 00:19:07,390
and how do I get this in and where do I

00:19:05,710 --> 00:19:08,680
go with this bug and and I've got this

00:19:07,390 --> 00:19:10,870
favorite package that I've got to have

00:19:08,680 --> 00:19:13,360
in and all the types of things that that

00:19:10,870 --> 00:19:15,670
that come along with with owning a repo

00:19:13,360 --> 00:19:18,010
we have the same headaches hopefully on

00:19:15,670 --> 00:19:22,090
a much smaller scale but I'm preaching

00:19:18,010 --> 00:19:23,950
to a choir here sure we would love to

00:19:22,090 --> 00:19:26,200
have consensus and and have everyone

00:19:23,950 --> 00:19:28,390
arrive at a nice comfortable decision we

00:19:26,200 --> 00:19:29,950
don't have the time for consensus to

00:19:28,390 --> 00:19:32,350
develop all the time sometimes somebody

00:19:29,950 --> 00:19:34,660
just has to make a damn decision we make

00:19:32,350 --> 00:19:36,640
the decision and for the most part

00:19:34,660 --> 00:19:39,870
everyone gets along with it pretty well

00:19:36,640 --> 00:19:39,870
in a very short amount of time

00:19:42,220 --> 00:19:46,240
all right I know this is starting to eat

00:19:44,260 --> 00:19:47,679
into the official release time for

00:19:46,240 --> 00:19:50,289
dinner I've got a few more things on a

00:19:47,679 --> 00:19:51,400
little deeper details but are there any

00:19:50,289 --> 00:19:53,289
questions

00:19:51,400 --> 00:19:56,590
clarification questions on what I've

00:19:53,289 --> 00:19:58,630
gone over so far because I'm I'm ready

00:19:56,590 --> 00:20:08,049
to keep going if we're all good here

00:19:58,630 --> 00:20:09,700
just wanted to make sure yes we the

00:20:08,049 --> 00:20:11,590
question is what are we using to manage

00:20:09,700 --> 00:20:13,600
all of our repos at the different stages

00:20:11,590 --> 00:20:16,630
through that pipeline where we're using

00:20:13,600 --> 00:20:19,720
apt mirror to pull in from the excuse me

00:20:16,630 --> 00:20:22,510
from the original Debian testing mirror

00:20:19,720 --> 00:20:25,870
that we have on site and from there on

00:20:22,510 --> 00:20:27,250
it's custom code special sauce that does

00:20:25,870 --> 00:20:29,169
a lot of the control flow like the

00:20:27,250 --> 00:20:31,150
rebranding opening up the package and

00:20:29,169 --> 00:20:32,740
doing things that stuff we've used but

00:20:31,150 --> 00:20:34,870
mostly it's gluing together standard

00:20:32,740 --> 00:20:36,669
Debian tools like when we finally get to

00:20:34,870 --> 00:20:39,700
generating the indices in the archive

00:20:36,669 --> 00:20:42,010
and that's FTP archive and deep package

00:20:39,700 --> 00:20:44,679
scan packages and all those standard

00:20:42,010 --> 00:20:47,650
tools so the true grunt work that

00:20:44,679 --> 00:20:49,690
produces the Debian compatible stuff is

00:20:47,650 --> 00:20:52,840
is Debian tool sets but the

00:20:49,690 --> 00:20:53,559
orchestration is custom any other

00:20:52,840 --> 00:21:07,630
questions

00:20:53,559 --> 00:21:10,299
right now yes as an outsider I have this

00:21:07,630 --> 00:21:14,049
sense that it would be helpful I'm

00:21:10,299 --> 00:21:17,580
making a proposal that a group of folks

00:21:14,049 --> 00:21:24,850
could meet with you rocky to talk about

00:21:17,580 --> 00:21:27,940
what giving back to Debian could look

00:21:24,850 --> 00:21:32,159
like in terms of a workflow we would

00:21:27,940 --> 00:21:36,370
love to have many meetings like that yes

00:21:32,159 --> 00:21:39,340
so just so that the Saturday there's the

00:21:36,370 --> 00:21:41,650
derivatives on Saturday that's the

00:21:39,340 --> 00:21:43,210
derivatives both I would encourage you

00:21:41,650 --> 00:21:45,850
to come to that and make the other

00:21:43,210 --> 00:21:49,210
derivatives and Debian people working on

00:21:45,850 --> 00:21:52,110
derivative stuff I think we have someone

00:21:49,210 --> 00:21:52,110
who's planning to attend that

00:21:57,080 --> 00:22:07,590
all right are we good excuse me

00:22:01,110 --> 00:22:10,950
I mentioned that we maintained archives

00:22:07,590 --> 00:22:12,120
of every release roll that we do so over

00:22:10,950 --> 00:22:14,060
here on the left I don't know if you can

00:22:12,120 --> 00:22:15,680
read it exactly or not our are

00:22:14,060 --> 00:22:18,510
time-stamped

00:22:15,680 --> 00:22:20,370
top-level views of a repo with the disks

00:22:18,510 --> 00:22:21,870
in a pool and two weeks later another

00:22:20,370 --> 00:22:23,700
discs in a pool and two weeks later

00:22:21,870 --> 00:22:26,400
another distant a pool that's about a

00:22:23,700 --> 00:22:30,270
hundred and twenty gigabytes a pop and

00:22:26,400 --> 00:22:32,460
it adds up fast so we really do want to

00:22:30,270 --> 00:22:34,110
keep this stuff forever ten years from

00:22:32,460 --> 00:22:37,770
now we do want you to be able to get the

00:22:34,110 --> 00:22:39,420
March 2014 release we don't know why it

00:22:37,770 --> 00:22:43,410
seems like a good idea though and we

00:22:39,420 --> 00:22:46,890
make disks so you know still we don't

00:22:43,410 --> 00:22:48,930
make that many disks if we had done this

00:22:46,890 --> 00:22:52,290
all the way up from March until now we'd

00:22:48,930 --> 00:22:54,480
be well over two terabytes if we did

00:22:52,290 --> 00:22:56,850
that so we came up with a way to do data

00:22:54,480 --> 00:23:01,230
deduplication essentially we copy all

00:22:56,850 --> 00:23:03,960
the pools into an ocean common directory

00:23:01,230 --> 00:23:06,480
because when revisions change file names

00:23:03,960 --> 00:23:07,830
change so that original one that was

00:23:06,480 --> 00:23:11,190
laid down in March can stay there

00:23:07,830 --> 00:23:13,890
forever and if that was the only package

00:23:11,190 --> 00:23:15,890
that changed then that's the only file

00:23:13,890 --> 00:23:19,200
that's going to get added to our ocean

00:23:15,890 --> 00:23:21,420
the this the rate we do the repo rolls

00:23:19,200 --> 00:23:24,720
we get about a thousand packages

00:23:21,420 --> 00:23:28,050
changing or added essentially each time

00:23:24,720 --> 00:23:31,260
we do this so we have this giant ocean

00:23:28,050 --> 00:23:34,220
of all packages ever seen organized the

00:23:31,260 --> 00:23:36,630
the normal way and this idea of a

00:23:34,220 --> 00:23:38,640
package management database is more of a

00:23:36,630 --> 00:23:40,470
concept than an actual database at the

00:23:38,640 --> 00:23:42,960
moment we're in the process of building

00:23:40,470 --> 00:23:46,470
out and flushing it out but it it's

00:23:42,960 --> 00:23:49,140
basic function is to map file names file

00:23:46,470 --> 00:23:52,560
names and revisions to the actual file

00:23:49,140 --> 00:23:56,640
and where it's located in the ocean once

00:23:52,560 --> 00:23:58,410
we have that information now I've got my

00:23:56,640 --> 00:24:02,340
ocean over here like I had on the other

00:23:58,410 --> 00:24:04,350
page and this mapping database I can

00:24:02,340 --> 00:24:06,030
take something called a playlist which

00:24:04,350 --> 00:24:08,370
is just a list of packages and they're

00:24:06,030 --> 00:24:10,620
revisions it's very very simple

00:24:08,370 --> 00:24:12,690
it's a text file it can exist in in

00:24:10,620 --> 00:24:16,830
several different forms but I can take

00:24:12,690 --> 00:24:19,220
that and generate a custom repo we call

00:24:16,830 --> 00:24:22,170
them hot rods hot repos on demand

00:24:19,220 --> 00:24:23,670
because knowing what the the files

00:24:22,170 --> 00:24:25,830
and revisions are that you want and

00:24:23,670 --> 00:24:28,070
where they are in the ocean I can

00:24:25,830 --> 00:24:31,230
quickly construct a pool directory

00:24:28,070 --> 00:24:33,960
that's made out of sim links and not the

00:24:31,230 --> 00:24:36,600
actual files once I have that pool

00:24:33,960 --> 00:24:38,610
directory I can run the standard index

00:24:36,600 --> 00:24:40,710
generation tools and now I have this

00:24:38,610 --> 00:24:42,930
repo representing whatever the playlist

00:24:40,710 --> 00:24:46,890
was to start with for the archives it's

00:24:42,930 --> 00:24:48,900
the full 65,000 packages for our group

00:24:46,890 --> 00:24:52,020
that does storage testing it's the

00:24:48,900 --> 00:24:53,940
hundred or so packages that they need to

00:24:52,020 --> 00:24:57,230
bring up a Linux system that will

00:24:53,940 --> 00:24:58,980
execute against the storage arrays and

00:24:57,230 --> 00:25:01,350
literally have nothing to do with

00:24:58,980 --> 00:25:04,740
OpenStack just enough drivers and smarts

00:25:01,350 --> 00:25:07,410
to to generate that or we we can archive

00:25:04,740 --> 00:25:09,390
these 600 packages into custom repos

00:25:07,410 --> 00:25:11,910
every time the Helion group turns its

00:25:09,390 --> 00:25:14,160
thing doing it this way that two

00:25:11,910 --> 00:25:15,780
terabytes for all those things is now

00:25:14,160 --> 00:25:18,960
down to about two hundred and twenty

00:25:15,780 --> 00:25:21,540
gigabytes we only add a gigabyte or two

00:25:18,960 --> 00:25:23,100
every time we roll the repo that's

00:25:21,540 --> 00:25:26,190
something that's manageable over the

00:25:23,100 --> 00:25:28,140
course of decades that's one of the

00:25:26,190 --> 00:25:30,570
things that we can do with this playlist

00:25:28,140 --> 00:25:32,160
technology we've got lots of benefits

00:25:30,570 --> 00:25:35,100
that we can do with playlists once we

00:25:32,160 --> 00:25:36,990
start representing entire repos as our

00:25:35,100 --> 00:25:39,000
unit of granularity or the thing that

00:25:36,990 --> 00:25:41,250
we're working with we can do playlist

00:25:39,000 --> 00:25:45,420
manipulations playlist math playlist

00:25:41,250 --> 00:25:47,880
comparisons playlist aging playlist

00:25:45,420 --> 00:25:49,710
reductions and generate an awful lot of

00:25:47,880 --> 00:25:51,480
these benefits that you see here I'm not

00:25:49,710 --> 00:25:53,850
going to go through all of them in this

00:25:51,480 --> 00:25:56,340
presentation but we have some of them

00:25:53,850 --> 00:26:00,210
going what this really boils down to is

00:25:56,340 --> 00:26:02,310
we take this 65,000 packages we're

00:26:00,210 --> 00:26:04,890
getting about a thousand updates a week

00:26:02,310 --> 00:26:06,660
coming through Debian testing we're

00:26:04,890 --> 00:26:08,820
doing a couple repo rolls a month

00:26:06,660 --> 00:26:10,830
do the math carry the three whatever you

00:26:08,820 --> 00:26:12,810
want we have a lot of data we have some

00:26:10,830 --> 00:26:16,380
big data opportunities if we start

00:26:12,810 --> 00:26:19,550
thinking of the repo at the repo level

00:26:16,380 --> 00:26:21,810
that's our minimum unit of granularity

00:26:19,550 --> 00:26:26,310
this is the way that we're

00:26:21,810 --> 00:26:28,530
looking at a repo these are the topics

00:26:26,310 --> 00:26:30,600
areas I can't remember the exact word

00:26:28,530 --> 00:26:33,630
that packages are classified within

00:26:30,600 --> 00:26:36,870
Debian networking databases there's

00:26:33,630 --> 00:26:39,390
about 20 of these for all practical

00:26:36,870 --> 00:26:42,090
purposes we have added another virtual

00:26:39,390 --> 00:26:44,700
group to this collection called Helion

00:26:42,090 --> 00:26:48,450
those 600 packages that we care about

00:26:44,700 --> 00:26:50,700
for delivering our Helion product yes it

00:26:48,450 --> 00:26:52,470
draws from these other packages and

00:26:50,700 --> 00:26:54,690
networking databases obviously we don't

00:26:52,470 --> 00:26:56,640
pull anything from graphics I imagine

00:26:54,690 --> 00:26:58,440
but you get the idea for all practical

00:26:56,640 --> 00:27:02,570
purposes we've added another group to

00:26:58,440 --> 00:27:04,830
this giant thing called the Debian repo

00:27:02,570 --> 00:27:08,190
and I want to turn it on its side a

00:27:04,830 --> 00:27:11,670
little bit and look at it edge on and

00:27:08,190 --> 00:27:12,470
then look at more of them across time so

00:27:11,670 --> 00:27:15,420
this is a three-dimensional

00:27:12,470 --> 00:27:17,520
representation I hope you see 3d in

00:27:15,420 --> 00:27:19,110
there where the the major axis that we

00:27:17,520 --> 00:27:20,820
care about is time yes there's other

00:27:19,110 --> 00:27:22,500
axes and maybe there is some way to

00:27:20,820 --> 00:27:24,800
assign meaning to those that's a little

00:27:22,500 --> 00:27:27,930
over my head for data science right now

00:27:24,800 --> 00:27:30,120
but when we have all of this data and we

00:27:27,930 --> 00:27:32,120
have this playlist concept and databases

00:27:30,120 --> 00:27:34,920
to support it we can start doing

00:27:32,120 --> 00:27:37,260
calculations and tracking predictions

00:27:34,920 --> 00:27:38,430
who knows what it's a big data

00:27:37,260 --> 00:27:40,710
opportunity that we haven't fully

00:27:38,430 --> 00:27:42,720
explored yet we think it's going to be

00:27:40,710 --> 00:27:44,160
very very useful to us in understanding

00:27:42,720 --> 00:27:46,980
the support ability and the

00:27:44,160 --> 00:27:50,520
maintainability of Helion based on h

00:27:46,980 --> 00:27:52,440
linux and that's where we're planning to

00:27:50,520 --> 00:27:54,390
go with this we've already started doing

00:27:52,440 --> 00:27:56,670
a couple of things like that in terms of

00:27:54,390 --> 00:27:58,620
how we track stuff for example we took

00:27:56,670 --> 00:28:01,650
one custom repo I think this was one of

00:27:58,620 --> 00:28:04,740
those storage group sub repos of about a

00:28:01,650 --> 00:28:07,320
hundred packages to to drive storage

00:28:04,740 --> 00:28:09,960
unit and looked at the package

00:28:07,320 --> 00:28:11,520
volatility over time because we have all

00:28:09,960 --> 00:28:14,100
this data that we've snapshot it and

00:28:11,520 --> 00:28:16,160
stored we can tell things like this

00:28:14,100 --> 00:28:18,960
there's useful information in there

00:28:16,160 --> 00:28:22,470
another way to look at it is if somebody

00:28:18,960 --> 00:28:25,050
gave us an arbitrary random list of 50

00:28:22,470 --> 00:28:26,790
packages where is the closest repo that

00:28:25,050 --> 00:28:29,040
we have in history that would reproduce

00:28:26,790 --> 00:28:31,080
that set of packages from a unified repo

00:28:29,040 --> 00:28:33,720
now given the playlist so we can spread

00:28:31,080 --> 00:28:35,280
it out over repos because it's just a

00:28:33,720 --> 00:28:35,730
playlist it's just a custom repo we

00:28:35,280 --> 00:28:37,140
don't really

00:28:35,730 --> 00:28:39,180
care where it comes from or where the

00:28:37,140 --> 00:28:40,650
packages are resolved well we can start

00:28:39,180 --> 00:28:42,240
playing games like this right now which

00:28:40,650 --> 00:28:47,190
we think opens up an awful lot of

00:28:42,240 --> 00:28:50,040
opportunities kind of summarize all of

00:28:47,190 --> 00:28:52,470
that H Linux is stuck in the middle

00:28:50,040 --> 00:28:55,950
between two very different rates of

00:28:52,470 --> 00:28:57,840
progress and innovation velocities of a

00:28:55,950 --> 00:28:59,970
product release if you will OpenStack is

00:28:57,840 --> 00:29:02,760
moving in a very very fast pace a very

00:28:59,970 --> 00:29:05,460
very quick clip for how they do point

00:29:02,760 --> 00:29:07,830
releases it's almost weekly or they do a

00:29:05,460 --> 00:29:10,050
major point release of the complete

00:29:07,830 --> 00:29:12,240
thing however the hardware on the bottom

00:29:10,050 --> 00:29:14,850
does not operate on a weekly schedule it

00:29:12,240 --> 00:29:16,710
operates more on a semi-annual schedule

00:29:14,850 --> 00:29:18,540
we're caught in the middle we've got to

00:29:16,710 --> 00:29:21,170
balance those different velocities and

00:29:18,540 --> 00:29:23,460
the things that we release in a repo

00:29:21,170 --> 00:29:26,190
once we have all that data we can do

00:29:23,460 --> 00:29:28,140
forensics and analysis and predictions

00:29:26,190 --> 00:29:29,550
and regressions and all kinds of fun

00:29:28,140 --> 00:29:30,750
stuff that we really haven't even

00:29:29,550 --> 00:29:32,850
thought of yet we're still developing

00:29:30,750 --> 00:29:36,150
the data collection and the design of

00:29:32,850 --> 00:29:37,920
experiments phase one obvious thing is

00:29:36,150 --> 00:29:39,510
to provide these legacy repos we don't

00:29:37,920 --> 00:29:40,980
know how long we'll keep them going but

00:29:39,510 --> 00:29:44,120
we are planning to be able to keep them

00:29:40,980 --> 00:29:44,120
going for decades yes

00:29:50,860 --> 00:29:56,539
test ah yeah I have to step in you know

00:29:54,950 --> 00:29:58,580
that most of your problems are already

00:29:56,539 --> 00:30:01,249
solved in Debian are you aware of

00:29:58,580 --> 00:30:05,330
snapshot DB no we are aware of those

00:30:01,249 --> 00:30:06,620
things we had some trouble getting a few

00:30:05,330 --> 00:30:09,110
of the things to run with some of the

00:30:06,620 --> 00:30:11,749
other constraints that we had doing but

00:30:09,110 --> 00:30:15,289
no and with that schedule that we were

00:30:11,749 --> 00:30:17,830
given but that doesn't mean that we need

00:30:15,289 --> 00:30:20,059
to keep doing it the way we started and

00:30:17,830 --> 00:30:22,700
collaboration with the community could

00:30:20,059 --> 00:30:24,529
actually mean throwing out some of the

00:30:22,700 --> 00:30:26,509
stuff we've done and taking it what's

00:30:24,529 --> 00:30:28,909
already there if we can figure out how

00:30:26,509 --> 00:30:32,029
to get it to work for our needs you

00:30:28,909 --> 00:30:32,529
should talk to PETA is always happy to

00:30:32,029 --> 00:30:36,559
help

00:30:32,529 --> 00:30:39,919
snapshot related tasks and nearly all of

00:30:36,559 --> 00:30:42,769
your problems I write here are soft and

00:30:39,919 --> 00:30:44,629
snap shot that's good no that's one of

00:30:42,769 --> 00:30:47,749
the reasons we're here because we know

00:30:44,629 --> 00:30:50,720
we we've proceeded a little bit blindly

00:30:47,749 --> 00:30:52,279
or naively with good intent and we're

00:30:50,720 --> 00:30:55,399
hoping to find better ways to do things

00:30:52,279 --> 00:31:01,190
and give back and maybe do it at the

00:30:55,399 --> 00:31:02,990
same time so thank you the Big Data

00:31:01,190 --> 00:31:04,940
thing I've talked about a little bit and

00:31:02,990 --> 00:31:06,740
explained so I don't think I need to go

00:31:04,940 --> 00:31:09,350
into that a little bit we really are

00:31:06,740 --> 00:31:10,940
here to generate a new level of

00:31:09,350 --> 00:31:13,369
collaboration and work with the Debian

00:31:10,940 --> 00:31:18,289
community we need it we need it for our

00:31:13,369 --> 00:31:20,090
long term you know I say the phrase with

00:31:18,289 --> 00:31:21,649
a straight face we really are here to

00:31:20,090 --> 00:31:24,379
help we're here to play we're here to be

00:31:21,649 --> 00:31:27,379
for the long term we can't turn off the

00:31:24,379 --> 00:31:29,389
cloud sure we could reverse our decision

00:31:27,379 --> 00:31:30,799
on choosing Debian testing but it's

00:31:29,389 --> 00:31:33,289
turning out to be a really really good

00:31:30,799 --> 00:31:34,610
decision so far and over the course of

00:31:33,289 --> 00:31:35,990
the next year it's going to get set in

00:31:34,610 --> 00:31:37,549
stone and we're going to be chasing this

00:31:35,990 --> 00:31:39,860
for a long long time

00:31:37,549 --> 00:31:41,869
so we're not here to to second-guess

00:31:39,860 --> 00:31:43,639
ourselves we want to hear feedback we

00:31:41,869 --> 00:31:45,289
want to hear criticisms we want to hear

00:31:43,639 --> 00:31:46,610
did you think of this or why didn't you

00:31:45,289 --> 00:31:49,940
do that would you know we need the

00:31:46,610 --> 00:31:51,289
experts the things we're learning the

00:31:49,940 --> 00:31:53,330
things we're trying the things we want

00:31:51,289 --> 00:31:54,379
to do we think will not only help us but

00:31:53,330 --> 00:31:56,389
we think it's going to be of general

00:31:54,379 --> 00:31:57,830
interest to the Debian community we want

00:31:56,389 --> 00:31:59,480
to understand how we can give that back

00:31:57,830 --> 00:32:01,940
is it just the results is it our

00:31:59,480 --> 00:32:03,200
techniques is it our code we don't

00:32:01,940 --> 00:32:06,730
really know where that's going to go

00:32:03,200 --> 00:32:08,300
we are looking for help in

00:32:06,730 --> 00:32:09,860
specialization in a couple of different

00:32:08,300 --> 00:32:13,970
areas one is the general performance

00:32:09,860 --> 00:32:16,130
characterization and capture and tuning

00:32:13,970 --> 00:32:19,100
of a Linux system especially based on

00:32:16,130 --> 00:32:21,080
Debian repo management obviously that's

00:32:19,100 --> 00:32:23,540
going to be our our problem our Bugaboo

00:32:21,080 --> 00:32:25,190
for long after I've retired so I want to

00:32:23,540 --> 00:32:28,340
leave it in good hands for for somebody

00:32:25,190 --> 00:32:29,720
else how do we deal with bugs how do we

00:32:28,340 --> 00:32:31,370
track them how do we generate them how

00:32:29,720 --> 00:32:33,740
do we integrate them how do we help fix

00:32:31,370 --> 00:32:37,820
them how do we foster Debian maintained

00:32:33,740 --> 00:32:39,620
errs and developers within HP these new

00:32:37,820 --> 00:32:42,110
areas data scientists an up-and-coming

00:32:39,620 --> 00:32:44,780
area we need some a week that we could

00:32:42,110 --> 00:32:47,960
use some the collaboration opportunities

00:32:44,780 --> 00:32:49,910
are all over the map including maybe we

00:32:47,960 --> 00:32:52,070
sponsor interns to help take care of

00:32:49,910 --> 00:32:54,680
some of the things that we need directly

00:32:52,070 --> 00:32:56,810
for each Linux or that Debian needs in

00:32:54,680 --> 00:32:58,550
general to be more sustainable and more

00:32:56,810 --> 00:33:02,330
viable in the future it's in our

00:32:58,550 --> 00:33:03,560
interests to make sure debian thrives if

00:33:02,330 --> 00:33:05,990
you're already working for somebody else

00:33:03,560 --> 00:33:08,320
and you're happy with it great if you're

00:33:05,990 --> 00:33:10,220
looking for some other arrangement great

00:33:08,320 --> 00:33:13,460
we're here all week

00:33:10,220 --> 00:33:17,150
and we know you've got ideas that we've

00:33:13,460 --> 00:33:20,210
got to hear so introduced bill and

00:33:17,150 --> 00:33:22,730
Cameron already also here is our

00:33:20,210 --> 00:33:25,280
director Steve Geary who is in charge of

00:33:22,730 --> 00:33:28,790
all things Linux that HP can can that be

00:33:25,280 --> 00:33:30,350
true for a day or two okay it's a least

00:33:28,790 --> 00:33:32,150
true for a day or two it'll absolutely

00:33:30,350 --> 00:33:34,040
be true at least through tomorrow night

00:33:32,150 --> 00:33:35,540
where we're hosting a happy hour kind of

00:33:34,040 --> 00:33:38,060
a late happy hour after the final

00:33:35,540 --> 00:33:40,880
evening session down at the Marriott

00:33:38,060 --> 00:33:44,900
City Center second floor they've got the

00:33:40,880 --> 00:33:47,450
den dining entertainment and networking

00:33:44,900 --> 00:33:49,880
so come down have a little more late

00:33:47,450 --> 00:33:51,740
food have some drinks talk to us about

00:33:49,880 --> 00:33:53,330
anything because we want to talk to you

00:33:51,740 --> 00:33:56,000
we've got a lot to learn and we think we

00:33:53,330 --> 00:33:58,450
have a lot to offer there any other

00:33:56,000 --> 00:33:58,450
questions

00:34:09,030 --> 00:34:16,990
so you're um you're rolling a new

00:34:13,230 --> 00:34:19,240
release every few weeks from your

00:34:16,990 --> 00:34:21,399
importing packages from testing correct

00:34:19,240 --> 00:34:23,830
presumably because you want you know

00:34:21,399 --> 00:34:27,520
fresh packages correct what do you do

00:34:23,830 --> 00:34:28,899
when debian freezes testing we'll let

00:34:27,520 --> 00:34:32,350
you know as soon as you do that while

00:34:28,899 --> 00:34:35,200
we're doing this we I guess say we've

00:34:32,350 --> 00:34:37,840
been doing this since March you know

00:34:35,200 --> 00:34:40,210
April with with with real intent I guess

00:34:37,840 --> 00:34:43,720
you might say so yes there's lots of

00:34:40,210 --> 00:34:47,610
pitfalls and potholes waiting for us and

00:34:43,720 --> 00:34:47,610
we'll cross it when we come up to him

00:34:51,899 --> 00:35:00,280
well now we know who to ask get his name

00:34:57,720 --> 00:35:01,600
yeah I was wondering ever edge they have

00:35:00,280 --> 00:35:04,120
a similar question about the use of

00:35:01,600 --> 00:35:07,420
testing why did you use testing in the

00:35:04,120 --> 00:35:12,580
table to plus some specific specific

00:35:07,420 --> 00:35:15,540
back pots stable was not new enough in

00:35:12,580 --> 00:35:19,060
the opinion of the OpenStack developers

00:35:15,540 --> 00:35:21,070
they wanted us to use unstable and I

00:35:19,060 --> 00:35:23,980
wasn't quite that brave there was a

00:35:21,070 --> 00:35:26,410
little too much flux going on in that

00:35:23,980 --> 00:35:28,060
especially in some of the packages that

00:35:26,410 --> 00:35:30,850
look like they were intended for

00:35:28,060 --> 00:35:32,680
OpenStack okay I'm quite surprised

00:35:30,850 --> 00:35:36,580
surprised about that because I thought

00:35:32,680 --> 00:35:40,150
that OpenStack upstream was using the

00:35:36,580 --> 00:35:43,930
Ubuntu LT LTS realities as a recommended

00:35:40,150 --> 00:35:46,000
platform but OpenStack upstream is not a

00:35:43,930 --> 00:35:49,830
multibillion-dollar company trying to do

00:35:46,000 --> 00:35:49,830
good customer legacy support

00:35:53,510 --> 00:35:59,640
we definitely want to support them but

00:35:57,650 --> 00:36:02,010
that was one of the trade-offs that we

00:35:59,640 --> 00:36:04,830
made I was wondering about the

00:36:02,010 --> 00:36:07,970
integration what testing and integration

00:36:04,830 --> 00:36:11,000
system do you intend to publish some

00:36:07,970 --> 00:36:11,000
code or

00:36:11,520 --> 00:36:17,190
or at least some documentation about how

00:36:14,400 --> 00:36:23,370
to do it I'm going to turn that over to

00:36:17,190 --> 00:36:25,680
the testing guys so basically what we're

00:36:23,370 --> 00:36:27,770
going we have in place right now is an

00:36:25,680 --> 00:36:30,900
alpha release of our test framework and

00:36:27,770 --> 00:36:33,390
it really allows us to independently

00:36:30,900 --> 00:36:38,100
drive almost any kind of test or any

00:36:33,390 --> 00:36:40,260
type of localized or external to that

00:36:38,100 --> 00:36:43,380
test framework ability to test outside

00:36:40,260 --> 00:36:44,820
of that I think long term we'll see that

00:36:43,380 --> 00:36:47,100
come back into the open-source community

00:36:44,820 --> 00:36:50,490
we haven't had those discussions yet but

00:36:47,100 --> 00:36:52,320
then the I'll call it the edik within

00:36:50,490 --> 00:36:54,150
the company is thou shalt contribute

00:36:52,320 --> 00:36:57,240
everything back to open-source and if

00:36:54,150 --> 00:36:58,970
you don't say them about that Steve yeah

00:36:57,240 --> 00:37:03,300
so long term could be very short-term

00:36:58,970 --> 00:37:06,060
right so again we've only been around a

00:37:03,300 --> 00:37:09,660
few months I and the idea is indeed to

00:37:06,060 --> 00:37:11,220
put everything out in open source and at

00:37:09,660 --> 00:37:13,740
this point in time you know by the end

00:37:11,220 --> 00:37:15,680
of the week if you can chat with Bill

00:37:13,740 --> 00:37:23,130
and tell them why that's a good idea

00:37:15,680 --> 00:37:23,670
no ok yeah they're right there so chat

00:37:23,130 --> 00:37:25,440
with Bill

00:37:23,670 --> 00:37:28,980
tell them why that's a good idea or not

00:37:25,440 --> 00:37:33,690
and how it might be used we're certainly

00:37:28,980 --> 00:37:37,290
open to it long term we would like to

00:37:33,690 --> 00:37:41,520
pick this entire machine up out of HP

00:37:37,290 --> 00:37:42,780
and put it all as open-source we don't

00:37:41,520 --> 00:37:44,700
have the edict we don't have quite the

00:37:42,780 --> 00:37:47,280
permission for we're trying not to do

00:37:44,700 --> 00:37:51,120
anything now that would prevent that in

00:37:47,280 --> 00:37:53,580
the long or short run ok you did mention

00:37:51,120 --> 00:37:56,370
that you're doing copyright abuse of the

00:37:53,580 --> 00:37:59,630
packages are you getting feedback from

00:37:56,370 --> 00:38:03,840
lawyers or just from technical people

00:37:59,630 --> 00:38:08,190
yes we have an entire he seems motivated

00:38:03,840 --> 00:38:11,070
to go after that so no so the OS RB

00:38:08,190 --> 00:38:15,120
process that rocky referred to actually

00:38:11,070 --> 00:38:17,310
has across discipline review board so

00:38:15,120 --> 00:38:19,440
there's different Rd technical people

00:38:17,310 --> 00:38:22,110
and there is a legal community that's

00:38:19,440 --> 00:38:23,579
looking at them as well so we get plenty

00:38:22,110 --> 00:38:25,529
of feedback and we

00:38:23,579 --> 00:38:27,299
be more than happy to share share that

00:38:25,529 --> 00:38:31,589
feedback with you as part of what we

00:38:27,299 --> 00:38:33,779
give back if there's interest okay

00:38:31,589 --> 00:38:35,989
there's interest yes there is and some

00:38:33,779 --> 00:38:39,539
of that the fossil adji effort which

00:38:35,989 --> 00:38:42,150
examines source is all open source

00:38:39,539 --> 00:38:43,680
itself and we can find out more

00:38:42,150 --> 00:38:49,079
information on that for you if you're

00:38:43,680 --> 00:38:53,099
interested and another question how do

00:38:49,079 --> 00:38:56,509
you handle security support or do you

00:38:53,099 --> 00:38:56,509
have I mean do you have any specific

00:38:56,839 --> 00:39:04,769
support or special leave where sort of

00:39:01,469 --> 00:39:07,410
security yes we don't I mean regarding

00:39:04,769 --> 00:39:13,559
software many vulnerabilities we don't

00:39:07,410 --> 00:39:15,509
break out a separate security repo some

00:39:13,559 --> 00:39:16,529
of the problems with trying to figure

00:39:15,509 --> 00:39:19,349
out where to find the answer to this

00:39:16,529 --> 00:39:21,739
question building with triple o and disk

00:39:19,349 --> 00:39:24,450
image builder it is limited to a single

00:39:21,739 --> 00:39:27,029
source repo there can't be multiple

00:39:24,450 --> 00:39:28,979
sources that list entries or alternate

00:39:27,029 --> 00:39:32,789
places to get packages it all has to

00:39:28,979 --> 00:39:34,619
come from one fat repo so that's why

00:39:32,789 --> 00:39:36,839
we've gone after this mash up concept

00:39:34,619 --> 00:39:40,170
where it comes from different places and

00:39:36,839 --> 00:39:42,989
we presented as one repo so are you

00:39:40,170 --> 00:39:48,569
looking for how we address security

00:39:42,989 --> 00:39:51,180
issues or as a discipline many security

00:39:48,569 --> 00:39:53,519
issues meme and security issues along

00:39:51,180 --> 00:39:55,589
with the OS RB review we are we are

00:39:53,519 --> 00:39:57,509
doing a security review and once we

00:39:55,589 --> 00:39:59,670
especially once we know these 600 core

00:39:57,509 --> 00:40:02,130
packages that are a critical interest to

00:39:59,670 --> 00:40:04,229
HP Helion just like we have OS RB

00:40:02,130 --> 00:40:06,509
experts looking at the legal side of

00:40:04,229 --> 00:40:08,579
packages and licenses we have security

00:40:06,509 --> 00:40:10,559
expert on the team who works with other

00:40:08,579 --> 00:40:12,869
people within the company to track all

00:40:10,559 --> 00:40:15,119
of the security notifications and and

00:40:12,869 --> 00:40:17,190
the alerts that come from the rest of

00:40:15,119 --> 00:40:23,420
the world and compare those against the

00:40:17,190 --> 00:40:26,430
packages that were pushing through but

00:40:23,420 --> 00:40:28,589
are you actively trying to emit and

00:40:26,430 --> 00:40:30,739
let's say you find out you are

00:40:28,589 --> 00:40:30,739
vulnerable

00:40:30,750 --> 00:40:36,660
or a keep impact that you are that you

00:40:34,380 --> 00:40:40,650
are using is vulnerable are you actively

00:40:36,660 --> 00:40:43,619
working on fixing them and if so how I

00:40:40,650 --> 00:40:45,840
mean you have got some kind of

00:40:43,619 --> 00:40:47,460
involvement in the community because

00:40:45,840 --> 00:40:49,710
that's what we're trying to foster

00:40:47,460 --> 00:40:51,840
within HP we are the first point of

00:40:49,710 --> 00:40:55,109
contact for support for bugs for

00:40:51,840 --> 00:40:57,420
security violations or alerts it starts

00:40:55,109 --> 00:40:59,700
with us over time we will develop more

00:40:57,420 --> 00:41:02,550
and more expertise to be able to handle

00:40:59,700 --> 00:41:06,119
more of the critical problems ourselves

00:41:02,550 --> 00:41:08,010
however we can't do everything we're not

00:41:06,119 --> 00:41:10,020
ever going to be that big we are going

00:41:08,010 --> 00:41:11,609
to rely heavily on the community to do

00:41:10,020 --> 00:41:14,190
it I think a really good example is

00:41:11,609 --> 00:41:16,740
heartbleed we picked up all the

00:41:14,190 --> 00:41:18,480
notifications on that told all of our

00:41:16,740 --> 00:41:20,970
internal partners but by the time we got

00:41:18,480 --> 00:41:23,580
that kind of announcement out you guys

00:41:20,970 --> 00:41:25,920
had already proposed patches and fixes

00:41:23,580 --> 00:41:27,540
and the chain of events was there so

00:41:25,920 --> 00:41:32,220
that we managed to offer a two-day

00:41:27,540 --> 00:41:34,830
turnaround inside HP for that fix we had

00:41:32,220 --> 00:41:36,660
it posted on one of our new repos before

00:41:34,830 --> 00:41:37,790
half of our development group even knew

00:41:36,660 --> 00:41:40,830
there was a problem

00:41:37,790 --> 00:41:42,810
so we'll fix what we can will contribute

00:41:40,830 --> 00:41:44,280
where we can we rely on community

00:41:42,810 --> 00:41:50,010
involvement and we need to figure out

00:41:44,280 --> 00:41:52,170
how to help you guys do that ok is

00:41:50,010 --> 00:41:54,540
speaking as a member of the security

00:41:52,170 --> 00:41:58,589
team I'd like to arrive I think I would

00:41:54,540 --> 00:42:00,780
like to know and have a greater

00:41:58,589 --> 00:42:02,940
collaboration because we know that there

00:42:00,780 --> 00:42:06,930
are several companies that use Debian

00:42:02,940 --> 00:42:10,650
and a we think they provide security

00:42:06,930 --> 00:42:12,270
support like in this case but we don't

00:42:10,650 --> 00:42:14,910
know and we've never heard about them I

00:42:12,270 --> 00:42:17,130
mean directly we've never received an

00:42:14,910 --> 00:42:22,140
email and for some cases like in

00:42:17,130 --> 00:42:24,839
squeeze-out years it is until everything

00:42:22,140 --> 00:42:28,290
is set up that we receive one email like

00:42:24,839 --> 00:42:28,770
yeah we might be interested but that's

00:42:28,290 --> 00:42:31,980
about it

00:42:28,770 --> 00:42:34,380
so please know if you're interested get

00:42:31,980 --> 00:42:37,109
in touch with us at least we would like

00:42:34,380 --> 00:42:39,690
to collaborate absolutely we have people

00:42:37,109 --> 00:42:41,700
in place we have a plan in place there

00:42:39,690 --> 00:42:43,560
they're skilled and experienced in this

00:42:41,700 --> 00:42:44,430
but we would love to have you tell you

00:42:43,560 --> 00:42:53,310
just how smart we

00:42:44,430 --> 00:42:55,500
think we really are all right we've

00:42:53,310 --> 00:42:58,920
reached a collective one more got to

00:42:55,500 --> 00:43:04,050
have one more here or this guy's what's

00:42:58,920 --> 00:43:06,480
between you and dinner right so so far

00:43:04,050 --> 00:43:08,820
software doesn't come from Debian like

00:43:06,480 --> 00:43:11,160
Colonel in Europe and phone OpenStack

00:43:08,820 --> 00:43:14,970
branch to use Debian package easement as

00:43:11,160 --> 00:43:23,490
a format to distribute software oh yes

00:43:14,970 --> 00:43:25,560
okay one more invite for tomorrow night

00:43:23,490 --> 00:43:28,950
8:30 at the marriott city center it's

00:43:25,560 --> 00:43:30,690
about 10 blocks straight down Broadway 8

00:43:28,950 --> 00:43:32,970
to 12 depending on who you ask

00:43:30,690 --> 00:43:35,400
a very very short walk there's transit

00:43:32,970 --> 00:43:37,590
come by and see us come by and let us

00:43:35,400 --> 00:43:38,910
say thank you and spend some time come

00:43:37,590 --> 00:43:41,870
by and tell us what we need to be

00:43:38,910 --> 00:43:45,080
focusing on and what we're missing

00:43:41,870 --> 00:43:47,100
exactly exactly and bring bringing I

00:43:45,080 --> 00:43:48,480
don't know markers or something so that

00:43:47,100 --> 00:43:51,750
we walk out of there with good

00:43:48,480 --> 00:43:54,720
information just a follow-up to Lucas

00:43:51,750 --> 00:43:57,660
question the a you liking Debian sauce

00:43:54,720 --> 00:44:01,350
packages as well Debian buttery packages

00:43:57,660 --> 00:44:03,810
yes we're still getting good at kernel

00:44:01,350 --> 00:44:05,960
source getting those packages in after

00:44:03,810 --> 00:44:08,520
we've put our custom configurations in

00:44:05,960 --> 00:44:11,430
but we're providing source packages for

00:44:08,520 --> 00:44:14,280
all the Debian packages where it exists

00:44:11,430 --> 00:44:16,620
some of the foreign packages source does

00:44:14,280 --> 00:44:18,690
not build or comes from other companies

00:44:16,620 --> 00:44:20,520
that we're working on the Percona

00:44:18,690 --> 00:44:23,370
database stuff if any of you are

00:44:20,520 --> 00:44:25,920
familiar with that they've taken and

00:44:23,370 --> 00:44:27,990
muck with MySQL and do some stuff to it

00:44:25,920 --> 00:44:30,570
and and push it on and that's what

00:44:27,990 --> 00:44:32,220
OpenStack needs that one's being a

00:44:30,570 --> 00:44:38,010
little bit sticky but we're working

00:44:32,220 --> 00:44:42,000
through it do you plan to publish the

00:44:38,010 --> 00:44:43,410
repository its input yes with the focus

00:44:42,000 --> 00:44:47,010
on at some point

00:44:43,410 --> 00:44:47,010
[Laughter]

00:44:48,230 --> 00:44:54,930
okay yeah we've got those 600 packages

00:44:52,350 --> 00:44:57,840
that we're using that's that's we can

00:44:54,930 --> 00:44:59,280
completely share that right essentially

00:44:57,840 --> 00:45:01,350
it is shared when you do an installation

00:44:59,280 --> 00:45:03,930
of hylia on an open stack the packages

00:45:01,350 --> 00:45:06,210
are there so the mental hurdle against

00:45:03,930 --> 00:45:09,510
opening those up in a in a pure repo has

00:45:06,210 --> 00:45:11,430
has really been breached there just are

00:45:09,510 --> 00:45:12,870
some of the logistical and legal things

00:45:11,430 --> 00:45:15,000
about setting it up that we've got to

00:45:12,870 --> 00:45:16,590
work through yeah so if you guys have

00:45:15,000 --> 00:45:19,470
got ideas about how we can be more open

00:45:16,590 --> 00:45:21,150
and share and be more transparent about

00:45:19,470 --> 00:45:22,980
what we're doing we'd love to hear about

00:45:21,150 --> 00:45:30,390
it and then we'll wiggle through

00:45:22,980 --> 00:45:31,500
whatever we have to from our side great

00:45:30,390 --> 00:45:33,670
thank you very much for your attendance

00:45:31,500 --> 00:45:37,849
really appreciate it

00:45:33,670 --> 00:45:37,849

YouTube URL: https://www.youtube.com/watch?v=POIoNeanzWo


