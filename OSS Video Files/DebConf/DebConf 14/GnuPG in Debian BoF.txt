Title: GnuPG in Debian BoF
Publication date: 2017-12-02
Playlist: DebConf 14
Description: 
	by Daniel Kahn Gillmor

At: DebConf14
https://debconf14.debconf.org/
Room: Room 327
Scheduled start: 2014-08-26 11:00:00
Captions: 
	00:00:00,359 --> 00:00:04,500
during the conference some of us who are

00:00:02,700 --> 00:00:08,130
interested can put can get some of this

00:00:04,500 --> 00:00:09,510
work done concretely this week and I

00:00:08,130 --> 00:00:14,759
think we have a lot that we can do with

00:00:09,510 --> 00:00:17,699
GPG and I'm hoping to hoping to figure

00:00:14,759 --> 00:00:19,109
out if there are any concerns that we're

00:00:17,699 --> 00:00:19,770
missing and like get kind of the road

00:00:19,109 --> 00:00:23,789
map out of here

00:00:19,770 --> 00:00:27,539
I'm also on IRC right now in dev Kampf -

00:00:23,789 --> 00:00:29,189
room 3 to 7 but hopefully we can get

00:00:27,539 --> 00:00:31,520
everyone to consolidate and use the GAVI

00:00:29,189 --> 00:00:35,030
chat and the GAVI page just so that

00:00:31,520 --> 00:00:39,149
everyone can share the same screen the

00:00:35,030 --> 00:00:41,460
GAVI screen is being it's being it's up

00:00:39,149 --> 00:00:42,719
on the screen here so clicking work

00:00:41,460 --> 00:00:45,690
there that'd be good I'm gonna monitor

00:00:42,719 --> 00:00:51,750
IRC as well we have a microphone if you

00:00:45,690 --> 00:00:59,699
have comments yeah so I'm dkg if they

00:00:51,750 --> 00:01:03,570
press short once it's not I'm Eric Doyle

00:00:59,699 --> 00:01:06,630
and I'm the new PG - maintainer and we

00:01:03,570 --> 00:01:08,369
have the zucchini course on the on IRC

00:01:06,630 --> 00:01:10,530
right now who's currently there we go

00:01:08,369 --> 00:01:13,140
welcome you just joined I'm Gabi I think

00:01:10,530 --> 00:01:18,270
you just installed got it is the main

00:01:13,140 --> 00:01:22,380
GPG one winner right now right so bit of

00:01:18,270 --> 00:01:23,400
an agenda bashing here so we've got a

00:01:22,380 --> 00:01:30,090
bunch of different topics that people

00:01:23,400 --> 00:01:31,650
have fit up so I'm up for just diving in

00:01:30,090 --> 00:01:33,720
if anybody has any other particular

00:01:31,650 --> 00:01:37,280
topics feel free to call them out or

00:01:33,720 --> 00:01:37,280
edit the gobby document yeah

00:01:39,970 --> 00:01:45,130
I don't know how to do that here

00:01:59,360 --> 00:02:09,500
that agree okay yeah we've got the pump

00:02:05,690 --> 00:02:13,520
over there already should we explain the

00:02:09,500 --> 00:02:16,760
current state of the world yeah this

00:02:13,520 --> 00:02:19,670
came up with the key ring mate

00:02:16,760 --> 00:02:22,460
discussion also it was right okay I

00:02:19,670 --> 00:02:24,260
guess I'll explain so obviously you knew

00:02:22,460 --> 00:02:26,420
PPG's have been in the archive for a

00:02:24,260 --> 00:02:31,209
long time there's currently two

00:02:26,420 --> 00:02:35,180
supported versions the sort of existing

00:02:31,209 --> 00:02:37,190
canopy G one point four branch that is a

00:02:35,180 --> 00:02:39,260
very standalone tool doesn't really

00:02:37,190 --> 00:02:42,489
depend on any libraries it to some

00:02:39,260 --> 00:02:45,770
crypto internally and there's the newer

00:02:42,489 --> 00:02:47,840
canoe PG two branch newer and that it's

00:02:45,770 --> 00:02:53,420
been around for I don't know five years

00:02:47,840 --> 00:02:57,080
now baby and it is much more modular it

00:02:53,420 --> 00:03:00,860
depends on on the G crypt to do its

00:02:57,080 --> 00:03:06,320
actual crypto it supports some other

00:03:00,860 --> 00:03:10,250
things that it supports like what does

00:03:06,320 --> 00:03:12,580
s/mime the g PG one doesn't support it's

00:03:10,250 --> 00:03:16,610
the thing that provides canoe PG agent

00:03:12,580 --> 00:03:19,610
but most and it's it's more modular but

00:03:16,610 --> 00:03:22,700
it's mostly compatible or it's a

00:03:19,610 --> 00:03:25,220
backwards compatible GP GP one yeah sort

00:03:22,700 --> 00:03:31,130
of bug bug compatible maybe with the API

00:03:25,220 --> 00:03:32,870
yeah so so this is actually kind of a

00:03:31,130 --> 00:03:34,370
confusing set up I think for many point

00:03:32,870 --> 00:03:37,100
Debian who want to know just like what

00:03:34,370 --> 00:03:39,080
what gbg am I supposed to use and the

00:03:37,100 --> 00:03:40,670
nuances and the differences between GP g

00:03:39,080 --> 00:03:45,080
and g PG - from the users point of view

00:03:40,670 --> 00:03:46,690
I think tend to be very minimal and in

00:03:45,080 --> 00:03:48,680
fact it's the fact that we have to the

00:03:46,690 --> 00:03:50,120
upstream is supporting the one point

00:03:48,680 --> 00:03:52,010
four branch and the dew point oak branch

00:03:50,120 --> 00:03:53,989
and working on the master branch which

00:03:52,010 --> 00:03:55,850
is 2 point 1 which is not released yet

00:03:53,989 --> 00:04:00,530
that has been in Veda for I think at

00:03:55,850 --> 00:04:05,660
least 5 years literally probably four

00:04:00,530 --> 00:04:07,310
but it before but it but yeah so that so

00:04:05,660 --> 00:04:09,050
two point one is gonna come up here

00:04:07,310 --> 00:04:13,340
we've got that on there

00:04:09,050 --> 00:04:19,400
on the list so Fedora uses GPG to by

00:04:13,340 --> 00:04:22,430
default the windows PG installer uses PG

00:04:19,400 --> 00:04:24,170
- I believe glue PG one has been kept

00:04:22,430 --> 00:04:26,510
around by upstream mainly because of the

00:04:24,170 --> 00:04:28,540
lack of modularity because the idea is

00:04:26,510 --> 00:04:31,250
that it should make it easier to deploy

00:04:28,540 --> 00:04:34,850
on systems that may or may not have

00:04:31,250 --> 00:04:36,260
dependency management available and we

00:04:34,850 --> 00:04:38,300
actually have good dependency management

00:04:36,260 --> 00:04:45,020
so I'm not so sure why we are sticking

00:04:38,300 --> 00:04:46,670
with gbg1 as as the default it's other

00:04:45,020 --> 00:04:48,290
than the fact that it's pretty scary to

00:04:46,670 --> 00:04:50,210
change a piece of software that's this

00:04:48,290 --> 00:04:58,160
critical to Debian that's as complicated

00:04:50,210 --> 00:05:00,800
as gzg is so so one question is what can

00:04:58,160 --> 00:05:02,780
we do to make it so that people can fly

00:05:00,800 --> 00:05:04,250
a different thing as the default if you

00:05:02,780 --> 00:05:07,070
want to consider the possibility of

00:05:04,250 --> 00:05:08,720
actually making a change to GPG - as a

00:05:07,070 --> 00:05:11,990
default presumably that's gonna need to

00:05:08,720 --> 00:05:13,450
happen in stages and maybe that means we

00:05:11,990 --> 00:05:19,630
need to make it easy for people to

00:05:13,450 --> 00:05:19,630
switch to GPG - and see what breaks

00:05:20,120 --> 00:05:23,230
[Music]

00:05:24,040 --> 00:05:28,940
perhaps so it makes sense to upload a

00:05:26,510 --> 00:05:31,340
transitional package to experimental

00:05:28,940 --> 00:05:33,050
that is packaged as GPG with all the

00:05:31,340 --> 00:05:35,720
binaries appropriately set that is

00:05:33,050 --> 00:05:38,450
incompatible with old GPG and the

00:05:35,720 --> 00:05:40,700
current GPG - packages as a transition

00:05:38,450 --> 00:05:42,620
and just that way it's a smooth upgrade

00:05:40,700 --> 00:05:44,690
path and you can try it in experimental

00:05:42,620 --> 00:05:48,290
and see what it would be like to have

00:05:44,690 --> 00:05:50,540
only one GPG okay that's an interesting

00:05:48,290 --> 00:05:52,130
proposal I I hadn't thought it I feel

00:05:50,540 --> 00:05:55,250
like that's pretty radical actually yeah

00:05:52,130 --> 00:05:57,800
I mean we've got icy alternatives up

00:05:55,250 --> 00:06:00,580
here as a the transition path that I was

00:05:57,800 --> 00:06:03,950
thinking of as being a little bit more a

00:06:00,580 --> 00:06:06,140
little bit more chill where

00:06:03,950 --> 00:06:10,340
we would need to upload a new version of

00:06:06,140 --> 00:06:13,100
a new PG that installs itself as gbg1

00:06:10,340 --> 00:06:15,320
and sets up that's the alternatives

00:06:13,100 --> 00:06:18,110
where itself as the highest priority for

00:06:15,320 --> 00:06:19,910
a user pin GPG and then once that's in

00:06:18,110 --> 00:06:20,930
place then you could say that the apt to

00:06:19,910 --> 00:06:30,050
could add its own

00:06:20,930 --> 00:06:31,850
that's the alternatives option i already

00:06:30,050 --> 00:06:35,240
on my systems and my systems at work

00:06:31,850 --> 00:06:37,310
routinely divert GPG use of in GPG to

00:06:35,240 --> 00:06:39,350
use the pin gbg1 and i can create a

00:06:37,310 --> 00:06:44,210
similar link called user pin GPG to use

00:06:39,350 --> 00:06:45,470
a pin GPT to and I've done it for over a

00:06:44,210 --> 00:06:47,540
year probably if you don't have all your

00:06:45,470 --> 00:06:48,380
hair it works absolutely fine I can't

00:06:47,540 --> 00:06:51,380
even tell the difference

00:06:48,380 --> 00:06:55,190
okay so alternatives would be nice to

00:06:51,380 --> 00:06:57,890
let me do that quicker and more easily

00:06:55,190 --> 00:07:00,020
on a new machine but but a package that

00:06:57,890 --> 00:07:03,490
can do a diverter instead would be also

00:07:00,020 --> 00:07:03,490
a perfectly acceptable solution

00:07:05,010 --> 00:07:10,270
so one major issue with using

00:07:07,690 --> 00:07:12,130
alternatives for user bin GPG is that

00:07:10,270 --> 00:07:15,670
GPG is used programmatically really

00:07:12,130 --> 00:07:18,010
often so it would be unexpected if

00:07:15,670 --> 00:07:20,290
programs had to cope with potentially

00:07:18,010 --> 00:07:21,850
different versions of GPG on different

00:07:20,290 --> 00:07:24,070
systems if they didn't call it with an

00:07:21,850 --> 00:07:26,020
explicit version especially since there

00:07:24,070 --> 00:07:29,410
are scripts using GPG that are not

00:07:26,020 --> 00:07:31,270
written for debian so same problem is

00:07:29,410 --> 00:07:32,740
GCC for example the reason we don't use

00:07:31,270 --> 00:07:36,940
alternatives for certain things or

00:07:32,740 --> 00:07:38,560
Python or similar sorry oh yeah that's a

00:07:36,940 --> 00:07:41,020
real distract thing let me turn that off

00:07:38,560 --> 00:07:44,230
so so mostly the the command-line

00:07:41,020 --> 00:07:45,850
interface is the same there's probably a

00:07:44,230 --> 00:07:49,390
few tiny little corner cases where it's

00:07:45,850 --> 00:07:52,960
not but basically you can run whether

00:07:49,390 --> 00:07:55,030
it's GP g1 or GPT - if you've assumed I

00:07:52,960 --> 00:07:56,980
mean so gbtb2 actually adds a few more

00:07:55,030 --> 00:07:58,270
fine line flags obviously but if you

00:07:56,980 --> 00:07:59,890
were you if you're expecting it to have

00:07:58,270 --> 00:08:02,290
worked with GP GP 1 it should work just

00:07:59,890 --> 00:08:03,580
fine with GP GP 2 I haven't seen any

00:08:02,290 --> 00:08:05,560
cases where it has time you're saying

00:08:03,580 --> 00:08:07,150
that you've done this dye version and

00:08:05,560 --> 00:08:08,650
none of the tools that you've used have

00:08:07,150 --> 00:08:09,910
broken it and so I think that's the

00:08:08,650 --> 00:08:12,160
alternatives because it's an opportunity

00:08:09,910 --> 00:08:14,560
to say hey we're gonna set it up we're

00:08:12,160 --> 00:08:15,729
gonna set the default to be gbg1 those

00:08:14,560 --> 00:08:18,760
people who are interested can just

00:08:15,729 --> 00:08:20,800
update alternatives and find out I mean

00:08:18,760 --> 00:08:25,270
and particularly you know probably send

00:08:20,800 --> 00:08:27,640
mail to the DDA and say hey if you make

00:08:25,270 --> 00:08:28,930
heavy use of scripted use of GPG or you

00:08:27,640 --> 00:08:30,490
think you might be making heavy scripted

00:08:28,930 --> 00:08:31,960
use please try this out and let us know

00:08:30,490 --> 00:08:37,719
because we you know if we want to

00:08:31,960 --> 00:08:39,339
consider changing the defaults so I want

00:08:37,719 --> 00:08:41,830
to know if anybody is gonna really

00:08:39,339 --> 00:08:44,250
object if we try to push for something

00:08:41,830 --> 00:08:44,250
like that

00:08:47,720 --> 00:08:57,800
there there's a bit of tooling built

00:08:50,910 --> 00:09:00,840
around GPG like perl modules and python

00:08:57,800 --> 00:09:03,090
interfaces and so on and it might be

00:09:00,840 --> 00:09:04,980
good to sort of I don't know file bugs

00:09:03,090 --> 00:09:10,050
or take special care to talk to those

00:09:04,980 --> 00:09:12,060
people before or as part of this sort of

00:09:10,050 --> 00:09:16,440
semi transition thing you're talking

00:09:12,060 --> 00:09:20,460
about yeah yeah so it's it's a little

00:09:16,440 --> 00:09:21,990
bit tricky because GPG is there are

00:09:20,460 --> 00:09:26,610
people you can declaring explicit

00:09:21,990 --> 00:09:32,120
dependencies on GPG isn't it because

00:09:26,610 --> 00:09:36,900
it's just gonna be there well I have a

00:09:32,120 --> 00:09:41,460
fairly extensive project that uses the

00:09:36,900 --> 00:09:43,590
Python canoe PG interface so if the

00:09:41,460 --> 00:09:45,300
command line broke because I believe

00:09:43,590 --> 00:09:48,150
that's how it uses that under the hood

00:09:45,300 --> 00:09:49,920
it just calls GPG command line so if

00:09:48,150 --> 00:09:52,590
that command line interface broke then

00:09:49,920 --> 00:09:55,200
my test cases would definitely let us

00:09:52,590 --> 00:09:57,180
know suppose that so okay it might be

00:09:55,200 --> 00:09:59,370
something I'd be worried I'd be willing

00:09:57,180 --> 00:10:00,510
to experience you know especially if we

00:09:59,370 --> 00:10:02,520
had alternatives that would be really

00:10:00,510 --> 00:10:06,960
easy for me to test it out okay that's

00:10:02,520 --> 00:10:10,290
case and see what happens great so yeah

00:10:06,960 --> 00:10:11,670
I mean more generally the impression I'm

00:10:10,290 --> 00:10:13,950
getting from what you're saying is it's

00:10:11,670 --> 00:10:16,350
supposed to be compatible and the only

00:10:13,950 --> 00:10:18,360
reason you think we might not want to

00:10:16,350 --> 00:10:21,570
just go forward is that there might be

00:10:18,360 --> 00:10:26,330
bugs in the compatibility yeah I think

00:10:21,570 --> 00:10:28,470
that's a yes I think that's the case

00:10:26,330 --> 00:10:30,360
there are other there's a couple of

00:10:28,470 --> 00:10:33,960
other concerns about things like Debian

00:10:30,360 --> 00:10:36,090
installer which needs a bit of GPG and

00:10:33,960 --> 00:10:37,530
we I guess just need to figure out what

00:10:36,090 --> 00:10:44,510
those parts are is anyone from the DI

00:10:37,530 --> 00:10:44,510
team here or online on IRC so

00:10:49,620 --> 00:10:56,460
so I'm just reading with I mean we don't

00:10:52,620 --> 00:10:57,690
we don't again we don't have to we can

00:10:56,460 --> 00:10:59,010
do this alternative without actually

00:10:57,690 --> 00:11:01,710
changing anything but the Installer so

00:10:59,010 --> 00:11:06,660
the Installer can still have right

00:11:01,710 --> 00:11:11,880
everyone can ship you pgv in that GPG v1

00:11:06,660 --> 00:11:13,860
right exactly yeah so the tool that just

00:11:11,880 --> 00:11:15,450
for the context here the the installed

00:11:13,860 --> 00:11:18,570
there's there's a separate package for

00:11:15,450 --> 00:11:20,520
this tool called GPG V which is just a

00:11:18,570 --> 00:11:23,730
light it's a lightweight binary that

00:11:20,520 --> 00:11:25,250
only does signature verification doesn't

00:11:23,730 --> 00:11:28,140
do any other GPG things

00:11:25,250 --> 00:11:30,630
so both gbg1 and you could you to ship

00:11:28,140 --> 00:11:32,100
this and there's a you depth for it

00:11:30,630 --> 00:11:34,230
because it's needed by the Installer to

00:11:32,100 --> 00:11:34,860
verify things like the apt signatures

00:11:34,230 --> 00:11:38,010
and things like that

00:11:34,860 --> 00:11:42,480
right yeah so there's a comment online

00:11:38,010 --> 00:11:44,670
about about the sizes I believe they can

00:11:42,480 --> 00:11:46,170
new PG itself is actually smaller abt to

00:11:44,670 --> 00:11:48,090
is actually smaller than your PG but

00:11:46,170 --> 00:11:50,280
that's because it's it's got a lot more

00:11:48,090 --> 00:11:52,620
dependencies and the dependencies are

00:11:50,280 --> 00:11:54,060
what make up the rest of it yeah I mean

00:11:52,620 --> 00:11:56,490
it's I would say it's a lot more

00:11:54,060 --> 00:12:01,530
dependencies but it's I mean the largest

00:11:56,490 --> 00:12:05,790
one is the decrypt it depends on Lib GPG

00:12:01,530 --> 00:12:07,740
error which is I don't even I don't know

00:12:05,790 --> 00:12:11,220
that much about but you you were people

00:12:07,740 --> 00:12:13,980
here is a is a is an odd little package

00:12:11,220 --> 00:12:16,530
that just supports error handling across

00:12:13,980 --> 00:12:18,570
a wide variety of platforms in a common

00:12:16,530 --> 00:12:21,090
way and there are a couple of other sort

00:12:18,570 --> 00:12:22,950
of portability layer things that it that

00:12:21,090 --> 00:12:25,250
it provides and there's one other small

00:12:22,950 --> 00:12:28,980
library called lib a swan which is

00:12:25,250 --> 00:12:32,190
handles the protocol between GPG and GPG

00:12:28,980 --> 00:12:34,800
agent and i think that we have decrypt

00:12:32,190 --> 00:12:36,420
dependencies already and that that are

00:12:34,800 --> 00:12:38,130
gonna need to be on the system so i

00:12:36,420 --> 00:12:40,200
don't think i don't like pulling in g

00:12:38,130 --> 00:12:42,780
creek is particularly expensive yes i

00:12:40,200 --> 00:12:44,160
know i think yeah my last examination of

00:12:42,780 --> 00:12:46,490
the situation was that G coach was

00:12:44,160 --> 00:12:46,490
already there

00:12:53,709 --> 00:12:59,300
maybe this is just my misconception but

00:12:56,839 --> 00:13:04,190
I had the impression that GPG

00:12:59,300 --> 00:13:06,649
to more or less requires you to use GPG

00:13:04,190 --> 00:13:07,040
agent that's not the case that's not the

00:13:06,649 --> 00:13:09,079
kid okay

00:13:07,040 --> 00:13:11,300
gbgt point one will require the use of

00:13:09,079 --> 00:13:12,829
the agent I think okay I don't think

00:13:11,300 --> 00:13:15,320
that GPG two requires the use of the

00:13:12,829 --> 00:13:23,480
agent I mean I've seen people struggling

00:13:15,320 --> 00:13:27,740
with things that used to do direct peon

00:13:23,480 --> 00:13:30,170
entry or passphrase entry and is sort of

00:13:27,740 --> 00:13:35,540
break I mean who knows where the bug is

00:13:30,170 --> 00:13:37,850
right but so that is a potential point

00:13:35,540 --> 00:13:41,680
of friction I guess yeah it's a good

00:13:37,850 --> 00:13:41,680
anecdotal but that's just my impression

00:13:42,850 --> 00:13:50,899
yeah just it does not require it but yes

00:13:48,320 --> 00:13:55,930
two point one will require it all right

00:13:50,899 --> 00:13:57,800
so I just went to my build CID chroot

00:13:55,930 --> 00:14:00,170
unfortunately I can't tell you how much

00:13:57,800 --> 00:14:03,949
space the new PG one takes because I've

00:14:00,170 --> 00:14:07,370
already got it but I asked out about GPG

00:14:03,949 --> 00:14:10,850
too and it suggests installing 183

00:14:07,370 --> 00:14:14,240
megabytes of stuff including font config

00:14:10,850 --> 00:14:23,329
add a tie - ation library and an

00:14:14,240 --> 00:14:27,350
enormous pile of libraries yeah so one

00:14:23,329 --> 00:14:30,709
of the things that the current so the

00:14:27,350 --> 00:14:32,329
current version of GPG - will recommend

00:14:30,709 --> 00:14:34,339
or I think depends directly or is the

00:14:32,329 --> 00:14:38,480
cameras recommend or straight depends on

00:14:34,339 --> 00:14:42,560
a new PG agent which depends on what's

00:14:38,480 --> 00:14:44,930
that tool called the yeah

00:14:42,560 --> 00:14:46,910
pin pin entry and the default

00:14:44,930 --> 00:14:49,279
alternative for that is the genome

00:14:46,910 --> 00:14:52,010
version so it will pull in a lot of

00:14:49,279 --> 00:14:54,199
genome things potentially but we can

00:14:52,010 --> 00:14:57,860
discuss that problem slightly down this

00:14:54,199 --> 00:14:59,930
list so I just like to answer the

00:14:57,860 --> 00:15:03,110
question about recommends versus depends

00:14:59,930 --> 00:15:03,950
if I ask without recommends only a

00:15:03,110 --> 00:15:12,230
hundred and seven

00:15:03,950 --> 00:15:13,540
megabytes okay where were we so it

00:15:12,230 --> 00:15:15,950
sounds like we need to look into that

00:15:13,540 --> 00:15:18,800
cleanup yeah for me doesn't it

00:15:15,950 --> 00:15:20,450
I think that's nothing that is the boss

00:15:18,800 --> 00:15:23,060
yeah I think that's one of that second

00:15:20,450 --> 00:15:26,210
last line there sorry before you move on

00:15:23,060 --> 00:15:28,010
from that and do you know where Lib GP

00:15:26,210 --> 00:15:29,450
GME fits into any of this does it have

00:15:28,010 --> 00:15:32,690
the same interface between the two

00:15:29,450 --> 00:15:34,280
versions or really amazed so people who

00:15:32,690 --> 00:15:37,280
don't know how this stuff works which is

00:15:34,280 --> 00:15:40,010
probably everyone because I'm not yeah

00:15:37,280 --> 00:15:42,260
it's legit PG&E is a library that's

00:15:40,010 --> 00:15:46,550
supposed to make it easy to use CPG from

00:15:42,260 --> 00:15:48,320
C and what it actually does is it Forks

00:15:46,550 --> 00:15:50,120
a JPG process in the background and

00:15:48,320 --> 00:15:52,580
talks to it over a separate Channel and

00:15:50,120 --> 00:15:54,800
G PG&E itself is actually capable of

00:15:52,580 --> 00:15:57,650
picking a different jpg binary to work

00:15:54,800 --> 00:16:00,020
to work with so I think I think it

00:15:57,650 --> 00:16:02,320
actually should be fine within and not

00:16:00,020 --> 00:16:02,320
care

00:16:08,800 --> 00:16:17,120
so I also have a tool that uses Python

00:16:13,250 --> 00:16:19,610
and the jpg interface to two things

00:16:17,120 --> 00:16:22,070
which is shelling out or forking what

00:16:19,610 --> 00:16:24,200
behind the scenes and I'm wondering you

00:16:22,070 --> 00:16:28,240
know for those of us that want to do

00:16:24,200 --> 00:16:32,000
tools that reason about or talk about

00:16:28,240 --> 00:16:34,370
key stores what's the right way to do

00:16:32,000 --> 00:16:37,730
this going forward especially if there

00:16:34,370 --> 00:16:41,720
might be alternative implementations of

00:16:37,730 --> 00:16:43,850
open PGP Clint you know what's the right

00:16:41,720 --> 00:16:45,890
way to think about doing a suite

00:16:43,850 --> 00:16:48,320
continue to do stuff directly or

00:16:45,890 --> 00:16:51,080
indirectly through command line wrappers

00:16:48,320 --> 00:16:52,960
or is there it if you're working with

00:16:51,080 --> 00:16:55,310
GPG that's the only option at the moment

00:16:52,960 --> 00:16:56,870
if whether that's the right way to do

00:16:55,310 --> 00:16:58,430
key management might be a separate

00:16:56,870 --> 00:17:05,089
discussion than just how do we maintain

00:16:58,430 --> 00:17:05,990
GPG itself in debian yeah sorry I don't

00:17:05,089 --> 00:17:07,010
have it I don't think I have a good

00:17:05,990 --> 00:17:08,839
answer that I want to know to maybe

00:17:07,010 --> 00:17:12,140
reserve Lee they should be using GPG of

00:17:08,839 --> 00:17:14,270
me if they can if you're using DPG for

00:17:12,140 --> 00:17:15,680
your open PGP limitation right yeah but

00:17:14,270 --> 00:17:20,209
I mean that doesn't help with different

00:17:15,680 --> 00:17:21,980
ones but it does help with yeah so we

00:17:20,209 --> 00:17:24,199
are actually 20 minutes in and I want to

00:17:21,980 --> 00:17:28,060
make sure that I get this in these other

00:17:24,199 --> 00:17:30,440
points it sounds to me like there is a

00:17:28,060 --> 00:17:32,060
people are ok with the idea of moving

00:17:30,440 --> 00:17:35,960
forward with the FC alternatives

00:17:32,060 --> 00:17:37,790
approach and maybe we can get some

00:17:35,960 --> 00:17:40,250
people to commit to volunteering to

00:17:37,790 --> 00:17:44,750
switch to GPT to you as the default and

00:17:40,250 --> 00:17:46,250
see what what breaks for them so I want

00:17:44,750 --> 00:17:49,070
to talk about how we deal with the

00:17:46,250 --> 00:17:55,430
maintenance in terms of package package

00:17:49,070 --> 00:17:57,710
video PG so I don't know whether whether

00:17:55,430 --> 00:18:02,810
that's like I've got VCS religious words

00:17:57,710 --> 00:18:04,400
up there sort of C to C right so I to

00:18:02,810 --> 00:18:06,560
explain the current situation guna PG to

00:18:04,400 --> 00:18:08,630
is not actually part of the under the

00:18:06,560 --> 00:18:13,520
umbrella right now of the package new PG

00:18:08,630 --> 00:18:15,530
LEF project the reason for this if I

00:18:13,520 --> 00:18:16,820
remember correctly a few years ago I

00:18:15,530 --> 00:18:18,410
sort of said oh yeah we should do that

00:18:16,820 --> 00:18:19,419
and then they were like sure you should

00:18:18,410 --> 00:18:23,169
switch your

00:18:19,419 --> 00:18:24,609
get repo to conversion and then put it

00:18:23,169 --> 00:18:26,440
as part of the project and I immediately

00:18:24,609 --> 00:18:30,099
lost interest

00:18:26,440 --> 00:18:31,209
so I'm perfectly happy to add this BT

00:18:30,099 --> 00:18:35,409
maintained I just don't want to use

00:18:31,209 --> 00:18:36,820
subversion yeah so that was the sort of

00:18:35,409 --> 00:18:38,950
the and that's how it got left and I

00:18:36,820 --> 00:18:41,589
would sort of really engaged in this but

00:18:38,950 --> 00:18:43,149
so Daniels interested again and yeah I'm

00:18:41,589 --> 00:18:44,440
interested in I also don't want to

00:18:43,149 --> 00:18:48,190
maintain things in subversion if I can

00:18:44,440 --> 00:18:53,079
help it so so I mean I think we should

00:18:48,190 --> 00:18:56,079
have a git repo in 440 g2 and if we

00:18:53,079 --> 00:18:57,909
don't want to move the goofy g1 stuff

00:18:56,079 --> 00:19:00,129
out of s the end that's fine we can keep

00:18:57,909 --> 00:19:01,149
it keep that that way right and just

00:19:00,129 --> 00:19:02,349
because you're part of the team doesn't

00:19:01,149 --> 00:19:03,489
mean you're gonna have to be sucked into

00:19:02,349 --> 00:19:05,559
dealing with subversion if you don't

00:19:03,489 --> 00:19:07,509
want to be oh so tight so there says I'm

00:19:05,559 --> 00:19:10,599
very open to changing VCS okay excellent

00:19:07,509 --> 00:19:12,579
good so do we have consensus then that

00:19:10,599 --> 00:19:14,889
we're just gonna move stuff to get and

00:19:12,579 --> 00:19:17,679
it's gonna be a gradual process what

00:19:14,889 --> 00:19:19,719
move it please okay all right done

00:19:17,679 --> 00:19:25,929
awesome I love this kind of religious

00:19:19,719 --> 00:19:31,629
worse less of a war more of a yeah I'm

00:19:25,929 --> 00:19:34,719
great so did you want talk about cross

00:19:31,629 --> 00:19:35,769
building yeah so we had so so cross

00:19:34,719 --> 00:19:37,899
building is an interesting thing that

00:19:35,769 --> 00:19:40,869
we've run into recently when I uploaded

00:19:37,899 --> 00:19:42,249
the new version of Lib gbg error despite

00:19:40,869 --> 00:19:44,829
being a simple library that's designed

00:19:42,249 --> 00:19:46,509
for portability it was actually not able

00:19:44,829 --> 00:19:49,690
to cross build properly so cross

00:19:46,509 --> 00:19:52,059
building is creating a new creating

00:19:49,690 --> 00:19:54,969
debian from one architecture for another

00:19:52,059 --> 00:19:56,320
one sort of bootstrap a new a new arch

00:19:54,969 --> 00:19:57,669
and the reason that we want to be able

00:19:56,320 --> 00:20:00,690
to do this in Debian is because we'd

00:19:57,669 --> 00:20:03,669
like to be able to say that given one

00:20:00,690 --> 00:20:05,440
Debian archive on one functioning

00:20:03,669 --> 00:20:06,909
machine we should be able to get back to

00:20:05,440 --> 00:20:11,739
functioning Debian on all the other

00:20:06,909 --> 00:20:13,839
archives and so it's important to try to

00:20:11,739 --> 00:20:15,099
continue across building and at the

00:20:13,839 --> 00:20:17,049
moment I think we've resolved across

00:20:15,099 --> 00:20:20,469
building issues from Libby GPG error but

00:20:17,049 --> 00:20:23,649
because GPG at least some pieces of GPG

00:20:20,469 --> 00:20:25,989
are close enough to core in particular I

00:20:23,649 --> 00:20:28,980
think the decrypt is close enough to the

00:20:25,989 --> 00:20:31,770
core of what we need in Debian

00:20:28,980 --> 00:20:34,680
that's that's like part of the basic

00:20:31,770 --> 00:20:36,420
thing that we need to get it started to

00:20:34,680 --> 00:20:39,900
get the package to get the baseline

00:20:36,420 --> 00:20:41,130
Debian system started in doing so that

00:20:39,900 --> 00:20:43,620
needs to be able to be built across

00:20:41,130 --> 00:20:46,140
platforms I haven't I don't think I've

00:20:43,620 --> 00:20:47,940
run into anything else there but if

00:20:46,140 --> 00:20:50,520
people do run into cross building

00:20:47,940 --> 00:20:51,960
problems you know we're kind of in the

00:20:50,520 --> 00:20:53,520
critical pack so it's worth being aware

00:20:51,960 --> 00:20:57,350
of that

00:20:53,520 --> 00:20:59,880
does anybody here doing growth building

00:20:57,350 --> 00:21:02,190
I'm assuming that was helmet filing bugs

00:20:59,880 --> 00:21:03,540
flurry bootstrap efforts oh yes a helmet

00:21:02,190 --> 00:21:05,190
is now running a thing that tries to

00:21:03,540 --> 00:21:07,080
reboot strap Debian from scratch with a

00:21:05,190 --> 00:21:08,490
lot of evil scripts because various

00:21:07,080 --> 00:21:10,200
things don't work at the moment but it

00:21:08,490 --> 00:21:13,590
still means he notices when things break

00:21:10,200 --> 00:21:15,090
and I guess yeah so the general

00:21:13,590 --> 00:21:17,850
requirement is that anything in the core

00:21:15,090 --> 00:21:21,870
system needs to be cross buildable as

00:21:17,850 --> 00:21:25,170
well we're trying to get to I guess GPG

00:21:21,870 --> 00:21:27,480
b2 has much larger dependencies jibiji 2

00:21:25,170 --> 00:21:29,130
is not currently part of the strongly

00:21:27,480 --> 00:21:30,600
connected component which is the core of

00:21:29,130 --> 00:21:32,460
stuff that's all loop really dependent

00:21:30,600 --> 00:21:34,020
on itself right and until you build that

00:21:32,460 --> 00:21:38,040
you can't build most of the rest but if

00:21:34,020 --> 00:21:39,450
you do one gbq1 is okay yes so so as we

00:21:38,040 --> 00:21:41,190
think about making this transition we

00:21:39,450 --> 00:21:42,870
may find ourselves in this spot exactly

00:21:41,190 --> 00:21:44,670
as soon as you make it an important kind

00:21:42,870 --> 00:21:48,300
of thing because like apt needs it or

00:21:44,670 --> 00:21:49,620
something or D package well you know I'm

00:21:48,300 --> 00:21:51,420
not quite sure which if the core

00:21:49,620 --> 00:21:55,230
component requires GPT but something

00:21:51,420 --> 00:21:57,060
doesn't sit Robley out then yeah that'll

00:21:55,230 --> 00:21:59,610
be and if it spends is a much fatter as

00:21:57,060 --> 00:22:01,650
discussed that'll be a problem right and

00:21:59,610 --> 00:22:03,720
we'll make bootstrapping harder so the

00:22:01,650 --> 00:22:07,920
less the fewer things it has to depend

00:22:03,720 --> 00:22:10,710
on the better okay thank you so if

00:22:07,920 --> 00:22:13,320
anyone like to try to cross compile or

00:22:10,710 --> 00:22:14,730
do this bootstrapping with GPG v2 that

00:22:13,320 --> 00:22:18,740
would be interesting I don't think I

00:22:14,730 --> 00:22:18,740
have the expertise but yeah

00:22:21,600 --> 00:22:26,139
heather's there's also another funky

00:22:23,860 --> 00:22:28,629
thing with this wood from gbgt gbg -

00:22:26,139 --> 00:22:32,679
which is that we need to cross build GPG

00:22:28,629 --> 00:22:35,860
for Windows for the Debian installer and

00:22:32,679 --> 00:22:38,649
so we might end up with problems Cross

00:22:35,860 --> 00:22:41,169
building GPG - I know gbg1 works fine

00:22:38,649 --> 00:22:42,419
I've done about gbt - but I'd be happy

00:22:41,169 --> 00:22:45,159
to help myself

00:22:42,419 --> 00:22:46,950
ok then that is interesting I had no

00:22:45,159 --> 00:22:50,859
idea

00:22:46,950 --> 00:22:55,029
it should I mean I I yeah current gbg4

00:22:50,859 --> 00:22:56,919
in that shipping is shipping EPG - so I

00:22:55,029 --> 00:22:58,450
just let say you say you have the

00:22:56,919 --> 00:23:00,580
expertise for this all you have to do

00:22:58,450 --> 00:23:02,080
win when if once cross compilers are in

00:23:00,580 --> 00:23:03,850
and you can the moment you have to point

00:23:02,080 --> 00:23:05,919
an extra repo to get the stuff and you

00:23:03,850 --> 00:23:08,289
literally type D package bill package -

00:23:05,919 --> 00:23:09,669
a architecture thing thank you so you

00:23:08,289 --> 00:23:14,100
just use deep bacterial package with it

00:23:09,669 --> 00:23:16,269
exactly built a cage - a Windows - yeah

00:23:14,100 --> 00:23:18,850
we haven't those windows yet so we'd

00:23:16,269 --> 00:23:20,710
like to but for the old normal of lumen

00:23:18,850 --> 00:23:22,480
Linux architectures there literally it

00:23:20,710 --> 00:23:23,950
should be that simple so you should be

00:23:22,480 --> 00:23:25,389
able to try cross building painlessly

00:23:23,950 --> 00:23:29,080
now moment you'll find things are broken

00:23:25,389 --> 00:23:33,039
but it really is trivial okay okay

00:23:29,080 --> 00:23:35,669
that's good news any other points of

00:23:33,039 --> 00:23:37,480
Warren arrays about that those concerns

00:23:35,669 --> 00:23:39,190
skipped it there on the table and I

00:23:37,480 --> 00:23:41,230
think we're gonna run into problems as

00:23:39,190 --> 00:23:48,279
it goes forward place good to know like

00:23:41,230 --> 00:23:51,580
what we're looking for so so I want to

00:23:48,279 --> 00:23:56,470
talk a bit about two point one the I've

00:23:51,580 --> 00:23:59,129
got to here is the eternal beta so two

00:23:56,470 --> 00:24:04,269
point one offers some features that are

00:23:59,129 --> 00:24:06,970
quite divergent from 1.4 and 2.0 so in

00:24:04,269 --> 00:24:09,460
particular it offers elliptic curve

00:24:06,970 --> 00:24:11,799
support so this is a new kind of crypto

00:24:09,460 --> 00:24:17,559
that is you know does a similar thing to

00:24:11,799 --> 00:24:19,749
what RSA and DSA do it and it offers a

00:24:17,559 --> 00:24:22,840
new form of key storage called the key

00:24:19,749 --> 00:24:24,820
box which is different from the way that

00:24:22,840 --> 00:24:26,560
you new PT currently stores all of its

00:24:24,820 --> 00:24:29,110
public keys

00:24:26,560 --> 00:24:31,030
and it is that for public or I thought

00:24:29,110 --> 00:24:32,410
is for president I think that the key

00:24:31,030 --> 00:24:36,730
box is supposed to be for public I

00:24:32,410 --> 00:24:38,680
haven't tried the latest data and it and

00:24:36,730 --> 00:24:42,190
and theirs are actually a radical change

00:24:38,680 --> 00:24:44,170
in the agent for open PGP currently the

00:24:42,190 --> 00:24:48,700
s/mime agent behaves this way right now

00:24:44,170 --> 00:24:50,740
in the 2.0 agent but open PGP ok here's

00:24:48,700 --> 00:24:53,620
how the commute PG agent works it's at

00:24:50,740 --> 00:24:55,330
the passphrase cache so you put your

00:24:53,620 --> 00:24:56,590
passphrase in it and then group eg says

00:24:55,330 --> 00:24:57,850
oh there's an agent let me go ask the

00:24:56,590 --> 00:25:00,160
agent for the passphrase I got the

00:24:57,850 --> 00:25:01,750
passphrase i unlock the key and I do

00:25:00,160 --> 00:25:04,330
whatever I want all in the group eg

00:25:01,750 --> 00:25:06,400
process the proper way to do a cookie

00:25:04,330 --> 00:25:08,110
traffic agent is that the agent retains

00:25:06,400 --> 00:25:10,480
the cryptographic material itself and

00:25:08,110 --> 00:25:11,890
then clients to the agent send a

00:25:10,480 --> 00:25:13,450
cryptographic request to the agent the

00:25:11,890 --> 00:25:15,370
agent does the cryptographic operation

00:25:13,450 --> 00:25:18,100
in hands the response back to the client

00:25:15,370 --> 00:25:21,240
so that the client which is probably

00:25:18,100 --> 00:25:24,610
much bigger and hairier than the agent

00:25:21,240 --> 00:25:27,790
never actually sees the key material in

00:25:24,610 --> 00:25:29,920
its memory at all so the key to the

00:25:27,790 --> 00:25:32,410
secret communauté is never exposed the

00:25:29,920 --> 00:25:36,250
2.1 agent actually is a proper

00:25:32,410 --> 00:25:37,750
cryptographic agent for open PGP and the

00:25:36,250 --> 00:25:42,970
way that it secret keys are handled is

00:25:37,750 --> 00:25:46,750
very different so yeah the problem there

00:25:42,970 --> 00:25:50,320
being the interoperability now with the

00:25:46,750 --> 00:25:52,840
2.0 and the 1.4 is reduced in that when

00:25:50,320 --> 00:25:54,970
you first run the 2.1 it will convert

00:25:52,840 --> 00:25:56,770
the keys into this new format and now

00:25:54,970 --> 00:26:01,840
you have the old keys and the new keys

00:25:56,770 --> 00:26:04,060
and the two different versions well yeah

00:26:01,840 --> 00:26:05,350
well we'll look at won't like they if

00:26:04,060 --> 00:26:06,880
you change something but to private key

00:26:05,350 --> 00:26:11,950
in the new format it will not be

00:26:06,880 --> 00:26:13,660
retained in the old format and and also

00:26:11,950 --> 00:26:15,670
like if you start out with just the 2.1

00:26:13,660 --> 00:26:19,950
you won't be able to run the older tools

00:26:15,670 --> 00:26:19,950
either right so

00:26:21,660 --> 00:26:25,990
are people actually going to have to go

00:26:23,799 --> 00:26:27,400
backwards I mean it sounds like the new

00:26:25,990 --> 00:26:29,559
one should just replace it and we should

00:26:27,400 --> 00:26:30,940
just do it and we expect nearly

00:26:29,559 --> 00:26:32,710
everything to work anything's a broken

00:26:30,940 --> 00:26:35,740
we should just fix them so the number of

00:26:32,710 --> 00:26:39,309
people who will need to make changes in

00:26:35,740 --> 00:26:40,360
the old style is small oh you're just

00:26:39,309 --> 00:26:41,049
worrying about the things that might

00:26:40,360 --> 00:26:44,370
possibly go wrong

00:26:41,049 --> 00:26:51,700
yeah yeah yeah I mean maybe that's true

00:26:44,370 --> 00:26:52,990
downgrade or not supported right so so I

00:26:51,700 --> 00:26:55,390
what I want to do is I want to put the

00:26:52,990 --> 00:26:57,910
beta into experimental and I want to do

00:26:55,390 --> 00:27:00,790
that before Deb comes up and I want

00:26:57,910 --> 00:27:02,950
people to try who are interested in

00:27:00,790 --> 00:27:05,470
using it to try generating elliptic

00:27:02,950 --> 00:27:09,790
curve keys with it and see what happens

00:27:05,470 --> 00:27:12,450
to them so with various transitions and

00:27:09,790 --> 00:27:15,490
possibly new recommendations for

00:27:12,450 --> 00:27:17,169
handling interfaces to this stuff do you

00:27:15,490 --> 00:27:20,410
think that key box will introduce any

00:27:17,169 --> 00:27:21,970
opportunity for at least opportunity to

00:27:20,410 --> 00:27:24,929
make recommendations about how to handle

00:27:21,970 --> 00:27:28,059
private key material I know people do a

00:27:24,929 --> 00:27:30,700
variety of different ways from it's just

00:27:28,059 --> 00:27:33,070
on their disk to it's in a decrypt

00:27:30,700 --> 00:27:35,280
defense file system to it's on Luke's to

00:27:33,070 --> 00:27:38,230
it's on a smart card what do you think I

00:27:35,280 --> 00:27:39,880
I don't know they males have any

00:27:38,230 --> 00:27:44,470
thoughts on that as a people looking at

00:27:39,880 --> 00:27:49,299
that wasn't that giving them like I have

00:27:44,470 --> 00:27:51,429
an answer yeah I don't know there was a

00:27:49,299 --> 00:27:54,790
request in the hearing main session for

00:27:51,429 --> 00:27:57,160
clearer stronger suggestions about what

00:27:54,790 --> 00:28:01,990
to do in general how to manage a GPG

00:27:57,160 --> 00:28:03,490
keyring and I debian is officially not

00:28:01,990 --> 00:28:05,440
been very good about making stronger

00:28:03,490 --> 00:28:07,600
recommendations there's a webpage that

00:28:05,440 --> 00:28:10,380
rise up hosts that's a sort of

00:28:07,600 --> 00:28:12,820
accumulation of open PGP best practices

00:28:10,380 --> 00:28:14,679
that many people including myself have

00:28:12,820 --> 00:28:17,140
been contributing to that tries to make

00:28:14,679 --> 00:28:20,530
concrete specific you should be doing

00:28:17,140 --> 00:28:22,419
these things suggestions I don't know if

00:28:20,530 --> 00:28:26,530
we want to try to endorse that as Debian

00:28:22,419 --> 00:28:28,230
or at least when people do it from the

00:28:26,530 --> 00:28:33,480
Debian wiki or

00:28:28,230 --> 00:28:34,980
maintain your diet or something it it

00:28:33,480 --> 00:28:38,369
was pointed to in the key signing

00:28:34,980 --> 00:28:41,759
documentation on the previous subject

00:28:38,369 --> 00:28:44,509
about the interoperability of the key

00:28:41,759 --> 00:28:46,889
rings it just seems like that's a

00:28:44,509 --> 00:28:49,590
something that you put in a news entry

00:28:46,889 --> 00:28:53,659
in the package to warn people about that

00:28:49,590 --> 00:28:56,369
and then just go forward okay

00:28:53,659 --> 00:28:58,230
I'm surprised that this is not upsetting

00:28:56,369 --> 00:29:04,679
people yeah now I'm good news I'm pretty

00:28:58,230 --> 00:29:06,359
happy about it this is sort of why I had

00:29:04,679 --> 00:29:08,549
been reluctant to actually package this

00:29:06,359 --> 00:29:10,289
so far because I was worried I didn't

00:29:08,549 --> 00:29:12,239
know how to deal with the change in the

00:29:10,289 --> 00:29:18,799
key format but people don't think it's

00:29:12,239 --> 00:29:21,359
much of a concern right yeah

00:29:18,799 --> 00:29:24,679
how hard would it be to write a tool

00:29:21,359 --> 00:29:24,679
that could let sit back

00:29:25,650 --> 00:29:32,250
I assume not that hard so while it's a

00:29:30,360 --> 00:29:33,750
good idea you're willing to convert and

00:29:32,250 --> 00:29:36,960
try it out and if it fails figure out

00:29:33,750 --> 00:29:39,840
what it needs yeah I don't think such a

00:29:36,960 --> 00:29:41,700
tool exists yet in the in the 2.1 but

00:29:39,840 --> 00:29:43,290
but seriously I mean that's what we need

00:29:41,700 --> 00:29:47,220
we need to we need to read some willing

00:29:43,290 --> 00:29:48,530
guinea pigs to to do that maybe I might

00:29:47,220 --> 00:29:51,510
be in one of those guinea pigs

00:29:48,530 --> 00:29:54,630
presumably if 2.1 cannot put an ASCII

00:29:51,510 --> 00:29:56,160
helmet key then you can just practically

00:29:54,630 --> 00:29:59,970
pipe it back into jeep if you want

00:29:56,160 --> 00:30:05,720
that's true that's a good point about

00:29:59,970 --> 00:30:09,059
gbg1 also has problems with merging

00:30:05,720 --> 00:30:10,320
secret keys and their arm for exactly

00:30:09,059 --> 00:30:12,690
what they are but I've definitely run

00:30:10,320 --> 00:30:14,490
into this before where you can't update

00:30:12,690 --> 00:30:17,160
your secret key properly if it wasn't

00:30:14,490 --> 00:30:19,590
done within the GUI I don't really

00:30:17,160 --> 00:30:23,000
detail anyway it's worth it this is

00:30:19,590 --> 00:30:25,200
something that we probably need to do

00:30:23,000 --> 00:30:26,970
yeah it's good pointed that sort of

00:30:25,200 --> 00:30:33,740
tooling would make this would hopefully

00:30:26,970 --> 00:30:40,080
remove any lingering objections yeah so

00:30:33,740 --> 00:30:41,309
have we covered yeah I mean I guess the

00:30:40,080 --> 00:30:43,500
other thing that maybe we glossed over

00:30:41,309 --> 00:30:46,650
is that two point one will require the

00:30:43,500 --> 00:30:47,910
agent right that's the whole point of

00:30:46,650 --> 00:30:51,480
this is now the agent is no longer

00:30:47,910 --> 00:30:53,670
optional it will be required it will do

00:30:51,480 --> 00:30:57,630
PG should it would launch it if it is

00:30:53,670 --> 00:30:59,790
not launched but it won't it won't fall

00:30:57,630 --> 00:31:01,320
back to these sort of the current 2.0

00:30:59,790 --> 00:31:04,170
behavior of the agents out there it just

00:31:01,320 --> 00:31:07,970
prompts you on the as in the way v1 does

00:31:04,170 --> 00:31:07,970
it but that will no longer happen

00:31:10,890 --> 00:31:17,830
it launches this agent and I don't have

00:31:14,260 --> 00:31:20,289
an X display what happens it will ask

00:31:17,830 --> 00:31:22,720
you a terminal there's a little just

00:31:20,289 --> 00:31:24,220
lucky it will basically look just like

00:31:22,720 --> 00:31:28,450
you did before there's a there's a

00:31:24,220 --> 00:31:30,250
there's a pin entry curses yes and then

00:31:28,450 --> 00:31:31,750
I believe there are there are other pin

00:31:30,250 --> 00:31:33,610
entries that people are putting on

00:31:31,750 --> 00:31:36,820
including a pin entry for dumb terminals

00:31:33,610 --> 00:31:39,250
it's not to know just how far away from

00:31:36,820 --> 00:31:42,370
a net from a tech session your personal

00:31:39,250 --> 00:31:43,659
assistant is right so how does that

00:31:42,370 --> 00:31:46,870
integrate with month which at the moment

00:31:43,659 --> 00:31:49,809
will do the passphrase query itself on

00:31:46,870 --> 00:31:51,400
their path under computer GPG and those

00:31:49,809 --> 00:31:53,289
Latin its own crushes environments and

00:31:51,400 --> 00:31:56,049
if you're going to try and spawn another

00:31:53,289 --> 00:31:58,750
curses thing around it then so I believe

00:31:56,049 --> 00:32:00,640
that pantry sources actually I don't

00:31:58,750 --> 00:32:03,909
know exactly how much does it but I

00:32:00,640 --> 00:32:07,510
believe that entry curses takes control

00:32:03,909 --> 00:32:09,490
of your TTY stores what's their pops up

00:32:07,510 --> 00:32:12,250
to turn dialogue on top of that and then

00:32:09,490 --> 00:32:14,409
once you put it in it lets go to the GUI

00:32:12,250 --> 00:32:16,270
and every dungeon will stay running

00:32:14,409 --> 00:32:20,710
until I'm on you leave kill it at some

00:32:16,270 --> 00:32:23,289
point well this I mean it the passphrase

00:32:20,710 --> 00:32:31,690
is needed I don't know what the duration

00:32:23,289 --> 00:32:33,730
of the amazing yeah

00:32:31,690 --> 00:32:35,650
as someone who handles all their email

00:32:33,730 --> 00:32:37,930
or the code server which doesn't have X

00:32:35,650 --> 00:32:41,950
his running stuff in screen and has

00:32:37,930 --> 00:32:43,450
multiple users I don't check they one

00:32:41,950 --> 00:32:44,830
extra processes sittin running around

00:32:43,450 --> 00:32:47,350
all the time whenever I'm going to use

00:32:44,830 --> 00:32:48,910
them very rarely I agree with that but

00:32:47,350 --> 00:32:50,770
but this is this is part of the upstream

00:32:48,910 --> 00:32:52,030
architecture and we should if we were

00:32:50,770 --> 00:32:53,800
going to push back on that we need to

00:32:52,030 --> 00:32:55,180
make a clear proposal for how it should

00:32:53,800 --> 00:32:56,800
be working yeah I mean you could you

00:32:55,180 --> 00:32:58,390
could imagine a situation where if the

00:32:56,800 --> 00:33:01,090
agent isn't running persistently it just

00:32:58,390 --> 00:33:02,890
starts up ask it's little does the pin

00:33:01,090 --> 00:33:04,720
entry and then it goes away right so

00:33:02,890 --> 00:33:08,140
yeah maybe but maybe I don't actually

00:33:04,720 --> 00:33:09,430
haven't even read the agent then page in

00:33:08,140 --> 00:33:11,260
a while but it may have like a lifetime

00:33:09,430 --> 00:33:18,850
so then you could just set that to be

00:33:11,260 --> 00:33:20,590
zero or twenty second sorry on my

00:33:18,850 --> 00:33:22,360
recurring theme have I already did this

00:33:20,590 --> 00:33:25,270
but can't remember what I changed in the

00:33:22,360 --> 00:33:30,430
config to make it happen when I asked my

00:33:25,270 --> 00:33:32,590
not sign it invokes pin entry gtk for me

00:33:30,430 --> 00:33:36,580
but it falls back to curses if I'm in a

00:33:32,590 --> 00:33:38,830
shell special gets the stuff and goes

00:33:36,580 --> 00:33:40,570
back to Mutt and does its thing and it

00:33:38,830 --> 00:33:44,590
works absolutely fine and if I don't

00:33:40,570 --> 00:33:47,980
have an agent running it spawns one how

00:33:44,590 --> 00:33:54,730
long is that agent with the default for

00:33:47,980 --> 00:33:56,290
me because we could I imagine with more

00:33:54,730 --> 00:33:58,360
time I will go back and review what I

00:33:56,290 --> 00:33:59,860
did to make it happen and write it up so

00:33:58,360 --> 00:34:01,540
much okay

00:33:59,860 --> 00:34:03,580
can you send a pointer to that to the

00:34:01,540 --> 00:34:04,030
packaged food you made with when you get

00:34:03,580 --> 00:34:06,330
it up

00:34:04,030 --> 00:34:06,330
Thanks

00:34:07,840 --> 00:34:12,350
no not for sorry I heard your question

00:34:10,070 --> 00:34:13,460
so you're asking if it's only for

00:34:12,350 --> 00:34:15,169
security operation so if you're just

00:34:13,460 --> 00:34:22,389
doing verification yet it doesn't the

00:34:15,169 --> 00:34:22,389
agent doesn't need to be involved so you

00:34:22,419 --> 00:34:26,830
folks don't think it that you have

00:34:24,649 --> 00:34:26,830
another

00:34:36,430 --> 00:34:43,170
you mentioned the elliptical curve

00:34:39,630 --> 00:34:45,640
changes in the cyprus wheat is is there

00:34:43,170 --> 00:34:48,670
along with this change which is a good

00:34:45,640 --> 00:34:51,190
one is there any more generic ciphers

00:34:48,670 --> 00:34:55,240
sweet flexibility being built in to make

00:34:51,190 --> 00:34:57,820
this a little easier next time i think

00:34:55,240 --> 00:35:00,070
we have too much flexibility already i'm

00:34:57,820 --> 00:35:02,590
not sure i guess i'm not sure what

00:35:00,070 --> 00:35:06,250
you're what you're asking for

00:35:02,590 --> 00:35:08,860
it just seems a elliptical curve

00:35:06,250 --> 00:35:09,790
functionality in GPG has been a long

00:35:08,860 --> 00:35:11,830
time coming

00:35:09,790 --> 00:35:15,250
it has but I don't think that and really

00:35:11,830 --> 00:35:17,290
with the flexibility of of the protocols

00:35:15,250 --> 00:35:20,860
I think it just has to do with the fact

00:35:17,290 --> 00:35:23,830
that nobody has you know being hard on

00:35:20,860 --> 00:35:25,540
you can't PG and push the changes in and

00:35:23,830 --> 00:35:26,950
I actually think that one of the reasons

00:35:25,540 --> 00:35:29,380
that it's been in beta for four years is

00:35:26,950 --> 00:35:30,850
that we haven't put it in W and said hey

00:35:29,380 --> 00:35:32,800
look there's some wide deployment things

00:35:30,850 --> 00:35:34,390
that people are using it you know I mean

00:35:32,800 --> 00:35:36,550
there are bugs it's still in the non

00:35:34,390 --> 00:35:39,820
beta versions of the new PG that you

00:35:36,550 --> 00:35:44,020
know we find them they get fixed and

00:35:39,820 --> 00:35:45,370
it's still considered stable so I think

00:35:44,020 --> 00:35:47,350
I was putting this into Debian would be

00:35:45,370 --> 00:35:49,090
a real push forward towards actually

00:35:47,350 --> 00:35:51,550
having functional elliptic curve support

00:35:49,090 --> 00:35:53,710
I assume make it one of the things that

00:35:51,550 --> 00:35:55,330
you'd like to avoid is us finding

00:35:53,710 --> 00:35:56,920
ourselves in a situation inadvertently

00:35:55,330 --> 00:35:58,720
where we end up with some default like

00:35:56,920 --> 00:36:03,970
dual ec drbg

00:35:58,720 --> 00:36:05,380
and or various other you know open SSL

00:36:03,970 --> 00:36:07,650
sorts of things so I guess that means

00:36:05,380 --> 00:36:09,760
I'm signing up to do auto packaged des

00:36:07,650 --> 00:36:11,740
out-of-pocket v well I mean does that

00:36:09,760 --> 00:36:14,280
yeah seems like we need to do something

00:36:11,740 --> 00:36:17,890
some kind of continuous integration so

00:36:14,280 --> 00:36:21,240
we check for the most at least the most

00:36:17,890 --> 00:36:21,240
obvious things that can go wrong

00:36:22,250 --> 00:36:34,740
I'm not sure I understood what are you

00:36:24,540 --> 00:36:36,930
proposing you know I I think that what

00:36:34,740 --> 00:36:38,130
what we should do is well there's two

00:36:36,930 --> 00:36:41,400
things really

00:36:38,130 --> 00:36:43,650
one is we should elaborate what

00:36:41,400 --> 00:36:47,609
flexibility there is we know if there is

00:36:43,650 --> 00:36:51,329
a choice of and I'm not really familiar

00:36:47,609 --> 00:36:54,000
with open PGP but if there is a choice

00:36:51,329 --> 00:36:54,839
of cipher suites for example you know we

00:36:54,000 --> 00:36:56,670
don't want to find ourselves in a

00:36:54,839 --> 00:36:59,549
situation like with TLS were you know

00:36:56,670 --> 00:37:03,030
one of the options is no or you know one

00:36:59,549 --> 00:37:05,210
of the options is dual ec drbg we kind

00:37:03,030 --> 00:37:07,680
of want to like not make that an option

00:37:05,210 --> 00:37:08,940
yeah so I mean I feel like this is

00:37:07,680 --> 00:37:10,950
pointing a little bit towards this point

00:37:08,940 --> 00:37:13,530
I've put up here about divergence from

00:37:10,950 --> 00:37:14,910
upstream defaults and I kind of wanted

00:37:13,530 --> 00:37:16,589
to get a sense of what people think

00:37:14,910 --> 00:37:22,859
about that Josh did you want to did you

00:37:16,589 --> 00:37:25,849
have another so we've had lots of

00:37:22,859 --> 00:37:28,500
specific guides about things like use

00:37:25,849 --> 00:37:31,109
sha-256 instead of sha-1 and various

00:37:28,500 --> 00:37:34,470
other improve the defaults and similar

00:37:31,109 --> 00:37:37,170
I'm kind of hoping the new PG 2.1 would

00:37:34,470 --> 00:37:39,450
simply fix those defaults upstream if

00:37:37,170 --> 00:37:41,819
the if those defaults are broken let's

00:37:39,450 --> 00:37:44,700
fix them for everybody as opposed to

00:37:41,819 --> 00:37:47,309
just fixing them in Debian and breaking

00:37:44,700 --> 00:37:49,230
user expectations I agree but how many

00:37:47,309 --> 00:37:57,210
flame wars have you been in did you

00:37:49,230 --> 00:37:59,040
develop upstream so there are there are

00:37:57,210 --> 00:38:01,650
at least there are at least three

00:37:59,040 --> 00:38:03,839
regular requests on gravity to valve

00:38:01,650 --> 00:38:05,819
from different people about changing the

00:38:03,839 --> 00:38:08,849
default and they're these change the

00:38:05,819 --> 00:38:13,099
default cipher suite the default cipher

00:38:08,849 --> 00:38:16,650
to AES change the default digesta

00:38:13,099 --> 00:38:19,859
algorithm to sha-256 and change the

00:38:16,650 --> 00:38:22,890
default generated asymmetric key to be

00:38:19,859 --> 00:38:25,680
RSA larger than 2048 is currently the

00:38:22,890 --> 00:38:33,890
defaults are 2048 I believe the defaults

00:38:25,680 --> 00:38:37,700
right now our RSA 2048 sha-1 for

00:38:33,890 --> 00:38:40,430
signatures and certifications and cast

00:38:37,700 --> 00:38:44,900
five or something for the for the cipher

00:38:40,430 --> 00:38:48,070
so the upstream has continually pushed

00:38:44,900 --> 00:38:53,240
back on all of those three things and

00:38:48,070 --> 00:38:55,010
they're not doing it they okay so if you

00:38:53,240 --> 00:38:58,910
make a certification an open PGP

00:38:55,010 --> 00:39:01,340
certification using sha-256 then sha-1

00:38:58,910 --> 00:39:03,860
is the only required digest algorithm

00:39:01,340 --> 00:39:05,720
for an open PGP implementation so that

00:39:03,860 --> 00:39:07,040
in theory someone who's using an open

00:39:05,720 --> 00:39:12,100
PGP implementation that only knows about

00:39:07,040 --> 00:39:12,100
sha-1 can't interpret your signature

00:39:14,110 --> 00:39:23,630
they're 12 years old I I I'm on the

00:39:21,530 --> 00:39:27,160
other I'm with you on this argument and

00:39:23,630 --> 00:39:27,160
I'm just telling you what upstream says

00:39:34,060 --> 00:39:40,550
is there any way GPG could provide both

00:39:37,790 --> 00:39:43,130
certifications as in if you sign a key

00:39:40,550 --> 00:39:46,760
provide the old and busted compatibility

00:39:43,130 --> 00:39:47,900
sha-1 and the shop do 2006 cert yeah and

00:39:46,760 --> 00:39:50,120
make that the default for

00:39:47,900 --> 00:39:52,100
interoperability we have five minutes

00:39:50,120 --> 00:39:53,690
left left and yes that's been proposed

00:39:52,100 --> 00:39:57,500
but no one supplied patches upstream for

00:39:53,690 --> 00:39:59,990
it so so next year that conf is in

00:39:57,500 --> 00:40:05,060
Germany can we make sure we get Vilna

00:39:59,990 --> 00:40:07,540
caulk to attend that would be great yeah

00:40:05,060 --> 00:40:07,540
we can ask him

00:40:10,660 --> 00:40:16,520
so I mean on the question of divergence

00:40:13,910 --> 00:40:18,860
from upstream defaults we should we in

00:40:16,520 --> 00:40:20,480
Debian should always diverge from

00:40:18,860 --> 00:40:22,310
upstream default configuration in any

00:40:20,480 --> 00:40:24,590
package whenever we think the upstream

00:40:22,310 --> 00:40:27,350
default is wrong and I don't see any

00:40:24,590 --> 00:40:30,380
difference here to any other occasion I

00:40:27,350 --> 00:40:31,970
was frankly completely boggled to

00:40:30,380 --> 00:40:34,460
discover there was a set of wiki

00:40:31,970 --> 00:40:36,260
instructions that told me to use weird

00:40:34,460 --> 00:40:40,160
different configurations for my canoe PG

00:40:36,260 --> 00:40:42,890
to use better ciphers that you know I

00:40:40,160 --> 00:40:44,390
thought why is this not the default at

00:40:42,890 --> 00:40:47,570
least in the Debian package which we do

00:40:44,390 --> 00:40:49,400
control I'm with you on that and frankly

00:40:47,570 --> 00:40:50,960
if someone only has a 12 year old open

00:40:49,400 --> 00:40:53,540
PGP implementation it's buggy as hell

00:40:50,960 --> 00:40:55,610
and their system is not secure anyway so

00:40:53,540 --> 00:40:58,580
I don't feel the need to interoperate

00:40:55,610 --> 00:41:00,410
with that so unless people think that

00:40:58,580 --> 00:41:01,760
it's really a terrible thing for us to

00:41:00,410 --> 00:41:03,950
diverge from the upstream defaults on

00:41:01,760 --> 00:41:05,210
this I'm leaning towards diverging from

00:41:03,950 --> 00:41:07,220
the upstream default what are the

00:41:05,210 --> 00:41:09,770
defaults for people who distribute GPT

00:41:07,220 --> 00:41:12,140
that are not upstream most notably other

00:41:09,770 --> 00:41:14,420
Linux distributions GPG for Wynette

00:41:12,140 --> 00:41:17,180
cetera and are they open to changing the

00:41:14,420 --> 00:41:18,620
defaults in concert with us I don't know

00:41:17,180 --> 00:41:20,830
but doing some outreach on that would be

00:41:18,620 --> 00:41:24,200
great that's a good point

00:41:20,830 --> 00:41:29,180
if we change the default said to be more

00:41:24,200 --> 00:41:32,420
secure in in our gbg I mean no PG most

00:41:29,180 --> 00:41:35,270
most users are already longtime users

00:41:32,420 --> 00:41:38,870
and have a good new PG in their homes

00:41:35,270 --> 00:41:41,270
which may have run configurations so we

00:41:38,870 --> 00:41:44,450
have to make make sure to push the thing

00:41:41,270 --> 00:41:47,360
they did the notion that acknowledge

00:41:44,450 --> 00:41:49,430
were changing defaults so they are they

00:41:47,360 --> 00:41:52,160
do it as well when the defaults have

00:41:49,430 --> 00:41:53,690
been set already yeah I mean some sort

00:41:52,160 --> 00:41:55,100
of tool that actually checks your

00:41:53,690 --> 00:41:56,840
configuration to make sure you're doing

00:41:55,100 --> 00:41:58,070
the right thing would be welcome I think

00:41:56,840 --> 00:42:00,530
I don't think anything like that exists

00:41:58,070 --> 00:42:03,770
so as far as key management goes I

00:42:00,530 --> 00:42:06,860
mentioned this in hearing mate but open

00:42:03,770 --> 00:42:09,170
PGP tools has this has this lint check

00:42:06,860 --> 00:42:10,790
which takes a key but which looks like a

00:42:09,170 --> 00:42:12,530
key and says is what you're publishing

00:42:10,790 --> 00:42:14,180
to the outside world look reasonable

00:42:12,530 --> 00:42:15,830
yeah which doesn't address what

00:42:14,180 --> 00:42:18,230
specifically is in your did you need a

00:42:15,830 --> 00:42:18,580
shirt like that yeah maybe maybe this

00:42:18,230 --> 00:42:20,680
room

00:42:18,580 --> 00:42:28,930
yeah we're volunteen Clint for things

00:42:20,680 --> 00:42:30,490
baby all right thanks planet oh we

00:42:28,930 --> 00:42:33,880
should I guess yeah we're ready here

00:42:30,490 --> 00:42:38,550
time here we are nearly out of time did

00:42:33,880 --> 00:42:41,910
you want to mention anything about okay

00:42:38,550 --> 00:42:41,910
I'm sorry

00:42:42,360 --> 00:42:48,490
can you just announce up the people who

00:42:44,950 --> 00:42:53,710
are interested in Sean I'm sorry

00:42:48,490 --> 00:42:58,030
I still use to Kiki and and but I have a

00:42:53,710 --> 00:43:03,340
specific reason to do that I I have my

00:42:58,030 --> 00:43:06,070
private key on my token USB token and I

00:43:03,340 --> 00:43:12,420
will have a talk on Thursday mornings so

00:43:06,070 --> 00:43:12,420
please join me join us Thanks

00:43:13,690 --> 00:43:20,230
we should talk I guess about the package

00:43:16,780 --> 00:43:22,150
dependency thing yeah it's well we have

00:43:20,230 --> 00:43:25,330
enough time so yeah so some explaining

00:43:22,150 --> 00:43:26,620
the one of the reasons that goopy geez a

00:43:25,330 --> 00:43:30,370
little more heavyweight is that it pulls

00:43:26,620 --> 00:43:32,830
in pin entry GG k2 as the default sort

00:43:30,370 --> 00:43:34,990
of alternative for pin entry which can

00:43:32,830 --> 00:43:36,160
obviously if you're on a if you're on a

00:43:34,990 --> 00:43:37,480
system that doesn't have you know

00:43:36,160 --> 00:43:41,200
installed already it will pull in a

00:43:37,480 --> 00:43:43,210
bunch of stuff that you may not want the

00:43:41,200 --> 00:43:45,760
reason that this I made this choice a

00:43:43,210 --> 00:43:48,450
number of years ago is that it does

00:43:45,760 --> 00:43:50,680
provide a better experience to users on

00:43:48,450 --> 00:43:53,350
graphical desktop environments right

00:43:50,680 --> 00:43:55,690
because if they using gg they actually

00:43:53,350 --> 00:43:59,400
get a you know window in their face to

00:43:55,690 --> 00:44:01,900
enter their pin rather than rather than

00:43:59,400 --> 00:44:04,210
something in curses and for tools that

00:44:01,900 --> 00:44:05,470
are behind the scenes calling out to new

00:44:04,210 --> 00:44:07,510
PG it can actually be better if there

00:44:05,470 --> 00:44:10,480
isn't actually a terminal right there to

00:44:07,510 --> 00:44:13,660
fall back to but I do recognize that

00:44:10,480 --> 00:44:15,280
this is maybe expensive I'm not sure how

00:44:13,660 --> 00:44:17,110
to handle it better today I'm gonna have

00:44:15,280 --> 00:44:20,170
any packaging recommendations for how to

00:44:17,110 --> 00:44:22,930
how to figure like hot Oh guess the

00:44:20,170 --> 00:44:25,480
right dependency so this used to be an

00:44:22,930 --> 00:44:27,700
issue a long time ago with pin entry as

00:44:25,480 --> 00:44:30,370
well and the obvious solution would be

00:44:27,700 --> 00:44:33,250
make the genome and similar desktop meta

00:44:30,370 --> 00:44:35,020
packages depend on the pin entry

00:44:33,250 --> 00:44:36,730
graphical programs hopefully there will

00:44:35,020 --> 00:44:38,980
be a pin entry genome shell at some

00:44:36,730 --> 00:44:42,400
point or it'll just be built in and have

00:44:38,980 --> 00:44:44,740
the default pin entry be the tiniest

00:44:42,400 --> 00:44:49,210
text-based prompting or whatever is

00:44:44,740 --> 00:44:50,980
built in and then if you install a full

00:44:49,210 --> 00:44:52,450
desktop environment as part of your

00:44:50,980 --> 00:44:54,550
initial installation it won't bother

00:44:52,450 --> 00:44:56,700
installing the alternative because it

00:44:54,550 --> 00:44:59,290
already has a secondary alternative

00:44:56,700 --> 00:45:00,790
sounds good yeah it sounds like a

00:44:59,290 --> 00:45:02,740
reasonable suggestion does anyone have

00:45:00,790 --> 00:45:04,000
any problem with that or who do we need

00:45:02,740 --> 00:45:05,710
to talk to you on the guide idea to make

00:45:04,000 --> 00:45:08,110
that happen because that's good that

00:45:05,710 --> 00:45:09,490
means pushing the change there too right

00:45:08,110 --> 00:45:11,230
yeah someone want to volunteer to

00:45:09,490 --> 00:45:12,880
although it's possible that some of

00:45:11,230 --> 00:45:16,890
their stuff already pulls us in anyway

00:45:12,880 --> 00:45:20,020
it could be indirectly okay so we'll try

00:45:16,890 --> 00:45:21,310
moving the pin entry default to be there

00:45:20,020 --> 00:45:22,390
that's the only one I know that pulls in

00:45:21,310 --> 00:45:23,530
a lot of stuff if there's anything else

00:45:22,390 --> 00:45:26,270
that people notice that I haven't

00:45:23,530 --> 00:45:30,470
noticed feel free to let us

00:45:26,270 --> 00:45:32,690
on the package can do PG paint list and

00:45:30,470 --> 00:45:34,640
feel free to join package you know did

00:45:32,690 --> 00:45:36,770
you mate know if you're interested in

00:45:34,640 --> 00:45:39,320
always you know it'll be in get we can

00:45:36,770 --> 00:45:42,620
accept patches join the mailing list and

00:45:39,320 --> 00:45:44,210
that's not get over thanks this was

00:45:42,620 --> 00:45:48,260
remarkably uncondensed

00:45:44,210 --> 00:45:53,170
I appreciate everyone's bearing with it

00:45:48,260 --> 00:45:53,170

YouTube URL: https://www.youtube.com/watch?v=O_yUAkWb_wg


