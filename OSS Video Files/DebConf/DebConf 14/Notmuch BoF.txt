Title: Notmuch BoF
Publication date: 2017-12-02
Playlist: DebConf 14
Description: 
	by David Bremner

At: DebConf14
https://debconf14.debconf.org/
Room: Room 328
Scheduled start: 2014-08-25 15:30:00
Captions: 
	00:00:00,530 --> 00:00:07,950
[Music]

00:00:01,970 --> 00:00:10,860
welcome I'm David Bremner and welcome to

00:00:07,950 --> 00:00:13,259
the not much both these things have a

00:00:10,860 --> 00:00:16,020
tendency to turn into talks instead of

00:00:13,259 --> 00:00:18,420
offs and the fact that we're starting

00:00:16,020 --> 00:00:25,289
with slides is already one step down

00:00:18,420 --> 00:00:29,460
that slippery slope so that's perfect

00:00:25,289 --> 00:00:31,590
yeah I encourage heckling so the chief

00:00:29,460 --> 00:00:35,040
heckler in the front row is Karl Werth

00:00:31,590 --> 00:00:37,530
who we've been working on this project

00:00:35,040 --> 00:00:39,270
together now for a few years although we

00:00:37,530 --> 00:00:43,980
just met today so that's one of those

00:00:39,270 --> 00:00:50,489
internet stories for you so what is not

00:00:43,980 --> 00:00:52,260
much it's a library although I guess

00:00:50,489 --> 00:00:54,300
originally it was just a command-line

00:00:52,260 --> 00:00:56,129
tool and then people started to wanna do

00:00:54,300 --> 00:01:00,120
crazy things like call it from Python

00:00:56,129 --> 00:01:05,280
and so it morphed into a shared library

00:01:00,120 --> 00:01:06,869
and a command-line tool and it does you

00:01:05,280 --> 00:01:09,510
think of it essentially as a front-end

00:01:06,869 --> 00:01:12,689
four's a piant the full text search

00:01:09,510 --> 00:01:18,470
engine with specializations for dealing

00:01:12,689 --> 00:01:21,060
with mail and so well it does indexing

00:01:18,470 --> 00:01:23,939
otherwise searching is very slow right

00:01:21,060 --> 00:01:27,689
if you don't have any kind of index it

00:01:23,939 --> 00:01:29,670
deals with tagging and in my opinion the

00:01:27,689 --> 00:01:33,920
most important thing it does is fast

00:01:29,670 --> 00:01:37,740
searching so I think in the beginning

00:01:33,920 --> 00:01:39,479
many of us thought that tags Gmail saw

00:01:37,740 --> 00:01:42,000
while this was really the thing but

00:01:39,479 --> 00:01:44,220
event Verte I'm I think the most useful

00:01:42,000 --> 00:01:51,990
feature it supports is full-text

00:01:44,220 --> 00:01:54,119
searching so here's a diagram which took

00:01:51,990 --> 00:01:58,829
me a while to draw so that's why I show

00:01:54,119 --> 00:02:02,420
it every time I talk about not much so

00:01:58,829 --> 00:02:05,670
really the heavy work is done by by

00:02:02,420 --> 00:02:10,770
sapien and to a slightly lesser extent

00:02:05,670 --> 00:02:11,850
by gee mine so not much is not a genome

00:02:10,770 --> 00:02:15,180
project

00:02:11,850 --> 00:02:17,820
and is full of gnome haters or something

00:02:15,180 --> 00:02:21,210
I don't haters is too strong but people

00:02:17,820 --> 00:02:23,190
who prefer not to use genome but

00:02:21,210 --> 00:02:27,360
nonetheless gee mime is great

00:02:23,190 --> 00:02:31,530
we have bindings and there's a bunch of

00:02:27,360 --> 00:02:38,690
user agents built on top of it

00:02:31,530 --> 00:02:40,920
so I the blue box yeah great colors huh

00:02:38,690 --> 00:02:43,650
example tool so these are some tools

00:02:40,920 --> 00:02:45,360
that have been built that are not mail

00:02:43,650 --> 00:02:49,100
user agents so they're mainly tools that

00:02:45,360 --> 00:02:53,460
are built using the using scripting or

00:02:49,100 --> 00:02:57,390
using the the bindings so I think part

00:02:53,460 --> 00:02:59,880
of what I want to pitch briefly is that

00:02:57,390 --> 00:03:01,550
it's quite an extensible system so

00:02:59,880 --> 00:03:06,690
there's lots of different ways to use it

00:03:01,550 --> 00:03:08,700
if you want to write C code you can for

00:03:06,690 --> 00:03:11,130
the rest of you there are various

00:03:08,700 --> 00:03:13,440
findings honestly the Python bindings

00:03:11,130 --> 00:03:17,880
are the best supported they're the ones

00:03:13,440 --> 00:03:20,280
that people are using daily so you know

00:03:17,880 --> 00:03:24,410
unless you have reasons to really

00:03:20,280 --> 00:03:27,180
dislike Python that's probably well or

00:03:24,410 --> 00:03:30,960
scripting from the command line is also

00:03:27,180 --> 00:03:37,890
a perfectly sensible thing to do okay so

00:03:30,960 --> 00:03:40,290
anything else not make sense here all

00:03:37,890 --> 00:03:41,640
right so Bower is written in Mercury so

00:03:40,290 --> 00:03:43,830
if you've always wanted to work on a

00:03:41,640 --> 00:03:51,840
project written in mercury this is your

00:03:43,830 --> 00:03:54,150
chance okay so this was up-to-date as of

00:03:51,840 --> 00:03:57,150
May of this year so it's slightly out of

00:03:54,150 --> 00:04:00,630
date and now so you could see that Carl

00:03:57,150 --> 00:04:06,840
did a whole bunch of work in terms of

00:04:00,630 --> 00:04:10,770
number of commits and then the rest of

00:04:06,840 --> 00:04:13,410
us do too actually so yeah and then half

00:04:10,770 --> 00:04:15,840
of my commits are like you know merge

00:04:13,410 --> 00:04:17,670
release branch to master or something so

00:04:15,840 --> 00:04:21,630
it makes sort of over inflate my own

00:04:17,670 --> 00:04:24,620
importance here so the real people to

00:04:21,630 --> 00:04:28,940
thank lately for their own

00:04:24,620 --> 00:04:31,400
efforts are Austin Clements Yanni or

00:04:28,940 --> 00:04:37,070
Johnny I don't know how to pronounce

00:04:31,400 --> 00:04:41,270
Finnish name's Nicola Mark Walters and

00:04:37,070 --> 00:04:43,850
told me only not something like that

00:04:41,270 --> 00:04:45,590
okay so we're finished heavy which is

00:04:43,850 --> 00:04:49,820
always a good sign in a free software

00:04:45,590 --> 00:04:52,699
project if you have lots of pins so you

00:04:49,820 --> 00:04:58,760
know alright so you should get on that

00:04:52,699 --> 00:04:59,990
bandwagon or move to Finland get on or

00:04:58,760 --> 00:05:02,750
get out of the way right isn't that what

00:04:59,990 --> 00:05:05,539
they say about its kind of aggressive I

00:05:02,750 --> 00:05:09,020
mean I don't really care if you okay so

00:05:05,539 --> 00:05:10,570
here's a sort of man page level look at

00:05:09,020 --> 00:05:14,479
the command line interface

00:05:10,570 --> 00:05:42,050
I guess Carl can say whether it was

00:05:14,479 --> 00:05:43,669
consciously modeled on git or not the

00:05:42,050 --> 00:05:46,970
video people are getting twitchy so have

00:05:43,669 --> 00:05:48,289
a microphone I'm gonna copy from

00:05:46,970 --> 00:05:50,960
something that has a notoriously bad

00:05:48,289 --> 00:05:53,620
user interface which kid does I got the

00:05:50,960 --> 00:05:56,620
one thing that I thought was really good

00:05:53,620 --> 00:05:56,620
yeah

00:06:00,870 --> 00:06:11,740
so we have query syntax which is

00:06:07,500 --> 00:06:13,720
essentially sapiens query syntax so it's

00:06:11,740 --> 00:06:15,250
pretty few so if you're used to that

00:06:13,720 --> 00:06:19,240
then great

00:06:15,250 --> 00:06:21,310
so that has its pluses and minuses so we

00:06:19,240 --> 00:06:24,069
occasionally find it a bit limiting but

00:06:21,310 --> 00:06:27,159
we're working on that but you can see

00:06:24,069 --> 00:06:29,199
you can search on some headers you can't

00:06:27,159 --> 00:06:32,080
yet search on all of them it's a

00:06:29,199 --> 00:06:35,979
constant feature request so I'm sure

00:06:32,080 --> 00:06:44,909
it's going to happen at some point yes

00:06:35,979 --> 00:06:49,750
yeah yes right yeah also is very syntax

00:06:44,909 --> 00:06:53,680
I'm missing body from that set missing

00:06:49,750 --> 00:07:04,810
body oh don't don't do any of these

00:06:53,680 --> 00:07:10,000
things and you'll search in the body if

00:07:04,810 --> 00:07:11,380
you search return that's you're wanting

00:07:10,000 --> 00:07:13,210
it in the body you'll also get

00:07:11,380 --> 00:07:14,849
occurrences whether it's whether where

00:07:13,210 --> 00:07:16,810
it's in the subject or at the front that

00:07:14,849 --> 00:07:19,659
wouldn't be actually be a hard feature

00:07:16,810 --> 00:07:21,460
fit no I'm you know we wouldn't even

00:07:19,659 --> 00:07:26,229
have to change the indexing I don't

00:07:21,460 --> 00:07:27,819
think yeah all right

00:07:26,229 --> 00:07:29,469
so if you ever start to use not much and

00:07:27,819 --> 00:07:36,779
you make a feature request it wouldn't

00:07:29,469 --> 00:07:43,199
be that hard to do body only okay um so

00:07:36,779 --> 00:07:48,460
sure so here's an example of some

00:07:43,199 --> 00:07:50,949
queries it's so I'm looking I have some

00:07:48,460 --> 00:07:55,830
kind of hierarchical scheme of tags

00:07:50,949 --> 00:08:01,199
which is just my convention which I and

00:07:55,830 --> 00:08:08,740
I'm looking for things that are to me so

00:08:01,199 --> 00:08:11,670
one of the original design decisions of

00:08:08,740 --> 00:08:17,280
Karl's is that not much doesn't

00:08:11,670 --> 00:08:20,400
doesn't modify your mail and so here I

00:08:17,280 --> 00:08:25,440
am modifying your mail but I'm doing it

00:08:20,400 --> 00:08:28,620
by doing a search for mail that has been

00:08:25,440 --> 00:08:30,810
tagged previously in some user agent as

00:08:28,620 --> 00:08:39,210
deleted and then once in a while I do a

00:08:30,810 --> 00:08:44,250
perch and and remove those we can come

00:08:39,210 --> 00:08:50,090
back to to these scripts and critique my

00:08:44,250 --> 00:08:54,330
pearl but so so what I would say is that

00:08:50,090 --> 00:08:57,120
it's not just because of the language

00:08:54,330 --> 00:09:00,780
here that the Python script probably

00:08:57,120 --> 00:09:03,420
looks cleaner because the Python script

00:09:00,780 --> 00:09:07,650
is using bindings that that have been

00:09:03,420 --> 00:09:10,740
written whereas the Perl script is

00:09:07,650 --> 00:09:15,750
acting as a glorified shell script right

00:09:10,740 --> 00:09:19,620
it's just shelling out - to - not much

00:09:15,750 --> 00:09:21,750
so I think the only reason I included it

00:09:19,620 --> 00:09:24,150
is that that's a that's a piece of

00:09:21,750 --> 00:09:28,590
production code that that runs our bug

00:09:24,150 --> 00:09:31,440
tracker all right so it's real right I

00:09:28,590 --> 00:09:36,300
mean that's that's worth something okay

00:09:31,440 --> 00:09:44,420
you can do Ruby and Ruby Python it's all

00:09:36,300 --> 00:09:48,540
the same right Python with rails sure

00:09:44,420 --> 00:09:54,210
okay uh so there's the aforementioned

00:09:48,540 --> 00:09:56,370
bug tracker maybe I'll do most of this

00:09:54,210 --> 00:09:58,260
stuff as demos let me just mention the

00:09:56,370 --> 00:10:01,440
demos I could do if people were

00:09:58,260 --> 00:10:05,900
interested so there's a bug tracker

00:10:01,440 --> 00:10:14,450
based on not much there's an eMac space

00:10:05,900 --> 00:10:19,880
mail user interface there's a vim based

00:10:14,450 --> 00:10:22,410
user interface there's a lot down here

00:10:19,880 --> 00:10:25,360
and these are all actually it's

00:10:22,410 --> 00:10:27,819
unfortunately you know bitmap

00:10:25,360 --> 00:10:35,259
not reproducing too well but these are

00:10:27,819 --> 00:10:37,989
all showing the same search results yeah

00:10:35,259 --> 00:10:44,439
this was in this is out of date these

00:10:37,989 --> 00:10:46,629
are from last year these images so right

00:10:44,439 --> 00:10:47,949
you may well argue that if I just manage

00:10:46,629 --> 00:10:51,779
my mail better I wouldn't have to

00:10:47,949 --> 00:10:51,779
develop this software but there you go

00:10:54,239 --> 00:11:02,379
yeah so I don't know if Zack Zack can

00:10:59,459 --> 00:11:06,279
give a more informative demo of not much

00:11:02,379 --> 00:11:09,489
much than I can so it's a it's a way of

00:11:06,279 --> 00:11:13,619
sticking with Mott but taking advantage

00:11:09,489 --> 00:11:13,619
of the search facilities of not much

00:11:18,569 --> 00:11:25,569
sure there's a web client which I've

00:11:23,439 --> 00:11:31,029
actually got running on my laptop right

00:11:25,569 --> 00:11:32,619
now there's a sadly not the version from

00:11:31,029 --> 00:11:36,819
Debian and if you'd like to know why

00:11:32,619 --> 00:11:40,809
then Oh rant about that a bit but so I

00:11:36,819 --> 00:11:42,999
can demo the web client Rob is hiding in

00:11:40,809 --> 00:11:45,429
the corner there has has sort of by

00:11:42,999 --> 00:11:48,299
mistake written another web client so

00:11:45,429 --> 00:11:48,299
you have your choice

00:11:58,230 --> 00:12:06,580
right and and yeah okay so so we have a

00:12:04,600 --> 00:12:19,690
web point written in Haskell and a web

00:12:06,580 --> 00:12:21,310
client written in closure so fair enough

00:12:19,690 --> 00:12:24,040
you'll have to write your own then

00:12:21,310 --> 00:12:27,149
because we're clearly short okay

00:12:24,040 --> 00:12:30,459
so let me finish off just by mentioning

00:12:27,149 --> 00:12:33,490
a few of the things that have recently

00:12:30,459 --> 00:12:34,510
happened so if you're running the Debian

00:12:33,490 --> 00:12:36,310
not much

00:12:34,510 --> 00:12:42,839
you won't seen these yet there and get

00:12:36,310 --> 00:12:42,839
master or so sorry I

00:12:45,430 --> 00:12:52,180
so melp is a bit dicey with not much yes

00:12:50,020 --> 00:12:55,270
if it works at all you will get not much

00:12:52,180 --> 00:12:58,959
jump but the problem is that Mel pod

00:12:55,270 --> 00:13:02,050
only brings you the Emacs list and so

00:12:58,959 --> 00:13:06,120
that can it really should you should get

00:13:02,050 --> 00:13:06,120
the C and the e max lists together but

00:13:07,050 --> 00:13:14,500
so well some bug fixes some fixes for

00:13:11,079 --> 00:13:16,240
unread message handling some UI features

00:13:14,500 --> 00:13:19,270
you know this Emacs is coming up here a

00:13:16,240 --> 00:13:22,570
lot so that's sort of you can see where

00:13:19,270 --> 00:13:24,910
most of the development it's happening

00:13:22,570 --> 00:13:26,829
or rather most of the development that

00:13:24,910 --> 00:13:28,450
I'm aware about of so some of these

00:13:26,829 --> 00:13:30,660
things are not happening in the main not

00:13:28,450 --> 00:13:45,250
much free a lot is is its own project

00:13:30,660 --> 00:13:48,029
and not not much Emacs or not much

00:13:45,250 --> 00:13:53,180
outside of Emacs

00:13:48,029 --> 00:13:55,730
yeah what's huh

00:13:53,180 --> 00:14:00,680
so not much jump is a cool new UI

00:13:55,730 --> 00:14:02,510
feature which I can demo for you it's

00:14:00,680 --> 00:14:05,540
simple but cool

00:14:02,510 --> 00:14:07,810
so what we're working on this is kind of

00:14:05,540 --> 00:14:11,420
foundational stuff we're gonna go from

00:14:07,810 --> 00:14:13,700
database versions to database features

00:14:11,420 --> 00:14:16,820
it's sort of like having a symbols file

00:14:13,700 --> 00:14:18,620
instead of one Esso name so I think it

00:14:16,820 --> 00:14:21,020
should be groovy

00:14:18,620 --> 00:14:24,620
we're gonna get metadata modification

00:14:21,020 --> 00:14:26,330
time so you're gonna say do me a backup

00:14:24,620 --> 00:14:29,240
of all my tags that have changed since

00:14:26,330 --> 00:14:31,690
Thursday so we're gonna be able to do

00:14:29,240 --> 00:14:35,870
incremental backups of your not much

00:14:31,690 --> 00:14:42,890
metadata some improved message citation

00:14:35,870 --> 00:14:47,030
stuff char set and CID so some stuff

00:14:42,890 --> 00:14:51,560
with HTML and the ever ongoing battle

00:14:47,030 --> 00:14:54,830
with character encodings and so not much

00:14:51,560 --> 00:15:00,770
insert was introduced so right now we

00:14:54,830 --> 00:15:03,980
have two MBAs not much based and this is

00:15:00,770 --> 00:15:07,970
really irritating so basically not much

00:15:03,980 --> 00:15:09,920
insert was introduced and it misses a

00:15:07,970 --> 00:15:14,500
key feature so we're going to fix that

00:15:09,920 --> 00:15:22,190
and so that will be back to having one

00:15:14,500 --> 00:15:25,490
Ian so I had a bit of a read ran but I'm

00:15:22,190 --> 00:15:27,770
still kind of a bit confused so it not

00:15:25,490 --> 00:15:29,750
matches an indexer but also if it's got

00:15:27,770 --> 00:15:32,900
a if it means an MBA then it's a male

00:15:29,750 --> 00:15:36,250
store and now I'm I'm told it was a Muir

00:15:32,900 --> 00:15:40,430
as well so wait which of these you know

00:15:36,250 --> 00:15:43,250
missus anyway so so it needs a MBA

00:15:40,430 --> 00:15:46,970
because the thing it indexes is male so

00:15:43,250 --> 00:15:47,900
it doesn't so I guess it's mission creep

00:15:46,970 --> 00:15:52,580
in some sense

00:15:47,900 --> 00:15:54,740
I don't know and so the the the actual

00:15:52,580 --> 00:15:57,260
history of where not much came from I

00:15:54,740 --> 00:16:00,770
started using the an email program

00:15:57,260 --> 00:16:04,160
called sup which was which actually goes

00:16:00,770 --> 00:16:06,880
a lot to explain the name not much that

00:16:04,160 --> 00:16:11,920
not much was the answer to something

00:16:06,880 --> 00:16:18,100
so sup was written in some horrific ly

00:16:11,920 --> 00:16:20,230
slow language Ruby and I I don't hate

00:16:18,100 --> 00:16:25,750
Ruby on it no Ruby's great it was I'm

00:16:20,230 --> 00:16:28,480
sure it was great but it was it was it

00:16:25,750 --> 00:16:31,810
was used as a peon ands a peon is a C++

00:16:28,480 --> 00:16:33,160
library which gave very fast full-text

00:16:31,810 --> 00:16:34,390
searching of the email and I thought

00:16:33,160 --> 00:16:36,130
that was really great but the indexing

00:16:34,390 --> 00:16:39,010
code the thing that actually parsed the

00:16:36,130 --> 00:16:41,529
email and can shoved it into Sapien was

00:16:39,010 --> 00:16:43,990
all written in Ruby and and just the the

00:16:41,529 --> 00:16:45,700
thing that just like read in an email

00:16:43,990 --> 00:16:48,490
message and constructed an internal

00:16:45,700 --> 00:16:50,079
theater representation of the simple

00:16:48,490 --> 00:16:52,300
little blob of text was horrifically

00:16:50,079 --> 00:16:54,459
slow and it took forever to index your

00:16:52,300 --> 00:16:56,050
mail in the first place not because they

00:16:54,459 --> 00:16:57,790
peon was doing the full text indexing

00:16:56,050 --> 00:16:59,200
that was actually pretty fast but the

00:16:57,790 --> 00:17:01,149
Ruby was actually interning these

00:16:59,200 --> 00:17:04,179
strings and I said okay this is really

00:17:01,149 --> 00:17:07,030
ridiculous so I I set out just to speed

00:17:04,179 --> 00:17:09,329
up sup by writing a little bit of C code

00:17:07,030 --> 00:17:12,309
that could read in an email message and

00:17:09,329 --> 00:17:14,559
shove it off it to Sapien that's all I

00:17:12,309 --> 00:17:16,720
was trying to do and if I because if I

00:17:14,559 --> 00:17:17,949
had tried to do anything of what we're

00:17:16,720 --> 00:17:19,449
talking about up here I never would have

00:17:17,949 --> 00:17:21,069
started I would have been terrified and

00:17:19,449 --> 00:17:22,720
that's that's a big project but I'll

00:17:21,069 --> 00:17:24,939
just I'll just accelerate the the

00:17:22,720 --> 00:17:27,040
indexing here and stuff and so I got I

00:17:24,939 --> 00:17:28,809
got done with it and some of the design

00:17:27,040 --> 00:17:30,910
decisions that have been afflicted us

00:17:28,809 --> 00:17:33,309
for a long time one of the the features

00:17:30,910 --> 00:17:35,860
that I never did the beginning and in

00:17:33,309 --> 00:17:37,240
the past 102 years that i've totally

00:17:35,860 --> 00:17:39,059
abandoned not much and let these guys

00:17:37,240 --> 00:17:41,470
continue to run with it thank you guys

00:17:39,059 --> 00:17:43,210
one of the features that I never did I'm

00:17:41,470 --> 00:17:45,730
surprised that no one has done yet is

00:17:43,210 --> 00:17:48,640
the indexing of arbitrary headers or

00:17:45,730 --> 00:17:50,040
even the indexing of just the list ID

00:17:48,640 --> 00:17:52,720
header which everyone complains about

00:17:50,040 --> 00:17:54,580
well one of the reasons I didn't do that

00:17:52,720 --> 00:17:57,929
is I was intentionally from the

00:17:54,580 --> 00:18:00,790
beginning making an index that was

00:17:57,929 --> 00:18:02,110
absolutely compatible with the indexing

00:18:00,790 --> 00:18:05,620
that sucked it so I could do like

00:18:02,110 --> 00:18:07,450
bitwise comparisons that yes I fed all

00:18:05,620 --> 00:18:09,790
the same data twos appian and I got the

00:18:07,450 --> 00:18:11,410
same index out so that we could turn my

00:18:09,790 --> 00:18:13,900
code over to the SUP author and say hey

00:18:11,410 --> 00:18:17,710
take it it it makes a bit for bit

00:18:13,900 --> 00:18:19,000
identical index and I got to that point

00:18:17,710 --> 00:18:19,960
and I said here you go take a look at it

00:18:19,000 --> 00:18:22,570
what do you think and he's like

00:18:19,960 --> 00:18:24,160
I don't want any C++ code see no is

00:18:22,570 --> 00:18:26,260
another C code I don't want any Seco to

00:18:24,160 --> 00:18:29,200
my project I want to be able to fix bugs

00:18:26,260 --> 00:18:31,600
in Ruby so no we don't want it I thought

00:18:29,200 --> 00:18:33,910
oh well okay well I can index my mail

00:18:31,600 --> 00:18:35,920
and and now that I can index it I could

00:18:33,910 --> 00:18:37,180
write a little bit of code to search it

00:18:35,920 --> 00:18:39,550
that's not very hard and I've got it was

00:18:37,180 --> 00:18:41,170
the man line tool and then Keith Packard

00:18:39,550 --> 00:18:43,270
says well heck at that point Carl it

00:18:41,170 --> 00:18:45,970
would just be as I was struggling with

00:18:43,270 --> 00:18:48,220
this up user interface which is curses

00:18:45,970 --> 00:18:49,840
based interface written in Ruby I really

00:18:48,220 --> 00:18:51,280
wanted something inside of Emacs he's

00:18:49,840 --> 00:18:53,500
like that's just a little bit of a less

00:18:51,280 --> 00:18:55,120
code I could write that really fast at

00:18:53,500 --> 00:18:59,830
heat and somehow he tricked me into

00:18:55,120 --> 00:19:01,840
doing that couple days later I'm like

00:18:59,830 --> 00:19:04,420
well I've got an email program here and

00:19:01,840 --> 00:19:07,900
I switched to using it in entirely so it

00:19:04,420 --> 00:19:11,290
is so tell so finally getting back to

00:19:07,900 --> 00:19:13,720
Ann's question it it is the in it is an

00:19:11,290 --> 00:19:16,240
indexer that that expects to have a

00:19:13,720 --> 00:19:18,700
local mail store available okay it

00:19:16,240 --> 00:19:21,790
doesn't do anything in terms of fetching

00:19:18,700 --> 00:19:23,710
your mail getting it onto your system do

00:19:21,790 --> 00:19:25,030
it being an MDA this this guy who talks

00:19:23,710 --> 00:19:26,830
about it being an NBA well we'll talk

00:19:25,030 --> 00:19:28,450
about what that means in a second so

00:19:26,830 --> 00:19:30,220
from the beginning it assumes that all

00:19:28,450 --> 00:19:31,390
of your mail is available locally which

00:19:30,220 --> 00:19:34,320
is great because if you compare it to

00:19:31,390 --> 00:19:37,000
something like Gmail you've got a nice

00:19:34,320 --> 00:19:38,620
you can have your mail store live on

00:19:37,000 --> 00:19:40,960
your laptop and not be visible to any

00:19:38,620 --> 00:19:44,740
third party so that has the essent

00:19:40,960 --> 00:19:46,330
benefits on and then on top of that so

00:19:44,740 --> 00:19:47,920
now we have a command-line interface and

00:19:46,330 --> 00:19:50,730
I want to do a little bit of demo of the

00:19:47,920 --> 00:19:54,490
command-line interface do we have HDMI

00:19:50,730 --> 00:19:56,710
VGA just VGA yeah I bought two new of a

00:19:54,490 --> 00:19:58,480
laptop that did not give me a VGA but

00:19:56,710 --> 00:19:59,080
anyway I'll try it if you want to do it

00:19:58,480 --> 00:20:01,120
on my machine

00:19:59,080 --> 00:20:03,510
yeah we probably have more or less the

00:20:01,120 --> 00:20:03,510
same mail

00:20:08,700 --> 00:20:14,889
that's okay it's good

00:20:11,169 --> 00:20:16,299
no I we want to do that show them oh if

00:20:14,889 --> 00:20:17,649
I could just I just need to get this one

00:20:16,299 --> 00:20:19,570
line command to you somehow where you

00:20:17,649 --> 00:20:20,830
could type it in it won't work for you

00:20:19,570 --> 00:20:22,119
cuz you don't have the code repository

00:20:20,830 --> 00:20:26,019
MD learn it I'll talk about that in a

00:20:22,119 --> 00:20:27,820
second we'll lean what this real-life

00:20:26,019 --> 00:20:29,229
this was the command attacked this

00:20:27,820 --> 00:20:34,479
morning this would be a story in in a

00:20:29,229 --> 00:20:41,549
minute so I can't type all that if you

00:20:34,479 --> 00:20:41,549
get it right because it won't run okay

00:20:46,619 --> 00:20:56,200
okay so so do I so not much is is an

00:20:54,489 --> 00:20:59,320
indexer it assumes a local mail store

00:20:56,200 --> 00:21:01,599
and we did a library interface and my ID

00:20:59,320 --> 00:21:03,399
was once I got it to the point where I

00:21:01,599 --> 00:21:05,409
had something working inside of Emacs I

00:21:03,399 --> 00:21:06,820
said not any no money he's gonna want to

00:21:05,409 --> 00:21:08,109
use this well there's these huge I

00:21:06,820 --> 00:21:09,159
hearts that run their entire lives

00:21:08,109 --> 00:21:10,269
inside Emacs and they'll be happy

00:21:09,159 --> 00:21:12,190
they'll love it they've been waiting

00:21:10,269 --> 00:21:16,239
this for this four years since since

00:21:12,190 --> 00:21:18,820
they ran over wanderlust speed

00:21:16,239 --> 00:21:19,989
limitations years ago but anyone else

00:21:18,820 --> 00:21:21,999
like I don't know they want to use

00:21:19,989 --> 00:21:23,229
Thunderbird or some other email program

00:21:21,999 --> 00:21:24,429
will need to give them a library

00:21:23,229 --> 00:21:25,779
interface oh that's why we did a library

00:21:24,429 --> 00:21:28,779
interface so that someone who's actually

00:21:25,779 --> 00:21:30,909
maintaining a graphical email program

00:21:28,779 --> 00:21:33,399
could simply hook it up hook not much up

00:21:30,909 --> 00:21:36,039
and we get fast indexing for who we own

00:21:33,399 --> 00:21:37,690
and Thunderbird and nobody's ever done

00:21:36,039 --> 00:21:39,039
that either so that's been kind of sad

00:21:37,690 --> 00:21:41,409
for me not that I want to use those

00:21:39,039 --> 00:21:46,320
programs but just to be able to say that

00:21:41,409 --> 00:21:49,779
we did that so I'm gonna an indexer a

00:21:46,320 --> 00:21:52,029
library and mail nua built on top of it

00:21:49,779 --> 00:21:53,729
okay so now now I'll do David's story

00:21:52,029 --> 00:21:55,379
since he's typing this are we failing

00:21:53,729 --> 00:21:58,029
okay

00:21:55,379 --> 00:21:58,719
we can't it's a one-liner I typed it

00:21:58,029 --> 00:22:01,749
this morning

00:21:58,719 --> 00:22:04,979
yeah but it took you all morning yeah

00:22:01,749 --> 00:22:04,979
put it in a pastebin and I'll gather

00:22:05,700 --> 00:22:15,749
I don't have a webcam technology I'm so

00:22:12,309 --> 00:22:15,749
glad we asked for this to be streamed

00:22:17,129 --> 00:22:22,359
can I just paste it to a hash not much

00:22:19,749 --> 00:22:26,369
are you in there oh yeah I can be oh I

00:22:22,359 --> 00:22:28,869
could be if the network worked okay so I

00:22:26,369 --> 00:22:31,419
don't know why I have no network so this

00:22:28,869 --> 00:22:33,159
morning Eric and Holt is a not much user

00:22:31,419 --> 00:22:34,779
and he says oh I had this not much

00:22:33,159 --> 00:22:37,509
disaster happened to me yesterday

00:22:34,779 --> 00:22:39,249
what was that he said well I was in a

00:22:37,509 --> 00:22:43,929
filth I thought I was in a filtered view

00:22:39,249 --> 00:22:46,320
of a few commits and I ran star- inbox

00:22:43,929 --> 00:22:48,940
these are Emacs keybinding commands

00:22:46,320 --> 00:22:50,710
meaning star act on all messages in the

00:22:48,940 --> 00:22:53,289
current view - take away the current tag

00:22:50,710 --> 00:22:55,210
not inbox but to do star - to do and he

00:22:53,289 --> 00:22:56,710
said I cleared all that the to do flies

00:22:55,210 --> 00:22:58,029
because these flags emails that I wants

00:22:56,710 --> 00:23:03,940
to get back into something with them

00:22:58,029 --> 00:23:05,289
later but he wasn't he thought he was in

00:23:03,940 --> 00:23:07,299
the filter view but he was at the top

00:23:05,289 --> 00:23:11,469
level view and he threw away that to do

00:23:07,299 --> 00:23:14,200
tag from all messages well the tags are

00:23:11,469 --> 00:23:15,729
the only bit of valuable of precious

00:23:14,200 --> 00:23:16,809
information that exists in the not much

00:23:15,729 --> 00:23:18,909
data because everything else you can

00:23:16,809 --> 00:23:20,889
recreate from the mail store tags are

00:23:18,909 --> 00:23:23,190
something that you've added manually and

00:23:20,889 --> 00:23:25,389
so now he said I didn't remember

00:23:23,190 --> 00:23:26,109
anything that I had marked to do I said

00:23:25,389 --> 00:23:28,359
well that's great you don't have

00:23:26,109 --> 00:23:29,830
anything to do hey you know what just

00:23:28,359 --> 00:23:31,210
got it easier he said I said well surely

00:23:29,830 --> 00:23:33,129
you can recreate a bunch of that he said

00:23:31,210 --> 00:23:34,570
yeah I could remember that someone had

00:23:33,129 --> 00:23:35,889
asked me about that kayaking trip and I

00:23:34,570 --> 00:23:37,539
was supposed to reply and he said I went

00:23:35,889 --> 00:23:39,039
back and recreated that but said the

00:23:37,539 --> 00:23:41,139
biggest problem was this the software

00:23:39,039 --> 00:23:43,059
project he's dealing with called piglet

00:23:41,139 --> 00:23:44,919
he said there were a bunch of patches

00:23:43,059 --> 00:23:46,629
the people at set 9 marked him because

00:23:44,919 --> 00:23:48,099
they were tricky to review and I wanted

00:23:46,629 --> 00:23:50,499
to get back to them and came back and he

00:23:48,099 --> 00:23:52,570
said in particular the people that had

00:23:50,499 --> 00:23:53,979
sent it Webb patch and it was their

00:23:52,570 --> 00:23:56,229
first pattern I wanted to make sure it

00:23:53,979 --> 00:23:57,879
really got reviewed and got and gotten

00:23:56,229 --> 00:24:00,489
got at least replied to and inserted

00:23:57,879 --> 00:24:02,200
right I said well so you're talking

00:24:00,489 --> 00:24:05,320
about people who have sent met patches

00:24:02,200 --> 00:24:08,229
to the piglet mailing list their patch

00:24:05,320 --> 00:24:09,729
has never been applied this this seems

00:24:08,229 --> 00:24:11,589
like something that's really easy to

00:24:09,729 --> 00:24:15,460
describe so we wrote this one-liner we

00:24:11,589 --> 00:24:15,879
still okay so anyway this parts not my

00:24:15,460 --> 00:24:16,669
fault

00:24:15,879 --> 00:24:19,070
this

00:24:16,669 --> 00:24:21,679
just it was just a little bit he's got

00:24:19,070 --> 00:24:24,499
the not much part at the beginning okay

00:24:21,679 --> 00:24:29,899
well I can keep typing yeah so yeah keep

00:24:24,499 --> 00:24:31,489
typing and the rest of its just to get

00:24:29,899 --> 00:24:33,799
short log thing it's not really that

00:24:31,489 --> 00:24:36,590
interesting now that we're making David

00:24:33,799 --> 00:24:39,980
type it but the point was we could we

00:24:36,590 --> 00:24:41,919
could we could generate a query so we

00:24:39,980 --> 00:24:45,769
this first part not much search to

00:24:41,919 --> 00:24:47,690
Bremner subject so Brenner this was

00:24:45,769 --> 00:24:48,980
actually piglet he changed it on me so

00:24:47,690 --> 00:24:50,419
we were looking for all the mails sent

00:24:48,980 --> 00:24:52,909
to the piglet mailing list with the

00:24:50,419 --> 00:24:54,769
subject of patch and that was about 2600

00:24:52,909 --> 00:24:56,600
email messages more than Eric wanted to

00:24:54,769 --> 00:24:59,720
go through but we wanted to exclude from

00:24:56,600 --> 00:25:02,119
that any than an email sent from someone

00:24:59,720 --> 00:25:05,059
who had there had a patch successfully

00:25:02,119 --> 00:25:06,710
applied to the piglet code repository so

00:25:05,059 --> 00:25:10,279
that was a good short log with some said

00:25:06,710 --> 00:25:13,489
blah blah blah blah that was perfect

00:25:10,279 --> 00:25:15,169
thanks David and then result do you want

00:25:13,489 --> 00:25:17,299
to type no he's not gonna type the

00:25:15,169 --> 00:25:18,769
output of the command cuz the output of

00:25:17,299 --> 00:25:21,649
this command was I don't know it filled

00:25:18,769 --> 00:25:23,509
my hole in next term 60 lines worth of

00:25:21,649 --> 00:25:25,759
query but you could write any get about

00:25:23,509 --> 00:25:28,669
a hundred messages out of it and and

00:25:25,759 --> 00:25:31,850
even that we had some some names like

00:25:28,669 --> 00:25:34,129
shows a where the accent was in the get

00:25:31,850 --> 00:25:35,330
message or the you know there were some

00:25:34,129 --> 00:25:37,519
easy things to filter out I think he has

00:25:35,330 --> 00:25:38,840
70 messages after about five minutes and

00:25:37,519 --> 00:25:39,799
that was enough to that was the small

00:25:38,840 --> 00:25:41,359
enough list that he could go through

00:25:39,799 --> 00:25:43,850
manually recover so that was kind of a

00:25:41,359 --> 00:25:46,039
cool so in the script ability of an

00:25:43,850 --> 00:25:47,720
email program has been really valuable

00:25:46,039 --> 00:25:49,970
to me and that was something I didn't

00:25:47,720 --> 00:25:51,769
expect to create from the beginning so

00:25:49,970 --> 00:25:53,989
basically what you said is is that

00:25:51,769 --> 00:25:55,639
because you've managed to make an Emacs

00:25:53,989 --> 00:25:58,220
mail client that doesn't support Emacs

00:25:55,639 --> 00:26:03,320
undo you ended up writing some hideous

00:25:58,220 --> 00:26:05,289
shell script well and he talked earlier

00:26:03,320 --> 00:26:08,539
about these this incremental metadata

00:26:05,289 --> 00:26:10,759
updated so that Eric could have been

00:26:08,539 --> 00:26:13,369
backing up his tags in the beginning and

00:26:10,759 --> 00:26:14,779
avoided this problem right but that

00:26:13,369 --> 00:26:18,590
would require people to make backups

00:26:14,779 --> 00:26:20,739
which is yeah kind of a silly okay so I

00:26:18,590 --> 00:26:24,390
don't know where people want to go

00:26:20,739 --> 00:26:28,470
somebody asked about not much jump Rob

00:26:24,390 --> 00:26:30,360
I think the other thing to note there is

00:26:28,470 --> 00:26:32,100
that there is a dump and restore command

00:26:30,360 --> 00:26:34,920
which you can run whatever you want to

00:26:32,100 --> 00:26:36,330
and it keeps a file containing all the

00:26:34,920 --> 00:26:39,690
mappings between the message IDs and

00:26:36,330 --> 00:26:41,610
your tags and so if you do that then you

00:26:39,690 --> 00:26:44,880
can get most of it back later

00:26:41,610 --> 00:26:46,350
so and people do fun things with not

00:26:44,880 --> 00:26:47,910
much dump because it's a text file that

00:26:46,350 --> 00:26:49,679
comes out you can put that under get

00:26:47,910 --> 00:26:51,000
revision control and you have that I

00:26:49,679 --> 00:26:52,230
said that's the only precious bit of

00:26:51,000 --> 00:26:54,090
your database that's not recreate able

00:26:52,230 --> 00:26:55,260
from your from your mail store so it's

00:26:54,090 --> 00:26:56,490
you can put that under get revision

00:26:55,260 --> 00:26:59,220
controls pretty cool and that's actually

00:26:56,490 --> 00:27:03,650
the basis of the nm bug thing that does

00:26:59,220 --> 00:27:08,460
the bug tracker you want to demo sure so

00:27:03,650 --> 00:27:11,400
let me do two demos at one time so this

00:27:08,460 --> 00:27:13,140
is on your real mail store yeah so you

00:27:11,400 --> 00:27:15,330
can you can now it do some injection

00:27:13,140 --> 00:27:16,830
attacks if you want to email something

00:27:15,330 --> 00:27:18,750
to David right now you could put in

00:27:16,830 --> 00:27:21,690
Barrow cool I was I was gonna go to the

00:27:18,750 --> 00:27:24,570
bug list okay so let's go to the review

00:27:21,690 --> 00:27:26,640
list all right so not much jump is

00:27:24,570 --> 00:27:30,570
nothing other than just some cool key

00:27:26,640 --> 00:27:34,010
bindings for save searches so now from

00:27:30,570 --> 00:27:37,530
anywhere in not much you can jump to

00:27:34,010 --> 00:27:42,929
what I guess no I'm not much users would

00:27:37,530 --> 00:27:45,419
call folders and it's much faster and so

00:27:42,929 --> 00:27:47,960
we used to have sort of a top down we

00:27:45,419 --> 00:27:51,090
still have in fact so this just adds on

00:27:47,960 --> 00:27:53,570
some more keep let's not look at my

00:27:51,090 --> 00:27:55,770
inbox god only knows what's in there

00:27:53,570 --> 00:28:00,570
there's much better right nothing

00:27:55,770 --> 00:28:08,010
incriminating on the debian list so okay

00:28:00,570 --> 00:28:13,260
so so right so so this is in fact an EM

00:28:08,010 --> 00:28:16,410
bug so nm bug is just a search in my in

00:28:13,260 --> 00:28:20,340
some sense just a particular search in

00:28:16,410 --> 00:28:25,520
my mail client so instead of going to

00:28:20,340 --> 00:28:25,520
the BTS I just bring up this and

00:28:25,799 --> 00:28:32,679
so for example if I decided and this is

00:28:30,639 --> 00:28:35,830
the list of outstanding patches to be

00:28:32,679 --> 00:28:37,899
reviewed or which is only 66 patches at

00:28:35,830 --> 00:28:40,779
the moment which is pretty good I have

00:28:37,899 --> 00:28:42,039
to say I mean it's being worse before it

00:28:40,779 --> 00:28:46,210
anyway

00:28:42,039 --> 00:28:48,549
so suppose that as our mailing review

00:28:46,210 --> 00:28:50,649
takes place or our patch review takes

00:28:48,549 --> 00:28:53,259
place so the mailing list and suppose

00:28:50,649 --> 00:28:59,619
that I think you know what you only live

00:28:53,259 --> 00:29:07,749
once let's just merge this so I just

00:28:59,619 --> 00:29:16,090
removed that tag and then I do oh this

00:29:07,749 --> 00:29:19,509
is not too good is it all right so then

00:29:16,090 --> 00:29:23,889
I could do but I'm not going to just do

00:29:19,509 --> 00:29:27,009
a Nimba commit which commits my tag

00:29:23,889 --> 00:29:34,989
changes to a shared get well to a git

00:29:27,009 --> 00:29:37,720
repository and an EM bug push so it's a

00:29:34,989 --> 00:29:41,470
it's a variety of distributed bug

00:29:37,720 --> 00:29:43,269
tracker and so why do you care right I'm

00:29:41,470 --> 00:29:45,429
just messing about with my mail store

00:29:43,269 --> 00:29:47,139
well the point is it's not just my mail

00:29:45,429 --> 00:29:50,710
store right other people can fetch this

00:29:47,139 --> 00:29:54,609
same git repository and share partial

00:29:50,710 --> 00:29:58,960
versions of tags with me so everybody

00:29:54,609 --> 00:30:04,869
who's interested can participate in this

00:29:58,960 --> 00:30:06,460
metadata sharing it's experiment well I

00:30:04,869 --> 00:30:10,149
guess it's not really an experiment

00:30:06,460 --> 00:30:12,759
anymore now it's been the bug tracker

00:30:10,149 --> 00:30:15,099
for for not much for quite quite some

00:30:12,759 --> 00:30:18,429
time and for people that are using not

00:30:15,099 --> 00:30:21,460
much it's been been very effective that

00:30:18,429 --> 00:30:24,759
we can we can collaboratively work on

00:30:21,460 --> 00:30:27,340
this this single namespace of tags and

00:30:24,759 --> 00:30:30,099
we have yeah we all have this reflected

00:30:27,340 --> 00:30:33,099
in our own mail store so you don't have

00:30:30,099 --> 00:30:35,409
to operate since since all of our code

00:30:33,099 --> 00:30:36,669
submission is by emailing patches all of

00:30:35,409 --> 00:30:37,750
our code review is by replying to

00:30:36,669 --> 00:30:41,410
patches

00:30:37,750 --> 00:30:43,390
all of our bug manipulation is simply

00:30:41,410 --> 00:30:48,670
adding or removing tags from those

00:30:43,390 --> 00:30:51,910
emails within the email client mica one

00:30:48,670 --> 00:30:55,330
of you so now I understand your save

00:30:51,910 --> 00:30:58,060
searches and Emacs were all not much : :

00:30:55,330 --> 00:30:59,440
foo tags which are all related to this

00:30:58,060 --> 00:31:00,390
because those were the bunch of tags

00:30:59,440 --> 00:31:03,910
you're sharing through the git repo

00:31:00,390 --> 00:31:08,530
right so I have a couple of save

00:31:03,910 --> 00:31:12,340
searches and I mean it's only a

00:31:08,530 --> 00:31:16,540
convention there's a configuration for

00:31:12,340 --> 00:31:21,730
this webpage so the set of tags is just

00:31:16,540 --> 00:31:24,820
a set of tags right and so not much and

00:31:21,730 --> 00:31:27,040
I or the web page and I have a set of

00:31:24,820 --> 00:31:30,610
views which more or less agree except

00:31:27,040 --> 00:31:32,110
that some things I hide because I once I

00:31:30,610 --> 00:31:32,860
tag something some way I don't want to

00:31:32,110 --> 00:31:38,860
see it anymore

00:31:32,860 --> 00:31:42,010
but yeah essentially has anybody thought

00:31:38,860 --> 00:31:44,050
about downloading the debian BTS running

00:31:42,010 --> 00:31:47,380
not much to index it all and then

00:31:44,050 --> 00:31:50,070
tagging all the tags in it and see what

00:31:47,380 --> 00:31:52,260
it comes out of it

00:31:50,070 --> 00:31:53,670
yeah yeah it should be possible and

00:31:52,260 --> 00:31:56,310
because yeah the the Debian bug tracking

00:31:53,670 --> 00:31:57,690
system is similarly all-male and some

00:31:56,310 --> 00:32:00,150
extra metadata on top I don't know that

00:31:57,690 --> 00:32:03,150
and every thought has a comment probably

00:32:00,150 --> 00:32:05,640
about the size of the mail store hey

00:32:03,150 --> 00:32:07,500
you're right yeah I was just gonna

00:32:05,640 --> 00:32:08,550
mention that in terms for people it

00:32:07,500 --> 00:32:10,620
might be relevant who are thinking about

00:32:08,550 --> 00:32:12,270
evaluating it in terms of performance it

00:32:10,620 --> 00:32:15,510
performs pretty well but when you get to

00:32:12,270 --> 00:32:18,570
a very large number or a not not quite

00:32:15,510 --> 00:32:21,600
not much number of mail unless you have

00:32:18,570 --> 00:32:24,360
an SSD I suspect you it can get a little

00:32:21,600 --> 00:32:26,940
slower so if you're up in the 1.5

00:32:24,360 --> 00:32:30,390
million messages or whatever it'll be a

00:32:26,940 --> 00:32:33,720
little pokey on Oh like fast laptop

00:32:30,390 --> 00:32:35,310
drive and and of course the BTS is many

00:32:33,720 --> 00:32:37,440
times that right I have no idea what the

00:32:35,310 --> 00:32:40,860
total number of messages in all threads

00:32:37,440 --> 00:32:45,320
in all BTS bugs even the unarchive ones

00:32:40,860 --> 00:32:48,060
that's a what it could be try for sure

00:32:45,320 --> 00:32:49,590
the early conspiracy theory that came

00:32:48,060 --> 00:32:50,820
out I was working for Intel when I

00:32:49,590 --> 00:32:52,380
started not the mountain not much

00:32:50,820 --> 00:32:54,090
project I'm still working for Intel was

00:32:52,380 --> 00:32:55,590
that and and I came out saying yeah it

00:32:54,090 --> 00:32:57,000
works great for me I'd be a hundred

00:32:55,590 --> 00:32:59,370
thousand messages it's blisteringly fast

00:32:57,000 --> 00:33:00,660
and then runs else like wait what file

00:32:59,370 --> 00:33:02,190
system are using you know what about

00:33:00,660 --> 00:33:05,460
ext4 or whatever and they're like oh

00:33:02,190 --> 00:33:07,470
wait I'm using an Intel SSD and it goes

00:33:05,460 --> 00:33:08,820
really fast for me so oh yeah the

00:33:07,470 --> 00:33:10,350
conspiracy theory is that the whole

00:33:08,820 --> 00:33:13,230
project is just a way to sell as this

00:33:10,350 --> 00:33:17,040
needs from it down there it actually

00:33:13,230 --> 00:33:18,720
works really well on an SSD yeah and and

00:33:17,040 --> 00:33:21,390
I think there's some kernel bugs in

00:33:18,720 --> 00:33:22,650
something that or something that we're

00:33:21,390 --> 00:33:26,600
tickling some bad behavior somewhere

00:33:22,650 --> 00:33:29,670
right so um at the moment I'm using VM

00:33:26,600 --> 00:33:34,020
which I maybe not everybody knows it's

00:33:29,670 --> 00:33:37,770
an email smell reader a VM likes to take

00:33:34,020 --> 00:33:39,090
your whole inbox my inboxes you know

00:33:37,770 --> 00:33:41,300
several tens of thousands of messages I

00:33:39,090 --> 00:33:45,590
have to rotate it about every six months

00:33:41,300 --> 00:33:48,420
and it slurps Bowl inbox into inter core

00:33:45,590 --> 00:33:54,960
this works particularly well if you have

00:33:48,420 --> 00:33:57,450
a 32-bit Emacs can I evaluate not much

00:33:54,960 --> 00:34:00,570
without having to convert my entire

00:33:57,450 --> 00:34:00,860
mailbox to mail there in case I you know

00:34:00,570 --> 00:34:03,520
be

00:34:00,860 --> 00:34:06,410
converting back is gonna be pain as well

00:34:03,520 --> 00:34:07,940
so you said you you currently have to

00:34:06,410 --> 00:34:09,800
rotate it every occasionally that's

00:34:07,940 --> 00:34:21,980
because of some VM limitation or

00:34:09,800 --> 00:34:24,109
something Jim about it so right so

00:34:21,980 --> 00:34:25,700
you've been so you've been regularly

00:34:24,109 --> 00:34:27,200
running into the limitations of the mbox

00:34:25,700 --> 00:34:28,940
file format for a long time and just

00:34:27,200 --> 00:34:31,100
dealing with it by rolling this file

00:34:28,940 --> 00:34:34,399
over anyway okay

00:34:31,100 --> 00:34:38,060
support for M box file indexing well as

00:34:34,399 --> 00:34:39,710
I said to Richard Stallman currently

00:34:38,060 --> 00:34:45,200
nobody's working on that but you'd be

00:34:39,710 --> 00:34:47,240
welcome to yeah but I mean as far as

00:34:45,200 --> 00:34:50,149
permanently it's it's it's it's pretty

00:34:47,240 --> 00:34:51,830
trivial to run an box to MD and see what

00:34:50,149 --> 00:34:53,960
it would be like when I the way it's the

00:34:51,830 --> 00:34:56,750
most awful sorry if the authors in the

00:34:53,960 --> 00:34:59,270
audience but it's the most awful user

00:34:56,750 --> 00:35:02,000
interface ever I mean it makes it look

00:34:59,270 --> 00:35:03,980
like genius but yeah it is it is really

00:35:02,000 --> 00:35:05,780
bad it like doesn't take relative pads

00:35:03,980 --> 00:35:07,369
you have to give it an absolute pads and

00:35:05,780 --> 00:35:09,230
weird things got but you give em boxed

00:35:07,369 --> 00:35:10,310
em be absolute path your M box absolute

00:35:09,230 --> 00:35:13,520
path to the mail do you want it to

00:35:10,310 --> 00:35:21,590
create and try it out maybe you'll never

00:35:13,520 --> 00:35:22,910
want to go back questions you just

00:35:21,590 --> 00:35:25,040
wanted to mention a pet peeve of mine

00:35:22,910 --> 00:35:28,250
which is totally in the area of patches

00:35:25,040 --> 00:35:30,020
welcome as David Ori told me and I just

00:35:28,250 --> 00:35:32,090
wanted to mention because it might be

00:35:30,020 --> 00:35:34,070
relevant for specific use cases so

00:35:32,090 --> 00:35:36,530
namely I'm living in a counter which is

00:35:34,070 --> 00:35:39,200
very much accent full which is France

00:35:36,530 --> 00:35:41,210
and as far as I understand there is no

00:35:39,200 --> 00:35:43,670
kind of stemming which is not really

00:35:41,210 --> 00:35:47,380
standing but canonicalization that makes

00:35:43,670 --> 00:35:50,180
accented letter being indexed as also as

00:35:47,380 --> 00:35:52,190
also if they didn't have the accent in

00:35:50,180 --> 00:35:54,260
the first place so if you have a lot of

00:35:52,190 --> 00:35:55,940
word with accents and especially if you

00:35:54,260 --> 00:35:57,920
have the same word appearing with and

00:35:55,940 --> 00:35:59,750
without accents we essentially need to

00:35:57,920 --> 00:36:03,230
do a lot of queries with a lot of ORS

00:35:59,750 --> 00:36:05,240
and I guess there we might need to do

00:36:03,230 --> 00:36:08,030
some kind of canonicalization before

00:36:05,240 --> 00:36:11,390
indexing but if you are not doing that

00:36:08,030 --> 00:36:13,160
that will be really painful so a lot a

00:36:11,390 --> 00:36:14,330
lot of that feature would be down inside

00:36:13,160 --> 00:36:18,020
of x' APN sapien

00:36:14,330 --> 00:36:19,610
does have the ability to specify oh this

00:36:18,020 --> 00:36:21,380
is the language of the text I'm indexing

00:36:19,610 --> 00:36:22,490
and it can it behave differently and so

00:36:21,380 --> 00:36:25,070
you might trigger some of that behavior

00:36:22,490 --> 00:36:26,180
one way or the other but you have

00:36:25,070 --> 00:36:27,770
different languages and so there's a

00:36:26,180 --> 00:36:30,830
there's a fundamental problem here which

00:36:27,770 --> 00:36:32,960
is email doesn't come at decorated with

00:36:30,830 --> 00:36:36,590
what the language of the text is there

00:36:32,960 --> 00:36:37,730
are various projects that examine a body

00:36:36,590 --> 00:36:40,370
of text and try to automatically

00:36:37,730 --> 00:36:41,930
determine the language and then we could

00:36:40,370 --> 00:36:43,630
pass that on to sapien I don't think

00:36:41,930 --> 00:36:46,940
we've yet incorporated one into not much

00:36:43,630 --> 00:36:52,510
so but if I I mean I think we talked

00:36:46,940 --> 00:36:58,040
about this in Switzerland too and yeah

00:36:52,510 --> 00:37:02,300
and and I guess it doesn't sound at

00:36:58,040 --> 00:37:04,100
least to get some initial handling for

00:37:02,300 --> 00:37:08,900
it I mean it sounds to me like sapiens

00:37:04,100 --> 00:37:11,330
the right place for it but and but the

00:37:08,900 --> 00:37:12,710
problem with that is then well do we

00:37:11,330 --> 00:37:15,170
really want to use bleeding edges a

00:37:12,710 --> 00:37:17,420
paean this is a constant question for us

00:37:15,170 --> 00:37:18,440
but well and do we know how much

00:37:17,420 --> 00:37:20,720
language is important because I think

00:37:18,440 --> 00:37:23,900
not much is currently telling sapien

00:37:20,720 --> 00:37:27,980
English and I don't know if you changed

00:37:23,900 --> 00:37:30,980
it to I I think that Zack has this sort

00:37:27,980 --> 00:37:45,530
of Unicode map in mind that maps

00:37:30,980 --> 00:37:47,170
everything to ask so Dimitri is going to

00:37:45,530 --> 00:37:51,320
tell us why this is impossible

00:37:47,170 --> 00:37:53,720
well I mean it so itself like half of

00:37:51,320 --> 00:37:56,570
that database it has translation tables

00:37:53,720 --> 00:37:58,870
from most of the languages have that

00:37:56,570 --> 00:38:02,330
have ever existed into a canonical

00:37:58,870 --> 00:38:04,910
translation you could use Lib it su but

00:38:02,330 --> 00:38:06,380
it's like seven megabyte database which

00:38:04,910 --> 00:38:08,540
comes with it and then you could

00:38:06,380 --> 00:38:10,790
translate it but I'm not sure if sapien

00:38:08,540 --> 00:38:13,330
hooks into that or not but it is the

00:38:10,790 --> 00:38:17,600
canonical way to Kanak canonicalize

00:38:13,330 --> 00:38:19,340
localized text there were a couple of

00:38:17,600 --> 00:38:21,900
other questions the video team has a

00:38:19,340 --> 00:38:26,790
question which I don't know man

00:38:21,900 --> 00:38:33,410
you're having it okay hi how well does

00:38:26,790 --> 00:38:36,090
not much handle duplicate message IDs so

00:38:33,410 --> 00:38:38,310
take that no you go ahead and so usually

00:38:36,090 --> 00:38:40,710
in in in most mail stores if you have

00:38:38,310 --> 00:38:42,000
this same message ID showing up in

00:38:40,710 --> 00:38:44,970
multiple places you're actually dealing

00:38:42,000 --> 00:38:49,080
with logically the same message and

00:38:44,970 --> 00:38:50,910
that's how not much treats it it in the

00:38:49,080 --> 00:38:53,970
database it uses it uses the message a

00:38:50,910 --> 00:38:55,260
message ID as its primary key it will

00:38:53,970 --> 00:38:57,270
keep track of the fact that there are

00:38:55,260 --> 00:39:00,900
multiple files associated with the same

00:38:57,270 --> 00:39:03,210
message ID and you can

00:39:00,900 --> 00:39:05,010
there's even UI where you could do say

00:39:03,210 --> 00:39:07,560
hey give me a list of all the message

00:39:05,010 --> 00:39:09,390
IDs that map to multiple files and you

00:39:07,560 --> 00:39:12,090
could do prune out the duplicates and

00:39:09,390 --> 00:39:13,830
things like that though what not much

00:39:12,090 --> 00:39:17,070
currently does the last time I looked at

00:39:13,830 --> 00:39:18,690
the code was it indexes the full text of

00:39:17,070 --> 00:39:20,580
the first such message it encounters

00:39:18,690 --> 00:39:22,350
later if it encounters another message

00:39:20,580 --> 00:39:23,970
with the same message ID it assumes it's

00:39:22,350 --> 00:39:27,480
already indexed it and won't index it

00:39:23,970 --> 00:39:29,040
further and common what happens to me

00:39:27,480 --> 00:39:31,080
for example I'll get two copies of every

00:39:29,040 --> 00:39:32,850
message sent to a mailing list one that

00:39:31,080 --> 00:39:36,360
has and one that does not have the

00:39:32,850 --> 00:39:37,950
mailing list little signature thing at

00:39:36,360 --> 00:39:40,800
the bottom so that's been that's worked

00:39:37,950 --> 00:39:42,360
in practice just fine there's you can

00:39:40,800 --> 00:39:44,550
imagine potential attacks where people

00:39:42,360 --> 00:39:45,840
are trying to forge message IDs and

00:39:44,550 --> 00:39:47,220
trying to mess up my mail store by

00:39:45,840 --> 00:39:49,260
sending me duplicates that we haven't

00:39:47,220 --> 00:39:51,240
dealt with that potential problem yeah I

00:39:49,260 --> 00:39:53,040
mean the other thing is I think the

00:39:51,240 --> 00:39:57,120
consensus is what we really want to do

00:39:53,040 --> 00:40:00,630
is index all the copies for at least so

00:39:57,120 --> 00:40:02,460
that even if you have these false

00:40:00,630 --> 00:40:04,950
friends which look like the same message

00:40:02,460 --> 00:40:07,050
but really aren't you can find the one

00:40:04,950 --> 00:40:09,210
the message you want so and that's

00:40:07,050 --> 00:40:12,510
believe it or not that's why we haven't

00:40:09,210 --> 00:40:15,750
indexed the list ID yeah so there's some

00:40:12,510 --> 00:40:17,610
short chain of causality and and and

00:40:15,750 --> 00:40:19,530
then there's probably some UI things to

00:40:17,610 --> 00:40:21,600
be done to say hey by the way this

00:40:19,530 --> 00:40:23,010
message has three other duplicates would

00:40:21,600 --> 00:40:24,780
you like to see them as well and if we

00:40:23,010 --> 00:40:26,610
had that UI in there I think at that

00:40:24,780 --> 00:40:29,970
point you you could avoid any potential

00:40:26,610 --> 00:40:32,190
problems from weird duplication I mean

00:40:29,970 --> 00:40:33,340
besides the footer at the bottom there's

00:40:32,190 --> 00:40:35,390
also the list

00:40:33,340 --> 00:40:36,920
the headers are different for those and

00:40:35,390 --> 00:40:38,900
if I'm going to search I see all the

00:40:36,920 --> 00:40:40,610
ones from that list where we had this

00:40:38,900 --> 00:40:43,580
conversation suddenly the ones came to

00:40:40,610 --> 00:40:44,810
me they got indexed first or missing and

00:40:43,580 --> 00:40:47,090
that's what exactly what David meant

00:40:44,810 --> 00:40:48,890
that's why we haven't indexed list ID

00:40:47,090 --> 00:40:50,240
yet because we'd have to do it reliably

00:40:48,890 --> 00:40:51,950
by kept doing the copies first so we've

00:40:50,240 --> 00:40:55,310
got a deal with the indexing of copies

00:40:51,950 --> 00:40:56,840
before we can have that why on earth are

00:40:55,310 --> 00:41:15,590
you using the message ID is the primary

00:40:56,840 --> 00:41:17,000
key that's obviously insane I have this

00:41:15,590 --> 00:41:18,650
great built-in answer to most of these

00:41:17,000 --> 00:41:20,390
hard questions that had to be answered

00:41:18,650 --> 00:41:22,400
early in the project was I was doing

00:41:20,390 --> 00:41:24,290
only what's up did right I wasn't trying

00:41:22,400 --> 00:41:26,060
to invent something new so I'm gonna

00:41:24,290 --> 00:41:29,750
pass off all the tough questions to that

00:41:26,060 --> 00:41:31,660
point but no do you have a what message

00:41:29,750 --> 00:41:34,400
idea turns out like I said it's not that

00:41:31,660 --> 00:41:36,110
primary it's a thing that's searchable

00:41:34,400 --> 00:41:39,140
there's nothing really primary about it

00:41:36,110 --> 00:41:40,460
other than that we don't duplicate we

00:41:39,140 --> 00:41:41,480
don't wind its nucleus once we're

00:41:40,460 --> 00:41:42,680
indexing duplicates there gonna be

00:41:41,480 --> 00:41:49,160
anything primary about it would just be

00:41:42,680 --> 00:41:53,060
another term that's indexed why is it

00:41:49,160 --> 00:41:58,790
that when I use different format outputs

00:41:53,060 --> 00:42:01,180
I get different headers output like I

00:41:58,790 --> 00:42:04,060
was looking for all the spam SS and

00:42:01,180 --> 00:42:07,190
rules that hit and different formats

00:42:04,060 --> 00:42:09,950
outputs didn't have them included and

00:42:07,190 --> 00:42:12,710
some did not for searches just for

00:42:09,950 --> 00:42:13,850
dumping showing this so the format

00:42:12,710 --> 00:42:15,770
question here this is whether you're

00:42:13,850 --> 00:42:18,620
going to output plain text versus

00:42:15,770 --> 00:42:20,060
outputting JSON versus whatever else and

00:42:18,620 --> 00:42:21,050
I don't imagine there's any good reason

00:42:20,060 --> 00:42:22,400
that the head set of headers from

00:42:21,050 --> 00:42:27,440
different forms would be different eats

00:42:22,400 --> 00:42:32,240
could be a bug so it seems it's most

00:42:27,440 --> 00:42:34,550
likely that the plain text versus one of

00:42:32,240 --> 00:42:36,410
the structured formats got out of sync I

00:42:34,550 --> 00:42:39,740
mean I expect the structured formats to

00:42:36,410 --> 00:42:42,430
all be in sync but these days nobody

00:42:39,740 --> 00:42:46,380
uses the plain pack

00:42:42,430 --> 00:42:53,710
in as sort of be part of their workflow

00:42:46,380 --> 00:42:55,000
so it's maybe bit rotting yeah and I

00:42:53,710 --> 00:42:58,030
think relative that for people who

00:42:55,000 --> 00:42:59,290
aren't familiar it's very handy that

00:42:58,030 --> 00:43:00,790
they're talking about the command line

00:42:59,290 --> 00:43:04,090
client the command line client you can

00:43:00,790 --> 00:43:08,170
ask it to spit out well-documented Jason

00:43:04,090 --> 00:43:12,640
or s expressions of your data so it's

00:43:08,170 --> 00:43:13,870
very easy to build on top of that yeah I

00:43:12,640 --> 00:43:16,000
mentioned earlier we have a library

00:43:13,870 --> 00:43:17,590
which is a sea library interface then

00:43:16,000 --> 00:43:19,750
we've got like these bindings on top of

00:43:17,590 --> 00:43:21,940
it but almost always when I've built

00:43:19,750 --> 00:43:23,320
something on top of not much I haven't

00:43:21,940 --> 00:43:25,870
used the library but I've built on top

00:43:23,320 --> 00:43:27,640
of the not much command line interface

00:43:25,870 --> 00:43:30,760
all of the initial Emacs stuff was done

00:43:27,640 --> 00:43:32,140
that way even with the cheesy text plain

00:43:30,760 --> 00:43:33,610
text output not needing structure

00:43:32,140 --> 00:43:34,600
unfortunately now it's use the

00:43:33,610 --> 00:43:37,840
structured output it's much more

00:43:34,600 --> 00:43:39,910
reliable but that's been the the nicest

00:43:37,840 --> 00:43:44,950
thing for script ability is using the

00:43:39,910 --> 00:43:47,950
command line interface other questions

00:43:44,950 --> 00:43:51,610
probably one time I was gonna do the

00:43:47,950 --> 00:43:54,250
actual time wait seven minutes oh look

00:43:51,610 --> 00:43:55,870
Joe's got signs for us ten minutes other

00:43:54,250 --> 00:44:00,070
questions otherwise David's gonna come

00:43:55,870 --> 00:44:03,310
up with other stuff to demo so we

00:44:00,070 --> 00:44:06,430
mentioned undo or at least I did you've

00:44:03,310 --> 00:44:08,470
got any plans to make you know undo work

00:44:06,430 --> 00:44:12,580
in Emacs because I use that in my mirror

00:44:08,470 --> 00:44:18,250
all the time so um one thing we yeah

00:44:12,580 --> 00:44:23,140
we're getting closer maybe I'm not sure

00:44:18,250 --> 00:44:32,200
the right way to do it because it

00:44:23,140 --> 00:44:34,600
essentially has to keep the the database

00:44:32,200 --> 00:44:36,730
in sync right I mean you can reach

00:44:34,600 --> 00:44:42,670
behind the Emacs interface and and do

00:44:36,730 --> 00:44:45,820
stuff in parallel so but one minor UI

00:44:42,670 --> 00:44:50,980
feature which which isn't what you asked

00:44:45,820 --> 00:44:59,839
for but which is getting closer oh dear

00:44:50,980 --> 00:45:02,289
so right so you can't really see but

00:44:59,839 --> 00:45:05,029
here I just asked Anna bug how is my

00:45:02,289 --> 00:45:10,730
mail store diverged from the canonical

00:45:05,029 --> 00:45:17,150
one hand I'm undoing that undoing my

00:45:10,730 --> 00:45:23,950
previous demo okay so it's back so one

00:45:17,150 --> 00:45:27,589
minor UI thing that's changed but is so

00:45:23,950 --> 00:45:30,380
you can sort of again it's a workaround

00:45:27,589 --> 00:45:34,309
but but so one thing that's changed is

00:45:30,380 --> 00:45:37,579
rather than making the tags disappear

00:45:34,309 --> 00:45:40,490
we're now giving visual feedback so this

00:45:37,579 --> 00:45:43,549
this red line says it's actually gone

00:45:40,490 --> 00:45:46,519
from the database but so you can put it

00:45:43,549 --> 00:45:51,589
back so it's a related UI feature I

00:45:46,519 --> 00:45:59,390
guess what's the recommended way to

00:45:51,589 --> 00:46:01,309
fetch your mail so I guess I mean in an

00:45:59,390 --> 00:46:06,859
important sense it's not much doesn't

00:46:01,309 --> 00:46:08,990
care as long as the lands there but but

00:46:06,859 --> 00:46:12,710
in the boss spirit of how do we solve

00:46:08,990 --> 00:46:16,819
these problems I use sync maldor I have

00:46:12,710 --> 00:46:20,089
SSH access many people use offline IMAP

00:46:16,819 --> 00:46:21,500
I have because I'm still using fetch

00:46:20,089 --> 00:46:26,450
mail but I don't necessarily recommend

00:46:21,500 --> 00:46:28,730
that yeah our sync of the mail there so

00:46:26,450 --> 00:46:31,609
what sync mail yeah our sink in some

00:46:28,730 --> 00:46:33,259
sense you know it's much better tested

00:46:31,609 --> 00:46:35,630
and isn't going to do crazy and

00:46:33,259 --> 00:46:36,619
compatible upgrades before I go to the

00:46:35,630 --> 00:46:37,670
next question I want to say one more

00:46:36,619 --> 00:46:41,140
thing on the answer should we have

00:46:37,670 --> 00:46:43,579
discussed doing making every command

00:46:41,140 --> 00:46:45,380
construct a journal of the changes it's

00:46:43,579 --> 00:46:46,100
made so that you could do you have a

00:46:45,380 --> 00:46:47,990
seen point

00:46:46,100 --> 00:46:50,830
you could replay back to do your undos

00:46:47,990 --> 00:46:52,790
and things like that so we've done some

00:46:50,830 --> 00:46:54,950
specification of what a solution like

00:46:52,790 --> 00:46:58,460
that would be would look like we haven't

00:46:54,950 --> 00:47:01,100
have an inter Linda that I actually

00:46:58,460 --> 00:47:04,010
wanted to respond to that as well I'm

00:47:01,100 --> 00:47:05,690
not sure what undo you might be

00:47:04,010 --> 00:47:08,000
referring to but I don't know how

00:47:05,690 --> 00:47:12,400
familiar you are with not much itself

00:47:08,000 --> 00:47:15,770
but as it is an Emacs in the Emacs mode

00:47:12,400 --> 00:47:18,020
you have when for example you're

00:47:15,770 --> 00:47:20,030
constructing a message you can do all

00:47:18,020 --> 00:47:22,370
the undo your you typically doing with

00:47:20,030 --> 00:47:24,560
your text editing that all exists no

00:47:22,370 --> 00:47:26,900
problem it's just the not much commands

00:47:24,560 --> 00:47:30,260
where you're adding a tag for example

00:47:26,900 --> 00:47:34,280
there is not a the Emacs undo for that

00:47:30,260 --> 00:47:37,340
add or remove a tag but you can quite

00:47:34,280 --> 00:47:39,920
simply just do the opposite command you

00:47:37,340 --> 00:47:41,810
just did if you just remove that tag or

00:47:39,920 --> 00:47:44,210
if you removed all the tags in a

00:47:41,810 --> 00:47:46,610
particular view then you can just add

00:47:44,210 --> 00:47:50,390
them all back you just don't have the

00:47:46,610 --> 00:47:52,640
key binding to to undo that and as David

00:47:50,390 --> 00:47:54,980
demoed here on a single message we also

00:47:52,640 --> 00:47:56,690
if you do if you have a search for

00:47:54,980 --> 00:47:58,760
example showing me show me all the

00:47:56,690 --> 00:48:00,650
messages currently tagged to do and you

00:47:58,760 --> 00:48:02,630
hit remove the to do tag from all of

00:48:00,650 --> 00:48:03,890
those it won't automatically update that

00:48:02,630 --> 00:48:05,540
search which would lose the messages

00:48:03,890 --> 00:48:07,160
that they stay there so you could say oh

00:48:05,540 --> 00:48:09,140
wait I messed that up add them back and

00:48:07,160 --> 00:48:12,530
so you can usually recover from those

00:48:09,140 --> 00:48:15,500
kinds of things right but I mean we had

00:48:12,530 --> 00:48:16,760
the example earlier I VM has virtual

00:48:15,500 --> 00:48:18,470
folders which were a bit like which are

00:48:16,760 --> 00:48:22,070
kind of search really yeah and I'm often

00:48:18,470 --> 00:48:25,700
doing unwise things to the contents of a

00:48:22,070 --> 00:48:29,060
folder like you know taking the deleting

00:48:25,700 --> 00:48:30,920
the the delete all the messages in this

00:48:29,060 --> 00:48:32,870
follow in this virtual folder when I

00:48:30,920 --> 00:48:34,790
previously deleted half of them right

00:48:32,870 --> 00:48:38,630
and now I want to undo that deletion

00:48:34,790 --> 00:48:41,930
that's very easy I just hit undo we're

00:48:38,630 --> 00:48:44,360
not not absolutely the the full-featured

00:48:41,930 --> 00:48:47,030
idea would be a nice thing and we'd love

00:48:44,360 --> 00:48:50,170
to have that we have two minutes so I

00:48:47,030 --> 00:48:50,170
think we're down to two questions

00:48:55,009 --> 00:49:00,509
like given that you don't index this ID

00:48:58,440 --> 00:49:05,789
how does how do you deal with mailing

00:49:00,509 --> 00:49:08,369
lists usually most of us just use the to

00:49:05,789 --> 00:49:10,680
address or a conjunction of several to

00:49:08,369 --> 00:49:16,440
addresses at the list a to address has

00:49:10,680 --> 00:49:17,459
changed and its know for example if you

00:49:16,440 --> 00:49:18,779
want to search for anything that was

00:49:17,459 --> 00:49:21,180
sent to the not much you could just do

00:49:18,779 --> 00:49:23,400
right now you just search do a search to

00:49:21,180 --> 00:49:26,519
: not much all right

00:49:23,400 --> 00:49:28,859
and there there's that's all the message

00:49:26,519 --> 00:49:30,239
sent to an address that had not much in

00:49:28,859 --> 00:49:32,459
it thank you that you could have written

00:49:30,239 --> 00:49:33,779
they the complete address the

00:49:32,459 --> 00:49:35,279
destination address for the mailing list

00:49:33,779 --> 00:49:37,680
but that's what most of us do is use the

00:49:35,279 --> 00:49:40,949
to address so I should mention that

00:49:37,680 --> 00:49:44,609
another option is delivery time tagging

00:49:40,949 --> 00:49:47,999
at some time which some people do or if

00:49:44,609 --> 00:49:50,369
you happen to deliver into in the whole

00:49:47,999 --> 00:49:54,029
proc mail style or the current proc mail

00:49:50,369 --> 00:49:57,209
style I guess into folders then you can

00:49:54,029 --> 00:50:04,140
search on folders so this is a little

00:49:57,209 --> 00:50:07,979
harder but maybe this will work you

00:50:04,140 --> 00:50:09,779
never know look so I have folder I

00:50:07,979 --> 00:50:11,910
happen to have my mail more or less

00:50:09,779 --> 00:50:15,739
organized into folders by mailing lists

00:50:11,910 --> 00:50:19,199
from don't get sidetracked answer yes

00:50:15,739 --> 00:50:23,729
and so I'm able to use that file

00:50:19,199 --> 00:50:28,680
structure as well to search and let's

00:50:23,729 --> 00:50:30,900
not talk about the morning I apologize

00:50:28,680 --> 00:50:33,209
that I missed the first half of the buff

00:50:30,900 --> 00:50:35,999
so I don't know if there was already

00:50:33,209 --> 00:50:39,479
been discussion about indexing the clear

00:50:35,999 --> 00:50:41,249
text of encrypted messages yeah I wanted

00:50:39,479 --> 00:50:43,920
to talk about this right now

00:50:41,249 --> 00:50:46,499
it's a encryption I'm I switched a few

00:50:43,920 --> 00:50:50,549
months ago to encrypt by default all

00:50:46,499 --> 00:50:52,410
messages that I sent if it can find the

00:50:50,549 --> 00:50:53,670
thing if I have the key of the person

00:50:52,410 --> 00:50:54,869
I'm sending to descending to an

00:50:53,670 --> 00:50:57,809
individual person not to a mail unless

00:50:54,869 --> 00:50:59,819
my client will automatically

00:50:57,809 --> 00:51:02,130
transparently do encryption I'm not

00:50:59,819 --> 00:51:05,190
doing encryption because I'd necessarily

00:51:02,130 --> 00:51:06,989
have some private content of the message

00:51:05,190 --> 00:51:08,279
I'm just trying to protect the transport

00:51:06,989 --> 00:51:11,039
of the message so it's not intercepted

00:51:08,279 --> 00:51:13,349
as it goes along because of that if I'm

00:51:11,039 --> 00:51:14,789
if I'm imagining a day where all of us

00:51:13,349 --> 00:51:16,079
are sending a lot of messages back and

00:51:14,789 --> 00:51:19,259
forth that are all encrypted by default

00:51:16,079 --> 00:51:21,539
I would love to continue to be able to

00:51:19,259 --> 00:51:23,130
use not much not much right now can't do

00:51:21,539 --> 00:51:26,489
any indexing of that encrypted content

00:51:23,130 --> 00:51:29,219
what I would like to do is when

00:51:26,489 --> 00:51:30,690
receiving the message not much will

00:51:29,219 --> 00:51:31,769
currently decrypt it probably no it'll

00:51:30,690 --> 00:51:33,180
prompt for the passphrase enter the

00:51:31,769 --> 00:51:34,559
passphrase to decrypt didn't show it to

00:51:33,180 --> 00:51:36,239
me I'd like it to say oh I just

00:51:34,559 --> 00:51:37,799
decrypted this message I inserted the

00:51:36,239 --> 00:51:39,690
plain text version into the mail store

00:51:37,799 --> 00:51:42,390
which I would almost always say yes to

00:51:39,690 --> 00:51:43,799
and then I would protect my mail store

00:51:42,390 --> 00:51:45,479
separately such as he's an encrypted

00:51:43,799 --> 00:51:49,259
file system or something like that we

00:51:45,479 --> 00:51:50,489
don't protect what they next in the mail

00:51:49,259 --> 00:51:56,279
store I go do those I would do those

00:51:50,489 --> 00:51:58,140
together no I'm suggesting that I would

00:51:56,279 --> 00:51:59,729
suggest that when decrypted when

00:51:58,140 --> 00:52:01,289
decrypting the mess when decrypting the

00:51:59,729 --> 00:52:03,410
message to show it to me I would insert

00:52:01,289 --> 00:52:05,400
a plain text version into my mail store

00:52:03,410 --> 00:52:08,069
that's what I would that's this is the

00:52:05,400 --> 00:52:10,380
system I would like and then they would

00:52:08,069 --> 00:52:15,150
take protection of the mail store and

00:52:10,380 --> 00:52:17,310
the index as a separate step dkg and

00:52:15,150 --> 00:52:20,760
make them stand up

00:52:17,310 --> 00:52:22,350
so I think people are gonna have a lot

00:52:20,760 --> 00:52:24,810
of different references about the

00:52:22,350 --> 00:52:27,150
sensitivity of their mail so I

00:52:24,810 --> 00:52:29,070
personally want my mail story I want the

00:52:27,150 --> 00:52:31,020
messages in my mail store to be byte for

00:52:29,070 --> 00:52:32,340
byte what I received one of the things I

00:52:31,020 --> 00:52:33,720
love about not much is the fact that it

00:52:32,340 --> 00:52:38,460
doesn't tamper with the messages in the

00:52:33,720 --> 00:52:40,410
mail store and so so what I would like

00:52:38,460 --> 00:52:42,510
is I would like to have the index be

00:52:40,410 --> 00:52:45,810
something that I can protect and on a

00:52:42,510 --> 00:52:47,760
per message on a on a per message

00:52:45,810 --> 00:52:49,110
decision in the way that you describe be

00:52:47,760 --> 00:52:51,570
able to say please index the clear text

00:52:49,110 --> 00:52:54,150
of this message and I recognize that the

00:52:51,570 --> 00:52:55,170
if you have access to the index of the

00:52:54,150 --> 00:52:57,690
clear text message you can probably

00:52:55,170 --> 00:53:01,040
reconstruct at the very least of that a

00:52:57,690 --> 00:53:03,690
bag of words of the message if not

00:53:01,040 --> 00:53:06,240
you've got the order as well because so

00:53:03,690 --> 00:53:11,310
you might as well give put the grant I

00:53:06,240 --> 00:53:12,780
said okay so but but there's still a

00:53:11,310 --> 00:53:20,130
question of I've got my mail store and

00:53:12,780 --> 00:53:21,030
I've got my index right but uh but I

00:53:20,130 --> 00:53:23,460
don't want to have to think about

00:53:21,030 --> 00:53:25,230
protecting my mail store right right now

00:53:23,460 --> 00:53:26,640
I understand what's going on in my mail

00:53:25,230 --> 00:53:29,010
store I understand what where the

00:53:26,640 --> 00:53:32,430
encrypted messages are and I can and if

00:53:29,010 --> 00:53:33,390
I'm doing our sync or offline IMAP or

00:53:32,430 --> 00:53:36,810
something I don't want to be pushing

00:53:33,390 --> 00:53:40,050
clear text messages back up to the

00:53:36,810 --> 00:53:42,030
servers mail store and my and my index

00:53:40,050 --> 00:53:43,590
is local and it's going to stay local so

00:53:42,030 --> 00:53:44,910
I want to protect the index and I would

00:53:43,590 --> 00:53:47,160
like to leave my mail store the same so

00:53:44,910 --> 00:53:51,270
so the workflow I would like to see is

00:53:47,160 --> 00:53:53,040
is just focused on the index I should

00:53:51,270 --> 00:53:55,350
have started that question with the

00:53:53,040 --> 00:53:58,560
answer that currently not much does not

00:53:55,350 --> 00:54:01,110
index encrypted messages so if the index

00:53:58,560 --> 00:54:02,310
is safe in that sense it's not useful in

00:54:01,110 --> 00:54:04,020
the sense that you can't search any of

00:54:02,310 --> 00:54:05,520
the encrypted messages so yeah we do

00:54:04,020 --> 00:54:08,870
need to develop the work gloves and the

00:54:05,520 --> 00:54:08,870
the write protection for that

00:54:11,660 --> 00:54:16,080
so this is the end of our time slot

00:54:13,980 --> 00:54:17,250
there is no other talks in this room so

00:54:16,080 --> 00:54:19,080
you guys can continue as long as you

00:54:17,250 --> 00:54:24,440
want but there aren't well the other

00:54:19,080 --> 00:54:24,440
talks going on just so you know Thanks

00:54:24,560 --> 00:54:28,290
I'm just gonna say that presumably it's

00:54:26,640 --> 00:54:30,150
just the ballad a message that's

00:54:28,290 --> 00:54:32,610
encrypted and not the headers so you are

00:54:30,150 --> 00:54:37,350
still indexing better if you're gonna

00:54:32,610 --> 00:54:39,540
talk more okay that's correct

00:54:37,350 --> 00:54:41,040
the typical email encryption will

00:54:39,540 --> 00:54:43,110
encrypt just the body and now much will

00:54:41,040 --> 00:54:44,790
successfully index all of that

00:54:43,110 --> 00:54:48,870
unencrypted headers so you can't still

00:54:44,790 --> 00:54:50,010
search those and so you can anyone is

00:54:48,870 --> 00:54:51,450
free to leave at this point there may be

00:54:50,010 --> 00:54:54,060
other more interesting talks going on

00:54:51,450 --> 00:54:55,920
but you know it's free disdain chat yeah

00:54:54,060 --> 00:54:58,590
so I'm interested in encryption as well

00:54:55,920 --> 00:55:01,080
so I I thought about the problem and I

00:54:58,590 --> 00:55:02,850
was wondering you can simply I don't

00:55:01,080 --> 00:55:04,830
know if it's simply or not but can you

00:55:02,850 --> 00:55:07,230
just thinking about encrypting the whole

00:55:04,830 --> 00:55:09,060
index with some transparent layer on top

00:55:07,230 --> 00:55:12,600
of Sapien or maybe working with a

00:55:09,060 --> 00:55:15,380
gazillion people to just do that it's

00:55:12,600 --> 00:55:17,850
certainly possible there's a project

00:55:15,380 --> 00:55:20,100
male pilot project is that a free

00:55:17,850 --> 00:55:21,540
software thing I can't remember yes

00:55:20,100 --> 00:55:26,850
there they're currently doing an

00:55:21,540 --> 00:55:27,750
encrypted index I believe no no no they

00:55:26,850 --> 00:55:31,050
did their own they did their own

00:55:27,750 --> 00:55:33,900
indexing and they're focusing entirely

00:55:31,050 --> 00:55:42,900
on a web client so it's another project

00:55:33,900 --> 00:55:45,560
perhaps we're looking at so it seems to

00:55:42,900 --> 00:55:48,720
me like the workflow is very much a

00:55:45,560 --> 00:55:50,790
filter filter prior to index workflow

00:55:48,720 --> 00:55:53,310
where every message that comes in has no

00:55:50,790 --> 00:55:55,380
filter and then you can apply filters

00:55:53,310 --> 00:56:00,000
for the particular indexing of any given

00:55:55,380 --> 00:56:01,590
message so and then of course I guess

00:56:00,000 --> 00:56:02,820
you need it needs to be ordered filters

00:56:01,590 --> 00:56:04,380
right because you could decrypt a

00:56:02,820 --> 00:56:07,640
message that then has a PDF in it and

00:56:04,380 --> 00:56:10,640
you'd like to index the PDF successively

00:56:07,640 --> 00:56:10,640
yeah

00:56:10,980 --> 00:56:15,990
not much doesn't currently I think go to

00:56:14,370 --> 00:56:17,760
that level we all indexed the file names

00:56:15,990 --> 00:56:21,900
of attachments but we're not sucking

00:56:17,760 --> 00:56:25,290
them in and indexing other attachments

00:56:21,900 --> 00:56:28,950
etc unless one was out of that yeah no I

00:56:25,290 --> 00:56:30,750
don't think it'd be pretty simple to do

00:56:28,950 --> 00:56:33,630
we had to go to be an issue with how

00:56:30,750 --> 00:56:37,260
much are you gonna blow to your index so

00:56:33,630 --> 00:56:39,870
I'd suggest that I mean more it's the

00:56:37,260 --> 00:56:44,820
beginning of DEFCON I'm around all week

00:56:39,870 --> 00:56:47,190
I'm around all week so so I sort of rate

00:56:44,820 --> 00:56:49,800
wrap it up and and please find us if you

00:56:47,190 --> 00:56:51,780
want to talk more or want to work on

00:56:49,800 --> 00:56:53,430
lunch yeah thanks for company signs it's

00:56:51,780 --> 00:56:54,630
definitely welcome appreciate oh they're

00:56:53,430 --> 00:56:57,760
just

00:56:54,630 --> 00:56:57,760

YouTube URL: https://www.youtube.com/watch?v=Snd80u7gm8U


