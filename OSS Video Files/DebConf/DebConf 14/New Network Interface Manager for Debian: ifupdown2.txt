Title: New Network Interface Manager for Debian: ifupdown2
Publication date: 2017-12-02
Playlist: DebConf 14
Description: 
	by Roopa Prabhu

At: DebConf14
https://debconf14.debconf.org/
Room: Room 327
Scheduled start: 2014-08-28 13:30:00
Captions: 
	00:00:00,030 --> 00:00:03,170
this cream

00:00:10,219 --> 00:00:13,330
I came my way

00:00:16,850 --> 00:00:22,290
so welcome to this session it's called

00:00:20,550 --> 00:00:24,750
if up down to we all know what if up

00:00:22,290 --> 00:00:27,240
down is so we're expecting some

00:00:24,750 --> 00:00:30,440
enhancements here on building on the

00:00:27,240 --> 00:00:32,760
existing infrastructure and I'm happy to

00:00:30,440 --> 00:00:36,210
introduce to you now you're gonna see

00:00:32,760 --> 00:00:39,150
you name who comes to us from Kemalists

00:00:36,210 --> 00:00:41,190
cumulus networks and you're working on

00:00:39,150 --> 00:00:44,340
this yes because your employer is paying

00:00:41,190 --> 00:00:53,550
you so please welcome and let's have a

00:00:44,340 --> 00:00:55,829
good session hello everybody I'm Dubai

00:00:53,550 --> 00:00:59,820
and I will forgive me this network so I

00:00:55,829 --> 00:01:03,059
think I'll just start with the talk the

00:00:59,820 --> 00:01:05,820
outline a bit of background of who we

00:01:03,059 --> 00:01:10,560
are because that sets the context for

00:01:05,820 --> 00:01:13,020
why we went into these chain why did we

00:01:10,560 --> 00:01:16,340
upgrade I mean develop I have gone to

00:01:13,020 --> 00:01:20,130
and enhancements to I have gone to a

00:01:16,340 --> 00:01:21,450
little bit of light into network

00:01:20,130 --> 00:01:25,259
interface configuration on network

00:01:21,450 --> 00:01:27,840
switches and the challenges we faced a

00:01:25,259 --> 00:01:31,170
little bit about I offer down introduced

00:01:27,840 --> 00:01:34,429
I have down to a bit into the features

00:01:31,170 --> 00:01:39,750
of I have gone to next steps and

00:01:34,429 --> 00:01:42,030
questions after that background cumulus

00:01:39,750 --> 00:01:45,110
Linux is a Debian based distribution for

00:01:42,030 --> 00:01:48,979
network switches our philosophy is

00:01:45,110 --> 00:01:52,590
manage your network switch as a server

00:01:48,979 --> 00:01:54,270
we use the server distribution on it on

00:01:52,590 --> 00:01:58,250
a network switch we have made some

00:01:54,270 --> 00:02:01,289
enhancements to some of the packages and

00:01:58,250 --> 00:02:03,660
our philosophy is you use your existing

00:02:01,289 --> 00:02:07,170
tools to configure network switches so

00:02:03,660 --> 00:02:11,880
your network switch ports appear as nic

00:02:07,170 --> 00:02:14,250
ports on the server and we we basically

00:02:11,880 --> 00:02:16,680
use the debian server environment to

00:02:14,250 --> 00:02:20,040
boot up the switch and you know what

00:02:16,680 --> 00:02:22,469
manage network interfaces etc so current

00:02:20,040 --> 00:02:27,599
release of cumulus is based on debian

00:02:22,469 --> 00:02:29,549
busy and we started with the

00:02:27,599 --> 00:02:32,159
from down deploying AI from down on our

00:02:29,549 --> 00:02:38,099
switches and we faced a few challenges

00:02:32,159 --> 00:02:39,989
and hence the IFF down to what kind of

00:02:38,099 --> 00:02:41,790
configuration we do on our switches

00:02:39,989 --> 00:02:44,730
usually there are large number of

00:02:41,790 --> 00:02:47,400
interfaces we have usually about 52

00:02:44,730 --> 00:02:52,260
switch ports and we configure a ton of

00:02:47,400 --> 00:02:55,769
bridges every VLAN is a bridge and we

00:02:52,260 --> 00:02:57,450
have bonds and tons of VLAN devices and

00:02:55,769 --> 00:02:58,889
the VLAN devices scale with the number

00:02:57,450 --> 00:03:00,299
of VLANs so you can imagine we are

00:02:58,889 --> 00:03:03,780
thousands of VLANs and thousands of

00:03:00,299 --> 00:03:05,969
resistant and large number of interface

00:03:03,780 --> 00:03:08,669
attributes as well we have a bunch of

00:03:05,969 --> 00:03:10,859
network protocols that run on our box

00:03:08,669 --> 00:03:12,810
because it's a network switch so and

00:03:10,859 --> 00:03:18,139
every interface everybody interface via

00:03:12,810 --> 00:03:21,810
st p e-- MSTP and so we have ton of

00:03:18,139 --> 00:03:23,900
attributes for STP IGMP attributes that

00:03:21,810 --> 00:03:27,090
need to be configured on interfaces

00:03:23,900 --> 00:03:34,049
mostly static configuration unlike

00:03:27,090 --> 00:03:35,699
hypervisors or desktops this is M so the

00:03:34,049 --> 00:03:37,829
challenges we faced with the existing

00:03:35,699 --> 00:03:40,769
network interface management tools this

00:03:37,829 --> 00:03:43,049
is mostly in context of iff down

00:03:40,769 --> 00:03:45,269
but in general we did a survey of other

00:03:43,049 --> 00:03:48,389
network interface management tools on

00:03:45,269 --> 00:03:50,389
Linux and we did find that they didn't

00:03:48,389 --> 00:03:55,079
suit very well for our needs

00:03:50,389 --> 00:03:56,849
so mostly most of the network interface

00:03:55,079 --> 00:03:59,340
managers are optimized for desktop and

00:03:56,849 --> 00:04:01,349
hypervisor environments mostly to

00:03:59,340 --> 00:04:05,189
environments where with dynamic

00:04:01,349 --> 00:04:07,470
interface configurations and we have

00:04:05,189 --> 00:04:09,329
seen that complexity increases with

00:04:07,470 --> 00:04:12,329
interface configuration scale with large

00:04:09,329 --> 00:04:15,090
number of interfaces the interface

00:04:12,329 --> 00:04:17,039
configuration becomes very complex large

00:04:15,090 --> 00:04:21,120
number of files or the files get too

00:04:17,039 --> 00:04:22,740
large and so on in most cases the

00:04:21,120 --> 00:04:26,690
dependency of network interface

00:04:22,740 --> 00:04:30,570
configuration ordering is on the user

00:04:26,690 --> 00:04:33,180
user has to decide using us to declare

00:04:30,570 --> 00:04:36,330
as interface configuration in a way that

00:04:33,180 --> 00:04:38,360
bonds are bonds that are members of

00:04:36,330 --> 00:04:40,780
bridge ports have to be created before

00:04:38,360 --> 00:04:42,880
before the bridge etc

00:04:40,780 --> 00:04:45,880
and lack of support for incremental

00:04:42,880 --> 00:04:49,420
changes to network interfaces this was

00:04:45,880 --> 00:04:54,040
particularly in context of I have down I

00:04:49,420 --> 00:04:55,750
have down did not allow you to change an

00:04:54,040 --> 00:04:57,370
already existing interface or update

00:04:55,750 --> 00:04:59,140
configuration or an already existing

00:04:57,370 --> 00:05:01,330
interface you have to bring down the

00:04:59,140 --> 00:05:04,540
interface and then bring it back up and

00:05:01,330 --> 00:05:06,580
lack of tools to query and validate so

00:05:04,540 --> 00:05:08,950
you apply a configuration with aia for

00:05:06,580 --> 00:05:11,230
down and then to query the applied state

00:05:08,950 --> 00:05:13,750
you had to go back and look at the

00:05:11,230 --> 00:05:15,760
configuration using native Linux tools

00:05:13,750 --> 00:05:17,890
for example a bridge here you could

00:05:15,760 --> 00:05:20,230
create a bridge using arrow down but go

00:05:17,890 --> 00:05:25,860
back and look at it using be our CTL or

00:05:20,230 --> 00:05:30,700
IP route 2 etc this light is basically

00:05:25,860 --> 00:05:32,620
just says the same things but it also

00:05:30,700 --> 00:05:34,810
tells it also shows what are the

00:05:32,620 --> 00:05:37,120
benefits of five up/down it has a

00:05:34,810 --> 00:05:39,580
pluggable architecture which is good you

00:05:37,120 --> 00:05:42,190
can drop a script in for any new

00:05:39,580 --> 00:05:44,290
configuration that you want uses native

00:05:42,190 --> 00:05:45,910
Linux tools and if those faster

00:05:44,290 --> 00:05:48,910
development and you don't have to

00:05:45,910 --> 00:05:51,910
duplicate whatever your native Linux to

00:05:48,910 --> 00:05:56,050
does into your network manager for

00:05:51,910 --> 00:05:58,930
example today I figure out - is kind of

00:05:56,050 --> 00:06:01,660
becoming the only tool to manage all

00:05:58,930 --> 00:06:04,810
network interfaces or create or create

00:06:01,660 --> 00:06:08,110
network interfaces so we use IP route to

00:06:04,810 --> 00:06:11,740
a lot and we believe that in the future

00:06:08,110 --> 00:06:14,800
IP route 2 is going to have support for

00:06:11,740 --> 00:06:16,450
almost all types of interfaces and I

00:06:14,800 --> 00:06:20,050
 on has good user documentation

00:06:16,450 --> 00:06:22,210
it's a well-known tool and most of our

00:06:20,050 --> 00:06:23,770
previous customers first release

00:06:22,210 --> 00:06:28,750
customers were already on I have four

00:06:23,770 --> 00:06:32,800
down so and the challenges most of them

00:06:28,750 --> 00:06:34,180
I spoke on the last slide the other

00:06:32,800 --> 00:06:36,190
thing was development was also a

00:06:34,180 --> 00:06:37,990
challenge because I have down was little

00:06:36,190 --> 00:06:41,520
written in a literate programming

00:06:37,990 --> 00:06:48,010
language and we did face a few bugs

00:06:41,520 --> 00:06:51,580
arrived uptown I felt down to eyford

00:06:48,010 --> 00:06:54,290
down to is basically reimplementation of

00:06:51,580 --> 00:06:56,720
I have down in Python

00:06:54,290 --> 00:06:58,640
which was fightin because it's easier

00:06:56,720 --> 00:07:01,070
and faster development and we could use

00:06:58,640 --> 00:07:03,740
existing modules and add functionality

00:07:01,070 --> 00:07:07,370
quicker you will see in the next few

00:07:03,740 --> 00:07:09,830
slides and it's backward compatible the

00:07:07,370 --> 00:07:12,260
guys are down with the interfaces format

00:07:09,830 --> 00:07:14,360
and also with the names of commands the

00:07:12,260 --> 00:07:15,440
commands you still find the commands I

00:07:14,360 --> 00:07:18,400
have five down

00:07:15,440 --> 00:07:24,200
I've query but you'll find them with

00:07:18,400 --> 00:07:27,710
newer options and you know there are a

00:07:24,200 --> 00:07:31,310
few missing minor missing functionality

00:07:27,710 --> 00:07:33,140
like mapping and maybe address other

00:07:31,310 --> 00:07:36,170
address families it only supports I on

00:07:33,140 --> 00:07:38,540
it and I need six today but that is that

00:07:36,170 --> 00:07:39,070
will be trivial to add in the future if

00:07:38,540 --> 00:07:42,290
needed

00:07:39,070 --> 00:07:46,010
and it continues to use existing native

00:07:42,290 --> 00:07:48,680
Linux tools pluggable architecture I Feb

00:07:46,010 --> 00:07:52,970
down used bash scripts this supports

00:07:48,680 --> 00:07:54,830
Python modules and meet some of the

00:07:52,970 --> 00:08:02,270
challenges that I described in previous

00:07:54,830 --> 00:08:04,910
slides packages I initially did it as

00:08:02,270 --> 00:08:07,370
two packages that can that could change

00:08:04,910 --> 00:08:09,650
the future but to keep things separate I

00:08:07,370 --> 00:08:11,540
have them as two packages right now so

00:08:09,650 --> 00:08:14,150
iff down to contains the base

00:08:11,540 --> 00:08:16,760
infrastructure to parse schedule and

00:08:14,150 --> 00:08:19,010
order interface network network

00:08:16,760 --> 00:08:21,530
interface configuration i have done two

00:08:19,010 --> 00:08:24,830
add-ons contains a bunch of python

00:08:21,530 --> 00:08:27,560
modules add-on modules as you can see

00:08:24,830 --> 00:08:31,760
there is a module to configure addresses

00:08:27,560 --> 00:08:36,130
a module to configure DHCP and bonds and

00:08:31,760 --> 00:08:41,510
eath to and MSTP bridge excetera

00:08:36,130 --> 00:08:43,010
this picture just shows the eye from

00:08:41,510 --> 00:08:44,360
down to package that's the

00:08:43,010 --> 00:08:47,120
infrastructure package sitting at the

00:08:44,360 --> 00:08:50,110
top I have done two add-ons which are

00:08:47,120 --> 00:08:54,350
add-on Python modules for each kind of

00:08:50,110 --> 00:08:59,540
interface configuration and you can see

00:08:54,350 --> 00:09:02,540
these modules they spit out commands in

00:08:59,540 --> 00:09:06,010
native tools language to configure

00:09:02,540 --> 00:09:06,010
network interface

00:09:07,490 --> 00:09:16,500
life of the knife is object so it's

00:09:11,940 --> 00:09:19,830
Python and iff down used environment

00:09:16,500 --> 00:09:24,120
variables to pass on interface

00:09:19,830 --> 00:09:27,510
attributes to modules I've done to uses

00:09:24,120 --> 00:09:29,730
a Python object so the on the far left

00:09:27,510 --> 00:09:31,589
you see the first block shows you and et

00:09:29,730 --> 00:09:35,790
Cie network interfaces file section

00:09:31,589 --> 00:09:37,440
which is an IFAs object and there you

00:09:35,790 --> 00:09:39,510
can see the I face object translated

00:09:37,440 --> 00:09:43,040
which each attributes you can see some

00:09:39,510 --> 00:09:45,390
metadata I have done two discovers

00:09:43,040 --> 00:09:48,779
dependence of that particular I this

00:09:45,390 --> 00:09:51,740
object and passes the the IFAs object is

00:09:48,779 --> 00:09:56,600
passed on to the modules and the modules

00:09:51,740 --> 00:09:56,600
translate that to native Linux commands

00:09:57,200 --> 00:10:03,209
how does iff down solve the network

00:10:00,149 --> 00:10:05,790
interface dependency order I have down

00:10:03,209 --> 00:10:08,480
to the main infrastructure package

00:10:05,790 --> 00:10:13,260
queries individual modules for

00:10:08,480 --> 00:10:15,720
dependence for example a bridge port the

00:10:13,260 --> 00:10:17,180
bridge module is queried for bridgeport

00:10:15,720 --> 00:10:19,500
dependence

00:10:17,180 --> 00:10:23,250
sorry bridge dependence which are bridge

00:10:19,500 --> 00:10:26,310
ports and it builds a dependency graph

00:10:23,250 --> 00:10:29,390
of all the interfaces in the UTC network

00:10:26,310 --> 00:10:35,700
interfaces file it sorts them and

00:10:29,390 --> 00:10:37,740
execute them in sorted order and it

00:10:35,700 --> 00:10:40,200
provides options to query and execute

00:10:37,740 --> 00:10:42,890
interface configuration dependency order

00:10:40,200 --> 00:10:47,160
there is an example in the next slide so

00:10:42,890 --> 00:10:49,470
you can see on the right there is a tip

00:10:47,160 --> 00:10:51,750
that's a typical graph typical

00:10:49,470 --> 00:10:53,430
configuration that we see not sure it's

00:10:51,750 --> 00:10:58,200
very clear but at the top there is a

00:10:53,430 --> 00:11:02,250
bridge and it has switch ports VLAN

00:10:58,200 --> 00:11:03,810
devices on switch ports as its as the

00:11:02,250 --> 00:11:08,430
bridge ports and there is a bond

00:11:03,810 --> 00:11:10,380
interface and bond has slaves and that

00:11:08,430 --> 00:11:14,370
gets translated into the sorted

00:11:10,380 --> 00:11:19,450
interface list at the bottom built-in

00:11:14,370 --> 00:11:23,260
devices support this was specific

00:11:19,450 --> 00:11:26,170
requirement don't say it was because our

00:11:23,260 --> 00:11:28,390
files had too many VLAN devices and it

00:11:26,170 --> 00:11:31,450
was like thousands of VLAN devices and

00:11:28,390 --> 00:11:33,190
having all the VLAN devices getting

00:11:31,450 --> 00:11:36,280
listed in the ECC network interfaces

00:11:33,190 --> 00:11:38,650
file made it very large so built-in

00:11:36,280 --> 00:11:41,320
devices support in fine print it tells

00:11:38,650 --> 00:11:44,140
you the details it basically I fell down

00:11:41,320 --> 00:11:46,570
to can recognize VLAN devices and then

00:11:44,140 --> 00:11:49,420
they appear as dependents of a bridge

00:11:46,570 --> 00:11:51,430
and even physical interfaces and it

00:11:49,420 --> 00:11:55,870
picks up those devices as it brings the

00:11:51,430 --> 00:12:02,050
bridge up so this kind of reduced the

00:11:55,870 --> 00:12:06,580
interface size a lot so this is just an

00:12:02,050 --> 00:12:10,990
example of the previous slide options to

00:12:06,580 --> 00:12:12,850
I of query to query the dependents you

00:12:10,990 --> 00:12:16,180
can there is a vid depends option there

00:12:12,850 --> 00:12:18,070
is a print dependency list or you can

00:12:16,180 --> 00:12:21,490
print the dependency list and dot format

00:12:18,070 --> 00:12:25,860
and can translate that dot into a visual

00:12:21,490 --> 00:12:25,860
format using any graph this tool

00:12:26,040 --> 00:12:32,980
incremental changes I have done two

00:12:29,140 --> 00:12:36,000
queries running state of the interface

00:12:32,980 --> 00:12:39,940
before it applies the Delta config I

00:12:36,000 --> 00:12:43,600
have query is extended to with options

00:12:39,940 --> 00:12:46,300
like a running and check to check the

00:12:43,600 --> 00:12:48,400
applied state of the to compare the

00:12:46,300 --> 00:12:51,370
applied state against the persistent

00:12:48,400 --> 00:12:54,670
user supplied config there is a new

00:12:51,370 --> 00:12:58,450
command i have reload which is similar

00:12:54,670 --> 00:13:01,980
to i f- a you can say or similar to

00:12:58,450 --> 00:13:04,420
service networking restart but it only

00:13:01,980 --> 00:13:09,640
executes up on interfaces that have

00:13:04,420 --> 00:13:11,110
changed and the example there actually

00:13:09,640 --> 00:13:13,930
shows that you can use I have query

00:13:11,110 --> 00:13:16,510
check option to check if bridge

00:13:13,930 --> 00:13:20,940
interface a running state of a bridge

00:13:16,510 --> 00:13:23,380
interface matches the user supplied

00:13:20,940 --> 00:13:26,980
configuration in the net interfaces file

00:13:23,380 --> 00:13:30,760
and yeah the check basically returns

00:13:26,980 --> 00:13:32,440
with 0 or 1 depending on the running

00:13:30,760 --> 00:13:35,790
state

00:13:32,440 --> 00:13:39,040
here is an example of I have query check

00:13:35,790 --> 00:13:42,610
this on the left side there is a bridge

00:13:39,040 --> 00:13:44,560
with ports and you can say check tells

00:13:42,610 --> 00:13:46,990
you that the bridge is all fine and on

00:13:44,560 --> 00:13:49,720
the right side I remove a port from the

00:13:46,990 --> 00:13:52,360
bridge it indicates that there was there

00:13:49,720 --> 00:13:55,780
is a missing port and you can do an iff

00:13:52,360 --> 00:13:58,390
and I thought will apply the Delta that

00:13:55,780 --> 00:14:00,970
is it will add the missing port to the

00:13:58,390 --> 00:14:02,980
bridge and the next type of query check

00:14:00,970 --> 00:14:09,370
command actually indicates that the

00:14:02,980 --> 00:14:14,620
bridge is fine templating this was again

00:14:09,370 --> 00:14:16,660
necessary to reduce the file size V in

00:14:14,620 --> 00:14:18,490
our deployments we have seen cookie

00:14:16,660 --> 00:14:22,210
cutter interface configurations for

00:14:18,490 --> 00:14:26,130
bridges especially so I have done two

00:14:22,210 --> 00:14:29,650
integrates an external templating agent

00:14:26,130 --> 00:14:33,730
called Mako and Mako was a choice

00:14:29,650 --> 00:14:37,210
because it was used in our other

00:14:33,730 --> 00:14:41,380
projects at that time but I down

00:14:37,210 --> 00:14:44,800
to provides easy options to plug any

00:14:41,380 --> 00:14:47,680
other template engine so at the right

00:14:44,800 --> 00:14:52,330
side there is an example of how we

00:14:47,680 --> 00:14:55,510
create hundred bridges by using Mako and

00:14:52,330 --> 00:14:59,290
Mako is nothing but you can encode

00:14:55,510 --> 00:15:02,470
Python language into your EDC network

00:14:59,290 --> 00:15:06,280
interfaces file and you can use I have

00:15:02,470 --> 00:15:10,690
query to render this template to see

00:15:06,280 --> 00:15:15,810
your expanded list of interfaces so this

00:15:10,690 --> 00:15:15,810
reduces the file size to quite an extent

00:15:18,620 --> 00:15:28,490
API it supports JSON both input and

00:15:23,780 --> 00:15:32,660
output in JSON format you can provide an

00:15:28,490 --> 00:15:36,170
EDC network interfaces as in JSON object

00:15:32,660 --> 00:15:40,220
format and the examples actually show I

00:15:36,170 --> 00:15:43,490
have query yeah there's a format option

00:15:40,220 --> 00:15:47,840
to print in JSON so all the all the

00:15:43,490 --> 00:15:50,870
commands by default take native input

00:15:47,840 --> 00:15:55,960
and output but there is a format option

00:15:50,870 --> 00:15:55,960
to input and output in JSON format

00:16:00,730 --> 00:16:08,860
I have query to processed running-config

00:16:04,290 --> 00:16:10,660
so since I had all the infrastructure to

00:16:08,860 --> 00:16:15,370
actually query the running State this

00:16:10,660 --> 00:16:17,920
was an easy addition to the tool what

00:16:15,370 --> 00:16:21,730
did what the example shows is you create

00:16:17,920 --> 00:16:25,080
bridge using native commands and then

00:16:21,730 --> 00:16:28,300
use I have query running to actually

00:16:25,080 --> 00:16:30,400
translate that running state into EDC

00:16:28,300 --> 00:16:33,460
network interfaces format and the last

00:16:30,400 --> 00:16:41,980
command actually cats that to EPC

00:16:33,460 --> 00:16:44,740
network interfaces next steps and

00:16:41,980 --> 00:16:48,220
looking at pushing - down - into the

00:16:44,740 --> 00:16:52,690
Debian repo integrate I have four down -

00:16:48,220 --> 00:16:55,720
with system D and also work with network

00:16:52,690 --> 00:17:00,730
manager we want to be close to close to

00:16:55,720 --> 00:17:04,209
Debian native as possible and yeah so

00:17:00,730 --> 00:17:12,630
then some more bug fixes and some more

00:17:04,209 --> 00:17:15,699
compatibility options so getting started

00:17:12,630 --> 00:17:18,910
with I have down - it's already on

00:17:15,699 --> 00:17:20,980
github and there is a lot of

00:17:18,910 --> 00:17:24,040
documentation there is developer

00:17:20,980 --> 00:17:28,750
documentation as well to add more

00:17:24,040 --> 00:17:32,730
modules drop down and there is a lot of

00:17:28,750 --> 00:17:35,710
cumulus Linux documentation for - down -

00:17:32,730 --> 00:17:41,310
we have a ton of example files as well

00:17:35,710 --> 00:17:46,110
and there is my email id there and

00:17:41,310 --> 00:17:46,110
that's about it actually questions

00:17:58,740 --> 00:18:00,800
I

00:18:02,050 --> 00:18:07,220
hi-yah so I'm relaying a question from

00:18:04,820 --> 00:18:11,600
IRC there's people watching this over

00:18:07,220 --> 00:18:14,150
the world and the question is if if

00:18:11,600 --> 00:18:16,220
there's a reason not to replace the

00:18:14,150 --> 00:18:18,290
current you have down with if up down to

00:18:16,220 --> 00:18:21,500
oh there is we would love to actually

00:18:18,290 --> 00:18:22,880
and now the question is if there's a

00:18:21,500 --> 00:18:32,270
reason not to do it

00:18:22,880 --> 00:18:36,020
oh you mean yeah actually much less

00:18:32,270 --> 00:18:39,800
first light yeah my first light did

00:18:36,020 --> 00:18:46,400
contain some challenges it does we could

00:18:39,800 --> 00:18:48,860
not actually well perhaps if I comma if

00:18:46,400 --> 00:18:53,180
I can comment about the experience we've

00:18:48,860 --> 00:18:55,900
had with if I'm down in Ubuntu there has

00:18:53,180 --> 00:18:58,310
been a delta for for for a large part

00:18:55,900 --> 00:19:00,310
for and for a long period of time

00:18:58,310 --> 00:19:03,650
because of things like network manager

00:19:00,310 --> 00:19:06,230
the manage true function that you cigs

00:19:03,650 --> 00:19:08,690
is there and one of the issues is that

00:19:06,230 --> 00:19:12,530
if up/down is kind of hard to maintain

00:19:08,690 --> 00:19:15,320
if you're trying to do stuff and and

00:19:12,530 --> 00:19:18,440
trying to change it so at least I can't

00:19:15,320 --> 00:19:20,810
in a in a languages is it more easily

00:19:18,440 --> 00:19:23,570
approachable by people is a really great

00:19:20,810 --> 00:19:28,480
thing yeah that was that would have been

00:19:23,570 --> 00:19:30,800
my exact answer it's in literate its

00:19:28,480 --> 00:19:34,130
sorry the question is if there's a

00:19:30,800 --> 00:19:36,110
reason not to replace the old one with

00:19:34,130 --> 00:19:37,940
the new one so if there's something in

00:19:36,110 --> 00:19:40,730
the new one that you would say ok

00:19:37,940 --> 00:19:42,980
there's something that not yet ready or

00:19:40,730 --> 00:19:45,890
something else isn't my not word yeah

00:19:42,980 --> 00:19:48,350
like I said there two or three things

00:19:45,890 --> 00:19:50,360
that are not supported it only supports

00:19:48,350 --> 00:19:53,960
I on it and I need six today but if

00:19:50,360 --> 00:19:57,140
desktop environments need other families

00:19:53,960 --> 00:19:59,690
it could be added very easily but yeah

00:19:57,140 --> 00:20:03,740
those things if they're fixed I don't

00:19:59,690 --> 00:20:05,450
see any reason why it can't be maybe

00:20:03,740 --> 00:20:07,070
it's not exactly what you had in mind

00:20:05,450 --> 00:20:08,450
when asking the question or they had in

00:20:07,070 --> 00:20:10,160
mind when asking the question but I've

00:20:08,450 --> 00:20:13,040
heard a lot of talk that the systemd

00:20:10,160 --> 00:20:14,220
guys plan to have Network the you know

00:20:13,040 --> 00:20:16,169
issuing the

00:20:14,220 --> 00:20:18,179
no seriously issuing the syscalls

00:20:16,169 --> 00:20:20,250
directly for configuring interfaces

00:20:18,179 --> 00:20:22,919
rather than you know shelling out to all

00:20:20,250 --> 00:20:24,659
of these external commands like IP and

00:20:22,919 --> 00:20:27,389
the you know maybe it's better if we

00:20:24,659 --> 00:20:28,860
just burn down the entire AF down thing

00:20:27,389 --> 00:20:30,750
entirely and just move over to using

00:20:28,860 --> 00:20:32,610
that I wonder if you've been talking to

00:20:30,750 --> 00:20:35,490
the system D maintainer about this I

00:20:32,610 --> 00:20:38,009
have looked at system D right now it

00:20:35,490 --> 00:20:39,649
still has the same problems like I think

00:20:38,009 --> 00:20:43,470
you have to order your interfaces file

00:20:39,649 --> 00:20:45,419
but those can be fixed obviously but I

00:20:43,470 --> 00:20:46,710
wonder if you've talked to the system do

00:20:45,419 --> 00:20:48,690
you maintain who's in Debian about this

00:20:46,710 --> 00:20:50,549
because I think if your plan is to

00:20:48,690 --> 00:20:51,960
replace if' up/down with this and their

00:20:50,549 --> 00:20:54,210
plan is to replace i F up down with

00:20:51,960 --> 00:21:05,669
Network D there's going to be a problem

00:20:54,210 --> 00:21:07,590
coming sure we are talking to so I think

00:21:05,669 --> 00:21:09,090
I mean we clearly understand that this

00:21:07,590 --> 00:21:11,789
is a conversation that needs to happen

00:21:09,090 --> 00:21:14,639
and that's actually why we are here

00:21:11,789 --> 00:21:16,769
and part of the problem is that the

00:21:14,639 --> 00:21:19,259
simple use case in some sense of a

00:21:16,769 --> 00:21:20,820
system D style solution still for our

00:21:19,259 --> 00:21:22,559
use case is going to not become thick

00:21:20,820 --> 00:21:25,289
you still need a scriptable template

00:21:22,559 --> 00:21:27,570
able engine that will go on top so where

00:21:25,289 --> 00:21:29,429
the the breakdown happens and how the

00:21:27,570 --> 00:21:31,799
interfacing happens is something that we

00:21:29,429 --> 00:21:34,110
obviously are interested in making sure

00:21:31,799 --> 00:21:36,750
we arrive at a common answer to we have

00:21:34,110 --> 00:21:38,940
no I think it's fairly safe to say you

00:21:36,750 --> 00:21:41,460
have no vested interest in making this

00:21:38,940 --> 00:21:44,610
be the solution but clearly as was noted

00:21:41,460 --> 00:21:47,039
earlier I fob down was not cutting it

00:21:44,610 --> 00:21:48,659
for us and this is our answer if there's

00:21:47,039 --> 00:21:50,909
a better answer that's okay that's great

00:21:48,659 --> 00:21:52,799
but the configurability and the

00:21:50,909 --> 00:21:55,440
templating is incredibly important

00:21:52,799 --> 00:21:57,360
because I mean on a desktop you talk

00:21:55,440 --> 00:21:58,980
about four interfaces may be six VLANs

00:21:57,360 --> 00:22:01,710
it's an interesting answer or even on a

00:21:58,980 --> 00:22:04,470
server on a switch with 4,000 villa and

00:22:01,710 --> 00:22:06,240
16,000 VX lands and God knows how many

00:22:04,470 --> 00:22:07,919
ports coming in the next few generations

00:22:06,240 --> 00:22:09,990
it becomes unmaintainable and

00:22:07,919 --> 00:22:11,340
unmanageable and the thing that rupa

00:22:09,990 --> 00:22:14,370
keeps talking about the priority and

00:22:11,340 --> 00:22:16,529
ordering keeping that in in your head in

00:22:14,370 --> 00:22:18,240
five bay screenshots of five you know

00:22:16,529 --> 00:22:21,419
while it's scrolling by is impossible

00:22:18,240 --> 00:22:24,350
it's it's guaranteed breakage and that's

00:22:21,419 --> 00:22:24,350
a solution you have to have

00:22:26,960 --> 00:22:32,909
so a couple of things one one on the the

00:22:30,330 --> 00:22:34,710
system D networked these stuff my

00:22:32,909 --> 00:22:35,879
understanding that came up a little bit

00:22:34,710 --> 00:22:37,740
earlier in Debian developers been a

00:22:35,879 --> 00:22:39,269
little bit of discussion about that my

00:22:37,740 --> 00:22:41,490
understanding is is that that is that

00:22:39,269 --> 00:22:43,740
present in development stage that I

00:22:41,490 --> 00:22:45,090
would call science experiment there's

00:22:43,740 --> 00:22:47,700
something there or it can bring up a

00:22:45,090 --> 00:22:49,440
network but it's not it certainly

00:22:47,700 --> 00:22:51,899
doesn't do everything that the existing

00:22:49,440 --> 00:22:53,789
if' up/down does let alone all the

00:22:51,899 --> 00:22:55,470
things that you're in the enhanced one

00:22:53,789 --> 00:22:59,429
that you're talked about today would do

00:22:55,470 --> 00:23:02,249
I I think that that that the future of

00:22:59,429 --> 00:23:04,889
the system the network the stuff is

00:23:02,249 --> 00:23:06,450
probably more along the lines of if you

00:23:04,889 --> 00:23:08,460
have a system that it only is only going

00:23:06,450 --> 00:23:10,950
to have one static IP address with one

00:23:08,460 --> 00:23:13,619
static default route you might want to

00:23:10,950 --> 00:23:14,879
just use system D Network D because it's

00:23:13,619 --> 00:23:16,169
about the simplest thing you can

00:23:14,879 --> 00:23:18,240
possibly run and if you're in that

00:23:16,169 --> 00:23:21,090
situation why have any complexity but I

00:23:18,240 --> 00:23:23,129
don't think it has much desire to move

00:23:21,090 --> 00:23:24,629
higher in the stack I think most of the

00:23:23,129 --> 00:23:25,379
system D folks are using network manager

00:23:24,629 --> 00:23:27,240
to do anything that's particularly

00:23:25,379 --> 00:23:28,830
complicated so I don't know that they

00:23:27,240 --> 00:23:33,269
were targeting the stuff that you're

00:23:28,830 --> 00:23:35,070
targeting with if up down to and the

00:23:33,269 --> 00:23:36,809
other thing in terms of why not to

00:23:35,070 --> 00:23:40,740
replace the existing if F down with it

00:23:36,809 --> 00:23:42,749
up down to the most common complaint

00:23:40,740 --> 00:23:44,639
that I have heard on that front is the

00:23:42,749 --> 00:23:46,590
fact that it's written in Python and if

00:23:44,639 --> 00:23:48,330
up down as a required package so that

00:23:46,590 --> 00:23:50,100
would mean introducing at least some

00:23:48,330 --> 00:23:51,480
amount of Python into required which is

00:23:50,100 --> 00:23:53,879
something that a lot of people have

00:23:51,480 --> 00:23:55,499
objected to in the past there are folks

00:23:53,879 --> 00:23:57,360
who are already unhappy that we have

00:23:55,499 --> 00:23:58,919
Perl chip big chunks of Perl and

00:23:57,360 --> 00:24:01,799
required little own adding a second

00:23:58,919 --> 00:24:05,039
interpreted language Ubuntu already did

00:24:01,799 --> 00:24:06,299
that I think so they've already the

00:24:05,039 --> 00:24:11,940
other so they cross that bridge but

00:24:06,299 --> 00:24:14,309
Debian has not at least to date I have

00:24:11,940 --> 00:24:16,289
two questions actually um I would like

00:24:14,309 --> 00:24:18,090
to know first of all if the if there's

00:24:16,289 --> 00:24:22,080
going to be complete compatibility to

00:24:18,090 --> 00:24:24,059
all this the scripts the up and I've

00:24:22,080 --> 00:24:25,919
done hooks because we use them a lot in

00:24:24,059 --> 00:24:30,809
Debian packages and my second question

00:24:25,919 --> 00:24:33,929
is whether iff down to has any plans to

00:24:30,809 --> 00:24:36,029
support dynamic changes or because iff

00:24:33,929 --> 00:24:37,700
down doesn't do that but for instance if

00:24:36,029 --> 00:24:40,159
your DHCP gets a new

00:24:37,700 --> 00:24:43,639
you get a new address as happens here at

00:24:40,159 --> 00:24:45,349
PSU or if you go offline and so on

00:24:43,639 --> 00:24:47,690
whether you're planning to hook into the

00:24:45,349 --> 00:24:49,459
net link layer and react to it yeah I

00:24:47,690 --> 00:24:52,700
think today we already look into I have

00:24:49,459 --> 00:24:55,759
plug D and I've plugged II can do most

00:24:52,700 --> 00:25:00,019
of the dynamic configuration using IFM

00:24:55,759 --> 00:25:02,839
down and your first question on I have

00:25:00,019 --> 00:25:05,509
done compatibility yes I think we will

00:25:02,839 --> 00:25:08,739
be able to do full compatibility I think

00:25:05,509 --> 00:25:08,739
it's very important yes yes

00:25:13,159 --> 00:25:21,559
will this be packaged in time for the

00:25:15,109 --> 00:25:24,109
freeze the Jessie freeze well it today

00:25:21,559 --> 00:25:25,639
it's packaged as dreads and it's not in

00:25:24,109 --> 00:25:28,249
the Debian repo so first we'll have to

00:25:25,639 --> 00:25:29,809
get it into the Debian repo and yeah I

00:25:28,249 --> 00:25:33,489
think what he's saying is hurry up if

00:25:29,809 --> 00:25:33,489
you want it in okay

00:25:41,220 --> 00:25:48,980
I have a question more about how cumulus

00:25:44,900 --> 00:25:51,960
uses this our users of your switches

00:25:48,980 --> 00:25:55,470
logging in and running these tools by

00:25:51,960 --> 00:25:57,659
hand or there or if you designed this to

00:25:55,470 --> 00:26:00,659
allow there to be graphical or web-based

00:25:57,659 --> 00:26:02,760
front ends to do things

00:26:00,659 --> 00:26:05,460
they're usually logging in and running

00:26:02,760 --> 00:26:07,590
it views the CLI that there's also

00:26:05,460 --> 00:26:11,309
orchestration tools that we integrate

00:26:07,590 --> 00:26:14,909
with like chef so there are a bunch of

00:26:11,309 --> 00:26:16,620
cumulus guys people sitting there so

00:26:14,909 --> 00:26:18,780
they will definitely be able to yeah I

00:26:16,620 --> 00:26:19,860
mean they're a bunch of different you

00:26:18,780 --> 00:26:21,270
know if you have one or two switches

00:26:19,860 --> 00:26:23,669
you're probably configuring this by hand

00:26:21,270 --> 00:26:25,380
by ASUS Aging in and editing it if you

00:26:23,669 --> 00:26:26,640
have you know a thousand switches you're

00:26:25,380 --> 00:26:28,110
probably using either some homegrown

00:26:26,640 --> 00:26:29,850
orchestration tool or something like

00:26:28,110 --> 00:26:34,080
chef or puppet or ansible or you know

00:26:29,850 --> 00:26:36,390
what what have you yeah there's this

00:26:34,080 --> 00:26:38,159
yeah as far as I know there's no Weber

00:26:36,390 --> 00:26:39,690
graphical package I mean maybe webmin

00:26:38,159 --> 00:26:43,200
has a module but I'm not sure it's

00:26:39,690 --> 00:26:45,990
something that we I think that reaction

00:26:43,200 --> 00:26:48,000
says it all right there there's nothing

00:26:45,990 --> 00:26:49,559
stopping from anyone from writing and a

00:26:48,000 --> 00:26:51,150
lot of the tools you know have

00:26:49,559 --> 00:26:52,500
configurable out performance you know

00:26:51,150 --> 00:26:54,360
default steam and readable but you can

00:26:52,500 --> 00:26:56,190
get JSON formats or whatever so you're

00:26:54,360 --> 00:26:59,250
writing a tool like that natural with

00:26:56,190 --> 00:27:02,730
the plug-in so I think it's important I

00:26:59,250 --> 00:27:05,309
suspect if we are our current use case

00:27:02,730 --> 00:27:08,130
it's definitely in high volume lots of

00:27:05,309 --> 00:27:09,960
ports lots of instances if you are in

00:27:08,130 --> 00:27:11,669
the desktop or you're trying to make it

00:27:09,960 --> 00:27:14,309
simple for a laptop which is where we

00:27:11,669 --> 00:27:16,049
wanted to even get to they will need to

00:27:14,309 --> 00:27:23,669
be a graphical tool I think that that

00:27:16,049 --> 00:27:28,559
part we understand and just don't make

00:27:23,669 --> 00:27:30,120
it wet min it's just something wrong

00:27:28,559 --> 00:27:32,900
about a network accessible network

00:27:30,120 --> 00:27:32,900
configuration tool

00:27:36,010 --> 00:27:40,780
couple questions

00:27:37,700 --> 00:27:43,400
what's the contributor License Agreement

00:27:40,780 --> 00:27:46,930
what's the license and what's the

00:27:43,400 --> 00:27:50,240
community like for if up down to

00:27:46,930 --> 00:27:54,410
licensing questions to Nolan

00:27:50,240 --> 00:27:56,240
I've got a follow-up to there's no

00:27:54,410 --> 00:27:58,340
computer licensing agreement you you and

00:27:56,240 --> 00:28:01,040
your changes obviously will we're more

00:27:58,340 --> 00:28:05,210
than happy to accept patches under the

00:28:01,040 --> 00:28:10,190
hood we went GPL on gplv2

00:28:05,210 --> 00:28:12,380
what and the community right now is

00:28:10,190 --> 00:28:14,480
essentially you're looking at it but

00:28:12,380 --> 00:28:15,830
we're hoping to expand that hoping to

00:28:14,480 --> 00:28:22,340
get you know more people interested and

00:28:15,830 --> 00:28:25,550
involved and are you guys running this

00:28:22,340 --> 00:28:28,850
on anything but cumulus networks which

00:28:25,550 --> 00:28:31,040
gear running cumulus Linux so us like

00:28:28,850 --> 00:28:33,920
you talked about wanting this to replace

00:28:31,040 --> 00:28:39,860
if up-down have you tried servers if you

00:28:33,920 --> 00:28:41,230
do it on it on VMs which Johnson yeah I

00:28:39,860 --> 00:28:43,520
mean we running vm's and also our

00:28:41,230 --> 00:28:45,890
internal one of our internal service is

00:28:43,520 --> 00:28:48,920
actually running this is just a server

00:28:45,890 --> 00:28:50,330
so you know it's the overwhelming

00:28:48,920 --> 00:28:53,540
majority of it is currently used on

00:28:50,330 --> 00:28:57,610
switches but it has an I believe yeah

00:28:53,540 --> 00:29:01,100
I've made sure it works on Ubuntu 1404

00:28:57,610 --> 00:29:05,320
so it it works with nope no problem on

00:29:01,100 --> 00:29:05,320
that with under with four interfaces

00:29:08,810 --> 00:29:13,670
so I have another question from IRC it's

00:29:11,720 --> 00:29:15,560
people that are really eager to test

00:29:13,670 --> 00:29:17,870
this and they are asking if they can

00:29:15,560 --> 00:29:21,730
like install it while they are running

00:29:17,870 --> 00:29:24,880
and it will take over from the old one

00:29:21,730 --> 00:29:27,410
there are instructions on the github

00:29:24,880 --> 00:29:29,060
documentation page you have two it

00:29:27,410 --> 00:29:30,800
conflicts with the AIA for down package

00:29:29,060 --> 00:29:34,040
so you have to remove the IFF down

00:29:30,800 --> 00:29:36,560
package and then install this yeah but

00:29:34,040 --> 00:29:40,370
can this be done like live or it will

00:29:36,560 --> 00:29:49,280
Network me down in the middle I think

00:29:40,370 --> 00:29:51,500
you can do it live yeah that but urge if

00:29:49,280 --> 00:30:00,700
you courage if up down and the network's

00:29:51,500 --> 00:30:02,750
data so if you pick up from that well

00:30:00,700 --> 00:30:05,300
one thing I thought might be interesting

00:30:02,750 --> 00:30:07,550
to know you mentioned that the

00:30:05,300 --> 00:30:10,820
templating helps reducing the size of

00:30:07,550 --> 00:30:15,050
the actual interfaces farm but to what

00:30:10,820 --> 00:30:18,440
extent have you tested like let's say to

00:30:15,050 --> 00:30:21,260
what extent have you stress tested the

00:30:18,440 --> 00:30:23,840
tools say could you install a million

00:30:21,260 --> 00:30:25,400
interfaces and how what kind of time

00:30:23,840 --> 00:30:27,470
would it take to actually apply these

00:30:25,400 --> 00:30:37,760
this kind of configuration wouldn't see

00:30:27,470 --> 00:30:41,000
a million but maybe thousand it'll bring

00:30:37,760 --> 00:30:42,500
down talking about several thousand

00:30:41,000 --> 00:30:43,370
interfaces this will not be your slow

00:30:42,500 --> 00:30:46,250
point in the system

00:30:43,370 --> 00:30:48,800
yeah end up with sis control and sis

00:30:46,250 --> 00:30:50,060
config becoming the slow drag while it

00:30:48,800 --> 00:30:52,610
does it's linear walk through all

00:30:50,060 --> 00:30:55,400
interface names this will be done within

00:30:52,610 --> 00:30:59,440
like a tenth of the time yeah we've seen

00:30:55,400 --> 00:30:59,440
a lot of bottlenecks in other cases

00:31:03,030 --> 00:31:06,660
any other questions

00:31:09,010 --> 00:31:16,380
yeah yeah well I need some help getting

00:31:13,030 --> 00:31:17,830
this into Debian so I don't know whom to

00:31:16,380 --> 00:31:25,600
talk to

00:31:17,830 --> 00:31:34,390
maybe someones volunteers sure how can I

00:31:25,600 --> 00:31:35,950
talk to you Matthew well that's cool me

00:31:34,390 --> 00:31:37,270
you guys should flock together after the

00:31:35,950 --> 00:31:40,030
session okay

00:31:37,270 --> 00:31:44,230
it's not that hard all right any other

00:31:40,030 --> 00:31:45,340
questions I don't think that's the case

00:31:44,230 --> 00:31:52,450
so thank you very much for this

00:31:45,340 --> 00:31:53,799
presentation you have seen there that

00:31:52,450 --> 00:31:54,880
there were a lot of questions there's a

00:31:53,799 --> 00:31:56,260
lot of interest I can tell you from

00:31:54,880 --> 00:31:56,980
personal experience people want

00:31:56,260 --> 00:32:00,160
something else

00:31:56,980 --> 00:32:02,970
I'm so good luck join the community

00:32:00,160 --> 00:32:02,970

YouTube URL: https://www.youtube.com/watch?v=lDPPcDoShEI


