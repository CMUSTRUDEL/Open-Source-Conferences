Title: My PGP GPG key is RSA 2048-bit, but I put the private key on Gnuk Token
Publication date: 2017-12-02
Playlist: DebConf 14
Description: 
	by Yutaka Niibe

At: DebConf14
https://debconf14.debconf.org/
Room: Room 328
Scheduled start: 2014-08-28 10:00:00
Captions: 
	00:00:08,880 --> 00:00:11,969
[Music]

00:00:26,790 --> 00:00:36,420
[Music]

00:00:48,540 --> 00:00:53,939
[Music]

00:00:57,710 --> 00:01:00,810
[Applause]

00:01:03,670 --> 00:01:11,719
[Music]

00:01:18,040 --> 00:01:30,209
[Music]

00:01:35,530 --> 00:01:37,530
I

00:01:42,360 --> 00:01:45,469
[Music]

00:02:05,310 --> 00:02:12,999
[Music]

00:02:23,610 --> 00:02:26,759
[Music]

00:02:28,800 --> 00:02:31,889
[Music]

00:02:34,940 --> 00:02:49,430
[Music]

00:02:53,630 --> 00:03:10,720
[Music]

00:03:17,610 --> 00:03:20,699
[Music]

00:03:22,710 --> 00:03:28,149
[Music]

00:03:57,610 --> 00:04:06,919
[Music]

00:04:13,480 --> 00:04:23,019
[Music]

00:04:20,019 --> 00:04:23,019
my

00:04:26,120 --> 00:04:29,199
[Music]

00:04:35,060 --> 00:04:38,209
[Music]

00:04:40,390 --> 00:04:47,310
[Music]

00:04:52,980 --> 00:04:56,109
[Music]

00:05:00,210 --> 00:05:06,010
[Music]

00:05:11,660 --> 00:05:18,579
[Music]

00:05:22,950 --> 00:05:39,309
[Music]

00:05:42,540 --> 00:05:45,759
[Music]

00:05:49,200 --> 00:06:01,930
[Music]

00:06:04,450 --> 00:06:07,700
[Music]

00:06:12,160 --> 00:06:15,329
[Music]

00:06:18,040 --> 00:06:27,870
[Music]

00:06:43,510 --> 00:06:46,670
[Music]

00:06:53,140 --> 00:06:56,370
[Music]

00:06:58,599 --> 00:07:20,479
this way and its own already does it

00:07:10,819 --> 00:07:31,459
work thank you and but see it doesn't

00:07:20,479 --> 00:07:36,889
say a lot so and actually I had I had a

00:07:31,459 --> 00:07:40,869
campaign from November to this June and

00:07:36,889 --> 00:07:46,009
for selling land a number generator

00:07:40,869 --> 00:07:51,349
standalone device but it says 1.5 please

00:07:46,009 --> 00:07:55,939
Hans so I don't think but but but it's

00:07:51,349 --> 00:08:00,199
just a Japanese market so it I don't

00:07:55,939 --> 00:08:06,169
know but the next token sells better

00:08:00,199 --> 00:08:07,429
than random number generator yes and

00:08:06,169 --> 00:08:13,429
here's a history

00:08:07,429 --> 00:08:19,309
I got open open PGP third by the one in

00:08:13,429 --> 00:08:23,749
Germany hallelujah the conference name

00:08:19,309 --> 00:08:28,869
is Vinick stock and I found that it is

00:08:23,749 --> 00:08:32,389
very useful and it it is secure but

00:08:28,869 --> 00:08:35,300
unfortunately it requires proprietary

00:08:32,389 --> 00:08:38,479
code leaders or the implementation

00:08:35,300 --> 00:08:41,930
itself is proprietary yes

00:08:38,479 --> 00:08:44,800
so I wanted to change the situation and

00:08:41,930 --> 00:08:51,130
I tried using

00:08:44,800 --> 00:08:57,029
mega in 2008 but it it takes five

00:08:51,130 --> 00:09:02,769
seconds of ammo for resetting a 1k key

00:08:57,029 --> 00:09:08,399
yes I demonstrate the in India and in

00:09:02,769 --> 00:09:14,050
total in 2009 and I changed my

00:09:08,399 --> 00:09:21,750
controller to spare yahwah stm32 80 mega

00:09:14,050 --> 00:09:25,600
is just 8-bit computer and this is the

00:09:21,750 --> 00:09:26,519
stm32 is obvious 32-bit computer which

00:09:25,600 --> 00:09:32,589
runs out

00:09:26,519 --> 00:09:34,839
72 megahertz and it's okay for me at

00:09:32,589 --> 00:09:40,060
that time it will be by a two point

00:09:34,839 --> 00:09:43,930
second to sign and now it because I had

00:09:40,060 --> 00:09:48,930
and now it because it takes one point

00:09:43,930 --> 00:09:54,300
four second to sign for to kakie yes I

00:09:48,930 --> 00:09:58,510
demonstrated it for say gr cycle and

00:09:54,300 --> 00:10:01,240
then I join a goona PC development to

00:09:58,510 --> 00:10:03,279
improve the situation of the pieces at

00:10:01,240 --> 00:10:07,480
host site yes

00:10:03,279 --> 00:10:13,480
at that time we know PC only support to

00:10:07,480 --> 00:10:21,000
take food for card even though the card

00:10:13,480 --> 00:10:26,260
itself support for Katy and in 2011 I

00:10:21,000 --> 00:10:27,690
discovered good do-it-yourself way for

00:10:26,260 --> 00:10:35,920
Gunnar

00:10:27,690 --> 00:10:40,899
specifically the how to say abusing

00:10:35,920 --> 00:10:47,980
existing sheet we have a educational kit

00:10:40,899 --> 00:10:52,149
yes this one this one is educational kit

00:10:47,980 --> 00:10:57,500
for 8-bit computer this part we have a

00:10:52,149 --> 00:11:00,940
8-bit computer and this this body

00:10:57,500 --> 00:11:04,010
the prices of less than ten US dollars

00:11:00,940 --> 00:11:09,830
but fortunately we have a dongle here

00:11:04,010 --> 00:11:14,300
and it uses 32-bit computer yes it's

00:11:09,830 --> 00:11:16,760
somehow funny relationship yes this is

00:11:14,300 --> 00:11:20,540
mainboard computer with heartbeat

00:11:16,760 --> 00:11:26,330
8-bit capability but the dongle uses

00:11:20,540 --> 00:11:31,820
32-bit computer we we found this and we

00:11:26,330 --> 00:11:38,680
found the way to take advantage of this

00:11:31,820 --> 00:11:43,340
part yes yes so I wrote this document

00:11:38,680 --> 00:11:50,330
how to use this 32-bit computer for

00:11:43,340 --> 00:11:53,530
Gunnar in 2011 and I I promote this new

00:11:50,330 --> 00:12:00,020
way somehow to say this is a kind of hug

00:11:53,530 --> 00:12:02,690
against semiconductor chip vendor and if

00:12:00,020 --> 00:12:06,290
you have a Sun skill it's not it doesn't

00:12:02,690 --> 00:12:10,850
require experience skill if you have

00:12:06,290 --> 00:12:13,490
some basic skill of electronics I really

00:12:10,850 --> 00:12:18,140
recommend this way to produce your own

00:12:13,490 --> 00:12:18,890
green oak token and basically it's it's

00:12:18,140 --> 00:12:23,890
simple

00:12:18,890 --> 00:12:33,290
here they use USB cable and cut it off

00:12:23,890 --> 00:12:38,320
and then using this board and make it

00:12:33,290 --> 00:12:44,680
small and connect the cable that's all

00:12:38,320 --> 00:12:50,350
and and actually here is a

00:12:44,680 --> 00:12:50,350
implementation yes

00:12:52,170 --> 00:13:00,519
so since 2011 I determined my friend

00:12:57,490 --> 00:13:09,820
this way of putting their own private

00:13:00,519 --> 00:13:13,899
key open Pacific II but many other usual

00:13:09,820 --> 00:13:16,110
normal people complain it's too haughty

00:13:13,899 --> 00:13:19,089
show her

00:13:16,110 --> 00:13:27,180
it's against semiconductor vendor

00:13:19,089 --> 00:13:30,970
perhaps somehow so I I design my own

00:13:27,180 --> 00:13:38,040
Hardware difference implementation in

00:13:30,970 --> 00:13:45,430
2000 in it was in summer in 2000 2011

00:13:38,040 --> 00:13:47,800
yes and still yeah I the I claim that

00:13:45,430 --> 00:13:53,050
here we have a free design

00:13:47,800 --> 00:13:57,329
please use this PCB design to build your

00:13:53,050 --> 00:14:02,319
own talk but people still complain

00:13:57,329 --> 00:14:07,240
you'll see that it is impossible for us

00:14:02,319 --> 00:14:10,389
to manufacture the the group token even

00:14:07,240 --> 00:14:16,389
if the hardware design is free we had a

00:14:10,389 --> 00:14:20,290
design so I had I asked manufacturing in

00:14:16,389 --> 00:14:24,880
the Chinese factory to manufacture I

00:14:20,290 --> 00:14:31,529
mean in production many mass production

00:14:24,880 --> 00:14:36,790
in 2012 at that time I expected the

00:14:31,529 --> 00:14:42,160
people who complain should buy my

00:14:36,790 --> 00:14:48,279
product but it turns out the people who

00:14:42,160 --> 00:14:50,330
complain is basically complains I figure

00:14:48,279 --> 00:14:55,260
out

00:14:50,330 --> 00:15:00,350
yes so now we have a freeze of the

00:14:55,260 --> 00:15:03,540
implementation for token cryptographic

00:15:00,350 --> 00:15:08,030
computation as well as we have a free

00:15:03,540 --> 00:15:12,570
design for difference implementation and

00:15:08,030 --> 00:15:16,380
then at that time we had we had no good

00:15:12,570 --> 00:15:18,990
to the random number generator so at

00:15:16,380 --> 00:15:22,880
that time goo Knox didn't have didn't

00:15:18,990 --> 00:15:27,600
have a feature of key generation

00:15:22,880 --> 00:15:30,950
bye-bye the device itself we we also we

00:15:27,600 --> 00:15:35,460
always have to put our key from

00:15:30,950 --> 00:15:41,040
generated on our PC and we register we

00:15:35,460 --> 00:15:45,930
upload our key into the device that that

00:15:41,040 --> 00:15:49,590
was a way fortunately obviously doesn't

00:15:45,930 --> 00:15:57,660
require any enthalpy for when we sign

00:15:49,590 --> 00:16:03,350
the key yes but I have to run 2012

00:15:57,660 --> 00:16:07,980
i I I I was trying to implement ECC

00:16:03,350 --> 00:16:12,870
ECDSA for better security

00:16:07,980 --> 00:16:16,080
but ECDSA requires some enthalpy even

00:16:12,870 --> 00:16:22,460
for signing not only regeneration but

00:16:16,080 --> 00:16:29,150
only for signing thank you and so I

00:16:22,460 --> 00:16:31,950
implement noisy noisy is a

00:16:29,150 --> 00:16:37,520
implementation of truth and a number

00:16:31,950 --> 00:16:41,880
generator and I had a campaign in Japan

00:16:37,520 --> 00:16:45,290
for the beta into the P yes that's a

00:16:41,880 --> 00:16:52,870
history and

00:16:45,290 --> 00:16:56,660
let me explain the GU nog more sometimes

00:16:52,870 --> 00:17:00,380
people expect one time password token

00:16:56,660 --> 00:17:03,110
when we say token a cryptographic token

00:17:00,380 --> 00:17:08,480
but it's not one time password token but

00:17:03,110 --> 00:17:11,540
talking for authenticity and it is yes I

00:17:08,480 --> 00:17:14,720
this is my statement it's by free

00:17:11,540 --> 00:17:18,620
software it's for free software and it's

00:17:14,720 --> 00:17:22,370
of free software you know itself is free

00:17:18,620 --> 00:17:25,040
software and we don't require its depth

00:17:22,370 --> 00:17:32,990
its developers no proprietary software

00:17:25,040 --> 00:17:35,210
is we don't require we require no

00:17:32,990 --> 00:17:40,580
properties of the earth such that at the

00:17:35,210 --> 00:17:46,640
workforce development environment and in

00:17:40,580 --> 00:17:50,600
version 1.0 we use gb always ret folder

00:17:46,640 --> 00:17:56,720
for thread library and the polis as well

00:17:50,600 --> 00:18:01,130
for AES and RSA and we used shut to

00:17:56,720 --> 00:18:05,480
implementation by the Youngblood one and

00:18:01,130 --> 00:18:10,580
in one point one I use my own sled right

00:18:05,480 --> 00:18:21,430
lovely and I wrote the implementation of

00:18:10,580 --> 00:18:26,390
VD 255 19 and carb 255 19 yes

00:18:21,430 --> 00:18:31,450
let me introduce noise II noisy is the

00:18:26,390 --> 00:18:35,870
name of a set of low teens for true oMG

00:18:31,450 --> 00:18:39,320
it is used in you know and and as well

00:18:35,870 --> 00:18:44,080
as I use noisy for noisy standalone

00:18:39,320 --> 00:18:48,560
device it's written in C and it's for

00:18:44,080 --> 00:18:53,020
stm32 f103 only specifically but perhaps

00:18:48,560 --> 00:18:55,860
it could be it could it could no other

00:18:53,020 --> 00:19:02,520
stm32 process Michael

00:18:55,860 --> 00:19:03,360
close and it uses out of eighty

00:19:02,520 --> 00:19:06,929
Khambatta

00:19:03,360 --> 00:19:10,950
as a source of enthalpy if you have a

00:19:06,929 --> 00:19:16,309
some experience using ad converter the

00:19:10,950 --> 00:19:20,910
the LSB has always unstable least

00:19:16,309 --> 00:19:25,110
significant bit of LD combative protease

00:19:20,910 --> 00:19:28,770
always unstable so it is considered it

00:19:25,110 --> 00:19:33,620
we can take some enthalpy from energy

00:19:28,770 --> 00:19:36,350
converter and we use built-in

00:19:33,620 --> 00:19:39,480
temperature sensor and built-in voltage

00:19:36,350 --> 00:19:44,360
difference and unconnected analog inputs

00:19:39,480 --> 00:19:50,179
as analog source of analog inputs yes

00:19:44,360 --> 00:19:57,210
putting those analog values together

00:19:50,179 --> 00:20:02,880
into conditioning components of sha-256

00:19:57,210 --> 00:20:07,220
we generate random number sequence yes

00:20:02,880 --> 00:20:14,419
and here is the difference sometimes

00:20:07,220 --> 00:20:18,450
people don't like this organization but

00:20:14,419 --> 00:20:22,169
the document itself is very good yes

00:20:18,450 --> 00:20:25,799
usually we have we used to have a good

00:20:22,169 --> 00:20:31,620
document but German standard German in

00:20:25,799 --> 00:20:35,010
information technology standard agency

00:20:31,620 --> 00:20:39,660
was something like that but speaking

00:20:35,010 --> 00:20:43,280
about a true alien G the the German

00:20:39,660 --> 00:20:48,150
standard is very difficult to implement

00:20:43,280 --> 00:20:53,669
for into such a small computer they

00:20:48,150 --> 00:20:59,760
require higher standard basically the

00:20:53,669 --> 00:21:07,110
they requires examining the bit bit by

00:20:59,760 --> 00:21:08,580
bit the the how to say the examining and

00:21:07,110 --> 00:21:13,950
evaluate

00:21:08,580 --> 00:21:19,490
the London number sequences heavily and

00:21:13,950 --> 00:21:23,400
it requires more CPU power yes so

00:21:19,490 --> 00:21:26,130
generating would be easy easier than

00:21:23,400 --> 00:21:28,670
examining the random number sequences

00:21:26,130 --> 00:21:32,990
and the German standards is very

00:21:28,670 --> 00:21:37,230
difficult to implement to onto the

00:21:32,990 --> 00:21:41,990
smaller device on the other hand this

00:21:37,230 --> 00:21:47,750
this standard it's its status is just

00:21:41,990 --> 00:21:53,310
draft but it doesn't require much

00:21:47,750 --> 00:21:58,640
testing in long time testing for so it

00:21:53,310 --> 00:22:01,980
is okay it is easily it is in practice

00:21:58,640 --> 00:22:04,260
easily implemented in on to the smaller

00:22:01,980 --> 00:22:10,560
device yes

00:22:04,260 --> 00:22:16,610
and generally I tested generated

00:22:10,560 --> 00:22:23,400
sequences on PC using the daily hada or

00:22:16,610 --> 00:22:27,450
traditional STS test file and we have a

00:22:23,400 --> 00:22:28,860
test to use that one and and another one

00:22:27,450 --> 00:22:33,390
at sauce falls

00:22:28,860 --> 00:22:39,740
name it plots lon the last one is not

00:22:33,390 --> 00:22:39,740
that popular but this one is a very good

00:22:40,580 --> 00:22:52,590
testing suite test suite yes and no a

00:22:48,210 --> 00:22:56,640
standalone device just use CDC

00:22:52,590 --> 00:23:00,630
I mean communication device class so the

00:22:56,640 --> 00:23:06,150
it's plain bad string yes

00:23:00,630 --> 00:23:10,170
so no no special driver is require using

00:23:06,150 --> 00:23:15,630
using noisy standard device yes under

00:23:10,170 --> 00:23:20,110
wiki by changing the tty deciphering we

00:23:15,630 --> 00:23:26,650
can select love ADC data

00:23:20,110 --> 00:23:31,660
after she started second filter sha-256

00:23:26,650 --> 00:23:33,340
filter we can select it's not like a

00:23:31,660 --> 00:23:36,850
fire under you spongy the other I

00:23:33,340 --> 00:23:38,679
suppose it's the myelination I want to

00:23:36,850 --> 00:23:45,340
demonstrate some huh yes I've already

00:23:38,679 --> 00:23:49,750
demonstrated do DIY i/o every Mikey yes

00:23:45,340 --> 00:24:02,620
this is a bomb I use laid a couple of it

00:23:49,750 --> 00:24:07,419
later so it's a kind of collage yes yes

00:24:02,620 --> 00:24:10,630
but I I I'm afraid that it's against the

00:24:07,419 --> 00:24:17,140
code of conduct or something is it okay

00:24:10,630 --> 00:24:21,070
to say yeah yeah yeah I'm afraid that

00:24:17,140 --> 00:24:23,500
the university has a some cold this

00:24:21,070 --> 00:24:32,470
conference is not for commercial

00:24:23,500 --> 00:24:39,580
activities is that okay aha just between

00:24:32,470 --> 00:24:46,120
individual that's okay okay I have I

00:24:39,580 --> 00:24:50,200
have some thirty thirty five thirty

00:24:46,120 --> 00:24:53,280
thirty five investor and actually we

00:24:50,200 --> 00:24:57,429
have a to the noisy standard device

00:24:53,280 --> 00:25:01,390
noisy standalone device and goonrock

00:24:57,429 --> 00:25:06,809
token yes but here we have a issue I

00:25:01,390 --> 00:25:12,419
have to explain that GPL by John 3

00:25:06,809 --> 00:25:17,650
requires the when you distribute code

00:25:12,419 --> 00:25:23,220
binary code say I have to distribute the

00:25:17,650 --> 00:25:27,160
GPL version three itself together so the

00:25:23,220 --> 00:25:32,410
yes so actually that if you have a

00:25:27,160 --> 00:25:37,950
computer you can try this one aye-aye

00:25:32,410 --> 00:25:43,240
I put GTL story together with noisy and

00:25:37,950 --> 00:25:46,930
when you insert that one the standard

00:25:43,240 --> 00:25:53,670
mass storage device pops up and it

00:25:46,930 --> 00:25:57,310
includes GPL version 3 to confirm after

00:25:53,670 --> 00:26:00,690
after that then you can use noisy

00:25:57,310 --> 00:26:04,890
standalone device so it's somehow

00:26:00,690 --> 00:26:08,620
complicated and it is introduced after

00:26:04,890 --> 00:26:12,400
noisy and I have to say that GU Knox

00:26:08,620 --> 00:26:16,810
token doesn't have that feature so I

00:26:12,400 --> 00:26:19,930
need to comply GPL version 3 I need to

00:26:16,810 --> 00:26:21,790
output cheaper version 3 in Petra and I

00:26:19,930 --> 00:26:24,340
have to give you

00:26:21,790 --> 00:26:28,090
jebel version 3 together with goon

00:26:24,340 --> 00:26:35,590
October when I sell that's that's some

00:26:28,090 --> 00:26:38,890
hard for the practice yes so that's a so

00:26:35,590 --> 00:26:45,730
I have 2x I I should explain another

00:26:38,890 --> 00:26:50,410
time that it's in transparent to and the

00:26:45,730 --> 00:26:54,250
ice left:0 are in three-way one is their

00:26:50,410 --> 00:26:57,820
their board and another is the devil in

00:26:54,250 --> 00:27:02,320
the transparent tube and the other one

00:26:57,820 --> 00:27:05,950
is a with enclosure but it is open so

00:27:02,320 --> 00:27:06,430
then it's transparent and open that's my

00:27:05,950 --> 00:27:18,990
point

00:27:06,430 --> 00:27:24,630
yes yes and I should demonstrate online

00:27:18,990 --> 00:27:24,630
yes where is my my laser

00:27:25,680 --> 00:27:52,650
yes my laser yes I don't say this is my

00:27:29,160 --> 00:27:57,590
key this is my listen I just put my

00:27:52,650 --> 00:27:57,590
laser into this computer

00:28:01,160 --> 00:28:07,549
[Music]

00:28:02,940 --> 00:28:14,450
and here is the output of card status

00:28:07,549 --> 00:28:23,489
and it's only to Katie and here is my

00:28:14,450 --> 00:28:31,009
fingerprint yes this is the card number

00:28:23,489 --> 00:28:36,029
of card number is defined by isil's

00:28:31,009 --> 00:28:40,729
standard and the this number is for our

00:28:36,029 --> 00:28:50,659
organization FS IJ so I asked my um but

00:28:40,729 --> 00:28:57,450
3 F 5 1 7 it looks like f s I and J yes

00:28:50,659 --> 00:29:04,349
similar and then I'm using this this

00:28:57,450 --> 00:29:09,809
token for SSH access to so actually the

00:29:04,349 --> 00:29:12,419
I I'm using this Potter books and it

00:29:09,809 --> 00:29:20,609
takes one point four second to sign I

00:29:12,419 --> 00:29:24,450
input my my pass place and it takes one

00:29:20,609 --> 00:29:26,669
point four second and I I can access the

00:29:24,450 --> 00:29:33,239
SSH our Saba

00:29:26,669 --> 00:29:38,479
by SSH so see it it is acceptable it's

00:29:33,239 --> 00:29:43,800
not so it doesn't take so long time yes

00:29:38,479 --> 00:29:46,910
so the signing is similar see

00:29:43,800 --> 00:29:46,910
[Music]

00:29:55,540 --> 00:30:09,810
I made this yesterday yes let's let's

00:30:07,540 --> 00:30:09,810
try

00:30:11,770 --> 00:30:27,340
yes sign it again no no yes it takes

00:30:22,870 --> 00:30:32,080
about one point four second yes so it I

00:30:27,340 --> 00:30:38,530
think that it is okay to use yes but it

00:30:32,080 --> 00:30:41,679
is only using RSA to Katie yes and I

00:30:38,530 --> 00:30:57,130
also demonstrate the noisy standard

00:30:41,679 --> 00:31:02,920
device yes yes in the I tried I measure

00:30:57,130 --> 00:31:06,490
the voltage not for for first up but

00:31:02,920 --> 00:31:10,809
adjuster I mean if I measure the time

00:31:06,490 --> 00:31:14,140
for using debugger for the loading only

00:31:10,809 --> 00:31:19,140
unless a computation lasting only and it

00:31:14,140 --> 00:31:19,140
takes more than five second what yes

00:31:19,570 --> 00:31:27,100
for me it's it's not my option perhaps I

00:31:24,640 --> 00:31:32,380
for signing it would it would be okay

00:31:27,100 --> 00:31:35,800
but for using SSH access it's not my

00:31:32,380 --> 00:31:44,800
option five second considered too long

00:31:35,800 --> 00:31:50,550
for me yes so let me show you the noisy

00:31:44,800 --> 00:31:50,550
standard device standard alone device

00:31:50,790 --> 00:32:05,040
then okay yes how many three three

00:32:02,090 --> 00:32:08,280
the question the question was how many

00:32:05,040 --> 00:32:12,770
keys can you put on the card that it is

00:32:08,280 --> 00:32:17,640
open PGP card compatible open PGP card

00:32:12,770 --> 00:32:20,070
203 T's the primary key key for

00:32:17,640 --> 00:32:23,700
decryption and the key for

00:32:20,070 --> 00:32:32,040
authentication so I we we can put three

00:32:23,700 --> 00:32:33,630
private key onto this card yes so the to

00:32:32,040 --> 00:32:36,240
that that might make it difficult to do

00:32:33,630 --> 00:32:38,340
key rotation mm-hmm in particular if you

00:32:36,240 --> 00:32:41,100
wanted to have a second encryption key

00:32:38,340 --> 00:32:44,220
to use as you were filling out your open

00:32:41,100 --> 00:32:47,880
you still wanna go too deep yes that's

00:32:44,220 --> 00:32:51,180
very good question that yes we we can

00:32:47,880 --> 00:32:59,790
you people sometimes use such apparatus

00:32:51,180 --> 00:33:03,120
for four keys on PC but open PGP has its

00:32:59,790 --> 00:33:08,730
the scenario of open Pacific cod is

00:33:03,120 --> 00:33:12,410
limited to just three T's so you can

00:33:08,730 --> 00:33:17,160
change you can change the encryption key

00:33:12,410 --> 00:33:21,750
on the the three key resisted on the

00:33:17,160 --> 00:33:27,650
card can be changed a one by one but

00:33:21,750 --> 00:33:30,960
only three key can be possible to

00:33:27,650 --> 00:33:34,740
restore okay yes is there any thought

00:33:30,960 --> 00:33:38,490
about changing that um in theory in

00:33:34,740 --> 00:33:42,090
theory it isn't it isn't that hard to

00:33:38,490 --> 00:33:46,620
change the capability as a say

00:33:42,090 --> 00:33:48,990
supporting watches is basically not that

00:33:46,620 --> 00:33:51,810
hard in in terms of renewal

00:33:48,990 --> 00:33:54,360
implementation but we need to change the

00:33:51,810 --> 00:33:58,140
specification of the open P open PGP

00:33:54,360 --> 00:34:01,680
card and we need to somehow standardize

00:33:58,140 --> 00:34:04,620
the way to handle keys on the open PGP

00:34:01,680 --> 00:34:06,690
card okay and with with the discussion

00:34:04,620 --> 00:34:09,600
for that take place on glue PG devel

00:34:06,690 --> 00:34:12,780
know where where is the standardization

00:34:09,600 --> 00:34:14,300
discussion happened between me and Van

00:34:12,780 --> 00:34:19,730
Gogh and

00:34:14,300 --> 00:34:23,780
akima okay this discuss and our now our

00:34:19,730 --> 00:34:29,140
consensus hood is that the it would be

00:34:23,780 --> 00:34:34,700
better to use GPG agent protocol itself

00:34:29,140 --> 00:34:41,990
directory by US v the country we we used

00:34:34,700 --> 00:34:45,650
the the hard protocol yes but it would

00:34:41,990 --> 00:34:49,940
be better to just implement GPG agent

00:34:45,650 --> 00:34:52,490
protocol directly by USB yes that's our

00:34:49,940 --> 00:34:54,350
consensus now I like that again that

00:34:52,490 --> 00:34:57,260
would let you to put arbitrary numbers

00:34:54,350 --> 00:35:00,800
of keys on a car yes yes okay it is it

00:34:57,260 --> 00:35:04,460
will be transparent the hardware also

00:35:00,800 --> 00:35:08,720
had the specific hardware or the storage

00:35:04,460 --> 00:35:15,080
own piece general purpose PC it it will

00:35:08,720 --> 00:35:23,630
be transparent yes thanks yes a question

00:35:15,080 --> 00:35:26,060
I support four thousand yes because

00:35:23,630 --> 00:35:30,830
right now for example I have a crypto

00:35:26,060 --> 00:35:36,020
stick from from Germany it's ok but

00:35:30,830 --> 00:35:40,750
right now is out of stock I wonder if

00:35:36,020 --> 00:35:45,800
there are others alternative to device

00:35:40,750 --> 00:35:49,190
the there there are some these days we

00:35:45,800 --> 00:35:52,430
have a multiple implementation for open

00:35:49,190 --> 00:35:55,580
PGP card I mean that the original

00:35:52,430 --> 00:36:01,120
implementation was done by our team by

00:35:55,580 --> 00:36:04,820
the card and also the the German guy

00:36:01,120 --> 00:36:07,460
produced crypto stick yes and but

00:36:04,820 --> 00:36:11,690
unfortunately it's out of stock but

00:36:07,460 --> 00:36:14,810
using Kryptos stick you can also

00:36:11,690 --> 00:36:17,150
although the code implementation itself

00:36:14,810 --> 00:36:18,640
is proprietary the cuddly the

00:36:17,150 --> 00:36:21,800
implementation is free software

00:36:18,640 --> 00:36:25,670
implementation yes and these days you

00:36:21,800 --> 00:36:27,230
Vicki you know the company you Vicki you

00:36:25,670 --> 00:36:29,859
Vicki has a

00:36:27,230 --> 00:36:35,119
implementation of the open PGP pod

00:36:29,859 --> 00:36:38,300
protocol they have a device for such a

00:36:35,119 --> 00:36:41,600
crypto computation by their by their

00:36:38,300 --> 00:36:47,119
product and there are there are another

00:36:41,600 --> 00:36:49,940
implementation by Java there are some

00:36:47,119 --> 00:36:53,570
activity of the around the smart card

00:36:49,940 --> 00:36:57,440
using Java as a language to implement

00:36:53,570 --> 00:37:00,320
those features and it would be possible

00:36:57,440 --> 00:37:05,300
to use some Java Java code

00:37:00,320 --> 00:37:09,410
implementation to use open PGP code

00:37:05,300 --> 00:37:13,430
protocol yes but my recommendation is a

00:37:09,410 --> 00:37:16,010
green ogre is stable enough now the

00:37:13,430 --> 00:37:20,350
other I think if I remember correctly

00:37:16,010 --> 00:37:25,070
last month or two months ago the we

00:37:20,350 --> 00:37:28,430
introduced someone send Sanders parts to

00:37:25,070 --> 00:37:33,710
support another HSM hardware security

00:37:28,430 --> 00:37:36,080
module for open PGP so perhaps the

00:37:33,710 --> 00:37:39,320
newest version of the new PG support

00:37:36,080 --> 00:37:43,910
another another hardware security module

00:37:39,320 --> 00:37:47,440
so we now have a multiple selections and

00:37:43,910 --> 00:37:51,400
the some of them support for keiki

00:37:47,440 --> 00:37:51,400
luckily yes

00:37:54,430 --> 00:38:13,680
and now I I open the file manager and

00:38:03,210 --> 00:38:27,400
here we have a GPA in inside the device

00:38:13,680 --> 00:38:41,289
and the dummy and the well when I am

00:38:27,400 --> 00:38:45,640
bound this this storage now the CDC is

00:38:41,289 --> 00:38:48,670
available here the noisy to our energy

00:38:45,640 --> 00:38:52,809
the manufacture is free software

00:38:48,670 --> 00:38:54,670
initiative with Japan and we can access

00:38:52,809 --> 00:38:58,660
DT by m0

00:38:54,670 --> 00:39:01,990
for random number stream and here is a

00:38:58,660 --> 00:39:14,250
point our organization FS IJ has a

00:39:01,990 --> 00:39:14,250
vendor ID yes for USD yeah and because

00:39:20,930 --> 00:39:34,380
because I have a configuration here for

00:39:26,040 --> 00:39:39,300
you dev the script automatically learns

00:39:34,380 --> 00:39:47,090
when I insert noisy standard own device

00:39:39,300 --> 00:39:54,960
and here is a script to invoke RNG demon

00:39:47,090 --> 00:39:58,500
for this device now so now this computer

00:39:54,960 --> 00:40:05,630
has enough enthalpy from the device and

00:39:58,500 --> 00:40:09,780
the RNG demo watches the its quality yes

00:40:05,630 --> 00:40:17,119
so it's just a plug-and-play device for

00:40:09,780 --> 00:40:21,390
better enthalpy yes but I'm afraid that

00:40:17,119 --> 00:40:23,369
people usually don't don't buy such a

00:40:21,390 --> 00:40:32,390
gadget yes

00:40:23,369 --> 00:40:37,650
people prefer cryptographic device the

00:40:32,390 --> 00:40:42,680
entropy device it seems yes but you guys

00:40:37,650 --> 00:40:47,609
hackers loves entropy device perhaps

00:40:42,680 --> 00:40:52,220
well other questions or suggestions or

00:40:47,609 --> 00:40:52,220
comments yes please

00:40:53,820 --> 00:41:04,460
the question GPG good know is 2k only

00:41:00,990 --> 00:41:08,490
support okay yes

00:41:04,460 --> 00:41:10,760
does the connect contain the random

00:41:08,490 --> 00:41:15,560
number generator yes the same time yes

00:41:10,760 --> 00:41:20,940
so you can buy it separately or with no

00:41:15,560 --> 00:41:27,390
the it is possible to use random number

00:41:20,940 --> 00:41:30,600
generator on on the goon work but we we

00:41:27,390 --> 00:41:34,410
need some special driver

00:41:30,600 --> 00:41:40,200
the protocol is based on the basically

00:41:34,410 --> 00:41:42,960
that the cuddly the protocol so the

00:41:40,200 --> 00:41:46,800
noisy standalone device would be easier

00:41:42,960 --> 00:41:52,010
because it's just a story move by London

00:41:46,800 --> 00:41:55,890
bite yes so if you well if you write the

00:41:52,010 --> 00:42:01,980
some driver then you can take advantage

00:41:55,890 --> 00:42:04,380
of the the green herb Vinod and because

00:42:01,980 --> 00:42:07,800
Agron okay included a random number

00:42:04,380 --> 00:42:10,320
generator you can use it yes so I don't

00:42:07,800 --> 00:42:12,270
know enough about the actual USB

00:42:10,320 --> 00:42:14,580
protocol would not be possible to

00:42:12,270 --> 00:42:19,830
present two different endpoint devices

00:42:14,580 --> 00:42:24,240
from the Canuck one of which it is

00:42:19,830 --> 00:42:30,090
possible to have two different device on

00:42:24,240 --> 00:42:31,620
the same same channel but in theory it

00:42:30,090 --> 00:42:37,770
is possible but the current

00:42:31,620 --> 00:42:43,260
implementation doesn't do that okay but

00:42:37,770 --> 00:42:46,410
it it requires more it it is possible in

00:42:43,260 --> 00:42:49,230
theory but in practice we require we

00:42:46,410 --> 00:42:51,720
need to change the implementation sort

00:42:49,230 --> 00:42:57,030
and the implementation will be more

00:42:51,720 --> 00:42:59,760
complex and I my idea is that basically

00:42:57,030 --> 00:43:03,900
I want to keep the code as simple as

00:42:59,760 --> 00:43:05,220
possible yes that's fair for an

00:43:03,900 --> 00:43:08,330
important device like a cryptographic

00:43:05,220 --> 00:43:08,330
token I can see that yes

00:43:13,300 --> 00:43:20,320
the elliptic curve implementation would

00:43:18,160 --> 00:43:24,790
require different hardware from the

00:43:20,320 --> 00:43:28,530
existing nuke support multiple hardware

00:43:24,790 --> 00:43:32,740
else at the start I didn't have my own

00:43:28,530 --> 00:43:36,400
differencing hardware so I I started by

00:43:32,740 --> 00:43:41,200
the general-purpose evaluation board

00:43:36,400 --> 00:43:47,710
then I found the some hotties way of the

00:43:41,200 --> 00:43:50,350
using educational board and I then after

00:43:47,710 --> 00:43:53,800
that I built my own reference

00:43:50,350 --> 00:43:57,840
implementations so it is rather it is

00:43:53,800 --> 00:44:02,700
easy to port goon hook to other

00:43:57,840 --> 00:44:05,200
evaluation board over your own board yes

00:44:02,700 --> 00:44:13,030
Renuka doesn't require your special

00:44:05,200 --> 00:44:16,990
things yes and the noisy also requires

00:44:13,030 --> 00:44:21,760
special hardware it uses just ad

00:44:16,990 --> 00:44:23,350
converter and under our entropy sauce is

00:44:21,760 --> 00:44:31,080
not a diode

00:44:23,350 --> 00:44:38,260
just a ADC so it's simple to port yes

00:44:31,080 --> 00:44:43,810
so I think that it's very much fun to to

00:44:38,260 --> 00:44:46,000
use the cord itself oh yes so I'm

00:44:43,810 --> 00:44:51,040
running out of time so please feel free

00:44:46,000 --> 00:44:53,460
to discuss later in person thank you

00:44:51,040 --> 00:44:53,460
very much

00:44:57,930 --> 00:45:03,570

YouTube URL: https://www.youtube.com/watch?v=fQ20GPKreus


