Title: DSA Update
Publication date: 2017-12-06
Playlist: DebConf 17
Description: 
	by Luca Filipozzi

At: DebConf17
https://debconf17.debconf.org/
Room: Bo
Scheduled start: 2017-08-08 12:00:00
Captions: 
	00:00:04,460 --> 00:00:11,110
welcome everyone this is the DSA ball

00:00:07,520 --> 00:00:13,549
for dev comp 2017

00:00:11,110 --> 00:00:16,039
thank you for joining us I think we're

00:00:13,549 --> 00:00:21,859
being streamed and recorded so please

00:00:16,039 --> 00:00:23,960
forgive any nervousness on our part this

00:00:21,859 --> 00:00:26,179
is the agenda we'll cover in the first

00:00:23,960 --> 00:00:27,380
10-15 minutes however quickly I can get

00:00:26,179 --> 00:00:31,730
through it I'd like to leave some time

00:00:27,380 --> 00:00:33,050
for discussion and questions so before I

00:00:31,730 --> 00:00:35,090
introduce my colleagues which I'll do in

00:00:33,050 --> 00:00:37,700
the second slide let me remind you about

00:00:35,090 --> 00:00:40,160
what we do primarily we maintain

00:00:37,700 --> 00:00:42,140
Debian's infrastructure the most

00:00:40,160 --> 00:00:44,120
important part of which is the Identity

00:00:42,140 --> 00:00:47,180
and Access Management piece based on

00:00:44,120 --> 00:00:48,920
LDAP but of course we maintain the

00:00:47,180 --> 00:00:51,350
machines at various data centers that

00:00:48,920 --> 00:00:55,610
have been either offered to us or that

00:00:51,350 --> 00:00:59,140
we bought or and primarily hosted by for

00:00:55,610 --> 00:01:02,390
free by universities and organizations

00:00:59,140 --> 00:01:04,040
we manage a bunch of services we call

00:01:02,390 --> 00:01:06,850
them the core services authentication

00:01:04,040 --> 00:01:09,260
authorization mail static websites that

00:01:06,850 --> 00:01:10,940
the replication of the static websites

00:01:09,260 --> 00:01:12,770
and the hosting of them generally

00:01:10,940 --> 00:01:16,250
service providers offer the content

00:01:12,770 --> 00:01:18,920
security mirrors DNS content delivery

00:01:16,250 --> 00:01:21,230
networks and take your pick of other TLA

00:01:18,920 --> 00:01:24,860
stick them in there we probably support

00:01:21,230 --> 00:01:26,840
that we coordinate with hosting

00:01:24,860 --> 00:01:28,640
providers for example my employer you'd

00:01:26,840 --> 00:01:31,130
be seeing it hosts a bunch of stuff for

00:01:28,640 --> 00:01:33,170
Debian and with service providers for

00:01:31,130 --> 00:01:36,229
example fastly for content delivery but

00:01:33,170 --> 00:01:37,940
there's a long list and Laura and I are

00:01:36,229 --> 00:01:40,090
working on the partners team to try to

00:01:37,940 --> 00:01:42,500
clean up the partners page to reflect

00:01:40,090 --> 00:01:45,380
all the people that have provided either

00:01:42,500 --> 00:01:47,630
equipment or services so once that's

00:01:45,380 --> 00:01:50,150
nicely revamped you can go and take a

00:01:47,630 --> 00:01:51,560
look at all the myriad of people that

00:01:50,150 --> 00:01:54,530
support Debian in the production of our

00:01:51,560 --> 00:01:57,110
distribution and finally we work with

00:01:54,530 --> 00:02:02,900
you to develop your services and host

00:01:57,110 --> 00:02:05,240
them on Debian org infrastructure we're

00:02:02,900 --> 00:02:12,049
nine people currently five of which are

00:02:05,240 --> 00:02:14,630
here upfront so they have aurelion we

00:02:12,049 --> 00:02:19,370
have Julian we have Martin

00:02:14,630 --> 00:02:21,560
and we have two left Paul is here don't

00:02:19,370 --> 00:02:25,940
see him in the room and Hector is here

00:02:21,560 --> 00:02:27,320
as well so seek us out if you don't if

00:02:25,940 --> 00:02:28,490
we don't answer your questions here you

00:02:27,320 --> 00:02:34,550
want to seek us out privately please

00:02:28,490 --> 00:02:36,020
find us we're happy to chat so same

00:02:34,550 --> 00:02:37,760
format as last year I'm going to do a

00:02:36,020 --> 00:02:39,800
little bit of looking back and a little

00:02:37,760 --> 00:02:44,420
bit of moving forward but we have some

00:02:39,800 --> 00:02:46,840
new bold ideas that we'd like to suggest

00:02:44,420 --> 00:02:50,630
here there's Hector

00:02:46,840 --> 00:02:54,770
so we've matured a content delivery

00:02:50,630 --> 00:02:57,500
network backed apt repository at Deb

00:02:54,770 --> 00:02:59,390
Debian org many of you might be using it

00:02:57,500 --> 00:03:01,460
there have been some complaints about

00:02:59,390 --> 00:03:04,040
certain timeouts or what-have-you were

00:03:01,460 --> 00:03:05,660
looking at improving that but we believe

00:03:04,040 --> 00:03:11,450
that it's ready for general availability

00:03:05,660 --> 00:03:13,100
and we're working to fix the last little

00:03:11,450 --> 00:03:17,150
issues with it in terms of hash which

00:03:13,100 --> 00:03:19,580
mouses mismatches and what-have-you so a

00:03:17,150 --> 00:03:21,730
little bit more about that later we've

00:03:19,580 --> 00:03:24,440
started some experimental anycast

00:03:21,730 --> 00:03:26,780
available apt repositories and that

00:03:24,440 --> 00:03:29,660
might be something to look at next year

00:03:26,780 --> 00:03:32,090
so we'll we'll make it available soon

00:03:29,660 --> 00:03:33,650
for experimental purposes it's not going

00:03:32,090 --> 00:03:35,930
to be for general availability we want

00:03:33,650 --> 00:03:37,880
to compare and contrast how that works

00:03:35,930 --> 00:03:39,860
with the CDN back things it might in

00:03:37,880 --> 00:03:44,209
fact be the front end for the CDN back

00:03:39,860 --> 00:03:45,770
things but what we can say as Debian is

00:03:44,209 --> 00:03:48,940
getting its feet wet with you know

00:03:45,770 --> 00:03:51,470
getting IP allocations and becoming a

00:03:48,940 --> 00:03:55,340
BGP route announcer through some of our

00:03:51,470 --> 00:03:57,920
providers mergers and acquisitions we

00:03:55,340 --> 00:03:59,630
started two years ago on the debconf

00:03:57,920 --> 00:04:03,170
infrastructure and it's been very slow

00:03:59,630 --> 00:04:04,490
going since so we need to decide what

00:04:03,170 --> 00:04:06,800
we're up to here are we proceeding or

00:04:04,490 --> 00:04:08,180
not but the stalled state isn't very

00:04:06,800 --> 00:04:12,170
good so a little bit more about that

00:04:08,180 --> 00:04:14,360
later and finally looking back we had a

00:04:12,170 --> 00:04:17,330
major year yet last year in the year

00:04:14,360 --> 00:04:20,510
before on infrastructure refresh HPE has

00:04:17,330 --> 00:04:21,950
been enormous ly generous to Debian they

00:04:20,510 --> 00:04:23,720
sponsored the conference of course but

00:04:21,950 --> 00:04:26,390
they also sponsored significant hardware

00:04:23,720 --> 00:04:28,030
upgrades in the last two years so in

00:04:26,390 --> 00:04:31,160
this previous year

00:04:28,030 --> 00:04:33,770
Norma's investment at ubc in terms of an

00:04:31,160 --> 00:04:37,070
enclosure and some blades and Fibre

00:04:33,770 --> 00:04:41,270
Channel SAN storage it is now the most

00:04:37,070 --> 00:04:44,060
performant Gennady cluster in DSA

00:04:41,270 --> 00:04:46,430
operation and it's time to make a bite

00:04:44,060 --> 00:04:49,280
mark look the same it may or may not to

00:04:46,430 --> 00:04:51,200
be an enclosure in blades it might be

00:04:49,280 --> 00:04:55,250
discrete machines part of that has to do

00:04:51,200 --> 00:04:58,220
with finding partners like HPE that

00:04:55,250 --> 00:05:00,320
could provide that equipment or spending

00:04:58,220 --> 00:05:02,690
Debian money so if we're back to

00:05:00,320 --> 00:05:06,230
spending Debian cash we're looking at

00:05:02,690 --> 00:05:08,360
around 50 200 grand a year in investment

00:05:06,230 --> 00:05:09,950
to keep up with all of the machines that

00:05:08,360 --> 00:05:14,360
we have in various data centers and

00:05:09,950 --> 00:05:17,540
refreshing them on a five-year cycle HP

00:05:14,360 --> 00:05:20,390
donated the machine at bite-mark for the

00:05:17,540 --> 00:05:23,210
CD image build so that's a very powerful

00:05:20,390 --> 00:05:27,310
machine they also generated some smaller

00:05:23,210 --> 00:05:31,010
machines for Sanger and finally LeaseWeb

00:05:27,310 --> 00:05:32,990
which is a dedicated hosting and virtual

00:05:31,010 --> 00:05:35,180
machine provider has been offering

00:05:32,990 --> 00:05:36,950
dedicated host had dedicated machines to

00:05:35,180 --> 00:05:39,770
us for some number of years for the

00:05:36,950 --> 00:05:42,530
secondary snapshot cluster and we just

00:05:39,770 --> 00:05:52,370
recently expanded that as well so thank

00:05:42,530 --> 00:05:55,570
you to both of them moving forward we

00:05:52,370 --> 00:05:59,780
really do need to either complete or

00:05:55,570 --> 00:06:01,670
abandon this debconf transition services

00:05:59,780 --> 00:06:04,370
to DSA operation because it's in some

00:06:01,670 --> 00:06:06,020
weird middle state we get called on for

00:06:04,370 --> 00:06:07,400
some things we get called on and then we

00:06:06,020 --> 00:06:09,170
have no sorry that's not part of us

00:06:07,400 --> 00:06:11,810
anymore please go back to the DEFCON fin

00:06:09,170 --> 00:06:14,030
14 so we're either doing it or don't so

00:06:11,810 --> 00:06:16,760
our request to them will be we need to

00:06:14,030 --> 00:06:19,370
finish this or or come to some kind of

00:06:16,760 --> 00:06:22,210
conclusion this this drawing out of this

00:06:19,370 --> 00:06:24,860
processes is proving to be painful and

00:06:22,210 --> 00:06:26,360
we're very very keen on working with the

00:06:24,860 --> 00:06:28,580
ally of team they probably want to

00:06:26,360 --> 00:06:30,740
rename themselves at some point once

00:06:28,580 --> 00:06:33,220
they've determined what they want source

00:06:30,740 --> 00:06:37,070
code management and full requests and

00:06:33,220 --> 00:06:38,330
commentary and issue tracking continuous

00:06:37,070 --> 00:06:41,150
integration conducive development

00:06:38,330 --> 00:06:42,110
working on a single workflow we don't

00:06:41,150 --> 00:06:46,010
want to support

00:06:42,110 --> 00:06:48,020
a ton of different types of paths we're

00:06:46,010 --> 00:06:49,550
not the ones to decide that so that's

00:06:48,020 --> 00:06:54,290
our recommendation but we're keen on

00:06:49,550 --> 00:06:56,180
helping to operate it the next year

00:06:54,290 --> 00:06:59,980
standard infrastructure refresh pieces

00:06:56,180 --> 00:06:59,980
Paul is hiding there at the corner

00:07:00,130 --> 00:07:06,020
standard infrastructure pieces bite mark

00:07:02,990 --> 00:07:08,300
refresh rotary marked upon so that's a

00:07:06,020 --> 00:07:11,720
significant investment if we're going to

00:07:08,300 --> 00:07:15,680
make it smell the same as UBC so if you

00:07:11,720 --> 00:07:17,390
work for a hardware manufacturer and are

00:07:15,680 --> 00:07:20,420
interested in supporting us either with

00:07:17,390 --> 00:07:22,220
gratis equipment or preferential pricing

00:07:20,420 --> 00:07:25,220
for equipment I'd love to hear from you

00:07:22,220 --> 00:07:28,430
the further that we can extend Debian's

00:07:25,220 --> 00:07:30,320
donated money either by not spending it

00:07:28,430 --> 00:07:32,540
or extending it with very preferential

00:07:30,320 --> 00:07:33,680
pricing it the better off the donor is

00:07:32,540 --> 00:07:37,610
the better off we are

00:07:33,680 --> 00:07:40,370
and hopefully the hardware provider gets

00:07:37,610 --> 00:07:46,460
decent exposure from that investment in

00:07:40,370 --> 00:07:48,410
us there is a desire to maybe have

00:07:46,460 --> 00:07:49,190
another CD image building machine but

00:07:48,410 --> 00:07:51,200
this time in a North American

00:07:49,190 --> 00:07:53,090
jurisdiction and having another f2p

00:07:51,200 --> 00:07:56,060
master machine but this time in an EU

00:07:53,090 --> 00:07:59,690
jurisdiction as DSA we're always very

00:07:56,060 --> 00:08:01,370
keen on having independence whether or

00:07:59,690 --> 00:08:03,080
not that's from the hosting provider so

00:08:01,370 --> 00:08:06,500
not the same hosting provider for the

00:08:03,080 --> 00:08:08,510
same service or independence in from a

00:08:06,500 --> 00:08:10,640
legal jurisdiction perspective so hosted

00:08:08,510 --> 00:08:12,530
encountered in the United States for one

00:08:10,640 --> 00:08:14,540
side and then hosted in England and

00:08:12,530 --> 00:08:17,360
Germany for another side so that if any

00:08:14,540 --> 00:08:20,660
one of these jurisdictions or partners

00:08:17,360 --> 00:08:22,820
goes away from you know they've their

00:08:20,660 --> 00:08:24,860
ability to support us changes the laws

00:08:22,820 --> 00:08:27,890
change what have you our service doesn't

00:08:24,860 --> 00:08:30,680
stop we can maintain it from the other

00:08:27,890 --> 00:08:33,340
jurisdiction while we find a third place

00:08:30,680 --> 00:08:36,200
to host that particular set of equipment

00:08:33,340 --> 00:08:39,560
so while we are not hurting for ftp

00:08:36,200 --> 00:08:42,890
master because i was refreshed two years

00:08:39,560 --> 00:08:44,330
ago with HPE donated equipment and we're

00:08:42,890 --> 00:08:47,420
not hurting for CD image because that

00:08:44,330 --> 00:08:49,520
was replaced a year ago with HPE donated

00:08:47,420 --> 00:08:52,100
equipment we only have one of each and

00:08:49,520 --> 00:08:53,780
yes we could maybe use one for the other

00:08:52,100 --> 00:08:56,710
but we'd like to maybe just double them

00:08:53,780 --> 00:08:56,710
up so that's on the list

00:08:56,890 --> 00:09:01,400
if you have been following if you've

00:08:59,720 --> 00:09:04,820
been privy to any of my emails around

00:09:01,400 --> 00:09:07,880
the sparc64 port that is proving to be a

00:09:04,820 --> 00:09:12,350
one year long conversation and has not

00:09:07,880 --> 00:09:13,820
yielded yet any equipment so if you work

00:09:12,350 --> 00:09:15,650
for the organization in question and

00:09:13,820 --> 00:09:17,120
would like to help out please let me

00:09:15,650 --> 00:09:20,360
know because right now from my

00:09:17,120 --> 00:09:23,120
perspective it's it's stalled they

00:09:20,360 --> 00:09:27,410
express interest in in providing that

00:09:23,120 --> 00:09:29,930
equipment but it's it's not coming MIPS

00:09:27,410 --> 00:09:32,510
you've probably heard Apple's decision

00:09:29,930 --> 00:09:35,330
and the impact that that's had on image

00:09:32,510 --> 00:09:37,610
tech we are in a holding pattern to

00:09:35,330 --> 00:09:41,090
understand what that might mean for MIPS

00:09:37,610 --> 00:09:45,590
so while we have a good stock of MIPS

00:09:41,090 --> 00:09:48,590
equipment today there remains a bit of a

00:09:45,590 --> 00:09:51,050
question mark and we have a good stock

00:09:48,590 --> 00:09:53,990
of arm stuff we have probably too much

00:09:51,050 --> 00:09:55,100
arm in too many places and we're

00:09:53,990 --> 00:09:58,100
thinking about trying to consolidate

00:09:55,100 --> 00:10:00,560
that into some fewer places especially

00:09:58,100 --> 00:10:03,160
as particular versions of the ARM chips

00:10:00,560 --> 00:10:05,570
that go away and finally because

00:10:03,160 --> 00:10:07,670
primarily me because they didn't get

00:10:05,570 --> 00:10:10,400
done on the outer band management piece

00:10:07,670 --> 00:10:12,940
we're working with a particular supplier

00:10:10,400 --> 00:10:16,490
who has expressed interest in providing

00:10:12,940 --> 00:10:18,110
remote console equipment to us we just

00:10:16,490 --> 00:10:20,330
have to complete the list give them the

00:10:18,110 --> 00:10:22,550
shipping addresses and really engage

00:10:20,330 --> 00:10:24,620
with them but from our perspective it'd

00:10:22,550 --> 00:10:26,360
be nice to have a consistent way of of

00:10:24,620 --> 00:10:31,390
doing out-of-band management with all of

00:10:26,360 --> 00:10:31,390
our equipment okay

00:10:32,529 --> 00:10:36,669
yeah I'm merely interested what do you

00:10:34,689 --> 00:10:39,129
mean by out-of-band management I mean

00:10:36,669 --> 00:10:40,779
like most devices laughs have something

00:10:39,129 --> 00:10:42,879
like a Nilo or some kind management

00:10:40,779 --> 00:10:44,469
module so you might not need to put

00:10:42,879 --> 00:10:46,599
something in front of it but I'm just

00:10:44,469 --> 00:10:50,769
interested what's so what's the issue

00:10:46,599 --> 00:10:52,479
here so we're we have a modern piece of

00:10:50,769 --> 00:10:55,809
server data center quality equipment

00:10:52,479 --> 00:10:59,409
with an ILO or or something then we want

00:10:55,809 --> 00:11:01,419
at least an Open VPN independent box

00:10:59,409 --> 00:11:03,699
that allows us access to the management

00:11:01,419 --> 00:11:06,879
network and where we have things like

00:11:03,699 --> 00:11:10,029
MIPS or arm that don't have good

00:11:06,879 --> 00:11:13,589
out-of-band management features then we

00:11:10,029 --> 00:11:15,759
want remotely access to power bars and

00:11:13,589 --> 00:11:19,919
console servers so that we can get to

00:11:15,759 --> 00:11:19,919
the serial port okay makes sense thanks

00:11:20,279 --> 00:11:24,969
okay so that's our typical set of slides

00:11:23,289 --> 00:11:25,539
that we've done for the last couple of

00:11:24,969 --> 00:11:27,249
years

00:11:25,539 --> 00:11:28,989
we'd like to venture into a couple of

00:11:27,249 --> 00:11:31,599
new topics I'll go through each of these

00:11:28,989 --> 00:11:33,189
slides quickly because I'd like to then

00:11:31,599 --> 00:11:35,289
open the floor up for conversation

00:11:33,189 --> 00:11:40,079
rather than pausing on any individual

00:11:35,289 --> 00:11:42,549
one I started several years ago

00:11:40,079 --> 00:11:46,509
replacement for user derailed app called

00:11:42,549 --> 00:11:48,309
UD it was intended to really not mess

00:11:46,509 --> 00:11:50,079
around at all with our current ldap

00:11:48,309 --> 00:11:53,379
schema but it turns out our ldap schema

00:11:50,079 --> 00:11:56,379
is pretty unique to Debian it comes from

00:11:53,379 --> 00:11:58,839
an era when we pushed everything from a

00:11:56,379 --> 00:12:00,999
particular master server to all of our

00:11:58,839 --> 00:12:02,409
machines we didn't have centralized LDAP

00:12:00,999 --> 00:12:04,809
over the internet because the internet

00:12:02,409 --> 00:12:06,639
was flaky so you know you make changes

00:12:04,809 --> 00:12:08,169
to LDAP you push it all out to the

00:12:06,639 --> 00:12:10,269
individual machines individual machines

00:12:08,169 --> 00:12:13,839
can operate in the standalone fashion

00:12:10,269 --> 00:12:15,879
but it's heavily customized it's time to

00:12:13,839 --> 00:12:17,499
maybe be bolder than what I was trying

00:12:15,879 --> 00:12:19,089
to do with UD and actually think about

00:12:17,499 --> 00:12:21,249
what we want to do with our schema

00:12:19,089 --> 00:12:25,269
because it's holding us back we can't

00:12:21,249 --> 00:12:28,649
actually use standard packages some of

00:12:25,269 --> 00:12:31,749
which are packaged for Debian standard

00:12:28,649 --> 00:12:34,929
software offerings to layer on top of

00:12:31,749 --> 00:12:36,489
LDAP to expose web-enabled management of

00:12:34,929 --> 00:12:39,189
objects or what have you because it's

00:12:36,489 --> 00:12:41,499
customized more importantly there's a

00:12:39,189 --> 00:12:43,359
bunch of stuff like sam'l or OID C

00:12:41,499 --> 00:12:45,510
identity providers that we might want to

00:12:43,359 --> 00:12:47,790
layer on top of LDAP and again we're

00:12:45,510 --> 00:12:49,680
customized perhaps not to the point

00:12:47,790 --> 00:12:51,470
where we might break a saml or no ADC

00:12:49,680 --> 00:12:54,270
but this is an opportunity to rethink

00:12:51,470 --> 00:12:56,400
identity access management because were

00:12:54,270 --> 00:12:59,340
interested in offering these things that

00:12:56,400 --> 00:13:02,100
we don't have yet sam'l and OID C for

00:12:59,340 --> 00:13:04,140
other service providers so we have the

00:13:02,100 --> 00:13:05,520
web SSO which is certificate based but

00:13:04,140 --> 00:13:07,800
there aren't you know you have to do

00:13:05,520 --> 00:13:09,510
custom work on the on the service

00:13:07,800 --> 00:13:12,120
provider side in order to leverage that

00:13:09,510 --> 00:13:16,620
whereas many service providers do offer

00:13:12,120 --> 00:13:17,850
sam'l or OID C integrations okay so

00:13:16,620 --> 00:13:19,530
that's some of our thinking around at

00:13:17,850 --> 00:13:22,410
Indian access management cloud

00:13:19,530 --> 00:13:24,240
infrastructure we've always been of the

00:13:22,410 --> 00:13:26,790
belief that debian infrastructure needs

00:13:24,240 --> 00:13:28,350
to be on Debian controlled machines in

00:13:26,790 --> 00:13:30,900
friendly data centers that's typically

00:13:28,350 --> 00:13:33,780
been you know donated hardware from HP

00:13:30,900 --> 00:13:37,050
or other vendors hosted at universities

00:13:33,780 --> 00:13:39,300
for example my own but and that was

00:13:37,050 --> 00:13:41,610
useful when the universities had the

00:13:39,300 --> 00:13:44,580
best pipes and that's not true anymore

00:13:41,610 --> 00:13:46,740
also we have many offerings from cloud

00:13:44,580 --> 00:13:49,770
providers the big ones the big three but

00:13:46,740 --> 00:13:51,150
also smaller ones OVH and others have

00:13:49,770 --> 00:13:54,230
come forward from time to time offering

00:13:51,150 --> 00:13:57,030
VMs and we've typically said no because

00:13:54,230 --> 00:13:59,910
if the hypervisor is insecure the VM is

00:13:57,030 --> 00:14:01,680
insecure but with a combination of

00:13:59,910 --> 00:14:03,090
either reproducible builds getting to

00:14:01,680 --> 00:14:04,320
the point where they can not just

00:14:03,090 --> 00:14:06,510
reproducible builds that are

00:14:04,320 --> 00:14:09,930
back-to-back but being able to reinstate

00:14:06,510 --> 00:14:11,790
the entire build environment days later

00:14:09,930 --> 00:14:13,560
on an entirely different cloud if you

00:14:11,790 --> 00:14:15,570
can reproduce packages identically in

00:14:13,560 --> 00:14:17,490
different in different VMs on different

00:14:15,570 --> 00:14:19,500
clouds than they are the same package so

00:14:17,490 --> 00:14:22,800
do we really need to build them on our

00:14:19,500 --> 00:14:24,210
own machines now that's not a lot of our

00:14:22,800 --> 00:14:26,340
machines a lot of our machines are doing

00:14:24,210 --> 00:14:29,570
other services like bugs or

00:14:26,340 --> 00:14:34,500
what-have-you but maybe those could be

00:14:29,570 --> 00:14:35,820
VMs but more importantly we have we I in

00:14:34,500 --> 00:14:37,410
my opinion we have an identity problem

00:14:35,820 --> 00:14:39,930
and editing access management problem

00:14:37,410 --> 00:14:41,970
with with our cloud providers we have to

00:14:39,930 --> 00:14:45,030
go to individual people to ask for

00:14:41,970 --> 00:14:47,040
access which is fine but you know I work

00:14:45,030 --> 00:14:48,660
in a university where on-boarding and

00:14:47,040 --> 00:14:50,730
off-boarding of students every September

00:14:48,660 --> 00:14:53,060
is a major deal and everything gets

00:14:50,730 --> 00:14:54,930
automated because we don't want to leave

00:14:53,060 --> 00:14:55,980
somebody with privileges that they

00:14:54,930 --> 00:14:58,620
shouldn't have when they finish

00:14:55,980 --> 00:14:59,400
University and we're not great at that

00:14:58,620 --> 00:15:01,470
at the employee

00:14:59,400 --> 00:15:04,710
we're trying to improve so if I take

00:15:01,470 --> 00:15:08,130
that thinking to Debian I'd want to wire

00:15:04,710 --> 00:15:12,270
up these cloud providers with oh I DC or

00:15:08,130 --> 00:15:15,690
sam'l back to Debian's LDAP back-end so

00:15:12,270 --> 00:15:19,460
that way if somebody stops being a DD

00:15:15,690 --> 00:15:21,600
they retire or they go mi a we can

00:15:19,460 --> 00:15:22,980
remove them from the appropriate groups

00:15:21,600 --> 00:15:24,120
or we can lock their account leaving

00:15:22,980 --> 00:15:25,260
them in the right groups but their

00:15:24,120 --> 00:15:27,480
account isn't unlocked they can't

00:15:25,260 --> 00:15:30,270
authenticate and everything does single

00:15:27,480 --> 00:15:33,390
sign-on we're not proposing that we

00:15:30,270 --> 00:15:37,860
manage who can have access to the cloud

00:15:33,390 --> 00:15:40,920
services so we want to empower the cloud

00:15:37,860 --> 00:15:43,920
team to manage LDAP groups that then

00:15:40,920 --> 00:15:45,710
provide access to cloud services so I've

00:15:43,920 --> 00:15:48,480
done that at work I've done that with

00:15:45,710 --> 00:15:51,000
AWS I'm told that the same thing can be

00:15:48,480 --> 00:15:52,500
done with Google Cloud and Azure

00:15:51,000 --> 00:15:56,160
probably not with some of the smaller

00:15:52,500 --> 00:15:59,490
players but you know small steps okay

00:15:56,160 --> 00:16:03,450
and then the final big idea whoops the

00:15:59,490 --> 00:16:06,390
final big idea is service packages so if

00:16:03,450 --> 00:16:10,440
you've worked with us to to provide a

00:16:06,390 --> 00:16:12,720
service you might have had challenges

00:16:10,440 --> 00:16:14,190
you might have hopefully had a good

00:16:12,720 --> 00:16:16,290
experience but perhaps a poor experience

00:16:14,190 --> 00:16:18,960
but most importantly we don't have a way

00:16:16,290 --> 00:16:20,220
to onboard your service elegantly we

00:16:18,960 --> 00:16:22,560
don't have a test environment where you

00:16:20,220 --> 00:16:24,750
can set it up and start working on it

00:16:22,560 --> 00:16:26,910
and validate that it's working correctly

00:16:24,750 --> 00:16:29,040
then promoted to production and then

00:16:26,910 --> 00:16:31,590
when we are helping you operate it we

00:16:29,040 --> 00:16:33,840
operate the bottom half of it say when

00:16:31,590 --> 00:16:35,460
we want to upgrade machines from Jesse

00:16:33,840 --> 00:16:37,110
to stretch we have to go and revalidate

00:16:35,460 --> 00:16:39,300
that the service is functioning there

00:16:37,110 --> 00:16:40,500
typically aren't test Suites we don't

00:16:39,300 --> 00:16:42,690
have that test environment where you

00:16:40,500 --> 00:16:45,960
could go test it well maybe we just

00:16:42,690 --> 00:16:47,730
rethink the whole way we do this so some

00:16:45,960 --> 00:16:49,260
of this is thinking is from tall if and

00:16:47,730 --> 00:16:51,660
I'll let him speak to it more in depth

00:16:49,260 --> 00:16:53,400
during the QA but what if we switch to

00:16:51,660 --> 00:16:55,680
more of a containerized service so my

00:16:53,400 --> 00:16:57,270
first reaction to that is containers are

00:16:55,680 --> 00:16:59,250
horrible from a security perspective you

00:16:57,270 --> 00:17:02,430
have no idea what the container contains

00:16:59,250 --> 00:17:04,650
when you go and do a docker doctor

00:17:02,430 --> 00:17:06,720
whatever it is doctor get well we're not

00:17:04,650 --> 00:17:09,060
proposing that you build a container and

00:17:06,720 --> 00:17:10,410
we just simply run it we propose you you

00:17:09,060 --> 00:17:12,600
have to build a container anyways you

00:17:10,410 --> 00:17:13,650
have the container build script you

00:17:12,600 --> 00:17:16,260
provide the

00:17:13,650 --> 00:17:18,180
or build scripts to us and we rebuild

00:17:16,260 --> 00:17:20,250
the containers after we vet it and that

00:17:18,180 --> 00:17:22,230
gives us the freedom to rebuild those

00:17:20,250 --> 00:17:23,910
containers almost I will whenever there

00:17:22,230 --> 00:17:26,100
is a security update so we're running

00:17:23,910 --> 00:17:27,630
unstable there's a security update to

00:17:26,100 --> 00:17:29,310
Apache you've embedded a patch in your

00:17:27,630 --> 00:17:33,890
container well we can rebuild that

00:17:29,310 --> 00:17:36,720
container with the updated Apache

00:17:33,890 --> 00:17:38,040
finally requests and final thoughts so

00:17:36,720 --> 00:17:40,620
that we can open up the floor for the

00:17:38,040 --> 00:17:41,730
last 25 minutes to these three big ideas

00:17:40,620 --> 00:17:44,040
or anything else you want to talk about

00:17:41,730 --> 00:17:45,090
our request of the DI team is strongly

00:17:44,040 --> 00:17:49,280
consider please

00:17:45,090 --> 00:17:51,440
using Deb Debian org as the default

00:17:49,280 --> 00:17:54,750
offering may be at medium or low

00:17:51,440 --> 00:17:57,390
location specific mirrors we think we're

00:17:54,750 --> 00:17:59,550
ready for that I think we think that the

00:17:57,390 --> 00:18:04,440
user experience would be better for it

00:17:59,550 --> 00:18:07,980
as well the apt team please work with us

00:18:04,440 --> 00:18:09,900
around reporting errors so there are

00:18:07,980 --> 00:18:12,360
some errors and Tallis just made some

00:18:09,900 --> 00:18:16,080
changes this morning to timeouts at

00:18:12,360 --> 00:18:18,330
fastly with Debian org we want to solve

00:18:16,080 --> 00:18:20,970
it we need more data we need that data

00:18:18,330 --> 00:18:23,250
to be correlated so we can see in logs

00:18:20,970 --> 00:18:26,700
or pushes or what have you how these

00:18:23,250 --> 00:18:29,220
things work and maybe turn on some

00:18:26,700 --> 00:18:30,930
retries in apt so I think right now

00:18:29,220 --> 00:18:32,850
that's zero and it's possible to be set

00:18:30,930 --> 00:18:36,000
to something nonzero and that would be

00:18:32,850 --> 00:18:38,520
great and then finally to ourselves we

00:18:36,000 --> 00:18:40,050
might want to consider throwing CDN on

00:18:38,520 --> 00:18:44,340
top of the security mirrors security

00:18:40,050 --> 00:18:47,220
mirrors for when there's a kernel kernel

00:18:44,340 --> 00:18:49,530
release tend to get overloaded and you

00:18:47,220 --> 00:18:51,900
might want to consider CDN for that so

00:18:49,530 --> 00:18:54,390
you can contact us here I'll leave it on

00:18:51,900 --> 00:18:56,220
this slide but happy to talk to any of

00:18:54,390 --> 00:18:57,840
the other slides and I'll turn it over

00:18:56,220 --> 00:19:00,560
to you to ask my colleagues questions

00:18:57,840 --> 00:19:07,190
thank you

00:19:00,560 --> 00:19:07,190
[Applause]

00:19:10,470 --> 00:19:15,970
so the difference between the two mail

00:19:12,910 --> 00:19:20,500
addresses Debian 8 minute lists definite

00:19:15,970 --> 00:19:23,410
org is archived and goes to a broader

00:19:20,500 --> 00:19:26,080
audience than just the DSA members these

00:19:23,410 --> 00:19:27,880
typically are service providers not all

00:19:26,080 --> 00:19:31,150
service providers have signed up to that

00:19:27,880 --> 00:19:34,890
mailing list whereas DSA at Debian org

00:19:31,150 --> 00:19:38,200
is only the nine members of DSA if is

00:19:34,890 --> 00:19:43,300
privately archived but by individuals

00:19:38,200 --> 00:19:45,720
but not on also on master but not

00:19:43,300 --> 00:19:45,720
accessible

00:19:47,920 --> 00:19:53,950
my question is may be related to the

00:19:51,760 --> 00:19:56,050
cloud team I don't exactly know what the

00:19:53,950 --> 00:20:00,930
cloud team is if that's part of DSA or

00:19:56,050 --> 00:20:03,970
not but it will the okay it's not will

00:20:00,930 --> 00:20:06,520
DSA or the cloud team be running some

00:20:03,970 --> 00:20:10,050
sort of container registry for official

00:20:06,520 --> 00:20:12,010
containers at some point and if so what

00:20:10,050 --> 00:20:16,750
implementation is being discussed around

00:20:12,010 --> 00:20:19,390
that I don't really think we've

00:20:16,750 --> 00:20:21,520
discussed muster on that it's fairly

00:20:19,390 --> 00:20:24,610
obvious that if we go with the container

00:20:21,520 --> 00:20:27,010
service model then we will be running

00:20:24,610 --> 00:20:30,910
some sort of container registry at least

00:20:27,010 --> 00:20:33,490
for for Debian services whether that

00:20:30,910 --> 00:20:36,310
will be open to everybody or whether

00:20:33,490 --> 00:20:40,750
that will only be accessible to to be no

00:20:36,310 --> 00:20:42,430
machines I don't know yet but it's it's

00:20:40,750 --> 00:20:46,680
basically an idea we're throwing out

00:20:42,430 --> 00:20:49,210
there so far so it's it's one of those

00:20:46,680 --> 00:20:51,610
throw it out see if something somebody

00:20:49,210 --> 00:20:56,320
bites and then we can take from there if

00:20:51,610 --> 00:20:58,510
service service owners hate idea of

00:20:56,320 --> 00:21:01,090
running stuff in containers and running

00:20:58,510 --> 00:21:04,270
and doing it that way and prefer to

00:21:01,090 --> 00:21:06,250
current way then we're not going to to

00:21:04,270 --> 00:21:08,140
invests heavily in doing lots of

00:21:06,250 --> 00:21:10,000
infrastructure for that and I guess

00:21:08,140 --> 00:21:11,590
depending on the alias replacement it

00:21:10,000 --> 00:21:14,750
might have a built in container registry

00:21:11,590 --> 00:21:18,530
it was for example get lab

00:21:14,750 --> 00:21:21,830
yeah I I as far as I know the two

00:21:18,530 --> 00:21:25,940
current containers are gitlab and pager

00:21:21,830 --> 00:21:28,070
and I don't I think maybe get lab has it

00:21:25,940 --> 00:21:32,539
but I don't think Pedro has it yet lab

00:21:28,070 --> 00:21:37,460
does have it yeah so one of the things

00:21:32,539 --> 00:21:39,200
that we can do is if we define

00:21:37,460 --> 00:21:41,090
interfaces for its standard services

00:21:39,200 --> 00:21:42,860
that DSA provides we can provide Marc

00:21:41,090 --> 00:21:44,929
Testament test containers are provide

00:21:42,860 --> 00:21:46,370
Marc services so that you can stand up

00:21:44,929 --> 00:21:48,140
the containers on your laptop or what

00:21:46,370 --> 00:21:50,710
have you and have a reasonable chance of

00:21:48,140 --> 00:21:52,909
having that work in in our environment

00:21:50,710 --> 00:21:55,039
so that would mean that we would need

00:21:52,909 --> 00:21:56,929
some stack of containers that people can

00:21:55,039 --> 00:22:00,350
use that's a little bit different than

00:21:56,929 --> 00:22:01,880
containers available inside of AWS like

00:22:00,350 --> 00:22:03,500
we have Debian images inside of a load

00:22:01,880 --> 00:22:05,780
us which the cloud team are building

00:22:03,500 --> 00:22:07,610
there is a cloud sprint in the fall and

00:22:05,780 --> 00:22:10,630
that should probably be discussed by the

00:22:07,610 --> 00:22:10,630
people that attend that

00:22:18,550 --> 00:22:31,030
questions questions you mentioned sam'l

00:22:28,120 --> 00:22:33,610
yeah is induced you said you are

00:22:31,030 --> 00:22:36,280
prepared that does prepare means it's

00:22:33,610 --> 00:22:38,500
ready no or prepared is or you are

00:22:36,280 --> 00:22:40,990
preparing for to provide in the future

00:22:38,500 --> 00:22:43,150
no prepare means moving the team from oh

00:22:40,990 --> 00:22:45,190
my god I hate that idea too well okay

00:22:43,150 --> 00:22:49,000
maybe there are some packages we could

00:22:45,190 --> 00:22:50,679
deploy and and in fact it may not be

00:22:49,000 --> 00:22:52,120
sam'l I might just be open I D connect

00:22:50,679 --> 00:22:54,580
right from the get-go since most of

00:22:52,120 --> 00:22:57,820
these providers do both and sam'l you

00:22:54,580 --> 00:23:00,760
know sam'l typically means running a

00:22:57,820 --> 00:23:03,309
ship the ship IDP which means running a

00:23:00,760 --> 00:23:05,110
Java stack there are other things that

00:23:03,309 --> 00:23:06,400
we could run for open ID connect which

00:23:05,110 --> 00:23:07,390
wouldn't necessarily be a Java stack

00:23:06,400 --> 00:23:13,080
pardon me

00:23:07,390 --> 00:23:13,080
okay yeah there are there are others yes

00:23:23,179 --> 00:23:32,400
um I'm I'm curious to hear if we have

00:23:29,150 --> 00:23:35,130
metrics and information from the dub

00:23:32,400 --> 00:23:39,210
Debian not org backends in fact like

00:23:35,130 --> 00:23:40,919
fastly and CloudFront regarding hum and

00:23:39,210 --> 00:23:42,150
how much traffic they get and how it

00:23:40,919 --> 00:23:44,789
compares to the existing mirror

00:23:42,150 --> 00:23:46,799
infrastructure and I have a more

00:23:44,789 --> 00:23:52,080
annoying question which is I wonder if

00:23:46,799 --> 00:23:55,890
you as dissonance have a position on the

00:23:52,080 --> 00:23:58,320
Elliot debate regarding figure or good

00:23:55,890 --> 00:23:59,880
lab and I would understand if you didn't

00:23:58,320 --> 00:24:01,169
want to take position but I'm curious to

00:23:59,880 --> 00:24:06,690
hear what you individually think about

00:24:01,169 --> 00:24:10,140
that in terms of traffic for for fastly

00:24:06,690 --> 00:24:12,630
I haven't looked at the long term stats

00:24:10,140 --> 00:24:15,780
but last night it was at between one and

00:24:12,630 --> 00:24:17,570
four gigabits bet depending and doing

00:24:15,780 --> 00:24:21,150
about thousand to fifteen hundred

00:24:17,570 --> 00:24:23,190
requests a second so I mean it's it's

00:24:21,150 --> 00:24:27,659
not a ton of traffic but there's there's

00:24:23,190 --> 00:24:31,350
some traffic there and do we have stars

00:24:27,659 --> 00:24:33,150
from the mirror network we generally

00:24:31,350 --> 00:24:35,250
don't we do have some stats from

00:24:33,150 --> 00:24:37,530
security mirrors because we run them

00:24:35,250 --> 00:24:40,590
ourselves but in general we don't have

00:24:37,530 --> 00:24:42,780
the we don't run the the per country

00:24:40,590 --> 00:24:45,150
mirrors so we don't actually have stats

00:24:42,780 --> 00:24:46,919
for those except in some cases they will

00:24:45,150 --> 00:24:58,530
have public stats which we have access

00:24:46,919 --> 00:25:01,710
to personally I don't have any opinion

00:24:58,530 --> 00:25:03,960
on this I think that they both look

00:25:01,710 --> 00:25:08,400
interesting they have very strengths and

00:25:03,960 --> 00:25:09,990
weaknesses so I that said I think it's

00:25:08,400 --> 00:25:14,340
it's very good to see some of their

00:25:09,990 --> 00:25:17,039
engagements from from gitlab on opening

00:25:14,340 --> 00:25:18,960
more features and I think somebody

00:25:17,039 --> 00:25:23,610
mentioned that they were dropping the

00:25:18,960 --> 00:25:26,520
CLI CL a requirement as well so it's

00:25:23,610 --> 00:25:29,250
really good to see a company take the

00:25:26,520 --> 00:25:33,250
community seriously and and address

00:25:29,250 --> 00:25:35,500
concerns like that probably not unasked

00:25:33,250 --> 00:25:38,290
decides whether we take be one or the

00:25:35,500 --> 00:25:40,840
other software that's probably no that's

00:25:38,290 --> 00:25:43,030
on the person's than providing the

00:25:40,840 --> 00:25:45,160
service we provide the hardware and the

00:25:43,030 --> 00:25:48,700
operating system and they provide

00:25:45,160 --> 00:26:06,640
service to them Jesus our request is

00:25:48,700 --> 00:26:10,150
please not both so I'm inside the DP on

00:26:06,640 --> 00:26:14,250
a cloud team and I'm building so so

00:26:10,150 --> 00:26:18,130
called Clyde crowd image for vagrant and

00:26:14,250 --> 00:26:21,400
for many of the images we build we need

00:26:18,130 --> 00:26:26,440
to be root and we need to have access to

00:26:21,400 --> 00:26:28,990
a block device in dev so we're thinking

00:26:26,440 --> 00:26:33,010
of making these built-in virtual

00:26:28,990 --> 00:26:35,710
machines do we have to create a virtual

00:26:33,010 --> 00:26:40,780
machines ourselves or is that something

00:26:35,710 --> 00:26:42,610
where we should ask from you it depends

00:26:40,780 --> 00:26:43,900
where you're building the images are you

00:26:42,610 --> 00:26:45,700
building them in the con the cloud

00:26:43,900 --> 00:26:50,440
servers already provided by the cloud

00:26:45,700 --> 00:26:53,290
from the idea from the cloud team

00:26:50,440 --> 00:26:56,230
meeting was that we built them on the on

00:26:53,290 --> 00:27:00,160
CD on top machine County called CD image

00:26:56,230 --> 00:27:02,920
Debian art and the idea is that we

00:27:00,160 --> 00:27:06,670
provide VMware you build within built

00:27:02,920 --> 00:27:12,790
did we ever so ask me it currently do

00:27:06,670 --> 00:27:16,180
for CD image building we are the I think

00:27:12,790 --> 00:27:19,690
the VM there runs as a CD image user and

00:27:16,180 --> 00:27:24,280
then inside that we am the life image

00:27:19,690 --> 00:27:27,510
building is the CD team is empowered to

00:27:24,280 --> 00:27:31,150
create his own virtual machine when he

00:27:27,510 --> 00:27:33,340
okay and this is just to be clear to the

00:27:31,150 --> 00:27:35,200
community the reason we're doing this is

00:27:33,340 --> 00:27:37,420
because we want to build these images on

00:27:35,200 --> 00:27:39,880
Debian controlled Hardware not build

00:27:37,420 --> 00:27:42,360
them on the VMS provided by the cloud

00:27:39,880 --> 00:27:42,360
operators

00:27:43,480 --> 00:27:51,440
and that way we also have the ability to

00:27:48,130 --> 00:27:54,500
keep track on the images of the Debian

00:27:51,440 --> 00:27:57,980
project as official Debian images have

00:27:54,500 --> 00:28:00,710
been published of course it would be

00:27:57,980 --> 00:28:03,260
really really nice if those images were

00:28:00,710 --> 00:28:04,700
actually reproducible so we could it

00:28:03,260 --> 00:28:06,710
wouldn't actually matter that much were

00:28:04,700 --> 00:28:12,350
they were built but I suspect that

00:28:06,710 --> 00:28:14,450
somewhat into the future firstly if I

00:28:12,350 --> 00:28:15,740
could just thank you guys for making all

00:28:14,450 --> 00:28:19,490
of our lives easier when we do our

00:28:15,740 --> 00:28:22,610
Debbie and stuff it's it's wonderful I'm

00:28:19,490 --> 00:28:25,880
and just a question please excuse me if

00:28:22,610 --> 00:28:28,160
I missed an answer to this why are you

00:28:25,880 --> 00:28:35,180
asking the TI team to make depth or

00:28:28,160 --> 00:28:36,920
Debian to all the default because it's

00:28:35,180 --> 00:28:39,950
one less question question and then

00:28:36,920 --> 00:28:44,360
Solar okay so it's not an issue of load

00:28:39,950 --> 00:28:45,800
on the country-specific nurse first for

00:28:44,360 --> 00:28:48,830
a while the country-specific mirrors

00:28:45,800 --> 00:28:52,040
were in various stages of completeness

00:28:48,830 --> 00:28:54,770
and up to date anis whereas deb-deb unit

00:28:52,040 --> 00:28:58,760
org is up to date always so if we can

00:28:54,770 --> 00:29:00,110
finish the the tuning of it so that it's

00:28:58,760 --> 00:29:01,580
not reporting some of those five or

00:29:00,110 --> 00:29:02,440
three errors or hash mesh masters or

00:29:01,580 --> 00:29:05,420
what-have-you

00:29:02,440 --> 00:29:08,240
that's why we think it represents a good

00:29:05,420 --> 00:29:10,880
solution for the general user so can't

00:29:08,240 --> 00:29:14,450
leave the morass master list on the CD

00:29:10,880 --> 00:29:17,570
images for example is produced at the

00:29:14,450 --> 00:29:21,230
process of being the Debian installer

00:29:17,570 --> 00:29:24,760
being built so it's it is from that date

00:29:21,230 --> 00:29:27,710
and country mirrors come and go or the

00:29:24,760 --> 00:29:31,280
machines where we point country mirrors

00:29:27,710 --> 00:29:33,350
to and they are sometimes some of them

00:29:31,280 --> 00:29:36,590
are a very bad state we try to keep

00:29:33,350 --> 00:29:42,530
track on that knob SD as a team bus but

00:29:36,590 --> 00:29:47,420
as mirror team but having one the the

00:29:42,530 --> 00:29:49,520
user experience of having only one cname

00:29:47,420 --> 00:29:53,600
where every point people - is probably

00:29:49,520 --> 00:29:55,520
much easier for them and for us and we

00:29:53,600 --> 00:29:56,330
recognize that users might want to use

00:29:55,520 --> 00:29:58,100
the locations

00:29:56,330 --> 00:29:59,779
to mere because their country's

00:29:58,100 --> 00:30:01,340
connection to the world to the rest of

00:29:59,779 --> 00:30:03,740
the world or wherever deb debian is

00:30:01,340 --> 00:30:06,440
available is poor so there's a local

00:30:03,740 --> 00:30:08,510
mirror fine you know turn on medium or

00:30:06,440 --> 00:30:11,659
low questioning depending on what the di

00:30:08,510 --> 00:30:15,820
team picks and they can go back to the

00:30:11,659 --> 00:30:15,820
selection of what country-specific mayer

00:30:23,710 --> 00:30:30,140
best number of QA services that are

00:30:27,440 --> 00:30:33,110
running on Debian dotnet and not much

00:30:30,140 --> 00:30:36,050
bang on not an advantage by DSA we have

00:30:33,110 --> 00:30:40,370
a plan to kind of work with service

00:30:36,050 --> 00:30:44,510
maintenance of those QA services to move

00:30:40,370 --> 00:30:47,120
them to the gendered or guard well we

00:30:44,510 --> 00:30:49,100
don't have an enumerated plan for all of

00:30:47,120 --> 00:30:50,660
the QA services and we've not discussed

00:30:49,100 --> 00:30:53,870
with each one of them how do you want to

00:30:50,660 --> 00:30:57,440
transition to Debian org that that's a

00:30:53,870 --> 00:30:59,780
lot of work but it's a good idea in my I

00:30:57,440 --> 00:31:03,650
would want my preference would be that

00:30:59,780 --> 00:31:05,390
between the folks looking at the source

00:31:03,650 --> 00:31:08,120
code management and the folks looking at

00:31:05,390 --> 00:31:09,860
continuous integration that they also

00:31:08,120 --> 00:31:12,950
include some the QA things so we get

00:31:09,860 --> 00:31:15,290
that tool chain and then on our side we

00:31:12,950 --> 00:31:17,150
focus on this container service we

00:31:15,290 --> 00:31:19,820
switch those services to container based

00:31:17,150 --> 00:31:21,650
we offer these mock services it becomes

00:31:19,820 --> 00:31:25,370
much easier for people to move from

00:31:21,650 --> 00:31:29,500
dotnet to dog or just start directly on

00:31:25,370 --> 00:31:29,500
test Debian org something like that

00:31:40,090 --> 00:31:43,180
all right we have yeah we have 12

00:31:41,980 --> 00:31:48,630
minutes but if there are no further

00:31:43,180 --> 00:31:48,630
questions I'll call it once there we go

00:31:50,670 --> 00:31:55,300
do you guys already have anything

00:31:53,110 --> 00:31:55,810
specific in mind on the container

00:31:55,300 --> 00:31:58,000
service

00:31:55,810 --> 00:32:01,780
what infrastructure you're going to use

00:31:58,000 --> 00:32:05,470
or do not we haven't spent a lot of time

00:32:01,780 --> 00:32:07,510
thinking about it yet I personally like

00:32:05,470 --> 00:32:10,090
kubernetes and use that at work so

00:32:07,510 --> 00:32:11,920
that's one contender there's a certain

00:32:10,090 --> 00:32:15,190
amount of complexity complexity

00:32:11,920 --> 00:32:17,950
associated with that so there's there's

00:32:15,190 --> 00:32:20,170
a trade-off whether we want to expose

00:32:17,950 --> 00:32:24,850
people to that amount of complexity or

00:32:20,170 --> 00:32:28,240
whether we want to bail or assemble

00:32:24,850 --> 00:32:29,710
something a bit simpler but we haven't

00:32:28,240 --> 00:32:33,400
actually really started that discussion

00:32:29,710 --> 00:32:34,960
yet so okay I I have been working on

00:32:33,400 --> 00:32:37,120
something for my personal use in the

00:32:34,960 --> 00:32:39,490
last month so I can show you guys what I

00:32:37,120 --> 00:32:41,760
have and you can yes I see what you

00:32:39,490 --> 00:32:41,760
think

00:32:47,630 --> 00:32:53,250
you talked quite a bit about containers

00:32:50,580 --> 00:32:55,650
is there any chance you could use

00:32:53,250 --> 00:33:01,740
containers to improve the porta box

00:32:55,650 --> 00:33:07,020
service in what respect do you want it

00:33:01,740 --> 00:33:09,240
improved the problem with the post box

00:33:07,020 --> 00:33:11,550
services it currently stands is that

00:33:09,240 --> 00:33:14,700
it's fine if you've just got one package

00:33:11,550 --> 00:33:17,190
you need defects but sometimes you need

00:33:14,700 --> 00:33:20,880
a stack of you need to fix a stack of

00:33:17,190 --> 00:33:24,830
packages and the current system doesn't

00:33:20,880 --> 00:33:29,310
really allow that so what I'd want is a

00:33:24,830 --> 00:33:33,210
sandboxed environment such that I can

00:33:29,310 --> 00:33:38,910
build packy modify package a rebuild it

00:33:33,210 --> 00:33:42,600
install install the modify package then

00:33:38,910 --> 00:33:52,230
rebuild package bay using the modify

00:33:42,600 --> 00:33:54,450
package I yeah that I mean that sounds

00:33:52,230 --> 00:33:58,560
very reasonable we haven't really

00:33:54,450 --> 00:34:02,310
discussed how to do that but container

00:33:58,560 --> 00:34:05,430
containers doesn't they give you some

00:34:02,310 --> 00:34:08,550
level of kind of date there's somewhere

00:34:05,430 --> 00:34:12,600
between a chroot and in the VM in terms

00:34:08,550 --> 00:34:14,730
of how separated you are so and the

00:34:12,600 --> 00:34:18,480
kernel doesn't have an excellent history

00:34:14,730 --> 00:34:23,130
of enforcing that security boundary

00:34:18,480 --> 00:34:26,580
properly so it's certainly something we

00:34:23,130 --> 00:34:28,290
can look at and discuss but I can't like

00:34:26,580 --> 00:34:29,790
I'm not going to say yes we're totally

00:34:28,290 --> 00:34:31,340
just going to give you a route inside a

00:34:29,790 --> 00:34:36,149
container and off you go

00:34:31,340 --> 00:34:37,800
because that sounds kind of scary but at

00:34:36,149 --> 00:34:39,649
the same time I I see where are you

00:34:37,800 --> 00:34:41,700
coming from where you actually have this

00:34:39,649 --> 00:34:45,419
completely reasonable problem you want

00:34:41,700 --> 00:34:48,960
solved so we should think about some

00:34:45,419 --> 00:34:51,480
possible solution sir so a base

00:34:48,960 --> 00:34:54,480
container that doesn't offer route but

00:34:51,480 --> 00:34:56,820
is modifiable in terms of the packages

00:34:54,480 --> 00:34:58,680
that installs with a different location

00:34:56,820 --> 00:35:00,480
from which to source those packages and

00:34:58,680 --> 00:35:00,970
so you build package a you modify your

00:35:00,480 --> 00:35:03,790
rest

00:35:00,970 --> 00:35:08,410
you rebuild your container you log in

00:35:03,790 --> 00:35:12,450
again you build package B but at least

00:35:08,410 --> 00:35:12,450
you could get there without without root

00:35:25,110 --> 00:35:30,970
as a Systems Administrator I find one of

00:35:29,350 --> 00:35:33,670
the most annoying things managing

00:35:30,970 --> 00:35:36,640
hundreds of Debian machines is dealing

00:35:33,670 --> 00:35:39,190
with upgrades from one version of Debian

00:35:36,640 --> 00:35:43,170
to the next and rebooting all those

00:35:39,190 --> 00:35:43,170
actual machines for kernel upgrades

00:35:43,890 --> 00:35:49,990
configuration management has made a lot

00:35:46,030 --> 00:35:51,970
of the rest of it easier but I'm curious

00:35:49,990 --> 00:35:55,210
how many machines you guys are dealing

00:35:51,970 --> 00:35:57,070
with that actually need to be rebooted

00:35:55,210 --> 00:36:00,660
for kernel upgrades is this a problem

00:35:57,070 --> 00:36:03,760
for you also for upgrading from one

00:36:00,660 --> 00:36:06,310
district to the next how many you know

00:36:03,760 --> 00:36:11,410
potato boxes are still around in DSA

00:36:06,310 --> 00:36:13,720
land I'm taking these numbers from

00:36:11,410 --> 00:36:18,550
memory but where we've upgraded it about

00:36:13,720 --> 00:36:21,750
a hundred about 250 machines to do

00:36:18,550 --> 00:36:25,780
stretch the upgrades are generally done

00:36:21,750 --> 00:36:28,150
using apt-get dissipate and some some

00:36:25,780 --> 00:36:33,370
scripts around that so it it will remove

00:36:28,150 --> 00:36:35,770
any any orphaned packages and so on in

00:36:33,370 --> 00:36:38,290
terms of actually upgrading around

00:36:35,770 --> 00:36:40,360
security updates and so on I our shells

00:36:38,290 --> 00:36:46,570
have this very nice feature called a for

00:36:40,360 --> 00:36:49,690
loop but yeah it's yeah it's it's it's

00:36:46,570 --> 00:36:50,890
annoying I should clarify upgrading

00:36:49,690 --> 00:36:52,840
Debian or

00:36:50,890 --> 00:36:54,850
disk upgrading Debian is quite easy it's

00:36:52,840 --> 00:36:57,100
just when you run services that then

00:36:54,850 --> 00:36:59,830
need hand-holding to get them to work in

00:36:57,100 --> 00:37:02,740
a new version or if you run for example

00:36:59,830 --> 00:37:06,310
encrypted disks I don't know if there

00:37:02,740 --> 00:37:08,860
are any full disk encryption boxes in

00:37:06,310 --> 00:37:10,450
the DSL and when you do a kernel upgrade

00:37:08,860 --> 00:37:12,280
you need to reboot and then get that

00:37:10,450 --> 00:37:14,950
passphrase type Danny this is quite an

00:37:12,280 --> 00:37:19,630
arduous we don't have full encrypted

00:37:14,950 --> 00:37:21,850
disks on sdsa machines and to also

00:37:19,630 --> 00:37:24,450
answer the other question about reboots

00:37:21,850 --> 00:37:29,680
we have some meta information in LDAP

00:37:24,450 --> 00:37:32,470
were which helps us to for example have

00:37:29,680 --> 00:37:34,390
certain machines Florrick's which are

00:37:32,470 --> 00:37:35,950
for example acting as security or box

00:37:34,390 --> 00:37:38,980
mirror to be

00:37:35,950 --> 00:37:40,840
taken out of rotation rebooted taking

00:37:38,980 --> 00:37:44,260
back into rotation and then take the

00:37:40,840 --> 00:37:47,290
next machine so we are trying to take

00:37:44,260 --> 00:37:50,980
care of that these services ours are

00:37:47,290 --> 00:37:56,230
staying up for you without noticing that

00:37:50,980 --> 00:38:00,670
we are rebooting in the backend so how

00:37:56,230 --> 00:38:03,730
many potato boxes are there still may be

00:38:00,670 --> 00:38:15,270
not potato but uh wheezy we only have

00:38:03,730 --> 00:38:18,730
chassis and stretch machines busted I

00:38:15,270 --> 00:38:23,590
think we have one spark box left which

00:38:18,730 --> 00:38:26,320
is only there is out of man for some

00:38:23,590 --> 00:38:30,850
other bugs and so because it's bark it's

00:38:26,320 --> 00:38:38,620
still wheezy see previous slides about

00:38:30,850 --> 00:38:39,610
remote oobs stuff and sparc64 we have

00:38:38,620 --> 00:38:42,990
five minutes left

00:38:39,610 --> 00:38:42,990
any other questions

00:38:52,380 --> 00:38:57,400
which wasn't entire yet entire kia for

00:38:55,600 --> 00:38:59,590
me was the current status of the cloud

00:38:57,400 --> 00:39:03,250
team is that just a future plan oh it's

00:38:59,590 --> 00:39:04,780
already working progress I'm I'm just

00:39:03,250 --> 00:39:07,270
calling it the cloud team the people

00:39:04,780 --> 00:39:08,830
that are on Debian cloud RAC channel

00:39:07,270 --> 00:39:11,620
that attend the Debian Sprint's that

00:39:08,830 --> 00:39:14,110
have the access to AWS or Google Cloud

00:39:11,620 --> 00:39:16,570
you know we should perhaps formalize

00:39:14,110 --> 00:39:18,550
that a bit more maybe turned it into a

00:39:16,570 --> 00:39:21,430
delegation so that they're empowered to

00:39:18,550 --> 00:39:24,310
then grant access to stuff

00:39:21,430 --> 00:39:26,560
shouldn't it be two separate teams I

00:39:24,310 --> 00:39:31,330
mean the one creating Debian cloud

00:39:26,560 --> 00:39:35,920
images and the one managing the reducer

00:39:31,330 --> 00:39:39,370
press but the point of me making that

00:39:35,920 --> 00:39:41,020
comment wasn't to say that Debian cloud

00:39:39,370 --> 00:39:42,700
or some other team should be deciding

00:39:41,020 --> 00:39:45,250
the policy of who gets access to what it

00:39:42,700 --> 00:39:46,600
was primarily to say that it's not DSA

00:39:45,250 --> 00:39:49,660
that's making policy about who gets

00:39:46,600 --> 00:39:51,460
access to one what we want is to have

00:39:49,660 --> 00:39:54,250
managed provisioning and de-provisioning

00:39:51,460 --> 00:39:55,840
of accounts so that if somebody's

00:39:54,250 --> 00:39:58,300
account gets locked in Debian for

00:39:55,840 --> 00:40:01,050
whatever reason it's also locked in the

00:39:58,300 --> 00:40:01,050
cloud providers

00:40:08,140 --> 00:40:19,380
okay well thank you very much group

00:40:13,150 --> 00:40:24,380
photo thanks very much

00:40:19,380 --> 00:40:24,380

YouTube URL: https://www.youtube.com/watch?v=HJEdMoCtyUE


