Title: let's maintain jenkins.debian.org as a team
Publication date: 2017-12-06
Playlist: DebConf 17
Description: 
	by Holger Levsen

At: DebConf17
https://debconf17.debconf.org/
Room: Bo
Scheduled start: 2017-08-07 18:00:00
Captions: 
	00:00:07,980 --> 00:00:18,850
okay I just still talk us about Jenkins

00:00:15,630 --> 00:00:20,949
Debian net which should become Jenkins

00:00:18,850 --> 00:00:25,410
Debian or one day and also should be

00:00:20,949 --> 00:00:29,380
Morty maintained and currently is I

00:00:25,410 --> 00:00:31,749
first spent some time explaining what

00:00:29,380 --> 00:00:34,480
the current state was is there's any

00:00:31,749 --> 00:00:40,000
question please just ask them directly

00:00:34,480 --> 00:00:41,859
so I do some things in Debian and

00:00:40,000 --> 00:00:46,989
basically I show this to show that I'm

00:00:41,859 --> 00:00:48,789
very busy I start also do this PU parts

00:00:46,989 --> 00:00:50,859
thing which you might know which test

00:00:48,789 --> 00:00:52,899
the installation of packages upgrade and

00:00:50,859 --> 00:00:57,190
removal together with andreas Beckman

00:00:52,899 --> 00:00:59,649
and in 2012 I started to set up this

00:00:57,190 --> 00:01:02,949
Jenkins instance with this currently

00:00:59,649 --> 00:01:04,720
still running and I'm also involved in

00:01:02,949 --> 00:01:07,870
reproducible builds which is largely

00:01:04,720 --> 00:01:10,290
largely using this thinkin's and for

00:01:07,870 --> 00:01:14,860
that I'm funded by the Linux Foundation

00:01:10,290 --> 00:01:18,460
so I'm busy and so I basically merged

00:01:14,860 --> 00:01:20,649
petrus for Jenkins just looking whether

00:01:18,460 --> 00:01:21,100
it safe and doesn't destroy anything

00:01:20,649 --> 00:01:23,439
else

00:01:21,100 --> 00:01:26,200
then I will merge it if it's concerned

00:01:23,439 --> 00:01:29,110
somebody's other work there at the

00:01:26,200 --> 00:01:33,640
moment over 1,500 jobs running on this

00:01:29,110 --> 00:01:36,219
Jenkins and it's quite a mess there are

00:01:33,640 --> 00:01:41,409
types of scripts their shared script as

00:01:36,219 --> 00:01:43,360
perl there's ruby and so whatever if you

00:01:41,409 --> 00:01:45,969
want to clean up things i will review it

00:01:43,360 --> 00:01:47,740
more thoroughly but if you just want to

00:01:45,969 --> 00:01:51,399
invent the next new island for your

00:01:47,740 --> 00:01:53,380
tests that's fine with me I really don't

00:01:51,399 --> 00:01:59,079
care as long as it doesn't break the

00:01:53,380 --> 00:02:01,680
system but then I do care and I really

00:01:59,079 --> 00:02:04,210
want to maintain this Jenkins as a team

00:02:01,680 --> 00:02:07,470
because I think it's first it's better

00:02:04,210 --> 00:02:10,600
quality in order to get load off from me

00:02:07,470 --> 00:02:13,470
but and there is the team of several

00:02:10,600 --> 00:02:17,200
people but it's still mostly my setup

00:02:13,470 --> 00:02:18,030
there's even Jenkins Debian orc since a

00:02:17,200 --> 00:02:22,980
year I think

00:02:18,030 --> 00:02:25,020
machine exists and this in the end I

00:02:22,980 --> 00:02:29,150
will present my very simple plan how to

00:02:25,020 --> 00:02:31,800
get there but there could be other ways

00:02:29,150 --> 00:02:34,760
so the only other person really knowing

00:02:31,800 --> 00:02:37,940
this Jenkins set up a lot is Matt here

00:02:34,760 --> 00:02:40,260
he has accessed all the excesses I have

00:02:37,940 --> 00:02:43,470
we can deploy jobs to change

00:02:40,260 --> 00:02:46,290
configuration do everything but he's

00:02:43,470 --> 00:02:50,489
also very busy and we need more people

00:02:46,290 --> 00:02:53,970
working on this part in Darien there's

00:02:50,489 --> 00:02:56,850
Valerie and others who maintain this

00:02:53,970 --> 00:02:59,790
reproducible Debian net pages Marty and

00:02:56,850 --> 00:03:02,790
me as well Heywood corners maintaining a

00:02:59,790 --> 00:03:05,040
lone reboots trap somewhere tebow hurt

00:03:02,790 --> 00:03:07,370
and accessible jobs Steven Sandberg

00:03:05,040 --> 00:03:10,350
Chamberland has stuff risque FreeBSD

00:03:07,370 --> 00:03:12,720
Phil hence AVC which is graphic

00:03:10,350 --> 00:03:16,470
insulation and too much new jackie has

00:03:12,720 --> 00:03:19,560
also gave some yahwah support total we

00:03:16,470 --> 00:03:22,260
have 36 committers um that's also some

00:03:19,560 --> 00:03:25,440
from arch linux open zeus elite quad

00:03:22,260 --> 00:03:31,079
kicks freebsd and that PSD so it's not

00:03:25,440 --> 00:03:33,209
only debian anymore so who are you who

00:03:31,079 --> 00:03:36,470
uses jenkins double unit regularly

00:03:33,209 --> 00:03:39,450
watches like looks at result pages

00:03:36,470 --> 00:03:44,370
nobody is using the strengthens at all

00:03:39,450 --> 00:03:52,440
hey that's bad who wants to contribute

00:03:44,370 --> 00:03:54,440
to jobs okay a few more people and who

00:03:52,440 --> 00:03:56,730
thinks jenkins is currently too noisy

00:03:54,440 --> 00:04:00,150
probably no one if you're not looking at

00:03:56,730 --> 00:04:05,130
the results they are on RSM IRC channels

00:04:00,150 --> 00:04:07,290
as well so to meet engines is mostly a

00:04:05,130 --> 00:04:09,870
cron scheduler with a web UI and

00:04:07,290 --> 00:04:13,019
notifications Jenkins has lots of

00:04:09,870 --> 00:04:16,109
plugins to do whatever pipelines and job

00:04:13,019 --> 00:04:18,479
control and stuff and I mostly use it to

00:04:16,109 --> 00:04:21,150
schedule jobs and then have a web UI

00:04:18,479 --> 00:04:24,580
where you can see our job has behaved

00:04:21,150 --> 00:04:28,479
over time rather stuff

00:04:24,580 --> 00:04:31,270
and I also consider Jenkins as not

00:04:28,479 --> 00:04:34,120
secure I don't trust any reside which is

00:04:31,270 --> 00:04:37,569
built on the machine so by design I just

00:04:34,120 --> 00:04:39,490
do QA stuff there and I the other use

00:04:37,569 --> 00:04:41,919
case could be presenting results so I

00:04:39,490 --> 00:04:44,050
trigger a job on a secure machine from

00:04:41,919 --> 00:04:45,729
this Jenkins miss Jenkins the other

00:04:44,050 --> 00:04:48,340
machine would build it and then Jenkins

00:04:45,729 --> 00:04:49,509
would present the results but I don't

00:04:48,340 --> 00:04:51,990
think we should build anything

00:04:49,509 --> 00:04:54,729
trustworthy on a machine with Jenkins

00:04:51,990 --> 00:04:56,550
because of the Yahveh libraries and

00:04:54,729 --> 00:05:02,469
there's too much non free stuff and

00:04:56,550 --> 00:05:04,270
nobody understands Jenkins so and Debian

00:05:02,469 --> 00:05:06,009
has some more QA efforts which you

00:05:04,270 --> 00:05:09,190
probably know there's Lin cien which

00:05:06,009 --> 00:05:11,110
looks rocks on sauce packets SPU parts

00:05:09,190 --> 00:05:14,139
which test the installation there CI

00:05:11,110 --> 00:05:17,080
Debian net for auto tests some people do

00:05:14,139 --> 00:05:20,349
periodic archive rebuilds usually only

00:05:17,080 --> 00:05:22,810
on amd64 so there's a lot many things

00:05:20,349 --> 00:05:24,400
which are done QA rice which are not

00:05:22,810 --> 00:05:25,870
undoing and it's probably good that they

00:05:24,400 --> 00:05:32,319
are not on Jenkins I don't want to move

00:05:25,870 --> 00:05:35,620
everything yeah so I said I've started

00:05:32,319 --> 00:05:37,690
with Jenkins in 2012 and I was

00:05:35,620 --> 00:05:39,639
freelancing at profit bricks at that

00:05:37,690 --> 00:05:44,259
time their cloud provider so I asked

00:05:39,639 --> 00:05:47,680
them for some few resources and that has

00:05:44,259 --> 00:05:49,659
grown over time so this this is a job

00:05:47,680 --> 00:05:51,750
number and it's even with thousand five

00:05:49,659 --> 00:05:59,169
hundred drops now and this was November

00:05:51,750 --> 00:06:01,509
2016 so the graph is here now today it's

00:05:59,169 --> 00:06:04,479
a profit bricks at seventeen machines

00:06:01,509 --> 00:06:06,069
and two data centers within total

00:06:04,479 --> 00:06:09,240
hundred seventy cores and half the

00:06:06,069 --> 00:06:13,360
terabyte run five terabytes storage and

00:06:09,240 --> 00:06:15,789
no static IP addresses and as it's cloud

00:06:13,360 --> 00:06:18,069
provider DCD is the software to manage

00:06:15,789 --> 00:06:20,800
this and so we have hard work access for

00:06:18,069 --> 00:06:24,219
your IPM I like think and Matty and me

00:06:20,800 --> 00:06:28,620
have access to it which we could other

00:06:24,219 --> 00:06:32,589
people if they were more and then

00:06:28,620 --> 00:06:33,580
additionally to these 13 or 17 systems

00:06:32,589 --> 00:06:36,969
of profit bricks

00:06:33,580 --> 00:06:38,790
there's other systems running a vagrant

00:06:36,969 --> 00:06:42,850
play

00:06:38,790 --> 00:06:45,550
testing homage F and there's also 864

00:06:42,850 --> 00:06:51,610
machines that code thing and there's now

00:06:45,550 --> 00:06:55,150
three no there's six new aren't 64 BOTS

00:06:51,610 --> 00:06:58,360
in Julie from Oxford Beckett which are

00:06:55,150 --> 00:07:00,820
not production air so there's almost 50

00:06:58,360 --> 00:07:04,690
hosts which compromise this Jenkins

00:07:00,820 --> 00:07:06,790
setup and all these 50 rows host 42 are

00:07:04,690 --> 00:07:13,120
for reproducible builds testing and the

00:07:06,790 --> 00:07:15,070
other is for other to in construct so

00:07:13,120 --> 00:07:17,860
everything which is running is in this

00:07:15,070 --> 00:07:21,340
one get repository in the Debian Q a

00:07:17,860 --> 00:07:23,770
group to check it out read the install

00:07:21,340 --> 00:07:26,260
and readme document and drop config and

00:07:23,770 --> 00:07:31,090
the bin directory are the most important

00:07:26,260 --> 00:07:32,470
things to look at it there are many

00:07:31,090 --> 00:07:34,300
things to improve like we could

00:07:32,470 --> 00:07:36,940
configure the jobs were sensible we

00:07:34,300 --> 00:07:39,100
could build with expert or Debian the

00:07:36,940 --> 00:07:42,490
Jenkins Debian glue could have better

00:07:39,100 --> 00:07:46,380
name stays spaces there are many things

00:07:42,490 --> 00:07:50,190
to improve in this code base please do

00:07:46,380 --> 00:07:55,150
I'd be happy for improvements and

00:07:50,190 --> 00:07:57,100
there's use in Jenkins so when you look

00:07:55,150 --> 00:07:59,200
at Jenkins Debian net you don't have see

00:07:57,100 --> 00:08:01,810
thousand five hundred drops but you see

00:07:59,200 --> 00:08:04,510
20 or 25 use where drops are grouped and

00:08:01,810 --> 00:08:06,370
so far this was done manually and this

00:08:04,510 --> 00:08:10,570
can now be done with Jenkins top builder

00:08:06,370 --> 00:08:13,770
as well but somebody has to do it so far

00:08:10,570 --> 00:08:13,770
they are all configured manually

00:08:14,040 --> 00:08:19,000
[Music]

00:08:16,020 --> 00:08:21,070
benefits for Debian the first rest

00:08:19,000 --> 00:08:25,060
notification about failing drops or

00:08:21,070 --> 00:08:27,220
unstable drops and failing drops is

00:08:25,060 --> 00:08:28,930
obvious unstable jobs are drops where

00:08:27,220 --> 00:08:30,670
there are some warning in the drop so

00:08:28,930 --> 00:08:34,110
you can use regular expressions to say

00:08:30,670 --> 00:08:37,900
this warning should make a drop unstable

00:08:34,110 --> 00:08:40,480
and one of the problem there is there's

00:08:37,900 --> 00:08:43,510
lots of notifications about problems but

00:08:40,480 --> 00:08:45,190
hardly anyone fires backs from it so

00:08:43,510 --> 00:08:47,020
sometimes I five bucks but I don't

00:08:45,190 --> 00:08:50,650
always fire box course that finds too

00:08:47,020 --> 00:08:51,680
many issues and then there's sometimes I

00:08:50,650 --> 00:08:53,630
see box being

00:08:51,680 --> 00:08:55,940
well I know the problem since two weeks

00:08:53,630 --> 00:08:57,860
or something so if more people would go

00:08:55,940 --> 00:09:00,680
through the results and fire backs that

00:08:57,860 --> 00:09:02,600
would also help and reproducible it

00:09:00,680 --> 00:09:05,080
works nicely there we have fired over

00:09:02,600 --> 00:09:09,850
2,000 faith to pay from suspects so far

00:09:05,080 --> 00:09:14,630
but there's more bugs to be found so

00:09:09,850 --> 00:09:16,070
benefits for you I was hoping that there

00:09:14,630 --> 00:09:19,250
are more people in the audience who know

00:09:16,070 --> 00:09:23,300
the jobs the existing ones so nobody

00:09:19,250 --> 00:09:27,110
will be annoyed if you don't look first

00:09:23,300 --> 00:09:29,180
we have some basically various QA

00:09:27,110 --> 00:09:31,610
related jobs like we have a job to find

00:09:29,180 --> 00:09:34,399
often pick it off in packages whereas no

00:09:31,610 --> 00:09:38,420
often backfired we run the D package

00:09:34,399 --> 00:09:40,279
trigger cycle thing step head by Deb

00:09:38,420 --> 00:09:43,940
stones Lin cien and pew parts are built

00:09:40,279 --> 00:09:47,350
from get on every commit in this small

00:09:43,940 --> 00:09:58,700
chassis Buster and unstable and straight

00:09:47,350 --> 00:10:01,400
we find multi iPhone packages so the

00:09:58,700 --> 00:10:05,200
other side of the question is do you see

00:10:01,400 --> 00:10:07,910
genitalia net as the place to go to do

00:10:05,200 --> 00:10:13,029
builds on commit for all packages in

00:10:07,910 --> 00:10:15,470
Debian well maybe I don't know resource

00:10:13,029 --> 00:10:17,209
resources wise it's a question but we

00:10:15,470 --> 00:10:21,740
can add a few more there's some people

00:10:17,209 --> 00:10:24,680
using Travis my point of view is if we

00:10:21,740 --> 00:10:26,570
need more resources we can get them like

00:10:24,680 --> 00:10:28,760
it's not a problem to get computing

00:10:26,570 --> 00:10:31,160
power for the area do you know if it has

00:10:28,760 --> 00:10:33,860
been discussed in the discussion about

00:10:31,160 --> 00:10:35,750
replacing areas with something else or

00:10:33,860 --> 00:10:38,300
to plug this pager

00:10:35,750 --> 00:10:39,860
I don't know what I think most earliest

00:10:38,300 --> 00:10:44,540
discussions will happen at the earliest

00:10:39,860 --> 00:10:48,190
print after that point and I'll be there

00:10:44,540 --> 00:10:50,810
so maybe that happens and there yeah

00:10:48,190 --> 00:10:52,820
and it's it's all there as a packages

00:10:50,810 --> 00:10:55,640
Yammer in this job config for the

00:10:52,820 --> 00:10:57,770
configuration of Jose those jobs so you

00:10:55,640 --> 00:11:00,500
could just add another one there yeah

00:10:57,770 --> 00:11:02,340
but I mean it says a per team wants to

00:11:00,500 --> 00:11:06,240
use peace

00:11:02,340 --> 00:11:09,810
it's something more efficient and 1

00:11:06,240 --> 00:11:11,910
lambda package yeah if the party wants

00:11:09,810 --> 00:11:18,270
to use that and they can we can come up

00:11:11,910 --> 00:11:20,100
with a way the ask a spell team is also

00:11:18,270 --> 00:11:24,510
using this to calculate the install

00:11:20,100 --> 00:11:27,750
ability that's one group and they have

00:11:24,510 --> 00:11:29,520
one notification which I those who is e

00:11:27,750 --> 00:11:31,440
and may notification I guess are clear

00:11:29,520 --> 00:11:33,630
they're on the channel of your mail

00:11:31,440 --> 00:11:36,270
there's another form of notification

00:11:33,630 --> 00:11:39,000
which are these icons so this is for

00:11:36,270 --> 00:11:41,089
reproducible and every icon is a job on

00:11:39,000 --> 00:11:45,000
different running on different hosts and

00:11:41,089 --> 00:11:49,170
the result is immediately shown there so

00:11:45,000 --> 00:11:50,640
this is a unstable job there and there

00:11:49,170 --> 00:11:52,980
are these blue ones are currently

00:11:50,640 --> 00:11:54,900
running drops and that's just the image

00:11:52,980 --> 00:11:57,240
you can load and display on your wiki

00:11:54,900 --> 00:11:59,270
pages or whatever the ask your team is

00:11:57,240 --> 00:12:09,060
using there to show whether their jobs

00:11:59,270 --> 00:12:11,640
succeed then there are 450 chroot

00:12:09,060 --> 00:12:15,750
installation tests which to up to

00:12:11,640 --> 00:12:17,760
install some meta package or they also

00:12:15,750 --> 00:12:20,490
do up install some meta package and then

00:12:17,760 --> 00:12:22,620
upgrade to the next distro that's why

00:12:20,490 --> 00:12:25,740
the numbers down there these numbers

00:12:22,620 --> 00:12:27,810
don't add up so they are more than 453

00:12:25,740 --> 00:12:31,020
because they are also counted

00:12:27,810 --> 00:12:34,200
installation in Jesse and then upgrade

00:12:31,020 --> 00:12:37,500
to stretch or whatever the Jesse stuff

00:12:34,200 --> 00:12:39,540
is still tested monthly because it also

00:12:37,500 --> 00:12:41,610
triggers the upgrade to stretch the

00:12:39,540 --> 00:12:44,480
stretch toughest and tested weekly

00:12:41,610 --> 00:12:46,920
pasture every other day and Sedalia and

00:12:44,480 --> 00:12:48,570
that fine stuff would work where

00:12:46,920 --> 00:12:51,860
packages are are insoluble and sit

00:12:48,570 --> 00:12:51,860
usually or bust

00:12:52,500 --> 00:12:56,949
[Music]

00:12:53,999 --> 00:12:59,199
then there's a hack which I wrote which

00:12:56,949 --> 00:13:01,149
is GI installation test which tests

00:12:59,199 --> 00:13:04,769
Debian installer in text and graphical

00:13:01,149 --> 00:13:08,019
mode creates videos and screenshots and

00:13:04,769 --> 00:13:10,660
we have tests for Debian plain Debian

00:13:08,019 --> 00:13:15,129
and rescue mode what's a rescue mode and

00:13:10,660 --> 00:13:17,290
all the different glues so it's not only

00:13:15,129 --> 00:13:20,160
testing in Latin but also gorilla canned

00:13:17,290 --> 00:13:24,519
eight Indian variants and Chinese and

00:13:20,160 --> 00:13:26,470
whatnot it's true what it is is only

00:13:24,519 --> 00:13:30,040
test jesse stretch and sit i didn't

00:13:26,470 --> 00:13:32,470
bother to set it up for buster lots of

00:13:30,040 --> 00:13:35,679
tests not only linux but k freebsd and

00:13:32,470 --> 00:13:37,269
hurt so k free SPF k freebsd and hurt

00:13:35,679 --> 00:13:39,489
have been installed well in the last

00:13:37,269 --> 00:13:43,049
year I've seen installation succeed

00:13:39,489 --> 00:13:45,970
where the browser pops up at the end and

00:13:43,049 --> 00:13:47,499
most of this shall be duplicated and

00:13:45,970 --> 00:13:49,439
replaced by something which Phil is

00:13:47,499 --> 00:13:52,419
working on which I explained in a second

00:13:49,439 --> 00:13:54,790
but these are the screenshots I'd really

00:13:52,419 --> 00:13:57,249
test the installation then boots the

00:13:54,790 --> 00:13:59,169
lock the installed system and starts

00:13:57,249 --> 00:14:01,839
their web browser to see if that works

00:13:59,169 --> 00:14:05,529
that could be extended to also test leap

00:14:01,839 --> 00:14:11,559
or office or whatever but this is a

00:14:05,529 --> 00:14:15,999
gross heck so Phil works on this avz Fe

00:14:11,559 --> 00:14:19,029
Z test which is it do you have physical

00:14:15,999 --> 00:14:21,839
machines to run through States no so

00:14:19,029 --> 00:14:26,379
everything is inert actualization yeah

00:14:21,839 --> 00:14:29,079
KVM on is it currently possible to run

00:14:26,379 --> 00:14:31,209
tests on vehicle machines for someone

00:14:29,079 --> 00:14:33,069
that needs it it's like for example if

00:14:31,209 --> 00:14:35,410
you need to test utilization Nestor the

00:14:33,069 --> 00:14:37,839
authorization is not efficient it is

00:14:35,410 --> 00:14:39,970
possible but I don't have access to

00:14:37,839 --> 00:14:41,559
these physical machines at the moment

00:14:39,970 --> 00:14:44,939
but if you would have the machines and

00:14:41,559 --> 00:14:44,939
want to test something we could do that

00:14:48,910 --> 00:14:54,710
so these libvirt cucumber based tests

00:14:52,310 --> 00:14:57,770
come from tail so what I took them from

00:14:54,710 --> 00:15:00,410
tails three years ago because they

00:14:57,770 --> 00:15:03,110
really have used nicely those cucumber

00:15:00,410 --> 00:15:07,910
as a testing framework so you define the

00:15:03,110 --> 00:15:10,100
setup I have a compass with not clear

00:15:07,910 --> 00:15:12,530
with human understandable English

00:15:10,100 --> 00:15:14,450
language that other drops definition so

00:15:12,530 --> 00:15:16,730
you define I have a computer with two

00:15:14,450 --> 00:15:18,950
gigabytes of RAM and I install Debian

00:15:16,730 --> 00:15:22,040
and then there's some logic what

00:15:18,950 --> 00:15:27,650
excellent means that's really nice to do

00:15:22,040 --> 00:15:30,560
and it's now usable for Debian and now

00:15:27,650 --> 00:15:32,210
the tales people are also pushing their

00:15:30,560 --> 00:15:35,060
stuff back to us because they want

00:15:32,210 --> 00:15:38,350
Debian to be tested better to base tales

00:15:35,060 --> 00:15:43,840
on Debian so this is now a full cycle of

00:15:38,350 --> 00:15:48,920
what we use and I hope it will be ready

00:15:43,840 --> 00:15:50,720
finally this year that it can be used it

00:15:48,920 --> 00:15:57,380
also produces video it doesn't produce

00:15:50,720 --> 00:15:59,570
these images yet then there are more

00:15:57,380 --> 00:16:02,690
Debian installer related ropes like all

00:15:59,570 --> 00:16:05,000
packages building new depths they are

00:16:02,690 --> 00:16:09,140
also paid on every commit in the get

00:16:05,000 --> 00:16:13,100
master branch plus the manual in all

00:16:09,140 --> 00:16:15,140
languages as Barranca triggers and Phil

00:16:13,100 --> 00:16:16,670
and me have plans also to build proposed

00:16:15,140 --> 00:16:19,280
branches so if you have a buck you

00:16:16,670 --> 00:16:23,870
create a proposed buck and one two three

00:16:19,280 --> 00:16:26,090
four five branch and then packages from

00:16:23,870 --> 00:16:27,650
this branch a build all together from if

00:16:26,090 --> 00:16:30,890
they're several repos with this branch

00:16:27,650 --> 00:16:36,650
and a new GI bin images done its fill

00:16:30,890 --> 00:16:39,020
esters half working and for there being

00:16:36,650 --> 00:16:40,970
either there's also this GI drops which

00:16:39,020 --> 00:16:45,200
test the installation and we have

00:16:40,970 --> 00:16:47,390
packaged tests and they are especially

00:16:45,200 --> 00:16:49,700
useful for there being yo doc cause the

00:16:47,390 --> 00:16:51,350
manual is then automatically visible

00:16:49,700 --> 00:16:53,540
even without a upload and people can

00:16:51,350 --> 00:16:55,850
review and check things but it's also

00:16:53,540 --> 00:16:58,340
useful for the other packages where

00:16:55,850 --> 00:17:00,730
mostly syntax errors are detected really

00:16:58,340 --> 00:17:00,730
quickly

00:17:02,010 --> 00:17:05,319
yeah

00:17:03,310 --> 00:17:08,350
then as he would work with reboot

00:17:05,319 --> 00:17:11,620
strapping so that's crusty bootstrapping

00:17:08,350 --> 00:17:16,540
Debian from scratch on the combination

00:17:11,620 --> 00:17:20,770
of all these CPU platforms and Lipsy

00:17:16,540 --> 00:17:22,540
platforms I think it's over 90 drops now

00:17:20,770 --> 00:17:24,669
and ham would find lots of things and

00:17:22,540 --> 00:17:27,069
it's basically his research project and

00:17:24,669 --> 00:17:29,500
I show what he has an example even that

00:17:27,069 --> 00:17:31,840
it's not really in Debian you can that's

00:17:29,500 --> 00:17:33,880
still useful for from a QA point of view

00:17:31,840 --> 00:17:40,750
and if you have other interesting things

00:17:33,880 --> 00:17:44,410
to do why not run it there yeah and for

00:17:40,750 --> 00:17:46,600
reproducible builds there's 483 jobs now

00:17:44,410 --> 00:17:49,780
so one third about of the Jenkins job so

00:17:46,600 --> 00:17:51,669
for that there were 150 drops more

00:17:49,780 --> 00:17:54,580
building packages which now were

00:17:51,669 --> 00:17:56,530
replaced by a small system de service

00:17:54,580 --> 00:18:01,900
written in shell because it just kicks

00:17:56,530 --> 00:18:03,640
off bills but that's not and that even

00:18:01,900 --> 00:18:06,040
that said that was not only about Debian

00:18:03,640 --> 00:18:08,590
anymore there's also 30 or 40 jobs for

00:18:06,040 --> 00:18:14,980
other things but let's talk about

00:18:08,590 --> 00:18:18,640
Jenkins Debian or only today will you

00:18:14,980 --> 00:18:20,230
deal with Jenkins what's the role is a

00:18:18,640 --> 00:18:22,840
respective world of Jenkins and this is

00:18:20,230 --> 00:18:25,150
MD Services yeah it's just the system

00:18:22,840 --> 00:18:27,490
chief service is just triggering worker

00:18:25,150 --> 00:18:29,350
scripts which then build and there are

00:18:27,490 --> 00:18:31,090
so many like there's 150 of them and

00:18:29,350 --> 00:18:32,679
they constantly run there's only take

00:18:31,090 --> 00:18:35,860
three minutes or so though there's

00:18:32,679 --> 00:18:38,080
20,000 drop runs every day and they just

00:18:35,860 --> 00:18:40,780
clutter the UI cause nobody looks at the

00:18:38,080 --> 00:18:42,490
jobs okay other things that's useful to

00:18:40,780 --> 00:18:45,580
have jobs but here there's so many

00:18:42,490 --> 00:18:47,760
builds happening it's just noise nobody

00:18:45,580 --> 00:18:50,080
looks at them but ends at Salemi

00:18:47,760 --> 00:18:51,970
limitation of Jenkins that applies to

00:18:50,080 --> 00:18:56,620
many things in Debian that doesn't

00:18:51,970 --> 00:19:00,549
really scale to 25,000 packages so

00:18:56,620 --> 00:19:03,940
whatever you want to do which I wouldn't

00:19:00,549 --> 00:19:06,130
say that Jenkins doesn't scale to 24,000

00:19:03,940 --> 00:19:07,840
drops it gets on the limit but its mode

00:19:06,130 --> 00:19:10,179
is the number of concurrent stops

00:19:07,840 --> 00:19:12,710
running like I spoke with with Jenkins

00:19:10,179 --> 00:19:15,080
developers at FOSDEM and they were

00:19:12,710 --> 00:19:16,160
we are surprised about the setup and

00:19:15,080 --> 00:19:18,620
they told me it's one of the biggest

00:19:16,160 --> 00:19:29,050
setup they know and that really

00:19:18,620 --> 00:19:33,400
surprised me so about the migration

00:19:29,050 --> 00:19:35,480
there is the area is the Debian hostname

00:19:33,400 --> 00:19:38,180
it's ready it's setup

00:19:35,480 --> 00:19:40,100
I'm not sure whether every DD can lock

00:19:38,180 --> 00:19:42,920
in or whether it's a group of it let's

00:19:40,100 --> 00:19:45,410
try it out um and there's a cname

00:19:42,920 --> 00:19:48,710
pointing to Jenkins Debian org and this

00:19:45,410 --> 00:19:50,570
is set up by Diaz a and at least the

00:19:48,710 --> 00:19:56,390
current Jenkins team members have access

00:19:50,570 --> 00:19:58,280
maybe everyone in the QA group and so my

00:19:56,390 --> 00:20:00,380
idea is just to create a small script

00:19:58,280 --> 00:20:03,530
which just runs Jenkins drop builder and

00:20:00,380 --> 00:20:06,470
as a first start deploy safe yama which

00:20:03,530 --> 00:20:10,850
has five drops which basically test

00:20:06,470 --> 00:20:13,640
whether Jenkins is operational and once

00:20:10,850 --> 00:20:16,100
this done extent this group to do the

00:20:13,640 --> 00:20:19,220
next young with file which could be the

00:20:16,100 --> 00:20:21,590
pew parts or something small and do this

00:20:19,220 --> 00:20:23,930
till all are moved with the one

00:20:21,590 --> 00:20:26,990
assumption that Jenkins Debian net will

00:20:23,930 --> 00:20:28,730
stay and still run the drop but it will

00:20:26,990 --> 00:20:31,220
just be another big node so we have

00:20:28,730 --> 00:20:33,200
profit pics build one two three blah

00:20:31,220 --> 00:20:35,870
blah blah and that will just become bit

00:20:33,200 --> 00:20:37,250
north zero and which will run all the

00:20:35,870 --> 00:20:39,680
jobs which are currently running on

00:20:37,250 --> 00:20:42,020
Jenkins itself which has the nice

00:20:39,680 --> 00:20:44,330
benefit that DSA doesn't need to install

00:20:42,020 --> 00:20:45,770
any software on here here because

00:20:44,330 --> 00:20:54,140
everything will be running on the bed

00:20:45,770 --> 00:20:57,140
nodes this is basically my migration

00:20:54,140 --> 00:20:59,390
plan it's really we have these all these

00:20:57,140 --> 00:21:04,340
scripts and yeah Mel and just move them

00:20:59,390 --> 00:21:06,470
to the other stuff and for some time

00:21:04,340 --> 00:21:08,690
until the new I expect that to take a

00:21:06,470 --> 00:21:10,640
month or two we have two jenkins

00:21:08,690 --> 00:21:13,280
instances where some jobs are running on

00:21:10,640 --> 00:21:15,740
yeah one thing and on the other but as

00:21:13,280 --> 00:21:17,960
we only use jenkins for some QA efforts

00:21:15,740 --> 00:21:21,340
which is not read by other things i

00:21:17,960 --> 00:21:21,340
think the hope that's sufficient

00:21:21,809 --> 00:21:28,429
so so the ml file would be the one that

00:21:25,859 --> 00:21:31,080
is input to Jenkins job builder

00:21:28,429 --> 00:21:32,669
have you considered not using Jenkins

00:21:31,080 --> 00:21:36,419
job builder because in my experience

00:21:32,669 --> 00:21:38,429
it's quite limited like you mentioned

00:21:36,419 --> 00:21:41,070
the fact that until recently I didn't

00:21:38,429 --> 00:21:44,669
deal with views and it's actually quite

00:21:41,070 --> 00:21:46,859
easy to just generate the XML config

00:21:44,669 --> 00:21:49,259
files that Jenkins he is expecting

00:21:46,859 --> 00:21:55,379
because it would be stupid to start with

00:21:49,259 --> 00:21:57,210
y ml convert to XML with a first from

00:21:55,379 --> 00:22:02,249
one district is format to another one

00:21:57,210 --> 00:22:04,469
which yes you're right and to make

00:22:02,249 --> 00:22:10,409
things worse we also have pison code to

00:22:04,469 --> 00:22:12,690
generate the Yama which you don't have

00:22:10,409 --> 00:22:15,330
anything to post brothers be XML at some

00:22:12,690 --> 00:22:17,009
balance I sleep I didn't consider this

00:22:15,330 --> 00:22:17,729
cause I didn't want to write exam area

00:22:17,009 --> 00:22:20,999
by hand

00:22:17,729 --> 00:22:24,109
I preferred writing Yammer and I agree

00:22:20,999 --> 00:22:26,219
all this transformation are silly but

00:22:24,109 --> 00:22:30,119
well maybe I can help with that because

00:22:26,219 --> 00:22:32,879
I did that at a job I wouldn't mind if

00:22:30,119 --> 00:22:35,039
it's motivated by the fact that XML jobs

00:22:32,879 --> 00:22:39,809
for Dinkins are particular really

00:22:35,039 --> 00:22:41,279
verbose and annoying to write but I mean

00:22:39,809 --> 00:22:43,440
there are always the same so you can

00:22:41,279 --> 00:22:46,830
have a basic template and probably only

00:22:43,440 --> 00:22:48,960
use five different fields and what are

00:22:46,830 --> 00:22:53,279
the ones that usually generating with

00:22:48,960 --> 00:22:55,169
Jenkins job builder so and there are

00:22:53,279 --> 00:22:57,389
many things that you can do in the exam

00:22:55,169 --> 00:23:00,629
s you cannot do with jenkees Joe builder

00:22:57,389 --> 00:23:04,739
like filtering the combinations if use

00:23:00,629 --> 00:23:06,330
much with jobs you cannot easily respect

00:23:04,739 --> 00:23:08,399
to staff you can definitely do

00:23:06,330 --> 00:23:11,070
everything when you write the exam by

00:23:08,399 --> 00:23:14,869
hand or with with another tool chain to

00:23:11,070 --> 00:23:14,869
write XML of course and XS

00:23:23,750 --> 00:23:28,560
yeah there's ways to contribute as I

00:23:26,490 --> 00:23:31,530
said please file backs about stuff

00:23:28,560 --> 00:23:34,350
Jenkins find or the noise that makes if

00:23:31,530 --> 00:23:37,830
it's something too noisy please send

00:23:34,350 --> 00:23:39,810
patches with ever modifications as get

00:23:37,830 --> 00:23:44,760
preferred and as gif it give me a get

00:23:39,810 --> 00:23:46,590
label to pull it from and I think we

00:23:44,760 --> 00:23:48,330
have resources to run every anything

00:23:46,590 --> 00:23:52,470
because if we if there's something

00:23:48,330 --> 00:23:55,080
useful we find resources and yeah nobody

00:23:52,470 --> 00:23:57,120
has a test set up except Phil there's

00:23:55,080 --> 00:23:59,370
one test setup of the Jenkins instance

00:23:57,120 --> 00:24:01,710
but we are not really using it we just

00:23:59,370 --> 00:24:08,400
mostly deploy stuff and if it works then

00:24:01,710 --> 00:24:11,130
fine if not we just fix it up we are

00:24:08,400 --> 00:24:14,490
mostly reachable via the Debian QA IRC

00:24:11,130 --> 00:24:16,470
channel can file bugs directly against

00:24:14,490 --> 00:24:18,960
the Jenkins Debian or so idle package

00:24:16,470 --> 00:24:29,400
and there's a dedicated mailing list

00:24:18,960 --> 00:24:31,320
also as well as the QA list one question

00:24:29,400 --> 00:24:35,700
one of the things I used to have with

00:24:31,320 --> 00:24:39,540
Jenkins is the drinking IRC boot telling

00:24:35,700 --> 00:24:42,390
me whether my get produced make it batch

00:24:39,540 --> 00:24:45,360
produces a working or non-working

00:24:42,390 --> 00:24:47,130
packages if you can build or not can I

00:24:45,360 --> 00:24:52,700
have that service we drink instead of

00:24:47,130 --> 00:24:52,700
analog for what Petrus okay let's say

00:24:53,030 --> 00:24:58,200
although if I want to integrate all the

00:24:56,460 --> 00:25:02,730
modules of the Python team inside

00:24:58,200 --> 00:25:05,820
Jenkins would I use it possible then to

00:25:02,730 --> 00:25:09,120
have dedicated Iasi boot for just this

00:25:05,820 --> 00:25:15,150
set of modules it's not as we use the

00:25:09,120 --> 00:25:16,620
KGB but from KGB client and that will

00:25:15,150 --> 00:25:21,330
join your channel and then give the

00:25:16,620 --> 00:25:24,290
notifications in your channel my concern

00:25:21,330 --> 00:25:26,700
was to have not the result of other jobs

00:25:24,290 --> 00:25:30,480
no no you won't get them okay you will

00:25:26,700 --> 00:25:31,180
only get the notifications of the jobs

00:25:30,480 --> 00:25:37,960
that

00:25:31,180 --> 00:25:41,020
so new I'm done with my presentation

00:25:37,960 --> 00:25:43,240
just have the thanks to prophet bricks

00:25:41,020 --> 00:25:46,980
and code thing who's on the hardware and

00:25:43,240 --> 00:25:54,520
Debian Linux Foundation for my time and

00:25:46,980 --> 00:25:56,530
open for questions we just ask is or do

00:25:54,520 --> 00:25:58,510
you do the mapping between specific jobs

00:25:56,530 --> 00:26:02,320
and specific workers to make sure that

00:25:58,510 --> 00:26:05,050
it's job who runs on stretch Walker for

00:26:02,320 --> 00:26:06,850
example we configure it in the job

00:26:05,050 --> 00:26:10,180
definition and so far we've configured

00:26:06,850 --> 00:26:15,040
it that there's all job types run on the

00:26:10,180 --> 00:26:17,380
same nodes and because most most of the

00:26:15,040 --> 00:26:20,740
jobs to run on this Jenkins which I plan

00:26:17,380 --> 00:26:22,990
to just be built zero while the most of

00:26:20,740 --> 00:26:28,450
the whole know the other nodes are only

00:26:22,990 --> 00:26:31,180
used for reproducible and and so can

00:26:28,450 --> 00:26:34,120
some jobs currently break so Walker

00:26:31,180 --> 00:26:36,520
nodes or is that considered not a great

00:26:34,120 --> 00:26:40,090
practice like if you run something that

00:26:36,520 --> 00:26:42,880
needs to run as root for some reason so

00:26:40,090 --> 00:26:47,130
my my question is motivated by what I

00:26:42,880 --> 00:26:52,120
mentioned I'd like to tests vagrant

00:26:47,130 --> 00:26:57,160
cloud images and that needs to run so

00:26:52,120 --> 00:27:00,100
you want to run vagrant so remove cue

00:26:57,160 --> 00:27:02,470
new yeah in the set up so far we just

00:27:00,100 --> 00:27:05,020
won prima donnas would run it as much as

00:27:02,470 --> 00:27:08,800
needed because also these notes should

00:27:05,020 --> 00:27:11,230
are easy to reinstall and if your test

00:27:08,800 --> 00:27:13,660
is malicious actively then it's very

00:27:11,230 --> 00:27:17,460
unlikely to compromise there and even if

00:27:13,660 --> 00:27:17,460
it does that just QA results

00:27:19,670 --> 00:27:27,250
I don't try to prevent again malicious

00:27:22,940 --> 00:27:27,250
contributors except by review and report

00:27:43,260 --> 00:27:49,070
I know it's quite difficult to to get

00:27:46,980 --> 00:27:52,290
the whole of this or start contributing

00:27:49,070 --> 00:27:54,210
so if you want to do something and look

00:27:52,290 --> 00:27:57,000
have looked at the skit repository

00:27:54,210 --> 00:27:58,710
please just do ask me whatever question

00:27:57,000 --> 00:28:01,020
you have whether you think it's silly or

00:27:58,710 --> 00:28:03,929
stupid or simple it's probably way

00:28:01,020 --> 00:28:08,010
simpler to ask me or Mattia of then just

00:28:03,929 --> 00:28:12,210
try to final out yourself for hours I'm

00:28:08,010 --> 00:28:15,450
happy about any question did you already

00:28:12,210 --> 00:28:19,710
think about what will Jenkins dot Debian

00:28:15,450 --> 00:28:21,720
the log becomes after we move away from

00:28:19,710 --> 00:28:23,790
Earth to whatever's going to happen

00:28:21,720 --> 00:28:29,429
what's your view on that I know it may

00:28:23,790 --> 00:28:32,130
be early to say about him I my view is

00:28:29,429 --> 00:28:34,140
that all yours would stay it might have

00:28:32,130 --> 00:28:36,860
a different name and different software

00:28:34,140 --> 00:28:41,929
but there will still be a repository

00:28:36,860 --> 00:28:48,260
positively server with users so I don't

00:28:41,929 --> 00:28:52,910
whether it's alias or gate lap or fubar

00:28:48,260 --> 00:28:55,350
maybe I did on the survey Alexander did

00:28:52,910 --> 00:29:01,350
it showed that everyone was interested

00:28:55,350 --> 00:29:06,030
in having a CI plug to it what I was

00:29:01,350 --> 00:29:08,040
having in mind I'd be happy to extend

00:29:06,030 --> 00:29:11,520
this I'd be happy also to have it

00:29:08,040 --> 00:29:13,320
separated because having it separated

00:29:11,520 --> 00:29:16,080
gives the advantage to be able to do

00:29:13,320 --> 00:29:21,480
this cleanly as one service while this

00:29:16,080 --> 00:29:23,010
is a bit of a zoo yes that's in the zoo

00:29:21,480 --> 00:29:24,870
there's different parts like the

00:29:23,010 --> 00:29:27,960
reproducible part is nicely contained

00:29:24,870 --> 00:29:31,169
and a good area in the zoo and so there

00:29:27,960 --> 00:29:36,090
could be a CI part in this zoo as well

00:29:31,169 --> 00:29:37,740
but could also be somewhere else like CI

00:29:36,090 --> 00:29:40,500
Debian net is something totally

00:29:37,740 --> 00:29:43,640
different and I'm happy that it exists

00:29:40,500 --> 00:29:43,640
and I'm happy that it's different

00:30:04,460 --> 00:30:11,919
if there are no more questions close

00:30:09,379 --> 00:30:11,919
that here

00:30:17,440 --> 00:30:23,880
the main way to look at Wizards current

00:30:20,740 --> 00:30:26,440
lease for the Jenkins web interface and

00:30:23,880 --> 00:30:28,810
the main way to look at what wrote Allu

00:30:26,440 --> 00:30:30,880
to look at their build results or do you

00:30:28,810 --> 00:30:32,940
do that currently looking so jenkins

00:30:30,880 --> 00:30:36,100
dublin net web interface directly

00:30:32,940 --> 00:30:38,680
there's I look at the main notifications

00:30:36,100 --> 00:30:40,360
okay and they are there for Debian II do

00:30:38,680 --> 00:30:42,760
they are sent to the team list so that's

00:30:40,360 --> 00:30:45,280
possible as well I know the hospital

00:30:42,760 --> 00:30:48,570
Oscar group only looks at this output

00:30:45,280 --> 00:30:51,940
basically so there are different ways

00:30:48,570 --> 00:30:57,450
service output is generated using the

00:30:51,940 --> 00:30:57,450
Jenkins West help I yeah

00:31:27,179 --> 00:31:31,729
there's the Husker wiki page

00:31:33,580 --> 00:31:38,100
they're still not developing for stretch

00:31:44,370 --> 00:31:55,319
okay thank you

00:31:47,470 --> 00:31:55,319

YouTube URL: https://www.youtube.com/watch?v=a6BP9zTl1MI


