Title: A Debian maintainer's guide to Flatpak
Publication date: 2017-12-06
Playlist: DebConf 17
Description: 
	by Simon McVittie

At: DebConf17
https://debconf17.debconf.org/
Room: Buzz
Scheduled start: 2017-08-07 12:00:00
Captions: 
	00:00:04,850 --> 00:00:11,969
hi I'm here to talk to talk about the

00:00:09,960 --> 00:00:17,099
flat back

00:00:11,969 --> 00:00:20,750
why Debian should be using it I work at

00:00:17,099 --> 00:00:22,950
kelabra which is a sauce consultancy

00:00:20,750 --> 00:00:26,430
mostly doing software development

00:00:22,950 --> 00:00:29,640
library stack little big debian

00:00:26,430 --> 00:00:32,009
derivatives and at moment I'm working

00:00:29,640 --> 00:00:35,970
with valve exploring how we can use flat

00:00:32,009 --> 00:00:40,890
back to improve steam and steam ops and

00:00:35,970 --> 00:00:42,540
I believe Debian so Cosmo have touched

00:00:40,890 --> 00:00:46,320
on this in his talk a few minutes ago

00:00:42,540 --> 00:00:46,860
like Mac is a sandbox that framework for

00:00:46,320 --> 00:00:48,840
Linux

00:00:46,860 --> 00:00:51,540
it was previously called X teaching app

00:00:48,840 --> 00:00:54,030
but that's kind of unwieldy I believe

00:00:51,540 --> 00:00:58,500
developer is in swing so got renamed in

00:00:54,030 --> 00:01:02,880
honor of I care it is an app framework

00:00:58,500 --> 00:01:04,799
so it's very much focused on desktop

00:01:02,880 --> 00:01:06,990
apps the sort of thing that you would

00:01:04,799 --> 00:01:10,590
find in your app menu these are

00:01:06,990 --> 00:01:12,539
applications or whatever or alternate if

00:01:10,590 --> 00:01:15,569
you like the sort of app you would find

00:01:12,539 --> 00:01:19,549
in an app store so like Android or iOS

00:01:15,569 --> 00:01:19,549
or that kind of thing

00:01:19,859 --> 00:01:28,670
very much leaf packages not not anything

00:01:24,210 --> 00:01:30,420
that stuff depends on they have sandbox

00:01:28,670 --> 00:01:32,729
obviously if you've installed what are

00:01:30,420 --> 00:01:35,369
the maps you trusted enough to use it

00:01:32,729 --> 00:01:37,770
but you don't necessarily trust it

00:01:35,369 --> 00:01:42,149
completely and you don't want it to get

00:01:37,770 --> 00:01:44,929
into PGP keys and it is for Linux or if

00:01:42,149 --> 00:01:47,969
I'd been more pedantic good news / Linux

00:01:44,929 --> 00:01:51,259
it makes no attempt to be portable away

00:01:47,969 --> 00:01:54,420
from that it makes full use of

00:01:51,259 --> 00:01:54,920
gilepsy features that it features things

00:01:54,420 --> 00:01:58,990
like that

00:01:54,920 --> 00:02:02,180
like this a khaki assistant day to what

00:01:58,990 --> 00:02:05,270
a champion it is like scope it doesn't

00:02:02,180 --> 00:02:08,239
have to always be an advance can be

00:02:05,270 --> 00:02:10,280
coming about that and it's not specific

00:02:08,239 --> 00:02:16,780
to a particular distribution like debian

00:02:10,280 --> 00:02:20,630
fedora but to Steve Morse whatever so

00:02:16,780 --> 00:02:27,650
advance is stable platforms to make your

00:02:20,630 --> 00:02:30,739
app distributing at for generic Linux is

00:02:27,650 --> 00:02:35,170
a bit of a pain there's a horrible term

00:02:30,739 --> 00:02:37,880
is fees independent software vendors and

00:02:35,170 --> 00:02:39,769
they might they might think well we can

00:02:37,880 --> 00:02:44,060
target generic Linux like we can talk

00:02:39,769 --> 00:02:46,549
Windows or a costs or whatever but it's

00:02:44,060 --> 00:02:47,630
kind of problematic to do that but all

00:02:46,549 --> 00:02:48,920
the distributions have different

00:02:47,630 --> 00:02:51,140
packaging systems they have different

00:02:48,920 --> 00:02:53,870
library versions and different sets of

00:02:51,140 --> 00:02:56,209
libraries installed so the traditional

00:02:53,870 --> 00:02:58,940
answer to this is you pay some ancient

00:02:56,209 --> 00:03:04,910
version traditionally our version of Red

00:02:58,940 --> 00:03:08,120
Hat these days all versions of but to us

00:03:04,910 --> 00:03:10,700
you the system is going to have the most

00:03:08,120 --> 00:03:13,609
common libraries from that baseline

00:03:10,700 --> 00:03:15,500
and one more than the rest zoo staff in

00:03:13,609 --> 00:03:18,730
the your binary or you play games with

00:03:15,500 --> 00:03:23,630
our paths to get the libraries you want

00:03:18,730 --> 00:03:27,310
linked the LSB was an effort a while ago

00:03:23,630 --> 00:03:33,500
to define like a standard base line but

00:03:27,310 --> 00:03:35,060
LSP out vendors could choose to be

00:03:33,500 --> 00:03:38,359
dependent on the LSB instead of all

00:03:35,060 --> 00:03:41,329
particular distribution and that's all

00:03:38,359 --> 00:03:42,829
very well up to a point but it doesn't

00:03:41,329 --> 00:03:47,230
have a particularly complete going

00:03:42,829 --> 00:03:49,940
library stuff available and I spoke to

00:03:47,230 --> 00:03:51,950
the DA reboot about this the other day

00:03:49,940 --> 00:03:54,290
and except there's like four or five LSB

00:03:51,950 --> 00:03:54,870
apps in the world that anyone actually

00:03:54,290 --> 00:03:56,790
ship

00:03:54,870 --> 00:03:58,890
I think all this it's it's kind of a

00:03:56,790 --> 00:04:05,400
waste of time and you should maybe go

00:03:58,890 --> 00:04:09,360
test talk about getting rid of it and if

00:04:05,400 --> 00:04:12,390
I if I if I space can't use new features

00:04:09,360 --> 00:04:13,500
we had then you could kind of asked well

00:04:12,390 --> 00:04:16,160
what benefits are they actually getting

00:04:13,500 --> 00:04:20,280
current source we have new features

00:04:16,160 --> 00:04:22,680
fixed folks whatever maybe five or ten

00:04:20,280 --> 00:04:25,830
years later they can feel safe actually

00:04:22,680 --> 00:04:27,750
depending on this new stuff so this is

00:04:25,830 --> 00:04:30,150
this concept of platform problem where

00:04:27,750 --> 00:04:31,710
you treat what you're all depending on

00:04:30,150 --> 00:04:33,300
something giving eautiful that you can

00:04:31,710 --> 00:04:36,720
never fix it you have to work around it

00:04:33,300 --> 00:04:38,430
and if five speeds are using is all the

00:04:36,720 --> 00:04:42,660
baseline it makes sure they have the

00:04:38,430 --> 00:04:44,070
platform problem forever even when they

00:04:42,660 --> 00:04:46,560
do the right thing and help us fix our

00:04:44,070 --> 00:04:49,680
folks add new features that they want

00:04:46,560 --> 00:04:52,440
that kind of thing they still have to

00:04:49,680 --> 00:04:54,960
wait maybe five ten years or they can

00:04:52,440 --> 00:04:56,610
rely on it which is a pretty big

00:04:54,960 --> 00:05:00,539
disincentive for them to actually help

00:04:56,610 --> 00:05:02,849
us and of course they have to be

00:05:00,539 --> 00:05:04,680
responsible if they've got libraries for

00:05:02,849 --> 00:05:10,289
keeping them up to date with security

00:05:04,680 --> 00:05:11,940
and some ISPs do this well others bundle

00:05:10,289 --> 00:05:16,530
of library and forget about it forever

00:05:11,940 --> 00:05:18,870
this is not what we want but it's not

00:05:16,530 --> 00:05:22,770
just nice these who benefit from having

00:05:18,870 --> 00:05:26,250
an accurate a framework there is some

00:05:22,770 --> 00:05:28,470
software in Debian that we treat it like

00:05:26,250 --> 00:05:32,160
the rest of Debian we run it on it - ish

00:05:28,470 --> 00:05:34,260
yeah release cycle we have a very a

00:05:32,160 --> 00:05:36,060
wonderfully stable platform and that's

00:05:34,260 --> 00:05:38,610
kind of useless because this software

00:05:36,060 --> 00:05:41,120
gets to six months or a year old and

00:05:38,610 --> 00:05:44,099
nobody wants it anymore

00:05:41,120 --> 00:05:46,110
and at the moment we're not amazingly

00:05:44,099 --> 00:05:51,990
good at solving that problem with

00:05:46,110 --> 00:05:54,300
backports but they I think they felt a

00:05:51,990 --> 00:05:57,630
bit partially but they're not really a

00:05:54,300 --> 00:05:58,409
particularly complete solution we have a

00:05:57,630 --> 00:06:01,439
policy that we have

00:05:58,409 --> 00:06:03,029
fantastic the testing is my definition

00:06:01,439 --> 00:06:05,099
what we are preparing for our next

00:06:03,029 --> 00:06:07,469
stable release and if the app is

00:06:05,099 --> 00:06:09,959
sufficiently fast moving it has to

00:06:07,469 --> 00:06:13,739
change every six months to deal with via

00:06:09,959 --> 00:06:14,999
Web API is or something like that then

00:06:13,739 --> 00:06:19,279
maybe it will never be suitable for

00:06:14,999 --> 00:06:21,929
safer Debian release with a 2/3 lifetime

00:06:19,279 --> 00:06:26,279
so we can't put it backwards because

00:06:21,929 --> 00:06:29,759
policies have so it has to be able to

00:06:26,279 --> 00:06:31,289
cope with its dependencies coming from a

00:06:29,759 --> 00:06:34,229
version of stainable that we're

00:06:31,289 --> 00:06:36,419
targeting about what in octave so for

00:06:34,229 --> 00:06:40,439
instance if it's using new teachers from

00:06:36,419 --> 00:06:42,629
gtk or something like that it needs to

00:06:40,439 --> 00:06:44,429
be able to cope with Babel pollution for

00:06:42,629 --> 00:06:48,019
the entire lifetime of that standard

00:06:44,429 --> 00:06:49,860
cycle or we can back all the premises

00:06:48,019 --> 00:06:53,009
but then that's kind of a problem

00:06:49,860 --> 00:06:55,979
because if we try to back port something

00:06:53,009 --> 00:06:57,289
like gtk to make my bathwater you not be

00:06:55,979 --> 00:07:01,529
able to deal it

00:06:57,289 --> 00:07:03,089
yeah well done just destabilized 2/3 of

00:07:01,529 --> 00:07:05,369
our supported desktop environments

00:07:03,089 --> 00:07:09,659
because they were not expecting about a

00:07:05,369 --> 00:07:11,909
new GT conversion and if you're

00:07:09,659 --> 00:07:14,789
sufficiently willing to take that risk

00:07:11,909 --> 00:07:16,439
then okay maybe that's fine but in that

00:07:14,789 --> 00:07:18,179
case what are you doing running stable

00:07:16,439 --> 00:07:21,089
but wouldn't you be better off with a

00:07:18,179 --> 00:07:25,740
rolling release which for better or

00:07:21,089 --> 00:07:31,369
worse it's not stable right so I can

00:07:25,740 --> 00:07:35,749
tell it's our answer to this instead of

00:07:31,369 --> 00:07:38,610
using the user from the operating system

00:07:35,749 --> 00:07:42,419
the plaka runtime is basically another

00:07:38,610 --> 00:07:47,249
small copy of user and this is with us

00:07:42,419 --> 00:07:48,180
with the user merge so it's includes an

00:07:47,249 --> 00:07:52,770
equivalent of

00:07:48,180 --> 00:07:55,110
it's basic aspect say you get your

00:07:52,770 --> 00:07:59,190
runtime linker and all that from your

00:07:55,110 --> 00:08:00,870
runtime not for of the read system there

00:07:59,190 --> 00:08:04,110
is nothing kind of magic about runtimes

00:08:00,870 --> 00:08:05,760
that means only like some approved flat

00:08:04,110 --> 00:08:09,630
pack bet they can ship what anyone can

00:08:05,760 --> 00:08:11,130
make their own runtimes what you don't

00:08:09,630 --> 00:08:12,630
want you choose what libraries you'll

00:08:11,130 --> 00:08:15,990
put in it you choose what version

00:08:12,630 --> 00:08:19,980
numbers you want those to be at and you

00:08:15,990 --> 00:08:22,440
like that sees only the runtime it does

00:08:19,980 --> 00:08:25,920
not see your real slash user the bar

00:08:22,440 --> 00:08:28,230
system so whatever set of libraries your

00:08:25,920 --> 00:08:32,100
app has declared it depends off that's

00:08:28,230 --> 00:08:34,560
what it gets the runtime does not need

00:08:32,100 --> 00:08:36,330
to contain development tools you don't

00:08:34,560 --> 00:08:38,940
use it as like your real operating

00:08:36,330 --> 00:08:40,970
system so you don't have to have your

00:08:38,940 --> 00:08:42,780
debug or things like that your compiler

00:08:40,970 --> 00:08:46,200
it doesn't have to have package

00:08:42,780 --> 00:08:49,140
management you should use ship you

00:08:46,200 --> 00:08:50,850
runtime versions kind of forget about so

00:08:49,140 --> 00:08:52,890
you don't need to be able to install new

00:08:50,850 --> 00:08:54,630
packages into your runtime to update it

00:08:52,890 --> 00:08:57,390
you just install a new version of the

00:08:54,630 --> 00:08:59,760
same runtime instead it doesn't need to

00:08:57,390 --> 00:09:01,440
be able to boot see that be in it you

00:08:59,760 --> 00:09:03,510
don't need anything except relation it

00:09:01,440 --> 00:09:08,220
is essentially just libraries and a few

00:09:03,510 --> 00:09:10,800
executables so the maintainers of

00:09:08,220 --> 00:09:15,150
flat-pack produce a common reference run

00:09:10,800 --> 00:09:19,290
times these are initially using some

00:09:15,150 --> 00:09:21,450
horrible Yocto thing and then stack of

00:09:19,290 --> 00:09:24,900
libraries are built up to that using

00:09:21,450 --> 00:09:27,270
flash build tools so there is what they

00:09:24,900 --> 00:09:32,090
call the free desktop platform which has

00:09:27,270 --> 00:09:35,060
all the sorts of libraries that eventyr

00:09:32,090 --> 00:09:37,540
traditionally assumed you have JPEG

00:09:35,060 --> 00:09:40,430
sedative be them to that kind of thing

00:09:37,540 --> 00:09:44,150
it also have like the lower-level parts

00:09:40,430 --> 00:09:45,950
of what you might call the no stack so

00:09:44,150 --> 00:09:49,430
you get GStreamer you get G live I think

00:09:45,950 --> 00:09:51,590
you might get you to K but nothing

00:09:49,430 --> 00:09:54,170
higher level but that and you will see a

00:09:51,590 --> 00:09:58,070
lifer so it's enough for a reasonable

00:09:54,170 --> 00:10:00,350
number of portable apps to run it if you

00:09:58,070 --> 00:10:02,600
want more like even a bigger runtime no

00:10:00,350 --> 00:10:05,240
there is no platform also probably

00:10:02,600 --> 00:10:07,100
flatback maintainers which acted like

00:10:05,240 --> 00:10:10,640
the rest of the known library stack like

00:10:07,100 --> 00:10:12,200
lip soup and extra widgets things like

00:10:10,640 --> 00:10:14,600
that

00:10:12,200 --> 00:10:16,550
Katie a they've been experimenting with

00:10:14,600 --> 00:10:18,050
produces there are titles which are a

00:10:16,550 --> 00:10:20,110
lot like that at run time with less no

00:10:18,050 --> 00:10:23,660
more kdat

00:10:20,110 --> 00:10:25,790
and fedora produces runtime which has

00:10:23,660 --> 00:10:27,700
all the libraries you would get in a

00:10:25,790 --> 00:10:31,340
standard installation of fedora

00:10:27,700 --> 00:10:33,470
because unlike Debian aside of

00:10:31,340 --> 00:10:39,080
insulating that fedora is think that it

00:10:33,470 --> 00:10:42,080
makes sense to talk about and we could

00:10:39,080 --> 00:10:46,130
soon flat micro times they'll from

00:10:42,080 --> 00:10:50,540
Debian with Debian like packages

00:10:46,130 --> 00:10:54,050
dependencies in it and there is it press

00:10:50,540 --> 00:10:57,320
for valve in potentially producing a

00:10:54,050 --> 00:11:00,170
runtime that presents the state runtime

00:10:57,320 --> 00:11:02,710
that they have now which is a library

00:11:00,170 --> 00:11:06,620
stack called a using ugly library path

00:11:02,710 --> 00:11:11,000
which is what Steve games are expected

00:11:06,620 --> 00:11:13,510
to assume so this talkative continuous

00:11:11,000 --> 00:11:13,510
let some demo

00:11:16,820 --> 00:11:45,890
so I'm installing some stuff from flat

00:11:21,830 --> 00:11:49,370
hub which is like the so this is coming

00:11:45,890 --> 00:11:51,380
from a set of people flat hub if in flat

00:11:49,370 --> 00:11:53,660
pack is like the Android a framework

00:11:51,380 --> 00:11:55,970
then flat hub is like a google play

00:11:53,660 --> 00:11:58,070
store or something case it's like the

00:11:55,970 --> 00:12:00,350
central distribution point but you don't

00:11:58,070 --> 00:12:02,660
have to add you don't have to enable but

00:12:00,350 --> 00:12:04,400
a lot of people probably will and expect

00:12:02,660 --> 00:12:05,870
to be like the obvious place way above

00:12:04,400 --> 00:12:07,910
where you distribute your app or you get

00:12:05,870 --> 00:12:10,340
your app and also where you get your run

00:12:07,910 --> 00:12:11,570
time I've actually use a local power off

00:12:10,340 --> 00:12:14,660
atop my laptop because I don't trust

00:12:11,570 --> 00:12:17,230
conference Wi-Fi and because I'm using

00:12:14,660 --> 00:12:20,050
this local error I've turned off the GPT

00:12:17,230 --> 00:12:23,300
verification that it would normally have

00:12:20,050 --> 00:12:26,870
I'm going on a subset so I don't want to

00:12:23,300 --> 00:12:29,450
go signing in my subset separately as on

00:12:26,870 --> 00:12:31,430
it's really fine test which is a

00:12:29,450 --> 00:12:36,680
knockoff of a popular game involving

00:12:31,430 --> 00:12:40,190
cubes and it is automatically picking up

00:12:36,680 --> 00:12:44,270
the free desktop platform also coming

00:12:40,190 --> 00:12:48,020
from my local mirror of laptops upset so

00:12:44,270 --> 00:12:51,620
I think going as you can see the free

00:12:48,020 --> 00:12:54,400
desktop runtime is not small it comes

00:12:51,620 --> 00:12:59,830
down to something like 160 Meg for

00:12:54,400 --> 00:13:01,970
64-bit tell I having installed this

00:12:59,830 --> 00:13:06,260
thought about it for a while

00:13:01,970 --> 00:13:07,820
I should eventually get again I don't

00:13:06,260 --> 00:13:13,880
know why my assist and it excites like

00:13:07,820 --> 00:13:30,890
today it's the fart size

00:13:13,880 --> 00:13:38,380
it's the box size it's not right there

00:13:30,890 --> 00:13:42,170
we go so now that I've installed the top

00:13:38,380 --> 00:13:44,630
obviously like ordinary user of Dehlia

00:13:42,170 --> 00:13:45,320
might well be using no software or

00:13:44,630 --> 00:13:47,510
something like that

00:13:45,320 --> 00:13:50,120
let's talk this rather arcane come on

00:13:47,510 --> 00:13:54,760
blinds but our technical online 3d demo

00:13:50,120 --> 00:13:58,870
and having installed it I can run it I

00:13:54,760 --> 00:14:02,210
already have world generated and

00:13:58,870 --> 00:14:07,550
apparently get a contra 17 is a rather

00:14:02,210 --> 00:14:13,400
nice beach with no trees so there we go

00:14:07,550 --> 00:14:17,030
that's a flat like I asked you up

00:14:13,400 --> 00:14:22,970
really it's not work at this mob size so

00:14:17,030 --> 00:14:26,030
if I rerun this here I've overwritten

00:14:22,970 --> 00:14:28,070
the quad liner used inside the app

00:14:26,030 --> 00:14:31,070
retainer so it's not actually running my

00:14:28,070 --> 00:14:35,510
test is run bash and is given it shall

00:14:31,070 --> 00:14:39,050
inside the environment you can see that

00:14:35,510 --> 00:14:47,870
I have a such user which contains a

00:14:39,050 --> 00:14:51,170
bunch of libraries it's based on this

00:14:47,870 --> 00:14:55,280
Yocto thing that has pile of thank yous

00:14:51,170 --> 00:14:59,060
available and then the free desktop

00:14:55,280 --> 00:15:01,610
platform builds on that to add for

00:14:59,060 --> 00:15:04,730
example well there's tools which are

00:15:01,610 --> 00:15:10,760
actually present in this copy but

00:15:04,730 --> 00:15:12,220
they're also things like drivers $75

00:15:10,760 --> 00:15:16,239
boxes

00:15:12,220 --> 00:15:20,639
a kind of a so not particularly small

00:15:16,239 --> 00:15:22,749
run timer and in over here it's like I

00:15:20,639 --> 00:15:25,929
have enough for the parts that are

00:15:22,749 --> 00:15:29,290
actually mine test and there's an

00:15:25,929 --> 00:15:31,749
executable there are sample libraries so

00:15:29,290 --> 00:15:33,489
the free desktop platform does not

00:15:31,749 --> 00:15:37,239
include this game library literally

00:15:33,489 --> 00:15:38,919
licked some reason it also doesn't

00:15:37,239 --> 00:15:43,600
include another interpreter so my

00:15:38,919 --> 00:15:45,790
testers have to bundle those two and my

00:15:43,600 --> 00:15:52,689
home directory as far as the app scene

00:15:45,790 --> 00:15:55,209
that looks pretty empty and you can see

00:15:52,689 --> 00:15:57,189
that my real home directory here is not

00:15:55,209 --> 00:15:59,350
visible there is just the bits used by

00:15:57,189 --> 00:16:05,529
my test itself that's part of this

00:15:59,350 --> 00:16:07,419
unboxing which about it so with the

00:16:05,529 --> 00:16:11,739
Unwin each run time you need a way to

00:16:07,419 --> 00:16:14,709
compile stuff and to do that we have the

00:16:11,739 --> 00:16:16,720
SDK which is another runtime but a

00:16:14,709 --> 00:16:18,279
rather larger one and this one does have

00:16:16,720 --> 00:16:20,499
the development tools has got compilers

00:16:18,279 --> 00:16:22,419
ahead of violence all that kind of thing

00:16:20,499 --> 00:16:25,989
and the conventional naming is you give

00:16:22,419 --> 00:16:28,149
your platform right time I reversed to

00:16:25,989 --> 00:16:30,879
make name anything with Dhokla fall and

00:16:28,149 --> 00:16:36,639
the corresponding SDK is best okay so

00:16:30,879 --> 00:16:39,489
like or nobody K or whatever this would

00:16:36,639 --> 00:16:41,889
not be hard to use if your game was

00:16:39,489 --> 00:16:44,410
running on it you're getting when you're

00:16:41,889 --> 00:16:46,869
out was running on how unspecified

00:16:44,410 --> 00:16:48,249
version of no because they mail back to

00:16:46,869 --> 00:16:55,199
well what am i running on I just don't

00:16:48,249 --> 00:16:59,250
know so it branches so for instance the

00:16:55,199 --> 00:17:03,680
current stable version of the boat text

00:16:59,250 --> 00:17:09,600
it might depend on this week on version

00:17:03,680 --> 00:17:12,060
3.94 of the don't waffle then when it

00:17:09,600 --> 00:17:14,850
when it's or this or throg vendor

00:17:12,060 --> 00:17:18,180
rebuild set in a couple of months time

00:17:14,850 --> 00:17:19,589
when don't 326 is released they can

00:17:18,180 --> 00:17:25,319
decide at their own pace to switch

00:17:19,589 --> 00:17:28,140
branch to 326 son for instance known as

00:17:25,319 --> 00:17:32,370
these both versions this by which

00:17:28,140 --> 00:17:37,280
version it is fedora alignment stands

00:17:32,370 --> 00:17:40,440
with the door release and coming soon

00:17:37,280 --> 00:17:44,790
Debian based platforms which are based

00:17:40,440 --> 00:17:46,620
on branch Delia and I don't think it

00:17:44,790 --> 00:17:48,420
makes sense to have like a the Delhi at

00:17:46,620 --> 00:17:51,090
runtime because what would you put in it

00:17:48,420 --> 00:17:52,350
does it have particular libraries you

00:17:51,090 --> 00:17:56,100
can have anything in Debian with the

00:17:52,350 --> 00:18:00,180
universal operating system so I think it

00:17:56,100 --> 00:18:04,680
makes more sense to have a smaller

00:18:00,180 --> 00:18:07,200
number of read time a lot times a

00:18:04,680 --> 00:18:10,430
particular purposes so the prototype

00:18:07,200 --> 00:18:12,360
I've done is the games one time which

00:18:10,430 --> 00:18:17,340
palaces some of the libraries you would

00:18:12,360 --> 00:18:22,620
need to play again a scene with live air

00:18:17,340 --> 00:18:25,680
elected for my tests not everything gets

00:18:22,620 --> 00:18:27,150
included in the runtime and if it's what

00:18:25,680 --> 00:18:28,590
we couldn't build a separate runtime for

00:18:27,150 --> 00:18:31,290
every app containing exactly the

00:18:28,590 --> 00:18:33,960
libraries it needs this would be a lot

00:18:31,290 --> 00:18:35,520
of runtimes but if we script it may be

00:18:33,960 --> 00:18:38,460
no big deal and they get to deduplicate

00:18:35,520 --> 00:18:40,040
it so it could be fine but I think we

00:18:38,460 --> 00:18:44,549
probably don't want that

00:18:40,040 --> 00:18:46,899
so instead at the a bands are bundling

00:18:44,549 --> 00:18:49,480
partly this is used for other common

00:18:46,899 --> 00:18:51,639
libraries so my test bundles literally

00:18:49,480 --> 00:18:54,970
because there are not many other games

00:18:51,639 --> 00:18:56,649
that use that library but also such a

00:18:54,970 --> 00:18:58,149
develop very much in lockstep with a

00:18:56,649 --> 00:19:01,419
particular library they may having

00:18:58,149 --> 00:19:03,610
yourself like come if it's for no PDF

00:19:01,419 --> 00:19:06,580
viewer is pretty much developed it locks

00:19:03,610 --> 00:19:09,039
lock step with its PDF renderer I

00:19:06,580 --> 00:19:10,480
believe the problem and if the

00:19:09,039 --> 00:19:12,460
maintainer what's the very latest

00:19:10,480 --> 00:19:16,690
version of that they could copy to how

00:19:12,460 --> 00:19:19,630
to live and know that they have it bf

00:19:16,690 --> 00:19:21,970
appears in /aa economically you do this

00:19:19,630 --> 00:19:24,610
by rebuilding it from source and giving

00:19:21,970 --> 00:19:27,549
it a prefix you do the same kill button

00:19:24,610 --> 00:19:31,450
of libraries like app like override

00:19:27,549 --> 00:19:36,159
slash user unlike like frameworks like

00:19:31,450 --> 00:19:37,539
for instance commit and I think you did

00:19:36,159 --> 00:19:40,570
not have to make sure your honor to

00:19:37,539 --> 00:19:42,730
relocate lots of people have designed

00:19:40,570 --> 00:19:48,429
their app so that paths are hard-coded

00:19:42,730 --> 00:19:50,500
at all time pragmatic approach to this

00:19:48,429 --> 00:19:51,539
is well that's fine you can hard code it

00:19:50,500 --> 00:19:54,419
if you want

00:19:51,539 --> 00:19:58,330
we're never going to relocate them to

00:19:54,419 --> 00:20:02,830
some random path it will always believe

00:19:58,330 --> 00:20:05,080
it's in such app and you'll notice that

00:20:02,830 --> 00:20:07,179
it's the same length slash user I don't

00:20:05,080 --> 00:20:08,559
think this is coincidence so if you

00:20:07,179 --> 00:20:10,870
really need to you could take a hex

00:20:08,559 --> 00:20:12,909
editor to your app and replace the

00:20:10,870 --> 00:20:16,000
references to slash user with slash out

00:20:12,909 --> 00:20:19,899
and you're good until you need to do

00:20:16,000 --> 00:20:24,700
this again the next version how these

00:20:19,899 --> 00:20:28,419
get deployed as cosmos headed to

00:20:24,700 --> 00:20:31,090
previous talk no live us tree is like

00:20:28,419 --> 00:20:33,220
gauge but for libraries and operating

00:20:31,090 --> 00:20:35,380
system files and it looks quite a lot

00:20:33,220 --> 00:20:38,590
like gift so you have your configuration

00:20:35,380 --> 00:20:42,100
you have branches you have slash storage

00:20:38,590 --> 00:20:45,309
actually I like that just get here is

00:20:42,100 --> 00:20:45,830
austrie it looks very similar the branch

00:20:45,309 --> 00:20:48,200
name

00:20:45,830 --> 00:20:49,669
and weird because thankfully the app

00:20:48,200 --> 00:20:53,600
name earns which branch your honor

00:20:49,669 --> 00:20:55,640
clicks you can add remotes so flat hover

00:20:53,600 --> 00:20:58,610
whatever is a remote from which you pull

00:20:55,640 --> 00:21:01,220
branches and the objects are hash whip I

00:20:58,610 --> 00:21:08,539
think sha-256 it's - l1 it's basically

00:21:01,220 --> 00:21:11,809
the same the way it the way that it

00:21:08,539 --> 00:21:12,769
makes it work is the sub boxing layer of

00:21:11,809 --> 00:21:17,000
flat panel

00:21:12,769 --> 00:21:19,149
do you have no space so as far as your

00:21:17,000 --> 00:21:23,360
host system is concerned there is no

00:21:19,149 --> 00:21:27,350
there is no one view of this runtime in

00:21:23,360 --> 00:21:29,720
specific place but the amount the amount

00:21:27,350 --> 00:21:30,200
websites for their great attempt at

00:21:29,720 --> 00:21:33,230
house

00:21:30,200 --> 00:21:35,450
creates panic points and minutes the

00:21:33,230 --> 00:21:38,659
runtime oh yeah in the right places for

00:21:35,450 --> 00:21:40,639
it to be able to sit this is also how it

00:21:38,659 --> 00:21:42,860
gets its special view of your home

00:21:40,639 --> 00:21:45,080
directory with only two files this meant

00:21:42,860 --> 00:21:48,230
to get out which is part of the sandbox

00:21:45,080 --> 00:21:52,039
and layer it uses a tool called bubble

00:21:48,230 --> 00:21:57,080
wrap to make sure your valuable stuff is

00:21:52,039 --> 00:21:59,149
nicely protected there are several

00:21:57,080 --> 00:22:02,450
reasons you might want to sandbox your

00:21:59,149 --> 00:22:05,899
app you trust the absolute enough to run

00:22:02,450 --> 00:22:07,909
it so it's got some like attack surface

00:22:05,899 --> 00:22:13,190
their problem or it can make system

00:22:07,909 --> 00:22:14,870
calls although they are restricted but

00:22:13,190 --> 00:22:16,669
this you don't want it to have complete

00:22:14,870 --> 00:22:17,929
control of your system which is what you

00:22:16,669 --> 00:22:19,880
have right now for a typical app

00:22:17,929 --> 00:22:24,409
installed from source or from a Debian

00:22:19,880 --> 00:22:25,639
package or whatever the apps or even if

00:22:24,409 --> 00:22:28,220
they're not malicious might have made a

00:22:25,639 --> 00:22:30,770
mistake that someone malicious

00:22:28,220 --> 00:22:35,710
through all they might have bundled into

00:22:30,770 --> 00:22:39,500
church library which we don't want so

00:22:35,710 --> 00:22:42,470
the the way flag does this mostly is

00:22:39,500 --> 00:22:45,409
with names basis so creating a

00:22:42,470 --> 00:22:48,559
virtualized view of users processes

00:22:45,409 --> 00:22:51,260
amount table networks denied networking

00:22:48,559 --> 00:22:53,750
to your out that kind of thing and on

00:22:51,260 --> 00:22:55,419
some Linux platforms we can just use

00:22:53,750 --> 00:22:58,490
these it's fine

00:22:55,419 --> 00:23:01,669
the feature in question is not from the

00:22:58,490 --> 00:23:03,289
user name spaces but I'm watching the

00:23:01,669 --> 00:23:07,669
username spaces are kind of scary

00:23:03,289 --> 00:23:10,010
because we have an unprivileged user and

00:23:07,669 --> 00:23:12,679
suddenly it gets all the capabilities in

00:23:10,010 --> 00:23:15,110
the new name space is created and in

00:23:12,679 --> 00:23:19,760
principle and below the kernel is meant

00:23:15,110 --> 00:23:23,440
to not let users with capabilities in a

00:23:19,760 --> 00:23:28,820
normal in it namespace do scary things

00:23:23,440 --> 00:23:32,809
but people miss stuff and this CVA of

00:23:28,820 --> 00:23:35,570
merchant air was one where um if you

00:23:32,809 --> 00:23:37,909
created a new network namespace you got

00:23:35,570 --> 00:23:39,710
network admin access in it with your

00:23:37,909 --> 00:23:42,679
network admin access you can install

00:23:39,710 --> 00:23:45,080
metal tools for file wallet and there

00:23:42,679 --> 00:23:47,990
was buffer overflow and air filter so

00:23:45,080 --> 00:23:49,850
you could add crafted rules that would

00:23:47,990 --> 00:23:52,419
let you over run a buffer and overwrite

00:23:49,850 --> 00:23:54,380
stuff in the kernel which we don't want

00:23:52,419 --> 00:23:56,900
in upstream Linux

00:23:54,380 --> 00:23:58,460
there is one config option for this you

00:23:56,900 --> 00:24:00,559
could have it all pointing it off

00:23:58,460 --> 00:24:03,020
so in principle too and I think actually

00:24:00,559 --> 00:24:05,299
that is just Han if there is

00:24:03,020 --> 00:24:09,429
vulnerability that this exposes they'll

00:24:05,299 --> 00:24:11,929
just have to deal with it in Debian I

00:24:09,429 --> 00:24:16,850
received container that looked

00:24:11,929 --> 00:24:18,889
hahaha no so we have a kernel patch I'm

00:24:16,850 --> 00:24:21,110
privileged user name space creative it's

00:24:18,889 --> 00:24:24,049
not allowed by default there is other

00:24:21,110 --> 00:24:25,820
system you can twiddle at runtime if you

00:24:24,049 --> 00:24:29,419
want to enable it at the cost of more

00:24:25,820 --> 00:24:32,450
tax service and for instance Red Hat

00:24:29,419 --> 00:24:34,850
Enterprise Linux they have a several

00:24:32,450 --> 00:24:36,830
paths in their pack it's the Butley

00:24:34,850 --> 00:24:40,100
parameter so if you want to change this

00:24:36,830 --> 00:24:42,350
you have to reboot it so the result of

00:24:40,100 --> 00:24:44,269
all this is you can't portably rely on

00:24:42,350 --> 00:24:45,919
being able to create these no spaces

00:24:44,269 --> 00:24:47,950
this is kind of a problem a flat pocket

00:24:45,919 --> 00:24:49,960
wants to be portable and lots - usually

00:24:47,950 --> 00:24:52,869
so in a full row

00:24:49,960 --> 00:24:55,279
it's a small set you in executable

00:24:52,869 --> 00:24:57,889
decided to have minimal attack surface

00:24:55,279 --> 00:25:01,909
it doesn't use fancy libraries for

00:24:57,889 --> 00:25:04,940
instance it was rigidly back when flat

00:25:01,909 --> 00:25:07,519
pack was XD gr this was part of my pack

00:25:04,940 --> 00:25:11,389
but it was spun off into a separate

00:25:07,519 --> 00:25:13,789
project because other things what this

00:25:11,389 --> 00:25:16,929
picture it turns out so it gives you a

00:25:13,789 --> 00:25:21,860
subset of the full power in those places

00:25:16,929 --> 00:25:23,389
it is it is enough for I love some of

00:25:21,860 --> 00:25:26,929
the other things that red house project

00:25:23,389 --> 00:25:28,610
topic does and hopefully a lot of

00:25:26,929 --> 00:25:30,759
projects that want to use the interfaces

00:25:28,610 --> 00:25:34,190
in practice will be happy with alright

00:25:30,759 --> 00:25:36,649
but it is not just powerful Anna's the

00:25:34,190 --> 00:25:39,230
full time service that gives you any

00:25:36,649 --> 00:25:41,600
particular not execute user code until

00:25:39,230 --> 00:25:45,409
it says this no new previous flag on

00:25:41,600 --> 00:25:48,889
which means a default save you at

00:25:45,409 --> 00:25:50,240
executions basically so you can't craft

00:25:48,889 --> 00:25:52,399
an environment in which a separate

00:25:50,240 --> 00:25:54,950
executable will do something unsafe

00:25:52,399 --> 00:25:56,059
because as far as y'all can find out

00:25:54,950 --> 00:25:59,419
who's concerned percent you it

00:25:56,059 --> 00:26:02,570
executable is not safe yet anymore and

00:25:59,419 --> 00:26:04,970
the design principle is it doesn't make

00:26:02,570 --> 00:26:07,340
too much it doesn't have too much

00:26:04,970 --> 00:26:08,290
reliance objects thank you it so it

00:26:07,340 --> 00:26:10,450
doesn't have any

00:26:08,290 --> 00:26:12,220
that it's all--it's maintainence

00:26:10,450 --> 00:26:16,840
wouldn't like to see in the Austrian

00:26:12,220 --> 00:26:22,300
color so the intention is this can

00:26:16,840 --> 00:26:25,900
hopefully go away one day this by having

00:26:22,300 --> 00:26:27,940
as a boxing model there is a list of

00:26:25,900 --> 00:26:30,370
capabilities FreeJack for what it's

00:26:27,940 --> 00:26:32,860
allowed to do it's the same principle as

00:26:30,370 --> 00:26:35,440
Android commissions where you have your

00:26:32,860 --> 00:26:36,670
list of this consent masses this could

00:26:35,440 --> 00:26:38,800
cost you money

00:26:36,670 --> 00:26:41,760
I love separate sets here are

00:26:38,800 --> 00:26:45,040
permissions for a fairly typical 3d game

00:26:41,760 --> 00:26:46,750
it chairs the network and IPC notes

00:26:45,040 --> 00:26:49,570
basis so you could play multiplayer and

00:26:46,750 --> 00:26:51,370
you could talk to pops audio it's got in

00:26:49,570 --> 00:26:53,920
it it has the socket it's necessary to

00:26:51,370 --> 00:26:56,560
the output video actually called Wayland

00:26:53,920 --> 00:27:01,510
and it has the DRI devices so it can do

00:26:56,560 --> 00:27:04,030
fast redbrick if we want to escape it

00:27:01,510 --> 00:27:07,420
with some blocks a bit more there is

00:27:04,030 --> 00:27:09,810
this concept of portals names on well

00:27:07,420 --> 00:27:09,810
thank you

00:27:10,110 --> 00:27:17,050
so these are a way of getting out into

00:27:13,540 --> 00:27:19,540
the sandbox with user consent without

00:27:17,050 --> 00:27:21,340
having to declare this access in advance

00:27:19,540 --> 00:27:24,460
and then have it available for abuse

00:27:21,340 --> 00:27:26,860
whenever so we will see the grounds of

00:27:24,460 --> 00:27:28,450
security warnings do you want to love a

00:27:26,860 --> 00:27:33,190
bla bla I don't understand

00:27:28,450 --> 00:27:36,760
blah blah blah yes but when these things

00:27:33,190 --> 00:27:39,340
are done in a complicated way it's

00:27:36,760 --> 00:27:39,950
reasonably clear what's going on here

00:27:39,340 --> 00:27:42,679
hang on sir

00:27:39,950 --> 00:27:47,470
who wants to use your microphone well

00:27:42,679 --> 00:27:50,029
yes I hope it doesn't make a call I

00:27:47,470 --> 00:27:53,600
think I may have to skip this demo

00:27:50,029 --> 00:27:56,269
because I'm running out of time but one

00:27:53,600 --> 00:27:58,970
of one of the core portals that's

00:27:56,269 --> 00:28:04,309
actually available with my pack is the

00:27:58,970 --> 00:28:07,870
document warble which presents more KD

00:28:04,309 --> 00:28:09,950
style file open dialog or save as dialog

00:28:07,870 --> 00:28:13,519
but the dialog box is actually outside

00:28:09,950 --> 00:28:15,350
the accent box and whatever you select

00:28:13,519 --> 00:28:18,230
in it that's automatically made

00:28:15,350 --> 00:28:21,260
available to the end of our a fuse file

00:28:18,230 --> 00:28:23,299
system so as far as the user is

00:28:21,260 --> 00:28:25,279
concerned very choosing a file if they

00:28:23,299 --> 00:28:28,429
don't know they're necessarily making a

00:28:25,279 --> 00:28:30,260
trust decision but they are giving the

00:28:28,429 --> 00:28:35,799
app access to that file they've said so

00:28:30,260 --> 00:28:35,799
is fine as I click the right there cans

00:28:36,669 --> 00:28:40,519
it's difficult to do some boxing and

00:28:38,960 --> 00:28:43,519
have it work well without modifying your

00:28:40,519 --> 00:28:45,529
apps but one of the key insights in

00:28:43,519 --> 00:28:47,330
developing a flat pack is that it's

00:28:45,529 --> 00:28:49,850
enough to mend to modify your libraries

00:28:47,330 --> 00:28:52,309
so if your app is using a recent version

00:28:49,850 --> 00:28:54,139
of G David GT County it will just

00:28:52,309 --> 00:28:57,470
automatically use this document portal

00:28:54,139 --> 00:29:01,490
if it detects it's like sandbox that's

00:28:57,470 --> 00:29:04,519
quite convenient these regretfully work

00:29:01,490 --> 00:29:07,600
by contacting the host system they have

00:29:04,519 --> 00:29:10,130
felt an access to the D bus second bus

00:29:07,600 --> 00:29:11,750
has this slightly nasty proxy which

00:29:10,130 --> 00:29:14,570
books all the messages decides whether

00:29:11,750 --> 00:29:17,960
to allow them I have an ongoing project

00:29:14,570 --> 00:29:20,000
to integrate this filtering and sandbox

00:29:17,960 --> 00:29:22,100
thing entity must even so that we don't

00:29:20,000 --> 00:29:23,419
have a target obviously but one of the

00:29:22,100 --> 00:29:28,039
things that's automatically allow is

00:29:23,419 --> 00:29:29,330
talking to these bus names and the

00:29:28,039 --> 00:29:31,730
implementation of most of these and

00:29:29,330 --> 00:29:36,139
thinking xdg desktop model which I also

00:29:31,730 --> 00:29:39,320
maintain in Debian there is meant to be

00:29:36,139 --> 00:29:42,320
only one implementation of this but it

00:29:39,320 --> 00:29:44,630
dedicates the actual work to a desktop

00:29:42,320 --> 00:29:46,970
implementation so if you're you know you

00:29:44,630 --> 00:29:48,679
may have no follow dialogue but if

00:29:46,970 --> 00:29:50,830
you're in KDE educator you looking one

00:29:48,679 --> 00:29:55,629
and so on

00:29:50,830 --> 00:29:55,629
so how can we improve Debian with this

00:29:56,860 --> 00:30:02,299
first thing to say is this this does not

00:29:59,510 --> 00:30:04,399
replace the majority of what we do at

00:30:02,299 --> 00:30:06,970
Debian not everything we ship in Debian

00:30:04,399 --> 00:30:10,429
is that is something you can call out

00:30:06,970 --> 00:30:13,159
the entire system layer network

00:30:10,429 --> 00:30:15,500
management and your logins your inner

00:30:13,159 --> 00:30:17,990
system is way outside the scope of

00:30:15,500 --> 00:30:20,149
flat-pack and in particular flat pack

00:30:17,990 --> 00:30:21,620
and the portal limitations have to be

00:30:20,149 --> 00:30:26,570
outside flat pack because you get

00:30:21,620 --> 00:30:28,279
spanked also the platform layer per user

00:30:26,570 --> 00:30:29,990
it's not something that can be

00:30:28,279 --> 00:30:32,690
considered that like this so like no

00:30:29,990 --> 00:30:35,809
shell is not an app it's part of the

00:30:32,690 --> 00:30:39,919
trusted computing base for people who

00:30:35,809 --> 00:30:42,110
use them all the services but things

00:30:39,919 --> 00:30:44,210
like no use are also not something that

00:30:42,110 --> 00:30:46,669
could be presented as now they are like

00:30:44,210 --> 00:30:49,580
this not boxes distros have to provide

00:30:46,669 --> 00:30:50,510
this also most of my command-line

00:30:49,580 --> 00:30:52,940
interfaces

00:30:50,510 --> 00:30:55,909
development tools service that kind of

00:30:52,940 --> 00:30:56,539
thing and these aren't really obscure to

00:30:55,909 --> 00:30:58,730
flat-pack

00:30:56,539 --> 00:31:01,309
it doesn't make any attempt to be

00:30:58,730 --> 00:31:02,840
suitable for that you can use some of

00:31:01,309 --> 00:31:05,720
the techniques for that the namespace

00:31:02,840 --> 00:31:07,010
thing is exactly how docker works so if

00:31:05,720 --> 00:31:10,669
you want your server at docker that's

00:31:07,010 --> 00:31:15,740
fine it's not my past job one of the

00:31:10,669 --> 00:31:20,450
things we can do for Papa is this at the

00:31:15,740 --> 00:31:23,029
best distribution like Debian have a

00:31:20,450 --> 00:31:25,549
series of well-maintained apps where the

00:31:23,029 --> 00:31:26,490
Debian maintainer of the app is worthy

00:31:25,549 --> 00:31:30,770
of the name

00:31:26,490 --> 00:31:32,910
maintaining if expert of a package and

00:31:30,770 --> 00:31:34,590
knows what's going on with it

00:31:32,910 --> 00:31:37,230
even if the upstream is not as

00:31:34,590 --> 00:31:39,300
responsible Alice we might huddle about

00:31:37,230 --> 00:31:42,750
for inspecting their security box

00:31:39,300 --> 00:31:45,390
I thought thinking we couldn't we do

00:31:42,750 --> 00:31:47,670
that really helps like that is we can't

00:31:45,390 --> 00:31:49,740
help we cannot the runtimes we're very

00:31:47,670 --> 00:31:52,320
good at libraries at Debian we have a

00:31:49,740 --> 00:31:54,510
lot of policy around them they're stable

00:31:52,320 --> 00:31:56,850
they're secure we don't break stuff this

00:31:54,510 --> 00:31:59,220
is exactly what you want when you're

00:31:56,850 --> 00:32:03,660
building a runtime you want your library

00:31:59,220 --> 00:32:07,770
to keep working but distributions are

00:32:03,660 --> 00:32:09,510
perfect and some of the time when we're

00:32:07,770 --> 00:32:10,820
packaging are when a way their packaging

00:32:09,510 --> 00:32:14,670
apps making it available to our users

00:32:10,820 --> 00:32:19,080
it's kind of a little bit pointless so

00:32:14,670 --> 00:32:22,320
don't - for instance they know - weakly

00:32:19,080 --> 00:32:23,429
okay sorry to pick on the dev team here

00:32:22,320 --> 00:32:25,500
particularly as it's all about profit

00:32:23,429 --> 00:32:27,860
but most of the other loads of that

00:32:25,500 --> 00:32:30,210
package are just the upstream release so

00:32:27,860 --> 00:32:32,070
you could kind of ask for what value are

00:32:30,210 --> 00:32:33,840
we having into this buy packages in our

00:32:32,070 --> 00:32:36,210
distro we're making it available to our

00:32:33,840 --> 00:32:36,690
users that's kind of a thing of our own

00:32:36,210 --> 00:32:38,550
making

00:32:36,690 --> 00:32:41,130
we're not actually fixing any bugs we're

00:32:38,550 --> 00:32:44,010
not actually having any new features or

00:32:41,130 --> 00:32:48,780
anything we're just turning an angle or

00:32:44,010 --> 00:32:50,400
packaging another pretty good or

00:32:48,780 --> 00:32:52,080
depending how you can take a look at a

00:32:50,400 --> 00:32:56,220
pretty bad example is so nautical

00:32:52,080 --> 00:32:58,309
two-player a first-person shooter it's

00:32:56,220 --> 00:33:01,020
not clear what value we have to this

00:32:58,309 --> 00:33:05,360
because it has been stuck in intended to

00:33:01,020 --> 00:33:05,360
package States for over five years and

00:33:05,570 --> 00:33:11,790
ok an idea well maybe we have to do this

00:33:08,460 --> 00:33:14,940
it would be very well maintained but in

00:33:11,790 --> 00:33:17,580
the world we actually live in a lack of

00:33:14,940 --> 00:33:19,410
this coming for upstream it's going to

00:33:17,580 --> 00:33:22,679
be meta for our users rather than binary

00:33:19,410 --> 00:33:23,310
coming for upstream random binary code

00:33:22,679 --> 00:33:28,890
perhaps

00:33:23,310 --> 00:33:31,560
it's better than nothing at all so we we

00:33:28,890 --> 00:33:34,680
can get access to potentially quite a

00:33:31,560 --> 00:33:37,350
long tailor applications by enabling

00:33:34,680 --> 00:33:39,060
flat-pack and using flat pack versions

00:33:37,350 --> 00:33:42,960
of them where that's the best answer

00:33:39,060 --> 00:33:45,570
this does not need to be either-or some

00:33:42,960 --> 00:33:47,970
of Cosmos thoughts off like a dentist's

00:33:45,570 --> 00:33:52,260
talk kind of made it sounds that we had

00:33:47,970 --> 00:33:54,330
to choose one we don't we can that we

00:33:52,260 --> 00:33:58,830
can have so far I've come from upstream

00:33:54,330 --> 00:34:01,020
directly and be in a flapper France

00:33:58,830 --> 00:34:03,170
where we are generally healthy I think

00:34:01,020 --> 00:34:05,430
about you fixing bugs the security flaws

00:34:03,170 --> 00:34:07,820
we can have those come from Debian

00:34:05,430 --> 00:34:11,100
either in a flat pack or just a package

00:34:07,820 --> 00:34:12,900
and these two could coexist and we get

00:34:11,100 --> 00:34:16,500
some of the same advantages whichever of

00:34:12,900 --> 00:34:19,290
these we don't so for instance if there

00:34:16,500 --> 00:34:21,780
are happens is coming from Debian in

00:34:19,290 --> 00:34:27,960
flat pack fall we still got the sandbox

00:34:21,780 --> 00:34:40,159
and that's quite a big win time Jack

00:34:27,960 --> 00:34:42,210
please right so the thing about

00:34:40,159 --> 00:34:46,950
interview here that we haven't

00:34:42,210 --> 00:34:49,260
historically done but now we do is we

00:34:46,950 --> 00:34:50,730
now we can is I've put together a

00:34:49,260 --> 00:34:57,120
prototype of you think that in four

00:34:50,730 --> 00:35:00,570
runtimes so much like before I'm

00:34:57,120 --> 00:35:03,370
installing plaque from web

00:35:00,570 --> 00:35:08,260
at this time the package I'm installing

00:35:03,370 --> 00:35:10,840
is Debian's version of open arena and

00:35:08,260 --> 00:35:13,120
this is pulling in the the Debian game's

00:35:10,840 --> 00:35:20,590
runtime which as off a fortnight ago

00:35:13,120 --> 00:35:22,690
didn't exist as we can see this runtime

00:35:20,590 --> 00:35:24,220
is significantly smaller at the moment

00:35:22,690 --> 00:35:27,280
it just it just includes enough for open

00:35:24,220 --> 00:35:29,890
arena I haven't included for instance

00:35:27,280 --> 00:35:31,600
Python or gtk or anything like that it

00:35:29,890 --> 00:35:33,400
will probably get bigger over time to

00:35:31,600 --> 00:35:34,960
support more games but hopefully will

00:35:33,400 --> 00:35:38,650
hopefully still be smaller than if we

00:35:34,960 --> 00:35:42,540
don't stop run time while I'm waiting

00:35:38,650 --> 00:35:48,250
for that to install go back to here

00:35:42,540 --> 00:35:50,290
so I've I've recently done this this

00:35:48,250 --> 00:35:53,170
tool uncommon flat down which is a

00:35:50,290 --> 00:35:55,750
prototype of piecing together a runtime

00:35:53,170 --> 00:36:07,000
or an app from absolutely takács

00:35:55,750 --> 00:36:10,450
packages okay I mean it's kind of big so

00:36:07,000 --> 00:36:13,120
the idea is for the runtime we can do a

00:36:10,450 --> 00:36:16,750
degree strap get a minimal copying of

00:36:13,120 --> 00:36:20,560
Debian and then just install a bunch of

00:36:16,750 --> 00:36:22,800
packages inside I fired up a new time

00:36:20,560 --> 00:36:22,800
here

00:36:26,700 --> 00:36:33,350
so here is a description of what goes in

00:36:39,530 --> 00:36:47,180
and I think y'know so this is a

00:36:44,270 --> 00:36:50,360
description of what goes into the game

00:36:47,180 --> 00:36:52,610
you game is real-time in addition to

00:36:50,360 --> 00:36:54,350
what's in a minimal to be strapped so

00:36:52,610 --> 00:36:58,010
we've got exactly the library's open

00:36:54,350 --> 00:37:08,500
arena needs right now as I said it will

00:36:58,010 --> 00:37:10,910
eventually grow similarly there is a

00:37:08,500 --> 00:37:13,400
declarative description of where we get

00:37:10,910 --> 00:37:15,430
this stuff so in the better the base

00:37:13,400 --> 00:37:17,930
real-time includes an app sources list

00:37:15,430 --> 00:37:22,580
which holds it in Debian and security

00:37:17,930 --> 00:37:26,180
updates and then I also kind of a

00:37:22,580 --> 00:37:28,970
description of the game itself this is

00:37:26,180 --> 00:37:31,160
quite similar to the JSON files and file

00:37:28,970 --> 00:37:36,950
the years is accepting the amicus that

00:37:31,160 --> 00:37:39,680
has not sent like a comments and all of

00:37:36,950 --> 00:37:41,120
this stuff with the arguments and

00:37:39,680 --> 00:37:42,470
they've admissions of things exactly

00:37:41,120 --> 00:37:45,950
what you'd get normally with flat-pack

00:37:42,470 --> 00:37:49,610
the only difference is I'm building some

00:37:45,950 --> 00:37:50,810
packages there from source I've had to

00:37:49,610 --> 00:37:54,400
modify them site it can be really

00:37:50,810 --> 00:38:01,700
accountable and also pulling in some

00:37:54,400 --> 00:38:04,970
packages using act yes

00:38:01,700 --> 00:38:09,620
good so here we go

00:38:04,970 --> 00:38:10,820
the quake 3 redirection and you can see

00:38:09,620 --> 00:38:13,220
the version number down the bottom that

00:38:10,820 --> 00:38:16,700
this is Debian was open Reena weird

00:38:13,220 --> 00:38:19,280
effects isn't stuff you really can't see

00:38:16,700 --> 00:38:20,630
that won't scream but take my word for

00:38:19,280 --> 00:38:21,980
it that number is

00:38:20,630 --> 00:38:24,710
one crop Delian with all the security

00:38:21,980 --> 00:38:31,240
fixes and on top stream is released from

00:38:24,710 --> 00:38:34,400
ten years ago or whatever it is and

00:38:31,240 --> 00:38:38,120
similarly if I go in if I get to chatter

00:38:34,400 --> 00:38:44,750
there you can see that I've got a rather

00:38:38,120 --> 00:38:49,100
different set of libraries and here and

00:38:44,750 --> 00:38:56,990
Indiana I have just what we need for

00:38:49,100 --> 00:38:58,760
that one game certificates if your app

00:38:56,990 --> 00:39:01,510
is already relocated somehow don't

00:38:58,760 --> 00:39:04,720
hard-code paths and then you could just

00:39:01,510 --> 00:39:06,350
install the dead move files around Golda

00:39:04,720 --> 00:39:07,880
as it turns out

00:39:06,350 --> 00:39:10,040
Overman arena and they are quite three

00:39:07,880 --> 00:39:11,360
are not like this they need some small

00:39:10,040 --> 00:39:15,500
changes we need to build it with HIPAA

00:39:11,360 --> 00:39:18,740
prefix so my current prototype is using

00:39:15,500 --> 00:39:21,500
build profiles there is an occasional

00:39:18,740 --> 00:39:25,430
flat back type of profile which requests

00:39:21,500 --> 00:39:28,930
to push it into my car and the debhelper

00:39:25,430 --> 00:39:31,610
maintainer seems to be interested in

00:39:28,930 --> 00:39:33,350
standardizing this bit so that for like

00:39:31,610 --> 00:39:38,060
older tools automatically do the right

00:39:33,350 --> 00:39:42,950
thing there are various alternatives to

00:39:38,060 --> 00:39:47,150
pack for situations where my pack is

00:39:42,950 --> 00:39:48,890
just not the right thing which I don't

00:39:47,150 --> 00:39:51,440
think I have time to go through but if

00:39:48,890 --> 00:39:57,710
people want to ask about a particular

00:39:51,440 --> 00:39:59,420
one please look now and we'll be going

00:39:57,710 --> 00:40:12,829
up shortly

00:39:59,420 --> 00:40:14,450
don't matter any questions I had a

00:40:12,829 --> 00:40:18,619
couple of questions first ones probably

00:40:14,450 --> 00:40:21,410
easiest wouldn't tor browser be a good

00:40:18,619 --> 00:40:22,760
candidate for handling in this way funny

00:40:21,410 --> 00:40:24,589
issue side that I just don't think about

00:40:22,760 --> 00:40:26,390
laptop actually develop quite recently

00:40:24,589 --> 00:40:27,740
yes well brown some would be an

00:40:26,390 --> 00:40:30,530
excellent candidate the packaging like

00:40:27,740 --> 00:40:31,309
this as it seems to kind of already work

00:40:30,530 --> 00:40:34,460
that way

00:40:31,309 --> 00:40:42,079
yes it gives you synchronous

00:40:34,460 --> 00:40:43,579
notification together yes so the top

00:40:42,079 --> 00:40:47,720
around the launcher package is kind of

00:40:43,579 --> 00:40:50,030
hack it's forcing the tor browser into

00:40:47,720 --> 00:40:51,619
our packaging model when it doesn't

00:40:50,030 --> 00:40:56,059
really fit this like square peg round

00:40:51,619 --> 00:40:58,990
hole and I think I think it would be

00:40:56,059 --> 00:41:03,799
much better if the tor browser people

00:40:58,990 --> 00:41:08,599
publishing a black repository with their

00:41:03,799 --> 00:41:10,609
Brown wineries and either a runtime or

00:41:08,599 --> 00:41:12,740
used to standard runtime like the free

00:41:10,609 --> 00:41:16,280
desktop ones from flat hub or maybe a

00:41:12,740 --> 00:41:18,859
Debian published one if I prefer W then

00:41:16,280 --> 00:41:22,250
we could just install flat pack run it

00:41:18,859 --> 00:41:26,809
there's your tor browser and secured by

00:41:22,250 --> 00:41:28,849
PGP keys just saying that and it would

00:41:26,809 --> 00:41:31,849
be nicely orthogonal to how you do

00:41:28,849 --> 00:41:34,190
updates feel my whole bit my other

00:41:31,849 --> 00:41:37,339
question real quick probably has a short

00:41:34,190 --> 00:41:39,290
answer and do you not think of what ends

00:41:37,339 --> 00:41:41,990
up on a Debian system either with just

00:41:39,290 --> 00:41:44,780
all packages UM's a priority standard or

00:41:41,990 --> 00:41:46,550
higher or alternatively

00:41:44,780 --> 00:41:48,110
you get from task south if you don't

00:41:46,550 --> 00:41:50,990
select any tasks and install time

00:41:48,110 --> 00:41:55,490
wouldn't those we can that it's for you

00:41:50,990 --> 00:41:56,810
know a standard release because you said

00:41:55,490 --> 00:42:00,700
we don't really have that well-defined

00:41:56,810 --> 00:42:05,240
of a contra of the door for instance

00:42:00,700 --> 00:42:07,610
recently what you get from a task but

00:42:05,240 --> 00:42:10,640
you enjoy a tasks in day I is a fully

00:42:07,610 --> 00:42:12,140
working bootable Debian system and for a

00:42:10,640 --> 00:42:15,200
runtime we don't actually really want

00:42:12,140 --> 00:42:17,060
that we're going to meet the boot

00:42:15,200 --> 00:42:20,510
process because that's it me my fault

00:42:17,060 --> 00:42:21,710
layer that's not my problem if you have

00:42:20,510 --> 00:42:23,780
a look at the source code of flat damn

00:42:21,710 --> 00:42:27,080
it it actually strips out the inner

00:42:23,780 --> 00:42:29,090
system act and the very last thing it

00:42:27,080 --> 00:42:38,480
does is to call the package - purge D

00:42:29,090 --> 00:42:42,080
package but you're right that debian

00:42:38,480 --> 00:42:44,000
standard is something we could have as a

00:42:42,080 --> 00:42:45,830
runtime or the libraries from Debian

00:42:44,000 --> 00:42:49,220
standard but it's not clear to me that

00:42:45,830 --> 00:42:51,260
that's very interesting because that is

00:42:49,220 --> 00:42:52,820
only enough to host online applications

00:42:51,260 --> 00:42:56,420
you don't Haven have things like live

00:42:52,820 --> 00:42:58,970
JPEG but at the same time you do have

00:42:56,420 --> 00:43:02,150
things like into a facet switch it once

00:42:58,970 --> 00:43:03,890
that really you know you have time for

00:43:02,150 --> 00:43:09,530
highly specialized app to what to be

00:43:03,890 --> 00:43:11,450
able to poke into x2 file system so yeah

00:43:09,530 --> 00:43:14,540
I do have a basic runtime which is

00:43:11,450 --> 00:43:15,320
essentially standard I think but I don't

00:43:14,540 --> 00:43:18,920
think it's particularly interesting

00:43:15,320 --> 00:43:21,200
target I think something like games or

00:43:18,920 --> 00:43:23,690
the desktop or that sort of a package

00:43:21,200 --> 00:43:29,200
set is a more interesting one or State

00:43:23,690 --> 00:43:31,870
runtime thank you can you speak a little

00:43:29,200 --> 00:43:36,430
implications for resource requirements

00:43:31,870 --> 00:43:36,430
I'm thinking disk

00:43:37,250 --> 00:43:47,670
yeah okay so yes if you have multiple

00:43:44,420 --> 00:43:49,830
runtimes installed you will conceive a

00:43:47,670 --> 00:43:51,780
bit more disk space because they won't

00:43:49,830 --> 00:43:53,760
have perfectly aligned versions of

00:43:51,780 --> 00:43:58,410
libraries and you will have the version

00:43:53,760 --> 00:44:01,350
of like gtk in your runtime duplicating

00:43:58,410 --> 00:44:04,320
a new version of gtk in your basis of

00:44:01,350 --> 00:44:06,240
which is not necessarily the same so yes

00:44:04,320 --> 00:44:09,930
there is some this cost you saw that the

00:44:06,240 --> 00:44:12,930
free desktop platform right time is 960

00:44:09,930 --> 00:44:14,970
Meg the better we get it reproducible

00:44:12,930 --> 00:44:17,960
builds the lesser problem that will be

00:44:14,970 --> 00:44:21,030
because if your binaries are identical

00:44:17,960 --> 00:44:24,510
OS 3 multi cubic 8 them

00:44:21,030 --> 00:44:26,880
I believe atlas who yet who layer flat

00:44:24,510 --> 00:44:31,050
October astray actually share one

00:44:26,880 --> 00:44:33,150
repository for both of them so if by

00:44:31,050 --> 00:44:35,280
coincidence they have been exactly the

00:44:33,150 --> 00:44:38,550
same version of gtk in their runtime in

00:44:35,280 --> 00:44:42,000
it then base platform that will be the

00:44:38,550 --> 00:44:45,120
same file Heartland and presumably they

00:44:42,000 --> 00:44:46,860
try reasonably hard to make sure that in

00:44:45,120 --> 00:44:48,930
fact they do have the same version a lot

00:44:46,860 --> 00:44:53,880
of the time so a lot of the time in

00:44:48,930 --> 00:44:56,420
practice they pay that cost do you have

00:44:53,880 --> 00:45:01,830
them know if the caching over libraries

00:44:56,420 --> 00:45:04,350
is duplicated across instances finally

00:45:01,830 --> 00:45:06,090
what do you mean by plug instances are

00:45:04,350 --> 00:45:08,460
you running a bunch of different packs

00:45:06,090 --> 00:45:10,620
on one system is that going to consume

00:45:08,460 --> 00:45:14,280
additional virtual memory we're all

00:45:10,620 --> 00:45:16,290
survivors or is there I don't know how

00:45:14,280 --> 00:45:18,900
it works at the kernel level my guess is

00:45:16,290 --> 00:45:20,460
because it's the same inode it should be

00:45:18,900 --> 00:45:25,260
able to know that it only has to cash

00:45:20,460 --> 00:45:27,770
that file once but yeah I haven't

00:45:25,260 --> 00:45:27,770
checked about

00:45:30,490 --> 00:45:52,790
if we have if an application is because

00:45:36,440 --> 00:45:56,480
it yes so if we look at my open arena

00:45:52,790 --> 00:45:58,430
here one of the one of my billet steps

00:45:56,480 --> 00:46:01,520
is to build I break through what my belt

00:45:58,430 --> 00:46:05,540
steps is to build the open arena game

00:46:01,520 --> 00:46:08,930
code the step here is to install the

00:46:05,540 --> 00:46:13,010
data files which are just in a data so

00:46:08,930 --> 00:46:14,780
they are already relocated like that it

00:46:13,010 --> 00:46:17,600
just posits this less and install more

00:46:14,780 --> 00:46:20,630
packages if my entire game was

00:46:17,600 --> 00:46:23,180
relocatable I wouldn't need the source

00:46:20,630 --> 00:46:24,860
steps I would just include the gate

00:46:23,180 --> 00:46:26,600
management of the game code in this list

00:46:24,860 --> 00:46:29,990
of packages they would just be pulled in

00:46:26,600 --> 00:46:32,960
moved to our job done I have another one

00:46:29,990 --> 00:46:36,170
like this at the black DEP repository

00:46:32,960 --> 00:46:39,040
which is good new hello which is

00:46:36,170 --> 00:46:43,300
relocatable because what are the load

00:46:39,040 --> 00:46:48,920
and that one does literally just a

00:46:43,300 --> 00:46:50,960
package and move the file so there we go

00:46:48,920 --> 00:47:07,400
that is all it does not compile from

00:46:50,960 --> 00:47:10,280
source to a point yes don't think of it

00:47:07,400 --> 00:47:13,580
as specifying a version more about Laura

00:47:10,280 --> 00:47:17,030
specified a branch so for instance the

00:47:13,580 --> 00:47:19,940
node 3.54 runtime that is not three

00:47:17,030 --> 00:47:24,920
documented 4.0 which is like no release

00:47:19,940 --> 00:47:26,510
day but it's 3.24 or something so when

00:47:24,920 --> 00:47:28,670
they later to appointment release to

00:47:26,510 --> 00:47:32,750
like fix bugs or pollen security updates

00:47:28,670 --> 00:47:34,940
or that kind of thing the 3.24 down

00:47:32,750 --> 00:47:37,970
runtime wouldn't track those I'd include

00:47:34,940 --> 00:47:39,950
like small changes that are assumed to

00:47:37,970 --> 00:47:54,290
be not a major risk of regressions and

00:47:39,950 --> 00:47:58,130
then if you have yes if my flag that

00:47:54,290 --> 00:48:01,520
prototype it pulls in whatever was

00:47:58,130 --> 00:48:03,820
available in act at the time the base

00:48:01,520 --> 00:48:09,530
topper was bootstrapped

00:48:03,820 --> 00:48:12,610
balance if you have an application which

00:48:09,530 --> 00:48:16,880
relies on a certain version of

00:48:12,610 --> 00:48:18,650
dependency then it can break changes if

00:48:16,880 --> 00:48:20,600
it relies on a very very specific

00:48:18,650 --> 00:48:22,910
version

00:48:20,600 --> 00:48:24,890
flood death does not currently handle

00:48:22,910 --> 00:48:27,530
that it could it could it could have a

00:48:24,890 --> 00:48:31,700
lockstep dependency but I haven't yet

00:48:27,530 --> 00:48:33,560
but I would expect that the normal thing

00:48:31,700 --> 00:48:38,180
is that you would specify an enemy in

00:48:33,560 --> 00:48:39,530
sweet like stretch or Buster and leave

00:48:38,180 --> 00:48:42,470
it at that and then it would pull it

00:48:39,530 --> 00:48:43,380
whatever security or bug fix updates

00:48:42,470 --> 00:48:46,380
have happened

00:48:43,380 --> 00:48:47,970
laughs wait at the time that was rebuilt

00:48:46,380 --> 00:48:55,530
and you just periodically rebuild your

00:48:47,970 --> 00:48:57,870
app to pick up the latest it sounds like

00:48:55,530 --> 00:49:01,530
we're gonna end up with your your

00:48:57,870 --> 00:49:03,510
average Debian stables desktop running

00:49:01,530 --> 00:49:11,730
flat packs using maybe three or four

00:49:03,510 --> 00:49:15,410
different runtimes but actually a we

00:49:11,730 --> 00:49:17,880
gonna if we discuss this a security flaw

00:49:15,410 --> 00:49:20,700
discovered in one of the main libraries

00:49:17,880 --> 00:49:22,200
do we now have the patch to the security

00:49:20,700 --> 00:49:24,390
team now have to patch it it before

00:49:22,200 --> 00:49:27,890
braces because that's gonna be a big

00:49:24,390 --> 00:49:30,570
increase so the run times but we produce

00:49:27,890 --> 00:49:34,110
we are responsible for Rick's minute

00:49:30,570 --> 00:49:36,510
goes if we have not the government

00:49:34,110 --> 00:49:39,540
problem app packages like I live in flat

00:49:36,510 --> 00:49:44,460
data then the security team would have

00:49:39,540 --> 00:49:46,500
to issue a new there and then respond to

00:49:44,460 --> 00:49:50,130
rebuild the run times and it would pull

00:49:46,500 --> 00:49:52,380
it back security update or to rebuilt

00:49:50,130 --> 00:49:55,500
the end of the outline will set that

00:49:52,380 --> 00:49:59,910
should hopefully really automate it if

00:49:55,500 --> 00:50:00,390
no have bad on time that's not our

00:49:59,910 --> 00:50:02,840
problem

00:50:00,390 --> 00:50:05,550
no more responsible for updating that

00:50:02,840 --> 00:50:07,830
how this works in terms of Debian policy

00:50:05,550 --> 00:50:10,770
I don't know we might want to policy

00:50:07,830 --> 00:50:15,810
that by default we only enable Debian

00:50:10,770 --> 00:50:19,530
maintained runtimes I don't know but if

00:50:15,810 --> 00:50:24,390
the user or the something has chosen to

00:50:19,530 --> 00:50:29,070
trust no or as that's also packages then

00:50:24,390 --> 00:50:31,080
they are trusting flat hubs process for

00:50:29,070 --> 00:50:35,330
updating foot issuing security updates

00:50:31,080 --> 00:50:38,330
not ours if you want to use

00:50:35,330 --> 00:50:38,330
definitely

00:51:34,990 --> 00:51:41,089
yes I could see both sides of this the

00:51:38,869 --> 00:51:44,300
people setting up flat hub there are

00:51:41,089 --> 00:51:45,740
very much setting it up trying their

00:51:44,300 --> 00:51:47,510
hardest to make it something that

00:51:45,740 --> 00:51:51,619
distributors could feel comfortable

00:51:47,510 --> 00:51:54,410
about enabling by default it does

00:51:51,619 --> 00:51:57,880
contain some non free software it's it's

00:51:54,410 --> 00:52:01,220
free software and on free software but

00:51:57,880 --> 00:52:03,530
they've made sure that the packages are

00:52:01,220 --> 00:52:05,480
tagged according to that freeness icon

00:52:03,530 --> 00:52:08,390
around which which one it is that has

00:52:05,480 --> 00:52:10,760
the tag but it is possible to tell in a

00:52:08,390 --> 00:52:13,190
in a readable way and the idea is that

00:52:10,760 --> 00:52:16,790
for instance if we were to enable flap

00:52:13,190 --> 00:52:19,040
up by default no software for instance

00:52:16,790 --> 00:52:22,730
would by default title and all free

00:52:19,040 --> 00:52:23,619
stuff and then have some preference to

00:52:22,730 --> 00:52:25,730
show it

00:52:23,619 --> 00:52:27,470
probably the same preference that

00:52:25,730 --> 00:52:50,089
controls whether we enable controvert

00:52:27,470 --> 00:52:52,180
non free traffic sources that would in

00:52:50,089 --> 00:52:55,760
principle there is nothing to stop you

00:52:52,180 --> 00:52:58,490
having a flat Magan that is console

00:52:55,760 --> 00:53:01,299
based I mean here is between hello it

00:52:58,490 --> 00:53:06,589
doesn't have a lot of GUI

00:53:01,299 --> 00:53:07,790
the question is do you want to I kind of

00:53:06,589 --> 00:53:12,980
think that there's not a whole lot of

00:53:07,790 --> 00:53:14,299
use case for it because you know the

00:53:12,980 --> 00:53:16,520
attention for these things is the

00:53:14,299 --> 00:53:17,930
primarily that's the sort of things that

00:53:16,520 --> 00:53:19,430
would show up in your app store they're

00:53:17,930 --> 00:53:24,380
the sort of things that would show up in

00:53:19,430 --> 00:53:27,559
no software and I'm not sure how much

00:53:24,380 --> 00:53:30,020
sense it makes having most console

00:53:27,559 --> 00:53:31,020
applications be like directly visible to

00:53:30,020 --> 00:53:36,090
non-technical users

00:53:31,020 --> 00:53:38,730
why if you if you are happy enough about

00:53:36,090 --> 00:53:41,550
the about the terminal you're very much

00:53:38,730 --> 00:53:44,030
not because of I was userbase if you're

00:53:41,550 --> 00:53:48,170
not having enough about the terminal to

00:53:44,030 --> 00:53:50,580
run your console app like OC or whatever

00:53:48,170 --> 00:53:52,530
you'll probably also have to give up

00:53:50,580 --> 00:53:57,540
terminal enough to find out how to

00:53:52,530 --> 00:54:00,030
install it I don't know whether this

00:53:57,540 --> 00:54:01,680
means these should be perhaps just not

00:54:00,030 --> 00:54:03,780
visible by default in the GUI or

00:54:01,680 --> 00:54:07,700
wouldn't this means they should just be

00:54:03,780 --> 00:54:07,700
can you continue to be able to whatever

00:54:24,810 --> 00:54:28,079

YouTube URL: https://www.youtube.com/watch?v=3DBozJxB9kA


