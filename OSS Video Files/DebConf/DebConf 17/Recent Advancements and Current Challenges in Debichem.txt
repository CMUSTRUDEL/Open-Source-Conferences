Title: Recent Advancements and Current Challenges in Debichem
Publication date: 2017-12-05
Playlist: DebConf 17
Description: 
	by Michael Banck

At: DebConf17
https://debconf17.debconf.org/
Room: Rex
Scheduled start: 2017-08-06 15:00:00
Captions: 
	00:00:04,480 --> 00:00:11,110
think it's time to start with next talk

00:00:08,370 --> 00:00:13,090
which is me talking about Debbie Kemp

00:00:11,110 --> 00:00:16,150
sort of most important announcement as

00:00:13,090 --> 00:00:18,010
we finally have a logo I plucked this

00:00:16,150 --> 00:00:20,140
together last year I think what you

00:00:18,010 --> 00:00:25,890
years ago

00:00:20,140 --> 00:00:31,689
so Debbie kam is something I started

00:00:25,890 --> 00:00:38,379
about 12 years ago now I got into Debian

00:00:31,689 --> 00:00:41,620
because I studied chemistry and there

00:00:38,379 --> 00:00:45,670
were basically no chemistry packages in

00:00:41,620 --> 00:00:49,179
Debian around the turn of the century I

00:00:45,670 --> 00:00:52,629
was back then a student and there was

00:00:49,179 --> 00:00:55,899
one program called chem tool which you

00:00:52,629 --> 00:00:58,629
can use to button draw chemical to these

00:00:55,899 --> 00:01:00,640
structures which you need for for your

00:00:58,629 --> 00:01:02,679
studies and I was doing a bit of

00:01:00,640 --> 00:01:04,809
upstream work on it and I thought ok

00:01:02,679 --> 00:01:07,120
I'll package that for Debian and I'm

00:01:04,809 --> 00:01:09,070
using Debian for five or six years why

00:01:07,120 --> 00:01:11,890
not get into it and then just when I got

00:01:09,070 --> 00:01:15,340
about it some guy called dr. Gunter

00:01:11,890 --> 00:01:16,840
bachelor or something I repeated and

00:01:15,340 --> 00:01:18,729
uploaded it to Debbie and I was like ah

00:01:16,840 --> 00:01:20,979
damn that was my one chance to become a

00:01:18,729 --> 00:01:22,600
Debian developer and it's gone it's the

00:01:20,979 --> 00:01:24,790
only chemistry package I know which is

00:01:22,600 --> 00:01:26,530
open source and then a couple of months

00:01:24,790 --> 00:01:28,960
later he actually resigned from Damien

00:01:26,530 --> 00:01:35,110
for personal reasons so I decided to

00:01:28,960 --> 00:01:39,640
take it over and at that time there was

00:01:35,110 --> 00:01:44,170
almost no free software and about

00:01:39,640 --> 00:01:46,840
chemistry so as a 100 foot overview

00:01:44,170 --> 00:01:53,380
Debbie kam is the Debian pure plant

00:01:46,840 --> 00:01:55,719
blend it's officially started 2006 but I

00:01:53,380 --> 00:01:58,420
mean the the thing itself has been going

00:01:55,719 --> 00:02:01,119
on since I started packaging chemistry

00:01:58,420 --> 00:02:02,859
packages around 2000 so right now we

00:02:01,119 --> 00:02:05,880
have 30 persons with commit access but

00:02:02,859 --> 00:02:11,230
it's mostly a couple of people actually

00:02:05,880 --> 00:02:17,080
doing a lot of work and we have now 100

00:02:11,230 --> 00:02:17,980
source packages I'm mostly I've since

00:02:17,080 --> 00:02:21,190
been

00:02:17,980 --> 00:02:23,500
on computational chemistry so that's the

00:02:21,190 --> 00:02:27,280
packages I mostly maintain but I've also

00:02:23,500 --> 00:02:29,379
not been actually employed as a chemist

00:02:27,280 --> 00:02:33,819
for the last nine years so this is only

00:02:29,379 --> 00:02:35,500
a wall onto your thing for me and I

00:02:33,819 --> 00:02:37,930
guess for most other people except for

00:02:35,500 --> 00:02:40,090
gramming z-- who works at University of

00:02:37,930 --> 00:02:42,610
South Africa was last year's JEP Kampf

00:02:40,090 --> 00:02:43,989
so he's actually maintained an

00:02:42,610 --> 00:02:45,940
administrator at the chemistry

00:02:43,989 --> 00:02:49,150
department there or chemical engineering

00:02:45,940 --> 00:02:51,010
I guess and he he gets work quite a bit

00:02:49,150 --> 00:02:57,430
on Ubuntu and Debian packages for for

00:02:51,010 --> 00:03:00,069
that field so just takes a while so

00:02:57,430 --> 00:03:02,530
that's one of the graphs andreas I don't

00:03:00,069 --> 00:03:04,630
know did she show no well this is the

00:03:02,530 --> 00:03:06,819
uploaded statistics for for Debbie cam

00:03:04,630 --> 00:03:09,910
but andreas is doing those statistics so

00:03:06,819 --> 00:03:11,709
you can see I'm the orange person so it

00:03:09,910 --> 00:03:12,870
for the first couple of years I did the

00:03:11,709 --> 00:03:15,970
all by myself

00:03:12,870 --> 00:03:21,400
and around 2006 we started the the

00:03:15,970 --> 00:03:23,500
subversion repository because other

00:03:21,400 --> 00:03:26,109
people wanted to participate and that

00:03:23,500 --> 00:03:30,519
was mostly Daniel Ally dirt who did a

00:03:26,109 --> 00:03:32,980
lot of work from 2008 to 2013 roughly

00:03:30,519 --> 00:03:35,459
but then in Alaska Louise he kind of

00:03:32,980 --> 00:03:38,650
disappeared so he showed up again a bit

00:03:35,459 --> 00:03:41,560
two years ago and we actually he met

00:03:38,650 --> 00:03:43,269
what he came to Heidelberg but I

00:03:41,560 --> 00:03:45,190
actually haven't heard from him for a

00:03:43,269 --> 00:03:47,440
while so he has CSKA unfortunately kind

00:03:45,190 --> 00:03:51,130
of disappeared and then Philippe Orozco

00:03:47,440 --> 00:03:53,350
knee is doing mass spectrometry packages

00:03:51,130 --> 00:03:54,910
so but he's mostly working on his own on

00:03:53,350 --> 00:03:57,819
the chemin so he has one or two people

00:03:54,910 --> 00:03:59,859
but they're doing their stuff and I'm

00:03:57,819 --> 00:04:02,440
doing the computation chemistry stuff so

00:03:59,859 --> 00:04:05,380
we're a bit disjoint but he's been or

00:04:02,440 --> 00:04:08,170
doing a lot of work and then Nicolas

00:04:05,380 --> 00:04:10,900
Breen is he's packaging grow max which

00:04:08,170 --> 00:04:12,340
is the molecule in Amex software but

00:04:10,900 --> 00:04:14,560
he's that's basically the only package

00:04:12,340 --> 00:04:17,560
he's maintaining but he's doing it all

00:04:14,560 --> 00:04:19,660
the time and the next one is then

00:04:17,560 --> 00:04:21,400
gaming's who has been working who

00:04:19,660 --> 00:04:23,349
decided to do a lot of work and this

00:04:21,400 --> 00:04:27,610
year last year so he's we're quite

00:04:23,349 --> 00:04:29,560
active and then it's andreas already so

00:04:27,610 --> 00:04:32,690
as you can see is there were one or two

00:04:29,560 --> 00:04:35,150
people and it's mostly me there and it's

00:04:32,690 --> 00:04:38,600
Daniel for some reason last year I did

00:04:35,150 --> 00:04:40,040
apparently a lot of uploads or maybe

00:04:38,600 --> 00:04:42,470
that was the best gel no there's some

00:04:40,040 --> 00:04:44,060
possible 12 so yeah I did a lot of

00:04:42,470 --> 00:04:45,590
uploads last year I don't remember that

00:04:44,060 --> 00:04:47,660
actually because I thought I didn't have

00:04:45,590 --> 00:04:49,880
a lot of time but maybe it's because of

00:04:47,660 --> 00:04:53,630
the sauce only uploads now that I tend

00:04:49,880 --> 00:04:55,900
to do more uploads these days so as I

00:04:53,630 --> 00:04:59,150
said the original mission statement for

00:04:55,900 --> 00:05:00,470
Debbie cam was package all chemistry

00:04:59,150 --> 00:05:03,290
related free and open source software

00:05:00,470 --> 00:05:07,220
there's no so few of them actually there

00:05:03,290 --> 00:05:09,320
was only like four or five in 2001 chem

00:05:07,220 --> 00:05:11,120
tool already mentioned MP QC which is

00:05:09,320 --> 00:05:14,210
the massively parallel quantum chemistry

00:05:11,120 --> 00:05:16,760
that means that meant like 16 cores in

00:05:14,210 --> 00:05:19,340
parallel or something in 2000 and a few

00:05:16,760 --> 00:05:22,640
other viewers garlic and gamma Cole

00:05:19,340 --> 00:05:28,670
garlic chemical was a gtk or is a GT k2

00:05:22,640 --> 00:05:30,170
based visual 3d viewer so that was it

00:05:28,670 --> 00:05:31,940
that was these five things I mean be

00:05:30,170 --> 00:05:33,860
packaging it and then was not a lot

00:05:31,940 --> 00:05:37,730
there was a bit more coming on after a

00:05:33,860 --> 00:05:40,370
couple of years in 2006 we had 20

00:05:37,730 --> 00:05:43,900
packages and I checked that I know it's

00:05:40,370 --> 00:05:46,100
100 so it slowly got more and more and

00:05:43,900 --> 00:05:47,450
nowadays actually the mission statement

00:05:46,100 --> 00:05:49,660
I would say is packaged the most useful

00:05:47,450 --> 00:05:52,480
versatile projects in each field because

00:05:49,660 --> 00:05:57,350
it turned out that there's five or six

00:05:52,480 --> 00:05:59,660
packages to write chemical structures

00:05:57,350 --> 00:06:02,000
and there's like 10 or 20 different ones

00:05:59,660 --> 00:06:05,060
to three dimensional original eyes

00:06:02,000 --> 00:06:08,360
molecules and it doesn't make sense to

00:06:05,060 --> 00:06:10,460
actually package them all because

00:06:08,360 --> 00:06:11,810
they're a huge overlap but on the other

00:06:10,460 --> 00:06:13,160
end it's also quite difficult to figure

00:06:11,810 --> 00:06:17,120
out which ones are the ones which are

00:06:13,160 --> 00:06:19,310
useful and also actually I found out

00:06:17,120 --> 00:06:20,690
that even more so in computation

00:06:19,310 --> 00:06:22,940
chemistry there's a huge difference in

00:06:20,690 --> 00:06:27,260
performance so we had one project called

00:06:22,940 --> 00:06:29,570
the QM speed test by NOLA Boyle who is

00:06:27,260 --> 00:06:31,310
just running optimizations off of

00:06:29,570 --> 00:06:33,650
molecule I think was esperan or

00:06:31,310 --> 00:06:35,330
something on different codes and and

00:06:33,650 --> 00:06:37,100
actually there's a factor of 50 or

00:06:35,330 --> 00:06:39,050
something in the runtime it's huge like

00:06:37,100 --> 00:06:41,810
1 some packages are done in 2 minutes

00:06:39,050 --> 00:06:44,930
and another one took 3 hours for the

00:06:41,810 --> 00:06:45,500
same stuff so there's a huge difference

00:06:44,930 --> 00:06:47,810
between code

00:06:45,500 --> 00:06:49,550
bases which are Fortran which have been

00:06:47,810 --> 00:06:52,070
optimized since the seventies versus

00:06:49,550 --> 00:06:55,580
some guys doing a C++ project over the

00:06:52,070 --> 00:06:58,520
summer it's the same algorithms but the

00:06:55,580 --> 00:07:00,380
implementation is is very different so

00:06:58,520 --> 00:07:03,370
right now we try to do that for example

00:07:00,380 --> 00:07:06,410
just last week there was another article

00:07:03,370 --> 00:07:08,060
in journal of computation chemistry

00:07:06,410 --> 00:07:09,680
about another thing PI radius a well

00:07:08,060 --> 00:07:12,080
done medium-sized Python library for

00:07:09,680 --> 00:07:13,970
Airy winds so that's another open source

00:07:12,080 --> 00:07:16,720
thing so every there's a new one coming

00:07:13,970 --> 00:07:20,960
up every week I have to feeling and

00:07:16,720 --> 00:07:24,169
actually I have another 100 packages on

00:07:20,960 --> 00:07:28,460
a list of prospective packages which are

00:07:24,169 --> 00:07:30,200
all free software there's a few really

00:07:28,460 --> 00:07:32,990
big ones siesta for example is a very

00:07:30,200 --> 00:07:35,930
well-known code and then the periodic or

00:07:32,990 --> 00:07:38,480
crystal community which got open source

00:07:35,930 --> 00:07:42,260
a while ago we should package it big DFG

00:07:38,480 --> 00:07:45,290
is pretty pretty well-known and pi SCF

00:07:42,260 --> 00:07:46,700
well a couple of those I really should

00:07:45,290 --> 00:07:49,820
be packaged but we don't get around to

00:07:46,700 --> 00:07:51,890
it that much but there's 100 at least

00:07:49,820 --> 00:07:53,570
that we know of so at least twice the

00:07:51,890 --> 00:07:56,000
size that we already have so we should

00:07:53,570 --> 00:07:59,240
really make a point in only packaging

00:07:56,000 --> 00:08:01,340
the more important ones so what I want

00:07:59,240 --> 00:08:04,940
to do next is give a few examples of

00:08:01,340 --> 00:08:07,669
really innovative things because at the

00:08:04,940 --> 00:08:11,240
beginning there was open source and then

00:08:07,669 --> 00:08:14,419
let's say nots I'm trying to catch up

00:08:11,240 --> 00:08:16,550
like give the same functionality as

00:08:14,419 --> 00:08:19,280
proprietary software but nowadays

00:08:16,550 --> 00:08:21,320
actually there's open source codes

00:08:19,280 --> 00:08:23,419
accepted especially in computation

00:08:21,320 --> 00:08:25,550
chemistry which even though more

00:08:23,419 --> 00:08:27,590
advanced and the best proprietary

00:08:25,550 --> 00:08:30,520
software codes or at least they caught

00:08:27,590 --> 00:08:35,330
up to it very much so so one of them is

00:08:30,520 --> 00:08:37,520
bagel which is done by Hiroshi Ozaki in

00:08:35,330 --> 00:08:38,930
northwestern and he basically wrote it

00:08:37,520 --> 00:08:41,089
over the last couple of three years with

00:08:38,930 --> 00:08:42,830
a couple of grad students himself but

00:08:41,089 --> 00:08:45,230
they're doing pretty awesome stuff for

00:08:42,830 --> 00:08:46,850
example on the fly Caspi due to surface

00:08:45,230 --> 00:08:49,820
hopping dynamics and nobody did that

00:08:46,850 --> 00:08:53,820
actually not even a so this is a paper

00:08:49,820 --> 00:08:55,710
from from a month ago or something

00:08:53,820 --> 00:08:59,880
I don't think there's even a proprietary

00:08:55,710 --> 00:09:03,390
part package that does that or just two

00:08:59,880 --> 00:09:06,540
weeks ago they published a new part of

00:09:03,390 --> 00:09:08,250
NW chem which is a huge codebase from

00:09:06,540 --> 00:09:12,060
the northwestern laboratory and in the

00:09:08,250 --> 00:09:15,930
u.s. pushing configuration interaction

00:09:12,060 --> 00:09:21,900
to the limit it's as you can maybe not

00:09:15,930 --> 00:09:23,970
read they have one trillion orbitals or

00:09:21,900 --> 00:09:25,830
whatever going on in there in their

00:09:23,970 --> 00:09:27,210
calculation so it's massive on huge

00:09:25,830 --> 00:09:30,240
clusters and then this is really

00:09:27,210 --> 00:09:34,350
competitive code or another one from

00:09:30,240 --> 00:09:36,630
Zurich they they're doing CP 2k which is

00:09:34,350 --> 00:09:41,750
a they became package for for a long

00:09:36,630 --> 00:09:44,010
time and they are actually simulating

00:09:41,750 --> 00:09:47,040
they have simulations with millions of

00:09:44,010 --> 00:09:49,560
atoms in one simulation and each atom is

00:09:47,040 --> 00:09:51,600
actually actually modeled on the quantum

00:09:49,560 --> 00:09:52,650
scale it's not just the sphere or

00:09:51,600 --> 00:09:56,640
something less you have in Mullica

00:09:52,650 --> 00:09:58,650
dynamics those are really quantum monika

00:09:56,640 --> 00:10:02,630
dynamics with real quantum chemistry

00:09:58,650 --> 00:10:05,910
behind it but on the other hand these

00:10:02,630 --> 00:10:07,890
advances in in open source got people

00:10:05,910 --> 00:10:10,830
quite a bit unhappy all these

00:10:07,890 --> 00:10:13,220
proprietary people and so for example a

00:10:10,830 --> 00:10:16,020
while ago there was this letter or this

00:10:13,220 --> 00:10:17,610
viewpoint they say in the Journal of

00:10:16,020 --> 00:10:19,230
chemistry a physical chemistry letter

00:10:17,610 --> 00:10:22,620
saying what a surprise if open source

00:10:19,230 --> 00:10:25,170
software and it was from Allah there was

00:10:22,620 --> 00:10:27,000
a 10 or 20 authors and there all the

00:10:25,170 --> 00:10:29,040
main authors of the proprietary software

00:10:27,000 --> 00:10:31,160
packages in the field of computation

00:10:29,040 --> 00:10:33,090
chemistry and they say yeah you know

00:10:31,160 --> 00:10:35,130
everybody says you should open source

00:10:33,090 --> 00:10:37,080
everything but really we have such a

00:10:35,130 --> 00:10:41,250
complicated codebase

00:10:37,080 --> 00:10:42,870
so for example Q chem has 300 papers and

00:10:41,250 --> 00:10:44,460
we have like 5 million or two and a half

00:10:42,870 --> 00:10:48,060
million lines of code and we have so

00:10:44,460 --> 00:10:51,840
many developers and it's really really

00:10:48,060 --> 00:10:54,510
hard work to do so we cannot just open

00:10:51,840 --> 00:10:57,860
source it and people should continue

00:10:54,510 --> 00:11:03,000
funding our proprietary model of

00:10:57,860 --> 00:11:05,640
innovation and actually what I've saw in

00:11:03,000 --> 00:11:07,260
the last couple of years is that there

00:11:05,640 --> 00:11:09,600
is a very big

00:11:07,260 --> 00:11:12,510
in the sense that funding agencies like

00:11:09,600 --> 00:11:16,140
the that case the German funding agency

00:11:12,510 --> 00:11:17,700
DFG are not funding well what they're

00:11:16,140 --> 00:11:21,000
doing is they're funding research for

00:11:17,700 --> 00:11:23,340
new algorithms and stuff but they won't

00:11:21,000 --> 00:11:25,800
fund proprietary software just for the

00:11:23,340 --> 00:11:27,030
maintenance of it so for example there's

00:11:25,800 --> 00:11:29,780
this code from Stuttgart

00:11:27,030 --> 00:11:32,190
called IMD and what they write is like

00:11:29,780 --> 00:11:35,250
IMD has now been placed under the GNU

00:11:32,190 --> 00:11:37,170
GPL as a consequence of moving the

00:11:35,250 --> 00:11:38,610
repository to github which that's a bit

00:11:37,170 --> 00:11:41,040
stupid because that's not a requirement

00:11:38,610 --> 00:11:43,260
but okay and the requirements of the

00:11:41,040 --> 00:11:44,520
funding agency DFG so the DFG told them

00:11:43,260 --> 00:11:46,050
okay if you want money from us you

00:11:44,520 --> 00:11:49,620
should make it open source and they did

00:11:46,050 --> 00:11:51,780
so that's quite a huge impact I guess

00:11:49,620 --> 00:11:54,360
that open source has there and I also

00:11:51,780 --> 00:11:54,660
heard from privately from a colleague of

00:11:54,360 --> 00:11:57,270
mine

00:11:54,660 --> 00:12:00,090
there is a huge coat in the fritz haben

00:11:57,270 --> 00:12:01,680
Institute in Berlin and they also have a

00:12:00,090 --> 00:12:05,070
lot of trouble because it's proprietary

00:12:01,680 --> 00:12:06,510
to get grants these days and what

00:12:05,070 --> 00:12:08,730
they're doing now is they're open

00:12:06,510 --> 00:12:12,210
sourcing their underlying linear linear

00:12:08,730 --> 00:12:14,370
algebra libraries and and trying to make

00:12:12,210 --> 00:12:16,830
new projects out of them so in order to

00:12:14,370 --> 00:12:18,600
get some funding at least because they

00:12:16,830 --> 00:12:20,430
cannot get funding for their proprietary

00:12:18,600 --> 00:12:22,500
parts so and there has been a couple of

00:12:20,430 --> 00:12:25,110
previous open sourcing and wkm I already

00:12:22,500 --> 00:12:26,610
mentioned I used to be proprietary but

00:12:25,110 --> 00:12:31,130
they open source at about ten years ago

00:12:26,610 --> 00:12:34,050
or something sorry sigh for these are

00:12:31,130 --> 00:12:37,650
standard packages were for students to

00:12:34,050 --> 00:12:39,360
simulate molecules and their rewrites

00:12:37,650 --> 00:12:42,480
subside one too used to be proprietary

00:12:39,360 --> 00:12:45,030
those are now GPL and CSS I just

00:12:42,480 --> 00:12:49,050
mentioned then there's any CI which just

00:12:45,030 --> 00:12:50,850
got open sourced couple of months ago so

00:12:49,050 --> 00:12:52,830
in a sense it was on github and then

00:12:50,850 --> 00:12:55,050
suddenly somebody put the GPL on it well

00:12:52,830 --> 00:12:57,710
one of the office so it's legit but now

00:12:55,050 --> 00:13:00,510
it's now it's really open source so

00:12:57,710 --> 00:13:02,190
that's as an introduction I want to just

00:13:00,510 --> 00:13:03,990
mention what what Debbie chem does these

00:13:02,190 --> 00:13:06,450
days these are the tasks and she has

00:13:03,990 --> 00:13:09,390
talked about it earlier so we split it

00:13:06,450 --> 00:13:12,000
up a bit more fine-grained in these days

00:13:09,390 --> 00:13:13,680
I actually did some work on that I think

00:13:12,000 --> 00:13:15,950
it didn't land in Jesse back then but

00:13:13,680 --> 00:13:18,890
now it's in stretch at least so we have

00:13:15,950 --> 00:13:21,740
twelve tasks I would say we have

00:13:18,890 --> 00:13:23,970
crystallography and

00:13:21,740 --> 00:13:26,070
analytical biochemistry this is what

00:13:23,970 --> 00:13:28,020
Rose Kony is mostly doing and I'm mostly

00:13:26,070 --> 00:13:30,060
working on molecule ab initio molecule

00:13:28,020 --> 00:13:31,980
dynamics mallika modeling and periodic

00:13:30,060 --> 00:13:34,890
ab initial stuff and then they have lots

00:13:31,980 --> 00:13:38,400
of packages which produce or in input

00:13:34,890 --> 00:13:42,090
output stuff there are some major

00:13:38,400 --> 00:13:44,040
packages which I don't want to get into

00:13:42,090 --> 00:13:47,070
because I don't have a lot of time I

00:13:44,040 --> 00:13:55,770
just want to mention that yeah there's

00:13:47,070 --> 00:13:57,750
also okay yeah for visualization for

00:13:55,770 --> 00:14:00,540
example we have time old we which got

00:13:57,750 --> 00:14:02,190
mentioned earlier very grateful that he

00:14:00,540 --> 00:14:05,210
got picked up because I didn't have the

00:14:02,190 --> 00:14:08,190
time and j/mol got also picked up by

00:14:05,210 --> 00:14:10,200
infinity zero I guess so this was

00:14:08,190 --> 00:14:13,470
finally upgraded so there's some some

00:14:10,200 --> 00:14:14,910
cooperation happening there so those are

00:14:13,470 --> 00:14:17,130
all the packages but there's also a lot

00:14:14,910 --> 00:14:19,320
of interdependencies on the packages so

00:14:17,130 --> 00:14:21,240
I decided to make a graph of all the

00:14:19,320 --> 00:14:23,910
bill dependencies at least for the

00:14:21,240 --> 00:14:26,220
computational chemistry packages so it's

00:14:23,910 --> 00:14:28,200
probably pretty bit difficult to read

00:14:26,220 --> 00:14:30,840
but those are the libraries and there

00:14:28,200 --> 00:14:35,220
lots of interdependencies for example

00:14:30,840 --> 00:14:38,520
npq c3 has a lot of libraries and lip XE

00:14:35,220 --> 00:14:40,740
def is used in a lot of packages the

00:14:38,520 --> 00:14:42,150
same as lip int these are just the

00:14:40,740 --> 00:14:44,730
chemistry packages one of them of course

00:14:42,150 --> 00:14:47,490
use the linear linear algebra packages

00:14:44,730 --> 00:14:53,220
like Blas la PUC or the MPI packages

00:14:47,490 --> 00:14:55,290
like openmpi and this one is how the

00:14:53,220 --> 00:14:57,420
input-output things work so we have a

00:14:55,290 --> 00:15:01,560
couple of packages like open bauble -

00:14:57,420 --> 00:15:04,590
AAC arrow Gaudreau and Travis and CC lip

00:15:01,560 --> 00:15:07,410
that parts the output of packages to

00:15:04,590 --> 00:15:09,600
either compute properties or just

00:15:07,410 --> 00:15:13,320
display properties of them or to

00:15:09,600 --> 00:15:16,050
transform those outputs into other file

00:15:13,320 --> 00:15:17,850
formats and what they also can do is

00:15:16,050 --> 00:15:21,900
produce inputs because most of these

00:15:17,850 --> 00:15:23,790
packages actually they still rely on

00:15:21,900 --> 00:15:25,740
text input and output so it's you have

00:15:23,790 --> 00:15:27,210
an input file you run the input file on

00:15:25,740 --> 00:15:30,180
some executable and then you get an

00:15:27,210 --> 00:15:31,650
output file but this is getting going

00:15:30,180 --> 00:15:34,250
even further for example there was a

00:15:31,650 --> 00:15:37,220
recent paper for acai for

00:15:34,250 --> 00:15:39,410
thus I for developers and they this is a

00:15:37,220 --> 00:15:41,690
actually a graph from their paper which

00:15:39,410 --> 00:15:45,730
is in the Journal of chemical theory and

00:15:41,690 --> 00:15:48,290
computation and they have all these

00:15:45,730 --> 00:15:50,600
external projects which they integrate

00:15:48,290 --> 00:15:53,900
and they all open source except for MRCC

00:15:50,600 --> 00:15:56,120
I think and we haven't packed well we

00:15:53,900 --> 00:15:58,460
have packaged slip int but all and chem

00:15:56,120 --> 00:16:00,710
mps - there are those - a package but

00:15:58,460 --> 00:16:03,320
other ones are still not packaged so we

00:16:00,710 --> 00:16:05,630
have quite some work to do here but they

00:16:03,320 --> 00:16:10,360
can also be used by by SCI for and in

00:16:05,630 --> 00:16:12,620
order to to it make their work better um

00:16:10,360 --> 00:16:14,810
couple of packages that are new and

00:16:12,620 --> 00:16:16,880
stretch I want to get into too much

00:16:14,810 --> 00:16:18,800
detail here but as I said jmo got

00:16:16,880 --> 00:16:20,690
updated that's that's great ciphers

00:16:18,800 --> 00:16:24,460
finally at one point zero this is a very

00:16:20,690 --> 00:16:28,910
standard package for people to work on

00:16:24,460 --> 00:16:31,190
CP 2k got updated and gramming brought a

00:16:28,910 --> 00:16:34,640
CD atomic system simulation environment

00:16:31,190 --> 00:16:36,530
into Debian finally I wanted to talk

00:16:34,640 --> 00:16:39,200
about it about outreach that I tried to

00:16:36,530 --> 00:16:41,870
do at least so in 2015 I gave a talk

00:16:39,200 --> 00:16:45,490
about CP 2k and epic am in zurich at the

00:16:41,870 --> 00:16:47,990
CP 2k develop a meeting which was quite

00:16:45,490 --> 00:16:50,210
nice there was also a guy from fedora

00:16:47,990 --> 00:16:52,670
there so they invited us giving a talk

00:16:50,210 --> 00:16:54,320
about how we package stuff and I also

00:16:52,670 --> 00:16:57,050
presented two posters in the summer of

00:16:54,320 --> 00:16:59,270
2015 at the 10th European conference and

00:16:57,050 --> 00:17:01,040
computation chemistry and folder and a

00:16:59,270 --> 00:17:03,500
few weeks later in the symposium for

00:17:01,040 --> 00:17:05,720
theoretical chemistry in Potsdam so I

00:17:03,500 --> 00:17:07,910
made this day became poster which was

00:17:05,720 --> 00:17:11,780
also actually in actually also presented

00:17:07,910 --> 00:17:13,490
in or it got printed for South Africa

00:17:11,780 --> 00:17:17,720
last year and hang up at the open day

00:17:13,490 --> 00:17:20,330
but I made this poster of Debbie cam all

00:17:17,720 --> 00:17:23,390
the capabilities of the computation in

00:17:20,330 --> 00:17:24,920
chemistry packages and got into some

00:17:23,390 --> 00:17:28,910
quite some interesting talk so a lot of

00:17:24,920 --> 00:17:31,280
those people knew debian but not really

00:17:28,910 --> 00:17:36,080
Debbie CEM it's always the same problem

00:17:31,280 --> 00:17:38,870
with the pure plans thing but that gave

00:17:36,080 --> 00:17:41,600
some some outreach I guess so finally I

00:17:38,870 --> 00:17:44,330
want to give it let's talk a little bit

00:17:41,600 --> 00:17:46,040
about what's what's left to do so one

00:17:44,330 --> 00:17:47,000
thing I think we should really do in a

00:17:46,040 --> 00:17:48,500
bit

00:17:47,000 --> 00:17:50,270
not happy that it's not happening

00:17:48,500 --> 00:17:52,970
upstream is that there should be more

00:17:50,270 --> 00:17:55,670
input-output pauses for for the DEP you

00:17:52,970 --> 00:17:59,210
can packages so we have a brigade row

00:17:55,670 --> 00:18:01,820
which is a graphical KDE application or

00:17:59,210 --> 00:18:04,220
cute application which can read them and

00:18:01,820 --> 00:18:07,370
generate input but it's not doing it for

00:18:04,220 --> 00:18:09,710
all the the packages we have an open

00:18:07,370 --> 00:18:13,430
Babel is is also an see Seelye these are

00:18:09,710 --> 00:18:14,990
packages which we could extend for

00:18:13,430 --> 00:18:17,000
example the CC lip it's just Python so

00:18:14,990 --> 00:18:19,100
it's rather easy so a couple of packages

00:18:17,000 --> 00:18:21,830
like CPT okay Babel and aces are not

00:18:19,100 --> 00:18:24,080
really represented there so maybe there

00:18:21,830 --> 00:18:26,930
is a G sub program google Summer of Code

00:18:24,080 --> 00:18:29,180
project looking there we should switch

00:18:26,930 --> 00:18:29,810
finally from subversion to get Daniel

00:18:29,180 --> 00:18:33,620
Ida

00:18:29,810 --> 00:18:36,350
like subversion very much so we didn't

00:18:33,620 --> 00:18:38,180
force it but he's not really active dead

00:18:36,350 --> 00:18:41,930
more and then if new people want to work

00:18:38,180 --> 00:18:43,910
on something they can just convert stuff

00:18:41,930 --> 00:18:45,800
to get as happen with Pamela I think for

00:18:43,910 --> 00:18:47,300
example and some others that's just a

00:18:45,800 --> 00:18:49,610
question of whether we just use the

00:18:47,300 --> 00:18:51,080
Debian directory or a full project it's

00:18:49,610 --> 00:18:53,480
easier I guess if you do the switch to

00:18:51,080 --> 00:18:56,330
just use the Debian directory but we see

00:18:53,480 --> 00:19:00,800
that I would like to get more serious on

00:18:56,330 --> 00:19:03,230
back ports I have been back porting one

00:19:00,800 --> 00:19:04,640
or two packages but not as well as the

00:19:03,230 --> 00:19:05,990
neuro Debian team knows they

00:19:04,640 --> 00:19:09,260
unfortunately not here but they are

00:19:05,990 --> 00:19:12,290
really doing great work on that and then

00:19:09,260 --> 00:19:14,360
there's the other things like what to do

00:19:12,290 --> 00:19:17,300
about the MPI implementation there was

00:19:14,360 --> 00:19:19,790
quite a few problems with MP openmpi in

00:19:17,300 --> 00:19:22,310
the stretched release cycle and I heard

00:19:19,790 --> 00:19:24,050
from some up streams that now open MPI

00:19:22,310 --> 00:19:26,630
is not working with us it's not it's not

00:19:24,050 --> 00:19:29,480
good if you actually have both multiple

00:19:26,630 --> 00:19:31,610
threats and multiple processes which

00:19:29,480 --> 00:19:33,890
nowadays is the case so you would have a

00:19:31,610 --> 00:19:35,990
cluster where you run the program on

00:19:33,890 --> 00:19:37,670
several nodes several computers on the

00:19:35,990 --> 00:19:39,470
cluster but each cluster would have 16

00:19:37,670 --> 00:19:41,960
cores so you don't want to run one

00:19:39,470 --> 00:19:43,930
threat on each node you want to run

00:19:41,960 --> 00:19:45,740
sixteen threats and then 16 cores and

00:19:43,930 --> 00:19:48,440
for that kind of thing apparently

00:19:45,740 --> 00:19:50,840
openmpi had a lot of problems but they

00:19:48,440 --> 00:19:52,700
are supposedly fixed so we'll see but I

00:19:50,840 --> 00:19:54,950
think one thing that it's going forward

00:19:52,700 --> 00:19:57,140
as we saw on the Debian science list I

00:19:54,950 --> 00:19:59,390
think that at least some packages like

00:19:57,140 --> 00:20:00,800
scalar pack will be compiled for both

00:19:59,390 --> 00:20:04,700
MPI CH and open

00:20:00,800 --> 00:20:06,950
API so you can choose your your stack so

00:20:04,700 --> 00:20:10,070
for example for bagel I use MPI CH

00:20:06,950 --> 00:20:12,560
because it was more stable the other

00:20:10,070 --> 00:20:14,630
thing is the D H Fortran for a 90 module

00:20:12,560 --> 00:20:16,760
thing that's looming over us all the

00:20:14,630 --> 00:20:20,330
time

00:20:16,760 --> 00:20:21,710
it's again stuck every debconf is going

00:20:20,330 --> 00:20:23,810
a bit forward but it's again stuck I

00:20:21,710 --> 00:20:25,700
guess so maybe we should I or somebody

00:20:23,810 --> 00:20:31,220
should start working on that I would

00:20:25,700 --> 00:20:36,650
also have things about more a bit bit

00:20:31,220 --> 00:20:38,660
about optimizing packages for production

00:20:36,650 --> 00:20:40,040
use so right now we have to go with the

00:20:38,660 --> 00:20:43,570
lowest common denominator which means

00:20:40,040 --> 00:20:45,560
MTU native or as such is not possible so

00:20:43,570 --> 00:20:47,120
it would be good if we could integrate

00:20:45,560 --> 00:20:49,100
it that you can just recompile your

00:20:47,120 --> 00:20:50,690
package and it's it's running at an at

00:20:49,100 --> 00:20:52,580
machine speed if that's actually useful

00:20:50,690 --> 00:20:54,890
we should also benchmark it it's bit

00:20:52,580 --> 00:20:56,810
difficult to say anything about it

00:20:54,890 --> 00:20:59,000
without running proper benchmarks and

00:20:56,810 --> 00:21:00,350
then we should remove the packages which

00:20:59,000 --> 00:21:02,750
are outdated so there's quite a few

00:21:00,350 --> 00:21:04,820
months which are 90s technology and

00:21:02,750 --> 00:21:06,500
there's been better ones in the same

00:21:04,820 --> 00:21:09,350
sins and we should look at them and

00:21:06,500 --> 00:21:11,030
actually remove them or maybe if there's

00:21:09,350 --> 00:21:13,270
just slow if they're doing computational

00:21:11,030 --> 00:21:15,500
stuff and other packages are way faster

00:21:13,270 --> 00:21:18,410
just remove them but we haven't really

00:21:15,500 --> 00:21:21,050
start doing that yeah so that's it

00:21:18,410 --> 00:21:22,490
basically for me that's some context we

00:21:21,050 --> 00:21:24,500
have a debit can be well mailing lists

00:21:22,490 --> 00:21:26,780
there's an Icee channel but it's not

00:21:24,500 --> 00:21:28,490
used really and the subversion and git

00:21:26,780 --> 00:21:32,180
repo and if you're interested in

00:21:28,490 --> 00:21:34,130
chemistry packaging always happy to

00:21:32,180 --> 00:21:37,220
collaborate or to help or if you could

00:21:34,130 --> 00:21:39,940
just give you access so thanks and is

00:21:37,220 --> 00:21:39,940
there any questions

00:21:42,770 --> 00:21:48,080
anyway anyway overruns anyway so I guess

00:21:45,670 --> 00:21:51,380
it's fine if there's no questions and

00:21:48,080 --> 00:21:55,070
we'll be continuing with the science

00:21:51,380 --> 00:21:59,020
buff in about nine minutes at half-past

00:21:55,070 --> 00:21:59,020

YouTube URL: https://www.youtube.com/watch?v=fKbM55OvF1M


