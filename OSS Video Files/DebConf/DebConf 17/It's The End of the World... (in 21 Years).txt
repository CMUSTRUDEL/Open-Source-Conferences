Title: It's The End of the World... (in 21 Years)
Publication date: 2017-12-06
Playlist: DebConf 17
Description: 
	by Steve McIntyre

At: DebConf17
https://debconf17.debconf.org/
Room: Bo
Scheduled start: 2017-08-07 11:00:00
Captions: 
	00:00:04,779 --> 00:00:17,420
right morning everyone right now clearly

00:00:16,070 --> 00:00:21,580
dead comp has been far too optimistic

00:00:17,420 --> 00:00:21,580
it's time to inject some doom and gloom

00:00:22,360 --> 00:00:30,830
hands off anyone here who doesn't know

00:00:25,400 --> 00:00:35,090
about the 2038 problem good it's time to

00:00:30,830 --> 00:00:41,239
have some education the world is going

00:00:35,090 --> 00:00:43,640
to end in january 2038 I'll be honest I

00:00:41,239 --> 00:00:46,130
do have a bit of a conflict of interest

00:00:43,640 --> 00:00:48,200
here as you'll see as well as being a

00:00:46,130 --> 00:00:51,649
Debian developer I also own the domain

00:00:48,200 --> 00:00:58,250
fixed 2038 comm this is my pension that

00:00:51,649 --> 00:00:59,390
I'm spoiling so quick do a quick

00:00:58,250 --> 00:01:01,640
run-through while I'm going to talk

00:00:59,390 --> 00:01:03,620
about by the way I'm not expecting this

00:01:01,640 --> 00:01:07,159
to just be me talking I do want feedback

00:01:03,620 --> 00:01:09,740
I do want you guys to get involved so

00:01:07,159 --> 00:01:12,460
what's up when when are we all going to

00:01:09,740 --> 00:01:16,490
die what do we need to do to not die

00:01:12,460 --> 00:01:18,890
what the current state is and please

00:01:16,490 --> 00:01:20,900
this is above as I always want these

00:01:18,890 --> 00:01:23,600
things I do promise I will send a

00:01:20,900 --> 00:01:25,939
summary of the discussion to the mailing

00:01:23,600 --> 00:01:29,260
lists later if somebody can please take

00:01:25,939 --> 00:01:29,260
notes in gobby that would be lovely

00:01:29,560 --> 00:01:37,580
so time T it's really really simple

00:01:34,430 --> 00:01:41,060
it simply counts the number of seconds

00:01:37,580 --> 00:01:44,150
since the beginning of 1974 for many of

00:01:41,060 --> 00:01:45,860
us that if that is really really long

00:01:44,150 --> 00:01:47,570
ago some of us in the room were built

00:01:45,860 --> 00:01:52,670
were born before the beginning of time

00:01:47,570 --> 00:01:54,770
let's try not to mock them too much and

00:01:52,670 --> 00:01:58,630
of course when they when the UNIX people

00:01:54,770 --> 00:02:02,600
in it came up with this back in 1970

00:01:58,630 --> 00:02:05,570
well 32 bit sorry 31 bits of time tea

00:02:02,600 --> 00:02:07,790
was plenty it was never going to run out

00:02:05,570 --> 00:02:11,170
it's like 640 K is going to be enough

00:02:07,790 --> 00:02:14,329
for everyone it's who'd have thought it

00:02:11,170 --> 00:02:16,950
so we have a problem

00:02:14,329 --> 00:02:20,220
in that it's it's signed

00:02:16,950 --> 00:02:21,510
and therefore it's 31 bits therefore

00:02:20,220 --> 00:02:25,440
it's going to rap and it's going to rap

00:02:21,510 --> 00:02:28,770
quite soon we have a second problem in

00:02:25,440 --> 00:02:30,209
that there's used everywhere I'll go

00:02:28,770 --> 00:02:33,930
through that a bit more later

00:02:30,209 --> 00:02:38,250
now imagine y2k except this time it's

00:02:33,930 --> 00:02:44,790
going to be worse what could possibly go

00:02:38,250 --> 00:02:49,080
wrong now again I'm not trying to

00:02:44,790 --> 00:02:50,430
exaggerate this too much but for most of

00:02:49,080 --> 00:02:54,060
the things that we had to worry about

00:02:50,430 --> 00:02:55,890
for y2k they were big obvious computers

00:02:54,060 --> 00:02:57,750
and could point out them they were

00:02:55,890 --> 00:02:59,310
mainframes typically there were a few

00:02:57,750 --> 00:03:00,870
other bits and pieces around you have to

00:02:59,310 --> 00:03:03,630
think about but that was the call that

00:03:00,870 --> 00:03:05,310
people cared about it was a oh my god or

00:03:03,630 --> 00:03:07,830
the banking systems gonna work tomorrow

00:03:05,310 --> 00:03:09,269
or you know all the cellular networks

00:03:07,830 --> 00:03:13,350
going to work tomorrow that kind of

00:03:09,269 --> 00:03:15,780
thing and dare I say it was a bit of an

00:03:13,350 --> 00:03:18,180
anti-climax that's not because it wasn't

00:03:15,780 --> 00:03:22,280
a problem but people did think about it

00:03:18,180 --> 00:03:22,280
and get and work on this well in advance

00:03:22,400 --> 00:03:26,700
well you know a bit of an anecdote the

00:03:24,840 --> 00:03:29,880
company I was working for at the time I

00:03:26,700 --> 00:03:33,230
actually volunteered to be on-call

00:03:29,880 --> 00:03:36,750
overnight for the new year wise UK

00:03:33,230 --> 00:03:38,130
obviously a suitably accelerated pace

00:03:36,750 --> 00:03:41,160
you know pay scale for that evening

00:03:38,130 --> 00:03:43,350
because I was totally happy that I knew

00:03:41,160 --> 00:03:45,060
all of our code worked and if it didn't

00:03:43,350 --> 00:03:46,320
well the mobile networks are never going

00:03:45,060 --> 00:03:49,049
to work so nobody could get through to

00:03:46,320 --> 00:03:53,370
me unfortunately my boss saw this coming

00:03:49,049 --> 00:03:55,980
and said no that our big problem as I

00:03:53,370 --> 00:03:57,870
said when we get to 20 38 is that we're

00:03:55,980 --> 00:04:03,780
not just going to be looking at big

00:03:57,870 --> 00:04:05,760
obvious computers in 20 years you know

00:04:03,780 --> 00:04:07,380
if the sci-fi authors are correct we're

00:04:05,760 --> 00:04:09,090
gonna have the sensor cloud we're going

00:04:07,380 --> 00:04:11,160
to have things that are too small to see

00:04:09,090 --> 00:04:13,139
and they're going to be computers or

00:04:11,160 --> 00:04:15,329
they're going to be sufficiently like

00:04:13,139 --> 00:04:18,000
computers that actually we need to worry

00:04:15,329 --> 00:04:20,370
about this because of course you won't

00:04:18,000 --> 00:04:23,400
be able to go all that computer needs

00:04:20,370 --> 00:04:25,409
fixing it will be a your washing machine

00:04:23,400 --> 00:04:27,450
will have a hundred different computers

00:04:25,409 --> 00:04:29,370
in it and you'll have no idea how to

00:04:27,450 --> 00:04:31,090
talk to them let alone to verify affect

00:04:29,370 --> 00:04:36,740
away

00:04:31,090 --> 00:04:38,600
plus of course planes cars underwear who

00:04:36,740 --> 00:04:43,430
knows what but you know if it goes bad

00:04:38,600 --> 00:04:45,770
it goes really bad so when does it

00:04:43,430 --> 00:04:47,480
happen this example I actually took or

00:04:45,770 --> 00:04:49,010
lifted almost straight from the man page

00:04:47,480 --> 00:04:49,850
for date all the people are thinking

00:04:49,010 --> 00:04:56,200
about this

00:04:49,850 --> 00:04:58,720
so in on the 19th of january 2038

00:04:56,200 --> 00:05:01,160
potentially we all go back to 1902

00:04:58,720 --> 00:05:05,930
depending on how bad things were badly

00:05:01,160 --> 00:05:10,610
things worked so what in fact needs

00:05:05,930 --> 00:05:12,260
doing we have lots and lots and lots of

00:05:10,610 --> 00:05:17,000
things from the bottom of the stack

00:05:12,260 --> 00:05:19,310
upwards in the worst cases on disk

00:05:17,000 --> 00:05:21,410
formats of file systems on disk formats

00:05:19,310 --> 00:05:22,930
for all kinds of other data as well but

00:05:21,410 --> 00:05:51,530
the file systems were using today

00:05:22,930 --> 00:05:55,040
typically or not year 2038 safe dose on

00:05:51,530 --> 00:05:58,010
yourface systems like it's for us and so

00:05:55,040 --> 00:06:01,640
on all file system versions are 2038

00:05:58,010 --> 00:06:05,240
safe they use 64 bits of time which is

00:06:01,640 --> 00:06:09,160
34 bits of seconds so that will last

00:06:05,240 --> 00:06:12,380
until we're all gone and 30 30 bits of

00:06:09,160 --> 00:06:14,480
nanoseconds if I remember correctly most

00:06:12,380 --> 00:06:17,840
of the normal file systems that you're

00:06:14,480 --> 00:06:19,430
likely to play with today however will

00:06:17,840 --> 00:06:22,490
die

00:06:19,430 --> 00:06:24,860
I say they'll die they will do weird and

00:06:22,490 --> 00:06:26,420
wonderful things probably beyond just

00:06:24,860 --> 00:06:29,000
tell you the wrong time

00:06:26,420 --> 00:06:31,960
but depending on exactly the code and

00:06:29,000 --> 00:06:35,840
file systems behavior will break

00:06:31,960 --> 00:06:37,730
obviously this is a problem there are

00:06:35,840 --> 00:06:40,580
lots and lots of places inside the Linux

00:06:37,730 --> 00:06:42,560
kernel were you know 32-bit time T is

00:06:40,580 --> 00:06:43,940
passed around that's being fixed I'll

00:06:42,560 --> 00:06:46,250
come to that later

00:06:43,940 --> 00:06:48,290
though or worse there are lots of kernel

00:06:46,250 --> 00:06:51,440
interfaces and above that there were

00:06:48,290 --> 00:06:57,800
lots of libraries that use a 32-bit time

00:06:51,440 --> 00:06:59,950
T and related variables related

00:06:57,800 --> 00:07:03,860
structures that depend on it

00:06:59,950 --> 00:07:05,750
so and finally obviously all the

00:07:03,860 --> 00:07:07,250
applications out there that might be

00:07:05,750 --> 00:07:09,470
using it a lot of people may not even

00:07:07,250 --> 00:07:11,480
realize that they care about time

00:07:09,470 --> 00:07:13,700
but the interfaces are they using from

00:07:11,480 --> 00:07:19,100
the libraries underneath embed it all

00:07:13,700 --> 00:07:21,670
over the place so Linux kernel I'll go

00:07:19,100 --> 00:07:24,740
through what progress we currently have

00:07:21,670 --> 00:07:26,030
deeper dinner mommy I'm probably going

00:07:24,740 --> 00:07:28,910
to pronounce that horribly wrong they

00:07:26,030 --> 00:07:31,220
apologize and arm Bergman

00:07:28,910 --> 00:07:34,220
are running a project under the kernel

00:07:31,220 --> 00:07:37,250
newbies umbrella to at least work out

00:07:34,220 --> 00:07:39,560
what needs to be done here they have a

00:07:37,250 --> 00:07:41,990
page they and there is a mailing list

00:07:39,560 --> 00:07:43,580
hosted by the folks at Lennar oh were

00:07:41,990 --> 00:07:46,010
people are currently discussing this

00:07:43,580 --> 00:07:49,640
right now while we have plenty of time

00:07:46,010 --> 00:07:51,320
to think about this aren't and others

00:07:49,640 --> 00:07:55,040
are using this as a good way of getting

00:07:51,320 --> 00:07:56,600
people into early simple kernel

00:07:55,040 --> 00:07:58,490
development you don't need to know a

00:07:56,600 --> 00:08:01,520
huge amount to be able to go through and

00:07:58,490 --> 00:08:03,169
pick up that looks like a 32-bit value

00:08:01,520 --> 00:08:06,770
that's being used for time we should fix

00:08:03,169 --> 00:08:08,480
that and at least documented also people

00:08:06,770 --> 00:08:10,910
can work on it

00:08:08,480 --> 00:08:11,600
they've started adding some 64-bit code

00:08:10,910 --> 00:08:14,930
in the middle

00:08:11,600 --> 00:08:17,990
they've started fixing drivers how my

00:08:14,930 --> 00:08:21,050
slides don't fit they've started adding

00:08:17,990 --> 00:08:23,960
new versions of interfaces so I up tools

00:08:21,050 --> 00:08:25,580
zest calls and a few other things that

00:08:23,960 --> 00:08:28,580
you might not think about I'm not going

00:08:25,580 --> 00:08:30,500
to go into all the details right now the

00:08:28,580 --> 00:08:32,240
fun thing is of course that we can't

00:08:30,500 --> 00:08:33,080
just replace all of the existing

00:08:32,240 --> 00:08:34,820
syscalls

00:08:33,080 --> 00:08:38,030
because everything else will break right

00:08:34,820 --> 00:08:40,750
now not in 20 years so what we're

00:08:38,030 --> 00:08:43,910
looking at doing is adding more

00:08:40,750 --> 00:08:45,410
equivalent versions of old test calls so

00:08:43,910 --> 00:08:48,080
the SIS call table is going to carry on

00:08:45,410 --> 00:08:51,470
growing if anybody if anybody looks at

00:08:48,080 --> 00:08:54,410
that though I'll lots and lots and lots

00:08:51,470 --> 00:08:56,270
of tasks here if you go and have a look

00:08:54,410 --> 00:08:57,320
at that page this is a great place to

00:08:56,270 --> 00:08:58,970
get involved right

00:08:57,320 --> 00:09:01,760
right now there's a lot of help

00:08:58,970 --> 00:09:06,320
available and people would love it if

00:09:01,760 --> 00:09:09,190
you if you join in so gilepsy

00:09:06,320 --> 00:09:11,660
is obviously the next thing up the stack

00:09:09,190 --> 00:09:15,320
essentially everything to a first

00:09:11,660 --> 00:09:18,320
approximation depends on gilepsy those

00:09:15,320 --> 00:09:18,890
guys are being as thorough as they

00:09:18,320 --> 00:09:21,740
normally are

00:09:18,890 --> 00:09:24,080
they have really detailed plans that

00:09:21,740 --> 00:09:25,910
they've started in their wiki they

00:09:24,080 --> 00:09:28,220
haven't started work on this they're

00:09:25,910 --> 00:09:30,290
still drafting the plans but again

00:09:28,220 --> 00:09:34,520
they're going to be adding 64-bit time

00:09:30,290 --> 00:09:37,580
support in a new set of library calls

00:09:34,520 --> 00:09:41,180
without obviously breaking 32-bit

00:09:37,580 --> 00:09:43,790
support there's more coverage of this in

00:09:41,180 --> 00:09:46,790
a very good lwn article which I've

00:09:43,790 --> 00:09:51,290
linked obviously the G Lib C folks

00:09:46,790 --> 00:09:55,490
cannot even start testing this until

00:09:51,290 --> 00:09:57,470
they have a 2038 safe Colonel again

00:09:55,490 --> 00:09:59,270
there was a huge amount of work to do

00:09:57,470 --> 00:10:01,520
here if you're interested

00:09:59,270 --> 00:10:08,630
those guys are also looking for help

00:10:01,520 --> 00:10:10,700
please go and dive in so elsewhere other

00:10:08,630 --> 00:10:12,380
work again if you're further up the

00:10:10,700 --> 00:10:14,240
stack you can't really test much of this

00:10:12,380 --> 00:10:17,480
until you have the layers underneath you

00:10:14,240 --> 00:10:19,310
working but it's not clear how much

00:10:17,480 --> 00:10:24,110
progress people have actually put into

00:10:19,310 --> 00:10:26,300
this I'll admit I intend to concentrate

00:10:24,110 --> 00:10:28,550
on Linux I haven't looked dirt at the

00:10:26,300 --> 00:10:30,320
herd kernel at the K FreeBSD kernel or

00:10:28,550 --> 00:10:33,260
so at the freebsd kernel or anywhere

00:10:30,320 --> 00:10:34,910
else these people are all going to have

00:10:33,260 --> 00:10:37,480
to connect a have to go through the same

00:10:34,910 --> 00:10:39,380
kinds of solutions

00:10:37,480 --> 00:10:43,240
hopefully people are going to come up

00:10:39,380 --> 00:10:45,380
with a new compatible way of working it

00:10:43,240 --> 00:10:46,490
what a lot of the interfaces were

00:10:45,380 --> 00:10:49,520
looking at at the moment that have

00:10:46,490 --> 00:10:50,690
broken or POSIX interfaces I'm assuming

00:10:49,520 --> 00:10:54,380
that we're going to end up with you've

00:10:50,690 --> 00:10:56,990
new POSIX approved interfaces like this

00:10:54,380 --> 00:11:00,890
but there's not much sign of it

00:10:56,990 --> 00:11:04,580
happening yet now lots and lots and lots

00:11:00,890 --> 00:11:05,980
and lots and lots of libraries are going

00:11:04,580 --> 00:11:10,160
to need updates here

00:11:05,980 --> 00:11:11,210
anything that embeds a time T clearly

00:11:10,160 --> 00:11:14,690
will need fixing

00:11:11,210 --> 00:11:19,550
time Val embeds a time T so you may not

00:11:14,690 --> 00:11:24,710
realize time spec embeds a time T almost

00:11:19,550 --> 00:11:27,650
anything that is using Lib C exposed

00:11:24,710 --> 00:11:30,320
timing functions is going to need

00:11:27,650 --> 00:11:32,180
upgrading is going to need updating you

00:11:30,320 --> 00:11:34,190
might not realize it the libraries

00:11:32,180 --> 00:11:37,280
underneath your application might are

00:11:34,190 --> 00:11:40,490
likely to need it because again anything

00:11:37,280 --> 00:11:44,300
that embeds things here is going to

00:11:40,490 --> 00:11:47,750
break so that that's that's why this is

00:11:44,300 --> 00:11:50,780
such a scary thing it's not just a you

00:11:47,750 --> 00:11:53,810
know set - t time bits equal 64 and

00:11:50,780 --> 00:11:55,780
recompile anything that is embedding

00:11:53,810 --> 00:11:58,370
stuff here is potentially breakable

00:11:55,780 --> 00:12:01,730
we're going to have to do lots and lots

00:11:58,370 --> 00:12:04,070
of mass rebuilds and people are already

00:12:01,730 --> 00:12:06,650
talking about doing automated scanning

00:12:04,070 --> 00:12:08,150
for these things and trying to pick up

00:12:06,650 --> 00:12:11,060
where maybe I'd break for example

00:12:08,150 --> 00:12:13,670
because of course any library functions

00:12:11,060 --> 00:12:16,520
that that embed any timing functions at

00:12:13,670 --> 00:12:19,070
all are going to change in size if

00:12:16,520 --> 00:12:21,680
you've been clever and kept this neat

00:12:19,070 --> 00:12:22,820
then you might be great if you think

00:12:21,680 --> 00:12:26,630
you've been really clever

00:12:22,820 --> 00:12:29,180
you've possibly made it worse because

00:12:26,630 --> 00:12:32,290
and I'll go start the bottom of this one

00:12:29,180 --> 00:12:35,150
whatever you do do not bog around this

00:12:32,290 --> 00:12:38,690
people have had clever ideas like this

00:12:35,150 --> 00:12:40,760
so many times over the years were they

00:12:38,690 --> 00:12:42,950
think oh well I know what a time T looks

00:12:40,760 --> 00:12:44,900
like but I don't like using time T or I

00:12:42,950 --> 00:12:47,000
can't guarantee I'll I'll be able to

00:12:44,900 --> 00:12:50,150
have it on all platforms so I'll use an

00:12:47,000 --> 00:12:51,920
int that's great it works for you today

00:12:50,150 --> 00:12:54,560
but it also means that the poor buggers

00:12:51,920 --> 00:12:58,300
20 years later who've got to go scanning

00:12:54,560 --> 00:13:02,120
for embedded time T won't find that code

00:12:58,300 --> 00:13:04,220
and if the really clever people who

00:13:02,120 --> 00:13:08,510
start thinking all I need and more

00:13:04,220 --> 00:13:11,090
flexible structure I need a better way

00:13:08,510 --> 00:13:12,950
of storing this that is bigger I know

00:13:11,090 --> 00:13:16,640
I'll store this in a float to a double

00:13:12,950 --> 00:13:18,730
oh my god please don't really it's the

00:13:16,640 --> 00:13:22,700
worst thing ever

00:13:18,730 --> 00:13:24,420
so if the things that people can do now

00:13:22,700 --> 00:13:27,480
is help with

00:13:24,420 --> 00:13:29,459
kanji lib see folks the wall plant there

00:13:27,480 --> 00:13:31,459
are people already working on this there

00:13:29,459 --> 00:13:36,480
was an almost unlimited amount of work

00:13:31,459 --> 00:13:39,480
yes so today I should be using time T

00:13:36,480 --> 00:13:41,760
and expect that it will change size or

00:13:39,480 --> 00:13:44,279
if I'm writing new code should I be

00:13:41,760 --> 00:13:46,550
using like is there like time 64 -

00:13:44,279 --> 00:13:50,370
underscore T or something like that

00:13:46,550 --> 00:13:52,410
right now your best bet is 20 just use

00:13:50,370 --> 00:13:54,930
time - you can assume that in the future

00:13:52,410 --> 00:13:57,269
they'll have an API break exactly I

00:13:54,930 --> 00:14:00,720
think expect that things are going to

00:13:57,269 --> 00:14:07,680
change but using time T and keeping on

00:14:00,720 --> 00:14:09,480
top of it is the right answer I use

00:14:07,680 --> 00:14:12,329
quite a lot of structures in small

00:14:09,480 --> 00:14:14,339
embedded is it worth me padding a 32 bit

00:14:12,329 --> 00:14:18,139
in front such that my structures still

00:14:14,339 --> 00:14:21,389
aligned when we move to 64-bit - maybe

00:14:18,139 --> 00:14:22,290
it depends well what are you doing with

00:14:21,389 --> 00:14:24,149
that with that structure

00:14:22,290 --> 00:14:25,769
well I'm thinking more along the lines

00:14:24,149 --> 00:14:27,630
funny any comes backwards and forwards

00:14:25,769 --> 00:14:32,430
so when I move to 64-bit I'm not going

00:14:27,630 --> 00:14:35,010
to hit any word boundaries and any

00:14:32,430 --> 00:14:36,060
issues of block devices and so on so

00:14:35,010 --> 00:14:38,579
I've got to at least get the same

00:14:36,060 --> 00:14:42,930
performance that I'm expecting now with

00:14:38,579 --> 00:14:45,180
32-bit T maybe you sing about having

00:14:42,930 --> 00:14:47,760
something bended so that it would still

00:14:45,180 --> 00:14:50,370
a line alignment is highly random and

00:14:47,760 --> 00:14:52,560
unpredictable across architectures so

00:14:50,370 --> 00:14:54,779
placing something in front of it now and

00:14:52,560 --> 00:14:57,810
then hoping it will still aligned when

00:14:54,779 --> 00:14:59,310
time T becomes 64-bit is a very little

00:14:57,810 --> 00:15:02,370
bit more along the lines of my coms

00:14:59,310 --> 00:15:05,399
packets yeah but still it's the best

00:15:02,370 --> 00:15:07,769
ball embedded what I will say is trying

00:15:05,399 --> 00:15:11,760
to second-guess this might only make it

00:15:07,769 --> 00:15:13,560
worse what you may find is that by the

00:15:11,760 --> 00:15:16,230
time people are freshest out and gone

00:15:13,560 --> 00:15:18,569
and gone through discussions all over

00:15:16,230 --> 00:15:21,269
the world that instead of just going to

00:15:18,569 --> 00:15:24,690
a simple 64-bit value instead we end up

00:15:21,269 --> 00:15:27,449
with 128 bit structure with extra bits

00:15:24,690 --> 00:15:29,100
and at that point you've then left your

00:15:27,449 --> 00:15:31,680
padding but you'll still have to do work

00:15:29,100 --> 00:15:33,089
later anyway so second-guessing is hard

00:15:31,680 --> 00:15:35,790
I appreciate that

00:15:33,089 --> 00:15:37,430
which is why a lot of this is be aware

00:15:35,790 --> 00:15:40,190
this is coming

00:15:37,430 --> 00:15:42,640
get involved don't necessarily expect to

00:15:40,190 --> 00:15:49,700
be changing your code for this today

00:15:42,640 --> 00:15:51,950
beyond taking out the bages so check

00:15:49,700 --> 00:15:56,480
your code check and also check your

00:15:51,950 --> 00:16:01,130
dependencies as I said there is a lot of

00:15:56,480 --> 00:16:05,570
code here that that is going to break so

00:16:01,130 --> 00:16:08,779
as I said that is the call of what of

00:16:05,570 --> 00:16:10,640
the message I want to give I'm not

00:16:08,779 --> 00:16:12,200
planning on talking about this much I

00:16:10,640 --> 00:16:14,600
will answer questions but please

00:16:12,200 --> 00:16:20,089
does anybody have any more questions any

00:16:14,600 --> 00:16:21,620
more points they wish to ace probably so

00:16:20,089 --> 00:16:23,600
first of all I want to say how annoyed I

00:16:21,620 --> 00:16:25,880
am that you're giving this talk because

00:16:23,600 --> 00:16:27,890
during y2k I took a lot of mental notes

00:16:25,880 --> 00:16:29,959
and I had this plan yeah hoping that

00:16:27,890 --> 00:16:31,399
everyone would ignore this and in 2034 I

00:16:29,959 --> 00:16:33,260
was gonna launch this consulting

00:16:31,399 --> 00:16:33,709
business you've seen that did you come

00:16:33,260 --> 00:16:37,279
in late

00:16:33,709 --> 00:16:39,050
I have oh I just like 15 years ago why

00:16:37,279 --> 00:16:40,970
register that domain and I've kept it

00:16:39,050 --> 00:16:42,320
going with it with a holding page but

00:16:40,970 --> 00:16:43,940
you realize that for that plan to work

00:16:42,320 --> 00:16:45,589
we were all supposed to be silent till

00:16:43,940 --> 00:16:48,260
about twenty thirty four twenty thirty

00:16:45,589 --> 00:16:50,180
so you see growing up the plan I'm being

00:16:48,260 --> 00:16:52,750
out I'm being altruistic and I am

00:16:50,180 --> 00:16:56,060
destroying my own pension plan here so

00:16:52,750 --> 00:16:58,250
you're hurting everyone the plan is to

00:16:56,060 --> 00:16:59,480
stay quiet till twenty thirty four and

00:16:58,250 --> 00:17:01,940
then we launched our consulting business

00:16:59,480 --> 00:17:05,120
I'm so it's too late my management

00:17:01,940 --> 00:17:06,890
meeting this anyways so that's fine but

00:17:05,120 --> 00:17:09,350
in seriousness so yeah I mean I think I

00:17:06,890 --> 00:17:11,230
think one of one of the things we we

00:17:09,350 --> 00:17:14,990
face is is up and down the stack right

00:17:11,230 --> 00:17:17,120
and I'm wondering if is anybody working

00:17:14,990 --> 00:17:19,040
on you mention this they're sort of

00:17:17,120 --> 00:17:21,679
scanning for this there are there are

00:17:19,040 --> 00:17:24,620
sort of two related areas of computer

00:17:21,679 --> 00:17:25,819
science that are free software analysis

00:17:24,620 --> 00:17:27,770
stuff they're going on one is the

00:17:25,819 --> 00:17:29,510
license scanning people yeah so they're

00:17:27,770 --> 00:17:30,650
obsessed with finding licenses there's

00:17:29,510 --> 00:17:32,150
most of the license scanners are

00:17:30,650 --> 00:17:33,500
proprietary but there are some free ones

00:17:32,150 --> 00:17:37,340
has anybody looked at applying that

00:17:33,500 --> 00:17:39,290
technology to finding time jump in code

00:17:37,340 --> 00:17:41,150
and the second question related is

00:17:39,290 --> 00:17:43,070
anybody working on static analysis stuff

00:17:41,150 --> 00:17:45,620
and program slicing computer science

00:17:43,070 --> 00:17:47,450
stuff that would find where time T is

00:17:45,620 --> 00:17:49,540
being thrown into inch and other sorts

00:17:47,450 --> 00:17:51,700
of things I've heard the

00:17:49,540 --> 00:17:56,490
the karate people are looking at this

00:17:51,700 --> 00:17:59,080
for example Coverity not free software

00:17:56,490 --> 00:18:03,700
but what one-on-one of one of the

00:17:59,080 --> 00:18:06,430
best-known commercial already though I'm

00:18:03,700 --> 00:18:07,750
absolutely certain that people are

00:18:06,430 --> 00:18:09,730
already looking at this for the free

00:18:07,750 --> 00:18:12,370
software things I'll be brutally honest

00:18:09,730 --> 00:18:14,050
I prepared two slides the other day and

00:18:12,370 --> 00:18:16,300
I haven't had time to check back since

00:18:14,050 --> 00:18:18,040
to really look into that definitely it's

00:18:16,300 --> 00:18:32,350
something that would that volunteers to

00:18:18,040 --> 00:18:37,120
help with would be great run and Iran so

00:18:32,350 --> 00:18:40,230
there's a class of bugs that is like

00:18:37,120 --> 00:18:41,560
really slightly further out which is

00:18:40,230 --> 00:18:44,890
unsigned

00:18:41,560 --> 00:18:48,760
yeah I'm which exists for example in

00:18:44,890 --> 00:18:50,380
every single PGP packet on sometime so

00:18:48,760 --> 00:18:52,540
we have like a few more years to deal

00:18:50,380 --> 00:18:55,810
with that but also it's definitely not

00:18:52,540 --> 00:18:58,600
in a time T because it's unsigned so we

00:18:55,810 --> 00:18:59,950
have to like be looking for some of

00:18:58,600 --> 00:19:01,180
those bages aren't just because someone

00:18:59,950 --> 00:19:03,040
was trying to be smart the format it's

00:19:01,180 --> 00:19:06,010
actually different oh absolutely

00:19:03,040 --> 00:19:07,660
so I'm going to jokingly put my head in

00:19:06,010 --> 00:19:08,860
the sand say our words now don't worry

00:19:07,660 --> 00:19:09,310
about it we're never going to get that

00:19:08,860 --> 00:19:14,440
far

00:19:09,310 --> 00:19:15,880
voice I'm not secondly yes the paternal

00:19:14,440 --> 00:19:18,340
folks are looking at fixing this or

00:19:15,880 --> 00:19:20,860
better so rather than just err oh we

00:19:18,340 --> 00:19:23,500
need to pump on this down the road we're

00:19:20,860 --> 00:19:25,840
not looking at anybody were to say let's

00:19:23,500 --> 00:19:29,520
just extend this or let's Oh

00:19:25,840 --> 00:19:33,190
lots and lots of the y2k fixes were just

00:19:29,520 --> 00:19:35,290
lets change where the epoch is so you

00:19:33,190 --> 00:19:37,570
know assume anything within it with a

00:19:35,290 --> 00:19:40,480
two-digit date must have started must be

00:19:37,570 --> 00:19:43,120
relative to 1950 instead of 1900 that

00:19:40,480 --> 00:19:44,710
kind of crap we can't do that because

00:19:43,120 --> 00:19:45,930
what we shouldn't we mustn't do that

00:19:44,710 --> 00:19:48,670
we're better than that

00:19:45,930 --> 00:19:50,800
we have plenty time to see this coming

00:19:48,670 --> 00:19:53,350
and do it right now

00:19:50,800 --> 00:19:55,660
the reason why again a lot of us are

00:19:53,350 --> 00:19:57,280
making noise about this is most of the

00:19:55,660 --> 00:19:59,950
systems that we are going to be running

00:19:57,280 --> 00:20:01,820
that we know about in 2038 are going to

00:19:59,950 --> 00:20:04,610
be 64-bit clean

00:20:01,820 --> 00:20:06,770
you know debian and all of the linux

00:20:04,610 --> 00:20:08,780
distros of course are going to be fine

00:20:06,770 --> 00:20:11,030
because he'll will have rebuilt the

00:20:08,780 --> 00:20:14,960
world the big problem that we have is

00:20:11,030 --> 00:20:17,180
that the Internet of Things we have a

00:20:14,960 --> 00:20:19,220
vast number of machines we're going to

00:20:17,180 --> 00:20:21,830
have by then probably trillions of

00:20:19,220 --> 00:20:24,440
little machines which we won't be able

00:20:21,830 --> 00:20:28,310
to identify we won't be able toward it

00:20:24,440 --> 00:20:31,790
we won't know that they're safe until

00:20:28,310 --> 00:20:34,040
they fail and and yeah and we won't be

00:20:31,790 --> 00:20:36,470
able to rebuild them so this is why we

00:20:34,040 --> 00:20:39,470
need to get this fixed as soon as buddy

00:20:36,470 --> 00:20:43,430
possible so that people building those

00:20:39,470 --> 00:20:46,100
systems will be able you know or not so

00:20:43,430 --> 00:20:47,480
much we'll be able to but we'll just be

00:20:46,100 --> 00:20:55,060
building on top of things that already

00:20:47,480 --> 00:20:58,010
work right and the 2038 is also the last

00:20:55,060 --> 00:20:59,840
estimated deadline but anything that

00:20:58,010 --> 00:21:01,940
still states in the future like

00:20:59,840 --> 00:21:05,660
expiration date of your carton of milk

00:21:01,940 --> 00:21:10,550
or appointments for next year or

00:21:05,660 --> 00:21:13,639
scheduling tax whatever or expire when

00:21:10,550 --> 00:21:17,749
your child reaches

00:21:13,639 --> 00:21:20,329
or voting-age all that sort of things

00:21:17,749 --> 00:21:26,899
will start failing nicely in advance if

00:21:20,329 --> 00:21:28,779
it uses taunting sure absolutely I think

00:21:26,899 --> 00:21:32,509
it's also an interesting question like

00:21:28,779 --> 00:21:34,849
which systems or libraries use time T

00:21:32,509 --> 00:21:36,829
which shouldn't be there or it's not

00:21:34,849 --> 00:21:38,359
really necessary for you you see for

00:21:36,829 --> 00:21:41,119
example you set time viewing functions

00:21:38,359 --> 00:21:43,190
if I want to like know like okay five

00:21:41,119 --> 00:21:45,320
minutes have fast so like wake up and do

00:21:43,190 --> 00:21:48,409
something maybe I just do not need the

00:21:45,320 --> 00:21:50,089
64 bits because it's whatever I guess I

00:21:48,409 --> 00:21:52,159
just need to know that like okay five

00:21:50,089 --> 00:21:53,419
minutes it's five minutes later than I

00:21:52,159 --> 00:21:55,729
started yeah

00:21:53,419 --> 00:21:57,859
so hopefully absolutely libraries should

00:21:55,729 --> 00:21:58,639
not necessarily be exposing this up the

00:21:57,859 --> 00:22:00,679
tree anymore

00:21:58,639 --> 00:22:03,709
but of course internally they will be

00:22:00,679 --> 00:22:06,019
using 32-bit times for example it's how

00:22:03,709 --> 00:22:08,509
select exposes things which you know for

00:22:06,019 --> 00:22:12,649
your event move that kind of thing we

00:22:08,509 --> 00:22:14,690
should be able if we're careful to fix

00:22:12,649 --> 00:22:17,929
those without polluting any of the

00:22:14,690 --> 00:22:19,429
namespace of the stack obviously as I

00:22:17,929 --> 00:22:23,059
said we're going to be looking for ABI

00:22:19,429 --> 00:22:24,409
checkers - absolutely validate that yeah

00:22:23,059 --> 00:22:26,059
yeah I was just curious if you had any

00:22:24,409 --> 00:22:29,209
thoughts about seems like there's a

00:22:26,059 --> 00:22:30,859
proliferation of these statically linked

00:22:29,209 --> 00:22:31,129
you know things like go and things like

00:22:30,859 --> 00:22:33,469
that

00:22:31,129 --> 00:22:35,179
okay so just just your thoughts there

00:22:33,469 --> 00:22:37,129
because it seems like we need to fix the

00:22:35,179 --> 00:22:38,899
the libraries that they are statically

00:22:37,129 --> 00:22:41,169
linking in have to be fixed before we

00:22:38,899 --> 00:22:45,169
can even hope to rebuild all of those

00:22:41,169 --> 00:22:48,109
absolutely all of the yes it's the it's

00:22:45,169 --> 00:22:52,459
a great example of the problem that we

00:22:48,109 --> 00:22:54,200
need to fix that's looking say five

00:22:52,459 --> 00:22:55,700
layers of the stack or something we need

00:22:54,200 --> 00:22:59,029
to make sure every layer underneath it

00:22:55,700 --> 00:23:00,709
is fixed early so that they get a get

00:22:59,029 --> 00:23:03,440
the time to make sure their stuff works

00:23:00,709 --> 00:23:05,719
and B that gives us plenty of margin to

00:23:03,440 --> 00:23:09,519
make sure things in the out in the wild

00:23:05,719 --> 00:23:09,519
are already fixed before it breaks

00:23:12,250 --> 00:23:17,480
yeah

00:23:13,550 --> 00:23:19,970
so on a related thing I said for the

00:23:17,480 --> 00:23:21,260
enter internet-of-things stuff you know

00:23:19,970 --> 00:23:23,960
there's a lot of people have been

00:23:21,260 --> 00:23:27,260
worried about already people shipping

00:23:23,960 --> 00:23:29,780
insecure devices or things that have no

00:23:27,260 --> 00:23:33,530
security support and it doesn't matter

00:23:29,780 --> 00:23:35,090
to the device producer because they

00:23:33,530 --> 00:23:36,890
expect to have already gone bust or

00:23:35,090 --> 00:23:40,280
moved on they'll be three products down

00:23:36,890 --> 00:23:43,690
the line before anybody cares actually

00:23:40,280 --> 00:23:47,030
enforcing the ability to do updates

00:23:43,690 --> 00:23:49,460
safely reliably automatically on these

00:23:47,030 --> 00:23:51,830
devices is part of the solution to that

00:23:49,460 --> 00:23:54,530
problem and possibly also the solution

00:23:51,830 --> 00:23:59,809
to this problem but actually making that

00:23:54,530 --> 00:24:03,740
happen is hard so going back to the time

00:23:59,809 --> 00:24:06,500
Delta's so you want 64-bit safe 32-bit

00:24:03,740 --> 00:24:09,290
safe and overflow safe time Delta's

00:24:06,500 --> 00:24:12,760
right if you're calculating the math

00:24:09,290 --> 00:24:15,080
around it yeah absolutely

00:24:12,760 --> 00:24:17,270
so when I come up before I was avoiding

00:24:15,080 --> 00:24:19,340
mention this but you brought up IOT now

00:24:17,270 --> 00:24:22,970
everybody knows that I see GPL

00:24:19,340 --> 00:24:24,350
violations as the problem everything but

00:24:22,970 --> 00:24:28,190
actually is a problem with the IOT

00:24:24,350 --> 00:24:30,290
devices so even if Linux gets fixed 90%

00:24:28,190 --> 00:24:32,030
I would expect of IOT devices on the

00:24:30,290 --> 00:24:33,980
market that use Linux are violating the

00:24:32,030 --> 00:24:35,390
GPL which means there is no source code

00:24:33,980 --> 00:24:37,010
for the Linux they're running there's no

00:24:35,390 --> 00:24:40,130
instructions on how to rebuild it

00:24:37,010 --> 00:24:42,500
so even when Linux gets fixed and even

00:24:40,130 --> 00:24:43,610
if it's a Linux based device we probably

00:24:42,500 --> 00:24:45,530
won't know how to upgrade it so

00:24:43,610 --> 00:24:47,300
absolutely I would add to your slide of

00:24:45,530 --> 00:24:49,820
things we can do now of course I would

00:24:47,300 --> 00:24:51,500
but the GPL violations actually relate

00:24:49,820 --> 00:24:52,940
to this because if we have all these GPL

00:24:51,500 --> 00:24:55,190
violations then the next 20 years

00:24:52,940 --> 00:24:56,540
they're all running Linux we won't have

00:24:55,190 --> 00:24:57,950
the source code for them we won't know

00:24:56,540 --> 00:24:59,840
how to upgrade the Linux that's on them

00:24:57,950 --> 00:25:02,600
and we'll be stuck yeah yeah absolutely

00:24:59,840 --> 00:25:04,429
and again that also adds to the urgency

00:25:02,600 --> 00:25:08,270
of getting this fixed as early as

00:25:04,429 --> 00:25:10,940
possible so GPL violations are really

00:25:08,270 --> 00:25:12,650
bad you know I agree with that I'm also

00:25:10,940 --> 00:25:14,929
more worried about this kind of thing

00:25:12,650 --> 00:25:16,790
killing people or causing up we know of

00:25:14,929 --> 00:25:18,230
a worse problem these GPL failing

00:25:16,790 --> 00:25:21,140
devices could kill people and we can't

00:25:18,230 --> 00:25:21,760
fix them absolutely but I agree with you

00:25:21,140 --> 00:25:23,890
if you

00:25:21,760 --> 00:25:26,950
quicker Linux in particular gets fixed

00:25:23,890 --> 00:25:28,060
yeah the the fewer times this GPL a

00:25:26,950 --> 00:25:35,230
little problem will cause the problem

00:25:28,060 --> 00:25:38,110
yeah I've been saying that people should

00:25:35,230 --> 00:25:39,940
just carry on using time T for now does

00:25:38,110 --> 00:25:42,160
that what would that also extend in your

00:25:39,940 --> 00:25:44,320
view to people say designing a new on

00:25:42,160 --> 00:25:45,850
disk format at the moment or should they

00:25:44,320 --> 00:25:48,010
do something else would you listen to us

00:25:45,850 --> 00:25:49,170
that's a very good a very good question

00:25:48,010 --> 00:25:51,910
well brought up

00:25:49,170 --> 00:25:55,660
no in that situation of course you want

00:25:51,910 --> 00:25:57,520
disk format is not something you're

00:25:55,660 --> 00:25:59,050
going to be exchanging with somebody

00:25:57,520 --> 00:26:01,390
else in the same way that you do through

00:25:59,050 --> 00:26:05,860
a live way or you know in a through an

00:26:01,390 --> 00:26:07,810
API please God if you're doing a file

00:26:05,860 --> 00:26:09,580
system design if you're designing an

00:26:07,810 --> 00:26:13,450
image format if you're designing a

00:26:09,580 --> 00:26:16,600
packet format today yeah

00:26:13,450 --> 00:26:18,520
think about this your people are going

00:26:16,600 --> 00:26:21,070
to have to deal with your format

00:26:18,520 --> 00:26:23,050
regardless so you don't have to win to

00:26:21,070 --> 00:26:25,270
operate in a clean way the same way

00:26:23,050 --> 00:26:28,180
everybody else does definitely think

00:26:25,270 --> 00:26:30,490
about this though are good guidelines in

00:26:28,180 --> 00:26:32,320
fact if I remember correctly on that

00:26:30,490 --> 00:26:35,140
kernel newbies page and on the gilepsy

00:26:32,320 --> 00:26:37,570
page about how to think about this now

00:26:35,140 --> 00:26:40,590
if you're designing such a thing yeah

00:26:37,570 --> 00:26:40,590
thanks very much for bringing that up

00:26:41,010 --> 00:26:46,480
don't necessarily pad out well in that

00:26:43,420 --> 00:26:48,550
situation the padding out yes is if you

00:26:46,480 --> 00:26:50,560
absolutely want to store an on disk

00:26:48,550 --> 00:26:53,560
format or something all in flash format

00:26:50,560 --> 00:26:55,750
that is somebody else's if you're

00:26:53,560 --> 00:26:59,020
designing your own yeah do it think

00:26:55,750 --> 00:27:00,970
about it do it right doing it white

00:26:59,020 --> 00:27:08,160
obviously is not always the same thing

00:27:00,970 --> 00:27:12,550
for everybody but yes regardless of

00:27:08,160 --> 00:27:16,590
whether we fix the kernel and libraries

00:27:12,550 --> 00:27:19,330
or not and whether we even have have

00:27:16,590 --> 00:27:22,180
ability to rebuild something I'm I just

00:27:19,330 --> 00:27:24,940
checked my Nexus phone has latest

00:27:22,180 --> 00:27:27,520
Android which is supported by Google and

00:27:24,940 --> 00:27:33,130
it still contains kernel version three

00:27:27,520 --> 00:27:34,880
points ten here so it is problem for all

00:27:33,130 --> 00:27:36,530
the embedded devices and

00:27:34,880 --> 00:27:39,230
all the embedded devices a very long

00:27:36,530 --> 00:27:42,110
time yes absolutely that have got vendor

00:27:39,230 --> 00:27:44,780
kernels or random binary blobs all of

00:27:42,110 --> 00:27:46,400
that kind of problem yeah we need this

00:27:44,780 --> 00:27:48,950
is why we need to be fixing this

00:27:46,400 --> 00:27:51,230
ideally 20 years early that might be

00:27:48,950 --> 00:27:53,120
hard 15 years early is a good goal and

00:27:51,230 --> 00:28:01,400
that will give us plenty of leeway

00:27:53,120 --> 00:28:05,720
before everything goes on fire any more

00:28:01,400 --> 00:28:08,420
points thank you for coming along please

00:28:05,720 --> 00:28:10,400
dive in and help the aren't actually

00:28:08,420 --> 00:28:13,430
specifically asked for me to run this a

00:28:10,400 --> 00:28:14,780
session of Deb Kampf there's a bunch of

00:28:13,430 --> 00:28:16,430
people going to be running similar

00:28:14,780 --> 00:28:18,260
sessions at other conferences or the

00:28:16,430 --> 00:28:20,240
district conferences and everything over

00:28:18,260 --> 00:28:23,240
the next couple years to raise awareness

00:28:20,240 --> 00:28:24,710
of this because it's well again it was

00:28:23,240 --> 00:28:27,230
awesome to see most people in the room

00:28:24,710 --> 00:28:28,910
knew about this before we started it's

00:28:27,230 --> 00:28:31,040
not necessarily clear everybody knows

00:28:28,910 --> 00:28:33,680
the ramifications and why it's important

00:28:31,040 --> 00:28:35,480
to attack this early so thank you for

00:28:33,680 --> 00:28:38,090
coming along tell your friends as well

00:28:35,480 --> 00:28:40,160
and dive in and help if you if you if

00:28:38,090 --> 00:28:43,730
you have the time if you want to learn

00:28:40,160 --> 00:28:49,030
more again check the various pages I've

00:28:43,730 --> 00:28:51,400
linked to so if the colonel and gilepsy

00:28:49,030 --> 00:28:53,690
pages they link to each other as well

00:28:51,400 --> 00:28:55,760
there's lots of good information there

00:28:53,690 --> 00:28:57,320
is lots and lots of scope for people to

00:28:55,760 --> 00:28:59,340
get involved and make a difference now

00:28:57,320 --> 00:29:07,040
thank you very much

00:28:59,340 --> 00:29:07,040

YouTube URL: https://www.youtube.com/watch?v=TzteF38eVdA


