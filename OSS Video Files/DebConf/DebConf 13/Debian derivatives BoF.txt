Title: Debian derivatives BoF
Publication date: 2017-11-29
Playlist: DebConf 13
Description: 
	by Paul Wise

At: DebConf13
https://debconf13.debconf.org/
Room: Second talk room
Scheduled start: 2013-08-12 11:30:00
Captions: 
	00:00:00,650 --> 00:00:07,230
thank you so welcome to the derivatives

00:00:04,080 --> 00:00:10,050
both everybody this is mainly going to

00:00:07,230 --> 00:00:13,460
be an open discussion I'll start with a

00:00:10,050 --> 00:00:18,320
few minutes describing Debian's

00:00:13,460 --> 00:00:20,699
initiatives towards our derivatives so

00:00:18,320 --> 00:00:25,320
everything's the basis for a lot of

00:00:20,699 --> 00:00:27,150
distributions nigel ubuntu and some

00:00:25,320 --> 00:00:33,059
other ones I'm sure everyone here knows

00:00:27,150 --> 00:00:35,640
much those so yeah we'll share some

00:00:33,059 --> 00:00:45,140
experiences and that sort of thing

00:00:35,640 --> 00:00:45,140
during the buff so the in jeddah

00:00:47,059 --> 00:00:51,629
initially I thought this was going to be

00:00:49,079 --> 00:00:55,710
in more of a bathroom around a table

00:00:51,629 --> 00:00:57,510
like and so we could do some

00:00:55,710 --> 00:01:09,689
introductions but maybe people can do

00:00:57,510 --> 00:01:13,470
that when they speak so okay okay cool

00:01:09,689 --> 00:01:16,500
so I'm Paul and I initiated the Debian

00:01:13,470 --> 00:01:17,610
derivative census and have been working

00:01:16,500 --> 00:01:20,580
on derivatives for a while

00:01:17,610 --> 00:01:27,990
I mean integrating Debian and

00:01:20,580 --> 00:01:30,329
derivatives i I guess I'm representing

00:01:27,990 --> 00:01:31,799
him Debian mostly and in lonardo insofar

00:01:30,329 --> 00:01:36,020
as it's a distro which it's trying not

00:01:31,799 --> 00:01:36,020
to be but i'll do a very good job an arm

00:01:40,939 --> 00:01:45,799
sure i'm kahlan representing ubuntu

00:01:48,259 --> 00:01:53,780
hello I'm Rafael and then representing

00:01:51,060 --> 00:01:53,780
Carrie as well

00:02:26,390 --> 00:02:32,490
Logan Hoffman I'm actually representing

00:02:30,210 --> 00:02:36,000
the city administration of Munich here

00:02:32,490 --> 00:02:39,260
who runs on 14,000 Workstation who want

00:02:36,000 --> 00:02:41,460
to like operating system and on that

00:02:39,260 --> 00:02:53,390
technical back end so to speak we use a

00:02:41,460 --> 00:02:53,390
lot of DB on infrastructure anyone else

00:02:54,320 --> 00:03:02,489
okay I'll introduce Debian's work around

00:02:59,250 --> 00:03:03,989
derivatives so this is the derivatives

00:03:02,489 --> 00:03:05,870
wiki page and there's a bunch of links

00:03:03,989 --> 00:03:09,030
at the bottom

00:03:05,870 --> 00:03:11,610
our main initiative is the derivatives

00:03:09,030 --> 00:03:13,470
front desk which is a place for

00:03:11,610 --> 00:03:16,350
derivatives to come together talk to

00:03:13,470 --> 00:03:21,770
each other and ask questions from Debian

00:03:16,350 --> 00:03:25,830
people I see channel mailing lists yeah

00:03:21,770 --> 00:03:30,480
it has been pretty active initially but

00:03:25,830 --> 00:03:32,880
it seems to have tape it off and mostly

00:03:30,480 --> 00:03:37,440
me sending mails about since the

00:03:32,880 --> 00:03:39,269
derivative census these days the next

00:03:37,440 --> 00:03:45,410
initiative we have is the derivatives

00:03:39,269 --> 00:03:47,580
guidelines how to be a good dira t'v and

00:03:45,410 --> 00:03:51,660
the different things that you need to

00:03:47,580 --> 00:03:54,390
have to create a derivative and how to

00:03:51,660 --> 00:03:57,299
do some of the some of the things that

00:03:54,390 --> 00:04:03,870
need to be done when working on a

00:03:57,299 --> 00:04:05,760
derivative the next thing the next thing

00:04:03,870 --> 00:04:08,850
is the derivative census this is a

00:04:05,760 --> 00:04:12,150
project that I initiated a couple of

00:04:08,850 --> 00:04:15,440
years ago now I think it aims to

00:04:12,150 --> 00:04:18,359
integrate information about derivatives

00:04:15,440 --> 00:04:20,690
back into Debian so that Debian

00:04:18,359 --> 00:04:27,479
developers are exposed to the ideas that

00:04:20,690 --> 00:04:29,760
derivatives can bring to the table so it

00:04:27,479 --> 00:04:32,390
basically consists of a bunch of wiki

00:04:29,760 --> 00:04:35,430
pages describing the derivatives and

00:04:32,390 --> 00:04:37,320
then we use that information to feed it

00:04:35,430 --> 00:04:40,400
and we feed that information back into

00:04:37,320 --> 00:04:40,400
Debian infrastructure

00:04:43,110 --> 00:04:49,720
so as you can see there's about 30 or 40

00:04:47,340 --> 00:04:53,730
derivatives represented there there are

00:04:49,720 --> 00:04:53,730
a lot more derivatives out there but

00:04:54,060 --> 00:05:02,170
yeah I need to do some more outreach so

00:04:59,110 --> 00:05:05,350
the integration of the information about

00:05:02,170 --> 00:05:07,360
census from the census so far we have

00:05:05,350 --> 00:05:09,400
planet different derivatives which

00:05:07,360 --> 00:05:11,880
aggregates a bunch of blocks from all

00:05:09,400 --> 00:05:18,220
the different derivatives in the census

00:05:11,880 --> 00:05:20,410
and I'm working on generating patches

00:05:18,220 --> 00:05:22,120
from all the derivatives against Debian

00:05:20,410 --> 00:05:23,680
packages and then presenting that

00:05:22,120 --> 00:05:26,710
information on the package tracking

00:05:23,680 --> 00:05:29,440
system the patch generation is all done

00:05:26,710 --> 00:05:36,250
I just need to work on the display of

00:05:29,440 --> 00:05:40,870
that information and our other

00:05:36,250 --> 00:05:43,120
initiative is Dex which is aims to get

00:05:40,870 --> 00:05:46,920
groups of developers from Debian and

00:05:43,120 --> 00:05:49,870
from derivatives to specifically push

00:05:46,920 --> 00:05:51,580
particular set of patches back to Damien

00:05:49,870 --> 00:05:55,510
it's not particularly active at the

00:05:51,580 --> 00:06:01,800
moment we need to identify some areas we

00:05:55,510 --> 00:06:03,100
can work on and do that yeah so that's

00:06:01,800 --> 00:06:05,650
Debian's

00:06:03,100 --> 00:06:16,660
initiatives with distributions let's

00:06:05,650 --> 00:06:20,440
open it for discussion if someone could

00:06:16,660 --> 00:06:25,900
help take notes of this open discussion

00:06:20,440 --> 00:06:33,310
that would be good and that's the Gobi

00:06:25,900 --> 00:06:36,280
details if you want to join that I guess

00:06:33,310 --> 00:06:38,410
I'll start you you mentioned that deputy

00:06:36,280 --> 00:06:40,630
and derivatives is pretty quiet which is

00:06:38,410 --> 00:06:44,740
which is true I would argue that that's

00:06:40,630 --> 00:06:46,540
kind of a good thing the from from my

00:06:44,740 --> 00:06:50,860
point of view the the value of DB

00:06:46,540 --> 00:06:51,860
interpreters is helping derivatives who

00:06:50,860 --> 00:06:55,009
are less familiar with

00:06:51,860 --> 00:06:58,520
with the raster Debian I wouldn't

00:06:55,009 --> 00:06:59,629
generally direct Ubuntu developers at

00:06:58,520 --> 00:07:01,639
that if they're trying to figure out

00:06:59,629 --> 00:07:04,699
what to do I think it's generally more

00:07:01,639 --> 00:07:06,860
productive for them to go stretch to the

00:07:04,699 --> 00:07:08,780
particular places they need to work if

00:07:06,860 --> 00:07:10,250
they if they need to work on packages

00:07:08,780 --> 00:07:11,479
they should be going to be the

00:07:10,250 --> 00:07:12,530
maintainer czar those packages if

00:07:11,479 --> 00:07:14,930
they're trying to discuss something

00:07:12,530 --> 00:07:15,979
that's this release possess relevant

00:07:14,930 --> 00:07:19,939
they should be going to the release team

00:07:15,979 --> 00:07:22,490
etc so it seems kind of unnecessary to

00:07:19,939 --> 00:07:27,259
interact through Debian derivatives for

00:07:22,490 --> 00:07:29,740
that yeah I can definitely see your

00:07:27,259 --> 00:07:29,740
point there

00:07:48,610 --> 00:07:53,090
so one thing I'm interested in from the

00:07:51,680 --> 00:07:56,180
event to perspective

00:07:53,090 --> 00:07:59,330
Ubuntu does have a policy that when when

00:07:56,180 --> 00:08:01,310
they derive packages patches are meant

00:07:59,330 --> 00:08:03,200
to be submitted upstream to Debian

00:08:01,310 --> 00:08:05,270
either immediately or you know next time

00:08:03,200 --> 00:08:06,500
the package gets merged or whatever in

00:08:05,270 --> 00:08:11,720
order to keep the the technical

00:08:06,500 --> 00:08:15,170
different patches low I wonder if if the

00:08:11,720 --> 00:08:17,300
the Dex initiative is at all interested

00:08:15,170 --> 00:08:18,740
in you know tracking the status of that

00:08:17,300 --> 00:08:21,170
although you mentioned the Dex is fairly

00:08:18,740 --> 00:08:22,730
inactive at the moment but so I don't

00:08:21,170 --> 00:08:24,920
know why I don't have any visibility on

00:08:22,730 --> 00:08:27,950
like how many patches get up streamed

00:08:24,920 --> 00:08:29,270
how how effective are we getting those

00:08:27,950 --> 00:08:30,950
into a state that the Debian maintains

00:08:29,270 --> 00:08:32,300
will integrate them is there a large

00:08:30,950 --> 00:08:36,979
volume of patches they're just seeing

00:08:32,300 --> 00:08:39,500
the BTS on addressed or how that

00:08:36,979 --> 00:08:40,940
relationship looks writ large across the

00:08:39,500 --> 00:08:42,440
distribution because I know at the

00:08:40,940 --> 00:08:44,090
microscopic level at the individual

00:08:42,440 --> 00:08:45,770
backpackers your level I know there's

00:08:44,090 --> 00:08:50,540
lots of good relationships but I don't

00:08:45,770 --> 00:08:52,190
know how we're doing overall I seem to

00:08:50,540 --> 00:08:55,430
remember a discussion recently about

00:08:52,190 --> 00:08:58,150
this and I think the answer was that

00:08:55,430 --> 00:09:03,530
most packaged at most patches get

00:08:58,150 --> 00:09:05,300
adopted by Damian I think Lucas there

00:09:03,530 --> 00:09:14,360
are some stats about that and you DD

00:09:05,300 --> 00:09:16,100
maybe for the user tags tags they are

00:09:14,360 --> 00:09:27,830
supposed to use I think it's still being

00:09:16,100 --> 00:09:29,990
used sometimes the the thing that we

00:09:27,830 --> 00:09:33,740
don't have starts on in an organized way

00:09:29,990 --> 00:09:36,290
is how many of the so we have stats and

00:09:33,740 --> 00:09:38,150
how many bugs total have been filed ever

00:09:36,290 --> 00:09:40,040
without user talk there are new stats

00:09:38,150 --> 00:09:43,610
and how many of those remain open as far

00:09:40,040 --> 00:09:46,460
as I know I remember at the last but one

00:09:43,610 --> 00:09:49,310
Deb conf I did a sort of ad hoc search

00:09:46,460 --> 00:09:51,920
and I think there was something like a

00:09:49,310 --> 00:09:54,770
thousand davinci patches in the NHS that

00:09:51,920 --> 00:09:56,540
had not been applied I don't know I

00:09:54,770 --> 00:09:57,350
don't have anything that's a vague

00:09:56,540 --> 00:10:00,260
memory and I do

00:09:57,350 --> 00:10:02,810
anything more current than us so but

00:10:00,260 --> 00:10:04,730
certainly at various points in time we

00:10:02,810 --> 00:10:07,490
have we have indeed been situations

00:10:04,730 --> 00:10:09,890
where we have had very large numbers of

00:10:07,490 --> 00:10:13,730
patches are standing in the BTS with

00:10:09,890 --> 00:10:16,850
very little activity but these are not

00:10:13,730 --> 00:10:20,720
all patches so currently when there are

00:10:16,850 --> 00:10:23,480
some specific topic I prefer to file a

00:10:20,720 --> 00:10:27,650
back in Debian for the specific topic

00:10:23,480 --> 00:10:32,000
like walking did setup and use a tag far

00:10:27,650 --> 00:10:35,720
for I'm 60 I'm 64 and so I filed buck

00:10:32,000 --> 00:10:37,940
was these user tax and you cannot file a

00:10:35,720 --> 00:10:45,740
bug on Debian with two different user

00:10:37,940 --> 00:10:48,740
tags so yes yet yeah but it sorry but

00:10:45,740 --> 00:10:51,170
it's telling you sent to you and so you

00:10:48,740 --> 00:10:53,240
know I've been there doing as well just

00:10:51,170 --> 00:10:56,950
on that you actually can I think I've

00:10:53,240 --> 00:10:56,950
done that myself

00:11:10,210 --> 00:11:16,390
yeah yeah seems to me that the patching

00:11:13,820 --> 00:11:18,260
part of this patches stuff is relatively

00:11:16,390 --> 00:11:20,300
organized the thing that seems to get

00:11:18,260 --> 00:11:22,940
stuck is new packages that start in a

00:11:20,300 --> 00:11:25,790
bun too and then just kind of sit there

00:11:22,940 --> 00:11:28,810
for years before somebody and sometimes

00:11:25,790 --> 00:11:31,490
there's something

00:11:28,810 --> 00:11:33,560
creator-god it's still stuck after about

00:11:31,490 --> 00:11:36,980
three years of we really ought to move

00:11:33,560 --> 00:11:39,130
this because usually it's down to

00:11:36,980 --> 00:11:41,180
slightly higher stricter standards of

00:11:39,130 --> 00:11:42,200
packaging someone saying oh that's not

00:11:41,180 --> 00:11:44,300
quite good enough we were able to change

00:11:42,200 --> 00:11:46,520
the name to something less genetic or

00:11:44,300 --> 00:11:48,530
modern more generic before I go in and

00:11:46,520 --> 00:11:49,520
then whoever was induced goes oh well

00:11:48,530 --> 00:11:50,810
that sounds difficult what I have to

00:11:49,520 --> 00:11:52,490
change it in launch pad and I can't

00:11:50,810 --> 00:11:54,110
really be bothered so it doesn't happen

00:11:52,490 --> 00:11:55,790
yeah so one thing I've encouraged the

00:11:54,110 --> 00:11:57,770
winter community to do and I haven't

00:11:55,790 --> 00:11:58,970
haven't been as rigorous about this as I

00:11:57,770 --> 00:12:00,590
was meant to this is vetting an

00:11:58,970 --> 00:12:02,660
announcement widely as is from the

00:12:00,590 --> 00:12:05,270
Ubuntu side we've proposed okay if a

00:12:02,660 --> 00:12:07,070
package exists in Ubuntu and it should

00:12:05,270 --> 00:12:07,430
go into Debian well the logical thing to

00:12:07,070 --> 00:12:10,610
do

00:12:07,430 --> 00:12:14,810
to request an adopter and just use the

00:12:10,610 --> 00:12:16,070
existing W npp system and an RFA because

00:12:14,810 --> 00:12:18,890
the packaging exists it just needs the

00:12:16,070 --> 00:12:20,149
maintainer in Debian in most cases due

00:12:18,890 --> 00:12:23,029
to people in the room think that's a

00:12:20,149 --> 00:12:25,250
reasonable approach for that and is that

00:12:23,029 --> 00:12:26,510
something that anybody here would

00:12:25,250 --> 00:12:29,600
actually be interested in adopting those

00:12:26,510 --> 00:12:32,750
packages I think that works fine so long

00:12:29,600 --> 00:12:34,010
as it's in good enough you know the

00:12:32,750 --> 00:12:35,720
packaging is in good enough condition

00:12:34,010 --> 00:12:38,000
but sometimes it was a bit sort of

00:12:35,720 --> 00:12:39,170
haphazard and somebody will complain

00:12:38,000 --> 00:12:40,970
that really it should be done a bit

00:12:39,170 --> 00:12:44,120
better than that and that becomes a

00:12:40,970 --> 00:12:46,730
harder problem as I said in my previous

00:12:44,120 --> 00:12:48,890
talk we have some connection to some pun

00:12:46,730 --> 00:12:50,899
to their what if until meaty it's called

00:12:48,890 --> 00:12:54,020
peyote mix and they are using the common

00:12:50,899 --> 00:12:55,670
VCS with us and we are we are working

00:12:54,020 --> 00:12:58,790
the same code we are just releasing it

00:12:55,670 --> 00:13:02,240
in Debian and working together and so if

00:12:58,790 --> 00:13:06,470
you have some get in this field yes I

00:13:02,240 --> 00:13:09,080
will adapt it but I don't know if maybe

00:13:06,470 --> 00:13:12,260
we need some some kind of shared

00:13:09,080 --> 00:13:15,110
interest between these people so we

00:13:12,260 --> 00:13:17,209
started with this when we made a common

00:13:15,110 --> 00:13:20,390
sprint with these people so if if you

00:13:17,209 --> 00:13:22,700
have some kind of common field and

00:13:20,390 --> 00:13:24,410
whatever sends just lets meet you bunch

00:13:22,700 --> 00:13:27,500
of people and even people to some sprint

00:13:24,410 --> 00:13:36,350
and and I could see increased chances

00:13:27,500 --> 00:13:39,650
for this my trollish rebuttal who wants

00:13:36,350 --> 00:13:47,570
to come to the Ubuntu mirror and unity

00:13:39,650 --> 00:13:51,190
sprint they say listen I'm not here in

00:13:47,570 --> 00:13:51,190
this room fair enough

00:13:57,560 --> 00:14:04,470
so sometimes when there are new packages

00:14:01,050 --> 00:14:06,779
in open-toe I'm explicitly not not going

00:14:04,470 --> 00:14:11,040
to upload these two to Debian unstable

00:14:06,779 --> 00:14:12,779
or to Debian at all because I do know

00:14:11,040 --> 00:14:19,290
that I don't have the time to maintain

00:14:12,779 --> 00:14:21,480
them and two examples openjdk requires

00:14:19,290 --> 00:14:23,279
work for for every architecture every

00:14:21,480 --> 00:14:28,110
new architecture so it's extra work for

00:14:23,279 --> 00:14:30,360
every architecture to maintain that in

00:14:28,110 --> 00:14:33,060
in Debian and for fall from JDK I

00:14:30,360 --> 00:14:35,579
explicitly used by Ubuntu address to to

00:14:33,060 --> 00:14:40,860
do the maintain maintenance in Debian

00:14:35,579 --> 00:14:44,930
and as an example so I wouldn't add a

00:14:40,860 --> 00:14:48,259
new architecture now to UM to open JDK

00:14:44,930 --> 00:14:51,600
in Debian unless I have some somebody

00:14:48,259 --> 00:14:54,540
within Debian due to maintain it and I

00:14:51,600 --> 00:14:57,480
think the other thing are the cost

00:14:54,540 --> 00:15:00,269
compilation environments which are not

00:14:57,480 --> 00:15:01,800
yet in Debian and but I think we will

00:15:00,269 --> 00:15:06,870
have a talk on on Thursday or Friday

00:15:01,800 --> 00:15:09,120
about that yeah ultimately those

00:15:06,870 --> 00:15:11,009
packages need maintenance and if they

00:15:09,120 --> 00:15:13,639
come with the maintainers that would be

00:15:11,009 --> 00:15:13,639
even better

00:15:14,240 --> 00:15:20,459
true yeah so I have a question for

00:15:18,660 --> 00:15:22,410
people in the room maybe you can have a

00:15:20,459 --> 00:15:34,649
show of hands who reads planet Debian

00:15:22,410 --> 00:15:43,529
derivatives okay is it because you don't

00:15:34,649 --> 00:15:46,019
have time yeah so probably something

00:15:43,529 --> 00:15:48,949
more useful for me to work on is the

00:15:46,019 --> 00:15:52,500
patch of stuff do people think that's a

00:15:48,949 --> 00:15:54,740
good thing to have patches from all the

00:15:52,500 --> 00:15:54,740
derivatives

00:15:56,160 --> 00:16:06,480
I have a question regarding the source

00:16:02,250 --> 00:16:08,910
of the packages some derivative are

00:16:06,480 --> 00:16:13,290
using testing and also are using

00:16:08,910 --> 00:16:16,829
unstable sometime both depending of the

00:16:13,290 --> 00:16:20,970
long term for going to for example and

00:16:16,829 --> 00:16:24,209
I'm a bit concerned that testing is not

00:16:20,970 --> 00:16:27,750
a rolling distribution as it should be

00:16:24,209 --> 00:16:31,350
because people are quite happy when the

00:16:27,750 --> 00:16:34,139
package is in unstable only and some

00:16:31,350 --> 00:16:37,160
some people are well if it's in unstable

00:16:34,139 --> 00:16:40,800
it's in Ubuntu and then that's okay and

00:16:37,160 --> 00:16:43,170
the kind of competition and well I'm

00:16:40,800 --> 00:16:46,800
always looking at the empty part of the

00:16:43,170 --> 00:16:49,380
glass it's a bit negative but it might

00:16:46,800 --> 00:16:53,839
become an issue if we're going to

00:16:49,380 --> 00:16:56,579
continue to growth so we we do use

00:16:53,839 --> 00:16:58,709
generally unstable we have flirted with

00:16:56,579 --> 00:17:01,649
using testing in the past as a source

00:16:58,709 --> 00:17:03,089
during Debian freezes it mostly hasn't

00:17:01,649 --> 00:17:07,020
worked out for us for one reason or

00:17:03,089 --> 00:17:10,439
another I'm going to go into this in a

00:17:07,020 --> 00:17:13,260
fair bit more depth in those there's a

00:17:10,439 --> 00:17:15,140
session on I think it's entitled tube

00:17:13,260 --> 00:17:18,659
into daily quality improvements on

00:17:15,140 --> 00:17:19,829
Thursday afternoon and if people are

00:17:18,659 --> 00:17:24,539
interested in that and encourage you to

00:17:19,829 --> 00:17:30,450
come to that the III chair your concerns

00:17:24,539 --> 00:17:32,490
about the division of the division of

00:17:30,450 --> 00:17:34,260
labor between testing and unstable and

00:17:32,490 --> 00:17:36,929
Debian and I think we could do a much

00:17:34,260 --> 00:17:39,390
better job that's not letting not living

00:17:36,929 --> 00:17:41,520
testing languish and I think there are

00:17:39,390 --> 00:17:47,159
things that that have been to contribute

00:17:41,520 --> 00:17:49,140
to that specifically I mean but also

00:17:47,159 --> 00:17:51,630
distribution do you have some statistics

00:17:49,140 --> 00:17:56,010
about what sauce are using was that is

00:17:51,630 --> 00:18:00,450
that unstable or testing so the census

00:17:56,010 --> 00:18:02,830
wiki pages lists which Debian sweet all

00:18:00,450 --> 00:18:06,519
the derivatives that we have there early

00:18:02,830 --> 00:18:10,269
derived from there are some who use old

00:18:06,519 --> 00:18:13,090
stable some who use previous versions of

00:18:10,269 --> 00:18:15,960
old stable some who use stable some

00:18:13,090 --> 00:18:18,730
whose testing some he is unstable and

00:18:15,960 --> 00:18:20,380
some who use some packages from about to

00:18:18,730 --> 00:18:23,080
do some packages from other places so

00:18:20,380 --> 00:18:26,070
there's a whole range of different ways

00:18:23,080 --> 00:18:28,600
you can make a derivative distribution

00:18:26,070 --> 00:18:30,700
but what I'm interested in if you say

00:18:28,600 --> 00:18:32,409
people are happy if spectres are in

00:18:30,700 --> 00:18:35,380
unstable and don't go for care for

00:18:32,409 --> 00:18:38,970
testing do you think they are actively

00:18:35,380 --> 00:18:42,429
working against the migration by finding

00:18:38,970 --> 00:18:44,919
risk fitting a box what are they doing

00:18:42,429 --> 00:18:52,659
to do to stop people from going to

00:18:44,919 --> 00:18:55,000
testing I haven't seen that's not that's

00:18:52,659 --> 00:19:00,309
not no no no that's not not caring

00:18:55,000 --> 00:19:03,880
that's that's caring not too different

00:19:00,309 --> 00:19:06,610
the it's it's more much more common as

00:19:03,880 --> 00:19:08,019
neglect just it's it's not something

00:19:06,610 --> 00:19:09,880
that scratches your particular edge

00:19:08,019 --> 00:19:13,120
having things in testing this sort of

00:19:09,880 --> 00:19:15,549
attitude is very very common and it's

00:19:13,120 --> 00:19:18,549
understandable right if if you're not

00:19:15,549 --> 00:19:21,480
doing something that relies on testing

00:19:18,549 --> 00:19:27,610
working many many Debian developers arms

00:19:21,480 --> 00:19:30,250
then why do you care you you kind of

00:19:27,610 --> 00:19:33,460
shoot Cara I I think that I think they

00:19:30,250 --> 00:19:34,919
should but no in many cases you know if

00:19:33,460 --> 00:19:37,899
you know if you don't sort out your

00:19:34,919 --> 00:19:39,909
build failures on some architecture that

00:19:37,899 --> 00:19:41,889
used to build on or if you're stuck on

00:19:39,909 --> 00:19:43,299
some big complicated transition or

00:19:41,889 --> 00:19:44,500
something it can actually be a

00:19:43,299 --> 00:19:46,870
non-trivial amount of work to get

00:19:44,500 --> 00:19:48,730
everything sorted out I think it's

00:19:46,870 --> 00:19:50,679
something that Debian developers in

00:19:48,730 --> 00:19:55,899
general have a duty to take care of but

00:19:50,679 --> 00:19:57,730
not as Kristen is if you have lazy

00:19:55,899 --> 00:20:00,030
maintainers okay that is not it because

00:19:57,730 --> 00:20:03,780
testing is not a rolling distribution

00:20:00,030 --> 00:20:07,110
yeah whatever world you take here but

00:20:03,780 --> 00:20:10,380
it's I had the impression from the

00:20:07,110 --> 00:20:17,910
contribution that people generally don't

00:20:10,380 --> 00:20:22,080
care about and say well it's fine so if

00:20:17,910 --> 00:20:24,780
you want to look at current issues you

00:20:22,080 --> 00:20:28,500
could look at the proposed migration

00:20:24,780 --> 00:20:31,080
scripts or web pages which Colin

00:20:28,500 --> 00:20:34,080
maintains so if you look for example for

00:20:31,080 --> 00:20:38,070
your team you know won't do it yeah but

00:20:34,080 --> 00:20:39,750
it does give it give a hint on well

00:20:38,070 --> 00:20:47,640
which package filmed he built and which

00:20:39,750 --> 00:21:04,110
one doesn't I didn't want to attack see

00:20:47,640 --> 00:21:07,430
Devon a team no but no but but what I do

00:21:04,110 --> 00:21:10,740
want to say so the proposed migration

00:21:07,430 --> 00:21:15,330
detects these kind of issues a bit

00:21:10,740 --> 00:21:18,870
earlier then they are detected in Debian

00:21:15,330 --> 00:21:21,270
because Debian well only chaos once

00:21:18,870 --> 00:21:23,670
probably these are ones they should not

00:21:21,270 --> 00:21:26,550
migrate or be removed from testing and

00:21:23,670 --> 00:21:32,730
would do does this check I think now

00:21:26,550 --> 00:21:34,500
continuously all the the checks are

00:21:32,730 --> 00:21:36,270
there in place in Devon as well the

00:21:34,500 --> 00:21:38,520
Brittany reports are published

00:21:36,270 --> 00:21:41,220
everywhere and responsible maintainer

00:21:38,520 --> 00:21:42,600
certainly can be proactive about looking

00:21:41,220 --> 00:21:43,530
for the status of their packages and

00:21:42,600 --> 00:21:45,990
knowing what's keeping them from

00:21:43,530 --> 00:21:47,700
migrating or not right the the reports

00:21:45,990 --> 00:21:49,590
are not substantially different between

00:21:47,700 --> 00:21:50,910
Devon DaVinci I'll again I'll go into

00:21:49,590 --> 00:21:54,750
this and much more detail on Thursday

00:21:50,910 --> 00:21:57,120
but the there may be there may be some

00:21:54,750 --> 00:21:58,860
differences that Ubuntu's archive cycle

00:21:57,120 --> 00:22:02,340
is much quicker than Debian's

00:21:58,860 --> 00:22:02,910
I mean I'm interested in what what other

00:22:02,340 --> 00:22:04,650
disk

00:22:02,910 --> 00:22:08,580
what other debian derivatives do by way

00:22:04,650 --> 00:22:10,710
of continuous integration work doing

00:22:08,580 --> 00:22:13,980
ongoing testing of there

00:22:10,710 --> 00:22:16,620
of their tip branch is is there anything

00:22:13,980 --> 00:22:18,240
do we have any sort of general

00:22:16,620 --> 00:22:20,550
widespread information not or does

00:22:18,240 --> 00:22:21,780
anybody else want to want to share their

00:22:20,550 --> 00:22:29,910
sort of the sort of things that they're

00:22:21,780 --> 00:22:31,950
doing yeah just to move this away from a

00:22:29,910 --> 00:22:32,610
bun to specifically generalize it a

00:22:31,950 --> 00:22:34,860
little bit more

00:22:32,610 --> 00:22:36,780
I was actually wanted to say perhaps

00:22:34,860 --> 00:22:38,040
well done for all this work right it may

00:22:36,780 --> 00:22:43,440
seem like a bit of an uphill struggle

00:22:38,040 --> 00:22:44,610
sometimes and nobody ever nobody ever

00:22:43,440 --> 00:22:47,790
says anything and you ask a lot of

00:22:44,610 --> 00:22:50,580
questions and so on but actually I think

00:22:47,790 --> 00:22:52,500
it is useful important and and as I said

00:22:50,580 --> 00:22:54,030
the benefit you know isn't obvious

00:22:52,500 --> 00:22:56,070
because in fact it is mostly done

00:22:54,030 --> 00:23:04,950
directly within the right place by

00:22:56,070 --> 00:23:10,200
people with some clue and so you know so

00:23:04,950 --> 00:23:12,120
I mean I guess part problem is that a

00:23:10,200 --> 00:23:14,100
lot of these things I want off kind of

00:23:12,120 --> 00:23:17,010
they get done once and then they just

00:23:14,100 --> 00:23:18,360
kind of sit there so some of them this

00:23:17,010 --> 00:23:19,980
is not surprising that we're not getting

00:23:18,360 --> 00:23:21,990
much response back they did the thing

00:23:19,980 --> 00:23:23,310
and it's done and it just sits there and

00:23:21,990 --> 00:23:25,890
as you say it's based on old stable

00:23:23,310 --> 00:23:28,020
there aren't that many active things I

00:23:25,890 --> 00:23:30,000
mean an M Debian has spent the last ten

00:23:28,020 --> 00:23:31,950
years integrating everything we did

00:23:30,000 --> 00:23:33,300
separately back into Debian so actually

00:23:31,950 --> 00:23:34,680
there's hardly anything left to do you

00:23:33,300 --> 00:23:36,450
know we don't really do integration

00:23:34,680 --> 00:23:37,650
anymore nearly everything we wanted is

00:23:36,450 --> 00:23:39,570
in Debian depart from the crosstalk

00:23:37,650 --> 00:23:43,520
change stuff that doc is having a go at

00:23:39,570 --> 00:23:48,480
me for because I've done yet is the

00:23:43,520 --> 00:23:53,280
crush thing where the repack the Deb's

00:23:48,480 --> 00:23:55,560
is that integrated yet so in practice

00:23:53,280 --> 00:23:56,820
the things that worse fit to different

00:23:55,560 --> 00:23:59,400
from Debbie and we just stopped doing

00:23:56,820 --> 00:24:02,910
because it was too much work so really

00:23:59,400 --> 00:24:05,700
small debian we decided wasn't enough

00:24:02,910 --> 00:24:07,020
value for the amount of work it was you

00:24:05,700 --> 00:24:10,200
know you're better off doing that in OE

00:24:07,020 --> 00:24:11,670
to be honest so we just stopped and we

00:24:10,200 --> 00:24:14,340
kept the things that were easy to do and

00:24:11,670 --> 00:24:19,170
easy to automate and easy to push back

00:24:14,340 --> 00:24:21,330
into Debian so yes pretty much so I mean

00:24:19,170 --> 00:24:23,730
there's some separate processing of a

00:24:21,330 --> 00:24:25,920
subset of Debian about 3,000 packages we

00:24:23,730 --> 00:24:28,680
charges D bloated and they actually now

00:24:25,920 --> 00:24:31,500
live back in the the main Debian archive

00:24:28,680 --> 00:24:34,770
so we send it all back again after some

00:24:31,500 --> 00:24:36,420
sub processing I think it's probably

00:24:34,770 --> 00:24:38,610
fair to say that M Debian is more that's

00:24:36,420 --> 00:24:41,970
more morphed into the cross building

00:24:38,610 --> 00:24:43,950
efforts in in Debian proper it's theirs

00:24:41,970 --> 00:24:45,780
Debian cross milling nurse and the huge

00:24:43,950 --> 00:24:47,220
pilot folks with user tax for that

00:24:45,780 --> 00:24:48,420
exactly there's two parts there's

00:24:47,220 --> 00:24:52,740
there's making cross building in general

00:24:48,420 --> 00:24:56,790
work and there's making deep loaded

00:24:52,740 --> 00:24:58,350
versions of Debian binaries both of

00:24:56,790 --> 00:25:01,800
those have been or increasingly

00:24:58,350 --> 00:25:03,300
integrated and yeah that was all working

00:25:01,800 --> 00:25:05,340
reasonably well but yeah you know we

00:25:03,300 --> 00:25:07,320
don't do anything on the decks so who

00:25:05,340 --> 00:25:09,630
might fill the page in once you know but

00:25:07,320 --> 00:25:10,440
there isn't really much to report I

00:25:09,630 --> 00:25:12,840
don't know

00:25:10,440 --> 00:25:18,960
I don't blog but Neal does so maybe that

00:25:12,840 --> 00:25:20,610
appears in the thing I don't yeah so

00:25:18,960 --> 00:25:23,370
speaking of them Debian I'm curious to

00:25:20,610 --> 00:25:32,220
know is there anybody raspbian ish in

00:25:23,370 --> 00:25:35,010
the room raspbian Paul Green plug wash I

00:25:32,220 --> 00:25:36,300
don't think so sadly yeah we very

00:25:35,010 --> 00:25:38,820
interesting because they've done a lot

00:25:36,300 --> 00:25:40,260
of good work but I think mostly they're

00:25:38,820 --> 00:25:42,720
just they intend to be a straight

00:25:40,260 --> 00:25:47,520
rebuild objects which is similar to what

00:25:42,720 --> 00:25:50,460
the Debian mission is yeah and of only

00:25:47,520 --> 00:25:51,780
not unstable in the testing I think or

00:25:50,460 --> 00:25:53,790
only stable or something there's a

00:25:51,780 --> 00:25:59,340
fairly small subset that actually gets

00:25:53,790 --> 00:26:02,420
done what is the problem that you can't

00:25:59,340 --> 00:26:05,430
run in Debian on raspbian

00:26:02,420 --> 00:26:08,550
so this is all about different arm I

00:26:05,430 --> 00:26:14,760
serve versions of the chipset so we

00:26:08,550 --> 00:26:17,580
support arm b5 well before T in and v7

00:26:14,760 --> 00:26:20,550
with floating-point in Debian but

00:26:17,580 --> 00:26:23,430
raspbian that does be PI falls squarely

00:26:20,550 --> 00:26:26,700
between those stools by being v6 with

00:26:23,430 --> 00:26:29,160
floating-point so they could run our v40

00:26:26,700 --> 00:26:30,270
old Armel the image but then they

00:26:29,160 --> 00:26:35,160
wouldn't get all their shiny floating

00:26:30,270 --> 00:26:36,320
point and it would be slow yes yes it's

00:26:35,160 --> 00:26:40,130
an armature

00:26:36,320 --> 00:26:41,210
v6 so it would be in principle a matter

00:26:40,130 --> 00:26:44,809
of just adding another

00:26:41,210 --> 00:26:46,070
architecture to a piano so yeah you

00:26:44,809 --> 00:26:48,139
could add another architect well it's

00:26:46,070 --> 00:26:50,990
neither architecture it's a different i

00:26:48,139 --> 00:26:56,000
sir are architectures are strictly

00:26:50,990 --> 00:26:58,399
speaking a b is not isis 19-2 action

00:26:56,000 --> 00:26:59,659
sets right we've never previously added

00:26:58,399 --> 00:27:02,779
we've never previously added an

00:26:59,659 --> 00:27:04,789
architecture for us like a flavor of the

00:27:02,779 --> 00:27:06,590
architecture so and we talked about this

00:27:04,789 --> 00:27:08,299
like three years ago we could mark

00:27:06,590 --> 00:27:10,370
packages with which i said they were

00:27:08,299 --> 00:27:11,720
built for and then we could have tools

00:27:10,370 --> 00:27:14,000
do all this sword magically but we've

00:27:11,720 --> 00:27:15,590
never done that work in d package and by

00:27:14,000 --> 00:27:18,620
the time we got that work done the

00:27:15,590 --> 00:27:21,080
raspberry pi would be obsolete yeah but

00:27:18,620 --> 00:27:23,840
this problem may arise again in other

00:27:21,080 --> 00:27:25,250
contexts i mean it would have been nice

00:27:23,840 --> 00:27:27,500
if we decided it was worth the effort

00:27:25,250 --> 00:27:28,789
three years ago and the raspbian thing

00:27:27,500 --> 00:27:33,080
would have been smoother but at least

00:27:28,789 --> 00:27:36,649
more easily integrated but just to make

00:27:33,080 --> 00:27:38,929
it shorter and more likely to be done

00:27:36,649 --> 00:27:41,690
now isn't it correctly understood that

00:27:38,929 --> 00:27:44,450
but we simple people who would call an

00:27:41,690 --> 00:27:47,990
architecture would be if there would be

00:27:44,450 --> 00:27:50,629
doable now and likely to do with thing

00:27:47,990 --> 00:27:52,159
like raspberry pi and i know technically

00:27:50,629 --> 00:27:53,929
it's not the same as an architecture you

00:27:52,159 --> 00:28:02,409
would use maybe it is something else but

00:27:53,929 --> 00:28:05,269
we could do like we did with our native

00:28:02,409 --> 00:28:07,480
well I mean it's only it is in your

00:28:05,269 --> 00:28:07,480
architecture

00:28:13,269 --> 00:28:27,139
right exactly so it isn't genuine it is

00:28:18,679 --> 00:28:29,210
genuinely um

00:28:27,139 --> 00:28:31,610
Raphael do you think you could say

00:28:29,210 --> 00:28:36,620
something about curly and arm stuff

00:28:31,610 --> 00:28:39,830
could I just don't cry soon there's no I

00:28:36,620 --> 00:28:43,330
see there's no there's no reason why you

00:28:39,830 --> 00:28:45,940
couldn't add a arm 6hf or whatever

00:28:43,330 --> 00:28:48,460
Toodee package but then that would

00:28:45,940 --> 00:28:50,980
require raspbian now to rebuild all

00:28:48,460 --> 00:28:52,990
their staff with on 6hf and we could

00:28:50,980 --> 00:28:54,840
never we could never sports that are

00:28:52,990 --> 00:28:58,330
still MIT wouldn't mean we could support

00:28:54,840 --> 00:29:00,640
the Raspberry Pi in Debian because you

00:28:58,330 --> 00:29:04,780
can't you can't even you can't boot it

00:29:00,640 --> 00:29:06,460
without non free boot ok because it's

00:29:04,780 --> 00:29:08,770
really it is a graphics processor with a

00:29:06,460 --> 00:29:10,240
with an arm on the side so and then the

00:29:08,770 --> 00:29:16,870
growth of the graphics processor is

00:29:10,240 --> 00:29:19,240
completely non open so it's probably not

00:29:16,870 --> 00:29:20,710
much having me done to improve this yeah

00:29:19,240 --> 00:29:25,900
it's probably not worth putting too much

00:29:20,710 --> 00:29:27,310
effort into that particular device and

00:29:25,900 --> 00:29:29,620
actually I disagree quite strongly with

00:29:27,310 --> 00:29:30,820
the idea of adding new architecture just

00:29:29,620 --> 00:29:32,170
for a new I so I don't think we should

00:29:30,820 --> 00:29:33,550
do that I think we should fix it

00:29:32,170 --> 00:29:35,830
properly if we're going to support that

00:29:33,550 --> 00:29:39,150
sort of stuff right and architecture is

00:29:35,830 --> 00:29:39,150
an API is not an icer

00:29:40,020 --> 00:29:45,220
well then we could do that you're right

00:29:42,760 --> 00:29:46,270
it would work I think but I just think

00:29:45,220 --> 00:29:53,860
it's a really bad plan

00:29:46,270 --> 00:29:57,690
right it is the way we implement that

00:29:53,860 --> 00:30:01,900
architecture in Debian defines our

00:29:57,690 --> 00:30:03,340
version of the icer we could just turn

00:30:01,900 --> 00:30:05,770
the minimum version do I sit down and

00:30:03,340 --> 00:30:07,690
just start building v6 probably doesn't

00:30:05,770 --> 00:30:10,180
get you ever know if you have an old

00:30:07,690 --> 00:30:12,790
package - if you have a random dev you

00:30:10,180 --> 00:30:14,710
don't know whether it's need to put that

00:30:12,790 --> 00:30:16,540
information into the packages so then

00:30:14,710 --> 00:30:17,770
all the other all the stuff built for

00:30:16,540 --> 00:30:19,960
res beans will work on everything else

00:30:17,770 --> 00:30:22,210
it works works one way it's compatible

00:30:19,960 --> 00:30:23,410
is like a three six I 486 a five a six a

00:30:22,210 --> 00:30:28,840
six a it's exactly the same problem

00:30:23,410 --> 00:30:31,300
right I mean I was I was gonna point out

00:30:28,840 --> 00:30:34,780
we had the exactly the same problem on a

00:30:31,300 --> 00:30:37,390
36 where I 386 for a while meant I 486

00:30:34,780 --> 00:30:43,630
then I 586 and I think today means I 686

00:30:37,390 --> 00:30:45,490
but there was is it still for it well

00:30:43,630 --> 00:30:48,150
the kernel may think it's 46 the user

00:30:45,490 --> 00:30:48,150
space disagrees

00:30:54,309 --> 00:30:58,690
yeah I believe the GCC maintainer

00:30:56,720 --> 00:31:01,970
disagrees with you about what supported

00:30:58,690 --> 00:31:05,690
well Debian I 386 it's built for

00:31:01,970 --> 00:31:08,780
likewise 586 a boon does I 386 like

00:31:05,690 --> 00:31:10,760
while 686 anyway the point I was meaning

00:31:08,780 --> 00:31:13,790
to get to there was that this is a

00:31:10,760 --> 00:31:16,070
problem that we failed to deal with

00:31:13,790 --> 00:31:18,890
throughout the lifetime of 32-bit x86

00:31:16,070 --> 00:31:21,260
where there was there was certainly lots

00:31:18,890 --> 00:31:23,929
of demand for a 686 optimized just based

00:31:21,260 --> 00:31:25,640
on volume of hardware and the benefits

00:31:23,929 --> 00:31:31,670
to the platform and we simply never

00:31:25,640 --> 00:31:33,830
dealt with that and yeah sure but I

00:31:31,670 --> 00:31:35,300
think the fact that we the fact that at

00:31:33,830 --> 00:31:36,940
the time it required us to spin up a new

00:31:35,300 --> 00:31:39,200
architecture and there was a very clear

00:31:36,940 --> 00:31:40,700
incentive to do that and we never did it

00:31:39,200 --> 00:31:42,380
I think is proof that we need a

00:31:40,700 --> 00:31:44,480
different solution you move forward or

00:31:42,380 --> 00:31:46,010
we need to you know get a new consensus

00:31:44,480 --> 00:31:47,870
around bringing up architectures for

00:31:46,010 --> 00:31:50,000
that but I do think that bookies plan is

00:31:47,870 --> 00:31:53,150
is actually we're way off topic aren't

00:31:50,000 --> 00:31:56,120
we I think when we had this discussion

00:31:53,150 --> 00:32:02,360
in the bun to about LP ia so we decided

00:31:56,120 --> 00:32:04,730
to have a complete okay so the

00:32:02,360 --> 00:32:07,610
alternative which we just did this card

00:32:04,730 --> 00:32:10,370
at this point of time was just to reuse

00:32:07,610 --> 00:32:12,679
an existing architecture and have

00:32:10,370 --> 00:32:17,690
something in the binary package marked

00:32:12,679 --> 00:32:21,020
so this is built for for 686 so at least

00:32:17,690 --> 00:32:22,910
then dpkg RIPT would be able to tell you

00:32:21,020 --> 00:32:27,770
not to install this package on a system

00:32:22,910 --> 00:32:28,610
which just is 46 so I guess the trying

00:32:27,770 --> 00:32:30,440
to bring this back around er the

00:32:28,610 --> 00:32:31,700
question of derivatives like we've kind

00:32:30,440 --> 00:32:34,520
of gone on this this digression here

00:32:31,700 --> 00:32:36,710
which is about eliminating the need for

00:32:34,520 --> 00:32:38,090
derivatives in certain cases so is that

00:32:36,710 --> 00:32:42,040
a useful thing to talk about how we

00:32:38,090 --> 00:32:44,840
could make more derivatives into flavors

00:32:42,040 --> 00:32:46,309
is that conversations entering

00:32:44,840 --> 00:32:48,440
interesting to anybody in this room

00:32:46,309 --> 00:32:51,130
I mean Ubuntu is certainly not doing

00:32:48,440 --> 00:32:51,130
this anytime soon

00:32:54,010 --> 00:32:59,660
yes I think that's it's definitely

00:32:56,840 --> 00:33:02,690
interesting and I think when I'm coming

00:32:59,660 --> 00:33:04,130
from the brands aside and Paul reduce

00:33:02,690 --> 00:33:07,010
the derivatives we are working on the

00:33:04,130 --> 00:33:10,540
same thing from different sites and my

00:33:07,010 --> 00:33:13,670
plan is to to create all the best

00:33:10,540 --> 00:33:15,679
precondition to to hand over something

00:33:13,670 --> 00:33:17,630
to people to doing some support and if

00:33:15,679 --> 00:33:20,810
it's called derivative or whatever I

00:33:17,630 --> 00:33:22,490
think the the best thing would be doing

00:33:20,810 --> 00:33:24,860
the main preparation inside even because

00:33:22,490 --> 00:33:27,470
it's the least work for everybody and so

00:33:24,860 --> 00:33:32,179
this is definitely call and explicitly

00:33:27,470 --> 00:33:34,940
there all the time yes you're working

00:33:32,179 --> 00:33:39,800
inside there in to help people to create

00:33:34,940 --> 00:33:42,380
groups of actors I'm working to bring

00:33:39,800 --> 00:33:45,380
them in derivatives existing derivatives

00:33:42,380 --> 00:33:47,570
closer to Devon and try to avoid

00:33:45,380 --> 00:33:50,960
creating new derivatives by improving

00:33:47,570 --> 00:33:55,790
Debian so the things that derivatives

00:33:50,960 --> 00:33:59,750
need are in Debian yeah so who here

00:33:55,790 --> 00:34:03,740
maintains a package in Debian and okay

00:33:59,750 --> 00:34:05,870
so if this is the debian derivatives

00:34:03,740 --> 00:34:12,139
patches page this is the one for

00:34:05,870 --> 00:34:15,169
butchart so blank on ubuntu phoenix

00:34:12,139 --> 00:34:17,899
tails so a bunch of different

00:34:15,169 --> 00:34:20,899
distributions patching it and there are

00:34:17,899 --> 00:34:23,899
the patches the way this works is that

00:34:20,899 --> 00:34:28,790
it runs on this snapshot David not oh so

00:34:23,899 --> 00:34:30,590
and it gets the packages from the source

00:34:28,790 --> 00:34:33,230
packages from the derivatives it does

00:34:30,590 --> 00:34:36,889
some fancy matching and tries to find

00:34:33,230 --> 00:34:38,840
out which package which Debian sauce

00:34:36,889 --> 00:34:43,370
packet each derivative package was

00:34:38,840 --> 00:34:44,960
derived from and then does additive and

00:34:43,370 --> 00:34:47,520
that's where they are

00:34:44,960 --> 00:34:51,000
it's on I don't know if you can see it

00:34:47,520 --> 00:34:52,490
but it's Dexter le after all / senses /

00:34:51,000 --> 00:34:55,590
patches

00:34:52,490 --> 00:34:58,530
it has some meta information in you dd

00:34:55,590 --> 00:35:00,270
about this but this would be cool

00:34:58,530 --> 00:35:05,760
because then you can either find this

00:35:00,270 --> 00:35:10,530
yet the code generator is not quite

00:35:05,760 --> 00:35:12,780
ready for outputting enough melt out of

00:35:10,530 --> 00:35:15,320
you today there's some that but it's

00:35:12,780 --> 00:35:17,940
it's not quite enough and also we need

00:35:15,320 --> 00:35:20,960
some information from the BTS about

00:35:17,940 --> 00:35:23,970
sauce package renaming so that we can

00:35:20,960 --> 00:35:29,280
present the patches on the correct 80s

00:35:23,970 --> 00:35:31,740
plate yeah this is great work really but

00:35:29,280 --> 00:35:33,990
the problem is that it's made and even

00:35:31,740 --> 00:35:35,940
the real derivative side so it's not

00:35:33,990 --> 00:35:38,940
really used by derivatives themselves

00:35:35,940 --> 00:35:43,320
and not advertised by them so what I

00:35:38,940 --> 00:35:45,300
would like to see first is that you help

00:35:43,320 --> 00:35:49,140
me to integrate this in the PDS so that

00:35:45,300 --> 00:35:51,840
we can have PDS wait a second

00:35:49,140 --> 00:35:53,580
pts installation for derivatives where

00:35:51,840 --> 00:35:56,460
we can grab this information directly

00:35:53,580 --> 00:35:58,619
from the derivatives and show it on

00:35:56,460 --> 00:36:01,140
their side as well because as you know

00:35:58,619 --> 00:36:03,270
the pts provides that we have been

00:36:01,140 --> 00:36:06,359
working one and during this summer we'll

00:36:03,270 --> 00:36:09,300
make it non Debian specific and I fully

00:36:06,359 --> 00:36:13,290
intend to install pts for Kali in the

00:36:09,300 --> 00:36:17,100
next few weeks and use the pts of the

00:36:13,290 --> 00:36:19,140
curry side to manage the difference

00:36:17,100 --> 00:36:21,270
between the Beyond and the tech package

00:36:19,140 --> 00:36:24,869
which needs to be merge again and

00:36:21,270 --> 00:36:27,180
updated and at the same time we should

00:36:24,869 --> 00:36:30,480
generate dispatching keep them on the

00:36:27,180 --> 00:36:32,130
derivative side so that's an interesting

00:36:30,480 --> 00:36:36,030
idea it's not one that I thought of

00:36:32,130 --> 00:36:38,490
because well the goal here is to expose

00:36:36,030 --> 00:36:40,650
information about well this is the goal

00:36:38,490 --> 00:36:42,780
of the census that I had been working on

00:36:40,650 --> 00:36:45,990
was to expose information about

00:36:42,780 --> 00:36:47,850
derivatives to Debian table but the

00:36:45,990 --> 00:36:50,100
other way is also interesting and I

00:36:47,850 --> 00:36:52,119
think at least for the patches we could

00:36:50,100 --> 00:36:57,440
certainly do that

00:36:52,119 --> 00:37:02,980
the metadata that it produces has both

00:36:57,440 --> 00:37:02,980
sides of the equation I'm not sure

00:37:12,880 --> 00:37:19,239
yeah so this is the metadata that

00:37:14,979 --> 00:37:21,309
produces sha-1 of the debian sauce

00:37:19,239 --> 00:37:25,059
package that it thinks the package is

00:37:21,309 --> 00:37:30,819
derive from debian version names and

00:37:25,059 --> 00:37:33,999
stuff and sometimes the heuristics that

00:37:30,819 --> 00:37:36,519
it uses to figure out which which

00:37:33,999 --> 00:37:38,710
package package it's derive from and not

00:37:36,519 --> 00:37:43,509
always the best so you can see in this

00:37:38,710 --> 00:37:45,720
case that it thinks that gif expert

00:37:43,509 --> 00:37:48,700
seems apt I see it which sounds like a

00:37:45,720 --> 00:37:51,869
theme package for that thing is derived

00:37:48,700 --> 00:38:00,999
from the GFX / themes package which is

00:37:51,869 --> 00:38:02,619
possible but yeah it's astonishingly

00:38:00,999 --> 00:38:04,150
difficult to write OGF experts seem

00:38:02,619 --> 00:38:06,339
entirely from scratch I find it

00:38:04,150 --> 00:38:07,989
extremely unlikely that they would have

00:38:06,339 --> 00:38:10,390
done that so it's much more likely that

00:38:07,989 --> 00:38:13,210
they derived from from that whether it's

00:38:10,390 --> 00:38:17,289
structured as a as a patch that could

00:38:13,210 --> 00:38:19,299
actually so yeah the point is that we

00:38:17,289 --> 00:38:24,309
have the metadata to do what you wanted

00:38:19,299 --> 00:38:27,489
to do Rafael yeah and I've just add that

00:38:24,309 --> 00:38:29,319
from my my traveling a couple of years

00:38:27,489 --> 00:38:32,049
ago in India and Indonesia and and

00:38:29,319 --> 00:38:35,019
discussing with the boss Linux and a few

00:38:32,049 --> 00:38:36,910
other things in those places I can

00:38:35,019 --> 00:38:39,219
really see a need and interest from

00:38:36,910 --> 00:38:41,079
their point of view to see well as a

00:38:39,219 --> 00:38:43,989
Debian developer I look at the Quality

00:38:41,079 --> 00:38:45,880
Assurance paces to see how far have

00:38:43,989 --> 00:38:47,680
others drifted away from us and how

00:38:45,880 --> 00:38:49,960
could I cherry pick from those and get

00:38:47,680 --> 00:38:51,670
that into Debian but from their

00:38:49,960 --> 00:38:53,140
perspective from the derivatives problem

00:38:51,670 --> 00:38:57,640
your perspective the derivatives

00:38:53,140 --> 00:39:00,460
perspective both us in as in how how

00:38:57,640 --> 00:39:02,890
much cooler am I then the Debian but

00:39:00,460 --> 00:39:05,739
also as like a warning sign up well how

00:39:02,890 --> 00:39:08,829
much have I drifted away that I need to

00:39:05,739 --> 00:39:10,479
then maintain myself as a warning sign

00:39:08,829 --> 00:39:13,299
of how much should I maybe try to push

00:39:10,479 --> 00:39:15,219
it back again so it's it's a great way

00:39:13,299 --> 00:39:17,619
to to see this as quality assurance

00:39:15,219 --> 00:39:19,420
pages for for the derivatives to serve

00:39:17,619 --> 00:39:22,660
them to is lovely idea

00:39:19,420 --> 00:39:25,210
but I would like to

00:39:22,660 --> 00:39:30,460
well I do not agree if you say they are

00:39:25,210 --> 00:39:33,160
much cooler I think yeah I know they

00:39:30,460 --> 00:39:36,519
just realized even as a finished product

00:39:33,160 --> 00:39:38,769
and I do not notice that they are able

00:39:36,519 --> 00:39:41,529
to change something and those the only

00:39:38,769 --> 00:39:43,089
way to change something is well it

00:39:41,529 --> 00:39:46,420
arrived and to something else which is

00:39:43,089 --> 00:39:50,559
perfectly possible but it's only in my

00:39:46,420 --> 00:39:54,640
opinion the second best way when when

00:39:50,559 --> 00:39:56,500
you're merging back I tried to do this a

00:39:54,640 --> 00:39:58,769
few times with well obviously those have

00:39:56,500 --> 00:40:03,519
been too but also with patches from

00:39:58,769 --> 00:40:06,430
things like Nemo and generally the ones

00:40:03,519 --> 00:40:11,500
that the ones that derive from unstable

00:40:06,430 --> 00:40:13,480
you have some of their likely hopefully

00:40:11,500 --> 00:40:16,660
to be reasonably current in terms of

00:40:13,480 --> 00:40:18,430
hots patch basis you have some chance

00:40:16,660 --> 00:40:21,069
that if you merge some set of patches

00:40:18,430 --> 00:40:22,450
then you will actually be able to see

00:40:21,069 --> 00:40:24,099
their Delta getting smaller because

00:40:22,450 --> 00:40:28,440
they'll probably read this at some point

00:40:24,099 --> 00:40:30,700
but for the the ones best of stable it's

00:40:28,440 --> 00:40:33,190
it's really very difficult for a Debian

00:40:30,700 --> 00:40:35,200
tender to do anything the patches

00:40:33,190 --> 00:40:37,809
probably against you know nineteen

00:40:35,200 --> 00:40:39,609
upstream versions back doesn't have to

00:40:37,809 --> 00:40:41,529
apply anymore even if you do apply it

00:40:39,609 --> 00:40:45,609
your to-do list doesn't go away because

00:40:41,529 --> 00:40:47,349
the the derivative in question is

00:40:45,609 --> 00:40:50,109
unlikely to actually resync until

00:40:47,349 --> 00:40:52,480
Debian's next stable release and it's

00:40:50,109 --> 00:40:54,880
it's generally quite an unsatisfying

00:40:52,480 --> 00:40:59,230
thing as a as a Debian developer to do I

00:40:54,880 --> 00:41:01,119
find yeah but I think it's it's not in

00:40:59,230 --> 00:41:02,980
the first place when people think should

00:41:01,119 --> 00:41:06,000
I derive from and say about say all the

00:41:02,980 --> 00:41:08,920
people want to find a solution and they

00:41:06,000 --> 00:41:10,869
have no better idea to do find this

00:41:08,920 --> 00:41:12,670
solution than doing this or that and I

00:41:10,869 --> 00:41:15,730
think it's it's maybe also a matter of

00:41:12,670 --> 00:41:18,039
documentation or just I think this text

00:41:15,730 --> 00:41:20,319
is doing a really good job to to explain

00:41:18,039 --> 00:41:23,390
people that you can change something

00:41:20,319 --> 00:41:27,170
inside realities

00:41:23,390 --> 00:41:30,500
yeah I think there could be maybe half

00:41:27,170 --> 00:41:35,059
of it is the relatives if the people

00:41:30,500 --> 00:41:37,849
would notice I am I have another

00:41:35,059 --> 00:41:40,190
question regarding the the dead tree

00:41:37,849 --> 00:41:44,390
implementation in the patches we have a

00:41:40,190 --> 00:41:46,329
applied upstream not needed or does that

00:41:44,390 --> 00:41:49,130
work with derivatives is there some

00:41:46,329 --> 00:41:51,319
standardized way to say hey that ranch

00:41:49,130 --> 00:41:54,200
is about a new logo that is derivative

00:41:51,319 --> 00:41:56,470
specific and should not be applied up

00:41:54,200 --> 00:42:00,369
streams or upstream upstream for

00:41:56,470 --> 00:42:02,720
derivatives anybody thought about that

00:42:00,369 --> 00:42:03,950
yeah I think if referring to this it's

00:42:02,720 --> 00:42:06,769
on up but there is no specific

00:42:03,950 --> 00:42:09,109
information about whether upstream of

00:42:06,769 --> 00:42:11,720
the software product or upstream of the

00:42:09,109 --> 00:42:14,809
distribution so you can't say you should

00:42:11,720 --> 00:42:16,400
not upstream this to the absolute answer

00:42:14,809 --> 00:42:20,420
but you should have stream it to Debian

00:42:16,400 --> 00:42:22,579
there is no distinction I don't think it

00:42:20,420 --> 00:42:24,769
matters really because if it's specific

00:42:22,579 --> 00:42:27,500
to the distribution it trades Pacific to

00:42:24,769 --> 00:42:29,000
use it's rarely useful for the upstream

00:42:27,500 --> 00:42:31,519
distribution but not to the upstream

00:42:29,000 --> 00:42:34,460
authors so one thing I wanted to point

00:42:31,519 --> 00:42:37,549
out to your colonists in the case of

00:42:34,460 --> 00:42:39,799
Kali Linux were based off stable but the

00:42:37,549 --> 00:42:43,369
package where we diverged usually it's

00:42:39,799 --> 00:42:45,619
more blackboard stuff so we have more

00:42:43,369 --> 00:42:49,250
recent package which are closer to in

00:42:45,619 --> 00:42:53,690
stable nor testing and the changes we we

00:42:49,250 --> 00:42:55,279
make her potentially interesting another

00:42:53,690 --> 00:42:59,720
thing that I would like to say it so

00:42:55,279 --> 00:43:02,690
it's a bit of pity's but often often we

00:42:59,720 --> 00:43:04,849
will find problems too too late I mean

00:43:02,690 --> 00:43:08,180
even in Debian we really liked some of

00:43:04,849 --> 00:43:11,029
the QA seems but we have to in Ubuntu

00:43:08,180 --> 00:43:13,609
because while we were already late into

00:43:11,029 --> 00:43:14,740
a freeze and we Callie at least fix a

00:43:13,609 --> 00:43:23,140
few of for

00:43:14,740 --> 00:43:28,150
problems in life lie built in those are

00:43:23,140 --> 00:43:32,380
too weak which is called the other one

00:43:28,150 --> 00:43:33,910
who makes small simple TDD and told I

00:43:32,380 --> 00:43:36,100
love that which are not widely used

00:43:33,910 --> 00:43:38,980
within Devon but quite used in

00:43:36,100 --> 00:43:41,080
derivatives and the big if there is a

00:43:38,980 --> 00:43:43,750
way a big issue that we are not identify

00:43:41,080 --> 00:43:45,940
not to dive inside until there is a

00:43:43,750 --> 00:43:48,480
derivative start shooting it it's a bit

00:43:45,940 --> 00:43:48,480
too later

00:43:50,460 --> 00:43:58,510
so Rafael if you plan to deploy the pts

00:43:55,840 --> 00:44:02,680
for for other derivatives one thing I

00:43:58,510 --> 00:44:06,790
really do like is to know when was a

00:44:02,680 --> 00:44:09,250
package the last time merged from your

00:44:06,790 --> 00:44:13,000
main distribution so that that would be

00:44:09,250 --> 00:44:15,760
merged at window calm for one two so it

00:44:13,000 --> 00:44:17,890
would be good maybe to have such status

00:44:15,760 --> 00:44:21,460
for other derivatives as well so you can

00:44:17,890 --> 00:44:25,540
see how old is it or how long is it

00:44:21,460 --> 00:44:38,040
wasn't taking care so that might be

00:44:25,540 --> 00:44:38,040
useful / main but yeah choose me yeah

00:44:40,430 --> 00:44:44,550
right so actually that's an interesting

00:44:42,360 --> 00:44:45,870
point if if we're saying that one of the

00:44:44,550 --> 00:44:48,750
concerns about derivatives is when

00:44:45,870 --> 00:44:51,120
they're basing on on old stable that it

00:44:48,750 --> 00:44:52,490
means there's we're it's not rewarding

00:44:51,120 --> 00:44:55,890
for package maintainer x' to merge

00:44:52,490 --> 00:44:59,970
having that kind of statistic about how

00:44:55,890 --> 00:45:03,660
good the derivative is doing about about

00:44:59,970 --> 00:45:05,370
actually merging from debian could tend

00:45:03,660 --> 00:45:07,890
to create a virtual virtuous cycle there

00:45:05,370 --> 00:45:09,780
in that the maintainer czar incentivized

00:45:07,890 --> 00:45:11,160
to they have the information to know

00:45:09,780 --> 00:45:13,890
which ones they should focus on which

00:45:11,160 --> 00:45:16,940
encourages the derivatives to actually

00:45:13,890 --> 00:45:20,580
keep up with Debian unstable and and

00:45:16,940 --> 00:45:21,720
yeah so if somebody wanted to do that to

00:45:20,580 --> 00:45:22,920
make that information available I can

00:45:21,720 --> 00:45:25,980
see how that would be potentially useful

00:45:22,920 --> 00:45:33,420
if people were going to use it so in one

00:45:25,980 --> 00:45:35,490
minute you want something I'd like to

00:45:33,420 --> 00:45:36,930
know whether a just brings back slightly

00:45:35,490 --> 00:45:38,940
more general thing from all this

00:45:36,930 --> 00:45:40,740
research you've done are we missing any

00:45:38,940 --> 00:45:42,870
mechanism which would make it easier to

00:45:40,740 --> 00:45:44,550
integrate changes is there something we

00:45:42,870 --> 00:45:45,690
need to do to make or is it just a

00:45:44,550 --> 00:45:55,200
matter of actually integrating this

00:45:45,690 --> 00:45:59,060
stuff using the existing mechanisms I'm

00:45:55,200 --> 00:46:03,120
not really sure how to answer that I

00:45:59,060 --> 00:46:07,110
think it's just a matter of integrating

00:46:03,120 --> 00:46:09,230
the purchase and the people as well you

00:46:07,110 --> 00:46:09,230
know

00:46:12,300 --> 00:46:18,000
as a maintainer there's basically only

00:46:15,780 --> 00:46:19,860
two places I look in Debian which is I

00:46:18,000 --> 00:46:22,530
look at incoming bug reports and I look

00:46:19,860 --> 00:46:24,150
at the pts and normally I only look at

00:46:22,530 --> 00:46:25,890
bugs and I occasionally look at the pts

00:46:24,150 --> 00:46:27,690
so if it's not if it's not showing up in

00:46:25,890 --> 00:46:29,130
one of those two places it's basically

00:46:27,690 --> 00:46:32,450
not gonna rise to the level of getting

00:46:29,130 --> 00:46:34,920
my attention to getting any action so

00:46:32,450 --> 00:46:40,940
eventually the patches at least will be

00:46:34,920 --> 00:46:42,870
on the pts so there are some ideas about

00:46:40,940 --> 00:46:45,950
directions we could go for this

00:46:42,870 --> 00:46:50,240
derivative census and integration of

00:46:45,950 --> 00:46:53,220
derivatives information into Debian so

00:46:50,240 --> 00:46:55,830
which areas do you think that I should

00:46:53,220 --> 00:46:57,750
focus on these are some ideas here or if

00:46:55,830 --> 00:47:00,060
you've got any other ideas I would be

00:46:57,750 --> 00:47:03,200
happy to hear about them I guess after

00:47:00,060 --> 00:47:03,200
because we're now finished

00:47:09,740 --> 00:47:16,370

YouTube URL: https://www.youtube.com/watch?v=QmppAoOZpSs


