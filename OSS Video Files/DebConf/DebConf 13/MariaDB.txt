Title: MariaDB
Publication date: 2017-11-29
Playlist: DebConf 13
Description: 
	by Michael "Monty" Widenius

At: DebConf13
https://debconf13.debconf.org/
Room: Main talk room
Scheduled start: 2013-08-15 11:30:00
Captions: 
	00:00:00,030 --> 00:00:09,719
um because Monty videos we'll talk about

00:00:05,400 --> 00:00:17,940
Mejia baby and I think how it is the

00:00:09,719 --> 00:00:21,449
status in Debian and stuff so welcome to

00:00:17,940 --> 00:00:24,060
my talk about Maria DB my scale it but

00:00:21,449 --> 00:00:26,490
about the history where we stand I wanna

00:00:24,060 --> 00:00:30,720
but we plan to do but first I want to

00:00:26,490 --> 00:00:33,180
say that I'm a develop I'm mostly at

00:00:30,720 --> 00:00:36,149
home sitting in my cellar and doing code

00:00:33,180 --> 00:00:38,040
I do these talks just because I have a

00:00:36,149 --> 00:00:40,829
hard time saying no and people ask me to

00:00:38,040 --> 00:00:42,719
do that and I also of course wants to

00:00:40,829 --> 00:00:46,050
ensure that everyone knows everything

00:00:42,719 --> 00:00:48,600
about Maria DB in the good old times we

00:00:46,050 --> 00:00:50,910
had David axe mark doing all the talks

00:00:48,600 --> 00:00:54,120
and I was sitting home doing the

00:00:50,910 --> 00:00:56,370
development but that said I'm most

00:00:54,120 --> 00:00:58,260
comfortable in a discussion with people

00:00:56,370 --> 00:01:00,989
so if you're any question at any time

00:00:58,260 --> 00:01:04,979
all want me to spend more time more time

00:01:00,989 --> 00:01:07,170
or less time on something just tell me

00:01:04,979 --> 00:01:09,090
we will let's start to introduce in

00:01:07,170 --> 00:01:11,460
Maria who is given a name to the Maria

00:01:09,090 --> 00:01:15,509
baby this is my youngest daughter she

00:01:11,460 --> 00:01:17,369
turned nine a couple of weeks ago and of

00:01:15,509 --> 00:01:20,970
course I wasn't at home I was at OSCON

00:01:17,369 --> 00:01:24,650
that's kind of the life of where you are

00:01:20,970 --> 00:01:27,060
but somebody did also lots of talks and

00:01:24,650 --> 00:01:29,280
this is following the tradition that we

00:01:27,060 --> 00:01:32,790
had my oldest daughter me given the name

00:01:29,280 --> 00:01:35,490
of my squirrel little bit what I'm going

00:01:32,790 --> 00:01:37,079
to talk about if not somebody wants me

00:01:35,490 --> 00:01:43,140
to talk about something else which I can

00:01:37,079 --> 00:01:46,560
do of course and the history is

00:01:43,140 --> 00:01:49,829
basically that I created my SQL started

00:01:46,560 --> 00:01:55,460
with the coding in 1981 we released as

00:01:49,829 --> 00:01:58,439
open source like in 95 GPL as 2000 and

00:01:55,460 --> 00:02:00,390
then it was eventually saw the Sun and I

00:01:58,439 --> 00:02:02,549
thought that would be a good place for

00:02:00,390 --> 00:02:05,250
my squirrel because sandy do understand

00:02:02,549 --> 00:02:10,429
development and open source but when

00:02:05,250 --> 00:02:13,280
Oracle bought Sun with MySQL

00:02:10,429 --> 00:02:15,769
I saw it as one of my tasks to ensure

00:02:13,280 --> 00:02:18,739
that all this time has spent on this

00:02:15,769 --> 00:02:20,420
project we didn't just get wasted and we

00:02:18,739 --> 00:02:22,370
had lots of core developers who didn't

00:02:20,420 --> 00:02:25,459
want to work at Oracle they said that

00:02:22,370 --> 00:02:28,280
they will quit and go to other companies

00:02:25,459 --> 00:02:30,650
or their projects so I I took them under

00:02:28,280 --> 00:02:34,790
my wings and created the company where

00:02:30,650 --> 00:02:37,970
all people was own record develop I was

00:02:34,790 --> 00:02:40,250
owner the company and we had as a task

00:02:37,970 --> 00:02:43,370
to keep my skull together under the name

00:02:40,250 --> 00:02:45,140
of Maria dB because during the way open

00:02:43,370 --> 00:02:48,799
source project dies if it you listed

00:02:45,140 --> 00:02:53,780
lose the core developers so fortunately

00:02:48,799 --> 00:02:58,760
we are in the know in the sky scale we

00:02:53,780 --> 00:03:03,049
are 16 developers or all the core

00:02:58,760 --> 00:03:06,650
developers except a few is part of the

00:03:03,049 --> 00:03:09,500
mariadb team and our goal is to keep it

00:03:06,650 --> 00:03:12,890
Catalan 2 together and also to ensure

00:03:09,500 --> 00:03:15,919
that my Square will always exist under

00:03:12,890 --> 00:03:18,019
another name if necessary amiable can be

00:03:15,919 --> 00:03:20,510
the community very actively to ensure

00:03:18,019 --> 00:03:26,540
that we get much more people working on

00:03:20,510 --> 00:03:27,980
Maria DB so who is using MySQL here ok

00:03:26,540 --> 00:03:32,989
so then you know a little bit about the

00:03:27,980 --> 00:03:35,599
history anybody using Murray DB ok good

00:03:32,989 --> 00:03:37,160
that's a and that's kind of nice too for

00:03:35,599 --> 00:03:41,329
me to see when I start that is four

00:03:37,160 --> 00:03:43,010
years ago will be a thought that we

00:03:41,329 --> 00:03:45,139
could get a lot of people starting to

00:03:43,010 --> 00:03:47,030
use Murray DB within one or two years

00:03:45,139 --> 00:03:48,829
because we are the core people we didn't

00:03:47,030 --> 00:03:51,489
know what we were doing and we doing it

00:03:48,829 --> 00:03:55,250
the right way basically to come till

00:03:51,489 --> 00:03:58,609
January this year Antilles started to

00:03:55,250 --> 00:04:00,639
see mainstream adoption amore BB but

00:03:58,609 --> 00:04:03,949
then you know that the open source

00:04:00,639 --> 00:04:08,389
binary compatible we aim to always be

00:04:03,949 --> 00:04:10,819
that and the main reason is that there's

00:04:08,389 --> 00:04:13,040
still lots of mysql users around 50

00:04:10,819 --> 00:04:15,769
million medical installations we want to

00:04:13,040 --> 00:04:18,560
make it trivially for anybody to go from

00:04:15,769 --> 00:04:21,840
SQL to Murray DB and currently it's like

00:04:18,560 --> 00:04:23,850
that we have extremely few

00:04:21,840 --> 00:04:26,310
persons have any problems so we have

00:04:23,850 --> 00:04:28,080
about seven my mariadb uses here

00:04:26,310 --> 00:04:32,310
have you had any problem converted to

00:04:28,080 --> 00:04:34,350
from SQL to mariadb not anything which

00:04:32,310 --> 00:04:36,570
basically is what I get everywhere

00:04:34,350 --> 00:04:39,210
basically nobody has a problem and

00:04:36,570 --> 00:04:41,760
that's also why red hat was quite

00:04:39,210 --> 00:04:44,220
confident when they I know switching all

00:04:41,760 --> 00:04:46,949
the users from my squirrel to mariadb of

00:04:44,220 --> 00:04:49,290
course maybe one in a thousand will have

00:04:46,949 --> 00:04:52,460
some issues but the good news is that

00:04:49,290 --> 00:04:56,970
the other 999 will have a better

00:04:52,460 --> 00:04:59,430
experience so what but to do that we

00:04:56,970 --> 00:05:02,220
need to make a trivial we need to have a

00:04:59,430 --> 00:05:04,530
same date on disk on the wire same file

00:05:02,220 --> 00:05:07,020
name sockets ports because otherwise you

00:05:04,530 --> 00:05:09,419
can't just the install MySQL install

00:05:07,020 --> 00:05:11,580
MIDI be and it should work and that

00:05:09,419 --> 00:05:13,800
access to be the biggest problem for me

00:05:11,580 --> 00:05:17,430
to get Murray deep into Debian because

00:05:13,800 --> 00:05:19,370
you don't usually do that in Debian to

00:05:17,430 --> 00:05:22,260
something that is a full replacement

00:05:19,370 --> 00:05:28,410
OpenOffice was one but in this case you

00:05:22,260 --> 00:05:29,970
just switch to LibreOffice and and that

00:05:28,410 --> 00:05:32,010
we can to be the political struggle I

00:05:29,970 --> 00:05:35,300
had for four years to try to get Murray

00:05:32,010 --> 00:05:37,830
DB into Debian more about that later

00:05:35,300 --> 00:05:39,690
what we are doing that is total

00:05:37,830 --> 00:05:42,419
different from Oracle is that Oracle is

00:05:39,690 --> 00:05:44,490
trying to say that you can't be part of

00:05:42,419 --> 00:05:47,160
our development team you can please give

00:05:44,490 --> 00:05:49,590
us patches the problem is that Oracle

00:05:47,160 --> 00:05:52,590
doesn't work with the open source

00:05:49,590 --> 00:05:54,570
community they don't publish trees they

00:05:52,590 --> 00:05:57,900
don't tell about the roadmap they don't

00:05:54,570 --> 00:05:58,349
even tell when a curl drop will be done

00:05:57,900 --> 00:06:01,080
or not

00:05:58,349 --> 00:06:03,320
so it's incredibly hard to do that we in

00:06:01,080 --> 00:06:05,970
the beginning we try to be patches to

00:06:03,320 --> 00:06:08,180
Oracle but actually it was so hard for

00:06:05,970 --> 00:06:11,310
us to do that and actually it's cost us

00:06:08,180 --> 00:06:13,050
more work by doing that so we have

00:06:11,310 --> 00:06:15,419
stopped doing that we have we only do

00:06:13,050 --> 00:06:18,030
that for serious security patches that

00:06:15,419 --> 00:06:20,610
we find because we don't want anybody to

00:06:18,030 --> 00:06:25,500
break in even into MySQL system because

00:06:20,610 --> 00:06:29,160
that could affect bad for us so we are

00:06:25,500 --> 00:06:32,460
through fork not just patch that we are

00:06:29,160 --> 00:06:35,010
not depending on MySQL for development

00:06:32,460 --> 00:06:35,670
we do merges every month just ensure

00:06:35,010 --> 00:06:37,860
that we get old

00:06:35,670 --> 00:06:39,840
new features and the bug fixes but

00:06:37,860 --> 00:06:42,900
actually we had to go through all the

00:06:39,840 --> 00:06:45,600
code and review it and fix a lot of

00:06:42,900 --> 00:06:47,970
things because even if Oracle has some

00:06:45,600 --> 00:06:52,440
good developers left they put a lot of

00:06:47,970 --> 00:06:55,500
new people on it they're about 20 people

00:06:52,440 --> 00:06:57,030
working on MySQL and but the people

00:06:55,500 --> 00:06:59,340
don't know the code they don't have

00:06:57,030 --> 00:07:02,250
anybody to ask because they know the

00:06:59,340 --> 00:07:05,190
core people left so the Kurd qualities

00:07:02,250 --> 00:07:07,170
data reading rapidly there are some

00:07:05,190 --> 00:07:11,520
teams that are doing really good job

00:07:07,170 --> 00:07:13,380
that's in the DB team and at the NDB

00:07:11,520 --> 00:07:16,260
team and then we have some other team

00:07:13,380 --> 00:07:18,890
who are doing a decent job like the

00:07:16,260 --> 00:07:21,930
performance schema but the main code

00:07:18,890 --> 00:07:24,540
that's decorating really really badly

00:07:21,930 --> 00:07:27,510
and that's why we need to review

00:07:24,540 --> 00:07:31,290
everything that we take in so we had

00:07:27,510 --> 00:07:34,530
about 39 years in front of MySQL via GPO

00:07:31,290 --> 00:07:37,890
only because we kind of liked the GPL

00:07:34,530 --> 00:07:40,260
and we also have it too because we are

00:07:37,890 --> 00:07:42,180
based on my squirrel so there's no risk

00:07:40,260 --> 00:07:44,400
for any closed source extensions or

00:07:42,180 --> 00:07:46,980
anything and that actually how I wanted

00:07:44,400 --> 00:07:51,270
my skull to be in the beginning so when

00:07:46,980 --> 00:07:52,530
I took investors in 2000 we made a

00:07:51,270 --> 00:07:54,300
shareholders agreement

00:07:52,530 --> 00:07:57,510
who said that the investors are not

00:07:54,300 --> 00:08:00,810
allowed to change the license it has on

00:07:57,510 --> 00:08:03,420
the server it has to be GPL and we were

00:08:00,810 --> 00:08:06,030
able to do keep that promise until we

00:08:03,420 --> 00:08:09,030
were sold the Sun but after that been a

00:08:06,030 --> 00:08:11,910
product sold and company sold you kinda

00:08:09,030 --> 00:08:15,630
lose the hold on that when we try to

00:08:11,910 --> 00:08:18,240
keep it as long as possible so during

00:08:15,630 --> 00:08:21,920
their 5 years or 4 years we have been

00:08:18,240 --> 00:08:24,750
working mariadb we are done 5 releases

00:08:21,920 --> 00:08:27,870
so we try to do a release once a year

00:08:24,750 --> 00:08:31,680
and we tried and we probably will do 2

00:08:27,870 --> 00:08:33,620
releases of 10-0 with quite rapidly

00:08:31,680 --> 00:08:36,840
about half a year in between them we

00:08:33,620 --> 00:08:39,120
also working with the Galera team to do

00:08:36,840 --> 00:08:40,950
a true multi master and there's lots of

00:08:39,120 --> 00:08:43,830
users who are really interested in that

00:08:40,950 --> 00:08:45,990
because you see that as a holy grail to

00:08:43,830 --> 00:08:48,240
solve the problem that if you have one

00:08:45,990 --> 00:08:49,440
mass that it is not fast enough you can

00:08:48,240 --> 00:08:52,080
just add

00:08:49,440 --> 00:08:54,960
- 810 masters and things work quite

00:08:52,080 --> 00:08:58,260
nicely in certain set up and you just

00:08:54,960 --> 00:09:08,790
get the scalability that you expect in a

00:08:58,260 --> 00:09:11,970
cloud environment so these are are the

00:09:08,790 --> 00:09:14,490
basic things we added in the releases so

00:09:11,970 --> 00:09:18,000
phi1 was basically my scope i won

00:09:14,490 --> 00:09:20,280
plus we did open source build

00:09:18,000 --> 00:09:22,560
environment because that didn't exist in

00:09:20,280 --> 00:09:24,810
my scale and that was actually my fault

00:09:22,560 --> 00:09:26,850
because we did a build environment that

00:09:24,810 --> 00:09:30,120
was supposed to be open source with no

00:09:26,850 --> 00:09:32,460
SQL a B and Sun we just never released

00:09:30,120 --> 00:09:34,620
it just because the maintain of that we

00:09:32,460 --> 00:09:37,590
didn't have time to handle a community

00:09:34,620 --> 00:09:39,360
and we thought that doesn't do blessed

00:09:37,590 --> 00:09:41,790
we are doing the bills so why should we

00:09:39,360 --> 00:09:43,980
do that and that was just wrong we kind

00:09:41,790 --> 00:09:45,810
of didn't expect the future that

00:09:43,980 --> 00:09:49,230
happened so we should have released that

00:09:45,810 --> 00:09:52,350
even couldn't maintain it publicly so we

00:09:49,230 --> 00:09:54,450
hacks had had to build an totally new

00:09:52,350 --> 00:09:57,720
build infrastructure based on buildbot

00:09:54,450 --> 00:09:59,670
and we have done everything with with

00:09:57,720 --> 00:10:02,370
that open source so if somebody wants to

00:09:59,670 --> 00:10:04,500
make a clone or a DB I'd put up your own

00:10:02,370 --> 00:10:07,890
build system you can do that easily in

00:10:04,500 --> 00:10:11,280
one day now it took us six months to get

00:10:07,890 --> 00:10:14,370
that done done and we also did a much

00:10:11,280 --> 00:10:16,860
better test shoot and then with Maria

00:10:14,370 --> 00:10:19,350
db5 - we worked with the community and

00:10:16,860 --> 00:10:22,350
took all the important patches that we

00:10:19,350 --> 00:10:26,910
could find that made sense to put into

00:10:22,350 --> 00:10:29,030
Maria DB and we added those so Maria TB

00:10:26,910 --> 00:10:30,840
fighter - is that true community release

00:10:29,030 --> 00:10:32,730
with five three

00:10:30,840 --> 00:10:35,580
we had optimized a team so the whole

00:10:32,730 --> 00:10:38,930
optimized a team everybody was worked on

00:10:35,580 --> 00:10:41,490
optimizing my scale mood to Maria DB and

00:10:38,930 --> 00:10:45,320
to continue the work that has been done

00:10:41,490 --> 00:10:47,730
in MySQL 6 0 and do an even better

00:10:45,320 --> 00:10:49,650
optimizer I know we hadn't have been

00:10:47,730 --> 00:10:52,170
five three have something that can

00:10:49,650 --> 00:10:57,540
compete with any other commercial

00:10:52,170 --> 00:11:00,030
databases and even handle things that

00:10:57,540 --> 00:11:01,400
Postgres was previous is said to be

00:11:00,030 --> 00:11:04,380
superior

00:11:01,400 --> 00:11:08,160
so we are quite happy with that Barnum

00:11:04,380 --> 00:11:11,520
and discipline myself having five three

00:11:08,160 --> 00:11:13,920
that is a little bit similar today one

00:11:11,520 --> 00:11:16,410
that is in my skull five six difference

00:11:13,920 --> 00:11:19,380
is that in my skull five six they took

00:11:16,410 --> 00:11:21,300
the code from six zero backported that

00:11:19,380 --> 00:11:25,020
fixed a couple of small bugs and

00:11:21,300 --> 00:11:27,630
released that in six zero to optimize

00:11:25,020 --> 00:11:30,720
the Themis I had already worked three

00:11:27,630 --> 00:11:32,460
years in my school a bee and son to do a

00:11:30,720 --> 00:11:36,060
good optimizer and then they took that

00:11:32,460 --> 00:11:37,920
and worked for persons for three years

00:11:36,060 --> 00:11:39,390
to do an even better optimized and

00:11:37,920 --> 00:11:42,480
that's what we have in Murray ADB and

00:11:39,390 --> 00:11:44,160
that's why my Maria DB in most cases for

00:11:42,480 --> 00:11:47,150
advanced queries to superior to anything

00:11:44,160 --> 00:11:49,860
am SQL habit I probably will ever happen

00:11:47,150 --> 00:11:52,950
there was a much better at application

00:11:49,860 --> 00:11:55,500
we have more features and then Maria DB

00:11:52,950 --> 00:11:58,140
five five was just merged between five

00:11:55,500 --> 00:12:01,530
three and five five so we didn't add

00:11:58,140 --> 00:12:03,750
much in five five except a more

00:12:01,530 --> 00:12:07,860
efficient Teddy pool because in five

00:12:03,750 --> 00:12:10,940
five Oracle started to do or change my

00:12:07,860 --> 00:12:13,860
squirrel to be an open core product and

00:12:10,940 --> 00:12:17,550
we have taken as a task to ensure that

00:12:13,860 --> 00:12:20,640
anything that Oracle is closed source we

00:12:17,550 --> 00:12:22,650
will have open source so one of the most

00:12:20,640 --> 00:12:24,660
important things that they did made a

00:12:22,650 --> 00:12:26,100
closed source they actually made it

00:12:24,660 --> 00:12:29,790
close was because we already have that

00:12:26,100 --> 00:12:32,640
in my scope I wanna was a trade pool and

00:12:29,790 --> 00:12:35,570
we had and they did some improvements

00:12:32,640 --> 00:12:38,550
and closed it down in fire microfiber

00:12:35,570 --> 00:12:42,240
enterprise so we added that to MariaDB

00:12:38,550 --> 00:12:46,530
something that is as good or better as

00:12:42,240 --> 00:12:52,740
as oracle acid we also added Spinks and

00:12:46,530 --> 00:12:55,230
some interesting queries for large sites

00:12:52,740 --> 00:12:57,270
like mimic limits

00:12:55,230 --> 00:13:01,460
reexamined that actually really good

00:12:57,270 --> 00:13:05,160
also for ensuring that nobody can get

00:13:01,460 --> 00:13:09,540
access to your database and try to do

00:13:05,160 --> 00:13:11,520
queries so we limit rows examined if you

00:13:09,540 --> 00:13:14,130
add that to a query you can ensure that

00:13:11,520 --> 00:13:14,860
the optimizer will never examine or

00:13:14,130 --> 00:13:17,200
order

00:13:14,860 --> 00:13:20,920
too many rows so if you have big

00:13:17,200 --> 00:13:22,630
database fist-width with security

00:13:20,920 --> 00:13:25,750
information like credit cards and stuff

00:13:22,630 --> 00:13:27,190
by adding limit rows examined thousand

00:13:25,750 --> 00:13:29,920
you can be sure that nobody can access

00:13:27,190 --> 00:13:35,290
the whole table I'll do a join and try

00:13:29,920 --> 00:13:38,140
to clear everything that you have so

00:13:35,290 --> 00:13:41,650
with be an overcomer Eid bit and zero we

00:13:38,140 --> 00:13:45,730
will have 1004 hopefully out next week

00:13:41,650 --> 00:13:47,740
and 1005 should be the first beta so in

00:13:45,730 --> 00:13:54,360
this case we have back ported those

00:13:47,740 --> 00:13:58,030
features in 5-6 that are of good quality

00:13:54,360 --> 00:14:02,590
like in a DB and performance schema have

00:13:58,030 --> 00:14:04,450
you also got online out a table to work

00:14:02,590 --> 00:14:06,580
so these are basically the most

00:14:04,450 --> 00:14:09,490
important features that you have had in

00:14:06,580 --> 00:14:11,620
five six the problem was that the

00:14:09,490 --> 00:14:14,470
replication code in my skull five six

00:14:11,620 --> 00:14:17,620
it's really horrible bad it said

00:14:14,470 --> 00:14:19,090
something that all of team who had

00:14:17,620 --> 00:14:21,070
looked at it said that they want to

00:14:19,090 --> 00:14:23,740
don't want to have that because it's

00:14:21,070 --> 00:14:27,250
wrongly designed it has too minimal

00:14:23,740 --> 00:14:30,670
limitations and they don't think we can

00:14:27,250 --> 00:14:34,180
ever get it to work or maintain it so we

00:14:30,670 --> 00:14:36,010
decided that lets in reemployment all

00:14:34,180 --> 00:14:40,360
the things that my scale has done a

00:14:36,010 --> 00:14:41,650
replication and there are also some

00:14:40,360 --> 00:14:44,230
other things that we just think are

00:14:41,650 --> 00:14:46,990
wrong ladonna so we added global

00:14:44,230 --> 00:14:49,390
transaction ID in replication in a much

00:14:46,990 --> 00:14:50,890
better way than my Skrill has it's also

00:14:49,390 --> 00:14:54,130
compatible with the multi source

00:14:50,890 --> 00:14:57,070
extensions we have done we are working

00:14:54,130 --> 00:15:01,600
on parallel applications so basically

00:14:57,070 --> 00:15:05,080
10o is I think next next week

00:15:01,600 --> 00:15:07,090
when we do 1004 basically it's ready the

00:15:05,080 --> 00:15:09,550
one thing that people have wanted for

00:15:07,090 --> 00:15:11,440
years I said that the biggest limitation

00:15:09,550 --> 00:15:14,410
of my squared is to insure that the

00:15:11,440 --> 00:15:17,800
slave is as fast as the master MySQL has

00:15:14,410 --> 00:15:18,550
in 5/6 done some things for parallel

00:15:17,800 --> 00:15:20,800
slave

00:15:18,550 --> 00:15:22,540
basically that if you have different

00:15:20,800 --> 00:15:25,090
databases those can be run in parallel

00:15:22,540 --> 00:15:27,550
the problem that in practice for most

00:15:25,090 --> 00:15:28,600
sized sites that's such a big

00:15:27,550 --> 00:15:30,490
limitations

00:15:28,600 --> 00:15:36,459
that it doesn't help them at all we will

00:15:30,490 --> 00:15:39,100
have in 1005 a full fully per

00:15:36,459 --> 00:15:42,370
application that this basically

00:15:39,100 --> 00:15:44,550
guarantees that the slave is as fast as

00:15:42,370 --> 00:15:47,170
the master for any query so if you do

00:15:44,550 --> 00:15:48,819
lots of things on the master in parallel

00:15:47,170 --> 00:15:53,949
the sleigh will also be able to do that

00:15:48,819 --> 00:15:57,850
in parallel and we already have a demo

00:15:53,949 --> 00:15:59,199
version working in Bazaar for that so we

00:15:57,850 --> 00:16:03,899
will believe that we shave it to bake

00:15:59,199 --> 00:16:03,899
get done that done by end of next month

00:16:04,470 --> 00:16:09,279
so we have lots also lots of new

00:16:06,639 --> 00:16:11,589
features I shall explain is something

00:16:09,279 --> 00:16:13,750
that is really nice that it if you have

00:16:11,589 --> 00:16:16,180
a query that takes a long time

00:16:13,750 --> 00:16:17,680
you can explain on a running query and

00:16:16,180 --> 00:16:19,779
you can see actually what did optimize I

00:16:17,680 --> 00:16:21,970
do with it so you can see that should we

00:16:19,779 --> 00:16:24,579
actually kill it or not multi-source

00:16:21,970 --> 00:16:26,199
means that you can have lots of masters

00:16:24,579 --> 00:16:28,649
with different data then you can add one

00:16:26,199 --> 00:16:31,120
slave and you can do parallel

00:16:28,649 --> 00:16:36,670
replication from all the masters to the

00:16:31,120 --> 00:16:40,149
slave we have something in outer tables

00:16:36,670 --> 00:16:42,370
we are done even faster delete returning

00:16:40,149 --> 00:16:44,949
is something that is quite useful that

00:16:42,370 --> 00:16:47,019
you use that is an i think it's an

00:16:44,949 --> 00:16:49,660
oracle extension that you can see the

00:16:47,019 --> 00:16:53,319
rows that you are deleting so basically

00:16:49,660 --> 00:16:56,139
the delete plus select we have a

00:16:53,319 --> 00:16:59,079
speed-up group commit even more I will

00:16:56,139 --> 00:17:01,930
come to that we added Cassandra as a

00:16:59,079 --> 00:17:04,929
storage engine and leveldb atticus a

00:17:01,930 --> 00:17:08,199
level Debus tunnel also now so we can

00:17:04,929 --> 00:17:11,470
actually combine new SQL under SQL with

00:17:08,199 --> 00:17:16,179
Maria DB we added connect which I have a

00:17:11,470 --> 00:17:17,500
slide for really interesting storage

00:17:16,179 --> 00:17:21,059
tension and we are working on adding

00:17:17,500 --> 00:17:23,260
toki DB able to talk about that too and

00:17:21,059 --> 00:17:24,760
more statistics that you can see

00:17:23,260 --> 00:17:30,970
actually for each thread how much memory

00:17:24,760 --> 00:17:33,429
is using this one should work now yeah

00:17:30,970 --> 00:17:35,140
so these lights are just to show that

00:17:33,429 --> 00:17:38,980
what is actually work we are done on the

00:17:35,140 --> 00:17:40,929
optimizer and why do I am able to claim

00:17:38,980 --> 00:17:41,920
that Maria DB some days better than my

00:17:40,929 --> 00:17:44,560
squirrel

00:17:41,920 --> 00:17:49,600
Risa's the work that we added in 5 3 & 5

00:17:44,560 --> 00:17:51,340
5 MySQL 5 5 even that was a rock I

00:17:49,600 --> 00:17:53,800
worked a long time on that they never

00:17:51,340 --> 00:17:56,260
added any other complex so they never

00:17:53,800 --> 00:17:58,360
did any Optima optimization for the

00:17:56,260 --> 00:18:02,650
optimizer you must go files they are

00:17:58,360 --> 00:18:05,980
taking the code that was in 6-0 added at

00:18:02,650 --> 00:18:09,130
two five six and you can see it

00:18:05,980 --> 00:18:11,500
basically which one are done so they

00:18:09,130 --> 00:18:13,150
only had one optimization that they

00:18:11,500 --> 00:18:18,100
added that we didn't have and we added

00:18:13,150 --> 00:18:21,010
that to that zero so these are not that

00:18:18,100 --> 00:18:23,650
important to just means that most

00:18:21,010 --> 00:18:26,500
complex queries that should be able to

00:18:23,650 --> 00:18:31,870
be executable to execute fast that

00:18:26,500 --> 00:18:36,190
cannot be executed fosters and so the

00:18:31,870 --> 00:18:39,670
one couple of things that yeah explain

00:18:36,190 --> 00:18:43,630
for delete update and explain in JSON

00:18:39,670 --> 00:18:47,680
format how many's using JSON here okay

00:18:43,630 --> 00:18:48,280
so still I don't know if that's a good

00:18:47,680 --> 00:18:50,020
idea or not

00:18:48,280 --> 00:18:51,760
we will do that because we want to be

00:18:50,020 --> 00:18:55,570
compatible we just haven't seed and

00:18:51,760 --> 00:18:59,170
something really critical we also care

00:18:55,570 --> 00:19:01,690
about all users and people you still

00:18:59,170 --> 00:19:03,940
using my eyes I'm for different reasons

00:19:01,690 --> 00:19:08,890
just because it takes less discs so we

00:19:03,940 --> 00:19:12,090
speed up that some to the 50% already in

00:19:08,890 --> 00:19:15,120
five to business actual community patch

00:19:12,090 --> 00:19:18,280
we added optimizations that you can add

00:19:15,120 --> 00:19:20,500
more memory and you can get three seven

00:19:18,280 --> 00:19:22,990
or ten times speed up just by adding

00:19:20,500 --> 00:19:24,700
memory for queries this works for

00:19:22,990 --> 00:19:27,310
queries where you are going to retrieve

00:19:24,700 --> 00:19:29,220
the same row multiple times when doing a

00:19:27,310 --> 00:19:34,630
joiner

00:19:29,220 --> 00:19:36,460
this was the one slide where when I

00:19:34,630 --> 00:19:40,270
showing this one we usually get people

00:19:36,460 --> 00:19:44,770
to switch to MariaDB instantly and so

00:19:40,270 --> 00:19:50,380
because of a bug or design issue in in a

00:19:44,770 --> 00:19:52,070
DB my skull even if you it it works

00:19:50,380 --> 00:19:55,160
quite good

00:19:52,070 --> 00:19:57,650
and it will bill to put ads normally as

00:19:55,160 --> 00:20:02,950
soon as you add replication it basically

00:19:57,650 --> 00:20:05,720
stops scaling as you can see here and

00:20:02,950 --> 00:20:07,760
this was something that was big problem

00:20:05,720 --> 00:20:11,180
for facebook so they created the patch

00:20:07,760 --> 00:20:13,040
for that too so some of that and then

00:20:11,180 --> 00:20:17,060
they asked at our team can we do it

00:20:13,040 --> 00:20:19,640
better and the blue curve is how Maria

00:20:17,060 --> 00:20:22,880
db5 scales so this is basically Maria

00:20:19,640 --> 00:20:24,830
did b55 MySQL 5/5 so so by just

00:20:22,880 --> 00:20:27,230
replacing you might qualify if a master

00:20:24,830 --> 00:20:29,600
with Maria DB without doing any change

00:20:27,230 --> 00:20:35,210
that you basically get four five times

00:20:29,600 --> 00:20:39,350
speed up okay no this is and this is

00:20:35,210 --> 00:20:44,600
blog by Mark Allen from Facebook so it's

00:20:39,350 --> 00:20:49,190
not from us as soon as this blog was

00:20:44,600 --> 00:20:51,650
published the replication team in MySQL

00:20:49,190 --> 00:20:54,590
said that we will also add a group

00:20:51,650 --> 00:20:58,850
commit and they published away how they

00:20:54,590 --> 00:21:01,460
would do it and what we thought was that

00:20:58,850 --> 00:21:02,180
the sign that they are proposing will

00:21:01,460 --> 00:21:04,640
never work

00:21:02,180 --> 00:21:06,050
so in five six when the other group

00:21:04,640 --> 00:21:09,920
commit we actually noticed that they

00:21:06,050 --> 00:21:13,370
copied our code slightly different as

00:21:09,920 --> 00:21:16,760
but so this is how my squirrel perform

00:21:13,370 --> 00:21:19,880
nowadays build five six and this Maria

00:21:16,760 --> 00:21:22,580
db10 Sarah where we have improved their

00:21:19,880 --> 00:21:27,370
group commit even more and we will in in

00:21:22,580 --> 00:21:31,490
ten one we will improve it one step more

00:21:27,370 --> 00:21:36,110
did they the problem with replication is

00:21:31,490 --> 00:21:38,840
that them so the setup we are working on

00:21:36,110 --> 00:21:41,270
is that we have sky squirrel who is

00:21:38,840 --> 00:21:44,300
doing frontline support to customers and

00:21:41,270 --> 00:21:46,760
a mariadb team never know working no

00:21:44,300 --> 00:21:49,280
days working in skies well we are

00:21:46,760 --> 00:21:51,560
handling all the hard issues we see a

00:21:49,280 --> 00:21:55,790
lot of people having problem in my squad

00:21:51,560 --> 00:21:58,460
application and even if we can fix most

00:21:55,790 --> 00:22:00,680
things in my squirrel amory ADB we can't

00:21:58,460 --> 00:22:03,470
fix the replication problems that comes

00:22:00,680 --> 00:22:05,070
up basically weekly because it's design

00:22:03,470 --> 00:22:06,960
issues basically have to

00:22:05,070 --> 00:22:09,269
recodification so we have you just had

00:22:06,960 --> 00:22:14,100
to tell them to twist to marry a baby so

00:22:09,269 --> 00:22:17,190
this kind of curve is the idol curve but

00:22:14,100 --> 00:22:19,169
replication is just so bad so people

00:22:17,190 --> 00:22:22,470
will get stole things they lose records

00:22:19,169 --> 00:22:24,059
and then all the slave dies and we have

00:22:22,470 --> 00:22:26,490
looked at the code and just see that

00:22:24,059 --> 00:22:30,929
they're so full of bugs that we don't

00:22:26,490 --> 00:22:32,639
want to maintain that so there i talked

00:22:30,929 --> 00:22:35,850
about the thread pool that's something

00:22:32,639 --> 00:22:38,129
that or i could decide it to the close

00:22:35,850 --> 00:22:41,309
source and the reason why you need a

00:22:38,129 --> 00:22:43,379
thread pool is that mascot works with

00:22:41,309 --> 00:22:47,659
one thread per connection which works

00:22:43,379 --> 00:22:50,429
quite nice and when I designed that in

00:22:47,659 --> 00:22:53,090
93 I thought that's something that

00:22:50,429 --> 00:22:57,750
should work quite good but then you had

00:22:53,090 --> 00:23:01,830
CPUs that basic was one core and for

00:22:57,750 --> 00:23:04,529
that the old system worked quite good

00:23:01,830 --> 00:23:09,629
with many course you had a problem that

00:23:04,529 --> 00:23:15,000
if you run basically 512 threads you get

00:23:09,629 --> 00:23:17,070
your CPU going down with almost 30% and

00:23:15,000 --> 00:23:18,539
then it goes even down further and the

00:23:17,070 --> 00:23:20,639
reason that the more trade show add

00:23:18,539 --> 00:23:24,120
because all these threads are running in

00:23:20,639 --> 00:23:28,860
the same memory and you can and handle

00:23:24,120 --> 00:23:33,049
that many trends at the same time speed

00:23:28,860 --> 00:23:37,200
is going to thread switching and the

00:23:33,049 --> 00:23:39,059
solution to that is instead of having

00:23:37,200 --> 00:23:40,919
one trade the connection you have a pool

00:23:39,059 --> 00:23:44,000
of threads you basically say that

00:23:40,919 --> 00:23:46,169
let's have 64 thread handle all queries

00:23:44,000 --> 00:23:49,250
that means that you are much less thread

00:23:46,169 --> 00:23:52,379
switching and then you get much better

00:23:49,250 --> 00:23:55,200
and this is the reason that Oracle did

00:23:52,379 --> 00:23:57,870
this close source because the real

00:23:55,200 --> 00:23:59,940
advanced websites with lots of users

00:23:57,870 --> 00:24:01,980
they kind of need that kind of scaling

00:23:59,940 --> 00:24:04,590
but wilmarie DB you get that for free

00:24:01,980 --> 00:24:06,629
and the tricky thing with the pool of

00:24:04,590 --> 00:24:09,090
threads if you're less 64 threads

00:24:06,629 --> 00:24:11,879
running at the same time assuming you

00:24:09,090 --> 00:24:14,850
get 64 queries that takes one hour wage

00:24:11,879 --> 00:24:15,419
that case your server installed can't do

00:24:14,850 --> 00:24:18,000
anything

00:24:15,419 --> 00:24:18,660
so this pool of trips only works when

00:24:18,000 --> 00:24:20,610
you have a

00:24:18,660 --> 00:24:23,070
really fast queries that only take a

00:24:20,610 --> 00:24:25,770
couple of microseconds or a second so

00:24:23,070 --> 00:24:28,650
what we have a unique Murray you can run

00:24:25,770 --> 00:24:31,919
with both version at the same time so

00:24:28,650 --> 00:24:35,070
and when you configure Murray DB you get

00:24:31,919 --> 00:24:38,880
two ports one is for thread per

00:24:35,070 --> 00:24:41,250
connection one is for pool of threads as

00:24:38,880 --> 00:24:44,400
long as you direct all your paths

00:24:41,250 --> 00:24:46,950
running queries to put threads then you

00:24:44,400 --> 00:24:50,720
can handle sites much bigger that you

00:24:46,950 --> 00:24:50,720
can do my squirrel learning MySQL today

00:24:50,960 --> 00:25:02,850
so what am any question so far anybody

00:24:59,490 --> 00:25:04,010
speaking English now crap was one make

00:25:02,850 --> 00:25:10,169
yourself tired

00:25:04,010 --> 00:25:16,049
Miles's along volume PNP sir finishes

00:25:10,169 --> 00:25:19,140
ideas Peeta okay so basically the new

00:25:16,049 --> 00:25:24,480
SQL movement started with a blog from

00:25:19,140 --> 00:25:26,580
Twitter by a guy who hated SQL and

00:25:24,480 --> 00:25:29,520
wanted to prove that you can do much

00:25:26,580 --> 00:25:34,020
better with some of the new SQL and is

00:25:29,520 --> 00:25:35,669
out there that were Cassandra and the

00:25:34,020 --> 00:25:38,610
problem was to be the blog post back

00:25:35,669 --> 00:25:41,549
then was that you could have doing a

00:25:38,610 --> 00:25:42,870
exact schema he used for Cassandra he

00:25:41,549 --> 00:25:46,799
could use that in my scale and get

00:25:42,870 --> 00:25:50,600
exactly the same speed up but anyway but

00:25:46,799 --> 00:25:53,340
the main reason for using a SQL that

00:25:50,600 --> 00:25:57,270
it's nice to be able to handle

00:25:53,340 --> 00:25:59,210
unstructured data where you have

00:25:57,270 --> 00:26:04,320
different amount of columns per row

00:25:59,210 --> 00:26:07,860
because even if SQL is quite we're still

00:26:04,320 --> 00:26:11,039
we're still language it can't easily you

00:26:07,860 --> 00:26:13,080
can't easily do a baby store in SQL

00:26:11,039 --> 00:26:15,270
where you want to have store attributes

00:26:13,080 --> 00:26:17,280
for every item you have because a

00:26:15,270 --> 00:26:20,659
computer has different attributes that

00:26:17,280 --> 00:26:25,460
then a t-shirt that has small large

00:26:20,659 --> 00:26:29,520
decisis the colors and so on and also

00:26:25,460 --> 00:26:32,140
people were unhappy with the replication

00:26:29,520 --> 00:26:34,420
with MySQL because they were comparing

00:26:32,140 --> 00:26:37,299
most of the issues we know SQL with

00:26:34,420 --> 00:26:39,309
MySQL and as you saw there they were

00:26:37,299 --> 00:26:41,950
comparing be discarded basically said my

00:26:39,309 --> 00:26:46,020
squad application doesn't scale so we

00:26:41,950 --> 00:26:48,040
fix the replication and it scales

00:26:46,020 --> 00:26:51,370
comparable to many of the new SQL

00:26:48,040 --> 00:26:53,679
solutions with Galera you get something

00:26:51,370 --> 00:27:01,179
very similar but the unstructured data

00:26:53,679 --> 00:27:04,150
is still a problem but we want to ensure

00:27:01,179 --> 00:27:11,440
that MariaDB would be become a bridge

00:27:04,150 --> 00:27:14,500
between SQL and NoSQL and to do that we

00:27:11,440 --> 00:27:18,210
had done a lot of things we added

00:27:14,500 --> 00:27:21,790
handler socket which basically gives

00:27:18,210 --> 00:27:24,400
direct access to the DB and makes marié

00:27:21,790 --> 00:27:29,049
digby as fast as memcache for doing

00:27:24,400 --> 00:27:30,730
quick reads we added Cassandra we work

00:27:29,049 --> 00:27:32,980
on level DB and we also added dynamic

00:27:30,730 --> 00:27:36,809
columns which is a very simple way so

00:27:32,980 --> 00:27:42,010
you can have in practice different

00:27:36,809 --> 00:27:44,260
columns for every row with you only

00:27:42,010 --> 00:27:47,230
having to learn I think six different

00:27:44,260 --> 00:27:49,419
functions and we using this as a

00:27:47,230 --> 00:27:53,440
building block firing your SQL no we

00:27:49,419 --> 00:27:56,590
also working on MongoDB that MongoDB as

00:27:53,440 --> 00:27:58,330
a storage engine for Murray a DB and

00:27:56,590 --> 00:28:02,890
what the storage changes means that you

00:27:58,330 --> 00:28:06,220
can select you can update you can do

00:28:02,890 --> 00:28:09,549
most things that's okay as you can do

00:28:06,220 --> 00:28:12,040
natively with Cassandra for example but

00:28:09,549 --> 00:28:14,950
you can use SQL and you can also join

00:28:12,040 --> 00:28:16,600
Cassandra level DB and with the connect

00:28:14,950 --> 00:28:18,669
engine you can even do joints with

00:28:16,600 --> 00:28:23,320
Oracle if you still like to use this

00:28:18,669 --> 00:28:25,960
legacy databases so we have got a lot of

00:28:23,320 --> 00:28:30,760
questions so why did we do Maria db10 0

00:28:25,960 --> 00:28:35,290
instead of Maria DB 5 6 the problem is

00:28:30,760 --> 00:28:37,929
that because so we are feeling

00:28:35,290 --> 00:28:39,940
uncomfortable with so a so big part of

00:28:37,929 --> 00:28:42,160
the MySQL code that we don't want to

00:28:39,940 --> 00:28:44,830
take it we had to rewrite it so doing

00:28:42,160 --> 00:28:45,910
the whole MySQL 5 6 and adding that to

00:28:44,830 --> 00:28:47,530
Mario DB

00:28:45,910 --> 00:28:50,290
five six would take us one to two years

00:28:47,530 --> 00:28:52,720
we did want to wait two years to do a

00:28:50,290 --> 00:28:55,840
release so then we had two three choices

00:28:52,720 --> 00:28:58,920
calling it Maria db5 five maria DB five

00:28:55,840 --> 00:29:02,680
six or something else and we calling it

00:28:58,920 --> 00:29:04,990
maria b55 when we already have much more

00:29:02,680 --> 00:29:07,840
features and most of the futures at 5.6

00:29:04,990 --> 00:29:10,870
will be wrong calling it 5.6 and not

00:29:07,840 --> 00:29:13,000
being a 100% drop-in replacement for

00:29:10,870 --> 00:29:16,060
four or five six would also be wrong so

00:29:13,000 --> 00:29:20,440
we just do choose 10 zero to make things

00:29:16,060 --> 00:29:25,720
easy so the plan is that we will do the

00:29:20,440 --> 00:29:28,540
merge of my between MySQL and Marie DB

00:29:25,720 --> 00:29:31,420
in two steps ten zero will have mostly

00:29:28,540 --> 00:29:34,540
futures and tents then one released

00:29:31,420 --> 00:29:36,850
hopefully in February Mars next year

00:29:34,540 --> 00:29:39,460
with high verbal hybrid thing but we

00:29:36,850 --> 00:29:41,680
will do 10 0 in such a way that all the

00:29:39,460 --> 00:29:45,850
data on disk and on a wire is still the

00:29:41,680 --> 00:29:47,650
same maybe some options will not do

00:29:45,850 --> 00:29:52,210
anything but there will be options that

00:29:47,650 --> 00:29:54,520
have no effect than maybe speed so in

00:29:52,210 --> 00:29:57,400
practice you should still be able moving

00:29:54,520 --> 00:29:59,980
from a maria DB from SQL five six to ten

00:29:57,400 --> 00:30:01,810
zero for most cases we don't noticing

00:29:59,980 --> 00:30:04,000
anything that at least the girl will be

00:30:01,810 --> 00:30:07,120
going with fat ten one we can guarantee

00:30:04,000 --> 00:30:15,220
that 10 0 we can guarantee that for most

00:30:07,120 --> 00:30:18,460
but not for so with maria DB we are

00:30:15,220 --> 00:30:21,460
doing open development we are working

00:30:18,460 --> 00:30:25,900
with lots with the community and this is

00:30:21,460 --> 00:30:27,460
a big shift from for mysql lately and

00:30:25,900 --> 00:30:29,410
going back to the beginning of my

00:30:27,460 --> 00:30:32,020
squirrel when I started with the MySQL

00:30:29,410 --> 00:30:34,540
project in 95 I was working actively the

00:30:32,020 --> 00:30:37,720
community ensure that all the everything

00:30:34,540 --> 00:30:40,210
they wanted was added to them my

00:30:37,720 --> 00:30:43,330
squirrel if it was possible and we had

00:30:40,210 --> 00:30:52,270
people helping us with some patches like

00:30:43,330 --> 00:30:58,300
porting MySQL to Windows but in 2001 we

00:30:52,270 --> 00:30:59,740
had 15 employed in in my baby that was

00:30:58,300 --> 00:31:02,710
when we took investment

00:30:59,740 --> 00:31:05,020
of which 14 was developers and then I

00:31:02,710 --> 00:31:07,480
went to more tamiko's who was the CEO

00:31:05,020 --> 00:31:11,200
and said that I can't do the community

00:31:07,480 --> 00:31:13,809
part anymore we need somebody we need a

00:31:11,200 --> 00:31:15,520
community team and more more times that

00:31:13,809 --> 00:31:17,050
was said that that's not why we got

00:31:15,520 --> 00:31:17,620
money from the investors we will do that

00:31:17,050 --> 00:31:19,929
later

00:31:17,620 --> 00:31:22,900
in the meantime time everybody can work

00:31:19,929 --> 00:31:26,860
with the community on the free time and

00:31:22,900 --> 00:31:30,400
in but the effect was that between 2001

00:31:26,860 --> 00:31:35,650
and 2005 we had nobody working with

00:31:30,400 --> 00:31:37,960
Adobe the community so we still helped

00:31:35,650 --> 00:31:42,250
people doing connectors but the server

00:31:37,960 --> 00:31:45,520
or development basically except few bug

00:31:42,250 --> 00:31:48,790
fixes was done within my school a bee

00:31:45,520 --> 00:31:51,550
community helped us with doing getting

00:31:48,790 --> 00:31:55,050
Ruby to work HPE Perl everything else

00:31:51,550 --> 00:31:57,340
but but it it was kind of monolithic

00:31:55,050 --> 00:32:00,580
structure and this was never the

00:31:57,340 --> 00:32:02,980
intention so with Maria DB I go back to

00:32:00,580 --> 00:32:05,440
work in activity community ensure that

00:32:02,980 --> 00:32:07,870
any patches that people have come in

00:32:05,440 --> 00:32:09,820
that also white why I created a over

00:32:07,870 --> 00:32:12,790
part of creating the MariaDB foundation

00:32:09,820 --> 00:32:15,910
to ensure that we have a way to ensure

00:32:12,790 --> 00:32:18,640
that everybody can get reduced and we

00:32:15,910 --> 00:32:21,040
also encourage people to sponsor

00:32:18,640 --> 00:32:24,130
development within the company employee

00:32:21,040 --> 00:32:26,500
developers work a full-time on Maria DB

00:32:24,130 --> 00:32:29,380
in other companies than justin in sky

00:32:26,500 --> 00:32:30,880
squirrel and no we have seen couple of

00:32:29,380 --> 00:32:32,230
companies standing up and saying that we

00:32:30,880 --> 00:32:34,240
will do that and we are working with

00:32:32,230 --> 00:32:37,450
them to employ people Google already

00:32:34,240 --> 00:32:38,620
employed publicly one working full-time

00:32:37,450 --> 00:32:41,260
on Maria dB

00:32:38,620 --> 00:32:45,130
but they have a team of ten engineers

00:32:41,260 --> 00:32:47,620
who is working around MariaDB so we will

00:32:45,130 --> 00:32:52,480
see much more patches from Google in the

00:32:47,620 --> 00:32:54,760
near future and we have from our side we

00:32:52,480 --> 00:32:58,870
are hundred thousands of downloads Maria

00:32:54,760 --> 00:33:02,490
DB probably 1 million users but things

00:32:58,870 --> 00:33:06,010
are changing rapidly I will come to that

00:33:02,490 --> 00:33:08,620
so this little bit about database usage

00:33:06,010 --> 00:33:12,700
occur according a survey for a for fine

00:33:08,620 --> 00:33:13,270
group that overall MySQL has about 80%

00:33:12,700 --> 00:33:19,500
of

00:33:13,270 --> 00:33:19,500
or database it's actually 12 minutes

00:33:19,920 --> 00:33:26,430
this when we started I can argue a foot

00:33:23,140 --> 00:33:29,650
I cannot be for two minutes then Alice

00:33:26,430 --> 00:33:32,800
but basically my scale has 80% then a

00:33:29,650 --> 00:33:37,930
seeker server / stress Oracle MongoDB

00:33:32,800 --> 00:33:41,080
Maria DB DB - Cassandra Reddy's this

00:33:37,930 --> 00:33:44,530
just shows also that the to service one

00:33:41,080 --> 00:33:46,960
in 2009 this is how most people use the

00:33:44,530 --> 00:33:50,140
mask well and how they predicted the use

00:33:46,960 --> 00:33:53,020
it would be 2012 they did a second

00:33:50,140 --> 00:33:55,650
survey and and this is the mariadb uses

00:33:53,020 --> 00:33:59,590
my scale use actually has gone up and

00:33:55,650 --> 00:34:02,020
the predicted uses is slowing down but a

00:33:59,590 --> 00:34:04,570
little bit but on the other hand at the

00:34:02,020 --> 00:34:06,580
same time it's slowing down they expect

00:34:04,570 --> 00:34:12,490
that the database use is to go up for a

00:34:06,580 --> 00:34:15,010
five time so if we still are at 2017 65

00:34:12,490 --> 00:34:17,410
percent running MySQL and MariaDB

00:34:15,010 --> 00:34:19,240
we still are the dominant database and

00:34:17,410 --> 00:34:22,660
my job is to ensure that this is

00:34:19,240 --> 00:34:26,260
completely green and we are kind of

00:34:22,660 --> 00:34:29,980
getting there so I said that in general

00:34:26,260 --> 00:34:31,930
things started to change the the first

00:34:29,980 --> 00:34:33,940
news that causes people to know this

00:34:31,930 --> 00:34:35,050
MariaDB global that was when we compared

00:34:33,940 --> 00:34:37,960
the announced that they move into

00:34:35,050 --> 00:34:40,360
MariaDB they moved their english server

00:34:37,960 --> 00:34:42,670
and it went so good so they are moving

00:34:40,360 --> 00:34:47,260
order a service I think they maybe have

00:34:42,670 --> 00:34:48,820
moved all of them already and then most

00:34:47,260 --> 00:34:51,850
Mozilla blog that they're moving to

00:34:48,820 --> 00:34:53,760
MariaDB fedora voted seven oh that they

00:34:51,850 --> 00:34:57,430
were replaced my square with Maria DB

00:34:53,760 --> 00:35:01,140
open SUSE has has including Maria to be

00:34:57,430 --> 00:35:03,430
a long time no its default slack but

00:35:01,140 --> 00:35:06,070
basically everything except D been

00:35:03,430 --> 00:35:09,190
Ubuntu more or less which the reason why

00:35:06,070 --> 00:35:11,920
I'm here and also in Aprill

00:35:09,190 --> 00:35:15,670
Google said that new SQL offering is

00:35:11,920 --> 00:35:17,830
based on Maria DB fusion of i/o is

00:35:15,670 --> 00:35:21,490
heavily pushing Maria DB they're working

00:35:17,830 --> 00:35:23,680
us with improving Maria DB on fusion-io

00:35:21,490 --> 00:35:25,520
but they are doing in such a way that

00:35:23,680 --> 00:35:27,140
all the extensions

00:35:25,520 --> 00:35:29,930
we'll be soon available also for the

00:35:27,140 --> 00:35:31,640
memory cards that's nice and red hat is

00:35:29,930 --> 00:35:34,130
including Maria D we read that

00:35:31,640 --> 00:35:38,210
enterprise I think also that openSUSE

00:35:34,130 --> 00:35:39,950
enterprise will include Maria di as far

00:35:38,210 --> 00:35:43,970
as I heard but haven't seen our office

00:35:39,950 --> 00:35:47,180
SIL statement about that basically this

00:35:43,970 --> 00:35:49,910
shows that basically people expect that

00:35:47,180 --> 00:35:51,470
no SQL everybody is talking about it how

00:35:49,910 --> 00:35:54,530
much market share how much money they

00:35:51,470 --> 00:35:56,540
will be but according to the for I

00:35:54,530 --> 00:35:58,790
wonder search group you might as well my

00:35:56,540 --> 00:36:00,890
market share will continue to be much

00:35:58,790 --> 00:36:05,870
bigger than the SQL at least for the

00:36:00,890 --> 00:36:09,110
coming few years we have had lots of

00:36:05,870 --> 00:36:10,880
people coming to us and saying that in

00:36:09,110 --> 00:36:15,740
the beginning that they have problem

00:36:10,880 --> 00:36:18,470
with Oracle because the license prices

00:36:15,740 --> 00:36:21,860
has rising dramatically it's an Oracle

00:36:18,470 --> 00:36:24,020
acquired son and in practice my Square

00:36:21,860 --> 00:36:26,420
is no more expensive than Oracle if you

00:36:24,020 --> 00:36:29,720
want the license from Oracle at least

00:36:26,420 --> 00:36:31,880
for the oil market and one of the

00:36:29,720 --> 00:36:37,900
problem has been that the libraries has

00:36:31,880 --> 00:36:40,580
been GPL and Oracle's no even going to

00:36:37,900 --> 00:36:42,110
companies only doing monetarist

00:36:40,580 --> 00:36:43,850
monitoring services they're not

00:36:42,110 --> 00:36:45,590
disputing my scale but they used in the

00:36:43,850 --> 00:36:47,810
client library and they are trying to

00:36:45,590 --> 00:36:50,500
get them to pay for it so we created the

00:36:47,810 --> 00:36:54,110
LGPL client library based on my scope at

00:36:50,500 --> 00:36:58,250
323 it's compatible with the current one

00:36:54,110 --> 00:37:02,510
and we anybody can using the using this

00:36:58,250 --> 00:37:05,720
we also working on Java and we should

00:37:02,510 --> 00:37:10,120
have already BC LGPL client library

00:37:05,720 --> 00:37:13,580
ready we'd you know one month I think

00:37:10,120 --> 00:37:22,880
and this has been also sponsored by the

00:37:13,580 --> 00:37:24,620
foundation anybody use in Tokyo DB no

00:37:22,880 --> 00:37:28,340
Toki Dib is just a very interesting

00:37:24,620 --> 00:37:30,710
engine that this is the only candidate I

00:37:28,340 --> 00:37:34,940
see that can actually potentially

00:37:30,710 --> 00:37:36,940
replace in a DB and we will add that to

00:37:34,940 --> 00:37:39,079
the next version of Maria DB they

00:37:36,940 --> 00:37:41,089
decided to become open source

00:37:39,079 --> 00:37:43,609
two months ago and we have working with

00:37:41,089 --> 00:37:45,499
them to get it fully integrated in

00:37:43,609 --> 00:37:47,569
Moorea DB and just not taking the

00:37:45,499 --> 00:37:50,299
current card actually improving it so to

00:37:47,569 --> 00:37:53,049
use facilities that I only exist in

00:37:50,299 --> 00:37:56,119
Murray DB to make toki DB even better

00:37:53,049 --> 00:37:58,640
we also sponsored the connect stories

00:37:56,119 --> 00:38:00,890
engine which is a engine that can read a

00:37:58,640 --> 00:38:03,529
lot of different formats from this and

00:38:00,890 --> 00:38:07,249
use those natively so MySQL has a

00:38:03,529 --> 00:38:09,349
variety based a CVS stories engine with

00:38:07,249 --> 00:38:12,440
this that's read only by using connect

00:38:09,349 --> 00:38:15,289
you can read and update CVS engines you

00:38:12,440 --> 00:38:18,319
can also use ODBC to connect to Postgres

00:38:15,289 --> 00:38:20,239
Oracle or so we know that people have

00:38:18,319 --> 00:38:22,700
been dealing to system about that and

00:38:20,239 --> 00:38:26,569
I've seen a couple users who are using

00:38:22,700 --> 00:38:31,880
this to do joins between MySQL and

00:38:26,569 --> 00:38:35,509
Postgres and you got six minutes six

00:38:31,880 --> 00:38:43,940
minutes or or four if you ask that guide

00:38:35,509 --> 00:38:45,890
don't trust him should I worry that the

00:38:43,940 --> 00:38:53,809
light doesn't stay on no I shouldn't

00:38:45,890 --> 00:38:57,499
good okay so thank you you can't see my

00:38:53,809 --> 00:39:00,819
slides because they're on here one of

00:38:57,499 --> 00:39:03,529
the things that has changed since

00:39:00,819 --> 00:39:07,069
meridia b bastarz it is much more of a

00:39:03,529 --> 00:39:10,369
focus on community as we've been

00:39:07,069 --> 00:39:13,609
changing the structure of how people can

00:39:10,369 --> 00:39:15,140
contribute to Murray DV we felt that it

00:39:13,609 --> 00:39:18,410
was very important to start an

00:39:15,140 --> 00:39:20,630
independent foundation to be the focal

00:39:18,410 --> 00:39:22,910
point for community activity so that it

00:39:20,630 --> 00:39:25,729
was no longer under the control of a

00:39:22,910 --> 00:39:28,430
single company and so at the end of last

00:39:25,729 --> 00:39:31,910
year Monte created a Murray DB

00:39:28,430 --> 00:39:35,209
foundation and I joined in and started

00:39:31,910 --> 00:39:39,049
helping him without this spring since

00:39:35,209 --> 00:39:41,329
then we have established a board of

00:39:39,049 --> 00:39:43,729
directors for the foundation that

00:39:41,329 --> 00:39:46,099
includes Jeremy who's Rodney from

00:39:43,729 --> 00:39:47,569
Craigslist who's also a major Murray DB

00:39:46,099 --> 00:39:50,690
user that wasn't on Monty's list just

00:39:47,569 --> 00:39:52,380
now and we have Sergey Galoob Nick who's

00:39:50,690 --> 00:39:55,249
one of the core developers

00:39:52,380 --> 00:39:56,579
on there and then that there's Monty

00:39:55,249 --> 00:39:59,339
myself

00:39:56,579 --> 00:40:00,960
Andrew cats who's a lawyer in the UK

00:39:59,339 --> 00:40:03,390
who's helping us with governance and the

00:40:00,960 --> 00:40:07,049
chair of the board is Rasmus Johansson

00:40:03,390 --> 00:40:09,450
who is the was helping Monti with

00:40:07,049 --> 00:40:13,609
administering his business and is now

00:40:09,450 --> 00:40:16,859
working with sky SQL that board is now

00:40:13,609 --> 00:40:19,799
putting together a new governance for

00:40:16,859 --> 00:40:22,200
the meridia foundation and we hope that

00:40:19,799 --> 00:40:24,539
during September we'll be able to

00:40:22,200 --> 00:40:26,099
publish that governance on the internet

00:40:24,539 --> 00:40:28,229
and we'll be hoping there'll be a lot of

00:40:26,099 --> 00:40:29,880
people with an eye for open-source

00:40:28,229 --> 00:40:32,130
governance coming and telling us what's

00:40:29,880 --> 00:40:35,339
wrong with it and giving us a

00:40:32,130 --> 00:40:37,470
substantial quantity of pull requests to

00:40:35,339 --> 00:40:39,509
fix it up and make it into good

00:40:37,470 --> 00:40:41,549
independent governance the rough

00:40:39,509 --> 00:40:44,130
timetable of that is to publish in

00:40:41,549 --> 00:40:48,210
September for the board to consider the

00:40:44,130 --> 00:40:50,160
feedback in late October for us to have

00:40:48,210 --> 00:40:52,470
a board vote establishing those new

00:40:50,160 --> 00:40:54,599
bylaws as a new governance in November

00:40:52,470 --> 00:40:58,069
and then to have community board

00:40:54,599 --> 00:41:00,119
elections to replace these these current

00:40:58,069 --> 00:41:01,700
hand-selected board members with

00:41:00,119 --> 00:41:03,539
community selected board members

00:41:01,700 --> 00:41:06,779
probably the model that we'll be using

00:41:03,539 --> 00:41:09,869
will be to have 50 50 board elections

00:41:06,779 --> 00:41:11,339
50% coming from commercial members of

00:41:09,869 --> 00:41:14,549
the foundation who are providing us with

00:41:11,339 --> 00:41:17,339
our funding and 50% coming from the

00:41:14,549 --> 00:41:19,499
contributors and committers on maria DB

00:41:17,339 --> 00:41:24,269
so that the board is not under the

00:41:19,499 --> 00:41:25,890
control either of the commit team nor of

00:41:24,269 --> 00:41:28,019
the commercial contributors but it

00:41:25,890 --> 00:41:29,430
remains a balance between the two the

00:41:28,019 --> 00:41:31,859
reason we're doing that is because the

00:41:29,430 --> 00:41:35,309
the foundation employers a small

00:41:31,859 --> 00:41:37,650
development team our goal is not to

00:41:35,309 --> 00:41:40,799
develop all of Murray DB that's the job

00:41:37,650 --> 00:41:42,450
of the community of committers but we do

00:41:40,799 --> 00:41:44,969
feel there's a need to have a central

00:41:42,450 --> 00:41:47,880
team who are doing build sustain and

00:41:44,969 --> 00:41:49,319
package so making sure the build system

00:41:47,880 --> 00:41:51,950
works and that there is a working

00:41:49,319 --> 00:41:55,200
repository making sure that we are

00:41:51,950 --> 00:41:58,289
sustaining so reintegrating the changes

00:41:55,200 --> 00:42:04,049
that are coming upstream from MySQL next

00:41:58,289 --> 00:42:05,519
line and producing packages and we're

00:42:04,049 --> 00:42:09,569
very keen indeed to

00:42:05,519 --> 00:42:11,219
engage with Debian did we do I've you

00:42:09,569 --> 00:42:13,259
may remember that I've engaged with

00:42:11,219 --> 00:42:16,439
Debian before on trying to get openjdk

00:42:13,259 --> 00:42:18,359
into Debian and so I know what's

00:42:16,439 --> 00:42:20,699
involved in getting a package and we're

00:42:18,359 --> 00:42:22,529
very keen indeed to become the slaves of

00:42:20,699 --> 00:42:25,919
your MySQL package maintainer

00:42:22,529 --> 00:42:27,779
so that you become fans of Marie de

00:42:25,919 --> 00:42:30,329
beers a database package in Debian and

00:42:27,779 --> 00:42:32,249
we're also extremely keen to have Sergey

00:42:30,329 --> 00:42:33,839
become the slave of your security team

00:42:32,249 --> 00:42:36,169
so that you don't have any security

00:42:33,839 --> 00:42:39,059
issues and so that you're able to have a

00:42:36,169 --> 00:42:41,779
transparent and accessible security

00:42:39,059 --> 00:42:44,099
experience rather than a fait accompli

00:42:41,779 --> 00:42:46,679
security experience which I suspect is

00:42:44,099 --> 00:42:49,829
what you have at the moment the

00:42:46,679 --> 00:42:53,579
foundation is funded by the membership

00:42:49,829 --> 00:42:54,989
fees of commercial sponsors we have four

00:42:53,579 --> 00:42:57,359
or five at the moment and a growing

00:42:54,989 --> 00:42:58,949
number of commercial sponsors so that's

00:42:57,359 --> 00:43:00,569
why they will appear in the governance

00:42:58,949 --> 00:43:02,459
is because you can't take money from

00:43:00,569 --> 00:43:04,619
people and tell them that they they

00:43:02,459 --> 00:43:06,539
don't get a say however we don't intend

00:43:04,619 --> 00:43:10,039
to give them control we intend to make

00:43:06,539 --> 00:43:12,809
sure that they have a say but are

00:43:10,039 --> 00:43:14,789
ultimately the project is going to be

00:43:12,809 --> 00:43:16,679
under the control of the committers and

00:43:14,789 --> 00:43:18,779
we're going to ensure that by making

00:43:16,679 --> 00:43:20,549
sure that the committers are actually

00:43:18,779 --> 00:43:23,039
the only people who have a say over what

00:43:20,549 --> 00:43:24,029
goes into the code so this foundation is

00:43:23,039 --> 00:43:26,549
not going to be able to set the

00:43:24,029 --> 00:43:28,139
technical direction of Mirae DB it is

00:43:26,549 --> 00:43:29,849
purely going to be providing the

00:43:28,139 --> 00:43:35,069
environment in which the Technic

00:43:29,849 --> 00:43:38,549
technical activity takes place our goal

00:43:35,069 --> 00:43:44,219
is to make sure that Murray DB becomes

00:43:38,549 --> 00:43:48,209
the the the dominant provider of the API

00:43:44,219 --> 00:43:49,649
that MySQL currently provides however we

00:43:48,209 --> 00:43:51,779
understand it's very important to stay

00:43:49,649 --> 00:43:54,059
compatible and so we're going to make

00:43:51,779 --> 00:43:55,469
try and make sure that as far as it's

00:43:54,059 --> 00:43:58,019
possible to do so as Monty has been

00:43:55,469 --> 00:44:01,380
saying through here that Murray DB is

00:43:58,019 --> 00:44:03,229
compatible with MySQL I don't it's not

00:44:01,380 --> 00:44:05,219
the world's most exciting subject

00:44:03,229 --> 00:44:08,909
governance and that's why Monty got me

00:44:05,219 --> 00:44:10,499
to do it because it bores him and I I'd

00:44:08,909 --> 00:44:12,119
be very pleased to discuss this with

00:44:10,499 --> 00:44:14,339
anyone that is interested in digging

00:44:12,119 --> 00:44:16,319
into exactly what we're doing I'm gonna

00:44:14,339 --> 00:44:18,060
stay until the end of lunch and I would

00:44:16,319 --> 00:44:25,050
be very pleased to discuss that

00:44:18,060 --> 00:44:31,500
and that was only four minutes Monty who

00:44:25,050 --> 00:44:36,170
is counting so find us sponsors and

00:44:31,500 --> 00:44:36,170
developers are welcome so we have a to

00:44:36,230 --> 00:44:42,440
200 developers including me paid by the

00:44:39,870 --> 00:44:44,820
foundation and one documentation writer

00:44:42,440 --> 00:44:46,770
so this is the conclusions and our 30

00:44:44,820 --> 00:44:48,900
seconds so I assume you can read that

00:44:46,770 --> 00:45:00,830
and then we have 20 seconds for

00:44:48,900 --> 00:45:05,340
questions so when he was released

00:45:00,830 --> 00:45:07,470
we had the topic of the release girls

00:45:05,340 --> 00:45:10,770
and I asked and Debbie endeavor

00:45:07,470 --> 00:45:14,100
what was the future of MySQL and MariaDB

00:45:10,770 --> 00:45:17,580
in Debian the maintainer said that they

00:45:14,100 --> 00:45:20,370
were planning on having both for Jesse

00:45:17,580 --> 00:45:24,660
and do you know more about it was their

00:45:20,370 --> 00:45:26,460
intention what's what's going to happen

00:45:24,660 --> 00:45:28,680
in Debian do you do you know now or not

00:45:26,460 --> 00:45:32,220
so I don't we are talking here with

00:45:28,680 --> 00:45:33,390
Debian about how to continue and not

00:45:32,220 --> 00:45:35,580
Hannibal's ensure that I got your

00:45:33,390 --> 00:45:38,910
question but as if I understand

00:45:35,580 --> 00:45:40,950
correctly you just asked how I see how

00:45:38,910 --> 00:45:45,720
DBS should be the forward we use the

00:45:40,950 --> 00:45:48,380
MySQL and MariaDB more or less or did I

00:45:45,720 --> 00:45:48,380
misunderstand something

00:45:51,230 --> 00:45:57,230
that's it not something some guy can

00:45:54,210 --> 00:46:01,770
decide on I can only influence you and

00:45:57,230 --> 00:46:05,310
the other distributions all of them has

00:46:01,770 --> 00:46:08,280
said that I've used Maria DB by default

00:46:05,310 --> 00:46:09,690
and if you want you can install MySQL

00:46:08,280 --> 00:46:11,370
some of those doesn't even allow you to

00:46:09,690 --> 00:46:13,860
install my squad which i think is stupid

00:46:11,370 --> 00:46:17,490
because I always like to make the users

00:46:13,860 --> 00:46:20,550
happy so how I would like to see it

00:46:17,490 --> 00:46:23,090
personally we basically have a MySQL

00:46:20,550 --> 00:46:25,830
amaretti packet and then one packet that

00:46:23,090 --> 00:46:28,400
people can choose which one they should

00:46:25,830 --> 00:46:31,080
use like we had in the past for Java

00:46:28,400 --> 00:46:35,130
because that would give them maximum

00:46:31,080 --> 00:46:37,230
flexibility when it comes to what's the

00:46:35,130 --> 00:46:38,790
the logical thing to do I think that you

00:46:37,230 --> 00:46:40,740
should be compatible with other

00:46:38,790 --> 00:46:43,620
distributions and not make it hard for

00:46:40,740 --> 00:46:44,790
people to switch from openSUSE to debian

00:46:43,620 --> 00:46:49,740
or something like that

00:46:44,790 --> 00:46:52,080
so in that case work of a Maria DB will

00:46:49,740 --> 00:46:55,560
be the best what we can promise you is

00:46:52,080 --> 00:46:57,810
that we have people on our side that we

00:46:55,560 --> 00:47:00,090
will put up with that will answer and

00:46:57,810 --> 00:47:03,450
solve an issue that comes up in Debian

00:47:00,090 --> 00:47:07,160
to put to summarize that that's exactly

00:47:03,450 --> 00:47:10,680
the question we came here to ask you and

00:47:07,160 --> 00:47:12,450
and we're very willing to put so we've

00:47:10,680 --> 00:47:14,490
we've got some staff in the foundation

00:47:12,450 --> 00:47:16,590
I'm very willing to direct those staff

00:47:14,490 --> 00:47:18,630
to be the slave of your package

00:47:16,590 --> 00:47:20,550
maintainers and to be the slave of your

00:47:18,630 --> 00:47:23,180
security team to make sure that Murray

00:47:20,550 --> 00:47:26,040
DB shows up in Debian either as the only

00:47:23,180 --> 00:47:29,310
MySQL API provider or as one of two

00:47:26,040 --> 00:47:30,780
mysql api providers and exactly how to

00:47:29,310 --> 00:47:33,720
do that I know that the people who

00:47:30,780 --> 00:47:36,180
should decide are not us but your MySQL

00:47:33,720 --> 00:47:38,820
package maintainers if you would like a

00:47:36,180 --> 00:47:40,350
Murray DB package maintainer you know

00:47:38,820 --> 00:47:41,700
that's not the way Debian works like we

00:47:40,350 --> 00:47:43,290
you don't you don't appoint one one

00:47:41,700 --> 00:47:47,600
doesn't show up and say here I'm here to

00:47:43,290 --> 00:47:49,950
help we're here to be to be slaves so

00:47:47,600 --> 00:47:51,300
I'll tell you who I'll tell your package

00:47:49,950 --> 00:47:53,460
maintainers who they are I know who the

00:47:51,300 --> 00:47:55,710
package maintainers our security team

00:47:53,460 --> 00:47:56,970
want to help you but that your question

00:47:55,710 --> 00:47:58,290
is the question we want to ask you

00:47:56,970 --> 00:48:01,770
rather than the question we want you to

00:47:58,290 --> 00:48:02,819
ask us ok on my watch we are now already

00:48:01,770 --> 00:48:08,160
four minutes over

00:48:02,819 --> 00:48:10,949
so I guess you have to do use the whole

00:48:08,160 --> 00:48:13,530
web track to answer more questions and

00:48:10,949 --> 00:48:19,819
yeah thank you for the talk

00:48:13,530 --> 00:48:19,819

YouTube URL: https://www.youtube.com/watch?v=cbWZ2JQHUlM


