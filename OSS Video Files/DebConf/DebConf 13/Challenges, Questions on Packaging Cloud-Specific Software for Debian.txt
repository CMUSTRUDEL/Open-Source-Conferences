Title: Challenges, Questions on Packaging Cloud-Specific Software for Debian
Publication date: 2017-11-29
Playlist: DebConf 13
Description: 
	by David McWherter

At: DebConf13
https://debconf13.debconf.org/
Room: Second talk room
Scheduled start: 2013-08-13 09:30:00
Captions: 
	00:00:00,000 --> 00:00:05,879
hi guys good morning I hope you're not

00:00:02,220 --> 00:00:07,740
too hungover I want to talk to you today

00:00:05,879 --> 00:00:10,830
about what we sort of started talking

00:00:07,740 --> 00:00:13,950
about yesterday which is dealing with

00:00:10,830 --> 00:00:16,049
all the the complexities of packaging

00:00:13,950 --> 00:00:18,840
all the all the all the tools that

00:00:16,049 --> 00:00:23,550
Google wants to ship in in in Google and

00:00:18,840 --> 00:00:25,560
Google's Debian image but in the but in

00:00:23,550 --> 00:00:26,580
multiple versions of the Debian

00:00:25,560 --> 00:00:27,750
operating system it turns out that

00:00:26,580 --> 00:00:29,910
there's lots of version itis and other

00:00:27,750 --> 00:00:31,590
kinds of issues for running into and I'd

00:00:29,910 --> 00:00:33,090
like to go into a couple of examples and

00:00:31,590 --> 00:00:35,610
hopefully you guys can help me figure

00:00:33,090 --> 00:00:37,590
out what we you need to do either inside

00:00:35,610 --> 00:00:38,790
Google or between Google and Debian to

00:00:37,590 --> 00:00:42,270
figure out how to deal with these sorts

00:00:38,790 --> 00:00:44,610
of problems going forward like I said

00:00:42,270 --> 00:00:46,050
yesterday historically when we built our

00:00:44,610 --> 00:00:48,539
images to be just like the eBoost

00:00:46,050 --> 00:00:50,460
wrapped a filesystem image and then just

00:00:48,539 --> 00:00:52,469
copied all of our files inside and that

00:00:50,460 --> 00:00:54,750
was suboptimal for various reasons right

00:00:52,469 --> 00:00:58,350
you can't update packages and so forth

00:00:54,750 --> 00:00:59,760
and you can't move them it's just less

00:00:58,350 --> 00:01:01,320
pleasurable and I smooth customer

00:00:59,760 --> 00:01:03,329
experience we'd like to make that a lot

00:01:01,320 --> 00:01:05,909
better I mean also like to get those

00:01:03,329 --> 00:01:08,340
things into the mainline Debian source

00:01:05,909 --> 00:01:09,890
tree or Debian release tree just like we

00:01:08,340 --> 00:01:14,070
were talking about yesterday in order to

00:01:09,890 --> 00:01:17,130
maybe one day a brand our Debian images

00:01:14,070 --> 00:01:19,560
official we've been making some progress

00:01:17,130 --> 00:01:21,659
on this and so when we first announced

00:01:19,560 --> 00:01:22,860
released up our Debian images we've been

00:01:21,659 --> 00:01:24,799
starting to convert some of our tools

00:01:22,860 --> 00:01:28,290
and we've actually got some nice

00:01:24,799 --> 00:01:31,320
automation almost complete due to a we

00:01:28,290 --> 00:01:32,490
knew again you I've never really learned

00:01:31,320 --> 00:01:35,970
how to pronounce her last name very well

00:01:32,490 --> 00:01:37,409
but basically it takes our once we cut a

00:01:35,970 --> 00:01:39,540
new release of our tool and publish it

00:01:37,409 --> 00:01:41,340
to the outside world it goes and does a

00:01:39,540 --> 00:01:43,049
whole bunch of things to build a Debian

00:01:41,340 --> 00:01:45,560
automatically and stick it into a

00:01:43,049 --> 00:01:48,720
repository that we use to build images

00:01:45,560 --> 00:01:50,340
okay so exactly what software are we

00:01:48,720 --> 00:01:52,530
talking about we're talking about the

00:01:50,340 --> 00:01:55,829
Google cloud tools we're talking about

00:01:52,530 --> 00:01:57,299
tools for compute tools for for storage

00:01:55,829 --> 00:01:59,549
and tools for other products quick

00:01:57,299 --> 00:02:01,890
bigquery and so forth and so on we're

00:01:59,549 --> 00:02:04,290
talking about various kinds of software

00:02:01,890 --> 00:02:07,079
that are used just to just specifically

00:02:04,290 --> 00:02:08,940
to make the integration make Google

00:02:07,079 --> 00:02:10,649
compute sort of a functional product the

00:02:08,940 --> 00:02:12,840
ability to create snapshots of your

00:02:10,649 --> 00:02:13,650
image of your disc images things that

00:02:12,840 --> 00:02:18,180
manage accounts

00:02:13,650 --> 00:02:19,349
IP addresses and things that start set

00:02:18,180 --> 00:02:22,230
up the host statement other things like

00:02:19,349 --> 00:02:24,930
this we also sometimes want to modify

00:02:22,230 --> 00:02:27,659
configuration files like SSH and sshd

00:02:24,930 --> 00:02:29,400
there are some issues around the cloud

00:02:27,659 --> 00:02:31,650
where for instance if you don't keep

00:02:29,400 --> 00:02:33,299
your network connection active it

00:02:31,650 --> 00:02:35,879
sometimes will timeout and you'd like to

00:02:33,299 --> 00:02:36,359
keep SSH keep alive and stuff like this

00:02:35,879 --> 00:02:39,599
too

00:02:36,359 --> 00:02:42,659
to keep the connections alive but it's

00:02:39,599 --> 00:02:45,000
not clear exactly how to do that so some

00:02:42,659 --> 00:02:46,950
of these are harder than others so for

00:02:45,000 --> 00:02:49,319
instance we found that packaging up our

00:02:46,950 --> 00:02:51,090
tools is yeah we don't know exactly how

00:02:49,319 --> 00:02:53,450
to do it right some of the things in

00:02:51,090 --> 00:02:55,680
mostly it's due to dependencies we found

00:02:53,450 --> 00:02:57,060
some things are easy mostly because

00:02:55,680 --> 00:02:59,639
they're just simple files they don't

00:02:57,060 --> 00:03:00,510
modify anything else they have very few

00:02:59,639 --> 00:03:03,150
dependencies

00:03:00,510 --> 00:03:05,819
it just needs Python execute of the

00:03:03,150 --> 00:03:07,829
Python runtime things just work and then

00:03:05,819 --> 00:03:09,599
some things are questionable like it's

00:03:07,829 --> 00:03:11,670
unclear to me that if you wanted to

00:03:09,599 --> 00:03:13,530
modify the configuration files from

00:03:11,670 --> 00:03:16,139
another package with your package how

00:03:13,530 --> 00:03:30,780
you might do that that's fairly what was

00:03:16,139 --> 00:03:32,790
that policy configuration fry from one

00:03:30,780 --> 00:03:35,780
package to another is forbidden by the

00:03:32,790 --> 00:03:35,780
Debian policy is

00:03:36,680 --> 00:03:42,049
good so that's that solves that problem

00:04:02,090 --> 00:04:13,049
yeah so if if so if you're saying if the

00:04:10,049 --> 00:04:16,430
existing package has a de directory you

00:04:13,049 --> 00:04:16,430
can add files into the dot e direct

00:04:19,730 --> 00:04:23,750
yeah and I think we're using that for

00:04:22,610 --> 00:04:26,510
our syslog I don't know if that's a

00:04:23,750 --> 00:04:28,430
patent or upstream and we should

00:04:26,510 --> 00:04:29,690
probably switch to our sudoers for the

00:04:28,430 --> 00:04:32,360
account management to use that as well

00:04:29,690 --> 00:04:34,580
yes I would agree in general we love

00:04:32,360 --> 00:04:37,370
that idea and whenever we find it we use

00:04:34,580 --> 00:04:39,530
it but in some cases like SSH I don't

00:04:37,370 --> 00:04:41,180
think that's currently done it's not

00:04:39,530 --> 00:04:42,350
supported by the tool so maybe it's this

00:04:41,180 --> 00:04:43,820
is one of those things where we just

00:04:42,350 --> 00:04:45,020
figure out how to transition all the

00:04:43,820 --> 00:04:46,340
tool existing tools so I don't we'll

00:04:45,020 --> 00:04:49,810
talk about that later there's a section

00:04:46,340 --> 00:04:55,490
later we should maybe come back to that

00:04:49,810 --> 00:04:57,710
but those are good ideas let's see so

00:04:55,490 --> 00:04:59,630
let's go into a couple of these examples

00:04:57,710 --> 00:05:01,250
what makes things hard I talked about

00:04:59,630 --> 00:05:02,630
them a little bit yesterday I don't know

00:05:01,250 --> 00:05:05,750
if where all of you here yesterday

00:05:02,630 --> 00:05:09,440
yesterday's main talk for Google compute

00:05:05,750 --> 00:05:12,020
only a few of you okay good so Google

00:05:09,440 --> 00:05:14,060
compute GC util is a Google command line

00:05:12,020 --> 00:05:16,550
tool for Google computes that's a pretty

00:05:14,060 --> 00:05:20,810
simple program it's just 100% Python

00:05:16,550 --> 00:05:23,960
apache license code it doesn't do or it

00:05:20,810 --> 00:05:26,300
doesn't need anything fancy right uses a

00:05:23,960 --> 00:05:28,700
several packages here Google a few tools

00:05:26,300 --> 00:05:31,730
Google API Python client HTTP Lib two IP

00:05:28,700 --> 00:05:34,490
at our ISO 8601 and Python G Flags these

00:05:31,730 --> 00:05:37,280
are its dependencies back in the day

00:05:34,490 --> 00:05:39,590
about two years ago we were using a PI

00:05:37,280 --> 00:05:41,120
pi to build this tool and suck up all

00:05:39,590 --> 00:05:43,160
the dependencies that we needed but we

00:05:41,120 --> 00:05:44,810
found that in general the the Python

00:05:43,160 --> 00:05:46,100
versioning system wasn't doing a good

00:05:44,810 --> 00:05:47,810
enough job making sure that we got

00:05:46,100 --> 00:05:49,640
exactly the versions that we want of all

00:05:47,810 --> 00:05:51,410
the packages and we were getting many

00:05:49,640 --> 00:05:54,560
support calls from people who had a

00:05:51,410 --> 00:05:56,240
system in which some module was a

00:05:54,560 --> 00:05:58,250
slightly different version because of

00:05:56,240 --> 00:05:59,570
some crazy dependency chain or something

00:05:58,250 --> 00:06:02,630
like this and we eventually just

00:05:59,570 --> 00:06:05,690
switched over to a world view in which

00:06:02,630 --> 00:06:07,190
we basically took the the exact versions

00:06:05,690 --> 00:06:09,470
of all the dependencies when we need we

00:06:07,190 --> 00:06:11,330
copied them into our source tree or into

00:06:09,470 --> 00:06:14,020
our into our into our package tree and

00:06:11,330 --> 00:06:17,270
we import modules directly from there

00:06:14,020 --> 00:06:19,460
yes you know that it is not possible to

00:06:17,270 --> 00:06:21,860
do that in Debian right I don't know

00:06:19,460 --> 00:06:24,650
what so this is this is this is this is

00:06:21,860 --> 00:06:28,310
it's possible super but for me doing it

00:06:24,650 --> 00:06:30,770
might it might be uncover it might be on

00:06:28,310 --> 00:06:32,760
coder but in general we found that it's

00:06:30,770 --> 00:06:35,250
the only way that we can ensure that the

00:06:32,760 --> 00:06:38,280
the stability of the product yeah I mean

00:06:35,250 --> 00:06:41,010
I've you know I could see I can see both

00:06:38,280 --> 00:06:44,520
sides and oh I mean obviously I'm

00:06:41,010 --> 00:06:46,710
wearing two hats right but but I yeah

00:06:44,520 --> 00:06:49,050
I've mentioned that that being typically

00:06:46,710 --> 00:06:52,080
avoids this but at the same time

00:06:49,050 --> 00:06:53,940
whatever like the solution should not

00:06:52,080 --> 00:06:57,470
like we need to figure out a solution

00:06:53,940 --> 00:06:59,880
other than having an unstable product

00:06:57,470 --> 00:07:03,270
you know we need to find a solution that

00:06:59,880 --> 00:07:06,480
you know respects the reasons behind

00:07:03,270 --> 00:07:09,060
Debian's policies yet and also allows a

00:07:06,480 --> 00:07:11,010
useful experience for like a stable

00:07:09,060 --> 00:07:14,160
experience for the customers and users

00:07:11,010 --> 00:07:20,570
is there anybody here who could talk I

00:07:14,160 --> 00:07:21,720
can see a HTTP lib to IPR I saw one

00:07:20,570 --> 00:07:24,330
already

00:07:21,720 --> 00:07:26,490
yes but so many of them how many of them

00:07:24,330 --> 00:07:28,800
have versions that we have not been able

00:07:26,490 --> 00:07:30,780
to qualify against and maybe we just

00:07:28,800 --> 00:07:32,250
need to qualify against all the versions

00:07:30,780 --> 00:07:34,350
of all these things in all the versions

00:07:32,250 --> 00:07:36,180
of Debian but again that increases the

00:07:34,350 --> 00:07:39,630
taste testing matrix and it's a large

00:07:36,180 --> 00:07:42,510
support cost I mean one of the questions

00:07:39,630 --> 00:07:45,990
I might have is why would why why would

00:07:42,510 --> 00:07:49,260
copying statically into into a single

00:07:45,990 --> 00:07:50,940
package what what the issue would tell

00:07:49,260 --> 00:07:53,430
me there are many issues with code

00:07:50,940 --> 00:07:56,100
duplication and the main main issue with

00:07:53,430 --> 00:07:59,400
code duplication is security when you

00:07:56,100 --> 00:08:03,210
have a bug in a package debian make sure

00:07:59,400 --> 00:08:05,340
that that package gets updated but if

00:08:03,210 --> 00:08:10,290
you have that package statically copied

00:08:05,340 --> 00:08:13,860
then that bug is not fixed in your

00:08:10,290 --> 00:08:16,470
static copy and so you may have a

00:08:13,860 --> 00:08:19,910
security bug that is Debian is not able

00:08:16,470 --> 00:08:22,770
to fix it because you have the copy

00:08:19,910 --> 00:08:25,530
unless they also fixed all the things

00:08:22,770 --> 00:08:32,220
that depended on it right inference is

00:08:25,530 --> 00:08:34,890
this case exactly

00:08:32,220 --> 00:08:36,450
but for packages that have copies and

00:08:34,890 --> 00:08:40,800
those copies are in the Debian

00:08:36,450 --> 00:08:43,320
repository it means a lot of extra work

00:08:40,800 --> 00:08:45,800
for the people who are providing patches

00:08:43,320 --> 00:08:50,000
to also go on and patch all the

00:08:45,800 --> 00:08:54,410
tactical copies sure so it's it's more

00:08:50,000 --> 00:08:56,000
work for security mainly so I feel like

00:08:54,410 --> 00:08:57,980
your best solution here is if these

00:08:56,000 --> 00:08:59,300
libraries are in the archive you should

00:08:57,980 --> 00:09:00,740
be able to you should try and work with

00:08:59,300 --> 00:09:03,470
the version in the archive because if

00:09:00,740 --> 00:09:04,940
you were to make our Python HTTP Lib to

00:09:03,470 --> 00:09:06,950
a newer version then you'd break other

00:09:04,940 --> 00:09:09,320
things in the archive and if you ship

00:09:06,950 --> 00:09:10,519
your own copy of it well then you could

00:09:09,320 --> 00:09:13,220
then you responsible for the security

00:09:10,519 --> 00:09:14,810
that works as well but it's not your

00:09:13,220 --> 00:09:16,399
problem it's not integrating with it

00:09:14,810 --> 00:09:18,350
there still is the challenge though that

00:09:16,399 --> 00:09:21,200
from Google's perspective right we need

00:09:18,350 --> 00:09:24,130
to make it work with squeezed and wheezy

00:09:21,200 --> 00:09:27,620
and Jessie and sent to us and RedHat and

00:09:24,130 --> 00:09:29,060
SUSE and so forth and so on right so now

00:09:27,620 --> 00:09:30,920
we're talking like a dozen different

00:09:29,060 --> 00:09:33,500
versions of all these packages that we

00:09:30,920 --> 00:09:38,029
have to qualify against and change code

00:09:33,500 --> 00:09:39,890
to support right of course unless debian

00:09:38,029 --> 00:09:41,930
wants to take over the responsibility I

00:09:39,890 --> 00:09:43,279
guess maybe of like well when if

00:09:41,930 --> 00:09:44,990
somebody wanted to create a package of

00:09:43,279 --> 00:09:47,149
these things I don't know who but like

00:09:44,990 --> 00:09:48,050
maybe front desk for you my china say

00:09:47,149 --> 00:09:54,829
there you can see the front test venue

00:09:48,050 --> 00:09:57,110
maintainer you can do that via the you

00:09:54,829 --> 00:09:59,529
know at the same time the same argument

00:09:57,110 --> 00:10:02,300
about duplication of effort across

00:09:59,529 --> 00:10:04,339
different operating systems from

00:10:02,300 --> 00:10:05,720
Google's perspective also applies from

00:10:04,339 --> 00:10:07,910
Devon's perspective across different

00:10:05,720 --> 00:10:12,890
packages that you understand so it the

00:10:07,910 --> 00:10:15,740
same logic has both sides it's also from

00:10:12,890 --> 00:10:19,450
a customer point of view if I as

00:10:15,740 --> 00:10:22,550
administrator of something when I have

00:10:19,450 --> 00:10:26,270
when everything uses the Debian packages

00:10:22,550 --> 00:10:29,930
it means you have to test more but it

00:10:26,270 --> 00:10:33,440
also means I as user only have the

00:10:29,930 --> 00:10:38,480
package once when I have multiple copies

00:10:33,440 --> 00:10:41,420
of the package I have to make sure all

00:10:38,480 --> 00:10:43,880
of them are secure all of them fits my

00:10:41,420 --> 00:10:46,940
needs if I have something special I have

00:10:43,880 --> 00:10:49,100
to fix all of them so if there's

00:10:46,940 --> 00:10:52,060
something that applicators everything

00:10:49,100 --> 00:10:56,270
I'm very reluctant to use it as user

00:10:52,060 --> 00:11:00,540
because if I have an big installation it

00:10:56,270 --> 00:11:04,570
means much the application for me

00:11:00,540 --> 00:11:06,220
sure but and I understand the issue but

00:11:04,570 --> 00:11:08,590
I mean with respect to this code

00:11:06,220 --> 00:11:10,690
duplication problem right it's quite

00:11:08,590 --> 00:11:13,120
conceivable I could see at least for

00:11:10,690 --> 00:11:14,710
some of these cases the rights the the

00:11:13,120 --> 00:11:17,080
easiest solution for the program

00:11:14,710 --> 00:11:19,330
developers which is not actually me it's

00:11:17,080 --> 00:11:21,940
other teams at Google who are building

00:11:19,330 --> 00:11:23,560
some of these tools is maybe just to

00:11:21,940 --> 00:11:25,060
drop the dependency on the library and

00:11:23,560 --> 00:11:27,310
write a whole separate chunk of code

00:11:25,060 --> 00:11:28,870
that recreates what happens in that

00:11:27,310 --> 00:11:31,030
library just because they can control

00:11:28,870 --> 00:11:32,590
what's happening in that code right and

00:11:31,030 --> 00:11:34,570
even and if there's a security bug there

00:11:32,590 --> 00:11:36,850
you're still screwed right you can't

00:11:34,570 --> 00:11:39,280
update that either independent of this

00:11:36,850 --> 00:11:41,770
tool it's of course easier for the

00:11:39,280 --> 00:11:45,400
developer to only have to test with one

00:11:41,770 --> 00:11:47,590
version but for me as user most things

00:11:45,400 --> 00:11:50,080
that are easier for the developer are

00:11:47,590 --> 00:11:52,800
things that make me not use the software

00:11:50,080 --> 00:11:56,110
if you don't have a bug tracking and no

00:11:52,800 --> 00:11:58,300
possible way to report bugs it also

00:11:56,110 --> 00:12:00,400
means it's easier for you because you

00:11:58,300 --> 00:12:04,960
don't have to keep up with back reports

00:12:00,400 --> 00:12:07,780
but for me as user it's a sign that I

00:12:04,960 --> 00:12:11,680
don't want to use it and it's the same

00:12:07,780 --> 00:12:14,320
way with application because it means

00:12:11,680 --> 00:12:17,170
there's multiple things doing the same

00:12:14,320 --> 00:12:19,750
functionality and if there's anything

00:12:17,170 --> 00:12:21,220
special I need and for bigger

00:12:19,750 --> 00:12:24,040
installation there will always be

00:12:21,220 --> 00:12:27,400
something special I have to keep up with

00:12:24,040 --> 00:12:31,120
all the little different versions and if

00:12:27,400 --> 00:12:34,090
I'm in a more complex setup I have to

00:12:31,120 --> 00:12:37,150
verify all of them and keep the paper

00:12:34,090 --> 00:12:41,200
trail for all of them and if I have to

00:12:37,150 --> 00:12:44,380
push in live of you once to change

00:12:41,200 --> 00:12:48,460
management it's worse enough if I have

00:12:44,380 --> 00:12:50,320
to do it for those and copies I don't

00:12:48,460 --> 00:12:52,840
want to but that's still assuming that

00:12:50,320 --> 00:12:56,230
this tool is using that library right if

00:12:52,840 --> 00:12:58,030
if if Google compute tool one day

00:12:56,230 --> 00:13:00,490
decides that well I'm not going to

00:12:58,030 --> 00:13:02,730
validate against twelve versions of HTTP

00:13:00,490 --> 00:13:06,850
globe - I'm just going to write my own

00:13:02,730 --> 00:13:10,120
what's that well for some of these it

00:13:06,850 --> 00:13:13,480
actually is that much right so for it's

00:13:10,120 --> 00:13:15,249
not so much a problem for you

00:13:13,480 --> 00:13:17,910
it's more of an issue for the next tool

00:13:15,249 --> 00:13:20,049
yeah just for the believes that you

00:13:17,910 --> 00:13:21,399
mention here yeah yeah for this one

00:13:20,049 --> 00:13:24,100
you're right it's not that big a video

00:13:21,399 --> 00:13:26,639
but for this one some of these libraries

00:13:24,100 --> 00:13:29,949
change much more frequently so boto and

00:13:26,639 --> 00:13:31,449
crc mod and pi open ssl there are many

00:13:29,949 --> 00:13:35,920
more versions of these things floating

00:13:31,449 --> 00:13:39,279
around okay and this team would be much

00:13:35,920 --> 00:13:40,779
more likely to not validate against a

00:13:39,279 --> 00:13:42,910
thousand versions of each of these and I

00:13:40,779 --> 00:13:45,220
suggest really Luciano speak sure

00:13:42,910 --> 00:13:47,589
Oh in the security team there's a public

00:13:45,220 --> 00:13:52,629
file called it embedded copies which is

00:13:47,589 --> 00:13:54,369
basically the database of of packages

00:13:52,629 --> 00:13:56,170
that includes a memory copies of other

00:13:54,369 --> 00:13:58,360
packages so when we need to patch

00:13:56,170 --> 00:14:00,970
something in one package we check in

00:13:58,360 --> 00:14:03,309
that a method copies then we watch all

00:14:00,970 --> 00:14:05,170
those persons - I mean every cop is

00:14:03,309 --> 00:14:08,319
supreme in Debian as a whole and I don't

00:14:05,170 --> 00:14:11,769
see your solution that part I myself a

00:14:08,319 --> 00:14:14,829
lot of a lot of the upstream developers

00:14:11,769 --> 00:14:17,199
made it daily and it is a it is a global

00:14:14,829 --> 00:14:21,549
problem in Debian it's it is how it

00:14:17,199 --> 00:14:22,989
works so there's the biggest thing I

00:14:21,549 --> 00:14:24,160
want to say is that you should make sure

00:14:22,989 --> 00:14:26,290
to get through the rest of your slides

00:14:24,160 --> 00:14:27,850
and address the issues and this

00:14:26,290 --> 00:14:30,329
conversation needs to happen it just

00:14:27,850 --> 00:14:32,769
maybe should extend beyond this session

00:14:30,329 --> 00:14:33,939
yeah I won't comment on that I just on

00:14:32,769 --> 00:14:37,089
the boat I think obviously we have the

00:14:33,939 --> 00:14:38,499
same thing boat Oh ships in Debian and

00:14:37,089 --> 00:14:41,379
right now it's it's quite out of date

00:14:38,499 --> 00:14:43,209
obviously on stable and that's something

00:14:41,379 --> 00:14:44,769
we're gonna live with I guess and I

00:14:43,209 --> 00:14:46,059
obviously the other important point is

00:14:44,769 --> 00:14:48,549
it's important for these not just to be

00:14:46,059 --> 00:14:50,350
on our images on the cloud but our

00:14:48,549 --> 00:14:52,569
customers are using this on their own

00:14:50,350 --> 00:14:55,089
installations on their own hardware to

00:14:52,569 --> 00:14:57,189
talk remotely to us so I think we need

00:14:55,089 --> 00:14:59,439
to have a copy of all of this in Maine

00:14:57,189 --> 00:15:01,660
it's all free software hmm so it's

00:14:59,439 --> 00:15:02,769
license compatible and it's just going

00:15:01,660 --> 00:15:04,889
to be out of date which means newer

00:15:02,769 --> 00:15:06,879
features won't be available by default

00:15:04,889 --> 00:15:09,220
my suggestion would be that we have

00:15:06,879 --> 00:15:10,720
separate repositories where optionally

00:15:09,220 --> 00:15:13,119
you could go and add that to your app

00:15:10,720 --> 00:15:15,819
source as far we've got app sources is

00:15:13,119 --> 00:15:17,589
it but ideally there is it up d so you

00:15:15,819 --> 00:15:18,999
could just pop a file in there you know

00:15:17,589 --> 00:15:21,089
that's as simple as an echo from the

00:15:18,999 --> 00:15:23,199
existing bootstrap that we've all got

00:15:21,089 --> 00:15:24,699
yes it's an extra hurdle but but

00:15:23,199 --> 00:15:26,769
customers who won't do that can actually

00:15:24,699 --> 00:15:27,070
tack you know copy and paste a here's

00:15:26,769 --> 00:15:29,860
how you

00:15:27,070 --> 00:15:31,000
the latest copy does any so in a way

00:15:29,860 --> 00:15:31,480
that's relevant to quite a lot of the

00:15:31,000 --> 00:15:33,430
slide deck

00:15:31,480 --> 00:15:36,220
does anybody know much about the PPA

00:15:33,430 --> 00:15:38,050
main type proposal I'm backing it that

00:15:36,220 --> 00:15:39,670
the SCP masters mentioned on the mailing

00:15:38,050 --> 00:15:40,990
list in May I was hoping one of them

00:15:39,670 --> 00:15:42,340
would be here to talk about it but if

00:15:40,990 --> 00:15:45,910
somebody knows you know that you know

00:15:42,340 --> 00:15:49,060
about it take a microphone if you know I

00:15:45,910 --> 00:15:52,420
know as much about it as YouTube so

00:15:49,060 --> 00:15:54,640
there is a proposal to have ppas in both

00:15:52,420 --> 00:15:57,640
in Debian which is basically going to

00:15:54,640 --> 00:16:03,040
mean any Debian developer can create a

00:15:57,640 --> 00:16:04,660
private it's not an entirely independent

00:16:03,040 --> 00:16:06,580
archive it's layered on top of the main

00:16:04,660 --> 00:16:07,780
archive but you can upload your packages

00:16:06,580 --> 00:16:10,890
to it and they don't interfere with

00:16:07,780 --> 00:16:10,890
packages and other PPS

00:16:11,430 --> 00:16:16,450
it's not a repository so that you can

00:16:14,410 --> 00:16:18,040
upload any random version of things

00:16:16,450 --> 00:16:19,630
which are already in the archive if you

00:16:18,040 --> 00:16:22,330
want to make it back what you're ready

00:16:19,630 --> 00:16:25,780
to do so I think it's best to upload two

00:16:22,330 --> 00:16:27,280
backwards DB analogue also if you're

00:16:25,780 --> 00:16:30,280
going to be back porting all of these

00:16:27,280 --> 00:16:31,540
libraries to support your utility in a

00:16:30,280 --> 00:16:33,040
separate archive if you've got exactly

00:16:31,540 --> 00:16:34,300
the same program as if you just dump

00:16:33,040 --> 00:16:36,160
them on the machine if it breaks

00:16:34,300 --> 00:16:37,810
something on something else that depends

00:16:36,160 --> 00:16:39,400
on that package you've broken something

00:16:37,810 --> 00:16:40,750
yeah you can break everything in them

00:16:39,400 --> 00:16:43,060
like all the other stuff that's been

00:16:40,750 --> 00:16:45,070
qualified inside of Debian right part of

00:16:43,060 --> 00:16:46,840
a part of the issue here seems almost as

00:16:45,070 --> 00:16:49,390
if you need to have the ability to have

00:16:46,840 --> 00:16:52,090
multiple versions of packages on a on a

00:16:49,390 --> 00:16:57,730
system for different kinds of programs

00:16:52,090 --> 00:17:01,290
right and maybe balancing the needs of

00:16:57,730 --> 00:17:03,790
security fixes with different kinds of

00:17:01,290 --> 00:17:05,680
functional requirements for each of the

00:17:03,790 --> 00:17:11,320
pieces of software on the machine I'm

00:17:05,680 --> 00:17:13,329
not sure yeah I was just the guy knife

00:17:11,320 --> 00:17:16,449
said he was gonna work on the PPA thing

00:17:13,329 --> 00:17:27,670
this week next week so actual some

00:17:16,449 --> 00:17:29,380
progress Michael details if you have to

00:17:27,670 --> 00:17:32,440
maintain multi version of a single

00:17:29,380 --> 00:17:35,380
package we already have citizens package

00:17:32,440 --> 00:17:38,670
if you maintain motivation of the same

00:17:35,380 --> 00:17:40,440
package it will be a lot of work voice

00:17:38,670 --> 00:17:42,840
maintain version because usually

00:17:40,440 --> 00:17:51,900
upstream only maintains the latest

00:17:42,840 --> 00:17:53,610
version so you try to page me I'm pretty

00:17:51,900 --> 00:17:56,970
sure we can work to make them walking

00:17:53,610 --> 00:18:00,060
the Vienna as I am looking at Bhutto

00:17:56,970 --> 00:18:03,210
Bhutto is two nine six is two

00:18:00,060 --> 00:18:05,400
ninety-nine do you need to 99 I don't

00:18:03,210 --> 00:18:07,470
know if I don't think the version of

00:18:05,400 --> 00:18:09,180
boto is terribly out of date for us

00:18:07,470 --> 00:18:22,320
I think it's pi I think the main ones

00:18:09,180 --> 00:18:24,990
are Searcy mod and that that can help

00:18:22,320 --> 00:18:28,350
you to to package the dependencies that

00:18:24,990 --> 00:18:39,780
you are missing we can walk to be able

00:18:28,350 --> 00:18:42,480
to package okay yeah the the general

00:18:39,780 --> 00:18:44,280
probable outcome hopefully will be more

00:18:42,480 --> 00:18:46,320
collaboration to solve the problems

00:18:44,280 --> 00:18:48,750
within the existing model and maybe to

00:18:46,320 --> 00:18:51,480
extend the model where necessary but no

00:18:48,750 --> 00:18:53,280
there so he's also taking with regard to

00:18:51,480 --> 00:18:55,230
Jessie with regards to squeeze and

00:18:53,280 --> 00:18:57,350
wheezy it may be a matter of putting

00:18:55,230 --> 00:19:00,680
things into the back ports repository to

00:18:57,350 --> 00:19:04,230
allow people to who opt into that to use

00:19:00,680 --> 00:19:04,650
those where they know it can require

00:19:04,230 --> 00:19:06,330
some other

00:19:04,650 --> 00:19:07,830
I mean if maybe Google just subscribe to

00:19:06,330 --> 00:19:09,720
the back ports and make sure that all

00:19:07,830 --> 00:19:10,920
the versions are saying but this is and

00:19:09,720 --> 00:19:14,130
that might break everything else who

00:19:10,920 --> 00:19:15,930
knows well okay sure so let's move on

00:19:14,130 --> 00:19:17,610
just a little bit to the next kind of

00:19:15,930 --> 00:19:21,450
issue that we have and it's it's a

00:19:17,610 --> 00:19:22,800
fairly similar issue so we're not

00:19:21,450 --> 00:19:24,900
actually going too far away from the

00:19:22,800 --> 00:19:26,910
last one right so here right this is

00:19:24,900 --> 00:19:28,830
again when I kept coming back to this

00:19:26,910 --> 00:19:30,660
live where the where the version ID is

00:19:28,830 --> 00:19:32,700
is happening for us right in it in this

00:19:30,660 --> 00:19:35,490
particular case it's PI open SSL ins and

00:19:32,700 --> 00:19:39,810
CRC mod and I possibly even Sox

00:19:35,490 --> 00:19:42,540
PI branch um I can't recall and again

00:19:39,810 --> 00:19:44,340
although Jessie I believe all like all

00:19:42,540 --> 00:19:45,690
the versions that we need are there but

00:19:44,340 --> 00:19:47,160
in squeezed and wheezy which are the

00:19:45,690 --> 00:19:49,200
released and stable versions of the

00:19:47,160 --> 00:19:52,350
operating system versions are just too

00:19:49,200 --> 00:19:54,059
old the situation here in Gio's

00:19:52,350 --> 00:19:55,919
- a lot more complicated because we

00:19:54,059 --> 00:19:57,659
can't even do the copying the code kind

00:19:55,919 --> 00:19:59,730
of trick to to solve the problem right

00:19:57,659 --> 00:20:01,649
because the binary dependencies we'd

00:19:59,730 --> 00:20:03,120
have to build a version for each for the

00:20:01,649 --> 00:20:06,559
architecture that we care about

00:20:03,120 --> 00:20:13,470
etc etc it's just a lot more complicated

00:20:06,559 --> 00:20:15,419
and let's just move on from here because

00:20:13,470 --> 00:20:18,720
I think we've talked about much of the

00:20:15,419 --> 00:20:20,940
issues around this already I think and

00:20:18,720 --> 00:20:23,399
let's come back I guess a little bit to

00:20:20,940 --> 00:20:27,360
the the config file thing which is

00:20:23,399 --> 00:20:30,960
another kind of problem that we have be

00:20:27,360 --> 00:20:32,789
I think we had some ideas about using D

00:20:30,960 --> 00:20:43,590
files and stuff like this to solve this

00:20:32,789 --> 00:20:46,049
sort of problem yes going depending on

00:20:43,590 --> 00:20:48,899
how long lifts your cloud instances are

00:20:46,049 --> 00:20:51,720
going to be one thing to consider is to

00:20:48,899 --> 00:20:53,429
use configuration management by which I

00:20:51,720 --> 00:20:57,269
mean that you actually put your changes

00:20:53,429 --> 00:20:58,620
into a central location and then have

00:20:57,269 --> 00:21:01,710
some daemon running in the background

00:20:58,620 --> 00:21:04,710
that enforces these changes on the local

00:21:01,710 --> 00:21:10,019
system and all times puppet or whatever

00:21:04,710 --> 00:21:11,250
it is they are small tools not like a

00:21:10,019 --> 00:21:12,870
whole infrastructure like puppet

00:21:11,250 --> 00:21:15,120
although it might be interesting to just

00:21:12,870 --> 00:21:17,789
be able to actually take that and

00:21:15,120 --> 00:21:19,559
integrate it straight with your with

00:21:17,789 --> 00:21:22,379
your whole infrastructure and have all

00:21:19,559 --> 00:21:27,330
the nodes be centrally managed but the

00:21:22,379 --> 00:21:29,610
benefit is that you you will somehow or

00:21:27,330 --> 00:21:32,370
and these the Debian users that I know

00:21:29,610 --> 00:21:33,929
would prefer to have a very exact

00:21:32,370 --> 00:21:35,639
description of all the changes that you

00:21:33,929 --> 00:21:38,669
made compared to Debian default

00:21:35,639 --> 00:21:42,029
installation so before you create a file

00:21:38,669 --> 00:21:44,850
that says we changed route permit route

00:21:42,029 --> 00:21:47,549
log into you know and we change this and

00:21:44,850 --> 00:21:49,620
we changed that put it in a form where

00:21:47,549 --> 00:21:51,690
this can actually be enforced yeah I

00:21:49,620 --> 00:21:53,039
would agree right this is one of the the

00:21:51,690 --> 00:21:55,200
one of the problems with the approach is

00:21:53,039 --> 00:21:57,090
that I think in some ways Amazon's

00:21:55,200 --> 00:21:59,009
taking and Google is taking that the the

00:21:57,090 --> 00:22:00,629
build image scripts they change things

00:21:59,009 --> 00:22:01,980
and you can't tell exactly what's been

00:22:00,629 --> 00:22:05,159
changed and you can't revert it when

00:22:01,980 --> 00:22:05,910
it's after it's been changed right the

00:22:05,159 --> 00:22:07,680
the thing

00:22:05,910 --> 00:22:08,970
that I like about using some of the D

00:22:07,680 --> 00:22:11,490
files and stuff like this is that you

00:22:08,970 --> 00:22:14,550
can install a package that says this is

00:22:11,490 --> 00:22:16,350
the Google secure lockdown config

00:22:14,550 --> 00:22:17,970
package and I just install that it

00:22:16,350 --> 00:22:19,770
applies the updates to all the file all

00:22:17,970 --> 00:22:22,740
the new installs files and all the right

00:22:19,770 --> 00:22:23,880
directories to create the policy that

00:22:22,740 --> 00:22:25,860
you want and then you can remove the

00:22:23,880 --> 00:22:27,480
policy later and you can list it and see

00:22:25,860 --> 00:22:29,910
that it's there but again not all

00:22:27,480 --> 00:22:32,370
programs support that right and do we go

00:22:29,910 --> 00:22:34,440
and change all those programs so we can

00:22:32,370 --> 00:22:36,270
support it so if do we just cloud have a

00:22:34,440 --> 00:22:38,160
mandate channel to light that we have to

00:22:36,270 --> 00:22:40,140
go and change OpenSSH so that it

00:22:38,160 --> 00:22:43,290
supports dot d files and stuff like this

00:22:40,140 --> 00:22:45,360
I don't um so I have two quick things

00:22:43,290 --> 00:22:47,720
one very shortage obviously we don't

00:22:45,360 --> 00:22:49,860
have a any passwords by default so the

00:22:47,720 --> 00:22:51,600
SSH locking down isn't particularly

00:22:49,860 --> 00:22:53,460
important until path creating that's

00:22:51,600 --> 00:22:54,750
just the locking down in the SSH there

00:22:53,460 --> 00:22:58,110
are several other things that at least

00:22:54,750 --> 00:23:00,420
Google cares about doing so network yeah

00:22:58,110 --> 00:23:02,220
the other thing is as an AWS user I'm

00:23:00,420 --> 00:23:04,410
not interested in any of Amazon's images

00:23:02,220 --> 00:23:06,120
at my company we use the images of boon

00:23:04,410 --> 00:23:07,410
to publish because we know exactly what

00:23:06,120 --> 00:23:10,200
they are they've got everything we need

00:23:07,410 --> 00:23:11,910
and we customize them beyond that

00:23:10,200 --> 00:23:14,370
ourselves mm-hmm we don't need any

00:23:11,910 --> 00:23:17,310
utilities on them we just needs and a

00:23:14,370 --> 00:23:20,370
buncha machine yeah a lot of customers

00:23:17,310 --> 00:23:21,900
that come to Google though want

00:23:20,370 --> 00:23:24,210
something that works sort of smoothly

00:23:21,900 --> 00:23:26,130
out of the box right this is very smooth

00:23:24,210 --> 00:23:28,050
out of the books for us bits yes but

00:23:26,130 --> 00:23:30,330
Votto doesn't exist on Google compute at

00:23:28,050 --> 00:23:33,240
the moment and so we don't know problem

00:23:30,330 --> 00:23:35,040
with Debian either yeah so so while your

00:23:33,240 --> 00:23:36,950
company might not care about using tools

00:23:35,040 --> 00:23:39,630
that talk to the other Google systems

00:23:36,950 --> 00:23:41,160
most of our customers need them he

00:23:39,630 --> 00:23:43,530
actually meant smoothly integrating with

00:23:41,160 --> 00:23:44,820
the rest of the cloud platform yes can I

00:23:43,530 --> 00:23:47,070
go back to what Mark was saying about

00:23:44,820 --> 00:23:48,810
enforcing policy so what we're doing

00:23:47,070 --> 00:23:51,060
here is we're talking about policy when

00:23:48,810 --> 00:23:52,320
the machine initially boots after its

00:23:51,060 --> 00:23:54,810
initially booted from a neighborhood

00:23:52,320 --> 00:23:56,730
restaurant yeah it's your machine and if

00:23:54,810 --> 00:23:59,460
you want to go and enable root SSH you

00:23:56,730 --> 00:24:00,810
want to go and enable password login we

00:23:59,460 --> 00:24:02,670
don't want to enforce that policy from

00:24:00,810 --> 00:24:04,350
Amazon we want you to have whatever

00:24:02,670 --> 00:24:06,000
policy you want because you could be

00:24:04,350 --> 00:24:07,380
running that behind and you know private

00:24:06,000 --> 00:24:09,090
networks which are not internet

00:24:07,380 --> 00:24:12,210
accessible in any way shape or form it's

00:24:09,090 --> 00:24:13,020
it's yours to do so that that I don't

00:24:12,210 --> 00:24:14,790
know if we need to

00:24:13,020 --> 00:24:18,590
it's I agree puppet and Scheffer a

00:24:14,790 --> 00:24:18,590
brilliant orchestration utilities

00:24:18,840 --> 00:24:23,360
but as soon as it's yours it's your to

00:24:20,940 --> 00:24:26,009
change whatever you want but I think

00:24:23,360 --> 00:24:26,999
OpenSSH and SSH access I think that one

00:24:26,009 --> 00:24:28,679
of things I raised yesterday that I

00:24:26,999 --> 00:24:29,789
think is quite useful is what do we feel

00:24:28,679 --> 00:24:31,379
about having if we could have installed

00:24:29,789 --> 00:24:32,940
open SSH into cloud images and that is

00:24:31,379 --> 00:24:34,620
your way of accessing it what do we

00:24:32,940 --> 00:24:37,470
think about having fail to ban or deny

00:24:34,620 --> 00:24:39,480
hosts installed also alongside SSH so

00:24:37,470 --> 00:24:41,309
that it's it's going to lock you out if

00:24:39,480 --> 00:24:50,070
you do miss authenticate a couple of

00:24:41,309 --> 00:25:00,110
times no one a different IP address here

00:24:50,070 --> 00:25:02,429
you go I think that all of these

00:25:00,110 --> 00:25:04,019
suggestions make including fail to ban

00:25:02,429 --> 00:25:05,340
and so on they're they're great I mean I

00:25:04,019 --> 00:25:06,720
can imagine that there are some people

00:25:05,340 --> 00:25:09,029
who would really like to have the

00:25:06,720 --> 00:25:10,529
carefree package and and just install

00:25:09,029 --> 00:25:14,700
and image and know that this is already

00:25:10,529 --> 00:25:16,619
tightened but on the other hand if at

00:25:14,700 --> 00:25:18,899
some point if this is a short lift

00:25:16,619 --> 00:25:20,220
instance then I don't think we need to

00:25:18,899 --> 00:25:21,749
have this discussion right but if this

00:25:20,220 --> 00:25:23,519
is an instance that is supposed to live

00:25:21,749 --> 00:25:27,210
for the next three years or survive a

00:25:23,519 --> 00:25:28,950
couple of Debian releases then you at

00:25:27,210 --> 00:25:30,360
some point in time you need to know what

00:25:28,950 --> 00:25:33,240
changes have been made and if you make

00:25:30,360 --> 00:25:34,799
changes and I make changes I try to keep

00:25:33,240 --> 00:25:37,100
them in some sort of lock file so that

00:25:34,799 --> 00:25:39,929
later on I know what when I screwed up

00:25:37,100 --> 00:25:41,789
and we need to merge those log files and

00:25:39,929 --> 00:25:44,279
all I'm saying is perhaps the

00:25:41,789 --> 00:25:46,919
abstraction of putting it into something

00:25:44,279 --> 00:25:48,809
that can be used to enforce policy I

00:25:46,919 --> 00:25:52,499
agree that it actually does right if you

00:25:48,809 --> 00:25:55,980
say commit root login equals no I'm in

00:25:52,499 --> 00:25:57,600
puppet that runs locally and I make the

00:25:55,980 --> 00:25:58,919
change back to yes and then it gets

00:25:57,600 --> 00:26:00,149
overwritten half-an-hour later that's

00:25:58,919 --> 00:26:01,619
probably a problem that's a

00:26:00,149 --> 00:26:06,539
communication issue though in many ways

00:26:01,619 --> 00:26:08,820
um but before we have a redundant file

00:26:06,539 --> 00:26:10,049
that is your log file which I try to

00:26:08,820 --> 00:26:11,869
merge with my log file of all the

00:26:10,049 --> 00:26:14,999
changes we've made to the system and

00:26:11,869 --> 00:26:18,570
potentially I'll grab a number out of

00:26:14,999 --> 00:26:20,249
the air now 85 percent of all the cloud

00:26:18,570 --> 00:26:22,559
instances are ideally going to be

00:26:20,249 --> 00:26:25,230
centrally managed with some system like

00:26:22,559 --> 00:26:28,139
that maybe the best approach would be to

00:26:25,230 --> 00:26:30,330
just enable at least give the plugs you

00:26:28,139 --> 00:26:30,990
know like provide the interfaces for

00:26:30,330 --> 00:26:34,190
this sort of man

00:26:30,990 --> 00:26:37,170
judgment from this time I just wanted to

00:26:34,190 --> 00:26:40,200
get back to this dot the configuration

00:26:37,170 --> 00:26:44,100
files you mentioned that you want to

00:26:40,200 --> 00:26:45,240
update all packages to support it I have

00:26:44,100 --> 00:26:48,809
heard of a package

00:26:45,240 --> 00:26:52,860
I think it's name dot D which actually

00:26:48,809 --> 00:26:54,540
allows you to use dot use a dot d folder

00:26:52,860 --> 00:26:56,400
for configuration and I was and when the

00:26:54,540 --> 00:26:58,230
program actually tries to weed it it

00:26:56,400 --> 00:26:59,940
will concatenate all of them together so

00:26:58,230 --> 00:27:01,620
it allows you to support it even as a

00:26:59,940 --> 00:27:04,500
program and self does not it's like a

00:27:01,620 --> 00:27:14,610
named pipe kind of program I think it's

00:27:04,500 --> 00:27:17,700
called dot the clouds we need to have

00:27:14,610 --> 00:27:20,250
consistency meaning that if you disable

00:27:17,700 --> 00:27:22,380
rooting in on the Google cloud on what

00:27:20,250 --> 00:27:24,690
we want to call the official depend

00:27:22,380 --> 00:27:29,190
image then the behavior has to be the

00:27:24,690 --> 00:27:33,480
same on AWS or the image that we provide

00:27:29,190 --> 00:27:36,750
for OpenStack or or whatever I don't so

00:27:33,480 --> 00:27:40,230
I would be against anything that would

00:27:36,750 --> 00:27:42,179
be cloud provider specific I would love

00:27:40,230 --> 00:27:44,280
that we have only one single image that

00:27:42,179 --> 00:27:47,520
would works for all of them and that the

00:27:44,280 --> 00:27:49,320
behavior is the same as much as possible

00:27:47,520 --> 00:27:50,760
yeah I would generally agree I don't

00:27:49,320 --> 00:27:52,740
know if there are going to be

00:27:50,760 --> 00:27:55,830
differences amongst what Paul what cloud

00:27:52,740 --> 00:27:58,170
providers really want so one of the

00:27:55,830 --> 00:28:01,110
things that I I sort of feel I hear is

00:27:58,170 --> 00:28:03,870
that there's there's an maybe a need for

00:28:01,110 --> 00:28:06,270
a general configuration mechanism right

00:28:03,870 --> 00:28:10,470
and a policy expression engine of some

00:28:06,270 --> 00:28:11,580
sort that I sort of like a check config

00:28:10,470 --> 00:28:16,050
kind of thing where you basically

00:28:11,580 --> 00:28:18,630
register with some place that I want SSD

00:28:16,050 --> 00:28:19,800
SSH to take over this take this flag and

00:28:18,630 --> 00:28:22,020
these flags in these flags right and

00:28:19,800 --> 00:28:25,230
then keep track of that right in history

00:28:22,020 --> 00:28:27,809
and then make modifications to that via

00:28:25,230 --> 00:28:30,000
some mechanism right that's sort of what

00:28:27,809 --> 00:28:31,350
I hear people saying right I don't want

00:28:30,000 --> 00:28:33,840
to necessarily install a package that

00:28:31,350 --> 00:28:36,690
locks down the system I want to install

00:28:33,840 --> 00:28:38,670
a policy and make that modify the

00:28:36,690 --> 00:28:40,530
existing like combined with the existing

00:28:38,670 --> 00:28:43,380
policy in some way to create a new

00:28:40,530 --> 00:28:44,590
policy and then I think have the ability

00:28:43,380 --> 00:28:47,080
to add another one yes I see

00:28:44,590 --> 00:28:49,690
that's what Martin saying I think what

00:28:47,080 --> 00:28:52,360
Tamar is saying is that it should be

00:28:49,690 --> 00:28:54,760
done at least for the official images

00:28:52,360 --> 00:28:57,220
that are the default that are promoted

00:28:54,760 --> 00:29:00,490
generally not for any local

00:28:57,220 --> 00:29:02,980
customizations it should be done in a

00:29:00,490 --> 00:29:07,330
sort of Debian consensus way with an eye

00:29:02,980 --> 00:29:09,309
toward the cloud context but if we had

00:29:07,330 --> 00:29:11,230
this policy in a way that was easy to

00:29:09,309 --> 00:29:12,549
understand right represents they're not

00:29:11,230 --> 00:29:15,250
convenient it's not as concerned it's

00:29:12,549 --> 00:29:17,049
not yeah what I'm saying is that if if

00:29:15,250 --> 00:29:19,059
such a policy were were easy to

00:29:17,049 --> 00:29:20,350
understand for the customer I don't know

00:29:19,059 --> 00:29:22,360
that it would matter if it was so much

00:29:20,350 --> 00:29:24,070
the same as it was just the same

00:29:22,360 --> 00:29:25,870
structure that they can look at the

00:29:24,070 --> 00:29:28,029
policy they say oh that's the

00:29:25,870 --> 00:29:29,470
environment I am I'll switch this flip

00:29:28,029 --> 00:29:30,669
this switch if that's what I'm so you

00:29:29,470 --> 00:29:33,330
are asking whether you thought that

00:29:30,669 --> 00:29:36,100
cloud had kind of the right to dictate

00:29:33,330 --> 00:29:37,390
config mechanisms I just say that all

00:29:36,100 --> 00:29:39,100
the embedded people have exactly the

00:29:37,390 --> 00:29:42,429
same problem right that you need to do

00:29:39,100 --> 00:29:44,740
some customization you know and I'm not

00:29:42,429 --> 00:29:46,179
and we've done it by installing crappy

00:29:44,740 --> 00:29:48,070
packages that overwrite files yeah

00:29:46,179 --> 00:29:49,450
that's what people mostly do and it's

00:29:48,070 --> 00:29:52,870
pretty crummy when you come to update

00:29:49,450 --> 00:29:54,669
stuff so the freedombox people have this

00:29:52,870 --> 00:29:56,799
problem in a big way as well because

00:29:54,669 --> 00:29:59,169
they want to make something total idiot

00:29:56,799 --> 00:30:01,330
proof and maybe make a web interface to

00:29:59,169 --> 00:30:03,220
all the config and we don't really have

00:30:01,330 --> 00:30:04,899
a good mechanism for that so I think

00:30:03,220 --> 00:30:06,820
there is a good argument for better

00:30:04,899 --> 00:30:08,380
config update mechanisms but you know

00:30:06,820 --> 00:30:10,600
probably we should try and use something

00:30:08,380 --> 00:30:12,130
that already exists so the the open word

00:30:10,600 --> 00:30:17,649
project has a really interesting config

00:30:12,130 --> 00:30:18,820
mechanism which is well open wrt so but

00:30:17,649 --> 00:30:20,559
it's really different from what

00:30:18,820 --> 00:30:22,899
everybody else does so it's difficult to

00:30:20,559 --> 00:30:24,850
use in a Debian context and that's one

00:30:22,899 --> 00:30:26,559
way of turning all your config into bits

00:30:24,850 --> 00:30:28,419
which you can then easily display in a

00:30:26,559 --> 00:30:29,740
web interface and change that way but

00:30:28,419 --> 00:30:31,360
you know presumably this is what puppet

00:30:29,740 --> 00:30:33,220
and chef and things already do and maybe

00:30:31,360 --> 00:30:34,750
we should just use those and we already

00:30:33,220 --> 00:30:36,159
have Deb confer happens when you try use

00:30:34,750 --> 00:30:38,980
both of those together and everything

00:30:36,159 --> 00:30:40,539
breaks and but yeah this is not a

00:30:38,980 --> 00:30:42,880
problem unique to the cloud right there

00:30:40,539 --> 00:30:45,159
is if we had better ways of applying

00:30:42,880 --> 00:30:47,350
policy and all our installer stuff you

00:30:45,159 --> 00:30:50,740
know FAI has mechanism for all this as

00:30:47,350 --> 00:30:52,179
well I don't know how that applies as

00:30:50,740 --> 00:30:54,929
somebody you need to ask Phil hands or

00:30:52,179 --> 00:30:54,929
someone who actually knows

00:30:55,520 --> 00:31:02,420
I think it's more of a problem for cloud

00:31:00,710 --> 00:31:03,860
because we have to show it to users give

00:31:02,420 --> 00:31:05,630
it to them as their default image right

00:31:03,860 --> 00:31:07,040
and there we expect them to change the

00:31:05,630 --> 00:31:10,460
configuration more than I think in the

00:31:07,040 --> 00:31:14,510
embedded space but but yeah I totally

00:31:10,460 --> 00:31:17,510
agree otherwise well what is cloud

00:31:14,510 --> 00:31:20,150
config there was just an imaginary

00:31:17,510 --> 00:31:22,160
package name that is like what is what

00:31:20,150 --> 00:31:24,200
is the right configuration for cloud

00:31:22,160 --> 00:31:26,320
like if if cloud configuration has to be

00:31:24,200 --> 00:31:29,510
it should be different from the basic

00:31:26,320 --> 00:31:31,910
hosted configuration for debian like the

00:31:29,510 --> 00:31:34,760
Center hosts the CD version of Debian

00:31:31,910 --> 00:31:36,920
maybe you get it by installing cloud

00:31:34,760 --> 00:31:38,480
config but after listening to you I'm

00:31:36,920 --> 00:31:40,430
not sure that's the right idea anymore

00:31:38,480 --> 00:31:41,810
maybe we need something stronger right

00:31:40,430 --> 00:31:44,240
you need something that's not just

00:31:41,810 --> 00:31:46,820
install package you want something that

00:31:44,240 --> 00:31:49,460
merges policies in a sane way and keeps

00:31:46,820 --> 00:31:52,370
historical logs things like this right

00:31:49,460 --> 00:31:55,070
so you can roll back and roll forward

00:31:52,370 --> 00:32:00,170
and so forth and so on right I think

00:31:55,070 --> 00:32:01,460
that's what I feel I might want now one

00:32:00,170 --> 00:32:03,440
of the things that comes out of this

00:32:01,460 --> 00:32:05,600
discussion is that ideally the Debian

00:32:03,440 --> 00:32:07,850
system should be parametrized completely

00:32:05,600 --> 00:32:09,260
right and nearly all of the things that

00:32:07,850 --> 00:32:11,900
you might ever want to change are

00:32:09,260 --> 00:32:13,700
somewhere parameters and in some ways it

00:32:11,900 --> 00:32:15,950
is we have Deb conference not a

00:32:13,700 --> 00:32:18,650
configuration mechanism it's a cache but

00:32:15,950 --> 00:32:20,300
it already there's a whole lot of

00:32:18,650 --> 00:32:21,680
infrastructure behind that requiring the

00:32:20,300 --> 00:32:22,910
packages and their postings file to

00:32:21,680 --> 00:32:24,770
reconfigure themselves according to

00:32:22,910 --> 00:32:26,540
choices that the administrator makes or

00:32:24,770 --> 00:32:28,520
then can be preceded or automatically

00:32:26,540 --> 00:32:30,650
introduced into the system it's a rapid

00:32:28,520 --> 00:32:33,410
theoretically that is exactly what you

00:32:30,650 --> 00:32:35,060
need however it's been I don't know 12

00:32:33,410 --> 00:32:38,180
years that I've been trying to get route

00:32:35,060 --> 00:32:40,250
permit route home login in sshd to be

00:32:38,180 --> 00:32:42,680
parametrized and some reason it has not

00:32:40,250 --> 00:32:46,610
happened what are the obstacles there is

00:32:42,680 --> 00:32:52,910
it just SSH I happen to be a patch ok ok

00:32:46,610 --> 00:32:55,340
so the point is more that you're not

00:32:52,910 --> 00:32:57,020
you're not ever going to make it to find

00:32:55,340 --> 00:32:59,180
all the parameters and then to convince

00:32:57,020 --> 00:33:00,680
all the package maintainer to and put

00:32:59,180 --> 00:33:02,450
them in and then you you are also

00:33:00,680 --> 00:33:04,160
unleashing a whole can of worms because

00:33:02,450 --> 00:33:05,420
suddenly all the DEFCON translators have

00:33:04,160 --> 00:33:06,920
to start working on the stuff that

00:33:05,420 --> 00:33:09,290
you've just prepared for them right so

00:33:06,920 --> 00:33:12,140
potentially that's not going to happen

00:33:09,290 --> 00:33:13,340
at least not fast and I don't think you

00:33:12,140 --> 00:33:17,840
want to be discussing this for the next

00:33:13,340 --> 00:33:20,240
10 years so another and and since we

00:33:17,840 --> 00:33:21,980
can't convince Debian to include Ruby

00:33:20,240 --> 00:33:23,960
which is required for puppet and chef

00:33:21,980 --> 00:33:27,350
into the base distribution at least I

00:33:23,960 --> 00:33:29,750
will object maybe there is something

00:33:27,350 --> 00:33:31,750
much simpler that we need and in essence

00:33:29,750 --> 00:33:36,980
I like really liked the idea of the D

00:33:31,750 --> 00:33:41,090
directories and especially maybe we can

00:33:36,980 --> 00:33:43,220
find a way to use that paradigm to make

00:33:41,090 --> 00:33:46,400
changes and I imagine there's this tool

00:33:43,220 --> 00:33:48,800
augeas or maybe there's a Clint wrote a

00:33:46,400 --> 00:33:50,750
tool called Dietz which is a locally

00:33:48,800 --> 00:33:52,610
running - it doesn't do any network

00:33:50,750 --> 00:33:54,290
configuration it just pulls your

00:33:52,610 --> 00:33:57,260
configuration out of get and then

00:33:54,290 --> 00:34:00,170
applies changes locally and if you can

00:33:57,260 --> 00:34:02,780
just make it so that if that I think

00:34:00,170 --> 00:34:05,780
that tool is very am open to influence

00:34:02,780 --> 00:34:09,190
it's a it was a good idea but I don't

00:34:05,780 --> 00:34:13,250
think he took it anywhere near 1.0 um I

00:34:09,190 --> 00:34:15,710
imagine that you you'd have a DD

00:34:13,250 --> 00:34:18,890
directory in EDC or an sov or wherever

00:34:15,710 --> 00:34:22,160
and and then you just drop your policy

00:34:18,890 --> 00:34:25,400
files in there and they actually get

00:34:22,160 --> 00:34:30,770
enacted and they will make the change to

00:34:25,400 --> 00:34:32,270
SSH SSH file completely I think exactly

00:34:30,770 --> 00:34:33,169
like letting restart the service or

00:34:32,270 --> 00:34:35,510
something like that now you still have

00:34:33,169 --> 00:34:38,540
the problem that this is enforced if I

00:34:35,510 --> 00:34:41,090
go to etcs shht conflict and make the

00:34:38,540 --> 00:34:42,380
change back and then it reverts 30

00:34:41,090 --> 00:34:45,590
minutes later than obviously there's

00:34:42,380 --> 00:34:48,169
somewhat of a policy violation but this

00:34:45,590 --> 00:34:50,060
can be solved potentially with comments

00:34:48,169 --> 00:34:52,370
or it's a communication issue as I said

00:34:50,060 --> 00:34:54,950
earlier so with any of these tools that

00:34:52,370 --> 00:34:56,090
whatever whether it's dot D or D tour or

00:34:54,950 --> 00:35:07,040
something that doesn't have D in its

00:34:56,090 --> 00:35:09,410
name there's nothing I can do we should

00:35:07,040 --> 00:35:11,690
make it so that we only want to enforce

00:35:09,410 --> 00:35:15,710
it by default like like like with Amazon

00:35:11,690 --> 00:35:17,270
at the at launch right and then maybe

00:35:15,710 --> 00:35:19,370
the user may want to have a way to

00:35:17,270 --> 00:35:21,230
reapply the policy but we don't want to

00:35:19,370 --> 00:35:22,970
automatically override their choices

00:35:21,230 --> 00:35:25,280
remove the Conti

00:35:22,970 --> 00:35:29,570
right so with the I think the idea would

00:35:25,280 --> 00:35:30,710
be to maybe do it once at boot possibly

00:35:29,570 --> 00:35:32,900
and allowed them to rerun the tool that

00:35:30,710 --> 00:35:41,570
applies it if they want like not a demon

00:35:32,900 --> 00:35:43,070
type thing so I what's that no I mean

00:35:41,570 --> 00:35:43,970
have you got a finale sign that's about

00:35:43,070 --> 00:35:46,369
it

00:35:43,970 --> 00:35:47,690
I like the idea about the the deets like

00:35:46,369 --> 00:35:49,670
thing that these tech policy thing

00:35:47,690 --> 00:35:51,920
because at least puts all the policy in

00:35:49,670 --> 00:35:54,410
one spot I don't love the dot d

00:35:51,920 --> 00:35:57,290
directory ideas as much because you end

00:35:54,410 --> 00:35:59,320
up in a place in which if I install a

00:35:57,290 --> 00:36:03,050
package throw some files in there and

00:35:59,320 --> 00:36:04,580
you and soullow file changes something

00:36:03,050 --> 00:36:06,349
in it some other way right I have to go

00:36:04,580 --> 00:36:08,240
and look through the evaluation of all

00:36:06,349 --> 00:36:10,790
these dot d files right and I have to

00:36:08,240 --> 00:36:12,050
figure out what the heck this guy turned

00:36:10,790 --> 00:36:14,869
it on this guy turned it off I have to

00:36:12,050 --> 00:36:16,400
know the evaluation order and hopefully

00:36:14,869 --> 00:36:17,960
that's the same in each program that

00:36:16,400 --> 00:36:20,109
evaluates that there dot the directory

00:36:17,960 --> 00:36:22,520
but that's it that's a - - test

00:36:20,109 --> 00:36:24,290
invocation on the deets tool for

00:36:22,520 --> 00:36:25,640
instance I mean that just shows you

00:36:24,290 --> 00:36:28,339
exactly what is being done it or you

00:36:25,640 --> 00:36:31,190
could say - - what changes and then give

00:36:28,339 --> 00:36:34,630
it a filename and it tells you the order

00:36:31,190 --> 00:36:34,630
of policies that are being applied

00:36:40,580 --> 00:36:42,640
you

00:36:47,770 --> 00:36:53,260
but like modifying ssh itself to take an

00:36:50,080 --> 00:36:54,700
ssh d directory and then he insults

00:36:53,260 --> 00:37:03,310
package I saw package you know it's all

00:36:54,700 --> 00:37:06,730
packaged that's that I don't love yeah I

00:37:03,310 --> 00:37:08,380
think I just say um the I think a little

00:37:06,730 --> 00:37:09,730
bit fatalistic about using Deb Kampf I

00:37:08,380 --> 00:37:11,260
mean for some of these things that is

00:37:09,730 --> 00:37:13,330
the right mechanism we should just use

00:37:11,260 --> 00:37:15,010
it but not everything I don't it solves

00:37:13,330 --> 00:37:16,180
the whole problem but it probably solves

00:37:15,010 --> 00:37:17,350
parts of it where actually a lot of

00:37:16,180 --> 00:37:23,080
people want to change that particular

00:37:17,350 --> 00:37:25,510
thing and we should just put it in and

00:37:23,080 --> 00:37:27,640
that that would actually address the

00:37:25,510 --> 00:37:30,850
goal of keeping the system as close to

00:37:27,640 --> 00:37:32,140
real Debian that's possible I mean on

00:37:30,850 --> 00:37:34,090
the one hand that's a benefit makes it

00:37:32,140 --> 00:37:35,470
very Debbie any on the other hand it

00:37:34,090 --> 00:37:37,300
means it's not like anything else people

00:37:35,470 --> 00:37:38,530
who used to say you know if you if your

00:37:37,300 --> 00:37:41,860
puppet people they becomes really

00:37:38,530 --> 00:37:46,540
annoying you know but it's kind of both

00:37:41,860 --> 00:37:48,430
ways how does this make it so I'm

00:37:46,540 --> 00:37:52,750
actually not very familiar with the that

00:37:48,430 --> 00:37:57,840
mechanism what does it look like DEFCON

00:37:52,750 --> 00:38:00,760
yeah essentially it's a protocol that

00:37:57,840 --> 00:38:02,109
makes questions up here

00:38:00,760 --> 00:38:04,840
and either get asked to the

00:38:02,109 --> 00:38:07,270
administrator or fetched from the

00:38:04,840 --> 00:38:08,859
pre-seed file and and then suddenly you

00:38:07,270 --> 00:38:12,430
have a parameter equals value type

00:38:08,859 --> 00:38:13,780
system and now we are expected to look

00:38:12,430 --> 00:38:16,119
at this thing when the package

00:38:13,780 --> 00:38:18,970
configures itself and rats the post and

00:38:16,119 --> 00:38:20,859
script then it is supposed to merge what

00:38:18,970 --> 00:38:22,540
it finds some discs with what is in

00:38:20,859 --> 00:38:25,150
depth conf giving precedence to the

00:38:22,540 --> 00:38:26,560
thing that is on disk I see so that

00:38:25,150 --> 00:38:30,730
country is only a cache it's not the

00:38:26,560 --> 00:38:33,220
Windows registry and the point is that

00:38:30,730 --> 00:38:36,550
it's easy for it to be you know the the

00:38:33,220 --> 00:38:39,460
question part is translated and appears

00:38:36,550 --> 00:38:42,010
boy you know could be in a terminal or

00:38:39,460 --> 00:38:44,350
in gtk boxes or whatever so there's

00:38:42,010 --> 00:38:46,270
various front-end mechanisms depending

00:38:44,350 --> 00:38:48,040
on what's appropriate for the situation

00:38:46,270 --> 00:38:49,780
as well as pre configuring and

00:38:48,040 --> 00:38:51,460
translations which is why it's quite

00:38:49,780 --> 00:38:53,200
nifty when they say translations they

00:38:51,460 --> 00:38:59,470
actually mean human language this is not

00:38:53,200 --> 00:39:01,839
always clear the package is the one that

00:38:59,470 --> 00:39:04,599
manages its own question

00:39:01,839 --> 00:39:07,809
and it's done by the package

00:39:04,599 --> 00:39:09,519
infrastructure for the package but it's

00:39:07,809 --> 00:39:11,079
relatively heavyweight in terms of

00:39:09,519 --> 00:39:14,499
affecting each package and you have to

00:39:11,079 --> 00:39:15,699
put the variables in yeah so yeah you

00:39:14,499 --> 00:39:17,650
know it's a bit of slow process than

00:39:15,699 --> 00:39:19,959
just having etc' keeper or some other

00:39:17,650 --> 00:39:22,449
magic that just does whatever we want to

00:39:19,959 --> 00:39:24,969
do to our ATC directory it's slight even

00:39:22,449 --> 00:39:28,529
thing but this is automatable in like

00:39:24,969 --> 00:39:28,529
the at the Installer level for example

00:39:29,939 --> 00:39:36,359
the concept of getting something like

00:39:31,989 --> 00:39:40,029
teats into Debian poppers long ways off

00:39:36,359 --> 00:39:42,989
probably very feasible for Jesse and and

00:39:40,029 --> 00:39:49,259
backboards okay good

00:39:42,989 --> 00:39:51,369
any other quick questions comments I

00:39:49,259 --> 00:39:53,289
don't know no I don't know what you mean

00:39:51,369 --> 00:39:56,049
with Debian proper it is in Debian I

00:39:53,289 --> 00:39:58,779
mean official mainline Debian official

00:39:56,049 --> 00:40:01,479
release whatever you might call it it is

00:39:58,779 --> 00:40:03,849
it's just not in the base system so it

00:40:01,479 --> 00:40:05,079
will not get installed by the ICS you so

00:40:03,849 --> 00:40:07,689
you just have to add it as a package

00:40:05,079 --> 00:40:12,609
it's in there depends on Lua which may

00:40:07,689 --> 00:40:14,349
be a showstopper but no be a completely

00:40:12,609 --> 00:40:16,449
objective statement simply because it

00:40:14,349 --> 00:40:17,769
has dependencies and then that that

00:40:16,449 --> 00:40:21,279
makes it difficult to get into the base

00:40:17,769 --> 00:40:23,979
package but I think that Clint who's

00:40:21,279 --> 00:40:25,479
pretty well known and knows Debian very

00:40:23,979 --> 00:40:27,609
well this is a very Debian specific

00:40:25,479 --> 00:40:29,170
approach is not at all like what puppet

00:40:27,609 --> 00:40:32,799
is trying to do to be like the solution

00:40:29,170 --> 00:40:34,179
to everything but I think he's he's no

00:40:32,799 --> 00:40:36,069
longer maintaining it they're no longer

00:40:34,179 --> 00:40:37,809
adding stuff to it so it would basically

00:40:36,069 --> 00:40:40,660
someone would have to look at it and

00:40:37,809 --> 00:40:45,869
turn it over I think it's it's probably

00:40:40,660 --> 00:40:48,660
worthwhile to check it out oh dang you

00:40:45,869 --> 00:40:51,369
just relaying something from IRC letter

00:40:48,660 --> 00:40:52,749
reminds us that there are levels of Deb

00:40:51,369 --> 00:40:54,880
conf questions that will never show up

00:40:52,749 --> 00:40:57,009
hidden questions for things that where

00:40:54,880 --> 00:40:58,119
you want to automate a we want to

00:40:57,009 --> 00:40:59,529
proceed something but though you would

00:40:58,119 --> 00:41:07,689
never really want to ask your user for

00:40:59,529 --> 00:41:09,549
it I think we're about out of time so I

00:41:07,689 --> 00:41:11,559
just want to thank you guys for chatting

00:41:09,549 --> 00:41:13,749
I'd love to talk with some of you more

00:41:11,559 --> 00:41:15,730
about deets and version itis and stuff

00:41:13,749 --> 00:41:18,430
like this and how we might deal with it

00:41:15,730 --> 00:41:20,260
I mean really it's version itís either

00:41:18,430 --> 00:41:22,420
and for the youth like in the operating

00:41:20,260 --> 00:41:24,610
system or in the person who's writing

00:41:22,420 --> 00:41:28,480
the software right you have to deal with

00:41:24,610 --> 00:41:30,250
it somewhere I wanted to just let you

00:41:28,480 --> 00:41:32,140
guys know that this week we actually are

00:41:30,250 --> 00:41:34,000
building new Debian Google compute

00:41:32,140 --> 00:41:36,370
images we I meant to say it yesterday

00:41:34,000 --> 00:41:38,170
but I forgot Jimmy and I are probably

00:41:36,370 --> 00:41:40,900
going to be doing that Thursday around

00:41:38,170 --> 00:41:43,540
noon and if anybody here wants to like

00:41:40,900 --> 00:41:46,060
help we can actually have you guys like

00:41:43,540 --> 00:41:47,500
run the commands and install it and send

00:41:46,060 --> 00:41:49,600
it to tests and all that stuff if you

00:41:47,500 --> 00:41:53,050
want it doesn't require being a Google

00:41:49,600 --> 00:41:54,520
or you know any DD doesn't it doesn't

00:41:53,050 --> 00:41:58,510
even have to be a gmail account just any

00:41:54,520 --> 00:42:00,040
do any Google account we can you can

00:41:58,510 --> 00:42:02,110
sort of see how build up in cloud works

00:42:00,040 --> 00:42:04,330
you can run it on your local laptop you

00:42:02,110 --> 00:42:06,730
know the account is only needed to up to

00:42:04,330 --> 00:42:09,730
uh upload to add the image it's you know

00:42:06,730 --> 00:42:13,920
it's it's a really need to get involved

00:42:09,730 --> 00:42:13,920
in Thanks

00:42:14,590 --> 00:42:18,820

YouTube URL: https://www.youtube.com/watch?v=2ghvg9h1tFI


