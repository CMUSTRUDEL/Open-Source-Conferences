Title: dh_busfactor
Publication date: 2017-11-29
Playlist: DebConf 13
Description: 
	by Joey Hess

At: DebConf13
https://debconf13.debconf.org/
Room: Main talk room
Scheduled start: 2013-08-13 16:30:00
Captions: 
	00:00:00,030 --> 00:00:09,300
hi everybody so I'm gonna be talking

00:00:06,029 --> 00:00:13,349
about D H underscore bus factor this

00:00:09,300 --> 00:00:16,289
talk and I have even better slides in

00:00:13,349 --> 00:00:17,970
the last time as you can see as a little

00:00:16,289 --> 00:00:19,680
digression if you want to make slides

00:00:17,970 --> 00:00:21,270
like the other talk which was all zoom

00:00:19,680 --> 00:00:25,039
me that's the program that you install

00:00:21,270 --> 00:00:25,039
because a lot of people ask me about it

00:00:25,279 --> 00:00:30,779
I'm sorry I'm a little hoarse right now

00:00:27,960 --> 00:00:34,230
- yeah so yeah if you want to make

00:00:30,779 --> 00:00:37,230
pretty slides use that and now one with

00:00:34,230 --> 00:00:40,500
the rest of the talk I guess so this is

00:00:37,230 --> 00:00:44,010
kind of about deaf helpers maintenance

00:00:40,500 --> 00:00:47,700
model and how we can improve it

00:00:44,010 --> 00:00:50,370
and you know ever since I wrote it back

00:00:47,700 --> 00:00:56,969
whenever that was I've pretty much been

00:00:50,370 --> 00:00:58,620
the sole commit or I'm sorry then I'm

00:00:56,969 --> 00:01:01,410
trying not to produce feedback or

00:00:58,620 --> 00:01:03,930
something is that better okay yeah so

00:01:01,410 --> 00:01:06,330
ever since I wrote debhelper I've pretty

00:01:03,930 --> 00:01:09,360
much been the sole committer I'm

00:01:06,330 --> 00:01:10,890
certainly not the sole code writer but

00:01:09,360 --> 00:01:13,110
whenever there's a bug I'm generally the

00:01:10,890 --> 00:01:15,270
one who ends up fixing it unless it's a

00:01:13,110 --> 00:01:20,420
nasty bug that I ignore for months and

00:01:15,270 --> 00:01:22,470
months and somebody else fix is it but I

00:01:20,420 --> 00:01:25,979
so that's one thing that I'd like to

00:01:22,470 --> 00:01:28,380
address but another thing is that if you

00:01:25,979 --> 00:01:30,119
actually look at programs named eh

00:01:28,380 --> 00:01:32,579
underscore or something that are in the

00:01:30,119 --> 00:01:35,880
Debian archive and you could write some

00:01:32,579 --> 00:01:39,299
ugly Haskell code like this that you

00:01:35,880 --> 00:01:41,640
know loads in the contents file looks

00:01:39,299 --> 00:01:43,619
for things that look like debhelper that

00:01:41,640 --> 00:01:45,450
are in user bin that aren't d-h make

00:01:43,619 --> 00:01:48,270
because it doesn't it's not developer

00:01:45,450 --> 00:01:51,450
commands and you know you make it look

00:01:48,270 --> 00:01:53,640
pretty and you think nor debhelper

00:01:51,450 --> 00:01:55,710
because it's not interesting for this

00:01:53,640 --> 00:01:58,140
data set or well you partition things in

00:01:55,710 --> 00:02:02,009
a dev helper or not you get 58 commands

00:01:58,140 --> 00:02:04,860
in debhelper and 99 other commands so

00:02:02,009 --> 00:02:09,899
deb helper is now distributed throughout

00:02:04,860 --> 00:02:11,160
the Debian archive in some way and so

00:02:09,899 --> 00:02:12,280
I've kind of been thinking about that I

00:02:11,160 --> 00:02:14,740
mean

00:02:12,280 --> 00:02:17,650
is are all these pieces that are out

00:02:14,740 --> 00:02:18,760
there part adapt helper or not there's a

00:02:17,650 --> 00:02:20,110
question that I would like to get

00:02:18,760 --> 00:02:20,650
answered here I don't know the answer to

00:02:20,110 --> 00:02:23,530
it

00:02:20,650 --> 00:02:25,620
and I thought we could kind of go over

00:02:23,530 --> 00:02:30,640
the list of some of the commands and

00:02:25,620 --> 00:02:32,350
just get some idea of first of all could

00:02:30,640 --> 00:02:35,620
everybody who's in the audience who

00:02:32,350 --> 00:02:38,080
maintains or is in team maintenance of

00:02:35,620 --> 00:02:40,480
adh underscore command a depo per

00:02:38,080 --> 00:02:44,230
command that isn't in debhelper or one

00:02:40,480 --> 00:02:45,610
that is independence in yourself mostly

00:02:44,230 --> 00:02:47,370
responsible for it could you please

00:02:45,610 --> 00:02:54,360
raise your hand

00:02:47,370 --> 00:02:57,459
so what ten people something so yeah

00:02:54,360 --> 00:03:01,560
there's a lot of these things I don't

00:02:57,459 --> 00:03:01,560
know if anybody knows what they all do

00:03:03,390 --> 00:03:09,310
most of them should be written to a

00:03:06,090 --> 00:03:11,200
standard which is that it's a perl

00:03:09,310 --> 00:03:14,380
script that uses this library in this

00:03:11,200 --> 00:03:19,299
way and looks like this and has the

00:03:14,380 --> 00:03:22,980
documentation a few of them where's the

00:03:19,299 --> 00:03:26,860
Haskell ones either they are or not

00:03:22,980 --> 00:03:33,250
they're written in shell because Haskell

00:03:26,860 --> 00:03:34,810
you heart or something so you know so we

00:03:33,250 --> 00:03:37,120
have a little bit of consistency maybe

00:03:34,810 --> 00:03:39,070
and they should all take the same

00:03:37,120 --> 00:03:41,280
options at least which even the Haskell

00:03:39,070 --> 00:03:46,299
ones sort of do although not entirely

00:03:41,280 --> 00:03:49,989
and there's a lot of them and I kind of

00:03:46,299 --> 00:03:51,970
think that's okay but I've also noticed

00:03:49,989 --> 00:03:54,700
that lately especially in the past few

00:03:51,970 --> 00:03:56,320
years I'll learn of some cool new did

00:03:54,700 --> 00:03:58,780
helper command that does something that

00:03:56,320 --> 00:04:02,380
was added to some new package named eh -

00:03:58,780 --> 00:04:04,420
something and I never seemed to have

00:04:02,380 --> 00:04:07,440
even heard of the idea until it landed

00:04:04,420 --> 00:04:09,609
in the archive and maybe that's okay too

00:04:07,440 --> 00:04:12,910
you know I'm not yelling at people for

00:04:09,609 --> 00:04:15,459
doings work I'm just it's interesting

00:04:12,910 --> 00:04:17,470
that people think that I'm just gonna

00:04:15,459 --> 00:04:19,419
say no sorry this won't do end up help

00:04:17,470 --> 00:04:24,419
her and we might still just route around

00:04:19,419 --> 00:04:25,889
the block and put it in the archive so

00:04:24,419 --> 00:04:28,020
that's kind of where I'm coming at in

00:04:25,889 --> 00:04:29,729
this session which isn't really intended

00:04:28,020 --> 00:04:32,300
to be a big talk the idea was just have

00:04:29,729 --> 00:04:34,830
some kind of a little Boff thing and

00:04:32,300 --> 00:04:37,289
discuss this especially among the people

00:04:34,830 --> 00:04:38,729
who raise their hand but also you know

00:04:37,289 --> 00:04:48,349
just among everybody who uses debhelper

00:04:38,729 --> 00:04:52,469
and so on so I've been struggling with

00:04:48,349 --> 00:04:56,460
the question of do we just let debhelper

00:04:52,469 --> 00:04:58,050
split up and do we say say everybody who

00:04:56,460 --> 00:04:58,830
maintains debhelper as part of the dev

00:04:58,050 --> 00:05:00,599
helper team

00:04:58,830 --> 00:05:02,729
I'm sorry maintains a Deb helper command

00:05:00,599 --> 00:05:05,279
is suddenly part of the Deb helper team

00:05:02,729 --> 00:05:08,550
and we add a mailing list and you know

00:05:05,279 --> 00:05:10,199
we talk among ourselves and it doesn't

00:05:08,550 --> 00:05:11,909
matter which packages in you're still

00:05:10,199 --> 00:05:14,219
part of the team does that sound

00:05:11,909 --> 00:05:15,779
reasonable everybody who has opinion

00:05:14,219 --> 00:05:19,050
feel free to does that sound reasonable

00:05:15,779 --> 00:05:21,110
raise your hand not many people think

00:05:19,050 --> 00:05:23,520
it's reasonable okay

00:05:21,110 --> 00:05:28,169
just people think that's an unreasonable

00:05:23,520 --> 00:05:30,839
thing to do I'm sorry the proposal is to

00:05:28,169 --> 00:05:34,050
basically say everybody who maintains

00:05:30,839 --> 00:05:35,610
one of these programs is suddenly in the

00:05:34,050 --> 00:05:37,469
debhelper team whether they want to be

00:05:35,610 --> 00:05:38,879
or not and or subscribe to some mailing

00:05:37,469 --> 00:05:43,229
list you're raising your hand that it's

00:05:38,879 --> 00:05:45,710
reasonable Cole Oh question yeah I think

00:05:43,229 --> 00:05:45,710
there's one

00:05:59,720 --> 00:06:05,220
sorry Dewey that's fine

00:06:01,770 --> 00:06:06,320
I'll just bring it to you hello that's

00:06:05,220 --> 00:06:10,200
working

00:06:06,320 --> 00:06:13,550
so I guess my my question that would be

00:06:10,200 --> 00:06:17,460
would you would you be comfortable with

00:06:13,550 --> 00:06:20,250
any of the people whom intend random

00:06:17,460 --> 00:06:22,110
debhelper commands for for something

00:06:20,250 --> 00:06:24,660
that's best the entire ledum in specific

00:06:22,110 --> 00:06:29,100
having committed step helper because

00:06:24,660 --> 00:06:31,590
that's it is sort of the question the

00:06:29,100 --> 00:06:34,200
other way round and I mean in a way

00:06:31,590 --> 00:06:36,140
things that are endeavor or special in

00:06:34,200 --> 00:06:38,460
some way or at least some of them are

00:06:36,140 --> 00:06:40,950
because they're kind of the commonly

00:06:38,460 --> 00:06:46,920
upset accepted subset of stuff that we

00:06:40,950 --> 00:06:48,810
all use most of and so I think it's

00:06:46,920 --> 00:06:51,030
possible that maybe the team I mean you

00:06:48,810 --> 00:06:52,260
know if you have a real team then the

00:06:51,030 --> 00:06:53,940
team should be able to come to a

00:06:52,260 --> 00:06:55,410
consensus this command belongs in

00:06:53,940 --> 00:06:57,600
debhelper now and that's something else

00:06:55,410 --> 00:06:59,910
that I wanted to talk about is which of

00:06:57,600 --> 00:07:01,980
these commands belong and debhelper you

00:06:59,910 --> 00:07:03,510
know how many of these things I didn't

00:07:01,980 --> 00:07:06,330
get around to running the stats and

00:07:03,510 --> 00:07:10,620
getting a breakdown per command how many

00:07:06,330 --> 00:07:13,470
rules files use it but you know we could

00:07:10,620 --> 00:07:16,380
do that and we could say you know th

00:07:13,470 --> 00:07:18,300
auto-recall for something is used in 10%

00:07:16,380 --> 00:07:20,790
of all rules files and therefore should

00:07:18,300 --> 00:07:24,150
be and Deb helper and if there's gonna

00:07:20,790 --> 00:07:25,440
be a depo per team then you know it

00:07:24,150 --> 00:07:29,160
seems to me that the team could make

00:07:25,440 --> 00:07:32,820
that decision so let me talk about

00:07:29,160 --> 00:07:35,810
something else that's kind of background

00:07:32,820 --> 00:07:39,030
to talking about this which is that

00:07:35,810 --> 00:07:40,710
there are commands in Deb helper that I

00:07:39,030 --> 00:07:42,780
don't maintain they're maintained by the

00:07:40,710 --> 00:07:45,120
people who contributed them or the

00:07:42,780 --> 00:07:48,060
people who are on a desktop team and

00:07:45,120 --> 00:07:51,300
have the icon spec in their head or you

00:07:48,060 --> 00:07:53,130
know whatever and you know they're

00:07:51,300 --> 00:07:58,710
basically responsible for it if I get a

00:07:53,130 --> 00:08:00,810
bug I just forward it to them and so

00:07:58,710 --> 00:08:03,720
looking at it that way it's really no

00:08:00,810 --> 00:08:07,140
problem to have th auto-recall put in

00:08:03,720 --> 00:08:08,910
debhelper as long as they get the bug

00:08:07,140 --> 00:08:10,290
and I could continue to be the sole

00:08:08,910 --> 00:08:12,480
maintainer a debhelper and this could

00:08:10,290 --> 00:08:14,850
continue to work I don't know if that

00:08:12,480 --> 00:08:19,860
even makes any sense at all that I'm the

00:08:14,850 --> 00:08:21,270
only one with the commitment to this so

00:08:19,860 --> 00:08:22,980
I should probably talk about my concerns

00:08:21,270 --> 00:08:24,270
with having the commit bit but I think

00:08:22,980 --> 00:08:33,810
we have a question in the back is that

00:08:24,270 --> 00:08:35,640
Steve yeah so I was just wondering if

00:08:33,810 --> 00:08:41,100
you hear any that's about and what your

00:08:35,640 --> 00:08:43,310
position on the question of pact helpers

00:08:41,100 --> 00:08:45,810
being included in the dev helper package

00:08:43,310 --> 00:08:47,490
versus helpers being included in the

00:08:45,810 --> 00:08:50,190
default sequence should there be a

00:08:47,490 --> 00:08:51,450
relationship there and should we should

00:08:50,190 --> 00:08:52,830
that be the threshold at which things

00:08:51,450 --> 00:08:57,900
get included in the dev helper package

00:08:52,830 --> 00:08:58,530
okay Auto recompensed what a great

00:08:57,900 --> 00:09:01,220
example

00:08:58,530 --> 00:09:03,750
Hoffa's is it in the default sequence ah

00:09:01,220 --> 00:09:08,180
thank you okay

00:09:03,750 --> 00:09:10,400
yes yeah I mean it sounds to me that

00:09:08,180 --> 00:09:12,270
okay here's the problem with that

00:09:10,400 --> 00:09:14,880
anything in depth over being in the

00:09:12,270 --> 00:09:20,100
default sequence idea there's all kinds

00:09:14,880 --> 00:09:21,630
of garbage in developer and a lot of it

00:09:20,100 --> 00:09:23,760
is garbage that I wrote and some of it

00:09:21,630 --> 00:09:25,320
is garbage that I shouldn't be calling

00:09:23,760 --> 00:09:27,000
garbage because someone else kindly

00:09:25,320 --> 00:09:29,010
contributed it to me and it happened to

00:09:27,000 --> 00:09:30,570
not end up solving the right problem in

00:09:29,010 --> 00:09:33,930
the right way for the right amount of

00:09:30,570 --> 00:09:35,640
time and is now deprecated so you could

00:09:33,930 --> 00:09:38,240
say anything that's not deprecated at

00:09:35,640 --> 00:09:40,560
helper could be in the standard sequence

00:09:38,240 --> 00:09:41,910
maybe there's a few things in depth

00:09:40,560 --> 00:09:43,350
helper now that aren't in the standard

00:09:41,910 --> 00:09:51,470
sequence and aren't deprecated for

00:09:43,350 --> 00:09:53,730
pretty good reasons so I don't know so

00:09:51,470 --> 00:09:57,000
what I the other thing that I wanted to

00:09:53,730 --> 00:09:59,480
bring up is my general feelings about

00:09:57,000 --> 00:10:01,650
how hard that helper is to maintain and

00:09:59,480 --> 00:10:03,150
I think this is something we need to

00:10:01,650 --> 00:10:05,640
think about before we really think about

00:10:03,150 --> 00:10:07,260
having a team maintain it because if

00:10:05,640 --> 00:10:08,970
there's only one guy who can maintain it

00:10:07,260 --> 00:10:14,160
Debian has a problem and that's the real

00:10:08,970 --> 00:10:14,850
purpose of this talk right and it's kind

00:10:14,160 --> 00:10:16,770
of my fault

00:10:14,850 --> 00:10:18,790
the debhelper has actually become harder

00:10:16,770 --> 00:10:22,570
to maintain as time has gone on

00:10:18,790 --> 00:10:24,610
and it's also kind of not if debhelper

00:10:22,570 --> 00:10:27,450
were only used by 10% of debian it would

00:10:24,610 --> 00:10:27,450
be much easier to maintain

00:10:32,380 --> 00:10:36,580
if debhelper did not have this d.h thing

00:10:34,600 --> 00:10:40,420
it would be significantly easier to

00:10:36,580 --> 00:10:43,930
maintain really significantly probably

00:10:40,420 --> 00:10:46,060
50% of my work now is someone wants to

00:10:43,930 --> 00:10:47,710
change something in da CH and I have to

00:10:46,060 --> 00:10:54,520
figure out what this breaks and how to

00:10:47,710 --> 00:10:57,700
deal with the breakage so um

00:10:54,520 --> 00:10:59,620
even if there were a Deb helper team it

00:10:57,700 --> 00:11:02,680
would need to have experts on th in it

00:10:59,620 --> 00:11:06,820
and there are a few people who have done

00:11:02,680 --> 00:11:08,310
awesome work on the H and so maybe we

00:11:06,820 --> 00:11:10,840
could rope them in and get them to

00:11:08,310 --> 00:11:13,420
handle bug reports on a daily basis

00:11:10,840 --> 00:11:15,430
since they know how to deal with it they

00:11:13,420 --> 00:11:18,460
know how to think about is this change

00:11:15,430 --> 00:11:19,990
which seems completely innocuous and the

00:11:18,460 --> 00:11:21,190
bug reporter is like it there's no way

00:11:19,990 --> 00:11:23,020
this change could possibly break

00:11:21,190 --> 00:11:24,720
anything or when I've been thinking

00:11:23,020 --> 00:11:28,450
about breakage because it's such a

00:11:24,720 --> 00:11:30,190
simple thing that it's if it were any

00:11:28,450 --> 00:11:32,290
other piece of software that wasn't used

00:11:30,190 --> 00:11:34,030
by every single source package in Debian

00:11:32,290 --> 00:11:39,910
making this change would be obviously

00:11:34,030 --> 00:11:45,150
correct and in a way I'm responsible for

00:11:39,910 --> 00:11:52,660
this problem too because Deb helpers API

00:11:45,150 --> 00:11:54,520
is very broad and people in Debian often

00:11:52,660 --> 00:11:55,990
think that Deb helpers API is anything

00:11:54,520 --> 00:11:59,380
that debhelper does whether it's

00:11:55,990 --> 00:12:03,130
documented or not whether it's a bug or

00:11:59,380 --> 00:12:04,630
not and they depend on this behavior and

00:12:03,130 --> 00:12:06,010
of course they'll do it without even

00:12:04,630 --> 00:12:09,250
realizing that they're depending on it

00:12:06,010 --> 00:12:12,940
so I recently had a bug report here at

00:12:09,250 --> 00:12:14,590
Deb cough which I you know I went and

00:12:12,940 --> 00:12:17,170
bisected the bug and it turned out that

00:12:14,590 --> 00:12:20,710
I'd introduced it the very day that I

00:12:17,170 --> 00:12:25,990
rewrote debhelper in perl fifteen years

00:12:20,710 --> 00:12:28,540
ago I had a pinko and I put in one word

00:12:25,990 --> 00:12:30,910
why shouldn't have and the bug lurked in

00:12:28,540 --> 00:12:32,230
the code all the way to the present when

00:12:30,910 --> 00:12:34,450
somebody ran over it

00:12:32,230 --> 00:12:37,840
and I was like well this is a trivial

00:12:34,450 --> 00:12:39,580
bug Deveaux wait you can fix this bug in

00:12:37,840 --> 00:12:41,140
ways that could break things that depend

00:12:39,580 --> 00:12:46,540
on this behavior and this behavior isn't

00:12:41,140 --> 00:12:49,420
specified and yeah I don't know if part

00:12:46,540 --> 00:12:51,310
of the problem is that now that I'm not

00:12:49,420 --> 00:12:52,570
as much of a Perl program or anymore I

00:12:51,310 --> 00:12:53,440
kind of care a little bit more about

00:12:52,570 --> 00:12:55,780
correctness

00:12:53,440 --> 00:12:58,390
maybe I've shot myself in the foot and I

00:12:55,780 --> 00:12:59,650
just need to be the Joey that I was five

00:12:58,390 --> 00:13:04,690
or ten years ago it was like I'll just

00:12:59,650 --> 00:13:06,430
break everything I don't care so you

00:13:04,690 --> 00:13:07,480
know maybe the DHT bus factor has

00:13:06,430 --> 00:13:08,560
already happened and the guy who's

00:13:07,480 --> 00:13:16,650
standing in front of you can't maintain

00:13:08,560 --> 00:13:19,930
tape helper without going insane so I

00:13:16,650 --> 00:13:21,670
tend to think that I do have overblown

00:13:19,930 --> 00:13:24,250
fears about breaking stuff in Debbie and

00:13:21,670 --> 00:13:27,610
I think the Debian should be good at

00:13:24,250 --> 00:13:38,980
handling random breakage yeah go ahead

00:13:27,610 --> 00:13:41,020
going if there is a mic test so on the

00:13:38,980 --> 00:13:46,000
on the old book report in the past

00:13:41,020 --> 00:13:48,760
you've I mean you you've correctly I

00:13:46,000 --> 00:13:50,830
think gone and said we need to we need

00:13:48,760 --> 00:13:54,960
to make sure that that all source

00:13:50,830 --> 00:13:59,530
packages in Debian work with this change

00:13:54,960 --> 00:14:02,650
fine the in some cases this may require

00:13:59,530 --> 00:14:06,610
going off and fixing packages and

00:14:02,650 --> 00:14:07,930
unstable to cope with this in some case

00:14:06,610 --> 00:14:11,490
those may take a while to propagate to

00:14:07,930 --> 00:14:15,670
testing etc etc what's your what's your

00:14:11,490 --> 00:14:18,340
threshold on the point when you decide

00:14:15,670 --> 00:14:19,900
it's good enough because you know in

00:14:18,340 --> 00:14:21,910
some cases the things that Breck may not

00:14:19,900 --> 00:14:23,530
be in Debian in some case the thing they

00:14:21,910 --> 00:14:26,740
may not be in testing we may have to

00:14:23,530 --> 00:14:28,840
security yeah and I don't know if you

00:14:26,740 --> 00:14:31,390
said in Debby and specifically thinking

00:14:28,840 --> 00:14:33,550
maybe in a boon to - I was I was

00:14:31,390 --> 00:14:35,080
actually thinking more of because I

00:14:33,550 --> 00:14:37,090
think we we can probably figure it out

00:14:35,080 --> 00:14:41,170
but I was thinking more of third-party

00:14:37,090 --> 00:14:44,110
packages that happen to depend on some

00:14:41,170 --> 00:14:46,060
random weirdness and are probably prob

00:14:44,110 --> 00:14:48,940
the aren't meant to end by people who

00:14:46,060 --> 00:14:51,640
are plugged in enough to the to the rest

00:14:48,940 --> 00:14:54,430
of Debian to notice changes right so

00:14:51,640 --> 00:14:56,740
yeah I mean if it if a change only

00:14:54,430 --> 00:14:59,050
breaks one package or three packages and

00:14:56,740 --> 00:15:01,269
we catch that on the next full archive

00:14:59,050 --> 00:15:03,070
rebuild and the breakage isn't packaged

00:15:01,269 --> 00:15:07,120
suddenly lost file that nobody will

00:15:03,070 --> 00:15:23,620
notice is gone and or you know something

00:15:07,120 --> 00:15:26,110
like that then we're fine and if let me

00:15:23,620 --> 00:15:27,519
try that I can but I'll whisper to avoid

00:15:26,110 --> 00:15:29,610
feedback okay great

00:15:27,519 --> 00:15:32,019
yeah it sounds like you've said as a

00:15:29,610 --> 00:15:35,519
you've said a few times with me as the

00:15:32,019 --> 00:15:38,410
only committer on to help her with music

00:15:35,519 --> 00:15:39,940
so let's just change that question mark

00:15:38,410 --> 00:15:41,079
it sounds like you don't want to but it

00:15:39,940 --> 00:15:42,820
also sounds like you haven't given any

00:15:41,079 --> 00:15:43,930
reasons also every time you take a drink

00:15:42,820 --> 00:15:48,459
from that it looks like you're taking a

00:15:43,930 --> 00:15:50,620
swig of rye or something I wish so yeah

00:15:48,459 --> 00:15:52,540
I mean I'm conflicted that's that's why

00:15:50,620 --> 00:15:53,800
I'm having this talk because on the one

00:15:52,540 --> 00:15:59,050
hand I would love to have a deaf helper

00:15:53,800 --> 00:16:00,490
team and on the other hand I it's not

00:15:59,050 --> 00:16:01,899
that I'm questioning the competence of

00:16:00,490 --> 00:16:03,310
somebody on the team it's just that I

00:16:01,899 --> 00:16:06,720
have a lot of experience with dealing

00:16:03,310 --> 00:16:06,720
with this and they don't necessarily

00:16:06,810 --> 00:16:19,329
vanished again yeah I'll repeat it then

00:16:18,100 --> 00:16:20,800
maybe it makes a lot of sense to let

00:16:19,329 --> 00:16:22,839
people commit whatever makes sense to

00:16:20,800 --> 00:16:25,060
get master or something and if you read

00:16:22,839 --> 00:16:26,890
the diff before making it really I'm

00:16:25,060 --> 00:16:30,190
sorry okay here's the thing I don't I'm

00:16:26,890 --> 00:16:33,339
suck it hat true you it's not a thing

00:16:30,190 --> 00:16:39,160
that I'm good at so this is not a good

00:16:33,339 --> 00:16:40,600
solution my patch review would basically

00:16:39,160 --> 00:16:42,250
consist of exactly what I'm complaining

00:16:40,600 --> 00:16:44,880
about now which is meaning to go figure

00:16:42,250 --> 00:16:47,350
out what it breaks I already get patches

00:16:44,880 --> 00:16:49,269
so getting patches isn't the problem

00:16:47,350 --> 00:16:50,890
so maybe what you need is a better

00:16:49,269 --> 00:16:53,589
testing framework to rebuild the entire

00:16:50,890 --> 00:16:56,319
archive would get d-h maybe I do but

00:16:53,589 --> 00:16:57,070
like I was saying some of the failure

00:16:56,319 --> 00:17:00,370
modes

00:16:57,070 --> 00:17:02,470
might be hard to detect it might just be

00:17:00,370 --> 00:17:04,839
missing a file or it might put the wrong

00:17:02,470 --> 00:17:06,190
thing in the post dense script or it you

00:17:04,839 --> 00:17:07,720
know it could be anything so

00:17:06,190 --> 00:17:09,910
hypothetically if we had binary

00:17:07,720 --> 00:17:11,320
reproducible builds then you could

00:17:09,910 --> 00:17:20,920
verify that the contents were the same

00:17:11,320 --> 00:17:24,190
yes okay yes please do that so where was

00:17:20,920 --> 00:17:25,870
I um if people have questions keep

00:17:24,190 --> 00:17:26,829
asking them otherwise I'll just ramble

00:17:25,870 --> 00:17:28,420
on because I'm really just trying to

00:17:26,829 --> 00:17:30,490
come to its come to some kind of a

00:17:28,420 --> 00:17:32,890
decision here and your input is what I

00:17:30,490 --> 00:17:40,440
want so when I'm just rambling I'm just

00:17:32,890 --> 00:17:43,030
filling time so I was thinking about the

00:17:40,440 --> 00:17:46,740
breaking the archive stuff and then

00:17:43,030 --> 00:17:50,140
trying to rebuild it to find what breaks

00:17:46,740 --> 00:17:52,300
but what about silent failures what if

00:17:50,140 --> 00:17:55,390
we don't notice the package suddenly has

00:17:52,300 --> 00:17:57,760
different entries and all we did this

00:17:55,390 --> 00:17:58,380
chest were they'd boots but now it's

00:17:57,760 --> 00:18:01,540
broken

00:17:58,380 --> 00:18:03,850
I'm not that convinced that trying to

00:18:01,540 --> 00:18:06,550
have this broad interface and just

00:18:03,850 --> 00:18:08,950
trying to break things and see whether

00:18:06,550 --> 00:18:10,990
it still works there's a good approach

00:18:08,950 --> 00:18:13,390
and maybe we still need to step back a

00:18:10,990 --> 00:18:16,420
bit and need to make the interface more

00:18:13,390 --> 00:18:18,310
explicit and explicitly telling this is

00:18:16,420 --> 00:18:20,170
a Python package this is a make file

00:18:18,310 --> 00:18:22,480
package this is an auto count package

00:18:20,170 --> 00:18:24,640
and not having to figure this out

00:18:22,480 --> 00:18:26,920
automatically okay so you're thinking

00:18:24,640 --> 00:18:28,930
I'm talking about just the interface CDH

00:18:26,920 --> 00:18:32,980
where it goes off and magically figures

00:18:28,930 --> 00:18:37,360
out what to do and yeah that's a problem

00:18:32,980 --> 00:18:40,000
and we pretty well understand how to

00:18:37,360 --> 00:18:43,450
avoid problems with that interface and a

00:18:40,000 --> 00:18:45,670
few other pH people do and we could

00:18:43,450 --> 00:18:48,960
easily teach that to a team and not have

00:18:45,670 --> 00:18:48,960
that problem not run into those problems

00:18:49,020 --> 00:18:55,390
the larger problem is outside of d-h

00:18:52,120 --> 00:18:57,370
though it's that you any change to any

00:18:55,390 --> 00:18:59,350
dip helper command can heck and ripple

00:18:57,370 --> 00:19:01,930
down and have unforeseen consequences in

00:18:59,350 --> 00:19:05,160
the archive because it can be it can be

00:19:01,930 --> 00:19:05,160
depending on a bug or something

00:19:06,059 --> 00:19:14,460
thank you what I wanted to say is not

00:19:11,820 --> 00:19:15,989
about the D H main part about all the

00:19:14,460 --> 00:19:18,359
help and also more help these small

00:19:15,989 --> 00:19:19,830
helpers supposedly they should have some

00:19:18,359 --> 00:19:21,659
very clear interface there should be

00:19:19,830 --> 00:19:23,759
very clear what they do which is many

00:19:21,659 --> 00:19:27,090
many times not the case especially with

00:19:23,759 --> 00:19:29,340
for some other language helpers and

00:19:27,090 --> 00:19:32,369
whatnot and but the thing is they seem

00:19:29,340 --> 00:19:34,409
very suited for having unit tests and a

00:19:32,369 --> 00:19:36,419
clear definition of what they do so once

00:19:34,409 --> 00:19:39,210
you have that it will be be easy to

00:19:36,419 --> 00:19:40,499
check that they are breaking so I think

00:19:39,210 --> 00:19:42,269
there's about three different answers to

00:19:40,499 --> 00:19:43,769
that one of them is the whole Debian

00:19:42,269 --> 00:19:45,599
archive is a pretty good unit test if

00:19:43,769 --> 00:19:47,609
you can actually use it as one I use it

00:19:45,599 --> 00:19:48,929
as one for pristine tour and it works

00:19:47,609 --> 00:19:51,299
great because I have a wall to find

00:19:48,929 --> 00:19:52,710
interface I'm only doing one thing with

00:19:51,299 --> 00:19:57,210
the whole Debian archive I'm trying to

00:19:52,710 --> 00:19:58,649
make Christine you are output it unit

00:19:57,210 --> 00:20:00,539
tests is something that would be

00:19:58,649 --> 00:20:02,879
wonderful and unfortunately I suck at

00:20:00,539 --> 00:20:06,210
writing test Suites this is why I don't

00:20:02,879 --> 00:20:08,099
write Perl anymore and if there were a

00:20:06,210 --> 00:20:09,659
developer team maybe some of the depo

00:20:08,099 --> 00:20:11,549
pro team would feel motivated because

00:20:09,659 --> 00:20:13,649
they're in the team to actually write

00:20:11,549 --> 00:20:15,899
tests it's not that there aren't any

00:20:13,649 --> 00:20:20,070
tests in dev helper it's just that there

00:20:15,899 --> 00:20:22,019
aren't very many and I think there was a

00:20:20,070 --> 00:20:23,519
third answer to that if I have if I

00:20:22,019 --> 00:20:25,940
answered you sufficiently or was there

00:20:23,519 --> 00:20:25,940
something else

00:20:26,869 --> 00:20:32,039
okay proposed to have tests that were

00:20:29,309 --> 00:20:33,779
yelling to have this as a way of making

00:20:32,039 --> 00:20:36,210
sure that these don't break with other

00:20:33,779 --> 00:20:37,529
people's country yeah but you know again

00:20:36,210 --> 00:20:38,789
I'm talking about the kind of breakage

00:20:37,529 --> 00:20:40,609
that yeah you can write a regression

00:20:38,789 --> 00:20:43,080
test for this kind of break is just fine

00:20:40,609 --> 00:20:45,330
but detecting the breakage in the first

00:20:43,080 --> 00:20:47,460
place is the problem and you know I

00:20:45,330 --> 00:20:49,320
don't know if there's anything about

00:20:47,460 --> 00:20:52,739
that Olbers design that makes this a

00:20:49,320 --> 00:20:56,159
more likely it more likely to have this

00:20:52,739 --> 00:20:58,409
problem than anything else I think that

00:20:56,159 --> 00:21:00,269
for example D package build package has

00:20:58,409 --> 00:21:02,489
exactly the same problem because I've

00:21:00,269 --> 00:21:04,289
struggled with oh you want to add these

00:21:02,489 --> 00:21:05,879
build flag things well that's actually

00:21:04,289 --> 00:21:07,409
going to cars arbitrary random breakage

00:21:05,879 --> 00:21:10,859
to packages in the archive when they're

00:21:07,409 --> 00:21:13,169
configured when you turn on - J X some

00:21:10,859 --> 00:21:15,119
make files will break and people you

00:21:13,169 --> 00:21:17,849
know you have it's a complicated system

00:21:15,119 --> 00:21:19,760
with a lot of moving parts and you had

00:21:17,849 --> 00:21:21,320
you can have very well will document

00:21:19,760 --> 00:21:25,330
simple commands with a simple interface

00:21:21,320 --> 00:21:25,330
and still have these problems :

00:21:30,400 --> 00:21:36,710
the as a really really low impedance

00:21:35,050 --> 00:21:38,570
option

00:21:36,710 --> 00:21:42,920
have you considered something like the

00:21:38,570 --> 00:21:44,840
way works which is it's not actually

00:21:42,920 --> 00:21:59,960
this but imagine that you took a copy of

00:21:44,840 --> 00:22:01,010
every source package that breaks it

00:21:59,960 --> 00:22:04,040
would be a good way to do regression

00:22:01,010 --> 00:22:05,810
tests definitely and I think that if we

00:22:04,040 --> 00:22:07,580
had a test suite not having to worry

00:22:05,810 --> 00:22:11,420
about how much to space that used would

00:22:07,580 --> 00:22:13,310
be a good thing and because we really

00:22:11,420 --> 00:22:15,620
are gonna want whole packages or whole

00:22:13,310 --> 00:22:22,010
packages - the actual source e bits and

00:22:15,620 --> 00:22:24,530
you know so yeah I love the idea of

00:22:22,010 --> 00:22:26,780
having a test suite I'm kind of curious

00:22:24,530 --> 00:22:28,220
if anybody in the audience would be

00:22:26,780 --> 00:22:29,960
interested in working on writing one

00:22:28,220 --> 00:22:34,510
because I think we all have lives and

00:22:29,960 --> 00:22:34,510
stuff yeah

00:22:35,240 --> 00:22:39,430
Oh were you interested back there Steve

00:22:40,860 --> 00:22:44,230
[Laughter]

00:22:53,920 --> 00:22:58,610
with respect if the problem of

00:22:57,290 --> 00:23:00,860
interphase is changing and breaking

00:22:58,610 --> 00:23:03,260
things without realizing it is is a test

00:23:00,860 --> 00:23:05,870
suite the right way to go because in a

00:23:03,260 --> 00:23:09,170
sense where you never test for the bug

00:23:05,870 --> 00:23:10,520
until you conceive of the bug so you're

00:23:09,170 --> 00:23:12,530
always risking breaking things any way

00:23:10,520 --> 00:23:14,870
you test suite is only going to cover

00:23:12,530 --> 00:23:17,360
your progression testing anyway oh right

00:23:14,870 --> 00:23:21,700
well you know oh I guess I'm wondering

00:23:17,360 --> 00:23:23,930
if just incrementing the debhelper

00:23:21,700 --> 00:23:26,000
compat level more frequently why it's

00:23:23,930 --> 00:23:27,080
actually the way to go I think you could

00:23:26,000 --> 00:23:30,470
be on to something and I've really been

00:23:27,080 --> 00:23:32,840
doing it more often often if I get to a

00:23:30,470 --> 00:23:34,490
case where I'm like okay I need to fix

00:23:32,840 --> 00:23:37,130
this bug by making this change

00:23:34,490 --> 00:23:39,020
oh no this change could possibly

00:23:37,130 --> 00:23:40,400
theoretically break something I don't

00:23:39,020 --> 00:23:42,800
really feel like trying to get a full

00:23:40,400 --> 00:23:44,570
archive rebuild and check it even though

00:23:42,800 --> 00:23:47,180
I may understand what the breakage might

00:23:44,570 --> 00:23:49,190
do or I might not so I just throw it in

00:23:47,180 --> 00:23:51,410
and say new dip helper compatibility

00:23:49,190 --> 00:23:54,980
level fixes this and I'm doing that more

00:23:51,410 --> 00:23:57,650
and more the probably that is and maybe

00:23:54,980 --> 00:24:01,340
it's a good thing is that it distributes

00:23:57,650 --> 00:24:06,800
all the load out onto you I know all of

00:24:01,340 --> 00:24:09,860
it because there is the dead code issue

00:24:06,800 --> 00:24:11,360
yes sweet is not going to be necessarily

00:24:09,860 --> 00:24:12,070
smaller than that that is absolutely

00:24:11,360 --> 00:24:14,120
true

00:24:12,070 --> 00:24:16,160
however how many people in this room

00:24:14,120 --> 00:24:18,880
have updated the debian compatibility

00:24:16,160 --> 00:24:23,570
version from n to n plus 1 or more

00:24:18,880 --> 00:24:27,040
without reading the man page that's all

00:24:23,570 --> 00:24:27,040
come on people be honest

00:24:28,950 --> 00:24:41,220
yes-man debhelper searched for compat in

00:24:33,370 --> 00:24:44,170
uppercase that's exactly what I'm saying

00:24:41,220 --> 00:24:45,400
so but then that takes an active effort

00:24:44,170 --> 00:24:47,080
on the part of the maintainer to have

00:24:45,400 --> 00:24:49,390
broken their package in light of your

00:24:47,080 --> 00:24:53,590
changes so they broke it they keep both

00:24:49,390 --> 00:24:55,090
pieces yeah it's definitely true it's

00:24:53,590 --> 00:24:58,210
just that if you look at debian as a

00:24:55,090 --> 00:24:59,800
whole I'm still breaking Debian the fact

00:24:58,210 --> 00:25:00,460
that somebody else has responsibility

00:24:59,800 --> 00:25:05,130
for it

00:25:00,460 --> 00:25:07,090
debian still broken right so I have a

00:25:05,130 --> 00:25:10,330
horrible suggestion that everybody's

00:25:07,090 --> 00:25:12,460
gonna hate every time you've got these

00:25:10,330 --> 00:25:17,260
that's not the horrible suggestion we

00:25:12,460 --> 00:25:18,430
hate every time you increase this

00:25:17,260 --> 00:25:21,540
compact level and you keep the old

00:25:18,430 --> 00:25:24,040
version you have to have some kind of if

00:25:21,540 --> 00:25:25,510
stuff in your code which no doubt is

00:25:24,040 --> 00:25:31,120
eventually going to become fragile and

00:25:25,510 --> 00:25:34,540
break just putting multiple versions of

00:25:31,120 --> 00:25:37,720
del pepper in the archive so yeah I

00:25:34,540 --> 00:25:39,820
haven't considered that I personally

00:25:37,720 --> 00:25:42,880
haven't found the maintenance burden of

00:25:39,820 --> 00:25:46,960
the old compact code to be that high so

00:25:42,880 --> 00:25:49,350
far very I really don't refactor tip

00:25:46,960 --> 00:25:52,180
helper that much if I did it would suck

00:25:49,350 --> 00:25:54,940
because I'd have to test everything but

00:25:52,180 --> 00:25:56,560
since I'm just putting in if in and the

00:25:54,940 --> 00:25:58,300
old branch is the old code and the new

00:25:56,560 --> 00:26:01,960
branch does new code that can be

00:25:58,300 --> 00:26:03,970
maintained it's generally not been an

00:26:01,960 --> 00:26:06,160
issue and I don't know if it would

00:26:03,970 --> 00:26:07,750
really save me anything to have version

00:26:06,160 --> 00:26:09,070
DEP helpers than the archive you could

00:26:07,750 --> 00:26:12,510
definitely do it that way I just don't

00:26:09,070 --> 00:26:12,510
know that it's any better or any worse

00:26:13,200 --> 00:26:18,520
so without going too far down this it's

00:26:16,870 --> 00:26:20,760
impossible to fix tip helper rabbit

00:26:18,520 --> 00:26:20,760
holes

00:26:21,300 --> 00:26:26,650
you know I it's definitely possible to

00:26:25,240 --> 00:26:28,510
keep maintaining debhelper the way it's

00:26:26,650 --> 00:26:31,150
been maintained and it seems to work

00:26:28,510 --> 00:26:32,620
okay because I only have you know three

00:26:31,150 --> 00:26:35,290
or four people a week setting a bug

00:26:32,620 --> 00:26:37,690
reports or saying why didn't you fix

00:26:35,290 --> 00:26:39,160
this bug report I sent you three weeks

00:26:37,690 --> 00:26:40,900
ago or three months ago

00:26:39,160 --> 00:26:43,300
whatever and I only get twice that many

00:26:40,900 --> 00:26:50,410
at DEFCON fighting

00:26:43,300 --> 00:26:53,590
why 70 per day at DEP golf so I'd kind

00:26:50,410 --> 00:26:58,470
of like to you know get back to the DEP

00:26:53,590 --> 00:27:00,550
kampf team idea a little bit because

00:26:58,470 --> 00:27:02,710
it's kind of seems to me it's the only

00:27:00,550 --> 00:27:05,200
idea I have that would make maintenance

00:27:02,710 --> 00:27:06,760
of dev helper or any better I think I've

00:27:05,200 --> 00:27:11,920
said Deb Kampf a few times when I meant

00:27:06,760 --> 00:27:14,680
to help her yeah so I have a comment on

00:27:11,920 --> 00:27:17,260
your code review thing personally I love

00:27:14,680 --> 00:27:19,330
code reviews in a lab reviewing code so

00:27:17,260 --> 00:27:21,670
maybe your expectation is just a little

00:27:19,330 --> 00:27:24,460
bit too high maybe you think that a

00:27:21,670 --> 00:27:26,440
patch should after you review be perfect

00:27:24,460 --> 00:27:29,020
and can't fail and you want to verify it

00:27:26,440 --> 00:27:30,820
all whereas there already is great value

00:27:29,020 --> 00:27:33,520
in having a code review to catch you

00:27:30,820 --> 00:27:36,370
know just minor issues or design issues

00:27:33,520 --> 00:27:39,520
and all that stuff and also before you

00:27:36,370 --> 00:27:41,830
answer I think that the only way to move

00:27:39,520 --> 00:27:44,740
forward with team maintaining Deb helper

00:27:41,830 --> 00:27:46,540
is to actually allow for some breakage

00:27:44,740 --> 00:27:49,360
to happen and then count on the people

00:27:46,540 --> 00:27:52,030
who you know are responsible for in

00:27:49,360 --> 00:27:53,710
quotes for that breakage to learn from

00:27:52,030 --> 00:27:55,720
their mistakes and not make them again

00:27:53,710 --> 00:27:58,630
and in such a way spread the knowledge

00:27:55,720 --> 00:28:00,430
in you know also your methodology that's

00:27:58,630 --> 00:28:02,500
I think the important thing so if I

00:28:00,430 --> 00:28:04,960
would send you a patch what I would love

00:28:02,500 --> 00:28:06,520
to get is the feedback that you say well

00:28:04,960 --> 00:28:08,560
here's what I would do personally to

00:28:06,520 --> 00:28:10,870
ensure that this doesn't break and then

00:28:08,560 --> 00:28:13,690
I could do it right yeah I mean I hope

00:28:10,870 --> 00:28:15,370
that I generally do that but sometimes

00:28:13,690 --> 00:28:16,930
maybe I just make all the changes and

00:28:15,370 --> 00:28:18,580
commit it with a commit message that

00:28:16,930 --> 00:28:23,140
doesn't explain anything I don't know it

00:28:18,580 --> 00:28:24,880
I'm human too I guess right I how many

00:28:23,140 --> 00:28:27,400
people in the room get the sense that my

00:28:24,880 --> 00:28:28,840
fears are overblown that you know I

00:28:27,400 --> 00:28:31,090
should just go ahead and suck it up and

00:28:28,840 --> 00:28:34,710
do whatever okay bill does other people

00:28:31,090 --> 00:28:42,250
do people why you trust do so okay great

00:28:34,710 --> 00:28:45,640
so I guess you know I would like to

00:28:42,250 --> 00:28:47,530
explore the the team thing and I don't

00:28:45,640 --> 00:28:48,140
see any reason not to just do it

00:28:47,530 --> 00:28:50,840
really

00:28:48,140 --> 00:28:52,610
and if people in the team want to

00:28:50,840 --> 00:28:53,990
continue running stuff by me until they

00:28:52,610 --> 00:28:55,610
feel comfortable maybe that's just the

00:28:53,990 --> 00:28:59,480
way to do it and just let them figure it

00:28:55,610 --> 00:29:01,940
out you know and it's really not like

00:28:59,480 --> 00:29:03,740
you have to have 10 or more years of

00:29:01,940 --> 00:29:05,570
hard-won experience on debhelper I mean

00:29:03,740 --> 00:29:06,950
Tim maintained debhelper because I

00:29:05,570 --> 00:29:11,510
clearly maintained it for 10 years

00:29:06,950 --> 00:29:12,770
before that was the case and Steve so an

00:29:11,510 --> 00:29:15,260
interesting example that comes to mind

00:29:12,770 --> 00:29:19,310
in this discussion is the case where I

00:29:15,260 --> 00:29:21,890
proposed some particular variables be

00:29:19,310 --> 00:29:26,630
exposed in places as substitution

00:29:21,890 --> 00:29:29,000
variables to allow multi arch paths to

00:29:26,630 --> 00:29:33,260
be to be expanded in a useful way and

00:29:29,000 --> 00:29:36,050
you rejected that and I think I think at

00:29:33,260 --> 00:29:37,880
the time you you made a sort of a very

00:29:36,050 --> 00:29:40,160
brief comment of the bug went off and

00:29:37,880 --> 00:29:43,220
implemented your own thing and it came

00:29:40,160 --> 00:29:46,160
back as a fait accompli that of course

00:29:43,220 --> 00:29:48,440
well that was the the th exec with that

00:29:46,160 --> 00:29:52,180
alleged eh exec it basically said you

00:29:48,440 --> 00:29:54,830
could have anything any any debhelper

00:29:52,180 --> 00:29:56,330
file could be an executable that does

00:29:54,830 --> 00:29:59,750
its own thing and spits out the result

00:29:56,330 --> 00:30:05,180
which is a clever insight and it's it's

00:29:59,750 --> 00:30:08,000
very general I guess what I'm trying to

00:30:05,180 --> 00:30:10,880
say is that those kinds of insights are

00:30:08,000 --> 00:30:12,410
somewhat unique to you oh okay I was

00:30:10,880 --> 00:30:13,910
good I was thinking this comment a

00:30:12,410 --> 00:30:15,110
completely different way so I think I'll

00:30:13,910 --> 00:30:17,450
just take it that way and then I'll

00:30:15,110 --> 00:30:19,880
answer what you're actually saying so

00:30:17,450 --> 00:30:21,410
first of all I apologize from the depths

00:30:19,880 --> 00:30:23,750
of my heart for being an about

00:30:21,410 --> 00:30:29,960
you ubuntu and developer and other

00:30:23,750 --> 00:30:33,500
things secondly yeah that was a

00:30:29,960 --> 00:30:35,360
interesting general solution that was

00:30:33,500 --> 00:30:37,910
arrived at in a fit of pique and I don't

00:30:35,360 --> 00:30:40,160
think that I'm unique in that regard I

00:30:37,910 --> 00:30:41,720
think that anybody can say well we'll

00:30:40,160 --> 00:30:45,860
just generalize the hell out of this or

00:30:41,720 --> 00:30:47,240
whatever you know you know and I'm not

00:30:45,860 --> 00:30:48,890
saying and if there's a developer team

00:30:47,240 --> 00:30:51,230
I'm certainly gonna be part of it going

00:30:48,890 --> 00:30:53,330
forward I have no interest in not being

00:30:51,230 --> 00:30:55,520
part of depo or maintenance at all I

00:30:53,330 --> 00:30:56,990
would just like to not have as many bug

00:30:55,520 --> 00:30:59,600
reports that I have to personally deal

00:30:56,990 --> 00:31:00,360
with and or that stay open for too long

00:30:59,600 --> 00:31:02,790
or

00:31:00,360 --> 00:31:05,100
you know worth and the splintering

00:31:02,790 --> 00:31:06,809
problem which I don't know if it's

00:31:05,100 --> 00:31:08,940
really a problem that we have all these

00:31:06,809 --> 00:31:11,160
different that help our commands out

00:31:08,940 --> 00:31:13,350
there but it seems to me that it can't

00:31:11,160 --> 00:31:14,910
be ideal unless we just want to fully

00:31:13,350 --> 00:31:17,040
distribute debhelper maintenance

00:31:14,910 --> 00:31:18,510
throughout Debian and maybe we should be

00:31:17,040 --> 00:31:19,710
thinking about removing commands from

00:31:18,510 --> 00:31:23,370
debhelper and giving them to other

00:31:19,710 --> 00:31:25,049
people or something so let me talk a

00:31:23,370 --> 00:31:26,250
little bit more about I mean the fact

00:31:25,049 --> 00:31:28,380
that there are people who are

00:31:26,250 --> 00:31:32,520
responsible for little pieces of help

00:31:28,380 --> 00:31:34,169
are already you know I could easily give

00:31:32,520 --> 00:31:37,140
up more little pieces that would not be

00:31:34,169 --> 00:31:39,210
a problem so what I've been really

00:31:37,140 --> 00:31:42,750
thinking about what this team is if

00:31:39,210 --> 00:31:44,970
there is a developer team and what is

00:31:42,750 --> 00:31:47,309
the team maintenance model I don't like

00:31:44,970 --> 00:31:48,900
the team maintenance model where

00:31:47,309 --> 00:31:50,669
everybody in the team is equally

00:31:48,900 --> 00:31:52,760
responsible for everything which means

00:31:50,669 --> 00:31:54,750
that no one is responsible for anything

00:31:52,760 --> 00:31:56,190
you know I think that if we have a

00:31:54,750 --> 00:31:57,990
developer command it just say at the

00:31:56,190 --> 00:31:59,309
bottom who is responsible of the man

00:31:57,990 --> 00:32:01,650
page who was responsible for this

00:31:59,309 --> 00:32:03,630
command and that way when it breaks you

00:32:01,650 --> 00:32:06,540
know who to talk to or something like

00:32:03,630 --> 00:32:08,490
that we kind of need a team maintenance

00:32:06,540 --> 00:32:13,110
model for each debhelper command or

00:32:08,490 --> 00:32:15,540
something and we've kind of split it up

00:32:13,110 --> 00:32:16,830
in that way already except for the you

00:32:15,540 --> 00:32:18,900
know the third of it that's actually in

00:32:16,830 --> 00:32:20,429
debhelper so I've kind of been mulling

00:32:18,900 --> 00:32:21,540
this kind of thing over and I don't know

00:32:20,429 --> 00:32:23,100
maybe it's the kind of thing that we

00:32:21,540 --> 00:32:25,740
need to form a team and cut and think

00:32:23,100 --> 00:32:28,410
about it and you know come up with

00:32:25,740 --> 00:32:33,120
something that makes sense

00:32:28,410 --> 00:32:34,710
I think I've kind of run almost dry on

00:32:33,120 --> 00:32:37,530
as far as what I wanted to talk about

00:32:34,710 --> 00:32:39,450
because people seem receptive enough to

00:32:37,530 --> 00:32:41,040
being on a team could did I ask for a

00:32:39,450 --> 00:32:43,490
show of hands for who would actually be

00:32:41,040 --> 00:32:49,320
interested on being on a developer team

00:32:43,490 --> 00:32:53,220
ok let's see him there's five or six

00:32:49,320 --> 00:32:58,500
maybe we have a third a Debian here so

00:32:53,220 --> 00:33:01,590
there might be 15 okay or 20 I forgot to

00:32:58,500 --> 00:33:03,360
raise my hand on that sounds like your

00:33:01,590 --> 00:33:05,070
reasonable team that gets started I

00:33:03,360 --> 00:33:06,929
guess I kind of like the idea of just

00:33:05,070 --> 00:33:08,550
drafting everybody who has a dev helper

00:33:06,929 --> 00:33:11,850
and command into the mailing list at

00:33:08,550 --> 00:33:13,200
least because why not we should if we

00:33:11,850 --> 00:33:15,090
have a mailing list

00:33:13,200 --> 00:33:17,780
you know we should communicate on it

00:33:15,090 --> 00:33:17,780
that's what it's for

00:33:18,170 --> 00:33:22,560
okay I don't know really how I'm doing

00:33:20,910 --> 00:33:24,870
one time do I have ten minutes left or

00:33:22,560 --> 00:33:26,130
something so it actually worked out I

00:33:24,870 --> 00:33:29,850
actually ran dry at the right time

00:33:26,130 --> 00:33:31,500
that's nice yeah I think I'm done unless

00:33:29,850 --> 00:33:33,690
somebody has comments so I guess we'll

00:33:31,500 --> 00:33:35,910
just go to comments now yes I wanted to

00:33:33,690 --> 00:33:37,590
make a couple of comments one I think

00:33:35,910 --> 00:33:40,920
what you were saying about the splitting

00:33:37,590 --> 00:33:43,850
is that in my opinion it will make sense

00:33:40,920 --> 00:33:46,050
to have more developer packages and

00:33:43,850 --> 00:33:51,450
concentrate more on on the core and

00:33:46,050 --> 00:33:54,090
maybe enforce more some Tarrance to the

00:33:51,450 --> 00:33:55,830
DHS standards yeah and the other thing

00:33:54,090 --> 00:33:58,440
is what you said about teaming tenants

00:33:55,830 --> 00:34:00,150
you were say saying that you don't like

00:33:58,440 --> 00:34:02,400
a team with nobody everybody's

00:34:00,150 --> 00:34:04,620
responsible whatever and I think you

00:34:02,400 --> 00:34:06,570
might try some thing can work pretty

00:34:04,620 --> 00:34:08,880
well doing that if the team is

00:34:06,570 --> 00:34:11,100
functional I've been on functional teams

00:34:08,880 --> 00:34:13,650
that have still had the problem that a

00:34:11,100 --> 00:34:15,240
bug came in and everybody was busy so

00:34:13,650 --> 00:34:16,590
the bug didn't get dealt with because

00:34:15,240 --> 00:34:19,110
they all thought that the other guy

00:34:16,590 --> 00:34:21,330
wasn't busy that's unless your team is

00:34:19,110 --> 00:34:25,470
all hanging out on RC every day I don't

00:34:21,330 --> 00:34:27,480
see how you can avoid that do you yeah

00:34:25,470 --> 00:34:28,020
but I don't have the bandwidth to hang

00:34:27,480 --> 00:34:29,790
on our arse

00:34:28,020 --> 00:34:31,590
another IRC channel all day and actually

00:34:29,790 --> 00:34:33,900
know who's active and who's doing what

00:34:31,590 --> 00:34:35,970
it's you know I need to have a mailing

00:34:33,900 --> 00:34:37,230
list with sync with synchronous

00:34:35,970 --> 00:34:40,560
communication please asynchronous

00:34:37,230 --> 00:34:46,200
communication please Steve I thought you

00:34:40,560 --> 00:34:47,429
had a mic looking at me with the mic in

00:34:46,200 --> 00:34:49,470
a way that indicate you want to talk

00:34:47,429 --> 00:34:51,330
okay never sorry well I do actually I

00:34:49,470 --> 00:34:55,169
think I think you're the one with the

00:34:51,330 --> 00:34:56,460
mic I raised my hand before I'm not

00:34:55,169 --> 00:34:58,020
interested in meeting all of the

00:34:56,460 --> 00:35:01,110
developer but I am one of the maintainer

00:34:58,020 --> 00:35:03,330
of one of the th comments and I

00:35:01,110 --> 00:35:08,760
definitely would be okay for me to

00:35:03,330 --> 00:35:11,250
maintain it within a greater lot of the

00:35:08,760 --> 00:35:13,290
best factor on those tools I'm

00:35:11,250 --> 00:35:15,450
maintaining one myself there are no

00:35:13,290 --> 00:35:17,880
comment errors or anything so yeah and

00:35:15,450 --> 00:35:20,010
you can agreed for those if they could

00:35:17,880 --> 00:35:21,900
be integrated back and you have a subset

00:35:20,010 --> 00:35:22,800
of the same problem that I have really I

00:35:21,900 --> 00:35:24,360
don't know what your thing you're

00:35:22,800 --> 00:35:26,170
maintaining maybe it's only used by a

00:35:24,360 --> 00:35:30,220
few packages

00:35:26,170 --> 00:35:32,440
it's not it's linked with the H link

00:35:30,220 --> 00:35:34,210
readings you know so I think yeah I

00:35:32,440 --> 00:35:36,670
submitted it to you and you suggest I

00:35:34,210 --> 00:35:42,190
said something like I can't maintain

00:35:36,670 --> 00:35:46,630
this maintaining it with you so the only

00:35:42,190 --> 00:35:49,000
comment is well this tool is rather

00:35:46,630 --> 00:35:51,099
stable and doesn't change much I'm not

00:35:49,000 --> 00:35:53,980
sure I would be interested to get all

00:35:51,099 --> 00:35:56,410
the traffic of traffic just to watch it

00:35:53,980 --> 00:36:01,690
so if there are some coordinator who

00:35:56,410 --> 00:36:03,099
could ping or yeah I mean if you do have

00:36:01,690 --> 00:36:05,829
that kind of responsibility that kind of

00:36:03,099 --> 00:36:07,450
thing could develop I guess you know and

00:36:05,829 --> 00:36:08,799
there could be some way of routing the

00:36:07,450 --> 00:36:10,599
bug to the person who's probably

00:36:08,799 --> 00:36:14,099
responsible and if they don't get around

00:36:10,599 --> 00:36:19,780
to it routing it to the team or whatever

00:36:14,099 --> 00:36:22,089
yeah there's no problem otherwise I

00:36:19,780 --> 00:36:25,270
think it's a great way to it should

00:36:22,089 --> 00:36:29,109
rather be opening its new consumer

00:36:25,270 --> 00:36:31,480
because well that's a kind of that's a

00:36:29,109 --> 00:36:33,130
way to find new volunteers really they

00:36:31,480 --> 00:36:35,829
started two keys one kevin intends to

00:36:33,130 --> 00:36:37,750
discover other bugs and fix them and

00:36:35,829 --> 00:36:39,130
gain knowledge yeah

00:36:37,750 --> 00:36:41,140
can I pull the audience on another

00:36:39,130 --> 00:36:42,670
question which is just as general Debian

00:36:41,140 --> 00:36:45,099
package maintainers who I assume

00:36:42,670 --> 00:36:46,809
probably used to have helper how many of

00:36:45,099 --> 00:36:52,240
you use step helper things that aren't

00:36:46,809 --> 00:36:54,190
in depth Inc you might okay like half

00:36:52,240 --> 00:36:56,920
the audience or more how many of you

00:36:54,190 --> 00:37:01,299
find that to be annoying in some way or

00:36:56,920 --> 00:37:02,950
another so Joey I was actually gonna

00:37:01,299 --> 00:37:05,230
comment that I wanted to really thank

00:37:02,950 --> 00:37:08,680
you for this talk if for no other reason

00:37:05,230 --> 00:37:11,230
then I had no idea that this many of the

00:37:08,680 --> 00:37:13,270
D H underscore commands were not things

00:37:11,230 --> 00:37:16,869
that you were personally sort of keeping

00:37:13,270 --> 00:37:21,520
high on and that's simultaneously

00:37:16,869 --> 00:37:23,079
wonderful and amazingly scary it's

00:37:21,520 --> 00:37:25,869
interesting because I've certainly been

00:37:23,079 --> 00:37:27,730
using developer stuff for a long time

00:37:25,869 --> 00:37:32,589
and I've actually been very happy

00:37:27,730 --> 00:37:34,360
consumer of D H now for a while and as I

00:37:32,589 --> 00:37:37,450
look down this list there are number

00:37:34,360 --> 00:37:40,420
of those that I'm using it one time or

00:37:37,450 --> 00:37:43,570
lots of times and it's been very

00:37:40,420 --> 00:37:45,940
interesting because in general they do

00:37:43,570 --> 00:37:47,710
mostly just seem to do the right things

00:37:45,940 --> 00:37:49,750
and I am one of those people actually

00:37:47,710 --> 00:37:52,630
test things a lot before I actually I've

00:37:49,750 --> 00:37:55,330
loved them except in really strange in

00:37:52,630 --> 00:37:57,100
rare cases so there have been a couple

00:37:55,330 --> 00:37:58,750
times when I've stumbled over something

00:37:57,100 --> 00:38:00,430
that surprised me that caused me to

00:37:58,750 --> 00:38:03,100
trigger a conversation with you or

00:38:00,430 --> 00:38:05,320
somebody else but in general I have this

00:38:03,100 --> 00:38:07,510
gut sense that this ecosystem is working

00:38:05,320 --> 00:38:09,820
amazingly well particularly now that I

00:38:07,510 --> 00:38:12,820
understand how distributed some of this

00:38:09,820 --> 00:38:15,070
is so that's why I raised my hand a

00:38:12,820 --> 00:38:16,570
little while ago when you asked you know

00:38:15,070 --> 00:38:19,690
are you worrying about this too much

00:38:16,570 --> 00:38:22,210
because you know my sense is this is

00:38:19,690 --> 00:38:24,100
working pretty well and you can

00:38:22,210 --> 00:38:25,810
certainly do things to make it better or

00:38:24,100 --> 00:38:28,630
make it less stressful for yourself in

00:38:25,810 --> 00:38:32,440
the future but it's not like I feel like

00:38:28,630 --> 00:38:36,010
there's some big net present danger that

00:38:32,440 --> 00:38:37,810
you know we have to be tackling I feel I

00:38:36,010 --> 00:38:40,750
mean I agree with you in a way it's just

00:38:37,810 --> 00:38:43,120
that I feel that maybe I'm not as active

00:38:40,750 --> 00:38:44,740
on debhelper as I have been at some

00:38:43,120 --> 00:38:46,030
points in the past or something like

00:38:44,740 --> 00:38:47,230
that and you know it might just be an

00:38:46,030 --> 00:38:50,470
ebb or whatever

00:38:47,230 --> 00:38:54,250
I had a big herb and then I did D H and

00:38:50,470 --> 00:39:01,570
so you know who knows but yeah thank you

00:38:54,250 --> 00:39:07,360
for that Gert what about a pointing out

00:39:01,570 --> 00:39:09,160
in new generation of ADH make write down

00:39:07,360 --> 00:39:12,940
some guidelines from okay this would be

00:39:09,160 --> 00:39:15,790
the next kind of Debian Helper

00:39:12,940 --> 00:39:18,340
I I wasn't there when they were switch

00:39:15,790 --> 00:39:21,310
from deselect to opt was there but there

00:39:18,340 --> 00:39:26,290
was a moment okay the old system doesn't

00:39:21,310 --> 00:39:28,450
work we need new generation would you be

00:39:26,290 --> 00:39:34,900
guiding that so could you point out a

00:39:28,450 --> 00:39:37,270
roadmap for that so I mean as far as

00:39:34,900 --> 00:39:39,070
I've been able to come up with D H was

00:39:37,270 --> 00:39:40,900
the new generation a Deb helper I just

00:39:39,070 --> 00:39:43,780
build on the old generation a Deb helper

00:39:40,900 --> 00:39:45,340
and I don't have some master idea that

00:39:43,780 --> 00:39:47,390
would make them helpers architecture

00:39:45,340 --> 00:39:50,900
better because if I did I would probably

00:39:47,390 --> 00:39:52,970
do it so you know I can't really help

00:39:50,900 --> 00:39:55,279
with that if somebody is trying to write

00:39:52,970 --> 00:39:57,710
the next step help her and wants to

00:39:55,279 --> 00:40:00,380
replace it and let's say it's maybe not

00:39:57,710 --> 00:40:03,680
CD yes or hey maybe it is CD BS I have

00:40:00,380 --> 00:40:05,119
some suggestions for you if it's EDPs I

00:40:03,680 --> 00:40:17,569
have a few more than I would have had

00:40:05,119 --> 00:40:18,799
for somebody else so yeah thank you are

00:40:17,569 --> 00:40:25,490
there any more questions before we're

00:40:18,799 --> 00:40:28,279
done questions comments whatever we're

00:40:25,490 --> 00:40:30,470
done then it looks like okay well thanks

00:40:28,279 --> 00:40:32,029
for a good discussion and thank you for

00:40:30,470 --> 00:40:33,769
helping me maybe make up my mind on this

00:40:32,029 --> 00:40:36,500
thing and I've been mulling over for a

00:40:33,769 --> 00:40:39,010
couple of years I think on and off n OS

00:40:36,500 --> 00:40:42,410
she should go ahead what's the plan

00:40:39,010 --> 00:40:44,539
sleep on it and find somebody who can

00:40:42,410 --> 00:40:50,329
make a mailing list I guess I guess

00:40:44,539 --> 00:40:51,530
that's actually easy admit ok so thanks

00:40:50,329 --> 00:41:00,819
again folks

00:40:51,530 --> 00:41:00,819

YouTube URL: https://www.youtube.com/watch?v=2wdNXk_SNy8


