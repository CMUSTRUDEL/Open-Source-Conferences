Title: Debian on Google Compute Engine
Publication date: 2017-11-29
Playlist: DebConf 13
Description: 
	by David McWherter
by Jimmy Kaplowitz

At: DebConf13
https://debconf13.debconf.org/
Room: Main talk room
Scheduled start: 2013-08-12 09:30:00
Captions: 
	00:00:00,030 --> 00:00:06,230
hello this is breaking hi I'm David I'm

00:00:05,250 --> 00:00:09,000
Jimmy

00:00:06,230 --> 00:00:11,759
David and Jimmy and we're here to

00:00:09,000 --> 00:00:13,530
enlighten you on things that Google is

00:00:11,759 --> 00:00:19,680
doing with Debian OS on Google compute

00:00:13,530 --> 00:00:22,650
engine basically why we're here oh I

00:00:19,680 --> 00:00:25,170
should not stand in front of the slides

00:00:22,650 --> 00:00:27,510
we're here because we started using

00:00:25,170 --> 00:00:28,939
Debian OS in our Google compute engine

00:00:27,510 --> 00:00:33,059
product which is a virtual machine

00:00:28,939 --> 00:00:34,469
product in the cloud we're here mostly

00:00:33,059 --> 00:00:36,030
because we want to build a good solid

00:00:34,469 --> 00:00:38,280
relationship with the Debian community

00:00:36,030 --> 00:00:40,710
so that we can make that product

00:00:38,280 --> 00:00:43,200
smoother and more reliable and even more

00:00:40,710 --> 00:00:44,489
awesome than it is now and in general we

00:00:43,200 --> 00:00:46,410
want to share with you three things what

00:00:44,489 --> 00:00:48,210
we've been doing before what we're doing

00:00:46,410 --> 00:00:50,360
to do now and what we'd like to be doing

00:00:48,210 --> 00:00:54,030
sometime in the future

00:00:50,360 --> 00:00:55,260
okay so just in case none of you paid

00:00:54,030 --> 00:00:58,260
much attention to what Google's been

00:00:55,260 --> 00:01:01,020
doing in the space I felt I'd let you

00:00:58,260 --> 00:01:03,780
know what we are we have a fairly large

00:01:01,020 --> 00:01:05,820
cloud platform by now we have Google

00:01:03,780 --> 00:01:07,260
compute engine which is a infrastructure

00:01:05,820 --> 00:01:09,270
as a service we give you virtual

00:01:07,260 --> 00:01:12,180
machines in the cloud we also have

00:01:09,270 --> 00:01:13,560
Google App Engine which is a platform as

00:01:12,180 --> 00:01:15,390
a service you give us some Java code

00:01:13,560 --> 00:01:18,420
written in a certain way we'll run it in

00:01:15,390 --> 00:01:21,570
the cloud we also expose various storage

00:01:18,420 --> 00:01:26,159
subsystems at various levels SQL

00:01:21,570 --> 00:01:28,350
persistent disks no sequel etc etc and

00:01:26,159 --> 00:01:31,290
we also have various app level services

00:01:28,350 --> 00:01:34,290
such as bigquery and and various queue

00:01:31,290 --> 00:01:36,720
services and stuff like this all these

00:01:34,290 --> 00:01:38,880
services are built on a common rest

00:01:36,720 --> 00:01:41,939
interface so that you can write

00:01:38,880 --> 00:01:46,290
programmatically an interface with the

00:01:41,939 --> 00:01:48,149
cloud and a fairly consistent way so

00:01:46,290 --> 00:01:51,270
what could engineer is its

00:01:48,149 --> 00:01:53,520
infrastructure as a service you sign on

00:01:51,270 --> 00:01:54,780
you sign up for our service and you tell

00:01:53,520 --> 00:01:55,740
us how many virtual machines you want

00:01:54,780 --> 00:01:57,869
what they look like how they're

00:01:55,740 --> 00:01:59,329
networked together etc etc and we give

00:01:57,869 --> 00:02:01,259
them to you and you give us some money

00:01:59,329 --> 00:02:01,740
we've been around for about two years

00:02:01,259 --> 00:02:05,520
now

00:02:01,740 --> 00:02:08,500
we launched the Google i/o 2012 and this

00:02:05,520 --> 00:02:10,810
Google this past Google i/o in 2000

00:02:08,500 --> 00:02:12,340
- back in May we made the product

00:02:10,810 --> 00:02:15,250
available to anybody who wants who has a

00:02:12,340 --> 00:02:17,290
credit card the key idea here is that

00:02:15,250 --> 00:02:19,240
part of the thing that makes Google what

00:02:17,290 --> 00:02:22,120
it is let's Google make the products

00:02:19,240 --> 00:02:23,710
that it makes that kind of kick butt is

00:02:22,120 --> 00:02:25,990
the fact that our data centers are so

00:02:23,710 --> 00:02:30,250
impressively built and so well networked

00:02:25,990 --> 00:02:32,530
and so forth and so on and we and the

00:02:30,250 --> 00:02:34,600
idea is that if other people are able to

00:02:32,530 --> 00:02:37,210
use that service then they could also

00:02:34,600 --> 00:02:39,940
build some kickbox services and make the

00:02:37,210 --> 00:02:41,620
world a better place so Google compute

00:02:39,940 --> 00:02:44,200
engine like I said is virtual machines

00:02:41,620 --> 00:02:46,480
in the cloud you have various ways of

00:02:44,200 --> 00:02:48,220
accessing the service you can come in

00:02:46,480 --> 00:02:50,110
with a command line tool that we give

00:02:48,220 --> 00:02:52,000
you or build your own either

00:02:50,110 --> 00:02:56,830
programmatic API is that you can use

00:02:52,000 --> 00:02:58,510
that all follow the rest protocol and we

00:02:56,830 --> 00:03:00,250
also have a little UI that you can use

00:02:58,510 --> 00:03:03,040
to launch the ends and could manage them

00:03:00,250 --> 00:03:04,360
and so forth now inside the data model

00:03:03,040 --> 00:03:06,310
basically looks sort of like you have

00:03:04,360 --> 00:03:07,950
some virtual machines and you have you

00:03:06,310 --> 00:03:10,030
can construct your own private and

00:03:07,950 --> 00:03:12,400
private networks and connect them to the

00:03:10,030 --> 00:03:14,560
external internet each virtual machine

00:03:12,400 --> 00:03:17,489
has a disk of some sort it can either be

00:03:14,560 --> 00:03:19,630
a persistent distant continues or that

00:03:17,489 --> 00:03:21,010
exists when your VM daren't running it

00:03:19,630 --> 00:03:23,800
could be a scratch disk if you want some

00:03:21,010 --> 00:03:27,430
cheaper data storage or you can stick it

00:03:23,800 --> 00:03:28,690
in cloud storage your data these disks

00:03:27,430 --> 00:03:32,860
are built from what we call image

00:03:28,690 --> 00:03:35,410
templates and these image templates are

00:03:32,860 --> 00:03:37,930
the key mechanism by which operating

00:03:35,410 --> 00:03:39,940
system vendors we intend to upload their

00:03:37,930 --> 00:03:45,850
operating systems to our cloud and I'll

00:03:39,940 --> 00:03:48,580
tell you more about that later so Wow so

00:03:45,850 --> 00:03:52,540
I wanted to get you a little demo what's

00:03:48,580 --> 00:03:54,640
going on in how to use it there we go I

00:03:52,540 --> 00:03:58,150
don't know how to use Jimmy's complete

00:03:54,640 --> 00:04:02,500
newfangled Linux computer let's see so I

00:03:58,150 --> 00:04:05,680
this is our cloud console for Google

00:04:02,500 --> 00:04:08,680
compute is there there we go

00:04:05,680 --> 00:04:10,150
so when you sign in you get this little

00:04:08,680 --> 00:04:11,980
dashboard that tells you what's going on

00:04:10,150 --> 00:04:13,540
you can see some student utilization

00:04:11,980 --> 00:04:18,430
network traffic this traffic of your

00:04:13,540 --> 00:04:19,989
entire fleet of instances you can launch

00:04:18,430 --> 00:04:21,200
a new instances by coming over here and

00:04:19,989 --> 00:04:25,730
clicking on

00:04:21,200 --> 00:04:30,800
do instants and entering some data hello

00:04:25,730 --> 00:04:34,100
Debian let's see let's scroll down which

00:04:30,800 --> 00:04:36,830
I don't know how to do and we'll choose

00:04:34,100 --> 00:04:40,670
a zone I'll put this one in Europe we'll

00:04:36,830 --> 00:04:44,630
give this one a Debian 7 image which is

00:04:40,670 --> 00:04:48,800
I guess the defaults let's see and just

00:04:44,630 --> 00:04:52,630
let's make a big one let's make a big a

00:04:48,800 --> 00:04:55,670
teepee one with 52 gigs Aram and create

00:04:52,630 --> 00:04:59,230
and it chucks in Chuck's and chugs and

00:04:55,670 --> 00:04:59,230
eventually gives you a virtual machine

00:05:01,960 --> 00:05:11,570
for this to complete how do I switch out

00:05:08,630 --> 00:05:13,070
there is how I switch so like I said you

00:05:11,570 --> 00:05:21,050
can also come over to a command-line

00:05:13,070 --> 00:05:22,580
tool called gcutil in stances and you

00:05:21,050 --> 00:05:24,970
can list the instances that are running

00:05:22,580 --> 00:05:29,780
inside of your system and if we run this

00:05:24,970 --> 00:05:33,280
late enough we will see the output of

00:05:29,780 --> 00:05:33,280
the instance that we've just created

00:05:33,820 --> 00:05:37,580
there we go hello Debian sitting there

00:05:36,380 --> 00:05:39,020
in the Europe zone

00:05:37,580 --> 00:05:41,180
we've got zones scattered across the

00:05:39,020 --> 00:05:45,170
globe you can choose the one you want

00:05:41,180 --> 00:05:45,560
and how do I get out it doesn't actually

00:05:45,170 --> 00:05:49,300
matter

00:05:45,560 --> 00:05:53,840
Oh tab yeah there we go

00:05:49,300 --> 00:06:00,400
okay ah should we SSH in yeah let's

00:05:53,840 --> 00:06:00,400
assess each in so we can SSH in

00:06:02,450 --> 00:06:14,930
I should have picked a smaller name what

00:06:13,490 --> 00:06:18,380
about the pastor he is sometimes okay so

00:06:14,930 --> 00:06:24,410
we use our SSH keys to allow you to talk

00:06:18,380 --> 00:06:26,870
to talk to your VM SSH into your VMs we

00:06:24,410 --> 00:06:29,000
have a small management infrastructure

00:06:26,870 --> 00:06:31,250
that injects some user accounts into

00:06:29,000 --> 00:06:34,640
your virtual machines and provisions the

00:06:31,250 --> 00:06:38,380
SSH keys that you need to connect you

00:06:34,640 --> 00:06:52,850
have to control C and start that again

00:06:38,380 --> 00:06:55,310
and we should be in maybe oh no wrong so

00:06:52,850 --> 00:06:57,770
you only have to you know generate a key

00:06:55,310 --> 00:07:00,260
you ones her her machine you're

00:06:57,770 --> 00:07:05,450
connecting from it it's a private key

00:07:00,260 --> 00:07:09,080
and it it generates a local key pair on

00:07:05,450 --> 00:07:11,420
your workstation and it some cloud stuff

00:07:09,080 --> 00:07:13,570
in a cron job in the infant's to install

00:07:11,420 --> 00:07:13,570
it

00:07:18,110 --> 00:07:22,980
music this ok so again you see that

00:07:21,660 --> 00:07:25,350
you've got a nice little debian

00:07:22,980 --> 00:07:28,190
operating system here you can run things

00:07:25,350 --> 00:07:35,190
you can suit you an app get I don't know

00:07:28,190 --> 00:07:38,280
less let's have to get some less no I

00:07:35,190 --> 00:07:42,660
want to do a kit move right aptitude

00:07:38,280 --> 00:07:45,570
move aptitude that's totally proof then

00:07:42,660 --> 00:07:46,170
it's running Debian is that right there

00:07:45,570 --> 00:07:48,210
we go

00:07:46,170 --> 00:07:49,530
and then if you're really questioning

00:07:48,210 --> 00:07:52,050
there you go

00:07:49,530 --> 00:08:01,230
no nope nobody in their right mind would

00:07:52,050 --> 00:08:11,370
ever fake this interface ok there we go

00:08:01,230 --> 00:08:13,830
ok so ok so again why are we here we

00:08:11,370 --> 00:08:17,640
want to basically get work with you guys

00:08:13,830 --> 00:08:19,890
to make this make the goop Debian OS per

00:08:17,640 --> 00:08:21,570
click the Debian OS on the compute

00:08:19,890 --> 00:08:23,820
engine product really singing and really

00:08:21,570 --> 00:08:25,260
integrate nicely for customers and we

00:08:23,820 --> 00:08:26,940
also want to make sure that all of the

00:08:25,260 --> 00:08:31,140
software that we produce for our cloud

00:08:26,940 --> 00:08:32,730
and throughout our whole cloud basically

00:08:31,140 --> 00:08:35,580
make it nicely available with Debian

00:08:32,730 --> 00:08:37,170
packages etc etc so that it's easy to

00:08:35,580 --> 00:08:38,640
use for anybody you want running Debian

00:08:37,170 --> 00:08:41,660
inside our cloud or outside our cloud

00:08:38,640 --> 00:08:45,360
plus I want some slack

00:08:41,660 --> 00:08:48,900
ok so the outline of this talk is

00:08:45,360 --> 00:08:51,110
anything so the outline of this talk we

00:08:48,900 --> 00:08:53,370
have just a few things to talk about

00:08:51,110 --> 00:08:55,170
first we want to talk to you about how

00:08:53,370 --> 00:08:57,120
we're actually going building our Debian

00:08:55,170 --> 00:08:59,190
learning system images and pushing them

00:08:57,120 --> 00:09:00,450
into google cute engine and then we're

00:08:59,190 --> 00:09:03,150
gonna move on and start talking about

00:09:00,450 --> 00:09:04,440
the package repository mirrors marrying

00:09:03,150 --> 00:09:06,720
system that we have in place that

00:09:04,440 --> 00:09:10,020
mirrors Debian packages into our clouds

00:09:06,720 --> 00:09:12,390
for various reasons and we're going to

00:09:10,020 --> 00:09:15,120
give you some previews for the tutorial

00:09:12,390 --> 00:09:17,370
that was coming that Mandy over here is

00:09:15,120 --> 00:09:18,990
going to be giving later today just a

00:09:17,370 --> 00:09:21,780
short while from now about an hour hour

00:09:18,990 --> 00:09:23,760
and a half and we're going to be giving

00:09:21,780 --> 00:09:25,560
you previews for the POS that that Jimmy

00:09:23,760 --> 00:09:29,000
and I are going to be giving today and

00:09:25,560 --> 00:09:31,279
tomorrow - ok

00:09:29,000 --> 00:09:34,759
so at that I'm gonna give Jimmy oh and

00:09:31,279 --> 00:09:39,290
Mike over the gym hi

00:09:34,759 --> 00:09:40,670
so we are using the tool to build the

00:09:39,290 --> 00:09:42,889
deputy images which actually came from

00:09:40,670 --> 00:09:45,199
the Debian community we did not create

00:09:42,889 --> 00:09:48,620
this tool the tool at one point

00:09:45,199 --> 00:09:50,990
supported only Amazon ec2 and we

00:09:48,620 --> 00:09:53,720
contributed support under the same

00:09:50,990 --> 00:09:57,680
license you know had sent back to the

00:09:53,720 --> 00:09:59,660
community to add support for Google

00:09:57,680 --> 00:10:03,439
compute engine and accordingly the name

00:09:59,660 --> 00:10:04,850
was broadened to build Debian cloud we

00:10:03,439 --> 00:10:07,220
worked with Enders Ingham in he was very

00:10:04,850 --> 00:10:09,290
helpful and we tested with both the

00:10:07,220 --> 00:10:12,670
Debian cloud mailing list and one-on-one

00:10:09,290 --> 00:10:16,790
interactions and images based on this

00:10:12,670 --> 00:10:19,819
tool shift in May very soon after people

00:10:16,790 --> 00:10:23,089
for Google i/o there was a blog post and

00:10:19,819 --> 00:10:26,629
I mentioned in the Google compute engine

00:10:23,089 --> 00:10:30,980
sessions and i/o we have images for both

00:10:26,629 --> 00:10:34,639
weave and Weezie and intend to proceed

00:10:30,980 --> 00:10:36,500
to Jesse when the time comes so as you

00:10:34,639 --> 00:10:39,620
can see the tool has some demands for

00:10:36,500 --> 00:10:40,759
both clouds that it supports and and

00:10:39,620 --> 00:10:42,290
there's as good about merging our

00:10:40,759 --> 00:10:45,559
patches we are submitting them pretty

00:10:42,290 --> 00:10:49,399
often as well he is working on a Python

00:10:45,559 --> 00:10:52,309
rewrite support for our cloud but that

00:10:49,399 --> 00:10:54,529
will happen bill Duggan cloud is apache

00:10:52,309 --> 00:10:57,589
license our contributions preserve that

00:10:54,529 --> 00:11:03,379
it's all free software so how does it

00:10:57,589 --> 00:11:06,170
work so the parts in green are specific

00:11:03,379 --> 00:11:10,660
to compute engine within the context of

00:11:06,170 --> 00:11:13,399
this tool 82 has ways of doing it the

00:11:10,660 --> 00:11:16,370
black row about the bootstrap is shared

00:11:13,399 --> 00:11:20,779
so it's like a lot of other disk image

00:11:16,370 --> 00:11:25,459
builds for OpenStack or VMware or what

00:11:20,779 --> 00:11:27,980
have you or you know KBM we have a look

00:11:25,459 --> 00:11:30,350
with this file where we Luke we put a

00:11:27,980 --> 00:11:33,139
partition table we put a file system we

00:11:30,350 --> 00:11:35,959
loop that mount did bootstrap install

00:11:33,139 --> 00:11:39,310
stuff it's a very simple tarball in the

00:11:35,959 --> 00:11:42,220
end with a disk Avila file in it

00:11:39,310 --> 00:11:46,450
that represents the images we use sparse

00:11:42,220 --> 00:11:47,740
compression and farce wee-wee-wee-wee

00:11:46,450 --> 00:11:50,980
year space efficient using sparks

00:11:47,740 --> 00:11:53,050
technologies of that and we uploaded the

00:11:50,980 --> 00:11:56,529
Google Cloud storage which didn't say

00:11:53,050 --> 00:11:59,230
what that is it's a object value store

00:11:56,529 --> 00:12:04,420
like a lot of the other one like at

00:11:59,230 --> 00:12:07,150
three and so forth it's uh we can into

00:12:04,420 --> 00:12:09,130
once the image is uploaded there we can

00:12:07,150 --> 00:12:11,920
just use these util to edit and a

00:12:09,130 --> 00:12:19,450
command similar to that is used we would

00:12:11,920 --> 00:12:23,890
probably add it to a testing project we

00:12:19,450 --> 00:12:25,390
can give a description as well so what

00:12:23,890 --> 00:12:28,270
we've been doing and what we want to

00:12:25,390 --> 00:12:51,910
keep doing with deputies involvement

00:12:28,270 --> 00:12:56,130
ideally is we want to every time our

00:12:51,910 --> 00:12:56,130
boss but there's no way

00:13:06,020 --> 00:13:10,580
and then we publish it in the Debian

00:13:07,580 --> 00:13:11,960
cloud set up so that every customer of

00:13:10,580 --> 00:13:15,500
Google compute engine can see those

00:13:11,960 --> 00:13:22,850
images and our tools and web interfaces

00:13:15,500 --> 00:13:24,800
have another one and and that's the

00:13:22,850 --> 00:13:29,270
entire project that's the entire process

00:13:24,800 --> 00:13:31,640
for us for publishing so the releases

00:13:29,270 --> 00:13:34,610
right now are built by me wearing both

00:13:31,640 --> 00:13:37,520
my Googler and Debian developer hats it

00:13:34,610 --> 00:13:39,290
would be great if non Google or Debian

00:13:37,520 --> 00:13:41,630
developers were to get involved

00:13:39,290 --> 00:13:43,970
we designed the process so that any

00:13:41,630 --> 00:13:45,560
Debian developer or really anybody we

00:13:43,970 --> 00:13:47,000
got the entrust can do this they just

00:13:45,560 --> 00:13:49,880
have to have a Google account of some

00:13:47,000 --> 00:13:53,120
sort and they can they can be granted

00:13:49,880 --> 00:13:55,070
permission to publish at this project so

00:13:53,120 --> 00:13:57,470
we want to coordinate with Debian on

00:13:55,070 --> 00:13:59,840
this and validate things to make sure

00:13:57,470 --> 00:14:03,650
that it meets everyone's quality

00:13:59,840 --> 00:14:05,000
certainly Debian's and googles but it

00:14:03,650 --> 00:14:09,410
should be a collaboration and that will

00:14:05,000 --> 00:14:10,700
be great so the name on the slide is

00:14:09,410 --> 00:14:14,930
slightly wrong it's that bean clouds

00:14:10,700 --> 00:14:17,150
experiments plural which is a free

00:14:14,930 --> 00:14:19,130
project which is with a small shared

00:14:17,150 --> 00:14:22,730
quota we're covering the cost of this of

00:14:19,130 --> 00:14:24,590
both of these that project is let's say

00:14:22,730 --> 00:14:26,840
you want to validate an image or try out

00:14:24,590 --> 00:14:29,720
building the image or some Debian

00:14:26,840 --> 00:14:34,190
related short-term or small-scale test

00:14:29,720 --> 00:14:36,740
that would be or development yeah we

00:14:34,190 --> 00:14:38,960
actually gave some access to this to

00:14:36,740 --> 00:14:43,190
neuro Debian just to give a a broader

00:14:38,960 --> 00:14:44,540
scope Debian related example and for the

00:14:43,190 --> 00:14:47,959
official image releases of the Debian

00:14:44,540 --> 00:14:50,089
cloud project and you can email up

00:14:47,959 --> 00:14:56,240
cash and j-cap LeWitt's at google.com

00:14:50,089 --> 00:14:59,839
for access okay so for package

00:14:56,240 --> 00:15:04,490
repository mirrors it's always possible

00:14:59,839 --> 00:15:06,920
to send our customers to the global

00:15:04,490 --> 00:15:10,130
Debbie mirror Network at the same time

00:15:06,920 --> 00:15:13,190
if they you keep their bandwidth within

00:15:10,130 --> 00:15:15,110
our network they can save both bandwidth

00:15:13,190 --> 00:15:19,579
for them and for Google and money as

00:15:15,110 --> 00:15:21,500
well for them so we do have a local

00:15:19,579 --> 00:15:23,570
mirror that we're running inside the

00:15:21,500 --> 00:15:29,860
cloud and our images default to that

00:15:23,570 --> 00:15:33,829
plus the global mirror redirector sure

00:15:29,860 --> 00:15:37,480
yeah so we want the images to be fast

00:15:33,829 --> 00:15:40,850
and do not overload the public servers

00:15:37,480 --> 00:15:42,290
save money so our mirror is think do you

00:15:40,850 --> 00:15:47,329
think FTP things like good practices

00:15:42,290 --> 00:15:49,220
suggest we we actually serve it via

00:15:47,329 --> 00:15:55,100
Google Cloud storage which can be

00:15:49,220 --> 00:15:57,949
accessed directly over HTTP this has

00:15:55,100 --> 00:16:01,570
some Geo balancing properties it has

00:15:57,949 --> 00:16:05,149
some reliability scalability its

00:16:01,570 --> 00:16:09,680
replicated etc it's a good

00:16:05,149 --> 00:16:12,290
infrastructure and if there's we sort of

00:16:09,680 --> 00:16:18,440
this system to combine FTP Singh and

00:16:12,290 --> 00:16:21,740
Google if we have that HTTP Debbie done

00:16:18,440 --> 00:16:23,000
that in there so that there's apt has

00:16:21,740 --> 00:16:24,620
very good built-in redundancy we've

00:16:23,000 --> 00:16:28,579
tested this it actually does fall over

00:16:24,620 --> 00:16:32,870
nicely so so people will be sure to get

00:16:28,579 --> 00:16:34,940
current packages so some things we would

00:16:32,870 --> 00:16:36,529
like to evolve this toward it would be

00:16:34,940 --> 00:16:38,209
great to talk to the FTP team and the

00:16:36,529 --> 00:16:40,910
mirror admin team about being the zr1

00:16:38,209 --> 00:16:43,699
push mirror simply because there's a lot

00:16:40,910 --> 00:16:45,560
of users in the Google cloud and Debian

00:16:43,699 --> 00:16:47,269
is a very common choice now for their

00:16:45,560 --> 00:16:49,850
operating system and it would be great

00:16:47,269 --> 00:16:51,110
to get updates we may also want to see

00:16:49,850 --> 00:16:53,899
about getting our mirror

00:16:51,110 --> 00:16:57,140
to Rafael's great redirect their service

00:16:53,899 --> 00:17:01,760
they should be Debian net for customers

00:16:57,140 --> 00:17:04,220
visiting from compute engine and I know

00:17:01,760 --> 00:17:05,990
Amazon is also using cloud funds to

00:17:04,220 --> 00:17:07,579
serve a mirror in their cloud we're

00:17:05,990 --> 00:17:10,640
trying Google Cloud Storage it's a

00:17:07,579 --> 00:17:12,829
similar concept it would be great to

00:17:10,640 --> 00:17:15,020
have an interoperable way not specific

00:17:12,829 --> 00:17:16,640
to one cloud to do a direct push to

00:17:15,020 --> 00:17:18,530
CBN's this would be more of a

00:17:16,640 --> 00:17:20,420
development you know speculative thing

00:17:18,530 --> 00:17:24,079
but there are several different clouds

00:17:20,420 --> 00:17:27,350
we're pushing to an object value store

00:17:24,079 --> 00:17:29,929
in some way might skip an intermediate

00:17:27,350 --> 00:17:37,070
step and add stream streamline that

00:17:29,929 --> 00:17:40,820
process so at this point we have a brief

00:17:37,070 --> 00:17:43,160
preview of the two boss so I should

00:17:40,820 --> 00:17:46,070
mention again it's not a buff per se but

00:17:43,160 --> 00:17:49,100
at 11:30 there's one talk in between

00:17:46,070 --> 00:17:51,169
this one and mandy's talk mandis talk is

00:17:49,100 --> 00:17:53,240
a tutorial interactive tutorial you can

00:17:51,169 --> 00:17:55,299
participate with or without a Google

00:17:53,240 --> 00:17:58,940
account you could just use your laptop

00:17:55,299 --> 00:18:03,100
or watch her as she does it at 11:30

00:17:58,940 --> 00:18:07,090
right here she'll give you a quick

00:18:03,100 --> 00:18:11,270
whirlwind spin through it at all and at

00:18:07,090 --> 00:18:13,700
1530 3:30 p.m. in this room today I'll

00:18:11,270 --> 00:18:18,470
be doing the more Debian focused buff

00:18:13,700 --> 00:18:20,390
but with examples from Google about the

00:18:18,470 --> 00:18:23,120
question of what Debian should consider

00:18:20,390 --> 00:18:25,820
an official Debian image in the cloud

00:18:23,120 --> 00:18:29,120
it's a bit different than the CD context

00:18:25,820 --> 00:18:30,710
we have historically done but with some

00:18:29,120 --> 00:18:35,150
attention to the needs of public clouds

00:18:30,710 --> 00:18:37,929
and figuring out how to satisfy the

00:18:35,150 --> 00:18:41,780
needs of Debian cloud vendors and Debian

00:18:37,929 --> 00:18:46,490
for its customers in the cloud and how

00:18:41,780 --> 00:18:48,830
to move that forward tomorrow at 9:30 as

00:18:46,490 --> 00:18:52,309
well in the morning in the second talk

00:18:48,830 --> 00:18:55,790
room not here David will be leading a

00:18:52,309 --> 00:18:57,500
buck which is also general to Debian but

00:18:55,790 --> 00:19:00,260
he's again bringing examples from our

00:18:57,500 --> 00:19:02,080
experience about packaging cloud

00:19:00,260 --> 00:19:04,690
specific software it often has

00:19:02,080 --> 00:19:06,250
we see dependencies or fast changing

00:19:04,690 --> 00:19:09,670
environments and features there's

00:19:06,250 --> 00:19:11,770
there's a bunch of there's a bunch of

00:19:09,670 --> 00:19:14,410
unique quirks to the cloud context and

00:19:11,770 --> 00:19:15,850
the vendor relationship context that are

00:19:14,410 --> 00:19:17,230
certainly not the citiots at Google

00:19:15,850 --> 00:19:20,110
compute engine and we hope that both of

00:19:17,230 --> 00:19:22,630
these bots other cloud providers will

00:19:20,110 --> 00:19:26,710
participate but they should be good ways

00:19:22,630 --> 00:19:29,760
to move the issues forward so a quick

00:19:26,710 --> 00:19:33,010
preview of my boss this afternoon is

00:19:29,760 --> 00:19:35,020
basically what I said there's a question

00:19:33,010 --> 00:19:39,340
of what officially means in the context

00:19:35,020 --> 00:19:43,630
of a VM you know sometimes you need to

00:19:39,340 --> 00:19:45,220
tweak the configuration to to to work

00:19:43,630 --> 00:19:46,600
smoothly sometimes you have a bug or

00:19:45,220 --> 00:19:48,130
vulnerability even specific the

00:19:46,600 --> 00:19:50,830
environment we've seen performance

00:19:48,130 --> 00:19:53,800
issues and other other weird situations

00:19:50,830 --> 00:19:55,810
that being of course had this its values

00:19:53,800 --> 00:19:58,290
about licensing and it needs to control

00:19:55,810 --> 00:20:00,250
over security and packaging to be

00:19:58,290 --> 00:20:04,750
reasonable to call Debbie and it needs

00:20:00,250 --> 00:20:07,690
to be supportable but integration is a

00:20:04,750 --> 00:20:09,430
tough question as well cloud mix is one

00:20:07,690 --> 00:20:11,200
thing that might streamline the process

00:20:09,430 --> 00:20:13,840
but there's a lot of other questions

00:20:11,200 --> 00:20:15,510
that are outside the scope of cabinet so

00:20:13,840 --> 00:20:16,900
we can discuss this more this afternoon

00:20:15,510 --> 00:20:19,930
right here

00:20:16,900 --> 00:20:26,050
so here's David to finish the slides a

00:20:19,930 --> 00:20:27,340
bit and talk about his thanks so I want

00:20:26,050 --> 00:20:29,920
to talk again I want to go back in

00:20:27,340 --> 00:20:31,300
history a little bit I want to go back

00:20:29,920 --> 00:20:33,520
in history a little bit like I said

00:20:31,300 --> 00:20:35,770
earlier Google computes been around a

00:20:33,520 --> 00:20:37,270
couple years now when we first got into

00:20:35,770 --> 00:20:39,610
the business of building images for the

00:20:37,270 --> 00:20:44,200
cloud we didn't know what to do and so

00:20:39,610 --> 00:20:46,420
in general what we did was we created a

00:20:44,200 --> 00:20:48,790
local disk file we mounted it locally

00:20:46,420 --> 00:20:50,350
and just started D bootstrapping and

00:20:48,790 --> 00:20:52,090
changing crazy files inside just

00:20:50,350 --> 00:20:54,370
whenever we needed a package we copied

00:20:52,090 --> 00:20:58,060
it in whenever we need some sort of tool

00:20:54,370 --> 00:21:01,570
we suit which modded it or we took route

00:20:58,060 --> 00:21:03,130
it into it and and installed the some

00:21:01,570 --> 00:21:04,840
random piece of software outside of the

00:21:03,130 --> 00:21:07,350
Debian packaging system or the rpm

00:21:04,840 --> 00:21:09,310
packaging system which we were in

00:21:07,350 --> 00:21:11,410
whatever context we were installing

00:21:09,310 --> 00:21:13,420
software and in general we found that

00:21:11,410 --> 00:21:15,220
that was a generally a bad problem or a

00:21:13,420 --> 00:21:15,700
bad way of doing things right because

00:21:15,220 --> 00:21:17,049
there's

00:21:15,700 --> 00:21:19,149
downsides which you probably all know

00:21:17,049 --> 00:21:21,429
which is that you can't upgrade and

00:21:19,149 --> 00:21:23,830
remove packages very easily

00:21:21,429 --> 00:21:26,950
you can't fix bugs with an app get

00:21:23,830 --> 00:21:29,380
update or an app get upgrade right so in

00:21:26,950 --> 00:21:30,940
general we've been finding that and I

00:21:29,380 --> 00:21:32,289
think in general that the Debian

00:21:30,940 --> 00:21:35,139
operating system community would rather

00:21:32,289 --> 00:21:38,860
not have us just putting random files

00:21:35,139 --> 00:21:40,149
inside the operating system right so in

00:21:38,860 --> 00:21:42,039
general what we're trying to do now is

00:21:40,149 --> 00:21:43,450
is take all the software that we're

00:21:42,039 --> 00:21:46,269
trying to stick into the images and

00:21:43,450 --> 00:21:47,919
convert them to Debian packages and make

00:21:46,269 --> 00:21:52,210
sure that they're all just a simple app

00:21:47,919 --> 00:21:53,529
get install of a Google package and and

00:21:52,210 --> 00:21:55,419
one of the things that we'd like to have

00:21:53,529 --> 00:21:56,769
in particular is we'd like to figure out

00:21:55,419 --> 00:21:58,299
a way of getting these packages where

00:21:56,769 --> 00:22:00,880
have appropriate into the official

00:21:58,299 --> 00:22:02,289
Debian really stream and into backwards

00:22:00,880 --> 00:22:04,539
whenever that's appropriate or if

00:22:02,289 --> 00:22:06,100
there's some other mechanism we need we

00:22:04,539 --> 00:22:10,330
should figure out what that looks like

00:22:06,100 --> 00:22:11,620
I want to give you a general overview of

00:22:10,330 --> 00:22:16,360
the kind of software that we stick

00:22:11,620 --> 00:22:19,179
inside the images we put only in general

00:22:16,360 --> 00:22:21,639
we only put on completely on a presenter

00:22:19,179 --> 00:22:24,010
free software apache license stuff you

00:22:21,639 --> 00:22:25,990
know that's google's way the key

00:22:24,010 --> 00:22:28,480
components here are some startup scripts

00:22:25,990 --> 00:22:30,960
to get the system boot strapped in the

00:22:28,480 --> 00:22:33,220
in the virtualization environment it

00:22:30,960 --> 00:22:35,710
figures out what the instance name is

00:22:33,220 --> 00:22:37,210
the host name things like this we've got

00:22:35,710 --> 00:22:39,279
a management daemon that manages

00:22:37,210 --> 00:22:41,139
accounts and networking

00:22:39,279 --> 00:22:43,000
so whenever the network changes on the

00:22:41,139 --> 00:22:44,830
on the Opera on the VM the operating

00:22:43,000 --> 00:22:46,419
system that can then be notified and

00:22:44,830 --> 00:22:48,190
said oh by the way you've got like load

00:22:46,419 --> 00:22:49,419
balancing features now or it got this

00:22:48,190 --> 00:22:52,240
where you've got that through your IP

00:22:49,419 --> 00:22:53,980
address has changed it cetera we install

00:22:52,240 --> 00:22:56,769
some simple tools to talk to the Google

00:22:53,980 --> 00:22:58,899
cloud systems we've got a compute tool

00:22:56,769 --> 00:23:03,669
and a storage tool and there will be

00:22:58,899 --> 00:23:04,899
more coming down the line as we finish

00:23:03,669 --> 00:23:06,789
the integration with the rest of the

00:23:04,899 --> 00:23:08,289
Google Cloud properties we've got some

00:23:06,789 --> 00:23:10,330
of the image snapshotting tools so

00:23:08,289 --> 00:23:12,340
basically let you take the current

00:23:10,330 --> 00:23:15,159
contents of your disk and create another

00:23:12,340 --> 00:23:17,260
template and at this image template from

00:23:15,159 --> 00:23:19,539
it so you can create multiple VMs from

00:23:17,260 --> 00:23:20,980
the current from so basically we can

00:23:19,539 --> 00:23:23,980
take the kerb yeah and then clone it

00:23:20,980 --> 00:23:25,899
more or less we also sometimes try to

00:23:23,980 --> 00:23:27,460
install some security lock downs so for

00:23:25,899 --> 00:23:29,510
instance sometimes we want to go in and

00:23:27,460 --> 00:23:32,060
modify SSH config our

00:23:29,510 --> 00:23:34,490
security teams are very eager to have a

00:23:32,060 --> 00:23:37,550
say turn off login and things like this

00:23:34,490 --> 00:23:39,620
and so far as I know there's no great

00:23:37,550 --> 00:23:41,990
way of just installing the Google

00:23:39,620 --> 00:23:45,020
security lockdown package and having it

00:23:41,990 --> 00:23:47,330
go in and modify all the files of SSH

00:23:45,020 --> 00:23:51,020
and this and that and the other packages

00:23:47,330 --> 00:23:52,520
that are installed in the system so some

00:23:51,020 --> 00:23:54,560
of these things are easier to do than

00:23:52,520 --> 00:23:56,870
some of the others it's easy to say I

00:23:54,560 --> 00:23:59,570
think just make them all Debian packages

00:23:56,870 --> 00:24:01,310
and move on with life I don't know how

00:23:59,570 --> 00:24:08,390
many of you have had trouble building a

00:24:01,310 --> 00:24:11,150
Debian package before oh thank god like

00:24:08,390 --> 00:24:12,320
company okay we're still in minority we

00:24:11,150 --> 00:24:14,600
should get together the three of us

00:24:12,320 --> 00:24:20,030
later and commiserate I'll buy you all a

00:24:14,600 --> 00:24:22,610
beer anyway so I'm moving on so I want

00:24:20,030 --> 00:24:24,650
to give you a couple of examples of the

00:24:22,610 --> 00:24:27,080
things that we've been doing some of the

00:24:24,650 --> 00:24:30,470
packages we built and some of the things

00:24:27,080 --> 00:24:32,390
that made them hard GC util is what we

00:24:30,470 --> 00:24:33,860
call our is the what we call our

00:24:32,390 --> 00:24:36,980
command-line tool for the Google compute

00:24:33,860 --> 00:24:39,350
product it's a pure Python program it's

00:24:36,980 --> 00:24:41,000
got several dependencies and again it's

00:24:39,350 --> 00:24:42,560
a hundred percent open source Apache

00:24:41,000 --> 00:24:46,160
License you would think it'd be simple

00:24:42,560 --> 00:24:48,620
to just install as a debian package we

00:24:46,160 --> 00:24:49,490
used to be using it's a button but part

00:24:48,620 --> 00:24:51,830
of the problem here is that it's a

00:24:49,490 --> 00:24:53,950
Python package we used to be using setup

00:24:51,830 --> 00:24:56,120
tools and pie-pie to do all of our

00:24:53,950 --> 00:24:58,060
dependency management but we found that

00:24:56,120 --> 00:25:00,950
in general the Python module system was

00:24:58,060 --> 00:25:02,750
picking up system modules and stuff like

00:25:00,950 --> 00:25:04,910
this sometimes and sometimes our modules

00:25:02,750 --> 00:25:07,160
and it was just causing us trouble

00:25:04,910 --> 00:25:09,590
validating and maintaining quality

00:25:07,160 --> 00:25:10,910
control really over the product people

00:25:09,590 --> 00:25:12,440
will come in with bug reports like this

00:25:10,910 --> 00:25:14,090
isn't working and it turns out because

00:25:12,440 --> 00:25:16,490
they've installed some crazy version of

00:25:14,090 --> 00:25:20,210
some crazy dependency we had and it's

00:25:16,490 --> 00:25:23,420
like Oh anyway so eventually we decided

00:25:20,210 --> 00:25:24,080
to ditch the pi pi system we copied all

00:25:23,420 --> 00:25:25,970
a copy

00:25:24,080 --> 00:25:27,320
we basically picked a particular version

00:25:25,970 --> 00:25:29,060
of each of our dependencies and we

00:25:27,320 --> 00:25:32,030
basically copy them into our package

00:25:29,060 --> 00:25:33,770
statically and we force the Python

00:25:32,030 --> 00:25:35,360
interpreter to load all the modules from

00:25:33,770 --> 00:25:38,920
that directory rather than from the

00:25:35,360 --> 00:25:41,080
system and that makes the the

00:25:38,920 --> 00:25:43,180
the control the quality of this is of

00:25:41,080 --> 00:25:45,190
the products a lot easier to validate

00:25:43,180 --> 00:25:48,400
right because we test exactly what the

00:25:45,190 --> 00:25:50,320
customer is running and we just inserted

00:25:48,400 --> 00:25:52,990
a makefile into our into our source code

00:25:50,320 --> 00:25:55,990
or tar file and we run gh make and build

00:25:52,990 --> 00:26:02,430
the package build package all that stuff

00:25:55,990 --> 00:26:02,430
to make our Debian good

00:26:03,460 --> 00:26:07,900
GSU so that one was somewhat easy

00:26:05,830 --> 00:26:10,030
because we only had to do the the

00:26:07,900 --> 00:26:11,620
version management the the static

00:26:10,030 --> 00:26:13,240
linking of the Python code if you want

00:26:11,620 --> 00:26:15,550
to call it that

00:26:13,240 --> 00:26:16,960
GS util is our storage tool it's a

00:26:15,550 --> 00:26:18,610
little bit harder and we haven't figured

00:26:16,960 --> 00:26:21,070
out exactly what we want to do with that

00:26:18,610 --> 00:26:23,200
yet hopefully one of you will tell us

00:26:21,070 --> 00:26:24,820
two of you maybe multiple

00:26:23,200 --> 00:26:28,060
many of you might tell us exactly what

00:26:24,820 --> 00:26:29,230
we need to do again it seems like it

00:26:28,060 --> 00:26:32,260
should be simple it's a hundred percent

00:26:29,230 --> 00:26:34,390
open-source software it's the tool

00:26:32,260 --> 00:26:36,790
itself is over in Python it takes many

00:26:34,390 --> 00:26:40,180
Python dependencies and it takes a few

00:26:36,790 --> 00:26:42,310
binary Python dependencies the problem

00:26:40,180 --> 00:26:45,310
is that both of all the dependencies we

00:26:42,310 --> 00:26:47,490
take the versions that we want to be

00:26:45,310 --> 00:26:50,860
using are not available in either

00:26:47,490 --> 00:26:53,590
squeeze or wheezy and so getting a

00:26:50,860 --> 00:26:56,290
debian for TGS util that installs and

00:26:53,590 --> 00:26:58,780
squeeze are easy is challenging either

00:26:56,290 --> 00:27:01,480
we have to go and build versions of say

00:26:58,780 --> 00:27:03,400
CRC mod and things like this and publish

00:27:01,480 --> 00:27:04,570
those somewhere I guess I don't know we

00:27:03,400 --> 00:27:07,750
don't know the process that needs to

00:27:04,570 --> 00:27:10,630
happen here and again because this tool

00:27:07,750 --> 00:27:12,100
is uses pipe I and and setup tools

00:27:10,630 --> 00:27:15,580
sometimes we run into these version

00:27:12,100 --> 00:27:17,290
conflicts where the system with Python

00:27:15,580 --> 00:27:18,700
loads a module from one place instead of

00:27:17,290 --> 00:27:21,610
another place and gets a different

00:27:18,700 --> 00:27:23,590
version and we sometimes have to just

00:27:21,610 --> 00:27:25,780
plaster over those errors right whenever

00:27:23,590 --> 00:27:27,310
the Python interpreter says oops there's

00:27:25,780 --> 00:27:30,280
a version mismatch we'd like to have a

00:27:27,310 --> 00:27:31,960
better solution here too and if you guys

00:27:30,280 --> 00:27:34,650
have any recommendations I really

00:27:31,960 --> 00:27:38,260
encourage you to come tomorrow at 9:30

00:27:34,650 --> 00:27:40,300
to the packaging talk and tell us what's

00:27:38,260 --> 00:27:43,090
due because we need our help we need you

00:27:40,300 --> 00:27:45,400
guys to help us that's in the second

00:27:43,090 --> 00:27:49,540
talk room not here white very good

00:27:45,400 --> 00:27:51,580
points that way below the bar afterwards

00:27:49,540 --> 00:27:54,700
we can go for drinks and commiserate

00:27:51,580 --> 00:27:57,070
okay man all I want to do is buy people

00:27:54,700 --> 00:27:58,749
here okay if you help me fix my problems

00:27:57,070 --> 00:28:02,200
I will buy you beer that's my promise to

00:27:58,749 --> 00:28:04,710
you good

00:28:02,200 --> 00:28:07,929
was there anything I also want to say

00:28:04,710 --> 00:28:12,159
since are there questions no questions

00:28:07,929 --> 00:28:23,169
oh there's something there's somebody

00:28:12,159 --> 00:28:31,259
moving around this one works too now so

00:28:23,169 --> 00:28:34,450
we have two microphones so in terms of

00:28:31,259 --> 00:28:37,749
API what you provide is completely

00:28:34,450 --> 00:28:42,009
different from what I'm a WS and

00:28:37,749 --> 00:28:43,690
eucalyptus provide in terms of API REST

00:28:42,009 --> 00:28:45,190
API and stuff like that

00:28:43,690 --> 00:28:49,769
what you use is completely different

00:28:45,190 --> 00:28:53,049
from what Nathan went web services and

00:28:49,769 --> 00:28:56,859
eucalyptus provide it's different from

00:28:53,049 --> 00:28:59,169
other services is that we're yes yes

00:28:56,859 --> 00:29:01,409
it's a company we invented a completely

00:28:59,169 --> 00:29:05,259
new API we thought that the existing

00:29:01,409 --> 00:29:08,409
examples of api's weren't to our liking

00:29:05,259 --> 00:29:10,299
they didn't provide the same sort of

00:29:08,409 --> 00:29:12,519
structure that we would like to see so

00:29:10,299 --> 00:29:14,289
ours is a fairly hierarchical structure

00:29:12,519 --> 00:29:16,450
of the object model is basically

00:29:14,289 --> 00:29:18,519
mirrored in the API if that makes sense

00:29:16,450 --> 00:29:20,859
I think most other providers have a flat

00:29:18,519 --> 00:29:24,279
sort of key-value kind of configuration

00:29:20,859 --> 00:29:25,659
process for VMs and other things we

00:29:24,279 --> 00:29:27,789
wanted to sort of break it out a little

00:29:25,659 --> 00:29:29,590
bit and we think that that in future in

00:29:27,789 --> 00:29:31,480
the future is going to make it easier to

00:29:29,590 --> 00:29:32,859
integrate with other kinds of products

00:29:31,480 --> 00:29:34,509
so for instance this is sort of

00:29:32,859 --> 00:29:37,840
happening now if you look at the Google

00:29:34,509 --> 00:29:39,700
compute product as it stands now we

00:29:37,840 --> 00:29:41,850
started with virtual machines and now

00:29:39,700 --> 00:29:44,679
and it's basic networking and now we're

00:29:41,850 --> 00:29:48,190
inventing all sorts of new sub trees in

00:29:44,679 --> 00:29:50,830
the API for load balancing and advanced

00:29:48,190 --> 00:29:52,389
networking and routing and different

00:29:50,830 --> 00:29:54,070
kinds of disks and so forth and so on

00:29:52,389 --> 00:29:55,749
and so instead of just pushing them all

00:29:54,070 --> 00:29:59,230
into one namespace we have a little bit

00:29:55,749 --> 00:30:03,460
more structure a couple of related

00:29:59,230 --> 00:30:04,090
comments the authentication is handled

00:30:03,460 --> 00:30:08,680
different

00:30:04,090 --> 00:30:12,400
in the normal case then with then with

00:30:08,680 --> 00:30:14,590
say s3 or eucalyptus because it doesn't

00:30:12,400 --> 00:30:18,400
actually rely on a shared secret it uses

00:30:14,590 --> 00:30:21,040
OAuth 2 and so there's scoped and

00:30:18,400 --> 00:30:23,470
time-limited tokens with refresh ability

00:30:21,040 --> 00:30:25,870
and in various ways that's a good

00:30:23,470 --> 00:30:31,540
security advantage they can also be

00:30:25,870 --> 00:30:33,460
revoked and we do for the cloud storage

00:30:31,540 --> 00:30:36,790
product the object value store have an

00:30:33,460 --> 00:30:38,500
interoperable way that is similar to s3

00:30:36,790 --> 00:30:41,010
and eucalyptus that you can use it it's

00:30:38,500 --> 00:30:44,950
not as full featured as the native API

00:30:41,010 --> 00:30:47,740
and and one more point I think just last

00:30:44,950 --> 00:30:50,980
week I think we pushed Google compute

00:30:47,740 --> 00:30:53,110
compatibility into Lib cloud and so I

00:30:50,980 --> 00:30:54,940
think in the future you'll find that

00:30:53,110 --> 00:30:56,740
most of the middleware is going to

00:30:54,940 --> 00:30:58,570
understand pretty easily how to adapt

00:30:56,740 --> 00:31:00,940
between both Google computes and other

00:30:58,570 --> 00:31:02,560
products and but if you want to take

00:31:00,940 --> 00:31:04,720
full advantage of all the Google compute

00:31:02,560 --> 00:31:07,150
features in it that nested hierarchy

00:31:04,720 --> 00:31:08,710
thing then you come directly to us or if

00:31:07,150 --> 00:31:10,810
you're building other things for other

00:31:08,710 --> 00:31:13,300
Google properties right they all have a

00:31:10,810 --> 00:31:16,000
fairly similar structure if that makes

00:31:13,300 --> 00:31:17,320
sense right and so if I go from Google

00:31:16,000 --> 00:31:19,750
if I'm programming for Google compute

00:31:17,320 --> 00:31:23,020
and Google storage and Google prediction

00:31:19,750 --> 00:31:27,880
and Google Docs the api's are all sort

00:31:23,020 --> 00:31:30,100
of similar and there's other middleware

00:31:27,880 --> 00:31:33,010
that support for our stuff has been

00:31:30,100 --> 00:31:36,310
added to such as in Ruby fog I believe

00:31:33,010 --> 00:31:40,720
now supports compute engine and I

00:31:36,310 --> 00:31:48,760
believe boto has support for Google

00:31:40,720 --> 00:31:51,550
Cloud storage other questions you

00:31:48,760 --> 00:31:53,860
mentioned of different package libraries

00:31:51,550 --> 00:31:56,890
for the packaging so why don't you just

00:31:53,860 --> 00:32:00,490
use a debian mechanism there already

00:31:56,890 --> 00:32:02,230
exists and it's called up pinning so why

00:32:00,490 --> 00:32:03,820
don't you use that to specify which

00:32:02,230 --> 00:32:06,580
versions of the pack just you want to

00:32:03,820 --> 00:32:07,750
use if you need I don't know maybe you

00:32:06,580 --> 00:32:09,250
should talk to me more about that

00:32:07,750 --> 00:32:12,430
I barely know anything about that

00:32:09,250 --> 00:32:15,070
pinning I mean I know something about it

00:32:12,430 --> 00:32:16,559
but I don't know if like my understand I

00:32:15,070 --> 00:32:18,149
don't know so my understanding is that

00:32:16,559 --> 00:32:19,950
pinning basically I don't know maybe

00:32:18,149 --> 00:32:21,450
Jimmy can correct me it is a bit

00:32:19,950 --> 00:32:23,909
error-prone especially as he makes

00:32:21,450 --> 00:32:26,370
different versions of things we you know

00:32:23,909 --> 00:32:28,830
we could consider it if the packages are

00:32:26,370 --> 00:32:32,909
intended for example to be used with a

00:32:28,830 --> 00:32:34,200
staple release only and then we would

00:32:32,909 --> 00:32:37,289
have a single target to make a

00:32:34,200 --> 00:32:40,379
repository for but it would be better to

00:32:37,289 --> 00:32:41,730
do things in a way where we didn't have

00:32:40,379 --> 00:32:44,909
to worry about what the pennies are

00:32:41,730 --> 00:32:46,499
right but you don't have to like do the

00:32:44,909 --> 00:32:48,690
whole repository maybe you can only

00:32:46,499 --> 00:32:50,759
specify that particular version they

00:32:48,690 --> 00:32:53,190
name of the package you want to use now

00:32:50,759 --> 00:32:55,230
that way now the pinning forces the

00:32:53,190 --> 00:32:57,779
version of the package on the operating

00:32:55,230 --> 00:32:59,850
system or so basically you could have

00:32:57,779 --> 00:33:01,950
used stable system but you need newer

00:32:59,850 --> 00:33:04,230
versions of the package so you could

00:33:01,950 --> 00:33:06,559
pull that particular version from an

00:33:04,230 --> 00:33:09,240
unstable for example without breaking or

00:33:06,559 --> 00:33:11,429
stable system but if you are doing the

00:33:09,240 --> 00:33:13,249
whole repository then you can maybe

00:33:11,429 --> 00:33:15,570
break it but if you specify that

00:33:13,249 --> 00:33:20,249
particular version then it's completely

00:33:15,570 --> 00:33:21,809
safe but does each user have to like do

00:33:20,249 --> 00:33:23,429
the pinning operation themselves or does

00:33:21,809 --> 00:33:26,549
the maket you know no no no no whoever

00:33:23,429 --> 00:33:28,289
sets up the repositories does that it's

00:33:26,549 --> 00:33:29,759
a little bit more error-prone than

00:33:28,289 --> 00:33:33,169
you're making it out but come to the

00:33:29,759 --> 00:33:33,169
boss tomorrow morning yeah all right

00:33:38,250 --> 00:33:45,059
how should I see Google computing engine

00:33:42,240 --> 00:33:47,570
connect compared to a virtual private

00:33:45,059 --> 00:33:50,070
server VPS

00:33:47,570 --> 00:33:52,140
how does Google compute engine compare

00:33:50,070 --> 00:33:57,120
to a virtual private server it's fairly

00:33:52,140 --> 00:33:59,250
similar the you have various options

00:33:57,120 --> 00:34:01,679
when you're talking when you get into

00:33:59,250 --> 00:34:03,090
the Google compute land you can connect

00:34:01,679 --> 00:34:05,100
to the virtual machine to Google

00:34:03,090 --> 00:34:08,040
infrastructure and a little bit more

00:34:05,100 --> 00:34:09,570
simple way in with more proximity right

00:34:08,040 --> 00:34:12,500
so you can be close to all the Google

00:34:09,570 --> 00:34:14,490
services that you might want to use

00:34:12,500 --> 00:34:16,649
other things that might be different you

00:34:14,490 --> 00:34:18,540
can configure the networking so that you

00:34:16,649 --> 00:34:20,369
have internet egress your ingress or you

00:34:18,540 --> 00:34:23,369
can have a private network things like

00:34:20,369 --> 00:34:27,179
this and it's all just fairly it's all

00:34:23,369 --> 00:34:29,669
API driven so you can configure this the

00:34:27,179 --> 00:34:32,190
the infrastructure as you want as you

00:34:29,669 --> 00:34:34,710
wish I think virtual VPS systems don't

00:34:32,190 --> 00:34:36,840
always give you that functionality

00:34:34,710 --> 00:34:39,000
certainly not the proximity but

00:34:36,840 --> 00:34:44,250
otherwise fairly similar so they also

00:34:39,000 --> 00:34:46,050
have the the storage is the store the

00:34:44,250 --> 00:34:48,599
persistent storage for example is a lot

00:34:46,050 --> 00:34:51,119
more reliable than a typical hard disk

00:34:48,599 --> 00:34:54,330
it's you know the whole the whole Google

00:34:51,119 --> 00:34:55,770
compute stack you know below the virtual

00:34:54,330 --> 00:34:57,330
machine level you know the under the

00:34:55,770 --> 00:34:59,010
underlying stack is built on top of

00:34:57,330 --> 00:35:02,820
stuff that Google depends on for its

00:34:59,010 --> 00:35:04,790
business and and so there's there's a

00:35:02,820 --> 00:35:07,410
lot more you know a lot more focus on

00:35:04,790 --> 00:35:09,869
low level and systems infrastructure

00:35:07,410 --> 00:35:12,210
performance and durability and similar

00:35:09,869 --> 00:35:13,530
things for example there's a lot of

00:35:12,210 --> 00:35:16,170
great stuff happening to improve network

00:35:13,530 --> 00:35:18,300
performance etc so there's a lot of

00:35:16,170 --> 00:35:20,490
advantages to leveraging what Google is

00:35:18,300 --> 00:35:22,530
trying to do in those regards there's

00:35:20,490 --> 00:35:23,940
one other difference is that in general

00:35:22,530 --> 00:35:26,730
the market that Google is currently

00:35:23,940 --> 00:35:28,349
looking at and focusing on is the people

00:35:26,730 --> 00:35:30,240
who care about having a dedicated server

00:35:28,349 --> 00:35:32,130
a dedicated hardware alright so if you

00:35:30,240 --> 00:35:34,920
really need like a single CPU to be

00:35:32,130 --> 00:35:36,390
there all the time and or eight CPUs to

00:35:34,920 --> 00:35:39,030
be there all the time you get full eight

00:35:36,390 --> 00:35:41,609
CPUs and full Ram and this that and the

00:35:39,030 --> 00:35:42,930
other and full networking this is sort

00:35:41,609 --> 00:35:44,609
of the market that we're targeting at

00:35:42,930 --> 00:35:46,230
the moment we've started doing

00:35:44,609 --> 00:35:48,780
fractional machines so that you can get

00:35:46,230 --> 00:35:49,220
time shares and get a cheaper version of

00:35:48,780 --> 00:35:50,510
the

00:35:49,220 --> 00:35:54,380
the hardware if you don't need an

00:35:50,510 --> 00:35:56,300
apology no we've been focusing on people

00:35:54,380 --> 00:36:00,770
who need a lot of power and a lot of

00:35:56,300 --> 00:36:03,230
reliability so it would be a good option

00:36:00,770 --> 00:36:07,070
for me to use it as a compile and Jen

00:36:03,230 --> 00:36:09,560
yes that's that's the the really awesome

00:36:07,070 --> 00:36:11,480
use case right now we're building out

00:36:09,560 --> 00:36:12,950
facilities to give you more features and

00:36:11,480 --> 00:36:14,359
functionality right if you need a web

00:36:12,950 --> 00:36:17,330
server like if you need web services and

00:36:14,359 --> 00:36:19,010
or work use things like that what

00:36:17,330 --> 00:36:21,560
looking for us okay

00:36:19,010 --> 00:36:25,849
no arrived tab for their development now

00:36:21,560 --> 00:36:29,480
I gotta start a compile cycle then I

00:36:25,849 --> 00:36:31,340
need compute power and when I'm done I'm

00:36:29,480 --> 00:36:35,150
going to sleep I want to switch it off

00:36:31,340 --> 00:36:39,109
and at that moment it should cost

00:36:35,150 --> 00:36:40,880
counter stop yeah yeah you would if the

00:36:39,109 --> 00:36:42,080
machine is not running you would only be

00:36:40,880 --> 00:36:43,670
paying for any stores that you're

00:36:42,080 --> 00:36:46,480
continuing to use but you wouldn't be

00:36:43,670 --> 00:36:49,369
paying for the compute resources or any

00:36:46,480 --> 00:37:00,250
stores that is not persistent right okay

00:36:49,369 --> 00:37:03,490
thank you well thank you to Google

00:37:00,250 --> 00:37:03,490

YouTube URL: https://www.youtube.com/watch?v=U_qe5ubUSY4


