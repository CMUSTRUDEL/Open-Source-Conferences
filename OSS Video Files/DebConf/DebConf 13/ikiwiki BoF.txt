Title: ikiwiki BoF
Publication date: 2017-11-28
Playlist: DebConf 13
Description: 
	by Christian AmsÃ¼ss

At: DebConf13
https://debconf13.debconf.org/
Room: Second talk room
Scheduled start: 2013-08-11 15:30:00
Captions: 
	00:00:25,550 --> 00:00:48,239
which the very word how basically

00:00:40,640 --> 00:00:50,539
there's some I'd like to I'd like to

00:00:48,239 --> 00:00:50,539
collect

00:00:58,250 --> 00:01:17,630
general direction my impression is that

00:01:01,879 --> 00:01:17,630
from now there are plugins publications

00:01:18,860 --> 00:01:23,330
most of what's currently active this

00:01:35,230 --> 00:02:13,710
I don't want to start this all over

00:02:11,380 --> 00:02:13,710
again

00:02:22,830 --> 00:02:28,180
so for those on the stream we might

00:02:25,060 --> 00:02:30,670
offer Chris Christian ask me I guess

00:02:28,180 --> 00:02:32,860
where key what key is going now I think

00:02:30,670 --> 00:02:42,900
you're basically right it's kind of a

00:02:32,860 --> 00:02:45,610
mature project in a way kind of it's in

00:02:42,900 --> 00:02:47,320
right now I kind of think of as being in

00:02:45,610 --> 00:02:49,570
not really maintenance mode because

00:02:47,320 --> 00:02:51,450
we're still actively adding features and

00:02:49,570 --> 00:02:53,830
stuff that I'm not really actively

00:02:51,450 --> 00:02:55,239
developing and on a day-to-day basis I

00:02:53,830 --> 00:02:57,459
mostly just emerging patches other

00:02:55,239 --> 00:03:00,310
people come up with and then fixing the

00:02:57,459 --> 00:03:02,530
respect reports and you know I don't

00:03:00,310 --> 00:03:03,970
have a awful lot of time for working on

00:03:02,530 --> 00:03:06,820
it myself but I think there's enough

00:03:03,970 --> 00:03:11,350
other people that it's keeping keeping

00:03:06,820 --> 00:03:14,890
on with some and I'm being developed as

00:03:11,350 --> 00:03:17,290
far as where I anticipate it going I you

00:03:14,890 --> 00:03:20,410
know I personally plan to continue using

00:03:17,290 --> 00:03:22,090
it for the foreseeable future and keep

00:03:20,410 --> 00:03:27,340
maintaining it as long as that's going

00:03:22,090 --> 00:03:30,100
on I'm gonna be doing some massive like

00:03:27,340 --> 00:03:31,420
a rewrite or anything like that I doubt

00:03:30,100 --> 00:03:32,590
that I would have the time to do

00:03:31,420 --> 00:03:38,140
something like that even though it might

00:03:32,590 --> 00:03:39,700
be interesting and I'm kind of I've lost

00:03:38,140 --> 00:03:41,830
a lot of my Perl hacking abilities

00:03:39,700 --> 00:03:44,350
because of learning other languages I'm

00:03:41,830 --> 00:03:47,000
kind of my productivity in Perl has gone

00:03:44,350 --> 00:03:49,490
way down so that kind of limits

00:03:47,000 --> 00:03:53,030
how much time I want to spend on

00:03:49,490 --> 00:03:54,500
monarchy wiki as far as detail patch

00:03:53,030 --> 00:03:56,330
review and coding and that kind of thing

00:03:54,500 --> 00:03:58,790
so getting patches into a good state

00:03:56,330 --> 00:04:04,040
before I look at them is the best thing

00:03:58,790 --> 00:04:06,230
from my point of view how many people do

00:04:04,040 --> 00:04:12,170
you estimate are active around acuity or

00:04:06,230 --> 00:04:14,950
is it only you yeah it's pretty much

00:04:12,170 --> 00:04:17,390
just me who has final review and commit

00:04:14,950 --> 00:04:21,230
there's no particular reason that's the

00:04:17,390 --> 00:04:27,140
case that's just how you know the

00:04:21,230 --> 00:04:30,800
default kind of works out there are Sami

00:04:27,140 --> 00:04:32,510
McVitie I mean the UK would be probably

00:04:30,800 --> 00:04:36,950
the first person I'd happily give a

00:04:32,510 --> 00:04:38,560
commitment to anytime he wants to you

00:04:36,950 --> 00:04:41,210
know we haven't really talked about it

00:04:38,560 --> 00:04:43,100
he's made a lot of hatches and I trust

00:04:41,210 --> 00:04:44,990
him pretty much implicitly with anything

00:04:43,100 --> 00:04:57,080
if he just signs it off I just merge it

00:04:44,990 --> 00:04:59,450
immediately so slightly mischievous

00:04:57,080 --> 00:05:04,430
question so the rewrite in Haskell is

00:04:59,450 --> 00:05:06,710
off then unless I have three to five

00:05:04,430 --> 00:05:22,610
years that I suddenly don't have

00:05:06,710 --> 00:05:26,620
something else to work on one of my pet

00:05:22,610 --> 00:05:30,140
peeves right now is about localization

00:05:26,620 --> 00:05:33,290
we have the wonderful peel plug-in that

00:05:30,140 --> 00:05:35,960
is really great unfortunately as soon as

00:05:33,290 --> 00:05:40,669
you start trying to get something really

00:05:35,960 --> 00:05:41,900
neat and clean you hit the templates and

00:05:40,669 --> 00:05:44,270
the templates right now are not

00:05:41,900 --> 00:05:48,200
localized and can't be localized and

00:05:44,270 --> 00:05:51,440
also the templating system is pretty

00:05:48,200 --> 00:05:54,470
early that's one thing that could be

00:05:51,440 --> 00:05:56,180
worked on if somebody would like to redo

00:05:54,470 --> 00:05:57,919
the templating system and come up with a

00:05:56,180 --> 00:05:59,479
patch and get it reviewed by a couple of

00:05:57,919 --> 00:06:00,320
people I would be happy to swap it out

00:05:59,479 --> 00:06:02,600
and

00:06:00,320 --> 00:06:04,190
as far as translating the templates I do

00:06:02,600 --> 00:06:06,530
have a plan to do that it's basically

00:06:04,190 --> 00:06:08,240
generating them from a Perl script and

00:06:06,530 --> 00:06:09,830
then translate the Perl script so you

00:06:08,240 --> 00:06:11,810
know that way you'd want to deal with

00:06:09,830 --> 00:06:18,050
transit with a special translation layer

00:06:11,810 --> 00:06:23,260
just for the template system don't have

00:06:18,050 --> 00:06:23,260
a you know an regarding translation so

00:06:53,950 --> 00:07:00,650
it's there a way to preview a page with

00:06:57,620 --> 00:07:03,170
all the wiki links and everything how

00:07:00,650 --> 00:07:07,330
its rendered before committing it the

00:07:03,170 --> 00:07:09,590
wiki links are previewed it's just a few

00:07:07,330 --> 00:07:15,770
what-what is not previewed as things

00:07:09,590 --> 00:07:19,790
like the sidebar thing when I edit a

00:07:15,770 --> 00:07:20,900
file with my text editor and before

00:07:19,790 --> 00:07:24,890
committing it I

00:07:20,900 --> 00:07:27,800
well my if you look at my commit log in

00:07:24,890 --> 00:07:30,620
Ikki wiki it's like added that page

00:07:27,800 --> 00:07:36,110
formatting formatting formatting link

00:07:30,620 --> 00:07:38,480
formatting tag you can actually run a

00:07:36,110 --> 00:07:42,910
kiwi key without without having it

00:07:38,480 --> 00:07:42,910
committed if you're speaking of a lot

00:07:45,880 --> 00:07:51,730
you can just run a kiwi key from that

00:07:48,950 --> 00:07:54,740
source without having committed state

00:07:51,730 --> 00:07:56,930
there's also a switch I forget the name

00:07:54,740 --> 00:08:00,290
but it'll dump out it'll render the page

00:07:56,930 --> 00:08:02,120
to standard output just one page and I

00:08:00,290 --> 00:08:04,910
think you have to either give it your

00:08:02,120 --> 00:08:06,770
setup file or it doesn't have all the

00:08:04,910 --> 00:08:08,660
all the settings in your setup files so

00:08:06,770 --> 00:08:11,420
it's not perfect

00:08:08,660 --> 00:08:14,840
with regards to running quickly without

00:08:11,420 --> 00:08:19,160
committing it that'd be good there's one

00:08:14,840 --> 00:08:24,070
issue I had which I think I have two or

00:08:19,160 --> 00:08:27,380
three copies of the repository and

00:08:24,070 --> 00:08:29,150
because in the in the tutorial for

00:08:27,380 --> 00:08:30,680
setting up the side it says that you

00:08:29,150 --> 00:08:32,840
need to make a good pair opposed to

00:08:30,680 --> 00:08:35,090
repair and a working posture here and

00:08:32,840 --> 00:08:37,039
and wear repository and up and I

00:08:35,090 --> 00:08:39,550
followed it but then I ended up

00:08:37,039 --> 00:08:44,000
basically cargo culturing what was in it

00:08:39,550 --> 00:08:47,860
it's not clear to me in the long run

00:08:44,000 --> 00:08:51,850
what these bits are for which makes it

00:08:47,860 --> 00:08:55,580
harder for me to manipulate and maintain

00:08:51,850 --> 00:08:58,970
yes I thought maybe I can run a he wiki

00:08:55,580 --> 00:09:02,180
by hand but then in which upholstery and

00:08:58,970 --> 00:09:13,280
maybe do I screw up one repository in

00:09:02,180 --> 00:09:15,170
the other or what can be might be

00:09:13,280 --> 00:09:17,330
relative paths if you set it up without

00:09:15,170 --> 00:09:19,100
passing absolute paths so that's the

00:09:17,330 --> 00:09:20,930
only thing you have to consider when you

00:09:19,100 --> 00:09:23,360
run a key week when you're you're

00:09:20,930 --> 00:09:26,060
thinking cross repository apart from

00:09:23,360 --> 00:09:28,640
that there's a bunch of metadata

00:09:26,060 --> 00:09:31,400
akiva he collects in this in the source

00:09:28,640 --> 00:09:35,330
repository which is the tech checked out

00:09:31,400 --> 00:09:37,370
version so that's that's where he keeps

00:09:35,330 --> 00:09:39,080
its own stuff as well which is I think

00:09:37,370 --> 00:09:45,350
part of the reason why there is the

00:09:39,080 --> 00:09:47,660
social processor at all in the bay

00:09:45,350 --> 00:09:50,600
repository no the the regular source

00:09:47,660 --> 00:09:52,310
dear that's that's where there's a Tiki

00:09:50,600 --> 00:09:54,110
Wicki which contains all that

00:09:52,310 --> 00:09:59,750
information is stuff that can be

00:09:54,110 --> 00:10:03,170
regenerated or something you can

00:09:59,750 --> 00:10:04,550
simplify your setup with the with the

00:10:03,170 --> 00:10:06,350
bed get you can get rid of the bear

00:10:04,550 --> 00:10:10,490
repository if you don't want it and just

00:10:06,350 --> 00:10:14,030
have you know one repository local and

00:10:10,490 --> 00:10:17,120
one remote or something like that the

00:10:14,030 --> 00:10:19,070
only reason the walkthrough has you set

00:10:17,120 --> 00:10:19,930
up the bear repositories because most

00:10:19,070 --> 00:10:22,610
people

00:10:19,930 --> 00:10:24,980
you know they find it easier to have a

00:10:22,610 --> 00:10:26,540
bear great repository use just because

00:10:24,980 --> 00:10:28,040
of how it works but you can definitely

00:10:26,540 --> 00:10:34,070
do it the other way and simplify things

00:10:28,040 --> 00:10:36,680
down I only have one repository and I

00:10:34,070 --> 00:10:39,920
run the you know I just run a key wiki

00:10:36,680 --> 00:10:48,590
with the setup file repository because

00:10:39,920 --> 00:10:51,110
like Christian said like you said I have

00:10:48,590 --> 00:10:52,490
absolute paths pointing from my son in

00:10:51,110 --> 00:10:59,300
my setup file pointing at the writer

00:10:52,490 --> 00:11:04,040
positive way to use reckoning this is

00:10:59,300 --> 00:11:06,650
I've seen like Ruby compiler they have a

00:11:04,040 --> 00:11:09,500
command like server and then it fires up

00:11:06,650 --> 00:11:11,540
a server that runs a web server and you

00:11:09,500 --> 00:11:13,100
can connect and it like renders render

00:11:11,540 --> 00:11:15,530
the page is live so you can actually

00:11:13,100 --> 00:11:17,030
preview is that's something that is

00:11:15,530 --> 00:11:20,780
would be very hard to do with the

00:11:17,030 --> 00:11:22,430
current Nicky Wicky actually it

00:11:20,780 --> 00:11:24,590
shouldn't be that hard to do given that

00:11:22,430 --> 00:11:26,570
there's the option to pipe out the

00:11:24,590 --> 00:11:28,580
result of rendering a single page to

00:11:26,570 --> 00:11:30,830
send it out so you could even have

00:11:28,580 --> 00:11:33,920
implemented that standalone from a kiwi

00:11:30,830 --> 00:11:44,270
key just have a server that requests the

00:11:33,920 --> 00:11:48,740
pages I think you would have to have the

00:11:44,270 --> 00:11:51,970
server either have all the all the HTML

00:11:48,740 --> 00:11:55,430
files built and stored somewhere or

00:11:51,970 --> 00:11:57,770
render them all on the fly and you know

00:11:55,430 --> 00:11:58,520
otherwise links wouldn't work I mean

00:11:57,770 --> 00:12:00,890
there's definitely you could definitely

00:11:58,520 --> 00:12:05,120
have some kind of a key wiki insta web

00:12:00,890 --> 00:12:06,380
thing it's worth thinking about I

00:12:05,120 --> 00:12:09,700
haven't really thought about doing it

00:12:06,380 --> 00:12:09,700
and maybe it's a good idea

00:12:10,100 --> 00:12:18,139
I just run a HTTP server on my laptop

00:12:15,350 --> 00:12:20,120
so then it's one less complication right

00:12:18,139 --> 00:12:22,699
it's one less thing that's different

00:12:20,120 --> 00:12:27,680
between my preview setup and the

00:12:22,699 --> 00:12:30,380
production setup well yeah sure I do

00:12:27,680 --> 00:12:33,079
because I install it when I run a key

00:12:30,380 --> 00:12:36,920
wiki it installs into the directory

00:12:33,079 --> 00:12:38,870
which is viewed by by the which is

00:12:36,920 --> 00:12:40,639
served by the web server and and i

00:12:38,870 --> 00:12:42,470
refresh the browser okay

00:12:40,639 --> 00:12:44,870
it doesn't auto refresh but other than

00:12:42,470 --> 00:12:50,779
that it's live maybe I don't understand

00:12:44,870 --> 00:12:53,420
the goal things I've seen is that you

00:12:50,779 --> 00:12:55,310
say of the file and you refresh the

00:12:53,420 --> 00:12:58,160
brother and you have the rendered

00:12:55,310 --> 00:13:01,310
version so we just set up you still have

00:12:58,160 --> 00:13:05,180
to call if you wiki manually okay you

00:13:01,310 --> 00:13:07,130
refresh that's that's 1x faster and

00:13:05,180 --> 00:13:10,490
insta web thing being interesting

00:13:07,130 --> 00:13:14,779
because when doing loads of massive

00:13:10,490 --> 00:13:19,810
edits if I built my wiki it would take

00:13:14,779 --> 00:13:23,259
me about 30 seconds so that doesn't

00:13:19,810 --> 00:13:23,259
quite work

00:13:25,720 --> 00:13:33,620
edits so if if there's running wiki as

00:13:30,589 --> 00:13:36,949
webserver temporarily so it keeps state

00:13:33,620 --> 00:13:39,110
in memory and only observe and quickly

00:13:36,949 --> 00:13:41,660
renders as everything ready to render

00:13:39,110 --> 00:13:46,009
page quickly for when one page changes

00:13:41,660 --> 00:13:48,170
that kind of makes sense so there's a

00:13:46,009 --> 00:13:50,360
more general problem here with Nikki

00:13:48,170 --> 00:13:52,279
wikis scalability to a whole lot of

00:13:50,360 --> 00:13:53,810
pages and if you're using the POE

00:13:52,279 --> 00:13:55,100
plug-in like integrities over here

00:13:53,810 --> 00:13:58,120
saying in mind is really really slow

00:13:55,100 --> 00:14:00,980
because you know pose it runs a lot of

00:13:58,120 --> 00:14:02,240
third-party commands and stuff so but

00:14:00,980 --> 00:14:05,750
but just even if you're just using

00:14:02,240 --> 00:14:07,819
regular icky wiki when you get up to you

00:14:05,750 --> 00:14:10,040
know tens or hundreds I don't know how

00:14:07,819 --> 00:14:12,199
many thousands of pages you get quite

00:14:10,040 --> 00:14:16,040
slow just because it has to every time

00:14:12,199 --> 00:14:18,250
it's run it it reads in the index file

00:14:16,040 --> 00:14:20,660
then writes it back out and that's

00:14:18,250 --> 00:14:21,510
completely unauthorized data storage

00:14:20,660 --> 00:14:24,270
format

00:14:21,510 --> 00:14:26,940
you know has not changed in a long time

00:14:24,270 --> 00:14:29,280
and if you switched it to say using

00:14:26,940 --> 00:14:31,620
SQLite or something and had a proper

00:14:29,280 --> 00:14:34,380
database you might not even need to run

00:14:31,620 --> 00:14:36,870
Nicky Wicky as a persistent process to

00:14:34,380 --> 00:14:38,490
get a massive speed increase and so this

00:14:36,870 --> 00:14:41,550
is something that is on my long-term

00:14:38,490 --> 00:14:44,760
to-do list and really needs to happen I

00:14:41,550 --> 00:14:46,890
think you know I have various people

00:14:44,760 --> 00:14:47,820
running sites that I'm responsible for

00:14:46,890 --> 00:14:50,010
that

00:14:47,820 --> 00:14:54,480
you know posting comments and things to

00:14:50,010 --> 00:14:57,360
them just gets quite slow and you know

00:14:54,480 --> 00:14:59,310
trying to deal with that I'd really like

00:14:57,360 --> 00:15:01,620
to get there I just haven't had enough

00:14:59,310 --> 00:15:03,150
to its to do it and if somebody wants to

00:15:01,620 --> 00:15:05,550
sit down and try to I mean it's really

00:15:03,150 --> 00:15:08,100
simple Perl code right now it just dumps

00:15:05,550 --> 00:15:10,920
out like basically Ross he realized data

00:15:08,100 --> 00:15:13,290
out to disk and what was it back up and

00:15:10,920 --> 00:15:15,210
you know finding a way to to convert

00:15:13,290 --> 00:15:17,070
that to a database would probably

00:15:15,210 --> 00:15:18,750
probably someone who knows databases

00:15:17,070 --> 00:15:29,000
better than I would find it much easier

00:15:18,750 --> 00:15:29,000
than I would so I was looking into

00:15:29,150 --> 00:15:36,210
adding support for the maillard format

00:15:33,830 --> 00:15:40,380
because I think it's really nice

00:15:36,210 --> 00:15:52,830
formatting documentation and get get a

00:15:40,380 --> 00:15:55,470
lot of good cross-linking and the

00:15:52,830 --> 00:15:58,020
problem is that the processor there

00:15:55,470 --> 00:15:58,350
always operates on a whole directory at

00:15:58,020 --> 00:16:01,380
once

00:15:58,350 --> 00:16:03,990
suppose all the pages and and trying to

00:16:01,380 --> 00:16:06,390
get data to integrate with Pio was

00:16:03,990 --> 00:16:14,660
pretty difficult because the key we give

00:16:06,390 --> 00:16:14,660
things something for each page

00:16:21,590 --> 00:16:27,030
well it always since it does all the

00:16:25,200 --> 00:16:38,640
cross-linking it's always generating all

00:16:27,030 --> 00:16:40,590
the HTML files in that case the maillard

00:16:38,640 --> 00:16:43,200
compiler is doing part of the world of

00:16:40,590 --> 00:16:45,810
the work of icky wicked and you would

00:16:43,200 --> 00:16:48,390
the cross-linking that it needs to read

00:16:45,810 --> 00:16:53,850
the whole directory to do is what you do

00:16:48,390 --> 00:16:56,730
we need a wiki so well I don't know how

00:16:53,850 --> 00:16:58,800
that works but well I haven't seen my

00:16:56,730 --> 00:17:00,780
lab I just took a note to look at it but

00:16:58,800 --> 00:17:02,970
for what you say if it needs to be the

00:17:00,780 --> 00:17:05,270
whole directory to do cross-linking it

00:17:02,970 --> 00:17:09,540
sounds to me exactly what he is doing

00:17:05,270 --> 00:17:11,820
so one file can be read with and the

00:17:09,540 --> 00:17:13,470
mark-up interpreted and you let icky

00:17:11,820 --> 00:17:15,420
wiki do the cross-linking path but I

00:17:13,470 --> 00:17:17,250
don't know what if Millar does this

00:17:15,420 --> 00:17:23,040
cross linking in a way different than

00:17:17,250 --> 00:17:27,290
what the key wiki does so it seems to me

00:17:23,040 --> 00:17:32,430
that either I have to teach icky wiki

00:17:27,290 --> 00:17:36,270
not to do profile processing in this one

00:17:32,430 --> 00:17:50,430
directory or I have to teach the monarch

00:17:36,270 --> 00:17:53,880
compiler to look at actually if this is

00:17:50,430 --> 00:17:54,750
more about the plain text syntax of

00:17:53,880 --> 00:17:56,910
maillard isn't it

00:17:54,750 --> 00:18:00,690
or what's what's the whole point of what

00:17:56,910 --> 00:18:03,540
what is what you like about Murat well

00:18:00,690 --> 00:18:07,320
the syntax is a pretty simple XML but

00:18:03,540 --> 00:18:10,290
what I really like is that the way that

00:18:07,320 --> 00:18:12,960
it connects the different notes by

00:18:10,290 --> 00:18:16,370
semantic things so I don't know if it

00:18:12,960 --> 00:18:16,370
makes sense to re-implement although

00:18:21,840 --> 00:18:27,400
so I had a related question about

00:18:25,180 --> 00:18:31,720
performance and I remember somebody

00:18:27,400 --> 00:18:33,970
asking us some years ago which is is as

00:18:31,720 --> 00:18:38,650
a multi-threaded Tiki Wicki going to

00:18:33,970 --> 00:18:40,270
happen ever the previous comment about

00:18:38,650 --> 00:18:44,200
reimplementation ki wiki in high school

00:18:40,270 --> 00:18:47,400
I can't imagine taking the current code

00:18:44,200 --> 00:19:01,810
base and making and threading it it just

00:18:47,400 --> 00:19:03,670
yeah maybe there's some Patrick I don't

00:19:01,810 --> 00:19:05,470
have the impression either so that that

00:19:03,670 --> 00:19:08,950
this is something that's that's easily

00:19:05,470 --> 00:19:13,180
possible short of rewriting half of a

00:19:08,950 --> 00:19:16,210
queue here I think it would be possible

00:19:13,180 --> 00:19:18,430
to maybe thread off from rendering and

00:19:16,210 --> 00:19:20,800
if you somehow made the render pipeline

00:19:18,430 --> 00:19:30,460
into an actual pipeline then maybe you

00:19:20,800 --> 00:19:32,890
could you know thread that to optimize

00:19:30,460 --> 00:19:35,710
it whether it's plugins that spend much

00:19:32,890 --> 00:19:37,420
time in the scanning part of the process

00:19:35,710 --> 00:19:40,360
where the index database is regenerated

00:19:37,420 --> 00:19:43,990
or whether this band time actually ran

00:19:40,360 --> 00:19:45,700
ranked because whatever you render you

00:19:43,990 --> 00:19:47,020
have to wait for the for the for the

00:19:45,700 --> 00:19:48,760
index database to be complete because

00:19:47,020 --> 00:19:51,030
you want to make two met we want to

00:19:48,760 --> 00:19:54,370
evaluate page page specs in that stuff

00:19:51,030 --> 00:19:56,350
and that can't be done before before you

00:19:54,370 --> 00:19:57,640
have a complete knowledge of the rest of

00:19:56,350 --> 00:19:59,710
the system it might be possible to

00:19:57,640 --> 00:20:02,680
paralyze the scanning phase to using the

00:19:59,710 --> 00:20:04,270
same kind of a pipeline again you know I

00:20:02,680 --> 00:20:06,190
think a lot of the scanning stuff

00:20:04,270 --> 00:20:08,440
actually does go in and munches internal

00:20:06,190 --> 00:20:10,270
state I think that's most most of the

00:20:08,440 --> 00:20:17,620
plugins that do things of the scanning

00:20:10,270 --> 00:20:19,750
phase want to store the things that

00:20:17,620 --> 00:20:20,860
there's no there that there that this

00:20:19,750 --> 00:20:23,200
would be a message for changing the

00:20:20,860 --> 00:20:25,840
plug-in API and I think the the plugins

00:20:23,200 --> 00:20:28,080
are available are big part of Mexico

00:20:25,840 --> 00:20:28,080
Vicki

00:20:34,240 --> 00:20:41,150
okay so I'm come up now and there's

00:20:38,540 --> 00:20:45,770
there's one thing I I'd like to go over

00:20:41,150 --> 00:20:48,110
with you which as would okay I'm I

00:20:45,770 --> 00:20:50,300
assembled a list of topics I've been

00:20:48,110 --> 00:20:53,630
working in icky Vicky over the past and

00:20:50,300 --> 00:20:57,200
turns out enough there's often the topic

00:20:53,630 --> 00:20:58,880
of pages having their page title and

00:20:57,200 --> 00:21:00,050
having their destination file having

00:20:58,880 --> 00:21:01,670
their source file and those things

00:21:00,050 --> 00:21:03,440
getting mixed up

00:21:01,670 --> 00:21:07,700
I think that's partially also because of

00:21:03,440 --> 00:21:10,550
the the history back in the early early

00:21:07,700 --> 00:21:13,280
days and there was a slightly different

00:21:10,550 --> 00:21:16,360
syntax for commands and links so you had

00:21:13,280 --> 00:21:19,340
to have underscores in your links this

00:21:16,360 --> 00:21:21,530
time and again this resurfaces in in

00:21:19,340 --> 00:21:25,990
underscore escapes showing up all around

00:21:21,530 --> 00:21:25,990
the code or all around

00:21:42,380 --> 00:21:49,110
so basically free for each page there's

00:21:46,170 --> 00:21:53,370
a source file there's a rendered file

00:21:49,110 --> 00:21:55,320
there's a kind of actually I'm not sure

00:21:53,370 --> 00:21:57,260
about that is there such things a page

00:21:55,320 --> 00:21:59,910
name for each file

00:21:57,260 --> 00:22:02,520
yeah there is that's basically that

00:21:59,910 --> 00:22:04,440
that's their a a no score Derby and

00:22:02,520 --> 00:22:08,400
that's the kind of base name from which

00:22:04,440 --> 00:22:10,350
the other thing is constructed of course

00:22:08,400 --> 00:22:12,180
there are ways of linking to that which

00:22:10,350 --> 00:22:14,580
can be with that with or without an

00:22:12,180 --> 00:22:17,010
scores and there's the title which in

00:22:14,580 --> 00:22:20,070
which they are score stripped so

00:22:17,010 --> 00:22:22,710
actually I would have liked to have this

00:22:20,070 --> 00:22:26,990
completed for for a cubic explanation

00:22:22,710 --> 00:22:26,990
page on the various kinds of titles

00:22:27,410 --> 00:22:32,250
because this is like a I'm not the

00:22:30,990 --> 00:22:35,490
impression that this is a recurrent

00:22:32,250 --> 00:22:41,100
theme of the wrong wrong kind of entity

00:22:35,490 --> 00:22:42,810
showing up and in plugins I don't know I

00:22:41,100 --> 00:22:47,220
know there's a couple of cases where

00:22:42,810 --> 00:22:49,410
you'll where the crazy escaped filenames

00:22:47,220 --> 00:22:51,120
can make it hard to figure out what the

00:22:49,410 --> 00:23:03,660
right thing to type to get a wiki link

00:22:51,120 --> 00:23:06,240
is for example you know your page to it

00:23:03,660 --> 00:23:08,220
my impression was that you can always

00:23:06,240 --> 00:23:11,010
get the page name you can link to by

00:23:08,220 --> 00:23:13,230
copy pasting the title line unless you

00:23:11,010 --> 00:23:21,210
set a meta title yeah exactly

00:23:13,230 --> 00:23:24,830
okay I don't know if I've ever seen an

00:23:21,210 --> 00:23:24,830
example of underscores leaking out

00:23:33,890 --> 00:23:40,650
there has been both ways actually um

00:23:38,250 --> 00:23:42,810
when you when you try to intentionally

00:23:40,650 --> 00:23:44,850
create an underscore in a eqqui link

00:23:42,810 --> 00:23:46,650
even if you explicitly set a title you

00:23:44,850 --> 00:23:51,750
have to go the other way around and have

00:23:46,650 --> 00:23:54,240
to the I think this is this is a kind of

00:23:51,750 --> 00:23:56,610
traditional feature from from what my

00:23:54,240 --> 00:24:02,880
impression was and the other is other

00:23:56,610 --> 00:24:04,200
and the link map plug-in just okay I can

00:24:02,880 --> 00:24:09,870
see what map having that kind of problem

00:24:04,200 --> 00:24:12,410
yes yeah generally concerning the way

00:24:09,870 --> 00:24:15,450
links are put how do you feel about

00:24:12,410 --> 00:24:18,660
incompatible changes with link format

00:24:15,450 --> 00:24:20,220
because basically that's mean maybe I'm

00:24:18,660 --> 00:24:22,320
not so well known feature Ikki wiki does

00:24:20,220 --> 00:24:25,080
have a transition mechanism for that so

00:24:22,320 --> 00:24:26,940
you you can call a kiwi key to to

00:24:25,080 --> 00:24:29,610
transition your pages from one version

00:24:26,940 --> 00:24:31,920
to the next but I'm under the impression

00:24:29,610 --> 00:24:34,890
that not all users of icky wiki would I

00:24:31,920 --> 00:24:37,620
would would would have this applied if

00:24:34,890 --> 00:24:40,460
we went to go on making compatible

00:24:37,620 --> 00:24:43,650
changes so what's your opinion on that

00:24:40,460 --> 00:24:45,600
yeah we haven't used the transition sure

00:24:43,650 --> 00:24:48,330
thing for many things that need you know

00:24:45,600 --> 00:24:50,760
that everybody has to do there there was

00:24:48,330 --> 00:24:54,930
a patch which I unfortunately haven't

00:24:50,760 --> 00:24:59,970
merged to change something about page

00:24:54,930 --> 00:25:02,340
spat or about them about preprocessor

00:24:59,970 --> 00:25:08,040
directives and would have needed a

00:25:02,340 --> 00:25:09,810
transition mandatory transition and yeah

00:25:08,040 --> 00:25:11,610
I don't know that we could guarantee

00:25:09,810 --> 00:25:13,320
that everybody does it but then again I

00:25:11,610 --> 00:25:15,150
don't try to guarantee that everybody

00:25:13,320 --> 00:25:17,640
maintains their system so I'm kind of

00:25:15,150 --> 00:25:20,480
okay with this kind of transition least

00:25:17,640 --> 00:25:20,480
in theory I think

00:25:25,389 --> 00:25:32,590
do you think we there there's room for

00:25:29,950 --> 00:25:34,779
development so that I actually don't

00:25:32,590 --> 00:25:38,190
know about the current version number

00:25:34,779 --> 00:25:41,049
that there will be kind of a collective

00:25:38,190 --> 00:25:42,610
transition version again yeah I mean

00:25:41,049 --> 00:25:43,929
this the kind of transition you're

00:25:42,610 --> 00:25:47,110
talking about would mean a new major

00:25:43,929 --> 00:25:51,360
version number and and then we could

00:25:47,110 --> 00:25:53,559
kind of spool some transitions up and

00:25:51,360 --> 00:25:55,570
yeah that would be the best way to do it

00:25:53,559 --> 00:25:57,610
if you have more than one pending maybe

00:25:55,570 --> 00:26:00,129
the preprocessor directive thing in your

00:25:57,610 --> 00:26:03,820
thing or something just thing is I'm one

00:26:00,129 --> 00:26:06,039
of one of the one of the things I've

00:26:03,820 --> 00:26:10,870
been discussing the last few days with

00:26:06,039 --> 00:26:15,399
with with as McVie was the I'm having

00:26:10,870 --> 00:26:17,740
tight links usually any cubic you much

00:26:15,399 --> 00:26:19,299
depends on the on the relationship

00:26:17,740 --> 00:26:20,919
between pages that's established by

00:26:19,299 --> 00:26:24,220
having a link from one page to another

00:26:20,919 --> 00:26:26,649
and there are some plugins so far that

00:26:24,220 --> 00:26:30,970
create tapped link so when you tag a

00:26:26,649 --> 00:26:35,080
page by saying tag this tag this creates

00:26:30,970 --> 00:26:38,399
a link to the tag page but also claims

00:26:35,080 --> 00:26:41,559
that this link is a tag relationship and

00:26:38,399 --> 00:26:43,690
you can later on query for all pages

00:26:41,559 --> 00:26:45,730
that are tagged us and that's

00:26:43,690 --> 00:26:47,950
differentiate between just linking

00:26:45,730 --> 00:26:55,000
somewhere and actively saying this is a

00:26:47,950 --> 00:26:57,549
page of tag so can take category a we've

00:26:55,000 --> 00:27:01,990
been talking about generalizing this to

00:26:57,549 --> 00:27:03,549
two because we solve the problem of for

00:27:01,990 --> 00:27:07,450
example implementing pack trackers which

00:27:03,549 --> 00:27:09,460
have blocking relationships this this

00:27:07,450 --> 00:27:12,039
might this might lend itself to an

00:27:09,460 --> 00:27:15,039
extension to the link format because

00:27:12,039 --> 00:27:18,090
just I mean how many however does the

00:27:15,039 --> 00:27:29,200
pipe character show up in a in a URL

00:27:18,090 --> 00:27:35,850
there there be room for extension an

00:27:29,200 --> 00:27:35,850
example of like four point 2015

00:27:43,210 --> 00:27:52,010
yeah I don't know how it's related it's

00:27:49,100 --> 00:27:56,120
about it's about using pastry souls in

00:27:52,010 --> 00:27:58,309
in parent links but maybe I can show you

00:27:56,120 --> 00:28:00,230
the use case well like I had to actually

00:27:58,309 --> 00:28:30,350
do crazy stuff

00:28:00,230 --> 00:28:31,880
you sure interested it's always nice to

00:28:30,350 --> 00:28:34,480
see a new wiki wiki site that I've never

00:28:31,880 --> 00:28:34,480
seen before

00:28:36,370 --> 00:28:43,070
so the thing is it's me multilingual

00:28:39,580 --> 00:28:45,409
Nicky Wicky and so when I was telling

00:28:43,070 --> 00:28:48,140
before that I had to actually translate

00:28:45,409 --> 00:28:50,360
the tongue plate here and so we still

00:28:48,140 --> 00:28:52,460
have French on the footer for example

00:28:50,360 --> 00:28:54,980
even if we're you're in the English

00:28:52,460 --> 00:29:03,169
version but this is not the the my main

00:28:54,980 --> 00:29:06,140
problem is about actually if you go in a

00:29:03,169 --> 00:29:08,650
sub page this is a parent link and to

00:29:06,140 --> 00:29:11,539
get this with proper caps and nice

00:29:08,650 --> 00:29:15,549
layout I need to actually have the page

00:29:11,539 --> 00:29:17,990
name that is like capital a association

00:29:15,549 --> 00:29:19,940
that's one thing I also like if I have

00:29:17,990 --> 00:29:24,080
that in the US version the English

00:29:19,940 --> 00:29:26,620
version then it's not translated and

00:29:24,080 --> 00:29:29,750
it's all bad like how this handling of

00:29:26,620 --> 00:29:45,409
page TESOL and parent clinking are

00:29:29,750 --> 00:29:46,899
related sometimes you can I can I'm

00:29:45,409 --> 00:29:48,710
afraid you can't unconditional

00:29:46,899 --> 00:29:51,140
unconditionally uppercase you'd rather

00:29:48,710 --> 00:29:53,419
have to use the page title but this

00:29:51,140 --> 00:29:57,159
would not only solve the application you

00:29:53,419 --> 00:29:57,159
can't use the page title for technical

00:29:58,539 --> 00:30:04,130
stuff there are issues like this with

00:30:02,149 --> 00:30:06,830
dependencies of one thing on another you

00:30:04,130 --> 00:30:09,919
can't always rely on having access to

00:30:06,830 --> 00:30:11,390
the page title okay so you we'd then

00:30:09,919 --> 00:30:13,520
depend on the full contents of the

00:30:11,390 --> 00:30:15,020
parent page base exactly and then when

00:30:13,520 --> 00:30:16,250
you recompile you have a light I mean

00:30:15,020 --> 00:30:20,049
when you change one page you have to

00:30:16,250 --> 00:30:20,049
recompile like yeah

00:30:20,330 --> 00:30:23,960
as far as your footer by the way there

00:30:22,429 --> 00:30:26,299
there's something that I wanted to do

00:30:23,960 --> 00:30:28,909
and never got around to it but if

00:30:26,299 --> 00:30:31,669
somebody would like to do it which is

00:30:28,909 --> 00:30:34,070
generalized the sidebar plug-in into a

00:30:31,669 --> 00:30:36,440
generic piece of the page plug-in so you

00:30:34,070 --> 00:30:38,480
can have in whatever pieces the page you

00:30:36,440 --> 00:30:40,100
like and then you can have a file in

00:30:38,480 --> 00:30:42,350
this directory that's a sidebar for this

00:30:40,100 --> 00:30:43,490
subdirectory everything below it you

00:30:42,350 --> 00:30:44,929
know you can have a sidebar on the other

00:30:43,490 --> 00:30:47,630
side you can have a header you can have

00:30:44,929 --> 00:30:49,730
an alert notice whatever basically that

00:30:47,630 --> 00:30:51,919
would that would solve parts of the

00:30:49,730 --> 00:30:54,320
templating issue because the page would

00:30:51,919 --> 00:30:55,970
not anymore consist of template the

00:30:54,320 --> 00:30:58,429
template would become very simple

00:30:55,970 --> 00:31:00,080
because they consist mainly of sidebars

00:30:58,429 --> 00:31:02,269
yeah I think you could probably know

00:31:00,080 --> 00:31:04,880
generalize the template that's bit a bit

00:31:02,269 --> 00:31:06,799
simpler I don't know if it would

00:31:04,880 --> 00:31:09,409
completely simplify it of course this

00:31:06,799 --> 00:31:11,120
also plays into maybe getting a

00:31:09,409 --> 00:31:14,230
bootstrap Twitter bootstrap or some

00:31:11,120 --> 00:31:17,809
other modern theme for a kiwa key yeah

00:31:14,230 --> 00:31:19,760
I've seen one bootstrap but try to

00:31:17,809 --> 00:31:22,929
generalize it and terribly fit because

00:31:19,760 --> 00:31:25,220
it it's just too much dependent

00:31:22,929 --> 00:31:27,860
basically changes the template yeah and

00:31:25,220 --> 00:31:29,510
then you're out of luck when you have

00:31:27,860 --> 00:31:32,659
any other plugins but I'm perfectly

00:31:29,510 --> 00:31:34,100
happy to have it is possible now to have

00:31:32,659 --> 00:31:35,840
something in the page template that's

00:31:34,100 --> 00:31:38,870
conditional on the theme that you're

00:31:35,840 --> 00:31:40,460
using so you can easily all not easily

00:31:38,870 --> 00:31:42,590
but you can put it all in one template

00:31:40,460 --> 00:31:44,990
and then I can maintain it in theory

00:31:42,590 --> 00:31:47,990
because it's just one copy of things

00:31:44,990 --> 00:31:50,240
with branches for different plugins so

00:31:47,990 --> 00:31:51,889
it's it's doable I think some you just

00:31:50,240 --> 00:31:55,159
have to sit down and make it work and

00:31:51,889 --> 00:31:58,909
you know I put that piece in just to

00:31:55,159 --> 00:32:01,809
make that possible should work okay it

00:31:58,909 --> 00:32:01,809
sounds like yeah

00:32:06,899 --> 00:32:18,099
could you go to your overview of the

00:32:11,019 --> 00:32:23,559
different page name things yeah

00:32:18,099 --> 00:32:34,149
especially the the topic of of index dot

00:32:23,559 --> 00:32:35,979
MD VW n versus H P dot M dwn is I every

00:32:34,149 --> 00:32:39,089
time I do something with that I have to

00:32:35,979 --> 00:32:43,899
look up the documentation again and

00:32:39,089 --> 00:32:47,830
check which flag I'm supposed to be

00:32:43,899 --> 00:32:50,799
setting the two flags there and I was

00:32:47,830 --> 00:32:53,139
just thinking earlier since we were

00:32:50,799 --> 00:32:59,979
talking about a transition in the format

00:32:53,139 --> 00:33:03,879
does it make sense to maybe only keep

00:32:59,979 --> 00:33:06,009
one flag to keep URLs compatible per

00:33:03,879 --> 00:33:08,379
site but move the file around and the

00:33:06,009 --> 00:33:11,139
gate went once the transition hits and

00:33:08,379 --> 00:33:18,429
just say we pick one of these versions

00:33:11,139 --> 00:33:20,379
and go with that I I don't really see a

00:33:18,429 --> 00:33:22,210
strong reason I mean the way I think

00:33:20,379 --> 00:33:24,099
about it is there's one way to do it on

00:33:22,210 --> 00:33:27,639
there's ass index pages things that

00:33:24,099 --> 00:33:37,389
maybe somebody uses but it was standard

00:33:27,639 --> 00:33:39,210
because you know I just yeah that's a

00:33:37,389 --> 00:33:41,979
good example because I don't know

00:33:39,210 --> 00:33:44,379
exactly which the one way that we to do

00:33:41,979 --> 00:33:48,099
it you're talking about because I have

00:33:44,379 --> 00:33:50,619
no idea again at this point which things

00:33:48,099 --> 00:33:59,169
which flag does what the one way is the

00:33:50,619 --> 00:34:01,929
default way which is you have page if

00:33:59,169 --> 00:34:03,729
you want your index the only index

00:34:01,929 --> 00:34:05,320
sudden mwn you have is for the top-level

00:34:03,729 --> 00:34:07,659
index because there's no way to have

00:34:05,320 --> 00:34:10,859
that otherwise so it's a special case

00:34:07,659 --> 00:34:10,859
which is slightly ugly

00:34:12,040 --> 00:34:20,520
it's quite simple so it means you have

00:34:16,800 --> 00:34:23,440
if you have subpages you always have a

00:34:20,520 --> 00:34:25,450
directory without an index.html file and

00:34:23,440 --> 00:34:26,980
you get the director listing if none

00:34:25,450 --> 00:34:29,379
somebody lists well if you have some

00:34:26,980 --> 00:34:31,629
pages you make a subdirectory and you

00:34:29,379 --> 00:34:33,879
put the pages in there and then you

00:34:31,629 --> 00:34:42,940
probably have a top-level page so you

00:34:33,879 --> 00:34:46,270
have some deer yeah but if somebody

00:34:42,940 --> 00:34:48,010
strips of the last part of an URL until

00:34:46,270 --> 00:34:49,899
the slash in a directory listing if you

00:34:48,010 --> 00:35:03,580
haven't added a page there but you can

00:34:49,899 --> 00:35:09,700
always turn on the topic rather annoying

00:35:03,580 --> 00:35:12,850
to I think if I were gonna do it again I

00:35:09,700 --> 00:35:15,100
would just have the not have a

00:35:12,850 --> 00:35:16,840
translation layer between your input and

00:35:15,100 --> 00:35:19,840
your output file just have identical and

00:35:16,840 --> 00:35:23,470
put an alpha that makes it mentally I

00:35:19,840 --> 00:35:25,420
think I've had this castles were in you

00:35:23,470 --> 00:35:28,470
know a little you know you know in all

00:35:25,420 --> 00:35:31,150
of the four combinations that that can

00:35:28,470 --> 00:35:33,670
spring up there and there are proponents

00:35:31,150 --> 00:35:36,490
of all all those varieties so I think

00:35:33,670 --> 00:35:39,100
it's it's not too bad to have to have a

00:35:36,490 --> 00:35:40,720
single translation layer as long as all

00:35:39,100 --> 00:35:42,940
the plugins are aware that they just

00:35:40,720 --> 00:35:45,490
can't tell which the source file which

00:35:42,940 --> 00:35:50,040
is in this nation file but just go

00:35:45,490 --> 00:35:52,510
through the appropriate function of

00:35:50,040 --> 00:35:57,570
whichever whichever it is in the other

00:35:52,510 --> 00:35:57,570
particular cases and we don't move

00:36:12,250 --> 00:36:17,480
quick come on your idea but like the

00:36:14,960 --> 00:36:20,360
sidebar it will actually solve my

00:36:17,480 --> 00:36:24,080
apparent leading problem because I could

00:36:20,360 --> 00:36:25,550
have a header foul and in the various

00:36:24,080 --> 00:36:29,180
subject areas I would just replace that

00:36:25,550 --> 00:36:33,310
with the local I question so there is an

00:36:29,180 --> 00:36:33,310
open to do I do about it with some ideas

00:36:33,520 --> 00:36:40,340
from about three years ago so you'd be

00:36:37,640 --> 00:36:43,970
basically doing and in the in this up in

00:36:40,340 --> 00:36:49,370
this page something like inline dot dot

00:36:43,970 --> 00:36:51,020
slash dot r slash I'm header or what was

00:36:49,370 --> 00:36:52,760
your idea exactly it's essentially in

00:36:51,020 --> 00:36:54,710
lining but instead of having to manually

00:36:52,760 --> 00:36:58,820
you put the inline directive in it just

00:36:54,710 --> 00:37:03,070
it says if you have say a div with ID oh

00:36:58,820 --> 00:37:03,070
yeah it would inherit just inherit

00:37:03,130 --> 00:37:15,470
actually be even easier from a little

00:37:11,780 --> 00:37:19,340
more more like create under more crazy

00:37:15,470 --> 00:37:21,860
idea um and of the of the of the things

00:37:19,340 --> 00:37:25,490
I've been working on there's been the

00:37:21,860 --> 00:37:28,370
topic of of adding some an adding rdf

00:37:25,490 --> 00:37:30,070
semantics to to a kiwi key which is

00:37:28,370 --> 00:37:32,570
basically what you do when you have

00:37:30,070 --> 00:37:34,670
relationships between pages like this

00:37:32,570 --> 00:37:37,520
page blocks that page in terms of

00:37:34,670 --> 00:37:42,020
backtracking or or having a wiki traded

00:37:37,520 --> 00:37:46,790
through it i start to think about having

00:37:42,020 --> 00:37:49,310
the whole index DB file as the rest as

00:37:46,790 --> 00:37:51,320
an RDF database because basically

00:37:49,310 --> 00:37:53,350
everything everything we stayed so far

00:37:51,320 --> 00:37:57,650
in there as far as I understand it is

00:37:53,350 --> 00:38:01,400
meter data about the pages which lends

00:37:57,650 --> 00:38:03,410
itself to being stored in rdf and could

00:38:01,400 --> 00:38:06,860
then even be could then be easily

00:38:03,410 --> 00:38:08,660
queried the query results could be could

00:38:06,860 --> 00:38:11,840
be validated so we wouldn't have the

00:38:08,660 --> 00:38:15,860
issues of of knowing what and what kind

00:38:11,840 --> 00:38:18,350
of scanned data has changed and I think

00:38:15,860 --> 00:38:20,750
that could solve some of the some of the

00:38:18,350 --> 00:38:23,920
structured data problems or issues as

00:38:20,750 --> 00:38:25,760
well well I'm afraid this would be

00:38:23,920 --> 00:38:32,240
boring

00:38:25,760 --> 00:38:36,170
well ring a minor rewrite wrap my head

00:38:32,240 --> 00:38:37,400
around it I don't know if something like

00:38:36,170 --> 00:38:41,720
you're talking about would be efficient

00:38:37,400 --> 00:38:43,100
or anything like that you know you are

00:38:41,720 --> 00:38:46,190
right everything that's stored in the

00:38:43,100 --> 00:38:48,920
index deep yeah yeah everything in the

00:38:46,190 --> 00:38:52,119
next DB is per page and soul you know

00:38:48,920 --> 00:38:52,119
it's basically a hash from page

00:38:58,330 --> 00:39:04,280
was anyone around who has used to from

00:39:01,850 --> 00:39:22,220
RDF and that context so far or with

00:39:04,280 --> 00:39:25,550
other weak topics I we've come to topics

00:39:22,220 --> 00:39:28,160
I've wanted to talk about yeah that's

00:39:25,550 --> 00:39:31,550
that's exactly nothing Sparkle is the

00:39:28,160 --> 00:39:34,130
query language to two RDF and basically

00:39:31,550 --> 00:39:37,190
we could still have the regular simple

00:39:34,130 --> 00:39:39,740
page specs but we could from rather

00:39:37,190 --> 00:39:45,110
powerful query store the index database

00:39:39,740 --> 00:39:47,660
and have have those results um printed

00:39:45,110 --> 00:39:51,350
there and by caching the queries and the

00:39:47,660 --> 00:39:53,450
results and we could we could observe if

00:39:51,350 --> 00:40:01,010
a chain if it change to the rendered

00:39:53,450 --> 00:40:02,930
page is necessary or not this is kind of

00:40:01,010 --> 00:40:07,630
our automatically done already for some

00:40:02,930 --> 00:40:10,430
page specs it figures out that page spec

00:40:07,630 --> 00:40:13,400
but it only works for page specs and not

00:40:10,430 --> 00:40:16,190
for things like um page title and other

00:40:13,400 --> 00:40:22,150
metadata and that would be just the same

00:40:16,190 --> 00:40:25,160
thing so we could if we didn't have the

00:40:22,150 --> 00:40:29,200
generic sidebar solution we could do for

00:40:25,160 --> 00:40:29,200
example this page title substitution

00:40:35,160 --> 00:40:41,990
yeah so since we were thinking about

00:40:37,700 --> 00:40:41,990
optimizing the index database anyhow

00:40:42,320 --> 00:40:49,890
from the top of your head and now

00:40:45,900 --> 00:40:52,050
something that has performance similar

00:40:49,890 --> 00:40:55,290
to SQLite or something so you don't have

00:40:52,050 --> 00:41:05,310
to rewrite the file continuously and

00:40:55,290 --> 00:41:08,730
that would store RDF triples some of

00:41:05,310 --> 00:41:10,290
them just use SQLite as a back-end so I

00:41:08,730 --> 00:41:11,910
mean a triple store is not something

00:41:10,290 --> 00:41:16,410
terribly complicated to set up in a

00:41:11,910 --> 00:41:19,920
database I thought I'd tell them you

00:41:16,410 --> 00:41:22,500
zhing story about SQLite I was recently

00:41:19,920 --> 00:41:24,270
at a small Linux conference and ended up

00:41:22,500 --> 00:41:26,070
sitting down across from a guy who

00:41:24,270 --> 00:41:28,710
eventually transpired as the author of

00:41:26,070 --> 00:41:31,740
SQLite and we started talking about our

00:41:28,710 --> 00:41:34,050
respective you know version control he's

00:41:31,740 --> 00:41:35,670
also the author of fossil so we talked

00:41:34,050 --> 00:41:39,030
about our respective version control

00:41:35,670 --> 00:41:42,290
backed wiki's but he had a much better

00:41:39,030 --> 00:41:42,290
database story that I did

00:41:49,019 --> 00:42:01,150
is there anyone webmasters of the vww

00:41:53,619 --> 00:42:07,059
does it in the all-around you are part

00:42:01,150 --> 00:42:09,579
of their web team design web team we

00:42:07,059 --> 00:42:13,989
really want to switch from from wml to

00:42:09,579 --> 00:42:21,400
wiki wiki while we'll be missing them

00:42:13,989 --> 00:42:23,410
you know with respect to translation

00:42:21,400 --> 00:42:27,630
there's a lot of things tailored around

00:42:23,410 --> 00:42:30,849
how it works with CVS which is also the

00:42:27,630 --> 00:42:35,650
part of the reason which which stores us

00:42:30,849 --> 00:42:39,160
from switching to any other VCS but I'm

00:42:35,650 --> 00:42:42,400
not objecting to any switch there's a

00:42:39,160 --> 00:42:46,660
lot of auto-generated stuff in the

00:42:42,400 --> 00:42:49,359
website which I understand shouldn't be

00:42:46,660 --> 00:42:52,390
much of a problem with proper toilets

00:42:49,359 --> 00:42:55,269
Ikki wiki plugins but it needed it needs

00:42:52,390 --> 00:42:59,679
someone to write it we also don't object

00:42:55,269 --> 00:43:02,229
to switch to kit but we have to keep in

00:42:59,679 --> 00:43:04,089
mind that a lot of translators only want

00:43:02,229 --> 00:43:06,309
to check out the English language and

00:43:04,089 --> 00:43:10,329
their language and not the complete

00:43:06,309 --> 00:43:15,009
history and and which gets pretty heavy

00:43:10,329 --> 00:43:20,199
for CVS history for well over ten years

00:43:15,009 --> 00:43:22,929
and and 30-something languages so

00:43:20,199 --> 00:43:24,939
switching VCS from that point of view

00:43:22,929 --> 00:43:30,339
isn't that easy

00:43:24,939 --> 00:43:33,309
and also from the generation part it

00:43:30,339 --> 00:43:36,459
needs someone to do the work we don't

00:43:33,309 --> 00:43:39,189
object to it but a lot of people have

00:43:36,459 --> 00:43:42,939
here switch to this and that and when we

00:43:39,189 --> 00:43:45,789
ask them to help us out to make the

00:43:42,939 --> 00:43:49,239
switch happened people turn silent

00:43:45,789 --> 00:43:51,789
pretty quickly I will add the Maliki

00:43:49,239 --> 00:43:54,130
wiki is primarily a get base wiki it

00:43:51,789 --> 00:43:55,089
actually now has excellent CVS support

00:43:54,130 --> 00:43:57,880
from what I'm told

00:43:55,089 --> 00:44:00,489
I've never actually use it but I believe

00:43:57,880 --> 00:44:08,979
that net bsd or something like that is

00:44:00,489 --> 00:44:13,059
using a key wiki with CBS there i'm

00:44:08,979 --> 00:44:16,210
personally absolutely not objecting to

00:44:13,059 --> 00:44:20,759
get but there are some constraints which

00:44:16,210 --> 00:44:23,759
needs to be kept in mind if it works for

00:44:20,759 --> 00:44:23,759
people

00:44:28,069 --> 00:44:33,589
I just kept in my mind that there was

00:44:31,369 --> 00:44:39,049
one thing that I would have liked to

00:44:33,589 --> 00:44:43,789
present which is a basically another way

00:44:39,049 --> 00:44:46,039
of extending Kiki I I figured that the

00:44:43,789 --> 00:44:48,440
thing is when you do template when you

00:44:46,039 --> 00:44:51,079
do template there's sometimes the need

00:44:48,440 --> 00:44:54,769
to do something more powerful than just

00:44:51,079 --> 00:44:58,519
template substitution but usually that

00:44:54,769 --> 00:45:00,650
comes with either very complex nestings

00:44:58,519 --> 00:45:04,190
of directives or nesting of of

00:45:00,650 --> 00:45:06,140
inclusions or writing your own plug-in

00:45:04,190 --> 00:45:10,519
which then again is under completely

00:45:06,140 --> 00:45:12,199
even even if you write plugins per for

00:45:10,519 --> 00:45:13,940
for a particular equivocally instance

00:45:12,199 --> 00:45:16,640
they are not managed in that inside that

00:45:13,940 --> 00:45:20,479
wiki but they are they're independent of

00:45:16,640 --> 00:45:25,209
it what I've came up with for basically

00:45:20,479 --> 00:45:25,209
my my local servers Minecraft Wiki

00:45:40,430 --> 00:45:47,890
just okay maybe I forgot a link in there

00:45:44,140 --> 00:45:51,650
is having having plugins that are

00:45:47,890 --> 00:45:53,720
written as having templates that are

00:45:51,650 --> 00:45:54,280
written in pattern instead of just plain

00:45:53,720 --> 00:45:56,720
text

00:45:54,280 --> 00:45:59,780
the main thing of course this is our

00:45:56,720 --> 00:46:02,600
security considerations but given

00:45:59,780 --> 00:46:05,570
there's there's now a papaya sandbox in

00:46:02,600 --> 00:46:08,000
Debian which can be restricted down to

00:46:05,570 --> 00:46:11,570
not being able to do anything apart from

00:46:08,000 --> 00:46:15,110
reading stunts in and out I'm always

00:46:11,570 --> 00:46:18,140
very leery of language sandboxes I don't

00:46:15,110 --> 00:46:20,060
know if I want to go there are you sure

00:46:18,140 --> 00:46:21,500
that it's restricted to this are you

00:46:20,060 --> 00:46:23,540
sure that it couldn't be used to perform

00:46:21,500 --> 00:46:25,850
side-channel attacks against some other

00:46:23,540 --> 00:46:27,710
thing on the service just by loading the

00:46:25,850 --> 00:46:31,610
CPU and looking at the intervals between

00:46:27,710 --> 00:46:33,290
stuff or you know who knows I mean I I'm

00:46:31,610 --> 00:46:34,850
very leery about putting a

00:46:33,290 --> 00:46:38,870
general-purpose language in the a key

00:46:34,850 --> 00:46:42,260
wiki let's see I'm I I'm a Scott I'm

00:46:38,870 --> 00:46:45,710
roughly as confident in my sandbox than

00:46:42,260 --> 00:46:56,000
I am in the confident in the JavaScript

00:46:45,710 --> 00:46:58,610
engine in my browser and that it's a

00:46:56,000 --> 00:47:01,880
reasonable assumption that it should

00:46:58,610 --> 00:47:04,790
that if if one managed to breaks out

00:47:01,880 --> 00:47:06,680
there's a serious back behind it as as

00:47:04,790 --> 00:47:10,970
there can be a bug everywhere else that

00:47:06,680 --> 00:47:13,340
can be exploited I I mean I just can't

00:47:10,970 --> 00:47:16,070
see this being a default thing I am no

00:47:13,340 --> 00:47:18,140
and so you're still stuck with the

00:47:16,070 --> 00:47:20,540
current not-so-great templates and

00:47:18,140 --> 00:47:22,340
people talked about putting in new ones

00:47:20,540 --> 00:47:24,650
but I'm never sure it's actually better

00:47:22,340 --> 00:47:26,390
I just knew I didn't understand what

00:47:24,650 --> 00:47:28,370
people talked about you know switching

00:47:26,390 --> 00:47:31,070
to a different template system but I'm

00:47:28,370 --> 00:47:35,170
never sure you know it's actually a good

00:47:31,070 --> 00:47:35,170
switch or just something different

00:47:35,470 --> 00:47:44,630
well one thing that was a bit annoying

00:47:41,119 --> 00:47:46,519
for me is that I had a nice wiki and I

00:47:44,630 --> 00:47:49,250
could actually hire somebody to

00:47:46,519 --> 00:47:51,490
translate it for me using the PIO files

00:47:49,250 --> 00:47:53,119
and just said here is G translator

00:47:51,490 --> 00:47:55,190
please do that

00:47:53,119 --> 00:47:57,890
and then I try to hire somebody to write

00:47:55,190 --> 00:48:00,549
to some CSS for me or a template and it

00:47:57,890 --> 00:48:00,549
was completely impossible

00:48:00,589 --> 00:48:05,269
I for one would appreciate something

00:48:03,109 --> 00:48:07,760
that's a bit more in line with modern

00:48:05,269 --> 00:48:09,769
templating systems just because I don't

00:48:07,760 --> 00:48:11,420
have to do all the work myself then see

00:48:09,769 --> 00:48:16,960
the only modern templating system that I

00:48:11,420 --> 00:48:16,960
know is you saw it's what's it called

00:48:22,809 --> 00:48:26,660
yes thank you Shakespeare the

00:48:25,069 --> 00:48:29,029
Shakespearean templates which are types

00:48:26,660 --> 00:48:31,519
they've compiled crazy

00:48:29,029 --> 00:48:35,480
templates which are great but they're

00:48:31,519 --> 00:48:37,400
not appropriate for key wiki so I don't

00:48:35,480 --> 00:48:39,529
know modern templating systems and

00:48:37,400 --> 00:48:41,690
whenever I look at a templating system I

00:48:39,529 --> 00:48:45,350
always feel like it's not right I've

00:48:41,690 --> 00:48:48,449
never seen one that I've been happy with

00:48:45,350 --> 00:48:48,449
[Music]

00:48:58,869 --> 00:49:03,140
think that if we had a built-in language

00:49:01,430 --> 00:49:06,559
maybe make it be JavaScript would be a

00:49:03,140 --> 00:49:09,130
much more web two point whatever rap

00:49:06,559 --> 00:49:09,130
thing

00:49:14,440 --> 00:49:19,270
more ideas or topic to bring topics to

00:49:16,970 --> 00:49:19,270
bring up

00:49:27,190 --> 00:49:32,440
one thing which when I when I talk to

00:49:30,160 --> 00:49:35,500
people about using icky wiki and try to

00:49:32,440 --> 00:49:40,420
make them use icky wiki the really the

00:49:35,500 --> 00:49:43,450
hardest bit is it's really ugly by

00:49:40,420 --> 00:49:45,640
default it's really ugly let's not mince

00:49:43,450 --> 00:49:48,460
words and it's really hard to make it

00:49:45,640 --> 00:49:51,010
pretty I mean you know how how hard it

00:49:48,460 --> 00:49:52,750
was for me to make one particular site

00:49:51,010 --> 00:49:56,230
will you help me but else it's it's it's

00:49:52,750 --> 00:49:59,320
really ugly so I know I totally failed

00:49:56,230 --> 00:50:01,570
to to make it even a tiny little bit

00:49:59,320 --> 00:50:03,820
less ugly so I think it would really

00:50:01,570 --> 00:50:07,480
help if anybody who has the skills to do

00:50:03,820 --> 00:50:10,000
this I know nobody who does would be

00:50:07,480 --> 00:50:13,540
able to to attack it from this side

00:50:10,000 --> 00:50:17,080
because normal people let's call them

00:50:13,540 --> 00:50:22,960
that will not ever start using icky wiki

00:50:17,080 --> 00:50:24,580
as long as its yeah that's and it's a

00:50:22,960 --> 00:50:27,700
really it's a real pity because it's

00:50:24,580 --> 00:50:31,510
it's powerful it's simple it's it can do

00:50:27,700 --> 00:50:34,540
insanely complex things but people won't

00:50:31,510 --> 00:50:37,840
start use it using it and until such a

00:50:34,540 --> 00:50:40,420
point the way I see I need to use it and

00:50:37,840 --> 00:50:42,970
and it's always at least empowered about

00:50:40,420 --> 00:50:45,270
being pretty and appearing to be easy

00:50:42,970 --> 00:50:48,760
and appearing to be user-friendly and

00:50:45,270 --> 00:50:50,620
it's it doesn't appear to be easy and

00:50:48,760 --> 00:50:59,680
user-friendly when you see a very basic

00:50:50,620 --> 00:51:02,050
web interface I mean I stole one myself

00:50:59,680 --> 00:51:06,790
yeah I stole one of those the one place

00:51:02,050 --> 00:51:09,090
yeah I mean having a bootstrap theme

00:51:06,790 --> 00:51:11,200
would help somewhat but I think the

00:51:09,090 --> 00:51:13,200
larger issue that you're getting at is

00:51:11,200 --> 00:51:15,580
that icky wiki was developed for and by

00:51:13,200 --> 00:51:18,580
geeks who don't mind you know

00:51:15,580 --> 00:51:20,380
understanding this stuff and you can

00:51:18,580 --> 00:51:22,570
slap a pretty interface on it but that's

00:51:20,380 --> 00:51:25,270
really not gonna get the crowd who is on

00:51:22,570 --> 00:51:27,400
their Mac and has five seconds total

00:51:25,270 --> 00:51:29,080
attention span to constant you know to

00:51:27,400 --> 00:51:30,100
devote to setting up their wiki and then

00:51:29,080 --> 00:51:32,830
they're moving on to the next shiny

00:51:30,100 --> 00:51:37,420
thing you know there's a lot of this I'm

00:51:32,830 --> 00:51:38,540
not exaggerating you know there's a lot

00:51:37,420 --> 00:51:40,970
of systems that

00:51:38,540 --> 00:51:43,130
do better and this is not an area that I

00:51:40,970 --> 00:51:46,640
personally feel that I need to work on

00:51:43,130 --> 00:51:49,790
and if somebody wants to you know make a

00:51:46,640 --> 00:51:53,240
really easy you know find some way to

00:51:49,790 --> 00:51:54,590
make it easier to set up great I am

00:51:53,240 --> 00:51:58,010
interested in making it look prettier

00:51:54,590 --> 00:51:59,720
because I like the default look but I

00:51:58,010 --> 00:52:04,550
understand why you don't want that to be

00:51:59,720 --> 00:52:05,960
your look and did I change the default

00:52:04,550 --> 00:52:10,190
Vicki wiki site is still using the

00:52:05,960 --> 00:52:12,500
default word good yeah I you know I

00:52:10,190 --> 00:52:17,080
realize that that scares some people off

00:52:12,500 --> 00:52:17,080
but I think that that's okay

00:52:20,380 --> 00:52:27,130
are we just talking about better CSS or

00:52:23,450 --> 00:52:30,350
is there something deeper going on here

00:52:27,130 --> 00:52:33,170
you have to know how to you have to know

00:52:30,350 --> 00:52:34,280
how to you have to realize that you

00:52:33,170 --> 00:52:35,690
don't just when you call in to get

00:52:34,280 --> 00:52:38,360
repository you're not cloning from

00:52:35,690 --> 00:52:39,950
github comm with the repository that you

00:52:38,360 --> 00:52:43,700
created there and edited the page inline

00:52:39,950 --> 00:52:45,440
in your browser and so there's a few you

00:52:43,700 --> 00:52:49,160
know basic pieces of knowledge that you

00:52:45,440 --> 00:52:51,110
have to know no I wasn't I was talking

00:52:49,160 --> 00:52:53,360
about CSS mainly I wasn't talking about

00:52:51,110 --> 00:52:57,680
all the technical background that at

00:52:53,360 --> 00:53:00,020
least in my in my yeah I'm really trying

00:52:57,680 --> 00:53:02,150
to get people to use git based tools and

00:53:00,020 --> 00:53:04,220
one common theme is people who are

00:53:02,150 --> 00:53:07,130
comfortable enough with the technical

00:53:04,220 --> 00:53:10,010
side they they are willing and able to

00:53:07,130 --> 00:53:12,910
do all the technical stuff but they want

00:53:10,010 --> 00:53:15,110
and need something which is pretty

00:53:12,910 --> 00:53:16,700
simply because when they show other

00:53:15,110 --> 00:53:18,650
people they don't want to be told hey

00:53:16,700 --> 00:53:22,700
your website is ugly so it's really

00:53:18,650 --> 00:53:26,030
mainly about the NT user look about CSS

00:53:22,700 --> 00:53:27,740
about whatever to make it I think that's

00:53:26,030 --> 00:53:30,710
completely solvable I mean would you

00:53:27,740 --> 00:53:32,630
feel that if it had a bootstrap look and

00:53:30,710 --> 00:53:35,630
it was fairly well integrated you could

00:53:32,630 --> 00:53:37,130
say for example I had you know tabs to

00:53:35,630 --> 00:53:39,500
the top of the bootstrap thing like you

00:53:37,130 --> 00:53:40,580
normally see on news websites and that

00:53:39,500 --> 00:53:42,590
kind of thing would that be sufficient

00:53:40,580 --> 00:53:46,610
or do you feel that it would need more

00:53:42,590 --> 00:53:49,690
prettiness than that I think it wouldn't

00:53:46,610 --> 00:53:51,820
need that much much prettiness but it

00:53:49,690 --> 00:53:54,160
would need

00:53:51,820 --> 00:53:56,200
common web accepted level of prettiness

00:53:54,160 --> 00:54:00,970
I mean when you look at random websites

00:53:56,200 --> 00:54:03,670
most of them aren't very special at

00:54:00,970 --> 00:54:06,370
least to me but they have a somewhat

00:54:03,670 --> 00:54:09,310
higher level of prettiness you find the

00:54:06,370 --> 00:54:15,460
bootstrap example there it should be in

00:54:09,310 --> 00:54:17,860
the theme market I think also I can I

00:54:15,460 --> 00:54:20,680
mean I can employee I have like at least

00:54:17,860 --> 00:54:23,260
popping up my mind fine five geeky wiki

00:54:20,680 --> 00:54:25,330
websites that I found really pretty most

00:54:23,260 --> 00:54:29,100
of them that I know had to hack on the

00:54:25,330 --> 00:54:31,870
templates also because they were French

00:54:29,100 --> 00:54:51,030
but I can still like show you who you

00:54:31,870 --> 00:54:55,510
want yeah sure one thing FF thought is

00:54:51,030 --> 00:54:59,230
if we push at least the admins of the

00:54:55,510 --> 00:55:02,710
site to jump through these hoops to send

00:54:59,230 --> 00:55:08,170
on a better and cooler technological

00:55:02,710 --> 00:55:11,770
background I thought it's a bit of a

00:55:08,170 --> 00:55:16,870
shame that we don't use this information

00:55:11,770 --> 00:55:19,540
that we have so well so Kiki will tell

00:55:16,870 --> 00:55:25,270
me when the page was last changing it

00:55:19,540 --> 00:55:29,130
but what what I see is that that we have

00:55:25,270 --> 00:55:32,710
not enough information to show a nice

00:55:29,130 --> 00:55:36,070
history like MediaWiki does we could

00:55:32,710 --> 00:55:39,460
even show a nice branching and merging

00:55:36,070 --> 00:55:42,880
graph like like it helped us out of the

00:55:39,460 --> 00:55:44,770
box so how do you feel about a key wiki

00:55:42,880 --> 00:55:51,910
digging through the history to to

00:55:44,770 --> 00:55:55,180
extract that kind of thing well in a way

00:55:51,910 --> 00:55:56,980
I like keeping it simple and just saying

00:55:55,180 --> 00:55:58,960
here's how you can integrate with git

00:55:56,980 --> 00:56:00,430
web or with your browser of choice so

00:55:58,960 --> 00:56:04,270
that I don't have to worry about

00:56:00,430 --> 00:56:05,290
maintaining all that stuff in on the

00:56:04,270 --> 00:56:06,880
other hand

00:56:05,290 --> 00:56:08,920
I think it'd be great if there were some

00:56:06,880 --> 00:56:10,780
kind of a plug-in or something you could

00:56:08,920 --> 00:56:13,150
go back and render historical versions

00:56:10,780 --> 00:56:14,830
of pages on the fly and be able to you

00:56:13,150 --> 00:56:18,940
know browse back through the history and

00:56:14,830 --> 00:56:20,380
that kind of things so so that's kind of

00:56:18,940 --> 00:56:22,060
a dichotomy I don't know which side of

00:56:20,380 --> 00:56:24,490
it I come down on I think that if

00:56:22,060 --> 00:56:26,470
somebody took the work to make a plug-in

00:56:24,490 --> 00:56:28,090
that did something cool with the get

00:56:26,470 --> 00:56:29,740
history I would probably say okay fine

00:56:28,090 --> 00:56:33,330
I'll put it in this also didn't have a

00:56:29,740 --> 00:56:33,330
lot of crazy dependencies or something

00:56:33,930 --> 00:56:38,530
you know I think you're very right about

00:56:35,920 --> 00:56:40,630
not taking advantage of all this and my

00:56:38,530 --> 00:56:43,950
original idea with the key wiki or with

00:56:40,630 --> 00:56:48,220
what came before wiki wiki was to have a

00:56:43,950 --> 00:56:50,050
probably a dynamic wiki that allowed you

00:56:48,220 --> 00:56:51,580
to actually fork and Traverse different

00:56:50,050 --> 00:56:54,310
Forks and go back and forth and all that

00:56:51,580 --> 00:56:56,590
kind of thing you know on the fly and

00:56:54,310 --> 00:56:59,590
see the site you know as it was at that

00:56:56,590 --> 00:57:02,410
point in history and so on and take full

00:56:59,590 --> 00:57:05,230
advantage of version control so but

00:57:02,410 --> 00:57:08,220
moving to a static site kind of you know

00:57:05,230 --> 00:57:08,220
took a little bit of that away

00:57:13,250 --> 00:57:19,450
I still trying to sure to show other

00:57:17,150 --> 00:57:19,450
themes

00:57:28,220 --> 00:57:39,140
so all these are like he's pleased you

00:57:33,680 --> 00:57:41,270
have JavaScript you activated could you

00:57:39,140 --> 00:57:44,449
just actually a JavaScript on this one

00:57:41,270 --> 00:57:44,449
[Music]

00:57:46,480 --> 00:57:51,560
yeah just this one just you know to show

00:57:49,579 --> 00:57:55,970
you this is one trick that I came with

00:57:51,560 --> 00:58:00,349
so it's a radio show and you still don't

00:57:55,970 --> 00:58:02,569
have to ask evaluated do you yeah so

00:58:00,349 --> 00:58:04,310
maybe it's broken but so basically you

00:58:02,569 --> 00:58:07,339
have JavaScript that that's fine the mp4

00:58:04,310 --> 00:58:12,380
mp3 links and replace them with an

00:58:07,339 --> 00:58:18,349
online audio tag so actually you get you

00:58:12,380 --> 00:58:20,770
get to get the ratio can you back to

00:58:18,349 --> 00:58:20,770
yours

00:58:25,329 --> 00:58:47,180
that's jyi SP yeah gonna also show you

00:58:39,950 --> 00:58:51,650
already more or less than people and

00:58:47,180 --> 00:58:53,720
then as in at least one thing that is

00:58:51,650 --> 00:58:57,800
nice i was emitted was the if you go on

00:58:53,720 --> 00:58:59,839
the home page there is a you still have

00:58:57,800 --> 00:59:02,630
javascript the equivalent so there's a

00:58:59,839 --> 00:59:05,060
calendar here there's actually walking

00:59:02,630 --> 00:59:08,109
with cohen JavaScript to display a

00:59:05,060 --> 00:59:13,339
calendar in a way that is actually

00:59:08,109 --> 00:59:15,740
feature no yeah because of the way it

00:59:13,339 --> 00:59:19,520
was too slow to rebuild every single

00:59:15,740 --> 00:59:26,540
pages every time the calendar changed so

00:59:19,520 --> 00:59:28,760
that was a million I think tails the

00:59:26,540 --> 00:59:30,380
biggest city wiki website that I've ever

00:59:28,760 --> 00:59:35,450
been as far as I understood because they

00:59:30,380 --> 00:59:39,339
were like several thousand of page of

00:59:35,450 --> 00:59:39,339
Commons or I mean intricate

00:59:41,220 --> 00:59:49,860
before we disabled our web forum like a

00:59:44,740 --> 00:59:53,820
month ago we had about 3,000 threads and

00:59:49,860 --> 00:59:58,120
something like 10,000 comments and

00:59:53,820 --> 01:00:02,070
rebuilding the old website to update the

00:59:58,120 --> 01:00:13,960
sidebar that shows the latest release

01:00:02,070 --> 01:00:15,670
version was a bit slow we talked earlier

01:00:13,960 --> 01:00:17,860
about the multiple sidebars things is

01:00:15,670 --> 01:00:19,180
kind of one of the blockers to it is I

01:00:17,860 --> 01:00:21,490
know that people are gonna get into this

01:00:19,180 --> 01:00:23,470
kind of situation with other things if

01:00:21,490 --> 01:00:25,000
ITIF it has the ability to have a header

01:00:23,470 --> 01:00:27,520
and a footer and all that they're going

01:00:25,000 --> 01:00:28,960
to act and realize that oh if I change

01:00:27,520 --> 01:00:31,630
this to take this to rebuild and it

01:00:28,960 --> 01:00:34,870
takes forever and so we need some kind

01:00:31,630 --> 01:00:38,020
of solution yeah but it already but it

01:00:34,870 --> 01:00:40,120
already does well yeah and actually

01:00:38,020 --> 01:00:42,610
people are putting stuff in the sidebar

01:00:40,120 --> 01:00:45,040
which is a little problem I have to

01:00:42,610 --> 01:00:46,780
support right you know I often have to

01:00:45,040 --> 01:00:50,460
help somebody who tried to put a

01:00:46,780 --> 01:00:50,460
calendar in there or something it didn't

01:00:57,090 --> 01:01:04,210
I think are you running with PO on all

01:01:00,310 --> 01:01:05,950
of your okay so so it's only a few pages

01:01:04,210 --> 01:01:07,600
that are using PO and then the rest was

01:01:05,950 --> 01:01:10,200
just scalability of the index file

01:01:07,600 --> 01:01:10,200
probably

01:01:13,289 --> 01:01:21,140
yeah I think we're a little out of time

01:01:17,279 --> 01:01:21,140
for people who want to join other talks

01:01:21,410 --> 01:01:26,849
are they let's say final questions at

01:01:24,509 --> 01:01:30,809
least for the part that's being recorded

01:01:26,849 --> 01:01:36,569
or that's the general official type come

01:01:30,809 --> 01:01:38,609
to 13 Nicky we keep er so less Thank You

01:01:36,569 --> 01:01:42,440
Joey for answering many questions thank

01:01:38,609 --> 01:01:42,440
you for organizing this some pretty long

01:01:43,460 --> 01:01:49,070

YouTube URL: https://www.youtube.com/watch?v=UCyu_kD-q9w


