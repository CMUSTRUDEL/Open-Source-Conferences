Title: Bits from the DPL
Publication date: 2017-11-28
Playlist: DebConf 13
Description: 
	by Lucas Nussbaum

At: DebConf13
https://debconf13.debconf.org/
Room: Main talk room
Scheduled start: 2013-08-11 10:30:00
Captions: 
	00:00:01,100 --> 00:00:06,450
Lukas Nussbaum well the current Debian

00:00:04,290 --> 00:00:18,000
project leader will deliver the bits

00:00:06,450 --> 00:00:18,300
from the Debian project leader now thank

00:00:18,000 --> 00:00:22,710
you

00:00:18,300 --> 00:00:24,960
okay so to start I want you to start

00:00:22,710 --> 00:00:26,880
from what the sides of Debian that

00:00:24,960 --> 00:00:28,980
people encounter and usually when people

00:00:26,880 --> 00:00:31,199
meet Debian for the first time it's a

00:00:28,980 --> 00:00:33,469
it's about the technical project so we

00:00:31,199 --> 00:00:35,940
are project building a very successful

00:00:33,469 --> 00:00:37,590
distribution with a real impact of the

00:00:35,940 --> 00:00:39,480
world that's really great because when

00:00:37,590 --> 00:00:42,000
you we can go basically anywhere on

00:00:39,480 --> 00:00:43,800
earth and meet people using Debian or

00:00:42,000 --> 00:00:44,309
using the done derivatives we know about

00:00:43,800 --> 00:00:46,800
bbyong

00:00:44,309 --> 00:00:48,030
and if you try to Debian t-shirts every

00:00:46,800 --> 00:00:50,190
day and you will see that many people

00:00:48,030 --> 00:00:52,610
recognize Debian that's really it's

00:00:50,190 --> 00:00:52,610
really cool

00:00:52,850 --> 00:01:01,199
yeah in space - yeah that's true but you

00:00:56,969 --> 00:01:03,359
it's other to meet people in space but

00:01:01,199 --> 00:01:05,369
then that's also the philosophical and

00:01:03,359 --> 00:01:07,110
political project about promoting and

00:01:05,369 --> 00:01:10,200
defending free software and what's

00:01:07,110 --> 00:01:13,250
really cool about Debian is that we do

00:01:10,200 --> 00:01:15,689
that but with reality check about

00:01:13,250 --> 00:01:18,390
technical parts which work like a

00:01:15,689 --> 00:01:21,900
feedback cycle between the technical

00:01:18,390 --> 00:01:25,259
part and the philosophical part and we

00:01:21,900 --> 00:01:28,350
are not doing politics in the blind we

00:01:25,259 --> 00:01:31,340
are doing politics with while making

00:01:28,350 --> 00:01:34,290
sure that what we propose actually works

00:01:31,340 --> 00:01:37,079
and then there's a social experiment

00:01:34,290 --> 00:01:41,520
with thousands of volunteer contributors

00:01:37,079 --> 00:01:44,159
all over the world and well debconf is

00:01:41,520 --> 00:01:46,020
really were building this community the

00:01:44,159 --> 00:01:48,299
key outcome of the confident really

00:01:46,020 --> 00:01:50,100
think that this place is a fantastic

00:01:48,299 --> 00:01:54,060
place to have a successful comp that

00:01:50,100 --> 00:01:57,630
will help build the Debian community so

00:01:54,060 --> 00:02:00,990
I try to find a symbol better than a

00:01:57,630 --> 00:02:03,180
group photo to describe that

00:02:00,990 --> 00:02:05,850
international community of contributors

00:02:03,180 --> 00:02:07,439
and I came up with power plugs because I

00:02:05,850 --> 00:02:09,860
think that really shows the diversity of

00:02:07,439 --> 00:02:09,860
Debian

00:02:10,849 --> 00:02:17,310
so the question I get I get asked quite

00:02:14,069 --> 00:02:20,160
often as a project leader is always the

00:02:17,310 --> 00:02:22,470
undoing and I think that most of the

00:02:20,160 --> 00:02:24,810
project is working fine I decided to

00:02:22,470 --> 00:02:27,330
single out one team because usually it's

00:02:24,810 --> 00:02:30,870
a team that gets a lot of blame it's a

00:02:27,330 --> 00:02:34,560
FTP master scheme and actually probably

00:02:30,870 --> 00:02:37,019
most of you know that new processing had

00:02:34,560 --> 00:02:39,630
some small issues during the last few

00:02:37,019 --> 00:02:42,660
weeks but if you look at the the data at

00:02:39,630 --> 00:02:45,150
our data there are seven members of my

00:02:42,660 --> 00:02:47,580
Master's that were doing new processing

00:02:45,150 --> 00:02:50,489
since the beginning of July I don't know

00:02:47,580 --> 00:02:53,760
if probably that's that might be one of

00:02:50,489 --> 00:02:56,280
the most active team in terms of active

00:02:53,760 --> 00:02:58,530
Debian developers seven looks like huge

00:02:56,280 --> 00:03:02,610
polish Deb come chief the Babcock team

00:02:58,530 --> 00:03:05,760
might have more but still and in the

00:03:02,610 --> 00:03:11,730
beginning of August VI processed 284

00:03:05,760 --> 00:03:14,010
packages like an 11 days versus only 73

00:03:11,730 --> 00:03:18,239
pipe uploads in the queue

00:03:14,010 --> 00:03:23,910
you're put in the cube also we released

00:03:18,239 --> 00:03:26,220
with the finally it's quite obvious that

00:03:23,910 --> 00:03:29,250
this cycle was a bit painful

00:03:26,220 --> 00:03:32,609
compared to the previous cycles if you

00:03:29,250 --> 00:03:39,030
look at the length of the cycle we're a

00:03:32,609 --> 00:03:43,980
bit above our recent previous cycles and

00:03:39,030 --> 00:03:47,430
the freeze was quite long so we started

00:03:43,980 --> 00:03:51,840
the development of Jessie with the usual

00:03:47,430 --> 00:03:54,930
bump of other bugs and Jesse will be a

00:03:51,840 --> 00:03:57,930
quite challenging cycle we really need

00:03:54,930 --> 00:03:59,819
to work on returning to shorter freeze

00:03:57,930 --> 00:04:01,079
because long freeze are really not

00:03:59,819 --> 00:04:04,040
healthy for the project

00:04:01,079 --> 00:04:09,989
and we have some difficult decisions to

00:04:04,040 --> 00:04:13,440
to take first one about unit systems and

00:04:09,989 --> 00:04:15,389
also I think that during this cycle but

00:04:13,440 --> 00:04:17,940
well at the beginning of this cycle by

00:04:15,389 --> 00:04:20,220
many architectures where the status is

00:04:17,940 --> 00:04:23,729
not completely

00:04:20,220 --> 00:04:27,090
probably we need to have quite difficult

00:04:23,729 --> 00:04:29,550
discussions about some architectures so

00:04:27,090 --> 00:04:33,840
I think that we should be really careful

00:04:29,550 --> 00:04:36,120
in doing making these decisions the

00:04:33,840 --> 00:04:38,009
Debian way that is make sure that you

00:04:36,120 --> 00:04:40,979
better take the best technical decisions

00:04:38,009 --> 00:04:43,259
but once the decision will be taken I

00:04:40,979 --> 00:04:45,479
think we really need to stand behind

00:04:43,259 --> 00:04:49,830
that that's a decision as a project and

00:04:45,479 --> 00:04:57,360
we should not let ourself be divided by

00:04:49,830 --> 00:04:58,139
the decision so Debian is almost 20

00:04:57,360 --> 00:05:00,090
years old

00:04:58,139 --> 00:05:01,380
but actually that's an age where most

00:05:00,090 --> 00:05:03,330
people stop growing

00:05:01,380 --> 00:05:07,620
but the journey still changing quite a

00:05:03,330 --> 00:05:10,770
lot if you look at well if you want to

00:05:07,620 --> 00:05:13,110
sleep in 2005 and wake up no probably

00:05:10,770 --> 00:05:14,880
the Debian project will look very

00:05:13,110 --> 00:05:18,569
different unless you know that movie

00:05:14,880 --> 00:05:20,840
about someone getting two commands and

00:05:18,569 --> 00:05:23,880
waking up after the Berlin Wall was

00:05:20,840 --> 00:05:27,770
broken down but it would be fun to have

00:05:23,880 --> 00:05:34,889
someone waiting up now after eight years

00:05:27,770 --> 00:05:37,080
so first team maintenance most well

00:05:34,889 --> 00:05:42,440
majority of packages in Debian are

00:05:37,080 --> 00:05:45,810
maintained by teams no since about 2012

00:05:42,440 --> 00:05:49,949
so the red line is package is maintained

00:05:45,810 --> 00:05:52,770
by teams Green Line is package not

00:05:49,949 --> 00:05:54,120
comment end and the others are one

00:05:52,770 --> 00:05:59,009
community not to comment a nurse

00:05:54,120 --> 00:06:01,110
recommend tennis etc so team maintenance

00:05:59,009 --> 00:06:02,580
is really the new way to maintenance to

00:06:01,110 --> 00:06:06,240
maintain stuff in Debian but then we

00:06:02,580 --> 00:06:08,669
have a problem we have teams that get em

00:06:06,240 --> 00:06:10,440
I used to have developers of grammar I

00:06:08,669 --> 00:06:13,139
know we have teams that go a mile and

00:06:10,440 --> 00:06:16,050
actually we are not quite good as a tech

00:06:13,139 --> 00:06:17,729
team is that when I did survey about new

00:06:16,050 --> 00:06:20,159
contributors one of them added a nice

00:06:17,729 --> 00:06:22,740
story while not so nice actually

00:06:20,159 --> 00:06:25,199
they created a team with only one didi

00:06:22,740 --> 00:06:27,080
to maintain a set of packages and then

00:06:25,199 --> 00:06:30,530
the LED went mi and

00:06:27,080 --> 00:06:32,479
team was still active but with no one to

00:06:30,530 --> 00:06:35,060
talk to to upload the packages so it's

00:06:32,479 --> 00:06:38,270
kind of lonely island in the middle of

00:06:35,060 --> 00:06:40,219
Debian and we are really stuck up for

00:06:38,270 --> 00:06:46,939
detecting that currently we need to work

00:06:40,219 --> 00:06:49,159
on that something else is the use of VCS

00:06:46,939 --> 00:06:51,740
is to let's relate it to teams actually

00:06:49,159 --> 00:06:55,520
to maintain packages in Belgium so the

00:06:51,740 --> 00:06:58,870
Green Line sir is get the red lines is

00:06:55,520 --> 00:07:03,740
Novus years and the blue line is as VN

00:06:58,870 --> 00:07:06,250
so get is clearly taking over all of

00:07:03,740 --> 00:07:16,039
those solutions well dark is increasing

00:07:06,250 --> 00:07:18,349
why sometimes but a skeleton maybe but

00:07:16,039 --> 00:07:21,919
get is really the new standard to

00:07:18,349 --> 00:07:23,840
maintain packages but which way well we

00:07:21,919 --> 00:07:26,360
have several ways to maintain packages

00:07:23,840 --> 00:07:29,210
using git each team times two tends to

00:07:26,360 --> 00:07:31,580
develop its own workflow which with its

00:07:29,210 --> 00:07:33,610
own procedures and that freely sucks

00:07:31,580 --> 00:07:36,469
with other project we will need to

00:07:33,610 --> 00:07:40,129
standardize on a single way to maintain

00:07:36,469 --> 00:07:42,710
packages and not off the project divided

00:07:40,129 --> 00:07:46,129
into smaller projects which each its own

00:07:42,710 --> 00:07:48,349
way to maintain packages so that's

00:07:46,129 --> 00:07:50,900
really some work to do in that area

00:07:48,349 --> 00:07:54,050
about it would be it would be fantastic

00:07:50,900 --> 00:07:56,360
if some teams use debconf to come

00:07:54,050 --> 00:08:02,389
together and decide on a standard way to

00:07:56,360 --> 00:08:07,250
maintain get packages using it and then

00:08:02,389 --> 00:08:11,620
vests also packaging helpers so the the

00:08:07,250 --> 00:08:15,620
blue line is the edge the red line is

00:08:11,620 --> 00:08:18,740
3dhd belper and the Green Line is a DBS

00:08:15,620 --> 00:08:20,690
so that that graph is always funny quite

00:08:18,740 --> 00:08:22,729
funny because VH was originally

00:08:20,690 --> 00:08:25,219
advertised at the C DBS killer and

00:08:22,729 --> 00:08:30,949
actually it's not really killing the DBS

00:08:25,219 --> 00:08:34,370
Moura killing developer but well but

00:08:30,949 --> 00:08:37,370
still that face is a question what do we

00:08:34,370 --> 00:08:39,990
do about our formal way to maintain

00:08:37,370 --> 00:08:43,469
packages we are quite slow in

00:08:39,990 --> 00:08:46,019
at duplicating the previous standard way

00:08:43,469 --> 00:08:49,440
to maintain packages clearly the edge is

00:08:46,019 --> 00:08:53,970
no the new standard but while packages

00:08:49,440 --> 00:08:56,959
are only slowly becoming migrated to the

00:08:53,970 --> 00:09:02,009
edge oh by the way if you were wondering

00:08:56,959 --> 00:09:03,870
those kind of staircase steps than 2,000

00:09:02,009 --> 00:09:05,880
feet so you can see that things slow

00:09:03,870 --> 00:09:11,759
flow don't doing reasons and start up

00:09:05,880 --> 00:09:14,310
again which is expected so debian is

00:09:11,759 --> 00:09:16,350
almost twenty years old so first I

00:09:14,310 --> 00:09:19,579
thought that a clarification was needed

00:09:16,350 --> 00:09:22,800
as ice computer geeks it's in decimal

00:09:19,579 --> 00:09:25,139
and when you see that you ask you can

00:09:22,800 --> 00:09:28,500
ask yourself another question which is

00:09:25,139 --> 00:09:31,350
what should we do before which in 29 X

00:09:28,500 --> 00:09:33,240
actually I'm 20 I'm turning 20 in X this

00:09:31,350 --> 00:09:35,579
year so that something I gave some

00:09:33,240 --> 00:09:40,199
thought oh maybe

00:09:35,579 --> 00:09:42,060
oops oh okay that's problem with making

00:09:40,199 --> 00:09:43,500
last-minute changes to presentations

00:09:42,060 --> 00:09:47,579
it's okay

00:09:43,500 --> 00:09:49,410
or maybe what should we do before well

00:09:47,579 --> 00:09:55,980
during the next few years what are the

00:09:49,410 --> 00:09:58,620
big challenges so first if you look at

00:09:55,980 --> 00:10:01,709
the global picture around the beyond we

00:09:58,620 --> 00:10:05,310
have option projects we have users and

00:10:01,709 --> 00:10:07,860
again is in the middle we get software

00:10:05,310 --> 00:10:09,180
from upstream projects and we turn them

00:10:07,860 --> 00:10:13,709
into packages that we distribute to

00:10:09,180 --> 00:10:16,980
users and we get feedback and burden

00:10:13,709 --> 00:10:22,170
sometimes batteries from users and we

00:10:16,980 --> 00:10:23,610
followed them to extreme projects or we

00:10:22,170 --> 00:10:25,350
try to add something we sometimes

00:10:23,610 --> 00:10:28,620
forward them to option project possibly

00:10:25,350 --> 00:10:31,019
whisper add with adding patches that's

00:10:28,620 --> 00:10:33,230
not the only thing we also after beyond

00:10:31,019 --> 00:10:37,620
derivatives for which we have the same

00:10:33,230 --> 00:10:41,759
Chimel and some of them also have their

00:10:37,620 --> 00:10:45,029
own derivatives and so that's really the

00:10:41,759 --> 00:10:46,740
picture of oh it should be with debian

00:10:45,029 --> 00:10:52,430
really at the center of the free

00:10:46,740 --> 00:10:52,430
software ecosystem but some of those

00:10:52,680 --> 00:11:00,279
some of those dreams don't work so well

00:10:56,050 --> 00:11:03,130
in some cases so one can ask whether we

00:11:00,279 --> 00:11:05,260
are always a good good downstream for

00:11:03,130 --> 00:11:07,870
our upstream and a good upstream for our

00:11:05,260 --> 00:11:10,660
derivatives and I think that's room for

00:11:07,870 --> 00:11:13,300
improvement in some cases relationship

00:11:10,660 --> 00:11:16,240
we have with don't swim zarab swims it's

00:11:13,300 --> 00:11:18,430
really it's really good but some cases

00:11:16,240 --> 00:11:20,920
we we can do better and that I rely on

00:11:18,430 --> 00:11:23,829
really reinforce the position of Debian

00:11:20,920 --> 00:11:26,310
at in the center of vehicle system so

00:11:23,829 --> 00:11:30,279
what simple things you can do first

00:11:26,310 --> 00:11:31,750
contact you up streams when you when you

00:11:30,279 --> 00:11:33,639
start maintaining something it's really

00:11:31,750 --> 00:11:36,519
important that you talk to your three if

00:11:33,639 --> 00:11:39,100
you haven't if you have an upstream so

00:11:36,519 --> 00:11:40,870
talk to talk to them ask them to review

00:11:39,100 --> 00:11:43,240
your plans if you plan to package a new

00:11:40,870 --> 00:11:45,100
option version it's good to send them an

00:11:43,240 --> 00:11:48,100
email before answered can comment on

00:11:45,100 --> 00:11:49,269
whether you should do that or just wait

00:11:48,100 --> 00:11:52,750
for the next three years or something

00:11:49,269 --> 00:11:57,600
like that provide them with feedback and

00:11:52,750 --> 00:12:00,399
bug reports we have something that's not

00:11:57,600 --> 00:12:02,290
very well known she's patch Walker the

00:12:00,399 --> 00:12:05,050
debian dot org that extracted that

00:12:02,290 --> 00:12:09,690
extracts patches from the Genpact AG so

00:12:05,050 --> 00:12:12,519
that app swim can easily integrate them

00:12:09,690 --> 00:12:16,240
ask them to subscribe to the packages on

00:12:12,519 --> 00:12:18,100
the pts so a few I know a few package

00:12:16,240 --> 00:12:22,120
for example call utils where the

00:12:18,100 --> 00:12:24,370
upstream maintainer actually replying to

00:12:22,120 --> 00:12:26,740
Berg's in the back file in the Debian

00:12:24,370 --> 00:12:28,720
bug tracking system and that just great

00:12:26,740 --> 00:12:29,980
because users report bugs in Debian we

00:12:28,720 --> 00:12:32,290
actually maintain our comments on the

00:12:29,980 --> 00:12:35,290
blog directly in the BTS it's perfect

00:12:32,290 --> 00:12:37,660
way to work not all up streams want to

00:12:35,290 --> 00:12:40,380
work that way but when they when they

00:12:37,660 --> 00:12:43,839
will get to work that way just fantastic

00:12:40,380 --> 00:12:47,139
look at your own streams at our done

00:12:43,839 --> 00:12:49,540
swims are bugs and patches and there's a

00:12:47,139 --> 00:12:53,560
panel tomorrow at the cove about

00:12:49,540 --> 00:12:56,680
derivatives would be good idea we had a

00:12:53,560 --> 00:12:59,800
large audience attending but more

00:12:56,680 --> 00:13:01,870
generally I think that we need to keep

00:12:59,800 --> 00:13:04,070
in mind that Debian is also about

00:13:01,870 --> 00:13:06,230
improving free software the wall and

00:13:04,070 --> 00:13:08,510
not work well we should work on

00:13:06,230 --> 00:13:10,220
improving Debian but we should really

00:13:08,510 --> 00:13:12,200
get the keep the global picture of

00:13:10,220 --> 00:13:14,840
improving the improving free software

00:13:12,200 --> 00:13:16,220
improving the world generally and for

00:13:14,840 --> 00:13:21,170
that we need to be a good player and

00:13:16,220 --> 00:13:24,650
collaborate with all entities so then

00:13:21,170 --> 00:13:27,110
the ecosystem around around us is

00:13:24,650 --> 00:13:30,530
changing everybody is talking about

00:13:27,110 --> 00:13:34,360
cloud which is a nice buzz word but not

00:13:30,530 --> 00:13:36,700
only a buzz word and it means

00:13:34,360 --> 00:13:39,560
virtualization elasticity of

00:13:36,700 --> 00:13:43,580
infrastructure and software and our

00:13:39,560 --> 00:13:46,870
model where we you install system once

00:13:43,580 --> 00:13:50,540
and then you upgrade it for 10 years

00:13:46,870 --> 00:13:52,940
using several Debian release it becomes

00:13:50,540 --> 00:13:54,590
less relevant with that ecosystem

00:13:52,940 --> 00:13:57,290
because you just start up a new virtual

00:13:54,590 --> 00:14:02,150
machine you don't need to need to

00:13:57,290 --> 00:14:03,860
upgrade Lybian that often anymore and we

00:14:02,150 --> 00:14:08,150
have that which is many challenges for

00:14:03,860 --> 00:14:10,280
Debian first the cloud as potent as

00:14:08,150 --> 00:14:13,210
punch it buys many people is taking

00:14:10,280 --> 00:14:17,360
freedom away from users so we need to

00:14:13,210 --> 00:14:19,790
work towards preserving that freedom and

00:14:17,360 --> 00:14:24,350
we have several ways to do that for

00:14:19,790 --> 00:14:26,480
example we can package software so that

00:14:24,350 --> 00:14:32,440
user can deploy their own private cloud

00:14:26,480 --> 00:14:35,450
so we are doing that versus imagine for

00:14:32,440 --> 00:14:38,530
improvements the rights these are really

00:14:35,450 --> 00:14:41,960
really add software stacks

00:14:38,530 --> 00:14:44,030
many will split in many different

00:14:41,960 --> 00:14:48,980
packages with custom configuration of

00:14:44,030 --> 00:14:55,280
services and well more manpower on that

00:14:48,980 --> 00:14:58,690
part would be really nice then we also

00:14:55,280 --> 00:15:00,250
should work on packaging path tax and

00:14:58,690 --> 00:15:03,980
sales tax

00:15:00,250 --> 00:15:06,590
standardizing platform development

00:15:03,980 --> 00:15:08,690
platform deployment platform and adding

00:15:06,590 --> 00:15:11,510
is you standard platform in Debian is

00:15:08,690 --> 00:15:13,670
really important so for us actually we

00:15:11,510 --> 00:15:14,900
run into the usual problem of web

00:15:13,670 --> 00:15:16,230
applications packaging

00:15:14,900 --> 00:15:20,360
that's not something

00:15:16,230 --> 00:15:24,540
particularly strong at and it's

00:15:20,360 --> 00:15:29,360
increasingly important but then on a

00:15:24,540 --> 00:15:32,760
more technical level the world is using

00:15:29,360 --> 00:15:34,320
puppet and chef everywhere or is trying

00:15:32,760 --> 00:15:37,020
to use puppet on a better chef

00:15:34,320 --> 00:15:38,880
everywhere and one can wonder what's the

00:15:37,020 --> 00:15:42,030
role of package of Debian packages

00:15:38,880 --> 00:15:44,580
package managers and of configuration

00:15:42,030 --> 00:15:47,850
using Deb convinced that world and we

00:15:44,580 --> 00:15:50,520
might need to evaluate what we do and

00:15:47,850 --> 00:15:55,040
maybe adapt a bit so that can better

00:15:50,520 --> 00:15:57,630
integrate with those tools and for

00:15:55,040 --> 00:16:01,920
public clouds that's also the question

00:15:57,630 --> 00:16:05,460
of official Debian images what does it

00:16:01,920 --> 00:16:09,950
mean to provide Debian on on a public

00:16:05,460 --> 00:16:15,210
cloud such as Google's or Amazon's

00:16:09,950 --> 00:16:19,950
clouds so if you look at at vcos debconf

00:16:15,210 --> 00:16:23,400
schedule 8 cloud rated sessions at

00:16:19,950 --> 00:16:32,390
DEFCON and I hope that while we can

00:16:23,400 --> 00:16:34,680
address or work on all those topics so

00:16:32,390 --> 00:16:39,960
probably something that will raise some

00:16:34,680 --> 00:16:44,310
discussions I think we should look into

00:16:39,960 --> 00:16:46,200
meeting all our users needs so we have

00:16:44,310 --> 00:16:49,830
Debian testing which is the first and

00:16:46,200 --> 00:16:52,080
the best rolling distribution and I

00:16:49,830 --> 00:16:54,840
think we should really acknowledge that

00:16:52,080 --> 00:16:57,720
and advertise testing as such other

00:16:54,840 --> 00:16:59,880
other rolling distributions so testing

00:16:57,720 --> 00:17:03,510
is already widely used during the last

00:16:59,880 --> 00:17:07,310
few days I made some stats from Debian

00:17:03,510 --> 00:17:11,630
mirror and actually if you look at the

00:17:07,310 --> 00:17:16,470
HTTP logs from that mirror you see that

00:17:11,630 --> 00:17:20,610
so what I did was take the log grab for

00:17:16,470 --> 00:17:22,680
people fetching the packages file and

00:17:20,610 --> 00:17:29,530
then look at which IP fat cheese which

00:17:22,680 --> 00:17:32,040
packages file and 42% of you

00:17:29,530 --> 00:17:36,220
of that mural fetched the squeeze

00:17:32,040 --> 00:17:40,030
packages file 60% see wizzy 112 pass on

00:17:36,220 --> 00:17:45,790
the testing 1 and 11% unstable one so

00:17:40,030 --> 00:17:47,290
it's not well clearly more users or but

00:17:45,790 --> 00:17:50,400
two possibilities either we have very

00:17:47,290 --> 00:17:54,670
few users and many developers or we have

00:17:50,400 --> 00:17:57,940
quite a lot of users using testing and

00:17:54,670 --> 00:17:59,680
and or unstable if you look at the

00:17:57,940 --> 00:18:03,460
popularity contest submitted so this

00:17:59,680 --> 00:18:05,350
doesn't add up to 100 because one

00:18:03,460 --> 00:18:09,670
specific IP can fetch several packages

00:18:05,350 --> 00:18:11,890
file if you look at popularity contest

00:18:09,670 --> 00:18:13,750
submitters so looking at the version of

00:18:11,890 --> 00:18:16,930
the popularity contest package that is

00:18:13,750 --> 00:18:21,640
used to submit the results we have about

00:18:16,930 --> 00:18:25,380
10% of people using testing on stable so

00:18:21,640 --> 00:18:28,740
and actually that shares the blue shaza

00:18:25,380 --> 00:18:31,870
it varies quite a lot doing cycles and

00:18:28,740 --> 00:18:33,370
at the end of the with the cycle just

00:18:31,870 --> 00:18:40,930
before the release it was a lot more

00:18:33,370 --> 00:18:42,910
people using testing on stable so that's

00:18:40,930 --> 00:18:45,190
not something new we have people lots of

00:18:42,910 --> 00:18:47,740
people using testing and unstable but

00:18:45,190 --> 00:18:49,570
there are also many other good reason to

00:18:47,740 --> 00:18:55,120
go into the direction of a rolling

00:18:49,570 --> 00:18:57,430
release first it makes us provide more

00:18:55,120 --> 00:18:59,500
recent software to users so for the free

00:18:57,430 --> 00:19:01,870
software community in general it means

00:18:59,500 --> 00:19:04,200
that we build a shorter feedback loop

00:19:01,870 --> 00:19:07,840
back loop between upstream projects and

00:19:04,200 --> 00:19:09,910
the user user can we can use reason

00:19:07,840 --> 00:19:11,800
software we pod began with on recent

00:19:09,910 --> 00:19:13,870
software as usually when you are an

00:19:11,800 --> 00:19:16,750
option developer you don't really care

00:19:13,870 --> 00:19:19,060
about bugs in software you developed two

00:19:16,750 --> 00:19:22,600
years ago publish the work was found in

00:19:19,060 --> 00:19:23,950
the meantime and the more people we have

00:19:22,600 --> 00:19:27,160
using

00:19:23,950 --> 00:19:28,900
recent software the more bugs are fixed

00:19:27,160 --> 00:19:33,070
in the more in general free software is

00:19:28,900 --> 00:19:36,070
improved it may it gets us more testers

00:19:33,070 --> 00:19:37,500
of the next table release so usually

00:19:36,070 --> 00:19:42,450
what happens

00:19:37,500 --> 00:19:44,370
well it's quite useful from a release

00:19:42,450 --> 00:19:46,590
management point of view to detect bugs

00:19:44,370 --> 00:19:51,090
earlier it gives us more time to fix

00:19:46,590 --> 00:19:53,399
bugs and actually we if you look at the

00:19:51,090 --> 00:19:57,480
Christian stats about I think the system

00:19:53,399 --> 00:19:59,940
registers about bug reporting rate the

00:19:57,480 --> 00:20:01,740
Ubuntu dog reporting rate is much higher

00:19:59,940 --> 00:20:05,909
than Debian's which is a bit roaring of

00:20:01,740 --> 00:20:07,649
course if you are I don't know

00:20:05,909 --> 00:20:09,419
iceweasel maintainer you don't really

00:20:07,649 --> 00:20:11,340
care about resetting mobiles probably

00:20:09,419 --> 00:20:14,429
you have enough and it's pretty well

00:20:11,340 --> 00:20:17,240
it's particularly covered but if you

00:20:14,429 --> 00:20:19,830
maintain quite obscure will be library

00:20:17,240 --> 00:20:24,480
it could app to have two times more

00:20:19,830 --> 00:20:26,549
users because probably you have only 100

00:20:24,480 --> 00:20:29,909
users worldwide not all of them will

00:20:26,549 --> 00:20:33,179
report bugs and it could be able to

00:20:29,909 --> 00:20:36,179
increase that number of users something

00:20:33,179 --> 00:20:42,899
else that it makes as attracts different

00:20:36,179 --> 00:20:45,059
users so if you look at people using our

00:20:42,899 --> 00:20:48,980
clinics for example most of them are

00:20:45,059 --> 00:20:52,649
quite young enthusiastic Linux users and

00:20:48,980 --> 00:20:55,980
attracting more of this kind of users to

00:20:52,649 --> 00:20:58,289
Debian means that in the end some of

00:20:55,980 --> 00:21:01,830
them will turn into Canadian

00:20:58,289 --> 00:21:04,620
contributors and I've been V major of

00:21:01,830 --> 00:21:08,490
the old and boring distribution which is

00:21:04,620 --> 00:21:10,259
not completely true but some of some of

00:21:08,490 --> 00:21:13,440
it doesn't really help us with with new

00:21:10,259 --> 00:21:16,320
people it's better to be well we can we

00:21:13,440 --> 00:21:17,789
can stay with the old and boring aspect

00:21:16,320 --> 00:21:23,490
but it's better to have the other side

00:21:17,789 --> 00:21:25,559
of being young and really active and

00:21:23,490 --> 00:21:28,470
also I think that actually it's

00:21:25,559 --> 00:21:31,649
low-hanging fruit because there's no

00:21:28,470 --> 00:21:34,679
need to change anything it's mainly

00:21:31,649 --> 00:21:37,500
about PR about communication

00:21:34,679 --> 00:21:41,629
communicating to the public that testing

00:21:37,500 --> 00:21:41,629
is usable as a rolling distribution and

00:21:42,710 --> 00:21:50,559
well just use it and stuff like that so

00:21:46,980 --> 00:21:54,850
I think everything is just

00:21:50,559 --> 00:21:58,299
just need to advertise it of course the

00:21:54,850 --> 00:22:00,669
big challenge with that is to coexist

00:21:58,299 --> 00:22:02,970
with stable release and to not arm the

00:22:00,669 --> 00:22:06,250
stable release we will need to work on

00:22:02,970 --> 00:22:09,549
well we don't with we should be really

00:22:06,250 --> 00:22:12,159
careful about not decreasing the quality

00:22:09,549 --> 00:22:18,909
and and the work force that goes into

00:22:12,159 --> 00:22:22,450
our stable release so about about

00:22:18,909 --> 00:22:25,149
manpower the challenge for the next few

00:22:22,450 --> 00:22:27,130
years of as usual is to as it was for

00:22:25,149 --> 00:22:29,320
the next puzzle for the past 20 years

00:22:27,130 --> 00:22:32,100
probably is to recruit new contributors

00:22:29,320 --> 00:22:34,720
so everybody complains about manpower

00:22:32,100 --> 00:22:36,399
this is a regular complain and I think

00:22:34,720 --> 00:22:39,700
it's a justified complain there are many

00:22:36,399 --> 00:22:43,210
areas in Debian where we could use a lot

00:22:39,700 --> 00:22:45,970
more manpower as a DPL I often have to

00:22:43,210 --> 00:22:51,299
poke people about why is why is

00:22:45,970 --> 00:22:55,270
something not working as expected and

00:22:51,299 --> 00:22:58,090
well of course it's easy to blame the

00:22:55,270 --> 00:23:01,029
lack of manpower but sometimes when you

00:22:58,090 --> 00:23:02,830
don't have well sometimes just boils

00:23:01,029 --> 00:23:08,230
down to that and you can't do anything

00:23:02,830 --> 00:23:11,470
besides that so I made a survey of new

00:23:08,230 --> 00:23:15,610
contributors you might have read the

00:23:11,470 --> 00:23:17,140
report on Debian project last week what

00:23:15,610 --> 00:23:19,600
it shows that it's really hard to

00:23:17,140 --> 00:23:23,200
contribute to the beyond as a project we

00:23:19,600 --> 00:23:25,929
tend to build very efficient processes

00:23:23,200 --> 00:23:28,710
and tools so we like to be to optimize

00:23:25,929 --> 00:23:31,570
that for ourselves but as a result

00:23:28,710 --> 00:23:33,340
specialist out and tools are often quite

00:23:31,570 --> 00:23:37,419
complex and difficult to learn for

00:23:33,340 --> 00:23:39,850
newcomers and well that's that's a

00:23:37,419 --> 00:23:45,190
trade-off well we tend to be selfish

00:23:39,850 --> 00:23:48,250
about our processes and tools well had

00:23:45,190 --> 00:23:50,070
to change but keeping that in mind when

00:23:48,250 --> 00:23:54,820
designing processes and tools would be

00:23:50,070 --> 00:23:58,649
still already be a good thing we have

00:23:54,820 --> 00:23:58,649
very high quality requirements

00:23:58,840 --> 00:24:04,460
the attention to detail we put into our

00:24:01,820 --> 00:24:07,009
packages just it's just incredible of

00:24:04,460 --> 00:24:10,580
course that's something that contributes

00:24:07,009 --> 00:24:12,409
greatly to the success of Debian but

00:24:10,580 --> 00:24:18,799
still for new contributors it might be a

00:24:12,409 --> 00:24:21,919
bit surprising where misalignment

00:24:18,799 --> 00:24:24,470
between our contributors our goals and

00:24:21,919 --> 00:24:26,960
our goals what you want really is people

00:24:24,470 --> 00:24:29,029
who just join our teams and fix all the

00:24:26,960 --> 00:24:30,889
teams bergs and upgrade our packages to

00:24:29,029 --> 00:24:33,320
the new version that would be fantastic

00:24:30,889 --> 00:24:34,970
well I miss people come with an idea of

00:24:33,320 --> 00:24:37,639
what they want to do inside the beyond

00:24:34,970 --> 00:24:40,419
and usually it's packaged this thing I

00:24:37,639 --> 00:24:43,190
use at well maybe nobody else uses but

00:24:40,419 --> 00:24:48,320
that's something that is important to to

00:24:43,190 --> 00:24:52,789
the new contributor and well we need to

00:24:48,320 --> 00:24:55,220
find a middle ground between what what

00:24:52,789 --> 00:25:00,529
the new contributor want what we want

00:24:55,220 --> 00:25:02,509
and also one thing that the survey shows

00:25:00,529 --> 00:25:04,639
that it's very hard to get one so that

00:25:02,509 --> 00:25:08,239
outside of team so if you want to

00:25:04,639 --> 00:25:10,580
package something and vaso team white

00:25:08,239 --> 00:25:14,330
white feeds it's fine you will probably

00:25:10,580 --> 00:25:16,940
find someone willing to to sponsor your

00:25:14,330 --> 00:25:19,070
software if it doesn't fit in a team and

00:25:16,940 --> 00:25:20,539
you don't know didn't have a friend or

00:25:19,070 --> 00:25:22,489
colleague with the different developer

00:25:20,539 --> 00:25:27,950
and we will do the sponsoring for you

00:25:22,489 --> 00:25:30,230
then it's really really hard so you can

00:25:27,950 --> 00:25:32,739
all help change that I think it's really

00:25:30,230 --> 00:25:38,330
collective a specific responsibility to

00:25:32,739 --> 00:25:41,480
change that first subscribe to Didion

00:25:38,330 --> 00:25:45,679
mentors and do some sponsoring on Debian

00:25:41,480 --> 00:25:47,869
mentors if all of us do ones one sponsor

00:25:45,679 --> 00:25:50,169
one sponsored by Mentos per month I

00:25:47,869 --> 00:25:53,210
think the problem is solved basically

00:25:50,169 --> 00:25:55,940
problem is if you look at the Debian

00:25:53,210 --> 00:25:57,769
mentors archives last month's I think

00:25:55,940 --> 00:26:02,509
there was like four or five different

00:25:57,769 --> 00:26:05,299
Dedes doing reviews and sponsoring so we

00:26:02,509 --> 00:26:09,669
cannot point to something where only 4

00:26:05,299 --> 00:26:12,160
or 5 different DD that are active and

00:26:09,669 --> 00:26:15,400
something that is

00:26:12,160 --> 00:26:19,080
well deep in the culture of Debian is

00:26:15,400 --> 00:26:21,430
that you cannot make mistakes and what's

00:26:19,080 --> 00:26:23,470
you're not allowed to make mistakes and

00:26:21,430 --> 00:26:24,910
I think that for sponsoring is it's

00:26:23,470 --> 00:26:27,670
really hard because you are asked to

00:26:24,910 --> 00:26:29,740
review something and you cannot treat

00:26:27,670 --> 00:26:31,240
all the extreme code

00:26:29,740 --> 00:26:34,150
you cannot audit all the way up some

00:26:31,240 --> 00:26:36,640
code looking for possible bugs at some

00:26:34,150 --> 00:26:40,960
point so you take the risk to make the

00:26:36,640 --> 00:26:43,300
upload and sometimes true that mistakes

00:26:40,960 --> 00:26:43,600
will happen and I think we need to to be

00:26:43,300 --> 00:26:46,360
better

00:26:43,600 --> 00:26:51,670
accepting mistakes it's okay to not know

00:26:46,360 --> 00:26:56,620
everything it's ok to it's okay to not

00:26:51,670 --> 00:26:59,050
be perfect right from the start but it's

00:26:56,620 --> 00:27:00,520
better to to be vocal about things you

00:26:59,050 --> 00:27:02,890
don't know and things while you are

00:27:00,520 --> 00:27:05,290
unsure than to just edit under the

00:27:02,890 --> 00:27:07,420
carpet and optimally will notice and

00:27:05,290 --> 00:27:09,640
actually even removing packages is

00:27:07,420 --> 00:27:11,440
something quite odd because well if you

00:27:09,640 --> 00:27:14,710
miss something everybody will see it and

00:27:11,440 --> 00:27:18,100
but I think that's ok that we should

00:27:14,710 --> 00:27:23,890
really increase the culture of this

00:27:18,100 --> 00:27:26,470
being ok one of the if someone mentions

00:27:23,890 --> 00:27:27,400
that one of the people doing reviews on

00:27:26,470 --> 00:27:29,350
the inventors

00:27:27,400 --> 00:27:31,120
there's a lot of reviews but never

00:27:29,350 --> 00:27:33,400
sponsors so I'm not sure if it's because

00:27:31,120 --> 00:27:36,280
they fear that they are going to make a

00:27:33,400 --> 00:27:37,990
mistake by uploading something that by

00:27:36,280 --> 00:27:40,870
missing a meeting something will buy

00:27:37,990 --> 00:27:43,570
reviews but that's that's really sad I

00:27:40,870 --> 00:27:44,920
mean we need to it's ok if you make

00:27:43,570 --> 00:27:47,080
mistakes from time to time it's soft

00:27:44,920 --> 00:27:49,510
well you can probably vote it somehow

00:27:47,080 --> 00:27:50,260
it's really hard to it's really hard to

00:27:49,510 --> 00:27:57,580
break

00:27:50,260 --> 00:27:59,860
Debian badly by sponsoring something so

00:27:57,580 --> 00:28:02,800
there's some work to do on

00:27:59,860 --> 00:28:05,590
infrastructure wasn't sponsoring mentors

00:28:02,800 --> 00:28:08,140
a baby on that net got rewritten two

00:28:05,590 --> 00:28:11,800
years ago I think well the current

00:28:08,140 --> 00:28:13,690
version but the works that two years ago

00:28:11,800 --> 00:28:17,500
in using a Summer of Code project I

00:28:13,690 --> 00:28:22,509
think and it really helps but there's

00:28:17,500 --> 00:28:25,089
more to do for example in many cases

00:28:22,509 --> 00:28:27,609
the review is just oh you forgot that in

00:28:25,089 --> 00:28:29,440
general if we are the automated Ling

00:28:27,609 --> 00:28:31,570
Shan checks of package Appetit to

00:28:29,440 --> 00:28:36,089
mentors probably the user the

00:28:31,570 --> 00:28:40,989
prospective contributor will notice as

00:28:36,089 --> 00:28:43,239
well this limits the need for reviews so

00:28:40,989 --> 00:28:46,539
I think that well Nicola don't remove

00:28:43,239 --> 00:28:48,219
mention that work isn't always know

00:28:46,539 --> 00:28:55,989
which I think it's called Tagliamonte

00:28:48,219 --> 00:28:58,809
which working on that so something else

00:28:55,989 --> 00:29:02,889
is related to the misalignment between

00:28:58,809 --> 00:29:05,169
contributors goals and our goals we need

00:29:02,889 --> 00:29:07,179
to be better at advertising tasks that

00:29:05,169 --> 00:29:09,849
are suitable for new contributors so if

00:29:07,179 --> 00:29:14,829
we don't want new contributors to

00:29:09,849 --> 00:29:16,359
package and well another image viewer we

00:29:14,829 --> 00:29:19,119
have to provide them with ideas of

00:29:16,359 --> 00:29:23,919
things I could do so we have W and P P a

00:29:19,119 --> 00:29:28,779
lot ruined ruined the room is running W

00:29:23,919 --> 00:29:35,859
ntp a lot on a regular basis one person

00:29:28,779 --> 00:29:37,869
congratulations so we need a way to make

00:29:35,859 --> 00:29:38,589
easier to discover opportunities of

00:29:37,869 --> 00:29:39,940
contributions

00:29:38,589 --> 00:29:42,219
well lots of opportunities for

00:29:39,940 --> 00:29:44,139
contributions actually if you run W it

00:29:42,219 --> 00:29:46,239
people a lot you probably find two or

00:29:44,139 --> 00:29:50,469
three packages that you rely on that our

00:29:46,239 --> 00:29:53,259
fund and if you find someone to adopt it

00:29:50,469 --> 00:29:57,999
I mean solve it solves your problem for

00:29:53,259 --> 00:29:59,979
those packages we to design better and

00:29:57,999 --> 00:30:04,929
simpler processes and tools and document

00:29:59,979 --> 00:30:08,440
them but some for example offering

00:30:04,929 --> 00:30:10,719
everything related to using alias using

00:30:08,440 --> 00:30:12,159
gate using SVN to maintain packages

00:30:10,719 --> 00:30:18,339
which is quite poorly documented

00:30:12,159 --> 00:30:20,969
currently so something that really

00:30:18,339 --> 00:30:24,249
really as was mentioned that something

00:30:20,969 --> 00:30:26,190
really useful is everything ability to

00:30:24,249 --> 00:30:29,549
peer mentoring and internship projects

00:30:26,190 --> 00:30:31,499
new contributors really liked

00:30:29,549 --> 00:30:36,110
human contact of adding someone to ask

00:30:31,499 --> 00:30:38,460
questions to that's something that I

00:30:36,110 --> 00:30:42,629
don't know exactly

00:30:38,460 --> 00:30:45,029
oh we can improve that yet but that's

00:30:42,629 --> 00:30:47,580
something well Andrea still has some

00:30:45,029 --> 00:30:50,429
ideas as a session about about that but

00:30:47,580 --> 00:30:53,879
what human peer mentoring but yeah we

00:30:50,429 --> 00:30:56,129
need to welcome that but well in general

00:30:53,879 --> 00:30:58,230
basically what we need to do is add

00:30:56,129 --> 00:31:00,809
Debian become a more welcoming project

00:30:58,230 --> 00:31:02,489
where people get to start contributing

00:31:00,809 --> 00:31:05,429
more easily because currently it's

00:31:02,489 --> 00:31:07,559
really really hard so if you look at the

00:31:05,429 --> 00:31:10,529
schedule by 7 events related to that so

00:31:07,559 --> 00:31:14,220
the good news is that people care about

00:31:10,529 --> 00:31:16,639
this we just need to make progress on

00:31:14,220 --> 00:31:21,389
that

00:31:16,639 --> 00:31:24,090
and then before I conclude my talk I

00:31:21,389 --> 00:31:28,980
will talk a bit about Didion governance

00:31:24,090 --> 00:31:32,279
so I just learned a new job and my

00:31:28,980 --> 00:31:35,850
vision of the new job is that many DPL

00:31:32,279 --> 00:31:40,080
tasks are quite short tasks well if you

00:31:35,850 --> 00:31:42,869
do them well using low latency as like

00:31:40,080 --> 00:31:45,119
you well as soon as you receive it it's

00:31:42,869 --> 00:31:47,850
done it's much better so for example

00:31:45,119 --> 00:31:51,049
everything related to money online email

00:31:47,850 --> 00:31:53,820
with direction to the right people

00:31:51,049 --> 00:31:55,859
poking Kippur about something everything

00:31:53,820 --> 00:31:59,609
related to legal but some constraints

00:31:55,859 --> 00:32:02,249
about all you take to answer and all

00:31:59,609 --> 00:32:03,869
those tasks are quite hard to delegate

00:32:02,249 --> 00:32:07,289
or to share because there's a ad

00:32:03,869 --> 00:32:08,820
coordination override he wants to share

00:32:07,289 --> 00:32:11,570
them with the team it doesn't really

00:32:08,820 --> 00:32:13,409
work because we will spend a lot of time

00:32:11,570 --> 00:32:15,419
coordinating with the rest of the team

00:32:13,409 --> 00:32:18,929
and doesn't really make sense you can do

00:32:15,419 --> 00:32:21,059
it yourself but also lots of times tasks

00:32:18,929 --> 00:32:24,629
that can be delegated is a totally or

00:32:21,059 --> 00:32:26,369
partially even writing a delegation for

00:32:24,629 --> 00:32:28,159
example

00:32:26,369 --> 00:32:30,799
that's something that takes some time

00:32:28,159 --> 00:32:34,590
because you need to contact the team

00:32:30,799 --> 00:32:36,210
figure out who as I would like to see

00:32:34,590 --> 00:32:37,769
added to the team then you wait two

00:32:36,210 --> 00:32:39,330
weeks because it's nobody noticed your

00:32:37,769 --> 00:32:43,859
mail and bring them again

00:32:39,330 --> 00:32:46,529
that's quite time-consuming and actually

00:32:43,859 --> 00:32:49,440
that's only the final act of sending the

00:32:46,529 --> 00:32:51,749
delegation emails that can only be done

00:32:49,440 --> 00:32:53,159
by the DPL country everything else can

00:32:51,749 --> 00:32:55,080
be prepared by someone else and that

00:32:53,159 --> 00:32:58,499
kind of that kind of things would be

00:32:55,080 --> 00:33:02,489
really useful so it's not touch it

00:32:58,499 --> 00:33:05,519
DPL Alpers initiative in order to try to

00:33:02,489 --> 00:33:09,269
distribute those tasks to a team and to

00:33:05,519 --> 00:33:16,469
teach more people what deeper tasks are

00:33:09,269 --> 00:33:19,049
about so I well my my view for that is

00:33:16,469 --> 00:33:20,429
that it could be a kind of government

00:33:19,049 --> 00:33:24,119
for the Debian project that is you have

00:33:20,429 --> 00:33:26,460
someone that is mainly responsible and

00:33:24,119 --> 00:33:30,869
doing that kind of short tasks but then

00:33:26,460 --> 00:33:34,379
you have a group of people each with

00:33:30,869 --> 00:33:35,759
their own area of interest doing

00:33:34,379 --> 00:33:38,339
specific things for example we could

00:33:35,759 --> 00:33:43,019
have something someone specializing in

00:33:38,339 --> 00:33:44,249
all legal stuff in all new contributors

00:33:43,019 --> 00:33:46,739
related stuff

00:33:44,249 --> 00:33:48,929
and dude are we a stack quite easy to

00:33:46,739 --> 00:33:51,749
define and quite easy to delegate when

00:33:48,929 --> 00:33:54,049
delegating the informal sense of the

00:33:51,749 --> 00:33:56,869
weight which doesn't really need to be

00:33:54,049 --> 00:33:59,369
something official for most of the task

00:33:56,869 --> 00:34:01,259
so the problem with developers that is

00:33:59,369 --> 00:34:05,059
not very active we had only two

00:34:01,259 --> 00:34:07,799
participants of the last meeting so I

00:34:05,059 --> 00:34:11,339
feel a bit trapped as a DPL because I

00:34:07,799 --> 00:34:14,789
was hoping to rely on this to push to

00:34:11,339 --> 00:34:17,690
share the load actually not that many

00:34:14,789 --> 00:34:21,029
people willing to share the road with me

00:34:17,690 --> 00:34:22,889
but I wonder whether whether this could

00:34:21,029 --> 00:34:24,750
be the basis for most just a neighbor

00:34:22,889 --> 00:34:27,270
governance model for Debian something

00:34:24,750 --> 00:34:29,730
that we could work and which would allow

00:34:27,270 --> 00:34:31,980
someone not from French academia or not

00:34:29,730 --> 00:34:35,490
self employed to be the DPL because

00:34:31,980 --> 00:34:38,419
we're running out of French film

00:34:35,490 --> 00:34:38,419
franchise academia

00:34:40,559 --> 00:34:47,339
so there's a vessel boss about that it's

00:34:43,109 --> 00:34:50,639
not well it we might mention current

00:34:47,339 --> 00:34:53,190
while things going on currently active

00:34:50,639 --> 00:34:54,990
tasks but I also would like to spend a

00:34:53,190 --> 00:34:57,569
lot of time discussing discussing this

00:34:54,990 --> 00:35:00,000
and oh we can move forward and make it

00:34:57,569 --> 00:35:06,690
possible to move away from from French

00:35:00,000 --> 00:35:11,519
academia okay so that we end at the end

00:35:06,690 --> 00:35:13,619
of my talk so thank you for coming to

00:35:11,519 --> 00:35:17,099
that cough enjoyed that conf I hope it

00:35:13,619 --> 00:35:20,250
would be a very successful debconf I'm

00:35:17,099 --> 00:35:22,529
quite sure it will be please use that

00:35:20,250 --> 00:35:26,160
cough to come and talk to me in person

00:35:22,529 --> 00:35:28,500
so that's my little email which is a a

00:35:26,160 --> 00:35:30,900
captain my iesson nickname if you want

00:35:28,500 --> 00:35:35,190
to ping me and then we can meet

00:35:30,900 --> 00:35:38,609
somewhere so that's a kind of lament of

00:35:35,190 --> 00:35:40,470
what I've talked about in my in my talk

00:35:38,609 --> 00:35:42,930
so that you don't need to ask questions

00:35:40,470 --> 00:35:46,210
about only the last points or only about

00:35:42,930 --> 00:35:59,219
falling thank you

00:35:46,210 --> 00:35:59,219
[Applause]

00:36:08,420 --> 00:36:13,589
about the running distribution thing the

00:36:11,490 --> 00:36:15,329
testing and rolling distribution I see a

00:36:13,589 --> 00:36:17,240
potential problem that has already been

00:36:15,329 --> 00:36:22,020
discussed and I already raised it in

00:36:17,240 --> 00:36:25,050
United C's when when the free scans

00:36:22,020 --> 00:36:26,790
would it be the this rolling

00:36:25,050 --> 00:36:29,069
distribution would would it be freezed I

00:36:26,790 --> 00:36:32,849
mean would it be intermittently rolling

00:36:29,069 --> 00:36:35,240
would it be handled differently or there

00:36:32,849 --> 00:36:38,130
might be two overlapping distribution

00:36:35,240 --> 00:36:47,220
how might that be handled well I think

00:36:38,130 --> 00:36:50,369
that well with that freeze duration it's

00:36:47,220 --> 00:36:52,680
probably a big problem well with that

00:36:50,369 --> 00:36:55,260
freeze duration I think that we can live

00:36:52,680 --> 00:37:00,930
with everything being frozen for three

00:36:55,260 --> 00:37:03,079
months for almost four months so I think

00:37:00,930 --> 00:37:05,940
that everybody wants a shorter freeze

00:37:03,079 --> 00:37:09,569
that would be useful for rolling for

00:37:05,940 --> 00:37:12,690
rolling distribution so let's just aim

00:37:09,569 --> 00:37:15,240
for shorter freeze and not let's not try

00:37:12,690 --> 00:37:17,220
to do something more complex that might

00:37:15,240 --> 00:37:21,390
add stable releases at least for now

00:37:17,220 --> 00:37:24,839
maybe and five years five years from now

00:37:21,390 --> 00:37:28,500
we'll figure out something and to set

00:37:24,839 --> 00:37:32,430
that makes everybody happy but what we

00:37:28,500 --> 00:37:34,079
do currently I think it's fine I don't

00:37:32,430 --> 00:37:35,970
think three months is an acceptable

00:37:34,079 --> 00:37:37,589
reason at all I really done I mean we've

00:37:35,970 --> 00:37:39,599
had this conversation at the last

00:37:37,589 --> 00:37:42,119
several death camps and I think a really

00:37:39,599 --> 00:37:45,599
good target duration for a freeze is two

00:37:42,119 --> 00:37:49,410
or three weeks if we can't if we can't

00:37:45,599 --> 00:37:52,380
run a process that allows us to return

00:37:49,410 --> 00:37:57,210
unstable to being unstable in much less

00:37:52,380 --> 00:37:59,849
than a month then I think it's it really

00:37:57,210 --> 00:38:01,710
negatively impacts the ability of lots

00:37:59,849 --> 00:38:03,720
of things in the project to keep rolling

00:38:01,710 --> 00:38:06,630
those stair steps that show up in many

00:38:03,720 --> 00:38:09,960
of our plots are just you know very

00:38:06,630 --> 00:38:12,089
frustrating yeah it also depends on what

00:38:09,960 --> 00:38:13,680
you call free is actually your

00:38:12,089 --> 00:38:16,230
definition well our definition of

00:38:13,680 --> 00:38:17,460
freezes we have well our definition of

00:38:16,230 --> 00:38:19,140
is if you change the definition of

00:38:17,460 --> 00:38:20,960
freeze we can have shot off with shut

00:38:19,140 --> 00:38:27,200
off total freeze for example

00:38:20,960 --> 00:38:31,220
I mean things to explore in Santeria

00:38:27,200 --> 00:38:34,579
like making sure that key packages don't

00:38:31,220 --> 00:38:37,040
get ready to new applicants just before

00:38:34,579 --> 00:38:39,170
the freeze that's a bit yes yes

00:38:37,040 --> 00:38:40,790
obviously this is all part of what it

00:38:39,170 --> 00:38:43,670
takes to make something like that happen

00:38:40,790 --> 00:38:45,740
I'm certainly not advocating a return to

00:38:43,670 --> 00:38:47,510
the very very old process of let's just

00:38:45,740 --> 00:38:49,460
grab a snapshot of unstable on a

00:38:47,510 --> 00:38:51,200
particular day and call it a release but

00:38:49,460 --> 00:38:53,390
there has to be something in between

00:38:51,200 --> 00:38:55,160
because when we end up in a situation

00:38:53,390 --> 00:38:57,890
where for many many months we're not

00:38:55,160 --> 00:38:59,900
changing you know toolchains and core

00:38:57,890 --> 00:39:02,780
libraries and so forth it's very very

00:38:59,900 --> 00:39:04,010
easy for people to lose focus you know

00:39:02,780 --> 00:39:05,540
for their attention to move elsewhere

00:39:04,010 --> 00:39:10,190
and then I think it's very hard for us

00:39:05,540 --> 00:39:13,760
to get it back I remember the talk of

00:39:10,190 --> 00:39:17,329
Anthony towns in 2001 it says first at

00:39:13,760 --> 00:39:20,380
that point when he introduced pool

00:39:17,329 --> 00:39:22,970
system where testing was introduced and

00:39:20,380 --> 00:39:24,260
somebody else and me rised immediately

00:39:22,970 --> 00:39:28,010
their hand what will happen with

00:39:24,260 --> 00:39:30,319
packages who are in testing and have a

00:39:28,010 --> 00:39:33,109
critical part will say removed again and

00:39:30,319 --> 00:39:35,329
the decision decision was no but I think

00:39:33,109 --> 00:39:37,430
there is some tendency now to remove

00:39:35,329 --> 00:39:39,710
these packages at least leave packages

00:39:37,430 --> 00:39:43,430
which have released critical parts and I

00:39:39,710 --> 00:39:45,650
think this is quite a good thing I think

00:39:43,430 --> 00:39:50,420
that we should go further in that

00:39:45,650 --> 00:39:53,390
direction that is well which we tend to

00:39:50,420 --> 00:39:55,970
treat all packages as a core which is

00:39:53,390 --> 00:39:58,670
nice because our users rely on all of

00:39:55,970 --> 00:40:01,849
our packages but some of them are still

00:39:58,670 --> 00:40:05,569
more important than others and if we if

00:40:01,849 --> 00:40:07,910
we had a way to easily detect which

00:40:05,569 --> 00:40:10,250
other bugs that really need to be fixed

00:40:07,910 --> 00:40:11,990
before the before the release and which

00:40:10,250 --> 00:40:13,700
are the ones that well we could just

00:40:11,990 --> 00:40:15,829
remove the package if it doesn't work in

00:40:13,700 --> 00:40:21,200
okay some users will suffer of course

00:40:15,829 --> 00:40:24,049
but it doesn't block the release it

00:40:21,200 --> 00:40:27,109
would be a good way maybe we should just

00:40:24,049 --> 00:40:29,359
go further than removing packages during

00:40:27,109 --> 00:40:31,190
the freeze but also we move packages no

00:40:29,359 --> 00:40:33,170
I mean if something is clearly

00:40:31,190 --> 00:40:34,500
unsuitable for the next release we could

00:40:33,170 --> 00:40:36,330
just remove it from testing now

00:40:34,500 --> 00:40:39,210
and if you'd get fixed you can get back

00:40:36,330 --> 00:40:43,590
to have at least well almost two years

00:40:39,210 --> 00:40:48,930
to get back in this thing get it back in

00:40:43,590 --> 00:40:51,180
shape but well no almost well we're very

00:40:48,930 --> 00:40:55,140
few Willis team members present the

00:40:51,180 --> 00:40:56,570
confuse a bit so it difficult to discuss

00:40:55,140 --> 00:40:59,099
that and that's their main

00:40:56,570 --> 00:41:01,380
responsibility to decide that of course

00:40:59,099 --> 00:41:04,560
I need to talk with the project but it's

00:41:01,380 --> 00:41:09,420
very royal to to decide about that so

00:41:04,560 --> 00:41:11,340
look at you make two proposals one is to

00:41:09,420 --> 00:41:12,990
make testing more rolling release and

00:41:11,340 --> 00:41:19,710
the other is to remove more things from

00:41:12,990 --> 00:41:22,740
it how do you reconcile those two I'm

00:41:19,710 --> 00:41:24,359
quite sure we can find technical

00:41:22,740 --> 00:41:26,520
solutions to that and there are already

00:41:24,359 --> 00:41:29,220
technical solutions that people just

00:41:26,520 --> 00:41:31,710
install packages from unstable from time

00:41:29,220 --> 00:41:33,690
to time and for the users that we are

00:41:31,710 --> 00:41:36,230
targeting anyway it's not really a

00:41:33,690 --> 00:41:39,180
problem if from time to time you need to

00:41:36,230 --> 00:41:40,619
take specific actually is it if the

00:41:39,180 --> 00:41:45,050
package is not in testing and you have

00:41:40,619 --> 00:41:45,050
unstable users that list just works

00:41:50,990 --> 00:41:57,600
but I don't think our main problem Alif

00:41:54,180 --> 00:41:59,970
packages are there are they I mean you

00:41:57,600 --> 00:42:03,420
can always say like if there's a park in

00:41:59,970 --> 00:42:05,520
a library then let's remove it so if

00:42:03,420 --> 00:42:11,700
there's a park in Lib Ruby let's remove

00:42:05,520 --> 00:42:15,330
Ruby and all its packages yeah I mean

00:42:11,700 --> 00:42:18,530
leave packages are not our to remove

00:42:15,330 --> 00:42:21,420
lift packages is easy and we do that

00:42:18,530 --> 00:42:24,180
question is what if there's a park and

00:42:21,420 --> 00:42:27,600
iceweasel yeah but I think Berg's in

00:42:24,180 --> 00:42:33,540
Ruby but maybe a bit about that but

00:42:27,600 --> 00:42:35,040
Antonio can can eat you but I think bugs

00:42:33,540 --> 00:42:37,860
in Ruby are probably the kind of bugs

00:42:35,040 --> 00:42:40,440
that should be fixed because well Debian

00:42:37,860 --> 00:42:43,710
will is well we need to draw the line

00:42:40,440 --> 00:42:48,330
somewhere of course but Ruby is probably

00:42:43,710 --> 00:42:51,450
and let's fix it side of the line I'm

00:42:48,330 --> 00:42:53,670
not sure that I don't know what some of

00:42:51,450 --> 00:42:55,530
school will be library like Ruby

00:42:53,670 --> 00:42:57,540
feedback feedback I'm be obscene for

00:42:55,530 --> 00:43:01,860
that nobody cares if it's get me removed

00:42:57,540 --> 00:43:05,990
okay well some people will care so I'd

00:43:01,860 --> 00:43:08,340
like to propose a radical answer to that

00:43:05,990 --> 00:43:11,520
question which is that we should be

00:43:08,340 --> 00:43:13,470
prepared to revert something like Ruby

00:43:11,520 --> 00:43:17,750
to the previous upstream version if it

00:43:13,470 --> 00:43:19,710
fixes release critical regressions and

00:43:17,750 --> 00:43:21,720
obviously that should be done with some

00:43:19,710 --> 00:43:23,990
care but it it might need to be done as

00:43:21,720 --> 00:43:26,160
an emu so we need to develop some

00:43:23,990 --> 00:43:27,960
collective understanding of when that

00:43:26,160 --> 00:43:30,450
might be appropriate and how to manage

00:43:27,960 --> 00:43:33,950
the fallout but if we're able to do that

00:43:30,450 --> 00:43:37,310
then we're in a much better position to

00:43:33,950 --> 00:43:40,110
fix bugs that are somehow intractable

00:43:37,310 --> 00:43:44,100
just by undoing the problematic upload

00:43:40,110 --> 00:43:47,130
effectively but I think this is already

00:43:44,100 --> 00:43:49,230
happening kind of for doing the free

00:43:47,130 --> 00:43:50,790
sometimes happens that we just revert

00:43:49,230 --> 00:43:52,680
something to the previous version

00:43:50,790 --> 00:43:54,630
because to new version to these problems

00:43:52,680 --> 00:43:57,930
often is because the maintainer decided

00:43:54,630 --> 00:43:58,630
to update and it was not really a good

00:43:57,930 --> 00:44:00,160
idea but

00:43:58,630 --> 00:44:02,560
[Music]

00:44:00,160 --> 00:44:04,150
we're already have that possibility and

00:44:02,560 --> 00:44:09,010
use it from time to time I'm not sure it

00:44:04,150 --> 00:44:12,430
really helps fixing could help that many

00:44:09,010 --> 00:44:15,570
additional bugs to develop that better

00:44:12,430 --> 00:44:18,520
one thing that is related is the kind of

00:44:15,570 --> 00:44:22,590
having a feature branch for packages and

00:44:18,520 --> 00:44:25,120
having a way to to revert specific

00:44:22,590 --> 00:44:27,880
changes to be well currently we only

00:44:25,120 --> 00:44:31,780
have one development branch we could a

00:44:27,880 --> 00:44:33,790
feature branch where every package every

00:44:31,780 --> 00:44:36,490
new version of package of a package

00:44:33,790 --> 00:44:39,340
leaves or sets of packages live and get

00:44:36,490 --> 00:44:42,940
the ABS emerge into unstable or testing

00:44:39,340 --> 00:44:48,280
something like that but well that's a

00:44:42,940 --> 00:44:49,420
lot of technical development okay I

00:44:48,280 --> 00:44:51,220
think time is over

00:44:49,420 --> 00:44:54,780
so if you want to discuss this further

00:44:51,220 --> 00:45:04,819
you have to use the whole weight rack

00:44:54,780 --> 00:45:04,819

YouTube URL: https://www.youtube.com/watch?v=bZp87iCnbYU


