Title: OpenStack workshop
Publication date: 2017-11-29
Playlist: DebConf 13
Description: 
	by Thomas Goirand

At: DebConf13
https://debconf13.debconf.org/
Room: Main talk room
Scheduled start: 2013-08-12 14:30:00
Captions: 
	00:00:00,750 --> 00:00:03,389
we're gonna kick things off for the

00:00:02,010 --> 00:00:05,400
second half of the day with Thomas he's

00:00:03,389 --> 00:00:06,899
gonna tell us about install an open

00:00:05,400 --> 00:00:09,330
stack on Debian and give us a little

00:00:06,899 --> 00:00:14,780
demo better use it oh thanks for having

00:00:09,330 --> 00:00:18,600
me it's a pleasure to be here so I'm

00:00:14,780 --> 00:00:21,330
well my I'm so two years old I'm the

00:00:18,600 --> 00:00:23,699
founder of GPR host which does hosting

00:00:21,330 --> 00:00:27,779
or around the world a French guy living

00:00:23,699 --> 00:00:29,789
in China and I'm the founder of the

00:00:27,779 --> 00:00:32,340
OpenStack package in Groupon arias so

00:00:29,789 --> 00:00:34,469
I've been involved in packaging

00:00:32,340 --> 00:00:39,000
OpenStack since the cactus release means

00:00:34,469 --> 00:00:40,680
after it was when one year old and I'm

00:00:39,000 --> 00:00:43,940
currently the most if not the only

00:00:40,680 --> 00:00:48,110
active maintainer of OpenStack in Debian

00:00:43,940 --> 00:00:51,030
I'm also the upstream of few software

00:00:48,110 --> 00:00:54,360
and I package other things in debian

00:00:51,030 --> 00:00:59,399
like xcp which is the only way to use

00:00:54,360 --> 00:01:02,070
Zen together with OpenStack I used to do

00:00:59,399 --> 00:01:06,030
lots of PHP packages but now that we got

00:01:02,070 --> 00:01:08,400
a much more active team so GPL host has

00:01:06,030 --> 00:01:14,159
many points of presence that's the same

00:01:08,400 --> 00:01:14,909
slide I push every every time so here we

00:01:14,159 --> 00:01:17,280
go

00:01:14,909 --> 00:01:21,840
OpenStack keys as you may have heard

00:01:17,280 --> 00:01:25,189
these big it's a lot of packages boost

00:01:21,840 --> 00:01:28,110
in terms of OpenStack itself that has

00:01:25,189 --> 00:01:34,200
more than 100 oosting more than 100

00:01:28,110 --> 00:01:38,130
binary packages and it takes me a long

00:01:34,200 --> 00:01:41,189
time to deal with that this is an LS of

00:01:38,130 --> 00:01:44,579
my working folder on my laptop and I had

00:01:41,189 --> 00:01:47,159
to interact with all of the Debian

00:01:44,579 --> 00:01:52,770
packages that you see here just to give

00:01:47,159 --> 00:01:55,350
you an overview so it's not easy to

00:01:52,770 --> 00:02:00,149
package to me to set up because it has

00:01:55,350 --> 00:02:02,689
many moving parts and for each

00:02:00,149 --> 00:02:07,200
components you you have to go through

00:02:02,689 --> 00:02:09,149
procedure which consists of restoring

00:02:07,200 --> 00:02:12,000
the component to the identification

00:02:09,149 --> 00:02:14,630
program which is called Keystone

00:02:12,000 --> 00:02:18,870
set up its database correctly and then

00:02:14,630 --> 00:02:24,180
all this is is both error-prone and it

00:02:18,870 --> 00:02:29,220
takes too much time okay so when you

00:02:24,180 --> 00:02:32,390
setup an openstack cloud your goal is to

00:02:29,220 --> 00:02:35,910
setup OpenStack computer okay

00:02:32,390 --> 00:02:39,630
but to have a successfully running

00:02:35,910 --> 00:02:42,150
OpenStack compute system you need to be

00:02:39,630 --> 00:02:45,980
able to give it some images so that's

00:02:42,150 --> 00:02:48,810
how glance comes into play so Glenn's

00:02:45,980 --> 00:02:51,840
basically you upload images download

00:02:48,810 --> 00:02:54,510
images modify them and then you can give

00:02:51,840 --> 00:02:57,300
them to eat to to Nova so that he can

00:02:54,510 --> 00:02:59,580
starts virtual machines and then you

00:02:57,300 --> 00:03:01,380
have cinder similar does the block

00:02:59,580 --> 00:03:04,080
storage so if you need permanent storage

00:03:01,380 --> 00:03:05,760
permanent partition or boot from a hard

00:03:04,080 --> 00:03:06,769
drive then you will do that through

00:03:05,760 --> 00:03:09,209
cinder

00:03:06,769 --> 00:03:12,060
then there's quantum that doesn't

00:03:09,209 --> 00:03:15,510
networking so each customer or user of

00:03:12,060 --> 00:03:18,390
the cloud can build its own network its

00:03:15,510 --> 00:03:24,690
own LAN which is going to be private and

00:03:18,390 --> 00:03:27,030
will not do like that with the clouds of

00:03:24,690 --> 00:03:30,329
the other user of the cloud meaning I

00:03:27,030 --> 00:03:33,690
can use ten dot zero dot one work while

00:03:30,329 --> 00:03:36,480
somebody else does as well and then you

00:03:33,690 --> 00:03:38,940
have supplementary packages like heat

00:03:36,480 --> 00:03:42,000
that was scaling and salami true that

00:03:38,940 --> 00:03:46,860
does the metering so you need to have

00:03:42,000 --> 00:03:51,530
all of these components set up and on

00:03:46,860 --> 00:03:56,459
top of that you use the easier to CLI or

00:03:51,530 --> 00:03:59,549
the web horizon interface so horizon is

00:03:56,459 --> 00:04:03,600
the OpenStack dashboard and it's just

00:03:59,549 --> 00:04:05,700
another client and there's another

00:04:03,600 --> 00:04:09,390
component called Keystone that does the

00:04:05,700 --> 00:04:12,239
identification so when you talk to any

00:04:09,390 --> 00:04:14,790
of the components here you will do it

00:04:12,239 --> 00:04:17,340
through the Keystone identification

00:04:14,790 --> 00:04:19,799
mechanism the Keystone is not only

00:04:17,340 --> 00:04:24,330
identification it's as well

00:04:19,799 --> 00:04:25,889
a catalogue of services so no violence

00:04:24,330 --> 00:04:29,099
in your quantum heat and son demeanor

00:04:25,889 --> 00:04:32,819
will all register their services with

00:04:29,099 --> 00:04:35,699
the IP address port URL they will you

00:04:32,819 --> 00:04:39,960
have to insist in you have to tell

00:04:35,699 --> 00:04:43,470
Keystone where they are okay and once

00:04:39,960 --> 00:04:46,440
that's done so for this storage you can

00:04:43,470 --> 00:04:51,449
either use cinder which does block

00:04:46,440 --> 00:04:54,990
storage by using a an elf LVM slices

00:04:51,449 --> 00:04:57,419
that will it will push to ice cozy but

00:04:54,990 --> 00:05:02,099
that's not what I use I use safe because

00:04:57,419 --> 00:05:04,530
I think it's better because it it does

00:05:02,099 --> 00:05:07,349
the storage for everything in OpenStack

00:05:04,530 --> 00:05:11,610
including object storage image storage

00:05:07,349 --> 00:05:16,949
and cinder so you plug safe to cinder

00:05:11,610 --> 00:05:18,389
glance and Nova each each of them has to

00:05:16,949 --> 00:05:23,009
be configured in a way so that it can

00:05:18,389 --> 00:05:26,400
access your self storage once you've

00:05:23,009 --> 00:05:29,099
done that then each components needs to

00:05:26,400 --> 00:05:33,180
be able to talk to each other through a

00:05:29,099 --> 00:05:37,440
broker queue message queue broker so you

00:05:33,180 --> 00:05:40,590
have the choice between qpid or RabbitMQ

00:05:37,440 --> 00:05:43,050
but mostly everybody uses rabbitmq so

00:05:40,590 --> 00:05:45,120
you set that up and then in each and

00:05:43,050 --> 00:05:48,000
every component you say he's my

00:05:45,120 --> 00:05:50,550
configuration he's the IP of rabbitmq he

00:05:48,000 --> 00:05:52,409
is where it goes and then after that

00:05:50,550 --> 00:05:57,810
magically all the components can talk to

00:05:52,409 --> 00:06:01,080
each other and every of these components

00:05:57,810 --> 00:06:03,180
no violence in your extra they also need

00:06:01,080 --> 00:06:07,620
to store things in a database to keep

00:06:03,180 --> 00:06:10,469
the state of your cloud so many wires

00:06:07,620 --> 00:06:15,319
and for each of them you have actions to

00:06:10,469 --> 00:06:17,879
do so that it's configured correctly so

00:06:15,319 --> 00:06:21,419
how it goes with Nova then you would

00:06:17,879 --> 00:06:24,599
create SQL database gran access rights

00:06:21,419 --> 00:06:27,080
to it I did in the configuration file

00:06:24,599 --> 00:06:28,279
SQL connection directive I did my IP

00:06:27,080 --> 00:06:31,569
defined

00:06:28,279 --> 00:06:34,300
rabbitmq IP login passwords

00:06:31,569 --> 00:06:37,300
then configure it so that the Keystone

00:06:34,300 --> 00:06:39,939
old stockin goes to Keystone okay this

00:06:37,300 --> 00:06:41,229
is exactly what I wrote to the on the

00:06:39,939 --> 00:06:43,990
schematic that's what you have to do

00:06:41,229 --> 00:06:47,319
with Nova when Sara things done then you

00:06:43,990 --> 00:06:49,629
magically invoke Nova minaj and then DB

00:06:47,319 --> 00:06:54,369
sync and then it populates the database

00:06:49,629 --> 00:06:55,809
with tables and content so once you've

00:06:54,369 --> 00:06:59,399
done that with Nova you have to do the

00:06:55,809 --> 00:07:02,199
same for centimeters cinder Glen's heat

00:06:59,399 --> 00:07:04,270
quantum and foresight packages like

00:07:02,199 --> 00:07:08,499
Keystone and horizon you have a minimum

00:07:04,270 --> 00:07:10,539
of syrup to do as well so as well the DB

00:07:08,499 --> 00:07:13,270
sync is it was a bit of mess you have to

00:07:10,539 --> 00:07:16,240
do it differently for every packages and

00:07:13,270 --> 00:07:18,309
at the end of the day people who really

00:07:16,240 --> 00:07:22,449
deploy the cloud they do purpose script

00:07:18,309 --> 00:07:28,479
chef devstack or many ways to do it so

00:07:22,449 --> 00:07:32,469
that they don't do it by by hand so what

00:07:28,479 --> 00:07:35,649
I've tried to do on OpenStack is to make

00:07:32,469 --> 00:07:44,169
it easier for newcomers to use the

00:07:35,649 --> 00:07:48,849
packages using just debconf okay so what

00:07:44,169 --> 00:07:51,039
does is that it uses the OpenStack pkg

00:07:48,849 --> 00:07:53,289
tools that I wrote so that it automates

00:07:51,039 --> 00:07:56,199
all this process of registering one

00:07:53,289 --> 00:07:58,269
component to another thing so why I'm

00:07:56,199 --> 00:07:59,709
explaining all that is because you even

00:07:58,269 --> 00:08:01,959
though you have the DEF CON questions

00:07:59,709 --> 00:08:03,639
you still need to understand which

00:08:01,959 --> 00:08:05,740
components will be plugged where

00:08:03,639 --> 00:08:09,579
otherwise it's you won't understand what

00:08:05,740 --> 00:08:12,430
to answer so let's see how it works for

00:08:09,579 --> 00:08:16,569
Nova for example so the first thing is

00:08:12,430 --> 00:08:21,369
using DB config command to configure

00:08:16,569 --> 00:08:24,789
Nova to access MySQL if you used to run

00:08:21,369 --> 00:08:28,029
cube or I don't know PHP myadmin then

00:08:24,789 --> 00:08:31,269
it's the same thing so do you need to

00:08:28,029 --> 00:08:33,699
access to database configure with the

00:08:31,269 --> 00:08:39,389
big of config command then which type of

00:08:33,699 --> 00:08:43,019
database MySQL the password and then

00:08:39,389 --> 00:08:45,050
after that is done then the percent of

00:08:43,019 --> 00:08:47,029
Nova will do

00:08:45,050 --> 00:08:52,730
DB sing for you so you don't have to

00:08:47,029 --> 00:08:55,250
think about it each components has to

00:08:52,730 --> 00:08:59,660
register to the Keystone catalog so I

00:08:55,250 --> 00:09:02,410
did that as well as an automation so you

00:08:59,660 --> 00:09:04,690
tell what's the IP of your Keystone

00:09:02,410 --> 00:09:09,050
server

00:09:04,690 --> 00:09:10,730
what's the tenant name for in Keystone

00:09:09,050 --> 00:09:15,320
you have the concept of an admin tenant

00:09:10,730 --> 00:09:20,589
which every package of OpenStack will

00:09:15,320 --> 00:09:22,670
use to get in touch with others to get

00:09:20,589 --> 00:09:27,950
identification tokens to talk to other

00:09:22,670 --> 00:09:30,170
components so it asks for the admin and

00:09:27,950 --> 00:09:32,779
the user name and the password for

00:09:30,170 --> 00:09:38,750
Keystone and then it does the

00:09:32,779 --> 00:09:41,440
registration so every API so what we

00:09:38,750 --> 00:09:46,790
could an API programming in OpenStack

00:09:41,440 --> 00:09:49,730
would be the rest server which will

00:09:46,790 --> 00:09:52,850
interact to to do things so like for

00:09:49,730 --> 00:09:57,230
example there's cinder a Pai to create

00:09:52,850 --> 00:10:00,980
block devices there's quantum server to

00:09:57,230 --> 00:10:04,610
request new networks or subnets so every

00:10:00,980 --> 00:10:07,279
of these IP API packages they have this

00:10:04,610 --> 00:10:10,880
endpoint configuration thing inside that

00:10:07,279 --> 00:10:12,620
curve so register with the catalog so by

00:10:10,880 --> 00:10:15,020
default it's no and if you will tall the

00:10:12,620 --> 00:10:17,990
package it will still be no so that way

00:10:15,020 --> 00:10:21,620
you do it only once even if you install

00:10:17,990 --> 00:10:23,870
the package so what's the Keystone IP

00:10:21,620 --> 00:10:25,820
was the Keystone auth token so the other

00:10:23,870 --> 00:10:29,240
kind of of keystone is a special one

00:10:25,820 --> 00:10:32,570
that you used to set up to bootstrap

00:10:29,240 --> 00:10:35,420
right okay so to do the the Keystone

00:10:32,570 --> 00:10:37,910
thing and register the services you just

00:10:35,420 --> 00:10:40,459
use the earth token that you set up when

00:10:37,910 --> 00:10:44,959
you created when you install the

00:10:40,459 --> 00:10:47,750
Keystone itself you also wish the region

00:10:44,959 --> 00:10:50,270
what regions of the region is that it's

00:10:47,750 --> 00:10:52,700
like a bit and availability things okay

00:10:50,270 --> 00:10:56,110
you can have I don't know a look or

00:10:52,700 --> 00:10:56,110
Zurich whatever

00:10:56,350 --> 00:11:01,540
so this I've tried to set up some

00:10:59,440 --> 00:11:04,750
sensible priorities so that you have

00:11:01,540 --> 00:11:09,730
less questions when when it's in high

00:11:04,750 --> 00:11:11,920
priority if you want to have all of them

00:11:09,730 --> 00:11:15,090
and make sure you do what you want and

00:11:11,920 --> 00:11:15,090
you just set it to medium

00:11:15,520 --> 00:11:19,210
I tried as well to pre-fill all the

00:11:17,920 --> 00:11:21,790
questions well so whenever it was

00:11:19,210 --> 00:11:23,530
possible to detect things like the

00:11:21,790 --> 00:11:28,300
volume group in cinder then I do

00:11:23,530 --> 00:11:31,120
I did that and at the end there's a

00:11:28,300 --> 00:11:34,000
meter package thing so that you can

00:11:31,120 --> 00:11:36,760
install everything at once so one of the

00:11:34,000 --> 00:11:41,620
very common ways to set up OpenStack

00:11:36,760 --> 00:11:43,510
would be that you install a controller

00:11:41,620 --> 00:11:46,330
that controls all of your clouds and

00:11:43,510 --> 00:11:47,980
then multiple compute nodes so when you

00:11:46,330 --> 00:11:52,740
install OpenStack compute node it will

00:11:47,980 --> 00:11:57,010
set up Nova compute running with KVM and

00:11:52,740 --> 00:12:01,300
open V switch so it this will include as

00:11:57,010 --> 00:12:03,880
well quantum plug-in open V switch agent

00:12:01,300 --> 00:12:06,430
which has to run on boosters proxy node

00:12:03,880 --> 00:12:08,470
in the compute node ok so it will setup

00:12:06,430 --> 00:12:11,110
all of that for you you don't need to

00:12:08,470 --> 00:12:14,410
care you do need to worry much about

00:12:11,110 --> 00:12:15,850
which package to install so on the slide

00:12:14,410 --> 00:12:18,040
on the first slides I showed you that

00:12:15,850 --> 00:12:21,640
there was many many components right

00:12:18,040 --> 00:12:24,760
cinder plans API registry whatever goes

00:12:21,640 --> 00:12:26,770
in a bit on every directions so that's

00:12:24,760 --> 00:12:30,850
why I created these meteor packages that

00:12:26,770 --> 00:12:37,470
it makes it easier for you you won't

00:12:30,850 --> 00:12:41,020
need to select them one by one so the

00:12:37,470 --> 00:12:45,280
result as well is that if you see on the

00:12:41,020 --> 00:12:47,350
OpenStack documentation on the official

00:12:45,280 --> 00:12:49,720
documentation just for installing

00:12:47,350 --> 00:12:52,960
something as simple as glance to upload

00:12:49,720 --> 00:12:55,690
and use images they have like that

00:12:52,960 --> 00:12:58,330
because of documentation because they

00:12:55,690 --> 00:13:01,110
need to manually create the database

00:12:58,330 --> 00:13:04,150
manually create the access rights

00:13:01,110 --> 00:13:06,130
manually populate that so with under

00:13:04,150 --> 00:13:07,450
Debian you just do apt-get install

00:13:06,130 --> 00:13:12,610
cleanse

00:13:07,450 --> 00:13:16,270
it was it so the other thing which like

00:13:12,610 --> 00:13:20,430
whis do using that Kampf is that I it

00:13:16,270 --> 00:13:25,440
gives you an interface to to test things

00:13:20,430 --> 00:13:29,170
and it's proven okay like unrest big man

00:13:25,440 --> 00:13:31,120
send some bugs on the BTS saying that my

00:13:29,170 --> 00:13:33,990
packages don't upgrade from one version

00:13:31,120 --> 00:13:43,200
to another and that includes as well

00:13:33,990 --> 00:13:45,550
sorry populating the database thing and

00:13:43,200 --> 00:13:48,880
another thing is that you can always use

00:13:45,550 --> 00:13:51,640
the Debian front and non interactive

00:13:48,880 --> 00:13:54,970
mode so if you don't like having

00:13:51,640 --> 00:13:57,610
questions asked to you then you can

00:13:54,970 --> 00:14:01,870
still running on a track in a non

00:13:57,610 --> 00:14:03,820
interactive way so when I do my test I

00:14:01,870 --> 00:14:09,120
just choose proceeding and then you just

00:14:03,820 --> 00:14:12,580
install the the proxy know that once

00:14:09,120 --> 00:14:15,430
without asking me any questions

00:14:12,580 --> 00:14:19,180
here's an example proceedings I won't go

00:14:15,430 --> 00:14:21,330
a long time on it I guess everybody here

00:14:19,180 --> 00:14:24,250
in this room knows how to do proceeding

00:14:21,330 --> 00:14:27,760
and but the the thing is that I maintain

00:14:24,250 --> 00:14:29,890
the proceed script on that repository so

00:14:27,760 --> 00:14:32,170
you won't need to rewrite it from

00:14:29,890 --> 00:14:35,700
scratch they still some work that need

00:14:32,170 --> 00:14:40,120
to be done there but it's mostly working

00:14:35,700 --> 00:14:43,120
so another difference I have with with

00:14:40,120 --> 00:14:46,240
Ubuntu and let me check the time yeah is

00:14:43,120 --> 00:14:46,840
that our release cycles are very

00:14:46,240 --> 00:14:49,890
different

00:14:46,840 --> 00:14:53,620
okay so Ubuntu follows the recycles of

00:14:49,890 --> 00:14:55,390
OpenStack which is every six months well

00:14:53,620 --> 00:14:57,580
in Debian I have to take care of other

00:14:55,390 --> 00:15:05,920
aspects like the new queue takes a long

00:14:57,580 --> 00:15:10,000
time to get new packages I do my work on

00:15:05,920 --> 00:15:12,250
top of wizzy so in production in avast

00:15:10,000 --> 00:15:16,030
we which pays me to do the these Debian

00:15:12,250 --> 00:15:19,540
packages they they use VG and like I

00:15:16,030 --> 00:15:20,270
guess mostly everyone who wants to run

00:15:19,540 --> 00:15:22,820
OpenStack

00:15:20,270 --> 00:15:24,020
production they don't want to run CID or

00:15:22,820 --> 00:15:28,400
or Jessie

00:15:24,020 --> 00:15:32,270
so I maintain on a side package on a

00:15:28,400 --> 00:15:35,000
side repository we see back ports

00:15:32,270 --> 00:15:39,440
including all the dependencies like

00:15:35,000 --> 00:15:41,540
hundreds of packages so you are free to

00:15:39,440 --> 00:15:45,640
use it my hope is that I will have soon

00:15:41,540 --> 00:15:48,530
space to store that within Debian I hope

00:15:45,640 --> 00:15:56,360
that I will have access to PPA soon if

00:15:48,530 --> 00:16:00,140
it happens in Debian ok so I had lots of

00:15:56,360 --> 00:16:04,910
requests and bug reports for non

00:16:00,140 --> 00:16:08,240
respecting the some rules which are

00:16:04,910 --> 00:16:11,420
stronger in Debian ok so I think that I

00:16:08,240 --> 00:16:15,820
hope that the packages we have been

00:16:11,420 --> 00:16:19,520
Debian are more DFA g-free compliant

00:16:15,820 --> 00:16:21,170
also in Debian we have heat which does a

00:16:19,520 --> 00:16:23,840
little scaling you won't find it in

00:16:21,170 --> 00:16:26,740
Ubuntu there's FTP Cloud FS and SFTP

00:16:23,840 --> 00:16:30,230
cloud the fest which are also maintained

00:16:26,740 --> 00:16:32,210
so if you want to contribute a very

00:16:30,230 --> 00:16:35,270
welcome you to do so because even if I'm

00:16:32,210 --> 00:16:38,690
a full time hardly find enough time to

00:16:35,270 --> 00:16:43,940
be to do all what is needed in one

00:16:38,690 --> 00:16:46,040
release cycle so welcome on IRC I can I

00:16:43,940 --> 00:16:50,030
can help if you are doing setups I'd be

00:16:46,040 --> 00:16:53,390
happy to do so so before we go to the QA

00:16:50,030 --> 00:16:57,080
I want to show you that I've set up

00:16:53,390 --> 00:16:58,880
small OpenStack cloud instance in in

00:16:57,080 --> 00:17:04,400
Debian in that confidence in the server

00:16:58,880 --> 00:17:07,610
room there so there's two compute nodes

00:17:04,400 --> 00:17:10,220
which on which there's four hard drive

00:17:07,610 --> 00:17:12,800
each two hard drives on each nodes have

00:17:10,220 --> 00:17:16,310
been used for safe so we have a

00:17:12,800 --> 00:17:19,280
redundancy for the storage and currently

00:17:16,310 --> 00:17:24,770
I've setup only one compute node and

00:17:19,280 --> 00:17:26,890
then you can you can try ok so let me

00:17:24,770 --> 00:17:31,450
show you a bit how it works

00:17:26,890 --> 00:17:31,450
OSE dot DC 13

00:17:39,410 --> 00:17:51,030
can you see the screen so the way it

00:17:46,350 --> 00:17:55,440
works is that you use that so if you

00:17:51,030 --> 00:17:57,630
can't read or whatever you can have a

00:17:55,440 --> 00:18:00,720
look at the video so the username is

00:17:57,630 --> 00:18:05,630
DEFCON 13 with password super cool power

00:18:00,720 --> 00:18:08,910
and you can use it to push images

00:18:05,630 --> 00:18:12,240
install via Turing machines and see how

00:18:08,910 --> 00:18:14,280
it works if you are scared so the way it

00:18:12,240 --> 00:18:18,210
works is that after you go to apt-get

00:18:14,280 --> 00:18:21,000
install open stack clients and then

00:18:18,210 --> 00:18:25,260
you'll be able to use it and then you

00:18:21,000 --> 00:18:29,190
can do no very least it's a bit slow

00:18:25,260 --> 00:18:31,590
because the controller is on on the on

00:18:29,190 --> 00:18:41,870
the virtual machine which doesn't have

00:18:31,590 --> 00:18:41,870
much resources quantum net list etc so I

00:18:41,900 --> 00:18:49,490
can show you the web interface I'll show

00:18:45,870 --> 00:18:49,490
you the admin one often

00:18:55,740 --> 00:19:04,590
so everything that you do in horizon is

00:19:00,590 --> 00:19:06,870
compatible his doll just like with the

00:19:04,590 --> 00:19:08,490
Python API so everything you do in

00:19:06,870 --> 00:19:12,419
horizon you can do under shell on the

00:19:08,490 --> 00:19:14,850
command line with the with the OpenStack

00:19:12,419 --> 00:19:18,179
clients or you can use the Python

00:19:14,850 --> 00:19:20,159
modules because every client is both

00:19:18,179 --> 00:19:23,309
supplied python module and them in the

00:19:20,159 --> 00:19:34,710
command line thing when you use the

00:19:23,309 --> 00:19:38,730
console then it uses space ok that's a

00:19:34,710 --> 00:19:45,630
demo effect ok do you guys have any

00:19:38,730 --> 00:19:48,470
questions go ahead he's like this like

00:19:45,630 --> 00:19:48,470
10 minutes remaining

00:19:49,429 --> 00:19:58,500
if I want to try it out how much

00:19:53,279 --> 00:20:02,840
hardware do I need to try how many

00:19:58,500 --> 00:20:07,470
hardware is required to play with it ok

00:20:02,840 --> 00:20:11,370
you can pretty much use OpenStack with a

00:20:07,470 --> 00:20:13,110
single computer do the only thing is

00:20:11,370 --> 00:20:17,909
that it's going to be hard for you to go

00:20:13,110 --> 00:20:20,100
from 1 to 3 and 2 doesn't really make

00:20:17,909 --> 00:20:22,500
sense because you won't have redundancy

00:20:20,100 --> 00:20:27,059
so but you can start with one and get

00:20:22,500 --> 00:20:30,299
all three and then more burst would be

00:20:27,059 --> 00:20:33,450
start with tray if you that's what I did

00:20:30,299 --> 00:20:35,700
here ok so here I have a virtual machine

00:20:33,450 --> 00:20:39,510
running on Zen it could do whatever just

00:20:35,700 --> 00:20:41,520
a computer running the API packages so

00:20:39,510 --> 00:20:45,600
novi api is in the api glance api

00:20:41,520 --> 00:20:47,490
whatever and after you you can just set

00:20:45,600 --> 00:20:52,559
up to compute nodes for example it works

00:20:47,490 --> 00:20:55,230
use one as well and and then safe which

00:20:52,559 --> 00:20:58,890
was the storage you can it's best to run

00:20:55,230 --> 00:21:03,390
with at least two i guess as well okay

00:20:58,890 --> 00:21:05,740
thank you so you need to G about for

00:21:03,390 --> 00:21:07,220
running all the API programs and

00:21:05,740 --> 00:21:10,560
[Music]

00:21:07,220 --> 00:21:12,840
yeah and then if you want to have some

00:21:10,560 --> 00:21:18,780
workload on the compute nodes obviously

00:21:12,840 --> 00:21:25,500
a big amount of RAM okay is there any

00:21:18,780 --> 00:21:33,090
other question no question so thank you

00:21:25,500 --> 00:21:35,010
Danielle how do upgrades work can you

00:21:33,090 --> 00:21:38,520
upgrade one component at a time or do

00:21:35,010 --> 00:21:40,620
they have to go in lockstep yeah the

00:21:38,520 --> 00:21:45,450
brigade upgrading is a big problem

00:21:40,620 --> 00:21:49,770
because every components talked with

00:21:45,450 --> 00:21:53,280
Keystone okay so I guess you could grate

00:21:49,770 --> 00:21:57,090
Keystone first and then grate the other

00:21:53,280 --> 00:21:59,240
next though the big problem the big

00:21:57,090 --> 00:22:03,810
problem you have is let's say you have

00:21:59,240 --> 00:22:06,900
10 compute nodes okay then you upgrade

00:22:03,810 --> 00:22:08,670
one node then with my packages is going

00:22:06,900 --> 00:22:12,120
to upgrade to SQL to much Kelly

00:22:08,670 --> 00:22:15,780
and then the other nine remaining

00:22:12,120 --> 00:22:18,960
compute nodes will have the old code

00:22:15,780 --> 00:22:22,140
running with the new database and that's

00:22:18,960 --> 00:22:24,980
a problem so mostly you have to get

00:22:22,140 --> 00:22:27,390
everything at the same time though

00:22:24,980 --> 00:22:30,810
upgrading doesn't mean that you turn off

00:22:27,390 --> 00:22:32,940
your VMs you're on EVMS you can still

00:22:30,810 --> 00:22:37,620
have your running VMs and then upgrade

00:22:32,940 --> 00:22:39,570
all the cloud it does work the problem

00:22:37,620 --> 00:22:41,910
is that we scale when you have 1,000

00:22:39,570 --> 00:22:43,800
nodes then you have to upgrade 1,000

00:22:41,910 --> 00:22:45,630
note at the same time so it may be not

00:22:43,800 --> 00:22:47,570
really practical or you have a bit of

00:22:45,630 --> 00:22:49,980
time time downtime

00:22:47,570 --> 00:22:52,830
probably what you can do as well is use

00:22:49,980 --> 00:22:54,390
cells so that there's a concept of cells

00:22:52,830 --> 00:22:57,840
let's say you have a data center with

00:22:54,390 --> 00:23:01,740
three rooms then you can have a kind of

00:22:57,840 --> 00:23:04,410
tree and say I upgrade this cell first

00:23:01,740 --> 00:23:07,230
and then this cell and and distal that

00:23:04,410 --> 00:23:09,860
would work better I guess all right and

00:23:07,230 --> 00:23:09,860
the other question

00:23:12,240 --> 00:23:17,049
what is your plan for the stable layers

00:23:15,100 --> 00:23:22,470
of debris on a mineral will you support

00:23:17,049 --> 00:23:28,030
open strike sx the world life of busy

00:23:22,470 --> 00:23:30,820
I'm trying to do so to support OpenStack

00:23:28,030 --> 00:23:34,059
a sex as much as I can within the stable

00:23:30,820 --> 00:23:37,230
release though sometimes it's easy

00:23:34,059 --> 00:23:39,250
because patches are easy to backport

00:23:37,230 --> 00:23:42,220
sometimes it's hard like currently I

00:23:39,250 --> 00:23:47,200
have a very difficult patch to back pod

00:23:42,220 --> 00:23:49,090
to SX if I get no help from anyone and

00:23:47,200 --> 00:23:57,299
probably I won't have time to do so

00:23:49,090 --> 00:24:01,240
I'm me as a deviant fan I love to try to

00:23:57,299 --> 00:24:03,070
support stable as much as I can do my

00:24:01,240 --> 00:24:05,830
customers and my company don't really

00:24:03,070 --> 00:24:13,179
need it so it's a bit of conflict I say

00:24:05,830 --> 00:24:15,760
that because we've been through and they

00:24:13,179 --> 00:24:16,539
say they do security support for SX they

00:24:15,760 --> 00:24:18,669
do it badly

00:24:16,539 --> 00:24:22,030
just as as much as I do it badly for

00:24:18,669 --> 00:24:24,610
stable they have no time and it's a

00:24:22,030 --> 00:24:25,990
different team and I so many security

00:24:24,610 --> 00:24:29,320
problems that were not addressed in

00:24:25,990 --> 00:24:32,710
Ubuntu as well so if you run an

00:24:29,320 --> 00:24:36,190
OpenStack cloud my advice would be to

00:24:32,710 --> 00:24:40,929
use the current release and upgrade as

00:24:36,190 --> 00:24:42,390
it goes so if it's a private cloud most

00:24:40,929 --> 00:24:48,179
of the time you are not affected by the

00:24:42,390 --> 00:24:51,850
by the CVEs because most TVs are on

00:24:48,179 --> 00:24:53,289
public infrastructure it won't affect

00:24:51,850 --> 00:24:56,590
you if you're the only one having access

00:24:53,289 --> 00:24:59,650
to it though if you have a public cloud

00:24:56,590 --> 00:25:02,440
then you have to be current from the

00:24:59,650 --> 00:25:07,000
less lace latest stable that's my advice

00:25:02,440 --> 00:25:10,240
so probably use my private repository

00:25:07,000 --> 00:25:12,490
for OpenStack on on top of wizzy where I

00:25:10,240 --> 00:25:19,840
maintain currently grizzly and soon

00:25:12,490 --> 00:25:23,040
Avenue so if you use a private cloud and

00:25:19,840 --> 00:25:23,040
stable is probably fine

00:25:23,270 --> 00:25:31,370
I packaged a tube for Debian and I made

00:25:28,220 --> 00:25:34,760
the experience that all the people much

00:25:31,370 --> 00:25:36,200
rather used the Debian packages from the

00:25:34,760 --> 00:25:38,840
company Cloudera

00:25:36,200 --> 00:25:41,420
which had so many Hadoop contributors

00:25:38,840 --> 00:25:45,770
and nobody was interested in the Debian

00:25:41,420 --> 00:25:49,130
packages so this D motivated me a lot of

00:25:45,770 --> 00:25:52,360
course had to you made similar

00:25:49,130 --> 00:25:56,690
experiences that people say we we take

00:25:52,360 --> 00:26:00,560
upstream OpenStack in some form instead

00:25:56,690 --> 00:26:04,370
of Debian packages there's no way you

00:26:00,560 --> 00:26:07,400
can use directly things from extreme

00:26:04,370 --> 00:26:10,040
with OpenStack if you have a large

00:26:07,400 --> 00:26:13,310
installation I never heard anyone doing

00:26:10,040 --> 00:26:15,080
that it might you have big companies

00:26:13,310 --> 00:26:18,590
like Rackspace that have their own

00:26:15,080 --> 00:26:20,030
deploying system I know they because

00:26:18,590 --> 00:26:22,640
they have so many nodes they can't even

00:26:20,030 --> 00:26:28,670
think about using an FTP so they deploy

00:26:22,640 --> 00:26:31,390
using BitTorrent but I don't know how ok

00:26:28,670 --> 00:26:44,860
do you know how how do you deploy in HP

00:26:31,390 --> 00:26:44,860
can you reply to that hang on microphone

00:26:48,730 --> 00:26:53,990
the current public cloud is actually

00:26:51,200 --> 00:26:56,000
still running Diablo so we currently

00:26:53,990 --> 00:26:57,860
have a second data center level building

00:26:56,000 --> 00:27:01,420
which which we try to be as close to

00:26:57,860 --> 00:27:03,920
upstream as possible so the the

00:27:01,420 --> 00:27:06,830
deployment guys internally there they're

00:27:03,920 --> 00:27:08,720
putting a framework in place where they

00:27:06,830 --> 00:27:11,030
periodically pull from upstream and

00:27:08,720 --> 00:27:13,370
apply some HP specific patches on top of

00:27:11,030 --> 00:27:15,430
it and then push it out all right all

00:27:13,370 --> 00:27:15,430
right

00:27:15,640 --> 00:27:21,590
any other question cuz otherwise I have

00:27:18,560 --> 00:27:24,020
yeah to us so you already said that you

00:27:21,590 --> 00:27:26,870
are not using OpenStack for your company

00:27:24,020 --> 00:27:29,840
that we have interested me what's then

00:27:26,870 --> 00:27:32,900
your motivation no no no I'm not using

00:27:29,840 --> 00:27:35,150
OpenStack stable in wizzy I mean I'm not

00:27:32,900 --> 00:27:38,840
using they be unstable with what

00:27:35,150 --> 00:27:41,020
OpenStack personally is in in stable in

00:27:38,840 --> 00:27:44,270
the be unstable there is insects and

00:27:41,020 --> 00:27:46,640
then there's on the order does fall so

00:27:44,270 --> 00:27:48,830
I'm and grizzly in Debian in in

00:27:46,640 --> 00:27:52,040
OpenStack as a real name and I use

00:27:48,830 --> 00:27:54,740
grizzly which is from last April so you

00:27:52,040 --> 00:27:58,370
have an offer in your company based on

00:27:54,740 --> 00:28:00,830
OpenStack so I maintain grizzly

00:27:58,370 --> 00:28:02,950
currently in seed because I can't

00:28:00,830 --> 00:28:06,550
maintain it in stable as you know and

00:28:02,950 --> 00:28:10,850
then I used my own back port to easy

00:28:06,550 --> 00:28:14,060
with grizzly does it make sense yes but

00:28:10,850 --> 00:28:16,490
I looked at GPL host home page and I

00:28:14,060 --> 00:28:19,040
couldn't figure out what product is

00:28:16,490 --> 00:28:22,150
using OpenStack what are you using of

00:28:19,040 --> 00:28:28,220
mistake for clearly I use it only for

00:28:22,150 --> 00:28:31,580
private cloud because I have no billing

00:28:28,220 --> 00:28:33,890
software to play with so I can't I can't

00:28:31,580 --> 00:28:35,960
do the billing just mattering with

00:28:33,890 --> 00:28:37,880
selamat ER but metering only tells you

00:28:35,960 --> 00:28:41,540
how much resources the customer have

00:28:37,880 --> 00:28:44,180
been using and then you have to kind of

00:28:41,540 --> 00:28:46,790
doing billing manually right or use

00:28:44,180 --> 00:28:48,650
something like J billing or these kind

00:28:46,790 --> 00:28:53,000
of fancy applications where you can plug

00:28:48,650 --> 00:28:55,750
things but like therefore private cloud

00:28:53,000 --> 00:28:55,750
it works great

00:28:55,930 --> 00:29:02,210
any other questions

00:28:59,380 --> 00:29:07,090
okay so I will use the remaining two

00:29:02,210 --> 00:29:07,090
minutes to tell you that I also maintain

00:29:09,370 --> 00:29:13,240
it's 45 minutes right I got 15 minutes

00:29:12,500 --> 00:29:16,970
remaining

00:29:13,240 --> 00:29:20,510
so I went faster okay it doesn't matter

00:29:16,970 --> 00:29:43,250
so I have I can I can show more about

00:29:20,510 --> 00:29:48,200
about it so so III maintain as well

00:29:43,250 --> 00:29:52,280
script to build OpenStack images which

00:29:48,200 --> 00:29:56,090
which suite it uses D bootstrap to to

00:29:52,280 --> 00:29:58,070
get it into a CH root and then after it

00:29:56,090 --> 00:30:01,940
produces a simple image that you can use

00:29:58,070 --> 00:30:04,330
in blends so that that's the final

00:30:01,940 --> 00:30:04,330
result

00:30:10,070 --> 00:30:21,540
it'd be an image released that's a very

00:30:16,710 --> 00:30:24,000
simple script that does that who who

00:30:21,540 --> 00:30:29,700
uses patted to create the partition

00:30:24,000 --> 00:30:37,730
table do the format create okay so

00:30:29,700 --> 00:30:37,730
basically you just do like that with URL

00:30:40,880 --> 00:30:50,180
ftp dot CH dot DB on not all and menus

00:30:45,510 --> 00:30:50,180
so you will be what you use for

00:30:50,420 --> 00:31:02,010
bootstrapping and then what goes in your

00:30:52,800 --> 00:31:04,880
source lists yeah and menus are and

00:31:02,010 --> 00:31:04,880
release

00:31:16,640 --> 00:31:23,120
so I'm going to so because you had the

00:31:19,670 --> 00:31:25,820
demo with the non free services this

00:31:23,120 --> 00:31:28,040
morning then I may explain to you how to

00:31:25,820 --> 00:31:31,970
use the free software services we have

00:31:28,040 --> 00:31:35,330
at that Cove to create an image and then

00:31:31,970 --> 00:31:38,500
start to use it with OpenStack so at

00:31:35,330 --> 00:31:42,380
least if you don't setup OpenStack in

00:31:38,500 --> 00:31:43,940
your enterprise or whom and at least you

00:31:42,380 --> 00:31:49,130
can try it

00:31:43,940 --> 00:31:51,740
I heard that HP can provide some free

00:31:49,130 --> 00:31:58,880
accounts as well maybe you can talk

00:31:51,740 --> 00:32:01,990
about it I don't know I'm sorry the

00:31:58,880 --> 00:32:01,990
second time I did that to you

00:32:02,830 --> 00:32:09,040
well that's my plan but the higher-ups

00:32:05,360 --> 00:32:13,100
don't necessarily agree with me yet so

00:32:09,040 --> 00:32:15,380
yes the plan is to provide some limited

00:32:13,100 --> 00:32:18,290
free account to the different

00:32:15,380 --> 00:32:20,480
communities Debian as well but we still

00:32:18,290 --> 00:32:23,240
I mean our Billings or our a resign up

00:32:20,480 --> 00:32:25,669
system requires credit cards and I mean

00:32:23,240 --> 00:32:27,169
you guys usually don't like to put in

00:32:25,669 --> 00:32:29,090
your personal credit card so I'm working

00:32:27,169 --> 00:32:33,799
with product management to get that

00:32:29,090 --> 00:32:35,559
resolved so my advice if you need to use

00:32:33,799 --> 00:32:41,240
the cloud is to use something that is

00:32:35,559 --> 00:32:43,490
interoperable like either HP cloud or

00:32:41,240 --> 00:32:49,309
Rackspace cloud and then after if you

00:32:43,490 --> 00:32:54,580
want to let's say it becomes large and

00:32:49,309 --> 00:32:58,160
then it it would be you can become

00:32:54,580 --> 00:33:00,890
relevant for your company to set up your

00:32:58,160 --> 00:33:02,780
own private cloud on top of OpenStack in

00:33:00,890 --> 00:33:06,669
that case it's easy to migrate from a

00:33:02,780 --> 00:33:09,740
private provider to your own provider

00:33:06,669 --> 00:33:12,590
I'm sorry it's kind of very very slow

00:33:09,740 --> 00:33:15,100
Network because bootstrapping is not

00:33:12,590 --> 00:33:15,100
doing anything

00:33:15,679 --> 00:33:26,059
sorry r-really so it doesn't matter

00:33:23,940 --> 00:33:35,039
let's say it's finished

00:33:26,059 --> 00:33:37,609
okay so I'm going to SSH again to the

00:33:35,039 --> 00:33:37,609
same machine

00:33:43,760 --> 00:33:48,770
so it's going to produce this okay and

00:33:46,010 --> 00:33:53,270
then you do Glen's

00:33:48,770 --> 00:33:56,140
image create name of your image the file

00:33:53,270 --> 00:33:59,030
which is the ku-ku-ku-ku to format and

00:33:56,140 --> 00:34:07,430
then once you did image create like that

00:33:59,030 --> 00:34:12,500
then up here here cleanse image list so

00:34:07,430 --> 00:34:16,840
once you have the ID here okay maybe I

00:34:12,500 --> 00:34:16,840
should first show explain explain that

00:34:18,070 --> 00:34:27,980
so you have the concept of network

00:34:25,030 --> 00:34:29,810
virtual networks in OpenStack so what

00:34:27,980 --> 00:34:31,670
what you see here is a graph that is

00:34:29,810 --> 00:34:35,930
maintained by horizon dynamically

00:34:31,670 --> 00:34:38,450
depending on what you've created so the

00:34:35,930 --> 00:34:40,700
network here in green is the real

00:34:38,450 --> 00:34:43,760
network that we've been using in indep

00:34:40,700 --> 00:34:49,670
come from a recognized IPS so when you

00:34:43,760 --> 00:34:51,890
create a new user you you either create

00:34:49,670 --> 00:34:56,090
that new external network to map the

00:34:51,890 --> 00:34:58,550
real IPS or you you you do it once and

00:34:56,090 --> 00:35:03,170
you say that that and work is publicly

00:34:58,550 --> 00:35:07,250
shared and once you've done that then

00:35:03,170 --> 00:35:11,150
you add a node land like like in here on

00:35:07,250 --> 00:35:13,760
the IP that that you you want so because

00:35:11,150 --> 00:35:17,360
I'm admit I can see both okay that's my

00:35:13,760 --> 00:35:18,980
own Network has none min okay and that

00:35:17,360 --> 00:35:24,520
one is the one I've set up for the

00:35:18,980 --> 00:35:30,020
DEFCON 13 account so I can see both and

00:35:24,520 --> 00:35:33,890
both will have a different router so

00:35:30,020 --> 00:35:36,880
every time you have a new user it will

00:35:33,890 --> 00:35:41,000
set up a new router new virtual router

00:35:36,880 --> 00:35:43,430
and then connect to it so your vital

00:35:41,000 --> 00:35:46,370
machines won't have an IP address

00:35:43,430 --> 00:35:50,000
directly they will have only IPS on the

00:35:46,370 --> 00:35:55,910
land given by the DHCP so what you would

00:35:50,000 --> 00:35:56,420
do is ask for that one of the IPS on the

00:35:55,910 --> 00:36:00,410
external

00:35:56,420 --> 00:36:02,540
work is forwarded through not to one of

00:36:00,410 --> 00:36:04,640
your vehicle machines and then from

00:36:02,540 --> 00:36:07,850
there on one generation you can set up

00:36:04,640 --> 00:36:14,840
each a proxy for example to reach your

00:36:07,850 --> 00:36:17,360
other virtual machines so on on the

00:36:14,840 --> 00:36:26,390
command line it goes like this

00:36:17,360 --> 00:36:32,560
so quantum so you see I have my three

00:36:26,390 --> 00:36:36,080
networks and if I do quantum subnet list

00:36:32,560 --> 00:36:39,200
then it shows me the IP addresses of

00:36:36,080 --> 00:36:42,590
these okay so here you can see my

00:36:39,200 --> 00:36:45,010
external network and the two lands that

00:36:42,590 --> 00:36:45,010
I've created

00:36:50,410 --> 00:36:56,750
then after with a simple script like

00:36:52,970 --> 00:36:59,050
this one then you can create okay I list

00:36:56,750 --> 00:37:02,290
a list the images I list the nets and

00:36:59,050 --> 00:37:04,550
after I created with Nova good flavor

00:37:02,290 --> 00:37:08,870
imagine the neighborhood the number the

00:37:04,550 --> 00:37:14,030
idea of the image with one Nick so if I

00:37:08,870 --> 00:37:15,980
don't put - - Nick net ID equal then by

00:37:14,030 --> 00:37:20,450
default it will attach the virtual

00:37:15,980 --> 00:37:23,810
machine on the external network and on

00:37:20,450 --> 00:37:31,070
LAN at the same time it will have two

00:37:23,810 --> 00:37:35,900
other net pots and that has to be that's

00:37:31,070 --> 00:37:41,230
the basics for how to use OpenStack with

00:37:35,900 --> 00:37:44,780
with the clients so I give you the

00:37:41,230 --> 00:37:51,530
credentials against again if you want to

00:37:44,780 --> 00:37:56,810
try any any questions cut like 13

00:37:51,530 --> 00:38:01,990
minutes to go you had many questions

00:37:56,810 --> 00:38:01,990
already and then that's it then

00:38:03,370 --> 00:38:06,490
thank you

00:38:06,930 --> 00:38:13,499

YouTube URL: https://www.youtube.com/watch?v=KxyZp6L61mE


