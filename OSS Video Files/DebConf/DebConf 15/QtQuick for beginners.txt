Title: QtQuick for beginners
Publication date: 2017-12-03
Playlist: DebConf 15
Description: 
	by Sune Vuorela 

At: DebConf15
https://summit.debconf.org/debconf15/meeting/242/qtquick-for-beginners/
https://debconf15.debconf.org/

QtQuick is the current best maintained and actively developed way of making graphical applications in a nice and mostly declarative way.

This talk will give you a introduction to the concepts and basic workings of QtQuick.

Room: Heidelberg
Scheduled start: 2015-08-17 14:00:00
Captions: 
	00:00:01,790 --> 00:00:13,049
so soon viola will present you to take

00:00:07,259 --> 00:00:17,369
week for beginners yep this is the cute

00:00:13,049 --> 00:00:20,970
quick for beginners and let's start

00:00:17,369 --> 00:00:24,269
about seeing the the plan for the next

00:00:20,970 --> 00:00:28,130
45 minutes if there is any questions

00:00:24,269 --> 00:00:31,219
during the during the the talk please

00:00:28,130 --> 00:00:33,809
raise your hand and speak up because

00:00:31,219 --> 00:00:36,469
everything I'm going to do is going to

00:00:33,809 --> 00:00:39,540
build upon what I said right before so

00:00:36,469 --> 00:00:43,489
if there's anything that is unclear then

00:00:39,540 --> 00:00:46,770
let's take it from whenever we arrive to

00:00:43,489 --> 00:00:50,489
such a thing and yeah I will be talking

00:00:46,770 --> 00:00:52,440
about the talk about some basics and

00:00:50,489 --> 00:00:56,309
then getting a bit more advanced with

00:00:52,440 --> 00:00:58,469
the how to interact with C++ and the

00:00:56,309 --> 00:01:07,409
fattiness after about seven four three

00:00:58,469 --> 00:01:09,630
two five zero but me I'm involved with

00:01:07,409 --> 00:01:15,150
Debian maintainer since 2005 and

00:01:09,630 --> 00:01:18,950
developer since 2007 2007 is also when I

00:01:15,150 --> 00:01:18,950
was at my previous step conf

00:01:20,060 --> 00:01:26,729
what my first I have been a key

00:01:22,560 --> 00:01:30,479
contributor since 2007 when cute opened

00:01:26,729 --> 00:01:35,850
up for external contributors I have had

00:01:30,479 --> 00:01:38,270
a patch in here there since 2011 when

00:01:35,850 --> 00:01:44,159
I'm not doing all of these three things

00:01:38,270 --> 00:01:46,950
I'm a software consultant doing Q Dorsey

00:01:44,159 --> 00:01:48,799
professor Java or whatever either for

00:01:46,950 --> 00:01:53,939
container shipping business or for

00:01:48,799 --> 00:01:58,619
medical technology or whoever else needs

00:01:53,939 --> 00:02:01,590
my services and I'm soon available again

00:01:58,619 --> 00:02:06,149
if any of you is needing somebody that

00:02:01,590 --> 00:02:08,129
can do what I can do so let's talk there

00:02:06,149 --> 00:02:11,250
will be a lot of live coding include

00:02:08,129 --> 00:02:13,710
creator and just so that we all know

00:02:11,250 --> 00:02:17,520
that this just to show off

00:02:13,710 --> 00:02:19,380
have this is a cute crater window the

00:02:17,520 --> 00:02:23,310
thing of all these IDs especially when

00:02:19,380 --> 00:02:24,960
you is for live coding is that someone

00:02:23,310 --> 00:02:27,090
like me who used all of the keyboard

00:02:24,960 --> 00:02:30,230
shortcuts and so on it can be a bit hard

00:02:27,090 --> 00:02:33,870
to follow if you're not used to it so

00:02:30,230 --> 00:02:35,310
the big thing is what is the main window

00:02:33,870 --> 00:02:38,780
which is where the code is actually

00:02:35,310 --> 00:02:44,610
happening over to the left there is a

00:02:38,780 --> 00:02:47,070
structure of things and in in this lower

00:02:44,610 --> 00:02:50,510
corner over here there is the play

00:02:47,070 --> 00:02:53,670
button which starts with the application

00:02:50,510 --> 00:02:56,160
there's a lot of more other things that

00:02:53,670 --> 00:02:57,870
I will not dive into because this is not

00:02:56,160 --> 00:03:00,690
about cute creator it is just to show

00:02:57,870 --> 00:03:05,760
you another way to you're not lost in

00:03:00,690 --> 00:03:07,530
what I'm doing and then of course be

00:03:05,760 --> 00:03:09,980
this slideshow and I'm going to be

00:03:07,530 --> 00:03:13,860
switching quite frequently between them

00:03:09,980 --> 00:03:25,100
to give an example in its last show and

00:03:13,860 --> 00:03:28,650
then show it off live so let's continue

00:03:25,100 --> 00:03:34,050
first let's get a couple of terms that

00:03:28,650 --> 00:03:37,680
I'm going to use explained cute is a

00:03:34,050 --> 00:03:39,180
framework for making applications

00:03:37,680 --> 00:03:43,530
graphical and other kinds of

00:03:39,180 --> 00:03:48,030
applications it is made by currently a

00:03:43,530 --> 00:03:52,080
company called takea and it's available

00:03:48,030 --> 00:03:56,090
under there is licensing terms all of

00:03:52,080 --> 00:03:59,640
them is at least people we with week

00:03:56,090 --> 00:04:02,750
compatible but other possibilities are

00:03:59,640 --> 00:04:02,750
also available

00:04:03,630 --> 00:04:12,960
to to jump down a couple of things steps

00:04:08,850 --> 00:04:17,130
qml is a language for that it is mostly

00:04:12,960 --> 00:04:19,350
a way of declaring how things are

00:04:17,130 --> 00:04:21,900
supposed to be and then it's having

00:04:19,350 --> 00:04:27,030
others and an interpreter to actually

00:04:21,900 --> 00:04:32,760
turn it into something usable qml

00:04:27,030 --> 00:04:35,040
combined with a set of items and

00:04:32,760 --> 00:04:40,170
rectangles and text input fields and

00:04:35,040 --> 00:04:43,350
similar is what's called cute quick that

00:04:40,170 --> 00:04:48,170
is also kind of a marketing term for the

00:04:43,350 --> 00:04:53,160
concept of qml plus standard components

00:04:48,170 --> 00:04:57,930
then there is mock which is cute code

00:04:53,160 --> 00:04:59,820
generator tool that is helping to do

00:04:57,930 --> 00:05:04,170
some of the magic but it's mostly

00:04:59,820 --> 00:05:08,210
happening transparently behind the

00:05:04,170 --> 00:05:12,300
scenes but it is somehow sometimes

00:05:08,210 --> 00:05:16,290
instructed by various magic in in some

00:05:12,300 --> 00:05:19,980
of the code science cute declarative is

00:05:16,290 --> 00:05:25,110
what the source package name and the kid

00:05:19,980 --> 00:05:28,590
module upstream name for where the qml

00:05:25,110 --> 00:05:30,990
and cute quick bits live I will mostly

00:05:28,590 --> 00:05:37,140
be using UML for the language and cute

00:05:30,990 --> 00:05:39,650
quick for the actual concepts so let's

00:05:37,140 --> 00:05:39,650
get started

00:05:41,090 --> 00:05:48,690
there is basically hierarchy of types

00:05:46,350 --> 00:05:53,420
most things that can be shown on the

00:05:48,690 --> 00:05:53,420
screen is is an item oh oh

00:05:54,500 --> 00:06:04,710
derived from an item rectangle is a

00:05:57,980 --> 00:06:08,100
quite a common used item because it it

00:06:04,710 --> 00:06:10,710
has the possibility to add a background

00:06:08,100 --> 00:06:13,080
and a border and things like that but

00:06:10,710 --> 00:06:16,229
those item and rectangle has a size on

00:06:13,080 --> 00:06:18,650
the screen and then there is cute object

00:06:16,229 --> 00:06:18,650
which

00:06:19,160 --> 00:06:24,060
how are you that it's not a graphical

00:06:21,660 --> 00:06:34,530
element but it can hold data or I can

00:06:24,060 --> 00:06:37,409
hold functions or both in in many cases

00:06:34,530 --> 00:06:41,099
item or rectangle is used as container

00:06:37,409 --> 00:06:44,490
objects to put more things into it but

00:06:41,099 --> 00:06:49,639
let's start by seeing a rectangle this

00:06:44,490 --> 00:06:52,380
is one of the examples is it it's the

00:06:49,639 --> 00:06:58,280
large enough to see for most people in

00:06:52,380 --> 00:07:03,060
the back I guess we can enlarge it a bit

00:06:58,280 --> 00:07:10,940
but this is basically a rectangle this

00:07:03,060 --> 00:07:13,889
can be run and it looks like this and

00:07:10,940 --> 00:07:18,449
here we have actually an application it

00:07:13,889 --> 00:07:30,419
doesn't do much but it is there and of

00:07:18,449 --> 00:07:34,740
course we can say say that we want the

00:07:30,419 --> 00:07:36,449
background to be and I can tell I can't

00:07:34,740 --> 00:07:41,449
type today this is going to be a great

00:07:36,449 --> 00:07:46,430
live demo day it can be turned into a

00:07:41,449 --> 00:07:49,620
red rectangle but enough about simple

00:07:46,430 --> 00:07:54,719
the simple rectangle let's get back and

00:07:49,620 --> 00:07:59,639
look at it further often when you want

00:07:54,719 --> 00:08:03,630
to delay they things out you want them

00:07:59,639 --> 00:08:07,770
to kind of be attached to each other so

00:08:03,630 --> 00:08:09,479
that you have first you have text

00:08:07,770 --> 00:08:12,539
element and underneath you have an image

00:08:09,479 --> 00:08:15,690
maybe or a button or text input field or

00:08:12,539 --> 00:08:18,389
whatever you feel like and in order to

00:08:15,690 --> 00:08:20,370
say that this should be the top of this

00:08:18,389 --> 00:08:24,240
item should be attached to the bottom of

00:08:20,370 --> 00:08:26,909
the this other item or this item should

00:08:24,240 --> 00:08:29,820
fill in the other item or whatever you

00:08:26,909 --> 00:08:34,560
want you're accessing things by

00:08:29,820 --> 00:08:39,300
either referencing them as a parent or

00:08:34,560 --> 00:08:45,030
by an ID everything can get an ID and is

00:08:39,300 --> 00:08:49,260
accessed in the file so let's try add in

00:08:45,030 --> 00:08:53,030
another rectangle for those of you who

00:08:49,260 --> 00:08:56,790
were at my lightning talk the other day

00:08:53,030 --> 00:08:59,310
we are starting from around scratch as I

00:08:56,790 --> 00:09:03,090
did back then but some of you might see

00:08:59,310 --> 00:09:13,190
the ones once more but let's make a

00:09:03,090 --> 00:09:17,520
rectangle inside and make that white and

00:09:13,190 --> 00:09:19,940
let's anchor it somehow to the to the

00:09:17,520 --> 00:09:19,940
rest of it

00:09:39,460 --> 00:09:46,220
so now we have a white rectangle that is

00:09:42,920 --> 00:09:49,930
anchored to the top bottom and left of

00:09:46,220 --> 00:09:56,780
the parent item which is our red box and

00:09:49,930 --> 00:09:59,960
the red anchor is set to the horizontal

00:09:56,780 --> 00:10:03,050
center of the parent so we should kind

00:09:59,960 --> 00:10:13,550
of have a half white half red kind of

00:10:03,050 --> 00:10:17,060
thing and that's basically how you can

00:10:13,550 --> 00:10:23,860
layer things attached to to each other

00:10:17,060 --> 00:10:27,070
if we give this thing an ID and create

00:10:23,860 --> 00:10:27,070
another one

00:10:40,120 --> 00:10:43,620
right rectangle

00:10:53,769 --> 00:11:05,290
and here we have a sign rectangle that

00:10:58,360 --> 00:11:06,999
is attached to the left edge of the left

00:11:05,290 --> 00:11:17,589
edge of the sign rectangle is attached

00:11:06,999 --> 00:11:20,799
to the right edge of the white rectangle

00:11:17,589 --> 00:11:22,959
so that way things can kind of be

00:11:20,799 --> 00:11:27,509
attached together as how you want them

00:11:22,959 --> 00:11:33,339
to to be so this way this is a bit about

00:11:27,509 --> 00:11:40,809
basics in in anchoring let's get rid of

00:11:33,339 --> 00:11:45,879
this and continue so that was the basics

00:11:40,809 --> 00:11:49,420
of anchoring a next interesting thing

00:11:45,879 --> 00:11:52,889
could be if you have a similar items

00:11:49,420 --> 00:11:58,920
that you just want to be layout either

00:11:52,889 --> 00:12:00,929
down next to each other or or as a

00:11:58,920 --> 00:12:04,990
column next to each other there is a

00:12:00,929 --> 00:12:08,139
tool to container items for that row and

00:12:04,990 --> 00:12:15,399
column so let's put a couple of items in

00:12:08,139 --> 00:12:19,049
a in a row or in a column and let's do

00:12:15,399 --> 00:12:19,049
that inside the white rectangle

00:12:24,720 --> 00:12:39,209
a row of we are placing our row in the

00:12:35,490 --> 00:12:42,290
middle of our parent item which is the

00:12:39,209 --> 00:12:42,290
right white rectangle

00:13:09,490 --> 00:13:16,149
so there we have a row in the middle of

00:13:11,829 --> 00:13:20,619
our our white rectangle with some blue

00:13:16,149 --> 00:13:26,470
with some green in it in it and if we

00:13:20,619 --> 00:13:28,389
instead want them to be lay out in in

00:13:26,470 --> 00:13:35,399
the other way it's just making it a

00:13:28,389 --> 00:13:35,399
column instead and we can even do some

00:13:36,569 --> 00:13:48,040
spacing in between them this is a

00:13:45,189 --> 00:13:51,699
language that a couple of my friends who

00:13:48,040 --> 00:13:53,589
are designers have started like a lot

00:13:51,699 --> 00:13:56,709
because then they can actually easily

00:13:53,589 --> 00:13:58,809
easily Express how the one thing to look

00:13:56,709 --> 00:14:01,420
rather than having to explain it to

00:13:58,809 --> 00:14:05,429
those stupid developers who can't figure

00:14:01,420 --> 00:14:08,199
out how to implement the ideas probably

00:14:05,429 --> 00:14:11,829
but next up you might also want to have

00:14:08,199 --> 00:14:15,309
have more than one thing derived from

00:14:11,829 --> 00:14:19,089
something else so let's do a repeater a

00:14:15,309 --> 00:14:21,759
repeater is a success it repeats it can

00:14:19,089 --> 00:14:24,730
take various models that is basically

00:14:21,759 --> 00:14:26,679
what it is repeating it can be entity it

00:14:24,730 --> 00:14:30,329
could be a list of things it can be more

00:14:26,679 --> 00:14:34,569
advanced types that somehow can be

00:14:30,329 --> 00:14:37,269
iterated over but for a simple thing we

00:14:34,569 --> 00:14:41,649
could do a repeater with a text item

00:14:37,269 --> 00:14:45,509
inside let's do that inside the column

00:14:41,649 --> 00:14:45,509
to have our things actually laid out

00:15:04,340 --> 00:15:12,230
so here we have it might not maybe not

00:15:07,940 --> 00:15:14,750
all of you can see it but we have five

00:15:12,230 --> 00:15:18,350
text elements with the text from check

00:15:14,750 --> 00:15:21,740
zero to text for they are laid out in a

00:15:18,350 --> 00:15:25,370
column and that's basically all it takes

00:15:21,740 --> 00:15:27,350
for that instead of using the integer

00:15:25,370 --> 00:15:29,630
five as a model you would use a string

00:15:27,350 --> 00:15:32,180
list or whatever else you felt like

00:15:29,630 --> 00:15:36,440
would be the right thing for you the use

00:15:32,180 --> 00:15:38,420
case and the main data element if for

00:15:36,440 --> 00:15:41,480
all these simple models is basically

00:15:38,420 --> 00:15:47,540
called model data that would also be if

00:15:41,480 --> 00:15:49,880
you were putting in a string or boom if

00:15:47,540 --> 00:15:51,800
you're working in a lot of strings are

00:15:49,880 --> 00:15:55,339
symbolized what I also would be model

00:15:51,800 --> 00:15:57,790
data that was the thing isn't it

00:15:55,339 --> 00:15:57,790
something like

00:16:03,300 --> 00:16:08,790
and that how you make Stern listen in

00:16:06,120 --> 00:16:15,710
this language so you can just use a

00:16:08,790 --> 00:16:15,710
string list instead for all these things

00:16:16,160 --> 00:16:22,500
so that was repeaters and what's next

00:16:19,950 --> 00:16:26,430
oh that's events now it's going to be

00:16:22,500 --> 00:16:34,530
actually funny for various things you

00:16:26,430 --> 00:16:36,960
can do some objects has somehow can

00:16:34,530 --> 00:16:41,550
generate event it could be something

00:16:36,960 --> 00:16:45,210
coming from inside the system it could

00:16:41,550 --> 00:16:47,820
be changing of a property for some kind

00:16:45,210 --> 00:16:52,860
of reason and then there is handlers

00:16:47,820 --> 00:16:55,220
that are either on foo or on bar change

00:16:52,860 --> 00:16:58,020
depending on what kind of thing it is on

00:16:55,220 --> 00:17:00,900
foo is for a function type called

00:16:58,020 --> 00:17:03,110
signals that is basically when this

00:17:00,900 --> 00:17:06,209
signal is emitted and then do something

00:17:03,110 --> 00:17:09,120
then there is on bar change which is

00:17:06,209 --> 00:17:14,580
whenever the property of bar is changing

00:17:09,120 --> 00:17:19,170
then do whatever is is happening and we

00:17:14,580 --> 00:17:23,910
are going to use that in a moment to do

00:17:19,170 --> 00:17:25,430
Mouse interaction the very basic one is

00:17:23,910 --> 00:17:29,360
[Music]

00:17:25,430 --> 00:17:33,420
pretty much area and one click then

00:17:29,360 --> 00:17:37,350
debug right hello to to the debug

00:17:33,420 --> 00:17:44,160
console so let's try a Tomas area

00:17:37,350 --> 00:17:49,670
somewhere we could add it to the word

00:17:44,160 --> 00:17:49,670
rectangle area

00:18:04,150 --> 00:18:10,570
so now we have we those of you in the

00:18:08,980 --> 00:18:13,180
front can re see that we in you know

00:18:10,570 --> 00:18:15,880
debug console can get the word hello

00:18:13,180 --> 00:18:17,590
written out for those of you in the back

00:18:15,880 --> 00:18:18,850
you just have to trust that whatever is

00:18:17,590 --> 00:18:25,210
changing on the bottom of the story

00:18:18,850 --> 00:18:27,090
screen is hello being appended to it and

00:18:25,210 --> 00:18:30,670
this is actually how to make simple math

00:18:27,090 --> 00:18:35,380
interactions with the event handler for

00:18:30,670 --> 00:18:38,170
unclick for for mouse clicking you can

00:18:35,380 --> 00:18:41,050
of course be turn much more advanced if

00:18:38,170 --> 00:18:45,870
one wants to and we are likely ending up

00:18:41,050 --> 00:18:45,870
there in the not-too-distant future

00:18:46,300 --> 00:18:53,640
next up I will talk about what is called

00:18:49,000 --> 00:18:56,820
the controls it is a a sort of

00:18:53,640 --> 00:18:59,830
pre-prepared component that the kind of

00:18:56,820 --> 00:19:05,080
fits into your desktop it is a set of

00:18:59,830 --> 00:19:07,720
buttons and and labels checkboxes

00:19:05,080 --> 00:19:11,020
whatever else you need of standard

00:19:07,720 --> 00:19:16,690
controls to actually build a desktop

00:19:11,020 --> 00:19:18,970
application they try to follow the style

00:19:16,690 --> 00:19:23,170
of your of your system so that if you're

00:19:18,970 --> 00:19:27,880
running in a you know best tablet trying

00:19:23,170 --> 00:19:29,950
to use styling that may get it looked

00:19:27,880 --> 00:19:34,420
like no buttons if you're running in a

00:19:29,950 --> 00:19:37,030
window or something system it it takes

00:19:34,420 --> 00:19:41,470
up the buttons from your Windows system

00:19:37,030 --> 00:19:43,690
to actually use that and for Mac and KDE

00:19:41,470 --> 00:19:48,070
plasma and all sorts of other things it

00:19:43,690 --> 00:19:50,050
is trying hard to to fit into to the

00:19:48,070 --> 00:19:52,920
system to actually behave like a native

00:19:50,050 --> 00:19:52,920
desktop application

00:19:52,940 --> 00:20:02,740
[Music]

00:19:55,050 --> 00:20:09,130
so so let's try at a button or two let

00:20:02,740 --> 00:20:12,790
us put the buttons let us create one

00:20:09,130 --> 00:20:16,920
more rectangle for the other half of of

00:20:12,790 --> 00:20:16,920
the screen to put more things in

00:20:39,390 --> 00:20:44,270
did this no I

00:20:47,309 --> 00:20:58,909
I did yeah thank you that was not what I

00:20:56,249 --> 00:20:58,909
was trying to do

00:21:06,010 --> 00:21:10,840
so now we should have a sign thing on on

00:21:09,010 --> 00:21:13,600
the other side so that we have something

00:21:10,840 --> 00:21:30,520
we can actually put things into so let's

00:21:13,600 --> 00:21:42,970
do a button with a text and let's be

00:21:30,520 --> 00:21:47,230
advanced in saying text and see what

00:21:42,970 --> 00:21:49,540
happens where the button is clicked me

00:21:47,230 --> 00:21:52,000
and whenever we click it we change the

00:21:49,540 --> 00:21:55,570
text of the button and soon it's going

00:21:52,000 --> 00:22:03,010
to be quite ugly but I guess you get the

00:21:55,570 --> 00:22:04,419
concept and there is this is a button

00:22:03,010 --> 00:22:07,419
and there's a lots of other components

00:22:04,419 --> 00:22:09,510
checkboxes radio buttons whatever

00:22:07,419 --> 00:22:13,179
building blocks you would need for your

00:22:09,510 --> 00:22:18,520
your modern application table views list

00:22:13,179 --> 00:22:20,740
views there was there was other pieces

00:22:18,520 --> 00:22:23,260
sets of components for example there is

00:22:20,740 --> 00:22:26,350
the Stila component which is shipped by

00:22:23,260 --> 00:22:29,440
the jolla phone which is native things

00:22:26,350 --> 00:22:32,200
for that the 0.2 touch people have also

00:22:29,440 --> 00:22:36,299
their own set of component that i used

00:22:32,200 --> 00:22:39,190
to make the open to phone things and

00:22:36,299 --> 00:22:42,520
other device makers as well who are

00:22:39,190 --> 00:22:44,440
making their own set of style controls

00:22:42,520 --> 00:22:46,960
that actually fit into into their

00:22:44,440 --> 00:22:48,700
systems and the couple of projects that

00:22:46,960 --> 00:22:53,679
I've been hired to work on has also made

00:22:48,700 --> 00:22:56,380
their own set of things to be able to to

00:22:53,679 --> 00:23:00,429
make their own platform use or look at

00:22:56,380 --> 00:23:03,700
it as they would they wanted to and yeah

00:23:00,429 --> 00:23:07,000
the next time I think is is text there

00:23:03,700 --> 00:23:10,660
is a various text component the the

00:23:07,000 --> 00:23:13,770
basic text one we we saw already it just

00:23:10,660 --> 00:23:16,960
displays text their style in any way and

00:23:13,770 --> 00:23:19,779
the text item has its friend label over

00:23:16,960 --> 00:23:23,460
in the controls that is basically making

00:23:19,779 --> 00:23:26,320
label that fits into into your system

00:23:23,460 --> 00:23:29,259
similar there is text input and text

00:23:26,320 --> 00:23:32,529
field where a text input is every basic

00:23:29,259 --> 00:23:34,389
type and text field is a style to look

00:23:32,529 --> 00:23:39,159
like a text input on your on your native

00:23:34,389 --> 00:23:43,190
platform and texted it is for texted in

00:23:39,159 --> 00:23:44,909
text area are multi-line items just like

00:23:43,190 --> 00:23:47,529
[Music]

00:23:44,909 --> 00:23:55,119
there are also in either style or

00:23:47,529 --> 00:23:58,570
understand next up this is likely where

00:23:55,119 --> 00:24:02,320
it's going to be funny let us do some

00:23:58,570 --> 00:24:06,369
magic will behavior it is basically you

00:24:02,320 --> 00:24:10,029
can set up what happens when things

00:24:06,369 --> 00:24:14,259
change this is an example of a number

00:24:10,029 --> 00:24:16,570
animation that well when rotation

00:24:14,259 --> 00:24:19,089
changes then it should happen with a

00:24:16,570 --> 00:24:21,609
number animation that takes 500

00:24:19,089 --> 00:24:24,879
milliseconds and uses a fancy eating

00:24:21,609 --> 00:24:29,200
curve to make it look smart let's try it

00:24:24,879 --> 00:24:32,349
in practice we have now created a

00:24:29,200 --> 00:24:40,599
pattern let's do something smarter with

00:24:32,349 --> 00:24:52,029
that instead unclick red rectangle that

00:24:40,599 --> 00:24:55,979
invitation plus equals 180 and for the

00:24:52,029 --> 00:24:55,979
white rectangle behave

00:25:24,180 --> 00:25:34,850
so when we're cleaning it we should

00:25:27,710 --> 00:25:39,360
fancy rotate the wide to rectangle and

00:25:34,850 --> 00:25:43,560
we see all love a nice red background

00:25:39,360 --> 00:25:45,750
that we had before and the eating out

00:25:43,560 --> 00:25:49,200
bounce is the thing that is actually

00:25:45,750 --> 00:25:51,150
making it bounce a bit if we think that

00:25:49,200 --> 00:25:58,020
a bit too fancy you can just go for the

00:25:51,150 --> 00:26:00,740
the default which is just just rotating

00:25:58,020 --> 00:26:03,030
it that's a nice it depends on your

00:26:00,740 --> 00:26:10,640
expectations of offensiveness

00:26:03,030 --> 00:26:10,640
and I know a whole lot matter of taste

00:26:10,670 --> 00:26:21,000
transitions is a way to do more advanced

00:26:15,390 --> 00:26:24,150
behaviors or things that happens on

00:26:21,000 --> 00:26:27,330
specific times States is part of it when

00:26:24,150 --> 00:26:29,910
you swing for example I stay it happens

00:26:27,330 --> 00:26:31,740
and then you transition from one state

00:26:29,910 --> 00:26:39,090
to another by applying the following

00:26:31,740 --> 00:26:41,130
changes and I'm not going to to show

00:26:39,090 --> 00:26:43,740
that today but that's basically baby

00:26:41,130 --> 00:26:49,350
behaviors for the little bit more

00:26:43,740 --> 00:26:51,960
advanced usages but yeah next up I will

00:26:49,350 --> 00:26:56,220
just mention the qml scene application

00:26:51,960 --> 00:27:00,600
which is basically a command line tool

00:26:56,220 --> 00:27:02,640
that runs several files it is what

00:27:00,600 --> 00:27:05,400
should clear here has been using behind

00:27:02,640 --> 00:27:09,300
the scenes to actually execute what what

00:27:05,400 --> 00:27:15,770
we have been providing and it can be

00:27:09,300 --> 00:27:15,770
invoked on command line just as easy

00:27:17,390 --> 00:27:24,240
next up for actually extending good

00:27:21,690 --> 00:27:26,790
quick one might want to do that for

00:27:24,240 --> 00:27:32,220
example you're creating a thing that you

00:27:26,790 --> 00:27:33,930
want to use for another project or just

00:27:32,220 --> 00:27:35,720
another place in your application

00:27:33,930 --> 00:27:38,450
instead of composting

00:27:35,720 --> 00:27:41,120
it's just usually giving more problems

00:27:38,450 --> 00:27:47,480
than actually solving if you are

00:27:41,120 --> 00:27:50,960
creating an item in a file as the only

00:27:47,480 --> 00:27:55,700
content then you can can reference this

00:27:50,960 --> 00:28:00,800
item by by just creating it so if you

00:27:55,700 --> 00:28:10,480
retry create a small item I'm just

00:28:00,800 --> 00:28:16,130
getting this thing to creating yeah

00:28:10,480 --> 00:28:26,030
create your quick file I could also

00:28:16,130 --> 00:28:29,900
create a B touch or similar now we have

00:28:26,030 --> 00:28:32,000
a thing called a file called fook UML

00:28:29,900 --> 00:28:36,590
and it is a rectangle and we are going

00:28:32,000 --> 00:28:38,930
to color it color it what color are we

00:28:36,590 --> 00:28:42,520
missing we haven't anything blue

00:28:38,930 --> 00:28:48,950
currently so this is called true it is

00:28:42,520 --> 00:28:58,340
100 pixels wide and 62 pixel high so

00:28:48,950 --> 00:29:02,900
let's put it into to our column so now

00:28:58,340 --> 00:29:06,830
we have created a food item here and we

00:29:02,900 --> 00:29:09,410
have a blue square all of you can of

00:29:06,830 --> 00:29:11,320
course make it more advanced that as you

00:29:09,410 --> 00:29:24,110
need it but this is basically how to

00:29:11,320 --> 00:29:27,590
reuse parts in other places so yeah now

00:29:24,110 --> 00:29:32,090
we're going to some of you making things

00:29:27,590 --> 00:29:36,710
a bit a bit more complex for this is

00:29:32,090 --> 00:29:39,320
Debian bug 7 4 3 2 5 which is a thing I

00:29:36,710 --> 00:29:41,180
made leading up to a April 1st last year

00:29:39,320 --> 00:29:44,060
it is CPU

00:29:41,180 --> 00:29:47,090
load monitor thing that basically shows

00:29:44,060 --> 00:29:50,750
various pictures depending on your CPU

00:29:47,090 --> 00:29:54,800
load it is using a bit of a native code

00:29:50,750 --> 00:29:57,040
to actually find the CPU the current

00:29:54,800 --> 00:30:00,500
view yellow and then it's being

00:29:57,040 --> 00:30:02,750
displayed with a small Q so good quick

00:30:00,500 --> 00:30:08,570
application and we're going to talk a

00:30:02,750 --> 00:30:13,190
bit about that in general for

00:30:08,570 --> 00:30:18,800
interacting with C++ this is as if it

00:30:13,190 --> 00:30:20,690
was a full tip at first class for those

00:30:18,800 --> 00:30:28,130
of you velocity plus half of it looks

00:30:20,690 --> 00:30:30,740
weird and but let's take it from the top

00:30:28,130 --> 00:30:33,020
we have created a thing called my object

00:30:30,740 --> 00:30:37,520
it inherits from the class called Q

00:30:33,020 --> 00:30:39,260
object then it has a macro called Q

00:30:37,520 --> 00:30:41,090
object that's needed for most things

00:30:39,260 --> 00:30:43,370
that derives from pure object it's a

00:30:41,090 --> 00:30:46,490
macro that extends into four or five

00:30:43,370 --> 00:30:47,500
lines of code for setting up various

00:30:46,490 --> 00:30:51,350
cute bits

00:30:47,500 --> 00:30:53,060
the next thing to property that's a

00:30:51,350 --> 00:30:56,000
another macro it is defined to

00:30:53,060 --> 00:30:58,700
absolutely nothing the purpose of it is

00:30:56,000 --> 00:31:01,460
for the the major be a compiler muck

00:30:58,700 --> 00:31:03,980
that I mentioned first so this is where

00:31:01,460 --> 00:31:08,650
we're actually instructing muck to

00:31:03,980 --> 00:31:13,570
generate some code based off of this

00:31:08,650 --> 00:31:18,590
this is basically exposing a type called

00:31:13,570 --> 00:31:21,160
called foo that can be read by a method

00:31:18,590 --> 00:31:25,970
called foo and set by a set foo math

00:31:21,160 --> 00:31:34,220
method and whenever it's changed this

00:31:25,970 --> 00:31:36,470
function is called and we have our get

00:31:34,220 --> 00:31:38,570
method that just returns the member and

00:31:36,470 --> 00:31:43,790
we have a set of function that just sets

00:31:38,570 --> 00:31:46,010
the member and calls this function next

00:31:43,790 --> 00:31:48,670
fancy thing is cue signals that is

00:31:46,010 --> 00:31:54,400
another file that is mostly meant for

00:31:48,670 --> 00:32:01,000
for muk kaew signals is defined

00:31:54,400 --> 00:32:02,770
public and it instructs the muck that it

00:32:01,000 --> 00:32:12,010
should generate the actual method body

00:32:02,770 --> 00:32:14,530
and some some metadata around it and and

00:32:12,010 --> 00:32:18,720
that's more or less what what actually

00:32:14,530 --> 00:32:22,020
needed to expose simplest things to

00:32:18,720 --> 00:32:24,880
secure it quick yeah we can now create a

00:32:22,020 --> 00:32:27,340
myopic thing you know where we can set

00:32:24,880 --> 00:32:29,170
the food property on it and if the food

00:32:27,340 --> 00:32:37,000
property changes we can actually react

00:32:29,170 --> 00:32:41,350
to that yeah you can create it by

00:32:37,000 --> 00:32:46,000
creating a my object just like we

00:32:41,350 --> 00:32:48,309
created the other food thing in just

00:32:46,000 --> 00:32:50,740
with with Thank You ml but the

00:32:48,309 --> 00:32:54,600
application from before is called a hot

00:32:50,740 --> 00:32:54,600
Pole tech and let's look a bit at that

00:32:56,010 --> 00:33:06,580
it is it is a CPU not monitor and this

00:33:03,370 --> 00:33:08,110
is the entirety of the header file of

00:33:06,580 --> 00:33:13,150
that weird apart

00:33:08,110 --> 00:33:14,920
defining an inner value with various CPU

00:33:13,150 --> 00:33:22,540
load categories and then we are just

00:33:14,920 --> 00:33:27,010
having a method that returns the current

00:33:22,540 --> 00:33:33,010
load as expected ourselves for our load

00:33:27,010 --> 00:33:35,400
enum and and that's about it if you look

00:33:33,010 --> 00:33:38,170
at the actual implementation of things

00:33:35,400 --> 00:33:41,140
we of course creating a timer that pulse

00:33:38,170 --> 00:33:43,900
the the system for the CPU note because

00:33:41,140 --> 00:33:46,780
that way the CPU and monitor uses more

00:33:43,900 --> 00:33:51,730
CPU as all CPU monitors does it's just a

00:33:46,780 --> 00:33:53,230
feature they all to kind of ensure that

00:33:51,730 --> 00:33:54,550
that more things happened and the CPU

00:33:53,230 --> 00:34:00,970
load monitor actually looks like it's

00:33:54,550 --> 00:34:03,400
doing something but yeah that's just a

00:34:00,970 --> 00:34:05,600
timer that every second checks what's

00:34:03,400 --> 00:34:08,460
the CPU load and

00:34:05,600 --> 00:34:10,950
if the CPU load is different from last

00:34:08,460 --> 00:34:17,240
time we are going to communicate to our

00:34:10,950 --> 00:34:17,240
GUI bit of it that the load has changed

00:34:17,720 --> 00:34:30,899
this thing is C standard library gypsy

00:34:29,069 --> 00:34:37,290
thing that's or something like that that

00:34:30,899 --> 00:34:41,069
can somehow get me the EQ and load of

00:34:37,290 --> 00:34:46,589
the of the system and then we're just

00:34:41,069 --> 00:34:49,740
mapping the load to our aluminum it is a

00:34:46,589 --> 00:34:55,669
simple application that if I'm switching

00:34:49,740 --> 00:34:59,069
to that project it is just a square with

00:34:55,669 --> 00:35:02,700
an image and I have not that much

00:34:59,069 --> 00:35:06,710
running on my computer system but this

00:35:02,700 --> 00:35:06,710
is when there is no load on the system

00:35:10,520 --> 00:35:17,310
this is small s all the if there are we

00:35:15,420 --> 00:35:20,010
running this time out method every

00:35:17,310 --> 00:35:23,280
second that queries the system forth

00:35:20,010 --> 00:35:25,079
loud and then if it's different from the

00:35:23,280 --> 00:35:34,550
last load then we are plating the the

00:35:25,079 --> 00:35:41,910
GUI the attached file is we have a

00:35:34,550 --> 00:35:45,540
rectangle unless you have seen before it

00:35:41,910 --> 00:35:48,599
has I don't know width and then we are

00:35:45,540 --> 00:35:50,819
declaring a local member variable of

00:35:48,599 --> 00:35:55,740
this rectangle that is basically our

00:35:50,819 --> 00:36:00,690
list of of images in a specific order

00:35:55,740 --> 00:36:04,260
and we then have an image type which is

00:36:00,690 --> 00:36:09,180
another good quick basic type that

00:36:04,260 --> 00:36:13,770
basically just shows an image now we are

00:36:09,180 --> 00:36:15,270
creating our our our CPU load object

00:36:13,770 --> 00:36:18,330
that is the one that we actually to

00:36:15,270 --> 00:36:23,490
carry declared in Supercross

00:36:18,330 --> 00:36:27,960
and whenever the load changes then it

00:36:23,490 --> 00:36:36,150
sets the source of the image object to a

00:36:27,960 --> 00:36:39,300
member of our pics bar and this is

00:36:36,150 --> 00:36:48,210
basically all there is to that fancy CPU

00:36:39,300 --> 00:36:50,490
load monitor so yeah that is hot pole

00:36:48,210 --> 00:36:51,990
tech if somebody wants to package it for

00:36:50,490 --> 00:36:53,970
Debian you're free to do that but you

00:36:51,990 --> 00:36:57,440
might need to sort out licensing around

00:36:53,970 --> 00:36:59,580
images or get the model and replace them

00:36:57,440 --> 00:37:06,030
the model is down there in the middle

00:36:59,580 --> 00:37:07,560
smiling in general you want to create in

00:37:06,030 --> 00:37:10,080
many cases you want to create most of

00:37:07,560 --> 00:37:14,070
your business logic in C++ and much of

00:37:10,080 --> 00:37:18,390
your GUI in UML you can for some more

00:37:14,070 --> 00:37:23,100
advanced GUI elements also use C++ for

00:37:18,390 --> 00:37:26,850
those depending on how much custom

00:37:23,100 --> 00:37:30,380
painting or a fancy OpenGL calls you

00:37:26,850 --> 00:37:33,060
need to do when you're in your own on

00:37:30,380 --> 00:37:35,850
depending on what kind of tenseness you

00:37:33,060 --> 00:37:40,350
want you you can interact closely with

00:37:35,850 --> 00:37:44,970
with the underlying system but now we

00:37:40,350 --> 00:37:48,240
are getting a bit past the basic or for

00:37:44,970 --> 00:37:51,120
beginners part of it so I will not go

00:37:48,240 --> 00:37:53,640
much further into that here but in

00:37:51,120 --> 00:37:56,700
general as you saw we created the foo

00:37:53,640 --> 00:37:58,880
object that was just the food that qml

00:37:56,700 --> 00:38:03,510
with a rectangle in it and we used it

00:37:58,880 --> 00:38:07,620
similar to how the hot pole tech

00:38:03,510 --> 00:38:10,110
application just creates a CPU note it

00:38:07,620 --> 00:38:19,440
is very very similar on how it's

00:38:10,110 --> 00:38:21,210
actually done for food for the the end

00:38:19,440 --> 00:38:23,850
developer it doesn't matter who where

00:38:21,210 --> 00:38:26,550
it's actually created it's just a matter

00:38:23,850 --> 00:38:28,940
of abusing it it looks the same and you

00:38:26,550 --> 00:38:31,530
can actually implement it first using

00:38:28,940 --> 00:38:32,069
UML and then you might figure out that

00:38:31,530 --> 00:38:33,380
you need

00:38:32,069 --> 00:38:37,199
some more things that you would then

00:38:33,380 --> 00:38:40,289
move your entire item into a cheaper

00:38:37,199 --> 00:38:42,989
faster thing but yeah if you are curious

00:38:40,289 --> 00:38:48,709
and one to know more there is a couple

00:38:42,989 --> 00:38:48,709
of of Link's German book the rock is

00:38:50,809 --> 00:38:56,160
appropriate written by a couple of great

00:38:53,759 --> 00:38:59,819
people who are quite good at this they

00:38:56,160 --> 00:39:03,630
may they are from the Plaga coal company

00:38:59,819 --> 00:39:06,509
I think and they do mostly qml for for

00:39:03,630 --> 00:39:10,469
in-car navigation no in entertainment

00:39:06,509 --> 00:39:13,940
systems and other similar things there's

00:39:10,469 --> 00:39:17,369
of course the official documentation

00:39:13,940 --> 00:39:21,599
then then there is the ok declarative

00:39:17,369 --> 00:39:25,019
kit module by PI Q by K T which is

00:39:21,599 --> 00:39:29,039
various errands and and more

00:39:25,019 --> 00:39:30,839
functionality that that KD has needed

00:39:29,039 --> 00:39:33,809
for for their products and then of

00:39:30,839 --> 00:39:35,249
course there is the actually sourced

00:39:33,809 --> 00:39:38,989
heard of the module for those who are

00:39:35,249 --> 00:39:44,640
way past beginners or getting started

00:39:38,989 --> 00:39:46,890
and yeah that's about it that's me you

00:39:44,640 --> 00:39:53,009
are free to to reach me by however you

00:39:46,890 --> 00:39:56,969
want and or contact me when I'm here but

00:39:53,009 --> 00:40:03,299
yeah any questions or other things then

00:39:56,969 --> 00:40:05,279
now it's time and if not then I will

00:40:03,299 --> 00:40:08,910
just produce that Katie is running a

00:40:05,279 --> 00:40:11,069
fundraiser for the next year of doing

00:40:08,910 --> 00:40:16,150
more magic to the world and you can

00:40:11,069 --> 00:40:25,679
access that link and thank you

00:40:16,150 --> 00:40:25,679
[Applause]

00:40:43,490 --> 00:41:06,830
oh yeah it is fix this for for-4 some

00:41:01,910 --> 00:41:08,870
uses what you want to do is for some

00:41:06,830 --> 00:41:12,320
things you just want it to be pixel

00:41:08,870 --> 00:41:14,930
placed as you expect it to do like for

00:41:12,320 --> 00:41:18,380
example if you're targeting device like

00:41:14,930 --> 00:41:20,900
this you know how many pixels it is but

00:41:18,380 --> 00:41:24,860
many of the things you wonder if for

00:41:20,900 --> 00:41:26,870
example using it anchoring for for lay

00:41:24,860 --> 00:41:31,970
they laying out things you might want to

00:41:26,870 --> 00:41:34,610
have I think in the top that is I don't

00:41:31,970 --> 00:41:37,790
know some kind of fitting size it could

00:41:34,610 --> 00:41:41,630
be just whatever size of a text or a

00:41:37,790 --> 00:41:44,960
button and then at the bottom you might

00:41:41,630 --> 00:41:46,430
do do something similar and then you

00:41:44,960 --> 00:41:47,900
just start going to put an item in the

00:41:46,430 --> 00:41:50,480
middle that just anchor to the top of

00:41:47,900 --> 00:41:53,090
the to the bottom of the top bar and to

00:41:50,480 --> 00:41:55,850
the top top of the bottom bar and then

00:41:53,090 --> 00:41:57,650
when you resize the window your top and

00:41:55,850 --> 00:42:01,240
your bottom bar stays at the same size

00:41:57,650 --> 00:42:04,610
and your thing in the middle just

00:42:01,240 --> 00:42:07,220
resizes if we are trying to take our

00:42:04,610 --> 00:42:12,410
current application or what make you an

00:42:07,220 --> 00:42:26,300
application I'm just switching here if

00:42:12,410 --> 00:42:31,550
we drag a bit given that our middle

00:42:26,300 --> 00:42:33,920
anchor is to the widenar the blue one

00:42:31,550 --> 00:42:40,270
above anchor to the center of the parent

00:42:33,920 --> 00:42:46,400
so it is basically just adapting to that

00:42:40,270 --> 00:42:48,650
so as long as you use anchoring the the

00:42:46,400 --> 00:42:54,560
sizes are just whatever default sizes

00:42:48,650 --> 00:42:57,380
you wanted to have but but you can use

00:42:54,560 --> 00:43:00,620
pixel perfection or pixel play

00:42:57,380 --> 00:43:03,560
and if if that was your thing but you

00:43:00,620 --> 00:43:10,640
can also just anchor things things to

00:43:03,560 --> 00:43:14,920
each other if we extend how much time's

00:43:10,640 --> 00:43:14,920
left okay

00:43:15,100 --> 00:43:28,430
for example we have we're extending our

00:43:20,120 --> 00:43:38,180
unclick handler here to to also expand

00:43:28,430 --> 00:43:44,320
the text as we had it before and we are

00:43:38,180 --> 00:43:44,320
giving it an ID creating another

00:43:51,170 --> 00:43:55,900
[Music]

00:44:08,850 --> 00:44:14,700
now have this rectangle that is anchored

00:44:11,430 --> 00:44:17,790
to the left on that of the button and to

00:44:14,700 --> 00:44:19,890
the right of the screen or the right of

00:44:17,790 --> 00:44:22,080
the parent object and when we are

00:44:19,890 --> 00:44:30,840
clicking on this oh right we also have

00:44:22,080 --> 00:44:33,600
the the rotation but if you look up and

00:44:30,840 --> 00:44:36,330
now when we maximized it our whatever

00:44:33,600 --> 00:44:38,880
got bigger again and now it's shrinking

00:44:36,330 --> 00:44:40,920
once more so it's the same kind of

00:44:38,880 --> 00:44:44,250
techniques you can use for creating

00:44:40,920 --> 00:44:46,380
things that dynamically adapts to

00:44:44,250 --> 00:44:49,280
whatever you want you likely want to

00:44:46,380 --> 00:44:51,930
have some fixed size elements because

00:44:49,280 --> 00:44:54,240
having a button that fills your entire

00:44:51,930 --> 00:44:58,860
screen is really actually what you want

00:44:54,240 --> 00:45:04,020
even if the screen is that big so yeah

00:44:58,860 --> 00:45:11,840
it is there to use for that kind of

00:45:04,020 --> 00:45:15,840
thing as that one could you also say for

00:45:11,840 --> 00:45:18,270
the button size maybe 50% of the parent

00:45:15,840 --> 00:45:22,910
size can you say it or can you express

00:45:18,270 --> 00:45:22,910
the height or the width in percentage

00:45:38,109 --> 00:45:47,799
I think this is going to be fun so we

00:45:44,650 --> 00:45:50,380
have now set the height to be half of

00:45:47,799 --> 00:45:54,220
the wizard or the button you can

00:45:50,380 --> 00:45:57,700
basically reference all other elements

00:45:54,220 --> 00:46:01,900
in the same file and you have the full

00:45:57,700 --> 00:46:06,519
power of JavaScript to actually do

00:46:01,900 --> 00:46:09,579
whatever you want whenever the width of

00:46:06,519 --> 00:46:14,200
the button changes then the height of

00:46:09,579 --> 00:46:16,239
the rectangle gets recalculated you can

00:46:14,200 --> 00:46:20,019
find these however you you want them to

00:46:16,239 --> 00:46:23,579
be bound so it's just a matter of using

00:46:20,019 --> 00:46:23,579
your imagination

00:46:29,710 --> 00:46:34,510
okay since your father you're told

00:46:34,680 --> 00:46:40,120

YouTube URL: https://www.youtube.com/watch?v=HKH1yLX5tmQ


