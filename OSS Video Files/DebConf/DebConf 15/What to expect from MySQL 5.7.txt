Title: What to expect from MySQL 5.7
Publication date: 2017-12-02
Playlist: DebConf 15
Description: 
	by Norvald H. Ryeng

At: DebConf15
https://summit.debconf.org/debconf15/meeting/197/what-to-expect-from-mysql-57/
https://debconf15.debconf.org/

MySQL 5.7 contains more new functionality and improvements than any previous release. Some of these changes were made specifically to make packaging of MySQL and software that uses MySQL easier, often based on input from package maintainers in Debian and other distros.

Join us for a tour of packaging improvements and challenges, and how we work with these topics upstream.

Room: Berlin/London
Scheduled start: 2015-08-15 15:00:00
Captions: 
	00:00:00,949 --> 00:00:06,000
my name is Norville I'm with the MySQL

00:00:04,140 --> 00:00:10,830
engineering team

00:00:06,000 --> 00:00:13,740
I'm working on my SQL optimizer mostly

00:00:10,830 --> 00:00:15,900
with GIS actually that's not what I'm

00:00:13,740 --> 00:00:19,859
talking about today we have a lot of new

00:00:15,900 --> 00:00:21,560
features we have JSON document source we

00:00:19,859 --> 00:00:25,980
have generated columns virtual columns

00:00:21,560 --> 00:00:27,570
page compression and partitioning and

00:00:25,980 --> 00:00:30,090
stuff and I'm not going to talk about

00:00:27,570 --> 00:00:34,170
any of that I'm going to talk about what

00:00:30,090 --> 00:00:36,780
MySQL 5:7 gives two packs containers in

00:00:34,170 --> 00:00:37,170
in distress not only my squirrel package

00:00:36,780 --> 00:00:39,480
maintainers

00:00:37,170 --> 00:00:43,500
I work on a MySQL packaging team myself

00:00:39,480 --> 00:00:46,079
in Debian but also to all the

00:00:43,500 --> 00:00:50,600
applications that use my squirrel so

00:00:46,079 --> 00:00:53,100
we've used a client library you can also

00:00:50,600 --> 00:00:57,840
there are some change in my school 5:7

00:00:53,100 --> 00:01:00,300
that we might want to be aware of as you

00:00:57,840 --> 00:01:02,070
might know five seven is not out yet we

00:01:00,300 --> 00:01:06,060
haven't finished my school five seven

00:01:02,070 --> 00:01:08,130
it's released kind of - I think it's

00:01:06,060 --> 00:01:11,400
still nothing is really fixed so

00:01:08,130 --> 00:01:14,520
anything I say here me well it might not

00:01:11,400 --> 00:01:18,960
end up in define five seven but we're

00:01:14,520 --> 00:01:21,509
pretty sure it will so I'm going to

00:01:18,960 --> 00:01:24,229
start with how we just search how we

00:01:21,509 --> 00:01:26,670
interact with this was especially Debian

00:01:24,229 --> 00:01:28,320
then I'm going to talk about some

00:01:26,670 --> 00:01:31,670
changes that we actually introduced in

00:01:28,320 --> 00:01:36,270
Debian with - ql5 six and not five seven

00:01:31,670 --> 00:01:39,180
but my conf goes through some things we

00:01:36,270 --> 00:01:41,640
done for Susan D support some changes to

00:01:39,180 --> 00:01:44,460
the my scope client library some

00:01:41,640 --> 00:01:46,110
security hardening features and some

00:01:44,460 --> 00:01:50,159
other changes that we made that you

00:01:46,110 --> 00:01:54,750
might want to know what so let's just

00:01:50,159 --> 00:01:58,729
get started with the district's or I can

00:01:54,750 --> 00:02:01,530
just go to this page this is a faceless

00:01:58,729 --> 00:02:05,490
company brand thing that you don't know

00:02:01,530 --> 00:02:09,270
how to contact this actually has an

00:02:05,490 --> 00:02:11,400
email address and here is the face so

00:02:09,270 --> 00:02:12,720
I'm if you don't know I'm the single

00:02:11,400 --> 00:02:13,870
point of contact for package maintainers

00:02:12,720 --> 00:02:17,319
that won't talk about

00:02:13,870 --> 00:02:19,060
my SQL servers particularly but also if

00:02:17,319 --> 00:02:20,680
you have uttered muscular products you

00:02:19,060 --> 00:02:23,769
want to talk about just come to me I'll

00:02:20,680 --> 00:02:26,459
get you in touch with the right person

00:02:23,769 --> 00:02:33,730
I've been that for a couple years now

00:02:26,459 --> 00:02:35,920
for I think maybe and I'm kind of

00:02:33,730 --> 00:02:39,040
answering questions that are directed to

00:02:35,920 --> 00:02:41,349
my scroll engineering so if you have

00:02:39,040 --> 00:02:44,290
some some kind of technical issues

00:02:41,349 --> 00:02:45,730
I can probably not answer the question

00:02:44,290 --> 00:02:49,060
but I can find some people that will

00:02:45,730 --> 00:02:52,510
answer that question if it's das I can

00:02:49,060 --> 00:02:55,269
probably answer but the point is that

00:02:52,510 --> 00:02:58,090
I'm in engineering I'm a developer I

00:02:55,269 --> 00:02:59,319
know what the technical stuff I'm

00:02:58,090 --> 00:03:03,430
talking about I'm can probably

00:02:59,319 --> 00:03:06,010
understand your technical question we

00:03:03,430 --> 00:03:12,220
also have release engineering people

00:03:06,010 --> 00:03:15,159
working in distress we've had a release

00:03:12,220 --> 00:03:18,370
engineer in Fedora for a couple years

00:03:15,159 --> 00:03:21,690
now he's now a co maintainer of the - Co

00:03:18,370 --> 00:03:25,299
package they're my school server package

00:03:21,690 --> 00:03:27,000
we have had and release engineer and my

00:03:25,299 --> 00:03:30,970
in Debian as well

00:03:27,000 --> 00:03:33,160
but he's kind of leaving Oracle's so we

00:03:30,970 --> 00:03:35,379
have a new guy coming in so if you ever

00:03:33,160 --> 00:03:38,139
meet Lars he will probably happy that

00:03:35,379 --> 00:03:40,629
you know that he's working with Debian

00:03:38,139 --> 00:03:43,209
and he is trying to get a debit

00:03:40,629 --> 00:03:45,879
maintainer status someday he's we don't

00:03:43,209 --> 00:03:49,060
new to that so it will happen later not

00:03:45,879 --> 00:03:50,620
today but um that's kind of the goal we

00:03:49,060 --> 00:03:53,620
have we know the my school packaging

00:03:50,620 --> 00:03:57,340
team and Debian is understaffed

00:03:53,620 --> 00:03:58,720
when it comes to people upload rights so

00:03:57,340 --> 00:04:01,930
that's why we need a maintainer to

00:03:58,720 --> 00:04:05,290
offload James who is doing James page

00:04:01,930 --> 00:04:07,060
who's doing most of that work now my

00:04:05,290 --> 00:04:08,919
work since he is trying to get his

00:04:07,060 --> 00:04:10,870
maintainer Cyrus I try to not actually

00:04:08,919 --> 00:04:14,919
put fixes and stuff you know I want him

00:04:10,870 --> 00:04:16,930
to do those fixes and and push that so I

00:04:14,919 --> 00:04:17,349
try to coordinate mostly between this

00:04:16,930 --> 00:04:19,870
rose

00:04:17,349 --> 00:04:21,340
so if debian wants to do something and

00:04:19,870 --> 00:04:23,140
Rannoch wants is something else and

00:04:21,340 --> 00:04:26,320
there's on sue soap is this guys here if

00:04:23,140 --> 00:04:27,730
they want to do something in one way I

00:04:26,320 --> 00:04:29,590
can try to

00:04:27,730 --> 00:04:31,360
these packs maintainers try to find

00:04:29,590 --> 00:04:34,300
solution that works for all so we don't

00:04:31,360 --> 00:04:36,430
diverge between distance masculine Linux

00:04:34,300 --> 00:04:38,680
should be - going on Linux and and not

00:04:36,430 --> 00:04:41,260
different on each platform well unless

00:04:38,680 --> 00:04:45,820
it has to be because of some choice of

00:04:41,260 --> 00:04:49,540
in its system or whatever and we also

00:04:45,820 --> 00:04:52,510
discuss engage package maintainers when

00:04:49,540 --> 00:04:54,700
we have important changes coming up we

00:04:52,510 --> 00:04:57,240
had some security enhancements that we

00:04:54,700 --> 00:05:01,110
actually have been allowed to push into

00:04:57,240 --> 00:05:03,700
stable releases because it's so it

00:05:01,110 --> 00:05:05,380
doesn't disturb anything that's

00:05:03,700 --> 00:05:08,800
currently in Seoul and it's so important

00:05:05,380 --> 00:05:11,320
to enhance security but also we try to

00:05:08,800 --> 00:05:13,890
avoid making changes in in stable

00:05:11,320 --> 00:05:18,610
releases we have an agreement with

00:05:13,890 --> 00:05:20,590
canonical the was called the micro

00:05:18,610 --> 00:05:22,540
release exception for for my scroll

00:05:20,590 --> 00:05:24,010
which means that they don't really they

00:05:22,540 --> 00:05:28,090
will take all our patches because they

00:05:24,010 --> 00:05:31,150
trust our our quality assurance but that

00:05:28,090 --> 00:05:33,940
does that means that we really don't

00:05:31,150 --> 00:05:37,150
want to push too much stuff in to say

00:05:33,940 --> 00:05:38,800
releases actually the distrust I think

00:05:37,150 --> 00:05:40,690
Debian is probably most conservative one

00:05:38,800 --> 00:05:42,820
that we're dealing with there's no

00:05:40,690 --> 00:05:44,710
problem with that it's just a fact that

00:05:42,820 --> 00:05:48,280
Devin is more conservative I think as a

00:05:44,710 --> 00:05:51,100
user that's a real good thing as well so

00:05:48,280 --> 00:05:52,300
often we will try to kind of clear this

00:05:51,100 --> 00:05:54,220
with Debian people first

00:05:52,300 --> 00:05:56,020
Debian will be first in line because

00:05:54,220 --> 00:05:57,580
they're usually the most restrictive

00:05:56,020 --> 00:06:00,460
ones and if they approve it we can

00:05:57,580 --> 00:06:03,580
pretty much just kind of expect the

00:06:00,460 --> 00:06:05,110
other ones to approve it as well that's

00:06:03,580 --> 00:06:07,420
kind of the way it works but we're also

00:06:05,110 --> 00:06:09,190
maybe a bit more embedded into Debian

00:06:07,420 --> 00:06:12,040
than into other distress maybe because

00:06:09,190 --> 00:06:16,840
I'm Debian I'm going to use it myself I

00:06:12,040 --> 00:06:20,080
use both actually one of the things we

00:06:16,840 --> 00:06:22,510
worked out in Debian canonical invited

00:06:20,080 --> 00:06:27,610
all the mascot packaging team to London

00:06:22,510 --> 00:06:30,070
last year last Christmas we figured out

00:06:27,610 --> 00:06:32,350
how to make mice ql on the forks there's

00:06:30,070 --> 00:06:34,450
Aria DBM per cone as well in in Debian

00:06:32,350 --> 00:06:37,990
how to make them all live together

00:06:34,450 --> 00:06:41,020
without getting too much into package

00:06:37,990 --> 00:06:41,569
dependencies so we split the

00:06:41,020 --> 00:06:43,309
configuration

00:06:41,569 --> 00:06:46,509
file which is got all the forks use the

00:06:43,309 --> 00:06:49,369
same configuration file as mask well

00:06:46,509 --> 00:06:50,839
there's also the client and service

00:06:49,369 --> 00:06:52,879
using the same configuration file which

00:06:50,839 --> 00:06:56,449
makes it even more complicated because

00:06:52,879 --> 00:06:58,039
there's only one there's the live - girl

00:06:56,449 --> 00:06:59,959
client library it's only one copy

00:06:58,039 --> 00:07:04,429
there's no more UDP version of that they

00:06:59,959 --> 00:07:05,899
have a separate one so it's really a

00:07:04,429 --> 00:07:07,669
complicated mix of client-to-server

00:07:05,899 --> 00:07:11,119
options with different types of servers

00:07:07,669 --> 00:07:13,669
and we finally made a solution to that

00:07:11,119 --> 00:07:18,379
it comes in Debian with my school five

00:07:13,669 --> 00:07:21,379
six and it really just creates kind of

00:07:18,379 --> 00:07:29,319
an alternative like system for the mic

00:07:21,379 --> 00:07:31,789
on file we also ask my school and and

00:07:29,319 --> 00:07:33,830
especially Merida we are diverging

00:07:31,789 --> 00:07:35,360
they're already not fully disk

00:07:33,830 --> 00:07:39,349
compatible depending on which features

00:07:35,360 --> 00:07:41,599
using there are plans in how and they're

00:07:39,349 --> 00:07:43,339
how to kind of split to de directory so

00:07:41,599 --> 00:07:45,769
that they don't kind of compete for the

00:07:43,339 --> 00:07:47,959
same database directly and then maybe

00:07:45,769 --> 00:07:51,889
have migration tools if you want to have

00:07:47,959 --> 00:07:55,419
that come to the extent that we are able

00:07:51,889 --> 00:08:00,709
to create migration tools and and have

00:07:55,419 --> 00:08:02,839
resources to do that but I think that we

00:08:00,709 --> 00:08:07,579
might have to split one day because they

00:08:02,839 --> 00:08:08,809
are diverging I think Marie db10 is

00:08:07,579 --> 00:08:11,389
doing something that might spell 5:6

00:08:08,809 --> 00:08:13,159
can't read and my school 5:7 will

00:08:11,389 --> 00:08:16,360
definitely do something that my really

00:08:13,159 --> 00:08:19,159
ten can't read so there are things we do

00:08:16,360 --> 00:08:23,300
to date data formats that are not

00:08:19,159 --> 00:08:25,879
compatible between the dusty precone is

00:08:23,300 --> 00:08:27,589
pretty much on the same level as my

00:08:25,879 --> 00:08:31,699
scroll because they just add patches to

00:08:27,589 --> 00:08:32,089
to our source code but that's in five

00:08:31,699 --> 00:08:36,079
six

00:08:32,089 --> 00:08:39,439
the real five seven stuff if you know

00:08:36,079 --> 00:08:41,689
this debian has started to package

00:08:39,439 --> 00:08:47,420
system D I don't know if I did anyone

00:08:41,689 --> 00:08:49,939
miss that this is something we all have

00:08:47,420 --> 00:08:52,850
to think about as well we've chosen to

00:08:49,939 --> 00:08:55,190
instead of kind of going all native on

00:08:52,850 --> 00:08:57,650
system D we can

00:08:55,190 --> 00:08:59,920
do that but we can do that in in some

00:08:57,650 --> 00:09:02,900
systems but can't do that for all

00:08:59,920 --> 00:09:05,990
operating systems we chose to make

00:09:02,900 --> 00:09:07,490
system five like daemon just make sure

00:09:05,990 --> 00:09:09,530
that it works exactly the way that

00:09:07,490 --> 00:09:11,300
system D expects it to so detaching at

00:09:09,530 --> 00:09:14,450
the correct point when the socket is

00:09:11,300 --> 00:09:18,080
ready when we've done all the you know

00:09:14,450 --> 00:09:20,210
DB recovery and all that stuff

00:09:18,080 --> 00:09:25,100
so that system he really understands

00:09:20,210 --> 00:09:27,620
when MySQL is up and running but we

00:09:25,100 --> 00:09:29,960
still have system 5 in its scripts and

00:09:27,620 --> 00:09:34,700
it runs as a normal system 5 detach

00:09:29,960 --> 00:09:38,390
demon before 5 7 you would have run the

00:09:34,700 --> 00:09:40,550
my school D underscore safe thing to

00:09:38,390 --> 00:09:43,220
actually detach that's one that detached

00:09:40,550 --> 00:09:45,620
its mysqld in five six and earlier

00:09:43,220 --> 00:09:50,060
doesn't detach and this is kind of

00:09:45,620 --> 00:09:51,620
wrapper that detaches for you and my

00:09:50,060 --> 00:09:54,710
school five seven seven can actually

00:09:51,620 --> 00:10:00,080
attach and it will lock the syslog

00:09:54,710 --> 00:10:02,780
directly which is rapidly is used for in

00:10:00,080 --> 00:10:06,380
five six an earlier and we've also

00:10:02,780 --> 00:10:09,170
created a service file for system D

00:10:06,380 --> 00:10:11,690
currently it's unchanged it's the same

00:10:09,170 --> 00:10:13,250
file in all distros we have a few ce mec

00:10:11,690 --> 00:10:15,710
options that will generate if i'll to

00:10:13,250 --> 00:10:18,020
just give the service name and and the

00:10:15,710 --> 00:10:19,430
location of the pit file i think the

00:10:18,020 --> 00:10:20,990
rest is the same

00:10:19,430 --> 00:10:22,550
and i really hope we can keep the same

00:10:20,990 --> 00:10:27,800
one in all the stress that would be a

00:10:22,550 --> 00:10:30,590
real win for for this then if you have

00:10:27,800 --> 00:10:32,510
client applications this is probably the

00:10:30,590 --> 00:10:34,940
biggest one for you guys the other ones

00:10:32,510 --> 00:10:38,450
are more important to the maximal change

00:10:34,940 --> 00:10:42,110
of my scroll server we are bumping the

00:10:38,450 --> 00:10:43,550
API version to 20 it's 18 in five six

00:10:42,110 --> 00:10:47,450
but it probably should have been

00:10:43,550 --> 00:10:49,700
nineteen there was a slight API break

00:10:47,450 --> 00:10:51,860
there that we didn't discover we

00:10:49,700 --> 00:10:54,170
discovered it's too late we can't make

00:10:51,860 --> 00:10:57,290
it in jesse actually that's what it's

00:10:54,170 --> 00:10:59,720
only my school five five and jesse but

00:10:57,290 --> 00:11:01,100
in in five seven we've skipped the 19 in

00:10:59,720 --> 00:11:03,200
case we actually need it in five six

00:11:01,100 --> 00:11:04,520
because but we think that will actually

00:11:03,200 --> 00:11:09,670
create more problems we haven't use it

00:11:04,520 --> 00:11:11,810
but we bumped into twenty and we have

00:11:09,670 --> 00:11:14,390
limited let's export the symbols my

00:11:11,810 --> 00:11:16,339
school actually until five seven has

00:11:14,390 --> 00:11:20,270
exported all the symbols the client

00:11:16,339 --> 00:11:22,880
library which means that it's not easy

00:11:20,270 --> 00:11:25,160
to link with if you have if you're

00:11:22,880 --> 00:11:26,960
linking in some SSL library for instance

00:11:25,160 --> 00:11:28,870
it happens to be the same one as my

00:11:26,960 --> 00:11:31,760
school's using now it's not a good thing

00:11:28,870 --> 00:11:33,560
so in five seven is restricted we've

00:11:31,760 --> 00:11:36,950
chosen to restrict it to the documented

00:11:33,560 --> 00:11:38,779
API we know people are using more

00:11:36,950 --> 00:11:42,080
functions in the client library we've

00:11:38,779 --> 00:11:44,930
added a few of those but I expect some

00:11:42,080 --> 00:11:47,920
client applications to fail to compile

00:11:44,930 --> 00:11:51,020
with the new library if it does and

00:11:47,920 --> 00:11:54,830
you're a package maintainer tell the

00:11:51,020 --> 00:11:57,080
upstream author and tell us if it's

00:11:54,830 --> 00:12:00,680
really needed by the upstream we can add

00:11:57,080 --> 00:12:02,660
it in five seven you can just add a

00:12:00,680 --> 00:12:04,279
symbol because the symbol is there in

00:12:02,660 --> 00:12:07,310
kind of internally in library we just

00:12:04,279 --> 00:12:11,270
need to expose it we can do that in five

00:12:07,310 --> 00:12:13,160
seven stable releases because we become

00:12:11,270 --> 00:12:17,810
increase in version number and we're

00:12:13,160 --> 00:12:19,520
adding stuff no problem so we expect

00:12:17,810 --> 00:12:22,130
there to be maybe a few of those but we

00:12:19,520 --> 00:12:25,070
tried we spent a lot of time trying to

00:12:22,130 --> 00:12:27,740
figure out which symbols we need that is

00:12:25,070 --> 00:12:30,589
why we have more than just a publicly

00:12:27,740 --> 00:12:33,320
documented API but really applications

00:12:30,589 --> 00:12:36,200
should stick to the documented API not

00:12:33,320 --> 00:12:39,110
go beyond that but if there's something

00:12:36,200 --> 00:12:41,450
missing our goal is actually added to

00:12:39,110 --> 00:12:46,100
the API in a proper way instead of

00:12:41,450 --> 00:12:47,570
dealing with undocumented symbols we

00:12:46,100 --> 00:12:53,930
also coordinated with the Fedora in Red

00:12:47,570 --> 00:12:57,080
Hat so that's from Fedora 21 maybe or

00:12:53,930 --> 00:12:59,779
and later you can take an application

00:12:57,080 --> 00:13:02,510
compile on Fedora and runs on Debian you

00:12:59,779 --> 00:13:04,970
couldn't before because we screwed up

00:13:02,510 --> 00:13:06,680
the symbols file at some point they

00:13:04,970 --> 00:13:09,230
discover that and instead I'm reporting

00:13:06,680 --> 00:13:12,589
a bug they fixed it in their own

00:13:09,230 --> 00:13:14,600
distribution and it ended up being a

00:13:12,589 --> 00:13:17,030
different fix than what we did in my

00:13:14,600 --> 00:13:21,770
school so but we resolved that with

00:13:17,030 --> 00:13:22,930
Fedora so now it's it's from Red Hat

00:13:21,770 --> 00:13:28,660
seven and four

00:13:22,930 --> 00:13:28,660
2001 or something it's the same symbols

00:13:29,860 --> 00:13:35,390
some things we haven't done is to add

00:13:32,600 --> 00:13:39,980
package config files in addition to the

00:13:35,390 --> 00:13:42,680
traditional MySQL config scripts but

00:13:39,980 --> 00:13:45,260
we're thinking about doing that if

00:13:42,680 --> 00:13:47,690
you're using the reentrant Lib MySQL

00:13:45,260 --> 00:13:51,440
client library please stop doing that

00:13:47,690 --> 00:13:52,880
the normally my scope client library has

00:13:51,440 --> 00:13:55,220
been invented for many many years

00:13:52,880 --> 00:13:57,800
there's no reason to use the underscore

00:13:55,220 --> 00:14:00,530
or it's just a symlink to the normal

00:13:57,800 --> 00:14:05,510
library but finally in five seven we

00:14:00,530 --> 00:14:12,770
might remove that that might cause some

00:14:05,510 --> 00:14:15,400
applications to fail bit as well and we

00:14:12,770 --> 00:14:18,500
have a few security hardening features

00:14:15,400 --> 00:14:22,400
our goal is to be secured by defaults

00:14:18,500 --> 00:14:25,250
that means we should have no known

00:14:22,400 --> 00:14:26,750
attack vectors on default install well

00:14:25,250 --> 00:14:29,510
what does the default install mean

00:14:26,750 --> 00:14:31,820
because the way we do it when you

00:14:29,510 --> 00:14:33,290
download our source and then make run

00:14:31,820 --> 00:14:34,880
making soul it's different from from

00:14:33,290 --> 00:14:39,350
what you get when you install in Debian

00:14:34,880 --> 00:14:41,090
but it's small as the same things we'll

00:14:39,350 --> 00:14:44,210
have to think about so when we make our

00:14:41,090 --> 00:14:48,170
install secure it means that the Debian

00:14:44,210 --> 00:14:51,560
installation is either sick more secure

00:14:48,170 --> 00:14:54,020
or they will not have to patch or run

00:14:51,560 --> 00:14:56,180
special scripts to to make this here so

00:14:54,020 --> 00:14:58,070
in five seven the if you know the test

00:14:56,180 --> 00:15:00,380
database that we used to have it's gone

00:14:58,070 --> 00:15:02,540
there are no default grants you will

00:15:00,380 --> 00:15:05,990
need to add an option to get those if

00:15:02,540 --> 00:15:08,450
you want to the root user doesn't have

00:15:05,990 --> 00:15:09,800
an empty password as is false in Debian

00:15:08,450 --> 00:15:11,150
this was never a problem because they've

00:15:09,800 --> 00:15:14,840
been asked for the password on install

00:15:11,150 --> 00:15:18,020
but in Fedora for instance it was the

00:15:14,840 --> 00:15:20,060
install is non interactive so they can't

00:15:18,020 --> 00:15:21,440
ask for password so now they will get a

00:15:20,060 --> 00:15:25,910
random password is put into a file

00:15:21,440 --> 00:15:30,290
somewhere yeah some some trick there SSL

00:15:25,910 --> 00:15:32,030
is turn on my defaults so the clients

00:15:30,290 --> 00:15:34,420
will clients library will try to use

00:15:32,030 --> 00:15:34,420
this result

00:15:35,690 --> 00:15:43,790
and we have done some change that might

00:15:39,560 --> 00:15:48,680
affect security enhance Linux or

00:15:43,790 --> 00:15:52,610
apartment profiles there are for

00:15:48,680 --> 00:15:54,410
instance the socket file and while in

00:15:52,610 --> 00:15:57,170
Debian Debian say from this point Debian

00:15:54,410 --> 00:16:00,020
has used the verb run location for for

00:15:57,170 --> 00:16:03,050
socket files for a while but our

00:16:00,020 --> 00:16:05,750
districts haven't they put in in with

00:16:03,050 --> 00:16:08,360
data directory and that means all

00:16:05,750 --> 00:16:11,570
clients I need to get access permissions

00:16:08,360 --> 00:16:13,160
to that date directory so that means

00:16:11,570 --> 00:16:15,110
that some security enhanced Linux

00:16:13,160 --> 00:16:17,900
profiles and a parent profiles need to

00:16:15,110 --> 00:16:19,460
be changed that's one of the

00:16:17,900 --> 00:16:21,350
consequences that's it that's actually a

00:16:19,460 --> 00:16:24,290
hard part of this we need to change

00:16:21,350 --> 00:16:33,110
those profiles upstream in in those

00:16:24,290 --> 00:16:37,460
packages other this is just a list of

00:16:33,110 --> 00:16:38,660
random changes bonus but if you're

00:16:37,460 --> 00:16:40,400
building a server you might notice that

00:16:38,660 --> 00:16:43,850
we are actually depending on boost at

00:16:40,400 --> 00:16:47,330
moments in person and we will for the

00:16:43,850 --> 00:16:51,590
foreseeable future we use it for GS

00:16:47,330 --> 00:16:54,770
especially so I know this very well and

00:16:51,590 --> 00:16:57,020
we need one exact boost version that is

00:16:54,770 --> 00:17:04,339
because if we upgrade currently we're on

00:16:57,020 --> 00:17:08,209
158 159 was released on Monday or

00:17:04,339 --> 00:17:13,250
Tuesday or whatever and we don't pass

00:17:08,209 --> 00:17:14,930
tests if you upgrade one reason for that

00:17:13,250 --> 00:17:18,410
is actually bug in my scroll five seven

00:17:14,930 --> 00:17:21,050
on our one is it's that there are

00:17:18,410 --> 00:17:24,410
floating point numbers in there and they

00:17:21,050 --> 00:17:27,020
it's very sensitive to to change them

00:17:24,410 --> 00:17:30,020
floating boats calculations and and the

00:17:27,020 --> 00:17:32,870
order calculations so usually there are

00:17:30,020 --> 00:17:34,280
a few minor decimals changing on the

00:17:32,870 --> 00:17:37,610
numbers here and they are in test

00:17:34,280 --> 00:17:41,080
weights which means that I recorded test

00:17:37,610 --> 00:17:43,850
cases have a slightly different result

00:17:41,080 --> 00:17:45,560
but mostly it's possible to build with

00:17:43,850 --> 00:17:47,810
newer versions so much well newer

00:17:45,560 --> 00:17:48,980
versions of boosts you can usually not

00:17:47,810 --> 00:17:51,919
build with Oliver

00:17:48,980 --> 00:17:54,410
so boost because we are actively as

00:17:51,919 --> 00:17:56,360
extending boost geometry we have two

00:17:54,410 --> 00:17:59,570
engineers full-time on extending boost

00:17:56,360 --> 00:18:01,970
geometry so we use whatever is then the

00:17:59,570 --> 00:18:05,419
newest when we we freeze this this will

00:18:01,970 --> 00:18:07,820
be frozen before stable release and will

00:18:05,419 --> 00:18:11,929
stick to that version for for the stable

00:18:07,820 --> 00:18:15,650
release that's plan but if you need to

00:18:11,929 --> 00:18:17,630
upgrade we do make the package because

00:18:15,650 --> 00:18:21,620
we are continuously upgrading ourselves

00:18:17,630 --> 00:18:23,600
for the current development branch so we

00:18:21,620 --> 00:18:26,740
might adapt to patches but you want kind

00:18:23,600 --> 00:18:30,710
of benefit the from the QA that we do

00:18:26,740 --> 00:18:32,510
because we don't do QA with my school

00:18:30,710 --> 00:18:35,840
5/7 with your boosts and what we

00:18:32,510 --> 00:18:38,150
promised will work the solution for

00:18:35,840 --> 00:18:42,950
package maintainers is well what we

00:18:38,150 --> 00:18:44,570
recommend is to to build the package

00:18:42,950 --> 00:18:46,370
from two sources from the boost our wall

00:18:44,570 --> 00:18:47,870
and from my sculpt our wall because

00:18:46,370 --> 00:18:51,470
we're only using header files we're not

00:18:47,870 --> 00:18:53,780
using the runtime libraries another

00:18:51,470 --> 00:18:55,669
option of course is to just make sure

00:18:53,780 --> 00:18:59,720
that the header files from that boost

00:18:55,669 --> 00:19:02,270
version is in in the distro but I know

00:18:59,720 --> 00:19:06,429
some districts don't like to have more

00:19:02,270 --> 00:19:10,460
than one boost version at the same time

00:19:06,429 --> 00:19:13,070
so one easy solution is just build from

00:19:10,460 --> 00:19:15,500
three source our walls I think that

00:19:13,070 --> 00:19:18,970
that's what what we might may choose in

00:19:15,500 --> 00:19:23,570
Debian as well at least that's the

00:19:18,970 --> 00:19:27,080
current current opinion of the most

00:19:23,570 --> 00:19:28,870
involved Debian developer at moments I'm

00:19:27,080 --> 00:19:33,470
not the Debian developer I'm just

00:19:28,870 --> 00:19:35,690
hanging along but that seems to be the

00:19:33,470 --> 00:19:37,730
way to go currently because then we

00:19:35,690 --> 00:19:39,590
don't introduce new packages we don't

00:19:37,730 --> 00:19:42,799
have requirements on other teams to

00:19:39,590 --> 00:19:46,460
include more that boost packages and we

00:19:42,799 --> 00:19:49,309
won't in kind of introduce special MySQL

00:19:46,460 --> 00:19:54,320
boosts Heather packages that will be

00:19:49,309 --> 00:19:58,070
misused by other factors we will add a

00:19:54,320 --> 00:20:00,080
runtime dependency on me cab4 for

00:19:58,070 --> 00:20:02,330
full-text search in Chinese Japanese

00:20:00,080 --> 00:20:04,100
Korean and whatever

00:20:02,330 --> 00:20:09,110
you can disable it in the build if you

00:20:04,100 --> 00:20:12,320
don't want it but that's something you

00:20:09,110 --> 00:20:16,759
probably want if you want to be global

00:20:12,320 --> 00:20:21,559
and what it's internationalized

00:20:16,759 --> 00:20:23,889
distribution it works with the mica

00:20:21,559 --> 00:20:26,419
version in Debian at roamed I think

00:20:23,889 --> 00:20:30,309
me--come is relative stable on on

00:20:26,419 --> 00:20:32,419
versions so this is not a big problem

00:20:30,309 --> 00:20:37,249
we've changed the defaults for some

00:20:32,419 --> 00:20:40,399
config variables which will no doubt hit

00:20:37,249 --> 00:20:44,090
some users generally we're changing in

00:20:40,399 --> 00:20:46,820
the to be more strict than we have been

00:20:44,090 --> 00:20:50,330
so strict mode on the defaults and

00:20:46,820 --> 00:20:53,779
strict mode is stricter kind of trying

00:20:50,330 --> 00:20:56,149
to merge MySQL and SQL anyways we're

00:20:53,779 --> 00:20:58,940
trying to move towards standard SQL as

00:20:56,149 --> 00:21:01,159
much as possible these extensions have

00:20:58,940 --> 00:21:03,799
been there for four years they some of

00:21:01,159 --> 00:21:06,889
them block other standard features so we

00:21:03,799 --> 00:21:12,559
really try to move to more strict and

00:21:06,889 --> 00:21:15,350
more formally corrected SQL or when we

00:21:12,559 --> 00:21:17,299
can but kind of you have a lot of users

00:21:15,350 --> 00:21:22,159
they are slow to adapt so we need to

00:21:17,299 --> 00:21:24,230
think about that as well we also had

00:21:22,159 --> 00:21:27,070
some spring cleaning in the actually I

00:21:24,230 --> 00:21:32,869
think it was a full cleaning lasts full

00:21:27,070 --> 00:21:35,990
in ruing some legacy utilities for

00:21:32,869 --> 00:21:38,389
instance the SQL bench program that was

00:21:35,990 --> 00:21:40,249
shipped in MySQL is gone

00:21:38,389 --> 00:21:43,009
we weren't using it we were maintaining

00:21:40,249 --> 00:21:45,200
it so well it's still there if you look

00:21:43,009 --> 00:21:46,610
at all tarballs you don't need to go to

00:21:45,200 --> 00:21:51,230
the five-seven toggle to get it

00:21:46,610 --> 00:21:53,899
so it's GPL you can I think it's repeal

00:21:51,230 --> 00:21:57,740
at least otherwise it's some other

00:21:53,899 --> 00:21:59,059
open-source license but you can get it

00:21:57,740 --> 00:22:01,549
from somewhere else we don't need to

00:21:59,059 --> 00:22:03,519
maintain it in the five-seven package we

00:22:01,549 --> 00:22:05,869
removed most of the Perl dependencies

00:22:03,519 --> 00:22:08,779
we're trying to move away from pearl

00:22:05,869 --> 00:22:12,289
because pearl doesn't run that well on

00:22:08,779 --> 00:22:15,049
Windows and we are cross-platform to a

00:22:12,289 --> 00:22:15,830
large degree which means that we have

00:22:15,049 --> 00:22:17,779
we've had

00:22:15,830 --> 00:22:20,149
to maintain some separate tools for

00:22:17,779 --> 00:22:24,080
windows and since we have per tools and

00:22:20,149 --> 00:22:27,110
then it's just much easier if we compile

00:22:24,080 --> 00:22:31,669
things in C C++ and instead of using

00:22:27,110 --> 00:22:35,210
Perl scripts when being changed for

00:22:31,669 --> 00:22:39,260
people that run my scroll manually and

00:22:35,210 --> 00:22:41,210
install things is that the Perl script

00:22:39,260 --> 00:22:43,730
that used to be my school install DB is

00:22:41,210 --> 00:22:47,690
now an option to the server such as - -

00:22:43,730 --> 00:22:49,789
initialize and it will kind of create

00:22:47,690 --> 00:22:53,630
system tables and and get your high

00:22:49,789 --> 00:22:57,350
school up running for the first time and

00:22:53,630 --> 00:22:59,620
then we have some forever ongoing work

00:22:57,350 --> 00:23:03,049
to be warning free on GCC and clang

00:22:59,620 --> 00:23:05,840
that's our goal so every time we upgrade

00:23:03,049 --> 00:23:08,350
our debian computers or the bunch of

00:23:05,840 --> 00:23:13,490
computers or fedora right at whatever

00:23:08,350 --> 00:23:15,799
whatever version of of GCC and clang is

00:23:13,490 --> 00:23:17,840
in there we will run it we say oh no one

00:23:15,799 --> 00:23:19,580
more warning when you warning added in a

00:23:17,840 --> 00:23:24,860
new GCC version and then we will fix it

00:23:19,580 --> 00:23:27,710
we try to always be warning free or if

00:23:24,860 --> 00:23:29,059
it's pointless to fix it or it's hard to

00:23:27,710 --> 00:23:31,429
fix it without kind of doing something

00:23:29,059 --> 00:23:34,519
ugly we will disable that warning

00:23:31,429 --> 00:23:36,080
explicitly for that file but we we try

00:23:34,519 --> 00:23:39,169
to be warning free me not warning

00:23:36,080 --> 00:23:40,990
feeling Visual Studio you probably don't

00:23:39,169 --> 00:23:44,269
care about that but you should because

00:23:40,990 --> 00:23:46,760
if one compiler finds something dubious

00:23:44,269 --> 00:23:49,700
in the code then maybe other users are

00:23:46,760 --> 00:23:51,380
interested too so we're trying to get to

00:23:49,700 --> 00:23:54,679
move towards warning free and we should

00:23:51,380 --> 00:23:57,230
suit as well no guarantees but we reduce

00:23:54,679 --> 00:23:59,750
the number of warnings at least but it's

00:23:57,230 --> 00:24:02,690
a lot of them they're my school is

00:23:59,750 --> 00:24:04,940
mostly developed on GCC that's what the

00:24:02,690 --> 00:24:08,440
developers run it up some some Linux

00:24:04,940 --> 00:24:12,019
distribution and GCC that's the normal

00:24:08,440 --> 00:24:15,880
some people are using clang we were

00:24:12,019 --> 00:24:21,350
using clang for some of the some of the

00:24:15,880 --> 00:24:24,559
extra tools like address sanitizer and

00:24:21,350 --> 00:24:26,510
stuff but now GCC has them as well but a

00:24:24,559 --> 00:24:30,220
distant clang are the kind of the most

00:24:26,510 --> 00:24:37,940
important ones for us there

00:24:30,220 --> 00:24:39,830
so that was what I had and if you want

00:24:37,940 --> 00:24:42,409
know more about what's going on in

00:24:39,830 --> 00:24:46,370
development there's the server

00:24:42,409 --> 00:24:47,809
engineering the developers blog we have

00:24:46,370 --> 00:24:50,120
one for release engineering as well you

00:24:47,809 --> 00:24:54,169
might find some packaging stuff in there

00:24:50,120 --> 00:24:57,200
and as always if you're in doubt just

00:24:54,169 --> 00:25:01,240
check the source code we moved from

00:24:57,200 --> 00:25:03,440
Bazaar to get almost a year ago and

00:25:01,240 --> 00:25:05,269
we're not looking back and we're on

00:25:03,440 --> 00:25:11,950
github instead of Launchpad where we

00:25:05,269 --> 00:25:11,950
used to be are there any questions

00:25:21,590 --> 00:25:28,070
hello this is not relating to packaging

00:25:24,389 --> 00:25:30,600
but have you changed the car set for

00:25:28,070 --> 00:25:34,259
connecting car set you know it used to

00:25:30,600 --> 00:25:37,950
be Latin in a Swedish but in one dish

00:25:34,259 --> 00:25:43,019
yeah I think it's it used to be

00:25:37,950 --> 00:25:46,710
utf-8 in Debian then that I know we've

00:25:43,019 --> 00:25:48,600
been talking about it but I'm not really

00:25:46,710 --> 00:25:54,269
sure what's currently the default

00:25:48,600 --> 00:25:55,830
character set I would have to check but

00:25:54,269 --> 00:25:59,580
I think the Debian package is using

00:25:55,830 --> 00:26:04,710
utf-8 it so if you're using Debian you

00:25:59,580 --> 00:26:12,539
will have a key of it but from upstream

00:26:04,710 --> 00:26:14,070
sources I'm not sure the current MySQL

00:26:12,539 --> 00:26:17,549
packages are they're not very friendly

00:26:14,070 --> 00:26:19,739
to running in a bigger environment where

00:26:17,549 --> 00:26:21,899
you have multiple databases in the

00:26:19,739 --> 00:26:24,960
master/slave relationship if I recall

00:26:21,899 --> 00:26:27,179
correctly post inst and other maintainer

00:26:24,960 --> 00:26:30,299
scripts try to do stuff like repair

00:26:27,179 --> 00:26:33,179
tables or migrate senior versions which

00:26:30,299 --> 00:26:35,429
is not what you usually want do you have

00:26:33,179 --> 00:26:37,289
any plans of following such a mode where

00:26:35,429 --> 00:26:43,649
the maintainer scripts would do nothing

00:26:37,289 --> 00:26:46,440
or just skip everything no yeah so the

00:26:43,649 --> 00:26:48,419
question was if we're about to if we

00:26:46,440 --> 00:26:50,460
have plans in Debian to do something

00:26:48,419 --> 00:26:52,739
about server settings well you host

00:26:50,460 --> 00:26:57,570
multiple MySQL instances in on one

00:26:52,739 --> 00:26:58,769
computer was that the when you have a

00:26:57,570 --> 00:26:59,879
large environment with multiple

00:26:58,769 --> 00:27:02,129
databases

00:26:59,879 --> 00:27:04,049
yeah in master slave environment you

00:27:02,129 --> 00:27:05,639
don't want and you upgrade a say you

00:27:04,049 --> 00:27:09,739
don't want you the slave to start doing

00:27:05,639 --> 00:27:12,659
repair tables or migrate to whatever

00:27:09,739 --> 00:27:15,389
migrations stuff the maintainer scripts

00:27:12,659 --> 00:27:18,690
do so the maintainer scripts right now

00:27:15,389 --> 00:27:21,899
poston's does various things that you

00:27:18,690 --> 00:27:24,419
don't want to do in a slave yeah how can

00:27:21,899 --> 00:27:27,809
you are you planning to fixing that okay

00:27:24,419 --> 00:27:30,809
a very good question I haven't heard any

00:27:27,809 --> 00:27:33,929
explicit plans for doing that the Debian

00:27:30,809 --> 00:27:40,499
posts in scripts are doing some

00:27:33,929 --> 00:27:42,299
some operations on your database just

00:27:40,499 --> 00:27:44,929
summarize the question and and if we

00:27:42,299 --> 00:27:47,159
have any plans to change the packaging

00:27:44,929 --> 00:27:50,309
currently no but that's a real good

00:27:47,159 --> 00:27:51,600
point and we should talk afterwards we

00:27:50,309 --> 00:27:56,299
should really discuss that in a

00:27:51,600 --> 00:27:59,720
packaging team to figure out what to do

00:27:56,299 --> 00:28:08,539
one more question I think if there's

00:27:59,720 --> 00:28:08,539

YouTube URL: https://www.youtube.com/watch?v=jJfKh_Ruq7A


