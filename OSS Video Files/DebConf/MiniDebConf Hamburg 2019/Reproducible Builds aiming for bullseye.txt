Title: Reproducible Builds aiming for bullseye
Publication date: 2019-06-14
Playlist: MiniDebConf Hamburg 2019
Description: 
	by Holger Levsen

At: MiniDebConf Hamburg 2019
https://wiki.debian.org/DebianEvents/de/2019/MiniDebConfHamburg
Room: main
Scheduled start: 2019-06-08 15:30:00
Captions: 
	00:00:04,600 --> 00:00:12,360
okay so our next talk is by Holger and

00:00:08,380 --> 00:00:12,360
yellow on reproducible builds

00:00:16,849 --> 00:00:21,539
so this is yellow

00:00:18,750 --> 00:00:24,539
I'm Hoidal we talk about reproducible

00:00:21,539 --> 00:00:26,910
builds aiming for bullseye bullseye is

00:00:24,539 --> 00:00:30,890
the next Debian release after buster

00:00:26,910 --> 00:00:30,890
because buster is frozen and boring

00:00:33,530 --> 00:00:37,950
reproducibility have the purpose to

00:00:35,489 --> 00:00:40,410
enable everyone anyone to reproducibly

00:00:37,950 --> 00:00:42,300
we produce identical binary package from

00:00:40,410 --> 00:00:45,120
a given source that's what it's all

00:00:42,300 --> 00:00:48,720
about and the rest I save you because I

00:00:45,120 --> 00:00:50,520
guess most of you have heared it yeah we

00:00:48,720 --> 00:00:52,500
have some project goals we want to

00:00:50,520 --> 00:00:53,910
change the meaning of free software also

00:00:52,500 --> 00:00:55,829
that it's only free software it's

00:00:53,910 --> 00:00:57,600
reproducible because then you can then

00:00:55,829 --> 00:01:01,710
you can only be sure that the binary is

00:00:57,600 --> 00:01:04,049
really coming from the source we gave

00:01:01,710 --> 00:01:05,729
many talks at many conferences so that's

00:01:04,049 --> 00:01:10,110
also available with more background

00:01:05,729 --> 00:01:12,360
information and longer ones and since

00:01:10,110 --> 00:01:15,780
this is a debian mini debconf we

00:01:12,360 --> 00:01:18,719
compared last time we compared from deb

00:01:15,780 --> 00:01:23,039
from 17 in montreal now the changes

00:01:18,719 --> 00:01:25,709
since last year in taiwan we finally

00:01:23,039 --> 00:01:31,859
have a logo which was a year ago it was

00:01:25,709 --> 00:01:34,079
still and we had the fourth triple to

00:01:31,859 --> 00:01:37,380
build summit in Paris we'll have another

00:01:34,079 --> 00:01:40,920
summit this year as well the location is

00:01:37,380 --> 00:01:43,039
still to be determined we are now a

00:01:40,920 --> 00:01:48,090
software software freedom Conservancy

00:01:43,039 --> 00:01:51,659
project since last year in August or

00:01:48,090 --> 00:01:54,509
something so that's we have some funding

00:01:51,659 --> 00:01:57,359
from some companies some initiatives and

00:01:54,509 --> 00:02:01,340
some people of the project are paid from

00:01:57,359 --> 00:02:06,270
these resources not everybody

00:02:01,340 --> 00:02:12,480
and besides Debian Arch Linux is about

00:02:06,270 --> 00:02:14,250
80% openSUSE 93 we've now included the

00:02:12,480 --> 00:02:16,410
results from open user and Arch Linux

00:02:14,250 --> 00:02:18,209
into our database which where we have

00:02:16,410 --> 00:02:21,060
the debian results then we will generate

00:02:18,209 --> 00:02:24,630
web page is similar to the Debian ones

00:02:21,060 --> 00:02:27,630
in future since yesterday iodine is

00:02:24,630 --> 00:02:30,790
being tested kpc Wai Rd has added that

00:02:27,630 --> 00:02:34,000
it's not here yet

00:02:30,790 --> 00:02:36,129
net bsd and freebsd the base install is

00:02:34,000 --> 00:02:39,220
hundred-percent reproducible the port

00:02:36,129 --> 00:02:40,659
system we are not testing it and the

00:02:39,220 --> 00:02:44,319
tears iso image have been made

00:02:40,659 --> 00:02:50,680
reproducible and most open derivative

00:02:44,319 --> 00:02:52,750
images are reproducible as well and we

00:02:50,680 --> 00:02:55,629
do a lot of collaboration and it's

00:02:52,750 --> 00:02:57,459
really great because when I came here

00:02:55,629 --> 00:03:00,609
yella was here and gave me this nice

00:02:57,459 --> 00:03:02,890
sign which is there and it's lighting

00:03:00,609 --> 00:03:04,750
it's green because the Jenkins maintain

00:03:02,890 --> 00:03:15,549
and shop is successful it will turn red

00:03:04,750 --> 00:03:19,989
if it's not successful okay secondly

00:03:15,549 --> 00:03:21,790
okay thank you so I'm here for I'm happy

00:03:19,989 --> 00:03:25,150
to be here by the way hungry invited me

00:03:21,790 --> 00:03:30,010
so I could join the reproducible bill

00:03:25,150 --> 00:03:34,269
sprints this week and we got actually

00:03:30,010 --> 00:03:36,220
got some worked on to further get us in

00:03:34,269 --> 00:03:38,049
nicer in the reproducible builds

00:03:36,220 --> 00:03:43,389
websites and into the testing

00:03:38,049 --> 00:03:46,629
infrastructure so at the moment in the

00:03:43,389 --> 00:03:48,549
test struck framework which just builds

00:03:46,629 --> 00:03:50,799
two packages and then compares the

00:03:48,549 --> 00:03:53,980
results we are about 80 percent

00:03:50,799 --> 00:03:56,079
reproducible and Arceus is a bit

00:03:53,980 --> 00:03:58,930
different from Debbie and we have three

00:03:56,079 --> 00:04:01,810
repositories so actually four and core

00:03:58,930 --> 00:04:05,639
is our main it's like the most important

00:04:01,810 --> 00:04:10,060
report repository it's 85 percent we've

00:04:05,639 --> 00:04:11,769
reproducible and we are aiming to first

00:04:10,060 --> 00:04:13,419
get that hundred percent reproducible

00:04:11,769 --> 00:04:15,940
and I work our way around to the other

00:04:13,419 --> 00:04:22,210
repetition to the other repositories

00:04:15,940 --> 00:04:24,250
because they are larger but the test

00:04:22,210 --> 00:04:26,349
framework is nice but in real life

00:04:24,250 --> 00:04:30,820
things are different so when we actually

00:04:26,349 --> 00:04:34,360
started testing if a package we have in

00:04:30,820 --> 00:04:36,400
a repository can be reproduced using the

00:04:34,360 --> 00:04:41,440
built-in fofo which we have in our

00:04:36,400 --> 00:04:42,790
package we've found out that we save

00:04:41,440 --> 00:04:46,540
file size of a pack

00:04:42,790 --> 00:04:48,220
it's in the package and on different

00:04:46,540 --> 00:04:51,670
file systems you will get a different

00:04:48,220 --> 00:04:57,430
file sorry to report if you just use D

00:04:51,670 --> 00:04:59,380
you so that was an interesting issue we

00:04:57,430 --> 00:05:01,780
also had to do some infrastructure

00:04:59,380 --> 00:05:05,500
changes we also have to have a built in

00:05:01,780 --> 00:05:07,750
faux file which contains all the

00:05:05,500 --> 00:05:10,420
packages or we have installed from

00:05:07,750 --> 00:05:13,300
building and for our techniques you have

00:05:10,420 --> 00:05:15,130
some flags and options you can give with

00:05:13,300 --> 00:05:18,940
a build so we also also have to record

00:05:15,130 --> 00:05:25,450
those we also already kept an archive of

00:05:18,940 --> 00:05:28,540
all older packages and we needed to make

00:05:25,450 --> 00:05:30,310
tooling to be sure that we don't remove

00:05:28,540 --> 00:05:31,810
packages from the archive which we need

00:05:30,310 --> 00:05:35,680
to rebuild packages for the wise

00:05:31,810 --> 00:05:38,910
Frandsen and unbootable packages because

00:05:35,680 --> 00:05:42,640
the old dependency is not there

00:05:38,910 --> 00:05:44,830
yeah we also created the tool which

00:05:42,640 --> 00:05:48,580
reproduces which takes a repose

00:05:44,830 --> 00:05:54,270
repository package and then try a built

00:05:48,580 --> 00:05:57,880
builds it again and then compares it and

00:05:54,270 --> 00:06:01,420
we are still having to fix a lot of

00:05:57,880 --> 00:06:04,770
packages because which are for example

00:06:01,420 --> 00:06:08,860
are are they fixed impacted in Debian or

00:06:04,770 --> 00:06:13,600
because in Debian if something records

00:06:08,860 --> 00:06:18,010
the the timestamp or puts the date into

00:06:13,600 --> 00:06:20,350
into the binary you can usually give it

00:06:18,010 --> 00:06:23,530
as a build option you like use the the

00:06:20,350 --> 00:06:25,330
the timestamp of the change lock in our

00:06:23,530 --> 00:06:28,570
sayings we don't have change lock so we

00:06:25,330 --> 00:06:31,240
have to fix those packages in a

00:06:28,570 --> 00:06:33,730
different way and we have some packages

00:06:31,240 --> 00:06:41,230
which Debian doesn't have so we have

00:06:33,730 --> 00:06:43,600
still have more to fix and something we

00:06:41,230 --> 00:06:47,200
actually got done this week was getting

00:06:43,600 --> 00:06:51,100
JSON output from for our cynics Debian

00:06:47,200 --> 00:06:53,770
already has it's because and we will

00:06:51,100 --> 00:06:56,260
soon integrate this on our webpage so if

00:06:53,770 --> 00:06:58,000
you view a package then you can see it

00:06:56,260 --> 00:07:02,710
test framework which reproducible this

00:06:58,000 --> 00:07:06,700
for hopefully then give the incentive

00:07:02,710 --> 00:07:09,850
for people to say hey why isn't this

00:07:06,700 --> 00:07:12,460
reproducible let's fix it so that was a

00:07:09,850 --> 00:07:14,770
short update on the art status for me

00:07:12,460 --> 00:07:16,330
it's interesting to see the things

00:07:14,770 --> 00:07:17,710
there's some things they implement the

00:07:16,330 --> 00:07:19,840
same way and sometimes they find

00:07:17,710 --> 00:07:22,000
different solutions and I find this

00:07:19,840 --> 00:07:24,280
interesting in this couple collaboration

00:07:22,000 --> 00:07:26,560
to see how different solutions then

00:07:24,280 --> 00:07:31,600
evolve and which becomes better it's

00:07:26,560 --> 00:07:33,940
really nice aspect Bastyr we have this

00:07:31,600 --> 00:07:38,770
in policy that's also that is new or

00:07:33,940 --> 00:07:43,780
that was already maybe last year we now

00:07:38,770 --> 00:07:45,220
have Debian installer images where in

00:07:43,780 --> 00:07:48,310
the last three months lots of progress

00:07:45,220 --> 00:07:49,900
was made and then there was the patch

00:07:48,310 --> 00:07:51,070
which thought to be reproducible and

00:07:49,900 --> 00:07:54,010
then was something found on the

00:07:51,070 --> 00:07:55,660
abilities again so there's another fixes

00:07:54,010 --> 00:07:58,900
which are still missing which might not

00:07:55,660 --> 00:08:00,910
get into the buster release but into the

00:07:58,900 --> 00:08:02,740
Buster one if in the first point release

00:08:00,910 --> 00:08:05,020
but it looks like we can have

00:08:02,740 --> 00:08:07,660
reproducible di images with the release

00:08:05,020 --> 00:08:12,900
of pasta and once we have them we can

00:08:07,660 --> 00:08:12,900
look at the the big CDs or the full CDs

00:08:13,230 --> 00:08:19,320
I've also looked at this graph again

00:08:16,030 --> 00:08:20,590
this is the patches we've sent since

00:08:19,320 --> 00:08:25,270
00:08:20,590 --> 00:08:28,510
yeah since 2014 and it's there's 2014 on

00:08:25,270 --> 00:08:31,740
the left and this is 2,500 bucks with

00:08:28,510 --> 00:08:35,160
reproducible builds patches filed and

00:08:31,740 --> 00:08:37,960
except for 380 all of them were applied

00:08:35,160 --> 00:08:40,540
so that if somebody wants to do a big

00:08:37,960 --> 00:08:43,479
and I'm you campaign you have 380 bucks

00:08:40,540 --> 00:08:45,850
to take but not six or 800 which I was

00:08:43,479 --> 00:08:50,550
thinking so that's quite some time ago

00:08:45,850 --> 00:08:53,440
that we have what else is missing

00:08:50,550 --> 00:08:55,690
we have this problem which GCC that

00:08:53,440 --> 00:08:58,750
embed and that's the build pass and the

00:08:55,690 --> 00:09:02,170
objects we have the user home directory

00:08:58,750 --> 00:09:04,570
in this case in the build path we have

00:09:02,170 --> 00:09:07,270
this patch but it's not been accepted by

00:09:04,570 --> 00:09:09,290
upstream for Buster and maybe it will

00:09:07,270 --> 00:09:11,390
not get it for bullseye

00:09:09,290 --> 00:09:15,020
we just use the workaround to rebuild in

00:09:11,390 --> 00:09:18,950
the same parse and we need GCC to be

00:09:15,020 --> 00:09:20,690
fixed and for editing this patch might

00:09:18,950 --> 00:09:22,700
not be the best thing so we just say for

00:09:20,690 --> 00:09:26,800
the moment reboots have to be done in

00:09:22,700 --> 00:09:26,800
the past where it was originally built

00:09:27,340 --> 00:09:36,200
this need somebody to drive that GCC

00:09:34,490 --> 00:09:38,780
didn't like the way the patch was

00:09:36,200 --> 00:09:40,910
implemented so they want something else

00:09:38,780 --> 00:09:43,820
they don't dislike the idea but the

00:09:40,910 --> 00:09:47,390
implementation LLVM has something

00:09:43,820 --> 00:09:50,480
implemented and we basically like

00:09:47,390 --> 00:09:56,360
somebody who can drive this like I'm I'm

00:09:50,480 --> 00:09:58,790
not good enough in C to talk so that is

00:09:56,360 --> 00:10:01,100
something but it's the workaround is so

00:09:58,790 --> 00:10:03,560
simple so it's okay that's something

00:10:01,100 --> 00:10:06,700
else but if you want to tackle a hard

00:10:03,560 --> 00:10:06,700
problem as one

00:10:08,050 --> 00:10:13,190
yeah and Debian is wrong everybody

00:10:10,810 --> 00:10:22,400
misunderstands the graph we are not at

00:10:13,190 --> 00:10:24,620
93% we are because that is in theory we

00:10:22,400 --> 00:10:27,170
just do the CI test and we don't compare

00:10:24,620 --> 00:10:29,930
against the Debian archive and there's

00:10:27,170 --> 00:10:34,420
some blocking box blocking bucks which I

00:10:29,930 --> 00:10:37,280
present now which course this somehow so

00:10:34,420 --> 00:10:41,630
this is this difference between theory

00:10:37,280 --> 00:10:44,840
and practice 93% is a lie on March 5th I

00:10:41,630 --> 00:10:47,240
sent a mail to Debian devil where we

00:10:44,840 --> 00:10:50,240
only had 54% of the package is

00:10:47,240 --> 00:10:53,960
distributed from FTP Debian or where we

00:10:50,240 --> 00:10:58,910
managed to do a rebuild now we are down

00:10:53,960 --> 00:11:02,800
to 31% and you will ask me why and I

00:10:58,910 --> 00:11:06,950
have to say I don't really know why yet

00:11:02,800 --> 00:11:08,630
there's 24 percent so 6,800 most

00:11:06,950 --> 00:11:11,300
packages have not been uploaded since

00:11:08,630 --> 00:11:18,170
December 2016 when the change was in

00:11:11,300 --> 00:11:20,270
deep packet to sort the archive elements

00:11:18,170 --> 00:11:23,000
and reproducible deterministic way and

00:11:20,270 --> 00:11:25,880
everything uploaded before and not been

00:11:23,000 --> 00:11:29,450
you've been interviewed since then is

00:11:25,880 --> 00:11:32,840
unreproducible and I'm not sure if I or

00:11:29,450 --> 00:11:35,440
we should do 6,000 or whatever uploads

00:11:32,840 --> 00:11:38,930
of packages we don't use and just

00:11:35,440 --> 00:11:41,180
reapply with this we need to discuss

00:11:38,930 --> 00:11:43,960
this with the release team I think I

00:11:41,180 --> 00:11:49,220
would need to drink beer was even later

00:11:43,960 --> 00:11:56,140
we find that this problem is mostly or

00:11:49,220 --> 00:11:57,440
is biting the security team because

00:11:56,140 --> 00:11:59,450
people

00:11:57,440 --> 00:12:01,330
it's the detailer I don't have that much

00:11:59,450 --> 00:12:03,530
time

00:12:01,330 --> 00:12:09,170
banana Muse are generally also

00:12:03,530 --> 00:12:12,110
problematic for backups because M times

00:12:09,170 --> 00:12:15,890
and our sink so maybe we should change

00:12:12,110 --> 00:12:18,380
the way banana Muse are done though we

00:12:15,890 --> 00:12:20,360
are now able to review spin mu so it's

00:12:18,380 --> 00:12:22,850
not they are not unreproducible Percy

00:12:20,360 --> 00:12:25,580
but they cause other issues that's what

00:12:22,850 --> 00:12:28,000
we learnt the last year and this mass

00:12:25,580 --> 00:12:30,650
rebuild is this back I already mentioned

00:12:28,000 --> 00:12:33,620
then we have the problem that the build

00:12:30,650 --> 00:12:35,900
info files are not exported outside of

00:12:33,620 --> 00:12:37,940
FTP master they are exported to Co Co

00:12:35,900 --> 00:12:40,040
Debian art but that's only again Debian

00:12:37,940 --> 00:12:44,510
developer accessible machines we have

00:12:40,040 --> 00:12:46,760
workarounds for this but now then we

00:12:44,510 --> 00:12:49,310
don't we also want them to be in the

00:12:46,760 --> 00:12:53,270
archive that doesn't happen yet and for

00:12:49,310 --> 00:12:55,490
the security there's the big info files

00:12:53,270 --> 00:12:57,500
are only synced was the point release so

00:12:55,490 --> 00:12:59,510
that they are also only available after

00:12:57,500 --> 00:13:02,990
month so be sure to fix this somehow

00:12:59,510 --> 00:13:04,970
it also affects 80s and then we have

00:13:02,990 --> 00:13:06,950
built in full files we made the sec that

00:13:04,970 --> 00:13:09,530
they are available on bid info debian

00:13:06,950 --> 00:13:13,520
net and then I created bit enforce

00:13:09,530 --> 00:13:15,380
Debian net built-in for Debian that

00:13:13,520 --> 00:13:17,930
allows submissions of the info files

00:13:15,380 --> 00:13:19,670
from everyone so and then there has a

00:13:17,930 --> 00:13:21,710
downside you go there and ask for the

00:13:19,670 --> 00:13:24,170
bill info file for whatever this package

00:13:21,710 --> 00:13:26,330
this version and it gives you 20 files

00:13:24,170 --> 00:13:28,910
or something or more and you know which

00:13:26,330 --> 00:13:31,220
is the one for the FTP archive so I

00:13:28,910 --> 00:13:34,250
created FTP a bit enforce Debian net

00:13:31,220 --> 00:13:35,910
which is just the FTP view like it's on

00:13:34,250 --> 00:13:39,480
kookier there's a

00:13:35,910 --> 00:13:42,420
bid it's date based so I created the

00:13:39,480 --> 00:13:44,550
link farm to have a pool structure so

00:13:42,420 --> 00:13:46,769
you can just go there and get whatever

00:13:44,550 --> 00:13:52,019
the bid info file for this package this

00:13:46,769 --> 00:13:53,459
version but this is Debbie Annette and

00:13:52,019 --> 00:13:55,740
this should really be a debian op

00:13:53,459 --> 00:13:59,910
machine providing these beautiful files

00:13:55,740 --> 00:14:01,949
in the long run it's not that many fired

00:13:59,910 --> 00:14:04,470
it's a million files in total for the

00:14:01,949 --> 00:14:07,949
archive which is twelve gigabyte file

00:14:04,470 --> 00:14:12,560
size and Fergie a bite of links the same

00:14:07,949 --> 00:14:17,519
mod of links obviously yeah of course we

00:14:12,560 --> 00:14:19,829
then up shop may be warned that would be

00:14:17,519 --> 00:14:22,829
good for bullseye if a packages

00:14:19,829 --> 00:14:25,290
unreproducible up Strausser warning but

00:14:22,829 --> 00:14:28,410
really the goal is not to install or run

00:14:25,290 --> 00:14:30,329
and reproducible software and then

00:14:28,410 --> 00:14:33,089
there's also the question what does that

00:14:30,329 --> 00:14:35,399
mean and which we build a do I trust so

00:14:33,089 --> 00:14:39,420
in total what Lucas just presented is

00:14:35,399 --> 00:14:44,009
way better than this up warning but it's

00:14:39,420 --> 00:14:45,959
also more complicated to design we have

00:14:44,009 --> 00:14:47,550
now four tests reproducible builds we

00:14:45,959 --> 00:14:50,670
have the results safe in a common

00:14:47,550 --> 00:14:53,130
database we from that we generate Jason

00:14:50,670 --> 00:14:54,930
for Debian Arch Linux open wrt and

00:14:53,130 --> 00:14:58,199
iodine opens user creates their own

00:14:54,930 --> 00:15:00,209
jason's and we just imported we still

00:14:58,199 --> 00:15:02,579
want to do shared node and cross distro

00:15:00,209 --> 00:15:05,939
links this is that we something i talked

00:15:02,579 --> 00:15:07,769
to many years about and we won't also

00:15:05,939 --> 00:15:09,509
want to do two kinds of tests at the

00:15:07,769 --> 00:15:11,339
moment we have this CI test where we

00:15:09,509 --> 00:15:14,009
will software twice and compare it

00:15:11,339 --> 00:15:16,079
against each other but what we really

00:15:14,009 --> 00:15:19,130
want to do we want to compare we want to

00:15:16,079 --> 00:15:22,620
try to match what's provided by the

00:15:19,130 --> 00:15:24,930
project's ftp or whatever server because

00:15:22,620 --> 00:15:26,250
it's nice to do these CI birds but we

00:15:24,930 --> 00:15:30,079
really want to see whether we can

00:15:26,250 --> 00:15:30,079
reproduce the package people are using

00:15:31,910 --> 00:15:37,170
this is from last year

00:15:35,100 --> 00:15:39,839
the last thing i would not write anymore

00:15:37,170 --> 00:15:44,069
today because buster is now coming and

00:15:39,839 --> 00:15:46,649
maybe we get better than this abuzer is

00:15:44,069 --> 00:15:49,030
coming it's really far away we can still

00:15:46,649 --> 00:15:53,980
do anything we just need to do it

00:15:49,030 --> 00:15:57,220
and this is bullseye and that was the

00:15:53,980 --> 00:16:01,600
logo hands Christophe Steinitz was for

00:15:57,220 --> 00:16:03,490
his Android talk at FOSDEM 16 I liked it

00:16:01,600 --> 00:16:04,960
very much and I still liked it by the

00:16:03,490 --> 00:16:09,040
new look was great as well that's

00:16:04,960 --> 00:16:11,470
probably better representation so thank

00:16:09,040 --> 00:16:15,150
you for taking these updates for your

00:16:11,470 --> 00:16:15,150
interest and for your contributions

00:16:19,710 --> 00:16:24,820
thanks for Dan yella we have time for

00:16:22,570 --> 00:16:27,300
some quick questions please line up at

00:16:24,820 --> 00:16:27,300
the microphone

00:16:33,300 --> 00:16:40,590
how many 210 Petrus are there left in

00:16:36,280 --> 00:16:46,000
the Jenkins CIA artificial set up zero

00:16:40,590 --> 00:16:47,830
that's cool we used to modify Debian

00:16:46,000 --> 00:16:51,250
package but so mostly since deep

00:16:47,830 --> 00:16:53,500
packages and we had o come a have had

00:16:51,250 --> 00:16:55,270
some tests there in our infrastructure

00:16:53,500 --> 00:16:57,220
but nothing serious and that's removed

00:16:55,270 --> 00:17:01,570
now the pet has been taken so there's

00:16:57,220 --> 00:17:07,360
nothing left we used to have a pet GCC

00:17:01,570 --> 00:17:10,900
but we stopped doing that as it was news

00:17:07,360 --> 00:17:14,130
already a year I know but that's no news

00:17:10,900 --> 00:17:14,130
compared to last year

00:17:14,339 --> 00:17:17,760
any further questions

00:17:22,140 --> 00:17:31,110
we'll be here four more days arch linux

00:17:29,130 --> 00:17:40,890
has some packages that are not in debian

00:17:31,110 --> 00:17:44,159
how's that possible because oh we we are

00:17:40,890 --> 00:17:49,049
less strict we don't have an arsenal

00:17:44,159 --> 00:17:54,919
Enix policy which is comparable to the

00:17:49,049 --> 00:18:00,240
Debian policy regarding free software so

00:17:54,919 --> 00:18:02,909
we also package steam for example which

00:18:00,240 --> 00:18:10,850
is I'm not and we're not sure even how

00:18:02,909 --> 00:18:14,399
we're gonna handle those things oh yeah

00:18:10,850 --> 00:18:16,260
hmm there's also our Chester's do what

00:18:14,399 --> 00:18:18,179
is the art students repository and the

00:18:16,260 --> 00:18:20,370
arch user repository and that's not

00:18:18,179 --> 00:18:22,710
artificially as I understand that's true

00:18:20,370 --> 00:18:25,380
yeah and the arch user repository has

00:18:22,710 --> 00:18:27,840
way more packages than Debian metals are

00:18:25,380 --> 00:18:29,669
not built so yeah they are not tested by

00:18:27,840 --> 00:18:32,929
us because the same with contrib and

00:18:29,669 --> 00:18:37,080
non-free for us it just might be some

00:18:32,929 --> 00:18:39,029
dragons in there but i do believe we

00:18:37,080 --> 00:18:43,080
have packages which are not in debian

00:18:39,029 --> 00:18:47,220
but i don't have a list but soon as we

00:18:43,080 --> 00:18:49,380
make mama if we get the the package

00:18:47,220 --> 00:18:52,409
comparison pages which compare

00:18:49,380 --> 00:18:54,480
reproducibility between debian arts it's

00:18:52,409 --> 00:18:57,899
what we eat and opposites will be easier

00:18:54,480 --> 00:19:00,240
to find out but but naming is an issue

00:18:57,899 --> 00:19:02,370
there okay another to reality yellow

00:19:00,240 --> 00:19:04,799
also used this weekend to package

00:19:02,370 --> 00:19:07,169
peckmon the arch packets may minute sir

00:19:04,799 --> 00:19:10,190
so we can also know enjoy pac-man on

00:19:07,169 --> 00:19:10,190
debian the real peg

00:19:11,630 --> 00:19:18,920
okay if there's no further questions

00:19:15,170 --> 00:19:26,359
then let's thank the speakers again

00:19:18,920 --> 00:19:26,359

YouTube URL: https://www.youtube.com/watch?v=vQv4fxDMMPs


