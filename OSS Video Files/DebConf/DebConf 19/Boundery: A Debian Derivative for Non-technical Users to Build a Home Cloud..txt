Title: Boundery: A Debian Derivative for Non-technical Users to Build a Home Cloud.
Publication date: 2019-08-05
Playlist: DebConf 19
Description: 
	by Nolan Leake

At: DebConf19
https://debconf19.debconf.org/talks/50-boundery-a-debian-derivative-for-non-technical-users-to-build-a-home-cloud/

I will describe and demonstrate Boundery, a Debian derivative to allow non-technical users (including those who have no idea what Linux or Debian are) to securely host server applications in their home using cheap hardware.  Example server applications are a complete email server, a Wordpress blog (complete with ActivityPub support), and more.

Using a read-only rootfs and containers, we provide an install, administration and update model that is similar to that of smart phone OSes.

Breaking applications into subcontainers allows better isolation and security.  For example, in an email server application, SMTP, spasassassin, clamav, IMAP and webmail can all be separate containers.  Further, stateless containers like SMTP, spamassassin and clamav can be torn down and rebuilt for every incoming email, making compromising those services far less impactful to your privacy and security.  Private services, like webmail and IMAP are only accessible via VPN, managed transparently for the user.

Room: MiniauditÃ³rio
Scheduled start: 2019-07-21 16:00:00
Captions: 
	00:00:04,640 --> 00:00:10,230
welcome to the last session of the first

00:00:07,590 --> 00:00:12,540
day of their calm and we are listening

00:00:10,230 --> 00:00:15,719
to Nolan leek who will tell us about our

00:00:12,540 --> 00:00:17,789
own private cloud thank you thank you

00:00:15,719 --> 00:00:19,710
very much I'm thank everyone for coming

00:00:17,789 --> 00:00:23,789
I know the stiff competition would be

00:00:19,710 --> 00:00:26,310
reproducible Phil talk next door as is

00:00:23,789 --> 00:00:29,640
there so thank you for coming to see

00:00:26,310 --> 00:00:31,949
this talk are we talking about boundary

00:00:29,640 --> 00:00:35,370
which is a platform for hosting kind of

00:00:31,949 --> 00:00:37,320
cloud services in your home and we're

00:00:35,370 --> 00:00:38,700
gonna primarily be talking about hosting

00:00:37,320 --> 00:00:40,620
your own email as a proof of concept

00:00:38,700 --> 00:00:43,920
just because that's kind of the first

00:00:40,620 --> 00:00:48,090
app I've worked on and because it's kind

00:00:43,920 --> 00:00:49,860
of a good motivating example so first

00:00:48,090 --> 00:00:53,220
off a little bit about may have longtime

00:00:49,860 --> 00:00:55,980
Linux user and longtime hoster of my own

00:00:53,220 --> 00:00:58,380
services so this is all kind of of

00:00:55,980 --> 00:01:02,610
personal interest to me and a previous

00:00:58,380 --> 00:01:06,570
life I started a debian derivative

00:01:02,610 --> 00:01:08,549
called cumulus 1x which is a operating

00:01:06,570 --> 00:01:12,359
system for network switches like you'd

00:01:08,549 --> 00:01:14,609
find in a data center so 32 500 gigs

00:01:12,359 --> 00:01:17,609
which is not normally stuff you'd find

00:01:14,609 --> 00:01:20,880
in a home and they're also a sponsor so

00:01:17,609 --> 00:01:24,469
you know Thank You cumulus I'm no longer

00:01:20,880 --> 00:01:26,880
involved with them anymore so quick poll

00:01:24,469 --> 00:01:30,859
raise your hand if you have a home

00:01:26,880 --> 00:01:32,929
server or a co-located server or a VM

00:01:30,859 --> 00:01:35,159
okay

00:01:32,929 --> 00:01:37,200
what if you raise your hand if you run

00:01:35,159 --> 00:01:40,399
your own mail server or use the mail

00:01:37,200 --> 00:01:42,389
server run by family or friends okay

00:01:40,399 --> 00:01:44,039
raise your hand if you used to run here

00:01:42,389 --> 00:01:49,950
on the mail server but stop because it

00:01:44,039 --> 00:01:51,990
got like really annoying excellent and

00:01:49,950 --> 00:01:54,509
then finally amongst the people who

00:01:51,990 --> 00:01:56,280
stopped and do not who would run their

00:01:54,509 --> 00:01:58,259
own home email server so it didn't

00:01:56,280 --> 00:02:01,049
require a lot of maintenance and keeping

00:01:58,259 --> 00:02:02,130
up with spam leaks and vulnerability and

00:02:01,049 --> 00:02:06,900
all the other stuff that makes this a

00:02:02,130 --> 00:02:10,300
fun challenge you

00:02:06,900 --> 00:02:13,180
excellent well so boundary is a platform

00:02:10,300 --> 00:02:16,180
to enable things like that enable you to

00:02:13,180 --> 00:02:18,820
host the services and the data that you

00:02:16,180 --> 00:02:22,540
use in your own home on hardware that

00:02:18,820 --> 00:02:24,460
you own in control using 100% open

00:02:22,540 --> 00:02:26,140
source software and without having to

00:02:24,460 --> 00:02:28,000
you know a lot about Linux or abscissa

00:02:26,140 --> 00:02:32,230
minting or you know computers in general

00:02:28,000 --> 00:02:34,930
actually so to back it up a little bit I

00:02:32,230 --> 00:02:37,030
want to talk about kind of why someone

00:02:34,930 --> 00:02:38,680
might want to do this I suspect most of

00:02:37,030 --> 00:02:40,180
the people in this room are given what

00:02:38,680 --> 00:02:42,459
this is DEFCON 4 gonna be fairly plugged

00:02:40,180 --> 00:02:44,080
into these sorts of reasons and way

00:02:42,459 --> 00:02:47,260
ahead of me but I'll go through it just

00:02:44,080 --> 00:02:50,740
for anyone who isn't I think people are

00:02:47,260 --> 00:02:53,350
increasingly aware of how the incentives

00:02:50,740 --> 00:02:56,740
of the big commercial consumer clouds

00:02:53,350 --> 00:02:58,780
have become kind of misaligned with the

00:02:56,740 --> 00:03:00,670
end users it's like you sign up for a

00:02:58,780 --> 00:03:02,200
gmail account to give you however many

00:03:00,670 --> 00:03:03,990
gigs of storage space and so you're

00:03:02,200 --> 00:03:06,610
basically immediately costing them money

00:03:03,990 --> 00:03:07,720
from day one and so you know they're

00:03:06,610 --> 00:03:09,370
gonna try to figure out how to get that

00:03:07,720 --> 00:03:12,250
back right like you know they're not in

00:03:09,370 --> 00:03:14,019
the business of losing money and most

00:03:12,250 --> 00:03:16,330
importantly they don't really care how

00:03:14,019 --> 00:03:18,610
you feel about how they choose to make

00:03:16,330 --> 00:03:20,650
that money back because you know from

00:03:18,610 --> 00:03:22,330
their perspective losing one customer

00:03:20,650 --> 00:03:28,630
that's not paying than anything is just

00:03:22,330 --> 00:03:30,850
not a particularly concerning thing and

00:03:28,630 --> 00:03:32,410
this leads to this perverse incentive

00:03:30,850 --> 00:03:34,420
leads to a lot of kind of negative

00:03:32,410 --> 00:03:36,160
effects one is they're gonna try to

00:03:34,420 --> 00:03:37,239
trick you if they figured out some way

00:03:36,160 --> 00:03:38,890
to make some money they're gonna try to

00:03:37,239 --> 00:03:41,140
trick you into giving up more data than

00:03:38,890 --> 00:03:44,140
you did intend it they're gonna try to

00:03:41,140 --> 00:03:47,140
you know upsell you want on other

00:03:44,140 --> 00:03:48,190
services and generally just they're not

00:03:47,140 --> 00:03:52,480
going to have your best interests at

00:03:48,190 --> 00:03:54,310
heart and a lot of these same large

00:03:52,480 --> 00:03:56,709
companies they're busy building more

00:03:54,310 --> 00:03:59,650
data centers which they call edge

00:03:56,709 --> 00:04:01,540
centers much closer to the users so you

00:03:59,650 --> 00:04:03,220
know say Google has a bunch of big data

00:04:01,540 --> 00:04:05,380
centers and I'm handful of locations

00:04:03,220 --> 00:04:08,580
around the world they also build a bunch

00:04:05,380 --> 00:04:12,070
of smaller data centers or Cola cake

00:04:08,580 --> 00:04:13,840
equipment in data centers even even more

00:04:12,070 --> 00:04:16,900
locations in the world and the goal is

00:04:13,840 --> 00:04:18,520
to have physical proximity to users to

00:04:16,900 --> 00:04:19,350
improve latency because a lot of kind of

00:04:18,520 --> 00:04:23,940
the experience of the

00:04:19,350 --> 00:04:26,580
online services driven by latency and so

00:04:23,940 --> 00:04:28,530
you know thinking it's really hard to

00:04:26,580 --> 00:04:34,140
get closer to a user than being in their

00:04:28,530 --> 00:04:36,960
own home and then kind of another big

00:04:34,140 --> 00:04:38,760
one is that people are kind of building

00:04:36,960 --> 00:04:40,800
a lot of Internet of Things devices and

00:04:38,760 --> 00:04:42,900
right now the common way to do this is

00:04:40,800 --> 00:04:44,790
that you buy some device you somehow

00:04:42,900 --> 00:04:47,730
connect it to some service that's hosted

00:04:44,790 --> 00:04:49,440
in some cloud somewhere and it talks to

00:04:47,730 --> 00:04:51,270
that cloud and if it needs to talk to a

00:04:49,440 --> 00:04:53,700
different IOT device in your house it

00:04:51,270 --> 00:04:55,650
talks to that cloud and then back into

00:04:53,700 --> 00:04:57,390
your house which leads to some fairly

00:04:55,650 --> 00:04:59,580
ridiculous situations like I flip a

00:04:57,390 --> 00:05:01,680
light switch and the packet goes out to

00:04:59,580 --> 00:05:04,020
a data center you know 5,000 miles away

00:05:01,680 --> 00:05:06,720
another one comes back to tell the light

00:05:04,020 --> 00:05:09,870
bulb you know 10 feet away from the

00:05:06,720 --> 00:05:11,850
switch to turn on you know this is

00:05:09,870 --> 00:05:14,580
obviously kind of inefficient and a

00:05:11,850 --> 00:05:18,210
silly way to design things but that is

00:05:14,580 --> 00:05:19,770
often how they are aligned there's those

00:05:18,210 --> 00:05:22,140
obvious consequences if your internet

00:05:19,770 --> 00:05:23,430
connection goes down yeah it's time for

00:05:22,140 --> 00:05:28,470
bed and you can't you know flip the

00:05:23,430 --> 00:05:30,270
light switch off and other IOT devices

00:05:28,470 --> 00:05:31,920
are actually even more sensitive I'm not

00:05:30,270 --> 00:05:33,270
all that concerned about some company

00:05:31,920 --> 00:05:35,130
knowing when I turn my light switch on

00:05:33,270 --> 00:05:36,900
and off sits I'd rather they don't have

00:05:35,130 --> 00:05:39,120
that data but it's not that concerning

00:05:36,900 --> 00:05:47,820
but if I have security cameras looking

00:05:39,120 --> 00:05:50,180
you know out my front door watching at

00:05:47,820 --> 00:05:50,180
all times

00:05:51,140 --> 00:05:56,910
and I could talk for hours and have a

00:05:54,780 --> 00:05:58,680
very depressing talk about the other

00:05:56,910 --> 00:06:00,720
issues with these large companies are

00:05:58,680 --> 00:06:02,580
creating enormous amounts of data not

00:06:00,720 --> 00:06:04,680
really caring about the secondary

00:06:02,580 --> 00:06:05,940
consequences of that but I'll try to

00:06:04,680 --> 00:06:12,300
keep this talk a little lighter than

00:06:05,940 --> 00:06:13,620
that so my general insight is that you

00:06:12,300 --> 00:06:15,510
know I've been running mail servers many

00:06:13,620 --> 00:06:17,610
of you have been running this but it

00:06:15,510 --> 00:06:20,610
doesn't really matter that much if just

00:06:17,610 --> 00:06:22,170
a small tiny subset of people opt out of

00:06:20,610 --> 00:06:25,410
these kind of centralized surveillance

00:06:22,170 --> 00:06:27,870
systems the network effects matter you

00:06:25,410 --> 00:06:29,340
know using email as the example probably

00:06:27,870 --> 00:06:31,290
half more than half the people I email

00:06:29,340 --> 00:06:33,129
are using Gmail either with their own

00:06:31,290 --> 00:06:35,110
domain or literally at gmail.com

00:06:33,129 --> 00:06:38,649
and so Google's getting a plaintext copy

00:06:35,110 --> 00:06:41,769
of all those emails anyway and there is

00:06:38,649 --> 00:06:43,959
a concern you know as as these big tech

00:06:41,769 --> 00:06:46,479
companies get bigger using what they

00:06:43,959 --> 00:06:50,229
view as legacy protocols like SNMP to

00:06:46,479 --> 00:06:51,429
communicate MTP to communicate gets less

00:06:50,229 --> 00:06:53,110
and less interesting to them you know

00:06:51,429 --> 00:06:54,219
all these all these big companies start

00:06:53,110 --> 00:06:56,050
with a chat service and they have an

00:06:54,219 --> 00:06:59,349
XMPP gateway and then once they get big

00:06:56,050 --> 00:07:00,729
enough it's too hard to keep a table or

00:06:59,349 --> 00:07:02,139
you know it's a security risk or

00:07:00,729 --> 00:07:04,659
whatever excuse they come up with and

00:07:02,139 --> 00:07:06,999
they turn it off and there is a real

00:07:04,659 --> 00:07:08,979
risk that as email consolidates down

00:07:06,999 --> 00:07:11,349
into just a handful of large providers

00:07:08,979 --> 00:07:13,300
that they could make a backroom

00:07:11,349 --> 00:07:15,789
agreement of a similar nature to share

00:07:13,300 --> 00:07:17,379
to send email amongst themselves using

00:07:15,789 --> 00:07:24,059
whatever protocol they work out I just

00:07:17,379 --> 00:07:27,729
turned off the SMTP gateways entirely so

00:07:24,059 --> 00:07:30,089
got into you know the user must home

00:07:27,729 --> 00:07:33,159
hard-earned data to kind of avoid this

00:07:30,089 --> 00:07:36,039
misalignment of incentives does that way

00:07:33,159 --> 00:07:38,050
they you don't have that company you

00:07:36,039 --> 00:07:41,949
know being feeling legitimate pressure

00:07:38,050 --> 00:07:43,979
to you know monetize you and you know

00:07:41,949 --> 00:07:46,719
there's kind of a hidden benefit that

00:07:43,979 --> 00:07:48,669
this is a lot more emotionally visit

00:07:46,719 --> 00:07:50,860
than like two guys in a suit going to

00:07:48,669 --> 00:07:52,539
some big company and saying like give us

00:07:50,860 --> 00:07:59,819
this hard drive or reach up down all of

00:07:52,539 --> 00:07:59,819
your customers data what do they care

00:08:00,360 --> 00:08:04,740
but to reach kind of a larger audience

00:08:04,889 --> 00:08:10,300
we can't we can't expect everyone to be

00:08:07,659 --> 00:08:12,550
a system in you know like we many of us

00:08:10,300 --> 00:08:14,469
enjoy managing and maintaining Linux

00:08:12,550 --> 00:08:16,740
servers and playing with them and stuff

00:08:14,469 --> 00:08:19,959
but a lot of people don't I've observed

00:08:16,740 --> 00:08:22,659
and so the system needs to be actually

00:08:19,959 --> 00:08:26,199
designed to kind of oriented around not

00:08:22,659 --> 00:08:27,669
ever requiring any maintenance I'll

00:08:26,199 --> 00:08:31,569
bring up freedom box here which i think

00:08:27,669 --> 00:08:33,519
is kind of an interesting not

00:08:31,569 --> 00:08:37,089
competitive it's the thing in in similar

00:08:33,519 --> 00:08:38,380
space it's very focused on you know

00:08:37,089 --> 00:08:41,500
making it easy for people to get started

00:08:38,380 --> 00:08:43,240
hosting services on a linux server but

00:08:41,500 --> 00:08:44,589
it's still very much exposes

00:08:43,240 --> 00:08:45,999
and Linux there and the expectation

00:08:44,589 --> 00:08:47,379
which i think is a good one is the if

00:08:45,999 --> 00:08:49,110
you're some inclined it's a great way to

00:08:47,379 --> 00:08:51,220
start learning more and more and more

00:08:49,110 --> 00:08:53,709
but I'm actually interested in people

00:08:51,220 --> 00:08:55,869
who and users who don't really have any

00:08:53,709 --> 00:08:58,059
inclination to learn more they just want

00:08:55,869 --> 00:09:01,809
to have email or want to have you know

00:08:58,059 --> 00:09:03,610
whatever so we end up kind of leveraging

00:09:01,809 --> 00:09:05,529
a lot of techniques that are common in

00:09:03,610 --> 00:09:07,240
embedded systems and you know cell

00:09:05,529 --> 00:09:11,139
phones mobile phones and things like

00:09:07,240 --> 00:09:13,389
that so the root OS is read-only we

00:09:11,139 --> 00:09:15,339
doubt you the whole system the conflict

00:09:13,389 --> 00:09:18,639
by having in it be just a single shell

00:09:15,339 --> 00:09:20,319
script and this makes this makes the

00:09:18,639 --> 00:09:21,429
system more reliable it's not often if

00:09:20,319 --> 00:09:23,259
you're using something like a Raspberry

00:09:21,429 --> 00:09:24,699
Pi it's stored in an SD card and so

00:09:23,259 --> 00:09:26,949
those can easily become corrupted if

00:09:24,699 --> 00:09:29,589
you're writing to them in this case it's

00:09:26,949 --> 00:09:31,509
read-only so there is very low risk of

00:09:29,589 --> 00:09:33,730
it getting corrupted and it's also very

00:09:31,509 --> 00:09:35,499
easy to do an automatic update because

00:09:33,730 --> 00:09:38,829
you can just write the new image to a

00:09:35,499 --> 00:09:40,839
you know slot a slot B and then reboot

00:09:38,829 --> 00:09:42,910
similarly the applications like you know

00:09:40,839 --> 00:09:44,589
email or broken up into many different

00:09:42,910 --> 00:09:47,649
read-only containers one for kind of

00:09:44,589 --> 00:09:50,079
incoming SMTP you know spam all the

00:09:47,649 --> 00:09:52,149
various parts that make it up and so

00:09:50,079 --> 00:09:53,920
then the user data which in this case is

00:09:52,149 --> 00:09:56,139
basically your mail der is stored

00:09:53,920 --> 00:09:58,540
separately and so that's the only

00:09:56,139 --> 00:10:00,160
read/write part and so if something goes

00:09:58,540 --> 00:10:02,139
wrong with email service I can just

00:10:00,160 --> 00:10:03,759
uninstall it and reinstall it and any

00:10:02,139 --> 00:10:05,110
kind of corrupted drive state will be

00:10:03,759 --> 00:10:06,939
cleared out and this is very similar to

00:10:05,110 --> 00:10:08,589
what you know people naturally do with

00:10:06,939 --> 00:10:10,629
the cell phone app where if it stops

00:10:08,589 --> 00:10:12,100
working logo and uninstall it reinstall

00:10:10,629 --> 00:10:13,569
it usually it just starts working again

00:10:12,100 --> 00:10:14,889
and you know this is kind of a

00:10:13,569 --> 00:10:18,059
depressing state of affairs but that's

00:10:14,889 --> 00:10:18,059
how most people interact with technology

00:10:19,110 --> 00:10:23,769
and so you know I like to say that what

00:10:22,209 --> 00:10:25,509
we end up doing here is taking

00:10:23,769 --> 00:10:27,790
techniques that these large data center

00:10:25,509 --> 00:10:30,490
operators have developed to have 100

00:10:27,790 --> 00:10:32,410
people manage 100,000 servers but make

00:10:30,490 --> 00:10:35,910
it so that you know one one thousandth

00:10:32,410 --> 00:10:35,910
of a person can easily manage one server

00:10:37,780 --> 00:10:44,030
and so from the minute the management

00:10:40,730 --> 00:10:46,610
ends up being yeah a mobile phone app or

00:10:44,030 --> 00:10:48,710
a Linux or Windows or Macintosh out

00:10:46,610 --> 00:10:52,100
before you know if you want to manage it

00:10:48,710 --> 00:10:53,900
from your laptop so it has a simple app

00:10:52,100 --> 00:10:55,820
store that anyone that uses a cell phone

00:10:53,900 --> 00:10:57,110
a mobile phone app store will be

00:10:55,820 --> 00:10:59,450
familiar with you know you just kind of

00:10:57,110 --> 00:11:00,710
scroll through without you want you see

00:10:59,450 --> 00:11:02,900
email hey that's probably interesting

00:11:00,710 --> 00:11:04,130
try it and hopefully some other app

00:11:02,900 --> 00:11:08,390
caught your eye maybe you want to try to

00:11:04,130 --> 00:11:10,130
get AB next and the idea is to keep kind

00:11:08,390 --> 00:11:12,380
of configuration very simple and minimal

00:11:10,130 --> 00:11:14,450
you know I like editing text files and

00:11:12,380 --> 00:11:16,460
epsy and tweaking every last kind of

00:11:14,450 --> 00:11:17,840
detail of my setup but a lot of people

00:11:16,460 --> 00:11:19,400
just don't have time for that nor do

00:11:17,840 --> 00:11:25,250
they have any interest in that level of

00:11:19,400 --> 00:11:28,490
configurability so it needs to be cheap

00:11:25,250 --> 00:11:31,430
and easy obviously and so a lot has

00:11:28,490 --> 00:11:33,790
changed since you know I started posting

00:11:31,430 --> 00:11:37,340
these things back in probably 2001 and

00:11:33,790 --> 00:11:39,530
now like $35 gets you something that's

00:11:37,340 --> 00:11:43,280
more than powerful enough to post the

00:11:39,530 --> 00:11:45,260
basic services that most people use so

00:11:43,280 --> 00:11:48,020
you could buy a Raspberry Pi there's a

00:11:45,260 --> 00:11:49,670
lot of really powerful older pcs that

00:11:48,020 --> 00:11:51,410
people have retired mainly just because

00:11:49,670 --> 00:11:52,760
they don't know how to install a newer

00:11:51,410 --> 00:11:55,430
version windows on them so they just go

00:11:52,760 --> 00:11:57,560
back new PC and so those can be acquired

00:11:55,430 --> 00:11:59,690
very cheaply and my personal favorite is

00:11:57,560 --> 00:12:01,760
old laptops they make excellent servers

00:11:59,690 --> 00:12:04,570
because these very little power and they

00:12:01,760 --> 00:12:04,570
have a built-in UPS

00:12:07,430 --> 00:12:11,510
and so the last another component is

00:12:09,950 --> 00:12:15,080
that the hardware itself has to be

00:12:11,510 --> 00:12:17,120
fairly disposable you know if my server

00:12:15,080 --> 00:12:18,680
doesn't come up because it's in single

00:12:17,120 --> 00:12:20,630
user mode complaining about the file

00:12:18,680 --> 00:12:23,060
system being you know in some bad state

00:12:20,630 --> 00:12:25,700
and I need to you know run fsck - why or

00:12:23,060 --> 00:12:28,280
whatever that's not it's an annoyance

00:12:25,700 --> 00:12:29,810
for me but that would be absolutely a

00:12:28,280 --> 00:12:33,560
deal-breaker for someone who didn't know

00:12:29,810 --> 00:12:37,160
what f ck was and you know had no idea

00:12:33,560 --> 00:12:39,590
how to get their email back so to that

00:12:37,160 --> 00:12:43,550
end the hardware itself the user that

00:12:39,590 --> 00:12:48,070
has backed up continuously and you know

00:12:43,550 --> 00:12:51,350
each backup is basically ends up being a

00:12:48,070 --> 00:12:53,240
hash of the first hash on Merkle tree

00:12:51,350 --> 00:12:55,700
and so then that can be backed up

00:12:53,240 --> 00:12:57,350
offsite and so that way all you need is

00:12:55,700 --> 00:12:58,520
the decryption key to decrypt that hash

00:12:57,350 --> 00:12:59,960
and then everything else can then be

00:12:58,520 --> 00:13:01,550
pulled out and decrypted from the backup

00:12:59,960 --> 00:13:04,370
I'll talk a little bit more about the

00:13:01,550 --> 00:13:07,300
backup later because it is both

00:13:04,370 --> 00:13:10,760
interesting and not fully fleshed out so

00:13:07,300 --> 00:13:13,580
and so the other part especially

00:13:10,760 --> 00:13:15,500
something like a raspberry pi the OS

00:13:13,580 --> 00:13:17,270
image and the root encryption key that

00:13:15,500 --> 00:13:20,150
all the other keys are derived for from

00:13:17,270 --> 00:13:21,710
is stored on an SD card and so once

00:13:20,150 --> 00:13:23,900
you've booted off of it you can pull it

00:13:21,710 --> 00:13:25,910
out stick a different SD card in there

00:13:23,900 --> 00:13:27,890
and then go to the app and tell it to

00:13:25,910 --> 00:13:29,510
replicate on it and the idea is that I

00:13:27,890 --> 00:13:31,160
can make you know three copies of these

00:13:29,510 --> 00:13:32,960
one stays in the machine and is it

00:13:31,160 --> 00:13:35,120
actually used by it you know one maybe I

00:13:32,960 --> 00:13:36,020
put with a trusted friends house and you

00:13:35,120 --> 00:13:38,150
know maybe the one I bear in the

00:13:36,020 --> 00:13:39,680
backyard and the idea is even if my

00:13:38,150 --> 00:13:41,570
house burns down if I can get one of

00:13:39,680 --> 00:13:43,610
these goes on another 35 bucks on

00:13:41,570 --> 00:13:45,140
another Raspberry Pi plug it in I should

00:13:43,610 --> 00:13:46,940
be back up and running you know fairly

00:13:45,140 --> 00:13:50,140
quickly without having to you know do

00:13:46,940 --> 00:13:50,140
anything special to restore

00:13:53,610 --> 00:13:58,950
I'm security this was fairly just best

00:13:56,610 --> 00:14:02,460
practices but the local data on disk is

00:13:58,950 --> 00:14:04,710
of course encrypted it's got built-in

00:14:02,460 --> 00:14:07,650
support for let's encrypt so it'll put

00:14:04,710 --> 00:14:11,340
generate TLS certificates for every

00:14:07,650 --> 00:14:13,040
service individual certificates so a

00:14:11,340 --> 00:14:16,530
compromise of one service cannot

00:14:13,040 --> 00:14:18,780
impersonate a different one all of the

00:14:16,530 --> 00:14:20,820
internal services are only listening on

00:14:18,780 --> 00:14:23,250
a encrypted overlay network which is

00:14:20,820 --> 00:14:25,410
it's not essentially a VPN I'm using

00:14:23,250 --> 00:14:29,340
zero tier right now and the idea is that

00:14:25,410 --> 00:14:30,900
if I have an IMAP server I don't want to

00:14:29,340 --> 00:14:32,160
necessarily put it on the public

00:14:30,900 --> 00:14:33,840
internet just in my someone you can get

00:14:32,160 --> 00:14:35,130
at it but a lot of people end up doing

00:14:33,840 --> 00:14:37,350
that just because it's very convenient

00:14:35,130 --> 00:14:39,720
and so the idea is instead of having

00:14:37,350 --> 00:14:41,460
this VPN all of these things like you

00:14:39,720 --> 00:14:43,290
know your IMAP server is no longer

00:14:41,460 --> 00:14:44,700
listening to just anyone who might

00:14:43,290 --> 00:14:47,550
attack it they would have to first get

00:14:44,700 --> 00:14:48,990
onto the private network and then and

00:14:47,550 --> 00:14:50,700
only then could they attack your IMAP

00:14:48,990 --> 00:14:52,380
server so it kind of reduces the attack

00:14:50,700 --> 00:14:55,650
service you're exposing to the entire

00:14:52,380 --> 00:14:57,270
Internet and as I alluded to the

00:14:55,650 --> 00:15:00,240
services are broken up into individual

00:14:57,270 --> 00:15:02,280
containers and the networking is then

00:15:00,240 --> 00:15:03,990
limited to just what they need so you

00:15:02,280 --> 00:15:05,310
know the incoming smtp server can then

00:15:03,990 --> 00:15:06,870
turn around and talk to the spamassassin

00:15:05,310 --> 00:15:10,140
server which can then turn around and

00:15:06,870 --> 00:15:11,610
talk to the dovecot IMAP server and we

00:15:10,140 --> 00:15:14,100
can actually even take one stuff further

00:15:11,610 --> 00:15:16,140
which is faithfulness services like the

00:15:14,100 --> 00:15:18,780
incoming estimate peace peace server and

00:15:16,140 --> 00:15:21,030
spam assassin we can restart it after

00:15:18,780 --> 00:15:23,100
each email so that even if you had some

00:15:21,030 --> 00:15:24,870
spam assassin exploit all you would see

00:15:23,100 --> 00:15:26,460
was email you sent that executed the

00:15:24,870 --> 00:15:28,740
exploit any emails that had already been

00:15:26,460 --> 00:15:29,820
sent or had are gone and subsequent

00:15:28,740 --> 00:15:31,140
emails would be in a different container

00:15:29,820 --> 00:15:35,190
as well and so you won't be able to get

00:15:31,140 --> 00:15:37,140
at that and this is I think say fixed an

00:15:35,190 --> 00:15:38,610
assassin on purpose because it's kind of

00:15:37,140 --> 00:15:40,770
one of the more terrifying pieces of

00:15:38,610 --> 00:15:42,270
software we're on like second only a web

00:15:40,770 --> 00:15:43,830
browser because it just sits there

00:15:42,270 --> 00:15:46,080
waiting for the internet send it the

00:15:43,830 --> 00:15:48,330
most malicious traffic to it and then

00:15:46,080 --> 00:15:51,630
does a bunch of deep parsing on it using

00:15:48,330 --> 00:15:53,400
a whole bunch of Perl code so you know

00:15:51,630 --> 00:15:57,150
being able to isolate that I think is a

00:15:53,400 --> 00:15:58,830
very very good thing and similarly the

00:15:57,150 --> 00:16:01,620
limited networking means that if I

00:15:58,830 --> 00:16:03,660
compromise the SMTP server all I can

00:16:01,620 --> 00:16:05,640
attack is the spam assassin container I

00:16:03,660 --> 00:16:06,510
can't say attack dovecot so even if I

00:16:05,640 --> 00:16:08,310
had a chain

00:16:06,510 --> 00:16:09,900
exploits you know starting with postfix

00:16:08,310 --> 00:16:11,400
and ending with dovecot I wouldn't have

00:16:09,900 --> 00:16:12,750
to find some other way to pounce through

00:16:11,400 --> 00:16:19,770
the stand assassin so I'd have to have a

00:16:12,750 --> 00:16:21,750
Spanish that's an exploit as well so I'm

00:16:19,770 --> 00:16:24,120
gonna try to do a demo here the full

00:16:21,750 --> 00:16:25,920
demo the first boot and flashing the SD

00:16:24,120 --> 00:16:27,330
card takes about 15 minutes and so I

00:16:25,920 --> 00:16:29,220
didn't want to make everyone sit through

00:16:27,330 --> 00:16:31,350
that so actually started that earlier

00:16:29,220 --> 00:16:33,000
but I will show you a screenshot of what

00:16:31,350 --> 00:16:36,990
that looked like and then hopefully I

00:16:33,000 --> 00:16:39,230
can plug in and go from there so cross

00:16:36,990 --> 00:16:39,230
your fingers

00:16:51,980 --> 00:16:57,110
screenshots here okay so this is the

00:16:54,380 --> 00:17:00,709
thing the user first sees the idea is

00:16:57,110 --> 00:17:02,570
you download the bat either in this case

00:17:00,709 --> 00:17:06,199
I think this was probably ano this is on

00:17:02,570 --> 00:17:08,510
Linux you download it you install it and

00:17:06,199 --> 00:17:09,980
then you run this you get this UI and

00:17:08,510 --> 00:17:12,500
you're gonna do two things you're going

00:17:09,980 --> 00:17:14,000
to click the wireless SSID you would

00:17:12,500 --> 00:17:16,699
like the server to get on if you're not

00:17:14,000 --> 00:17:18,530
using a physical Ethernet cable and if

00:17:16,699 --> 00:17:22,459
necessary you type in the Wi-Fi password

00:17:18,530 --> 00:17:24,679
and then you choose which device has the

00:17:22,459 --> 00:17:28,640
SD card plugged into it so in this case

00:17:24,679 --> 00:17:31,250
there's only one one SD card and you

00:17:28,640 --> 00:17:34,669
click that and it then proceeds to write

00:17:31,250 --> 00:17:38,150
the OS image to the SD card and then

00:17:34,669 --> 00:17:40,730
also the Wi-Fi password as well as a key

00:17:38,150 --> 00:17:42,230
that is then used later for the client

00:17:40,730 --> 00:17:50,480
to rendezvous with the server once it is

00:17:42,230 --> 00:17:53,480
booted so let's so after you have

00:17:50,480 --> 00:17:55,760
flashed the image using that app you

00:17:53,480 --> 00:17:59,630
then plug it into the server and then go

00:17:55,760 --> 00:18:02,260
here to create an account which I've

00:17:59,630 --> 00:18:02,260
already created

00:18:22,660 --> 00:18:26,800
there we go and so that'll then take me

00:18:25,090 --> 00:18:29,140
into the App Store and so in this case

00:18:26,800 --> 00:18:34,300
we've only got one app available so and

00:18:29,140 --> 00:18:37,360
in his email start that and so well this

00:18:34,300 --> 00:18:38,980
is running I'll talk you through what's

00:18:37,360 --> 00:18:42,160
actually happening because just watching

00:18:38,980 --> 00:18:44,910
these progress bars is only exciting for

00:18:42,160 --> 00:18:44,910
about five seconds

00:18:49,620 --> 00:18:56,460
all right so you kind of talked a little

00:18:54,660 --> 00:18:58,830
bit about the different containers but

00:18:56,460 --> 00:18:59,910
here it is graphically so what it's

00:18:58,830 --> 00:19:01,230
doing is downloading all these

00:18:59,910 --> 00:19:05,010
individual containers and then it's

00:19:01,230 --> 00:19:08,100
going to start them up and so the flow

00:19:05,010 --> 00:19:11,370
when we get an email is that it comes in

00:19:08,100 --> 00:19:12,720
to the SMTP server on port 25 from the

00:19:11,370 --> 00:19:15,690
Internet so that's actually listening to

00:19:12,720 --> 00:19:18,090
the entire world and then it will then

00:19:15,690 --> 00:19:20,730
be forwarded using El MTP to a

00:19:18,090 --> 00:19:22,440
spamassassin container and these first

00:19:20,730 --> 00:19:23,940
two containers connections are being

00:19:22,440 --> 00:19:26,130
created on demand and then tore down

00:19:23,940 --> 00:19:28,620
when they're done and some spamassassin

00:19:26,130 --> 00:19:30,059
once it's done processing the email and

00:19:28,620 --> 00:19:31,800
decided whether it likes it or not it's

00:19:30,059 --> 00:19:34,740
gonna then send it along to the IMAP

00:19:31,800 --> 00:19:37,350
container and then at some point

00:19:34,740 --> 00:19:39,390
hopefully fairly soon your tablets and

00:19:37,350 --> 00:19:40,950
phones and laptops and so on they're

00:19:39,390 --> 00:19:43,230
going to come over the zero to your

00:19:40,950 --> 00:19:46,800
overlay network and connect to the IMAP

00:19:43,230 --> 00:19:49,140
port and you know get the email and then

00:19:46,800 --> 00:19:51,000
if you click respond then it's your

00:19:49,140 --> 00:19:53,280
client if I'm gonna send over these

00:19:51,000 --> 00:19:55,679
overlay network to another instance of

00:19:53,280 --> 00:19:58,260
postfix that can also be torn down after

00:19:55,679 --> 00:20:00,030
each use which then reaches out and you

00:19:58,260 --> 00:20:02,910
know sends it to the destination SMTP

00:20:00,030 --> 00:20:05,160
server so it's a fairly normal kind of

00:20:02,910 --> 00:20:06,630
setup for email except for all the

00:20:05,160 --> 00:20:07,650
components are running separately and

00:20:06,630 --> 00:20:14,760
the ones that are stateless can be

00:20:07,650 --> 00:20:17,100
restarted and so wouldn't it be nice if

00:20:14,760 --> 00:20:21,090
it real and and encrypted email that

00:20:17,100 --> 00:20:25,290
everyone uses and some of us do he's

00:20:21,090 --> 00:20:28,140
using GP GE or s/mime or whatever but

00:20:25,290 --> 00:20:29,730
it's pretty rare I think probably the

00:20:28,140 --> 00:20:33,330
percentage of people in this room who

00:20:29,730 --> 00:20:34,860
regularly use gbg4 to send emails to

00:20:33,330 --> 00:20:37,679
sign and send encrypted emails is

00:20:34,860 --> 00:20:40,230
probably about four doors of magnitude

00:20:37,679 --> 00:20:42,070
higher than the general public

00:20:40,230 --> 00:20:44,320
maybe more

00:20:42,070 --> 00:20:46,120
but we do actually have an interesting

00:20:44,320 --> 00:20:49,840
property here that you don't normally

00:20:46,120 --> 00:20:52,270
have so if someone sends me email using

00:20:49,840 --> 00:20:53,440
this exact same setup it's you know

00:20:52,270 --> 00:20:55,330
hopefully encrypted on their client

00:20:53,440 --> 00:20:57,610
because their laptop disk is encrypted

00:20:55,330 --> 00:21:01,090
or the phone is encrypted it sent over

00:20:57,610 --> 00:21:03,100
TLS session to their home server it's

00:21:01,090 --> 00:21:05,680
been sent to my home server over TLS

00:21:03,100 --> 00:21:09,270
session and then sent over a different

00:21:05,680 --> 00:21:11,200
TLS session session to my phone and so

00:21:09,270 --> 00:21:13,660
the email has never actually in

00:21:11,200 --> 00:21:15,970
plaintext on any network segment it's

00:21:13,660 --> 00:21:18,280
never plain text on any disk and most

00:21:15,970 --> 00:21:20,350
important it's never plain text at all

00:21:18,280 --> 00:21:21,940
on any device that isn't owned by either

00:21:20,350 --> 00:21:24,160
me or the person I'm communicating with

00:21:21,940 --> 00:21:25,390
so this isn't this isn't as good as

00:21:24,160 --> 00:21:27,190
signal so if you're planning something

00:21:25,390 --> 00:21:29,470
particularly sketchy I would definitely

00:21:27,190 --> 00:21:32,980
recommend using signal but this is a lot

00:21:29,470 --> 00:21:35,500
better than than just normal email from

00:21:32,980 --> 00:21:36,880
for most set ups for most people of

00:21:35,500 --> 00:21:40,140
course it doesn't help you if anyone is

00:21:36,880 --> 00:21:40,140
using Gmail on your cc chain

00:21:47,380 --> 00:21:51,380
okay so many of you who run your own

00:21:50,299 --> 00:21:52,760
email servers have probably already

00:21:51,380 --> 00:21:56,230
jumped to some of the technical problems

00:21:52,760 --> 00:21:58,490
I've been glossing over the first one is

00:21:56,230 --> 00:22:02,890
pretty much every residential ISP out

00:21:58,490 --> 00:22:05,210
their blocks of outgoing SMTP 425 and

00:22:02,890 --> 00:22:07,400
even if they don't everyone blocks

00:22:05,210 --> 00:22:11,510
incoming port 25 from residential IP

00:22:07,400 --> 00:22:15,020
address ranges because botnets produce a

00:22:11,510 --> 00:22:16,940
huge amount of spam so if we want to get

00:22:15,020 --> 00:22:19,790
our emails to be delivered we have to

00:22:16,940 --> 00:22:21,320
approximate their clean IP now this

00:22:19,790 --> 00:22:24,650
creates an institute instantly creates a

00:22:21,320 --> 00:22:26,540
problem which is that proxy is going to

00:22:24,650 --> 00:22:29,240
see the traffic so there's a cool trick

00:22:26,540 --> 00:22:31,520
we can pull where you have a proxy that

00:22:29,240 --> 00:22:33,110
works just at the TCP layer it doesn't

00:22:31,520 --> 00:22:35,240
actually terminate the TLS session so

00:22:33,110 --> 00:22:37,730
the TLS session is negotiated end to end

00:22:35,240 --> 00:22:41,030
from the sending SMTP D to the receiving

00:22:37,730 --> 00:22:43,040
SMTV going through this proxy so if the

00:22:41,030 --> 00:22:45,169
proxy attempts to terminate the session

00:22:43,040 --> 00:22:47,870
and initiate a new one that'll fail the

00:22:45,169 --> 00:22:50,630
certificate test so the sender can be

00:22:47,870 --> 00:22:52,520
confident that the proxy does not cannot

00:22:50,630 --> 00:22:54,590
see the contents of the message now it

00:22:52,520 --> 00:22:56,000
can see some amount of information in

00:22:54,590 --> 00:22:57,590
the nose of this IP address and a

00:22:56,000 --> 00:22:59,750
message that was approximately this long

00:22:57,590 --> 00:23:02,330
to that IP address and so you could

00:22:59,750 --> 00:23:03,679
envision inserting tor in the middle to

00:23:02,330 --> 00:23:05,390
try to you know hide those IP addresses

00:23:03,679 --> 00:23:08,660
and hide who's communicating a little

00:23:05,390 --> 00:23:10,309
bit better but this at least gets us to

00:23:08,660 --> 00:23:13,400
where Gmail will actually accept our IP

00:23:10,309 --> 00:23:18,410
our SMTP myth sessions and hence our

00:23:13,400 --> 00:23:20,090
emails so everyone probably is cringing

00:23:18,410 --> 00:23:23,330
while I said that about the proxy

00:23:20,090 --> 00:23:24,860
because this is the spam cannon right

00:23:23,330 --> 00:23:26,390
like the second spammer signed out about

00:23:24,860 --> 00:23:29,450
this proxy they are going to have a

00:23:26,390 --> 00:23:30,410
field day and so actually for awhile I

00:23:29,450 --> 00:23:32,960
thought this might have been an

00:23:30,410 --> 00:23:34,580
unsolvable problem because it's very

00:23:32,960 --> 00:23:36,830
difficult to rate limit when you can't

00:23:34,580 --> 00:23:39,169
see the content of the message and the

00:23:36,830 --> 00:23:41,030
reason is if I see ten megabytes of

00:23:39,169 --> 00:23:42,830
traffic going through this proxy to

00:23:41,030 --> 00:23:44,929
Gmail I have no idea if that's a one

00:23:42,830 --> 00:23:48,020
kilobyte message with you know hundreds

00:23:44,929 --> 00:23:50,150
of thousands of recipients listed or

00:23:48,020 --> 00:23:51,650
it's just one picture going to one

00:23:50,150 --> 00:23:54,800
person that you just want to see a

00:23:51,650 --> 00:23:56,419
picture of your vacation and so you know

00:23:54,800 --> 00:23:57,890
I just despaired a bit that I would ever

00:23:56,419 --> 00:24:00,920
be able to solve this

00:23:57,890 --> 00:24:03,530
but then I realized it turns out that

00:24:00,920 --> 00:24:04,580
the message is coming back are not

00:24:03,530 --> 00:24:06,890
controlled by the spammer that's

00:24:04,580 --> 00:24:08,900
controlled by the receiving SMTP D so

00:24:06,890 --> 00:24:11,870
it's unlikely to do anything you know

00:24:08,900 --> 00:24:14,450
unusual or sketchy and each time you

00:24:11,870 --> 00:24:17,600
send that our CPT - with the email

00:24:14,450 --> 00:24:18,860
address you get a response back and so

00:24:17,600 --> 00:24:20,570
by measuring the number of bytes coming

00:24:18,860 --> 00:24:23,330
back I can estimate the number of

00:24:20,570 --> 00:24:26,299
recipients that are involved in this

00:24:23,330 --> 00:24:31,340
email message without actually having to

00:24:26,299 --> 00:24:32,780
expose myself to the plain text it's not

00:24:31,340 --> 00:24:34,040
precise of course since it's not based

00:24:32,780 --> 00:24:36,830
on number of bytes and I don't know how

00:24:34,040 --> 00:24:38,630
big the email addresses are but if I'm

00:24:36,830 --> 00:24:40,610
willing to you know have some slop in

00:24:38,630 --> 00:24:42,799
the you know the rate limit is 20

00:24:40,610 --> 00:24:49,040
messages a day or between 20 and 40

00:24:42,799 --> 00:24:53,540
messages a day it it all works out and

00:24:49,040 --> 00:24:55,370
the last problem which is most annoying

00:24:53,540 --> 00:24:57,049
one although it's the least widespread

00:24:55,370 --> 00:24:59,690
is that you're starting to see a lot of

00:24:57,049 --> 00:25:02,750
CG NAT and occasionally even just

00:24:59,690 --> 00:25:05,059
walking incoming port 25 by ISPs just

00:25:02,750 --> 00:25:06,710
because I don't know they it was easier

00:25:05,059 --> 00:25:07,850
to block both directions and to figure

00:25:06,710 --> 00:25:13,190
out which direction it was going I don't

00:25:07,850 --> 00:25:14,720
know why they do it and also I'll talk a

00:25:13,190 --> 00:25:16,160
little bit more about this later but the

00:25:14,720 --> 00:25:18,200
last piece of this that most people

00:25:16,160 --> 00:25:20,450
don't know how to do is configure the

00:25:18,200 --> 00:25:22,190
router to forward towards you know

00:25:20,450 --> 00:25:23,570
presume everyone in this room knows how

00:25:22,190 --> 00:25:26,630
to do it but it's not kind of general

00:25:23,570 --> 00:25:30,260
knowledge I'll talk about that a little

00:25:26,630 --> 00:25:32,570
bit more later and so the solution here

00:25:30,260 --> 00:25:35,570
is to have a reverse version of the

00:25:32,570 --> 00:25:39,110
proxy and so it basically does something

00:25:35,570 --> 00:25:42,169
analogous to vhosts for HTTP or TLS S&I

00:25:39,110 --> 00:25:45,380
for TLS sessions where it uses the MX

00:25:42,169 --> 00:25:47,870
record name in the yellow command coming

00:25:45,380 --> 00:25:49,160
in from a new connection to D multiplex

00:25:47,870 --> 00:25:52,190
which of the you know potentially

00:25:49,160 --> 00:25:53,480
zillions of clients are SMTP servers out

00:25:52,190 --> 00:25:56,990
there this message is actually intended

00:25:53,480 --> 00:25:58,400
for and it has the same negotiation of

00:25:56,990 --> 00:26:00,110
the TLS session all the way through so

00:25:58,400 --> 00:26:03,250
this proxy can also not see any of the

00:26:00,110 --> 00:26:03,250
actual content of the messages

00:26:05,460 --> 00:26:12,700
and so finally you know I can't really

00:26:10,570 --> 00:26:16,980
do much about this right now but these

00:26:12,700 --> 00:26:20,260
are some problems I see you know they're

00:26:16,980 --> 00:26:21,430
the it's all fine and good that you can

00:26:20,260 --> 00:26:22,960
look at the source code all of this

00:26:21,430 --> 00:26:25,030
stuff verify it does what it says on the

00:26:22,960 --> 00:26:26,650
tin but that doesn't really help you if

00:26:25,030 --> 00:26:29,410
you have no idea what the binary image

00:26:26,650 --> 00:26:31,060
you're actually running does even if you

00:26:29,410 --> 00:26:34,420
do know the finer image Maps directly

00:26:31,060 --> 00:26:36,820
the source you know there could still be

00:26:34,420 --> 00:26:38,170
kind of hidden thing sitting away in the

00:26:36,820 --> 00:26:41,470
source that you haven't seen or that

00:26:38,170 --> 00:26:43,480
everyone is missed now we can't solve

00:26:41,470 --> 00:26:44,740
the second part that's still an open

00:26:43,480 --> 00:26:46,240
question but we can't solve the first

00:26:44,740 --> 00:26:50,830
part and that's with reproducible builds

00:26:46,240 --> 00:26:53,590
which we're all missing so on the other

00:26:50,830 --> 00:26:55,540
big one is that you can have an all open

00:26:53,590 --> 00:26:56,680
source stack but if there's firmer under

00:26:55,540 --> 00:26:58,690
the whole thing that's doing whatever

00:26:56,680 --> 00:27:03,460
the firmer does you're kind of at its

00:26:58,690 --> 00:27:05,980
mercy there are solutions on the x86

00:27:03,460 --> 00:27:08,440
I've seen a lot of X to 20 laptops

00:27:05,980 --> 00:27:10,720
presumably running coreboot here but

00:27:08,440 --> 00:27:11,970
they're definitely not widespread and so

00:27:10,720 --> 00:27:14,230
there's a lot of work to go there

00:27:11,970 --> 00:27:16,150
raspberry pi is a little better in that

00:27:14,230 --> 00:27:18,880
we are fairly close to a fully open

00:27:16,150 --> 00:27:21,730
source GPU blob that can be replaced the

00:27:18,880 --> 00:27:24,490
Broadcom proprietary one and boot the

00:27:21,730 --> 00:27:26,980
platform although that said the

00:27:24,490 --> 00:27:29,140
raspberry fire raspberry pi 4 just came

00:27:26,980 --> 00:27:30,460
out and will presumably require more

00:27:29,140 --> 00:27:33,720
reverse engineering to figure out how

00:27:30,460 --> 00:27:33,720
it's binary blob behaves

00:27:40,710 --> 00:27:44,389
all right so the app is fully installed

00:27:44,570 --> 00:27:47,960
and if we look

00:27:51,130 --> 00:28:01,790
so a couple things to note here there's

00:27:55,250 --> 00:28:04,730
actually an interesting dovecot book

00:28:01,790 --> 00:28:06,560
where after installation it will spend

00:28:04,730 --> 00:28:08,810
like ten minutes trying to generate SSL

00:28:06,560 --> 00:28:10,250
parameters but only about 20% of the

00:28:08,810 --> 00:28:14,780
time and it looks like we've gotten

00:28:10,250 --> 00:28:15,290
lucky so now there's a couple things to

00:28:14,780 --> 00:28:18,830
note here

00:28:15,290 --> 00:28:20,030
there's HTTPS so it's generated a let's

00:28:18,830 --> 00:28:23,060
encrypt certificate behind the scenes

00:28:20,030 --> 00:28:25,970
and you'll note that there's the domain

00:28:23,060 --> 00:28:27,710
name is to kneel down dorita me and so

00:28:25,970 --> 00:28:30,260
Fabri gotta me is the domain i

00:28:27,710 --> 00:28:31,820
registered for this service to kneel is

00:28:30,260 --> 00:28:33,500
the username that's actually my wife

00:28:31,820 --> 00:28:37,130
sitting here she were in this demo last

00:28:33,500 --> 00:28:39,500
so i just reused her account but the way

00:28:37,130 --> 00:28:41,510
this works is that when I do this DNS

00:28:39,500 --> 00:28:43,640
lookup what it did is you know I did the

00:28:41,510 --> 00:28:46,250
normal go to the route get the DNS

00:28:43,640 --> 00:28:48,860
server for Demi and then asked me for

00:28:46,250 --> 00:28:51,440
boundary got the DNS server boundary and

00:28:48,860 --> 00:28:53,780
then it asked my DNS server that I run

00:28:51,440 --> 00:28:55,340
hey I'm looking for to kneel and normal

00:28:53,780 --> 00:28:57,170
didn't DNS services would then given a

00:28:55,340 --> 00:28:59,030
record saying hey eels with this IP

00:28:57,170 --> 00:29:00,980
address what this one does is sends a

00:28:59,030 --> 00:29:05,660
start of authority saying hey I don't

00:29:00,980 --> 00:29:06,410
know any subdomains from 1400 on me but

00:29:05,660 --> 00:29:09,800
I know who does

00:29:06,410 --> 00:29:12,530
and it gives the IP address of the

00:29:09,800 --> 00:29:14,390
actual home server and so then the sub

00:29:12,530 --> 00:29:16,580
sub domains who done all actually began

00:29:14,390 --> 00:29:20,110
all being handled by a DNS server

00:29:16,580 --> 00:29:20,110
running on the home server

00:29:30,470 --> 00:29:34,309
and so really that was just a very

00:29:31,909 --> 00:29:35,779
elaborate way to show everyone the round

00:29:34,309 --> 00:29:39,769
cube of UI which you've probably already

00:29:35,779 --> 00:29:41,120
seen but since we're really going to

00:29:39,769 --> 00:29:43,509
tempt fate here I'm going to send the

00:29:41,120 --> 00:29:43,509
message

00:29:51,910 --> 00:29:55,079
[Applause]

00:30:11,429 --> 00:30:14,179
there we go

00:30:17,890 --> 00:30:24,500
thank you that have a lot of moving

00:30:23,300 --> 00:30:25,850
parts or something that in the end

00:30:24,500 --> 00:30:28,100
doesn't look all that impressive but

00:30:25,850 --> 00:30:30,050
hopefully everyone out here everyone

00:30:28,100 --> 00:30:31,580
who's hosted on a server understands

00:30:30,050 --> 00:30:37,640
just how many like annoying things got

00:30:31,580 --> 00:30:40,220
taken care of automatically so you know

00:30:37,640 --> 00:30:41,750
said we just started with email mainly

00:30:40,220 --> 00:30:43,610
just because it's one of the hardest

00:30:41,750 --> 00:30:46,430
services that hosts you've got to deal

00:30:43,610 --> 00:30:50,360
with deliverability spam block type

00:30:46,430 --> 00:30:52,160
ports and IPS but once you've got that

00:30:50,360 --> 00:30:54,320
there's like lots of other things like

00:30:52,160 --> 00:30:56,540
WordPress with activity 5 you know maybe

00:30:54,320 --> 00:30:59,720
we can start chipping away at Facebook

00:30:56,540 --> 00:31:02,660
and all those services or you know photo

00:30:59,720 --> 00:31:04,130
sharing service that doesn't involve you

00:31:02,660 --> 00:31:05,330
uploading all of your pictures to

00:31:04,130 --> 00:31:07,640
someone who's definitely going to do

00:31:05,330 --> 00:31:10,450
facial recognition on it and then do god

00:31:07,640 --> 00:31:10,450
knows what with that information

00:31:10,540 --> 00:31:14,780
your IOT devices you know particularly

00:31:13,280 --> 00:31:17,120
security cameras but it would be nice to

00:31:14,780 --> 00:31:21,530
be able to still control my house if my

00:31:17,120 --> 00:31:23,510
internet goes down and then file storage

00:31:21,530 --> 00:31:25,430
kind of replaced Dropbox is something

00:31:23,510 --> 00:31:27,380
that doesn't give a Silicon Valley

00:31:25,430 --> 00:31:29,500
company plaintext access to all of your

00:31:27,380 --> 00:31:32,560
files

00:31:29,500 --> 00:31:34,520
mastodons get lab there's you know one

00:31:32,560 --> 00:31:37,730
awesome open-source software out there

00:31:34,520 --> 00:31:39,980
that you know many of us use but are not

00:31:37,730 --> 00:31:44,450
easily installable by relatively

00:31:39,980 --> 00:31:45,890
untechnical users and so here's where I

00:31:44,450 --> 00:31:49,340
kind of admit some of the things I lost

00:31:45,890 --> 00:31:50,870
over and borderline lied about I talked

00:31:49,340 --> 00:31:52,790
about automated backups that's not

00:31:50,870 --> 00:31:55,390
implemented at all there's absolutely no

00:31:52,790 --> 00:31:57,500
backup going on right now I have some

00:31:55,390 --> 00:32:00,650
schemes and and if this sounds

00:31:57,500 --> 00:32:02,240
interesting please find me later I have

00:32:00,650 --> 00:32:04,130
this vision of like some sort of give a

00:32:02,240 --> 00:32:07,130
bite get a fight mutual backup scheme

00:32:04,130 --> 00:32:10,820
where you know I give up parts of my

00:32:07,130 --> 00:32:12,860
stuff of my storage in return for a

00:32:10,820 --> 00:32:15,020
hundred thousand of my closest friends

00:32:12,860 --> 00:32:18,080
and family letting me backup my data on

00:32:15,020 --> 00:32:19,250
there you know spare storage there's a

00:32:18,080 --> 00:32:21,710
lot of kind of interesting wrinkles

00:32:19,250 --> 00:32:23,480
around that which is why it's definitely

00:32:21,710 --> 00:32:25,790
probably the most complicated part of

00:32:23,480 --> 00:32:27,050
this this whole thing it would do a

00:32:25,790 --> 00:32:28,610
little bit but you have to manually

00:32:27,050 --> 00:32:29,910
configure your router some routers have

00:32:28,610 --> 00:32:32,490
this like DM

00:32:29,910 --> 00:32:34,320
feature where you can designate a single

00:32:32,490 --> 00:32:35,970
host for you know anything that doesn't

00:32:34,320 --> 00:32:39,240
match a more specific port forward it

00:32:35,970 --> 00:32:42,090
just sends some packets there but you

00:32:39,240 --> 00:32:43,530
know not every one wants to use that not

00:32:42,090 --> 00:32:48,510
only one even knows that that's there

00:32:43,530 --> 00:32:50,550
and UPnP does not help and this is

00:32:48,510 --> 00:32:51,750
actually really annoying because UPnP

00:32:50,550 --> 00:32:54,480
sounds like the perfect solution for

00:32:51,750 --> 00:32:56,580
this except for the protocol that allows

00:32:54,480 --> 00:32:59,520
any device on your network to port

00:32:56,580 --> 00:33:01,830
forward any port to any other device on

00:32:59,520 --> 00:33:04,550
your network for security reasons will

00:33:01,830 --> 00:33:06,690
not let you for for it's under 1024 so

00:33:04,550 --> 00:33:11,790
forwarding random ports to your Smart TV

00:33:06,690 --> 00:33:14,220
pay ok forwarding towards under 1024 so

00:33:11,790 --> 00:33:18,210
my current boss thought here is that I

00:33:14,220 --> 00:33:20,220
bet most people's admin password for the

00:33:18,210 --> 00:33:23,400
router is either written on the bottom

00:33:20,220 --> 00:33:26,190
of the router or is admin and so you

00:33:23,400 --> 00:33:28,740
could envision the app saying hey you

00:33:26,190 --> 00:33:31,680
know we need to configure a router if

00:33:28,740 --> 00:33:33,690
you know your admin password punch it in

00:33:31,680 --> 00:33:34,860
here and if not it's probably admin so

00:33:33,690 --> 00:33:37,560
if you're ok with that I'll just try

00:33:34,860 --> 00:33:39,960
that and then you can kind of figure out

00:33:37,560 --> 00:33:42,300
the web UI for the you know 5 or 10 most

00:33:39,960 --> 00:33:43,830
common routers out there and you know

00:33:42,300 --> 00:33:48,870
figure out how automatically punch those

00:33:43,830 --> 00:33:51,300
portals in them and then I talked about

00:33:48,870 --> 00:33:54,150
mobile apps but really right now it only

00:33:51,300 --> 00:33:56,580
sports Linux Mac and Windows clients the

00:33:54,150 --> 00:34:00,360
mobile common mobile platforms are

00:33:56,580 --> 00:34:03,840
something of a pain to work with so I've

00:34:00,360 --> 00:34:06,080
been working primarily on desktop

00:34:03,840 --> 00:34:12,300
platforms but that will need to happen

00:34:06,080 --> 00:34:14,400
at some point and so if that sounds

00:34:12,300 --> 00:34:17,850
interesting to anyone the code is up on

00:34:14,400 --> 00:34:20,520
get lap we have an IRC channel that's

00:34:17,850 --> 00:34:22,800
almost certainly just me right now and

00:34:20,520 --> 00:34:25,650
if anyone thinks this sounds interesting

00:34:22,800 --> 00:34:27,000
but doesn't want to contribute you can

00:34:25,650 --> 00:34:28,740
email me and I'll let you know when I

00:34:27,000 --> 00:34:31,200
have an actual image that you can just

00:34:28,740 --> 00:34:32,550
download and use if you're interested

00:34:31,200 --> 00:34:34,790
more kind of as a user versus as a

00:34:32,550 --> 00:34:36,639
developer

00:34:34,790 --> 00:34:43,579
thank you very much

00:34:36,639 --> 00:34:43,579
[Applause]

00:34:54,139 --> 00:35:00,860
humans shan't need for open proxy for

00:34:57,139 --> 00:35:03,080
SMTP and IMAP and other protocols so how

00:35:00,860 --> 00:35:07,430
do you imagine that ordinary users will

00:35:03,080 --> 00:35:09,080
have these proxy will you they need to

00:35:07,430 --> 00:35:12,710
have some other machines somewhere else

00:35:09,080 --> 00:35:16,070
because I'm somehow missing this yeah

00:35:12,710 --> 00:35:19,310
great great question so right now I am

00:35:16,070 --> 00:35:21,890
running a proxy and so a lot of that you

00:35:19,310 --> 00:35:25,370
know the TLS and TLS and then support

00:35:21,890 --> 00:35:27,320
was specifically to make it so that you

00:35:25,370 --> 00:35:29,210
don't necessarily have to trust my proxy

00:35:27,320 --> 00:35:33,200
that I'm running with your email data

00:35:29,210 --> 00:35:34,850
and but instead can you know rely on the

00:35:33,200 --> 00:35:37,880
TLS guarantees and certificates to

00:35:34,850 --> 00:35:39,080
verify that it's not snooping on you and

00:35:37,880 --> 00:35:40,730
similarly there's it has to be able to

00:35:39,080 --> 00:35:42,500
deem multiplex which on the outbound

00:35:40,730 --> 00:35:44,030
side is easy because you can just tell

00:35:42,500 --> 00:35:45,230
it where it's going on the inbound side

00:35:44,030 --> 00:35:47,840
you have to kind of do some tricks

00:35:45,230 --> 00:35:52,960
around the MX record in the e hello

00:35:47,840 --> 00:35:52,960
command that I'm here

00:35:58,070 --> 00:36:01,390
any more questions

00:36:03,950 --> 00:36:09,140
well I think that's a fantastic

00:36:05,839 --> 00:36:11,040
initiative thank you and good talk

00:36:09,140 --> 00:36:19,690
Thanks

00:36:11,040 --> 00:36:19,690

YouTube URL: https://www.youtube.com/watch?v=ySeJfGF7-ww


