Title: How to decrease Debian font bugs by decreasing Debian fonts
Publication date: 2019-08-10
Playlist: DebConf 19
Description: 
	by Nathan Willis

At: DebConf19
https://debconf19.debconf.org/talks/36-how-to-decrease-debian-font-bugs-by-decreasing-debian-fonts/

Font packages preset a distinct mix of challenges for an OS project like Debian. In addition to their fundamental weirdness (providing bits that are simultaneously a content element and executable code), fonts can be installed in multiple locations — system-wide and per-user, free-software and proprietary, from upstream repositories and from downloaded .zip files — and user applications are expected to gracefully handle all of the permutations within a single "Font" menu item. Font packages are a recurring stumbling block for smaller language communities, where operating-system support may lag behind and upstream designers may be wholly unacquainted with free software.

Furthermore, the low-level privileges granted to font binaries poses practical and security challenges for newer application-packaging formats like Snap and Flatpak, as well as for transactional system-image operating system projects like OSTree and Ubuntu Core. 

This talk will outline the concerns of such app-packaging and OS-image projects, then present a possible solution in the form of a simple thought experiment: what if Debian stopped providing font packages altogether?

In the hypothetical font-packageless world, individual users would install their own fonts on a per-user basis only. That change would trigger a number of ripple effects, from altering how system libraries like fontconfig match font names, to how GTK and Qt access fonts, to how end-user applications provide fonts. A user-only font stack would be simpler and have fewer security issues, and it could reduce the lag between an upstream font's release and its availability to Debian users. 

This talk will conclude with a look at the down sides of upending the font-packaging mindset, such as font management on the desktop, font versioning, global-language support, font synchronization, and font discovery. But it will, hopefully, ask attendees to reconsider how and why individual fonts are packaged for Debian and for other free-software distributions, and to explore possible alternatives in the years ahead.

Room: Miniauditório
Scheduled start: 2019-07-23 11:00:00
Captions: 
	00:00:04,770 --> 00:00:11,559
all right next speaker is nathan willis

00:00:09,670 --> 00:00:12,070
and speaking about one fewer of font

00:00:11,559 --> 00:00:14,710
bags

00:00:12,070 --> 00:00:17,880
I'll try fewer font packages we look

00:00:14,710 --> 00:00:21,040
forward to listening about this Thanks

00:00:17,880 --> 00:00:23,919
that's not actually the title that I put

00:00:21,040 --> 00:00:38,800
in these CFP or is in the schedule but

00:00:23,919 --> 00:00:40,810
it's the same before I start I'd like to

00:00:38,800 --> 00:00:44,260
spend 30 minutes discussing rust I'm

00:00:40,810 --> 00:00:47,050
just kidding and I would like to take a

00:00:44,260 --> 00:00:49,420
survey of the room if you're here and

00:00:47,050 --> 00:00:52,170
you're you maintain a font package in

00:00:49,420 --> 00:00:57,750
Debian or in some other distribution

00:00:52,170 --> 00:01:00,070
okay a few what if what if you work

00:00:57,750 --> 00:01:02,829
raise your hand if you work on like

00:01:00,070 --> 00:01:07,899
translation or internationalization and

00:01:02,829 --> 00:01:13,740
support anybody all right I think this

00:01:07,899 --> 00:01:15,850
this might be of interest to you so like

00:01:13,740 --> 00:01:19,600
like it said on the slide my name is

00:01:15,850 --> 00:01:23,979
nate willis i'm a typeface designer I'm

00:01:19,600 --> 00:01:25,390
currently a PhD student and England at

00:01:23,979 --> 00:01:27,430
the University of Reading I research

00:01:25,390 --> 00:01:30,430
automated spacing and kerning and text

00:01:27,430 --> 00:01:33,780
positioning it's to fight that mostly my

00:01:30,430 --> 00:01:35,799
free software work has to do with fonts

00:01:33,780 --> 00:01:39,760
recently I spent a lot of time writing

00:01:35,799 --> 00:01:45,670
on related documentation as well but I'm

00:01:39,760 --> 00:01:47,409
not not a font package maintainer this

00:01:45,670 --> 00:01:52,510
is actually service story so it has

00:01:47,409 --> 00:01:55,900
chapters it begins in March travel back

00:01:52,510 --> 00:01:58,659
in your mind's eye to March there is a

00:01:55,900 --> 00:02:01,500
gnome hackfest for parental controls in

00:01:58,659 --> 00:02:04,360
metered data in London at the vast

00:02:01,500 --> 00:02:08,049
corporate Red Hat office there and I

00:02:04,360 --> 00:02:09,340
went because it was close by I used to

00:02:08,049 --> 00:02:10,959
live in a place where there was never a

00:02:09,340 --> 00:02:13,340
hackfest locally initially wanted to

00:02:10,959 --> 00:02:16,370
participate in that

00:02:13,340 --> 00:02:18,260
I contributed nothing I got the date

00:02:16,370 --> 00:02:19,580
room and that's you I did answer some

00:02:18,260 --> 00:02:20,959
random font questions as well I was

00:02:19,580 --> 00:02:23,530
there and some internationalization

00:02:20,959 --> 00:02:26,810
questions and that sort of thing

00:02:23,530 --> 00:02:29,330
among those random questions at one

00:02:26,810 --> 00:02:32,170
point Richard Hughes who works on a lot

00:02:29,330 --> 00:02:35,510
of like package level stuff in Nome and

00:02:32,170 --> 00:02:38,599
in Fedora sort of turn around and ask in

00:02:35,510 --> 00:02:40,430
an obscure question about TTC Files TTC

00:02:38,599 --> 00:02:44,480
files are true typed collection files

00:02:40,430 --> 00:02:46,340
they're true type fonts with like

00:02:44,480 --> 00:02:48,290
multiple true type fonts merged together

00:02:46,340 --> 00:02:51,680
in one file with the duplicate stuff

00:02:48,290 --> 00:02:53,180
taken out I didn't know a ton about them

00:02:51,680 --> 00:02:55,940
about the specifics he was asking about

00:02:53,180 --> 00:02:57,980
but that was what opened the door there

00:02:55,940 --> 00:03:00,530
we discuss why he was interested in TTC

00:02:57,980 --> 00:03:05,120
files turns out it was about fixing font

00:03:00,530 --> 00:03:07,540
packages on Fedora silver-blue if you're

00:03:05,120 --> 00:03:11,680
not familiar with Fedora silver-blue

00:03:07,540 --> 00:03:13,880
it's a transactional OS distribution

00:03:11,680 --> 00:03:15,200
and/or an immutable OS distribution

00:03:13,880 --> 00:03:16,940
there's several different terms for this

00:03:15,200 --> 00:03:20,380
it's what used to be called atomic

00:03:16,940 --> 00:03:22,100
workstation in the Red Hat world and

00:03:20,380 --> 00:03:24,709
what it means is that the root

00:03:22,100 --> 00:03:27,290
filesystem is read-only the way they're

00:03:24,709 --> 00:03:30,170
working on it is user applications are

00:03:27,290 --> 00:03:33,590
only installed well for them only in

00:03:30,170 --> 00:03:36,200
flat pack but for other designs of this

00:03:33,590 --> 00:03:39,440
type snap packages and other formats are

00:03:36,200 --> 00:03:42,859
acceptable too and and those

00:03:39,440 --> 00:03:45,590
applications live in a little chroot

00:03:42,859 --> 00:03:46,519
jail and they have a little file system

00:03:45,590 --> 00:03:48,980
of their own that they're they're

00:03:46,519 --> 00:03:52,910
sandboxed into and they don't touch the

00:03:48,980 --> 00:03:55,069
immutable root filesystem and when you

00:03:52,910 --> 00:03:57,709
do need to change something at the root

00:03:55,069 --> 00:03:59,060
file system you have to reboot so

00:03:57,709 --> 00:04:01,579
there's actually several these out there

00:03:59,060 --> 00:04:04,579
right now superglue endless OS is

00:04:01,579 --> 00:04:05,900
another one bun to core which i think is

00:04:04,579 --> 00:04:09,200
the same thing that used to be Ubuntu

00:04:05,900 --> 00:04:10,700
snappy core and docker apparently has

00:04:09,200 --> 00:04:11,959
something where everything that runs in

00:04:10,700 --> 00:04:13,940
a docker container but the OS is

00:04:11,959 --> 00:04:17,090
immutable and then there's this thing

00:04:13,940 --> 00:04:18,139
called can you do X I know you can hear

00:04:17,090 --> 00:04:21,609
people tell you to pronounce that

00:04:18,139 --> 00:04:21,609
differently don't

00:04:21,840 --> 00:04:25,230
that's not how language works so there's

00:04:24,000 --> 00:04:26,580
there's a lot of these things out there

00:04:25,230 --> 00:04:29,430
and people are rethinking this now that

00:04:26,580 --> 00:04:31,860
know that the use sort of user installed

00:04:29,430 --> 00:04:35,910
snap in flag pack formats are becoming

00:04:31,860 --> 00:04:38,010
popular and thing is installing the font

00:04:35,910 --> 00:04:40,260
requires you to reboot the system and in

00:04:38,010 --> 00:04:43,470
fact every font requires you to reboot

00:04:40,260 --> 00:04:46,530
the system and when you make a change

00:04:43,470 --> 00:04:47,910
it's done an overlay file system and so

00:04:46,530 --> 00:04:49,200
usually you would have two partitions

00:04:47,910 --> 00:04:51,810
and you doing the other one then you

00:04:49,200 --> 00:04:54,919
reboot into the updated partition and

00:04:51,810 --> 00:04:57,479
that gets old pretty quick all right

00:04:54,919 --> 00:05:01,410
even worse it turns out you can't put

00:04:57,479 --> 00:05:02,760
the fonts into a standard snap or flat

00:05:01,410 --> 00:05:05,040
pack package like you do with all the

00:05:02,760 --> 00:05:07,919
other end-user applications and fonts

00:05:05,040 --> 00:05:10,320
are generally end-user things the reason

00:05:07,919 --> 00:05:16,680
being that these formats are designed to

00:05:10,320 --> 00:05:21,090
never touch the user directory and it's

00:05:16,680 --> 00:05:23,580
not quieter okay and the fonts that are

00:05:21,090 --> 00:05:25,610
in an application sandbox like the flat

00:05:23,580 --> 00:05:28,020
pack or snap are not visible to

00:05:25,610 --> 00:05:30,180
applications that live in other flat

00:05:28,020 --> 00:05:32,490
packs and snaps there is something loose

00:05:30,180 --> 00:05:35,220
in flat pack called an extension which

00:05:32,490 --> 00:05:36,150
is sort of a workaround it means you're

00:05:35,220 --> 00:05:37,800
creating something that's not an

00:05:36,150 --> 00:05:39,390
application but still gets put into the

00:05:37,800 --> 00:05:42,720
overlay system sort of beneath the

00:05:39,390 --> 00:05:44,130
applications but in practice having

00:05:42,720 --> 00:05:46,310
hundreds of those for hundreds of fonts

00:05:44,130 --> 00:05:50,510
would kill the overlay file system

00:05:46,310 --> 00:05:50,510
machinery so that's not gonna work

00:05:53,810 --> 00:05:58,710
anyway ultimately when you think about

00:05:56,190 --> 00:06:01,020
this problem and how fonts caused you to

00:05:58,710 --> 00:06:02,700
reboot every time you install one the

00:06:01,020 --> 00:06:04,620
problem boils down to the fact that

00:06:02,700 --> 00:06:06,840
they're installed into the user

00:06:04,620 --> 00:06:09,300
directory and that's in spite of the

00:06:06,840 --> 00:06:11,910
fact that font config which is how fonts

00:06:09,300 --> 00:06:13,860
are located by an application supports

00:06:11,910 --> 00:06:16,229
other directories in fact a lot of other

00:06:13,860 --> 00:06:18,710
directories like by default you also

00:06:16,229 --> 00:06:21,389
have user local share and then you have

00:06:18,710 --> 00:06:25,080
two things inside users home directory

00:06:21,389 --> 00:06:27,690
the dot local and then dot fonts which

00:06:25,080 --> 00:06:29,220
is deprecated these days but can still

00:06:27,690 --> 00:06:30,659
be used and then essentially anywhere

00:06:29,220 --> 00:06:32,310
else oh you can just modify the font can

00:06:30,659 --> 00:06:34,380
take to look anywhere else

00:06:32,310 --> 00:06:36,150
and when it sees a new font you just

00:06:34,380 --> 00:06:39,480
rebuilt fung config cache and you're

00:06:36,150 --> 00:06:42,210
ready to go so isn't the solution here

00:06:39,480 --> 00:06:46,889
just to not install the font into user

00:06:42,210 --> 00:06:48,180
anymore that's what i that's the

00:06:46,889 --> 00:06:49,260
impression I got from discussing this

00:06:48,180 --> 00:06:51,330
with Richard for a little bit and I

00:06:49,260 --> 00:06:52,919
finally said to him wait what if the

00:06:51,330 --> 00:06:56,040
distributions just stopped packaging the

00:06:52,919 --> 00:06:57,720
fonts all together and it seemed

00:06:56,040 --> 00:07:02,580
immediate like a great burden had been

00:06:57,720 --> 00:07:04,020
lifted from Richard shoulders and I'm

00:07:02,580 --> 00:07:05,580
not I'm kidding a little bit on that

00:07:04,020 --> 00:07:07,890
yeah you definitely you would expect the

00:07:05,580 --> 00:07:10,410
distribution to provide language support

00:07:07,890 --> 00:07:12,240
for people that's important and it needs

00:07:10,410 --> 00:07:14,460
to work out of the box so you can't rely

00:07:12,240 --> 00:07:16,710
on something that is only installed into

00:07:14,460 --> 00:07:19,080
a home directory later on by someone and

00:07:16,710 --> 00:07:22,260
you could certainly make a case that

00:07:19,080 --> 00:07:24,419
there are certain fonts that you need to

00:07:22,260 --> 00:07:26,160
print documents or to make sure that

00:07:24,419 --> 00:07:28,560
console access works what have you

00:07:26,160 --> 00:07:31,050
there's the generics you need to have

00:07:28,560 --> 00:07:33,180
something that matches sands or serif or

00:07:31,050 --> 00:07:35,790
mono that a program might request

00:07:33,180 --> 00:07:38,210
through five big but there is there is

00:07:35,790 --> 00:07:41,280
potentially this minimal set of fonts

00:07:38,210 --> 00:07:44,040
and everything else is a font that is

00:07:41,280 --> 00:07:46,590
selected by the user for some particular

00:07:44,040 --> 00:07:49,350
reason for some reason specific to the

00:07:46,590 --> 00:07:52,880
font and the distros could lock down

00:07:49,350 --> 00:07:54,810
that minimal set and stop carrying the

00:07:52,880 --> 00:07:58,470
maintenance burden on all those other

00:07:54,810 --> 00:08:02,070
packages that's sort of what I'm getting

00:07:58,470 --> 00:08:04,020
at here so in that in that model the OS

00:08:02,070 --> 00:08:07,140
maintains these font packages that

00:08:04,020 --> 00:08:09,330
install the user enter required and then

00:08:07,140 --> 00:08:11,940
everything else just installs to user's

00:08:09,330 --> 00:08:14,910
home directory home fonts so to speak

00:08:11,940 --> 00:08:18,780
and then includes font binaries but also

00:08:14,910 --> 00:08:20,250
the support material well to be honest

00:08:18,780 --> 00:08:22,890
what would happen nothing would break

00:08:20,250 --> 00:08:25,710
right if this was actually working today

00:08:22,890 --> 00:08:27,960
then fund config would find all this

00:08:25,710 --> 00:08:31,289
fonts as normal you would see them in

00:08:27,960 --> 00:08:33,150
your applications as normal maybe

00:08:31,289 --> 00:08:35,430
certain system applications wouldn't see

00:08:33,150 --> 00:08:37,400
them maybe if you are still one of the

00:08:35,430 --> 00:08:39,150
few people using a multi-user system

00:08:37,400 --> 00:08:40,469
different users would have different

00:08:39,150 --> 00:08:43,830
fonts installed so that would be

00:08:40,469 --> 00:08:44,570
different but definitely those flat

00:08:43,830 --> 00:08:47,750
packets now

00:08:44,570 --> 00:08:51,350
problems would be solved so the question

00:08:47,750 --> 00:08:54,200
is if nothing breaks and if this fixes

00:08:51,350 --> 00:08:56,300
stuff for the flat-pack people is that

00:08:54,200 --> 00:09:00,200
everything is that all that happens is

00:08:56,300 --> 00:09:01,820
it all that matters I kept thinking

00:09:00,200 --> 00:09:03,260
about this so for the next few weeks and

00:09:01,820 --> 00:09:08,210
I think there's some other angles to

00:09:03,260 --> 00:09:09,860
consider so last year I finished doing a

00:09:08,210 --> 00:09:11,570
master's degree and I was just doing

00:09:09,860 --> 00:09:14,540
like part-time contract stuff so I

00:09:11,570 --> 00:09:16,340
started messing around with what I

00:09:14,540 --> 00:09:18,350
considered to be the pain points of

00:09:16,340 --> 00:09:23,420
working with fonts on desktop Linux

00:09:18,350 --> 00:09:24,740
systems primarily this was submit that I

00:09:23,420 --> 00:09:27,400
was spending with him

00:09:24,740 --> 00:09:29,570
tricking developers into doing things

00:09:27,400 --> 00:09:31,550
and a lot of that was happening anyway

00:09:29,570 --> 00:09:33,080
there's a lot of work in GDK land and in

00:09:31,550 --> 00:09:35,270
the open type spec so I would just sort

00:09:33,080 --> 00:09:38,570
of like okay could we also get this

00:09:35,270 --> 00:09:41,210
other nice little addition made and and

00:09:38,570 --> 00:09:44,180
if you were unfortunate enough last year

00:09:41,210 --> 00:09:45,230
to see my Def Con talk I spent I covered

00:09:44,180 --> 00:09:47,570
a lot of what I thought those pain

00:09:45,230 --> 00:09:49,100
points were in that I'll send a link to

00:09:47,570 --> 00:09:51,530
that at the end so if you're still awake

00:09:49,100 --> 00:09:53,570
you can check that out if you want but

00:09:51,530 --> 00:09:55,250
I'm talking about things like making

00:09:53,570 --> 00:09:57,830
sure the metadata is accessible in

00:09:55,250 --> 00:09:59,150
applications how you actually manage

00:09:57,830 --> 00:10:02,330
your font collection turning things off

00:09:59,150 --> 00:10:04,810
and on making sure license information

00:10:02,330 --> 00:10:08,330
is tracked correctly and then also just

00:10:04,810 --> 00:10:11,750
the usability of installing it and so

00:10:08,330 --> 00:10:13,850
that sort of thing and one of the

00:10:11,750 --> 00:10:16,280
easiest takeaways is that the desktop

00:10:13,850 --> 00:10:18,080
Linux system is extremely weird for

00:10:16,280 --> 00:10:22,490
having fonts that are installed in more

00:10:18,080 --> 00:10:24,740
than one do more than one method and by

00:10:22,490 --> 00:10:26,060
that I mean there's distribution

00:10:24,740 --> 00:10:27,440
packaged fonts and then there's the

00:10:26,060 --> 00:10:29,960
flaws that the user brings through some

00:10:27,440 --> 00:10:33,320
other means like they downloaded them or

00:10:29,960 --> 00:10:37,750
they built them locally and other OSS

00:10:33,320 --> 00:10:40,640
don't do this like Apple and Microsoft

00:10:37,750 --> 00:10:42,500
they will come with some core fonts on

00:10:40,640 --> 00:10:45,070
the installation media or pre-installed

00:10:42,500 --> 00:10:48,710
on a machine but you don't fetch others

00:10:45,070 --> 00:10:51,260
from Apple and for Microsoft in reality

00:10:48,710 --> 00:10:53,320
people on proprietary operating systems

00:10:51,260 --> 00:10:57,010
and get their additional thoughts

00:10:53,320 --> 00:10:59,530
vendors maybe from Adobe maybe from font

00:10:57,010 --> 00:11:01,620
shop or something like that but they

00:10:59,530 --> 00:11:04,410
don't come through the distribution or

00:11:01,620 --> 00:11:07,180
the equivalent of the distribution and

00:11:04,410 --> 00:11:08,320
and the fact that we do this in two

00:11:07,180 --> 00:11:10,000
different ways actually makes things

00:11:08,320 --> 00:11:13,570
harder font management is more difficult

00:11:10,000 --> 00:11:15,880
there's a lot of like competing not not

00:11:13,570 --> 00:11:17,800
quite feature fault managers and they

00:11:15,880 --> 00:11:19,810
take different approaches

00:11:17,800 --> 00:11:21,850
some of them deactivate a font by moving

00:11:19,810 --> 00:11:25,930
it out of that without local sheriff on

00:11:21,850 --> 00:11:28,120
Directory is somewhere else and it makes

00:11:25,930 --> 00:11:31,330
it harder to track metadata you have to

00:11:28,120 --> 00:11:32,830
scan multiple directories for things you

00:11:31,330 --> 00:11:35,260
have to duplicate the stuff that you

00:11:32,830 --> 00:11:36,730
find you have to disambiguate and what

00:11:35,260 --> 00:11:38,830
the font name means because it could

00:11:36,730 --> 00:11:39,550
match multiple places so there's a lot

00:11:38,830 --> 00:11:42,160
of things that are actually more

00:11:39,550 --> 00:11:46,390
complicated because we support having

00:11:42,160 --> 00:11:48,070
fonts in in several places in fact when

00:11:46,390 --> 00:11:51,100
we're talking about Debian because we

00:11:48,070 --> 00:11:53,410
support hundreds of fonts you

00:11:51,100 --> 00:11:59,380
potentially could have 700 font packages

00:11:53,410 --> 00:12:01,990
or so and the thing is like of these two

00:11:59,380 --> 00:12:05,620
methods the one that comes from the

00:12:01,990 --> 00:12:07,600
distro works fine you use apt and you

00:12:05,620 --> 00:12:09,670
can for the most part find a font if

00:12:07,600 --> 00:12:11,880
you're looking for it I would like to

00:12:09,670 --> 00:12:14,710
see some more metadata visible and

00:12:11,880 --> 00:12:16,480
software sinners but it works whereas

00:12:14,710 --> 00:12:18,820
the experience for downloading the fonts

00:12:16,480 --> 00:12:22,750
through any other means is pretty grim

00:12:18,820 --> 00:12:24,730
and by that I mean this is it and you

00:12:22,750 --> 00:12:28,000
download something and then you need to

00:12:24,730 --> 00:12:31,690
know what to do from there and you know

00:12:28,000 --> 00:12:34,600
or gtk it does have a sort of a font

00:12:31,690 --> 00:12:36,310
installer but it just you have to open

00:12:34,600 --> 00:12:38,740
the font binary with it and then it

00:12:36,310 --> 00:12:45,430
knows where to put it and everything

00:12:38,740 --> 00:12:47,230
else gets lost all right I used to when

00:12:45,430 --> 00:12:48,610
I was doing this stuff about like the

00:12:47,230 --> 00:12:50,450
pain points of once I used to sort of

00:12:48,610 --> 00:12:52,250
complained publicly its

00:12:50,450 --> 00:12:54,350
this is just weird fauna sir or weird

00:12:52,250 --> 00:12:56,960
they're half data and they're half code

00:12:54,350 --> 00:12:59,140
they're User Content but their system

00:12:56,960 --> 00:13:01,370
packages they live in multiple places

00:12:59,140 --> 00:13:04,130
nothing else in the system is quite like

00:13:01,370 --> 00:13:05,930
that right then Tom marble if you know

00:13:04,130 --> 00:13:07,580
what Tom marble set me straight on this

00:13:05,930 --> 00:13:09,950
on Twitter is like no that's exactly the

00:13:07,580 --> 00:13:13,760
same thing that happens with language

00:13:09,950 --> 00:13:17,000
specific modules and libraries and you

00:13:13,760 --> 00:13:19,970
know Python and Perl and tech community

00:13:17,000 --> 00:13:24,500
all seem to have some sort of solution

00:13:19,970 --> 00:13:26,300
to doing this and actually that's true

00:13:24,500 --> 00:13:29,210
when you stop and think about it because

00:13:26,300 --> 00:13:30,860
you have executables that live in the

00:13:29,210 --> 00:13:32,150
user's home directory and you have

00:13:30,860 --> 00:13:34,190
libraries that are installed that are

00:13:32,150 --> 00:13:36,020
visible only to the users Python and not

00:13:34,190 --> 00:13:38,060
to the system Python and the

00:13:36,020 --> 00:13:41,390
distribution has got used to this and

00:13:38,060 --> 00:13:41,930
well from those part I mean it's not a

00:13:41,390 --> 00:13:46,940
perfect world

00:13:41,930 --> 00:13:49,540
yeah does have some advantages though by

00:13:46,940 --> 00:13:54,500
sort of locking down the system Python

00:13:49,540 --> 00:13:56,030
there's less QA and you sort of handoff

00:13:54,500 --> 00:13:57,740
maintenance of the thousands of

00:13:56,030 --> 00:14:00,560
libraries and modules to this language

00:13:57,740 --> 00:14:04,400
specific community that runs Seaton or

00:14:00,560 --> 00:14:07,370
crane or one of those things and you get

00:14:04,400 --> 00:14:09,290
packages that one package will install

00:14:07,370 --> 00:14:12,980
on almost any distribution as long as it

00:14:09,290 --> 00:14:14,480
has pip you know it should work so I

00:14:12,980 --> 00:14:16,460
think it's not impossible that we could

00:14:14,480 --> 00:14:18,950
change the default way of thinking about

00:14:16,460 --> 00:14:22,220
flat packages or the configuration of

00:14:18,950 --> 00:14:25,250
long packages in similar way and

00:14:22,220 --> 00:14:26,780
essentially I mean essentially the tech

00:14:25,250 --> 00:14:29,600
community already does this with CTM

00:14:26,780 --> 00:14:34,100
because the they manage tech fonts in

00:14:29,600 --> 00:14:36,440
their own packages admittedly if part of

00:14:34,100 --> 00:14:39,050
that reason is because they are wanting

00:14:36,440 --> 00:14:41,390
to preserve PostScript type 1 fonts that

00:14:39,050 --> 00:14:43,400
are not going to get packaged elsewhere

00:14:41,390 --> 00:14:48,140
but they've managed to make it work

00:14:43,400 --> 00:14:49,910
released but again I don't want to think

00:14:48,140 --> 00:14:53,930
that that's the only thing that matters

00:14:49,910 --> 00:14:57,320
is slightly less work for free QA people

00:14:53,930 --> 00:14:58,910
but there are some other things that I

00:14:57,320 --> 00:15:00,560
think we would get for free if we

00:14:58,910 --> 00:15:01,580
adopted a similar approach to flaunt

00:15:00,560 --> 00:15:04,100
packages

00:15:01,580 --> 00:15:09,370
the first is that you could quite easily

00:15:04,100 --> 00:15:12,140
have an actually usable curated

00:15:09,370 --> 00:15:13,160
recommendation list and this is a

00:15:12,140 --> 00:15:16,550
question that comes up all the time

00:15:13,160 --> 00:15:18,200
every time I've been at a font bought

00:15:16,550 --> 00:15:20,209
Libra graphics meeting someone's like we

00:15:18,200 --> 00:15:22,190
need to have a recommended fonts thing

00:15:20,209 --> 00:15:25,550
everyone wants to know this there's

00:15:22,190 --> 00:15:28,459
thousands of fonts on google fonts an

00:15:25,550 --> 00:15:30,140
open file library and in debian and

00:15:28,459 --> 00:15:32,480
there's too many so what are the good

00:15:30,140 --> 00:15:36,230
ones things that's not really an

00:15:32,480 --> 00:15:38,000
answerable question I mean you have to

00:15:36,230 --> 00:15:39,829
have in context to make that decision

00:15:38,000 --> 00:15:41,930
which means you have to have a person

00:15:39,829 --> 00:15:44,209
saying these are fonts for making

00:15:41,930 --> 00:15:47,570
documents these are fonts for mobile

00:15:44,209 --> 00:15:48,019
devices these are fonts that work well

00:15:47,570 --> 00:15:51,370
together

00:15:48,019 --> 00:15:53,420
if you have these languages and so on

00:15:51,370 --> 00:15:55,700
right now you could certainly have

00:15:53,420 --> 00:15:58,160
someone just create a list of font names

00:15:55,700 --> 00:15:59,930
like a blog might have funny sort of

00:15:58,160 --> 00:16:01,970
clickbait article and a lot of web

00:15:59,930 --> 00:16:03,290
design blogs do this but all you really

00:16:01,970 --> 00:16:06,950
have is a phone name and then maybe a

00:16:03,290 --> 00:16:10,730
URL to where it goes whereas if you had

00:16:06,950 --> 00:16:12,170
a way to actually the user clicks on a

00:16:10,730 --> 00:16:14,839
link and it helps them install those

00:16:12,170 --> 00:16:17,600
actual fonts because their distribution

00:16:14,839 --> 00:16:21,730
agnostic that's better

00:16:17,600 --> 00:16:25,250
the URLs right here are sort of the few

00:16:21,730 --> 00:16:28,640
curated open font collections that have

00:16:25,250 --> 00:16:30,890
more of right now use modify it's

00:16:28,640 --> 00:16:32,329
actually a software package by Raffaella

00:16:30,890 --> 00:16:34,579
but Steve who's at the end there and

00:16:32,329 --> 00:16:37,700
we're sort of publishing the font

00:16:34,579 --> 00:16:39,110
library yourself but he maintains his

00:16:37,700 --> 00:16:40,940
own curated list of what he thinks the

00:16:39,110 --> 00:16:44,329
good ones are he's a graphic designer

00:16:40,940 --> 00:16:47,209
and also a teacher and that last list

00:16:44,329 --> 00:16:50,270
down there is his sort of ongoing list

00:16:47,209 --> 00:16:52,790
of Libra font foundries and the middle

00:16:50,270 --> 00:16:55,040
three are examples of curated font

00:16:52,790 --> 00:16:56,120
collections from that list some of the

00:16:55,040 --> 00:16:59,720
other things on that list are just

00:16:56,120 --> 00:17:01,040
foundries whereas the middle three you

00:16:59,720 --> 00:17:03,769
get lists of here's what I think there

00:17:01,040 --> 00:17:06,709
are good fonts and that's not a lot

00:17:03,769 --> 00:17:08,929
right that covers a few people if you

00:17:06,709 --> 00:17:10,309
have something that's specific to your

00:17:08,929 --> 00:17:12,389
language

00:17:10,309 --> 00:17:16,079
honestly those are probably all going to

00:17:12,389 --> 00:17:18,809
be Latin fonts and not extend much much

00:17:16,079 --> 00:17:22,399
beyond European languages and so we

00:17:18,809 --> 00:17:24,689
could improve that another benefit of

00:17:22,399 --> 00:17:27,449
rethinking this this font package system

00:17:24,689 --> 00:17:29,369
would be that the packages could live a

00:17:27,449 --> 00:17:33,869
little bit closer to the upstream font

00:17:29,369 --> 00:17:35,580
source a lot of font open font packages

00:17:33,869 --> 00:17:39,019
that don't change regularly but they do

00:17:35,580 --> 00:17:43,139
change there are updates and things and

00:17:39,019 --> 00:17:44,519
because things are living upstream the

00:17:43,139 --> 00:17:47,220
distributions could sort of share the

00:17:44,519 --> 00:17:51,330
workload of QA whenever something new

00:17:47,220 --> 00:17:54,869
comes out and in theory you know the

00:17:51,330 --> 00:17:56,909
differences between a fedora and Debian

00:17:54,869 --> 00:18:00,179
flaunt packages for the same font would

00:17:56,909 --> 00:18:01,710
be reduced an in theory you don't have

00:18:00,179 --> 00:18:04,259
as much latency between when there's a

00:18:01,710 --> 00:18:05,940
new update and when package reaches

00:18:04,259 --> 00:18:07,529
users those are pretty generic

00:18:05,940 --> 00:18:10,019
recommendations is easy to say that

00:18:07,529 --> 00:18:13,230
everything would be better and I'm not

00:18:10,019 --> 00:18:16,080
trying to make promises about that but I

00:18:13,230 --> 00:18:20,309
just would want to note that the shared

00:18:16,080 --> 00:18:22,830
workload idea has benefits in more than

00:18:20,309 --> 00:18:24,539
one dimension like it's maybe saves the

00:18:22,830 --> 00:18:28,429
distribution some work but it also sort

00:18:24,539 --> 00:18:31,859
of is nicer for the upstream developer

00:18:28,429 --> 00:18:33,239
there's also I think if we have all of

00:18:31,859 --> 00:18:34,799
our fonts living in the user's home

00:18:33,239 --> 00:18:37,559
directory there's gonna be less friction

00:18:34,799 --> 00:18:39,950
between a free software font and between

00:18:37,559 --> 00:18:42,480
in a bright red font on the user system

00:18:39,950 --> 00:18:46,320
this is something that graphic designers

00:18:42,480 --> 00:18:48,450
want to run Linux or free less actually

00:18:46,320 --> 00:18:52,289
need and I know that there are people

00:18:48,450 --> 00:18:54,509
who sort of tense up at that and say we

00:18:52,289 --> 00:18:57,059
we shouldn't do any work that supports

00:18:54,509 --> 00:18:58,529
using proprietary fonts well if you

00:18:57,059 --> 00:19:02,639
wanna have a graphic designer even one

00:18:58,529 --> 00:19:04,649
using free software use Debian then they

00:19:02,639 --> 00:19:07,230
need to have they need to have support

00:19:04,649 --> 00:19:09,090
for their clients assets and the client

00:19:07,230 --> 00:19:11,070
can bring flan to a project that is

00:19:09,090 --> 00:19:14,720
proprietary and use it for the work

00:19:11,070 --> 00:19:17,070
they're doing right now it's tricky and

00:19:14,720 --> 00:19:18,510
honestly just there are many shades of

00:19:17,070 --> 00:19:21,440
licensing freedom

00:19:18,510 --> 00:19:26,070
comes to de fonts so it's not quite a

00:19:21,440 --> 00:19:28,710
black-and-white issue there and I also

00:19:26,070 --> 00:19:31,830
think keeping all the fonts in the

00:19:28,710 --> 00:19:33,390
user's home directory would maybe spur

00:19:31,830 --> 00:19:37,590
more people to write interesting font

00:19:33,390 --> 00:19:39,240
tools I mentioned a few concepts for

00:19:37,590 --> 00:19:41,340
this last year like something that

00:19:39,240 --> 00:19:44,220
converts to PostScript type 1 font to an

00:19:41,340 --> 00:19:46,380
OTF something that adds missing OpenType

00:19:44,220 --> 00:19:48,960
features something emerges 2 fonts

00:19:46,380 --> 00:19:50,670
together easy to do that when it's in

00:19:48,960 --> 00:19:53,280
the user's home directory and you don't

00:19:50,670 --> 00:19:57,120
have to deal with the apt database and

00:19:53,280 --> 00:19:58,320
getting corrupted and with directories

00:19:57,120 --> 00:20:01,920
that you don't have permission to access

00:19:58,320 --> 00:20:04,590
that sort of thing and then the last

00:20:01,920 --> 00:20:06,510
point here is that having all of the

00:20:04,590 --> 00:20:09,030
users font choices live in their home

00:20:06,510 --> 00:20:10,710
directory or innocent rectory is it

00:20:09,030 --> 00:20:11,880
realistically the only way we're ever

00:20:10,710 --> 00:20:14,160
going to be with synchronization of

00:20:11,880 --> 00:20:16,650
fonts which is again something that

00:20:14,160 --> 00:20:20,460
people running criteria has already have

00:20:16,650 --> 00:20:24,540
so if you have purchased a bunch of

00:20:20,460 --> 00:20:26,160
fonts from whoever and you run Mac OS on

00:20:24,540 --> 00:20:27,890
your laptop in on your desktop machine

00:20:26,160 --> 00:20:31,980
you can synchronize those libraries

00:20:27,890 --> 00:20:34,820
trivially synchronizing one directory

00:20:31,980 --> 00:20:38,280
the flat files that's a soft problem

00:20:34,820 --> 00:20:42,000
synchronizing debian and RPM packages

00:20:38,280 --> 00:20:44,130
just within one much less across both

00:20:42,000 --> 00:20:49,740
and synchronizing things locally as well

00:20:44,130 --> 00:20:51,180
that's just not doable so what would it

00:20:49,740 --> 00:20:53,310
take to actually change something with

00:20:51,180 --> 00:20:57,600
packaged fonts and have them all end up

00:20:53,310 --> 00:20:59,820
in the user's home directory and apart

00:20:57,600 --> 00:21:02,160
from just saying we should change the

00:20:59,820 --> 00:21:05,310
package definitions and have an assault

00:21:02,160 --> 00:21:07,950
there there's some real plumbing issues

00:21:05,310 --> 00:21:11,790
from one we would need to decide what

00:21:07,950 --> 00:21:14,910
those packages look like both as how

00:21:11,790 --> 00:21:17,310
they're delivered and how they actually

00:21:14,910 --> 00:21:22,380
end up installed in the system you need

00:21:17,310 --> 00:21:26,790
some kind of same structure for where in

00:21:22,380 --> 00:21:28,650
dot local fair fonts things end up is

00:21:26,790 --> 00:21:30,120
everything for a font in the same

00:21:28,650 --> 00:21:33,539
directory

00:21:30,120 --> 00:21:35,270
it's a set of well known patterns that

00:21:33,539 --> 00:21:38,309
we just thoughtlessly rely on mime types

00:21:35,270 --> 00:21:39,720
if you don't do this then things like

00:21:38,309 --> 00:21:44,370
tracking the license that goes with each

00:21:39,720 --> 00:21:46,679
font can get confused really fast and

00:21:44,370 --> 00:21:49,200
then that sort of ties in to the fact

00:21:46,679 --> 00:21:50,909
that we need something that sort of

00:21:49,200 --> 00:21:53,159
smartly handles when you've downloaded a

00:21:50,909 --> 00:21:54,900
zip file and you open it up there's some

00:21:53,159 --> 00:21:58,710
fonts in there there's a license file in

00:21:54,900 --> 00:22:01,770
there maybe there's like a piece of

00:21:58,710 --> 00:22:03,320
documentation or something and so it's

00:22:01,770 --> 00:22:06,600
unknown it's unknown problem at least in

00:22:03,320 --> 00:22:07,950
you know homeland I don't know when that

00:22:06,600 --> 00:22:11,130
would actually get work done on it

00:22:07,950 --> 00:22:14,159
but it's that same set of questions

00:22:11,130 --> 00:22:16,350
applies to the font managers you the

00:22:14,159 --> 00:22:18,960
flat managers that exists a day don't do

00:22:16,350 --> 00:22:20,760
a lot with tracking the ancillary

00:22:18,960 --> 00:22:23,520
material and that becomes a lot more

00:22:20,760 --> 00:22:26,070
important when you can just drop a font

00:22:23,520 --> 00:22:28,919
into got home and accidentally overwrite

00:22:26,070 --> 00:22:32,789
something and but of course the big one

00:22:28,919 --> 00:22:37,590
there is who actually maintains all

00:22:32,789 --> 00:22:40,679
those those font packages and I've been

00:22:37,590 --> 00:22:46,640
talking about this as if it's sort of

00:22:40,679 --> 00:22:48,720
like Sipan or Python package index

00:22:46,640 --> 00:22:50,370
taking that approach means you have to

00:22:48,720 --> 00:22:52,470
have hosting you have to build packages

00:22:50,370 --> 00:22:54,809
you have to have QA and testing you

00:22:52,470 --> 00:22:58,429
probably need like issue tracking you

00:22:54,809 --> 00:23:01,520
verily need a lot of people bar and

00:22:58,429 --> 00:23:04,500
that's not an easy sell for people and

00:23:01,520 --> 00:23:06,029
if you want to think maybe more short

00:23:04,500 --> 00:23:09,149
term or they're like things we could do

00:23:06,029 --> 00:23:11,190
that just sort of nudge things in that

00:23:09,149 --> 00:23:13,620
direction and maybe we'll see if people

00:23:11,190 --> 00:23:15,750
are interested I would say there's some

00:23:13,620 --> 00:23:19,919
structural issues to the way current

00:23:15,750 --> 00:23:21,860
bond packages are made and you have to

00:23:19,919 --> 00:23:24,799
avoid name collisions

00:23:21,860 --> 00:23:26,750
and you don't want licenses and docks to

00:23:24,799 --> 00:23:29,899
get lost and that might mean that we

00:23:26,750 --> 00:23:31,429
could be more rigorous about checking

00:23:29,899 --> 00:23:34,940
that we're consistent with with Debian

00:23:31,429 --> 00:23:37,460
flat packages because when everything is

00:23:34,940 --> 00:23:39,230
installed in home where people are also

00:23:37,460 --> 00:23:41,630
potentially installing stuff from a

00:23:39,230 --> 00:23:45,769
downloaded zip file you don't have

00:23:41,630 --> 00:23:50,059
something like like apt caching caching

00:23:45,769 --> 00:23:51,710
problems we're preventing them and at

00:23:50,059 --> 00:23:54,649
the same time all those same questions

00:23:51,710 --> 00:23:58,010
for the way that being font packages

00:23:54,649 --> 00:23:59,720
work belong upstream as well it would be

00:23:58,010 --> 00:24:01,210
nice to sort of push the idea upstream

00:23:59,720 --> 00:24:04,940
that you could have this consistent

00:24:01,210 --> 00:24:06,889
directory structure so your your family

00:24:04,940 --> 00:24:08,840
here and then your different weights are

00:24:06,889 --> 00:24:10,750
in this directory and then if you have a

00:24:08,840 --> 00:24:13,340
mono version that's a separate directory

00:24:10,750 --> 00:24:15,620
and things like that so there's a s'more

00:24:13,340 --> 00:24:20,960
standard layout and your license is

00:24:15,620 --> 00:24:24,080
always up this file so that's a sales

00:24:20,960 --> 00:24:26,600
job and you can't really sell everyone

00:24:24,080 --> 00:24:28,370
on a zip file the retro restructure that

00:24:26,600 --> 00:24:31,429
you haven't implemented yourself but you

00:24:28,370 --> 00:24:34,429
know it's mostly a conversation and I

00:24:31,429 --> 00:24:37,610
think there is actually there's a bug

00:24:34,429 --> 00:24:41,000
open in GDK to improve zip download

00:24:37,610 --> 00:24:43,039
support if you're a developer and

00:24:41,000 --> 00:24:45,559
interested in that it's possible to get

00:24:43,039 --> 00:24:47,630
that working and has benefits now I'd

00:24:45,559 --> 00:24:50,570
have nothing to do with my crazy ideas

00:24:47,630 --> 00:24:52,639
about font packaging going in home and

00:24:50,570 --> 00:24:55,760
then the last thing there type world is

00:24:52,639 --> 00:24:58,669
a nascent project that's intended to be

00:24:55,760 --> 00:25:02,019
like a lightweight update notification

00:24:58,669 --> 00:25:04,100
system for independent font foundries so

00:25:02,019 --> 00:25:06,470
when someone installs a font that

00:25:04,100 --> 00:25:09,279
they've downloaded they get a little API

00:25:06,470 --> 00:25:12,169
key basically and then a little demon

00:25:09,279 --> 00:25:14,720
checks once a day and when you have a

00:25:12,169 --> 00:25:16,309
release publish on your website and

00:25:14,720 --> 00:25:19,039
notices that and it downloads it and it

00:25:16,309 --> 00:25:21,740
knows that the which person downloaded

00:25:19,039 --> 00:25:23,419
it so they still have a current license

00:25:21,740 --> 00:25:27,110
or something not all that is clickable

00:25:23,419 --> 00:25:28,250
to open fonts but this is still in

00:25:27,110 --> 00:25:30,080
development there's a lot of people

00:25:28,250 --> 00:25:30,720
excited about the possibilities it opens

00:25:30,080 --> 00:25:32,610
up

00:25:30,720 --> 00:25:37,850
and this would be the right time to join

00:25:32,610 --> 00:25:40,860
in that conversation on the other hand

00:25:37,850 --> 00:25:44,400
yeah this this would sort of change

00:25:40,860 --> 00:25:48,540
would be major and and you know the

00:25:44,400 --> 00:25:51,210
first thing there is that absolutely

00:25:48,540 --> 00:25:53,070
have to take responsibility for checking

00:25:51,210 --> 00:25:57,150
whether her fonts are there you can find

00:25:53,070 --> 00:26:00,060
a lot of bugs in snap and flat-pack

00:25:57,150 --> 00:26:02,700
packages about Libre Office or whatever

00:26:00,060 --> 00:26:05,000
not seeing the system fonts it was just

00:26:02,700 --> 00:26:09,230
the packaging area on their part

00:26:05,000 --> 00:26:10,920
obviously even aside from that and

00:26:09,230 --> 00:26:12,810
there's gonna be a lot of assumptions

00:26:10,920 --> 00:26:15,540
people have made about where they look

00:26:12,810 --> 00:26:17,070
for fonts and you would catch those it

00:26:15,540 --> 00:26:19,200
would be good to fix those assumptions

00:26:17,070 --> 00:26:24,840
but it would mean breakage in the short

00:26:19,200 --> 00:26:26,640
term and yeah that's a lot of actual

00:26:24,840 --> 00:26:28,800
work for packages of other software

00:26:26,640 --> 00:26:30,660
packages not the flan people and so

00:26:28,800 --> 00:26:35,880
that's a big hurdle because you're

00:26:30,660 --> 00:26:38,330
imposing work on someone else in

00:26:35,880 --> 00:26:40,410
addition you see the third item there

00:26:38,330 --> 00:26:42,660
that would be a ton of work for people

00:26:40,410 --> 00:26:45,570
maintaining packages now to change their

00:26:42,660 --> 00:26:50,100
packages and that could not possibly

00:26:45,570 --> 00:26:52,500
happen quickly and obviously enough fall

00:26:50,100 --> 00:26:55,620
into your project how would you convince

00:26:52,500 --> 00:26:59,640
everyone to do this it's not going to be

00:26:55,620 --> 00:27:02,130
quick either going back up to the the

00:26:59,640 --> 00:27:03,480
first time there and it's not

00:27:02,130 --> 00:27:06,020
necessarily breakage but when

00:27:03,480 --> 00:27:09,780
applications are delivered in these

00:27:06,020 --> 00:27:11,870
containerized formats like snap you're

00:27:09,780 --> 00:27:13,950
gonna end up with duplicate fonts and

00:27:11,870 --> 00:27:15,420
you will also end up with duplicate

00:27:13,950 --> 00:27:16,590
fonts if you have multiple users in your

00:27:15,420 --> 00:27:18,660
system and they've all installed a

00:27:16,590 --> 00:27:22,860
package that lives only in their home

00:27:18,660 --> 00:27:25,500
directory so realistically there's gonna

00:27:22,860 --> 00:27:26,820
be a lot of chaos for a while I mean the

00:27:25,500 --> 00:27:28,680
idea of a cross distribution package

00:27:26,820 --> 00:27:30,500
sounds really nice but there are major

00:27:28,680 --> 00:27:33,480
differences between the way Debian and

00:27:30,500 --> 00:27:35,910
Red Hat packaged fonts from the name of

00:27:33,480 --> 00:27:38,470
the package to the structure that they

00:27:35,910 --> 00:27:41,289
live in right on down the line

00:27:38,470 --> 00:27:44,980
so the concept that everyone would have

00:27:41,289 --> 00:27:48,909
this single format it doesn't matter if

00:27:44,980 --> 00:27:50,529
it's rpm or or Debian there's a long way

00:27:48,909 --> 00:27:52,690
to go before we could agree on what that

00:27:50,529 --> 00:27:57,159
would look like and then the last thing

00:27:52,690 --> 00:28:01,899
there you relying more on the upstream

00:27:57,159 --> 00:28:03,370
projects it's a little bit upstream has

00:28:01,899 --> 00:28:06,929
more control I guess

00:28:03,370 --> 00:28:09,960
when there's an easy way to maintain a

00:28:06,929 --> 00:28:13,500
single font package for everyone

00:28:09,960 --> 00:28:18,389
authors are more likely to do that and

00:28:13,500 --> 00:28:20,889
it can result in disagreements I have

00:28:18,389 --> 00:28:23,980
seen a number of fonts for the updated

00:28:20,889 --> 00:28:26,830
release removes things and that's

00:28:23,980 --> 00:28:28,720
awkward a project like Debian might

00:28:26,830 --> 00:28:32,620
decide we're gonna maintain a patch

00:28:28,720 --> 00:28:34,779
against that and that could be tricky to

00:28:32,620 --> 00:28:37,240
convince everyone in other distributions

00:28:34,779 --> 00:28:38,980
to do if everyone is in theory sharing

00:28:37,240 --> 00:28:41,110
that workload you might not agree on

00:28:38,980 --> 00:28:42,970
whether or not the update should go out

00:28:41,110 --> 00:28:45,279
or you should stick with the current

00:28:42,970 --> 00:28:49,809
version and a lot of people are gonna

00:28:45,279 --> 00:28:53,080
say do it upstream does so the bottom

00:28:49,809 --> 00:28:56,590
line is it actually possible obviously

00:28:53,080 --> 00:29:00,610
the big challenge is how would you set

00:28:56,590 --> 00:29:02,919
up that big font package archive and in

00:29:00,610 --> 00:29:05,009
reality currently there's no one who's

00:29:02,919 --> 00:29:09,669
responsible for that sort of thing and

00:29:05,009 --> 00:29:11,169
Google Fonts has a ton of open fonts but

00:29:09,669 --> 00:29:12,549
it's not their responsibility their

00:29:11,169 --> 00:29:15,519
responsibility is to run the google

00:29:12,549 --> 00:29:17,470
fonts service it's not the same thing as

00:29:15,519 --> 00:29:21,429
open font library I know it sounds

00:29:17,470 --> 00:29:25,450
similar but open font library is akin to

00:29:21,429 --> 00:29:27,279
Wikipedia anyone can upload things you

00:29:25,450 --> 00:29:29,379
rely on a few editors to check that

00:29:27,279 --> 00:29:31,059
things are licensed properly and are

00:29:29,379 --> 00:29:35,190
available and it's not actually the

00:29:31,059 --> 00:29:35,190
responsibility of the foundries so

00:29:35,580 --> 00:29:41,889
probably the big issue is whether or not

00:29:39,879 --> 00:29:45,220
enough people are interested to work on

00:29:41,889 --> 00:29:47,080
making this happen and I'm essentially

00:29:45,220 --> 00:29:47,320
just throwing this out there one that

00:29:47,080 --> 00:29:49,510
they

00:29:47,320 --> 00:29:54,400
about this since March or April and I'm

00:29:49,510 --> 00:29:55,090
here to get reaction on its this is the

00:29:54,400 --> 00:29:58,240
bottom line

00:29:55,090 --> 00:29:59,920
it is possible maybe but only if a lot

00:29:58,240 --> 00:30:02,800
of people buy into the idea so I would

00:29:59,920 --> 00:30:06,970
like to hear what you think here and

00:30:02,800 --> 00:30:09,370
what everyone who views the video of

00:30:06,970 --> 00:30:12,790
this talk later thanks if you want to

00:30:09,370 --> 00:30:16,810
read further the flat-pack book for

00:30:12,790 --> 00:30:18,220
silver blue is there and again I I may

00:30:16,810 --> 00:30:20,200
have made this sound like I think this

00:30:18,220 --> 00:30:21,730
is all dependent on how important the

00:30:20,200 --> 00:30:24,790
future of silver blue is I'm not

00:30:21,730 --> 00:30:27,070
convinced silver blue take over the

00:30:24,790 --> 00:30:29,880
world at all of course and same with

00:30:27,070 --> 00:30:33,240
Ubuntu core it's those are transactional

00:30:29,880 --> 00:30:35,230
Oasis but they may or may not X but

00:30:33,240 --> 00:30:38,410
people have discovered interesting

00:30:35,230 --> 00:30:42,730
issues this way and second link there is

00:30:38,410 --> 00:30:46,920
an attempt by pathum open Fon designer

00:30:42,730 --> 00:30:49,360
from Sri Lanka to define a a sane

00:30:46,920 --> 00:30:51,610
structure for packages I'd recommend

00:30:49,360 --> 00:30:54,550
checking that out the third link there

00:30:51,610 --> 00:30:58,480
is a type world which is the

00:30:54,550 --> 00:31:00,580
subscription delivery and update

00:30:58,480 --> 00:31:02,160
mechanism I mentioned that it's the

00:31:00,580 --> 00:31:05,380
thing I think would be useful for

00:31:02,160 --> 00:31:08,650
working with sync which again doesn't

00:31:05,380 --> 00:31:11,470
exist yet below that is the DEF CON talk

00:31:08,650 --> 00:31:13,480
I did last year and at the end there is

00:31:11,470 --> 00:31:17,920
a blog post I wrote on sort of this

00:31:13,480 --> 00:31:21,430
topic a couple months ago that is it for

00:31:17,920 --> 00:31:24,030
me I will throw it open for questions or

00:31:21,430 --> 00:31:27,070
rants or arguments or any of that

00:31:24,030 --> 00:31:29,010
because really this is all thought

00:31:27,070 --> 00:31:31,350
experiment at this point and I would

00:31:29,010 --> 00:31:34,920
really like to hear what everyone else

00:31:31,350 --> 00:31:34,920
has to say about it

00:31:39,740 --> 00:31:45,810
it's a microphone

00:31:41,280 --> 00:31:50,580
okay is this yarn actually having a

00:31:45,810 --> 00:31:56,040
opposite topic okay

00:31:50,580 --> 00:31:58,520
so I was thinking that geo FA can

00:31:56,040 --> 00:32:02,880
actually serve as an intermediate

00:31:58,520 --> 00:32:04,770
foundation of foam packages like when

00:32:02,880 --> 00:32:08,310
you are considering packaging Debian

00:32:04,770 --> 00:32:11,570
packages we can actually grab grab we

00:32:08,310 --> 00:32:14,190
can actually request from format and

00:32:11,570 --> 00:32:16,470
convert and adapt it to up the truck

00:32:14,190 --> 00:32:20,010
table format over overprotect or in 612

00:32:16,470 --> 00:32:23,820
so or may even even like in type word in

00:32:20,010 --> 00:32:25,860
Mac OS it is also possible so I'm

00:32:23,820 --> 00:32:30,660
wondering if that are you also

00:32:25,860 --> 00:32:32,760
considering about the building the front

00:32:30,660 --> 00:32:35,760
front source is also important in your

00:32:32,760 --> 00:32:39,180
project so right both I didn't mention

00:32:35,760 --> 00:32:41,850
either those things if I understand your

00:32:39,180 --> 00:32:44,760
coming quickly you were noting that the

00:32:41,850 --> 00:32:47,070
grand unified font archive network does

00:32:44,760 --> 00:32:49,320
not have to host the final packages if

00:32:47,070 --> 00:32:51,750
you can build that Debian packages or

00:32:49,320 --> 00:32:54,930
the RPM packages from that that's fine

00:32:51,750 --> 00:32:57,960
too and that's true I didn't get into

00:32:54,930 --> 00:32:59,670
that detail that doesn't mean you're

00:32:57,960 --> 00:33:02,250
adding a layer rather than just

00:32:59,670 --> 00:33:04,230
replacing a layer so I'm not I'm not

00:33:02,250 --> 00:33:05,970
trying to be prescriptive there but it

00:33:04,230 --> 00:33:09,210
just seemed like it would sound more

00:33:05,970 --> 00:33:11,400
complex if I described it that way and I

00:33:09,210 --> 00:33:14,810
was concerned that might turn people off

00:33:11,400 --> 00:33:21,000
more to the idea to make it more complex

00:33:14,810 --> 00:33:22,670
and it was a second thing was the second

00:33:21,000 --> 00:33:25,020
division

00:33:22,670 --> 00:33:27,300
alright merit building fonts was first

00:33:25,020 --> 00:33:29,490
yeah this is a particular concern in

00:33:27,300 --> 00:33:34,620
reproducible builds because it's not

00:33:29,490 --> 00:33:39,890
easy and you find a lot of issues in in

00:33:34,620 --> 00:33:44,430
building fonts it's pretty manual now I

00:33:39,890 --> 00:33:47,430
would I would always assume that

00:33:44,430 --> 00:33:50,640
a font package service would do the

00:33:47,430 --> 00:33:52,920
builds we're at least it would find a

00:33:50,640 --> 00:33:54,780
way to distinguish between things that

00:33:52,920 --> 00:33:57,510
do bill from source and things that

00:33:54,780 --> 00:34:01,110
don't because you might need to have

00:33:57,510 --> 00:34:02,670
separate archive zones there because

00:34:01,110 --> 00:34:05,070
there are going to be people who want to

00:34:02,670 --> 00:34:08,429
have things installed that it's a no FL

00:34:05,070 --> 00:34:10,379
font but there is no source because one

00:34:08,429 --> 00:34:12,600
of the people here peculiarities of o FL

00:34:10,379 --> 00:34:15,090
is it doesn't require source to be

00:34:12,600 --> 00:34:19,379
available the theory being that the

00:34:15,090 --> 00:34:22,200
bezzie a is are editable and so yeah my

00:34:19,379 --> 00:34:23,940
personal preference would be part of the

00:34:22,200 --> 00:34:25,620
part of the service would be building

00:34:23,940 --> 00:34:28,020
the fonts since that has to happen

00:34:25,620 --> 00:34:31,020
anyway but it do feel like you would get

00:34:28,020 --> 00:34:33,620
people who want to also host things

00:34:31,020 --> 00:34:37,110
where there is no source Tech does that

00:34:33,620 --> 00:34:39,179
because the CTN is a lot of fun packages

00:34:37,110 --> 00:34:41,540
or there's no source cuz it's too old it

00:34:39,179 --> 00:34:48,440
was just released as a binary under it

00:34:41,540 --> 00:34:48,440
no very liberal license thanks

00:34:50,700 --> 00:34:53,510
more questions

00:34:57,420 --> 00:35:04,060
I think thank you very much thanks

00:35:00,950 --> 00:35:04,060

YouTube URL: https://www.youtube.com/watch?v=cIcQJfC6TnQ


