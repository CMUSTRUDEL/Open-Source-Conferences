Title: One Git to Package them All, and on the Salsa, Find Them
Publication date: 2019-08-05
Playlist: DebConf 19
Description: 
	by Sam Hartman
by Ian Jackson

At: DebConf19
https://debconf19.debconf.org/talks/68-one-git-to-package-them-all-and-on-the-salsa-find-them/

During the DPL campaign, there was discussion of two related issues.  First, we discussed moving our packaging to Git repositories on salsa.debian.org presumably as a matter of policy.  Second we discussed moving away from source packages and to a model where `git push` is used to upload packages.
This is a requirements collecting BOF for that discussion.  We'll discuss what people would like out of such and experience, how we might meet those requirements, and problems meeting the requirements.
Deciding whether to make this changes is out of scope: that belongs on our mailing lists.  But if we were going to do it, what would people want?  That belongs here.
Requirements will be conflicting.  Choosing which conflicting requirements to meet is out of scope beyond noting the conflict.  This is a brainstorming session.

Room: AuditÃ³rio
Scheduled start: 2019-07-21 17:00:00
Captions: 
	00:00:04,700 --> 00:00:10,130
okay welcome to one gig get to package

00:00:08,330 --> 00:00:15,080
them all and on the cell so find them so

00:00:10,130 --> 00:00:16,099
I asked for this Boff in response to a

00:00:15,080 --> 00:00:18,860
couple of things that happened during

00:00:16,099 --> 00:00:20,630
the DPL campaign first of all we were

00:00:18,860 --> 00:00:25,730
talking about the idea of consolidating

00:00:20,630 --> 00:00:30,080
our packaging work on on salsa and you

00:00:25,730 --> 00:00:31,220
know basically how yeah you can NMU a

00:00:30,080 --> 00:00:34,040
package but that doesn't necessarily

00:00:31,220 --> 00:00:37,430
mean you can even reliably commit or

00:00:34,040 --> 00:00:39,680
merge request to it and the second thing

00:00:37,430 --> 00:00:42,710
we were talking about is and of course

00:00:39,680 --> 00:00:46,100
that conversation also very quickly got

00:00:42,710 --> 00:00:48,440
into get workflow and you know well hey

00:00:46,100 --> 00:00:52,309
even if you had the right repository

00:00:48,440 --> 00:00:59,500
would you even understand um what what

00:00:52,309 --> 00:01:01,790
it was you know about um but then we

00:00:59,500 --> 00:01:03,290
things have evolved since then and I

00:01:01,790 --> 00:01:05,390
think that we have a broader scope in

00:01:03,290 --> 00:01:08,000
that original scope but what I did want

00:01:05,390 --> 00:01:12,680
to do is have a requirements gathering

00:01:08,000 --> 00:01:14,840
session where we focused on trying to

00:01:12,680 --> 00:01:18,770
understand all the requirements people

00:01:14,840 --> 00:01:24,109
had surrounding get in Debian for

00:01:18,770 --> 00:01:25,939
packaging and we're here to gather

00:01:24,109 --> 00:01:28,670
requirements and understand why people

00:01:25,939 --> 00:01:30,619
have those requirements we're not going

00:01:28,670 --> 00:01:32,780
to judge or rank those requirements

00:01:30,619 --> 00:01:34,429
we're gonna have conflicting

00:01:32,780 --> 00:01:38,869
requirements I can name a couple right

00:01:34,429 --> 00:01:41,570
now we should have exactly one get data

00:01:38,869 --> 00:01:42,979
model slash repository layout for all of

00:01:41,570 --> 00:01:45,979
our Debian packaging there are people

00:01:42,979 --> 00:01:48,770
who want that of course that one model

00:01:45,979 --> 00:01:51,560
needs to be patches unapplied as well as

00:01:48,770 --> 00:01:53,780
the monolithic report formats that the

00:01:51,560 --> 00:01:56,270
rust people are using at the same time

00:01:53,780 --> 00:02:00,530
as being the diecut downstream you know

00:01:56,270 --> 00:02:01,819
me you get view huh well maybe we're not

00:02:00,530 --> 00:02:04,960
going to be able to meet all of those

00:02:01,819 --> 00:02:04,960
requirements at once

00:02:06,290 --> 00:02:10,070
that's okay what we want to do is write

00:02:09,229 --> 00:02:12,290
them down

00:02:10,070 --> 00:02:13,930
so that in our future discussions we

00:02:12,290 --> 00:02:17,960
make sure we aren't missing any

00:02:13,930 --> 00:02:20,060
unfortunately plio agreed to join us

00:02:17,960 --> 00:02:22,370
today and if we get a little off track

00:02:20,060 --> 00:02:28,670
and get into you know judging

00:02:22,370 --> 00:02:29,870
requirements he'll let us know so I'd

00:02:28,670 --> 00:02:31,570
like to start

00:02:29,870 --> 00:02:36,470
ian has done some really great work

00:02:31,570 --> 00:02:38,600
trying to outline all of the different

00:02:36,470 --> 00:02:42,050
ways that people in Debian have been

00:02:38,600 --> 00:02:43,700
approaching I guess you know the

00:02:42,050 --> 00:02:45,740
different workflows forget packaging and

00:02:43,700 --> 00:02:47,480
so I asked him to come and present that

00:02:45,740 --> 00:02:49,880
work because I think that captures a

00:02:47,480 --> 00:02:52,700
huge chunk of some of the things we're

00:02:49,880 --> 00:02:55,040
thinking about right so I've been

00:02:52,700 --> 00:02:59,540
working on get stuff in Debian for a

00:02:55,040 --> 00:03:01,100
number of years now and the more I talk

00:02:59,540 --> 00:03:04,640
to people about this the more I discover

00:03:01,100 --> 00:03:07,550
that different people are doing often

00:03:04,640 --> 00:03:09,440
very different things it's actually

00:03:07,550 --> 00:03:11,360
often very hard even you know like a bar

00:03:09,440 --> 00:03:12,680
conversation where you're really focused

00:03:11,360 --> 00:03:14,540
and you've got both of each other's

00:03:12,680 --> 00:03:16,310
attention or a really high bandwidth

00:03:14,540 --> 00:03:17,870
interaction or if you're a whiteboard or

00:03:16,310 --> 00:03:19,760
whatever it's really hard to have these

00:03:17,870 --> 00:03:21,290
conversations because often we don't

00:03:19,760 --> 00:03:23,720
even speak the same language and you

00:03:21,290 --> 00:03:25,550
kind of like talk across purposes for

00:03:23,720 --> 00:03:30,800
like 10-15 minutes and then you're like

00:03:25,550 --> 00:03:32,330
oh so um I've been trying to one of the

00:03:30,800 --> 00:03:36,320
things I've been trying to do recently

00:03:32,330 --> 00:03:40,310
is at least collect information about

00:03:36,320 --> 00:03:43,580
what is that people are doing and you

00:03:40,310 --> 00:03:49,880
know how they do it and give some of

00:03:43,580 --> 00:03:51,890
these things some names so I suppose the

00:03:49,880 --> 00:03:54,380
first thing I want to say is there's a

00:03:51,890 --> 00:03:57,470
distinction Sam talk about workflow so

00:03:54,380 --> 00:03:59,989
think you mean your workflows and what

00:03:57,470 --> 00:04:01,580
I'm calling the branch format so let us

00:03:59,989 --> 00:04:03,440
say that you've got your thing on South

00:04:01,580 --> 00:04:06,800
so most people have a thing on salsa and

00:04:03,440 --> 00:04:08,260
the question is for me what is that

00:04:06,800 --> 00:04:10,700
thing on South so what does it look like

00:04:08,260 --> 00:04:12,590
you know when you get cloning what do

00:04:10,700 --> 00:04:16,290
you see when you get log it what do you

00:04:12,590 --> 00:04:21,270
see and

00:04:16,290 --> 00:04:25,220
it turns out that for there are branch

00:04:21,270 --> 00:04:28,110
formats as I'm calling them that have

00:04:25,220 --> 00:04:30,360
completely for which it is possible to

00:04:28,110 --> 00:04:32,580
have completely disjoint totally

00:04:30,360 --> 00:04:34,620
disparate ways of managing that same

00:04:32,580 --> 00:04:36,720
branch format and it's quite possible

00:04:34,620 --> 00:04:38,220
even it doesn't happen very often

00:04:36,720 --> 00:04:39,960
because members of the same team usually

00:04:38,220 --> 00:04:41,640
share each other's you know working

00:04:39,960 --> 00:04:43,920
practices but it's quite possible for

00:04:41,640 --> 00:04:45,930
two people in the same team to have

00:04:43,920 --> 00:04:48,780
completely different workflows and still

00:04:45,930 --> 00:04:50,550
exchange a branch somehow it provided

00:04:48,780 --> 00:04:53,310
that branches you know in the same

00:04:50,550 --> 00:04:55,770
format so what really matters for our

00:04:53,310 --> 00:04:58,350
collaboration is less the precise

00:04:55,770 --> 00:04:59,940
commands you type and more what the

00:04:58,350 --> 00:05:03,720
thing is that you are exchanging with

00:04:59,940 --> 00:05:05,160
your colleagues and this is really

00:05:03,720 --> 00:05:07,410
awkward because people don't already

00:05:05,160 --> 00:05:10,620
talk about that if you ask people what

00:05:07,410 --> 00:05:12,990
do they do normally I've had this

00:05:10,620 --> 00:05:16,200
experience loads right people give you a

00:05:12,990 --> 00:05:20,400
list of the runes they type and the

00:05:16,200 --> 00:05:22,530
runes they type are like combinations of

00:05:20,400 --> 00:05:24,300
get bill package options or oh yeah

00:05:22,530 --> 00:05:27,780
that's our Perl team special wrapper

00:05:24,300 --> 00:05:30,090
script which does something and you look

00:05:27,780 --> 00:05:31,740
at these runes and you've got no idea so

00:05:30,090 --> 00:05:35,250
usually the best way to find out is to

00:05:31,740 --> 00:05:36,930
look you can normally if you're a human

00:05:35,250 --> 00:05:38,640
if a robot it's a bit hard but for a

00:05:36,930 --> 00:05:41,700
human you can normally look at the thing

00:05:38,640 --> 00:05:44,070
and see oh well this is probably this so

00:05:41,700 --> 00:05:45,860
this is the most common one I'm calling

00:05:44,070 --> 00:05:48,480
it unapplied some people call it um

00:05:45,860 --> 00:05:51,600
patches unapplied get build package

00:05:48,480 --> 00:05:57,180
calls it the patches on applied

00:05:51,600 --> 00:05:59,910
packaging branch and here we have a

00:05:57,180 --> 00:06:04,860
description of the screen savers come on

00:05:59,910 --> 00:06:08,600
yep sorry give a description of what you

00:06:04,860 --> 00:06:11,160
find if you get clone this so you get a

00:06:08,600 --> 00:06:12,870
Debian directory containing Debian

00:06:11,160 --> 00:06:15,120
control and Debian changelog and all

00:06:12,870 --> 00:06:17,100
that other kind of stuff and you get all

00:06:15,120 --> 00:06:19,980
the upstream source code like you know

00:06:17,100 --> 00:06:22,380
readme make file dot am whatever you

00:06:19,980 --> 00:06:25,290
know cert not see whatever there happens

00:06:22,380 --> 00:06:26,790
to be there but if we have changed any

00:06:25,290 --> 00:06:29,040
of the files

00:06:26,790 --> 00:06:31,290
those changes are not recorded in the

00:06:29,040 --> 00:06:33,930
directly upstream file so if we I don't

00:06:31,290 --> 00:06:37,290
know deleted some offensive comment from

00:06:33,930 --> 00:06:38,940
the readme there will be a patch so that

00:06:37,290 --> 00:06:40,890
when it was you know installed in user

00:06:38,940 --> 00:06:43,670
shared dock it's not offensive anymore

00:06:40,890 --> 00:06:46,440
there would be patch in Debian / patches

00:06:43,670 --> 00:06:48,780
/ you know something or other

00:06:46,440 --> 00:06:51,720
remove offensive comment from readme

00:06:48,780 --> 00:06:53,070
which would be a diff to delete that

00:06:51,720 --> 00:06:54,510
comment from the readme and the copy of

00:06:53,070 --> 00:06:56,220
the readme in the root of the source

00:06:54,510 --> 00:06:59,880
tree would still have the offensive

00:06:56,220 --> 00:07:01,650
comment in it and so all the changes

00:06:59,880 --> 00:07:03,240
that we make are not represented

00:07:01,650 --> 00:07:05,280
directly in upstream file so if you get

00:07:03,240 --> 00:07:07,770
log one of the upstream files you

00:07:05,280 --> 00:07:09,660
hopefully get the upstream history maybe

00:07:07,770 --> 00:07:18,210
you get like some tar ball thing from

00:07:09,660 --> 00:07:21,270
GBP and when you you know people like

00:07:18,210 --> 00:07:23,610
edit these patches and the number of

00:07:21,270 --> 00:07:25,170
tools that people use to edit the

00:07:23,610 --> 00:07:30,570
contents of Debian patches is

00:07:25,170 --> 00:07:32,220
astonishing it's not even practical to

00:07:30,570 --> 00:07:39,630
try to list them everybody has their own

00:07:32,220 --> 00:07:46,530
thing the most common ones are GBP P Q

00:07:39,630 --> 00:07:48,960
and basically directly using quilt so

00:07:46,530 --> 00:07:50,580
that's an applied right and that's

00:07:48,960 --> 00:07:53,730
already quite complicated you know I've

00:07:50,580 --> 00:07:55,830
just spent five minutes explaining it if

00:07:53,730 --> 00:08:01,530
we could go back to the other tab now

00:07:55,830 --> 00:08:03,360
yep it's at the top of this table this

00:08:01,530 --> 00:08:06,240
is only the first three lines of this

00:08:03,360 --> 00:08:10,500
table this table has got about a dozen

00:08:06,240 --> 00:08:12,810
rows in it and they're different right

00:08:10,500 --> 00:08:15,720
so we have here that the next one along

00:08:12,810 --> 00:08:17,730
is people who've just don't get merged

00:08:15,720 --> 00:08:20,310
from upstream right with the with the

00:08:17,730 --> 00:08:22,860
unapplied stuff because you haven't put

00:08:20,310 --> 00:08:24,810
your changes directly into the upstream

00:08:22,860 --> 00:08:26,550
files you can't sort of get cherry-pick

00:08:24,810 --> 00:08:29,010
from upstream and get merged from

00:08:26,550 --> 00:08:33,090
upstream you have to you know separate

00:08:29,010 --> 00:08:36,120
your things out into patches some people

00:08:33,090 --> 00:08:38,880
generally don't you know their their

00:08:36,120 --> 00:08:42,820
difference or upstream is so small often

00:08:38,880 --> 00:08:45,400
even absent or just you know one or two

00:08:42,820 --> 00:08:47,020
changes and often their changes that

00:08:45,400 --> 00:08:48,460
they because they have a good

00:08:47,020 --> 00:08:51,640
relationship with upstream are going to

00:08:48,460 --> 00:08:53,020
go into upstream soon anyway they find

00:08:51,640 --> 00:08:56,440
it more convenient not to bother

00:08:53,020 --> 00:08:58,960
maintaining that as a like nice stack of

00:08:56,440 --> 00:09:02,130
individual pouches instead they just

00:08:58,960 --> 00:09:06,010
make whatever changes they like and

00:09:02,130 --> 00:09:09,190
typically what they do is um they use

00:09:06,010 --> 00:09:11,920
either three-point not with sync patch

00:09:09,190 --> 00:09:13,720
so that all of the Debian changes in the

00:09:11,920 --> 00:09:18,180
source package end up as a single patch

00:09:13,720 --> 00:09:18,180
called patches slash Debian changes

00:09:22,080 --> 00:09:28,060
there's a tool I wrote called get debris

00:09:25,180 --> 00:09:30,310
base which looks similar at first glance

00:09:28,060 --> 00:09:32,260
you get the same thing you check out the

00:09:30,310 --> 00:09:34,360
tree the the upstream files are there

00:09:32,260 --> 00:09:37,660
they have the Debian modifications in

00:09:34,360 --> 00:09:39,760
but if you run like get K or some other

00:09:37,660 --> 00:09:41,380
kind of risk review on that you'll

00:09:39,760 --> 00:09:43,420
discover the branch structure has got

00:09:41,380 --> 00:09:45,550
this like there's this this this sort of

00:09:43,420 --> 00:09:49,680
merge at the top and and you know why is

00:09:45,550 --> 00:09:54,370
this branch here and what's going on and

00:09:49,680 --> 00:09:56,590
I won't go into details but if you know

00:09:54,370 --> 00:09:58,630
the way to edit that that is a way of

00:09:56,590 --> 00:10:02,020
maintaining the linear series in some

00:09:58,630 --> 00:10:03,250
complicated way a bit like DPM get DPM

00:10:02,020 --> 00:10:05,800
is another one of the entries in this

00:10:03,250 --> 00:10:09,370
table so every thing that everybody does

00:10:05,800 --> 00:10:11,440
is different we have amongst our branch

00:10:09,370 --> 00:10:15,640
formats we have branch formats that

00:10:11,440 --> 00:10:17,320
don't fast forward some people and I

00:10:15,640 --> 00:10:20,470
know you have that in this table yet but

00:10:17,320 --> 00:10:22,210
some people make a new get branch every

00:10:20,470 --> 00:10:23,950
time they go to a new upstream release

00:10:22,210 --> 00:10:25,740
they get rebase and they have a separate

00:10:23,950 --> 00:10:31,090
branch for each upstream release and

00:10:25,740 --> 00:10:34,210
they never stitch them together some

00:10:31,090 --> 00:10:37,420
people don't put the upstream source

00:10:34,210 --> 00:10:40,150
code in their debian git branch at all

00:10:37,420 --> 00:10:42,370
and they have a debian get branch which

00:10:40,150 --> 00:10:45,269
just contains a debian directory and no

00:10:42,370 --> 00:10:47,920
upstream files at all and

00:10:45,269 --> 00:10:49,360
there's ways typically I think they're

00:10:47,920 --> 00:10:50,950
using get bill package to build that

00:10:49,360 --> 00:10:53,139
because it knows how to if you want to

00:10:50,950 --> 00:10:54,399
build a actually built it you obviously

00:10:53,139 --> 00:10:56,050
need the upstream source code and it

00:10:54,399 --> 00:10:59,889
knows how to kind of combine them for

00:10:56,050 --> 00:11:01,660
building so I mean we could like page

00:10:59,889 --> 00:11:03,160
through this they'll be like full screen

00:11:01,660 --> 00:11:06,250
Falls of this I don't think that would

00:11:03,160 --> 00:11:09,329
be very I mean I think basically my take

00:11:06,250 --> 00:11:11,529
on this is that this is a good set of

00:11:09,329 --> 00:11:16,329
requirements about the branch formats

00:11:11,529 --> 00:11:18,459
that we're in in use today we may get to

00:11:16,329 --> 00:11:19,930
a point in since we're just gathering

00:11:18,459 --> 00:11:21,250
requirements and we're not you know

00:11:19,930 --> 00:11:23,589
deciding what we would use going forward

00:11:21,250 --> 00:11:25,570
I think for the purposes of this bath we

00:11:23,589 --> 00:11:27,279
can read into the record all of the

00:11:25,570 --> 00:11:28,839
above right and I wanted to say

00:11:27,279 --> 00:11:30,880
something about this right now I have my

00:11:28,839 --> 00:11:32,800
favorite here right I wrote a tool right

00:11:30,880 --> 00:11:34,510
so you know if I could put another hat

00:11:32,800 --> 00:11:38,050
on I'd say oh everybody should be using

00:11:34,510 --> 00:11:41,410
it Deborah base but actually you know if

00:11:38,050 --> 00:11:43,480
I step back a bit not all of the entries

00:11:41,410 --> 00:11:45,579
in this table have some good reason for

00:11:43,480 --> 00:11:48,820
them in my personal opinion but most of

00:11:45,579 --> 00:11:50,500
them do most of them solve some problem

00:11:48,820 --> 00:11:52,060
they make you know each of these make

00:11:50,500 --> 00:11:53,920
some things harder and some things

00:11:52,060 --> 00:11:55,510
easier and some of them are more

00:11:53,920 --> 00:11:57,880
convenient in one way or more

00:11:55,510 --> 00:12:01,360
convenience in another and those kind of

00:11:57,880 --> 00:12:02,829
trade-offs are often work differently

00:12:01,360 --> 00:12:05,790
for different packages they work

00:12:02,829 --> 00:12:09,250
differently for different people so I

00:12:05,790 --> 00:12:10,959
find it hard you know I find it hard

00:12:09,250 --> 00:12:12,550
there's some of these here right

00:12:10,959 --> 00:12:13,660
probably about half of them when I say

00:12:12,550 --> 00:12:16,060
if you're doing this you're just wrong

00:12:13,660 --> 00:12:17,829
right and you know I won't I won't do

00:12:16,060 --> 00:12:21,070
that here because I'll gets corked at by

00:12:17,829 --> 00:12:22,899
this bird but but at least half of these

00:12:21,070 --> 00:12:25,540
I'm willing to say you know if you came

00:12:22,899 --> 00:12:27,670
to me in the bar and said why don't you

00:12:25,540 --> 00:12:29,050
hate this one I would say I'd be able to

00:12:27,670 --> 00:12:30,790
give you an answer I'd say well that one

00:12:29,050 --> 00:12:32,890
is you know it's quite it's quite good

00:12:30,790 --> 00:12:34,720
in this way personally I don't think

00:12:32,890 --> 00:12:38,529
that's so important but you know there

00:12:34,720 --> 00:12:39,730
are people who like that and that is in

00:12:38,529 --> 00:12:42,130
skit like if you if you're in the

00:12:39,730 --> 00:12:45,130
audience have a question like why do

00:12:42,130 --> 00:12:47,230
people do X it's going to help you

00:12:45,130 --> 00:12:49,060
formulate other things that you want to

00:12:47,230 --> 00:12:51,100
bring forward as requirements today feel

00:12:49,060 --> 00:12:52,800
free to ask that I think if we're done

00:12:51,100 --> 00:12:55,360
with the survey what I'd like to yeah is

00:12:52,800 --> 00:12:57,590
so I think I'd like to kind of open it

00:12:55,360 --> 00:12:59,630
up and basically

00:12:57,590 --> 00:13:01,580
what are the things we need to consider

00:12:59,630 --> 00:13:03,350
in Debian when we're talking about how

00:13:01,580 --> 00:13:05,810
we want get packaging to work and

00:13:03,350 --> 00:13:08,540
basically have people start bringing up

00:13:05,810 --> 00:13:10,460
comments and have high voltage start you

00:13:08,540 --> 00:13:15,710
know trying to get a once-in-a summary

00:13:10,460 --> 00:13:17,720
of each comment if we get stalled I'll

00:13:15,710 --> 00:13:20,240
start talking because I certainly have I

00:13:17,720 --> 00:13:22,940
can bring in things from the list to

00:13:20,240 --> 00:13:26,480
think about right there so this is topic

00:13:22,940 --> 00:13:28,220
people have opinions about so you know

00:13:26,480 --> 00:13:31,670
come and like have your opinions please

00:13:28,220 --> 00:13:34,100
I know it's like not the you know

00:13:31,670 --> 00:13:36,170
friendliest format for coming standing

00:13:34,100 --> 00:13:39,410
up at a mic and telling us all your

00:13:36,170 --> 00:13:40,279
personal like get opinions but but

00:13:39,410 --> 00:13:41,839
that's what we're here for

00:13:40,279 --> 00:13:43,100
well right because we're cutting out the

00:13:41,839 --> 00:13:44,660
arguments at least we're hoping to you

00:13:43,100 --> 00:13:48,589
so right know me they will tell you or

00:13:44,660 --> 00:13:55,010
wrong for wanting something yeah so tell

00:13:48,589 --> 00:13:56,720
us what you want excellent I'm assuming

00:13:55,010 --> 00:13:59,230
you want I'm assuming you want

00:13:56,720 --> 00:14:02,150
requirements yeah but a system of this

00:13:59,230 --> 00:14:03,530
scale so well we don't have a system we

00:14:02,150 --> 00:14:04,900
want like what do you want out of

00:14:03,530 --> 00:14:09,710
everything yes

00:14:04,900 --> 00:14:12,339
I'll start simple so if I have a debian

00:14:09,710 --> 00:14:15,589
only package and I maintain it and get I

00:14:12,339 --> 00:14:17,600
shouldn't do anything extra that's

00:14:15,589 --> 00:14:20,600
really good basically for native

00:14:17,600 --> 00:14:29,290
packages you should just be able to use

00:14:20,600 --> 00:14:29,290
yet okay that's that's yep yep

00:14:31,430 --> 00:14:34,430
next

00:14:35,900 --> 00:14:42,380
okay I'm gonna add one and this is maybe

00:14:38,630 --> 00:14:44,450
obvious but we have this notion of

00:14:42,380 --> 00:14:47,900
uploads right and and and binaries and

00:14:44,450 --> 00:14:49,640
we've got branches on salsa but there

00:14:47,900 --> 00:14:54,380
has to be a way for the maintainer to

00:14:49,640 --> 00:14:55,130
say when the like branch or branches or

00:14:54,380 --> 00:14:58,370
whatever it is

00:14:55,130 --> 00:14:59,839
should be like considered for you know

00:14:58,370 --> 00:15:03,820
turning into binaries built into

00:14:59,839 --> 00:15:06,110
binaries and distributed to Debian users

00:15:03,820 --> 00:15:09,529
so there has to be a way to release a

00:15:06,110 --> 00:15:14,150
package to Debian a release right I took

00:15:09,529 --> 00:15:18,290
a way to mark the point of release yes I

00:15:14,150 --> 00:15:19,760
got asked about native Pegasus I'm and

00:15:18,290 --> 00:15:22,100
I'm of the opinion that should be no

00:15:19,760 --> 00:15:25,190
native packages as all because we have

00:15:22,100 --> 00:15:31,850
derivatives not about non-native

00:15:25,190 --> 00:15:34,300
packages right we're not here to debate

00:15:31,850 --> 00:15:38,360
pretty tonight can I try and rephrase

00:15:34,300 --> 00:15:39,890
holders holger's idea because actually

00:15:38,360 --> 00:15:42,589
there is I think there is an important

00:15:39,890 --> 00:15:47,570
requirement here there is an important

00:15:42,589 --> 00:15:51,380
requirement here which is that it should

00:15:47,570 --> 00:15:54,500
be easy for a debian derivative to

00:15:51,380 --> 00:15:56,660
maintain their stuff in get on top of

00:15:54,500 --> 00:16:01,310
our get stuff in a way that is

00:15:56,660 --> 00:16:04,430
convenient for them okay another one

00:16:01,310 --> 00:16:06,380
that from from IANS I think that yen

00:16:04,430 --> 00:16:10,940
will agree with this one that it should

00:16:06,380 --> 00:16:13,990
be easy for users who are familiar with

00:16:10,940 --> 00:16:17,270
yet who take software and debian and

00:16:13,990 --> 00:16:19,339
modify it for their own needs using

00:16:17,270 --> 00:16:25,160
basically something very close to get

00:16:19,339 --> 00:16:27,250
tools and build it and use it we have

00:16:25,160 --> 00:16:28,459
another audience question do come up

00:16:27,250 --> 00:16:31,310
hello

00:16:28,459 --> 00:16:34,040
I would really love to be able to

00:16:31,310 --> 00:16:36,170
trivially cherry-pick individual patches

00:16:34,040 --> 00:16:40,730
from upstream and still get merge

00:16:36,170 --> 00:16:42,860
requests on salsa that's kind of hard

00:16:40,730 --> 00:16:44,420
right there's just two requirements it's

00:16:42,860 --> 00:16:47,810
complete and requirement but but

00:16:44,420 --> 00:16:50,540
either/or is not very interesting so I

00:16:47,810 --> 00:16:52,280
mean do you there's a reason why you

00:16:50,540 --> 00:16:55,760
think you might get either/or like do

00:16:52,280 --> 00:16:59,390
they conflict with each other sometimes

00:16:55,760 --> 00:17:01,550
they do can you explain how most of the

00:16:59,390 --> 00:17:04,540
work most of the branch formats in my

00:17:01,550 --> 00:17:07,880
table do not support this or don't

00:17:04,540 --> 00:17:08,900
support one or the other of these

00:17:07,880 --> 00:17:12,050
require

00:17:08,900 --> 00:17:15,530
understood they let me repeat the crime

00:17:12,050 --> 00:17:20,929
at then yes the requirement is that we

00:17:15,530 --> 00:17:27,650
want to be able to get cherry-pick from

00:17:20,929 --> 00:17:34,160
upstream and also to be able to take git

00:17:27,650 --> 00:17:36,500
merge requests on salsa so if for

00:17:34,160 --> 00:17:39,320
example some of the branch formats like

00:17:36,500 --> 00:17:43,250
the debri based branch format do not

00:17:39,320 --> 00:17:51,380
support general merges

00:17:43,250 --> 00:17:53,720
I mean yeah in an unapplied branch

00:17:51,380 --> 00:18:02,360
format you cannot directly take a

00:17:53,720 --> 00:18:03,800
cherry-pick from upstream so I guess one

00:18:02,360 --> 00:18:07,130
of the things I think we should explore

00:18:03,800 --> 00:18:10,520
is the kind of to what extent do we want

00:18:07,130 --> 00:18:12,500
to move things to salsa two people had

00:18:10,520 --> 00:18:16,390
talked about basically making it easy

00:18:12,500 --> 00:18:21,440
for all Debian developers to be able to

00:18:16,390 --> 00:18:24,830
modify a package just like they can in

00:18:21,440 --> 00:18:27,919
mu something and if you stick something

00:18:24,830 --> 00:18:31,520
in the Debian group on salsa you get

00:18:27,919 --> 00:18:33,860
that today but if you stick something in

00:18:31,520 --> 00:18:38,179
another team related group it's actually

00:18:33,860 --> 00:18:40,480
harder to achieve that time we've got

00:18:38,179 --> 00:18:45,530
like two people killing a larger great

00:18:40,480 --> 00:18:47,510
thanks yeah so I agree that being able

00:18:45,530 --> 00:18:49,400
to cherry-pick things from upstream or

00:18:47,510 --> 00:18:53,750
even merge from upstream and have a

00:18:49,400 --> 00:18:55,970
consistent history is very useful but on

00:18:53,750 --> 00:18:59,500
the other hand as long as we have source

00:18:55,970 --> 00:19:01,570
packages it's very useful to have the

00:18:59,500 --> 00:19:03,820
Mountains of a good range to be as

00:19:01,570 --> 00:19:07,120
similar as possible as what you would

00:19:03,820 --> 00:19:11,020
get by unpacking a source package from

00:19:07,120 --> 00:19:14,050
the archives so you want it to be the

00:19:11,020 --> 00:19:15,460
get branch format to be as similar as

00:19:14,050 --> 00:19:18,310
possible to what you get from a source

00:19:15,460 --> 00:19:20,500
package and I collect ask there are two

00:19:18,310 --> 00:19:22,960
possible requirements there and I want

00:19:20,500 --> 00:19:28,000
to like separate them out one of them is

00:19:22,960 --> 00:19:30,000
via the tree you get when you look at

00:19:28,000 --> 00:19:33,940
the git branch is as similar as possible

00:19:30,000 --> 00:19:35,710
to the directory tree that you get when

00:19:33,940 --> 00:19:38,380
you unpack the source package yes and

00:19:35,710 --> 00:19:41,230
the other is that is some kind of

00:19:38,380 --> 00:19:43,270
requirement on the history and I'm not

00:19:41,230 --> 00:19:44,830
sure exactly what that would be but it

00:19:43,270 --> 00:19:47,920
would probably involve something to do

00:19:44,830 --> 00:19:54,010
with the quilt patches yes which do you

00:19:47,920 --> 00:19:56,050
mean yeah I mean I certainly want the

00:19:54,010 --> 00:19:59,640
first one so I want that one to be in

00:19:56,050 --> 00:20:02,230
town in the list yes yeah my point is

00:19:59,640 --> 00:20:05,080
especially if you are maintaining like a

00:20:02,230 --> 00:20:08,260
large number of packages in a team like

00:20:05,080 --> 00:20:14,580
the Ruby gene has some thousand packages

00:20:08,260 --> 00:20:17,970
it's useful that they're all the same in

00:20:14,580 --> 00:20:21,370
the day they have patches unapplied

00:20:17,970 --> 00:20:27,520
it's a little bit an inconsistency with

00:20:21,370 --> 00:20:30,880
the tool some do use gits p q gb p PQ

00:20:27,520 --> 00:20:33,780
and the others use just plain cute but

00:20:30,880 --> 00:20:36,490
it's it's useful to have that option as

00:20:33,780 --> 00:20:39,760
long as we have source packages if you

00:20:36,490 --> 00:20:42,130
if you get rid of source packages and we

00:20:39,760 --> 00:20:44,770
do not have the debian patches directory

00:20:42,130 --> 00:20:50,580
anymore and you don't think anybody

00:20:44,770 --> 00:20:50,580
cares about that anymore okay next

00:20:51,390 --> 00:20:55,929
actually I guess what one thing that

00:20:54,070 --> 00:20:58,030
that we should also write down is that

00:20:55,929 --> 00:21:01,510
it is useful to have consistency across

00:20:58,030 --> 00:21:07,480
a team I mean that's you know yes but

00:21:01,510 --> 00:21:11,669
very true so Santa mentioned requirement

00:21:07,480 --> 00:21:16,780
of making it easy for non Debian

00:21:11,669 --> 00:21:21,900
insiders to modify and use software in

00:21:16,780 --> 00:21:24,400
Debian I'd like people who understand

00:21:21,900 --> 00:21:27,010
who have domain knowledge and who

00:21:24,400 --> 00:21:31,809
understand get to be able to contribute

00:21:27,010 --> 00:21:34,960
to Debian without doing a PhD in Debian

00:21:31,809 --> 00:21:37,120
ology so in a less narky way what I mean

00:21:34,960 --> 00:21:38,679
not learning a lot of gets specific tool

00:21:37,120 --> 00:21:41,799
or not learning a lot of Gabbi and

00:21:38,679 --> 00:21:44,830
specific tools I think that's what I was

00:21:41,799 --> 00:21:46,360
trying to say but yes that's slightly

00:21:44,830 --> 00:21:48,630
different right one of them is a

00:21:46,360 --> 00:21:52,200
requirement that it's easy for users to

00:21:48,630 --> 00:21:55,210
basically act as a downstream and

00:21:52,200 --> 00:21:57,820
David's requirement is this easy easy

00:21:55,210 --> 00:21:59,650
for those hopefully those same people to

00:21:57,820 --> 00:22:01,809
then come and become contributors to

00:21:59,650 --> 00:22:03,970
Debian oh they won't learn a lot of

00:22:01,809 --> 00:22:05,650
extra stuff ah I get it ok yeah so

00:22:03,970 --> 00:22:09,820
basically we want people to be able to

00:22:05,650 --> 00:22:12,429
contribute usefully patches and maybe

00:22:09,820 --> 00:22:14,110
even become a maintainer we won't i i

00:22:12,429 --> 00:22:15,910
explicitly don't want them to contribute

00:22:14,110 --> 00:22:17,650
patches I want them to do uploads

00:22:15,910 --> 00:22:24,549
without having to think about quilt or

00:22:17,650 --> 00:22:25,809
patches or everything from the 1970s you

00:22:24,549 --> 00:22:29,650
want them to be able to contribute

00:22:25,809 --> 00:22:33,130
changes to the packaging using get to

00:22:29,650 --> 00:22:35,830
end you uploads if they're a Debian main

00:22:33,130 --> 00:22:38,530
of course I'm not talking about whopping

00:22:35,830 --> 00:22:42,220
yeah okay he requirements or whatever

00:22:38,530 --> 00:22:44,440
yeah I'm talking about tooling okay that

00:22:42,220 --> 00:22:49,320
was a sort of way of does God saying I

00:22:44,440 --> 00:22:51,610
hate quilt in more words um okay

00:22:49,320 --> 00:22:53,510
do we have anyone cute yeah we've got

00:22:51,610 --> 00:22:56,809
two great

00:22:53,510 --> 00:23:02,990
I'd like to have the Debian change mic

00:22:56,809 --> 00:23:05,419
is okay I'd like to have my Debian

00:23:02,990 --> 00:23:09,230
change log out again auto-generated from

00:23:05,419 --> 00:23:11,360
my git log for example but and the

00:23:09,230 --> 00:23:18,110
change log entries never calls merge

00:23:11,360 --> 00:23:20,780
conflicts can I suggest that I'd say I

00:23:18,110 --> 00:23:22,160
did I was trans as an engineer and we

00:23:20,780 --> 00:23:25,730
have this concept called a solution

00:23:22,160 --> 00:23:28,850
neutral problem statement right your

00:23:25,730 --> 00:23:32,090
problem here is not really you know I

00:23:28,850 --> 00:23:34,100
want the change log auto-generated your

00:23:32,090 --> 00:23:35,870
problem really is you want to not have

00:23:34,100 --> 00:23:41,059
to manually generate any change log

00:23:35,870 --> 00:23:43,730
stuff and that could be achieved by for

00:23:41,059 --> 00:23:45,169
example automatically generating the

00:23:43,730 --> 00:23:47,179
change log but it could also be achieved

00:23:45,169 --> 00:23:50,570
by abolishing it ah

00:23:47,179 --> 00:23:54,429
and I I don't want to like right so I

00:23:50,570 --> 00:23:57,410
want to do is to reframe a requirement

00:23:54,429 --> 00:23:59,540
so that if somebody thinks we must

00:23:57,410 --> 00:24:01,520
continue to have a change log that is a

00:23:59,540 --> 00:24:04,040
separate from the git log but that is a

00:24:01,520 --> 00:24:05,960
separate requirement so can I suggest

00:24:04,040 --> 00:24:09,830
that unfortunately found that when

00:24:05,960 --> 00:24:11,270
people try and state solution neutral

00:24:09,830 --> 00:24:13,960
problem statements for requirements I've

00:24:11,270 --> 00:24:18,799
stated and they get it wrong I find it

00:24:13,960 --> 00:24:20,270
very dismissive okay so I would

00:24:18,799 --> 00:24:22,549
recommend that if you want to add a

00:24:20,270 --> 00:24:23,540
second requirement of your understanding

00:24:22,549 --> 00:24:25,730
of the solution neutral problem

00:24:23,540 --> 00:24:30,500
statement and then in the process where

00:24:25,730 --> 00:24:33,290
we go and and yeah okay I didn't mean to

00:24:30,500 --> 00:24:34,850
dismiss it obviously yeah no I didn't

00:24:33,290 --> 00:24:36,830
think you did do you actually agree with

00:24:34,850 --> 00:24:40,660
me on that point I didn't really

00:24:36,830 --> 00:24:43,940
understand what you proposing observing

00:24:40,660 --> 00:24:46,150
your complaint I think is that you

00:24:43,940 --> 00:24:48,860
having to do manual work on change locks

00:24:46,150 --> 00:24:51,860
and you I present presently I only

00:24:48,860 --> 00:24:53,390
create git commit messages and my change

00:24:51,860 --> 00:24:56,660
those that are generated automatically

00:24:53,390 --> 00:24:59,210
and I very much he won't keep that and I

00:24:56,660 --> 00:25:00,890
want to keep this yes right you will not

00:24:59,210 --> 00:25:03,830
have to start doing manual work on

00:25:00,890 --> 00:25:06,710
change logs yes in my experience doing

00:25:03,830 --> 00:25:11,380
change log entries manually lead

00:25:06,710 --> 00:25:18,550
to merge conflict or rebase may make the

00:25:11,380 --> 00:25:18,550
interactive rebase not complicated right

00:25:23,380 --> 00:25:29,810
if we're putting everything and get I'd

00:25:26,480 --> 00:25:31,910
like some easy discoverability so things

00:25:29,810 --> 00:25:34,460
live all over south and team directories

00:25:31,910 --> 00:25:37,250
and in the Debian project or whatever

00:25:34,460 --> 00:25:39,170
I'd like to be able to know given any

00:25:37,250 --> 00:25:41,390
source package name

00:25:39,170 --> 00:25:43,730
what git repo I need to check out to

00:25:41,390 --> 00:25:46,430
work on that so some sort of redirector

00:25:43,730 --> 00:25:48,560
or hierarchy that means that like I can

00:25:46,430 --> 00:25:51,470
check out all of FreeBSD ports or all of

00:25:48,560 --> 00:25:53,000
Gen 2 I know where to check out Debian

00:25:51,470 --> 00:25:56,000
stuff I know where to point someone

00:25:53,000 --> 00:25:57,410
who's not familiar with Debian if you

00:25:56,000 --> 00:26:00,890
want to play with the Debian packaging

00:25:57,410 --> 00:26:02,000
go to get Debian dog slash package name

00:26:00,890 --> 00:26:03,530
or something like that I think they'll

00:26:02,000 --> 00:26:06,590
be really useful if we're pushing things

00:26:03,530 --> 00:26:09,590
under to get I absolutely agree okay

00:26:06,590 --> 00:26:11,060
noodles talk to me in the bar um so I

00:26:09,590 --> 00:26:13,070
would actually like to add to that

00:26:11,060 --> 00:26:16,940
requirement I want to be able to do that

00:26:13,070 --> 00:26:18,860
for the version of the one of the things

00:26:16,940 --> 00:26:21,740
I want to do that for is the version of

00:26:18,860 --> 00:26:23,990
the package that is closest to what the

00:26:21,740 --> 00:26:26,960
maintainer is working on today like

00:26:23,990 --> 00:26:29,770
somethin that hasn't been uploaded to up

00:26:26,960 --> 00:26:33,890
unstable yet and that is in the format

00:26:29,770 --> 00:26:36,950
that the maintainer works with so that I

00:26:33,890 --> 00:26:38,840
can make things it's easy for the

00:26:36,950 --> 00:26:42,110
maintainer to apply my changes as

00:26:38,840 --> 00:26:43,820
possible right I think I think noodles

00:26:42,110 --> 00:26:48,110
is a requirement needs to be satisfied

00:26:43,820 --> 00:26:50,860
both for the Hat and for the version of

00:26:48,110 --> 00:26:53,150
the package that is in the archive

00:26:50,860 --> 00:26:54,830
agreed that's a separate yeah I think

00:26:53,150 --> 00:26:58,900
both of those are those are two separate

00:26:54,830 --> 00:27:01,580
requirements that are very similar um

00:26:58,900 --> 00:27:09,170
one of the things I really like we have

00:27:01,580 --> 00:27:11,380
a B to the cube okay okay I would like

00:27:09,170 --> 00:27:11,380
to

00:27:12,200 --> 00:27:18,860
contribute without knowing the war flow

00:27:15,230 --> 00:27:21,680
of the McAra maintainer I mean just

00:27:18,860 --> 00:27:23,840
pushed a change to a gate branch like a

00:27:21,680 --> 00:27:27,200
feature branch and white for their

00:27:23,840 --> 00:27:31,660
results having a CI associated with the

00:27:27,200 --> 00:27:34,760
repository great

00:27:31,660 --> 00:27:37,790
Samuel Rob I would like to be able to

00:27:34,760 --> 00:27:40,130
know if there are more than one branch

00:27:37,790 --> 00:27:41,840
format I would like to be able to

00:27:40,130 --> 00:27:46,840
programmatically know which one I'm

00:27:41,840 --> 00:27:49,670
dealing with well but it can be

00:27:46,840 --> 00:27:51,890
implemented or safe in the same

00:27:49,670 --> 00:27:55,520
repository you can read it the recipe

00:27:51,890 --> 00:27:57,950
that you use is going to be automated so

00:27:55,520 --> 00:28:01,940
you don't have to know every are you

00:27:57,950 --> 00:28:03,920
proposing a solution or a requirement no

00:28:01,940 --> 00:28:06,230
I am talking about I don't care the

00:28:03,920 --> 00:28:08,780
solution that do you use I just pushed

00:28:06,230 --> 00:28:11,090
my commit and wait sorry I think we're

00:28:08,780 --> 00:28:12,350
confused here Sam was not replying to

00:28:11,090 --> 00:28:14,420
your requirement okay

00:28:12,350 --> 00:28:16,220
he was making a separate requirement of

00:28:14,420 --> 00:28:17,540
it yeah totally unrelated to what you

00:28:16,220 --> 00:28:19,430
were right so there's no connection

00:28:17,540 --> 00:28:19,760
between your requirement which is a good

00:28:19,430 --> 00:28:21,620
one

00:28:19,760 --> 00:28:23,300
and Sam's which is another good one then

00:28:21,620 --> 00:28:27,590
we have someone else at the mic and we

00:28:23,300 --> 00:28:29,600
have 10 minutes well ideally I would

00:28:27,590 --> 00:28:33,470
actually want to contribute to Debian

00:28:29,600 --> 00:28:36,950
without even touching get or command

00:28:33,470 --> 00:28:41,030
line just from a web interface open a

00:28:36,950 --> 00:28:42,230
file click edit edit it proposed to the

00:28:41,030 --> 00:28:47,090
maintainer who has the kind of

00:28:42,230 --> 00:28:50,710
permissions to do that I okay yeah I

00:28:47,090 --> 00:28:54,980
have a requirement I would like

00:28:50,710 --> 00:28:58,430
translators to be able to do their work

00:28:54,980 --> 00:29:00,020
without having to interact certainly

00:28:58,430 --> 00:29:04,040
without having to interact with patches

00:29:00,020 --> 00:29:05,840
and ideally I I'm not sure that

00:29:04,040 --> 00:29:09,830
translators actually want to work and

00:29:05,840 --> 00:29:14,720
get my experience with them so far has

00:29:09,830 --> 00:29:16,460
been that they send you know patches I I

00:29:14,720 --> 00:29:19,160
think it's possible that translators

00:29:16,460 --> 00:29:21,260
would prefer to work with some kind of

00:29:19,160 --> 00:29:23,360
web service or some kind of dedicated

00:29:21,260 --> 00:29:24,760
application and I want that to be easy

00:29:23,360 --> 00:29:27,200
for them

00:29:24,760 --> 00:29:29,240
and I don't know what the translators

00:29:27,200 --> 00:29:31,070
want and probably if there's someone

00:29:29,240 --> 00:29:32,150
here in the room who does translation

00:29:31,070 --> 00:29:34,850
work maybe you could tell us what

00:29:32,150 --> 00:29:37,550
translate is what can can you cue me for

00:29:34,850 --> 00:29:39,950
Shawn at some point

00:29:37,550 --> 00:29:44,300
remember those two requirements that

00:29:39,950 --> 00:29:46,760
you're up okay so Sean um written

00:29:44,300 --> 00:29:49,940
couldn't be here today but had a couple

00:29:46,760 --> 00:29:53,540
of requirements um first of all I guess

00:29:49,940 --> 00:29:57,830
one of his requirements is that he wants

00:29:53,540 --> 00:30:00,230
um the when we the history of a

00:29:57,830 --> 00:30:02,780
discussion surrounding a change to be a

00:30:00,230 --> 00:30:04,310
permanent archival artifact for example

00:30:02,780 --> 00:30:06,050
bugs don't go away and if you have a

00:30:04,310 --> 00:30:10,610
discussion in five rounds of a patch and

00:30:06,050 --> 00:30:12,020
the BTS then we keep that forever and he

00:30:10,610 --> 00:30:13,790
believes that if we move to merge

00:30:12,020 --> 00:30:18,020
requests or something like that that

00:30:13,790 --> 00:30:20,330
that archival nature of that or commit

00:30:18,020 --> 00:30:23,420
comments or any sort of discussion of

00:30:20,330 --> 00:30:25,940
the history of a change in Debian should

00:30:23,420 --> 00:30:30,740
be archived I can't remember what his

00:30:25,940 --> 00:30:34,280
second one wants do you know is fine I

00:30:30,740 --> 00:30:36,530
mean it may come back to me okay if not

00:30:34,280 --> 00:30:38,210
we will make sure that it gets you know

00:30:36,530 --> 00:30:40,420
added on as we've discussed this on a

00:30:38,210 --> 00:30:40,420
list

00:30:50,360 --> 00:30:57,830
hello we have thali for the mic so I ca

00:30:54,559 --> 00:30:59,840
get history as you're telling a story

00:30:57,830 --> 00:31:03,140
you're telling a story about the

00:30:59,840 --> 00:31:05,149
evolution of your program so I want to

00:31:03,140 --> 00:31:08,450
both be able to tell that story but I

00:31:05,149 --> 00:31:11,990
also want to be able to extract some set

00:31:08,450 --> 00:31:15,500
of patches which or subset of patches

00:31:11,990 --> 00:31:19,519
which can be merged as a single thing

00:31:15,500 --> 00:31:21,200
for upstream to consume back which I

00:31:19,519 --> 00:31:24,950
think might be complete a conflicting

00:31:21,200 --> 00:31:26,899
requirement in itself yep I want to be

00:31:24,950 --> 00:31:36,830
able to rebase and modify history when

00:31:26,899 --> 00:31:40,159
it tells a better story yep so on the

00:31:36,830 --> 00:31:42,200
merge request one I think it's possible

00:31:40,159 --> 00:31:44,330
that we've kind of merged Shaun's two

00:31:42,200 --> 00:31:46,580
requirements so one is that the merge

00:31:44,330 --> 00:31:51,860
request discussions should be like

00:31:46,580 --> 00:31:54,799
public and archived but also they need

00:31:51,860 --> 00:31:56,240
to be discoverable ah right you need to

00:31:54,799 --> 00:31:57,590
be able to find the merge of requests

00:31:56,240 --> 00:31:59,809
you need to be able to find the

00:31:57,590 --> 00:32:02,630
discussion supporting a change by

00:31:59,809 --> 00:32:07,519
starting looking at the code and being

00:32:02,630 --> 00:32:12,010
able to like find find you know why that

00:32:07,519 --> 00:32:16,299
code is like it is right so for example

00:32:12,010 --> 00:32:18,620
having basically being able to discover

00:32:16,299 --> 00:32:20,710
where all the discussions of a

00:32:18,620 --> 00:32:23,929
particular set of code is and have it be

00:32:20,710 --> 00:32:26,179
long-lived like not have it be on a

00:32:23,929 --> 00:32:27,950
private jet server that went away three

00:32:26,179 --> 00:32:29,750
years ago right that's that's the

00:32:27,950 --> 00:32:32,450
archival element but the discovery

00:32:29,750 --> 00:32:34,460
requirement is that you can start with a

00:32:32,450 --> 00:32:37,190
commit presumably you've got like a get

00:32:34,460 --> 00:32:38,480
history so I imagine the requirement is

00:32:37,190 --> 00:32:41,710
that you have to study able to start

00:32:38,480 --> 00:32:45,200
with a commit and from that be able to I

00:32:41,710 --> 00:32:52,010
locate the discussion so that you can

00:32:45,200 --> 00:32:57,010
read it annelids are related five

00:32:52,010 --> 00:33:00,610
minutes I think and there's a related

00:32:57,010 --> 00:33:00,610
requirement that

00:33:01,460 --> 00:33:06,899
everybody must be able to easily

00:33:03,990 --> 00:33:08,070
contribute or at least everybody

00:33:06,899 --> 00:33:13,500
appropriate must be able to easily

00:33:08,070 --> 00:33:15,299
contribute to those discussions can I

00:33:13,500 --> 00:33:18,990
get people out there a lot of people

00:33:15,299 --> 00:33:21,990
there's got to in the queue sorry this

00:33:18,990 --> 00:33:24,990
is Sean so Sean replied from IRC saying

00:33:21,990 --> 00:33:27,059
that the second requirement was that

00:33:24,990 --> 00:33:28,590
discussions are sometimes hard to find

00:33:27,059 --> 00:33:31,019
within salsa because there are a lot of

00:33:28,590 --> 00:33:33,740
entry points and that it could get a lot

00:33:31,019 --> 00:33:37,379
worse if we switched away from get love

00:33:33,740 --> 00:33:42,799
due to factors outside of our control so

00:33:37,379 --> 00:33:47,070
discussions should be discoverable okay

00:33:42,799 --> 00:33:48,990
thank you so this is a problem or a

00:33:47,070 --> 00:33:51,679
problem just a description more than a

00:33:48,990 --> 00:33:53,820
requirement but I would like to know

00:33:51,679 --> 00:33:57,029
whenever I'm cherry picking something

00:33:53,820 --> 00:34:00,539
from upstream if rebase is easier to be

00:33:57,029 --> 00:34:03,720
done with last changes than doing two

00:34:00,539 --> 00:34:07,409
back ports one after another and the

00:34:03,720 --> 00:34:09,210
second one is actually done before the

00:34:07,409 --> 00:34:12,599
first one you know so you have like two

00:34:09,210 --> 00:34:14,909
cute patches for example one is related

00:34:12,599 --> 00:34:19,230
to a change that is like recent in up

00:34:14,909 --> 00:34:21,240
string and the other one is relative to

00:34:19,230 --> 00:34:23,399
something older and then you have to

00:34:21,240 --> 00:34:26,040
back ports changing the code which with

00:34:23,399 --> 00:34:29,369
something that could be just to cherry

00:34:26,040 --> 00:34:30,780
Peaks and not to back ports I'm not sure

00:34:29,369 --> 00:34:34,050
I understand I don't you mean by back

00:34:30,780 --> 00:34:36,389
board so basically you're cherry-picking

00:34:34,050 --> 00:34:38,280
something from upstream right and then

00:34:36,389 --> 00:34:40,079
you have something that depends on that

00:34:38,280 --> 00:34:40,649
code like a positional change or

00:34:40,079 --> 00:34:42,929
something

00:34:40,649 --> 00:34:45,839
so instead of having two positional

00:34:42,929 --> 00:34:48,030
changes by back porting to things you

00:34:45,839 --> 00:34:49,470
just cherry-pick the first change and

00:34:48,030 --> 00:34:51,839
then you cherry-pick the second on top

00:34:49,470 --> 00:34:54,149
so it's stead of like a merge now you

00:34:51,839 --> 00:34:56,730
have two cherry picks much easier to

00:34:54,149 --> 00:34:59,250
maintain and this is something to be

00:34:56,730 --> 00:35:00,630
done by the maintainer nowadays if you

00:34:59,250 --> 00:35:02,730
are cherry picking something from

00:35:00,630 --> 00:35:04,770
upstream and you know the commit history

00:35:02,730 --> 00:35:07,589
you know that something you're picking

00:35:04,770 --> 00:35:09,540
from web string is older or newer than

00:35:07,589 --> 00:35:12,630
the one that you are have already have

00:35:09,540 --> 00:35:16,700
in cute and that will check will tell

00:35:12,630 --> 00:35:16,700
you if every base is easier or not

00:35:19,369 --> 00:35:27,360
so we haven't discussed push to upload

00:35:23,220 --> 00:35:28,680
very much no gear and we're running

00:35:27,360 --> 00:35:31,590
short on time but I'd like to kind of

00:35:28,680 --> 00:35:33,030
get if there are any require you people

00:35:31,590 --> 00:35:34,950
want that are you is that going to do

00:35:33,030 --> 00:35:37,560
foot i firm untain aqui mu for example

00:35:34,950 --> 00:35:39,570
and you beg boarded somewhere I'm sorry

00:35:37,560 --> 00:35:41,190
I think we have spell we okay with

00:35:39,570 --> 00:35:44,730
Daniels thank you

00:35:41,190 --> 00:35:47,640
I would like to if you could come up

00:35:44,730 --> 00:35:49,770
afterwards on that but I would like to

00:35:47,640 --> 00:35:51,840
understand cuz you get pushed up load

00:35:49,770 --> 00:35:53,190
with something people talk but a lot but

00:35:51,840 --> 00:35:53,730
no one's what I talked about here right

00:35:53,190 --> 00:35:57,660
all right

00:35:53,730 --> 00:35:59,430
I'm okay so I have a requirement we

00:35:57,660 --> 00:36:05,640
should not have source packages source

00:35:59,430 --> 00:36:08,520
packages go away we won't get we were

00:36:05,640 --> 00:36:11,460
you know like we won't get there for

00:36:08,520 --> 00:36:13,860
like at least another decade but you

00:36:11,460 --> 00:36:17,010
know we should start transition we

00:36:13,860 --> 00:36:20,100
should start that transition I came here

00:36:17,010 --> 00:36:25,170
partly for this reason the source

00:36:20,100 --> 00:36:27,359
packages speak closer to the mic what

00:36:25,170 --> 00:36:28,920
about the branch structure is it should

00:36:27,359 --> 00:36:32,600
be somehow related to the source

00:36:28,920 --> 00:36:34,320
packages to make us unconvinced and I

00:36:32,600 --> 00:36:37,290
mentioned the changelogs

00:36:34,320 --> 00:36:38,930
it has the same problem I think that the

00:36:37,290 --> 00:36:41,670
changelog is an artificial

00:36:38,930 --> 00:36:43,500
simplification of the history sauce

00:36:41,670 --> 00:36:47,100
package is an artifical artificial

00:36:43,500 --> 00:36:50,460
simplification of the code base both are

00:36:47,100 --> 00:36:52,800
not necessary i think and if we can get

00:36:50,460 --> 00:36:55,050
rid of them or can find better

00:36:52,800 --> 00:36:57,840
alternatives that maybe we got last

00:36:55,050 --> 00:37:05,160
requirements for the bad structure as

00:36:57,840 --> 00:37:07,980
well so the requirement that i have been

00:37:05,160 --> 00:37:10,530
working to satisfy which own we went out

00:37:07,980 --> 00:37:13,170
of sprint is that you should be able to

00:37:10,530 --> 00:37:18,050
cause your package to be uploaded to

00:37:13,170 --> 00:37:18,050
debian by pushing a get tagged somewhere

00:37:21,590 --> 00:37:27,590
okay so I think we're basically done um

00:37:24,510 --> 00:37:30,240
if people have any specific ideas on

00:37:27,590 --> 00:37:34,590
where we should continue this or how

00:37:30,240 --> 00:37:37,350
please write to leader at Debian org um

00:37:34,590 --> 00:37:38,790
I mean I think that we'll see some

00:37:37,350 --> 00:37:41,250
Debbie and develop discussions in the

00:37:38,790 --> 00:37:43,380
future but if you have specifics on how

00:37:41,250 --> 00:37:46,380
to approach moving forward I would love

00:37:43,380 --> 00:37:48,300
to hear them right also um I would like

00:37:46,380 --> 00:37:52,760
to put in a plug I'm not gonna like plug

00:37:48,300 --> 00:37:54,690
my tools you know anymore but but but

00:37:52,760 --> 00:37:58,850
come to me in the bar if you're

00:37:54,690 --> 00:37:58,850
interested and I'm happy to help

00:37:59,340 --> 00:38:09,340

YouTube URL: https://www.youtube.com/watch?v=ruDvpXiU4rU


