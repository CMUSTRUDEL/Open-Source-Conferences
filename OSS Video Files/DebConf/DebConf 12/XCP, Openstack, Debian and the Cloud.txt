Title: XCP, Openstack, Debian and the Cloud
Publication date: 2017-11-28
Playlist: DebConf 12
Description: 
	by Thomas Goirand

At: DebConf12
https://debconf12.debconf.org/
Room: Aula Magna
Scheduled start: 2012-07-12 11:00:00
Captions: 
	00:00:00,030 --> 00:00:09,630
so okay so we're starting now with the

00:00:07,109 --> 00:00:12,780
title you can read and I can't xep

00:00:09,630 --> 00:00:21,420
OpenStack DeLeon and the cloud this will

00:00:12,780 --> 00:00:24,900
be the River Ride Thomas Boleyn hola

00:00:21,420 --> 00:00:27,000
thanks for attending my my talk I hope

00:00:24,900 --> 00:00:31,529
she will be able to cope with my silly

00:00:27,000 --> 00:00:38,120
French accent so what am I going to talk

00:00:31,529 --> 00:00:41,940
today so it's mainly on the topic of

00:00:38,120 --> 00:00:45,660
what's new in wizzy I want to let you

00:00:41,940 --> 00:00:49,140
know about my past work during this year

00:00:45,660 --> 00:00:55,410
to package cloud computing stack Xin Jie

00:00:49,140 --> 00:00:58,170
bian so I let you know what we have done

00:00:55,410 --> 00:01:01,070
together so together with Citrix and

00:00:58,170 --> 00:01:04,619
with other people working on OpenStack

00:01:01,070 --> 00:01:06,659
briefly I'm 36 years old and this U of

00:01:04,619 --> 00:01:10,260
GPR host which is a company doing

00:01:06,659 --> 00:01:12,990
several hosting we have an internal

00:01:10,260 --> 00:01:17,960
software to do hosting I'm French I live

00:01:12,990 --> 00:01:20,400
in Shanghai I normally don't do

00:01:17,960 --> 00:01:23,490
self-promotion here but since I'm not in

00:01:20,400 --> 00:01:27,810
the permanent sponsor list I wanted to

00:01:23,490 --> 00:01:34,979
highlight that GPL host is hosting seven

00:01:27,810 --> 00:01:40,880
relays for the video of the comp it's

00:01:34,979 --> 00:01:40,880
like all of them but Sydney and Malaysia

00:01:42,860 --> 00:01:45,860
so

00:01:46,280 --> 00:01:53,900
I hear many times that cloud computing

00:01:50,330 --> 00:01:55,369
is a bird's world that we shouldn't talk

00:01:53,900 --> 00:01:57,680
about it because like it's just

00:01:55,369 --> 00:01:59,450
marketing and it's boring and in fact

00:01:57,680 --> 00:02:02,750
it's not that's one of the things you

00:01:59,450 --> 00:02:05,300
have to really put in your mind is that

00:02:02,750 --> 00:02:08,479
it's not just marketing that's really

00:02:05,300 --> 00:02:10,399
software behind that and not just a few

00:02:08,479 --> 00:02:14,420
like there's many solutions available

00:02:10,399 --> 00:02:19,760
and all of them are quite large and

00:02:14,420 --> 00:02:22,750
represented lots of code there's many

00:02:19,760 --> 00:02:26,330
types of cloud computing there's

00:02:22,750 --> 00:02:30,800
infrastructure as a service platform as

00:02:26,330 --> 00:02:32,330
a service and software as a service here

00:02:30,800 --> 00:02:34,550
in this talk I'm going to talk only

00:02:32,330 --> 00:02:37,280
about infrastructure as a service

00:02:34,550 --> 00:02:42,380
meaning providing physical machines to

00:02:37,280 --> 00:02:44,780
the final users this means for having a

00:02:42,380 --> 00:02:47,900
cloud computing service it needs to have

00:02:44,780 --> 00:02:52,280
all these four points so it has to be on

00:02:47,900 --> 00:02:55,489
demand it has to be self-served scalable

00:02:52,280 --> 00:02:58,130
and measurable I mean like the hosting

00:02:55,489 --> 00:03:00,739
service service provider must know how

00:02:58,130 --> 00:03:08,290
much you've used and together this is

00:03:00,739 --> 00:03:08,290
also thanks to Dave who gave me that so

00:03:09,170 --> 00:03:13,820
[Music]

00:03:10,360 --> 00:03:17,450
why is it important to have cloud

00:03:13,820 --> 00:03:20,239
computing service software in Gibeon so

00:03:17,450 --> 00:03:23,590
we've been we've seen a trend like

00:03:20,239 --> 00:03:23,590
everybody is moving to

00:03:23,830 --> 00:03:29,920
cloud computing as a service for

00:03:26,960 --> 00:03:35,330
software like people are moving to

00:03:29,920 --> 00:03:40,070
Google dog to WordPress they use them

00:03:35,330 --> 00:03:45,680
mail on big platforms and in DB on we've

00:03:40,070 --> 00:03:47,830
made statements Zach made an

00:03:45,680 --> 00:03:51,140
announcement together with Citrix and

00:03:47,830 --> 00:03:55,760
the OpenStack community that Debian

00:03:51,140 --> 00:03:58,760
cares lots that we have cloud computing

00:03:55,760 --> 00:04:00,770
software available in Libyan because we

00:03:58,760 --> 00:04:03,110
think it's a safeguard for our freedom

00:04:00,770 --> 00:04:13,190
we want to be able to use infrastructure

00:04:03,110 --> 00:04:15,950
as a service directly in Debian so when

00:04:13,190 --> 00:04:18,680
we use cloud computing services we need

00:04:15,950 --> 00:04:21,709
a hypervisor hypervisor is the thing

00:04:18,680 --> 00:04:24,890
that runs your virtual machine it's a

00:04:21,709 --> 00:04:26,480
bit like a PC emulators like you have

00:04:24,890 --> 00:04:30,040
like the illusion that you have a full

00:04:26,480 --> 00:04:37,000
computer when in fact you only have a

00:04:30,040 --> 00:04:42,290
virtualized server ok so cloud computing

00:04:37,000 --> 00:04:44,930
stacks do not implement hypervisor they

00:04:42,290 --> 00:04:50,210
all use hypervisors so there are there

00:04:44,930 --> 00:04:52,340
are customers of it there's a lot of

00:04:50,210 --> 00:04:54,560
hypervisor is clearly available in DB on

00:04:52,340 --> 00:04:59,780
so 7 k vm virtualbox

00:04:54,560 --> 00:05:02,560
qmu vmware and you can access these

00:04:59,780 --> 00:05:06,290
three through packages in debian so

00:05:02,560 --> 00:05:09,740
amazon ec2 Daz UK tools that you can use

00:05:06,290 --> 00:05:11,990
to access easy to but of course you

00:05:09,740 --> 00:05:17,960
cannot install easy to on your own

00:05:11,990 --> 00:05:22,610
hardware graffities also containers with

00:05:17,960 --> 00:05:25,520
Alexi that is available in Indian it's

00:05:22,610 --> 00:05:28,760
it's great to have Alexi because now

00:05:25,520 --> 00:05:30,890
it's it's in mainline kernel so we have

00:05:28,760 --> 00:05:35,590
very good hope that we'll be able to

00:05:30,890 --> 00:05:38,470
provide cloud computing on top of Alexi

00:05:35,590 --> 00:05:42,300
so to do computing as I said we need a

00:05:38,470 --> 00:05:46,480
hypervisor so I took these slides from

00:05:42,300 --> 00:05:49,450
Jeremy at Citrix so I will shoot them

00:05:46,480 --> 00:05:54,570
first a bit fast so you see there's many

00:05:49,450 --> 00:05:59,590
types of hypervisors and different model

00:05:54,570 --> 00:06:02,560
basically with ESXi you have machine

00:05:59,590 --> 00:06:05,620
here that is kind of op o poq it's like

00:06:02,560 --> 00:06:09,610
you don't have access to it you just

00:06:05,620 --> 00:06:11,320
have a black box so as a system

00:06:09,610 --> 00:06:13,150
administrator I don't really like this

00:06:11,320 --> 00:06:13,480
model because if there's any problem

00:06:13,150 --> 00:06:18,910
there

00:06:13,480 --> 00:06:23,290
I won't even know with KVM you start

00:06:18,910 --> 00:06:27,910
build machines as processes of the host

00:06:23,290 --> 00:06:31,300
operating system and then is different

00:06:27,910 --> 00:06:35,560
because you have the hypervisor running

00:06:31,300 --> 00:06:38,800
here and the dom0 is at the same level

00:06:35,560 --> 00:06:40,600
as the Dom use like the Dom zero

00:06:38,800 --> 00:06:43,270
provides the management and it's

00:06:40,600 --> 00:06:47,230
considered by the hypervisor just as a

00:06:43,270 --> 00:06:51,240
visual machine with more privileges so

00:06:47,230 --> 00:06:52,990
on the paper it's better but KVM is

00:06:51,240 --> 00:06:54,760
easier to manage

00:06:52,990 --> 00:06:59,770
inside the kernel because physical

00:06:54,760 --> 00:07:03,510
machines are just a process and on the

00:06:59,770 --> 00:07:06,700
contrary side we used to have open VG

00:07:03,510 --> 00:07:09,520
and V server available in squeezed and

00:07:06,700 --> 00:07:11,590
that is gone away the reason is that

00:07:09,520 --> 00:07:13,780
nobody stood up to say I'm going to

00:07:11,590 --> 00:07:17,200
maintain that so currently we have only

00:07:13,780 --> 00:07:20,230
alexei and we can use it in the cloud

00:07:17,200 --> 00:07:22,840
computing environment using OpenStack

00:07:20,230 --> 00:07:27,640
which is I believe the only stack that

00:07:22,840 --> 00:07:29,590
can man I manage alexei so brief history

00:07:27,640 --> 00:07:34,240
of Zen that as well I took it from

00:07:29,590 --> 00:07:37,570
slides from Citrix so basically we had

00:07:34,240 --> 00:07:41,230
the giant project started there around

00:07:37,570 --> 00:07:43,840
here we had the first usable Xen

00:07:41,230 --> 00:07:46,690
hypervisor slack with version 2 it

00:07:43,840 --> 00:07:47,770
started to be really good then Amazon

00:07:46,690 --> 00:07:50,319
started to

00:07:47,770 --> 00:07:54,580
use it and provide cloud computing

00:07:50,319 --> 00:08:01,000
service 10 Rackspace then Citrix started

00:07:54,580 --> 00:08:03,370
to work on XP which was ok so then after

00:08:01,000 --> 00:08:06,430
there was then server that was sold for

00:08:03,370 --> 00:08:10,949
about 500 bucks a year that was a cloud

00:08:06,430 --> 00:08:13,810
computing stack and I'd say that around

00:08:10,949 --> 00:08:17,099
2010 or 2011 we started to see

00:08:13,810 --> 00:08:21,490
open-source stacks for cloud computing

00:08:17,099 --> 00:08:24,370
so basically for us lovers of free free

00:08:21,490 --> 00:08:26,550
software nothing between before 2010

00:08:24,370 --> 00:08:32,380
available and now it starts to be

00:08:26,550 --> 00:08:37,060
available widely so in Citrix they first

00:08:32,380 --> 00:08:41,110
started to sell XenServer as a

00:08:37,060 --> 00:08:43,390
proprietary software then they wanted to

00:08:41,110 --> 00:08:45,670
open source it so they took this ISO

00:08:43,390 --> 00:08:48,370
image you see which is sent to us based

00:08:45,670 --> 00:08:55,300
and provided it as a centralized

00:08:48,370 --> 00:08:57,760
appliance as free software but still not

00:08:55,300 --> 00:08:59,380
packaged means that you take the also

00:08:57,760 --> 00:09:01,089
image you install it on your server and

00:08:59,380 --> 00:09:03,730
that's about it

00:09:01,089 --> 00:09:05,350
there's no standalone there was no

00:09:03,730 --> 00:09:06,760
standalone apps in packages that you

00:09:05,350 --> 00:09:08,860
could use you had the sauce and you

00:09:06,760 --> 00:09:10,870
could do it yourself but that's not the

00:09:08,860 --> 00:09:17,440
way it was released and shipped and

00:09:10,870 --> 00:09:20,459
since about a year we have Citrix that

00:09:17,440 --> 00:09:25,810
worked on a packaged solution for HCP

00:09:20,459 --> 00:09:28,870
that was called Project Kronos and so

00:09:25,810 --> 00:09:31,420
all of these three implements the API

00:09:28,870 --> 00:09:35,709
which is a RESTful API that you can use

00:09:31,420 --> 00:09:43,000
to create manage and start/stop their

00:09:35,709 --> 00:09:48,779
machines so that's what I've been

00:09:43,000 --> 00:09:52,270
working on with the guys from Citrix was

00:09:48,779 --> 00:09:55,899
packaging that and making making it

00:09:52,270 --> 00:09:57,880
available in GB on so this this started

00:09:55,899 --> 00:09:59,320
about a year ago so there was

00:09:57,880 --> 00:10:03,820
discussions in the open

00:09:59,320 --> 00:10:04,720
stack mailing list saying that okay we

00:10:03,820 --> 00:10:09,730
have open style

00:10:04,720 --> 00:10:14,770
this is Ubuntu project so DBM based and

00:10:09,730 --> 00:10:17,800
we have xcp which is sent to s appliance

00:10:14,770 --> 00:10:21,850
so it didn't really make sense for miss

00:10:17,800 --> 00:10:25,270
traders who have both Santos and Ubuntu

00:10:21,850 --> 00:10:28,990
or Debian together on the same cloud

00:10:25,270 --> 00:10:30,670
environment as well it made sense on the

00:10:28,990 --> 00:10:33,610
maintaining site because like if you

00:10:30,670 --> 00:10:39,940
have packages it it might be easier to

00:10:33,610 --> 00:10:43,240
maintain the software so Mike and John

00:10:39,940 --> 00:10:47,890
started that project like last in April

00:10:43,240 --> 00:10:49,900
11 and we've been working on that until

00:10:47,890 --> 00:10:54,100
December what when it was first uploaded

00:10:49,900 --> 00:10:56,980
in in Debian so Mike and John has been

00:10:54,100 --> 00:11:01,600
extremely helpful and not only that

00:10:56,980 --> 00:11:03,190
they've been also very friendly so I'm

00:11:01,600 --> 00:11:05,830
happy to announce that we have that for

00:11:03,190 --> 00:11:09,160
wizzy and it's basically you do apt-get

00:11:05,830 --> 00:11:13,570
install XE px API and you have several

00:11:09,160 --> 00:11:16,870
which is ready to use with X if e still

00:11:13,570 --> 00:11:19,750
some RC bugs no there's no RC bugs

00:11:16,870 --> 00:11:22,570
anymore there's like two normal verbs

00:11:19,750 --> 00:11:26,050
and we'd be happy to have more testing

00:11:22,570 --> 00:11:29,290
and more reports and of course more

00:11:26,050 --> 00:11:33,490
fixes so contributions are of course of

00:11:29,290 --> 00:11:36,850
course welcome a few differences we have

00:11:33,490 --> 00:11:43,990
between the Santo scg and the packages

00:11:36,850 --> 00:11:45,880
in DB I'm sorry so because it's sent to

00:11:43,990 --> 00:11:48,460
s appliance they have to maintain all

00:11:45,880 --> 00:11:50,860
the packages themselves so the

00:11:48,460 --> 00:11:51,970
hypervisor version that you have in

00:11:50,860 --> 00:11:57,700
current xep

00:11:51,970 --> 00:12:01,690
is a bit lagging behind the tongue zero

00:11:57,700 --> 00:12:04,420
that we have in xcp in debian or Ubuntu

00:12:01,690 --> 00:12:08,230
is what is available as the operating

00:12:04,420 --> 00:12:13,950
system so only 32 bits for the Xena

00:12:08,230 --> 00:12:17,830
players the is very fortunate that both

00:12:13,950 --> 00:12:24,970
ubuntu the last given to LCS and Debian

00:12:17,830 --> 00:12:31,810
uses the same kernel version ok next

00:12:24,970 --> 00:12:34,890
slide so what is the difference between

00:12:31,810 --> 00:12:37,089
using jirzyn and xep

00:12:34,890 --> 00:12:38,830
the main difference is that instead of

00:12:37,089 --> 00:12:42,160
having one hardware that you maintain

00:12:38,830 --> 00:12:45,970
with exam or excel on the command line

00:12:42,160 --> 00:12:50,110
is that you have X E and it manages a

00:12:45,970 --> 00:12:53,760
pool of servers many hardware so you

00:12:50,110 --> 00:12:58,060
have a master node that you control with

00:12:53,760 --> 00:13:02,830
the command line or with the rest api so

00:12:58,060 --> 00:13:05,200
the rest is API the X e tool

00:13:02,830 --> 00:13:07,240
sorry the X e tool on the command line

00:13:05,200 --> 00:13:09,700
is just a client for the REST API that

00:13:07,240 --> 00:13:14,290
you could use by yourself using JSON

00:13:09,700 --> 00:13:16,480
like that so you have a pool of hardware

00:13:14,290 --> 00:13:21,220
not only for computers but as well for

00:13:16,480 --> 00:13:27,070
storage so every machine that runs the

00:13:21,220 --> 00:13:29,860
API can be used for storage as well this

00:13:27,070 --> 00:13:34,930
millivolt storage type so next is like

00:13:29,860 --> 00:13:37,630
x3 storage type you can as well use

00:13:34,930 --> 00:13:41,470
directly LVM getting partitions to your

00:13:37,630 --> 00:13:45,400
vital machines or I I scuzzy and FS

00:13:41,470 --> 00:13:46,980
Samba whatever so and this yeah this

00:13:45,400 --> 00:13:50,770
[Music]

00:13:46,980 --> 00:13:52,870
sambar stuff to store your iso images

00:13:50,770 --> 00:13:57,510
and provide them to your claims when

00:13:52,870 --> 00:14:00,880
they want to install virtual machines

00:13:57,510 --> 00:14:03,220
there's a very cool feature that Citrix

00:14:00,880 --> 00:14:06,460
is currently working on which is storage

00:14:03,220 --> 00:14:08,950
motion meaning that clearly you can move

00:14:06,460 --> 00:14:10,900
one machine from one server performance

00:14:08,950 --> 00:14:12,249
is equal server to another it's called

00:14:10,900 --> 00:14:15,439
live migration

00:14:12,249 --> 00:14:17,660
but the storage will stay on the

00:14:15,439 --> 00:14:20,749
hardware where your current virtual

00:14:17,660 --> 00:14:24,829
machine is running we storage motion as

00:14:20,749 --> 00:14:29,240
its name as you might have guessed by

00:14:24,829 --> 00:14:31,879
this name means that you can move the

00:14:29,240 --> 00:14:34,879
physical the virtual machines compute

00:14:31,879 --> 00:14:38,749
workload but as well as storage so it

00:14:34,879 --> 00:14:42,110
will move live when the virtual machine

00:14:38,749 --> 00:14:46,879
is running I really hope that we'll have

00:14:42,110 --> 00:14:49,339
that for witty plus one so a bit of

00:14:46,879 --> 00:14:52,160
demonstration here so how does it works

00:14:49,339 --> 00:14:55,759
in in real life so that's the script

00:14:52,160 --> 00:14:58,689
that I'm going to explain in details so

00:14:55,759 --> 00:15:04,730
what you have in blue there the other

00:14:58,689 --> 00:15:08,149
things that you can replace in these

00:15:04,730 --> 00:15:09,850
typical scripts the red things are the

00:15:08,149 --> 00:15:14,300
XE commands

00:15:09,850 --> 00:15:21,370
so basically every commands sends that

00:15:14,300 --> 00:15:21,370
you send we return you you UID so that's

00:15:25,400 --> 00:15:30,130
if I can find my mouse yeah it's there

00:15:31,390 --> 00:15:36,920
so what's cool

00:15:33,830 --> 00:15:40,700
I mean Chinese so what's cool is that

00:15:36,920 --> 00:15:43,190
you have a bachelor to complete so you

00:15:40,700 --> 00:15:48,980
can see all the comments for XE quite a

00:15:43,190 --> 00:15:49,370
lot right for more than 400 so you can

00:15:48,980 --> 00:15:54,560
do

00:15:49,370 --> 00:16:01,510
xev em lists and currently you see that

00:15:54,560 --> 00:16:04,970
there is only my dumb zero machine and

00:16:01,510 --> 00:16:08,240
here you have the same script as I

00:16:04,970 --> 00:16:10,910
showed on on the slides so find the

00:16:08,240 --> 00:16:13,310
template create the machine I did a

00:16:10,910 --> 00:16:15,710
visual network interface set few

00:16:13,310 --> 00:16:22,670
parameters and then finally start so the

00:16:15,710 --> 00:16:25,640
start is commented so if I do X evm list

00:16:22,670 --> 00:16:35,990
so you see there's no machines and I do

00:16:25,640 --> 00:16:37,490
new VM and very quickly x vm list very

00:16:35,990 --> 00:16:41,330
quickly you see that there is a new

00:16:37,490 --> 00:16:46,130
machine called managua 2012 that i can

00:16:41,330 --> 00:16:49,910
start if i want x ii p.m. so st tab and

00:16:46,130 --> 00:16:54,410
shape completes the m equal and then

00:16:49,910 --> 00:16:57,320
there i can either give the UUID that

00:16:54,410 --> 00:17:04,810
you see here or the name so i'm going to

00:16:57,320 --> 00:17:04,810
give the name that's cooler managua 2012

00:17:04,959 --> 00:17:14,350
so starting is as fast as you do with

00:17:08,030 --> 00:17:14,350
normal then no that's

00:17:18,260 --> 00:17:28,820
managua 2012 and there you go and you

00:17:25,350 --> 00:17:31,470
see you nice netboot yoo-hoo

00:17:28,820 --> 00:17:34,790
so I won't go of course in the process

00:17:31,470 --> 00:17:38,040
of setting it up that would be boring

00:17:34,790 --> 00:17:41,900
just do an X EVM list to show you this

00:17:38,040 --> 00:17:44,780
training if I want I can shut it down I

00:17:41,900 --> 00:17:50,300
should comment so that you can you have

00:17:44,780 --> 00:17:55,640
VLAN create so everything is there

00:17:50,300 --> 00:17:55,640
that's it about the very quick overview

00:17:56,120 --> 00:18:07,380
test as well then open Xen manager so if

00:18:02,040 --> 00:18:11,400
you have used the tool delivered by

00:18:07,380 --> 00:18:13,470
VMware that's comparable so that here

00:18:11,400 --> 00:18:15,900
you have a list of the templates maybe I

00:18:13,470 --> 00:18:18,170
should show that because that's that's

00:18:15,900 --> 00:18:18,170
nice

00:18:26,810 --> 00:18:30,590
so when you create the machine that's

00:18:28,460 --> 00:18:34,310
what you do okay so you have all the

00:18:30,590 --> 00:18:38,260
list of templates so if I add a D then

00:18:34,310 --> 00:18:41,790
it will show only the Debian ones okay

00:18:38,260 --> 00:18:44,890
so now go back to my slides

00:18:41,790 --> 00:18:44,890
[Music]

00:18:49,590 --> 00:18:53,860
so here you will see all the templates

00:18:52,480 --> 00:18:56,740
the same way you would see on the

00:18:53,860 --> 00:18:59,380
command line so basically this is just

00:18:56,740 --> 00:19:07,780
like XE so that's a client for the REST

00:18:59,380 --> 00:19:14,049
API but in a graphical way so when you

00:19:07,780 --> 00:19:16,360
use so xcp you have one of the

00:19:14,049 --> 00:19:19,780
possibilities to use normal than

00:19:16,360 --> 00:19:23,110
bridging or you have the possibility to

00:19:19,780 --> 00:19:25,210
use open V switch so I won't talk in

00:19:23,110 --> 00:19:27,429
details about open V switch because I

00:19:25,210 --> 00:19:31,260
believe Godot is going to talk about it

00:19:27,429 --> 00:19:35,740
in heat the presentation just after mine

00:19:31,260 --> 00:19:39,250
but basically what does open V switch is

00:19:35,740 --> 00:19:42,520
that if you have many servers and many

00:19:39,250 --> 00:19:44,530
switches and a complicated Network what

00:19:42,520 --> 00:19:46,090
is going to do is that aggregate all

00:19:44,530 --> 00:19:48,700
these and make it

00:19:46,090 --> 00:19:51,730
controllable from one unique central

00:19:48,700 --> 00:19:56,470
point so it's going to maintain VLANs

00:19:51,730 --> 00:19:59,230
across your networks your switch has to

00:19:56,470 --> 00:20:03,010
support labeling and then it will create

00:19:59,230 --> 00:20:06,400
VLANs the goal is that one customer has

00:20:03,010 --> 00:20:07,900
like many little machines you want these

00:20:06,400 --> 00:20:09,549
very machines to be connected to each

00:20:07,900 --> 00:20:11,470
other but you don't want your customer

00:20:09,549 --> 00:20:17,730
to see the traffic of other vehicle

00:20:11,470 --> 00:20:17,730
machines as well what it does is

00:20:17,880 --> 00:20:23,760
monitoring with the V flow protocol so

00:20:21,400 --> 00:20:26,020
that you will know how much pennyways

00:20:23,760 --> 00:20:35,500
virtual machines are using you can nuke

00:20:26,020 --> 00:20:38,650
us and things like that so XE PE is nice

00:20:35,500 --> 00:20:40,740
it's very easy to use on the shell you

00:20:38,650 --> 00:20:43,409
can create and

00:20:40,740 --> 00:20:46,440
and stock virtual machines but it's not

00:20:43,409 --> 00:20:49,500
easy to compatible and there's many

00:20:46,440 --> 00:20:52,200
services that it provides that are

00:20:49,500 --> 00:20:54,659
lacking for putting that in production

00:20:52,200 --> 00:20:57,210
and provided to your customers so one

00:20:54,659 --> 00:21:02,899
way to use xep

00:20:57,210 --> 00:21:09,000
is to use it together with OpenStack so

00:21:02,899 --> 00:21:12,120
xep will do the compute load mainly the

00:21:09,000 --> 00:21:15,210
OpenStack will bring you the ec2 API and

00:21:12,120 --> 00:21:18,450
the s3 api do storage for you so you

00:21:15,210 --> 00:21:21,539
will have your images that will be

00:21:18,450 --> 00:21:23,340
stored using glanced over Swift if you

00:21:21,539 --> 00:21:27,470
use that setup there's many ways to set

00:21:23,340 --> 00:21:30,720
up OpenStack I will come to that error

00:21:27,470 --> 00:21:33,899
you might have heard that about the

00:21:30,720 --> 00:21:36,899
first DAC Citrix is focusing on cloud

00:21:33,899 --> 00:21:42,270
stack that was an announcement that I

00:21:36,899 --> 00:21:44,549
think now Citrix is regretting in fact

00:21:42,270 --> 00:21:48,750
they are still working on OpenStack and

00:21:44,549 --> 00:21:53,010
providing support for OpenStack one of

00:21:48,750 --> 00:21:57,659
the reason is that Xen is a very cool

00:21:53,010 --> 00:22:00,059
cool hypervisor and that's the only way

00:21:57,659 --> 00:22:03,570
you have to use - the only way you can

00:22:00,059 --> 00:22:06,090
use them is through the API if you use

00:22:03,570 --> 00:22:09,029
OpenStack and not through liberabit the

00:22:06,090 --> 00:22:12,929
Lib routes think compatibility for then

00:22:09,029 --> 00:22:15,059
in OpenStack is not tested so don't even

00:22:12,929 --> 00:22:17,510
try because you'll be the first person

00:22:15,059 --> 00:22:17,510
to do it

00:22:18,649 --> 00:22:27,750
the set up is a little bit more complex

00:22:21,390 --> 00:22:29,760
than using just KVM meaning that the net

00:22:27,750 --> 00:22:31,620
the networking part is really

00:22:29,760 --> 00:22:33,659
complicated you have to set up three

00:22:31,620 --> 00:22:36,020
networks three villains one for

00:22:33,659 --> 00:22:42,110
management and one for private one for

00:22:36,020 --> 00:22:42,110
internal connections between your VMs so

00:22:42,169 --> 00:22:49,500
now I'll talk a bit more about OpenStack

00:22:44,700 --> 00:22:53,330
itself so there's many many components

00:22:49,500 --> 00:22:55,610
in OpenStack just Nova creates about

00:22:53,330 --> 00:22:59,690
binary packages and Nova is only one of

00:22:55,610 --> 00:23:03,950
the projects of OpenStack so OpenStack

00:22:59,690 --> 00:23:07,580
uses database which I would you want

00:23:03,950 --> 00:23:10,309
because it's use SQL alchemy so you can

00:23:07,580 --> 00:23:13,730
use SQLite my Square or pods crest it

00:23:10,309 --> 00:23:19,720
doesn't really matter and the rabbitmq

00:23:13,730 --> 00:23:19,720
server so RabbitMQ server is a man'll is

00:23:20,259 --> 00:23:26,289
something to communicate between the

00:23:22,789 --> 00:23:29,359
components so it's it's a messaging Jew

00:23:26,289 --> 00:23:31,309
meaning that you have may on one side

00:23:29,359 --> 00:23:33,830
you have many components that might send

00:23:31,309 --> 00:23:36,049
some messages and they want it may be

00:23:33,830 --> 00:23:40,970
broadcast to many other components so

00:23:36,049 --> 00:23:43,929
that's what it does then you have the

00:23:40,970 --> 00:23:47,330
core project of OpenStack so Nova vol

00:23:43,929 --> 00:23:52,879
Nova Glens and Nova Swift together

00:23:47,330 --> 00:23:56,029
providing storage and then the compute

00:23:52,879 --> 00:24:01,100
part is made out of Nova and as I just

00:23:56,029 --> 00:24:03,619
said xcp if you want to use them so in

00:24:01,100 --> 00:24:06,019
no way into your computer knowledge you

00:24:03,619 --> 00:24:10,909
will need Nova Network no a scheduler

00:24:06,019 --> 00:24:16,609
and maybe quantum for managing your

00:24:10,909 --> 00:24:18,679
network that slide is a kind of a joke

00:24:16,609 --> 00:24:20,899
to tell you oh look that's easy there's

00:24:18,679 --> 00:24:23,600
only a few components and of course I

00:24:20,899 --> 00:24:27,529
have to explain a bit how it works so

00:24:23,600 --> 00:24:30,200
this is the rabbitmq messaging thing so

00:24:27,529 --> 00:24:32,809
all of the components of OpenStack can

00:24:30,200 --> 00:24:34,940
send messages to the queue and then

00:24:32,809 --> 00:24:38,899
after the queue dispatches the message

00:24:34,940 --> 00:24:41,509
messages to all the components so

00:24:38,899 --> 00:24:45,440
basically you have no Nova API that will

00:24:41,509 --> 00:24:48,109
lessons to a restful request from the

00:24:45,440 --> 00:24:52,309
outside all through Nova dashboard so

00:24:48,109 --> 00:24:54,980
dashboard is the horizontal and that's

00:24:52,309 --> 00:24:59,509
what GUI so you connect to it create

00:24:54,980 --> 00:25:01,850
machines through a web interface I like

00:24:59,509 --> 00:25:05,029
to highlight that if you use cloud

00:25:01,850 --> 00:25:06,770
computing it's a bit silly to use a web

00:25:05,029 --> 00:25:09,140
GUI cloudy's all

00:25:06,770 --> 00:25:13,600
about automation and scaling and script

00:25:09,140 --> 00:25:16,430
scripting so it's not the way to

00:25:13,600 --> 00:25:18,350
consumer to use the cloud but it's still

00:25:16,430 --> 00:25:21,890
nice to have a web interface and see an

00:25:18,350 --> 00:25:26,990
overview of what's going on so the

00:25:21,890 --> 00:25:30,260
question was talk to Novak API and then

00:25:26,990 --> 00:25:32,980
Nova API sends books you to compute to

00:25:30,260 --> 00:25:35,870
create start and stop veteran machines

00:25:32,980 --> 00:25:38,510
Nova network is the thing that will

00:25:35,870 --> 00:25:43,790
route all the traffic soil of your vital

00:25:38,510 --> 00:25:47,810
machines so your VMs will run in this

00:25:43,790 --> 00:25:50,150
like many hardware and then absolutely

00:25:47,810 --> 00:25:52,760
all of their network will go through

00:25:50,150 --> 00:25:56,240
Nova Network so there's two ways to set

00:25:52,760 --> 00:25:59,180
it up first one way is that you have one

00:25:56,240 --> 00:26:02,900
of a network and then all the VMS are

00:25:59,180 --> 00:26:05,870
routed through that or another way is to

00:26:02,900 --> 00:26:09,760
set the Nova Network in each compute

00:26:05,870 --> 00:26:14,540
nodes that you have so doing that is

00:26:09,760 --> 00:26:17,180
like you have more things to maintain

00:26:14,540 --> 00:26:21,790
but the nice point is that you have more

00:26:17,180 --> 00:26:21,790
redundancy like if one of a network

00:26:21,940 --> 00:26:30,980
server dies then you still have networks

00:26:24,620 --> 00:26:34,850
for the others so Nova volume is a kind

00:26:30,980 --> 00:26:38,780
of each other's LVM so that's the

00:26:34,850 --> 00:26:42,110
elastic block storage of Nova unique

00:26:38,780 --> 00:26:46,720
that you create partition and just say

00:26:42,110 --> 00:26:49,130
assign that to this virtual machine

00:26:46,720 --> 00:26:50,870
the Nova scheduler you won't have to

00:26:49,130 --> 00:26:53,060
deal with it too much it just decides

00:26:50,870 --> 00:26:57,050
where visual machines are going to be

00:26:53,060 --> 00:26:58,640
started yeah and here when you want to

00:26:57,050 --> 00:27:02,570
create new virtual machines you have

00:26:58,640 --> 00:27:06,980
glands so glands restores your filter

00:27:02,570 --> 00:27:13,460
machines images like am i if you if you

00:27:06,980 --> 00:27:15,890
use the AWS so here which will store

00:27:13,460 --> 00:27:17,309
your images and then you have multiple

00:27:15,890 --> 00:27:21,809
backends

00:27:17,309 --> 00:27:28,050
you can use swift so Swift is the

00:27:21,809 --> 00:27:28,050
equivalent of s3 so Swift is not

00:27:28,410 --> 00:27:36,730
filesystem storage its objects so we can

00:27:32,470 --> 00:27:41,590
have literally billions of objects store

00:27:36,730 --> 00:27:43,870
their an image a picture of either it's

00:27:41,590 --> 00:27:46,150
not meant to be fast but it's meant to

00:27:43,870 --> 00:27:50,020
store a lot of objects and it's highly

00:27:46,150 --> 00:27:54,190
redundant typically you will have at

00:27:50,020 --> 00:27:56,080
least three Swift machines that have at

00:27:54,190 --> 00:27:59,320
least speak copies and then after you

00:27:56,080 --> 00:28:01,000
can add more and more hardware it does

00:27:59,320 --> 00:28:07,330
the copy using rsync

00:28:01,000 --> 00:28:10,230
in repetitive cron jobs so once you have

00:28:07,330 --> 00:28:14,140
all the complicated setup you have here

00:28:10,230 --> 00:28:17,530
then you can plug xep on it if you like

00:28:14,140 --> 00:28:21,210
to use them so what happens is that you

00:28:17,530 --> 00:28:26,890
have one OpenStack controller system and

00:28:21,210 --> 00:28:30,780
then it connects to let's say one xcp

00:28:26,890 --> 00:28:32,429
server and that one can have multiple

00:28:30,780 --> 00:28:35,170
[Music]

00:28:32,429 --> 00:28:39,070
xcp servers to get connected to each

00:28:35,170 --> 00:28:41,200
other so one master many slaves and if

00:28:39,070 --> 00:28:43,990
you have multiple availability zones

00:28:41,200 --> 00:28:45,970
then you can have these three so that's

00:28:43,990 --> 00:28:48,580
one cool feature about OpenStack as well

00:28:45,970 --> 00:28:50,950
is that you can have availability

00:28:48,580 --> 00:28:53,429
availability zones it's like let's say

00:28:50,950 --> 00:28:56,650
multiple ones in your data centers or

00:28:53,429 --> 00:29:06,280
across the world if you have multiple

00:28:56,650 --> 00:29:09,670
data centers so I like OpenStack is

00:29:06,280 --> 00:29:15,490
maintained by many these four guys

00:29:09,670 --> 00:29:18,820
including myself annex appeasement

00:29:15,490 --> 00:29:22,770
maintained by by Citrix is with me

00:29:18,820 --> 00:29:26,560
together so currently the packaging is

00:29:22,770 --> 00:29:28,300
quite complicated it's not easy to set

00:29:26,560 --> 00:29:29,760
up it's not something you say ok I just

00:29:28,300 --> 00:29:34,060
set up a seed and

00:29:29,760 --> 00:29:38,080
five minutes later it's done so we try

00:29:34,060 --> 00:29:42,880
to have google Summer of Code students

00:29:38,080 --> 00:29:46,240
to do what we called OpenStack paycheck

00:29:42,880 --> 00:29:49,950
packaging use case so what we were

00:29:46,240 --> 00:29:54,070
hoping through that was that we'd had

00:29:49,950 --> 00:29:56,740
meta packages that you could say ok

00:29:54,070 --> 00:29:59,200
here's a compute node I just do apt-get

00:29:56,740 --> 00:30:01,030
install open stack compute node and then

00:29:59,200 --> 00:30:04,060
magically would you would come up so

00:30:01,030 --> 00:30:06,010
that hasn't been done and we would be

00:30:04,060 --> 00:30:10,470
very happy if we could provide that to

00:30:06,010 --> 00:30:10,470
dbn and reduce the size of the how tools

00:30:10,650 --> 00:30:17,800
so our final goal will be to have no

00:30:15,730 --> 00:30:19,600
documentation because it would be so

00:30:17,800 --> 00:30:25,270
easy to set up and I think we are far

00:30:19,600 --> 00:30:29,980
away from that we added already few DEP

00:30:25,270 --> 00:30:37,120
conf configuration screens and we hope

00:30:29,980 --> 00:30:40,750
to add some more layer so we targeted in

00:30:37,120 --> 00:30:42,640
OpenStack its maintained through the

00:30:40,750 --> 00:30:45,580
same release cycles as you find in

00:30:42,640 --> 00:30:51,760
Ubuntu so that every six months does new

00:30:45,580 --> 00:30:54,419
release so we had Boston Diablo cactus

00:30:51,760 --> 00:30:59,340
[Music]

00:30:54,419 --> 00:31:01,990
burst on captured Diablo and SX

00:30:59,340 --> 00:31:05,550
currently we are at SX that has been

00:31:01,990 --> 00:31:09,550
released through together with Ubuntu

00:31:05,550 --> 00:31:12,160
1204 and were quite happy of this

00:31:09,550 --> 00:31:13,809
release cycle because it means that the

00:31:12,160 --> 00:31:14,950
guys working on OpenStack will maintain

00:31:13,809 --> 00:31:17,050
that for five years

00:31:14,950 --> 00:31:22,080
and that's what we are going to maintain

00:31:17,050 --> 00:31:22,080
in wizzy so for us it's really fortunate

00:31:22,919 --> 00:31:28,800
like the the two previous versions of

00:31:26,169 --> 00:31:33,460
OpenStack like cactus in Diablo were

00:31:28,800 --> 00:31:35,710
usable but not as much as SX which we

00:31:33,460 --> 00:31:38,140
are very happy because it's more stable

00:31:35,710 --> 00:31:41,080
it has all the features with one

00:31:38,140 --> 00:31:44,860
need so we're quite on a comfortable

00:31:41,080 --> 00:31:47,140
situation here but there's a lot of work

00:31:44,860 --> 00:31:49,660
that is going on OpenStack is a very

00:31:47,140 --> 00:31:53,470
young project it's only two years old

00:31:49,660 --> 00:31:56,340
okay so there's always more and more

00:31:53,470 --> 00:31:56,340
things to be added

00:31:57,370 --> 00:32:04,540
there's indeed beyond since Laney does

00:32:00,730 --> 00:32:07,210
ganeti which was the first opens the

00:32:04,540 --> 00:32:11,550
first cloud stack that was available in

00:32:07,210 --> 00:32:14,650
Debian but there's more to be packaged

00:32:11,550 --> 00:32:18,370
personally I'd be very happy if we had

00:32:14,650 --> 00:32:20,460
open nebula or cloud stack or eucalyptus

00:32:18,370 --> 00:32:23,290
back totally packaged in Debian

00:32:20,460 --> 00:32:26,950
currently we have can achieve in C

00:32:23,290 --> 00:32:30,090
Linney and then we have xcp OpenStack

00:32:26,950 --> 00:32:32,800
and that's it nothing more available so

00:32:30,090 --> 00:32:35,560
especially eucalyptus it would be

00:32:32,800 --> 00:32:37,870
interesting because ok that that is were

00:32:35,560 --> 00:32:39,600
already available in human through

00:32:37,870 --> 00:32:42,300
they've been using it for years already

00:32:39,600 --> 00:32:47,530
the very good point of that is that it's

00:32:42,300 --> 00:32:50,680
fully compatible with ec2 OpenStack team

00:32:47,530 --> 00:32:53,740
decided that yes they will try to be

00:32:50,680 --> 00:32:55,510
easy to compatible but that's not one of

00:32:53,740 --> 00:33:03,130
their main goal what they would like to

00:32:55,510 --> 00:33:06,970
do is more having a nice API and if they

00:33:03,130 --> 00:33:09,820
have to diverge a bit from ec2 then be

00:33:06,970 --> 00:33:13,860
it doesn't matter because OpenStack is

00:33:09,820 --> 00:33:18,850
aiming more at being the standard of

00:33:13,860 --> 00:33:20,680
computing by itself so all of these are

00:33:18,850 --> 00:33:24,790
very interesting and we would love to

00:33:20,680 --> 00:33:27,490
see them in Debian so if you would like

00:33:24,790 --> 00:33:31,180
to contribute you're of course welcome

00:33:27,490 --> 00:33:36,760
and these are the references you should

00:33:31,180 --> 00:33:40,240
take list off so once again I'd like to

00:33:36,760 --> 00:33:46,210
thank John and Mike from Citrix for

00:33:40,240 --> 00:33:48,970
being great of streams so on the

00:33:46,210 --> 00:33:51,760
OpenStack packaging there's been Louis

00:33:48,970 --> 00:33:55,270
and Julian from universe

00:33:51,760 --> 00:33:58,810
she's a French company universe has

00:33:55,270 --> 00:34:02,470
spent like a lot of money by hiring

00:33:58,810 --> 00:34:05,560
Julia form like many months doing full

00:34:02,470 --> 00:34:07,420
time work on OpenStack packaging it's

00:34:05,560 --> 00:34:11,409
really really a lot of packaging it's

00:34:07,420 --> 00:34:16,600
complicated so we really needed them to

00:34:11,409 --> 00:34:20,649
work to do that for the community so big

00:34:16,600 --> 00:34:23,320
up to them recently drawers he will

00:34:20,649 --> 00:34:26,350
recognize himself did a lot of book

00:34:23,320 --> 00:34:29,040
submission on the Debian BTS this was

00:34:26,350 --> 00:34:34,330
very helpful to thanks to him as well

00:34:29,040 --> 00:34:37,840
and we are now we have now have 10

00:34:34,330 --> 00:34:38,620
minutes so I'm happy to have question

00:34:37,840 --> 00:34:41,790
and answers

00:34:38,620 --> 00:34:41,790
please go ahead

00:34:42,250 --> 00:34:47,550
it was the microphone yeah over there

00:34:44,950 --> 00:34:47,550
dozen question

00:34:53,560 --> 00:35:00,610
I just want to touch on eucalyptus a bit

00:34:57,040 --> 00:35:01,900
I'll work for you I just want to touch

00:35:00,610 --> 00:35:03,910
on eucalyptus what you're talking about

00:35:01,900 --> 00:35:06,310
before I work for eucalyptus as a their

00:35:03,910 --> 00:35:08,230
Debian release engineer we've recently

00:35:06,310 --> 00:35:10,060
uploaded eucalyptus to Debian we just

00:35:08,230 --> 00:35:11,560
didn't quite make the freeze

00:35:10,060 --> 00:35:15,040
so we're trying to work with the release

00:35:11,560 --> 00:35:16,570
team to let us in and also I just want

00:35:15,040 --> 00:35:19,120
to clarify we're not just open for

00:35:16,570 --> 00:35:21,510
anymore we're completely open source the

00:35:19,120 --> 00:35:23,890
only two components that are not are

00:35:21,510 --> 00:35:29,230
pieces of VMware technology that we

00:35:23,890 --> 00:35:30,160
license yes sir yes so it's not open

00:35:29,230 --> 00:35:33,840
core anymore

00:35:30,160 --> 00:35:37,560
that's completely open source okay I

00:35:33,840 --> 00:35:40,600
think that even if you can it is

00:35:37,560 --> 00:35:42,520
changing the way to release it

00:35:40,600 --> 00:35:46,330
I think the arm that has been done like

00:35:42,520 --> 00:35:48,990
two years ago is already passed okay and

00:35:46,330 --> 00:35:52,030
I think it you have lost a big

00:35:48,990 --> 00:35:54,100
opportunity here very much that's why

00:35:52,030 --> 00:35:55,780
they hired me actually they received

00:35:54,100 --> 00:35:57,870
quite a black eye on the community we've

00:35:55,780 --> 00:36:01,000
been working really diligently with

00:35:57,870 --> 00:36:03,010
we've got three Debian guys on our team

00:36:01,000 --> 00:36:05,830
now we've got Charles Plessy out in

00:36:03,010 --> 00:36:08,740
Japan we've got really good boy down and

00:36:05,830 --> 00:36:10,330
Argentina I believe it is and Stefan

00:36:08,740 --> 00:36:12,130
molar out of Germany have joined the

00:36:10,330 --> 00:36:16,200
package eucalyptus team so we're trying

00:36:12,130 --> 00:36:19,080
to correct rectify that situation so we

00:36:16,200 --> 00:36:21,640
you can if just being with this one um

00:36:19,080 --> 00:36:23,170
definitely we Z plus one and we're still

00:36:21,640 --> 00:36:28,720
working with the release team to try to

00:36:23,170 --> 00:36:31,840
get ways that'd be really great if we

00:36:28,720 --> 00:36:33,790
had you delicious like I believe that

00:36:31,840 --> 00:36:38,190
together with OpenStack and xep that's

00:36:33,790 --> 00:36:46,830
the thing that we the more the merrier

00:36:38,190 --> 00:36:46,830
yeah is there any other questions

00:36:49,530 --> 00:37:01,580
I don't think there is any all right if

00:36:58,470 --> 00:37:01,580
yes go ahead

00:37:03,470 --> 00:37:07,380
so this is all new to me so that was

00:37:06,090 --> 00:37:10,440
marvelous but there were an awful lot of

00:37:07,380 --> 00:37:12,000
acronyms and diagrams and stuff and I

00:37:10,440 --> 00:37:14,250
didn't really understand about half of

00:37:12,000 --> 00:37:15,690
that however it looks really interesting

00:37:14,250 --> 00:37:17,370
so if you stick that online I can read

00:37:15,690 --> 00:37:20,490
it again and try and work out alright

00:37:17,370 --> 00:37:22,140
what's what so for those of us who've

00:37:20,490 --> 00:37:31,170
never done any of this it's all quite

00:37:22,140 --> 00:37:42,470
confusing but it does look good no that

00:37:31,170 --> 00:37:46,920
was after this one right all right so

00:37:42,470 --> 00:37:48,540
what's your question my question is just

00:37:46,920 --> 00:37:57,120
put it online so I can read it again

00:37:48,540 --> 00:37:59,010
yeah sure sure it is online anyone

00:37:57,120 --> 00:38:01,010
making presentation it would be nice to

00:37:59,010 --> 00:38:07,370
upload your presentation in cut them off

00:38:01,010 --> 00:38:10,440
yes it is they're already uploaded it

00:38:07,370 --> 00:38:10,440
[Music]

00:38:13,490 --> 00:38:26,700
and your the question is there any

00:38:21,300 --> 00:38:30,870
questions on that thing so I know that

00:38:26,700 --> 00:38:33,510
this thing sounds like well I won't ever

00:38:30,870 --> 00:38:35,130
ever be able to do that in fact that's

00:38:33,510 --> 00:38:39,000
why I spend a lot of time to explain it

00:38:35,130 --> 00:38:42,780
to you because it seems complicated but

00:38:39,000 --> 00:38:45,300
it's not that hard okay and like in fact

00:38:42,780 --> 00:38:49,070
you can start all of that in one machine

00:38:45,300 --> 00:38:49,070
and it's going to magically work

00:38:54,250 --> 00:39:04,060
alright ok so thanks a lot mas will

00:39:00,940 --> 00:39:06,940
resume at noon with talk by Geeta

00:39:04,060 --> 00:39:09,280
Trotter for advanced networking which is

00:39:06,940 --> 00:39:11,070
especially relevant to visualization so

00:39:09,280 --> 00:39:14,789
thank you

00:39:11,070 --> 00:39:14,789

YouTube URL: https://www.youtube.com/watch?v=24QeQJPh8Gs


