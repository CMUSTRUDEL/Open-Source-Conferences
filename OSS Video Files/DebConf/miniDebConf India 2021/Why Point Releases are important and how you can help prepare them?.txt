Title: Why Point Releases are important and how you can help prepare them?
Publication date: 2021-03-20
Playlist: miniDebConf India 2021
Description: 
	by Utkarsh Gupta

At: MiniDebConf India 2021
https://in2021.mini.debconf.org/talks/18-why-point-releases-are-important-and-how-you-can-help-prepare-them/

Even stable is updated once in a while. Those updates are called "Point Releases". They usually incorporate the security fixes released until the time of the update and fixes for important bugs in the current release.

Whilst there are over hundreds of bugs fixed in each point update, there are even more that can be fixed with your help! This talk takes you through that and tells you how exactly can you help fix those bugs/security issues and help in preparing a solid point update!

Room: Buzz
Scheduled start: 2021-01-23 12:30:00
Captions: 
	00:00:05,359 --> 00:00:09,840
welcome again

00:00:06,480 --> 00:00:11,360
so the next talk is why point releases

00:00:09,840 --> 00:00:14,240
are important and how

00:00:11,360 --> 00:00:16,080
you can help prepare them by utkarsh so

00:00:14,240 --> 00:00:18,960
utkarsh is a 20 year old

00:00:16,080 --> 00:00:20,480
undergrad and one of our youngest debian

00:00:18,960 --> 00:00:23,600
developers in india

00:00:20,480 --> 00:00:24,800
he maintains a bunch of packages in the

00:00:23,600 --> 00:00:27,920
ruby team

00:00:24,800 --> 00:00:28,560
in in the node team and a bunch of other

00:00:27,920 --> 00:00:31,760
stuff

00:00:28,560 --> 00:00:34,960
so let's hear it out and you can use

00:00:31,760 --> 00:00:37,280
the ether pad or the irc channel to ask

00:00:34,960 --> 00:00:39,600
as many questions as you want so let's

00:00:37,280 --> 00:00:39,600
begin

00:00:40,800 --> 00:00:46,480
hello welcome to this talk titled why

00:00:44,160 --> 00:00:48,879
point phrases are important and how can

00:00:46,480 --> 00:00:51,199
you help prepare them

00:00:48,879 --> 00:00:52,800
so let's start by talking a little bit

00:00:51,199 --> 00:00:55,440
about me

00:00:52,800 --> 00:00:56,000
i'm i'm cursed a 21 year undergrad

00:00:55,440 --> 00:00:59,199
student

00:00:56,000 --> 00:01:00,480
i've been a dd since december 19. i

00:00:59,199 --> 00:01:03,920
contribute to a bunch of

00:01:00,480 --> 00:01:05,280
open source projects i did gsoc in 2019

00:01:03,920 --> 00:01:07,840
00:01:05,280 --> 00:01:08,960
both with debian and i write cv patches

00:01:07,840 --> 00:01:11,920
for debian lts

00:01:08,960 --> 00:01:14,799
and elgs i also go by the handle with

00:01:11,920 --> 00:01:17,920
course 2.0 across the web

00:01:14,799 --> 00:01:19,840
so what are point freezes you know even

00:01:17,920 --> 00:01:22,000
stable is updated once in a while

00:01:19,840 --> 00:01:23,840
often in a time span of around two to

00:01:22,000 --> 00:01:25,119
three months these updates are called

00:01:23,840 --> 00:01:28,560
point releases

00:01:25,119 --> 00:01:30,720
but what's so special about them huh

00:01:28,560 --> 00:01:32,159
they usually incorporate the six

00:01:30,720 --> 00:01:34,240
security fixes

00:01:32,159 --> 00:01:36,320
released until the time of the update

00:01:34,240 --> 00:01:37,520
and fixes for important bugs in the

00:01:36,320 --> 00:01:39,360
current release

00:01:37,520 --> 00:01:40,560
so let's say you're using a fresh

00:01:39,360 --> 00:01:43,840
release of buster

00:01:40,560 --> 00:01:46,079
so that would be debian 10.0 right and

00:01:43,840 --> 00:01:48,640
you use some package let's say x

00:01:46,079 --> 00:01:49,759
and it would be and there would be some

00:01:48,640 --> 00:01:52,960
minor

00:01:49,759 --> 00:01:55,840
security bugs issued against those

00:01:52,960 --> 00:01:56,560
against the package that you're using um

00:01:55,840 --> 00:01:59,040
why not

00:01:56,560 --> 00:02:00,079
i'm i'm talking particularly about minor

00:01:59,040 --> 00:02:02,880
issues not

00:02:00,079 --> 00:02:03,200
um severe issues because severe issues

00:02:02,880 --> 00:02:06,320
are

00:02:03,200 --> 00:02:08,000
always fixed by the security teams so

00:02:06,320 --> 00:02:09,599
let's say there are a bunch of minor

00:02:08,000 --> 00:02:12,800
issues for the package

00:02:09,599 --> 00:02:15,520
but so wouldn't it be nice to have

00:02:12,800 --> 00:02:16,239
all of these bugs kind of fixed somehow

00:02:15,520 --> 00:02:18,000
right

00:02:16,239 --> 00:02:19,599
and that is where a point release comes

00:02:18,000 --> 00:02:22,640
in a point release

00:02:19,599 --> 00:02:25,440
updates or updates the package uh

00:02:22,640 --> 00:02:27,599
with fixing all those all those bugs all

00:02:25,440 --> 00:02:30,640
those crashes all those vulnerabilities

00:02:27,599 --> 00:02:33,360
right so this is

00:02:30,640 --> 00:02:34,640
why a point release is important and

00:02:33,360 --> 00:02:37,840
these are often prepared

00:02:34,640 --> 00:02:40,480
by the srms table release managers

00:02:37,840 --> 00:02:42,239
okay that's cool but how exactly would a

00:02:40,480 --> 00:02:45,200
package reach there

00:02:42,239 --> 00:02:45,920
glad you asked so here's a typical

00:02:45,200 --> 00:02:48,400
workflow

00:02:45,920 --> 00:02:50,319
of how a package would move between

00:02:48,400 --> 00:02:50,800
different archives and it's uploaded by

00:02:50,319 --> 00:02:54,080
whom

00:02:50,800 --> 00:02:56,080
and where right so we're not in talking

00:02:54,080 --> 00:02:58,560
about the security team at the moment so

00:02:56,080 --> 00:02:59,360
let's delve it from there so we are just

00:02:58,560 --> 00:03:01,840
focusing

00:02:59,360 --> 00:03:02,959
focusing on the maintainer part so the

00:03:01,840 --> 00:03:05,440
uploader is the

00:03:02,959 --> 00:03:06,959
maintainer it could either be a single

00:03:05,440 --> 00:03:08,720
person or the package could be

00:03:06,959 --> 00:03:10,319
maintained so anybody can employ a

00:03:08,720 --> 00:03:11,120
debian contributor a maintainer or

00:03:10,319 --> 00:03:14,319
developer

00:03:11,120 --> 00:03:15,920
doesn't matter so let's say a maintainer

00:03:14,319 --> 00:03:18,319
maintainer you're the maintainer you

00:03:15,920 --> 00:03:20,720
update uh upload a package generally

00:03:18,319 --> 00:03:21,840
unstable then either to unstable or

00:03:20,720 --> 00:03:24,319
experimental

00:03:21,840 --> 00:03:25,040
it then goes to testing and the testing

00:03:24,319 --> 00:03:28,159
becomes

00:03:25,040 --> 00:03:28,879
the new stable but in case of the

00:03:28,159 --> 00:03:31,519
example that i

00:03:28,879 --> 00:03:32,879
just did before the slide if a package

00:03:31,519 --> 00:03:36,319
is vulnerable

00:03:32,879 --> 00:03:39,440
the maintainer would prepare proposed a

00:03:36,319 --> 00:03:39,920
fix in the proposed updates repository

00:03:39,440 --> 00:03:42,239
and it

00:03:39,920 --> 00:03:44,560
would go to the next table release so

00:03:42,239 --> 00:03:46,000
that is somehow it looks kind of weird

00:03:44,560 --> 00:03:48,400
but this is what it is

00:03:46,000 --> 00:03:49,440
it's kind of easy if you just get the

00:03:48,400 --> 00:03:51,120
idea with

00:03:49,440 --> 00:03:53,760
with what you're concerned with don't

00:03:51,120 --> 00:03:56,159
look at the other parts you know

00:03:53,760 --> 00:03:58,159
anyway that looks interesting i'm sold

00:03:56,159 --> 00:04:00,319
so what are the ways to help

00:03:58,159 --> 00:04:02,400
dad you asked so there are different

00:04:00,319 --> 00:04:03,040
ways to help you know you can help with

00:04:02,400 --> 00:04:04,879
testing

00:04:03,040 --> 00:04:06,720
or you can ask the release team there's

00:04:04,879 --> 00:04:10,319
anything particular they're looking for

00:04:06,720 --> 00:04:12,239
but that's not so interesting however

00:04:10,319 --> 00:04:13,519
you know there's something very

00:04:12,239 --> 00:04:15,360
important

00:04:13,519 --> 00:04:17,120
there's one thing very important that

00:04:15,360 --> 00:04:19,440
you can help with and we'd

00:04:17,120 --> 00:04:20,479
really appreciate that bit of help not

00:04:19,440 --> 00:04:22,800
only is that

00:04:20,479 --> 00:04:25,040
interesting but it's also really crucial

00:04:22,800 --> 00:04:27,199
so we'd love your help

00:04:25,040 --> 00:04:28,400
preparing a package for a point of date

00:04:27,199 --> 00:04:31,280
by fixing

00:04:28,400 --> 00:04:32,639
pending series so point releases as i

00:04:31,280 --> 00:04:33,759
talked about essentially contain

00:04:32,639 --> 00:04:36,000
security fixes

00:04:33,759 --> 00:04:37,360
that are tagged as no dsa or postponed

00:04:36,000 --> 00:04:39,680
by the security

00:04:37,360 --> 00:04:40,960
and there are so many pending series and

00:04:39,680 --> 00:04:44,080
packages that you can

00:04:40,960 --> 00:04:46,479
really help us with so from the security

00:04:44,080 --> 00:04:47,600
tracker repository from salsa that the

00:04:46,479 --> 00:04:50,479
link i've mentioned

00:04:47,600 --> 00:04:52,479
i just did a grab of all the no dsa or

00:04:50,479 --> 00:04:54,840
postponed issues in buster

00:04:52,479 --> 00:04:57,840
and guess i've got like a bunch of

00:04:54,840 --> 00:04:59,360
packages to be more precise i've got 358

00:04:57,840 --> 00:05:01,199
packages that are

00:04:59,360 --> 00:05:02,800
need need that need some love and

00:05:01,199 --> 00:05:05,759
support from you all

00:05:02,800 --> 00:05:06,479
so now why i want these fix exactly as i

00:05:05,759 --> 00:05:10,160
talked

00:05:06,479 --> 00:05:13,600
previously that if the vulnerability

00:05:10,160 --> 00:05:14,960
and the severity of a cve or security

00:05:13,600 --> 00:05:17,440
bug is kind of high

00:05:14,960 --> 00:05:18,000
then the security team would fix them by

00:05:17,440 --> 00:05:21,360
sell

00:05:18,000 --> 00:05:21,919
but there are more than 20 000 cves in a

00:05:21,360 --> 00:05:24,320
year

00:05:21,919 --> 00:05:25,440
so it's kind of not possible to fix them

00:05:24,320 --> 00:05:27,680
all as

00:05:25,440 --> 00:05:28,479
as and when they come right so some

00:05:27,680 --> 00:05:31,600
issues are

00:05:28,479 --> 00:05:34,639
like not really well not really severe

00:05:31,600 --> 00:05:36,639
and it's it's good to issue a an update

00:05:34,639 --> 00:05:38,479
once a while maybe but it's it's not

00:05:36,639 --> 00:05:39,360
something that would warrant an

00:05:38,479 --> 00:05:41,759
immediate fix

00:05:39,360 --> 00:05:43,199
right these are tagged as no dsa or

00:05:41,759 --> 00:05:45,680
postponed when you know

00:05:43,199 --> 00:05:46,320
when it's it's a good idea to take a

00:05:45,680 --> 00:05:48,880
look at them

00:05:46,320 --> 00:05:49,360
but not really right now so we postpone

00:05:48,880 --> 00:05:52,080
them

00:05:49,360 --> 00:05:53,600
so all these issues can be fixed by via

00:05:52,080 --> 00:05:56,479
a point update

00:05:53,600 --> 00:05:57,440
and this is where you can really help

00:05:56,479 --> 00:06:00,800
okay

00:05:57,440 --> 00:06:03,440
but how to do that again glad

00:06:00,800 --> 00:06:05,680
you asked step one would be to identify

00:06:03,440 --> 00:06:07,919
the package that you want to work on

00:06:05,680 --> 00:06:10,400
then with step two come in check for all

00:06:07,919 --> 00:06:12,880
the no dsa postponed issues

00:06:10,400 --> 00:06:14,560
step three would be to give a heads up

00:06:12,880 --> 00:06:16,880
to the maintainer or the team when

00:06:14,560 --> 00:06:18,400
either an email or using the bts that is

00:06:16,880 --> 00:06:21,199
the bug tracking service

00:06:18,400 --> 00:06:21,680
which we all use via the email or you

00:06:21,199 --> 00:06:24,000
know

00:06:21,680 --> 00:06:25,759
any way you want step four would be to

00:06:24,000 --> 00:06:26,720
get the source from the stable release

00:06:25,759 --> 00:06:28,960
let's say buster

00:06:26,720 --> 00:06:29,759
and back for the relevant patches of the

00:06:28,960 --> 00:06:32,800
sub

00:06:29,759 --> 00:06:34,960
of the cve let's say a particular cv

00:06:32,800 --> 00:06:36,639
here quilt would be your friend quilt is

00:06:34,960 --> 00:06:40,160
a tool that would help you

00:06:36,639 --> 00:06:41,440
um patch and play around with patches

00:06:40,160 --> 00:06:44,000
basically

00:06:41,440 --> 00:06:44,800
um and step five finally would be to

00:06:44,000 --> 00:06:47,919
prepare the dev

00:06:44,800 --> 00:06:49,440
diff and send it to the bds that is the

00:06:47,919 --> 00:06:51,919
again the bug tracker where the

00:06:49,440 --> 00:06:53,680
bug would be documented and you know

00:06:51,919 --> 00:06:55,520
other things would happen

00:06:53,680 --> 00:06:57,520
and the beginner uh you can ask the

00:06:55,520 --> 00:06:59,919
maintainer asking to review and upload

00:06:57,520 --> 00:07:02,880
the upload it for you

00:06:59,919 --> 00:07:04,479
so i used a bunch of stuff which might

00:07:02,880 --> 00:07:06,800
you might not be aware of

00:07:04,479 --> 00:07:09,360
but that's all right when in doubt

00:07:06,800 --> 00:07:12,560
always refer to dev ref that is the

00:07:09,360 --> 00:07:14,240
um debian doubler developer reference

00:07:12,560 --> 00:07:16,080
thanks to holger for doing such an

00:07:14,240 --> 00:07:19,280
amazing job maintaining it for

00:07:16,080 --> 00:07:23,360
over 10 years now i've given a link

00:07:19,280 --> 00:07:26,400
to the particular um

00:07:23,360 --> 00:07:28,560
section there so you can refer to it

00:07:26,400 --> 00:07:30,160
and yeah basically that's that's all

00:07:28,560 --> 00:07:31,840
that's all i really want to convey i

00:07:30,160 --> 00:07:34,880
mean there are so many

00:07:31,840 --> 00:07:35,440
uh bugs that we would really appreciate

00:07:34,880 --> 00:07:38,080
your help

00:07:35,440 --> 00:07:38,560
in fixing them and it'd be really really

00:07:38,080 --> 00:07:40,960
great

00:07:38,560 --> 00:07:42,000
if you could take a look at some issues

00:07:40,960 --> 00:07:44,879
um it's it's

00:07:42,000 --> 00:07:46,400
going to be very easy uh now that the

00:07:44,879 --> 00:07:46,800
tracker is being improved so you can

00:07:46,400 --> 00:07:49,520
just

00:07:46,800 --> 00:07:50,400
go to tracker.debian.org slash the

00:07:49,520 --> 00:07:52,720
package name

00:07:50,400 --> 00:07:53,759
and you would get the number of issues

00:07:52,720 --> 00:07:56,479
um that are

00:07:53,759 --> 00:07:57,440
tagged as no dsa or postpawn and you can

00:07:56,479 --> 00:08:00,479
help them

00:07:57,440 --> 00:08:02,240
um with preparing a point of date and in

00:08:00,479 --> 00:08:04,479
case you have any questions or any

00:08:02,240 --> 00:08:08,160
doubts you can always refer to devrep

00:08:04,479 --> 00:08:11,039
um ask on irc channels maybe

00:08:08,160 --> 00:08:12,000
and um anybody you know we'd love to

00:08:11,039 --> 00:08:15,520
help you out

00:08:12,000 --> 00:08:17,520
so thank you so much for um coming here

00:08:15,520 --> 00:08:18,879
listening to me in case you've got

00:08:17,520 --> 00:08:21,280
questions you want help

00:08:18,879 --> 00:08:23,360
you want the list of packages that need

00:08:21,280 --> 00:08:24,160
help uh some team maintained packages or

00:08:23,360 --> 00:08:26,479
anything

00:08:24,160 --> 00:08:28,319
don't hesitate to contact me you could

00:08:26,479 --> 00:08:29,599
just drop me an email at utkarsh at

00:08:28,319 --> 00:08:32,800
devin.org

00:08:29,599 --> 00:08:33,360
or you could reach me out to any public

00:08:32,800 --> 00:08:35,680
forum

00:08:33,360 --> 00:08:36,560
i go by the handle with russ210 across

00:08:35,680 --> 00:08:41,839
the web

00:08:36,560 --> 00:08:41,839
see you then thank you bye

00:08:48,560 --> 00:08:56,080
cool so thank you

00:08:52,560 --> 00:08:57,360
for that long talk not long to be

00:08:56,080 --> 00:09:00,959
precise but

00:08:57,360 --> 00:09:01,920
that talk uh that i also believe is very

00:09:00,959 --> 00:09:05,279
important part

00:09:01,920 --> 00:09:07,600
that we should look up in debian so

00:09:05,279 --> 00:09:09,440
let's move to the ether pad and have

00:09:07,600 --> 00:09:12,800
some questions

00:09:09,440 --> 00:09:15,519
so uh so the first question says why do

00:09:12,800 --> 00:09:18,480
you think point releases aren't given

00:09:15,519 --> 00:09:18,800
enough attention as of now they still do

00:09:18,480 --> 00:09:21,920
come

00:09:18,800 --> 00:09:24,959
every once in a while so ah

00:09:21,920 --> 00:09:26,160
okay um personally i think first of all

00:09:24,959 --> 00:09:29,120
when a security fixes

00:09:26,160 --> 00:09:29,920
um is when a security bug is assigned to

00:09:29,120 --> 00:09:31,760
a package

00:09:29,920 --> 00:09:33,519
uh first of all the maintainer should at

00:09:31,760 --> 00:09:36,160
least take care of that

00:09:33,519 --> 00:09:37,279
bug in a package for sid that is they've

00:09:36,160 --> 00:09:39,760
been unstable

00:09:37,279 --> 00:09:40,720
then it migrates to testing but

00:09:39,760 --> 00:09:43,920
preparing

00:09:40,720 --> 00:09:45,760
uh pu is kind of you know um

00:09:43,920 --> 00:09:48,080
people get lazy sometimes you know it's

00:09:45,760 --> 00:09:50,560
not really a priority sometimes

00:09:48,080 --> 00:09:52,000
uh when uh the security team contacts

00:09:50,560 --> 00:09:53,600
them then sure

00:09:52,000 --> 00:09:54,959
the maintainers would love to work on

00:09:53,600 --> 00:09:56,320
them some maintainers really take care

00:09:54,959 --> 00:09:58,399
of all the point updates

00:09:56,320 --> 00:10:00,080
but let's say personally i'll talk about

00:09:58,399 --> 00:10:03,360
me i maintain like

00:10:00,080 --> 00:10:04,720
more than 200 packages personally and if

00:10:03,360 --> 00:10:06,800
and mostly all of them are team

00:10:04,720 --> 00:10:08,880
maintained so if a ruby package has

00:10:06,800 --> 00:10:10,320
some ruby package uh randomly gets

00:10:08,880 --> 00:10:14,000
assigned a cve

00:10:10,320 --> 00:10:17,040
um uh and it would be tagged as no dsa

00:10:14,000 --> 00:10:18,240
then i would like uh wouldn't give it so

00:10:17,040 --> 00:10:20,959
much of a priority

00:10:18,240 --> 00:10:22,079
although it's really good to get them

00:10:20,959 --> 00:10:23,920
all fixed but

00:10:22,079 --> 00:10:25,440
a lot of people kind of you know delay

00:10:23,920 --> 00:10:28,880
it further and keeps

00:10:25,440 --> 00:10:32,079
keeps up getting postponed so i think um

00:10:28,880 --> 00:10:34,240
that's why um it doesn't get

00:10:32,079 --> 00:10:36,480
much attention those uh since that is

00:10:34,240 --> 00:10:39,760
why the number of uh packages that

00:10:36,480 --> 00:10:42,079
really need uh the support and love is

00:10:39,760 --> 00:10:43,120
is kind of high but still like you know

00:10:42,079 --> 00:10:45,440
maintainers are doing

00:10:43,120 --> 00:10:46,560
a an awesome job even the security is an

00:10:45,440 --> 00:10:49,360
awesome job to keep

00:10:46,560 --> 00:10:51,440
everything um up to date uh and fix all

00:10:49,360 --> 00:10:53,120
the cvs that are actually at least

00:10:51,440 --> 00:10:55,680
affecting um

00:10:53,120 --> 00:10:56,880
the package or the distribution uh

00:10:55,680 --> 00:10:59,600
altogether

00:10:56,880 --> 00:11:00,160
so um yeah that is one thing that i can

00:10:59,600 --> 00:11:02,399
think of

00:11:00,160 --> 00:11:03,279
i mean i personally do kind of postpone

00:11:02,399 --> 00:11:05,600
the no dsa

00:11:03,279 --> 00:11:07,040
issues uh and then when i have enough

00:11:05,600 --> 00:11:09,120
time after like

00:11:07,040 --> 00:11:10,800
after all the work that i have to do and

00:11:09,120 --> 00:11:14,640
if i still get some time then i

00:11:10,800 --> 00:11:16,959
kind of proceed for the buster

00:11:14,640 --> 00:11:19,120
or you know any stable point of date

00:11:16,959 --> 00:11:22,320
releases

00:11:19,120 --> 00:11:24,880
cool so another question says

00:11:22,320 --> 00:11:26,079
uh thank you for pointing out the flow

00:11:24,880 --> 00:11:28,480
graph

00:11:26,079 --> 00:11:30,480
since the flow graph seems to be a bit

00:11:28,480 --> 00:11:33,920
complicated how do you manage

00:11:30,480 --> 00:11:36,800
synchronizing with the team ah okay

00:11:33,920 --> 00:11:37,600
so uh with the team so i assume that the

00:11:36,800 --> 00:11:40,160
question is about

00:11:37,600 --> 00:11:41,040
a team maintained package uh let's say

00:11:40,160 --> 00:11:44,240
for example

00:11:41,040 --> 00:11:45,040
the package belongs to the ruby team or

00:11:44,240 --> 00:11:47,920
the python team

00:11:45,040 --> 00:11:49,279
whichever so in case um so there could

00:11:47,920 --> 00:11:50,880
be another uploader you know

00:11:49,279 --> 00:11:52,399
someone from the team who's not the

00:11:50,880 --> 00:11:53,760
uploader let's say it's a team maintain

00:11:52,399 --> 00:11:55,519
package since it's a team in

00:11:53,760 --> 00:11:57,040
fact then the person who wants to work

00:11:55,519 --> 00:12:00,399
is not

00:11:57,040 --> 00:12:01,040
the uploader then i would how i would go

00:12:00,399 --> 00:12:04,880
about is

00:12:01,040 --> 00:12:05,920
i would just either text the person on

00:12:04,880 --> 00:12:09,200
irc

00:12:05,920 --> 00:12:09,680
that is the team channel or just drop in

00:12:09,200 --> 00:12:12,560
a mail

00:12:09,680 --> 00:12:14,079
on the mailing list or or even the bts

00:12:12,560 --> 00:12:17,040
as i mentioned on the tracker

00:12:14,079 --> 00:12:18,639
that hey i i am wanting to work on this

00:12:17,040 --> 00:12:21,680
and prepare a fix for this

00:12:18,639 --> 00:12:22,560
and uh would it be okay so just as to

00:12:21,680 --> 00:12:24,560
make sure that

00:12:22,560 --> 00:12:25,920
there are no clashes at all in the first

00:12:24,560 --> 00:12:28,959
place once

00:12:25,920 --> 00:12:30,480
uh it's it's like kind of sure that uh

00:12:28,959 --> 00:12:30,880
there'd be no clashes and you're good to

00:12:30,480 --> 00:12:32,959
go

00:12:30,880 --> 00:12:34,800
then i would just work on it backward

00:12:32,959 --> 00:12:35,600
the patch prepare a dead dip send it to

00:12:34,800 --> 00:12:38,320
the bts

00:12:35,600 --> 00:12:39,360
get an ack from the maintainer or from

00:12:38,320 --> 00:12:41,760
the uploader

00:12:39,360 --> 00:12:43,279
if if you think doesn't need to in case

00:12:41,760 --> 00:12:43,600
you think it's all good then you can

00:12:43,279 --> 00:12:45,920
just

00:12:43,600 --> 00:12:47,279
straight away ask for sponsorship and

00:12:45,920 --> 00:12:50,079
yeah i mean that is how

00:12:47,279 --> 00:12:51,200
team maintained packages work it is not

00:12:50,079 --> 00:12:54,000
anybody's

00:12:51,200 --> 00:12:55,200
uh duty to work on those packages it's

00:12:54,000 --> 00:12:57,440
just team maintained

00:12:55,200 --> 00:12:59,519
and anybody in the team can actually

00:12:57,440 --> 00:12:59,760
work on the fix i personally fix a bunch

00:12:59,519 --> 00:13:02,560
of

00:12:59,760 --> 00:13:04,560
uh cves for um team maintenance packages

00:13:02,560 --> 00:13:07,279
which i'm not even you know

00:13:04,560 --> 00:13:08,160
doing anything for so yeah that is how

00:13:07,279 --> 00:13:10,079
basically

00:13:08,160 --> 00:13:12,000
we manage the synchronization using the

00:13:10,079 --> 00:13:15,360
bds or mailing list or

00:13:12,000 --> 00:13:17,920
the ios gen yeah

00:13:15,360 --> 00:13:19,440
that does tell much about the debian

00:13:17,920 --> 00:13:21,600
culture we have like

00:13:19,440 --> 00:13:23,279
helping each other out in times of need

00:13:21,600 --> 00:13:26,720
and asking for help

00:13:23,279 --> 00:13:30,240
yeah moving on to the next question

00:13:26,720 --> 00:13:33,040
there is a question mark slight ot let's

00:13:30,240 --> 00:13:34,000
take that a little later another

00:13:33,040 --> 00:13:35,920
question says

00:13:34,000 --> 00:13:38,000
can we get a link of the pending or

00:13:35,920 --> 00:13:39,440
suspended packages you talked about in

00:13:38,000 --> 00:13:42,240
the talk

00:13:39,440 --> 00:13:43,519
um okay uh it's not suspended like this

00:13:42,240 --> 00:13:45,600
postponed packages

00:13:43,519 --> 00:13:47,279
all the bugs that are tagged as no tsa

00:13:45,600 --> 00:13:50,320
or uh postponed

00:13:47,279 --> 00:13:53,440
i will link to the security tracker

00:13:50,320 --> 00:13:55,680
um okay i'll just uh link it up

00:13:53,440 --> 00:13:57,600
and i'll also tell you the git correct

00:13:55,680 --> 00:14:00,399
command so it's more easier

00:13:57,600 --> 00:14:02,639
to investigate and now the tracker is

00:14:00,399 --> 00:14:05,199
getting updated it's it's like uh

00:14:02,639 --> 00:14:06,480
getting a new kind of a ui uh so the

00:14:05,199 --> 00:14:08,160
packages if you go to

00:14:06,480 --> 00:14:10,880
any package let's say you're interested

00:14:08,160 --> 00:14:14,720
in um a text editor

00:14:10,880 --> 00:14:17,600
called win uh tracker.debian.org

00:14:14,720 --> 00:14:19,120
you will see the no dsa pending issues

00:14:17,600 --> 00:14:20,720
or whichever package you'll see

00:14:19,120 --> 00:14:22,240
that the security name has mounted no

00:14:20,720 --> 00:14:25,279
dsa and you

00:14:22,240 --> 00:14:26,480
are safe to work on it and prepare a

00:14:25,279 --> 00:14:29,600
point update

00:14:26,480 --> 00:14:31,839
i'll just uh mention the link meanwhile

00:14:29,600 --> 00:14:33,040
we can probably go to the next question

00:14:31,839 --> 00:14:36,079
yeah you can like

00:14:33,040 --> 00:14:36,560
just start that link below the question

00:14:36,079 --> 00:14:40,399
yeah

00:14:36,560 --> 00:14:43,600
yeah so uh another question that says

00:14:40,399 --> 00:14:45,600
it is a follow-up is it having more

00:14:43,600 --> 00:14:46,720
packages for person one of the reason

00:14:45,600 --> 00:14:49,120
for the delay

00:14:46,720 --> 00:14:50,959
they've been need more packages uploaded

00:14:49,120 --> 00:14:54,800
is this the right way for

00:14:50,959 --> 00:14:57,360
like way forward i mean sure uh

00:14:54,800 --> 00:14:58,639
but you know i mean it's kind of um a

00:14:57,360 --> 00:15:01,680
trade-off i'd say

00:14:58,639 --> 00:15:03,600
um if let's say um praveen does a

00:15:01,680 --> 00:15:05,440
wonderful job making all the packages

00:15:03,600 --> 00:15:07,600
i have started to maintain a lot of

00:15:05,440 --> 00:15:09,600
packages now uh but you know

00:15:07,600 --> 00:15:11,360
having all the even if i'm an uploader

00:15:09,600 --> 00:15:15,199
to a bunch of packages i somehow

00:15:11,360 --> 00:15:16,720
miss the the kind of uh

00:15:15,199 --> 00:15:18,240
a notification that hey there's a

00:15:16,720 --> 00:15:20,800
security bug pending

00:15:18,240 --> 00:15:23,120
and often often uh at times that you

00:15:20,800 --> 00:15:26,160
know a security team reaches out to us

00:15:23,120 --> 00:15:26,720
hey this is um this is mark there's no

00:15:26,160 --> 00:15:28,480
dsa

00:15:26,720 --> 00:15:30,320
would it be it would be great if you

00:15:28,480 --> 00:15:33,279
could uh warrant a fix

00:15:30,320 --> 00:15:35,199
by a point of date or something or uh

00:15:33,279 --> 00:15:37,759
prepare a security fix whatever

00:15:35,199 --> 00:15:39,279
and uh it's good to be at least fixing

00:15:37,759 --> 00:15:43,040
unstable land testing

00:15:39,279 --> 00:15:44,880
so well basically what i mean is um

00:15:43,040 --> 00:15:46,480
i'm not sure if it's going to help if

00:15:44,880 --> 00:15:49,680
there'll be more

00:15:46,480 --> 00:15:50,160
uploaders per package or um something

00:15:49,680 --> 00:15:51,920
like that

00:15:50,160 --> 00:15:53,680
it's just that somebody needs to take

00:15:51,920 --> 00:15:54,959
care of um

00:15:53,680 --> 00:15:57,040
first of all somebody needs to be

00:15:54,959 --> 00:15:58,560
notified and it's it's kind of hard to

00:15:57,040 --> 00:15:59,839
keep track of all the packages

00:15:58,560 --> 00:16:01,839
if the number of packages the person

00:15:59,839 --> 00:16:02,720
maintains is high in case number of

00:16:01,839 --> 00:16:04,560
flexes are low

00:16:02,720 --> 00:16:06,480
you can always you know check the

00:16:04,560 --> 00:16:07,680
pending bugs here and there you can

00:16:06,480 --> 00:16:10,720
always use the

00:16:07,680 --> 00:16:11,360
umd or other other services that debian

00:16:10,720 --> 00:16:13,120
has

00:16:11,360 --> 00:16:15,360
to to ensure that there are no pending

00:16:13,120 --> 00:16:18,320
bugs every cve

00:16:15,360 --> 00:16:18,959
is for every cv the security team opens

00:16:18,320 --> 00:16:21,199
a

00:16:18,959 --> 00:16:22,959
bug on the bts for against the package

00:16:21,199 --> 00:16:24,639
so that's one way to

00:16:22,959 --> 00:16:27,120
uh look up the pending things that you

00:16:24,639 --> 00:16:28,720
have and you have your own personal umd

00:16:27,120 --> 00:16:31,199
where you can get the to-do list

00:16:28,720 --> 00:16:32,480
and you know you can work on it but in

00:16:31,199 --> 00:16:36,079
case you have like

00:16:32,480 --> 00:16:39,680
um let's say i think i have 300

00:16:36,079 --> 00:16:42,000
or something like that on my um qa page

00:16:39,680 --> 00:16:43,680
so if i generate a to-do for them it's

00:16:42,000 --> 00:16:45,120
going to be very very long

00:16:43,680 --> 00:16:46,959
and i you know it's very hard to

00:16:45,120 --> 00:16:49,279
prioritize sometimes so but

00:16:46,959 --> 00:16:50,560
in a way the number of uploaders per

00:16:49,279 --> 00:16:55,040
packages would help

00:16:50,560 --> 00:16:57,519
but i'm not sure to what extent honestly

00:16:55,040 --> 00:16:58,160
uh so there is a short question which

00:16:57,519 --> 00:17:00,959
says

00:16:58,160 --> 00:17:02,160
are all point updates only for security

00:17:00,959 --> 00:17:05,679
reasons

00:17:02,160 --> 00:17:08,559
um no uh the short answer is no uh

00:17:05,679 --> 00:17:10,240
all point updates include security fixes

00:17:08,559 --> 00:17:11,919
for sure i mean that's the main thing

00:17:10,240 --> 00:17:14,160
all the skill difficulties are included

00:17:11,919 --> 00:17:16,640
but let's say uh you know

00:17:14,160 --> 00:17:18,559
a package called certbot with its acme

00:17:16,640 --> 00:17:20,240
v2 api change you know

00:17:18,559 --> 00:17:21,679
uh it had to be updated so with the

00:17:20,240 --> 00:17:23,120
point of date otherwise

00:17:21,679 --> 00:17:25,919
you know all the certificates would be

00:17:23,120 --> 00:17:27,679
falling out so uh it was uh updated by a

00:17:25,919 --> 00:17:28,400
point of date it was not a security fix

00:17:27,679 --> 00:17:30,160
it was just

00:17:28,400 --> 00:17:31,520
uh to prevent the certificates from

00:17:30,160 --> 00:17:35,120
falling out uh

00:17:31,520 --> 00:17:37,520
a a repair was released

00:17:35,120 --> 00:17:39,440
for buster so a lot of times it happens

00:17:37,520 --> 00:17:42,480
that you know because of something

00:17:39,440 --> 00:17:43,280
uh or something or the other or an

00:17:42,480 --> 00:17:45,760
application

00:17:43,280 --> 00:17:46,559
uh kind of crashes and it's rendered

00:17:45,760 --> 00:17:49,280
unusable

00:17:46,559 --> 00:17:50,400
in the in the buster or whatever point

00:17:49,280 --> 00:17:53,200
uh or whatever

00:17:50,400 --> 00:17:53,600
release we're talking about so um all

00:17:53,200 --> 00:17:56,799
those

00:17:53,600 --> 00:17:59,280
fixes are uh issued a point of date

00:17:56,799 --> 00:18:00,000
for for that we work on a point of date

00:17:59,280 --> 00:18:02,960
if if it's

00:18:00,000 --> 00:18:03,919
very serious then we go by the security

00:18:02,960 --> 00:18:06,000
update that is

00:18:03,919 --> 00:18:07,919
uh altogether different story using

00:18:06,000 --> 00:18:10,000
buster security for buster and

00:18:07,919 --> 00:18:11,280
you know stable security that's the uh

00:18:10,000 --> 00:18:14,320
code name um

00:18:11,280 --> 00:18:15,200
of the archive but yeah basically in

00:18:14,320 --> 00:18:18,320
short no

00:18:15,200 --> 00:18:20,320
not all updates are for security uh

00:18:18,320 --> 00:18:21,280
these are for normal bugs important bugs

00:18:20,320 --> 00:18:23,440
that may arise

00:18:21,280 --> 00:18:24,400
uh due to some regression or something

00:18:23,440 --> 00:18:27,919
like that

00:18:24,400 --> 00:18:27,919
but um yeah that's the

00:18:28,080 --> 00:18:34,080
yeah that answers it well so we have

00:18:31,600 --> 00:18:37,280
time for the slight ot question

00:18:34,080 --> 00:18:40,160
so it says what work do you handle as an

00:18:37,280 --> 00:18:40,799
ftp training what's the basic workflow

00:18:40,160 --> 00:18:43,360
okay

00:18:40,799 --> 00:18:44,480
so i haven't been very active as a

00:18:43,360 --> 00:18:46,559
trainee now i mean

00:18:44,480 --> 00:18:47,919
um it was something that i used to work

00:18:46,559 --> 00:18:49,360
on um

00:18:47,919 --> 00:18:51,520
but right now i'm not getting enough

00:18:49,360 --> 00:18:54,640
time but what basically fd

00:18:51,520 --> 00:18:56,559
ftp trainee does is actually when

00:18:54,640 --> 00:18:58,320
you're often hear if you've been around

00:18:56,559 --> 00:19:01,360
in debian you'll often hear that the

00:18:58,320 --> 00:19:02,720
new queue has been growing ftp team did

00:19:01,360 --> 00:19:05,520
a wonderful job it

00:19:02,720 --> 00:19:06,559
almost got down to zero at some point i

00:19:05,520 --> 00:19:09,760
think or even

00:19:06,559 --> 00:19:10,000
just a single digit numbers and ftp team

00:19:09,760 --> 00:19:12,160
do

00:19:10,000 --> 00:19:13,440
is doing a wonderful job but anyway uh

00:19:12,160 --> 00:19:15,039
the number of uh

00:19:13,440 --> 00:19:17,919
packages that are uploading to the new

00:19:15,039 --> 00:19:19,520
queue are are a lot you know everyday

00:19:17,919 --> 00:19:21,039
or somebody is uploading something to

00:19:19,520 --> 00:19:24,320
the new queue so

00:19:21,039 --> 00:19:26,880
um to be able to process them there

00:19:24,320 --> 00:19:28,160
there are ftp masters and assistants but

00:19:26,880 --> 00:19:30,720
ftp training as a for

00:19:28,160 --> 00:19:31,600
the job for stp trainee is to like go

00:19:30,720 --> 00:19:34,799
through the package

00:19:31,600 --> 00:19:38,080
make sure the copyright uh files are

00:19:34,799 --> 00:19:40,080
correctly written if there is nothing

00:19:38,080 --> 00:19:41,360
wrong with the package some you know all

00:19:40,080 --> 00:19:45,039
the things that would

00:19:41,360 --> 00:19:46,000
um be problematic for a package to get

00:19:45,039 --> 00:19:48,799
accepted

00:19:46,000 --> 00:19:49,600
would be a job of the ftp trainee so

00:19:48,799 --> 00:19:52,799
what work

00:19:49,600 --> 00:19:55,520
i what exactly i worked on is i

00:19:52,799 --> 00:19:56,799
get the source of the uploader see if

00:19:55,520 --> 00:19:59,840
everything's up to date

00:19:56,799 --> 00:20:01,919
uh like all the all the copyrights have

00:19:59,840 --> 00:20:04,559
been mentioned the debian copyright file

00:20:01,919 --> 00:20:07,280
and uh none of them has has been missed

00:20:04,559 --> 00:20:09,760
or something like that are

00:20:07,280 --> 00:20:10,400
besides that i used to check if there is

00:20:09,760 --> 00:20:14,480
nothing

00:20:10,400 --> 00:20:16,159
uh non-dfsg compliant file or something

00:20:14,480 --> 00:20:16,640
that is there in the package because

00:20:16,159 --> 00:20:20,080
that's

00:20:16,640 --> 00:20:23,600
another major blocker that we see

00:20:20,080 --> 00:20:26,400
sometimes about people

00:20:23,600 --> 00:20:27,280
using generated files instead of like

00:20:26,400 --> 00:20:29,280
actually

00:20:27,280 --> 00:20:30,640
uh building it from source things like

00:20:29,280 --> 00:20:33,520
that happen all the time

00:20:30,640 --> 00:20:34,720
so yeah that is what i did but ftp team

00:20:33,520 --> 00:20:37,840
does a more rigorous

00:20:34,720 --> 00:20:40,080
uh kind of review

00:20:37,840 --> 00:20:42,720
and yeah that is why we are an ftp

00:20:40,080 --> 00:20:44,960
trainee and not uh

00:20:42,720 --> 00:20:48,000
like there are quite a hierarchy in the

00:20:44,960 --> 00:20:51,360
ftp where you can see

00:20:48,000 --> 00:20:52,240
like quite a tough work to do so we are

00:20:51,360 --> 00:20:54,880
almost

00:20:52,240 --> 00:20:56,159
up with the time and we are done with

00:20:54,880 --> 00:20:59,440
all the questions so

00:20:56,159 --> 00:21:02,960
hey yeah so

00:20:59,440 --> 00:21:03,520
thanks to kash for the talk and the q a

00:21:02,960 --> 00:21:05,840
part

00:21:03,520 --> 00:21:07,440
and thanks for being for the direction

00:21:05,840 --> 00:21:16,799
so see you around

00:21:07,440 --> 00:21:16,799

YouTube URL: https://www.youtube.com/watch?v=1Q9TJXugq-k


