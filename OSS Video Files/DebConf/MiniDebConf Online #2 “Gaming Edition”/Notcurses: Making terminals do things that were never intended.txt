Title: Notcurses: Making terminals do things that were never intended
Publication date: 2020-11-24
Playlist: MiniDebConf Online #2 “Gaming Edition”
Description: 
	by nick black

At: MiniDebConf Online #2 "Gaming Edition"
https://mdco2.mini.debconf.org/talks/6-notcurses-making-terminals-do-things-that-were-never-intended/

Notcurses 2 has recently (2020-10) been released, providing for the first time a stable, guaranteed API for this blingful character graphics library. Notcurses, sometimes described as "NCURSES and FFmpeg had a baby", is a TUI library with unique capabilities for multimedia, including streaming video support, the advanced Quadblitter, palette fades, and plane rotations. It is thus not unreasonable that developers might want to use it for terminal games (assuming that terminal games are a reasonable thing in the first place).

This short talk will cover the shortcomings of the X/Open Curses API and NCURSES (its most common instantiation), effective use of Notcurses and its advanced features, and a brief practicum involving the live coding of a terminal game.

BLING BLING.

Room: Main
Scheduled start: 2020-11-22 17:30:00
Captions: 
	                              so                               welcome back everybody to our next talk                               with nick black not curse                               making terminals do things that were                               never intended                               and let me introduce himself quickly                               nick is a lifelong                               athlete he began programming on atari                                                                                                     no one around to tell him better                                develop an idiosyncratic unorthodox                                style involving more inline assembly                                and literary allusions that strictly                                necessary                                or perhaps even justifiable                                he has since graduated several times                                from georgia institute of technology                                and drop out almost as many times as                                approaching                                   he still managed to code about                                         a day                                every day ideally those three of the day                                starts marrying them                                influence he hopes to warn they                                destroy the sun he lives in mid                                town atlanta with a puffy penguin and                                several orca                                nick exclusively use black ibn mode                                m track points                                                   and will happily buy on any chart you                                might have playing around                                flat flat lag so enjoy it                                hello there mini debkov                                             nick black from atlanta georgia                                and i'm here to talk about terminal                                gaming for better or worse uh with my                                character graphics library nut curses                                or vaughn dpl jonathan carter reached                                out to me and asked if i'd want to talk                                about not curses in a gaming context                                uh now i am not a gamer uh i beat ned                                hack in the may of                                     after about                                                          that's enough for me uh                                i'm of compilers and hpc background i'm                                an old school systems programmer                                uh i did work at nvidia but it was                                entirely in a compiler's context                                um i worked in a system programmer i've                                developed a few two e's and just wanted                                to push things a bit further                                than where you can with uh increases now                                knock curses actually started with some                                pallet fade routines i submitted                                to and had rejected from n curses um and                                a year later it's grown into something                                pretty unique and powerful                                but what's the relevance to gaming well                                in my opinion not curse is the only game                                in town if you want serious graphics                                work in the terminal                                but while one want to game in the                                terminal well uh it allows running over                                ssh                                and without extra weyland uh the                                dependency chain is probably going to be                                shorter than any serious gui application                                you know about stop gtk or kde or                                wx widgets pretty small uh yeah you                                might have existing text-based games and                                using not curses you can make them pop                                with images and video and effects                                uh the myriad widgets built into not                                curses can allow you to really quickly                                whip up an interface for a game that you                                might want to do so                                um having decided to do some thermal                                gaming                                why wouldn't we just use the old                                workhorse that is and curses uh                                the curses api is everywhere                                x to h-pucks to                                honeywell terminals to honeybee                                terminals to hazelton terminals uh                                everything's there um uh it's well                                tested                                and what more really is to say about                                terminals after all these years well for                                one although it has some extensions                                and curses is bound to the almost                                   year old curses api i think                                around                                                               came out                                i feel about as old as a hacksaw can be                                myself and i am not as old as curses                                uh curses preceded                                                     uh curse is preceded in                                                                                            um and it is a messy library uh global                                 variables no namespaces or even identify                                 prefixes i i submitted a zfx patch                                 uh last year because they had a                                 parameter named lions which collides                                 with the global variable from term.h                                 uh curses doesn't specify its                                 interaction with multiple threads                                 and uh it's support for it wasn't                                 designed with parallelism in mind it's                                 unicode support is piecemeal                                 limited uh the maximum egc length is                                 fixed and increases compiled time                                 it's built around a baroque index color                                 pair systems anybody who's done serious                                 and cursive programming has to admit                                 there's a lot to be desired                                 it's a phenomenal implementation thomas                                 c dickey's fantastic maintainer but                                 showing its age                                 uh great many successors curses i track                                 several dozen in a project repository                                 documents i haven't examined them all                                 but none of them had both c multimedia                                 capabilities                                 and being implemented a top term info um                                 and some people want to bring up six all                                 uh six hole                                 on linux is not really supported much                                 anywhere that one would use outside of                                 extern                                 it's not to the best of my knowledge of                                 vte alacrity kitty console                                 rst in fact kitty has its own graphics                                 protocol but we also do not support that                                 one in the back end                                 if you rely on sexual it's difficult to                                 naturally fall back                                 to other blitters                                 so let's talk about the not curses                                 drawing model which is inspired by                                 curses                                 and not be pretty familiar to anybody                                 who's done any graphical work or                                 honestly even just thought about how one                                 might we've got a user visible rendering                                 area                                 that can change size at any time um at                                 least in a terminal emulator and windows                                 environment since we're writing a stream                                 of characters to this terminal                                 overriding or underwriting will just                                 mess up our concept of geometry rather                                 than being catastrophic                                 uh when we render we solve for each cell                                 the rendering area and then compare each                                 one to the cell that was last written to                                 that coordinate if they're different we                                 update the last frame                                 and our terminal all our drawing is done                                 on virtual rectilinear areas known as nc                                 planes                                 the standard plane which comes by                                 default cannot be destroyed rotate                                 spindled folded mutilated or moved                                 is always sized in place to match the                                 visible area                                 other places other planes can be                                 manipulated pretty freely um each plane                                 belongs to one and only one stack                                 the standard plane is always part of the                                 main stack only the main stack is                                 rendered                                 there is this total z ordering on the                                 planes of the stack planes are made up                                 of cells in which glyphs are printed a                                 glyph might take multiple cells                                 but only integer multiples ideally and                                 we'll see where that breaks down                                 sometimes                                 in addition to a glyph each cell can                                 have an independent foreground color an                                 independent background color                                 and an independent style the style can                                 be you know bold italic combination that                                 is blank                                 those are terminal limited but most                                 support a pretty standard set taken from                                 ekma                                                                    of these three channels can                                 independently be transparent                                 and in addition the colors can be                                 translucent so here's a bit more                                 detail visual representation in the                                 lower right over here we see the z-axis                                 of the main stack                                 um here we have four planes standard                                 plane and three user created ones                                 in addition the knot curses context has                                 its plane containing the current concept                                 of the visible area                                 over there on the lower left um each                                 plane is backed by a cell matrix a                                 rectilinear array of cell structs                                 um in the code that's sometimes referred                                 to as a frame buffer uh finally while                                 our unicode utcs can usually be in line                                 directly into a cell structure                                 longer agencies must be spelled out to                                 the backing egc pool                                 there's one of these per plane they can                                 grow to                                              uh that comes from a                                                that's inlined into that uh                                 cell struct um another data structure                                 we'll see a lot of our nc visuals which                                 are basically rgba pixel arrays                                 loaded from file or memory or even from                                 a plane actually                                 um and these can be they are not                                 associated with a particular plane                                 but they can be blitted onto one or more                                 uh for each one of those visuals                                 um so that is what supports                                 entire not curses uh context                                 and there's going to be one not versus                                 context per terminal                                 on which you are operating um yeah uh it                                 might be worth to take a moment to                                 talk about egc pools versus gcs every                                 uh unicode character currently defined                                 can be utf-                                          in four bytes or fewer an egc                                 cannot necessarily uh be defined in four                                 or fewer bytes                                 but any single character can so this                                 seems pretty solid                                 we can rock with what are the problems                                 well first off um our resolution the                                 total number of effective pixels is                                 garbage                                 uh my monitor here is uh three four                                 forty by fourteen forty                                 uh mid nineties svga was                                            um and your friend nintendo                                 entertainment system introduced in                                      did roughly                                                       depending who you talk to                                 um a typical terminal geometry might be                                 say                                                                 curses can give you                                 twice or more effective resolution in                                 both dimensions                                 uh but you'll never have the broad vista                                 of a pixel frame buffer now with that                                 said the super nintendo                                 has essentially the same resolution as                                 the nes at that                                         in its default modes but it looked much                                 much better and this was due to the                                 super nintendo's ability                                 to use many more colors at once uh we                                 have three full                                                          our disposal                                 so let's not embarrass ourselves we're                                 drawing with your regular asymmetric                                 glyphs and we can't get information                                 about whether the appropriate glyphs can                                 even be rendered                                 let alone how they might combine or                                 their precise shape now here's an                                 example of this a very real font problem                                 this is a bit of a worst case but it did                                 come up naturally during knock kirsten's                                 development                                 let's draw the five wide unicode                                 characters circled number                                                on black square one after the other uh                                 we might assume this would consume                                 five times n columns probably n equals                                 two ten                                 and they'll be evenly spaced well no we                                 we can't assume that at all                                 our world is a wretched one alacrity                                 printed nothing                                 kitty printed characters much smaller                                 than most uh x term                                 just printed empty boxes vt generated an                                 unreadable mess                                 console slightly overlapped each just                                 wrong enough to be almost completely                                 useless                                 uh suckless terminal got it right so                                 good job suckless terminal                                 um by the way this is way better than                                 any of them were doing                                 six months ago by the way uh you can go                                 take a look at knock curses                                 issue                                                             finished in august                                 uh to see how this whole messy endeavor                                 went down                                 it was unpleasant um so how do we take                                 an rgba visual                                 and render itself uh nutcraces offers                                 several glitters each using different                                 set of glyphs to                                 affect different geometries without                                 utf-                                                         the only meaningful method is to use a                                 space per pixel uh set the background to                                 the pixel color this has aspect ratio                                 problems                                 and it minimizes our effective                                 resolution we only get what the terminal                                 offers us                                 one step up is the method of half blocks                                 this is kind of the state of the art                                 you see it in mpv's tct output uh viu                                 the rest program                                 uh someone pops up on reddit about once                                 a week having invented it                                 uh this gives you a perfect one                                 one-to-one aspect ratio and lossless                                 pixel representation you have two colors                                 and you're representing two pixels uh                                 now curses offers two blurs beyond this                                 that i haven't seen anywhere else                                 the quad blitter uses unicode quadrant                                 glyphs uh the upper and lower half                                 blocks of the previous splitter and the                                 left and right half blocks                                 sex splitter uses the new sextant glyphs                                 of unicode                                    for three times the effect of vertical                                 resolution and twice the effect of                                 horizontal resolution                                 usually these are going to be superior                                 to the half block blitter but they do                                 fundamentally lerp between pixels in                                 certain configurations                                 and thus lose information if you have a                                 minimal number of colors                                 they are going to be the best choices                                 that you can proceed with                                 right now                                                            there's bad fonts for sections                                 if we make the font small enough uh we                                 can of course effectively use pixels                                 that's cheating though you can't read                                 glyphs at this size so you lose your                                                                                                         than using a proper pixel interface like                                 opengl                                 so this isn't really too useful in                                 practice with that said we can do some                                 pretty cool                                 concept with this setup here's uh                                 nestopia playing through knock graces                                 so what i've done here is i've gone                                 ahead and shrunk my font down to i think                                 four point                                 uh i've patched up nestopia to uh use                                 not curses as it splitter                                 i'm using the ng blit bgrx routines as                                 its core                                 and works pretty well but again                                 kind of kind of                                 now i don't want to just walk you                                 through the manual pages of which there                                 are complete set by the way                                 uh so let's go ahead and build a little                                 something no you know in the words of                                 the judge of                                 cormac mccarthy's blood ready and see                                 what manner of thing we have                                 here um so we've got uh                                               minutes                                 and we got a terminal uh i've already                                 grabbed some media that we're going to                                 use for our little experiment                                 and uh thought about what i wanted to do                                 but had not actually uh coded it up                                 and uh so watch you might learn                                 something and you can laugh at my                                 mistakes and uh                                 i'll be annotating this providing live                                 commentary                                 as we go so without further ado                                 here is deb warrior so i've grabbed                                 seven media files from various places                                 we've got four                                 four frame animated gifs from final                                 fantasy                                                             cycle when facing the four distinct                                 cardinal directions                                 we've got our deb warrior logo that you                                 just saw which is just the uh warrior                                 from                                 from dragon warrior along with the                                 debian squirrel uh from final fantasy                                 one we've got the bitmap for warmack and                                 the overworld map                                 at                                                     uh final fantasy was of course the last                                 fantasy from square enix                                 a company from which we never heard                                 again note that all these images                                 save the overworld map have transparent                                 backgrounds which is critical                                 bitmaps plus transparencies sprites                                 so uh it's ideal and almost critical for                                 not curses to run in a utf-                                              that means that a utf-                                                  generated and made available                                 on debian that's uh via d package                                 reconfigure locales                                 and that the lang environment variable                                 has been properly defined to reference                                 it                                 this is generally done by your installer                                 nowadays but be prepared to have to                                 handle this yourself                                 in eg a minimal docker environment                                 if you're not getting good blending                                 results this is almost always your                                 problem                                 uh usually almost every crc plus plus                                 program might be calling set locales                                 first line or very soon after                                 despite it being                                                        don't seem to know this                                 now curses will call set local for you                                 if it detects an encoding other than                                 utf-                                  and you haven't provided the flag                                 inhibiting this behavior that doesn't                                 help if no good locales exist                                 or if you don't happen to have one                                 specified in lang here we're going to go                                 ahead and let knock curses handle things                                 for us and move directly onto the knot                                 curses and nick call                                 now not curses and it determines whether                                 or not it's actually talking to a                                 terminal since you could be                                 for instance redirecting to a file or                                 any number of other things                                 and if so it initializes the term info                                 database based on your term environment                                 variable                                 this is the second aspect of your                                 environment that needs to be properly                                 set up                                 and by that i mean your user's                                 environment without a terminal variable                                 or                                 more knowingly with an incorrect one not                                 curses won't know the proper protocol to                                 speak                                 to your terminal not of your terminal's                                 capabilities now if your term                                 is x term if your term variable is x                                 term you need to be running x term                                 if your term is vta                                                    be on a physical vt                                        you're probably not so you need to be                                 picking the correct                                 term variable for the actual terminal                                 emulator that you're running not curses                                 is more sensitive to this than many                                 other applications                                 because it makes such aggressive use of                                 the terminal if you're getting weird                                 craft or strange errors                                 but things mainly seem to work the term                                 variable is one of the first things to                                 check                                 so as mentioned before uh nc visuals are                                 rgba bitmaps that we can load                                 from various sources we're going to use                                 nc scale stretch here to use the                                 entirety of the target plane's area when                                 we blit down to it                                 there's also nc scale none which blitz                                 the source bit perfectly                                 and nc scale scale which retains aspect                                 ratio while otherwise scaling as large                                 as possible                                 given the target plane and these uh                                 scalings are performed barley the                                 multimedia library either ffmpeg or                                 openimageio                                 [Music]                                 they can shrink an image since they're                                 bound by the target plane's size                                 we'll use nc scale none with our                                 overworld map and that means it's                                 actually going to be                                                 cells if we were using uh one to one                                 scale                                 one to one blending far larger than what                                 we could ever fit onto our terminal                                 for our intro logo however we want the                                 terminal area all of it                                 no more no less we're going to fade this                                 logo in over the course of a second                                 we're reloading a great many textures or                                 doing other large scale work                                 we'd like they want to start a                                 background thread to begin those tasks                                 during                                 this fade but nothing we're going to do                                 here in deb warrior is likely to incur                                 any perceivable latency                                 so we don't bother when the fade ends we                                 throw up a prompt                                 and uh then wait for the user to press                                 enter                                 while we're waiting it's important to                                 note that we're not doing any work                                 there's no need to constantly render                                 frames                                 and we won't be incurring any cpu load                                 so let's go ahead and prepare our                                 overworld map                                 we're going to request the sex splitter                                 via nc blitz                                     but we might not be able to use it uh                                 for instance we might be in an ascii                                 only environment                                 due to lang not being said um or some                                 other reason                                 are in a situation where the font                                 support is known to be lacking                                 for instance the linux console uh                                 there's a flag that can cause                                 nc visual render to fail out if we can't                                 get the desired bladder but in the name                                 of flexibility we want to continue to                                 work even integrated fashion so we'll                                 forgo that                                 unfortunately we're going to need to                                 refer to some absolute locations on the                                 map                                 uh the first example would be initial                                 placement of our player character                                 and we don't know exactly how many                                 target cells mapped to a source pixel                                 since we don't know ahead of time                                 exactly which glitter we're going to get                                 uh the nc visual                                 geom uh call remedy is the segment so it                                 lets us know exactly how many pixels                                 rendered media will require                                 and the ratio of source to destination                                 um if we get nc                                 blitz                                                                                                                                    i mean                                                                                                                                    means our                                                  is going to be                                                           uh meanwhile our                                                       graphs then become eight columns wide                                 and five and one third rows tall now can                                 you write one                                 third of a row uh no you can you cannot                                 uh but not curses manages the                                    occlusion of stacked planes for you and                                 the results of what you'd expect so if                                 we are                                 only taking a that top third of a cell                                 uh with our player character                                 the bottom two thirds are going to be                                 the color that is assigned by a lower                                 plane                                 um in a real game we'd almost certainly                                 not be loading the map as an image                                 for any number of reasons it would be                                 more useful to store tiles and then                                 index regions into those tiles                                 one reason would be file size especially                                 given the                                                               which final fantasy was sold                                 let's do some quick analysis overworld                                 map is composed from                                                                                              leading to a world that's                                              the side                                 that's                                                            um there are no more than                                              titles                                 tiles making up uh this map so the bike                                 per pixel                                 uh remember nes was pallet index color                                 that's                                                          of tile indexing uh                                                      for a total of about                                                     bitmap                                 would be                                                                 megabytes using a four bit pallet um the                                                                    via                                                                    the actual png we're loading                                 is about                                                              png                                 as either a                                                           the true bitmap size                                 or                                                                      situation specific compression scheme                                 we'll be showing hit points and any                                 other stats that we want to maintain                                 for this limited proof of concept just                                 hit points uh                                 at all times we're going to go ahead and                                 keep them at their own plane up the top                                 and we'll call update stats whenever we                                 need to change that                                 up uh since the stat change would almost                                 always be going along with some other                                 action                                 we don't go ahead and render within                                 there so it's not going to                                 come up uh leave by whatever call                                 now for celes remember that we have four                                 distinct files                                 uh each of them has a four frame                                 animated gif of the walk cycle                                 in one of four directions if you                                 remember the player definition from up                                 above                                 uh we'll read each one of these files                                 into its own nc visual                                 and create for each one of those nc                                 visuals in nc plane so each nc visual                                 will be rendering to one plane only                                 uh only one at a time is going to be                                 above the map z axis-wise                                 the other three will remain below it and                                 will be invisible to the user uh                                 other ways we can manage that would be                                 uh keeping them off screen i                                 uh to the above and to the left of the                                 origin of the visible area                                 um we could use one unified plane for                                 all four visuals and uh                                 blend each one onto there racing each                                 time pride probably was the best way to                                 do it                                 um would save memory as well uh r move                                 them onto their own stacks the ones                                 which aren't being used uh stacks were                                 added late and not cursive development                                 uh the last two options would                                 technically be the most efficient                                 but the difference for three planes                                 especially small planes                                 is going to be almost certainly                                 negligible uh why that is comes down to                                 details of the rendering algorithm                                 if you can uh proceeding down through                                 the various planes                                 from the upper left to the lower right                                 finding saw                                 cells that haven't been solved yet uh                                 anything that is below                                 an opaque plane that spans the entirety                                 of the visual area                                 is never going to be rendered because by                                 that point all cells have been solved                                 uh something that's above into the left                                 is going to be looked at but then the                                 cells aren't going to be selected                                 since they're not meaningful for the                                 rendering area and something that                                 software's on stack is never going to                                 get rendered                                 touched by rendering at all uh center                                 plane uh like we're doing here                                 we just need to go ahead and get the                                 dimensions of the                                 plane that we're centering it on and the                                 dimensions of the plane we're centering                                 we divide both by two and subtract the                                 ladder from the former                                 easy peasy uh technically that nc plane                                 dim yx wasn't necessary given that i did                                 the nc dimms inline right after                                 uh causing any problems it's all good                                 [Applause]                                 once we've initialized everything our                                 main input loop is going to be based                                 around a pretty simple                                 uh idea of render the next frame of the                                 player's walking cycle                                 then wait for a navigation key to come                                 in we'll support the arrow keys as well                                 as the vi keys                                 not curses also provides support for                                 mice so if you want to enable some kind                                 of rts style                                 mouse driven movement around the map                                 that wouldn't be difficult at all                                 so first we're going to call the load                                 celes function                                 that we just find above one that loads                                 the nc visuals and nc planes                                 um now we need to figure out where she                                 is going to go                                 on this map you know what that means                                 bring out the so the new image                                 manipulation tool                                 now like the real final fantasy we're                                 going to want to                                 stick her immediately south of castle                                 canaria                                 um we get the coordinates adjust them                                 for the player size                                 scale them by the blitters                                             really ought to have scaled                                 her dimensions by                                                        and we're going to place the map                                 according to this location                                 we're never actually moving celes who                                 always remains at the center of the                                 screen                                 we're simply moving the map behind her                                 the map's coordinates are almost always                                 going to be negative values                                 since when it's at the visual areas                                 origin we're at the very northwest                                 corner of the map                                 when it's at its minimum values position                                 wise um and those would be two                                 substantial negative numbers                                 that's when we are at the southeast                                 corner have these                                 and we are at the center of the map                                 so we've got uh this map y i'm going to                                 go ahead and do something very similar                                 for map                                 x taking these initial uh coordinates                                 and                                 once again it's the ones we've pulled                                 and then we modify them by the actual                                 player character size                                 once we've uh done that we're going to                                 want to move the map to its starting                                 location                                 we are going to want to go ahead and set                                 her direction variable                                 up to be facing down that's where she's                                 looking at the beginning                                 we then bring that appropriate plane up                                 to the top above the map                                 and we're going to do a render to                                 initially set things up before we get                                 the first pair                                 we just press enter the screen's been                                 shown and now we start                                 going ahead and actually getting a                                 interaction from the user                                 so uh what are we going to do in the                                 guts of this input loop well first take                                 the character                                 the plane that we just rendered move it                                 down to the bottom this isn't going to                                 be immediately reflected                                 because we don't have a render call                                 there uh and once the input is processed                                 we're going to move the map to its next                                 location we're going to advance the                                 player by uh which you see we're going                                 to uh                                 take the proper glyph and bring it up to                                 the top and update stats and all that                                 check to see if we're in a battle                                 situation and at the very end render now                                 our input loop is uh                                 going to be a six way loop uh q is                                 handled to                                 exit the game uh other than that we're                                 going to need four of them for each                                 direction that we can be                                 moving in uh each one is going to change                                 the map                                 coordinates and set the direction                                 variable appropriately                                 um now as you're going to see here i                                 have again failed the scale by                                                                                                          using the consonants                                                 from the uh                                 player glyph size our player sprite size                                 rather                                 had three and two not have been                                 available this would lead to some                                 problems we would be moving too                                 far or too little for each input strip                                 so that's an error on my part                                 got it afterwards um so it goes                                 uh now these boundary conditions are                                 going to need to be checked                                 once we've done this uh update uh we're                                 going to need to check to see                                 whether we are greater than                                           than uh                                 the maximum map size and here once again                                 i've screwed up and uh you can see i                                 used uh the hard coordinates of negative                                                                      and uh that is just fundamentally broken                                 gives them                                 that uh if we get three by two we are                                 not going to have                                                      to have uh                                                                                                          here                                 and furthermore not really an error but                                 an inefficiency                                 really should have gone ahead and put                                 these boundary checks                                 up in the appropriate conditionals                                 rather than at the bottom                                 if we've just moved up from a valid                                 location we can't have moved                                 left off the screen as a result of that                                 so we're executing a bit more                                 conditional code than we need to                                 you'll also note that we check for nc                                 key resize that's what we get                                 when the sig winch signal that's a                                 signal window change has been handled                                 uh knock kisses installs the fault                                 handler for sig winch and then when it                                 sees that the terminal has been resized                                 we get that input key so that we know we                                 should probably go ahead and update                                 our concept of the screen geometry and                                 that's exactly what we do                                 not curse's refresh also then repaints                                 the screen uh                                 knowing the correct new geometry so                                 that's what that did now advanced player                                 which we called from below                                 nc visual decode loop this is used to                                 get the next frame if we're                                 taking a left and then another left and                                 another left so we're not changing which                                 plane is at the top                                 we want to be iterating through those                                 four frames of her walking cycle                                 that's exactly what nc visual decode                                 loop does it uh takes you down through                                 the last one                                 and then takes you back to the first if                                 you call it again so we go ahead and                                 move the new one to the top after                                 decoding it                                 we update our stats and now let's go                                 ahead and try build and you get to watch                                 me                                 mess around for a minute as i fix up                                 various syntax errors and other                                 stupidities i didn't include the uh                                 not curses uh overall context struct                                 inside player like i had meant to                                 so it is this will be a bit painful to                                 watch                                 but as said while i'm not providing this                                 commentary live                                 the coding was done all in one shot                                 you're seeing everything i did                                 so                                 read the man page figure out what's                                 going on                                 don't worry it's pretty short                                 oh yeah need to actually erase that and                                 then                                 actually call render that's why we're                                 getting an unused variable so                                 thank you compiler for catching that for                                 us it's much appreciated                                 go ahead and do the render the erase is                                 necessary because even though it has a                                 transparent background                                 uh if you just tried to re-render any                                 pixels that are not are not covered by                                 the new one                                 since it's transparent they're not going                                 to be updated and eventually you would                                 have kind of a                                 a snow angel you would have the maximum                                 set of glyphs that any frame in the                                 walking cycle had touched                                 so small detail but an important one                                 all right so we need to go ahead and                                 change that from an nc visual                                 to an nc plane and i believe following                                 that we are back in business                                 we'll just have a missing function and                                 we'll proceed from there                                 all right here we go                                 so now that we can hopefully render and                                 move around on the map surface let's go                                 ahead and implement overworld battles                                 again given time constraints we'll be                                 working at a proof of concept level so                                 let's go ahead and assign a                                         probability                                 of encountering an enemy in a real game                                 this would likely be dependent on our                                 location                                 and the composition of the enemies would                                 meeting surely would uh we're just going                                 to deal with                                 one static enemy here the much feared                                 warmack                                 if you played the original final fantasy                                 i think you had a                                         chance of encountering him on your way                                 across the bridge                                 in tiamats sky castle um                                 maybe not i mean that's uh i believe                                 what the window power                                 strategy guide informed us of anyway um                                 so we're going to load up his bitmap                                 after making a copy of the map and we're                                 going to set that copy to grayscale                                 so that doesn't distract from the fight                                 scene but it still gives us you know                                 localized background where we were it's                                 not                                 jarring when we switch back and forth                                 from it uh since this copy is going to                                 be opaque and atop the map plane                                 the ladder will be entirely obscured by                                 the former uh and once the fight is done                                 we'll destroy this copy of the plane and                                 be right back where we started                                 we want the enemy to take up about three                                 quarters of the total height of the                                 screen                                 so uh here i'm gonna divide out by four                                 and multiply by three                                 i should have done those in the reverse                                 order to achieve higher accuracy                                 and kind of obviously see how that                                 happened given that c                                 throws away any uh decimal part when it                                 does integer division                                 um oh well uh so it goes uh                                 we're going to set up the enemies the                                 enemy planes base                                 base cell transparent now the base cell                                 is used in rendering calculations                                 whenever the plane is otherwise                                 undefined                                 so this will ensure that our irregularly                                 shaped enemy doesn't obscure the                                 background and it's wrecked the linear                                 plane                                 where it needs it                                 [Applause]                                 [Applause]                                 [Applause]                                 [Applause]                                 [Applause]                                 [Applause]                                 [Applause]                                 [Applause]                                 our primary control for battle mode will                                 be a scrolling action                                 selector on the bottom left uh for now                                 we are going to go ahead and define four                                 actions that we can take                                 we can cast a spell we can vomit                                 intensely                                 we can run away r as one does when                                 encountering strange mechanisms of                                 unknown danger we can package it in the                                 aur                                 now we define our selector options up                                 using the title action                                 and create the selector using these                                 options in our decline plane                                 by now you probably see a pattern we                                 create and configure a plane                                 we define options for a more complex                                 structure we associate that structure                                 with the plane                                 and uh then we render we've done it with                                 nc visuals and                                 now we're doing it within c selectors                                 and this is done a lot when writing in                                 uh not curses programs there are of                                 course many other things one can do with                                 planes                                 you know as you've seen turning strings                                 to them format it up but uh                                  free flow laid out output etc                                  but this is what we're doing when we                                  work with the more complex widgets                                  we go ahead and set the base character                                  for our selector and also for the main                                  dialog in c plane plot p                                  to black and almost black they're going                                  to be opaque so that they're easier to                                  read even if they're primarily text                                  with everything set up                                  [Applause]                                  [Applause]                                  [Applause]                                  [Applause]                                  [Applause]                                  [Applause]                                  [Applause]                                  [Applause]                                  [Applause]                                  [Applause]                                  we move into the battle loop proper                                  where we're going to loop until our                                  player runs out of                                  hp and the car defeats the dreaded mech                                  now since our player isn't actually                                  going to be able to inflict damage in                                  this proof of concept                                  there's really only one sad way out for                                  them so                                  here again we're going to have an input                                  loop and this is our first use                                  of uh an offer input function here nc                                  selector                                  offering in this case uh essentially                                  since we're driving the input loop                                  ourselves and we don't want rendering                                  going on while we're messing with the                                  context                                  we've got a handle input that's intended                                  for widgets like the selector                                  we can hand code it all by ourselves and                                  that is exactly what we would do if we                                  wanted to customize the behavior of the                                  widget                                  but instead we can just gracefully offer                                  up the input to the widget itself                                  and see if it wants to handle it so we                                  don't need to do anything                                  this achieves all of our scrolling etc                                  within the selected                                  all we handle is the nc key enterprise                                  enterprise                                  and we handle all of them the same way                                  the action is an effective                                  fyl in a real implementation of course                                  we would uh                                  we then query the nc selector for which                                  one was currently selected                                  and then perform some action specific to                                  that                                  [Applause]                                  [Applause]                                  uh following this more mac texas each                                  round with uh fearsome nuke                                  and we update our stats possibly dying                                  along the way                                  [Applause]                                  [Applause]                                  [Applause]                                  so let's build                                  [Applause]                                  [Applause]                                  [Applause]                                  [Applause]                                  [Applause]                                  so there you have it uh we just built                                  you know the backbone at least of a uh                                  nintendo super nintendo quality game                                  runs entirely in uh posix terminal and                                  it worked uh didn't take too long to                                  build i hope you enjoyed that                                  and i hope you build something with it                                  um future directions                                  in not curses uh you know i started this                                  a year ago november                                            it's been a good year but other things i                                  still want to do to it                                  one the biggest annoyance i feel when                                  developing is geometry changes that can                                  come from nowhere                                  and they're annoying to deal with i'd                                  like to get us to where we can almost                                  automatically handle all of them uh by                                  using the reflow text engine we can then                                  just reflow it if                                  planes are declared as aligned relative                                  to others we can handle that                                  automatically and i want to move to a                                  declarative model for kind of a old                                  visual basic model almost                                  uh to make programming easier and handle                                  that better                                  i want to convert rgb rgb uh escapes are                                  about                                                  um whereas a palette index tends to only                                  be one byte                                  um and where we are using fewer than                                      colors i'd like to squash all the rgb                                  down into a palette program that                                  and then use the lower bandwidth                                  equivalent i'd like to handle input a                                  bit better                                  um supporting pty in a pty where                                  basically we can run another                                                                                                           gamma correction                                  maybe um and i'd like to improve on our                                  current painters algorithm just to                                  improve speed but really performance is                                  pretty great                                  uh you can average around uh on my                                  computer at least four thousand to five                                  thousand                                  frames per second far better than any                                  actual output device that's out there                                  so i'll now take questions this uh                                  presentation has been dedicated to                                  thomas dickey the                                  long-suffering maintainer of x-ven                                  curses the next term                                  um he writes curb engineering history go                                  read his facts                                  go for it what questions you got thank                                  you for having me here debian                                  wendy thanks a lot for your talk nick it                                  was impressive                                  i hope you enjoyed yes absolutely so now                                  let's go to our questions the first one                                  is does not curses work correctly in                                  screen                                  chemics as they override term more                                  generic values that no longer match the                                  actual terminal                                  scream and tmux are somewhat annoying so                                  i've actually got a document in the                                  repository                                  terms.md which uh goes through all the                                  various uh terminals that i test with                                  and gets into what they can support                                  what's walking on them                                  uh screen and tmux are certainly                                  challenges we do not look as good in                                  them as i would like to                                  and uh how exactly to overcome that                                  is an interesting question as as you say                                  they do rewrite the term                                  and they rewrite it to one that's pretty                                  downgraded uh i believe that only screen                                                                                                           true color                                  if you're using screen                                                    is the one shipped in debian unstable at                                  the moment                                  then you're only going to get a much                                  more limited color palette                                  whether we could reach beyond there is                                  doubtful given that they are going to be                                  reinterpreting                                  control sequences that we send to them                                  so i'm not                                  not exactly sure what we can best do in                                  them they're still not the worst                                  uh the linux the linux console the true                                  virtual console                                  has even less impressive capabilities                                  than your typical generic                                  screen now one thing that not curses is                                  going to do                                  soon is implement what i call pty and a                                  pty                                  whereas much like screen we are going to                                  be uh opening up                                  a dynamic a uh term that then will be                                  dynamically populated and we will be                                  able to map                                  into the one that we are actually                                  connected to and that will be useful for                                  instance if you want to run                                  one program that uses end curses or not                                  curses within another one that's ppy and                                  pty                                  uh whether or not that's going to work                                  as well as i would hope i'm unsure the                                  test program will be i want to take                                  linux perf and i want to be able to run                                  a program inside of a not curses window                                  get live perf                                  sampling and be able to do histograms                                  and such as it's going so                                  hey here are your branch missed                                  predictions by time here your l                                         misses by time                                  we'll see how it goes                                  okay the next one we are impressed by                                  the speed                                  intensity as you called during this                                  session                                  when you say you code                                                 every day                                  is it usually like this or do you                                  sometimes                                  work at a more relaxed place too no that                                  is about opto sir                                  you don't oftentimes get to work with a                                  library that you have been not only that                                  you're not only the author of but have                                  been spending almost all of your free                                  time on for the past year                                  uh i don't think that i could code much                                  anything else that quickly                                  most of my professional day is spent at                                  microsoft                                  trying to deal with uh everything                                  microsoft throws at me and it doesn't go                                  that quickly at all i assure you                                  um as for whether it was sped up uh i                                  used caden live to make this                                  the setting on that was uh                                      uh it had a slight speed up in order to                                  cut it down into the format                                  uh so i believe that as opposed to                                     minutes                                  it was something like uh around                                           uh right up there i wasn't trying to uh                                  brag with typing speed i was just trying                                  to get                                  something pumped out uh so                                  uh yeah i think that answers your                                  question                                  yeah um follow up uh did you speed up                                  the coding clip at all                                  yeah that's what i was saying it was set                                  at                                      in caden live so uh i think it now it                                  was                                                           i think it was between                                               normally i also cut out i think a four                                  minute section of nothing going on                                  me answering my front door that was cut                                  out                                  that was the editing that went into it                                  got it okay does it have mouse support                                  it absolutely does uh not only does it                                  have mouse support                                  it has it in both uh the linux console                                  and x                                  uh uses if you have gpm set up in the                                  linux console                                  that's the uh general protocol mouse i                                  believe is what that stands for                                  uh not only can you use it in full                                  screen mode but uh there we didn't talk                                  about this but there's                                  what i call direct mode which is a line                                  oriented one i kind of call it stylizing                                  your printf                                  that's when you don't want to you still                                  want to use standard i o but you want to                                  be able to color it or                                  do other things i even support a mouse                                  in that environment                                  so yeah you've got mouse everywhere uh                                  if you do scroll wheel                                  it supports that um yeah pretty much                                  anything that can come over an x input                                  device and be measured in                                  coordinates yes and uh there's not cur                                  sorry you ask yes and finally                                  is a not curious rose create which other                                  programming languages                                  are support yeah the rest crate is due                                  to my uh spanish                                  comrade jose lewis he is a great guy and                                  he's done a real good job with that                                  i was uh i was trying to do it first but                                  he stepped in and did a great job                                  uh there's a c-plus plus wrapper by my                                  microsoft comrade uh                                  from poland habersack uh similarly done                                  really well                                  i asked him i hate i just want a very                                  thin wrapper on top of this                                  i want both an exception and a                                  non-exceptions mode                                  and he came back with it done pretty                                  much perfectly there is also                                  a python wrapper that i implemented that                                  is not very good i'm not a python                                  expert and uh it's not code that i'm                                  proud of                                  uh thankfully i got a pr about a week                                  ago uh                                  from a russian friend and it is a much                                  better python implementation mine was                                  based on cfi                                  his is based on a different method i                                  can't                                  recall it right now but hopefully that's                                  going to be merged in and you should see                                  that in the next release                                  as for other rappers i uh i will welcome                                  any that want to come in whether you                                  want them in                                  the main not curses repository or to run                                  system repository                                  uh i accept maybe not even let java in                                  why not more than merrier i'm not                                  writing it                                  okay um our last question any                                  interesting games applications that are                                  using not courses                                  so i had two uh large end curses                                  programs that i'd written this decade                                  one is uh                                  one just went into debian actually it's                                  uh called grow light and it's a visual                                  block device file system editor                                  uh there's uh one that is not in debian                                  and isn't i'd say really ready for                                  general use uh call them follows                                  uh it's a network enumeration domination                                  tool                                  so both of those reported over to knock                                  curses uh and they were kind of                                  motivated for getting it done                                  i was very excited recently to see that                                  there's another debian package uh                                  smd a sound editor by a fellow out in                                  stanford and uh                                  that is using not curses aside from that                                  there's probably i mean i do news                                  searches for it regularly so i see                                  people who are picking it out                                  uh the                                                              flexing in terms of api and so                                  while so a few brave people signed on i                                  kind of said hey you might want to wait                                  until                                      when that stabilizes up so i'm hoping                                  and you know it's also a chicken and egg                                  problem of is it out in the distribution                                  so now that it's getting out there                                  i'm hoping to see people pick it up if                                  they don't                                  then they shan't uh but yeah um i'm                                  working later on a sdr uh program                                  that'll use nut curses                                  uh sdr software defined radio if you                                  want to run it remotely which one often                                  times does it's tremendous amount of                                  data to bring back                                  you typically want to do your                                  visualization on another server if you                                  can                                  but hey with x                                                            tend to work well outside of the land                                  so hoping to do something there that                                  will improve that situation for people                                  right thanks a lot nick thanks for                                  having me debian                                  you
YouTube URL: https://www.youtube.com/watch?v=i_6OYkXTF-U


