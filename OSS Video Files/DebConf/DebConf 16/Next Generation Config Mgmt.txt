Title: Next Generation Config Mgmt
Publication date: 2017-12-05
Playlist: DebConf 16
Description: 
	by James Shubin

At: Debconf 16 video RSS feed
https://debconf16.debconf.org/
Room: Menzies 10
Scheduled start: 2016-07-04 17:15:00
Captions: 
	00:00:02,669 --> 00:00:07,919
so there's this piano music so no one's

00:00:06,089 --> 00:00:09,840
really ever heard of it I guess I guess

00:00:07,919 --> 00:00:12,090
alright so my godmother used to play

00:00:09,840 --> 00:00:15,809
this piano music for me that's not her

00:00:12,090 --> 00:00:17,520
she has much older hands and she used to

00:00:15,809 --> 00:00:19,289
play this piano music and no one ever

00:00:17,520 --> 00:00:21,570
heard of it and when she died I kept the

00:00:19,289 --> 00:00:23,550
sheet music and I tried to see if I

00:00:21,570 --> 00:00:25,439
could find a copy or something and I

00:00:23,550 --> 00:00:27,060
couldn't so I actually put in I scanned

00:00:25,439 --> 00:00:29,760
in the sheet music and I put a copy on

00:00:27,060 --> 00:00:32,969
Wikipedia and six months later people

00:00:29,760 --> 00:00:34,950
started actually posting copies of the

00:00:32,969 --> 00:00:36,600
sheet music different versions on eBay

00:00:34,950 --> 00:00:39,270
and so I think what actually happens is

00:00:36,600 --> 00:00:41,430
people search on eBay and say does this

00:00:39,270 --> 00:00:44,190
on Google choose me or abductive or

00:00:41,430 --> 00:00:45,750
whatever people search on on the

00:00:44,190 --> 00:00:47,640
internet and see if they find the music

00:00:45,750 --> 00:00:50,100
and if so then they put it up for sale

00:00:47,640 --> 00:00:51,390
so after six months all these people

00:00:50,100 --> 00:00:53,190
started putting this music on the

00:00:51,390 --> 00:00:55,199
internet I started buying up all these

00:00:53,190 --> 00:00:56,940
coffees so I'm now actually the world's

00:00:55,199 --> 00:01:00,000
largest collector of this weird piece of

00:00:56,940 --> 00:01:03,899
piano music so in case you want a copy

00:01:00,000 --> 00:01:06,750
just ping me yeah who's the minutes

00:01:03,899 --> 00:01:09,450
person in the back did you

00:01:06,750 --> 00:01:12,060
I also brought big stuff like that just

00:01:09,450 --> 00:01:14,189
to wake you up is everyone awake all

00:01:12,060 --> 00:01:17,490
right I guess I'll start people like

00:01:14,189 --> 00:01:18,840
what didn't expect this just forever is

00:01:17,490 --> 00:01:20,850
doing the video feed

00:01:18,840 --> 00:01:22,740
most of the stuff can happen on the on

00:01:20,850 --> 00:01:23,790
the screen in a terminal so you probably

00:01:22,740 --> 00:01:26,549
don't want to see me you probably want

00:01:23,790 --> 00:01:29,369
to see the screen and I might sit down a

00:01:26,549 --> 00:01:30,960
bit so just to type so actually this

00:01:29,369 --> 00:01:32,640
desk is pretty cool I think there's an

00:01:30,960 --> 00:01:36,780
up and down button for the desk

00:01:32,640 --> 00:01:41,159
somewhere oh so cool it's like a

00:01:36,780 --> 00:01:45,689
spaceship whenever you're ready I'm

00:01:41,159 --> 00:01:47,490
happy to start cool so apologies

00:01:45,689 --> 00:01:49,350
everyone I have a bit of a cough but I'm

00:01:47,490 --> 00:01:51,509
very excited to be her my name is James

00:01:49,350 --> 00:01:53,159
I go by purple idea on the internet I

00:01:51,509 --> 00:01:56,189
work for Red Hat I will talk about that

00:01:53,159 --> 00:01:58,140
shortly because this is Deb conf and I

00:01:56,189 --> 00:02:00,450
just want to really thank the organizers

00:01:58,140 --> 00:02:02,790
for having me I'm like my first Devcon

00:02:00,450 --> 00:02:04,979
and really want to reach out to the

00:02:02,790 --> 00:02:08,759
d-beam community and so thanks for

00:02:04,979 --> 00:02:10,920
having here Who am I I'm a hacker I'm a

00:02:08,759 --> 00:02:12,270
config management architect at Red Hat I

00:02:10,920 --> 00:02:13,030
have no idea what that means but I hack

00:02:12,270 --> 00:02:15,069
on hack

00:02:13,030 --> 00:02:16,090
said I'm an engineering not a marketing

00:02:15,069 --> 00:02:16,660
guy so I'm not trying to sell you

00:02:16,090 --> 00:02:18,760
anything

00:02:16,660 --> 00:02:21,190
there was no product today and I write

00:02:18,760 --> 00:02:22,780
technical blog who's read my technical

00:02:21,190 --> 00:02:24,760
blog or seen it before just raise your

00:02:22,780 --> 00:02:27,190
hand if you haven't just raise your hand

00:02:24,760 --> 00:02:29,650
anyway so I'll know your look really

00:02:27,190 --> 00:02:30,670
popular I'm actually physiologist by

00:02:29,650 --> 00:02:32,739
training and I don't know what it is

00:02:30,670 --> 00:02:35,319
what with all these like non computer

00:02:32,739 --> 00:02:36,489
people hacking on computers but it's

00:02:35,319 --> 00:02:38,830
true so if you want to talk about

00:02:36,489 --> 00:02:40,330
cardiology or venous return or advanced

00:02:38,830 --> 00:02:43,180
stuff please let me know and I'm a big

00:02:40,330 --> 00:02:45,430
fan of DevOps so if you've seen my blog

00:02:43,180 --> 00:02:48,420
or seen some my past work you might be

00:02:45,430 --> 00:02:50,590
familiar with some of my puppet hacks

00:02:48,420 --> 00:02:52,870
yeah you do keep the audio up I have

00:02:50,590 --> 00:02:54,519
like random sounds this is beaker

00:02:52,870 --> 00:02:57,070
screaming because everything is on fire

00:02:54,519 --> 00:02:58,810
so I started hacking on puppet kind of a

00:02:57,070 --> 00:02:59,890
while ago I think I got pretty good at

00:02:58,810 --> 00:03:02,980
it and I wanted to build some pretty

00:02:59,890 --> 00:03:04,959
advanced things so I started writing

00:03:02,980 --> 00:03:07,569
some really outrageous code I started

00:03:04,959 --> 00:03:08,800
showing this off I think around 2013 did

00:03:07,569 --> 00:03:11,050
you know you can actually do recursion

00:03:08,800 --> 00:03:12,940
in puppet raise your hand if you knew

00:03:11,050 --> 00:03:14,260
this you don't want to do this this is

00:03:12,940 --> 00:03:16,030
not good the codes at the bottom if you

00:03:14,260 --> 00:03:17,950
really find out why this was just a like

00:03:16,030 --> 00:03:20,860
can I do recursion and puppet turns out

00:03:17,950 --> 00:03:22,720
you can sometimes you actually want and

00:03:20,860 --> 00:03:24,940
I know this sounds wrong but in fact you

00:03:22,720 --> 00:03:26,709
actually mathematically need to run

00:03:24,940 --> 00:03:28,810
puppet again and you preferably want to

00:03:26,709 --> 00:03:30,340
do it sooner so you can actually do this

00:03:28,810 --> 00:03:32,170
crazy thing which I invented the codes

00:03:30,340 --> 00:03:34,000
again at the bottom where you decide

00:03:32,170 --> 00:03:36,250
when you want if you want puppet to run

00:03:34,000 --> 00:03:38,380
again and you actually exact a Python

00:03:36,250 --> 00:03:41,799
program which double Forks and watches

00:03:38,380 --> 00:03:43,209
the parent puppet process till it ends

00:03:41,799 --> 00:03:46,239
then waits a number of minutes and runs

00:03:43,209 --> 00:03:48,190
again right is this is this nice no this

00:03:46,239 --> 00:03:49,630
is pretty nasty you can build timers to

00:03:48,190 --> 00:03:52,060
do similar sorts of things so you might

00:03:49,630 --> 00:03:54,609
want to say startup dr BD cluster

00:03:52,060 --> 00:03:56,200
syncing wait an hour and then change the

00:03:54,609 --> 00:03:57,940
resync rate for something for production

00:03:56,200 --> 00:03:59,560
so you can do weird stuff like this kind

00:03:57,940 --> 00:04:01,720
of nasty and you can actually even build

00:03:59,560 --> 00:04:03,070
finite state machines in puppet I swear

00:04:01,720 --> 00:04:05,290
I actually did this please check the

00:04:03,070 --> 00:04:06,970
code but I really don't recommend this

00:04:05,290 --> 00:04:08,530
so the real question is is this the

00:04:06,970 --> 00:04:11,019
right way to build sort of advanced

00:04:08,530 --> 00:04:12,370
complicated things come on wake up or

00:04:11,019 --> 00:04:15,670
I'll throw fire you

00:04:12,370 --> 00:04:18,459
okay so this guy has the answer can you

00:04:15,670 --> 00:04:22,720
see the screen okay yeah he has the nope

00:04:18,459 --> 00:04:29,680
and he's just like nope this is my nope

00:04:22,720 --> 00:04:32,620
guy and yeah all his nope alright so

00:04:29,680 --> 00:04:34,000
eventually I had to think about this and

00:04:32,620 --> 00:04:36,100
I thought about all the designs and

00:04:34,000 --> 00:04:38,050
things and I sat down I said I just need

00:04:36,100 --> 00:04:40,080
to write something new and unfortunately

00:04:38,050 --> 00:04:43,090
really bad at naming but I'm calling it

00:04:40,080 --> 00:04:45,400
MGMT it turns out there's some weird

00:04:43,090 --> 00:04:48,220
band called MGMT which I'm not really

00:04:45,400 --> 00:04:50,050
into more of a hip-hop guy but if you

00:04:48,220 --> 00:04:52,990
search for MGMT config it's it's much

00:04:50,050 --> 00:04:54,639
more findable just a really quick thing

00:04:52,990 --> 00:04:56,680
that I wanted to just say because I

00:04:54,639 --> 00:04:57,550
heard like the occasional most people

00:04:56,680 --> 00:04:59,380
were being excellent here and actually

00:04:57,550 --> 00:05:00,790
in everything's great but I want to talk

00:04:59,380 --> 00:05:03,250
about this Red Hat versus deviant thing

00:05:00,790 --> 00:05:05,380
really briefly so um there's really no

00:05:03,250 --> 00:05:07,630
Red Hat versus Debian vs. canonical

00:05:05,380 --> 00:05:09,280
thing this is mostly Internet garbage

00:05:07,630 --> 00:05:10,900
from like trolls and people that are

00:05:09,280 --> 00:05:12,550
trying to divide free software and the

00:05:10,900 --> 00:05:14,110
real thing I don't want you all

00:05:12,550 --> 00:05:15,520
remembers it's really red hat and Debian

00:05:14,110 --> 00:05:18,850
everyone else writing free software

00:05:15,520 --> 00:05:20,650
against proprietary software and at

00:05:18,850 --> 00:05:22,150
least that's the way I see it we're like

00:05:20,650 --> 00:05:24,160
9,000 employees so I'm sure there's

00:05:22,150 --> 00:05:25,960
different views I'm personally a huge

00:05:24,160 --> 00:05:27,130
fan of the Debian project I tried to

00:05:25,960 --> 00:05:29,229
find out when I first started using

00:05:27,130 --> 00:05:30,280
Debian but it was a really long time ago

00:05:29,229 --> 00:05:32,260
I don't remember

00:05:30,280 --> 00:05:36,280
I don't always run devian I mean my

00:05:32,260 --> 00:05:38,560
laptops running Fedora but nonetheless

00:05:36,280 --> 00:05:41,320
it's very important and my project I've

00:05:38,560 --> 00:05:43,810
specifically designed it to be feature

00:05:41,320 --> 00:05:46,570
complete and have feature parity on both

00:05:43,810 --> 00:05:48,070
fedora and Debian from day one so

00:05:46,570 --> 00:05:50,139
there's no like here's the initial

00:05:48,070 --> 00:05:51,849
Fedora stuff and if you want it to work

00:05:50,139 --> 00:05:54,970
on deviance and the patches everything

00:05:51,849 --> 00:05:56,979
that goes in works on both - maybe the

00:05:54,970 --> 00:05:59,320
odd bug or something but if so you know

00:05:56,979 --> 00:06:01,660
let me know and and free software is

00:05:59,320 --> 00:06:03,220
actually it's important thing for us at

00:06:01,660 --> 00:06:05,349
this conference and I really believe

00:06:03,220 --> 00:06:07,270
that config management is critical for

00:06:05,349 --> 00:06:09,550
that because config management is what

00:06:07,270 --> 00:06:11,800
makes the software usable especially on

00:06:09,550 --> 00:06:13,270
servers and also desktops and also

00:06:11,800 --> 00:06:15,820
secure so if you don't have the energy

00:06:13,270 --> 00:06:17,260
to manage your servers properly you can

00:06:15,820 --> 00:06:19,000
have just bugs and people poni your

00:06:17,260 --> 00:06:20,740
stuff just because of laziness so if you

00:06:19,000 --> 00:06:23,650
have good automation tools I think this

00:06:20,740 --> 00:06:25,840
helps I'm gonna get this make sense yeah

00:06:23,650 --> 00:06:26,680
you guys are so sleeping who's shy just

00:06:25,840 --> 00:06:28,780
raise your hand if you're real

00:06:26,680 --> 00:06:31,449
sigh and I won't pick on you alright

00:06:28,780 --> 00:06:32,560
good excellent so I me actually get

00:06:31,449 --> 00:06:34,360
pretty technical but I'm just going to

00:06:32,560 --> 00:06:36,009
give you a little intro of the tool so

00:06:34,360 --> 00:06:38,350
if you're not familiar with config

00:06:36,009 --> 00:06:39,850
management last one who's familiar with

00:06:38,350 --> 00:06:42,970
the existing sort of config management

00:06:39,850 --> 00:06:45,280
and who's not who's not ok so it's

00:06:42,970 --> 00:06:47,759
pretty almost zero the video guys I

00:06:45,280 --> 00:06:50,770
think may be playing but yeah so

00:06:47,759 --> 00:06:52,180
basically in config management typically

00:06:50,770 --> 00:06:53,770
you have some sort of graph so a

00:06:52,180 --> 00:06:57,300
resource graph that expresses some

00:06:53,770 --> 00:07:00,280
dependencies between the resources and

00:06:57,300 --> 00:07:01,509
they run and so on my tool is a bit

00:07:00,280 --> 00:07:03,400
different and I'm going to show you the

00:07:01,509 --> 00:07:04,810
main three differences so the first

00:07:03,400 --> 00:07:06,699
thing is that it runs the whole resource

00:07:04,810 --> 00:07:09,130
graph in parallel this is different from

00:07:06,699 --> 00:07:10,389
normal tools the second thing is

00:07:09,130 --> 00:07:12,580
event-driven I can tell you what that

00:07:10,389 --> 00:07:14,530
means shortly and the third one is it

00:07:12,580 --> 00:07:16,840
runs as a distributed topology so

00:07:14,530 --> 00:07:17,830
distributed systems and Paxos and raft

00:07:16,840 --> 00:07:19,419
and these sort of things are actually

00:07:17,830 --> 00:07:21,280
quite possible and quite advantageous

00:07:19,419 --> 00:07:23,889
today so we're gonna show you how that

00:07:21,280 --> 00:07:26,320
works in a moment so just the first

00:07:23,889 --> 00:07:28,690
thing so this is basically how a

00:07:26,320 --> 00:07:30,669
resource graph it in puppet or MGMT

00:07:28,690 --> 00:07:31,930
would look and if you look here can you

00:07:30,669 --> 00:07:34,780
see this ok on the screen with the red

00:07:31,930 --> 00:07:37,000
arrows so the blue blobs each represent

00:07:34,780 --> 00:07:39,250
a resource say a package to be installed

00:07:37,000 --> 00:07:42,070
a service to start to stop a file to set

00:07:39,250 --> 00:07:44,500
up and so on and the the black arrows

00:07:42,070 --> 00:07:46,210
are the resources yes come on be with me

00:07:44,500 --> 00:07:47,470
so I know if you're lost let me know

00:07:46,210 --> 00:07:49,090
there'll be a bit of time of questions

00:07:47,470 --> 00:07:52,360
but don't be shy if you're really really

00:07:49,090 --> 00:07:53,560
lost and and actually so what current

00:07:52,360 --> 00:07:54,669
tools actually do is they look at this

00:07:53,560 --> 00:07:56,770
graph and they use something called a

00:07:54,669 --> 00:07:58,419
topological sort which is basically this

00:07:56,770 --> 00:08:02,199
red arrow it just says ok I'm gonna do 1

00:07:58,419 --> 00:08:04,659
2 3 4 then 5 kind of arbitrary 6 and

00:08:02,199 --> 00:08:06,759
then 7 but in fact we could actually do

00:08:04,659 --> 00:08:08,020
this so if you look at this whole the

00:08:06,759 --> 00:08:09,460
left side of the graph and the right

00:08:08,020 --> 00:08:10,930
side of graph it actually run in

00:08:09,460 --> 00:08:14,080
parallel together because there's no

00:08:10,930 --> 00:08:15,909
dependencies right a lot about you all

00:08:14,080 --> 00:08:17,560
right getting better warming up the

00:08:15,909 --> 00:08:19,630
little chilli in South Africa but we're

00:08:17,560 --> 00:08:22,060
getting there but in fact also this left

00:08:19,630 --> 00:08:24,070
side here if you look once 1a is

00:08:22,060 --> 00:08:26,320
finished you can run these two both in

00:08:24,070 --> 00:08:28,360
parallel and then this one will wait for

00:08:26,320 --> 00:08:29,740
them both to finish and then run cool so

00:08:28,360 --> 00:08:33,060
this is sort of possible you want to see

00:08:29,740 --> 00:08:36,940
a demo alright let's see a demo ok so

00:08:33,060 --> 00:08:39,310
find the demo ok so what I'm gonna do

00:08:36,940 --> 00:08:39,880
I'm gonna show you this example so this

00:08:39,310 --> 00:08:41,919
is just

00:08:39,880 --> 00:08:44,350
say a package that takes ten seconds to

00:08:41,919 --> 00:08:45,639
install this is just simulated something

00:08:44,350 --> 00:08:47,319
some service thing that takes ten

00:08:45,639 --> 00:08:48,940
seconds to start off or do something and

00:08:47,319 --> 00:08:51,430
some other command that takes ten

00:08:48,940 --> 00:08:53,259
seconds and this guy over here takes 15

00:08:51,430 --> 00:08:54,610
seconds to run so if we run this how

00:08:53,259 --> 00:08:57,910
long should it take if it's running in

00:08:54,610 --> 00:08:59,290
parallel thirty seconds exactly if it

00:08:57,910 --> 00:09:02,980
wasn't running in parallel it would take

00:08:59,290 --> 00:09:05,740
take longer so we'll go here it's not

00:09:02,980 --> 00:09:06,880
big enough for you to see okay so we're

00:09:05,740 --> 00:09:09,009
gonna actually just we're gonna time

00:09:06,880 --> 00:09:16,899
this so I've just compiled a fresh

00:09:09,009 --> 00:09:18,279
version from get turn that down so this

00:09:16,899 --> 00:09:19,810
is basically the thing it's gonna run

00:09:18,279 --> 00:09:21,880
it's gonna start up some back-end stuff

00:09:19,810 --> 00:09:23,350
that works and it's all contained and

00:09:21,880 --> 00:09:26,800
just to time this we're actually going

00:09:23,350 --> 00:09:28,569
to run this converged time out option

00:09:26,800 --> 00:09:30,490
equals five so what's gonna happen it's

00:09:28,569 --> 00:09:31,690
gonna run and once this the graph is in

00:09:30,490 --> 00:09:34,779
a converged State that means

00:09:31,690 --> 00:09:36,699
everything's done it will time up to

00:09:34,779 --> 00:09:38,529
five seconds and after five seconds of

00:09:36,699 --> 00:09:42,040
being conversion will quit so the whole

00:09:38,529 --> 00:09:44,050
run should take about exactly so let's

00:09:42,040 --> 00:09:46,240
run this boom so it starts up some stuff

00:09:44,050 --> 00:09:48,189
and then right here at the bottom you

00:09:46,240 --> 00:09:50,199
can see here's that that first one

00:09:48,189 --> 00:09:52,029
running okay it's running this check

00:09:50,199 --> 00:09:55,180
apply and that 15 second one is over

00:09:52,029 --> 00:09:57,670
here so ten seconds go by boom it

00:09:55,180 --> 00:09:59,949
finishes right here and the second thing

00:09:57,670 --> 00:10:01,959
starts running five seconds later that

00:09:59,949 --> 00:10:04,810
second parallel one right is running if

00:10:01,959 --> 00:10:06,490
you can see at the bottom five more

00:10:04,810 --> 00:10:09,850
seconds later the second thing ends and

00:10:06,490 --> 00:10:13,779
that last one that third thing at the

00:10:09,850 --> 00:10:16,240
bottom of the graph starts up eight nine

00:10:13,779 --> 00:10:19,240
ten seconds are up that finishes one two

00:10:16,240 --> 00:10:20,860
three four five nothing's happened the

00:10:19,240 --> 00:10:23,860
whole thing ends and you can see the

00:10:20,860 --> 00:10:25,149
whole tool run in about 36 seconds so

00:10:23,860 --> 00:10:27,100
there's really really very little

00:10:25,149 --> 00:10:28,720
overhead to the software I'm I've added

00:10:27,100 --> 00:10:31,569
a whole bunch of new features so used to

00:10:28,720 --> 00:10:33,819
run in like 30 5.0 something but now

00:10:31,569 --> 00:10:35,589
there's more going on so really

00:10:33,819 --> 00:10:37,930
very little overhead anyone completely

00:10:35,589 --> 00:10:40,509
missed what just happened don't be shy

00:10:37,930 --> 00:10:43,350
let me know do you like this this is a

00:10:40,509 --> 00:10:45,670
good idea why didn't we do this before I

00:10:43,350 --> 00:10:46,899
don't know I thought this was and and if

00:10:45,670 --> 00:10:48,189
you really didn't want to run something

00:10:46,899 --> 00:10:50,290
in parallel there's nothing that says

00:10:48,189 --> 00:10:51,850
you can't have a walk that says only run

00:10:50,290 --> 00:10:53,500
up to so many operations at a certain

00:10:51,850 --> 00:10:56,260
time but yeah so that's the base

00:10:53,500 --> 00:10:58,240
thing you can do some complex graphs

00:10:56,260 --> 00:10:59,650
like this if you want to see a demo of

00:10:58,240 --> 00:11:00,880
this or other ones at the bottom we can

00:10:59,650 --> 00:11:04,530
show at the end but I want to move on

00:11:00,880 --> 00:11:07,150
okay so the second second aspect is is

00:11:04,530 --> 00:11:10,060
the event based nature so what we

00:11:07,150 --> 00:11:12,610
actually do have a nice picture if you

00:11:10,060 --> 00:11:15,340
think about how normal systems run they

00:11:12,610 --> 00:11:16,450
start up like say puppet or starts up it

00:11:15,340 --> 00:11:19,570
runs through the whole graph checks

00:11:16,450 --> 00:11:21,640
applies everything and ends and 30

00:11:19,570 --> 00:11:23,050
minutes later it starts again right goes

00:11:21,640 --> 00:11:25,150
through the whole thing 30 minutes later

00:11:23,050 --> 00:11:26,980
again so you're wasting resources over

00:11:25,150 --> 00:11:29,050
and over and what happens if something

00:11:26,980 --> 00:11:31,360
changes on your system or you want to

00:11:29,050 --> 00:11:33,640
make a change in between that 30 minutes

00:11:31,360 --> 00:11:35,950
when it's sleeping what's gonna happen

00:11:33,640 --> 00:11:37,900
nothing you're not gonna know until you

00:11:35,950 --> 00:11:40,060
re hit and it runs as oh now I'm paying

00:11:37,900 --> 00:11:41,830
attention again so an MGMT we actually

00:11:40,060 --> 00:11:43,960
do something different we actually start

00:11:41,830 --> 00:11:45,670
up we run we go through everything but

00:11:43,960 --> 00:11:47,800
we actually take a watch on each

00:11:45,670 --> 00:11:50,130
resource that we're doing so for example

00:11:47,800 --> 00:11:53,350
for files you have some examples here

00:11:50,130 --> 00:11:55,420
for files we actually take an eye notify

00:11:53,350 --> 00:11:57,430
watch for services we look at system the

00:11:55,420 --> 00:11:59,560
events and so on so we actually watch

00:11:57,430 --> 00:12:02,350
that resource and the second it changes

00:11:59,560 --> 00:12:04,330
boom we fix that resource and because we

00:12:02,350 --> 00:12:06,250
run in parallel we can only will need to

00:12:04,330 --> 00:12:10,300
fix the parts of the graph that need to

00:12:06,250 --> 00:12:11,530
be fixing and for packages for example

00:12:10,300 --> 00:12:13,120
use package get events and that's

00:12:11,530 --> 00:12:14,710
actually one of the ways and one of the

00:12:13,120 --> 00:12:17,080
reasons we use package kit because it

00:12:14,710 --> 00:12:19,839
gives us events on if someone changes

00:12:17,080 --> 00:12:23,440
the package state watching the RPM DB in

00:12:19,839 --> 00:12:25,690
Debian file databases and and also it's

00:12:23,440 --> 00:12:28,500
it's fully compatible with Debian and

00:12:25,690 --> 00:12:30,430
Fedora and so on so you want to demo

00:12:28,500 --> 00:12:31,480
alright let's see a demo this demo is

00:12:30,430 --> 00:12:34,690
cool

00:12:31,480 --> 00:12:36,970
alright so so what I'm gonna do I'm

00:12:34,690 --> 00:12:38,260
going to show you a little example so

00:12:36,970 --> 00:12:40,000
right now the DSL for this language

00:12:38,260 --> 00:12:42,339
doesn't exist so I just have a raw graph

00:12:40,000 --> 00:12:45,520
just to show you so I have 3 files slash

00:12:42,339 --> 00:12:48,940
temp MGMT f1 f2 f3 that I want to create

00:12:45,520 --> 00:12:51,910
and each one has contents I am f1 I'm f2

00:12:48,940 --> 00:12:54,640
i'm f3 make sense i also have one more

00:12:51,910 --> 00:12:56,830
file here IM f4 and it has the state

00:12:54,640 --> 00:12:57,910
absent so f4 should not be present or

00:12:56,830 --> 00:13:00,940
the other three should and have a

00:12:57,910 --> 00:13:03,900
certain defined contents alright so

00:13:00,940 --> 00:13:03,900
we're just going to run the tool

00:13:08,610 --> 00:13:12,519
okay so I'm gonna run this here on the

00:13:10,749 --> 00:13:15,879
left but just so you can see what's

00:13:12,519 --> 00:13:17,230
happening I'm going to go here and make

00:13:15,879 --> 00:13:18,279
this directory just so you can see

00:13:17,230 --> 00:13:19,629
there's nothing in it these are where

00:13:18,279 --> 00:13:22,569
the files are gonna appear so I'm gonna

00:13:19,629 --> 00:13:25,119
run this on the left and boom so we go

00:13:22,569 --> 00:13:27,579
here and before I can do anything

00:13:25,119 --> 00:13:29,769
LS there's three files here cool make

00:13:27,579 --> 00:13:31,929
sense we can actually cat them and see

00:13:29,769 --> 00:13:34,119
that in fact the contents are real but

00:13:31,929 --> 00:13:36,790
we can actually even just remove f2 and

00:13:34,119 --> 00:13:38,829
LS and boom it's already back right so

00:13:36,790 --> 00:13:40,629
you can actually remove f2 and it's back

00:13:38,829 --> 00:13:45,850
but that's kind of annoying so we can

00:13:40,629 --> 00:13:47,649
actually remove f2 and cat f2 and boom I

00:13:45,850 --> 00:13:49,240
mean this is have you ever seen a

00:13:47,649 --> 00:13:50,920
command worked this way so on the right

00:13:49,240 --> 00:13:52,480
we're gonna just mess with the system

00:13:50,920 --> 00:13:53,559
and on the Left I don't know if you

00:13:52,480 --> 00:13:55,899
noticed but the system is actually

00:13:53,559 --> 00:13:57,670
noticing and responding but this is kind

00:13:55,899 --> 00:13:59,230
of manual and I know you all love

00:13:57,670 --> 00:14:03,160
automation and scripting so I can

00:13:59,230 --> 00:14:04,360
actually watch - end 0.1 and this is

00:14:03,160 --> 00:14:05,860
just a command that's gonna run

00:14:04,360 --> 00:14:08,589
something over and over again as fast as

00:14:05,860 --> 00:14:11,110
possible and as fast as I run it on the

00:14:08,589 --> 00:14:13,120
right it's always noticing and oops

00:14:11,110 --> 00:14:19,749
killed my mic and fixing it on the left

00:14:13,120 --> 00:14:21,249
there is a question yes microphone the

00:14:19,749 --> 00:14:25,809
question plays isn't that super scary

00:14:21,249 --> 00:14:30,399
well yeah you like to change your

00:14:25,809 --> 00:14:32,529
question that's fair if you get it wrong

00:14:30,399 --> 00:14:36,009
yeah can't do it something listening

00:14:32,529 --> 00:14:37,809
just absolutely so this is you this is a

00:14:36,009 --> 00:14:39,610
feature which i think is beneficial for

00:14:37,809 --> 00:14:41,439
a lot of reasons this is just one and

00:14:39,610 --> 00:14:42,999
some more advanced resources will make

00:14:41,439 --> 00:14:44,949
use of this too but if you don't like

00:14:42,999 --> 00:14:46,660
this instant sort of thing you can run

00:14:44,949 --> 00:14:49,120
this in puppet mode if you want you can

00:14:46,660 --> 00:14:52,799
have it run startup converge and 30

00:14:49,120 --> 00:14:52,799
minutes later run in Khurana ghin

00:14:56,970 --> 00:15:00,610
obviously yeah those are things that you

00:14:59,199 --> 00:15:02,860
can add of course but this is just

00:15:00,610 --> 00:15:04,990
showing you the the best sort of fast

00:15:02,860 --> 00:15:06,970
mode and this is actually going to be

00:15:04,990 --> 00:15:10,019
quite important for later in the talk so

00:15:06,970 --> 00:15:10,019
yeah another quick question

00:15:12,189 --> 00:15:16,850
everyone just suddenly said wow this is

00:15:14,449 --> 00:15:19,759
possible and go there it seems to me

00:15:16,850 --> 00:15:20,839
like if you get it wrong then it's just

00:15:19,759 --> 00:15:24,139
you have to fix it a different way

00:15:20,839 --> 00:15:26,089
instead of fixing it by removing the

00:15:24,139 --> 00:15:29,870
file you fix it by changing the yamo

00:15:26,089 --> 00:15:31,009
file didn't instead of so he's he's

00:15:29,870 --> 00:15:32,569
saying it's worrying that if you get it

00:15:31,009 --> 00:15:35,899
wrong you can't just remove it and get

00:15:32,569 --> 00:15:39,319
rid of it yeah but you can still change

00:15:35,899 --> 00:15:41,300
the input obviously so actually in fact

00:15:39,319 --> 00:15:43,189
when you update your config the tool

00:15:41,300 --> 00:15:45,170
actually can notice automatically that

00:15:43,189 --> 00:15:47,209
you have new config and fix it right

00:15:45,170 --> 00:15:49,490
away so it's it's it's very event based

00:15:47,209 --> 00:15:50,980
it's very dynamic it turns out is

00:15:49,490 --> 00:15:53,420
actually very useful for building

00:15:50,980 --> 00:15:54,309
elaborate systems and I'm gonna get into

00:15:53,420 --> 00:15:56,480
that a bit later

00:15:54,309 --> 00:15:57,889
again if you don't want this then you're

00:15:56,480 --> 00:15:59,300
left with the status quo of config

00:15:57,889 --> 00:16:01,160
management which was kind of bleak to me

00:15:59,300 --> 00:16:07,699
which is wait 30 minutes and then you'll

00:16:01,160 --> 00:16:09,589
you'll have the same situation yeah so

00:16:07,699 --> 00:16:10,910
that the key thing in config management

00:16:09,589 --> 00:16:13,459
which was is gonna make config

00:16:10,910 --> 00:16:15,679
management useful and a current tool

00:16:13,459 --> 00:16:17,749
that we depend on is has to be very very

00:16:15,679 --> 00:16:20,029
safe so if you are writing your config

00:16:17,749 --> 00:16:21,679
management code in some sort of language

00:16:20,029 --> 00:16:23,089
that lets you have off-by-one errors and

00:16:21,679 --> 00:16:24,769
things like that then you're completely

00:16:23,089 --> 00:16:27,170
going to blow away your stuff and erase

00:16:24,769 --> 00:16:28,790
it so this tool again you're jumping far

00:16:27,170 --> 00:16:30,620
far ahead into the presentation but the

00:16:28,790 --> 00:16:32,809
idea is that we have very very safe

00:16:30,620 --> 00:16:34,040
things so that a compile time if

00:16:32,809 --> 00:16:36,139
something's gonna go wrong you're gonna

00:16:34,040 --> 00:16:37,999
know then okay so if you want we can

00:16:36,139 --> 00:16:40,249
talk more I got to move on I'll show you

00:16:37,999 --> 00:16:41,660
I mean you can just last little little

00:16:40,249 --> 00:16:47,779
note here you can also do things like

00:16:41,660 --> 00:16:49,220
adv n this is cool an f2 and CAD f2 that

00:16:47,779 --> 00:16:50,420
sort of thing and it still works right

00:16:49,220 --> 00:16:53,509
so if you really want to mess with your

00:16:50,420 --> 00:16:55,879
sis admin's well this mic keeps falling

00:16:53,509 --> 00:16:59,480
off there's lots of stuff you can do and

00:16:55,879 --> 00:17:02,120
and lastly just if you touch f4 and file

00:16:59,480 --> 00:17:04,730
f4 same sort of thing right it'll remove

00:17:02,120 --> 00:17:08,870
that file it will that you added before

00:17:04,730 --> 00:17:11,809
you had a chance cool quick questions

00:17:08,870 --> 00:17:14,929
anyone else good you're itching for a

00:17:11,809 --> 00:17:17,179
question go for it least surprise yes

00:17:14,929 --> 00:17:19,159
would help me make the final immutable

00:17:17,179 --> 00:17:21,500
and my file system rather than relying

00:17:19,159 --> 00:17:23,059
on the being rewritten yeah if you

00:17:21,500 --> 00:17:24,800
wanted to do that if you wanted to set

00:17:23,059 --> 00:17:26,390
in the file permissions

00:17:24,800 --> 00:17:27,950
that has no right access you could do

00:17:26,390 --> 00:17:29,360
that but that's a choice that you have

00:17:27,950 --> 00:17:30,920
to make if you're configuring that file

00:17:29,360 --> 00:17:33,380
your software might want it to be

00:17:30,920 --> 00:17:35,840
writable or something so if you want it

00:17:33,380 --> 00:17:37,340
to say root has no access to write this

00:17:35,840 --> 00:17:39,740
file or something like that you could

00:17:37,340 --> 00:17:41,750
but again that's this is a config

00:17:39,740 --> 00:17:43,910
management tool we don't force our users

00:17:41,750 --> 00:17:48,170
to say you must make your files not

00:17:43,910 --> 00:17:50,780
writable all right so I'm just a quick

00:17:48,170 --> 00:17:52,670
question so this I I'm coming here to

00:17:50,780 --> 00:17:54,350
tell you that this is what I see as next

00:17:52,670 --> 00:17:55,790
generation config management but does

00:17:54,350 --> 00:18:02,230
this feel like a different technology to

00:17:55,790 --> 00:18:06,110
anyone don't just scream it out anyone

00:18:02,230 --> 00:18:07,880
some sort of systemd comment no I

00:18:06,110 --> 00:18:09,800
actually see this if you think about it

00:18:07,880 --> 00:18:11,780
and not in the whole scope but actually

00:18:09,800 --> 00:18:13,100
see this as monitoring so it's assumed

00:18:11,780 --> 00:18:14,570
that you had actually pretty advanced

00:18:13,100 --> 00:18:16,400
resources and again this doesn't

00:18:14,570 --> 00:18:18,590
encompass all of monitoring but if you

00:18:16,400 --> 00:18:21,200
had pretty advanced resources you could

00:18:18,590 --> 00:18:23,090
actually think that all of the state of

00:18:21,200 --> 00:18:24,770
a particular thing that you're managing

00:18:23,090 --> 00:18:26,390
is actually built in that same resource

00:18:24,770 --> 00:18:28,820
so we never have to have this wall

00:18:26,390 --> 00:18:30,350
between doing the config management and

00:18:28,820 --> 00:18:31,730
then getting it monitored and then

00:18:30,350 --> 00:18:33,860
putting into production we could put it

00:18:31,730 --> 00:18:36,890
all in one sort of holistic sense so

00:18:33,860 --> 00:18:38,570
just some anything about next part is

00:18:36,890 --> 00:18:40,070
that third distributed topology the

00:18:38,570 --> 00:18:42,110
thing that I was talking about so this

00:18:40,070 --> 00:18:44,210
is this is just a simple client-server

00:18:42,110 --> 00:18:47,540
topology you have a bunch of clients on

00:18:44,210 --> 00:18:49,130
one server and what what software uses

00:18:47,540 --> 00:18:53,420
this for example in config management

00:18:49,130 --> 00:18:54,650
space louder you got it you're right the

00:18:53,420 --> 00:18:56,930
louder don't be shy

00:18:54,650 --> 00:18:58,220
so she said puppet right so your puppet

00:18:56,930 --> 00:19:00,320
chef these sorts of things they have a

00:18:58,220 --> 00:19:03,620
server bunch of clients what's a problem

00:19:00,320 --> 00:19:05,570
with this topology servers gone

00:19:03,620 --> 00:19:08,270
everything's gone bad what's another

00:19:05,570 --> 00:19:10,160
problem doesn't scale very well let's

00:19:08,270 --> 00:19:11,600
look at a different topology this one

00:19:10,160 --> 00:19:13,700
looks quite similar but the arrows are

00:19:11,600 --> 00:19:15,740
pointing the other way this is what I

00:19:13,700 --> 00:19:17,300
call Orchestrator topology so when you

00:19:15,740 --> 00:19:19,520
say Orchestrator I consider that to be a

00:19:17,300 --> 00:19:22,700
centralized Orchestrator what

00:19:19,520 --> 00:19:25,100
technologies use this oh boy now you're

00:19:22,700 --> 00:19:27,950
now you're getting into it what I'm

00:19:25,100 --> 00:19:29,630
collective sure someone else had ansible

00:19:27,950 --> 00:19:35,340
but again what's the problem with this

00:19:29,630 --> 00:19:41,580
this solution part of me

00:19:35,340 --> 00:19:44,190
I didn't hear you Aran's events we don't

00:19:41,580 --> 00:19:46,530
have events that's true but again some

00:19:44,190 --> 00:19:48,300
other people had said it it still

00:19:46,530 --> 00:19:49,620
doesn't scale same things is the first

00:19:48,300 --> 00:19:51,360
problem right it's still a single point

00:19:49,620 --> 00:19:53,400
of failure um it's still a useful

00:19:51,360 --> 00:19:54,630
topology for certain things but in

00:19:53,400 --> 00:19:56,040
general there's still a lot of problems

00:19:54,630 --> 00:19:57,450
with it so we thought about doing

00:19:56,040 --> 00:19:59,520
something like this where every peer

00:19:57,450 --> 00:20:02,790
connects to every other peer and what's

00:19:59,520 --> 00:20:05,550
what's the obvious problem here it

00:20:02,790 --> 00:20:07,440
doesn't scale right so if n if n becomes

00:20:05,550 --> 00:20:08,700
a thousand machines or haven't I mean

00:20:07,440 --> 00:20:10,770
even the small number of machines

00:20:08,700 --> 00:20:12,390
it's just crazy so so in fact what we do

00:20:10,770 --> 00:20:14,790
is something actually like this so you

00:20:12,390 --> 00:20:17,370
have as many machines as well that you

00:20:14,790 --> 00:20:20,280
can afford I hope and what we actually

00:20:17,370 --> 00:20:23,190
do is we we temporarily elect certain

00:20:20,280 --> 00:20:25,140
ones to be sort of primary machines in

00:20:23,190 --> 00:20:28,050
the cluster and on top of this week oops

00:20:25,140 --> 00:20:30,270
we build a distributed key-value store

00:20:28,050 --> 00:20:31,920
now we use Etsy D and the raft protocol

00:20:30,270 --> 00:20:32,490
to do this and I'm going to show you how

00:20:31,920 --> 00:20:35,850
this works

00:20:32,490 --> 00:20:37,140
so this will actually let everyone be

00:20:35,850 --> 00:20:38,850
able to talk through one of these

00:20:37,140 --> 00:20:43,380
masters and if one of them goes away we

00:20:38,850 --> 00:20:45,060
can react someone so why do we want to

00:20:43,380 --> 00:20:47,970
do this and we use this distributed

00:20:45,060 --> 00:20:50,130
key-value store to allow all the members

00:20:47,970 --> 00:20:52,560
of this cluster to pass information back

00:20:50,130 --> 00:20:54,120
and forth but again in indirect way so

00:20:52,560 --> 00:20:57,120
just to illustrate this I'm gonna show

00:20:54,120 --> 00:20:59,730
you a quick example I'm gonna make three

00:20:57,120 --> 00:21:01,590
hosts a B and C and each of these hosts

00:20:59,730 --> 00:21:03,840
is going to create one file it's gonna

00:21:01,590 --> 00:21:05,940
create one file on itself as part of its

00:21:03,840 --> 00:21:08,370
resource graph and it's going to store

00:21:05,940 --> 00:21:09,720
another of those files not owned itself

00:21:08,370 --> 00:21:11,160
it's not going to create that file it's

00:21:09,720 --> 00:21:13,140
gonna put it into this distributed

00:21:11,160 --> 00:21:15,240
key-value store this is sort of what

00:21:13,140 --> 00:21:17,190
puppet would approximately have as an

00:21:15,240 --> 00:21:19,440
exported resource except they don't work

00:21:17,190 --> 00:21:21,480
very well in puppet and so each one has

00:21:19,440 --> 00:21:23,190
that file in itself and it puts one up

00:21:21,480 --> 00:21:25,200
but the other thing it's going to do is

00:21:23,190 --> 00:21:27,000
it's going to look in that graph match a

00:21:25,200 --> 00:21:29,700
certain pattern and pull everything that

00:21:27,000 --> 00:21:31,230
matches that pattern down so this will

00:21:29,700 --> 00:21:33,810
sort of vaguely look like this you know

00:21:31,230 --> 00:21:36,690
you each have a file you put it up and

00:21:33,810 --> 00:21:38,340
you pull down everything so how many

00:21:36,690 --> 00:21:46,140
files will everyone have on them after

00:21:38,340 --> 00:21:47,640
this runs yeah six not six so so three

00:21:46,140 --> 00:21:49,350
so you're going to get three from those

00:21:47,640 --> 00:21:51,870
other ones plus that initial

00:21:49,350 --> 00:21:53,760
from yourself so that's four total now

00:21:51,870 --> 00:21:55,230
let's actually go through this one at a

00:21:53,760 --> 00:21:57,120
time and actually see how this works you

00:21:55,230 --> 00:21:57,570
want to see a demo all right let's see a

00:21:57,120 --> 00:22:00,840
demo

00:21:57,570 --> 00:22:03,120
let me just kill this I'm gonna sit I

00:22:00,840 --> 00:22:04,200
don't do a lot of hacking standing up I

00:22:03,120 --> 00:22:14,370
know there's some people that are into

00:22:04,200 --> 00:22:17,070
like okay okay so I'm just gonna make in

00:22:14,370 --> 00:22:18,360
this case for directories so I'm just

00:22:17,070 --> 00:22:20,490
making for directories and I'm just

00:22:18,360 --> 00:22:22,230
watching these so you can see what's

00:22:20,490 --> 00:22:25,620
actually happening live these are each

00:22:22,230 --> 00:22:27,150
gonna represent one host okay now on the

00:22:25,620 --> 00:22:30,299
left here I'm gonna actually just start

00:22:27,150 --> 00:22:33,320
up one of these engines so we're gonna

00:22:30,299 --> 00:22:36,059
time I don't really need the time at but

00:22:33,320 --> 00:22:43,400
is it just gonna run continuously and

00:22:36,059 --> 00:22:45,870
run file okay and we need the host name

00:22:43,400 --> 00:22:47,730
so this is you can use this host name

00:22:45,870 --> 00:22:50,130
flag just to simulate multiple machines

00:22:47,730 --> 00:22:53,010
on that same host bed so we run this up

00:22:50,130 --> 00:22:54,929
and very quickly boom you have two files

00:22:53,010 --> 00:22:57,330
on the first machine that's because you

00:22:54,929 --> 00:23:00,059
put one file on yourself and one file up

00:22:57,330 --> 00:23:02,070
into this database and then right after

00:23:00,059 --> 00:23:04,440
you pull everything down that's in that

00:23:02,070 --> 00:23:10,289
database onto yourself therefore two

00:23:04,440 --> 00:23:12,929
files make sense yeah cool good so the

00:23:10,289 --> 00:23:15,750
second one we're gonna do a little bit

00:23:12,929 --> 00:23:16,799
bigger similar thing now just to show

00:23:15,750 --> 00:23:19,559
you how this is working

00:23:16,799 --> 00:23:21,630
forget the IP addresses which are just a

00:23:19,559 --> 00:23:23,309
fact that we have to specify them on

00:23:21,630 --> 00:23:25,230
we're on the same machine but all we do

00:23:23,309 --> 00:23:28,200
is we actually just point the second

00:23:25,230 --> 00:23:30,120
machine at any machine in the cluster so

00:23:28,200 --> 00:23:31,710
in this case we point we're pointing it

00:23:30,120 --> 00:23:33,570
to the first machine and that's how they

00:23:31,710 --> 00:23:35,789
cluster together automatically so this

00:23:33,570 --> 00:23:37,830
one's gonna put one file on itself and

00:23:35,789 --> 00:23:39,210
put one file up in this database and

00:23:37,830 --> 00:23:41,750
then pull down everything that's there

00:23:39,210 --> 00:23:44,100
so how many files is it gonna have

00:23:41,750 --> 00:23:46,020
exactly it's gonna have three but

00:23:44,100 --> 00:23:47,940
because this is all event based and

00:23:46,020 --> 00:23:49,650
awesome and magic that first machine is

00:23:47,940 --> 00:23:51,600
gonna notice that there's a new file on

00:23:49,650 --> 00:23:54,270
that database and it's gonna also pull

00:23:51,600 --> 00:23:55,770
it that down onto itself so now the

00:23:54,270 --> 00:23:58,710
first machine and the second one are

00:23:55,770 --> 00:24:00,210
both going to have three files okay so

00:23:58,710 --> 00:24:02,900
we'll run it see how fast it happens

00:24:00,210 --> 00:24:05,060
boom right away

00:24:02,900 --> 00:24:08,420
it's all done cool to undo a third

00:24:05,060 --> 00:24:12,620
machine let's do a third machine I got

00:24:08,420 --> 00:24:14,330
all day or not all day but till lunch so

00:24:12,620 --> 00:24:17,360
again same thing we just point this at

00:24:14,330 --> 00:24:19,850
any any machine in the cluster so now

00:24:17,360 --> 00:24:21,860
same things gonna happen one on itself

00:24:19,850 --> 00:24:24,500
pull down everything push it up

00:24:21,860 --> 00:24:27,890
how many files is it gonna have exactly

00:24:24,500 --> 00:24:30,590
and the other two also for you guys are

00:24:27,890 --> 00:24:32,660
pros you help me write this software

00:24:30,590 --> 00:24:34,730
please you're all good at this all right

00:24:32,660 --> 00:24:36,200
so we're gonna run this boom for and the

00:24:34,730 --> 00:24:36,530
other ones update very quickly right

00:24:36,200 --> 00:24:38,900
away

00:24:36,530 --> 00:24:41,980
cool so just to show you we're actually

00:24:38,900 --> 00:24:45,860
gonna just run this oops

00:24:41,980 --> 00:24:47,480
et Cie we're just gonna run this at CD

00:24:45,860 --> 00:24:50,150
command line tool to actually query the

00:24:47,480 --> 00:24:51,320
status of this cluster and if you see we

00:24:50,150 --> 00:24:52,400
actually can see that there's three

00:24:51,320 --> 00:24:55,010
members in the cluster

00:24:52,400 --> 00:24:57,650
h1 h2 and h3 okay they're all the

00:24:55,010 --> 00:25:00,800
primary members at CD calls and masters

00:24:57,650 --> 00:25:02,930
in the cluster and and and they're all

00:25:00,800 --> 00:25:05,030
running this the cluster and they've all

00:25:02,930 --> 00:25:07,550
done the work to exchange everything so

00:25:05,030 --> 00:25:11,390
what we could do is we could start up a

00:25:07,550 --> 00:25:15,770
fourth machine now I've told the cluster

00:25:11,390 --> 00:25:19,630
to have ideally three servers elected as

00:25:15,770 --> 00:25:24,380
primaries so when we add a fourth one

00:25:19,630 --> 00:25:27,410
okay this should be our fourth one okay

00:25:24,380 --> 00:25:32,840
you'll see that quickly you have now

00:25:27,410 --> 00:25:35,060
five files on each one okay and if we

00:25:32,840 --> 00:25:36,590
look at the cluster you'll see that

00:25:35,060 --> 00:25:40,400
there's still those three machines that

00:25:36,590 --> 00:25:42,260
are the masters but now we can actually

00:25:40,400 --> 00:25:44,810
go and kill one okay let's say it goes

00:25:42,260 --> 00:25:46,190
on fire because you had one of those

00:25:44,810 --> 00:25:49,340
room heaters and your server room

00:25:46,190 --> 00:25:52,340
so we kill this one it shuts down and

00:25:49,340 --> 00:25:55,610
then right away this one here is going

00:25:52,340 --> 00:25:57,800
to notice and I'll just run this command

00:25:55,610 --> 00:25:58,910
here again you actually can see that it

00:25:57,800 --> 00:26:02,000
noticed that there was something wrong

00:25:58,910 --> 00:26:04,550
and the cluster using can safe consensus

00:26:02,000 --> 00:26:06,650
algorithms decided f4 you're now going

00:26:04,550 --> 00:26:09,080
to be the new server in this cluster so

00:26:06,650 --> 00:26:11,720
it took over automatically now you don't

00:26:09,080 --> 00:26:13,250
just get forcefully chosen to be a

00:26:11,720 --> 00:26:14,540
server in this cluster if you don't want

00:26:13,250 --> 00:26:16,790
to be a server you

00:26:14,540 --> 00:26:18,350
have to what actually happens is there's

00:26:16,790 --> 00:26:20,180
an ago she ation protocol where you

00:26:18,350 --> 00:26:22,250
first volunteer and you're available for

00:26:20,180 --> 00:26:24,170
volunteering and so on and if you want

00:26:22,250 --> 00:26:26,150
to bow out you can and so on but this is

00:26:24,170 --> 00:26:30,100
basically how this elastic clustering

00:26:26,150 --> 00:26:35,480
works yes we have a question go ahead

00:26:30,100 --> 00:26:37,640
microphone mmm what happens if one host

00:26:35,480 --> 00:26:41,570
says delete this file and the other host

00:26:37,640 --> 00:26:43,640
says create this file right so the the

00:26:41,570 --> 00:26:46,340
key thing is that each host has its own

00:26:43,640 --> 00:26:48,470
little engine running on itself so that

00:26:46,340 --> 00:26:49,100
machine only can say make choices about

00:26:48,470 --> 00:26:50,630
itself

00:26:49,100 --> 00:26:53,180
you cannot forcefully make another

00:26:50,630 --> 00:26:55,520
machine do something what you can do

00:26:53,180 --> 00:26:58,310
however is you can expose a certain

00:26:55,520 --> 00:27:00,350
resource saying I would like this file

00:26:58,310 --> 00:27:02,290
to be deleted and then other hosts will

00:27:00,350 --> 00:27:05,150
look at data and they have their own

00:27:02,290 --> 00:27:07,510
code that says what sort of things they

00:27:05,150 --> 00:27:09,970
would like to pull down and then that

00:27:07,510 --> 00:27:13,370
machine which pulls it down and says

00:27:09,970 --> 00:27:15,470
please do this will then do that action

00:27:13,370 --> 00:27:18,410
that it consented to pulling down that

00:27:15,470 --> 00:27:20,780
makes sense if I'll explain I got one

00:27:18,410 --> 00:27:23,000
nod okay so each machine only manages

00:27:20,780 --> 00:27:24,860
the stuff on themselves so if I want to

00:27:23,000 --> 00:27:27,350
make this machine over here delete a

00:27:24,860 --> 00:27:29,870
file I could say here's a file pattern

00:27:27,350 --> 00:27:32,570
that makes that file gone when he pulls

00:27:29,870 --> 00:27:34,970
it down he's gonna choose to pull down a

00:27:32,570 --> 00:27:37,010
certain pattern of things and if when he

00:27:34,970 --> 00:27:39,680
pulls that down he has a conflict

00:27:37,010 --> 00:27:41,570
between what he wants to do and the

00:27:39,680 --> 00:27:43,880
combination of what was found in that

00:27:41,570 --> 00:27:45,080
rules then it's compiled error so these

00:27:43,880 --> 00:27:47,000
are things which wouldn't make sense

00:27:45,080 --> 00:27:48,620
right you can't say create the pile and

00:27:47,000 --> 00:27:51,220
delete the file so all of those are

00:27:48,620 --> 00:27:53,810
compiled errors and it just won't work

00:27:51,220 --> 00:27:56,030
but it's a great question same thing in

00:27:53,810 --> 00:27:57,800
puppet actually so it's not it's not

00:27:56,030 --> 00:28:00,200
actually too novel just if you say

00:27:57,800 --> 00:28:01,910
puppet ensure file created and ensure

00:28:00,200 --> 00:28:04,130
file deleted it'll just be a compile

00:28:01,910 --> 00:28:08,930
error yeah any other quick questions

00:28:04,130 --> 00:28:11,960
yeah good can you actually reliably

00:28:08,930 --> 00:28:14,480
detect that kind of conflict when you

00:28:11,960 --> 00:28:16,850
compile so rule set if it depends on

00:28:14,480 --> 00:28:20,240
data that is not say yet at compile time

00:28:16,850 --> 00:28:25,100
yep good question so the truth is that

00:28:20,240 --> 00:28:26,990
the DSL is not written yet but the short

00:28:25,100 --> 00:28:27,520
story is you cannot tech detect anything

00:28:26,990 --> 00:28:29,230
right

00:28:27,520 --> 00:28:33,760
so in general if you have weird data

00:28:29,230 --> 00:28:35,110
which in some forms causes problems it

00:28:33,760 --> 00:28:36,700
will be a compile error but that's

00:28:35,110 --> 00:28:38,770
usually indicative of a programming

00:28:36,700 --> 00:28:40,240
problem and when this happens it won't

00:28:38,770 --> 00:28:42,100
do anything to the machine so it's a

00:28:40,240 --> 00:28:44,170
safe error condition and then you can

00:28:42,100 --> 00:28:46,240
check your code and fix the problems so

00:28:44,170 --> 00:28:47,620
it there's no guarantee in any config

00:28:46,240 --> 00:28:51,340
management language that you'll always

00:28:47,620 --> 00:28:52,690
get what you want but the the closest

00:28:51,340 --> 00:28:53,590
thing you'll get to is when there's

00:28:52,690 --> 00:28:55,720
something that's wrong

00:28:53,590 --> 00:28:59,370
nothing will break it will just say hey

00:28:55,720 --> 00:28:59,370
there's a problem please investigate

00:29:01,380 --> 00:29:08,890
correctly no it will so the question was

00:29:06,610 --> 00:29:12,130
can you have file names depend on data

00:29:08,890 --> 00:29:15,429
yes but the point is it's it's

00:29:12,130 --> 00:29:17,230
impossible to guarantee that your code

00:29:15,429 --> 00:29:18,970
is always going to work depending on any

00:29:17,230 --> 00:29:21,700
data you throw in that depends on if you

00:29:18,970 --> 00:29:23,050
write your code properly and we're we're

00:29:21,700 --> 00:29:25,150
building the language to make it very

00:29:23,050 --> 00:29:27,210
difficult to write something that leads

00:29:25,150 --> 00:29:30,070
to incorrect or in comprehensible code I

00:29:27,210 --> 00:29:32,290
mean this is this is just physics and

00:29:30,070 --> 00:29:34,120
there's nothing new that we can do there

00:29:32,290 --> 00:29:37,240
to prevent that if you know something I

00:29:34,120 --> 00:29:40,660
mean let me know yeah another question

00:29:37,240 --> 00:29:42,190
what's the transport layer like for the

00:29:40,660 --> 00:29:43,929
between the machines yeah how do they

00:29:42,190 --> 00:29:46,360
communicate great question this is

00:29:43,929 --> 00:29:48,280
actually using @cd so actually the Oetzi

00:29:46,360 --> 00:29:50,980
decode is actually merged into this

00:29:48,280 --> 00:29:52,809
project which is also using going at CD

00:29:50,980 --> 00:29:55,150
v3 is what we're using now it just got

00:29:52,809 --> 00:29:57,120
released and we've been using in beta

00:29:55,150 --> 00:30:01,059
for a while and that's actually using

00:29:57,120 --> 00:30:03,910
HTTP 2 which is G RPC so turns out it's

00:30:01,059 --> 00:30:05,740
quite efficient yeah you need you need a

00:30:03,910 --> 00:30:06,940
that there's no port open on all the

00:30:05,740 --> 00:30:09,970
machines that you need in that there's

00:30:06,940 --> 00:30:11,020
no PKI yes so the peek guy stuff I'm not

00:30:09,970 --> 00:30:12,280
going to talk about today because it's

00:30:11,020 --> 00:30:14,890
really out of scope before I want to

00:30:12,280 --> 00:30:16,179
cover you definitely need a port open if

00:30:14,890 --> 00:30:18,309
you really don't want to have machines

00:30:16,179 --> 00:30:19,360
communicating to each other there's

00:30:18,309 --> 00:30:21,760
actually a way we're going to do this

00:30:19,360 --> 00:30:24,070
with a push mode kind of similar to

00:30:21,760 --> 00:30:25,870
ansible where you just SSH in and so on

00:30:24,070 --> 00:30:27,700
but yes fundamentally if you want to

00:30:25,870 --> 00:30:29,980
have a clustered system you cannot have

00:30:27,700 --> 00:30:31,000
machines operating in bubbles so you you

00:30:29,980 --> 00:30:34,090
have to have make that choice do you

00:30:31,000 --> 00:30:35,320
want to have things work across machines

00:30:34,090 --> 00:30:37,480
or do you want to have just a bunch of

00:30:35,320 --> 00:30:39,190
separate independently managed machines

00:30:37,480 --> 00:30:40,240
it's just that the main question is why

00:30:39,190 --> 00:30:43,059
didn't you

00:30:40,240 --> 00:30:45,429
you looked at an SSH reusing SSH oh yeah

00:30:43,059 --> 00:30:47,050
do you exist SSH

00:30:45,429 --> 00:30:49,300
transporting all of this data through

00:30:47,050 --> 00:30:50,830
our SSH is absolutely gonna happen and

00:30:49,300 --> 00:30:52,480
will happen probably through a

00:30:50,830 --> 00:30:54,400
centralized machine if you want to do it

00:30:52,480 --> 00:30:57,010
that way so if you want to tunnel all

00:30:54,400 --> 00:30:58,150
the sed traffic through one machine that

00:30:57,010 --> 00:30:59,770
will be something that's coming but

00:30:58,150 --> 00:31:09,940
that's not available let me get right

00:30:59,770 --> 00:31:13,690
now last questions anyone yes did you do

00:31:09,940 --> 00:31:15,910
some skating tests not at all I've done

00:31:13,690 --> 00:31:17,830
some private very unscientific scaling

00:31:15,910 --> 00:31:21,700
tests and I'll show you some performance

00:31:17,830 --> 00:31:23,740
stuff on other parts later but for the

00:31:21,700 --> 00:31:26,590
HDD stuff it's pretty well documented in

00:31:23,740 --> 00:31:29,590
the sed upstream I think they're saying

00:31:26,590 --> 00:31:31,330
a thousand or was a 10,000 hosts now I

00:31:29,590 --> 00:31:33,460
mean it's quite large and if you really

00:31:31,330 --> 00:31:36,040
have clusters that are super large then

00:31:33,460 --> 00:31:37,270
at some point if you hit a scaling

00:31:36,040 --> 00:31:39,550
problem please let me know but this

00:31:37,270 --> 00:31:40,929
isn't even production ready yet so if

00:31:39,550 --> 00:31:42,100
you're interested in large scales and

00:31:40,929 --> 00:31:45,309
you have the hardware to run the Sutton

00:31:42,100 --> 00:31:48,070
ping me yeah another question I saw for

00:31:45,309 --> 00:31:52,120
stuff yeah you say that you need it to

00:31:48,070 --> 00:31:54,490
see the version 3 blah blah will you if

00:31:52,120 --> 00:32:01,450
I use CT CD for something else will you

00:31:54,490 --> 00:32:02,710
like I can use I need to see I think I

00:32:01,450 --> 00:32:04,510
understand your question but if I don't

00:32:02,710 --> 00:32:06,820
answer what you're expecting please let

00:32:04,510 --> 00:32:08,800
me know so you can do this two ways you

00:32:06,820 --> 00:32:11,110
can use if you want an existing at CD

00:32:08,800 --> 00:32:12,640
cluster or you can use the HDD cluster

00:32:11,110 --> 00:32:15,340
which we will build for you and manage

00:32:12,640 --> 00:32:17,200
for you so if you really really are

00:32:15,340 --> 00:32:18,700
crazy about having your own at CD

00:32:17,200 --> 00:32:20,140
cluster no problem you just point

00:32:18,700 --> 00:32:21,970
everything to that existing at CD

00:32:20,140 --> 00:32:24,880
cluster and things will work as normal

00:32:21,970 --> 00:32:26,860
you won't get the auto scaling of et s

00:32:24,880 --> 00:32:30,250
CD members or anything like that but you

00:32:26,860 --> 00:32:32,260
will have a working cluster and as for

00:32:30,250 --> 00:32:34,330
if you're using an existing cluster

00:32:32,260 --> 00:32:37,450
there's a namespace you can set so that

00:32:34,330 --> 00:32:41,260
MGMT won't set anything in with it

00:32:37,450 --> 00:32:42,790
doesn't have that same prefix last

00:32:41,260 --> 00:32:44,110
questions we can do questions more at

00:32:42,790 --> 00:32:45,340
the end but there's a few more things I

00:32:44,110 --> 00:32:47,320
want to show you if you want to see them

00:32:45,340 --> 00:32:52,120
up to you wanna see more are you fed up

00:32:47,320 --> 00:32:53,710
you want to see more more or okay cool

00:32:52,120 --> 00:32:54,850
so yeah this

00:32:53,710 --> 00:32:56,980
was just the example that I showed you

00:32:54,850 --> 00:33:02,620
we kill one machine and another one will

00:32:56,980 --> 00:33:04,090
take over right away so again all this

00:33:02,620 --> 00:33:05,350
code is still work-in-progress so there

00:33:04,090 --> 00:33:06,520
are some little issues and things to

00:33:05,350 --> 00:33:07,299
improve but if you want to help please

00:33:06,520 --> 00:33:09,309
don't be shy

00:33:07,299 --> 00:33:10,779
here's another quick little feature this

00:33:09,309 --> 00:33:12,640
doesn't demo as well but I think you'll

00:33:10,779 --> 00:33:14,620
get the idea and I will show you if you

00:33:12,640 --> 00:33:17,320
want so it turns out that when we write

00:33:14,620 --> 00:33:19,510
manifest and code we have to sometimes

00:33:17,320 --> 00:33:20,740
put these dependencies between things so

00:33:19,510 --> 00:33:22,510
we want the package to get installed

00:33:20,740 --> 00:33:24,159
first and then we want to set up the

00:33:22,510 --> 00:33:25,720
config file and then we want to start

00:33:24,159 --> 00:33:27,700
the service but it turns out we can

00:33:25,720 --> 00:33:29,679
actually figure out the dependencies for

00:33:27,700 --> 00:33:32,470
a lot of these things automatically so

00:33:29,679 --> 00:33:33,730
if you have package data what you do you

00:33:32,470 --> 00:33:35,799
know which services are going to be

00:33:33,730 --> 00:33:37,899
involved so you can say if this package

00:33:35,799 --> 00:33:39,880
uses that service always make sure this

00:33:37,899 --> 00:33:42,429
is installed before you start it makes

00:33:39,880 --> 00:33:43,450
sense so we can actually do this and

00:33:42,429 --> 00:33:45,970
I'll actually just show you a quick

00:33:43,450 --> 00:33:54,039
quick demo just till all this stuff

00:33:45,970 --> 00:33:58,210
quickly whoops kill that okay so those

00:33:54,039 --> 00:34:06,179
this all these windows so just really

00:33:58,210 --> 00:34:06,179
quickly so I have whoops my fingers I

00:34:07,530 --> 00:34:15,220
have examples although it it is three so

00:34:12,520 --> 00:34:18,879
this is just a simple file you have a

00:34:15,220 --> 00:34:21,010
DVD package a config file that config

00:34:18,879 --> 00:34:24,570
file directory and the service that are

00:34:21,010 --> 00:34:31,540
all in here and we're just going to

00:34:24,570 --> 00:34:33,099
don't need to time it and by the way all

00:34:31,540 --> 00:34:35,950
the stuff I'm showing this is all in get

00:34:33,099 --> 00:34:38,919
master so you can check it out and do

00:34:35,950 --> 00:34:40,960
the same examples so this is Auto edges

00:34:38,919 --> 00:34:44,109
3 we're just gonna run this my password

00:34:40,960 --> 00:34:45,550
is password if you want to know so this

00:34:44,109 --> 00:34:47,470
is gonna end but just to show you so

00:34:45,550 --> 00:34:49,179
when it actually builds the graph the

00:34:47,470 --> 00:34:51,250
engine is actually quite clever and it

00:34:49,179 --> 00:34:54,190
will add the dependencies that it knows

00:34:51,250 --> 00:34:56,500
make sense so in this case this package

00:34:54,190 --> 00:34:58,150
to service dependency and this package

00:34:56,500 --> 00:34:59,650
to file dependency these edges these

00:34:58,150 --> 00:35:01,599
these dependencies are automatically

00:34:59,650 --> 00:35:03,369
added someone is asking a question which

00:35:01,599 --> 00:35:05,260
is usually but I don't want this auto

00:35:03,369 --> 00:35:05,760
edges so yes you can disable it if you

00:35:05,260 --> 00:35:07,440
don't want

00:35:05,760 --> 00:35:10,670
it's an optional feature yes quick

00:35:07,440 --> 00:35:13,260
question because I'm on a lot of time

00:35:10,670 --> 00:35:15,390
back set it didn't add an edge between

00:35:13,260 --> 00:35:18,359
so config file and starting the service

00:35:15,390 --> 00:35:20,400
no it's not it's not about because if we

00:35:18,359 --> 00:35:22,830
cannot actually detect that but in the

00:35:20,400 --> 00:35:24,630
future system D we'll probably be able

00:35:22,830 --> 00:35:26,010
to know that certain config files are

00:35:24,630 --> 00:35:27,960
related so if there's a way you can

00:35:26,010 --> 00:35:30,150
detect it logically tell me in a lot of

00:35:27,960 --> 00:35:32,990
the patch okay ask me later

00:35:30,150 --> 00:35:34,410
you can check which I catch the old

00:35:32,990 --> 00:35:36,810
config file

00:35:34,410 --> 00:35:38,490
I understand your question but I believe

00:35:36,810 --> 00:35:40,080
there's no way to detect this right now

00:35:38,490 --> 00:35:41,700
if you know of a way talk to me after

00:35:40,080 --> 00:35:43,710
and we'll add in the code or you can add

00:35:41,700 --> 00:35:46,109
it in the code but yeah so anything that

00:35:43,710 --> 00:35:48,060
we can automatically detect we can add

00:35:46,109 --> 00:35:50,160
an edge for automatically there's an API

00:35:48,060 --> 00:35:51,750
to do this so if I have missed something

00:35:50,160 --> 00:35:53,760
and you know of a way please let me know

00:35:51,750 --> 00:35:55,710
I want to show you another thing this is

00:35:53,760 --> 00:35:57,869
actually more interesting so this is

00:35:55,710 --> 00:36:00,840
just some shitty graph of three file

00:35:57,869 --> 00:36:03,960
three packages so we got power top SL

00:36:00,840 --> 00:36:07,040
and tau say my favorite packages well

00:36:03,960 --> 00:36:10,020
these two are files and a service and

00:36:07,040 --> 00:36:11,820
when you run puppet or some existing

00:36:10,020 --> 00:36:15,660
tools and you run this graph what's

00:36:11,820 --> 00:36:17,700
gonna happen I guess versus the package

00:36:15,660 --> 00:36:19,920
installation what's gonna happen anyone

00:36:17,700 --> 00:36:21,630
know has anyone done this if you watch

00:36:19,920 --> 00:36:24,750
your configures running it turns out

00:36:21,630 --> 00:36:26,520
it's gonna run apt-get basically one two

00:36:24,750 --> 00:36:28,440
three different times it's going to go

00:36:26,520 --> 00:36:30,480
through startup overhead

00:36:28,440 --> 00:36:32,040
check cache on three separate times same

00:36:30,480 --> 00:36:34,320
thing with the UM and so on so this is

00:36:32,040 --> 00:36:36,170
hugely wasteful so we actually can do

00:36:34,320 --> 00:36:38,369
this feature called automatic grouping

00:36:36,170 --> 00:36:40,410
and what it actually does is it analyzes

00:36:38,369 --> 00:36:43,080
the graph looks at the dependencies and

00:36:40,410 --> 00:36:45,119
in this case says ah I can redraw this

00:36:43,080 --> 00:36:47,400
graph to have these three bubbles

00:36:45,119 --> 00:36:49,050
overlapped on top of each other and that

00:36:47,400 --> 00:36:50,940
way you can complete all of that package

00:36:49,050 --> 00:36:52,590
installation in this case in a single

00:36:50,940 --> 00:36:54,630
step without having to wait over and

00:36:52,590 --> 00:36:56,369
over again you want to see a demo let's

00:36:54,630 --> 00:36:59,220
do a demo oops

00:36:56,369 --> 00:37:03,390
show you the yeah so I'm just gonna sit

00:36:59,220 --> 00:37:07,230
here so on the whoops where's my

00:37:03,390 --> 00:37:09,559
terminal someone got scared don't worry

00:37:07,230 --> 00:37:15,210
I won't keep you from dinner

00:37:09,559 --> 00:37:17,730
yes to go to the bathroom alright mmm

00:37:15,210 --> 00:37:19,950
I have to go to okay so we're gonna

00:37:17,730 --> 00:37:26,030
remove we're gonna remove power top SL

00:37:19,950 --> 00:37:32,460
and cow say password alright good oops

00:37:26,030 --> 00:37:40,200
remove I'm just gonna remove that wrong

00:37:32,460 --> 00:37:48,299
oh good oh I have a little little typo

00:37:40,200 --> 00:37:56,339
so do move now say I saw our top okay so

00:37:48,299 --> 00:38:01,859
these packages are not installed there's

00:37:56,339 --> 00:38:03,530
no what exact wrong cow say okay these

00:38:01,859 --> 00:38:05,579
are on I don't think these are installed

00:38:03,530 --> 00:38:07,619
yeah they're not installed it's just

00:38:05,579 --> 00:38:10,980
unhappy alright good so what we're gonna

00:38:07,619 --> 00:38:13,460
do is I'm gonna run this software it's

00:38:10,980 --> 00:38:21,770
great software which I wrote for you

00:38:13,460 --> 00:38:24,329
file examples package that's right this

00:38:21,770 --> 00:38:26,460
okay so we're gonna run this let's hope

00:38:24,329 --> 00:38:27,990
the internet works starts up and boom

00:38:26,460 --> 00:38:30,750
right away in the single transaction

00:38:27,990 --> 00:38:34,079
it's installing these three packages so

00:38:30,750 --> 00:38:38,250
Internet's is going quite efficient

00:38:34,079 --> 00:38:39,569
quite fast module internet and a few

00:38:38,250 --> 00:38:47,069
seconds later I think this should be

00:38:39,569 --> 00:38:48,510
done hey cows a works great but and you

00:38:47,069 --> 00:38:53,720
can actually even want to see a cows a

00:38:48,510 --> 00:38:57,750
truck you can say cows a cow say hey dbn

00:38:53,720 --> 00:39:01,829
and do like crazy stuff but no more fun

00:38:57,750 --> 00:39:05,250
time we're gonna actually remove PK Hong

00:39:01,829 --> 00:39:07,230
and remove cow say I'm sorry but we run

00:39:05,250 --> 00:39:08,970
this and on the right we've removed it

00:39:07,230 --> 00:39:11,069
on the left if you notice it's already

00:39:08,970 --> 00:39:14,819
saying nope and it's reinstalling it so

00:39:11,069 --> 00:39:17,250
he'll say is back right so everything is

00:39:14,819 --> 00:39:19,020
good and same thing event-based

00:39:17,250 --> 00:39:21,869
noticing that something's wrong and

00:39:19,020 --> 00:39:23,250
putting it back just to like you can

00:39:21,869 --> 00:39:25,140
actually do this this auto group

00:39:23,250 --> 00:39:26,820
for other resources package is just the

00:39:25,140 --> 00:39:28,560
most obvious example where there's

00:39:26,820 --> 00:39:29,820
obvious performance benefits but there's

00:39:28,560 --> 00:39:31,590
a whole bunch of resources we haven't

00:39:29,820 --> 00:39:35,700
even written that that we'll be able to

00:39:31,590 --> 00:39:38,040
use this API and so on this is just a

00:39:35,700 --> 00:39:40,560
poke fun of other software so shorter is

00:39:38,040 --> 00:39:42,869
better shorter means less time and if

00:39:40,560 --> 00:39:44,310
you look over on the right the the left

00:39:42,869 --> 00:39:48,030
to the right it's basically installing

00:39:44,310 --> 00:39:50,280
one package versus three packages and

00:39:48,030 --> 00:39:52,440
the more packages we install the

00:39:50,280 --> 00:39:54,510
difference in these bars gets bigger so

00:39:52,440 --> 00:39:56,849
that's these red bars or puppet and the

00:39:54,510 --> 00:39:58,560
really small bars are this tool and the

00:39:56,849 --> 00:40:01,260
package manager is just running raw and

00:39:58,560 --> 00:40:02,760
so yeah if you had five packages this

00:40:01,260 --> 00:40:04,349
gets even bigger and you waste more and

00:40:02,760 --> 00:40:06,630
more time if you happen to be doing

00:40:04,349 --> 00:40:10,950
packages there's similar benefits for

00:40:06,630 --> 00:40:13,080
other sorts of things but your is worse

00:40:10,950 --> 00:40:14,849
it's always good to remember that one

00:40:13,080 --> 00:40:16,380
last there's a cool little thing so on

00:40:14,849 --> 00:40:17,940
the first time I gave this talk I

00:40:16,380 --> 00:40:20,220
actually pointed out that someone could

00:40:17,940 --> 00:40:21,960
write a compiler to take existing puppet

00:40:20,220 --> 00:40:23,640
code and run it on this engine because

00:40:21,960 --> 00:40:25,500
like if you have to rewrite all your

00:40:23,640 --> 00:40:28,500
puppet code or chef code or whatever

00:40:25,500 --> 00:40:30,660
this would suck and some brave soul who

00:40:28,500 --> 00:40:32,130
is now a good friend of mine said this

00:40:30,660 --> 00:40:33,630
is awesome I want to write this because

00:40:32,130 --> 00:40:35,250
you need to know puppet internals and I

00:40:33,630 --> 00:40:36,570
don't know puppet internals and so he

00:40:35,250 --> 00:40:38,250
actually wrote this and this is

00:40:36,570 --> 00:40:39,810
beautiful I mean you can try this out

00:40:38,250 --> 00:40:42,810
again everything here is all free

00:40:39,810 --> 00:40:45,720
software so it's not finished it's not

00:40:42,810 --> 00:40:48,119
perfect but it's pretty close and you

00:40:45,720 --> 00:40:49,740
can actually run directly your existing

00:40:48,119 --> 00:40:51,180
puppet code on this engine so you've got

00:40:49,740 --> 00:40:54,089
all the benefits of parallelism and so

00:40:51,180 --> 00:40:56,280
on again not all resources or not as

00:40:54,089 --> 00:40:57,960
many resources as we like exist in MGMT

00:40:56,280 --> 00:40:59,490
yet but it's a good start and all the

00:40:57,960 --> 00:41:01,200
plumbing is there to add new resources

00:40:59,490 --> 00:41:03,869
so if you want to get involved try this

00:41:01,200 --> 00:41:05,580
out if you were to just take your

00:41:03,869 --> 00:41:06,900
existing puppet code and just run this

00:41:05,580 --> 00:41:08,550
in production for the first time and

00:41:06,900 --> 00:41:10,410
expect it to work the exact same way

00:41:08,550 --> 00:41:13,530
you're a little bit crazy but it does

00:41:10,410 --> 00:41:14,730
exist and you should check this out

00:41:13,530 --> 00:41:15,750
I know there's some questions I'm just

00:41:14,730 --> 00:41:17,280
going to finish up and then you can ask

00:41:15,750 --> 00:41:21,030
questions so just what's coming in the

00:41:17,280 --> 00:41:23,040
future so again there's no DSL right now

00:41:21,030 --> 00:41:24,450
I need some help working on this I have

00:41:23,040 --> 00:41:25,950
some design so if you really are into

00:41:24,450 --> 00:41:27,359
languages and safe things and

00:41:25,950 --> 00:41:29,540
declarative functional reactive

00:41:27,359 --> 00:41:31,950
programming maybe please give me a shout

00:41:29,540 --> 00:41:33,630
that's work in progress we need to write

00:41:31,950 --> 00:41:35,550
more resources so we can write powerful

00:41:33,630 --> 00:41:36,869
resources we can write a resource for

00:41:35,550 --> 00:41:38,730
our virtual machine and

00:41:36,869 --> 00:41:41,309
a declaratively managed virtual machine

00:41:38,730 --> 00:41:42,809
on your system right thing about that we

00:41:41,309 --> 00:41:44,400
can have a timer resource actually this

00:41:42,809 --> 00:41:45,660
is about to get merged you'd have a

00:41:44,400 --> 00:41:47,339
network resource that actually makes

00:41:45,660 --> 00:41:49,230
sense and because these things are all

00:41:47,339 --> 00:41:50,999
distributed systems you can change the

00:41:49,230 --> 00:41:52,740
network without breaking your puppet run

00:41:50,999 --> 00:41:55,769
anyone's ever done that you know what I

00:41:52,740 --> 00:41:57,480
mean lots of things a push node and this

00:41:55,769 --> 00:41:59,490
is really a community tool so this is

00:41:57,480 --> 00:42:01,410
about you it's a lot of product this is

00:41:59,490 --> 00:42:02,759
just a project that I'm running so how

00:42:01,410 --> 00:42:04,950
can you help this is about you you need

00:42:02,759 --> 00:42:07,650
to do work how can you help you can use

00:42:04,950 --> 00:42:10,019
this test it patch it share it document

00:42:07,650 --> 00:42:11,460
it star it blog it tweet it discuss it

00:42:10,019 --> 00:42:14,279
hack on it right you guys are hackers

00:42:11,460 --> 00:42:16,230
you know how to do the thing hack this

00:42:14,279 --> 00:42:17,759
right this is this is code for you this

00:42:16,230 --> 00:42:19,109
is one marketing slide because Red Hat

00:42:17,759 --> 00:42:21,990
gave me some money to come here which is

00:42:19,109 --> 00:42:24,809
really nice to them so buy their if

00:42:21,990 --> 00:42:26,670
you if you'd like to and again this is

00:42:24,809 --> 00:42:28,430
an upstream this is an upstream project

00:42:26,670 --> 00:42:30,749
it's a community thing it's not a

00:42:28,430 --> 00:42:33,690
project it's not a product it's just a

00:42:30,749 --> 00:42:37,829
project so please get involved let's

00:42:33,690 --> 00:42:41,420
just recap answer now let me recap are

00:42:37,829 --> 00:42:41,420
you seen this guy who recaps again

00:42:42,290 --> 00:42:47,610
yeah here are some friendly links for

00:42:45,900 --> 00:42:49,830
you there's the technical blog of James

00:42:47,610 --> 00:42:51,240
which I know you all read and love if

00:42:49,830 --> 00:42:54,510
you want to put me on planet Debian I

00:42:51,240 --> 00:42:57,120
would all that there's the project on

00:42:54,510 --> 00:42:58,830
github so I'm purple idea slash MGMT you

00:42:57,120 --> 00:43:00,360
can find it you can search through the

00:42:58,830 --> 00:43:02,370
blog there's now four articles about

00:43:00,360 --> 00:43:04,890
this and there's also links on the

00:43:02,370 --> 00:43:07,320
github page at the bottom with links to

00:43:04,890 --> 00:43:09,660
at least one another recorded talk and

00:43:07,320 --> 00:43:13,050
puppet work and so on all that stuff and

00:43:09,660 --> 00:43:15,450
on the internet on tweeter on IRC github

00:43:13,050 --> 00:43:17,310
Gmail Red Hat comm and so on I'm purple

00:43:15,450 --> 00:43:19,640
idea so you can ping me on tweeter and

00:43:17,310 --> 00:43:22,500
day this is awesome I'll I love this

00:43:19,640 --> 00:43:25,980
just a fun little slide for people who

00:43:22,500 --> 00:43:28,620
like fire and magic so if you want to

00:43:25,980 --> 00:43:32,070
like harass the Debian committee oh yes

00:43:28,620 --> 00:43:33,450
take his pills his alarm went off please

00:43:32,070 --> 00:43:35,010
email an overview if you like this talk

00:43:33,450 --> 00:43:36,900
if you liked the session like email me

00:43:35,010 --> 00:43:38,730
or email the deviant people and let them

00:43:36,900 --> 00:43:40,170
know so that I can get feedback and if

00:43:38,730 --> 00:43:43,260
you want to hang out in IRC we're about

00:43:40,170 --> 00:43:46,410
like fifty people now in MGMT config so

00:43:43,260 --> 00:43:48,240
please do that if you have questions I'm

00:43:46,410 --> 00:43:56,370
happy to take questions and thank you

00:43:48,240 --> 00:43:59,160
very much for listening questions this

00:43:56,370 --> 00:44:02,250
is on yeah I have one more how would you

00:43:59,160 --> 00:44:05,220
depend on machine state like puppet

00:44:02,250 --> 00:44:06,510
effects essentially so the question is

00:44:05,220 --> 00:44:08,790
how would you depend on machine state

00:44:06,510 --> 00:44:10,770
like facts so facts will come with the

00:44:08,790 --> 00:44:12,090
language so the language isn't ready so

00:44:10,770 --> 00:44:13,410
there's no concept of facts right now

00:44:12,090 --> 00:44:15,300
and I don't want to get into the design

00:44:13,410 --> 00:44:17,070
but I do think it makes sense and if you

00:44:15,300 --> 00:44:19,110
really want to hack on this pick me and

00:44:17,070 --> 00:44:21,030
we'll talk about it and you can have a

00:44:19,110 --> 00:44:24,330
say in how how it gets built any other

00:44:21,030 --> 00:44:28,950
questions don't be shy yeah gentleman

00:44:24,330 --> 00:44:30,570
over here on the center how do you

00:44:28,950 --> 00:44:33,000
handle failure could you say that again

00:44:30,570 --> 00:44:34,290
how do you handle failure how do you

00:44:33,000 --> 00:44:34,710
handle failure that's a really good

00:44:34,290 --> 00:44:37,740
question

00:44:34,710 --> 00:44:39,750
so actually to be completely honest the

00:44:37,740 --> 00:44:41,370
like advanced error handling code has

00:44:39,750 --> 00:44:44,220
not been written yet I plan to write

00:44:41,370 --> 00:44:46,290
that probably in the next week or so the

00:44:44,220 --> 00:44:47,400
way you actually will handle failure

00:44:46,290 --> 00:44:51,810
right now is it will just keep your

00:44:47,400 --> 00:44:53,100
trying excuse me but the better code

00:44:51,810 --> 00:44:54,950
which I will write is will be meta

00:44:53,100 --> 00:44:57,260
parameters to say allow

00:44:54,950 --> 00:44:59,180
up to this many failures no more than

00:44:57,260 --> 00:45:02,060
this many per second and stuff like that

00:44:59,180 --> 00:45:04,040
so failures happen and you'll be able to

00:45:02,060 --> 00:45:05,750
control what happens when they do and

00:45:04,040 --> 00:45:07,609
how often you allow them before you have

00:45:05,750 --> 00:45:08,660
a permanent failure so yeah great

00:45:07,609 --> 00:45:10,790
question

00:45:08,660 --> 00:45:18,440
any other questions yes gentlemen the

00:45:10,790 --> 00:45:20,270
back can update itself can it update

00:45:18,440 --> 00:45:22,780
itself great question there's only one

00:45:20,270 --> 00:45:25,490
version right now which is get master so

00:45:22,780 --> 00:45:28,550
yeah so I mean there's no this is like

00:45:25,490 --> 00:45:30,020
pre 1.0 so there's no real API stability

00:45:28,550 --> 00:45:32,510
or anything like that um there isn't

00:45:30,020 --> 00:45:35,030
really much that should be a major

00:45:32,510 --> 00:45:37,609
problem and updating itself like you

00:45:35,030 --> 00:45:40,010
just have a new package and stuff goes

00:45:37,609 --> 00:45:41,750
on what will be a problem as if the DSL

00:45:40,010 --> 00:45:43,900
were to change and so on so again pre

00:45:41,750 --> 00:45:46,339
1.0 i wouldn't really worry about this

00:45:43,900 --> 00:45:49,400
one day a problem with the update

00:45:46,339 --> 00:45:53,300
process some of the day will keep on

00:45:49,400 --> 00:45:54,380
working and some of the others so so

00:45:53,300 --> 00:45:56,150
that's a good question and so that

00:45:54,380 --> 00:45:58,880
actually comes down to the question just

00:45:56,150 --> 00:46:00,770
to restate a different ways what do you

00:45:58,880 --> 00:46:02,119
do which you have clusters running

00:46:00,770 --> 00:46:05,089
different versions of the software at

00:46:02,119 --> 00:46:07,069
the same time and even being a little

00:46:05,089 --> 00:46:08,980
bit more specific what do you do if you

00:46:07,069 --> 00:46:10,790
want to roll out a new configuration

00:46:08,980 --> 00:46:11,300
across your cluster and how do you

00:46:10,790 --> 00:46:13,520
handle that

00:46:11,300 --> 00:46:16,910
so that actually that code also doesn't

00:46:13,520 --> 00:46:18,680
exist yet and there will be probably

00:46:16,910 --> 00:46:20,599
something called like an execution plan

00:46:18,680 --> 00:46:22,609
or so on and I'm not sure what the best

00:46:20,599 --> 00:46:23,839
way will be in practice but at least

00:46:22,609 --> 00:46:25,460
initially when we're hacking on this

00:46:23,839 --> 00:46:27,560
there will be probably more than one way

00:46:25,460 --> 00:46:29,510
to do it so one possibility will be that

00:46:27,560 --> 00:46:31,550
you push a new config into your cluster

00:46:29,510 --> 00:46:33,500
and it waits for a synchronization that

00:46:31,550 --> 00:46:35,690
everyone has converged and stopped

00:46:33,500 --> 00:46:37,490
running the current config before you

00:46:35,690 --> 00:46:39,260
switch over or it could be that for

00:46:37,490 --> 00:46:41,119
certain resources you don't care and you

00:46:39,260 --> 00:46:44,480
just want them to run right away so

00:46:41,119 --> 00:46:47,300
whether this is a metaphore am ia

00:46:44,480 --> 00:46:49,339
it really is to be decided but if you

00:46:47,300 --> 00:46:50,990
want to help on this please ping me or

00:46:49,339 --> 00:46:52,970
come in channel we'll have a good talk

00:46:50,990 --> 00:46:55,599
about it I got quest time for one more

00:46:52,970 --> 00:46:59,240
question or two more questions

00:46:55,599 --> 00:47:00,800
don't be shut back who's shy were those

00:46:59,240 --> 00:47:03,560
side people we have a question from the

00:47:00,800 --> 00:47:08,320
gentleman one question here quick yeah

00:47:03,560 --> 00:47:10,000
oh you're shy okay question yeah grab

00:47:08,320 --> 00:47:11,560
you're shy okay so we have people and

00:47:10,000 --> 00:47:13,330
advertising there but they don't have

00:47:11,560 --> 00:47:15,850
question okay denied so I guess that's

00:47:13,330 --> 00:47:18,130
it oh you have a question sure I wasn't

00:47:15,850 --> 00:47:19,480
sure sorry so you many times you

00:47:18,130 --> 00:47:21,550
mentioned puppet yes

00:47:19,480 --> 00:47:23,230
but how about unstable it's it's still

00:47:21,550 --> 00:47:25,240
evolving it still has like a lot of

00:47:23,230 --> 00:47:28,000
capabilities in fact I think they now

00:47:25,240 --> 00:47:30,190
introduce this declarative for for

00:47:28,000 --> 00:47:31,930
beautiful machines the Spirit install ah

00:47:30,190 --> 00:47:34,090
so I'm actually I don't know about the

00:47:31,930 --> 00:47:35,500
latest developments in ansible I do

00:47:34,090 --> 00:47:36,850
believe I agree with you it's a great

00:47:35,500 --> 00:47:38,530
tool and it's very powerful and that's

00:47:36,850 --> 00:47:40,840
what you should use today if you are

00:47:38,530 --> 00:47:42,670
happy with that tool in fact right have

00:47:40,840 --> 00:47:45,130
bought ansible so like should definitely

00:47:42,670 --> 00:47:46,600
use it but um my tool is not something

00:47:45,130 --> 00:47:48,610
that's ready for production this is a

00:47:46,600 --> 00:47:51,940
feature technology to try and solve some

00:47:48,610 --> 00:47:54,160
very very difficult problems which might

00:47:51,940 --> 00:47:56,230
turn out to be needed

00:47:54,160 --> 00:47:59,200
might might turn out to need solutions

00:47:56,230 --> 00:48:00,940
so when I run this in production in the

00:47:59,200 --> 00:48:02,380
next year probably not but we're trying

00:48:00,940 --> 00:48:04,750
to build it and see and we think it's

00:48:02,380 --> 00:48:07,090
kind of interesting and maybe one day it

00:48:04,750 --> 00:48:10,150
will be something that you'll want to

00:48:07,090 --> 00:48:11,770
want to migrate to or so on but for now

00:48:10,150 --> 00:48:14,050
no use your stack that you're

00:48:11,770 --> 00:48:16,540
comfortable with puppet ansible you know

00:48:14,050 --> 00:48:17,770
bash grips rocker it's up to you so yeah

00:48:16,540 --> 00:48:20,230
I think they're out of time I'll be

00:48:17,770 --> 00:48:22,030
around for I think three or four more

00:48:20,230 --> 00:48:23,800
days of the conference I leave on the

00:48:22,030 --> 00:48:25,480
9th so if you have questions if you want

00:48:23,800 --> 00:48:26,800
to get your patch merged you want to do

00:48:25,480 --> 00:48:29,020
a little hacking session to learn how to

00:48:26,800 --> 00:48:31,680
a night write a brand new resource just

00:48:29,020 --> 00:48:34,570
ping me don't be shy and I have some

00:48:31,680 --> 00:48:36,190
random stickers from my travels in a bag

00:48:34,570 --> 00:48:38,200
if you want to get some free stickers

00:48:36,190 --> 00:48:41,070
MGMT stickers unfortunately but yeah

00:48:38,200 --> 00:48:41,070

YouTube URL: https://www.youtube.com/watch?v=z7eMjC1JQUw


