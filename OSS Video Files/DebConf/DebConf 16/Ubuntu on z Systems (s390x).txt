Title: Ubuntu on z Systems (s390x)
Publication date: 2017-12-05
Playlist: DebConf 16
Description: 
	by Dimitri John Ledkov

At: Debconf 16 video RSS feed
https://debconf16.debconf.org/
Room: Menzies 10
Scheduled start: 2016-07-05 17:15:00
Captions: 
	00:00:00,000 --> 00:00:05,069
hi my name is Dimitri ladka I'm from

00:00:03,120 --> 00:00:07,799
canonical and I work on a bunch of

00:00:05,069 --> 00:00:09,900
full-time I'm also a Debian developer

00:00:07,799 --> 00:00:12,509
and I work on all sorts of packages and

00:00:09,900 --> 00:00:15,870
Dameon as well and I'm here to talk

00:00:12,509 --> 00:00:18,840
about the new Lubuntu port for the IBM

00:00:15,870 --> 00:00:22,230
jet systems or some called them system Z

00:00:18,840 --> 00:00:24,210
or Z system also known as s3 9g axe

00:00:22,230 --> 00:00:27,840
depending on which point in time you

00:00:24,210 --> 00:00:31,140
look at things it is a new port for

00:00:27,840 --> 00:00:33,660
Ubuntu however it is an existing debian

00:00:31,140 --> 00:00:36,600
architecture for a few years now so

00:00:33,660 --> 00:00:39,570
there was s3 90 X bootstrap recently and

00:00:36,600 --> 00:00:45,270
there was as 390 before that which was

00:00:39,570 --> 00:00:47,460
the 31 bit port instead of 64 bit in

00:00:45,270 --> 00:00:49,860
general for quite a few def cons we

00:00:47,460 --> 00:00:51,750
always had presentations about people

00:00:49,860 --> 00:00:54,510
bootstrapping a new architecture and

00:00:51,750 --> 00:00:56,910
this time there's no new brand new

00:00:54,510 --> 00:00:59,460
architectures in Debian however there is

00:00:56,910 --> 00:01:02,129
a 390 export in a bun - and it had to be

00:00:59,460 --> 00:01:05,030
bootstrap from scratch again which is a

00:01:02,129 --> 00:01:08,040
lot of fun and a lot of people enjoy it

00:01:05,030 --> 00:01:10,409
the way we did it is we bootstrapped of

00:01:08,040 --> 00:01:11,600
Debian which so we took Debian installs

00:01:10,409 --> 00:01:14,509
of Debian's

00:01:11,600 --> 00:01:17,400
testing or stable I can't remember and

00:01:14,509 --> 00:01:19,920
then we've built the Ubuntu tool chain

00:01:17,400 --> 00:01:22,020
first then we rebuilt the minimal base

00:01:19,920 --> 00:01:24,360
packages of a Bunter using the Ubuntu

00:01:22,020 --> 00:01:25,979
tool chain still on Debian and then

00:01:24,360 --> 00:01:28,290
eventually once we had enough things

00:01:25,979 --> 00:01:30,689
built we actually cross graded from

00:01:28,290 --> 00:01:32,369
Debian to Ubuntu and then we were

00:01:30,689 --> 00:01:35,280
finally running on top of a bun to

00:01:32,369 --> 00:01:37,200
rebuild all the packages again upload to

00:01:35,280 --> 00:01:39,390
Launchpad rebuild the packages again

00:01:37,200 --> 00:01:41,430
then we've decided to change the tool

00:01:39,390 --> 00:01:43,619
chain we had to rebuild everything again

00:01:41,430 --> 00:01:45,960
and after a few times of rebuilding

00:01:43,619 --> 00:01:48,180
everything we finally had a working port

00:01:45,960 --> 00:01:50,399
inside Launchpad with all the packages

00:01:48,180 --> 00:01:55,560
build inside launch pads and everything

00:01:50,399 --> 00:01:59,549
published on ports ubuntu.com so it was

00:01:55,560 --> 00:02:00,990
fairly uneventful so there was no lack

00:01:59,549 --> 00:02:05,430
of hardware because hardware is

00:02:00,990 --> 00:02:07,829
available it is fast and stable and in

00:02:05,430 --> 00:02:09,899
general it was quite easy to do write

00:02:07,829 --> 00:02:12,420
the people who were involved it's the

00:02:09,899 --> 00:02:13,310
usual people who do a lot of base work

00:02:12,420 --> 00:02:16,010
in

00:02:13,310 --> 00:02:18,170
debian as well so Adam Conrad Mateus

00:02:16,010 --> 00:02:20,270
kaze steve longo shagged myself

00:02:18,170 --> 00:02:22,250
Colin Watson and many other people and

00:02:20,270 --> 00:02:24,620
you've probably heard of those people

00:02:22,250 --> 00:02:26,840
being involved in cross building and the

00:02:24,620 --> 00:02:28,880
bootstrapping and bootstrapping Debian

00:02:26,840 --> 00:02:33,830
architectures over the past years so

00:02:28,880 --> 00:02:35,239
there's like big kudos to them it was

00:02:33,830 --> 00:02:37,880
very uneventful

00:02:35,239 --> 00:02:41,900
so usually we when we bootstrapped like

00:02:37,880 --> 00:02:44,030
arm 64 or PowerPC 64 yell or etc you

00:02:41,900 --> 00:02:46,580
would you would work with demo hardware

00:02:44,030 --> 00:02:48,290
or beta alpha boards and then you would

00:02:46,580 --> 00:02:51,470
see that the hardware fails during

00:02:48,290 --> 00:02:53,150
builds or that you know it overheats and

00:02:51,470 --> 00:02:54,890
then you have miss compiles and things

00:02:53,150 --> 00:02:57,680
like that this was not the case with the

00:02:54,890 --> 00:03:00,319
mainframe because the mainframe is very

00:02:57,680 --> 00:03:02,209
stable so I did not manage to crash it

00:03:00,319 --> 00:03:04,400
myself it just keeps on going and

00:03:02,209 --> 00:03:06,410
essentially you plug in electricity and

00:03:04,400 --> 00:03:08,989
then three days later you get all of the

00:03:06,410 --> 00:03:12,050
archive built all the whatever 30,000

00:03:08,989 --> 00:03:14,600
packages it was quite nice obviously you

00:03:12,050 --> 00:03:16,489
have build dependency cycles which you

00:03:14,600 --> 00:03:18,110
need to break from time to time but once

00:03:16,489 --> 00:03:20,989
those were resolved everything else

00:03:18,110 --> 00:03:23,510
would build really fast there was no

00:03:20,989 --> 00:03:26,060
need to update config gas and config sub

00:03:23,510 --> 00:03:30,140
and all of those things because s/390 ex

00:03:26,060 --> 00:03:32,959
is in existence for a while now and in

00:03:30,140 --> 00:03:34,790
that sense and we didn't use Cross

00:03:32,959 --> 00:03:36,950
building Percy we did cross build the

00:03:34,790 --> 00:03:40,150
kernels in the tool chain but in general

00:03:36,950 --> 00:03:41,269
we use native compilation throughout

00:03:40,150 --> 00:03:44,180
mm-hm

00:03:41,269 --> 00:03:46,790
however if you compare it with the s/390

00:03:44,180 --> 00:03:49,010
export in debut there is quite a few

00:03:46,790 --> 00:03:51,620
changes and things that we could we did

00:03:49,010 --> 00:03:55,160
from scratch or slightly differently or

00:03:51,620 --> 00:03:57,290
in your ways so we have a single Debian

00:03:55,160 --> 00:04:00,200
installer build and we use it throughout

00:03:57,290 --> 00:04:01,700
on all the different platforms such that

00:04:00,200 --> 00:04:04,970
it doesn't matter if you're trying to

00:04:01,700 --> 00:04:07,250
boot and install an L par or a z vm or

00:04:04,970 --> 00:04:10,459
if you're installing inside k vm you

00:04:07,250 --> 00:04:13,250
still use the same di kernel the same DI

00:04:10,459 --> 00:04:15,440
but the same preset values such that you

00:04:13,250 --> 00:04:18,500
don't need to change anything or use any

00:04:15,440 --> 00:04:21,440
different installation media we do

00:04:18,500 --> 00:04:24,940
publish Ubuntu Server ISO images and

00:04:21,440 --> 00:04:27,160
they have el torito enabled booting for

00:04:24,940 --> 00:04:29,230
KVM

00:04:27,160 --> 00:04:32,110
there are also a valid installation

00:04:29,230 --> 00:04:33,760
mirrors so you just grab the ISO and if

00:04:32,110 --> 00:04:37,240
you can expert it on your local network

00:04:33,760 --> 00:04:39,730
you can do remote installation of that

00:04:37,240 --> 00:04:43,210
ISO directly without ever hitting

00:04:39,730 --> 00:04:46,390
archived audible.com or portamento calm

00:04:43,210 --> 00:04:48,160
that's new in Xenia it is architecture

00:04:46,390 --> 00:04:50,200
independent because the code doesn't

00:04:48,160 --> 00:04:52,120
rely on anything architecture specific

00:04:50,200 --> 00:04:54,340
but it was needed to be done on the

00:04:52,120 --> 00:04:56,890
mainframe because usually you typically

00:04:54,340 --> 00:04:59,020
ned put the mainframe and then you have

00:04:56,890 --> 00:05:02,500
no internet access apart from local

00:04:59,020 --> 00:05:05,530
network so to enable that we have signed

00:05:02,500 --> 00:05:08,470
packages on the iso image such that it's

00:05:05,530 --> 00:05:11,110
trusted installation throughout and GPG

00:05:08,470 --> 00:05:13,960
validate and installation and we do use

00:05:11,110 --> 00:05:16,060
live build squash FS instead of running

00:05:13,960 --> 00:05:18,940
the bootstrap to bootstrap the base

00:05:16,060 --> 00:05:21,550
system and we have GPG sign that it's

00:05:18,940 --> 00:05:23,200
validated and trusted even though it's

00:05:21,550 --> 00:05:26,020
fetched over a remote network

00:05:23,200 --> 00:05:29,110
essentially which can be FTP or HTTP

00:05:26,020 --> 00:05:30,840
untrusted protocol in that sense it's

00:05:29,110 --> 00:05:33,250
quite an improvement because like

00:05:30,840 --> 00:05:35,320
hopefully maybe in the future I can make

00:05:33,250 --> 00:05:38,050
Ubuntu desktop images to be installable

00:05:35,320 --> 00:05:40,180
with DI from the desktop images without

00:05:38,050 --> 00:05:42,010
ever hitting the network because loads

00:05:40,180 --> 00:05:45,490
of people still prefer to use the I to

00:05:42,010 --> 00:05:48,640
install things we also publish cloud

00:05:45,490 --> 00:05:51,040
images for Kania and we have legs the

00:05:48,640 --> 00:05:55,210
images as well so all of your typical

00:05:51,040 --> 00:05:58,030
container and cloud workloads they just

00:05:55,210 --> 00:05:59,890
work on s 390x with the bun - such that

00:05:58,030 --> 00:06:02,530
you can have OpenStack you can launch

00:05:59,890 --> 00:06:06,070
instances and you can run containers

00:06:02,530 --> 00:06:08,920
that doesn't sound that impressive in

00:06:06,070 --> 00:06:10,510
the more mature architectures or more

00:06:08,920 --> 00:06:12,970
mature Ubuntu ports

00:06:10,510 --> 00:06:15,490
however in s3 96 that's quite new so

00:06:12,970 --> 00:06:17,470
because OpenStack and KVM support was

00:06:15,490 --> 00:06:19,800
published upstream not that long time

00:06:17,470 --> 00:06:21,970
ago so it's one of the first

00:06:19,800 --> 00:06:25,530
distributions with long term support

00:06:21,970 --> 00:06:28,660
which have OpenStack support built in I

00:06:25,530 --> 00:06:32,080
am in immigrant and I do live in Britain

00:06:28,660 --> 00:06:37,870
and I do hope we will stay in the

00:06:32,080 --> 00:06:41,650
but that's kind of a side note in terms

00:06:37,870 --> 00:06:45,310
of the installer we do have a full di

00:06:41,650 --> 00:06:47,409
precede support on the mainframe all of

00:06:45,310 --> 00:06:49,930
your devices they have to be brought up

00:06:47,409 --> 00:06:52,509
online manually and you have to

00:06:49,930 --> 00:06:54,849
configure them manually it is automated

00:06:52,509 --> 00:06:56,830
with the help of you deaf but there is

00:06:54,849 --> 00:06:58,960
still a lot of installer support that

00:06:56,830 --> 00:07:01,629
needs to be in place which hasn't been

00:06:58,960 --> 00:07:03,969
there before I've talked to the port

00:07:01,629 --> 00:07:05,800
maintainer of Debian just before this

00:07:03,969 --> 00:07:07,750
talk at the buff and hopefully we can

00:07:05,800 --> 00:07:10,240
merge all of this work and do it

00:07:07,750 --> 00:07:13,389
properly in Debian as well such that you

00:07:10,240 --> 00:07:16,060
can do a fully automated unattended

00:07:13,389 --> 00:07:18,969
proceed installations of Debian as well

00:07:16,060 --> 00:07:20,949
as a Bunter in practice that means that

00:07:18,969 --> 00:07:22,960
you need to activate does D drives you

00:07:20,949 --> 00:07:25,930
need to have support for a set of CP

00:07:22,960 --> 00:07:28,330
drives and have usually partment

00:07:25,930 --> 00:07:30,729
out as nice to automatically partition

00:07:28,330 --> 00:07:33,129
things if you have enough disk space and

00:07:30,729 --> 00:07:36,069
all of those things have been enabled

00:07:33,129 --> 00:07:38,560
and because our di is generic across all

00:07:36,069 --> 00:07:40,300
platforms you can use the same preset

00:07:38,560 --> 00:07:43,719
files irrespective of which

00:07:40,300 --> 00:07:47,409
virtualization mode you use I've also

00:07:43,719 --> 00:07:50,409
added VLAN support after two s are used

00:07:47,409 --> 00:07:53,229
to fix it up such that you can now

00:07:50,409 --> 00:07:57,339
finally install Ubuntu with VLAN over

00:07:53,229 --> 00:08:00,129
the VLAN network only which is also nice

00:07:57,339 --> 00:08:01,750
and also was required for my usage of

00:08:00,129 --> 00:08:07,449
our mainframe because it's all on VLAN

00:08:01,750 --> 00:08:10,960
networks only what's different versus

00:08:07,449 --> 00:08:15,190
the Debian port so on Ubuntu only

00:08:10,960 --> 00:08:17,349
supports the EC 12 and up so that means

00:08:15,190 --> 00:08:19,750
you need to have latest or the one

00:08:17,349 --> 00:08:23,259
previous to that generation of mainframe

00:08:19,750 --> 00:08:26,770
so Debian supports much lower conflicts

00:08:23,259 --> 00:08:29,319
I think in support z9 and z 196 and etc

00:08:26,770 --> 00:08:34,060
so you do need slightly more recent

00:08:29,319 --> 00:08:36,640
mainframe we do have byte now and F PI

00:08:34,060 --> 00:08:38,800
enabled by default inside the tool chain

00:08:36,640 --> 00:08:41,380
such that majority of the packages

00:08:38,800 --> 00:08:44,620
unless they explicitly try to disable

00:08:41,380 --> 00:08:45,779
that they're built with F PI enabled by

00:08:44,620 --> 00:08:49,709
default and

00:08:45,779 --> 00:08:53,399
it brings security features to the whole

00:08:49,709 --> 00:08:57,029
operating systems we do not use the

00:08:53,399 --> 00:09:00,329
legacy of W up and down scripts they are

00:08:57,029 --> 00:09:03,480
racy they're a bit cumbersome to

00:09:00,329 --> 00:09:06,420
maintain instead we use G Z dev tooling

00:09:03,480 --> 00:09:07,860
only and that means that we generate you

00:09:06,420 --> 00:09:11,399
their rules to bring up all of your

00:09:07,860 --> 00:09:14,249
devices up in race free manner we have

00:09:11,399 --> 00:09:16,709
KVM support and hands up and stack

00:09:14,249 --> 00:09:18,839
support and also we built our di of with

00:09:16,709 --> 00:09:21,240
all the languages enabled such that you

00:09:18,839 --> 00:09:25,279
have localized di experience if you

00:09:21,240 --> 00:09:25,279
don't speak English

00:09:25,819 --> 00:09:31,319
in terms of software stacks I've

00:09:28,410 --> 00:09:33,629
mentioned that previously but we do have

00:09:31,319 --> 00:09:37,680
OpenStack available cloudian and go line

00:09:33,629 --> 00:09:41,249
GCC go likes the docker manga be etc so

00:09:37,680 --> 00:09:43,110
all of the typical web scale things are

00:09:41,249 --> 00:09:46,050
available and traditional server

00:09:43,110 --> 00:09:49,230
databases are also available there is

00:09:46,050 --> 00:09:51,600
currently lack or less availability of

00:09:49,230 --> 00:09:55,170
proprietary software or third-party

00:09:51,600 --> 00:09:57,660
vendor software and however that's in

00:09:55,170 --> 00:10:02,000
progress to be enabled and essentially

00:09:57,660 --> 00:10:02,000
to become available on a bunch of soon

00:10:03,050 --> 00:10:08,699
right and that's a picture of a z13

00:10:06,809 --> 00:10:11,939
mainframe and they're the Linux one

00:10:08,699 --> 00:10:14,370
branding it is it has orange borders on

00:10:11,939 --> 00:10:18,360
the side I have no idea why IBM did that

00:10:14,370 --> 00:10:20,490
but it's different type of orange but at

00:10:18,360 --> 00:10:23,850
least it's nice do you have any

00:10:20,490 --> 00:10:26,220
questions about s/390 acts or what IBM

00:10:23,850 --> 00:10:30,620
mainframe is or how to boot it or

00:10:26,220 --> 00:10:30,620
anything yes

00:10:34,770 --> 00:10:41,580
look yeah it could work okay so do you

00:10:38,910 --> 00:10:43,740
intend to contribute the changes that

00:10:41,580 --> 00:10:47,820
you did to a bunch you back to Debian at

00:10:43,740 --> 00:10:51,720
spend time on that right some changes

00:10:47,820 --> 00:10:54,000
are in other changes a lot of other

00:10:51,720 --> 00:10:57,209
changes are still to be ported today Ben

00:10:54,000 --> 00:10:59,399
and yes I plan to work on that in timely

00:10:57,209 --> 00:11:11,459
manner hopefully for the upcoming

00:10:59,399 --> 00:11:13,880
release before we freeze any other

00:11:11,459 --> 00:11:13,880
questions

00:11:19,520 --> 00:11:24,440
so out of curiosity I'm not sure if

00:11:22,250 --> 00:11:26,660
you're able to share that but what is

00:11:24,440 --> 00:11:28,550
actually canonic what our canonicus

00:11:26,660 --> 00:11:32,209
intentions why they're like bringing

00:11:28,550 --> 00:11:34,459
Ubuntu to these systems I mean usually

00:11:32,209 --> 00:11:36,110
the machines like costs a lot of money

00:11:34,459 --> 00:11:38,750
so it's not correct

00:11:36,110 --> 00:11:41,450
so there is a partnership between IBM

00:11:38,750 --> 00:11:44,660
Linux Wan and canonical to bring event

00:11:41,450 --> 00:11:46,700
available so Ubuntu is available on

00:11:44,660 --> 00:11:50,029
Linux Wan mainframes and it is an

00:11:46,700 --> 00:11:53,540
engagement with IBM because it has to be

00:11:50,029 --> 00:11:54,950
otherwise it would not happen so it is a

00:11:53,540 --> 00:11:57,440
partnership there is a joint

00:11:54,950 --> 00:11:59,899
collaboration joint support contracts

00:11:57,440 --> 00:12:03,080
joint support for people if they want to

00:11:59,899 --> 00:12:05,959
buy that and all of that so it is it is

00:12:03,080 --> 00:12:12,100
a engagement between IBM and canonical

00:12:05,959 --> 00:12:15,140
and you can see that a lot of Linux one

00:12:12,100 --> 00:12:17,390
developers from IBM teams from Linux

00:12:15,140 --> 00:12:19,220
labs they do participate in a bunch of

00:12:17,390 --> 00:12:21,230
development and you can see it on public

00:12:19,220 --> 00:12:23,000
bug tracker in the cetera and they are

00:12:21,230 --> 00:12:24,829
starting to contribute to day bin as

00:12:23,000 --> 00:12:27,200
well so they've contributed di

00:12:24,829 --> 00:12:29,990
components and bug fixes here and there

00:12:27,200 --> 00:12:37,880
it's not a lot yet but it's more than it

00:12:29,990 --> 00:12:39,890
used to be in the past yes yes so in

00:12:37,880 --> 00:12:42,620
practice there is currently quite a few

00:12:39,890 --> 00:12:44,660
different teams which you can see public

00:12:42,620 --> 00:12:48,440
contributions to various projects like -

00:12:44,660 --> 00:12:52,270
MongoDB - Nava - OpenStack - Kim you and

00:12:48,440 --> 00:12:54,860
it's alright yeah all over the place

00:12:52,270 --> 00:12:56,600
because like for them Linux one

00:12:54,860 --> 00:12:59,120
mainframes is quite important because by

00:12:56,600 --> 00:13:01,459
default option is to run on the Linux

00:12:59,120 --> 00:13:05,440
and you don't even get options to run

00:13:01,459 --> 00:13:08,870
z/os on it for example so it's they're

00:13:05,440 --> 00:13:11,240
trying to push Linux more aggressively

00:13:08,870 --> 00:13:13,339
on the mainframe and there is benefits

00:13:11,240 --> 00:13:16,010
to that in terms of i/o performance and

00:13:13,339 --> 00:13:19,730
CPU performance and people migrating

00:13:16,010 --> 00:13:22,089
from other Z operating systems on to

00:13:19,730 --> 00:13:22,089
Linux

00:13:27,050 --> 00:13:40,290
we still have lots of time for yes well

00:13:38,400 --> 00:13:42,980
I guess that's it then thank you very

00:13:40,290 --> 00:13:42,980

YouTube URL: https://www.youtube.com/watch?v=yAW-7NdNos0


