Title: MariaDB MySQL in Debian: improving packaging, security, quality and attracting new contributors
Publication date: 2017-12-05
Playlist: DebConf 16
Description: 
	by Otto Kekäläinen

At: Debconf 16 video RSS feed
https://debconf16.debconf.org/
Room: Menzies 9
Scheduled start: 2016-07-05 17:15:00
Captions: 
	00:00:01,939 --> 00:00:07,290
the principle maintainer of the melody

00:00:05,100 --> 00:00:10,410
with packages in Debian and I work for

00:00:07,290 --> 00:00:12,929
them our DB foundation so I've had a

00:00:10,410 --> 00:00:15,540
possibility to invest a lot of time in

00:00:12,929 --> 00:00:18,470
making those packages properly and keep

00:00:15,540 --> 00:00:22,020
the maintained well and at the moment

00:00:18,470 --> 00:00:25,920
there are no others from the package

00:00:22,020 --> 00:00:30,769
mysql team here at Cape Town but Robbie

00:00:25,920 --> 00:00:30,769
should be listening in the other stream

00:00:33,020 --> 00:00:42,140
Paul is Robbie listening cool great

00:00:40,980 --> 00:00:46,260
[Music]

00:00:42,140 --> 00:00:49,829
right you can also go to that IRC

00:00:46,260 --> 00:00:53,489
channel if you want to participate in in

00:00:49,829 --> 00:00:57,600
the IRC discussion all right

00:00:53,489 --> 00:01:02,489
so we have a minus QL team in Debian and

00:00:57,600 --> 00:01:04,769
in Ubuntu and it's a very old package

00:01:02,489 --> 00:01:06,450
and it's a very big package so over the

00:01:04,769 --> 00:01:09,840
years there has been lots of people

00:01:06,450 --> 00:01:13,369
involved but at the moment there are not

00:01:09,840 --> 00:01:16,530
very many highly active people we have

00:01:13,369 --> 00:01:19,860
I'd say we have four active people at

00:01:16,530 --> 00:01:22,080
the moment and the most active ones two

00:01:19,860 --> 00:01:24,750
most active ones is me taking care of

00:01:22,080 --> 00:01:27,150
the Murrah big package and Robbie basic

00:01:24,750 --> 00:01:34,229
who is a canonical employee taking care

00:01:27,150 --> 00:01:36,329
of the MySQL package and we are looking

00:01:34,229 --> 00:01:39,689
for new contributors because obviously

00:01:36,329 --> 00:01:43,740
this is a huge package and it has a lot

00:01:39,689 --> 00:01:51,960
of dependencies and now something

00:01:43,740 --> 00:01:55,460
happened to the sound it's ok yeah so

00:01:51,960 --> 00:01:58,770
how many of you are Debian developers

00:01:55,460 --> 00:02:02,549
great how many are Debian maintainer or

00:01:58,770 --> 00:02:06,210
aspiring to be Debian developers so if

00:02:02,549 --> 00:02:09,319
you if you help us with with packaging

00:02:06,210 --> 00:02:12,980
we are happy to help you on that path

00:02:09,319 --> 00:02:15,080
all right here's an overview of what

00:02:12,980 --> 00:02:17,840
the team maintains in Debian at the

00:02:15,080 --> 00:02:20,629
moment so this is very small but I'm

00:02:17,840 --> 00:02:23,239
sure you all can go to QA debian organ

00:02:20,629 --> 00:02:25,489
look at this on your own laptop yourself

00:02:23,239 --> 00:02:28,780
so there's the Galera package

00:02:25,489 --> 00:02:30,700
marilla be package maradi big client

00:02:28,780 --> 00:02:36,080
libraries

00:02:30,700 --> 00:02:40,370
- ql l vm backup mysql 5/5 in stable

00:02:36,080 --> 00:02:45,159
muscular 5-6 in unstable and testing no

00:02:40,370 --> 00:02:45,159
wait in old old stable has my skill 5/5

00:02:46,329 --> 00:02:54,980
and we have a muscular connector

00:02:51,829 --> 00:03:03,260
muscular proxy and I have percona extra

00:02:54,980 --> 00:03:05,329
backup so mostly the situation is pretty

00:03:03,260 --> 00:03:07,640
stable and good but we have all kinds of

00:03:05,329 --> 00:03:11,230
annoying stuff like for example the

00:03:07,640 --> 00:03:13,910
bills are not reproducible and there are

00:03:11,230 --> 00:03:24,169
some architectures who have built favors

00:03:13,910 --> 00:03:26,510
and so on alright and the change that's

00:03:24,169 --> 00:03:27,919
happening now in this release cycle is

00:03:26,510 --> 00:03:30,560
that the released team said that they

00:03:27,919 --> 00:03:33,349
want to have Murray DB as the default

00:03:30,560 --> 00:03:36,319
and there has not been any kind of

00:03:33,349 --> 00:03:38,780
facilities before to define a default so

00:03:36,319 --> 00:03:41,980
we are introducing now new meta packages

00:03:38,780 --> 00:03:44,959
and this is how the plan looks like and

00:03:41,980 --> 00:03:46,370
maybe if you Robbie are listening in you

00:03:44,959 --> 00:03:48,889
can comment if this is the latest

00:03:46,370 --> 00:03:53,239
planner have you done any updates in the

00:03:48,889 --> 00:03:55,849
recent hour or so so this is very much

00:03:53,239 --> 00:03:58,579
work in progress and it's fully open to

00:03:55,849 --> 00:04:01,359
discussion and contributions if you want

00:03:58,579 --> 00:04:05,239
to say something so the idea is to have

00:04:01,359 --> 00:04:07,459
a new source package called MySQL

00:04:05,239 --> 00:04:11,569
defaults Rob is giving thumbs-up great

00:04:07,459 --> 00:04:14,989
and that source package is going to

00:04:11,569 --> 00:04:17,180
produce a few meta packages and all

00:04:14,989 --> 00:04:19,820
packages that previously depended

00:04:17,180 --> 00:04:22,490
directly on Maya scale or later on Marie

00:04:19,820 --> 00:04:24,919
B should in future depend on this meta

00:04:22,490 --> 00:04:26,020
packages and this meta packages then

00:04:24,919 --> 00:04:28,830
point

00:04:26,020 --> 00:04:34,569
to the version which the release team

00:04:28,830 --> 00:04:37,229
decides is the default at some time so

00:04:34,569 --> 00:04:39,970
if you have a normal run time dependency

00:04:37,229 --> 00:04:42,639
you would write something like this this

00:04:39,970 --> 00:04:47,319
scheme with virtual MySQL server already

00:04:42,639 --> 00:04:50,169
exists we are going to keep it at the

00:04:47,319 --> 00:04:52,750
moment and if you have build depends

00:04:50,169 --> 00:04:55,569
then you should change it to build

00:04:52,750 --> 00:04:58,750
depending on this meta package which

00:04:55,569 --> 00:05:00,069
then there's some tricks and uses the

00:04:58,750 --> 00:05:02,970
libman SQL client

00:05:00,069 --> 00:05:07,479
18 from already be at the moment and

00:05:02,970 --> 00:05:14,530
then in future it might use another

00:05:07,479 --> 00:05:19,810
version okay and I have typos here Libby

00:05:14,530 --> 00:05:21,610
yeah alright so I guess we could stop

00:05:19,810 --> 00:05:23,889
here for a while I have a bit more of

00:05:21,610 --> 00:05:26,409
presentation but this is a buff so let's

00:05:23,889 --> 00:05:34,180
let's take a pause here and listen in to

00:05:26,409 --> 00:05:37,380
your comments and about this how many of

00:05:34,180 --> 00:05:37,380
you you have a comment

00:05:51,680 --> 00:06:03,270
well yeah so if you have a new

00:05:57,840 --> 00:06:05,580
installation if you have a new

00:06:03,270 --> 00:06:07,620
installation and you write for example

00:06:05,580 --> 00:06:11,370
up to get install wordpress and

00:06:07,620 --> 00:06:13,620
wordpress depends on this and you don't

00:06:11,370 --> 00:06:16,410
have any muscular variant installed then

00:06:13,620 --> 00:06:18,740
it will take the first option and it

00:06:16,410 --> 00:06:21,600
will pull in marie DB at the moment and

00:06:18,740 --> 00:06:24,060
if you have installed manually something

00:06:21,600 --> 00:06:27,350
else which provides this then that will

00:06:24,060 --> 00:06:31,010
stay and it will not pull in the default

00:06:27,350 --> 00:06:35,030
then if you have an old server which is

00:06:31,010 --> 00:06:39,090
which is which has some database

00:06:35,030 --> 00:06:41,460
installed then actually depending on

00:06:39,090 --> 00:06:44,670
what packages you have that depend on

00:06:41,460 --> 00:06:48,420
that database you get the different kind

00:06:44,670 --> 00:06:52,770
of result and to the question how stable

00:06:48,420 --> 00:06:56,220
it is well I I can't really say I know

00:06:52,770 --> 00:06:58,620
that I am maintaining Mary DB packages

00:06:56,220 --> 00:07:02,430
very in a very stable fashion and for a

00:06:58,620 --> 00:07:05,730
long time so it's basically the release

00:07:02,430 --> 00:07:09,290
team who should comment on how often

00:07:05,730 --> 00:07:15,780
they want to change this default but

00:07:09,290 --> 00:07:21,420
probably not very often I was mentioned

00:07:15,780 --> 00:07:22,350
that no UDP is more compatible than my

00:07:21,420 --> 00:07:24,210
SQL itself

00:07:22,350 --> 00:07:26,880
yeah so the question is if something

00:07:24,210 --> 00:07:29,970
happens to my UDP can we go back to

00:07:26,880 --> 00:07:31,890
MySQL yeah the idea with this is that

00:07:29,970 --> 00:07:33,810
the release team specifically wanted to

00:07:31,890 --> 00:07:36,390
have a facility so that there's one

00:07:33,810 --> 00:07:39,270
point where you can turn the knob and

00:07:36,390 --> 00:07:41,940
change the default instead of doing a

00:07:39,270 --> 00:07:43,440
mess bug filing on 200 packages you just

00:07:41,940 --> 00:07:45,240
have one meta package and you need

00:07:43,440 --> 00:07:47,880
upload a new version of it and then the

00:07:45,240 --> 00:07:50,100
default changes and that facility exists

00:07:47,880 --> 00:07:51,810
for the reason that the release team can

00:07:50,100 --> 00:07:54,030
make these kind of decisions and they

00:07:51,810 --> 00:07:57,020
want to be able to make these kinds of

00:07:54,030 --> 00:08:01,740
decisions in case there is something

00:07:57,020 --> 00:08:02,820
that suddenly comes up and and you need

00:08:01,740 --> 00:08:09,050
to chain

00:08:02,820 --> 00:08:11,640
the default so so I think that the

00:08:09,050 --> 00:08:14,790
dependency resolve mechanism in Debian

00:08:11,640 --> 00:08:17,280
should not change your currently

00:08:14,790 --> 00:08:20,940
installed packages if we follow the

00:08:17,280 --> 00:08:26,370
scheme because all the providers are at

00:08:20,940 --> 00:08:29,480
the second level and if it is already if

00:08:26,370 --> 00:08:33,690
it's already installed on your system

00:08:29,480 --> 00:08:35,220
and your dependency is already ok then

00:08:33,690 --> 00:08:39,480
it doesn't need to install anything new

00:08:35,220 --> 00:08:44,340
so it will not install the default if

00:08:39,480 --> 00:08:46,440
the other one is ready then your

00:08:44,340 --> 00:08:49,920
question was about stability and

00:08:46,440 --> 00:08:51,930
backwards compatibility yeah and I need

00:08:49,920 --> 00:08:54,000
to upgrade my service so I'm wondering

00:08:51,930 --> 00:08:56,130
which one should I use not so should I

00:08:54,000 --> 00:08:59,340
stay with MySQL which I which is already

00:08:56,130 --> 00:09:03,770
working fine or EAD b55 which is working

00:08:59,340 --> 00:09:06,210
fine I'll go to 1010 go to I think that

00:09:03,770 --> 00:09:08,430
you should at some point obviously you

00:09:06,210 --> 00:09:10,830
need to upgrade from 5/5 versions to

00:09:08,430 --> 00:09:11,550
something newer and since I represent

00:09:10,830 --> 00:09:15,030
more eBay

00:09:11,550 --> 00:09:16,740
I think it's better but of course admins

00:09:15,030 --> 00:09:18,780
can make their decisions if they feel

00:09:16,740 --> 00:09:21,240
that there's some specific feature in

00:09:18,780 --> 00:09:24,450
MySQL five six or five seven that they

00:09:21,240 --> 00:09:26,730
want to use and so on but if you don't

00:09:24,450 --> 00:09:30,360
care then you just info install the

00:09:26,730 --> 00:09:33,690
default and he was asking really you to

00:09:30,360 --> 00:09:36,180
what you recommend yeah well I recommend

00:09:33,690 --> 00:09:39,570
marié digby but you know that's kind of

00:09:36,180 --> 00:09:43,500
obvious and and and what Sergey was

00:09:39,570 --> 00:09:45,060
saying about compatibility so and the

00:09:43,500 --> 00:09:47,940
stability your question was about

00:09:45,060 --> 00:09:50,100
stability so there was a fork at the

00:09:47,940 --> 00:09:52,950
five five level and at that point

00:09:50,100 --> 00:09:57,240
marilla based 100% ABI compatible with

00:09:52,950 --> 00:10:00,180
MySQL now it's maybe 99 percent but it's

00:09:57,240 --> 00:10:01,770
not like applications use 100 percent of

00:10:00,180 --> 00:10:04,140
the features that most of nodes let's

00:10:01,770 --> 00:10:07,320
just the basic stuff and I think that's

00:10:04,140 --> 00:10:09,450
probably gonna be compatible forever and

00:10:07,320 --> 00:10:13,020
I know that at least in Murray DB

00:10:09,450 --> 00:10:15,210
development we test that upgrades from

00:10:13,020 --> 00:10:16,080
earlier versions of Murray be work well

00:10:15,210 --> 00:10:21,690
and that upgrade

00:10:16,080 --> 00:10:23,490
from from my ask us work well so to my

00:10:21,690 --> 00:10:26,190
knowledge at least that but should work

00:10:23,490 --> 00:10:27,800
and then you have to ask Oracle people

00:10:26,190 --> 00:10:29,550
how much they want to support

00:10:27,800 --> 00:10:31,710
backwards-compatibility there has at

00:10:29,550 --> 00:10:34,950
least been Paul had some issues in

00:10:31,710 --> 00:10:38,190
Debian in in Ubuntu when they introduced

00:10:34,950 --> 00:10:40,400
muscular 5:7 and stuff broke because it

00:10:38,190 --> 00:10:46,170
wasn't properly backwards compatible

00:10:40,400 --> 00:10:48,330
with five six so so that this is kind of

00:10:46,170 --> 00:10:51,870
the intent but then of course it's

00:10:48,330 --> 00:10:53,910
software and it has bugs and people

00:10:51,870 --> 00:10:58,410
can't can't know all the features that's

00:10:53,910 --> 00:11:00,420
everywhere so so we can't maybe promise

00:10:58,410 --> 00:11:02,370
anything but I think it's good that we

00:11:00,420 --> 00:11:05,610
have this facility so that it's possible

00:11:02,370 --> 00:11:09,810
to easily change and fix stuff if it's

00:11:05,610 --> 00:11:16,440
starts breaking so one of my packages

00:11:09,810 --> 00:11:18,330
built depend on MySQL is so I understand

00:11:16,440 --> 00:11:21,780
that currently that should not be an

00:11:18,330 --> 00:11:24,420
issue either one what do you think that

00:11:21,780 --> 00:11:26,490
yeah so it's future-looking but what do

00:11:24,420 --> 00:11:28,620
you think it yeah so if you build the

00:11:26,490 --> 00:11:33,030
pen then you should update to this and

00:11:28,620 --> 00:11:36,360
this will use the Maria DB provided Lib

00:11:33,030 --> 00:11:41,280
MySQL client 18 and it doesn't matter

00:11:36,360 --> 00:11:43,740
because the client library will will

00:11:41,280 --> 00:11:45,980
work with either one of the versions

00:11:43,740 --> 00:11:49,740
when it talks to them the ABI is

00:11:45,980 --> 00:11:52,740
compatible and it's close enough and if

00:11:49,740 --> 00:11:56,520
you have if you have for example the

00:11:52,740 --> 00:11:57,990
Maria DB node.js library which uses a

00:11:56,520 --> 00:11:59,820
synchronous functions that are only

00:11:57,990 --> 00:12:02,100
available you may really be then you

00:11:59,820 --> 00:12:04,860
can't rely on this then you should

00:12:02,100 --> 00:12:09,420
specifically build depend on the Maria

00:12:04,860 --> 00:12:13,950
DB client library version so that's a

00:12:09,420 --> 00:12:16,170
corner case but I think like 99.9% of

00:12:13,950 --> 00:12:18,540
the software in Debian can just will

00:12:16,170 --> 00:12:22,200
depend on this and everything will work

00:12:18,540 --> 00:12:25,050
with both client client library versions

00:12:22,200 --> 00:12:27,960
because they are so it's a fork of the

00:12:25,050 --> 00:12:29,550
same base and they have a different

00:12:27,960 --> 00:12:31,860
feature sets in new

00:12:29,550 --> 00:12:33,510
features and they are not kind of super

00:12:31,860 --> 00:12:35,850
sets of each others they are going to

00:12:33,510 --> 00:12:39,089
different directions but the base is the

00:12:35,850 --> 00:12:42,839
same and pretty much all the apps use

00:12:39,089 --> 00:12:46,110
the base so luckily my package hasn't

00:12:42,839 --> 00:12:48,390
changed in a while so on just work but

00:12:46,110 --> 00:12:51,630
at some point there will probably be

00:12:48,390 --> 00:12:56,310
some something breaking and but that's

00:12:51,630 --> 00:12:58,320
not perhaps specific to the MySQL MIDI

00:12:56,310 --> 00:13:00,209
be fork that's also something that

00:12:58,320 --> 00:13:06,180
happens naturally when there are new

00:13:00,209 --> 00:13:08,250
versions of software their API gets the

00:13:06,180 --> 00:13:12,120
gets new API versions and the so named

00:13:08,250 --> 00:13:16,040
bumps up and so on so we'll we are

00:13:12,120 --> 00:13:16,040
prepared for those cases I think

00:13:23,430 --> 00:13:32,250
any other questions so how many are

00:13:29,850 --> 00:13:35,940
maintaining a package that currently

00:13:32,250 --> 00:13:40,980
depends on my SQL Server or virtual

00:13:35,940 --> 00:13:47,279
MySQL server Perl guys at least have one

00:13:40,980 --> 00:13:52,680
package yeah you know don't server I

00:13:47,279 --> 00:13:58,680
guess was in the library I mean well we

00:13:52,680 --> 00:14:00,870
believe MySQL yeah that one it it it

00:13:58,680 --> 00:14:03,810
depends on let MySQL client and if

00:14:00,870 --> 00:14:07,110
future it should depend on this there's

00:14:03,810 --> 00:14:09,060
multiple packages recommending of course

00:14:07,110 --> 00:14:12,029
the server but because it's a remote

00:14:09,060 --> 00:14:24,060
database they don't typically no depend

00:14:12,029 --> 00:14:29,100
on them yeah all right so so this is

00:14:24,060 --> 00:14:31,080
this is common for MySQL and MariaDB and

00:14:29,100 --> 00:14:35,209
I said this is the team and the packages

00:14:31,080 --> 00:14:37,800
they have do you want to discuss

00:14:35,209 --> 00:14:42,270
something related to any of these

00:14:37,800 --> 00:14:45,570
packages do you have any any needs or

00:14:42,270 --> 00:14:50,520
concerns in general related to the state

00:14:45,570 --> 00:14:54,510
of of this so at the moment we have

00:14:50,520 --> 00:14:58,950
maybe ten in Jesse and in testing and

00:14:54,510 --> 00:15:03,620
unstable and we have MySQL five five in

00:14:58,950 --> 00:15:03,620
old stable and muscular five six

00:15:06,520 --> 00:15:12,670
this says it's available in on old table

00:15:09,430 --> 00:15:26,860
2 which is new to me so somebody was

00:15:12,670 --> 00:15:30,160
doing some backporting it was you so is

00:15:26,860 --> 00:15:34,300
there 5 5 in Jessie and you prepare the

00:15:30,160 --> 00:15:37,420
five six backport - Jesse yeah and five

00:15:34,300 --> 00:15:42,040
seven is in the works it it will I will

00:15:37,420 --> 00:15:44,370
upload it into Debian soon so then we

00:15:42,040 --> 00:15:47,140
will have mask you five seven and then

00:15:44,370 --> 00:15:48,340
my really be ten point two is also in

00:15:47,140 --> 00:15:53,590
the works and that will be introduced

00:15:48,340 --> 00:15:58,750
also soon I also want to relay some

00:15:53,590 --> 00:16:04,810
comments from IRC it was to the question

00:15:58,750 --> 00:16:07,090
of the compatibility or we said he said

00:16:04,810 --> 00:16:09,340
the biggest issue right now is that you

00:16:07,090 --> 00:16:13,030
can't easily switch from ready to be to

00:16:09,340 --> 00:16:14,910
MySQL Oh apparently the way to marry the

00:16:13,030 --> 00:16:17,820
peers okay but the other way around not

00:16:14,910 --> 00:16:20,290
because the db4 must do not carry over

00:16:17,820 --> 00:16:24,190
you must manually dump

00:16:20,290 --> 00:16:26,740
restore and tweak as necessary a newer

00:16:24,190 --> 00:16:28,720
upstream versions of MySQL have been

00:16:26,740 --> 00:16:30,880
cleaned up which breaks some

00:16:28,720 --> 00:16:33,490
compatibility for example in locking

00:16:30,880 --> 00:16:37,480
down things in the schema which made no

00:16:33,490 --> 00:16:42,190
sense anyways primary key columns being

00:16:37,480 --> 00:16:47,860
runnable etc deprecating Lib MySQL

00:16:42,190 --> 00:16:51,250
client are because MySQL MySQL client is

00:16:47,860 --> 00:16:52,990
now threat safe this kind of things is

00:16:51,250 --> 00:16:56,170
what has been break breaking

00:16:52,990 --> 00:17:00,550
compatibility in MySQL of 5.7 which I

00:16:56,170 --> 00:17:01,740
was observing my package breaking in

00:17:00,550 --> 00:17:06,040
Ubuntu

00:17:01,740 --> 00:17:08,680
you also had the example of the

00:17:06,040 --> 00:17:13,290
parameter which changed logic that it

00:17:08,680 --> 00:17:16,720
doesn't accept empty values anymore so

00:17:13,290 --> 00:17:19,230
so yeah so MySQL 7 has been cleaning up

00:17:16,720 --> 00:17:21,390
stuff which means

00:17:19,230 --> 00:17:25,589
doesn't it it has broken some stuff

00:17:21,390 --> 00:17:29,610
that's backwards-compatible but but of

00:17:25,589 --> 00:17:32,040
course nobody this is normal evolution

00:17:29,610 --> 00:17:34,169
in software and we are talking about

00:17:32,040 --> 00:17:36,120
compatibility on different levels can

00:17:34,169 --> 00:17:40,020
you switch back and forth and can you

00:17:36,120 --> 00:17:42,980
use the same data format on disk or not

00:17:40,020 --> 00:17:46,410
and most of the time system

00:17:42,980 --> 00:17:49,080
administrators who are smart before they

00:17:46,410 --> 00:17:51,809
do at least upgrade they will make a

00:17:49,080 --> 00:17:55,320
dump and backup of their database and

00:17:51,809 --> 00:17:57,630
they will make that in a in an SQL dump

00:17:55,320 --> 00:17:59,940
format and so on and that format is

00:17:57,630 --> 00:18:04,710
pretty portable and you can take it into

00:17:59,940 --> 00:18:06,059
new places and so on so so this so so

00:18:04,710 --> 00:18:08,669
you need to keep in mind that when we

00:18:06,059 --> 00:18:12,840
are talking about switching back and

00:18:08,669 --> 00:18:15,990
forth where we are talking about how how

00:18:12,840 --> 00:18:18,480
easy it is or is it difficult but

00:18:15,990 --> 00:18:20,100
probably you are not locked in in any

00:18:18,480 --> 00:18:23,820
situation you can always do a manual

00:18:20,100 --> 00:18:26,510
dump and transfer the data into new

00:18:23,820 --> 00:18:26,510
installation

00:18:36,120 --> 00:18:42,029
so how many of you are making backups of

00:18:38,610 --> 00:18:55,559
your database great what what backup

00:18:42,029 --> 00:19:01,110
techniques do you use MySQL dump is LVM

00:18:55,559 --> 00:19:04,409
snapshots yeah are you using this my LVM

00:19:01,110 --> 00:19:10,529
backup package to do it yeah is somebody

00:19:04,409 --> 00:19:13,919
using Percona extra backup yeah cool and

00:19:10,529 --> 00:19:19,610
if somebody using using BIM logs in a

00:19:13,919 --> 00:19:22,500
backlog backup fashion yeah all right I

00:19:19,610 --> 00:19:25,770
think that may be an area which should

00:19:22,500 --> 00:19:29,700
be improved a little bit because there

00:19:25,770 --> 00:19:32,820
are I have a request in will become

00:19:29,700 --> 00:19:38,669
first common as well making backups an

00:19:32,820 --> 00:19:42,740
option there yeah is there anything from

00:19:38,669 --> 00:19:44,940
Robbie on IRC or somebody else on IRC

00:19:42,740 --> 00:19:47,700
just a comment on the previous

00:19:44,940 --> 00:19:50,669
discussion he imagined that fixes needed

00:19:47,700 --> 00:19:53,450
for 5.7 will still work with Maria Beals

00:19:50,669 --> 00:19:53,450
oh yeah

00:19:59,250 --> 00:20:08,940
all right so this we already discussed

00:20:01,919 --> 00:20:12,059
and I said if you we will we will start

00:20:08,940 --> 00:20:14,610
by uploading this to experimental and

00:20:12,059 --> 00:20:17,640
then you can test out in experimental or

00:20:14,610 --> 00:20:20,130
you can review our plants at the moment

00:20:17,640 --> 00:20:21,270
in get and comment them on plan level or

00:20:20,130 --> 00:20:22,980
you can wait until they are an

00:20:21,270 --> 00:20:25,080
experiment and then test testing

00:20:22,980 --> 00:20:28,020
experimental and comment them and

00:20:25,080 --> 00:20:30,120
request changes so this is this is the

00:20:28,020 --> 00:20:35,460
hot thing which which is we are doing

00:20:30,120 --> 00:20:38,490
right now and then for Marilla B which

00:20:35,460 --> 00:20:42,330
I'm the main maintainer for I have some

00:20:38,490 --> 00:20:44,520
easy to do issues which I have put up in

00:20:42,330 --> 00:20:48,510
the bug tracker and these are

00:20:44,520 --> 00:20:50,880
specifically designed with new

00:20:48,510 --> 00:20:52,950
contributors in mind that you don't need

00:20:50,880 --> 00:20:54,480
to learn overly too much about the

00:20:52,950 --> 00:20:56,610
current state of packaging and

00:20:54,480 --> 00:21:00,000
dependencies of stuff these are

00:20:56,610 --> 00:21:02,400
independent jobs and you can go to this

00:21:00,000 --> 00:21:05,039
address to see all wishlist

00:21:02,400 --> 00:21:10,049
level items and I've repented them with

00:21:05,039 --> 00:21:12,330
to do so if any of this looks

00:21:10,049 --> 00:21:14,760
interesting to you and you could do it

00:21:12,330 --> 00:21:18,120
easily then please by all means step

00:21:14,760 --> 00:21:22,650
forward and contribute by helping with

00:21:18,120 --> 00:21:27,360
them we for example have some some

00:21:22,650 --> 00:21:29,730
system be expert in the room because we

00:21:27,360 --> 00:21:32,580
are still running the traditional init

00:21:29,730 --> 00:21:37,909
script and we should have a native

00:21:32,580 --> 00:21:37,909
system the script in Debian

00:21:39,200 --> 00:21:47,690
how about do you have any metadata that

00:21:41,420 --> 00:21:50,600
yml experts here okay how about out the

00:21:47,690 --> 00:21:53,450
package tests could somebody want to

00:21:50,600 --> 00:21:55,550
contribute them it's actually quite easy

00:21:53,450 --> 00:21:57,800
to do them because you can look what

00:21:55,550 --> 00:22:00,230
mysql packages are doing at the moment

00:21:57,800 --> 00:22:02,900
they have other packages testing in

00:22:00,230 --> 00:22:04,760
Debian and Ubuntu you could just start

00:22:02,900 --> 00:22:07,250
by copying that and reviewing it and

00:22:04,760 --> 00:22:13,520
maybe tweak it a little bit and then

00:22:07,250 --> 00:22:17,800
it's done just before you go on I have a

00:22:13,520 --> 00:22:20,690
message here from Jason on IRC and to

00:22:17,800 --> 00:22:24,020
congratulate you and Italian team and

00:22:20,690 --> 00:22:26,180
Maria debe team on the effort that

00:22:24,020 --> 00:22:30,310
you've done with the development so you

00:22:26,180 --> 00:22:30,310
say um you're doing great job thank you

00:22:31,660 --> 00:22:45,110
alright so this is the easy ones I

00:22:34,120 --> 00:22:47,300
Sergei ona somewhat unrelated note I'll

00:22:45,110 --> 00:22:50,140
check my squirrel packaging and they do

00:22:47,300 --> 00:22:52,840
not use operators all they use yossel

00:22:50,140 --> 00:22:54,080
let's show I just check the dependencies

00:22:52,840 --> 00:22:56,420
yeah

00:22:54,080 --> 00:23:01,070
so I also check this just before this

00:22:56,420 --> 00:23:05,030
talk so here are some more difficult to

00:23:01,070 --> 00:23:07,760
do items so reproducible builds are

00:23:05,030 --> 00:23:11,300
broken and they are broken for different

00:23:07,760 --> 00:23:14,870
reasons but at the moment the Maria DB

00:23:11,300 --> 00:23:17,090
was working correctly for a while but

00:23:14,870 --> 00:23:19,670
then something broke and it's very

00:23:17,090 --> 00:23:21,260
difficult to debug what broke

00:23:19,670 --> 00:23:25,340
what broke because something is

00:23:21,260 --> 00:23:28,880
introducing a build ID into that Taku DB

00:23:25,340 --> 00:23:31,670
plug-in and we haven't been able to

00:23:28,880 --> 00:23:35,810
track down what does it it has something

00:23:31,670 --> 00:23:37,760
to do with the Debian debug builds or

00:23:35,810 --> 00:23:39,770
something with how reproducible builds

00:23:37,760 --> 00:23:42,560
are done because it doesn't repeat on

00:23:39,770 --> 00:23:46,130
normal builds on our own machines and so

00:23:42,560 --> 00:23:48,620
on do we have some reproducible build

00:23:46,130 --> 00:23:52,930
experts who would like to tackle that

00:23:48,620 --> 00:23:56,060
one so it's just one one mind miner say

00:23:52,930 --> 00:23:59,000
left and after that the bills are again

00:23:56,060 --> 00:24:01,730
reproducible but this is just hard to

00:23:59,000 --> 00:24:02,720
crack have you asked about that on the

00:24:01,730 --> 00:24:05,270
mailing list

00:24:02,720 --> 00:24:07,190
now reproducible I mean there's

00:24:05,270 --> 00:24:10,820
lots of people very helpful so would you

00:24:07,190 --> 00:24:12,410
like to contribute by hanging on IRC and

00:24:10,820 --> 00:24:16,670
are on the mailing list

00:24:12,410 --> 00:24:18,890
I would suggest that even go on I see

00:24:16,670 --> 00:24:20,630
here at that conference just asked who's

00:24:18,890 --> 00:24:26,330
around to have a look at it with you

00:24:20,630 --> 00:24:28,870
yeah there are plenty here yeah I but I

00:24:26,330 --> 00:24:32,420
I think for the rest of the evening and

00:24:28,870 --> 00:24:36,620
so I'm tied up to this default package

00:24:32,420 --> 00:24:38,360
thing building and testing it so so this

00:24:36,620 --> 00:24:42,200
is kind of a separate issue which

00:24:38,360 --> 00:24:43,550
doesn't need need involvement from me so

00:24:42,200 --> 00:24:46,010
it would be really nice if somebody else

00:24:43,550 --> 00:24:48,680
would investigate and just send a patch

00:24:46,010 --> 00:24:52,330
when it's done we're all busy and I'm

00:24:48,680 --> 00:24:54,590
happy to add you add you to the package

00:24:52,330 --> 00:24:59,690
MySQL team if you want to have direct

00:24:54,590 --> 00:25:06,470
push access to the git repository your

00:24:59,690 --> 00:25:09,350
question so my question is really not

00:25:06,470 --> 00:25:12,380
technical but I was I was wondering

00:25:09,350 --> 00:25:15,410
about the what married DB like the

00:25:12,380 --> 00:25:19,550
organization is how its funded is it a

00:25:15,410 --> 00:25:22,430
non-profit thing or yeah yeah so there's

00:25:19,550 --> 00:25:25,130
Murray DB corporation which for example

00:25:22,430 --> 00:25:27,560
Sergey works for and you can ask more

00:25:25,130 --> 00:25:31,000
about the corporation from Sergey it has

00:25:27,560 --> 00:25:34,930
I think something like 100 employees and

00:25:31,000 --> 00:25:38,090
it does all kinds of commercial work and

00:25:34,930 --> 00:25:44,120
support services and commercial versions

00:25:38,090 --> 00:25:46,340
and so on and I myself and iron work for

00:25:44,120 --> 00:25:50,270
Murray be a Foundation which is

00:25:46,340 --> 00:25:52,460
nonprofit and we are funded aside in my

00:25:50,270 --> 00:25:54,790
previous talk actually presented a

00:25:52,460 --> 00:25:57,740
little bit about it so we are funded by

00:25:54,790 --> 00:25:59,810
by multi multiple we are we have

00:25:57,740 --> 00:26:02,000
individuals who donate to us and then we

00:25:59,810 --> 00:26:05,570
have corporations who donate to us

00:26:02,000 --> 00:26:07,790
for example booking.com and bhisma

00:26:05,570 --> 00:26:10,850
and and Marilla big corporation is one

00:26:07,790 --> 00:26:13,340
of the sponsors but it's the amount that

00:26:10,850 --> 00:26:16,420
they give is only twenty percent of the

00:26:13,340 --> 00:26:19,520
entire budget so we are financially

00:26:16,420 --> 00:26:23,630
independent and and the foundation has

00:26:19,520 --> 00:26:25,280
all the needed acid assets so if

00:26:23,630 --> 00:26:27,680
something happens to the corporation we

00:26:25,280 --> 00:26:30,140
can continue the open source project our

00:26:27,680 --> 00:26:33,020
our task is to take care of the open

00:26:30,140 --> 00:26:36,170
source project and make sure that this

00:26:33,020 --> 00:26:39,470
software is around for twenty thirty

00:26:36,170 --> 00:26:45,830
forty years or how long you you have

00:26:39,470 --> 00:26:49,700
databases running another question on

00:26:45,830 --> 00:26:52,280
IRC from Jason is it necessary to be a

00:26:49,700 --> 00:26:54,380
Debian developer to help in the to do

00:26:52,280 --> 00:26:58,760
stuff no absolutely not

00:26:54,380 --> 00:27:00,410
so the only magic power you get as a

00:26:58,760 --> 00:27:05,450
Debian developer at this is you can do

00:27:00,410 --> 00:27:07,400
uploads and stuff but but anybody who

00:27:05,450 --> 00:27:12,740
wants to participate can just start

00:27:07,400 --> 00:27:16,730
cracking the problem and for example we

00:27:12,740 --> 00:27:19,670
have the git repository so you can you

00:27:16,730 --> 00:27:23,030
can just clone it and make changes and

00:27:19,670 --> 00:27:25,190
then submit your patch and if you submit

00:27:23,030 --> 00:27:27,050
multiple patches then I can add you to

00:27:25,190 --> 00:27:28,280
the team so you have direct push access

00:27:27,050 --> 00:27:32,510
to the repository

00:27:28,280 --> 00:27:34,550
there's also also a mirror on the on

00:27:32,510 --> 00:27:37,070
github so if you want to use github

00:27:34,550 --> 00:27:43,430
workflow with Forks and pull requests

00:27:37,070 --> 00:27:45,740
there that's also possible and so here's

00:27:43,430 --> 00:27:51,770
here's information and there's a subpage

00:27:45,740 --> 00:27:57,490
teams / - cue slaps Murray DB if you

00:27:51,770 --> 00:28:01,480
want to take a look and I'm happy -

00:27:57,490 --> 00:28:04,460
happy to help you especially if you

00:28:01,480 --> 00:28:08,180
aspire to be a Debian maintained or a

00:28:04,460 --> 00:28:12,010
Debian developer someday so I'm happy to

00:28:08,180 --> 00:28:12,010
volunteer as your sponsor in that case

00:28:13,650 --> 00:28:21,010
all right and then then the second tough

00:28:18,520 --> 00:28:24,130
question so did you have any security

00:28:21,010 --> 00:28:29,830
team members here no so at the moment

00:28:24,130 --> 00:28:34,060
both MySQL and Marilla be use are built

00:28:29,830 --> 00:28:38,470
with the bundled yeah so SSL library

00:28:34,060 --> 00:28:40,690
instead of open SSL and so the ideal

00:28:38,470 --> 00:28:42,640
perhaps would be to use the system

00:28:40,690 --> 00:28:44,890
provided open SSL so if there's a

00:28:42,640 --> 00:28:46,990
heartbleed or something like that then

00:28:44,890 --> 00:28:50,320
it one single security upload into

00:28:46,990 --> 00:28:52,120
Debian will fix the system open SSL and

00:28:50,320 --> 00:28:54,550
then a security team cannister a trigger

00:28:52,120 --> 00:28:56,500
a build and or not even retriggerable

00:28:54,550 --> 00:28:59,290
it's just enough to start the diamond

00:28:56,500 --> 00:29:01,210
and load a new library and so on so fast

00:28:59,290 --> 00:29:04,030
accurate II point of view it would be

00:29:01,210 --> 00:29:09,280
nice to have a system provided SSL

00:29:04,030 --> 00:29:14,470
library and some something that open SSL

00:29:09,280 --> 00:29:17,800
is the best variant so I don't know but

00:29:14,470 --> 00:29:20,860
at least there's this licensing question

00:29:17,800 --> 00:29:30,160
that at the moment stops us from using

00:29:20,860 --> 00:29:33,850
open SSL so this is the typical open SSL

00:29:30,160 --> 00:29:38,170
exception to the GPL so one way would be

00:29:33,850 --> 00:29:40,900
for Oracle and then maybe two are the

00:29:38,170 --> 00:29:43,660
exception sort of license which I'm

00:29:40,900 --> 00:29:46,090
guessing is a hard thing to do but open

00:29:43,660 --> 00:29:48,070
SSL upstream has expressed that they are

00:29:46,090 --> 00:29:49,480
switching the apache license all right

00:29:48,070 --> 00:29:53,100
instead of governance is no license so

00:29:49,480 --> 00:29:53,100
eventually this will be fixed

00:29:53,690 --> 00:29:58,309
okay it will take some time they're

00:29:56,659 --> 00:30:00,409
tracking down all contributors and

00:29:58,309 --> 00:30:01,580
realize and singing about they have a

00:30:00,409 --> 00:30:06,350
blog about it

00:30:01,580 --> 00:30:10,940
there are also alternative SSL versions

00:30:06,350 --> 00:30:12,919
like C SSL which is now called Wolf SSL

00:30:10,940 --> 00:30:14,539
and libera SSL and so on but these

00:30:12,919 --> 00:30:17,659
alternatives have the problem that they

00:30:14,539 --> 00:30:20,779
are not maybe mature enough so if we

00:30:17,659 --> 00:30:23,659
wait enough we will buy time will solve

00:30:20,779 --> 00:30:25,190
this so that either open SSL will become

00:30:23,659 --> 00:30:27,440
apache license tour some of the

00:30:25,190 --> 00:30:30,799
competing libraries will become mature

00:30:27,440 --> 00:30:33,379
enough you can start using them blue TLS

00:30:30,799 --> 00:30:36,700
is also a good option it's GPS wouldn't

00:30:33,379 --> 00:30:39,440
be a conflict and it is mature enough

00:30:36,700 --> 00:30:43,580
which one could new TLS annuity Alice

00:30:39,440 --> 00:30:57,559
yeah so is that separate from from libre

00:30:43,580 --> 00:30:58,940
SSL liberalism fork okay now I just said

00:30:57,559 --> 00:31:01,070
that Libre cell is basically the same as

00:30:58,940 --> 00:31:04,460
openness itself symbolizes just slightly

00:31:01,070 --> 00:31:10,610
cleaned up code license wise no TLS is

00:31:04,460 --> 00:31:14,059
possible and a necessity possible and

00:31:10,610 --> 00:31:18,470
maybe CSL if it'll have enough

00:31:14,059 --> 00:31:20,899
functionality yeah so that so time will

00:31:18,470 --> 00:31:23,289
fix help fixing this problem but is

00:31:20,899 --> 00:31:28,580
there something we can do right now I

00:31:23,289 --> 00:31:33,049
wonder how old are the comments on this

00:31:28,580 --> 00:31:39,440
this book like I guess Debian doesn't

00:31:33,049 --> 00:31:42,350
really have a a really assertive person

00:31:39,440 --> 00:31:47,019
to actually comment on that so typically

00:31:42,350 --> 00:31:47,019
this goes via the legal mail list

00:31:53,200 --> 00:32:01,119
Sarge it's more of a consensus thing

00:31:55,999 --> 00:32:01,119
right yeah

00:32:01,940 --> 00:32:06,499
well the legal mailing list is a bit of

00:32:03,980 --> 00:32:09,470
a talking shop and some of the people on

00:32:06,499 --> 00:32:12,259
it talked a lot and they are not related

00:32:09,470 --> 00:32:14,450
to the FTP masters who actually accept

00:32:12,259 --> 00:32:17,929
things so there's a complete disconnect

00:32:14,450 --> 00:32:20,809
there I would say the talky people on

00:32:17,929 --> 00:32:24,230
the legal list have driven away quite a

00:32:20,809 --> 00:32:25,700
lot of the same people so I think it's a

00:32:24,230 --> 00:32:29,509
real shame we've got that list though

00:32:25,700 --> 00:32:31,100
you because it confuses outsiders who

00:32:29,509 --> 00:32:36,919
aren't aware that they're being legal is

00:32:31,100 --> 00:32:42,769
you know just place where people chat so

00:32:36,919 --> 00:32:44,840
go to have to be master if there's

00:32:42,769 --> 00:32:47,809
somebody who has deeper knowledge about

00:32:44,840 --> 00:32:50,029
this OpenSSL exception thing and what's

00:32:47,809 --> 00:32:53,379
the legal status about it in general and

00:32:50,029 --> 00:32:57,220
do we need to care about it or can we

00:32:53,379 --> 00:33:00,369
would it be okay to ignore it and so on

00:32:57,220 --> 00:33:00,369
probably not

00:33:13,350 --> 00:33:19,700
all right do you have something else you

00:33:15,419 --> 00:33:25,820
want to discuss it's above session I

00:33:19,700 --> 00:33:27,450
don't have any more questions here I

00:33:25,820 --> 00:33:31,200
have a question

00:33:27,450 --> 00:33:34,679
so the my VB and MySQL maintenance

00:33:31,200 --> 00:33:40,019
scripts right now create a Debian cyst

00:33:34,679 --> 00:33:42,899
mayn't user and done some things over

00:33:40,019 --> 00:33:44,639
the course of installation and updates

00:33:42,899 --> 00:33:50,190
she's upgrading schemas and stuff like

00:33:44,639 --> 00:33:51,899
that so that is clearly not suitable for

00:33:50,190 --> 00:33:53,700
largest installations like multiple

00:33:51,899 --> 00:33:56,700
slaves that you want to control the data

00:33:53,700 --> 00:34:00,450
and you just Sima so I'm wondering if

00:33:56,700 --> 00:34:04,049
there's a have you thought about to be

00:34:00,450 --> 00:34:07,980
saving that in this was my previous talk

00:34:04,049 --> 00:34:11,250
this solves the problem okay so we get

00:34:07,980 --> 00:34:14,639
rid of passwords altogether and the

00:34:11,250 --> 00:34:19,700
maintenance user is a legacy thing so

00:34:14,639 --> 00:34:19,700
they're silly mayn't let's show it here

00:34:21,319 --> 00:34:27,240
yeah so you are talking about this

00:34:24,030 --> 00:34:29,490
debian sis mint user and password so

00:34:27,240 --> 00:34:31,319
there's a plaintext password in the it

00:34:29,490 --> 00:34:33,629
is a directory and the only thing that's

00:34:31,319 --> 00:34:38,369
protecting it is the UNIX file

00:34:33,629 --> 00:34:41,490
permission and this user has root root

00:34:38,369 --> 00:34:44,099
level access into the database in MySQL

00:34:41,490 --> 00:34:45,480
and MariaDB so in Murray DB we have

00:34:44,099 --> 00:34:47,250
started using UNIX circuit

00:34:45,480 --> 00:34:51,149
identification so we get rid of this

00:34:47,250 --> 00:34:54,750
password altogether and root can access

00:34:51,149 --> 00:34:58,020
the database that you the system Linux

00:34:54,750 --> 00:35:01,410
root user can access the database and

00:34:58,020 --> 00:35:04,020
run the MySQL upgrade scripts and stop

00:35:01,410 --> 00:35:05,670
it and start it and so on right but I'm

00:35:04,020 --> 00:35:07,890
talking about not running the upgrade

00:35:05,670 --> 00:35:12,089
scripts are all in some cases you don't

00:35:07,890 --> 00:35:13,859
want an upgrade on the system to run

00:35:12,089 --> 00:35:15,569
upgrade scripts because you're doing

00:35:13,859 --> 00:35:17,820
that externally you have more

00:35:15,569 --> 00:35:20,890
complicated environments

00:35:17,820 --> 00:35:23,680
mmm-hmm I don't know if the binary is

00:35:20,890 --> 00:35:31,540
upgrade then you kind of have to run the

00:35:23,680 --> 00:35:32,680
upgrade under data on disk data there

00:35:31,540 --> 00:35:33,910
were a few things I haven't haven't

00:35:32,680 --> 00:35:36,420
looked in a while there were a few

00:35:33,910 --> 00:35:39,430
things that needed to be avoided

00:35:36,420 --> 00:35:41,680
there were some queries we're done by

00:35:39,430 --> 00:35:51,490
the mention of scripts that didn't play

00:35:41,680 --> 00:35:53,710
well with replication in most cases

00:35:51,490 --> 00:35:56,140
recommended but it's really strictly

00:35:53,710 --> 00:35:57,550
required so it makes sense to run

00:35:56,140 --> 00:36:01,390
without if you're kind of if it works

00:35:57,550 --> 00:36:03,730
for you then yeah that's if it works

00:36:01,390 --> 00:36:05,650
further than it's not a requirement do

00:36:03,730 --> 00:36:15,130
you remember what was the exact problem

00:36:05,650 --> 00:36:17,890
what happened this this out the password

00:36:15,130 --> 00:36:20,470
thing and then in general the upgrade

00:36:17,890 --> 00:36:24,490
should be safe and work that's kind of a

00:36:20,470 --> 00:36:27,460
upstream problem I think so I have a

00:36:24,490 --> 00:36:30,580
master slave set up yeah and when I want

00:36:27,460 --> 00:36:32,619
to upgrade packages there then some some

00:36:30,580 --> 00:36:35,380
things running during the update

00:36:32,619 --> 00:36:37,180
updating some internal databases and

00:36:35,380 --> 00:36:39,220
that often causes a problem with your

00:36:37,180 --> 00:36:42,070
application so the replication arose

00:36:39,220 --> 00:36:44,380
because on the master the database has

00:36:42,070 --> 00:36:45,940
already been upgraded and then the same

00:36:44,380 --> 00:36:50,140
thing happens again on the slave or the

00:36:45,940 --> 00:36:53,650
other way around so yeah so this is a

00:36:50,140 --> 00:36:56,230
kind of related how to master slave

00:36:53,650 --> 00:36:59,050
slave replication works and how it's

00:36:56,230 --> 00:37:02,380
compatible if the binaries on disk

00:36:59,050 --> 00:37:06,010
format changes so I think you should

00:37:02,380 --> 00:37:08,560
maybe when you when you notice the exact

00:37:06,010 --> 00:37:11,380
problem and file a bug about it I'm not

00:37:08,560 --> 00:37:13,800
sure there's any categorical solution to

00:37:11,380 --> 00:37:13,800
avoid it

00:37:51,910 --> 00:37:57,359
in general it should work fine if you

00:37:54,759 --> 00:38:00,369
have a dollar a cluster or or

00:37:57,359 --> 00:38:02,759
master/slave setup that you you don't

00:38:00,369 --> 00:38:05,259
need to synchronize too much the

00:38:02,759 --> 00:38:09,279
upgrades they can have slightly

00:38:05,259 --> 00:38:12,990
different binary versions minor versions

00:38:09,279 --> 00:38:12,990
as long as the API version is the same

00:38:13,200 --> 00:38:17,650
yeah I'm using the same versions but I

00:38:16,059 --> 00:38:19,059
think it's generally recommended to

00:38:17,650 --> 00:38:23,940
first upgrade the slaves and then

00:38:19,059 --> 00:38:28,539
upgrade the master share game probably

00:38:23,940 --> 00:38:34,539
when did you have this issue so when did

00:38:28,539 --> 00:38:39,009
you have it last time approximately like

00:38:34,539 --> 00:38:41,410
this year last year no of course I found

00:38:39,009 --> 00:38:43,869
in the bug database when a DB upgrade

00:38:41,410 --> 00:38:45,910
breaks replication and the description

00:38:43,869 --> 00:38:48,309
of the box starts from Debian start

00:38:45,910 --> 00:38:50,920
Street formerly DB in Debian slash

00:38:48,309 --> 00:38:55,750
Edition and so on and it was fixed and

00:38:50,920 --> 00:38:57,400
closed in 2013 so three years ago it was

00:38:55,750 --> 00:38:59,140
closed in our repository maybe took a

00:38:57,400 --> 00:39:01,480
while until it got two different

00:38:59,140 --> 00:39:02,970
packages but yeah for the bucket was

00:39:01,480 --> 00:39:06,579
fixed three years ago

00:39:02,970 --> 00:39:09,180
it's MySQL version 5.5 third amusing so

00:39:06,579 --> 00:39:09,180
it's stable

00:39:10,319 --> 00:39:14,190
maybe it wasn't fixed in my skull

00:39:12,369 --> 00:39:16,420
packaging spits I don't know about that

00:39:14,190 --> 00:39:23,500
but we had it when we fix or three years

00:39:16,420 --> 00:39:26,410
ago you're welcome so do you have any

00:39:23,500 --> 00:39:29,140
opinions on backporting should we is

00:39:26,410 --> 00:39:31,329
there something that's justified

00:39:29,140 --> 00:39:34,089
important enough and justified so that

00:39:31,329 --> 00:39:38,740
we should back port it in back ports or

00:39:34,089 --> 00:39:40,180
in a point release interest able in do

00:39:38,740 --> 00:39:42,900
we need something in Jersey that's not

00:39:40,180 --> 00:39:42,900
there at the moment

00:39:51,500 --> 00:39:57,170
so I think I think I'm happy with the

00:39:55,280 --> 00:40:01,609
existence of maestro five point six in

00:39:57,170 --> 00:40:03,470
backports I'm not super enthusiastic

00:40:01,609 --> 00:40:05,119
about being the one the only person that

00:40:03,470 --> 00:40:07,750
back towards it so if somebody else

00:40:05,119 --> 00:40:11,410
cares that would be nice

00:40:07,750 --> 00:40:17,170
maybe we can talk about that separately

00:40:11,410 --> 00:40:17,170
part of the team yeah

00:40:19,290 --> 00:40:24,120
so back part is kind of easy because we

00:40:22,380 --> 00:40:26,970
don't force anybody but I was talking

00:40:24,120 --> 00:40:29,940
about do we need some some updates to

00:40:26,970 --> 00:40:32,370
the stable releases at the moment purely

00:40:29,940 --> 00:40:34,440
security we do only purely security

00:40:32,370 --> 00:40:38,610
releases into stable and we haven't done

00:40:34,440 --> 00:40:43,770
any any bug fixing or things like that

00:40:38,610 --> 00:40:46,520
into the stable releases do are you

00:40:43,770 --> 00:40:52,250
aware of any serious bug that should be

00:40:46,520 --> 00:40:52,250
back like fixed in a stable release

00:40:55,390 --> 00:40:57,990
now

00:41:01,539 --> 00:41:07,689
do you have a question all right yes

00:41:04,949 --> 00:41:12,639
let's check on IRC if Robbie has

00:41:07,689 --> 00:41:21,130
something or somebody else on the

00:41:12,639 --> 00:41:23,849
channel so the remark from Robbie as I

00:41:21,130 --> 00:41:26,829
understand it in MySQL we still need

00:41:23,849 --> 00:41:30,339
Debian says main to run my school

00:41:26,829 --> 00:41:32,669
upgrade again I think that was said here

00:41:30,339 --> 00:41:32,669
as well

00:41:33,819 --> 00:41:40,089
the problem comes when a user wants to

00:41:38,439 --> 00:41:42,819
have a different route a tenth occasion

00:41:40,089 --> 00:41:45,609
plan that's not a unique circuit there's

00:41:42,819 --> 00:41:47,949
always the option to use MySQL server

00:41:45,609 --> 00:41:49,689
core and take care of managing the

00:41:47,949 --> 00:41:54,459
database manually for larger

00:41:49,689 --> 00:41:56,769
installations it example clusters MySQL

00:41:54,459 --> 00:42:00,039
server core provides the binder is only

00:41:56,769 --> 00:42:01,779
now automated maintenance so if you

00:42:00,039 --> 00:42:06,009
don't want to run the updates apparently

00:42:01,779 --> 00:42:08,619
there's a package available there's both

00:42:06,009 --> 00:42:10,659
client core and server core packages in

00:42:08,619 --> 00:42:14,919
masculinity which you can use for this

00:42:10,659 --> 00:42:17,079
kind of use cases and also this socket

00:42:14,919 --> 00:42:19,419
authentication is default now and

00:42:17,079 --> 00:42:21,969
implemented only in marilla bits not in

00:42:19,419 --> 00:42:25,479
my ask you yet but I think my ask you is

00:42:21,969 --> 00:42:28,929
probably gonna have it too soon so MySQL

00:42:25,479 --> 00:42:32,289
still has the Debian sis mint user and

00:42:28,929 --> 00:42:34,719
this also applies only for new installs

00:42:32,289 --> 00:42:37,449
if you have an existing user database

00:42:34,719 --> 00:42:40,889
and everything then those passwords post

00:42:37,449 --> 00:42:40,889
will continue to stay there

00:42:45,620 --> 00:42:59,210
alright times up thank you for

00:42:49,320 --> 00:42:59,210

YouTube URL: https://www.youtube.com/watch?v=5esJGJ7ppW0


