Title: Ultimate Debian Database: current status and future plans
Publication date: 2017-12-05
Playlist: DebConf 16
Description: 
	by Lucas Nussbaum

At: Debconf 16 video RSS feed
https://debconf16.debconf.org/
Room: Menzies 9
Scheduled start: 2016-07-04 16:40:00
Captions: 
	00:00:00,589 --> 00:00:11,670
okay so let's start with a fairly short

00:00:05,819 --> 00:00:13,590
talk even shorter than what I planned so

00:00:11,670 --> 00:00:16,650
I'm going to talk about ultimate Debian

00:00:13,590 --> 00:00:17,670
database that's a fairly old project now

00:00:16,650 --> 00:00:21,539
inside Debian

00:00:17,670 --> 00:00:25,260
so the initial motivation for ugd was

00:00:21,539 --> 00:00:27,720
that we have a lot of different fabric

00:00:25,260 --> 00:00:33,239
even smallest small services inside

00:00:27,720 --> 00:00:34,980
Debian generating a lot of data with

00:00:33,239 --> 00:00:38,370
different data formats we have text

00:00:34,980 --> 00:00:41,340
files Berkeley DB SQL databases Jason

00:00:38,370 --> 00:00:44,399
Hammel and we often have the need to

00:00:41,340 --> 00:00:47,370
combine them all beneath to do QA such

00:00:44,399 --> 00:00:50,690
as ask him what what are the packages of

00:00:47,370 --> 00:00:53,579
priority iesson standard with aussi bugs

00:00:50,690 --> 00:00:56,370
we also maintain as we have lots of

00:00:53,579 --> 00:01:00,300
outdated or buggy packages and doing

00:00:56,370 --> 00:01:03,180
that kind of queries before ugd was

00:01:00,300 --> 00:01:05,129
quite difficult because you had to pass

00:01:03,180 --> 00:01:10,049
data coming from different services and

00:01:05,129 --> 00:01:13,799
combine them using an addict script so

00:01:10,049 --> 00:01:16,530
the idea of you DD is to take all that

00:01:13,799 --> 00:01:20,280
data import it into a single PostgreSQL

00:01:16,530 --> 00:01:22,890
database which makes it much easier to

00:01:20,280 --> 00:01:27,090
query because well mostly everybody

00:01:22,890 --> 00:01:28,920
knows our custom SQL it's also the

00:01:27,090 --> 00:01:30,990
proper way of joining data together and

00:01:28,920 --> 00:01:34,110
then you have no need to write a problem

00:01:30,990 --> 00:01:37,740
specific scripts you just query ugd for

00:01:34,110 --> 00:01:40,229
what you want to know about debian so it

00:01:37,740 --> 00:01:43,680
started in 2008 as a google Summer of

00:01:40,229 --> 00:01:47,820
Code project we student was Christian

00:01:43,680 --> 00:01:49,710
from Essen who left after the project we

00:01:47,820 --> 00:01:55,290
were swimming toward at the time with

00:01:49,710 --> 00:01:58,890
mark box mitten Stefano a few slides

00:01:55,290 --> 00:02:00,750
about design choices in UD d so Willie

00:01:58,890 --> 00:02:04,020
the goal was to do something that was

00:02:00,750 --> 00:02:07,170
not problem specific so not optimized

00:02:04,020 --> 00:02:10,470
for typical queries but rather make it

00:02:07,170 --> 00:02:14,640
easy to ask about basically

00:02:10,470 --> 00:02:18,210
anything the typical user is a human

00:02:14,640 --> 00:02:21,750
because you that you the most time will

00:02:18,210 --> 00:02:24,720
be spent thinking about the queries so

00:02:21,750 --> 00:02:27,330
performance is important and we try to

00:02:24,720 --> 00:02:28,740
optimize for it but it's clearly not the

00:02:27,330 --> 00:02:32,460
first goal when we'd have to choose

00:02:28,740 --> 00:02:35,510
between ease of use and performance we

00:02:32,460 --> 00:02:38,700
usually choose ease of use one

00:02:35,510 --> 00:02:42,720
consequence of that no surrogate Keys

00:02:38,700 --> 00:02:47,730
the surrogate Keys things like that like

00:02:42,720 --> 00:02:51,780
Collins with an ID abstract identifier

00:02:47,730 --> 00:02:57,540
instead of a set of intuitive of the

00:02:51,780 --> 00:03:01,260
text field for example another design

00:02:57,540 --> 00:03:03,360
choice of ugd that correctness is

00:03:01,260 --> 00:03:05,790
critical the correctness of the data we

00:03:03,360 --> 00:03:09,180
have immunity is critical so we don't do

00:03:05,790 --> 00:03:12,480
partial updates of data exactly except

00:03:09,180 --> 00:03:16,050
in one case because just be quite

00:03:12,480 --> 00:03:18,150
difficult to just figure out what change

00:03:16,050 --> 00:03:22,140
what's changed and applies apply the

00:03:18,150 --> 00:03:23,820
diff so we do complete data reloads for

00:03:22,140 --> 00:03:27,320
most importance the only exception is

00:03:23,820 --> 00:03:29,760
the bugs importer because doing a full

00:03:27,320 --> 00:03:33,959
import requires reading a lot of

00:03:29,760 --> 00:03:37,080
separate text files because the bug bugs

00:03:33,959 --> 00:03:41,250
Debian argue these text files as a as a

00:03:37,080 --> 00:03:44,820
main back-end so we do partial with can

00:03:41,250 --> 00:03:47,370
works with what we do we update bugs

00:03:44,820 --> 00:03:51,959
that get updated from for some reason

00:03:47,370 --> 00:03:55,560
and do complete data reloads only a few

00:03:51,959 --> 00:03:57,480
one every few hours so this is

00:03:55,560 --> 00:04:00,660
completely hidden from the user because

00:03:57,480 --> 00:04:05,670
we use transactions to avoid having an

00:04:00,660 --> 00:04:06,989
empty tables at some point another

00:04:05,670 --> 00:04:09,000
design choice is that

00:04:06,989 --> 00:04:11,220
we want to be inconsistent because

00:04:09,000 --> 00:04:13,560
Debian is inconsistent for example if

00:04:11,220 --> 00:04:16,229
you look at the various services we have

00:04:13,560 --> 00:04:19,470
we have various definitions of packages

00:04:16,229 --> 00:04:22,169
one good example of that is a popularity

00:04:19,470 --> 00:04:24,330
contest where you have a package Conan

00:04:22,169 --> 00:04:26,009
in what popcorn exports

00:04:24,330 --> 00:04:29,069
but that's actually just a copy of what

00:04:26,009 --> 00:04:32,610
users of Popkin provided so if they put

00:04:29,069 --> 00:04:34,830
a pass or file name in that then it ends

00:04:32,610 --> 00:04:37,740
up in the data that Popkin the gonzaga

00:04:34,830 --> 00:04:39,569
exports you can look at what's in there

00:04:37,740 --> 00:04:44,550
were some interesting stuff but the

00:04:39,569 --> 00:04:47,220
users have data corruption issues so as

00:04:44,550 --> 00:04:49,490
we keep that in constancy immediately

00:04:47,220 --> 00:04:51,990
because that could be interesting for QA

00:04:49,490 --> 00:04:54,659
which means that we don't try to a

00:04:51,990 --> 00:04:57,270
foreign keys between different data

00:04:54,659 --> 00:04:59,550
sources but we also provide some views

00:04:57,270 --> 00:05:05,219
that ID inconsistency to make it easier

00:04:59,550 --> 00:05:07,469
for the user to run khloe's so it's

00:05:05,219 --> 00:05:10,139
currently running as you DD Debian org

00:05:07,469 --> 00:05:19,409
but also a public neuro or still by

00:05:10,139 --> 00:05:22,680
Ashish okay okay it's uses PostgreSQL

00:05:19,409 --> 00:05:26,370
9.4 you can connect from QA and iOS

00:05:22,680 --> 00:05:29,430
using psql study sigelei udg which means

00:05:26,370 --> 00:05:31,590
that even non GDS can connect a couple

00:05:29,430 --> 00:05:34,979
tables that are not available if you

00:05:31,590 --> 00:05:36,690
don't connect using the guest DD account

00:05:34,979 --> 00:05:40,199
but usually can just connect using the

00:05:36,690 --> 00:05:43,319
guest account and the two tables that

00:05:40,199 --> 00:05:46,169
are unavailable I think is the LDAP

00:05:43,319 --> 00:05:49,969
table and the PTAs subsection tables

00:05:46,169 --> 00:05:49,969
that doesn't make sense anymore anyway

00:05:50,419 --> 00:05:57,060
and was a weekly page with all the info

00:05:53,190 --> 00:06:00,449
about Oh to connect so what's in it so

00:05:57,060 --> 00:06:03,979
the main stuff is so season packages for

00:06:00,449 --> 00:06:06,750
each suit in the beyond Berg's data

00:06:03,979 --> 00:06:10,919
stuff about developers identity so

00:06:06,750 --> 00:06:15,389
kanavu is a mapping between people GPG

00:06:10,919 --> 00:06:16,919
keys and email addresses given LDAP list

00:06:15,389 --> 00:06:19,740
of debian maintain speediest

00:06:16,919 --> 00:06:22,250
subsequently subscription we asked of

00:06:19,740 --> 00:06:25,860
about Debian derivatives

00:06:22,250 --> 00:06:27,870
mainly for Ubuntu with tourism packages

00:06:25,860 --> 00:06:30,930
Berg's upload historian

00:06:27,870 --> 00:06:33,810
popcorn engine and also mobile for up to

00:06:30,930 --> 00:06:35,789
speed we could add more if you if you

00:06:33,810 --> 00:06:37,380
would like to have your own derivative

00:06:35,789 --> 00:06:40,910
added to DDD that's

00:06:37,380 --> 00:06:45,720
easy and Judah just so once where

00:06:40,910 --> 00:06:48,120
someone cared at some point and

00:06:45,720 --> 00:06:50,220
additional stuff so has a long list ad

00:06:48,120 --> 00:06:53,180
which covers I'm going to go through it

00:06:50,220 --> 00:06:57,170
is to be boring but that's basically

00:06:53,180 --> 00:07:00,090
what most of the sources of data that

00:06:57,170 --> 00:07:02,400
exists inside Debian if you know of

00:07:00,090 --> 00:07:04,590
something that isn't here

00:07:02,400 --> 00:07:08,280
well tell me and probably we can find a

00:07:04,590 --> 00:07:10,010
way to to add it I noticed once the at

00:07:08,280 --> 00:07:16,140
least one verse does which isn't

00:07:10,010 --> 00:07:19,410
included so what can we found out about

00:07:16,140 --> 00:07:22,530
the beyond using EDD so one example GUI

00:07:19,410 --> 00:07:24,030
is a number of different Lincoln errors

00:07:22,530 --> 00:07:26,700
or warnings of the packages with the

00:07:24,030 --> 00:07:30,230
most with the IIST number of different

00:07:26,700 --> 00:07:35,000
it was a warning so good examples to

00:07:30,230 --> 00:07:39,240
stress test in turn that

00:07:35,000 --> 00:07:41,510
so first packages cover strings on quite

00:07:39,240 --> 00:07:41,510
well

00:07:41,930 --> 00:07:54,600
yeah that bugs will placate package is

00:07:50,400 --> 00:07:56,940
currently in seed so that's the list you

00:07:54,600 --> 00:08:02,700
can see I'm sure if we go easy in the

00:07:56,940 --> 00:08:08,550
room but is around but yeah clintus

00:08:02,700 --> 00:08:15,440
around as well verso a few dashboards

00:08:08,550 --> 00:08:15,440
that built on top of qgd so oops

00:08:21,389 --> 00:08:37,279
so let's can you still read so the first

00:08:29,880 --> 00:08:37,279
one is Yugi debug search so this is a

00:08:37,400 --> 00:08:46,650
big form that you can use to search for

00:08:41,490 --> 00:08:49,380
bugs so what it can what what's

00:08:46,650 --> 00:08:53,760
interesting is that it provides a few

00:08:49,380 --> 00:08:55,560
views for blogs watching parties or

00:08:53,760 --> 00:08:58,200
books question in general during the

00:08:55,560 --> 00:09:00,810
release or as a bug worst question of

00:08:58,200 --> 00:09:03,000
you so effective uggs affecting Cygnus

00:09:00,810 --> 00:09:06,330
fashion like a stone attacked patch a

00:09:03,000 --> 00:09:09,450
sponsor of you quickly bugs with a patch

00:09:06,330 --> 00:09:12,839
waiting for someone to upload them birds

00:09:09,450 --> 00:09:19,410
with a strange state and willest risk in

00:09:12,839 --> 00:09:24,330
view to sort out migration issues you

00:09:19,410 --> 00:09:26,940
can also use it to query for bugs for

00:09:24,330 --> 00:09:30,150
specific packages so you as a list of

00:09:26,940 --> 00:09:34,100
teams a you can query by email which

00:09:30,150 --> 00:09:38,220
means that can search for your own bugs

00:09:34,100 --> 00:09:42,950
so for example that's the list of bugs

00:09:38,220 --> 00:09:48,060
in packages I maintain comment and/or

00:09:42,950 --> 00:09:51,810
sponsored upload for that's a good way

00:09:48,060 --> 00:09:53,430
to to build your to-do list and search

00:09:51,810 --> 00:09:56,580
for bugs and you can of course that's

00:09:53,430 --> 00:10:02,279
basic JavaScript that you can play with

00:09:56,580 --> 00:10:06,000
the columns etc another dashboard is

00:10:02,279 --> 00:10:10,440
maintainer dashboard so similarly you

00:10:06,000 --> 00:10:15,510
can search for using emails or just a

00:10:10,440 --> 00:10:18,570
list of packages and this generates

00:10:15,510 --> 00:10:22,740
several different views first as a to-do

00:10:18,570 --> 00:10:24,480
list with the likely things that should

00:10:22,740 --> 00:10:26,610
be fixed in your packages so if you

00:10:24,480 --> 00:10:28,080
don't know what to do if you have a few

00:10:26,610 --> 00:10:28,380
hours to decay to didn't know you don't

00:10:28,080 --> 00:10:31,200
know

00:10:28,380 --> 00:10:33,330
what to do it's a good place to start so

00:10:31,200 --> 00:10:35,520
that's my page you know it's not really

00:10:33,330 --> 00:10:37,860
in a good state but most of those

00:10:35,520 --> 00:10:42,500
packages are either comment and/or not

00:10:37,860 --> 00:10:42,500
very important so I should be fine

00:10:44,120 --> 00:10:50,970
it's listing stuff like missing base

00:10:47,040 --> 00:10:56,700
testing migration issues new versions in

00:10:50,970 --> 00:10:59,310
either upstream or in the VCS there's a

00:10:56,700 --> 00:11:04,910
big table with versions of packages in

00:10:59,310 --> 00:11:10,350
each suit and upstream and on Mentos and

00:11:04,910 --> 00:11:13,890
there's a big q8 my work security issues

00:11:10,350 --> 00:11:17,670
make you a shacks table covering most of

00:11:13,890 --> 00:11:19,530
the QA tools we have so just playing

00:11:17,670 --> 00:11:23,150
with that you can and will see which are

00:11:19,530 --> 00:11:25,530
the packages that are currently 30

00:11:23,150 --> 00:11:29,940
issues reported by the reproducible

00:11:25,530 --> 00:11:33,600
builds people for example and that's the

00:11:29,940 --> 00:11:37,100
last table about derivative situation

00:11:33,600 --> 00:11:40,290
derivative distributions so for example

00:11:37,100 --> 00:11:44,580
you can see that this one is as an

00:11:40,290 --> 00:11:46,950
advocate version moving to this one as

00:11:44,580 --> 00:11:49,940
an old occupational moving tool but with

00:11:46,950 --> 00:11:53,070
a patch so mm that's a way to highlight

00:11:49,940 --> 00:11:56,490
needed actions with respect to

00:11:53,070 --> 00:11:59,190
derivative distributions and the last

00:11:56,490 --> 00:12:04,550
dashboard I wanted to mention is bypass

00:11:59,190 --> 00:12:07,860
and this one lists packages which with

00:12:04,550 --> 00:12:10,170
some issues that might not be problems

00:12:07,860 --> 00:12:12,600
this one is not really not really a

00:12:10,170 --> 00:12:14,790
problem but for example this one is

00:12:12,600 --> 00:12:19,290
quite interesting that's packages that

00:12:14,790 --> 00:12:23,940
are maintained with enemy use so for

00:12:19,290 --> 00:12:27,150
example this package the last eight

00:12:23,940 --> 00:12:29,250
uploads were all enemy use which

00:12:27,150 --> 00:12:31,260
probably means that the one doing all

00:12:29,250 --> 00:12:32,970
those and the music I think most of the

00:12:31,260 --> 00:12:34,590
in that case most of the enemies are

00:12:32,970 --> 00:12:37,890
done by the same person is probably

00:12:34,590 --> 00:12:42,800
someone that should adopt but doesn't

00:12:37,890 --> 00:12:42,800
want to commit to adapting the package

00:12:44,130 --> 00:12:53,820
it's just some thoughts about things to

00:12:48,510 --> 00:12:56,070
improve so ugd is mostly a one-person

00:12:53,820 --> 00:12:57,390
project which means that when something

00:12:56,070 --> 00:13:00,930
fails and that happens quite frequently

00:12:57,390 --> 00:13:04,019
because some some services like to

00:13:00,930 --> 00:13:06,810
change the output format for example if

00:13:04,019 --> 00:13:07,970
I'm not paying attention can take some

00:13:06,810 --> 00:13:10,500
time to get fixed

00:13:07,970 --> 00:13:13,140
so it would be really great to find

00:13:10,500 --> 00:13:15,769
someone that can find can half time on a

00:13:13,140 --> 00:13:20,160
regular basis just to care about

00:13:15,769 --> 00:13:22,980
watching DVD so that's a CGI years at

00:13:20,160 --> 00:13:26,490
least current status the last run time

00:13:22,980 --> 00:13:27,990
of each data importer and whether it was

00:13:26,490 --> 00:13:31,100
an unsuccessful or not so that's a good

00:13:27,990 --> 00:13:33,630
starting point to contribute to led

00:13:31,100 --> 00:13:36,089
until yesterday there was no really good

00:13:33,630 --> 00:13:38,850
development environment which is no

00:13:36,089 --> 00:13:41,310
fixed so you can just run vagrant and

00:13:38,850 --> 00:13:44,070
get ugd running on your laptop in a few

00:13:41,310 --> 00:13:47,880
minutes this doesn't include importing

00:13:44,070 --> 00:13:51,300
the database because it's quite it's

00:13:47,880 --> 00:13:53,550
quite large but similarly was a script

00:13:51,300 --> 00:13:56,699
to just download an import you just need

00:13:53,550 --> 00:13:59,279
to get to give it some time to to finish

00:13:56,699 --> 00:14:04,800
it takes about one hour year to download

00:13:59,279 --> 00:14:08,730
that database more collaboration with

00:14:04,800 --> 00:14:11,250
GDP you and tracker would be great some

00:14:08,730 --> 00:14:17,220
overlap some data is passed on in

00:14:11,250 --> 00:14:19,709
several places one one clear limitation

00:14:17,220 --> 00:14:21,959
to collaborate more that it's quite hard

00:14:19,709 --> 00:14:24,709
actually to share data inside the Debian

00:14:21,959 --> 00:14:27,149
infrastructure if you want to access

00:14:24,709 --> 00:14:30,690
from one machine files that are

00:14:27,149 --> 00:14:33,540
generated on another machine there are a

00:14:30,690 --> 00:14:37,170
lot of not so nice solutions to to do

00:14:33,540 --> 00:14:42,240
that between sharing SSH keys but the SA

00:14:37,170 --> 00:14:44,850
we scream at you using HTTP export but

00:14:42,240 --> 00:14:48,000
yes I will also complain so and also not

00:14:44,850 --> 00:14:51,209
so easy way and standard way to do that

00:14:48,000 --> 00:14:53,520
we use different ways in different data

00:14:51,209 --> 00:14:58,470
importers and that's probably something

00:14:53,520 --> 00:15:00,630
could be streamlined a bit so if you

00:14:58,470 --> 00:15:02,070
have questions well I can answer a

00:15:00,630 --> 00:15:03,510
question that's good of course and if

00:15:02,070 --> 00:15:07,410
you have questions after this talk you

00:15:03,510 --> 00:15:10,650
can get an OSC on the plane QA or on the

00:15:07,410 --> 00:15:22,070
q and q a mailing list thank you any

00:15:10,650 --> 00:15:22,070
questions one question

00:15:25,770 --> 00:15:31,859
[Laughter]

00:15:27,850 --> 00:15:31,859

YouTube URL: https://www.youtube.com/watch?v=cQQ7lfUfTIo


