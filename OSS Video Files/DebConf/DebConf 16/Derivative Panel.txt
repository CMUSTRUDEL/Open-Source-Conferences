Title: Derivative Panel
Publication date: 2017-12-05
Playlist: DebConf 16
Description: 
	by Héctor Orón Martínez

At: Debconf 16 video RSS feed
https://debconf16.debconf.org/
Room: Menzies 10
Scheduled start: 2016-07-05 14:00:00
Captions: 
	00:00:00,030 --> 00:00:05,400
in Italy we thought about running a

00:00:02,280 --> 00:00:09,360
panel like we had last year but we

00:00:05,400 --> 00:00:12,509
thought maybe this was a bit more boring

00:00:09,360 --> 00:00:15,269
and which I try to decided to change a

00:00:12,509 --> 00:00:18,060
little bit the the format I'd like to

00:00:15,269 --> 00:00:20,100
thank Paul Weiss he's been working with

00:00:18,060 --> 00:00:25,650
me trying to make up this presentation

00:00:20,100 --> 00:00:28,529
but I'll be present in this so I'm I'm

00:00:25,650 --> 00:00:33,059
Hector Martinez for the ones you don't

00:00:28,529 --> 00:00:38,899
know me I work for kelabra which is a

00:00:33,059 --> 00:00:38,899
consultant company the supplies

00:00:39,090 --> 00:00:45,110
consulting services so what I would like

00:00:43,320 --> 00:00:48,149
to discuss today I'd like to do a

00:00:45,110 --> 00:00:52,050
summary of what the last year was

00:00:48,149 --> 00:00:53,460
discussed in the panel so why why Debian

00:00:52,050 --> 00:00:56,000
oh why not

00:00:53,460 --> 00:00:59,609
Debian why do you need a derivative

00:00:56,000 --> 00:01:04,049
instead of using their being said or how

00:00:59,609 --> 00:01:07,020
can how can we make Debian how can we

00:01:04,049 --> 00:01:09,119
improve Debian from derivative from

00:01:07,020 --> 00:01:13,140
point of view on the other way around

00:01:09,119 --> 00:01:15,689
I'll try to go really quick through all

00:01:13,140 --> 00:01:18,590
this and then I'd like to present new

00:01:15,689 --> 00:01:23,939
derivatives that join on during 2015

00:01:18,590 --> 00:01:26,490
2016 and then we have some a slot that

00:01:23,939 --> 00:01:28,710
I'll be presenting some derivatives I'm

00:01:26,490 --> 00:01:31,079
working on and in the audience there's

00:01:28,710 --> 00:01:33,450
other people running the riveters if

00:01:31,079 --> 00:01:37,380
they want to have a war presenter their

00:01:33,450 --> 00:01:40,680
derivatives you're welcome to and then

00:01:37,380 --> 00:01:43,799
we want to present like a proposal of an

00:01:40,680 --> 00:01:47,399
idea to create a reference derivative so

00:01:43,799 --> 00:01:49,439
we can somehow standardize in the tools

00:01:47,399 --> 00:01:52,350
that we used to build derivatives

00:01:49,439 --> 00:01:55,829
because there are many tools to do

00:01:52,350 --> 00:01:59,520
different things and you some people

00:01:55,829 --> 00:02:01,950
trying to run new derivatives if they

00:01:59,520 --> 00:02:08,190
have some reference then that would be

00:02:01,950 --> 00:02:13,020
that would be good so why do people

00:02:08,190 --> 00:02:14,730
based on Debian for derivatives is

00:02:13,020 --> 00:02:17,790
there is an excellent platform is a

00:02:14,730 --> 00:02:20,580
stable it has very lot of packages

00:02:17,790 --> 00:02:23,570
there's a lot of QA through them it just

00:02:20,580 --> 00:02:26,030
works so debian is an excellent pick to

00:02:23,570 --> 00:02:29,520
run a derivative

00:02:26,030 --> 00:02:31,200
it has also a multiple architectural

00:02:29,520 --> 00:02:34,050
support so you might not care about

00:02:31,200 --> 00:02:35,670
Intel by other a platform so Debian is a

00:02:34,050 --> 00:02:40,950
really nice choice

00:02:35,670 --> 00:02:43,590
so why why not Debian why do you need a

00:02:40,950 --> 00:02:46,070
derivative for well there is some

00:02:43,590 --> 00:02:50,460
software which is a special it cannot be

00:02:46,070 --> 00:02:52,230
in Debian because the licensing or maybe

00:02:50,460 --> 00:02:56,900
you have a you run a web application

00:02:52,230 --> 00:02:56,900
which needs some dependencies you cannot

00:02:57,650 --> 00:03:03,600
have those in Debian easily or maybe you

00:03:01,560 --> 00:03:06,720
want to drop some architectures and go

00:03:03,600 --> 00:03:08,130
faster on your development than Debian

00:03:06,720 --> 00:03:12,000
because they really needs to keep up

00:03:08,130 --> 00:03:15,180
with too much architectures and packages

00:03:12,000 --> 00:03:18,360
and dependencies and we cannot Debian

00:03:15,180 --> 00:03:22,170
cannot go as fast as what the derivative

00:03:18,360 --> 00:03:24,630
might need also the release cycle of the

00:03:22,170 --> 00:03:27,330
AVN might not be adequate so maybe you

00:03:24,630 --> 00:03:31,230
want to have a cadence of its release

00:03:27,330 --> 00:03:33,810
it's it's three months or things like

00:03:31,230 --> 00:03:39,060
that or you want to have a latest

00:03:33,810 --> 00:03:41,130
upstream so you can contribute or maybe

00:03:39,060 --> 00:03:43,200
just your default configuration in

00:03:41,130 --> 00:03:49,190
Debian is not suitable and you want to

00:03:43,200 --> 00:03:51,870
change the defaults of many packages so

00:03:49,190 --> 00:03:55,230
what can we do in Debian to make

00:03:51,870 --> 00:03:59,120
derivative life easy so as a Debian

00:03:55,230 --> 00:04:02,880
developers we can coordinate upload like

00:03:59,120 --> 00:04:04,980
sometimes he there's somebody uploads a

00:04:02,880 --> 00:04:07,350
package and Debian there's a transition

00:04:04,980 --> 00:04:09,150
but the derivative doesn't notice the

00:04:07,350 --> 00:04:14,300
same pick it up and breaks the whole

00:04:09,150 --> 00:04:17,220
thing in the derivative site so maybe

00:04:14,300 --> 00:04:19,799
we'll be also good to declare what what

00:04:17,220 --> 00:04:20,870
versions we are thinking on to for the

00:04:19,799 --> 00:04:23,910
release

00:04:20,870 --> 00:04:27,110
having reproducible builds dealing with

00:04:23,910 --> 00:04:33,930
trademark issues

00:04:27,110 --> 00:04:36,449
testing the backports bills then it will

00:04:33,930 --> 00:04:39,090
be nice to notify derivatives the debian

00:04:36,449 --> 00:04:41,550
has removed a package as well because

00:04:39,090 --> 00:04:44,160
sometimes derivatives don't notice and

00:04:41,550 --> 00:04:49,130
then after two years there's where is

00:04:44,160 --> 00:04:52,530
this package there's no update so

00:04:49,130 --> 00:04:57,180
improving testing by not not breaking it

00:04:52,530 --> 00:05:04,560
and improving the documentation wiki and

00:04:57,180 --> 00:05:08,760
so on so the talk I want to Center more

00:05:04,560 --> 00:05:20,250
into the infrastructure for working with

00:05:08,760 --> 00:05:22,979
derivatives well yeah what what kind

00:05:20,250 --> 00:05:26,940
everybody's do can do to help to improve

00:05:22,979 --> 00:05:28,800
Debian so if you run a derivative it

00:05:26,940 --> 00:05:32,940
would be really helpful if you join the

00:05:28,800 --> 00:05:35,789
census we have in a wiki page in the

00:05:32,940 --> 00:05:39,599
wiki Debian dot org and keep that

00:05:35,789 --> 00:05:44,220
information up to date you may send

00:05:39,599 --> 00:05:47,580
patches to the BTS sometimes there are

00:05:44,220 --> 00:05:51,479
patches that are specific for the second

00:05:47,580 --> 00:05:54,449
derivative so those those lines of code

00:05:51,479 --> 00:05:57,270
would be nice if it that's gets into

00:05:54,449 --> 00:06:01,139
some kind of conditioner like if example

00:05:57,270 --> 00:06:03,300
GCC builds for Ubuntu then they apply

00:06:01,139 --> 00:06:05,430
different paths patch set so that's in a

00:06:03,300 --> 00:06:09,090
conditional way so it's do you have the

00:06:05,430 --> 00:06:11,280
package vendor or wasted or LSB release

00:06:09,090 --> 00:06:12,930
or I think there's three or four ways

00:06:11,280 --> 00:06:14,460
that you can detect which distribution

00:06:12,930 --> 00:06:15,960
you are in so depending which

00:06:14,460 --> 00:06:20,760
distribution you are running you can

00:06:15,960 --> 00:06:24,449
apply different combination of patches

00:06:20,760 --> 00:06:26,720
or configurations so in that way you can

00:06:24,449 --> 00:06:29,669
send these patches to to the BTS and

00:06:26,720 --> 00:06:33,930
then maintenance should be able to merge

00:06:29,669 --> 00:06:36,300
them so if you have new packages which

00:06:33,930 --> 00:06:37,110
are not in Debian then uploading those

00:06:36,300 --> 00:06:39,270
to Mentors

00:06:37,110 --> 00:06:43,830
so some some devel

00:06:39,270 --> 00:06:47,640
my review that will be helpful come to

00:06:43,830 --> 00:06:52,920
that Kampf there will be also and be

00:06:47,640 --> 00:06:56,520
active on mailing list you run a

00:06:52,920 --> 00:07:03,480
derivative so these are some of the

00:06:56,520 --> 00:07:07,050
derivatives join the census in 2015-2016

00:07:03,480 --> 00:07:12,630
I think H Linux joined by the end of

00:07:07,050 --> 00:07:14,580
2014 but like some people is here and we

00:07:12,630 --> 00:07:19,280
are there the list and they'll be doing

00:07:14,580 --> 00:07:23,100
a presentation later today there is also

00:07:19,280 --> 00:07:25,560
Kali Linux which they are doing some

00:07:23,100 --> 00:07:32,840
presentation I think in this room after

00:07:25,560 --> 00:07:35,760
this this talk I'll be presenting some

00:07:32,840 --> 00:07:37,490
some of the derivatives I do so I work

00:07:35,760 --> 00:07:42,000
at collabora and I am involved with

00:07:37,490 --> 00:07:46,830
these derivatives so a participative

00:07:42,000 --> 00:07:50,940
derivative to have debian running in a

00:07:46,830 --> 00:07:53,490
in the multimedia this place of the cars

00:07:50,940 --> 00:07:57,720
which used to be the radio stay the

00:07:53,490 --> 00:07:59,970
radio system in the car then now now

00:07:57,720 --> 00:08:01,890
this is quite complicated and it has a

00:07:59,970 --> 00:08:05,220
lot of multimedia resources you have

00:08:01,890 --> 00:08:07,350
video you have audio Bluetooth and we

00:08:05,220 --> 00:08:11,010
integrate all that and provide

00:08:07,350 --> 00:08:13,290
middleware then we allow manufacturers

00:08:11,010 --> 00:08:16,200
give all the libraries the manufacturers

00:08:13,290 --> 00:08:18,540
create their UI so they they are working

00:08:16,200 --> 00:08:21,780
on the same middleware but they have

00:08:18,540 --> 00:08:24,810
different you ice on the on the car so

00:08:21,780 --> 00:08:27,690
that's we recently added a practice but

00:08:24,810 --> 00:08:30,860
we've been running this derivative for

00:08:27,690 --> 00:08:30,860
over four years now

00:08:31,730 --> 00:08:41,370
then st MOS is a it's a game is done by

00:08:37,530 --> 00:08:44,840
valve which is also sponsoring that conf

00:08:41,370 --> 00:08:48,930
and they it's a game

00:08:44,840 --> 00:08:51,110
os this is made to run game so they we

00:08:48,930 --> 00:08:53,450
have a runtime to keep

00:08:51,110 --> 00:08:55,820
compatibility for four games they keep

00:08:53,450 --> 00:08:56,690
the same libraries that's frozen they

00:08:55,820 --> 00:09:00,290
don't touch that

00:08:56,690 --> 00:09:03,350
but that Ryan time runs over iOS which

00:09:00,290 --> 00:09:07,640
is a steamers and it's based on Debian

00:09:03,350 --> 00:09:11,180
as well and then endless endless Mobile

00:09:07,640 --> 00:09:14,170
is a company based in San Francisco and

00:09:11,180 --> 00:09:18,980
they they're building devices to enable

00:09:14,170 --> 00:09:21,410
third world countries like the thing

00:09:18,980 --> 00:09:24,320
they put in a lot of effort in Guatemala

00:09:21,410 --> 00:09:27,830
and they want to enable they want to

00:09:24,320 --> 00:09:30,560
short the technology technology bridge

00:09:27,830 --> 00:09:33,380
between first and third world countries

00:09:30,560 --> 00:09:35,510
so they are going into these class

00:09:33,380 --> 00:09:38,270
classrooms of developed on

00:09:35,510 --> 00:09:42,080
underdeveloped countries and set up

00:09:38,270 --> 00:09:46,130
their devices and then the kids can have

00:09:42,080 --> 00:09:49,190
a machine so they they're doing quite

00:09:46,130 --> 00:09:52,130
nice modification their software stack

00:09:49,190 --> 00:09:55,430
is based on norm so they have a forked

00:09:52,130 --> 00:09:58,570
the NAM shell and created what they call

00:09:55,430 --> 00:10:02,750
a OS shell and the shell so it's very

00:09:58,570 --> 00:10:05,840
easy and intuitive for for people to get

00:10:02,750 --> 00:10:10,760
started running on a computer which they

00:10:05,840 --> 00:10:15,880
haven't had the chance to play with and

00:10:10,760 --> 00:10:15,880
they they also you use some updating

00:10:16,510 --> 00:10:22,730
software based on OS 3 and things like

00:10:20,480 --> 00:10:25,730
that because the network connectivity is

00:10:22,730 --> 00:10:29,150
not so reliable so that that gives more

00:10:25,730 --> 00:10:32,090
better stability on they're upgrading

00:10:29,150 --> 00:10:38,810
their machines and things like that so

00:10:32,090 --> 00:10:42,200
it's doing quite a nice nice job so you

00:10:38,810 --> 00:10:45,170
have to keep in mind that from Debian we

00:10:42,200 --> 00:10:47,630
have a steam OS and then from steamers

00:10:45,170 --> 00:10:50,660
there's a Stevenson rocket from a

00:10:47,630 --> 00:10:53,240
Stevenson rocket there's bay for OS so

00:10:50,660 --> 00:10:55,820
we have derivatives of derivatives so

00:10:53,240 --> 00:11:01,100
the thing is growing and the family is

00:10:55,820 --> 00:11:02,410
going it's going more far further away

00:11:01,100 --> 00:11:04,470
than we might think

00:11:02,410 --> 00:11:07,470
so we

00:11:04,470 --> 00:11:10,250
we all started in Debian so contributing

00:11:07,470 --> 00:11:15,330
to the area and you ensure that many

00:11:10,250 --> 00:11:25,680
many derivative lines will pick up the

00:11:15,330 --> 00:11:28,560
your fixes so so here I know here in the

00:11:25,680 --> 00:11:32,580
audience there's some people running

00:11:28,560 --> 00:11:35,070
derivatives so you may want to to have a

00:11:32,580 --> 00:11:36,660
word on your derivative I added some of

00:11:35,070 --> 00:11:41,400
the logo some of the people and I know

00:11:36,660 --> 00:11:42,210
here they're here so if you you want to

00:11:41,400 --> 00:11:57,270
have a word

00:11:42,210 --> 00:11:59,400
you welcome yeah yeah microphone so I'm

00:11:57,270 --> 00:12:01,470
starting the round just to help other

00:11:59,400 --> 00:12:03,240
people to speak because I won't say much

00:12:01,470 --> 00:12:04,800
because if you want to hear about Kali

00:12:03,240 --> 00:12:07,790
Linux you should stay in this room I

00:12:04,800 --> 00:12:10,590
will give a presentation just afterward

00:12:07,790 --> 00:12:14,820
it's basically it's a penetration

00:12:10,590 --> 00:12:17,490
testing derivative and I explain all the

00:12:14,820 --> 00:12:20,550
infrastructure that we have set up and I

00:12:17,490 --> 00:12:23,430
also speak of the challenge we have

00:12:20,550 --> 00:12:27,570
because we are based on Debian testing

00:12:23,430 --> 00:12:29,520
so there are some downsides and some

00:12:27,570 --> 00:12:33,500
positive sides and I'll speak about

00:12:29,520 --> 00:12:39,290
those that one so I hope you will stay

00:12:33,500 --> 00:12:42,660
if you have questions for me I'm free -

00:12:39,290 --> 00:12:45,420
yeah I'm sorry this this is what's going

00:12:42,660 --> 00:12:47,160
to be a panel but and have some of the

00:12:45,420 --> 00:12:49,470
derivative people here and maybe have

00:12:47,160 --> 00:12:52,320
some discussion with the audience but

00:12:49,470 --> 00:12:55,100
maybe audience become the derivative

00:12:52,320 --> 00:12:57,690
people maybe I'm trying to kind of have

00:12:55,100 --> 00:13:00,210
debian derivative hat and maybe is try

00:12:57,690 --> 00:13:02,100
to centralize all the derivative carries

00:13:00,210 --> 00:13:08,430
and try to support derivatives better

00:13:02,100 --> 00:13:16,680
from Debian point of view so in that

00:13:08,430 --> 00:13:18,180
line we come up with an idea of do doing

00:13:16,680 --> 00:13:20,940
a reference derivative

00:13:18,180 --> 00:13:24,120
trying to standardize a common set of

00:13:20,940 --> 00:13:27,300
tools so maybe some knew they were

00:13:24,120 --> 00:13:29,370
derivative want to get started so we can

00:13:27,300 --> 00:13:31,440
at least tell everyone we have a tool

00:13:29,370 --> 00:13:34,170
set here that you can use to build a

00:13:31,440 --> 00:13:36,060
derivative so they the current way

00:13:34,170 --> 00:13:39,690
they're being what this is very

00:13:36,060 --> 00:13:43,170
simplified version of what the Debian

00:13:39,690 --> 00:13:50,310
system is for for building the whole

00:13:43,170 --> 00:13:52,680
thing so we have developers there which

00:13:50,310 --> 00:13:57,690
they work with software and prepare the

00:13:52,680 --> 00:14:00,930
packages and upload to some FTP place

00:13:57,690 --> 00:14:06,960
which is the incoming queue and then

00:14:00,930 --> 00:14:09,570
there is some is called wanna build it's

00:14:06,960 --> 00:14:12,990
a kind of a scheduler that picks up the

00:14:09,570 --> 00:14:15,270
source package and sends those to the

00:14:12,990 --> 00:14:17,760
building months and then it builds for

00:14:15,270 --> 00:14:21,240
many different architectures and do lot

00:14:17,760 --> 00:14:24,630
of complex calculations once all the

00:14:21,240 --> 00:14:27,060
binary packages come from the source

00:14:24,630 --> 00:14:30,300
packages those are installed in some

00:14:27,060 --> 00:14:33,900
package repository and from that package

00:14:30,300 --> 00:14:38,340
repository the users get updates or you

00:14:33,900 --> 00:14:41,880
can create the images or installer media

00:14:38,340 --> 00:14:48,030
or whatever and then we have a happy

00:14:41,880 --> 00:14:50,940
penguin user family so running a

00:14:48,030 --> 00:14:52,650
derivative is more or less if you want

00:14:50,940 --> 00:14:54,900
to build everything from source you

00:14:52,650 --> 00:14:59,460
probably want to set up that kind of

00:14:54,900 --> 00:15:06,090
pipeline but there are many different

00:14:59,460 --> 00:15:09,660
tools that we can use so well in the

00:15:06,090 --> 00:15:12,390
picture before there is some missing bit

00:15:09,660 --> 00:15:16,890
which we do QA which is quite important

00:15:12,390 --> 00:15:20,490
that verify and test the images or

00:15:16,890 --> 00:15:26,820
packages so we have tests of different

00:15:20,490 --> 00:15:30,960
levels so we WordPress wanting to

00:15:26,820 --> 00:15:34,410
present these that having a

00:15:30,960 --> 00:15:37,020
reference derivative so nowadays there

00:15:34,410 --> 00:15:41,300
is no discussion sources are kept in get

00:15:37,020 --> 00:15:44,520
I think maybe proposing it to keep

00:15:41,300 --> 00:15:49,710
sources and then from get from

00:15:44,520 --> 00:15:52,440
derivative get we can pull changes and

00:15:49,710 --> 00:15:55,560
from Debian can see all the changes that

00:15:52,440 --> 00:15:57,930
are happening if you use get I think

00:15:55,560 --> 00:15:58,590
there is a depth a proposal for a good

00:15:57,930 --> 00:16:02,970
layout

00:15:58,590 --> 00:16:06,510
it's called depth 14 so if you use that

00:16:02,970 --> 00:16:10,170
that will be that will help understand

00:16:06,510 --> 00:16:15,420
how the layout the gilt layout is solar

00:16:10,170 --> 00:16:17,790
structure then we couldn't come out with

00:16:15,420 --> 00:16:21,630
some tools that we might need for

00:16:17,790 --> 00:16:25,230
branding or customized or sources that's

00:16:21,630 --> 00:16:28,320
sometimes someone that's some

00:16:25,230 --> 00:16:31,820
customizations or how do they apply

00:16:28,320 --> 00:16:37,260
apply their deltas how do they deal with

00:16:31,820 --> 00:16:41,670
their changes we at collabora we have we

00:16:37,260 --> 00:16:44,490
have based we have modified one to

00:16:41,670 --> 00:16:46,530
version of merge ematic but we have

00:16:44,490 --> 00:16:49,230
renamed it because now have more lines

00:16:46,530 --> 00:16:51,570
of code coming from us than from Ubuntu

00:16:49,230 --> 00:16:55,170
for our system and we renamed it is

00:16:51,570 --> 00:16:58,050
called melodramatic so basically gets

00:16:55,170 --> 00:17:01,200
upstream package and compares to the

00:16:58,050 --> 00:17:03,870
package we have and figure out diff and

00:17:01,200 --> 00:17:07,589
applies to the new version and sense to

00:17:03,870 --> 00:17:10,560
some build system and then we build a

00:17:07,589 --> 00:17:13,230
new package but if I it works then we

00:17:10,560 --> 00:17:16,980
can add this to the new distribution so

00:17:13,230 --> 00:17:19,410
we don't lose the the Delta we had so

00:17:16,980 --> 00:17:22,380
for building a derivative if there are

00:17:19,410 --> 00:17:28,230
many different options it could be good

00:17:22,380 --> 00:17:31,710
if we discuss and come up with with with

00:17:28,230 --> 00:17:34,890
a good tool for the reference

00:17:31,710 --> 00:17:38,070
implementation so for collabora we use

00:17:34,890 --> 00:17:40,080
open build service which we are also

00:17:38,070 --> 00:17:42,810
working in the packages to get them in

00:17:40,080 --> 00:17:44,700
Debian I like to think and really which

00:17:42,810 --> 00:17:51,150
is doing a lot of work on that

00:17:44,700 --> 00:17:55,140
on that side but other people may use s

00:17:51,150 --> 00:17:58,620
bail or may have some custom scripts or

00:17:55,140 --> 00:18:02,130
maybe the Debian users wanna build but

00:17:58,620 --> 00:18:05,430
the setup is quite complicated I'm not

00:18:02,130 --> 00:18:12,470
sure if this is suitable for somebody

00:18:05,430 --> 00:18:15,570
starting a new derivative so then when

00:18:12,470 --> 00:18:18,240
we have the binaries windows need to go

00:18:15,570 --> 00:18:22,500
into some repository so we're proposing

00:18:18,240 --> 00:18:26,640
to use Ripper Pro which is a to manage

00:18:22,500 --> 00:18:32,040
the archive Debian uses DAC but that is

00:18:26,640 --> 00:18:34,800
quite specialized for Debian and Swiss

00:18:32,040 --> 00:18:38,910
they have and it has some hard coatings

00:18:34,800 --> 00:18:45,390
and might be a bit overkill for new

00:18:38,910 --> 00:18:48,140
derivative yeah please okay can you get

00:18:45,390 --> 00:18:48,140
the microphone please

00:18:51,860 --> 00:18:58,290
developed a glue debian derivative doing

00:18:54,780 --> 00:19:00,060
almost that it's done so and we are

00:18:58,290 --> 00:19:02,610
using DAC and we patched down all the

00:19:00,060 --> 00:19:05,250
hard coding so it using DAC is possible

00:19:02,610 --> 00:19:06,810
for a derivative and it's like it's our

00:19:05,250 --> 00:19:08,370
solution for this because RepRap Oh

00:19:06,810 --> 00:19:11,220
wasn't able to handle more than 30

00:19:08,370 --> 00:19:14,490
thousand packages which we have attack

00:19:11,220 --> 00:19:15,960
so and we also didn't manage to set up

00:19:14,490 --> 00:19:21,260
wanna build I think that's impossible

00:19:15,960 --> 00:19:21,260
for anything anyone abbien we right now

00:19:29,180 --> 00:19:34,860
and yeah we might reconsider that

00:19:32,310 --> 00:19:36,420
because we have a few issues with it and

00:19:34,860 --> 00:19:46,110
building is actually the hardest part

00:19:36,420 --> 00:19:48,630
and could be optimized for now okay yeah

00:19:46,110 --> 00:19:51,690
yeah that is possible to use I know

00:19:48,630 --> 00:20:29,280
there's a Linux it's a distribution from

00:19:51,690 --> 00:20:33,720
Munich they also run and we handle

00:20:29,280 --> 00:20:37,980
around 2000 source packages with very

00:20:33,720 --> 00:20:41,880
Pro works fine but you have more maybe

00:20:37,980 --> 00:20:44,520
that doesn't scan so well I wonder what

00:20:41,880 --> 00:20:47,640
issue you have with Republican well in

00:20:44,520 --> 00:20:49,200
Cali user pro as well and we have all

00:20:47,640 --> 00:20:52,050
different packages so it's about the

00:20:49,200 --> 00:20:55,260
same number but we do not build all

00:20:52,050 --> 00:20:59,580
package we only build about 400 packages

00:20:55,260 --> 00:21:06,300
so I don't know where is it in the

00:20:59,580 --> 00:21:07,850
processing of result of built is that's

00:21:06,300 --> 00:21:12,530
a plot which is taking too long

00:21:07,850 --> 00:21:12,530
integrating result of building

00:21:14,770 --> 00:21:19,800
we're good with give that microphone

00:21:17,590 --> 00:21:19,800
please

00:21:21,550 --> 00:21:25,809
so yeah the probes processing is a

00:21:23,740 --> 00:21:30,370
problem because we rebuilt all packages

00:21:25,809 --> 00:21:32,350
and yeah also keeping track of those

00:21:30,370 --> 00:21:34,929
many packages in different Suites was an

00:21:32,350 --> 00:21:37,809
issue with a repo because we do release

00:21:34,929 --> 00:21:41,590
us and have that the stable suite and an

00:21:37,809 --> 00:21:44,770
incoming sweet and like multiple old

00:21:41,590 --> 00:21:46,870
stable Suites and this amounts to like a

00:21:44,770 --> 00:21:48,400
massive amount of different packages the

00:21:46,870 --> 00:21:51,309
system needs to keep track of and

00:21:48,400 --> 00:21:53,230
because it was well working on debian we

00:21:51,309 --> 00:21:55,660
just went with Jacqueline and didn't

00:21:53,230 --> 00:21:57,700
pursue reparable further so it might

00:21:55,660 --> 00:21:59,920
have been possible to work the like the

00:21:57,700 --> 00:22:03,610
work it out but in the end patching duck

00:21:59,920 --> 00:22:06,630
was easier and yeah the ftp masters were

00:22:03,610 --> 00:22:06,630
of great help

00:22:06,750 --> 00:22:15,340
okay it's true that repo Pro has

00:22:10,530 --> 00:22:18,460
probably not always very efficient you

00:22:15,340 --> 00:22:20,620
have to take care - for example ie

00:22:18,460 --> 00:22:23,230
buddy for it always exports all the

00:22:20,620 --> 00:22:25,570
files including contents files for each

00:22:23,230 --> 00:22:28,270
operation so if you have multiple

00:22:25,570 --> 00:22:32,020
operation or you should really disable

00:22:28,270 --> 00:22:35,110
those and do a single exploit every

00:22:32,020 --> 00:22:37,030
hours or something like that you you you

00:22:35,110 --> 00:22:39,760
have to know wait a bit and to walk

00:22:37,030 --> 00:22:42,460
around it's limitation and we also have

00:22:39,760 --> 00:22:45,400
found a few issues that are annoying but

00:22:42,460 --> 00:22:48,160
I disclose those in during my talk turn

00:22:45,400 --> 00:22:48,850
you just choose these kinds of tools

00:22:48,160 --> 00:22:51,070
Yeah right

00:22:48,850 --> 00:22:53,650
for us it was quite nice that by using

00:22:51,070 --> 00:22:55,750
that it we also had integration with me

00:22:53,650 --> 00:22:58,809
and all the other tools and we just need

00:22:55,750 --> 00:23:00,820
to figure out how to use it and with a

00:22:58,809 --> 00:23:02,710
pepper we would have been a bit more

00:23:00,820 --> 00:23:05,110
work to make it work yeah right that's

00:23:02,710 --> 00:23:06,460
one of the missing feature for me it's a

00:23:05,110 --> 00:23:18,220
Britain a declaration in which we do

00:23:06,460 --> 00:23:20,200
hacked in I think it'd be good to keep

00:23:18,220 --> 00:23:22,690
discussing this at least on the mailing

00:23:20,200 --> 00:23:24,940
list and get gathering all the people

00:23:22,690 --> 00:23:27,190
that is not possible to get here and try

00:23:24,940 --> 00:23:29,650
to come up with some

00:23:27,190 --> 00:23:32,440
so from sort of standard tools to

00:23:29,650 --> 00:23:33,790
propose from Debian mindset it doesn't

00:23:32,440 --> 00:23:37,000
mean that you have to change your

00:23:33,790 --> 00:23:38,920
derivative but I mean you're free to use

00:23:37,000 --> 00:23:42,420
whatever you want or whatever switch you

00:23:38,920 --> 00:23:45,670
most but from like having a reference

00:23:42,420 --> 00:23:48,940
would be really really good for Debian I

00:23:45,670 --> 00:23:54,610
believe and I wouldn't mind to to work

00:23:48,940 --> 00:23:56,770
on that so another another bit once you

00:23:54,610 --> 00:24:00,460
have the binary archives then you create

00:23:56,770 --> 00:24:03,370
some images or some installer so there

00:24:00,460 --> 00:24:06,730
are also many options available and I

00:24:03,370 --> 00:24:11,050
refer to recoup you did a presentation

00:24:06,730 --> 00:24:13,120
last year about hip he showed in Debian

00:24:11,050 --> 00:24:15,880
archives that were like fifteen or

00:24:13,120 --> 00:24:18,550
sixteen different tools to build images

00:24:15,880 --> 00:24:20,290
they all do the same and when somebody

00:24:18,550 --> 00:24:24,690
wants to build a new image you come up

00:24:20,290 --> 00:24:29,940
with a new script so it is there's no

00:24:24,690 --> 00:24:33,640
one tool that we can use there's also a

00:24:29,940 --> 00:24:36,670
difference between want to have an image

00:24:33,640 --> 00:24:39,040
that you can DD on these qanun SD card

00:24:36,670 --> 00:24:41,610
or you may want to have some installer

00:24:39,040 --> 00:24:47,680
media or you want to have a live image

00:24:41,610 --> 00:24:54,150
so it depends what you derivative one

00:24:47,680 --> 00:24:58,210
you you need a tool to pour the images I

00:24:54,150 --> 00:25:03,340
know the Debian CD team is now working

00:24:58,210 --> 00:25:07,180
on life rapper and that might come up

00:25:03,340 --> 00:25:09,850
that Malcolm that might be a solution

00:25:07,180 --> 00:25:12,820
for building images like for for cloud

00:25:09,850 --> 00:25:14,860
images and it's not ready yet

00:25:12,820 --> 00:25:17,110
but it's something that we might want to

00:25:14,860 --> 00:25:19,720
have a look in the in the future because

00:25:17,110 --> 00:25:22,270
official Debian is doing this and it's

00:25:19,720 --> 00:25:24,880
currently working on that and maybe

00:25:22,270 --> 00:25:27,910
derivatives can start using this and

00:25:24,880 --> 00:25:31,990
adapting for their their needs also like

00:25:27,910 --> 00:25:35,140
build is is highly used by many

00:25:31,990 --> 00:25:39,360
derivatives building light media but

00:25:35,140 --> 00:25:41,100
it's orphan now I think there is no

00:25:39,360 --> 00:25:45,220
maintainer ship

00:25:41,100 --> 00:25:48,460
so it's kind of like bid has been

00:25:45,220 --> 00:25:55,300
working really well like to thank Daniel

00:25:48,460 --> 00:25:59,680
for that but now we kind of miss missing

00:25:55,300 --> 00:26:02,110
this and then once we have the images we

00:25:59,680 --> 00:26:04,920
need to validate those that's very

00:26:02,110 --> 00:26:07,360
important and run some QA so there are

00:26:04,920 --> 00:26:10,480
very interesting talks from Antonio

00:26:07,360 --> 00:26:14,860
Tercero about their CI continuous

00:26:10,480 --> 00:26:17,680
integration without a package tests and

00:26:14,860 --> 00:26:20,590
there is also lava framework for

00:26:17,680 --> 00:26:23,050
Leonardo guys which it's it's packaged

00:26:20,590 --> 00:26:26,050
in Debian and you can install but this

00:26:23,050 --> 00:26:31,690
is more to deploy on on real hardware

00:26:26,050 --> 00:26:34,660
and run some tests there are other

00:26:31,690 --> 00:26:38,320
frameworks you can run some scripts from

00:26:34,660 --> 00:26:42,660
Jenkins to do some validation I know if

00:26:38,320 --> 00:26:49,750
people hear derivatives run any other

00:26:42,660 --> 00:26:52,540
tools you be helpful to know but coming

00:26:49,750 --> 00:26:59,050
with some tools for the reference

00:26:52,540 --> 00:27:05,050
derivative could be also good and in

00:26:59,050 --> 00:27:07,510
this case I would like to see I use a

00:27:05,050 --> 00:27:11,100
Sauter package tests and they this is

00:27:07,510 --> 00:27:14,410
standardized format of a test and lava

00:27:11,100 --> 00:27:17,470
uses thermal files for running these

00:27:14,410 --> 00:27:21,510
tests and then maybe other Jenkins have

00:27:17,470 --> 00:27:23,770
you prepared script for another test so

00:27:21,510 --> 00:27:27,460
you have different frameworks and

00:27:23,770 --> 00:27:30,370
different formats so maybe using all of

00:27:27,460 --> 00:27:33,700
them the same format could benefit us

00:27:30,370 --> 00:27:36,190
all so from a derivative you work on

00:27:33,700 --> 00:27:39,280
some test and maybe other derivative can

00:27:36,190 --> 00:27:43,840
benefit from from that test I think that

00:27:39,280 --> 00:27:46,930
auto package test is probably a good

00:27:43,840 --> 00:27:50,230
solution but we would have to teach

00:27:46,930 --> 00:27:52,260
these frameworks how to use it can you

00:27:50,230 --> 00:28:02,910
pass the microphone there

00:27:52,260 --> 00:28:04,860
- Neil please just a note on the auto

00:28:02,910 --> 00:28:09,030
package test because that is very based

00:28:04,860 --> 00:28:10,620
on uninstalled package it'll test the

00:28:09,030 --> 00:28:12,419
installed package the way that the

00:28:10,620 --> 00:28:17,240
install package has had its unit tests

00:28:12,419 --> 00:28:21,419
set up it isn't designed to test

00:28:17,240 --> 00:28:23,309
different packages in one go for one

00:28:21,419 --> 00:28:26,040
particular image or one particular set

00:28:23,309 --> 00:28:27,809
of binaries it'll test one package

00:28:26,040 --> 00:28:31,860
Gordon - what what's actually been asked

00:28:27,809 --> 00:28:33,330
for and the only tests the operation of

00:28:31,860 --> 00:28:37,380
that package not how that package

00:28:33,330 --> 00:28:39,210
interacts with other packages so trying

00:28:37,380 --> 00:28:43,470
to harmonize all these kinds of things

00:28:39,210 --> 00:28:44,490
is some tight idealistic to me because

00:28:43,470 --> 00:28:45,929
they actually have different objectives

00:28:44,490 --> 00:28:50,580
they're trying to do different things

00:28:45,929 --> 00:28:52,380
and you need to find a set of tools that

00:28:50,580 --> 00:28:54,120
can help people to do the particular

00:28:52,380 --> 00:28:56,549
kind of testing they need and that can

00:28:54,120 --> 00:28:59,429
be multiple tools but trying to do one

00:28:56,549 --> 00:29:00,870
tool that does everything is where lava

00:28:59,429 --> 00:29:02,549
and particularly core into problems in

00:29:00,870 --> 00:29:05,610
the early stages of the design that's

00:29:02,549 --> 00:29:08,040
why we go into this redesign because if

00:29:05,610 --> 00:29:10,290
you try to do too many things you end up

00:29:08,040 --> 00:29:11,880
with the tool itself getting in the way

00:29:10,290 --> 00:29:17,010
of those people who are trying to do it

00:29:11,880 --> 00:29:18,570
for for a particular task right so we

00:29:17,010 --> 00:29:21,690
understand we have different kind of

00:29:18,570 --> 00:29:24,480
tests you can do a source code you need

00:29:21,690 --> 00:29:28,710
testing you can do package level testing

00:29:24,480 --> 00:29:31,320
you can do system level testing but at

00:29:28,710 --> 00:29:35,700
least having some common format some

00:29:31,320 --> 00:29:40,320
standardized that we can share the guy

00:29:35,700 --> 00:29:44,190
it's an ideal but I don't know

00:29:40,320 --> 00:29:47,940
after QA I don't know if yeah well head

00:29:44,190 --> 00:29:51,450
I just wanted to pass on an idea

00:29:47,940 --> 00:29:53,160
I was wondering also with the problem of

00:29:51,450 --> 00:29:55,200
testing interaction between multiple

00:29:53,160 --> 00:29:58,230
packages so you can't do that really in

00:29:55,200 --> 00:30:03,270
the auto package test but we could maybe

00:29:58,230 --> 00:30:04,890
create separate repository of maybe fake

00:30:03,270 --> 00:30:08,280
source packages which

00:30:04,890 --> 00:30:12,240
would specifically have the purpose of

00:30:08,280 --> 00:30:15,000
testing a common use case I mean for

00:30:12,240 --> 00:30:18,630
example Linux Apache MySQL combination

00:30:15,000 --> 00:30:21,450
as usual running a PHP application and

00:30:18,630 --> 00:30:24,720
testing this it's a way to test multiple

00:30:21,450 --> 00:30:26,550
packages which is doable because why

00:30:24,720 --> 00:30:29,670
total package tests have dependencies or

00:30:26,550 --> 00:30:32,310
you can install whatever you want and it

00:30:29,670 --> 00:30:36,000
could be a separate repository and I

00:30:32,310 --> 00:30:37,680
believe that CA taught at least the code

00:30:36,000 --> 00:30:40,530
running CI Debian that dependent not

00:30:37,680 --> 00:30:43,530
come easily under only a subset of

00:30:40,530 --> 00:30:45,270
package or a dedicated repository so we

00:30:43,530 --> 00:30:49,970
could have more something on the side

00:30:45,270 --> 00:30:59,450
which would do some some sort of

00:30:49,970 --> 00:31:04,920
integration test if you want okay I

00:30:59,450 --> 00:31:08,970
don't know after QA you validate the

00:31:04,920 --> 00:31:10,110
image I don't know if somebody else does

00:31:08,970 --> 00:31:15,000
something else

00:31:10,110 --> 00:31:18,410
we just profit and benefit from from

00:31:15,000 --> 00:31:18,410
their derivative to enjoy it

00:31:26,620 --> 00:31:34,570
so so I'd like to thank collabora and

00:31:32,020 --> 00:31:37,299
valve because they've been a sponsor in

00:31:34,570 --> 00:31:40,630
Debian and also like to thank Debian and

00:31:37,299 --> 00:31:43,000
they've calmed people so if you have any

00:31:40,630 --> 00:31:45,669
questions or answers or some more

00:31:43,000 --> 00:31:47,549
discussion I think we have a few limit a

00:31:45,669 --> 00:31:51,460
few minutes left

00:31:47,549 --> 00:31:54,309
yeah around 10 minutes so yes feel free

00:31:51,460 --> 00:31:57,669
to talk and yeah I'd also like to invite

00:31:54,309 --> 00:32:02,340
you to the next talk of Kali Linux and

00:31:57,669 --> 00:32:04,320
then afterwards I think there's a HP

00:32:02,340 --> 00:32:08,049
Enterprise Linux distribution

00:32:04,320 --> 00:32:12,100
presentation so you we might say what

00:32:08,049 --> 00:32:13,840
they they have to say oh think so you

00:32:12,100 --> 00:32:15,730
mentioned one of the reasons in your

00:32:13,840 --> 00:32:17,919
list of reasons of why people would

00:32:15,730 --> 00:32:20,649
choose derivative or start one was

00:32:17,919 --> 00:32:23,890
concerns about licensing obviously

00:32:20,649 --> 00:32:25,809
there's different forms of that one is

00:32:23,890 --> 00:32:27,809
if you want to include proprietary

00:32:25,809 --> 00:32:30,039
software and the default distribution

00:32:27,809 --> 00:32:32,789
that's been a common reason people make

00:32:30,039 --> 00:32:34,870
derivatives my favorite concern now is

00:32:32,789 --> 00:32:37,029
derivatives that come that are now

00:32:34,870 --> 00:32:38,500
violating the GPL which is different

00:32:37,029 --> 00:32:40,120
than just providing proprietary software

00:32:38,500 --> 00:32:42,279
it's actually violating a free software

00:32:40,120 --> 00:32:43,480
license so I was wondering if you had

00:32:42,279 --> 00:32:45,640
any thoughts about how the Debian

00:32:43,480 --> 00:32:47,470
community should deal with downstream

00:32:45,640 --> 00:32:49,770
derivatives that are violating the GPL

00:32:47,470 --> 00:32:53,740
and what we should do about it socially

00:32:49,770 --> 00:32:56,559
okay that point came up from last year

00:32:53,740 --> 00:33:00,510
panel and I think it was it was

00:32:56,559 --> 00:33:05,470
introduced by book Sirah file and that

00:33:00,510 --> 00:33:08,220
was because some he runs a penetration

00:33:05,470 --> 00:33:12,580
test in distribution some some of the

00:33:08,220 --> 00:33:15,179
subways is built to to do an attack or

00:33:12,580 --> 00:33:17,740
something back to the system so that

00:33:15,179 --> 00:33:20,679
might have some license it might not be

00:33:17,740 --> 00:33:23,830
a good package that good that it's a

00:33:20,679 --> 00:33:28,590
good fit for Debian so that mostly came

00:33:23,830 --> 00:33:35,200
up from that so going to the binary blob

00:33:28,590 --> 00:33:38,649
discussion we just need to think we hit

00:33:35,200 --> 00:33:40,300
this JP JP L violations we just if we

00:33:38,649 --> 00:33:42,400
find someone

00:33:40,300 --> 00:33:46,630
violating the GPL there's not much we

00:33:42,400 --> 00:33:48,670
can do so just point it out and try to

00:33:46,630 --> 00:33:50,140
fix their way if they don't know and if

00:33:48,670 --> 00:33:52,780
they don't fix it because they're able

00:33:50,140 --> 00:33:55,900
then if you want to take them to court

00:33:52,780 --> 00:33:58,750
then that's the process probably no

00:33:55,900 --> 00:34:00,430
that's a lot of work that I do but I'm

00:33:58,750 --> 00:34:02,920
wondering if there's a social component

00:34:00,430 --> 00:34:04,540
to it as well should should Debbie and

00:34:02,920 --> 00:34:07,870
have a different attitude towards

00:34:04,540 --> 00:34:09,820
derivatives that violate the GPL or take

00:34:07,870 --> 00:34:11,110
some sort of position to try and put

00:34:09,820 --> 00:34:13,390
social pressure on them rather than

00:34:11,110 --> 00:34:14,350
legal pressure to get them to stop I'm

00:34:13,390 --> 00:34:15,760
just wondering if you think that would

00:34:14,350 --> 00:34:18,880
be appropriate or should we explore that

00:34:15,760 --> 00:34:22,960
a thing is not it's not our business

00:34:18,880 --> 00:34:26,440
so they if somebody uses a derivative

00:34:22,960 --> 00:34:28,720
and do whatever they want to do I'm not

00:34:26,440 --> 00:34:36,429
sure from from Davis maybe a point of

00:34:28,720 --> 00:34:38,770
view what what can we do I mean we can

00:34:36,429 --> 00:34:41,560
decide that you know we don't we aren't

00:34:38,770 --> 00:34:44,860
so helpful towards a distribution that

00:34:41,560 --> 00:34:51,810
we feel is not up not complying with its

00:34:44,860 --> 00:34:51,810
obligations we put out a note in the

00:34:59,730 --> 00:35:06,070
actually we have well so it was only

00:35:03,640 --> 00:35:08,320
place where we sort of advertised our

00:35:06,070 --> 00:35:11,440
dairy but it's in the sensors it's not

00:35:08,320 --> 00:35:15,790
very visible it's mostly an internal

00:35:11,440 --> 00:35:18,550
tool to track derivatives but instead of

00:35:15,790 --> 00:35:20,080
trying to blame the bad the bad

00:35:18,550 --> 00:35:22,960
derivatives we could do the opposite

00:35:20,080 --> 00:35:26,430
trying to promote the good ones having a

00:35:22,960 --> 00:35:30,370
sort of debian blessed derivative

00:35:26,430 --> 00:35:33,690
because while you follow the rules you

00:35:30,370 --> 00:35:37,450
clearly separate free from non free you

00:35:33,690 --> 00:35:40,120
you give back and you were open that

00:35:37,450 --> 00:35:42,280
kind of stuff so I would rather go in

00:35:40,120 --> 00:35:46,690
this direction there rather than in the

00:35:42,280 --> 00:35:48,700
opposite one yeah I actually completely

00:35:46,690 --> 00:35:49,960
agree with that idea and it correlates

00:35:48,700 --> 00:35:51,340
with something I've been sitting here

00:35:49,960 --> 00:35:52,810
thinking about for the last few minutes

00:35:51,340 --> 00:35:53,220
you talked about the idea of a reference

00:35:52,810 --> 00:35:56,119
just

00:35:53,220 --> 00:35:58,500
abuse and my brains been sort of

00:35:56,119 --> 00:36:00,210
revolting against that from the idea

00:35:58,500 --> 00:36:01,980
that anything you try to create as a

00:36:00,210 --> 00:36:05,040
reference that isn't actually itself

00:36:01,980 --> 00:36:07,320
being regularly used tends to not stay

00:36:05,040 --> 00:36:10,400
fresh and current and and sort of in

00:36:07,320 --> 00:36:14,910
good condition for long so the notion of

00:36:10,400 --> 00:36:17,310
you know maybe identifying some subset

00:36:14,910 --> 00:36:19,760
of the available derivatives that seemed

00:36:17,310 --> 00:36:22,650
to not only sort of be adhering

00:36:19,760 --> 00:36:26,310
philosophically to or morally to the

00:36:22,650 --> 00:36:29,220
right behaviors but which exhibit sort

00:36:26,310 --> 00:36:30,450
of good mechanisms or good practices for

00:36:29,220 --> 00:36:32,490
building a derivative could be an

00:36:30,450 --> 00:36:35,130
interesting alternative to creating some

00:36:32,490 --> 00:36:38,520
separate reference derivative I don't

00:36:35,130 --> 00:36:40,680
know right so I was more focused on the

00:36:38,520 --> 00:36:43,200
tools and the tool set that the toolkit

00:36:40,680 --> 00:36:51,599
we need to provide for derivatives and

00:36:43,200 --> 00:37:00,060
maybe what if then do the derivative if

00:36:51,599 --> 00:37:04,260
you if you produce something I've been

00:37:00,060 --> 00:37:05,900
very bothered by the controversy with

00:37:04,260 --> 00:37:09,780
though you going to trademark recently

00:37:05,900 --> 00:37:13,980
like we provide for Ubuntu something

00:37:09,780 --> 00:37:16,920
that the distribution that they can make

00:37:13,980 --> 00:37:19,800
money out of and then whenever someone

00:37:16,920 --> 00:37:21,869
wants to make you go to derivative they

00:37:19,800 --> 00:37:24,300
have to either ask permission or remove

00:37:21,869 --> 00:37:27,300
Ubuntu everywhere

00:37:24,300 --> 00:37:32,130
to me that's not a correct behavior

00:37:27,300 --> 00:37:36,119
because they how can I say they are

00:37:32,130 --> 00:37:40,920
twisting the GPL license doing that by

00:37:36,119 --> 00:37:43,440
using trademark laws issue loopholes so

00:37:40,920 --> 00:37:47,730
I wonder if Debian could do something

00:37:43,440 --> 00:37:51,240
about that to make to enforce the fact

00:37:47,730 --> 00:37:56,040
that we want people to be able to do the

00:37:51,240 --> 00:37:59,010
relative of our derivatives is there oh

00:37:56,040 --> 00:38:01,670
I'm not a lawyer but would there be a

00:37:59,010 --> 00:38:01,670
way to do that

00:38:05,510 --> 00:38:10,440
I'm sorry I got you guys angry about

00:38:08,460 --> 00:38:12,630
about me seeing that I'm sorry for it

00:38:10,440 --> 00:38:14,750
but I really feel uncomfortable with the

00:38:12,630 --> 00:38:17,970
current situation my company had to

00:38:14,750 --> 00:38:21,079
remove Ubuntu from the bench change logs

00:38:17,970 --> 00:38:21,079
in search and it's very painful

00:38:29,150 --> 00:38:34,310
Nanako legal we also told to rebuild

00:38:40,339 --> 00:38:45,599
steam steam case was similar they were

00:38:43,079 --> 00:38:51,650
based on a 1/2 in Italy and then they

00:38:45,599 --> 00:38:51,650
moved to the to Debian as well ok so

00:38:52,430 --> 00:39:30,960
what's going on and they can do things

00:38:59,760 --> 00:39:32,220
with their with your mic yeah but

00:39:30,960 --> 00:39:34,170
they're already violating the life and

00:39:32,220 --> 00:39:35,369
something like well if you're saying if

00:39:34,170 --> 00:39:37,520
there's a license violation then you

00:39:35,369 --> 00:39:53,550
should deal with that I think people

00:39:37,520 --> 00:39:56,160
some extra like way to deal with it stop

00:39:53,550 --> 00:39:59,010
the problem of licenses it's a problem

00:39:56,160 --> 00:40:03,200
of trademarks ok canonical is in the

00:39:59,010 --> 00:40:03,200
frosting to you boo to trademark here

00:40:09,170 --> 00:40:14,750
the problem is that I feel uncomfortable

00:40:12,030 --> 00:40:16,720
that a company takes our packages

00:40:14,750 --> 00:40:20,020
rebrand them and the

00:40:16,720 --> 00:40:23,790
then say you can't reuse that and modify

00:40:20,020 --> 00:40:27,220
it and use the four freedoms of GPL

00:40:23,790 --> 00:40:29,410
there is more than 300 derivatives based

00:40:27,220 --> 00:40:32,410
on a bun - and all of them have applied

00:40:29,410 --> 00:40:35,050
to use a different trademark instead of

00:40:32,410 --> 00:40:37,150
Ubuntu or bun - and all of them have

00:40:35,050 --> 00:40:39,070
been there is a community process to

00:40:37,150 --> 00:40:39,880
apply for it you shouldn't need to apply

00:40:39,070 --> 00:40:41,560
the supernes

00:40:39,880 --> 00:41:00,400
you shouldn't need to apply you should

00:40:41,560 --> 00:41:05,650
be able to do it without applying some

00:41:00,400 --> 00:41:07,030
one get the mic up there I think people

00:41:05,650 --> 00:41:10,240
have conflated a couple of different

00:41:07,030 --> 00:41:12,040
issues the bunch of trademark policy was

00:41:10,240 --> 00:41:14,830
violating the GPL for quite a long

00:41:12,040 --> 00:41:15,869
period of time it is now in compliance

00:41:14,830 --> 00:41:18,550
as far as I know

00:41:15,869 --> 00:41:20,590
so so that that's that's its own issue

00:41:18,550 --> 00:41:22,180
and we can argue about the annoyances

00:41:20,590 --> 00:41:23,950
that the downstream and Bunta community

00:41:22,180 --> 00:41:27,369
has about the existing trademark policy

00:41:23,950 --> 00:41:29,980
but it's not a GPL violation anymore so

00:41:27,369 --> 00:41:31,869
it's not an issue of the of the licenses

00:41:29,980 --> 00:41:34,300
of Debian being violated it's more of a

00:41:31,869 --> 00:41:36,430
noise by the jury raising about work and

00:41:34,300 --> 00:41:37,900
so forth which is a different issue I'm

00:41:36,430 --> 00:41:40,540
much more concerned about the existing

00:41:37,900 --> 00:41:42,599
GPL violations that continue which one -

00:41:40,540 --> 00:41:44,410
is also in other ways violating the GPL

00:41:42,599 --> 00:41:45,730
those are something we should think

00:41:44,410 --> 00:41:47,530
about just like when the trademark

00:41:45,730 --> 00:41:49,240
policy was violated GPL I think Debian

00:41:47,530 --> 00:41:50,770
should have it would have been useful

00:41:49,240 --> 00:41:52,930
for Debian to take a stronger stand

00:41:50,770 --> 00:41:54,760
about that and now that there are other

00:41:52,930 --> 00:41:58,089
GPL violations I think it would be good

00:41:54,760 --> 00:42:00,780
for Debian take a stand on those or in

00:41:58,089 --> 00:42:03,220
some way I like this idea of here of

00:42:00,780 --> 00:42:05,170
trying to promote the good ones more and

00:42:03,220 --> 00:42:07,570
making a list of people who actually are

00:42:05,170 --> 00:42:10,210
compliant with the GPL positive

00:42:07,570 --> 00:42:13,119
reinforcements better than negative

00:42:10,210 --> 00:42:14,290
reinforcement certainly but but I think

00:42:13,119 --> 00:42:16,750
it's important not to complain all these

00:42:14,290 --> 00:42:19,060
issues because because it's a question

00:42:16,750 --> 00:42:20,260
of license compliance versus non license

00:42:19,060 --> 00:42:23,320
compliance and then it's also a question

00:42:20,260 --> 00:42:26,380
of who's downstream from whom and has to

00:42:23,320 --> 00:42:28,180
comply with whose policies so I I just

00:42:26,380 --> 00:42:30,690
see that being complained a lot here

00:42:28,180 --> 00:42:30,690
that concern

00:42:33,680 --> 00:42:45,690
we have minute left if somebody wants to

00:42:38,670 --> 00:42:47,910
add something not not to the licensing

00:42:45,690 --> 00:42:50,759
issue but for the reference distribution

00:42:47,910 --> 00:42:53,579
again I think that one of the biggest

00:42:50,759 --> 00:42:56,219
problems for derivative is that there

00:42:53,579 --> 00:42:58,529
are sometimes in some areas no really

00:42:56,219 --> 00:43:00,660
good tools to do a certain task for

00:42:58,529 --> 00:43:02,910
example building packages in a

00:43:00,660 --> 00:43:05,219
distributed way it was really not

00:43:02,910 --> 00:43:08,749
possible you know on the scale we wanted

00:43:05,219 --> 00:43:12,869
to do until we found Debbie Deb Isle and

00:43:08,749 --> 00:43:14,700
yeah because tools like what Fedora uses

00:43:12,869 --> 00:43:17,160
are obviously for fedora packages then

00:43:14,700 --> 00:43:18,989
the open bill service was almost

00:43:17,160 --> 00:43:20,630
impossible to set up for on Debian

00:43:18,989 --> 00:43:23,279
machines because it was developed by

00:43:20,630 --> 00:43:26,339
openSUSE for their needs mostly I think

00:43:23,279 --> 00:43:28,109
it might be better now and ya wanna

00:43:26,339 --> 00:43:29,880
build is so deeply integrated with

00:43:28,109 --> 00:43:32,910
Debian infrastructure that was unusable

00:43:29,880 --> 00:43:35,849
so we had really a big problem with

00:43:32,910 --> 00:43:38,009
building packages initially also with

00:43:35,849 --> 00:43:41,130
creating life systems they are as no I

00:43:38,009 --> 00:43:42,989
think it's not the thing that that there

00:43:41,130 --> 00:43:44,609
needs to be a reference distribution but

00:43:42,989 --> 00:43:47,249
the tools would need to be much better

00:43:44,609 --> 00:43:49,079
and much easier to use and much better

00:43:47,249 --> 00:43:52,229
documented that's actually the more

00:43:49,079 --> 00:43:54,539
important part then than what we

00:43:52,229 --> 00:43:56,549
currently have like creating good tools

00:43:54,539 --> 00:43:58,859
and documenting how to create a

00:43:56,549 --> 00:44:01,049
derivative that would be in my opinion

00:43:58,859 --> 00:44:04,499
far more useful than creating another

00:44:01,049 --> 00:44:06,420
derivative yeah yeah was exactly that

00:44:04,499 --> 00:44:09,779
that document the tools and provide

00:44:06,420 --> 00:44:12,180
tools and it was more than a deadline

00:44:09,779 --> 00:44:17,969
we've been talking about tools rather

00:44:12,180 --> 00:44:20,880
than derivatives I think I think we can

00:44:17,969 --> 00:44:23,699
prepare a summary of all these sent to

00:44:20,880 --> 00:44:24,989
the mailing list and maybe we can pick

00:44:23,699 --> 00:44:27,779
up from there and continue this

00:44:24,989 --> 00:44:28,859
conversation so I'd like to thank you

00:44:27,779 --> 00:44:32,819
all for being here

00:44:28,859 --> 00:44:34,950
and we'll continue next door with Kali

00:44:32,819 --> 00:44:37,010
Linux so thanks

00:44:34,950 --> 00:44:37,010

YouTube URL: https://www.youtube.com/watch?v=91z8_LQujeo


