Title: Server freedom: why choosing the cloud, OpenStack and Debian
Publication date: 2018-07-31
Playlist: DebConf 18
Description: 
	by Thomas Goirand

At: DebConf18
https://debconf18.debconf.org/talks/118-server-freedom-why-choosing-the-cloud-openstack-and-debian/

After 7 years of OpenStack existence, it's time to step back, and understand why using, and operating it is more important than ever. In this talk, we'll cover why running your workload on the cloud is becoming increasingly crucial because of the costs and agility of the cloud empowers its users. We'll see why running on the cloud, rather than on legacy dedicated servers, gives more freedom than ever. Then we'll see why using OpenStack over proprietary solutions matters for your freedom. Finally, we'll see how choosing Debian to run OpenStack makes a real difference in avoiding vendor lock-in.

Room: Yushan (玉山)
Scheduled start: 2018-07-30 17:30:00
Captions: 
	00:00:05,500 --> 00:00:14,290
hello so as I said I have been

00:00:12,530 --> 00:00:19,180
maintaining of instructions

00:00:14,290 --> 00:00:21,279
in 2001 it says this is a piece off of

00:00:19,180 --> 00:00:23,830
software to package in Debian I was

00:00:21,279 --> 00:00:26,529
surprised on the beach from the DPL to

00:00:23,830 --> 00:00:34,350
find out I was one of the fifth uploader

00:00:26,529 --> 00:00:37,600
last year and I've been doing hosting

00:00:34,350 --> 00:00:40,600
for a long time and I currently work for

00:00:37,600 --> 00:00:44,440
OPA maniac which is gold sponsor of the

00:00:40,600 --> 00:00:54,640
event and it's also the first hosting

00:00:44,440 --> 00:00:58,930
company in Switzerland so this this talk

00:00:54,640 --> 00:01:03,190
is a kind of an answer I'm doing to what

00:00:58,930 --> 00:01:05,170
I've been hearing from the FSF so I hope

00:01:03,190 --> 00:01:15,670
even if John Sullivan is not here in the

00:01:05,170 --> 00:01:18,550
room that I'll be heard so it addresses

00:01:15,670 --> 00:01:21,370
to everyone that potentially needs

00:01:18,550 --> 00:01:23,530
hosting because there's a trend of going

00:01:21,370 --> 00:01:28,450
to the cloud and I'll explain why this

00:01:23,530 --> 00:01:30,670
is happening so there's multiple types

00:01:28,450 --> 00:01:33,370
of clouds there's infrastructure as a

00:01:30,670 --> 00:01:36,520
service platform as a service software

00:01:33,370 --> 00:01:39,670
as a service on this talk I'm not going

00:01:36,520 --> 00:01:42,280
to address software as a service I just

00:01:39,670 --> 00:01:45,940
hope to lift the confusion that there is

00:01:42,280 --> 00:01:49,750
crying about that so this is all about

00:01:45,940 --> 00:01:59,560
having on-demand VM on from a service

00:01:49,750 --> 00:02:01,600
provider like most of us in the room and

00:01:59,560 --> 00:02:03,549
in Debian in general I also believe that

00:02:01,600 --> 00:02:06,159
we should never use software as a

00:02:03,549 --> 00:02:07,420
service because you're not in the

00:02:06,159 --> 00:02:14,530
control of the software you're using

00:02:07,420 --> 00:02:16,540
then nevertheless we still need hosting

00:02:14,530 --> 00:02:19,030
services for all sorts of types of

00:02:16,540 --> 00:02:22,590
services like ticketing shops banking

00:02:19,030 --> 00:02:25,550
news content Wikimedia or or gaming

00:02:22,590 --> 00:02:35,060
whatnot

00:02:25,550 --> 00:02:36,920
so people have been using dedicated

00:02:35,060 --> 00:02:39,980
servers and shall hosting for a long

00:02:36,920 --> 00:02:42,440
long time and then slowly it's shifting

00:02:39,980 --> 00:02:46,700
to what we call in thrush which was a

00:02:42,440 --> 00:02:51,200
service for multiple reasons one of them

00:02:46,700 --> 00:02:54,050
is cost control because as time passes

00:02:51,200 --> 00:03:01,400
using the cloud is getting cheaper and

00:02:54,050 --> 00:03:04,340
cheaper and your services can grow in an

00:03:01,400 --> 00:03:07,820
infrastructure as a service provider as

00:03:04,340 --> 00:03:09,800
your service is growing and if you are

00:03:07,820 --> 00:03:13,460
smart enough you can even do two scaling

00:03:09,800 --> 00:03:16,960
meaning that you will automatically do

00:03:13,460 --> 00:03:19,910
provisioning of VMs inside the

00:03:16,960 --> 00:03:23,120
infrastructure as a service whenever

00:03:19,910 --> 00:03:28,430
there is more demand on your web server

00:03:23,120 --> 00:03:33,200
for example but that's not it people

00:03:28,430 --> 00:03:35,120
start using the cloud because setting up

00:03:33,200 --> 00:03:37,970
the traditional way on dedicated server

00:03:35,120 --> 00:03:41,450
just takes too long and it's too

00:03:37,970 --> 00:03:43,550
complicated like you would install the

00:03:41,450 --> 00:03:46,640
operating system with the Debian

00:03:43,550 --> 00:03:50,209
installer manually using a KVM and then

00:03:46,640 --> 00:03:54,470
apache and then all your services one by

00:03:50,209 --> 00:03:55,970
one that that's too slow to do it and

00:03:54,470 --> 00:03:59,810
that's not the way people are doing

00:03:55,970 --> 00:04:03,370
these days I've met a company which is

00:03:59,810 --> 00:04:07,250
called scaled 5 in Paris in sociology

00:04:03,370 --> 00:04:09,580
they do only infrastructure as code so

00:04:07,250 --> 00:04:13,930
what what does that mean it means that

00:04:09,580 --> 00:04:16,820
to be able to do a deployment they do

00:04:13,930 --> 00:04:18,260
they write scripts using terraform so

00:04:16,820 --> 00:04:23,150
terraform will do the provisioning of

00:04:18,260 --> 00:04:25,220
your VMs and then it all deploys

00:04:23,150 --> 00:04:28,210
automatically and anything they have to

00:04:25,220 --> 00:04:33,890
do on their virtual infrastructure is

00:04:28,210 --> 00:04:35,870
implemented through programming and so

00:04:33,890 --> 00:04:37,759
you would use something like terraform

00:04:35,870 --> 00:04:40,490
first that would

00:04:37,759 --> 00:04:46,370
maybe create your in vain inventory file

00:04:40,490 --> 00:04:52,909
and then it will go to the later on you

00:04:46,370 --> 00:04:58,930
can use either a pet or an Sivir and it

00:04:52,909 --> 00:05:01,879
will most of the time leverage more

00:04:58,930 --> 00:05:06,050
advanced service like that a basil

00:05:01,879 --> 00:05:07,699
service DNS as a service load balancing

00:05:06,050 --> 00:05:10,759
as a service so that you don't need to

00:05:07,699 --> 00:05:13,939
implement it on your own deployment you

00:05:10,759 --> 00:05:22,339
just use whatever the the provider is

00:05:13,939 --> 00:05:24,379
giving to you so more and more company

00:05:22,339 --> 00:05:30,680
are switching to that kind of model to

00:05:24,379 --> 00:05:34,300
deploy hosted services and it's becoming

00:05:30,680 --> 00:05:34,300
the only scalable way to do things

00:05:34,779 --> 00:05:48,139
yet at the FSF I saw Richard Stallman

00:05:42,349 --> 00:05:50,240
joining the Debian cloud leased back in

00:05:48,139 --> 00:05:56,300
2013 so you see that that's a long time

00:05:50,240 --> 00:06:01,580
ago and he wrote please do not talk

00:05:56,300 --> 00:06:04,099
about cloud so his idea is that just

00:06:01,580 --> 00:06:08,449
saying cloud is too much of a general

00:06:04,099 --> 00:06:13,249
term to describe something and we would

00:06:08,449 --> 00:06:17,089
better use more specific terms so ok I

00:06:13,249 --> 00:06:21,999
can somehow agree with that and yet

00:06:17,089 --> 00:06:24,889
that's the campaign from the FSA fsfe so

00:06:21,999 --> 00:06:27,979
what cloud are they're talking about

00:06:24,889 --> 00:06:31,669
here is it software as a service we

00:06:27,979 --> 00:06:35,599
don't know right are they talking about

00:06:31,669 --> 00:06:37,699
proprietary clouds like AWS we don't

00:06:35,599 --> 00:06:40,099
know either just general it's cloud so

00:06:37,699 --> 00:06:41,839
it's exactly what Richard Stallman has

00:06:40,099 --> 00:06:43,759
been saying to us that we should not use

00:06:41,839 --> 00:06:48,519
the cloud and then they use it for the

00:06:43,759 --> 00:06:48,519
campaign and

00:06:49,640 --> 00:06:57,170
so on top of that like the word cloud

00:06:55,050 --> 00:06:58,650
computing comes from

00:06:57,170 --> 00:07:02,340
infrastructure-as-a-service

00:06:58,650 --> 00:07:04,680
and then people having have been saying

00:07:02,340 --> 00:07:06,690
I'm putting something in the cloud

00:07:04,680 --> 00:07:09,810
that's because we do have infrastructure

00:07:06,690 --> 00:07:13,590
as a service and software on top of that

00:07:09,810 --> 00:07:16,500
we say that so the word cloud does have

00:07:13,590 --> 00:07:19,500
meaning and and we should take care how

00:07:16,500 --> 00:07:21,720
to use it agree but we should not just

00:07:19,500 --> 00:07:24,570
dismiss cloud and say that it's a bad

00:07:21,720 --> 00:07:26,520
thing in general anyway this will not

00:07:24,570 --> 00:07:28,140
work like people are going to continue

00:07:26,520 --> 00:07:28,830
to the cloud because as I said

00:07:28,140 --> 00:07:32,610
previously

00:07:28,830 --> 00:07:45,410
that's an efficient way to to go online

00:07:32,610 --> 00:07:48,690
and then I have a slide I heard so I

00:07:45,410 --> 00:07:51,000
listened to Benjamin Benjamin

00:07:48,690 --> 00:07:55,230
makuhita sorry I'm not saying it grew

00:07:51,000 --> 00:07:59,100
quiet way and having his talk at liberal

00:07:55,230 --> 00:08:03,660
planet and I was a bit shocked by his

00:07:59,100 --> 00:08:05,490
message so I'm going to make you listen

00:08:03,660 --> 00:08:07,830
to it it's going to be a little bit

00:08:05,490 --> 00:08:10,560
tricky because I have no Sun on my

00:08:07,830 --> 00:08:16,530
computer so I use my phone and the

00:08:10,560 --> 00:08:18,420
computer at the same time a big new

00:08:16,530 --> 00:08:20,160
successful projects are either software

00:08:18,420 --> 00:08:24,000
for phones and embedded systems things

00:08:20,160 --> 00:08:25,320
like Android or lots of things that are

00:08:24,000 --> 00:08:26,700
sort of cloud services based you can

00:08:25,320 --> 00:08:28,620
think of OpenStack or Cooper Nettie's or

00:08:26,700 --> 00:08:30,030
databases web frameworks so on and so

00:08:28,620 --> 00:08:33,270
forth and the reason those two things

00:08:30,030 --> 00:08:35,190
have me worried is because although

00:08:33,270 --> 00:08:36,870
these are free software and they're even

00:08:35,190 --> 00:08:38,190
peer production in the sense that there

00:08:36,870 --> 00:08:40,020
is pure production happening around

00:08:38,190 --> 00:08:42,900
these things maybe less than was the

00:08:40,020 --> 00:08:45,750
case in Linux in the mid-90s but but but

00:08:42,900 --> 00:08:48,450
it's definitely happening they're both

00:08:45,750 --> 00:08:50,940
driven by by firms who are engaging in a

00:08:48,450 --> 00:08:52,740
kind of strategic openness that that

00:08:50,940 --> 00:08:55,620
involves the software being released

00:08:52,740 --> 00:08:57,930
freely and even distributed freely but

00:08:55,620 --> 00:09:00,180
in both cases it's companies that are

00:08:57,930 --> 00:09:01,500
developing and deploying software the

00:09:00,180 --> 00:09:02,410
where the companies who are developing

00:09:01,500 --> 00:09:04,690
and deploying the software

00:09:02,410 --> 00:09:07,720
get the freedom and the users the end

00:09:04,690 --> 00:09:09,310
users do not in the case of Web Services

00:09:07,720 --> 00:09:12,430
Unit software's not even running on your

00:09:09,310 --> 00:09:14,050
computer and we arm has talked about

00:09:12,430 --> 00:09:15,430
this yesterday right like the software

00:09:14,050 --> 00:09:17,019
runs on someone else's computer they

00:09:15,430 --> 00:09:18,759
have the freedom to change it and to

00:09:17,019 --> 00:09:21,699
Pollin things but the users of that web

00:09:18,759 --> 00:09:23,410
service have nothing or very or very

00:09:21,699 --> 00:09:24,879
little not better that they would be

00:09:23,410 --> 00:09:25,959
proprietary for this certainly for the

00:09:24,879 --> 00:09:27,850
sake of the companies that are building

00:09:25,959 --> 00:09:28,839
them in the phone manufacturers they

00:09:27,850 --> 00:09:30,970
have all the freedoms that we care about

00:09:28,839 --> 00:09:32,949
but I think we need to recognize as a

00:09:30,970 --> 00:09:35,199
community that the users of both systems

00:09:32,949 --> 00:09:38,019
are almost universally and totally

00:09:35,199 --> 00:09:40,389
unfree and they're doing it in ways that

00:09:38,019 --> 00:09:50,370
provide freedom and benefits and freedom

00:09:40,389 --> 00:09:55,800
to themselves but not their users sorry

00:09:50,370 --> 00:09:55,800
technical issue here did that to me

00:10:01,079 --> 00:10:06,370
alright so I listened to that and I was

00:10:04,389 --> 00:10:08,699
shocked because I spent like maybe one

00:10:06,370 --> 00:10:12,160
third of my professional career fighting

00:10:08,699 --> 00:10:15,819
for the cloud to become free and

00:10:12,160 --> 00:10:19,569
available to everyone and they are just

00:10:15,819 --> 00:10:25,439
saying that we should not use it that

00:10:19,569 --> 00:10:29,790
that's not ever going to happen ever and

00:10:25,439 --> 00:10:32,889
on top of that the question is not

00:10:29,790 --> 00:10:34,839
whether or not if you're running the

00:10:32,889 --> 00:10:36,699
cloud it's okay

00:10:34,839 --> 00:10:39,790
you could be renting a small VM you

00:10:36,699 --> 00:10:42,819
could be renting a 1u server you could

00:10:39,790 --> 00:10:46,480
be owning that server putting it in the

00:10:42,819 --> 00:10:49,720
rack and then just doing colocation you

00:10:46,480 --> 00:10:51,819
can own the rack and in switches or the

00:10:49,720 --> 00:10:54,550
data center or even the power grid and

00:10:51,819 --> 00:10:57,339
production it can go on and on and on is

00:10:54,550 --> 00:11:00,730
of course you do have more freedom when

00:10:57,339 --> 00:11:02,649
you own all these things but it is not

00:11:00,730 --> 00:11:05,110
about it the question is whether or not

00:11:02,649 --> 00:11:07,500
you control the software that that's is

00:11:05,110 --> 00:11:13,850
powering your deployment online right

00:11:07,500 --> 00:11:19,550
and using non proprietary software

00:11:13,850 --> 00:11:25,009
is what is removing freedom at least I

00:11:19,550 --> 00:11:28,550
think so so owning or leasing the the

00:11:25,009 --> 00:11:32,500
the hosting infrastructure is just a

00:11:28,550 --> 00:11:37,160
question about managing your own costs

00:11:32,500 --> 00:11:39,560
having a VM a private cloud or a public

00:11:37,160 --> 00:11:41,750
cloud is also about managing your costs

00:11:39,560 --> 00:11:43,339
the important thing is what do you run

00:11:41,750 --> 00:11:51,220
on it and do you have the full control

00:11:43,339 --> 00:11:54,170
over it I believe in that way that the

00:11:51,220 --> 00:11:59,990
the FSF communication message is wrong

00:11:54,170 --> 00:12:03,139
and that they should aim at people not

00:11:59,990 --> 00:12:11,000
used proprietary clouds like Amazon

00:12:03,139 --> 00:12:13,310
Google Azure or digitalocean because

00:12:11,000 --> 00:12:22,519
these are all proprietary solution even

00:12:13,310 --> 00:12:24,920
though you can run the P on it so what

00:12:22,519 --> 00:12:28,389
you should aim at so it's a bit

00:12:24,920 --> 00:12:31,279
redundant so what you should aim at is

00:12:28,389 --> 00:12:34,790
avoiding vendor locking and being able

00:12:31,279 --> 00:12:37,459
to switch providers switching providers

00:12:34,790 --> 00:12:40,850
means that you have an open framework to

00:12:37,459 --> 00:12:43,069
do so and that you are able to use the

00:12:40,850 --> 00:12:47,149
same API to go from one provider to

00:12:43,069 --> 00:12:54,910
another and that is what OpenStack is

00:12:47,149 --> 00:12:58,370
all about the important thing is

00:12:54,910 --> 00:13:03,620
interrupts favorability if I can succeed

00:12:58,370 --> 00:13:05,029
in pronouncing it so that's what you see

00:13:03,620 --> 00:13:10,160
here on the screen is the OpenStack

00:13:05,029 --> 00:13:10,910
manifesto so I will I will say it out

00:13:10,160 --> 00:13:13,250
loud for you

00:13:10,910 --> 00:13:18,079
so OpenStack is a reliable cloud

00:13:13,250 --> 00:13:22,250
infrastructure with the mission to be

00:13:18,079 --> 00:13:25,190
big produced and to produce public and

00:13:22,250 --> 00:13:31,420
private cloud regardless of size

00:13:25,190 --> 00:13:34,820
and it needs to be massively scalable so

00:13:31,420 --> 00:13:39,560
the important thing here is ubiquitous

00:13:34,820 --> 00:13:43,120
in in terms of freedom because this way

00:13:39,560 --> 00:13:43,120
you can go from one provider to another

00:13:44,170 --> 00:13:52,220
so the key is in Interpol

00:13:47,200 --> 00:13:54,800
interoperability the OpenStack clients

00:13:52,220 --> 00:13:57,620
are tested to be always backward

00:13:54,800 --> 00:13:59,600
compatible meaning that you can use the

00:13:57,620 --> 00:14:04,790
latest version of the OpenStack client

00:13:59,600 --> 00:14:07,160
and still go to hosts on a service

00:14:04,790 --> 00:14:08,900
provider that is using a very old

00:14:07,160 --> 00:14:15,590
version of a bin stacked it this will

00:14:08,900 --> 00:14:17,330
continue to work the other thing the

00:14:15,590 --> 00:14:20,000
other meaning of that manifesto is that

00:14:17,330 --> 00:14:24,680
you are able to implement OpenStack by

00:14:20,000 --> 00:14:27,800
yourself and install it on Prem so you

00:14:24,680 --> 00:14:34,100
set up your own computers with OpenStack

00:14:27,800 --> 00:14:35,660
so that's at least the theory right the

00:14:34,100 --> 00:14:39,220
other thing is that with OpenStack you

00:14:35,660 --> 00:14:43,940
also do have all the features that are

00:14:39,220 --> 00:14:47,840
on the proprietary solutions you having

00:14:43,940 --> 00:14:51,050
encrypted volume auto scaling as a

00:14:47,840 --> 00:14:52,970
service and whatnot we used to say as a

00:14:51,050 --> 00:14:57,640
drug that OpenStack is project as a

00:14:52,970 --> 00:15:04,280
service because it's so rich in features

00:14:57,640 --> 00:15:10,880
so also the API is very clean and if you

00:15:04,280 --> 00:15:14,410
compare it to the AWS API I like it way

00:15:10,880 --> 00:15:18,740
more if you look at some some of the

00:15:14,410 --> 00:15:20,660
tools from Google it's just scary so in

00:15:18,740 --> 00:15:24,140
terms of just quality of the project I

00:15:20,660 --> 00:15:29,510
think it's really comparable and also

00:15:24,140 --> 00:15:32,890
you do have 12 region for Amazon for

00:15:29,510 --> 00:15:37,850
OpenStack providers you have 18 of them

00:15:32,890 --> 00:15:38,670
spread across 50 regions these are only

00:15:37,850 --> 00:15:42,030
the

00:15:38,670 --> 00:15:44,340
companies that registered into the

00:15:42,030 --> 00:15:47,220
OpenStack marketplace so if you go to

00:15:44,340 --> 00:15:51,720
OpenStack dog and click on marketplace a

00:15:47,220 --> 00:15:54,240
big cloud and then you see this map so

00:15:51,720 --> 00:15:56,430
for sure you will find a service

00:15:54,240 --> 00:16:01,920
provider that is next to you or next to

00:15:56,430 --> 00:16:06,210
your customer and then the next question

00:16:01,920 --> 00:16:11,660
is why should you use OpenStack and on

00:16:06,210 --> 00:16:17,370
debian and not on other distributions so

00:16:11,660 --> 00:16:20,940
other vendors are trying to sell a

00:16:17,370 --> 00:16:24,420
project to you most of the time they

00:16:20,940 --> 00:16:30,200
want also to sell some services around

00:16:24,420 --> 00:16:35,340
it the only operating system where I

00:16:30,200 --> 00:16:39,720
it's not the case is debian also I have

00:16:35,340 --> 00:16:42,900
to explain the reboot Andre Train

00:16:39,720 --> 00:16:47,820
marketing so on my my previous employer

00:16:42,900 --> 00:16:53,040
was guarantees me rent is had this

00:16:47,820 --> 00:16:55,980
solution for setting up OpenStack using

00:16:53,040 --> 00:16:59,010
a DVD that used to contain all the

00:16:55,980 --> 00:17:01,320
packages from from Ubuntu so they were

00:16:59,010 --> 00:17:05,690
able to do that because they had the

00:17:01,320 --> 00:17:11,430
Ubuntu license but as you may know

00:17:05,690 --> 00:17:14,070
Ubuntu even though is free software has

00:17:11,430 --> 00:17:16,430
a trademark issue which is on purpose

00:17:14,070 --> 00:17:18,780
blurred and especially for OpenStack

00:17:16,430 --> 00:17:21,500
meaning that if you want to make it a

00:17:18,780 --> 00:17:24,480
rivet chief without asking canonical

00:17:21,500 --> 00:17:26,580
then you have to remove everything that

00:17:24,480 --> 00:17:30,240
is related to you boot entrer you going

00:17:26,580 --> 00:17:33,380
to trademark for example you need to

00:17:30,240 --> 00:17:36,090
recompile every packages and

00:17:33,380 --> 00:17:38,460
if you see you wouldn't do even on the

00:17:36,090 --> 00:17:41,580
changelog version you have to remove the

00:17:38,460 --> 00:17:44,760
word Ubuntu therefore my my previous

00:17:41,580 --> 00:17:49,910
employer had to remove all the Ubuntu

00:17:44,760 --> 00:17:53,280
packages from the DVD distribution so

00:17:49,910 --> 00:17:56,340
there is no problem to do the rivets

00:17:53,280 --> 00:18:02,580
even Debian including with all the

00:17:56,340 --> 00:18:07,640
OpenStack packages and I believe that's

00:18:02,580 --> 00:18:07,640
also part of not being vendor locked in

00:18:08,000 --> 00:18:12,750
because you're not locked in with with a

00:18:10,530 --> 00:18:14,660
provider you could they be on and

00:18:12,750 --> 00:18:21,410
do a derivative issue if you don't like

00:18:14,660 --> 00:18:21,410
what we are doing the other thing is

00:18:22,100 --> 00:18:26,580
when I say Debian packages are always on

00:18:24,930 --> 00:18:31,260
the edge it means that we get the dates

00:18:26,580 --> 00:18:33,300
first that's the biggest number of

00:18:31,260 --> 00:18:35,760
packaged services inside inside

00:18:33,300 --> 00:18:39,240
OpenStack it has always been the case

00:18:35,760 --> 00:18:42,090
and I've been trying to do so to always

00:18:39,240 --> 00:18:46,380
have one or more services than what you

00:18:42,090 --> 00:18:49,350
saw on other distributions and the other

00:18:46,380 --> 00:18:54,260
thing is because of uploading to seed

00:18:49,350 --> 00:18:56,910
then we also get updates from

00:18:54,260 --> 00:19:04,010
dependencies earlier than other

00:18:56,910 --> 00:19:08,760
distributions so even though I maintain

00:19:04,010 --> 00:19:13,080
unofficial Debian backwards on the

00:19:08,760 --> 00:19:17,040
Debian dotnet domain name the work is

00:19:13,080 --> 00:19:19,050
still done in seed and like the great

00:19:17,040 --> 00:19:25,710
happens there so clearly there's some

00:19:19,050 --> 00:19:30,660
Python 3.7 graze that needs to happen so

00:19:25,710 --> 00:19:35,730
if you are a Python developer Debian is

00:19:30,660 --> 00:19:38,130
also a good choice and then there's the

00:19:35,730 --> 00:19:41,160
question of deploying OpenStack right so

00:19:38,130 --> 00:19:44,210
everybody knows that famously OpenStack

00:19:41,160 --> 00:19:44,210
isn't easy to deploy

00:19:44,250 --> 00:19:50,370
so since I started doing the dis

00:19:48,120 --> 00:19:54,120
packaging I've tried to make it as easy

00:19:50,370 --> 00:19:58,020
as possible the first thing was made

00:19:54,120 --> 00:20:01,080
with napkin screens so that you could

00:19:58,020 --> 00:20:05,130
just have easy questions to answer to

00:20:01,080 --> 00:20:08,659
set up your DBE access to rabbitmq

00:20:05,130 --> 00:20:12,809
messaging and these kind of things and

00:20:08,659 --> 00:20:15,770
then providing a proceeding library so

00:20:12,809 --> 00:20:18,929
that you can dude just cool a small

00:20:15,770 --> 00:20:25,490
function to do representing so that has

00:20:18,929 --> 00:20:30,150
been available for a few years since

00:20:25,490 --> 00:20:32,909
maybe stretch these screens on bothering

00:20:30,150 --> 00:20:38,720
at all any configuration management tool

00:20:32,909 --> 00:20:41,400
anymore it's it's safe and tested and

00:20:38,720 --> 00:20:46,350
the other thing which is a lot more

00:20:41,400 --> 00:20:51,690
recent is per pets so as you may notice

00:20:46,350 --> 00:20:57,650
that puppet OpenStack upstream software

00:20:51,690 --> 00:21:01,799
that deploys OpenStack for Red Hat and

00:20:57,650 --> 00:21:05,370
you've been to so I started in the

00:21:01,799 --> 00:21:08,940
beginning of spring to patch it to

00:21:05,370 --> 00:21:13,500
understand the beyond and now it's fully

00:21:08,940 --> 00:21:16,830
up streamed meaning that there is gating

00:21:13,500 --> 00:21:19,039
on upstream CI to make sure that you can

00:21:16,830 --> 00:21:23,490
install open stack using Debian packages

00:21:19,039 --> 00:21:29,340
and hopefully it won't break because of

00:21:23,490 --> 00:21:33,169
this CI so if you want to have bigger

00:21:29,340 --> 00:21:37,789
scale you can you can use these packages

00:21:33,169 --> 00:21:42,140
packages because these puppet modules I

00:21:37,789 --> 00:21:44,909
also package them in order to create

00:21:42,140 --> 00:21:47,659
bigger software which hopefully I will

00:21:44,909 --> 00:21:47,659
have time to explain

00:21:48,169 --> 00:21:56,140
so as I said

00:21:52,210 --> 00:21:58,780
earlier the other advantages that Debian

00:21:56,140 --> 00:22:04,180
is fully free and unlike what you get

00:21:58,780 --> 00:22:07,360
from other distributions my last another

00:22:04,180 --> 00:22:11,500
thing which I want another message I

00:22:07,360 --> 00:22:14,500
want to pass on is that if you are in

00:22:11,500 --> 00:22:18,340
the need of hosting and you decide to

00:22:14,500 --> 00:22:22,800
use the cloud then very much you should

00:22:18,340 --> 00:22:25,270
aim for somebody that uses OpenStack

00:22:22,800 --> 00:22:28,720
because by doing so you will grow the

00:22:25,270 --> 00:22:43,650
number of providers and it's going to

00:22:28,720 --> 00:22:46,990
help the ecosystem so my own effort into

00:22:43,650 --> 00:22:51,360
making the cloud free is working on

00:22:46,990 --> 00:22:54,730
OpenStack on Debian and making it too

00:22:51,360 --> 00:23:04,660
available for everyone and in a way so

00:22:54,730 --> 00:23:10,140
that it's easy to use and deploy so I'm

00:23:04,660 --> 00:23:13,330
I'm trying to make it OpenStack

00:23:10,140 --> 00:23:17,170
so my goal is that OpenStack on Debian

00:23:13,330 --> 00:23:21,480
is the best solution for unprimed clouds

00:23:17,170 --> 00:23:25,420
I hope one day we will have bike sheds

00:23:21,480 --> 00:23:32,320
so that it could be back box could be

00:23:25,420 --> 00:23:36,310
shipped into a more official way than

00:23:32,320 --> 00:23:38,890
the viendo net domain the other thing is

00:23:36,310 --> 00:23:40,720
OpenStack that I worked on and the last

00:23:38,890 --> 00:23:44,710
thing is the glue between all of that

00:23:40,720 --> 00:23:49,180
which is OpenStack cloud installer which

00:23:44,710 --> 00:23:50,200
I'm currently working on so the short

00:23:49,180 --> 00:23:55,330
name would be OCIE

00:23:50,200 --> 00:23:59,110
so I'm not going to do a full

00:23:55,330 --> 00:24:02,050
demonstration of it but because that's

00:23:59,110 --> 00:24:03,820
probably not not very useful I think

00:24:02,050 --> 00:24:04,790
it's best that I just explain what it

00:24:03,820 --> 00:24:10,490
does

00:24:04,790 --> 00:24:12,860
so what you see here is a VM but because

00:24:10,490 --> 00:24:18,470
I use it for my development but he could

00:24:12,860 --> 00:24:24,850
as well run on bare metal so that DM

00:24:18,470 --> 00:24:29,290
does DHCP exe and so on so that you can

00:24:24,850 --> 00:24:29,290
network boot VMs

00:24:29,600 --> 00:24:39,830
these VMs are booting onto a Debian life

00:24:35,180 --> 00:24:44,900
system produced with live build inside

00:24:39,830 --> 00:24:47,450
that live image there's an agent which

00:24:44,900 --> 00:24:51,440
is very very tiny written in initial

00:24:47,450 --> 00:24:56,860
script that reports back to that server

00:24:51,440 --> 00:25:00,680
that you see here and so that the the

00:24:56,860 --> 00:25:03,500
the bare metal machines can report what

00:25:00,680 --> 00:25:05,780
what their characteristics are so how

00:25:03,500 --> 00:25:08,630
much memory how much hard drive

00:25:05,780 --> 00:25:12,710
what's the interfaces their MAC address

00:25:08,630 --> 00:25:16,220
and speed and so on ok so then after

00:25:12,710 --> 00:25:19,400
that you have you do have a list of VMs

00:25:16,220 --> 00:25:26,060
that are booted over DHCP and there are

00:25:19,400 --> 00:25:28,340
serial numbers so once you've got a few

00:25:26,060 --> 00:25:32,710
machines then you can start your

00:25:28,340 --> 00:25:38,060
deployment to do that you got to define

00:25:32,710 --> 00:25:45,530
networks so you can define one I don't

00:25:38,060 --> 00:25:47,710
know one for volume ok as I need an IP

00:25:45,530 --> 00:25:47,710
address

00:25:51,379 --> 00:25:58,889
then you have rolls on your machines

00:25:55,849 --> 00:26:02,309
that you can you can add some custom

00:25:58,889 --> 00:26:04,200
ones these are the defaults and then

00:26:02,309 --> 00:26:07,369
finally you define your clusters so here

00:26:04,200 --> 00:26:12,919
there's a one cluster which I already

00:26:07,369 --> 00:26:15,570
made and when you when you click on it

00:26:12,919 --> 00:26:21,659
on that already existing cluster then

00:26:15,570 --> 00:26:23,070
you see a bit more so it's it's not very

00:26:21,659 --> 00:26:24,450
nice because the resolution is a little

00:26:23,070 --> 00:26:26,999
bit too small I'm sorry for that

00:26:24,450 --> 00:26:29,940
so at the bottom you see available

00:26:26,999 --> 00:26:33,059
machines which use also so on the first

00:26:29,940 --> 00:26:37,009
screen that you can add to your cluster

00:26:33,059 --> 00:26:39,869
and then they are numbered automatically

00:26:37,009 --> 00:26:43,070
and according to the network I've added

00:26:39,869 --> 00:26:47,129
to the cluster then the IPS are added

00:26:43,070 --> 00:26:50,279
automatically as well and then here you

00:26:47,129 --> 00:26:55,559
see the real IP for the cluster so that

00:26:50,279 --> 00:27:01,440
you can share one IP in H a mode on

00:26:55,559 --> 00:27:04,950
these two machines so these this is just

00:27:01,440 --> 00:27:09,809
to define roles and eyepiece for the

00:27:04,950 --> 00:27:13,080
machines there is no big install the

00:27:09,809 --> 00:27:16,049
cluster button but that's I will edit

00:27:13,080 --> 00:27:19,259
some Sunday in the meantime you can just

00:27:16,049 --> 00:27:20,609
click the install button so what's going

00:27:19,259 --> 00:27:26,899
to happen when when you click the

00:27:20,609 --> 00:27:31,789
install button so first it's going to

00:27:26,899 --> 00:27:38,789
create some puppet certificate into the

00:27:31,789 --> 00:27:42,299
DHCP PXE server and copy it into the

00:27:38,789 --> 00:27:46,639
live system so that it's ready for

00:27:42,299 --> 00:27:51,779
installation then it's going to run

00:27:46,639 --> 00:27:54,629
OpenStack Debian images to install on on

00:27:51,779 --> 00:27:55,680
bare metal system using the bootstrap

00:27:54,629 --> 00:28:01,560
and

00:27:55,680 --> 00:28:04,560
not and once that's done this ever will

00:28:01,560 --> 00:28:08,310
reboot it will already be prepared for

00:28:04,560 --> 00:28:12,000
pipettes it has a roll and then when it

00:28:08,310 --> 00:28:17,120
boots up then it puppet agent will

00:28:12,000 --> 00:28:20,190
contact this server and this error has

00:28:17,120 --> 00:28:23,810
ENC for the people who knows a pipette

00:28:20,190 --> 00:28:27,620
that's an external node classifier so

00:28:23,810 --> 00:28:33,060
that the server will be able to tell

00:28:27,620 --> 00:28:35,580
puppet agent what services to install so

00:28:33,060 --> 00:28:39,330
that's where I'm up to right now

00:28:35,580 --> 00:28:42,930
I have the packages I have pipette I

00:28:39,330 --> 00:28:45,840
have this bare metal installer and now

00:28:42,930 --> 00:28:50,100
what's missing is composing the services

00:28:45,840 --> 00:28:52,260
but I think that's fairly easy compared

00:28:50,100 --> 00:28:54,930
to the rest of the world that I've done

00:28:52,260 --> 00:28:56,940
already on this so hopefully this will

00:28:54,930 --> 00:29:01,490
be ready for Buster so that we have a

00:28:56,940 --> 00:29:04,290
point-and-click instead of organ stack I

00:29:01,490 --> 00:29:09,330
think that's it so this was my

00:29:04,290 --> 00:29:16,050
presentation I'm open for questions so

00:29:09,330 --> 00:29:18,210
yeah so finally before I end so this

00:29:16,050 --> 00:29:21,450
software and all I've been doing over

00:29:18,210 --> 00:29:25,160
the last seven years is my way to fight

00:29:21,450 --> 00:29:30,660
against proprietary cloud software and

00:29:25,160 --> 00:29:32,250
so which is why I wanted to to do this

00:29:30,660 --> 00:29:34,500
talk is because I was very frustrated

00:29:32,250 --> 00:29:39,600
about the way the FSF was doing things

00:29:34,500 --> 00:29:43,080
and I found it very frustrating to

00:29:39,600 --> 00:29:45,960
invest so much work to do to try to

00:29:43,080 --> 00:29:48,830
liberate the cloud and having the FSF be

00:29:45,960 --> 00:29:51,590
doing a very counterproductive message

00:29:48,830 --> 00:29:55,560
okay thank you

00:29:51,590 --> 00:29:55,560
[Applause]

00:29:56,669 --> 00:30:03,720
is there any question yeah there's only

00:30:01,269 --> 00:30:03,720
one mic

00:30:08,210 --> 00:30:13,950
so is this software that you just

00:30:10,800 --> 00:30:16,950
presented available in Debian or is it

00:30:13,950 --> 00:30:19,650
in the new queue like I mean this

00:30:16,950 --> 00:30:21,360
solution that you just saw

00:30:19,650 --> 00:30:25,740
kind of you have a version in Debian

00:30:21,360 --> 00:30:28,830
which is one month old but it's in salsa

00:30:25,740 --> 00:30:33,870
okay so you can build it if you want it

00:30:28,830 --> 00:30:35,640
comes together with a so this is um yeah

00:30:33,870 --> 00:30:37,770
the other thing is it's very ugly right

00:30:35,640 --> 00:30:40,590
now so you please don't pay attention to

00:30:37,770 --> 00:30:45,050
the GUI I will probably give it to some

00:30:40,590 --> 00:30:45,050
designers ok I'm not I'm not a gue guy

00:30:45,380 --> 00:30:54,240
it comes with a package which is called

00:30:49,880 --> 00:30:57,660
OpenStack cluster installer - pot like

00:30:54,240 --> 00:31:00,630
POC so you can install the POC package

00:30:57,660 --> 00:31:04,320
in your bare metal machine and then it

00:31:00,630 --> 00:31:06,060
spawns some VMs so that's that's the way

00:31:04,320 --> 00:31:09,330
I do my development so if you want to

00:31:06,060 --> 00:31:11,040
participate to it then you can just use

00:31:09,330 --> 00:31:13,020
the pack and then it's very easy to

00:31:11,040 --> 00:31:16,920
setup the only thing is that it's quite

00:31:13,020 --> 00:31:21,200
demanding in terms of resources so I

00:31:16,920 --> 00:31:25,080
have a 128 gig of ram ever to turn that

00:31:21,200 --> 00:31:27,620
probably you could downsize it I'm not

00:31:25,080 --> 00:31:30,510
sure that you I will be the most

00:31:27,620 --> 00:31:32,430
important thing especially as something

00:31:30,510 --> 00:31:41,210
like these tools to start machines will

00:31:32,430 --> 00:31:44,700
be also with an API so you can you can

00:31:41,210 --> 00:31:46,800
push machines into the clusters in fact

00:31:44,700 --> 00:31:49,470
everything you saw there you can do it

00:31:46,800 --> 00:31:53,580
with API ok it's kind of not really a

00:31:49,470 --> 00:31:56,630
REST API because it's not rest addresses

00:31:53,580 --> 00:31:56,630
but like whose parameters

00:32:05,840 --> 00:32:15,060
suppose the several degrees the in in

00:32:10,890 --> 00:32:19,190
one centralized version is a way to

00:32:15,060 --> 00:32:19,190
achieve this independent

00:32:20,280 --> 00:32:29,560
we do have back ports of every OpenStack

00:32:25,540 --> 00:32:37,690
release to the whatever is the current

00:32:29,560 --> 00:32:42,430
releases so there's what Mitaka Newton

00:32:37,690 --> 00:32:45,940
pea whatever available concern is about

00:32:42,430 --> 00:32:50,590
her usage upgrades yeah

00:32:45,940 --> 00:32:54,970
OpenStack Pershing and ones new the best

00:32:50,590 --> 00:33:00,160
table wrists and say how to phenom ho

00:32:54,970 --> 00:33:02,410
jump to new release so yeah with

00:33:00,160 --> 00:33:05,680
OpenStack you cannot upgrade from one

00:33:02,410 --> 00:33:10,320
version to another because the DB

00:33:05,680 --> 00:33:13,570
migration scripts imports the code of

00:33:10,320 --> 00:33:16,120
whatever service we are talking about so

00:33:13,570 --> 00:33:20,050
we can only jump from one version to the

00:33:16,120 --> 00:33:22,000
next because I've I've used a pipette

00:33:20,050 --> 00:33:25,750
OpenStack normally upgrades are

00:33:22,000 --> 00:33:29,140
supported I'm not planning on managing

00:33:25,750 --> 00:33:33,430
upgrades on my software so if you want

00:33:29,140 --> 00:33:36,640
to do it to do the upgrades you will

00:33:33,430 --> 00:33:40,530
probably need to do some manual pipette

00:33:36,640 --> 00:33:40,530
tweaking stuff I'm not sure yet

00:33:43,350 --> 00:33:46,560
anyone else

00:33:52,980 --> 00:33:59,110
have you took the idea of make up your

00:33:55,690 --> 00:34:07,480
plane of something like open cloud pure

00:33:59,110 --> 00:34:11,970
plan from the VM so what I'm looking

00:34:07,480 --> 00:34:14,909
forward to have is the bike sheds no the

00:34:11,970 --> 00:34:20,320
Libyan way to do PPAs

00:34:14,909 --> 00:34:22,870
and better half that and just a pure

00:34:20,320 --> 00:34:27,399
blend and not sure Blaine would be

00:34:22,870 --> 00:34:33,310
useful because I mean pure blends are to

00:34:27,399 --> 00:34:40,210
be able to install like I don't know DB

00:34:33,310 --> 00:34:41,860
only you with di right you could do that

00:34:40,210 --> 00:34:44,950
with OpenStack but I'm not sure it will

00:34:41,860 --> 00:34:46,659
make sense because what you want to do

00:34:44,950 --> 00:34:49,510
is be able to deploy a food cluster

00:34:46,659 --> 00:35:02,610
automatically you don't really want to

00:34:49,510 --> 00:35:07,170
do it by hand do you do you think that

00:35:02,610 --> 00:35:10,450
when this will be released it would be

00:35:07,170 --> 00:35:14,770
easier to set up an OpenStack

00:35:10,450 --> 00:35:20,700
environment OpenStack is very it's very

00:35:14,770 --> 00:35:24,220
complicated and Ubuntu sells proprietary

00:35:20,700 --> 00:35:28,810
solutions because paying it's more

00:35:24,220 --> 00:35:32,160
simple to do but for a smaller stacks

00:35:28,810 --> 00:35:35,470
and now it's quite difficult to set up

00:35:32,160 --> 00:35:40,030
an openstack solution so that's very

00:35:35,470 --> 00:35:41,920
much my goal to what I aim with this

00:35:40,030 --> 00:35:43,350
software is to be able to address

00:35:41,920 --> 00:35:47,840
[Music]

00:35:43,350 --> 00:35:51,510
people willing to do a quick deployment

00:35:47,840 --> 00:35:59,100
on-prem probably to test and try

00:35:51,510 --> 00:36:02,940
OpenStack I'm not sure it's can I say if

00:35:59,100 --> 00:36:04,410
you want to have fully working OpenStack

00:36:02,940 --> 00:36:06,690
for a long time you also need the

00:36:04,410 --> 00:36:09,650
knowledge right if you are not capable

00:36:06,690 --> 00:36:12,120
of setting it up by hand yourself

00:36:09,650 --> 00:36:16,350
probably you also won't be able to

00:36:12,120 --> 00:36:19,860
maintain it okay having a software to do

00:36:16,350 --> 00:36:21,840
just and install is super cool so that

00:36:19,860 --> 00:36:27,540
you can have automation to do the

00:36:21,840 --> 00:36:29,310
installation it's nice to have it for

00:36:27,540 --> 00:36:32,010
people who are newbies and just want to

00:36:29,310 --> 00:36:39,350
try trade at home but it doesn't replace

00:36:32,010 --> 00:36:43,530
knowledge two questions the first one is

00:36:39,350 --> 00:36:46,500
which framework or languages using OC I

00:36:43,530 --> 00:36:49,440
like this item PHP power

00:36:46,500 --> 00:36:56,390
yeah that's written in PHP is okay and

00:36:49,440 --> 00:36:56,390
the second is why not like reuse 302

00:36:59,300 --> 00:37:06,750
I've tried to make it as small and easy

00:37:04,050 --> 00:37:08,640
to maintain as possible which I don't

00:37:06,750 --> 00:37:11,550
think fits all the definition of triple

00:37:08,640 --> 00:37:15,750
oh it's like triple o is made by eighty

00:37:11,550 --> 00:37:18,810
engineers and it still have lots of

00:37:15,750 --> 00:37:22,110
trouble it makes sense when you say this

00:37:18,810 --> 00:37:25,140
is for like modern clothes I hope I hope

00:37:22,110 --> 00:37:29,040
to use it in my novel maniac like for

00:37:25,140 --> 00:37:33,930
our for our deployments and I'm not sure

00:37:29,040 --> 00:37:39,690
what we can call small like having a few

00:37:33,930 --> 00:37:42,120
hundred nodes like OpenStack becomes

00:37:39,690 --> 00:37:44,330
very tricky after this type of scales

00:37:42,120 --> 00:37:44,330
right

00:37:52,910 --> 00:37:58,970
Thomas could you go to that slide that

00:37:55,370 --> 00:38:01,220
showed the benefits of Debian not having

00:37:58,970 --> 00:38:03,940
the vendor lock-in and those kinds of

00:38:01,220 --> 00:38:03,940
points

00:38:21,270 --> 00:38:25,619
I'm not sure what I'm not sure water

00:38:27,090 --> 00:38:33,460
it's one of those in there

00:38:30,210 --> 00:38:34,900
it's a vendor lock-in yes so I was

00:38:33,460 --> 00:38:38,470
thinking about the way you're framing

00:38:34,900 --> 00:38:47,460
this as a your concern about the way the

00:38:38,470 --> 00:38:47,460
FSS was criticizing cloud and yes let me

00:38:47,920 --> 00:38:52,960
[Music]

00:38:49,500 --> 00:38:57,070
seems like there are two different kinds

00:38:52,960 --> 00:38:59,980
of problems like there is a problem that

00:38:57,070 --> 00:39:04,030
the masses of the world are locked into

00:38:59,980 --> 00:39:07,330
as clients of servers they have no

00:39:04,030 --> 00:39:09,580
control over and their data has is not

00:39:07,330 --> 00:39:10,950
in their control and their access is not

00:39:09,580 --> 00:39:14,440
in their control these kinds of issues

00:39:10,950 --> 00:39:16,930
and so that's the I see that is the

00:39:14,440 --> 00:39:18,820
criticism about the cloud and it also

00:39:16,930 --> 00:39:20,530
applies to administrators you know do

00:39:18,820 --> 00:39:22,240
you have control over your machines that

00:39:20,530 --> 00:39:24,190
you're providing for your clients it's

00:39:22,240 --> 00:39:28,170
pretty easy was my cookies about yes

00:39:24,190 --> 00:39:32,410
yeah so it seems like I think the FSF

00:39:28,170 --> 00:39:34,810
criticism is still valid and true and I

00:39:32,410 --> 00:39:36,609
hear what you're saying is just let's

00:39:34,810 --> 00:39:39,520
make it if we're going to have a cloud

00:39:36,609 --> 00:39:42,339
that's do it right yep and their message

00:39:39,520 --> 00:39:45,490
is blurred yeah saying that it's just

00:39:42,339 --> 00:39:47,349
cloud and they are not saying please

00:39:45,490 --> 00:39:52,060
choose the correct cloud which is what I

00:39:47,349 --> 00:39:55,210
believe they should say yeah it's

00:39:52,060 --> 00:39:56,710
important to parse out there's different

00:39:55,210 --> 00:39:59,530
parts of it rather than just thinking of

00:39:56,710 --> 00:40:01,599
it as you're saying FSF is wrong it's

00:39:59,530 --> 00:40:02,349
more like okay we do have a cloud how do

00:40:01,599 --> 00:40:06,040
we do it right

00:40:02,349 --> 00:40:07,359
I'm 100% wisdom in fact and and I just

00:40:06,040 --> 00:40:09,990
I'm they are doing a counterproductive

00:40:07,359 --> 00:40:09,990
message

00:40:13,940 --> 00:40:29,090
any anyone else all right thank you then

00:40:22,850 --> 00:40:29,090

YouTube URL: https://www.youtube.com/watch?v=rJ8lHJAz10Q


