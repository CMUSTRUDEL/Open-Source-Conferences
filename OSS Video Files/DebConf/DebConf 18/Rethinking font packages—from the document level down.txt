Title: Rethinking font packages—from the document level down
Publication date: 2018-08-01
Playlist: DebConf 18
Description: 
	by Nathan Willis

At: DebConf18
https://debconf18.debconf.org/talks/30-rethinking-font-packagesfrom-the-document-level-down/

Now that libre fonts are widely available through projects like Google Fonts and Open Font Library, what's next for free-software typography? 

Font selection and access for users relies on support from the entire operating system stack. Our font packages, however, are still structured like command-line applications. Documentation and supplemental data are not integrated with system or application-layer help frameworks. Metadata is not tracked by the desktop environment as it is for other content types. The OS provides little to no help for users downloading fonts online or simply maintaining a large library.

We can make improvements to how fonts are packaged and how font metadata is handled throughout the OS that will make it easier for application developers to create font managers or to provide richer experiences for finding and choosing fonts in GUI applications—including those that use custom widgets, as design applications often do. 

Designers and authors, who make the most use of fonts on a day-to-day basis, will gain from these improvements first. But the same changes that simplify life for users whose daily work involves their font library will benefit others. Enhancing font packaging will improve the experience for translators and internationalization projects, simplify the build process for Debian and downstream developers, and reduce the number of bugs caused by the peculiarities of font licensing.

This talk will cover proposed changes to the contents and policy of font packages as well as in-progress work on improving font support in AppStream and other metadata tools, software centers, and package managers. It will address upcoming changes to SPDX to better support font-licensing details like Reserved Font Names (RFNs) and how those changes will affect license-compliance work, and it will look at the possibilities of integrating a Debian desktop with online font libraries and services.

Room: Xueshan (雪山)
Scheduled start: 2018-07-31 17:30:00
Captions: 
	00:00:04,830 --> 00:00:11,530
so we're actually starting now okay

00:00:08,130 --> 00:00:15,129
usually I like to to begin by asking if

00:00:11,530 --> 00:00:18,250
there's anyone who speaks polish in the

00:00:15,129 --> 00:00:20,110
audience I guess not okay well it might

00:00:18,250 --> 00:00:24,220
come up later but we'll just power on

00:00:20,110 --> 00:00:28,150
through so this talks entitled

00:00:24,220 --> 00:00:29,380
rethinking font packages and it's it's

00:00:28,150 --> 00:00:33,640
rethinking only if you've thought about

00:00:29,380 --> 00:00:38,230
font packages in the past and in

00:00:33,640 --> 00:00:40,120
particular the subtitle here is from the

00:00:38,230 --> 00:00:41,289
document down and the document part is

00:00:40,120 --> 00:00:44,260
the thing that I actually wanted to talk

00:00:41,289 --> 00:00:46,149
about is actually my second dip comp is

00:00:44,260 --> 00:00:47,890
the first one where I've said anything

00:00:46,149 --> 00:00:50,350
and it's because I have been thinking

00:00:47,890 --> 00:00:52,870
about this font packaging issue for a

00:00:50,350 --> 00:00:55,870
while but first before we get into that

00:00:52,870 --> 00:00:57,940
a little initial tangent just to set

00:00:55,870 --> 00:01:00,010
some context if I look familiar to you

00:00:57,940 --> 00:01:02,559
it's because I spent about 15 years

00:01:00,010 --> 00:01:04,660
being a foster nough list most recently

00:01:02,559 --> 00:01:06,970
with lwn which is still where you should

00:01:04,660 --> 00:01:08,920
get your news about a free software and

00:01:06,970 --> 00:01:11,500
open source I still sort of think of

00:01:08,920 --> 00:01:12,909
myself as as it being a part-time

00:01:11,500 --> 00:01:14,380
contributor there even though it's been

00:01:12,909 --> 00:01:18,130
ages since I've actually contributed

00:01:14,380 --> 00:01:20,890
something but about two years ago I left

00:01:18,130 --> 00:01:21,909
to go study typeface design in England

00:01:20,890 --> 00:01:23,320
at the University of Reading which is

00:01:21,909 --> 00:01:25,630
one of the few places where they teach

00:01:23,320 --> 00:01:27,009
that that course lasted through

00:01:25,630 --> 00:01:30,759
September of 2017

00:01:27,009 --> 00:01:32,890
and after that I started consulting at

00:01:30,759 --> 00:01:35,820
least in theory on typographic related

00:01:32,890 --> 00:01:38,590
things so you know if you need help with

00:01:35,820 --> 00:01:41,530
OpenType or unicode or one of those

00:01:38,590 --> 00:01:44,079
things come see me I suppose but I got

00:01:41,530 --> 00:01:45,970
some contracts but decided I didn't want

00:01:44,079 --> 00:01:48,250
to try and fill every waking hour with

00:01:45,970 --> 00:01:50,320
that sort of work and instead they made

00:01:48,250 --> 00:01:53,380
a list of other things I could do with

00:01:50,320 --> 00:01:56,850
my free time that that dealt with fonts

00:01:53,380 --> 00:01:59,290
and type in the free software world and

00:01:56,850 --> 00:02:02,590
there's a lot of those everything from

00:01:59,290 --> 00:02:04,600
from actual design work to document

00:02:02,590 --> 00:02:06,070
templates and what we ship with air

00:02:04,600 --> 00:02:08,140
fonts and that sort of thing but the one

00:02:06,070 --> 00:02:10,240
I kept coming back to was this big

00:02:08,140 --> 00:02:12,430
disconnect between how people in the

00:02:10,240 --> 00:02:13,930
design field work with their font

00:02:12,430 --> 00:02:15,160
collection and the way we work with our

00:02:13,930 --> 00:02:17,920
font collection on Linux

00:02:15,160 --> 00:02:19,570
that's because for that year that I was

00:02:17,920 --> 00:02:22,360
in reading I spent a lot of time around

00:02:19,570 --> 00:02:23,620
graphic designers and book designers and

00:02:22,360 --> 00:02:26,350
information designers and I got to see

00:02:23,620 --> 00:02:29,140
how they work firsthand and how they

00:02:26,350 --> 00:02:31,930
select fonts a particular and I think

00:02:29,140 --> 00:02:35,320
that as far as the the font plumbing

00:02:31,930 --> 00:02:37,780
goes if we were to examine how things

00:02:35,320 --> 00:02:39,730
are set up from the workflow or through

00:02:37,780 --> 00:02:41,170
the lens of the workflow that people of

00:02:39,730 --> 00:02:43,030
this profession you use we'd end up with

00:02:41,170 --> 00:02:46,000
something really different than the way

00:02:43,030 --> 00:02:47,680
it is currently configured and if you

00:02:46,000 --> 00:02:49,060
want proof of that just consider the

00:02:47,680 --> 00:02:51,340
fact that free software fonts on

00:02:49,060 --> 00:02:53,830
services like Google Fonts just dominate

00:02:51,340 --> 00:02:56,230
the web it's trillions and trillions of

00:02:53,830 --> 00:02:58,450
hits but they don't really make a big

00:02:56,230 --> 00:03:00,220
dent anywhere else and not a lot of

00:02:58,450 --> 00:03:03,120
people are using desktop Linux

00:03:00,220 --> 00:03:05,980
distributions to do typographic work so

00:03:03,120 --> 00:03:07,690
for the purposes of this talk I'm gonna

00:03:05,980 --> 00:03:09,550
sort of walk through that workflow that

00:03:07,690 --> 00:03:11,830
I thought I got to see firsthand from

00:03:09,550 --> 00:03:13,750
people and then we'll talk about where

00:03:11,830 --> 00:03:15,630
it doesn't match what desktop system to

00:03:13,750 --> 00:03:18,820
do today and then finally we'll get into

00:03:15,630 --> 00:03:21,010
how that affects font packaging because

00:03:18,820 --> 00:03:23,560
that's one of the big contributions that

00:03:21,010 --> 00:03:26,080
the Debian project has on desktop font

00:03:23,560 --> 00:03:28,000
architecture is Debian and Debbie and

00:03:26,080 --> 00:03:30,160
derivatives provide the vast majority of

00:03:28,000 --> 00:03:34,330
the packaged fonts to desktop Linux

00:03:30,160 --> 00:03:36,220
users so right into Fantasyland it

00:03:34,330 --> 00:03:39,160
starts here the user is working on a

00:03:36,220 --> 00:03:40,870
document okay and in fact it's a

00:03:39,160 --> 00:03:43,510
particular document which is an

00:03:40,870 --> 00:03:45,670
important specific point to note because

00:03:43,510 --> 00:03:50,880
each specific project alters something

00:03:45,670 --> 00:03:53,830
and whatever that particular document is

00:03:50,880 --> 00:03:57,130
it's it's gonna set the constraints that

00:03:53,830 --> 00:03:58,690
follow and in this case let's pretend

00:03:57,130 --> 00:04:00,459
that it's the annual report for your

00:03:58,690 --> 00:04:03,130
project and it's a large project so you

00:04:00,459 --> 00:04:05,350
care about daniel report make the genome

00:04:03,130 --> 00:04:07,000
foundation or I don't know open stack or

00:04:05,350 --> 00:04:09,280
some enormous project like that you

00:04:07,000 --> 00:04:12,100
might show this document to people that

00:04:09,280 --> 00:04:16,209
you hope to get resources from so you

00:04:12,100 --> 00:04:18,940
get to do a write and I think the thing

00:04:16,209 --> 00:04:20,320
to keep in mind is that the context the

00:04:18,940 --> 00:04:22,690
document is the context in which all

00:04:20,320 --> 00:04:24,160
further decisions are made and a lot of

00:04:22,690 --> 00:04:25,720
the workflow descriptions I've seen

00:04:24,160 --> 00:04:27,640
about selecting fonts sort of leave that

00:04:25,720 --> 00:04:29,380
out they just say these are selecting a

00:04:27,640 --> 00:04:32,470
fonts and I think that between a

00:04:29,380 --> 00:04:34,120
Ali and these constraints that are

00:04:32,470 --> 00:04:36,220
requirements and restrictions on what

00:04:34,120 --> 00:04:36,790
you can and can't do and conditions need

00:04:36,220 --> 00:04:38,620
to meet

00:04:36,790 --> 00:04:40,720
so which prosthetic system which are

00:04:38,620 --> 00:04:42,640
technical that really determines

00:04:40,720 --> 00:04:45,760
everything that follows so in this case

00:04:42,640 --> 00:04:47,260
our annual report we're gonna say we're

00:04:45,760 --> 00:04:50,350
gonna typeset it this year in English

00:04:47,260 --> 00:04:51,790
and Persian we also need to have a few

00:04:50,350 --> 00:04:53,140
words in Spanish and German like let's

00:04:51,790 --> 00:04:55,570
say there's some names that we need to

00:04:53,140 --> 00:04:56,920
do so it won't be long stretches but we

00:04:55,570 --> 00:04:59,380
need to make sure the right accent marks

00:04:56,920 --> 00:05:01,330
and special characters are there and

00:04:59,380 --> 00:05:03,220
remember it's going to look good to

00:05:01,330 --> 00:05:05,080
people who eat a lot and who will toss

00:05:03,220 --> 00:05:06,850
it aside if it looks unprofessional so

00:05:05,080 --> 00:05:09,910
when we say it's gonna set English and

00:05:06,850 --> 00:05:12,580
Persian it needs to look balanced and it

00:05:09,910 --> 00:05:14,740
has section titles and has images with

00:05:12,580 --> 00:05:16,060
captions and has tables of things and

00:05:14,740 --> 00:05:18,520
all those pieces need to look like they

00:05:16,060 --> 00:05:20,890
were done correctly okay so what is the

00:05:18,520 --> 00:05:23,590
workflow we use well we open the font

00:05:20,890 --> 00:05:24,670
manager and if you do a lot of document

00:05:23,590 --> 00:05:26,860
creation you probably have a lot of

00:05:24,670 --> 00:05:30,640
fonts installed a couple hundred maybe

00:05:26,860 --> 00:05:31,840
hopefully they're good ones and and the

00:05:30,640 --> 00:05:33,550
first thing we want to do is search for

00:05:31,840 --> 00:05:37,570
fonts that support those design

00:05:33,550 --> 00:05:39,790
languages mainly Arabic and English and

00:05:37,570 --> 00:05:41,470
when we say that we search for these

00:05:39,790 --> 00:05:43,390
things to be designed together that's

00:05:41,470 --> 00:05:44,830
because they need to look write it

00:05:43,390 --> 00:05:46,120
together on the page you can't have one

00:05:44,830 --> 00:05:48,850
of them look a lot darker than the other

00:05:46,120 --> 00:05:50,740
you can't have the lines be off and if

00:05:48,850 --> 00:05:53,260
you pick a font where the Latin and the

00:05:50,740 --> 00:05:54,670
Arabic were designed together you don't

00:05:53,260 --> 00:05:56,770
have to spend every waking hour making

00:05:54,670 --> 00:05:59,860
my needed adjustments to the line

00:05:56,770 --> 00:06:03,490
spacing you can't have things be

00:05:59,860 --> 00:06:06,400
different optical sizes so that one

00:06:03,490 --> 00:06:08,310
paragraph takes up much larger vertical

00:06:06,400 --> 00:06:11,230
space and the other that sort of thing

00:06:08,310 --> 00:06:12,880
what happens unfortunately we don't have

00:06:11,230 --> 00:06:16,180
a billion choices when we set those

00:06:12,880 --> 00:06:17,500
constraints we might find several let's

00:06:16,180 --> 00:06:19,690
say several dozen fonts that have

00:06:17,500 --> 00:06:20,770
English and Arabic together but all of

00:06:19,690 --> 00:06:22,090
them or most of them are gonna be

00:06:20,770 --> 00:06:24,640
missing something like they don't have

00:06:22,090 --> 00:06:28,300
the asset or they don't have the till

00:06:24,640 --> 00:06:29,470
the over the end or they are Arabic but

00:06:28,300 --> 00:06:30,820
they're designed to support the Arabic

00:06:29,470 --> 00:06:35,110
language not Persian which is a

00:06:30,820 --> 00:06:36,520
different style yeah and by the way half

00:06:35,110 --> 00:06:37,810
of them are really funky display types

00:06:36,520 --> 00:06:39,490
they're not for setting text so they

00:06:37,810 --> 00:06:41,440
look like graffiti or a bunch of

00:06:39,490 --> 00:06:42,370
balloons or a retro video game or

00:06:41,440 --> 00:06:43,930
something like that

00:06:42,370 --> 00:06:46,510
but this is just the start of the

00:06:43,930 --> 00:06:48,610
process it's not a problem yet the next

00:06:46,510 --> 00:06:50,500
thing we do is filter those fonts that

00:06:48,610 --> 00:06:52,600
we have left for things that have the

00:06:50,500 --> 00:06:54,430
variations that we need so we need some

00:06:52,600 --> 00:06:56,440
italics we need some weight maybe just a

00:06:54,430 --> 00:06:58,120
bowl maybe more than one and we want

00:06:56,440 --> 00:06:59,470
those optical sizes because we need to

00:06:58,120 --> 00:07:00,910
have image captions which are really

00:06:59,470 --> 00:07:03,490
really small and we need to have titles

00:07:00,910 --> 00:07:05,710
which would really really be back to

00:07:03,490 --> 00:07:08,320
reality the number of alternative drops

00:07:05,710 --> 00:07:09,820
obviously when we do this now we think

00:07:08,320 --> 00:07:11,440
to ourselves at this point we could

00:07:09,820 --> 00:07:14,139
start giving things up right we could

00:07:11,440 --> 00:07:15,729
say we'll just use a different font for

00:07:14,139 --> 00:07:17,440
the section titles and things that's a

00:07:15,729 --> 00:07:19,780
possibility it's not the normal workflow

00:07:17,440 --> 00:07:21,310
and it also just changes the discussion

00:07:19,780 --> 00:07:24,340
too much so well we'll keep searching

00:07:21,310 --> 00:07:26,500
for the perfect fun the next thing we do

00:07:24,340 --> 00:07:28,270
maybe look at some samples I mean we

00:07:26,500 --> 00:07:29,979
have a few options left but we need to

00:07:28,270 --> 00:07:31,810
see that they actually work together in

00:07:29,979 --> 00:07:33,250
a document that there's nothing unusual

00:07:31,810 --> 00:07:36,100
about them when you look at a whole page

00:07:33,250 --> 00:07:38,320
or a whole paragraph so we open the

00:07:36,100 --> 00:07:40,990
specimens that came with these fonts see

00:07:38,320 --> 00:07:42,520
them in use and let's say that that

00:07:40,990 --> 00:07:44,440
causes us to toss something out because

00:07:42,520 --> 00:07:46,060
a couple of them are really too ornate

00:07:44,440 --> 00:07:48,270
and they look like calligraphy look like

00:07:46,060 --> 00:07:50,229
a wedding invitation not really a

00:07:48,270 --> 00:07:53,260
document that we would use for business

00:07:50,229 --> 00:07:56,080
purposes fine we have some potential

00:07:53,260 --> 00:07:58,720
choices left okay so things are not

00:07:56,080 --> 00:08:00,280
impossible yet we do still need to make

00:07:58,720 --> 00:08:02,590
sure we have our technical features and

00:08:00,280 --> 00:08:04,090
in this case because we're doing tables

00:08:02,590 --> 00:08:06,099
of numbers we need to make sure that we

00:08:04,090 --> 00:08:07,389
have two their numbers in the font and

00:08:06,099 --> 00:08:09,160
we probably also want to make sure that

00:08:07,389 --> 00:08:11,349
we have lining and non lining numbers so

00:08:09,160 --> 00:08:13,780
that when we have years and things in

00:08:11,349 --> 00:08:15,880
the running text those look okay too

00:08:13,780 --> 00:08:17,430
so what we do is we just keep searching

00:08:15,880 --> 00:08:20,080
in the font manager for those features

00:08:17,430 --> 00:08:21,880
and then we hit a dead end this is

00:08:20,080 --> 00:08:24,970
pretty deep into the process so maybe we

00:08:21,880 --> 00:08:26,380
just have only one font left that meets

00:08:24,970 --> 00:08:27,970
every other requirement but it doesn't

00:08:26,380 --> 00:08:30,880
have one thing like it doesn't have

00:08:27,970 --> 00:08:32,500
tabular numerals and that's not an

00:08:30,880 --> 00:08:35,529
impossible situation to find yourself in

00:08:32,500 --> 00:08:37,390
so what do you do at that points you can

00:08:35,529 --> 00:08:40,750
pivot you can look for something else

00:08:37,390 --> 00:08:42,520
you can say well this is just one font

00:08:40,750 --> 00:08:44,140
maybe we can find a font with compatible

00:08:42,520 --> 00:08:46,900
numbers and it's at the table in that

00:08:44,140 --> 00:08:49,029
instead so we would look for maybe a

00:08:46,900 --> 00:08:51,220
font by the same designer like if the

00:08:49,029 --> 00:08:53,380
Latin is listed as being a castle on

00:08:51,220 --> 00:08:54,880
design or at Jensen or something we

00:08:53,380 --> 00:08:56,470
probably get another Jensen's wearing

00:08:54,880 --> 00:08:58,180
those hundreds of fonts

00:08:56,470 --> 00:09:00,370
or maybe we just know that this is from

00:08:58,180 --> 00:09:01,900
a particular foundry people don't do

00:09:00,370 --> 00:09:03,160
crazy things with numbers so we'll look

00:09:01,900 --> 00:09:05,320
and see if the foundry has another font

00:09:03,160 --> 00:09:07,330
we can use that will hopefully match and

00:09:05,320 --> 00:09:09,940
not stand out too much

00:09:07,330 --> 00:09:11,650
no dice though maybe we find one other

00:09:09,940 --> 00:09:13,960
font release but it's another one of

00:09:11,650 --> 00:09:16,090
those crazy fonts that we can't use so

00:09:13,960 --> 00:09:17,140
what do we do then well so far we've

00:09:16,090 --> 00:09:19,660
just been looking at the fonts already

00:09:17,140 --> 00:09:20,800
installed so we need to see what else is

00:09:19,660 --> 00:09:22,750
available that maybe we just haven't

00:09:20,800 --> 00:09:25,270
downloaded onto our machine yet so we

00:09:22,750 --> 00:09:27,730
use the package manager for the sake of

00:09:25,270 --> 00:09:29,020
time not gonna repeat all those same

00:09:27,730 --> 00:09:32,890
Searchers but it would be basically the

00:09:29,020 --> 00:09:34,420
same process you look for the the facets

00:09:32,890 --> 00:09:36,400
of the font family that you need in

00:09:34,420 --> 00:09:38,260
terms of the language and the features

00:09:36,400 --> 00:09:41,050
that it supports and the range of

00:09:38,260 --> 00:09:42,940
variations that it supports and we're

00:09:41,050 --> 00:09:44,980
just gonna say because it takes us all

00:09:42,940 --> 00:09:47,950
the way down the path here we don't get

00:09:44,980 --> 00:09:49,030
any better luck at this point and maybe

00:09:47,950 --> 00:09:50,230
we don't actually have anything

00:09:49,030 --> 00:09:54,130
available to us through the distribution

00:09:50,230 --> 00:09:56,320
that we'll do we want perhaps with a

00:09:54,130 --> 00:09:58,930
last bit of desperation we pop open a

00:09:56,320 --> 00:10:01,720
terminal and we search around with apt

00:09:58,930 --> 00:10:04,030
caching and fine and that's located

00:10:01,720 --> 00:10:07,300
whatever else you want but that's not

00:10:04,030 --> 00:10:09,130
gonna find anything for us and in fact

00:10:07,300 --> 00:10:11,200
we're dead on this machine we're gonna

00:10:09,130 --> 00:10:12,970
have to go somewhere else but that's

00:10:11,200 --> 00:10:15,100
life so we start searching on the web

00:10:12,970 --> 00:10:16,420
maybe we go to Google Fonts maybe we

00:10:15,100 --> 00:10:19,840
just look at other sites that deal with

00:10:16,420 --> 00:10:21,250
fonts and look at the little sites that

00:10:19,840 --> 00:10:22,900
the designers have put up describing

00:10:21,250 --> 00:10:25,360
what their font does maybe there's more

00:10:22,900 --> 00:10:28,030
specimens to look at and this time we

00:10:25,360 --> 00:10:30,370
succeed what happens next is we get a

00:10:28,030 --> 00:10:33,670
zip file downloaded from this website

00:10:30,370 --> 00:10:35,110
that has the font we open it up and then

00:10:33,670 --> 00:10:37,300
there's a download helper that's

00:10:35,110 --> 00:10:38,890
associated with that web browser that

00:10:37,300 --> 00:10:41,050
installs the font locally to the machine

00:10:38,890 --> 00:10:42,460
and it finds that documentation other

00:10:41,050 --> 00:10:45,400
stuff in the zip file and puts it in the

00:10:42,460 --> 00:10:47,170
right places and then we being smart tag

00:10:45,400 --> 00:10:48,400
this and our font manager so that we

00:10:47,170 --> 00:10:50,320
know this is what we're using for this

00:10:48,400 --> 00:10:51,670
particular project and next year when

00:10:50,320 --> 00:10:54,640
we're doing the report we know we've got

00:10:51,670 --> 00:10:57,600
at least one font that we can use okay

00:10:54,640 --> 00:11:00,850
so we're done we found a perfect font

00:10:57,600 --> 00:11:01,990
how possible is this presently not at

00:11:00,850 --> 00:11:05,500
all

00:11:01,990 --> 00:11:06,640
or maybe barely why is that well I would

00:11:05,500 --> 00:11:08,380
say there's a handful of factors

00:11:06,640 --> 00:11:09,850
starting with the fact that that font

00:11:08,380 --> 00:11:12,699
manager we used in the first day

00:11:09,850 --> 00:11:14,649
doesn't really exist you might remember

00:11:12,699 --> 00:11:16,839
a program called font matrix a few years

00:11:14,649 --> 00:11:19,660
ago which it exists it's no longer being

00:11:16,839 --> 00:11:21,220
developed and in fact I think they're

00:11:19,660 --> 00:11:23,500
people who make sure it still compiles

00:11:21,220 --> 00:11:26,380
but it's it's got limited time left it's

00:11:23,500 --> 00:11:27,940
on an old version of QT so it's not

00:11:26,380 --> 00:11:33,459
gonna last forever there is also

00:11:27,940 --> 00:11:36,959
something called gtk font manager which

00:11:33,459 --> 00:11:39,160
is a little bit less full-featured and

00:11:36,959 --> 00:11:41,860
I'll get more in depth into that in a

00:11:39,160 --> 00:11:45,009
little bit but it's also not exactly

00:11:41,860 --> 00:11:46,839
what we want in this situation in

00:11:45,009 --> 00:11:48,550
addition to that it's not it's a

00:11:46,839 --> 00:11:52,839
personal project by wanted developers so

00:11:48,550 --> 00:11:54,250
it doesn't come by default in a genome

00:11:52,839 --> 00:11:57,220
installation even though it's a GTA

00:11:54,250 --> 00:11:58,290
related app and yeah we'll talk about

00:11:57,220 --> 00:12:01,209
that

00:11:58,290 --> 00:12:02,620
the second factor which is the Software

00:12:01,209 --> 00:12:05,350
Center is much the same

00:12:02,620 --> 00:12:06,670
the Software Center doesn't have all the

00:12:05,350 --> 00:12:10,060
information that we were searching on

00:12:06,670 --> 00:12:13,120
that the manager did unfortunately it

00:12:10,060 --> 00:12:15,939
does have some information it has the

00:12:13,120 --> 00:12:17,380
names of the fonts so you can tell sort

00:12:15,939 --> 00:12:20,079
of accidentally if it's a big family

00:12:17,380 --> 00:12:22,240
with multiple styles there is usually a

00:12:20,079 --> 00:12:24,189
human written description which gives

00:12:22,240 --> 00:12:25,329
you information there's a screen shot

00:12:24,189 --> 00:12:27,699
but that might be automatically

00:12:25,329 --> 00:12:30,370
generated and there's some kind of

00:12:27,699 --> 00:12:34,480
sample which is a quick brown fox kind

00:12:30,370 --> 00:12:36,850
of pangram the third factor is the web

00:12:34,480 --> 00:12:39,100
installation which is uniformly terrible

00:12:36,850 --> 00:12:42,430
on linux today in the sense that nothing

00:12:39,100 --> 00:12:44,410
happens you get that zip file it looks

00:12:42,430 --> 00:12:47,560
like this you can open it with the

00:12:44,410 --> 00:12:49,149
archive manager this is an actual actual

00:12:47,560 --> 00:12:51,339
font there's a ton of stuff there

00:12:49,149 --> 00:12:52,899
there's a lot of files there's a

00:12:51,339 --> 00:12:57,060
documentation folder there's a web

00:12:52,899 --> 00:12:59,079
folder as you can see there's actually

00:12:57,060 --> 00:13:01,720
sources and PDFs of some of that

00:12:59,079 --> 00:13:03,490
documentation but nothing happens when

00:13:01,720 --> 00:13:06,819
you quote-unquote install it except that

00:13:03,490 --> 00:13:08,199
it gets put into or the font files the

00:13:06,819 --> 00:13:11,319
binaries get put into a particular

00:13:08,199 --> 00:13:12,699
folder in your home directory another

00:13:11,319 --> 00:13:14,709
tangent here the reason this is

00:13:12,699 --> 00:13:16,870
something I'm harping on is that there

00:13:14,709 --> 00:13:19,360
are only two ways that you get fonts on

00:13:16,870 --> 00:13:21,490
to a system these days with a little bit

00:13:19,360 --> 00:13:22,839
of an asterisk you either either comes

00:13:21,490 --> 00:13:23,690
through the package manager or it comes

00:13:22,839 --> 00:13:26,510
off the web

00:13:23,690 --> 00:13:27,740
now the third option is that you built

00:13:26,510 --> 00:13:28,820
the font locally and install it but

00:13:27,740 --> 00:13:31,310
that's sort of a different beast

00:13:28,820 --> 00:13:32,510
entirely and hypothetically there would

00:13:31,310 --> 00:13:34,010
be a fourth one which is a

00:13:32,510 --> 00:13:36,080
synchronization service but no one who

00:13:34,010 --> 00:13:38,420
currently offers that might come in the

00:13:36,080 --> 00:13:39,830
future we'll see but that's why that

00:13:38,420 --> 00:13:41,570
matters because if it doesn't come

00:13:39,830 --> 00:13:45,740
through the distribution it comes from

00:13:41,570 --> 00:13:48,140
the web the fourth factor distribution

00:13:45,740 --> 00:13:51,110
packaging infrastructure doesn't really

00:13:48,140 --> 00:13:54,320
support the users needs it supports OS

00:13:51,110 --> 00:13:56,450
integration in other words when you copy

00:13:54,320 --> 00:13:58,190
that font from the zip folder or

00:13:56,450 --> 00:14:00,770
wherever else into your dot fonts

00:13:58,190 --> 00:14:02,330
directory that makes it available to the

00:14:00,770 --> 00:14:06,080
operating system it doesn't make it

00:14:02,330 --> 00:14:07,550
available to the user in the meaningful

00:14:06,080 --> 00:14:10,070
sense that we were looking at in that

00:14:07,550 --> 00:14:12,560
workflow example which is kind of the

00:14:10,070 --> 00:14:14,270
big dichotomy of fonts because there are

00:14:12,560 --> 00:14:16,550
software and content at the same time

00:14:14,270 --> 00:14:18,410
all right they contain executable

00:14:16,550 --> 00:14:20,630
instructions that get run by an

00:14:18,410 --> 00:14:22,310
interpreter but they are also a page

00:14:20,630 --> 00:14:24,290
elements that the user is actively

00:14:22,310 --> 00:14:27,080
interacting with and manipulating as

00:14:24,290 --> 00:14:28,670
part of the design process and the

00:14:27,080 --> 00:14:32,680
software stack basically just supports

00:14:28,670 --> 00:14:35,720
the OS part of that the software part

00:14:32,680 --> 00:14:37,370
the fifth and final factor is that font

00:14:35,720 --> 00:14:40,130
packages themselves to not to be very

00:14:37,370 --> 00:14:42,410
rich items this varies a lot be sure but

00:14:40,130 --> 00:14:45,040
on the whole they're minimal they

00:14:42,410 --> 00:14:47,360
contain the binary and a whole lot else

00:14:45,040 --> 00:14:49,190
or as unnamed a source Richard Hughes

00:14:47,360 --> 00:14:50,630
put it we package them like there's CLI

00:14:49,190 --> 00:14:56,120
apps even though that's not what they

00:14:50,630 --> 00:14:58,790
are so I guess the thesis of looking at

00:14:56,120 --> 00:15:00,860
this example is that when we don't

00:14:58,790 --> 00:15:02,630
address that content dimension with the

00:15:00,860 --> 00:15:04,460
software stack then we give users no

00:15:02,630 --> 00:15:05,960
choice but to go elsewhere for their

00:15:04,460 --> 00:15:07,760
information about what's in the font and

00:15:05,960 --> 00:15:09,230
what I can do what those features are

00:15:07,760 --> 00:15:10,640
there's a lot of websites where you drag

00:15:09,230 --> 00:15:12,910
and drop a font and it shows you what

00:15:10,640 --> 00:15:15,800
the features are and things like that

00:15:12,910 --> 00:15:17,030
fortunately I think all of those factors

00:15:15,800 --> 00:15:18,380
were addressable some of them are

00:15:17,030 --> 00:15:19,760
already in the process of being

00:15:18,380 --> 00:15:22,430
addressed because people do care about

00:15:19,760 --> 00:15:25,330
this stuff and I would break you down

00:15:22,430 --> 00:15:27,320
into sort of three dimensions although I

00:15:25,330 --> 00:15:29,960
should point out that the dimensions are

00:15:27,320 --> 00:15:32,030
not Euclidean and separate from each

00:15:29,960 --> 00:15:34,670
other but you know we'll see the first

00:15:32,030 --> 00:15:35,870
one is metadata which is what we talked

00:15:34,670 --> 00:15:36,690
about and all those searching and

00:15:35,870 --> 00:15:38,819
filtering example

00:15:36,690 --> 00:15:41,339
the second one is those resources that

00:15:38,819 --> 00:15:42,720
come in the font download package that

00:15:41,339 --> 00:15:44,600
we don't know what to do with and the

00:15:42,720 --> 00:15:48,329
third one is package behavior and

00:15:44,600 --> 00:15:50,879
although I'm kind of targeting this talk

00:15:48,329 --> 00:15:52,410
at people who maintain font packages the

00:15:50,879 --> 00:15:54,269
other things are important too because I

00:15:52,410 --> 00:15:56,279
think if you're a flan package

00:15:54,269 --> 00:15:57,899
maintainer you ought to know what is

00:15:56,279 --> 00:16:00,019
happening elsewhere in the stack so

00:15:57,899 --> 00:16:03,149
let's look at the metadata example first

00:16:00,019 --> 00:16:05,069
as we noticed most of the searching and

00:16:03,149 --> 00:16:06,629
the sorting in that word flow example

00:16:05,069 --> 00:16:10,980
was done on metadata and not on the

00:16:06,629 --> 00:16:15,329
actual glyphs in the font this is a

00:16:10,980 --> 00:16:17,160
screenshot of gtk font manager it has a

00:16:15,329 --> 00:16:20,149
little bit of metadata there it has a

00:16:17,160 --> 00:16:22,350
weight width and style which are

00:16:20,149 --> 00:16:24,060
directly read from the flat binary

00:16:22,350 --> 00:16:25,709
tables and those are actually pretty old

00:16:24,060 --> 00:16:28,800
that's sort of the Microsoft way of

00:16:25,709 --> 00:16:30,120
dividing up fonts it's not necessarily

00:16:28,800 --> 00:16:32,310
helpful to you what is medium mean

00:16:30,120 --> 00:16:34,529
exactly in this case what's normal

00:16:32,310 --> 00:16:36,360
it also shows you that it's proportional

00:16:34,529 --> 00:16:38,009
the spacing thing is just whether it's

00:16:36,360 --> 00:16:40,439
mono space or not that very rarely comes

00:16:38,009 --> 00:16:42,180
up in making documents you can't also

00:16:40,439 --> 00:16:44,759
see a sort of a waterfall example a

00:16:42,180 --> 00:16:46,800
little bit of context there it's

00:16:44,759 --> 00:16:48,000
automatically put there so if you're

00:16:46,800 --> 00:16:49,970
looking at a font in a different

00:16:48,000 --> 00:16:52,139
language that doesn't really show you

00:16:49,970 --> 00:16:56,069
accents and extended Latin characters

00:16:52,139 --> 00:16:59,399
and things and it also fails around them

00:16:56,069 --> 00:17:01,670
so it's not it's detecting something and

00:16:59,399 --> 00:17:05,520
not showing you what if things is there

00:17:01,670 --> 00:17:07,140
but mainly I think the the issue here is

00:17:05,520 --> 00:17:08,520
that this is just reading static

00:17:07,140 --> 00:17:10,260
information from the binary and showing

00:17:08,520 --> 00:17:12,179
it to you it's a good start but it's not

00:17:10,260 --> 00:17:15,409
what you need to work with a collection

00:17:12,179 --> 00:17:17,730
or library and in my opinion I think

00:17:15,409 --> 00:17:19,110
working with a collection there's

00:17:17,730 --> 00:17:21,360
something users are used to doing with

00:17:19,110 --> 00:17:24,150
like their audio their music collection

00:17:21,360 --> 00:17:25,740
and if you look at an audio player most

00:17:24,150 --> 00:17:27,929
of the screen real estate there is

00:17:25,740 --> 00:17:29,730
devoted to showing you metadata and

00:17:27,929 --> 00:17:31,710
giving you ways to search it and sort it

00:17:29,730 --> 00:17:33,600
and and manipulate the collection

00:17:31,710 --> 00:17:36,659
through that metadata that's a rhythm

00:17:33,600 --> 00:17:37,980
box this is you know music it's just it

00:17:36,659 --> 00:17:41,280
shows you there's more than one way to

00:17:37,980 --> 00:17:44,250
look at the same collection and then

00:17:41,280 --> 00:17:46,919
there's auxilary tools like easy tag

00:17:44,250 --> 00:17:49,140
which allows you to you know correct

00:17:46,919 --> 00:17:50,169
that metadata that's kind of taboo and

00:17:49,140 --> 00:17:52,629
fonts historically

00:17:50,169 --> 00:17:55,480
is I think the commercial proprietary

00:17:52,629 --> 00:17:57,460
font business is concerned about people

00:17:55,480 --> 00:17:59,379
falsifying information and changing the

00:17:57,460 --> 00:18:01,119
license and things like that but in a

00:17:59,379 --> 00:18:02,440
lot of cases there's just metadata that

00:18:01,119 --> 00:18:03,429
you could have in there that would help

00:18:02,440 --> 00:18:05,350
you when you're searching and sorting

00:18:03,429 --> 00:18:09,450
but we don't have tools for doing that

00:18:05,350 --> 00:18:13,109
on the desktop so you have to sum up

00:18:09,450 --> 00:18:15,429
metadata for fonts can be hard to get to

00:18:13,109 --> 00:18:17,259
and it's also sort of split up in

00:18:15,429 --> 00:18:19,840
different locations like at a practical

00:18:17,259 --> 00:18:21,369
level there's several pieces in the

00:18:19,840 --> 00:18:23,309
desktop environment that that read it

00:18:21,369 --> 00:18:25,239
but they're disjoint from each other

00:18:23,309 --> 00:18:26,889
there's a little bit in a software

00:18:25,239 --> 00:18:28,210
center like I mentioned you might even

00:18:26,889 --> 00:18:30,369
have a screen shot which is metadata

00:18:28,210 --> 00:18:34,059
that's handled by app stream which is

00:18:30,369 --> 00:18:36,850
the specification that a lot of software

00:18:34,059 --> 00:18:39,850
center style applications used these

00:18:36,850 --> 00:18:41,139
days gtk font manager as I mentioned is

00:18:39,850 --> 00:18:43,210
just showing a few things from the

00:18:41,139 --> 00:18:45,100
binary and they're just fig

00:18:43,210 --> 00:18:49,149
which knows some stuff about each font

00:18:45,100 --> 00:18:51,489
not everything pango also if it's a gtk

00:18:49,149 --> 00:18:53,259
stack is recording some metadata and

00:18:51,489 --> 00:18:55,509
then there's also some metadata in the

00:18:53,259 --> 00:18:59,169
flan package you may have screenshots

00:18:55,509 --> 00:19:00,309
and other information there too and so

00:18:59,169 --> 00:19:03,129
yeah there's are different places and

00:19:00,309 --> 00:19:04,929
they're not unified so that means that

00:19:03,129 --> 00:19:07,210
some of that metadata is duplicated and

00:19:04,929 --> 00:19:08,919
different places and some of it is just

00:19:07,210 --> 00:19:11,109
missing altogether one thing that's

00:19:08,919 --> 00:19:14,889
missing though is a desktop wide or a

00:19:11,109 --> 00:19:16,179
per user cache of the metadata and I

00:19:14,889 --> 00:19:18,639
think it's possible that there's

00:19:16,179 --> 00:19:21,700
interest in making that happen which

00:19:18,639 --> 00:19:22,899
I'll talk more about in a bit but yeah

00:19:21,700 --> 00:19:25,720
because there's so many pieces that need

00:19:22,899 --> 00:19:27,609
access to metadata about the font it

00:19:25,720 --> 00:19:29,590
makes sense they're not duplicated so

00:19:27,609 --> 00:19:32,529
just for the for the context when I say

00:19:29,590 --> 00:19:34,570
metadata here's a dump out of a table

00:19:32,529 --> 00:19:37,359
that I made trying to track what

00:19:34,570 --> 00:19:39,850
different applications from that

00:19:37,359 --> 00:19:42,970
previous slide store there's everything

00:19:39,850 --> 00:19:45,429
from the copyrights and the trademark

00:19:42,970 --> 00:19:47,710
notices in the font to what language is

00:19:45,429 --> 00:19:51,820
designed for the weight class

00:19:47,710 --> 00:19:53,799
Pano's thinner ID there's URLs for you

00:19:51,820 --> 00:19:56,109
know the designer and the foundry is a

00:19:53,799 --> 00:19:58,210
color font if it is a color font how

00:19:56,109 --> 00:20:00,129
many layers is it is it for vertical

00:19:58,210 --> 00:20:03,110
layout that sort of thing the last one

00:20:00,129 --> 00:20:05,900
down there pretty important user

00:20:03,110 --> 00:20:09,590
tags if you want to see the table of his

00:20:05,900 --> 00:20:12,679
stuff I put it on a snippet on gitlab it

00:20:09,590 --> 00:20:15,080
is a markdown writer and it's HTML which

00:20:12,679 --> 00:20:17,720
means it's kind of ugly but it's a start

00:20:15,080 --> 00:20:20,240
and so let's let's talk a little bit

00:20:17,720 --> 00:20:22,970
about the actual meta data options we

00:20:20,240 --> 00:20:26,900
have today app stream which is that that

00:20:22,970 --> 00:20:29,120
pre-installation material you might see

00:20:26,900 --> 00:20:31,370
fortunately fonts are a top-level object

00:20:29,120 --> 00:20:33,799
in the app stream spec you have software

00:20:31,370 --> 00:20:35,510
packages and there's a few other things

00:20:33,799 --> 00:20:38,600
like codecs that have sort of a special

00:20:35,510 --> 00:20:41,950
category but the B font spec just

00:20:38,600 --> 00:20:45,020
defines a handful of fields force

00:20:41,950 --> 00:20:46,970
including provides which is where you

00:20:45,020 --> 00:20:48,260
tell it what font face is included and

00:20:46,970 --> 00:20:49,610
you can have more than one of those so

00:20:48,260 --> 00:20:52,100
you can't indicate that the package

00:20:49,610 --> 00:20:55,220
contains multiple styles and variations

00:20:52,100 --> 00:20:58,460
and the other good news is that the app

00:20:55,220 --> 00:21:00,320
stream team has been open to expanding

00:20:58,460 --> 00:21:02,600
this I opened an issue on this and

00:21:00,320 --> 00:21:07,340
suggested a few more sort of simple

00:21:02,600 --> 00:21:08,900
additions the designer name and foundry

00:21:07,340 --> 00:21:12,559
name were pretty obvious because there

00:21:08,900 --> 00:21:13,940
are things that are very high level you

00:21:12,559 --> 00:21:16,130
could obviously go all the way down into

00:21:13,940 --> 00:21:17,179
those to the metadata elements but

00:21:16,130 --> 00:21:20,540
that's probably not worth it

00:21:17,179 --> 00:21:21,710
I added the URL type for the specimen

00:21:20,540 --> 00:21:23,299
there because there's a lot of websites

00:21:21,710 --> 00:21:24,440
that are especially for fonts and that

00:21:23,299 --> 00:21:27,200
that might be something you look at

00:21:24,440 --> 00:21:30,049
before you install it and the reserved

00:21:27,200 --> 00:21:34,040
font and when there is sort of a another

00:21:30,049 --> 00:21:36,169
tangent and app stream uses PDX per

00:21:34,040 --> 00:21:39,530
packet and package data exchange format

00:21:36,169 --> 00:21:41,450
specified license is that can make it

00:21:39,530 --> 00:21:43,549
tricky because there aren't a whole lot

00:21:41,450 --> 00:21:45,470
of font licenses currently supported you

00:21:43,549 --> 00:21:48,470
look at the wide range of weird fonts

00:21:45,470 --> 00:21:49,880
and weird licenses out there so I've

00:21:48,470 --> 00:21:52,429
tried to move that forward a little bit

00:21:49,880 --> 00:21:55,370
too and particularly want to add support

00:21:52,429 --> 00:21:56,780
for showing that no Lavelle license want

00:21:55,370 --> 00:21:58,940
has a reserved font name because that

00:21:56,780 --> 00:22:02,570
can be important if you're needing to

00:21:58,940 --> 00:22:05,360
modify it or something but moving on

00:22:02,570 --> 00:22:08,390
other good news on this metadata front

00:22:05,360 --> 00:22:09,919
is that mattias class and whose gtk

00:22:08,390 --> 00:22:12,679
maintainer these days has been reworking

00:22:09,919 --> 00:22:15,590
the font selection dialog and that

00:22:12,679 --> 00:22:16,220
should be rolling out in September what

00:22:15,590 --> 00:22:20,419
the

00:22:16,220 --> 00:22:21,770
3.24 release this is a screenshot of one

00:22:20,419 --> 00:22:23,960
of his earlier attempts he's

00:22:21,770 --> 00:22:25,580
particularly been focused and focused on

00:22:23,960 --> 00:22:27,980
and showing the variable fonts support

00:22:25,580 --> 00:22:31,280
and I'm showing open type features this

00:22:27,980 --> 00:22:33,440
is a newer screenshot or you can see

00:22:31,280 --> 00:22:36,039
that you can manipulate things and the

00:22:33,440 --> 00:22:38,780
examples that's showing there of the

00:22:36,039 --> 00:22:40,039
letter case and actually in the next

00:22:38,780 --> 00:22:42,169
screenshot you can see some of the

00:22:40,039 --> 00:22:44,090
stylistic alternates that's kind of

00:22:42,169 --> 00:22:46,070
important because that allows you to see

00:22:44,090 --> 00:22:48,740
what the open type feature actually does

00:22:46,070 --> 00:22:50,409
and it turns out that can be tricky you

00:22:48,740 --> 00:22:53,240
know I want to sample string the show I

00:22:50,409 --> 00:22:55,159
mean it's pretty obvious for slash to 0

00:22:53,240 --> 00:22:56,539
what you want to show but for these

00:22:55,159 --> 00:22:59,299
stylistic alternates and for some of

00:22:56,539 --> 00:23:01,130
these contextual chaining things you

00:22:59,299 --> 00:23:04,100
could either look into the font and try

00:23:01,130 --> 00:23:05,559
and parse the whole G sub table but

00:23:04,100 --> 00:23:07,850
that's a lot of work and a lot of time

00:23:05,559 --> 00:23:08,960
or you could maybe just try and find a

00:23:07,850 --> 00:23:13,970
good word but then you have to have a

00:23:08,960 --> 00:23:15,590
dictionary of words so we've decided it

00:23:13,970 --> 00:23:17,390
may be necessary to extend the spec and

00:23:15,590 --> 00:23:19,370
include a little sample string in the

00:23:17,390 --> 00:23:21,710
open type table that's possible that's

00:23:19,370 --> 00:23:23,809
already available to you in the

00:23:21,710 --> 00:23:26,990
character rearing it feature but not

00:23:23,809 --> 00:23:29,630
everywhere but there's more happening as

00:23:26,990 --> 00:23:31,850
well more potentially good news from the

00:23:29,630 --> 00:23:33,470
genome community I should apologize that

00:23:31,850 --> 00:23:36,530
I don't really know the KDE side of the

00:23:33,470 --> 00:23:39,020
story very well but I did bring up at

00:23:36,530 --> 00:23:40,880
qua tech a few weeks ago this can we do

00:23:39,020 --> 00:23:43,610
better with that downloaded zip file

00:23:40,880 --> 00:23:45,230
question and the answer is probably

00:23:43,610 --> 00:23:48,320
exactly what form that's going to take

00:23:45,230 --> 00:23:50,630
is a few releases away maybe there's

00:23:48,320 --> 00:23:52,970
interest in handling that better in

00:23:50,630 --> 00:23:56,330
particular you can install things like

00:23:52,970 --> 00:24:00,140
documentation within the users home

00:23:56,330 --> 00:24:04,390
directory in that local / share / dock

00:24:00,140 --> 00:24:06,559
so it's possible it's just not obvious

00:24:04,390 --> 00:24:08,090
necessarily how to automatically do that

00:24:06,559 --> 00:24:12,260
for any browser the user might choose

00:24:08,090 --> 00:24:16,070
and also yeah there was some interest in

00:24:12,260 --> 00:24:18,350
maybe having a database of the font

00:24:16,070 --> 00:24:20,960
metadata at the at the desktop level I

00:24:18,350 --> 00:24:22,130
mentioned when I was talking there that

00:24:20,960 --> 00:24:24,679
this is the kind of thing that tracker

00:24:22,130 --> 00:24:26,270
normally does in the gnome system it and

00:24:24,679 --> 00:24:28,280
all your photo metadata and all your

00:24:26,270 --> 00:24:29,420
music metadata that might not be the way

00:24:28,280 --> 00:24:31,430
forward because

00:24:29,420 --> 00:24:33,620
tracker is really for user level

00:24:31,430 --> 00:24:35,540
applications and this is stuff that

00:24:33,620 --> 00:24:38,510
needs to be accessible to pango and

00:24:35,540 --> 00:24:40,070
these lower level libraries as well but

00:24:38,510 --> 00:24:42,620
there's interest in moving forward on

00:24:40,070 --> 00:24:46,970
that which is really good news

00:24:42,620 --> 00:24:49,370
the next major dimension here is what we

00:24:46,970 --> 00:24:52,430
actually do about those resources in the

00:24:49,370 --> 00:24:54,080
downloaded zip file which also exists in

00:24:52,430 --> 00:24:56,660
a lot of ways or sorry in a lot of cases

00:24:54,080 --> 00:24:58,340
in distribution packages too and when I

00:24:56,660 --> 00:25:00,440
say resources we're talking about

00:24:58,340 --> 00:25:04,010
anything other than the font binary that

00:25:00,440 --> 00:25:07,010
comes packaged with it from upstream for

00:25:04,010 --> 00:25:09,350
example manuals sometimes there's user

00:25:07,010 --> 00:25:11,000
documentation it's like a guidebook it

00:25:09,350 --> 00:25:13,940
concludes specimens which are showing

00:25:11,000 --> 00:25:16,760
the font in use it can include maybe PNG

00:25:13,940 --> 00:25:18,320
screenshots maybe several there might be

00:25:16,760 --> 00:25:19,910
a little miniature website that's a

00:25:18,320 --> 00:25:23,000
resource and at least having a link to

00:25:19,910 --> 00:25:25,640
it is something and there can be sort of

00:25:23,000 --> 00:25:28,130
the example code in particular for web

00:25:25,640 --> 00:25:31,880
content wow that's really acting odd

00:25:28,130 --> 00:25:37,460
isn't it Keith Keith why didn't you say

00:25:31,880 --> 00:25:41,210
something it looks really nice on this

00:25:37,460 --> 00:25:45,140
screen so there's a wide variety of

00:25:41,210 --> 00:25:48,920
pieces of ancillary auxilary material

00:25:45,140 --> 00:25:50,390
here is what I'm getting in and in a lot

00:25:48,920 --> 00:25:53,630
of cases district packages will include

00:25:50,390 --> 00:25:56,030
some of this for Debian the material has

00:25:53,630 --> 00:25:57,770
to meet the free software guidelines so

00:25:56,030 --> 00:25:59,630
if it's a PDF but we don't have this

00:25:57,770 --> 00:26:01,390
source that we built the PDF then it

00:25:59,630 --> 00:26:04,370
might get taken out by the package or

00:26:01,390 --> 00:26:06,290
almost always one the font designer

00:26:04,370 --> 00:26:07,820
makes the package themselves you get a

00:26:06,290 --> 00:26:10,490
ton of stuff I'm going to show you some

00:26:07,820 --> 00:26:15,230
examples of the kind of material that's

00:26:10,490 --> 00:26:17,210
in one of these this is from an Arabic

00:26:15,230 --> 00:26:19,070
font called a Lommy and it has a lot of

00:26:17,210 --> 00:26:22,070
detailed information in the manual about

00:26:19,070 --> 00:26:24,530
how to access certain alternates for

00:26:22,070 --> 00:26:25,580
stylistic variation and this is kind of

00:26:24,530 --> 00:26:29,120
the kind of thing that's important for

00:26:25,580 --> 00:26:30,230
any linguistic reasons sort of the other

00:26:29,120 --> 00:26:34,130
end of the spectrum this is a song

00:26:30,230 --> 00:26:36,590
called Bungie which is one of the very

00:26:34,130 --> 00:26:40,370
few open-source color fonts it has

00:26:36,590 --> 00:26:42,240
multiple layers and there's about an

00:26:40,370 --> 00:26:44,639
eight page

00:26:42,240 --> 00:26:47,789
micro website about how to combine those

00:26:44,639 --> 00:26:50,370
and this is why we call it documentation

00:26:47,789 --> 00:26:51,419
if you were to just dive right in

00:26:50,370 --> 00:26:52,830
without reading that you would not

00:26:51,419 --> 00:26:55,080
figure out how to combine all of those

00:26:52,830 --> 00:26:59,399
and get all the styles that you want so

00:26:55,080 --> 00:27:01,860
that can be important stuff and not just

00:26:59,399 --> 00:27:04,019
for aesthetic reasons this is from EB

00:27:01,860 --> 00:27:06,720
chairman which it has a manual that's

00:27:04,019 --> 00:27:09,179
probably 20 pages long I think

00:27:06,720 --> 00:27:11,100
and there's detail on here about not

00:27:09,179 --> 00:27:13,919
just what the ligatures and things are

00:27:11,100 --> 00:27:15,330
but in some cases why they exist which

00:27:13,919 --> 00:27:19,769
is sort of interesting background

00:27:15,330 --> 00:27:21,620
information and you know understanding

00:27:19,769 --> 00:27:24,779
the intent can be helpful to you you

00:27:21,620 --> 00:27:26,279
wouldn't even know well if you do know

00:27:24,779 --> 00:27:28,950
that this font is designed to look like

00:27:26,279 --> 00:27:32,580
a Renaissance typeface that's worth

00:27:28,950 --> 00:27:34,350
knowing when I say specimen that was

00:27:32,580 --> 00:27:35,639
listed separately from documentation

00:27:34,350 --> 00:27:37,889
that generally means something like this

00:27:35,639 --> 00:27:42,990
is from gentium which is a really famous

00:27:37,889 --> 00:27:44,760
a large open-source family and these are

00:27:42,990 --> 00:27:45,990
usually designed as pamphlets or

00:27:44,760 --> 00:27:47,639
booklets they look like marketing

00:27:45,990 --> 00:27:49,889
material because in the commercial world

00:27:47,639 --> 00:27:51,720
they are marketing material but even for

00:27:49,889 --> 00:27:53,639
open fonts you'll typically get it as a

00:27:51,720 --> 00:27:55,950
PDF as opposed to some other document

00:27:53,639 --> 00:27:57,870
format it might be really simple

00:27:55,950 --> 00:27:59,639
industry to the characters in a big

00:27:57,870 --> 00:28:03,210
block but more often it showcases the

00:27:59,639 --> 00:28:05,190
font and use in paragraphs and in whole

00:28:03,210 --> 00:28:07,049
mock documents and things and that's

00:28:05,190 --> 00:28:10,830
really the value of it is it allows you

00:28:07,049 --> 00:28:13,529
to see context for the entire sentences

00:28:10,830 --> 00:28:14,850
and words a lot of times these days this

00:28:13,529 --> 00:28:16,950
will be done on the web as well this is

00:28:14,850 --> 00:28:18,990
from your sir

00:28:16,950 --> 00:28:20,399
and you know we can at least link to

00:28:18,990 --> 00:28:23,490
those if we don't have a copy locally

00:28:20,399 --> 00:28:25,889
and this is not purely an aesthetic

00:28:23,490 --> 00:28:27,240
thing specimens can make or break your

00:28:25,889 --> 00:28:28,250
ability to tell if the font is

00:28:27,240 --> 00:28:33,630
functioning correctly

00:28:28,250 --> 00:28:34,980
this is Bengali and if you can see there

00:28:33,630 --> 00:28:37,019
are characters that are attached above

00:28:34,980 --> 00:28:39,330
and below there are some things that

00:28:37,019 --> 00:28:42,210
combine together but if you were to look

00:28:39,330 --> 00:28:43,409
at UDK font manager in that grid you

00:28:42,210 --> 00:28:45,840
can't tell if any of those functions

00:28:43,409 --> 00:28:47,760
actually work so seeing the specimen

00:28:45,840 --> 00:28:52,399
lets you see that it works correctly in

00:28:47,760 --> 00:28:53,610
text as you need to set text anyway

00:28:52,399 --> 00:28:54,990
whatever

00:28:53,610 --> 00:28:56,850
think of any particular document type

00:28:54,990 --> 00:28:58,650
all those resources currently if they

00:28:56,850 --> 00:29:00,809
end up anywhere get dumped at the user

00:28:58,650 --> 00:29:02,960
sharedoc and I guarantee you no one

00:29:00,809 --> 00:29:06,000
what's up them again we could do better

00:29:02,960 --> 00:29:08,640
it's my only point there you could

00:29:06,000 --> 00:29:10,620
capture their existence and treat that

00:29:08,640 --> 00:29:13,650
as metadata to show the user in

00:29:10,620 --> 00:29:17,490
different places we could maybe even tie

00:29:13,650 --> 00:29:19,830
them into system services and here's

00:29:17,490 --> 00:29:21,390
where we enter the third dimension which

00:29:19,830 --> 00:29:24,420
is to say that it doesn't have to be

00:29:21,390 --> 00:29:26,970
just a static reference what I'm really

00:29:24,420 --> 00:29:29,340
thinking of here is that if the file

00:29:26,970 --> 00:29:31,919
resource is something readable by the

00:29:29,340 --> 00:29:33,600
help system we could place it and user

00:29:31,919 --> 00:29:36,919
share help will automatically get picked

00:29:33,600 --> 00:29:41,250
up by the helper browser like Yelp I

00:29:36,919 --> 00:29:43,590
know that's a huge change but I will say

00:29:41,250 --> 00:29:45,870
like that change alone putting a help

00:29:43,590 --> 00:29:48,059
document in a different place makes it

00:29:45,870 --> 00:29:50,309
accessible to a user in the desktop help

00:29:48,059 --> 00:29:52,200
system and that's huge type foundries

00:29:50,309 --> 00:29:53,730
complain about this Mac OS users

00:29:52,200 --> 00:29:55,950
complain about this because no other

00:29:53,730 --> 00:29:56,549
operating system does this it's a source

00:29:55,950 --> 00:29:59,250
of frustration

00:29:56,549 --> 00:30:01,530
the trick is whether you have something

00:29:59,250 --> 00:30:05,100
readable or not and we're really getting

00:30:01,530 --> 00:30:08,700
into the package changes now it's a real

00:30:05,100 --> 00:30:11,210
issue Yelp is capable of reading a few

00:30:08,700 --> 00:30:14,010
formats like the man and info natively

00:30:11,210 --> 00:30:16,799
HTML was fortunately one of those but in

00:30:14,010 --> 00:30:18,150
all likelihood for Debian flawed

00:30:16,799 --> 00:30:21,900
packagers there could be some work

00:30:18,150 --> 00:30:24,179
involved and of course it's not entirely

00:30:21,900 --> 00:30:25,679
clear sometimes what constitutes help

00:30:24,179 --> 00:30:27,750
and what constitutes just general

00:30:25,679 --> 00:30:29,929
information do you need the Renaissance

00:30:27,750 --> 00:30:32,630
references is that help or is that just

00:30:29,929 --> 00:30:35,760
documentation for your own edification

00:30:32,630 --> 00:30:40,169
it's it's nebulous and here's another

00:30:35,760 --> 00:30:42,240
example from the same eb Garamond this

00:30:40,169 --> 00:30:48,059
one is a little bit more like help my

00:30:42,240 --> 00:30:49,980
opinion and so he mentions here for

00:30:48,059 --> 00:30:52,080
instance J was not a separate letter at

00:30:49,980 --> 00:30:54,870
the time and so one of these character

00:30:52,080 --> 00:30:57,929
variant features replaces all J's with

00:30:54,870 --> 00:31:01,350
an i okay that actually might be helpful

00:30:57,929 --> 00:31:03,840
to know and so it's not just telling you

00:31:01,350 --> 00:31:05,630
what the feature does but hawai and I

00:31:03,840 --> 00:31:07,470
think that's right on the border between

00:31:05,630 --> 00:31:09,059
something that's documented

00:31:07,470 --> 00:31:11,820
something that's helpful when you're

00:31:09,059 --> 00:31:14,100
trying to choose the font and sort of

00:31:11,820 --> 00:31:16,740
the other side of this another example

00:31:14,100 --> 00:31:18,120
from the Arabic font is that okay one of

00:31:16,740 --> 00:31:20,010
these is Arabic style one of them is

00:31:18,120 --> 00:31:21,450
Urdu style you need to know that if

00:31:20,010 --> 00:31:23,520
you're a native speaker of the language

00:31:21,450 --> 00:31:27,299
you might recognize it automatically

00:31:23,520 --> 00:31:29,610
otherwise this helps the user and but

00:31:27,299 --> 00:31:31,590
yeah that that notion of taking

00:31:29,610 --> 00:31:33,030
documentation out of user sharedoc and

00:31:31,590 --> 00:31:36,059
putting it into user share help or where

00:31:33,030 --> 00:31:37,559
else probably means work because it

00:31:36,059 --> 00:31:40,710
means pulling some information out of

00:31:37,559 --> 00:31:42,570
PDFs maybe and the upstream maintainer

00:31:40,710 --> 00:31:45,210
may not want to do this they may not

00:31:42,570 --> 00:31:47,190
have looked at the font and tears and

00:31:45,210 --> 00:31:49,309
changing install path swings

00:31:47,190 --> 00:31:51,690
you know monkeying with your package

00:31:49,309 --> 00:31:53,669
it's always possible there is someone

00:31:51,690 --> 00:31:55,110
who knows that you have something in

00:31:53,669 --> 00:31:58,309
user sharedoc and will get upset to find

00:31:55,110 --> 00:32:01,409
it going and the other thing I

00:31:58,309 --> 00:32:03,059
acknowledge here is that changing this

00:32:01,409 --> 00:32:05,520
to tighten to system help is a big

00:32:03,059 --> 00:32:08,039
chicken and egg issue because users are

00:32:05,520 --> 00:32:10,110
accustomed to not having any help are

00:32:08,039 --> 00:32:11,640
they can I discover it I don't know at

00:32:10,110 --> 00:32:12,960
worst it's a no op if they don't know

00:32:11,640 --> 00:32:14,970
that it's neither sure doc they won't

00:32:12,960 --> 00:32:16,760
know that is in the use your help but at

00:32:14,970 --> 00:32:19,350
least in this chicken and egg issue

00:32:16,760 --> 00:32:21,360
someone knows where the eggs are and

00:32:19,350 --> 00:32:24,539
that's that's that's Yelp or wherever

00:32:21,360 --> 00:32:26,100
the KDE equivalent is so there's a few

00:32:24,539 --> 00:32:27,870
other things just moving on still on a

00:32:26,100 --> 00:32:31,740
package behavior front where I think we

00:32:27,870 --> 00:32:33,659
could improve consistency is not perfect

00:32:31,740 --> 00:32:36,120
when you look at your font library as a

00:32:33,659 --> 00:32:38,490
whole and I mean it's fine down to a

00:32:36,120 --> 00:32:41,549
point but this is just a random

00:32:38,490 --> 00:32:45,240
selection of font package names so the

00:32:41,549 --> 00:32:49,140
first one there cross core is instead of

00:32:45,240 --> 00:32:51,870
like unrelated style fonts that just

00:32:49,140 --> 00:32:55,230
sort of come from the same development

00:32:51,870 --> 00:32:56,929
projects deja vu core is one font George

00:32:55,230 --> 00:33:01,289
Williams is a designer's name

00:32:56,929 --> 00:33:03,200
Kuchar is a language fonts awesome is a

00:33:01,289 --> 00:33:05,909
web resource that's not a font at all

00:33:03,200 --> 00:33:07,380
Indyk actually good route and in decor

00:33:05,909 --> 00:33:10,500
both meta packages but there's issues

00:33:07,380 --> 00:33:12,059
with that too Syl Ezra the s il is a

00:33:10,500 --> 00:33:13,950
font foundry ezra is the name of the

00:33:12,059 --> 00:33:15,840
typeface GIS fonts is totally different

00:33:13,950 --> 00:33:18,240
any font it doesn't even have the same

00:33:15,840 --> 00:33:19,940
prefix as everything else so yeah we

00:33:18,240 --> 00:33:21,819
could probably do better there

00:33:19,940 --> 00:33:25,159
and same is true with the install paths

00:33:21,819 --> 00:33:26,779
in a lot of ways people installed to use

00:33:25,159 --> 00:33:28,129
your share fonts and then the file type

00:33:26,779 --> 00:33:32,719
but it doesn't always work that way

00:33:28,129 --> 00:33:35,359
here again note at the top is a mega

00:33:32,719 --> 00:33:36,259
family from Google later or Lantau in

00:33:35,359 --> 00:33:39,829
the store we need some ways because

00:33:36,259 --> 00:33:41,779
polish is one particular small family by

00:33:39,829 --> 00:33:43,309
the same person and then you have low

00:33:41,779 --> 00:33:44,899
heat which is what Ben got only an

00:33:43,309 --> 00:33:46,729
awesome ease into two directories there

00:33:44,899 --> 00:33:50,119
even though it's the same writing system

00:33:46,729 --> 00:33:51,709
Bing extra is not a med package like

00:33:50,119 --> 00:33:52,999
goocher was that's a set of unrelated

00:33:51,709 --> 00:33:55,489
fonts that just happened to support

00:33:52,999 --> 00:33:57,829
Bengali samyak ends up in two different

00:33:55,489 --> 00:34:00,529
places and then Droid fallback doesn't

00:33:57,829 --> 00:34:02,119
even end up under the same directory as

00:34:00,529 --> 00:34:09,470
everything else I know the last one down

00:34:02,119 --> 00:34:12,470
there sort smell that is the gaudi book

00:34:09,470 --> 00:34:15,200
litter maybe but the issue is that it

00:34:12,470 --> 00:34:18,230
has a sort of dump everything in the

00:34:15,200 --> 00:34:20,539
same place approach including some ot FS

00:34:18,230 --> 00:34:22,700
some TT FS and some SF DS which are

00:34:20,539 --> 00:34:25,339
forward source files they all end up in

00:34:22,700 --> 00:34:27,079
users share fonts yeah sure there's

00:34:25,339 --> 00:34:29,659
nothing insightful about me saying let's

00:34:27,079 --> 00:34:32,869
fix bugs and packaging we all want

00:34:29,659 --> 00:34:36,319
packages to be excellent I agree I'm

00:34:32,869 --> 00:34:37,940
only mentioning here because this having

00:34:36,319 --> 00:34:41,269
a better consistency across the font

00:34:37,940 --> 00:34:43,669
library can't help with that big font

00:34:41,269 --> 00:34:48,529
dichotomy about the software and in

00:34:43,669 --> 00:34:52,190
content issue because well that bean has

00:34:48,529 --> 00:34:54,440
a large influence here and these are

00:34:52,190 --> 00:34:57,740
rough numbers Google Fonts about 848

00:34:54,440 --> 00:35:00,049
families open font library almost anyone

00:34:57,740 --> 00:35:03,109
can upload things there so it's got more

00:35:00,049 --> 00:35:04,220
but that means is third on the list and

00:35:03,109 --> 00:35:07,519
it's a little hard to count some

00:35:04,220 --> 00:35:10,250
distributions and so consistency is a

00:35:07,519 --> 00:35:13,339
good example for other people and but

00:35:10,250 --> 00:35:16,339
also the name and of the package and the

00:35:13,339 --> 00:35:19,099
fallback path are are in the path our

00:35:16,339 --> 00:35:20,960
fallback mechanisms so ideally the font

00:35:19,099 --> 00:35:23,269
manager will exist and give you the UI

00:35:20,960 --> 00:35:24,559
you need to find stuff failing that the

00:35:23,269 --> 00:35:26,329
Software Center helps you find stuff

00:35:24,559 --> 00:35:27,980
failing that you can drop down a command

00:35:26,329 --> 00:35:30,380
line and figure out where something

00:35:27,980 --> 00:35:32,050
might be if you have it and there's also

00:35:30,380 --> 00:35:35,590
maybe some technical reasons to

00:35:32,050 --> 00:35:38,290
think about being ultra ultra consistent

00:35:35,590 --> 00:35:40,450
on the sort of thing like the gtk font

00:35:38,290 --> 00:35:43,090
Explorer example I mentioned earlier if

00:35:40,450 --> 00:35:45,640
you want to provide a link to a PDF

00:35:43,090 --> 00:35:47,890
specimen or documentation in that then

00:35:45,640 --> 00:35:49,540
you have to find your way backwards from

00:35:47,890 --> 00:35:51,520
the font Explorer to where that

00:35:49,540 --> 00:35:53,790
directory is in user share or whatever

00:35:51,520 --> 00:35:56,080
that's not obvious that the faces that

00:35:53,790 --> 00:35:58,270
are available that high up in the stack

00:35:56,080 --> 00:36:00,580
might be virtual faces like serif and

00:35:58,270 --> 00:36:02,170
that means going through font config so

00:36:00,580 --> 00:36:04,570
if there's a little more consistency

00:36:02,170 --> 00:36:06,850
it's a little easier to maybe find your

00:36:04,570 --> 00:36:09,580
way down to the right place personally I

00:36:06,850 --> 00:36:11,410
would like to see debian font packagers

00:36:09,580 --> 00:36:13,750
adapt the two-tier scheme where you

00:36:11,410 --> 00:36:17,430
include the foundry name and I know

00:36:13,750 --> 00:36:20,110
that's controversial it's sort of weird

00:36:17,430 --> 00:36:23,110
to some people but some packages do it

00:36:20,110 --> 00:36:24,970
already I've got a couple reasons for

00:36:23,110 --> 00:36:27,220
that the first is that you can always

00:36:24,970 --> 00:36:28,930
have name collisions because people

00:36:27,220 --> 00:36:30,580
aren't necessarily creative about their

00:36:28,930 --> 00:36:32,920
font names and most people don't really

00:36:30,580 --> 00:36:35,280
search to see what names are taken also

00:36:32,920 --> 00:36:38,110
it's sort of mirrors the the metadata

00:36:35,280 --> 00:36:40,000
structure of audio tracks which is

00:36:38,110 --> 00:36:41,320
artists album track and in this case

00:36:40,000 --> 00:36:43,330
there's not really a good way to put the

00:36:41,320 --> 00:36:45,100
the artist in there because fonts have

00:36:43,330 --> 00:36:46,990
multiple designers it also just

00:36:45,100 --> 00:36:48,310
communicates that relationship to the

00:36:46,990 --> 00:36:51,520
user which is helpful in certain

00:36:48,310 --> 00:36:53,110
situations and reality is that you want

00:36:51,520 --> 00:36:54,580
to coexist with these fonts people are

00:36:53,110 --> 00:36:56,350
downloading from the web and when people

00:36:54,580 --> 00:36:57,640
download from the web they put them in

00:36:56,350 --> 00:36:59,980
folders and organize them in this

00:36:57,640 --> 00:37:02,650
fashion you might dump all your fonts

00:36:59,980 --> 00:37:03,910
and do separate folders the first few

00:37:02,650 --> 00:37:06,190
times but eventually you realize that

00:37:03,910 --> 00:37:07,570
more than a screen worth and it's too

00:37:06,190 --> 00:37:11,910
complex so you start storing them

00:37:07,570 --> 00:37:14,290
yourself and and yeah that would involve

00:37:11,910 --> 00:37:15,790
adopting this method adopting this model

00:37:14,290 --> 00:37:18,070
would involve packages changing some

00:37:15,790 --> 00:37:20,080
things in I want to be careful about

00:37:18,070 --> 00:37:22,380
just telling people that they should go

00:37:20,080 --> 00:37:24,730
do this I understand a sensitive issue

00:37:22,380 --> 00:37:29,050
so I would love to get some feedback on

00:37:24,730 --> 00:37:30,790
it the final is the final sensitive

00:37:29,050 --> 00:37:32,650
issue I would bring up is that when we

00:37:30,790 --> 00:37:34,230
talk about metadata you don't always

00:37:32,650 --> 00:37:36,790
have everything we need in the font and

00:37:34,230 --> 00:37:39,070
it'd be nice to say well we'll just add

00:37:36,790 --> 00:37:41,020
it all right but if the upstream author

00:37:39,070 --> 00:37:42,700
doesn't want to make a help file for you

00:37:41,020 --> 00:37:44,230
and if they don't want to add fields to

00:37:42,700 --> 00:37:46,540
the name table

00:37:44,230 --> 00:37:50,500
include the designer and URLs and things

00:37:46,540 --> 00:37:52,440
like that what do you do and well making

00:37:50,500 --> 00:37:54,369
your own HTML help file is one thing

00:37:52,440 --> 00:37:57,580
patching the font binary really

00:37:54,369 --> 00:38:00,970
different you might just be adding to

00:37:57,580 --> 00:38:02,530
the font with with metadata but for a

00:38:00,970 --> 00:38:04,810
know FL font with the reserve font name

00:38:02,530 --> 00:38:07,150
that triggers you having to rename the

00:38:04,810 --> 00:38:10,150
font and also it can just irritate

00:38:07,150 --> 00:38:11,800
people and so yeah it could be

00:38:10,150 --> 00:38:14,050
controversial to actually do that if

00:38:11,800 --> 00:38:16,780
you're the packager I would say that's

00:38:14,050 --> 00:38:18,490
one of the main challenges and it could

00:38:16,780 --> 00:38:21,280
be hard to get information you need from

00:38:18,490 --> 00:38:22,920
upstream at all like why exactly does

00:38:21,280 --> 00:38:26,890
this feature exist

00:38:22,920 --> 00:38:28,900
upstream may not even have version

00:38:26,890 --> 00:38:29,830
control you can get them to agree to use

00:38:28,900 --> 00:38:32,040
in which case you're gonna be

00:38:29,830 --> 00:38:35,740
maintaining that patch against the font

00:38:32,040 --> 00:38:37,600
perpetually and then yet you just by

00:38:35,740 --> 00:38:39,340
doing this you could upset the upstream

00:38:37,600 --> 00:38:41,530
author you could have said downstream

00:38:39,340 --> 00:38:44,200
users you can upset strangers I guess

00:38:41,530 --> 00:38:46,150
and then it's just gonna be a

00:38:44,200 --> 00:38:48,850
compatibility issue perhaps for people

00:38:46,150 --> 00:38:51,160
who get your patched version of the font

00:38:48,850 --> 00:38:52,210
with excellent metadata and then they

00:38:51,160 --> 00:38:53,859
talk to their friends who don't have

00:38:52,210 --> 00:38:57,520
that metadata metadata and they get

00:38:53,859 --> 00:39:00,340
confused but I think it's still worth

00:38:57,520 --> 00:39:02,880
considering because all of these little

00:39:00,340 --> 00:39:06,640
changes to packages including some extra

00:39:02,880 --> 00:39:08,890
metadata fields Colinas PDFs making some

00:39:06,640 --> 00:39:11,550
help files that is what incrementally

00:39:08,890 --> 00:39:15,820
moves you towards the white screened

00:39:11,550 --> 00:39:17,260
Fantasyland examples early on and that

00:39:15,820 --> 00:39:22,690
is it's all I have to say on the

00:39:17,260 --> 00:39:24,580
subjects as I said this is me saying hey

00:39:22,690 --> 00:39:25,720
font packages you should do stuff so I

00:39:24,580 --> 00:39:27,340
would really like to hear back from

00:39:25,720 --> 00:39:29,560
other people who are maintaining font

00:39:27,340 --> 00:39:31,869
packages as to what parts of this sound

00:39:29,560 --> 00:39:35,230
crazy and what parts of it sound

00:39:31,869 --> 00:39:37,510
slightly less crazy and so if you don't

00:39:35,230 --> 00:39:40,000
have a question right now there's lots

00:39:37,510 --> 00:39:42,520
of ways to contact me any method you

00:39:40,000 --> 00:39:44,109
choose is fine by me but we've got about

00:39:42,520 --> 00:39:46,780
five minutes if anyone has comments or

00:39:44,109 --> 00:39:49,740
questions right now they're welcome

00:39:46,780 --> 00:39:49,740
Thanks

00:39:49,990 --> 00:40:08,410
oh all right yeah I do know that you

00:40:06,550 --> 00:40:10,119
maintain some fun packages I do maintain

00:40:08,410 --> 00:40:11,440
a fine package I think your idea of

00:40:10,119 --> 00:40:13,800
putting the flat packages in

00:40:11,440 --> 00:40:16,089
well-defined directories is a great idea

00:40:13,800 --> 00:40:17,920
we could just put that in Debian policy

00:40:16,089 --> 00:40:19,330
that's really easy to do I don't think

00:40:17,920 --> 00:40:21,790
it'd be any controversy there the nice

00:40:19,330 --> 00:40:23,109
thing about policy is that it's it's a

00:40:21,790 --> 00:40:25,839
place where people look to see what they

00:40:23,109 --> 00:40:27,359
should do a policy is never a place that

00:40:25,839 --> 00:40:29,800
says what you must do

00:40:27,359 --> 00:40:31,420
having guidance for packages is always

00:40:29,800 --> 00:40:33,820
helpful packages are always looking for

00:40:31,420 --> 00:40:35,730
what should I be doing here not what I

00:40:33,820 --> 00:40:38,530
must do

00:40:35,730 --> 00:40:40,690
could we put the metadata this extra

00:40:38,530 --> 00:40:42,190
metadata just in the same directory as

00:40:40,690 --> 00:40:44,140
the fonts there is a well-defined

00:40:42,190 --> 00:40:46,180
location for each face now for each

00:40:44,140 --> 00:40:48,339
family yeah could be just with the could

00:40:46,180 --> 00:40:50,440
we construct a file format to put the

00:40:48,339 --> 00:40:52,480
metadata all alongside the fonts in the

00:40:50,440 --> 00:40:54,160
same directory because we given that

00:40:52,480 --> 00:40:55,839
they're given that we have the flight

00:40:54,160 --> 00:40:57,339
path information we could construct the

00:40:55,839 --> 00:40:59,440
file name for the metadata and go find

00:40:57,339 --> 00:41:03,760
it pretty easily right would that work

00:40:59,440 --> 00:41:05,890
in theory yes absolutely the the trick

00:41:03,760 --> 00:41:08,470
there is and this this has come up

00:41:05,890 --> 00:41:12,070
before the gtk folks as the shop

00:41:08,470 --> 00:41:14,140
question yeah and for the general use

00:41:12,070 --> 00:41:15,790
case if you're the font publisher having

00:41:14,140 --> 00:41:17,980
to maintain those two fonts is not ideal

00:41:15,790 --> 00:41:20,200
but if you're the font polish shirt put

00:41:17,980 --> 00:41:23,250
it in the font file right so for us who

00:41:20,200 --> 00:41:28,359
are downstream and there's not already

00:41:23,250 --> 00:41:29,530
an obvious metadata sidecar format we

00:41:28,359 --> 00:41:31,780
could probably find one that's

00:41:29,530 --> 00:41:36,910
compatible somewhere and that would be

00:41:31,780 --> 00:41:41,050
interesting to do but let's see what

00:41:36,910 --> 00:41:42,700
else was it going to say about that yeah

00:41:41,050 --> 00:41:44,200
I think it at this point that's that's

00:41:42,700 --> 00:41:46,300
probably the the big hurdle is that we

00:41:44,200 --> 00:41:48,310
have to determine what format to say

00:41:46,300 --> 00:41:51,010
that in so somebody with fought

00:41:48,310 --> 00:41:54,040
expertise might want to actually come up

00:41:51,010 --> 00:41:55,420
and specify a format and then build a

00:41:54,040 --> 00:41:58,030
library that would allow you to get out

00:41:55,420 --> 00:42:00,369
of that right and yeah somebody with

00:41:58,030 --> 00:42:02,230
experience the field of typography right

00:42:00,369 --> 00:42:03,290
and a degree in that kind of person so

00:42:02,230 --> 00:42:05,600
yeah

00:42:03,290 --> 00:42:07,340
well I and you know the thing is that

00:42:05,600 --> 00:42:10,730
you you want to do that in conjunction

00:42:07,340 --> 00:42:13,730
with whatever's happening with trying to

00:42:10,730 --> 00:42:15,950
track it in a local local database this

00:42:13,730 --> 00:42:17,600
is always is flat configure place is

00:42:15,950 --> 00:42:18,890
fine can't fake a database it should

00:42:17,600 --> 00:42:22,310
contain that additional metadata

00:42:18,890 --> 00:42:24,950
information so my impression from a

00:42:22,310 --> 00:42:26,780
brief conversation with folks is

00:42:24,950 --> 00:42:28,040
that's a little too much it's a little

00:42:26,780 --> 00:42:30,950
it's a little bit outside of font

00:42:28,040 --> 00:42:33,200
configs original intent and so maybe

00:42:30,950 --> 00:42:34,850
that's not maybe that's overkill for

00:42:33,200 --> 00:42:37,460
having fun config do it but I think like

00:42:34,850 --> 00:42:41,630
there was interest in having somewhere

00:42:37,460 --> 00:42:43,640
in the knot config where other stuff you

00:42:41,630 --> 00:42:45,800
anticipate that metadata being used for

00:42:43,640 --> 00:42:49,190
fun matching or font location or is it

00:42:45,800 --> 00:42:51,560
just really for a user just user some

00:42:49,190 --> 00:42:53,060
user interface discovery mechanism well

00:42:51,560 --> 00:42:55,880
there's a lot of potential uses for it

00:42:53,060 --> 00:42:57,890
and the other other big one other than

00:42:55,880 --> 00:42:58,820
just the user facing stuff is what do

00:42:57,890 --> 00:43:01,850
you do when you need to replace a

00:42:58,820 --> 00:43:04,370
missing font in a document exactly and

00:43:01,850 --> 00:43:05,960
so some of that metadata could be used

00:43:04,370 --> 00:43:08,780
if not to automatically choose a

00:43:05,960 --> 00:43:11,600
replacement font to guide you towards a

00:43:08,780 --> 00:43:14,240
good replacement fine and then there's

00:43:11,600 --> 00:43:16,820
potential uses that are in other fields

00:43:14,240 --> 00:43:18,800
like linguistics and translation is like

00:43:16,820 --> 00:43:20,270
I don't I'm not a translator better know

00:43:18,800 --> 00:43:23,900
that translators have a lot of tools

00:43:20,270 --> 00:43:25,850
their disposal and good language support

00:43:23,900 --> 00:43:27,620
and knowing the stylistic things can be

00:43:25,850 --> 00:43:31,040
important to them so I would say those

00:43:27,620 --> 00:43:34,040
are orthogonal use cases it's not all

00:43:31,040 --> 00:43:36,680
just showing these are stuff to play

00:43:34,040 --> 00:43:38,300
around with so there may be some synergy

00:43:36,680 --> 00:43:40,160
with font config that it might not be

00:43:38,300 --> 00:43:41,540
the same thing but you might have a pool

00:43:40,160 --> 00:43:43,940
that would run over the flat config

00:43:41,540 --> 00:43:45,710
database and discover and and construct

00:43:43,940 --> 00:43:57,410
or discover this additional metadata

00:43:45,710 --> 00:43:59,690
yeah okay art of the metadata you

00:43:57,410 --> 00:44:01,430
mentioned like supported character said

00:43:59,690 --> 00:44:02,990
supported language is this this would be

00:44:01,430 --> 00:44:04,550
something that I think would be very

00:44:02,990 --> 00:44:06,650
interesting to have informed country

00:44:04,550 --> 00:44:10,100
because this is important if I select a

00:44:06,650 --> 00:44:14,720
font right and and in case it wasn't

00:44:10,100 --> 00:44:16,640
clear the the the gitlab table that I

00:44:14,720 --> 00:44:18,440
mentioned includes what Fung config

00:44:16,640 --> 00:44:20,059
really does track and it does include

00:44:18,440 --> 00:44:21,380
some of that stuff I don't worry that if

00:44:20,059 --> 00:44:23,390
it's a language thing or not that the

00:44:21,380 --> 00:44:26,599
language turning language support can be

00:44:23,390 --> 00:44:29,599
tricky because people don't always agree

00:44:26,599 --> 00:44:32,660
on what support means so in the sense I

00:44:29,599 --> 00:44:35,299
I would strongly support to to add even

00:44:32,660 --> 00:44:37,220
it's an ad hoc decision to a specific

00:44:35,299 --> 00:44:39,829
definition for a sidecar for phones

00:44:37,220 --> 00:44:42,260
where we can save the metadata of course

00:44:39,829 --> 00:44:44,029
we can if there is support from other

00:44:42,260 --> 00:44:46,549
libraries ever we can always change the

00:44:44,029 --> 00:44:48,230
sidecut definitions whatever but sounds

00:44:46,549 --> 00:44:49,549
good I was just given the flag that we

00:44:48,230 --> 00:44:51,339
all need to rush outside for the group

00:44:49,549 --> 00:44:53,750
photo so I guess we're out of time but

00:44:51,339 --> 00:44:55,910
thank you for your comments and we can

00:44:53,750 --> 00:45:00,789
keep talking during the group photo

00:44:55,910 --> 00:45:00,789
maybe even all right thanks

00:45:01,900 --> 00:45:06,919

YouTube URL: https://www.youtube.com/watch?v=KJCnxGZCWgM


