Title: Think Design About Pretty Kubectl Plugins - Aya Igarashi, Z Lab Corporation
Publication date: 2020-08-27
Playlist: KubeCon + CloudNativeCon Europe 2020 - Virtual
Description: 
	Don’t miss out! Join us at our upcoming events: EnvoyCon Virtual on October 15 and KubeCon + CloudNativeCon North America 2020 Virtual from November 17-20. Learn more at https://kubecon.io. The conferences feature presentations from developers and end users of Kubernetes, Prometheus, Envoy, and all of the other CNCF-hosted projects.  

Think Design About Pretty Kubectl Plugins - Aya Igarashi, Z Lab Corporation 

What is a well-designed CLI? How do we develop it?  Kubernetes is widely spread and people start to be interested in Day2 Operation. Along with this, the number of kubectl plugins is developed recently.  In this presentation, Aya Igarashi will talk about how to improve the design and develop a kubectl plugin based on her experience. She develops kubectl-bindrole which is a kubectl plugin that summarizes permissions for an RBAC account. https://github.com/Ladicle/kubectl-bindrole  This session will be helpful for people who want to develop kubectl plugins, as well as for general CLI development.

https://sched.co/Zeq0
Captions: 
	00:00:00,320 --> 00:00:05,920
hi i'm maya today i'm going to talk

00:00:03,439 --> 00:00:07,680
about the design of pretty cool captive

00:00:05,920 --> 00:00:09,920
plugin

00:00:07,680 --> 00:00:12,000
you know we spend a lot of time in the

00:00:09,920 --> 00:00:14,240
terminal

00:00:12,000 --> 00:00:15,360
many of today's terminal generators

00:00:14,240 --> 00:00:18,960
support smart

00:00:15,360 --> 00:00:20,800
16 rc cars also some of them can handle

00:00:18,960 --> 00:00:24,160
not only ascii curls but

00:00:20,800 --> 00:00:28,880
unicodes such as emoji however

00:00:24,160 --> 00:00:28,880
many commands still use only ascii codes

00:00:29,039 --> 00:00:34,880
so what's the benefit of a pretty

00:00:32,559 --> 00:00:36,640
command

00:00:34,880 --> 00:00:38,480
does a pretty command make you feel

00:00:36,640 --> 00:00:41,520
happy of course

00:00:38,480 --> 00:00:43,920
but that's not all the other reason

00:00:41,520 --> 00:00:45,039
is that the pretty command increases our

00:00:43,920 --> 00:00:47,520
understanding

00:00:45,039 --> 00:00:49,200
for example let's compare this weaker

00:00:47,520 --> 00:00:51,760
weather forecast

00:00:49,200 --> 00:00:53,680
the left side uses already alphabet and

00:00:51,760 --> 00:00:56,000
right side uses emoji

00:00:53,680 --> 00:00:57,199
perhaps you can grasp the information

00:00:56,000 --> 00:01:00,719
quicker from the right

00:00:57,199 --> 00:01:01,359
example so why don't we develop a

00:01:00,719 --> 00:01:03,840
practice

00:01:01,359 --> 00:01:03,840
command

00:01:04,400 --> 00:01:09,119
let's get back to the plugin coupe

00:01:06,560 --> 00:01:11,280
cattle is a powerful tool on its own

00:01:09,119 --> 00:01:15,920
but programming features allow you to

00:01:11,280 --> 00:01:15,920
extend it and stream run your operation

00:01:16,000 --> 00:01:20,640
the cubecat plugin is a function to add

00:01:18,960 --> 00:01:24,159
arbitration commands

00:01:20,640 --> 00:01:26,400
the mechanism is simple cubecattle just

00:01:24,159 --> 00:01:29,680
runs an executable file

00:01:26,400 --> 00:01:32,479
that has cubecattle as a prefix in its

00:01:29,680 --> 00:01:32,479
program name

00:01:32,720 --> 00:01:36,000
it sounds hard to implement it from

00:01:34,720 --> 00:01:39,360
scratch but

00:01:36,000 --> 00:01:42,479
the library to make development easier

00:01:39,360 --> 00:01:43,520
for example you can use cry runtime to

00:01:42,479 --> 00:01:46,000
easily define

00:01:43,520 --> 00:01:46,640
commonly used arguments like nation

00:01:46,000 --> 00:01:50,320
space

00:01:46,640 --> 00:01:52,560
and cube conflict for example also

00:01:50,320 --> 00:01:54,560
quiet girls support you many features

00:01:52,560 --> 00:01:58,560
such as cluster authentication

00:01:54,560 --> 00:01:58,560
and kx resource management

00:01:59,280 --> 00:02:03,040
next i'll talk about harvard thought

00:02:01,759 --> 00:02:06,399
about the design

00:02:03,040 --> 00:02:07,759
of the rose sun plugin the rose sum is a

00:02:06,399 --> 00:02:11,039
cubic category plugin

00:02:07,759 --> 00:02:13,120
to summarize our work resources if you

00:02:11,039 --> 00:02:15,440
try to do the same thing with

00:02:13,120 --> 00:02:16,640
just the standard command you will need

00:02:15,440 --> 00:02:19,840
to run

00:02:16,640 --> 00:02:21,360
ctrl gap many times and compare all

00:02:19,840 --> 00:02:24,080
results

00:02:21,360 --> 00:02:24,800
but it's too hard so i'd rather i

00:02:24,080 --> 00:02:28,000
developed

00:02:24,800 --> 00:02:28,720
this to solve this problem the actual

00:02:28,000 --> 00:02:32,080
artwork

00:02:28,720 --> 00:02:36,319
looks like this how does it work it's

00:02:32,080 --> 00:02:38,800
easy to read right

00:02:36,319 --> 00:02:39,680
however i couldn't develop this from the

00:02:38,800 --> 00:02:43,360
beginning

00:02:39,680 --> 00:02:46,720
i did several steps to make this design

00:02:43,360 --> 00:02:50,239
step 1 this command simply outputs

00:02:46,720 --> 00:02:52,879
all rows that the specified subject has

00:02:50,239 --> 00:02:53,840
but it was not possible to grasp the

00:02:52,879 --> 00:02:57,120
whole picture

00:02:53,840 --> 00:02:58,720
at once this is because the verbs array

00:02:57,120 --> 00:03:02,640
in the middle of the figure

00:02:58,720 --> 00:03:05,840
shows what the log can do but what they

00:03:02,640 --> 00:03:05,840
not can't do

00:03:08,720 --> 00:03:13,120
except for special bars there are only

00:03:11,280 --> 00:03:15,840
eight basic brands such as

00:03:13,120 --> 00:03:18,879
right and rest therefore to solve this

00:03:15,840 --> 00:03:20,239
problem i expressly compactly by using

00:03:18,879 --> 00:03:23,280
symbols and colors

00:03:20,239 --> 00:03:24,159
in a table format but they are still

00:03:23,280 --> 00:03:26,959
problems

00:03:24,159 --> 00:03:28,080
the role allows multiple definitions for

00:03:26,959 --> 00:03:30,720
the same api

00:03:28,080 --> 00:03:32,000
resources some of them are defined

00:03:30,720 --> 00:03:35,840
separately such as

00:03:32,000 --> 00:03:37,120
pots attached in the figure the order is

00:03:35,840 --> 00:03:39,840
also random

00:03:37,120 --> 00:03:42,640
which make it difficult to match them in

00:03:39,840 --> 00:03:42,640
human mind

00:03:42,879 --> 00:03:46,239
as a result i made an output outfit

00:03:45,280 --> 00:03:49,280
humor-friendly

00:03:46,239 --> 00:03:50,480
by dupricating and sorting appear

00:03:49,280 --> 00:03:53,120
resources

00:03:50,480 --> 00:03:55,519
in this way it's difficult to make an

00:03:53,120 --> 00:03:58,400
ideal design from the beginning

00:03:55,519 --> 00:03:59,120
so it's better to fix the point you care

00:03:58,400 --> 00:04:02,319
about

00:03:59,120 --> 00:04:02,319
step by step

00:04:03,360 --> 00:04:07,360
finally here are some tips for

00:04:05,200 --> 00:04:09,840
developing a pretty command

00:04:07,360 --> 00:04:10,560
the first is to provide the option to

00:04:09,840 --> 00:04:13,280
disable

00:04:10,560 --> 00:04:14,000
unc caro this will allow you to

00:04:13,280 --> 00:04:17,120
integrate

00:04:14,000 --> 00:04:20,400
with tools that don't support anti-color

00:04:17,120 --> 00:04:23,440
such as continuous integration tool

00:04:20,400 --> 00:04:26,320
the answer is to use only 40 cutters

00:04:23,440 --> 00:04:27,840
except for black and white we use

00:04:26,320 --> 00:04:30,639
different color schemes

00:04:27,840 --> 00:04:33,520
in the timer so by limiting the colors

00:04:30,639 --> 00:04:38,000
make the text readable

00:04:33,520 --> 00:04:38,000

YouTube URL: https://www.youtube.com/watch?v=ACRPHEhliWI


