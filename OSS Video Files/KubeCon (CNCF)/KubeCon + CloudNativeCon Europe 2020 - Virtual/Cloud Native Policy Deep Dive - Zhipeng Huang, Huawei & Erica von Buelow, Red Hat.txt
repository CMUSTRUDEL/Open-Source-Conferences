Title: Cloud Native Policy Deep Dive - Zhipeng Huang, Huawei & Erica von Buelow, Red Hat
Publication date: 2020-08-27
Playlist: KubeCon + CloudNativeCon Europe 2020 - Virtual
Description: 
	Don’t miss out! Join us at our upcoming events: EnvoyCon Virtual on October 15 and KubeCon + CloudNativeCon North America 2020 Virtual from November 17-20. Learn more at https://kubecon.io. The conferences feature presentations from developers and end users of Kubernetes, Prometheus, Envoy, and all of the other CNCF-hosted projects.  

Cloud Native Policy Deep Dive - Zhipeng Huang, Huawei & Erica von Buelow, Red Hat 

In this session we will discuss many open source initiatives that the Policy WG have been discussing, including policy formal verification, Policy Violation CRD, Runtime Policy Interface and so forth

https://sched.co/ZeuS
Captions: 
	00:00:00,080 --> 00:00:06,879
okay welcome to the kubecon europe

00:00:04,000 --> 00:00:08,080
uh virtual summit this is the policy

00:00:06,879 --> 00:00:11,120
working group deep dive

00:00:08,080 --> 00:00:14,960
session um i'm

00:00:11,120 --> 00:00:18,640
from huawei and america

00:00:14,960 --> 00:00:18,640
hi i'm erica from red hat

00:00:18,800 --> 00:00:22,880
okay uh we're going to be talking about

00:00:21,760 --> 00:00:25,599
all the

00:00:22,880 --> 00:00:26,400
development uh happening in the policy

00:00:25,599 --> 00:00:32,160
working group

00:00:26,400 --> 00:00:35,840
in kubernetes as well as at the sincere

00:00:32,160 --> 00:00:38,079
seek security level okay we'll be just

00:00:35,840 --> 00:00:40,640
basically talking through all the

00:00:38,079 --> 00:00:43,760
interesting things

00:00:40,640 --> 00:00:46,960
okay uh this is who we are

00:00:43,760 --> 00:00:49,360
from the markdown

00:00:46,960 --> 00:00:49,360
files

00:00:50,239 --> 00:00:54,800
uh join us regularly on wednesdays or

00:00:53,600 --> 00:00:59,280
every other wednesdays

00:00:54,800 --> 00:01:02,719
around 4 p.m we should update that

00:00:59,280 --> 00:01:07,760
yeah eight a.m pacific

00:01:02,719 --> 00:01:07,760
yeah in the morning

00:01:09,280 --> 00:01:14,240
yes that's why i missed it several times

00:01:14,479 --> 00:01:19,040
it's good for east coast and europe

00:01:16,240 --> 00:01:20,960
especially yep so

00:01:19,040 --> 00:01:23,119
we're working to provide an overall

00:01:20,960 --> 00:01:25,280
architecture that describes current

00:01:23,119 --> 00:01:27,200
policy related implications

00:01:25,280 --> 00:01:29,200
and discussing everything else future

00:01:27,200 --> 00:01:31,119
policy and policy architecture for

00:01:29,200 --> 00:01:34,720
kubernetes and how that extends into

00:01:31,119 --> 00:01:38,000
the cloud native ecosystem yep

00:01:34,720 --> 00:01:41,840
we have been running for like two years

00:01:38,000 --> 00:01:41,840
almost two years now

00:01:42,320 --> 00:01:45,280
yep yeah

00:01:46,240 --> 00:01:51,680
uh yeah as long as basically around the

00:01:48,479 --> 00:01:51,680
acquisition of korva

00:01:52,320 --> 00:01:56,320
does something couple acquisitions later

00:01:55,360 --> 00:02:01,759
we're still at it

00:01:56,320 --> 00:02:01,759
because turns out policy still matters

00:02:01,920 --> 00:02:09,200
okay i think yeah this lies about

00:02:05,840 --> 00:02:09,759
um so i think we we've been seeing like

00:02:09,200 --> 00:02:12,959
trends

00:02:09,759 --> 00:02:16,640
uh like uh tidal waves um

00:02:12,959 --> 00:02:19,040
so kubernetes uh like envoy uh

00:02:16,640 --> 00:02:20,640
no doubt is the first wave about the

00:02:19,040 --> 00:02:23,440
cognitive platform

00:02:20,640 --> 00:02:24,959
uh then we see the emphasis on

00:02:23,440 --> 00:02:28,160
prometheus

00:02:24,959 --> 00:02:30,000
jaeger open tracing people

00:02:28,160 --> 00:02:31,599
are starting to focusing on the

00:02:30,000 --> 00:02:35,120
observability

00:02:31,599 --> 00:02:37,599
and now i think people

00:02:35,120 --> 00:02:40,480
are really uh turning attentions to

00:02:37,599 --> 00:02:44,400
policies and securities right we

00:02:40,480 --> 00:02:48,160
using oppa are making like uh

00:02:44,400 --> 00:02:51,360
big stages uh cloud native uh

00:02:48,160 --> 00:02:54,959
top notary from the miu team

00:02:51,360 --> 00:02:59,360
and we see falco and

00:02:54,959 --> 00:02:59,360
a couple other really interesting

00:03:02,840 --> 00:03:08,400
projects

00:03:04,800 --> 00:03:10,800
yep i think this is where uh

00:03:08,400 --> 00:03:13,760
me and robert getting into really

00:03:10,800 --> 00:03:16,959
interesting discussion on the slide

00:03:13,760 --> 00:03:18,159
and what is cloud native policy what is

00:03:16,959 --> 00:03:20,879
cloud is your policy well

00:03:18,159 --> 00:03:21,599
this is i think that the bully points

00:03:20,879 --> 00:03:24,959
are

00:03:21,599 --> 00:03:28,879
um like the things we hope

00:03:24,959 --> 00:03:32,080
uh the client policy could become um

00:03:28,879 --> 00:03:35,200
so i think it goes beyond auditing and

00:03:32,080 --> 00:03:38,720
compliance by that i mean like

00:03:35,200 --> 00:03:42,319
for we are seeing things for

00:03:38,720 --> 00:03:45,200
like resource management and

00:03:42,319 --> 00:03:46,840
uh probably many other interesting areas

00:03:45,200 --> 00:03:49,200
so it's a

00:03:46,840 --> 00:03:50,239
all-encompassing a policy is an

00:03:49,200 --> 00:03:53,840
all-encompassing

00:03:50,239 --> 00:03:53,840
uh thing

00:03:54,959 --> 00:03:58,879
and i think robert makes a good point

00:03:58,239 --> 00:04:02,720
like

00:03:58,879 --> 00:04:03,840
it's via a a correct tooling that policy

00:04:02,720 --> 00:04:06,640
could help

00:04:03,840 --> 00:04:07,120
automate like security and many other

00:04:06,640 --> 00:04:10,159
areas

00:04:07,120 --> 00:04:14,799
but policy itself um

00:04:10,159 --> 00:04:18,320
rarely automates security yeah

00:04:14,799 --> 00:04:21,519
and yeah policies are usually

00:04:18,320 --> 00:04:25,520
like logics so it's definitely

00:04:21,519 --> 00:04:25,520
it's definitely different from config

00:04:26,400 --> 00:04:32,720
i've been having problems about like

00:04:29,440 --> 00:04:35,199
uh uh just having a yamo

00:04:32,720 --> 00:04:36,160
based config system you call it a

00:04:35,199 --> 00:04:40,800
declarative

00:04:36,160 --> 00:04:44,639
system it's not not necessarily

00:04:40,800 --> 00:04:48,000
yeah not necessarily so but if you have

00:04:44,639 --> 00:04:50,960
a policy based system it's it will be a

00:04:48,000 --> 00:04:52,720
really nice declarative system meaning

00:04:50,960 --> 00:04:56,080
you could talk logic

00:04:52,720 --> 00:04:57,520
uh like human readable logic to that

00:04:56,080 --> 00:05:01,840
system

00:04:57,520 --> 00:05:04,960
yeah that's very declarative okay

00:05:01,840 --> 00:05:05,600
end to end abstraction yeah we are not

00:05:04,960 --> 00:05:09,680
there yet

00:05:05,600 --> 00:05:13,360
but hopefully we can have

00:05:09,680 --> 00:05:17,199
like uh the policy descriptions and

00:05:13,360 --> 00:05:20,960
policy driven mechanism on each layer

00:05:17,199 --> 00:05:24,000
um so we see oppa

00:05:20,960 --> 00:05:27,919
for the um the policy control

00:05:24,000 --> 00:05:31,120
on a pretty high level um

00:05:27,919 --> 00:05:34,560
i think for a policy agent yeah

00:05:31,120 --> 00:05:38,080
open policy agent uh we have like

00:05:34,560 --> 00:05:41,680
psyllium um for a

00:05:38,080 --> 00:05:45,520
like policy toward ebpf we have

00:05:41,680 --> 00:05:48,720
falco doing things for runtime policy

00:05:45,520 --> 00:05:51,360
that's pretty low level right and

00:05:48,720 --> 00:05:54,639
hopefully in the near future we can have

00:05:51,360 --> 00:05:54,639
a multi-layer

00:05:55,440 --> 00:05:58,720
policy mechanisms then we have the

00:05:57,280 --> 00:06:01,919
anterior abstraction like

00:05:58,720 --> 00:06:02,720
every year at every layer we have a way

00:06:01,919 --> 00:06:06,639
to talk to

00:06:02,720 --> 00:06:10,400
them using logic

00:06:06,639 --> 00:06:13,199
uh to talk to them and

00:06:10,400 --> 00:06:14,639
yeah bring libraries to a cloud right

00:06:13,199 --> 00:06:18,400
it's it's it's human

00:06:14,639 --> 00:06:19,600
toxin logic not config files that's

00:06:18,400 --> 00:06:22,880
that's

00:06:19,600 --> 00:06:24,880
that's machine language but

00:06:22,880 --> 00:06:27,039
yeah that that's just something i i

00:06:24,880 --> 00:06:27,039
thought

00:06:27,919 --> 00:06:34,240
yeah it's a whereas config

00:06:31,120 --> 00:06:37,680
is you're about it's not the policy

00:06:34,240 --> 00:06:41,680
can be configured

00:06:37,680 --> 00:06:44,000
and configuration can

00:06:41,680 --> 00:06:45,440
yeah they're related but not the same

00:06:44,000 --> 00:06:47,120
yeah i think that's interesting that

00:06:45,440 --> 00:06:50,400
policy is the dynamic

00:06:47,120 --> 00:06:52,479
in some sense or how do you

00:06:50,400 --> 00:06:54,400
take a set of principles and make

00:06:52,479 --> 00:07:03,840
decisions based on

00:06:54,400 --> 00:07:03,840
dynamic data in a cluster

00:07:05,520 --> 00:07:12,240
sorry i forget i'm the one pushing next

00:07:08,720 --> 00:07:15,840
whoops okay

00:07:12,240 --> 00:07:16,479
yep i i i think i incorporate a lot of

00:07:15,840 --> 00:07:19,599
robert's

00:07:16,479 --> 00:07:19,599
comments already here

00:07:20,319 --> 00:07:25,599
yeah um so uh

00:07:23,440 --> 00:07:26,880
i think he he made a great point uh

00:07:25,599 --> 00:07:30,720
controls are needed

00:07:26,880 --> 00:07:34,000
um because human policies

00:07:30,720 --> 00:07:37,120
defines what controls and uh what

00:07:34,000 --> 00:07:40,319
implements that control yeah that's

00:07:37,120 --> 00:07:43,120
that's very nicely put

00:07:40,319 --> 00:07:46,080
and we have very domain specific policy

00:07:43,120 --> 00:07:46,080
implementations

00:07:46,879 --> 00:07:52,800
and hopefully on the like the

00:07:50,000 --> 00:07:53,280
expression evaluation heuristic level we

00:07:52,800 --> 00:07:58,960
can

00:07:53,280 --> 00:08:01,360
have something really generalized and uh

00:07:58,960 --> 00:08:03,520
also the architecture we can we can have

00:08:01,360 --> 00:08:06,240
something

00:08:03,520 --> 00:08:06,240
really general

00:08:10,000 --> 00:08:15,759
yeah i think yeah quickly

00:08:13,759 --> 00:08:17,039
go over the yeah this is how policy

00:08:15,759 --> 00:08:19,680
working will interact with

00:08:17,039 --> 00:08:19,680
other seeks

00:08:20,800 --> 00:08:27,840
yeah basically all of them but

00:08:23,840 --> 00:08:27,840
yeah we are pulling the strings so

00:08:29,919 --> 00:08:34,159
mustard yeah some of the places though

00:08:32,719 --> 00:08:35,279
that it really interacts or when you're

00:08:34,159 --> 00:08:36,959
talking about the network

00:08:35,279 --> 00:08:38,719
which is the first area people often

00:08:36,959 --> 00:08:41,120
think about configuring

00:08:38,719 --> 00:08:41,120
fire

00:08:53,040 --> 00:08:57,519
cloud native's even bigger than that

00:08:55,279 --> 00:08:57,519
yeah

00:08:58,399 --> 00:09:06,320
just is this walking on your screen

00:09:01,680 --> 00:09:06,320
nope nope ah there we go

00:09:07,360 --> 00:09:16,560
anyway okay anyway you got a picture

00:09:12,560 --> 00:09:20,480
uh here we go yeah let's

00:09:16,560 --> 00:09:20,480
see next next

00:09:20,959 --> 00:09:25,120
here we go i think we can also quickly

00:09:24,320 --> 00:09:29,760
go over the

00:09:25,120 --> 00:09:32,800
things we already already

00:09:29,760 --> 00:09:36,480
done yeah some of the areas that we've

00:09:32,800 --> 00:09:36,880
been exploring are on the very abstract

00:09:36,480 --> 00:09:40,640
side

00:09:36,880 --> 00:09:40,640
is some formal verification

00:09:41,200 --> 00:09:46,560
how do we go from a set of

00:09:44,399 --> 00:09:50,240
yaml files to knowing that it does what

00:09:46,560 --> 00:09:53,120
you want it to do

00:09:50,240 --> 00:09:53,120
so we have some

00:09:54,240 --> 00:09:57,680
example of it yeah i think this is

00:09:56,880 --> 00:10:00,959
robert's

00:09:57,680 --> 00:10:05,360
uh guardian

00:10:00,959 --> 00:10:08,640
proposal yeah

00:10:05,360 --> 00:10:09,519
i think you see this a lot of how do you

00:10:08,640 --> 00:10:12,000
know that

00:10:09,519 --> 00:10:13,279
no one has access to a given resource

00:10:12,000 --> 00:10:16,240
when you have

00:10:13,279 --> 00:10:18,079
defined policies in terms of dynamic or

00:10:16,240 --> 00:10:22,399
labels or label selectors for

00:10:18,079 --> 00:10:25,279
instance in our back system can you

00:10:22,399 --> 00:10:25,680
take some amount of okay well we can

00:10:25,279 --> 00:10:27,200
actually

00:10:25,680 --> 00:10:29,920
go through and figure that out formally

00:10:27,200 --> 00:10:35,120
and make sure that what you intended

00:10:29,920 --> 00:10:35,120
and how you described your intent work

00:10:36,079 --> 00:10:39,440
we have a pilot project called guardian

00:10:38,880 --> 00:10:42,800
please

00:10:39,440 --> 00:10:46,320
come and participate

00:10:42,800 --> 00:10:49,680
a lot of math

00:10:46,320 --> 00:10:52,800
all you mathy people out there yeah

00:10:49,680 --> 00:10:52,800
perfect place to come in

00:10:54,320 --> 00:11:01,600
i mean who doesn't love some math

00:10:58,240 --> 00:11:06,079
maybe hey

00:11:01,600 --> 00:11:09,600
all right all right so go for it

00:11:06,079 --> 00:11:12,320
yeah yeah we

00:11:09,600 --> 00:11:13,279
we haven't done a lot uh in this year

00:11:12,320 --> 00:11:18,160
but

00:11:13,279 --> 00:11:18,160
in the past the white paper yeah the

00:11:18,480 --> 00:11:25,120
really interesting part is we

00:11:21,600 --> 00:11:28,160
did a lot of case studies uh in like

00:11:25,120 --> 00:11:31,200
interesting project and that

00:11:28,160 --> 00:11:34,560
the team came over to talk about what

00:11:31,200 --> 00:11:37,920
uh what they are using policy for

00:11:34,560 --> 00:11:41,120
and uh what they are hoping policy could

00:11:37,920 --> 00:11:43,040
could achieve yeah we try to keep

00:11:41,120 --> 00:11:44,160
tabs on all the projects that are coming

00:11:43,040 --> 00:11:47,440
up and

00:11:44,160 --> 00:11:51,120
connect people as

00:11:47,440 --> 00:11:52,959
needed to you know make and find common

00:11:51,120 --> 00:11:56,079
patterns see what's catching on

00:11:52,959 --> 00:11:59,440
where for instance kubernetes

00:11:56,079 --> 00:12:03,440
is lacking or where

00:11:59,440 --> 00:12:05,760
there can be some collaboration

00:12:03,440 --> 00:12:06,880
we will get to some of the collaboration

00:12:05,760 --> 00:12:10,320
later

00:12:06,880 --> 00:12:12,399
yep also we get to geek out

00:12:10,320 --> 00:12:13,360
and ask questions to all of the really

00:12:12,399 --> 00:12:16,720
cool projects

00:12:13,360 --> 00:12:17,600
so if these are interesting uh you can

00:12:16,720 --> 00:12:21,360
check on youtube

00:12:17,600 --> 00:12:24,720
and for the presentations yep

00:12:21,360 --> 00:12:25,440
lots of kubernetes oppa so open policy

00:12:24,720 --> 00:12:29,600
agent

00:12:25,440 --> 00:12:33,760
gatekeeper project for using

00:12:29,600 --> 00:12:36,720
open policy agent for kubernetes policy

00:12:33,760 --> 00:12:36,720
admission controller

00:12:37,279 --> 00:12:44,240
istio of course the cl

00:12:40,320 --> 00:12:46,480
uh surface mesh helium is also is it

00:12:44,240 --> 00:12:48,639
considered a service mesh at all

00:12:46,480 --> 00:12:50,240
as well you know i think sediment is

00:12:48,639 --> 00:12:53,839
like a level

00:12:50,240 --> 00:12:55,680
uh level uh yeah network networking

00:12:53,839 --> 00:13:00,000
policy

00:12:55,680 --> 00:13:03,200
the uh with the uh

00:13:00,000 --> 00:13:05,360
yeah though uh using bpf we

00:13:03,200 --> 00:13:07,680
yeah yeah they're funny yeah yeah fun

00:13:05,360 --> 00:13:07,680
area

00:13:07,760 --> 00:13:14,959
spoofy spire for service discovery

00:13:11,279 --> 00:13:18,320
and automation tough notary in

00:13:14,959 --> 00:13:21,200
total toto and obtain about securing the

00:13:18,320 --> 00:13:23,839
supply chain

00:13:21,200 --> 00:13:23,839
caverno

00:13:24,560 --> 00:13:28,160
that's another kubernetes policy

00:13:26,560 --> 00:13:32,320
admission control

00:13:28,160 --> 00:13:35,279
no cloud custodian verifying your cloud

00:13:32,320 --> 00:13:35,839
configurations and like aws for instance

00:13:35,279 --> 00:13:38,959
with

00:13:35,839 --> 00:13:38,959
am policies

00:13:39,600 --> 00:13:48,079
k rails from cruz

00:13:42,880 --> 00:13:51,839
from the sales driving startup

00:13:48,079 --> 00:13:53,040
and yeah and then we

00:13:51,839 --> 00:13:55,839
dove in a little bit more to pod

00:13:53,040 --> 00:13:58,240
security policies and how they can be

00:13:55,839 --> 00:13:59,199
work with gate or how gatekeeper can

00:13:58,240 --> 00:14:03,279
implement

00:13:59,199 --> 00:14:07,519
pod security policies yup

00:14:03,279 --> 00:14:07,519
let's see we weren't looking

00:14:11,519 --> 00:14:18,000
do you want to talk about okay

00:14:14,800 --> 00:14:20,720
yeah um yeah so i

00:14:18,000 --> 00:14:21,600
i think jim especially gene has done a

00:14:20,720 --> 00:14:25,920
lot of work

00:14:21,600 --> 00:14:25,920
uh really great work and

00:14:26,480 --> 00:14:32,800
yeah kiberno is a can we see another

00:14:30,079 --> 00:14:32,800
policy engine

00:14:32,880 --> 00:14:36,079
in addition to oppa

00:14:38,560 --> 00:14:44,240
for kubernetes oh but

00:14:42,480 --> 00:14:45,920
oprah as a whole system right that

00:14:44,240 --> 00:14:48,800
contains a

00:14:45,920 --> 00:14:50,639
a link policy specific language to

00:14:48,800 --> 00:14:54,160
implement a database to store

00:14:50,639 --> 00:14:57,760
the policies uh the you know certain

00:14:54,160 --> 00:14:59,920
plugins the agents to help you enforce

00:14:57,760 --> 00:15:03,760
the policy

00:14:59,920 --> 00:15:05,440
that's really powerful but

00:15:03,760 --> 00:15:07,279
sometimes that's more than everyone

00:15:05,440 --> 00:15:09,040
wants for kubernetes

00:15:07,279 --> 00:15:10,480
one of the things there are certain kind

00:15:09,040 --> 00:15:11,600
of cases that you would like to just

00:15:10,480 --> 00:15:14,240
define in some

00:15:11,600 --> 00:15:15,680
kubernetes resources have a standardized

00:15:14,240 --> 00:15:16,959
way and have that enforced within the

00:15:15,680 --> 00:15:19,680
cluster

00:15:16,959 --> 00:15:20,320
yeah running so that's where caverno

00:15:19,680 --> 00:15:24,800
comes

00:15:20,320 --> 00:15:28,000
coming in where upon

00:15:24,800 --> 00:15:29,279
creating a namespace what kind of

00:15:28,000 --> 00:15:32,240
certain resources

00:15:29,279 --> 00:15:33,600
automatically need to be created for

00:15:32,240 --> 00:15:37,600
instance

00:15:33,600 --> 00:15:40,480
uh role bindings and other controls

00:15:37,600 --> 00:15:42,079
uh block those who shouldn't be able to

00:15:40,480 --> 00:15:45,199
do something

00:15:42,079 --> 00:15:49,040
and more specific validation or

00:15:45,199 --> 00:15:51,120
mutation control markings

00:15:49,040 --> 00:15:52,240
resources automatically with certain

00:15:51,120 --> 00:15:56,240
labels

00:15:52,240 --> 00:15:59,600
or you know directing pods

00:15:56,240 --> 00:16:02,320
uh in their scheduling automatically

00:15:59,600 --> 00:16:06,000
based on the namespace

00:16:02,320 --> 00:16:10,079
or validating that only certain

00:16:06,000 --> 00:16:12,320
labels are used those sorts of things

00:16:10,079 --> 00:16:12,320
yep

00:16:14,000 --> 00:16:17,839
cloud custodian i think cloud consulting

00:16:16,399 --> 00:16:20,240
is another really interesting

00:16:17,839 --> 00:16:20,240
project

00:16:20,880 --> 00:16:25,040
they are mostly like working on the

00:16:23,199 --> 00:16:28,639
cloud level right

00:16:25,040 --> 00:16:32,560
they yeah

00:16:28,639 --> 00:16:34,160
they there is into clear boundary

00:16:32,560 --> 00:16:37,279
necessarily between like

00:16:34,160 --> 00:16:40,399
your cluster your workloads and the

00:16:37,279 --> 00:16:41,600
platform the cloud or you know resources

00:16:40,399 --> 00:16:45,199
it's running on

00:16:41,600 --> 00:16:46,639
so securing that all across a consistent

00:16:45,199 --> 00:16:49,199
way is important

00:16:46,639 --> 00:16:50,000
yeah multi-cloud is a big thing these

00:16:49,199 --> 00:16:52,959
days

00:16:50,000 --> 00:16:54,720
but that means how do you consistently

00:16:52,959 --> 00:16:57,120
you might use terraform to

00:16:54,720 --> 00:16:58,240
consistently provision your

00:16:57,120 --> 00:17:01,600
infrastructure

00:16:58,240 --> 00:17:02,399
but now how do you ensure that you have

00:17:01,600 --> 00:17:04,400
your

00:17:02,399 --> 00:17:07,039
policies and access controls for

00:17:04,400 --> 00:17:11,199
instance for all of the different clouds

00:17:07,039 --> 00:17:11,199
done correctly yep

00:17:11,280 --> 00:17:19,199
that is where cloud custodian comes in

00:17:14,640 --> 00:17:22,480
that's a nice pitch for the

00:17:19,199 --> 00:17:22,480
multi-cloud story

00:17:23,120 --> 00:17:30,640
it's it's a big use case oh yeah yeah

00:17:26,720 --> 00:17:33,840
yeah definitely all right

00:17:30,640 --> 00:17:33,840
here we go

00:17:34,080 --> 00:17:40,160
yeah i i still remember they uh

00:17:37,120 --> 00:17:40,880
they had a great presentation i think

00:17:40,160 --> 00:17:44,880
they mentioned

00:17:40,880 --> 00:17:48,160
they they actually use google groups for

00:17:44,880 --> 00:17:51,760
for their like um uh

00:17:48,160 --> 00:17:54,559
tendencies uh system which is really

00:17:51,760 --> 00:17:54,559
really interesting

00:17:54,960 --> 00:17:58,960
thinking from their base from like the

00:17:57,520 --> 00:18:02,640
uh

00:17:58,960 --> 00:18:05,440
employee level all the way down

00:18:02,640 --> 00:18:07,919
yeah i think that makes sense yeah

00:18:05,440 --> 00:18:11,440
dimension they are running a really big

00:18:07,919 --> 00:18:15,120
workload uh on kubernetes

00:18:11,440 --> 00:18:18,160
and like each department has to be

00:18:15,120 --> 00:18:20,480
isolated uh

00:18:18,160 --> 00:18:22,080
from each other for for whatever reason

00:18:20,480 --> 00:18:25,360
and

00:18:22,080 --> 00:18:27,760
then they have the k rail developed

00:18:25,360 --> 00:18:30,400
to deal with their specific uh

00:18:27,760 --> 00:18:30,400
situations

00:18:35,280 --> 00:18:41,200
hard security policies

00:18:39,039 --> 00:18:44,000
so what's the latest i i haven't been

00:18:41,200 --> 00:18:46,400
able to catch up with that

00:18:44,000 --> 00:18:47,840
um i need to check the latest on that

00:18:46,400 --> 00:18:51,039
issue

00:18:47,840 --> 00:18:51,039
uh what issue is it

00:18:51,600 --> 00:18:58,320
like has psp entirely like

00:18:55,280 --> 00:19:00,799
retired and other things going to

00:18:58,320 --> 00:19:04,960
gatekeeper

00:19:00,799 --> 00:19:08,480
no that that is in some sense

00:19:04,960 --> 00:19:08,480
never 100 going to

00:19:08,880 --> 00:19:11,840
happen

00:19:21,280 --> 00:19:25,840
i will find

00:19:26,160 --> 00:19:29,840
the issue at some point

00:19:30,240 --> 00:19:35,120
okay once

00:19:36,000 --> 00:19:39,840
google docs can load

00:19:42,160 --> 00:19:53,840
i swear there was

00:20:00,080 --> 00:20:07,840
okay that was a bad

00:20:11,919 --> 00:20:18,720
sorry no worse

00:20:15,280 --> 00:20:19,280
well anyways seek off session possibly

00:20:18,720 --> 00:20:23,360
we

00:20:19,280 --> 00:20:26,480
will mention the progress on psp

00:20:23,360 --> 00:20:30,000
esps are a necessary and

00:20:26,480 --> 00:20:34,559
used kubernetes

00:20:30,000 --> 00:20:36,960
built-in mechanism to ensure pods

00:20:34,559 --> 00:20:39,840
that don't have proper provisions are

00:20:36,960 --> 00:20:44,240
run in less privileged contexts

00:20:39,840 --> 00:20:46,159
it has it languishes in beta right now

00:20:44,240 --> 00:20:47,600
one of the problems with dlc policy is

00:20:46,159 --> 00:20:52,240
how do you safely turn

00:20:47,600 --> 00:20:52,240
on policy without breaking everyone

00:20:52,320 --> 00:20:58,480
how do you move forward how do you how

00:20:55,360 --> 00:21:01,360
do you change policies

00:20:58,480 --> 00:21:02,480
safely especially when changing a policy

00:21:01,360 --> 00:21:07,360
can make it so you can't

00:21:02,480 --> 00:21:07,360
change a policy if you do it wrong

00:21:08,240 --> 00:21:14,880
so one way though

00:21:11,280 --> 00:21:15,440
if you already are using oppa gatekeeper

00:21:14,880 --> 00:21:18,880
is

00:21:15,440 --> 00:21:21,520
a great way to basically get the same

00:21:18,880 --> 00:21:21,520
functionality

00:21:23,120 --> 00:21:30,960
all right moving down the

00:21:26,240 --> 00:21:30,960
stack okay

00:21:35,520 --> 00:21:41,840
rpi initiative

00:21:38,960 --> 00:21:41,840
has this like

00:21:42,640 --> 00:21:47,039
came to any fruition

00:21:48,640 --> 00:21:55,039
run there

00:21:51,679 --> 00:21:59,840
is the there are run

00:21:55,039 --> 00:21:59,840
time policy

00:22:02,799 --> 00:22:09,200
yeah i only remember we did

00:22:06,080 --> 00:22:12,320
we did uh we did couple sessions with

00:22:09,200 --> 00:22:15,520
the falco team but

00:22:12,320 --> 00:22:21,280
yeah lost track on how how

00:22:15,520 --> 00:22:21,280
how things uh how things went

00:22:24,400 --> 00:22:29,360
yeah but this is uh i think this is one

00:22:27,280 --> 00:22:33,919
really interesting

00:22:29,360 --> 00:22:41,840
thing for policy to uh to happen on

00:22:33,919 --> 00:22:41,840
low level a really low level

00:22:42,000 --> 00:22:46,720
yeah part of the but when we say runtime

00:22:44,159 --> 00:22:48,400
it's when you have

00:22:46,720 --> 00:22:49,760
you know your containers or other

00:22:48,400 --> 00:22:52,400
workloads literally

00:22:49,760 --> 00:22:52,880
executing instructions how do you secure

00:22:52,400 --> 00:22:56,799
that

00:22:52,880 --> 00:22:58,080
yeah one way is to have agents on the

00:22:56,799 --> 00:23:00,640
node

00:22:58,080 --> 00:23:01,679
in various ways that are reading

00:23:00,640 --> 00:23:06,640
policies

00:23:01,679 --> 00:23:06,640
checking for violations blocking

00:23:06,960 --> 00:23:10,159
violating actions

00:23:10,559 --> 00:23:18,080
i think they can even combine the rpi

00:23:13,679 --> 00:23:22,159
with with sitting so you have

00:23:18,080 --> 00:23:25,120
policy checkings run time for the pause

00:23:22,159 --> 00:23:27,120
and you can checking on the part

00:23:25,120 --> 00:23:30,240
networking

00:23:27,120 --> 00:23:30,240
something violated

00:23:31,840 --> 00:23:34,880
and you can you can you can do all the

00:23:33,919 --> 00:23:37,840
things

00:23:34,880 --> 00:23:37,840
with ebpf

00:23:39,200 --> 00:23:42,640
just writing some

00:23:43,440 --> 00:23:49,600
ebpf programs

00:23:46,960 --> 00:23:50,640
check upon those just following along

00:23:49,600 --> 00:23:54,320
with the evolution

00:23:50,640 --> 00:23:54,320
from monitoring to policy

00:23:55,039 --> 00:24:02,840
it's the next natural place all right

00:23:58,640 --> 00:24:04,400
all right and for all of these different

00:24:02,840 --> 00:24:07,520
things

00:24:04,400 --> 00:24:07,520
quite often

00:24:07,760 --> 00:24:12,799
policy projects like this want to use

00:24:10,559 --> 00:24:14,960
the standardized kubernetes api to

00:24:12,799 --> 00:24:17,919
define policies

00:24:14,960 --> 00:24:18,880
so one thing we want to do is

00:24:17,919 --> 00:24:20,559
standardize

00:24:18,880 --> 00:24:23,600
what that looks like so that tools can

00:24:20,559 --> 00:24:26,320
be more easily interchanged

00:24:23,600 --> 00:24:27,039
and that you know truly built on top of

00:24:26,320 --> 00:24:30,240
these

00:24:27,039 --> 00:24:33,360
can interact together

00:24:30,240 --> 00:24:36,720
that brings us to our first

00:24:33,360 --> 00:24:39,679
policy project uh

00:24:36,720 --> 00:24:41,279
custom resource the policy report a

00:24:39,679 --> 00:24:47,840
project

00:24:41,279 --> 00:24:47,840
uh sure yeah

00:24:48,799 --> 00:24:56,000
lots of different tools are

00:24:52,159 --> 00:24:59,520
helping us develop this and eat you know

00:24:56,000 --> 00:25:02,159
alpha testing api

00:24:59,520 --> 00:25:04,720
or you know engaged what's what's

00:25:02,159 --> 00:25:04,720
polaris

00:25:06,480 --> 00:25:08,960
polaris

00:25:10,480 --> 00:25:20,559
is it like a kubernetes project or

00:25:15,200 --> 00:25:20,559
heaven uh it is fair wind up

00:25:21,200 --> 00:25:26,799
oh yeah yeah yeah polaris um

00:25:25,039 --> 00:25:28,720
variety of checks to make sure

00:25:26,799 --> 00:25:30,480
kubernetes pods and controllers are

00:25:28,720 --> 00:25:33,760
configured using best practices

00:25:30,480 --> 00:25:35,919
oh cool has a dashboard

00:25:33,760 --> 00:25:37,039
a validating web hook and a command line

00:25:35,919 --> 00:25:39,279
tool

00:25:37,039 --> 00:25:39,279
cool

00:25:40,480 --> 00:25:48,159
obviously a lot of a lot has happened

00:25:45,039 --> 00:25:48,159
in the policy field

00:25:49,360 --> 00:25:58,880
there's always a few projects yeah

00:25:53,600 --> 00:25:58,880
where then all right

00:26:01,679 --> 00:26:05,279
ah we have a nice table

00:26:05,440 --> 00:26:13,840
and we should color this cluster

00:26:09,120 --> 00:26:13,840
image image

00:26:14,640 --> 00:26:18,480
uh where are you looking sorry like the

00:26:16,720 --> 00:26:23,120
tv the category is

00:26:18,480 --> 00:26:27,440
image meaning for docker image

00:26:23,120 --> 00:26:30,480
yeah uh scanning yeah maybe they're for

00:26:27,440 --> 00:26:32,880
the pre-image security

00:26:30,480 --> 00:26:33,679
yeah uh you know make sure that you know

00:26:32,880 --> 00:26:36,320
you're not running

00:26:33,679 --> 00:26:38,000
malicious containers this one's from

00:26:36,320 --> 00:26:41,919
aqua security oh

00:26:38,000 --> 00:26:46,080
cool so they gave a presentation

00:26:41,919 --> 00:26:47,600
last week yeah making a presentation

00:26:46,080 --> 00:26:50,840
it you know make sure that you're

00:26:47,600 --> 00:26:53,919
running only validated

00:26:50,840 --> 00:26:56,240
images vulnerabilities

00:26:53,919 --> 00:26:57,200
with it it comes with a pretty nice

00:26:56,240 --> 00:27:00,799
dashboard

00:26:57,200 --> 00:27:04,320
interface as well i think it's yeah

00:27:00,799 --> 00:27:07,760
mostly uh not some

00:27:04,320 --> 00:27:09,600
a direct image as a scanner on to

00:27:07,760 --> 00:27:11,840
show it right now and i think there's

00:27:09,600 --> 00:27:11,840
some

00:27:12,159 --> 00:27:15,039
future plans

00:27:15,600 --> 00:27:23,520
i think uh yeah you just

00:27:21,039 --> 00:27:23,520
then

00:27:24,159 --> 00:27:30,159
cube cute bench is another sort of

00:27:27,919 --> 00:27:33,520
conformance might be i think it's a

00:27:30,159 --> 00:27:36,000
great category of

00:27:33,520 --> 00:27:36,880
do you have your is your cluster set up

00:27:36,000 --> 00:27:40,240
the way you

00:27:36,880 --> 00:27:40,640
think it will be they're using policy

00:27:40,240 --> 00:27:44,880
for

00:27:40,640 --> 00:27:47,600
for like benchmarking the cluster

00:27:44,880 --> 00:27:48,000
i believe uh cube bench is like are you

00:27:47,600 --> 00:27:52,720
following

00:27:48,000 --> 00:27:52,720
best practices ah okay

00:27:56,000 --> 00:28:02,799
yeah so they are scanning

00:27:59,039 --> 00:28:08,399
for for things

00:28:02,799 --> 00:28:10,559
yeah do you have

00:28:08,399 --> 00:28:10,559
the

00:28:12,240 --> 00:28:20,000
so this also comes for like security

00:28:16,720 --> 00:28:22,960
best practice like cis uh

00:28:20,000 --> 00:28:23,440
benchmarks for instance yeah yeah yeah

00:28:22,960 --> 00:28:27,279
okay

00:28:23,440 --> 00:28:28,159
got it yeah yeah so one of the ways for

00:28:27,279 --> 00:28:31,360
instance

00:28:28,159 --> 00:28:33,279
some of aqua security pro also has

00:28:31,360 --> 00:28:35,919
project called starboard

00:28:33,279 --> 00:28:36,559
one of the things that they're reporting

00:28:35,919 --> 00:28:40,159
and running

00:28:36,559 --> 00:28:44,000
are cis cube programs benchmark tests

00:28:40,159 --> 00:28:45,760
so that can also hopefully soon

00:28:44,000 --> 00:28:47,919
uh be reported back in the standard

00:28:45,760 --> 00:28:50,799
format

00:28:47,919 --> 00:28:50,799
oh that's pretty cool

00:28:52,399 --> 00:28:56,640
as you can see we have more policy tools

00:28:54,880 --> 00:28:58,960
and engines and ways to do it than we

00:28:56,640 --> 00:29:02,480
can keep track of

00:28:58,960 --> 00:29:02,480
that we can't ever imagine

00:29:03,200 --> 00:29:06,880
what is our policy on policies

00:29:09,360 --> 00:29:12,799
our interface we have a couple few

00:29:11,600 --> 00:29:15,039
things

00:29:12,799 --> 00:29:16,000
the place the policy report is meant to

00:29:15,039 --> 00:29:19,840
capture a

00:29:16,000 --> 00:29:24,640
higher level not necessarily a

00:29:19,840 --> 00:29:27,520
my like second by second uh report

00:29:24,640 --> 00:29:28,720
that you know at a report at the level

00:29:27,520 --> 00:29:30,399
that makes sense for

00:29:28,720 --> 00:29:33,440
to be stored as a customer resource in

00:29:30,399 --> 00:29:37,520
kubernetes at cd

00:29:33,440 --> 00:29:39,360
want it to be flexible enough to show

00:29:37,520 --> 00:29:42,080
for what all these different tools and

00:29:39,360 --> 00:29:45,360
compliance needs

00:29:42,080 --> 00:29:47,760
allow enough detail so that you know

00:29:45,360 --> 00:29:50,480
auditors and cluster admins can

00:29:47,760 --> 00:29:53,279
understand what has happened or what's

00:29:50,480 --> 00:29:53,279
going on and why

00:29:53,520 --> 00:29:58,000
but it still needs to be clear and

00:29:56,080 --> 00:30:01,600
standardized enough

00:29:58,000 --> 00:30:04,399
that standard kubernetes tools

00:30:01,600 --> 00:30:04,399
can manage it

00:30:05,760 --> 00:30:12,399
we have some examples within the

00:30:09,039 --> 00:30:13,039
um policy prototypes github repo i think

00:30:12,399 --> 00:30:16,080
uh

00:30:13,039 --> 00:30:19,760
caverno and the uh

00:30:16,080 --> 00:30:23,360
multi-cluster project from

00:30:19,760 --> 00:30:25,039
red hat have some examples submitted of

00:30:23,360 --> 00:30:27,679
what the kind of policy reports that

00:30:25,039 --> 00:30:31,039
they would be creating with their tools

00:30:27,679 --> 00:30:34,640
okay we have scope

00:30:31,039 --> 00:30:34,640
um summary

00:30:34,840 --> 00:30:42,000
results hey this is pretty nice

00:30:39,840 --> 00:30:44,240
yeah i think it's one of those things

00:30:42,000 --> 00:30:47,279
where it turns out having

00:30:44,240 --> 00:30:50,399
more input you get better things and

00:30:47,279 --> 00:30:53,760
learn things you didn't know

00:30:50,399 --> 00:30:54,480
maybe i should go uh we have the alpha

00:30:53,760 --> 00:30:57,519
sort of

00:30:54,480 --> 00:31:00,880
merged into that repo uh

00:30:57,519 --> 00:31:04,000
any pull requests or issues are welcome

00:31:00,880 --> 00:31:07,360
and we're working right now to get

00:31:04,000 --> 00:31:12,799
more tools directly implementing it and

00:31:07,360 --> 00:31:18,240
testing it out so that you know we can

00:31:12,799 --> 00:31:22,159
move to beta eventually

00:31:18,240 --> 00:31:25,519
all right so all right this is our like

00:31:22,159 --> 00:31:28,880
um our four

00:31:25,519 --> 00:31:32,080
deliverables so far i fit

00:31:28,880 --> 00:31:32,960
into the big picture i think so we have

00:31:32,080 --> 00:31:36,159
crds

00:31:32,960 --> 00:31:37,039
we have form of education very

00:31:36,159 --> 00:31:41,200
interesting

00:31:37,039 --> 00:31:45,440
we have the try to have a

00:31:41,200 --> 00:31:51,600
standard way to interact

00:31:45,440 --> 00:31:51,600
um and uh the rpi is for the data plane

00:31:52,640 --> 00:31:58,840
cool yeah okay

00:31:55,679 --> 00:32:00,000
please join the conga and the

00:31:58,840 --> 00:32:02,480
conversation

00:32:00,000 --> 00:32:03,840
that slide be deleted uh there's a

00:32:02,480 --> 00:32:06,720
backup site

00:32:03,840 --> 00:32:08,960
in case okay people are interested in

00:32:06,720 --> 00:32:15,840
smt

00:32:08,960 --> 00:32:15,840
what the heck is formal verification

00:32:24,159 --> 00:32:29,919
got it all

00:32:27,440 --> 00:32:31,440
all right please join join us or we'll

00:32:29,919 --> 00:32:34,159
look forward to

00:32:31,440 --> 00:32:35,039
seeing we're talking more about policy

00:32:34,159 --> 00:32:38,720
yep

00:32:35,039 --> 00:32:41,679
okay i think that's it for our session

00:32:38,720 --> 00:32:41,679

YouTube URL: https://www.youtube.com/watch?v=GSeC49v1NRw


