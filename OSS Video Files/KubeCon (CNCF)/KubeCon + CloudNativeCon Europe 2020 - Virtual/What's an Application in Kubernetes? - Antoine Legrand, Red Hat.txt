Title: What's an Application in Kubernetes? - Antoine Legrand, Red Hat
Publication date: 2020-08-27
Playlist: KubeCon + CloudNativeCon Europe 2020 - Virtual
Description: 
	Don’t miss out! Join us at our upcoming events: EnvoyCon Virtual on October 15 and KubeCon + CloudNativeCon North America 2020 Virtual from November 17-20. Learn more at https://kubecon.io. The conferences feature presentations from developers and end users of Kubernetes, Prometheus, Envoy, and all of the other CNCF-hosted projects.  

What's an Application in Kubernetes? - Antoine Legrand, Red Hat 

A very simple question but with many different answers when asked. Kubernetes should provide a ground set of concepts that allows interoperability of systems and a shared knowledge in the ecosystem. In any kubernetes distribution, a Pod or a Service have the same definition, this is not the case for application. As end-users are mainly managing apps, it's time for kubernetes to get a representation and a definition of it.   The sig-apps community came to an agreement to provide this missing piece. They created a new Application resource and its controller. This talk is bringing light to this new upstream resource, the features it provides with concrete examples, and the next steps and how to get involved.

https://sched.co/Zeqv
Captions: 
	00:00:00,080 --> 00:00:04,080
hello i'm antoine and i've been a

00:00:02,240 --> 00:00:05,920
committee member for quite some times

00:00:04,080 --> 00:00:06,720
and i love kubcon because it's a great

00:00:05,920 --> 00:00:09,120
occasion to

00:00:06,720 --> 00:00:10,400
engage new description and often i'm

00:00:09,120 --> 00:00:12,880
asking for example

00:00:10,400 --> 00:00:14,559
why are you using varieties and the

00:00:12,880 --> 00:00:17,840
answer is gonna unanimous

00:00:14,559 --> 00:00:21,199
to manage our application services

00:00:17,840 --> 00:00:23,119
workload but that's all means the same

00:00:21,199 --> 00:00:24,400
and sometimes i dive a little bit and

00:00:23,119 --> 00:00:25,840
ask like what's in application

00:00:24,400 --> 00:00:26,720
communities for you how do you manage

00:00:25,840 --> 00:00:30,800
them

00:00:26,720 --> 00:00:33,040
and there's a there's like much more uh

00:00:30,800 --> 00:00:34,640
variation and answer so for example

00:00:33,040 --> 00:00:36,640
there could be a set of coherences

00:00:34,640 --> 00:00:39,280
resources deployment config map

00:00:36,640 --> 00:00:39,840
that define my application uh some are

00:00:39,280 --> 00:00:42,480
using

00:00:39,840 --> 00:00:44,719
m uh or package manager like hem so with

00:00:42,480 --> 00:00:46,879
the m chart or customize

00:00:44,719 --> 00:00:48,719
and i see also a trend for example to

00:00:46,879 --> 00:00:51,760
create a new namespace per application

00:00:48,719 --> 00:00:53,440
and basically this application uh uh is

00:00:51,760 --> 00:00:55,039
also resources inside the namespace so

00:00:53,440 --> 00:00:58,239
deleted an application which means

00:00:55,039 --> 00:01:00,160
deleting to namespace so what does that

00:00:58,239 --> 00:01:01,039
mean to have so many kind of different

00:01:00,160 --> 00:01:02,719
answer

00:01:01,039 --> 00:01:04,400
it means like there is no really a

00:01:02,719 --> 00:01:06,640
concept uh impurities

00:01:04,400 --> 00:01:09,040
of an application and that's a little

00:01:06,640 --> 00:01:10,960
bit of paradox because

00:01:09,040 --> 00:01:12,479
we see the main usage of communities to

00:01:10,960 --> 00:01:14,000
manage application but yet

00:01:12,479 --> 00:01:16,400
we don't have a definition of

00:01:14,000 --> 00:01:19,759
application and this is why

00:01:16,400 --> 00:01:22,720
with caps uh we we have built uh

00:01:19,759 --> 00:01:24,240
a new resources called application it

00:01:22,720 --> 00:01:27,600
starts as a

00:01:24,240 --> 00:01:31,040
six project so it's a crd for now

00:01:27,600 --> 00:01:33,759
and we try to be very simple

00:01:31,040 --> 00:01:34,880
and use our concepts uh already existing

00:01:33,759 --> 00:01:37,920
so we're using just

00:01:34,880 --> 00:01:39,600
um label selector to match

00:01:37,920 --> 00:01:40,960
all resources that belong to an

00:01:39,600 --> 00:01:43,280
application because

00:01:40,960 --> 00:01:44,640
this is in the answer this is what we we

00:01:43,280 --> 00:01:46,159
can see like the common ground is like

00:01:44,640 --> 00:01:47,759
an application is not one resource it's

00:01:46,159 --> 00:01:49,439
like all the resources that are needed

00:01:47,759 --> 00:01:51,759
by its application

00:01:49,439 --> 00:01:53,600
so we use just the library selector and

00:01:51,759 --> 00:01:54,079
the crd and the controller will just

00:01:53,600 --> 00:01:58,240
find

00:01:54,079 --> 00:02:00,320
all matching resources and

00:01:58,240 --> 00:02:02,560
enough in order to build ui and better

00:02:00,320 --> 00:02:04,320
user experience we add also a bit of

00:02:02,560 --> 00:02:05,759
a description of the application for

00:02:04,320 --> 00:02:09,039
example icon

00:02:05,759 --> 00:02:12,319
version etc that have to build every

00:02:09,039 --> 00:02:15,360
nice ui on top of that

00:02:12,319 --> 00:02:17,680
now application uh resource

00:02:15,360 --> 00:02:19,200
becomes your entry point for the cluster

00:02:17,680 --> 00:02:21,360
and you can just do cubesat get

00:02:19,200 --> 00:02:24,400
application for example and you see all

00:02:21,360 --> 00:02:26,400
what's running in your uh your cluster

00:02:24,400 --> 00:02:28,080
and some interesting feature could be

00:02:26,400 --> 00:02:30,879
also to have like a

00:02:28,080 --> 00:02:31,920
cascade deletion so you would just do a

00:02:30,879 --> 00:02:33,680
delete application

00:02:31,920 --> 00:02:34,959
and every separate source will be

00:02:33,680 --> 00:02:36,720
deleted together

00:02:34,959 --> 00:02:38,080
and more interestingly also we can

00:02:36,720 --> 00:02:40,879
bubble up the status

00:02:38,080 --> 00:02:41,519
of all sub-resources for example here in

00:02:40,879 --> 00:02:44,720
the last

00:02:41,519 --> 00:02:47,360
column we can see which resources are

00:02:44,720 --> 00:02:48,560
are ready or not we're going to last up

00:02:47,360 --> 00:02:51,120
there is one resource

00:02:48,560 --> 00:02:53,599
not ready and if you describe this

00:02:51,120 --> 00:02:55,760
application you can immediately see

00:02:53,599 --> 00:02:57,680
uh which resource is not really instead

00:02:55,760 --> 00:02:58,400
of trying two searches in the deployment

00:02:57,680 --> 00:03:01,599
this is a

00:02:58,400 --> 00:03:03,840
the pvc etc here you immediately see

00:03:01,599 --> 00:03:05,760
what's going on for your application so

00:03:03,840 --> 00:03:09,040
for example cheeky i've implemented it

00:03:05,760 --> 00:03:12,159
uh i integrated this new resource and

00:03:09,040 --> 00:03:13,599
a little bit more dashboard and more

00:03:12,159 --> 00:03:16,080
distribution are adding into

00:03:13,599 --> 00:03:18,400
applications

00:03:16,080 --> 00:03:19,680
and for example that's a cap now same

00:03:18,400 --> 00:03:22,800
view

00:03:19,680 --> 00:03:23,360
different dashboard and that's the main

00:03:22,800 --> 00:03:25,040
goal maybe

00:03:23,360 --> 00:03:27,040
you can think you you already have this

00:03:25,040 --> 00:03:30,239
kind of feature in your distribution

00:03:27,040 --> 00:03:33,680
but that's very customized custom

00:03:30,239 --> 00:03:35,440
uh built and that's the goal of

00:03:33,680 --> 00:03:37,840
this new crt is to have a common

00:03:35,440 --> 00:03:39,120
definition so everyone can build ui on

00:03:37,840 --> 00:03:41,519
top and we still

00:03:39,120 --> 00:03:42,799
maintain the interoperability so you can

00:03:41,519 --> 00:03:46,239
go from one distribution to

00:03:42,799 --> 00:03:48,159
another thanks for watching

00:03:46,239 --> 00:03:49,519
if you have additional question you can

00:03:48,159 --> 00:03:52,720
join uh seagaps

00:03:49,519 --> 00:03:55,040
uh user github and

00:03:52,720 --> 00:03:56,200
also directly join me on us like our

00:03:55,040 --> 00:03:59,200
twitter

00:03:56,200 --> 00:03:59,200

YouTube URL: https://www.youtube.com/watch?v=Pm4e9dttI-o


