Title: Introducing Racklet a commoditized educational and open source data center scale-model for tinkerers
Publication date: 2021-06-01
Playlist: KCD Africa
Description: 
	“The future is already here - it's just not evenly distributed” - William Gibson

We’d like to announce our latest open-source project: Racklet. It’s a fully-integrated, Raspberry Pi form-factor server rack and software stack that aims to be a scale model of hyperscaler datacenters. All layers of the stack are 100% OSS/OSH, and will be developed together with the community. It’s reproducible through open PCB designs, 3D printed casing, and commodity, off-the-shelf hardware.

We want to lower the barrier of entry for becoming cloud native. Racklet aims to inspire users to explore how modern server architectures work, in a tangible and educational way. Emphasis is put on security, knowledge sharing, extensibility, and portability.

The goal is to conceptually map to real environments and provide an accessible and well-documented path to welcome future talents to the world of cloud native.
Captions: 
	00:00:04,400 --> 00:00:10,080
so awesome thank you very much um

00:00:06,799 --> 00:00:13,440
uh in the just you yeah

00:00:10,080 --> 00:00:16,560
we have the enterprise channel uh

00:00:13,440 --> 00:00:17,600
truck has been live and it's going on uh

00:00:16,560 --> 00:00:20,080
the

00:00:17,600 --> 00:00:22,080
next uh session on the enterprise uh

00:00:20,080 --> 00:00:25,199
track would be github's

00:00:22,080 --> 00:00:26,960
challenges for the enterprise now here

00:00:25,199 --> 00:00:30,720
on the community track we have two

00:00:26,960 --> 00:00:33,520
of some gentlemen uh lucas

00:00:30,720 --> 00:00:35,360
and dennis i don't want to pronounce

00:00:33,520 --> 00:00:36,800
their names wrongly probably i will

00:00:35,360 --> 00:00:38,559
learn once they

00:00:36,800 --> 00:00:40,000
pronounce their names they are joining

00:00:38,559 --> 00:00:42,079
us from oh

00:00:40,000 --> 00:00:44,160
i can't remember the name of the country

00:00:42,079 --> 00:00:47,039
but they are here joining us

00:00:44,160 --> 00:00:48,160
uh and they will be speaking about

00:00:47,039 --> 00:00:49,920
racket

00:00:48,160 --> 00:00:53,039
racklet they'll be introducing us to

00:00:49,920 --> 00:00:55,039
rocklet i think it's a new project

00:00:53,039 --> 00:00:56,960
i i'm definitely looking forward to

00:00:55,039 --> 00:01:00,559
learning more about it

00:00:56,960 --> 00:01:04,239
so what's you lucas and dennis

00:01:00,559 --> 00:01:07,439
hi can you hear us or yes yes

00:01:04,239 --> 00:01:08,880
very well um and i'm gonna share my

00:01:07,439 --> 00:01:11,360
screen

00:01:08,880 --> 00:01:12,880
let's see if i do a chrome tab as well

00:01:11,360 --> 00:01:16,799
and then

00:01:12,880 --> 00:01:22,000
right click africa's slides and then

00:01:16,799 --> 00:01:27,840
jump to the beginning and off we go

00:01:22,000 --> 00:01:27,840
can you see the screen

00:01:29,840 --> 00:01:33,119
oh and can you hear me as well i can

00:01:32,479 --> 00:01:36,479
hear it

00:01:33,119 --> 00:01:40,720
yes we can we can see the screen perfect

00:01:36,479 --> 00:01:43,280
great then let's start hi

00:01:40,720 --> 00:01:43,840
uh welcome to this presentation and yes

00:01:43,280 --> 00:01:46,079
as

00:01:43,840 --> 00:01:48,079
as was mentioned here we're today gonna

00:01:46,079 --> 00:01:48,479
announce our new open source project

00:01:48,079 --> 00:01:50,880
called

00:01:48,479 --> 00:01:51,840
raclet and we're joining you from

00:01:50,880 --> 00:01:54,720
finland today

00:01:51,840 --> 00:01:57,200
and we're very excited to be at this

00:01:54,720 --> 00:01:57,200
conference

00:01:57,600 --> 00:02:03,360
cool so um the cloud

00:02:00,640 --> 00:02:04,880
what do you think about when you hear

00:02:03,360 --> 00:02:08,000
the cloud

00:02:04,880 --> 00:02:10,800
is it someone else's server

00:02:08,000 --> 00:02:12,800
well if it is then it's also someone

00:02:10,800 --> 00:02:14,640
else's problem right to manage all of

00:02:12,800 --> 00:02:17,680
these servers like you you just use it

00:02:14,640 --> 00:02:17,680
that's that's great

00:02:19,200 --> 00:02:23,599
what is the problem anyway with managing

00:02:22,640 --> 00:02:25,200
service anyway

00:02:23,599 --> 00:02:28,560
one can just go to the dashboard and

00:02:25,200 --> 00:02:28,560
deploy workloads instantly

00:02:29,040 --> 00:02:33,440
and this kind of um there's a mismatch

00:02:33,040 --> 00:02:36,640
here

00:02:33,440 --> 00:02:38,879
in like uh we can do some of the things

00:02:36,640 --> 00:02:39,680
uh through through dashboards without

00:02:38,879 --> 00:02:41,360
knowing

00:02:39,680 --> 00:02:43,519
what is you know under underneath what

00:02:41,360 --> 00:02:45,519
is happening in the real world

00:02:43,519 --> 00:02:47,040
uh but sometimes you really need that

00:02:45,519 --> 00:02:48,400
kind of deeper understanding so let's

00:02:47,040 --> 00:02:51,680
take an example here

00:02:48,400 --> 00:02:53,920
of how you know a web app is is

00:02:51,680 --> 00:02:55,280
introduced in say uh when you're

00:02:53,920 --> 00:02:56,879
learning about these things

00:02:55,280 --> 00:02:58,879
then you have this kind of web app

00:02:56,879 --> 00:03:00,480
simplified model you know it's talking

00:02:58,879 --> 00:03:01,120
to the database and that's you know all

00:03:00,480 --> 00:03:04,239
great

00:03:01,120 --> 00:03:06,239
but in the real world it more looks like

00:03:04,239 --> 00:03:08,400
this kind of murder mystery that you see

00:03:06,239 --> 00:03:10,879
here on the right picture

00:03:08,400 --> 00:03:12,720
um and then that's just how it is and

00:03:10,879 --> 00:03:15,680
how can we kind of bridge the gap

00:03:12,720 --> 00:03:17,440
of this kind of mental model issue that

00:03:15,680 --> 00:03:19,200
you have this simplification

00:03:17,440 --> 00:03:21,360
and then in the real world it's much

00:03:19,200 --> 00:03:23,280
more much much more complex

00:03:21,360 --> 00:03:24,879
um so when you learn about something for

00:03:23,280 --> 00:03:27,440
the first time you

00:03:24,879 --> 00:03:28,959
often see it like kind of a black box so

00:03:27,440 --> 00:03:30,480
like you don't know what is in there or

00:03:28,959 --> 00:03:32,640
how it works underneath

00:03:30,480 --> 00:03:33,599
but in the reality it's a system for

00:03:32,640 --> 00:03:35,680
example cloud

00:03:33,599 --> 00:03:37,760
composed of many many components this

00:03:35,680 --> 00:03:41,360
will we'll get into later

00:03:37,760 --> 00:03:44,480
um and as was found in this

00:03:41,360 --> 00:03:46,879
master's thesis from kaspa nissan and

00:03:44,480 --> 00:03:48,239
martin jensen at urhus university in

00:03:46,879 --> 00:03:50,080
denmark

00:03:48,239 --> 00:03:51,280
they they studied this kind of thing and

00:03:50,080 --> 00:03:53,439
and wondered like

00:03:51,280 --> 00:03:55,120
if we have something tangible something

00:03:53,439 --> 00:03:57,040
you know like learning cloud system

00:03:55,120 --> 00:03:58,720
and something you can touch you can you

00:03:57,040 --> 00:04:00,319
know

00:03:58,720 --> 00:04:03,280
roll around with it and you know

00:04:00,319 --> 00:04:03,280
physically change

00:04:10,000 --> 00:04:13,439
the object between the students or the

00:04:13,040 --> 00:04:16,639
the

00:04:13,439 --> 00:04:18,479
one that is learning and to get the full

00:04:16,639 --> 00:04:19,680
comprehension of the the kind of large

00:04:18,479 --> 00:04:21,680
complex systems

00:04:19,680 --> 00:04:22,880
that is the case in you know these large

00:04:21,680 --> 00:04:25,360
cloud native systems

00:04:22,880 --> 00:04:26,160
these days so we'd like to introduce

00:04:25,360 --> 00:04:28,240
raclette

00:04:26,160 --> 00:04:30,080
which is this kind exactly this kind of

00:04:28,240 --> 00:04:32,479
mediator objects

00:04:30,080 --> 00:04:34,320
and uh and we'll we'll tell more as we

00:04:32,479 --> 00:04:37,360
go with this presentation

00:04:34,320 --> 00:04:42,240
uh what racklet is but but first have

00:04:37,360 --> 00:04:44,479
we're gonna do a short story

00:04:42,240 --> 00:04:46,320
so understanding the cloud in a holistic

00:04:44,479 --> 00:04:48,880
way is really hard

00:04:46,320 --> 00:04:51,520
uh this here is a visualization of what

00:04:48,880 --> 00:04:53,280
you as the user or as the developers see

00:04:51,520 --> 00:04:55,120
when interacting with kubernetes or

00:04:53,280 --> 00:04:56,800
deploying your applications

00:04:55,120 --> 00:04:58,400
compared to all of the behind the scene

00:04:56,800 --> 00:05:02,240
complexity that is required

00:04:58,400 --> 00:05:04,000
to run a cloud in today's ever more

00:05:02,240 --> 00:05:06,320
complex technology ecosystem it is

00:05:04,000 --> 00:05:08,080
crucial to also see the bigger picture

00:05:06,320 --> 00:05:10,639
for example in order to understand error

00:05:08,080 --> 00:05:14,320
situations and to make better decisions

00:05:10,639 --> 00:05:16,560
when developing applications

00:05:14,320 --> 00:05:17,680
so let's say that in i'm in the market

00:05:16,560 --> 00:05:20,720
for a cloud

00:05:17,680 --> 00:05:20,720
what options do i have

00:05:21,039 --> 00:05:27,919
well the most common option here is to

00:05:24,479 --> 00:05:29,120
rent some cloud capacity from a provider

00:05:27,919 --> 00:05:33,520
from a well-known infrastructure

00:05:29,120 --> 00:05:35,600
provider for example google cloud or aws

00:05:33,520 --> 00:05:39,840
this of course has running costs that

00:05:35,600 --> 00:05:43,360
scale with capacity

00:05:39,840 --> 00:05:45,039
the other alternative that i have is to

00:05:43,360 --> 00:05:46,400
go directly to the enterprise server

00:05:45,039 --> 00:05:49,520
hardware vendors

00:05:46,400 --> 00:05:50,479
and just purchase a bunch of servers and

00:05:49,520 --> 00:05:53,440
network switches

00:05:50,479 --> 00:05:53,919
and build my own on-premises data center

00:05:53,440 --> 00:05:56,800
this

00:05:53,919 --> 00:05:58,319
of course has very large um upfront

00:05:56,800 --> 00:06:01,440
costs

00:05:58,319 --> 00:06:02,639
yep exactly so like for us we we are

00:06:01,440 --> 00:06:04,800
both students

00:06:02,639 --> 00:06:06,080
and you know that's not realistic to

00:06:04,800 --> 00:06:08,560
just you know go at

00:06:06,080 --> 00:06:10,319
some some large corporations say we want

00:06:08,560 --> 00:06:12,400
to buy all of these servers

00:06:10,319 --> 00:06:13,840
that's not within our budget in any way

00:06:12,400 --> 00:06:17,039
so what can we do

00:06:13,840 --> 00:06:20,240
well we can build our own cloud

00:06:17,039 --> 00:06:22,240
from commodity components for example

00:06:20,240 --> 00:06:24,800
like raspberry pi and some other

00:06:22,240 --> 00:06:26,400
things of the logos listed here and that

00:06:24,800 --> 00:06:29,919
is much cheaper and much more

00:06:26,400 --> 00:06:31,360
accessible so the next question is how

00:06:29,919 --> 00:06:33,680
do you build a cloud

00:06:31,360 --> 00:06:34,639
this is obviously a large undertaking

00:06:33,680 --> 00:06:36,560
and

00:06:34,639 --> 00:06:38,960
you need to bind together many many

00:06:36,560 --> 00:06:40,639
smaller hardware and software components

00:06:38,960 --> 00:06:43,360
and there's simply no end-to-end manual

00:06:40,639 --> 00:06:46,840
for doing something like this

00:06:43,360 --> 00:06:49,599
so here is the infamous cloud native

00:06:46,840 --> 00:06:51,360
landscape many were many of these

00:06:49,599 --> 00:06:52,800
components that if you build your own

00:06:51,360 --> 00:06:55,039
cloud if you go that route you're

00:06:52,800 --> 00:06:57,599
expected to integrate these things

00:06:55,039 --> 00:06:58,800
and um you know it's just overwhelming

00:06:57,599 --> 00:07:00,960
like where do you start

00:06:58,800 --> 00:07:04,800
you really need some good kind of glue

00:07:00,960 --> 00:07:06,800
to bind all of these things together

00:07:04,800 --> 00:07:09,120
okay so what is the industry standard

00:07:06,800 --> 00:07:09,120
glue

00:07:09,199 --> 00:07:14,960
well one very common way is

00:07:12,319 --> 00:07:15,360
is bash so shell scripting you you write

00:07:14,960 --> 00:07:17,120
something

00:07:15,360 --> 00:07:18,880
imperatively like run this command first

00:07:17,120 --> 00:07:21,120
and run that command but

00:07:18,880 --> 00:07:22,639
it's it's kind of falls apart at some

00:07:21,120 --> 00:07:25,759
level of complexity

00:07:22,639 --> 00:07:27,360
where it it just you know doesn't work

00:07:25,759 --> 00:07:29,440
well in error conditions and

00:07:27,360 --> 00:07:31,120
isn't as robust as it you know the glue

00:07:29,440 --> 00:07:34,479
needs to be for this kind of really

00:07:31,120 --> 00:07:36,240
complex and dynamic systems

00:07:34,479 --> 00:07:37,680
and of course because nobody likes it

00:07:36,240 --> 00:07:40,080
when that glue breaks

00:07:37,680 --> 00:07:41,759
we aim to form a kind of a stronger glue

00:07:40,080 --> 00:07:44,720
with reckless

00:07:41,759 --> 00:07:46,160
so in other words we aim to bind the

00:07:44,720 --> 00:07:49,360
technologies that we just

00:07:46,160 --> 00:07:51,599
showed you on the cncf landscape

00:07:49,360 --> 00:07:54,800
together in a very nice way with the

00:07:51,599 --> 00:07:57,120
minimal amount of glue

00:07:54,800 --> 00:07:58,160
right so let's start from the beginning

00:07:57,120 --> 00:08:00,319
who are we

00:07:58,160 --> 00:08:02,000
and uh why did we embark on this kind of

00:08:00,319 --> 00:08:05,280
journey

00:08:02,000 --> 00:08:07,840
so hi i'm lukas chelstrom from finland

00:08:05,280 --> 00:08:08,319
i'm a former kubernetes maintainer and

00:08:07,840 --> 00:08:11,759
have

00:08:08,319 --> 00:08:14,000
has also been uh kubernetes uh

00:08:11,759 --> 00:08:14,800
special interest group and working group

00:08:14,000 --> 00:08:18,080
co-lead

00:08:14,800 --> 00:08:20,319
um now i'm studying at alpha university

00:08:18,080 --> 00:08:21,360
but i i really find this cloud native

00:08:20,319 --> 00:08:24,560
community

00:08:21,360 --> 00:08:26,000
uh super nice and uh have been

00:08:24,560 --> 00:08:27,759
doing stuff with the community for

00:08:26,000 --> 00:08:30,479
example here in the nordic countries

00:08:27,759 --> 00:08:32,080
we've run uh cloud native nordics so you

00:08:30,479 --> 00:08:33,599
might want to check that out

00:08:32,080 --> 00:08:35,599
but also i've been working on new

00:08:33,599 --> 00:08:38,479
technologies like cube edm

00:08:35,599 --> 00:08:38,479
and weave ignite

00:08:38,719 --> 00:08:42,640
and hi i'm dennis i'm a second year

00:08:41,360 --> 00:08:45,760
computer science student

00:08:42,640 --> 00:08:48,399
at alta university here in finland

00:08:45,760 --> 00:08:49,360
and i also enjoy working in open source

00:08:48,399 --> 00:08:51,839
a lot

00:08:49,360 --> 00:08:53,120
and have just recently entered the cloud

00:08:51,839 --> 00:08:55,600
native ecosystem

00:08:53,120 --> 00:08:57,519
and this kind of entire environment to

00:08:55,600 --> 00:09:00,560
develop new technologies like weave

00:08:57,519 --> 00:09:02,080
ignite and now i'm working on racklet

00:09:00,560 --> 00:09:05,519
i'm really excited to be part of this

00:09:02,080 --> 00:09:05,519
growing cloud native community

00:09:05,839 --> 00:09:10,800
very cool so let's start by taking a

00:09:08,880 --> 00:09:13,440
look at how lucas built a do-it-yourself

00:09:10,800 --> 00:09:16,080
cloud in 2015.

00:09:13,440 --> 00:09:17,680
yeah so when i heard about kubernetes

00:09:16,080 --> 00:09:20,959
for the first time

00:09:17,680 --> 00:09:22,000
um i was really you know like amazed

00:09:20,959 --> 00:09:23,920
that that google open

00:09:22,000 --> 00:09:26,080
source something that that they had been

00:09:23,920 --> 00:09:27,839
working on you know like for a long time

00:09:26,080 --> 00:09:29,440
and i know it was like okay that's great

00:09:27,839 --> 00:09:31,600
i want to contribute

00:09:29,440 --> 00:09:34,240
so i started to contribute and the first

00:09:31,600 --> 00:09:36,959
thing i i did was to

00:09:34,240 --> 00:09:39,279
contribute uh porting kubernetes to arm

00:09:36,959 --> 00:09:41,519
so that it worked on my raspberry pi's

00:09:39,279 --> 00:09:43,200
because i the only linux computers i had

00:09:41,519 --> 00:09:44,640
around were raspberry pi's

00:09:43,200 --> 00:09:47,200
because you know they were cheap and

00:09:44,640 --> 00:09:49,680
accessible and and that's why i did it

00:09:47,200 --> 00:09:51,760
and uh eventually i built this kind of

00:09:49,680 --> 00:09:54,560
this kind of small cloud

00:09:51,760 --> 00:09:55,920
um that you see on the picture and it

00:09:54,560 --> 00:09:59,040
was fairly straightforward

00:09:55,920 --> 00:10:00,640
um i had a usb hub that was feeding

00:09:59,040 --> 00:10:03,680
power to all of the raspberry pi's

00:10:00,640 --> 00:10:05,760
each raspberry pi had an sd card and

00:10:03,680 --> 00:10:08,959
and then they were connected with a

00:10:05,760 --> 00:10:08,959
normal ethernet switch

00:10:09,440 --> 00:10:15,279
so while our design was functional lucas

00:10:12,560 --> 00:10:16,560
is there a way that we can make it more

00:10:15,279 --> 00:10:20,800
reproducible

00:10:16,560 --> 00:10:20,800
more automated and also more secure

00:10:22,640 --> 00:10:25,680
let's first have a look at the hardware

00:10:25,279 --> 00:10:28,240
so

00:10:25,680 --> 00:10:29,040
you used a structure constructed out of

00:10:28,240 --> 00:10:32,320
plexiglas

00:10:29,040 --> 00:10:33,839
and screws and this is purpose-built for

00:10:32,320 --> 00:10:36,240
the single board computers that you had

00:10:33,839 --> 00:10:38,399
on hand as we see from the picture

00:10:36,240 --> 00:10:39,760
and there is really no easy way to

00:10:38,399 --> 00:10:42,160
simply replicate what you have

00:10:39,760 --> 00:10:45,440
constructed here

00:10:42,160 --> 00:10:46,160
no i know so now that we're re redoing

00:10:45,440 --> 00:10:48,800
this kind of

00:10:46,160 --> 00:10:49,920
thing again with raclette with this open

00:10:48,800 --> 00:10:52,880
source project

00:10:49,920 --> 00:10:55,200
we want this to be modular it should be

00:10:52,880 --> 00:10:58,320
reproducible and this we

00:10:55,200 --> 00:11:00,560
achieve by 3d printed casing

00:10:58,320 --> 00:11:01,920
also we want hot swap support so you can

00:11:00,560 --> 00:11:04,000
just drag the

00:11:01,920 --> 00:11:04,959
the pies out of the thing when when you

00:11:04,000 --> 00:11:08,079
need

00:11:04,959 --> 00:11:09,600
and and replace them then problem number

00:11:08,079 --> 00:11:12,399
two with my old setup

00:11:09,600 --> 00:11:13,519
was that the power connectors as you can

00:11:12,399 --> 00:11:16,560
see on the picture

00:11:13,519 --> 00:11:17,040
we're entirely non-standard so so like i

00:11:16,560 --> 00:11:20,240
had to

00:11:17,040 --> 00:11:23,360
have all kinds of different different

00:11:20,240 --> 00:11:25,920
power bricks and and whatnot and uh when

00:11:23,360 --> 00:11:26,399
sometimes the usb hub which which has

00:11:25,920 --> 00:11:29,519
all of the

00:11:26,399 --> 00:11:32,720
the yellow and magenta uh

00:11:29,519 --> 00:11:34,240
usb connectors there that was some

00:11:32,720 --> 00:11:36,160
sometimes overloaded

00:11:34,240 --> 00:11:38,000
and and you know like couldn't handle

00:11:36,160 --> 00:11:39,839
all of the pies at the same time

00:11:38,000 --> 00:11:43,760
so we need to find something more robust

00:11:39,839 --> 00:11:47,120
that is not a single point of failure

00:11:43,760 --> 00:11:49,200
and to do that more robust solution

00:11:47,120 --> 00:11:50,880
we can utilize the raspberry pi hat

00:11:49,200 --> 00:11:53,360
standard so hardware until

00:11:50,880 --> 00:11:55,680
attached on top so it's essentially a

00:11:53,360 --> 00:11:57,839
pcb that goes on top of each of the

00:11:55,680 --> 00:12:00,800
single board computers

00:11:57,839 --> 00:12:02,160
and using this we can power the

00:12:00,800 --> 00:12:03,600
raspberry pi's and the

00:12:02,160 --> 00:12:07,519
other single board computers in a

00:12:03,600 --> 00:12:09,440
standardized way using the gpio header

00:12:07,519 --> 00:12:11,920
and this kind of standardized hat form

00:12:09,440 --> 00:12:14,160
factor also allows

00:12:11,920 --> 00:12:16,079
for monitoring voltage and current of

00:12:14,160 --> 00:12:17,680
each single board computer separately

00:12:16,079 --> 00:12:20,079
and we eliminate the single point of

00:12:17,680 --> 00:12:20,079
failure

00:12:21,040 --> 00:12:24,160
next we have the sd cards that are in

00:12:23,040 --> 00:12:27,440
the raspberry pi's and

00:12:24,160 --> 00:12:27,839
single computers as many of you probably

00:12:27,440 --> 00:12:30,880
know

00:12:27,839 --> 00:12:32,959
and also have experienced constantly

00:12:30,880 --> 00:12:35,360
flashing them is very tiresome

00:12:32,959 --> 00:12:37,120
and their durability is limited and

00:12:35,360 --> 00:12:39,120
additionally we cannot guarantee the

00:12:37,120 --> 00:12:41,600
immutability of the operating system

00:12:39,120 --> 00:12:42,639
due to there being no kind of read-only

00:12:41,600 --> 00:12:45,360
switch

00:12:42,639 --> 00:12:47,680
and that forces us to inherently do

00:12:45,360 --> 00:12:49,519
mutable infrastructure

00:12:47,680 --> 00:12:51,279
we also have the additional issue that

00:12:49,519 --> 00:12:53,200
we cannot debug

00:12:51,279 --> 00:12:55,839
a non-booting single board computer in

00:12:53,200 --> 00:12:58,959
an easy way

00:12:55,839 --> 00:13:00,240
cool so so this that's kind of a lot of

00:12:58,959 --> 00:13:02,079
problems

00:13:00,240 --> 00:13:06,320
uh let's let's take them in order so

00:13:02,079 --> 00:13:09,920
first the sd card we swap out an ssd um

00:13:06,320 --> 00:13:13,519
which we should give us better capacity

00:13:09,920 --> 00:13:16,480
uh resiliency and and also speeds um

00:13:13,519 --> 00:13:18,240
then we we switched to using immutable

00:13:16,480 --> 00:13:20,560
infrastructure which means that

00:13:18,240 --> 00:13:21,440
we network boot when starting the pi we

00:13:20,560 --> 00:13:23,600
network boot

00:13:21,440 --> 00:13:24,720
a pre-made image from some kind of

00:13:23,600 --> 00:13:26,959
registry

00:13:24,720 --> 00:13:29,920
and then you know do all of the security

00:13:26,959 --> 00:13:32,480
stuff like cryptographic verification

00:13:29,920 --> 00:13:34,000
and and then to do this kind of network

00:13:32,480 --> 00:13:36,320
secure network booting

00:13:34,000 --> 00:13:38,480
we need some kind of hardware route of

00:13:36,320 --> 00:13:40,720
trust so we need some kind of key

00:13:38,480 --> 00:13:42,560
uh to know is this you know secure or

00:13:40,720 --> 00:13:44,480
not and that we place

00:13:42,560 --> 00:13:46,720
on the this kind of hat that dennis was

00:13:44,480 --> 00:13:48,639
talking about we we have the the key

00:13:46,720 --> 00:13:50,160
there as you can see in this picture

00:13:48,639 --> 00:13:52,240
and that is you know managed by

00:13:50,160 --> 00:13:54,880
microcontroller

00:13:52,240 --> 00:13:55,680
so now we we kind of uh sold a fair

00:13:54,880 --> 00:13:57,519
amount of things because the

00:13:55,680 --> 00:13:57,839
microcontroller can communicate with the

00:13:57,519 --> 00:14:01,440
pi

00:13:57,839 --> 00:14:02,959
and say you know what are the uh

00:14:01,440 --> 00:14:04,240
like what is the power state and these

00:14:02,959 --> 00:14:04,800
kinds of things and what are the boot

00:14:04,240 --> 00:14:07,040
logs

00:14:04,800 --> 00:14:07,920
but now we get to kubernetes level and

00:14:07,040 --> 00:14:09,600
and this is

00:14:07,920 --> 00:14:11,279
you know kubernetes is kind of hard to

00:14:09,600 --> 00:14:13,839
upgrade and manage

00:14:11,279 --> 00:14:14,880
on its own and you know i worked on cube

00:14:13,839 --> 00:14:18,320
adm as i said

00:14:14,880 --> 00:14:21,120
um for quite some time previously and

00:14:18,320 --> 00:14:23,040
uh while that went pretty well and now

00:14:21,120 --> 00:14:24,000
it's a staple in in all of the you know

00:14:23,040 --> 00:14:27,199
bootstrapping

00:14:24,000 --> 00:14:28,720
scenarios it's just a limited

00:14:27,199 --> 00:14:31,120
blog you know it's a building block on

00:14:28,720 --> 00:14:32,959
which you build larger things

00:14:31,120 --> 00:14:35,199
so it's not enough to cover this whole

00:14:32,959 --> 00:14:37,199
scenario so

00:14:35,199 --> 00:14:40,000
and then to when i was doing this you

00:14:37,199 --> 00:14:42,160
know the way i managed it was i ssh'd in

00:14:40,000 --> 00:14:43,920
some kind of ip and node and then run

00:14:42,160 --> 00:14:44,560
you know cubed m commands or something

00:14:43,920 --> 00:14:47,120
like that

00:14:44,560 --> 00:14:49,839
and that is not really reproducible so

00:14:47,120 --> 00:14:52,880
how do we fix this

00:14:49,839 --> 00:14:54,320
well to avoid this mutable and

00:14:52,880 --> 00:14:55,279
imperative pattern that you just

00:14:54,320 --> 00:14:58,320
described

00:14:55,279 --> 00:15:00,480
we can bake kubernetes right into the

00:14:58,320 --> 00:15:01,680
assigned operating system images so it

00:15:00,480 --> 00:15:05,040
comes

00:15:01,680 --> 00:15:06,639
from the network uh preloaded and

00:15:05,040 --> 00:15:08,639
everything is set up you can just need

00:15:06,639 --> 00:15:11,839
to fire it up

00:15:08,639 --> 00:15:13,360
and we can also leverage git ops to

00:15:11,839 --> 00:15:14,160
achieve a fully declarative

00:15:13,360 --> 00:15:16,160
infrastructure

00:15:14,160 --> 00:15:17,839
so no more running imperative commands

00:15:16,160 --> 00:15:21,120
anywhere

00:15:17,839 --> 00:15:23,680
and all in all what this means is that

00:15:21,120 --> 00:15:25,120
in order to upgrade a node for example

00:15:23,680 --> 00:15:26,959
you only need to do

00:15:25,120 --> 00:15:28,560
one file change in a call request and

00:15:26,959 --> 00:15:30,480
that's it

00:15:28,560 --> 00:15:31,839
that's really cool but then the next

00:15:30,480 --> 00:15:33,279
question is like is

00:15:31,839 --> 00:15:35,440
these are these things that we have

00:15:33,279 --> 00:15:38,560
described are they realistic

00:15:35,440 --> 00:15:41,519
uh is someone you know

00:15:38,560 --> 00:15:42,720
got to have thought about this before um

00:15:41,519 --> 00:15:45,440
so is that the case

00:15:42,720 --> 00:15:46,959
well yes someone has thought about this

00:15:45,440 --> 00:15:47,759
before the hype scale as the large

00:15:46,959 --> 00:15:50,320
companies like

00:15:47,759 --> 00:15:51,199
google and microsoft and amazon and

00:15:50,320 --> 00:15:53,519
facebook

00:15:51,199 --> 00:15:54,880
they you know have they are running into

00:15:53,519 --> 00:15:55,519
these problems as well and they have

00:15:54,880 --> 00:15:58,160
made

00:15:55,519 --> 00:15:58,720
really excellent solutions they also

00:15:58,160 --> 00:16:01,440
have

00:15:58,720 --> 00:16:03,519
published parts of these you know uh the

00:16:01,440 --> 00:16:05,360
blueprints of their data centers in open

00:16:03,519 --> 00:16:07,199
compute projects

00:16:05,360 --> 00:16:08,480
and you can see one of the kind of

00:16:07,199 --> 00:16:11,759
designs here

00:16:08,480 --> 00:16:13,519
on the picture um and

00:16:11,759 --> 00:16:15,680
and here you know we have you with

00:16:13,519 --> 00:16:17,839
raclette we have taken inspiration

00:16:15,680 --> 00:16:18,959
and and want to make a scale model of

00:16:17,839 --> 00:16:21,920
these kinds of really

00:16:18,959 --> 00:16:22,560
you know large open compute project

00:16:21,920 --> 00:16:24,800
servers

00:16:22,560 --> 00:16:26,160
we want to make something smaller but

00:16:24,800 --> 00:16:29,040
but still kind of have the same

00:16:26,160 --> 00:16:29,040
characteristics

00:16:29,279 --> 00:16:33,680
and indeed the architecture that we just

00:16:31,600 --> 00:16:36,800
described to you here with this visual

00:16:33,680 --> 00:16:38,720
visualization borrows many concepts

00:16:36,800 --> 00:16:41,920
from the open compute project and also

00:16:38,720 --> 00:16:44,079
from their cloud native ecosystem

00:16:41,920 --> 00:16:46,160
it has for example optimized power

00:16:44,079 --> 00:16:47,279
delivery we have hardware and software

00:16:46,160 --> 00:16:49,360
security features

00:16:47,279 --> 00:16:51,519
and we also have a fully declarative

00:16:49,360 --> 00:16:54,720
configuration with immutable

00:16:51,519 --> 00:16:57,440
infrastructure cool

00:16:54,720 --> 00:16:58,000
so that said you know like all these

00:16:57,440 --> 00:17:00,000
things we

00:16:58,000 --> 00:17:01,759
these are aspirations that that we can

00:17:00,000 --> 00:17:03,199
also say

00:17:01,759 --> 00:17:04,959
you have probably seen this kind of

00:17:03,199 --> 00:17:06,160
learning curve picture before we want to

00:17:04,959 --> 00:17:07,600
emphasize that we're really in the

00:17:06,160 --> 00:17:09,360
beginning of this journey where

00:17:07,600 --> 00:17:10,880
we have been thinking about these things

00:17:09,360 --> 00:17:14,079
you know for a while now

00:17:10,880 --> 00:17:17,120
but it's it's really like early stage

00:17:14,079 --> 00:17:18,000
so we'd like to invite you to join us in

00:17:17,120 --> 00:17:20,559
journey you know

00:17:18,000 --> 00:17:20,559
to the top

00:17:21,120 --> 00:17:26,720
and so to guide us on this journey

00:17:24,240 --> 00:17:29,840
we've defined a set of values uh to

00:17:26,720 --> 00:17:31,600
drive the development of raclet

00:17:29,840 --> 00:17:34,559
let's see what those are so the first

00:17:31,600 --> 00:17:36,559
one the first value is security

00:17:34,559 --> 00:17:38,240
we emphasize security really highly in

00:17:36,559 --> 00:17:40,480
this and that's a

00:17:38,240 --> 00:17:42,240
main distinguishing factor between

00:17:40,480 --> 00:17:44,960
raclette and some other projects and

00:17:42,240 --> 00:17:46,080
we want to use you know the good stuff

00:17:44,960 --> 00:17:47,760
that has been developed

00:17:46,080 --> 00:17:49,919
in the cloud native ecosystem and also

00:17:47,760 --> 00:17:52,080
in the open source firmware ecosystem

00:17:49,919 --> 00:17:53,919
so here are some logos that with

00:17:52,080 --> 00:17:56,000
projects that we want to integrate

00:17:53,919 --> 00:17:57,760
and once we've kind of fully wrapped our

00:17:56,000 --> 00:18:00,480
heads around these kinds of

00:17:57,760 --> 00:18:01,440
really great security projects but also

00:18:00,480 --> 00:18:04,240
pretty complex

00:18:01,440 --> 00:18:05,760
we want to share these findings with you

00:18:04,240 --> 00:18:07,520
on the raclette blog

00:18:05,760 --> 00:18:09,360
to to you know distill it down and say

00:18:07,520 --> 00:18:11,520
that what they really do and how to use

00:18:09,360 --> 00:18:11,520
it

00:18:12,000 --> 00:18:15,280
and as the second value we have

00:18:13,919 --> 00:18:18,240
interoperability

00:18:15,280 --> 00:18:18,640
and this is really important uh to avoid

00:18:18,240 --> 00:18:21,280
this

00:18:18,640 --> 00:18:23,760
very common xkcd standard scenario

00:18:21,280 --> 00:18:26,640
that's depicted here

00:18:23,760 --> 00:18:27,280
and our approach to avoiding this is to

00:18:26,640 --> 00:18:30,000
combine

00:18:27,280 --> 00:18:32,000
upcoming and cutting edge standards with

00:18:30,000 --> 00:18:34,160
the least amount of glue possible

00:18:32,000 --> 00:18:35,520
so this means that we want to explicitly

00:18:34,160 --> 00:18:37,600
avoid creating new

00:18:35,520 --> 00:18:39,440
and redundant standards that only apply

00:18:37,600 --> 00:18:41,679
to this project

00:18:39,440 --> 00:18:43,840
right so one of the things we want to do

00:18:41,679 --> 00:18:44,960
is to do things declaratively so we have

00:18:43,840 --> 00:18:47,120
controllers which

00:18:44,960 --> 00:18:48,400
you know have this observed diff act

00:18:47,120 --> 00:18:50,240
loop to

00:18:48,400 --> 00:18:52,240
let you focus on the task at hand so you

00:18:50,240 --> 00:18:54,799
say what should the end result be

00:18:52,240 --> 00:18:57,280
not how to get there and you know here

00:18:54,799 --> 00:18:57,679
we're going to use kubernetes great api

00:18:57,280 --> 00:19:00,480
model

00:18:57,679 --> 00:19:04,240
and the whole ecosystem to be uh

00:19:00,480 --> 00:19:04,240
interoperable with other projects

00:19:04,880 --> 00:19:08,160
and on the firmware level we aim to

00:19:07,600 --> 00:19:11,360
explore

00:19:08,160 --> 00:19:14,240
integrating this set of observable and

00:19:11,360 --> 00:19:17,039
modern protocols and technologies

00:19:14,240 --> 00:19:19,600
we want to explicitly avoid any kind of

00:19:17,039 --> 00:19:23,039
obfuscated and legacy protocols that are

00:19:19,600 --> 00:19:25,039
hard to comprehend and to debug

00:19:23,039 --> 00:19:26,880
cool and we want to emphasize all of

00:19:25,039 --> 00:19:28,880
rackled source code design files

00:19:26,880 --> 00:19:31,600
documentation everything is open source

00:19:28,880 --> 00:19:31,600
up on github

00:19:31,919 --> 00:19:35,039
and in addition to the public

00:19:33,600 --> 00:19:37,280
availability the

00:19:35,039 --> 00:19:39,760
raclet hardware design itself will be

00:19:37,280 --> 00:19:41,280
also as accessible and as reproducible

00:19:39,760 --> 00:19:43,440
as possible

00:19:41,280 --> 00:19:44,480
so for example we're going to leverage

00:19:43,440 --> 00:19:46,799
um

00:19:44,480 --> 00:19:48,559
3d printing uh we're going to leverage

00:19:46,799 --> 00:19:49,760
3d printing and an open source cad

00:19:48,559 --> 00:19:51,520
workflow

00:19:49,760 --> 00:19:53,360
for all of the structural components of

00:19:51,520 --> 00:19:56,080
this project

00:19:53,360 --> 00:19:57,280
cool and the schematics will be also

00:19:56,080 --> 00:20:00,080
made open source

00:19:57,280 --> 00:20:00,400
or open hardware in kicad for example we

00:20:00,080 --> 00:20:03,760
have

00:20:00,400 --> 00:20:06,080
a markdown book online docsracklet.io

00:20:03,760 --> 00:20:08,000
which is work in progress where you can

00:20:06,080 --> 00:20:08,799
find the documentation for the software

00:20:08,000 --> 00:20:10,720
components

00:20:08,799 --> 00:20:12,400
and everything all the rest of the stuff

00:20:10,720 --> 00:20:14,080
will be just off the shelf components

00:20:12,400 --> 00:20:16,880
which means you can buy it in your

00:20:14,080 --> 00:20:16,880
local web store

00:20:17,840 --> 00:20:21,919
and the fact that it's off the shelf

00:20:20,159 --> 00:20:24,000
also means that we need to focus

00:20:21,919 --> 00:20:25,679
on modularity and compatibility which is

00:20:24,000 --> 00:20:28,159
our fourth value

00:20:25,679 --> 00:20:29,039
so a record aims to be as modular as

00:20:28,159 --> 00:20:31,679
possible

00:20:29,039 --> 00:20:32,960
up to the point of supporting different

00:20:31,679 --> 00:20:36,080
single board computers

00:20:32,960 --> 00:20:37,440
that comply to the raspberry pi form

00:20:36,080 --> 00:20:40,080
factor

00:20:37,440 --> 00:20:41,840
so we see this future where there's an

00:20:40,080 --> 00:20:44,000
ecosystem of raclette compatible

00:20:41,840 --> 00:20:46,799
hardware and software

00:20:44,000 --> 00:20:47,360
and we are also planning to implement

00:20:46,799 --> 00:20:49,840
bulky

00:20:47,360 --> 00:20:51,280
multi-architecture support meaning that

00:20:49,840 --> 00:20:53,360
you can use your existing

00:20:51,280 --> 00:20:54,320
x86 servers and hardware that you're

00:20:53,360 --> 00:20:57,760
flying around

00:20:54,320 --> 00:21:00,000
to run record software cool and

00:20:57,760 --> 00:21:00,880
one of the transparencies one of the

00:21:00,000 --> 00:21:03,520
values as well

00:21:00,880 --> 00:21:05,280
we want to demystify the cloud stack and

00:21:03,520 --> 00:21:07,280
make it more accessible and that's why

00:21:05,280 --> 00:21:09,440
we we're going to use these kind of

00:21:07,280 --> 00:21:10,720
good cloud native projects like jaeger

00:21:09,440 --> 00:21:14,000
prometers

00:21:10,720 --> 00:21:16,799
uh you know openmetrics to

00:21:14,000 --> 00:21:19,840
to make all of the things in the uh

00:21:16,799 --> 00:21:19,840
system observable

00:21:20,559 --> 00:21:26,400
and after that we have maintainability

00:21:22,720 --> 00:21:28,880
and upgradeability as the sixth value

00:21:26,400 --> 00:21:30,400
so the maintenance burden of keeping a

00:21:28,880 --> 00:21:31,280
right-click cluster running and

00:21:30,400 --> 00:21:33,600
up-to-date

00:21:31,280 --> 00:21:36,000
should be really minimal such that for

00:21:33,600 --> 00:21:36,640
example uh software upgrades should be

00:21:36,000 --> 00:21:40,080
very much

00:21:36,640 --> 00:21:42,960
seamless we don't want uh to have

00:21:40,080 --> 00:21:44,000
uh an i.t team i t team specialized at

00:21:42,960 --> 00:21:47,520
just maintaining this

00:21:44,000 --> 00:21:50,720
rack it should be done be able to

00:21:47,520 --> 00:21:51,600
be upgraded by anyone and on the

00:21:50,720 --> 00:21:54,960
hardware side

00:21:51,600 --> 00:21:55,600
we also support or aim to support hot

00:21:54,960 --> 00:21:57,280
swapping

00:21:55,600 --> 00:21:59,679
and then upgrades of individual

00:21:57,280 --> 00:22:01,360
components so that you can

00:21:59,679 --> 00:22:03,200
so if we can minimize e-waste and you

00:22:01,360 --> 00:22:05,360
don't need to throw away the entire rack

00:22:03,200 --> 00:22:07,520
if you want to upgrade something

00:22:05,360 --> 00:22:08,480
cool and the last one is affordability

00:22:07,520 --> 00:22:10,080
we want to use

00:22:08,480 --> 00:22:13,280
cheap commodity components or

00:22:10,080 --> 00:22:14,960
inexpensive ones such that

00:22:13,280 --> 00:22:16,880
it's compared to you know like these

00:22:14,960 --> 00:22:19,280
large-scale servers if you would

00:22:16,880 --> 00:22:20,640
if you buy a stack of them racklet is

00:22:19,280 --> 00:22:22,720
much more cost-effective

00:22:20,640 --> 00:22:24,000
and also thanks to the modularity that

00:22:22,720 --> 00:22:26,880
denis was talking about

00:22:24,000 --> 00:22:28,080
you can also make raclette fit your or

00:22:26,880 --> 00:22:31,520
your budget or

00:22:28,080 --> 00:22:34,960
local uh availability and

00:22:31,520 --> 00:22:34,960
let's take a look at the use cases

00:22:35,120 --> 00:22:39,039
so first of all we envision rocklet to

00:22:37,600 --> 00:22:41,840
become a staple

00:22:39,039 --> 00:22:43,840
in the home labs of cloud native and

00:22:41,840 --> 00:22:46,000
tinkering enthusiasts

00:22:43,840 --> 00:22:48,320
mainly due to the affordability and

00:22:46,000 --> 00:22:50,720
hackability of the system

00:22:48,320 --> 00:22:52,960
and this kind of open source nature of

00:22:50,720 --> 00:22:54,320
raclette also enables this community to

00:22:52,960 --> 00:22:57,360
contribute their ideas

00:22:54,320 --> 00:22:59,280
and innovations back upstream cool and

00:22:57,360 --> 00:22:59,840
then we have education which is super

00:22:59,280 --> 00:23:02,799
important

00:22:59,840 --> 00:23:04,320
in this field we want that you know for

00:23:02,799 --> 00:23:05,919
example universities and other

00:23:04,320 --> 00:23:08,559
educational institutes

00:23:05,919 --> 00:23:09,440
should be able to to get a rack or a

00:23:08,559 --> 00:23:11,840
raclet

00:23:09,440 --> 00:23:14,240
easily and use that for education of

00:23:11,840 --> 00:23:16,559
these cloud computing systems

00:23:14,240 --> 00:23:17,440
and who knows like using this kind of

00:23:16,559 --> 00:23:19,840
system

00:23:17,440 --> 00:23:20,960
raclet could be the start of someone's

00:23:19,840 --> 00:23:23,840
cloud-native

00:23:20,960 --> 00:23:23,840
career

00:23:24,000 --> 00:23:29,520
as a sort of scale model of a real cloud

00:23:27,440 --> 00:23:31,919
reklet is also suitable for many

00:23:29,520 --> 00:23:33,919
research and development applications in

00:23:31,919 --> 00:23:36,880
cloud-native infrastructure as well as

00:23:33,919 --> 00:23:40,159
the cloud-native patterns and paradigms

00:23:36,880 --> 00:23:42,159
and this kind of sandbox could lead to

00:23:40,159 --> 00:23:45,440
broader cloud-native research and thus

00:23:42,159 --> 00:23:47,440
increased adoption in the space

00:23:45,440 --> 00:23:49,440
cool and edge computing is also a really

00:23:47,440 --> 00:23:52,000
you know booming field

00:23:49,440 --> 00:23:53,840
in this at this moment and for that

00:23:52,000 --> 00:23:55,279
purpose you need versatile tools

00:23:53,840 --> 00:23:58,080
we think that racket with its

00:23:55,279 --> 00:24:01,440
declaration infrastructure high security

00:23:58,080 --> 00:24:04,559
and great interoper operability

00:24:01,440 --> 00:24:06,559
could be a great fit here

00:24:04,559 --> 00:24:08,080
and reckless is not just about hardware

00:24:06,559 --> 00:24:11,120
and software design

00:24:08,080 --> 00:24:13,200
our fundamental goal is to build an

00:24:11,120 --> 00:24:15,840
inclusive and diverse community around

00:24:13,200 --> 00:24:15,840
the project

00:24:16,080 --> 00:24:23,120
and an ecosystem with the ecosystem

00:24:20,320 --> 00:24:25,039
there's already a lot of uh great people

00:24:23,120 --> 00:24:27,279
advancing the state of art a state of

00:24:25,039 --> 00:24:29,760
the art of these kind of systems

00:24:27,279 --> 00:24:31,279
so here we are showcasing the work by

00:24:29,760 --> 00:24:34,480
turing machines incorporated

00:24:31,279 --> 00:24:36,720
as well as ivan kuleshov

00:24:34,480 --> 00:24:38,320
both of these initiatives are super cool

00:24:36,720 --> 00:24:41,039
and we look forward to collaborating

00:24:38,320 --> 00:24:43,840
with their authors

00:24:41,039 --> 00:24:46,320
cool and then we want to emphasize that

00:24:43,840 --> 00:24:49,600
we want to make the bar

00:24:46,320 --> 00:24:50,080
barrier of entry um for learning cloud

00:24:49,600 --> 00:24:52,320
native

00:24:50,080 --> 00:24:54,000
lower so we want to get more people into

00:24:52,320 --> 00:24:54,320
this field and we think that this could

00:24:54,000 --> 00:24:57,360
be

00:24:54,320 --> 00:25:00,559
one way forward and

00:24:57,360 --> 00:25:03,679
that means maybe this is your path to

00:25:00,559 --> 00:25:03,679
mastering cloud native

00:25:04,640 --> 00:25:08,799
so with all this said we've focused on

00:25:07,360 --> 00:25:11,200
the mission and planning of

00:25:08,799 --> 00:25:12,960
raclette for quite a while and hence we

00:25:11,200 --> 00:25:15,520
have not written any code

00:25:12,960 --> 00:25:16,240
nor designed the actual rack yet that

00:25:15,520 --> 00:25:19,440
work is

00:25:16,240 --> 00:25:21,520
on track to start this summer

00:25:19,440 --> 00:25:23,919
so yeah we we're really just in the

00:25:21,520 --> 00:25:25,840
beginning as denny said no code yet

00:25:23,919 --> 00:25:26,960
we invite everybody that is that are

00:25:25,840 --> 00:25:30,640
interested in this

00:25:26,960 --> 00:25:30,640
to join us on this journey

00:25:31,039 --> 00:25:35,279
with that said we're going to leave you

00:25:33,440 --> 00:25:38,559
with this xkcd

00:25:35,279 --> 00:25:38,559
thank you thank you

00:25:40,559 --> 00:25:47,039
awesome awesome awesome presentation

00:25:43,679 --> 00:25:48,400
awesome topic and yeah uh i

00:25:47,039 --> 00:25:50,080
really really learned a lot about

00:25:48,400 --> 00:25:52,400
raclettes and yeah

00:25:50,080 --> 00:25:54,159
and i hope uh the audience as well can

00:25:52,400 --> 00:25:56,720
support as well

00:25:54,159 --> 00:25:58,799
so yeah thanks a lot lucas and dennis

00:25:56,720 --> 00:26:02,000
for the awesome presentation

00:25:58,799 --> 00:26:04,640
and i think this is the time for q a

00:26:02,000 --> 00:26:07,760
um if you have any questions for either

00:26:04,640 --> 00:26:11,840
lucas or dennis please feel free to

00:26:07,760 --> 00:26:11,840
drop us on the chat section

00:26:12,880 --> 00:26:16,559
and look us uh if you don't mind do you

00:26:16,000 --> 00:26:19,919
would like

00:26:16,559 --> 00:26:20,480
to share a link to the open source

00:26:19,919 --> 00:26:23,520
project

00:26:20,480 --> 00:26:25,520
that reference on the chat so that our

00:26:23,520 --> 00:26:30,080
attendees can have easy access

00:26:25,520 --> 00:26:33,120
to the link

00:26:30,080 --> 00:26:36,400
yeah absolutely we'll do that in in just

00:26:33,120 --> 00:26:39,600
just a moment and it's it's right

00:26:36,400 --> 00:26:43,440
right and then the github

00:26:39,600 --> 00:26:46,400
is rackled as well so

00:26:43,440 --> 00:26:48,080
do you have any questions from youtube i

00:26:46,400 --> 00:26:53,840
don't see them here

00:26:48,080 --> 00:26:53,840
yeah so we are youtube

00:26:55,520 --> 00:26:57,840
okay

00:26:59,039 --> 00:27:04,240
okay so basically um i think

00:27:02,159 --> 00:27:05,840
it was just basically positive comments

00:27:04,240 --> 00:27:07,840
uh

00:27:05,840 --> 00:27:08,880
said very insightful i hope to learn

00:27:07,840 --> 00:27:12,880
more

00:27:08,880 --> 00:27:15,840
um yeah we've not had any questions

00:27:12,880 --> 00:27:17,840
cool yes we'll we'll definitely uh also

00:27:15,840 --> 00:27:18,880
upload the slides afterwards so you can

00:27:17,840 --> 00:27:21,520
we can watch them

00:27:18,880 --> 00:27:22,080
and awesome and check it out awesome

00:27:21,520 --> 00:27:25,919
awesome

00:27:22,080 --> 00:27:26,799
yup awesome great um maybe we could just

00:27:25,919 --> 00:27:28,720
hang around

00:27:26,799 --> 00:27:30,000
for like a minute or two to see if

00:27:28,720 --> 00:27:34,480
anyone

00:27:30,000 --> 00:27:37,919
have any let's questions

00:27:34,480 --> 00:27:37,919
is there anything in the stage

00:27:38,080 --> 00:27:44,559
yeah but but i would want to ask so um

00:27:41,679 --> 00:27:45,279
because i i didn't join it when you

00:27:44,559 --> 00:27:47,679
started but i

00:27:45,279 --> 00:27:49,440
want to know what was the motivation

00:27:47,679 --> 00:27:51,600
behind

00:27:49,440 --> 00:27:53,840
two locusts and then that's in the

00:27:51,600 --> 00:27:56,720
franklin project

00:27:53,840 --> 00:27:58,480
so the motivation is to well learn more

00:27:56,720 --> 00:27:59,840
about this stuff because we as we showed

00:27:58,480 --> 00:28:00,320
in the slide like we're really on the

00:27:59,840 --> 00:28:03,600
beginning

00:28:00,320 --> 00:28:05,760
like also having been in the you know

00:28:03,600 --> 00:28:06,720
community for some time it's it's really

00:28:05,760 --> 00:28:09,039
just like

00:28:06,720 --> 00:28:10,960
the start uh so we want to learn more

00:28:09,039 --> 00:28:14,159
that is you know our personal motivation

00:28:10,960 --> 00:28:16,559
but also we we you know really want to

00:28:14,159 --> 00:28:17,760
um as i was describing like lower the

00:28:16,559 --> 00:28:20,480
the barrier of entry

00:28:17,760 --> 00:28:21,840
to this field by doing these tangible

00:28:20,480 --> 00:28:25,120
things and and you know

00:28:21,840 --> 00:28:26,880
making it easier to uh

00:28:25,120 --> 00:28:28,640
understand you know and this is so

00:28:26,880 --> 00:28:28,960
complex all of these cloud native things

00:28:28,640 --> 00:28:31,760
i

00:28:28,960 --> 00:28:33,440
you know i i don't have no idea you know

00:28:31,760 --> 00:28:36,000
how many cncf projects there

00:28:33,440 --> 00:28:36,559
there are these days there's just so

00:28:36,000 --> 00:28:39,520
many

00:28:36,559 --> 00:28:40,480
every day coming in and uh and then that

00:28:39,520 --> 00:28:42,320
would be this would

00:28:40,480 --> 00:28:44,080
we hope would be the you know perfect

00:28:42,320 --> 00:28:46,640
testbed for that kind of stuff

00:28:44,080 --> 00:28:48,399
so you know like you you want to try

00:28:46,640 --> 00:28:49,600
something out you know you just like

00:28:48,399 --> 00:28:52,159
download it and then

00:28:49,600 --> 00:28:54,000
see it then you can plug wires and stuff

00:28:52,159 --> 00:28:55,520
and then have it really tangible

00:28:54,000 --> 00:28:57,200
uh that is that is why we start a

00:28:55,520 --> 00:28:59,840
project but but i said like

00:28:57,200 --> 00:29:01,840
there's no code yet just like design and

00:28:59,840 --> 00:29:03,440
and these kinds of ideas and then where

00:29:01,840 --> 00:29:06,000
you know we're open to all kinds of

00:29:03,440 --> 00:29:09,039
feedback from the community

00:29:06,000 --> 00:29:12,399
yeah also also dennis you want to

00:29:09,039 --> 00:29:15,120
add something yeah i can just add uh

00:29:12,399 --> 00:29:17,279
that kind of we also felt that there was

00:29:15,120 --> 00:29:19,200
a huge discrepancy between what the

00:29:17,279 --> 00:29:20,880
hyperscalers were doing they were

00:29:19,200 --> 00:29:23,840
going full steam ahead with their custom

00:29:20,880 --> 00:29:26,559
cloud solutions and we kind of

00:29:23,840 --> 00:29:28,880
lay man normal consumer people here are

00:29:26,559 --> 00:29:30,720
just kind of left behind so we wanted to

00:29:28,880 --> 00:29:32,159
research into this state of the art and

00:29:30,720 --> 00:29:35,120
kind of how can we bring this

00:29:32,159 --> 00:29:37,200
into home labs and education how can we

00:29:35,120 --> 00:29:40,799
make people aware of these systems

00:29:37,200 --> 00:29:41,679
so that was also one incentive behind

00:29:40,799 --> 00:29:45,200
this

00:29:41,679 --> 00:29:46,880
yeah that's good to hear

00:29:45,200 --> 00:29:48,480
actually we have a question so someone

00:29:46,880 --> 00:29:51,919
said cancel this

00:29:48,480 --> 00:29:51,919
kind of person with no questions

00:29:52,159 --> 00:29:55,360
sorry i didn't hear that question can

00:29:53,679 --> 00:29:58,559
you say you know yeah

00:29:55,360 --> 00:30:02,240
can a person with no goddamn skill

00:29:58,559 --> 00:30:04,480
join raclettes yes yes

00:30:02,240 --> 00:30:05,440
so one of the the great things about

00:30:04,480 --> 00:30:08,720
this is that

00:30:05,440 --> 00:30:11,039
as we go we want to

00:30:08,720 --> 00:30:12,240
demystify things so like as we learn the

00:30:11,039 --> 00:30:14,320
different projects say

00:30:12,240 --> 00:30:15,760
say you know the update framework i'm

00:30:14,320 --> 00:30:18,880
working on at the moment

00:30:15,760 --> 00:30:19,679
so that is a very kind of complex uh

00:30:18,880 --> 00:30:23,039
that is a very

00:30:19,679 --> 00:30:25,600
you know academic uh cncf project and

00:30:23,039 --> 00:30:27,520
and you know i some years ago i had

00:30:25,600 --> 00:30:30,640
taken a look at it but just like uh

00:30:27,520 --> 00:30:32,640
you know i i can't do it uh after some

00:30:30,640 --> 00:30:34,640
time but now i've spent some months

00:30:32,640 --> 00:30:36,880
and actually try to understand it well

00:30:34,640 --> 00:30:39,520
and what i'm gonna do then is you know

00:30:36,880 --> 00:30:41,440
uh or what we're gonna do as a team is

00:30:39,520 --> 00:30:44,399
is make a blog post about this

00:30:41,440 --> 00:30:46,399
to say like okay in in normal terms like

00:30:44,399 --> 00:30:48,080
what does it mean and why should you use

00:30:46,399 --> 00:30:49,120
it and what are the benefits and that

00:30:48,080 --> 00:30:52,159
kind of stuff

00:30:49,120 --> 00:30:53,200
and um and one way to contribute is you

00:30:52,159 --> 00:30:56,480
know using uh

00:30:53,200 --> 00:30:58,399
docs so like exactly in that that way

00:30:56,480 --> 00:31:01,039
you you

00:30:58,399 --> 00:31:02,799
see some kind of nice project and and

00:31:01,039 --> 00:31:04,720
then you're like okay i

00:31:02,799 --> 00:31:06,240
want to understand this more then you

00:31:04,720 --> 00:31:07,600
you know we can discuss it we can you

00:31:06,240 --> 00:31:09,360
know have this kind of community

00:31:07,600 --> 00:31:10,880
we talk about it and then you write this

00:31:09,360 --> 00:31:12,960
kind of blog post that

00:31:10,880 --> 00:31:15,120
okay so here is what i learned and you

00:31:12,960 --> 00:31:15,760
know if i knew these three things before

00:31:15,120 --> 00:31:17,919
i started

00:31:15,760 --> 00:31:19,440
looking into project x that would have

00:31:17,919 --> 00:31:21,360
been amazing and now i'm you know

00:31:19,440 --> 00:31:23,360
going to share that with others so that

00:31:21,360 --> 00:31:25,600
is one of the great ways to

00:31:23,360 --> 00:31:28,480
to do uh to contribute but also well

00:31:25,600 --> 00:31:30,640
dennis can comment on this more

00:31:28,480 --> 00:31:32,799
like 3d printing you know like there's a

00:31:30,640 --> 00:31:36,240
lot of uh you know you need to

00:31:32,799 --> 00:31:37,840
be great uh at designing cad stuff or

00:31:36,240 --> 00:31:40,080
electronics or

00:31:37,840 --> 00:31:41,440
microcontrollers or that kind of that

00:31:40,080 --> 00:31:43,919
kind of stuff

00:31:41,440 --> 00:31:45,120
or just community or like uh community

00:31:43,919 --> 00:31:49,039
management is a super

00:31:45,120 --> 00:31:52,000
important uh super important work

00:31:49,039 --> 00:31:52,399
um you know helping people find each

00:31:52,000 --> 00:31:54,159
other

00:31:52,399 --> 00:31:56,960
and these kinds of things that's that's

00:31:54,159 --> 00:31:58,559
you know people for example in

00:31:56,960 --> 00:32:00,559
special interest group contribute or

00:31:58,559 --> 00:32:03,200
experience that

00:32:00,559 --> 00:32:04,720
satoshi was talking about it is like

00:32:03,200 --> 00:32:08,000
just amazing so like

00:32:04,720 --> 00:32:10,480
that as well could be could be a place

00:32:08,000 --> 00:32:12,640
and of course if you're great at writing

00:32:10,480 --> 00:32:13,039
documentation or you want to learn more

00:32:12,640 --> 00:32:16,000
then

00:32:13,039 --> 00:32:16,640
i also or we as a team also highly

00:32:16,000 --> 00:32:18,880
encourage

00:32:16,640 --> 00:32:21,200
reading through the the request for

00:32:18,880 --> 00:32:23,760
comments documents of raclette and

00:32:21,200 --> 00:32:25,760
kind of even small contributor

00:32:23,760 --> 00:32:28,320
contributions like fixing typos

00:32:25,760 --> 00:32:30,559
and improving wording and saying that

00:32:28,320 --> 00:32:32,960
this chapter is unclear all of that is

00:32:30,559 --> 00:32:34,480
is highly appreciated so

00:32:32,960 --> 00:32:36,559
feel free there's so many different

00:32:34,480 --> 00:32:38,000
things uh that you can do in wrecklet

00:32:36,559 --> 00:32:38,799
and feel free to just come in and

00:32:38,000 --> 00:32:40,159
contribute

00:32:38,799 --> 00:32:42,000
yeah and if you don't know where to

00:32:40,159 --> 00:32:44,320
start just you know like join

00:32:42,000 --> 00:32:45,679
the slack and ask where do i start like

00:32:44,320 --> 00:32:48,880
these are my skills

00:32:45,679 --> 00:32:50,399
and then we'll find something helpful

00:32:48,880 --> 00:32:53,120
we need to add this left to the slides

00:32:50,399 --> 00:32:58,320
as well yes

00:32:53,120 --> 00:32:58,320
absolutely absolutely yeah look us

00:32:58,480 --> 00:33:02,240
so i i just thought that there's a

00:33:00,240 --> 00:33:05,120
another question uh

00:33:02,240 --> 00:33:06,480
is nanopai from friendly friendly elec

00:33:05,120 --> 00:33:09,519
uh supported

00:33:06,480 --> 00:33:12,000
uh so well we don't have any

00:33:09,519 --> 00:33:12,640
any code yet so we don't support uh or

00:33:12,000 --> 00:33:15,360
there's no

00:33:12,640 --> 00:33:16,799
nothing that actually um yeah implement

00:33:15,360 --> 00:33:18,640
that we can support

00:33:16,799 --> 00:33:20,559
right now we can't say that we support

00:33:18,640 --> 00:33:21,760
it but uh let's just say that it is in

00:33:20,559 --> 00:33:24,159
the in the list of

00:33:21,760 --> 00:33:25,519
single board computers that we plan to

00:33:24,159 --> 00:33:28,799
support as a first party

00:33:25,519 --> 00:33:30,960
so yes so so we want but but if you have

00:33:28,799 --> 00:33:34,240
a nanopi then you know a great way

00:33:30,960 --> 00:33:36,159
to contribute is also you know um

00:33:34,240 --> 00:33:38,000
try you know when there's some code then

00:33:36,159 --> 00:33:41,039
try it out and say that you know like

00:33:38,000 --> 00:33:42,559
this stack of errors you know came up

00:33:41,039 --> 00:33:45,919
because you hadn't thought about this

00:33:42,559 --> 00:33:45,919
then that's great feedback as well

00:33:47,600 --> 00:33:52,159
i couldn't argue more wow awesome

00:33:50,840 --> 00:33:54,640
awesome

00:33:52,159 --> 00:33:55,919
so yeah i i mean i'm really glad that

00:33:54,640 --> 00:33:57,760
you actually mentioned

00:33:55,919 --> 00:33:59,919
the parts where people can actually

00:33:57,760 --> 00:34:01,200
contribute to your dogs because you know

00:33:59,919 --> 00:34:03,039
when people care about open source

00:34:01,200 --> 00:34:06,000
contributions they just think it's just

00:34:03,039 --> 00:34:07,679
school but you can contribute to dogs

00:34:06,000 --> 00:34:09,760
you can contribute to

00:34:07,679 --> 00:34:10,800
future possibly dogs you know anything

00:34:09,760 --> 00:34:13,839
basically

00:34:10,800 --> 00:34:18,480
so yeah um awesome uh presentation

00:34:13,839 --> 00:34:22,320
of some conversations we've had so far

00:34:18,480 --> 00:34:26,079
and yeah i think we are on time

00:34:22,320 --> 00:34:27,919
or out of time let's see yeah exactly

00:34:26,079 --> 00:34:29,760
so i would want to ask them this one

00:34:27,919 --> 00:34:30,480
question but i don't have enough time

00:34:29,760 --> 00:34:32,560
for that but

00:34:30,480 --> 00:34:34,480
i think i will have to proceed anyways

00:34:32,560 --> 00:34:37,040
so uh that is you

00:34:34,480 --> 00:34:38,399
i see a student and we are also an open

00:34:37,040 --> 00:34:41,280
source developer so like

00:34:38,399 --> 00:34:41,760
how do you manage your time basically

00:34:41,280 --> 00:34:44,800
because

00:34:41,760 --> 00:34:47,119
i mean like the fact that you you and

00:34:44,800 --> 00:34:48,960
lucas are considering working on this

00:34:47,119 --> 00:34:51,119
project called raclette means

00:34:48,960 --> 00:34:52,879
you have sticked it a lot of times as

00:34:51,119 --> 00:34:56,800
well as studies

00:34:52,879 --> 00:34:59,440
so how do you tend to manage the time

00:34:56,800 --> 00:35:00,960
well that balance is also kind of the

00:34:59,440 --> 00:35:03,280
reason why we haven't

00:35:00,960 --> 00:35:04,400
gotten to write any code or do any

00:35:03,280 --> 00:35:08,800
hardware design yet

00:35:04,400 --> 00:35:12,079
so it's kind of studying still

00:35:08,800 --> 00:35:13,680
is my primary job and then i do just

00:35:12,079 --> 00:35:14,480
open source small contributions on the

00:35:13,680 --> 00:35:17,839
side

00:35:14,480 --> 00:35:19,839
when i have the time which is

00:35:17,839 --> 00:35:20,880
really tight but then i hoped that in

00:35:19,839 --> 00:35:22,480
the summer

00:35:20,880 --> 00:35:23,920
i've kind of dedicated the whole summer

00:35:22,480 --> 00:35:26,320
to work on raclette so that we can

00:35:23,920 --> 00:35:27,920
actually get the project kick started

00:35:26,320 --> 00:35:30,400
yeah that's that's also why it fits

00:35:27,920 --> 00:35:33,119
perfectly with

00:35:30,400 --> 00:35:33,520
this conference to to tell people about

00:35:33,119 --> 00:35:35,680
it

00:35:33,520 --> 00:35:37,280
that you know now we're just like

00:35:35,680 --> 00:35:39,040
starting to ramp up we haven't

00:35:37,280 --> 00:35:40,960
you know said as we said like done much

00:35:39,040 --> 00:35:43,119
more than the idea part

00:35:40,960 --> 00:35:44,880
and uh and now we're gonna start doing

00:35:43,119 --> 00:35:45,440
stuff when we get a bit more time in the

00:35:44,880 --> 00:35:47,119
summer

00:35:45,440 --> 00:35:49,839
because because yeah it's tight with

00:35:47,119 --> 00:35:49,839
university

00:35:50,320 --> 00:35:57,280
yeah exactly awesome

00:35:54,160 --> 00:35:58,240
awesome so yeah thanks a lot dennis and

00:35:57,280 --> 00:36:01,280
lucas for

00:35:58,240 --> 00:36:01,680
awesome presentation and yeah i'll pick

00:36:01,280 --> 00:36:03,680
up

00:36:01,680 --> 00:36:06,000
abubakar if you want to take it off from

00:36:03,680 --> 00:36:06,000

YouTube URL: https://www.youtube.com/watch?v=YKWtR0xOnF4


