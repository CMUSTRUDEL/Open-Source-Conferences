Title: Reducing Attack Surface using Network Policies
Publication date: 2021-06-01
Playlist: KCD Africa
Description: 
	Mmadu Manasseh is a software Engineer at Deimos Cloud, based out of South Africa.
Captions: 
	00:00:00,960 --> 00:00:07,040
uh yeah uh awesome

00:00:03,919 --> 00:00:10,639
yeah welcome everyone

00:00:07,040 --> 00:00:12,799
to the enterprise track of the

00:00:10,639 --> 00:00:13,920
community expenses going to this apple

00:00:12,799 --> 00:00:17,520
car

00:00:13,920 --> 00:00:21,680
and yeah i'm super excited to

00:00:17,520 --> 00:00:25,359
introduce our first speaker i think

00:00:21,680 --> 00:00:25,359
and you know he is

00:00:26,000 --> 00:00:32,400
saying so matu is a devops engineer

00:00:32,719 --> 00:00:39,520
oh sorry okay

00:00:36,000 --> 00:00:42,840
okay cool cool i actually

00:00:39,520 --> 00:00:44,480
thought i mispronounced something so so

00:00:42,840 --> 00:00:48,079
yeah

00:00:44,480 --> 00:00:49,360
devops engineer at demos cloud and umadu

00:00:48,079 --> 00:00:53,280
will be speaking to

00:00:49,360 --> 00:00:56,480
us about um this topic

00:00:53,280 --> 00:00:58,960
which is basically reducing attacks

00:00:56,480 --> 00:01:04,000
office using network policies

00:00:58,960 --> 00:01:04,000
yeah module deploys yes feel free to

00:01:10,840 --> 00:01:13,840
share

00:01:20,720 --> 00:01:27,520
all right uh good afternoon everyone

00:01:24,560 --> 00:01:28,000
thank you for having me uh let me know

00:01:27,520 --> 00:01:30,880
if you can

00:01:28,000 --> 00:01:30,880
if you can hear me

00:01:38,560 --> 00:01:46,799
all right cool so um

00:01:43,040 --> 00:01:48,720
i'm just gonna start presenting now

00:01:46,799 --> 00:01:50,079
so yeah uh good afternoon once again

00:01:48,720 --> 00:01:53,840
welcome to um

00:01:50,079 --> 00:01:56,479
our very first edition of kubernetes

00:01:53,840 --> 00:01:58,320
advances this africa so i'm here to be

00:01:56,479 --> 00:02:02,240
talking about uh reducing

00:01:58,320 --> 00:02:02,240
attack surface using network policies

00:02:02,560 --> 00:02:06,799
all right so uh first of all very

00:02:04,560 --> 00:02:12,000
briefly uh my name is maya c

00:02:06,799 --> 00:02:14,239
and i work as an sre at demos

00:02:12,000 --> 00:02:16,000
at the most we work on infrastructural

00:02:14,239 --> 00:02:19,200
design security and

00:02:16,000 --> 00:02:20,560
implementation so yeah for those of you

00:02:19,200 --> 00:02:23,520
who don't know what they must do

00:02:20,560 --> 00:02:24,800
deimos is a devsecops company that helps

00:02:23,520 --> 00:02:27,599
to guide other companies

00:02:24,800 --> 00:02:28,959
into their path of cloud adoption so we

00:02:27,599 --> 00:02:32,000
offer a range of services

00:02:28,959 --> 00:02:32,480
from migration to cloud to circuits on

00:02:32,000 --> 00:02:34,959
your

00:02:32,480 --> 00:02:36,000
own infrastructure and we also offer

00:02:34,959 --> 00:02:39,040
google workspaces

00:02:36,000 --> 00:02:41,599
us as a service

00:02:39,040 --> 00:02:43,200
all right so cool um today we'll be

00:02:41,599 --> 00:02:45,840
talking about security

00:02:43,200 --> 00:02:48,720
which is a very interesting first set of

00:02:45,840 --> 00:02:50,319
infrastructural management

00:02:48,720 --> 00:02:52,319
and in as much as most people don't like

00:02:50,319 --> 00:02:54,400
to hear it it's it's one of the

00:02:52,319 --> 00:02:55,360
basic things one of the major things

00:02:54,400 --> 00:02:58,159
that affects

00:02:55,360 --> 00:02:59,519
uh your performance the performance of

00:02:58,159 --> 00:03:01,200
your application and the security of

00:02:59,519 --> 00:03:03,680
your application

00:03:01,200 --> 00:03:04,879
so um basically security is just

00:03:03,680 --> 00:03:07,920
ensuring you

00:03:04,879 --> 00:03:10,080
adhere to confidentiality of data

00:03:07,920 --> 00:03:11,680
integrity of data and the availability

00:03:10,080 --> 00:03:16,400
of data to your customers

00:03:11,680 --> 00:03:18,879
because what basically security is and

00:03:16,400 --> 00:03:20,879
yeah we get this question a lot um how

00:03:18,879 --> 00:03:22,800
do you make your system secure

00:03:20,879 --> 00:03:24,560
so there's no uh i think before we just

00:03:22,800 --> 00:03:26,319
proceed i just want to

00:03:24,560 --> 00:03:27,760
state this out that there's no single

00:03:26,319 --> 00:03:29,440
solution to security

00:03:27,760 --> 00:03:32,080
um you just have to keep implementing

00:03:29,440 --> 00:03:34,080
layers of security defenses

00:03:32,080 --> 00:03:35,360
and that would improve your uh the

00:03:34,080 --> 00:03:38,879
security of your system

00:03:35,360 --> 00:03:42,159
as a whole all right let's let's

00:03:38,879 --> 00:03:44,720
let's dig deep into this um

00:03:42,159 --> 00:03:45,440
nice um security cloud security

00:03:44,720 --> 00:03:47,840
basically

00:03:45,440 --> 00:03:48,959
is um you trying to implement a whole

00:03:47,840 --> 00:03:50,959
range of um

00:03:48,959 --> 00:03:53,120
policies services that's going to help

00:03:50,959 --> 00:03:55,040
you protect your data from the cloud

00:03:53,120 --> 00:03:56,879
you know you want to protect your data

00:03:55,040 --> 00:03:58,959
from attackers you want to ensure that

00:03:56,879 --> 00:04:00,879
your data is constantly available

00:03:58,959 --> 00:04:02,000
and all these methods which you apply to

00:04:00,879 --> 00:04:03,439
help

00:04:02,000 --> 00:04:05,840
make all this possible it's just

00:04:03,439 --> 00:04:06,319
basically cloud security you already

00:04:05,840 --> 00:04:09,360
been

00:04:06,319 --> 00:04:11,040
cloud secured it goes from you know

00:04:09,360 --> 00:04:13,120
managing your im permissions

00:04:11,040 --> 00:04:14,879
ensuring that the appropriate user has

00:04:13,120 --> 00:04:16,160
the appropriate permissions to you know

00:04:14,879 --> 00:04:18,320
setting up firewalls

00:04:16,160 --> 00:04:21,440
all of this like all these uh they

00:04:18,320 --> 00:04:23,520
constitute uh security in the cloud

00:04:21,440 --> 00:04:25,600
and one of the major ways of of

00:04:23,520 --> 00:04:28,800
improving your security

00:04:25,600 --> 00:04:29,680
is identifying identifying ways which

00:04:28,800 --> 00:04:32,000
you can reduce

00:04:29,680 --> 00:04:33,759
attack surface so basically an attack

00:04:32,000 --> 00:04:35,440
surface is is um

00:04:33,759 --> 00:04:37,040
what an attacker can do when it gains

00:04:35,440 --> 00:04:38,479
access into your system

00:04:37,040 --> 00:04:40,160
so for example when you walk into a

00:04:38,479 --> 00:04:41,840
compound what can you do you can you see

00:04:40,160 --> 00:04:42,800
a lot of rooms uh you can walk into any

00:04:41,840 --> 00:04:44,560
of the rooms so

00:04:42,800 --> 00:04:46,000
the number of rooms you can walk into is

00:04:44,560 --> 00:04:47,680
basically like an attack surface an

00:04:46,000 --> 00:04:51,120
attacker has access to when it

00:04:47,680 --> 00:04:53,199
compromises your security and the

00:04:51,120 --> 00:04:54,400
game that gains access to your to your

00:04:53,199 --> 00:04:57,040
infrastructure

00:04:54,400 --> 00:04:58,800
so one major thing to do uh in order to

00:04:57,040 --> 00:04:59,680
improve your security is just to you

00:04:58,800 --> 00:05:03,759
know um

00:04:59,680 --> 00:05:06,160
try to reduce what this attacker can do

00:05:03,759 --> 00:05:07,280
so um we will be talking mostly about

00:05:06,160 --> 00:05:08,960
kubernetes

00:05:07,280 --> 00:05:10,560
so um the basic components of the

00:05:08,960 --> 00:05:12,800
kubernetes is the board

00:05:10,560 --> 00:05:14,639
with the containers as most people would

00:05:12,800 --> 00:05:16,960
say um

00:05:14,639 --> 00:05:18,880
so yeah what what can a particular

00:05:16,960 --> 00:05:20,400
attacker do when he compromises

00:05:18,880 --> 00:05:23,120
your port or your container that's

00:05:20,400 --> 00:05:26,160
something we want to basically know

00:05:23,120 --> 00:05:28,080
so um one of the major things is uh he

00:05:26,160 --> 00:05:31,759
can have access to the qbi server

00:05:28,080 --> 00:05:33,280
if the service account is mounted so

00:05:31,759 --> 00:05:36,000
this is very important because the cube

00:05:33,280 --> 00:05:37,520
api server contains

00:05:36,000 --> 00:05:39,440
accessing the qbi server means the

00:05:37,520 --> 00:05:41,039
attacker can have access to you know

00:05:39,440 --> 00:05:43,120
understanding what is deployed in your

00:05:41,039 --> 00:05:44,560
cluster knowing the name spaces

00:05:43,120 --> 00:05:45,840
knowing the applications you have and

00:05:44,560 --> 00:05:47,360
everything about your cluster basically

00:05:45,840 --> 00:05:48,560
is available once you have access to the

00:05:47,360 --> 00:05:50,160
cube api server

00:05:48,560 --> 00:05:52,560
so you really don't want to give him

00:05:50,160 --> 00:05:55,919
access to your qbpi server

00:05:52,560 --> 00:05:57,680
um another thing is um if if your pods

00:05:55,919 --> 00:05:59,360
are running in privilege mode

00:05:57,680 --> 00:06:00,880
the attacker can have access to you know

00:05:59,360 --> 00:06:02,400
the underlying node that the port is

00:06:00,880 --> 00:06:04,880
running on

00:06:02,400 --> 00:06:06,000
we've seen cases of what we call

00:06:04,880 --> 00:06:08,160
container escape

00:06:06,000 --> 00:06:10,240
so the person the attacker can choose to

00:06:08,160 --> 00:06:12,560
you know compromise the node which

00:06:10,240 --> 00:06:14,319
the particular port is running on

00:06:12,560 --> 00:06:16,240
another thing is uh you know if you have

00:06:14,319 --> 00:06:18,160
access to a port on the cluster the

00:06:16,240 --> 00:06:20,000
cluster is also on the network

00:06:18,160 --> 00:06:21,600
so the port can have access to you know

00:06:20,000 --> 00:06:23,039
other workloads and other components of

00:06:21,600 --> 00:06:24,160
your network so if you have a database

00:06:23,039 --> 00:06:26,240
on your network

00:06:24,160 --> 00:06:28,240
you have um order workloads on your

00:06:26,240 --> 00:06:29,680
network um the attacker can you have

00:06:28,240 --> 00:06:32,960
access to all of this

00:06:29,680 --> 00:06:36,000
once it compromises your port

00:06:32,960 --> 00:06:38,960
um one one uh another part which is very

00:06:36,000 --> 00:06:40,400
important is data exploitation

00:06:38,960 --> 00:06:42,720
when an attacker compromises a

00:06:40,400 --> 00:06:43,199
particular port um he can be able to

00:06:42,720 --> 00:06:45,759
export

00:06:43,199 --> 00:06:47,440
data to like another location and you

00:06:45,759 --> 00:06:49,440
know based on what

00:06:47,440 --> 00:06:51,120
data he needs and the data he has access

00:06:49,440 --> 00:06:51,680
to that can be very dangerous when maybe

00:06:51,120 --> 00:06:54,240
uh

00:06:51,680 --> 00:06:56,080
exports user information or let's say

00:06:54,240 --> 00:06:59,280
credit card details for example

00:06:56,080 --> 00:06:59,599
to a particular location so what can we

00:06:59,280 --> 00:07:01,360
do

00:06:59,599 --> 00:07:03,120
we've been able to identify you know

00:07:01,360 --> 00:07:04,560
what this attacker can do once they have

00:07:03,120 --> 00:07:06,479
access to report

00:07:04,560 --> 00:07:08,800
we want to be able to reduce the attack

00:07:06,479 --> 00:07:10,720
surface so that's what we said

00:07:08,800 --> 00:07:12,479
basically what this talk is about so we

00:07:10,720 --> 00:07:14,800
want to limit what the user can do once

00:07:12,479 --> 00:07:16,639
it compromises a particular port

00:07:14,800 --> 00:07:18,479
so most times architectures are in such

00:07:16,639 --> 00:07:19,520
a way that um we have front-facing

00:07:18,479 --> 00:07:20,960
applications and then we have

00:07:19,520 --> 00:07:22,880
applications at the back

00:07:20,960 --> 00:07:24,639
so your front-facing application can be

00:07:22,880 --> 00:07:26,400
probably your front-end and then you can

00:07:24,639 --> 00:07:28,160
have like you know back

00:07:26,400 --> 00:07:30,720
and applications that you know power

00:07:28,160 --> 00:07:33,440
those front end so we want to limit

00:07:30,720 --> 00:07:34,000
the depos or the the services that this

00:07:33,440 --> 00:07:36,800
user

00:07:34,000 --> 00:07:40,080
can access once um our funds facing

00:07:36,800 --> 00:07:43,199
application is compromised for example

00:07:40,080 --> 00:07:44,800
so yeah uh enters network policies so

00:07:43,199 --> 00:07:46,800
yeah um

00:07:44,800 --> 00:07:49,199
network policies are basically a set of

00:07:46,800 --> 00:07:52,639
rules you know that determines how

00:07:49,199 --> 00:07:54,800
our clusters would uh would

00:07:52,639 --> 00:07:55,840
communicate so if your pod is in your

00:07:54,800 --> 00:07:57,680
cluster

00:07:55,840 --> 00:07:59,440
and you want to restrict it only to be

00:07:57,680 --> 00:08:00,879
able to communicate only to a particular

00:07:59,440 --> 00:08:03,280
subset of calls you know

00:08:00,879 --> 00:08:05,039
um for example the case i gave earlier

00:08:03,280 --> 00:08:06,319
you have your font and you have your

00:08:05,039 --> 00:08:06,960
back end i have your database for

00:08:06,319 --> 00:08:08,560
example

00:08:06,960 --> 00:08:10,000
the front-end communicates the back-end

00:08:08,560 --> 00:08:12,080
the back-end communication database you

00:08:10,000 --> 00:08:14,800
don't want a direct communication from

00:08:12,080 --> 00:08:15,440
the front end to the back end so uh you

00:08:14,800 --> 00:08:17,680
can take

00:08:15,440 --> 00:08:18,800
uh you can implement things such as

00:08:17,680 --> 00:08:21,360
network policies

00:08:18,800 --> 00:08:22,319
and these network policies would

00:08:21,360 --> 00:08:24,000
restrict

00:08:22,319 --> 00:08:26,400
the communication a particular port can

00:08:24,000 --> 00:08:27,759
do when it is in the cluster

00:08:26,400 --> 00:08:29,440
so you can just look at network policies

00:08:27,759 --> 00:08:32,000
like um ip tables

00:08:29,440 --> 00:08:32,800
photo supports coming from a linux

00:08:32,000 --> 00:08:35,919
background

00:08:32,800 --> 00:08:38,159
um so we have um ip tables are just like

00:08:35,919 --> 00:08:41,279
a way of setting firewall rules on

00:08:38,159 --> 00:08:43,360
on on vms on on linux

00:08:41,279 --> 00:08:45,200
and they are network policies are like i

00:08:43,360 --> 00:08:48,959
came to um ip tables

00:08:45,200 --> 00:08:51,600
on kubernetes

00:08:48,959 --> 00:08:53,519
so uh why do we need network policies um

00:08:51,600 --> 00:08:55,440
some people might say okay we have ip

00:08:53,519 --> 00:08:57,680
tables we could probably just

00:08:55,440 --> 00:08:58,480
you know get an inspiration for my ip

00:08:57,680 --> 00:09:01,040
table on

00:08:58,480 --> 00:09:02,880
and do something around it but one thing

00:09:01,040 --> 00:09:05,839
with kubernetes is

00:09:02,880 --> 00:09:07,360
um the ipr addresses are quite dynamic

00:09:05,839 --> 00:09:11,120
so your port when your port

00:09:07,360 --> 00:09:13,680
spins up it it has an ip address that

00:09:11,120 --> 00:09:15,519
would change when it spins up again and

00:09:13,680 --> 00:09:17,120
we know from deployments that this this

00:09:15,519 --> 00:09:19,839
this is bound to happen

00:09:17,120 --> 00:09:21,360
so um when you scale up you scale down

00:09:19,839 --> 00:09:23,920
new ports gets created all of these

00:09:21,360 --> 00:09:27,120
sports have different ip addresses

00:09:23,920 --> 00:09:28,560
and yeah that's

00:09:27,120 --> 00:09:30,320
why one of the major reasons why we

00:09:28,560 --> 00:09:33,519
needed something that is tailored

00:09:30,320 --> 00:09:35,839
to kubernetes specifically

00:09:33,519 --> 00:09:38,320
and uh yeah another thing we have to

00:09:35,839 --> 00:09:40,320
notice is keyboard net is um

00:09:38,320 --> 00:09:42,080
most people don't don't know this but uh

00:09:40,320 --> 00:09:44,880
bonuses by default don't give you

00:09:42,080 --> 00:09:46,880
all these security features implemented

00:09:44,880 --> 00:09:49,040
so you have to do this yourself and

00:09:46,880 --> 00:09:50,640
by default all all the pods in every

00:09:49,040 --> 00:09:52,320
name space can communicate to each other

00:09:50,640 --> 00:09:53,600
so you have a test name space

00:09:52,320 --> 00:09:55,600
you have a staging name space you have

00:09:53,600 --> 00:09:57,120
your production name space staging can

00:09:55,600 --> 00:09:59,120
communicate to production so that's how

00:09:57,120 --> 00:10:00,160
kubernetes works by default there is no

00:09:59,120 --> 00:10:03,279
isolation

00:10:00,160 --> 00:10:04,480
of the port traffic at all so yeah right

00:10:03,279 --> 00:10:06,880
now you see why we need national

00:10:04,480 --> 00:10:08,640
policies

00:10:06,880 --> 00:10:10,079
so um how does network policies just

00:10:08,640 --> 00:10:14,240
basically work

00:10:10,079 --> 00:10:17,279
um so network policies they use labels

00:10:14,240 --> 00:10:18,079
so from kubernetes uh services and

00:10:17,279 --> 00:10:19,920
deployment

00:10:18,079 --> 00:10:21,920
we've seen this in when you're defining

00:10:19,920 --> 00:10:25,279
your deployment or your

00:10:21,920 --> 00:10:27,839
or your so your service um

00:10:25,279 --> 00:10:29,760
one thing you you will notice is we use

00:10:27,839 --> 00:10:32,800
what we call selector levels

00:10:29,760 --> 00:10:34,399
so selectors are just labels that that

00:10:32,800 --> 00:10:35,600
target specific board

00:10:34,399 --> 00:10:38,000
so that's the same thing with network

00:10:35,600 --> 00:10:40,320
policies network policies use labels

00:10:38,000 --> 00:10:42,560
and this labels target specific boards

00:10:40,320 --> 00:10:44,320
to apply those policies to

00:10:42,560 --> 00:10:46,240
and another thing you have to know in

00:10:44,320 --> 00:10:48,399
network policies is

00:10:46,240 --> 00:10:50,079
it is implemented by kubernetes it's so

00:10:48,399 --> 00:10:51,680
it is um it is designed by kubernetes

00:10:50,079 --> 00:10:53,760
but it is implemented by

00:10:51,680 --> 00:10:55,279
your network plug-in so if your network

00:10:53,760 --> 00:10:55,839
plug-in doesn't support network policies

00:10:55,279 --> 00:10:57,040
then

00:10:55,839 --> 00:10:59,040
i'm sorry you wouldn't be able to use

00:10:57,040 --> 00:11:00,959
this functionality so if

00:10:59,040 --> 00:11:02,959
uh some example of network plugins that

00:11:00,959 --> 00:11:03,519
that do this we have kaliku we have with

00:11:02,959 --> 00:11:05,040
net

00:11:03,519 --> 00:11:06,959
we have celium and you have cube router

00:11:05,040 --> 00:11:09,839
there are others uh these are not just

00:11:06,959 --> 00:11:11,200
the the four limited network plugins but

00:11:09,839 --> 00:11:12,640
you have to be sure if you want to

00:11:11,200 --> 00:11:13,600
implement a policy you have to you have

00:11:12,640 --> 00:11:16,880
to confirm that

00:11:13,600 --> 00:11:18,880
your network plug-in actually supports

00:11:16,880 --> 00:11:20,800
kind of policy implementations

00:11:18,880 --> 00:11:24,240
themselves

00:11:20,800 --> 00:11:26,079
so um you also need to be you also need

00:11:24,240 --> 00:11:28,079
to know that network policies are

00:11:26,079 --> 00:11:29,279
name spaced that means um they are

00:11:28,079 --> 00:11:33,200
limited to

00:11:29,279 --> 00:11:34,880
naming spaces um if you apply a network

00:11:33,200 --> 00:11:38,000
policy in a particular namespace

00:11:34,880 --> 00:11:41,760
it doesn't affect other

00:11:38,000 --> 00:11:43,519
ports on another namespace although um

00:11:41,760 --> 00:11:44,480
you can't have extensions the basic

00:11:43,519 --> 00:11:46,720
network policies are

00:11:44,480 --> 00:11:48,079
names based but as we've said network

00:11:46,720 --> 00:11:48,800
policies are implemented by the network

00:11:48,079 --> 00:11:51,600
plugin

00:11:48,800 --> 00:11:53,279
so kaliku can choose to extend this by

00:11:51,600 --> 00:11:56,160
adding support for global

00:11:53,279 --> 00:11:57,920
network policies yeah but just uh know

00:11:56,160 --> 00:11:58,639
that network policies by default are

00:11:57,920 --> 00:12:00,720
namespaced

00:11:58,639 --> 00:12:02,320
except you want to go opting for like

00:12:00,720 --> 00:12:04,560
customized setup policies

00:12:02,320 --> 00:12:06,000
offered by network plugins those ones

00:12:04,560 --> 00:12:08,880
offer other enriched

00:12:06,000 --> 00:12:10,240
features for network policies so yeah um

00:12:08,880 --> 00:12:12,720
this is like a quick link

00:12:10,240 --> 00:12:13,360
to a site you can use this is used by

00:12:12,720 --> 00:12:16,639
psyllium

00:12:13,360 --> 00:12:18,560
and um just it helps you um

00:12:16,639 --> 00:12:21,279
design a network policy and visualize it

00:12:18,560 --> 00:12:25,760
properly so you can easily

00:12:21,279 --> 00:12:29,279
work with network policies

00:12:25,760 --> 00:12:32,160
cool um let's look at

00:12:29,279 --> 00:12:32,720
the basic definition of a network policy

00:12:32,160 --> 00:12:34,639
so

00:12:32,720 --> 00:12:36,240
we're just going to run through how to

00:12:34,639 --> 00:12:39,600
create a network policy

00:12:36,240 --> 00:12:41,279
which is um very important so

00:12:39,600 --> 00:12:44,000
the first and important part of the

00:12:41,279 --> 00:12:47,440
network policy is the port selector

00:12:44,000 --> 00:12:48,399
so um the port selector determines which

00:12:47,440 --> 00:12:50,079
ports

00:12:48,399 --> 00:12:51,680
these network policies apply to they are

00:12:50,079 --> 00:12:54,399
akin to

00:12:51,680 --> 00:12:55,920
selector labels on services or on

00:12:54,399 --> 00:12:57,680
deployment so

00:12:55,920 --> 00:12:59,360
before the deliberates you define

00:12:57,680 --> 00:13:02,480
another port selector targets

00:12:59,360 --> 00:13:04,839
some specific set of ports and then

00:13:02,480 --> 00:13:06,399
apply these network policies to those

00:13:04,839 --> 00:13:08,399
ports

00:13:06,399 --> 00:13:10,079
and uh the policy type so we have two

00:13:08,399 --> 00:13:11,680
types of traffic

00:13:10,079 --> 00:13:13,200
traffic we have ingress and ingress

00:13:11,680 --> 00:13:16,720
traffic

00:13:13,200 --> 00:13:18,560
um so um if we want to target only

00:13:16,720 --> 00:13:21,360
ingresses there's traffic coming in

00:13:18,560 --> 00:13:22,079
we specify a policy type of ingress if

00:13:21,360 --> 00:13:24,399
you want to

00:13:22,079 --> 00:13:26,720
target traffic going out of the port we

00:13:24,399 --> 00:13:29,519
target igor's type policies

00:13:26,720 --> 00:13:31,120
and um generally you can also add both

00:13:29,519 --> 00:13:32,880
of them like that you can define both

00:13:31,120 --> 00:13:36,480
ingress and equates policies

00:13:32,880 --> 00:13:39,440
for your network policy

00:13:36,480 --> 00:13:40,959
uh so you can after you've defined the

00:13:39,440 --> 00:13:42,320
policy type the next thing is you need

00:13:40,959 --> 00:13:45,279
to specify the rule

00:13:42,320 --> 00:13:47,040
that this policy is going to is going to

00:13:45,279 --> 00:13:50,160
use during communication

00:13:47,040 --> 00:13:50,720
so um as you can see here your rules can

00:13:50,160 --> 00:13:53,839
have

00:13:50,720 --> 00:13:56,000
four four basic types so you can define

00:13:53,839 --> 00:13:56,399
an ip block so an ip block is basically

00:13:56,000 --> 00:13:59,360
saying

00:13:56,399 --> 00:14:01,519
um this is a particular ip i want to

00:13:59,360 --> 00:14:03,279
limit the communication from o2

00:14:01,519 --> 00:14:04,959
does if you are using network ingress or

00:14:03,279 --> 00:14:07,600
egress

00:14:04,959 --> 00:14:08,079
namespace is is just saying um i want to

00:14:07,600 --> 00:14:10,160
limit

00:14:08,079 --> 00:14:11,760
communication to a particular namespace

00:14:10,160 --> 00:14:13,680
or from a particular namespace

00:14:11,760 --> 00:14:15,040
this is very important like when you are

00:14:13,680 --> 00:14:18,160
deploying um

00:14:15,040 --> 00:14:20,079
isolated environment so you you have a

00:14:18,160 --> 00:14:21,600
test environment and you want to isolate

00:14:20,079 --> 00:14:23,360
test environments from

00:14:21,600 --> 00:14:25,040
the demo environment and they are all on

00:14:23,360 --> 00:14:26,079
the same cluster so what you want to do

00:14:25,040 --> 00:14:29,440
is you want to limit

00:14:26,079 --> 00:14:31,920
traffic that can uh that can um

00:14:29,440 --> 00:14:32,560
enter a particular port in the test or

00:14:31,920 --> 00:14:35,199
in the demo

00:14:32,560 --> 00:14:36,399
space so yeah the import selector which

00:14:35,199 --> 00:14:39,519
are very granular

00:14:36,399 --> 00:14:41,440
so this sorry this um

00:14:39,519 --> 00:14:43,279
this specifies the ports that you want

00:14:41,440 --> 00:14:44,480
to target particularly like this is

00:14:43,279 --> 00:14:47,360
specific

00:14:44,480 --> 00:14:48,079
um you want to target a specific set of

00:14:47,360 --> 00:14:50,160
ports

00:14:48,079 --> 00:14:51,440
on the in your in your particular

00:14:50,160 --> 00:14:54,079
cluster so

00:14:51,440 --> 00:14:55,279
um when you specify the spot selector

00:14:54,079 --> 00:14:58,639
under egress or

00:14:55,279 --> 00:15:00,959
ingress rule any traffic coming to from

00:14:58,639 --> 00:15:02,560
that port only will be accepted

00:15:00,959 --> 00:15:04,079
so any any other traffic that is going

00:15:02,560 --> 00:15:05,519
to any other portal coming from any

00:15:04,079 --> 00:15:09,600
other port would be dropped

00:15:05,519 --> 00:15:12,639
by the network policy um

00:15:09,600 --> 00:15:14,320
another thing is ports so ports are

00:15:12,639 --> 00:15:18,079
specifying the ports that we want

00:15:14,320 --> 00:15:20,639
of the policy to apply to um

00:15:18,079 --> 00:15:22,880
so for example you have a database in my

00:15:20,639 --> 00:15:27,600
sql database and you know my sequel

00:15:22,880 --> 00:15:31,120
normally listens on k306.336

00:15:27,600 --> 00:15:33,759
so you don't want the the the policy

00:15:31,120 --> 00:15:34,320
to allow access to other ports so you

00:15:33,759 --> 00:15:38,480
limit

00:15:34,320 --> 00:15:40,959
the port that it can communicate to

00:15:38,480 --> 00:15:41,759
so yeah um as a rule of thumb as a rule

00:15:40,959 --> 00:15:43,839
of

00:15:41,759 --> 00:15:45,199
thumb when you're creating um your

00:15:43,839 --> 00:15:47,759
network policy

00:15:45,199 --> 00:15:50,320
you should start with a default deny or

00:15:47,759 --> 00:15:53,440
so what this policy just means is

00:15:50,320 --> 00:15:54,000
drop every traffic in your cluster or in

00:15:53,440 --> 00:15:55,920
that particular

00:15:54,000 --> 00:15:57,680
name space no traffic comes in no

00:15:55,920 --> 00:15:59,519
traffic goes out so once you've done

00:15:57,680 --> 00:16:02,639
this you can now build up on this

00:15:59,519 --> 00:16:02,639
gradually and you know

00:16:02,720 --> 00:16:06,959
define granular network policies for

00:16:05,600 --> 00:16:09,120
your board

00:16:06,959 --> 00:16:10,240
so you want to do this because you

00:16:09,120 --> 00:16:13,680
forget you know um

00:16:10,240 --> 00:16:15,120
any um you don't want to miss out on any

00:16:13,680 --> 00:16:18,880
traffic

00:16:15,120 --> 00:16:20,720
it's just like permissions on um on

00:16:18,880 --> 00:16:22,480
you see uh you want to specify you want

00:16:20,720 --> 00:16:24,000
to give granular permissions

00:16:22,480 --> 00:16:26,160
you don't want to give excess permission

00:16:24,000 --> 00:16:29,519
so by default you first drop everything

00:16:26,160 --> 00:16:33,199
and then you give them specific policy

00:16:29,519 --> 00:16:37,440
definitions to allow specific traffic

00:16:33,199 --> 00:16:39,120
all right so yeah i've talked about this

00:16:37,440 --> 00:16:40,720
briefly when i was talking about

00:16:39,120 --> 00:16:42,560
isolating environments

00:16:40,720 --> 00:16:44,160
network policies are very important in

00:16:42,560 --> 00:16:48,720
that they help you isolate

00:16:44,160 --> 00:16:51,120
environment so um environments

00:16:48,720 --> 00:16:52,000
a couple people a couple architectures

00:16:51,120 --> 00:16:53,759
would have um

00:16:52,000 --> 00:16:56,320
devon staging environments on the same

00:16:53,759 --> 00:16:58,079
cluster they can have

00:16:56,320 --> 00:16:59,920
staging like some can even have all

00:16:58,079 --> 00:17:00,959
three dev staging and production on the

00:16:59,920 --> 00:17:03,279
same cluster

00:17:00,959 --> 00:17:04,559
so you don't want a vulnerability or an

00:17:03,279 --> 00:17:06,319
attacker to be able to access your

00:17:04,559 --> 00:17:07,199
production environment from your staging

00:17:06,319 --> 00:17:09,039
environment

00:17:07,199 --> 00:17:10,240
that would be very weird and very very

00:17:09,039 --> 00:17:13,360
insane

00:17:10,240 --> 00:17:16,319
so um you want to be able to you know

00:17:13,360 --> 00:17:16,559
shut down traffic from dev that is going

00:17:16,319 --> 00:17:18,720
to

00:17:16,559 --> 00:17:20,640
production from dev to staging so yeah

00:17:18,720 --> 00:17:25,039
you use network policies

00:17:20,640 --> 00:17:27,600
to isolate these um this particular

00:17:25,039 --> 00:17:28,880
traffic and you easily help it helps you

00:17:27,600 --> 00:17:30,480
like isolate your

00:17:28,880 --> 00:17:32,799
your environments properly that is if

00:17:30,480 --> 00:17:35,919
you go for a multi-tenant kind of

00:17:32,799 --> 00:17:38,240
approach in the plan your cluster

00:17:35,919 --> 00:17:40,320
okay so um we're just going to see some

00:17:38,240 --> 00:17:41,919
basic jammus um

00:17:40,320 --> 00:17:44,160
i'm not sure we'll be applying them

00:17:41,919 --> 00:17:46,080
we'll just look at how they work

00:17:44,160 --> 00:18:00,400
so i'm just quickly going to change this

00:17:46,080 --> 00:18:03,679
screen to another screen

00:18:00,400 --> 00:18:03,679
all right so um

00:18:06,400 --> 00:18:15,840
all right good all right so i'm just

00:18:09,840 --> 00:18:15,840
going to share this again real quick

00:18:40,960 --> 00:18:44,960
nice quite a good day to have a bad

00:18:44,000 --> 00:18:48,640
network

00:18:44,960 --> 00:18:48,640
all right so um yeah

00:18:48,960 --> 00:18:52,559
uh so i'm just going to just quickly run

00:18:51,280 --> 00:18:54,160
through this

00:18:52,559 --> 00:18:56,160
i think we've recently coupled time

00:18:54,160 --> 00:18:57,919
trying to resolve network connectivity

00:18:56,160 --> 00:19:00,640
issues

00:18:57,919 --> 00:19:02,240
so um i was just talking about the

00:19:00,640 --> 00:19:04,240
default deny policy

00:19:02,240 --> 00:19:06,240
and we we're just noting that um you

00:19:04,240 --> 00:19:07,360
know when applying network policies you

00:19:06,240 --> 00:19:09,360
want to start with this

00:19:07,360 --> 00:19:10,480
drop all traffic first then build up on

00:19:09,360 --> 00:19:12,480
this

00:19:10,480 --> 00:19:14,400
so from there you can go on to you know

00:19:12,480 --> 00:19:15,200
allowing dns because dns is very

00:19:14,400 --> 00:19:18,320
important

00:19:15,200 --> 00:19:21,520
in kubernetes so uh you want to allow

00:19:18,320 --> 00:19:23,919
dns resolutions in the board so this

00:19:21,520 --> 00:19:25,679
is the next one you go for so as you

00:19:23,919 --> 00:19:27,360
notice we are only allowing an egress

00:19:25,679 --> 00:19:28,160
policy that means the port should only

00:19:27,360 --> 00:19:31,280
be sent

00:19:28,160 --> 00:19:34,320
should be able to only send traffic to

00:19:31,280 --> 00:19:35,679
port 53 and uh

00:19:34,320 --> 00:19:37,600
you will notice here we are not

00:19:35,679 --> 00:19:39,200
specifying any destination for

00:19:37,600 --> 00:19:41,039
labels or anything that is because as i

00:19:39,200 --> 00:19:43,679
said earlier um

00:19:41,039 --> 00:19:44,720
network policies are name space so the

00:19:43,679 --> 00:19:47,200
dns port is

00:19:44,720 --> 00:19:48,559
is in another name space entirely so we

00:19:47,200 --> 00:19:51,360
cannot target it from here

00:19:48,559 --> 00:19:52,080
so all you can do do is we target 53 and

00:19:51,360 --> 00:19:54,960
say okay

00:19:52,080 --> 00:19:57,360
let us allow all traffic from port 53 to

00:19:54,960 --> 00:19:59,120
go out of this particular port

00:19:57,360 --> 00:20:01,120
the next thing you do then is you build

00:19:59,120 --> 00:20:03,520
up on this you just build up you keep

00:20:01,120 --> 00:20:06,400
building on this existing policies

00:20:03,520 --> 00:20:07,200
so say you have a back end a backing

00:20:06,400 --> 00:20:10,400
port like this

00:20:07,200 --> 00:20:12,640
back in deployment as this very basic um

00:20:10,400 --> 00:20:13,440
as you can see it has these labels here

00:20:12,640 --> 00:20:15,679
that just see

00:20:13,440 --> 00:20:16,880
um the lost targets this particular back

00:20:15,679 --> 00:20:19,600
end

00:20:16,880 --> 00:20:21,039
and you can now build up on this and

00:20:19,600 --> 00:20:22,720
create other policies

00:20:21,039 --> 00:20:24,240
so here we are saying this is another

00:20:22,720 --> 00:20:26,559
policy that says

00:20:24,240 --> 00:20:28,320
we should allow back-end access to

00:20:26,559 --> 00:20:30,720
boards

00:20:28,320 --> 00:20:32,640
so this is we are we are selecting any

00:20:30,720 --> 00:20:33,360
port that has this particular label this

00:20:32,640 --> 00:20:35,120
is

00:20:33,360 --> 00:20:36,720
so if a board has this label and it's

00:20:35,120 --> 00:20:37,520
working allow back and access set to

00:20:36,720 --> 00:20:38,799
true

00:20:37,520 --> 00:20:41,679
we are going to allow it to be able to

00:20:38,799 --> 00:20:44,400
send egress to any port that has this

00:20:41,679 --> 00:20:45,600
tier called back end so i remember we

00:20:44,400 --> 00:20:46,960
are we are dropping both ingredients and

00:20:45,600 --> 00:20:49,600
igor's policies

00:20:46,960 --> 00:20:50,880
so that means um we want to if you want

00:20:49,600 --> 00:20:52,559
to create a network policy you have to

00:20:50,880 --> 00:20:54,080
if you want to create a network policy

00:20:52,559 --> 00:20:54,320
you have to allow ingress and you have

00:20:54,080 --> 00:20:56,240
to

00:20:54,320 --> 00:20:57,520
allow egress so i want to communicate to

00:20:56,240 --> 00:20:59,360
the backend board

00:20:57,520 --> 00:21:00,799
so you first have to allow me to be able

00:20:59,360 --> 00:21:02,480
to send traffic to the backend board i

00:21:00,799 --> 00:21:03,280
have to also set the back end to be able

00:21:02,480 --> 00:21:05,760
to allow

00:21:03,280 --> 00:21:06,960
traffic to come from me so this is where

00:21:05,760 --> 00:21:10,000
we are setting

00:21:06,960 --> 00:21:11,760
traffic to go to the

00:21:10,000 --> 00:21:13,360
back end port we are allowing any port

00:21:11,760 --> 00:21:15,280
that has this label

00:21:13,360 --> 00:21:16,400
to be able to send traffic to the

00:21:15,280 --> 00:21:18,640
parking board

00:21:16,400 --> 00:21:19,760
and then and in this policy now what we

00:21:18,640 --> 00:21:21,919
are saying is

00:21:19,760 --> 00:21:24,000
we are going to target the backend port

00:21:21,919 --> 00:21:27,679
now and it should allow traffic

00:21:24,000 --> 00:21:30,000
from any port that has this label set

00:21:27,679 --> 00:21:30,799
so this is just basically um something

00:21:30,000 --> 00:21:33,039
you can do

00:21:30,799 --> 00:21:34,640
so by doing this already we just limited

00:21:33,039 --> 00:21:36,320
who can communicate to the bargain

00:21:34,640 --> 00:21:38,720
and the only point that can communicate

00:21:36,320 --> 00:21:41,280
to the backend is a port that has this

00:21:38,720 --> 00:21:44,400
label networking allow back and access

00:21:41,280 --> 00:21:47,679
so you can set this label now in your

00:21:44,400 --> 00:21:50,000
front end port for example uh if we just

00:21:47,679 --> 00:21:52,080
go down to front end real quick

00:21:50,000 --> 00:21:53,760
this is the front and manifest and you

00:21:52,080 --> 00:21:55,200
will see that it defines this

00:21:53,760 --> 00:21:57,679
for this particularly will allow

00:21:55,200 --> 00:21:58,159
back-end access so this front end port

00:21:57,679 --> 00:22:00,880
now

00:21:58,159 --> 00:22:02,240
should be able to send traffic to the

00:22:00,880 --> 00:22:04,720
backend board

00:22:02,240 --> 00:22:06,080
and yeah this is a very basic example of

00:22:04,720 --> 00:22:07,919
you know building up on

00:22:06,080 --> 00:22:09,360
policies so you do the same thing for

00:22:07,919 --> 00:22:10,960
your front end application you do the

00:22:09,360 --> 00:22:12,960
same thing for your backend application

00:22:10,960 --> 00:22:14,400
so what happens is when an attacker

00:22:12,960 --> 00:22:16,480
comes into your system

00:22:14,400 --> 00:22:17,440
by the front end port he can't access a

00:22:16,480 --> 00:22:20,159
database

00:22:17,440 --> 00:22:20,559
and even if he tries to compromise your

00:22:20,159 --> 00:22:22,559
your

00:22:20,559 --> 00:22:23,840
your backend port your backend port can

00:22:22,559 --> 00:22:26,000
send eagles to

00:22:23,840 --> 00:22:27,760
any other traffic apart platform the

00:22:26,000 --> 00:22:28,400
backing port can send egress any other

00:22:27,760 --> 00:22:30,400
services

00:22:28,400 --> 00:22:31,440
except from the ones you've you've white

00:22:30,400 --> 00:22:32,559
listed that the backend should

00:22:31,440 --> 00:22:35,360
communicate to

00:22:32,559 --> 00:22:37,039
so you you apply this um these granular

00:22:35,360 --> 00:22:38,159
accesses so this granular traffic

00:22:37,039 --> 00:22:41,679
permissions

00:22:38,159 --> 00:22:43,679
to reduce what um boards can communicate

00:22:41,679 --> 00:22:45,840
you don't want everything to be visible

00:22:43,679 --> 00:22:48,480
to every other port on the cluster this

00:22:45,840 --> 00:22:50,080
this is uh this is very risky

00:22:48,480 --> 00:22:52,240
in terms of security that's when you're

00:22:50,080 --> 00:22:53,919
talking about security

00:22:52,240 --> 00:22:55,360
so yeah i'm just going to roll back

00:22:53,919 --> 00:22:58,080
quickly to my slide

00:22:55,360 --> 00:23:00,720
and just run down through the remaining

00:22:58,080 --> 00:23:04,400
part of the presentation

00:23:00,720 --> 00:23:04,400
okay so

00:23:07,520 --> 00:23:13,919
all right cool so that's just um

00:23:10,880 --> 00:23:15,200
a quick rundown of um basic policies on

00:23:13,919 --> 00:23:17,679
how you can build up on this

00:23:15,200 --> 00:23:19,679
very important establish a d4 deny you

00:23:17,679 --> 00:23:21,600
allow dns and then you build up on this

00:23:19,679 --> 00:23:23,039
for each individual service

00:23:21,600 --> 00:23:24,960
we are running if you're running

00:23:23,039 --> 00:23:25,919
critical systems it's very important to

00:23:24,960 --> 00:23:28,559
ensure that

00:23:25,919 --> 00:23:30,159
you don't allow access to every board or

00:23:28,559 --> 00:23:33,440
you don't allow access to

00:23:30,159 --> 00:23:35,039
every infrastructure on your on your

00:23:33,440 --> 00:23:37,600
to every resource in particular on your

00:23:35,039 --> 00:23:40,240
infrastructure for example

00:23:37,600 --> 00:23:42,080
so yeah um network policies are i holy

00:23:40,240 --> 00:23:43,600
grow in this aspect but yeah

00:23:42,080 --> 00:23:45,200
they have a couple limitations they

00:23:43,600 --> 00:23:47,200
don't enforce tls

00:23:45,200 --> 00:23:49,039
they don't love requests and they don't

00:23:47,200 --> 00:23:49,679
uh enforce policies on local hosts so

00:23:49,039 --> 00:23:52,400
you can just

00:23:49,679 --> 00:23:53,840
look at this and build up on it there

00:23:52,400 --> 00:23:54,720
are there are solutions here you can use

00:23:53,840 --> 00:23:56,640
link id or

00:23:54,720 --> 00:23:58,080
elasticsearch to log and you can use

00:23:56,640 --> 00:24:00,320
link d for the service mesh

00:23:58,080 --> 00:24:01,840
to enforce tls and elasticsearch to

00:24:00,320 --> 00:24:03,840
elasticstack to you know

00:24:01,840 --> 00:24:06,640
log requests on everything on your

00:24:03,840 --> 00:24:08,320
particular network policies

00:24:06,640 --> 00:24:09,919
so yeah bonuses that i've said earlier

00:24:08,320 --> 00:24:10,960
they don't come pre-installed with

00:24:09,919 --> 00:24:12,559
security measures

00:24:10,960 --> 00:24:14,000
so the additional security measures

00:24:12,559 --> 00:24:15,919
which we're not really going to go into

00:24:14,000 --> 00:24:16,720
because this stock is mostly on network

00:24:15,919 --> 00:24:18,240
policies

00:24:16,720 --> 00:24:19,679
but you can check the link in the slide

00:24:18,240 --> 00:24:20,480
and then you will find other security

00:24:19,679 --> 00:24:22,640
policies

00:24:20,480 --> 00:24:24,559
that you can apply in your keyboard

00:24:22,640 --> 00:24:26,720
cluster

00:24:24,559 --> 00:24:27,600
and uh very importantly you want to

00:24:26,720 --> 00:24:30,640
ensure that you've

00:24:27,600 --> 00:24:32,159
integrated security policies in your ci

00:24:30,640 --> 00:24:34,000
pipelines scan your images for

00:24:32,159 --> 00:24:35,440
vulnerabilities scan your kubernetes

00:24:34,000 --> 00:24:36,320
manifest that they add hair to best

00:24:35,440 --> 00:24:37,679
practices

00:24:36,320 --> 00:24:39,760
and occasionally you want to scan your

00:24:37,679 --> 00:24:41,520
cluster as a whole to ensure that

00:24:39,760 --> 00:24:42,799
everything is fine and secured on your

00:24:41,520 --> 00:24:46,159
cluster

00:24:42,799 --> 00:24:46,960
and uh as a final key note uh please

00:24:46,159 --> 00:24:49,200
remember that

00:24:46,960 --> 00:24:50,240
security is only important as the person

00:24:49,200 --> 00:24:52,159
implementing it

00:24:50,240 --> 00:24:53,679
so if you the person implementing it

00:24:52,159 --> 00:24:55,600
make your credentials you know

00:24:53,679 --> 00:24:57,200
free to everyone you are definitely not

00:24:55,600 --> 00:24:58,960
going to

00:24:57,200 --> 00:25:00,640
be able to secure infrastructure you are

00:24:58,960 --> 00:25:03,919
basically giving them the key to

00:25:00,640 --> 00:25:06,080
just go ahead and risk your on attack

00:25:03,919 --> 00:25:07,840
infrastructure for free

00:25:06,080 --> 00:25:10,080
so yeah um you need help because

00:25:07,840 --> 00:25:11,919
security is a very wide thing um

00:25:10,080 --> 00:25:13,520
it's a very important part of your of

00:25:11,919 --> 00:25:15,440
your infrastructure

00:25:13,520 --> 00:25:17,039
so if you need help around securing your

00:25:15,440 --> 00:25:17,760
infrastructure you can always contact

00:25:17,039 --> 00:25:21,039
demos

00:25:17,760 --> 00:25:23,440
we run check ups um circums um

00:25:21,039 --> 00:25:24,320
offerings and we will help you you know

00:25:23,440 --> 00:25:25,600
we run

00:25:24,320 --> 00:25:26,880
audits on your cluster and

00:25:25,600 --> 00:25:28,960
infrastructure and then we'll check

00:25:26,880 --> 00:25:31,200
where we can we can help you secure your

00:25:28,960 --> 00:25:34,240
infrastructure better

00:25:31,200 --> 00:25:34,880
so yeah thank you for listening um i

00:25:34,240 --> 00:25:38,159
think

00:25:34,880 --> 00:25:42,080
that's that's the end of of

00:25:38,159 --> 00:25:43,039
the slide not end of the presentation so

00:25:42,080 --> 00:25:47,120
yeah this is

00:25:43,039 --> 00:25:51,679
time for questions

00:25:47,120 --> 00:25:54,159
yeah exactly wow thank you so so much

00:25:51,679 --> 00:25:56,240
i mean like personally i learnt a lot

00:25:54,159 --> 00:25:59,520
from your presentation and

00:25:56,240 --> 00:26:02,240
you know security is a huge

00:25:59,520 --> 00:26:03,360
part of like infrastructure and being a

00:26:02,240 --> 00:26:06,640
devops engineer

00:26:03,360 --> 00:26:08,080
it's very important that pay very clear

00:26:06,640 --> 00:26:10,960
attention to

00:26:08,080 --> 00:26:12,799
the security aspects so yeah um thanks a

00:26:10,960 --> 00:26:16,000
lot for that consultation

00:26:12,799 --> 00:26:17,120
and yeah uh this is question time uh

00:26:16,000 --> 00:26:20,240
question and answers

00:26:17,120 --> 00:26:20,240
if you have any questions

00:26:21,039 --> 00:26:26,960
drop on the chat section on

00:26:24,320 --> 00:26:29,279
the platform if you are streaming live

00:26:26,960 --> 00:26:39,520
feel free to also

00:26:29,279 --> 00:26:42,880
drop your questions on youtube as well

00:26:39,520 --> 00:26:46,880
um yeah well let's wait for

00:26:42,880 --> 00:26:49,919
an extra minute and if you don't

00:26:46,880 --> 00:26:53,440
get any questions then

00:26:49,919 --> 00:26:56,000
move to an sp but yeah uh

00:26:53,440 --> 00:26:57,120
so basically i i have i don't have any

00:26:56,000 --> 00:27:00,400
question but

00:26:57,120 --> 00:27:03,120
i'll ask you know can you

00:27:00,400 --> 00:27:05,279
willing to make your slides available to

00:27:03,120 --> 00:27:08,720
the attendees because i i think

00:27:05,279 --> 00:27:12,080
the resources and information you just

00:27:08,720 --> 00:27:14,159
shared is highly valuable and

00:27:12,080 --> 00:27:15,279
it could be nice for the attendees to

00:27:14,159 --> 00:27:18,480
have access to them

00:27:15,279 --> 00:27:22,799
and then go back to

00:27:18,480 --> 00:27:22,799
those slides you know and zombieland

00:27:23,520 --> 00:27:26,960
yeah sure um i'll be making this slide

00:27:25,440 --> 00:27:30,559
really i've done now

00:27:26,960 --> 00:27:33,600
i'll be sending it to to you or to

00:27:30,559 --> 00:27:36,960
any of the hosts here awesome

00:27:33,600 --> 00:27:39,039
awesome oh nice

00:27:36,960 --> 00:27:41,120
uh we just had a question here so is

00:27:39,039 --> 00:27:43,600
there a link on how to get started with

00:27:41,120 --> 00:27:43,600
devops

00:27:46,240 --> 00:27:51,919
um sorry um there is no link in the

00:27:49,440 --> 00:27:54,480
slide on how to get the limit devops

00:27:51,919 --> 00:27:55,520
uh i think you could probably check on

00:27:54,480 --> 00:27:57,760
um

00:27:55,520 --> 00:27:59,279
on keyboard i'm sorry on github you

00:27:57,760 --> 00:28:01,120
could check i like using the awesome

00:27:59,279 --> 00:28:02,399
list you can check awesome github or

00:28:01,120 --> 00:28:04,480
some devops on

00:28:02,399 --> 00:28:16,720
on github and you can get you started

00:28:04,480 --> 00:28:20,720
from there

00:28:16,720 --> 00:28:23,919
yes uh let me help out uh

00:28:20,720 --> 00:28:24,320
let me just share the awesome devops for

00:28:23,919 --> 00:28:27,039
you

00:28:24,320 --> 00:28:28,840
google so this is the link to the

00:28:27,039 --> 00:28:31,520
awesome

00:28:28,840 --> 00:28:32,640
device so yeah from here you could

00:28:31,520 --> 00:28:35,919
actually see

00:28:32,640 --> 00:28:39,120
some helpful links to some of the

00:28:35,919 --> 00:28:42,720
tools and technologies you need to know

00:28:39,120 --> 00:28:44,960
so yeah uh thanks a lot maduro

00:28:42,720 --> 00:28:46,720
i really enjoyed the session it was

00:28:44,960 --> 00:28:49,600
really insightful

00:28:46,720 --> 00:28:50,000
and yeah and i know for sure my uh now

00:28:49,600 --> 00:28:52,880
these

00:28:50,000 --> 00:28:55,120
are also excited and they get a lot from

00:28:52,880 --> 00:28:58,559
the session as well

00:28:55,120 --> 00:29:02,399
so yeah uh thanks a lot madhu and

00:28:58,559 --> 00:29:02,399
yeah to see you some other time man

00:29:02,559 --> 00:29:06,159

YouTube URL: https://www.youtube.com/watch?v=HA18jieXjUs


