Title: How to Effectively Manage Kubernetes in a Regulated Environment - Darien Ford, Capital One
Publication date: 2020-11-23
Playlist: KubeCon + CloudNativeCon North America 2020 - Virtual
Description: 
	Don’t miss out! Join us at our upcoming event: KubeCon + CloudNativeCon Europe 2021 Virtual from May 4–7, 2021. Learn more at https://kubecon.io. The conference features presentations from developers and end users of Kubernetes, Prometheus, Envoy, and all of the other CNCF-hosted projects. 

How to Effectively Manage Kubernetes in a Regulated Environment - Darien Ford, Capital One 

Kubernetes plays an important role when scaling containerized applications in a highly regulated environment. Capital One understands this first hand, as they will complete a multi-year journey to exit on-prem data centers this year and move to the public cloud. As large enterprises look to shift to cloud architecture, Darien Ford will explain how Kubernetes container orchestration accelerates a safe and effective shift to cloud architecture with both developer experience and enterprise requirements in mind. As network boundaries broaden, he will cover ways container orchestration can help introduce workloads to the cloud while managing application development, testing, deployment and, of course, governance and policy compliance. 

https://sched.co/ekAI
Captions: 
	00:00:01,320 --> 00:00:04,879
[Music]

00:00:06,319 --> 00:00:09,200
hi

00:00:07,120 --> 00:00:11,599
i'm darien ford senior director of

00:00:09,200 --> 00:00:13,040
software engineering at capital one

00:00:11,599 --> 00:00:15,519
i've been with the company for about

00:00:13,040 --> 00:00:16,800
four years and in that time i've spent a

00:00:15,519 --> 00:00:19,439
large portion of it

00:00:16,800 --> 00:00:21,359
thinking about our container strategy

00:00:19,439 --> 00:00:22,480
how we enable our software developers to

00:00:21,359 --> 00:00:24,640
deliver software

00:00:22,480 --> 00:00:26,080
while meeting governance and regulatory

00:00:24,640 --> 00:00:27,680
compliance

00:00:26,080 --> 00:00:29,359
and ensuring that our container

00:00:27,680 --> 00:00:31,519
platforms can

00:00:29,359 --> 00:00:32,960
enable the developer experience to be

00:00:31,519 --> 00:00:35,120
really really great

00:00:32,960 --> 00:00:36,559
without bogging them down with all of

00:00:35,120 --> 00:00:38,079
that overhead

00:00:36,559 --> 00:00:40,079
today i'm going to share with you some

00:00:38,079 --> 00:00:42,160
of the lessons learned how we've

00:00:40,079 --> 00:00:44,399
achieved some of those goals

00:00:42,160 --> 00:00:45,520
and some open source offerings that we

00:00:44,399 --> 00:00:50,079
are bringing to

00:00:45,520 --> 00:00:52,640
the greater community let's get to it

00:00:50,079 --> 00:00:54,399
if you're already here at cubecon i

00:00:52,640 --> 00:00:56,559
probably don't need to tell you

00:00:54,399 --> 00:00:58,879
that kubernetes has emerged as the most

00:00:56,559 --> 00:01:01,600
popular and widely leveraged container

00:00:58,879 --> 00:01:04,640
management solution in recent years

00:01:01,600 --> 00:01:07,840
efficiently managing kubernetes at scale

00:01:04,640 --> 00:01:12,159
especially at a highly regulated company

00:01:07,840 --> 00:01:15,119
may feel daunting but it can be done

00:01:12,159 --> 00:01:16,479
today i'm going to speak about how let

00:01:15,119 --> 00:01:17,840
me start by telling you a little bit

00:01:16,479 --> 00:01:20,400
about capital one

00:01:17,840 --> 00:01:22,080
we're a 25 year old fortune 100 company

00:01:20,400 --> 00:01:24,240
that is still founder-led

00:01:22,080 --> 00:01:25,680
when you think about banks you probably

00:01:24,240 --> 00:01:27,200
don't expect that

00:01:25,680 --> 00:01:28,880
and this is one of the top things we

00:01:27,200 --> 00:01:30,799
hear from people about why they love to

00:01:28,880 --> 00:01:33,200
work at capital one

00:01:30,799 --> 00:01:34,240
our founder-led startup mentality can

00:01:33,200 --> 00:01:36,560
really be felt

00:01:34,240 --> 00:01:38,560
in everything we do we're doing things

00:01:36,560 --> 00:01:41,280
differently than other banks

00:01:38,560 --> 00:01:42,880
banking is ripe for disruption and we

00:01:41,280 --> 00:01:44,159
want to be the ones that disrupt the

00:01:42,880 --> 00:01:46,640
industry

00:01:44,159 --> 00:01:48,000
capital one was founded on the belief

00:01:46,640 --> 00:01:50,000
that the banking industry would be

00:01:48,000 --> 00:01:52,640
revolutionized by information and

00:01:50,000 --> 00:01:54,240
technology we are known for being a data

00:01:52,640 --> 00:01:55,600
and tech pioneer in the financial

00:01:54,240 --> 00:01:58,240
services industry

00:01:55,600 --> 00:01:58,799
two decades later our belief is stronger

00:01:58,240 --> 00:02:00,799
than ever

00:01:58,799 --> 00:02:01,920
and we are seeing the relevance of this

00:02:00,799 --> 00:02:04,719
focus right now

00:02:01,920 --> 00:02:05,680
in the pandemic as businesses of all

00:02:04,719 --> 00:02:08,319
sizes

00:02:05,680 --> 00:02:09,119
grapple with how to engage customers at

00:02:08,319 --> 00:02:11,599
a distance

00:02:09,119 --> 00:02:12,319
through digital channels in the same

00:02:11,599 --> 00:02:14,959
human

00:02:12,319 --> 00:02:16,560
and personalized ways they did before

00:02:14,959 --> 00:02:17,680
when we think about where the future of

00:02:16,560 --> 00:02:20,000
banking is headed

00:02:17,680 --> 00:02:20,959
we start by looking at how technology is

00:02:20,000 --> 00:02:23,200
changing our lives

00:02:20,959 --> 00:02:24,080
the digital revolution has changed how

00:02:23,200 --> 00:02:27,360
we communicate

00:02:24,080 --> 00:02:28,160
connect with people shop travel manage

00:02:27,360 --> 00:02:30,640
our health

00:02:28,160 --> 00:02:33,360
and manage our money digital adoption

00:02:30,640 --> 00:02:35,920
has only accelerated with covet 19.

00:02:33,360 --> 00:02:36,720
we've all seen years of digital adoption

00:02:35,920 --> 00:02:39,680
condensed

00:02:36,720 --> 00:02:41,440
down to months or even just weeks

00:02:39,680 --> 00:02:42,000
capital one has spent the last eight

00:02:41,440 --> 00:02:44,319
years

00:02:42,000 --> 00:02:46,879
investing in a technology transformation

00:02:44,319 --> 00:02:49,280
focused on comprehensively reimagining

00:02:46,879 --> 00:02:50,080
our culture and talent strategy how we

00:02:49,280 --> 00:02:52,319
work and

00:02:50,080 --> 00:02:53,440
modernizing and hardening our technology

00:02:52,319 --> 00:02:55,599
infrastructure

00:02:53,440 --> 00:02:57,599
in september we exited our legacy data

00:02:55,599 --> 00:02:59,599
centers and finished moving to the cloud

00:02:57,599 --> 00:03:01,519
solidifying our foundation as the bank

00:02:59,599 --> 00:03:02,239
of the future in pioneering new

00:03:01,519 --> 00:03:04,720
standards

00:03:02,239 --> 00:03:06,400
tools and technologies we adopted an

00:03:04,720 --> 00:03:07,120
open source first approach to software

00:03:06,400 --> 00:03:09,360
development

00:03:07,120 --> 00:03:10,959
and infrastructure the most challenging

00:03:09,360 --> 00:03:13,280
part of moving to the cloud

00:03:10,959 --> 00:03:14,879
as a highly regulated industry is

00:03:13,280 --> 00:03:16,640
building the technology

00:03:14,879 --> 00:03:19,120
governance structure and support of

00:03:16,640 --> 00:03:21,040
culture on the technology side

00:03:19,120 --> 00:03:22,560
many financial institutions have

00:03:21,040 --> 00:03:24,560
structural barriers

00:03:22,560 --> 00:03:25,599
legacy systems that have been in use for

00:03:24,560 --> 00:03:28,000
20 years

00:03:25,599 --> 00:03:28,799
most banks don't have the technology in

00:03:28,000 --> 00:03:30,799
place

00:03:28,799 --> 00:03:32,879
to even send their code outside of the

00:03:30,799 --> 00:03:35,280
company's corporate firewall

00:03:32,879 --> 00:03:37,280
from the governance perspective it takes

00:03:35,280 --> 00:03:38,640
time to develop a process where code is

00:03:37,280 --> 00:03:41,599
reviewed by legal

00:03:38,640 --> 00:03:43,280
information security and leadership

00:03:41,599 --> 00:03:44,959
along with other stakeholders

00:03:43,280 --> 00:03:46,560
without impacting the developers

00:03:44,959 --> 00:03:49,120
themselves all that much

00:03:46,560 --> 00:03:51,040
and culturally traditional banks need to

00:03:49,120 --> 00:03:53,200
challenge the perceived risks

00:03:51,040 --> 00:03:55,360
such as loss of intellectual property

00:03:53,200 --> 00:03:57,439
competitiveness or productivity

00:03:55,360 --> 00:03:59,519
a huge part of us going all in on the

00:03:57,439 --> 00:04:01,439
cloud and digital transformation

00:03:59,519 --> 00:04:03,680
is investing in our tech associates and

00:04:01,439 --> 00:04:05,599
giving them the tools they need to excel

00:04:03,680 --> 00:04:07,280
we believe in our associates and we

00:04:05,599 --> 00:04:07,920
believe in continuously investing in

00:04:07,280 --> 00:04:10,239
them

00:04:07,920 --> 00:04:11,760
one way we invest is to constantly

00:04:10,239 --> 00:04:14,879
encourage continued learning

00:04:11,760 --> 00:04:16,959
to that end we launched a tech college

00:04:14,879 --> 00:04:18,560
inside of capital one to support

00:04:16,959 --> 00:04:19,519
associates ability to sharpen their

00:04:18,560 --> 00:04:21,120
skills

00:04:19,519 --> 00:04:23,040
our focus areas include software

00:04:21,120 --> 00:04:26,880
engineering security

00:04:23,040 --> 00:04:29,040
cloud mobile data agile

00:04:26,880 --> 00:04:30,800
and machine learning in addition to hard

00:04:29,040 --> 00:04:32,240
skills tech college provides training

00:04:30,800 --> 00:04:34,800
around soft skills as well

00:04:32,240 --> 00:04:36,000
as they can be just as important we also

00:04:34,800 --> 00:04:38,400
have ambitious goals

00:04:36,000 --> 00:04:39,120
around training and certifications for

00:04:38,400 --> 00:04:40,800
example

00:04:39,120 --> 00:04:43,040
we have aspirational targets for the

00:04:40,800 --> 00:04:43,919
number of engineers who will get aws

00:04:43,040 --> 00:04:45,440
certifications

00:04:43,919 --> 00:04:47,520
and we're giving associates time to

00:04:45,440 --> 00:04:48,240
study over the course of the summer and

00:04:47,520 --> 00:04:50,160
into the fall

00:04:48,240 --> 00:04:52,160
we've had a series of invest in yourself

00:04:50,160 --> 00:04:52,800
days one day a month where there are no

00:04:52,160 --> 00:04:55,280
meetings

00:04:52,800 --> 00:04:57,120
allowing time to focus we've had

00:04:55,280 --> 00:04:58,240
numerous certifications completed over

00:04:57,120 --> 00:05:00,800
the past several months

00:04:58,240 --> 00:05:01,520
as a result of the program an unforeseen

00:05:00,800 --> 00:05:03,440
side effect

00:05:01,520 --> 00:05:04,560
with our gradual approach to the cloud

00:05:03,440 --> 00:05:06,720
came when we

00:05:04,560 --> 00:05:08,080
saw duplication of efforts when you

00:05:06,720 --> 00:05:09,840
really embrace the cloud and tell

00:05:08,080 --> 00:05:12,080
developers who are organized into

00:05:09,840 --> 00:05:14,400
independent agile teams to go make stuff

00:05:12,080 --> 00:05:16,000
happen you get various iterations on

00:05:14,400 --> 00:05:18,400
similar solutions

00:05:16,000 --> 00:05:19,680
a large amount of duplication many of

00:05:18,400 --> 00:05:21,199
these teams were used to throwing

00:05:19,680 --> 00:05:21,840
solutions over the wall for someone else

00:05:21,199 --> 00:05:24,400
to run

00:05:21,840 --> 00:05:25,280
and yet now they had to own things end

00:05:24,400 --> 00:05:28,160
to end

00:05:25,280 --> 00:05:30,000
we quickly realized we quickly realized

00:05:28,160 --> 00:05:32,160
that a u-bill that you own at mandate

00:05:30,000 --> 00:05:34,000
and doubling down on devops was the key

00:05:32,160 --> 00:05:36,639
to keeping delivery rapid

00:05:34,000 --> 00:05:38,639
but well-managed at the same time

00:05:36,639 --> 00:05:40,400
re-architecting our process in this way

00:05:38,639 --> 00:05:42,000
has allowed us to successfully and

00:05:40,400 --> 00:05:44,560
efficiently deliver solutions

00:05:42,000 --> 00:05:45,680
in the cloud another best practice i can

00:05:44,560 --> 00:05:47,680
share in this area

00:05:45,680 --> 00:05:49,520
is investing in creating a single common

00:05:47,680 --> 00:05:51,680
deployment pipeline ecosystem that

00:05:49,520 --> 00:05:52,639
allows us to build consistent checks and

00:05:51,680 --> 00:05:54,400
expectations

00:05:52,639 --> 00:05:56,160
for getting code into production we

00:05:54,400 --> 00:05:56,960
built this solution to address a gap in

00:05:56,160 --> 00:05:58,319
the industry

00:05:56,960 --> 00:06:00,319
and we're already seeing the benefits of

00:05:58,319 --> 00:06:02,000
more efficient delivery

00:06:00,319 --> 00:06:03,600
we've applied similar thinking to our

00:06:02,000 --> 00:06:05,919
container management strategy

00:06:03,600 --> 00:06:07,759
in recent years we've scaled our usage

00:06:05,919 --> 00:06:09,280
of kubernetes and steadily increased the

00:06:07,759 --> 00:06:10,400
number of containerized applications we

00:06:09,280 --> 00:06:12,000
have running production

00:06:10,400 --> 00:06:13,680
harkening back to some of our earlier

00:06:12,000 --> 00:06:15,840
lessons learned from our cloud journey

00:06:13,680 --> 00:06:18,000
we knew we wanted to avoid silo teams

00:06:15,840 --> 00:06:20,240
creating disparate solutions to manage

00:06:18,000 --> 00:06:22,479
their own containerized applications

00:06:20,240 --> 00:06:23,280
instead we decided we needed to

00:06:22,479 --> 00:06:24,960
standardize

00:06:23,280 --> 00:06:26,960
on our own set of additional features

00:06:24,960 --> 00:06:28,800
across the company that would enable our

00:06:26,960 --> 00:06:32,000
developers to more efficiently

00:06:28,800 --> 00:06:34,400
develop and deliver business value

00:06:32,000 --> 00:06:35,440
this meant running kubernetes at

00:06:34,400 --> 00:06:37,759
enterprise scale

00:06:35,440 --> 00:06:39,360
in a regulated environment earlier this

00:06:37,759 --> 00:06:41,199
year we commissioned a study with

00:06:39,360 --> 00:06:42,960
forester consulting about container

00:06:41,199 --> 00:06:44,880
adoption and usage in the enterprise

00:06:42,960 --> 00:06:46,319
we found that compliance is the number

00:06:44,880 --> 00:06:47,680
one concern among

00:06:46,319 --> 00:06:50,000
senior leaders using container

00:06:47,680 --> 00:06:51,280
management platforms for this reason it

00:06:50,000 --> 00:06:52,880
might surprise you to hear

00:06:51,280 --> 00:06:54,880
that a bank was an early adopter of

00:06:52,880 --> 00:06:56,400
kubernetes we fully embraced the

00:06:54,880 --> 00:06:57,919
technology in 2016

00:06:56,400 --> 00:07:00,240
less than two years after its initial

00:06:57,919 --> 00:07:02,000
release kubernetes is certainly newer

00:07:00,240 --> 00:07:03,759
and more cutting edge than say

00:07:02,000 --> 00:07:05,919
the legacy mainframes you might expect

00:07:03,759 --> 00:07:06,720
the bank to use but that doesn't make it

00:07:05,919 --> 00:07:09,680
inherently

00:07:06,720 --> 00:07:11,680
insecure for many companies fear of

00:07:09,680 --> 00:07:12,319
introducing new risks can make them feel

00:07:11,680 --> 00:07:14,240
lost

00:07:12,319 --> 00:07:16,000
when it comes to exploring and adopting

00:07:14,240 --> 00:07:17,919
new technologies

00:07:16,000 --> 00:07:19,360
compliance and safety is what people

00:07:17,919 --> 00:07:22,319
really care about across

00:07:19,360 --> 00:07:23,840
most industries not just regulated ones

00:07:22,319 --> 00:07:25,360
in many cases

00:07:23,840 --> 00:07:26,880
understanding all of the factors you

00:07:25,360 --> 00:07:28,560
need to evaluate as you build a

00:07:26,880 --> 00:07:31,599
container management platform

00:07:28,560 --> 00:07:33,680
is a challenge in and of itself we found

00:07:31,599 --> 00:07:34,800
it was helpful to consider our overall

00:07:33,680 --> 00:07:37,039
cloud strategy

00:07:34,800 --> 00:07:38,400
our culture and talent strategy the

00:07:37,039 --> 00:07:40,880
state of our cloud

00:07:38,400 --> 00:07:42,639
resources were they over provisioned etc

00:07:40,880 --> 00:07:44,160
and our application development speed

00:07:42,639 --> 00:07:45,599
and scaling requirements

00:07:44,160 --> 00:07:47,360
other important components of a

00:07:45,599 --> 00:07:47,840
successful container management strategy

00:07:47,360 --> 00:07:49,919
include

00:07:47,840 --> 00:07:51,680
the supply chain how your containers are

00:07:49,919 --> 00:07:53,680
built where they are stored

00:07:51,680 --> 00:07:55,520
how they're validated the infrastructure

00:07:53,680 --> 00:07:56,800
and orchestration where and how your

00:07:55,520 --> 00:07:58,639
containers are run

00:07:56,800 --> 00:08:00,000
how they're run together how they can

00:07:58,639 --> 00:08:02,319
access each other the

00:08:00,000 --> 00:08:04,240
runtime security and policy enforcement

00:08:02,319 --> 00:08:06,080
how you ensure your containers do what

00:08:04,240 --> 00:08:08,560
you want and nothing else

00:08:06,080 --> 00:08:09,599
and observability runtime metrics

00:08:08,560 --> 00:08:12,240
debugging

00:08:09,599 --> 00:08:12,720
audit logging tracing everything you

00:08:12,240 --> 00:08:15,360
need

00:08:12,720 --> 00:08:16,080
to run your containers in a well-managed

00:08:15,360 --> 00:08:17,599
way

00:08:16,080 --> 00:08:19,120
there are many benefits to a container

00:08:17,599 --> 00:08:20,560
orchestration platform

00:08:19,120 --> 00:08:22,960
developers can focus on business

00:08:20,560 --> 00:08:24,080
outcomes logging and metric gathering

00:08:22,960 --> 00:08:25,919
can be for free

00:08:24,080 --> 00:08:27,919
compliance and government are baked in

00:08:25,919 --> 00:08:28,879
by default you can have a testable

00:08:27,919 --> 00:08:30,960
workloads

00:08:28,879 --> 00:08:33,039
better infrastructure utilization and

00:08:30,960 --> 00:08:35,200
you can have higher resiliency

00:08:33,039 --> 00:08:36,560
simply put a container orchestration

00:08:35,200 --> 00:08:37,279
platform should meet the needs of your

00:08:36,560 --> 00:08:39,599
developers

00:08:37,279 --> 00:08:40,959
as well as your enterprise developers

00:08:39,599 --> 00:08:43,120
need a simplified and consistent

00:08:40,959 --> 00:08:44,880
workflow with an intuitive interface

00:08:43,120 --> 00:08:46,399
that will put deployed applications at

00:08:44,880 --> 00:08:47,200
their fingertips for quick and efficient

00:08:46,399 --> 00:08:49,360
management

00:08:47,200 --> 00:08:51,040
the platform should be flexible to

00:08:49,360 --> 00:08:53,120
develop and deploy applications to

00:08:51,040 --> 00:08:55,360
while giving freedom to write code and

00:08:53,120 --> 00:08:56,880
not have to manage that infrastructure

00:08:55,360 --> 00:08:59,279
enterprises need compliance and

00:08:56,880 --> 00:09:01,440
regulatory control plus the ability to

00:08:59,279 --> 00:09:03,360
enforce workflow standardization

00:09:01,440 --> 00:09:04,720
and reduce the technical complexity

00:09:03,360 --> 00:09:06,880
placed upon developers

00:09:04,720 --> 00:09:08,000
when we start thinking about how we

00:09:06,880 --> 00:09:10,720
begin to meet these

00:09:08,000 --> 00:09:12,880
goals and achieve those benefits it

00:09:10,720 --> 00:09:15,200
leads us to the makeup of the platform

00:09:12,880 --> 00:09:17,600
and the components of it two of these

00:09:15,200 --> 00:09:19,600
components we've already open sourced

00:09:17,600 --> 00:09:21,120
each solved some challenges we

00:09:19,600 --> 00:09:23,839
encountered around provisioning and

00:09:21,120 --> 00:09:26,160
resiliency of kubernetes clusters

00:09:23,839 --> 00:09:28,240
crit is a command line bootstrapper for

00:09:26,160 --> 00:09:28,880
kubernetes which decouples management of

00:09:28,240 --> 00:09:30,880
xcd

00:09:28,880 --> 00:09:32,959
enables multiple nodes to be provisioned

00:09:30,880 --> 00:09:34,480
simultaneously correctly regardless of

00:09:32,959 --> 00:09:36,000
the order in which they come up and is

00:09:34,480 --> 00:09:38,640
designed to work with the cluster

00:09:36,000 --> 00:09:39,519
api we open sourced crypt in september

00:09:38,640 --> 00:09:42,160
of this year

00:09:39,519 --> 00:09:42,800
e2d is a tool for deploying fully

00:09:42,160 --> 00:09:45,519
automated

00:09:42,800 --> 00:09:47,120
at cd clusters etcd the powerful

00:09:45,519 --> 00:09:48,480
back-end storage that makes software

00:09:47,120 --> 00:09:50,399
like kubernetes possible

00:09:48,480 --> 00:09:51,680
has historically required a human

00:09:50,399 --> 00:09:53,680
operator to perform

00:09:51,680 --> 00:09:55,440
complex administrative tasks like

00:09:53,680 --> 00:09:57,519
initial cluster bootstrapping

00:09:55,440 --> 00:09:59,040
cluster membership data backups and

00:09:57,519 --> 00:10:01,519
disaster recovery

00:09:59,040 --> 00:10:02,880
e2d solves for many of those challenges

00:10:01,519 --> 00:10:05,279
that we came across

00:10:02,880 --> 00:10:06,959
crit and e2d are both part of critical

00:10:05,279 --> 00:10:08,720
stack our enterprise container

00:10:06,959 --> 00:10:10,160
orchestration platform that runs on top

00:10:08,720 --> 00:10:12,240
of kubernetes

00:10:10,160 --> 00:10:14,240
critical stack enforces common

00:10:12,240 --> 00:10:16,160
governance and security controls

00:10:14,240 --> 00:10:17,760
enabling teams to efficiently scale

00:10:16,160 --> 00:10:19,440
containerized applications in the

00:10:17,760 --> 00:10:21,600
strictest of environments

00:10:19,440 --> 00:10:23,279
for developers critical stack is full of

00:10:21,600 --> 00:10:26,240
valuable functionality

00:10:23,279 --> 00:10:27,360
stack apps is a path to enable packaging

00:10:26,240 --> 00:10:29,279
of applications

00:10:27,360 --> 00:10:31,360
in a way which takes into account all of

00:10:29,279 --> 00:10:34,079
the kubernetes objects which are needed

00:10:31,360 --> 00:10:34,720
this creates an immutable verifiable

00:10:34,079 --> 00:10:36,160
package

00:10:34,720 --> 00:10:38,640
which can be promoted from one

00:10:36,160 --> 00:10:39,519
environment to another having a running

00:10:38,640 --> 00:10:42,160
platform that is

00:10:39,519 --> 00:10:42,880
a default location for workloads means

00:10:42,160 --> 00:10:44,720
we shift

00:10:42,880 --> 00:10:46,000
left the whole you build it you own a

00:10:44,720 --> 00:10:49,519
portion of things

00:10:46,000 --> 00:10:52,320
swall provides ebpf metrics gathering

00:10:49,519 --> 00:10:54,560
and tracing for all kubernetes workloads

00:10:52,320 --> 00:10:55,279
enabling engineers to truly understand

00:10:54,560 --> 00:10:57,279
the impact

00:10:55,279 --> 00:10:59,279
of their workloads on the underlying

00:10:57,279 --> 00:11:01,440
infrastructure there's also a developer

00:10:59,279 --> 00:11:02,640
ui which provides fingertip access to

00:11:01,440 --> 00:11:06,399
your namespaces

00:11:02,640 --> 00:11:08,640
containers logs traces and an editor

00:11:06,399 --> 00:11:10,160
with templates to help ease the learning

00:11:08,640 --> 00:11:11,920
curve of kubernetes

00:11:10,160 --> 00:11:13,760
for the enterprise and platform

00:11:11,920 --> 00:11:15,600
operators there's a bunch as well

00:11:13,760 --> 00:11:17,120
there's a user interface which provides

00:11:15,600 --> 00:11:20,160
enhanced rbac management

00:11:17,120 --> 00:11:23,440
sso integration along with audit logging

00:11:20,160 --> 00:11:24,880
by default psyllium cni is installed as

00:11:23,440 --> 00:11:25,760
part of the critical stack platform by

00:11:24,880 --> 00:11:28,000
default

00:11:25,760 --> 00:11:29,600
along with the ability to edit policies

00:11:28,000 --> 00:11:31,519
all within the ui

00:11:29,600 --> 00:11:33,200
this gives you multiple layers of

00:11:31,519 --> 00:11:35,120
network filtering capacity

00:11:33,200 --> 00:11:36,880
there's also a marketplace enabling

00:11:35,120 --> 00:11:40,000
approved helm registries

00:11:36,880 --> 00:11:41,680
and selective approved charts for simple

00:11:40,000 --> 00:11:44,160
single button deployments into

00:11:41,680 --> 00:11:46,640
namespaces we are excited to announce

00:11:44,160 --> 00:11:48,240
today that critical stack is open source

00:11:46,640 --> 00:11:50,160
we'd love for you to check us out on

00:11:48,240 --> 00:11:50,880
github and see how we can help you and

00:11:50,160 --> 00:11:53,040
your teams

00:11:50,880 --> 00:11:54,240
with safe scalable and efficient

00:11:53,040 --> 00:11:56,079
container management

00:11:54,240 --> 00:12:02,639
thank you for having me here today and

00:11:56,079 --> 00:12:02,639

YouTube URL: https://www.youtube.com/watch?v=b8HohWN__UQ


