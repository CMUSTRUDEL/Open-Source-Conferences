Title: Panel: Linux in the Kubernetes Era: Does The OS Still Matter? - Tasha Drew, VMware; Kiko Reis
Publication date: 2020-11-23
Playlist: KubeCon + CloudNativeCon North America 2020 - Virtual
Description: 
	Don’t miss out! Join us at our upcoming event: KubeCon + CloudNativeCon Europe 2021 Virtual from May 4–7, 2021. Learn more at https://kubecon.io. The conference features presentations from developers and end users of Kubernetes, Prometheus, Envoy, and all of the other CNCF-hosted projects. 

Panel: Linux in the Kubernetes Era: Does The OS Still Matter? - Tasha Drew, VMware; Kiko Reis, Canonical; Darren Shepherd, Rancher Labs; Dusty Mabe, Red Hat; & Vincent Batts, Kinvolk 

With the end of life of the original “Container Linux” (CoreOS), what is the future for the key underlying component of any Kubernetes deployment: the operating system? While many are opting for general-purpose distributions like Ubuntu or CentOS, there is a healthy ecosystem of Kubernetes- and container-optimized distros, as well as new container-specific kernel features. This panel, bringing together representatives from the key Kubernetes Linux vendors, will review the current state of Linux for cloud native workloads, the areas being worked on by the community, and the pros/cons of different approaches from an end-user perspective. Discussion topics will include improved kernel support for containers, minimal vs general purpose distros, and loose vs tightly coupled approaches to distributing Linux+Kubernetes. 

https://sched.co/ekDI
Captions: 
	00:00:00,719 --> 00:00:06,879
nice and welcome to

00:00:04,000 --> 00:00:08,080
uh the future of linux panel here at

00:00:06,879 --> 00:00:10,719
cubecon

00:00:08,080 --> 00:00:11,440
um my name is vincent batts i'm cto at

00:00:10,719 --> 00:00:13,440
ken folk

00:00:11,440 --> 00:00:16,080
and have been in the container space for

00:00:13,440 --> 00:00:18,240
a long time so lots of familiar faces

00:00:16,080 --> 00:00:19,439
and i will we'll kick off the

00:00:18,240 --> 00:00:21,680
introductions

00:00:19,439 --> 00:00:22,560
with our panelists today with a brief

00:00:21,680 --> 00:00:25,680
question to get

00:00:22,560 --> 00:00:28,800
the conversation started

00:00:25,680 --> 00:00:31,119
so mul on it if you will

00:00:28,800 --> 00:00:32,559
does it still make sense to run a

00:00:31,119 --> 00:00:34,559
general purpose

00:00:32,559 --> 00:00:36,640
operating system linux operating system

00:00:34,559 --> 00:00:38,879
in this cloud native world

00:00:36,640 --> 00:00:39,840
um let's kick off our round of

00:00:38,879 --> 00:00:42,879
introductions

00:00:39,840 --> 00:00:46,079
christian why don't you go first sure

00:00:42,879 --> 00:00:48,800
um so i'm in the middle of a transition

00:00:46,079 --> 00:00:50,079
i was at canonical for 15 years and i've

00:00:48,800 --> 00:00:52,559
about

00:00:50,079 --> 00:00:54,079
to to join a new company in brazil

00:00:52,559 --> 00:00:55,120
that's through an acquisition of a side

00:00:54,079 --> 00:00:56,480
business that i had

00:00:55,120 --> 00:00:58,399
this company is a big retailer called

00:00:56,480 --> 00:01:00,000
magazine louisa or magalu they have a

00:00:58,399 --> 00:01:01,920
huge technology team and they're big

00:01:00,000 --> 00:01:03,520
users of kubernetes um have basically

00:01:01,920 --> 00:01:05,360
every single technology stack across the

00:01:03,520 --> 00:01:07,200
company so it'll be interesting to see

00:01:05,360 --> 00:01:08,880
from the inside what the user

00:01:07,200 --> 00:01:13,200
perspective is

00:01:08,880 --> 00:01:13,840
yeah so so so being at canonical for 15

00:01:13,200 --> 00:01:15,280
years

00:01:13,840 --> 00:01:17,200
uh you probably have some opinions on

00:01:15,280 --> 00:01:18,720
general purpose linux yes i think so

00:01:17,200 --> 00:01:20,080
yeah so i i had opinions before that

00:01:18,720 --> 00:01:21,680
already but i think

00:01:20,080 --> 00:01:24,400
my time at canonical cemented that as

00:01:21,680 --> 00:01:26,320
well um

00:01:24,400 --> 00:01:28,080
is the os relevant i think this next big

00:01:26,320 --> 00:01:29,200
technology transition and those are

00:01:28,080 --> 00:01:31,119
always

00:01:29,200 --> 00:01:32,880
interesting and produce kind of kind of

00:01:31,119 --> 00:01:35,360
unexpected results

00:01:32,880 --> 00:01:35,920
the the big questions i think are going

00:01:35,360 --> 00:01:39,600
to be

00:01:35,920 --> 00:01:42,799
what how will the distro vendors

00:01:39,600 --> 00:01:45,759
react to the change that

00:01:42,799 --> 00:01:47,040
cloud native brings if platforms and

00:01:45,759 --> 00:01:50,399
distros basically have

00:01:47,040 --> 00:01:50,880
built this value of being a bridge

00:01:50,399 --> 00:01:52,320
between

00:01:50,880 --> 00:01:54,000
upstreams that release at their own

00:01:52,320 --> 00:01:57,600
cadence that develop on their

00:01:54,000 --> 00:01:59,759
own um timelines and priorities

00:01:57,600 --> 00:02:00,960
to what users expect in terms of

00:01:59,759 --> 00:02:02,560
maintainability

00:02:00,960 --> 00:02:04,000
of long-term long-term support or

00:02:02,560 --> 00:02:06,640
predictability of release like

00:02:04,000 --> 00:02:07,280
how does that value translate into a

00:02:06,640 --> 00:02:09,759
world

00:02:07,280 --> 00:02:11,680
where developers are picking all the

00:02:09,759 --> 00:02:13,599
components that go into the

00:02:11,680 --> 00:02:15,280
into the container itself what's what

00:02:13,599 --> 00:02:17,760
about the interface between kernel

00:02:15,280 --> 00:02:19,440
and the user space since um you don't

00:02:17,760 --> 00:02:20,879
have a kernel inside the container you

00:02:19,440 --> 00:02:22,080
have to use the host container so those

00:02:20,879 --> 00:02:22,720
are the interesting questions a little

00:02:22,080 --> 00:02:24,800
bit that are

00:02:22,720 --> 00:02:27,200
there i will and i won't spoil the rest

00:02:24,800 --> 00:02:28,640
of the panel i have some advantages

00:02:27,200 --> 00:02:30,160
of the big existential questions for

00:02:28,640 --> 00:02:30,640
people that are building general purpose

00:02:30,160 --> 00:02:33,680
linux

00:02:30,640 --> 00:02:37,040
in general nice nice nice all right

00:02:33,680 --> 00:02:37,599
next up dusty why don't you introduce

00:02:37,040 --> 00:02:39,760
yourself

00:02:37,599 --> 00:02:41,760
and give us a little opinion hey

00:02:39,760 --> 00:02:43,760
everybody uh my name is dusty mabe

00:02:41,760 --> 00:02:45,680
i'm an engineer at red hat that's kind

00:02:43,760 --> 00:02:46,959
of how i know vincent we used to work

00:02:45,680 --> 00:02:50,080
together a little bit

00:02:46,959 --> 00:02:51,920
uh i started out my career even before

00:02:50,080 --> 00:02:53,920
red hat in the telecommunications space

00:02:51,920 --> 00:02:56,000
but then came to red hat and since have

00:02:53,920 --> 00:02:58,239
focused on

00:02:56,000 --> 00:02:59,920
kind of the container os space first

00:02:58,239 --> 00:03:03,280
with project atomic

00:02:59,920 --> 00:03:04,959
atomic host and most recently with the

00:03:03,280 --> 00:03:07,680
acquisition of coreos

00:03:04,959 --> 00:03:08,640
inc of the emerging of container linux

00:03:07,680 --> 00:03:11,760
and atomic host

00:03:08,640 --> 00:03:13,519
into our upstream fedora core os

00:03:11,760 --> 00:03:15,519
which is where i spend most of my time

00:03:13,519 --> 00:03:17,360
and then also red hat coral west which

00:03:15,519 --> 00:03:19,680
is part of openshift

00:03:17,360 --> 00:03:20,480
so that's kind of where i've been as far

00:03:19,680 --> 00:03:23,280
as you know

00:03:20,480 --> 00:03:24,239
a general purpose os in a cloud native

00:03:23,280 --> 00:03:26,480
world

00:03:24,239 --> 00:03:27,519
um obviously we're getting more to the

00:03:26,480 --> 00:03:30,480
point where

00:03:27,519 --> 00:03:32,959
uh you know special purpose os's or

00:03:30,480 --> 00:03:35,680
container focused os's seem to

00:03:32,959 --> 00:03:37,760
uh you know solve some needs that

00:03:35,680 --> 00:03:39,840
platforms have on top

00:03:37,760 --> 00:03:41,599
but at the same time i don't think

00:03:39,840 --> 00:03:42,319
necessarily general purpose os's are

00:03:41,599 --> 00:03:47,360
going

00:03:42,319 --> 00:03:50,400
anywhere soon i mean we really leverage

00:03:47,360 --> 00:03:51,200
in this special container os's uh we we

00:03:50,400 --> 00:03:53,840
leverage

00:03:51,200 --> 00:03:55,040
the ecosystem that the general purpose

00:03:53,840 --> 00:03:57,760
os's provide

00:03:55,040 --> 00:03:58,640
in our case we have fedora we have rel

00:03:57,760 --> 00:04:01,360
but there's

00:03:58,640 --> 00:04:02,720
rarely a new container os that you see

00:04:01,360 --> 00:04:05,840
that starts

00:04:02,720 --> 00:04:09,040
completely from scratch so

00:04:05,840 --> 00:04:11,599
there's always a role to be played there

00:04:09,040 --> 00:04:12,159
yeah that's fair all right thank you and

00:04:11,599 --> 00:04:16,000
tasha

00:04:12,159 --> 00:04:18,000
how do you go next hey i'm tasha drew

00:04:16,000 --> 00:04:20,400
i'm director of product incubation at

00:04:18,000 --> 00:04:23,360
vmware in the office of the cto

00:04:20,400 --> 00:04:24,160
i was responsible for launching the uh

00:04:23,360 --> 00:04:25,680
vmware

00:04:24,160 --> 00:04:27,759
tonsil kubernetes grid service for

00:04:25,680 --> 00:04:29,680
vsphere and i was part of the team that

00:04:27,759 --> 00:04:31,120
launched project pacific or vsphere

00:04:29,680 --> 00:04:33,759
tanzu

00:04:31,120 --> 00:04:35,360
i'm also co-chair of the multi-tenancy

00:04:33,759 --> 00:04:39,280
working group for kubernetes

00:04:35,360 --> 00:04:42,080
and co-chair of sig usability um and

00:04:39,280 --> 00:04:43,520
as far as the question about operating

00:04:42,080 --> 00:04:45,600
systems

00:04:43,520 --> 00:04:47,120
i think that there's sort of like an

00:04:45,600 --> 00:04:50,800
interesting historical

00:04:47,120 --> 00:04:52,240
separation of um operations teams and

00:04:50,800 --> 00:04:54,080
application development teams that

00:04:52,240 --> 00:04:54,639
resulted in this drive towards having

00:04:54,080 --> 00:04:57,040
like this

00:04:54,639 --> 00:04:58,400
golden image that may not have anything

00:04:57,040 --> 00:04:59,520
to do with the applications being

00:04:58,400 --> 00:05:01,759
deployed on it

00:04:59,520 --> 00:05:03,600
um so a lot of things have gotten baked

00:05:01,759 --> 00:05:04,960
into the operating system layer that the

00:05:03,600 --> 00:05:06,000
applications deployed on it don't

00:05:04,960 --> 00:05:08,639
actually need

00:05:06,000 --> 00:05:09,759
and being able to have more um purpose

00:05:08,639 --> 00:05:12,080
purpose-built

00:05:09,759 --> 00:05:13,840
operating systems that serve the needs

00:05:12,080 --> 00:05:15,520
of the applications running on it makes

00:05:13,840 --> 00:05:18,560
a lot of sense in terms of just

00:05:15,520 --> 00:05:20,639
uh minimizing your footprint having

00:05:18,560 --> 00:05:23,039
fewer attack vectors and not

00:05:20,639 --> 00:05:24,080
shipping a lot of stuff in that lower

00:05:23,039 --> 00:05:26,560
level that you don't actually

00:05:24,080 --> 00:05:27,759
need and so i think a lot of it kind of

00:05:26,560 --> 00:05:30,160
comes down to

00:05:27,759 --> 00:05:31,039
the build the build tool systems that we

00:05:30,160 --> 00:05:32,800
have

00:05:31,039 --> 00:05:34,479
i still think there's a ton of value in

00:05:32,800 --> 00:05:35,199
the people who are doing all of the back

00:05:34,479 --> 00:05:37,759
breaking work

00:05:35,199 --> 00:05:39,919
of maintaining the base operating system

00:05:37,759 --> 00:05:42,000
components that everybody leverages

00:05:39,919 --> 00:05:43,520
uh and the community that works on

00:05:42,000 --> 00:05:46,400
maintaining those as well and

00:05:43,520 --> 00:05:47,199
uh proliferating them so uh yeah i kind

00:05:46,400 --> 00:05:49,360
of have a

00:05:47,199 --> 00:05:50,479
a little bit of a mixed bag opinion yeah

00:05:49,360 --> 00:05:53,199
that's a

00:05:50,479 --> 00:05:54,320
split view on but it is interesting that

00:05:53,199 --> 00:05:57,360
um

00:05:54,320 --> 00:06:00,160
that even you know saying ops versus

00:05:57,360 --> 00:06:01,440
ops versus apps teams does kind of give

00:06:00,160 --> 00:06:04,160
two completely different

00:06:01,440 --> 00:06:05,360
like focal points of the same set of

00:06:04,160 --> 00:06:07,600
software

00:06:05,360 --> 00:06:08,960
darin um that probably leads pretty well

00:06:07,600 --> 00:06:11,360
into how

00:06:08,960 --> 00:06:12,319
you have operation teams versus enabling

00:06:11,360 --> 00:06:15,840
apps teams

00:06:12,319 --> 00:06:16,960
why don't you go next yeah um yeah i'm

00:06:15,840 --> 00:06:20,400
darren shepard uh

00:06:16,960 --> 00:06:22,560
cto and co-founder at rancher labs

00:06:20,400 --> 00:06:25,080
rancher we do multi-cluster management

00:06:22,560 --> 00:06:28,240
kubernetes and we've also done some

00:06:25,080 --> 00:06:30,880
container-optimized os's um

00:06:28,240 --> 00:06:31,919
yeah so that's my background so uh

00:06:30,880 --> 00:06:33,919
regarding this question

00:06:31,919 --> 00:06:35,840
gonna like i could i could probably like

00:06:33,919 --> 00:06:37,280
uh you know monologue for the next half

00:06:35,840 --> 00:06:40,400
an hour i'm gonna answer this question

00:06:37,280 --> 00:06:41,360
don't do it yes so i'm gonna keep it

00:06:40,400 --> 00:06:43,600
short

00:06:41,360 --> 00:06:45,280
but does it make sense uh to run a

00:06:43,600 --> 00:06:48,000
general purpose os in the cloud native

00:06:45,280 --> 00:06:50,400
world i would say no

00:06:48,000 --> 00:06:51,840
um but it's actually it's significantly

00:06:50,400 --> 00:06:52,800
more nuanced than that because

00:06:51,840 --> 00:06:55,120
you know it's like what do you call a

00:06:52,800 --> 00:06:57,120
general purpose os and

00:06:55,120 --> 00:06:58,319
and you know it's like well if i if i'm

00:06:57,120 --> 00:07:00,479
saying the answer is no does that mean

00:06:58,319 --> 00:07:02,400
that the death of a ubuntu or red hat or

00:07:00,479 --> 00:07:04,479
something no that's not true because

00:07:02,400 --> 00:07:05,440
it's really all of the definitions of

00:07:04,479 --> 00:07:08,319
these things

00:07:05,440 --> 00:07:09,520
are changing like the assets that come

00:07:08,319 --> 00:07:12,160
from a linux

00:07:09,520 --> 00:07:13,840
the ecosystem or vendor are all

00:07:12,160 --> 00:07:15,840
completely still

00:07:13,840 --> 00:07:17,840
relevant but they're just packaged and

00:07:15,840 --> 00:07:19,360
delivered in a completely different way

00:07:17,840 --> 00:07:21,280
because like i don't even really like

00:07:19,360 --> 00:07:22,880
the term of container optimized linux

00:07:21,280 --> 00:07:23,520
because the reality of when you look at

00:07:22,880 --> 00:07:24,960
these things

00:07:23,520 --> 00:07:26,400
is they almost have nothing to do with

00:07:24,960 --> 00:07:28,240
containers except for the fact that they

00:07:26,400 --> 00:07:30,800
have docker or podman or

00:07:28,240 --> 00:07:32,080
kubernetes on it it's like a container

00:07:30,800 --> 00:07:32,880
optimized linux is still a general

00:07:32,080 --> 00:07:35,360
purpose os

00:07:32,880 --> 00:07:36,479
because it can run basically in any any

00:07:35,360 --> 00:07:38,080
uh

00:07:36,479 --> 00:07:39,759
workload it's just how the workload is

00:07:38,080 --> 00:07:41,199
packaged and delivered so i think

00:07:39,759 --> 00:07:42,240
there's a huge transition that we're

00:07:41,199 --> 00:07:43,759
going to see as we go into the cloud

00:07:42,240 --> 00:07:45,520
native world of like

00:07:43,759 --> 00:07:47,360
how users interact with the linux

00:07:45,520 --> 00:07:47,680
distribution what they're expecting from

00:07:47,360 --> 00:07:49,840
it

00:07:47,680 --> 00:07:51,680
and i also see a lot of interesting

00:07:49,840 --> 00:07:54,160
opportunities for

00:07:51,680 --> 00:07:55,840
kubernetes and kubernetes distributions

00:07:54,160 --> 00:07:59,280
to effectively replace

00:07:55,840 --> 00:08:01,520
what is linux distributions today um

00:07:59,280 --> 00:08:02,560
and uh sorry that's a little off topic

00:08:01,520 --> 00:08:03,199
i'll just say something real short and

00:08:02,560 --> 00:08:05,599
i'll stop

00:08:03,199 --> 00:08:07,039
it's just that the the linux

00:08:05,599 --> 00:08:08,560
distribution today is really a kernel

00:08:07,039 --> 00:08:09,680
and a set of user space

00:08:08,560 --> 00:08:12,000
right and so they're a bunch of user

00:08:09,680 --> 00:08:14,720
space packages that run on the kernel

00:08:12,000 --> 00:08:16,319
right so when you look at kubernetes our

00:08:14,720 --> 00:08:18,160
view of a kubernetes distribution is

00:08:16,319 --> 00:08:20,400
very naive right now i think it's very

00:08:18,160 --> 00:08:22,240
myopic um it's because we have

00:08:20,400 --> 00:08:23,360
kubernetes but then we have a whole host

00:08:22,240 --> 00:08:25,199
of applications and

00:08:23,360 --> 00:08:27,120
software that run on top of it and like

00:08:25,199 --> 00:08:29,599
you see that from the cncf landscape

00:08:27,120 --> 00:08:30,800
you know this gigantic uh slide of all

00:08:29,599 --> 00:08:34,000
the scrap

00:08:30,800 --> 00:08:37,360
good software sorry not crap

00:08:34,000 --> 00:08:39,360
um and so you know how

00:08:37,360 --> 00:08:41,120
you know there's there's still the

00:08:39,360 --> 00:08:42,560
fundamental need that linux distribution

00:08:41,120 --> 00:08:44,000
is always providing which is like

00:08:42,560 --> 00:08:45,760
delivering packages that run on the

00:08:44,000 --> 00:08:46,160
kernel now we kind of need the same

00:08:45,760 --> 00:08:48,880
thing

00:08:46,160 --> 00:08:49,440
in the cloud native space so it's like

00:08:48,880 --> 00:08:51,760
but those

00:08:49,440 --> 00:08:53,360
those packages that you know run on top

00:08:51,760 --> 00:08:54,800
of kubernetes they still have linux bits

00:08:53,360 --> 00:08:55,519
inside of them they still have glibc and

00:08:54,800 --> 00:08:57,440
they still have

00:08:55,519 --> 00:08:59,600
you know uh java runtime they're all but

00:08:57,440 --> 00:09:02,160
you know so this is just all changing

00:08:59,600 --> 00:09:03,440
that that's basically mm-hmm no i do

00:09:02,160 --> 00:09:05,519
think

00:09:03,440 --> 00:09:07,279
lots of lessons learned of software

00:09:05,519 --> 00:09:09,839
packaging in general that have been

00:09:07,279 --> 00:09:10,800
invented and reinvented in so so many

00:09:09,839 --> 00:09:12,160
ways

00:09:10,800 --> 00:09:14,640
and we're just going to reinvent them

00:09:12,160 --> 00:09:18,000
again in the container space so

00:09:14,640 --> 00:09:21,519
um good good good so then

00:09:18,000 --> 00:09:22,160
with that i like you you you're talking

00:09:21,519 --> 00:09:23,519
about

00:09:22,160 --> 00:09:25,360
you know everybody's kind of mentioned

00:09:23,519 --> 00:09:26,320
like the way that these things are

00:09:25,360 --> 00:09:28,480
changing and

00:09:26,320 --> 00:09:30,160
uh even to some extent kind of implying

00:09:28,480 --> 00:09:33,920
that obviously there's

00:09:30,160 --> 00:09:35,760
um enough players in the scene that

00:09:33,920 --> 00:09:37,519
are interested in seeing it play you

00:09:35,760 --> 00:09:39,040
know play out and

00:09:37,519 --> 00:09:40,560
i think one of these things that's

00:09:39,040 --> 00:09:41,680
interesting is that it's like yeah i

00:09:40,560 --> 00:09:43,120
don't think that any of the general

00:09:41,680 --> 00:09:45,200
purposes are going

00:09:43,120 --> 00:09:46,399
os's are going away and i don't think

00:09:45,200 --> 00:09:48,480
they need to

00:09:46,399 --> 00:09:49,519
um but in some ways the pie is just

00:09:48,480 --> 00:09:51,680
getting bigger

00:09:49,519 --> 00:09:54,080
so like what what purpose they did is

00:09:51,680 --> 00:09:56,959
fine but the cloud native space is

00:09:54,080 --> 00:09:57,440
expanding out um and so with that you've

00:09:56,959 --> 00:10:00,560
seen

00:09:57,440 --> 00:10:02,399
you know different cloud providers come

00:10:00,560 --> 00:10:06,160
up with either their own

00:10:02,399 --> 00:10:08,079
you know optimized os uh linux os

00:10:06,160 --> 00:10:09,120
and then you know all of them are trying

00:10:08,079 --> 00:10:11,519
to compete for different kinds of

00:10:09,120 --> 00:10:13,519
managed kubernetes offerings

00:10:11,519 --> 00:10:15,279
um do you think that that's going to

00:10:13,519 --> 00:10:17,040
have an impact

00:10:15,279 --> 00:10:18,399
on the the kind of broader market so

00:10:17,040 --> 00:10:19,600
like if we say okay there's general

00:10:18,399 --> 00:10:21,360
purposes and then there's all these

00:10:19,600 --> 00:10:24,240
derivatives but now there's like

00:10:21,360 --> 00:10:25,040
a competition for optimized derivatives

00:10:24,240 --> 00:10:27,440
and people

00:10:25,040 --> 00:10:28,160
won't have maybe what they were familiar

00:10:27,440 --> 00:10:31,200
with

00:10:28,160 --> 00:10:32,079
but it kind of narrows down you know for

00:10:31,200 --> 00:10:35,360
whatever particular

00:10:32,079 --> 00:10:37,120
use case like cloud vendor optimized

00:10:35,360 --> 00:10:39,440
what kind of impact do you think that'll

00:10:37,120 --> 00:10:41,920
have on the market

00:10:39,440 --> 00:10:43,440
who wants to go first on that one let me

00:10:41,920 --> 00:10:44,800
let me take a bridge from what darren

00:10:43,440 --> 00:10:46,079
said i think darren's points the main

00:10:44,800 --> 00:10:48,880
point is that

00:10:46,079 --> 00:10:49,760
while the the companies themselves and

00:10:48,880 --> 00:10:51,279
like the core

00:10:49,760 --> 00:10:53,040
assets that they have may not change

00:10:51,279 --> 00:10:54,640
like what what gets delivered to end

00:10:53,040 --> 00:10:56,320
customers i think has to change like

00:10:54,640 --> 00:10:58,399
there's no question and

00:10:56,320 --> 00:10:59,680
the thing is that the the piece of the

00:10:58,399 --> 00:11:01,920
operating system that runs

00:10:59,680 --> 00:11:03,279
underneath the container in kubernetes

00:11:01,920 --> 00:11:04,800
that is gonna that is

00:11:03,279 --> 00:11:06,399
although the kernel is really relevant

00:11:04,800 --> 00:11:07,760
it's so small

00:11:06,399 --> 00:11:09,519
like the number of components there is

00:11:07,760 --> 00:11:11,360
so little that there is like actual

00:11:09,519 --> 00:11:13,040
value in the cloud provider or whoever

00:11:11,360 --> 00:11:16,079
is preparing the whole stack

00:11:13,040 --> 00:11:18,000
giving optimizing that entire layer

00:11:16,079 --> 00:11:20,160
so i think that's something which is

00:11:18,000 --> 00:11:22,560
absolutely a

00:11:20,160 --> 00:11:23,519
a likely trend to come that they'll

00:11:22,560 --> 00:11:25,360
optimize

00:11:23,519 --> 00:11:27,120
this deliverable which is they're saying

00:11:25,360 --> 00:11:28,240
like how much is that actually linux you

00:11:27,120 --> 00:11:29,519
know okay it's linux from the kernel

00:11:28,240 --> 00:11:30,720
perspective what else is there like

00:11:29,519 --> 00:11:33,360
there's not a lot there

00:11:30,720 --> 00:11:35,279
you know that that just serves um enough

00:11:33,360 --> 00:11:36,880
scaffolding for you to boot the the

00:11:35,279 --> 00:11:39,920
containers off

00:11:36,880 --> 00:11:41,440
there's one um wild card on that though

00:11:39,920 --> 00:11:43,600
which is that

00:11:41,440 --> 00:11:44,880
as you move into enterprise everyone

00:11:43,600 --> 00:11:46,720
says oh hold on

00:11:44,880 --> 00:11:48,079
but i need to run my asset tracking or i

00:11:46,720 --> 00:11:50,959
need to run my

00:11:48,079 --> 00:11:52,639
my ids pieces on this layer as well so i

00:11:50,959 --> 00:11:55,120
think that's the only piece where

00:11:52,639 --> 00:11:56,240
i'm not sure what the future actually

00:11:55,120 --> 00:11:58,560
will look for that but

00:11:56,240 --> 00:11:59,920
that something specific to be delivered

00:11:58,560 --> 00:12:03,200
for that that's small

00:11:59,920 --> 00:12:03,760
atomically um updatable um safe to

00:12:03,200 --> 00:12:05,920
basically

00:12:03,760 --> 00:12:07,040
uh roll back and forward i think that's

00:12:05,920 --> 00:12:08,480
definitely coming

00:12:07,040 --> 00:12:09,920
the question is this thing like what do

00:12:08,480 --> 00:12:10,160
you do like when somebody says oh i need

00:12:09,920 --> 00:12:12,240
to

00:12:10,160 --> 00:12:13,680
put put the bmc agent on this and people

00:12:12,240 --> 00:12:15,200
are like well

00:12:13,680 --> 00:12:16,560
you can't install any software on this

00:12:15,200 --> 00:12:17,120
layer like yeah you're gonna put any

00:12:16,560 --> 00:12:19,040
packages

00:12:17,120 --> 00:12:20,560
what do i do or probably even more scary

00:12:19,040 --> 00:12:22,079
than that you know like

00:12:20,560 --> 00:12:23,760
somebody's looking at a checklist and

00:12:22,079 --> 00:12:25,200
they say well it says here i have to

00:12:23,760 --> 00:12:28,240
deploy to x

00:12:25,200 --> 00:12:29,600
is this x you say yeah well no it's it's

00:12:28,240 --> 00:12:31,200
a better derivative you know

00:12:29,600 --> 00:12:32,639
yes i don't even know what like like

00:12:31,200 --> 00:12:34,320
it's that that question doesn't compute

00:12:32,639 --> 00:12:37,279
in the context of where it's landing

00:12:34,320 --> 00:12:38,000
yeah like isis isv certification is a

00:12:37,279 --> 00:12:39,120
big deal too

00:12:38,000 --> 00:12:40,880
you know it's like a lot of people are

00:12:39,120 --> 00:12:41,760
like i'd have to run this os because

00:12:40,880 --> 00:12:44,480
that's what

00:12:41,760 --> 00:12:44,880
you know this vendor has certified on um

00:12:44,480 --> 00:12:47,519
which

00:12:44,880 --> 00:12:49,040
completely changes when you know as

00:12:47,519 --> 00:12:50,800
vendors are starting to

00:12:49,040 --> 00:12:52,399
package you know their third-party

00:12:50,800 --> 00:12:54,560
software on top of kubernetes

00:12:52,399 --> 00:12:56,720
what does it now mean to certify you

00:12:54,560 --> 00:12:58,240
know um

00:12:56,720 --> 00:12:59,440
and that's kind of interesting space i

00:12:58,240 --> 00:13:00,399
mean all right question a question for

00:12:59,440 --> 00:13:02,560
you there and on that like

00:13:00,399 --> 00:13:03,600
can you run a workload that's certified

00:13:02,560 --> 00:13:05,600
for souza

00:13:03,600 --> 00:13:06,639
on a non-souza kernel underneath the

00:13:05,600 --> 00:13:08,399
container

00:13:06,639 --> 00:13:10,000
yeah and even even even dusty could

00:13:08,399 --> 00:13:12,880
weight into that one a little bit

00:13:10,000 --> 00:13:15,040
yeah and and well and what does it mean

00:13:12,880 --> 00:13:16,800
you know

00:13:15,040 --> 00:13:18,399
is there even honestly is there even

00:13:16,800 --> 00:13:19,760
such thing as can i certify for

00:13:18,399 --> 00:13:21,360
kubernetes in general

00:13:19,760 --> 00:13:22,800
you know or am i actually certifying for

00:13:21,360 --> 00:13:25,760
eks or

00:13:22,800 --> 00:13:27,120
or you know um like vmware suite or or

00:13:25,760 --> 00:13:28,720
whatever openshift

00:13:27,120 --> 00:13:31,680
um you know those are interesting

00:13:28,720 --> 00:13:33,200
questions so but going back to

00:13:31,680 --> 00:13:34,639
because i already forgot vince like

00:13:33,200 --> 00:13:36,240
vincent what was that what was the

00:13:34,639 --> 00:13:38,560
original question

00:13:36,240 --> 00:13:40,720
no this is good uh it was it was more

00:13:38,560 --> 00:13:41,920
like is is it a useful trend that we see

00:13:40,720 --> 00:13:43,440
these kind of

00:13:41,920 --> 00:13:45,440
optimized derivatives because there's a

00:13:43,440 --> 00:13:46,720
few you know players in the scene

00:13:45,440 --> 00:13:48,000
and you know like you've even had

00:13:46,720 --> 00:13:48,720
experience with having kind of an

00:13:48,000 --> 00:13:51,120
optimized

00:13:48,720 --> 00:13:52,000
yeah that's right um focus but is it a

00:13:51,120 --> 00:13:54,480
useful

00:13:52,000 --> 00:13:55,920
useful trend or is it well i mean have a

00:13:54,480 --> 00:13:58,240
dangerous impact on the market

00:13:55,920 --> 00:13:59,440
you know so well i mean it's disruptive

00:13:58,240 --> 00:14:02,079
for sure like so there's

00:13:59,440 --> 00:14:04,240
there's like the bottle rocket and like

00:14:02,079 --> 00:14:07,440
google's container optimized

00:14:04,240 --> 00:14:10,399
um you know microsoft i they haven't

00:14:07,440 --> 00:14:12,000
announced i don't think a linux you know

00:14:10,399 --> 00:14:14,320
container distro or whatever but

00:14:12,000 --> 00:14:15,600
i imagine one would come at some point

00:14:14,320 --> 00:14:17,440
um

00:14:15,600 --> 00:14:19,040
honestly i think it makes total sense

00:14:17,440 --> 00:14:20,959
for these uh um

00:14:19,040 --> 00:14:22,720
cloud providers because it's like what's

00:14:20,959 --> 00:14:23,920
the touch point of the customer it's

00:14:22,720 --> 00:14:25,760
like the customer

00:14:23,920 --> 00:14:27,760
or the end user uh they really want

00:14:25,760 --> 00:14:30,480
kubernetes so

00:14:27,760 --> 00:14:31,600
why do they need to care about the nodes

00:14:30,480 --> 00:14:33,199
and what's running on the nodes the

00:14:31,600 --> 00:14:35,760
interface is kubernetes

00:14:33,199 --> 00:14:37,199
and this is why like it's it's tricky

00:14:35,760 --> 00:14:37,839
especially if you're a linux vendor of

00:14:37,199 --> 00:14:39,680
like

00:14:37,839 --> 00:14:42,639
well what does this mean now because

00:14:39,680 --> 00:14:44,560
effectively that linux layer

00:14:42,639 --> 00:14:46,480
is the the kernel itself or the

00:14:44,560 --> 00:14:48,480
container linux whatever is

00:14:46,480 --> 00:14:49,839
it's fairly commoditized from us you

00:14:48,480 --> 00:14:52,720
know it's like people don't

00:14:49,839 --> 00:14:53,680
really want to pay for it that much um

00:14:52,720 --> 00:14:55,920
and

00:14:53,680 --> 00:14:57,600
and they since they don't interact

00:14:55,920 --> 00:14:58,800
directly with it it's very hard to

00:14:57,600 --> 00:15:00,320
differentiate because

00:14:58,800 --> 00:15:02,720
you know it's like ubuntu for example

00:15:00,320 --> 00:15:03,600
like they're you know rise to fame or

00:15:02,720 --> 00:15:05,680
whatever it's all about

00:15:03,600 --> 00:15:06,720
kind of users interacting with it and

00:15:05,680 --> 00:15:08,639
enjoying it

00:15:06,720 --> 00:15:09,760
right and if i'm not touching the node

00:15:08,639 --> 00:15:11,279
os anymore like

00:15:09,760 --> 00:15:13,040
so it's like the only way to

00:15:11,279 --> 00:15:14,160
differentiate even if there's

00:15:13,040 --> 00:15:15,519
i don't i would say maybe there's not

00:15:14,160 --> 00:15:16,959
even a need to differentiate anymore

00:15:15,519 --> 00:15:17,680
because you know if you just say it's

00:15:16,959 --> 00:15:20,079
commodity

00:15:17,680 --> 00:15:21,920
but the only way to uh differentiate is

00:15:20,079 --> 00:15:24,639
through uh capabilities

00:15:21,920 --> 00:15:25,839
and that's where i still see os's uh

00:15:24,639 --> 00:15:28,560
being somewhat important

00:15:25,839 --> 00:15:30,079
right now is uh especially let's say

00:15:28,560 --> 00:15:30,480
like in the edge space where i've been

00:15:30,079 --> 00:15:32,880
working

00:15:30,480 --> 00:15:33,759
a lot recently where it's like gpus and

00:15:32,880 --> 00:15:35,600
devices

00:15:33,759 --> 00:15:37,680
and and all these things still matter

00:15:35,600 --> 00:15:39,759
because they very much touch the os

00:15:37,680 --> 00:15:41,199
um so it's like well your os is not

00:15:39,759 --> 00:15:41,680
capable you know because it doesn't have

00:15:41,199 --> 00:15:43,279
these

00:15:41,680 --> 00:15:45,120
whatever proprietary drivers and that

00:15:43,279 --> 00:15:45,759
kind of leads towards like you know if

00:15:45,120 --> 00:15:48,800
you need

00:15:45,759 --> 00:15:50,720
uh bmc you're you know it's like

00:15:48,800 --> 00:15:52,639
it's the capabilities not so much the

00:15:50,720 --> 00:15:54,399
the the uh

00:15:52,639 --> 00:15:55,920
actually interacting and using it i

00:15:54,399 --> 00:15:58,079
guess yeah tasha

00:15:55,920 --> 00:15:59,759
tasha do you or dusty you want to wipe

00:15:58,079 --> 00:16:02,800
into that one

00:15:59,759 --> 00:16:04,399
yeah i mean i as far as you know

00:16:02,800 --> 00:16:06,000
different cloud providers coming up with

00:16:04,399 --> 00:16:10,000
their own distros

00:16:06,000 --> 00:16:12,079
is that a useful trend i i think

00:16:10,000 --> 00:16:13,839
you could go both ways right um it's

00:16:12,079 --> 00:16:15,199
useful because anytime you bring new

00:16:13,839 --> 00:16:17,440
ideas to the market

00:16:15,199 --> 00:16:19,040
um there's things that can be learned

00:16:17,440 --> 00:16:21,120
but at the same time

00:16:19,040 --> 00:16:22,160
it also increases fragmentation a little

00:16:21,120 --> 00:16:24,320
bit like there's

00:16:22,160 --> 00:16:25,759
now more options and if you happen to be

00:16:24,320 --> 00:16:29,120
rolling you know

00:16:25,759 --> 00:16:31,199
trying to set up kubernetes yourself um

00:16:29,120 --> 00:16:34,160
you know here's a new option to consider

00:16:31,199 --> 00:16:37,440
which is options are good but they also

00:16:34,160 --> 00:16:39,279
might uh confuse people or

00:16:37,440 --> 00:16:40,639
lead them down the wrong path at some

00:16:39,279 --> 00:16:42,959
point i'm not sure

00:16:40,639 --> 00:16:44,959
um but i think darren had a good point

00:16:42,959 --> 00:16:47,519
which is it depends on who you are

00:16:44,959 --> 00:16:49,600
right are you just clicking a button and

00:16:47,519 --> 00:16:51,279
having the entire cluster set up for you

00:16:49,600 --> 00:16:52,959
and it's completely managed

00:16:51,279 --> 00:16:54,720
not you know you're not managing the

00:16:52,959 --> 00:16:58,639
cluster if that's the case

00:16:54,720 --> 00:16:59,759
um then uh you know the role of the

00:16:58,639 --> 00:17:03,680
distro

00:16:59,759 --> 00:17:06,160
does have a lot less of a role at least

00:17:03,680 --> 00:17:08,160
that you're concerned with right the the

00:17:06,160 --> 00:17:08,959
os is still very important we see that

00:17:08,160 --> 00:17:10,880
every time

00:17:08,959 --> 00:17:12,400
there's a new security issue that comes

00:17:10,880 --> 00:17:15,360
out right um

00:17:12,400 --> 00:17:16,079
but who cares who's responsible for it

00:17:15,360 --> 00:17:19,520
right

00:17:16,079 --> 00:17:23,439
uh is is the big part and we've seen

00:17:19,520 --> 00:17:26,400
the um the the lines

00:17:23,439 --> 00:17:28,319
move more and more towards you know more

00:17:26,400 --> 00:17:30,080
is being taken care of by something that

00:17:28,319 --> 00:17:31,360
you outsource you pay for it it's a

00:17:30,080 --> 00:17:34,320
cloud platform

00:17:31,360 --> 00:17:34,799
and you care just about your app right

00:17:34,320 --> 00:17:36,559
and

00:17:34,799 --> 00:17:37,919
that service that you're providing to

00:17:36,559 --> 00:17:40,960
your customers or

00:17:37,919 --> 00:17:44,480
to your users that is giving them value

00:17:40,960 --> 00:17:47,600
and so you know darren is right if you

00:17:44,480 --> 00:17:50,080
are a cloud platform and you're

00:17:47,600 --> 00:17:52,799
offering that abstraction to your users

00:17:50,080 --> 00:17:55,440
and your users don't care

00:17:52,799 --> 00:17:56,000
then it's probably a useful trend for

00:17:55,440 --> 00:18:00,559
them but

00:17:56,000 --> 00:18:04,080
if you happen to be somebody

00:18:00,559 --> 00:18:06,080
a big company or whatnot who where you

00:18:04,080 --> 00:18:06,720
are responsible for that platform maybe

00:18:06,080 --> 00:18:09,600
you're

00:18:06,720 --> 00:18:10,080
uh outsourcing the infrastructure level

00:18:09,600 --> 00:18:12,720
stuff

00:18:10,080 --> 00:18:14,400
but not the platform as a service the

00:18:12,720 --> 00:18:16,640
kubernetes level stuff

00:18:14,400 --> 00:18:18,799
and you also want to be able to take

00:18:16,640 --> 00:18:21,200
that to other cloud platforms

00:18:18,799 --> 00:18:22,080
and not be locked into one necessarily

00:18:21,200 --> 00:18:24,000
um

00:18:22,080 --> 00:18:25,600
then you do care about the os still

00:18:24,000 --> 00:18:26,480
right you're still making that choice

00:18:25,600 --> 00:18:29,039
and you want to

00:18:26,480 --> 00:18:30,559
choose your platform based on that so it

00:18:29,039 --> 00:18:34,080
depends

00:18:30,559 --> 00:18:35,840
yeah wonderful because the you uh

00:18:34,080 --> 00:18:37,280
it's like it's kind of like as we move

00:18:35,840 --> 00:18:39,039
into this cloud native world it's all

00:18:37,280 --> 00:18:42,080
kind of reducing the burden

00:18:39,039 --> 00:18:43,440
on the um the operator or whatever even

00:18:42,080 --> 00:18:45,120
if you're running yourself you know

00:18:43,440 --> 00:18:47,520
data center or whatever you know it's

00:18:45,120 --> 00:18:49,919
you know i think um you know core os

00:18:47,520 --> 00:18:51,840
uh in the early days and now fedora core

00:18:49,919 --> 00:18:53,280
west really kind of pioneered this

00:18:51,840 --> 00:18:55,360
this kind of uh what is it a

00:18:53,280 --> 00:18:58,880
self-driving car kind of

00:18:55,360 --> 00:19:01,280
uh mentality of of you know

00:18:58,880 --> 00:19:03,200
it just you treat it more like a phone

00:19:01,280 --> 00:19:04,160
or whatever it just updates and you know

00:19:03,200 --> 00:19:06,480
reboots or whatever

00:19:04,160 --> 00:19:07,520
it's so it's all about reducing the the

00:19:06,480 --> 00:19:10,240
maintenance

00:19:07,520 --> 00:19:10,720
which um which a lot of that also is

00:19:10,240 --> 00:19:14,640
about

00:19:10,720 --> 00:19:17,039
re reducing the variability in the os

00:19:14,640 --> 00:19:17,919
um so like if if you say like that the

00:19:17,039 --> 00:19:19,679
trend is

00:19:17,919 --> 00:19:21,919
going towards re reducing the

00:19:19,679 --> 00:19:24,640
maintenance and the variability

00:19:21,919 --> 00:19:26,240
um that also means that like i think

00:19:24,640 --> 00:19:29,120
fragmentation doesn't get

00:19:26,240 --> 00:19:29,840
as bad you know it's like you know so

00:19:29,120 --> 00:19:31,039
much

00:19:29,840 --> 00:19:32,320
it's like it's the thing is there's a

00:19:31,039 --> 00:19:33,679
tiny thing that runs underneath

00:19:32,320 --> 00:19:35,600
underneath the container the line of the

00:19:33,679 --> 00:19:37,600
containers underneath that what is there

00:19:35,600 --> 00:19:39,120
yeah and i think one of the interesting

00:19:37,600 --> 00:19:42,640
things that's happened is the

00:19:39,120 --> 00:19:44,160
the lts kernels you know from upstream

00:19:42,640 --> 00:19:46,640
it's kind of been i think that's been a

00:19:44,160 --> 00:19:48,160
big deal that like there's actually lts

00:19:46,640 --> 00:19:50,799
kernels upstream

00:19:48,160 --> 00:19:51,200
so that's allowing more distributions

00:19:50,799 --> 00:19:52,720
and

00:19:51,200 --> 00:19:54,559
and things like that to just say kind of

00:19:52,720 --> 00:19:56,320
piggyback on

00:19:54,559 --> 00:19:58,240
off of that and that kind of keeps the

00:19:56,320 --> 00:19:58,640
whole industry in sync which is really

00:19:58,240 --> 00:20:01,919
quite

00:19:58,640 --> 00:20:03,440
nice um because it's you know if you're

00:20:01,919 --> 00:20:04,880
if you're driving you know debian is

00:20:03,440 --> 00:20:05,919
coming up off of that or whatever

00:20:04,880 --> 00:20:07,840
they're trying everyone's trying to kind

00:20:05,919 --> 00:20:09,120
of align to those lts schedules

00:20:07,840 --> 00:20:11,600
then it also reduces kind of the

00:20:09,120 --> 00:20:13,760
fragmentation because that's the point

00:20:11,600 --> 00:20:15,120
at the end of the day that the the

00:20:13,760 --> 00:20:15,760
biggest thing you care about from the

00:20:15,120 --> 00:20:17,039
linux

00:20:15,760 --> 00:20:19,360
you know from the container side is

00:20:17,039 --> 00:20:20,080
effectively the you know the linux api

00:20:19,360 --> 00:20:23,200
and avi

00:20:20,080 --> 00:20:23,760
you know as long as that uh yeah that

00:20:23,200 --> 00:20:26,080
that

00:20:23,760 --> 00:20:26,960
i do want tasha you were starting to uh

00:20:26,080 --> 00:20:28,000
jump in

00:20:26,960 --> 00:20:30,559
your industry had kind of a race

00:20:28,000 --> 00:20:32,080
condition there um

00:20:30,559 --> 00:20:33,440
you see it as a useful trend or i mean

00:20:32,080 --> 00:20:34,000
like it is we've almost touched on

00:20:33,440 --> 00:20:37,120
another thing

00:20:34,000 --> 00:20:40,400
of like do decatur kubernetes users even

00:20:37,120 --> 00:20:42,559
care what's running underneath um i mean

00:20:40,400 --> 00:20:43,760
yeah in an ideal world they wouldn't

00:20:42,559 --> 00:20:45,360
have to but like

00:20:43,760 --> 00:20:47,679
as we were saying earlier when you start

00:20:45,360 --> 00:20:49,280
getting into what software

00:20:47,679 --> 00:20:50,799
what your software is certified to run

00:20:49,280 --> 00:20:53,520
on from a container and host

00:20:50,799 --> 00:20:54,960
perspective like you uh from an isv

00:20:53,520 --> 00:20:56,559
perspective you really need to like

00:20:54,960 --> 00:20:57,760
minimize the possible number of

00:20:56,559 --> 00:20:59,679
combinatorial

00:20:57,760 --> 00:21:00,880
you know combat like the matrix like

00:20:59,679 --> 00:21:02,320
like let's make this

00:21:00,880 --> 00:21:04,480
achievable like to actually say we

00:21:02,320 --> 00:21:06,720
support our software um

00:21:04,480 --> 00:21:08,559
so yeah i would say that uh it becomes

00:21:06,720 --> 00:21:10,240
just a supportability problem for the

00:21:08,559 --> 00:21:12,080
isvs versus

00:21:10,240 --> 00:21:14,000
as an application developer do i wanna

00:21:12,080 --> 00:21:15,840
care i really don't right like i kind of

00:21:14,000 --> 00:21:17,600
just wanna care about the exact changes

00:21:15,840 --> 00:21:18,320
i'm making my to my application and have

00:21:17,600 --> 00:21:20,559
it be

00:21:18,320 --> 00:21:22,159
as atomic as possible but then i always

00:21:20,559 --> 00:21:24,320
end up relying on something

00:21:22,159 --> 00:21:26,159
uh that's at a lower level that ends up

00:21:24,320 --> 00:21:28,000
making things complicated

00:21:26,159 --> 00:21:29,440
um from the cloud vendors perspectives i

00:21:28,000 --> 00:21:31,840
think releasing their own

00:21:29,440 --> 00:21:33,679
linux distributions makes a lot of sense

00:21:31,840 --> 00:21:36,720
just from cost reduction

00:21:33,679 --> 00:21:39,280
and optimizing for their exact use case

00:21:36,720 --> 00:21:40,880
they have a more limited number of

00:21:39,280 --> 00:21:43,039
hardware that they need to support

00:21:40,880 --> 00:21:44,080
so they don't need like something they

00:21:43,039 --> 00:21:46,320
could really run on

00:21:44,080 --> 00:21:47,760
the huge swath of things you find in

00:21:46,320 --> 00:21:50,159
on-prem data centers

00:21:47,760 --> 00:21:52,240
um they don't want to necessarily pay a

00:21:50,159 --> 00:21:53,679
vendor every time they spin up linux you

00:21:52,240 --> 00:21:55,200
know they want to keep all of the money

00:21:53,679 --> 00:21:56,640
from the customer instead of just a

00:21:55,200 --> 00:21:58,960
smaller amount so

00:21:56,640 --> 00:22:01,280
yeah i get it um i don't know that it

00:21:58,960 --> 00:22:01,760
really translates to on-prem use cases

00:22:01,280 --> 00:22:03,919
where

00:22:01,760 --> 00:22:05,360
people are really consolidating their

00:22:03,919 --> 00:22:08,320
entire security posture

00:22:05,360 --> 00:22:09,039
around a limited number of linux um and

00:22:08,320 --> 00:22:11,760
windows

00:22:09,039 --> 00:22:13,039
operating systems they need to you know

00:22:11,760 --> 00:22:15,039
whether we agree with it or not they

00:22:13,039 --> 00:22:17,520
want to run their uh virus scanner

00:22:15,039 --> 00:22:19,200
against every single node you know so

00:22:17,520 --> 00:22:21,760
you you just start running into like the

00:22:19,200 --> 00:22:22,960
exact uh use cases and like that

00:22:21,760 --> 00:22:25,280
security checklist

00:22:22,960 --> 00:22:26,000
so yeah yeah gosh that security

00:22:25,280 --> 00:22:28,000
checklist

00:22:26,000 --> 00:22:29,120
so that's that's probably pretty perfect

00:22:28,000 --> 00:22:32,799
segway

00:22:29,120 --> 00:22:34,880
um are there different

00:22:32,799 --> 00:22:36,000
kinds of security considerations that

00:22:34,880 --> 00:22:37,440
you'd have like

00:22:36,000 --> 00:22:39,120
for linux in general when you're

00:22:37,440 --> 00:22:40,960
specifically running kubernetes so like

00:22:39,120 --> 00:22:43,200
in this like

00:22:40,960 --> 00:22:45,440
we you know we said cloud native by and

00:22:43,200 --> 00:22:47,440
large that's meaning like

00:22:45,440 --> 00:22:48,559
schedulable workloads that can be put on

00:22:47,440 --> 00:22:52,240
a cluster somewhere

00:22:48,559 --> 00:22:53,600
like kubernetes um so what kind of

00:22:52,240 --> 00:22:55,039
you know what kind of security or

00:22:53,600 --> 00:22:56,240
different security considerations are

00:22:55,039 --> 00:22:58,799
there for linux when

00:22:56,240 --> 00:23:01,840
scheduling it on a kubernetes mode

00:22:58,799 --> 00:23:01,840
kubernetes node

00:23:01,919 --> 00:23:06,159
supposed to jump into that one

00:23:04,960 --> 00:23:08,080
i wanted to just highlight something

00:23:06,159 --> 00:23:10,320
that's is important to note as well

00:23:08,080 --> 00:23:11,679
like from an os vendor perspective like

00:23:10,320 --> 00:23:12,480
there are two like there's the operating

00:23:11,679 --> 00:23:14,240
system

00:23:12,480 --> 00:23:16,000
beneath the line that runs underneath

00:23:14,240 --> 00:23:18,240
the containers but then

00:23:16,000 --> 00:23:19,360
like the containers are not built out of

00:23:18,240 --> 00:23:21,600
thin air like there

00:23:19,360 --> 00:23:23,440
are pieces in those containers that come

00:23:21,600 --> 00:23:24,400
from the like usually that a large part

00:23:23,440 --> 00:23:25,840
of that container will come from the

00:23:24,400 --> 00:23:28,240
operating system like

00:23:25,840 --> 00:23:28,960
and and i think that's something which

00:23:28,240 --> 00:23:31,679
um

00:23:28,960 --> 00:23:33,440
from a security perspective is the very

00:23:31,679 --> 00:23:35,520
complicated unresolved problem in

00:23:33,440 --> 00:23:36,960
transition to kubernetes because yeah

00:23:35,520 --> 00:23:38,400
even if you statically link you still

00:23:36,960 --> 00:23:39,440
had to have a build root somewhere

00:23:38,400 --> 00:23:40,960
well the thing is that statically

00:23:39,440 --> 00:23:42,400
linking already like makes everybody

00:23:40,960 --> 00:23:44,799
else look at you and saying okay

00:23:42,400 --> 00:23:45,840
uh statically link like we start doing

00:23:44,799 --> 00:23:46,880
that in the 90s yeah

00:23:45,840 --> 00:23:48,240
what happened to the components that

00:23:46,880 --> 00:23:49,039
went into that statically linked thing

00:23:48,240 --> 00:23:50,960
like

00:23:49,039 --> 00:23:52,640
okay like where do they come from and so

00:23:50,960 --> 00:23:54,799
now you've got this huge

00:23:52,640 --> 00:23:56,320
um providence manifestation problem that

00:23:54,799 --> 00:23:57,520
the distribution is very neatly solved

00:23:56,320 --> 00:23:58,880
for you because we gpg signed

00:23:57,520 --> 00:24:01,279
every single binary that comes out there

00:23:58,880 --> 00:24:03,919
and so you know this binary was built by

00:24:01,279 --> 00:24:05,120
a robot inside a system that in fact i i

00:24:03,919 --> 00:24:06,960
was part of building a canonical you

00:24:05,120 --> 00:24:08,799
know that robot built that binary

00:24:06,960 --> 00:24:10,080
um you can go to canonical and say that

00:24:08,799 --> 00:24:12,080
binary there

00:24:10,080 --> 00:24:13,520
has it was compromised and so you have

00:24:12,080 --> 00:24:16,159
that perfect chain

00:24:13,520 --> 00:24:16,960
inside a single um distributor no no

00:24:16,159 --> 00:24:19,360
throw that away

00:24:16,960 --> 00:24:20,960
and just now you're saying guys do

00:24:19,360 --> 00:24:22,559
whatever you want you know go to

00:24:20,960 --> 00:24:24,880
get github find this thing like get

00:24:22,559 --> 00:24:27,520
close get clone away or even worse like

00:24:24,880 --> 00:24:28,159
npm install your way into this mess and

00:24:27,520 --> 00:24:29,840
now like

00:24:28,159 --> 00:24:31,520
like that is the actual security problem

00:24:29,840 --> 00:24:32,240
that distributions ironically are very

00:24:31,520 --> 00:24:33,919
well

00:24:32,240 --> 00:24:35,440
i'm set up to solve because again the

00:24:33,919 --> 00:24:37,440
dna of this distribution is

00:24:35,440 --> 00:24:39,200
to serve as a bridge between the madness

00:24:37,440 --> 00:24:41,360
which is upstream and the predictability

00:24:39,200 --> 00:24:42,880
which end users expect right

00:24:41,360 --> 00:24:45,279
and i use npm as an example because it's

00:24:42,880 --> 00:24:47,360
like the the lsd

00:24:45,279 --> 00:24:48,480
edition of that madness right so there

00:24:47,360 --> 00:24:50,000
was there was a great tweet here

00:24:48,480 --> 00:24:52,400
recently of like you know this

00:24:50,000 --> 00:24:53,600
that way air it's okay ignore it and

00:24:52,400 --> 00:24:55,120
wait you know

00:24:53,600 --> 00:24:56,799
introduce this many new packages this

00:24:55,120 --> 00:24:58,000
many vulnerabilities please donate to

00:24:56,799 --> 00:24:59,200
the you know beer

00:24:58,000 --> 00:25:00,960
the first ten minutes of anybody using

00:24:59,200 --> 00:25:01,840
npm like if you're like for like an old

00:25:00,960 --> 00:25:03,679
school person like

00:25:01,840 --> 00:25:05,760
what the hell did i just do you know

00:25:03,679 --> 00:25:06,960
like this thing imported this dependency

00:25:05,760 --> 00:25:08,799
which is like 10 lines

00:25:06,960 --> 00:25:10,559
what the hell is that so anyway but the

00:25:08,799 --> 00:25:12,559
point is that that madness

00:25:10,559 --> 00:25:14,240
has to be resolved some way right

00:25:12,559 --> 00:25:15,840
they're gonna like somebody is going to

00:25:14,240 --> 00:25:16,960
have to give these people that are

00:25:15,840 --> 00:25:19,120
developing on the side

00:25:16,960 --> 00:25:20,799
a set of components that they can use

00:25:19,120 --> 00:25:22,159
safely you're saying statically linking

00:25:20,799 --> 00:25:24,720
that's cool but somebody has to be able

00:25:22,159 --> 00:25:25,919
to press a button in ci cd and say hey

00:25:24,720 --> 00:25:28,000
bring in the new versions of these

00:25:25,919 --> 00:25:29,919
things oh but they can't be api

00:25:28,000 --> 00:25:31,360
breaking otherwise the app breaks you

00:25:29,919 --> 00:25:32,799
know like this this sort of things which

00:25:31,360 --> 00:25:34,480
distributions are very

00:25:32,799 --> 00:25:36,000
known for like we don't break the

00:25:34,480 --> 00:25:38,640
applications if i break your app

00:25:36,000 --> 00:25:40,640
i apologize file a bug i'll revert back

00:25:38,640 --> 00:25:42,159
that that breaking change in the api

00:25:40,640 --> 00:25:43,679
because i keep stability for

00:25:42,159 --> 00:25:45,760
however long i promise to maintain

00:25:43,679 --> 00:25:47,120
distribution like that has to be

00:25:45,760 --> 00:25:48,799
yeah there's kind of an academic channel

00:25:47,120 --> 00:25:50,000
it's a new world like otherwise like

00:25:48,799 --> 00:25:51,840
otherwise it's like it is proper

00:25:50,000 --> 00:25:53,360
dystopia right otherwise like you can't

00:25:51,840 --> 00:25:54,720
use anything i can't use my phone

00:25:53,360 --> 00:25:57,120
i can't use the computer because

00:25:54,720 --> 00:25:59,520
everything is hacked across the stack

00:25:57,120 --> 00:26:00,880
so so to continue to deal with because i

00:25:59,520 --> 00:26:01,520
want to bring up a couple points you you

00:26:00,880 --> 00:26:03,600
touch and

00:26:01,520 --> 00:26:05,360
we only have like five minutes so get it

00:26:03,600 --> 00:26:05,919
oh shoot well no but i think this is

00:26:05,360 --> 00:26:07,600
really

00:26:05,919 --> 00:26:10,480
really uh well whatever it's interesting

00:26:07,600 --> 00:26:13,679
because i'm saying it but um

00:26:10,480 --> 00:26:14,799
yeah you're biased yes see the um but no

00:26:13,679 --> 00:26:15,520
if you look because i you know before i

00:26:14,799 --> 00:26:16,720
was saying this like

00:26:15,520 --> 00:26:17,919
i think the role of the linux

00:26:16,720 --> 00:26:19,360
distribution is completely changing

00:26:17,919 --> 00:26:21,440
because all of those assets like let's

00:26:19,360 --> 00:26:22,080
say like your rpms your debian packages

00:26:21,440 --> 00:26:23,440
or whatever

00:26:22,080 --> 00:26:24,960
like those are all valuable and they're

00:26:23,440 --> 00:26:25,919
well curated that's an extremely

00:26:24,960 --> 00:26:27,760
difficult thing

00:26:25,919 --> 00:26:29,679
but what's different what's happening

00:26:27,760 --> 00:26:31,679
now is like the kind of traditional the

00:26:29,679 --> 00:26:33,760
way that things were before is you would

00:26:31,679 --> 00:26:35,679
install this generic thing and then you

00:26:33,760 --> 00:26:37,120
would kind of mutate it there into what

00:26:35,679 --> 00:26:38,880
it was going to be

00:26:37,120 --> 00:26:40,400
um you know that's the way puppet chef

00:26:38,880 --> 00:26:41,279
configuration management salt all those

00:26:40,400 --> 00:26:43,840
things work you know

00:26:41,279 --> 00:26:45,440
ansible is it's kind of you form it you

00:26:43,840 --> 00:26:46,640
know it's like this clay that you form

00:26:45,440 --> 00:26:47,520
into what it's supposed to be once it

00:26:46,640 --> 00:26:49,919
gets there

00:26:47,520 --> 00:26:51,919
and we're shifting all of that earlier

00:26:49,919 --> 00:26:52,640
into the pipeline and so it's now

00:26:51,919 --> 00:26:54,720
basically

00:26:52,640 --> 00:26:56,799
i want to take all of those assets those

00:26:54,720 --> 00:26:58,400
rpms or debian packages

00:26:56,799 --> 00:27:00,159
and i want to do one of two things i

00:26:58,400 --> 00:27:01,600
want to build an os image which then

00:27:00,159 --> 00:27:02,960
turns into an immutable container

00:27:01,600 --> 00:27:04,720
optimized linux

00:27:02,960 --> 00:27:06,880
or i want to build a docker packet or

00:27:04,720 --> 00:27:08,400
docker docker image

00:27:06,880 --> 00:27:10,559
um which then becomes your container

00:27:08,400 --> 00:27:12,559
runtime so it's like we're moving this

00:27:10,559 --> 00:27:13,120
kind of mutability and assembling of all

00:27:12,559 --> 00:27:15,120
this stuff

00:27:13,120 --> 00:27:17,360
earlier in the stage to produce these

00:27:15,120 --> 00:27:18,000
like reusable assets that we can more

00:27:17,360 --> 00:27:20,399
easily

00:27:18,000 --> 00:27:22,480
track and you look at the big advantages

00:27:20,399 --> 00:27:24,000
of containers in general a lot of it has

00:27:22,480 --> 00:27:24,720
to do with distribution management

00:27:24,000 --> 00:27:26,080
pipeline

00:27:24,720 --> 00:27:28,000
that's where you get a lot of the value

00:27:26,080 --> 00:27:29,520
out of them and so it's like by shifting

00:27:28,000 --> 00:27:30,640
everything kind of earlier and more

00:27:29,520 --> 00:27:33,120
predictable

00:27:30,640 --> 00:27:34,320
um you know it completely changes

00:27:33,120 --> 00:27:35,840
changes the game so it's like

00:27:34,320 --> 00:27:37,520
those assets are still useful i don't

00:27:35,840 --> 00:27:38,960
think they're gonna go anywhere but

00:27:37,520 --> 00:27:41,440
it's just presented all differently but

00:27:38,960 --> 00:27:42,799
people have to this sounds like the

00:27:41,440 --> 00:27:44,799
like that sounds like the benefit of

00:27:42,799 --> 00:27:46,080
when people would would uh solve things

00:27:44,799 --> 00:27:48,240
at compile time versus

00:27:46,080 --> 00:27:50,480
runtime like yeah yeah exactly waiting

00:27:48,240 --> 00:27:51,679
for it to some python or ruby library to

00:27:50,480 --> 00:27:54,159
explode on the edge

00:27:51,679 --> 00:27:54,880
and the lead into security is that like

00:27:54,159 --> 00:27:57,200
i don't think

00:27:54,880 --> 00:27:58,399
necessarily the security requirements of

00:27:57,200 --> 00:28:01,520
containers change

00:27:58,399 --> 00:28:03,520
but security and the models that we have

00:28:01,520 --> 00:28:05,039
are changing such that we can make it

00:28:03,520 --> 00:28:06,000
more secure because you know we're

00:28:05,039 --> 00:28:08,000
building like

00:28:06,000 --> 00:28:09,120
we're we're creating immutable assets

00:28:08,000 --> 00:28:11,200
that we're deploying so we can

00:28:09,120 --> 00:28:14,000
cryptographically ensure that the

00:28:11,200 --> 00:28:15,840
right thing is is put there so it's like

00:28:14,000 --> 00:28:18,480
what i'm seeing with containers and and

00:28:15,840 --> 00:28:20,640
stuff and all this kind of immutability

00:28:18,480 --> 00:28:21,919
is that we can greatly increase the

00:28:20,640 --> 00:28:24,000
level of security

00:28:21,919 --> 00:28:26,559
because we can you know like secure boot

00:28:24,000 --> 00:28:27,039
fully verify things dm verity verify the

00:28:26,559 --> 00:28:29,279
os

00:28:27,039 --> 00:28:30,480
if it's mutable the whole stack we can

00:28:29,279 --> 00:28:32,559
basically

00:28:30,480 --> 00:28:34,159
can verify everything that's going on

00:28:32,559 --> 00:28:35,520
because you know

00:28:34,159 --> 00:28:38,000
we're changing the way that we're

00:28:35,520 --> 00:28:40,159
packaging and delivering linux as an os

00:28:38,000 --> 00:28:41,840
and the software that's running on it i

00:28:40,159 --> 00:28:44,080
like that a lot

00:28:41,840 --> 00:28:46,720
tasha dusty natasha what do you have

00:28:44,080 --> 00:28:48,640
anything i'll say on that

00:28:46,720 --> 00:28:50,159
um you know it just kind of occurs to me

00:28:48,640 --> 00:28:51,039
that like the one thing we're really not

00:28:50,159 --> 00:28:54,799
talking about

00:28:51,039 --> 00:28:58,000
is uh how some of these

00:28:54,799 --> 00:29:00,000
uh cloud-focused uh

00:28:58,000 --> 00:29:01,279
forays into linux really are under

00:29:00,000 --> 00:29:03,919
investing in the

00:29:01,279 --> 00:29:05,039
wide community of people who spend a lot

00:29:03,919 --> 00:29:06,799
of time

00:29:05,039 --> 00:29:08,080
maintaining all of the various packages

00:29:06,799 --> 00:29:08,880
and capabilities that they're all

00:29:08,080 --> 00:29:11,200
leveraging

00:29:08,880 --> 00:29:12,000
um and you know i just start thinking

00:29:11,200 --> 00:29:14,320
about like

00:29:12,000 --> 00:29:15,600
is amazon donating to like open ssl

00:29:14,320 --> 00:29:18,399
right like i mean

00:29:15,600 --> 00:29:19,120
it just kind of feels like there is like

00:29:18,399 --> 00:29:21,600
a certain

00:29:19,120 --> 00:29:22,880
um lack of understanding of how many

00:29:21,600 --> 00:29:24,880
hard-working people there are

00:29:22,880 --> 00:29:27,039
like throughout the world who are

00:29:24,880 --> 00:29:29,120
constantly updating linux and like

00:29:27,039 --> 00:29:31,200
keeping really important packages

00:29:29,120 --> 00:29:33,120
up to date that we then all consume and

00:29:31,200 --> 00:29:34,399
leverage and actually like kind of one

00:29:33,120 --> 00:29:35,760
of my pitches sometimes is like when

00:29:34,399 --> 00:29:38,080
people are worried about

00:29:35,760 --> 00:29:39,679
security and enterprises i'm like you

00:29:38,080 --> 00:29:41,039
should understand every package you're

00:29:39,679 --> 00:29:42,720
deploying and make sure that you're not

00:29:41,039 --> 00:29:45,279
relying on something that

00:29:42,720 --> 00:29:46,559
has one guy in berkeley like desperately

00:29:45,279 --> 00:29:49,279
trying to keep up to date

00:29:46,559 --> 00:29:51,039
like on his free time or even

00:29:49,279 --> 00:29:54,240
unfortunately five years ago

00:29:51,039 --> 00:29:57,279
which is what typically happens actually

00:29:54,240 --> 00:29:58,000
yeah yeah not only that the recent xkcd

00:29:57,279 --> 00:29:59,840
about you know

00:29:58,000 --> 00:30:01,679
one one person out in nebraska that

00:29:59,840 --> 00:30:04,000
broke the internet or whatever but

00:30:01,679 --> 00:30:05,440
no and and it is crazy because often

00:30:04,000 --> 00:30:06,640
when people hear that of like oh you

00:30:05,440 --> 00:30:07,919
should you should actually be familiar

00:30:06,640 --> 00:30:10,240
with the lines of code that you're

00:30:07,919 --> 00:30:13,200
importing whether it's golang or npm

00:30:10,240 --> 00:30:14,159
like and it's usually it's like the gut

00:30:13,200 --> 00:30:16,640
reaction is that it's

00:30:14,159 --> 00:30:17,440
that's such an overwhelming reaction or

00:30:16,640 --> 00:30:19,039
you know ask

00:30:17,440 --> 00:30:21,679
that people just laugh it off as a joke

00:30:19,039 --> 00:30:24,240
it's like that is the joke

00:30:21,679 --> 00:30:25,039
like you you didn't own it therefore

00:30:24,240 --> 00:30:28,159
good luck

00:30:25,039 --> 00:30:30,240
have fun dusty do you have any comments

00:30:28,159 --> 00:30:31,300
on that one

00:30:30,240 --> 00:30:34,000
uh

00:30:31,300 --> 00:30:36,159
[Laughter]

00:30:34,000 --> 00:30:37,120
not not specifically to what tasha just

00:30:36,159 --> 00:30:40,320
mentioned i mean

00:30:37,120 --> 00:30:41,760
obviously yeah i mean there are so

00:30:40,320 --> 00:30:43,919
many worked in the fedora community as

00:30:41,760 --> 00:30:44,799
well so that's not a small community

00:30:43,919 --> 00:30:48,159
either

00:30:44,799 --> 00:30:50,480
no not not at all and there's so many

00:30:48,159 --> 00:30:53,120
people that need many more things

00:30:50,480 --> 00:30:54,399
for every everything they do every day

00:30:53,120 --> 00:30:56,559
in the fedora community

00:30:54,399 --> 00:30:58,080
in the debian community in the ubuntu

00:30:56,559 --> 00:31:01,519
community in the gentoo community

00:30:58,080 --> 00:31:03,679
everybody it really is you know

00:31:01,519 --> 00:31:05,039
many different people all over the world

00:31:03,679 --> 00:31:06,159
many different companies all over the

00:31:05,039 --> 00:31:08,480
world coming together

00:31:06,159 --> 00:31:10,000
and you know i think i think some of the

00:31:08,480 --> 00:31:12,159
cloud providers are getting to a point

00:31:10,000 --> 00:31:14,960
where they they realize that

00:31:12,159 --> 00:31:15,519
if they they can't just survive forever

00:31:14,960 --> 00:31:18,000
without

00:31:15,519 --> 00:31:18,960
um heavily investing in this part that

00:31:18,000 --> 00:31:22,000
they

00:31:18,960 --> 00:31:23,919
they started to build up so yeah

00:31:22,000 --> 00:31:25,519
i i think it it's starting to get a

00:31:23,919 --> 00:31:27,679
little better but

00:31:25,519 --> 00:31:29,600
i'm just one person in the in the cloud

00:31:27,679 --> 00:31:32,640
providers um

00:31:29,600 --> 00:31:34,960
you know kind of you know it's like

00:31:32,640 --> 00:31:36,799
open source kind of started with this

00:31:34,960 --> 00:31:39,440
ideal you know it's kind of like

00:31:36,799 --> 00:31:41,039
the random person contributing and in

00:31:39,440 --> 00:31:42,320
their free time doing things

00:31:41,039 --> 00:31:44,799
and there's still a lot of that of

00:31:42,320 --> 00:31:46,000
course but it's been tricky over the

00:31:44,799 --> 00:31:48,880
years has

00:31:46,000 --> 00:31:50,960
as open sources also become the business

00:31:48,880 --> 00:31:53,679
model of so many companies

00:31:50,960 --> 00:31:55,039
is is people they're paying people to

00:31:53,679 --> 00:31:56,240
work on open source so now you have a

00:31:55,039 --> 00:31:58,240
lot of people who

00:31:56,240 --> 00:31:59,279
get paid to work on open source versus

00:31:58,240 --> 00:32:01,120
the people who

00:31:59,279 --> 00:32:02,559
kind of do it in their free time and so

00:32:01,120 --> 00:32:03,760
it's very difficult to balance that

00:32:02,559 --> 00:32:05,279
because a lot of people are making a

00:32:03,760 --> 00:32:06,559
decent living working on open source and

00:32:05,279 --> 00:32:09,919
there's some people who are

00:32:06,559 --> 00:32:11,200
kind of you know um giving up their time

00:32:09,919 --> 00:32:11,519
for free and they really you know kind

00:32:11,200 --> 00:32:12,720
of

00:32:11,519 --> 00:32:15,039
really shouldn't or maybe they don't

00:32:12,720 --> 00:32:16,720
want to and it's difficult but

00:32:15,039 --> 00:32:18,960
i i think the cloud vendors have

00:32:16,720 --> 00:32:20,320
definitely like recognized this and if

00:32:18,960 --> 00:32:22,320
you know you look at all

00:32:20,320 --> 00:32:23,919
all three like the big three of amazon

00:32:22,320 --> 00:32:25,440
microsoft and google

00:32:23,919 --> 00:32:27,039
i mean all of them over the last couple

00:32:25,440 --> 00:32:28,159
of years have had major pushes in the

00:32:27,039 --> 00:32:31,039
open source

00:32:28,159 --> 00:32:31,039
space um

00:32:32,000 --> 00:32:35,679
in a lot of ways yeah yeah so it's like

00:32:34,880 --> 00:32:37,919
you know i

00:32:35,679 --> 00:32:38,720
i think things are changing uh changing

00:32:37,919 --> 00:32:40,559
for the better

00:32:38,720 --> 00:32:42,559
but there's always there's always more i

00:32:40,559 --> 00:32:44,480
mean i see i'm i always

00:32:42,559 --> 00:32:46,240
i feel so bad for uh open source

00:32:44,480 --> 00:32:48,640
maintainers uh burning out

00:32:46,240 --> 00:32:49,360
you know you just see it so often yeah

00:32:48,640 --> 00:32:50,640
um

00:32:49,360 --> 00:32:52,399
it is one of those big things that i

00:32:50,640 --> 00:32:53,440
have to remind people often of like even

00:32:52,399 --> 00:32:55,279
if you work for somebody

00:32:53,440 --> 00:32:56,880
you know it's still your name on the

00:32:55,279 --> 00:33:00,000
line when you

00:32:56,880 --> 00:33:02,080
put up a pr or lgt or something

00:33:00,000 --> 00:33:03,279
yeah don't forget that it's still you as

00:33:02,080 --> 00:33:04,720
a human yeah yeah

00:33:03,279 --> 00:33:06,080
so it's a tricky one i mean i don't have

00:33:04,720 --> 00:33:06,799
any answers or anything but yeah it's

00:33:06,080 --> 00:33:10,399
something for good

00:33:06,799 --> 00:33:12,080
mindfulness well in wrapping up i mean

00:33:10,399 --> 00:33:13,519
it's it's pretty interesting i think

00:33:12,080 --> 00:33:15,279
we've covered how

00:33:13,519 --> 00:33:17,440
the the operating system whether it's

00:33:15,279 --> 00:33:19,279
general purpose or container optimized

00:33:17,440 --> 00:33:21,519
is still kind of the glue between

00:33:19,279 --> 00:33:24,159
different people's expectations you know

00:33:21,519 --> 00:33:25,760
uh kind of working with the upstream um

00:33:24,159 --> 00:33:26,960
having their own cadences

00:33:25,760 --> 00:33:28,960
working with the different companies

00:33:26,960 --> 00:33:30,960
involved and then for

00:33:28,960 --> 00:33:32,399
by and large you know we're reusing a

00:33:30,960 --> 00:33:34,159
lot of these uh

00:33:32,399 --> 00:33:36,480
the work done and the kind of like

00:33:34,159 --> 00:33:37,840
infrastructure and methodology

00:33:36,480 --> 00:33:41,600
uh whether it is for kind of an

00:33:37,840 --> 00:33:43,200
operations or an application person's uh

00:33:41,600 --> 00:33:44,720
piece of it where you whether you own

00:33:43,200 --> 00:33:46,960
the whole stack yourself or you're

00:33:44,720 --> 00:33:49,279
wanting to pay somebody for it

00:33:46,960 --> 00:33:50,720
and in either one of those cases most

00:33:49,279 --> 00:33:52,640
people are wanting to push

00:33:50,720 --> 00:33:55,039
for something that's more supportable

00:33:52,640 --> 00:33:57,120
something that's more predictable

00:33:55,039 --> 00:33:58,399
so i think that's probably why anybody

00:33:57,120 --> 00:33:59,120
could argue the case for both general

00:33:58,399 --> 00:34:00,559
purpose or

00:33:59,120 --> 00:34:01,919
something container optimized is because

00:34:00,559 --> 00:34:04,640
they want it to be supportable for their

00:34:01,919 --> 00:34:04,640
use case so

00:34:05,519 --> 00:34:09,520
tasha darren christian dusty i

00:34:08,320 --> 00:34:12,879
appreciate you all

00:34:09,520 --> 00:34:13,919
for your time and um if there's nothing

00:34:12,879 --> 00:34:19,119
else then we can probably

00:34:13,919 --> 00:34:19,119

YouTube URL: https://www.youtube.com/watch?v=BDzLA8ybE30


