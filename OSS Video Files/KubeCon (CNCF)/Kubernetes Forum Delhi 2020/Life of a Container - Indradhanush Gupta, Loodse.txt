Title: Life of a Container - Indradhanush Gupta, Loodse
Publication date: 2020-02-27
Playlist: Kubernetes Forum Delhi 2020
Description: 
	Don't miss KubeCon + CloudNativeCon 2020 events in Amsterdam March 30 - April 2, Shanghai July 28-30 and Boston November 17-20! The conference features presentations from developers and end users of Kubernetes, Prometheus, Envoy, and all of the other CNCF-hosted projects - Learn more at https://kubecon.io

Life of a Container - Indradhanush Gupta, Loodse 

What if I told you that there's no such thing as a container? Surprised? The first time I heard this I was taken aback as well. And when I started digging into the internals I found out that containers are nothing but a nicer UX for Linux namespaces and cgroups. If I wanted to run three instances of a web server serving traffic on port 80, do I need three separate machines? If you’re thinking yes, as no two processes can listen on the same port simultaneously, then the correct answer is no. Network namespaces make it possible to run them all under the same machine. And each of them can listen on the machine’s public network interface. In this talk you will find out what constitutes a container. The system calls invoked when a container is started, the resources used and their relation to the host OS and finally the teardown process when a container is deleted.  

https://sched.co/YWJH
Captions: 
	                              okay I'm very excited to be here thank                               you for coming to my talk today I'm                               going to take you on this short journey                               of life of a container and my name is in                               resinous kata and I'm a programmer at                               Luther and I've been programming                               professionally for about six years now                               and I've been using containers for                               nearly the entirety of the time and I                                asked around very early into my                                programming career that what really is a                                container and the initial response was                                something along the lines of oh it's                                very similar to a virtual machine but                                only that it does not have its own                                kernel and it shares the hosts kernel                                and that felt very magical to me and                                this quote from Sir Arthur Charles                                Clarke and very relevant that any                                sufficiently advanced technology is                                indistinguishable from magic                                containers felt like magic to me and as                                a result I see myself as someone who                                likes to take things which look very                                complicated at the first or second                                glance and try to find a way to see that                                is there a way to find and represent it                                at something much simpler right and that                                begs the question that what is a                                container well spoiler alert there is no                                such thing as a container yeah there is                                no such thing as a container and that's                                pretty much the end of the talk so                                that's probably the shortest talk here                                so thank you for coming to my talk I'll                                be hanging outside for questions                                okay I don't know if you bought it off                                your if you if you plat for that I thank                                you for that so that was just kidding                                right                                and so seriously what really is a                                container and when we looked around it's                                made of two unique concepts called                                namespaces and C groups are control                                groups we look into each of these what                                these concepts are but before that let's                                just try to understand how our processes                                created in a Linux box or a UNIX box and                                they start you will have something like                                a parent process this parent process can                                be your shell terminal or your                                application which is spawning new                                processes and the system calls to create                                a new process is called a fork when you                                call make a fork all two things happen                                number one a child process comes up                                number two the parent process gets a                                child PID or a child process identifier                                now this is very important so that the                                parent process can keep track of its                                children literally it doesn't want to                                lose all its children and as time goes                                on the child process goes ahead with its                                normal execution and gets terminated and                                so does the parent so now that we                                understand what a parent process and how                                a child process interact with each other                                or how the control or the parent process                                control this child process let's try                                understand what a namespace is but quick                                plug I wrote a detailed blog post few                                years back on how the fork works exactly                                so if there's a much detail its                                explanation there if you're interested                                feel free to check this link out and in                                the meantime we'll come back to what                                these faces are so namespaces are an                                isolation primitive for resources and                                namespaces are isolating seven kinds of                                resources                                I will not go ahead and explain each of                                them but to give you an idea of what                                they do is if you have a network                                namespace it helps you isolate your                                network resources so in a way it                                simulates two different computers with                                two different network interfaces in the                                same computer and how does it do that                                so let's go ahead                                quickly go into this demo so if you will                                please pray to the Democrats for me what                                I have on my terminal here is two                                independent shell processes this command                                gives the process ID of the shell                                processes that I am running and to start                                a new process what I will do is I will                                run the unshare command it unshared the                                network it ensures the namespace from                                the host namespace there's something I                                 forgot to mention is that when our                                 system starts up it has all the default                                 hostname spaces already set up for you                                 so right now both the shell processes                                 are running on the exact same namespaces                                 but you do not have to take my word for                                 it you can just verify it right so                                 before that let's just quickly take a                                 look at what are the processes running                                 what are the namespaces of these                                 processes so we'll take a look inside                                 the proc directory which is a directory                                 that keep track of all the processes                                 currently running on your system and to                                 do that we do this and this lists down                                 all the independent processes like C                                 Group IPC e mount net PID etc etc and it                                 points to something that looks like a                                 weird number string thing this thing is                                 your namespace ID and this is unique for                                 each independent namespace but if we do                                 the same command in this shell that I                                 have in the lower split we will see that                                 it's the same for examples for C group                                 it's for                                                              right so quickly let's just examine the                                 network namespace because that's the                                 namespace we are concerned about                                 so right now they're running in the same                                 network namespace which is the host                                 network namespace I will run the unshare                                 command with the flag / - n and that                                 will create a new network namespace and                                 once again don't take my word for it                                 let's just quickly do that see there's a                                 different number there right right now                                 right double                                                     namespace now there's a command called                                 IP net NS list that lists down all the                                 network namespaces on your system but it                                 doesn't show any net of me spaces right                                 now we just created one right we see so                                 what is happening here like what what                                 what's going on like if there's an uni                                 network need space and it does show up                                 that's weird right now the trick to this                                 is the IP command looks for namespaces                                 in a certain directory and to do that                                 the directory would be var net NS let's                                 create a directory called child now                                 let's run the command again there's an                                 error demo is not failing yet it says                                 that peer net NS reference is invalid                                 we've created directory so the IP                                 command can find the directory but it                                 cannot find a process which is using                                 which is mapped onto to use the                                 namespace so to do that we will let's                                 also make this easier to understand                                 this is just for the demos just usually                                 don't use it just easier to keep track                                 of so what we want to do is we want to                                 mount bind mount the oh sorry                                 that would be net so that's the file                                 that this process is using to map its                                 networking space it points to a specific                                 net namespace ID if you remember that                                 weird c group slash ID think that's what                                 this is right so we will mount this to                                 the not that child directory and now                                 magically it finds the namespace and                                 there is no error now there's two                                 different namespaces but what does that                                 mean if in my host namespace if I pinged                                 this this would work right you expect                                 this to work I mean this is the fun one                                 thing you always expect to work but                                 doesn't network is unreachable what I                                 mean what's going on so let's look at                                 what are the network interfaces there's                                 just a single loopback interface and if                                 you look closely the state is down and                                 it's not does not have an address                                 associated so this namespace does not                                 know where                                                          would have to add an address to this                                 interface and only then it knows okay                                 where is this inter interface and how to                                 reach it right and in this demo what we                                 are going to do is we are going to make                                 these two namespaces the host namespace                                 and the child namespace talk to each                                 other and to do that the first thing we                                 are going to do is we will create a pair                                 of virtual Ethernet devices there's no                                 real network interface card just a pair                                 of virtual Ethernet devices and we'll do                                 this on the host network namespace so                                 let's just quickly do that we it so we                                 want to create a device called V at                                      type vs which is virtual Ethernet and                                 its peers name which is the other side                                 of the tunnel if you if Soviet is called                                 vh                                                                       the devices we just added we have two                                 virtual Ethernet devices and if we go                                 back and do the same thing here we don't                                 really have it because we added this new                                 interface in the hostname space now we                                 want to put this interface inside the                                 child namespace so how do we do that                                 to do that we are going to set this it's                                 one device into the net NS called child                                 pretty simple IP link set V at one set                                 this device inside the specific                                 namespace and if you look for it again                                 now we have both the independent                                 interfaces wait hold on a second                                 yeah okay that makes it easier here                                 again they don't have any address                                 associate associated with it                                 they do not have any this state is also                                 down so you have just it's if you think                                 about the computer's you've barely just                                 plugged in your network interface card                                 and it's just there you haven't yet                                 configured it so let's quickly go ahead                                 and configure it we are going to add an                                 address as the first thing to device V                                 Earth ropes yet one and we're going to                                 give it the address                                                   and we'll do the same command on the                                 host knit network namespace and this                                 time given the address                                                  can verify it if you looked at there you                                 go now we have an address and it's                                 identified by                                                          on the child network namespace as well                                 it has an address tender too but still                                 not up so there's just one last thing to                                 do which is set this one is pretty                                 simple up                                 oh okay this one is called v                                             the hardest thing folks and let's just                                 ping the other side of the tunnel and we                                 are able to bring it and from the other                                 side so both ends are now sending                                 packets to each other and if you try to                                 ping to something like                                                exist there's nothing at the end of it                                 and your computer's gonna make like I I                                 don't know how to find that so coming                                 back to the slides what we just did can                                 be very well explained by this image                                 it's just two children literally two                                 children talking over each other with                                 the string telephone and you can think                                 of the children                                 as the network namespaces and the ten                                 canisters that they're using are the                                 virtual Ethernet devices so if the demo                                 was too hard to absorb I get it                                 it's a lot to get it took me quite some                                 time maybe I hope this gives a better                                 understanding of what we just did with                                 two-night name networking spaces in                                 technical terms we simulated two                                 different devices on the same computer                                 so now you can run two different                                 processes and both the different network                                 news faces and they can talk to each                                 other as if there were two different                                 computers so if you're testing I don't                                 like something like a client-server                                 thing and you want them to have                                 different addresses you don't need to go                                 and like provision a new cloud machine                                 the cloud instance you can just create                                 an unit opening space test it out moving                                 on to see groups while network                                 namespaces helps you isolate the                                 resources what see groups does is I is                                 control how much of those resources you                                 are going to allocate which is for                                 example CPU our memory and there are few                                 other resources but the easiest to                                 explain our CPU and memory so once again                                 let us just quickly go onto the demo and                                 see what's going on here                                 in this case I will create a new host                                 namespace which means I can have a have                                 my own host name so I will not bother                                 setting it right now                                 it's just a new namespace and the C                                 groups exist in the Sisyphus directory                                 so you can look at what are the                                 available C groups on your system                                 usually by default they're mounted on                                 your system if they are not you'd have                                 to do some additional work but assuming                                 that they're already mounted you know                                 that okay you have things like CPU you                                 have things like memory and to create a                                 new C group it's as simple as creating a                                 new directory stay with me so I want to                                 create a new C group for memory so I                                 will create a new directory under the                                 memory path and let's say let's just                                 call it demo right and we just created                                 it and if we look inside this directory                                 there's a host of fights I did not                                 create it right I did not create these                                 files it got created on its own so what                                 C group does is the moment you create a                                 new directory under whatever controller                                 memory memory controller you want to                                 create what it did is it creates all the                                 necessary infrastructure all the                                 necessary files that you need and these                                 files are going to tell you everything                                 about the CPU about the RC group so                                 let's take a look at for example limit                                 in bytes that's bytes that's a lot of                                 bytes it's probably a gigabyte or                                 something like that and to test this out                                 what we can do now is change this to a                                 smaller number let's say about                                         that's about                                                            bytes if my math is correct which really                                 is and we're going to write this and                                 let's just verify that again it rounds                                 it down honestly I don't know why I                                 think that has something to do with the                                 memory architecture so it runs down to                                 whatever the latest memory addresses                                 without like you can't take half a                                 memory address so it allocates something                                 about                                                                    that divided by                                 so that's kilobytes times megabytes less                                 than                                                                    let's try running a command like I don't                                 know wikipedia.org it failed because I                                 don't have internet right now but so it                                 just worked in a way if I had internet                                 this would have worked right but how do                                 I get this namespace or get this process                                 to be limited by the C group I just                                 created the where on that is there is                                 yet another file you'll Alexis all files                                 I had a difficult time understanding                                 that previously but it gets better now                                 and there's this file and the contents                                 of this file is empty you write the                                 process ID of the process that you want                                 to be limited by the C group and your                                 job start so let's just echo the process                                 ID into this and for your verification                                 that's six four one six four four six                                 and you have to process the process IDs                                 right now one of them is the process ID                                 we entered the other is the cat command                                 we ran so by default inside a namespace                                 if it's already part of C group any new                                 child processes will by default get                                 added on to the C group so next time if                                 you run this command again six four two                                 one two won't be there in this two one                                 three so moving on now that we've added                                 the process ID ID into this C group I                                 would expect this command to fail please                                 feel killed right what just happened                                 like what just happened like why would                                 it kill it because we've told the C                                 group that no process running inside                                 this should be able to use more than                                   MB approximately and though that was not                                 planned okay                                 I think yeah so and as a result the                                 operating system does not allow that                                 process to use more than                                             just kills that process like wait there                                 you're not allowed more memory than this                                 or more cpu than this and just stop get                                 out of here and game of                                 right and so now if you look at                                 containers if you use docker Kocher how                                 many of you use docker I suppose pretty                                 how many of you use docker how many of                                 you have tried to like limit memory and                                 limit CPUs on a docker container a few                                 of you so what it's doing behind the                                 scenes not this was it's doing behind                                 the scenes is it's using C groups when                                 you use something like like you want to                                 expose a new port docker container is                                 running in a new network namespace                                 that's what is happening the first demo                                 of the day that's what is happening so                                 it's really really not that complicated                                 implementing it is of course challenging                                 which is why we need things like                                 container runtimes and that is why                                 there's there's a lot of things and                                 there are few more things which I do not                                 have enough time to demo but I will talk                                 about them which are capabilities and                                 second capabilities helps you to limit                                 your route privileges now sometimes you                                 might want to run an application with a                                 privileged with some privileged extra                                 prep privileges right and if you run it                                 as route the problem there is the moment                                 you're running are processes route it                                 has all the power of wrecking have                                 operator system maybe accidentally maybe                                 not accidentally and you don't want that                                 what you want is you want to limit                                 they're there whatever they can do bad                                 that limit it like you need only network                                 operations that's the only capability                                 you are going to have you don't need to                                 create new processes you don't need to                                 manage other processes you're not going                                 to have that so that lets you do with                                 Linux lets you do with capabilities and                                 cap net admin here as one of the example                                 you give this capability it gets the                                 ability to manage your network                                 interfaces and other network related                                 operations and the second one is second                                 or secure computing it limits the use of                                 system calls itself so for example                                 unshared kill or even something like CPU                                 there's something okay I forget but                                 unsure and Kayla look one of the                                 examples so you cannot use this system                                 calls so you can block certain system                                 calls to me                                 your environment more secure and docker                                 or other container and times they have                                 this ability to you implements a calm                                 and in a way this helps you form an                                 isolated restricted view of what is                                 really your operating system and it's                                 not really magic at all and if you                                 remember this diagram from earlier in                                 the presentation it is admittedly                                 slightly incomplete there is one more                                 thing that the parent process does is it                                 waits for the child process to terminate                                 which is why it needs the child PID and                                 what it does is once the process has                                 terminated it makes sure the parent has                                 to make sure that the child processes                                 the resources belonging to the child                                 processes are cleared up or else if it                                 doesn't wait for this child process to                                 terminate what you then have are zombie                                 processes and then you have leaked                                 resources on your system that are not                                 being used by anyone that are not being                                 allowed to be used by anyone so in a way                                 this is a very high level diagram of                                 what a container runtime does for you it                                 starts the container runtime engine or                                 whatever the term is and it transmute                                 child processes with our containers and                                 it waits for them to terminate and then                                 it comes back and cleans up and and then                                 you are able to run containers in your                                 system and that is all so we will do a                                 quick recap might have been a bit too                                 much so you have namespaces which                                 isolates the type of resources see                                 groups which limits the resources this                                 is one of the most confusing things that                                 I had I was struggling with when I                                 started out so namespaces is the type of                                 resources see groups is the amount of                                 resources just the keyword you want to                                 look for and then you have capabilities                                 to reduce the risk of misuse of root                                 privileges and say calm is to block                                 unwanted sis cause I know wait that's                                 pretty much it about a continual runtime                                 or containers so that doesn't seem very                                 complicated anymore does it and I was                                 able to find a lot of information why                                 over the years in these links                                 the first one is namespaces in operation                                 it's an amazing series of blog posts                                 explains all the all the namespaces but                                 see                                 I think cgroups was not there when this                                 series was published but these six seven                                 articles it's like amazing                                 take your time read through it and of                                 course Julian says what even is a                                 container is like a brilliant                                 explanation and there's something you                                 just cannot get around is man pages when                                 in doubt man page and with that we come                                 to the end of this talk and this time                                 for you thank you                                 [Applause]
YouTube URL: https://www.youtube.com/watch?v=mGWWTP1Jeso


