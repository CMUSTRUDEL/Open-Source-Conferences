Title: Making Prometheus even more open - Richard Hartmann, Grafana Labs
Publication date: 2021-05-03
Playlist: PromCon Online EU 2021
Description: 
	Donâ€™t miss out! Join us at our upcoming event: KubeCon + CloudNativeCon North America 2021 in Los Angeles, CA from October 12-15. Learn more at https://kubecon.io The conference features presentations from developers and end users of Kubernetes, Prometheus, Envoy, and all of the other CNCF-hosted projects.

Making Prometheus even more open - Richard Hartmann, Grafana Labs

We are actively working to make the Prometheus community even more open and even more welcoming. We want to give an overview of where we're at with this.
Captions: 
	00:00:00,080 --> 00:00:04,160
hi and welcome to making promises even

00:00:02,480 --> 00:00:06,560
more open

00:00:04,160 --> 00:00:08,400
there is quite the pitch and there's a

00:00:06,560 --> 00:00:11,840
variety of different meanings

00:00:08,400 --> 00:00:13,920
of what open could actually mean

00:00:11,840 --> 00:00:15,519
there's lots of definitions and we'll

00:00:13,920 --> 00:00:17,600
look at all of those

00:00:15,519 --> 00:00:19,920
open source seems honestly kind of

00:00:17,600 --> 00:00:20,960
obvious and honestly kind of is

00:00:19,920 --> 00:00:23,519
in particular when it comes to

00:00:20,960 --> 00:00:26,160
prometheus um yet

00:00:23,519 --> 00:00:28,480
just as a reminder there's more and more

00:00:26,160 --> 00:00:30,720
players entering this field and

00:00:28,480 --> 00:00:32,719
keep in mind that part of what makes

00:00:30,720 --> 00:00:33,840
prometheus open is that it is open

00:00:32,719 --> 00:00:37,120
source

00:00:33,840 --> 00:00:39,040
and if you go with other vendors who

00:00:37,120 --> 00:00:42,160
might not be open source

00:00:39,040 --> 00:00:44,719
at least consider what you're doing so

00:00:42,160 --> 00:00:47,600
open features that will be the the

00:00:44,719 --> 00:00:51,360
longest part of this talk

00:00:47,600 --> 00:00:53,680
we had a lot of new stuff recently

00:00:51,360 --> 00:00:56,399
we are opening up deliberately in in a

00:00:53,680 --> 00:01:00,320
lot of ways in a lot of in a lot of

00:00:56,399 --> 00:01:01,600
feature ways um we lifted our services

00:01:00,320 --> 00:01:04,320
covering moratorium

00:01:01,600 --> 00:01:05,040
where we had a total of six new service

00:01:04,320 --> 00:01:07,119
discoveries

00:01:05,040 --> 00:01:08,880
added recently or over the last half

00:01:07,119 --> 00:01:11,119
year or so

00:01:08,880 --> 00:01:13,360
we added tls and basic off to all the

00:01:11,119 --> 00:01:13,920
things and you also have a new exporter

00:01:13,360 --> 00:01:16,240
toolkit

00:01:13,920 --> 00:01:17,600
which makes it a lot easier to create

00:01:16,240 --> 00:01:19,439
and synchronize

00:01:17,600 --> 00:01:21,439
go exporters what do i mean by

00:01:19,439 --> 00:01:24,720
synchronize well

00:01:21,439 --> 00:01:26,080
if some new functionality comes in then

00:01:24,720 --> 00:01:28,080
it's a lot easier if you have

00:01:26,080 --> 00:01:30,560
all of this and you just render it in as

00:01:28,080 --> 00:01:32,880
opposed to having to do this yourself or

00:01:30,560 --> 00:01:34,560
someone going to your repo following an

00:01:32,880 --> 00:01:36,400
issue finding a pr hey please do this

00:01:34,560 --> 00:01:38,320
and death because that's the new thing

00:01:36,400 --> 00:01:40,079
if you base your stuff or migrate your

00:01:38,320 --> 00:01:42,159
stuff on the exported toolkit you just

00:01:40,079 --> 00:01:44,880
get all of this for free

00:01:42,159 --> 00:01:46,960
we had a few changes in prankyo we have

00:01:44,880 --> 00:01:48,000
things like last overtime top k over

00:01:46,960 --> 00:01:51,040
time like

00:01:48,000 --> 00:01:54,799
if you're not a thing where you say

00:01:51,040 --> 00:01:58,560
top k3 of whatever over a week

00:01:54,799 --> 00:01:59,200
you might get 10 20 100 different values

00:01:58,560 --> 00:02:01,520
which are

00:01:59,200 --> 00:02:02,479
at some point in time part of the top

00:02:01,520 --> 00:02:05,200
three

00:02:02,479 --> 00:02:07,119
uh top k3 over time that's what it means

00:02:05,200 --> 00:02:11,280
or if it does what it says on the lid

00:02:07,119 --> 00:02:11,680
you just get the actual top three over

00:02:11,280 --> 00:02:14,959
that

00:02:11,680 --> 00:02:17,599
time range we have the add modifier

00:02:14,959 --> 00:02:18,959
where you can determine at what specific

00:02:17,599 --> 00:02:20,480
time and what alignment

00:02:18,959 --> 00:02:23,280
you would like to have your queries to

00:02:20,480 --> 00:02:25,360
have we have negative offset

00:02:23,280 --> 00:02:27,200
which are hidden behind the feature flag

00:02:25,360 --> 00:02:29,200
for the simple reason that

00:02:27,200 --> 00:02:30,879
this might break a few assumption of

00:02:29,200 --> 00:02:32,480
caching front ends

00:02:30,879 --> 00:02:34,560
and we obviously don't want to break

00:02:32,480 --> 00:02:35,840
them so it's at least for this version

00:02:34,560 --> 00:02:36,640
for this major version behind the

00:02:35,840 --> 00:02:40,319
feature flag

00:02:36,640 --> 00:02:42,239
yet super nice super useful try it out

00:02:40,319 --> 00:02:44,319
and also we have human durations which

00:02:42,239 --> 00:02:47,280
might not seem like a huge thing

00:02:44,319 --> 00:02:48,959
um and but still it's it's super nice

00:02:47,280 --> 00:02:52,000
you don't have to write this

00:02:48,959 --> 00:02:54,400
90m or anything you don't have to write

00:02:52,000 --> 00:02:56,000
90 times 60 or do the math in your head

00:02:54,400 --> 00:03:00,319
you can just write it as such

00:02:56,000 --> 00:03:02,840
and and it just works

00:03:00,319 --> 00:03:04,640
we have a remote write receiver in

00:03:02,840 --> 00:03:06,159
prometheus which is

00:03:04,640 --> 00:03:08,000
super new and something which

00:03:06,159 --> 00:03:12,159
historically we absolutely

00:03:08,000 --> 00:03:14,720
didn't do they can actually send

00:03:12,159 --> 00:03:15,519
data into a prometheus this is not meant

00:03:14,720 --> 00:03:18,000
for like

00:03:15,519 --> 00:03:20,800
super high volume production or anything

00:03:18,000 --> 00:03:23,440
but still it enables new use cases

00:03:20,800 --> 00:03:24,239
um uh like prometheus in the edge or

00:03:23,440 --> 00:03:26,640
something i

00:03:24,239 --> 00:03:28,959
forgot to write that in but still um it

00:03:26,640 --> 00:03:31,360
enables new use cases

00:03:28,959 --> 00:03:33,120
because you can just send stuff from one

00:03:31,360 --> 00:03:34,879
produces to another

00:03:33,120 --> 00:03:37,200
without having to go to any long-term

00:03:34,879 --> 00:03:39,440
storage or such

00:03:37,200 --> 00:03:42,000
one of the highlight features is

00:03:39,440 --> 00:03:45,280
exemplars

00:03:42,000 --> 00:03:48,319
it might sound small but

00:03:45,280 --> 00:03:51,280
it is actually quite large

00:03:48,319 --> 00:03:52,319
here at the end you see this trace id

00:03:51,280 --> 00:03:55,680
blah blah blah

00:03:52,319 --> 00:03:58,799
with a certain value what that means

00:03:55,680 --> 00:04:00,000
is you can actually emit information

00:03:58,799 --> 00:04:03,360
about the trace which

00:04:00,000 --> 00:04:05,200
falls into that bucket so if you want to

00:04:03,360 --> 00:04:07,519
go to a trace for

00:04:05,200 --> 00:04:09,519
low latency or whatever you can jump

00:04:07,519 --> 00:04:11,680
directly to a trace where you know what

00:04:09,519 --> 00:04:12,400
the mental context is why it is bad why

00:04:11,680 --> 00:04:14,959
it has

00:04:12,400 --> 00:04:15,680
you know it has high latency or it had

00:04:14,959 --> 00:04:18,880
this and that

00:04:15,680 --> 00:04:19,759
uh amount of of http requests so what

00:04:18,880 --> 00:04:21,600
have you

00:04:19,759 --> 00:04:23,360
doesn't matter but you can jump directly

00:04:21,600 --> 00:04:24,560
to this to this trace and you know

00:04:23,360 --> 00:04:26,479
precisely that

00:04:24,560 --> 00:04:28,160
this is interesting for a reason you

00:04:26,479 --> 00:04:29,840
have the complete context of all your

00:04:28,160 --> 00:04:32,960
labels and everything

00:04:29,840 --> 00:04:36,080
and you can just move

00:04:32,960 --> 00:04:38,080
seamlessly between between metrics and

00:04:36,080 --> 00:04:39,199
traces

00:04:38,080 --> 00:04:41,440
support for this is already in

00:04:39,199 --> 00:04:42,960
prometheus cortex thanos and grafana so

00:04:41,440 --> 00:04:46,240
you can just use it

00:04:42,960 --> 00:04:48,240
and it's just there if the trace id

00:04:46,240 --> 00:04:49,360
is somewhat familiar or that format

00:04:48,240 --> 00:04:51,600
that's no mistake

00:04:49,360 --> 00:04:53,600
of course in the openmetrics format we

00:04:51,600 --> 00:04:57,120
specified or we used the

00:04:53,600 --> 00:04:59,520
w3 tracing specs as an example

00:04:57,120 --> 00:05:01,759
we didn't specify them uh of course we

00:04:59,520 --> 00:05:04,320
didn't want to tie the standard down

00:05:01,759 --> 00:05:04,880
of course that space is relatively new

00:05:04,320 --> 00:05:07,919
so

00:05:04,880 --> 00:05:09,440
maybe things will change um maybe there

00:05:07,919 --> 00:05:10,240
will be some other best practices or

00:05:09,440 --> 00:05:13,360
something

00:05:10,240 --> 00:05:16,960
that being said it is a good standard

00:05:13,360 --> 00:05:18,320
uh what what w3 has and it's it's useful

00:05:16,960 --> 00:05:20,880
and that's precisely what we

00:05:18,320 --> 00:05:21,759
what we need so obviously we we use it

00:05:20,880 --> 00:05:24,960
as as

00:05:21,759 --> 00:05:27,360
the example in in the specs um

00:05:24,960 --> 00:05:28,000
there's also support for spends but that

00:05:27,360 --> 00:05:30,000
fit in

00:05:28,000 --> 00:05:32,720
in the line look yeah you can have spans

00:05:30,000 --> 00:05:37,120
and traces kind of obvious

00:05:32,720 --> 00:05:40,639
we have a new ui where

00:05:37,120 --> 00:05:43,600
you you now have modern react um

00:05:40,639 --> 00:05:44,720
if you want that there is a super nice

00:05:43,600 --> 00:05:46,800
editor which has

00:05:44,720 --> 00:05:48,080
auto completion and snippets and all

00:05:46,800 --> 00:05:49,520
bells and whistles and it's

00:05:48,080 --> 00:05:52,240
really really nice and you really should

00:05:49,520 --> 00:05:54,240
check it and it has a dark theme for

00:05:52,240 --> 00:05:56,960
vanity reasons but it has a dark theme

00:05:54,240 --> 00:05:59,280
so try it out

00:05:56,960 --> 00:06:00,080
all of this maybe tells you a little bit

00:05:59,280 --> 00:06:04,639
um

00:06:00,080 --> 00:06:08,080
that as historically we were

00:06:04,639 --> 00:06:09,919
quite conservative with with things

00:06:08,080 --> 00:06:11,440
we are deliberately trying to change

00:06:09,919 --> 00:06:14,720
this and that's what we mean by

00:06:11,440 --> 00:06:17,199
by this aspect of open um

00:06:14,720 --> 00:06:18,800
because historically even even features

00:06:17,199 --> 00:06:21,039
which were marked as experimental

00:06:18,800 --> 00:06:22,479
we basically treated them as stable

00:06:21,039 --> 00:06:24,560
which is on the one hand

00:06:22,479 --> 00:06:26,160
quite nice for for someone relying on

00:06:24,560 --> 00:06:28,639
this behavior

00:06:26,160 --> 00:06:30,479
on the other hand it ties us and it ties

00:06:28,639 --> 00:06:33,199
the community down and that's

00:06:30,479 --> 00:06:34,720
not good long term so we are actively

00:06:33,199 --> 00:06:36,960
breaking this up

00:06:34,720 --> 00:06:38,720
a lot of our old assumptions have been

00:06:36,960 --> 00:06:39,280
revisited and we are enabling more use

00:06:38,720 --> 00:06:42,080
cases

00:06:39,280 --> 00:06:43,759
like an old assumption would be we had

00:06:42,080 --> 00:06:45,280
that moratorium and service discovery

00:06:43,759 --> 00:06:47,199
and we had certain

00:06:45,280 --> 00:06:49,440
certain thoughts around what we would

00:06:47,199 --> 00:06:51,199
need to to see or want to see before we

00:06:49,440 --> 00:06:54,479
take more service recovery

00:06:51,199 --> 00:06:56,800
integrations in but

00:06:54,479 --> 00:06:58,960
we just dropped them and started taking

00:06:56,800 --> 00:07:03,120
those

00:06:58,960 --> 00:07:05,680
use cases more use cases there are

00:07:03,120 --> 00:07:07,120
with the aging thing for example there

00:07:05,680 --> 00:07:10,479
are use cases

00:07:07,120 --> 00:07:13,599
which are not recommended by permissions

00:07:10,479 --> 00:07:14,560
clean and simple like for me this best

00:07:13,599 --> 00:07:16,800
practice

00:07:14,560 --> 00:07:19,840
you should have your metrics endpoint on

00:07:16,800 --> 00:07:22,560
a distinct port per service

00:07:19,840 --> 00:07:24,560
that doesn't really match how a lot of

00:07:22,560 --> 00:07:26,720
enterprises work with their stuff

00:07:24,560 --> 00:07:28,400
of course their security teams tend to

00:07:26,720 --> 00:07:30,720
not like

00:07:28,400 --> 00:07:32,880
a team coming to him was like yeah okay

00:07:30,720 --> 00:07:34,880
we might have 30 different ports maybe

00:07:32,880 --> 00:07:37,919
100 different ports they're not even

00:07:34,880 --> 00:07:38,639
truly continuous and they might be open

00:07:37,919 --> 00:07:40,960
or they might

00:07:38,639 --> 00:07:42,800
not and there's no way for you to tell

00:07:40,960 --> 00:07:45,199
they tend not to like this

00:07:42,800 --> 00:07:46,479
um having everything behind one single

00:07:45,199 --> 00:07:48,240
port

00:07:46,479 --> 00:07:49,680
makes a lot easier in enterprise

00:07:48,240 --> 00:07:51,520
scenarios and such

00:07:49,680 --> 00:07:53,360
but this is an anti-pattern when it

00:07:51,520 --> 00:07:56,000
comes to pure prometheus

00:07:53,360 --> 00:07:57,039
yet it is a valid use case for for

00:07:56,000 --> 00:08:00,000
certain

00:07:57,039 --> 00:08:01,919
assumptions for certain design tradeoffs

00:08:00,000 --> 00:08:03,440
so we are trying to enable those use

00:08:01,919 --> 00:08:06,560
cases in a very

00:08:03,440 --> 00:08:06,960
deliberate and careful manner yet enable

00:08:06,560 --> 00:08:10,639
them

00:08:06,960 --> 00:08:14,960
chris i would much rather talk about

00:08:10,639 --> 00:08:16,639
how you can structure this how you can

00:08:14,960 --> 00:08:18,240
put everything behind one port and then

00:08:16,639 --> 00:08:21,680
you have your your sub string

00:08:18,240 --> 00:08:23,759
or your path there you say snmp exporter

00:08:21,680 --> 00:08:26,560
slash metrics or what have you

00:08:23,759 --> 00:08:28,639
then everyone baking their own and and

00:08:26,560 --> 00:08:31,120
people basically um

00:08:28,639 --> 00:08:33,599
yeah not knowing what what they should

00:08:31,120 --> 00:08:36,479
be doing as a kind of standard

00:08:33,599 --> 00:08:37,360
so opening up to those non-recommended

00:08:36,479 --> 00:08:40,560
use cases

00:08:37,360 --> 00:08:41,680
um is is a deliberate goal agents are

00:08:40,560 --> 00:08:44,000
another great example

00:08:41,680 --> 00:08:45,839
uh agents themselves because agents are

00:08:44,000 --> 00:08:47,600
an anti-pattern in the prometheus word

00:08:45,839 --> 00:08:50,720
like again pure prometheus

00:08:47,600 --> 00:08:53,279
yet um and for good reason because

00:08:50,720 --> 00:08:54,080
you wouldn't want to you wouldn't want

00:08:53,279 --> 00:08:57,440
to tie

00:08:54,080 --> 00:08:58,800
your your node exporter to your mysql

00:08:57,440 --> 00:09:00,640
exporter version

00:08:58,800 --> 00:09:02,880
of course you might need to upgrade one

00:09:00,640 --> 00:09:05,040
or the other independently of the other

00:09:02,880 --> 00:09:06,560
um yet deploying one single binary

00:09:05,040 --> 00:09:08,320
ideally already with package

00:09:06,560 --> 00:09:11,360
configuration everything

00:09:08,320 --> 00:09:14,720
is a plus four for that kind of model

00:09:11,360 --> 00:09:18,560
so again trying to to to carefully and

00:09:14,720 --> 00:09:20,240
deliberately enable this kind of thing

00:09:18,560 --> 00:09:22,000
we are also trying to make our code more

00:09:20,240 --> 00:09:24,320
modular and easy to reuse which

00:09:22,000 --> 00:09:26,399
is honestly not a direct benefit to us

00:09:24,320 --> 00:09:28,640
like not for prometheus team

00:09:26,399 --> 00:09:31,279
yet there are projects which which would

00:09:28,640 --> 00:09:32,959
like to take bits and pieces

00:09:31,279 --> 00:09:35,040
and just reuse them make them part of

00:09:32,959 --> 00:09:37,120
their data pipelines or what have you

00:09:35,040 --> 00:09:39,519
so we're trying to make this easier and

00:09:37,120 --> 00:09:42,080
and more more consistent

00:09:39,519 --> 00:09:43,200
also that's related to the exporter

00:09:42,080 --> 00:09:45,279
toolkits

00:09:43,200 --> 00:09:47,360
or exported toolkit mixins out of the

00:09:45,279 --> 00:09:50,240
box ideally

00:09:47,360 --> 00:09:50,959
where we want to have the whole scaffold

00:09:50,240 --> 00:09:54,399
and everything

00:09:50,959 --> 00:09:55,920
in the exporter toolkit to just entice

00:09:54,399 --> 00:09:58,640
people to to create

00:09:55,920 --> 00:10:00,800
more and more mixins and also have more

00:09:58,640 --> 00:10:04,000
and more mixins as part of at least the

00:10:00,800 --> 00:10:06,240
default and official exporters and

00:10:04,000 --> 00:10:08,000
and encourage others to also put this in

00:10:06,240 --> 00:10:10,079
their exporters and their integrations

00:10:08,000 --> 00:10:13,440
what are mixins you might be asking i

00:10:10,079 --> 00:10:14,399
should have explained this um mixins are

00:10:13,440 --> 00:10:16,320
basically a pack

00:10:14,399 --> 00:10:18,160
a way to package configuration so you

00:10:16,320 --> 00:10:19,600
might have certain dashboards you might

00:10:18,160 --> 00:10:20,959
have alerts you might have recording

00:10:19,600 --> 00:10:22,800
rules

00:10:20,959 --> 00:10:24,480
and you just package them as an

00:10:22,800 --> 00:10:27,600
opinionated thing

00:10:24,480 --> 00:10:30,959
which can be modified so it's it's not

00:10:27,600 --> 00:10:32,240
a lock in into one specific way of

00:10:30,959 --> 00:10:35,760
thinking

00:10:32,240 --> 00:10:38,800
you can actually modify this um

00:10:35,760 --> 00:10:39,279
yet you get a saying default something

00:10:38,800 --> 00:10:43,200
which

00:10:39,279 --> 00:10:45,600
should work and which you can base upon

00:10:43,200 --> 00:10:47,120
which hopefully has a lot of

00:10:45,600 --> 00:10:49,760
synchronization effort

00:10:47,120 --> 00:10:50,560
effects through the ecosystem where

00:10:49,760 --> 00:10:52,800
people

00:10:50,560 --> 00:10:54,720
start thinking with the same terminology

00:10:52,800 --> 00:10:56,399
maybe or the same dashboards or they

00:10:54,720 --> 00:10:59,040
have similar alerts

00:10:56,399 --> 00:11:00,800
they have thresholds which are already

00:10:59,040 --> 00:11:03,600
preset by the domain

00:11:00,800 --> 00:11:04,399
so subject matter expert of whatever

00:11:03,600 --> 00:11:07,519
program

00:11:04,399 --> 00:11:10,000
you're running just

00:11:07,519 --> 00:11:11,839
make it easier to to to push this kind

00:11:10,000 --> 00:11:13,519
of information into the ecosystem and

00:11:11,839 --> 00:11:15,600
reuse this

00:11:13,519 --> 00:11:18,000
another interpretation of open would be

00:11:15,600 --> 00:11:20,320
open documents

00:11:18,000 --> 00:11:22,560
and we have all our design documents

00:11:20,320 --> 00:11:25,440
open

00:11:22,560 --> 00:11:27,760
that is kind of a logical evolution of

00:11:25,440 --> 00:11:29,920
the mailing list discussions

00:11:27,760 --> 00:11:31,279
and by and large we already had our

00:11:29,920 --> 00:11:34,560
design docs um

00:11:31,279 --> 00:11:36,959
public of course why not now we are

00:11:34,560 --> 00:11:38,959
deliberately making an effort to

00:11:36,959 --> 00:11:40,000
to make all of them public and actually

00:11:38,959 --> 00:11:41,760
like

00:11:40,000 --> 00:11:43,040
follow up if someone forgets to do it

00:11:41,760 --> 00:11:45,279
and such

00:11:43,040 --> 00:11:46,320
that it is not by accident internally

00:11:45,279 --> 00:11:48,640
prometheus team

00:11:46,320 --> 00:11:49,680
that we just have everything uh out in

00:11:48,640 --> 00:11:52,560
the open

00:11:49,680 --> 00:11:53,279
we have a special um drive on google

00:11:52,560 --> 00:11:55,120
where

00:11:53,279 --> 00:11:57,040
we can have a public share for for the

00:11:55,120 --> 00:11:58,160
complete folder and all of those design

00:11:57,040 --> 00:12:00,480
looks live in there

00:11:58,160 --> 00:12:01,519
so you can quite easily find them and

00:12:00,480 --> 00:12:04,160
such which

00:12:01,519 --> 00:12:05,120
again is just a logical evolution yet it

00:12:04,160 --> 00:12:08,480
is part of this

00:12:05,120 --> 00:12:10,240
aggressively becoming more open

00:12:08,480 --> 00:12:12,320
another interpretation of open would be

00:12:10,240 --> 00:12:15,680
open standards

00:12:12,320 --> 00:12:18,079
and there are a few we have openmetrics

00:12:15,680 --> 00:12:21,200
which is the standard of how to

00:12:18,079 --> 00:12:24,240
how to export or expose

00:12:21,200 --> 00:12:26,720
metrics towards an ingester and we have

00:12:24,240 --> 00:12:30,639
a specification for remote right

00:12:26,720 --> 00:12:33,120
um which is how you push the data from

00:12:30,639 --> 00:12:35,120
your permission server to something else

00:12:33,120 --> 00:12:37,680
or from your agent to your long term

00:12:35,120 --> 00:12:39,279
or what have you those two have been

00:12:37,680 --> 00:12:41,040
specified they're finalized we are

00:12:39,279 --> 00:12:42,320
considering doing the same for promptq

00:12:41,040 --> 00:12:46,720
and gtsdb

00:12:42,320 --> 00:12:49,200
uh we'll see next aspect is open testing

00:12:46,720 --> 00:12:50,880
of course with uh i think it was oscar

00:12:49,200 --> 00:12:52,639
wilde who said that imitation is the

00:12:50,880 --> 00:12:54,160
sincerest form of flattery and this is

00:12:52,639 --> 00:12:56,639
quite true

00:12:54,160 --> 00:12:57,760
if you look at the cncf-endorser survey

00:12:56,639 --> 00:12:59,920
on observability

00:12:57,760 --> 00:13:01,440
um prometheus is on place one open

00:12:59,920 --> 00:13:04,480
matrix is someplace five

00:13:01,440 --> 00:13:07,200
five so um you can see that there is

00:13:04,480 --> 00:13:08,720
bound to be a lot of people who want a

00:13:07,200 --> 00:13:09,600
piece of the cake or just want to be

00:13:08,720 --> 00:13:12,160
compatible

00:13:09,600 --> 00:13:12,639
for the user's sake where they just want

00:13:12,160 --> 00:13:16,399
to

00:13:12,639 --> 00:13:19,040
to work and interact while

00:13:16,399 --> 00:13:20,959
a few of them have just taken reference

00:13:19,040 --> 00:13:23,120
code and such and just re-implemented or

00:13:20,959 --> 00:13:26,000
even just vendored in our code

00:13:23,120 --> 00:13:27,279
um that is not the case for everyone and

00:13:26,000 --> 00:13:30,480
we want to make this

00:13:27,279 --> 00:13:33,519
more more yeah easier for people

00:13:30,480 --> 00:13:36,240
to actually do we already have

00:13:33,519 --> 00:13:37,200
three test suites or compliance suites

00:13:36,240 --> 00:13:39,360
uh released

00:13:37,200 --> 00:13:41,040
uh one for prom kill one for road right

00:13:39,360 --> 00:13:44,480
and one for openmetrics

00:13:41,040 --> 00:13:46,160
um there is work being done towards uh

00:13:44,480 --> 00:13:48,160
maybe it's already released by the time

00:13:46,160 --> 00:13:51,120
this video is out

00:13:48,160 --> 00:13:52,959
a remote read compliance and we are also

00:13:51,120 --> 00:13:54,160
considering to do stuff around tsb and

00:13:52,959 --> 00:13:56,320
data correctness

00:13:54,160 --> 00:13:57,279
and maybe we also have some baseline

00:13:56,320 --> 00:14:00,000
performance like

00:13:57,279 --> 00:14:00,399
not super aggressive performance but

00:14:00,000 --> 00:14:03,440
just

00:14:00,399 --> 00:14:06,320
some same baseline to to give you some

00:14:03,440 --> 00:14:08,480
reasonable expectation of how how that

00:14:06,320 --> 00:14:10,079
thing will perform

00:14:08,480 --> 00:14:12,480
then we have the next interpretation of

00:14:10,079 --> 00:14:15,120
open that would be open ratings

00:14:12,480 --> 00:14:16,079
and that is kind of fuzzy that term um i

00:14:15,120 --> 00:14:21,279
i know that

00:14:16,079 --> 00:14:21,279
it fit into the open thing so i yeah

00:14:21,680 --> 00:14:27,120
that's a big one um we will have

00:14:25,360 --> 00:14:29,519
official compatibility testing for

00:14:27,120 --> 00:14:31,440
prometheus and this will be backed by

00:14:29,519 --> 00:14:32,720
cncf legal and such so this will

00:14:31,440 --> 00:14:35,279
actually be

00:14:32,720 --> 00:14:37,040
watertight hopefully um we will

00:14:35,279 --> 00:14:39,199
officially bless and publish those

00:14:37,040 --> 00:14:41,519
results on promises io

00:14:39,199 --> 00:14:42,880
we will most likely have version results

00:14:41,519 --> 00:14:46,720
where you can say that you're

00:14:42,880 --> 00:14:48,639
complying to probably l as of april 2021

00:14:46,720 --> 00:14:50,639
or what have you

00:14:48,639 --> 00:14:52,160
we might also have an umbrella above

00:14:50,639 --> 00:14:53,600
this which

00:14:52,160 --> 00:14:55,680
which states that you're fully

00:14:53,600 --> 00:14:58,560
prometheus compatible or something

00:14:55,680 --> 00:14:59,600
um to to basically discern between

00:14:58,560 --> 00:15:02,000
someone who or

00:14:59,600 --> 00:15:03,360
a project which wants to be uh compliant

00:15:02,000 --> 00:15:06,240
to one aspect of

00:15:03,360 --> 00:15:08,079
of prometheus and something which can be

00:15:06,240 --> 00:15:10,480
in its entirety in its

00:15:08,079 --> 00:15:11,440
how it's supposed to be used fully

00:15:10,480 --> 00:15:14,959
compatible with

00:15:11,440 --> 00:15:18,240
with a prometheus system um yeah but

00:15:14,959 --> 00:15:20,000
that's still kind of tbd um the

00:15:18,240 --> 00:15:21,839
other thing which is kind of tbd but

00:15:20,000 --> 00:15:24,320
also will most likely work like this

00:15:21,839 --> 00:15:25,160
um that if you have this result for like

00:15:24,320 --> 00:15:28,959
for example

00:15:25,160 --> 00:15:31,680
2021-4 that this result is

00:15:28,959 --> 00:15:33,759
is valid for two or three minor version

00:15:31,680 --> 00:15:36,160
releases of prometheus

00:15:33,759 --> 00:15:38,480
as we are on a six-week cycle um that

00:15:36,160 --> 00:15:41,920
comes out at 12 to 18 weeks

00:15:38,480 --> 00:15:44,000
to just give people some some um like

00:15:41,920 --> 00:15:45,120
vendors and projects should have enough

00:15:44,000 --> 00:15:48,240
time to actually

00:15:45,120 --> 00:15:50,720
uh update their stuff and comply to this

00:15:48,240 --> 00:15:51,759
thing and we don't want to just drop

00:15:50,720 --> 00:15:53,759
this on them and

00:15:51,759 --> 00:15:55,440
and they they need to scramble because

00:15:53,759 --> 00:15:57,680
this would be highly unfair

00:15:55,440 --> 00:15:59,519
um on the other hand we don't want

00:15:57,680 --> 00:16:01,759
someone to sit on this for like

00:15:59,519 --> 00:16:04,079
three years and and their users are

00:16:01,759 --> 00:16:07,199
running into walls left and right

00:16:04,079 --> 00:16:08,560
um having done quite a bit of of

00:16:07,199 --> 00:16:11,920
certification work and such

00:16:08,560 --> 00:16:14,000
in my past that is a big problem where

00:16:11,920 --> 00:16:16,480
if you have if you have certifications

00:16:14,000 --> 00:16:17,199
or stamps of approval of whatever you

00:16:16,480 --> 00:16:19,680
which are too

00:16:17,199 --> 00:16:20,880
long running the end users might

00:16:19,680 --> 00:16:23,120
actually

00:16:20,880 --> 00:16:25,360
suffer from this so there will be some

00:16:23,120 --> 00:16:28,880
some middle ground in

00:16:25,360 --> 00:16:31,199
in quick enough re-certification or

00:16:28,880 --> 00:16:34,720
retesting

00:16:31,199 --> 00:16:36,160
and we will have some some logos some

00:16:34,720 --> 00:16:38,480
some verbiage some

00:16:36,160 --> 00:16:40,160
some things which you can put on your

00:16:38,480 --> 00:16:41,759
website on your whatever

00:16:40,160 --> 00:16:43,440
to show that you're actually complying

00:16:41,759 --> 00:16:46,399
to all of this um

00:16:43,440 --> 00:16:48,000
yeah maybe those details are already

00:16:46,399 --> 00:16:49,120
published and finalized by the time this

00:16:48,000 --> 00:16:50,880
video is out i

00:16:49,120 --> 00:16:52,880
don't know we'll find out together

00:16:50,880 --> 00:16:54,560
during from home

00:16:52,880 --> 00:16:56,800
then we have the next interpretation

00:16:54,560 --> 00:16:59,839
open meetings

00:16:56,800 --> 00:17:00,720
and basically all our things deaf

00:16:59,839 --> 00:17:03,680
summits

00:17:00,720 --> 00:17:05,120
all the working groups and such is all

00:17:03,680 --> 00:17:07,120
out in the open it's all

00:17:05,120 --> 00:17:10,079
uh public it's recorded it's free to

00:17:07,120 --> 00:17:11,679
join um we have a calendar

00:17:10,079 --> 00:17:13,120
and we'll be linking those slides and

00:17:11,679 --> 00:17:14,160
all of those are clickable so you can

00:17:13,120 --> 00:17:16,720
just

00:17:14,160 --> 00:17:18,720
you can just click on them and join we

00:17:16,720 --> 00:17:21,760
publish this on youtube

00:17:18,720 --> 00:17:23,360
we kind of realized um with with the

00:17:21,760 --> 00:17:25,360
whole pandemic thing

00:17:23,360 --> 00:17:26,480
previously we had one deaf summit per

00:17:25,360 --> 00:17:28,400
year um

00:17:26,480 --> 00:17:29,760
and that was physical and we have always

00:17:28,400 --> 00:17:32,799
invited people and such to

00:17:29,760 --> 00:17:34,720
to not be just amongst ourselves but

00:17:32,799 --> 00:17:36,160
obviously it doesn't scale to have i

00:17:34,720 --> 00:17:37,120
don't know how many people and how

00:17:36,160 --> 00:17:39,440
dynamic in

00:17:37,120 --> 00:17:41,360
in a room when when you need to actually

00:17:39,440 --> 00:17:44,000
fly to a place and such

00:17:41,360 --> 00:17:46,240
um we started having virtual dev summits

00:17:44,000 --> 00:17:49,280
for pandemic reasons

00:17:46,240 --> 00:17:52,000
and then we kind of forgot i guess

00:17:49,280 --> 00:17:53,200
that we could just make them open um so

00:17:52,000 --> 00:17:55,840
we realized and we did

00:17:53,200 --> 00:17:58,080
and again everything is just open um of

00:17:55,840 --> 00:18:00,080
course why not it's only internet it's

00:17:58,080 --> 00:18:03,280
trivial to do this

00:18:00,080 --> 00:18:05,760
so that's it we should have

00:18:03,280 --> 00:18:07,679
like five minutes potentially for

00:18:05,760 --> 00:18:09,760
questions which is great

00:18:07,679 --> 00:18:13,520
and i hope you do have a few questions

00:18:09,760 --> 00:18:13,520

YouTube URL: https://www.youtube.com/watch?v=2Yo22OLJr7I


