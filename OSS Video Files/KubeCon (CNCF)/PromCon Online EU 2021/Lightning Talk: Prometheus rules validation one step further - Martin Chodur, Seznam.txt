Title: Lightning Talk: Prometheus rules validation one step further - Martin Chodur, Seznam
Publication date: 2021-05-03
Playlist: PromCon Online EU 2021
Description: 
	Donâ€™t miss out! Join us at our upcoming event: KubeCon + CloudNativeCon North America 2021 in Los Angeles, CA from October 12-15. Learn more at https://kubecon.io The conference features presentations from developers and end users of Kubernetes, Prometheus, Envoy, and all of the other CNCF-hosted projects.

Lightning Talk: Prometheus rules validation one step further - Martin Chodur, Seznam

Introduction of a new tool for validation of Prometheus rules metadata and expression properties to align with the infrastructure setup.
Captions: 
	00:00:00,160 --> 00:00:04,480
hi my name is martin and i would like to

00:00:02,639 --> 00:00:05,759
tell you more about validating

00:00:04,480 --> 00:00:08,639
prometheus rules

00:00:05,759 --> 00:00:10,880
and taking it one step further you may

00:00:08,639 --> 00:00:13,280
know me as fusakla from github i'm a

00:00:10,880 --> 00:00:15,920
devops engineer at cessnam.czect

00:00:13,280 --> 00:00:17,359
and recently we did some major

00:00:15,920 --> 00:00:20,480
refactoring of our

00:00:17,359 --> 00:00:23,600
alert routing and we found out that we

00:00:20,480 --> 00:00:24,080
need one thing additional to test in our

00:00:23,600 --> 00:00:26,480
stack

00:00:24,080 --> 00:00:27,680
uh alerting stack to make sure

00:00:26,480 --> 00:00:31,199
everything works

00:00:27,680 --> 00:00:31,840
as expected you can see all this you can

00:00:31,199 --> 00:00:35,680
test with

00:00:31,840 --> 00:00:38,960
chrome tool or am tool but this one

00:00:35,680 --> 00:00:39,920
still isn't possible and this was the

00:00:38,960 --> 00:00:41,840
motivation

00:00:39,920 --> 00:00:44,160
to create a tool i would like to show

00:00:41,840 --> 00:00:47,440
you you need somehow

00:00:44,160 --> 00:00:49,200
ensure that the alert that the labels

00:00:47,440 --> 00:00:52,320
the alerts have

00:00:49,200 --> 00:00:54,719
are those that you expect in the routing

00:00:52,320 --> 00:00:58,000
tree of the alert manager

00:00:54,719 --> 00:00:58,559
so uh the tool is called permeable you

00:00:58,000 --> 00:01:02,160
can just

00:00:58,559 --> 00:01:05,280
simply go get it and here is simple

00:01:02,160 --> 00:01:08,479
example of alert which has

00:01:05,280 --> 00:01:11,119
label severity with value info and the

00:01:08,479 --> 00:01:13,040
second snippet shows the validation yaml

00:01:11,119 --> 00:01:15,759
file and this is actually a

00:01:13,040 --> 00:01:19,680
configuration file for the tool promoval

00:01:15,759 --> 00:01:23,840
it consists of list of

00:01:19,680 --> 00:01:26,799
validation rules and each has its name

00:01:23,840 --> 00:01:28,240
scope which can be only recording curls

00:01:26,799 --> 00:01:30,720
alerting curls or

00:01:28,240 --> 00:01:31,680
all the rules of the file which will be

00:01:30,720 --> 00:01:35,280
validated

00:01:31,680 --> 00:01:38,640
and then it consists of distinct

00:01:35,280 --> 00:01:41,840
validators here you can see i'm using

00:01:38,640 --> 00:01:45,920
has labels validator which ensures

00:01:41,840 --> 00:01:49,759
that each rule has the label severity

00:01:45,920 --> 00:01:53,040
which we see the alert does have and the

00:01:49,759 --> 00:01:54,960
other one validator is label has allowed

00:01:53,040 --> 00:01:59,119
values

00:01:54,960 --> 00:02:01,600
and it checks if the rule has the label

00:01:59,119 --> 00:02:03,759
it checks if the value is one of the

00:02:01,600 --> 00:02:05,840
allowed values we can see that

00:02:03,759 --> 00:02:06,799
this is not the case so the validation

00:02:05,840 --> 00:02:09,759
should fail

00:02:06,799 --> 00:02:12,080
and now we can try to run the two uh you

00:02:09,759 --> 00:02:14,959
can use the prebuilt binaries

00:02:12,080 --> 00:02:17,280
from github and run just permeable

00:02:14,959 --> 00:02:18,080
validate passing the configuration file

00:02:17,280 --> 00:02:20,080
which is the

00:02:18,080 --> 00:02:22,640
validation yaml you saw on the previous

00:02:20,080 --> 00:02:24,239
slide and the rules yeah mo

00:02:22,640 --> 00:02:27,120
with the rules actually you want to

00:02:24,239 --> 00:02:30,160
validate uh it prints out some

00:02:27,120 --> 00:02:32,080
human readable uh description of the

00:02:30,160 --> 00:02:34,080
validation that will be done

00:02:32,080 --> 00:02:35,599
and the result which we can see is

00:02:34,080 --> 00:02:38,400
invalid should be

00:02:35,599 --> 00:02:40,720
again human readable easy to fix and

00:02:38,400 --> 00:02:43,599
some statistics

00:02:40,720 --> 00:02:44,720
uh i show you just just two of those

00:02:43,599 --> 00:02:47,680
validators

00:02:44,720 --> 00:02:48,959
these are all of the currently supported

00:02:47,680 --> 00:02:52,319
validators

00:02:48,959 --> 00:02:52,800
uh these are for labels for annotations

00:02:52,319 --> 00:02:56,239
i would

00:02:52,800 --> 00:03:00,480
point out that there's for example

00:02:56,239 --> 00:03:03,599
validation of annotation

00:03:00,480 --> 00:03:07,120
value if it comes it contains contents

00:03:03,599 --> 00:03:09,840
valid url which can be handy if you put

00:03:07,120 --> 00:03:10,959
playbook links in your annotations it

00:03:09,840 --> 00:03:14,159
can also

00:03:10,959 --> 00:03:17,599
resolve the url actually or

00:03:14,159 --> 00:03:19,680
you can validate your expressions

00:03:17,599 --> 00:03:21,599
there are just three of those validators

00:03:19,680 --> 00:03:25,280
i would point out for example

00:03:21,599 --> 00:03:27,599
the does not use older data then

00:03:25,280 --> 00:03:28,720
i actually bump into this myself many

00:03:27,599 --> 00:03:32,560
times

00:03:28,720 --> 00:03:35,040
writing alert which uses longer

00:03:32,560 --> 00:03:36,799
more data than the retention of the

00:03:35,040 --> 00:03:39,760
prometeurs has

00:03:36,799 --> 00:03:41,200
which you can forbid by this you can

00:03:39,760 --> 00:03:44,000
avoid this error

00:03:41,200 --> 00:03:44,560
missed this issues which is really handy

00:03:44,000 --> 00:03:47,680
also

00:03:44,560 --> 00:03:50,720
you can uh you can make sure

00:03:47,680 --> 00:03:52,959
that the queries are not using range

00:03:50,720 --> 00:03:54,000
vector selector shorter than your script

00:03:52,959 --> 00:03:57,680
interval

00:03:54,000 --> 00:04:01,439
uh which is also good if the

00:03:57,680 --> 00:04:04,000
users or or users

00:04:01,439 --> 00:04:06,879
creating the alerts are not aware

00:04:04,000 --> 00:04:09,760
actually of the of the script interval

00:04:06,879 --> 00:04:10,480
uh yeah d2l actually embeds the prompt

00:04:09,760 --> 00:04:14,159
ql

00:04:10,480 --> 00:04:14,640
code they code from from prometheus so

00:04:14,159 --> 00:04:16,799
it

00:04:14,640 --> 00:04:18,799
actually really parses the from ql and

00:04:16,799 --> 00:04:21,040
analyzes it

00:04:18,799 --> 00:04:22,960
you can also disable uh the rules

00:04:21,040 --> 00:04:26,800
temporarily you can do it

00:04:22,960 --> 00:04:29,680
by well-known annotation uh and passing

00:04:26,800 --> 00:04:31,199
the names of the validation rules

00:04:29,680 --> 00:04:35,600
separated by commas

00:04:31,199 --> 00:04:38,320
or using the command line flag

00:04:35,600 --> 00:04:39,520
and the last feature is that the

00:04:38,320 --> 00:04:42,479
validation yaml

00:04:39,520 --> 00:04:43,199
configuration can grow a lot and it's

00:04:42,479 --> 00:04:46,479
not easy

00:04:43,199 --> 00:04:47,520
easily readable so if you want to

00:04:46,479 --> 00:04:50,560
provide your

00:04:47,520 --> 00:04:53,280
users or anyone creating an alert some

00:04:50,560 --> 00:04:56,800
human more human readable form

00:04:53,280 --> 00:04:59,759
uh of the validation uh you can

00:04:56,800 --> 00:05:01,440
use the command promoval validation docs

00:04:59,759 --> 00:05:05,199
pass it the configuration file

00:05:01,440 --> 00:05:08,240
and set the output currently supported

00:05:05,199 --> 00:05:11,520
output is html markdown and text

00:05:08,240 --> 00:05:15,600
and it looks like this so this is all

00:05:11,520 --> 00:05:17,360
there are some future ideas and uh

00:05:15,600 --> 00:05:20,000
make sure you check out the github

00:05:17,360 --> 00:05:21,919
record repository if you have any ideas

00:05:20,000 --> 00:05:22,639
for additional validators i'd be really

00:05:21,919 --> 00:05:25,840
happy

00:05:22,639 --> 00:05:26,720
to add those and you can read also blog

00:05:25,840 --> 00:05:29,120
post about it

00:05:26,720 --> 00:05:31,320
a short blog post i wrote about it about

00:05:29,120 --> 00:05:34,320
deep motivation and so

00:05:31,320 --> 00:05:34,320

YouTube URL: https://www.youtube.com/watch?v=YYSJ--KhlIo


