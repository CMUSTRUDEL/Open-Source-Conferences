Title: CNCF end user technology radar, June 2021
Publication date: 2021-06-21
Playlist: End User Community
Description: 
	
Captions: 
	00:00:01,439 --> 00:00:06,960
hi and welcome to the

00:00:03,280 --> 00:00:08,480
june 2021 edition of the cncf end user

00:00:06,960 --> 00:00:10,240
technology radar

00:00:08,480 --> 00:00:12,160
i'm really pleased to have with me today

00:00:10,240 --> 00:00:14,559
the radar team who's featuring

00:00:12,160 --> 00:00:17,520
representatives from fidelity

00:00:14,559 --> 00:00:18,560
matamos and melt water and today we're

00:00:17,520 --> 00:00:20,560
going to look at

00:00:18,560 --> 00:00:22,720
the technology radar that they've put

00:00:20,560 --> 00:00:26,480
together

00:00:22,720 --> 00:00:30,240
so let's go

00:00:26,480 --> 00:00:30,720
from the beginning so my name is sheryl

00:00:30,240 --> 00:00:34,239
hung

00:00:30,720 --> 00:00:35,360
and i lead the cncf end user community

00:00:34,239 --> 00:00:38,800
you can find me

00:00:35,360 --> 00:00:40,719
on the internet at oyesheville

00:00:38,800 --> 00:00:43,600
and the cntf end user community is a

00:00:40,719 --> 00:00:45,680
group of more than 140 companies

00:00:43,600 --> 00:00:47,760
featuring some of the biggest and

00:00:45,680 --> 00:00:49,120
smallest companies out there who are all

00:00:47,760 --> 00:00:53,199
using cloud native

00:00:49,120 --> 00:00:54,480
and kubernetes and the goal of the cncf

00:00:53,199 --> 00:00:56,559
technology radar

00:00:54,480 --> 00:00:58,719
is to find out what is the ground truth

00:00:56,559 --> 00:01:01,280
what is the reality of cloud native as

00:00:58,719 --> 00:01:03,840
it looks today

00:01:01,280 --> 00:01:05,280
so the cntf technology radar typically

00:01:03,840 --> 00:01:07,840
looks like this

00:01:05,280 --> 00:01:09,119
we have three rings adopt trial and

00:01:07,840 --> 00:01:11,200
assess

00:01:09,119 --> 00:01:14,000
and we're going to look at a specific

00:01:11,200 --> 00:01:15,840
topic which the radar team has chosen

00:01:14,000 --> 00:01:17,119
and look at a few different tools and

00:01:15,840 --> 00:01:20,080
frameworks within

00:01:17,119 --> 00:01:22,240
those that topic and place them into

00:01:20,080 --> 00:01:25,200
each of these three levels

00:01:22,240 --> 00:01:26,080
so adopt means clear recommendation many

00:01:25,200 --> 00:01:29,759
companies and many

00:01:26,080 --> 00:01:31,680
teams have used it successfully

00:01:29,759 --> 00:01:34,640
trial means that we've used it with

00:01:31,680 --> 00:01:37,040
success and recommend a closer look

00:01:34,640 --> 00:01:39,040
and assess means tried it out it seems

00:01:37,040 --> 00:01:40,240
promising and you should take a closer

00:01:39,040 --> 00:01:43,520
look at this

00:01:40,240 --> 00:01:43,520
when you find this need

00:01:44,079 --> 00:01:48,960
i'd like to welcome members of our radar

00:01:47,040 --> 00:01:50,000
team now and ask them to introduce

00:01:48,960 --> 00:01:51,520
themselves

00:01:50,000 --> 00:01:53,200
so we're just going to go left to right

00:01:51,520 --> 00:01:55,920
so gabe

00:01:53,200 --> 00:01:56,880
please go ahead hi there i'm gabe

00:01:55,920 --> 00:01:59,600
jackson i work

00:01:56,880 --> 00:02:00,560
at mattermost on the cloud platform team

00:01:59,600 --> 00:02:03,600
um

00:02:00,560 --> 00:02:04,159
even though mattermost has a history of

00:02:03,600 --> 00:02:05,600
developing

00:02:04,159 --> 00:02:08,399
a communications platform that's

00:02:05,600 --> 00:02:10,080
on-premise focused recently we've been

00:02:08,399 --> 00:02:11,520
also delivering it as a service in the

00:02:10,080 --> 00:02:14,239
cloud so that's what my team is

00:02:11,520 --> 00:02:14,239
responsible for

00:02:14,400 --> 00:02:18,879
awesome federico yeah hello i'm federic

00:02:17,680 --> 00:02:21,599
hernandez i

00:02:18,879 --> 00:02:22,000
am a principal engineer at meltwater

00:02:21,599 --> 00:02:25,040
being

00:02:22,000 --> 00:02:26,640
part of the teams in the engineering

00:02:25,040 --> 00:02:29,120
enablement mission

00:02:26,640 --> 00:02:31,280
helping other development teams at

00:02:29,120 --> 00:02:34,640
meltwater to work efficiently

00:02:31,280 --> 00:02:37,360
with their mission providing the base

00:02:34,640 --> 00:02:39,440
platforms for them to deploy their

00:02:37,360 --> 00:02:42,560
applications too

00:02:39,440 --> 00:02:45,280
fantastic and my colleague simona is

00:02:42,560 --> 00:02:45,840
uh unfortunately not able to to join us

00:02:45,280 --> 00:02:48,640
today

00:02:45,840 --> 00:02:50,959
but he was part of the raider team

00:02:48,640 --> 00:02:54,080
contributing with the

00:02:50,959 --> 00:02:58,400
content ideas and uh his

00:02:54,080 --> 00:03:01,599
expertise yep definitely

00:02:58,400 --> 00:03:04,319
all right let's go next to russian

00:03:01,599 --> 00:03:04,640
hello everyone hello everyone um my name

00:03:04,319 --> 00:03:07,040
is

00:03:04,640 --> 00:03:09,680
raja rajan people call me rajan i'm a vp

00:03:07,040 --> 00:03:10,159
at fidelity investments uh my focus is

00:03:09,680 --> 00:03:13,200
mainly

00:03:10,159 --> 00:03:14,159
cloud platform architecture we we are

00:03:13,200 --> 00:03:17,120
responsible for

00:03:14,159 --> 00:03:18,400
building a next-gen platform cloud

00:03:17,120 --> 00:03:20,560
native platform

00:03:18,400 --> 00:03:21,920
for fidelity where application teams

00:03:20,560 --> 00:03:25,040
development teams

00:03:21,920 --> 00:03:26,640
reap the benefits of uh the latest cloud

00:03:25,040 --> 00:03:29,440
native technologies without

00:03:26,640 --> 00:03:30,319
uh putting much effort into it so we try

00:03:29,440 --> 00:03:33,120
to make it uh

00:03:30,319 --> 00:03:34,959
easy for them uh currently we are at 250

00:03:33,120 --> 00:03:39,120
to 300 clusters in that range

00:03:34,959 --> 00:03:42,560
uh we are managing that so that's me

00:03:39,120 --> 00:03:42,879
awesome and navaj yeah thanks cheryl

00:03:42,560 --> 00:03:45,519
yeah

00:03:42,879 --> 00:03:47,680
niraj amin uh also worked at fidelity

00:03:45,519 --> 00:03:51,680
leading the cloud platforms teams

00:03:47,680 --> 00:03:53,280
primarily focused on the csps

00:03:51,680 --> 00:03:55,200
and the journey that fidelity has taken

00:03:53,280 --> 00:03:57,599
to migrate

00:03:55,200 --> 00:03:59,280
applications to the cloud specifically

00:03:57,599 --> 00:04:01,599
on

00:03:59,280 --> 00:04:02,480
the kubernetes platforms uh that we're

00:04:01,599 --> 00:04:05,680
building out

00:04:02,480 --> 00:04:07,200
in architecting fantastic

00:04:05,680 --> 00:04:09,439
and i want to thank you all for giving

00:04:07,200 --> 00:04:10,560
up your time both today and over the

00:04:09,439 --> 00:04:12,799
last few weeks to

00:04:10,560 --> 00:04:14,159
put this together and contributing your

00:04:12,799 --> 00:04:17,120
expertise back to the

00:04:14,159 --> 00:04:17,120
larger community

00:04:18,400 --> 00:04:22,800
so first question

00:04:21,440 --> 00:04:24,800
as you've probably seen we chose

00:04:22,800 --> 00:04:25,919
multi-cluster management for the topic

00:04:24,800 --> 00:04:28,160
of this radar

00:04:25,919 --> 00:04:29,520
so why is multi-cluster management

00:04:28,160 --> 00:04:32,800
something that's interesting

00:04:29,520 --> 00:04:33,680
to you right now uh yeah i can i can

00:04:32,800 --> 00:04:37,120
start with it

00:04:33,680 --> 00:04:40,240
um so i think this is one topic where

00:04:37,120 --> 00:04:42,000
um it it really depends on whether

00:04:40,240 --> 00:04:43,680
you're a small team uh

00:04:42,000 --> 00:04:45,840
you know it's a small organization or we

00:04:43,680 --> 00:04:46,320
have a lot of application developers in

00:04:45,840 --> 00:04:48,479
a lot of

00:04:46,320 --> 00:04:49,440
large organizations those sort of things

00:04:48,479 --> 00:04:52,000
really affect

00:04:49,440 --> 00:04:53,680
uh your choice uh your your choice of

00:04:52,000 --> 00:04:57,120
how you would like to manage it

00:04:53,680 --> 00:04:59,520
so um and this is one of the areas where

00:04:57,120 --> 00:05:00,320
there are like several number of options

00:04:59,520 --> 00:05:02,160
available

00:05:00,320 --> 00:05:03,759
uh but there is no clear choice

00:05:02,160 --> 00:05:06,960
typically asked like which one is

00:05:03,759 --> 00:05:10,560
like the better one right um so uh

00:05:06,960 --> 00:05:11,600
typically i think the this is one of the

00:05:10,560 --> 00:05:12,960
topics where

00:05:11,600 --> 00:05:14,320
based on the results you will really

00:05:12,960 --> 00:05:15,199
find it useful that if you're doing

00:05:14,320 --> 00:05:18,000
something today

00:05:15,199 --> 00:05:18,800
in a certain way to manage clusters uh

00:05:18,000 --> 00:05:20,720
you would

00:05:18,800 --> 00:05:22,160
you'd get the reassurance that you know

00:05:20,720 --> 00:05:22,720
others are also doing it in a certain

00:05:22,160 --> 00:05:24,960
way

00:05:22,720 --> 00:05:26,639
and if not you get to know the reasons

00:05:24,960 --> 00:05:28,720
why you know that's not the case

00:05:26,639 --> 00:05:30,639
so uh it's it's really interesting and

00:05:28,720 --> 00:05:31,759
very uh you know important topic because

00:05:30,639 --> 00:05:32,800
everything starts with the

00:05:31,759 --> 00:05:35,199
you know cluster creation and

00:05:32,800 --> 00:05:38,800
provisioning right so um

00:05:35,199 --> 00:05:41,520
yeah so that's me

00:05:38,800 --> 00:05:42,400
cool anyone else have thoughts about

00:05:41,520 --> 00:05:45,039
multi-cluster

00:05:42,400 --> 00:05:45,919
perhaps what they're doing right now

00:05:45,039 --> 00:05:49,039
like multi-cloud

00:05:45,919 --> 00:05:51,440
management yeah i can jump in uh

00:05:49,039 --> 00:05:52,400
regarding the topic itself i think one

00:05:51,440 --> 00:05:55,440
of the things that

00:05:52,400 --> 00:05:57,120
maybe caught uh most of us sort of off

00:05:55,440 --> 00:06:00,639
guard or at least me was

00:05:57,120 --> 00:06:01,600
uh there was sort of the idea of

00:06:00,639 --> 00:06:03,600
some of the other things we had

00:06:01,600 --> 00:06:04,800
discussed as possible topics there was

00:06:03,600 --> 00:06:07,840
sort of like a clear-cut

00:06:04,800 --> 00:06:09,840
sort of top three or top five sort of

00:06:07,840 --> 00:06:10,960
options but when this topic was brought

00:06:09,840 --> 00:06:13,039
up there was a lot of

00:06:10,960 --> 00:06:14,080
organic conversation immediately a lot

00:06:13,039 --> 00:06:15,520
of people doing a lot of different

00:06:14,080 --> 00:06:16,960
things and so it was

00:06:15,520 --> 00:06:18,560
like a perfect thing to sort of dive

00:06:16,960 --> 00:06:21,600
into um

00:06:18,560 --> 00:06:23,440
yeah and uh we have

00:06:21,600 --> 00:06:25,039
the same idea matter most of we use a

00:06:23,440 --> 00:06:25,520
bunch of different tools to do different

00:06:25,039 --> 00:06:28,720
things

00:06:25,520 --> 00:06:29,360
uh and depending on sort of our needs at

00:06:28,720 --> 00:06:31,280
the time

00:06:29,360 --> 00:06:35,520
we'll pick a totally different tool set

00:06:31,280 --> 00:06:38,720
so um yeah that all ties into the topic

00:06:35,520 --> 00:06:41,360
there's also um as

00:06:38,720 --> 00:06:42,080
everyone starts with one cluster there

00:06:41,360 --> 00:06:45,280
and then

00:06:42,080 --> 00:06:47,759
expands and the journey continues

00:06:45,280 --> 00:06:50,240
and and you you you grew your

00:06:47,759 --> 00:06:53,599
environment into into large environments

00:06:50,240 --> 00:06:56,400
there is no clear path out there

00:06:53,599 --> 00:06:57,280
and this is like an interesting journey

00:06:56,400 --> 00:07:00,479
and to

00:06:57,280 --> 00:07:01,440
to document for for for teams starting

00:07:00,479 --> 00:07:04,639
out okay i'm

00:07:01,440 --> 00:07:06,880
now here i will probably end up with a

00:07:04,639 --> 00:07:08,319
large environment what possibilities are

00:07:06,880 --> 00:07:11,840
there what are others

00:07:08,319 --> 00:07:14,479
doing and learn from that to avoid

00:07:11,840 --> 00:07:15,440
the the pain that a lot of us have

00:07:14,479 --> 00:07:19,199
experienced

00:07:15,440 --> 00:07:22,240
and uh not longer

00:07:19,199 --> 00:07:22,240
experience maybe

00:07:22,400 --> 00:07:26,240
i'll just add and i kind of agree with

00:07:24,160 --> 00:07:29,440
federico i think that scalability

00:07:26,240 --> 00:07:30,880
um concerns around

00:07:29,440 --> 00:07:33,120
trying to figure this out and picking

00:07:30,880 --> 00:07:35,919
this topic i think is good i think

00:07:33,120 --> 00:07:36,800
clusters themselves right are becoming

00:07:35,919 --> 00:07:39,759
um

00:07:36,800 --> 00:07:40,240
more like kettle right more and more um

00:07:39,759 --> 00:07:42,160
and as

00:07:40,240 --> 00:07:44,240
as we grow and more especially at

00:07:42,160 --> 00:07:46,639
fidelity as more teams adopt

00:07:44,240 --> 00:07:47,440
and move over uh to kubernetes i think

00:07:46,639 --> 00:07:49,520
um

00:07:47,440 --> 00:07:51,199
for a platform team that's sort of

00:07:49,520 --> 00:07:52,160
essentially trying to manage this i

00:07:51,199 --> 00:07:55,599
think

00:07:52,160 --> 00:07:55,599
this topic is pretty important

00:07:56,840 --> 00:08:02,800
fantastic okay so

00:07:59,759 --> 00:08:04,319
after picking the topic um we basically

00:08:02,800 --> 00:08:05,759
went out and asked the end user

00:08:04,319 --> 00:08:07,280
community

00:08:05,759 --> 00:08:09,520
what are your thoughts on this what are

00:08:07,280 --> 00:08:12,960
you doing right now what things do you

00:08:09,520 --> 00:08:14,639
not use have you moved away from and

00:08:12,960 --> 00:08:16,319
just to give you an idea of the

00:08:14,639 --> 00:08:18,000
different kinds of companies that

00:08:16,319 --> 00:08:20,720
responded

00:08:18,000 --> 00:08:22,560
we've got some of the companies listed

00:08:20,720 --> 00:08:25,199
here

00:08:22,560 --> 00:08:26,080
most companies kind of fell in some

00:08:25,199 --> 00:08:28,960
generic

00:08:26,080 --> 00:08:30,400
software industries which can cover a

00:08:28,960 --> 00:08:31,759
lot of different things

00:08:30,400 --> 00:08:33,440
but i think there was a slight bias

00:08:31,759 --> 00:08:35,760
towards the larger

00:08:33,440 --> 00:08:36,959
larger companies which perhaps make

00:08:35,760 --> 00:08:38,159
sense if you're talking about

00:08:36,959 --> 00:08:39,519
multi-cluster management

00:08:38,159 --> 00:08:41,680
you're more likely to need it if you

00:08:39,519 --> 00:08:44,399
have a larger company more complex

00:08:41,680 --> 00:08:44,399
infrastructure

00:08:44,959 --> 00:08:52,959
so at this point

00:08:48,399 --> 00:08:56,000
what did you expect in terms of results

00:08:52,959 --> 00:08:58,000
i can kick that off um the funny thing

00:08:56,000 --> 00:09:01,600
is i didn't know what to expect

00:08:58,000 --> 00:09:04,720
uh on one hand i kind of expected that

00:09:01,600 --> 00:09:08,160
there'd be a lot of varying answers um

00:09:04,720 --> 00:09:09,839
i assume that as the number of employees

00:09:08,160 --> 00:09:11,680
at the organizations

00:09:09,839 --> 00:09:12,880
sort of skewed towards the higher end as

00:09:11,680 --> 00:09:14,880
in there's more there

00:09:12,880 --> 00:09:16,240
that they would sort of have a more

00:09:14,880 --> 00:09:19,120
clear tool set

00:09:16,240 --> 00:09:21,120
and infrastructure stack um but it

00:09:19,120 --> 00:09:22,480
turned out that that wasn't necessarily

00:09:21,120 --> 00:09:24,160
the case i was expecting

00:09:22,480 --> 00:09:25,839
maybe there would be some sort of like

00:09:24,160 --> 00:09:27,040
hidden gems of like this is a way you

00:09:25,839 --> 00:09:30,080
could do it that maybe

00:09:27,040 --> 00:09:33,279
we weren't expecting um but yeah

00:09:30,080 --> 00:09:33,920
the i i was when this topic initially

00:09:33,279 --> 00:09:35,920
came up

00:09:33,920 --> 00:09:37,279
sort of was in the camp of thinking that

00:09:35,920 --> 00:09:39,279
perhaps matter most

00:09:37,279 --> 00:09:40,640
was doing it in a unique and maybe not

00:09:39,279 --> 00:09:42,000
completely optimal way

00:09:40,640 --> 00:09:44,240
and i was definitely pleasantly

00:09:42,000 --> 00:09:45,920
surprised to see that uh

00:09:44,240 --> 00:09:47,040
that wasn't necessarily the case that a

00:09:45,920 --> 00:09:47,839
lot of people were using a lot of

00:09:47,040 --> 00:09:49,120
different tools

00:09:47,839 --> 00:09:50,880
and that this is definitely an

00:09:49,120 --> 00:09:53,279
interesting problem that's still being

00:09:50,880 --> 00:09:53,279
tackled

00:09:55,040 --> 00:09:58,160
yeah i want to i want to add to that um

00:09:56,959 --> 00:10:01,440
so i think i

00:09:58,160 --> 00:10:03,120
i i get the feeling so we we started

00:10:01,440 --> 00:10:04,800
with our period of two years i think i

00:10:03,120 --> 00:10:05,519
still remember creating the first

00:10:04,800 --> 00:10:08,160
cluster

00:10:05,519 --> 00:10:10,240
so we we started with like one cluster

00:10:08,160 --> 00:10:12,000
and then now we are at like 250 to 300

00:10:10,240 --> 00:10:14,320
clusters so in the journey like

00:10:12,000 --> 00:10:15,279
many times uh you know we have felt the

00:10:14,320 --> 00:10:16,640
same thing where

00:10:15,279 --> 00:10:19,279
are we doing things in the right way

00:10:16,640 --> 00:10:20,720
because uh we have to sort of do some

00:10:19,279 --> 00:10:22,640
custom things like we have to do

00:10:20,720 --> 00:10:24,320
things in a slightly different way

00:10:22,640 --> 00:10:27,440
especially the scaling part so

00:10:24,320 --> 00:10:27,839
um uh i'm pretty i clearly remember that

00:10:27,440 --> 00:10:29,680
the

00:10:27,839 --> 00:10:31,040
first six months we were only at ten

00:10:29,680 --> 00:10:32,640
clusters or something like that so we're

00:10:31,040 --> 00:10:33,360
doing a lot of experiments we're making

00:10:32,640 --> 00:10:35,440
sure

00:10:33,360 --> 00:10:36,480
uh just the stability aspects and all

00:10:35,440 --> 00:10:38,320
those things are there

00:10:36,480 --> 00:10:40,079
and then we quickly scaled right so at

00:10:38,320 --> 00:10:41,360
that time we had to do things in a

00:10:40,079 --> 00:10:43,440
slightly different way

00:10:41,360 --> 00:10:45,440
so uh many times we did feel the same

00:10:43,440 --> 00:10:47,279
thing where are we in the right track

00:10:45,440 --> 00:10:48,720
is it okay to do things that way but

00:10:47,279 --> 00:10:52,320
yeah looking at the results i think

00:10:48,720 --> 00:10:52,320
it's definitely reassuring yeah

00:10:54,800 --> 00:11:01,839
federica i think your meets yes sorry

00:10:58,480 --> 00:11:04,720
um what i expected to learn was or was i

00:11:01,839 --> 00:11:05,680
curious about is that since the end user

00:11:04,720 --> 00:11:09,360
community is

00:11:05,680 --> 00:11:11,600
uh spread over a variety of industries

00:11:09,360 --> 00:11:14,240
with all different uh

00:11:11,600 --> 00:11:14,880
requirements different policies

00:11:14,240 --> 00:11:18,560
different

00:11:14,880 --> 00:11:19,120
uh rule sets um to see if there is like

00:11:18,560 --> 00:11:22,079
a

00:11:19,120 --> 00:11:24,720
a pattern emerging if you're in this

00:11:22,079 --> 00:11:25,600
industry you you you manage your your

00:11:24,720 --> 00:11:28,000
environments

00:11:25,600 --> 00:11:29,920
like with this and if you're in this

00:11:28,000 --> 00:11:34,240
industry you you will manage

00:11:29,920 --> 00:11:36,560
with this and um and so i i was

00:11:34,240 --> 00:11:38,240
expecting perhaps to to discover some

00:11:36,560 --> 00:11:41,920
patterns there or some

00:11:38,240 --> 00:11:42,880
also as gabe said um hidden gems that

00:11:41,920 --> 00:11:46,000
that are known

00:11:42,880 --> 00:11:49,200
not really known but uh

00:11:46,000 --> 00:11:53,279
would be good to to to give them a

00:11:49,200 --> 00:11:56,720
larger platform to to become

00:11:53,279 --> 00:11:58,800
known in the in the community

00:11:56,720 --> 00:11:59,760
and i'll add the same i mean um i

00:11:58,800 --> 00:12:01,200
thought

00:11:59,760 --> 00:12:04,880
when going into this i thought there

00:12:01,200 --> 00:12:08,160
would be some conformity across

00:12:04,880 --> 00:12:10,880
some of these these toolings um so

00:12:08,160 --> 00:12:11,920
that was my expectation or opinion going

00:12:10,880 --> 00:12:14,399
into this

00:12:11,920 --> 00:12:16,800
um so it was interesting to see the

00:12:14,399 --> 00:12:18,720
results

00:12:16,800 --> 00:12:20,959
um actually i'll follow up with a

00:12:18,720 --> 00:12:21,360
question of my own um too gabe since you

00:12:20,959 --> 00:12:24,160
mentioned

00:12:21,360 --> 00:12:25,279
hidden gems why do you think that there

00:12:24,160 --> 00:12:26,800
aren't really

00:12:25,279 --> 00:12:28,560
those hidden gems why do you think

00:12:26,800 --> 00:12:30,240
everybody has

00:12:28,560 --> 00:12:32,399
deployed it and kind of set foot in

00:12:30,240 --> 00:12:35,279
unique ways

00:12:32,399 --> 00:12:36,480
it's a good question um just going with

00:12:35,279 --> 00:12:37,920
my gut on this one

00:12:36,480 --> 00:12:40,320
i think it's just because it's a hard

00:12:37,920 --> 00:12:44,480
problem um kubernetes

00:12:40,320 --> 00:12:45,920
as was discussed earlier you know was

00:12:44,480 --> 00:12:47,760
we've solved with the kubernetes

00:12:45,920 --> 00:12:50,720
platform the idea of running apps and

00:12:47,760 --> 00:12:52,000
services as sort of cattle right but

00:12:50,720 --> 00:12:53,680
we're now at the point where

00:12:52,000 --> 00:12:55,519
the clusters themselves need to go

00:12:53,680 --> 00:12:56,800
through that same uplift and

00:12:55,519 --> 00:12:58,560
i think that it was just something that

00:12:56,800 --> 00:13:00,000
wasn't initially tackled in the same way

00:12:58,560 --> 00:13:02,320
as the core platform was

00:13:00,000 --> 00:13:04,079
and it's in certain ways even more

00:13:02,320 --> 00:13:05,279
complex than than the kubernetes

00:13:04,079 --> 00:13:07,839
platform itself so

00:13:05,279 --> 00:13:09,360
if i had to guess it's just that that

00:13:07,839 --> 00:13:11,200
it's just the next logical step

00:13:09,360 --> 00:13:12,800
so that's where we're working towards

00:13:11,200 --> 00:13:16,320
and also it's a really hard

00:13:12,800 --> 00:13:17,200
problem to tackle okay we'll dive more

00:13:16,320 --> 00:13:19,040
into the

00:13:17,200 --> 00:13:21,200
into the themes of it in a little bit

00:13:19,040 --> 00:13:24,320
but first of all let us take a look

00:13:21,200 --> 00:13:26,240
at the results so the first thing to

00:13:24,320 --> 00:13:29,360
note on this is we actually have

00:13:26,240 --> 00:13:31,839
two radars this time not just one

00:13:29,360 --> 00:13:32,959
and these were split between cluster

00:13:31,839 --> 00:13:36,160
deployment

00:13:32,959 --> 00:13:39,279
and core services and add-ons

00:13:36,160 --> 00:13:39,839
so first question to the radar team why

00:13:39,279 --> 00:13:43,839
do we have

00:13:39,839 --> 00:13:46,320
two radars and not one as usual

00:13:43,839 --> 00:13:48,000
yeah i'll start on this one so i i think

00:13:46,320 --> 00:13:49,680
it kind of just evolves

00:13:48,000 --> 00:13:52,399
um i don't i don't think any of us were

00:13:49,680 --> 00:13:54,480
expecting to kind of go into um

00:13:52,399 --> 00:13:55,760
uh having two raiders at the end of the

00:13:54,480 --> 00:13:57,760
day but as we

00:13:55,760 --> 00:13:59,680
as we went through the questions and you

00:13:57,760 --> 00:14:03,040
know the radar itself i think we started

00:13:59,680 --> 00:14:06,079
um uh figuring out that we had

00:14:03,040 --> 00:14:06,720
two different um uh radars that would be

00:14:06,079 --> 00:14:08,320
required

00:14:06,720 --> 00:14:09,600
one that would handle sort of the

00:14:08,320 --> 00:14:10,240
infrastructure piece or the cluster

00:14:09,600 --> 00:14:12,480
deployment

00:14:10,240 --> 00:14:13,519
aspect of it and then another one that

00:14:12,480 --> 00:14:16,320
um

00:14:13,519 --> 00:14:18,399
tooling wise would would answer what you

00:14:16,320 --> 00:14:18,880
do almost in day two or kind of build on

00:14:18,399 --> 00:14:20,480
top

00:14:18,880 --> 00:14:22,800
uh once the infrastructure provisioning

00:14:20,480 --> 00:14:23,839
or you know um day two operations of the

00:14:22,800 --> 00:14:25,440
cluster itself

00:14:23,839 --> 00:14:27,920
uh outside of the infrastructure uh

00:14:25,440 --> 00:14:27,920
we're done

00:14:28,399 --> 00:14:32,480
so i think it was an evolution over uh

00:14:30,959 --> 00:14:36,079
as we kind of dug into

00:14:32,480 --> 00:14:36,079
to solving or answering this question

00:14:37,440 --> 00:14:40,800
and there's some other interesting

00:14:38,560 --> 00:14:42,240
things i see here as well so for

00:14:40,800 --> 00:14:43,440
instance private cloud managed

00:14:42,240 --> 00:14:46,639
kubernetes

00:14:43,440 --> 00:14:48,800
and public cloud manage kubernetes so

00:14:46,639 --> 00:14:50,320
would someone like to talk about why

00:14:48,800 --> 00:14:51,360
these are grouped in these ways and

00:14:50,320 --> 00:14:53,040
maybe what

00:14:51,360 --> 00:14:54,880
i think public public cloud managed

00:14:53,040 --> 00:14:57,839
kubernetes is maybe

00:14:54,880 --> 00:14:59,279
understandable people knows know what

00:14:57,839 --> 00:15:00,480
that means but what is private cloud

00:14:59,279 --> 00:15:03,760
managed communities

00:15:00,480 --> 00:15:03,760
what kind of things fell into that

00:15:07,600 --> 00:15:10,639
yeah we can take that so what we have

00:15:10,160 --> 00:15:13,920
seen

00:15:10,639 --> 00:15:17,040
is that organizations with uh

00:15:13,920 --> 00:15:20,720
with a smaller amount of clusters

00:15:17,040 --> 00:15:21,839
um depend on on the the the regular

00:15:20,720 --> 00:15:25,519
installers

00:15:21,839 --> 00:15:29,279
like cops uh adm

00:15:25,519 --> 00:15:33,040
and and and others um we've seen that

00:15:29,279 --> 00:15:35,279
the when the number of cluster grows

00:15:33,040 --> 00:15:36,560
there's a tendency to move away from

00:15:35,279 --> 00:15:40,000
these installers

00:15:36,560 --> 00:15:43,360
and to use managed uh kubernetes

00:15:40,000 --> 00:15:44,560
services for organizations in in the in

00:15:43,360 --> 00:15:47,040
the public cloud

00:15:44,560 --> 00:15:47,680
that would be the um offerings from the

00:15:47,040 --> 00:15:50,079
uh

00:15:47,680 --> 00:15:52,000
public cloud providers for organizations

00:15:50,079 --> 00:15:54,959
than in in the uh

00:15:52,000 --> 00:15:55,920
with their own data centers not being in

00:15:54,959 --> 00:15:59,440
the in the

00:15:55,920 --> 00:16:03,199
in the cloud even those then tend to

00:15:59,440 --> 00:16:06,720
to use um packaged

00:16:03,199 --> 00:16:09,600
kubernetes offerings that um

00:16:06,720 --> 00:16:10,720
would be a managed kubernetes offering

00:16:09,600 --> 00:16:13,120
and resembles

00:16:10,720 --> 00:16:15,519
the ones that you would expect and see

00:16:13,120 --> 00:16:18,720
from from the from the public cloud

00:16:15,519 --> 00:16:19,440
so the pattern there is um either you're

00:16:18,720 --> 00:16:22,959
in the cloud

00:16:19,440 --> 00:16:25,440
or in your data centers the more

00:16:22,959 --> 00:16:26,959
clusters that you manage there's a

00:16:25,440 --> 00:16:31,600
tendency to move over to

00:16:26,959 --> 00:16:31,600
to manage kubernetes offerings

00:16:35,839 --> 00:16:40,000
another aspect that i saw here in in

00:16:38,320 --> 00:16:44,000
these results is that

00:16:40,000 --> 00:16:47,759
we compared also to the other radars is

00:16:44,000 --> 00:16:50,639
that we have the adopt sector

00:16:47,759 --> 00:16:51,920
pretty much filled while the other um

00:16:50,639 --> 00:16:54,000
sectors are

00:16:51,920 --> 00:16:55,759
a little bit empty compared to to the

00:16:54,000 --> 00:16:58,480
other radar

00:16:55,759 --> 00:16:59,759
and uh during our discussions we we said

00:16:58,480 --> 00:17:02,240
that this

00:16:59,759 --> 00:17:03,120
if you're operating kubernetes and if

00:17:02,240 --> 00:17:05,679
you're um

00:17:03,120 --> 00:17:06,880
in production with kubernetes you have

00:17:05,679 --> 00:17:11,039
found your

00:17:06,880 --> 00:17:14,079
your tool set and um you will

00:17:11,039 --> 00:17:16,079
then stick to that one and continue to

00:17:14,079 --> 00:17:18,079
work that with that one rather than

00:17:16,079 --> 00:17:20,400
experimenting a lot and switching

00:17:18,079 --> 00:17:21,120
a lot of these things out so it's either

00:17:20,400 --> 00:17:24,400
you're

00:17:21,120 --> 00:17:27,439
in the adopt phase and using those

00:17:24,400 --> 00:17:27,839
and perhaps you then look from time to

00:17:27,439 --> 00:17:33,200
time

00:17:27,839 --> 00:17:36,160
into the into the part of assess

00:17:33,200 --> 00:17:36,640
yeah and just to add to that i think uh

00:17:36,160 --> 00:17:38,640
respect

00:17:36,640 --> 00:17:41,039
whether it is private or public i think

00:17:38,640 --> 00:17:44,000
the key word there is managed

00:17:41,039 --> 00:17:44,400
um so as the number of clusters increase

00:17:44,000 --> 00:17:45,840
like

00:17:44,400 --> 00:17:47,679
the one way to look at it is like as the

00:17:45,840 --> 00:17:49,840
number of clusters increase your uh

00:17:47,679 --> 00:17:50,880
the complexity of managing control plane

00:17:49,840 --> 00:17:52,880
components uh

00:17:50,880 --> 00:17:55,280
hcd and stuff like that uh it's going to

00:17:52,880 --> 00:17:56,559
be tricky that's that's one aspect but

00:17:55,280 --> 00:17:57,760
but the other aspect at least from the

00:17:56,559 --> 00:18:00,559
fertility side uh

00:17:57,760 --> 00:18:01,280
what we looked at was uh we wanted to

00:18:00,559 --> 00:18:04,000
spend that

00:18:01,280 --> 00:18:05,600
time instead on that like spend on uh

00:18:04,000 --> 00:18:06,960
other stuff where we add like a lot of

00:18:05,600 --> 00:18:10,000
lot more features that will

00:18:06,960 --> 00:18:10,559
you know benefit uh the the application

00:18:10,000 --> 00:18:12,240
teams

00:18:10,559 --> 00:18:13,760
uh you know they'll things that will

00:18:12,240 --> 00:18:16,400
make it really easy

00:18:13,760 --> 00:18:17,840
for them to consume the technology so we

00:18:16,400 --> 00:18:21,039
we sort of chose a

00:18:17,840 --> 00:18:21,760
strategy to focus that time on those

00:18:21,039 --> 00:18:24,559
things

00:18:21,760 --> 00:18:25,919
uh you know so that things get better

00:18:24,559 --> 00:18:29,840
and easy for the app teams to

00:18:25,919 --> 00:18:29,840
sort of use the technology so

00:18:30,640 --> 00:18:34,400
yeah for sure sorry i'm just going to

00:18:33,520 --> 00:18:36,559
say um

00:18:34,400 --> 00:18:37,840
regarding the the radar itself and the

00:18:36,559 --> 00:18:41,440
fact that there's a lot of

00:18:37,840 --> 00:18:42,799
tools uh in adopt um we actually really

00:18:41,440 --> 00:18:44,960
challenged ourselves to

00:18:42,799 --> 00:18:46,720
on those assumptions of do these all

00:18:44,960 --> 00:18:47,280
need to be in adopt and why are there so

00:18:46,720 --> 00:18:49,520
many

00:18:47,280 --> 00:18:50,640
and i think it actually is a good way to

00:18:49,520 --> 00:18:53,520
visualize just

00:18:50,640 --> 00:18:55,600
um like how tricky this this problem

00:18:53,520 --> 00:18:59,600
still is this cluster management

00:18:55,600 --> 00:19:01,600
issue and um i think over time we'll see

00:18:59,600 --> 00:19:04,320
other things change but

00:19:01,600 --> 00:19:06,640
right now you can see that it was almost

00:19:04,320 --> 00:19:08,160
in a way sort of a forced adoption where

00:19:06,640 --> 00:19:10,240
you have all these tools and they help

00:19:08,160 --> 00:19:11,120
you in a very specific way sometimes in

00:19:10,240 --> 00:19:14,320
a couple ways

00:19:11,120 --> 00:19:16,000
but you can't really get the whole issue

00:19:14,320 --> 00:19:17,280
taken care of with just like one or two

00:19:16,000 --> 00:19:19,120
tools and then maybe

00:19:17,280 --> 00:19:20,880
you're you know assessing another three

00:19:19,120 --> 00:19:22,960
or four you sort of were

00:19:20,880 --> 00:19:24,640
pushed into a spot where you needed a

00:19:22,960 --> 00:19:26,080
lot of them and that's why

00:19:24,640 --> 00:19:28,880
i think a lot of them ended up in the

00:19:26,080 --> 00:19:28,880
adopt circle

00:19:29,520 --> 00:19:33,280
yeah exactly and i think both of these

00:19:32,080 --> 00:19:36,320
raiders have

00:19:33,280 --> 00:19:38,000
in the adopt section um you know custom

00:19:36,320 --> 00:19:41,039
in-house tools i think that kind of ties

00:19:38,000 --> 00:19:43,440
back to our earlier point where um

00:19:41,039 --> 00:19:44,320
we don't there isn't a clear-cut winner

00:19:43,440 --> 00:19:46,559
yet um

00:19:44,320 --> 00:19:47,919
so i think folks are trying to bridge

00:19:46,559 --> 00:19:51,440
that gap

00:19:47,919 --> 00:19:52,799
where possible or where needed

00:19:51,440 --> 00:19:55,280
yeah and to give a little bit more

00:19:52,799 --> 00:19:58,320
details on that so

00:19:55,280 --> 00:19:58,640
in the answers that we have seen is even

00:19:58,320 --> 00:20:01,840
for

00:19:58,640 --> 00:20:04,720
um organizations choosing the

00:20:01,840 --> 00:20:07,120
the managed kubernetes offerings they

00:20:04,720 --> 00:20:07,679
were like a hundred percent overlap to

00:20:07,120 --> 00:20:10,240
um

00:20:07,679 --> 00:20:11,120
to custom in-house tools so while you're

00:20:10,240 --> 00:20:14,240
still

00:20:11,120 --> 00:20:15,440
um using and trying to to get the

00:20:14,240 --> 00:20:18,480
benefits out of

00:20:15,440 --> 00:20:21,280
a managed service it's it's not enough

00:20:18,480 --> 00:20:21,919
the managed service does only provide so

00:20:21,280 --> 00:20:24,799
much

00:20:21,919 --> 00:20:26,559
that you need to uh complement it with

00:20:24,799 --> 00:20:30,080
custom in-house tools

00:20:26,559 --> 00:20:33,200
that um help you to

00:20:30,080 --> 00:20:37,360
to do the the work and the and the setup

00:20:33,200 --> 00:20:37,360
that is needed for your own organization

00:20:38,080 --> 00:20:42,640
awesome um this is really great

00:20:40,000 --> 00:20:42,960
commentary um i just want to move on now

00:20:42,640 --> 00:20:45,280
to

00:20:42,960 --> 00:20:46,400
the specific themes that we pulled out

00:20:45,280 --> 00:20:47,600
of this and

00:20:46,400 --> 00:20:49,840
look into those in a little bit more

00:20:47,600 --> 00:20:49,840
detail

00:20:50,640 --> 00:20:54,320
so the first thing was there is no

00:20:52,720 --> 00:20:56,400
silver bullet for multi-cluster

00:20:54,320 --> 00:20:58,720
management

00:20:56,400 --> 00:21:00,080
yeah this can be summarized as gabe said

00:20:58,720 --> 00:21:03,280
this um

00:21:00,080 --> 00:21:04,559
while there are these tools um there is

00:21:03,280 --> 00:21:07,600
no clear winner

00:21:04,559 --> 00:21:11,200
and you need to have um

00:21:07,600 --> 00:21:14,000
a combination of tools to do the

00:21:11,200 --> 00:21:15,200
the setup that is required for your

00:21:14,000 --> 00:21:18,960
environment

00:21:15,200 --> 00:21:20,320
as well as with the as i said just a

00:21:18,960 --> 00:21:23,679
couple of minutes before

00:21:20,320 --> 00:21:27,120
with the managed kubernetes service

00:21:23,679 --> 00:21:28,320
they they cannot or they are not giving

00:21:27,120 --> 00:21:31,440
you the silver bullet

00:21:28,320 --> 00:21:34,240
you need to complement this with with

00:21:31,440 --> 00:21:35,280
extra tools or with extra custom

00:21:34,240 --> 00:21:38,559
in-house develop

00:21:35,280 --> 00:21:41,679
tools to do that to um

00:21:38,559 --> 00:21:43,919
overcome the the the lacking features

00:21:41,679 --> 00:21:45,360
the lacking possibilities of what is out

00:21:43,919 --> 00:21:47,360
there

00:21:45,360 --> 00:21:49,840
the other thing is also since there are

00:21:47,360 --> 00:21:52,880
so many tools required for this

00:21:49,840 --> 00:21:55,360
is that um it feels like that

00:21:52,880 --> 00:21:57,280
you need to come with your own glue to

00:21:55,360 --> 00:21:58,640
put these things together so that they

00:21:57,280 --> 00:22:01,520
stick together

00:21:58,640 --> 00:22:01,520
and work together

00:22:03,200 --> 00:22:06,960
yeah i saw a lot of nodding heads there

00:22:05,039 --> 00:22:10,000
with them you need to glue everything

00:22:06,960 --> 00:22:12,559
together yeah i

00:22:10,000 --> 00:22:14,640
definitely agree with that and i think

00:22:12,559 --> 00:22:16,720
going back to the idea of the hidden gem

00:22:14,640 --> 00:22:17,919
it i i think it basically ties directly

00:22:16,720 --> 00:22:19,760
to this point so we're all sort of

00:22:17,919 --> 00:22:21,280
hoping maybe there's a silver bullet out

00:22:19,760 --> 00:22:22,400
there or something that's at least a

00:22:21,280 --> 00:22:25,360
little bit closer to that

00:22:22,400 --> 00:22:27,200
that we could all start using um and

00:22:25,360 --> 00:22:28,159
yeah i don't think we necessarily saw

00:22:27,200 --> 00:22:30,080
that pop up but

00:22:28,159 --> 00:22:31,600
i definitely agree that the one of the

00:22:30,080 --> 00:22:35,120
common themes was that glue

00:22:31,600 --> 00:22:35,120
as suspension is a really good point

00:22:35,280 --> 00:22:41,039
yeah i mean a lot of this you know

00:22:38,720 --> 00:22:42,320
and this is kind of where i think it it

00:22:41,039 --> 00:22:43,760
matters for

00:22:42,320 --> 00:22:45,919
this maybe the sector or the industry

00:22:43,760 --> 00:22:47,520
you're in or or the company and uh

00:22:45,919 --> 00:22:49,039
that has certain rule sets etcetera

00:22:47,520 --> 00:22:51,520
right so fidelity

00:22:49,039 --> 00:22:53,120
um you know we have lots of regulations

00:22:51,520 --> 00:22:55,679
and security concerns so

00:22:53,120 --> 00:22:57,360
part of that part of the glue is to

00:22:55,679 --> 00:22:59,120
handle some of these

00:22:57,360 --> 00:23:01,679
i know different companies have

00:22:59,120 --> 00:23:04,559
different hierarchies of how they set up

00:23:01,679 --> 00:23:05,600
accounts or subscriptions right etc so

00:23:04,559 --> 00:23:09,280
all that kind of

00:23:05,600 --> 00:23:12,559
ties back to um needing some custom

00:23:09,280 --> 00:23:16,640
tooling or glue that to kind of mesh

00:23:12,559 --> 00:23:16,640
a couple tool kits together

00:23:18,799 --> 00:23:23,679
cool okay let's go on to the next

00:23:22,240 --> 00:23:25,520
topic which you've discussed a little

00:23:23,679 --> 00:23:26,880
bit already cluster management often

00:23:25,520 --> 00:23:30,240
requires custom

00:23:26,880 --> 00:23:32,159
house custom built in-house solutions

00:23:30,240 --> 00:23:34,320
maybe um i'd like to know a little bit

00:23:32,159 --> 00:23:37,520
more about like what

00:23:34,320 --> 00:23:39,600
what are those solutions like

00:23:37,520 --> 00:23:40,799
what are you building for yeah i can i

00:23:39,600 --> 00:23:44,080
can probably start with that

00:23:40,799 --> 00:23:46,159
so um yeah typically right so uh when

00:23:44,080 --> 00:23:48,240
the problem statement is clearly defined

00:23:46,159 --> 00:23:49,600
uh though you start off with number of

00:23:48,240 --> 00:23:50,720
tools then over a period of time you'll

00:23:49,600 --> 00:23:52,080
[Music]

00:23:50,720 --> 00:23:54,320
you'll see clear winners but in this

00:23:52,080 --> 00:23:54,799
case i think the problem statement

00:23:54,320 --> 00:23:56,640
itself

00:23:54,799 --> 00:23:58,240
stretches a little bit here and there

00:23:56,640 --> 00:23:58,960
depending on the company policies and

00:23:58,240 --> 00:24:01,520
stuff like that

00:23:58,960 --> 00:24:02,080
so i'll give you some examples so for

00:24:01,520 --> 00:24:03,440
example

00:24:02,080 --> 00:24:05,919
some sort of companies might take an

00:24:03,440 --> 00:24:06,559
approach where the the app teams might

00:24:05,919 --> 00:24:08,640
actually go

00:24:06,559 --> 00:24:10,159
uh get the cluster and then they sort of

00:24:08,640 --> 00:24:11,360
manage it from there so they just go to

00:24:10,159 --> 00:24:13,360
the central team just to

00:24:11,360 --> 00:24:14,640
get the cluster provision uh you have

00:24:13,360 --> 00:24:17,200
the other set of uh

00:24:14,640 --> 00:24:18,799
you know teams where they want the

00:24:17,200 --> 00:24:20,559
central team to manage the entire

00:24:18,799 --> 00:24:21,120
platform for example infidelity right

00:24:20,559 --> 00:24:23,440
the reason

00:24:21,120 --> 00:24:24,320
to have the custom um you know so in

00:24:23,440 --> 00:24:26,799
solutions

00:24:24,320 --> 00:24:28,080
so we sort of took an approach where

00:24:26,799 --> 00:24:29,039
instead of looking at clusters

00:24:28,080 --> 00:24:31,279
separately

00:24:29,039 --> 00:24:33,200
add-ons and the features that you add on

00:24:31,279 --> 00:24:35,120
uh that separately we sort of

00:24:33,200 --> 00:24:37,039
uh decided to look at it as like one

00:24:35,120 --> 00:24:38,559
platform so what i mean by that is from

00:24:37,039 --> 00:24:39,520
from an application teams or development

00:24:38,559 --> 00:24:41,200
team standpoint they

00:24:39,520 --> 00:24:42,720
they look at like one platform version

00:24:41,200 --> 00:24:45,120
they say a uh

00:24:42,720 --> 00:24:46,480
fidelity platform version 1.0 and that

00:24:45,120 --> 00:24:49,039
behind the scenes could be like

00:24:46,480 --> 00:24:49,760
one one eighteen kubernetes cluster uh a

00:24:49,039 --> 00:24:51,919
set of ad

00:24:49,760 --> 00:24:53,039
specific version of add-ons a specific

00:24:51,919 --> 00:24:55,039
set of uh

00:24:53,039 --> 00:24:56,720
you know uh infrastructure setup and

00:24:55,039 --> 00:24:57,679
stuff like that so if you want to put

00:24:56,720 --> 00:25:00,640
all these things

00:24:57,679 --> 00:25:02,320
together uh you you sort of go down the

00:25:00,640 --> 00:25:03,840
githubs route and stuff like that so

00:25:02,320 --> 00:25:05,760
in our case we sort of came up with like

00:25:03,840 --> 00:25:07,520
a custom solution where teams can just

00:25:05,760 --> 00:25:09,679
go and describe what they need and

00:25:07,520 --> 00:25:10,720
like plain yaml files and behind the

00:25:09,679 --> 00:25:13,279
scenes like

00:25:10,720 --> 00:25:15,039
uh we use like a lot of other a lot of

00:25:13,279 --> 00:25:16,720
these tools behind the scenes work

00:25:15,039 --> 00:25:18,640
together to make that happen so that is

00:25:16,720 --> 00:25:20,559
one example the other one is

00:25:18,640 --> 00:25:21,760
uh we sort of decided to take the

00:25:20,559 --> 00:25:24,240
infrastructure uh

00:25:21,760 --> 00:25:25,760
setup sort of into account for example

00:25:24,240 --> 00:25:27,520
uh one of the tools that we build

00:25:25,760 --> 00:25:29,120
uh along with the cluster proportion it

00:25:27,520 --> 00:25:29,840
sort of does the infrastructure set up

00:25:29,120 --> 00:25:31,279
like it

00:25:29,840 --> 00:25:32,880
it executes the cloud formation

00:25:31,279 --> 00:25:34,559
templates and stuff like that

00:25:32,880 --> 00:25:36,000
but the main point here is the the

00:25:34,559 --> 00:25:38,720
versioning is like map

00:25:36,000 --> 00:25:40,240
so this particular uh sort of the

00:25:38,720 --> 00:25:41,760
cluster provisioning works with

00:25:40,240 --> 00:25:43,360
these set of cloud server cloud

00:25:41,760 --> 00:25:45,440
formation templates right the the

00:25:43,360 --> 00:25:46,640
specific way you set up ppcs and stuff

00:25:45,440 --> 00:25:47,279
like that everything is like washing

00:25:46,640 --> 00:25:48,640
control

00:25:47,279 --> 00:25:50,240
i'll give you another example which we

00:25:48,640 --> 00:25:51,120
have done it's an open source tool from

00:25:50,240 --> 00:25:53,679
our site

00:25:51,120 --> 00:25:54,720
uh we we wanted to we wanted a tool

00:25:53,679 --> 00:25:57,279
where

00:25:54,720 --> 00:25:58,799
uh developers can simply plug in their

00:25:57,279 --> 00:26:00,480
active directory credentials

00:25:58,799 --> 00:26:02,080
all they have an identity which is the

00:26:00,480 --> 00:26:05,679
active directory credentials

00:26:02,080 --> 00:26:07,840
simply by plugging in we want them to uh

00:26:05,679 --> 00:26:10,159
get access to the cluster so in our case

00:26:07,840 --> 00:26:11,600
we have a tool called k connect so

00:26:10,159 --> 00:26:13,840
developers sort of

00:26:11,600 --> 00:26:15,200
plug in their ad credentials and then it

00:26:13,840 --> 00:26:16,960
automatically behind the scenes goes and

00:26:15,200 --> 00:26:18,480
figures out based on their credentials

00:26:16,960 --> 00:26:21,120
what sort of clusters they have

00:26:18,480 --> 00:26:22,799
access they have to clusters across

00:26:21,120 --> 00:26:24,080
clouds so it automatically

00:26:22,799 --> 00:26:25,840
lists hey you have access in five

00:26:24,080 --> 00:26:27,360
clusters in aws two clusters in azure

00:26:25,840 --> 00:26:28,880
and like five clusters in brancher

00:26:27,360 --> 00:26:31,039
and they just select one and then behind

00:26:28,880 --> 00:26:32,240
the scenes it it wires the connection so

00:26:31,039 --> 00:26:33,919
they don't have to manage

00:26:32,240 --> 00:26:35,600
coupe config you know and stuff like

00:26:33,919 --> 00:26:37,039
that so this this

00:26:35,600 --> 00:26:38,320
this this might be trivial if you have

00:26:37,039 --> 00:26:39,919
like a five member team but when you're

00:26:38,320 --> 00:26:41,679
talking about like 10 000

00:26:39,919 --> 00:26:43,200
developers in an organization even small

00:26:41,679 --> 00:26:45,840
things like this

00:26:43,200 --> 00:26:46,320
makes like significant values right um

00:26:45,840 --> 00:26:48,080
so

00:26:46,320 --> 00:26:49,919
uh yeah these are some of the examples

00:26:48,080 --> 00:26:51,520
where you still need like custom build

00:26:49,919 --> 00:26:54,720
you know you know solutions

00:26:51,520 --> 00:26:54,720
i don't know if others want to add

00:26:56,559 --> 00:27:03,039
at manormost we had to develop a tool um

00:27:00,400 --> 00:27:04,400
to basically allow us to scale our sort

00:27:03,039 --> 00:27:06,720
of custom clusters so

00:27:04,400 --> 00:27:08,240
we for the majority of our workloads

00:27:06,720 --> 00:27:10,640
decided not to use

00:27:08,240 --> 00:27:12,799
a managed solution and we used cops

00:27:10,640 --> 00:27:14,159
which is fairly flexible but

00:27:12,799 --> 00:27:16,080
if you're not familiar cops allows you

00:27:14,159 --> 00:27:16,960
to just sort of pick a public cloud and

00:27:16,080 --> 00:27:18,960
deploy

00:27:16,960 --> 00:27:20,559
kubernetes cluster there but one of the

00:27:18,960 --> 00:27:22,640
things that is sort of

00:27:20,559 --> 00:27:24,080
um inherent with cops is that you just

00:27:22,640 --> 00:27:24,640
run these commands and you manage it

00:27:24,080 --> 00:27:26,240
that way

00:27:24,640 --> 00:27:27,919
and we needed to scale so we need to

00:27:26,240 --> 00:27:29,360
build a bunch of clusters we need to

00:27:27,919 --> 00:27:31,600
upgrade them and manage them

00:27:29,360 --> 00:27:33,039
possibly in parallel so we we developed

00:27:31,600 --> 00:27:34,240
this thing we call the cloud provisioner

00:27:33,039 --> 00:27:36,159
and yeah it was

00:27:34,240 --> 00:27:37,840
our custom tool and our way around this

00:27:36,159 --> 00:27:40,720
problem of how do we sort of

00:27:37,840 --> 00:27:42,240
like retain control you know we can

00:27:40,720 --> 00:27:44,080
choose our kubernetes version and like

00:27:42,240 --> 00:27:45,200
we have access to the master nodes and

00:27:44,080 --> 00:27:47,039
some of these things you have to give up

00:27:45,200 --> 00:27:48,720
if you do go with a managed solution so

00:27:47,039 --> 00:27:50,159
how do we keep all of that and that was

00:27:48,720 --> 00:27:50,480
that was where the glue came in we had

00:27:50,159 --> 00:27:52,399
to

00:27:50,480 --> 00:27:54,960
to sort of build this tool to do that

00:27:52,399 --> 00:27:56,399
and you know it works fairly well allows

00:27:54,960 --> 00:27:58,640
you to scale but

00:27:56,399 --> 00:28:00,559
it just shows you like the tools need

00:27:58,640 --> 00:28:01,279
help to kind of get them to a spot where

00:28:00,559 --> 00:28:04,880
maybe they're

00:28:01,279 --> 00:28:04,880
as useful as they could possibly be

00:28:07,520 --> 00:28:12,720
cool all right let's go on to the next

00:28:10,880 --> 00:28:14,320
one

00:28:12,720 --> 00:28:16,559
all right common tool combinations

00:28:14,320 --> 00:28:20,799
include helm with operators

00:28:16,559 --> 00:28:20,799
and githubs with argo slash flux

00:28:24,159 --> 00:28:27,760
think niraj do you want to start on this

00:28:26,960 --> 00:28:29,919
yeah sure

00:28:27,760 --> 00:28:31,760
um so i think this goes back to the

00:28:29,919 --> 00:28:34,720
second radar right um so

00:28:31,760 --> 00:28:35,679
at a certain point in time um at least

00:28:34,720 --> 00:28:37,200
at fidelity

00:28:35,679 --> 00:28:38,799
once the infrastructure piece and the

00:28:37,200 --> 00:28:41,520
cluster's there um

00:28:38,799 --> 00:28:42,799
we augment um the cluster with um as

00:28:41,520 --> 00:28:44,960
part of the platform with the

00:28:42,799 --> 00:28:46,240
it's a bunch of stuff um first and

00:28:44,960 --> 00:28:48,320
foremost comes um

00:28:46,240 --> 00:28:49,600
certain security and our back that we

00:28:48,320 --> 00:28:51,919
apply um

00:28:49,600 --> 00:28:53,200
then there's other other operators that

00:28:51,919 --> 00:28:55,760
we've custom built

00:28:53,200 --> 00:28:58,399
um there's you know uh ingress

00:28:55,760 --> 00:28:59,760
controllers in terms of um how to

00:28:58,399 --> 00:29:01,600
you know get connected into a cluster

00:28:59,760 --> 00:29:04,799
etc etc so um

00:29:01,600 --> 00:29:07,919
all these things um from a post

00:29:04,799 --> 00:29:09,440
provisioning or post um day two action

00:29:07,919 --> 00:29:10,240
on the cluster itself the infrastructure

00:29:09,440 --> 00:29:13,279
piece of it

00:29:10,240 --> 00:29:16,320
um we actually handled today with um

00:29:13,279 --> 00:29:19,840
uh get ops and use flux so

00:29:16,320 --> 00:29:22,720
um you know we have uh certain repos um

00:29:19,840 --> 00:29:25,440
you know uh at felidae that manage uh

00:29:22,720 --> 00:29:29,200
based off versioning of platforms

00:29:25,440 --> 00:29:33,600
that will then um you make use of flux

00:29:29,200 --> 00:29:33,600
and helm to um you know

00:29:34,159 --> 00:29:39,600
push basically a set of um

00:29:37,440 --> 00:29:40,880
add-ons to a cluster and get it to a

00:29:39,600 --> 00:29:43,919
proper state so

00:29:40,880 --> 00:29:44,240
this makes use of the kubernetes um you

00:29:43,919 --> 00:29:47,360
know

00:29:44,240 --> 00:29:48,080
declarative fashion and really works

00:29:47,360 --> 00:29:50,799
well for us

00:29:48,080 --> 00:29:50,799
and at scale

00:29:52,240 --> 00:29:56,320
gabe or federico is get up something

00:29:54,559 --> 00:29:59,520
that you use

00:29:56,320 --> 00:30:03,120
we use it perhaps partly not

00:29:59,520 --> 00:30:05,440
directly with our argon flux but um

00:30:03,120 --> 00:30:07,279
what i also wanted to mention is from

00:30:05,440 --> 00:30:08,880
the answers there is like

00:30:07,279 --> 00:30:11,919
where you have seen is on the cluster

00:30:08,880 --> 00:30:14,240
provisioning uh part

00:30:11,919 --> 00:30:16,080
organizations tending to use um the the

00:30:14,240 --> 00:30:20,480
the managed kubernetes and then

00:30:16,080 --> 00:30:23,600
um gluing it together with their custom

00:30:20,480 --> 00:30:26,559
in-house tools this even goes on to the

00:30:23,600 --> 00:30:28,080
to the um day two services to the core

00:30:26,559 --> 00:30:30,720
services to the add-ons

00:30:28,080 --> 00:30:32,080
a naked cluster cannot be used by any

00:30:30,720 --> 00:30:35,919
organizations

00:30:32,080 --> 00:30:37,440
um there's observability that needs to

00:30:35,919 --> 00:30:40,559
be added on our back

00:30:37,440 --> 00:30:42,960
um ingress and and and

00:30:40,559 --> 00:30:44,240
those instead of being that the managed

00:30:42,960 --> 00:30:47,679
communities there

00:30:44,240 --> 00:30:51,039
you will see that um organizations

00:30:47,679 --> 00:30:54,720
use the the project provided

00:30:51,039 --> 00:30:58,080
helm charts but that is not enough again

00:30:54,720 --> 00:31:00,640
um you glue those together with

00:30:58,080 --> 00:31:02,960
custom in-house tools which could be in

00:31:00,640 --> 00:31:06,559
most cases and the operators

00:31:02,960 --> 00:31:09,039
so um the same problem for provisioning

00:31:06,559 --> 00:31:11,200
the cluster exists then on the on the

00:31:09,039 --> 00:31:12,880
on the other side of the core services

00:31:11,200 --> 00:31:14,640
and add-ons

00:31:12,880 --> 00:31:16,000
they need to be combined they need to be

00:31:14,640 --> 00:31:18,240
adapted to the

00:31:16,000 --> 00:31:20,000
requirements of the organizations using

00:31:18,240 --> 00:31:23,360
them and there is no

00:31:20,000 --> 00:31:27,360
no standard way of really doing it

00:31:23,360 --> 00:31:29,760
unless you see the um operator pattern

00:31:27,360 --> 00:31:30,960
becoming a standard but there are so

00:31:29,760 --> 00:31:34,240
many operators

00:31:30,960 --> 00:31:37,120
and there's also in in so many ways

00:31:34,240 --> 00:31:39,360
configured differently

00:31:37,120 --> 00:31:41,120
this is a good point to jump to the

00:31:39,360 --> 00:31:44,720
fourth one which mentions

00:31:41,120 --> 00:31:48,159
operators so we did see operators

00:31:44,720 --> 00:31:51,440
as quite popular a lot of people voted

00:31:48,159 --> 00:31:54,000
for adopt place them in adopt

00:31:51,440 --> 00:31:55,120
so what do you think why have operators

00:31:54,000 --> 00:31:58,640
become

00:31:55,120 --> 00:32:00,000
so successful maybe i'll start off with

00:31:58,640 --> 00:32:02,159
an example it's an interesting

00:32:00,000 --> 00:32:03,039
example and then i think we just can

00:32:02,159 --> 00:32:06,159
follow up with that

00:32:03,039 --> 00:32:08,720
so uh we had a requirement um where

00:32:06,159 --> 00:32:10,399
teams had to do exec into pods in

00:32:08,720 --> 00:32:12,559
production so typically it's not allowed

00:32:10,399 --> 00:32:14,240
at least in our case but we had some

00:32:12,559 --> 00:32:17,279
really interesting use cases which

00:32:14,240 --> 00:32:18,799
basically warranted for that so um it

00:32:17,279 --> 00:32:19,600
was very difficult thing to because

00:32:18,799 --> 00:32:22,640
typically when you

00:32:19,600 --> 00:32:24,240
when you do an exec then it's the

00:32:22,640 --> 00:32:25,840
connection stays forever and stuff like

00:32:24,240 --> 00:32:27,279
that it's a tricky problem so one of the

00:32:25,840 --> 00:32:28,880
ways we solved it is

00:32:27,279 --> 00:32:30,799
we sort of have an operator in our

00:32:28,880 --> 00:32:31,600
platform which is there in like all the

00:32:30,799 --> 00:32:35,360
clusters

00:32:31,600 --> 00:32:37,760
uh where teams can actually go and uh

00:32:35,360 --> 00:32:39,440
request an exact pass so basically they

00:32:37,760 --> 00:32:40,640
just submit like yammer file which is

00:32:39,440 --> 00:32:43,200
like kind exact pass

00:32:40,640 --> 00:32:43,840
and they say i need like one like few

00:32:43,200 --> 00:32:45,840
minutes of

00:32:43,840 --> 00:32:47,440
exec access or stuff like that and then

00:32:45,840 --> 00:32:50,559
behind the scenes an operator actually

00:32:47,440 --> 00:32:51,039
gives the exec access to the specific

00:32:50,559 --> 00:32:53,279
team

00:32:51,039 --> 00:32:54,880
and then takes it away uh you know after

00:32:53,279 --> 00:32:58,320
like certain number of minutes

00:32:54,880 --> 00:32:59,200
so uh without operator achieving

00:32:58,320 --> 00:33:00,640
something like this

00:32:59,200 --> 00:33:02,799
it's going to be really really tricky we

00:33:00,640 --> 00:33:03,760
did think about having an api first

00:33:02,799 --> 00:33:05,279
where they call

00:33:03,760 --> 00:33:06,799
but the moment you have an api you have

00:33:05,279 --> 00:33:08,399
the authentication authorization thing

00:33:06,799 --> 00:33:10,880
that you need to take care of

00:33:08,399 --> 00:33:11,679
but with operator we can easily tie into

00:33:10,880 --> 00:33:14,000
the uh

00:33:11,679 --> 00:33:15,120
our back model kubernetes armor model so

00:33:14,000 --> 00:33:16,960
if somebody can

00:33:15,120 --> 00:33:18,320
submit a request for exec pass which is

00:33:16,960 --> 00:33:21,039
like the kind yaml file

00:33:18,320 --> 00:33:23,039
the exact saml file then we know that uh

00:33:21,039 --> 00:33:25,760
kubernetes has you know allowed

00:33:23,039 --> 00:33:27,039
uh allowed them to create it you know it

00:33:25,760 --> 00:33:28,559
has gone through the kubernetes and back

00:33:27,039 --> 00:33:31,679
so we can tie into that

00:33:28,559 --> 00:33:33,200
so uh i i felt i sort of wanted to start

00:33:31,679 --> 00:33:34,080
off with an example so that it becomes

00:33:33,200 --> 00:33:35,600
much more clearer

00:33:34,080 --> 00:33:38,000
i don't know if you want to add

00:33:35,600 --> 00:33:38,399
something to it yeah no i would just say

00:33:38,000 --> 00:33:42,000
i mean

00:33:38,399 --> 00:33:42,799
i think um we have uh that's one example

00:33:42,000 --> 00:33:44,640
i think we've

00:33:42,799 --> 00:33:46,080
uh have at least four or five operators

00:33:44,640 --> 00:33:47,519
that we've built in-house i think we've

00:33:46,080 --> 00:33:50,960
open-sourced one of them

00:33:47,519 --> 00:33:53,360
um i i think operators are are kind of

00:33:50,960 --> 00:33:54,159
uh the standard way to automate and kind

00:33:53,360 --> 00:33:57,039
of target

00:33:54,159 --> 00:33:58,240
concise uh tasks right to complete

00:33:57,039 --> 00:34:01,600
within a cluster

00:33:58,240 --> 00:34:04,399
um so i i think um

00:34:01,600 --> 00:34:05,039
i see uh i mean from a from a community

00:34:04,399 --> 00:34:09,280
perspective

00:34:05,039 --> 00:34:11,200
i think almost everything uh or almost

00:34:09,280 --> 00:34:12,560
all the new new things at least all have

00:34:11,200 --> 00:34:15,280
operators associated with them

00:34:12,560 --> 00:34:16,000
um i've seen stuff for kafka etc

00:34:15,280 --> 00:34:20,399
right so

00:34:16,000 --> 00:34:22,079
operators really make it easy to um uh

00:34:20,399 --> 00:34:23,760
and mask some of the complexity that

00:34:22,079 --> 00:34:26,480
normally would would appear

00:34:23,760 --> 00:34:27,520
all right so instead of having to uh

00:34:26,480 --> 00:34:30,480
maintain

00:34:27,520 --> 00:34:31,839
or manage an entire kafka cluster um you

00:34:30,480 --> 00:34:34,159
can have an operator that

00:34:31,839 --> 00:34:35,040
really constructs um the cluster itself

00:34:34,159 --> 00:34:38,159
for you

00:34:35,040 --> 00:34:39,839
um so i i think um uh

00:34:38,159 --> 00:34:41,919
we've also i think to rogers earlier

00:34:39,839 --> 00:34:44,320
point use operators to um

00:34:41,919 --> 00:34:45,280
facilitate some of um of the work within

00:34:44,320 --> 00:34:48,159
a cluster so

00:34:45,280 --> 00:34:49,760
we have tiers of authority within a

00:34:48,159 --> 00:34:52,480
cluster so there might be a

00:34:49,760 --> 00:34:54,560
a business unit cluster administrator

00:34:52,480 --> 00:34:58,160
that may be able to do certain things

00:34:54,560 --> 00:35:01,440
whereas normal

00:34:58,160 --> 00:35:03,599
like a namespace admin cannot so

00:35:01,440 --> 00:35:04,720
tying our back to operators is really

00:35:03,599 --> 00:35:08,240
easy um

00:35:04,720 --> 00:35:09,920
and with with custom resources etc i

00:35:08,240 --> 00:35:13,359
think it's extremely extensible

00:35:09,920 --> 00:35:13,359
so i think that's really beneficial for

00:35:14,839 --> 00:35:17,520
us

00:35:16,079 --> 00:35:19,839
cool and you made a good point there

00:35:17,520 --> 00:35:20,640
about custom or in-house operators

00:35:19,839 --> 00:35:22,480
versus

00:35:20,640 --> 00:35:25,040
the operators that are available widely

00:35:22,480 --> 00:35:27,040
i don't think we distinguish them

00:35:25,040 --> 00:35:28,240
um on the radar itself but that's

00:35:27,040 --> 00:35:31,839
something to

00:35:28,240 --> 00:35:31,839
look out for as well

00:35:32,160 --> 00:35:35,520
yeah the um during our discussion it was

00:35:34,320 --> 00:35:39,119
mentioned also like

00:35:35,520 --> 00:35:41,839
the operator is the the resident expert

00:35:39,119 --> 00:35:44,560
that lives in for that piece of software

00:35:41,839 --> 00:35:47,200
that lives in the cluster and

00:35:44,560 --> 00:35:48,560
you can talk to that resident expert the

00:35:47,200 --> 00:35:51,119
operator

00:35:48,560 --> 00:35:53,920
in the same way as you do all other

00:35:51,119 --> 00:35:56,960
things in kubernetes with the same

00:35:53,920 --> 00:35:59,839
declarative way of

00:35:56,960 --> 00:36:01,040
of writing your your deployments your

00:35:59,839 --> 00:36:04,480
your services

00:36:01,040 --> 00:36:07,440
you you you control the the the

00:36:04,480 --> 00:36:09,119
operator the expert in in the same way

00:36:07,440 --> 00:36:13,119
which makes it um

00:36:09,119 --> 00:36:16,240
a a common pattern to do

00:36:13,119 --> 00:36:18,160
and then that is something that um that

00:36:16,240 --> 00:36:20,000
makes it also easier to to switch from

00:36:18,160 --> 00:36:23,119
one task to the other task

00:36:20,000 --> 00:36:27,839
when you operate and manage a a

00:36:23,119 --> 00:36:27,839
large scale of environments

00:36:28,800 --> 00:36:33,280
cool and let's oh sorry come on yeah one

00:36:31,760 --> 00:36:35,119
point i wanted to add i just wanted to

00:36:33,280 --> 00:36:35,680
talk a little bit about the downside as

00:36:35,119 --> 00:36:38,240
well

00:36:35,680 --> 00:36:39,760
it's it's not like um it's an easy thing

00:36:38,240 --> 00:36:43,040
to do as well

00:36:39,760 --> 00:36:44,880
so there is a decent learning curve i

00:36:43,040 --> 00:36:46,000
would say initially but one when you

00:36:44,880 --> 00:36:48,640
when you get past that

00:36:46,000 --> 00:36:49,839
things become okay uh but but there are

00:36:48,640 --> 00:36:52,880
some things which

00:36:49,839 --> 00:36:55,359
are not straightforward for example uh

00:36:52,880 --> 00:36:56,960
you your your uh versioning and stuff

00:36:55,359 --> 00:36:58,640
like that for example let's say

00:36:56,960 --> 00:37:00,640
um you you bring up with your first

00:36:58,640 --> 00:37:02,480
version of your custom resource

00:37:00,640 --> 00:37:03,760
and then uh you want to make some

00:37:02,480 --> 00:37:06,240
changes on top of

00:37:03,760 --> 00:37:07,520
it so the migration it really depends on

00:37:06,240 --> 00:37:08,160
like what sort of changes and stuff like

00:37:07,520 --> 00:37:09,599
that but

00:37:08,160 --> 00:37:12,240
especially when you have like a lot of

00:37:09,599 --> 00:37:13,680
clusters uh and people are already using

00:37:12,240 --> 00:37:17,440
like one version of it

00:37:13,680 --> 00:37:19,040
uh the migration of the uh one one

00:37:17,440 --> 00:37:21,599
custom resource version to another and

00:37:19,040 --> 00:37:23,520
stuff like that uh it's doable yes uh

00:37:21,599 --> 00:37:25,520
but it's not very straightforward

00:37:23,520 --> 00:37:27,040
so sometimes you might have to sort of

00:37:25,520 --> 00:37:30,079
want to uh

00:37:27,040 --> 00:37:30,960
take a look at like the the the

00:37:30,079 --> 00:37:33,599
complexity of

00:37:30,960 --> 00:37:35,200
it versus the benefit uh you get out of

00:37:33,599 --> 00:37:36,000
it so if you just have like a handful of

00:37:35,200 --> 00:37:37,599
clusters maybe

00:37:36,000 --> 00:37:38,960
there is a different way which might be

00:37:37,599 --> 00:37:39,920
easy for you right maybe you don't need

00:37:38,960 --> 00:37:41,760
an operator

00:37:39,920 --> 00:37:43,119
so but in our case like given the number

00:37:41,760 --> 00:37:44,640
of clusters we have and the number of

00:37:43,119 --> 00:37:46,480
developers it was like

00:37:44,640 --> 00:37:47,920
you know straightforward choice but

00:37:46,480 --> 00:37:48,800
there are times where you definitely

00:37:47,920 --> 00:37:50,880
want to look at

00:37:48,800 --> 00:37:52,480
what benefit you get out of it versus

00:37:50,880 --> 00:37:54,400
the complexity of like managing it and

00:37:52,480 --> 00:37:56,240
then you really have to take a call so

00:37:54,400 --> 00:37:58,560
there is this downside which i wanted to

00:37:56,240 --> 00:37:58,560
mention

00:37:58,640 --> 00:38:02,839
yeah i definitely appreciate that um

00:38:01,119 --> 00:38:06,480
let's look forwards now

00:38:02,839 --> 00:38:09,280
to our last theme the community eagerly

00:38:06,480 --> 00:38:11,119
awaits readiness of cluster api

00:38:09,280 --> 00:38:13,200
just tell us a little bit about cluster

00:38:11,119 --> 00:38:16,320
api

00:38:13,200 --> 00:38:17,680
yeah so i think anyone that's had the

00:38:16,320 --> 00:38:19,200
privilege of managing

00:38:17,680 --> 00:38:21,280
dozens hundreds or thousands of

00:38:19,200 --> 00:38:24,320
kubernetes clusters probably heard

00:38:21,280 --> 00:38:26,000
of cluster api at this point and uh it's

00:38:24,320 --> 00:38:26,800
a really exciting project that's being

00:38:26,000 --> 00:38:29,200
developed

00:38:26,800 --> 00:38:30,880
and it's coming along fairly quickly and

00:38:29,200 --> 00:38:33,599
i think a lot of the communities

00:38:30,880 --> 00:38:35,119
is waiting for this to be ready um it's

00:38:33,599 --> 00:38:37,040
probably the closest thing we have to a

00:38:35,119 --> 00:38:39,040
possible silver bullet to handle a lot

00:38:37,040 --> 00:38:41,839
of the issues we run into now

00:38:39,040 --> 00:38:44,240
um there's kind of two main points about

00:38:41,839 --> 00:38:45,680
cluster api that are sort of

00:38:44,240 --> 00:38:47,760
i think kind of tell the story a little

00:38:45,680 --> 00:38:49,920
bit um the first one is that

00:38:47,760 --> 00:38:50,880
it cluster api just approaches cluster

00:38:49,920 --> 00:38:53,680
management

00:38:50,880 --> 00:38:56,320
with more of a desired state kubernetes

00:38:53,680 --> 00:38:58,880
focused cattle-focused sort of

00:38:56,320 --> 00:39:00,400
architecture which is awesome because uh

00:38:58,880 --> 00:39:02,880
it's worked out well for kubernetes

00:39:00,400 --> 00:39:04,320
kubernetes itself so it seems like this

00:39:02,880 --> 00:39:05,920
would be a good fit for the cluster

00:39:04,320 --> 00:39:08,640
management side of things

00:39:05,920 --> 00:39:09,680
um it's sort of unique in that way or at

00:39:08,640 --> 00:39:12,960
least mostly unique

00:39:09,680 --> 00:39:15,920
and so i think the hope there is that

00:39:12,960 --> 00:39:16,640
this will solve the problem um really

00:39:15,920 --> 00:39:18,000
well

00:39:16,640 --> 00:39:19,520
i'm sure there'll still be edge cases

00:39:18,000 --> 00:39:21,680
that are a little rough but this will

00:39:19,520 --> 00:39:23,839
probably be their best chance at sort of

00:39:21,680 --> 00:39:24,960
getting a really good singular tool to

00:39:23,839 --> 00:39:28,079
help us out

00:39:24,960 --> 00:39:28,480
with this cluster management issue and i

00:39:28,079 --> 00:39:31,760
think

00:39:28,480 --> 00:39:33,520
what's interesting about it is that um

00:39:31,760 --> 00:39:36,320
even though its cluster api has

00:39:33,520 --> 00:39:38,960
progressed quite a bit

00:39:36,320 --> 00:39:40,720
as was mentioned at this point everyone

00:39:38,960 --> 00:39:42,560
that has to manage clusters has

00:39:40,720 --> 00:39:43,839
built all this glue and we use all these

00:39:42,560 --> 00:39:46,400
tools and we sort of

00:39:43,839 --> 00:39:47,680
had to go through a lot of like pain and

00:39:46,400 --> 00:39:48,560
effort to get to the point where we're

00:39:47,680 --> 00:39:50,800
at now where

00:39:48,560 --> 00:39:52,320
things are working and scaling in the

00:39:50,800 --> 00:39:54,320
ways that we need them to

00:39:52,320 --> 00:39:55,680
so i think one of the tricky things for

00:39:54,320 --> 00:39:57,440
cluster api is going to be

00:39:55,680 --> 00:39:59,440
it needs to get to that threshold where

00:39:57,440 --> 00:40:00,720
it's like finally good enough to make it

00:39:59,440 --> 00:40:03,760
worth our while

00:40:00,720 --> 00:40:04,800
um to sort of like really put the time

00:40:03,760 --> 00:40:07,280
and effort into

00:40:04,800 --> 00:40:08,960
trialing it um it at least has to match

00:40:07,280 --> 00:40:11,680
all the stuff we've built so far

00:40:08,960 --> 00:40:13,760
so it's definitely getting there and a

00:40:11,680 --> 00:40:14,560
lot of people are waiting for it to get

00:40:13,760 --> 00:40:16,960
to that point

00:40:14,560 --> 00:40:18,160
uh but yeah it's uh i think it's

00:40:16,960 --> 00:40:19,839
probably one of the more

00:40:18,160 --> 00:40:24,560
interesting things coming up in this in

00:40:19,839 --> 00:40:26,720
this field

00:40:24,560 --> 00:40:29,040
cool anyone else want to comment on

00:40:26,720 --> 00:40:31,200
cluster api

00:40:29,040 --> 00:40:32,160
yeah i i just wanted to add uh from

00:40:31,200 --> 00:40:35,200
fidelity's

00:40:32,160 --> 00:40:37,119
side for example um uh

00:40:35,200 --> 00:40:39,520
we are multi-cloud so we we use like

00:40:37,119 --> 00:40:42,800
clusters and different cloud providers

00:40:39,520 --> 00:40:45,520
and you know on-prem as well so um

00:40:42,800 --> 00:40:46,079
this so we today have something custom

00:40:45,520 --> 00:40:48,560
which

00:40:46,079 --> 00:40:49,359
sort of mimics this this uh we've been

00:40:48,560 --> 00:40:52,560
using it for like

00:40:49,359 --> 00:40:55,359
a couple of years and we we can i mean

00:40:52,560 --> 00:40:56,319
we really think that really helped us um

00:40:55,359 --> 00:40:57,839
you know scale

00:40:56,319 --> 00:40:59,920
to like whatever number of clusters we

00:40:57,839 --> 00:41:02,960
have so we have seen

00:40:59,920 --> 00:41:04,319
uh the the importance of it like i'll

00:41:02,960 --> 00:41:06,960
give an example for example

00:41:04,319 --> 00:41:08,240
um if you are creating some clusters in

00:41:06,960 --> 00:41:09,839
like uh aws

00:41:08,240 --> 00:41:11,760
you have a tool called eks cutters right

00:41:09,839 --> 00:41:14,560
so that is like very specific

00:41:11,760 --> 00:41:16,000
uh for you know that cloud provider but

00:41:14,560 --> 00:41:19,280
from a user standpoint

00:41:16,000 --> 00:41:20,240
we wanted to give this use a simple

00:41:19,280 --> 00:41:22,160
unique interface

00:41:20,240 --> 00:41:24,160
where they just go and describe in a

00:41:22,160 --> 00:41:26,000
very neutral way that's what they like

00:41:24,160 --> 00:41:28,160
right so they want to describe in a

00:41:26,000 --> 00:41:29,520
in a very neutral way where we sort of

00:41:28,160 --> 00:41:31,040
process that and behind the scenes the

00:41:29,520 --> 00:41:33,040
tool can actually work but we don't have

00:41:31,040 --> 00:41:34,800
to expose each of those specific tools

00:41:33,040 --> 00:41:36,079
to the users you know straight away so

00:41:34,800 --> 00:41:37,680
in in that

00:41:36,079 --> 00:41:39,359
in that way i think cluster api putting

00:41:37,680 --> 00:41:40,880
a spec in the front i think it's it's

00:41:39,359 --> 00:41:42,720
going to help a lot

00:41:40,880 --> 00:41:44,560
and another another good thing about

00:41:42,720 --> 00:41:46,400
putting a spec in the front is

00:41:44,560 --> 00:41:48,079
that is when the ecosystem sort of

00:41:46,400 --> 00:41:49,680
starts to you know really evolve the

00:41:48,079 --> 00:41:51,760
moment you have a spec

00:41:49,680 --> 00:41:53,599
you know a lot of tools can supporting

00:41:51,760 --> 00:41:54,319
tools can you know uh you know evolve

00:41:53,599 --> 00:41:57,040
around it

00:41:54,319 --> 00:41:58,400
so um yeah i think like personally and

00:41:57,040 --> 00:41:59,359
like from affirmative standpoint that's

00:41:58,400 --> 00:42:02,880
why i think we have been

00:41:59,359 --> 00:42:05,880
definitely waiting for this

00:42:02,880 --> 00:42:07,839
yes it will it will um like kind of ex

00:42:05,880 --> 00:42:10,880
abstract the way

00:42:07,839 --> 00:42:11,920
the lower part that um you might have to

00:42:10,880 --> 00:42:15,359
deal with

00:42:11,920 --> 00:42:18,400
and and and and reason about

00:42:15,359 --> 00:42:20,480
kubernetes and the the original base

00:42:18,400 --> 00:42:22,960
deployment in the same way as you

00:42:20,480 --> 00:42:24,319
as you reason about your application and

00:42:22,960 --> 00:42:26,880
your services

00:42:24,319 --> 00:42:27,839
and um it makes it really a good

00:42:26,880 --> 00:42:31,200
candidate to

00:42:27,839 --> 00:42:33,119
to start to treat

00:42:31,200 --> 00:42:37,359
your clusters as cattle as you treat

00:42:33,119 --> 00:42:37,359
your pods and applications as cat

00:42:38,960 --> 00:42:42,560
nice okay well i definitely look forward

00:42:41,440 --> 00:42:42,880
to it i think it's something that is

00:42:42,560 --> 00:42:44,800
quite

00:42:42,880 --> 00:42:46,560
interesting and is going to make quite a

00:42:44,800 --> 00:42:47,680
big difference in the next year or two

00:42:46,560 --> 00:42:51,280
years

00:42:47,680 --> 00:42:54,480
so um yeah i think that wraps up

00:42:51,280 --> 00:42:57,520
our themes for today

00:42:54,480 --> 00:43:00,000
so last question um

00:42:57,520 --> 00:43:02,400
i'd just love to hear a line or two from

00:43:00,000 --> 00:43:04,480
each of you about how you found

00:43:02,400 --> 00:43:06,160
the process of creating this radar was

00:43:04,480 --> 00:43:09,839
it something that you

00:43:06,160 --> 00:43:13,119
were surprised by you found interesting

00:43:09,839 --> 00:43:17,200
um federico do you yeah um

00:43:13,119 --> 00:43:20,880
it was very interesting um

00:43:17,200 --> 00:43:24,000
you never know how this is done and um

00:43:20,880 --> 00:43:26,720
rather than just watching a making of

00:43:24,000 --> 00:43:27,760
or behind the scenes documentary of the

00:43:26,720 --> 00:43:30,240
tech writer

00:43:27,760 --> 00:43:30,880
um being part of this gives you the

00:43:30,240 --> 00:43:34,319
first

00:43:30,880 --> 00:43:36,079
uh hand experience um

00:43:34,319 --> 00:43:39,200
i enjoyed very much the the

00:43:36,079 --> 00:43:41,359
conversations that we had

00:43:39,200 --> 00:43:43,760
around the the entire radar as you

00:43:41,359 --> 00:43:46,319
mentioned this was a couple of weeks uh

00:43:43,760 --> 00:43:46,880
process it's not just this webinar and

00:43:46,319 --> 00:43:50,160
it's not

00:43:46,880 --> 00:43:50,640
just the um the um inquiry that we send

00:43:50,160 --> 00:43:53,280
out

00:43:50,640 --> 00:43:54,319
it's um preparing it discussing the the

00:43:53,280 --> 00:43:57,119
the topic

00:43:54,319 --> 00:43:58,960
and then combining the results together

00:43:57,119 --> 00:43:59,520
which gives you the possibility just

00:43:58,960 --> 00:44:02,000
like

00:43:59,520 --> 00:44:02,640
look over the fence look over your own

00:44:02,000 --> 00:44:05,280
uh

00:44:02,640 --> 00:44:07,200
fans that you're normally busy in your

00:44:05,280 --> 00:44:07,760
day-to-day stuff and see what is out

00:44:07,200 --> 00:44:11,520
there

00:44:07,760 --> 00:44:15,200
so i i can really recommend it to

00:44:11,520 --> 00:44:17,760
to to everyone that

00:44:15,200 --> 00:44:19,040
might be invited at some point to to to

00:44:17,760 --> 00:44:22,640
say yes

00:44:19,040 --> 00:44:24,640
it's i enjoyed it a lot

00:44:22,640 --> 00:44:27,359
yeah i'll just add it was fun for me as

00:44:24,640 --> 00:44:30,160
well and i think it's fascinating um

00:44:27,359 --> 00:44:32,160
especially on certain topics to see what

00:44:30,160 --> 00:44:35,599
your peers are doing right um

00:44:32,160 --> 00:44:37,359
it kind of allows you to gauge if

00:44:35,599 --> 00:44:39,119
you have a chance to course correct or

00:44:37,359 --> 00:44:42,240
or improve upon things

00:44:39,119 --> 00:44:42,880
um so it for me it was a big learning

00:44:42,240 --> 00:44:46,880
experience

00:44:42,880 --> 00:44:46,880
um so yeah it was really fun

00:44:47,359 --> 00:44:51,920
yeah i completely agree with that um the

00:44:50,400 --> 00:44:53,920
especially with the topic we chose it

00:44:51,920 --> 00:44:55,760
was really uh

00:44:53,920 --> 00:44:57,440
reassuring just to hear that you know

00:44:55,760 --> 00:44:59,280
you that this

00:44:57,440 --> 00:45:00,800
this is complicated and then you get to

00:44:59,280 --> 00:45:01,760
see the perspectives of all the other

00:45:00,800 --> 00:45:04,000
companies

00:45:01,760 --> 00:45:04,960
tackling this issue and it was very much

00:45:04,000 --> 00:45:07,200
sort of uh

00:45:04,960 --> 00:45:08,400
it helps you keep a long-term sort of

00:45:07,200 --> 00:45:10,079
mindset about things

00:45:08,400 --> 00:45:12,240
while also sort of approaching the short

00:45:10,079 --> 00:45:15,359
term like what are we doing day to day

00:45:12,240 --> 00:45:16,880
uh what's the next best step um and yeah

00:45:15,359 --> 00:45:19,040
the amount of perspectives

00:45:16,880 --> 00:45:20,240
we've had from our conversations have

00:45:19,040 --> 00:45:22,400
really opened up my eyes

00:45:20,240 --> 00:45:23,599
quite a bit and yeah i think it's been

00:45:22,400 --> 00:45:25,599
an incredible uh

00:45:23,599 --> 00:45:26,640
opportunity and i think it's great that

00:45:25,599 --> 00:45:28,560
we get to share

00:45:26,640 --> 00:45:33,760
sort of all of these conversations in

00:45:28,560 --> 00:45:34,960
the form of the radar itself

00:45:33,760 --> 00:45:37,200
cool why don't you want to finish

00:45:34,960 --> 00:45:39,920
yourself uh yeah i mean

00:45:37,200 --> 00:45:40,960
i i definitely found it interesting um

00:45:39,920 --> 00:45:43,040
so i think i think i

00:45:40,960 --> 00:45:44,880
personally believe in like you know

00:45:43,040 --> 00:45:48,640
creating creating tech radars

00:45:44,880 --> 00:45:50,240
i think it's super useful especially um

00:45:48,640 --> 00:45:52,560
i think nirich mentioned about course

00:45:50,240 --> 00:45:54,240
corrections in our experience at uh at

00:45:52,560 --> 00:45:55,200
least over a period of last two two and

00:45:54,240 --> 00:45:57,119
a half years

00:45:55,200 --> 00:45:58,640
at several points we have done course

00:45:57,119 --> 00:46:00,800
corrections and

00:45:58,640 --> 00:46:02,000
uh most of the time when we did that it

00:46:00,800 --> 00:46:04,880
was uh

00:46:02,000 --> 00:46:05,280
usually when we sort of spoke to another

00:46:04,880 --> 00:46:06,800
we

00:46:05,280 --> 00:46:08,800
went to a conference i spoke to another

00:46:06,800 --> 00:46:10,400
set of companies through some other uh

00:46:08,800 --> 00:46:12,319
you know events or something like that

00:46:10,400 --> 00:46:14,720
so uh i think in that aspect

00:46:12,319 --> 00:46:15,920
uh i really found it interesting and i

00:46:14,720 --> 00:46:17,760
personally believe this is going to be

00:46:15,920 --> 00:46:19,760
very very useful for many many teams out

00:46:17,760 --> 00:46:21,760
there

00:46:19,760 --> 00:46:23,280
awesome um well i actually really

00:46:21,760 --> 00:46:25,440
enjoyed it as well so i want to say

00:46:23,280 --> 00:46:26,800
thank you to all of you to niraj raja

00:46:25,440 --> 00:46:29,440
and gabe and federico

00:46:26,800 --> 00:46:30,319
and simone who's not on this webinar

00:46:29,440 --> 00:46:32,560
today

00:46:30,319 --> 00:46:34,240
and for your time i really appreciate it

00:46:32,560 --> 00:46:35,280
i feel like i learned a lot from each of

00:46:34,240 --> 00:46:38,400
you as well so

00:46:35,280 --> 00:46:38,400
thank you very much

00:46:40,880 --> 00:46:46,319
just as a reminder to finish us off

00:46:43,920 --> 00:46:46,960
you can go back to look at previous

00:46:46,319 --> 00:46:50,079
radars

00:46:46,960 --> 00:46:52,400
at radar.cncf.io you can also look in a

00:46:50,079 --> 00:46:54,480
little bit more detail about the

00:46:52,400 --> 00:46:56,480
different kinds of um votes and the

00:46:54,480 --> 00:47:00,720
different kinds of companies

00:46:56,480 --> 00:47:00,720
that submitted answers to this radar

00:47:01,440 --> 00:47:04,880
we'd love for you as well to get

00:47:03,359 --> 00:47:08,160
involved so

00:47:04,880 --> 00:47:08,960
if you want to have a say about what the

00:47:08,160 --> 00:47:12,160
next topic

00:47:08,960 --> 00:47:14,560
is you can go to cncf.io tech

00:47:12,160 --> 00:47:16,240
radar this is just a github issue where

00:47:14,560 --> 00:47:17,680
people have been posting

00:47:16,240 --> 00:47:19,359
what kind of topics they're interested

00:47:17,680 --> 00:47:20,000
in hearing about from the community and

00:47:19,359 --> 00:47:23,280
you can kind of

00:47:20,000 --> 00:47:23,280
upvote and downvote things

00:47:23,359 --> 00:47:27,280
um we would love for you to come and be

00:47:25,599 --> 00:47:28,480
part of one of these future radars be

00:47:27,280 --> 00:47:30,240
part of the team

00:47:28,480 --> 00:47:31,680
and you can find out more about that at

00:47:30,240 --> 00:47:34,319
cncf io slash

00:47:31,680 --> 00:47:34,319
end user

00:47:34,880 --> 00:47:38,079
and then lastly i'm always trying to

00:47:36,480 --> 00:47:40,720
find ways to make these radars

00:47:38,079 --> 00:47:41,520
more interesting more relevant and more

00:47:40,720 --> 00:47:43,920
understandable

00:47:41,520 --> 00:47:45,559
so if you have feedback then just send

00:47:43,920 --> 00:47:48,559
that to info

00:47:45,559 --> 00:47:48,559
cncf.io

00:47:48,960 --> 00:47:53,359
thank you very much and thank you once

00:47:50,800 --> 00:47:56,480
again to all of the radar team who

00:47:53,359 --> 00:47:59,440
joined and contributed to this today

00:47:56,480 --> 00:47:59,440
and that is all from me

00:47:59,520 --> 00:48:07,839
thank you thank you very much bye

00:48:03,520 --> 00:48:07,839

YouTube URL: https://www.youtube.com/watch?v=mjg_x9iYEIc


