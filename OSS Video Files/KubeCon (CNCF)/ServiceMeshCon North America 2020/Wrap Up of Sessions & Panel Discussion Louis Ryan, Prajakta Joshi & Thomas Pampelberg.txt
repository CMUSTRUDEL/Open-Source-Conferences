Title: Wrap Up of Sessions & Panel Discussion Louis Ryan, Prajakta Joshi & Thomas Pampelberg
Publication date: 2020-12-03
Playlist: ServiceMeshCon North America 2020
Description: 
	Don’t miss out! Join us at our upcoming event: KubeCon + CloudNativeCon Europe 2021 Virtual from May 4–7, 2021. Learn more at https://kubecon.io. The conference features presentations from developers and end users of Kubernetes, Prometheus, Envoy, and all of the other CNCF-hosted projects. 

Wrap Up of Sessions & Panel Discussion Louis Ryan, Prajakta Joshi, Google & Thomas Pampelberg, Buoyant
Captions: 
	00:00:00,080 --> 00:00:03,040
let's kick this off thank you everybody

00:00:02,159 --> 00:00:06,480
for a

00:00:03,040 --> 00:00:08,240
fantastic day so far uh i'm kind of

00:00:06,480 --> 00:00:11,040
overloaded with all of the

00:00:08,240 --> 00:00:12,400
awesomeness that has uh happened today i

00:00:11,040 --> 00:00:15,519
picked out my

00:00:12,400 --> 00:00:16,560
favorites so far i think but lewis why

00:00:15,519 --> 00:00:19,680
don't you uh

00:00:16,560 --> 00:00:21,439
give us a preview what what do you think

00:00:19,680 --> 00:00:23,600
were some of your uh highlights for the

00:00:21,439 --> 00:00:23,600
day

00:00:24,000 --> 00:00:31,439
aside from your talk actually

00:00:28,400 --> 00:00:33,120
the conversation

00:00:31,439 --> 00:00:35,120
i actually know every actual that was

00:00:33,120 --> 00:00:38,320
probably the one i enjoyed the most

00:00:35,120 --> 00:00:40,160
um you know i i kind of live eat and

00:00:38,320 --> 00:00:42,399
breathe service mesh

00:00:40,160 --> 00:00:44,559
um and so it was just really interesting

00:00:42,399 --> 00:00:47,440
to hear kind of three different you know

00:00:44,559 --> 00:00:48,800
implementers of service mesh uh agree on

00:00:47,440 --> 00:00:51,840
so many things

00:00:48,800 --> 00:00:53,360
uh so vehemently uh so that was

00:00:51,840 --> 00:00:55,360
you know that was definitely a highlight

00:00:53,360 --> 00:00:57,280
for me covering you know

00:00:55,360 --> 00:00:59,199
obviously a lot of experience that you

00:00:57,280 --> 00:01:01,680
know they had had with the different

00:00:59,199 --> 00:01:03,120
you know deployments that they had tried

00:01:01,680 --> 00:01:04,239
to support for customers and what they

00:01:03,120 --> 00:01:05,680
had learned from that

00:01:04,239 --> 00:01:08,640
um so that's obviously always super

00:01:05,680 --> 00:01:13,840
interesting for me um

00:01:08,640 --> 00:01:13,840
another highlight i think uh

00:01:17,759 --> 00:01:21,439
my audio is going to hold up but one

00:01:19,920 --> 00:01:23,280
thing that stood out for me was how they

00:01:21,439 --> 00:01:25,439
kind of integrated

00:01:23,280 --> 00:01:26,320
you know leveraging a higher level

00:01:25,439 --> 00:01:29,200
concept

00:01:26,320 --> 00:01:30,240
from the mesh as part of their git ops

00:01:29,200 --> 00:01:31,920
right they

00:01:30,240 --> 00:01:34,240
there was a feature where they they

00:01:31,920 --> 00:01:35,520
would label deployments in kubernetes

00:01:34,240 --> 00:01:37,200
and said that they wanted them to opt

00:01:35,520 --> 00:01:39,040
into sso

00:01:37,200 --> 00:01:41,040
like sso is not a feature of any

00:01:39,040 --> 00:01:42,560
built-in built-in feature of any mesh

00:01:41,040 --> 00:01:43,680
really but it was something that they

00:01:42,560 --> 00:01:45,280
had built on top and then they

00:01:43,680 --> 00:01:47,439
integrated it kind of end to end with

00:01:45,280 --> 00:01:50,399
the developer experience

00:01:47,439 --> 00:01:51,360
in a really powerful but kind of you

00:01:50,399 --> 00:01:53,520
know bespoke

00:01:51,360 --> 00:01:54,479
way but it delivered a great user

00:01:53,520 --> 00:01:57,600
experience

00:01:54,479 --> 00:01:59,680
so that one kind of stood out yeah uh

00:01:57,600 --> 00:02:01,040
i i think that's something that we've

00:01:59,680 --> 00:02:02,159
all been trying to achieve with

00:02:01,040 --> 00:02:03,680
kubernetes and

00:02:02,159 --> 00:02:06,000
service mesh is kind of the next step

00:02:03,680 --> 00:02:09,200
that like common environment

00:02:06,000 --> 00:02:10,879
the idea that they are taking

00:02:09,200 --> 00:02:12,800
service mesh and getting it into

00:02:10,879 --> 00:02:15,440
satellites and

00:02:12,800 --> 00:02:17,200
uh fighter jets and normal deployments

00:02:15,440 --> 00:02:18,319
is like one of the coolest things for me

00:02:17,200 --> 00:02:20,560
because you get this like

00:02:18,319 --> 00:02:22,720
common api that you can then build on

00:02:20,560 --> 00:02:25,200
top of uh

00:02:22,720 --> 00:02:26,000
really exciting you know as we start to

00:02:25,200 --> 00:02:28,000
get this like

00:02:26,000 --> 00:02:31,360
cloud native world where the cloud isn't

00:02:28,000 --> 00:02:34,640
just an aws data center anymore it's

00:02:31,360 --> 00:02:36,480
anything anywhere it's really cool

00:02:34,640 --> 00:02:37,840
right and they were also being super

00:02:36,480 --> 00:02:40,000
nice about like

00:02:37,840 --> 00:02:41,440
sharing all of these kind of practices

00:02:40,000 --> 00:02:42,879
by kind of creating templates for

00:02:41,440 --> 00:02:46,000
deployments and

00:02:42,879 --> 00:02:48,480
you know publishing them on git

00:02:46,000 --> 00:02:49,680
for anyone else to use right so that was

00:02:48,480 --> 00:02:52,319
it was really nice to see your tax

00:02:49,680 --> 00:02:52,319
dollars at work

00:02:53,200 --> 00:02:57,920
uh it highlights something that i think

00:02:55,920 --> 00:02:59,519
is awesome about service mesh that we

00:02:57,920 --> 00:03:00,400
don't spend a lot of time talking about

00:02:59,519 --> 00:03:01,920
is that

00:03:00,400 --> 00:03:04,400
a lot of where we are today as a

00:03:01,920 --> 00:03:06,560
community is building out the primitives

00:03:04,400 --> 00:03:08,080
that you can go build on top of like uh

00:03:06,560 --> 00:03:10,159
with service mesh interface

00:03:08,080 --> 00:03:11,360
and traffic split there's some awesome

00:03:10,159 --> 00:03:13,280
primitives that you can go

00:03:11,360 --> 00:03:15,120
do things with that we just haven't

00:03:13,280 --> 00:03:15,760
built yet and flagger is starting to do

00:03:15,120 --> 00:03:18,239
that with

00:03:15,760 --> 00:03:20,080
you know their kind of work and like

00:03:18,239 --> 00:03:21,920
seeing the dod release their

00:03:20,080 --> 00:03:25,840
configurations and the rest for those

00:03:21,920 --> 00:03:25,840
next level concerns is just so exciting

00:03:26,400 --> 00:03:30,560
yeah yeah so those are the things that's

00:03:28,799 --> 00:03:33,440
the

00:03:30,560 --> 00:03:35,680
kind of the more user experience side of

00:03:33,440 --> 00:03:37,519
things

00:03:35,680 --> 00:03:39,120
you know always there's a fair amount of

00:03:37,519 --> 00:03:41,599
detailed technical content

00:03:39,120 --> 00:03:43,040
um and we had two talks today about

00:03:41,599 --> 00:03:45,440
telco

00:03:43,040 --> 00:03:46,560
which is a good segue into asking

00:03:45,440 --> 00:03:48,480
projector

00:03:46,560 --> 00:03:51,519
what uh you know maybe what some of her

00:03:48,480 --> 00:03:51,519
highlights were for the day

00:03:51,680 --> 00:03:56,400
and actually um i was not psy i was not

00:03:54,560 --> 00:03:58,879
silent by design it was just

00:03:56,400 --> 00:04:01,040
my stuff was echoing a lot but now that

00:03:58,879 --> 00:04:04,319
we got that fixed

00:04:01,040 --> 00:04:06,239
i do i was actually excited

00:04:04,319 --> 00:04:07,920
to see a whole bunch of new talks i

00:04:06,239 --> 00:04:08,879
think i mean both of you made great

00:04:07,920 --> 00:04:10,799
points

00:04:08,879 --> 00:04:12,720
the reason i'll tell you the motivation

00:04:10,799 --> 00:04:14,400
for doing the telco talk in the first

00:04:12,720 --> 00:04:17,919
place um

00:04:14,400 --> 00:04:20,160
traditionally we always assume telco

00:04:17,919 --> 00:04:21,600
edge enterprise these are very different

00:04:20,160 --> 00:04:24,560
things and we treat them like

00:04:21,600 --> 00:04:26,240
individual silos and i have half my

00:04:24,560 --> 00:04:27,759
background is enterprise and half my

00:04:26,240 --> 00:04:30,000
background is telco

00:04:27,759 --> 00:04:31,680
and actually the problems to be solver

00:04:30,000 --> 00:04:34,000
are exactly the same

00:04:31,680 --> 00:04:35,440
and the idea was to introduce these use

00:04:34,000 --> 00:04:37,440
cases to show

00:04:35,440 --> 00:04:39,440
that these really common set of use

00:04:37,440 --> 00:04:41,520
cases we're all trying to solve

00:04:39,440 --> 00:04:43,600
sometimes the starting points might be

00:04:41,520 --> 00:04:45,360
different and sometimes

00:04:43,600 --> 00:04:47,280
the technologies might be slightly

00:04:45,360 --> 00:04:49,199
different but

00:04:47,280 --> 00:04:51,040
when we really talk service mesh like

00:04:49,199 --> 00:04:51,520
today in my slide for example i had

00:04:51,040 --> 00:04:54,560
about

00:04:51,520 --> 00:04:56,000
12 plus implementations including kelsey

00:04:54,560 --> 00:04:59,280
service mesh and that is just

00:04:56,000 --> 00:05:01,199
half ingest but i think the key part is

00:04:59,280 --> 00:05:02,800
that service mesh is here to stay that's

00:05:01,199 --> 00:05:03,440
that's what all these implementations

00:05:02,800 --> 00:05:05,120
show

00:05:03,440 --> 00:05:06,880
obviously you've got istio which is

00:05:05,120 --> 00:05:08,240
immensely popular in the open source

00:05:06,880 --> 00:05:10,000
community

00:05:08,240 --> 00:05:12,080
but each of these brings value to the

00:05:10,000 --> 00:05:14,960
community and i think

00:05:12,080 --> 00:05:17,840
surfacing up how telcos can actually tap

00:05:14,960 --> 00:05:21,280
into it even if they have legacy systems

00:05:17,840 --> 00:05:24,240
or if their stuff runs on vms that is

00:05:21,280 --> 00:05:26,320
the the paradigm has to adapt to the use

00:05:24,240 --> 00:05:27,919
case and not the other way around so

00:05:26,320 --> 00:05:29,280
i think it just showed to me also

00:05:27,919 --> 00:05:31,039
another thing that we need to keep

00:05:29,280 --> 00:05:34,320
expanding the bounds

00:05:31,039 --> 00:05:36,240
of what service mesh isn't us and uh so

00:05:34,320 --> 00:05:36,639
that was the motivation behind doing the

00:05:36,240 --> 00:05:39,759
talk

00:05:36,639 --> 00:05:41,440
and i just wanted to add

00:05:39,759 --> 00:05:43,280
actually my observation on the other

00:05:41,440 --> 00:05:45,520
talk which was uh

00:05:43,280 --> 00:05:46,400
done from by eriksson and this was gabor

00:05:45,520 --> 00:05:48,800
who was doing the

00:05:46,400 --> 00:05:50,479
gabor ratwari from eriksen i was

00:05:48,800 --> 00:05:52,400
actually excited to see because he

00:05:50,479 --> 00:05:54,320
picked up a really legacy

00:05:52,400 --> 00:05:56,240
uh thing which is the session border

00:05:54,320 --> 00:05:57,600
controller it is as legacy as you can

00:05:56,240 --> 00:05:59,440
get in some ways

00:05:57,600 --> 00:06:01,039
uh he picked up a protocol that is not

00:05:59,440 --> 00:06:04,160
http based so he picked up

00:06:01,039 --> 00:06:05,280
rtp over udp and then he started laying

00:06:04,160 --> 00:06:07,440
out how

00:06:05,280 --> 00:06:08,800
you know we when we look at it from a

00:06:07,440 --> 00:06:11,840
cloud native lens we are seeing

00:06:08,800 --> 00:06:13,680
everything http websocket grpc based

00:06:11,840 --> 00:06:15,440
that is not the real world in telco so

00:06:13,680 --> 00:06:17,440
how do we bridge these things

00:06:15,440 --> 00:06:19,759
uh then he talked about the profile like

00:06:17,440 --> 00:06:21,600
one is long waited one is short-lived

00:06:19,759 --> 00:06:23,759
talked about kpis

00:06:21,600 --> 00:06:25,840
but then he went back to the commonness

00:06:23,759 --> 00:06:27,600
which is service mesh is nothing but

00:06:25,840 --> 00:06:29,120
separating control and data plane of

00:06:27,600 --> 00:06:31,120
services and then

00:06:29,120 --> 00:06:32,639
if we can figure out how to bridge some

00:06:31,120 --> 00:06:34,560
of these nuances

00:06:32,639 --> 00:06:35,919
every bit of what we talk about in

00:06:34,560 --> 00:06:36,639
service mesh whether it's traffic

00:06:35,919 --> 00:06:38,160
control

00:06:36,639 --> 00:06:40,000
whether it's security whether it's

00:06:38,160 --> 00:06:42,160
observability scale out

00:06:40,000 --> 00:06:43,759
all of those are equally relevant and

00:06:42,160 --> 00:06:45,600
obviously a lot more work to be done

00:06:43,759 --> 00:06:48,000
there but i was super excited to see

00:06:45,600 --> 00:06:50,960
that talk

00:06:48,000 --> 00:06:52,319
uh me too uh in fact um we haven't

00:06:50,960 --> 00:06:56,000
implemented it yet in

00:06:52,319 --> 00:06:58,319
linker d but uh by far the two most

00:06:56,000 --> 00:07:00,000
uh exciting protocols that i want to see

00:06:58,319 --> 00:07:03,440
are mysql

00:07:00,000 --> 00:07:06,000
and kafka so that you bridge this like

00:07:03,440 --> 00:07:06,560
traditional http microservices world

00:07:06,000 --> 00:07:08,720
into

00:07:06,560 --> 00:07:10,400
a bunch of different paradigms because

00:07:08,720 --> 00:07:12,000
in the end we're all trying to solve the

00:07:10,400 --> 00:07:12,800
same problem it just happens that

00:07:12,000 --> 00:07:16,560
protocols

00:07:12,800 --> 00:07:17,120
are unique to our uh problem spaces

00:07:16,560 --> 00:07:20,400
which is

00:07:17,120 --> 00:07:20,400
a pretty cool way to look at it

00:07:27,440 --> 00:07:31,759
sorry lewis keep on going oh my od is a

00:07:30,960 --> 00:07:35,199
bit laggy

00:07:31,759 --> 00:07:38,000
um yeah i mean i think

00:07:35,199 --> 00:07:40,000
you know http is obviously the kind of

00:07:38,000 --> 00:07:42,240
early sweet spot for

00:07:40,000 --> 00:07:44,960
meshes right it's it's the most widely

00:07:42,240 --> 00:07:47,120
used protocol it's the protocol that's

00:07:44,960 --> 00:07:48,080
most used by the people that we targeted

00:07:47,120 --> 00:07:51,360
first

00:07:48,080 --> 00:07:52,879
right kubernetes users building kind of

00:07:51,360 --> 00:07:55,840
distributed apps and they kind of

00:07:52,879 --> 00:07:58,319
microservices paradigm right http

00:07:55,840 --> 00:08:00,000
rest json grpc and things like it will

00:07:58,319 --> 00:08:03,120
dominate there but

00:08:00,000 --> 00:08:06,240
yeah i mean my sql kafka

00:08:03,120 --> 00:08:08,560
you know you know

00:08:06,240 --> 00:08:11,280
other kind of database protocols you

00:08:08,560 --> 00:08:14,800
know postgres

00:08:11,280 --> 00:08:16,479
jdbc right this is a very very long list

00:08:14,800 --> 00:08:18,080
a lot of these protocols have a lot in

00:08:16,479 --> 00:08:21,120
common right

00:08:18,080 --> 00:08:22,800
um there are generally speaking only a

00:08:21,120 --> 00:08:26,000
few different shapes of protocols

00:08:22,800 --> 00:08:28,720
out there um you know

00:08:26,000 --> 00:08:29,599
kind of command body oriented ones

00:08:28,720 --> 00:08:31,680
things that have

00:08:29,599 --> 00:08:33,279
are more resource oriented and then

00:08:31,680 --> 00:08:34,240
almost all of them have headers of some

00:08:33,279 --> 00:08:36,320
form

00:08:34,240 --> 00:08:37,279
um so one interesting challenge and

00:08:36,320 --> 00:08:39,120
something we've been talking about in

00:08:37,279 --> 00:08:42,479
the history community is

00:08:39,120 --> 00:08:44,560
um you know abstracting the kind of

00:08:42,479 --> 00:08:45,839
the the encoding details the protocol a

00:08:44,560 --> 00:08:48,480
little bit from the

00:08:45,839 --> 00:08:51,120
kind of routing and feature extraction

00:08:48,480 --> 00:08:54,399
aspects as with related telemetry

00:08:51,120 --> 00:08:56,880
um so that you could

00:08:54,399 --> 00:08:58,399
design apis for routing and other things

00:08:56,880 --> 00:09:00,320
which is something that's a big part of

00:08:58,399 --> 00:09:02,399
service mesh

00:09:00,320 --> 00:09:04,320
and then have those apis apply to many

00:09:02,399 --> 00:09:07,200
protocols as long as they could map into

00:09:04,320 --> 00:09:10,720
a certain set of well-known prototypes

00:09:07,200 --> 00:09:11,040
um it's an interesting design challenge

00:09:10,720 --> 00:09:12,480
and it

00:09:11,040 --> 00:09:14,560
you know it's not something that we've

00:09:12,480 --> 00:09:16,000
shipped or made a ton of progress on but

00:09:14,560 --> 00:09:16,720
it's something that i i think about a

00:09:16,000 --> 00:09:18,720
lot

00:09:16,720 --> 00:09:21,040
if i look at the kafka protocol or i

00:09:18,720 --> 00:09:21,360
look at stomp or something else right i

00:09:21,040 --> 00:09:24,000
see

00:09:21,360 --> 00:09:25,279
a lot of similarities between that and

00:09:24,000 --> 00:09:27,120
other protocols that we have pretty good

00:09:25,279 --> 00:09:30,240
support for

00:09:27,120 --> 00:09:31,920
um and if you look at a lot of the http

00:09:30,240 --> 00:09:33,360
routing stuff that exists

00:09:31,920 --> 00:09:36,000
a fair amount of it is pretty

00:09:33,360 --> 00:09:39,040
generalizable to other protocols

00:09:36,000 --> 00:09:42,320
right match headers with regex's

00:09:39,040 --> 00:09:44,000
prefix suffix match um path is just

00:09:42,320 --> 00:09:46,320
really a special type of header

00:09:44,000 --> 00:09:47,360
query params are headers passed in

00:09:46,320 --> 00:09:49,440
something else

00:09:47,360 --> 00:09:50,959
right it's pretty easy to come up with

00:09:49,440 --> 00:09:53,120
generalizations

00:09:50,959 --> 00:09:54,000
um but i think that would be an

00:09:53,120 --> 00:09:56,160
interesting space

00:09:54,000 --> 00:09:57,120
uh and if we lay the foundation for that

00:09:56,160 --> 00:09:59,839
pretty well then

00:09:57,120 --> 00:10:01,200
you know it might be easy to expand the

00:09:59,839 --> 00:10:02,079
universe of supportive protocols pretty

00:10:01,200 --> 00:10:04,000
quickly

00:10:02,079 --> 00:10:05,760
and those same things apply to policy

00:10:04,000 --> 00:10:07,760
and telemetry right those same kind of

00:10:05,760 --> 00:10:10,959
sets of attributes

00:10:07,760 --> 00:10:12,079
um that's an area that i think you know

00:10:10,959 --> 00:10:13,760
i would certainly like to see some

00:10:12,079 --> 00:10:16,160
exploration of by the community over the

00:10:13,760 --> 00:10:16,160
next year

00:10:16,320 --> 00:10:20,320
oh 100 percent me too and it's it's

00:10:18,880 --> 00:10:21,839
always the trade-offs there in

00:10:20,320 --> 00:10:24,399
particular that like

00:10:21,839 --> 00:10:25,760
do you want to how general can you get

00:10:24,399 --> 00:10:28,160
before you start losing

00:10:25,760 --> 00:10:30,320
fidelity like you don't want to do

00:10:28,160 --> 00:10:32,560
something that is a hundred percent

00:10:30,320 --> 00:10:33,680
unique just to kafka because there are

00:10:32,560 --> 00:10:36,320
general generic

00:10:33,680 --> 00:10:37,600
important uh abstractions you can pick

00:10:36,320 --> 00:10:38,880
there but on the other side you don't

00:10:37,600 --> 00:10:40,720
want to lose

00:10:38,880 --> 00:10:42,399
all of the important information that

00:10:40,720 --> 00:10:43,839
you get out of that like if you start

00:10:42,399 --> 00:10:45,200
talking about policy

00:10:43,839 --> 00:10:47,279
policy that i would love to write

00:10:45,200 --> 00:10:50,160
someday is the ability for

00:10:47,279 --> 00:10:51,120
limiting select statements on mysql at

00:10:50,160 --> 00:10:53,279
the

00:10:51,120 --> 00:10:54,640
service mesh level which is a pretty

00:10:53,279 --> 00:10:56,800
interesting like

00:10:54,640 --> 00:10:58,000
super unique integration with the actual

00:10:56,800 --> 00:11:00,079
protocol but

00:10:58,000 --> 00:11:01,680
like how do you make sure that the

00:11:00,079 --> 00:11:04,720
extensibility is there without

00:11:01,680 --> 00:11:06,560
actually uh having to do a special

00:11:04,720 --> 00:11:11,200
implementation each time

00:11:06,560 --> 00:11:11,200
um i think this actually goes into

00:11:12,079 --> 00:11:16,160
sorry about that the other canonical

00:11:14,399 --> 00:11:18,880
example i hear is you know

00:11:16,160 --> 00:11:20,079
send select requests to read replicas of

00:11:18,880 --> 00:11:22,079
my sequel and send

00:11:20,079 --> 00:11:24,640
inserts and updates to the master right

00:11:22,079 --> 00:11:26,480
i think there's a pretty

00:11:24,640 --> 00:11:29,600
you know lots of people who scaled out

00:11:26,480 --> 00:11:32,959
sql have written proxies to do just that

00:11:29,600 --> 00:11:35,680
so those are super powerful use cases

00:11:32,959 --> 00:11:37,519
uh in fact uh there's a plugin that

00:11:35,680 --> 00:11:39,920
exists for linker d1

00:11:37,519 --> 00:11:41,200
where it'll do automatic sharding for

00:11:39,920 --> 00:11:44,240
you which is

00:11:41,200 --> 00:11:46,240
really cool uh in my mind um this

00:11:44,240 --> 00:11:47,120
actually i think uh leads directly into

00:11:46,240 --> 00:11:50,320
a question

00:11:47,120 --> 00:11:51,600
um or not a question but uh

00:11:50,320 --> 00:11:53,839
one of the other talks which was the

00:11:51,600 --> 00:11:56,000
wasm talk which got me super excited

00:11:53,839 --> 00:11:57,200
the ability to go and start writing and

00:11:56,000 --> 00:12:00,480
doing prototype

00:11:57,200 --> 00:12:01,920
on top of the proxy itself with wasm

00:12:00,480 --> 00:12:03,519
opens up the world so that we can

00:12:01,920 --> 00:12:05,040
actually do a little bit of

00:12:03,519 --> 00:12:07,680
experimentation to figure out what the

00:12:05,040 --> 00:12:09,360
generic implementations are where the

00:12:07,680 --> 00:12:11,440
right abstractions are and

00:12:09,360 --> 00:12:12,480
having that really powerful wasm tool so

00:12:11,440 --> 00:12:13,839
that we can

00:12:12,480 --> 00:12:16,720
experiment and figure out what we want

00:12:13,839 --> 00:12:20,480
to go and make a more concrete solution

00:12:16,720 --> 00:12:20,480
is super duper exciting to me

00:12:21,519 --> 00:12:26,880
actually i would add because i mean just

00:12:24,639 --> 00:12:27,839
adding to what you were saying thomas we

00:12:26,880 --> 00:12:29,360
see um

00:12:27,839 --> 00:12:31,200
you know there are these requirements

00:12:29,360 --> 00:12:33,120
for customization and

00:12:31,200 --> 00:12:34,880
uh i think christian who did the talk

00:12:33,120 --> 00:12:36,480
from solo.i o he

00:12:34,880 --> 00:12:38,720
called out several of those needs

00:12:36,480 --> 00:12:40,560
including for example you need new wire

00:12:38,720 --> 00:12:41,680
protocols or you want your own custom

00:12:40,560 --> 00:12:43,200
metrics or

00:12:41,680 --> 00:12:44,959
maybe you want to implement custom

00:12:43,200 --> 00:12:46,160
security exchanges maybe because you've

00:12:44,959 --> 00:12:48,160
not upgraded

00:12:46,160 --> 00:12:49,760
um lots of things around here header

00:12:48,160 --> 00:12:53,200
message transformation

00:12:49,760 --> 00:12:55,519
um firewalls and so on so forth i think

00:12:53,200 --> 00:12:57,040
wasm custom filters this level of

00:12:55,519 --> 00:13:00,240
customization is also

00:12:57,040 --> 00:13:01,040
important to help vendors of products

00:13:00,240 --> 00:13:04,240
plug in

00:13:01,040 --> 00:13:06,399
to things without really going and

00:13:04,240 --> 00:13:08,399
touching the core framework of a service

00:13:06,399 --> 00:13:10,959
mesh paradigm right so it gives them

00:13:08,399 --> 00:13:12,800
a way to put in their proprietary stuff

00:13:10,959 --> 00:13:15,440
uh in a way that we preserve the

00:13:12,800 --> 00:13:16,959
paradigm and what it stands for

00:13:15,440 --> 00:13:18,480
and also preserving a lot of the

00:13:16,959 --> 00:13:20,639
openness that comes from

00:13:18,480 --> 00:13:22,240
for example following an xps protocol

00:13:20,639 --> 00:13:24,160
for talking to envoy

00:13:22,240 --> 00:13:26,320
so to me that was i think it is a very

00:13:24,160 --> 00:13:28,880
key area it's relatively new

00:13:26,320 --> 00:13:30,480
um but i was excited to see uh their

00:13:28,880 --> 00:13:32,320
demo it was pretty nice and then he

00:13:30,480 --> 00:13:34,160
talked about the web assembly hub which

00:13:32,320 --> 00:13:35,839
was an interesting concept i think it

00:13:34,160 --> 00:13:36,399
was about the community coming together

00:13:35,839 --> 00:13:39,199
to share

00:13:36,399 --> 00:13:40,240
stuff uh broadly i think wasm will open

00:13:39,199 --> 00:13:43,040
up use cases

00:13:40,240 --> 00:13:44,880
um that we would have normally otherwise

00:13:43,040 --> 00:13:45,920
struggled to implement obviously we need

00:13:44,880 --> 00:13:48,399
to make sure

00:13:45,920 --> 00:13:50,720
we make it production grade and we all

00:13:48,399 --> 00:13:52,800
put resources into it but it's a great

00:13:50,720 --> 00:13:54,079
uh area for the community to collaborate

00:13:52,800 --> 00:13:55,440
on as well

00:13:54,079 --> 00:13:57,360
louie i know you had some thoughts on

00:13:55,440 --> 00:13:59,760
this as well

00:13:57,360 --> 00:14:01,600
yeah i was gonna say i i don't know uh

00:13:59,760 --> 00:14:03,279
it took me a second but uh when i was

00:14:01,600 --> 00:14:07,360
watching the the talk on

00:14:03,279 --> 00:14:09,519
security from vmware um

00:14:07,360 --> 00:14:12,480
in their diagrams they were using the

00:14:09,519 --> 00:14:12,480
logo from wazon

00:14:12,560 --> 00:14:16,320
i was i didn't get a chance to follow up

00:14:14,399 --> 00:14:18,079
with a guy and ask him a question on

00:14:16,320 --> 00:14:20,079
slack but uh

00:14:18,079 --> 00:14:22,079
you know that that use case right that

00:14:20,079 --> 00:14:23,600
that integration use case

00:14:22,079 --> 00:14:25,199
i got the impression for the diagram

00:14:23,600 --> 00:14:27,360
that that's what they were doing

00:14:25,199 --> 00:14:29,600
because i know vmware has a a broad

00:14:27,360 --> 00:14:31,920
portfolio of security

00:14:29,600 --> 00:14:33,279
they certainly acquired a number of

00:14:31,920 --> 00:14:35,040
companies in that space over the course

00:14:33,279 --> 00:14:36,560
of the last 18 months i think so

00:14:35,040 --> 00:14:39,040
clearly that's an important thing for

00:14:36,560 --> 00:14:42,079
them to be able to bring that portfolio

00:14:39,040 --> 00:14:42,480
into their service mesh product and it

00:14:42,079 --> 00:14:43,920
looked

00:14:42,480 --> 00:14:45,360
at least from the diagram that they were

00:14:43,920 --> 00:14:46,720
going to think may be thinking about

00:14:45,360 --> 00:14:48,079
using web assembly to do it so that was

00:14:46,720 --> 00:14:51,360
kind of exciting

00:14:48,079 --> 00:14:53,279
it was nice to see um but yeah i i agree

00:14:51,360 --> 00:14:56,160
like that

00:14:53,279 --> 00:14:57,680
both the the experimentation phase but

00:14:56,160 --> 00:14:59,760
also moving from experimentation to

00:14:57,680 --> 00:15:02,000
implementation or

00:14:59,760 --> 00:15:03,040
um also being able to segregate

00:15:02,000 --> 00:15:06,160
functionality

00:15:03,040 --> 00:15:08,880
i think there was a conversation i have

00:15:06,160 --> 00:15:10,880
fairly often with matt klein is you know

00:15:08,880 --> 00:15:13,680
there's a lot of built-ins

00:15:10,880 --> 00:15:15,279
in proxies right yeah and in envoy too

00:15:13,680 --> 00:15:16,800
right they have plug-ins for a variety

00:15:15,279 --> 00:15:20,560
of protocols that

00:15:16,800 --> 00:15:20,560
probably have low usage and aggregate

00:15:20,720 --> 00:15:25,120
those plugins represent a security risk

00:15:23,279 --> 00:15:28,800
right if you're not actually using

00:15:25,120 --> 00:15:31,759
that code and matt is quite eager to get

00:15:28,800 --> 00:15:33,120
those plugins out of the core and into

00:15:31,759 --> 00:15:37,199
an ecosystem

00:15:33,120 --> 00:15:39,920
of you know stable but separate

00:15:37,199 --> 00:15:40,959
plugins that people can choose to use

00:15:39,920 --> 00:15:42,720
and you know for

00:15:40,959 --> 00:15:45,440
for really big deployments or very

00:15:42,720 --> 00:15:48,240
security sensors and enterprises

00:15:45,440 --> 00:15:49,839
you know only configure and take

00:15:48,240 --> 00:15:52,160
dependencies on what you actually use

00:15:49,839 --> 00:15:53,600
is a pretty important thing and so if

00:15:52,160 --> 00:15:54,880
webassembly can help fulfill that

00:15:53,600 --> 00:15:57,279
problem too i think it will be very

00:15:54,880 --> 00:15:57,279
valuable

00:15:57,519 --> 00:16:01,360
i think this actually loops back to

00:15:59,519 --> 00:16:04,639
mitch and my talk as well

00:16:01,360 --> 00:16:07,199
in that wasm also really provides

00:16:04,639 --> 00:16:08,079
us as service mesh implementers a really

00:16:07,199 --> 00:16:10,480
unique

00:16:08,079 --> 00:16:11,519
tool to keep our service meshes light

00:16:10,480 --> 00:16:13,759
and fast

00:16:11,519 --> 00:16:15,680
because when users who have totally

00:16:13,759 --> 00:16:17,360
valid user requests come and ask for

00:16:15,680 --> 00:16:18,240
something that's very specific to their

00:16:17,360 --> 00:16:20,079
environment

00:16:18,240 --> 00:16:21,519
we can say hey you know that's a really

00:16:20,079 --> 00:16:23,199
awesome user request why don't you

00:16:21,519 --> 00:16:24,560
implement it in wasm yourself

00:16:23,199 --> 00:16:26,320
this isn't something that needs to go

00:16:24,560 --> 00:16:28,880
into the core service mesh

00:16:26,320 --> 00:16:30,320
and potentially reduce security or

00:16:28,880 --> 00:16:32,240
increase the

00:16:30,320 --> 00:16:35,040
amount of tests and all the rest of that

00:16:32,240 --> 00:16:37,360
because it's a small plugable piece

00:16:35,040 --> 00:16:39,199
we have a lot more freedom in what the

00:16:37,360 --> 00:16:41,360
service mesh does and doesn't and being

00:16:39,199 --> 00:16:44,880
able to define that which is

00:16:41,360 --> 00:16:46,639
also super exciting actually since we

00:16:44,880 --> 00:16:48,240
are talking about your thomas

00:16:46,639 --> 00:16:50,320
stock thomas we should we should talk

00:16:48,240 --> 00:16:52,800
more about your talk because

00:16:50,320 --> 00:16:54,320
i personally really enjoyed that talk i

00:16:52,800 --> 00:16:56,320
liked the fact that

00:16:54,320 --> 00:16:57,600
um you know you had obviously there was

00:16:56,320 --> 00:16:59,920
you but there was um

00:16:57,600 --> 00:17:01,680
sabine from uh she was there from

00:16:59,920 --> 00:17:02,639
console side and then we had mitch from

00:17:01,680 --> 00:17:04,959
istio

00:17:02,639 --> 00:17:06,799
and um i like the fact that you know it

00:17:04,959 --> 00:17:08,559
was interesting for me to see

00:17:06,799 --> 00:17:10,319
that you all bought brought some very

00:17:08,559 --> 00:17:11,199
similar and some very different points

00:17:10,319 --> 00:17:13,360
of view and

00:17:11,199 --> 00:17:15,039
i like the fact that you know each of

00:17:13,360 --> 00:17:18,480
you was very open to the others

00:17:15,039 --> 00:17:19,679
point of view um i would say all of your

00:17:18,480 --> 00:17:21,360
conversation

00:17:19,679 --> 00:17:23,439
like for example mitch brought up the

00:17:21,360 --> 00:17:24,880
whole issue of istio control plane

00:17:23,439 --> 00:17:27,039
simplification and

00:17:24,880 --> 00:17:28,559
uh you said an interesting thing where

00:17:27,039 --> 00:17:30,640
service mesh is not really about

00:17:28,559 --> 00:17:32,080
technology it's about people that really

00:17:30,640 --> 00:17:34,240
resonated with me

00:17:32,080 --> 00:17:36,080
it's really about that obviously we need

00:17:34,240 --> 00:17:38,160
to make things more simpler

00:17:36,080 --> 00:17:39,600
but broadly it is really about solving

00:17:38,160 --> 00:17:42,000
that problem and then

00:17:39,600 --> 00:17:43,919
i like the fact that console sabine from

00:17:42,000 --> 00:17:45,600
console came up with a different

00:17:43,919 --> 00:17:47,679
angle around how they didn't want to be

00:17:45,600 --> 00:17:48,640
an apm product and then how they went

00:17:47,679 --> 00:17:51,679
about it

00:17:48,640 --> 00:17:54,880
and i think i saw the theme around wasm

00:17:51,679 --> 00:17:56,960
in all of your conversations as well um

00:17:54,880 --> 00:17:58,080
it seems that you folks are also putting

00:17:56,960 --> 00:18:00,240
a lot of emphasis

00:17:58,080 --> 00:18:01,600
on the user experience and i think

00:18:00,240 --> 00:18:04,320
broadly as a community

00:18:01,600 --> 00:18:06,400
in our own open source as well as uh

00:18:04,320 --> 00:18:07,600
managed implementations we should keep

00:18:06,400 --> 00:18:10,000
that in mind

00:18:07,600 --> 00:18:10,720
um and then i think uh there were some

00:18:10,000 --> 00:18:13,440
lots of

00:18:10,720 --> 00:18:14,160
there was a lot of mesh humor i should

00:18:13,440 --> 00:18:16,640
say

00:18:14,160 --> 00:18:17,840
i'm going to steal some of those lines

00:18:16,640 --> 00:18:19,520
but i

00:18:17,840 --> 00:18:21,520
really like the three perspectives so

00:18:19,520 --> 00:18:23,440
for example when there was an issue

00:18:21,520 --> 00:18:25,760
um you know how does istio deal versus

00:18:23,440 --> 00:18:26,000
it with it versus console versus linker

00:18:25,760 --> 00:18:28,320
d

00:18:26,000 --> 00:18:30,400
and i think you spoke about taps and

00:18:28,320 --> 00:18:32,720
wire sharks and so on so forth

00:18:30,400 --> 00:18:34,240
uh i just i just love that talk from the

00:18:32,720 --> 00:18:36,480
for the fact that

00:18:34,240 --> 00:18:38,720
um i think we spend too much time

00:18:36,480 --> 00:18:40,559
thinking about how different we are

00:18:38,720 --> 00:18:42,400
i love the fact that you brought three

00:18:40,559 --> 00:18:44,640
different perspectives and

00:18:42,400 --> 00:18:46,559
you raise some really good issues that

00:18:44,640 --> 00:18:48,240
all of us across the board

00:18:46,559 --> 00:18:49,840
can use and bring into our own

00:18:48,240 --> 00:18:52,320
implementation so so just

00:18:49,840 --> 00:18:54,720
thank you for that talk louis i know you

00:18:52,320 --> 00:18:57,440
you like that one

00:18:54,720 --> 00:18:58,000
sorry go ahead thomas i was gonna say

00:18:57,440 --> 00:19:00,720
you bet

00:18:58,000 --> 00:19:01,520
uh i think i think the fun thing for me

00:19:00,720 --> 00:19:04,160
is how much

00:19:01,520 --> 00:19:06,160
uh we end up riffing on each other uh

00:19:04,160 --> 00:19:09,760
like a really great example

00:19:06,160 --> 00:19:13,280
is the um original uh

00:19:09,760 --> 00:19:16,320
istio in it container code we

00:19:13,280 --> 00:19:19,760
borrowed heavily on the uh linker d

00:19:16,320 --> 00:19:21,440
side of things um and now istio has gone

00:19:19,760 --> 00:19:22,799
and picked up a lot of our czech

00:19:21,440 --> 00:19:25,440
infrastructure which is great

00:19:22,799 --> 00:19:27,360
like it's super fun for me being part of

00:19:25,440 --> 00:19:29,280
the ecosystem just to see

00:19:27,360 --> 00:19:31,360
when you do something that's really

00:19:29,280 --> 00:19:32,320
great everyone goes and picks it up and

00:19:31,360 --> 00:19:34,640
adopts it and that's

00:19:32,320 --> 00:19:36,400
awesome it makes me so happy because we

00:19:34,640 --> 00:19:39,280
can go and pick the things that are

00:19:36,400 --> 00:19:40,880
unique to us and go double down on that

00:19:39,280 --> 00:19:42,960
and have the rest of the community build

00:19:40,880 --> 00:19:45,200
out really great solutions that work for

00:19:42,960 --> 00:19:47,679
everybody

00:19:45,200 --> 00:19:47,679
awesome

00:19:48,720 --> 00:19:52,880
louis i know you listened to that talk

00:19:50,960 --> 00:19:55,120
as well

00:19:52,880 --> 00:19:57,280
oh yeah no i mean i i very much enjoyed

00:19:55,120 --> 00:19:59,520
that book the

00:19:57,280 --> 00:19:59,520
um

00:20:00,480 --> 00:20:04,960
yeah i mean i think there's there's a

00:20:02,080 --> 00:20:08,799
transition going on i think

00:20:04,960 --> 00:20:10,080
um right it's kind of this this crossing

00:20:08,799 --> 00:20:13,919
the chasm moment

00:20:10,080 --> 00:20:17,200
um because the kind of proof of that

00:20:13,919 --> 00:20:17,919
was that there were talks by people who

00:20:17,200 --> 00:20:21,120
had gone

00:20:17,919 --> 00:20:24,240
through real deployment struggles

00:20:21,120 --> 00:20:27,120
persisted become familiar with the tools

00:20:24,240 --> 00:20:29,200
and gotten real demonstrable value from

00:20:27,120 --> 00:20:32,080
the deployment

00:20:29,200 --> 00:20:33,440
there was a talk about uh provisioning

00:20:32,080 --> 00:20:37,200
machine learning stuff

00:20:33,440 --> 00:20:39,840
from uh splunk which was a

00:20:37,200 --> 00:20:41,280
a great kind of classic you know user

00:20:39,840 --> 00:20:43,360
experience

00:20:41,280 --> 00:20:44,559
and value the right kind of talk where

00:20:43,360 --> 00:20:45,280
there was you know struggle in the

00:20:44,559 --> 00:20:48,400
middle

00:20:45,280 --> 00:20:49,280
right our our hero had to go through a

00:20:48,400 --> 00:20:52,559
process

00:20:49,280 --> 00:20:54,960
uh but ultimately came out victorious um

00:20:52,559 --> 00:20:56,080
and it's nice to see more of those kinds

00:20:54,960 --> 00:20:59,520
of talks

00:20:56,080 --> 00:21:01,440
at these types of events and i think

00:20:59,520 --> 00:21:03,600
we're starting to see that frequency go

00:21:01,440 --> 00:21:06,880
up and part of that is

00:21:03,600 --> 00:21:10,320
about people right

00:21:06,880 --> 00:21:11,840
service mesh is a other than the fact

00:21:10,320 --> 00:21:13,200
that it's a terrible term because it

00:21:11,840 --> 00:21:14,480
doesn't describe what it does but then

00:21:13,200 --> 00:21:17,520
most terms and computers

00:21:14,480 --> 00:21:18,320
are descriptive i think we're getting to

00:21:17,520 --> 00:21:20,080
the point where

00:21:18,320 --> 00:21:21,360
there's enough critical mass of people

00:21:20,080 --> 00:21:24,799
who understand

00:21:21,360 --> 00:21:26,240
the value that are able to bring that

00:21:24,799 --> 00:21:27,039
value into their organization and

00:21:26,240 --> 00:21:29,520
explain it to

00:21:27,039 --> 00:21:30,240
other people who don't necessarily

00:21:29,520 --> 00:21:32,480
understand it

00:21:30,240 --> 00:21:34,240
yes but when they can show the value in

00:21:32,480 --> 00:21:35,760
the context of their own business

00:21:34,240 --> 00:21:37,760
right that's when the light bulbs really

00:21:35,760 --> 00:21:38,580
start to go on and i think we're

00:21:37,760 --> 00:21:39,840
starting to see

00:21:38,580 --> 00:21:42,480
[Music]

00:21:39,840 --> 00:21:42,480
more of that

00:21:43,039 --> 00:21:48,480
know i think you know i i hate being

00:21:46,159 --> 00:21:50,640
in the realm of prognostication but i i

00:21:48,480 --> 00:21:53,520
feel a lot better about that than i did

00:21:50,640 --> 00:21:54,960
say at the beginning of 2020 um despite

00:21:53,520 --> 00:21:57,600
it being 2020.

00:21:54,960 --> 00:21:58,799
um so that that was particularly

00:21:57,600 --> 00:22:01,039
encouraging for me and

00:21:58,799 --> 00:22:02,240
you know that that kind of a

00:22:01,039 --> 00:22:05,679
conversation that you

00:22:02,240 --> 00:22:08,320
and uh were all having about

00:22:05,679 --> 00:22:10,080
your different experiences also kind of

00:22:08,320 --> 00:22:11,919
reinforced that for me a bit because you

00:22:10,080 --> 00:22:13,760
were seeing the same things from users

00:22:11,919 --> 00:22:16,799
you were explaining the same context

00:22:13,760 --> 00:22:18,080
uh uh solutions you know sometimes

00:22:16,799 --> 00:22:19,280
taking slightly different approaches to

00:22:18,080 --> 00:22:21,120
the same problem space but

00:22:19,280 --> 00:22:23,120
mostly seeing the same problems and and

00:22:21,120 --> 00:22:25,600
working hard to address them

00:22:23,120 --> 00:22:26,960
because you were in engagements right

00:22:25,600 --> 00:22:28,400
you were doing that work because

00:22:26,960 --> 00:22:31,280
customers were asking you for

00:22:28,400 --> 00:22:31,520
help right which is a good place to be

00:22:31,280 --> 00:22:34,080
as

00:22:31,520 --> 00:22:35,520
a as a product as a technology as an

00:22:34,080 --> 00:22:37,760
open source project

00:22:35,520 --> 00:22:41,440
um so that was that was kind of that was

00:22:37,760 --> 00:22:45,440
why i like that talk so much

00:22:41,440 --> 00:22:48,480
100 in fact i think it's almost uh

00:22:45,440 --> 00:22:50,720
almost a theme that we had from today

00:22:48,480 --> 00:22:52,159
is this like real world use cases that

00:22:50,720 --> 00:22:54,960
are concrete you know

00:22:52,159 --> 00:22:56,000
talking about telco and the interesting

00:22:54,960 --> 00:22:58,559
unique

00:22:56,000 --> 00:23:00,159
problems that comes from that and why a

00:22:58,559 --> 00:23:00,799
common service mesh pattern can work

00:23:00,159 --> 00:23:02,880
there

00:23:00,799 --> 00:23:03,919
uh the machine learning and you know

00:23:02,880 --> 00:23:05,760
making something that

00:23:03,919 --> 00:23:07,679
maybe was originally just for

00:23:05,760 --> 00:23:09,039
microservices work there and going

00:23:07,679 --> 00:23:10,320
through the hero's journey and figuring

00:23:09,039 --> 00:23:13,280
out how to have it all

00:23:10,320 --> 00:23:14,320
fit together the multi-cluster talk was

00:23:13,280 --> 00:23:16,159
fantastic

00:23:14,320 --> 00:23:17,760
how to you know go and make this a

00:23:16,159 --> 00:23:20,400
globally distributed system

00:23:17,760 --> 00:23:21,600
um talking about the security pieces how

00:23:20,400 --> 00:23:24,320
what the dod worked through

00:23:21,600 --> 00:23:26,400
like it very much was this here's a

00:23:24,320 --> 00:23:28,640
concrete application of these

00:23:26,400 --> 00:23:30,080
generic patterns and primitives that

00:23:28,640 --> 00:23:34,720
work for everybody which

00:23:30,080 --> 00:23:34,720
gets me insanely excited on a regular

00:23:34,840 --> 00:23:38,159
basis

00:23:36,080 --> 00:23:40,320
yeah i think i mean i would just echo

00:23:38,159 --> 00:23:40,320
that

00:23:41,120 --> 00:23:44,159
great great points and i think maybe you

00:23:42,960 --> 00:23:45,279
know what we should do we've got five

00:23:44,159 --> 00:23:47,840
minutes

00:23:45,279 --> 00:23:49,279
maybe recap our takeaways of the day i

00:23:47,840 --> 00:23:51,520
think it would be great

00:23:49,279 --> 00:23:53,679
also later to talk to folks over chat

00:23:51,520 --> 00:23:55,679
and see what they thought of the day but

00:23:53,679 --> 00:23:57,120
um i'll just summarize mine and i do

00:23:55,679 --> 00:23:58,000
think i mean you touched on one of the

00:23:57,120 --> 00:23:59,360
talks

00:23:58,000 --> 00:24:02,320
we didn't necessarily dive into but

00:23:59,360 --> 00:24:04,240
multi-cluster is important and in fact

00:24:02,320 --> 00:24:06,320
everything is important multi-platform

00:24:04,240 --> 00:24:09,520
multimedia and multi-group

00:24:06,320 --> 00:24:11,679
um i think broadly there was one

00:24:09,520 --> 00:24:13,600
interesting thing for today which is

00:24:11,679 --> 00:24:16,320
certainly smash everybody agrees

00:24:13,600 --> 00:24:17,919
to reducing complexity of applications

00:24:16,320 --> 00:24:19,600
but i think each one of us needs to

00:24:17,919 --> 00:24:21,440
manage the complexity of the service

00:24:19,600 --> 00:24:22,480
mesh implementations themselves so we

00:24:21,440 --> 00:24:24,400
need to work

00:24:22,480 --> 00:24:26,159
on making the implementation simpler to

00:24:24,400 --> 00:24:28,320
consume and we should

00:24:26,159 --> 00:24:30,240
think like a user and not like somebody

00:24:28,320 --> 00:24:33,120
who's building a distributed system or

00:24:30,240 --> 00:24:35,039
some some piece of infrastructure um

00:24:33,120 --> 00:24:36,640
debugging was another theme that came up

00:24:35,039 --> 00:24:39,279
in several talks i think

00:24:36,640 --> 00:24:40,720
for example istio seemed to be the

00:24:39,279 --> 00:24:42,720
flavor of the day but i think

00:24:40,720 --> 00:24:44,159
they've also lots of interesting

00:24:42,720 --> 00:24:46,559
suggestions about

00:24:44,159 --> 00:24:47,360
doing better on the debugging side then

00:24:46,559 --> 00:24:49,200
i would say

00:24:47,360 --> 00:24:51,200
number of service mesh implementations i

00:24:49,200 --> 00:24:53,039
think the market will decide and

00:24:51,200 --> 00:24:54,960
i think the key takeaway for there is

00:24:53,039 --> 00:24:56,880
service meshes here to stay

00:24:54,960 --> 00:24:58,000
uh we need to make our thing simpler

00:24:56,880 --> 00:25:00,720
better

00:24:58,000 --> 00:25:02,320
security i heard the last statement in

00:25:00,720 --> 00:25:05,200
the dod talk which was

00:25:02,320 --> 00:25:07,360
mesh is key to security i love the fact

00:25:05,200 --> 00:25:07,679
that tetrad and dod got together and

00:25:07,360 --> 00:25:09,600
they

00:25:07,679 --> 00:25:12,880
solved the use case from a customer's

00:25:09,600 --> 00:25:15,039
perspective which was dod in this case

00:25:12,880 --> 00:25:15,919
i think the same thing in fact kunal in

00:25:15,039 --> 00:25:18,159
my talk

00:25:15,919 --> 00:25:19,360
drives our relationships with atnt and

00:25:18,159 --> 00:25:21,039
other big telcos and

00:25:19,360 --> 00:25:22,720
that's why we opened our talk so he

00:25:21,039 --> 00:25:24,400
could give a customer he's like the

00:25:22,720 --> 00:25:26,840
voice of customer here

00:25:24,400 --> 00:25:28,960
um and hopefully we keep that customer

00:25:26,840 --> 00:25:30,799
perspective i would say as

00:25:28,960 --> 00:25:32,400
i would just say as a community we

00:25:30,799 --> 00:25:34,480
should really think

00:25:32,400 --> 00:25:36,640
of all of the significant collaboration

00:25:34,480 --> 00:25:38,559
opportunities that surfaced up today

00:25:36,640 --> 00:25:39,679
sometimes i feel like we spend far far

00:25:38,559 --> 00:25:41,440
too much time

00:25:39,679 --> 00:25:42,960
talking about our differences not so

00:25:41,440 --> 00:25:44,000
much about the things we could do

00:25:42,960 --> 00:25:46,720
together and i think

00:25:44,000 --> 00:25:48,400
the latter far outweighs the former and

00:25:46,720 --> 00:25:49,200
i would say we should keep expanding the

00:25:48,400 --> 00:25:51,279
definition of

00:25:49,200 --> 00:25:52,720
mesh let's support our open source

00:25:51,279 --> 00:25:55,120
communities like esther

00:25:52,720 --> 00:25:56,000
kumar lincoln whatever is out there

00:25:55,120 --> 00:25:58,720
let's go support

00:25:56,000 --> 00:26:00,159
that and i think um you know for us we

00:25:58,720 --> 00:26:02,000
will continue to bring the best of

00:26:00,159 --> 00:26:03,200
google into our managed solutions like

00:26:02,000 --> 00:26:04,799
traffic director

00:26:03,200 --> 00:26:06,960
and the service measure with a lot of

00:26:04,799 --> 00:26:08,400
humility because we are also learning in

00:26:06,960 --> 00:26:09,279
this journey from all of you from

00:26:08,400 --> 00:26:11,279
customers

00:26:09,279 --> 00:26:12,960
so we look forward to collaborating and

00:26:11,279 --> 00:26:13,440
with that i'll hand off to thomas and

00:26:12,960 --> 00:26:14,799
louis

00:26:13,440 --> 00:26:17,200
would love to hear what you have what

00:26:14,799 --> 00:26:19,279
you took away from the day

00:26:17,200 --> 00:26:20,720
i'll i'll actually just put a a little

00:26:19,279 --> 00:26:23,200
um

00:26:20,720 --> 00:26:24,159
blurb in here which is uh we'd love to

00:26:23,200 --> 00:26:26,159
work with everyone

00:26:24,159 --> 00:26:27,840
in service mesh interface to go and

00:26:26,159 --> 00:26:30,320
build out that api

00:26:27,840 --> 00:26:31,360
and the common patterns and use cases

00:26:30,320 --> 00:26:34,080
there so

00:26:31,360 --> 00:26:35,679
folks want to uh jump over to the smi

00:26:34,080 --> 00:26:37,679
slack channel and chat with us there

00:26:35,679 --> 00:26:39,360
show up at our community meetings would

00:26:37,679 --> 00:26:41,440
love to work with expanding out what

00:26:39,360 --> 00:26:43,760
those apis mean what the

00:26:41,440 --> 00:26:45,120
core problems that service meshes solve

00:26:43,760 --> 00:26:48,320
are and you know

00:26:45,120 --> 00:26:50,000
moving that discussion forward um since

00:26:48,320 --> 00:26:54,240
i'm talking i'll give my

00:26:50,000 --> 00:26:56,640
two cents uh multi-cluster was a theme

00:26:54,240 --> 00:26:58,640
it was a great takeaway i love getting

00:26:56,640 --> 00:27:00,240
together and hearing again the use cases

00:26:58,640 --> 00:27:03,039
what everybody's up to

00:27:00,240 --> 00:27:03,919
and the differing perspectives it's why

00:27:03,039 --> 00:27:06,240
uh

00:27:03,919 --> 00:27:08,400
we had the talk that we did to chat

00:27:06,240 --> 00:27:09,279
about the trade-offs and understand it i

00:27:08,400 --> 00:27:11,279
had

00:27:09,279 --> 00:27:12,880
one of the funnest days putting that

00:27:11,279 --> 00:27:14,080
together just because it's so much fun

00:27:12,880 --> 00:27:16,400
to chat through

00:27:14,080 --> 00:27:17,919
how all the pieces fit together and like

00:27:16,400 --> 00:27:20,640
i have so many blind spots

00:27:17,919 --> 00:27:24,159
it's fun to see the elephant from

00:27:20,640 --> 00:27:24,159
someone else's perspective for sure

00:27:24,880 --> 00:27:28,399
uh louis how about you

00:27:29,200 --> 00:27:32,320
yeah so we all had the privilege of

00:27:30,880 --> 00:27:35,200
watching the talks yesterday

00:27:32,320 --> 00:27:36,000
and so you know i i got to spend uh you

00:27:35,200 --> 00:27:38,159
know some time

00:27:36,000 --> 00:27:39,200
thinking about what my my takeaways

00:27:38,159 --> 00:27:42,640
would be

00:27:39,200 --> 00:27:45,039
um the first which is common experience

00:27:42,640 --> 00:27:47,760
right we are you know the different

00:27:45,039 --> 00:27:51,520
service mesh implementations are mostly

00:27:47,760 --> 00:27:54,159
seeing the same set of requirements from

00:27:51,520 --> 00:27:56,720
their users uh there's a lot of

00:27:54,159 --> 00:27:59,120
commonality there

00:27:56,720 --> 00:27:59,760
which indicates that the kind of base

00:27:59,120 --> 00:28:03,200
set of

00:27:59,760 --> 00:28:04,960
features that service meshes present

00:28:03,200 --> 00:28:06,559
are pretty well entrenched now in the

00:28:04,960 --> 00:28:09,360
minds of you know

00:28:06,559 --> 00:28:10,159
the potential users and to some degree

00:28:09,360 --> 00:28:12,880
they're looking for

00:28:10,159 --> 00:28:12,880
consistency

00:28:14,399 --> 00:28:18,799
i think we're just starting to hit the

00:28:19,520 --> 00:28:26,000
you know the early adopter ways and then

00:28:22,880 --> 00:28:27,919
you know the kind of the second wave of

00:28:26,000 --> 00:28:29,679
enterprise and then the third brain will

00:28:27,919 --> 00:28:31,520
probably be of

00:28:29,679 --> 00:28:33,520
meeting all the needs of enterprise

00:28:31,520 --> 00:28:35,440
right because

00:28:33,520 --> 00:28:37,760
you know land and expand is often a

00:28:35,440 --> 00:28:41,520
phrase used in enterprise sales right

00:28:37,760 --> 00:28:45,279
um when you're an open source project

00:28:41,520 --> 00:28:46,640
uh you know you a lot of these projects

00:28:45,279 --> 00:28:49,760
they're you know going to be

00:28:46,640 --> 00:28:50,000
put under pressure to start moving out

00:28:49,760 --> 00:28:51,919
and

00:28:50,000 --> 00:28:53,200
covering more of those scenarios that

00:28:51,919 --> 00:28:54,559
are important to enterprises with the

00:28:53,200 --> 00:28:54,880
same set of properties right whether

00:28:54,559 --> 00:28:57,200
it's

00:28:54,880 --> 00:28:59,440
expanding the set of protocols you know

00:28:57,200 --> 00:29:02,960
it's expanding the set of environments

00:28:59,440 --> 00:29:04,240
um and and possibly other things too

00:29:02,960 --> 00:29:05,520
it's hard to speculate because there are

00:29:04,240 --> 00:29:08,720
so many different integrations that

00:29:05,520 --> 00:29:08,720
enterprises want to do

00:29:09,039 --> 00:29:12,240
that's great that indicates a degree of

00:29:10,559 --> 00:29:15,200
maturity but it's also a big challenge

00:29:12,240 --> 00:29:17,440
right as a if you talk about

00:29:15,200 --> 00:29:18,960
customizability and extensibility i used

00:29:17,440 --> 00:29:20,720
to work in a classical enterprise

00:29:18,960 --> 00:29:24,080
software company before

00:29:20,720 --> 00:29:25,760
i worked at google and customization

00:29:24,080 --> 00:29:27,440
often caused people to run screaming for

00:29:25,760 --> 00:29:28,799
the hills that they had worked before on

00:29:27,440 --> 00:29:30,640
systems like sap

00:29:28,799 --> 00:29:31,840
which were endlessly and instantly

00:29:30,640 --> 00:29:35,600
customizable

00:29:31,840 --> 00:29:38,480
um so that that challenged that

00:29:35,600 --> 00:29:40,320
platform versus product challenge and

00:29:38,480 --> 00:29:40,960
where to draw a line between those two

00:29:40,320 --> 00:29:42,559
things

00:29:40,960 --> 00:29:44,480
for these projects is going to be a

00:29:42,559 --> 00:29:45,840
challenge um

00:29:44,480 --> 00:29:47,279
it's a great challenge to have because

00:29:45,840 --> 00:29:48,320
it means you have things that people

00:29:47,279 --> 00:29:50,799
want you to do

00:29:48,320 --> 00:29:52,159
but it's hard to get right uh and we'll

00:29:50,799 --> 00:29:53,520
probably get it wrong several times

00:29:52,159 --> 00:29:56,480
before we get it right

00:29:53,520 --> 00:29:57,760
um hd has already had a couple of stabs

00:29:56,480 --> 00:29:59,520
about it in a couple of different ways

00:29:57,760 --> 00:30:02,320
and we've learned from those mistakes

00:29:59,520 --> 00:30:03,120
um and i expect that we'll keep doing

00:30:02,320 --> 00:30:05,919
that

00:30:03,120 --> 00:30:07,200
and we'll see which patterns the

00:30:05,919 --> 00:30:08,559
industry is willing to accept and which

00:30:07,200 --> 00:30:09,520
ones it isn't

00:30:08,559 --> 00:30:12,480
and i think that's going to be a big

00:30:09,520 --> 00:30:12,480
part of 2021

00:30:20,559 --> 00:30:26,720
that sounds great i think we're just

00:30:23,760 --> 00:30:31,200
about out of time but there was

00:30:26,720 --> 00:30:32,880
uh a few questions in the chat

00:30:31,200 --> 00:30:37,840
are we gonna take those over on slack or

00:30:32,880 --> 00:30:37,840
are we gonna just try and do them now

00:30:40,559 --> 00:30:44,080
let's see so there was a question about

00:30:43,120 --> 00:30:47,520
the

00:30:44,080 --> 00:30:49,520
hardcore openstack stuff and telcos and

00:30:47,520 --> 00:30:52,720
what's motivating telcos to

00:30:49,520 --> 00:30:53,760
look at mesh and kubernetes uh projector

00:30:52,720 --> 00:30:56,399
thing as you

00:30:53,760 --> 00:30:58,559
talked a lot about telco what is called

00:30:56,399 --> 00:31:01,919
a change in the telco industry

00:30:58,559 --> 00:31:04,720
why is this relevant and i think

00:31:01,919 --> 00:31:07,519
um one of the key things to remember is

00:31:04,720 --> 00:31:10,000
service mesh is not tied to kubernetes

00:31:07,519 --> 00:31:11,120
service mesh is agnostic to compute

00:31:10,000 --> 00:31:13,200
right a good service

00:31:11,120 --> 00:31:14,320
implementation should support containers

00:31:13,200 --> 00:31:17,919
and vms

00:31:14,320 --> 00:31:19,279
so even if telcos have open stack vms at

00:31:17,919 --> 00:31:20,640
the service mesh level

00:31:19,279 --> 00:31:22,640
like we should be able to support

00:31:20,640 --> 00:31:23,440
services that come out of openstack as

00:31:22,640 --> 00:31:25,919
well as

00:31:23,440 --> 00:31:26,799
um that are orchestrated through your

00:31:25,919 --> 00:31:29,679
cars

00:31:26,799 --> 00:31:32,720
and i would say in fact the ability to

00:31:29,679 --> 00:31:35,760
put policy uniformly across kubernetes

00:31:32,720 --> 00:31:38,000
and a vm based services is one of the

00:31:35,760 --> 00:31:40,960
big reasons that we can actually start

00:31:38,000 --> 00:31:41,519
helping telcos migrate towards and then

00:31:40,960 --> 00:31:44,720
help them

00:31:41,519 --> 00:31:47,039
adopt service mesh architecture so

00:31:44,720 --> 00:31:48,799
in fact in our talk we spoke about a use

00:31:47,039 --> 00:31:50,799
case called cap grow drain

00:31:48,799 --> 00:31:52,320
which describes this exact thing like

00:31:50,799 --> 00:31:54,720
how how do you manage

00:31:52,320 --> 00:31:55,440
your vm or open stack based deployments

00:31:54,720 --> 00:31:58,720
and

00:31:55,440 --> 00:32:00,240
your kubernetes deployments by using the

00:31:58,720 --> 00:32:03,279
service mesh layer

00:32:00,240 --> 00:32:05,120
to treat them more consistently so i i

00:32:03,279 --> 00:32:06,880
would say that is the key right

00:32:05,120 --> 00:32:08,799
we should not assume service mesh is

00:32:06,880 --> 00:32:10,480
only for containers it is

00:32:08,799 --> 00:32:15,840
compute agnostic it should work on

00:32:10,480 --> 00:32:15,840
containers vms and bare metal

00:32:18,320 --> 00:32:21,919
i think we answered or kevin was just

00:32:21,200 --> 00:32:25,600
agreeing

00:32:21,919 --> 00:32:27,840
with that statement about using uh

00:32:25,600 --> 00:32:29,760
webassembly for the vmware stuff that i

00:32:27,840 --> 00:32:32,960
think we covered

00:32:29,760 --> 00:32:35,679
and then a pitch for smi and federation

00:32:32,960 --> 00:32:35,679
between meshes

00:32:36,799 --> 00:32:39,840
which is a very interesting subject i

00:32:39,120 --> 00:32:44,559
think

00:32:39,840 --> 00:32:44,559
that in your conversation with console

00:32:45,200 --> 00:32:49,120
there was some good uh discussion of

00:32:47,840 --> 00:32:50,880
some of the bootstrapping aspects of

00:32:49,120 --> 00:32:54,320
federation but i i think we're going to

00:32:50,880 --> 00:32:54,320
have to move this conversation over to

00:32:54,840 --> 00:32:57,840
slack

00:33:07,200 --> 00:33:10,399
um yeah i just wanted to thank everybody

00:33:09,120 --> 00:33:12,480
for their time and you know

00:33:10,399 --> 00:33:13,760
uh it's always good to be involved in

00:33:12,480 --> 00:33:15,120
these events i

00:33:13,760 --> 00:33:17,360
i know it's something difficult being

00:33:15,120 --> 00:33:19,120
remote but i i i found a lot of the

00:33:17,360 --> 00:33:20,559
content very informative it was great to

00:33:19,120 --> 00:33:21,600
see some of the dialogues and the use

00:33:20,559 --> 00:33:24,720
cases

00:33:21,600 --> 00:33:25,279
um examples of user perseverance and

00:33:24,720 --> 00:33:27,200
success

00:33:25,279 --> 00:33:28,320
in particular that's always heartwarming

00:33:27,200 --> 00:33:30,080
um

00:33:28,320 --> 00:33:31,840
and you know it's an opportunity to talk

00:33:30,080 --> 00:33:38,159
to peers in the industry and folks i

00:33:31,840 --> 00:33:42,080
don't see in an everyday basis

00:33:38,159 --> 00:33:42,080

YouTube URL: https://www.youtube.com/watch?v=ZmkpWrvJFho


