Title: Graduated Project Lightning Talk: Rook: Enterprise Storage for Kubernetes - Travis Nielsen, Red Hat
Publication date: 2021-05-09
Playlist: KubeCon + CloudNativeCon Europe 2021
Description: 
	Donâ€™t miss out! Join us at our upcoming event: KubeCon + CloudNativeCon North America 2021 in Los Angeles, CA from October 12-15. Learn more at https://kubecon.io The conference features presentations from developers and end users of Kubernetes, Prometheus, Envoy, and all of the other CNCF-hosted projects.

Graduated Project Lightning Talk: Rook: Enterprise Storage for Kubernetes - Travis Nielsen, Red Hat

All Kubernetes clusters require storage! But how do you configure and manage it? Come catch a glimpse of how Rook provides an enterprise storage platform to the community as an upstream and open-source project, available to any Kubernetes cluster, whether running on-prem or in the cloud. Rook was accepted as a graduated project by the Cloud Native Computing Foundation in October 2020.
Captions: 
	00:00:00,080 --> 00:00:03,600
hello welcome to this lightning talk uh

00:00:02,480 --> 00:00:06,080
presenting on rook

00:00:03,600 --> 00:00:07,600
enterprise storage for kubernetes i'm

00:00:06,080 --> 00:00:08,320
travis nielsen one of the original rook

00:00:07,600 --> 00:00:10,400
maintainers

00:00:08,320 --> 00:00:11,840
and i work for red hat happy to be here

00:00:10,400 --> 00:00:13,679
with you today virtually

00:00:11,840 --> 00:00:15,200
and hope to meet you soon in person at

00:00:13,679 --> 00:00:17,440
some point

00:00:15,200 --> 00:00:18,560
so let's dive right in all right so who

00:00:17,440 --> 00:00:21,279
needs storage

00:00:18,560 --> 00:00:22,480
we all need storage right applications

00:00:21,279 --> 00:00:24,800
require persistence

00:00:22,480 --> 00:00:26,080
that's just what it comes down to now

00:00:24,800 --> 00:00:27,599
depending on where you're running

00:00:26,080 --> 00:00:29,439
you have different solutions available

00:00:27,599 --> 00:00:31,920
for storage if you're running

00:00:29,439 --> 00:00:33,920
a cloud provider now you have options

00:00:31,920 --> 00:00:35,680
available available for storage

00:00:33,920 --> 00:00:37,520
you might also be finding limitations

00:00:35,680 --> 00:00:38,559
with them or each cloud provider is

00:00:37,520 --> 00:00:39,840
different

00:00:38,559 --> 00:00:42,160
you don't have a consistent platform

00:00:39,840 --> 00:00:44,079
there or

00:00:42,160 --> 00:00:45,360
if you go into your own data center you

00:00:44,079 --> 00:00:47,039
kind of fall off a cliff and you say

00:00:45,360 --> 00:00:49,920
wait what do i do for storage now i have

00:00:47,039 --> 00:00:51,600
to go find some external solution

00:00:49,920 --> 00:00:53,360
to provide storage to my kubernetes

00:00:51,600 --> 00:00:55,840
cluster what do i do

00:00:53,360 --> 00:00:57,440
third point storage is traditionally not

00:00:55,840 --> 00:01:00,239
part of your kubernetes cluster

00:00:57,440 --> 00:01:01,440
it's treated as an external plug-in but

00:01:00,239 --> 00:01:04,080
why really should

00:01:01,440 --> 00:01:06,320
storage be external to kubernetes

00:01:04,080 --> 00:01:08,240
shouldn't we be able to manage storage

00:01:06,320 --> 00:01:10,320
as any other kubernetes application

00:01:08,240 --> 00:01:11,920
inside the same cluster

00:01:10,320 --> 00:01:14,799
and finally a question we started with

00:01:11,920 --> 00:01:15,840
was well if you're building a data

00:01:14,799 --> 00:01:18,000
platform

00:01:15,840 --> 00:01:19,680
can you really trust a new data platform

00:01:18,000 --> 00:01:21,840
something built from scratch

00:01:19,680 --> 00:01:22,799
or is there a way we can bring in a

00:01:21,840 --> 00:01:24,720
stable

00:01:22,799 --> 00:01:26,560
data platform that's been around for

00:01:24,720 --> 00:01:27,119
years already so we don't have to go

00:01:26,560 --> 00:01:29,200
rewrite

00:01:27,119 --> 00:01:30,880
that data later so we set out with some

00:01:29,200 --> 00:01:31,600
goals early in the book project and we

00:01:30,880 --> 00:01:34,560
said

00:01:31,600 --> 00:01:35,520
we want to make storage available

00:01:34,560 --> 00:01:38,560
natively to your

00:01:35,520 --> 00:01:41,280
grenade's cluster of course it'll be

00:01:38,560 --> 00:01:43,439
consumed like any other storage plug-in

00:01:41,280 --> 00:01:44,320
they'll use storage classes and pvcs and

00:01:43,439 --> 00:01:46,720
pvs

00:01:44,320 --> 00:01:48,000
and all that goodness so it will be

00:01:46,720 --> 00:01:49,520
consumed

00:01:48,000 --> 00:01:51,040
the same with the same patterns that

00:01:49,520 --> 00:01:53,360
you've already been using

00:01:51,040 --> 00:01:54,560
a second storage should be automated and

00:01:53,360 --> 00:01:57,200
it should be done in a way

00:01:54,560 --> 00:01:58,479
that is native to kubernetes the way you

00:01:57,200 --> 00:02:00,479
do things in kubernetes

00:01:58,479 --> 00:02:02,240
and you add onto kubernetes is with

00:02:00,479 --> 00:02:04,240
operators and with custom resource

00:02:02,240 --> 00:02:07,119
definitions or crds

00:02:04,240 --> 00:02:08,640
so if you have those the operator can

00:02:07,119 --> 00:02:10,560
take care of all the deployment the

00:02:08,640 --> 00:02:12,080
configuration the upgrades

00:02:10,560 --> 00:02:13,599
perform all the automation you need to

00:02:12,080 --> 00:02:16,720
take care of your

00:02:13,599 --> 00:02:18,319
your data platform and so with those

00:02:16,720 --> 00:02:20,800
requirements we said well

00:02:18,319 --> 00:02:22,720
where is a stable data platform and how

00:02:20,800 --> 00:02:24,239
can we integrate it with kubernetes

00:02:22,720 --> 00:02:26,160
uh we looked at a few and we started

00:02:24,239 --> 00:02:28,959
with ceph we said okay we believe

00:02:26,160 --> 00:02:30,560
in ceph it's been around for a long time

00:02:28,959 --> 00:02:32,560
so we're going to take sef

00:02:30,560 --> 00:02:34,560
we're going to bring it to kubernetes

00:02:32,560 --> 00:02:35,920
and that's where rook was born

00:02:34,560 --> 00:02:38,720
but now rook has been out for a few

00:02:35,920 --> 00:02:41,519
years we've declared brook stable

00:02:38,720 --> 00:02:42,560
in december of 2018 so we're yep so

00:02:41,519 --> 00:02:44,239
we're just over two years with

00:02:42,560 --> 00:02:45,920
production deployments

00:02:44,239 --> 00:02:47,280
there are many so many clusters out

00:02:45,920 --> 00:02:50,400
there in production uh

00:02:47,280 --> 00:02:52,560
i frequently hear of users just saying

00:02:50,400 --> 00:02:54,239
how glad they are to be running rook in

00:02:52,560 --> 00:02:57,040
production it is stable

00:02:54,239 --> 00:02:58,560
there are clusters with hundreds of

00:02:57,040 --> 00:03:01,120
nodes we've got clusters of

00:02:58,560 --> 00:03:02,319
many petabytes of data we have some

00:03:01,120 --> 00:03:03,599
large clusters out there

00:03:02,319 --> 00:03:05,360
running production we don't know about

00:03:03,599 --> 00:03:07,440
most of the clusters honestly

00:03:05,360 --> 00:03:08,400
because it is an upstream project people

00:03:07,440 --> 00:03:09,680
are free to use it

00:03:08,400 --> 00:03:12,159
and they don't even have to tell us

00:03:09,680 --> 00:03:14,879
about it so what is the storage platform

00:03:12,159 --> 00:03:16,080
what does that provide to us that is so

00:03:14,879 --> 00:03:17,840
important to build on

00:03:16,080 --> 00:03:20,640
well there's different types of of

00:03:17,840 --> 00:03:22,640
storage and there are really three types

00:03:20,640 --> 00:03:24,799
that you think about in in kubernetes

00:03:22,640 --> 00:03:27,120
environment for in general

00:03:24,799 --> 00:03:28,400
okay first is block storage where you

00:03:27,120 --> 00:03:31,599
might have a read

00:03:28,400 --> 00:03:33,360
read write once volume a pod needs to

00:03:31,599 --> 00:03:37,120
write to his storage databases

00:03:33,360 --> 00:03:38,640
and whatnot just a simple block storage

00:03:37,120 --> 00:03:39,920
next we've got shared file systems so

00:03:38,640 --> 00:03:41,280
you've got multiple pods that need to

00:03:39,920 --> 00:03:44,640
share the same volume

00:03:41,280 --> 00:03:47,280
that's you know read write many

00:03:44,640 --> 00:03:49,440
stuff provides that with ffs and then

00:03:47,280 --> 00:03:50,560
finally object storage provides an s3

00:03:49,440 --> 00:03:53,840
interface

00:03:50,560 --> 00:03:54,720
with buckets gets inputs and all that so

00:03:53,840 --> 00:03:56,959
ceph has

00:03:54,720 --> 00:03:58,400
has all three of these provided in one

00:03:56,959 --> 00:03:59,760
storage platform

00:03:58,400 --> 00:04:02,640
so let's talk about the community so

00:03:59,760 --> 00:04:05,760
rook is a cncf graduated project where

00:04:02,640 --> 00:04:07,360
in october the cncf accepted us as a

00:04:05,760 --> 00:04:09,040
graduated project

00:04:07,360 --> 00:04:10,000
we believe that's a great testament to

00:04:09,040 --> 00:04:11,920
what we've been building and the

00:04:10,000 --> 00:04:14,080
community we've been building

00:04:11,920 --> 00:04:15,200
and then all the other stats are you

00:04:14,080 --> 00:04:16,959
know just evidence that

00:04:15,200 --> 00:04:18,560
people are using it over 200 million

00:04:16,959 --> 00:04:20,799
downloads

00:04:18,560 --> 00:04:22,560
that just kind of blows my mind over 300

00:04:20,799 --> 00:04:23,919
contributors

00:04:22,560 --> 00:04:25,919
we're just happy there are so many

00:04:23,919 --> 00:04:29,040
people who find value in brooke

00:04:25,919 --> 00:04:30,000
and are contributing to it our current

00:04:29,040 --> 00:04:33,199
release is

00:04:30,000 --> 00:04:35,040
version 1.6 that just came out in april

00:04:33,199 --> 00:04:36,400
so try it so what are we trying to

00:04:35,040 --> 00:04:38,240
accomplish with the project

00:04:36,400 --> 00:04:39,600
i mean how do we make how do we make it

00:04:38,240 --> 00:04:42,800
open what's our goal with it

00:04:39,600 --> 00:04:45,040
so our goal and our mantra really is

00:04:42,800 --> 00:04:47,120
community is first we want to build

00:04:45,040 --> 00:04:47,600
something that the community finds value

00:04:47,120 --> 00:04:49,600
in

00:04:47,600 --> 00:04:51,040
this is why we donated at the cncf this

00:04:49,600 --> 00:04:53,120
is why we progressed

00:04:51,040 --> 00:04:55,120
became a graduated project because

00:04:53,120 --> 00:04:56,880
community is first

00:04:55,120 --> 00:04:58,800
it the project is completely open source

00:04:56,880 --> 00:05:02,080
with apache 2o license

00:04:58,800 --> 00:05:04,240
we have a cadence of

00:05:02,080 --> 00:05:05,840
quarterly releases for minor releases

00:05:04,240 --> 00:05:07,840
with regular patch releases

00:05:05,840 --> 00:05:09,680
you know we tend to apache leases every

00:05:07,840 --> 00:05:11,360
week or two just to get the latest fixes

00:05:09,680 --> 00:05:13,280
out so people can pick those up

00:05:11,360 --> 00:05:14,479
we do have maintainers from four

00:05:13,280 --> 00:05:16,400
companies at the moment

00:05:14,479 --> 00:05:19,360
so just in alphabetical order claudical

00:05:16,400 --> 00:05:21,919
cybosu red hat and upbound

00:05:19,360 --> 00:05:23,120
so where can rook be deployed right so

00:05:21,919 --> 00:05:25,440
we said we want it

00:05:23,120 --> 00:05:27,440
with kubernetes but really you can have

00:05:25,440 --> 00:05:30,560
a consistent storage platform in rook

00:05:27,440 --> 00:05:33,360
wherever kubernetes is deployed

00:05:30,560 --> 00:05:35,759
if you're running on bare metal rook can

00:05:33,360 --> 00:05:36,560
consume your local raw devices or local

00:05:35,759 --> 00:05:39,039
pvs

00:05:36,560 --> 00:05:41,840
to build that storage platform if you're

00:05:39,039 --> 00:05:44,560
running in a cloud environment

00:05:41,840 --> 00:05:46,560
rook and also take advantage of the

00:05:44,560 --> 00:05:48,639
cloud provider storage

00:05:46,560 --> 00:05:50,400
and provide additional capabilities on

00:05:48,639 --> 00:05:53,600
top of it and again provide that

00:05:50,400 --> 00:05:54,400
that common storage platform that runs

00:05:53,600 --> 00:05:56,800
anywhere

00:05:54,400 --> 00:05:58,639
cloud providers have limitations for

00:05:56,800 --> 00:06:01,039
example how many

00:05:58,639 --> 00:06:02,240
volumes can be attached to a node and

00:06:01,039 --> 00:06:03,310
snap just doesn't have some of those

00:06:02,240 --> 00:06:04,400
limitations so you can

00:06:03,310 --> 00:06:06,960
[Music]

00:06:04,400 --> 00:06:08,000
you can mount hundreds or thousands of

00:06:06,960 --> 00:06:09,759
pvs

00:06:08,000 --> 00:06:11,280
in your cluster and they can be as big

00:06:09,759 --> 00:06:12,880
or as small as you want

00:06:11,280 --> 00:06:14,479
it just overcomes a lot of the

00:06:12,880 --> 00:06:16,080
limitations that you'd have in cloud

00:06:14,479 --> 00:06:18,160
environments

00:06:16,080 --> 00:06:19,199
so just briefly what layers are we

00:06:18,160 --> 00:06:21,520
talking about so

00:06:19,199 --> 00:06:23,919
rook is a provides an operator that owns

00:06:21,520 --> 00:06:26,560
the management of stuff

00:06:23,919 --> 00:06:27,759
we have a csi driver that will provision

00:06:26,560 --> 00:06:29,840
a mount the storage

00:06:27,759 --> 00:06:31,440
for your applications and then finally

00:06:29,840 --> 00:06:33,199
as already mentioned ceph provides that

00:06:31,440 --> 00:06:37,520
data layer for block

00:06:33,199 --> 00:06:38,800
shared file system and object so on

00:06:37,520 --> 00:06:41,120
or in the next couple of days we'll have

00:06:38,800 --> 00:06:42,960
another session a deep dive that will

00:06:41,120 --> 00:06:44,720
talk more in depth about what features

00:06:42,960 --> 00:06:45,600
rook has what what's in our latest

00:06:44,720 --> 00:06:50,160
release

00:06:45,600 --> 00:06:52,800
and show a demo of creating a cluster

00:06:50,160 --> 00:06:54,080
with local pvs i really invite you to

00:06:52,800 --> 00:06:58,560
check out that demo

00:06:54,080 --> 00:06:58,560
that talk that we'll have for you later

00:06:58,720 --> 00:07:04,639
so get involved here's our website doc

00:07:02,000 --> 00:07:06,319
slack github it really is an open

00:07:04,639 --> 00:07:08,639
community we hope to make it

00:07:06,319 --> 00:07:10,000
the best it can be through all the

00:07:08,639 --> 00:07:11,599
community participation

00:07:10,000 --> 00:07:15,120
glad to be with you i hope you found

00:07:11,599 --> 00:07:17,599
this useful feel free to ask questions

00:07:15,120 --> 00:07:18,400
and we'll talk to you later thanks have

00:07:17,599 --> 00:07:21,360
a good day

00:07:18,400 --> 00:07:21,360

YouTube URL: https://www.youtube.com/watch?v=x0Bm9Gi8xg0


