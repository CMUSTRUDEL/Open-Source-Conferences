Title: Keynote: CNCF Project Update: Flux - Stefan Prodan, Developer Experience Engineer, Weaveworks
Publication date: 2021-05-13
Playlist: KubeCon + CloudNativeCon Europe 2021
Description: 
	Donâ€™t miss out! Join us at our upcoming event: KubeCon + CloudNativeCon North America 2021 in Los Angeles, CA from October 12-15. Learn more at https://kubecon.io The conference features presentations from developers and end users of Kubernetes, Prometheus, Envoy, and all of the other CNCF-hosted projects.

Keynote: CNCF Project Update: Flux - Stefan Prodan, Developer Experience Engineer, Weaveworks
Captions: 
	00:00:02,870 --> 00:00:07,179
[Music]

00:00:07,680 --> 00:00:11,759
hello everyone

00:00:08,960 --> 00:00:13,280
my name is stefan pradam i'm a flux

00:00:11,759 --> 00:00:16,320
maintainer

00:00:13,280 --> 00:00:20,080
i'm working for weworks in the developer

00:00:16,320 --> 00:00:22,000
experience team i'm very excited to

00:00:20,080 --> 00:00:25,600
share with you what happened with flux

00:00:22,000 --> 00:00:25,600
since the last skipcon

00:00:25,760 --> 00:00:29,519
so the big news is that flux has been

00:00:28,560 --> 00:00:32,239
promoted from

00:00:29,519 --> 00:00:32,640
sandbox incubation but for those that

00:00:32,239 --> 00:00:36,000
are

00:00:32,640 --> 00:00:38,879
uh mintoflex let me give you a little

00:00:36,000 --> 00:00:41,840
bit of background

00:00:38,879 --> 00:00:42,559
we started flux at weworks five years

00:00:41,840 --> 00:00:45,039
ago

00:00:42,559 --> 00:00:45,680
as an internal project that was meant to

00:00:45,039 --> 00:00:49,120
help us

00:00:45,680 --> 00:00:52,320
operate kubernetes in production

00:00:49,120 --> 00:00:55,199
like most kubernetes users

00:00:52,320 --> 00:00:56,800
we were using kubectl to perform

00:00:55,199 --> 00:00:59,440
application deployments and

00:00:56,800 --> 00:01:02,960
infrastructure upgrades

00:00:59,440 --> 00:01:06,000
we soon realized that these operations

00:01:02,960 --> 00:01:09,680
can be made in a collaborative manner

00:01:06,000 --> 00:01:11,360
by using git as the desired state of our

00:01:09,680 --> 00:01:14,479
production system

00:01:11,360 --> 00:01:17,680
so we needed a tool that would watch

00:01:14,479 --> 00:01:21,439
git and reconcile the cluster state

00:01:17,680 --> 00:01:24,479
once changes are approved and merged

00:01:21,439 --> 00:01:25,360
in the repository this is how the

00:01:24,479 --> 00:01:30,159
github's

00:01:25,360 --> 00:01:33,040
ideal was born three years later

00:01:30,159 --> 00:01:33,840
when guitars became more popular flux

00:01:33,040 --> 00:01:37,600
joined the

00:01:33,840 --> 00:01:40,479
cncf as a sandbox project

00:01:37,600 --> 00:01:40,960
after joining cncf our community has

00:01:40,479 --> 00:01:43,840
grown

00:01:40,960 --> 00:01:46,079
exponentially and you can see here the

00:01:43,840 --> 00:01:48,960
numbers in terms of contributors

00:01:46,079 --> 00:01:50,479
contributions the people that are

00:01:48,960 --> 00:01:53,360
maintaining flux

00:01:50,479 --> 00:01:55,360
is no longer a weworks only project

00:01:53,360 --> 00:01:57,920
other companies have joined

00:01:55,360 --> 00:01:58,719
and i want to thank them all for for

00:01:57,920 --> 00:02:02,640
stepping up

00:01:58,719 --> 00:02:02,640
and help with with flux

00:02:03,119 --> 00:02:09,679
with with more organizations adopting

00:02:06,159 --> 00:02:13,760
githubs and cloud native technologies

00:02:09,679 --> 00:02:16,080
and with kubernetes evolving so fast

00:02:13,760 --> 00:02:18,480
we've hit the limits of flux initial

00:02:16,080 --> 00:02:18,480
design

00:02:18,560 --> 00:02:22,000
we realized that if we want to

00:02:20,840 --> 00:02:26,080
accommodate

00:02:22,000 --> 00:02:29,840
more futures help new contributors

00:02:26,080 --> 00:02:29,840
extending flux easily

00:02:30,319 --> 00:02:34,080
we needed to break the monolith and

00:02:32,319 --> 00:02:37,440
break the monolith into smaller

00:02:34,080 --> 00:02:41,280
independent components so

00:02:37,440 --> 00:02:42,560
last year we we started designing a

00:02:41,280 --> 00:02:45,280
framework

00:02:42,560 --> 00:02:46,319
that we call the github toolkit and this

00:02:45,280 --> 00:02:50,080
framework is the

00:02:46,319 --> 00:02:52,640
foundation on which we are building uh

00:02:50,080 --> 00:02:55,120
flux version to the next major iteration

00:02:52,640 --> 00:02:55,120
of flux

00:02:57,920 --> 00:03:02,879
so if if flux version one was a

00:03:00,879 --> 00:03:06,400
monolithical tool

00:03:02,879 --> 00:03:08,640
that could reconcile a cluster state

00:03:06,400 --> 00:03:12,239
from a single git repository

00:03:08,640 --> 00:03:14,959
with version 2 we have

00:03:12,239 --> 00:03:16,080
we have a different aim we want to

00:03:14,959 --> 00:03:18,319
provide the

00:03:16,080 --> 00:03:20,319
complete continuous delivery platform on

00:03:18,319 --> 00:03:23,360
top of kubernetes

00:03:20,319 --> 00:03:26,799
with support for common practices

00:03:23,360 --> 00:03:28,159
and you know the popular tools that are

00:03:26,799 --> 00:03:31,440
in this field

00:03:28,159 --> 00:03:33,440
such as customize helm the new cluster

00:03:31,440 --> 00:03:36,879
api

00:03:33,440 --> 00:03:40,159
also offer observability inside

00:03:36,879 --> 00:03:41,360
your your delivery pipelines and we'll

00:03:40,159 --> 00:03:44,640
see how how we

00:03:41,360 --> 00:03:48,879
how we got to that here is a

00:03:44,640 --> 00:03:51,760
is a diagram that shows you how

00:03:48,879 --> 00:03:53,439
flux can now manage multiple clusters

00:03:51,760 --> 00:03:57,360
you can look at different sources

00:03:53,439 --> 00:03:59,840
and so on okay let's talk about the

00:03:57,360 --> 00:04:01,439
github toolkit so

00:03:59,840 --> 00:04:03,439
is the toolkit the toolkit is a

00:04:01,439 --> 00:04:06,640
collection of

00:04:03,439 --> 00:04:09,280
go libraries apis

00:04:06,640 --> 00:04:10,080
and kubernetes controllers all these put

00:04:09,280 --> 00:04:13,200
together

00:04:10,080 --> 00:04:15,920
can help you build declarative

00:04:13,200 --> 00:04:20,079
continuous delivery pipelines

00:04:15,920 --> 00:04:23,440
and the toolkit is kubernetes native

00:04:20,079 --> 00:04:24,639
it's built with control runtime

00:04:23,440 --> 00:04:27,280
libraries

00:04:24,639 --> 00:04:29,520
it can be configured using kubernetes

00:04:27,280 --> 00:04:32,800
custom resources

00:04:29,520 --> 00:04:34,960
is composable you can

00:04:32,800 --> 00:04:37,520
pick and choose components based on what

00:04:34,960 --> 00:04:41,680
you want to do

00:04:37,520 --> 00:04:43,840
you can extend it easily we have

00:04:41,680 --> 00:04:45,280
libraries that help you build your own

00:04:43,840 --> 00:04:48,400
controllers

00:04:45,280 --> 00:04:51,199
and you can integrate those controllers

00:04:48,400 --> 00:04:56,080
back into the toolkit

00:04:51,199 --> 00:04:59,120
it's secure we

00:04:56,080 --> 00:05:04,800
try to bridge the gap between

00:04:59,120 --> 00:05:07,919
source control access and kubernetes

00:05:04,800 --> 00:05:11,120
access in a way that you can

00:05:07,919 --> 00:05:12,000
validate the authenticity of a person

00:05:11,120 --> 00:05:15,039
that

00:05:12,000 --> 00:05:15,919
creates a creates a commit you can

00:05:15,039 --> 00:05:19,280
verify

00:05:15,919 --> 00:05:21,120
that that person has the right access to

00:05:19,280 --> 00:05:22,479
to modify something on your production

00:05:21,120 --> 00:05:25,039
cluster and then

00:05:22,479 --> 00:05:26,720
the toolkit can run those changes those

00:05:25,039 --> 00:05:29,600
operations

00:05:26,720 --> 00:05:30,320
under by impersonating a kubernetes

00:05:29,600 --> 00:05:33,360
account

00:05:30,320 --> 00:05:35,199
which is restricted according to how

00:05:33,360 --> 00:05:36,960
the cluster i mean define that

00:05:35,199 --> 00:05:40,320
particular term

00:05:36,960 --> 00:05:43,600
also the toolkit is uh is event driven

00:05:40,320 --> 00:05:46,320
so you can subscribe to external events

00:05:43,600 --> 00:05:48,240
like a git push or a hand chart upload

00:05:46,320 --> 00:05:51,120
or a docker push

00:05:48,240 --> 00:05:53,600
and define how these events should

00:05:51,120 --> 00:05:57,759
change the cluster state

00:05:53,600 --> 00:06:00,880
also the toolkit has a component

00:05:57,759 --> 00:06:04,080
for you to define alerts so events

00:06:00,880 --> 00:06:06,080
what happens inside the cluster can be

00:06:04,080 --> 00:06:09,759
pushed outside the cluster using

00:06:06,080 --> 00:06:13,280
uh using the alerting api

00:06:09,759 --> 00:06:16,400
uh with with this api

00:06:13,280 --> 00:06:17,840
you can push errors to slack microsoft

00:06:16,400 --> 00:06:20,800
teams discord even

00:06:17,840 --> 00:06:23,919
right back to let's say a github commit

00:06:20,800 --> 00:06:23,919
status or gitlab

00:06:25,199 --> 00:06:28,560
some of the core features of flux

00:06:27,840 --> 00:06:31,919
version 2

00:06:28,560 --> 00:06:34,639
are multi-source so you can

00:06:31,919 --> 00:06:36,800
describe your cluster state or your

00:06:34,639 --> 00:06:37,759
fleet of clusters from multiple git

00:06:36,800 --> 00:06:41,759
repos

00:06:37,759 --> 00:06:44,880
hand repos even buckets

00:06:41,759 --> 00:06:48,000
we you can define your

00:06:44,880 --> 00:06:50,800
your cluster state in uh in any kind

00:06:48,000 --> 00:06:51,759
of s3 compatible storage for example

00:06:50,800 --> 00:06:54,080
mania

00:06:51,759 --> 00:06:55,919
we have built-in sequence management uh

00:06:54,080 --> 00:06:58,240
we integrate with mozilla swaps and

00:06:55,919 --> 00:07:00,479
cloud kms

00:06:58,240 --> 00:07:01,599
flags version 2 comes with with

00:07:00,479 --> 00:07:04,800
multi-tenancy

00:07:01,599 --> 00:07:06,319
features where it impersonates users

00:07:04,800 --> 00:07:10,800
when it tries to

00:07:06,319 --> 00:07:13,120
reconcile something you can also run

00:07:10,800 --> 00:07:15,360
flux on a central cluster and control

00:07:13,120 --> 00:07:16,880
all your cluster fleets

00:07:15,360 --> 00:07:18,560
all the clusters that are making your

00:07:16,880 --> 00:07:20,479
fit without installing flux on

00:07:18,560 --> 00:07:22,319
on each cluster and of course

00:07:20,479 --> 00:07:24,080
observability we

00:07:22,319 --> 00:07:26,240
we issue events for everything that's

00:07:24,080 --> 00:07:30,080
happening we have metrics

00:07:26,240 --> 00:07:31,280
alerts and we also offer graphana

00:07:30,080 --> 00:07:33,520
dashboards for you

00:07:31,280 --> 00:07:37,199
to see what's happening with your

00:07:33,520 --> 00:07:37,199
continuous delivery pipelines

00:07:38,000 --> 00:07:42,720
we've developed a new flux cli and also

00:07:41,280 --> 00:07:45,440
telephone provider

00:07:42,720 --> 00:07:46,160
so you can have a github's first

00:07:45,440 --> 00:07:49,599
approach

00:07:46,160 --> 00:07:50,720
to bootstrap in clusters the flux cli

00:07:49,599 --> 00:07:53,840
comes with a

00:07:50,720 --> 00:07:55,680
with a single command where

00:07:53,840 --> 00:07:58,160
and with that command you can create

00:07:55,680 --> 00:07:59,120
your git repos you can install flux on

00:07:58,160 --> 00:08:02,240
the cluster and

00:07:59,120 --> 00:08:05,520
and pair the two with deployment keys

00:08:02,240 --> 00:08:08,960
team access and so on and it works

00:08:05,520 --> 00:08:12,639
with a variety of kit providers

00:08:08,960 --> 00:08:16,639
over ssh directly with with github

00:08:12,639 --> 00:08:16,639
api or gitlab api and so on

00:08:18,080 --> 00:08:22,080
another update is that flagger has

00:08:21,120 --> 00:08:25,360
joined

00:08:22,080 --> 00:08:28,479
the flux family what what flagger

00:08:25,360 --> 00:08:30,160
does is uh it decouples the uh the

00:08:28,479 --> 00:08:31,360
deployment of an application from the

00:08:30,160 --> 00:08:33,360
release process

00:08:31,360 --> 00:08:34,800
so flux does the deployment while

00:08:33,360 --> 00:08:38,080
flagger can do the

00:08:34,800 --> 00:08:39,680
the release uh through uh canary with

00:08:38,080 --> 00:08:41,919
progressive traffic shifting

00:08:39,680 --> 00:08:43,039
a b testing blue green blue green with

00:08:41,919 --> 00:08:47,920
mirroring and so on

00:08:43,039 --> 00:08:50,320
and flagger works with a variety of

00:08:47,920 --> 00:08:52,880
service mesh providers and ingress

00:08:50,320 --> 00:08:56,560
controllers

00:08:52,880 --> 00:08:58,560
and finally i'm going to ask you to join

00:08:56,560 --> 00:09:01,839
the flux community we have uh

00:08:58,560 --> 00:09:05,120
uh we have a slack channel on cncf

00:09:01,839 --> 00:09:07,600
and we use github discussions for uh

00:09:05,120 --> 00:09:09,440
for uh everything around flux version to

00:09:07,600 --> 00:09:10,080
what features are going to be shipped

00:09:09,440 --> 00:09:12,320
and so on

00:09:10,080 --> 00:09:13,200
and i've listed here some hot topics

00:09:12,320 --> 00:09:16,399
like

00:09:13,200 --> 00:09:19,519
uh we are now working on

00:09:16,399 --> 00:09:22,160
flux web user interface so

00:09:19,519 --> 00:09:23,360
if you want to participate in that you

00:09:22,160 --> 00:09:27,519
have opinions of

00:09:23,360 --> 00:09:29,279
how what the the flux ui should show

00:09:27,519 --> 00:09:30,640
users what actions you could take

00:09:29,279 --> 00:09:33,360
through it and so on

00:09:30,640 --> 00:09:35,279
uh please please join github and join

00:09:33,360 --> 00:09:40,160
our community

00:09:35,279 --> 00:09:40,160

YouTube URL: https://www.youtube.com/watch?v=kuzZpKHLoVM


