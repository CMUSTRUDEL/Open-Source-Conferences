Title: Sponsored Keynote: Open Source Innovation – Success Through Failure - Thomas Di Giacomo, SUSE
Publication date: 2021-05-13
Playlist: KubeCon + CloudNativeCon Europe 2021
Description: 
	Don’t miss out! Join us at our upcoming event: KubeCon + CloudNativeCon North America 2021 in Los Angeles, CA from October 12-15. Learn more at https://kubecon.io The conference features presentations from developers and end users of Kubernetes, Prometheus, Envoy, and all of the other CNCF-hosted projects.

Sponsored Keynote: Open Source Innovation – Success Through Failure - Thomas Di Giacomo, Chief Technology & Product Officer, SUSE
Captions: 
	00:00:00,000 --> 00:00:06,679
[Music]

00:00:08,800 --> 00:00:12,160
thank you for joining

00:00:09,920 --> 00:00:13,599
and welcome to this short talk about

00:00:12,160 --> 00:00:16,560
open source innovation

00:00:13,599 --> 00:00:18,160
in the context of cncf obviously this is

00:00:16,560 --> 00:00:21,359
the first kubcon for us

00:00:18,160 --> 00:00:24,960
since suzer and rancho came together two

00:00:21,359 --> 00:00:27,519
strong open source dnas merging into one

00:00:24,960 --> 00:00:28,240
and as one we are more committed to and

00:00:27,519 --> 00:00:30,400
focused on

00:00:28,240 --> 00:00:32,320
open source and interoperable innovation

00:00:30,400 --> 00:00:35,680
than ever

00:00:32,320 --> 00:00:38,640
as thomas edison once said i didn't fail

00:00:35,680 --> 00:00:39,760
i just found 2000 ways how to not make

00:00:38,640 --> 00:00:42,000
light bulb

00:00:39,760 --> 00:00:43,280
i only needed to find one way to make it

00:00:42,000 --> 00:00:46,320
work

00:00:43,280 --> 00:00:47,280
the same mindsets holds true for open

00:00:46,320 --> 00:00:50,239
source innovation

00:00:47,280 --> 00:00:50,879
where the vast majority of projects fail

00:00:50,239 --> 00:00:54,000
at least

00:00:50,879 --> 00:00:54,640
as measured by user adoption but that is

00:00:54,000 --> 00:00:57,280
in fact

00:00:54,640 --> 00:00:58,000
the secret of open source innovation

00:00:57,280 --> 00:01:00,559
success

00:00:58,000 --> 00:01:01,359
through rapids iterative failure and

00:01:00,559 --> 00:01:04,239
learnings

00:01:01,359 --> 00:01:04,960
hopefully today i'd like to share how we

00:01:04,239 --> 00:01:08,240
massively

00:01:04,960 --> 00:01:09,520
and iteratively experiment with no rules

00:01:08,240 --> 00:01:10,560
around cloud native open source

00:01:09,520 --> 00:01:12,720
technologies

00:01:10,560 --> 00:01:15,040
to then contribute and deliver rapid

00:01:12,720 --> 00:01:18,000
innovation to the cncf community

00:01:15,040 --> 00:01:18,640
and to our enterprise customers at any

00:01:18,000 --> 00:01:20,799
time

00:01:18,640 --> 00:01:22,320
we are working on many exciting open

00:01:20,799 --> 00:01:24,479
source projects

00:01:22,320 --> 00:01:28,080
only a few succeeds and make their way

00:01:24,479 --> 00:01:30,799
back to cncf like longhorn and k3s

00:01:28,080 --> 00:01:34,400
but all of them contribute to advancing

00:01:30,799 --> 00:01:34,400
open source cloud native innovation

00:01:34,560 --> 00:01:37,759
soother rancher engineers are constantly

00:01:37,040 --> 00:01:40,320
launching

00:01:37,759 --> 00:01:41,439
and starting new open source ids and

00:01:40,320 --> 00:01:43,759
projects

00:01:41,439 --> 00:01:45,680
based on cncf technologies and

00:01:43,759 --> 00:01:47,920
additional cloud native needs

00:01:45,680 --> 00:01:49,600
that we are seeing ourselves or that are

00:01:47,920 --> 00:01:53,040
coming from users companies

00:01:49,600 --> 00:01:56,159
or developers in general this approach

00:01:53,040 --> 00:01:58,320
is in our dna we encourage it

00:01:56,159 --> 00:01:59,840
and we are intentionally structured

00:01:58,320 --> 00:02:02,960
accordingly

00:01:59,840 --> 00:02:05,360
it is very grassroots community inspired

00:02:02,960 --> 00:02:07,119
and happens both on math and in very

00:02:05,360 --> 00:02:08,800
different locations of the cloud native

00:02:07,119 --> 00:02:11,520
landscape

00:02:08,800 --> 00:02:12,239
there are no rules except these the

00:02:11,520 --> 00:02:14,480
projects

00:02:12,239 --> 00:02:16,000
are of course open source they are

00:02:14,480 --> 00:02:18,720
accessible to everyone

00:02:16,000 --> 00:02:21,760
and by design they are independent of

00:02:18,720 --> 00:02:24,480
specific architectural choices

00:02:21,760 --> 00:02:25,840
this is to ensure total flexibility

00:02:24,480 --> 00:02:27,920
choice and freedom

00:02:25,840 --> 00:02:30,879
for how the projects can be used

00:02:27,920 --> 00:02:33,200
assembled and developed

00:02:30,879 --> 00:02:34,959
our current exploration projects are

00:02:33,200 --> 00:02:37,040
broad and diverse

00:02:34,959 --> 00:02:39,040
ranging from infrastructure and policy

00:02:37,040 --> 00:02:42,239
management to applications

00:02:39,040 --> 00:02:44,400
for instance the cube warden project

00:02:42,239 --> 00:02:45,519
is facilitating policy creation and

00:02:44,400 --> 00:02:48,080
management

00:02:45,519 --> 00:02:49,920
through a web assembly implementation of

00:02:48,080 --> 00:02:51,840
the kubernetes dynamic and mission

00:02:49,920 --> 00:02:53,840
control

00:02:51,840 --> 00:02:55,280
our project harvester which is our

00:02:53,840 --> 00:02:57,440
vision for the next generation

00:02:55,280 --> 00:03:00,480
hyper-converged infrastructure

00:02:57,440 --> 00:03:02,400
harvester takes data center metal and

00:03:00,480 --> 00:03:05,120
produces a kubernetes api

00:03:02,400 --> 00:03:06,560
from where one can manage it and also

00:03:05,120 --> 00:03:10,000
deploy containerized

00:03:06,560 --> 00:03:10,720
or virtualized applications another

00:03:10,000 --> 00:03:14,239
example

00:03:10,720 --> 00:03:17,519
is hipper that experiments with enhanced

00:03:14,239 --> 00:03:20,159
dependency management concepts in helm

00:03:17,519 --> 00:03:21,440
i could go on for hours and actually by

00:03:20,159 --> 00:03:23,120
the time we discussed this

00:03:21,440 --> 00:03:25,599
many of those projects might have

00:03:23,120 --> 00:03:27,680
changed but the point is that there are

00:03:25,599 --> 00:03:29,760
so many directions to explore

00:03:27,680 --> 00:03:31,440
that it needs to happen widely and

00:03:29,760 --> 00:03:33,519
almost chaotically

00:03:31,440 --> 00:03:34,879
without any restriction other than being

00:03:33,519 --> 00:03:36,879
open

00:03:34,879 --> 00:03:38,000
as you can imagine not all of these will

00:03:36,879 --> 00:03:40,239
succeed

00:03:38,000 --> 00:03:41,920
at least in the sense of not ending up

00:03:40,239 --> 00:03:43,920
being a relevant component for the cloud

00:03:41,920 --> 00:03:46,799
native ecosystem

00:03:43,920 --> 00:03:47,680
in the end a small number of them will

00:03:46,799 --> 00:03:50,400
succeed

00:03:47,680 --> 00:03:53,040
and then join the cncf projects for

00:03:50,400 --> 00:03:56,000
further development

00:03:53,040 --> 00:03:57,280
that's exactly the path k3s and longhorn

00:03:56,000 --> 00:04:00,879
have taken

00:03:57,280 --> 00:04:03,680
initiated outside of cncf but joining it

00:04:00,879 --> 00:04:05,760
as they have matured gained relevance

00:04:03,680 --> 00:04:08,640
and been adopted

00:04:05,760 --> 00:04:11,519
these projects have expanded nicely

00:04:08,640 --> 00:04:13,519
since joining cncf a few months ago

00:04:11,519 --> 00:04:15,360
together with the upstream container d

00:04:13,519 --> 00:04:17,759
and sc linux communities

00:04:15,360 --> 00:04:18,880
sc linux support 2 container d was

00:04:17,759 --> 00:04:22,000
introduced

00:04:18,880 --> 00:04:24,800
and incorporated into k3s

00:04:22,000 --> 00:04:26,639
another example of k3s evolution thanks

00:04:24,800 --> 00:04:29,360
to the cncf community

00:04:26,639 --> 00:04:30,960
is the support for embedded hcd as a

00:04:29,360 --> 00:04:33,360
data store option

00:04:30,960 --> 00:04:35,040
so that k3s clusters can easily scale

00:04:33,360 --> 00:04:38,560
out from single nodes

00:04:35,040 --> 00:04:41,840
to multi-nodes highly available clusters

00:04:38,560 --> 00:04:44,080
on the long-run sides arm 64

00:04:41,840 --> 00:04:45,840
support has been added since longhorn

00:04:44,080 --> 00:04:47,840
joined cncf

00:04:45,840 --> 00:04:49,360
the community saw use cases where a

00:04:47,840 --> 00:04:51,919
kubernetes native

00:04:49,360 --> 00:04:53,280
distributed block storage like longhorn

00:04:51,919 --> 00:04:56,320
would be relevant for

00:04:53,280 --> 00:04:59,360
edge and industrial computing where arm

00:04:56,320 --> 00:05:01,120
is obviously very present

00:04:59,360 --> 00:05:02,400
self-healing capabilities were

00:05:01,120 --> 00:05:04,560
introduced too

00:05:02,400 --> 00:05:06,240
enabling longhorn to automatically take

00:05:04,560 --> 00:05:08,960
action with kubernetes

00:05:06,240 --> 00:05:10,000
to relocate pods and their data from a

00:05:08,960 --> 00:05:13,759
failing node to

00:05:10,000 --> 00:05:16,400
a healthy one and as a last example

00:05:13,759 --> 00:05:18,639
there is the read write many support the

00:05:16,400 --> 00:05:20,320
community has extended the block storage

00:05:18,639 --> 00:05:22,400
foundation of longhorn

00:05:20,320 --> 00:05:25,280
adding a network file system on top of

00:05:22,400 --> 00:05:28,560
it to allow multiple nodes to read

00:05:25,280 --> 00:05:30,080
and write from the same volume thank you

00:05:28,560 --> 00:05:33,840
everyone for the interest and the

00:05:30,080 --> 00:05:35,520
contributions to k3s and longhorn

00:05:33,840 --> 00:05:37,280
if you'd like to know more about the

00:05:35,520 --> 00:05:39,759
exploration projects too

00:05:37,280 --> 00:05:41,440
there are sessions here at kubecon

00:05:39,759 --> 00:05:43,120
you're also very welcome

00:05:41,440 --> 00:05:46,720
to have a look at them on our github

00:05:43,120 --> 00:05:49,280
repos and to reach out to us directly

00:05:46,720 --> 00:05:50,479
we are more committed than ever to open

00:05:49,280 --> 00:05:53,039
open source innovation

00:05:50,479 --> 00:05:54,160
around cloud native focusing on choice

00:05:53,039 --> 00:05:56,639
flexibility

00:05:54,160 --> 00:05:58,639
and freedom to put the exact cloud

00:05:56,639 --> 00:05:59,919
native puzzle together that someone

00:05:58,639 --> 00:06:02,660
would need

00:05:59,919 --> 00:06:04,840
thank you very much and have a great

00:06:02,660 --> 00:06:07,840
[Music]

00:06:04,840 --> 00:06:07,840
coupon

00:06:07,919 --> 00:06:10,000

YouTube URL: https://www.youtube.com/watch?v=31Pr1x7kQ04


