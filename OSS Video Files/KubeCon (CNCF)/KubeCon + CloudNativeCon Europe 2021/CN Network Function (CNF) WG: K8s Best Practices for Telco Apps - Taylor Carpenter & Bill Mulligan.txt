Title: CN Network Function (CNF) WG: K8s Best Practices for Telco Apps - Taylor Carpenter & Bill Mulligan
Publication date: 2021-05-06
Playlist: KubeCon + CloudNativeCon Europe 2021
Description: 
	Don’t miss out! Join us at our upcoming event: KubeCon + CloudNativeCon North America 2021 in Los Angeles, CA from October 12-15. Learn more at https://kubecon.io The conference features presentations from developers and end users of Kubernetes, Prometheus, Envoy, and all of the other CNCF-hosted projects.

Cloud Native Network Function (CNF) WG: K8s Best Practices for Telco Apps - Taylor Carpenter, Vulk Coop & Bill Mulligan, Cloud Native Computing Foundation

The Cloud Native Network Function (CNF) Working Group is focused on identifying cloud native best practices for networking applications in order to help CNF Developers and telco operators best utilize the capabilities of Kubernetes. In the session, attendees will get an overview of the working group, updates since its kick-off at KubeCon NA 2020, what’s next, and how to get involved. Ready to get started now? Join the CNF WG mailing list at https://lists.cncf.io/g/cnf-wg or talk to us in the #cnf-wg channel of the CNCF Slack. Recordings of previous CNF WG meetings are available at https://youtube.com/playlist?list=PLj6h78yzYM2PyMYvw5wiH01hthFb0qrOn.
Captions: 
	00:00:00,080 --> 00:00:05,279
welcome to the session this is the cloud

00:00:03,760 --> 00:00:07,680
native

00:00:05,279 --> 00:00:09,440
network function working group we're

00:00:07,680 --> 00:00:10,160
going to talk about kubernetes best

00:00:09,440 --> 00:00:13,840
practices

00:00:10,160 --> 00:00:17,359
for telco apps i'm taylor carpenter

00:00:13,840 --> 00:00:20,480
a co-chair of the cnf working group

00:00:17,359 --> 00:00:22,640
and owner in vault cooperative based out

00:00:20,480 --> 00:00:25,760
of austin texas

00:00:22,640 --> 00:00:27,840
i have been doing devops and development

00:00:25,760 --> 00:00:29,640
for over 20 years across multiple

00:00:27,840 --> 00:00:32,880
industries including

00:00:29,640 --> 00:00:34,960
telecommunications finance healthcare

00:00:32,880 --> 00:00:36,719
an open source advocate and linux user

00:00:34,960 --> 00:00:38,960
since the mid-90s

00:00:36,719 --> 00:00:44,000
and started helping in the cncf

00:00:38,960 --> 00:00:46,800
community in 2017

00:00:44,000 --> 00:00:48,480
going to have an introduction to this

00:00:46,800 --> 00:00:51,280
working group

00:00:48,480 --> 00:00:52,399
a quick overview of a couple of other

00:00:51,280 --> 00:00:55,199
initiatives

00:00:52,399 --> 00:00:57,360
cnn test suite and test bed then we'll

00:00:55,199 --> 00:00:58,879
talk about how you can contribute to the

00:00:57,360 --> 00:01:01,120
cnf working group

00:00:58,879 --> 00:01:02,960
and have an interactive q a and

00:01:01,120 --> 00:01:05,280
discussion

00:01:02,960 --> 00:01:06,080
you can add your question and comments

00:01:05,280 --> 00:01:09,119
for that q

00:01:06,080 --> 00:01:12,320
a you can chat with us

00:01:09,119 --> 00:01:15,600
on cncs public slack after

00:01:12,320 --> 00:01:18,960
the session and you can download these

00:01:15,600 --> 00:01:18,960
slides from sketch

00:01:20,080 --> 00:01:24,880
cncf has the mission of making cloud

00:01:23,040 --> 00:01:28,640
native computing

00:01:24,880 --> 00:01:31,119
ubiquitous and it's driving this

00:01:28,640 --> 00:01:34,400
adoption in different ways

00:01:31,119 --> 00:01:36,960
with the goal of everyone

00:01:34,400 --> 00:01:38,159
gaining the benefits from cloud native

00:01:36,960 --> 00:01:42,079
technologies

00:01:38,159 --> 00:01:45,840
and methodologies we would like to help

00:01:42,079 --> 00:01:48,079
telcos in adopting these technologies

00:01:45,840 --> 00:01:49,439
to ensure they gain the benefits like

00:01:48,079 --> 00:01:53,040
resource efficiency

00:01:49,439 --> 00:01:57,280
resiliency availability reducing risk

00:01:53,040 --> 00:01:57,280
while increasing development velocity

00:01:57,840 --> 00:02:04,240
towards this goal it's created

00:02:01,119 --> 00:02:06,799
four telecom initiatives since 2018

00:02:04,240 --> 00:02:08,640
to aid companies who are running

00:02:06,799 --> 00:02:11,200
telecommunication workloads and

00:02:08,640 --> 00:02:13,360
understanding what cloud native means

00:02:11,200 --> 00:02:16,480
and how cloud native technology

00:02:13,360 --> 00:02:18,400
and methodologies can help to

00:02:16,480 --> 00:02:20,480
effectively gain the aforementioned

00:02:18,400 --> 00:02:22,560
benefits once adopted

00:02:20,480 --> 00:02:23,760
so it's created the telcom user group

00:02:22,560 --> 00:02:27,200
where you can

00:02:23,760 --> 00:02:30,160
help uh provide feedback from

00:02:27,200 --> 00:02:31,360
your experience and area like a service

00:02:30,160 --> 00:02:36,080
provider and

00:02:31,360 --> 00:02:38,800
developers creators all coming together

00:02:36,080 --> 00:02:39,280
and the cnf working group what we're

00:02:38,800 --> 00:02:43,200
going to

00:02:39,280 --> 00:02:46,080
mainly focus on today and looking to

00:02:43,200 --> 00:02:48,400
create and find best practices for

00:02:46,080 --> 00:02:49,440
networking applications the cnf test

00:02:48,400 --> 00:02:53,280
suite

00:02:49,440 --> 00:02:56,959
and cnf testbed two tools to help

00:02:53,280 --> 00:02:57,599
with these best practices let's take a

00:02:56,959 --> 00:03:00,640
little bit

00:02:57,599 --> 00:03:03,200
more look at those first those last two

00:03:00,640 --> 00:03:06,319
the test suite and test bed

00:03:03,200 --> 00:03:09,920
the cnf test suite is an open source

00:03:06,319 --> 00:03:12,720
test suite for validating how well

00:03:09,920 --> 00:03:14,400
cns follow cloud native principles and

00:03:12,720 --> 00:03:16,159
best practices

00:03:14,400 --> 00:03:18,000
this is a tool that can be used by

00:03:16,159 --> 00:03:20,640
development integration

00:03:18,000 --> 00:03:22,319
and operations team to help see how

00:03:20,640 --> 00:03:23,680
they're doing in their application

00:03:22,319 --> 00:03:25,920
platforms

00:03:23,680 --> 00:03:27,599
there's a test framework there's

00:03:25,920 --> 00:03:30,560
different tests

00:03:27,599 --> 00:03:31,360
focused on best practices there's

00:03:30,560 --> 00:03:33,360
minimal

00:03:31,360 --> 00:03:35,599
instructions for getting started as an

00:03:33,360 --> 00:03:39,519
end user or developer as well as more

00:03:35,599 --> 00:03:42,480
extensive instructions for both

00:03:39,519 --> 00:03:43,040
prereqs and other things are outlined it

00:03:42,480 --> 00:03:45,360
runs

00:03:43,040 --> 00:03:46,159
on your own kubernetes cluster you can

00:03:45,360 --> 00:03:50,720
use

00:03:46,159 --> 00:03:54,720
kind or bare metal type environments

00:03:50,720 --> 00:03:56,799
and there's configuration and other

00:03:54,720 --> 00:03:58,560
examples to help you get started

00:03:56,799 --> 00:04:00,239
if you would like to contribute check

00:03:58,560 --> 00:04:03,360
out the contributing guide and

00:04:00,239 --> 00:04:04,319
you can download the this software from

00:04:03,360 --> 00:04:07,439
the

00:04:04,319 --> 00:04:10,400
github repository

00:04:07,439 --> 00:04:13,840
the cnf testbed is a open source

00:04:10,400 --> 00:04:16,479
initiative to create a reap

00:04:13,840 --> 00:04:17,359
and easily repeatable test bed and set

00:04:16,479 --> 00:04:21,359
of tests

00:04:17,359 --> 00:04:24,720
and use cases it's for early adopters

00:04:21,359 --> 00:04:25,759
as well as those in the networking

00:04:24,720 --> 00:04:27,440
industry

00:04:25,759 --> 00:04:30,000
we'd like to check out some of the

00:04:27,440 --> 00:04:31,360
example use cases or create new use

00:04:30,000 --> 00:04:34,400
cases

00:04:31,360 --> 00:04:37,759
so the goal is to keep things

00:04:34,400 --> 00:04:39,680
as simple and as straightforward as

00:04:37,759 --> 00:04:42,400
possible try to use

00:04:39,680 --> 00:04:43,520
upstream tooling and domain language

00:04:42,400 --> 00:04:46,880
were possible so

00:04:43,520 --> 00:04:47,680
cubespray for creating the kubernetes

00:04:46,880 --> 00:04:50,800
environment

00:04:47,680 --> 00:04:54,000
uses helm charts and other things

00:04:50,800 --> 00:04:55,680
in a fee bench for benchmarking so

00:04:54,000 --> 00:04:58,000
if you're familiar with those then you

00:04:55,680 --> 00:04:58,639
should be able to hop in and start using

00:04:58,000 --> 00:05:01,759
those and

00:04:58,639 --> 00:05:04,160
contribute new use cases and examples

00:05:01,759 --> 00:05:06,639
out of the box it works on equinix bare

00:05:04,160 --> 00:05:10,320
metal and you can download it and use it

00:05:06,639 --> 00:05:13,360
right here on the cncf cnf testbed

00:05:10,320 --> 00:05:15,680
repo all right

00:05:13,360 --> 00:05:16,560
if you'd like to get involved in either

00:05:15,680 --> 00:05:19,600
of those

00:05:16,560 --> 00:05:21,440
there's two channels on the public slack

00:05:19,600 --> 00:05:24,479
and there's also a contributor meeting

00:05:21,440 --> 00:05:26,479
on thursdays at 14 15 utc

00:05:24,479 --> 00:05:28,800
which you can join to talk about either

00:05:26,479 --> 00:05:32,240
of those um

00:05:28,800 --> 00:05:34,720
initiatives so

00:05:32,240 --> 00:05:37,680
those build into what we're here today

00:05:34,720 --> 00:05:40,080
to talk more about the cnf working group

00:05:37,680 --> 00:05:41,919
so the cnf working group has the goal of

00:05:40,080 --> 00:05:44,080
making it easier

00:05:41,919 --> 00:05:45,759
to produce and consume networking

00:05:44,080 --> 00:05:48,080
applications through

00:05:45,759 --> 00:05:50,479
the adoption and development of cloud

00:05:48,080 --> 00:05:52,560
native best practices

00:05:50,479 --> 00:05:54,160
for these networking applications

00:05:52,560 --> 00:05:57,120
specifically

00:05:54,160 --> 00:05:58,319
it's a collaborative effort with service

00:05:57,120 --> 00:06:01,280
providers

00:05:58,319 --> 00:06:02,280
cnf developers and kubernetes community

00:06:01,280 --> 00:06:05,520
working on

00:06:02,280 --> 00:06:08,080
definitions and use cases

00:06:05,520 --> 00:06:10,800
best practices in the process around

00:06:08,080 --> 00:06:10,800
finding these

00:06:10,880 --> 00:06:17,560
we have the mission of making

00:06:14,160 --> 00:06:19,120
the um to increase interoperability and

00:06:17,560 --> 00:06:22,000
standardizations

00:06:19,120 --> 00:06:24,080
for these cloud native and kubernetes

00:06:22,000 --> 00:06:26,400
native workloads

00:06:24,080 --> 00:06:27,120
with the aspirational goals of making

00:06:26,400 --> 00:06:31,039
things more

00:06:27,120 --> 00:06:34,240
portable extensible automatable

00:06:31,039 --> 00:06:36,639
and flexible whether that's deployments

00:06:34,240 --> 00:06:39,280
development

00:06:36,639 --> 00:06:39,840
management we want to meet users where

00:06:39,280 --> 00:06:41,680
they are

00:06:39,840 --> 00:06:43,199
so we know there's a lot of brownfield

00:06:41,680 --> 00:06:46,000
deployments already there and

00:06:43,199 --> 00:06:47,600
and technology that we would like to be

00:06:46,000 --> 00:06:49,280
able to try to see how you can do

00:06:47,600 --> 00:06:52,000
integrations

00:06:49,280 --> 00:06:53,039
while advancing the state of the art and

00:06:52,000 --> 00:06:55,280
methodologies

00:06:53,039 --> 00:06:57,039
new processes as well as the technology

00:06:55,280 --> 00:06:59,840
itself

00:06:57,039 --> 00:07:00,639
so those goals we have the goals of

00:06:59,840 --> 00:07:02,720
course to

00:07:00,639 --> 00:07:04,000
identify the best practices and we're

00:07:02,720 --> 00:07:08,000
specifically saying

00:07:04,000 --> 00:07:11,120
on uh for cnf's running on kubernetes

00:07:08,000 --> 00:07:11,919
is the focus right now which cnf

00:07:11,120 --> 00:07:14,960
developers

00:07:11,919 --> 00:07:18,880
and operators alike may adopt

00:07:14,960 --> 00:07:20,960
we want to determine which of these

00:07:18,880 --> 00:07:23,039
best practices are going to help the

00:07:20,960 --> 00:07:26,400
applications the cns

00:07:23,039 --> 00:07:27,199
to most effectively utilize existing

00:07:26,400 --> 00:07:29,599
services

00:07:27,199 --> 00:07:31,840
and capabilities in kubernetes when you

00:07:29,599 --> 00:07:32,960
look at it as a framework at a building

00:07:31,840 --> 00:07:35,120
block

00:07:32,960 --> 00:07:36,560
and then provide feedback to improve

00:07:35,120 --> 00:07:39,520
projects

00:07:36,560 --> 00:07:41,680
and other specifications working with

00:07:39,520 --> 00:07:45,199
groups to improve their use cases

00:07:41,680 --> 00:07:48,240
and the applications themselves

00:07:45,199 --> 00:07:49,120
we have over 27 organizations and

00:07:48,240 --> 00:07:52,400
individuals

00:07:49,120 --> 00:07:55,039
as of this recording that are have

00:07:52,400 --> 00:07:55,599
noted themselves as interested parties

00:07:55,039 --> 00:07:58,879
in the

00:07:55,599 --> 00:08:02,639
interested party document which you can

00:07:58,879 --> 00:08:05,199
add yourself to the

00:08:02,639 --> 00:08:06,080
leadership right now consists of three

00:08:05,199 --> 00:08:08,080
co-chairs

00:08:06,080 --> 00:08:10,639
myself taylor representing the cloud

00:08:08,080 --> 00:08:13,919
native and kubernetes community

00:08:10,639 --> 00:08:16,240
ian wells from cisco representing the

00:08:13,919 --> 00:08:17,599
cnf developers and cnf creators

00:08:16,240 --> 00:08:19,840
community

00:08:17,599 --> 00:08:20,800
jeffrey salins from charter

00:08:19,840 --> 00:08:24,840
communications

00:08:20,800 --> 00:08:27,680
representing service providers not

00:08:24,840 --> 00:08:30,240
communicated we also have a

00:08:27,680 --> 00:08:32,240
assortment of informal community leaders

00:08:30,240 --> 00:08:34,000
that are helping in different areas

00:08:32,240 --> 00:08:35,360
and as well as all the rest of the

00:08:34,000 --> 00:08:40,560
community working

00:08:35,360 --> 00:08:43,839
together so the relation to other groups

00:08:40,560 --> 00:08:46,959
at a larger scale we're working with

00:08:43,839 --> 00:08:48,640
many different orgs and

00:08:46,959 --> 00:08:51,680
as well as directly with service

00:08:48,640 --> 00:08:54,720
providers and cnf developers

00:08:51,680 --> 00:08:55,360
companies from intel arm equinix metal

00:08:54,720 --> 00:08:58,880
for

00:08:55,360 --> 00:09:00,800
uh working on things the sc plug test

00:08:58,880 --> 00:09:02,000
community we've worked some with them on

00:09:00,800 --> 00:09:04,959
testing

00:09:02,000 --> 00:09:07,040
the different lfn groups and then within

00:09:04,959 --> 00:09:08,640
cncf directly of course many different

00:09:07,040 --> 00:09:10,720
projects and sigs

00:09:08,640 --> 00:09:12,560
if we look at those telecom initiatives

00:09:10,720 --> 00:09:14,720
which is what's showing here

00:09:12,560 --> 00:09:15,920
and we can see we start with the cloud

00:09:14,720 --> 00:09:17,839
native principles

00:09:15,920 --> 00:09:19,600
those are flowing into this working

00:09:17,839 --> 00:09:21,360
group where we think about

00:09:19,600 --> 00:09:23,600
how those can be applied as best

00:09:21,360 --> 00:09:25,440
practices trying to get feedback from

00:09:23,600 --> 00:09:26,880
many different areas including some of

00:09:25,440 --> 00:09:29,200
those i've already mentioned but

00:09:26,880 --> 00:09:32,399
specifically here we're talking about

00:09:29,200 --> 00:09:34,240
the telecom user group

00:09:32,399 --> 00:09:36,880
and how it comes together and provides

00:09:34,240 --> 00:09:40,080
feedback from the different users

00:09:36,880 --> 00:09:42,160
and then taking those and building into

00:09:40,080 --> 00:09:43,360
recommended best practices of different

00:09:42,160 --> 00:09:46,320
types whether that's

00:09:43,360 --> 00:09:48,880
design and development type of things a

00:09:46,320 --> 00:09:51,920
different type of testing that we can do

00:09:48,880 --> 00:09:53,920
potentially conformance wise operations

00:09:51,920 --> 00:09:54,720
life cycle management practices that are

00:09:53,920 --> 00:09:57,839
going to help

00:09:54,720 --> 00:09:58,240
these can all come to creators as well

00:09:57,839 --> 00:10:00,240
as

00:09:58,240 --> 00:10:02,800
end users that are actually using the

00:10:00,240 --> 00:10:04,800
cnfs or those networking applications

00:10:02,800 --> 00:10:07,120
and used in different places like of

00:10:04,800 --> 00:10:09,680
course the test suite itself could be

00:10:07,120 --> 00:10:10,959
used to write these and then we can

00:10:09,680 --> 00:10:13,120
provide these into

00:10:10,959 --> 00:10:15,360
other groups that may utilize them as

00:10:13,120 --> 00:10:15,360
well

00:10:15,760 --> 00:10:19,839
all right let's look at how you can get

00:10:17,680 --> 00:10:23,120
involved and contribute

00:10:19,839 --> 00:10:24,880
many different ways documentation is a

00:10:23,120 --> 00:10:26,880
great place to get started

00:10:24,880 --> 00:10:28,880
a specific area and there would be

00:10:26,880 --> 00:10:32,800
providing definitions

00:10:28,880 --> 00:10:34,640
actors roles expanding on acronyms

00:10:32,800 --> 00:10:37,519
within the glossary

00:10:34,640 --> 00:10:38,560
helping to conduct gap analysis in

00:10:37,519 --> 00:10:40,320
different areas

00:10:38,560 --> 00:10:42,560
and suggesting new networking

00:10:40,320 --> 00:10:45,040
applications or cns

00:10:42,560 --> 00:10:46,720
helping to define or contribute to

00:10:45,040 --> 00:10:48,880
existing use cases

00:10:46,720 --> 00:10:51,920
and user stories and then of course

00:10:48,880 --> 00:10:54,399
getting to our end goal of contributing

00:10:51,920 --> 00:10:55,440
more cloud native best practices let's

00:10:54,399 --> 00:10:58,880
take a look more at

00:10:55,440 --> 00:11:01,440
those best practices they can be in

00:10:58,880 --> 00:11:03,279
many different areas um from

00:11:01,440 --> 00:11:06,800
installation and upgrade about

00:11:03,279 --> 00:11:10,000
acceptance of new cns your life cycle

00:11:06,800 --> 00:11:10,880
running cns hardware resource management

00:11:10,000 --> 00:11:13,360
that's

00:11:10,880 --> 00:11:14,399
a important area where how to use

00:11:13,360 --> 00:11:17,839
microservice

00:11:14,399 --> 00:11:20,320
based design patterns for delivering

00:11:17,839 --> 00:11:22,320
the different parts and functionality of

00:11:20,320 --> 00:11:23,600
cns and applications

00:11:22,320 --> 00:11:25,760
um all the way through all these

00:11:23,600 --> 00:11:27,760
different areas

00:11:25,760 --> 00:11:29,760
that you could contribute and the best

00:11:27,760 --> 00:11:33,279
practice may actually

00:11:29,760 --> 00:11:36,399
overlap in some of these areas

00:11:33,279 --> 00:11:37,920
so if you'd like to propose a cnf we

00:11:36,399 --> 00:11:41,200
want to make sure that

00:11:37,920 --> 00:11:44,959
others are um would like to help

00:11:41,200 --> 00:11:47,120
so we want to socialize the idea

00:11:44,959 --> 00:11:49,519
um in different places you could put

00:11:47,120 --> 00:11:53,040
this in a new github discussion

00:11:49,519 --> 00:11:54,959
or send your idea to the mailing list

00:11:53,040 --> 00:11:57,760
come and talk at one of the upcoming

00:11:54,959 --> 00:11:59,760
meetings

00:11:57,760 --> 00:12:01,120
and then you want to talk about

00:11:59,760 --> 00:12:04,880
different aspects

00:12:01,120 --> 00:12:06,720
of the best practice whenever we have a

00:12:04,880 --> 00:12:08,160
full proposal we're going to actually go

00:12:06,720 --> 00:12:11,120
through a checklist so

00:12:08,160 --> 00:12:12,000
why do we need it well we want to tie it

00:12:11,120 --> 00:12:14,320
to a

00:12:12,000 --> 00:12:16,320
use case so we have context which we'll

00:12:14,320 --> 00:12:18,160
talk about more in a little bit

00:12:16,320 --> 00:12:19,920
what makes it best what are the

00:12:18,160 --> 00:12:22,800
circumstances around it

00:12:19,920 --> 00:12:24,320
is it even implementable this could be

00:12:22,800 --> 00:12:26,880
limitations in the

00:12:24,320 --> 00:12:28,240
platform or technology and how you may

00:12:26,880 --> 00:12:32,000
work around those

00:12:28,240 --> 00:12:35,120
do you have a test plan can you test it

00:12:32,000 --> 00:12:38,560
so start with a short description

00:12:35,120 --> 00:12:41,600
this could be lease privileges

00:12:38,560 --> 00:12:44,240
uh for cns something like that what is

00:12:41,600 --> 00:12:45,680
the primary purpose or motivation behind

00:12:44,240 --> 00:12:47,839
it

00:12:45,680 --> 00:12:49,839
what are the goals and non-goals so

00:12:47,839 --> 00:12:52,000
limiting the scope and the type of

00:12:49,839 --> 00:12:54,399
workloads so that we have a context of

00:12:52,000 --> 00:12:56,639
when it may work and when it may not

00:12:54,399 --> 00:12:58,639
least privileges may be great most of

00:12:56,639 --> 00:13:01,920
the time but doesn't fit

00:12:58,639 --> 00:13:05,040
some specific occupations

00:13:01,920 --> 00:13:07,839
at least one documented use case so

00:13:05,040 --> 00:13:10,000
where would we use these privileges

00:13:07,839 --> 00:13:12,079
who's involved we need some context

00:13:10,000 --> 00:13:14,880
that's why we document this and then the

00:13:12,079 --> 00:13:17,040
test plan for checking metrics and

00:13:14,880 --> 00:13:20,639
what are the results these are all

00:13:17,040 --> 00:13:22,800
needed for a proposal

00:13:20,639 --> 00:13:24,399
those use cases are going to provide

00:13:22,800 --> 00:13:27,680
most of the context

00:13:24,399 --> 00:13:31,040
and that's why we say it's required for

00:13:27,680 --> 00:13:34,000
any best practice proposal

00:13:31,040 --> 00:13:35,040
they're talking they're showing us how a

00:13:34,000 --> 00:13:38,720
best practice

00:13:35,040 --> 00:13:40,959
will help get work done

00:13:38,720 --> 00:13:42,880
how the application is going to be

00:13:40,959 --> 00:13:46,720
utilized

00:13:42,880 --> 00:13:50,079
and what we expect as far as

00:13:46,720 --> 00:13:53,199
the end results

00:13:50,079 --> 00:13:56,079
one example would be a transparent

00:13:53,199 --> 00:13:56,880
firewall this is more of a hello world

00:13:56,079 --> 00:13:59,199
type of

00:13:56,880 --> 00:14:00,320
networking application or cnf

00:13:59,199 --> 00:14:03,920
representing the

00:14:00,320 --> 00:14:07,440
bump in the wire pattern for

00:14:03,920 --> 00:14:10,240
how to run an application that's just

00:14:07,440 --> 00:14:10,959
passing traffic as far as most of the

00:14:10,240 --> 00:14:13,920
time

00:14:10,959 --> 00:14:15,519
this could be rewritten showing a story

00:14:13,920 --> 00:14:16,959
for different things this could be a

00:14:15,519 --> 00:14:19,199
layer two firewall

00:14:16,959 --> 00:14:21,680
a layer three firewall you could be

00:14:19,199 --> 00:14:24,160
doing deep packet inspection

00:14:21,680 --> 00:14:26,240
they all do very similar things as far

00:14:24,160 --> 00:14:28,480
as the transparency for this

00:14:26,240 --> 00:14:29,440
networking application there's many

00:14:28,480 --> 00:14:32,320
variations

00:14:29,440 --> 00:14:34,000
local and external internal network

00:14:32,320 --> 00:14:36,160
services

00:14:34,000 --> 00:14:38,160
it highlights a few things that we may

00:14:36,160 --> 00:14:40,720
find difficult

00:14:38,160 --> 00:14:43,680
such as the different types of traffic

00:14:40,720 --> 00:14:45,120
that you may need to handle

00:14:43,680 --> 00:14:47,920
normally you would think of a

00:14:45,120 --> 00:14:51,760
transparent firewall being on a

00:14:47,920 --> 00:14:54,800
second interface for taking in

00:14:51,760 --> 00:14:57,760
traffic about management

00:14:54,800 --> 00:14:59,440
or metrics for what it's found it

00:14:57,760 --> 00:15:02,560
doesn't have to go this way

00:14:59,440 --> 00:15:05,120
but this type of idea shows us

00:15:02,560 --> 00:15:06,000
where we may need to work on solutions

00:15:05,120 --> 00:15:08,160
where you need

00:15:06,000 --> 00:15:09,040
multiple interfaces one of them out

00:15:08,160 --> 00:15:12,000
there is

00:15:09,040 --> 00:15:14,160
multis and we dan m would be another one

00:15:12,000 --> 00:15:16,079
so c and i's that give us multiple

00:15:14,160 --> 00:15:18,320
interfaces

00:15:16,079 --> 00:15:19,279
that's fine if those are what we need

00:15:18,320 --> 00:15:22,240
the point is

00:15:19,279 --> 00:15:23,279
what are we looking at underneath as far

00:15:22,240 --> 00:15:26,399
as the problem

00:15:23,279 --> 00:15:28,240
so this raises this problem up to a

00:15:26,399 --> 00:15:31,279
higher level so that we can look at

00:15:28,240 --> 00:15:31,279
different solutions

00:15:31,360 --> 00:15:36,000
another use case this would be a a

00:15:34,720 --> 00:15:37,920
strong

00:15:36,000 --> 00:15:40,320
more complex real world use case would

00:15:37,920 --> 00:15:43,440
be a bgp

00:15:40,320 --> 00:15:45,839
on a customer network and

00:15:43,440 --> 00:15:48,560
this use case is also going to describe

00:15:45,839 --> 00:15:50,800
what someone wants to do

00:15:48,560 --> 00:15:52,320
it's a pattern that's common in the

00:15:50,800 --> 00:15:54,160
networking industry

00:15:52,320 --> 00:15:56,240
and then what do we need to do what are

00:15:54,160 --> 00:15:58,480
the different parts the problems

00:15:56,240 --> 00:15:59,360
that we may see there's different

00:15:58,480 --> 00:16:01,040
features

00:15:59,360 --> 00:16:03,279
that are going to be needed on this

00:16:01,040 --> 00:16:08,240
including how it may integrate

00:16:03,279 --> 00:16:11,360
with the underlay network

00:16:08,240 --> 00:16:12,160
again we're going to help by breaking

00:16:11,360 --> 00:16:14,000
things down

00:16:12,160 --> 00:16:17,199
like we did in the best practices we

00:16:14,000 --> 00:16:20,160
want to see a short descriptive title

00:16:17,199 --> 00:16:21,600
going back to the documentation we want

00:16:20,160 --> 00:16:24,399
to try to have

00:16:21,600 --> 00:16:26,480
our technical terms and acronyms fully

00:16:24,399 --> 00:16:28,560
defined so provide a glossary

00:16:26,480 --> 00:16:30,959
and if there's other use cases or best

00:16:28,560 --> 00:16:33,680
practices that have a term

00:16:30,959 --> 00:16:36,399
that matches then let's try to use those

00:16:33,680 --> 00:16:38,959
and have consistency

00:16:36,399 --> 00:16:40,000
add any other information about involved

00:16:38,959 --> 00:16:43,279
processes

00:16:40,000 --> 00:16:46,320
the actors or who's who's the

00:16:43,279 --> 00:16:48,399
target audience like operations team

00:16:46,320 --> 00:16:50,079
and maybe life cycle management how

00:16:48,399 --> 00:16:52,160
they're managing that

00:16:50,079 --> 00:16:53,839
and then any type of entities involved

00:16:52,160 --> 00:16:56,560
the cloud native platform is this

00:16:53,839 --> 00:16:57,600
kubernetes is this a specific uh

00:16:56,560 --> 00:17:00,000
provider

00:16:57,600 --> 00:17:03,040
the data center network for you know

00:17:00,000 --> 00:17:06,160
maybe the bgp is going to connect into

00:17:03,040 --> 00:17:10,160
the wider area

00:17:06,160 --> 00:17:12,480
and we need to look at those

00:17:10,160 --> 00:17:14,319
then what are our intents similar to the

00:17:12,480 --> 00:17:16,319
best practices

00:17:14,319 --> 00:17:17,360
but on the use case we can go a little

00:17:16,319 --> 00:17:19,919
bit higher level

00:17:17,360 --> 00:17:20,559
and look at the whole situation and say

00:17:19,919 --> 00:17:22,799
what are we

00:17:20,559 --> 00:17:25,520
our expectations at a high level before

00:17:22,799 --> 00:17:28,480
we then dive down in and talk about

00:17:25,520 --> 00:17:31,120
a more technical focused and expected

00:17:28,480 --> 00:17:33,520
behavior out of the different components

00:17:31,120 --> 00:17:35,840
and then talk about any challenges and

00:17:33,520 --> 00:17:37,760
limitations that you may see

00:17:35,840 --> 00:17:40,240
and how you could overcome them whether

00:17:37,760 --> 00:17:42,320
that's following existing standards

00:17:40,240 --> 00:17:44,320
or potentially new ideas if there's no

00:17:42,320 --> 00:17:48,480
standards around the problem

00:17:44,320 --> 00:17:50,960
as of yet all right

00:17:48,480 --> 00:17:51,679
so you want to get involved please come

00:17:50,960 --> 00:17:55,440
and join

00:17:51,679 --> 00:17:56,640
our weekly meetings on mondays at 1600

00:17:55,440 --> 00:17:59,760
utc

00:17:56,640 --> 00:18:02,400
you can add your name and organization

00:17:59,760 --> 00:18:03,440
to the interested party documents come

00:18:02,400 --> 00:18:06,960
and describe

00:18:03,440 --> 00:18:10,640
use cases and talk with us about

00:18:06,960 --> 00:18:12,320
new best practices here's our roadmap

00:18:10,640 --> 00:18:15,679
for 2021

00:18:12,320 --> 00:18:17,360
so far in this first quarter of 2021 we

00:18:15,679 --> 00:18:19,440
established governance

00:18:17,360 --> 00:18:21,039
we had an election for co-chairs and

00:18:19,440 --> 00:18:24,280
elected them

00:18:21,039 --> 00:18:27,520
started many uh use case

00:18:24,280 --> 00:18:30,480
discussions which were continuing now

00:18:27,520 --> 00:18:33,760
the process for adding those use cases

00:18:30,480 --> 00:18:36,640
and best practices being finalized in q2

00:18:33,760 --> 00:18:38,160
and we're planning to have a few initial

00:18:36,640 --> 00:18:40,559
best practices and use case

00:18:38,160 --> 00:18:42,000
published and then we'll work with the

00:18:40,559 --> 00:18:44,559
test suite to try to

00:18:42,000 --> 00:18:46,720
implement those so that in q3 hopefully

00:18:44,559 --> 00:18:49,840
we can see some results on

00:18:46,720 --> 00:18:51,840
running those test cases um

00:18:49,840 --> 00:18:53,840
against the best practices we'll

00:18:51,840 --> 00:18:55,919
continue to add new ones

00:18:53,840 --> 00:18:58,080
and then we'll have an update at kubecon

00:18:55,919 --> 00:18:59,600
north america in october

00:18:58,080 --> 00:19:01,840
on how things have been going and

00:18:59,600 --> 00:19:07,440
potentially look at formalizing

00:19:01,840 --> 00:19:09,520
under a sig as cncf sig by that time

00:19:07,440 --> 00:19:11,919
if you'd like to come and help please

00:19:09,520 --> 00:19:14,160
join our public slack channels

00:19:11,919 --> 00:19:15,200
for these initiatives including the cnf

00:19:14,160 --> 00:19:18,400
working group

00:19:15,200 --> 00:19:21,120
join the mailing list and you can reach

00:19:18,400 --> 00:19:23,360
out to us on twitter as well

00:19:21,120 --> 00:19:24,480
i'm taylor you can reach out to me i'm

00:19:23,360 --> 00:19:28,559
happy to chat

00:19:24,480 --> 00:19:31,360
taylor co-op or taylor on github

00:19:28,559 --> 00:19:32,559
let's move on to the open discussion and

00:19:31,360 --> 00:19:37,760
get some feedback

00:19:32,559 --> 00:19:37,760

YouTube URL: https://www.youtube.com/watch?v=ZF5UJD7YJIw


