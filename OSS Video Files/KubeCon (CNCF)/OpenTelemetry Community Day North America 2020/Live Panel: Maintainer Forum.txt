Title: Live Panel: Maintainer Forum
Publication date: 2020-11-24
Playlist: OpenTelemetry Community Day North America 2020
Description: 
	Don’t miss out! Join us at our upcoming event: KubeCon + CloudNativeCon Europe 2021 Virtual from May 4–7, 2021. Learn more at https://kubecon.io. The conference features presentations from developers and end users of Kubernetes, Prometheus, Envoy, and all of the other CNCF-hosted projects. 

Live Panel: Maintainer Forum

The maintainers of many OpenTelemetry SIGs will be available to give a status update and take questions about the project."
Captions: 
	00:00:00,399 --> 00:00:03,600
so right now we're starting the

00:00:01,839 --> 00:00:05,040
maintainer forum i'm really really

00:00:03,600 --> 00:00:08,240
excited to be here

00:00:05,040 --> 00:00:10,160
um and learning from everything's

00:00:08,240 --> 00:00:12,880
covering up everything else

00:00:10,160 --> 00:00:14,400
um to learn from these awesome

00:00:12,880 --> 00:00:16,000
contributors who've made some

00:00:14,400 --> 00:00:17,119
significant contributions to open

00:00:16,000 --> 00:00:19,680
plumber tree

00:00:17,119 --> 00:00:20,720
um so let's go around and have each of

00:00:19,680 --> 00:00:25,199
our panelists

00:00:20,720 --> 00:00:25,199
introduce themselves starting with tyler

00:00:26,160 --> 00:00:32,960
um cool yeah not normally the first um

00:00:30,000 --> 00:00:34,640
so yeah hi i'm tyler uh i work at a new

00:00:32,960 --> 00:00:37,840
relic as a software engineer

00:00:34,640 --> 00:00:39,200
um and i'm a maintainer of the um the go

00:00:37,840 --> 00:00:40,800
special special interest group of the

00:00:39,200 --> 00:00:41,360
sig as we call it in the optometry

00:00:40,800 --> 00:00:45,039
project

00:00:41,360 --> 00:00:47,280
um and i've been working in open sumtry

00:00:45,039 --> 00:00:48,640
for just about a full year at this point

00:00:47,280 --> 00:00:50,640
um pretty much every day

00:00:48,640 --> 00:00:52,160
um and working with these uh other

00:00:50,640 --> 00:00:54,800
wonderful folk in the community

00:00:52,160 --> 00:00:55,840
i've also collaborated a lot with um all

00:00:54,800 --> 00:00:57,680
these other people in the metric

00:00:55,840 --> 00:00:59,039
specification and the other sides of the

00:00:57,680 --> 00:01:01,680
specification as well so

00:00:59,039 --> 00:01:02,800
um i'm usually in a lot of different uh

00:01:01,680 --> 00:01:05,360
parts

00:01:02,800 --> 00:01:06,479
of the specification well infrequently

00:01:05,360 --> 00:01:08,720
but yes um so

00:01:06,479 --> 00:01:10,080
yeah that's kind of me um and we'll

00:01:08,720 --> 00:01:13,840
probably dig into some more details as

00:01:10,080 --> 00:01:13,840
we go on

00:01:14,240 --> 00:01:18,720
thank you tyler tristan can you go ahead

00:01:16,720 --> 00:01:22,080
and introduce yourself

00:01:18,720 --> 00:01:25,600
yeah hi i'm tristan uh i work at

00:01:22,080 --> 00:01:28,640
postmates and i maintain

00:01:25,600 --> 00:01:32,560
the erlang and elixir uh

00:01:28,640 --> 00:01:35,439
implementation the sig and

00:01:32,560 --> 00:01:36,720
i started with open telemetry i guess

00:01:35,439 --> 00:01:39,439
over a year ago now

00:01:36,720 --> 00:01:40,640
i was maintaining the yearling elixir

00:01:39,439 --> 00:01:44,240
open census

00:01:40,640 --> 00:01:47,439
uh implementation before that and so

00:01:44,240 --> 00:01:50,640
segued into open telemetry when

00:01:47,439 --> 00:01:50,640
the projects were merged

00:01:51,200 --> 00:01:57,680
thank you so much and tigran can you

00:01:54,720 --> 00:01:59,680
go ahead and introduce everyone my name

00:01:57,680 --> 00:02:01,520
is tigran

00:01:59,680 --> 00:02:03,439
i'm an open telemetry maintainer and a

00:02:01,520 --> 00:02:06,079
technical committee member

00:02:03,439 --> 00:02:07,280
i have been with open geometry since the

00:02:06,079 --> 00:02:11,120
very beginning

00:02:07,280 --> 00:02:14,239
actually before that uh consensus

00:02:11,120 --> 00:02:16,239
a little bit um most of the work i do is

00:02:14,239 --> 00:02:18,879
on opportunity collector

00:02:16,239 --> 00:02:19,920
and on the specification and uh

00:02:18,879 --> 00:02:22,959
primarily

00:02:19,920 --> 00:02:23,680
it's the tracing and logging parts of it

00:02:22,959 --> 00:02:28,560
let's saw

00:02:23,680 --> 00:02:28,560
the metrics yeah

00:02:28,800 --> 00:02:36,319
thanks and hi my name is bogdan

00:02:33,280 --> 00:02:39,599
i'm one of the

00:02:36,319 --> 00:02:43,200
person that is guilty for all this mess

00:02:39,599 --> 00:02:45,200
that we created uh i started uh

00:02:43,200 --> 00:02:46,959
when i was back in google i started the

00:02:45,200 --> 00:02:48,879
opencensus project as a

00:02:46,959 --> 00:02:50,000
open source initiative coming from

00:02:48,879 --> 00:02:54,560
google

00:02:50,000 --> 00:02:55,519
we did make a lot of contributions in

00:02:54,560 --> 00:02:58,000
that project

00:02:55,519 --> 00:02:59,120
and tristan was part of that tigran was

00:02:58,000 --> 00:03:01,920
part of that

00:02:59,120 --> 00:03:02,720
effort and then at one point we decided

00:03:01,920 --> 00:03:04,239
that

00:03:02,720 --> 00:03:06,080
you know what i think we are doing

00:03:04,239 --> 00:03:08,560
something wrong for the community

00:03:06,080 --> 00:03:10,560
we are competing standards between open

00:03:08,560 --> 00:03:11,440
tracing and open sensors as everyone

00:03:10,560 --> 00:03:14,480
know

00:03:11,440 --> 00:03:17,599
and here we are we are open telemetry

00:03:14,480 --> 00:03:19,840
and i'm very happy for for this

00:03:17,599 --> 00:03:22,879
this conference was great thank you so

00:03:19,840 --> 00:03:22,879
much everyone

00:03:23,040 --> 00:03:27,200
thank you and i'm shelby spees i am a

00:03:25,519 --> 00:03:31,040
developer advocate at honeycomb

00:03:27,200 --> 00:03:31,040
and i'm just here to help moderate and

00:03:31,440 --> 00:03:36,000
ask some questions ask questions from

00:03:33,440 --> 00:03:37,680
the chat i also want to mention that

00:03:36,000 --> 00:03:40,159
anyone who's a maintainer on open

00:03:37,680 --> 00:03:42,640
telemetry is encouraged to participate

00:03:40,159 --> 00:03:44,640
um so go ahead and raise your hand in

00:03:42,640 --> 00:03:48,319
the in zoom

00:03:44,640 --> 00:03:52,000
and we can have you contribute

00:03:48,319 --> 00:03:52,720
and answer questions so um with that i

00:03:52,000 --> 00:03:55,120
will share

00:03:52,720 --> 00:03:56,640
the first question what has been your

00:03:55,120 --> 00:03:57,599
experience as an open telemetry

00:03:56,640 --> 00:04:01,840
maintainer

00:03:57,599 --> 00:04:01,840
and what are the challenges

00:04:04,720 --> 00:04:07,760
yeah um we could probably just start in

00:04:06,640 --> 00:04:08,400
the same order i think is probably the

00:04:07,760 --> 00:04:10,640
best way

00:04:08,400 --> 00:04:11,439
um and then bogdan can laugh at me i

00:04:10,640 --> 00:04:13,760
guess um

00:04:11,439 --> 00:04:14,879
so yeah i think it's actually kind of

00:04:13,760 --> 00:04:15,920
ideal to kind of talk from my

00:04:14,879 --> 00:04:17,440
perspective because

00:04:15,920 --> 00:04:19,280
unlike um some of the other maintainers

00:04:17,440 --> 00:04:21,199
on this board i didn't

00:04:19,280 --> 00:04:22,800
come from the world of already

00:04:21,199 --> 00:04:25,199
contributing and already building the

00:04:22,800 --> 00:04:27,120
census or open telemetry uh in fact i

00:04:25,199 --> 00:04:29,360
came from a world where i was using

00:04:27,120 --> 00:04:30,960
open census or using open source or

00:04:29,360 --> 00:04:32,320
better to say evaluating as

00:04:30,960 --> 00:04:34,240
bogda can put out there's a little bit

00:04:32,320 --> 00:04:35,120
of a you know which one would you want

00:04:34,240 --> 00:04:36,880
to use

00:04:35,120 --> 00:04:38,800
and was extremely passionate about like

00:04:36,880 --> 00:04:41,600
this idea that

00:04:38,800 --> 00:04:43,280
having an open standard is really needed

00:04:41,600 --> 00:04:44,560
and uh the community i think can really

00:04:43,280 --> 00:04:47,280
benefit from it

00:04:44,560 --> 00:04:49,040
um and as i transitioned into contin uh

00:04:47,280 --> 00:04:50,400
contributing more into the project into

00:04:49,040 --> 00:04:53,840
becoming eventually um

00:04:50,400 --> 00:04:54,720
a maintainer for the gosig uh it's just

00:04:53,840 --> 00:04:57,280
been uh

00:04:54,720 --> 00:04:59,120
really i think um one that is a positive

00:04:57,280 --> 00:05:00,880
experience based on the community

00:04:59,120 --> 00:05:02,160
uh i think rachel klein gave a great

00:05:00,880 --> 00:05:03,280
talk earlier a little late and talked

00:05:02,160 --> 00:05:04,400
about the community in general and i

00:05:03,280 --> 00:05:05,840
think it kind of unders

00:05:04,400 --> 00:05:07,840
understates the fact like the community

00:05:05,840 --> 00:05:09,280
itself is actually a really positive

00:05:07,840 --> 00:05:10,400
uh element about contributing in the

00:05:09,280 --> 00:05:13,120
open source world and i've really

00:05:10,400 --> 00:05:15,600
appreciated that that dynamic of it um

00:05:13,120 --> 00:05:17,759
it also moves at its own speed um which

00:05:15,600 --> 00:05:20,160
coming from a very close source world is

00:05:17,759 --> 00:05:22,000
is not the speed that essentially um i'm

00:05:20,160 --> 00:05:24,960
used to so it's kind of fun to try to

00:05:22,000 --> 00:05:26,560
to get up to that new kind of model of

00:05:24,960 --> 00:05:27,680
operating i think has also been really

00:05:26,560 --> 00:05:29,440
really exciting

00:05:27,680 --> 00:05:31,120
um and then just to benefit from the

00:05:29,440 --> 00:05:32,320
immense knowledge that comes from uh

00:05:31,120 --> 00:05:34,639
these other maintainers and other

00:05:32,320 --> 00:05:37,280
collaborators and other contributors um

00:05:34,639 --> 00:05:38,400
participating in a very awesome uh and

00:05:37,280 --> 00:05:40,400
hopefully

00:05:38,400 --> 00:05:41,520
impactful project uh going forward has

00:05:40,400 --> 00:05:44,479
been kind of

00:05:41,520 --> 00:05:45,759
the run i've had so far continuing on as

00:05:44,479 --> 00:05:48,479
i'm really excited about as well but

00:05:45,759 --> 00:05:48,479
we'll get into that

00:05:51,280 --> 00:05:59,280
yeah go ahead tristan sorry

00:05:56,080 --> 00:06:01,919
uh yeah and i think i have a

00:05:59,280 --> 00:06:03,280
unique perspective on maintainership and

00:06:01,919 --> 00:06:06,240
this because

00:06:03,280 --> 00:06:07,840
uh open there wasn't ever an open

00:06:06,240 --> 00:06:11,840
tracing erlang elixir

00:06:07,840 --> 00:06:15,120
official api or anything so there

00:06:11,840 --> 00:06:17,440
are dozens of them spread throughout uh

00:06:15,120 --> 00:06:18,639
and when open telemetry started since it

00:06:17,440 --> 00:06:22,160
was merging in

00:06:18,639 --> 00:06:25,680
open tracing i spent a lot of time

00:06:22,160 --> 00:06:28,960
going through searching githubs and

00:06:25,680 --> 00:06:31,120
package repos and slack channels and

00:06:28,960 --> 00:06:32,400
finding all the people who maintain

00:06:31,120 --> 00:06:35,280
these

00:06:32,400 --> 00:06:36,400
open tracing elixir or erlang

00:06:35,280 --> 00:06:40,800
implementations

00:06:36,400 --> 00:06:44,400
and asking them to join forces and

00:06:40,800 --> 00:06:47,440
uh dr try to drop theirs and push

00:06:44,400 --> 00:06:49,199
their users onto open telemetry and

00:06:47,440 --> 00:06:50,800
we've been slowly moving forward with

00:06:49,199 --> 00:06:53,039
that and it's been uh

00:06:50,800 --> 00:06:54,960
pretty successful and people have been

00:06:53,039 --> 00:06:57,120
uh pretty happy to

00:06:54,960 --> 00:06:59,680
work together and we recently started

00:06:57,120 --> 00:07:02,160
the erlang foundation and that's

00:06:59,680 --> 00:07:03,759
been a part of this so yeah a big

00:07:02,160 --> 00:07:06,960
challenge has been

00:07:03,759 --> 00:07:08,880
that consolidation but i think it's uh

00:07:06,960 --> 00:07:10,880
it's working out and it makes people

00:07:08,880 --> 00:07:14,080
feel uh more comfortable

00:07:10,880 --> 00:07:16,080
with uh the language with erlanger

00:07:14,080 --> 00:07:17,120
or elixir using their company because

00:07:16,080 --> 00:07:20,400
they see

00:07:17,120 --> 00:07:23,520
this cncf project and uh with

00:07:20,400 --> 00:07:24,800
with with us involved and that they're

00:07:23,520 --> 00:07:27,039
able to

00:07:24,800 --> 00:07:28,319
integrate with the other uh most

00:07:27,039 --> 00:07:31,039
companies aren't purely

00:07:28,319 --> 00:07:32,400
one or you know an erlang or a liquor

00:07:31,039 --> 00:07:33,840
shop so they have to integrate with all

00:07:32,400 --> 00:07:37,440
these other languages

00:07:33,840 --> 00:07:38,880
and being able to work in this community

00:07:37,440 --> 00:07:40,560
with people implementing in other

00:07:38,880 --> 00:07:45,840
languages has been

00:07:40,560 --> 00:07:45,840
really useful uh towards that

00:07:47,360 --> 00:07:51,360
yeah i was really excited to see that

00:07:49,520 --> 00:07:54,319
the erlang elixir

00:07:51,360 --> 00:07:55,599
um integration was one of one of the

00:07:54,319 --> 00:07:57,199
more mature ones

00:07:55,599 --> 00:07:59,039
um because that's that's not always

00:07:57,199 --> 00:08:00,400
something you see in open source

00:07:59,039 --> 00:08:03,360
children so

00:08:00,400 --> 00:08:03,360
awesome job there

00:08:04,879 --> 00:08:08,400
um so we have one question from the

00:08:07,759 --> 00:08:11,919
audience

00:08:08,400 --> 00:08:12,879
and i went ahead and edited my slide so

00:08:11,919 --> 00:08:17,360
everyone can see it

00:08:12,879 --> 00:08:17,360
let me try and be cool on the fly

00:08:18,080 --> 00:08:22,960
um that is not this one

00:08:21,360 --> 00:08:24,720
how's the race towards a release

00:08:22,960 --> 00:08:26,160
candidate going in your sig

00:08:24,720 --> 00:08:29,199
and what are the things that the

00:08:26,160 --> 00:08:29,199
community can do to help

00:08:31,520 --> 00:08:34,719
so tiger looks like you want to say

00:08:33,200 --> 00:08:38,880
something yeah

00:08:34,719 --> 00:08:40,959
yeah that's a good question i think

00:08:38,880 --> 00:08:42,880
we're doing pretty well in the

00:08:40,959 --> 00:08:46,720
specification seek

00:08:42,880 --> 00:08:47,920
we uh have just frozen the portion of

00:08:46,720 --> 00:08:51,440
the specification

00:08:47,920 --> 00:08:52,320
which defines how tracing is supposed to

00:08:51,440 --> 00:08:55,440
work

00:08:52,320 --> 00:08:55,920
so we're we're very near the the finish

00:08:55,440 --> 00:08:59,680
line

00:08:55,920 --> 00:09:02,800
for the specification and we know

00:08:59,680 --> 00:09:06,399
that the uh language maintainers

00:09:02,800 --> 00:09:10,480
language sdk maintainers are also

00:09:06,399 --> 00:09:12,720
ready to uh give us the implementations

00:09:10,480 --> 00:09:13,519
according to the specification i would

00:09:12,720 --> 00:09:16,240
say we

00:09:13,519 --> 00:09:17,360
are now very close to the finish line

00:09:16,240 --> 00:09:19,839
through 1.0

00:09:17,360 --> 00:09:20,959
release so i feel very good about what

00:09:19,839 --> 00:09:23,519
we

00:09:20,959 --> 00:09:24,560
have done so far with the tracing part

00:09:23,519 --> 00:09:26,320
and the metrics

00:09:24,560 --> 00:09:29,040
josh was talking about that a bit

00:09:26,320 --> 00:09:31,519
earlier is coming pretty soon after that

00:09:29,040 --> 00:09:32,959
so we're doing well in all of the

00:09:31,519 --> 00:09:37,839
regards here

00:09:32,959 --> 00:09:37,839
that's that's my perspective

00:09:43,200 --> 00:09:46,880
yeah i don't know if uh i think shelby's

00:09:45,920 --> 00:09:50,160
muted i'm just gonna

00:09:46,880 --> 00:09:53,519
jump in with that same question um

00:09:50,160 --> 00:09:55,120
uh yeah i think it's uh uh i think we're

00:09:53,519 --> 00:09:55,440
going along in the the ghost thing i can

00:09:55,120 --> 00:09:57,839
speak

00:09:55,440 --> 00:09:59,760
uh specifically um obviously the metrics

00:09:57,839 --> 00:10:01,440
side of things and the specification

00:09:59,760 --> 00:10:03,040
is still a work in progress but um we

00:10:01,440 --> 00:10:04,880
are making progress on that and so

00:10:03,040 --> 00:10:06,560
um it's more i think from the gosak's

00:10:04,880 --> 00:10:07,440
perspective uh an interesting thing

00:10:06,560 --> 00:10:09,519
because

00:10:07,440 --> 00:10:11,279
now we are really coming to the end of

00:10:09,519 --> 00:10:12,480
the the tracing specification saying

00:10:11,279 --> 00:10:14,000
like this is going to be the release

00:10:12,480 --> 00:10:16,720
candidate so really go make it

00:10:14,000 --> 00:10:17,200
um you know implement the specification

00:10:16,720 --> 00:10:19,279
sounds

00:10:17,200 --> 00:10:20,880
um cool it sounds like cool now you're

00:10:19,279 --> 00:10:21,920
done essentially but the the truth of

00:10:20,880 --> 00:10:24,160
the matter is that

00:10:21,920 --> 00:10:25,200
um it's the implementations of that

00:10:24,160 --> 00:10:26,720
specification

00:10:25,200 --> 00:10:28,399
and the language communities that we're

00:10:26,720 --> 00:10:30,959
going to be offering them to

00:10:28,399 --> 00:10:32,959
the adoption needs to be something that

00:10:30,959 --> 00:10:33,839
they want to use i think and that as a

00:10:32,959 --> 00:10:35,680
as a sig

00:10:33,839 --> 00:10:37,440
author is is really critical to me at

00:10:35,680 --> 00:10:39,680
this point in time um

00:10:37,440 --> 00:10:41,360
because i i there are you know always

00:10:39,680 --> 00:10:42,800
multiple ways to implement a solution

00:10:41,360 --> 00:10:45,200
and sometimes they're better

00:10:42,800 --> 00:10:46,079
for that language than others and i

00:10:45,200 --> 00:10:48,240
think that

00:10:46,079 --> 00:10:50,160
having feedback from the community that

00:10:48,240 --> 00:10:50,959
we're hoping to eventually give this out

00:10:50,160 --> 00:10:53,519
to

00:10:50,959 --> 00:10:55,279
is uh paramount at this point like it's

00:10:53,519 --> 00:10:57,680
absolutely critical and we're trying

00:10:55,279 --> 00:10:59,440
um through many different ways of

00:10:57,680 --> 00:11:00,000
requesting feedback through forms or

00:10:59,440 --> 00:11:03,839
through other

00:11:00,000 --> 00:11:05,360
like direct access to other users uh to

00:11:03,839 --> 00:11:06,800
get some feedback into those language

00:11:05,360 --> 00:11:07,120
implementations and trying to iterate

00:11:06,800 --> 00:11:09,920
them

00:11:07,120 --> 00:11:11,600
on those uh fast going forward um but

00:11:09,920 --> 00:11:12,480
yeah it's still a work in progress and i

00:11:11,600 --> 00:11:13,839
think that we're going to be

00:11:12,480 --> 00:11:15,760
asking and trying to do a lot more of

00:11:13,839 --> 00:11:18,399
that going forward

00:11:15,760 --> 00:11:19,680
i see my one of my co-maintainers uh in

00:11:18,399 --> 00:11:21,519
the go sick anthony uh

00:11:19,680 --> 00:11:23,680
jumped on as well um not to put him

00:11:21,519 --> 00:11:26,000
under the spotlight too much

00:11:23,680 --> 00:11:27,200
um but i think that uh he has a really

00:11:26,000 --> 00:11:29,120
great perspective as well because he

00:11:27,200 --> 00:11:29,519
came from a world as an end user oh i

00:11:29,120 --> 00:11:30,800
think

00:11:29,519 --> 00:11:33,440
this was pointing that out in the chat

00:11:30,800 --> 00:11:35,120
uh and so like really i mean we can have

00:11:33,440 --> 00:11:36,320
him talk a little bit um

00:11:35,120 --> 00:11:38,240
i'll throw him under the spotlight as

00:11:36,320 --> 00:11:41,040
well uh about that

00:11:38,240 --> 00:11:42,880
i'll add him to the oh i can add him to

00:11:41,040 --> 00:11:44,800
the spotlight there yes

00:11:42,880 --> 00:11:46,320
um so we can put them on the spot to ask

00:11:44,800 --> 00:11:47,040
answer those questions if that's okay

00:11:46,320 --> 00:11:50,480
anthony

00:11:47,040 --> 00:11:52,639
yeah sure um so awesome so yeah as an

00:11:50,480 --> 00:11:54,160
end user i came to the project i think

00:11:52,639 --> 00:11:56,480
fairly early on

00:11:54,160 --> 00:11:58,079
because we were just starting a new

00:11:56,480 --> 00:11:58,720
application development project where we

00:11:58,079 --> 00:12:00,320
expected

00:11:58,720 --> 00:12:02,160
development's gonna last two to three

00:12:00,320 --> 00:12:04,079
years um and

00:12:02,160 --> 00:12:06,160
we were looking at how do we instrument

00:12:04,079 --> 00:12:07,120
this and we saw well open tracing open

00:12:06,160 --> 00:12:08,399
census are

00:12:07,120 --> 00:12:10,000
they're coming together they're merging

00:12:08,399 --> 00:12:10,880
so two to three years from now when

00:12:10,000 --> 00:12:12,639
we're ready to go

00:12:10,880 --> 00:12:14,320
into production with this they're not

00:12:12,639 --> 00:12:15,839
going to be there um

00:12:14,320 --> 00:12:17,680
i guess that means we got to we have to

00:12:15,839 --> 00:12:18,480
get in early on this open telemetry

00:12:17,680 --> 00:12:22,399
thing

00:12:18,480 --> 00:12:24,720
um and so so we did i dove into

00:12:22,399 --> 00:12:26,000
to start figuring out how the go sdk

00:12:24,720 --> 00:12:27,440
worked

00:12:26,000 --> 00:12:29,440
might have been a bit early because i

00:12:27,440 --> 00:12:31,120
think the first time i tried to do the

00:12:29,440 --> 00:12:34,320
hello world

00:12:31,120 --> 00:12:35,920
example the documentation had changed

00:12:34,320 --> 00:12:37,040
between the time that i pulled the code

00:12:35,920 --> 00:12:38,000
and the time that i went to look at the

00:12:37,040 --> 00:12:39,440
documentation to see why

00:12:38,000 --> 00:12:41,519
that what i tried to do from the example

00:12:39,440 --> 00:12:43,360
wasn't working um

00:12:41,519 --> 00:12:44,800
but things have gotten a bit better from

00:12:43,360 --> 00:12:46,560
there and the community was

00:12:44,800 --> 00:12:47,760
incredibly welcoming so as soon as i

00:12:46,560 --> 00:12:49,200
jumped into the getter and started

00:12:47,760 --> 00:12:51,200
asking questions and

00:12:49,200 --> 00:12:52,720
saw that there were gaps in the

00:12:51,200 --> 00:12:53,440
capabilities that the instrumentation

00:12:52,720 --> 00:12:56,079
had

00:12:53,440 --> 00:12:58,000
um that i could um offer offer up you

00:12:56,079 --> 00:13:00,880
know help with the http instrumentation

00:12:58,000 --> 00:13:02,399
and things like that um everybody was

00:13:00,880 --> 00:13:05,600
incredibly receptive to

00:13:02,399 --> 00:13:07,279
the help um and that just kind of

00:13:05,600 --> 00:13:08,880
one thing led to another of you know

00:13:07,279 --> 00:13:09,839
starting to review other people's pull

00:13:08,880 --> 00:13:13,120
requests becoming

00:13:09,839 --> 00:13:14,480
a reviewer and approver um and now here

00:13:13,120 --> 00:13:16,240
i am trying to

00:13:14,480 --> 00:13:17,760
help get it across the finish line to

00:13:16,240 --> 00:13:20,880
become uh

00:13:17,760 --> 00:13:23,279
an rc and then a ga

00:13:20,880 --> 00:13:24,480
i would like to say first of all thank

00:13:23,279 --> 00:13:26,800
you to all

00:13:24,480 --> 00:13:29,120
maintainers all approvers and all

00:13:26,800 --> 00:13:32,480
contributors to this project without

00:13:29,120 --> 00:13:33,200
without this would not be here secondly

00:13:32,480 --> 00:13:36,240
i think

00:13:33,200 --> 00:13:37,040
at this moment it's it's very critical

00:13:36,240 --> 00:13:39,279
for us

00:13:37,040 --> 00:13:40,240
when we talk about rc when we talk about

00:13:39,279 --> 00:13:44,240
ga

00:13:40,240 --> 00:13:47,279
that now more and more end users

00:13:44,240 --> 00:13:49,519
will help by trying our projects

00:13:47,279 --> 00:13:50,800
i think even though you don't do pr's

00:13:49,519 --> 00:13:54,639
contributions

00:13:50,800 --> 00:13:58,240
helping us by by using our

00:13:54,639 --> 00:14:00,720
our work and trying our our apis

00:13:58,240 --> 00:14:01,440
our implementation and provide feedback

00:14:00,720 --> 00:14:03,680
is

00:14:01,440 --> 00:14:05,680
probably more valuable at this point

00:14:03,680 --> 00:14:08,959
than anything else so please

00:14:05,680 --> 00:14:09,600
help if if you if you want to help with

00:14:08,959 --> 00:14:12,800
this

00:14:09,600 --> 00:14:16,160
you'll be greatly appreciated

00:14:12,800 --> 00:14:19,199
yeah and the erlang electric sig were

00:14:16,160 --> 00:14:22,560
nearing you know completion with the

00:14:19,199 --> 00:14:23,600
tracing api and sdk and so when people

00:14:22,560 --> 00:14:25,680
have been coming

00:14:23,600 --> 00:14:26,800
and asking about how they can help i

00:14:25,680 --> 00:14:29,519
usually say

00:14:26,800 --> 00:14:30,320
can you write examples and put them up

00:14:29,519 --> 00:14:33,040
uh

00:14:30,320 --> 00:14:34,320
on github so that we can point people to

00:14:33,040 --> 00:14:38,720
running examples

00:14:34,320 --> 00:14:38,720
that's a really good place to help out

00:14:43,040 --> 00:14:48,000
thank you so much and and definitely

00:14:44,959 --> 00:14:49,839
like i was really excited to see

00:14:48,000 --> 00:14:51,680
the talks this morning on just how to

00:14:49,839 --> 00:14:52,959
how to get involved and how welcoming

00:14:51,680 --> 00:14:55,760
the community is and

00:14:52,959 --> 00:14:56,480
and from from what i've been learning um

00:14:55,760 --> 00:14:59,519
you know just

00:14:56,480 --> 00:15:00,880
the past like six eight months of being

00:14:59,519 --> 00:15:01,839
even aware of the open telemetry

00:15:00,880 --> 00:15:04,079
community

00:15:01,839 --> 00:15:05,920
um i'm really excited to dive in and

00:15:04,079 --> 00:15:08,800
start contributing in my own way

00:15:05,920 --> 00:15:11,199
so thanks everyone for just you know

00:15:08,800 --> 00:15:14,480
making the community so great

00:15:11,199 --> 00:15:17,760
um let me pull up my next question

00:15:14,480 --> 00:15:20,720
share um

00:15:17,760 --> 00:15:22,399
so how can users provide feedback to

00:15:20,720 --> 00:15:24,480
maintainers and to the community in

00:15:22,399 --> 00:15:27,760
general like what is the best way to go

00:15:24,480 --> 00:15:30,399
about that

00:15:27,760 --> 00:15:32,560
i i will take this first just because

00:15:30,399 --> 00:15:36,000
tyler was

00:15:32,560 --> 00:15:40,079
give him a moment to laugh at me so

00:15:36,000 --> 00:15:43,199
sharing this experience so first of all

00:15:40,079 --> 00:15:45,920
i think uh i i saw during the

00:15:43,199 --> 00:15:47,279
the life of this project different ways

00:15:45,920 --> 00:15:50,399
to to give feedback

00:15:47,279 --> 00:15:54,639
i saw certain people uh coming writing

00:15:50,399 --> 00:15:57,199
some small google docs or whatever

00:15:54,639 --> 00:15:58,959
some documents with the which

00:15:57,199 --> 00:15:59,839
incorporate the feedback and share that

00:15:58,959 --> 00:16:02,800
with us

00:15:59,839 --> 00:16:04,079
that that's a very very nice way and i

00:16:02,800 --> 00:16:06,399
think

00:16:04,079 --> 00:16:07,360
we we treated all of them very seriously

00:16:06,399 --> 00:16:10,320
and i think we

00:16:07,360 --> 00:16:10,959
from there we filed issues and and so on

00:16:10,320 --> 00:16:12,560
so we

00:16:10,959 --> 00:16:14,480
we took that in consideration and i

00:16:12,560 --> 00:16:15,199
think go has a good experience with that

00:16:14,480 --> 00:16:18,399
tyler can

00:16:15,199 --> 00:16:20,160
can explain more about that uh the other

00:16:18,399 --> 00:16:22,320
the other way that i saw people doing

00:16:20,160 --> 00:16:24,720
this is via issues so

00:16:22,320 --> 00:16:26,959
simply create issues with with your with

00:16:24,720 --> 00:16:30,720
your problem with your feedback

00:16:26,959 --> 00:16:32,399
try to to to uh explain the problem that

00:16:30,720 --> 00:16:36,480
you are trying to solve and try to

00:16:32,399 --> 00:16:39,759
to give actionable

00:16:36,480 --> 00:16:40,880
item out of that issue so somehow how we

00:16:39,759 --> 00:16:44,000
can help

00:16:40,880 --> 00:16:47,519
uh i think overall

00:16:44,000 --> 00:16:50,639
any channel any way that trans that

00:16:47,519 --> 00:16:52,000
that makes a transfer or translation

00:16:50,639 --> 00:16:54,880
from from your head

00:16:52,000 --> 00:16:55,680
to our head is good doesn't matter how

00:16:54,880 --> 00:16:58,560
it is

00:16:55,680 --> 00:16:59,440
as long as we we transferred this

00:16:58,560 --> 00:17:02,639
information

00:16:59,440 --> 00:17:04,079
somehow it's it's very good and i'm i'm

00:17:02,639 --> 00:17:06,400
happy with any way

00:17:04,079 --> 00:17:09,439
but some some other maintainers may have

00:17:06,400 --> 00:17:09,439
other preference but

00:17:12,480 --> 00:17:15,679
yeah thank you and from what my

00:17:14,160 --> 00:17:16,400
understanding is there's there's the

00:17:15,679 --> 00:17:20,000
getter

00:17:16,400 --> 00:17:22,799
get get channels for each language and

00:17:20,000 --> 00:17:23,360
and the different sigs and as well as

00:17:22,799 --> 00:17:25,439
the

00:17:23,360 --> 00:17:27,280
cncf channels is that like sort of

00:17:25,439 --> 00:17:29,600
year-round

00:17:27,280 --> 00:17:31,360
that you can participate in the cncs

00:17:29,600 --> 00:17:33,720
slack and

00:17:31,360 --> 00:17:35,120
ask questions there um the github

00:17:33,720 --> 00:17:38,320
repositories

00:17:35,120 --> 00:17:40,320
opening issues there but um yeah

00:17:38,320 --> 00:17:41,919
i i've certainly have my moments where

00:17:40,320 --> 00:17:43,679
i'm just like man i can make a list and

00:17:41,919 --> 00:17:45,360
just some google doc and

00:17:43,679 --> 00:17:47,360
share that with somebody is here here

00:17:45,360 --> 00:17:50,640
all the things that i want help with

00:17:47,360 --> 00:17:51,919
uh um or i'd like to help improve so um

00:17:50,640 --> 00:17:53,520
that's good to know that we don't have

00:17:51,919 --> 00:17:56,480
to

00:17:53,520 --> 00:17:57,039
just declare by one thing yeah we're

00:17:56,480 --> 00:17:59,120
using the

00:17:57,039 --> 00:18:00,640
the cncf slack for the duration of the

00:17:59,120 --> 00:18:02,320
kubecon conference but we typically

00:18:00,640 --> 00:18:04,960
don't hang out too much on it

00:18:02,320 --> 00:18:05,840
uh getters oh okay after kubecon is

00:18:04,960 --> 00:18:07,760
better

00:18:05,840 --> 00:18:09,039
after ga we may migrate to slack there's

00:18:07,760 --> 00:18:10,240
a bunch of discussions about that but we

00:18:09,039 --> 00:18:11,679
don't want to pull the trigger on that

00:18:10,240 --> 00:18:13,440
quite yet

00:18:11,679 --> 00:18:15,440
sure good to know thank you for

00:18:13,440 --> 00:18:17,679
clarifying

00:18:15,440 --> 00:18:19,840
one one small comment on github usage

00:18:17,679 --> 00:18:22,320
please use the public runes

00:18:19,840 --> 00:18:23,919
uh the direct messages they are they are

00:18:22,320 --> 00:18:25,600
not visible to anyone else right

00:18:23,919 --> 00:18:27,840
obviously you'd want to use that if it's

00:18:25,600 --> 00:18:29,840
something you want to keep confidential

00:18:27,840 --> 00:18:31,760
otherwise please use the public room so

00:18:29,840 --> 00:18:33,840
there's visibility for

00:18:31,760 --> 00:18:35,200
everyone else others can participate as

00:18:33,840 --> 00:18:37,039
well and

00:18:35,200 --> 00:18:38,240
uh and you can you're also very welcome

00:18:37,039 --> 00:18:40,080
to come to the

00:18:38,240 --> 00:18:41,840
sig meetings they are open for

00:18:40,080 --> 00:18:43,840
participation

00:18:41,840 --> 00:18:45,360
they are great for live discussion if

00:18:43,840 --> 00:18:47,520
you have something that you

00:18:45,360 --> 00:18:49,760
would like to both give feedback and

00:18:47,520 --> 00:18:53,280
also discuss that's a that's a great

00:18:49,760 --> 00:18:55,919
setting to come and talk to people

00:18:53,280 --> 00:18:57,280
who are working on the particular seat

00:18:55,919 --> 00:18:59,679
that's that's all

00:18:57,280 --> 00:19:02,480
um language sigs the collector's seek

00:18:59,679 --> 00:19:02,480
specifications

00:19:08,880 --> 00:19:12,640
apologies i had the wrong window clicked

00:19:11,280 --> 00:19:14,799
technical

00:19:12,640 --> 00:19:16,320
difficulties here's my next question

00:19:14,799 --> 00:19:18,000
though um

00:19:16,320 --> 00:19:19,440
i know i know lots of people have been

00:19:18,000 --> 00:19:22,559
talking about this today

00:19:19,440 --> 00:19:24,000
but um my question started out is how do

00:19:22,559 --> 00:19:26,320
you see open telemetry evolving

00:19:24,000 --> 00:19:27,840
over the next year but i think i really

00:19:26,320 --> 00:19:28,880
want to know is what what's the most

00:19:27,840 --> 00:19:31,280
excited

00:19:28,880 --> 00:19:33,039
most exciting evolution besides ga or

00:19:31,280 --> 00:19:36,400
besides your release candidate

00:19:33,039 --> 00:19:39,840
um that you're excited about

00:19:36,400 --> 00:19:39,840
in this upcoming year

00:19:42,960 --> 00:19:46,799
should i call on somebody

00:19:44,040 --> 00:19:48,720
[Laughter]

00:19:46,799 --> 00:19:50,080
so i think one of the things i'm most

00:19:48,720 --> 00:19:53,120
excited about is

00:19:50,080 --> 00:19:53,840
seeing what the the end user community

00:19:53,120 --> 00:19:56,160
does

00:19:53,840 --> 00:19:57,200
once they've got a ga release that they

00:19:56,160 --> 00:19:59,679
feel comfortable

00:19:57,200 --> 00:20:00,880
taking and running with um we've got a

00:19:59,679 --> 00:20:04,799
lot of great instrumentation

00:20:00,880 --> 00:20:07,120
that's been added to the go contrib repo

00:20:04,799 --> 00:20:08,799
but i think it covers just a tiny slice

00:20:07,120 --> 00:20:11,520
of what's out there

00:20:08,799 --> 00:20:13,440
um and so i'm really interested to see

00:20:11,520 --> 00:20:15,520
how people instrument other libraries

00:20:13,440 --> 00:20:18,159
what libraries they instrument

00:20:15,520 --> 00:20:18,559
and and where it goes once we hit that

00:20:18,159 --> 00:20:22,400
real

00:20:18,559 --> 00:20:24,640
taking off point of having a ga release

00:20:22,400 --> 00:20:25,440
i'd like to expand a bit on what anthony

00:20:24,640 --> 00:20:28,400
said i

00:20:25,440 --> 00:20:30,159
think it's very important for us once

00:20:28,400 --> 00:20:33,360
one point always released

00:20:30,159 --> 00:20:35,280
to focus on our attention and actually

00:20:33,360 --> 00:20:37,440
making open telemetry popular

00:20:35,280 --> 00:20:38,400
we want that inflammatory to be widely

00:20:37,440 --> 00:20:41,440
used right

00:20:38,400 --> 00:20:43,840
i want to i personally want to see every

00:20:41,440 --> 00:20:44,960
software library every piece of popular

00:20:43,840 --> 00:20:46,640
software

00:20:44,960 --> 00:20:48,240
database management system web

00:20:46,640 --> 00:20:51,039
frameworks to

00:20:48,240 --> 00:20:52,480
uh to have to be instrumented by mobile

00:20:51,039 --> 00:20:54,720
telemetry right

00:20:52,480 --> 00:20:57,039
and and so that that instrumentation is

00:20:54,720 --> 00:20:59,360
also maintained as a first-class

00:20:57,039 --> 00:21:01,760
capability by the authors of the library

00:20:59,360 --> 00:21:04,480
and the film framework

00:21:01,760 --> 00:21:06,720
obviously this is a very big goal right

00:21:04,480 --> 00:21:09,919
it will take years to be there

00:21:06,720 --> 00:21:12,240
but i i think it's very important for us

00:21:09,919 --> 00:21:13,440
maintainers contributors to open

00:21:12,240 --> 00:21:16,559
telemetry

00:21:13,440 --> 00:21:17,039
to to think about this and make this

00:21:16,559 --> 00:21:19,760
about

00:21:17,039 --> 00:21:21,520
our vision we want to make sure that

00:21:19,760 --> 00:21:23,679
open planetary is attractive to

00:21:21,520 --> 00:21:26,400
developers it's easy to use

00:21:23,679 --> 00:21:31,840
uh so we we need to spend time on

00:21:26,400 --> 00:21:31,840
popularizing our contention to sellers

00:21:34,320 --> 00:21:38,320
um to follow up on that do you know of

00:21:36,080 --> 00:21:40,000
any framework developers framework

00:21:38,320 --> 00:21:41,440
maintainers who are involved in open

00:21:40,000 --> 00:21:44,000
telemetry or who are using

00:21:41,440 --> 00:21:44,880
open telemetry on their frameworks as

00:21:44,000 --> 00:21:50,000
far as i know

00:21:44,880 --> 00:21:50,000
dotnet has plans to other inflammatory

00:21:50,240 --> 00:21:56,240
net.net shipped with open telemetry or

00:21:53,440 --> 00:21:58,240
a subset of open telemetry and they keep

00:21:56,240 --> 00:22:01,200
adding new functionality

00:21:58,240 --> 00:22:03,039
uh the other by the way another work

00:22:01,200 --> 00:22:05,280
that we did was with the spring

00:22:03,039 --> 00:22:06,559
community with with the spring salute

00:22:05,280 --> 00:22:09,600
community uh

00:22:06,559 --> 00:22:13,360
thanks to to marching one of the the

00:22:09,600 --> 00:22:16,159
maintainers of the spring tracing

00:22:13,360 --> 00:22:17,440
artifact there uh he he made a huge

00:22:16,159 --> 00:22:20,240
contribution so

00:22:17,440 --> 00:22:21,760
most likely i don't know if it's already

00:22:20,240 --> 00:22:23,440
released or is going to be

00:22:21,760 --> 00:22:25,919
released this week or something like

00:22:23,440 --> 00:22:27,919
that and the new spring sleuth

00:22:25,919 --> 00:22:31,280
will include the open telemetry as well

00:22:27,919 --> 00:22:31,280
as one of the options there

00:22:32,880 --> 00:22:36,559
additionally that's fantastic um

00:22:36,720 --> 00:22:40,080
yeah right um sorry i didn't to cut you

00:22:39,360 --> 00:22:42,000
off uh

00:22:40,080 --> 00:22:43,200
i think we also have contributions in

00:22:42,000 --> 00:22:44,640
the the go redis

00:22:43,200 --> 00:22:46,320
library itself directly which was a

00:22:44,640 --> 00:22:48,960
really awesome thing to see um

00:22:46,320 --> 00:22:49,440
and it's a pretty cool just to see like

00:22:48,960 --> 00:22:51,039
a

00:22:49,440 --> 00:22:53,120
you know very organic adoption at that

00:22:51,039 --> 00:22:54,159
level and that's in addition to all the

00:22:53,120 --> 00:22:56,320
contrib repos

00:22:54,159 --> 00:22:57,840
um that we host internally which are

00:22:56,320 --> 00:22:59,440
essentially plug-in models which have

00:22:57,840 --> 00:23:01,120
also seen contributions from

00:22:59,440 --> 00:23:02,480
outside developers to help progress

00:23:01,120 --> 00:23:05,679
those so you're getting a lot of

00:23:02,480 --> 00:23:05,679
community involvement there as well

00:23:06,799 --> 00:23:10,559
yeah for me i'm excited to see more

00:23:09,280 --> 00:23:13,679
vendor adoption

00:23:10,559 --> 00:23:17,039
uh as uh

00:23:13,679 --> 00:23:19,440
in early elixir it's always been

00:23:17,039 --> 00:23:20,640
you write just enough to support a

00:23:19,440 --> 00:23:21,919
vendor that you want to ship

00:23:20,640 --> 00:23:25,600
to and that's all you get because

00:23:21,919 --> 00:23:29,760
vendors never write

00:23:25,600 --> 00:23:32,159
integrations for us and now it'll be

00:23:29,760 --> 00:23:33,200
a different world when vendors are

00:23:32,159 --> 00:23:36,400
adopting

00:23:33,200 --> 00:23:40,080
open telemetry and we're able to to

00:23:36,400 --> 00:23:41,840
use hopefully very most all of their

00:23:40,080 --> 00:23:43,279
their features through it which would be

00:23:41,840 --> 00:23:43,679
a very different world and i think it'll

00:23:43,279 --> 00:23:46,880
get

00:23:43,679 --> 00:23:48,840
a lot of adoption coming in to uh from

00:23:46,880 --> 00:23:50,720
like our big frameworks and elixir with

00:23:48,840 --> 00:23:53,760
the phoenix framework

00:23:50,720 --> 00:23:54,880
to start using these uh these vendors

00:23:53,760 --> 00:23:58,720
and

00:23:54,880 --> 00:23:59,919
tools yeah talking about vendors this is

00:23:58,720 --> 00:24:02,240
a good point i'm

00:23:59,919 --> 00:24:04,080
starting to see more and more vendors

00:24:02,240 --> 00:24:06,720
trying to make the canonical

00:24:04,080 --> 00:24:07,600
way a recommended way to be open

00:24:06,720 --> 00:24:09,760
telemetry

00:24:07,600 --> 00:24:11,520
which means more and more uh

00:24:09,760 --> 00:24:13,840
contributions will come to the

00:24:11,520 --> 00:24:15,679
to the project because once a vendor

00:24:13,840 --> 00:24:17,440
starts selling this

00:24:15,679 --> 00:24:19,360
they have to to contribute more they

00:24:17,440 --> 00:24:20,559
have to make it more robust they have to

00:24:19,360 --> 00:24:22,400
increase

00:24:20,559 --> 00:24:24,960
quality and everything so i think this

00:24:22,400 --> 00:24:28,080
is this is definitely a good point

00:24:24,960 --> 00:24:31,440
uh i also want to see next year

00:24:28,080 --> 00:24:32,720
maybe a world where different frameworks

00:24:31,440 --> 00:24:35,440
or independent

00:24:32,720 --> 00:24:37,679
independent projects like the one you

00:24:35,440 --> 00:24:40,080
appointed tyler the goal readys

00:24:37,679 --> 00:24:42,080
different other projects starting to to

00:24:40,080 --> 00:24:44,640
instrument themselves

00:24:42,080 --> 00:24:46,080
and take a dependency on these and see

00:24:44,640 --> 00:24:48,159
how that world will will

00:24:46,080 --> 00:24:49,440
become and uh if that will become a

00:24:48,159 --> 00:24:52,799
better world or not

00:24:49,440 --> 00:24:52,799
i i hope it will be better

00:24:54,640 --> 00:24:58,480
um yeah i just kind of wanted to to go

00:24:57,200 --> 00:24:59,919
back to the original question of also

00:24:58,480 --> 00:25:00,960
like how we see it evolving i think that

00:24:59,919 --> 00:25:02,640
we've done a really good job talking

00:25:00,960 --> 00:25:03,600
about like how we see the code evolving

00:25:02,640 --> 00:25:05,120
um

00:25:03,600 --> 00:25:06,480
but i'd love to kind of just follow on

00:25:05,120 --> 00:25:08,080
what bogda was kind of leading into it

00:25:06,480 --> 00:25:11,440
as like i'd love to see that community

00:25:08,080 --> 00:25:13,440
become uh you know bigger and

00:25:11,440 --> 00:25:15,760
continue on in its path to the

00:25:13,440 --> 00:25:17,360
inclusivity that we try to

00:25:15,760 --> 00:25:19,120
engender in our community i think that's

00:25:17,360 --> 00:25:20,480
a really awesome thing i think something

00:25:19,120 --> 00:25:22,080
we can continue to build so i'm really

00:25:20,480 --> 00:25:23,679
excited to um

00:25:22,080 --> 00:25:29,600
to just help in whatever way i possibly

00:25:23,679 --> 00:25:33,039
can and to facilitate that yeah

00:25:29,600 --> 00:25:33,440
thank you so much oh go go for it thanks

00:25:33,039 --> 00:25:36,159
for watching

00:25:33,440 --> 00:25:37,520
sorry one last thing is also there's the

00:25:36,159 --> 00:25:38,559
some work going on in logging and that

00:25:37,520 --> 00:25:40,720
won't be part of the

00:25:38,559 --> 00:25:42,400
um release candidate or ga process that

00:25:40,720 --> 00:25:42,960
we have planned for traces and metrics

00:25:42,400 --> 00:25:44,320
but

00:25:42,960 --> 00:25:45,760
next year we are going to see logs

00:25:44,320 --> 00:25:46,799
arrive for open telemetry later in the

00:25:45,760 --> 00:25:49,440
year and that's also

00:25:46,799 --> 00:25:49,440
quite exciting

00:25:52,559 --> 00:25:58,320
um and then we have a question for the

00:25:55,679 --> 00:25:59,679
audience and i would love to get some

00:25:58,320 --> 00:26:01,039
answers in the chat

00:25:59,679 --> 00:26:02,880
what do you want what do you what do

00:26:01,039 --> 00:26:03,760
people want to see from the project in

00:26:02,880 --> 00:26:05,360
the next year

00:26:03,760 --> 00:26:07,440
that that you haven't heard about today

00:26:05,360 --> 00:26:10,480
what is something that you're just like

00:26:07,440 --> 00:26:12,559
itching for um to

00:26:10,480 --> 00:26:15,360
for the maintainers to start

00:26:12,559 --> 00:26:15,360
prioritizing

00:26:20,799 --> 00:26:27,760
well i know my answer is um

00:26:24,000 --> 00:26:31,120
more um sort of

00:26:27,760 --> 00:26:34,240
like introductory materials

00:26:31,120 --> 00:26:35,200
or like helping helping people

00:26:34,240 --> 00:26:37,840
especially

00:26:35,200 --> 00:26:39,520
you know whether you're developers or

00:26:37,840 --> 00:26:40,000
infrastructure engineers or whatever

00:26:39,520 --> 00:26:42,640
like

00:26:40,000 --> 00:26:43,840
you probably haven't had to think about

00:26:42,640 --> 00:26:47,200
um

00:26:43,840 --> 00:26:48,720
instrumentation this way before um or a

00:26:47,200 --> 00:26:50,000
lot of people have a lot of people don't

00:26:48,720 --> 00:26:51,840
have experience with this sort of thing

00:26:50,000 --> 00:26:52,640
and what i've found in the observability

00:26:51,840 --> 00:26:54,400
community

00:26:52,640 --> 00:26:55,840
is we're very good at talking about

00:26:54,400 --> 00:26:57,520
instrumentation we're very good about

00:26:55,840 --> 00:27:01,039
talking about telemetry

00:26:57,520 --> 00:27:03,120
um and most of our end users

00:27:01,039 --> 00:27:06,080
don't think about that every day right

00:27:03,120 --> 00:27:08,640
and so we tend to

00:27:06,080 --> 00:27:10,159
be very focused on that part and and

00:27:08,640 --> 00:27:11,279
less able to like reach out to the

00:27:10,159 --> 00:27:13,120
people who've

00:27:11,279 --> 00:27:16,159
you know this isn't their day-to-day

00:27:13,120 --> 00:27:17,600
work um

00:27:16,159 --> 00:27:19,520
and now i'm seeing lots of answers in

00:27:17,600 --> 00:27:20,480
the chat so i will i will read those

00:27:19,520 --> 00:27:23,520
loud so

00:27:20,480 --> 00:27:25,440
um liz fong jones

00:27:23,520 --> 00:27:27,760
my colleague feels that we need to do

00:27:25,440 --> 00:27:28,720
more outreach workshops now that the api

00:27:27,760 --> 00:27:31,919
is stable

00:27:28,720 --> 00:27:35,200
um and that's something that that um

00:27:31,919 --> 00:27:35,520
we've been working on um austin and liz

00:27:35,200 --> 00:27:37,279
do

00:27:35,520 --> 00:27:39,360
the open telemetry workshop they've

00:27:37,279 --> 00:27:41,360
given that i know i know several other

00:27:39,360 --> 00:27:43,520
people in the community have done that

00:27:41,360 --> 00:27:46,559
um josh mcdonald

00:27:43,520 --> 00:27:49,600
who spoke earlier uh wants

00:27:46,559 --> 00:27:52,480
more logging when we reach ga um

00:27:49,600 --> 00:27:54,720
this is an inside joke this is an

00:27:52,480 --> 00:27:54,720
insight

00:27:55,560 --> 00:27:58,670
[Music]

00:27:58,720 --> 00:28:04,640
sorry um short explanation he he

00:28:02,159 --> 00:28:06,480
he said he always pushes us to focus on

00:28:04,640 --> 00:28:08,480
ga and ignore other things

00:28:06,480 --> 00:28:09,679
and then later we can talk about other

00:28:08,480 --> 00:28:12,640
things which is good

00:28:09,679 --> 00:28:12,640
don't get me wrong but

00:28:13,440 --> 00:28:17,760
um jonathan wong wants war stories on

00:28:16,320 --> 00:28:20,480
onboarding your organization

00:28:17,760 --> 00:28:21,440
and i would love that especially anthony

00:28:20,480 --> 00:28:24,399
i know you shared your

00:28:21,440 --> 00:28:24,799
your experience already but anyone else

00:28:24,399 --> 00:28:28,720
who

00:28:24,799 --> 00:28:30,640
can can share your your experience

00:28:28,720 --> 00:28:32,240
getting your organization to adopt open

00:28:30,640 --> 00:28:33,600
telemetry that that would be awesome

00:28:32,240 --> 00:28:36,720
feel free to

00:28:33,600 --> 00:28:37,120
unbeat and chime in um and then also

00:28:36,720 --> 00:28:39,039
yeah

00:28:37,120 --> 00:28:40,159
more open source projects implementing

00:28:39,039 --> 00:28:43,039
hotel

00:28:40,159 --> 00:28:45,840
more framework authors using it would be

00:28:43,039 --> 00:28:45,840
fantastic

00:28:46,720 --> 00:28:50,000
yeah i can say from the end user

00:28:48,399 --> 00:28:51,679
perspective and getting an organization

00:28:50,000 --> 00:28:54,240
on board the two things that i found

00:28:51,679 --> 00:28:55,679
critical were one making it as easy as

00:28:54,240 --> 00:28:56,399
possible for the developers to get

00:28:55,679 --> 00:28:58,799
started

00:28:56,399 --> 00:29:00,640
um and i think some of the vendors are

00:28:58,799 --> 00:29:02,480
starting to go down this path with the

00:29:00,640 --> 00:29:05,200
distributions concept of

00:29:02,480 --> 00:29:06,559
you know here here's an easy way to get

00:29:05,200 --> 00:29:08,880
everything configured um

00:29:06,559 --> 00:29:09,840
i ended up internally writing a set of

00:29:08,880 --> 00:29:11,440
libraries

00:29:09,840 --> 00:29:14,640
that made it easy for you to hand us an

00:29:11,440 --> 00:29:17,679
http handler and you get back a server

00:29:14,640 --> 00:29:19,360
that is instrumented and all of the

00:29:17,679 --> 00:29:20,880
trace providers and metric providers are

00:29:19,360 --> 00:29:22,960
configured for you

00:29:20,880 --> 00:29:24,840
so it becomes very easy for a developer

00:29:22,960 --> 00:29:26,000
to take an existing service and get it

00:29:24,840 --> 00:29:28,320
onboarded

00:29:26,000 --> 00:29:29,120
um and the second thing is showing them

00:29:28,320 --> 00:29:31,279
the value

00:29:29,120 --> 00:29:32,799
showing them why they want to go in and

00:29:31,279 --> 00:29:34,559
add their own custom spans and

00:29:32,799 --> 00:29:37,840
attributes to those spams

00:29:34,559 --> 00:29:40,320
um and for me i think the the most

00:29:37,840 --> 00:29:43,360
benefit i got was during

00:29:40,320 --> 00:29:44,559
the the sprint demos

00:29:43,360 --> 00:29:46,559
we were working on some back end

00:29:44,559 --> 00:29:50,080
services and things were fairly opaque

00:29:46,559 --> 00:29:50,399
to to the end users um but i was able to

00:29:50,080 --> 00:29:51,840
say

00:29:50,399 --> 00:29:54,159
okay you had a question about how this

00:29:51,840 --> 00:29:55,760
was working why this happened

00:29:54,159 --> 00:29:58,080
i can now show you here's a jager

00:29:55,760 --> 00:29:58,799
waterfall view where i can show you all

00:29:58,080 --> 00:30:00,480
of the things

00:29:58,799 --> 00:30:03,600
that this request did while it was

00:30:00,480 --> 00:30:04,720
processing um and here's how it ended up

00:30:03,600 --> 00:30:06,159
getting to that result

00:30:04,720 --> 00:30:08,000
um and not only the end users but also

00:30:06,159 --> 00:30:09,520
developers then we're like oh yeah that

00:30:08,000 --> 00:30:11,520
makes it a lot easier for us to talk

00:30:09,520 --> 00:30:13,760
about what this thing is doing

00:30:11,520 --> 00:30:14,880
um so then they they were much more

00:30:13,760 --> 00:30:17,520
willing to

00:30:14,880 --> 00:30:23,840
um to engage with adding their own spans

00:30:17,520 --> 00:30:23,840
and attributes in the appropriate places

00:30:27,679 --> 00:30:32,559
uh thank you anthony and we have um

00:30:31,039 --> 00:30:34,320
i think this is a question documentation

00:30:32,559 --> 00:30:36,000
on concurrency in

00:30:34,320 --> 00:30:37,840
open telemetry and exporters for

00:30:36,000 --> 00:30:40,080
database back-ends can someone speak to

00:30:37,840 --> 00:30:40,080
that

00:30:43,679 --> 00:30:50,000
tyler yeah um i i could take a stab

00:30:46,960 --> 00:30:52,240
um i think i think this is in the go

00:30:50,000 --> 00:30:53,919
space just based on some terminology um

00:30:52,240 --> 00:30:55,840
and some of the known issues that we

00:30:53,919 --> 00:30:58,720
have there um in the github

00:30:55,840 --> 00:31:00,880
org yeah so one of our things is uh

00:30:58,720 --> 00:31:02,480
obviously in go it's a very concurrent

00:31:00,880 --> 00:31:04,399
language and in a lot of other languages

00:31:02,480 --> 00:31:05,840
like um concurrency patterns are

00:31:04,399 --> 00:31:07,919
really important for performance let

00:31:05,840 --> 00:31:10,640
alone um uh just

00:31:07,919 --> 00:31:12,399
overall uh programmability and support

00:31:10,640 --> 00:31:13,279
across like other applications i think

00:31:12,399 --> 00:31:14,799
that

00:31:13,279 --> 00:31:17,200
uh we we've definitely tried to bake

00:31:14,799 --> 00:31:19,039
that sort of things in api but um maybe

00:31:17,200 --> 00:31:20,799
we could also try to make that a little

00:31:19,039 --> 00:31:21,279
clearer from the end user's perspective

00:31:20,799 --> 00:31:23,919
and then

00:31:21,279 --> 00:31:25,440
um when it comes to database back-ends

00:31:23,919 --> 00:31:26,960
in go there's a very long-standing issue

00:31:25,440 --> 00:31:29,120
we're trying to provide

00:31:26,960 --> 00:31:30,640
you know a very good support uh for

00:31:29,120 --> 00:31:32,720
databases this is gonna be a really

00:31:30,640 --> 00:31:33,360
important part of the the long-standing

00:31:32,720 --> 00:31:35,519
um

00:31:33,360 --> 00:31:36,559
you know application interactions so we

00:31:35,519 --> 00:31:38,640
want to make sure that open telemetry

00:31:36,559 --> 00:31:41,600
has a really good story there

00:31:38,640 --> 00:31:42,320
so yeah raj that's a great request

00:31:41,600 --> 00:31:43,840
hopefully

00:31:42,320 --> 00:31:45,440
a year's time from now we're going to

00:31:43,840 --> 00:31:47,840
have a great story for you on both of

00:31:45,440 --> 00:31:47,840
those things

00:31:51,600 --> 00:31:55,760
and i i have a question i don't write it

00:31:53,919 --> 00:31:56,320
down but what advice would you give

00:31:55,760 --> 00:32:00,080
toward

00:31:56,320 --> 00:32:03,679
for either open source platforms or

00:32:00,080 --> 00:32:07,360
vendor platforms for for implementing

00:32:03,679 --> 00:32:07,360
native otp ingest

00:32:07,760 --> 00:32:11,039
if you want to start supporting

00:32:09,200 --> 00:32:13,840
supporting open telemetry

00:32:11,039 --> 00:32:15,120
for for users more easily like how how

00:32:13,840 --> 00:32:18,799
can

00:32:15,120 --> 00:32:21,200
um on the on the product side like how

00:32:18,799 --> 00:32:22,080
can you prioritize like otlp is a good

00:32:21,200 --> 00:32:23,919
idea

00:32:22,080 --> 00:32:25,760
um we want to support that natively and

00:32:23,919 --> 00:32:28,240
then what advice would you give

00:32:25,760 --> 00:32:29,840
as well for um actually sitting down and

00:32:28,240 --> 00:32:32,640
implementing it what what what should

00:32:29,840 --> 00:32:32,640
people expect

00:32:32,880 --> 00:32:36,559
that on the tracing side i would say

00:32:35,760 --> 00:32:40,159
it's

00:32:36,559 --> 00:32:43,519
relatively straightforward because the

00:32:40,159 --> 00:32:46,880
the mental model of the traces or spans

00:32:43,519 --> 00:32:49,120
in otlp is

00:32:46,880 --> 00:32:50,640
quite similar to what other protocols

00:32:49,120 --> 00:32:54,399
are using jager or

00:32:50,640 --> 00:32:58,480
consensus there is no mismatch

00:32:54,399 --> 00:33:02,000
or surprising new semantics or concepts

00:32:58,480 --> 00:33:04,880
uh or very little of anything that is

00:33:02,000 --> 00:33:05,760
completely new uh in oklahoma's portion

00:33:04,880 --> 00:33:08,399
of it

00:33:05,760 --> 00:33:10,320
uh if you're if you're especially if

00:33:08,399 --> 00:33:11,120
you're familiar with a particular

00:33:10,320 --> 00:33:13,679
protocol

00:33:11,120 --> 00:33:14,320
you can have a look at the translations

00:33:13,679 --> 00:33:16,799
codes

00:33:14,320 --> 00:33:17,440
in the in the optical energy collector

00:33:16,799 --> 00:33:19,919
which

00:33:17,440 --> 00:33:20,880
will show you precisely how for example

00:33:19,919 --> 00:33:24,240
jaeger

00:33:20,880 --> 00:33:27,600
concepts map2 or uh

00:33:24,240 --> 00:33:30,640
otp concepts from traces for metrics

00:33:27,600 --> 00:33:32,960
it's a bit more complicated uh if you

00:33:30,640 --> 00:33:34,080
if you were in the presentation that

00:33:32,960 --> 00:33:38,159
josh gave

00:33:34,080 --> 00:33:38,159
earlier there is going to be

00:33:38,799 --> 00:33:43,360
more complications particularly coming

00:33:40,799 --> 00:33:47,120
from the fact that there is

00:33:43,360 --> 00:33:50,320
more new types of metrics available

00:33:47,120 --> 00:33:53,279
in open telemetry and and

00:33:50,320 --> 00:33:54,480
correspondingly in rtl key which have

00:33:53,279 --> 00:33:57,600
different semantics

00:33:54,480 --> 00:34:00,960
so that may require

00:33:57,600 --> 00:34:03,679
your back end to to

00:34:00,960 --> 00:34:04,480
be expanded right to support those those

00:34:03,679 --> 00:34:07,519
types

00:34:04,480 --> 00:34:09,919
those types of metrics uh i think we

00:34:07,519 --> 00:34:13,040
will have more clarity on that when

00:34:09,919 --> 00:34:14,320
the specification on the metrics is

00:34:13,040 --> 00:34:18,480
finalized

00:34:14,320 --> 00:34:20,560
and i think the matrix it will have

00:34:18,480 --> 00:34:21,919
uh you have also probably the

00:34:20,560 --> 00:34:23,679
recommendations

00:34:21,919 --> 00:34:25,040
and definitely there will be clear

00:34:23,679 --> 00:34:26,399
semantic definitions in the

00:34:25,040 --> 00:34:28,960
specification what the

00:34:26,399 --> 00:34:30,720
what the particular metric types uh are

00:34:28,960 --> 00:34:32,839
intended to reflect and that will drive

00:34:30,720 --> 00:34:35,679
your implementation in the metric

00:34:32,839 --> 00:34:38,399
portion

00:34:35,679 --> 00:34:39,760
my two cents here by the way if somebody

00:34:38,399 --> 00:34:42,800
would start

00:34:39,760 --> 00:34:45,839
a completely new open source backend

00:34:42,800 --> 00:34:49,040
for for all these three pilers that we

00:34:45,839 --> 00:34:52,079
we produce matrix traces logs

00:34:49,040 --> 00:34:53,200
i would encourage them to start thinking

00:34:52,079 --> 00:34:55,760
from the

00:34:53,200 --> 00:34:57,440
what we call resource perspective so

00:34:55,760 --> 00:35:00,240
model from the resource

00:34:57,440 --> 00:35:01,280
and then from there they can use their

00:35:00,240 --> 00:35:04,240
imagination

00:35:01,280 --> 00:35:05,200
to to build the ux experience but that

00:35:04,240 --> 00:35:08,960
would be

00:35:05,200 --> 00:35:11,359
just a free advice for

00:35:08,960 --> 00:35:12,079
for somebody who who wants to to build

00:35:11,359 --> 00:35:15,119
the new

00:35:12,079 --> 00:35:17,359
open source backend about this i think

00:35:15,119 --> 00:35:19,440
it's it's pretty cool concept that

00:35:17,359 --> 00:35:20,400
you you have a notion of a resource and

00:35:19,440 --> 00:35:22,800
you can see

00:35:20,400 --> 00:35:24,400
metrics traces and logs that belong to

00:35:22,800 --> 00:35:31,280
the same entity

00:35:24,400 --> 00:35:32,880
in in in one place

00:35:31,280 --> 00:35:35,119
that's a really good answer thanks for

00:35:32,880 --> 00:35:36,640
thanks both of you for um

00:35:35,119 --> 00:35:38,560
giving such a detailed answer and i

00:35:36,640 --> 00:35:40,240
think um as

00:35:38,560 --> 00:35:42,880
both on the vendor side and on the open

00:35:40,240 --> 00:35:44,640
source side um we're going to see more

00:35:42,880 --> 00:35:46,720
people just

00:35:44,640 --> 00:35:48,400
you know jumping at the opportunity to

00:35:46,720 --> 00:35:51,760
support open telemetry

00:35:48,400 --> 00:35:54,960
natively because um it's

00:35:51,760 --> 00:35:57,040
it's been so rewarding

00:35:54,960 --> 00:35:58,000
just seeing learning more about this

00:35:57,040 --> 00:36:01,280
community and seeing

00:35:58,000 --> 00:36:03,200
how um all these people who

00:36:01,280 --> 00:36:04,720
should be competitors you know working

00:36:03,200 --> 00:36:06,079
together towards this common goal of

00:36:04,720 --> 00:36:09,839
just making

00:36:06,079 --> 00:36:13,119
our our our data more accessible

00:36:09,839 --> 00:36:16,400
and easier to manage so

00:36:13,119 --> 00:36:18,960
um i'm going to wrap it up there

00:36:16,400 --> 00:36:19,760
um and i think i can hand it off to liz

00:36:18,960 --> 00:36:22,240
and ted for

00:36:19,760 --> 00:36:25,520
closing remarks uh thanks to all our

00:36:22,240 --> 00:36:27,839
panelists and maintainers who hopped on

00:36:25,520 --> 00:36:27,839
and

00:36:28,560 --> 00:36:32,800
i'll hand it off to liz hey thank you

00:36:31,359 --> 00:36:34,400
for moderating both panels this

00:36:32,800 --> 00:36:36,720
afternoon shelby you did a really great

00:36:34,400 --> 00:36:36,720

YouTube URL: https://www.youtube.com/watch?v=G9aFA3NcwTc


