Title: Sponsored Talk: Planning for Observability
Publication date: 2020-11-24
Playlist: OpenTelemetry Community Day North America 2020
Description: 
	Don’t miss out! Join us at our upcoming event: KubeCon + CloudNativeCon Europe 2021 Virtual from May 4–7, 2021. Learn more at https://kubecon.io. The conference features presentations from developers and end users of Kubernetes, Prometheus, Envoy, and all of the other CNCF-hosted projects. 

Sponsored Talk: Planning for Observability

Open Telemetry opens up a path for the fully open-sourced instrumentation of critical applications, but whether your strategy involves self-hosted open source or vendor tools, many of the challenges remain the same. In this short talk, Nica will cover the key strategies for ensuring observability. We’ll cover:
- What is observability anyway?
- Towards observable architecture
- Structured logging
- Usability of monitoring data
- Growing your team’s observability skills."
Captions: 
	00:00:00,080 --> 00:00:04,720
hi thank you so much for joining us for

00:00:02,639 --> 00:00:08,559
open telemetry community day

00:00:04,720 --> 00:00:09,920
in 2020 this is my talk planning for

00:00:08,559 --> 00:00:11,679
observability where we're going to talk

00:00:09,920 --> 00:00:14,799
about some of the strategies

00:00:11,679 --> 00:00:16,720
um key decision points and sort of

00:00:14,799 --> 00:00:18,960
pre-planning that can help you create a

00:00:16,720 --> 00:00:20,560
more observable application

00:00:18,960 --> 00:00:21,920
we've only got a 20 minutes for this

00:00:20,560 --> 00:00:22,720
talk so i'm just going to go ahead and

00:00:21,920 --> 00:00:26,160
jump

00:00:22,720 --> 00:00:29,039
right in pretty quick here

00:00:26,160 --> 00:00:29,840
so my name is nochnika nika is fine if

00:00:29,039 --> 00:00:30,640
you're having a little trouble

00:00:29,840 --> 00:00:33,200
pronouncing

00:00:30,640 --> 00:00:34,800
nica i am a developer advocate for new

00:00:33,200 --> 00:00:37,440
relic i specialize

00:00:34,800 --> 00:00:39,120
in cloud architectures especially

00:00:37,440 --> 00:00:42,160
serverless architectures

00:00:39,120 --> 00:00:44,719
uh and other kinds of cloud specific

00:00:42,160 --> 00:00:46,239
stacks um i do do other observability

00:00:44,719 --> 00:00:48,480
work i've been working with new relic

00:00:46,239 --> 00:00:50,719
and observability for a number of years

00:00:48,480 --> 00:00:52,160
i tweet at serverlessmom uh so there

00:00:50,719 --> 00:00:54,160
then my serverless

00:00:52,160 --> 00:00:56,160
serverless pedigree does show up i'm

00:00:54,160 --> 00:00:59,840
also on twitch where i mainly twitch

00:00:56,160 --> 00:01:02,079
a a stream cloud engineering stuff

00:00:59,840 --> 00:01:03,600
building applications occasionally

00:01:02,079 --> 00:01:04,640
making other fun stuff coding drum

00:01:03,600 --> 00:01:07,280
machines and other

00:01:04,640 --> 00:01:08,320
cool goofiness but uh yeah that's uh

00:01:07,280 --> 00:01:10,400
that's

00:01:08,320 --> 00:01:13,040
a very dev centric stream if you want to

00:01:10,400 --> 00:01:14,880
come check it out

00:01:13,040 --> 00:01:16,799
so since we only do have 20 minutes i

00:01:14,880 --> 00:01:17,200
will dive right into it and the first

00:01:16,799 --> 00:01:18,799
one

00:01:17,200 --> 00:01:20,799
is this thing that i talk about quite

00:01:18,799 --> 00:01:24,400
often which is

00:01:20,799 --> 00:01:25,439
uh what is observability exactly so

00:01:24,400 --> 00:01:27,439
on the west coast of the us

00:01:25,439 --> 00:01:28,720
observability is a really big buzzword a

00:01:27,439 --> 00:01:30,799
lot of people feel like it's just some

00:01:28,720 --> 00:01:32,640
marketing term it just means you know

00:01:30,799 --> 00:01:34,240
um you know it's just like instead of

00:01:32,640 --> 00:01:35,840
calling it a task you call it an action

00:01:34,240 --> 00:01:36,560
item and that just sort of sounds cooler

00:01:35,840 --> 00:01:38,000
than task

00:01:36,560 --> 00:01:39,680
you know maybe observability just sounds

00:01:38,000 --> 00:01:41,840
cooler than logging or maybe

00:01:39,680 --> 00:01:44,159
observability sounds cooler than metrics

00:01:41,840 --> 00:01:45,280
and you know really observability is a

00:01:44,159 --> 00:01:48,240
collective term

00:01:45,280 --> 00:01:49,840
that that means a number of things and

00:01:48,240 --> 00:01:52,799
it really covers

00:01:49,840 --> 00:01:53,439
not a particular technology but sort of

00:01:52,799 --> 00:01:56,880
a design

00:01:53,439 --> 00:02:00,159
goal observability i see it as the first

00:01:56,880 --> 00:02:02,399
half of mttr mean time to resolution

00:02:00,159 --> 00:02:04,079
um observability is how long it takes

00:02:02,399 --> 00:02:06,000
for you to understand a problem and know

00:02:04,079 --> 00:02:08,560
what you have to do next

00:02:06,000 --> 00:02:10,879
and and that really uh you know that has

00:02:08,560 --> 00:02:12,400
some some odd corollaries like you can't

00:02:10,879 --> 00:02:13,920
have problems maybe

00:02:12,400 --> 00:02:15,040
where you know that you solve very

00:02:13,920 --> 00:02:16,560
readily where you don't have great

00:02:15,040 --> 00:02:18,160
observability like if you're

00:02:16,560 --> 00:02:19,520
just restarting a server because you see

00:02:18,160 --> 00:02:20,720
you're running out of memory and you

00:02:19,520 --> 00:02:22,400
have to do that every few weeks and you

00:02:20,720 --> 00:02:23,840
don't really know why i mean

00:02:22,400 --> 00:02:25,440
that technically right that's a problem

00:02:23,840 --> 00:02:28,400
with very poor observability but

00:02:25,440 --> 00:02:29,599
relatively easy to solve but obviously

00:02:28,400 --> 00:02:30,720
that's not great that's not how we want

00:02:29,599 --> 00:02:34,239
to live our lives

00:02:30,720 --> 00:02:35,840
we want to look at a dashboard a log or

00:02:34,239 --> 00:02:36,959
portable problem we want to be able to

00:02:35,840 --> 00:02:39,599
very quickly go ah

00:02:36,959 --> 00:02:40,160
i know what i need to do next to solve

00:02:39,599 --> 00:02:42,720
that

00:02:40,160 --> 00:02:44,239
so um when that time is very low we have

00:02:42,720 --> 00:02:45,440
high observability when that time when

00:02:44,239 --> 00:02:46,720
it's taking us a long time to get to

00:02:45,440 --> 00:02:48,080
understanding we have particularly low

00:02:46,720 --> 00:02:51,760
observability

00:02:48,080 --> 00:02:53,519
um and this is a quote from a serverless

00:02:51,760 --> 00:02:54,879
developer this is patrick zigger

00:02:53,519 --> 00:02:56,239
um it really stuck with me it's a bit of

00:02:54,879 --> 00:02:56,800
a worthy slide but i'm going to read it

00:02:56,239 --> 00:02:58,879
out

00:02:56,800 --> 00:03:00,720
right he said i can scale serverless as

00:02:58,879 --> 00:03:02,239
big as you like a random 500 error that

00:03:00,720 --> 00:03:03,120
i can't diagnose that's what gives me

00:03:02,239 --> 00:03:06,400
highs

00:03:03,120 --> 00:03:09,200
and this is sort of this sort of

00:03:06,400 --> 00:03:09,840
speaks to a theme that i see as i talk

00:03:09,200 --> 00:03:12,959
to people

00:03:09,840 --> 00:03:15,680
uh doing uh

00:03:12,959 --> 00:03:16,959
sort of more advanced more complex

00:03:15,680 --> 00:03:19,360
stacks

00:03:16,959 --> 00:03:20,239
often with very very high availability

00:03:19,360 --> 00:03:23,040
is

00:03:20,239 --> 00:03:24,720
that before they face problems with the

00:03:23,040 --> 00:03:25,200
complexity of the stack and way before

00:03:24,720 --> 00:03:28,879
they face

00:03:25,200 --> 00:03:30,400
big cost issues observability

00:03:28,879 --> 00:03:32,560
call it you know sometimes specifically

00:03:30,400 --> 00:03:35,440
you know the debugging of new stacks

00:03:32,560 --> 00:03:37,440
it comes up as a much bigger problem way

00:03:35,440 --> 00:03:39,599
earlier in the process

00:03:37,440 --> 00:03:40,640
um and you know that's kind of the

00:03:39,599 --> 00:03:42,239
nature of the beast maybe

00:03:40,640 --> 00:03:44,159
because some of the scaling problems

00:03:42,239 --> 00:03:45,440
that we dealt with previously or some of

00:03:44,159 --> 00:03:46,879
the config issues that we would deal

00:03:45,440 --> 00:03:49,440
with previously are now

00:03:46,879 --> 00:03:50,879
much more automated the big question

00:03:49,440 --> 00:03:52,239
becomes great we were able to stand up

00:03:50,879 --> 00:03:54,480
these big complex

00:03:52,239 --> 00:03:55,280
applications really quickly this can be

00:03:54,480 --> 00:03:59,920
hard to get

00:03:55,280 --> 00:04:00,640
insight into what's really going on um

00:03:59,920 --> 00:04:03,439
so

00:04:00,640 --> 00:04:04,799
one of the things about defining this

00:04:03,439 --> 00:04:06,799
problem this way

00:04:04,799 --> 00:04:08,640
is that other stuff comes up as having

00:04:06,799 --> 00:04:10,720
an effect on observability

00:04:08,640 --> 00:04:12,640
um right the speed with which a

00:04:10,720 --> 00:04:14,319
dashboard can be read has a direct

00:04:12,640 --> 00:04:16,560
effect on observability

00:04:14,319 --> 00:04:18,400
and that is a really key observation

00:04:16,560 --> 00:04:19,440
this is right up nice prometheus grafana

00:04:18,400 --> 00:04:21,759
dashboard

00:04:19,440 --> 00:04:23,440
um i believe this is actually using open

00:04:21,759 --> 00:04:24,960
telemetry uh

00:04:23,440 --> 00:04:26,880
instrumentation to generate this one

00:04:24,960 --> 00:04:29,520
though like when i grab the screenshot

00:04:26,880 --> 00:04:31,280
but um you know take a look at it even

00:04:29,520 --> 00:04:32,240
in this tiny version i think that you

00:04:31,280 --> 00:04:34,160
can see

00:04:32,240 --> 00:04:35,840
right that a pattern is readily

00:04:34,160 --> 00:04:38,639
observable and that's really

00:04:35,840 --> 00:04:40,160
a ui issue that's a graphical issue it's

00:04:38,639 --> 00:04:42,160
it's not about what data is

00:04:40,160 --> 00:04:43,600
underlying that dashboard obviously we

00:04:42,160 --> 00:04:45,199
need the data to be reliable

00:04:43,600 --> 00:04:46,720
but the production of more data isn't

00:04:45,199 --> 00:04:49,919
necessarily helpful

00:04:46,720 --> 00:04:52,080
so um that's really key because

00:04:49,919 --> 00:04:53,759
something that i that i uh you know hear

00:04:52,080 --> 00:04:55,280
talked about a lot is people say well

00:04:53,759 --> 00:04:56,960
i want to add a variability or i want to

00:04:55,280 --> 00:04:58,639
add reliability and ease of

00:04:56,960 --> 00:04:59,759
understanding however that whatever term

00:04:58,639 --> 00:05:03,120
might be used

00:04:59,759 --> 00:05:03,440
um and you know i ask questions like

00:05:03,120 --> 00:05:05,120
well

00:05:03,440 --> 00:05:06,880
if you added a bunch of logging let's

00:05:05,120 --> 00:05:08,479
say you went in every other line in your

00:05:06,880 --> 00:05:10,240
code every single line in your code

00:05:08,479 --> 00:05:12,320
you added a log line that logs of

00:05:10,240 --> 00:05:14,479
information about what's going on

00:05:12,320 --> 00:05:16,400
and while that would increase the amount

00:05:14,479 --> 00:05:18,400
of information that we would have

00:05:16,400 --> 00:05:20,000
it would not increase variability in

00:05:18,400 --> 00:05:21,600
fact it would hurt observability

00:05:20,000 --> 00:05:23,840
because we go to look at the logs we'd

00:05:21,600 --> 00:05:25,520
have all this junk and all this noise

00:05:23,840 --> 00:05:26,720
that would be hiding whatever useful

00:05:25,520 --> 00:05:28,000
information might be in there i mean

00:05:26,720 --> 00:05:28,720
maybe nothing useful is in there right

00:05:28,000 --> 00:05:30,560
now

00:05:28,720 --> 00:05:32,320
but even so we would still have worse

00:05:30,560 --> 00:05:35,039
observability than when we started

00:05:32,320 --> 00:05:36,320
because we would need to spend so much

00:05:35,039 --> 00:05:38,240
time digging through every time we

00:05:36,320 --> 00:05:40,639
wanted to get some information

00:05:38,240 --> 00:05:42,000
so let's think a little bit let's you

00:05:40,639 --> 00:05:43,919
know we have this example from patrick

00:05:42,000 --> 00:05:45,199
steger of a random 500 error that we

00:05:43,919 --> 00:05:47,120
can't diagnose

00:05:45,199 --> 00:05:50,000
let's think a little bit how we might

00:05:47,120 --> 00:05:51,680
chop up that 500 error

00:05:50,000 --> 00:05:53,120
and the pieces that we might need and

00:05:51,680 --> 00:05:54,080
this can be very very helpful for

00:05:53,120 --> 00:05:56,240
deciding

00:05:54,080 --> 00:05:57,600
what we need to add instrumentation for

00:05:56,240 --> 00:06:00,319
what we need to

00:05:57,600 --> 00:06:01,919
add measurement for to be able to figure

00:06:00,319 --> 00:06:04,240
out what's going on

00:06:01,919 --> 00:06:05,600
so these ones are all we're not using

00:06:04,240 --> 00:06:07,440
any of the cool stuff we're not using

00:06:05,600 --> 00:06:10,080
distributed tracing we're not using logs

00:06:07,440 --> 00:06:13,360
in context or some of the other cool

00:06:10,080 --> 00:06:14,560
open telemetry concepts um

00:06:13,360 --> 00:06:16,800
this is just some very simple

00:06:14,560 --> 00:06:17,840
information we want to see error rates

00:06:16,800 --> 00:06:20,080
on each component

00:06:17,840 --> 00:06:21,280
right because we want to know hey is the

00:06:20,080 --> 00:06:22,160
is the gateway throwing a bunch of

00:06:21,280 --> 00:06:23,520
errors is the

00:06:22,160 --> 00:06:25,199
is the web application layer throwing a

00:06:23,520 --> 00:06:26,800
bunch of errors are we seeing them

00:06:25,199 --> 00:06:29,360
in the database where are we seeing some

00:06:26,800 --> 00:06:30,800
errors even being reported

00:06:29,360 --> 00:06:32,560
we'd like to see throughput i say on the

00:06:30,800 --> 00:06:33,520
back end here i mean sort of on the on

00:06:32,560 --> 00:06:35,759
the

00:06:33,520 --> 00:06:37,680
rear most component right the component

00:06:35,759 --> 00:06:38,560
that's the the furthest to the right on

00:06:37,680 --> 00:06:42,080
our little little

00:06:38,560 --> 00:06:44,639
graph um so

00:06:42,080 --> 00:06:45,360
if we see hey we're having some problems

00:06:44,639 --> 00:06:47,120
and we see

00:06:45,360 --> 00:06:48,560
especially that the throughput on like

00:06:47,120 --> 00:06:49,440
the database has just dropped off a

00:06:48,560 --> 00:06:51,599
cliff

00:06:49,440 --> 00:06:53,199
then we start to see okay well i have a

00:06:51,599 --> 00:06:54,639
pretty good theory of

00:06:53,199 --> 00:06:56,720
at least what the nature of the problem

00:06:54,639 --> 00:06:58,639
is right and looking into like

00:06:56,720 --> 00:06:59,840
the configuration of the database server

00:06:58,639 --> 00:07:00,479
is probably not gonna be a waste of our

00:06:59,840 --> 00:07:02,160
time

00:07:00,479 --> 00:07:04,639
because the source the problem is almost

00:07:02,160 --> 00:07:06,080
certainly right upstream from there

00:07:04,639 --> 00:07:07,199
then it'd be really nice to look at

00:07:06,080 --> 00:07:08,560
changes to our permissions and

00:07:07,199 --> 00:07:09,360
configuration and we're going to talk

00:07:08,560 --> 00:07:10,880
about

00:07:09,360 --> 00:07:12,240
infrastructures code and some of the

00:07:10,880 --> 00:07:13,360
other steps that can really improve

00:07:12,240 --> 00:07:16,639
observability

00:07:13,360 --> 00:07:18,560
here because those changes

00:07:16,639 --> 00:07:20,160
really can you know often for a problem

00:07:18,560 --> 00:07:21,840
again you know my

00:07:20,160 --> 00:07:23,440
my sort of comfort zone is often in

00:07:21,840 --> 00:07:25,199
these cloud architectures so

00:07:23,440 --> 00:07:26,960
this is a pretty frequent problem right

00:07:25,199 --> 00:07:28,080
the configuration to what's allowed to

00:07:26,960 --> 00:07:30,960
talk to what

00:07:28,080 --> 00:07:32,000
um obviously we need those configs to be

00:07:30,960 --> 00:07:33,520
available but

00:07:32,000 --> 00:07:35,680
when they get messed up right then we

00:07:33,520 --> 00:07:38,080
have our stack suddenly failing

00:07:35,680 --> 00:07:38,960
the last is deployment history right and

00:07:38,080 --> 00:07:41,199
and

00:07:38,960 --> 00:07:42,720
totally before we have any kind of deep

00:07:41,199 --> 00:07:44,560
observation tools

00:07:42,720 --> 00:07:46,720
these are all things where if we have

00:07:44,560 --> 00:07:48,720
them our observability is a lot higher

00:07:46,720 --> 00:07:51,120
for that random 500 error from our

00:07:48,720 --> 00:07:51,120
endpoint

00:07:52,879 --> 00:07:55,840
so let's talk about picking the right

00:07:54,240 --> 00:07:57,199
tools now of course you know it's open

00:07:55,840 --> 00:07:58,160
telemetry community today we're not

00:07:57,199 --> 00:08:01,199
going to be talking about

00:07:58,160 --> 00:08:02,560
picking the right measurement tools but

00:08:01,199 --> 00:08:04,879
the other tools around that that can

00:08:02,560 --> 00:08:07,440
help us get information

00:08:04,879 --> 00:08:10,879
or can be just defined strategically or

00:08:07,440 --> 00:08:10,879
defined tactically for our team

00:08:11,120 --> 00:08:14,879
so infrastructure's code i mentioned it

00:08:12,800 --> 00:08:15,840
earlier that we want to see a history

00:08:14,879 --> 00:08:17,360
preferably

00:08:15,840 --> 00:08:19,039
of what changes have been made to our

00:08:17,360 --> 00:08:20,240
configuration and

00:08:19,039 --> 00:08:21,520
one of the questions that we talk about

00:08:20,240 --> 00:08:23,039
the most when we start talking about

00:08:21,520 --> 00:08:26,240
infrastructure's code is

00:08:23,039 --> 00:08:28,319
which tool should we use so um

00:08:26,240 --> 00:08:29,360
you know i'll i'll see questions like

00:08:28,319 --> 00:08:31,919
well you know can we use

00:08:29,360 --> 00:08:33,200
terraform right can we use staggering oh

00:08:31,919 --> 00:08:34,640
it's nice to use terraform because

00:08:33,200 --> 00:08:36,479
multi-cloud maybe that's the better

00:08:34,640 --> 00:08:37,760
solution right should we use serverless

00:08:36,479 --> 00:08:39,279
framework to deploy our serverless

00:08:37,760 --> 00:08:41,360
environment should we use some kind of

00:08:39,279 --> 00:08:44,000
vendor-specific tool like the cloud

00:08:41,360 --> 00:08:47,360
deployment kit

00:08:44,000 --> 00:08:49,360
from aws and you know the real thing

00:08:47,360 --> 00:08:51,440
that i see as a theme is not so

00:08:49,360 --> 00:08:52,399
i don't see a lot of people regretting

00:08:51,440 --> 00:08:54,880
that they picked a

00:08:52,399 --> 00:08:56,720
particular infrastructure as code tool

00:08:54,880 --> 00:08:58,320
for deploying changes the infrastructure

00:08:56,720 --> 00:08:59,760
i see people glad that they did it as

00:08:58,320 --> 00:09:01,920
opposed to not doing it

00:08:59,760 --> 00:09:03,600
so if you're storing a bunch of config

00:09:01,920 --> 00:09:05,360
file in a readme somewhere that is sort

00:09:03,600 --> 00:09:06,800
of getting bounced around your team

00:09:05,360 --> 00:09:08,720
and you're having to write in that

00:09:06,800 --> 00:09:10,399
readme file maybe you're going back and

00:09:08,720 --> 00:09:10,800
bolding stuff to be like hey be sure

00:09:10,399 --> 00:09:12,320
that you

00:09:10,800 --> 00:09:14,080
make this setting when you set up a new

00:09:12,320 --> 00:09:15,440
instance um

00:09:14,080 --> 00:09:16,880
right that means we're sort of drifted

00:09:15,440 --> 00:09:18,560
away from infrastructure code and we're

00:09:16,880 --> 00:09:20,080
probably gonna face problems when

00:09:18,560 --> 00:09:21,440
you know you're not available or when

00:09:20,080 --> 00:09:22,959
there's team changes and you see

00:09:21,440 --> 00:09:24,800
problems with this infrastructure

00:09:22,959 --> 00:09:27,200
so infrastructure's code is a key key

00:09:24,800 --> 00:09:29,519
piece of observability

00:09:27,200 --> 00:09:30,720
because it lets us go and get clues

00:09:29,519 --> 00:09:32,240
about what's actually going on and

00:09:30,720 --> 00:09:34,839
what's changed recently

00:09:32,240 --> 00:09:36,560
and try to make those correlations in

00:09:34,839 --> 00:09:38,720
time

00:09:36,560 --> 00:09:39,920
so what we get from infrastructure's

00:09:38,720 --> 00:09:42,959
code

00:09:39,920 --> 00:09:45,279
is we get a commit history right we get

00:09:42,959 --> 00:09:47,600
clear communication of the team

00:09:45,279 --> 00:09:48,399
of you know hey what's changed and by

00:09:47,600 --> 00:09:50,080
whom

00:09:48,399 --> 00:09:51,519
and this is this isn't about letting

00:09:50,080 --> 00:09:53,040
blame at all this is about

00:09:51,519 --> 00:09:54,560
knowing who to talk to or knowing what

00:09:53,040 --> 00:09:55,920
the possible motivations for changes

00:09:54,560 --> 00:09:57,360
might have been

00:09:55,920 --> 00:09:58,800
and then the last one is well-documented

00:09:57,360 --> 00:10:00,000
requirements and you'll be surprised how

00:09:58,800 --> 00:10:02,560
often this comes up

00:10:00,000 --> 00:10:04,399
where by documenting for example that

00:10:02,560 --> 00:10:05,279
the memory needs of certain instances

00:10:04,399 --> 00:10:07,120
has changed

00:10:05,279 --> 00:10:08,480
we can document that something else may

00:10:07,120 --> 00:10:09,519
have changed or something else about our

00:10:08,480 --> 00:10:12,720
requirements

00:10:09,519 --> 00:10:14,320
rather than having to go in ad hoc and

00:10:12,720 --> 00:10:15,600
bump up memory requirements to get stuff

00:10:14,320 --> 00:10:17,360
to actually perform

00:10:15,600 --> 00:10:19,200
we actually get that documented because

00:10:17,360 --> 00:10:21,920
we have all of our infrastructure config

00:10:19,200 --> 00:10:21,920
in one place

00:10:22,720 --> 00:10:25,920
so uh let's talk about structured

00:10:24,959 --> 00:10:28,399
logging

00:10:25,920 --> 00:10:30,079
the the diagram up here is some my own

00:10:28,399 --> 00:10:31,360
my own attempt to render some penrose

00:10:30,079 --> 00:10:32,959
tiles

00:10:31,360 --> 00:10:34,800
and i've made actually a couple mistakes

00:10:32,959 --> 00:10:36,399
but i have it in here because it's one

00:10:34,800 --> 00:10:39,120
of the most beautiful examples of

00:10:36,399 --> 00:10:40,399
structure with variation since pemero

00:10:39,120 --> 00:10:42,320
styles sort of appear to be

00:10:40,399 --> 00:10:44,959
periodic but have slight changes that

00:10:42,320 --> 00:10:44,959
don't repeat

00:10:45,360 --> 00:10:49,839
uh so you know it has that structure

00:10:48,399 --> 00:10:51,279
and i like that a lot and also roger

00:10:49,839 --> 00:10:52,560
penrose just won the nobel prize for

00:10:51,279 --> 00:10:54,720
physics um

00:10:52,560 --> 00:10:56,000
just a couple weeks ago so i was

00:10:54,720 --> 00:10:59,440
throwing a little plug

00:10:56,000 --> 00:11:01,120
um but so totally outside again this is

00:10:59,440 --> 00:11:02,640
not a tool-specific recommendation i'm

00:11:01,120 --> 00:11:04,000
not saying use this one

00:11:02,640 --> 00:11:05,360
logging library of course that's going

00:11:04,000 --> 00:11:06,399
to vary by what language you're in for

00:11:05,360 --> 00:11:08,399
starters

00:11:06,399 --> 00:11:09,519
but just the concept of structured

00:11:08,399 --> 00:11:12,320
logging is such

00:11:09,519 --> 00:11:13,839
such a key piece of getting real

00:11:12,320 --> 00:11:15,519
information about what's actually going

00:11:13,839 --> 00:11:18,240
on inside our stack

00:11:15,519 --> 00:11:18,240
so uh

00:11:18,959 --> 00:11:22,000
oh slides around order sorry about that

00:11:20,800 --> 00:11:23,279
so i think you know

00:11:22,000 --> 00:11:25,680
structured logging is something that you

00:11:23,279 --> 00:11:27,680
can just do completely on your own

00:11:25,680 --> 00:11:29,040
where you just say hey instead of just

00:11:27,680 --> 00:11:30,959
having a simple line of text i'm going

00:11:29,040 --> 00:11:33,279
to have an object here with a few

00:11:30,959 --> 00:11:34,800
key value pairs in it and maybe you add

00:11:33,279 --> 00:11:36,240
a key value pair as needed maybe you

00:11:34,800 --> 00:11:37,760
update the ones you already have

00:11:36,240 --> 00:11:39,279
it just makes it that much easier to

00:11:37,760 --> 00:11:40,959
parse through this history later

00:11:39,279 --> 00:11:42,160
and make your interactive search tools

00:11:40,959 --> 00:11:43,600
and maybe even make a nice visual

00:11:42,160 --> 00:11:45,040
dashboard based on what's being put in

00:11:43,600 --> 00:11:47,680
your logs

00:11:45,040 --> 00:11:48,079
so i also really want to mention that a

00:11:47,680 --> 00:11:51,760
key

00:11:48,079 --> 00:11:54,240
key piece open telemetry specific

00:11:51,760 --> 00:11:54,959
is an ability to contextualize your logs

00:11:54,240 --> 00:11:57,680
is so

00:11:54,959 --> 00:12:00,079
so great being able to contextualize

00:11:57,680 --> 00:12:02,880
logs with metrics with traces

00:12:00,079 --> 00:12:05,279
is a a key performance feature something

00:12:02,880 --> 00:12:06,800
we pursue at new relic as well

00:12:05,279 --> 00:12:08,399
because along with having some kind of

00:12:06,800 --> 00:12:11,279
structure to allow you to query

00:12:08,399 --> 00:12:12,160
in being able to connect a trace to a

00:12:11,279 --> 00:12:14,399
log

00:12:12,160 --> 00:12:16,079
is an absolute game changer for your

00:12:14,399 --> 00:12:18,240
ability to actually get some insight

00:12:16,079 --> 00:12:19,680
and that especially comes up you know

00:12:18,240 --> 00:12:20,959
obviously these problems are usually

00:12:19,680 --> 00:12:22,480
obvious when they happen as part of an

00:12:20,959 --> 00:12:23,279
incident and an outage and everybody's

00:12:22,480 --> 00:12:25,200
sort of

00:12:23,279 --> 00:12:27,040
flipping out and we're all you know it's

00:12:25,200 --> 00:12:28,800
the weekend we're trying to watch our

00:12:27,040 --> 00:12:30,000
our daughter's softball game and instead

00:12:28,800 --> 00:12:32,399
we have to uh

00:12:30,000 --> 00:12:34,000
you know do this and be you know super

00:12:32,399 --> 00:12:36,240
mom doing uh doing

00:12:34,000 --> 00:12:37,360
uh four tasks at once sure those those

00:12:36,240 --> 00:12:38,800
you know show up hey we want to be able

00:12:37,360 --> 00:12:41,440
to have insight better but

00:12:38,800 --> 00:12:43,040
logs in context is a really powerful way

00:12:41,440 --> 00:12:45,440
to start just engaging a little bit of

00:12:43,040 --> 00:12:47,440
that curiosity and start fixing things

00:12:45,440 --> 00:12:48,880
before we have a big crisis or just when

00:12:47,440 --> 00:12:50,480
everything's going fine

00:12:48,880 --> 00:12:53,839
we can start to see opportunities and

00:12:50,480 --> 00:12:53,839
the source of problems earlier

00:12:55,920 --> 00:13:01,839
okay fresc get up let's go on

00:12:59,279 --> 00:13:04,639
um so yeah sorry slides out order okay

00:13:01,839 --> 00:13:08,000
so let's talk about alerting um

00:13:04,639 --> 00:13:08,399
uh you know alerting um absolutely is a

00:13:08,000 --> 00:13:11,680
key

00:13:08,399 --> 00:13:15,600
piece of your observability structure so

00:13:11,680 --> 00:13:16,639
um i you know it is the first warning we

00:13:15,600 --> 00:13:18,079
have that something that's gone wrong

00:13:16,639 --> 00:13:19,519
and maybe you know we start looking into

00:13:18,079 --> 00:13:20,959
something not based on learning based on

00:13:19,519 --> 00:13:24,480
you know complaints of the customer or

00:13:20,959 --> 00:13:26,639
reports internally but very often the

00:13:24,480 --> 00:13:27,680
nature of alerts is a powerful way for

00:13:26,639 --> 00:13:29,360
us to

00:13:27,680 --> 00:13:30,959
have a first clue about what we're

00:13:29,360 --> 00:13:33,360
looking for when we go and dive into our

00:13:30,959 --> 00:13:35,519
logs or dashboards or what have you

00:13:33,360 --> 00:13:36,800
so one key point i want to mention is

00:13:35,519 --> 00:13:38,639
think about low and

00:13:36,800 --> 00:13:41,040
high alert threshold so one of the

00:13:38,639 --> 00:13:43,279
examples from my 500 error scenario was

00:13:41,040 --> 00:13:44,240
hey let's look at throughput on the

00:13:43,279 --> 00:13:47,440
database

00:13:44,240 --> 00:13:50,000
and so that's a really good use

00:13:47,440 --> 00:13:51,440
of that low thresholding to say hey we

00:13:50,000 --> 00:13:52,880
have a problem because we have no

00:13:51,440 --> 00:13:56,720
traffic through here

00:13:52,880 --> 00:13:58,560
and um my little quote around this

00:13:56,720 --> 00:14:00,399
is right ten a ten time growth and page

00:13:58,560 --> 00:14:01,199
view is a concern as as is zero time

00:14:00,399 --> 00:14:03,120
growth in

00:14:01,199 --> 00:14:05,040
page views right if we suddenly see that

00:14:03,120 --> 00:14:06,320
a section of our site or a particular

00:14:05,040 --> 00:14:08,480
set of api routes

00:14:06,320 --> 00:14:10,000
has stopped being used at all it's worth

00:14:08,480 --> 00:14:11,360
throwing an alert there now

00:14:10,000 --> 00:14:12,720
you know maybe that that's that's

00:14:11,360 --> 00:14:14,079
predictable for race reasons it's

00:14:12,720 --> 00:14:15,519
predictable because of low traffic

00:14:14,079 --> 00:14:17,199
and so it is important to check in and

00:14:15,519 --> 00:14:19,120
make sure your alerts make sense

00:14:17,199 --> 00:14:20,880
but especially because open inflammatory

00:14:19,120 --> 00:14:23,440
opens up the route to get a ton

00:14:20,880 --> 00:14:24,720
more metrics and a ton more stuff to

00:14:23,440 --> 00:14:26,560
alert off of

00:14:24,720 --> 00:14:29,040
um thinking about low thresholds is a

00:14:26,560 --> 00:14:30,560
really key piece i sort of recommend

00:14:29,040 --> 00:14:32,320
that if you have a metric and you're

00:14:30,560 --> 00:14:33,199
learning off of it you should think

00:14:32,320 --> 00:14:34,800
through

00:14:33,199 --> 00:14:36,399
whether or not you want to do a low

00:14:34,800 --> 00:14:40,079
alert threshold on there as well because

00:14:36,399 --> 00:14:41,839
there's very often a reason to do so

00:14:40,079 --> 00:14:43,279
so let's talk about creating

00:14:41,839 --> 00:14:46,320
observability with

00:14:43,279 --> 00:14:49,279
the the abilities of your team so

00:14:46,320 --> 00:14:50,800
um this is an old joke but it's it's

00:14:49,279 --> 00:14:52,399
still applicable right you know we need

00:14:50,800 --> 00:14:53,680
a devops ninja

00:14:52,399 --> 00:14:54,959
uh you know they need five years of

00:14:53,680 --> 00:14:56,480
service experience 10 years of

00:14:54,959 --> 00:14:57,839
kubernetes experience i got to move to

00:14:56,480 --> 00:14:59,120
greenland to do the job well

00:14:57,839 --> 00:15:01,199
okay i would move to greenland at the

00:14:59,120 --> 00:15:04,000
drop of a hat i would i would i would oh

00:15:01,199 --> 00:15:05,519
boy that sounds cool but

00:15:04,000 --> 00:15:06,639
beyond that of course this is a you know

00:15:05,519 --> 00:15:07,839
it's an ad you see all the time it's

00:15:06,639 --> 00:15:09,360
looking for more experience in a

00:15:07,839 --> 00:15:10,320
framework than that framework has

00:15:09,360 --> 00:15:13,440
existed

00:15:10,320 --> 00:15:14,399
um and but even beyond that you know we

00:15:13,440 --> 00:15:16,399
all know

00:15:14,399 --> 00:15:17,519
that building these teams is really

00:15:16,399 --> 00:15:19,839
really tough

00:15:17,519 --> 00:15:22,000
and when we talk about adopting a new

00:15:19,839 --> 00:15:24,160
framework and new architecture

00:15:22,000 --> 00:15:25,120
um the the question of who's really

00:15:24,160 --> 00:15:27,600
gonna do that

00:15:25,120 --> 00:15:28,880
and how we're going to hire those people

00:15:27,600 --> 00:15:31,519
it is tough

00:15:28,880 --> 00:15:32,480
so um one of the takeaways i'd love you

00:15:31,519 --> 00:15:35,440
to get from this

00:15:32,480 --> 00:15:37,040
is that when you have a great team that

00:15:35,440 --> 00:15:38,560
has great observability

00:15:37,040 --> 00:15:39,519
you really is something that you grow

00:15:38,560 --> 00:15:40,560
and it's not something that you go out

00:15:39,519 --> 00:15:42,000
and hire

00:15:40,560 --> 00:15:45,120
and i mean you know why am i talking

00:15:42,000 --> 00:15:46,720
about um the people side of this at all

00:15:45,120 --> 00:15:48,160
i would say you know remember

00:15:46,720 --> 00:15:49,920
observability is just talking about

00:15:48,160 --> 00:15:51,600
how fast you can understand a problem

00:15:49,920 --> 00:15:53,360
based on the information you have

00:15:51,600 --> 00:15:55,040
so when some of your senior engineers

00:15:53,360 --> 00:15:56,480
leave for greener pastures

00:15:55,040 --> 00:15:58,560
your observability just dropped

00:15:56,480 --> 00:16:00,160
significantly because

00:15:58,560 --> 00:16:02,160
the information that you store is the

00:16:00,160 --> 00:16:04,320
same but the human ability to look at

00:16:02,160 --> 00:16:08,320
that information and understand it just

00:16:04,320 --> 00:16:09,920
just dropped so that you know growing a

00:16:08,320 --> 00:16:10,560
highly skilled team and especially a

00:16:09,920 --> 00:16:13,360
team where

00:16:10,560 --> 00:16:15,920
everybody has a good knowledge base is

00:16:13,360 --> 00:16:18,320
super duper key for observability

00:16:15,920 --> 00:16:20,079
so the three pieces and this is not my

00:16:18,320 --> 00:16:21,600
uh comparison this is sheen brussels

00:16:20,079 --> 00:16:22,800
lego who first proposed this i really

00:16:21,600 --> 00:16:24,639
liked it

00:16:22,800 --> 00:16:26,160
is that you find the good seeds you find

00:16:24,639 --> 00:16:29,680
people either who

00:16:26,160 --> 00:16:31,279
are new and very eager to uh you know

00:16:29,680 --> 00:16:32,399
fully understand their architecture

00:16:31,279 --> 00:16:35,440
become sort of as

00:16:32,399 --> 00:16:36,639
full stack as possible or you find

00:16:35,440 --> 00:16:37,839
people who really you know they have a

00:16:36,639 --> 00:16:41,040
ton of experience but they

00:16:37,839 --> 00:16:43,199
love applying it in new environments and

00:16:41,040 --> 00:16:45,279
you want to give that team the soil that

00:16:43,199 --> 00:16:46,720
it needs to really develop its skills in

00:16:45,279 --> 00:16:47,440
a complete way that can be everything

00:16:46,720 --> 00:16:49,199
from

00:16:47,440 --> 00:16:50,880
you know online learning resources your

00:16:49,199 --> 00:16:53,279
a cloud guru

00:16:50,880 --> 00:16:54,399
memberships to making sure that people

00:16:53,279 --> 00:16:56,399
are connected to events

00:16:54,399 --> 00:16:57,680
making sure that people are are pursuing

00:16:56,399 --> 00:16:59,360
the goals they need

00:16:57,680 --> 00:17:01,360
the last one is sunlight is honest

00:16:59,360 --> 00:17:03,839
communication inside that team

00:17:01,360 --> 00:17:04,480
so that there's good knowledge sharing

00:17:03,839 --> 00:17:06,079
and so

00:17:04,480 --> 00:17:08,079
if you can build the trust within your

00:17:06,079 --> 00:17:09,039
team to share lessons learned and share

00:17:08,079 --> 00:17:11,919
information

00:17:09,039 --> 00:17:13,360
you can get such big things done by by

00:17:11,919 --> 00:17:14,799
having that piece

00:17:13,360 --> 00:17:16,559
and this really matters because not only

00:17:14,799 --> 00:17:17,360
is it going to grow the team that you

00:17:16,559 --> 00:17:19,919
need

00:17:17,360 --> 00:17:21,439
and in these on these new platforms it's

00:17:19,919 --> 00:17:23,280
also going to keep the people that you

00:17:21,439 --> 00:17:24,559
do not want to lose this example started

00:17:23,280 --> 00:17:26,000
with right what happens when we lose

00:17:24,559 --> 00:17:28,480
some senior engineers

00:17:26,000 --> 00:17:30,160
and you know more than anything when i

00:17:28,480 --> 00:17:31,679
talk to people who are

00:17:30,160 --> 00:17:33,360
you know have real experience on why

00:17:31,679 --> 00:17:34,960
they leave a lot of things they talk

00:17:33,360 --> 00:17:35,520
about is they say well i wasn't growing

00:17:34,960 --> 00:17:36,960
there

00:17:35,520 --> 00:17:38,880
you know my knowledge wasn't growing i

00:17:36,960 --> 00:17:41,120
was doing stuff i've done before

00:17:38,880 --> 00:17:42,960
and so if you give them those chances to

00:17:41,120 --> 00:17:45,919
grow that's really gonna

00:17:42,960 --> 00:17:46,320
build your ability to retain good people

00:17:45,919 --> 00:17:47,760
so

00:17:46,320 --> 00:17:49,919
thank you once again so much for coming

00:17:47,760 --> 00:17:53,039
out my name again is no shenika

00:17:49,919 --> 00:17:54,559
uh hit me up on um uh twitter if you

00:17:53,039 --> 00:17:55,840
would like to ask any follow-up

00:17:54,559 --> 00:17:56,559
questions or give me feedback on this

00:17:55,840 --> 00:17:58,720
talk

00:17:56,559 --> 00:18:01,840
um i really appreciate your time and uh

00:17:58,720 --> 00:18:01,840

YouTube URL: https://www.youtube.com/watch?v=w4SV6nFJlt8


