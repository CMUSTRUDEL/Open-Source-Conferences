Title: DevOps on the Edge! - Prasanjit Singh, STARZPLAY
Publication date: 2021-05-05
Playlist: Kubernetes on Edge Day EU 2021
Description: 
	Donâ€™t miss out! Join us at our upcoming event: KubeCon + CloudNativeCon North America 2021 in Los Angeles, CA from October 12-15. Learn more at https://kubecon.io The conference features presentations from developers and end users of Kubernetes, Prometheus, Envoy, and all of the other CNCF-hosted projects.

DevOps on the Edge! - Prasanjit Singh, STARZPLAY

These are exciting times! Three contemporary technologies are on course to define the next decade! "Containers", "AI & ML" and "5G Networks". Why so? That is because, this combination paves the way for a massive disruption - 'Edge computing'. For the uninitiated, 'edge computing' is a distributed computing architecture that moves applications as close as possible to the user base. Edge computing bundled with 5G tech & ML will transform how enterprises run applications and services today. Core to this transformation is the ability of deploying these applications to edge locations. Kubernetes & its ecosystem of utilities will play a defining role here as the edge orchestrator.

In this lightning talk, Prasanjit Singh will articulate on DevOps tools & tailored practices that will define the journey to edge computing and assess where we stand today in terms of edge capabilities.
Captions: 
	00:00:00,080 --> 00:00:04,799
hello and welcome to kubernetes edge day

00:00:03,040 --> 00:00:06,799
my name is prasanjit singh i'm the

00:00:04,799 --> 00:00:07,919
director of cloud and devops practice at

00:00:06,799 --> 00:00:09,679
star play dubai

00:00:07,919 --> 00:00:10,960
where we are reinventing video streaming

00:00:09,679 --> 00:00:12,960
with state of the art

00:00:10,960 --> 00:00:15,120
engineering on the cloud and the edge

00:00:12,960 --> 00:00:18,080
across 20 plus countries worldwide

00:00:15,120 --> 00:00:19,840
today i'll talk about devops on the edge

00:00:18,080 --> 00:00:20,400
essentially we'll touch upon devops

00:00:19,840 --> 00:00:22,640
tools

00:00:20,400 --> 00:00:24,160
tailored practices that will define the

00:00:22,640 --> 00:00:26,240
journey to the edge computing

00:00:24,160 --> 00:00:28,160
and assess where we stand today in terms

00:00:26,240 --> 00:00:30,000
of edge capabilities

00:00:28,160 --> 00:00:31,439
well i must tell you these are really

00:00:30,000 --> 00:00:33,360
exciting times and

00:00:31,439 --> 00:00:34,800
we are heading towards a disruption and

00:00:33,360 --> 00:00:37,920
i'm saying this because

00:00:34,800 --> 00:00:39,280
three contemporary technologies are on

00:00:37,920 --> 00:00:41,120
course to

00:00:39,280 --> 00:00:43,120
define the next ticket number one

00:00:41,120 --> 00:00:44,399
containers then we have machine learning

00:00:43,120 --> 00:00:47,039
and 5g networks

00:00:44,399 --> 00:00:48,879
while containers provide portability 5g

00:00:47,039 --> 00:00:50,239
provides the speed and bandwidth while

00:00:48,879 --> 00:00:51,039
machine learning provides you the

00:00:50,239 --> 00:00:53,280
insights

00:00:51,039 --> 00:00:55,120
so just imagine what power these three

00:00:53,280 --> 00:00:57,360
can bring together

00:00:55,120 --> 00:00:59,039
these have diverse applications right

00:00:57,360 --> 00:01:01,199
from auto driven cars to

00:00:59,039 --> 00:01:02,160
medical life saving equipments video

00:01:01,199 --> 00:01:04,320
streaming

00:01:02,160 --> 00:01:05,840
collaborative gaming space exploration

00:01:04,320 --> 00:01:07,920
and the list goes on

00:01:05,840 --> 00:01:09,360
in fact this combination paves the way

00:01:07,920 --> 00:01:11,600
for a massive disruption

00:01:09,360 --> 00:01:12,720
which we call edge computing this will

00:01:11,600 --> 00:01:14,400
transform how

00:01:12,720 --> 00:01:15,920
enterprises run applications and

00:01:14,400 --> 00:01:18,080
services today

00:01:15,920 --> 00:01:19,600
code to this transformation is also the

00:01:18,080 --> 00:01:21,200
ability to

00:01:19,600 --> 00:01:23,759
deploy these applications to edge

00:01:21,200 --> 00:01:25,360
location now before we go on

00:01:23,759 --> 00:01:27,920
and understand deployments let's

00:01:25,360 --> 00:01:31,040
understand the edge

00:01:27,920 --> 00:01:32,560
now what is edge for the uninitiated

00:01:31,040 --> 00:01:33,759
edge computing is a distributed

00:01:32,560 --> 00:01:35,840
computing architecture

00:01:33,759 --> 00:01:37,280
that moves applications as close as

00:01:35,840 --> 00:01:39,920
possible to the user base

00:01:37,280 --> 00:01:41,040
so what happens edge computing moves i.t

00:01:39,920 --> 00:01:43,119
resources closer

00:01:41,040 --> 00:01:44,159
to where data is produced and consumed

00:01:43,119 --> 00:01:45,600
so

00:01:44,159 --> 00:01:48,799
the traffic from the devices is

00:01:45,600 --> 00:01:51,360
processed and analyzed in near real time

00:01:48,799 --> 00:01:54,159
unlike the cloud deploying closer to the

00:01:51,360 --> 00:01:57,360
edge enhances consumer experiences by

00:01:54,159 --> 00:02:00,159
reducing latency and network calls

00:01:57,360 --> 00:02:01,200
it also makes the technology reliable

00:02:00,159 --> 00:02:04,240
enough to handle

00:02:01,200 --> 00:02:05,840
critical applications like say remote

00:02:04,240 --> 00:02:08,000
patient monitoring by hospitals

00:02:05,840 --> 00:02:09,280
content delivery for streaming providers

00:02:08,000 --> 00:02:12,560
then you have

00:02:09,280 --> 00:02:14,640
energy management and power grids and

00:02:12,560 --> 00:02:16,879
of course autonomous vehicles now all

00:02:14,640 --> 00:02:19,120
this sounds very cool and futuristic

00:02:16,879 --> 00:02:21,120
but what are the challenges let's have a

00:02:19,120 --> 00:02:23,360
look

00:02:21,120 --> 00:02:24,640
well uh the edge is a crowded place

00:02:23,360 --> 00:02:27,840
smaller footprint

00:02:24,640 --> 00:02:28,319
but more numbers it is uh distributed

00:02:27,840 --> 00:02:30,000
across

00:02:28,319 --> 00:02:31,920
thousands of locations with limited

00:02:30,000 --> 00:02:34,480
space limited cooling power

00:02:31,920 --> 00:02:35,519
scars computing resources architecture

00:02:34,480 --> 00:02:37,760
heterogeneity

00:02:35,519 --> 00:02:39,360
and then edges made up of different

00:02:37,760 --> 00:02:41,920
nodes various sizes

00:02:39,360 --> 00:02:44,480
vendors and technologies large small pnf

00:02:41,920 --> 00:02:45,120
acrino you have aws green grass azure

00:02:44,480 --> 00:02:48,480
edge

00:02:45,120 --> 00:02:50,959
and aws outposts etc etc so

00:02:48,480 --> 00:02:52,879
now this requires a proper and flexible

00:02:50,959 --> 00:02:54,480
and lightweight orchestration tool

00:02:52,879 --> 00:02:55,760
so yes orchestration is one of the

00:02:54,480 --> 00:02:57,280
biggest challenges because of this

00:02:55,760 --> 00:02:59,200
heterogeneity in the

00:02:57,280 --> 00:03:01,040
edge environments then we have

00:02:59,200 --> 00:03:03,519
scalability challenges

00:03:01,040 --> 00:03:05,120
edge nodes are small availability for

00:03:03,519 --> 00:03:07,519
resources

00:03:05,120 --> 00:03:08,640
for applications is not guaranteed and

00:03:07,519 --> 00:03:10,560
then because of the numbers and

00:03:08,640 --> 00:03:12,319
heterogeneity visibility is another

00:03:10,560 --> 00:03:14,800
blocker so you need good monitoring and

00:03:12,319 --> 00:03:16,800
insights framework to track and solve

00:03:14,800 --> 00:03:19,440
issues on the edge adding to that

00:03:16,800 --> 00:03:20,800
when we keep running edge nodes we keep

00:03:19,440 --> 00:03:23,840
generating data

00:03:20,800 --> 00:03:25,519
so edge locations would not have ample

00:03:23,840 --> 00:03:27,440
resources to store and archive

00:03:25,519 --> 00:03:28,879
that data so there needs to be a proper

00:03:27,440 --> 00:03:31,360
policy to

00:03:28,879 --> 00:03:32,799
recycle store or archive data so that

00:03:31,360 --> 00:03:35,200
becomes a challenge on the edge

00:03:32,799 --> 00:03:36,159
and finally data at the edge is highly

00:03:35,200 --> 00:03:40,239
distributed

00:03:36,159 --> 00:03:42,239
which means enlarged attack surface so

00:03:40,239 --> 00:03:43,920
hackers can easily gain access to edge

00:03:42,239 --> 00:03:45,120
devices and at the same time because you

00:03:43,920 --> 00:03:47,360
have less visibility

00:03:45,120 --> 00:03:48,879
of what's going on it can be disastrous

00:03:47,360 --> 00:03:50,640
so how is all this tackled

00:03:48,879 --> 00:03:52,720
uh what is the answer to this what is

00:03:50,640 --> 00:03:56,080
the answer to these challenges in fact

00:03:52,720 --> 00:03:57,040
i believe devops is the answer devops

00:03:56,080 --> 00:03:58,560
practices

00:03:57,040 --> 00:04:00,640
provide a framework for delivering

00:03:58,560 --> 00:04:02,959
consistent and reliable

00:04:00,640 --> 00:04:04,000
software and the changes are done as

00:04:02,959 --> 00:04:06,000
fast as possible

00:04:04,000 --> 00:04:08,560
micro services containers orchestrators

00:04:06,000 --> 00:04:11,120
like kubernetes and ci cd pipelines

00:04:08,560 --> 00:04:12,000
solve the problem of heterogeneity and

00:04:11,120 --> 00:04:14,400
deployments

00:04:12,000 --> 00:04:15,360
devops allows build infrastructures on

00:04:14,400 --> 00:04:18,560
the edge

00:04:15,360 --> 00:04:21,199
using terraform and to

00:04:18,560 --> 00:04:22,000
manage configurations of infrastructure

00:04:21,199 --> 00:04:24,160
and

00:04:22,000 --> 00:04:25,600
software defined networks and ansible

00:04:24,160 --> 00:04:27,759
can also be used to manage

00:04:25,600 --> 00:04:29,680
configuration playbooks can be used to

00:04:27,759 --> 00:04:31,680
run drive cycle operations and

00:04:29,680 --> 00:04:33,680
archive and backup the data to back to

00:04:31,680 --> 00:04:35,919
the cloud from the edge

00:04:33,680 --> 00:04:37,520
to different object stores like s3 or

00:04:35,919 --> 00:04:41,040
whatever so

00:04:37,520 --> 00:04:43,759
that is how devops allows

00:04:41,040 --> 00:04:44,400
to solve problems in the edge now devops

00:04:43,759 --> 00:04:46,400
practices

00:04:44,400 --> 00:04:48,639
ensure applications built for open

00:04:46,400 --> 00:04:50,479
containers can be securely deployed

00:04:48,639 --> 00:04:51,280
tested run and managed on multiple

00:04:50,479 --> 00:04:54,080
devices

00:04:51,280 --> 00:04:55,600
with services executed from multiple

00:04:54,080 --> 00:04:57,600
private and public clouds

00:04:55,600 --> 00:04:59,680
also lightweight monitoring probes

00:04:57,600 --> 00:05:00,320
enable real-time telemetry of these

00:04:59,680 --> 00:05:03,120
devices

00:05:00,320 --> 00:05:04,479
finally devops provides the guard rails

00:05:03,120 --> 00:05:05,680
to your developers early in the

00:05:04,479 --> 00:05:08,800
development cycle

00:05:05,680 --> 00:05:11,360
so that they can stay agile and without

00:05:08,800 --> 00:05:13,120
inadvertently compromising security

00:05:11,360 --> 00:05:14,800
checks can be integrated in ci cd

00:05:13,120 --> 00:05:18,479
pipeline to prevent

00:05:14,800 --> 00:05:20,720
security issues and from

00:05:18,479 --> 00:05:21,919
and from vulnerabilities to make into

00:05:20,720 --> 00:05:22,960
make their way into your edge

00:05:21,919 --> 00:05:26,880
environment

00:05:22,960 --> 00:05:29,919
or it can also alert the developers

00:05:26,880 --> 00:05:31,919
to know what is going on

00:05:29,919 --> 00:05:33,759
at the correct time and remediate that

00:05:31,919 --> 00:05:36,560
problem before it's too late

00:05:33,759 --> 00:05:37,120
so that is another advantage that devops

00:05:36,560 --> 00:05:40,000
provides

00:05:37,120 --> 00:05:42,639
and shifting security left this approach

00:05:40,000 --> 00:05:45,680
from devops is good for reducing

00:05:42,639 --> 00:05:46,560
not only cyber risk but also it reduces

00:05:45,680 --> 00:05:49,520
cost

00:05:46,560 --> 00:05:50,960
so that's how devops practices solve the

00:05:49,520 --> 00:05:53,199
problems of orchestration

00:05:50,960 --> 00:05:55,120
security scalability monitoring and life

00:05:53,199 --> 00:05:58,160
cycle

00:05:55,120 --> 00:05:58,639
so now let's discuss how is that to be

00:05:58,160 --> 00:06:00,880
done

00:05:58,639 --> 00:06:02,160
like how and what are the tools we'll

00:06:00,880 --> 00:06:05,199
use so that

00:06:02,160 --> 00:06:08,240
devops can be tailored for the edge

00:06:05,199 --> 00:06:09,600
well custom devops for the edge requires

00:06:08,240 --> 00:06:11,759
a few tweaks

00:06:09,600 --> 00:06:14,400
you can either go with public cloud

00:06:11,759 --> 00:06:16,479
offerings aws azure

00:06:14,400 --> 00:06:18,240
and even ibm and red hat they have very

00:06:16,479 --> 00:06:19,840
good solutions for the edge

00:06:18,240 --> 00:06:22,160
well it depends upon your choice and

00:06:19,840 --> 00:06:23,120
scale uh you can even go open source if

00:06:22,160 --> 00:06:26,240
you want

00:06:23,120 --> 00:06:27,360
well assuming you go open source um so

00:06:26,240 --> 00:06:30,800
first thing

00:06:27,360 --> 00:06:31,120
use githubs so the core idea of githubs

00:06:30,800 --> 00:06:33,840
is

00:06:31,120 --> 00:06:35,120
having a git repository that always

00:06:33,840 --> 00:06:38,400
contains declarative

00:06:35,120 --> 00:06:41,360
descriptions of infrastructure currently

00:06:38,400 --> 00:06:42,000
desired in the production environment

00:06:41,360 --> 00:06:43,600
and

00:06:42,000 --> 00:06:45,199
the automated process to make the

00:06:43,600 --> 00:06:47,919
production environment matched

00:06:45,199 --> 00:06:49,840
the described state in the repository so

00:06:47,919 --> 00:06:51,680
that will set up ci cd on the top of uh

00:06:49,840 --> 00:06:52,880
declarative infrastructure so you can

00:06:51,680 --> 00:06:55,520
stop scripting and

00:06:52,880 --> 00:06:56,160
start shipping your products to the edge

00:06:55,520 --> 00:06:57,840
so

00:06:56,160 --> 00:06:59,199
git lab get a bit bucket these are all

00:06:57,840 --> 00:07:01,919
good enough and they have uh

00:06:59,199 --> 00:07:02,240
various getter getups tools with them as

00:07:01,919 --> 00:07:04,160
well

00:07:02,240 --> 00:07:06,479
you can even create your own open source

00:07:04,160 --> 00:07:09,199
git repository for this

00:07:06,479 --> 00:07:11,360
well uh the second thing for declarative

00:07:09,199 --> 00:07:13,919
pipelines and ci cd on the edge

00:07:11,360 --> 00:07:15,599
you can use drone drone is a very

00:07:13,919 --> 00:07:18,240
lightweight

00:07:15,599 --> 00:07:20,319
cicd tool and you can use it to build

00:07:18,240 --> 00:07:22,000
the image launch tests and

00:07:20,319 --> 00:07:23,520
deploy on different environments it is

00:07:22,000 --> 00:07:25,199
lightweight and does the job

00:07:23,520 --> 00:07:27,199
well if you have a hybrid infra where

00:07:25,199 --> 00:07:29,199
you can afford to run jenkins server

00:07:27,199 --> 00:07:30,479
say on the cloud then you can use that

00:07:29,199 --> 00:07:32,160
too

00:07:30,479 --> 00:07:33,840
but it is a bit heavyweight because it's

00:07:32,160 --> 00:07:35,280
a java so

00:07:33,840 --> 00:07:37,360
if you're just doing it on the edge

00:07:35,280 --> 00:07:39,919
prefer to do it with drone

00:07:37,360 --> 00:07:42,080
then you can use a ranger to manage

00:07:39,919 --> 00:07:44,400
application catalog help charts

00:07:42,080 --> 00:07:45,520
a monitoring project access rights and

00:07:44,400 --> 00:07:48,400
kubernetes nodes

00:07:45,520 --> 00:07:50,639
you can use gt to manage sources for the

00:07:48,400 --> 00:07:53,280
applications and you can use helm charts

00:07:50,639 --> 00:07:54,240
uh to version those in the source

00:07:53,280 --> 00:07:58,400
repository

00:07:54,240 --> 00:08:00,319
and if you are doing it open source and

00:07:58,400 --> 00:08:01,840
not in the cloud for docker image

00:08:00,319 --> 00:08:03,599
storage you can use something called

00:08:01,840 --> 00:08:06,240
hardware it's open source

00:08:03,599 --> 00:08:07,199
image repository and you can store

00:08:06,240 --> 00:08:08,240
docker images there check

00:08:07,199 --> 00:08:10,240
vulnerabilities

00:08:08,240 --> 00:08:11,360
and you have various storage controls as

00:08:10,240 --> 00:08:14,720
well

00:08:11,360 --> 00:08:15,759
fourth as the orchestrator you can use

00:08:14,720 --> 00:08:17,599
kubernetes

00:08:15,759 --> 00:08:18,960
and use the lightweight version of

00:08:17,599 --> 00:08:20,080
kubernetes there are a couple of

00:08:18,960 --> 00:08:22,560
lightweight versions

00:08:20,080 --> 00:08:23,199
and i prefer k3s from rancher you can

00:08:22,560 --> 00:08:25,039
use that too

00:08:23,199 --> 00:08:27,120
very lightweight easy to deploy and

00:08:25,039 --> 00:08:30,160
start using

00:08:27,120 --> 00:08:32,080
and finally you can use

00:08:30,160 --> 00:08:34,320
lightweight monitoring tools like net

00:08:32,080 --> 00:08:36,240
data it's open source monitoring tool

00:08:34,320 --> 00:08:37,919
and you can also use a combination of

00:08:36,240 --> 00:08:40,719
prometheus plus grafana

00:08:37,919 --> 00:08:41,839
so prometheus will act as the agent and

00:08:40,719 --> 00:08:43,760
collect data while

00:08:41,839 --> 00:08:44,880
grafina will be used for creating your

00:08:43,760 --> 00:08:47,839
dashboards

00:08:44,880 --> 00:08:48,480
finally shift left for your security

00:08:47,839 --> 00:08:50,320
gates

00:08:48,480 --> 00:08:51,839
in the most simple terms shift left

00:08:50,320 --> 00:08:53,440
security is moving security to the

00:08:51,839 --> 00:08:55,680
earliest possible

00:08:53,440 --> 00:08:56,959
point in the development process so in

00:08:55,680 --> 00:09:00,560
this case

00:08:56,959 --> 00:09:03,680
it will be incorporated in the pipeline

00:09:00,560 --> 00:09:05,360
even before the container is baked

00:09:03,680 --> 00:09:07,200
this along with other peripheral

00:09:05,360 --> 00:09:10,720
security layers will make

00:09:07,200 --> 00:09:12,000
the edge apps robust so what are the

00:09:10,720 --> 00:09:15,200
takeaways

00:09:12,000 --> 00:09:17,279
because edge has a smaller footprint

00:09:15,200 --> 00:09:18,720
use lean tools that's the number one

00:09:17,279 --> 00:09:21,040
takeaway

00:09:18,720 --> 00:09:21,760
use lightweight strip down fat free

00:09:21,040 --> 00:09:24,480
tools

00:09:21,760 --> 00:09:25,519
number two uh shift left introduce your

00:09:24,480 --> 00:09:26,880
security checks

00:09:25,519 --> 00:09:28,959
uh in the beginning of the pipeline

00:09:26,880 --> 00:09:31,360
itself instead of going through for

00:09:28,959 --> 00:09:33,200
uh just a final check after the

00:09:31,360 --> 00:09:34,720
application is deployed by

00:09:33,200 --> 00:09:36,320
having a firewall in place or something

00:09:34,720 --> 00:09:38,560
like that better to have the checks in

00:09:36,320 --> 00:09:40,399
the code level so that even if someone

00:09:38,560 --> 00:09:41,920
violates he would not be able to make

00:09:40,399 --> 00:09:44,560
much out of

00:09:41,920 --> 00:09:46,480
your vulnerability then of course

00:09:44,560 --> 00:09:49,440
practice devops principles

00:09:46,480 --> 00:09:50,160
cicd continuous deployment continuous

00:09:49,440 --> 00:09:52,320
integration

00:09:50,160 --> 00:09:54,160
and continuous feedback by getting

00:09:52,320 --> 00:09:57,839
alerts from your devices on the edge

00:09:54,160 --> 00:09:59,920
and finally um and not the least uh

00:09:57,839 --> 00:10:01,920
use kubernetes because that makes

00:09:59,920 --> 00:10:04,880
orchestration seem like a breeze

00:10:01,920 --> 00:10:05,600
and because when you're talking about

00:10:04,880 --> 00:10:08,240
the edge

00:10:05,600 --> 00:10:09,279
um say you're monitoring a car then the

00:10:08,240 --> 00:10:11,839
car is not a car

00:10:09,279 --> 00:10:13,120
it's a worker node of a kubernetes

00:10:11,839 --> 00:10:15,600
cluster

00:10:13,120 --> 00:10:17,760
that's all from me today uh stay

00:10:15,600 --> 00:10:22,399
connected for the upcoming sessions

00:10:17,760 --> 00:10:22,399

YouTube URL: https://www.youtube.com/watch?v=-nXqMK76Rds


