Title: Lightning Talk: Democratizing Cellular Access with CellBricks - Zhihong Luo, Berkley EECS
Publication date: 2021-05-02
Playlist: Magma Day EU 2021
Description: 
	Don’t miss out! Join us at our upcoming event: KubeCon + CloudNativeCon North America 2021 in Los Angeles, CA from October 12-15. Learn more at https://kubecon.io The conference features presentations from developers and end users of Kubernetes, Prometheus, Envoy, and all of the other CNCF-hosted projects.

Lightning Talk: Democratizing Cellular Access with CellBricks - Zhihong Luo, Berkley EECS

Markets in which competition thrives are good for both consumers and innovation but, unfortunately, competition is not thriving in the increasingly important cellular market. We propose CellBricks, a novel cellular architecture that lowers the barrier to entry for new operators by enabling users to consume access on-demand from any available cellular operator — small or large, trusted or untrusted. CellBricks achieves this by moving support for mobility and user management (authentication and billing) out of the network and into end hosts. These changes, we believe, bring valuable benefits beyond enabling competition: they lead to a cellular infrastructure that is simpler and more efficient.
Captions: 
	00:00:00,080 --> 00:00:04,240
hello everyone my name is zhong i'm a

00:00:02,000 --> 00:00:05,680
second year phd student here at uc

00:00:04,240 --> 00:00:07,279
berkeley advised by professor

00:00:05,680 --> 00:00:08,080
silveranosomy and professor scott

00:00:07,279 --> 00:00:09,599
sryanka

00:00:08,080 --> 00:00:11,120
today i'm very excited to be here and

00:00:09,599 --> 00:00:13,200
talk to you about our ongoing

00:00:11,120 --> 00:00:14,960
efforts at democratizing cellular access

00:00:13,200 --> 00:00:16,560
this is a joint work with my colleague

00:00:14,960 --> 00:00:20,240
silvery mark shetty

00:00:16,560 --> 00:00:21,039
sylvia and scott we started this project

00:00:20,240 --> 00:00:23,359
with the goal

00:00:21,039 --> 00:00:24,880
which is to grow the 10-inch cellular

00:00:23,359 --> 00:00:25,199
central network has become a more and

00:00:24,880 --> 00:00:27,519
more

00:00:25,199 --> 00:00:28,400
important part of today's internet

00:00:27,519 --> 00:00:30,320
ecosystem

00:00:28,400 --> 00:00:32,719
global speaking having over 5 billion

00:00:30,320 --> 00:00:36,079
subscribers contributing to over 50

00:00:32,719 --> 00:00:37,520
of the overall internet traffic however

00:00:36,079 --> 00:00:39,360
despite the growing importance today's

00:00:37,520 --> 00:00:40,960
cellular ecosystem is still dominated by

00:00:39,360 --> 00:00:42,399
a small number of mobile network

00:00:40,960 --> 00:00:45,039
operators and most

00:00:42,399 --> 00:00:46,640
in fact last year in u.s over 98 of

00:00:45,039 --> 00:00:48,160
subscribers belong to the top three

00:00:46,640 --> 00:00:50,559
carriers

00:00:48,160 --> 00:00:52,399
our goal is to change this and bring

00:00:50,559 --> 00:00:54,000
innovation and competition back to the

00:00:52,399 --> 00:00:55,920
cellular ecosystem by lowering the

00:00:54,000 --> 00:00:57,520
barrier to entry for new engines

00:00:55,920 --> 00:00:59,199
we want to allow new players to join the

00:00:57,520 --> 00:01:00,879
market and profit from providing

00:00:59,199 --> 00:01:02,800
cellular access

00:01:00,879 --> 00:01:05,040
we believe the key to enable this goal

00:01:02,800 --> 00:01:06,479
is to ensure that mmos even with a small

00:01:05,040 --> 00:01:08,960
to medium scale footprint

00:01:06,479 --> 00:01:09,840
can play here whereas a small medium

00:01:08,960 --> 00:01:12,159
scale footprint

00:01:09,840 --> 00:01:13,840
it can be covering a city a village a

00:01:12,159 --> 00:01:14,640
prada or even down to a single cell

00:01:13,840 --> 00:01:16,400
tower

00:01:14,640 --> 00:01:18,320
regardless of the footprints we wouldn't

00:01:16,400 --> 00:01:20,080
be able to compete equally

00:01:18,320 --> 00:01:21,680
with this goal in mind we examine

00:01:20,080 --> 00:01:23,280
today's cellular architecture and

00:01:21,680 --> 00:01:24,960
realize that there are fundamental

00:01:23,280 --> 00:01:27,200
technical aspects of today's

00:01:24,960 --> 00:01:29,040
architecture they are at odds with this

00:01:27,200 --> 00:01:32,000
vision of large number of small

00:01:29,040 --> 00:01:33,520
access providers without going to detail

00:01:32,000 --> 00:01:35,600
today's saturday architecture relies

00:01:33,520 --> 00:01:37,200
heavily on pre-established trust

00:01:35,600 --> 00:01:39,040
and in-network coordination for

00:01:37,200 --> 00:01:40,000
providing large footprints and seamless

00:01:39,040 --> 00:01:42,159
mobility

00:01:40,000 --> 00:01:43,840
both of which are infeasible when you

00:01:42,159 --> 00:01:45,600
come to a large number of small efforts

00:01:43,840 --> 00:01:47,920
providers

00:01:45,600 --> 00:01:50,000
because of this we propose cell bricks a

00:01:47,920 --> 00:01:51,360
radically new but technically feasible

00:01:50,000 --> 00:01:53,520
cellular architecture

00:01:51,360 --> 00:01:54,720
with a goal to enable user to consume

00:01:53,520 --> 00:01:56,799
access on demand

00:01:54,720 --> 00:01:58,880
from any available access providers

00:01:56,799 --> 00:02:01,759
without requiring pre-separate trust

00:01:58,880 --> 00:02:03,520
or in our coordination in today i will

00:02:01,759 --> 00:02:05,360
talk about cell brick service model

00:02:03,520 --> 00:02:07,119
as well as technical architecture in

00:02:05,360 --> 00:02:09,280
order to give you an idea of what cell

00:02:07,119 --> 00:02:10,800
breaks is all about

00:02:09,280 --> 00:02:12,239
first i'll talk about cell brick service

00:02:10,800 --> 00:02:14,080
model in southwest there will be three

00:02:12,239 --> 00:02:15,920
party the first one is user it can be

00:02:14,080 --> 00:02:17,360
anyone who has a mobile device that can

00:02:15,920 --> 00:02:19,760
consume cellular access

00:02:17,360 --> 00:02:21,440
the second one is what we call btelco

00:02:19,760 --> 00:02:22,560
there are essentially small independent

00:02:21,440 --> 00:02:24,879
access provider

00:02:22,560 --> 00:02:27,280
that perhaps on physical infrastructure

00:02:24,879 --> 00:02:29,120
and provide users with cellular access

00:02:27,280 --> 00:02:31,200
and the last one is what we call broker

00:02:29,120 --> 00:02:32,879
and we borrow this terminology from nvmo

00:02:31,200 --> 00:02:34,800
which stands for mobile virtual network

00:02:32,879 --> 00:02:36,319
operator like google five

00:02:34,800 --> 00:02:38,080
broker doesn't have to own physical

00:02:36,319 --> 00:02:39,599
infrastructure instead it has user

00:02:38,080 --> 00:02:41,680
phasing functionality

00:02:39,599 --> 00:02:43,840
and federate the underlying server

00:02:41,680 --> 00:02:45,360
architecture for the users

00:02:43,840 --> 00:02:46,959
in cell bricks in order for user to

00:02:45,360 --> 00:02:48,000
obtain server access the first thing you

00:02:46,959 --> 00:02:49,760
do is to

00:02:48,000 --> 00:02:51,519
sign up and establish a conceptual

00:02:49,760 --> 00:02:54,239
relationship with the broker

00:02:51,519 --> 00:02:56,080
which is identical to today's mvmo

00:02:54,239 --> 00:02:57,680
however the key difference here is that

00:02:56,080 --> 00:02:59,440
instead of having a pre-leveraged

00:02:57,680 --> 00:03:00,800
trusted relationship with the underlying

00:02:59,440 --> 00:03:02,640
access provider

00:03:00,800 --> 00:03:04,480
broker federate a large number of

00:03:02,640 --> 00:03:05,760
uncharted assets provided in the old

00:03:04,480 --> 00:03:07,599
demand fashion

00:03:05,760 --> 00:03:09,440
in high level when the user wants to

00:03:07,599 --> 00:03:10,560
obtain certain access from a beta code

00:03:09,440 --> 00:03:12,480
you will request that

00:03:10,560 --> 00:03:13,920
by identifying excel as well as the

00:03:12,480 --> 00:03:15,360
broker they belongs to

00:03:13,920 --> 00:03:17,200
then once the broker authorized a

00:03:15,360 --> 00:03:18,000
connection the btoko would then proceed

00:03:17,200 --> 00:03:20,000
and provide

00:03:18,000 --> 00:03:21,920
user with cellular access and when the

00:03:20,000 --> 00:03:22,400
user is done with necessary access the

00:03:21,920 --> 00:03:24,159
beta

00:03:22,400 --> 00:03:25,599
will be paid by the broker according to

00:03:24,159 --> 00:03:26,480
the amount of traffic that is carried

00:03:25,599 --> 00:03:27,760
for the user

00:03:26,480 --> 00:03:30,080
and then the broker will then charge

00:03:27,760 --> 00:03:32,799
users accordingly everything happens

00:03:30,080 --> 00:03:34,560
here in the on-demand fashion

00:03:32,799 --> 00:03:35,840
next i'll talk about in high level cell

00:03:34,560 --> 00:03:38,080
bricks architecture

00:03:35,840 --> 00:03:39,760
today's imma architecture we have a

00:03:38,080 --> 00:03:40,879
bulky network in the sense that it

00:03:39,760 --> 00:03:42,879
contains all sorts of different

00:03:40,879 --> 00:03:44,840
functionality from user mobility

00:03:42,879 --> 00:03:47,280
data plan control plan to user

00:03:44,840 --> 00:03:48,480
management and when it comes to nvmo

00:03:47,280 --> 00:03:50,560
even though it may bring some new

00:03:48,480 --> 00:03:51,599
service model or business opportunity

00:03:50,560 --> 00:03:53,760
it doesn't really change the

00:03:51,599 --> 00:03:55,439
architecture per se because as you can

00:03:53,760 --> 00:03:57,439
see here the network is still bulky

00:03:55,439 --> 00:03:59,280
containing all the functionality and

00:03:57,439 --> 00:04:00,799
even though of nvmo may sometimes

00:03:59,280 --> 00:04:02,319
overflow part of the user management

00:04:00,799 --> 00:04:04,560
function

00:04:02,319 --> 00:04:06,159
in cell bricks we advocate a radically

00:04:04,560 --> 00:04:06,560
new architecture in the sense that we

00:04:06,159 --> 00:04:08,400
move

00:04:06,560 --> 00:04:10,720
the mobility and user management out of

00:04:08,400 --> 00:04:12,959
the network into the ue and the broker

00:04:10,720 --> 00:04:14,799
by doing so we allow the network to be

00:04:12,959 --> 00:04:18,000
much simpler and this actually leads to

00:04:14,799 --> 00:04:20,479
a much more scalable architecture

00:04:18,000 --> 00:04:22,160
to sums up sailbrick is a radically new

00:04:20,479 --> 00:04:22,560
cell architecture that would believe to

00:04:22,160 --> 00:04:24,960
bring

00:04:22,560 --> 00:04:26,479
three major benefits the first one is to

00:04:24,960 --> 00:04:27,440
lower the barrier to entry for new

00:04:26,479 --> 00:04:29,199
operators

00:04:27,440 --> 00:04:31,040
by essentially removing the requirement

00:04:29,199 --> 00:04:33,280
of pre-separate trust and in-network

00:04:31,040 --> 00:04:34,479
coordination and the second one is lead

00:04:33,280 --> 00:04:36,080
to more efficient use of the

00:04:34,479 --> 00:04:38,080
infrastructure because we allowed any

00:04:36,080 --> 00:04:38,880
user to consume access from any access

00:04:38,080 --> 00:04:40,960
provider

00:04:38,880 --> 00:04:42,639
and lastly because we move mobility and

00:04:40,960 --> 00:04:44,560
user management out of the network

00:04:42,639 --> 00:04:46,320
we actually have a much simpler and

00:04:44,560 --> 00:04:49,680
scalable infrastructure

00:04:46,320 --> 00:04:49,680

YouTube URL: https://www.youtube.com/watch?v=P8181VGUQeo


