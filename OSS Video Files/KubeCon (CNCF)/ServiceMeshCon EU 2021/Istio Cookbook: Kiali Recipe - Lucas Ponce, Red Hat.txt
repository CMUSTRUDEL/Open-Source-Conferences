Title: Istio Cookbook: Kiali Recipe - Lucas Ponce, Red Hat
Publication date: 2021-05-05
Playlist: ServiceMeshCon EU 2021
Description: 
	Donâ€™t miss out! Join us at our upcoming event: KubeCon + CloudNativeCon North America 2021 in Los Angeles, CA from October 12-15. Learn more at https://kubecon.io The conference features presentations from developers and end users of Kubernetes, Prometheus, Envoy, and all of the other CNCF-hosted projects.

Istio Cookbook: Kiali Recipe - Lucas Ponce, Red Hat

Istio provides a rich feature set, including service discovery, traffic management, extended security, observability (including telemetry and distributed tracing), rolling releases and resiliency. All these features are very powerful but on the other hand they add more configuration to manage and more information to process on top of a standard kubernetes cluster. Kiali is a management console for Istio. It provides dashboards, observability and lets you operate your mesh with robust configuration and validation capabilities. In this session we will run several scenarios learning Istio capabilities in a in a visual manner on a multiple namespace demo application.
Captions: 
	00:00:00,160 --> 00:00:05,600
hello everyone my name is lucas ponce

00:00:03,040 --> 00:00:08,639
i'm a software engineer at redcat and

00:00:05,600 --> 00:00:10,080
i'm one of the developers of the kiali

00:00:08,639 --> 00:00:14,000
project

00:00:10,080 --> 00:00:16,960
so in this session we are going to demo

00:00:14,000 --> 00:00:19,600
how to use the easter service mess from

00:00:16,960 --> 00:00:23,039
a visual perspectives using yari so

00:00:19,600 --> 00:00:25,840
servicemen provides uh rich features

00:00:23,039 --> 00:00:27,680
to add advanced traffic routine to

00:00:25,840 --> 00:00:30,720
advanced security

00:00:27,680 --> 00:00:34,079
and authorization control for

00:00:30,720 --> 00:00:37,120
your traffic and also increasing

00:00:34,079 --> 00:00:39,600
the observability adding new signals

00:00:37,120 --> 00:00:42,559
like telemetry and tracing in your on

00:00:39,600 --> 00:00:45,920
top of your kubernetes cluster

00:00:42,559 --> 00:00:48,399
so uh what is kiyali kia is a management

00:00:45,920 --> 00:00:51,440
console for eastern-based business

00:00:48,399 --> 00:00:53,440
with the role to simplify the use of

00:00:51,440 --> 00:00:54,640
of all of these low levels so it's going

00:00:53,440 --> 00:00:56,160
to tell you what

00:00:54,640 --> 00:00:58,879
which microservices are part of my

00:00:56,160 --> 00:01:01,440
service method how are they connected

00:00:58,879 --> 00:01:03,120
how are they working and also is going

00:01:01,440 --> 00:01:05,119
to help me to operate on the service

00:01:03,120 --> 00:01:08,159
mess to simplify

00:01:05,119 --> 00:01:10,400
to generate and modify all the

00:01:08,159 --> 00:01:13,200
configuration that i need to create

00:01:10,400 --> 00:01:14,799
high level scenario for traffic routine

00:01:13,200 --> 00:01:19,040
for security

00:01:14,799 --> 00:01:22,640
also and for visualization

00:01:19,040 --> 00:01:24,560
okay so uh in this in this demo all the

00:01:22,640 --> 00:01:26,000
the workshop steps all the warsaw

00:01:24,560 --> 00:01:31,040
resources that we are going

00:01:26,000 --> 00:01:34,640
to use are fully documented at gialli.io

00:01:31,040 --> 00:01:34,640
under the tutorial section

00:01:35,600 --> 00:01:41,040
okay so let me describe the application

00:01:39,200 --> 00:01:42,720
that we are going to use for for this

00:01:41,040 --> 00:01:44,159
demo so we are going to use the travis

00:01:42,720 --> 00:01:47,200
dem application

00:01:44,159 --> 00:01:50,000
which uh basically simulates uh

00:01:47,200 --> 00:01:51,280
travel shops that are talking with a

00:01:50,000 --> 00:01:53,600
tablet inc

00:01:51,280 --> 00:01:54,560
so the travel shops are going to

00:01:53,600 --> 00:01:56,799
generate or

00:01:54,560 --> 00:01:57,759
simulate user requests for a travel

00:01:56,799 --> 00:02:00,960
agency

00:01:57,759 --> 00:02:04,000
asking for available destinations and

00:02:00,960 --> 00:02:04,399
with one destination a user may select

00:02:04,000 --> 00:02:07,360
one

00:02:04,399 --> 00:02:09,280
city and it's going to ask to a travel

00:02:07,360 --> 00:02:11,680
institute in a data

00:02:09,280 --> 00:02:12,560
a traveler to get the quotation for

00:02:11,680 --> 00:02:15,440
flights

00:02:12,560 --> 00:02:17,920
cars hotels for for a traffic right so

00:02:15,440 --> 00:02:21,040
the interesting thing of this

00:02:17,920 --> 00:02:24,400
demo app is that i can

00:02:21,040 --> 00:02:24,800
personalize all these user requests so i

00:02:24,400 --> 00:02:27,599
can

00:02:24,800 --> 00:02:29,200
create completely different type of uh

00:02:27,599 --> 00:02:33,200
of traffic load

00:02:29,200 --> 00:02:35,920
base per per city base per user type

00:02:33,200 --> 00:02:36,640
or just per travel target one travels

00:02:35,920 --> 00:02:39,360
main ball

00:02:36,640 --> 00:02:41,120
flies other stuff could be only by car

00:02:39,360 --> 00:02:41,840
all travels may need some insulin

00:02:41,120 --> 00:02:45,200
discount

00:02:41,840 --> 00:02:48,400
etc right i have also

00:02:45,200 --> 00:02:49,360
a another namespace in this travel demo

00:02:48,400 --> 00:02:50,800
application

00:02:49,360 --> 00:02:53,040
which is going to provide that user

00:02:50,800 --> 00:02:54,879
interface to

00:02:53,040 --> 00:02:57,920
give me visibility of all of these

00:02:54,879 --> 00:03:00,640
travel requests per city

00:02:57,920 --> 00:03:01,840
what which what type of travel is small

00:03:00,640 --> 00:03:04,800
purchases

00:03:01,840 --> 00:03:07,200
and also to will let me to modify the

00:03:04,800 --> 00:03:08,879
simulator so i come from one travel shop

00:03:07,200 --> 00:03:10,560
from one country i can

00:03:08,879 --> 00:03:12,159
increase the rate the the recourse rate

00:03:10,560 --> 00:03:14,319
deal i can

00:03:12,159 --> 00:03:15,920
change the the type of the device that

00:03:14,319 --> 00:03:18,400
you use or the type of

00:03:15,920 --> 00:03:19,680
so that is going to create a more rich

00:03:18,400 --> 00:03:22,400
demo scenario

00:03:19,680 --> 00:03:22,879
that will let me to showcase better all

00:03:22,400 --> 00:03:24,630
the

00:03:22,879 --> 00:03:26,879
the issue capabilities

00:03:24,630 --> 00:03:30,319
[Music]

00:03:26,879 --> 00:03:32,799
okay in this demo we divide

00:03:30,319 --> 00:03:34,720
the steps in a scenario so we would like

00:03:32,799 --> 00:03:38,239
to showcase

00:03:34,720 --> 00:03:40,959
most of the typical situation that when

00:03:38,239 --> 00:03:42,159
some user starts using a service message

00:03:40,959 --> 00:03:44,159
start using istio

00:03:42,159 --> 00:03:45,440
is going to find for example the first

00:03:44,159 --> 00:03:48,799
step will be

00:03:45,440 --> 00:03:50,720
how to migrate or how to see when i have

00:03:48,799 --> 00:03:52,959
some name space

00:03:50,720 --> 00:03:54,879
connected or deployed into the mess but

00:03:52,959 --> 00:03:56,080
all the name space are not yet connected

00:03:54,879 --> 00:03:57,519
into lms

00:03:56,080 --> 00:03:59,519
right so we are going to show how to

00:03:57,519 --> 00:04:02,879
really can hang on that's a scenario

00:03:59,519 --> 00:04:05,439
another typical step

00:04:02,879 --> 00:04:06,000
in the using of the histo service mess

00:04:05,439 --> 00:04:08,959
is

00:04:06,000 --> 00:04:09,599
exposing services through ingress using

00:04:08,959 --> 00:04:11,599
gateways

00:04:09,599 --> 00:04:12,959
right also we're going to show all the

00:04:11,599 --> 00:04:15,680
capabilities of

00:04:12,959 --> 00:04:17,600
observability right we are going to show

00:04:15,680 --> 00:04:20,959
how to build graph with

00:04:17,600 --> 00:04:22,160
one or many namespace uh to see what is

00:04:20,959 --> 00:04:23,600
happening how my services are

00:04:22,160 --> 00:04:25,680
communicating

00:04:23,600 --> 00:04:28,320
and not also we are going to stop that

00:04:25,680 --> 00:04:31,759
so we are going to create

00:04:28,320 --> 00:04:32,400
scenarios for traffic 16 on http or tcp

00:04:31,759 --> 00:04:35,360
traffic

00:04:32,400 --> 00:04:36,560
we are going also to simulate errors to

00:04:35,360 --> 00:04:39,840
test the resilience of

00:04:36,560 --> 00:04:42,080
my systems from very simple way just

00:04:39,840 --> 00:04:45,199
adding delays but also we can also

00:04:42,080 --> 00:04:47,280
increase and add uh

00:04:45,199 --> 00:04:49,520
resilient techniques like secret

00:04:47,280 --> 00:04:50,960
breakers just adding requesting out for

00:04:49,520 --> 00:04:53,360
some specific routine

00:04:50,960 --> 00:04:54,639
and we are going to finish the demo

00:04:53,360 --> 00:04:57,520
showing how

00:04:54,639 --> 00:05:00,400
how kealing can help me to generate

00:04:57,520 --> 00:05:03,840
authorization traffic policies

00:05:00,400 --> 00:05:06,560
for existing traffic right so how i can

00:05:03,840 --> 00:05:07,600
use uh reality to to simplify the

00:05:06,560 --> 00:05:10,560
management of the

00:05:07,600 --> 00:05:11,520
authorization policies within history

00:05:10,560 --> 00:05:13,759
okay so let's

00:05:11,520 --> 00:05:15,199
start with the first scenario so uh

00:05:13,759 --> 00:05:19,120
imagine that i'm

00:05:15,199 --> 00:05:21,600
starting to use uh deploy uh

00:05:19,120 --> 00:05:23,440
application name space into my mess so a

00:05:21,600 --> 00:05:24,160
typical situation is that i'm going to

00:05:23,440 --> 00:05:26,720
have

00:05:24,160 --> 00:05:29,039
namespace that are in mms and other

00:05:26,720 --> 00:05:30,880
namespaces that are talking with this

00:05:29,039 --> 00:05:33,039
other application but are not yet in my

00:05:30,880 --> 00:05:35,759
mess how i can show that right

00:05:33,039 --> 00:05:38,400
so this is my kiali uh this is the

00:05:35,759 --> 00:05:41,520
overview page where i can see the

00:05:38,400 --> 00:05:44,000
travel inc travel portal tower control

00:05:41,520 --> 00:05:45,120
i can filter this name space and i can

00:05:44,000 --> 00:05:48,320
see that

00:05:45,120 --> 00:05:51,759
i have a three name space deploy

00:05:48,320 --> 00:05:54,960
my application but how to see which

00:05:51,759 --> 00:05:58,319
applications have um uh

00:05:54,960 --> 00:05:58,639
are in the mess or not so the way to see

00:05:58,319 --> 00:06:02,000
that

00:05:58,639 --> 00:06:04,000
is using the the wall of view

00:06:02,000 --> 00:06:05,120
or the application view and checking the

00:06:04,000 --> 00:06:08,479
cycles

00:06:05,120 --> 00:06:11,520
so i can uh when i deploy

00:06:08,479 --> 00:06:13,199
a cycle into a wall laws is when i

00:06:11,520 --> 00:06:16,080
connect a wallet into the mess

00:06:13,199 --> 00:06:17,600
right so uh this is something that i can

00:06:16,080 --> 00:06:20,479
check in kiali i can select

00:06:17,600 --> 00:06:21,520
in the world of application view i can

00:06:20,479 --> 00:06:23,600
check

00:06:21,520 --> 00:06:26,319
all the name space that i am migrating

00:06:23,600 --> 00:06:29,440
and i can see that for the travel inc

00:06:26,319 --> 00:06:30,080
are the travel portal all these

00:06:29,440 --> 00:06:34,080
workloads

00:06:30,080 --> 00:06:35,840
are already included the product into

00:06:34,080 --> 00:06:37,680
the ms so they have cycle but not the

00:06:35,840 --> 00:06:38,400
terror control right the target contour

00:06:37,680 --> 00:06:41,120
has a

00:06:38,400 --> 00:06:41,919
sim cycle so i can also click into the

00:06:41,120 --> 00:06:44,240
application

00:06:41,919 --> 00:06:46,160
and it will tell me that i don't detect

00:06:44,240 --> 00:06:48,800
the hd container right

00:06:46,160 --> 00:06:49,280
so what is the next step what i'm going

00:06:48,800 --> 00:06:52,800
to

00:06:49,280 --> 00:06:55,919
to show you is how i can deploy

00:06:52,800 --> 00:06:57,759
this namespace our contouring to ms

00:06:55,919 --> 00:06:59,599
there are several ways to do that i can

00:06:57,759 --> 00:07:01,919
do this manually just with the

00:06:59,599 --> 00:07:03,759
ctl command i can manually inject the

00:07:01,919 --> 00:07:07,199
psi card in my deployment but

00:07:03,759 --> 00:07:10,479
typically another way to do that is to

00:07:07,199 --> 00:07:12,639
annotate in the the namespace

00:07:10,479 --> 00:07:14,080
i can add the enable auto injection

00:07:12,639 --> 00:07:17,120
annotation

00:07:14,080 --> 00:07:18,479
from the overview page i can click into

00:07:17,120 --> 00:07:20,639
the

00:07:18,479 --> 00:07:22,560
the full list view i can see that now

00:07:20,639 --> 00:07:25,759
the travel control

00:07:22,560 --> 00:07:25,759
has the east annotation

00:07:26,080 --> 00:07:32,000
injection label enabled

00:07:29,120 --> 00:07:33,120
and i can see into the word laws that

00:07:32,000 --> 00:07:35,280
annotations mean that

00:07:33,120 --> 00:07:36,800
every time that i deploy a new wall lot

00:07:35,280 --> 00:07:39,840
into this name space

00:07:36,800 --> 00:07:41,599
is2 is going to add the cycle as this

00:07:39,840 --> 00:07:44,720
workload was deployed before

00:07:41,599 --> 00:07:46,800
this annotation i can also go to this

00:07:44,720 --> 00:07:48,479
wireless and enable authentication to

00:07:46,800 --> 00:07:52,560
create the annotation of the

00:07:48,479 --> 00:07:53,520
istio inject manually so what is going

00:07:52,560 --> 00:07:56,720
to do

00:07:53,520 --> 00:07:59,919
right now is is going to deploy the this

00:07:56,720 --> 00:08:02,720
this spot and now i can see how

00:07:59,919 --> 00:08:04,800
the sidecar is applied onto this world

00:08:02,720 --> 00:08:07,199
so i can see the container here

00:08:04,800 --> 00:08:09,440
right i can see that it's not showing

00:08:07,199 --> 00:08:10,639
any warning about that and i can also

00:08:09,440 --> 00:08:13,360
show that

00:08:10,639 --> 00:08:14,240
then point details the low level letters

00:08:13,360 --> 00:08:17,360
of the

00:08:14,240 --> 00:08:20,800
recycle that is properly working

00:08:17,360 --> 00:08:24,080
right okay so that was our first

00:08:20,800 --> 00:08:27,280
scenario what second scenario is

00:08:24,080 --> 00:08:30,639
now that i have um applications

00:08:27,280 --> 00:08:31,039
deploying to the mess the next typical

00:08:30,639 --> 00:08:34,560
step

00:08:31,039 --> 00:08:36,719
is to expose it to outside my cluster

00:08:34,560 --> 00:08:37,599
using the ingress and using the easter

00:08:36,719 --> 00:08:40,640
gateway

00:08:37,599 --> 00:08:43,039
all right how i can do that using qrd so

00:08:40,640 --> 00:08:45,919
yeah remember in this demo application i

00:08:43,039 --> 00:08:45,919
have a service

00:08:46,000 --> 00:08:50,000
the travel control that expose a user

00:08:49,040 --> 00:08:52,720
interface

00:08:50,000 --> 00:08:53,440
what i want to do is to expose these

00:08:52,720 --> 00:08:56,240
services

00:08:53,440 --> 00:08:57,440
to the english how to do that i can go

00:08:56,240 --> 00:08:59,920
to the service

00:08:57,440 --> 00:09:01,440
details i can go to the actions the

00:08:59,920 --> 00:09:04,160
request routines

00:09:01,440 --> 00:09:04,640
and i can generate a very simple generic

00:09:04,160 --> 00:09:06,880
rule

00:09:04,640 --> 00:09:08,000
for this i can add just a rule to say

00:09:06,880 --> 00:09:10,800
okay any request

00:09:08,000 --> 00:09:13,200
to this service is going to is going to

00:09:10,800 --> 00:09:16,480
be route to the control workload

00:09:13,200 --> 00:09:19,680
but i can add an advanced option

00:09:16,480 --> 00:09:22,080
to add this service to the gateway so

00:09:19,680 --> 00:09:24,000
i can add it to a gateway i can select

00:09:22,080 --> 00:09:24,959
an existing gateway or i can create a

00:09:24,000 --> 00:09:28,240
new one

00:09:24,959 --> 00:09:31,440
in this gateway i'm going to um

00:09:28,240 --> 00:09:35,360
in the uh to to write

00:09:31,440 --> 00:09:38,160
the dns the public dns where

00:09:35,360 --> 00:09:40,480
this service will be exposed right in

00:09:38,160 --> 00:09:45,760
this case is control dot server

00:09:40,480 --> 00:09:45,760
that's control dot istio.cluster.org

00:09:46,000 --> 00:09:51,519
okay so this

00:09:49,279 --> 00:09:52,880
is going to generate all the

00:09:51,519 --> 00:09:54,880
configuration required

00:09:52,880 --> 00:09:57,120
a virtual service a destination rule a

00:09:54,880 --> 00:10:01,120
gateway connected to all of them

00:09:57,120 --> 00:10:03,360
and now if i access to the ui i can say

00:10:01,120 --> 00:10:04,399
i can see that this now this this ui is

00:10:03,360 --> 00:10:07,360
exposed

00:10:04,399 --> 00:10:08,000
to outside traffic you know with using

00:10:07,360 --> 00:10:10,959
the

00:10:08,000 --> 00:10:11,440
this class so as i commented in in this

00:10:10,959 --> 00:10:14,480
ui

00:10:11,440 --> 00:10:15,120
can tell me okay what the troubleshoots

00:10:14,480 --> 00:10:18,079
are

00:10:15,120 --> 00:10:18,640
requesting to a tablet inc per ct per

00:10:18,079 --> 00:10:21,839
type

00:10:18,640 --> 00:10:25,279
and i can also change the request ratio

00:10:21,839 --> 00:10:27,600
of this or these tools i can

00:10:25,279 --> 00:10:30,160
modify the setting of my simulators to

00:10:27,600 --> 00:10:32,240
create more heterogeneous traffic and

00:10:30,160 --> 00:10:34,320
to create a more elaborated demo

00:10:32,240 --> 00:10:38,079
scenario okay

00:10:34,320 --> 00:10:39,040
so next one so the next scenario that we

00:10:38,079 --> 00:10:42,079
want to show is

00:10:39,040 --> 00:10:44,720
now that we have this name space

00:10:42,079 --> 00:10:46,079
connected or deployed into the mess i'm

00:10:44,720 --> 00:10:48,079
going to start to receive

00:10:46,079 --> 00:10:49,120
additional information like additional

00:10:48,079 --> 00:10:51,519
telemetry

00:10:49,120 --> 00:10:52,720
about what the traffic is doing

00:10:51,519 --> 00:10:54,880
additional

00:10:52,720 --> 00:10:56,480
tracing signals from the sidecars as

00:10:54,880 --> 00:10:59,920
well and i'm going to

00:10:56,480 --> 00:11:00,720
show you how i can use kiali to build a

00:10:59,920 --> 00:11:03,680
graph from

00:11:00,720 --> 00:11:05,279
one to many name space and i can see the

00:11:03,680 --> 00:11:07,279
details of security

00:11:05,279 --> 00:11:08,720
the request rate the distribution rate

00:11:07,279 --> 00:11:10,880
response time

00:11:08,720 --> 00:11:13,040
with the goal to help me to identify

00:11:10,880 --> 00:11:14,000
critical paths and when i identify some

00:11:13,040 --> 00:11:16,240
world that

00:11:14,000 --> 00:11:17,519
it looks like some critical they may

00:11:16,240 --> 00:11:19,920
have something to test

00:11:17,519 --> 00:11:21,360
so we are going to show details and try

00:11:19,920 --> 00:11:23,279
to correlate more information to

00:11:21,360 --> 00:11:26,160
understand what this world is doing

00:11:23,279 --> 00:11:27,519
right so let's do that in india so how

00:11:26,160 --> 00:11:30,800
to start typically

00:11:27,519 --> 00:11:32,399
we will start with them in the overview

00:11:30,800 --> 00:11:34,240
right in the overview i see all the name

00:11:32,399 --> 00:11:37,440
space that i have in my cluster

00:11:34,240 --> 00:11:39,519
deploy or not into the mess and

00:11:37,440 --> 00:11:40,720
as i commented i exposed the travel

00:11:39,519 --> 00:11:43,920
control name space

00:11:40,720 --> 00:11:46,800
now i start to see the limiting

00:11:43,920 --> 00:11:48,240
and i'm going to show the graph for this

00:11:46,800 --> 00:11:51,279
namespace

00:11:48,240 --> 00:11:51,680
right one of the in this graph i can see

00:11:51,279 --> 00:11:53,519
that

00:11:51,680 --> 00:11:55,839
traffic is is coming from the eastern

00:11:53,519 --> 00:11:57,519
ingress gateway as expected you know is

00:11:55,839 --> 00:12:00,240
calling the control service uh

00:11:57,519 --> 00:12:02,000
to the control workload and as i skype

00:12:00,240 --> 00:12:02,959
this control wallet is talking with the

00:12:02,000 --> 00:12:05,519
target shop

00:12:02,959 --> 00:12:06,560
right to cut information so uh one

00:12:05,519 --> 00:12:08,639
interesting feature

00:12:06,560 --> 00:12:10,639
is that i can build the graph from one

00:12:08,639 --> 00:12:12,720
to many namespace so i see that this

00:12:10,639 --> 00:12:15,200
story contour is talking to the travel

00:12:12,720 --> 00:12:18,320
portal name space so i can add it into

00:12:15,200 --> 00:12:19,760
my graph and i can see that okay that

00:12:18,320 --> 00:12:21,839
our country is talking to

00:12:19,760 --> 00:12:23,120
the teleporter in the teleporter i have

00:12:21,839 --> 00:12:25,920
three shops that are

00:12:23,120 --> 00:12:27,600
talking with the travel sciences i can

00:12:25,920 --> 00:12:30,160
also select the travel inc

00:12:27,600 --> 00:12:31,040
into the graph view and i can build a

00:12:30,160 --> 00:12:34,320
rich graph

00:12:31,040 --> 00:12:36,800
of all of the elements that are talking

00:12:34,320 --> 00:12:40,000
into my into my class right so it's

00:12:36,800 --> 00:12:41,760
pretty interesting so uh let me to

00:12:40,000 --> 00:12:43,200
show several options that i can

00:12:41,760 --> 00:12:45,839
visualize in the graph

00:12:43,200 --> 00:12:47,279
to me the first interesting the first

00:12:45,839 --> 00:12:48,320
one the most interesting one is the

00:12:47,279 --> 00:12:49,920
security so

00:12:48,320 --> 00:12:51,600
one of the benefits or one of the first

00:12:49,920 --> 00:12:52,399
reason that i'm going to deploy my

00:12:51,600 --> 00:12:55,680
application

00:12:52,399 --> 00:12:58,240
into a service mess is to automatically

00:12:55,680 --> 00:13:01,040
have secure all the communication so i

00:12:58,240 --> 00:13:02,959
can display the security option

00:13:01,040 --> 00:13:04,480
here and i can confirm that all the

00:13:02,959 --> 00:13:07,760
traffic that

00:13:04,480 --> 00:13:10,800
is flowing into the mess are

00:13:07,760 --> 00:13:13,519
using mutual tls for communicating so

00:13:10,800 --> 00:13:15,040
it's all secure about that so the next

00:13:13,519 --> 00:13:16,959
interesting option that i recommend to

00:13:15,040 --> 00:13:18,720
use is the traffic animation the traffic

00:13:16,959 --> 00:13:21,920
animation is a

00:13:18,720 --> 00:13:24,079
a visual helper to show uh

00:13:21,920 --> 00:13:25,120
the request rate so it's building this

00:13:24,079 --> 00:13:27,040
animation is built

00:13:25,120 --> 00:13:29,200
based of the of the rate information

00:13:27,040 --> 00:13:32,320
that they collect and i can identify

00:13:29,200 --> 00:13:33,120
uh for example some defense so i can see

00:13:32,320 --> 00:13:35,839
that in this

00:13:33,120 --> 00:13:36,320
this edge this traffic rate i have more

00:13:35,839 --> 00:13:38,320
traffic

00:13:36,320 --> 00:13:39,920
in the hotel's workload compared with

00:13:38,320 --> 00:13:43,040
others apparently right

00:13:39,920 --> 00:13:44,800
so also what i can show is the

00:13:43,040 --> 00:13:46,079
i can show the information that i can

00:13:44,800 --> 00:13:49,360
show the numbers of this

00:13:46,079 --> 00:13:50,880
request rate i can also try to identify

00:13:49,360 --> 00:13:53,920
the distribution

00:13:50,880 --> 00:13:55,120
right and also the response time of all

00:13:53,920 --> 00:13:58,480
my edges right

00:13:55,120 --> 00:14:01,040
so another interesting option that i

00:13:58,480 --> 00:14:03,279
would like to

00:14:01,040 --> 00:14:05,279
include is how to identify critical

00:14:03,279 --> 00:14:06,160
paths so i can query the graph to

00:14:05,279 --> 00:14:08,639
highlight

00:14:06,160 --> 00:14:10,880
uh edges and communication with some

00:14:08,639 --> 00:14:12,880
expression condition right in this case

00:14:10,880 --> 00:14:14,720
i would like to to highlight which or

00:14:12,880 --> 00:14:16,160
the ads that have more than fifty

00:14:14,720 --> 00:14:18,639
percent of the traffic

00:14:16,160 --> 00:14:20,240
right and to see that okay uh i can't

00:14:18,639 --> 00:14:21,279
think that the traverse communication

00:14:20,240 --> 00:14:23,440
with the hotels

00:14:21,279 --> 00:14:25,279
is higher than that the travis

00:14:23,440 --> 00:14:28,000
communication with others

00:14:25,279 --> 00:14:29,519
also another examples of queries that i

00:14:28,000 --> 00:14:32,560
can do is i can query

00:14:29,519 --> 00:14:34,399
not only tcp traffic but i can query

00:14:32,560 --> 00:14:36,320
tcp traffic that this could be

00:14:34,399 --> 00:14:39,519
interesting for example to

00:14:36,320 --> 00:14:41,040
get information about how my travel inc

00:14:39,519 --> 00:14:42,160
workloads are communicating with the

00:14:41,040 --> 00:14:45,199
database

00:14:42,160 --> 00:14:46,880
and i can increase the change the query

00:14:45,199 --> 00:14:49,120
for example to see and i can confirm

00:14:46,880 --> 00:14:51,920
that okay the hotels

00:14:49,120 --> 00:14:54,240
have some big queries compared with uh

00:14:51,920 --> 00:14:57,760
to database compare with others right

00:14:54,240 --> 00:15:01,120
i can also zoom in into the travels

00:14:57,760 --> 00:15:01,120
into the travel service

00:15:01,600 --> 00:15:05,760
i can submit into the travel workload to

00:15:04,240 --> 00:15:09,680
see the debates

00:15:05,760 --> 00:15:09,680
i can for example to show

00:15:10,160 --> 00:15:15,199
more details into the inbound metrics

00:15:15,920 --> 00:15:19,839
i can see i can think that in the

00:15:18,240 --> 00:15:21,519
inbound methods what is incoming from

00:15:19,839 --> 00:15:22,240
the portals and i can see that okay

00:15:21,519 --> 00:15:25,680
especially

00:15:22,240 --> 00:15:29,120
hotels is showing a lot of information

00:15:25,680 --> 00:15:32,320
let's show more interesting features

00:15:29,120 --> 00:15:32,320
right so

00:15:33,199 --> 00:15:38,399
oops okay

00:15:36,240 --> 00:15:40,959
so let me to hide the hidden notes i

00:15:38,399 --> 00:15:43,440
know what they coming okay so let me

00:15:40,959 --> 00:15:44,560
go the hotels has identified that it may

00:15:43,440 --> 00:15:46,639
have some interesting

00:15:44,560 --> 00:15:49,199
information to show another feature that

00:15:46,639 --> 00:15:49,519
i have is that i can click in the whole

00:15:49,199 --> 00:15:51,920
this

00:15:49,519 --> 00:15:53,440
particular application i can show the

00:15:51,920 --> 00:15:54,320
trace that this application is

00:15:53,440 --> 00:15:56,399
collecting

00:15:54,320 --> 00:15:58,160
and i can overlap i can correlate the

00:15:56,399 --> 00:15:59,600
tracing information with the telemetry

00:15:58,160 --> 00:16:00,639
information in my graph so this

00:15:59,600 --> 00:16:03,360
particular

00:16:00,639 --> 00:16:05,440
trace is coming from a portal is calling

00:16:03,360 --> 00:16:07,440
the travels or is traveling into the

00:16:05,440 --> 00:16:11,279
insurance cancer hotels

00:16:07,440 --> 00:16:13,040
and and also talking with the discounts

00:16:11,279 --> 00:16:13,600
and also with the database right so i

00:16:13,040 --> 00:16:16,639
can get

00:16:13,600 --> 00:16:20,560
more this information so i can correlate

00:16:16,639 --> 00:16:20,560
this information also from the charts

00:16:21,199 --> 00:16:26,720
i can put in the charts so uh the same

00:16:24,639 --> 00:16:28,240
the limit information with the tracing

00:16:26,720 --> 00:16:31,040
with the goal to tell me okay

00:16:28,240 --> 00:16:31,839
all these traces are good or are bad how

00:16:31,040 --> 00:16:34,079
i can

00:16:31,839 --> 00:16:35,040
say okay this is slow for my environment

00:16:34,079 --> 00:16:36,639
so this is what we

00:16:35,040 --> 00:16:39,279
decided to do from kiali we tend to

00:16:36,639 --> 00:16:42,959
correlate this station information

00:16:39,279 --> 00:16:44,320
with uh heat mass with other telemetry

00:16:42,959 --> 00:16:45,759
signals just to tell you that for

00:16:44,320 --> 00:16:47,920
example this tracing

00:16:45,759 --> 00:16:48,880
are more or less green that are not slow

00:16:47,920 --> 00:16:51,839
unexpected but

00:16:48,880 --> 00:16:52,720
i have some slow traces that probably

00:16:51,839 --> 00:16:54,720
can get more

00:16:52,720 --> 00:16:57,040
my attention so i can get to the the

00:16:54,720 --> 00:16:59,839
span details and i can see okay this

00:16:57,040 --> 00:17:01,519
particular span from this stage could be

00:16:59,839 --> 00:17:04,319
slow and could be interesting to

00:17:01,519 --> 00:17:05,280
see more details into the jagged ui so

00:17:04,319 --> 00:17:07,760
what i can just

00:17:05,280 --> 00:17:09,280
browse for all the days of this span and

00:17:07,760 --> 00:17:12,079
try to understand

00:17:09,280 --> 00:17:14,160
what could be the bottom with with

00:17:12,079 --> 00:17:16,319
method is taking more time than i

00:17:14,160 --> 00:17:19,600
expected right

00:17:16,319 --> 00:17:21,919
okay so uh then let's show

00:17:19,600 --> 00:17:22,959
a couple of more scenarios so for this

00:17:21,919 --> 00:17:24,959
demo so

00:17:22,959 --> 00:17:27,120
one typical scenario for using service

00:17:24,959 --> 00:17:28,799
mess is also to do advanced traffic

00:17:27,120 --> 00:17:32,000
routines so in this case

00:17:28,799 --> 00:17:34,240
imagine that my developers

00:17:32,000 --> 00:17:36,000
are recommending to create new versions

00:17:34,240 --> 00:17:37,760
for the travel service in the travel

00:17:36,000 --> 00:17:39,679
agency and the database

00:17:37,760 --> 00:17:41,440
that they want to check if this new

00:17:39,679 --> 00:17:42,320
version are performing better than

00:17:41,440 --> 00:17:44,400
others so let's

00:17:42,320 --> 00:17:47,840
let me show you how to do that so i'm

00:17:44,400 --> 00:17:47,840
going to connect to my console

00:17:56,080 --> 00:18:00,320
okay i'm going to deploy the traverse

00:17:58,960 --> 00:18:03,280
version 2

00:18:00,320 --> 00:18:03,280
battle three

00:18:10,480 --> 00:18:15,840
i'm going to deploy the mysql

00:18:17,600 --> 00:18:22,720
okay so uh if i go back to the overview

00:18:21,520 --> 00:18:25,760
i expect that

00:18:22,720 --> 00:18:28,799
in the tablet inc i will have more

00:18:25,760 --> 00:18:32,480
workloads so i can filter the

00:18:28,799 --> 00:18:36,000
wall loss by travel and

00:18:32,480 --> 00:18:39,120
my okay so they are deploying right

00:18:36,000 --> 00:18:42,559
um now what i would like to do

00:18:39,120 --> 00:18:44,799
is to go to the travel service

00:18:42,559 --> 00:18:46,400
that i have now the visibility of the

00:18:44,799 --> 00:18:50,080
three travels uh

00:18:46,400 --> 00:18:50,960
warlords and i would like to to create a

00:18:50,080 --> 00:18:52,720
traffic shifting

00:18:50,960 --> 00:18:54,559
scenario for example i would like to

00:18:52,720 --> 00:18:56,559
keep the 50

00:18:54,559 --> 00:18:59,200
of the traffic for the travels version

00:18:56,559 --> 00:19:02,240
one and i want to test version two

00:18:59,200 --> 00:19:04,000
version c just sending twenty five

00:19:02,240 --> 00:19:06,559
percent of the traffic to these two

00:19:04,000 --> 00:19:08,400
warlords i want to create that

00:19:06,559 --> 00:19:09,679
and i would like to do that for the

00:19:08,400 --> 00:19:12,880
database as well so

00:19:09,679 --> 00:19:13,840
i go to the database this is databases

00:19:12,880 --> 00:19:15,840
fully tcp

00:19:13,840 --> 00:19:17,039
i'm going to create a tcp traffic shift

00:19:15,840 --> 00:19:20,799
in a scenario

00:19:17,039 --> 00:19:25,200
in the same way i'm going to show 50

00:19:20,799 --> 00:19:30,240
here um

00:19:25,200 --> 00:19:30,240
but 25 to this order sli

00:19:33,360 --> 00:19:40,400
okay so uh this is uh

00:19:37,039 --> 00:19:41,760
we are going to to see how in if i click

00:19:40,400 --> 00:19:45,520
into the travels

00:19:41,760 --> 00:19:49,360
one second into a travis application

00:19:45,520 --> 00:19:53,600
and i display the request distribution

00:19:49,360 --> 00:19:58,000
i expect no sorry

00:19:53,600 --> 00:20:01,760
okay i wanted to zoom into the

00:19:58,000 --> 00:20:04,159
into the version up graph and i want to

00:20:01,760 --> 00:20:04,159
zoom

00:20:04,840 --> 00:20:07,840
into

00:20:09,120 --> 00:20:15,679
okay i don't know why i'm showing this

00:20:12,799 --> 00:20:15,679
inner notes

00:20:16,000 --> 00:20:22,720
okay i wanted to zoom into the

00:20:19,360 --> 00:20:23,520
travels app and i will okay this is what

00:20:22,720 --> 00:20:27,600
i wanted to show

00:20:23,520 --> 00:20:29,520
okay so now i see that i'm sending

00:20:27,600 --> 00:20:31,520
uh i have a built-in service defined in

00:20:29,520 --> 00:20:33,760
the travels and i'm sending

00:20:31,520 --> 00:20:34,880
most of the traffic to the persian one

00:20:33,760 --> 00:20:37,919
right

00:20:34,880 --> 00:20:41,360
okay so uh a couple of

00:20:37,919 --> 00:20:44,400
last uh scenario before that

00:20:41,360 --> 00:20:45,919
that we end this this quick demo

00:20:44,400 --> 00:20:48,400
so we are going to introduce a full

00:20:45,919 --> 00:20:49,679
injection scenario so we have identified

00:20:48,400 --> 00:20:53,120
that the hotels

00:20:49,679 --> 00:20:54,799
is is having a lot of traffic compared

00:20:53,120 --> 00:20:57,919
with others so

00:20:54,799 --> 00:21:00,880
if istio service mess allows me to

00:20:57,919 --> 00:21:02,799
to test the resilience of my system

00:21:00,880 --> 00:21:04,559
introducing errors right so it's

00:21:02,799 --> 00:21:06,960
something that we can create

00:21:04,559 --> 00:21:07,679
what we call a foul injection scenario

00:21:06,960 --> 00:21:10,720
so

00:21:07,679 --> 00:21:13,280
i can do that go into the hotel service

00:21:10,720 --> 00:21:13,840
i can click the actions to create a full

00:21:13,280 --> 00:21:16,240
injection

00:21:13,840 --> 00:21:18,080
scenario i can add an extender and a

00:21:16,240 --> 00:21:21,520
standard delay

00:21:18,080 --> 00:21:23,120
and kia is going to generate the virtual

00:21:21,520 --> 00:21:26,240
services initial service

00:21:23,120 --> 00:21:28,480
for this for this service

00:21:26,240 --> 00:21:30,400
introducing this this form so this

00:21:28,480 --> 00:21:33,120
information is going to

00:21:30,400 --> 00:21:33,919
uh to be propriety to the cycle and and

00:21:33,120 --> 00:21:36,960
is going to

00:21:33,919 --> 00:21:39,200
introduce error for for this service

00:21:36,960 --> 00:21:39,200
so

00:21:40,159 --> 00:21:46,320
now if i go to the to the graph and i

00:21:43,600 --> 00:21:49,919
display the response time

00:21:46,320 --> 00:21:53,280
now with this error uh scenario

00:21:49,919 --> 00:21:57,760
i expect that at some point i

00:21:53,280 --> 00:22:03,919
may see let me see if

00:21:57,760 --> 00:22:03,919
i start to see some response times

00:22:06,400 --> 00:22:09,520
okay so now i see updating the telemetry

00:22:08,720 --> 00:22:12,880
that is

00:22:09,520 --> 00:22:15,360
sending this

00:22:12,880 --> 00:22:16,240
okay so now i can query and i can ask

00:22:15,360 --> 00:22:18,640
okay what

00:22:16,240 --> 00:22:19,440
how is the impact of a slow warlord in

00:22:18,640 --> 00:22:21,840
my

00:22:19,440 --> 00:22:24,960
in my word loss in my and my graph right

00:22:21,840 --> 00:22:28,320
so let's need to show that with

00:22:24,960 --> 00:22:30,080
all the walls on my system and this

00:22:28,320 --> 00:22:33,520
query can tell me okay

00:22:30,080 --> 00:22:37,039
how the impact of an error is is slowing

00:22:33,520 --> 00:22:39,840
all the the the traffic into this system

00:22:37,039 --> 00:22:40,320
right so this is one scenario we wanted

00:22:39,840 --> 00:22:44,640
to show

00:22:40,320 --> 00:22:46,720
right how to query that also um

00:22:44,640 --> 00:22:47,760
let me do query with more details in the

00:22:46,720 --> 00:22:50,960
hotel service

00:22:47,760 --> 00:22:54,880
i can go to the inbound metrics

00:22:50,960 --> 00:22:58,720
i am trying to

00:22:54,880 --> 00:23:00,960
show local version

00:22:58,720 --> 00:23:02,000
by destination and i can see in the emo

00:23:00,960 --> 00:23:05,039
metrics that

00:23:02,000 --> 00:23:07,679
uh you know an average i'm introducing

00:23:05,039 --> 00:23:08,960
five seconds delay for this service but

00:23:07,679 --> 00:23:12,240
with peaks

00:23:08,960 --> 00:23:14,720
to two times the the the

00:23:12,240 --> 00:23:15,280
five seconds up to two to ten to ten

00:23:14,720 --> 00:23:18,400
seconds

00:23:15,280 --> 00:23:20,159
of our delay and i can show that into

00:23:18,400 --> 00:23:23,520
the graph how the impact of

00:23:20,159 --> 00:23:24,320
our of a slow wallow can affect to my

00:23:23,520 --> 00:23:26,559
whole graph

00:23:24,320 --> 00:23:26,559
okay

00:23:28,720 --> 00:23:35,360
okay so let me to uh

00:23:31,840 --> 00:23:38,400
to finish my my demo with a security

00:23:35,360 --> 00:23:39,919
scenario so now that i have all my

00:23:38,400 --> 00:23:43,440
communication

00:23:39,919 --> 00:23:46,000
right so i'm going to show you how i can

00:23:43,440 --> 00:23:49,520
tell kealy that okay now

00:23:46,000 --> 00:23:51,279
uh i want to create additional traffic

00:23:49,520 --> 00:23:53,760
policies for the travel inc

00:23:51,279 --> 00:23:55,679
world so i can go to the namespace and

00:23:53,760 --> 00:23:56,799
go to the actions create the traffic

00:23:55,679 --> 00:23:59,840
policies

00:23:56,799 --> 00:24:02,559
so it's still i'm going to generate kl

00:23:59,840 --> 00:24:02,559
is going to integrate

00:24:02,799 --> 00:24:05,919
more restrictive authorization policy

00:24:04,799 --> 00:24:09,120
for the world so

00:24:05,919 --> 00:24:10,880
only the existing traffic at that moment

00:24:09,120 --> 00:24:12,720
are going to be allowed to communicate

00:24:10,880 --> 00:24:13,600
with the world for example i'm going to

00:24:12,720 --> 00:24:17,120
create

00:24:13,600 --> 00:24:18,720
a deny or authorization policy rule for

00:24:17,120 --> 00:24:21,600
all this name space

00:24:18,720 --> 00:24:22,559
and i'm going to allow to create

00:24:21,600 --> 00:24:24,880
specific

00:24:22,559 --> 00:24:26,400
author essential policies for all the

00:24:24,880 --> 00:24:29,840
works

00:24:26,400 --> 00:24:32,000
so now i want to show this

00:24:29,840 --> 00:24:33,600
scenario so it's the communication is

00:24:32,000 --> 00:24:37,039
secure but i want to deploy

00:24:33,600 --> 00:24:37,039
a new uh

00:24:39,440 --> 00:24:43,039
a new wall load to show that this new

00:24:42,480 --> 00:24:44,960
world

00:24:43,039 --> 00:24:47,840
is not authorized to talk with the

00:24:44,960 --> 00:24:47,840
travel inc

00:24:49,760 --> 00:24:56,960
okay so i think that

00:24:53,600 --> 00:24:58,559
i have now in the travel portal a new

00:24:56,960 --> 00:25:02,240
warlord

00:24:58,559 --> 00:25:02,240
called lord balancer

00:25:03,600 --> 00:25:06,240
not yet

00:25:06,720 --> 00:25:12,400
okay lord tester sorry and now i expect

00:25:10,240 --> 00:25:15,520
that this

00:25:12,400 --> 00:25:19,279
new warlord we should

00:25:15,520 --> 00:25:19,279
start showing telemetry

00:25:21,360 --> 00:25:25,200
okay it's not yet working i guess it's

00:25:24,080 --> 00:25:28,240
starting to

00:25:25,200 --> 00:25:31,840
okay now it is so let me do

00:25:28,240 --> 00:25:31,840
to zoom in to this

00:25:32,960 --> 00:25:38,240
to travels inc okay so

00:25:36,559 --> 00:25:40,720
this is what we wanted to show what we

00:25:38,240 --> 00:25:41,039
did so we create authorization policies

00:25:40,720 --> 00:25:43,200
for

00:25:41,039 --> 00:25:44,080
existing traffic so all the previous

00:25:43,200 --> 00:25:46,799
world laws

00:25:44,080 --> 00:25:48,880
were working quarterly but now we deploy

00:25:46,799 --> 00:25:50,960
a new law tester

00:25:48,880 --> 00:25:52,640
warlord that has not the rights to

00:25:50,960 --> 00:25:55,760
access the tabernac

00:25:52,640 --> 00:25:56,240
so i will see how the istio you should

00:25:55,760 --> 00:25:59,200
show

00:25:56,240 --> 00:26:00,880
that okay all the communication is not

00:25:59,200 --> 00:26:03,520
permitted it's for reading and it's

00:26:00,880 --> 00:26:05,760
just re denying the request to this

00:26:03,520 --> 00:26:05,760
right

00:26:05,919 --> 00:26:12,640
okay so uh yeah this is

00:26:09,200 --> 00:26:16,480
this was a very quick um introduction

00:26:12,640 --> 00:26:20,080
to how to use easter with kiali yes uh

00:26:16,480 --> 00:26:21,039
remember a very long version of this

00:26:20,080 --> 00:26:24,240
tutorial with

00:26:21,039 --> 00:26:26,320
more use cases to how to use kiali to

00:26:24,240 --> 00:26:26,960
visualize and operate issues available

00:26:26,320 --> 00:26:30,559
under kia

00:26:26,960 --> 00:26:33,120
dot io under the tutorial section uh

00:26:30,559 --> 00:26:34,960
thank you for watching so we are at

00:26:33,120 --> 00:26:37,440
keali projecting peter

00:26:34,960 --> 00:26:38,960
kiali ruining history light or free nose

00:26:37,440 --> 00:26:44,000
or any question please

00:26:38,960 --> 00:26:44,000

YouTube URL: https://www.youtube.com/watch?v=hrzf_oeRsuQ


