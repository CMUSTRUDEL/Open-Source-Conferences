Title: Kubernetes and Service Mesh Upgrade Automobile Company’s IT Infrastructure - Chaomeng Zhang, Huawei
Publication date: 2021-05-05
Playlist: ServiceMeshCon EU 2021
Description: 
	Don’t miss out! Join us at our upcoming event: KubeCon + CloudNativeCon North America 2021 in Los Angeles, CA from October 12-15. Learn more at https://kubecon.io The conference features presentations from developers and end users of Kubernetes, Prometheus, Envoy, and all of the other CNCF-hosted projects.

Kubernetes and Service Mesh Upgrade Automobile Company’s IT Infrastructure - Chaomeng Zhang, Huawei

Rapid business development brings a great challenge to automobile manufacturing company’s IT platforms. In this presentation, Chaomeng will share a practice of upgrading the traditional IT built microservice platform to cloud native infrastructure. That is gradually transforming the self-developed inner DNS plus ELB for service discovery and load balance, per VM nginx for inbound traffic management, metric, and access log, to Kubernetes and service mesh.

The practice solves the problems that every service request crosses too many heterogeneous middleware and proxies, and turns out to provide lightweight resource management, auto-scaling, canary, non-intrusive and transparent traffic management, security and observability on a consistent infrastructure, and thus improve ops efficiency, makes ops work simpler and easier.
Captions: 
	00:00:00,000 --> 00:00:06,160
hello everyone i'm trauma from ori

00:00:03,600 --> 00:00:06,720
our topic today is coolness and source

00:00:06,160 --> 00:00:09,599
mesh

00:00:06,720 --> 00:00:11,519
part with autumn build company's it

00:00:09,599 --> 00:00:14,639
infrastructure

00:00:11,519 --> 00:00:18,240
i will introduce a search match practice

00:00:14,639 --> 00:00:21,600
in production environment since launched

00:00:18,240 --> 00:00:24,480
in 2018 huawei

00:00:21,600 --> 00:00:26,480
application systems has served a large

00:00:24,480 --> 00:00:29,519
number of customers

00:00:26,480 --> 00:00:31,760
the practice is bought one of them a

00:00:29,519 --> 00:00:34,880
leading automobile manufacturer

00:00:31,760 --> 00:00:38,079
in china i will introduce

00:00:34,880 --> 00:00:41,520
how cloud native helped upgrade their

00:00:38,079 --> 00:00:41,520
itv infrastructure

00:00:42,719 --> 00:00:48,000
about me an architect employee

00:00:46,160 --> 00:00:51,280
applications this match

00:00:48,000 --> 00:00:54,160
currently develop cognitive projects

00:00:51,280 --> 00:00:55,840
such as sales mesh kubernetes and

00:00:54,160 --> 00:00:58,000
microsoft

00:00:55,840 --> 00:00:58,879
and also how to promote such national

00:00:58,000 --> 00:01:01,920
coordinating

00:00:58,879 --> 00:01:04,640
channel i'm also a book

00:01:01,920 --> 00:01:05,680
called native service match is to help

00:01:04,640 --> 00:01:09,040
people learn such

00:01:05,680 --> 00:01:09,040
much and their history

00:01:09,760 --> 00:01:15,280
my talks include following three parts

00:01:13,040 --> 00:01:16,880
the first part is the consumer's

00:01:15,280 --> 00:01:20,159
business background

00:01:16,880 --> 00:01:21,040
and current solution the second part is

00:01:20,159 --> 00:01:23,360
about

00:01:21,040 --> 00:01:25,040
the challenge of current solution and

00:01:23,360 --> 00:01:28,080
most importantly

00:01:25,040 --> 00:01:29,759
target cognitive solution to solve these

00:01:28,080 --> 00:01:32,320
challenges

00:01:29,759 --> 00:01:33,600
and finally i will introduce how to

00:01:32,320 --> 00:01:38,320
migrate

00:01:33,600 --> 00:01:38,320
current solution to a targeted cognitive

00:01:38,840 --> 00:01:42,159
solution

00:01:40,159 --> 00:01:43,600
customer is a leading automobile

00:01:42,159 --> 00:01:46,720
manufacturer

00:01:43,600 --> 00:01:49,600
with the growth of ultimate automobile

00:01:46,720 --> 00:01:50,640
demand in china the company's business

00:01:49,600 --> 00:01:54,079
developed

00:01:50,640 --> 00:01:57,840
dramatically especially learn new

00:01:54,079 --> 00:02:01,680
energy vehicles and put great pressure

00:01:57,840 --> 00:02:04,560
on their itin infrastructure such as

00:02:01,680 --> 00:02:05,119
increased complexity as application

00:02:04,560 --> 00:02:08,879
becomes

00:02:05,119 --> 00:02:13,760
complicated and needs to integrate with

00:02:08,879 --> 00:02:16,879
other platforms also increased capacity

00:02:13,760 --> 00:02:20,560
and number of vehicles increased also

00:02:16,879 --> 00:02:22,640
the most security requirements include

00:02:20,560 --> 00:02:24,959
excess control and their space

00:02:22,640 --> 00:02:28,080
authentication

00:02:24,959 --> 00:02:32,800
also heaven bob's work are high

00:02:28,080 --> 00:02:32,800
and high actually cause a big problem

00:02:35,360 --> 00:02:40,879
this is a current architecture the

00:02:38,319 --> 00:02:43,440
customer acting engineer told us

00:02:40,879 --> 00:02:44,160
they seemed known for the popular

00:02:43,440 --> 00:02:47,519
microsoft

00:02:44,160 --> 00:02:51,040
framework several years ago instead

00:02:47,519 --> 00:02:54,319
filled their own microsoft platform

00:02:51,040 --> 00:02:58,000
is our dns lb

00:02:54,319 --> 00:03:00,959
and ngox and provides service discovery

00:02:58,000 --> 00:03:02,080
for advancement in an independent

00:03:00,959 --> 00:03:05,200
platform

00:03:02,080 --> 00:03:07,599
rather than education

00:03:05,200 --> 00:03:10,000
the total architecture greatly depends

00:03:07,599 --> 00:03:12,800
on the central dlv

00:03:10,000 --> 00:03:13,440
which provides broadband for internal

00:03:12,800 --> 00:03:17,680
service

00:03:13,440 --> 00:03:20,159
communication and dns is responsible for

00:03:17,680 --> 00:03:22,400
internal service resolution

00:03:20,159 --> 00:03:23,599
ingress injects provided to our

00:03:22,400 --> 00:03:26,879
destination

00:03:23,599 --> 00:03:30,080
for multi-wealth class traffic

00:03:26,879 --> 00:03:32,239
and zoom plays the role of our service

00:03:30,080 --> 00:03:35,280
application delivery

00:03:32,239 --> 00:03:39,040
andreas foundation proxy traffic

00:03:35,280 --> 00:03:39,040
through local service instance

00:03:42,000 --> 00:03:46,080
to better understand the difference of a

00:03:44,720 --> 00:03:48,799
current solution

00:03:46,080 --> 00:03:49,280
and targeted cognitive solution we will

00:03:48,799 --> 00:03:51,840
compare

00:03:49,280 --> 00:03:54,239
the abstraction view of two

00:03:51,840 --> 00:03:56,239
architectures

00:03:54,239 --> 00:03:57,599
an obstruction of the current

00:03:56,239 --> 00:04:01,920
architecture will look

00:03:57,599 --> 00:04:04,480
like this top application layer

00:04:01,920 --> 00:04:06,560
applications are developed with

00:04:04,480 --> 00:04:09,200
multi-language

00:04:06,560 --> 00:04:09,840
and the third layer is responsible for

00:04:09,200 --> 00:04:13,280
deploying

00:04:09,840 --> 00:04:18,079
environment currently applications

00:04:13,280 --> 00:04:21,600
are deployed on virtual machine and bms

00:04:18,079 --> 00:04:25,440
the central part is the secondly prevent

00:04:21,600 --> 00:04:28,960
service management by integrating dlp

00:04:25,440 --> 00:04:32,479
and engineers because of the

00:04:28,960 --> 00:04:35,840
second layer microservice platform

00:04:32,479 --> 00:04:40,240
so applications are mainly developed

00:04:35,840 --> 00:04:40,240
in springfield instead of

00:04:40,840 --> 00:04:45,440
clone

00:04:43,040 --> 00:04:46,560
and this is the obstruction of target

00:04:45,440 --> 00:04:49,520
solution

00:04:46,560 --> 00:04:50,160
compared with the previous one the main

00:04:49,520 --> 00:04:53,040
difference

00:04:50,160 --> 00:04:54,400
is the second layer and the circular

00:04:53,040 --> 00:04:58,080
replacing the elb

00:04:54,400 --> 00:05:00,880
dns injects integrated platform

00:04:58,080 --> 00:05:02,400
with a unified sales match

00:05:00,880 --> 00:05:05,520
infrastructure

00:05:02,400 --> 00:05:08,880
and upgrade deployment from

00:05:05,520 --> 00:05:11,759
vm and bms to commits

00:05:08,880 --> 00:05:13,600
we can see the total architecture and

00:05:11,759 --> 00:05:17,199
options a lot

00:05:13,600 --> 00:05:20,639
so our customer engineer called their

00:05:17,199 --> 00:05:24,080
current solution itself developed

00:05:20,639 --> 00:05:27,680
much like infrastructure before the

00:05:24,080 --> 00:05:27,680
period of stress match

00:05:30,880 --> 00:05:34,880
next we will introduce the challenge of

00:05:33,680 --> 00:05:38,400
current solution

00:05:34,880 --> 00:05:41,120
through several effects and focus on

00:05:38,400 --> 00:05:41,759
how the target cognitive solution solves

00:05:41,120 --> 00:05:45,280
this

00:05:41,759 --> 00:05:45,280
challenges perspective

00:05:48,400 --> 00:05:52,560
first let's see the first discovery and

00:05:50,880 --> 00:05:56,080
the world balance

00:05:52,560 --> 00:05:57,840
with current solutions dns and elb

00:05:56,080 --> 00:05:59,120
they are important role in

00:05:57,840 --> 00:06:03,360
self-discovery and

00:05:59,120 --> 00:06:06,160
romance there is real instance

00:06:03,360 --> 00:06:07,120
until there will be a registered

00:06:06,160 --> 00:06:10,240
salesman

00:06:07,120 --> 00:06:12,880
and the iowa key yes

00:06:10,240 --> 00:06:13,520
consumer accordions understand requests

00:06:12,880 --> 00:06:16,160
to

00:06:13,520 --> 00:06:18,560
resolve your reaction and you'll be

00:06:16,160 --> 00:06:21,840
administering traffic to selected

00:06:18,560 --> 00:06:21,840
beyond business

00:06:22,960 --> 00:06:28,479
request to local

00:06:26,080 --> 00:06:28,479
service

00:06:31,840 --> 00:06:35,840
and with target solution

00:06:36,479 --> 00:06:40,800
could mean an issue no new service

00:06:39,280 --> 00:06:42,800
relationship

00:06:40,800 --> 00:06:44,880
hd will automatically retrieve

00:06:42,800 --> 00:06:48,160
registered registration

00:06:44,880 --> 00:06:50,319
data from companies can't step outside

00:06:48,160 --> 00:06:53,440
intercept traffic

00:06:50,319 --> 00:06:54,319
and perform service discovery then send

00:06:53,440 --> 00:06:57,360
a request to

00:06:54,319 --> 00:06:57,680
what i selected instance and the service

00:06:57,360 --> 00:07:00,720
that

00:06:57,680 --> 00:07:01,599
talks they just accept traffic and

00:07:00,720 --> 00:07:06,160
perform

00:07:01,599 --> 00:07:06,160
service cell subject management

00:07:09,680 --> 00:07:16,000
compare two solutions by following

00:07:12,720 --> 00:07:19,599
views first as for service

00:07:16,000 --> 00:07:22,800
registry a foreign name and

00:07:19,599 --> 00:07:25,680
you'll be registered for dns on the

00:07:22,800 --> 00:07:28,000
right time known in the relationship

00:07:25,680 --> 00:07:29,520
and then for service discovery the

00:07:28,000 --> 00:07:32,080
former is by

00:07:29,520 --> 00:07:34,560
and dms and the ledger is that match

00:07:32,080 --> 00:07:36,800
discipline and control plan

00:07:34,560 --> 00:07:37,919
the former load balance briefly depends

00:07:36,800 --> 00:07:41,840
on erp

00:07:37,919 --> 00:07:44,800
and the letter is by climb standpoint

00:07:41,840 --> 00:07:45,759
one deployed a new service with current

00:07:44,800 --> 00:07:48,720
solution

00:07:45,759 --> 00:07:50,400
administrators have to manually register

00:07:48,720 --> 00:07:53,440
your sales name

00:07:50,400 --> 00:07:56,639
to dms by the retirement solution

00:07:53,440 --> 00:07:59,280
you still can get the service and its

00:07:56,639 --> 00:08:01,360
search distance automatically from

00:07:59,280 --> 00:08:03,680
commits

00:08:01,360 --> 00:08:05,440
with current solution consumers need to

00:08:03,680 --> 00:08:08,639
send requests to

00:08:05,440 --> 00:08:12,639
internal erb and there will be an inject

00:08:08,639 --> 00:08:14,720
act as a static property

00:08:12,639 --> 00:08:16,160
and with target solution consumer

00:08:14,720 --> 00:08:19,199
standard request

00:08:16,160 --> 00:08:22,080
for targeted service request is

00:08:19,199 --> 00:08:22,400
adopted by a managed data plan which act

00:08:22,080 --> 00:08:25,360
as

00:08:22,400 --> 00:08:26,400
a transparent policy or form service

00:08:25,360 --> 00:08:29,199
discovery

00:08:26,400 --> 00:08:29,199
and environments

00:08:32,640 --> 00:08:38,320
next is canary release

00:08:35,839 --> 00:08:40,000
clarity is one important part in our

00:08:38,320 --> 00:08:42,399
customers data network

00:08:40,000 --> 00:08:44,800
with current solutions the op is

00:08:42,399 --> 00:08:47,760
responsible for routing traffic to

00:08:44,800 --> 00:08:49,760
their instance and the traffic to a

00:08:47,760 --> 00:08:53,200
different version depends on

00:08:49,760 --> 00:08:55,680
the number of instances and there are

00:08:53,200 --> 00:08:57,279
three instances of version one and two

00:08:55,680 --> 00:09:00,320
instances of version two

00:08:57,279 --> 00:09:01,519
so like sixty percent traffic will be

00:09:00,320 --> 00:09:05,680
sent to version one

00:09:01,519 --> 00:09:05,680
and forty percent for the central

00:09:06,839 --> 00:09:11,600
version

00:09:08,399 --> 00:09:13,839
in the target solution by each

00:09:11,600 --> 00:09:16,080
traffic rate for different conversion

00:09:13,839 --> 00:09:19,279
can be specified

00:09:16,080 --> 00:09:20,240
which or version controls proportion of

00:09:19,279 --> 00:09:23,920
traffic

00:09:20,240 --> 00:09:24,800
each version of the state for them as a

00:09:23,920 --> 00:09:27,839
above

00:09:24,800 --> 00:09:28,800
result thirty percent shafted to

00:09:27,839 --> 00:09:31,360
instance of

00:09:28,800 --> 00:09:33,519
version two and the other seventy

00:09:31,360 --> 00:09:36,959
percent traffic will be in europe

00:09:33,519 --> 00:09:39,760
version one no matter how many instances

00:09:36,959 --> 00:09:39,760
this version has

00:09:42,399 --> 00:09:46,560
instead of providing weighted policy

00:09:44,880 --> 00:09:49,360
says match can control

00:09:46,560 --> 00:09:51,600
only the traffic match the condition is

00:09:49,360 --> 00:09:54,560
looking into a certain version

00:09:51,600 --> 00:09:55,440
the connection is related to protocol

00:09:54,560 --> 00:09:59,200
and for

00:09:55,440 --> 00:10:03,200
http destination can be

00:09:59,200 --> 00:10:06,880
http hydra source ip

00:10:03,200 --> 00:10:09,440
and so on this manifests mixed with us

00:10:06,880 --> 00:10:10,160
with easy very good highlight based

00:10:09,440 --> 00:10:13,200
energy

00:10:10,160 --> 00:10:19,839
version 2 and the other still isn't

00:10:13,200 --> 00:10:19,839
the default version 1.

00:10:20,800 --> 00:10:24,880
with the target solution cell smash can

00:10:23,279 --> 00:10:28,079
do canary release

00:10:24,880 --> 00:10:31,680
for a group of cells just

00:10:28,079 --> 00:10:33,920
as root for the first service

00:10:31,680 --> 00:10:35,680
and the other safe in the group where

00:10:33,920 --> 00:10:38,720
following the route

00:10:35,680 --> 00:10:42,000
makes traffic from version one

00:10:38,720 --> 00:10:47,839
to version one and from version two

00:10:42,000 --> 00:10:47,839
it's into version two

00:10:50,320 --> 00:10:54,480
this table summarizes difference of two

00:10:53,200 --> 00:10:57,600
canary

00:10:54,480 --> 00:10:58,560
as for weighted policy is the current

00:10:57,600 --> 00:11:01,920
solution

00:10:58,560 --> 00:11:04,959
which is controlled by instance number

00:11:01,920 --> 00:11:05,839
and with target solution which can be

00:11:04,959 --> 00:11:09,120
expressed by

00:11:05,839 --> 00:11:10,959
flexible and former the north support

00:11:09,120 --> 00:11:13,760
traffic match policy

00:11:10,959 --> 00:11:14,880
and later can control good traffic to a

00:11:13,760 --> 00:11:18,560
certain

00:11:14,880 --> 00:11:21,040
version according to match convention

00:11:18,560 --> 00:11:21,600
my current solution now support f4

00:11:21,040 --> 00:11:24,959
tracking

00:11:21,600 --> 00:11:26,000
only support for traffic entire solution

00:11:24,959 --> 00:11:29,360
can support

00:11:26,000 --> 00:11:34,079
both l7 and alpha include

00:11:29,360 --> 00:11:37,120
tcp gis http javascript

00:11:34,079 --> 00:11:39,680
and with current solution some l7

00:11:37,120 --> 00:11:41,440
policy is developed in evolution

00:11:39,680 --> 00:11:44,320
acquisition course

00:11:41,440 --> 00:11:45,519
but with target solutions all respected

00:11:44,320 --> 00:11:50,000
for

00:11:45,519 --> 00:11:50,000
no need any changing of operation code

00:11:52,480 --> 00:11:56,880
as mentioned in application background

00:11:55,360 --> 00:11:58,959
there are increasingly

00:11:56,880 --> 00:12:00,000
security requirements for the

00:11:58,959 --> 00:12:02,959
development of

00:12:00,000 --> 00:12:03,920
customer business by with current

00:12:02,959 --> 00:12:07,120
solution

00:12:03,920 --> 00:12:10,800
volunteers permission is provided

00:12:07,120 --> 00:12:13,519
for universe traffic that is injects

00:12:10,800 --> 00:12:14,880
provide care examination all

00:12:13,519 --> 00:12:18,160
applications have to

00:12:14,880 --> 00:12:21,040
develop https service

00:12:18,160 --> 00:12:23,279
and maintain key and the certificate by

00:12:21,040 --> 00:12:26,240
themselves

00:12:23,279 --> 00:12:27,839
and access control is embedded in the

00:12:26,240 --> 00:12:32,079
application

00:12:27,839 --> 00:12:32,079
for some confidential increase

00:12:35,040 --> 00:12:42,160
and with the target solution provide

00:12:38,399 --> 00:12:43,279
transparent security variety as

00:12:42,160 --> 00:12:47,120
commissioned by

00:12:43,279 --> 00:12:48,639
gateway operator only useful upload key

00:12:47,120 --> 00:12:51,680
and certificate

00:12:48,639 --> 00:12:52,880
in the form of complete security and you

00:12:51,680 --> 00:12:54,720
still also offers

00:12:52,880 --> 00:12:56,399
mutual fears for transport

00:12:54,720 --> 00:12:58,639
authentication

00:12:56,399 --> 00:13:00,639
just you may be avoided without any

00:12:58,639 --> 00:13:06,000
sense questions

00:13:00,639 --> 00:13:08,079
include provided service to service

00:13:06,000 --> 00:13:09,200
come seeking service to service

00:13:08,079 --> 00:13:11,680
communication

00:13:09,200 --> 00:13:12,800
and provide each service with an

00:13:11,680 --> 00:13:16,000
intendedly

00:13:12,800 --> 00:13:16,000
representing visible

00:13:16,079 --> 00:13:20,560
and also can onward automate key and

00:13:19,040 --> 00:13:23,200
certificate transition

00:13:20,560 --> 00:13:25,040
competition and that distribution

00:13:23,200 --> 00:13:27,360
provide authorities

00:13:25,040 --> 00:13:30,560
access control for target service or

00:13:27,360 --> 00:13:30,560
target service members

00:13:33,680 --> 00:13:37,920
this table also shows the difference of

00:13:36,320 --> 00:13:41,040
food security

00:13:37,920 --> 00:13:44,000
both providing pure estimation and glt

00:13:41,040 --> 00:13:44,639
authentication while the former do not

00:13:44,000 --> 00:13:47,360
provide

00:13:44,639 --> 00:13:48,480
any service to service security and

00:13:47,360 --> 00:13:51,680
landlord provides

00:13:48,480 --> 00:13:54,480
neutral tls authentication by policy

00:13:51,680 --> 00:13:55,600
transparent trs encryption a key

00:13:54,480 --> 00:13:58,480
management system

00:13:55,600 --> 00:13:59,360
ultimate key and certificate generation

00:13:58,480 --> 00:14:02,399
distribution

00:13:59,360 --> 00:14:05,440
and rotation and

00:14:02,399 --> 00:14:08,560
provide flexible access control

00:14:05,440 --> 00:14:13,440
custom condition such as

00:14:08,560 --> 00:14:13,440
either socks or target edges

00:14:13,519 --> 00:14:18,480
and entire solution needs our customer

00:14:17,199 --> 00:14:22,639
security become

00:14:18,480 --> 00:14:22,639
perfect in its practice

00:14:25,199 --> 00:14:31,760
when a system becoming complicated

00:14:28,639 --> 00:14:34,959
of the ability to captured and

00:14:31,760 --> 00:14:36,240
optimize the applications by the way the

00:14:34,959 --> 00:14:38,800
current solution

00:14:36,240 --> 00:14:39,920
on parallel injects generates excess

00:14:38,800 --> 00:14:44,959
love

00:14:39,920 --> 00:14:47,279
and energized by its order export magic

00:14:44,959 --> 00:14:48,720
choosing agent meaning this node can

00:14:47,279 --> 00:14:53,040
generate systems for

00:14:48,720 --> 00:14:53,040
java and for java applications

00:14:54,079 --> 00:14:57,920
but with target solution you still can

00:14:56,480 --> 00:15:01,040
generate magic

00:14:57,920 --> 00:15:04,959
trees and access love for all sorts by

00:15:01,040 --> 00:15:08,240
sim cards service developers do not need

00:15:04,959 --> 00:15:10,839
any extra work for this first

00:15:08,240 --> 00:15:12,079
proxy will generate service arbitrary

00:15:10,839 --> 00:15:16,880
matches

00:15:12,079 --> 00:15:20,079
covers latency errors and situations

00:15:16,880 --> 00:15:23,199
and also generate spams on behalf of

00:15:20,079 --> 00:15:23,839
applications because they can also

00:15:23,199 --> 00:15:27,839
generate

00:15:23,839 --> 00:15:27,839
excess love for service traffic

00:15:31,440 --> 00:15:37,199
compare the two solutions in this table

00:15:34,800 --> 00:15:38,000
the main difference is that this match

00:15:37,199 --> 00:15:41,120
can have

00:15:38,000 --> 00:15:44,399
collect the observability data

00:15:41,120 --> 00:15:44,399
for any language

00:15:45,120 --> 00:15:51,519
with more accessibility transparency

00:15:48,480 --> 00:15:52,720
and flexibility because they can

00:15:51,519 --> 00:15:56,160
generate

00:15:52,720 --> 00:15:58,880
all kinds of metrics and the metadata or

00:15:56,160 --> 00:15:59,360
dimensions can be configured perhaps

00:15:58,880 --> 00:16:02,480
they

00:15:59,360 --> 00:16:05,680
can generate response for applications

00:16:02,480 --> 00:16:08,880
applications only need to propagate

00:16:05,680 --> 00:16:09,600
several request papers and because the

00:16:08,880 --> 00:16:12,880
germany's

00:16:09,600 --> 00:16:16,560
access law of the matter of law

00:16:12,880 --> 00:16:19,920
can also be configured and also

00:16:16,560 --> 00:16:22,880
based on the access magic topology

00:16:19,920 --> 00:16:23,759
can be built give a global view of the

00:16:22,880 --> 00:16:27,199
application

00:16:23,759 --> 00:16:27,199
and services

00:16:30,399 --> 00:16:37,279
okay this is the target called this

00:16:33,759 --> 00:16:40,880
attention this will look like this

00:16:37,279 --> 00:16:43,199
our unified infrastructure companies and

00:16:40,880 --> 00:16:45,279
you still work together not only and

00:16:43,199 --> 00:16:47,839
provide applications different

00:16:45,279 --> 00:16:48,839
environment but also provide service

00:16:47,839 --> 00:16:52,000
management

00:16:48,839 --> 00:16:55,600
platform covers

00:16:52,000 --> 00:16:58,560
camera release sensor discovery

00:16:55,600 --> 00:16:59,920
load balancing connection management

00:16:58,560 --> 00:17:03,519
circuit breaker

00:16:59,920 --> 00:17:05,679
ford injection chassis mirror

00:17:03,519 --> 00:17:06,880
introduction authentication and

00:17:05,679 --> 00:17:11,280
authority

00:17:06,880 --> 00:17:13,360
also provide magic prison and so on

00:17:11,280 --> 00:17:15,120
you can see the data plan works as a

00:17:13,360 --> 00:17:18,400
transparent year project

00:17:15,120 --> 00:17:22,240
or from traffic management security and

00:17:18,400 --> 00:17:24,400
observation on behalf of applications

00:17:22,240 --> 00:17:25,679
and ingram speedway give more

00:17:24,400 --> 00:17:29,280
flexibility that

00:17:25,679 --> 00:17:29,840
injects can manage traffic together with

00:17:29,280 --> 00:17:33,520
the

00:17:29,840 --> 00:17:36,160
cycles and control plan

00:17:33,520 --> 00:17:37,760
is responsible for storing and managing

00:17:36,160 --> 00:17:41,600
the configuration

00:17:37,760 --> 00:17:45,600
and distribute the prices to proxies and

00:17:41,600 --> 00:17:49,200
sell cars and there is

00:17:45,600 --> 00:17:49,520
energy solution and we and the solution

00:17:49,200 --> 00:17:52,559
can

00:17:49,520 --> 00:17:56,400
easily configure or integrate

00:17:52,559 --> 00:17:59,679
with consumers existing canary kiosks

00:17:56,400 --> 00:18:03,440
and platform and

00:17:59,679 --> 00:18:06,080
magic login placement system

00:18:03,440 --> 00:18:06,880
by establishing all common functions

00:18:06,080 --> 00:18:09,760
from

00:18:06,880 --> 00:18:12,000
application code and also for

00:18:09,760 --> 00:18:14,720
infrastructure

00:18:12,000 --> 00:18:15,679
solution can help developers focus on

00:18:14,720 --> 00:18:18,480
their

00:18:15,679 --> 00:18:18,480
business work

00:18:22,240 --> 00:18:29,200
somewhere about aspects at this table

00:18:26,720 --> 00:18:30,559
the key difference is agriculture and

00:18:29,200 --> 00:18:33,679
mechanism

00:18:30,559 --> 00:18:35,840
the former is an integrated platform

00:18:33,679 --> 00:18:37,039
provide basic search discovery and

00:18:35,840 --> 00:18:40,080
movements

00:18:37,039 --> 00:18:42,080
and the latter infrastructure

00:18:40,080 --> 00:18:43,840
is them to handle application and

00:18:42,080 --> 00:18:46,799
communication

00:18:43,840 --> 00:18:47,520
and for components the former platform

00:18:46,799 --> 00:18:50,320
consists

00:18:47,520 --> 00:18:51,039
of different components there will be

00:18:50,320 --> 00:18:54,320
demands

00:18:51,039 --> 00:18:58,080
and injects and the latter is a

00:18:54,320 --> 00:19:01,840
unified infrastructure including

00:18:58,080 --> 00:19:01,840
control plan and data plan

00:19:02,000 --> 00:19:07,840
both of these processes are the former

00:19:05,280 --> 00:19:09,760
failure of static proxy and the latter

00:19:07,840 --> 00:19:13,120
and the transparent proxy

00:19:09,760 --> 00:19:15,120
can intersect and match those treasure

00:19:13,120 --> 00:19:16,799
this may be the biggest difference and

00:19:15,120 --> 00:19:20,240
the most important

00:19:16,799 --> 00:19:23,360
characteristic of this match

00:19:20,240 --> 00:19:26,080
as for bob's work the former

00:19:23,360 --> 00:19:27,120
depends on manual operation and later

00:19:26,080 --> 00:19:30,960
mostly works

00:19:27,120 --> 00:19:32,720
automatically and for service management

00:19:30,960 --> 00:19:35,200
the former oreo provides service

00:19:32,720 --> 00:19:38,880
discovery and broadband

00:19:35,200 --> 00:19:41,520
retract is coded in application

00:19:38,880 --> 00:19:42,080
better provide powerful assessment and

00:19:41,520 --> 00:19:46,400
covers

00:19:42,080 --> 00:19:49,679
connection observability and security

00:19:46,400 --> 00:19:52,880
and this difference results in both cost

00:19:49,679 --> 00:19:57,840
and results data reduction

00:19:52,880 --> 00:19:57,840
of customers reduce the id investment

00:20:01,360 --> 00:20:05,360
next the performance part is hard to

00:20:04,640 --> 00:20:08,480
memory

00:20:05,360 --> 00:20:11,679
you have a user's current solution

00:20:08,480 --> 00:20:14,720
to target cognitive search safely

00:20:11,679 --> 00:20:14,720
and respond

00:20:16,799 --> 00:20:21,760
the main idea is define a new

00:20:18,840 --> 00:20:24,400
environment with target solutions

00:20:21,760 --> 00:20:25,840
and gradually spread the traffic from

00:20:24,400 --> 00:20:28,000
their own clustering

00:20:25,840 --> 00:20:29,039
companies classroom to ensure

00:20:28,000 --> 00:20:32,400
reliability

00:20:29,039 --> 00:20:36,159
of online service http

00:20:32,400 --> 00:20:38,640
to service to verify variations

00:20:36,159 --> 00:20:41,200
when your container business are all

00:20:38,640 --> 00:20:41,200
available

00:20:46,320 --> 00:20:52,640
first to obtain over insurance

00:20:49,520 --> 00:20:55,760
and the contaminations it is required

00:20:52,640 --> 00:20:57,520
variance and contamination spam while

00:20:55,760 --> 00:20:59,919
service

00:20:57,520 --> 00:21:01,039
share the same service discovery and

00:20:59,919 --> 00:21:04,400
events

00:21:01,039 --> 00:21:04,720
and our solution is monster is referring

00:21:04,400 --> 00:21:07,679
to

00:21:04,720 --> 00:21:10,559
contender and variability by designing

00:21:07,679 --> 00:21:15,120
the steam label selection

00:21:10,559 --> 00:21:17,679
and will traffic to both containers and

00:21:15,120 --> 00:21:18,240
as in this case my consumer service

00:21:17,679 --> 00:21:20,880
called

00:21:18,240 --> 00:21:21,600
target service vehicle charging can be

00:21:20,880 --> 00:21:24,159
ruled to

00:21:21,600 --> 00:21:25,039
commander instance also can be

00:21:24,159 --> 00:21:31,440
complicated

00:21:25,039 --> 00:21:34,000
to prevent instances

00:21:31,440 --> 00:21:35,440
next and the most important it is

00:21:34,000 --> 00:21:39,520
required to return

00:21:35,440 --> 00:21:41,679
to their muslim mental illness network

00:21:39,520 --> 00:21:43,280
and our solution is that the child

00:21:41,679 --> 00:21:46,400
removes located

00:21:43,280 --> 00:21:47,280
to specify which type program and to

00:21:46,400 --> 00:21:50,640
many distances

00:21:47,280 --> 00:21:54,159
are not available the process will look

00:21:50,640 --> 00:21:57,440
like this because the numerators

00:21:54,159 --> 00:22:00,960
feels for some variable the environment

00:21:57,440 --> 00:22:03,679
over long-term vision automatically we

00:22:00,960 --> 00:22:13,280
try to remove their needs

00:22:03,679 --> 00:22:16,720
which have a success request

00:22:13,280 --> 00:22:19,200
finally it is required low dominance

00:22:16,720 --> 00:22:20,640
traffic to contain resistance with

00:22:19,200 --> 00:22:23,280
higher priority

00:22:20,640 --> 00:22:25,360
few orders of ram instance only when

00:22:23,280 --> 00:22:28,640
container instances are

00:22:25,360 --> 00:22:30,320
not healthy and our solution is very

00:22:28,640 --> 00:22:33,360
used to

00:22:30,320 --> 00:22:36,240
local locations

00:22:33,360 --> 00:22:37,679
containers split a small part of traffic

00:22:36,240 --> 00:22:40,720
to ram instance

00:22:37,679 --> 00:22:41,440
and container instance are healthy and

00:22:40,720 --> 00:22:44,159
switch

00:22:41,440 --> 00:22:44,960
or charge it to them only when the

00:22:44,159 --> 00:22:48,000
limits

00:22:44,960 --> 00:22:49,360
are totally unhealthy i'm showing these

00:22:48,000 --> 00:22:51,840
people

00:22:49,360 --> 00:22:53,039
even half of the calculations are

00:22:51,840 --> 00:22:57,600
healthy

00:22:53,039 --> 00:23:00,480
still can't get 70 percent of each other

00:22:57,600 --> 00:23:01,679
it is required to make sure both primary

00:23:00,480 --> 00:23:04,480
conditional instances

00:23:01,679 --> 00:23:05,600
on the secondary realm instance meets

00:23:04,480 --> 00:23:09,840
the tractor

00:23:05,600 --> 00:23:09,840
capacity requirements

00:23:12,000 --> 00:23:19,440
and that's all of our practice simply

00:23:15,440 --> 00:23:19,440

YouTube URL: https://www.youtube.com/watch?v=bistsMXhvHU


