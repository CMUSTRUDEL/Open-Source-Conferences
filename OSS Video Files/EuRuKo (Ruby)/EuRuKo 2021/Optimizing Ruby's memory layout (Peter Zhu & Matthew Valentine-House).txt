Title: Optimizing Ruby's memory layout (Peter Zhu & Matthew Valentine-House)
Publication date: 2021-06-03
Playlist: Euruko 2021 - Day 1
Description: 
	Ruby’s current memory layout does not optimize for cache performance, and this has implications: object data like string and array contents are often not stored close to the objects that use them, causing poor data locality, reducing the efficiency of CPU caches, and making it more complex for the garbage collector to manage these objects. Additionally, objects can also contain pointers to data that then point back into the Ruby heap, slowing down object access due to pointer indirection.

Join us as we explore how the variable width allocation project will change the garbage collector heap to replace the system’s malloc heap, giving us finer control of the memory layout to optimize for performance.
Captions: 
	
YouTube URL: https://www.youtube.com/watch?v=x_YhDCNeFQ8


