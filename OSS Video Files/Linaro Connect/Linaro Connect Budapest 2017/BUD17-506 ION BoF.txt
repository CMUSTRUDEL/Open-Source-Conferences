Title: BUD17-506 ION BoF
Publication date: 2017-03-15
Playlist: Linaro Connect Budapest 2017
Description: 
	"Session ID: BUD17-506
Session Name: ION BoF - BUD17-506
Speaker: Sumit Semwal 
Track: LMG


★ Session Summary ★
Upstream community hasn’t had active participation around ION for past couple of years. Let us meet to discuss what can we do to change ‘status quo’. The session will include:
 - Brief status on where we stand on ION
 - Why isn’t upstream community ‘not interested’
 - How can we attempt to influence that
---------------------------------------------------
★ Resources ★
Event Page: http://connect.linaro.org/resource/bud17/bud17-506/
Presentation: 
Video: https://youtu.be/ZcnC78NyJK0
 ---------------------------------------------------

★ Event Details ★
Linaro Connect Budapest 2017 (BUD17)
6-10 March 2017
Corinthia Hotel, Budapest,
Erzsébet krt. 43-49,
1073 Hungary

---------------------------------------------------
Keyword: LMG, ION, BoF
http://www.linaro.org
http://connect.linaro.org
---------------------------------------------------
Follow us on Social Media
https://www.facebook.com/LinaroOrg
https://twitter.com/linaroorg
https://www.youtube.com/user/linaroorg?sub_confirmation=1
https://www.linkedin.com/company/1026961"
Captions: 
	00:00:00,130 --> 00:00:04,110
[Music]

00:00:10,250 --> 00:00:21,900
it is can you guys yummy okay hi guys

00:00:17,730 --> 00:00:24,029
welcome I'm summit I work for Leonardo

00:00:21,900 --> 00:00:26,130
i'm sure many of you guys know because

00:00:24,029 --> 00:00:28,789
you've seen on the schedule sorry we're

00:00:26,130 --> 00:00:31,080
running late i only have three slides

00:00:28,789 --> 00:00:34,020
because they say the boss so we should

00:00:31,080 --> 00:00:42,540
just have a more participative session

00:00:34,020 --> 00:00:45,870
if you will and yeah so I'll just

00:00:42,540 --> 00:00:49,020
discuss I on if you I'm not going to

00:00:45,870 --> 00:00:51,570
discuss what I on is or any of that if

00:00:49,020 --> 00:00:54,750
you don't already know I on I I suggest

00:00:51,570 --> 00:00:58,590
we go and have a look at it in stating

00:00:54,750 --> 00:01:01,770
or in android tree we'll just talk of

00:00:58,590 --> 00:01:04,530
very briefly about how iron has been in

00:01:01,770 --> 00:01:06,330
stating what you try to do for dictating

00:01:04,530 --> 00:01:08,189
where where it is right now and how can

00:01:06,330 --> 00:01:13,400
we all help I think the last bit is

00:01:08,189 --> 00:01:18,960
where where it's been the most important

00:01:13,400 --> 00:01:21,390
so december 2013 that's almost between

00:01:18,960 --> 00:01:28,409
half years three years now out for years

00:01:21,390 --> 00:01:31,259
now for three I am yeah something around

00:01:28,409 --> 00:01:33,329
this iron got merged into staging John

00:01:31,259 --> 00:01:35,490
did a fabulous job here to get it out

00:01:33,329 --> 00:01:37,680
out and sort out the patches and get

00:01:35,490 --> 00:01:42,090
into staging with with all the work

00:01:37,680 --> 00:01:45,090
around October 2014 so almost a year

00:01:42,090 --> 00:01:47,700
later we were able to send out after a

00:01:45,090 --> 00:01:49,680
lot of discussions in various sessions

00:01:47,700 --> 00:01:51,299
and with a lot of people around we were

00:01:49,680 --> 00:01:55,409
able to give out something called

00:01:51,299 --> 00:01:57,509
centerlock as an alternate to ion if you

00:01:55,409 --> 00:02:01,020
already don't know the story where it

00:01:57,509 --> 00:02:04,200
didn't go off really well at the same

00:02:01,020 --> 00:02:07,530
conference at the same in the same year

00:02:04,200 --> 00:02:09,360
at LPC law also spoke about iron and DNA

00:02:07,530 --> 00:02:13,230
coherency and what are the problems

00:02:09,360 --> 00:02:16,140
around there in August we spoke I

00:02:13,230 --> 00:02:17,970
about I mean with with I think a couple

00:02:16,140 --> 00:02:19,709
of versions on Senate log we spoke about

00:02:17,970 --> 00:02:21,629
what are the issues that remain and that

00:02:19,709 --> 00:02:24,299
was sort of my true in the double kind

00:02:21,629 --> 00:02:26,099
of a where I just wanted the

00:02:24,299 --> 00:02:29,549
community someone in the community to

00:02:26,099 --> 00:02:32,489
stand up and and say something about I

00:02:29,549 --> 00:02:37,470
on Senate log something else nothing at

00:02:32,489 --> 00:02:41,069
all and as a result at that LPC we sort

00:02:37,470 --> 00:02:44,159
of created an eye on to do list which so

00:02:41,069 --> 00:02:46,650
updated the to-do list for Android to

00:02:44,159 --> 00:02:49,200
include stuff that needs to be done on

00:02:46,650 --> 00:02:55,379
ion before it can be moved out of

00:02:49,200 --> 00:02:58,799
staging April 2016's almost seven eight

00:02:55,379 --> 00:03:01,290
months 10 months later Laura's still

00:02:58,799 --> 00:03:03,420
spoke about lessons from ion and why

00:03:01,290 --> 00:03:08,579
it's not going in the direction should

00:03:03,420 --> 00:03:11,640
be stating and so on this year last last

00:03:08,579 --> 00:03:14,250
year's November 2016 again Lord spoke

00:03:11,640 --> 00:03:16,019
about ion we been chatting quite a bit

00:03:14,250 --> 00:03:19,609
and there is a follow-up email so that

00:03:16,019 --> 00:03:25,260
was sort of her throw in the towel email

00:03:19,609 --> 00:03:29,190
thankfully she didn't and she posted out

00:03:25,260 --> 00:03:32,489
a few patches which sort of fulfilled or

00:03:29,190 --> 00:03:36,870
try to fulfill the list of to do's that

00:03:32,489 --> 00:03:39,540
we thought would be required for for

00:03:36,870 --> 00:03:41,730
iron to move more to staging social just

00:03:39,540 --> 00:03:44,099
sorry if you are interested the latest

00:03:41,730 --> 00:03:46,500
version is yours he's I know that she is

00:03:44,099 --> 00:03:49,260
already working on the second version of

00:03:46,500 --> 00:03:51,480
hot patches which should come out very

00:03:49,260 --> 00:03:54,870
soon I if you are interested really

00:03:51,480 --> 00:03:59,129
interested I can probably share a work

00:03:54,870 --> 00:04:01,139
in progress branch and as it's not

00:03:59,129 --> 00:04:03,599
directly related but for from the

00:04:01,139 --> 00:04:06,060
upstream side sink also got d stage in

00:04:03,599 --> 00:04:08,129
December 2016 and sink is not something

00:04:06,060 --> 00:04:11,310
that relates directly to ion but it's

00:04:08,129 --> 00:04:17,239
sort of kind of related for for android

00:04:11,310 --> 00:04:17,239
user space so that's where we are at and

00:04:18,530 --> 00:04:27,120
how can we all help so even when i was

00:04:24,780 --> 00:04:29,699
very tempted to say if but even when

00:04:27,120 --> 00:04:31,620
I undoes get these days there will be

00:04:29,699 --> 00:04:34,470
quite a quite a bit of work required

00:04:31,620 --> 00:04:36,360
what we what Laura's effort has been all

00:04:34,470 --> 00:04:41,220
around and what Michael earlier was

00:04:36,360 --> 00:04:47,190
around was based on whatever users of

00:04:41,220 --> 00:04:49,470
ion were available open source and so

00:04:47,190 --> 00:04:52,860
lot of there might be a few things that

00:04:49,470 --> 00:04:55,050
our members or other vendors could find

00:04:52,860 --> 00:04:57,180
that the the current set of patches may

00:04:55,050 --> 00:05:00,030
or may not completely help them with I

00:04:57,180 --> 00:05:03,500
really urge all of you guys to have a

00:05:00,030 --> 00:05:07,199
look at the patches and participate

00:05:03,500 --> 00:05:08,789
please participate reviewing is

00:05:07,199 --> 00:05:10,680
participation commenting is

00:05:08,789 --> 00:05:13,139
participation testing is participation

00:05:10,680 --> 00:05:17,370
so if you if you can just have someone

00:05:13,139 --> 00:05:20,610
in your you know internal teams take the

00:05:17,370 --> 00:05:24,990
patches take the upstream ion try to use

00:05:20,610 --> 00:05:28,169
it on your out of tree kernels or with

00:05:24,990 --> 00:05:30,830
your downstream kernels and give us

00:05:28,169 --> 00:05:35,639
feedback that will be immensely helpful

00:05:30,830 --> 00:05:47,880
so that's that's all that I had open for

00:05:35,639 --> 00:05:51,990
discussion that's been pretty short so

00:05:47,880 --> 00:05:54,900
the question I would have is in the

00:05:51,990 --> 00:05:59,910
downstream kernels is ion even match

00:05:54,900 --> 00:06:01,400
what's in staging I know some vendor

00:05:59,910 --> 00:06:05,880
kernels I've looked at it does not

00:06:01,400 --> 00:06:08,580
that's not really a that was not a

00:06:05,880 --> 00:06:10,590
really major vendor and thank you for

00:06:08,580 --> 00:06:13,050
bringing it up because that's that's

00:06:10,590 --> 00:06:16,860
been my personal biggest growth because

00:06:13,050 --> 00:06:19,919
if nobody from the you know respective

00:06:16,860 --> 00:06:21,539
vendors and companies speak up and see

00:06:19,919 --> 00:06:24,570
that you know whatever is there and I

00:06:21,539 --> 00:06:26,720
think that's partly responsible for the

00:06:24,570 --> 00:06:30,900
not speaking part partly responsible for

00:06:26,720 --> 00:06:33,449
why it has taken so long for I think I

00:06:30,900 --> 00:06:35,849
on again is my personal opinion I think

00:06:33,449 --> 00:06:39,659
most of the people just don't care too

00:06:35,849 --> 00:06:40,529
much because it's ten patches and they

00:06:39,659 --> 00:06:42,689
can

00:06:40,529 --> 00:06:45,229
Polly live out of you know out of tree

00:06:42,689 --> 00:06:48,989
for them on the other hand if it is all

00:06:45,229 --> 00:06:52,589
marina consolidated way upstream it's

00:06:48,989 --> 00:06:54,989
going to be zero patches so but i think

00:06:52,589 --> 00:06:56,999
the couple of couple of trees that i

00:06:54,989 --> 00:07:03,799
have been able to see i know that it's

00:06:56,999 --> 00:07:06,569
not exactly the same as taking so one

00:07:03,799 --> 00:07:09,119
kind of connected related sin so

00:07:06,569 --> 00:07:11,939
originally android solve the how do you

00:07:09,119 --> 00:07:14,579
allocate for a use case by having lots

00:07:11,939 --> 00:07:17,039
of platform specific keeps and user

00:07:14,579 --> 00:07:22,259
space somehow magically knows what he

00:07:17,039 --> 00:07:25,049
tell allocate from there has been some

00:07:22,259 --> 00:07:29,729
work which is kind of stalled out mostly

00:07:25,049 --> 00:07:35,609
because no one who has time had patients

00:07:29,729 --> 00:07:39,569
just I guess on this lab alec / GBM to

00:07:35,609 --> 00:07:42,089
thing which is intended to solve the

00:07:39,569 --> 00:07:45,539
problem of how do you figure out the

00:07:42,089 --> 00:07:51,529
constraints of multiple ati's and

00:07:45,539 --> 00:07:54,029
devices in a in a use case I mean that's

00:07:51,529 --> 00:07:58,349
you know if it ever happens I think

00:07:54,029 --> 00:08:00,509
that's the path forward for dealing with

00:07:58,349 --> 00:08:02,909
allocate or figuring out who can

00:08:00,509 --> 00:08:09,649
allocate for a particular use case and

00:08:02,909 --> 00:08:13,949
how it can be allocated that's probably

00:08:09,649 --> 00:08:17,099
sure and a job you would remember how it

00:08:13,949 --> 00:08:20,879
has progress so with its analog we tried

00:08:17,099 --> 00:08:24,179
to have solved the constraints problem

00:08:20,879 --> 00:08:25,739
in kernels which of course probably

00:08:24,179 --> 00:08:27,449
wasn't the smartest thing to do but that

00:08:25,739 --> 00:08:30,209
was the only option we were thinking at

00:08:27,449 --> 00:08:34,649
the time and now we are thinking with

00:08:30,209 --> 00:08:37,110
the udma & Liber log on how we can just

00:08:34,649 --> 00:08:38,729
park the problem in user space because

00:08:37,110 --> 00:08:40,289
use of space knows best about the kind

00:08:38,729 --> 00:08:45,480
of constraints it has to deal with and

00:08:40,289 --> 00:08:49,500
so on my my my biggest request here is

00:08:45,480 --> 00:08:52,740
peace participate for I mean it for all

00:08:49,500 --> 00:08:53,860
our members it's for people who if this

00:08:52,740 --> 00:08:55,329
is on you

00:08:53,860 --> 00:08:57,850
tube or somewhere who ever watched a

00:08:55,329 --> 00:08:59,740
good please participate because that's

00:08:57,850 --> 00:09:02,380
how we are we going to get it out of

00:08:59,740 --> 00:09:04,959
staging and get it to work like have a

00:09:02,380 --> 00:09:10,089
golden goal of having mainline kernel

00:09:04,959 --> 00:09:12,399
work with ASB master and let's be honest

00:09:10,089 --> 00:09:20,610
that happens even without iron on some

00:09:12,399 --> 00:09:24,670
hardware but yes so with the current

00:09:20,610 --> 00:09:28,360
staging patches can be like at least

00:09:24,670 --> 00:09:31,810
start with you know we have like AOSP

00:09:28,360 --> 00:09:37,470
running on high key and DB Fulton see

00:09:31,810 --> 00:09:46,000
can be replaced GBM gralik and use iron

00:09:37,470 --> 00:09:48,010
at the aquatic days right now why

00:09:46,000 --> 00:09:51,250
because we have we would gain nothing

00:09:48,010 --> 00:09:54,279
from that and we or to put it another

00:09:51,250 --> 00:09:56,829
way par the reason I on is probably

00:09:54,279 --> 00:10:02,579
stalled is because there is no upstream

00:09:56,829 --> 00:10:05,949
users of I on yeah I mean I think it's

00:10:02,579 --> 00:10:08,320
something that we could maybe like not

00:10:05,949 --> 00:10:10,180
de Janeiro but the the members can start

00:10:08,320 --> 00:10:14,670
doing so that there is at least a

00:10:10,180 --> 00:10:17,380
reference upstream implementation that

00:10:14,670 --> 00:10:21,070
bacon like the member companies can now

00:10:17,380 --> 00:10:24,190
start you know working on yeah I think

00:10:21,070 --> 00:10:27,820
so for high key it does use the upstream

00:10:24,190 --> 00:10:31,350
I on at this point okay but problems

00:10:27,820 --> 00:10:34,329
with Molly so it's the consumer isn't

00:10:31,350 --> 00:10:41,649
open but that makes the colonel that's

00:10:34,329 --> 00:10:43,990
what it uses so okay yes you probably

00:10:41,649 --> 00:10:45,850
know that we are grouped security we

00:10:43,990 --> 00:10:48,010
have been working with adding a secure

00:10:45,850 --> 00:10:51,180
heat that's you call it I'm not now i

00:10:48,010 --> 00:10:54,399
think is that so that's a new heap type

00:10:51,180 --> 00:10:57,430
so we we have of users running and

00:10:54,399 --> 00:11:01,240
android and plainly nerds basically so

00:10:57,430 --> 00:11:02,770
we're for sure will start using ion but

00:11:01,240 --> 00:11:04,360
another thing related is now since you

00:11:02,770 --> 00:11:07,190
have started to pulling it down from

00:11:04,360 --> 00:11:09,470
staging and let's say that we are trying

00:11:07,190 --> 00:11:13,250
stabilizing or patches or what's the

00:11:09,470 --> 00:11:14,990
advice should we kind of also try to get

00:11:13,250 --> 00:11:20,720
it out of staging or should we submit

00:11:14,990 --> 00:11:23,540
our patches to staging so the the

00:11:20,720 --> 00:11:25,370
consensus we had at LPC was to not add

00:11:23,540 --> 00:11:28,400
anything new right now in staging and

00:11:25,370 --> 00:11:30,860
just have make you know put whatever

00:11:28,400 --> 00:11:33,170
effort we can to move it out of stating

00:11:30,860 --> 00:11:34,940
so if you guys have users you know where

00:11:33,170 --> 00:11:36,710
the patches are if you can test them and

00:11:34,940 --> 00:11:38,000
give like a tested by it will help speed

00:11:36,710 --> 00:11:41,000
up the process of getting it out of

00:11:38,000 --> 00:11:45,800
staging on the related note we I think

00:11:41,000 --> 00:11:48,530
we are very happy to review any generic

00:11:45,800 --> 00:11:51,140
heap types that that can be used other

00:11:48,530 --> 00:11:53,840
with you know multiple in a generic way

00:11:51,140 --> 00:12:02,810
so secure hip type might might be a very

00:11:53,840 --> 00:12:05,240
good thing to look at after d staging we

00:12:02,810 --> 00:12:07,040
had a Laura in the loop the last year

00:12:05,240 --> 00:12:09,980
also so I think we're praying aligned

00:12:07,040 --> 00:12:14,240
with her at least I'm just in the same

00:12:09,980 --> 00:12:17,710
scope is the as of today when we want to

00:12:14,240 --> 00:12:20,360
hide a hip we need to break the new API

00:12:17,710 --> 00:12:22,820
how to accomplish that in the long term

00:12:20,360 --> 00:12:24,950
easily adding hits without breaking the

00:12:22,820 --> 00:12:27,290
uap I because we know we won't be able

00:12:24,950 --> 00:12:31,880
to break the uap I on your out of the

00:12:27,290 --> 00:12:36,440
staging I don't have an easy answer to

00:12:31,880 --> 00:12:39,980
that but that's very so I think right

00:12:36,440 --> 00:12:42,800
now what laura has done is added set of

00:12:39,980 --> 00:12:44,810
enumerated the mechanism of enumerating

00:12:42,800 --> 00:12:50,890
heap ideas that are available so you

00:12:44,810 --> 00:12:50,890
don't just go by fixed keep a tease I

00:12:51,790 --> 00:12:58,310
think this enumeration is a still based

00:12:54,770 --> 00:13:00,350
on the I types that are already handled

00:12:58,310 --> 00:13:02,390
by the ion and if we get into with

00:13:00,350 --> 00:13:05,839
another heights I'd like address

00:13:02,390 --> 00:13:08,330
allocation strategy or allocation

00:13:05,839 --> 00:13:10,790
algorithm then we'll have to declare it

00:13:08,330 --> 00:13:12,770
and it has to occur in this unified IP I

00:13:10,790 --> 00:13:15,290
and it's fine if you have some clothes

00:13:12,770 --> 00:13:19,340
code but if you want to get from extreme

00:13:15,290 --> 00:13:22,650
cold it's not it's not Andy

00:13:19,340 --> 00:13:24,780
so a fantastic feedback I'd request you

00:13:22,650 --> 00:13:30,300
to do that on the mailing list as well

00:13:24,780 --> 00:13:32,250
yeah the other thing is that in other

00:13:30,300 --> 00:13:33,870
areas in the kernel we've had places

00:13:32,250 --> 00:13:36,150
where people are able to do custom

00:13:33,870 --> 00:13:40,160
extensions for you know interfaces like

00:13:36,150 --> 00:13:43,010
this like one examples for the clock IDs

00:13:40,160 --> 00:13:45,990
you can have basically drivers register

00:13:43,010 --> 00:13:47,250
custom POSIX clock IDs that end up you

00:13:45,990 --> 00:13:48,750
know instead of having positive numbers

00:13:47,250 --> 00:13:50,130
they have negative numbers and then

00:13:48,750 --> 00:13:53,160
drivers are able to implement that and

00:13:50,130 --> 00:13:55,290
the idea is that in order to basically

00:13:53,160 --> 00:13:57,840
user space needs to communicate through

00:13:55,290 --> 00:14:00,390
some other driver to understand whether

00:13:57,840 --> 00:14:02,550
or not the support for that that custom

00:14:00,390 --> 00:14:04,590
clock is present or not and those get

00:14:02,550 --> 00:14:07,020
dynamically allocated or as a registered

00:14:04,590 --> 00:14:08,760
so we have other ways that the sort of

00:14:07,020 --> 00:14:11,430
thing can be solved this we need to have

00:14:08,760 --> 00:14:13,200
this very custom situation it's not

00:14:11,430 --> 00:14:15,600
ideal I really want to make as many

00:14:13,200 --> 00:14:20,210
generic you know kind of abstract the

00:14:15,600 --> 00:14:20,210
heaps that people need out but yeah and

00:14:23,420 --> 00:14:30,330
find out that what's in in iron does not

00:14:27,630 --> 00:14:33,420
cover something that is useful for the

00:14:30,330 --> 00:14:35,700
whole community and that if we propose

00:14:33,420 --> 00:14:38,550
it and it needs to break something that

00:14:35,700 --> 00:14:40,230
is not breakable then there is an issue

00:14:38,550 --> 00:14:42,780
but if you have already means you know

00:14:40,230 --> 00:14:45,480
the frameworks to overcome this then I

00:14:42,780 --> 00:14:48,540
mean I just took the microphone because

00:14:45,480 --> 00:14:52,530
i think it's not about customizing it's

00:14:48,540 --> 00:14:54,870
more about contributing but on some

00:14:52,530 --> 00:14:56,640
things that more or less was quite

00:14:54,870 --> 00:14:59,100
frozen and we don't want to break when

00:14:56,640 --> 00:15:01,320
we contribute with yola one rather have

00:14:59,100 --> 00:15:04,680
things nicely fitting into the existing

00:15:01,320 --> 00:15:05,970
frameworks I'd be interested in the what

00:15:04,680 --> 00:15:08,430
the constraints you're worried about

00:15:05,970 --> 00:15:09,870
breaking are so if there's a limitation

00:15:08,430 --> 00:15:11,610
in the interface at the moment that

00:15:09,870 --> 00:15:14,090
would be something that people would

00:15:11,610 --> 00:15:14,090
want to hear about

00:15:21,940 --> 00:15:28,400
one of the limitation for iron I also

00:15:26,210 --> 00:15:32,060
about security because is only one the

00:15:28,400 --> 00:15:35,240
line three in the scenes or which is odd

00:15:32,060 --> 00:15:37,460
in a grid for example we have to put the

00:15:35,240 --> 00:15:40,490
commission for the process with Selena

00:15:37,460 --> 00:15:44,450
grandson and at the end almost all the

00:15:40,490 --> 00:15:48,950
process may have access on iron on the

00:15:44,450 --> 00:15:52,310
device iron device is not very helpful

00:15:48,950 --> 00:15:54,770
for the security you want to shred the

00:15:52,310 --> 00:15:58,220
security on specialized equals everybody

00:15:54,770 --> 00:16:00,410
r during the center line so basically

00:15:58,220 --> 00:16:03,020
while you are in security or you want to

00:16:00,410 --> 00:16:05,210
resort it it'll be small for the graph y

00:16:03,020 --> 00:16:08,360
equals the video on which are you wants

00:16:05,210 --> 00:16:11,810
you to you and get more robust

00:16:08,360 --> 00:16:14,240
implementation all that you need to you

00:16:11,810 --> 00:16:16,850
can do it with iron because it's always

00:16:14,240 --> 00:16:27,560
a sender life so often you have to open

00:16:16,850 --> 00:16:31,100
it to everybody I would say it's yeah in

00:16:27,560 --> 00:16:33,850
a way you're right but a very iron is

00:16:31,100 --> 00:16:36,140
currently mindfulness is in the android

00:16:33,850 --> 00:16:39,350
for Android it's going to move to

00:16:36,140 --> 00:16:41,089
Android other part is as the Linux can

00:16:39,350 --> 00:16:43,820
handle more than just past these

00:16:41,089 --> 00:16:46,250
restrictions so you can have you no

00:16:43,820 --> 00:16:48,260
constraints inside sis calls and things

00:16:46,250 --> 00:16:49,550
would say okay well this class of

00:16:48,260 --> 00:16:52,280
applications can do these sorts of

00:16:49,550 --> 00:16:53,720
things so I think that you can extend

00:16:52,280 --> 00:16:55,250
that so that inside the heaps we can

00:16:53,720 --> 00:17:01,670
even decide which keeps are accessible

00:16:55,250 --> 00:17:05,150
at which applications by Jason say that

00:17:01,670 --> 00:17:07,670
with a type on it masks which are always

00:17:05,150 --> 00:17:09,230
regular it in the guy of control I mean

00:17:07,670 --> 00:17:13,040
is not only eyes I upon which the

00:17:09,230 --> 00:17:16,040
content Rosa feel that are not solid

00:17:13,040 --> 00:17:18,260
yeah but we should ask more so again you

00:17:16,040 --> 00:17:20,980
know if you should raise it on the

00:17:18,260 --> 00:17:20,980
mailing list as well

00:17:22,819 --> 00:17:33,030
so anyone else just like a been

00:17:30,450 --> 00:17:38,309
following the mailing list so one thing

00:17:33,030 --> 00:17:43,440
that the planning to kill is use iron

00:17:38,309 --> 00:17:46,260
for internal allocations I've like I've

00:17:43,440 --> 00:17:48,510
crept I on allocation like in the

00:17:46,260 --> 00:17:52,950
downstream kernel and we have a handful

00:17:48,510 --> 00:17:54,840
of in kernel allocations which never

00:17:52,950 --> 00:17:58,230
exposed to user space so I don't know

00:17:54,840 --> 00:18:01,670
like if they're legit requirements or

00:17:58,230 --> 00:18:04,080
not but just for everyone to know that

00:18:01,670 --> 00:18:07,650
that's how it that's the direction is

00:18:04,080 --> 00:18:10,410
taking so if there I mean ideally we

00:18:07,650 --> 00:18:14,790
shouldn't it should be just a user space

00:18:10,410 --> 00:18:17,070
way to allocate from a heap yeah but if

00:18:14,790 --> 00:18:19,500
someone has a convincing reason to use

00:18:17,070 --> 00:18:22,230
it in kernel then they should probably

00:18:19,500 --> 00:18:27,630
mention that and mention it on the

00:18:22,230 --> 00:18:29,220
mailing list yes because my only thing

00:18:27,630 --> 00:18:31,050
I'm want to emphasize is whatever

00:18:29,220 --> 00:18:33,600
discussions we can have at a public

00:18:31,050 --> 00:18:35,640
conference like this in a public group

00:18:33,600 --> 00:18:40,050
like this it's still not the set of

00:18:35,640 --> 00:18:42,420
people who are interested seen as

00:18:40,050 --> 00:18:44,010
interested in it if it's not on the

00:18:42,420 --> 00:18:46,110
public platform for the rest of the

00:18:44,010 --> 00:18:50,160
world and if it's on the mailing list

00:18:46,110 --> 00:18:52,440
whatever there are than your objections

00:18:50,160 --> 00:18:56,690
suggestions everything is is documented

00:18:52,440 --> 00:18:56,690
and accepted or rejected or debated

00:19:03,789 --> 00:19:07,809
all right thank you so much

00:19:09,450 --> 00:19:18,040
[Applause]

00:19:13,070 --> 00:19:18,040

YouTube URL: https://www.youtube.com/watch?v=ZcnC78NyJK0


