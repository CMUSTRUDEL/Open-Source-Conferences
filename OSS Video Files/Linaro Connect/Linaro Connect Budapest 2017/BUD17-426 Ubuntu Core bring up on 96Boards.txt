Title: BUD17-426 Ubuntu Core bring up on 96Boards
Publication date: 2017-03-11
Playlist: Linaro Connect Budapest 2017
Description: 
	"Session ID: BUD17-426
Session Name: Ubuntu Core bring up on 96Boards - BUD17-426
Speaker:  Oliver (Ogra) Grawert
Track: 96Boards


★ Session Summary ★
This session will cover lessons learned in bringing up the Dragonboard and other ARM devices.
---------------------------------------------------
★ Resources ★
Event Page: http://connect.linaro.org/resource/bud17/bud17-426/
Presentation: 
Video: https://youtu.be/LM5k1QlRSLQ
 ---------------------------------------------------

★ Event Details ★
Linaro Connect Budapest 2017 (BUD17)
6-10 March 2017
Corinthia Hotel, Budapest,
Erzsébet krt. 43-49,
1073 Hungary

---------------------------------------------------
Keyword: 
http://www.linaro.org
http://connect.linaro.org
---------------------------------------------------
Follow us on Social Media
https://www.facebook.com/LinaroOrg
https://twitter.com/linaroorg
https://www.youtube.com/user/linaroorg?sub_confirmation=1
https://www.linkedin.com/company/1026961"
Captions: 
	00:00:00,130 --> 00:00:07,509
[Music]

00:00:09,889 --> 00:00:17,210
yeahh shall hello everybody my name is

00:00:14,129 --> 00:00:22,920
Oliver Gavin I'm working at canonical

00:00:17,210 --> 00:00:26,160
since 2005 did the arm port Beckman when

00:00:22,920 --> 00:00:30,180
we started supporting arm I have always

00:00:26,160 --> 00:00:37,250
worked in the smaller areas of embedded

00:00:30,180 --> 00:00:42,000
and and Joe well the parking stuff and

00:00:37,250 --> 00:00:45,180
doing this doing this you learn a lot

00:00:42,000 --> 00:00:49,079
about about what we need patent embedded

00:00:45,180 --> 00:00:51,750
and what's really hard animated and over

00:00:49,079 --> 00:00:54,329
time I had more colleagues that work in

00:00:51,750 --> 00:00:57,780
similar areas so we started we started

00:00:54,329 --> 00:00:59,879
considering probably changing what would

00:00:57,780 --> 00:01:05,449
we what we offer there and out came

00:00:59,879 --> 00:01:05,449
Google decor and snack packages so

00:01:06,470 --> 00:01:14,520
booboo decor is built around the snap

00:01:11,250 --> 00:01:20,670
package format the snap package format

00:01:14,520 --> 00:01:25,400
is actually was actually a compressed

00:01:20,670 --> 00:01:25,400
and gbg signed read-only score surface

00:01:25,850 --> 00:01:33,479
packaging info that you need for it is

00:01:30,200 --> 00:01:35,579
held in a young file that you just

00:01:33,479 --> 00:01:40,920
dumped in your your new source tree of

00:01:35,579 --> 00:01:42,810
your of your of your project and this

00:01:40,920 --> 00:01:44,460
llamo file actually knows everything

00:01:42,810 --> 00:01:46,890
about the project you have to set it up

00:01:44,460 --> 00:01:49,770
once but never touch again unless well

00:01:46,890 --> 00:01:51,899
probably some depending dependencies

00:01:49,770 --> 00:01:54,810
change or something like that so you

00:01:51,899 --> 00:01:57,420
need to add or remove a dependency but

00:01:54,810 --> 00:01:59,490
it's actually something you do once and

00:01:57,420 --> 00:02:01,759
never touch again and then you can just

00:01:59,490 --> 00:02:04,710
go on doing your normal development and

00:02:01,759 --> 00:02:07,439
if you if you if you want you can just

00:02:04,710 --> 00:02:09,710
quickly create a usenet package to test

00:02:07,439 --> 00:02:09,710
it out

00:02:11,730 --> 00:02:19,750
net packages come in four types so

00:02:16,060 --> 00:02:24,159
there's the normal app snap which is

00:02:19,750 --> 00:02:26,860
well an application server if you if you

00:02:24,159 --> 00:02:29,440
use the Debian world or are used to the

00:02:26,860 --> 00:02:32,560
Debian or would the world at probably

00:02:29,440 --> 00:02:37,930
describe it as like like a like a meter

00:02:32,560 --> 00:02:40,930
package where you join different things

00:02:37,930 --> 00:02:43,900
together like Rome if you want to have

00:02:40,930 --> 00:02:46,049
the lamp stack in one go you might

00:02:43,900 --> 00:02:48,909
create a meter package that depends on

00:02:46,049 --> 00:02:52,720
the different different sub packages of

00:02:48,909 --> 00:02:54,459
fur debian format and in a snap you can

00:02:52,720 --> 00:02:59,819
just join always together in one package

00:02:54,459 --> 00:02:59,819
and even have it set up automatically

00:03:02,340 --> 00:03:09,790
there is the OS and the gadget and

00:03:05,470 --> 00:03:12,819
Colonel snap for map which is pretty

00:03:09,790 --> 00:03:15,010
much self-explanatory I guess where we

00:03:12,819 --> 00:03:21,099
gadget probably not but i'll get to let

00:03:15,010 --> 00:03:23,650
a little later and i'll actually love to

00:03:21,099 --> 00:03:29,139
do more introduction of the simple of

00:03:23,650 --> 00:03:31,269
the thing snaps during the talk a snap

00:03:29,139 --> 00:03:33,720
is designed in a way that you can always

00:03:31,269 --> 00:03:37,510
wrote it back to the formal version so

00:03:33,720 --> 00:03:40,720
if you have your lamp sec and there's a

00:03:37,510 --> 00:03:43,120
new mascara in it and but didn't really

00:03:40,720 --> 00:03:45,790
work out because that's something you

00:03:43,120 --> 00:03:48,099
wanted to try and didn't really do what

00:03:45,790 --> 00:03:51,790
you want it you can just go back to the

00:03:48,099 --> 00:03:55,480
former version and everything still

00:03:51,790 --> 00:04:01,269
works again no breakage done no damage

00:03:55,480 --> 00:04:03,519
done currently not available i'm going

00:04:01,269 --> 00:04:06,340
to corbett on the desktop version but we

00:04:03,519 --> 00:04:10,120
will soon enable it is the feature to

00:04:06,340 --> 00:04:13,359
use binary disks so the sad packages

00:04:10,120 --> 00:04:15,849
come from a server and since you have a

00:04:13,359 --> 00:04:18,220
local package and the server package you

00:04:15,849 --> 00:04:21,359
can make a diff between the two to find

00:04:18,220 --> 00:04:23,969
out what has changed and

00:04:21,359 --> 00:04:27,259
well actually gets only the changed

00:04:23,969 --> 00:04:29,759
binary data and have it applied Logan

00:04:27,259 --> 00:04:32,430
that's the Cure way it is a bit

00:04:29,759 --> 00:04:34,680
difficult to do because because the

00:04:32,430 --> 00:04:37,319
packages were our gpg signed on the

00:04:34,680 --> 00:04:39,509
server as well as locally so getting

00:04:37,319 --> 00:04:43,020
that right without breaking the

00:04:39,509 --> 00:04:51,900
signature wasn't an easy task but it

00:04:43,020 --> 00:04:56,310
works snaps are well as I said available

00:04:51,900 --> 00:05:01,020
on the desktop and on multiple distros

00:04:56,310 --> 00:05:04,319
like arch fedora Suzy and unable to

00:05:01,020 --> 00:05:06,800
engage and all the derivatives so we can

00:05:04,319 --> 00:05:09,330
actually do development on your desktop

00:05:06,800 --> 00:05:12,930
try to snap out if it's not super

00:05:09,330 --> 00:05:15,210
hardware-specific so I the snap out it

00:05:12,930 --> 00:05:19,229
will work from your desktop just rebuild

00:05:15,210 --> 00:05:27,210
it in the build and have it deployed to

00:05:19,229 --> 00:05:29,940
your IOT board yeah as I mentioned

00:05:27,210 --> 00:05:32,069
before snap package security is achieved

00:05:29,940 --> 00:05:36,360
through first of all being a read-only

00:05:32,069 --> 00:05:39,539
philosophers being gbg signed but

00:05:36,360 --> 00:05:42,210
there's also there's also other bits in

00:05:39,539 --> 00:05:48,449
the system that make sure that a snap

00:05:42,210 --> 00:05:50,699
can't be misused and parts of these live

00:05:48,449 --> 00:05:52,289
in the colonel so that means we need

00:05:50,699 --> 00:05:56,580
certain options in the corner

00:05:52,289 --> 00:05:59,960
neighborhood and we need few patches

00:05:56,580 --> 00:06:02,550
subtly because the snap T tool that

00:05:59,960 --> 00:06:04,949
maintains all these all these security

00:06:02,550 --> 00:06:09,629
bits actually relies on the latest

00:06:04,949 --> 00:06:12,810
versions of Obama but I get to that

00:06:09,629 --> 00:06:17,159
later we we we actually offer over the

00:06:12,810 --> 00:06:19,289
patches there's a link in there in in

00:06:17,159 --> 00:06:21,449
this light on where you can get the

00:06:19,289 --> 00:06:25,520
security white paper that explains

00:06:21,449 --> 00:06:25,520
everything very very detailed

00:06:29,930 --> 00:06:37,770
the snap applications are so constrained

00:06:33,570 --> 00:06:41,700
that we decided if we run a demon we

00:06:37,770 --> 00:06:45,090
wanted to run as root if you'd even

00:06:41,700 --> 00:06:48,960
could break out when we have screwed up

00:06:45,090 --> 00:06:52,230
and the security doesn't work so since

00:06:48,960 --> 00:06:55,680
since it is clear that but the security

00:06:52,230 --> 00:06:59,580
has to be so constrained but not even

00:06:55,680 --> 00:07:01,440
rude to damage we default to having a

00:06:59,580 --> 00:07:04,440
routine so you don't really have to have

00:07:01,440 --> 00:07:09,330
a my scale user or whatever because

00:07:04,440 --> 00:07:11,880
because the guarding around it keeps you

00:07:09,330 --> 00:07:13,860
so far from the system like you can't

00:07:11,880 --> 00:07:16,170
really do anything even though you have

00:07:13,860 --> 00:07:21,450
a root of water user inside the

00:07:16,170 --> 00:07:24,690
constrained environment but indeed you

00:07:21,450 --> 00:07:27,450
you do want your application to interact

00:07:24,690 --> 00:07:29,310
with the with the OS if you want your

00:07:27,450 --> 00:07:33,810
application to interact with the outside

00:07:29,310 --> 00:07:36,870
world somehow so we poke little holes in

00:07:33,810 --> 00:07:42,030
the security model and call that

00:07:36,870 --> 00:07:49,620
interfaces an interface always has two

00:07:42,030 --> 00:07:55,950
sides one provider and one user so a

00:07:49,620 --> 00:08:00,930
slot provides features like network

00:07:55,950 --> 00:08:03,600
access and a plaque in your application

00:08:00,930 --> 00:08:07,230
can then make use of the network access

00:08:03,600 --> 00:08:09,960
slot from the system you have to design

00:08:07,230 --> 00:08:12,990
these in your in your big snap craft

00:08:09,960 --> 00:08:15,210
gamma file that you write once and then

00:08:12,990 --> 00:08:17,880
when something on it will just work

00:08:15,210 --> 00:08:20,430
there are some interfaces that are auto

00:08:17,880 --> 00:08:22,800
connecting and there are some interfaces

00:08:20,430 --> 00:08:25,920
that are not auto connected where you

00:08:22,800 --> 00:08:30,000
have to manually do it you can imagine

00:08:25,920 --> 00:08:32,780
it's similar to I wouldn't call call

00:08:30,000 --> 00:08:36,870
angry a good security model year but

00:08:32,780 --> 00:08:39,300
where you if you would use snappy on a

00:08:36,870 --> 00:08:42,270
desktop and would integrate it with

00:08:39,300 --> 00:08:44,940
graphical tools then it would pop up

00:08:42,270 --> 00:08:48,210
the dialogue this net wants to access

00:08:44,940 --> 00:08:51,150
the network do you want to allow that so

00:08:48,210 --> 00:08:54,660
the user could decide if you wanted to

00:08:51,150 --> 00:08:57,330
want the snap to actually actually a lot

00:08:54,660 --> 00:08:58,920
of it and here through this map

00:08:57,330 --> 00:09:01,200
interface of commands you can actually

00:08:58,920 --> 00:09:04,650
actually have all those system

00:09:01,200 --> 00:09:08,100
interfaces that are already available in

00:09:04,650 --> 00:09:12,630
your system um you can have them listed

00:09:08,100 --> 00:09:21,530
and let's just a little little excerpt

00:09:12,630 --> 00:09:24,750
of the typical set of interfaces so

00:09:21,530 --> 00:09:27,330
initially we started with the 1504 him

00:09:24,750 --> 00:09:32,750
it was we actually started with a kind

00:09:27,330 --> 00:09:36,350
of classic image debian-based image that

00:09:32,750 --> 00:09:42,270
van had snap support for snap packages

00:09:36,350 --> 00:09:46,460
and when the idea came up why not do

00:09:42,270 --> 00:09:50,040
everything is like an economist nap and

00:09:46,460 --> 00:09:56,460
have your root filesystem one big snap

00:09:50,040 --> 00:09:58,470
which is our clothes net and since we

00:09:56,460 --> 00:10:02,900
can do that and snatch have the robot

00:09:58,470 --> 00:10:05,720
functionality we can even you can even

00:10:02,900 --> 00:10:08,670
well tinker with the bootloader little

00:10:05,720 --> 00:10:12,770
to actually have a check did your system

00:10:08,670 --> 00:10:17,580
boot properly or not if I didn't happen

00:10:12,770 --> 00:10:20,580
just reboot into the former version so

00:10:17,580 --> 00:10:23,340
if you can't no panics after upgrade you

00:10:20,580 --> 00:10:25,590
automatically automatically go backwards

00:10:23,340 --> 00:10:29,100
to the former version of the colonel and

00:10:25,590 --> 00:10:32,190
your system still stays online you can't

00:10:29,100 --> 00:10:34,890
really kill it or break it which i think

00:10:32,190 --> 00:10:37,590
is very important for a system running

00:10:34,890 --> 00:10:40,650
my heating in winter when i am not at

00:10:37,590 --> 00:10:42,600
home and there's the security update

00:10:40,650 --> 00:10:44,820
upgrade for the kernel which I don't

00:10:42,600 --> 00:10:48,930
maintain myself because somebody does it

00:10:44,820 --> 00:10:50,970
already and while I'm not at home I

00:10:48,930 --> 00:10:53,460
don't want my eating to to be killed but

00:10:50,970 --> 00:10:56,640
I still want the security to not have my

00:10:53,460 --> 00:11:00,850
eating being hooked up to a button

00:10:56,640 --> 00:11:09,010
so this mechanism will will save me from

00:11:00,850 --> 00:11:11,050
any of these and as I said we have we

00:11:09,010 --> 00:11:13,660
have these free snaps the counter of the

00:11:11,050 --> 00:11:16,240
core and the gadget snip and I'll go

00:11:13,660 --> 00:11:20,410
through the different snap types of

00:11:16,240 --> 00:11:22,780
little so that the course nap is of type

00:11:20,410 --> 00:11:26,800
of less I gave you the types in the

00:11:22,780 --> 00:11:31,150
beginning there's there was loose what's

00:11:26,800 --> 00:11:35,080
the comic or less bomb on the desktop

00:11:31,150 --> 00:11:37,060
install we actually use the course map

00:11:35,080 --> 00:11:39,820
as an execution environment you could

00:11:37,060 --> 00:11:41,890
imagine it as a container I don't like

00:11:39,820 --> 00:11:44,620
saying container it's so overuse

00:11:41,890 --> 00:11:50,280
nowadays and it isn't really a container

00:11:44,620 --> 00:11:53,050
I mean but yeah it is it makes sure that

00:11:50,280 --> 00:11:57,190
every snap has the same environment

00:11:53,050 --> 00:11:59,260
everywhere which which means i can build

00:11:57,190 --> 00:12:03,750
it once for one architecture and it will

00:11:59,260 --> 00:12:06,490
run everywhere on all versions of other

00:12:03,750 --> 00:12:10,090
other systems simply because my tipsy is

00:12:06,490 --> 00:12:12,550
always thing because well all the bits

00:12:10,090 --> 00:12:18,880
and pieces with cheese are always the

00:12:12,550 --> 00:12:21,610
same on the on the iot images on the

00:12:18,880 --> 00:12:24,460
would require images we make this snap

00:12:21,610 --> 00:12:27,070
the root filesystem it's a logical step

00:12:24,460 --> 00:12:30,550
you don't really want to add extra stuff

00:12:27,070 --> 00:12:32,950
or fill it with extra tough stuff if you

00:12:30,550 --> 00:12:36,580
have a really working root filesystem oh

00:12:32,950 --> 00:12:40,120
and i miss to say that but our root file

00:12:36,580 --> 00:12:43,020
system is about 60 megabyte pick only so

00:12:40,120 --> 00:12:43,020
it's very very small

00:12:46,100 --> 00:12:52,519
and well all you go you want to do there

00:12:49,160 --> 00:12:54,259
is to run the snap demon and for

00:12:52,519 --> 00:12:57,500
services you want to be able to have

00:12:54,259 --> 00:13:00,920
systemd fire up the services so if you

00:12:57,500 --> 00:13:04,069
want to run system beep we guarantee you

00:13:00,920 --> 00:13:08,050
a shell so you can use shell scripts in

00:13:04,069 --> 00:13:12,550
use now and we guarantee you the same

00:13:08,050 --> 00:13:12,550
literary version everywhere all the time

00:13:13,690 --> 00:13:19,670
the interfaces I showed before in the in

00:13:16,699 --> 00:13:24,529
the long list on the left are actually

00:13:19,670 --> 00:13:26,480
provided by the by the course name so it

00:13:24,529 --> 00:13:31,130
gives you access to certain parts of the

00:13:26,480 --> 00:13:33,399
system um that goes as far as I don't

00:13:31,130 --> 00:13:37,190
know if you read the price match but

00:13:33,399 --> 00:13:40,639
messy garage actually attached the

00:13:37,190 --> 00:13:43,490
security model of snaps because if you

00:13:40,639 --> 00:13:48,440
if you use a snap on the desktop and use

00:13:43,490 --> 00:13:52,670
the x11 interface it indeed gets all the

00:13:48,440 --> 00:13:54,470
insecurities of the x11 protocol so

00:13:52,670 --> 00:13:57,439
don't do that if you see surely be

00:13:54,470 --> 00:13:58,819
careful for security but it's it is it

00:13:57,439 --> 00:14:02,930
is something you can't really get around

00:13:58,819 --> 00:14:04,790
if you don't use wayland on there one of

00:14:02,930 --> 00:14:06,649
the one of those safe display servers

00:14:04,790 --> 00:14:13,279
then you really inherit all the

00:14:06,649 --> 00:14:14,990
insecurities of x.x protocol so this

00:14:13,279 --> 00:14:16,579
comes through an interface and you could

00:14:14,990 --> 00:14:18,620
disconnect that interface I mean your

00:14:16,579 --> 00:14:21,620
application will do any graphical stuff

00:14:18,620 --> 00:14:26,569
anymore but it would then be as safe as

00:14:21,620 --> 00:14:30,220
any on the other snap in the West snap

00:14:26,569 --> 00:14:32,930
we have also a configuration interface

00:14:30,220 --> 00:14:35,420
so the snap command which you use to

00:14:32,930 --> 00:14:41,779
snap install and snap remove and snap

00:14:35,420 --> 00:14:46,389
for snap refresh can also use set and

00:14:41,779 --> 00:14:49,220
catch for certain snaps so here I'm

00:14:46,389 --> 00:14:53,389
actually showing the info for the course

00:14:49,220 --> 00:14:55,339
nap you can see that when it comes that

00:14:53,389 --> 00:14:57,590
it that it comes in different versions

00:14:55,339 --> 00:15:01,310
in different channels

00:14:57,590 --> 00:15:05,900
that means my my buddies in the company

00:15:01,310 --> 00:15:09,080
in the queue a CIA team can actually

00:15:05,900 --> 00:15:13,730
grab the candidate snap and run all that

00:15:09,080 --> 00:15:16,940
helps on it and once once they think it

00:15:13,730 --> 00:15:21,770
is stable I can promote promote this

00:15:16,940 --> 00:15:24,320
version to stable and while I develop

00:15:21,770 --> 00:15:28,550
stuff I'm indeed using the edge channel

00:15:24,320 --> 00:15:32,480
and they I break all the time and play

00:15:28,550 --> 00:15:34,160
with things and if you if you use the

00:15:32,480 --> 00:15:36,080
Buddhist match though which you don't

00:15:34,160 --> 00:15:38,930
have to by the way you could run your

00:15:36,080 --> 00:15:41,090
own store not with all the bells and

00:15:38,930 --> 00:15:44,390
whistles we we offer in the woodland

00:15:41,090 --> 00:15:46,400
store if you used to go to store you

00:15:44,390 --> 00:15:49,640
will always have these four channels and

00:15:46,400 --> 00:15:57,770
you can always decide what you use for

00:15:49,640 --> 00:15:59,930
which so as I sense they are well some

00:15:57,770 --> 00:16:03,680
some configuration options so you can

00:15:59,930 --> 00:16:08,210
use not many yet but but they grow over

00:16:03,680 --> 00:16:10,730
time since since snap is open to core is

00:16:08,210 --> 00:16:13,030
a completely rolling model you

00:16:10,730 --> 00:16:16,700
constantly get updates and improvement

00:16:13,030 --> 00:16:19,450
so this configuration interface will

00:16:16,700 --> 00:16:22,250
grow and grow and grow I just have the

00:16:19,450 --> 00:16:25,430
hostname management ready that the land

00:16:22,250 --> 00:16:29,660
within the next two weeks you will be

00:16:25,430 --> 00:16:32,930
able to set the time server um you are

00:16:29,660 --> 00:16:36,500
able to turn off logging at the moment

00:16:32,930 --> 00:16:38,780
so people people ask me about oh well

00:16:36,500 --> 00:16:43,160
doesn't like we're out my SD card when

00:16:38,780 --> 00:16:45,770
when I run of this look so I gave them

00:16:43,160 --> 00:16:51,440
an opportunity to just turn off his luck

00:16:45,770 --> 00:16:59,210
and um similar to how you can disable

00:16:51,440 --> 00:17:01,340
their for each service oh I try to try

00:16:59,210 --> 00:17:07,840
to show here that you can either

00:17:01,340 --> 00:17:09,870
directly call the whole the whole option

00:17:07,840 --> 00:17:14,390
which then just gives you

00:17:09,870 --> 00:17:18,800
the value of the object or if you if you

00:17:14,390 --> 00:17:23,160
use a higher level so drop off the the

00:17:18,800 --> 00:17:26,130
book last part you get you get a Jason

00:17:23,160 --> 00:17:28,319
file which you could also feed into it

00:17:26,130 --> 00:17:31,830
so you could could write a little Jason

00:17:28,319 --> 00:17:33,600
file on that actually configures your

00:17:31,830 --> 00:17:44,010
own system with all the configuration

00:17:33,600 --> 00:17:53,160
options in them so let's get to the

00:17:44,010 --> 00:17:58,340
Commerce snap we as I said before we

00:17:53,160 --> 00:18:01,020
need some viewer bits in a bomber

00:17:58,340 --> 00:18:06,660
currently it's I think it's a bama or

00:18:01,020 --> 00:18:08,550
3.6 that we require and we offer may

00:18:06,660 --> 00:18:11,370
actually offer back patch back toward

00:18:08,550 --> 00:18:14,040
trees so you can just if you have one of

00:18:11,370 --> 00:18:17,400
the supported kernel versions there well

00:18:14,040 --> 00:18:22,170
you can just proved it into the utana

00:18:17,400 --> 00:18:26,640
tree from Colonel google com they go

00:18:22,170 --> 00:18:29,640
upstream but often we require newer

00:18:26,640 --> 00:18:33,510
features then you have an upstream or in

00:18:29,640 --> 00:18:39,780
in other kernels so might make sense to

00:18:33,510 --> 00:18:43,050
just use our jury um since the core Core

00:18:39,780 --> 00:18:46,550
snap is read-only but you OS wants to

00:18:43,050 --> 00:18:50,190
ride too far or wants to wants to set up

00:18:46,550 --> 00:18:55,320
certain this in in in the system

00:18:50,190 --> 00:18:57,870
writable there's set up in the inner

00:18:55,320 --> 00:19:01,380
tidy but actually does that it takes the

00:18:57,870 --> 00:19:06,440
course net and uses a writable part on

00:19:01,380 --> 00:19:09,780
the disk to actually um bind mount the

00:19:06,440 --> 00:19:14,040
the light writable bits into the system

00:19:09,780 --> 00:19:17,970
so it can boot we have a snap craft

00:19:14,040 --> 00:19:20,820
plug-in for the Karma so if you if you

00:19:17,970 --> 00:19:21,810
have ecology and well have that I'm a

00:19:20,820 --> 00:19:25,380


00:19:21,810 --> 00:19:27,360
in this country you can just cause me a

00:19:25,380 --> 00:19:30,090
craft at the top level and it will do

00:19:27,360 --> 00:19:35,070
the right thing we will compile you the

00:19:30,090 --> 00:19:38,520
image or your whatever image and it will

00:19:35,070 --> 00:19:43,620
put in an IV in there and it will create

00:19:38,520 --> 00:19:46,410
a snap you can you can use any BSP coma

00:19:43,620 --> 00:19:49,770
we don't really have bigger requirements

00:19:46,410 --> 00:19:56,490
then well you still use a bomber bits

00:19:49,770 --> 00:20:01,680
and use a certain set of default config

00:19:56,490 --> 00:20:07,770
options the config options can be found

00:20:01,680 --> 00:20:11,760
under the sea lo and where the S

00:20:07,770 --> 00:20:15,840
namespace support is required and second

00:20:11,760 --> 00:20:18,390
needs to be enabled and yeah I mentioned

00:20:15,840 --> 00:20:19,950
before that you can always roll back

00:20:18,390 --> 00:20:23,180
your honor or it rolls back

00:20:19,950 --> 00:20:26,570
automatically when something bad happens

00:20:23,180 --> 00:20:30,510
so this is probably the most interesting

00:20:26,570 --> 00:20:35,610
snap in the image because it defines

00:20:30,510 --> 00:20:38,100
what your image is it tells it as what

00:20:35,610 --> 00:20:40,650
kind of petitioning you need if you look

00:20:38,100 --> 00:20:43,470
at a letter I don't know how many times

00:20:40,650 --> 00:20:45,180
he looked at Dragon Balls already but

00:20:43,470 --> 00:20:47,250
you have eight partitions in the top I

00:20:45,180 --> 00:20:51,240
don't do anything to your system they

00:20:47,250 --> 00:20:53,310
are just there for booty so the tool

00:20:51,240 --> 00:20:56,010
building the image needs to know that

00:20:53,310 --> 00:21:00,840
you need these admonitions like certain

00:20:56,010 --> 00:21:04,620
bits need to live in there and there are

00:21:00,840 --> 00:21:07,950
signatures in the GBD but all these

00:21:04,620 --> 00:21:13,170
these binary blobs look for to change

00:21:07,950 --> 00:21:16,260
out each other so that's what I

00:21:13,170 --> 00:21:17,640
described in the gadget gamma filed to

00:21:16,260 --> 00:21:21,090
actually make these positions available

00:21:17,640 --> 00:21:24,150
on SD card since we don't boot from the

00:21:21,090 --> 00:21:28,680
MMC we don't touch them and free at all

00:21:24,150 --> 00:21:31,050
in the moment indeed we need to ship the

00:21:28,680 --> 00:21:32,100
bootloader somewhere and the conflict

00:21:31,050 --> 00:21:35,170
for it

00:21:32,100 --> 00:21:40,050
which as I said before has some

00:21:35,170 --> 00:21:44,620
specialties in it like the rollback and

00:21:40,050 --> 00:21:46,750
indeed it can tell the system that it

00:21:44,620 --> 00:21:49,510
wants additional snaps like that is

00:21:46,750 --> 00:21:52,000
described in the bottom you might want

00:21:49,510 --> 00:21:55,650
to want to do a video player appliance

00:21:52,000 --> 00:21:58,390
and have Cody as a snap in your image

00:21:55,650 --> 00:22:04,300
you can define that in your in your

00:21:58,390 --> 00:22:07,360
gadget and you can define but but your

00:22:04,300 --> 00:22:09,700
system needs certain connections certain

00:22:07,360 --> 00:22:13,540
certain extra extra interface

00:22:09,700 --> 00:22:20,530
connections in do actually run whatever

00:22:13,540 --> 00:22:23,020
you pre-install there this is this is

00:22:20,530 --> 00:22:26,290
for example it's not the complete one I

00:22:23,020 --> 00:22:30,010
hate to captain bit out as wouldn't be

00:22:26,290 --> 00:22:34,690
readable but this is for example the

00:22:30,010 --> 00:22:38,080
gadget gamal follow the dragon board we

00:22:34,690 --> 00:22:42,580
have we have very detailed documentation

00:22:38,080 --> 00:22:45,310
online I point to it later um for each

00:22:42,580 --> 00:22:49,750
of these options but that are listed

00:22:45,310 --> 00:22:51,760
there but as you can see um I can define

00:22:49,750 --> 00:22:53,890
the bootloader here it could be Hubert

00:22:51,760 --> 00:22:57,090
oh crap that's only two we currently

00:22:53,890 --> 00:23:00,400
support I heard upcoming board from

00:22:57,090 --> 00:23:04,800
necessarily use about you dude so we

00:23:00,400 --> 00:23:07,090
will probably find a third option um

00:23:04,800 --> 00:23:10,060
these are these are the petitions I

00:23:07,090 --> 00:23:13,590
talked about before of which you have h

00:23:10,060 --> 00:23:19,660
I didn't show all right with her with a

00:23:13,590 --> 00:23:22,510
little types that you need there yeah

00:23:19,660 --> 00:23:24,460
I've define where the device he lives

00:23:22,510 --> 00:23:29,080
and which you guys free file I want to

00:23:24,460 --> 00:23:31,630
use and at the end you see is my you

00:23:29,080 --> 00:23:35,290
good image and it is Miley fat partition

00:23:31,630 --> 00:23:37,920
layer all additional staff can live but

00:23:35,290 --> 00:23:37,920
I need for booting

00:23:42,429 --> 00:23:49,900
we provide a tool it's called window

00:23:45,170 --> 00:23:53,630
image to build an image I need I need to

00:23:49,900 --> 00:23:57,410
provide a GP g sine txt file a show that

00:23:53,630 --> 00:23:59,630
later um go to image read spread gadget

00:23:57,410 --> 00:24:01,130
Yama file and then creates the

00:23:59,630 --> 00:24:05,870
partitions that were defined in there

00:24:01,130 --> 00:24:09,860
and outcomes either an SD card image as

00:24:05,870 --> 00:24:13,190
we produces to date or if we ever want

00:24:09,860 --> 00:24:15,350
to actually provide an MHC emmc image

00:24:13,190 --> 00:24:19,190
and don't don't really want to

00:24:15,350 --> 00:24:22,070
repartition the emmc we can pre define

00:24:19,190 --> 00:24:27,290
IMG files but the video that you can be

00:24:22,070 --> 00:24:29,660
D into the different partitions Ubuntu

00:24:27,290 --> 00:24:34,640
image is available f of snap on your

00:24:29,660 --> 00:24:39,260
desktop if you run ubuntu LGF any LGS

00:24:34,640 --> 00:24:42,950
1404 or 64 and you can find the

00:24:39,260 --> 00:24:46,660
documentation for it here to actually

00:24:42,950 --> 00:24:46,660
well try it out if you want

00:24:50,190 --> 00:24:56,470
this is the assertion file that i

00:24:53,470 --> 00:24:59,289
mentioned before it has the gbg

00:24:56,470 --> 00:25:01,629
signature in here and tells you which

00:24:59,289 --> 00:25:04,359
key was used which is in this case the

00:25:01,629 --> 00:25:09,970
canonical key and it says which gadget

00:25:04,359 --> 00:25:12,659
and Connor snaps I news so in in my in

00:25:09,970 --> 00:25:16,179
my cootie example I would would actually

00:25:12,659 --> 00:25:18,850
have the Cody in the de pinna in the

00:25:16,179 --> 00:25:22,269
dragon ball catch it and would use basil

00:25:18,850 --> 00:25:26,109
session file to actually create create a

00:25:22,269 --> 00:25:30,940
canonical science official or cody image

00:25:26,109 --> 00:25:33,249
for the dragon board as you can see it

00:25:30,940 --> 00:25:37,419
says which which architecture we use I

00:25:33,249 --> 00:25:39,609
think it is possible to actually run mhf

00:25:37,419 --> 00:25:43,809
on the dragon boat I haven't tried to

00:25:39,609 --> 00:25:45,879
put it should be possible so in that

00:25:43,809 --> 00:25:53,200
case I would would put on a chair in

00:25:45,879 --> 00:25:58,539
there as I mentioned before it's pretty

00:25:53,200 --> 00:26:01,059
easy to create a snap you just have the

00:25:58,539 --> 00:26:06,639
single fire in the very top level of

00:26:01,059 --> 00:26:08,739
your of your tree and can land well just

00:26:06,639 --> 00:26:10,419
one snap pressed and it will will find

00:26:08,739 --> 00:26:14,379
the base dependencies find the run

00:26:10,419 --> 00:26:16,869
runtime dependencies um if you use

00:26:14,379 --> 00:26:18,909
something like Nathan it will use the

00:26:16,869 --> 00:26:22,690
maven plugin to equip all the right

00:26:18,909 --> 00:26:25,659
things in the right wave if you use NPM

00:26:22,690 --> 00:26:28,059
it will install the right-hand p.m. or

00:26:25,659 --> 00:26:32,249
modules so you don't need to do that

00:26:28,059 --> 00:26:34,570
yourself or need to need to care for it

00:26:32,249 --> 00:26:41,559
it will just make available what you

00:26:34,570 --> 00:26:43,919
need so it it can actually integrate

00:26:41,559 --> 00:26:47,379
with anything that out there already or

00:26:43,919 --> 00:26:50,379
nearly everything I'm pretty sure you

00:26:47,379 --> 00:26:55,119
would find some examples which kept wet

00:26:50,379 --> 00:26:59,090
 indeed you don't need to build

00:26:55,119 --> 00:27:00,680
locally all the time so there is there's

00:26:59,090 --> 00:27:03,260
food support for snap building in

00:27:00,680 --> 00:27:05,210
launchpad which means you can benefit

00:27:03,260 --> 00:27:08,480
off the different architecture builders

00:27:05,210 --> 00:27:13,040
which launched mint office you could

00:27:08,480 --> 00:27:17,690
build your app for at 39 TX or powerpc

00:27:13,040 --> 00:27:22,310
six before or arm 64 without having an

00:27:17,690 --> 00:27:25,670
arm 64 machine or powerpc machine the

00:27:22,310 --> 00:27:27,950
integration for github as well I think

00:27:25,670 --> 00:27:30,680
it uses kind of the slap of the

00:27:27,950 --> 00:27:34,280
launchpad Barris Jamie knows more weapon

00:27:30,680 --> 00:27:36,740
I'm used yet but so you can actually

00:27:34,280 --> 00:27:39,350
directly bit from github internet craft

00:27:36,740 --> 00:27:42,080
aisle and out comes a snap into the

00:27:39,350 --> 00:27:48,320
store so you don't need to do anything

00:27:42,080 --> 00:27:51,280
it can just have your commits and there

00:27:48,320 --> 00:27:55,130
will be a snap in your edge channel and

00:27:51,280 --> 00:27:57,800
if you want to learn snap crust it has a

00:27:55,130 --> 00:28:01,130
built-in tour so you just wanna press

00:27:57,800 --> 00:28:04,880
tour in your terminal and it will guide

00:28:01,130 --> 00:28:08,330
you through if you prefer to read about

00:28:04,880 --> 00:28:15,290
it you go to smash after you and that's

00:28:08,330 --> 00:28:20,510
all the documentation so let's get into

00:28:15,290 --> 00:28:26,990
the very hairy details of the porch for

00:28:20,510 --> 00:28:30,140
the dragon board there you see the

00:28:26,990 --> 00:28:32,810
actual snaps half gamma files that you

00:28:30,140 --> 00:28:35,390
could use in this in this linear tree we

00:28:32,810 --> 00:28:37,670
don't do that at the moment I'm just

00:28:35,390 --> 00:28:39,650
repackaging the depth that we that we

00:28:37,670 --> 00:28:44,120
built before because that sign for the

00:28:39,650 --> 00:28:47,510
archive key in case we ever need secure

00:28:44,120 --> 00:28:49,460
boot in any way when this this will use

00:28:47,510 --> 00:28:52,010
the canonical key so currently for the

00:28:49,460 --> 00:28:55,490
official suppressed and follow for the

00:28:52,010 --> 00:28:58,460
Fisher's map driver too many snaps for

00:28:55,490 --> 00:29:01,430
the official Snapdragon kernel that we

00:28:58,460 --> 00:29:04,220
have in our archive for the dragon board

00:29:01,430 --> 00:29:06,410
we are not using this but if you would

00:29:04,220 --> 00:29:08,930
if you would reboot your own Connor you

00:29:06,410 --> 00:29:11,800
could actually just just take this file

00:29:08,930 --> 00:29:15,460
and all this tree and runs my customer

00:29:11,800 --> 00:29:18,970
clever and it should come out as the

00:29:15,460 --> 00:29:26,860
same time without the secure boot

00:29:18,970 --> 00:29:29,290
signature so if you don't want to use

00:29:26,860 --> 00:29:35,710
the Dragon Ball channel we have a set of

00:29:29,290 --> 00:29:38,820
sample kernels on github and the full of

00:29:35,710 --> 00:29:43,930
ammo free pet set that you need for full

00:29:38,820 --> 00:29:48,060
snappy support is or can be found under

00:29:43,930 --> 00:29:51,730
that address i haven't uploaded the

00:29:48,060 --> 00:29:53,860
slides to google in our system yet but i

00:29:51,730 --> 00:29:58,090
will do that so you can just look it up

00:29:53,860 --> 00:30:00,460
there for using you good on the dragon

00:29:58,090 --> 00:30:05,380
board or wealth or using you would

00:30:00,460 --> 00:30:09,250
anywhere we ran into a bunch of problems

00:30:05,380 --> 00:30:12,400
so having having the configuration as a

00:30:09,250 --> 00:30:15,370
text file on reset and I've seen that on

00:30:12,400 --> 00:30:20,290
all embedded boards I ever used if if

00:30:15,370 --> 00:30:23,200
both sides bootloader end will s right

00:30:20,290 --> 00:30:28,960
to the leaf it after a while it just

00:30:23,200 --> 00:30:32,580
corrupts itself I don't know why and to

00:30:28,960 --> 00:30:35,590
prevent that completely we we decided to

00:30:32,580 --> 00:30:42,160
to drop the whole mission mechanism and

00:30:35,590 --> 00:30:45,820
simply use a binary blob of of a cubed

00:30:42,160 --> 00:30:49,350
configuration so we now put a binary

00:30:45,820 --> 00:30:52,870
blob file into a reset but we then

00:30:49,350 --> 00:30:54,940
modify from either side and since the

00:30:52,870 --> 00:30:57,130
size never changes and the position

00:30:54,940 --> 00:31:00,970
never changes on the wii fit you don't

00:30:57,130 --> 00:31:03,700
get any corruption at all it's atomic

00:31:00,970 --> 00:31:08,080
atomic right writing inside the binary

00:31:03,700 --> 00:31:11,520
blob so it just changes brightens up but

00:31:08,080 --> 00:31:14,380
to achieve that you need these two

00:31:11,520 --> 00:31:17,770
configuration options in sure you would

00:31:14,380 --> 00:31:20,280
build which means we can't you can't

00:31:17,770 --> 00:31:23,299
leave if that's not used up stream which

00:31:20,280 --> 00:31:25,669
it usually never is

00:31:23,299 --> 00:31:30,289
and you have to modify your you book

00:31:25,669 --> 00:31:36,049
field and we don't really want to use

00:31:30,289 --> 00:31:38,440
any any you ended up the fiddling or

00:31:36,049 --> 00:31:40,999
anything else we just want to use the

00:31:38,440 --> 00:31:43,159
typical as you use it in i'm going to on

00:31:40,999 --> 00:31:47,090
the on the desktop as well with typical

00:31:43,159 --> 00:31:51,259
inner daddy um in a normal compressed

00:31:47,090 --> 00:31:58,460
format so we require this with energy

00:31:51,259 --> 00:32:00,739
setting this is all the magic that is

00:31:58,460 --> 00:32:05,869
being used to make sure that you're

00:32:00,739 --> 00:32:08,269
panicking Colonel rolls back as you can

00:32:05,869 --> 00:32:13,779
see you guys a lot of if then else going

00:32:08,269 --> 00:32:16,489
on and snap t actually set the flag well

00:32:13,779 --> 00:32:18,350
went when installing a new Chronos happy

00:32:16,489 --> 00:32:22,009
set the flags in there in the

00:32:18,350 --> 00:32:25,399
environment when it tries out this

00:32:22,009 --> 00:32:27,350
column and if this flag isn't gun then

00:32:25,399 --> 00:32:31,759
it will roll back to the former color

00:32:27,350 --> 00:32:35,690
and reboot in a way that a parent always

00:32:31,759 --> 00:32:37,909
causes a reboot so you automatically go

00:32:35,690 --> 00:32:40,549
back and that works with a with the

00:32:37,909 --> 00:32:43,429
colonel snapped right owner as well as

00:32:40,549 --> 00:32:44,960
with the root file system so if anything

00:32:43,429 --> 00:32:47,710
of your boot process would be broken

00:32:44,960 --> 00:32:50,690
because of a broken would file system

00:32:47,710 --> 00:33:00,259
which you can blame me for I would have

00:32:50,690 --> 00:33:02,149
broken it then it would roll back since

00:33:00,259 --> 00:33:04,309
not everybody wants to his snaps all the

00:33:02,149 --> 00:33:08,320
time and you might want to do

00:33:04,309 --> 00:33:10,399
development on your board gives you an

00:33:08,320 --> 00:33:13,009
environment where you can actually just

00:33:10,399 --> 00:33:16,789
use a standard Ubuntu environment with

00:33:13,009 --> 00:33:19,659
apps and step dpkg and everything you

00:33:16,789 --> 00:33:24,789
can just install the classic the classic

00:33:19,659 --> 00:33:28,179
snap in that mode from their channel and

00:33:24,789 --> 00:33:31,700
run sudo classic and you end up in a

00:33:28,179 --> 00:33:34,960
pseudo shell or in a root shell in in a

00:33:31,700 --> 00:33:37,750
classic system that is using exactly

00:33:34,960 --> 00:33:40,000
the same squash surface that you booted

00:33:37,750 --> 00:33:43,570
from so you can be sure it's one hundred

00:33:40,000 --> 00:33:46,230
percent identical and it Batman to your

00:33:43,570 --> 00:33:48,549
home file system your home directory so

00:33:46,230 --> 00:33:51,460
all the work you do in there is

00:33:48,549 --> 00:33:54,760
available to the normal would the core

00:33:51,460 --> 00:33:59,580
system after you left with exit from the

00:33:54,760 --> 00:34:03,250
shell that means you can install a craft

00:33:59,580 --> 00:34:12,310
in your board and then build with snap

00:34:03,250 --> 00:34:15,669
craft while developing more tinkering so

00:34:12,310 --> 00:34:20,349
if you if you feel like contacting us

00:34:15,669 --> 00:34:24,700
and didn't fall asleep yet I know it's

00:34:20,349 --> 00:34:27,730
hard it's latent another super exciting

00:34:24,700 --> 00:34:30,879
speaker oh if you feel like contacting

00:34:27,730 --> 00:34:37,320
us or have questions so here is a set of

00:34:30,879 --> 00:34:41,909
a set of 4 q eles and mailing lists and

00:34:37,320 --> 00:34:41,909
well channels

00:34:45,500 --> 00:34:52,360
that's it oh I should probably in case

00:34:50,360 --> 00:34:57,200
somebody wants to write something down

00:34:52,360 --> 00:35:02,470
um be fed here so if there are any

00:34:57,200 --> 00:35:02,470
questions I'm here

00:35:16,920 --> 00:35:25,750
[Applause]

00:35:21,040 --> 00:35:25,750

YouTube URL: https://www.youtube.com/watch?v=LM5k1QlRSLQ


