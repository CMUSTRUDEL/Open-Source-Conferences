Title: BUD17-510 Power management in Linux together with secure firmware
Publication date: 2017-03-15
Playlist: Linaro Connect Budapest 2017
Description: 
	"Session ID: BUD17-510
Session Name: Power management in Linux together with secure firmware - BUD17-510
Speaker: Vincent Guittot, Joakim Bech

Track: Security


★ Session Summary ★
On a device it’s not uncommon to share power domains between secure and non-secure side, for example between a TEE and Linux kernel. With that comes some challenges that needs to be taken care of and that is the theme for this presentation. We’ve identified a couple of challenges when it comes to power management and security. One case is when sharing power resources (clock, power domains, ...) between secure and non-secure devices. Another is to make a proper shutdown and boot-up sequence (CPU on/off etc) and finally there has been some concerns regarding the latency when communicating with PSCI. In this session we would like to highlight those and discuss what the short and long term plans are.
---------------------------------------------------
★ Resources ★
Event Page: http://connect.linaro.org/resource/bud17/bud17-510/
Presentation: https://www.slideshare.net/linaroorg/bud17510-power-management-in-linux-together-with-secure-firmware
Video: https://youtu.be/MNvTBGNQRDY
 ---------------------------------------------------

★ Event Details ★
Linaro Connect Budapest 2017 (BUD17)
6-10 March 2017
Corinthia Hotel, Budapest,
Erzsébet krt. 43-49,
1073 Hungary

---------------------------------------------------
Keyword: security, power-management, linux
http://www.linaro.org
http://connect.linaro.org
---------------------------------------------------
Follow us on Social Media
https://www.facebook.com/LinaroOrg
https://twitter.com/linaroorg
https://www.youtube.com/user/linaroorg?sub_confirmation=1
https://www.linkedin.com/company/1026961"
Captions: 
	00:00:00,130 --> 00:00:04,110
[Music]

00:00:08,900 --> 00:00:14,340
[Music]

00:00:10,910 --> 00:00:16,289
so hello and welcome to this little

00:00:14,340 --> 00:00:18,359
presentation about power management and

00:00:16,289 --> 00:00:20,760
security and the interaction between

00:00:18,359 --> 00:00:27,210
them I'm you I can make him we have been

00:00:20,760 --> 00:00:28,680
sawn here also hi so means only is the

00:00:27,210 --> 00:00:30,539
technique for power management and i'm

00:00:28,680 --> 00:00:32,969
working with security and we are kind of

00:00:30,539 --> 00:00:34,950
we know that there are all labs in areas

00:00:32,969 --> 00:00:37,559
that we need to address sooner than

00:00:34,950 --> 00:00:39,809
later and we haven't done that much work

00:00:37,559 --> 00:00:42,480
in the past but we have some experience

00:00:39,809 --> 00:00:45,239
from previous jobs and so on about

00:00:42,480 --> 00:00:48,750
things that we need to look into so this

00:00:45,239 --> 00:00:50,399
is more or less like a summary all the

00:00:48,750 --> 00:00:59,609
things that we think is important to

00:00:50,399 --> 00:01:01,879
sort paying attention to now so so this

00:00:59,609 --> 00:01:05,580
summarize it I mean we are working

00:01:01,879 --> 00:01:07,710
environment where we share devices

00:01:05,580 --> 00:01:10,080
clocks and whatever between normal and

00:01:07,710 --> 00:01:12,299
secure world and usually as you know it

00:01:10,080 --> 00:01:14,310
seems Carl that controls everything and

00:01:12,299 --> 00:01:16,770
we don't really want to change that but

00:01:14,310 --> 00:01:18,960
we need to have some kind of way of

00:01:16,770 --> 00:01:21,420
communicating we've secured world when

00:01:18,960 --> 00:01:23,729
there are shared resources and one

00:01:21,420 --> 00:01:28,460
example here is the crypto blocks for

00:01:23,729 --> 00:01:28,460
example we have one more slide here but

00:01:28,880 --> 00:01:37,979
please add image you want to when other

00:01:32,280 --> 00:01:40,049
adventures continue ok yeah so yeah the

00:01:37,979 --> 00:01:41,880
Decrypter blocks here I mean we we have

00:01:40,049 --> 00:01:45,390
been in one place before we had an issue

00:01:41,880 --> 00:01:48,149
here that basically the crystal block

00:01:45,390 --> 00:01:50,100
was it was shown as two different blocks

00:01:48,149 --> 00:01:51,479
but in relatives were seen you look so

00:01:50,100 --> 00:01:53,520
you could imagine what would happen when

00:01:51,479 --> 00:01:55,979
both linux and the surrogate the secure

00:01:53,520 --> 00:01:59,130
side wanted to do hardware acceleration

00:01:55,979 --> 00:02:00,899
at the same time and that costs a lot of

00:01:59,130 --> 00:02:02,549
headache for us and that's the type of

00:02:00,899 --> 00:02:05,130
things that we think that we need to

00:02:02,549 --> 00:02:07,020
look into now and see if we can can you

00:02:05,130 --> 00:02:09,330
do it in a general way or if the assault

00:02:07,020 --> 00:02:10,240
of something that is very unique four

00:02:09,330 --> 00:02:19,120
different

00:02:10,240 --> 00:02:21,880
as a CS and so on yeah so another issue

00:02:19,120 --> 00:02:23,770
that has been raised to us is the cpu

00:02:21,880 --> 00:02:28,480
latency so we have some discussion with

00:02:23,770 --> 00:02:32,710
members who are there today and it had

00:02:28,480 --> 00:02:35,650
been resolved and I'm 64gb either side

00:02:32,710 --> 00:02:41,500
is managed by objects appear and psti a

00:02:35,650 --> 00:02:44,500
blue secured side and we have been

00:02:41,500 --> 00:02:46,450
naughty notified that the Latin see for

00:02:44,500 --> 00:02:48,580
powering up and down the city and the

00:02:46,450 --> 00:02:50,890
cluster of increased compared to

00:02:48,580 --> 00:02:55,390
previous solution when PC I was not

00:02:50,890 --> 00:02:58,360
involved involved it looked like so we

00:02:55,390 --> 00:03:01,870
don't have any we haven't done any deep

00:02:58,360 --> 00:03:04,780
test yet but my understand is that the

00:03:01,870 --> 00:03:07,480
time to switch from non-secure ritual to

00:03:04,780 --> 00:03:10,750
secure world added additional latency

00:03:07,480 --> 00:03:13,780
for some sea state where we don't really

00:03:10,750 --> 00:03:17,590
need to go to this figure world I mean

00:03:13,780 --> 00:03:20,800
we all agree that as soon as the city of

00:03:17,590 --> 00:03:23,050
side up the context to save before

00:03:20,800 --> 00:03:25,930
pouring down the cluster for example we

00:03:23,050 --> 00:03:29,560
need to go there but for other sea state

00:03:25,930 --> 00:03:32,620
like retention where there is nothing to

00:03:29,560 --> 00:03:37,540
say because to keep the content of the

00:03:32,620 --> 00:03:40,930
processor adding to switch from Linux to

00:03:37,540 --> 00:03:42,610
the secure world just ask the be made

00:03:40,930 --> 00:03:46,390
for the resumption it will be the waste

00:03:42,610 --> 00:03:53,410
of time so that such kind of concerns

00:03:46,390 --> 00:03:57,490
that have been raised raised to us the

00:03:53,410 --> 00:03:59,440
the other point so yes so that we would

00:03:57,490 --> 00:04:03,670
be fishing through to have a look at how

00:03:59,440 --> 00:04:05,760
we can make more smart decision when we

00:04:03,670 --> 00:04:11,250
have said that they're not need any

00:04:05,760 --> 00:04:13,600
feature work activity we find the ring

00:04:11,250 --> 00:04:16,870
you know they adjust to remove these

00:04:13,600 --> 00:04:19,090
shoes light switch and also we have some

00:04:16,870 --> 00:04:21,769
ongoing and they fought on the line

00:04:19,090 --> 00:04:25,370
excite to consolidate all the info

00:04:21,769 --> 00:04:29,479
nation of GPU and device which are in

00:04:25,370 --> 00:04:32,599
the cluster so that we should minimize

00:04:29,479 --> 00:04:38,210
the number of times we want to do to

00:04:32,599 --> 00:04:39,919
move to up to make this switch is there

00:04:38,210 --> 00:04:41,780
any question a command for some people

00:04:39,919 --> 00:04:46,849
so I know that some people have read at

00:04:41,780 --> 00:04:49,550
safely execute is there any other person

00:04:46,849 --> 00:04:55,569
I'd like to discuss the done so to get

00:04:49,550 --> 00:04:57,860
that input is a significant cost but

00:04:55,569 --> 00:05:00,020
where were the numbers you need to see

00:04:57,860 --> 00:05:02,210
the numbers without have in fact we have

00:05:00,020 --> 00:05:05,300
two members saying that the other things

00:05:02,210 --> 00:05:07,099
I don't have made any that's what I say

00:05:05,300 --> 00:05:10,340
we don't have made any measurement it

00:05:07,099 --> 00:05:12,800
just an input that's a member said with

00:05:10,340 --> 00:05:16,750
PSC I and having to switch for some sea

00:05:12,800 --> 00:05:18,889
state which okay so we have them some

00:05:16,750 --> 00:05:20,300
instrumentation and the cost of

00:05:18,889 --> 00:05:22,400
switching obscure world is at the level

00:05:20,300 --> 00:05:25,159
of nanotech simple cell is this

00:05:22,400 --> 00:05:33,229
tournament in the noise the switching

00:05:25,159 --> 00:05:36,259
from linux and nano second yes okay

00:05:33,229 --> 00:05:38,330
click interesting i will do a guy yet so

00:05:36,259 --> 00:05:41,860
yeah we will do the measurement that's

00:05:38,330 --> 00:05:41,860
not the value we are in mine

00:05:45,249 --> 00:05:52,159
so the other thing that needs to be

00:05:48,830 --> 00:05:53,479
mentioned us sometimes for example

00:05:52,159 --> 00:05:56,270
cluster attention you need to program

00:05:53,479 --> 00:05:59,150
some registers which are accessible

00:05:56,270 --> 00:06:02,029
early from exception level T which the

00:05:59,150 --> 00:06:04,279
corner by itself can do it so you would

00:06:02,029 --> 00:06:06,879
need to switch to the higher exception

00:06:04,279 --> 00:06:11,330
level which where the format is running

00:06:06,879 --> 00:06:16,249
also yeah I don't think we can totally

00:06:11,330 --> 00:06:20,300
avoid you know going into the somewhere

00:06:16,249 --> 00:06:22,849
for some of their attention states okay

00:06:20,300 --> 00:06:25,610
yep maybe I mean as I mentioned into

00:06:22,849 --> 00:06:30,550
that right now that was that's what that

00:06:25,610 --> 00:06:33,469
we know right we we are seated we're

00:06:30,550 --> 00:06:36,439
using psei and having to switch to the

00:06:33,469 --> 00:06:37,879
most make significant change in the

00:06:36,439 --> 00:06:41,479
Latin see compared to what we have

00:06:37,879 --> 00:06:44,240
before just the statement thank you at

00:06:41,479 --> 00:06:50,860
the point so we would like to make a

00:06:44,240 --> 00:06:50,860
measurement will but yeah

00:06:57,650 --> 00:07:04,280
another part which is about device

00:07:01,100 --> 00:07:08,419
latency buildings at fault for some for

00:07:04,280 --> 00:07:11,150
some salt we generally have a limited

00:07:08,419 --> 00:07:13,550
number of poor domain which are

00:07:11,150 --> 00:07:20,030
sometimes share between secure and

00:07:13,550 --> 00:07:23,690
non-secure device and right now as far

00:07:20,030 --> 00:07:26,229
as I can tell there is no real generic

00:07:23,690 --> 00:07:31,400
implementation about how to manage that

00:07:26,229 --> 00:07:34,820
so should we put all the poor management

00:07:31,400 --> 00:07:38,090
on the sickle style so that each time an

00:07:34,820 --> 00:07:40,639
unsecured device and need a cloud we

00:07:38,090 --> 00:07:43,370
have to move back and forth or should we

00:07:40,639 --> 00:07:46,220
consolidate that on each side in order

00:07:43,370 --> 00:07:48,410
to minimize that's another another the

00:07:46,220 --> 00:07:50,000
big that we'd like to to work on out if

00:07:48,410 --> 00:07:51,889
we can make some kind of machinery

00:07:50,000 --> 00:07:54,380
interface in order to manage the shell

00:07:51,889 --> 00:08:01,970
for the main shelter club shared

00:07:54,380 --> 00:08:04,039
resources at the wall this is touching

00:08:01,970 --> 00:08:05,599
exactly what I had in mind about the

00:08:04,039 --> 00:08:07,070
crypto but also I mean across the block

00:08:05,599 --> 00:08:10,060
how do you power is out in power we talk

00:08:07,070 --> 00:08:10,060
how do you share this

00:08:17,370 --> 00:08:23,289
so this is also slightly related and

00:08:20,020 --> 00:08:24,879
this is also we haven't really done any

00:08:23,289 --> 00:08:28,229
work in this aerial cells but this was

00:08:24,879 --> 00:08:31,270
reported to us by company that they

00:08:28,229 --> 00:08:33,310
don't directly use update themselves but

00:08:31,270 --> 00:08:36,969
they have portals to them that are using

00:08:33,310 --> 00:08:39,760
it and it's about how you save the

00:08:36,969 --> 00:08:42,250
states when you're going to suspend to

00:08:39,760 --> 00:08:43,930
ram and arm have the recommended way of

00:08:42,250 --> 00:08:46,839
doing it which basically says that you

00:08:43,930 --> 00:08:50,680
should do oh by the way we is normal its

00:08:46,839 --> 00:08:53,410
environment t is the secure site so the

00:08:50,680 --> 00:08:56,110
way the recommendation is that the we

00:08:53,410 --> 00:08:58,060
should save all the states and then go

00:08:56,110 --> 00:09:00,310
down to the secure side and secure site

00:08:58,060 --> 00:09:04,029
will talk to the PM each and bring you

00:09:00,310 --> 00:09:07,240
to the low-power state but people don't

00:09:04,029 --> 00:09:08,860
want to use the pme code in the teeth

00:09:07,240 --> 00:09:12,130
they want to control it directly for

00:09:08,860 --> 00:09:16,899
minutes so they use they do the second

00:09:12,130 --> 00:09:18,640
case here and there is no real standard

00:09:16,899 --> 00:09:21,100
solution how to do it so they see

00:09:18,640 --> 00:09:23,310
different behaviors or different

00:09:21,100 --> 00:09:27,370
implementations from different partners

00:09:23,310 --> 00:09:29,589
so that is also this serves as both as a

00:09:27,370 --> 00:09:31,269
reminder and something that we should

00:09:29,589 --> 00:09:33,100
look into see if there something we can

00:09:31,269 --> 00:09:36,790
make to make it a little bit more

00:09:33,100 --> 00:09:40,029
generic the issues could be when you

00:09:36,790 --> 00:09:44,290
bring things up that you maybe you need

00:09:40,029 --> 00:09:46,660
to save the cpu States hardware

00:09:44,290 --> 00:09:48,459
configuration IP configuration you have

00:09:46,660 --> 00:09:50,649
the address based on full configuration

00:09:48,459 --> 00:09:52,449
and so on and if you don't do it right

00:09:50,649 --> 00:09:56,370
there is a risk that you can leak

00:09:52,449 --> 00:09:56,370
information when you bring it up again

00:09:59,670 --> 00:10:09,470
so

00:10:01,640 --> 00:10:12,140
open for questions so if italianate but

00:10:09,470 --> 00:10:14,660
this is exactly what I've been thinking

00:10:12,140 --> 00:10:16,400
of for the last couple of weeks ever I

00:10:14,660 --> 00:10:18,950
talked to the jailhouse people who went

00:10:16,400 --> 00:10:22,310
into the exact same issues again on

00:10:18,950 --> 00:10:24,350
armed hardware where I don't know if you

00:10:22,310 --> 00:10:26,990
know jail jail especially aim steady

00:10:24,350 --> 00:10:30,650
partitioning hypervisor which takes

00:10:26,990 --> 00:10:33,020
basically a non-secure system runs linux

00:10:30,650 --> 00:10:34,850
on there then puts a hypervisor

00:10:33,020 --> 00:10:36,680
underneath that linux that already got

00:10:34,850 --> 00:10:39,710
booted on the on that system puts it

00:10:36,680 --> 00:10:42,050
into one vm segments a cpu and a couple

00:10:39,710 --> 00:10:43,810
of peripherals off of that vm and put

00:10:42,050 --> 00:10:48,410
these into a real-time safety-critical

00:10:43,810 --> 00:10:50,360
other enclosure and they wanting into

00:10:48,410 --> 00:10:52,760
these issues too because suddenly one vm

00:10:50,360 --> 00:10:54,140
can turn off devices that the other vm

00:10:52,760 --> 00:10:55,460
was accessing to and depending on your

00:10:54,140 --> 00:10:59,300
hardware that might stall the whole

00:10:55,460 --> 00:11:01,970
system it's a nightmare right you don't

00:10:59,300 --> 00:11:03,680
want to have any of that because any

00:11:01,970 --> 00:11:05,330
layer below that would then have to deal

00:11:03,680 --> 00:11:07,160
with special things for the heck they

00:11:05,330 --> 00:11:09,770
did come for generating something at all

00:11:07,160 --> 00:11:13,250
or to emulate trap and emulate the clock

00:11:09,770 --> 00:11:15,080
registers for that specific platform in

00:11:13,250 --> 00:11:17,750
the hypervisor that doesn't scale we

00:11:15,080 --> 00:11:19,880
can't have specific clock frameworks in

00:11:17,750 --> 00:11:21,680
every single piece of layer of code that

00:11:19,880 --> 00:11:23,510
we have out there we can't have a clock

00:11:21,680 --> 00:11:25,400
framework in the kernel in our ipod to

00:11:23,510 --> 00:11:27,980
be lowered interested somewhere in

00:11:25,400 --> 00:11:30,860
everywhere we go and do the same thing

00:11:27,980 --> 00:11:32,690
five times right it's a terrible world

00:11:30,860 --> 00:11:35,810
to be in and that's basically one of the

00:11:32,690 --> 00:11:38,600
things that for defense of ATP is the

00:11:35,810 --> 00:11:40,280
IGI guys got somewhat right right and

00:11:38,600 --> 00:11:43,490
that they pushed all of the clock and

00:11:40,280 --> 00:11:46,280
power stuff out into film where they did

00:11:43,490 --> 00:11:47,840
not go all the way because that is also

00:11:46,280 --> 00:11:50,300
break involved with jailhouse because

00:11:47,840 --> 00:11:52,520
the AML gets interpreted in year one now

00:11:50,300 --> 00:11:55,730
so you have the same issue as you had

00:11:52,520 --> 00:11:57,890
before but the idea is right anything

00:11:55,730 --> 00:12:00,170
that power control is supposed to be

00:11:57,890 --> 00:12:03,070
hardware-specific which it means your

00:12:00,170 --> 00:12:06,350
husband needs to take care of it right

00:12:03,070 --> 00:12:08,030
so the really big question is how do we

00:12:06,350 --> 00:12:11,510
get to that goal and why don't you want

00:12:08,030 --> 00:12:12,650
to be there the first thing I not quite

00:12:11,510 --> 00:12:14,660
a lot of attention but I have a couple

00:12:12,650 --> 00:12:15,390
of ideas the second one is actually

00:12:14,660 --> 00:12:19,560
really simple to an

00:12:15,390 --> 00:12:21,600
fear lose-lose of control lose of

00:12:19,560 --> 00:12:23,700
ability loss of ability to to change

00:12:21,600 --> 00:12:25,740
things to fix things and experiences in

00:12:23,700 --> 00:12:28,290
the past every time I talked to anyone

00:12:25,740 --> 00:12:29,670
who is reading it in favor of having

00:12:28,290 --> 00:12:31,920
clocked favor of keeping control

00:12:29,670 --> 00:12:34,380
everything in the kernel instead of film

00:12:31,920 --> 00:12:37,230
where essentially the biggest point that

00:12:34,380 --> 00:12:40,020
bring up is that film where is always

00:12:37,230 --> 00:12:42,420
broken it never works it's really hard

00:12:40,020 --> 00:12:43,620
to work with film where people so i

00:12:42,420 --> 00:12:46,080
would rather want to have it in the

00:12:43,620 --> 00:12:49,020
colonel so it just works so i can fix it

00:12:46,080 --> 00:12:53,310
but that's the main concern if we can

00:12:49,020 --> 00:12:55,680
remove that part level and show them

00:12:53,310 --> 00:12:58,940
this is a bright future instead of a

00:12:55,680 --> 00:13:01,170
dark one we might end up convincing them

00:12:58,940 --> 00:13:02,700
which means an in tradition invited me

00:13:01,170 --> 00:13:06,060
to have both you need to have support

00:13:02,700 --> 00:13:07,650
for driving clocks and power stuff from

00:13:06,060 --> 00:13:09,300
the colonel you need to have support for

00:13:07,650 --> 00:13:11,730
driving them from film where and then

00:13:09,300 --> 00:13:14,100
show them look that next to provision

00:13:11,730 --> 00:13:15,600
out coincidentally the film where

00:13:14,100 --> 00:13:17,040
version just happens to work you can

00:13:15,600 --> 00:13:20,670
still use your same kernel you don't

00:13:17,040 --> 00:13:22,920
need code changes but everything you did

00:13:20,670 --> 00:13:24,710
before falls apart because now the linux

00:13:22,920 --> 00:13:26,970
has way too much knowledge of the chip

00:13:24,710 --> 00:13:30,570
and off the board layout and have

00:13:26,970 --> 00:13:32,640
everything really the question how we do

00:13:30,570 --> 00:13:36,810
it there were proposals on using scpi

00:13:32,640 --> 00:13:39,030
over mabel interface 222 well basically

00:13:36,810 --> 00:13:41,190
secure film where we can basically use

00:13:39,030 --> 00:13:45,540
that it would be standard interfaces pop

00:13:41,190 --> 00:13:49,500
pop top to bottom I mean it's a good

00:13:45,540 --> 00:13:51,270
summary I would say I mean it's yeah we

00:13:49,500 --> 00:13:53,010
know about it we need to figure out how

00:13:51,270 --> 00:13:55,650
to do it it's the first time actually

00:13:53,010 --> 00:13:57,090
see anybody else advocating it to differ

00:13:55,650 --> 00:13:58,710
amazing to see because you come from a

00:13:57,090 --> 00:14:00,870
completely different angle are you

00:13:58,710 --> 00:14:03,030
hitting the exact same issues that we

00:14:00,870 --> 00:14:06,470
are hitting it's basically the main

00:14:03,030 --> 00:14:06,470
killer for device tree in the world

00:14:12,759 --> 00:14:18,889
agree with you that how we share these

00:14:16,009 --> 00:14:20,540
ratios that efficiently is when things

00:14:18,889 --> 00:14:22,819
are we make that as deep as possible

00:14:20,540 --> 00:14:25,579
yeah but the efficiency of source I

00:14:22,819 --> 00:14:29,600
think will become an issue just to make

00:14:25,579 --> 00:14:32,149
sure that once we need to switch because

00:14:29,600 --> 00:14:35,059
it's of course it's really because we

00:14:32,149 --> 00:14:37,309
need it and not just as a way to make my

00:14:35,059 --> 00:14:39,619
life easy I think that's another part

00:14:37,309 --> 00:14:41,989
that we have to take it to go I agree so

00:14:39,619 --> 00:14:44,899
it needs to be fast yeah how slow is a

00:14:41,989 --> 00:14:47,540
switch from eo2 to yield three I don't

00:14:44,899 --> 00:14:49,129
know as I said it's only a subject that

00:14:47,540 --> 00:14:51,199
has been raised to us that we start to

00:14:49,129 --> 00:14:53,359
write so somebody nearly sit down and

00:14:51,199 --> 00:14:55,459
actually dis yet this defect those

00:14:53,359 --> 00:14:58,399
performance numbers and figure out where

00:14:55,459 --> 00:15:01,009
we spending that time I almost sure that

00:14:58,399 --> 00:15:02,929
somebody just implemented it one because

00:15:01,009 --> 00:15:04,639
the switching the internal mode

00:15:02,929 --> 00:15:06,259
switching should be blazingly fast I

00:15:04,639 --> 00:15:09,169
think that slow is when you have

00:15:06,259 --> 00:15:10,609
internal abstract interfaces over

00:15:09,169 --> 00:15:13,069
interfaces of interfaces that make

00:15:10,609 --> 00:15:16,339
things go in the right to or wherever

00:15:13,069 --> 00:15:18,110
right but if you really are able to to

00:15:16,339 --> 00:15:21,529
optimize your code path so that Yuri

00:15:18,110 --> 00:15:24,860
just go and do your your your hmc HSE

00:15:21,529 --> 00:15:26,449
snc smc you smc you smc well it's in the

00:15:24,860 --> 00:15:30,019
vm it's not quite sure which one you

00:15:26,449 --> 00:15:33,139
would use in smc and then you move that

00:15:30,019 --> 00:15:35,989
out into in 203 and GOP and of straight

00:15:33,139 --> 00:15:38,689
away you don't need to go to ill 1s for

00:15:35,989 --> 00:15:41,230
anything it should handle there I don't

00:15:38,689 --> 00:15:43,790
see why it would be a big overhead okay

00:15:41,230 --> 00:15:44,720
but I mean you just need to if you care

00:15:43,790 --> 00:15:46,399
about performance there it would be

00:15:44,720 --> 00:15:47,809
really nice if you could do some numbers

00:15:46,399 --> 00:15:53,179
because there's a really good chance i'm

00:15:47,809 --> 00:15:55,539
wrong i know that's a totally do before

00:15:53,179 --> 00:15:58,610
you were saying now an example to the

00:15:55,539 --> 00:16:01,039
make some of the fair here maybe to do

00:15:58,610 --> 00:16:02,600
with earlier architectures we're in the

00:16:01,039 --> 00:16:03,919
secure world when just going into

00:16:02,600 --> 00:16:07,039
monitor mode there's a big load of

00:16:03,919 --> 00:16:09,829
banking in hardware which did cost a lot

00:16:07,039 --> 00:16:12,889
in terms of form an RBA the cost of

00:16:09,829 --> 00:16:15,079
going from the LT oriole one into l3 is

00:16:12,889 --> 00:16:17,059
very small it's only when you then have

00:16:15,079 --> 00:16:17,420
to go into lower secure levels to do and

00:16:17,059 --> 00:16:19,280
do

00:16:17,420 --> 00:16:22,130
some software saving a state that there

00:16:19,280 --> 00:16:24,350
is some overhead and that's only needed

00:16:22,130 --> 00:16:25,490
when it's needed mr. secure OS needs to

00:16:24,350 --> 00:16:27,110
do something he needs to do something

00:16:25,490 --> 00:16:29,360
any you have to take that course

00:16:27,110 --> 00:16:31,670
whatever okay so if I understand

00:16:29,360 --> 00:16:36,920
correctly you're seeing that Iain we

00:16:31,670 --> 00:16:39,290
should not be because of all the secure

00:16:36,920 --> 00:16:43,160
military is working and so baby I don't

00:16:39,290 --> 00:16:44,990
say yes on army on arm v8 and with a

00:16:43,160 --> 00:16:48,170
good architecture does not jump into

00:16:44,990 --> 00:16:49,760
into secure year one that's let's the

00:16:48,170 --> 00:16:51,710
other really i mean if you implemented

00:16:49,760 --> 00:16:53,450
in a way but you have this abstract

00:16:51,710 --> 00:16:55,190
thing in year three that just goes into

00:16:53,450 --> 00:16:57,920
here 1s and then tries to handle

00:16:55,190 --> 00:17:00,680
everything some in some abstract fashion

00:16:57,920 --> 00:17:03,070
you obviously are slow my more layers

00:17:00,680 --> 00:17:05,660
you put in the harder gets but if just

00:17:03,070 --> 00:17:07,550
just the pure transition from from the

00:17:05,660 --> 00:17:15,580
lower levels to your three years should

00:17:07,550 --> 00:17:18,910
should be almost acceptable sorry

00:17:15,580 --> 00:17:22,790
comparing Humvees v8's orion arm v7

00:17:18,910 --> 00:17:26,270
switching on on v8 from non-security are

00:17:22,790 --> 00:17:28,580
one or two to e our phase five and we

00:17:26,270 --> 00:17:30,230
stay near free and then we go threat for

00:17:28,580 --> 00:17:32,450
the forest up and back into the non

00:17:30,230 --> 00:17:34,670
picture on on v7 we could do the same

00:17:32,450 --> 00:17:38,720
just going to the monitor everything

00:17:34,670 --> 00:17:40,670
mask and getting out you could also take

00:17:38,720 --> 00:17:42,380
that away and it's the work but you take

00:17:40,670 --> 00:17:44,480
the performance here going into monitor

00:17:42,380 --> 00:17:47,270
mode from the normal world on arm v7

00:17:44,480 --> 00:17:49,010
platforms because of the banking happens

00:17:47,270 --> 00:17:53,720
in hardware going in the transition to

00:17:49,010 --> 00:17:56,150
monitor mode in rb8 there is no hardware

00:17:53,720 --> 00:17:57,710
banking of going on and you only take

00:17:56,150 --> 00:18:00,790
the hit when you go from me all three to

00:17:57,710 --> 00:18:00,790
the lower security level

00:18:03,750 --> 00:18:18,910
yes correct another point Alexander made

00:18:16,720 --> 00:18:20,650
about you know this fear of not being

00:18:18,910 --> 00:18:21,850
able to update the firmware and things

00:18:20,650 --> 00:18:25,150
like this and I think that's true

00:18:21,850 --> 00:18:26,800
because a lot of vendor code is hid in a

00:18:25,150 --> 00:18:29,980
way you know we've tried to make more

00:18:26,800 --> 00:18:32,650
firmware and off T open source and you

00:18:29,980 --> 00:18:36,370
know i just put another player out there

00:18:32,650 --> 00:18:38,410
to stop vendors and other secure will

00:18:36,370 --> 00:18:40,090
providers to get their code in the

00:18:38,410 --> 00:18:44,590
upstream because it will help everybody

00:18:40,090 --> 00:18:45,940
for these kind of problems so the actual

00:18:44,590 --> 00:18:48,790
really big question I have there is

00:18:45,940 --> 00:18:51,940
who's going to do what and I mean it

00:18:48,790 --> 00:18:53,110
said I am very happy to be all agree the

00:18:51,940 --> 00:18:54,550
first time I actually have a full room

00:18:53,110 --> 00:18:56,830
agreeing on that solution every time I

00:18:54,550 --> 00:19:02,200
had to convince people to evolve so this

00:18:56,830 --> 00:19:03,580
is good but how do we get to at least so

00:19:02,200 --> 00:19:05,080
you say what I want to have is I want to

00:19:03,580 --> 00:19:06,970
have at least one system out there one

00:19:05,080 --> 00:19:08,620
board that sets of reference

00:19:06,970 --> 00:19:10,150
implantation right that you can show

00:19:08,620 --> 00:19:14,620
people look this is how it gets done

00:19:10,150 --> 00:19:16,390
right if you do it this way it's nice

00:19:14,620 --> 00:19:18,670
and shiny and good if you do it any

00:19:16,390 --> 00:19:20,950
other way it's possible but you made one

00:19:18,670 --> 00:19:22,960
might run into issues so basically too

00:19:20,950 --> 00:19:24,850
short to be grilling pfizer example so

00:19:22,960 --> 00:19:27,400
we need to pick one system and that ok

00:19:24,850 --> 00:19:29,050
which one it is pick one system make

00:19:27,400 --> 00:19:33,730
that work top to bottom with that new

00:19:29,050 --> 00:19:35,800
model and then go and ring doorbells at

00:19:33,730 --> 00:19:38,020
people's houses and tell them look this

00:19:35,800 --> 00:19:40,600
is how you do it and what we are

00:19:38,020 --> 00:19:42,790
interesting is the use case what matter

00:19:40,600 --> 00:19:44,620
I mean because we can come with some use

00:19:42,790 --> 00:19:48,010
case you can say what's an example but

00:19:44,620 --> 00:19:50,980
we want to be sure that we think of all

00:19:48,010 --> 00:19:54,550
the colored case that matter for members

00:19:50,980 --> 00:19:56,410
and for user of such implementation so

00:19:54,550 --> 00:19:58,630
my main pain points why why I don't like

00:19:56,410 --> 00:20:01,059
the current approach are backwards

00:19:58,630 --> 00:20:03,580
compatibility we usually are always

00:20:01,059 --> 00:20:06,280
behind on the colonel side so we can't

00:20:03,580 --> 00:20:08,770
we can't afford to require new

00:20:06,280 --> 00:20:11,559
frameworks in the kernel or new drivers

00:20:08,770 --> 00:20:14,710
in the kernel for core pieces on every

00:20:11,559 --> 00:20:16,470
new chip that's out there we can afford

00:20:14,710 --> 00:20:17,850
to require new drivers

00:20:16,470 --> 00:20:21,240
we cannot afford to require anything

00:20:17,850 --> 00:20:23,280
that's quite clocks are core okay and

00:20:21,240 --> 00:20:24,659
the other one is petitioning that's

00:20:23,280 --> 00:20:27,210
that's the other pain point that I saw

00:20:24,659 --> 00:20:29,130
yeah so as to it has to as long as soon

00:20:27,210 --> 00:20:33,710
as you try to petition anything it's

00:20:29,130 --> 00:20:33,710
impossible to drive clocks on the kernel

00:20:36,740 --> 00:20:40,710
which basically means all those vendors

00:20:39,120 --> 00:20:43,260
kick themselves out of industrial and

00:20:40,710 --> 00:20:44,610
automotive just so the request which

00:20:43,260 --> 00:20:47,700
which basically means that these people

00:20:44,610 --> 00:20:49,860
get themselves out of any in any real

00:20:47,700 --> 00:20:51,570
industrial and real automotive use cases

00:20:49,860 --> 00:20:52,980
just will they be on the same page it

00:20:51,570 --> 00:20:55,260
means they lose a lot of market share

00:20:52,980 --> 00:20:56,820
okay so by leading with example we

00:20:55,260 --> 00:20:58,169
basically show them you're losing a

00:20:56,820 --> 00:21:02,780
couple million dollars every month

00:20:58,169 --> 00:21:02,780
because you're not doing it right okay

00:21:05,539 --> 00:21:17,940
someone else who wants to make a comment

00:21:09,059 --> 00:21:20,280
or give more yes the secure then a

00:21:17,940 --> 00:21:24,990
secure than and now you need to share

00:21:20,280 --> 00:21:29,370
the resource so useless not clear why

00:21:24,990 --> 00:21:32,580
cnet how you synchronize with them that

00:21:29,370 --> 00:21:42,330
log looking on the mutex magnet to

00:21:32,580 --> 00:21:44,419
protect each other so we're just getting

00:21:42,330 --> 00:21:48,120
all the issue and all the problem and

00:21:44,419 --> 00:21:50,640
yeah maybe for the next connector will

00:21:48,120 --> 00:21:52,620
come with some solution I don't don't

00:21:50,640 --> 00:21:54,990
forget the question about me he was

00:21:52,620 --> 00:21:57,059
asking are we are we have planned if you

00:21:54,990 --> 00:21:58,860
have a solution to make this the sink

00:21:57,059 --> 00:22:01,140
and the log between secure and secure

00:21:58,860 --> 00:22:03,650
for shared resources how we want to

00:22:01,140 --> 00:22:06,830
implement that that we don't have any

00:22:03,650 --> 00:22:06,830
solution from

00:22:08,999 --> 00:22:12,719
you mean shut resource as in the clock

00:22:11,129 --> 00:22:15,209
framework or shared resources and some

00:22:12,719 --> 00:22:17,729
unknown yet shared resource is the fact

00:22:15,209 --> 00:22:19,409
that we have one clock which is which

00:22:17,729 --> 00:22:21,569
clocking ticking on and secure ID

00:22:19,409 --> 00:22:23,999
without taking into account club from

00:22:21,569 --> 00:22:29,099
our weapons we have one resource how we

00:22:23,999 --> 00:22:32,339
make sure that we have that both are on

00:22:29,099 --> 00:22:36,119
the same state before playing just be

00:22:32,339 --> 00:22:39,479
sure that secure web will not get the

00:22:36,119 --> 00:22:47,879
club whereas the rich rice was about to

00:22:39,479 --> 00:22:50,819
use it stream looks so it could be

00:22:47,879 --> 00:22:52,439
shipped yeah you know yet I mean it's

00:22:50,819 --> 00:22:58,919
not a solution because there's a problem

00:22:52,439 --> 00:23:01,349
of will non-secure agree to use it

00:22:58,919 --> 00:23:04,139
properly or will the secure will always

00:23:01,349 --> 00:23:06,569
use it properly no yeah we can share

00:23:04,139 --> 00:23:09,629
exploded access who's even between the

00:23:06,569 --> 00:23:12,179
nonzero integer maybe now it may be the

00:23:09,629 --> 00:23:14,279
point is that they would real weapon

00:23:12,179 --> 00:23:16,139
area the solution I don't have

00:23:14,279 --> 00:23:21,079
sufficient for now because we have to

00:23:16,139 --> 00:23:23,879
take into account XMP system probably

00:23:21,079 --> 00:23:27,959
coprocessor we came up so poor core

00:23:23,879 --> 00:23:32,369
processor which not only taking care of

00:23:27,959 --> 00:23:36,019
some cpu management but in other device

00:23:32,369 --> 00:23:38,339
I mean there is a lot of we have

00:23:36,019 --> 00:23:41,819
recently we have worked on some

00:23:38,339 --> 00:23:43,649
performance state for per domain that's

00:23:41,819 --> 00:23:45,899
the same I mean are we do other we

00:23:43,649 --> 00:23:50,069
manage for the performance state of a

00:23:45,899 --> 00:23:53,069
shared risk for the main so maybe also

00:23:50,069 --> 00:23:56,429
the work of processor can be part of the

00:23:53,069 --> 00:23:59,039
answer which may need to add a feature

00:23:56,429 --> 00:24:02,459
or covetousness that can accept balls

00:23:59,039 --> 00:24:05,519
from you don't rejoice and seek your

00:24:02,459 --> 00:24:08,009
world some requests and then but yeah

00:24:05,519 --> 00:24:12,469
that's I mean just adjust some sorta

00:24:08,009 --> 00:24:12,469
wendys need to be studied a bit more

00:24:18,320 --> 00:24:22,550
in general the idea if you abstract the

00:24:20,700 --> 00:24:25,650
really enjoy really you will basically

00:24:22,550 --> 00:24:27,450
remove any information on what exactly

00:24:25,650 --> 00:24:29,850
the hardware looks like from the

00:24:27,450 --> 00:24:32,970
underlying where you would simply say I

00:24:29,850 --> 00:24:35,400
I have a clock here and that clock can

00:24:32,970 --> 00:24:37,020
be configured to values and you just

00:24:35,400 --> 00:24:39,330
tell film where I want to have it and

00:24:37,020 --> 00:24:41,310
somewhere could then make sure that the

00:24:39,330 --> 00:24:42,690
state is always coherent in your whole

00:24:41,310 --> 00:24:44,670
system so if you have a device that

00:24:42,690 --> 00:24:46,530
secure that needs to be turned on

00:24:44,670 --> 00:24:49,080
non-secure once you have it turned off

00:24:46,530 --> 00:24:50,520
you just lazy don't turn it off and make

00:24:49,080 --> 00:24:53,970
sure that people are okay with not

00:24:50,520 --> 00:24:56,550
turning off devices but basically you

00:24:53,970 --> 00:24:58,380
would always the point that promises

00:24:56,550 --> 00:25:01,620
coherency throughout the system would be

00:24:58,380 --> 00:25:06,420
if we write so in in your case where you

00:25:01,620 --> 00:25:08,010
share devices I'm sure that's caveat

00:25:06,420 --> 00:25:09,420
somewhere and I'm sure that's going to

00:25:08,010 --> 00:25:11,730
be a pitfall where it's not going to

00:25:09,420 --> 00:25:14,010
work but in general if as long as you

00:25:11,730 --> 00:25:16,800
stick to to a model where you don't

00:25:14,010 --> 00:25:20,250
expose hardware information for real you

00:25:16,800 --> 00:25:22,020
can always just not do what we ever was

00:25:20,250 --> 00:25:25,260
trying to tell you something is telling

00:25:22,020 --> 00:25:27,240
you once again back to the encrypted

00:25:25,260 --> 00:25:29,580
block here I mean it let's say that we

00:25:27,240 --> 00:25:32,760
figure out how to share the turn on and

00:25:29,580 --> 00:25:34,680
off the block itself that's fine then

00:25:32,760 --> 00:25:36,510
the next step is someone is actually

00:25:34,680 --> 00:25:38,220
going to use this cryptic also so

00:25:36,510 --> 00:25:42,510
there's a second levels of the same kind

00:25:38,220 --> 00:25:44,580
of problem you need to ensure that jobs

00:25:42,510 --> 00:25:46,110
are not stored in two worlds at the same

00:25:44,580 --> 00:25:47,460
time if there's anything you could to

00:25:46,110 --> 00:25:48,870
block in some cases you it there is

00:25:47,460 --> 00:25:51,750
maybe a bit or something that you can

00:25:48,870 --> 00:25:53,190
poll or read or something but there is

00:25:51,750 --> 00:25:56,130
one more level and it's not only just

00:25:53,190 --> 00:25:57,930
enabling and disabling the block or you

00:25:56,130 --> 00:25:59,490
want to share the actual crypto block

00:25:57,930 --> 00:26:01,140
would be in secure and non-secure even

00:25:59,490 --> 00:26:04,890
so the crystallog is not aware of the

00:26:01,140 --> 00:26:07,730
fact that it is shared discount and

00:26:04,890 --> 00:26:07,730
curation

00:26:09,360 --> 00:26:15,730
just 222 IP blocks or two interfaces at

00:26:13,510 --> 00:26:17,350
least two cues to whatever it is that's

00:26:15,730 --> 00:26:18,850
a little bit give it give it to

00:26:17,350 --> 00:26:20,440
individuate you cannot share the same

00:26:18,850 --> 00:26:21,760
interface of insecure non-secure it's

00:26:20,440 --> 00:26:23,350
going to fall apart whatever you do

00:26:21,760 --> 00:26:29,950
whatever you do it's going to fall apart

00:26:23,350 --> 00:26:34,440
today as well but then so then you're

00:26:29,950 --> 00:26:36,820
fine no let's say you're running some

00:26:34,440 --> 00:26:39,340
ipsec stuff in linux and at the same

00:26:36,820 --> 00:26:43,620
time you're trying to decrypt something

00:26:39,340 --> 00:26:45,730
in the secure side don't have an issue

00:26:43,620 --> 00:26:48,640
depends on the interface obviously right

00:26:45,730 --> 00:26:50,830
so if you interface just a view into

00:26:48,640 --> 00:26:53,200
internal registers yet if you interface

00:26:50,830 --> 00:26:55,300
an actual abstract cue that gives you

00:26:53,200 --> 00:26:57,820
that just gets scheduled internally and

00:26:55,300 --> 00:26:59,500
depending on like with internal

00:26:57,820 --> 00:27:01,570
scheduling moves either take something

00:26:59,500 --> 00:27:02,650
from left or right then your sites and

00:27:01,570 --> 00:27:05,860
then you say what I'm saying is you

00:27:02,650 --> 00:27:07,720
basically want multi queuing and have Q

00:27:05,860 --> 00:27:09,400
split up and not have anything on the

00:27:07,720 --> 00:27:11,950
register level now you're starting to

00:27:09,400 --> 00:27:16,120
talk about solution that's what we're

00:27:11,950 --> 00:27:17,410
looking for good it's the same as

00:27:16,120 --> 00:27:19,480
sharing things to the in virtual

00:27:17,410 --> 00:27:21,190
machines are sharing sure mean it's

00:27:19,480 --> 00:27:22,270
always the same problem but we don't

00:27:21,190 --> 00:27:23,920
have they don't have any real

00:27:22,270 --> 00:27:25,690
infrastructure today so that's the big

00:27:23,920 --> 00:27:27,880
gap we have we need to figure out how to

00:27:25,690 --> 00:27:33,250
do this in a nice way so so tell you as

00:27:27,880 --> 00:27:35,980
I see vendors to do right so today we

00:27:33,250 --> 00:27:38,170
already have a kind of form I mean we

00:27:35,980 --> 00:27:41,170
pushed some of this stuff into firmware

00:27:38,170 --> 00:27:45,610
already which we have upstream it's a TI

00:27:41,170 --> 00:27:48,160
SEI which we've done for one of our SOC

00:27:45,610 --> 00:27:50,080
s where i mean even for like a clock

00:27:48,160 --> 00:27:53,380
basically a device is just a number now

00:27:50,080 --> 00:27:55,360
just mean decks and we just ask the

00:27:53,380 --> 00:27:58,059
firmware hey turn this on for us and

00:27:55,360 --> 00:28:01,809
then linux doesn't care what happens it

00:27:58,059 --> 00:28:04,559
just gets the device it knows it's able

00:28:01,809 --> 00:28:07,660
to use it on the idea would be then that

00:28:04,559 --> 00:28:09,730
firmware can refuse to give permission

00:28:07,660 --> 00:28:12,550
to use that device say if the secure

00:28:09,730 --> 00:28:14,620
world is already using it so we have

00:28:12,550 --> 00:28:15,980
that upstream today already we're

00:28:14,620 --> 00:28:18,830
working on getting the

00:28:15,980 --> 00:28:21,580
we have a protocol of shrimp kampala

00:28:18,830 --> 00:28:24,140
years ago we had talked i connect about

00:28:21,580 --> 00:28:26,000
maybe finding a way to standardize this

00:28:24,140 --> 00:28:27,970
firmware interface because currently we

00:28:26,000 --> 00:28:30,470
just have you know our custom

00:28:27,970 --> 00:28:32,780
implementation and the last connect arm

00:28:30,470 --> 00:28:36,650
presented about something called yeah at

00:28:32,780 --> 00:28:39,220
CMI which would be the standardization

00:28:36,650 --> 00:28:41,299
of this device management across

00:28:39,220 --> 00:28:44,210
firmware interface which i guess the

00:28:41,299 --> 00:28:47,929
official spec hasn't been released yet

00:28:44,210 --> 00:28:57,679
but maybe that's something we all need

00:28:47,929 --> 00:28:59,690
to look at moving forward together my

00:28:57,679 --> 00:29:03,860
understand is TMI it's an interface out

00:28:59,690 --> 00:29:06,890
to send an information now we what is

00:29:03,860 --> 00:29:10,900
not clear for me how to use that way to

00:29:06,890 --> 00:29:13,400
communicate from like in Linux World

00:29:10,900 --> 00:29:15,740
Figure world sure well I mean I think

00:29:13,400 --> 00:29:17,240
the idea would be now we had to write

00:29:15,740 --> 00:29:20,090
around generic power to main driver

00:29:17,240 --> 00:29:22,700
which calls into our TI SEI protocol

00:29:20,090 --> 00:29:25,429
yeah and a bunch of magic happens behind

00:29:22,700 --> 00:29:27,350
the scenes just even to talk to the

00:29:25,429 --> 00:29:29,390
firmware but say you use that cmi to

00:29:27,350 --> 00:29:32,570
standardize how you talk to the firmware

00:29:29,390 --> 00:29:35,299
I thing you have in a one gen BD driver

00:29:32,570 --> 00:29:38,240
that everybody can use and you just ask

00:29:35,299 --> 00:29:41,750
for a device and then you get the device

00:29:38,240 --> 00:29:47,450
so i think that would be the idea what

00:29:41,750 --> 00:29:50,510
yeah yeah yeah so smoothly part of the

00:29:47,450 --> 00:29:53,870
solution yes even you can observe a

00:29:50,510 --> 00:29:57,860
level of junkie dealer you get a civil

00:29:53,870 --> 00:30:00,020
can be delayed or just visual so where

00:29:57,860 --> 00:30:05,030
to attract and consolidate that's them

00:30:00,020 --> 00:30:06,860
yet angry I just that for now yes sir we

00:30:05,030 --> 00:30:10,100
need to city that we need to come back

00:30:06,860 --> 00:30:12,860
with number with the absolute I mean

00:30:10,100 --> 00:30:14,210
we're not there yet seeing all of us

00:30:12,860 --> 00:30:16,549
together which is why we just moved

00:30:14,210 --> 00:30:18,049
forward with our own custom solutions i

00:30:16,549 --> 00:30:21,520
made even through that we can identify

00:30:18,049 --> 00:30:24,140
some a green poetry so we're we are

00:30:21,520 --> 00:30:25,340
interesting if there are remember that

00:30:24,140 --> 00:30:28,590
the Holy

00:30:25,340 --> 00:30:31,350
which I will remember that if they can

00:30:28,590 --> 00:30:41,399
share oh I mean yeah what up

00:30:31,350 --> 00:30:43,019
stranger yeah I think we all done just

00:30:41,399 --> 00:30:45,480
very quickly did the fdm i spec is

00:30:43,019 --> 00:30:47,700
coming very soon and that will be

00:30:45,480 --> 00:30:52,169
accompanied by a driver and trusted

00:30:47,700 --> 00:30:54,210
firmware at the same time yeah and

00:30:52,169 --> 00:30:56,730
hopefully that their molten bill makes

00:30:54,210 --> 00:30:59,490
me give the next driver as well and in

00:30:56,730 --> 00:31:01,889
terms of how you they basically if if

00:30:59,490 --> 00:31:03,419
limit can doesn't if its cure so mine

00:31:01,889 --> 00:31:05,370
doesn't need to be involved or secure

00:31:03,419 --> 00:31:07,639
side at all then you can talk directly

00:31:05,370 --> 00:31:09,600
to that power controller by that SMI

00:31:07,639 --> 00:31:11,100
it's a school will does need to be

00:31:09,600 --> 00:31:13,289
involved you need to go buy some kind of

00:31:11,100 --> 00:31:16,320
smc interface and then they don't wear

00:31:13,289 --> 00:31:18,149
masks it as simple as that but that

00:31:16,320 --> 00:31:34,720
level of smc interface is not defined

00:31:18,149 --> 00:31:39,570
you think it's done for us thank you

00:31:34,720 --> 00:31:44,540
[Applause]

00:31:39,570 --> 00:31:44,540

YouTube URL: https://www.youtube.com/watch?v=MNvTBGNQRDY


