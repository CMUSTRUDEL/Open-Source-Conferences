Title: George Grey Welcome Keynote - BUD17-100K1
Publication date: 2017-03-11
Playlist: Linaro Connect Budapest 2017
Description: 
	Session ID: BUD17-100K1
Session Name: George Grey Welcome Keynote - BUD17-100K1
Speaker: 
Track: Keynote


★ Session Summary ★
Welcome Keynote
---------------------------------------------------
★ Resources ★
Event Page: http://connect.linaro.org/resource/bud17/bud17-100k1/
Presentation: 
Video: 
 ---------------------------------------------------

★ Event Details ★
Linaro Connect Budapest 2017 (BUD17)
6-10 March 2017
Corinthia Hotel, Budapest,
Erzsébet krt. 43-49,
1073 Hungary

---------------------------------------------------

http://www.linaro.org
http://connect.linaro.org
---------------------------------------------------
Follow us on Social Media
https://www.facebook.com/LinaroOrg
https://twitter.com/linaroorg
https://www.youtube.com/user/linaroorg?sub_confirmation=1
https://www.linkedin.com/company/1026961
Captions: 
	00:00:06,140 --> 00:00:10,380
alright we're going to start in one

00:00:08,790 --> 00:00:13,670
minute

00:00:10,380 --> 00:00:13,670
one minute warning

00:01:01,920 --> 00:01:06,680
ready let's go good morning

00:01:08,210 --> 00:01:13,800
thank you everybody for arriving on time

00:01:11,120 --> 00:01:19,970
getting to Budapest welcome to Budapest

00:01:13,800 --> 00:01:26,190
I need a clicker which is gone missing

00:01:19,970 --> 00:01:31,290
and then we'll be all set got it all

00:01:26,190 --> 00:01:36,300
right so firstly welcome of course this

00:01:31,290 --> 00:01:38,760
is actually our 21st connect I guess

00:01:36,300 --> 00:01:41,310
some people might call it say that we're

00:01:38,760 --> 00:01:44,610
now grown up but i think we all still

00:01:41,310 --> 00:01:47,880
think of ourselves as a starter this is

00:01:44,610 --> 00:01:50,880
actually the first European connect for

00:01:47,880 --> 00:01:55,050
five years since Copenhagen in October

00:01:50,880 --> 00:01:59,220
2012 with most of our members being in

00:01:55,050 --> 00:02:01,260
the US and in Asia we spend a lot of

00:01:59,220 --> 00:02:04,170
time there we've tended to do each other

00:02:01,260 --> 00:02:05,580
connect in each continent but it's

00:02:04,170 --> 00:02:08,340
really nice to be back in Europe and

00:02:05,580 --> 00:02:11,370
it's very unusual for some of us from

00:02:08,340 --> 00:02:16,410
the UK not to be jet-lagged to connect

00:02:11,370 --> 00:02:22,230
for a change so also as is traditional

00:02:16,410 --> 00:02:24,000
to this event we'd like to welcome the

00:02:22,230 --> 00:02:26,640
new members who've joined the narrow

00:02:24,000 --> 00:02:28,440
since the last connect and the first one

00:02:26,640 --> 00:02:32,400
I'm absolutely delighted to announce

00:02:28,440 --> 00:02:34,640
that Google has joined linaro as a club

00:02:32,400 --> 00:02:34,640
member

00:02:40,100 --> 00:02:45,050
thank you we've worked a long time with

00:02:43,010 --> 00:02:48,680
Google really from the from the

00:02:45,050 --> 00:02:50,660
beginning of linaro on AOSP and on the

00:02:48,680 --> 00:02:53,300
android platform and we're delighted

00:02:50,660 --> 00:02:56,060
that given their support of open source

00:02:53,300 --> 00:02:58,250
in general they use of open source the

00:02:56,060 --> 00:03:01,790
Google is now supporting and working

00:02:58,250 --> 00:03:05,270
with linaro we'd also like to welcome

00:03:01,790 --> 00:03:07,910
two new members to the linaro Enterprise

00:03:05,270 --> 00:03:11,120
Group the linaro enterprise group is now

00:03:07,910 --> 00:03:15,160
the largest group in in linaro we have

00:03:11,120 --> 00:03:18,530
around 50 engineers both linaro

00:03:15,160 --> 00:03:20,540
employees linaro assignees and a

00:03:18,530 --> 00:03:23,510
significant number of member engineers

00:03:20,540 --> 00:03:26,990
that bring the team to over 50 we are

00:03:23,510 --> 00:03:30,680
delighted to add to the list of of leg

00:03:26,990 --> 00:03:33,590
members fujitsu with their work on the

00:03:30,680 --> 00:03:37,460
post k supercomputer which is using the

00:03:33,590 --> 00:03:38,690
ARM architecture and hxt from china

00:03:37,460 --> 00:03:40,820
which is a joint venture between

00:03:38,690 --> 00:03:43,340
Qualcomm and the China local government

00:03:40,820 --> 00:03:46,660
so very pleased to have both fujitsu and

00:03:43,340 --> 00:03:46,660
hxt joining linaro

00:03:50,710 --> 00:03:57,730
and finally in the new member roster

00:03:54,250 --> 00:04:01,960
we'd like to welcome ASA who have joined

00:03:57,730 --> 00:04:04,750
light to work on technology for IOT

00:04:01,960 --> 00:04:11,980
devices so very pleased to have ASA as a

00:04:04,750 --> 00:04:15,610
member as well all right let's get to it

00:04:11,980 --> 00:04:19,030
so our mission is leading collaboration

00:04:15,610 --> 00:04:20,770
in the arm ecosystem and there's a lot

00:04:19,030 --> 00:04:23,230
of good things that are happening at the

00:04:20,770 --> 00:04:26,380
moment I think it is fair to say that

00:04:23,230 --> 00:04:29,710
open source software is changing the

00:04:26,380 --> 00:04:32,350
software world and there's a growing

00:04:29,710 --> 00:04:36,220
understanding across the entire industry

00:04:32,350 --> 00:04:39,940
that all connected devices need secure

00:04:36,220 --> 00:04:42,700
and updatable software and that the best

00:04:39,940 --> 00:04:45,490
secure software is open software we're

00:04:42,700 --> 00:04:48,930
not going to establish global standards

00:04:45,490 --> 00:04:52,750
unless we build on top of open software

00:04:48,930 --> 00:04:55,450
also on the good side for the first time

00:04:52,750 --> 00:04:58,090
ever linaro was the top company

00:04:55,450 --> 00:05:00,990
contributor to a Linux kernel release in

00:04:58,090 --> 00:05:02,950
4.9 it already seems a long time ago

00:05:00,990 --> 00:05:05,290
contributing over ten percent of the

00:05:02,950 --> 00:05:08,470
changes as a result of some of the work

00:05:05,290 --> 00:05:11,380
that we did in project ara that was that

00:05:08,470 --> 00:05:13,330
was up streamed in that release since

00:05:11,380 --> 00:05:15,760
then in four point ten we reverted to

00:05:13,330 --> 00:05:18,340
our kind of normal position in the in

00:05:15,760 --> 00:05:20,020
the top five company contributors but it

00:05:18,340 --> 00:05:21,640
was very nice to see linaro for the

00:05:20,020 --> 00:05:25,080
first time being the biggest contributor

00:05:21,640 --> 00:05:25,080
congratulations to all of you

00:05:28,150 --> 00:05:34,550
but it's not only the Linux kernel

00:05:30,370 --> 00:05:37,280
linaro and all of our members who are

00:05:34,550 --> 00:05:39,380
working in linaro are contributing to a

00:05:37,280 --> 00:05:42,500
large number of different open-source

00:05:39,380 --> 00:05:44,450
projects it's across the ecosystem

00:05:42,500 --> 00:05:49,250
ranging from projects that we've

00:05:44,450 --> 00:05:51,380
initiated like Oh pte and all the way to

00:05:49,250 --> 00:05:53,270
some of the biggest enterprise projects

00:05:51,380 --> 00:05:55,940
on the planet including things like

00:05:53,270 --> 00:05:58,520
OpenStack so ranging from IOT through

00:05:55,940 --> 00:06:00,800
mobile to enterprise linaro is

00:05:58,520 --> 00:06:04,610
contributing to a large number of open

00:06:00,800 --> 00:06:10,280
source projects across the ecosystem but

00:06:04,610 --> 00:06:13,490
it's not all easy working in linaro is

00:06:10,280 --> 00:06:16,540
difficult it requires effort competitors

00:06:13,490 --> 00:06:18,830
don't naturally work easily together

00:06:16,540 --> 00:06:21,140
although sometimes when we come to these

00:06:18,830 --> 00:06:23,390
events that doesn't seem true these

00:06:21,140 --> 00:06:25,730
competitors who should be who should be

00:06:23,390 --> 00:06:27,470
fighting hard against each other are

00:06:25,730 --> 00:06:30,170
working with each other because that's

00:06:27,470 --> 00:06:32,300
what linaro is about but it's also

00:06:30,170 --> 00:06:35,510
difficult because open source is now

00:06:32,300 --> 00:06:38,480
completely global linaro is working

00:06:35,510 --> 00:06:42,470
across 24-hour time zones our members

00:06:38,480 --> 00:06:44,270
are employees working on projects making

00:06:42,470 --> 00:06:47,030
a conference call with all of the

00:06:44,270 --> 00:06:49,160
necessary people who are interested in

00:06:47,030 --> 00:06:51,800
participating is very very difficult

00:06:49,160 --> 00:06:54,320
somebody has to be up very early in the

00:06:51,800 --> 00:06:57,320
morning or very late at night so this

00:06:54,320 --> 00:07:00,170
conference where we get a chance to be

00:06:57,320 --> 00:07:03,350
together twice a year for a week is

00:07:00,170 --> 00:07:06,950
really important it's really important

00:07:03,350 --> 00:07:09,920
that we use this time together to work

00:07:06,950 --> 00:07:13,660
on what we have achieved and what we

00:07:09,920 --> 00:07:16,820
want to achieve over the next six months

00:07:13,660 --> 00:07:20,120
but it's even there are some tougher

00:07:16,820 --> 00:07:23,080
things going on in the industry what we

00:07:20,120 --> 00:07:25,630
are doing open source software is

00:07:23,080 --> 00:07:27,830
disrupting existing business models

00:07:25,630 --> 00:07:32,420
there are a lot of things that are going

00:07:27,830 --> 00:07:35,300
on that I'm causing disruptive changes

00:07:32,420 --> 00:07:38,540
in our industry and one of the things I

00:07:35,300 --> 00:07:39,830
think linaro needs to look at is are we

00:07:38,540 --> 00:07:44,060
really doing enough

00:07:39,830 --> 00:07:46,490
to work out where we need to be because

00:07:44,060 --> 00:07:48,770
when we put software and work in the

00:07:46,490 --> 00:07:51,740
upstream we're actually working at the

00:07:48,770 --> 00:07:53,510
bleeding edge of technology a lot of the

00:07:51,740 --> 00:07:57,190
things that we do won't get into

00:07:53,510 --> 00:08:00,740
products for two or more years and

00:07:57,190 --> 00:08:03,020
that's hard it's hard to justify putting

00:08:00,740 --> 00:08:04,790
that effort in at this point but even

00:08:03,020 --> 00:08:07,790
harder is working out where we should be

00:08:04,790 --> 00:08:10,250
in two years time and I challenge all of

00:08:07,790 --> 00:08:13,450
us to say are we actually doing enough

00:08:10,250 --> 00:08:16,550
are we thinking about the right things

00:08:13,450 --> 00:08:19,340
innovation using open source is really

00:08:16,550 --> 00:08:21,650
hard because by definition you're making

00:08:19,340 --> 00:08:24,080
a decision that you don't want this to

00:08:21,650 --> 00:08:27,440
be proprietary in order to be successful

00:08:24,080 --> 00:08:29,570
it needs to be open and that's very hard

00:08:27,440 --> 00:08:32,960
when you're working on new IP new

00:08:29,570 --> 00:08:35,810
technology and it needs collaboration a

00:08:32,960 --> 00:08:38,870
single company can't take control

00:08:35,810 --> 00:08:41,270
anymore just by putting the effort in we

00:08:38,870 --> 00:08:43,750
need to work together and we need to

00:08:41,270 --> 00:08:47,920
recognize that we can influence

00:08:43,750 --> 00:08:52,280
individually but we can't control and

00:08:47,920 --> 00:08:55,160
it's about participating now not waiting

00:08:52,280 --> 00:08:58,640
and see if you wait and see you'll be

00:08:55,160 --> 00:09:03,230
behind if you participate now you help

00:08:58,640 --> 00:09:05,750
set the direction and finally I think

00:09:03,230 --> 00:09:07,480
arm is different the innovation the

00:09:05,750 --> 00:09:09,950
differentiation what we are achieving

00:09:07,480 --> 00:09:13,100
what the whole arm partnership is

00:09:09,950 --> 00:09:15,530
achieving is to bring new technology to

00:09:13,100 --> 00:09:17,600
market in different ways much faster

00:09:15,530 --> 00:09:20,210
than and then on other architectures and

00:09:17,600 --> 00:09:23,510
we now need to work out what is the arm

00:09:20,210 --> 00:09:27,590
way of getting to where that puck needs

00:09:23,510 --> 00:09:31,340
to be not following the x86 way what do

00:09:27,590 --> 00:09:33,080
we need to do that's different to take

00:09:31,340 --> 00:09:35,270
advantage of the differences that we

00:09:33,080 --> 00:09:38,060
have inherently in the arm business

00:09:35,270 --> 00:09:39,680
model and this is something that I think

00:09:38,060 --> 00:09:42,530
all of the steering committees should

00:09:39,680 --> 00:09:44,450
consider this week of what are we trying

00:09:42,530 --> 00:09:48,990
to achieve and where do we want to get

00:09:44,450 --> 00:09:52,200
to um

00:09:48,990 --> 00:09:56,730
one of the things that is clear is that

00:09:52,200 --> 00:10:00,209
the days of traditional operating system

00:09:56,730 --> 00:10:02,839
platforms have gone platforms are by

00:10:00,209 --> 00:10:06,120
definition non differentiating and

00:10:02,839 --> 00:10:08,010
therefore people use them across the

00:10:06,120 --> 00:10:10,560
ecosystem and if you look at the two

00:10:08,010 --> 00:10:14,070
biggest platforms at the moment they're

00:10:10,560 --> 00:10:17,010
basically Linux and the are the android

00:10:14,070 --> 00:10:18,720
open source project those two platforms

00:10:17,010 --> 00:10:21,350
are the biggest in the world and they're

00:10:18,720 --> 00:10:24,240
both open source and they're both free

00:10:21,350 --> 00:10:27,660
they're not free to build their free to

00:10:24,240 --> 00:10:29,490
use and you don't get value from selling

00:10:27,660 --> 00:10:32,339
you will not get value from selling

00:10:29,490 --> 00:10:34,500
embedded software on a per copy basis it

00:10:32,339 --> 00:10:37,970
will be free there will become a

00:10:34,500 --> 00:10:41,790
platform just like Linux just like AOSP

00:10:37,970 --> 00:10:43,980
for the next the next era of IOT

00:10:41,790 --> 00:10:47,390
connected devices and that will be open

00:10:43,980 --> 00:10:50,250
source software completely convinced and

00:10:47,390 --> 00:10:51,899
the value that you will get will be from

00:10:50,250 --> 00:10:54,600
the innovation that you build on top of

00:10:51,899 --> 00:10:57,270
those platforms so what is your value

00:10:54,600 --> 00:10:59,220
added differentiating technology what

00:10:57,270 --> 00:11:01,380
applications are you developing and what

00:10:59,220 --> 00:11:02,970
are you doing with the data and the

00:11:01,380 --> 00:11:05,220
analytics of that data that you're

00:11:02,970 --> 00:11:07,829
gathering on top of these platforms the

00:11:05,220 --> 00:11:10,500
platforms themselves will be open and

00:11:07,829 --> 00:11:14,760
they cannot easily be monetized they

00:11:10,500 --> 00:11:16,290
can't be monetized directly so a couple

00:11:14,760 --> 00:11:17,790
of years ago I talked about some

00:11:16,290 --> 00:11:20,310
difficult questions that we were always

00:11:17,790 --> 00:11:23,459
asked in linaro so this time I thought

00:11:20,310 --> 00:11:25,980
I'd try and dispel some myths and the

00:11:23,459 --> 00:11:28,020
first one is that we're often told that

00:11:25,980 --> 00:11:31,020
linaro is expensive compared to other

00:11:28,020 --> 00:11:34,230
industry efforts and I would argue that

00:11:31,020 --> 00:11:37,470
linaro isn't like other industry efforts

00:11:34,230 --> 00:11:41,339
we're not about a single open source

00:11:37,470 --> 00:11:45,390
project we reach across the entire

00:11:41,339 --> 00:11:48,630
ecosystem and our model is unique it's

00:11:45,390 --> 00:11:52,140
focused on engineering on collaborative

00:11:48,630 --> 00:11:54,660
engineering and when you join linaro you

00:11:52,140 --> 00:11:57,570
become part of an open-source

00:11:54,660 --> 00:11:59,550
engineering team that costs over 50

00:11:57,570 --> 00:12:00,850
million dollars a year over 40 million

00:11:59,550 --> 00:12:03,880
dollars a year

00:12:00,850 --> 00:12:07,000
when you consider the linaro resources

00:12:03,880 --> 00:12:11,350
and the assigned member resources and

00:12:07,000 --> 00:12:14,019
this team is unequaled anywhere in the

00:12:11,350 --> 00:12:16,329
world in terms of knowledge of not only

00:12:14,019 --> 00:12:18,160
the arm architecture itself but all of

00:12:16,329 --> 00:12:21,130
the low level technologies that we're

00:12:18,160 --> 00:12:23,730
working on day to day and the goal of

00:12:21,130 --> 00:12:26,440
this team is to reduce non

00:12:23,730 --> 00:12:28,180
differentiating engineering effort that

00:12:26,440 --> 00:12:30,190
you have to put in as a company as a

00:12:28,180 --> 00:12:33,430
member because you're doing it together

00:12:30,190 --> 00:12:36,490
and we're creating those platforms that

00:12:33,430 --> 00:12:39,699
were building our products on top of and

00:12:36,490 --> 00:12:42,819
that should enable you to spend your own

00:12:39,699 --> 00:12:45,449
engineering resource more efficiently on

00:12:42,819 --> 00:12:48,550
your own value add and differentiation

00:12:45,449 --> 00:12:51,459
you're also getting access to linaro to

00:12:48,550 --> 00:12:54,399
arm and other member engineers you're

00:12:51,459 --> 00:12:56,800
working upstream on many many projects

00:12:54,399 --> 00:13:00,819
that are relevant to your business in

00:12:56,800 --> 00:13:03,550
your industry and linaro gives you

00:13:00,819 --> 00:13:07,269
access to a wide range of technologies

00:13:03,550 --> 00:13:09,639
from core SOC based technology all the

00:13:07,269 --> 00:13:13,110
way up to applications level an

00:13:09,639 --> 00:13:16,930
enterprise big enterprise software and

00:13:13,110 --> 00:13:19,449
most importantly we have the ability to

00:13:16,930 --> 00:13:22,120
strongly influence and work on the

00:13:19,449 --> 00:13:26,079
future of open source technology across

00:13:22,120 --> 00:13:27,939
the ecosystem and all of the shared

00:13:26,079 --> 00:13:30,250
funding that you're putting into linaro

00:13:27,939 --> 00:13:32,410
is used for collaborative engineering

00:13:30,250 --> 00:13:36,699
effort and to try and grow and continue

00:13:32,410 --> 00:13:40,120
to enable us to do more the second myth

00:13:36,699 --> 00:13:42,370
is that linaro is armed only we are not

00:13:40,120 --> 00:13:44,949
armed only we focus on the ARM

00:13:42,370 --> 00:13:48,160
architecture but the in open source

00:13:44,949 --> 00:13:51,880
terms the ARM architecture is one of

00:13:48,160 --> 00:13:55,959
many and linaro works collaboratively in

00:13:51,880 --> 00:13:59,980
upstream projects across the industry we

00:13:55,959 --> 00:14:01,720
are doing a lot of work that influences

00:13:59,980 --> 00:14:03,459
and effects and we actually do

00:14:01,720 --> 00:14:07,230
engineering and testing and maintenance

00:14:03,459 --> 00:14:12,699
on other architectures the kernel itself

00:14:07,230 --> 00:14:14,180
ODP dpd k which were working on UEFI and

00:14:12,699 --> 00:14:17,899
acpi boots off

00:14:14,180 --> 00:14:20,899
where the zephyr platform and a lot of

00:14:17,899 --> 00:14:24,140
our CI and testing has to be done across

00:14:20,899 --> 00:14:26,210
multiple platforms including Intel so

00:14:24,140 --> 00:14:28,640
Colonel CI dog will talk about in a

00:14:26,210 --> 00:14:31,880
little bit later but that's a key part

00:14:28,640 --> 00:14:34,310
of what we do cross architecture and if

00:14:31,880 --> 00:14:38,029
somebody wants to bring a project to

00:14:34,310 --> 00:14:42,950
linaro for us to work on then it doesn't

00:14:38,029 --> 00:14:45,709
matter that it's not only arm the next

00:14:42,950 --> 00:14:47,899
one's a little tricky because sometimes

00:14:45,709 --> 00:14:50,240
we're told that linaro is not always

00:14:47,899 --> 00:14:52,550
inclusive enough of the community and

00:14:50,240 --> 00:14:56,660
that we shouldn't have software that's

00:14:52,550 --> 00:14:59,480
member only or member first on the other

00:14:56,660 --> 00:15:01,190
hand we're told that linaro doesn't give

00:14:59,480 --> 00:15:03,529
its members enough advantage and it

00:15:01,190 --> 00:15:06,560
should be member first so this is a

00:15:03,529 --> 00:15:08,180
little bit difficult to dispel but I can

00:15:06,560 --> 00:15:11,060
only really tell you what we're doing

00:15:08,180 --> 00:15:13,850
and what we're doing is we're focusing

00:15:11,060 --> 00:15:16,790
in the in the core business of linaro in

00:15:13,850 --> 00:15:19,910
in roc e division which is eighty

00:15:16,790 --> 00:15:22,580
percent of what linaro does is working

00:15:19,910 --> 00:15:25,450
in the upstream for the benefit of our

00:15:22,580 --> 00:15:28,760
members and for the arm ecosystem and

00:15:25,450 --> 00:15:31,250
that is not successful unless you are

00:15:28,760 --> 00:15:34,370
open and working in the upstream and

00:15:31,250 --> 00:15:37,339
engaging with the upstream community we

00:15:34,370 --> 00:15:39,860
also have a services division and that

00:15:37,339 --> 00:15:42,080
is necessary because some of our members

00:15:39,860 --> 00:15:44,690
are working on proprietary products or

00:15:42,080 --> 00:15:47,660
their own technology and it's not fair

00:15:44,690 --> 00:15:50,480
to use shared resources to focus on one

00:15:47,660 --> 00:15:52,760
members technology and so the services

00:15:50,480 --> 00:15:54,709
division does things like runs the

00:15:52,760 --> 00:15:57,500
landing teams which work on member

00:15:54,709 --> 00:15:59,839
specific products and also is available

00:15:57,500 --> 00:16:02,930
for other projects and one example was

00:15:59,839 --> 00:16:06,279
the work we did on project ara so linaro

00:16:02,930 --> 00:16:10,190
membership is about participation

00:16:06,279 --> 00:16:12,800
together in the open source tsunami that

00:16:10,190 --> 00:16:16,190
is sweeping our industry and it's

00:16:12,800 --> 00:16:19,160
helping deliver these open platforms and

00:16:16,190 --> 00:16:24,170
we can only do this together you can't

00:16:19,160 --> 00:16:26,810
do it on your own so

00:16:24,170 --> 00:16:28,850
how could learn ro help you to

00:16:26,810 --> 00:16:33,190
collaborate more and I'm just going to

00:16:28,850 --> 00:16:35,959
give a couple of hypothetical examples

00:16:33,190 --> 00:16:38,750
there are companies today that have to

00:16:35,959 --> 00:16:41,810
deliver embedded arm hardware to

00:16:38,750 --> 00:16:44,449
hundreds of customers and in order to

00:16:41,810 --> 00:16:47,480
get the benefit of arm they're working

00:16:44,449 --> 00:16:50,899
with multiple vendor quarter cortex ASO

00:16:47,480 --> 00:16:52,459
CS and they've built a partner let's

00:16:50,899 --> 00:16:55,399
suppose they have a partner ecosystem

00:16:52,459 --> 00:16:58,820
and what that ecosystem does is it takes

00:16:55,399 --> 00:17:01,730
the vendor BSP and depending on the

00:16:58,820 --> 00:17:05,230
long-term support of the SOC whatever it

00:17:01,730 --> 00:17:08,120
may be these BSP could range from being

00:17:05,230 --> 00:17:10,579
relatively recent perhaps a year old in

00:17:08,120 --> 00:17:12,199
terms of the kernel two three or more

00:17:10,579 --> 00:17:16,250
years old for a part that's being

00:17:12,199 --> 00:17:17,929
long-term supported and what they end up

00:17:16,250 --> 00:17:19,669
doing is they end up creating a custom

00:17:17,929 --> 00:17:22,040
software build for every customer

00:17:19,669 --> 00:17:23,959
product and they're getting very good at

00:17:22,040 --> 00:17:26,209
it they take the SOC they take a

00:17:23,959 --> 00:17:28,520
distribution they take customer specific

00:17:26,209 --> 00:17:31,250
hardware they build the whole thing

00:17:28,520 --> 00:17:35,090
together and create a custom an entire

00:17:31,250 --> 00:17:37,370
custom platform so there's a better way

00:17:35,090 --> 00:17:41,179
of doing this if you come and

00:17:37,370 --> 00:17:44,179
collaborate within linaro you can work

00:17:41,179 --> 00:17:47,419
on creating a unified software platform

00:17:44,179 --> 00:17:52,610
across your iso seas of choice and base

00:17:47,419 --> 00:17:56,299
that upstream and build in security and

00:17:52,610 --> 00:17:59,590
over-the-air capability into the

00:17:56,299 --> 00:18:02,570
platform once do it together and then

00:17:59,590 --> 00:18:04,910
leverage your own partner ecosystem to

00:18:02,570 --> 00:18:07,340
deliver value-added services in the

00:18:04,910 --> 00:18:10,100
areas that can actually generate real

00:18:07,340 --> 00:18:13,549
real return for you and the result is

00:18:10,100 --> 00:18:17,660
far lower maintenance costs faster

00:18:13,549 --> 00:18:19,850
time-to-market and enabling a trusted

00:18:17,660 --> 00:18:22,700
hardware and software ecosystem around

00:18:19,850 --> 00:18:30,799
your products that works cross SOC

00:18:22,700 --> 00:18:35,840
vendor the second example is coming up

00:18:30,799 --> 00:18:37,500
more recently where arm enterprise

00:18:35,840 --> 00:18:40,500
activity

00:18:37,500 --> 00:18:44,190
is really accelerating we can now get

00:18:40,500 --> 00:18:46,800
arm servers off the shelf in the

00:18:44,190 --> 00:18:50,640
marketplace and so companies are

00:18:46,800 --> 00:18:52,950
starting to get interested in what is

00:18:50,640 --> 00:18:55,920
the return if I invest in the arm server

00:18:52,950 --> 00:18:58,650
ecosystem and so a company might take

00:18:55,920 --> 00:19:02,130
four different enterprise distributions

00:18:58,650 --> 00:19:06,980
and they might take four new enterprise

00:19:02,130 --> 00:19:10,050
SOC vendor platforms and each vendor is

00:19:06,980 --> 00:19:13,770
delivering to that prospective customer

00:19:10,050 --> 00:19:17,220
a completely new system with the latest

00:19:13,770 --> 00:19:20,550
firmware kernels because now upstream is

00:19:17,220 --> 00:19:23,850
working distributions and of course just

00:19:20,550 --> 00:19:25,700
a few things to last-minute additions

00:19:23,850 --> 00:19:31,050
just to make sure that the best possible

00:19:25,700 --> 00:19:32,910
foot forward is is placed in fact some

00:19:31,050 --> 00:19:35,640
of those patches are identifying

00:19:32,910 --> 00:19:38,040
problems that have been noticed perhaps

00:19:35,640 --> 00:19:39,870
in the upstream kernel and different

00:19:38,040 --> 00:19:42,690
vendors are independently addressing the

00:19:39,870 --> 00:19:44,520
same problem in a different way so the

00:19:42,690 --> 00:19:46,710
company that's evaluating this now has

00:19:44,520 --> 00:19:50,280
16 different software and system

00:19:46,710 --> 00:19:52,800
configurations and as John masters would

00:19:50,280 --> 00:19:57,030
say it should just work and he's right

00:19:52,800 --> 00:20:01,650
it should all just work but it doesn't

00:19:57,030 --> 00:20:05,700
yet it just doesn't yet we've got to get

00:20:01,650 --> 00:20:08,730
to the place where it does so one of the

00:20:05,700 --> 00:20:11,610
things that we want the enterprise group

00:20:08,730 --> 00:20:13,830
to talk about this week is how do we

00:20:11,610 --> 00:20:16,710
make this better how do we collaborate

00:20:13,830 --> 00:20:19,470
to make this better and maybe we build

00:20:16,710 --> 00:20:22,110
and use what we have in terms of

00:20:19,470 --> 00:20:25,290
infrastructure some kind of common and

00:20:22,110 --> 00:20:29,100
agreed test platform that runs on every

00:20:25,290 --> 00:20:31,140
SOC vendors hardware and includes a lot

00:20:29,100 --> 00:20:33,750
of testing and use cases and even

00:20:31,140 --> 00:20:35,640
customer test and use cases and the

00:20:33,750 --> 00:20:37,620
results and the benchmarks out of that

00:20:35,640 --> 00:20:40,050
can be public or private depending on

00:20:37,620 --> 00:20:44,240
each vendor the result is a common

00:20:40,050 --> 00:20:47,429
baseline that everybody knows works and

00:20:44,240 --> 00:20:51,250
this doesn't remove the relationship

00:20:47,429 --> 00:20:53,680
between the supplier the soc van door

00:20:51,250 --> 00:20:56,860
the server supplier and the customer it

00:20:53,680 --> 00:21:02,320
just adds to it let's build that common

00:20:56,860 --> 00:21:04,990
baseline together okay switch topics and

00:21:02,320 --> 00:21:09,400
a quick tour around some of linares

00:21:04,990 --> 00:21:14,500
technical activities the core and club

00:21:09,400 --> 00:21:20,290
members invest a lot of resources in

00:21:14,500 --> 00:21:23,470
core technologies across linaro and just

00:21:20,290 --> 00:21:26,050
some examples that we've been thinking

00:21:23,470 --> 00:21:29,170
about in linaro getting ready for this

00:21:26,050 --> 00:21:33,790
conference in the colonel there's a lot

00:21:29,170 --> 00:21:36,340
more interest in hard real-time activity

00:21:33,790 --> 00:21:37,990
because when you start thinking about 5g

00:21:36,340 --> 00:21:41,260
networks the amount of data that's

00:21:37,990 --> 00:21:43,060
flying flying around we need to have

00:21:41,260 --> 00:21:46,090
better real-time control in the linux

00:21:43,060 --> 00:21:49,260
kernel it's been over 20 years we need

00:21:46,090 --> 00:21:51,700
to finish the job and arm can lead this

00:21:49,260 --> 00:21:54,850
think about what I said earlier arm

00:21:51,700 --> 00:21:57,850
needs to lead the industry in certain

00:21:54,850 --> 00:22:00,610
places maybe this is one in power

00:21:57,850 --> 00:22:03,370
management we need to move beyond the

00:22:00,610 --> 00:22:06,160
cpu core and think about the whole SOC

00:22:03,370 --> 00:22:07,690
arm SOC s are getting very complex we're

00:22:06,160 --> 00:22:09,850
adding a lot of different cause a lot of

00:22:07,690 --> 00:22:11,830
different accelerators either on or off

00:22:09,850 --> 00:22:16,380
the SOC we have to think about the whole

00:22:11,830 --> 00:22:21,270
system security we have an open-source

00:22:16,380 --> 00:22:23,650
secure trusted execution environment

00:22:21,270 --> 00:22:26,470
let's make it the one that everybody

00:22:23,650 --> 00:22:29,280
just uses by default it's interesting

00:22:26,470 --> 00:22:31,540
opt e is actually getting a lot of

00:22:29,280 --> 00:22:33,790
activity across the industry we're

00:22:31,540 --> 00:22:36,760
getting more and more inquiries we need

00:22:33,790 --> 00:22:39,580
help we need resources we need to come

00:22:36,760 --> 00:22:42,970
together in the security area and work

00:22:39,580 --> 00:22:45,610
on a single open platform that then can

00:22:42,970 --> 00:22:47,440
be can be taken and people can then add

00:22:45,610 --> 00:22:49,510
their own proprietary requirements on

00:22:47,440 --> 00:22:51,670
top of but if we don't have a common

00:22:49,510 --> 00:22:56,830
open platform we're not doing ourselves

00:22:51,670 --> 00:23:00,490
a service virtualization we're pretty

00:22:56,830 --> 00:23:04,390
much functionally at parity or close to

00:23:00,490 --> 00:23:05,180
parity with x86 what do we do next what

00:23:04,390 --> 00:23:06,680
is needed

00:23:05,180 --> 00:23:10,280
the arm ecosystem where are the

00:23:06,680 --> 00:23:14,870
opportunities and let's build that

00:23:10,280 --> 00:23:18,230
software tools there's always work to do

00:23:14,870 --> 00:23:22,100
on tools it astonishes me how difficult

00:23:18,230 --> 00:23:24,860
it is in the iot space to move from one

00:23:22,100 --> 00:23:29,690
OS to another or even from one SOC

00:23:24,860 --> 00:23:32,510
vendor to another using the same OS the

00:23:29,690 --> 00:23:34,610
other end of the scale GCC will always

00:23:32,510 --> 00:23:36,080
what's going to be here for a long time

00:23:34,610 --> 00:23:38,000
I won't say always be here but it's

00:23:36,080 --> 00:23:40,880
going to be here for a long time but

00:23:38,000 --> 00:23:44,390
llvm is increasingly being used for new

00:23:40,880 --> 00:23:48,650
technology we need to improve arms llvm

00:23:44,390 --> 00:23:52,640
performance and finally we really need

00:23:48,650 --> 00:23:55,160
to focus on automation and CI the future

00:23:52,640 --> 00:23:57,770
of software and these big building

00:23:55,160 --> 00:24:00,340
platforms is about automating because

00:23:57,770 --> 00:24:03,940
it's the only way to scale development

00:24:00,340 --> 00:24:08,950
validation and ultimately certification

00:24:03,940 --> 00:24:11,870
in the server space working upstream is

00:24:08,950 --> 00:24:14,090
absolutely mandatory it should be

00:24:11,870 --> 00:24:16,460
mandatory in all segments but in the

00:24:14,090 --> 00:24:18,710
server space you don't get sell anything

00:24:16,460 --> 00:24:22,520
unless you're upstream an arm servers

00:24:18,710 --> 00:24:24,890
now just work but it's not enough we

00:24:22,520 --> 00:24:27,140
have to bring innovation and benefit we

00:24:24,890 --> 00:24:30,650
have to deliver value to customers who

00:24:27,140 --> 00:24:32,600
are going to buy arm servers and maybe

00:24:30,650 --> 00:24:35,600
that's in hike or camp maybe it's in a

00:24:32,600 --> 00:24:37,790
lower power for a given workload there

00:24:35,600 --> 00:24:40,130
are opportunities both in existing

00:24:37,790 --> 00:24:43,550
platforms existing standard data center

00:24:40,130 --> 00:24:46,730
installations and in new markets the

00:24:43,550 --> 00:24:49,400
machine learning explosion across the

00:24:46,730 --> 00:24:52,250
entire industry is a big opportunity for

00:24:49,400 --> 00:24:55,700
arm what do we need to do to enable at

00:24:52,250 --> 00:24:57,770
in open source and there's a lot of work

00:24:55,700 --> 00:25:01,490
as a result going on in some of the

00:24:57,770 --> 00:25:04,220
accelerator standards so c6 gen Z and

00:25:01,490 --> 00:25:07,970
others which are going to be explored

00:25:04,220 --> 00:25:11,810
this week the key point about enterprise

00:25:07,970 --> 00:25:13,610
is that it's not just about enterprise

00:25:11,810 --> 00:25:15,860
if you think about some of the

00:25:13,610 --> 00:25:18,809
architectures in enterprise containers

00:25:15,860 --> 00:25:20,970
will talk about later these are in a

00:25:18,809 --> 00:25:24,509
they're going to be used in other

00:25:20,970 --> 00:25:26,249
platforms a gateway is essentially a

00:25:24,509 --> 00:25:29,970
small server that's what it's going to

00:25:26,249 --> 00:25:33,529
become enterprise technology is going to

00:25:29,970 --> 00:25:36,299
come to IOT smart devices gateways cars

00:25:33,529 --> 00:25:39,779
so we need to be thinking about that as

00:25:36,299 --> 00:25:45,240
we build this software in the networking

00:25:39,779 --> 00:25:46,799
space Francois and the LNG group have

00:25:45,240 --> 00:25:49,379
been doing very good work and are

00:25:46,799 --> 00:25:51,720
continuing to work on dramatically

00:25:49,379 --> 00:25:54,809
improving the ROI of networking

00:25:51,720 --> 00:25:59,039
equipment and software we're seeing

00:25:54,809 --> 00:26:01,200
significant ipsec gains over competing

00:25:59,039 --> 00:26:03,480
architectures leveraging today's

00:26:01,200 --> 00:26:04,860
hardware accelerators this isn't

00:26:03,480 --> 00:26:07,619
something in the future it can be

00:26:04,860 --> 00:26:09,499
demonstrated today and working on

00:26:07,619 --> 00:26:12,899
innovative network virtualization

00:26:09,499 --> 00:26:15,480
technologies this year our next there

00:26:12,899 --> 00:26:18,690
are opportunities in customer premises

00:26:15,480 --> 00:26:21,749
equipment where if you're serving video

00:26:18,690 --> 00:26:24,960
streams for example 4k video streams to

00:26:21,749 --> 00:26:27,539
households you can actually deliver a

00:26:24,960 --> 00:26:30,119
very large number of streams using

00:26:27,539 --> 00:26:32,220
thousands of VMs working on a single

00:26:30,119 --> 00:26:35,580
socket how do we make that happen in the

00:26:32,220 --> 00:26:39,749
ARM architecture and the cloud radio

00:26:35,580 --> 00:26:42,779
access network opportunity is is how do

00:26:39,749 --> 00:26:44,909
we make it better going back to the

00:26:42,779 --> 00:26:47,129
realtime kernel comment how do we

00:26:44,909 --> 00:26:49,769
improve real-time performance and

00:26:47,129 --> 00:26:52,100
latency so we get guaranteed bandwidth

00:26:49,769 --> 00:26:54,480
when we go to very high network speeds

00:26:52,100 --> 00:26:58,169
we're being slowed down in the

00:26:54,480 --> 00:27:01,529
networking area because the service

00:26:58,169 --> 00:27:04,230
providers are still resistant to using

00:27:01,529 --> 00:27:05,909
platforms as distributions as opposed to

00:27:04,230 --> 00:27:08,190
building their own custom software

00:27:05,909 --> 00:27:09,769
that's increasing the cost of

00:27:08,190 --> 00:27:12,029
development deployment and maintenance

00:27:09,769 --> 00:27:14,369
bringing out these open source

00:27:12,029 --> 00:27:17,009
technologies is going to dramatically

00:27:14,369 --> 00:27:19,679
improve the economics of networking

00:27:17,009 --> 00:27:26,549
equipment and arm stands to gain the

00:27:19,679 --> 00:27:29,549
most in digital home there are too many

00:27:26,549 --> 00:27:31,750
media standards accelerated media on

00:27:29,549 --> 00:27:35,710
arms should just work

00:27:31,750 --> 00:27:39,850
and today it requires a lot of effort so

00:27:35,710 --> 00:27:42,910
building on ffmpeg and v4l2 the digital

00:27:39,850 --> 00:27:44,880
home group is trying to enable complete

00:27:42,910 --> 00:27:48,790
open source reference secure

00:27:44,880 --> 00:27:52,540
implementations using opt e underneath

00:27:48,790 --> 00:27:54,520
commercial third-party DRMs and so

00:27:52,540 --> 00:27:57,400
reference set top open source solutions

00:27:54,520 --> 00:28:00,730
are available both with the comcast IDK

00:27:57,400 --> 00:28:03,870
and also with linaro zone open SDK and

00:28:00,730 --> 00:28:08,740
the goal here is to create best-in-class

00:28:03,870 --> 00:28:10,990
reference open source TV experiences

00:28:08,740 --> 00:28:14,080
whether based on AOSP and android or

00:28:10,990 --> 00:28:16,480
based on linux and leverage that unified

00:28:14,080 --> 00:28:21,060
accelerator media work and secure video

00:28:16,480 --> 00:28:24,160
path into AOSP focusing on the high-end

00:28:21,060 --> 00:28:25,420
set-top platforms because it's going to

00:28:24,160 --> 00:28:28,450
be tough to compete with the thirty

00:28:25,420 --> 00:28:32,770
dollar ones that don't do full drm

00:28:28,450 --> 00:28:36,220
security mobil group is our longest

00:28:32,770 --> 00:28:40,090
lasting it is we're kind of linaro

00:28:36,220 --> 00:28:42,670
started and the focus in the mobile

00:28:40,090 --> 00:28:45,160
group this year is to collaborate with

00:28:42,670 --> 00:28:47,350
the colonel community to extend

00:28:45,160 --> 00:28:50,980
long-term support particularly around

00:28:47,350 --> 00:28:53,530
the kernels that are used for for a OSP

00:28:50,980 --> 00:28:54,940
and mobile phones and this is important

00:28:53,530 --> 00:28:58,590
because we need to create a platform

00:28:54,940 --> 00:29:01,120
that's easier to update continuously

00:28:58,590 --> 00:29:04,570
continue trying to reduce the gap

00:29:01,120 --> 00:29:07,180
between the android common kernel and

00:29:04,570 --> 00:29:08,710
the mainline linux kernel and this is an

00:29:07,180 --> 00:29:11,710
effort that linaro has been involved

00:29:08,710 --> 00:29:13,660
with for for several years now and we've

00:29:11,710 --> 00:29:17,530
made a big impact we need to continue

00:29:13,660 --> 00:29:20,320
that work and we need to improve CI

00:29:17,530 --> 00:29:26,710
testing and validation we need to catch

00:29:20,320 --> 00:29:30,400
regressions earlier light is our infant

00:29:26,710 --> 00:29:33,180
in terms of groups we are focusing on

00:29:30,400 --> 00:29:36,850
embedded automotive gateway and IOT

00:29:33,180 --> 00:29:39,370
applications and in the IOT space work

00:29:36,850 --> 00:29:40,960
were coping with tens of real-time

00:29:39,370 --> 00:29:43,600
operating systems that have a

00:29:40,960 --> 00:29:45,580
significant market share we're coping

00:29:43,600 --> 00:29:48,310
with middleware and

00:29:45,580 --> 00:29:49,990
network options that have exploded we're

00:29:48,310 --> 00:29:52,450
coping with hundreds of different

00:29:49,990 --> 00:29:54,610
microcontrollers microcontroller

00:29:52,450 --> 00:29:58,000
architectures and then boards that have

00:29:54,610 --> 00:30:00,640
those microcontrollers on and all of

00:29:58,000 --> 00:30:02,620
them we need secure over-the-air update

00:30:00,640 --> 00:30:05,530
and we need secure sensor data

00:30:02,620 --> 00:30:09,100
connections to the cloud we have to be

00:30:05,530 --> 00:30:12,030
able to update these and so what light

00:30:09,100 --> 00:30:14,200
is doing is it's looking at how to drive

00:30:12,030 --> 00:30:18,880
consolidation with a complete open

00:30:14,200 --> 00:30:21,400
source platform solution how do we meet

00:30:18,880 --> 00:30:23,050
time to market with a new code base

00:30:21,400 --> 00:30:26,470
that's that's going at the speed of

00:30:23,050 --> 00:30:30,250
light in full development mode on the

00:30:26,470 --> 00:30:33,160
IOT gateway we're coping with different

00:30:30,250 --> 00:30:35,170
protocols venda lock-ins for every

00:30:33,160 --> 00:30:36,640
single gateway you need a gateway for

00:30:35,170 --> 00:30:40,660
everything we've talked about this

00:30:36,640 --> 00:30:43,450
before and so why can't we as armed lead

00:30:40,660 --> 00:30:46,450
the development of a flexible unified

00:30:43,450 --> 00:30:48,820
open source gateway solution and base

00:30:46,450 --> 00:30:50,490
that on core technology and then

00:30:48,820 --> 00:30:52,860
containers running the actual

00:30:50,490 --> 00:30:55,600
applications so you can have multiple

00:30:52,860 --> 00:30:58,540
proprietary gateways in containers on a

00:30:55,600 --> 00:31:00,520
single hardware platform now we need to

00:30:58,540 --> 00:31:04,060
a lie across the industry this is an

00:31:00,520 --> 00:31:05,500
example of where it's not armed only we

00:31:04,060 --> 00:31:09,190
need to make sure we build a platform

00:31:05,500 --> 00:31:11,050
for the industry with the industry so we

00:31:09,190 --> 00:31:14,080
are discussing with industry partners

00:31:11,050 --> 00:31:16,930
how we consolidate this across many

00:31:14,080 --> 00:31:19,420
ongoing gateway initiatives and there

00:31:16,930 --> 00:31:23,740
will be discussions this week talk to to

00:31:19,420 --> 00:31:25,720
matlock if you need more information so

00:31:23,740 --> 00:31:29,850
some of the key themes that we're going

00:31:25,720 --> 00:31:33,970
to be working on this week and this year

00:31:29,850 --> 00:31:37,780
security is of course everywhere in

00:31:33,970 --> 00:31:41,680
cortex a in Linux secure linnets set

00:31:37,780 --> 00:31:44,040
comp which is used in Dhaka in zephyr

00:31:41,680 --> 00:31:46,690
we're doing a lot of work on pki

00:31:44,040 --> 00:31:49,450
security basically open source

00:31:46,690 --> 00:31:51,280
implementation in software that then you

00:31:49,450 --> 00:31:52,840
can augment with the hardware

00:31:51,280 --> 00:31:56,650
accelerators or the hardware

00:31:52,840 --> 00:31:58,759
capabilities in your own SOC the arm v8

00:31:56,650 --> 00:32:02,179
m architecture is coming out this year

00:31:58,759 --> 00:32:05,209
add trustzone into into the

00:32:02,179 --> 00:32:07,909
microcontroller space and we do need to

00:32:05,209 --> 00:32:09,829
cater for these MCU specific hardware

00:32:07,909 --> 00:32:11,690
capabilities because they're being

00:32:09,829 --> 00:32:15,349
delivered as value-add by the MCU

00:32:11,690 --> 00:32:18,649
vendors opt e I mentioned earlier let's

00:32:15,349 --> 00:32:20,359
make it a secure global open source

00:32:18,649 --> 00:32:24,589
platform that everybody can use and

00:32:20,359 --> 00:32:27,829
let's invest more into it OT RP open

00:32:24,589 --> 00:32:30,320
trust protocol is another forthcoming

00:32:27,829 --> 00:32:32,449
standard that's been published we need

00:32:30,320 --> 00:32:34,549
an open source implementation we can

00:32:32,449 --> 00:32:36,949
only do this together we don't have

00:32:34,549 --> 00:32:38,629
enough resources to take five or six of

00:32:36,949 --> 00:32:40,969
our own engineers to do this we need to

00:32:38,629 --> 00:32:42,889
work on these problems together an army

00:32:40,969 --> 00:32:45,589
introduced the platform security

00:32:42,889 --> 00:32:48,679
architecture at the last connect in Las

00:32:45,589 --> 00:32:50,449
Vegas we that is rolling out this year

00:32:48,679 --> 00:32:54,049
and we need to make sure that's part of

00:32:50,449 --> 00:32:57,889
everything we do the second theme i've

00:32:54,049 --> 00:33:00,289
mentioned automated testing there's this

00:32:57,889 --> 00:33:03,199
increasing requirement for connected

00:33:00,289 --> 00:33:06,769
products you can't just test a product

00:33:03,199 --> 00:33:10,389
anymore during development you have to

00:33:06,769 --> 00:33:13,369
enable security fixes bug fixes and

00:33:10,389 --> 00:33:16,489
optionally feature updates during a

00:33:13,369 --> 00:33:18,859
product lifetime and so automated

00:33:16,489 --> 00:33:20,869
testing is becoming more and more

00:33:18,859 --> 00:33:25,699
important from everything from

00:33:20,869 --> 00:33:27,919
enterprise to iot devices today we have

00:33:25,699 --> 00:33:30,469
the colonel see i dot org effort which

00:33:27,919 --> 00:33:33,139
was started by some of the linaro team a

00:33:30,469 --> 00:33:38,509
while ago today we're building and

00:33:33,139 --> 00:33:41,299
booting continuously 64 unique trees 249

00:33:38,509 --> 00:33:44,869
board three architectures and 33 unique

00:33:41,299 --> 00:33:46,309
associes but it's not enough we're just

00:33:44,869 --> 00:33:49,369
building and booting we're just doing a

00:33:46,309 --> 00:33:51,529
basic sanity test we have to put more

00:33:49,369 --> 00:33:53,839
functional testing in and that needs

00:33:51,529 --> 00:33:56,239
more resources we need to virtualize

00:33:53,839 --> 00:33:57,949
this we need to get it running in the

00:33:56,239 --> 00:33:59,779
cloud and we need to have full

00:33:57,949 --> 00:34:01,519
functional testing or at least a lot

00:33:59,779 --> 00:34:03,440
more functional testing across the

00:34:01,519 --> 00:34:06,319
colonel we need to continuously

00:34:03,440 --> 00:34:09,679
integrate continuously tests so that

00:34:06,319 --> 00:34:12,179
customers can continuously deploy and we

00:34:09,679 --> 00:34:14,069
need to think hard in

00:34:12,179 --> 00:34:15,809
this group about how do we actually

00:34:14,069 --> 00:34:20,190
achieve this where do we put the

00:34:15,809 --> 00:34:22,349
physical resources because it's hard to

00:34:20,190 --> 00:34:27,210
work in China on equipment based in in

00:34:22,349 --> 00:34:30,899
in Europe and vice versa another theme

00:34:27,210 --> 00:34:33,750
is the rise of containers I think pretty

00:34:30,899 --> 00:34:36,119
much every software engineer has now

00:34:33,750 --> 00:34:39,540
heard of containers and many of us are

00:34:36,119 --> 00:34:42,000
now using them software is globally

00:34:39,540 --> 00:34:43,829
deployed into virtual environments today

00:34:42,000 --> 00:34:45,619
in the enterprise where it's

00:34:43,829 --> 00:34:48,300
instantiated and destroyed

00:34:45,619 --> 00:34:50,550
instantaneously and and this is

00:34:48,300 --> 00:34:53,579
revolutionising the use in the

00:34:50,550 --> 00:34:55,800
management of the data center containers

00:34:53,579 --> 00:34:57,869
are actually an enabling technology for

00:34:55,800 --> 00:35:03,030
deploying software and for orchestrating

00:34:57,869 --> 00:35:05,790
and applications can be run in

00:35:03,030 --> 00:35:08,430
containers an enterprise distribution

00:35:05,790 --> 00:35:10,230
can be run in a container and so there's

00:35:08,430 --> 00:35:13,770
a lot of effort going on and thinking

00:35:10,230 --> 00:35:15,780
going on and early technology deliveries

00:35:13,770 --> 00:35:18,150
from the distributions in terms of

00:35:15,780 --> 00:35:20,339
building a container platform what is

00:35:18,150 --> 00:35:22,589
the firmware the kernel the minimal

00:35:20,339 --> 00:35:25,859
services you need that a lightweight

00:35:22,589 --> 00:35:27,900
with minimal secure secure attack

00:35:25,859 --> 00:35:30,540
surfaces and that is completely

00:35:27,900 --> 00:35:33,690
updateable that then you can run all of

00:35:30,540 --> 00:35:36,089
this software on top of and this is

00:35:33,690 --> 00:35:37,650
beyond just the data center this is

00:35:36,089 --> 00:35:39,540
going to be the architecture this

00:35:37,650 --> 00:35:42,510
architecture is going to get into home

00:35:39,540 --> 00:35:45,960
devices factory devices industrial

00:35:42,510 --> 00:35:48,690
automotive it's the it's the clear way

00:35:45,960 --> 00:35:50,490
the industry is moving again go back to

00:35:48,690 --> 00:35:53,190
what I said at the beginning where do we

00:35:50,490 --> 00:36:00,680
want to be in two years time we need to

00:35:53,190 --> 00:36:04,559
build this with together another one um

00:36:00,680 --> 00:36:07,650
let us mention this a little while ago

00:36:04,559 --> 00:36:11,900
how do we get developers to work on arm

00:36:07,650 --> 00:36:15,809
first why are we still using intel tools

00:36:11,900 --> 00:36:18,540
right where is the arm box that

00:36:15,809 --> 00:36:20,670
leverages the cost down of the pc

00:36:18,540 --> 00:36:23,520
industry that can be used as a

00:36:20,670 --> 00:36:25,140
development machine or as a server where

00:36:23,520 --> 00:36:26,760
is the hyper scale

00:36:25,140 --> 00:36:28,289
box that a developer can have on their

00:36:26,760 --> 00:36:30,720
desks to do some interesting research

00:36:28,289 --> 00:36:32,579
and things maybe we could take a

00:36:30,720 --> 00:36:35,490
Chromebook design and just put more

00:36:32,579 --> 00:36:37,440
memory on get good upstream Linux

00:36:35,490 --> 00:36:39,119
support onto it and uses as a developer

00:36:37,440 --> 00:36:41,609
platform for developers to carry two

00:36:39,119 --> 00:36:45,900
conferences where's the arm equivalent

00:36:41,609 --> 00:36:47,819
of the arm nuk so let's go and see if we

00:36:45,900 --> 00:36:49,440
can work on solving this problem there's

00:36:47,819 --> 00:36:51,089
a session to gather requirements on

00:36:49,440 --> 00:36:53,609
friday if there's something that

00:36:51,089 --> 00:36:56,130
interests you go and join it put your

00:36:53,609 --> 00:36:59,339
ideas into it and maybe we can leverage

00:36:56,130 --> 00:37:01,829
our connections talk to some odms in the

00:36:59,339 --> 00:37:04,440
industry and and get some hardware out

00:37:01,829 --> 00:37:06,809
that that we can use and as servers get

00:37:04,440 --> 00:37:09,990
get put in more servers get put into the

00:37:06,809 --> 00:37:13,260
cloud maybe we can actually start really

00:37:09,990 --> 00:37:19,650
making forearm developers arm the

00:37:13,260 --> 00:37:23,250
development tool okay quick change 296

00:37:19,650 --> 00:37:26,400
boards there's a lot of activity going

00:37:23,250 --> 00:37:28,549
on in this space led by dr. yang zhang

00:37:26,400 --> 00:37:32,730
who's the head of our 96 boards effort

00:37:28,549 --> 00:37:36,059
there are over 30 new processor boards

00:37:32,730 --> 00:37:39,170
in design that we expect to be delivered

00:37:36,059 --> 00:37:43,829
into the market this year across SOC s

00:37:39,170 --> 00:37:45,450
and M C use and there are a number of

00:37:43,829 --> 00:37:48,119
boards that are being shown at this

00:37:45,450 --> 00:37:49,769
event or being shown to a limited

00:37:48,119 --> 00:37:54,180
audience of developers at this event

00:37:49,769 --> 00:37:57,210
using the latest mobile technology so

00:37:54,180 --> 00:37:59,640
latest mobile ARM processors latest

00:37:57,210 --> 00:38:01,829
Marley technology if you're interested

00:37:59,640 --> 00:38:03,690
in getting your hands on one of these to

00:38:01,829 --> 00:38:05,460
help get the software ready for launch

00:38:03,690 --> 00:38:08,460
because we want to launch these boards

00:38:05,460 --> 00:38:13,410
in the next few months then please go

00:38:08,460 --> 00:38:15,750
and talk to Yang and explain your

00:38:13,410 --> 00:38:17,940
interest to him there are some boards

00:38:15,750 --> 00:38:20,160
that we can't announce today but they're

00:38:17,940 --> 00:38:23,940
going to be announced very shortly what

00:38:20,160 --> 00:38:29,190
I can announce today is that the one of

00:38:23,940 --> 00:38:33,539
our China members RDA is building a an

00:38:29,190 --> 00:38:35,940
IOT board with a cortex m4 there MCU has

00:38:33,539 --> 00:38:37,420
Wi-Fi built in including the Phi and Mac

00:38:35,940 --> 00:38:42,040
actually on the the

00:38:37,420 --> 00:38:45,270
device and then the board has flash SRAM

00:38:42,040 --> 00:38:50,170
and cash and crypto security hardware

00:38:45,270 --> 00:38:54,490
another board is from media tech this is

00:38:50,170 --> 00:38:58,059
a new board with mediatek MCU on that

00:38:54,490 --> 00:39:01,329
includes Wi-Fi and Bluetooth le and

00:38:58,059 --> 00:39:05,650
again flash SRAM rom and crypto security

00:39:01,329 --> 00:39:07,839
hardware on on the SOC both of these

00:39:05,650 --> 00:39:11,950
boards have had Zephyr ported to them

00:39:07,839 --> 00:39:14,740
already and on the seaside Archer mind

00:39:11,950 --> 00:39:19,510
you can today go an order from

00:39:14,740 --> 00:39:24,819
Aliexpress com an X 20 pro this is the C

00:39:19,510 --> 00:39:28,839
spec it has a 10 core SOC with a 72 s

00:39:24,819 --> 00:39:31,540
and a 53 s now animali t 880 GPU you can

00:39:28,839 --> 00:39:33,730
also even put an LTE radio module on top

00:39:31,540 --> 00:39:38,200
of it and that's available today you can

00:39:33,730 --> 00:39:40,750
go on order one online finally there's a

00:39:38,200 --> 00:39:43,420
new board that we were involved in the

00:39:40,750 --> 00:39:48,280
development of which is two coatings

00:39:43,420 --> 00:39:50,079
mezzanine board this is a sensor hub and

00:39:48,280 --> 00:39:53,920
is designed to be able to be plugged on

00:39:50,079 --> 00:39:57,280
to any of the c/e boards or anything

00:39:53,920 --> 00:40:00,849
that meets the 1.8 volt expansion spec

00:39:57,280 --> 00:40:03,369
and this has a range of sensors on from

00:40:00,849 --> 00:40:05,700
accelerometer gyro magnetic pressure

00:40:03,369 --> 00:40:10,390
ambient light sensor proximity

00:40:05,700 --> 00:40:12,640
microphone temperature humidity and also

00:40:10,390 --> 00:40:17,619
has a number of leads on and we're going

00:40:12,640 --> 00:40:24,780
to show you that a little bit later last

00:40:17,619 --> 00:40:24,780
time we were here last time at Vegas

00:40:25,200 --> 00:40:44,910
and this is where I need to make sure

00:40:29,220 --> 00:40:47,820
that i'm logged in we talked about a

00:40:44,910 --> 00:40:53,000
board that was being introduced by

00:40:47,820 --> 00:40:57,900
orange pie this is built to the IOT

00:40:53,000 --> 00:41:01,470
specification and has a full arm cortex

00:40:57,900 --> 00:41:03,660
a5 with integrated quarter of a gigabyte

00:41:01,470 --> 00:41:07,740
of sdram and half a gigabyte of NAND

00:41:03,660 --> 00:41:10,230
flash it also has micro SD and camera

00:41:07,740 --> 00:41:12,720
and can of course be used as a pretty

00:41:10,230 --> 00:41:15,210
powerful vision processing either for

00:41:12,720 --> 00:41:18,300
robotics or drone applications and has

00:41:15,210 --> 00:41:21,840
built in Wi-Fi I have one of those

00:41:18,300 --> 00:41:24,600
boards here today and you should be able

00:41:21,840 --> 00:41:27,240
to see that board there you can see as I

00:41:24,600 --> 00:41:29,730
am on the console which is running a bun

00:41:27,240 --> 00:41:34,050
to you can see the serial port flashing

00:41:29,730 --> 00:41:39,200
if I just do a you name minus a we can

00:41:34,050 --> 00:41:44,010
see that it's running ubuntu ported by

00:41:39,200 --> 00:41:45,780
the orange pi guys and if i do a PSX we

00:41:44,010 --> 00:41:50,900
can see that it's actually running so

00:41:45,780 --> 00:41:50,900
this is a board that is going to cost

00:41:51,080 --> 00:41:56,520
whoops is going to cost ten dollars

00:41:53,900 --> 00:41:59,160
that's astonishing to be able to

00:41:56,520 --> 00:42:01,770
actually have a board of this power ten

00:41:59,160 --> 00:42:04,680
dollars now imagine this tiny board here

00:42:01,770 --> 00:42:06,500
which is this big put on a sensor hub

00:42:04,680 --> 00:42:11,840
and you've actually got a pretty good

00:42:06,500 --> 00:42:14,010
camera sensing drone all ready to go so

00:42:11,840 --> 00:42:19,950
excited to see what the community is

00:42:14,010 --> 00:42:22,230
going to do with that okay let's talk a

00:42:19,950 --> 00:42:27,750
little bit more about the embedded in

00:42:22,230 --> 00:42:31,290
IOT space there are tens or hundreds of

00:42:27,750 --> 00:42:33,570
OS is out there there is starting to

00:42:31,290 --> 00:42:35,390
become a standardization around the IOT

00:42:33,570 --> 00:42:40,670
protocols at the low level

00:42:35,390 --> 00:42:43,849
so things like co-op LW m2m amqp MQTT

00:42:40,670 --> 00:42:46,250
these standards are now actually getting

00:42:43,849 --> 00:42:50,569
established as the future standards of

00:42:46,250 --> 00:42:54,019
the iot and then higher level libraries

00:42:50,569 --> 00:42:56,269
like IO tivity and thread the challenge

00:42:54,019 --> 00:42:59,240
is that each of these is being ported to

00:42:56,269 --> 00:43:01,549
every OS everybody's doing the same work

00:42:59,240 --> 00:43:03,650
on their own OS again and again and

00:43:01,549 --> 00:43:06,109
again and they're all starting with

00:43:03,650 --> 00:43:07,430
various Co pieces of code or writing

00:43:06,109 --> 00:43:10,849
from scratch and they're all different

00:43:07,430 --> 00:43:12,920
and then each of those is being ported

00:43:10,849 --> 00:43:17,200
onto hundreds or even thousands of em

00:43:12,920 --> 00:43:19,760
see us and SOC s this is not sustainable

00:43:17,200 --> 00:43:23,089
we're heading for a disaster here you

00:43:19,760 --> 00:43:25,569
cannot do plug fests at this scale we

00:43:23,089 --> 00:43:28,730
can't make sure the IOT is going to

00:43:25,569 --> 00:43:31,460
interoperate and work together if we do

00:43:28,730 --> 00:43:35,269
this but this is what we're doing so

00:43:31,460 --> 00:43:37,369
what what can we do about it well what

00:43:35,269 --> 00:43:39,289
we're trying to do in linaro with a

00:43:37,369 --> 00:43:42,170
small team but we need you all to help

00:43:39,289 --> 00:43:44,839
is that we're working on trying to

00:43:42,170 --> 00:43:47,299
create a platform for IOT innovation and

00:43:44,839 --> 00:43:49,609
we're not trying to say there's only

00:43:47,299 --> 00:43:51,559
going to be one but we need to work in

00:43:49,609 --> 00:43:53,930
one place so that we can test and

00:43:51,559 --> 00:43:56,990
configure and deliver open-source

00:43:53,930 --> 00:44:01,609
technology to the entire ecosystem with

00:43:56,990 --> 00:44:03,799
a cross-industry open governance open

00:44:01,609 --> 00:44:06,109
architecture Linux type colonel model

00:44:03,799 --> 00:44:08,359
mod model so we're using the Zephyr

00:44:06,109 --> 00:44:10,190
project for that and the fact that it's

00:44:08,359 --> 00:44:12,410
licensed under a permissive license

00:44:10,190 --> 00:44:15,829
enables proprietary innovation on top of

00:44:12,410 --> 00:44:18,019
this platform and building in security

00:44:15,829 --> 00:44:20,809
and over-the-air updates from the outset

00:44:18,019 --> 00:44:24,619
is critical and so what then we need to

00:44:20,809 --> 00:44:26,720
support commercial industry device

00:44:24,619 --> 00:44:29,210
management and cloud platforms because

00:44:26,720 --> 00:44:31,250
that's where the money is made that's

00:44:29,210 --> 00:44:34,099
where the business is actually getting

00:44:31,250 --> 00:44:38,269
the data and using it and whether it's a

00:44:34,099 --> 00:44:41,059
big platform like an embed cloud or of

00:44:38,269 --> 00:44:42,859
IBM bluemix or an alibi bar or microsoft

00:44:41,059 --> 00:44:45,470
azure there are lots of them or whether

00:44:42,859 --> 00:44:47,930
it's a private one that's being used for

00:44:45,470 --> 00:44:50,000
an industrial IOT application

00:44:47,930 --> 00:44:53,390
we need to be able to connect devices to

00:44:50,000 --> 00:44:55,310
these clouds so light is focusing on

00:44:53,390 --> 00:44:58,310
delivering technology into the Zephyr

00:44:55,310 --> 00:45:00,980
project working in the upstream and

00:44:58,310 --> 00:45:03,140
making those technologies and API is

00:45:00,980 --> 00:45:09,380
available for reuse by other operating

00:45:03,140 --> 00:45:12,440
systems but Zephyr is brand-new it's

00:45:09,380 --> 00:45:15,380
very fast-moving it's completely

00:45:12,440 --> 00:45:18,830
bleeding edge nobody would use it at

00:45:15,380 --> 00:45:22,310
first sight in a product today how do we

00:45:18,830 --> 00:45:27,080
get this to market quickly there are

00:45:22,310 --> 00:45:31,460
many use cases sensors controllers light

00:45:27,080 --> 00:45:35,090
bulbs industrial applications measuring

00:45:31,460 --> 00:45:37,790
a humidity in a in a farm there are many

00:45:35,090 --> 00:45:40,340
use cases that can be met with a small

00:45:37,790 --> 00:45:43,640
set of functionality that you can bake

00:45:40,340 --> 00:45:45,380
quality into and so there's a small and

00:45:43,640 --> 00:45:48,860
ro team in the technologies group

00:45:45,380 --> 00:45:54,170
working on delivering end-to-end use

00:45:48,860 --> 00:45:57,110
cases for small applications that can be

00:45:54,170 --> 00:46:00,020
brought to market today and the goal

00:45:57,110 --> 00:46:02,960
here is to accelerate product quality

00:46:00,020 --> 00:46:05,390
and adoption reduce fragmentation and

00:46:02,960 --> 00:46:07,510
get to market faster with

00:46:05,390 --> 00:46:14,210
next-generation open source platform

00:46:07,510 --> 00:46:16,730
technology so those members and most of

00:46:14,210 --> 00:46:20,090
you here are connected to linaro and

00:46:16,730 --> 00:46:24,770
most of you are members we do send out a

00:46:20,090 --> 00:46:26,510
monthly engineering report and if you

00:46:24,770 --> 00:46:29,540
don't read it you missed out this time

00:46:26,510 --> 00:46:32,240
because quietly a week or two ago a

00:46:29,540 --> 00:46:34,310
couple of weeks ago we actually provided

00:46:32,240 --> 00:46:37,820
the information on how to access the

00:46:34,310 --> 00:46:40,250
technology preview release for this IOT

00:46:37,820 --> 00:46:42,770
platform based on Zephyr and that uses

00:46:40,250 --> 00:46:45,680
Hawk bit for open source Eclipse project

00:46:42,770 --> 00:46:47,810
talk bit as a development platform for

00:46:45,680 --> 00:46:51,500
giving us device management it uses

00:46:47,810 --> 00:46:53,930
gateways built out of high keyboards so

00:46:51,500 --> 00:46:58,280
trying to use what we have and it uses a

00:46:53,930 --> 00:47:02,030
range of IOT devices that technology

00:46:58,280 --> 00:47:04,700
preview release includes a basic

00:47:02,030 --> 00:47:09,260
stack that goes all the way up to http

00:47:04,700 --> 00:47:11,600
based on upstream zephyr including an

00:47:09,260 --> 00:47:14,630
over-the-air up data and built-in

00:47:11,600 --> 00:47:16,340
security and you can program it from an

00:47:14,630 --> 00:47:19,400
applications point of view in C

00:47:16,340 --> 00:47:22,040
JavaScript or Python and you can go and

00:47:19,400 --> 00:47:24,770
download that code and replicate what

00:47:22,040 --> 00:47:27,830
we've done take a look at that there is

00:47:24,770 --> 00:47:30,260
documentation there's code for hawk bit

00:47:27,830 --> 00:47:33,950
for the Heike gateway which is running a

00:47:30,260 --> 00:47:36,680
debian stretch build and then for Zephyr

00:47:33,950 --> 00:47:39,680
itself and all of the information is

00:47:36,680 --> 00:47:43,370
that as it is at that URL if you miss it

00:47:39,680 --> 00:47:48,230
go and talk to alin or tile or any of

00:47:43,370 --> 00:47:49,730
the team you see up here in a minute but

00:47:48,230 --> 00:47:50,900
we thought we'd show you some of the

00:47:49,730 --> 00:47:52,490
things that we've been doing and

00:47:50,900 --> 00:47:54,170
actually in the last two weeks we've

00:47:52,490 --> 00:47:56,570
been continuing we've been making more

00:47:54,170 --> 00:48:00,890
progress and we've been building on that

00:47:56,570 --> 00:48:02,240
technology preview release still using

00:48:00,890 --> 00:48:04,730
hope it is our kind of development

00:48:02,240 --> 00:48:06,620
environment for device management but

00:48:04,730 --> 00:48:08,570
now starting to say okay how do we

00:48:06,620 --> 00:48:10,430
connect to commercial clouds whether

00:48:08,570 --> 00:48:14,600
it's em bird whether it's IBM bluemix

00:48:10,430 --> 00:48:17,210
alibaba and so we've started with MQTT

00:48:14,600 --> 00:48:20,840
and bluemix and we're going to show you

00:48:17,210 --> 00:48:24,670
this now in a demonstration so i'm going

00:48:20,840 --> 00:48:41,060
to ask the team to come up me lo tyler

00:48:24,670 --> 00:48:42,890
and ricardo okay so Ricardo why don't

00:48:41,060 --> 00:48:44,180
you tell us a little bit about what

00:48:42,890 --> 00:48:48,980
we're going to what we're going to show

00:48:44,180 --> 00:48:50,300
here all right hello everyone so what

00:48:48,980 --> 00:48:52,640
are we going to demonstrate and one

00:48:50,300 --> 00:48:54,080
showing actually here here's the 96

00:48:52,640 --> 00:48:55,820
boards carbon boards that are all

00:48:54,080 --> 00:48:59,060
connected in here and here's a nitrogen

00:48:55,820 --> 00:49:00,950
and we have a set of gateways that are

00:48:59,060 --> 00:49:04,070
providing connectivity and also have a

00:49:00,950 --> 00:49:05,420
que 64 wired over Ethernet and here

00:49:04,070 --> 00:49:06,680
doing one interesting thing as well

00:49:05,420 --> 00:49:09,170
you're like all the boards are connected

00:49:06,680 --> 00:49:10,640
through USB but simply just to power the

00:49:09,170 --> 00:49:13,400
boards all the communication is actually

00:49:10,640 --> 00:49:17,360
going Wireless / / blue

00:49:13,400 --> 00:49:19,580
and and all the data managers George

00:49:17,360 --> 00:49:20,690
said we have the management system

00:49:19,580 --> 00:49:22,940
heartbeat which is managing all the

00:49:20,690 --> 00:49:25,010
devices and then we also now integrated

00:49:22,940 --> 00:49:27,590
with bluemix which is receiving all the

00:49:25,010 --> 00:49:29,330
events from the device and to show that

00:49:27,590 --> 00:49:31,910
hard I'm going to pass it over to me low

00:49:29,330 --> 00:49:34,040
which we've got to demonstrate yes so

00:49:31,910 --> 00:49:36,620
what we have here is a web-based

00:49:34,040 --> 00:49:40,130
application but it's built on top of the

00:49:36,620 --> 00:49:42,050
bluemix api's this enables us to extract

00:49:40,130 --> 00:49:43,430
information for bluemix as you can see

00:49:42,050 --> 00:49:45,410
on the top left we have the number of

00:49:43,430 --> 00:49:47,420
devices available with 10 devices we

00:49:45,410 --> 00:49:49,670
have over here the device is that we

00:49:47,420 --> 00:49:51,740
have online for about 14 data and the

00:49:49,670 --> 00:49:54,530
number of events or messages but lunes

00:49:51,740 --> 00:49:56,330
is sending our our way here on the

00:49:54,530 --> 00:49:58,400
bottom instead we have the data but

00:49:56,330 --> 00:49:59,870
these devices are sending in this case

00:49:58,400 --> 00:50:02,390
were interested in two values to

00:49:59,870 --> 00:50:05,060
temperatures the Green Line is the

00:50:02,390 --> 00:50:07,010
environment temperature and the purple

00:50:05,060 --> 00:50:08,750
line is with cpu temperatures in this

00:50:07,010 --> 00:50:10,370
case you see a flat line because these

00:50:08,750 --> 00:50:13,460
boards are not reporting any cpus

00:50:10,370 --> 00:50:16,310
temperatures at the moment so we're

00:50:13,460 --> 00:50:18,320
seeing here real time IOT devices

00:50:16,310 --> 00:50:20,570
wirelessly connected through a gateway

00:50:18,320 --> 00:50:23,990
and up into the cloud running commercial

00:50:20,570 --> 00:50:26,540
bluemix to access the sensor data that's

00:50:23,990 --> 00:50:28,700
good stuff but I talked a little bit

00:50:26,540 --> 00:50:33,770
earlier about maybe we'd like to show

00:50:28,700 --> 00:50:37,580
you the new sensor hub board so what I'd

00:50:33,770 --> 00:50:39,620
like to do is ask Ricardo to take this

00:50:37,580 --> 00:50:41,980
number of sensor boards that we've just

00:50:39,620 --> 00:50:45,020
got from the manufacturing line in China

00:50:41,980 --> 00:50:48,200
and just can you add it to the system

00:50:45,020 --> 00:50:51,590
please so show everybody what you're up

00:50:48,200 --> 00:50:56,840
to right so let me put the boards in

00:50:51,590 --> 00:51:01,010
here what I going to see here is the

00:50:56,840 --> 00:51:02,570
sensor hub connected to the nitrogen

00:51:01,010 --> 00:51:05,330
words that we have which is compared

00:51:02,570 --> 00:51:10,010
with the 440 pins and I'm just going to

00:51:05,330 --> 00:51:12,280
put them a line and see how I should

00:51:10,010 --> 00:51:12,280
behave

00:51:21,559 --> 00:51:28,380
right so and I gotta want to hear just

00:51:25,499 --> 00:51:30,690
to kind of demonstrate quickly so here's

00:51:28,380 --> 00:51:35,279
the censor board it got many different

00:51:30,690 --> 00:51:37,229
sensors and LEDs that can be used and we

00:51:35,279 --> 00:51:39,119
basically just simply connected over to

00:51:37,229 --> 00:51:41,099
the 40 pins header that is available on

00:51:39,119 --> 00:51:43,109
the nitrogen you could also as well for

00:51:41,099 --> 00:51:45,390
example in high key connect that is

00:51:43,109 --> 00:51:48,089
because it's also compatible with the 18

00:51:45,390 --> 00:51:49,650
vote and you can use both of these

00:51:48,089 --> 00:51:52,039
boards and all those words in here in

00:51:49,650 --> 00:51:55,009
this case we're just trying to explore

00:51:52,039 --> 00:51:56,849
those words connected to the nitrogen

00:51:55,009 --> 00:51:59,279
words that we have here so we're just

00:51:56,849 --> 00:52:01,109
going to show up and pass it over to me

00:51:59,279 --> 00:52:04,229
low again to see if the boards actually

00:52:01,109 --> 00:52:09,299
reporting data ready to bloom it they're

00:52:04,229 --> 00:52:11,779
not online yet okay so that a little bit

00:52:09,299 --> 00:52:14,549
still waiting for them to arrive so

00:52:11,779 --> 00:52:17,249
what's happening here is we're waiting

00:52:14,549 --> 00:52:19,999
for the cloud service to actually

00:52:17,249 --> 00:52:23,009
register the devices right yeah exactly

00:52:19,999 --> 00:52:26,160
when the board gets online it reports

00:52:23,009 --> 00:52:27,390
the status and they actually connected

00:52:26,160 --> 00:52:33,029
no they actually not connected over

00:52:27,390 --> 00:52:34,890
bluetooth for this point so there's that

00:52:33,029 --> 00:52:36,959
probably a lot of interpret surrounding

00:52:34,890 --> 00:52:39,329
here so but this should be connected

00:52:36,959 --> 00:52:41,249
over the to those gauges we can probably

00:52:39,329 --> 00:52:48,839
just for cycle quickly the Gators in

00:52:41,249 --> 00:52:51,420
Syria column we did too many perfect run

00:52:48,839 --> 00:52:56,279
throughs this morning it just worked

00:52:51,420 --> 00:52:59,660
yeah before alright so one of those

00:52:56,279 --> 00:52:59,660
devices are actually online now

00:53:01,790 --> 00:53:08,150
yep it did show up one in there okay

00:53:05,570 --> 00:53:10,430
here we go the other one is getting

00:53:08,150 --> 00:53:13,820
online as well so since all these mobile

00:53:10,430 --> 00:53:16,790
phones in the audience all right there

00:53:13,820 --> 00:53:18,200
we go words are showing up every all

00:53:16,790 --> 00:53:23,630
right all the five in there all right

00:53:18,200 --> 00:53:25,670
get in there so now we've got you just

00:53:23,630 --> 00:53:27,680
plugged in these boards and they just

00:53:25,670 --> 00:53:29,990
appeared and we're now getting the data

00:53:27,680 --> 00:53:32,360
into bluemix from them just simply by

00:53:29,990 --> 00:53:34,430
plugging them in but I thought you

00:53:32,360 --> 00:53:39,920
promised me that there were going to be

00:53:34,430 --> 00:53:41,990
flashing lights and excitement right so

00:53:39,920 --> 00:53:43,160
here what we have is this for the same

00:53:41,990 --> 00:53:45,290
for me that is running on those

00:53:43,160 --> 00:53:47,360
nitrogens here so they don't actually

00:53:45,290 --> 00:53:49,430
have the capability of talking and

00:53:47,360 --> 00:53:50,690
understanding and actually exploring the

00:53:49,430 --> 00:53:53,240
sensor hub in there so what are we going

00:53:50,690 --> 00:53:54,710
to do in here is basically update those

00:53:53,240 --> 00:53:57,230
boards and deliver a new software that

00:53:54,710 --> 00:53:59,840
can use the addition of nationality

00:53:57,230 --> 00:54:01,370
provided by the sensor hub and do that

00:53:59,840 --> 00:54:03,290
I'm going to pass it over to Tyler which

00:54:01,370 --> 00:54:05,690
is going to drive the update process for

00:54:03,290 --> 00:54:07,310
us and so this is complete their

00:54:05,690 --> 00:54:09,110
wireless right you know yeah you haven't

00:54:07,310 --> 00:54:10,610
got anyone so you're just going to

00:54:09,110 --> 00:54:15,820
over-the-air update them and give me

00:54:10,610 --> 00:54:19,310
sense of functional x alpha ok so Tyler

00:54:15,820 --> 00:54:20,720
let's go ok so as Ricardo mentioned we

00:54:19,310 --> 00:54:22,490
need to do a firmware over-the-air

00:54:20,720 --> 00:54:25,870
update to enable the censor board so

00:54:22,490 --> 00:54:25,870
we're going to do that now via hoc bit

00:54:27,670 --> 00:54:31,820
and we're going to select our build

00:54:30,290 --> 00:54:33,140
which is going to enable the sensor hubs

00:54:31,820 --> 00:54:35,390
and then we're going to select the

00:54:33,140 --> 00:54:36,590
nitrogens with the sensor hubs we're

00:54:35,390 --> 00:54:37,820
going to update all five of them at the

00:54:36,590 --> 00:54:41,390
same time so we're going to save that

00:54:37,820 --> 00:54:43,760
rollout once it's ready to go we will

00:54:41,390 --> 00:54:46,580
start the update the update started ok

00:54:43,760 --> 00:54:49,100
so we've now started a roll out over the

00:54:46,580 --> 00:54:50,180
cloud to a bunch of devices it's going

00:54:49,100 --> 00:54:53,540
to take a little while so I'm going to

00:54:50,180 --> 00:54:55,010
ask Ricardo while that's happening to

00:54:53,540 --> 00:54:57,070
actually talk a little bit more detail

00:54:55,010 --> 00:55:01,850
technically about what we're seeing here

00:54:57,070 --> 00:55:03,730
all right so as we're just talking auto

00:55:01,850 --> 00:55:07,130
devices are sending data to the cloud

00:55:03,730 --> 00:55:08,720
and they're connected to bluemix in this

00:55:07,130 --> 00:55:11,510
case we're not showing the live data but

00:55:08,720 --> 00:55:14,000
if you on this same setup that are able

00:55:11,510 --> 00:55:15,010
to reproduce by following that the link

00:55:14,000 --> 00:55:17,090
that George's

00:55:15,010 --> 00:55:18,950
you're going to see when you actually

00:55:17,090 --> 00:55:21,500
open the dashboard all the devices are

00:55:18,950 --> 00:55:23,270
reporting the status to to bluemix so

00:55:21,500 --> 00:55:25,520
you see high key it was a different

00:55:23,270 --> 00:55:27,740
symbol in there which is the IOT gateway

00:55:25,520 --> 00:55:29,990
and all the nitrogen and carbs in this

00:55:27,740 --> 00:55:31,580
case all kind of showing up in there as

00:55:29,990 --> 00:55:33,740
well so you can control and manage and

00:55:31,580 --> 00:55:39,350
see all the date of the devices in the

00:55:33,740 --> 00:55:41,300
dashboard and to talk a little bit more

00:55:39,350 --> 00:55:45,050
about the setup that we have as we're

00:55:41,300 --> 00:55:49,640
just saying all the connection here's as

00:55:45,050 --> 00:55:51,830
Wireless using Bluetooth over using

00:55:49,640 --> 00:55:54,520
6lowpan over Bluetooth so we have IP

00:55:51,830 --> 00:55:57,500
connectivity across all of these devices

00:55:54,520 --> 00:56:00,770
the the high key is providing the

00:55:57,500 --> 00:56:02,240
gateway capability by simply allowing

00:56:00,770 --> 00:56:05,390
those devices which are bluetooth

00:56:02,240 --> 00:56:08,150
capable to actually have an IP and talk

00:56:05,390 --> 00:56:09,410
to the cloud and one interesting piece

00:56:08,150 --> 00:56:11,390
that we have on a gateway is that

00:56:09,410 --> 00:56:14,720
bluemix doesn't yet support ipv6 we have

00:56:11,390 --> 00:56:16,220
an ipv6 based network in here and we

00:56:14,720 --> 00:56:18,980
have basically tiny proxy just to

00:56:16,220 --> 00:56:21,530
convert a front ipv6 working before so

00:56:18,980 --> 00:56:25,400
we can still be compatible when the ipv4

00:56:21,530 --> 00:56:28,610
set up and then we have once they are

00:56:25,400 --> 00:56:30,980
all connected they've managed by our in

00:56:28,610 --> 00:56:33,200
the hawk bit management server and

00:56:30,980 --> 00:56:35,750
sending all the data to the cloud and

00:56:33,200 --> 00:56:37,400
one interesting point in here is that s

00:56:35,750 --> 00:56:40,600
worth mention everything is like close

00:56:37,400 --> 00:56:43,850
to tip this attribute that we have is

00:56:40,600 --> 00:56:45,320
version one that seven RC tree the high

00:56:43,850 --> 00:56:46,730
key is running that in stretch in the

00:56:45,320 --> 00:56:49,160
fourth online colonel so everything that

00:56:46,730 --> 00:56:50,990
we have is really close to what we

00:56:49,160 --> 00:56:53,990
currently have on the upstream branches

00:56:50,990 --> 00:56:55,520
of those projects and and to talk a

00:56:53,990 --> 00:56:57,830
little bit how we actually did all this

00:56:55,520 --> 00:56:59,510
integration with all these different

00:56:57,830 --> 00:57:01,460
projects for example deserve for we have

00:56:59,510 --> 00:57:03,530
not only so everybody have our own

00:57:01,460 --> 00:57:05,750
application we also have the bootloader

00:57:03,530 --> 00:57:08,870
which is capable of doing the assistant

00:57:05,750 --> 00:57:11,090
AV partitioning and when we our

00:57:08,870 --> 00:57:12,830
application fetches the new application

00:57:11,090 --> 00:57:14,540
is write it up on the second partition

00:57:12,830 --> 00:57:16,370
rebooting and doing all the update and

00:57:14,540 --> 00:57:17,750
so on so there are several products that

00:57:16,370 --> 00:57:20,600
are involved in here so what I'm going

00:57:17,750 --> 00:57:22,910
to basically I ask titled to explain to

00:57:20,600 --> 00:57:24,620
us is how we did manage the development

00:57:22,910 --> 00:57:24,920
of all those projects to actually have

00:57:24,620 --> 00:57:27,320
this

00:57:24,920 --> 00:57:29,660
here thanks Ricardo so as George

00:57:27,320 --> 00:57:32,270
mentioned we're basing this application

00:57:29,660 --> 00:57:34,610
on Zephyr one dot seven RC three so it's

00:57:32,270 --> 00:57:36,650
very very close to upstream and to do

00:57:34,610 --> 00:57:39,170
that we need to leverage CI and

00:57:36,650 --> 00:57:40,310
automation as much as possible so let's

00:57:39,170 --> 00:57:41,900
talk about the sources that we have to

00:57:40,310 --> 00:57:43,730
track we have to track the Zephyr tree

00:57:41,900 --> 00:57:45,920
itself because this is an auto tree

00:57:43,730 --> 00:57:47,270
application and there's the master

00:57:45,920 --> 00:57:48,800
branch which is upstream we have two

00:57:47,270 --> 00:57:50,810
branches that we track with our patches

00:57:48,800 --> 00:57:52,940
that go upstream so we need to test

00:57:50,810 --> 00:57:54,740
those as well and as Ricardo mentioned

00:57:52,940 --> 00:57:56,510
we have MCU loop project which

00:57:54,740 --> 00:57:58,130
cryptographically validates the images

00:57:56,510 --> 00:57:59,630
that we send over the air so we need to

00:57:58,130 --> 00:58:01,790
be able to track upstream and our own

00:57:59,630 --> 00:58:04,670
branches with our own patches and then

00:58:01,790 --> 00:58:06,740
of course the application itself so to

00:58:04,670 --> 00:58:10,010
do that it generates quite a large

00:58:06,740 --> 00:58:11,390
matrix of things to test and we do

00:58:10,010 --> 00:58:14,000
builds on every single one of those

00:58:11,390 --> 00:58:14,960
permutations we test on real devices on

00:58:14,000 --> 00:58:17,240
every single one of those permutations

00:58:14,960 --> 00:58:19,310
and we do and in rollouts as you're

00:58:17,240 --> 00:58:22,010
seeing here on every single one of those

00:58:19,310 --> 00:58:23,900
permutations all of our development is

00:58:22,010 --> 00:58:25,730
done in github so we've integrated all

00:58:23,900 --> 00:58:27,830
of our CI services to work with the

00:58:25,730 --> 00:58:30,170
developer workflow and github so we we

00:58:27,830 --> 00:58:31,430
test pull requests as they come in so we

00:58:30,170 --> 00:58:33,530
can't check in code that doesn't pass

00:58:31,430 --> 00:58:35,690
check patch a build test actually

00:58:33,530 --> 00:58:37,010
deploys through device so we have that

00:58:35,690 --> 00:58:39,200
capability and once everything's merged

00:58:37,010 --> 00:58:41,060
we actually run sanity check across all

00:58:39,200 --> 00:58:43,640
the upstream trees and this enables us

00:58:41,060 --> 00:58:45,170
to be able to know if something breaks

00:58:43,640 --> 00:58:47,210
upstream or we break something this

00:58:45,170 --> 00:58:49,270
upstream so that we're very mindful of

00:58:47,210 --> 00:58:52,310
that and we can fix the problem quickly

00:58:49,270 --> 00:58:53,990
so this is an example of one of our

00:58:52,310 --> 00:58:55,250
build matrixes so this is just for the

00:58:53,990 --> 00:58:57,410
photo application so we're tracking

00:58:55,250 --> 00:58:58,790
three branches here and what this shows

00:58:57,410 --> 00:59:01,010
us this is actually embedded in our read

00:58:58,790 --> 00:59:02,390
me get a markdown on our project that

00:59:01,010 --> 00:59:04,940
you can find on the documentation

00:59:02,390 --> 00:59:06,590
website that you know a carbon isn't is

00:59:04,940 --> 00:59:08,000
it building upstream so we know that

00:59:06,590 --> 00:59:09,890
there's a problem and we know that it's

00:59:08,000 --> 00:59:14,000
early and we can get a we can get a fix

00:59:09,890 --> 00:59:16,040
in for it so in addition to this matrix

00:59:14,000 --> 00:59:17,720
we have ones for MCU boot for the Zephyr

00:59:16,040 --> 00:59:18,980
tree itself so that we can track all of

00:59:17,720 --> 00:59:20,120
those different permutations and make

00:59:18,980 --> 00:59:22,190
sure the platform support not only

00:59:20,120 --> 00:59:23,870
functions but our application still

00:59:22,190 --> 00:59:26,600
functions and as George mentioned

00:59:23,870 --> 00:59:29,090
Zephyrs a very very fast-moving project

00:59:26,600 --> 00:59:31,250
so it's very very important to have this

00:59:29,090 --> 00:59:32,720
automation so that you can continue to

00:59:31,250 --> 00:59:35,640
rebase on the latest master and make

00:59:32,720 --> 00:59:39,730
sure that there's no regressions at all

00:59:35,640 --> 00:59:42,160
okay so what's going on with the lights

00:59:39,730 --> 00:59:45,670
we seem to have a number of devices

00:59:42,160 --> 00:59:49,090
updated alright so as you can see of

00:59:45,670 --> 00:59:50,530
course we have the spinning wheel the

00:59:49,090 --> 00:59:55,150
additional ideas are being used by the

00:59:50,530 --> 00:59:56,830
application and and there one

00:59:55,150 --> 00:59:59,920
interesting thing that we can show it

00:59:56,830 --> 01:00:01,180
now is that not only the LEDs that are

00:59:59,920 --> 01:00:03,730
spinning in here but actually getting

01:00:01,180 --> 01:00:05,980
data out of those boards and so they

01:00:03,730 --> 01:00:07,630
should be now so let's new data to the

01:00:05,980 --> 01:00:09,750
dashboard unfortunately we're running

01:00:07,630 --> 01:00:12,310
out of time so we're going to have to

01:00:09,750 --> 01:00:13,900
probably not wait for that last device

01:00:12,310 --> 01:00:16,090
but let's see what's actually happening

01:00:13,900 --> 01:00:20,230
here so we've got a number of new

01:00:16,090 --> 01:00:22,150
devices come online including the new

01:00:20,230 --> 01:00:24,640
ones which have both temperature sensors

01:00:22,150 --> 01:00:26,950
running right so we've successfully

01:00:24,640 --> 01:00:29,760
over-the-air updated and they're

01:00:26,950 --> 01:00:32,350
starting to transmit data in real time

01:00:29,760 --> 01:00:35,440
but this is a temperature sensor right

01:00:32,350 --> 01:00:37,210
yeah so let's um just make sure that

01:00:35,440 --> 01:00:39,340
we're actually seeing this in real time

01:00:37,210 --> 01:00:44,020
I don't suppose anybody in the audience

01:00:39,340 --> 01:00:47,200
has a hair dryer Marty another one of

01:00:44,020 --> 01:00:57,630
the team come up and just exercise our

01:00:47,200 --> 01:00:57,630
boards all right

01:00:57,780 --> 01:01:00,780
haha

01:01:02,069 --> 01:01:05,220
is that

01:01:10,380 --> 01:01:15,380
maybe that one man reported yet oh

01:01:12,750 --> 01:01:19,000
there's another one coming up

01:01:15,380 --> 01:01:19,000
there we go oh there it goes

01:01:28,920 --> 01:01:33,480
thanks very much guys well done we'll

01:01:31,470 --> 01:01:34,950
just leave that running and wait for the

01:01:33,480 --> 01:01:37,880
other ones to update thanks very much

01:01:34,950 --> 01:01:37,880
congratulation

01:01:42,030 --> 01:01:49,750
so what we've just done is we've taken

01:01:45,670 --> 01:01:52,000
an upstream release candidate that was

01:01:49,750 --> 01:01:54,430
only reached a couple of days ago we're

01:01:52,000 --> 01:01:57,820
running it on multiple different vendor

01:01:54,430 --> 01:02:00,190
MCU boards we've got a unified secure

01:01:57,820 --> 01:02:02,440
boot and photo update mechanism and

01:02:00,190 --> 01:02:05,380
we're doing real-time IOT device data

01:02:02,440 --> 01:02:08,349
transfers on all of these devices to the

01:02:05,380 --> 01:02:10,660
commercial IBM bluemix cloud and we're

01:02:08,349 --> 01:02:12,790
only just beginning right this is a

01:02:10,660 --> 01:02:15,400
preview when not yet at one point oh

01:02:12,790 --> 01:02:17,230
this is something that we're going to be

01:02:15,400 --> 01:02:19,599
continuing to work on over the coming

01:02:17,230 --> 01:02:21,339
months and even this week we're going to

01:02:19,599 --> 01:02:24,040
expect to make a lot of progress and

01:02:21,339 --> 01:02:25,810
come back on Friday to demo Friday and

01:02:24,040 --> 01:02:27,790
this team are going to have a lot more

01:02:25,810 --> 01:02:30,609
devices and a lot more boards and a lot

01:02:27,790 --> 01:02:34,930
more scale so looking forward to seeing

01:02:30,609 --> 01:02:36,670
that what's next here is that this

01:02:34,930 --> 01:02:40,359
preview code release that I talked about

01:02:36,670 --> 01:02:42,609
earlier is available now but we're also

01:02:40,359 --> 01:02:45,820
working on actually making this product

01:02:42,609 --> 01:02:48,160
ready a lot more CI a lot more testing a

01:02:45,820 --> 01:02:51,160
lot more scale but we want to make it

01:02:48,160 --> 01:02:53,170
suitable for a number of products that

01:02:51,160 --> 01:02:55,569
have constrained functionality as

01:02:53,170 --> 01:02:58,420
quickly as possible so we're working on

01:02:55,569 --> 01:03:00,460
both larger footprint that you that you

01:02:58,420 --> 01:03:03,010
saw in the original technology preview

01:03:00,460 --> 01:03:05,710
with a full tcp stack and HTTP

01:03:03,010 --> 01:03:08,109
communications to the cloud but also to

01:03:05,710 --> 01:03:11,470
lower power smaller footprint devices

01:03:08,109 --> 01:03:14,680
and working with early users on a

01:03:11,470 --> 01:03:17,920
constrained stack using UDP only co-op

01:03:14,680 --> 01:03:20,829
and LW m2m to talk to clouds like em bed

01:03:17,920 --> 01:03:23,230
cloud or proprietary clouds or IBM

01:03:20,829 --> 01:03:26,410
bluemix and so on and that will have

01:03:23,230 --> 01:03:28,480
bluetooth Wi-Fi and lower support and

01:03:26,410 --> 01:03:30,040
many more devices and Bendel's we're

01:03:28,480 --> 01:03:32,619
seeing a lot of interest in what we're

01:03:30,040 --> 01:03:34,869
doing in light and in this project and

01:03:32,619 --> 01:03:38,470
it's important that that we make this

01:03:34,869 --> 01:03:41,500
available to all cloud providers so use

01:03:38,470 --> 01:03:44,250
a common cloud platform api so that it's

01:03:41,500 --> 01:03:48,310
easy to add to your own proprietary or

01:03:44,250 --> 01:03:51,010
commercial cloud of choice so i've

01:03:48,310 --> 01:03:53,470
covered an awful lot today I've only run

01:03:51,010 --> 01:03:55,240
over slightly i'm going to ask Jo Bates

01:03:53,470 --> 01:03:56,560
to come and talk a little bit more about

01:03:55,240 --> 01:03:58,390
week but thank you very much for

01:03:56,560 --> 01:03:59,900
listening and look forward looking

01:03:58,390 --> 01:04:08,320
forward to the week thank you

01:03:59,900 --> 01:04:08,320
[Applause]

01:04:24,800 --> 01:04:26,860

YouTube URL: https://www.youtube.com/watch?v=BUikAFy21ZI


