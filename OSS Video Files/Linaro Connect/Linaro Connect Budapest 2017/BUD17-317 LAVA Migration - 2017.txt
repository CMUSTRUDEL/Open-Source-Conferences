Title: BUD17-317 LAVA Migration - 2017
Publication date: 2017-03-11
Playlist: Linaro Connect Budapest 2017
Description: 
	"Session ID: BUD17-317
Session Name: LAVA Migration - 2017 - BUD17-317
Speaker: Neil Williams
Track: LAVA


★ Session Summary ★
The 2016.12 release includes sufficient support that all teams should now be able to port all their test jobs to LAVA V2. Some changes to the test definitions may be useful to make better use of V2 and to increase the portability of the test definitions in line with QA recommendations.
 
This presentation will showcase the current examples of how to migrate V1 MultiNode Android test jobs to V2 LXC and how to use V2 Secondary Media to support deployments on Juno. Details will also be included about the LAVA team can help test writers migrate their test jobs as the number of V2 devices increases and the number of V1 devices decreases. Details of how the Cambridge lab will migrate will also be covered as some device-types cannot support V1 and V2 simultaneously. The timetable of how V1 support will be removed during 2017 will be outlined.
---------------------------------------------------
★ Resources ★
Event Page: http://connect.linaro.org/resource/bud17/bud17-317/
Presentation: https://www.slideshare.net/linaroorg/bud17317-lava-migration-2017
Video: https://youtu.be/ok_2G5Ite2w
 ---------------------------------------------------

★ Event Details ★
Linaro Connect Budapest 2017 (BUD17)
6-10 March 2017
Corinthia Hotel, Budapest,
Erzsébet krt. 43-49,
1073 Hungary

---------------------------------------------------
Keyword: LAVA, migration
http://www.linaro.org
http://connect.linaro.org
---------------------------------------------------
Follow us on Social Media
https://www.facebook.com/LinaroOrg
https://twitter.com/linaroorg
https://www.youtube.com/user/linaroorg?sub_confirmation=1
https://www.linkedin.com/company/1026961"
Captions: 
	00:00:00,130 --> 00:00:04,110
[Music]

00:00:09,500 --> 00:00:15,030
so I'm going to cover how we actually

00:00:11,940 --> 00:00:18,150
are going to be able to help you migrate

00:00:15,030 --> 00:00:19,770
to test cells to be to some of the steps

00:00:18,150 --> 00:00:21,720
we've made some of the changes that can

00:00:19,770 --> 00:00:24,240
actually help with what you're actually

00:00:21,720 --> 00:00:27,840
doing but also some of the steps need to

00:00:24,240 --> 00:00:30,539
be taken off the admin level so brief

00:00:27,840 --> 00:00:32,189
yourself with the admin stuff and then

00:00:30,539 --> 00:00:35,550
hopefully we'll spend more time as she

00:00:32,189 --> 00:00:37,290
looking at what the test job writers

00:00:35,550 --> 00:00:40,680
actually need to do and we'll get into

00:00:37,290 --> 00:00:42,690
some details and some examples but it

00:00:40,680 --> 00:00:51,899
won't mainly be discussion at that point

00:00:42,690 --> 00:00:53,370
so v2 yes it is the end of love v1 all

00:00:51,899 --> 00:00:55,170
the magic all the problems that are

00:00:53,370 --> 00:00:59,280
actually part of that they aren't going

00:00:55,170 --> 00:01:01,050
away forever but this is what v2 is

00:00:59,280 --> 00:01:02,820
actually delivering the test Reuters in

00:01:01,050 --> 00:01:06,390
particular it gives you a lot more

00:01:02,820 --> 00:01:08,070
control the magic has gone away if

00:01:06,390 --> 00:01:09,630
things need to be done they didn't they

00:01:08,070 --> 00:01:11,159
done me explicitly the other done in

00:01:09,630 --> 00:01:13,830
front of you or you need to them before

00:01:11,159 --> 00:01:15,780
you submit the job but lava tells you

00:01:13,830 --> 00:01:18,360
what it's doing it gives you much better

00:01:15,780 --> 00:01:22,430
information and errors about when things

00:01:18,360 --> 00:01:25,470
actually go wrong in v2 the lack of

00:01:22,430 --> 00:01:27,299
magic the making it more explicit also

00:01:25,470 --> 00:01:30,030
means you get faster throughput to the

00:01:27,299 --> 00:01:32,220
job you don't get the surprises don't

00:01:30,030 --> 00:01:34,650
get things going on it equally get

00:01:32,220 --> 00:01:38,759
better control over time outs when you

00:01:34,650 --> 00:01:42,780
want to you tryna be and you get a

00:01:38,759 --> 00:01:45,960
smoother flow overall now one of the

00:01:42,780 --> 00:01:48,720
biggest problems with v1 was that many

00:01:45,960 --> 00:01:51,630
tests Reuters had to rely on using motor

00:01:48,720 --> 00:01:54,720
know to have a virtual machine that did

00:01:51,630 --> 00:01:56,630
half of the job that's going away we've

00:01:54,720 --> 00:01:59,460
got support for transplant containers

00:01:56,630 --> 00:02:02,790
it's been working solely for quad

00:01:59,460 --> 00:02:06,149
sometimes nice and reliable so you can

00:02:02,790 --> 00:02:08,670
install stuff as if he was as if you are

00:02:06,149 --> 00:02:11,220
installing on the dispatcher but they're

00:02:08,670 --> 00:02:11,960
not under those packages will go away at

00:02:11,220 --> 00:02:14,830
the end of the job

00:02:11,960 --> 00:02:18,290
there's a transparent container the

00:02:14,830 --> 00:02:21,950
operations are sent from the dispatcher

00:02:18,290 --> 00:02:25,720
crudely container and act on that that

00:02:21,950 --> 00:02:29,990
covered up in more detail later on and

00:02:25,720 --> 00:02:31,970
as new devices are integrated into

00:02:29,990 --> 00:02:33,770
various labs they are going to be

00:02:31,970 --> 00:02:36,320
increasingly well they are now going to

00:02:33,770 --> 00:02:40,130
be v2 only are we going to start to see

00:02:36,320 --> 00:02:42,230
a lot more existing devices becoming v2

00:02:40,130 --> 00:02:44,150
only and that's going to be the way that

00:02:42,230 --> 00:02:47,090
the migration is going to be driven to

00:02:44,150 --> 00:02:49,430
make sure so you will find that if you

00:02:47,090 --> 00:02:51,170
try to stay on b1 you'll get to a point

00:02:49,430 --> 00:02:54,730
where you just cannot submit jobs

00:02:51,170 --> 00:02:57,260
anymore you have to have the v2 sport

00:02:54,730 --> 00:02:59,200
there's a lot of new concepts a lot new

00:02:57,260 --> 00:03:01,670
methods in v2 it is a completely

00:02:59,200 --> 00:03:03,110
rewritten code base for the occurrence

00:03:01,670 --> 00:03:05,000
of the dispatcher and there's quite a

00:03:03,110 --> 00:03:06,440
few changes on the server that we've

00:03:05,000 --> 00:03:09,020
actually made as well as far as taking

00:03:06,440 --> 00:03:10,250
us along together and already but we

00:03:09,020 --> 00:03:12,680
have made a big effort with the

00:03:10,250 --> 00:03:14,510
documentation there's always more we can

00:03:12,680 --> 00:03:20,450
do the docs but have actually made a big

00:03:14,510 --> 00:03:22,160
change on that so there's a couple of

00:03:20,450 --> 00:03:24,130
admin preparations obviously the health

00:03:22,160 --> 00:03:27,770
checks need to move over to thee two

00:03:24,130 --> 00:03:30,320
will be monitoring v1 test jobs in case

00:03:27,770 --> 00:03:32,270
there's actually problems that the v1

00:03:30,320 --> 00:03:34,850
health check was are shown up that is

00:03:32,270 --> 00:03:37,660
using difficult part there'll be a bunch

00:03:34,850 --> 00:03:40,520
of devices they get retired primarily

00:03:37,660 --> 00:03:43,520
devices like the kvm so you can be using

00:03:40,520 --> 00:03:46,760
to get a round problems of be one with

00:03:43,520 --> 00:03:49,160
mods note so things like why you need to

00:03:46,760 --> 00:03:50,600
put android tools or things into a vm it

00:03:49,160 --> 00:03:55,220
doesn't happen anymore so those devices

00:03:50,600 --> 00:03:58,400
will go away and again there will be a

00:03:55,220 --> 00:04:00,280
restriction on submission to v1 devices

00:03:58,400 --> 00:04:03,230
that restriction will eventually become

00:04:00,280 --> 00:04:07,160
absolute and there will be no further v1

00:04:03,230 --> 00:04:08,990
submission so this is not just affecting

00:04:07,160 --> 00:04:11,690
the Hoffman labs not just affecting

00:04:08,990 --> 00:04:13,160
production we've already put steps in

00:04:11,690 --> 00:04:14,900
place for our own instances like

00:04:13,160 --> 00:04:17,330
playground and staging but it's going to

00:04:14,900 --> 00:04:18,859
affect the power emergent instance is

00:04:17,330 --> 00:04:21,530
going to affect torture instance of

00:04:18,859 --> 00:04:23,930
Congress LNG are already ahead on this

00:04:21,530 --> 00:04:27,750
within their nearly all be too

00:04:23,930 --> 00:04:29,340
for their stuff already so you can ask

00:04:27,750 --> 00:04:32,910
LNG for help some deserts or they may

00:04:29,340 --> 00:04:34,680
actually give them but everybody here

00:04:32,910 --> 00:04:36,810
should be on at least the lava announced

00:04:34,680 --> 00:04:38,130
Magnus you should also be on lava users

00:04:36,810 --> 00:04:40,710
through in the room you should be on

00:04:38,130 --> 00:04:44,130
both of those men list and there you

00:04:40,710 --> 00:04:48,140
will get a lot more information on that

00:04:44,130 --> 00:04:48,140
how are we doing the actual migration

00:04:50,960 --> 00:04:56,870
needed there was a preview on this way

00:04:55,440 --> 00:05:00,720
[Music]

00:04:56,870 --> 00:05:03,210
so once you've got to the point where we

00:05:00,720 --> 00:05:06,000
are going to turn off your submissions

00:05:03,210 --> 00:05:08,700
the way it works is this we will have a

00:05:06,000 --> 00:05:11,220
production release again announced on

00:05:08,700 --> 00:05:14,490
lava announced that says this is the one

00:05:11,220 --> 00:05:17,550
that turns off v1 submissions that point

00:05:14,490 --> 00:05:19,740
lava tool the submit do I none of those

00:05:17,550 --> 00:05:22,290
will accept your be one JSON jobs in

00:05:19,740 --> 00:05:24,540
order to spare you get a rejection you

00:05:22,290 --> 00:05:27,060
don't get to submit the job at all any

00:05:24,540 --> 00:05:33,030
b1 jobs during the Q will kind of run at

00:05:27,060 --> 00:05:35,070
this point but the effect of that is

00:05:33,030 --> 00:05:37,320
that your dashboard your filters the

00:05:35,070 --> 00:05:41,370
image reports basically and once those

00:05:37,320 --> 00:05:45,930
b1 jobs have completed however babbles

00:05:41,370 --> 00:05:50,130
or well then you're you're not going to

00:05:45,930 --> 00:05:52,950
be able to modify your bundles your

00:05:50,130 --> 00:05:55,020
bundle streams your image reports in

00:05:52,950 --> 00:05:57,000
this for supply no more filters with

00:05:55,020 --> 00:05:59,310
that release the very case or whatever's

00:05:57,000 --> 00:06:04,590
left to run it'll populate and data and

00:05:59,310 --> 00:06:07,530
that's what you'll have now this

00:06:04,590 --> 00:06:09,330
migration is massively complex there's

00:06:07,530 --> 00:06:11,250
going to be a lot of work for the admin

00:06:09,330 --> 00:06:15,180
side as well and there are going to be

00:06:11,250 --> 00:06:18,210
an admin tasks that are independent of

00:06:15,180 --> 00:06:20,070
the release process so we've already

00:06:18,210 --> 00:06:21,870
prepared for this we know that at least

00:06:20,070 --> 00:06:25,710
one out one of these operations is

00:06:21,870 --> 00:06:28,290
mandatory and where we have written an

00:06:25,710 --> 00:06:30,630
example always tested the example on

00:06:28,290 --> 00:06:32,760
that production clone so we know that at

00:06:30,630 --> 00:06:34,500
least one of these is going to happen so

00:06:32,760 --> 00:06:35,910
you must be listening to the lava

00:06:34,500 --> 00:06:37,430
announced if you're running an instance

00:06:35,910 --> 00:06:40,490
of any kind

00:06:37,430 --> 00:06:43,740
as to exactly when the school work and

00:06:40,490 --> 00:06:46,050
we will do our best in the the

00:06:43,740 --> 00:06:49,650
subsequent release to make sure that we

00:06:46,050 --> 00:06:51,990
check that that particular admin action

00:06:49,650 --> 00:06:55,260
has been completed before we continue

00:06:51,990 --> 00:06:58,710
with the installation but if you don't

00:06:55,260 --> 00:07:03,540
do it it does make it difficult if we

00:06:58,710 --> 00:07:05,850
have to force the installation to halt

00:07:03,540 --> 00:07:08,100
halfway through it's much easier much

00:07:05,850 --> 00:07:10,770
more straightforward if you do the check

00:07:08,100 --> 00:07:14,040
first and then do the install all be

00:07:10,770 --> 00:07:18,720
covered in the announcement list so i

00:07:14,040 --> 00:07:20,700
just wanted to point out that while in

00:07:18,720 --> 00:07:22,800
all the instances that we're running in

00:07:20,700 --> 00:07:25,260
the cambridge lab we will delete all the

00:07:22,800 --> 00:07:29,340
data and with the database will be

00:07:25,260 --> 00:07:32,610
purged of v1 we will have a clone of

00:07:29,340 --> 00:07:35,010
that database available for anybody who

00:07:32,610 --> 00:07:37,620
for historical reasons needs to go and

00:07:35,010 --> 00:07:41,100
look at later going back however long

00:07:37,620 --> 00:07:45,300
yes so it won't it won't be available in

00:07:41,100 --> 00:07:48,180
production instance now so individual

00:07:45,300 --> 00:07:52,080
labs can can decide to have their own

00:07:48,180 --> 00:07:55,170
read-only archives of basically it is a

00:07:52,080 --> 00:07:59,220
snapshot of that instance at the moment

00:07:55,170 --> 00:08:02,880
of the releases apply that turned out v1

00:07:59,220 --> 00:08:04,890
submissions now what that means is that

00:08:02,880 --> 00:08:06,690
that release will get no further code

00:08:04,890 --> 00:08:09,270
updates so it'll need to be read-only

00:08:06,690 --> 00:08:12,330
it'll need to be locked down you may all

00:08:09,270 --> 00:08:14,460
find that you certainly won't be able to

00:08:12,330 --> 00:08:16,350
make modifications to it in any way

00:08:14,460 --> 00:08:22,620
you'll be a case of the data is there

00:08:16,350 --> 00:08:25,260
you can access it if we read only then

00:08:22,620 --> 00:08:28,560
after that we're after we've given time

00:08:25,260 --> 00:08:30,690
for the admin actions to complete we

00:08:28,560 --> 00:08:32,880
will do one big release and again we've

00:08:30,690 --> 00:08:35,280
been massively announced only a big big

00:08:32,880 --> 00:08:38,460
one this is the one that's going to

00:08:35,280 --> 00:08:41,640
actually delete your data and we do mean

00:08:38,460 --> 00:08:45,360
delete we do mean actually permanent

00:08:41,640 --> 00:08:48,570
erasure of your v1 test data it is going

00:08:45,360 --> 00:08:50,499
away including over log files we're not

00:08:48,570 --> 00:08:53,239
sure love personal

00:08:50,499 --> 00:08:56,899
production yes individual individual

00:08:53,239 --> 00:09:00,110
admins are welcome to delete log files

00:08:56,899 --> 00:09:01,910
for known test jobs but we're not

00:09:00,110 --> 00:09:06,920
necessarily going to drive drive that

00:09:01,910 --> 00:09:10,160
for all instances but yes certainly for

00:09:06,920 --> 00:09:12,769
at the code level everything you access

00:09:10,160 --> 00:09:15,799
under the dashboard menu of any instance

00:09:12,769 --> 00:09:18,619
will not exist it's not something that

00:09:15,799 --> 00:09:20,509
the admins can say all can I can give

00:09:18,619 --> 00:09:23,299
you access to it and stops in themselves

00:09:20,509 --> 00:09:27,529
that can be downloaded or no matter how

00:09:23,299 --> 00:09:30,049
much you plead it is gone and it

00:09:27,529 --> 00:09:32,839
essential we do this because there are

00:09:30,049 --> 00:09:36,259
some large elements of the v2 design

00:09:32,839 --> 00:09:39,889
that are completely blocked by the

00:09:36,259 --> 00:09:41,449
presence of these v1 code objects and if

00:09:39,889 --> 00:09:42,889
you delete the code you have to delete

00:09:41,449 --> 00:09:46,489
the database of this but are tied

00:09:42,889 --> 00:09:50,029
directly to that code so it includes all

00:09:46,489 --> 00:09:53,779
your yo-yo we literally granny

00:09:50,029 --> 00:09:59,029
supercharged number and no not

00:09:53,779 --> 00:10:00,589
necessarily we did and we discussed

00:09:59,029 --> 00:10:03,519
whether we should reset and start at one

00:10:00,589 --> 00:10:06,739
again and the answer is probably no

00:10:03,519 --> 00:10:08,600
purely because there's a level of

00:10:06,739 --> 00:10:13,689
confusion yeah bout keep your job

00:10:08,600 --> 00:10:16,399
numbers and that sort of thing good but

00:10:13,689 --> 00:10:17,779
we saw went round and round on this

00:10:16,399 --> 00:10:20,449
whether i should we shouldn't and we've

00:10:17,779 --> 00:10:22,399
also been said thou will carry on as we

00:10:20,449 --> 00:10:24,649
are starting at one of the half-million

00:10:22,399 --> 00:10:28,610
because then you've got the archive for

00:10:24,649 --> 00:10:30,949
read-only stuff so yes all your results

00:10:28,610 --> 00:10:33,709
all your attachments audio metadata

00:10:30,949 --> 00:10:36,019
they're going away most of the v1 data

00:10:33,709 --> 00:10:37,970
is actually the test case objects

00:10:36,019 --> 00:10:39,709
because you generate dozens or some

00:10:37,970 --> 00:10:43,790
purses sometimes hundreds and thousands

00:10:39,709 --> 00:10:48,529
of those protest job so we are making

00:10:43,790 --> 00:10:52,579
sure that we can erase that efficiently

00:10:48,529 --> 00:10:54,199
and that means a quite a harsh just drop

00:10:52,579 --> 00:10:55,999
the table we're not going to do anything

00:10:54,199 --> 00:10:58,730
clever and we're trying to keep your

00:10:55,999 --> 00:11:00,860
data or not to keep someone else's no no

00:10:58,730 --> 00:11:03,130
that will take too long on normal

00:11:00,860 --> 00:11:07,170
instances that could take hours

00:11:03,130 --> 00:11:14,160
and this is not just not going to work

00:11:07,170 --> 00:11:17,860
so when so by next connect is I think

00:11:14,160 --> 00:11:20,350
and certainly when you you will need to

00:11:17,860 --> 00:11:26,500
have your test jobs reliable in v2

00:11:20,350 --> 00:11:29,350
before next connect I should just

00:11:26,500 --> 00:11:31,810
clarify we have we've had a long-held

00:11:29,350 --> 00:11:35,470
target yeah at the end of this year yeah

00:11:31,810 --> 00:11:37,960
is V ones gone yet so let's connect is

00:11:35,470 --> 00:11:41,470
September there's two elements to this

00:11:37,960 --> 00:11:43,630
timeline the first it there the bit the

00:11:41,470 --> 00:11:46,030
test right is need to care about is the

00:11:43,630 --> 00:11:48,430
first time line of when v1 submissions

00:11:46,030 --> 00:11:50,110
are turned off that's the one that

00:11:48,430 --> 00:11:53,350
matters the test Reuters because that

00:11:50,110 --> 00:11:55,060
means that unless you have V 2 20 jobs

00:11:53,350 --> 00:11:57,700
at that point you're not using lava

00:11:55,060 --> 00:12:00,400
suddenly all right so you've got to have

00:11:57,700 --> 00:12:03,370
B to test jobs before we make that

00:12:00,400 --> 00:12:05,500
announcement about when we're going to

00:12:03,370 --> 00:12:07,630
turn off submissions that one certainly

00:12:05,500 --> 00:12:13,450
is going to be before connect yeah

00:12:07,630 --> 00:12:18,910
before next connect as of the 2017 for

00:12:13,450 --> 00:12:22,030
release yes Judah with you know with

00:12:18,910 --> 00:12:25,150
firmware replacement mustang efi yes

00:12:22,030 --> 00:12:27,370
they are do you know who do you know

00:12:25,150 --> 00:12:29,680
with firmware updates already merged in

00:12:27,370 --> 00:12:32,380
the master mustang efi is merging

00:12:29,680 --> 00:12:36,940
probably this week and then they be

00:12:32,380 --> 00:12:39,250
mustang to convert over gradually to efi

00:12:36,940 --> 00:12:42,670
after that point the best thing efi one

00:12:39,250 --> 00:12:45,730
is it incidentally is a flag day

00:12:42,670 --> 00:12:47,890
operations the case of yesterday they

00:12:45,730 --> 00:12:51,940
were you boot tomorrow they were all the

00:12:47,890 --> 00:12:53,800
efi there was no way back so that will

00:12:51,940 --> 00:12:55,330
be a case of again listening to the

00:12:53,800 --> 00:13:00,760
announcements talking to the lab team

00:12:55,330 --> 00:13:03,730
and it'll just be a case of the Mustangs

00:13:00,760 --> 00:13:07,750
will become v2 only because v1 can't

00:13:03,730 --> 00:13:09,670
cope with the FI on mustang and your be

00:13:07,750 --> 00:13:12,850
two jobs will need to change over to the

00:13:09,670 --> 00:13:14,620
efi at the same time that's just for

00:13:12,850 --> 00:13:16,690
mustang did you guys never come to this

00:13:14,620 --> 00:13:21,190
hitting up completely

00:13:16,690 --> 00:13:22,960
oral production instance notice I'm feel

00:13:21,190 --> 00:13:29,790
super uncomfortable with this current

00:13:22,960 --> 00:13:33,100
plan the answer is yes we did the cost

00:13:29,790 --> 00:13:40,930
rather high in staffing as well as

00:13:33,100 --> 00:13:44,230
malaria so the initial plan is that we

00:13:40,930 --> 00:13:49,450
will run with initial initially we will

00:13:44,230 --> 00:13:52,060
run parallel v1 v2 in the mouth yeah

00:13:49,450 --> 00:13:56,500
until everybody is submitting v2 and

00:13:52,060 --> 00:13:59,620
that we've verified that the v2 data is

00:13:56,500 --> 00:14:02,680
actually giving the results of the value

00:13:59,620 --> 00:14:05,470
that it needs to that doesn t 1 and what

00:14:02,680 --> 00:14:07,690
what we can do is in situations like the

00:14:05,470 --> 00:14:10,540
Mustang where there is no way of doing

00:14:07,690 --> 00:14:16,570
v1 and v2 on the same device we can use

00:14:10,540 --> 00:14:24,210
staging we can also we could initially

00:14:16,570 --> 00:14:24,210
have two mustangs but yeah v2 efi yep

00:14:29,650 --> 00:14:34,040
but that's why that's why we have

00:14:31,820 --> 00:14:35,540
playground I'm staging is to make sure

00:14:34,040 --> 00:14:39,020
that we can test these things ahead of

00:14:35,540 --> 00:14:42,560
time and also that's why we're offering

00:14:39,020 --> 00:14:46,760
staging as a testbed for people who are

00:14:42,560 --> 00:14:48,890
writing v2 test definitions because I've

00:14:46,760 --> 00:14:50,600
cover late in there in the flight that

00:14:48,890 --> 00:14:52,880
I've changed you need not just to your

00:14:50,600 --> 00:14:55,370
but I'll see you're changing the actual

00:14:52,880 --> 00:14:56,900
job submission massively but you also

00:14:55,370 --> 00:15:01,940
need to make changes to your test

00:14:56,900 --> 00:15:04,100
definition files as well a lot of times

00:15:01,940 --> 00:15:09,890
have exactly the same concerns you do

00:15:04,100 --> 00:15:12,350
and I will trot own making sure not

00:15:09,890 --> 00:15:17,660
trying I'm making sure that we mitigate

00:15:12,350 --> 00:15:20,330
yep for everything so my concern voiced

00:15:17,660 --> 00:15:24,050
this before so it's not new no emotion

00:15:20,330 --> 00:15:29,630
is this we suddenly switch over on

00:15:24,050 --> 00:15:31,790
production and there's a major oh we got

00:15:29,630 --> 00:15:35,810
that yep and that's why wicked with

00:15:31,790 --> 00:15:38,150
doing a lot of staging to begin with we

00:15:35,810 --> 00:15:41,900
have a migration plan which where we run

00:15:38,150 --> 00:15:44,930
v1 v2 wherever possible side by side so

00:15:41,900 --> 00:15:47,240
that we will have CI submissions yeah

00:15:44,930 --> 00:15:49,400
which are submitting the same job but

00:15:47,240 --> 00:15:51,380
one of them is the 11 one of them is v2

00:15:49,400 --> 00:15:53,990
or we can verify that everything is

00:15:51,380 --> 00:15:55,850
running according to the way it should

00:15:53,990 --> 00:16:00,800
and the data we're getting out is useful

00:15:55,850 --> 00:16:04,610
in v2 and we run that for a minimum of a

00:16:00,800 --> 00:16:07,100
month yep so I think I stress that as a

00:16:04,610 --> 00:16:09,650
minimum because we don't know what we'll

00:16:07,100 --> 00:16:12,650
find out during that month yeah and as

00:16:09,650 --> 00:16:15,170
one the slide updates as it is on the

00:16:12,650 --> 00:16:17,780
slide there we also have agreed at the

00:16:15,170 --> 00:16:20,510
previous connect in Vegas the teams will

00:16:17,780 --> 00:16:22,010
have three months of v2 data before we

00:16:20,510 --> 00:16:26,770
get to the part where we even turn off

00:16:22,010 --> 00:16:26,770
v12 business yes yes yes

00:16:29,170 --> 00:16:35,389
no no that's that comes after two stages

00:16:32,620 --> 00:16:37,310
first is the sub there's no no exact

00:16:35,389 --> 00:16:41,690
yams after once we've gone through we've

00:16:37,310 --> 00:16:44,959
got three months of useful v2 data then

00:16:41,690 --> 00:16:48,139
that's the point at which we go okay v1

00:16:44,959 --> 00:16:50,209
can now go away yes and the first date

00:16:48,139 --> 00:16:52,190
of that is the turnoff submissions only

00:16:50,209 --> 00:16:54,430
later do we actually started eating

00:16:52,190 --> 00:17:02,720
objects as a separate stage entirely

00:16:54,430 --> 00:17:04,699
okay and again you'll see on every slide

00:17:02,720 --> 00:17:08,120
its case of follow the announcement you

00:17:04,699 --> 00:17:10,789
really must be on that list that's where

00:17:08,120 --> 00:17:12,620
we actually do all of our stuff so we

00:17:10,789 --> 00:17:14,510
have made big strides in the

00:17:12,620 --> 00:17:17,750
documentation documentation can always

00:17:14,510 --> 00:17:20,270
be expanded and we need your input to

00:17:17,750 --> 00:17:22,370
tell us what what is missing in the

00:17:20,270 --> 00:17:24,980
documentation what can't you find all

00:17:22,370 --> 00:17:27,470
right because in most cases the

00:17:24,980 --> 00:17:29,539
information you want is there but we may

00:17:27,470 --> 00:17:33,350
want me to improve the index because the

00:17:29,539 --> 00:17:35,030
content to help you find it but do you

00:17:33,350 --> 00:17:36,559
use the index in the content from the

00:17:35,030 --> 00:17:38,120
glossary because it's a very useful way

00:17:36,559 --> 00:17:39,500
of finding a way to the documentation

00:17:38,120 --> 00:17:45,470
because it's getting to be quite a large

00:17:39,500 --> 00:17:48,620
amount talks so not just lover announced

00:17:45,470 --> 00:17:51,020
but lava users this is a very big

00:17:48,620 --> 00:17:53,510
migration step we making there's going

00:17:51,020 --> 00:17:55,340
to be a lot of people from not not just

00:17:53,510 --> 00:17:57,320
within linaro but also many many

00:17:55,340 --> 00:17:59,840
community users as well who are going to

00:17:57,320 --> 00:18:01,220
be popping up on IRC stream in them I

00:17:59,840 --> 00:18:04,100
don't know how this works I don't know

00:18:01,220 --> 00:18:07,190
how to do that IRC could get very very

00:18:04,100 --> 00:18:10,220
very busy and it's very difficult on IRC

00:18:07,190 --> 00:18:11,840
to follow detailed conversations when

00:18:10,220 --> 00:18:14,299
you've got many other conversations

00:18:11,840 --> 00:18:17,720
going on in parallel so don't jump to

00:18:14,299 --> 00:18:20,600
IRC as a default think about the main

00:18:17,720 --> 00:18:22,700
list and use the minute because it's

00:18:20,600 --> 00:18:24,620
easier to email because then you can do

00:18:22,700 --> 00:18:26,419
the patch the log files attached the job

00:18:24,620 --> 00:18:28,370
submission attach this and touch that

00:18:26,419 --> 00:18:34,549
John after you to paste in do you smile

00:18:28,370 --> 00:18:37,549
see the lava software team have done all

00:18:34,549 --> 00:18:40,130
the heavy lifting for v2 to get the code

00:18:37,549 --> 00:18:41,930
ready and together there we know this

00:18:40,130 --> 00:18:44,300
going to be corner cases we know this

00:18:41,930 --> 00:18:46,730
like to be bugs but the point is the

00:18:44,300 --> 00:18:49,070
software team and now got a lot more

00:18:46,730 --> 00:18:51,380
time to actually help people with their

00:18:49,070 --> 00:18:55,210
definitions with attachment of problems

00:18:51,380 --> 00:18:57,830
with bugs because the the big work is

00:18:55,210 --> 00:19:00,080
complete we're not being distracted by

00:18:57,830 --> 00:19:03,020
having to do large amounts of that sort

00:19:00,080 --> 00:19:05,120
awk to the software team and not just me

00:19:03,020 --> 00:19:08,210
and Dave but you've got the rest of the

00:19:05,120 --> 00:19:11,930
guys there it's it's common to find that

00:19:08,210 --> 00:19:14,060
people so keep on tagging the same

00:19:11,930 --> 00:19:15,650
person there's a lot of people in the

00:19:14,060 --> 00:19:17,810
team as a lot of people can help and

00:19:15,650 --> 00:19:19,730
that's in particular why this list is a

00:19:17,810 --> 00:19:24,190
lot better because you will get better

00:19:19,730 --> 00:19:24,190
responses from a variety of people and

00:19:25,570 --> 00:19:33,920
don't leave all your your v2 development

00:19:29,810 --> 00:19:36,320
work for your release week do it between

00:19:33,920 --> 00:19:37,820
release weeks please because then we got

00:19:36,320 --> 00:19:39,410
a chance of actually getting bug fixes

00:19:37,820 --> 00:19:42,890
to you before you actually make a

00:19:39,410 --> 00:19:45,380
released week so think ahead this is why

00:19:42,890 --> 00:19:48,140
we've put in a big session here so why

00:19:45,380 --> 00:19:50,390
we publicizing this so much cash waters

00:19:48,140 --> 00:19:55,430
need to think ahead about what's going

00:19:50,390 --> 00:20:00,290
on right so how does it affect that's

00:19:55,430 --> 00:20:02,180
writers we are making sure that staging

00:20:00,290 --> 00:20:03,770
is therefore test writers to develop

00:20:02,180 --> 00:20:06,590
their tests on week you can give you

00:20:03,770 --> 00:20:07,850
access to submit to staging we can do

00:20:06,590 --> 00:20:10,010
all that kind of stuff staging of

00:20:07,850 --> 00:20:11,540
updates automatically the software team

00:20:10,010 --> 00:20:13,250
will be watching it all the time making

00:20:11,540 --> 00:20:18,230
sure there's no actual problems with the

00:20:13,250 --> 00:20:20,630
master branch the other part so you can

00:20:18,230 --> 00:20:22,910
use that to actually do your test

00:20:20,630 --> 00:20:25,130
definition changes the other thing you

00:20:22,910 --> 00:20:27,590
need to think about is particularly with

00:20:25,130 --> 00:20:30,680
the Android use cases particularly if

00:20:27,590 --> 00:20:33,560
you're using any kind of multi-node to

00:20:30,680 --> 00:20:35,210
work around problems would be one you

00:20:33,560 --> 00:20:37,160
need to think about what you're doing

00:20:35,210 --> 00:20:39,500
with your results on how you're

00:20:37,160 --> 00:20:42,350
reporting your results because there's a

00:20:39,500 --> 00:20:44,300
habit in v1 of all I'll just write these

00:20:42,350 --> 00:20:46,340
files to this special directory that the

00:20:44,300 --> 00:20:48,590
lava test help of know about and at the

00:20:46,340 --> 00:20:50,210
end of the job lar will go around in v1

00:20:48,590 --> 00:20:51,700
mode and bundle them all up and send

00:20:50,210 --> 00:20:53,980
them all back

00:20:51,700 --> 00:20:56,529
doesn't happen with v2 anymore mainly

00:20:53,980 --> 00:20:58,389
because there's too many cases where the

00:20:56,529 --> 00:21:00,370
test falls over before it gets to that

00:20:58,389 --> 00:21:04,570
end point they never get a bundle at all

00:21:00,370 --> 00:21:07,480
so v2 report results immediately so do

00:21:04,570 --> 00:21:09,850
you actually call Nava test case but

00:21:07,480 --> 00:21:12,130
that might to get the benefit of that

00:21:09,850 --> 00:21:15,039
you need to do that in your actual test

00:21:12,130 --> 00:21:17,440
scripts themselves so it's easy to check

00:21:15,039 --> 00:21:20,169
for lava test case in in the in the past

00:21:17,440 --> 00:21:21,760
inside your test shell and if you find

00:21:20,169 --> 00:21:23,649
lava test case you leave use it

00:21:21,760 --> 00:21:25,630
otherwise you can echo or you can print

00:21:23,649 --> 00:21:28,120
or even just logging whatever else your

00:21:25,630 --> 00:21:29,980
script would want to do but that's

00:21:28,120 --> 00:21:32,320
making us get portable because then you

00:21:29,980 --> 00:21:34,779
can actually run your script inside and

00:21:32,320 --> 00:21:36,639
outside lava without any problems you

00:21:34,779 --> 00:21:41,289
just get an echo instead of where you

00:21:36,639 --> 00:21:44,019
would call lava test case so module is

00:21:41,289 --> 00:21:47,019
still there not gone away still use much

00:21:44,019 --> 00:21:50,380
load with v2 when you need to but you

00:21:47,019 --> 00:21:58,809
don't need to use it for the problematic

00:21:50,380 --> 00:22:02,380
use cases of v1 and the other part of it

00:21:58,809 --> 00:22:04,210
is to make sure that you therefore

00:22:02,380 --> 00:22:06,309
remove cause a lot of weight rather

00:22:04,210 --> 00:22:09,789
think that sort of thing when you're

00:22:06,309 --> 00:22:12,760
porting a navy one job that use a vm

00:22:09,789 --> 00:22:15,100
just because it was v1 so those who need

00:22:12,760 --> 00:22:16,389
to move over when you're porting those

00:22:15,100 --> 00:22:18,059
and you thinking I need to pick this

00:22:16,389 --> 00:22:21,010
portable script to run on my own machine

00:22:18,059 --> 00:22:22,750
think about just echoing to the user

00:22:21,010 --> 00:22:24,460
because when you run in these on your

00:22:22,750 --> 00:22:26,950
own machine young you're not doing it

00:22:24,460 --> 00:22:29,200
you're doing interactively so you can

00:22:26,950 --> 00:22:31,179
just put up a prompt in now you need to

00:22:29,200 --> 00:22:33,309
do to do this or no you need to wait

00:22:31,179 --> 00:22:34,600
until that bit is finished before moving

00:22:33,309 --> 00:22:37,809
on to the next bits you just sit there

00:22:34,600 --> 00:22:39,549
with a prompt in near your own test

00:22:37,809 --> 00:22:42,309
scripts I just make the comment that

00:22:39,549 --> 00:22:45,070
milosz has been using v2 quite a lot he

00:22:42,309 --> 00:22:49,840
has happened testing and supporting his

00:22:45,070 --> 00:22:51,700
test cases / 22 v2 and he has said it's

00:22:49,840 --> 00:22:54,880
very positive things it's like where we

00:22:51,700 --> 00:22:57,130
go would say are we going to do this on

00:22:54,880 --> 00:22:59,620
this new device he goes v2 early v2 only

00:22:57,130 --> 00:23:01,270
I don't be one anymore so yeah it is a

00:22:59,620 --> 00:23:04,060
huge step forward

00:23:01,270 --> 00:23:06,070
makes a huge difference to the way lot

00:23:04,060 --> 00:23:08,710
of runs is much more efficient yeah and

00:23:06,070 --> 00:23:10,600
the entire QA team are behind this part

00:23:08,710 --> 00:23:13,330
of making your test shell scripts

00:23:10,600 --> 00:23:16,330
portable it's what the curating want to

00:23:13,330 --> 00:23:18,640
happen is that you will have the ability

00:23:16,330 --> 00:23:20,680
to run your test scripts with a device

00:23:18,640 --> 00:23:23,470
attached to your laptop in exactly the

00:23:20,680 --> 00:23:25,300
same way as it would under lava and the

00:23:23,470 --> 00:23:28,420
best way to do that is make your test

00:23:25,300 --> 00:23:30,700
scripts portable to make less reliance

00:23:28,420 --> 00:23:32,170
on the lava test she'll help us and the

00:23:30,700 --> 00:23:33,640
QA team will help with that and lava

00:23:32,170 --> 00:23:36,460
software team will help the bats well

00:23:33,640 --> 00:23:37,930
and then the other little change you

00:23:36,460 --> 00:23:40,270
need to think about is what i mentioned

00:23:37,930 --> 00:23:42,910
to start about bundles attachments and

00:23:40,270 --> 00:23:45,250
this kind of thing it's a case of there

00:23:42,910 --> 00:23:47,440
is no bundle if you want to use

00:23:45,250 --> 00:23:50,050
attachments there is a publishing API

00:23:47,440 --> 00:23:52,570
which is documented that's the large

00:23:50,050 --> 00:23:54,760
files you just push them to temporary

00:23:52,570 --> 00:23:55,990
storage and there's a couple of

00:23:54,760 --> 00:23:58,660
different ways of doing that it's nice

00:23:55,990 --> 00:24:00,670
and flexible again v2 gives you the

00:23:58,660 --> 00:24:02,710
control to do what you need to do

00:24:00,670 --> 00:24:05,080
doesn't get in a way doesn't use magic

00:24:02,710 --> 00:24:09,280
it's all explicit it does only what they

00:24:05,080 --> 00:24:14,260
tell you to do and incidentally on that

00:24:09,280 --> 00:24:16,120
with v1 the home magic of deploy boots

00:24:14,260 --> 00:24:18,850
test and then suddenly be in another

00:24:16,120 --> 00:24:20,980
boot before test no no no you should put

00:24:18,850 --> 00:24:23,620
deploy boot test you will get one built

00:24:20,980 --> 00:24:26,020
on one test beautiful is you miss out of

00:24:23,620 --> 00:24:28,480
step people just won't get upset if that

00:24:26,020 --> 00:24:30,640
doesn't work that's your problem but we

00:24:28,480 --> 00:24:34,960
won't wait Peter will tell you what it's

00:24:30,640 --> 00:24:37,950
doing so specifically with Android

00:24:34,960 --> 00:24:41,710
you're moving from a vm to a container

00:24:37,950 --> 00:24:43,420
that can have some issues and some

00:24:41,710 --> 00:24:45,850
things you need to work in within your

00:24:43,420 --> 00:24:47,410
scripts again you don't want to be doing

00:24:45,850 --> 00:24:52,420
any kind of synchronization because it's

00:24:47,410 --> 00:24:54,370
actually synchronous already I you

00:24:52,420 --> 00:24:56,860
should just point out that the container

00:24:54,370 --> 00:24:59,890
is not another new device types no love

00:24:56,860 --> 00:25:03,310
of v2 does that fall it is a transparent

00:24:59,890 --> 00:25:04,720
container made for you with parameters

00:25:03,310 --> 00:25:06,940
you specify in the job so you can

00:25:04,720 --> 00:25:09,400
specify which OS which suite and which

00:25:06,940 --> 00:25:13,210
mirrors it actually uses for that

00:25:09,400 --> 00:25:15,210
container and you can also add packages

00:25:13,210 --> 00:25:17,070
to be installed in that container

00:25:15,210 --> 00:25:20,610
at the very start there will be some

00:25:17,070 --> 00:25:22,140
when you look at the example v2 jobs

00:25:20,610 --> 00:25:24,179
there will always be some packages

00:25:22,140 --> 00:25:25,890
specified just to get the device

00:25:24,179 --> 00:25:29,419
actually running and get the device

00:25:25,890 --> 00:25:29,419
operating but you can add to that list

00:25:36,220 --> 00:25:44,320
and again we are doing we're doing work

00:25:40,809 --> 00:25:46,690
on staging to run these kinds of tests

00:25:44,320 --> 00:25:48,909
jobs ourselves so we are we have got

00:25:46,690 --> 00:25:52,390
example cts jobs or mikey we've got

00:25:48,909 --> 00:25:55,470
examples on on Juno of running Android

00:25:52,390 --> 00:25:58,090
with Anna Lexi on Juno so there are

00:25:55,470 --> 00:26:00,610
starting points for you to look at or

00:25:58,090 --> 00:26:01,990
past by basic job definition that's what

00:26:00,610 --> 00:26:11,799
the test needs to let me start off

00:26:01,990 --> 00:26:14,110
somewhere yes obviously I'm going to

00:26:11,799 --> 00:26:18,490
have a high contagious reading oh I can

00:26:14,110 --> 00:26:21,640
play a particle hiking pleasure can be

00:26:18,490 --> 00:26:23,620
useful for debugging yeah I a concession

00:26:21,640 --> 00:26:26,500
well this is interesting actually

00:26:23,620 --> 00:26:28,750
because we go back to their one of the

00:26:26,500 --> 00:26:31,450
nice things about the LXE is that it is

00:26:28,750 --> 00:26:34,539
a test shell you can have a test shell

00:26:31,450 --> 00:26:36,789
inside the LXE as well as if your device

00:26:34,539 --> 00:26:38,200
supports it a test shell on the device

00:26:36,789 --> 00:26:41,350
so depending on what if i should

00:26:38,200 --> 00:26:43,840
deploying onto the device and that

00:26:41,350 --> 00:26:46,120
allows you to have a hacking session

00:26:43,840 --> 00:26:48,039
inside that container whether you can

00:26:46,120 --> 00:26:49,360
have a confession on the device depends

00:26:48,039 --> 00:26:50,980
on whether you're deploying android or

00:26:49,360 --> 00:26:55,120
debian or something that she supports it

00:26:50,980 --> 00:26:57,400
but the LXE is a standard dev in debian

00:26:55,120 --> 00:26:59,350
generally is what most people then end

00:26:57,400 --> 00:27:01,120
up using to the container and you can

00:26:59,350 --> 00:27:03,510
have a hacking session in that container

00:27:01,120 --> 00:27:07,299
that container is already set up it's

00:27:03,510 --> 00:27:09,159
the only device you'll be able to see in

00:27:07,299 --> 00:27:10,900
the dev tree of that container is the

00:27:09,159 --> 00:27:12,730
device you're actually working with so

00:27:10,900 --> 00:27:13,990
you can you know where things are you

00:27:12,730 --> 00:27:18,549
can see where things are actually going

00:27:13,990 --> 00:27:22,030
on to access the container there a way

00:27:18,549 --> 00:27:24,789
to access well if you if you specify a

00:27:22,030 --> 00:27:27,340
hacking session test definition for the

00:27:24,789 --> 00:27:29,409
for the container you will have the

00:27:27,340 --> 00:27:31,480
dependencies installed in the container

00:27:29,409 --> 00:27:34,350
and the keys put in and you'll be

00:27:31,480 --> 00:27:34,350
implanted into it

00:27:34,650 --> 00:27:39,720
normal hiking pleasure yeah we've

00:27:37,440 --> 00:27:41,580
already done that we've already we've

00:27:39,720 --> 00:27:43,050
intestine after a while but the normal

00:27:41,580 --> 00:27:51,990
high concession works in the relics a

00:27:43,050 --> 00:27:54,120
bird okay so that hasn't changed one of

00:27:51,990 --> 00:27:56,810
the big things with be tues we've

00:27:54,120 --> 00:27:59,460
introduced a lot of new phrases new

00:27:56,810 --> 00:28:03,990
terminology new methods so we've got

00:27:59,460 --> 00:28:06,450
Alexei's and protocols and what the juno

00:28:03,990 --> 00:28:11,600
is using is a principle called secondary

00:28:06,450 --> 00:28:13,560
media now this is a way of replacing the

00:28:11,600 --> 00:28:15,360
functionality of a matted image is

00:28:13,560 --> 00:28:17,730
particularly common with things like the

00:28:15,360 --> 00:28:20,340
tuna it's also something you can use

00:28:17,730 --> 00:28:21,990
with that with the Mustang you can use

00:28:20,340 --> 00:28:25,070
it with the Cuba track anything where

00:28:21,990 --> 00:28:28,110
you've got a system that you boot by

00:28:25,070 --> 00:28:31,530
tftp or whatever or grab all that on

00:28:28,110 --> 00:28:34,620
pixie and you end up then in and around

00:28:31,530 --> 00:28:37,110
is going on at s at that point you've

00:28:34,620 --> 00:28:38,400
got a nice same system you can access

00:28:37,110 --> 00:28:40,920
the lots of different tools you can

00:28:38,400 --> 00:28:43,950
install and that allows you to write to

00:28:40,920 --> 00:28:47,700
your own image to tech new media so a

00:28:43,950 --> 00:28:49,680
USB stick SATA drive all right what the

00:28:47,700 --> 00:28:51,840
lab guys will scream at you for is if

00:28:49,680 --> 00:28:53,190
you touch any media that's actually

00:28:51,840 --> 00:28:57,900
involved in where the bootloader lives

00:28:53,190 --> 00:29:00,960
but v2 gives you control it doesn't

00:28:57,900 --> 00:29:02,730
actually protect you from dave screaming

00:29:00,960 --> 00:29:04,980
a screaming at it and he broken his

00:29:02,730 --> 00:29:08,610
device he will still do that i rarely

00:29:04,980 --> 00:29:11,490
scream haha but v2 gives you the control

00:29:08,610 --> 00:29:14,160
and it's up to you to manage that and be

00:29:11,490 --> 00:29:18,470
responsible or the lab key lab team will

00:29:14,160 --> 00:29:22,490
tell you all so secondary media is

00:29:18,470 --> 00:29:26,580
simply a way of doing a deploy boot

00:29:22,490 --> 00:29:28,920
deploy a second image to secondly media

00:29:26,580 --> 00:29:31,140
they need boot using that media now

00:29:28,920 --> 00:29:32,880
you're in that image it's internally up

00:29:31,140 --> 00:29:37,290
to you how you build that image rack

00:29:32,880 --> 00:29:39,060
with our image boots at all and then

00:29:37,290 --> 00:29:41,670
you're in an environment where you

00:29:39,060 --> 00:29:44,760
decide exactly how that is run and again

00:29:41,670 --> 00:29:47,160
these protocols keep on working so you

00:29:44,760 --> 00:29:48,150
can still add LXE as well as second

00:29:47,160 --> 00:29:49,860
immediate

00:29:48,150 --> 00:29:52,290
the advantage of this is that you are

00:29:49,860 --> 00:29:54,270
deploying and booting in the way that

00:29:52,290 --> 00:29:56,370
the device was intended to be exactly

00:29:54,270 --> 00:30:00,090
place yea rather than the old master

00:29:56,370 --> 00:30:01,860
image where we sort of fudged around it

00:30:00,090 --> 00:30:04,530
yep and the other problem of the master

00:30:01,860 --> 00:30:07,560
image was that you were doing or v1

00:30:04,530 --> 00:30:09,930
doing mastered images on devices that

00:30:07,560 --> 00:30:11,640
had no other media they were doing it

00:30:09,930 --> 00:30:14,790
all on the SD card and you were relying

00:30:11,640 --> 00:30:20,090
on partitions enable we've made a

00:30:14,790 --> 00:30:24,780
decision in v2 that that was just an

00:30:20,090 --> 00:30:28,160
unreliable awkward problematic big

00:30:24,780 --> 00:30:30,510
mountains yeah so that's why we said

00:30:28,160 --> 00:30:34,320
we're not going to give you explicit

00:30:30,510 --> 00:30:36,990
ways of right into the SD card where you

00:30:34,320 --> 00:30:42,240
bootless we're actually going to say to

00:30:36,990 --> 00:30:44,250
people look we'll give you information

00:30:42,240 --> 00:30:48,180
in the device configuration that says

00:30:44,250 --> 00:30:50,630
this device has got a USB stick inside

00:30:48,180 --> 00:30:53,250
your test shell you will have access to

00:30:50,630 --> 00:30:56,670
help us tell you where that thing is

00:30:53,250 --> 00:30:58,890
what where it is in the device mapping

00:30:56,670 --> 00:31:01,650
and how t and then you can use it from

00:30:58,890 --> 00:31:04,620
there and you get that choice to

00:31:01,650 --> 00:31:07,980
actually do these kinds of things so the

00:31:04,620 --> 00:31:10,080
lab team will will declare that I would

00:31:07,980 --> 00:31:13,890
you know has a sandisk cruzer blade

00:31:10,080 --> 00:31:16,500
stuck in and it'll be a dev disk by ID

00:31:13,890 --> 00:31:19,140
will be declared by the lab team you'll

00:31:16,500 --> 00:31:20,970
get to see oh that's that's not device

00:31:19,140 --> 00:31:23,160
over there nothing or you could deploy

00:31:20,970 --> 00:31:25,550
to you will have access to yeah medium

00:31:23,160 --> 00:31:29,130
you shouldn't devoted woman exactly

00:31:25,550 --> 00:31:31,320
alright but because you put it into an

00:31:29,130 --> 00:31:34,080
image entire your own accord and your

00:31:31,320 --> 00:31:36,210
own design you you can break the system

00:31:34,080 --> 00:31:38,070
by which part you get to drop you what

00:31:36,210 --> 00:31:42,210
if you work around it yes you can break

00:31:38,070 --> 00:31:44,340
it but yeah so don't do that so yeah

00:31:42,210 --> 00:31:46,800
that's how the D that you know actually

00:31:44,340 --> 00:31:48,150
does these kinds of things it is safer

00:31:46,800 --> 00:31:49,560
to do it on junior than many other

00:31:48,150 --> 00:31:51,360
platforms because you've got to manage

00:31:49,560 --> 00:31:53,750
an interface that allows you to get in

00:31:51,360 --> 00:31:57,420
and reset things even if they actually

00:31:53,750 --> 00:32:00,230
really mess up the media but you can

00:31:57,420 --> 00:32:02,000
also do secondly media on other devices

00:32:00,230 --> 00:32:10,400
one other thing I will

00:32:02,000 --> 00:32:13,460
mention v1 at the idea of VN groups it

00:32:10,400 --> 00:32:17,450
was a rushed design it worked but it was

00:32:13,460 --> 00:32:20,900
rushed we've sorted out properly in v2

00:32:17,450 --> 00:32:23,000
and it's called secondary connections so

00:32:20,900 --> 00:32:26,180
a secondary connection again it's not a

00:32:23,000 --> 00:32:29,540
formal device it is just a extra tests

00:32:26,180 --> 00:32:32,680
job in your multi-node definition and it

00:32:29,540 --> 00:32:35,990
at the moment it logs in over ssh and

00:32:32,680 --> 00:32:38,420
basically you're fairly say the mustang

00:32:35,990 --> 00:32:43,070
you put the Mustang over NFS you install

00:32:38,420 --> 00:32:45,170
openssh server and then we have a

00:32:43,070 --> 00:32:48,200
delayed start the secondary connection

00:32:45,170 --> 00:32:50,660
starts when it's told that the acetate

00:32:48,200 --> 00:32:54,260
server is ready it logs in you've now

00:32:50,660 --> 00:32:56,810
got two terminals to test shells on that

00:32:54,260 --> 00:32:58,130
one device in that one image so you can

00:32:56,810 --> 00:33:00,590
do lots of different things there you

00:32:58,130 --> 00:33:02,120
can you can watch the trace output of a

00:33:00,590 --> 00:33:04,160
debugger whilst you've actually watching

00:33:02,120 --> 00:33:06,200
the output on the console on another

00:33:04,160 --> 00:33:08,780
terminal it's all up to you to set up

00:33:06,200 --> 00:33:10,570
the virtualization team are using it for

00:33:08,780 --> 00:33:14,270
that kind of thing they're running

00:33:10,570 --> 00:33:16,640
they're starting cream you in one test

00:33:14,270 --> 00:33:20,770
show and then watching the queue monitor

00:33:16,640 --> 00:33:24,220
or maybe gdb places on a second

00:33:20,770 --> 00:33:24,220
secondary connection

00:33:28,090 --> 00:33:37,779
okay so that's the scary stuff all right

00:33:33,179 --> 00:33:41,080
that's the ideas of the plan so do talk

00:33:37,779 --> 00:33:43,809
to us and get your your test shells your

00:33:41,080 --> 00:33:46,870
test definitions ported before connect

00:33:43,809 --> 00:33:54,159
and ask us for help whenever you need it

00:33:46,870 --> 00:33:56,020
so who's got some questions the thing we

00:33:54,159 --> 00:33:59,380
can use this waiting for testing right

00:33:56,020 --> 00:34:02,590
let's do it the device is like hugging I

00:33:59,380 --> 00:34:05,770
have one device and we started to the

00:34:02,590 --> 00:34:09,339
million job from jinking like city has

00:34:05,770 --> 00:34:11,349
passed yeah so if staging doesn't have

00:34:09,339 --> 00:34:14,889
enough devices of the type that you want

00:34:11,349 --> 00:34:16,629
to work with after days what devices can

00:34:14,889 --> 00:34:19,990
be added but that's you know it's a case

00:34:16,629 --> 00:34:24,909
of if the device can be obtained it can

00:34:19,990 --> 00:34:31,830
probably be added color yeah I'll just

00:34:24,909 --> 00:34:34,179
advance notice on quitting IRC yeah so

00:34:31,830 --> 00:34:36,159
we're going to I think what's going to

00:34:34,179 --> 00:34:39,460
happen are the way I'm looking at things

00:34:36,159 --> 00:34:41,889
is a staging while it will still be used

00:34:39,460 --> 00:34:44,589
for testing production the next

00:34:41,889 --> 00:34:49,389
production yes of lava will also become

00:34:44,589 --> 00:34:53,409
a bigger instance it with more devices

00:34:49,389 --> 00:34:57,150
yeah as a sort of clone of production

00:34:53,409 --> 00:34:59,470
the advanced loaded production yep so

00:34:57,150 --> 00:35:01,720
part of that of course is that staging

00:34:59,470 --> 00:35:03,460
is probably going to be the first

00:35:01,720 --> 00:35:07,390
instance that I knew anybody here

00:35:03,460 --> 00:35:08,920
notices where v1 gets turned off for

00:35:07,390 --> 00:35:10,450
those reasons together but we're going

00:35:08,920 --> 00:35:11,980
to make sure that we test that on

00:35:10,450 --> 00:35:15,040
staging before we do it on production

00:35:11,980 --> 00:35:15,559
the things you did that query the other

00:35:15,040 --> 00:35:17,920
day

00:35:15,559 --> 00:35:20,630
yesterday yep on the database

00:35:17,920 --> 00:35:23,029
predominantly the people submitting jobs

00:35:20,630 --> 00:35:27,109
are robots yes they are not it's not

00:35:23,029 --> 00:35:30,559
topical production jobs yet option so we

00:35:27,109 --> 00:35:32,930
are working closely with fatty and

00:35:30,559 --> 00:35:40,189
milosz to make sure that all of and

00:35:32,930 --> 00:35:43,729
Amaro and pruning to make sure that all

00:35:40,189 --> 00:35:47,979
their jobs are transitioned to v2 yep

00:35:43,729 --> 00:35:50,180
and when we spot then when we spot

00:35:47,979 --> 00:35:53,329
individually one jobs being submitted

00:35:50,180 --> 00:35:57,279
will or approach that person and have a

00:35:53,329 --> 00:35:59,869
kind words in it yet yep if you're just

00:35:57,279 --> 00:36:01,309
resubmitting a be one job that see I

00:35:59,869 --> 00:36:02,930
have been put in for you because there

00:36:01,309 --> 00:36:04,999
was some other problems will notice it

00:36:02,930 --> 00:36:08,380
would be fine with will pick up from the

00:36:04,999 --> 00:36:10,849
job description will see what's going on

00:36:08,380 --> 00:36:13,549
the other thing I will stress actually

00:36:10,849 --> 00:36:16,309
or should have put this in the slides be

00:36:13,549 --> 00:36:18,469
too has same kind of support for

00:36:16,309 --> 00:36:20,569
metadata as the one in your job

00:36:18,469 --> 00:36:22,969
definition it's this instructor because

00:36:20,569 --> 00:36:25,819
it's yeah more valued not Jason but if

00:36:22,969 --> 00:36:28,849
basically you can still put think our

00:36:25,819 --> 00:36:31,219
key value pairs into metadata and use

00:36:28,849 --> 00:36:33,859
that resource we are doing it now for

00:36:31,219 --> 00:36:36,199
our example jobs so we'll put in better

00:36:33,859 --> 00:36:38,119
data that says this example jobs came

00:36:36,199 --> 00:36:40,429
from that page of the documentation or

00:36:38,119 --> 00:36:44,390
it came from this repository or it's

00:36:40,429 --> 00:36:47,539
been tamed by someone over here so when

00:36:44,390 --> 00:36:50,569
you are testing jobs when you

00:36:47,539 --> 00:36:52,489
resubmitting jobs think about adding or

00:36:50,569 --> 00:36:54,529
modifying the metadata at the point

00:36:52,489 --> 00:36:57,160
where you get or we submit but there's

00:36:54,529 --> 00:37:00,140
my job in the submit UI text box just

00:36:57,160 --> 00:37:01,759
tweak metadata bit then that helps you

00:37:00,140 --> 00:37:05,410
tell the difference between the jobs are

00:37:01,759 --> 00:37:05,410
you iterating through your own testing

00:37:05,559 --> 00:37:13,549
big one thing I shall again one more

00:37:09,019 --> 00:37:16,219
thing over v2 because v2 is llamo v2 has

00:37:13,549 --> 00:37:18,890
a very powerful method called inline

00:37:16,219 --> 00:37:22,060
test definitions those will become

00:37:18,890 --> 00:37:23,590
really really useful I also another

00:37:22,060 --> 00:37:28,600
very powerful feature which is being

00:37:23,590 --> 00:37:30,880
able to comment yes absolutely every

00:37:28,600 --> 00:37:33,520
llamo file you think of using in v2

00:37:30,880 --> 00:37:36,190
should have comments lots of comments

00:37:33,520 --> 00:37:38,050
why do they do this do it that way where

00:37:36,190 --> 00:37:39,700
do they get this file from what are you

00:37:38,050 --> 00:37:42,550
doing with it what you want to work what

00:37:39,700 --> 00:37:45,850
why do you have to change that bit all

00:37:42,550 --> 00:37:48,520
right because you can use comments and

00:37:45,850 --> 00:37:50,080
they are preserved into what you see is

00:37:48,520 --> 00:37:55,050
the job definition they're not preserved

00:37:50,080 --> 00:37:57,760
monday is she educated that's fine

00:37:55,050 --> 00:38:01,150
equally use version control now get

00:37:57,760 --> 00:38:03,190
these scripts into get yes the your test

00:38:01,150 --> 00:38:06,010
definition scripts commonly living it

00:38:03,190 --> 00:38:09,220
but your job submission scripts can live

00:38:06,010 --> 00:38:11,800
there as well and let other people pick

00:38:09,220 --> 00:38:13,630
up why you change something make your

00:38:11,800 --> 00:38:16,960
commit messages nice and descriptive and

00:38:13,630 --> 00:38:18,520
say I'm changing this because I got that

00:38:16,960 --> 00:38:23,470
bit wrong or I misunderstood this bit of

00:38:18,520 --> 00:38:26,740
the documentation and again when we get

00:38:23,470 --> 00:38:29,230
to people struggling if you're not if

00:38:26,740 --> 00:38:31,570
you're not understanding what you need

00:38:29,230 --> 00:38:33,280
to do to make your jobs working V to ask

00:38:31,570 --> 00:38:36,850
yeah there are a lot of people going to

00:38:33,280 --> 00:38:39,220
be around especially you know if you're

00:38:36,850 --> 00:38:40,900
if you're in the early phases but and

00:38:39,220 --> 00:38:42,430
you think you have an awkward job that

00:38:40,900 --> 00:38:45,070
you think I'm not sure this is going to

00:38:42,430 --> 00:38:47,260
work please talk to us we're actively

00:38:45,070 --> 00:38:48,910
looking for really good examples that we

00:38:47,260 --> 00:38:52,360
can put in the dock to help other people

00:38:48,910 --> 00:38:55,080
too yes one of the features that we've

00:38:52,360 --> 00:38:57,880
been pushing for for the v2 docks is

00:38:55,080 --> 00:39:00,670
really good worked examples showing you

00:38:57,880 --> 00:39:02,200
exactly how to do the trivial jobs when

00:39:00,670 --> 00:39:05,110
you first start submitting all the way

00:39:02,200 --> 00:39:06,700
up to really complicated things and if

00:39:05,110 --> 00:39:08,140
we like those examples they're going to

00:39:06,700 --> 00:39:10,780
be able from our focus not from yours

00:39:08,140 --> 00:39:13,240
and they're not be as helpful or not

00:39:10,780 --> 00:39:15,220
we'll vote but I need a clear when you

00:39:13,240 --> 00:39:17,910
come to talk to us bear in mind what I

00:39:15,220 --> 00:39:20,950
said earlier IRC is going to get flooded

00:39:17,910 --> 00:39:22,750
at times so you please use the mailing

00:39:20,950 --> 00:39:25,030
list because the guys here will be

00:39:22,750 --> 00:39:26,770
watching the moon mist and frequently at

00:39:25,030 --> 00:39:28,930
the botton ality you won't get

00:39:26,770 --> 00:39:31,120
necessarily any delay in getting your

00:39:28,930 --> 00:39:32,860
answer just because you're using and

00:39:31,120 --> 00:39:35,140
then you've got an email trolls and then

00:39:32,860 --> 00:39:35,890
we got public email clue that will help

00:39:35,140 --> 00:39:38,980
everybody else

00:39:35,890 --> 00:39:41,440
so I was sort of just add that having

00:39:38,980 --> 00:39:44,680
gone through several examples also

00:39:41,440 --> 00:39:48,160
several exercises now of transitioning

00:39:44,680 --> 00:39:50,769
from v1 to v2 James once you get your

00:39:48,160 --> 00:39:54,339
head around v2 yes it's a lot easier a

00:39:50,769 --> 00:39:58,200
lot better and then with that moment

00:39:54,339 --> 00:39:58,200
when you can forget the JSON even exist

00:39:58,529 --> 00:40:05,109
something to look forward to yep so it's

00:40:02,079 --> 00:40:07,660
not Italy it sounds scary but v2 is not

00:40:05,109 --> 00:40:10,630
scary it just gives you a lot of power

00:40:07,660 --> 00:40:13,539
it's incredibly powerful it gives you

00:40:10,630 --> 00:40:18,940
enough pattern yeah do bad things if you

00:40:13,539 --> 00:40:21,130
want it exactly but equally v2 is our

00:40:18,940 --> 00:40:22,599
long-term development model it's not as

00:40:21,130 --> 00:40:24,970
if it's going to be abie to you next

00:40:22,599 --> 00:40:27,309
year none of us not happening this is

00:40:24,970 --> 00:40:31,500
the future we're sticking with you two

00:40:27,309 --> 00:40:34,900
it's got enough power for what we see as

00:40:31,500 --> 00:40:36,940
the future needs of lava users and

00:40:34,900 --> 00:40:39,640
admins I mean v2 is lessons learned from

00:40:36,940 --> 00:40:42,640
v1 exactly and quite a lot of good

00:40:39,640 --> 00:40:44,769
portent lesson you know what we were

00:40:42,640 --> 00:40:47,710
doing over the past six years with v1

00:40:44,769 --> 00:40:49,930
was going oh we haven't covered that

00:40:47,710 --> 00:40:51,640
case so we shoehorn it in characters and

00:40:49,930 --> 00:40:55,390
architecture that wasn't really designed

00:40:51,640 --> 00:40:56,950
for it yeah and so beach is just ok

00:40:55,390 --> 00:40:58,930
let's do it properly because we've

00:40:56,950 --> 00:41:00,400
learned a lesson and the other thing

00:40:58,930 --> 00:41:02,349
I'll just say is the first person who

00:41:00,400 --> 00:41:11,799
writes a lava virus and it's something

00:41:02,349 --> 00:41:16,089
which wipes out all the kids me no no no

00:41:11,799 --> 00:41:18,220
no the prize will be someone's p45 we

00:41:16,089 --> 00:41:21,640
were hunt you down

00:41:18,220 --> 00:41:21,640
[Laughter]

00:41:24,910 --> 00:41:36,100
a very simple question since we're

00:41:33,460 --> 00:41:39,090
talking about transitions so we now have

00:41:36,100 --> 00:41:43,210
transition from v1 to v2 which is

00:41:39,090 --> 00:41:45,820
basically relying on Jessie as a the

00:41:43,210 --> 00:41:49,090
u.s. yeah we'll be having stretch coming

00:41:45,820 --> 00:41:52,780
out next to nip in the thin in probably

00:41:49,090 --> 00:41:55,810
near future yep don't know when one but

00:41:52,780 --> 00:41:59,110
is there something as we may proceed at

00:41:55,810 --> 00:42:03,400
may affect the two on stretch is their

00:41:59,110 --> 00:42:05,110
plan for dieting on and so forth so the

00:42:03,400 --> 00:42:08,350
developers typical running other

00:42:05,110 --> 00:42:10,180
structural said certainly in vm so their

00:42:08,350 --> 00:42:12,880
own instances and have been for quite

00:42:10,180 --> 00:42:15,880
some considerable time i've been running

00:42:12,880 --> 00:42:19,150
unstable for 10 years and then there's a

00:42:15,880 --> 00:42:22,990
case of so we are ahead of the curve all

00:42:19,150 --> 00:42:25,330
about in making sure that lava works

00:42:22,990 --> 00:42:28,030
both our server and dispatcher I'm

00:42:25,330 --> 00:42:31,960
Jessie with backports it does need bad

00:42:28,030 --> 00:42:35,680
for now and on stretchers we have come

00:42:31,960 --> 00:42:39,850
across a couple of issues where you go

00:42:35,680 --> 00:42:41,470
from Devin stables to the new stable we

00:42:39,850 --> 00:42:44,470
already said we need to go buy a back

00:42:41,470 --> 00:42:47,650
post that's not something that some

00:42:44,470 --> 00:42:49,300
users would expect but equally if you

00:42:47,650 --> 00:42:51,580
are keeping up to date with lava at all

00:42:49,300 --> 00:42:54,100
you will already have gone by a back

00:42:51,580 --> 00:42:57,010
post to get to the point your ad so it's

00:42:54,100 --> 00:42:58,750
not a problem then 21 from there there

00:42:57,010 --> 00:43:01,420
are other steps we're considering but

00:42:58,750 --> 00:43:02,920
those are they're just ideas a

00:43:01,420 --> 00:43:05,080
development along we haven't approached

00:43:02,920 --> 00:43:11,040
anybody in Devon or what solid work on

00:43:05,080 --> 00:43:17,080
that area but we are very aware of our

00:43:11,040 --> 00:43:19,600
reliance on debian for this and if it is

00:43:17,080 --> 00:43:22,380
a two-edged sword because we can use

00:43:19,600 --> 00:43:26,740
debian to make this process smooth and

00:43:22,380 --> 00:43:29,320
clear and easily documented that does

00:43:26,740 --> 00:43:31,390
tend tend to tie us even closer into

00:43:29,320 --> 00:43:34,110
debian and makes it harder for anybody

00:43:31,390 --> 00:43:38,619
supporters to fedora or anything else

00:43:34,110 --> 00:43:40,710
but that said removing the v1 code

00:43:38,619 --> 00:43:44,680
we'll make porting to other

00:43:40,710 --> 00:43:47,559
distributions massively easier what

00:43:44,680 --> 00:43:49,569
about Python 3 license fees already in

00:43:47,559 --> 00:43:52,539
inflow love dispatcher runs on the

00:43:49,569 --> 00:43:55,420
pythons tree already Remy spends much of

00:43:52,539 --> 00:43:59,200
work on that or over the last year all

00:43:55,420 --> 00:44:01,180
also we routinely test all our unit

00:43:59,200 --> 00:44:03,460
tests on the Python 3 the lava bot has

00:44:01,180 --> 00:44:08,529
been running Python 2 and 5 and 3 unit

00:44:03,460 --> 00:44:10,329
tests for about a year so every review

00:44:08,529 --> 00:44:13,420
is tested with Python to invite and 32

00:44:10,329 --> 00:44:15,940
lava dispatcher this harks back to the

00:44:13,420 --> 00:44:17,619
earlier slide the reason we can't do

00:44:15,940 --> 00:44:19,690
lava server fight and three is because

00:44:17,619 --> 00:44:22,839
the v1 code will simply not put up with

00:44:19,690 --> 00:44:24,759
thousand three so we have to drop the v1

00:44:22,839 --> 00:44:28,599
code for lots to some reasons that's one

00:44:24,759 --> 00:44:32,440
of them are all the libraries that we

00:44:28,599 --> 00:44:34,779
need 40 yes right and that was a problem

00:44:32,440 --> 00:44:38,579
of year yeah so that problem has been

00:44:34,779 --> 00:44:41,109
addressed there's one more library which

00:44:38,579 --> 00:44:42,970
it's the device dictionary support one

00:44:41,109 --> 00:44:44,970
we may want move into addiction to the

00:44:42,970 --> 00:44:53,710
file system but I've already got a

00:44:44,970 --> 00:44:56,230
version of that which I think works just

00:44:53,710 --> 00:44:59,049
as a common for Biden free I had a set

00:44:56,230 --> 00:45:02,349
of batches for v2 only dispatcher and

00:44:59,049 --> 00:45:05,170
I'm running I I tried to run on we spied

00:45:02,349 --> 00:45:06,880
on free and it's working yeah but v2

00:45:05,170 --> 00:45:13,809
only under dispatch shuttle does he ever

00:45:06,880 --> 00:45:16,210
yeah how are you guys planning to phase

00:45:13,809 --> 00:45:21,009
out v1 as far as we're moving the code

00:45:16,210 --> 00:45:28,950
and yeah you missed her elderly early

00:45:21,009 --> 00:45:32,940
life so

00:45:28,950 --> 00:45:34,829
by having these key admin actions it

00:45:32,940 --> 00:45:39,450
allows us to make the database

00:45:34,829 --> 00:45:41,190
transition migration to drop v1 be very

00:45:39,450 --> 00:45:44,010
very simple we're not going to do any

00:45:41,190 --> 00:45:46,950
attempt at alter table the v1 database

00:45:44,010 --> 00:45:48,890
migrations will just be drop table with

00:45:46,950 --> 00:45:53,670
the case of drop table dashboard

00:45:48,890 --> 00:45:55,890
underscore AB star and that promise I

00:45:53,670 --> 00:46:01,440
promise you in Postgres drop table

00:45:55,890 --> 00:46:10,290
really is really quite fast and when is

00:46:01,440 --> 00:46:12,180
that happening so so there's various

00:46:10,290 --> 00:46:14,849
steps to do before that we will turn off

00:46:12,180 --> 00:46:17,460
v1 submissions before we get that point

00:46:14,849 --> 00:46:20,250
we'll make sure the teams have got the

00:46:17,460 --> 00:46:22,200
data before we turn off be one

00:46:20,250 --> 00:46:24,570
submission but yes there will be a

00:46:22,200 --> 00:46:30,150
separate production release that will

00:46:24,570 --> 00:46:33,089
simply drop those tables okay we going

00:46:30,150 --> 00:46:36,240
are you going to back up the old data

00:46:33,089 --> 00:46:37,890
somewhere solarek eyes yeah Dave

00:46:36,240 --> 00:46:40,560
mentioned just before you came in he's

00:46:37,890 --> 00:46:42,900
going to have a read only archive vlo

00:46:40,560 --> 00:46:46,280
that's got to be one data so at the

00:46:42,900 --> 00:46:48,690
point where he is about to install the

00:46:46,280 --> 00:46:51,089
version that turns off rerun submissions

00:46:48,690 --> 00:46:53,819
that'll be the point that'll be the

00:46:51,089 --> 00:46:55,770
snapshot you get a v1 that will be

00:46:53,819 --> 00:47:01,099
read-only nothing you as nothing could

00:46:55,770 --> 00:47:01,099
be changed in that then from there yeah

00:47:05,650 --> 00:47:13,370
any us in fact just checking with Dave

00:47:09,920 --> 00:47:15,890
and we'll plan to have that archive one

00:47:13,370 --> 00:47:18,620
running in parallel before that move

00:47:15,890 --> 00:47:21,260
happens that is not necessarily easy

00:47:18,620 --> 00:47:23,150
because you'll need to keep caught in

00:47:21,260 --> 00:47:25,760
the data approach running job we just

00:47:23,150 --> 00:47:28,100
will do a periodic migration yeah okay

00:47:25,760 --> 00:47:30,800
of the data just to make sure

00:47:28,100 --> 00:47:33,110
everything's are so it's there we don't

00:47:30,800 --> 00:47:47,810
know we can use that as a test of our

00:47:33,110 --> 00:47:52,490
backup stretchy so we are not starting

00:47:47,810 --> 00:47:54,820
from job one right so for example like

00:47:52,490 --> 00:47:58,490
we have a v1 job which is there in

00:47:54,820 --> 00:48:00,220
production is this Calliphora for if he

00:47:58,490 --> 00:48:05,630
goes to your L you'll just get a 404

00:48:00,220 --> 00:48:09,230
okay is there any reason just going with

00:48:05,630 --> 00:48:13,850
this one so if we get a 404 could we go

00:48:09,230 --> 00:48:22,370
look in the archives for that job it

00:48:13,850 --> 00:48:25,400
would be as long as you talk with ya as

00:48:22,370 --> 00:48:27,710
long as that and redirect is admin

00:48:25,400 --> 00:48:29,960
specific or instant specific oh yeah no

00:48:27,710 --> 00:48:33,860
that's not implementation exactly dunno

00:48:29,960 --> 00:48:35,990
that's what yeah yeah and make sure you

00:48:33,860 --> 00:48:37,310
tell the user that if the URL has

00:48:35,990 --> 00:48:40,100
changed and it's actually not when they

00:48:37,310 --> 00:48:45,290
looking at you're being redirected yeah

00:48:40,100 --> 00:48:48,530
I mean I suspect once we've gone through

00:48:45,290 --> 00:48:50,420
a couple of months transition nobody

00:48:48,530 --> 00:48:52,370
will be looking at all what is it well

00:48:50,420 --> 00:48:56,200
it sounds mean but for doing stupid

00:48:52,370 --> 00:49:01,270
animations yeah i'll be using yes yeah

00:48:56,200 --> 00:49:01,270
and we're running out of time yeah well

00:49:09,180 --> 00:49:11,240
you

00:49:11,740 --> 00:49:18,849
[Applause]

00:49:13,650 --> 00:49:18,849

YouTube URL: https://www.youtube.com/watch?v=ok_2G5Ite2w


