Title: HKG18-508 - An overview of Fedora Atomic for IoT running on ARM
Publication date: 2019-05-09
Playlist: Linaro Connect Hong Kong 2018
Description: 
	Session ID: HKG18-508
Session Name: HKG18-508 - An overview of Fedora Atomic for IoT running on ARM
Speaker: Peter Robinson
Track: IoT, Embedded


★ Session Summary ★
An overview of Fedora Atomic for IoT running on ARM (aarch64 and ARMv7) platforms acting as a gateway to Zephyr devices. An overview of atomic and how OSTree, the underlying technology of Fedora Atomic, makes IoT useful for stress free upgrades.
---------------------------------------------------
★ Resources ★
Event Page: http://connect.linaro.org/resource/hkg18/hkg18-508/
Presentation: http://connect.linaro.org.s3.amazonaws.com/hkg18/presentations/hkg18-508.pdf
Video: http://connect.linaro.org.s3.amazonaws.com/hkg18/videos/hkg18-508.mp4
 ---------------------------------------------------
★ Event Details ★
Linaro Connect Hong Kong 2018 (HKG18)
19-23 March 2018 
Regal Airport Hotel Hong Kong

---------------------------------------------------
Keyword: IoT, Embedded
'http://www.linaro.org'
'http://connect.linaro.org'
---------------------------------------------------
Follow us on Social Media
https://www.facebook.com/LinaroOrg
https://www.youtube.com/user/linaroorg?sub_confirmation=1
https://www.linkedin.com/company/1026961
Captions: 
	00:00:04,530 --> 00:00:06,590
you

00:00:14,849 --> 00:00:18,689
right I think we'll get started

00:00:19,439 --> 00:00:39,610
so I'm penny Robinson I'm going to give

00:00:26,560 --> 00:00:42,879
a brief overview of where we are of

00:00:39,610 --> 00:00:48,969
where we are with fedora iate where

00:00:42,879 --> 00:00:52,270
we're going a slightly modified demo and

00:00:48,969 --> 00:00:54,730
then sort of just sort of gather some

00:00:52,270 --> 00:00:56,320
feedback in questions feel free to ask

00:00:54,730 --> 00:00:58,840
questions as we go if you've got

00:00:56,320 --> 00:01:07,899
anything or probably even worked at the

00:00:58,840 --> 00:01:11,830
end so um as I mentioned I'm Peter my

00:01:07,899 --> 00:01:13,990
role at Red Hat is I tell you at the

00:01:11,830 --> 00:01:17,140
platform where I'm so basically

00:01:13,990 --> 00:01:21,670
everything winix do my best to avoid the

00:01:17,140 --> 00:01:24,689
middleware but obviously that's another

00:01:21,670 --> 00:01:27,869
big part of what Red Hat does and

00:01:24,689 --> 00:01:30,759
primarily focused in the community space

00:01:27,869 --> 00:01:33,640
around fedora and various other bits and

00:01:30,759 --> 00:01:36,549
pieces working with other organizations

00:01:33,640 --> 00:01:41,610
such as lamare in the light group and

00:01:36,549 --> 00:01:46,960
various sort of connecting and related

00:01:41,610 --> 00:01:52,869
projects anyway so part of what I've

00:01:46,960 --> 00:01:54,880
been doing has evolved to presenting to

00:01:52,869 --> 00:01:57,790
the fedora Council which is the

00:01:54,880 --> 00:02:02,020
overarching controlling body of the

00:01:57,790 --> 00:02:05,560
Fedora project Rhett Red Hat has a

00:02:02,020 --> 00:02:07,570
number of seats on the council and the

00:02:05,560 --> 00:02:10,209
rest is made up of community members and

00:02:07,570 --> 00:02:13,720
it sort of sets the general direction of

00:02:10,209 --> 00:02:17,140
the project each year the council

00:02:13,720 --> 00:02:19,930
selects a number of different objectives

00:02:17,140 --> 00:02:23,109
to focus on as the proof for the project

00:02:19,930 --> 00:02:25,690
as a whole and I was asked to propose

00:02:23,109 --> 00:02:31,300
IOT as one of those objective

00:02:25,690 --> 00:02:34,300
which I did a month or so ago where I

00:02:31,300 --> 00:02:37,390
presented to the council I think the day

00:02:34,300 --> 00:02:40,720
before I did a similar presentation to

00:02:37,390 --> 00:02:43,630
the light steering committee and the

00:02:40,720 --> 00:02:48,210
Fedora council discussion ended up in a

00:02:43,630 --> 00:02:52,000
sort of wide-ranging process where I

00:02:48,210 --> 00:02:58,570
suggested we did a IOT spin which is a

00:02:52,000 --> 00:03:01,450
sort of less focused sort of objective

00:02:58,570 --> 00:03:04,300
than anyway when the council came to

00:03:01,450 --> 00:03:07,000
vote on it they decided overwhelmingly

00:03:04,300 --> 00:03:09,310
that rather than doing a spin with a

00:03:07,000 --> 00:03:12,660
special interest group that it should be

00:03:09,310 --> 00:03:16,540
kept IIT should become a top-level

00:03:12,660 --> 00:03:19,990
Fedora addition which means it will

00:03:16,540 --> 00:03:24,130
eventually sit next to or alongside and

00:03:19,990 --> 00:03:28,540
serve a workstation and cloud editions

00:03:24,130 --> 00:03:33,209
on Fedora as a key sort of deliverable

00:03:28,540 --> 00:03:37,209
so what does that actually mean

00:03:33,209 --> 00:03:40,330
well we'll be defining what the audience

00:03:37,209 --> 00:03:44,410
is and Fedora being a fedora fedora

00:03:40,330 --> 00:03:47,680
being a community project that doesn't

00:03:44,410 --> 00:03:50,320
necessarily mean so Red Hat when they

00:03:47,680 --> 00:03:52,530
have product it obviously has to have a

00:03:50,320 --> 00:03:55,090
market and a support process and

00:03:52,530 --> 00:03:57,820
business decisions behind other than

00:03:55,090 --> 00:04:00,910
everything else in the community space

00:03:57,820 --> 00:04:04,300
that tends to be much wider so throwing

00:04:00,910 --> 00:04:08,739
sorry virtualization in RAL for example

00:04:04,300 --> 00:04:10,900
is purely KVM and that's a support model

00:04:08,739 --> 00:04:13,030
in fedora you get Zen and all sorts of

00:04:10,900 --> 00:04:14,700
other options that you wouldn't

00:04:13,030 --> 00:04:18,549
necessarily get in an enterprise model

00:04:14,700 --> 00:04:23,620
so the IOT for a lot of people means a

00:04:18,549 --> 00:04:25,630
lot of different things and ultimately I

00:04:23,620 --> 00:04:29,919
am Fedora will probably mean a lot of

00:04:25,630 --> 00:04:34,740
different things I'll be the initial

00:04:29,919 --> 00:04:37,730
focus will be a very very slim line

00:04:34,740 --> 00:04:40,790
atomic based platform

00:04:37,730 --> 00:04:42,550
atomic is sort of like get for

00:04:40,790 --> 00:04:46,190
filesystems or get for operating systems

00:04:42,550 --> 00:04:48,890
where in your traditional fedora space

00:04:46,190 --> 00:04:50,630
you'll use D and F and if you lose power

00:04:48,890 --> 00:04:53,690
or something like that during the update

00:04:50,630 --> 00:04:55,580
process when the Machine comes back

00:04:53,690 --> 00:04:59,330
online or if the Machine comes back

00:04:55,580 --> 00:05:03,440
online your OS may be in an inconsistent

00:04:59,330 --> 00:05:07,280
unknown state it may be it may not

00:05:03,440 --> 00:05:10,240
the advantage of OS free which is the

00:05:07,280 --> 00:05:13,220
technology underlying atomic is that

00:05:10,240 --> 00:05:16,550
when you upgrade the OS it's upgraded in

00:05:13,220 --> 00:05:18,950
a single atomic move and as a single

00:05:16,550 --> 00:05:20,780
transaction and if anything fails during

00:05:18,950 --> 00:05:23,960
that process it rolls back to the

00:05:20,780 --> 00:05:25,850
previous state so you never get into a

00:05:23,960 --> 00:05:29,090
suit or you should never get into a

00:05:25,850 --> 00:05:31,640
situation where you end up with a none

00:05:29,090 --> 00:05:34,490
bootable platform because something's

00:05:31,640 --> 00:05:37,880
gone wrong it also has the similar

00:05:34,490 --> 00:05:41,870
concept in get sort of branches so you

00:05:37,880 --> 00:05:43,640
can move between an OS branch which is

00:05:41,870 --> 00:05:47,360
basically a release so you could move

00:05:43,640 --> 00:05:49,250
for a time you could put move forward to

00:05:47,360 --> 00:05:51,020
a development release and if that's not

00:05:49,250 --> 00:05:54,140
working as expected you can just roll it

00:05:51,020 --> 00:05:59,060
back to a stable sort of branch in the

00:05:54,140 --> 00:06:02,840
process so the plan is to do a very slim

00:05:59,060 --> 00:06:06,650
line OS tree based operating system and

00:06:02,840 --> 00:06:09,850
then add sort of funky functionality on

00:06:06,650 --> 00:06:14,750
top of that through containers always

00:06:09,850 --> 00:06:17,000
layering in OS 3 is very slim line where

00:06:14,750 --> 00:06:20,210
you can apply applications on top you

00:06:17,000 --> 00:06:23,120
can also run install standard rpms on

00:06:20,210 --> 00:06:27,320
top of the OS tree as well as if it was

00:06:23,120 --> 00:06:28,910
a standard sort of distribution but the

00:06:27,320 --> 00:06:34,070
main focus is going to be sort of

00:06:28,910 --> 00:06:36,890
container based sort of application

00:06:34,070 --> 00:06:40,370
sacks on top of that to allow maximum

00:06:36,890 --> 00:06:42,010
security within the IOT sort of space so

00:06:40,370 --> 00:06:44,990
you can have multiple applications

00:06:42,010 --> 00:06:53,990
running on a single device and

00:06:44,990 --> 00:06:58,490
of going to interact with each other yes

00:06:53,990 --> 00:07:02,810
so obviously with IAT being such a big

00:06:58,490 --> 00:07:07,130
space and it being relatively undefined

00:07:02,810 --> 00:07:08,539
we're not going I'm not going to be able

00:07:07,130 --> 00:07:12,979
to do it all and the other people

00:07:08,539 --> 00:07:14,630
involved I'm not going to be able to do

00:07:12,979 --> 00:07:19,389
it so we'll obviously be building a

00:07:14,630 --> 00:07:22,160
community getting feedback contributing

00:07:19,389 --> 00:07:24,740
yeah and and basically the community

00:07:22,160 --> 00:07:27,289
might be able to help define where we're

00:07:24,740 --> 00:07:29,780
going here because you know different

00:07:27,289 --> 00:07:31,729
people have different ideas around IOT I

00:07:29,780 --> 00:07:33,490
don't think anything one it's

00:07:31,729 --> 00:07:39,740
particularly right or particularly wrong

00:07:33,490 --> 00:07:45,229
and I think sort of evolving IOT as a

00:07:39,740 --> 00:07:48,400
whole sort of woman make the IOT Edition

00:07:45,229 --> 00:07:48,400
sort of the best it can be

00:07:49,360 --> 00:07:55,310
right I'm just going to do a quick demo

00:07:52,009 --> 00:07:58,940
here it was meant to be atomic at the

00:07:55,310 --> 00:08:00,800
moment of fedora 28 atomic compose is

00:07:58,940 --> 00:08:02,360
fairly broken I spend a bunch of time

00:08:00,800 --> 00:08:08,930
yesterday and today trying to get it

00:08:02,360 --> 00:08:10,580
working and well you know they say you

00:08:08,930 --> 00:08:16,630
should never work with children or

00:08:10,580 --> 00:08:16,630
animals or live demos so right

00:09:08,490 --> 00:09:13,430
can everyone say that or should we go

00:09:10,800 --> 00:09:13,430
get bigger again

00:09:23,970 --> 00:09:34,050
yeah I said this is standard fedora with

00:09:30,210 --> 00:09:36,150
atomic you'll get you'll get a send grub

00:09:34,050 --> 00:09:38,570
as you would understand with lemmings

00:09:36,150 --> 00:09:38,570
destroy

00:09:53,560 --> 00:09:59,319
and this is actually the new raspberry

00:09:56,230 --> 00:10:00,879
pi 3 plus I was actually going to demo

00:09:59,319 --> 00:10:02,379
it on a dragon board but I didn't know

00:10:00,879 --> 00:10:05,040
whether I'd actually have standard power

00:10:02,379 --> 00:10:05,040
to be able to run

00:10:19,310 --> 00:10:27,889
so I'm using poke man here which is

00:10:24,259 --> 00:10:34,600
basically a container runtime similar to

00:10:27,889 --> 00:10:37,759
that of docker works very very similar

00:10:34,600 --> 00:10:40,249
except it's quite a bit more lightweight

00:10:37,759 --> 00:10:43,629
than the docker daemon which is very

00:10:40,249 --> 00:10:43,629
useful for constrained devices

00:11:01,829 --> 00:11:06,929
I downloaded the image earlier so that

00:11:03,869 --> 00:11:10,529
we wouldn't actually have to do it with

00:11:06,929 --> 00:11:13,199
conference Wi-Fi completely but yeah so

00:11:10,529 --> 00:11:16,559
it'll basically just run up and we have

00:11:13,199 --> 00:11:19,220
containers just like most other ordinary

00:11:16,559 --> 00:11:19,220
platforms

00:11:34,800 --> 00:11:44,339
yeah so within the IOT working group the

00:11:41,550 --> 00:11:48,800
pleasure page is very similar to github

00:11:44,339 --> 00:11:51,690
and all our repositories issue trackers

00:11:48,800 --> 00:11:54,959
milestones are Effie's and all of that

00:11:51,690 --> 00:11:57,779
sort of thing will be moved through

00:11:54,959 --> 00:12:01,170
there we obviously have a twitter handle

00:11:57,779 --> 00:12:04,260
and an IRC channel and most of the sort

00:12:01,170 --> 00:12:07,560
of discussions about the features

00:12:04,260 --> 00:12:09,779
functionality release cycles will happen

00:12:07,560 --> 00:12:13,170
there the intention at the moment is to

00:12:09,779 --> 00:12:15,000
do a four-week release cycle so it'll be

00:12:13,170 --> 00:12:17,640
quite a bit quicker than the traditional

00:12:15,000 --> 00:12:21,810
four or a six month cycle one of the

00:12:17,640 --> 00:12:25,740
advantages of atomic is that we can roll

00:12:21,810 --> 00:12:29,540
between Fedora 28 29 to 30 without the

00:12:25,740 --> 00:12:32,580
usual upgrade pane and upgrade path so

00:12:29,540 --> 00:12:34,410
every six months or so when the

00:12:32,580 --> 00:12:38,610
underlying Fedora that we're basing it

00:12:34,410 --> 00:12:40,920
on is Dean Sabol for what we're using in

00:12:38,610 --> 00:12:43,649
IOT will just seamlessly move the

00:12:40,920 --> 00:12:46,440
underlying and so you know every six

00:12:43,649 --> 00:12:50,760
months or so W a slightly larger update

00:12:46,440 --> 00:12:53,790
Delta but when we move from say Fedora

00:12:50,760 --> 00:12:58,230
28 to 12 29 but ultimately the end user

00:12:53,790 --> 00:13:00,959
will just receive a monthly feature sort

00:12:58,230 --> 00:13:05,220
of enhancement every month and the

00:13:00,959 --> 00:13:08,520
standard Fedora security enhancements

00:13:05,220 --> 00:13:11,850
and CPUs will go out sort of on a daily

00:13:08,520 --> 00:13:15,750
or every few daily basis so they'll be

00:13:11,850 --> 00:13:17,850
just from a similar to a standard

00:13:15,750 --> 00:13:21,570
District point of view we get all the

00:13:17,850 --> 00:13:24,329
functionality of you know the Red Hat

00:13:21,570 --> 00:13:27,360
security team that helps with fedora

00:13:24,329 --> 00:13:29,790
with a bunch of security CPAs and all of

00:13:27,360 --> 00:13:32,550
that will just happen underneath and

00:13:29,790 --> 00:13:35,760
then sort of a monthly release cycle

00:13:32,550 --> 00:13:39,000
will just sort of add features as we go

00:13:35,760 --> 00:13:40,370
and most of the discussion around that

00:13:39,000 --> 00:13:44,660
will happen on the

00:13:40,370 --> 00:13:47,660
my own list so does anyone have any

00:13:44,660 --> 00:13:50,569
questions so what you see is being

00:13:47,660 --> 00:13:52,309
unique about IOT like vs. like embedded

00:13:50,569 --> 00:13:54,230
like the door in bedded or something

00:13:52,309 --> 00:13:58,160
anyway what is it about the IOT space

00:13:54,230 --> 00:13:59,870
that's going to be where you have the

00:13:58,160 --> 00:14:02,990
unique requirements kind of down at the

00:13:59,870 --> 00:14:07,459
platform level so the question for the

00:14:02,990 --> 00:14:11,329
camera is what do I see unique in IOT as

00:14:07,459 --> 00:14:14,420
opposed to embedded probably nothing in

00:14:11,329 --> 00:14:17,809
particular and the core minimal

00:14:14,420 --> 00:14:23,120
underlying atomic basis that's used for

00:14:17,809 --> 00:14:25,730
IOT for all intents and purposes is and

00:14:23,120 --> 00:14:28,699
it can be used for an embedded platform

00:14:25,730 --> 00:14:30,759
and other things there have been other

00:14:28,699 --> 00:14:33,740
people within the Fedora project of

00:14:30,759 --> 00:14:38,180
looking to use that as a basis for other

00:14:33,740 --> 00:14:39,709
things like Sdn as well so it's probably

00:14:38,180 --> 00:14:41,920
as much about a label and the

00:14:39,709 --> 00:14:44,660
functionality that we add on top of that

00:14:41,920 --> 00:14:48,170
which is more of a focus on IOT as

00:14:44,660 --> 00:14:51,709
opposed to being necessarily something

00:14:48,170 --> 00:14:54,829
distinct lead IOT versus embedded

00:14:51,709 --> 00:14:58,550
although you know at the moment I have a

00:14:54,829 --> 00:15:01,999
bunch of ideas but you know in the next

00:14:58,550 --> 00:15:05,809
you know a few weeks as we start to get

00:15:01,999 --> 00:15:08,480
all the process together and get sort of

00:15:05,809 --> 00:15:11,179
nightly development images that people

00:15:08,480 --> 00:15:13,069
can start to keep the tires on I suspect

00:15:11,179 --> 00:15:16,399
that will evolve and change pretty

00:15:13,069 --> 00:15:18,800
quickly you know having ideas of how I

00:15:16,399 --> 00:15:20,629
think things are going to work versus

00:15:18,800 --> 00:15:26,029
you know how people start to use it

00:15:20,629 --> 00:15:27,769
feedback we get I was at ALC open IOT

00:15:26,029 --> 00:15:29,209
last week and obviously this week I've

00:15:27,769 --> 00:15:33,019
had a bunch of different discussions

00:15:29,209 --> 00:15:34,399
with people that have been interesting

00:15:33,019 --> 00:15:34,800
and those sort of things that people

00:15:34,399 --> 00:15:37,199
want

00:15:34,800 --> 00:15:38,779
with it and the ideas that other people

00:15:37,199 --> 00:15:42,569
had for it

00:15:38,779 --> 00:15:45,899
for me it's fantastic because people

00:15:42,569 --> 00:15:47,339
have ideas about what they want to do

00:15:45,899 --> 00:15:54,749
and how they want to go about it that I

00:15:47,339 --> 00:15:57,029
hadn't even thought of um so do you see

00:15:54,749 --> 00:15:58,619
it being is it gonna be running on end

00:15:57,029 --> 00:16:00,449
point type devices or is it gonna be

00:15:58,619 --> 00:16:03,629
more of like a gate a gateway

00:16:00,449 --> 00:16:05,189
functionality like where do you see so

00:16:03,629 --> 00:16:06,720
episode of functionality that I'm

00:16:05,189 --> 00:16:08,160
personally going to be focus on

00:16:06,720 --> 00:16:11,369
initially is going to be gateway

00:16:08,160 --> 00:16:14,540
functionality there's a bunch of

00:16:11,369 --> 00:16:17,819
different people in the Fedora project

00:16:14,540 --> 00:16:19,619
like but there's a bunch of people that

00:16:17,819 --> 00:16:26,699
want to use it as a basis for like a

00:16:19,619 --> 00:16:29,309
home gateway system in containers I mean

00:16:26,699 --> 00:16:34,079
ultimately the initial focus of fedora

00:16:29,309 --> 00:16:35,730
IOT will be a device or an OS that you

00:16:34,079 --> 00:16:40,529
can run on a device either an endpoint

00:16:35,730 --> 00:16:42,600
device and like I was having a chat with

00:16:40,529 --> 00:16:45,269
some of the Xilinx guys last night and

00:16:42,600 --> 00:16:47,040
some of the ideas that they had with

00:16:45,269 --> 00:16:49,889
regards to the J's and stuff for

00:16:47,040 --> 00:16:53,100
endpoint devices were fascinating and

00:16:49,889 --> 00:16:56,279
I've not had a lot to do with FPGA

00:16:53,100 --> 00:16:58,379
things and some of the things that like

00:16:56,279 --> 00:17:00,660
they were saying that they're seen done

00:16:58,379 --> 00:17:04,529
with FPGAs was like wow you can do that

00:17:00,660 --> 00:17:07,709
but that's cool and I mean ultimately

00:17:04,529 --> 00:17:09,480
end point versus gateway ends up being

00:17:07,709 --> 00:17:14,880
the functionality that you put on top of

00:17:09,480 --> 00:17:17,370
it and sort of in the medium term some

00:17:14,880 --> 00:17:20,850
of them my intention is essentially to

00:17:17,370 --> 00:17:25,919
have not just to focus on endpoint

00:17:20,850 --> 00:17:28,350
gateway devices but you know messaging

00:17:25,919 --> 00:17:32,010
and so stuff that can be run into the

00:17:28,350 --> 00:17:34,700
data center into the cloud as well a lot

00:17:32,010 --> 00:17:37,889
of conversations that I've had with

00:17:34,700 --> 00:17:40,770
customers and companies about the stuff

00:17:37,889 --> 00:17:44,250
they're doing with IOT is they're

00:17:40,770 --> 00:17:45,430
interested in full end-to-end platforms

00:17:44,250 --> 00:17:47,590
so that they don't

00:17:45,430 --> 00:17:49,120
locked into particular cloud providers

00:17:47,590 --> 00:17:51,430
or their data gets locked into

00:17:49,120 --> 00:17:53,430
particular cloud providers so that if

00:17:51,430 --> 00:17:57,880
they want to move from one to another

00:17:53,430 --> 00:18:00,280
they don't there's been a few companies

00:17:57,880 --> 00:18:03,610
I've spoken to where they've sort of

00:18:00,280 --> 00:18:06,130
been locked into particular companies

00:18:03,610 --> 00:18:07,930
just due to unable being able to get

00:18:06,130 --> 00:18:10,710
their data out so there's a lot of

00:18:07,930 --> 00:18:14,910
people interested in the full end-to-end

00:18:10,710 --> 00:18:18,040
stuff and so being able to do demos and

00:18:14,910 --> 00:18:21,610
prove that you can do that with a fully

00:18:18,040 --> 00:18:25,810
open source tag is very interesting but

00:18:21,610 --> 00:18:30,100
obviously IOT is a massive massive sort

00:18:25,810 --> 00:18:32,860
of space and you know I could probably

00:18:30,100 --> 00:18:35,740
if I was allowed to dedicate you know a

00:18:32,860 --> 00:18:37,750
quarter of RedHat to deliver stuff like

00:18:35,740 --> 00:18:41,860
that and still not have enough time to

00:18:37,750 --> 00:18:46,120
do it all and so with the resources that

00:18:41,860 --> 00:18:48,840
I have I need to focus to get you know a

00:18:46,120 --> 00:18:51,220
few bits and pieces and as things evolve

00:18:48,840 --> 00:18:54,780
you know I don't see it being just

00:18:51,220 --> 00:18:58,710
endpoint or just gateway but evolving to

00:18:54,780 --> 00:18:58,710
all sorts of different things

00:19:05,660 --> 00:19:12,780
and so with regards to the

00:19:10,500 --> 00:19:16,140
virtualization part the pot man part so

00:19:12,780 --> 00:19:20,370
is the idea that you have RPMs to

00:19:16,140 --> 00:19:23,160
install the basic OS and then from there

00:19:20,370 --> 00:19:25,950
you move into pot man and use containers

00:19:23,160 --> 00:19:30,299
from there only well what would be the

00:19:25,950 --> 00:19:34,799
split here so so OS what OS tree does is

00:19:30,299 --> 00:19:40,309
takes a bunch of rpms and essentially

00:19:34,799 --> 00:19:43,890
ejects it into a get like filesystem and

00:19:40,309 --> 00:19:45,870
so the base operating system

00:19:43,890 --> 00:19:50,190
functionality will be an OS tree compose

00:19:45,870 --> 00:19:53,510
which has rpms as an import but the

00:19:50,190 --> 00:19:57,140
users don't install the rpms they get

00:19:53,510 --> 00:19:59,970
basically a delta or an initial sort of

00:19:57,140 --> 00:20:02,190
commit and then deltas are applied on

00:19:59,970 --> 00:20:05,160
top of that like a git rebase sort of

00:20:02,190 --> 00:20:07,919
thing so the base OS will be based on

00:20:05,160 --> 00:20:12,270
that which while it has rpms as input

00:20:07,919 --> 00:20:15,960
isn't actually sort of RPM sort of and

00:20:12,270 --> 00:20:18,960
then the idea would be to use you know

00:20:15,960 --> 00:20:21,210
containers when the docker containers

00:20:18,960 --> 00:20:23,280
OCI containers and what-have-you all the

00:20:21,210 --> 00:20:25,770
stuff all the content fedora has it

00:20:23,280 --> 00:20:31,020
contained built pipeline so you can say

00:20:25,770 --> 00:20:34,110
give me a mosquito container and that

00:20:31,020 --> 00:20:37,850
build process is an OC way or what comes

00:20:34,110 --> 00:20:45,120
out of that is a cross architecture so

00:20:37,850 --> 00:20:49,500
x86 32 and 64-bit container and the

00:20:45,120 --> 00:20:51,450
container build pipeline has takes note

00:20:49,500 --> 00:20:53,730
of all the dependencies of that see if

00:20:51,450 --> 00:20:57,690
there's a notebook it knows what version

00:20:53,730 --> 00:21:00,780
of open SSL goes into that and if

00:20:57,690 --> 00:21:03,470
there's a vulnerability in open SSL when

00:21:00,780 --> 00:21:05,880
it goes through the fedora update system

00:21:03,470 --> 00:21:07,559
the container pipeline will be able to

00:21:05,880 --> 00:21:12,090
regenerate every single container that

00:21:07,559 --> 00:21:15,210
has say open SSL in it those containers

00:21:12,090 --> 00:21:17,850
can be either OS 3 based or RPM based

00:21:15,210 --> 00:21:20,160
the base operating system the intention

00:21:17,850 --> 00:21:23,760
is it won't be op the invoice will be

00:21:20,160 --> 00:21:25,380
almost trade based so you can light up

00:21:23,760 --> 00:21:29,280
games on top of that all containers

00:21:25,380 --> 00:21:31,650
which rather atomic or IBM Feist does

00:21:29,280 --> 00:21:33,330
that answer your question well what I

00:21:31,650 --> 00:21:37,050
was trying to figure out is kind of

00:21:33,330 --> 00:21:40,650
where where the the migration will be

00:21:37,050 --> 00:21:43,760
because they're gonna have a bare host

00:21:40,650 --> 00:21:46,170
operating system which is going to have

00:21:43,760 --> 00:21:49,050
genuine food version I'm just gonna have

00:21:46,170 --> 00:21:51,929
you know if you take OpenSSL maybe a

00:21:49,050 --> 00:21:55,590
live OpenSSL at what point these stop

00:21:51,929 --> 00:21:57,480
using that in the IOT stack and start

00:21:55,590 --> 00:22:00,420
using a containerized version of these

00:21:57,480 --> 00:22:03,960
things and like more in terms of where

00:22:00,420 --> 00:22:06,390
the design is at how much is done on the

00:22:03,960 --> 00:22:11,340
host so the whole slide the intention is

00:22:06,390 --> 00:22:13,410
to be pure always straight but that's OS

00:22:11,340 --> 00:22:16,850
tree but not containerize at that point

00:22:13,410 --> 00:22:19,170
that's correct right so so is it really

00:22:16,850 --> 00:22:20,910
in other words are you going to create

00:22:19,170 --> 00:22:23,940
packages for all the things that are

00:22:20,910 --> 00:22:26,040
usually in fedora and say you can

00:22:23,940 --> 00:22:27,929
install them all on the host or you're

00:22:26,040 --> 00:22:29,580
not gonna bother with 90% of them and

00:22:27,929 --> 00:22:32,670
just say no just do containers on

00:22:29,580 --> 00:22:35,400
correct that so I always freaking to

00:22:32,670 --> 00:22:39,510
like standard docker style containers

00:22:35,400 --> 00:22:42,059
you can also do layers and and that can

00:22:39,510 --> 00:22:43,500
be an OS tree base layer so you can

00:22:42,059 --> 00:22:45,420
upgrade the layer separate to the

00:22:43,500 --> 00:22:47,280
underlying thing without having all the

00:22:45,420 --> 00:22:49,260
container so if you've got a single

00:22:47,280 --> 00:22:52,140
application that's running on an IOT

00:22:49,260 --> 00:22:54,120
endpoint that's fairly constrained you

00:22:52,140 --> 00:22:56,370
may not want all the extra runtime of

00:22:54,120 --> 00:23:00,690
the container and you want to treat that

00:22:56,370 --> 00:23:03,420
as a single sort of cohesive blob and

00:23:00,690 --> 00:23:05,820
and that will all be OS true you can I

00:23:03,420 --> 00:23:07,490
put full a development style platform

00:23:05,820 --> 00:23:10,890
where people just want to play around

00:23:07,490 --> 00:23:13,590
you can install rpms on top of that or

00:23:10,890 --> 00:23:15,929
containers but like if it was a

00:23:13,590 --> 00:23:18,690
production system I'd expected either to

00:23:15,929 --> 00:23:22,200
be all containers or all layers but not

00:23:18,690 --> 00:23:23,010
at the end generally ok yeah I guess my

00:23:22,200 --> 00:23:24,780
question was a

00:23:23,010 --> 00:23:26,820
are you gonna have you know pick

00:23:24,780 --> 00:23:29,430
anything Apache nodejs

00:23:26,820 --> 00:23:31,530
you're gonna have an RPM bass version

00:23:29,430 --> 00:23:34,290
for it and a container based version or

00:23:31,530 --> 00:23:36,900
or one or both or it depends on what

00:23:34,290 --> 00:23:39,690
people want to do my focus initially

00:23:36,900 --> 00:23:41,790
will be on enabling people to run

00:23:39,690 --> 00:23:44,690
applications what they choose to run

00:23:41,790 --> 00:23:44,690
will depend

00:24:00,730 --> 00:24:02,790

YouTube URL: https://www.youtube.com/watch?v=tp_9C_VDbzY


