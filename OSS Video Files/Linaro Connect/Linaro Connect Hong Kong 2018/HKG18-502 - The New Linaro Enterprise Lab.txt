Title: HKG18-502 - The New Linaro Enterprise Lab
Publication date: 2019-05-09
Playlist: Linaro Connect Hong Kong 2018
Description: 
	Session ID: HKG18-502
Session Name: HKG18-502 - The New Linaro Enterprise Lab
Speaker: Renato Golin
Track: LEG


★ Session Summary ★
To improve reliability, performance and maintainability, LEG is moving all of its labs (DevCloud, MLab, HPC, etc) out of the Cambridge office into a professional data centre. 

In this presentation we show what problems we had and how the new lab will solve them.

This pattern will be reproduced in other data centres around the world, in partnership with our members, to develop new best practices for Arm enterprise deployments.
---------------------------------------------------
★ Resources ★
Event Page: http://connect.linaro.org/resource/hkg18/hkg18-502/
Presentation: http://connect.linaro.org.s3.amazonaws.com/hkg18/presentations/hkg18-502.pdf
Video: http://connect.linaro.org.s3.amazonaws.com/hkg18/videos/hkg18-502.mp4
 ---------------------------------------------------
★ Event Details ★
Linaro Connect Hong Kong 2018 (HKG18)
19-23 March 2018 
Regal Airport Hotel Hong Kong

---------------------------------------------------
Keyword: LEG
'http://www.linaro.org'
'http://connect.linaro.org'
---------------------------------------------------
Follow us on Social Media
https://www.facebook.com/LinaroOrg
https://www.youtube.com/user/linaroorg?sub_confirmation=1
https://www.linkedin.com/company/1026961
Captions: 
	00:00:04,370 --> 00:00:06,430
you

00:00:19,230 --> 00:00:24,699
this tapas of it it provides because

00:00:22,000 --> 00:00:27,650
there was a little better concern so we

00:00:24,699 --> 00:00:35,960
decided to talk about

00:00:27,650 --> 00:00:40,890
we have a very simple that we talk about

00:00:35,960 --> 00:00:43,470
how romantic opera before and why that

00:00:40,890 --> 00:00:45,809
was idea how we're managing it now

00:00:43,470 --> 00:00:47,700
what's mr. commissioner what is the end

00:00:45,809 --> 00:00:51,830
lab and then we could not talk a bit

00:00:47,700 --> 00:00:55,140
about how the it's BC report

00:00:51,830 --> 00:00:58,200
so the olih was a rant of machines in a

00:00:55,140 --> 00:01:02,040
few rods in our office when you start

00:00:58,200 --> 00:01:05,190
building machines in the office it gets

00:01:02,040 --> 00:01:08,490
very loud you know they can hear the

00:01:05,190 --> 00:01:09,870
servers and I wasn't very efficient the

00:01:08,490 --> 00:01:14,010
air-conditioning wasn't really keeping

00:01:09,870 --> 00:01:15,720
up with the notion is that we have so we

00:01:14,010 --> 00:01:17,970
decided to move out of there to a

00:01:15,720 --> 00:01:20,010
datacenter we did grow the lava

00:01:17,970 --> 00:01:22,830
chemically over time we didn't have

00:01:20,010 --> 00:01:23,780
enough power in the office for other

00:01:22,830 --> 00:01:25,580
servers

00:01:23,780 --> 00:01:29,420
we didn't have enough air conditioning

00:01:25,580 --> 00:01:31,280
either and as I said the nurse was

00:01:29,420 --> 00:01:33,130
getting everyone here in Florida the

00:01:31,280 --> 00:01:35,510
others

00:01:33,130 --> 00:01:38,780
the new labs in Weymouth

00:01:35,510 --> 00:01:41,210
so with fires on data centers plates we

00:01:38,780 --> 00:01:44,170
have without not powerfully epicly when

00:01:41,210 --> 00:01:47,540
you can expect from the data center

00:01:44,170 --> 00:01:50,390
there's biometric access we were all our

00:01:47,540 --> 00:01:53,830
finger registers so we can't go on

00:01:50,390 --> 00:01:56,950
finances members and then they do

00:01:53,830 --> 00:02:01,490
regular testing for power and heritage

00:01:56,950 --> 00:02:03,320
whatever things go wrong they do they

00:02:01,490 --> 00:02:06,500
know how to handle a feather in our

00:02:03,320 --> 00:02:08,420
database we have our infrastructure the

00:02:06,500 --> 00:02:10,690
curtain on support so before our

00:02:08,420 --> 00:02:14,150
infrastructure was all manually set up

00:02:10,690 --> 00:02:16,459
we thought about wasn't very reliable is

00:02:14,150 --> 00:02:20,090
a thing was to go down we would be in a

00:02:16,459 --> 00:02:24,290
big trouble - terracotta we do have

00:02:20,090 --> 00:02:26,800
multiple irradiance its deposits on set

00:02:24,290 --> 00:02:26,800
of users

00:02:28,440 --> 00:02:37,410
this is what the land looks like today

00:02:30,720 --> 00:02:39,450
we have 4 X 1 has the said much effusive

00:02:37,410 --> 00:02:42,210
machines undergone our offset will give

00:02:39,450 --> 00:02:44,460
to the safe community we have an HP

00:02:42,210 --> 00:02:47,280
cielo which is another rack of machines

00:02:44,460 --> 00:02:49,890
we are the leg machine knowledge about

00:02:47,280 --> 00:02:53,520
em laugh music that's where metal

00:02:49,890 --> 00:02:56,550
servers for fighting and all other teams

00:02:53,520 --> 00:03:00,690
in LA and then we run the developer

00:02:56,550 --> 00:03:03,180
flowers with next day we used to have on

00:03:00,690 --> 00:03:07,230
Twitter but now it together - so that we

00:03:03,180 --> 00:03:09,720
have a bit of redundancy and then it of

00:03:07,230 --> 00:03:11,580
the each of their archives with Roman

00:03:09,720 --> 00:03:14,060
villas so that they don't interfere with

00:03:11,580 --> 00:03:14,060
each other

00:03:15,010 --> 00:03:17,610
well

00:03:22,660 --> 00:03:27,130
so notice that we have switches

00:03:24,970 --> 00:03:29,500
obviously they track so that we can

00:03:27,130 --> 00:03:31,690
collected machines - we have to network

00:03:29,500 --> 00:03:34,510
so management network just put the VMC's

00:03:31,690 --> 00:03:37,030
so that we can manage it and then we

00:03:34,510 --> 00:03:40,180
have another network for testing or for

00:03:37,030 --> 00:03:42,040
like the normal traffic between machines

00:03:40,180 --> 00:03:43,780
and we have a double there are

00:03:42,040 --> 00:03:49,110
traditional and I'm gonna talk about

00:03:43,780 --> 00:03:52,030
that in a so what prohibition and dance

00:03:49,110 --> 00:03:54,070
okay let me backtrack the problem we had

00:03:52,030 --> 00:03:56,110
before is that we had a lot of machines

00:03:54,070 --> 00:03:59,620
that couldn't be easily shared amongst

00:03:56,110 --> 00:04:01,570
people so everybody was racing tickets

00:03:59,620 --> 00:04:04,510
on asking for a machine to be assigned

00:04:01,570 --> 00:04:07,860
to them and it took a very long time we

00:04:04,510 --> 00:04:10,030
had to give people our routine several

00:04:07,860 --> 00:04:13,000
infrastructure server so that they put

00:04:10,030 --> 00:04:15,670
up with their limited capacity and I was

00:04:13,000 --> 00:04:19,560
wrong our rather comfortable to use so

00:04:15,670 --> 00:04:23,830
we've put together a small application

00:04:19,560 --> 00:04:27,010
that manages user access machines

00:04:23,830 --> 00:04:28,600
it has images that people can upload by

00:04:27,010 --> 00:04:30,660
themselves or we're going to tell about

00:04:28,600 --> 00:04:30,660
that

00:04:30,970 --> 00:04:41,300
he assigns IP to Ramallah to speed CP by

00:04:35,629 --> 00:04:44,330
a Thiele it is easy for us because so

00:04:41,300 --> 00:04:46,759
say I - I need help to move to nudity so

00:04:44,330 --> 00:04:49,539
we give them access to Olivia

00:04:46,759 --> 00:04:52,639
we determine access to this application

00:04:49,539 --> 00:04:55,190
and then we assign a machine today from

00:04:52,639 --> 00:04:57,680
their own will okay they can install

00:04:55,190 --> 00:04:59,360
everyone away they can testing materials

00:04:57,680 --> 00:05:01,810
they can test for every application in

00:04:59,360 --> 00:05:01,810
effect

00:05:02,800 --> 00:05:09,009
if you suspect me so I don't really care

00:05:07,569 --> 00:05:11,080
we recommend up and you get a new

00:05:09,009 --> 00:05:12,550
machine you reinstall it I have people

00:05:11,080 --> 00:05:14,530
sometimes I know what so you should

00:05:12,550 --> 00:05:16,360
probably wait no no no you should be

00:05:14,530 --> 00:05:21,310
reinstalling the machine this is your

00:05:16,360 --> 00:05:25,659
machine so the way we manage machines is

00:05:21,310 --> 00:05:28,000
by talking via ipmi with a PLC so if I

00:05:25,659 --> 00:05:30,810
play - reporting the servers will race

00:05:28,000 --> 00:05:30,810
back together

00:05:31,440 --> 00:05:36,240
and then it also has an API so that

00:05:34,170 --> 00:05:38,010
whenever you talk with your minor

00:05:36,240 --> 00:05:40,950
testing and you know you're ready to

00:05:38,010 --> 00:05:43,260
start using dessert automatically you

00:05:40,950 --> 00:05:46,380
can upload your images automatically you

00:05:43,260 --> 00:05:49,280
can trigger the machine you know set it

00:05:46,380 --> 00:05:49,280
up with your name image

00:05:49,600 --> 00:05:53,460
you guys have questions well

00:05:59,970 --> 00:06:02,540
money

00:06:03,520 --> 00:06:15,190
other network medium-light eating done

00:06:08,820 --> 00:06:16,350
so what do you mean by managed set up

00:06:15,190 --> 00:06:24,000
with

00:06:16,350 --> 00:06:26,250
this call for ira network or we haven't

00:06:24,000 --> 00:06:27,060
tried it so what it does is it uses a

00:06:26,250 --> 00:06:29,400
theologian

00:06:27,060 --> 00:06:32,070
mr. provisional mouse with the network

00:06:29,400 --> 00:06:34,020
is and enhance the market research so

00:06:32,070 --> 00:06:35,010
when you can say to wait for this

00:06:34,020 --> 00:06:38,040
marketers

00:06:35,010 --> 00:06:39,810
I want this IP and whenever he sees the

00:06:38,040 --> 00:06:42,030
MacArthur's he will serve the IP to the

00:06:39,810 --> 00:06:44,910
Machine and this is good because then

00:06:42,030 --> 00:06:47,700
users can control the way up his son and

00:06:44,910 --> 00:06:49,800
I only took care of an emotion infinim

00:06:47,700 --> 00:06:58,320
on everything we have tested it if we

00:06:49,800 --> 00:07:00,810
had need special identifiers to obtain I

00:06:58,320 --> 00:07:02,610
get a girl okay

00:07:00,810 --> 00:07:07,290
so then it won't work out of course open

00:07:02,610 --> 00:07:10,310
to a neighborhood project it is so

00:07:07,290 --> 00:07:12,810
currently it's sitting under the dinara

00:07:10,310 --> 00:07:15,570
github which is making it difficult to

00:07:12,810 --> 00:07:17,700
the manager to get new contributors from

00:07:15,570 --> 00:07:20,160
retribution from people outside Lee now

00:07:17,700 --> 00:07:22,590
so we're gonna move New Orleans

00:07:20,160 --> 00:07:24,930
de-provisioning by all its services that

00:07:22,590 --> 00:07:29,070
allow the functionality like the TFTP

00:07:24,930 --> 00:07:31,020
proxy or the control management thing we

00:07:29,070 --> 00:07:32,270
will not let them up out there mr.

00:07:31,020 --> 00:07:34,280
provisional Roger

00:07:32,270 --> 00:07:36,349
and give happen so that we can have a

00:07:34,280 --> 00:07:39,280
say could pick whatever disease

00:07:36,349 --> 00:07:39,280
thank you

00:07:40,569 --> 00:07:47,069
all right sounds good any questions

00:07:52,090 --> 00:07:58,690
so this is a bit of reiteration of booth

00:07:55,090 --> 00:08:02,139
said we need women and Hasani arrives we

00:07:58,690 --> 00:08:04,870
give VPN access we keep the professional

00:08:02,139 --> 00:08:06,790
access and then we put we assigned on a

00:08:04,870 --> 00:08:10,090
machine or two or three or however many

00:08:06,790 --> 00:08:11,470
they need of they go whenever they don't

00:08:10,090 --> 00:08:13,120
need the service anymore they can tell

00:08:11,470 --> 00:08:18,070
us we can assign them to someone else

00:08:13,120 --> 00:08:21,070
that's not true also you can use the API

00:08:18,070 --> 00:08:24,970
to loan service so the idea is that

00:08:21,070 --> 00:08:28,600
eventually we will not be assigning

00:08:24,970 --> 00:08:30,820
machines to say an automatic process for

00:08:28,600 --> 00:08:33,250
testing we will be assigned for them in

00:08:30,820 --> 00:08:37,180
the mind so you would have a job that

00:08:33,250 --> 00:08:39,339
will say ok I need a current server with

00:08:37,180 --> 00:08:42,039
this much memory and he will search our

00:08:39,339 --> 00:08:44,340
machines information is free he would

00:08:42,039 --> 00:08:47,760
have signed into that job and then the

00:08:44,340 --> 00:08:49,440
it's totally right and then free snow

00:08:47,760 --> 00:08:55,850
machine for someone else to assess the

00:08:49,440 --> 00:08:55,850
idea I think that's pretty much it

00:08:55,949 --> 00:08:59,360
do we have anybody else

00:09:00,300 --> 00:09:07,060
what I'm leading the week so the

00:09:05,470 --> 00:09:08,800
question I had was does anybody else

00:09:07,060 --> 00:09:20,379
using the MBLAQ

00:09:08,800 --> 00:09:22,809
yeah very mind this is working progress

00:09:20,379 --> 00:09:27,759
so anything that's missing can be out

00:09:22,809 --> 00:09:29,319
there and you're looking for about there

00:09:27,759 --> 00:09:31,540
are there issues there so the drill it

00:09:29,319 --> 00:09:34,059
is my achieve the open you can look at

00:09:31,540 --> 00:09:35,769
the list of issues have been one but

00:09:34,059 --> 00:09:38,139
please before implementing something

00:09:35,769 --> 00:09:40,269
will delete social I say our discuss it

00:09:38,139 --> 00:09:42,759
so that we are all in the same page when

00:09:40,269 --> 00:09:44,379
it comes to implementation because we

00:09:42,759 --> 00:09:47,399
don't know what like massive features to

00:09:44,379 --> 00:09:47,399
appear they are they

00:09:51,290 --> 00:09:53,800
so

00:09:54,279 --> 00:09:59,360
so with these perceptions I just want to

00:09:57,110 --> 00:10:01,940
protect with the best solution from my

00:09:59,360 --> 00:10:03,510
use case with these so generally I'm

00:10:01,940 --> 00:10:05,790
just looking for a

00:10:03,510 --> 00:10:09,870
root access to service or invisibility

00:10:05,790 --> 00:10:12,360
be tested not interested in keeping it

00:10:09,870 --> 00:10:14,310
around our food so I get to sit when I

00:10:12,360 --> 00:10:16,080
was using the developer I found that

00:10:14,310 --> 00:10:18,930
quite tricky to do this as well as I

00:10:16,080 --> 00:10:22,860
said earlier to specify a network or VPN

00:10:18,930 --> 00:10:24,510
as fair amount of knowledge currently

00:10:22,860 --> 00:10:27,690
the easiest way I found with getting

00:10:24,510 --> 00:10:30,300
myself a random piece of hardware is to

00:10:27,690 --> 00:10:32,899
use a larva job that I've set up to set

00:10:30,300 --> 00:10:35,700
it up and give me access so with this

00:10:32,899 --> 00:10:37,680
with the the mr. provisional approach

00:10:35,700 --> 00:10:40,200
for them in that sort of ease of use of

00:10:37,680 --> 00:10:43,410
getting just getting a machine up that I

00:10:40,200 --> 00:10:45,990
can SSH into from the Gecko yeah by you

00:10:43,410 --> 00:10:47,730
would still need to install it and user

00:10:45,990 --> 00:10:50,910
proceeded so essentially you would set

00:10:47,730 --> 00:10:53,100
it up once and then have a script that

00:10:50,910 --> 00:10:56,940
there's a couple of coats to the API and

00:10:53,100 --> 00:11:01,010
then you can reuse that over so I can

00:10:56,940 --> 00:11:01,010
have a pre count recipe exactly

00:11:03,320 --> 00:11:09,290
talk to her about oh now if you talk to

00:11:06,920 --> 00:11:13,160
her not oh he will tell you that it's

00:11:09,290 --> 00:11:16,250
the easiest thing that he's used so far

00:11:13,160 --> 00:11:17,780
to date it's a web interface you get in

00:11:16,250 --> 00:11:19,220
Meyer you start doing your stuff you can

00:11:17,780 --> 00:11:22,160
pull up the console or watch the thing

00:11:19,220 --> 00:11:26,170
dudes if you wanted to do it the manual

00:11:22,160 --> 00:11:30,230
way because of the API that thing that's

00:11:26,170 --> 00:11:32,840
really really easy to do well the other

00:11:30,230 --> 00:11:37,730
thing was with we could have gone for a

00:11:32,840 --> 00:11:40,790
free consultation so - testing is a big

00:11:37,730 --> 00:11:42,770
thing for us because it takes a lot of

00:11:40,790 --> 00:11:45,740
manual testing to get to a point where

00:11:42,770 --> 00:11:47,840
you cannot domain testing of the service

00:11:45,740 --> 00:11:50,420
so we wanted to be able to do manual

00:11:47,840 --> 00:11:52,880
testing whether you are or automatic

00:11:50,420 --> 00:11:56,020
testing with the API so we need a

00:11:52,880 --> 00:11:56,020
solution to cover it both

00:11:58,190 --> 00:12:02,940
so how exactly do you get access to the

00:12:01,440 --> 00:12:06,270
machines from the outside world

00:12:02,940 --> 00:12:08,520
so that was viola p.m. so you need to

00:12:06,270 --> 00:12:09,540
have a set up the BPM on your machine

00:12:08,520 --> 00:12:11,340
and yeah

00:12:09,540 --> 00:12:16,410
yeah you open the VPN I when you're

00:12:11,340 --> 00:12:19,500
inside Dilla one question are there

00:12:16,410 --> 00:12:21,840
plans for dns currently for internal

00:12:19,500 --> 00:12:28,410
motions yeah there is a there's an issue

00:12:21,840 --> 00:12:30,450
there about that yes so for some of the

00:12:28,410 --> 00:12:33,030
kitchens testing it needs a magical

00:12:30,450 --> 00:12:41,150
servers so that this architecture

00:12:33,030 --> 00:12:45,270
support the flexible flexible compose a

00:12:41,150 --> 00:12:48,330
class stuff server it will by internal

00:12:45,270 --> 00:12:50,970
internet by internal networking yes so

00:12:48,330 --> 00:12:53,220
it doesn't fully support it yet but the

00:12:50,970 --> 00:12:55,620
whole point of this work the reason why

00:12:53,220 --> 00:12:57,770
we further party is the way it is is to

00:12:55,620 --> 00:13:01,170
be able to test OpenStack multi know

00:12:57,770 --> 00:13:04,320
right right for example first on some of

00:13:01,170 --> 00:13:05,220
the passing it may need for example pin

00:13:04,320 --> 00:13:11,220
out

00:13:05,220 --> 00:13:14,060
fifteen yes saurus occasion as at a time

00:13:11,220 --> 00:13:17,519
maybe in rec while there are two servers

00:13:14,060 --> 00:13:20,490
reading and in rugby there are three

00:13:17,519 --> 00:13:22,470
servers unused so that you want

00:13:20,490 --> 00:13:25,290
and I always can also relate different

00:13:22,470 --> 00:13:31,290
drags eat Obama you could have a

00:13:25,290 --> 00:13:33,180
correlation across racks and at that

00:13:31,290 --> 00:13:35,310
point you can't connect them however you

00:13:33,180 --> 00:13:36,060
want as long as they can working I set

00:13:35,310 --> 00:13:39,270
up for Billy

00:13:36,060 --> 00:13:42,900
one thing that so yeah my vision today

00:13:39,270 --> 00:13:45,510
is is I want to be able to grow and make

00:13:42,900 --> 00:13:48,240
the cloud smaller depending on the

00:13:45,510 --> 00:13:49,740
market so whenever there's not a lot of

00:13:48,240 --> 00:13:51,810
demand on the cloud we will not be able

00:13:49,740 --> 00:13:53,190
to use the search for testing whenever

00:13:51,810 --> 00:13:55,830
there is a lot of them out of the cloud

00:13:53,190 --> 00:13:58,860
we want to put some bare metal on the

00:13:55,830 --> 00:14:00,720
cloud automatically so eventually we're

00:13:58,860 --> 00:14:03,240
going to be able to move machines

00:14:00,720 --> 00:14:04,700
between vegans with provision yes so

00:14:03,240 --> 00:14:06,710
that's the idea

00:14:04,700 --> 00:14:08,630
yeah I think the same idea is ours

00:14:06,710 --> 00:14:10,250
because we in Congress even our issue

00:14:08,630 --> 00:14:13,480
from customers requirements for

00:14:10,250 --> 00:14:16,480
evaluation yeah okay absolutely

00:14:13,480 --> 00:14:16,480
Thanks

00:14:19,730 --> 00:14:25,589
so I'll start this specific go to the

00:14:23,070 --> 00:14:28,110
general so I'm wanting to use it for

00:14:25,589 --> 00:14:31,350
doing Jenkins bells and testing of Java

00:14:28,110 --> 00:14:34,560
Duomo in the general where did the

00:14:31,350 --> 00:14:37,589
bishop persistence services stay and

00:14:34,560 --> 00:14:40,050
talk to the API such as a Jenkins server

00:14:37,589 --> 00:14:40,800
what do you mean persistent services

00:14:40,050 --> 00:14:42,570
like Jenkins

00:14:40,800 --> 00:14:45,390
I'd like to install Jenkins every week

00:14:42,570 --> 00:14:48,870
you want to know that I don't know okay

00:14:45,390 --> 00:14:50,700
so you would I mean you can put Aeneas

00:14:48,870 --> 00:14:53,610
wherever you can have it outside at work

00:14:50,700 --> 00:14:55,980
at your home or you can have it in the

00:14:53,610 --> 00:14:58,800
infrastructure server but you can't have

00:14:55,980 --> 00:15:00,990
it whatever you want to put it all in

00:14:58,800 --> 00:15:03,060
the developer cloud even as long as you

00:15:00,990 --> 00:15:06,630
have the keys to open the VP into the

00:15:03,060 --> 00:15:10,020
lab and use the service there yeah so

00:15:06,630 --> 00:15:12,440
the developer client is that I presume

00:15:10,020 --> 00:15:14,630
that's somewhat probably clicked

00:15:12,440 --> 00:15:18,089
because I would like some visibility

00:15:14,630 --> 00:15:22,320
what's been given access to machines

00:15:18,089 --> 00:15:23,700
ourselves the developer cloud obviously

00:15:22,320 --> 00:15:26,130
is in the next ride when you are not

00:15:23,700 --> 00:15:28,230
going to be able to talk from this wreck

00:15:26,130 --> 00:15:31,080
to that rocking turn because now we have

00:15:28,230 --> 00:15:33,300
a security problem but what you can do

00:15:31,080 --> 00:15:38,510
is have a public IP on your developer

00:15:33,300 --> 00:15:42,470
cloud that then accesses via VPN the lab

00:15:38,510 --> 00:15:42,470
we're talking about each other okay

00:15:43,380 --> 00:15:54,270
any more questions all right so so

00:15:51,270 --> 00:16:00,290
another feature the new lab is the ABC

00:15:54,270 --> 00:16:05,190
Sigma the point of the lab is to have

00:16:00,290 --> 00:16:09,860
that controlled by a lab able to have

00:16:05,190 --> 00:16:14,360
continuous integration of open HPC and

00:16:09,860 --> 00:16:17,850
this relies on dynamically provisioning

00:16:14,360 --> 00:16:22,950
multiple clusters and installing the

00:16:17,850 --> 00:16:28,350
open HPC on it so thanks to the work of

00:16:22,950 --> 00:16:31,050
Jefferson we are able to be able to

00:16:28,350 --> 00:16:37,260
install open HPC on those clusters and

00:16:31,050 --> 00:16:45,050
we have set up all infrastructure set up

00:16:37,260 --> 00:16:47,910
to actually have those those clusters

00:16:45,050 --> 00:16:53,490
being provisioned by ansible

00:16:47,910 --> 00:16:58,790
and scripts one of the requirements for

00:16:53,490 --> 00:17:03,630
this is to also protect each cluster

00:16:58,790 --> 00:17:07,080
from unauthorized access because we have

00:17:03,630 --> 00:17:09,180
clusters of similar machines and those

00:17:07,080 --> 00:17:13,350
machines obviously County

00:17:09,180 --> 00:17:16,589
I for example kayvyun machines can't be

00:17:13,350 --> 00:17:19,170
accessed by Huawei people for benchmark

00:17:16,589 --> 00:17:22,520
purposes because that would be a breach

00:17:19,170 --> 00:17:26,069
of contract of course

00:17:22,520 --> 00:17:29,250
so only authorized

00:17:26,069 --> 00:17:36,890
HBC engineers will have access to their

00:17:29,250 --> 00:17:41,700
own machines so we we need containment

00:17:36,890 --> 00:17:46,290
so all of this is automated by ansible

00:17:41,700 --> 00:17:51,330
as i said we are using upstream recipes

00:17:46,290 --> 00:17:56,070
that all put narrows get up and just

00:17:51,330 --> 00:17:59,220
open in general so for continuous

00:17:56,070 --> 00:18:05,130
integration we use jenkins and we have a

00:17:59,220 --> 00:18:08,160
provision that as he each rack does we

00:18:05,130 --> 00:18:10,620
hook up the changes to the provision by

00:18:08,160 --> 00:18:16,220
ansible scripts and we talk directly to

00:18:10,620 --> 00:18:19,370
the api we support proceed uploading

00:18:16,220 --> 00:18:25,470
init are the internal provisioning and

00:18:19,370 --> 00:18:28,920
all the features required one of the

00:18:25,470 --> 00:18:32,190
requirements for this is also being that

00:18:28,920 --> 00:18:36,980
we could be able to deploy this lab in

00:18:32,190 --> 00:18:41,100
any other location and so we have

00:18:36,980 --> 00:18:44,370
created this whole ecosystem of scripts

00:18:41,100 --> 00:18:50,130
and ansible playbooks to actually be

00:18:44,370 --> 00:18:56,360
able to meet that requirement and we

00:18:50,130 --> 00:18:59,910
will also separate infrastructure into

00:18:56,360 --> 00:19:04,670
strictly open HPC testing and match mark

00:18:59,910 --> 00:19:10,070
also and on the other side also

00:19:04,670 --> 00:19:16,790
benchmarking compilers and more HPC

00:19:10,070 --> 00:19:16,790
infrastructure but not directly open HPC

00:19:18,780 --> 00:19:24,840
and all of this of course all of this of

00:19:21,870 --> 00:19:29,100
course will be automated via Jenkins as

00:19:24,840 --> 00:19:32,970
I said to have automated open G open HPC

00:19:29,100 --> 00:19:40,820
deployment and varnish month and also

00:19:32,970 --> 00:19:40,820
compiler benchmarks any questions

00:19:44,419 --> 00:19:47,539
thank you

00:19:57,960 --> 00:20:00,020

YouTube URL: https://www.youtube.com/watch?v=i6Ns3HYxYM8


