Title: HKG18-212 - Trusted Firmware M: Introduction
Publication date: 2019-05-09
Playlist: Linaro Connect Hong Kong 2018
Description: 
	Session ID: HKG18-212
Session Name: HKG18-212 - Trusted Firmware M: Introduction
Speaker: James King
Track: Iot, Security


★ Session Summary ★
Trusted Firmware M

In October 2017, Arm announced the vision of Platform Security Architecture (PSA) - a common framework to allow everyone in the IoT ecosystem to move forward with stronger, scalable security and greater confidence. There are three key stages to the Platform Security Architecture: Analysis, Architecture and Implementation which are described at https://developer.arm.com/products/architecture/platform-security-architecture.

Trusted Firmware M, i.e. TF-M, is the Arm project to provide an open source reference implementation firmware that will conform to the PSA specification for M-Class devices. Early access to TF-M was released in December 2017 and it is being made public during Linaro Connect. The implementation should be considered a prototype until the PSA specifications reach release state and the code aligns.
---------------------------------------------------
★ Resources ★
Event Page: http://connect.linaro.org/resource/hkg18/hkg18-212/
Presentation: http://connect.linaro.org.s3.amazonaws.com/hkg18/presentations/hkg18-212.pdf
Video: http://connect.linaro.org.s3.amazonaws.com/hkg18/videos/hkg18-212.mp4
 ---------------------------------------------------
★ Event Details ★
Linaro Connect Hong Kong 2018 (HKG18)
19-23 March 2018 
Regal Airport Hotel Hong Kong

---------------------------------------------------
Keyword: Iot, Security
'http://www.linaro.org'
'http://connect.linaro.org'
---------------------------------------------------
Follow us on Social Media
https://www.facebook.com/LinaroOrg
https://www.youtube.com/user/linaroorg?sub_confirmation=1
https://www.linkedin.com/company/1026961
Captions: 
	00:00:04,530 --> 00:00:06,590
you

00:00:14,410 --> 00:00:22,160
okay hi I'm James King I am running

00:00:19,119 --> 00:00:24,710
system software architecture in the open

00:00:22,160 --> 00:00:26,720
source software group arm and then we

00:00:24,710 --> 00:00:29,450
talk about just a firmware this was

00:00:26,720 --> 00:00:31,490
labeled as just a film around majority

00:00:29,450 --> 00:00:36,920
of the talk is about that that I'm gonna

00:00:31,490 --> 00:00:42,440
talk about just in general as well open

00:00:36,920 --> 00:00:45,379
source project so thank you for coming

00:00:42,440 --> 00:00:47,690
this talk I'm gonna briefly go over what

00:00:45,379 --> 00:00:50,120
just a firmware is again and for anybody

00:00:47,690 --> 00:00:53,140
who didn't know talk about what we're

00:00:50,120 --> 00:00:56,540
doing that's new here talk a bit about

00:00:53,140 --> 00:01:00,170
platform security architecture that's an

00:00:56,540 --> 00:01:02,449
important part about plans talk about

00:01:00,170 --> 00:01:04,960
what we're doing in terms of making the

00:01:02,449 --> 00:01:07,880
software open source and available for

00:01:04,960 --> 00:01:09,830
you to use and for you to work on and

00:01:07,880 --> 00:01:12,040
contribute to and then where you learn

00:01:09,830 --> 00:01:12,040
more

00:01:15,070 --> 00:01:24,040
okay so if anyone who doesn't know just

00:01:20,020 --> 00:01:26,650
a firmware it's basically a set of

00:01:24,040 --> 00:01:29,350
software components we provide which

00:01:26,650 --> 00:01:32,770
provide the foundations for creating a

00:01:29,350 --> 00:01:34,930
secure platform we provide reference

00:01:32,770 --> 00:01:38,610
software for the partnership to use

00:01:34,930 --> 00:01:42,070
which will allow you to use your

00:01:38,610 --> 00:01:44,050
hardware to create a properly trusted

00:01:42,070 --> 00:01:47,200
execution environment for secure

00:01:44,050 --> 00:01:49,960
software to running the chesta firmware

00:01:47,200 --> 00:01:52,200
provides an example of secure function

00:01:49,960 --> 00:01:52,200
invocation

00:01:53,070 --> 00:02:00,160
people still come against arias device

00:01:58,119 --> 00:02:01,479
initialization in setup so that you know

00:02:00,160 --> 00:02:03,130
that the software that's running in your

00:02:01,479 --> 00:02:06,399
trusted execution environment is

00:02:03,130 --> 00:02:08,110
actually secured and of course trusted

00:02:06,399 --> 00:02:09,700
boot to verify that the software that

00:02:08,110 --> 00:02:12,519
you're running is the software you

00:02:09,700 --> 00:02:15,550
expected just a firmware is also going

00:02:12,519 --> 00:02:24,580
to provide a reference for PSA

00:02:15,550 --> 00:02:28,060
compliance and an armed goals here by

00:02:24,580 --> 00:02:30,100
giving away this software is kind of

00:02:28,060 --> 00:02:34,150
threefold we want to help our

00:02:30,100 --> 00:02:36,670
partnership to use arm CPUs arm Hardware

00:02:34,150 --> 00:02:39,970
minimize the production effort required

00:02:36,670 --> 00:02:46,510
to move to new CPUs to implement good

00:02:39,970 --> 00:02:48,850
security on your products and devices as

00:02:46,510 --> 00:02:52,269
a benefit to arm and a benefit to the

00:02:48,850 --> 00:02:54,730
wider software ecosystem we want

00:02:52,269 --> 00:02:59,170
standardized interfaces used for

00:02:54,730 --> 00:03:02,440
invoking secure software make sure that

00:02:59,170 --> 00:03:04,959
applications that are written for just

00:03:02,440 --> 00:03:07,570
in execution environments and other

00:03:04,959 --> 00:03:11,549
security features easy to integrate

00:03:07,570 --> 00:03:17,340
support across different devices and

00:03:11,549 --> 00:03:21,190
generally improve the software

00:03:17,340 --> 00:03:24,160
environment on ARM processors and then

00:03:21,190 --> 00:03:25,290
of course by being standardized by

00:03:24,160 --> 00:03:27,989
everyone using

00:03:25,290 --> 00:03:31,019
say interested firmware we get improved

00:03:27,989 --> 00:03:33,780
security by scale if somebody finds from

00:03:31,019 --> 00:03:36,750
the ability somewhere and we fix it here

00:03:33,780 --> 00:03:41,069
then it spits or many many devices many

00:03:36,750 --> 00:03:43,349
many partners and in a way that can be

00:03:41,069 --> 00:03:47,819
verified across lots and lots of

00:03:43,349 --> 00:03:49,650
different devices did almost opposite of

00:03:47,819 --> 00:03:51,000
that is that the same software is used

00:03:49,650 --> 00:03:54,900
in lots and lots places so it gets

00:03:51,000 --> 00:03:57,810
tested a lot more and people try work

00:03:54,900 --> 00:04:01,530
out from the abilities and exploits and

00:03:57,810 --> 00:04:09,419
so the two together improve security by

00:04:01,530 --> 00:04:13,019
scale okay so for many people who

00:04:09,419 --> 00:04:15,329
connect just a firmware is not new it's

00:04:13,019 --> 00:04:17,359
a reasonably mature open-source software

00:04:15,329 --> 00:04:23,160
projects that always been doing for the

00:04:17,359 --> 00:04:25,229
eight profile CPUs since 2013 the link

00:04:23,160 --> 00:04:27,599
is the oldest video I could find from

00:04:25,229 --> 00:04:31,229
the Naro connect which was in Macau and

00:04:27,599 --> 00:04:33,240
2014 with Andrew taki talking about I'll

00:04:31,229 --> 00:04:36,750
just add firmware as it was called there

00:04:33,240 --> 00:04:38,250
I think they were told of them that but

00:04:36,750 --> 00:04:42,199
I just couldn't find the videos on the

00:04:38,250 --> 00:04:46,680
internet it's a well-established

00:04:42,199 --> 00:04:49,169
collaboration model as the usual things

00:04:46,680 --> 00:04:51,599
you'd expect of secure firmware security

00:04:49,169 --> 00:04:54,659
incident handling it's being hardened

00:04:51,599 --> 00:04:57,659
the security with certification and the

00:04:54,659 --> 00:05:01,979
Miss nomer hardening I mean this is all

00:04:57,659 --> 00:05:06,289
ongoing work but an it's a pretty mature

00:05:01,979 --> 00:05:12,300
software project and actually is used

00:05:06,289 --> 00:05:16,340
most production a profile systems for

00:05:12,300 --> 00:05:16,340
v8a across the world

00:05:16,840 --> 00:05:22,720
and just to further the reiterate this I

00:05:21,100 --> 00:05:24,970
think this was shown by Matteo in

00:05:22,720 --> 00:05:31,090
another presentation already this week

00:05:24,970 --> 00:05:33,970
but it's still an ongoing project I mean

00:05:31,090 --> 00:05:37,000
the latest release has got new features

00:05:33,970 --> 00:05:42,880
around partitioning around Raz updates

00:05:37,000 --> 00:05:45,460
to PS CI and SM seems it supports all of

00:05:42,880 --> 00:05:47,680
the armed v8a systems and actually

00:05:45,460 --> 00:05:51,760
support is in there for older systems as

00:05:47,680 --> 00:05:57,250
well and just to give a bit of a quick

00:05:51,760 --> 00:05:58,889
overview it provides a trusted root of

00:05:57,250 --> 00:06:01,300
trust wrong

00:05:58,889 --> 00:06:03,850
implementation a trusted loader

00:06:01,300 --> 00:06:07,150
implementation and then runtime firmware

00:06:03,850 --> 00:06:09,550
that will load your te and your non

00:06:07,150 --> 00:06:12,389
trusted software once it's been verified

00:06:09,550 --> 00:06:16,660
as okay

00:06:12,389 --> 00:06:19,360
and so I mean basically this flow here

00:06:16,660 --> 00:06:21,010
kind of shows the three things that

00:06:19,360 --> 00:06:22,960
actually makes it just an execution

00:06:21,010 --> 00:06:26,200
environment you know you need to

00:06:22,960 --> 00:06:29,229
securely goop on hardware that has fewer

00:06:26,200 --> 00:06:33,539
features and then put in place a trusted

00:06:29,229 --> 00:06:38,229
OS that has been verified to run there

00:06:33,539 --> 00:06:41,890
and actually this software supports all

00:06:38,229 --> 00:06:48,510
12 global platforms compliant e's on the

00:06:41,890 --> 00:06:48,510
arm sauce obviously opt is the best one

00:06:50,950 --> 00:07:00,950
but I only said that's your give stop

00:06:55,370 --> 00:07:04,820
right in front of me so um but what is

00:07:00,950 --> 00:07:10,040
new is just a firmware on the EM profile

00:07:04,820 --> 00:07:12,110
systems so building on the terminology

00:07:10,040 --> 00:07:13,880
that principles the understanding of

00:07:12,110 --> 00:07:19,190
just a firmware that we've worked on for

00:07:13,880 --> 00:07:21,680
a long time we've taken that learning

00:07:19,190 --> 00:07:24,380
and created new trusted firmware for the

00:07:21,680 --> 00:07:27,940
EM profile CPUs the the much more

00:07:24,380 --> 00:07:30,830
embedded space which again provides

00:07:27,940 --> 00:07:34,720
isolated secure and non-secure execution

00:07:30,830 --> 00:07:37,880
environments methods to invoke secure

00:07:34,720 --> 00:07:42,440
software and then trusted device

00:07:37,880 --> 00:07:45,950
initialization and boot too in the same

00:07:42,440 --> 00:07:49,370
way create a valid and trusted execution

00:07:45,950 --> 00:07:52,520
environment the important thing about

00:07:49,370 --> 00:07:55,729
the end profile systems and the reason

00:07:52,520 --> 00:07:58,970
it's different code is they're more

00:07:55,729 --> 00:08:00,650
constrained devices you have to do

00:07:58,970 --> 00:08:04,970
things in a different way to fit into

00:08:00,650 --> 00:08:08,360
the much smaller amounts of RAM and

00:08:04,970 --> 00:08:10,820
flash that are available the EM profile

00:08:08,360 --> 00:08:13,970
CPUs actually have quite a different

00:08:10,820 --> 00:08:18,350
mechanism for just own isolation and the

00:08:13,970 --> 00:08:20,090
a profile processors SMC s an exception

00:08:18,350 --> 00:08:22,880
model to move between secure and

00:08:20,090 --> 00:08:24,919
non-secure world whereas in order to

00:08:22,880 --> 00:08:26,120
make things smaller and cheaper than

00:08:24,919 --> 00:08:29,180
their profile systems

00:08:26,120 --> 00:08:32,839
it's more of a jest space isolation

00:08:29,180 --> 00:08:34,610
that's used and then the other thing

00:08:32,839 --> 00:08:36,140
that is actually very important when

00:08:34,610 --> 00:08:38,570
you're creating this foundational

00:08:36,140 --> 00:08:42,020
software is that the software ecosystem

00:08:38,570 --> 00:08:48,589
for the own profile systems is much more

00:08:42,020 --> 00:08:49,880
fragmented and it needs to be easier to

00:08:48,589 --> 00:08:50,990
be able to pull lots and lots of

00:08:49,880 --> 00:08:54,520
different OSS

00:08:50,990 --> 00:08:54,520
and software above it

00:08:58,140 --> 00:09:03,850
one of the things about this new trusted

00:09:01,330 --> 00:09:06,580
firmware though is that it's not yet PSA

00:09:03,850 --> 00:09:09,310
compliant it's the start of a journey

00:09:06,580 --> 00:09:12,430
and as you could see with the a profile

00:09:09,310 --> 00:09:13,870
just a firmware that journeys been going

00:09:12,430 --> 00:09:17,080
for many years and is still going strong

00:09:13,870 --> 00:09:20,190
and we expect this to be the same with

00:09:17,080 --> 00:09:22,870
the EM profile just appearing where

00:09:20,190 --> 00:09:26,650
there's a starting point now it provides

00:09:22,870 --> 00:09:29,500
a good reference example to be able to

00:09:26,650 --> 00:09:31,870
implement a trusted execution

00:09:29,500 --> 00:09:35,380
environment on the end profile systems

00:09:31,870 --> 00:09:37,990
for early v8n partners but there's still

00:09:35,380 --> 00:09:39,940
lots more to do in particular working

00:09:37,990 --> 00:09:46,330
towards a platform security architecture

00:09:39,940 --> 00:09:50,460
which I'll talk about now so the big

00:09:46,330 --> 00:09:50,460
picture for PSA platform secure

00:09:53,649 --> 00:09:58,579
remind to come up the big picture is

00:09:56,540 --> 00:10:00,529
that basically it's a set of free

00:09:58,579 --> 00:10:03,800
deliverables that arms giving out to the

00:10:00,529 --> 00:10:06,529
partnership documentation threat models

00:10:03,800 --> 00:10:09,410
and reference implementations in order

00:10:06,529 --> 00:10:14,060
for you to be able to easily create a

00:10:09,410 --> 00:10:18,800
secure system we're starting with the EM

00:10:14,060 --> 00:10:22,670
profile devices because actually the IOT

00:10:18,800 --> 00:10:26,930
space is an area which is very much

00:10:22,670 --> 00:10:28,490
needs helping adding security as these

00:10:26,930 --> 00:10:31,569
devices become more and more connected

00:10:28,490 --> 00:10:35,089
and more and more from mobile to threats

00:10:31,569 --> 00:10:37,930
so that is the area that I'm focusing on

00:10:35,089 --> 00:10:40,699
at the moment but the idea is that PSA

00:10:37,930 --> 00:10:46,370
becomes a standard across all the

00:10:40,699 --> 00:10:49,190
different devices so here these

00:10:46,370 --> 00:10:53,529
documents that we're planning to provide

00:10:49,190 --> 00:10:55,579
a firmware framework specification

00:10:53,529 --> 00:10:58,069
specifications for Boonton firmware

00:10:55,579 --> 00:11:03,019
update device initialization and secure

00:10:58,069 --> 00:11:05,589
functions the threat models and security

00:11:03,019 --> 00:11:07,970
analyses I'll talk about in a second but

00:11:05,589 --> 00:11:10,130
designed to make it easy for you to give

00:11:07,970 --> 00:11:13,190
to an adopt and work out what security

00:11:10,130 --> 00:11:16,550
you need and then the implementations

00:11:13,190 --> 00:11:18,860
that are provide just a firmware is a

00:11:16,550 --> 00:11:26,170
very important part of that just here

00:11:18,860 --> 00:11:28,160
and is really designed to implement the

00:11:26,170 --> 00:11:30,519
specifications and address the threat

00:11:28,160 --> 00:11:30,519
models

00:11:32,380 --> 00:11:36,150
and basically the reason on does this

00:11:34,480 --> 00:11:41,140
and the reason arm gives it away is

00:11:36,150 --> 00:11:42,970
actually most device manufactures don't

00:11:41,140 --> 00:11:45,700
really know what their security

00:11:42,970 --> 00:11:48,820
requirements are it's a difficult

00:11:45,700 --> 00:11:53,770
problem it's not meant to be an insult

00:11:48,820 --> 00:11:56,170
saying that there's a lot of attacks and

00:11:53,770 --> 00:11:59,650
vulnerabilities that are only known

00:11:56,170 --> 00:12:03,160
about by certain people and the problem

00:11:59,650 --> 00:12:04,690
evolves and changes all the time they

00:12:03,160 --> 00:12:10,500
just know what they want to be able to

00:12:04,690 --> 00:12:12,850
produce and would like all to provide

00:12:10,500 --> 00:12:14,650
assets that allow them to be able to

00:12:12,850 --> 00:12:16,540
focus on what they want to produce and

00:12:14,650 --> 00:12:20,620
their value add and have security just

00:12:16,540 --> 00:12:22,930
built in and this is the whole point of

00:12:20,620 --> 00:12:26,560
basically giving free examples to follow

00:12:22,930 --> 00:12:31,150
and so the idea is that anyone in the

00:12:26,560 --> 00:12:33,490
park ship can use the threat models to

00:12:31,150 --> 00:12:35,260
analyze whatever it is they're trying to

00:12:33,490 --> 00:12:37,260
produce and to be able to understand

00:12:35,260 --> 00:12:40,810
what security requirements they have

00:12:37,260 --> 00:12:43,600
they can then refer to the architecture

00:12:40,810 --> 00:12:46,530
documents as to what needs to be

00:12:43,600 --> 00:12:49,900
implemented and then of course use

00:12:46,530 --> 00:12:53,110
example implementations of hardware IP

00:12:49,900 --> 00:12:54,850
and software and in particular firmware

00:12:53,110 --> 00:13:03,360
we talked about here in order to make

00:12:54,850 --> 00:13:03,360
that secure device and just a little

00:13:03,690 --> 00:13:09,220
further description on the security

00:13:06,310 --> 00:13:13,240
analysis and 20 miles for anybody who's

00:13:09,220 --> 00:13:15,700
working on the IOT devices now and what

00:13:13,240 --> 00:13:18,190
a lot of the PSA specifications are not

00:13:15,700 --> 00:13:21,100
yet public these threat models are

00:13:18,190 --> 00:13:24,850
available now the links at the bottom of

00:13:21,100 --> 00:13:26,340
the page and they're examples of the

00:13:24,850 --> 00:13:29,860
kind of things that you should be

00:13:26,340 --> 00:13:33,820
looking out for and trying to address in

00:13:29,860 --> 00:13:35,620
your product and if this varies from

00:13:33,820 --> 00:13:38,260
product to product so I mean we've got

00:13:35,620 --> 00:13:40,150
an asset tracker water meter in a

00:13:38,260 --> 00:13:41,750
network camera because they all have

00:13:40,150 --> 00:13:45,110
quite different

00:13:41,750 --> 00:13:47,990
and areas that you want to be to protect

00:13:45,110 --> 00:13:51,110
data and areas that you want to protect

00:13:47,990 --> 00:13:54,140
the system against attack I mean as you

00:13:51,110 --> 00:13:57,080
can imagine the asset tracker doesn't

00:13:54,140 --> 00:14:00,880
actually export much data the network

00:13:57,080 --> 00:14:04,030
camera has a huge quantity of data and

00:14:00,880 --> 00:14:07,760
needs to be treated in different ways

00:14:04,030 --> 00:14:10,070
and all this continuing to work on

00:14:07,760 --> 00:14:14,200
different example threat models and will

00:14:10,070 --> 00:14:16,280
continue to provide reference

00:14:14,200 --> 00:14:19,220
descriptions of the kind of security

00:14:16,280 --> 00:14:21,110
requirements you need for different

00:14:19,220 --> 00:14:27,250
segments across with an entire arm

00:14:21,110 --> 00:14:30,440
ecosystem okay and then one of the

00:14:27,250 --> 00:14:32,390
specifications for PSA one that actually

00:14:30,440 --> 00:14:35,540
some of the partnership will have seen

00:14:32,390 --> 00:14:38,630
is a firmware framework which is hugely

00:14:35,540 --> 00:14:45,650
relevant to producing just a firmware as

00:14:38,630 --> 00:14:48,560
it describes the ideal attributes that

00:14:45,650 --> 00:14:55,820
your firmware should have in order to

00:14:48,560 --> 00:14:58,040
maximize the security of your system you

00:14:55,820 --> 00:14:59,630
want a non-secure processing environment

00:14:58,040 --> 00:15:03,800
which is where the bulk of your code

00:14:59,630 --> 00:15:06,230
runs it's normally quite important to

00:15:03,800 --> 00:15:08,000
help with your security to an only put

00:15:06,230 --> 00:15:10,970
the code there needs to be secure

00:15:08,000 --> 00:15:16,250
it's your secure processing or just an

00:15:10,970 --> 00:15:20,480
execution environment within the

00:15:16,250 --> 00:15:23,450
firmware we are creating partition

00:15:20,480 --> 00:15:25,580
management that's going on both in the a

00:15:23,450 --> 00:15:28,070
profile firmware and in the end profile

00:15:25,580 --> 00:15:31,030
firmware it's not fully implemented in

00:15:28,070 --> 00:15:33,650
the just a firmware M at the moment but

00:15:31,030 --> 00:15:35,089
the idea of the partition management is

00:15:33,650 --> 00:15:36,560
that you can take different secure

00:15:35,089 --> 00:15:36,950
functions and isolate them from one

00:15:36,560 --> 00:15:39,170
another

00:15:36,950 --> 00:15:42,110
different trusted functions if you're

00:15:39,170 --> 00:15:44,630
creating a device and you get some

00:15:42,110 --> 00:15:47,480
secure software from a third party you

00:15:44,630 --> 00:15:49,000
might want to isolate that from your

00:15:47,480 --> 00:15:51,580
security features your

00:15:49,000 --> 00:15:54,130
to the trusted features that you've got

00:15:51,580 --> 00:16:01,570
it implemented as the silicon

00:15:54,130 --> 00:16:04,510
manufacturer and of course it may be

00:16:01,570 --> 00:16:06,760
that you trust some of the code between

00:16:04,510 --> 00:16:10,560
some of these but you particularly don't

00:16:06,760 --> 00:16:13,480
trust something that is provided as a

00:16:10,560 --> 00:16:14,830
binary that you need to go on securely

00:16:13,480 --> 00:16:19,630
to be able to meet some kind of

00:16:14,830 --> 00:16:23,010
certification but you want to make sure

00:16:19,630 --> 00:16:25,990
that your features are protected from it

00:16:23,010 --> 00:16:30,790
PSA is also defining standardized

00:16:25,990 --> 00:16:33,340
interfaces for software quite

00:16:30,790 --> 00:16:35,320
importantly for the ecosystem a bunch of

00:16:33,340 --> 00:16:38,500
security api's I'll list them on the

00:16:35,320 --> 00:16:40,420
next slide which should make it easier

00:16:38,500 --> 00:16:43,510
for people who are writing applications

00:16:40,420 --> 00:16:45,940
that need secure functionality to be

00:16:43,510 --> 00:16:48,190
able to invoke them I think a great

00:16:45,940 --> 00:16:50,830
example of this is the increasing

00:16:48,190 --> 00:16:52,660
numbers of security features that cloud

00:16:50,830 --> 00:16:54,700
clients require in order to be able to

00:16:52,660 --> 00:16:58,750
do attestation and authentication and

00:16:54,700 --> 00:17:03,160
encryption of the data the other things

00:16:58,750 --> 00:17:07,390
that are in the API specifications is an

00:17:03,160 --> 00:17:09,670
IPC and SPM specification for the

00:17:07,390 --> 00:17:11,770
partitions and secure functions and

00:17:09,670 --> 00:17:13,959
trusted functions to be able to talk

00:17:11,770 --> 00:17:18,510
between each other and be it be talked

00:17:13,959 --> 00:17:21,579
to from the non secure side and

00:17:18,510 --> 00:17:25,420
specifications as to how to invoke your

00:17:21,579 --> 00:17:29,410
secure hardware which is also described

00:17:25,420 --> 00:17:33,060
by the TBSA for the EM profile systems

00:17:29,410 --> 00:17:35,920
that's also being produced by arm and

00:17:33,060 --> 00:17:39,010
and again whilst I'm describing this I

00:17:35,920 --> 00:17:42,400
mean the important thing is that trusted

00:17:39,010 --> 00:17:47,470
firmware isn't there yet now we're

00:17:42,400 --> 00:17:49,450
working on it and so the plans for this

00:17:47,470 --> 00:17:52,330
year on the code that we're making

00:17:49,450 --> 00:17:55,860
available is aligned with those

00:17:52,330 --> 00:17:57,730
specifications as they get finalized and

00:17:55,860 --> 00:17:59,010
if you're interested in the

00:17:57,730 --> 00:18:01,620
specifications

00:17:59,010 --> 00:18:04,440
that your own partner Account Manager

00:18:01,620 --> 00:18:06,990
and and I'm sure they can help you get

00:18:04,440 --> 00:18:10,230
access to them but in terms of the open

00:18:06,990 --> 00:18:12,720
source software and what alms software

00:18:10,230 --> 00:18:13,980
development team will be doing a large

00:18:12,720 --> 00:18:15,840
amount of what they'll be contributing

00:18:13,980 --> 00:18:19,440
into the trusted firm where this year

00:18:15,840 --> 00:18:22,650
will be the standardized API is such

00:18:19,440 --> 00:18:25,200
that your applications can call on

00:18:22,650 --> 00:18:28,430
crypto services SATA stations your

00:18:25,200 --> 00:18:32,460
storage the other API is described here

00:18:28,430 --> 00:18:34,830
where completing the secure partition

00:18:32,460 --> 00:18:39,410
manager and IPC at the moment the code

00:18:34,830 --> 00:18:42,660
that's available has a very constrained

00:18:39,410 --> 00:18:45,260
model for the trusted execution

00:18:42,660 --> 00:18:48,230
environment that doesn't partition it up

00:18:45,260 --> 00:18:51,150
the partitioning is coming soon

00:18:48,230 --> 00:18:55,110
continuing to work on device Mitchell

00:18:51,150 --> 00:18:59,670
ization and and just a boot and firmware

00:18:55,110 --> 00:19:02,310
update and of course make sure that it's

00:18:59,670 --> 00:19:05,210
easy to build different configurations

00:19:02,310 --> 00:19:07,530
of this firmware within your system to

00:19:05,210 --> 00:19:11,820
address the threats that you will

00:19:07,530 --> 00:19:14,550
identify for your system as with the a

00:19:11,820 --> 00:19:16,290
profile trusted firmware it may be that

00:19:14,550 --> 00:19:18,870
there are certain things some features

00:19:16,290 --> 00:19:20,580
that you don't want this is reference

00:19:18,870 --> 00:19:22,410
code that you can use however you want

00:19:20,580 --> 00:19:28,950
to use it and whatever is appropriate

00:19:22,410 --> 00:19:31,440
for your application we're also working

00:19:28,950 --> 00:19:35,220
on supporting on development platforms I

00:19:31,440 --> 00:19:38,400
mean at the moment the code runs on the

00:19:35,220 --> 00:19:41,930
musca test chip this is a musket s chip

00:19:38,400 --> 00:19:46,050
which is a lv a 10 development board

00:19:41,930 --> 00:19:48,720
again actually ohm will get these out on

00:19:46,050 --> 00:19:52,590
loan agreements different free to any of

00:19:48,720 --> 00:19:56,550
the partnership contact your account

00:19:52,590 --> 00:19:58,890
manager get in touch afterwards we

00:19:56,550 --> 00:20:01,350
support BGA systems there's the NPS to

00:19:58,890 --> 00:20:04,500
and have guessed three boards that arm

00:20:01,350 --> 00:20:05,430
has been providing for ecosystem

00:20:04,500 --> 00:20:08,820
development

00:20:05,430 --> 00:20:16,200
p development for some time and the sdk

00:20:08,820 --> 00:20:19,140
to 0 at the moment and the AMD a10 fast

00:20:16,200 --> 00:20:20,550
model which again is a free fast model

00:20:19,140 --> 00:20:25,110
that you can get from developer to arm

00:20:20,550 --> 00:20:33,630
comm I believe will soon be adding in

00:20:25,110 --> 00:20:37,590
Quenya and obviously we'd like to be

00:20:33,630 --> 00:20:42,360
able to add in partner s o C's via

00:20:37,590 --> 00:20:48,390
contributions into the codebase we're

00:20:42,360 --> 00:20:52,500
also working on developing for arm IP so

00:20:48,390 --> 00:20:55,950
crypto accelerators secure enclaves like

00:20:52,500 --> 00:20:58,650
the arm crypto island and the system

00:20:55,950 --> 00:21:04,950
might be that we provide as part of the

00:20:58,650 --> 00:21:07,410
larger v8n picture but as I said what

00:21:04,950 --> 00:21:09,960
we'd really like to do is to be a sport

00:21:07,410 --> 00:21:13,250
and encourage and enable other people to

00:21:09,960 --> 00:21:16,590
contribute to widen the ecosystem here

00:21:13,250 --> 00:21:20,190
the partners are so seasoned boards as

00:21:16,590 --> 00:21:23,030
described and also software services

00:21:20,190 --> 00:21:26,070
features artists secure software

00:21:23,030 --> 00:21:28,400
interfaces rather than make it more

00:21:26,070 --> 00:21:31,380
applicable wider and wider across the

00:21:28,400 --> 00:21:32,760
ecosystem and we're going to do all of

00:21:31,380 --> 00:21:35,070
the work that the arm engineers are

00:21:32,760 --> 00:21:37,550
doing because all in public all in the

00:21:35,070 --> 00:21:37,550
open source project

00:21:40,460 --> 00:21:48,259
so just gonna change tack a little bit

00:21:43,490 --> 00:21:50,059
and so as I described earlier the eight

00:21:48,259 --> 00:21:52,519
profile just a firmware has been

00:21:50,059 --> 00:21:55,220
publicly available on github for many

00:21:52,519 --> 00:21:58,490
years and actually that's been working

00:21:55,220 --> 00:22:01,519
quite well as a as a open-source

00:21:58,490 --> 00:22:04,610
software project and we've had many

00:22:01,519 --> 00:22:06,799
contributions into there I mean hi

00:22:04,610 --> 00:22:09,860
silicone Media Tech and video all in our

00:22:06,799 --> 00:22:12,950
own Sochi own exile inks have all

00:22:09,860 --> 00:22:18,710
contributed into the a profile trusted

00:22:12,950 --> 00:22:21,889
firmware but we've had quite a few

00:22:18,710 --> 00:22:23,929
requests to be able to move this

00:22:21,889 --> 00:22:28,159
software into a more open governance

00:22:23,929 --> 00:22:30,889
model if you're a silicon manufacturer

00:22:28,159 --> 00:22:34,519
and you use arms just a firmware you

00:22:30,889 --> 00:22:39,610
depend on it people want to be able to

00:22:34,519 --> 00:22:42,230
feel more ownership of the software and

00:22:39,610 --> 00:22:44,659
so it has been requested that we moved

00:22:42,230 --> 00:22:49,549
to a more open governance model for the

00:22:44,659 --> 00:22:52,779
justed firmware I think this also

00:22:49,549 --> 00:22:54,590
creates a message to allow more of the

00:22:52,779 --> 00:22:58,100
partnership and more the software

00:22:54,590 --> 00:22:59,450
ecosystem to participate and to actually

00:22:58,100 --> 00:23:05,450
steer the direction of the trusted

00:22:59,450 --> 00:23:09,499
firmware in ways that can help us all at

00:23:05,450 --> 00:23:13,299
the same time Leonardo is creating a

00:23:09,499 --> 00:23:18,590
community projects division and

00:23:13,299 --> 00:23:21,740
basically this is a part of lenore own

00:23:18,590 --> 00:23:26,119
that will host open governance open

00:23:21,740 --> 00:23:28,100
source software projects the projects

00:23:26,119 --> 00:23:29,580
are operated independent from the Naro

00:23:28,100 --> 00:23:33,270
so this is not under the

00:23:29,580 --> 00:23:35,160
kind of TSC and Lennar management but

00:23:33,270 --> 00:23:37,350
each project would have its own board

00:23:35,160 --> 00:23:45,570
and if it wants them committees and

00:23:37,350 --> 00:23:46,920
funding and then our own as its

00:23:45,570 --> 00:23:48,390
community division is basically

00:23:46,920 --> 00:23:50,850
contracted to provide the IT

00:23:48,390 --> 00:23:54,530
infrastructure finance legal marketing

00:23:50,850 --> 00:23:57,150
engineering if the project wants it but

00:23:54,530 --> 00:23:59,040
it's not actually managed by Lennar it's

00:23:57,150 --> 00:24:02,160
managed by the board they are developing

00:23:59,040 --> 00:24:05,550
these services project managed my

00:24:02,160 --> 00:24:08,880
membership is open to anyone who wants

00:24:05,550 --> 00:24:10,830
to join and free to project their board

00:24:08,880 --> 00:24:15,860
members and there are general members

00:24:10,830 --> 00:24:20,100
who can join and help to steer how the

00:24:15,860 --> 00:24:21,540
project goes and and how investment in

00:24:20,100 --> 00:24:24,270
the project goes what we're doing in

00:24:21,540 --> 00:24:28,050
terms of COI what kind of platforms are

00:24:24,270 --> 00:24:30,000
supported and what kind of strategic

00:24:28,050 --> 00:24:34,860
directions we take to widen the

00:24:30,000 --> 00:24:37,200
applicability of the project and so

00:24:34,860 --> 00:24:40,050
bringing both of these together we have

00:24:37,200 --> 00:24:45,450
to get a new open source project just to

00:24:40,050 --> 00:24:47,970
fill my org and that's the homepage of

00:24:45,450 --> 00:24:49,350
the website to be honest it's pretty

00:24:47,970 --> 00:24:51,450
much just to stop there at the moment

00:24:49,350 --> 00:24:54,150
telling you where to contact to get more

00:24:51,450 --> 00:24:58,950
information because we are in the

00:24:54,150 --> 00:25:01,500
formation phase of this project but the

00:24:58,950 --> 00:25:02,430
infrastructure is light now so Linares

00:25:01,500 --> 00:25:06,180
going to put together

00:25:02,430 --> 00:25:07,710
there's the git server that I was

00:25:06,180 --> 00:25:10,110
actually showing just before this

00:25:07,710 --> 00:25:14,190
presentation when I was showing yokum's

00:25:10,110 --> 00:25:18,780
contributions and Garett review server

00:25:14,190 --> 00:25:20,250
for poshest patches to be pushed to for

00:25:18,780 --> 00:25:23,400
anyone who's not going to use it garrett

00:25:20,250 --> 00:25:26,100
is the code review system that google

00:25:23,400 --> 00:25:29,010
useful of their software projects and

00:25:26,100 --> 00:25:32,299
issue tracker for people to be able to

00:25:29,010 --> 00:25:34,759
log bugs request change requests

00:25:32,299 --> 00:25:38,749
and bring up any other kind of issues

00:25:34,759 --> 00:25:43,489
and the code base itself contains

00:25:38,749 --> 00:25:46,519
instructions for contributions it's a

00:25:43,489 --> 00:25:48,979
normal DC o signed off type

00:25:46,519 --> 00:25:52,089
contributions there's no CLA to be

00:25:48,979 --> 00:25:55,249
signed it's very very similar to

00:25:52,089 --> 00:25:58,759
contributions as they stand now to the a

00:25:55,249 --> 00:26:02,389
profile trusted firm where there's

00:25:58,759 --> 00:26:04,729
maintainer files which describe who are

00:26:02,389 --> 00:26:06,799
going to be the appropriate reviewers if

00:26:04,729 --> 00:26:08,599
you want to contact them in advance for

00:26:06,799 --> 00:26:10,759
something that you're trying to do and

00:26:08,599 --> 00:26:14,539
just looks like a normal open-source

00:26:10,759 --> 00:26:17,599
software project the M profile trusted

00:26:14,539 --> 00:26:22,219
firmware is there now I'm ready to take

00:26:17,599 --> 00:26:25,779
contributions as of today the a profile

00:26:22,219 --> 00:26:28,599
trusted firmware is also there now as a

00:26:25,779 --> 00:26:32,179
clone of the github and we'll be

00:26:28,599 --> 00:26:34,729
transferring the processes and

00:26:32,179 --> 00:26:44,059
mechanisms for that project over the

00:26:34,729 --> 00:26:46,399
next few months and so really one of the

00:26:44,059 --> 00:26:51,909
the main reasons for this talk is to

00:26:46,399 --> 00:26:56,299
request that you get involved there are

00:26:51,909 --> 00:26:58,249
member memberships available Platinum is

00:26:56,299 --> 00:27:01,129
board membership general membership

00:26:58,249 --> 00:27:04,690
community memberships you Nora and arm

00:27:01,129 --> 00:27:08,419
are starting to present joining this

00:27:04,690 --> 00:27:10,690
open source project of various potential

00:27:08,419 --> 00:27:13,999
members in the partnership

00:27:10,690 --> 00:27:16,309
you take bottle ownership of a project

00:27:13,999 --> 00:27:19,009
you depend on make sure that your test

00:27:16,309 --> 00:27:22,879
boards your devices your software your

00:27:19,009 --> 00:27:27,259
software tests are included in the CI

00:27:22,879 --> 00:27:32,690
system are fully maintained and looked

00:27:27,259 --> 00:27:35,719
after and therefore hopefully overall

00:27:32,690 --> 00:27:41,600
reduce your costs to producing new

00:27:35,719 --> 00:27:44,430
systems and obviously help ensure that

00:27:41,600 --> 00:27:46,740
but the open source community maximally

00:27:44,430 --> 00:27:48,810
supports trusted firmware that it gets

00:27:46,740 --> 00:27:53,610
supported by other open source projects

00:27:48,810 --> 00:27:56,130
that connect to it and becomes a de

00:27:53,610 --> 00:27:59,280
facto standard to make all of our lives

00:27:56,130 --> 00:28:00,900
easier for software development and

00:27:59,280 --> 00:28:03,470
there's in the email address there to

00:28:00,900 --> 00:28:07,650
contact if you want more information or

00:28:03,470 --> 00:28:09,780
I'm sure you can find me or log booth or

00:28:07,650 --> 00:28:15,120
Steve Taylor and we'd be happy to talk

00:28:09,780 --> 00:28:17,160
to you about getting involved if you

00:28:15,120 --> 00:28:18,900
want to learn more about the EM profile

00:28:17,160 --> 00:28:21,330
trusted firmware there's three deep

00:28:18,900 --> 00:28:24,770
dives this afternoon Mick gosh

00:28:21,330 --> 00:28:28,140
Ashutosh and tomash who are all in here

00:28:24,770 --> 00:28:30,240
we'll be presenting a lot more detail on

00:28:28,140 --> 00:28:33,630
the new just a firmware that we've made

00:28:30,240 --> 00:28:36,750
available this week later on this

00:28:33,630 --> 00:28:38,370
afternoon and they are working with the

00:28:36,750 --> 00:28:41,270
light engineers in the light hacking

00:28:38,370 --> 00:28:43,860
room this week to be able to demonstrate

00:28:41,270 --> 00:28:50,460
Zephyr running in the non secure

00:28:43,860 --> 00:28:55,110
partition of all test platforms which I

00:28:50,460 --> 00:28:57,900
believe is certainly working and will

00:28:55,110 --> 00:28:59,460
certainly be demoed on Friday now so

00:28:57,900 --> 00:29:03,410
that works been going really really well

00:28:59,460 --> 00:29:06,450
and that only started yesterday and

00:29:03,410 --> 00:29:10,640
hopefully that's a a good indication of

00:29:06,450 --> 00:29:16,860
how easy it should be to integrate your

00:29:10,640 --> 00:29:18,570
normal non secure software stack that

00:29:16,860 --> 00:29:21,840
does the functionality that your device

00:29:18,570 --> 00:29:24,090
does into the security framework that

00:29:21,840 --> 00:29:27,170
adds in all of the security features

00:29:24,090 --> 00:29:27,170
that we've been talking about here

00:29:31,770 --> 00:29:37,150
okay so that's all I was going to talk

00:29:34,690 --> 00:29:41,530
about here and now today and we've got

00:29:37,150 --> 00:29:45,190
time for a few questions if you want to

00:29:41,530 --> 00:29:47,110
know more about what's going on with the

00:29:45,190 --> 00:29:48,820
code and how it works and things like

00:29:47,110 --> 00:29:54,160
that feel free to go to the light Aki

00:29:48,820 --> 00:30:00,640
room and find one of the engineers could

00:29:54,160 --> 00:30:02,100
make you all stand up just just before

00:30:00,640 --> 00:30:14,320
you ask your question

00:30:02,100 --> 00:30:18,309
Ashutosh any of these people they can

00:30:14,320 --> 00:30:26,320
talk to you about the codes as well and

00:30:18,309 --> 00:30:29,140
then and obviously you can email the

00:30:26,320 --> 00:30:31,270
board address for details about joining

00:30:29,140 --> 00:30:32,950
the project or I'm quite happy to

00:30:31,270 --> 00:30:42,010
receive any kind of queries directly

00:30:32,950 --> 00:30:44,799
myself you're required to run our plan

00:30:42,010 --> 00:30:50,559
we love change to run GCC in the near

00:30:44,799 --> 00:30:52,600
future yeah so we did realize that when

00:30:50,559 --> 00:30:54,190
you making the open source we need to

00:30:52,600 --> 00:30:56,440
make sure that it's not just the

00:30:54,190 --> 00:30:59,980
licensed proprietary tools but also the

00:30:56,440 --> 00:31:05,890
free open-source ones so we got the GCC

00:30:59,980 --> 00:31:07,510
patch ready inside now okay to share in

00:31:05,890 --> 00:31:09,340
the light tracking of the instructions

00:31:07,510 --> 00:31:11,710
but just to just put it in that project

00:31:09,340 --> 00:31:13,020
it's just going to take a little bit of

00:31:11,710 --> 00:31:17,790
polishing up and

00:31:13,020 --> 00:31:21,240
there yeah he does work sorry if you

00:31:17,790 --> 00:31:23,400
sorted out thank you uh no I mean as I

00:31:21,240 --> 00:31:24,870
said this is very much the start we've

00:31:23,400 --> 00:31:27,390
actually tried to make this public as

00:31:24,870 --> 00:31:29,850
early as we captain when it's working

00:31:27,390 --> 00:31:33,060
well enough for us to be able to

00:31:29,850 --> 00:31:34,380
demonstrate the features but before

00:31:33,060 --> 00:31:35,850
we've I mean there's lots of

00:31:34,380 --> 00:31:39,180
functionality that we know we need to

00:31:35,850 --> 00:31:41,370
add but making it public early it's

00:31:39,180 --> 00:31:42,840
generally a good thing to be able to do

00:31:41,370 --> 00:31:47,730
those features in the right way in the

00:31:42,840 --> 00:32:04,460
right direction another question how

00:31:47,730 --> 00:32:07,800
come you are moving away from github so

00:32:04,460 --> 00:32:10,080
there are I mean github is great for

00:32:07,800 --> 00:32:11,270
being able to manage lots of open source

00:32:10,080 --> 00:32:15,170
projects

00:32:11,270 --> 00:32:19,560
it does have some features that annoy

00:32:15,170 --> 00:32:22,110
some developers it's very very good if

00:32:19,560 --> 00:32:25,620
you're doing small projects where you

00:32:22,110 --> 00:32:28,350
have somebody putting their code

00:32:25,620 --> 00:32:30,600
available and it's mainly people who

00:32:28,350 --> 00:32:33,890
were downloading and copying their code

00:32:30,600 --> 00:32:37,560
of doing something else with it but as a

00:32:33,890 --> 00:32:42,240
collaborative large-scale software

00:32:37,560 --> 00:32:46,460
development it's not as good as say the

00:32:42,240 --> 00:32:49,590
way the Linux foundation hosts Linux I

00:32:46,460 --> 00:32:52,620
do appreciate that Gerrit as a review

00:32:49,590 --> 00:32:54,960
system has people who like it in people

00:32:52,620 --> 00:32:59,420
who don't like it but I mean isn't very

00:32:54,960 --> 00:33:03,210
well supported well documented and and

00:32:59,420 --> 00:33:04,650
capable review system that allows us to

00:33:03,210 --> 00:33:06,750
do lots of features in terms of

00:33:04,650 --> 00:33:13,490
integration with CI and things like that

00:33:06,750 --> 00:33:19,640
that a mailing list wouldn't and so it's

00:33:13,490 --> 00:33:23,600
it's really some small reasons

00:33:19,640 --> 00:33:26,420
and obviously if you're creating a

00:33:23,600 --> 00:33:28,250
project that's running itself as a full

00:33:26,420 --> 00:33:29,929
open-source project actually being able

00:33:28,250 --> 00:33:32,450
to put things on your own

00:33:29,929 --> 00:33:35,690
Ilana Rosen and two for the project

00:33:32,450 --> 00:33:37,870
properly owned it is is a nice thing as

00:33:35,690 --> 00:33:37,870
well

00:33:44,750 --> 00:33:50,600
I have two questions I could be so

00:33:47,360 --> 00:33:52,700
greedy the threat mobile and security

00:33:50,600 --> 00:33:56,150
analysis currently doesn't include

00:33:52,700 --> 00:33:57,799
anything with actuators really are you

00:33:56,150 --> 00:34:00,590
planning in the very near future to

00:33:57,799 --> 00:34:02,240
release something that involves like an

00:34:00,590 --> 00:34:03,740
actuator like I know you're not doing

00:34:02,240 --> 00:34:06,440
industrial control system he's not SCADA

00:34:03,740 --> 00:34:08,119
but you know connected kettles connected

00:34:06,440 --> 00:34:10,639
coffee machines things with eating

00:34:08,119 --> 00:34:14,450
elements you know is there and it

00:34:10,639 --> 00:34:15,800
bounced for that yes I I actually don't

00:34:14,450 --> 00:34:17,419
have the list of ones that are

00:34:15,800 --> 00:34:19,790
specifically being worked on at the

00:34:17,419 --> 00:34:21,919
moment but as you've asked this question

00:34:19,790 --> 00:34:23,389
that will I will feed that into the

00:34:21,919 --> 00:34:25,849
people who are actually doing it to make

00:34:23,389 --> 00:34:27,859
sure that there is an example to that

00:34:25,849 --> 00:34:31,129
effect I mean basically as you can

00:34:27,859 --> 00:34:33,740
imagine there's probably two or three

00:34:31,129 --> 00:34:37,310
hundred clusters of devices that use ARM

00:34:33,740 --> 00:34:43,010
processors that actually do have threats

00:34:37,310 --> 00:34:45,080
and security requirements and so the

00:34:43,010 --> 00:34:46,909
initial three that have been made public

00:34:45,080 --> 00:34:48,980
were I mean they're only made public

00:34:46,909 --> 00:34:51,530
from that it worked two weeks ago and so

00:34:48,980 --> 00:34:54,800
that is again work that's very much

00:34:51,530 --> 00:34:57,200
ongoing and our feed that in and they

00:34:54,800 --> 00:34:59,480
were just trying to show quite different

00:34:57,200 --> 00:35:02,540
types of systems where the requirements

00:34:59,480 --> 00:35:04,700
are quite different in the end as you do

00:35:02,540 --> 00:35:07,670
more and more these examples the Venn

00:35:04,700 --> 00:35:09,680
diagram of the requirements overlaps

00:35:07,670 --> 00:35:13,910
more and more in all kind if of ways but

00:35:09,680 --> 00:35:16,280
I don't have the list of which ones

00:35:13,910 --> 00:35:18,589
coming next but I will feed that back

00:35:16,280 --> 00:35:19,730
into the people who are doing it and my

00:35:18,589 --> 00:35:23,060
only question was whether there's any

00:35:19,730 --> 00:35:27,970
plans for a IOT systems guidance virtual

00:35:23,060 --> 00:35:27,970
platform at all with a core tech seven

00:35:28,240 --> 00:35:41,650
oh no I guess well okay so system

00:35:38,140 --> 00:35:45,730
guidance platforms for anybody who

00:35:41,650 --> 00:35:49,140
doesn't know are examples of how you put

00:35:45,730 --> 00:35:52,390
together a mobile or an infrastructure

00:35:49,140 --> 00:35:55,570
chip based on arms guidelines with lots

00:35:52,390 --> 00:35:58,599
of information about the performance

00:35:55,570 --> 00:36:01,150
that you would expect about various ways

00:35:58,599 --> 00:36:03,250
of integrating and then they came with a

00:36:01,150 --> 00:36:06,849
example fast model and an example

00:36:03,250 --> 00:36:10,349
software stack and in the embedded space

00:36:06,849 --> 00:36:15,750
we do things slightly different in that

00:36:10,349 --> 00:36:21,070
there's the SDKs that we produce we

00:36:15,750 --> 00:36:23,380
provide FPGA images of those rather than

00:36:21,070 --> 00:36:26,640
the fast models and we provide example

00:36:23,380 --> 00:36:30,910
software so in that respect they're

00:36:26,640 --> 00:36:34,180
quite similar but we're actually

00:36:30,910 --> 00:36:37,270
providing the full RTL and so it's it's

00:36:34,180 --> 00:36:41,109
not the guidance it's a development

00:36:37,270 --> 00:36:44,020
environment so in terms of the software

00:36:41,109 --> 00:36:45,910
aspects we provide a reference system

00:36:44,020 --> 00:36:49,089
that you can learn reference example

00:36:45,910 --> 00:36:50,830
software and in that respect it's quite

00:36:49,089 --> 00:36:54,790
similar and that's what we already

00:36:50,830 --> 00:36:58,510
produce for the the MDS 2 platforms the

00:36:54,790 --> 00:37:00,820
SDK 200 and the musca test chip is

00:36:58,510 --> 00:37:03,880
actually just an example of that I mean

00:37:00,820 --> 00:37:10,420
that's a SDK 200 with some stuff around

00:37:03,880 --> 00:37:12,130
there pushing in silicon so from a

00:37:10,420 --> 00:37:16,330
software software perspective they're

00:37:12,130 --> 00:37:19,960
similar but it's more of a actual

00:37:16,330 --> 00:37:22,869
implementation going to take all these

00:37:19,960 --> 00:37:27,589
bits and use them than a guidance as to

00:37:22,869 --> 00:37:30,670
how you create your own chip

00:37:27,589 --> 00:37:30,670
that's not make sense

00:37:34,030 --> 00:37:40,060
so my question is if the new Clinton

00:37:37,660 --> 00:37:42,220
reporter is maintained by just for my

00:37:40,060 --> 00:37:45,040
organization for different poor are

00:37:42,220 --> 00:37:47,470
ready so they are original I'm just a

00:37:45,040 --> 00:37:50,200
former data repository we will continue

00:37:47,470 --> 00:37:53,490
to be maintained or not so we're

00:37:50,200 --> 00:37:58,990
planning to transition the existing

00:37:53,490 --> 00:38:04,510
eight profile code from github to this

00:37:58,990 --> 00:38:08,730
new git repository over I would say

00:38:04,510 --> 00:38:11,440
hopefully by next Lynne ro connect but

00:38:08,730 --> 00:38:15,220
it's still running in the github at the

00:38:11,440 --> 00:38:18,250
moment and we will make it quite clear

00:38:15,220 --> 00:38:20,640
and deprecation notices and

00:38:18,250 --> 00:38:23,590
announcements about moving it across and

00:38:20,640 --> 00:38:27,030
is there a concern about moving to go

00:38:23,590 --> 00:38:30,250
from the github to just a FOMO dog I

00:38:27,030 --> 00:38:35,500
have a concern so love means were for

00:38:30,250 --> 00:38:38,260
TFM we wear a lot half are independent

00:38:35,500 --> 00:38:41,410
Peter Rapala admitted by arm but we were

00:38:38,260 --> 00:38:44,110
Justin moved with the dinero trusted

00:38:41,410 --> 00:38:46,950
former authorization yeah so well and

00:38:44,110 --> 00:38:50,230
it's just a firm way to all project

00:38:46,950 --> 00:38:53,200
Lennar oh is is managing it in its

00:38:50,230 --> 00:38:56,020
community projects but it's it's and

00:38:53,200 --> 00:38:58,540
Lenora plans to be one of the board

00:38:56,020 --> 00:39:01,570
members but yeah I mean it's not a

00:38:58,540 --> 00:39:05,830
literary project but I say it's a

00:39:01,570 --> 00:39:08,110
community project but yes TIF and we did

00:39:05,830 --> 00:39:10,950
an early access release to the EM

00:39:08,110 --> 00:39:14,080
profile just a firmware on github for

00:39:10,950 --> 00:39:18,310
some partners to give early feedback but

00:39:14,080 --> 00:39:19,960
that github is being basically stopped

00:39:18,310 --> 00:39:24,150
for contributions and everything's

00:39:19,960 --> 00:39:24,150
moving to the the new location and

00:39:24,160 --> 00:39:28,369
[Music]

00:39:25,339 --> 00:39:30,859
yeah and and so all contributions will

00:39:28,369 --> 00:39:35,390
stop for the end profile code there and

00:39:30,859 --> 00:39:38,559
I say for the a +8 profile code we'll

00:39:35,390 --> 00:39:38,559
move to it as soon as we can

00:39:43,310 --> 00:39:46,390
many of the questions

00:39:52,300 --> 00:39:55,080
that's awesome

00:39:56,720 --> 00:39:59,800
okay in which case and thank y'all very

00:39:59,300 --> 00:40:02,900
much

00:39:59,800 --> 00:40:04,730
look forward to hearing from people who

00:40:02,900 --> 00:40:07,010
would like to be members and you are

00:40:04,730 --> 00:40:09,950
attending the more deep dive later on

00:40:07,010 --> 00:40:11,900
this afternoon and I mean with all your

00:40:09,950 --> 00:40:14,030
support hopefully this will be a massive

00:40:11,900 --> 00:40:16,330
success and continue to be so for many

00:40:14,030 --> 00:40:19,420
years to come

00:40:16,330 --> 00:40:19,420
[Applause]

00:40:27,810 --> 00:40:29,870

YouTube URL: https://www.youtube.com/watch?v=wSgR1qSXWfY


