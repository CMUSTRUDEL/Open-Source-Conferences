Title: HKG18-102 - DPDK on Arm64 Platforms
Publication date: 2019-05-09
Playlist: Linaro Connect Hong Kong 2018
Description: 
	Session ID: HKG18-102
Session Name: HKG18-102 - DPDK on Arm64 Platforms
Speaker: Yi He
Track: Networking


★ Session Summary ★
DPDK (Data Plane Development Kit) is a set of libraries and drivers for fast packet processing. Till now, most of DPDK performance statistics available in public are based on x86 platforms. This presentation is going to share some latest info & experience about: \* The test methodologies and scenarios setup on different Arm platforms \* The overview and comparison of DPDK performance statistics in different scenarios & platforms \* The identified factors that may impact the DPDK performance \* The fine tuning & code optimization for DPDK performance on Arm platforms
---------------------------------------------------
★ Resources ★
Event Page: http://connect.linaro.org/resource/hkg18/hkg18-102/
Presentation: http://connect.linaro.org.s3.amazonaws.com/hkg18/presentations/hkg18-102.pdf
Video: http://connect.linaro.org.s3.amazonaws.com/hkg18/videos/hkg18-102.mp4
 ---------------------------------------------------
★ Event Details ★
Linaro Connect Hong Kong 2018 (HKG18)
19-23 March 2018 
Regal Airport Hotel Hong Kong

---------------------------------------------------
Keyword: Networking
'http://www.linaro.org'
'http://connect.linaro.org'
---------------------------------------------------
Follow us on Social Media
https://www.facebook.com/LinaroOrg
https://www.youtube.com/user/linaroorg?sub_confirmation=1
https://www.linkedin.com/company/1026961
Captions: 
	00:00:01,620 --> 00:00:06,580
[Music]

00:00:14,650 --> 00:00:21,230
thank you everyone to join this session

00:00:18,320 --> 00:00:27,260
my name is e I'm from armed Shanghai

00:00:21,230 --> 00:00:30,189
team and today's topic is DP dkm arms 64

00:00:27,260 --> 00:00:33,020
status review and our plan for

00:00:30,189 --> 00:00:36,200
development and collaboration

00:00:33,020 --> 00:00:39,770
so this slide was prepared by my

00:00:36,200 --> 00:00:43,190
teammate Herbert but unfortunately he

00:00:39,770 --> 00:00:46,550
cannot join the Kinect so I will present

00:00:43,190 --> 00:00:50,170
on behalf in any question you want to

00:00:46,550 --> 00:00:54,260
may show up Emil and we will answer

00:00:50,170 --> 00:01:00,800
answer your mail thank you so I will

00:00:54,260 --> 00:01:05,239
start so the first slide was a DP DK

00:01:00,800 --> 00:01:09,140
project overview so DP DK is stands for

00:01:05,239 --> 00:01:11,960
a theta plane development kit so it was

00:01:09,140 --> 00:01:15,350
a consisted of set of libraries and

00:01:11,960 --> 00:01:21,560
drivers for fast packet processing and

00:01:15,350 --> 00:01:25,390
it was almost lay a Linux user space so

00:01:21,560 --> 00:01:29,290
the project was started Intel

00:01:25,390 --> 00:01:37,160
Architecture and it is now extended to

00:01:29,290 --> 00:01:40,970
IBM and also on a forest architecture so

00:01:37,160 --> 00:01:44,000
below the logos listed all the major

00:01:40,970 --> 00:01:47,210
members and the contributors so we have

00:01:44,000 --> 00:01:51,320
several active members our partners

00:01:47,210 --> 00:01:54,830
working on our platforms and also arm is

00:01:51,320 --> 00:01:58,820
one of the coda members in the DPD k

00:01:54,830 --> 00:02:06,350
project so this is the DP DK project

00:01:58,820 --> 00:02:10,090
overview so this slide shows a how

00:02:06,350 --> 00:02:13,459
deeply DK is being used so the use case

00:02:10,090 --> 00:02:15,950
the PDK framework provides a meta

00:02:13,459 --> 00:02:19,849
component on which the network

00:02:15,950 --> 00:02:21,530
applications can be built so the pillow

00:02:19,849 --> 00:02:25,700
diagram shows a

00:02:21,530 --> 00:02:28,940
application stack that DP DK was

00:02:25,700 --> 00:02:33,320
involved so from the top diagram we can

00:02:28,940 --> 00:02:37,190
see that DP deacon majorly serve as a

00:02:33,320 --> 00:02:40,760
user space pakka diode driver component

00:02:37,190 --> 00:02:44,720
for the whole application stack so it

00:02:40,760 --> 00:02:49,580
provided the user space humo the driver

00:02:44,720 --> 00:02:52,880
for the hardware packet i/o so above it

00:02:49,580 --> 00:02:56,209
we can have a soft virtual machine

00:02:52,880 --> 00:03:01,100
switching layer which can be provided by

00:02:56,209 --> 00:03:04,400
the open V switch or the VPP project for

00:03:01,100 --> 00:03:08,870
the virtual switching and also about

00:03:04,400 --> 00:03:11,810
that is a software Motoko termination

00:03:08,870 --> 00:03:16,010
layer which we can use for example the

00:03:11,810 --> 00:03:19,160
VPP hosts a stack to serve as a stark

00:03:16,010 --> 00:03:23,060
termination layer so on the top layer

00:03:19,160 --> 00:03:27,110
there is a variant applications running

00:03:23,060 --> 00:03:31,310
upon so this is the use case that we are

00:03:27,110 --> 00:03:34,549
our team is currently exploring and we

00:03:31,310 --> 00:03:41,320
use TP DK major as a user space pack a

00:03:34,549 --> 00:03:47,930
towel component so this is for the use

00:03:41,320 --> 00:03:51,890
scenarios this slide given status update

00:03:47,930 --> 00:03:56,120
for the DP decay project on our 64

00:03:51,890 --> 00:03:59,510
platform we have multiple active members

00:03:56,120 --> 00:04:03,230
working on DP DK project on arm

00:03:59,510 --> 00:04:07,090
platforms so especially many sects to

00:04:03,230 --> 00:04:13,070
kayvyun which initiated the arm platform

00:04:07,090 --> 00:04:16,450
1440p DK project since 2015 and after

00:04:13,070 --> 00:04:21,680
then remain as an active room maintain a

00:04:16,450 --> 00:04:24,440
forearm platform so for our team

00:04:21,680 --> 00:04:29,900
currently we are majorly working on

00:04:24,440 --> 00:04:33,500
three topics for the DP DK young arm 64

00:04:29,900 --> 00:04:37,340
so the first topic is a functional

00:04:33,500 --> 00:04:42,500
vacation and enabling currently we are

00:04:37,340 --> 00:04:46,000
enabling the DPD K test suite on our

00:04:42,500 --> 00:04:51,020
platform imposed bare metal and

00:04:46,000 --> 00:04:54,170
virtualization the environment and on

00:04:51,020 --> 00:04:57,740
several arm platforms with selected NICs

00:04:54,170 --> 00:05:00,500
so this is the top áfirstá topic we are

00:04:57,740 --> 00:05:04,280
working on for a functional enablement

00:05:00,500 --> 00:05:07,280
and the verification the second topic is

00:05:04,280 --> 00:05:10,850
DP DK performance measurement on arm

00:05:07,280 --> 00:05:15,530
platforms so we can see on the right

00:05:10,850 --> 00:05:18,919
side this diagram depicts our setup for

00:05:15,530 --> 00:05:22,940
DP DK performance measurement we have a

00:05:18,919 --> 00:05:26,330
pair metal environment which using an H

00:05:22,940 --> 00:05:34,160
shear traffic generator and the using

00:05:26,330 --> 00:05:37,220
physical NIC oh sorry and upon it we run

00:05:34,160 --> 00:05:41,260
the deeply DK layer to forwarding

00:05:37,220 --> 00:05:44,150
application to measure the performance

00:05:41,260 --> 00:05:46,669
so this is the second topic we are

00:05:44,150 --> 00:05:50,060
working on and that the third topic is

00:05:46,669 --> 00:05:54,040
use case setup currently we are

00:05:50,060 --> 00:05:57,050
exploring the DP DK use cases in

00:05:54,040 --> 00:06:00,620
containerized the environment and the

00:05:57,050 --> 00:06:06,169
wizard like engine ends with DP D K and

00:06:00,620 --> 00:06:10,850
M TCP user space stack so this is the

00:06:06,169 --> 00:06:15,410
Serta topic we are working on so on the

00:06:10,850 --> 00:06:18,740
next few slides I will go into details

00:06:15,410 --> 00:06:25,100
on each topic and give some more

00:06:18,740 --> 00:06:27,430
information on our status so the first

00:06:25,100 --> 00:06:33,100
topic we are working on is the

00:06:27,430 --> 00:06:38,540
functional enabling and DP DK test suite

00:06:33,100 --> 00:06:39,650
so currently we already run the DTS the

00:06:38,540 --> 00:06:44,419
DP DK test

00:06:39,650 --> 00:06:47,750
it on our variant arm platforms so all

00:06:44,419 --> 00:06:51,580
the test Suites were executed so

00:06:47,750 --> 00:06:54,830
including the virtualization suite and

00:06:51,580 --> 00:06:58,520
while we are doing this enablement we

00:06:54,830 --> 00:07:04,340
have up streamed more than 60 patches to

00:06:58,520 --> 00:07:07,039
the DPD Kay and also the DTS project our

00:07:04,340 --> 00:07:11,419
purpose our goal is to identify a set of

00:07:07,039 --> 00:07:16,160
DTS test cases suitable for arm platform

00:07:11,419 --> 00:07:19,520
so that by enabling and bypassing those

00:07:16,160 --> 00:07:25,669
test case we can ensure that DP decays

00:07:19,520 --> 00:07:28,600
properly supported arm platforms but due

00:07:25,669 --> 00:07:32,599
to some resource limitation or some

00:07:28,600 --> 00:07:36,889
priority we will not fix all the DTS

00:07:32,599 --> 00:07:42,310
issues so still some failures are low

00:07:36,889 --> 00:07:42,310
priority or we do not have that hardware

00:07:42,490 --> 00:07:51,130
so also we are working on a set up and

00:07:46,099 --> 00:07:55,220
CI for the DTS to run automatically and

00:07:51,130 --> 00:07:59,300
the totally there is a around the 200

00:07:55,220 --> 00:08:03,800
test cases passed out of the around the

00:07:59,300 --> 00:08:09,729
400 test case so we are continuing work

00:08:03,800 --> 00:08:09,729
on this enablement and the CI setup

00:08:13,050 --> 00:08:21,340
yeah so next slide shows the our

00:08:16,660 --> 00:08:25,419
internal DPD KCI setup so the purpose is

00:08:21,340 --> 00:08:28,930
that we can get ready for upcoming some

00:08:25,419 --> 00:08:34,089
public deputy Kayla and make sure that

00:08:28,930 --> 00:08:37,990
the PDK always work on our platform and

00:08:34,089 --> 00:08:40,570
also the DPD KCI setup can serve the

00:08:37,990 --> 00:08:44,410
purpose for internal patro review and

00:08:40,570 --> 00:08:48,430
for daily view the status is that we

00:08:44,410 --> 00:08:54,820
have to select open platforms enabled

00:08:48,430 --> 00:08:58,329
for the DBD KCI internally and we are

00:08:54,820 --> 00:09:03,820
running the DTS unit test suite on our

00:08:58,329 --> 00:09:07,290
internal DPD KC I set up our next plan

00:09:03,820 --> 00:09:11,880
is that we can add more test Suites

00:09:07,290 --> 00:09:15,850
besides the basic unit tests and we can

00:09:11,880 --> 00:09:19,980
extend or copy this set up to the

00:09:15,850 --> 00:09:24,550
Lonardo lab with proper hardware's

00:09:19,980 --> 00:09:28,720
on the right side of the diagram just to

00:09:24,550 --> 00:09:32,890
show our internal DP dkcr SATA we are

00:09:28,720 --> 00:09:40,060
using Garrett and chetan's to manager

00:09:32,890 --> 00:09:42,329
our duty and tester computer or test a

00:09:40,060 --> 00:09:42,329
server

00:09:43,800 --> 00:09:49,730
so this is for internal DPD k-ci setup

00:09:50,779 --> 00:09:56,519
okay so this is the second topic we are

00:09:54,089 --> 00:10:01,860
working on for performance measurement

00:09:56,519 --> 00:10:07,079
and optimization now we already run the

00:10:01,860 --> 00:10:11,610
RFC 254 for tester suite in our internal

00:10:07,079 --> 00:10:14,660
CI setup and we are continuing

00:10:11,610 --> 00:10:17,910
collecting the performance measurement

00:10:14,660 --> 00:10:23,040
especially for the throughput and the

00:10:17,910 --> 00:10:26,129
latency data's so on the right side you

00:10:23,040 --> 00:10:29,939
can see that we are collecting the

00:10:26,129 --> 00:10:35,279
throughput and latency data and each bar

00:10:29,939 --> 00:10:39,989
represents a throughput number on

00:10:35,279 --> 00:10:42,769
different platforms through this

00:10:39,989 --> 00:10:47,069
performance measurement work we are

00:10:42,769 --> 00:10:49,499
preliminary identify some factors which

00:10:47,069 --> 00:10:54,119
will impact the db/decade

00:10:49,499 --> 00:10:58,110
performance on on 64 platforms so one

00:10:54,119 --> 00:11:00,899
factor is the TRX descriptor number so

00:10:58,110 --> 00:11:05,360
by configuring the TRX descriptor number

00:11:00,899 --> 00:11:09,499
we can increase the throughput

00:11:05,360 --> 00:11:13,350
performance and also we identify that

00:11:09,499 --> 00:11:17,040
chillip C and the GCC version can affect

00:11:13,350 --> 00:11:20,339
can impact the performance number so

00:11:17,040 --> 00:11:23,480
newer version will be better because so

00:11:20,339 --> 00:11:26,669
this is good thing that we realize that

00:11:23,480 --> 00:11:33,419
GFC and the GCC are continuing

00:11:26,669 --> 00:11:38,459
optimization for the 64 platform so also

00:11:33,419 --> 00:11:42,540
we identify some that some arm platforms

00:11:38,459 --> 00:11:45,540
show better performance than x86

00:11:42,540 --> 00:11:48,230
platform on some specific test cases

00:11:45,540 --> 00:11:53,150
like mem copy and

00:11:48,230 --> 00:11:57,560
OpenSSL yes so this already shows some

00:11:53,150 --> 00:12:01,550
benefit of the arm 64 platform because

00:11:57,560 --> 00:12:06,680
of special hardware accelerator for

00:12:01,550 --> 00:12:10,820
those functions finally we also run some

00:12:06,680 --> 00:12:14,870
profiling to measure the CPU cycle

00:12:10,820 --> 00:12:18,560
hotspots on our platforms so this is

00:12:14,870 --> 00:12:22,990
only some preliminary investigation so

00:12:18,560 --> 00:12:22,990
we will continue on this profile a words

00:12:23,560 --> 00:12:33,680
so this is the second topic for

00:12:26,270 --> 00:12:39,370
performance measurement so this is our

00:12:33,680 --> 00:12:43,730
future plan for DP DK work for our team

00:12:39,370 --> 00:12:49,780
so it was a four categories for

00:12:43,730 --> 00:12:52,820
functional enablement we will move on to

00:12:49,780 --> 00:12:55,610
some use case especially for the

00:12:52,820 --> 00:12:58,820
virtualization scenarios investigation

00:12:55,610 --> 00:13:01,990
so currently virtualization and the

00:12:58,820 --> 00:13:05,570
containerization is quite hot topics

00:13:01,990 --> 00:13:09,590
also we will continue on the CI setup

00:13:05,570 --> 00:13:12,380
with selected a platform and also will

00:13:09,590 --> 00:13:17,900
collect collaborate with lonardo areg

00:13:12,380 --> 00:13:20,240
team for the DPD k CI automation also we

00:13:17,900 --> 00:13:26,930
will continue work on the architectural

00:13:20,240 --> 00:13:30,170
enhancements for the DPD KR r 64 for the

00:13:26,930 --> 00:13:34,220
roadmap we will define the DPD kr arm

00:13:30,170 --> 00:13:38,000
roadmap with partners partners and with

00:13:34,220 --> 00:13:39,350
Lyn are together for the performance

00:13:38,000 --> 00:13:42,260
measurement and

00:13:39,350 --> 00:13:46,460
optimization we will continue work on

00:13:42,260 --> 00:13:49,540
the bare metal environment but also we

00:13:46,460 --> 00:13:52,610
will start working on the invite

00:13:49,540 --> 00:13:57,140
virtualization scenarios I will

00:13:52,610 --> 00:14:04,280
investigate and optimize on the like PMD

00:13:57,140 --> 00:14:07,580
crypto drivers such component and one

00:14:04,280 --> 00:14:10,940
topic is to investigate the performance

00:14:07,580 --> 00:14:15,350
in virtualization and multi cost in area

00:14:10,940 --> 00:14:20,720
because arm were said to be well benefit

00:14:15,350 --> 00:14:24,250
on multi-core architecture so this is

00:14:20,720 --> 00:14:28,250
for performance and for the community

00:14:24,250 --> 00:14:31,250
collaboration arm team welco work with

00:14:28,250 --> 00:14:34,010
leonardo of the PDK and will build a

00:14:31,250 --> 00:14:37,630
connection with the PDK community and

00:14:34,010 --> 00:14:37,630
our partners

00:14:40,450 --> 00:14:47,560
so this is the community collaboration

00:14:43,720 --> 00:14:50,589
that now we have internal CI sarà

00:14:47,560 --> 00:14:54,930
and we will work with Leonardo to have

00:14:50,589 --> 00:14:58,870
the DPD Casey asserted in Leonardo lab

00:14:54,930 --> 00:15:01,889
and we will regularly sync up inside a

00:14:58,870 --> 00:15:06,250
Leonardo for the DP decay directions and

00:15:01,889 --> 00:15:09,339
future works and the set the third one

00:15:06,250 --> 00:15:13,120
is a proposal to establish a contact

00:15:09,339 --> 00:15:17,850
channel or mailing list to coordinate on

00:15:13,120 --> 00:15:17,850
the DP DK work in dinero

00:15:22,240 --> 00:15:38,009
okay so this is our slides for the DP DK

00:15:28,360 --> 00:15:38,009
on 64 platform so any question so

00:15:40,290 --> 00:15:43,069
Tucson

00:15:44,600 --> 00:15:53,750
so beyond the one slide way you showed

00:15:49,040 --> 00:15:55,190
your DTS failures there's a slide that

00:15:53,750 --> 00:16:02,570
was breaking down what the yeah the

00:15:55,190 --> 00:16:03,260
failure analysis yeah that one so the

00:16:02,570 --> 00:16:06,710
failure that's it

00:16:03,260 --> 00:16:08,930
so I'm trying to is it's a little small

00:16:06,710 --> 00:16:10,670
to read that pie chart but but this is

00:16:08,930 --> 00:16:13,250
the breakdown of so it looked like

00:16:10,670 --> 00:16:15,050
roughly half of the tests we're failing

00:16:13,250 --> 00:16:20,750
and these are the reasons why they were

00:16:15,050 --> 00:16:22,610
failing yeah so and and so the one of

00:16:20,750 --> 00:16:25,670
them is is you know problems with DTS

00:16:22,610 --> 00:16:27,280
itself as opposed to with are more could

00:16:25,670 --> 00:16:31,270
you sit elaborate a little bit about

00:16:27,280 --> 00:16:31,270
about those those failures

00:16:33,820 --> 00:16:42,850
yeah so for the but I think it is

00:16:38,670 --> 00:16:47,860
secretly that this test pays have a bike

00:16:42,850 --> 00:16:51,190
on our platform so further Nick it

00:16:47,860 --> 00:16:55,990
majorly means we are short of hardware

00:16:51,190 --> 00:17:03,160
so some Nick hardware was not available

00:16:55,990 --> 00:17:08,770
in our lab and for the DTS in Intel only

00:17:03,160 --> 00:17:11,800
so song can you elaborate Alice actually

00:17:08,770 --> 00:17:14,830
no DTS was initially designed by in

00:17:11,800 --> 00:17:17,530
careful so some test cases actually is

00:17:14,830 --> 00:17:20,770
fine today how well some feature on the

00:17:17,530 --> 00:17:23,260
index so it's not good design format

00:17:20,770 --> 00:17:26,110
people architecture I talked with some

00:17:23,260 --> 00:17:28,900
Intel people too but this is what like

00:17:26,110 --> 00:17:31,180
they have in to be too careful now so

00:17:28,900 --> 00:17:34,840
for some test case it may not be

00:17:31,180 --> 00:17:37,060
relevant to am yet so I think that not

00:17:34,840 --> 00:17:41,980
more important thing to identify and a

00:17:37,060 --> 00:17:45,310
select test suite so we can show TBT

00:17:41,980 --> 00:17:48,670
case where support are the problem now

00:17:45,310 --> 00:17:51,940
they are no public DP the KCI Intel here

00:17:48,670 --> 00:17:53,770
in internal CI system so when they saw

00:17:51,940 --> 00:17:54,340
the problem something is broken and they

00:17:53,770 --> 00:17:57,820
just saying

00:17:54,340 --> 00:18:00,520
male 2 from the ACI to the project

00:17:57,820 --> 00:18:03,640
administrator but now like they are

00:18:00,520 --> 00:18:07,750
initiative in committed to set up DBC IE

00:18:03,640 --> 00:18:10,270
t BTK open lab is still in progress so a

00:18:07,750 --> 00:18:12,370
lot of the happy in a release that is

00:18:10,270 --> 00:18:14,710
some people they only have it care

00:18:12,370 --> 00:18:16,810
platform they they do some coaching at

00:18:14,710 --> 00:18:17,560
least met the amp you're talking but

00:18:16,810 --> 00:18:20,650
they don't know

00:18:17,560 --> 00:18:23,680
so after this run is crying found the

00:18:20,650 --> 00:18:26,800
dinero can help together how we can like

00:18:23,680 --> 00:18:29,500
i said it is up for the because they are

00:18:26,800 --> 00:18:31,630
we still have some work to do yeah i

00:18:29,500 --> 00:18:32,950
agree very good sir my understanding was

00:18:31,630 --> 00:18:37,870
the DTS was a rich

00:18:32,950 --> 00:18:42,040
delay designed to test x86 platforms for

00:18:37,870 --> 00:18:44,740
ability to run DVD K right and and your

00:18:42,040 --> 00:18:46,990
obviously this DBK moving to add arm

00:18:44,740 --> 00:18:51,310
support it sounds like DVD K got ahead

00:18:46,990 --> 00:18:54,190
of DTS yes exactly you are right

00:18:51,310 --> 00:18:55,300
actually there was some discovery what

00:18:54,190 --> 00:18:58,900
kind of taste to it

00:18:55,300 --> 00:19:02,920
we show use for CI the problem the TTS

00:18:58,900 --> 00:19:06,340
is currently what like people have and I

00:19:02,920 --> 00:19:08,940
think XP or kiri and some other partner

00:19:06,340 --> 00:19:11,980
already done some work to fix some issue

00:19:08,940 --> 00:19:14,380
another objects the develop separate

00:19:11,980 --> 00:19:16,320
test case just for our by eventually

00:19:14,380 --> 00:19:19,270
this idea was rejected

00:19:16,320 --> 00:19:22,270
now people aligned we should move out

00:19:19,270 --> 00:19:23,980
the test but make it more suitable for

00:19:22,270 --> 00:19:26,170
multiple effector

00:19:23,980 --> 00:19:34,300
but for up level we still have nothing

00:19:26,170 --> 00:19:37,420
to do which hard work do you use for

00:19:34,300 --> 00:19:40,350
testing is it our 64 but they use sneaks

00:19:37,420 --> 00:19:40,350
or the years

00:19:41,640 --> 00:19:49,570
actually our live we have missed kind of

00:19:45,300 --> 00:19:55,150
Hawaii we have wowie

00:19:49,570 --> 00:19:59,140
- 0 5 2 0 3 we have Kaka we have XP how

00:19:55,150 --> 00:20:01,750
we have came in well we have signed the

00:19:59,140 --> 00:20:11,920
NIC we are using many Eternia and

00:20:01,750 --> 00:20:15,190
manuals NYX kiss me European do you get

00:20:11,920 --> 00:20:21,760
line right speeds for Villeneuve sneak

00:20:15,190 --> 00:20:24,250
on for the test with Meadows NYX is

00:20:21,760 --> 00:20:27,820
still in progress

00:20:24,250 --> 00:20:31,330
we used internet first the release we

00:20:27,820 --> 00:20:35,950
saw some people initial we did some

00:20:31,330 --> 00:20:37,990
profit Union for Internet to our forum

00:20:35,950 --> 00:20:41,650
and ups we are working on that we do

00:20:37,990 --> 00:20:44,470
have like performance report yet we

00:20:41,650 --> 00:20:50,560
indeed we achieve line rate are some

00:20:44,470 --> 00:20:55,560
Nicks some ant platform ok so please do

00:20:50,560 --> 00:20:55,560
need some water to work perfectly on our

00:20:57,360 --> 00:21:07,540
yes for some Nick's may take some time

00:21:02,230 --> 00:21:12,190
may not well we fix some issue for may

00:21:07,540 --> 00:21:16,780
not work with poker but I think not all

00:21:12,190 --> 00:21:19,060
may not yeast can gesture without some

00:21:16,780 --> 00:21:22,690
I'm so aware for now because I'm sorry

00:21:19,060 --> 00:21:26,320
for Trevor site they are always don't

00:21:22,690 --> 00:21:28,030
know there some pickups we are trying to

00:21:26,320 --> 00:21:30,450
fix this along the way during our

00:21:28,030 --> 00:21:30,450
testing

00:21:31,299 --> 00:21:36,860
can you share some details probably what

00:21:34,669 --> 00:21:40,009
what what what kind of pizzas are

00:21:36,860 --> 00:21:43,009
because babies are right Nancy right so

00:21:40,009 --> 00:21:46,639
we have compiled C code on axis 6 and on

00:21:43,009 --> 00:21:50,440
arm and after that you also need some

00:21:46,639 --> 00:21:57,590
fixes of arm what kind of changes I

00:21:50,440 --> 00:22:01,399
needed okay the things the the while I

00:21:57,590 --> 00:22:03,740
probably fix our internship is some part

00:22:01,399 --> 00:22:06,230
of travel for actor I have to say I do

00:22:03,740 --> 00:22:09,139
remember the detail is the engineer from

00:22:06,230 --> 00:22:11,409
our team did the work if you need a to

00:22:09,139 --> 00:22:14,659
tell you can't join me that you well I

00:22:11,409 --> 00:22:28,340
can't like give you more detail actually

00:22:14,659 --> 00:22:31,129
on what we have done only after we fix

00:22:28,340 --> 00:22:33,860
the probably just upstream the page

00:22:31,129 --> 00:22:36,230
if you like to see some more you can ask

00:22:33,860 --> 00:22:40,039
us to probably for something we have

00:22:36,230 --> 00:22:43,759
taking a look already it's still like I

00:22:40,039 --> 00:22:45,710
agree for some Knicks with some service

00:22:43,759 --> 00:22:49,820
because we haven't as others narrow some

00:22:45,710 --> 00:22:54,220
time have problem but they use

00:22:49,820 --> 00:22:54,220
little-endian or big-endian or both

00:22:54,620 --> 00:22:57,789
I mean enemies

00:22:58,030 --> 00:23:11,880
I'm not sure like we care about I think

00:23:06,040 --> 00:23:11,880
we just did to ending superior ID okay

00:23:15,539 --> 00:23:20,559
just to answer a part of your

00:23:17,740 --> 00:23:22,509
optimization question most of the

00:23:20,559 --> 00:23:28,350
optimizations are related to memory

00:23:22,509 --> 00:23:28,350
address and a few of them are related to

00:23:29,429 --> 00:23:35,289
their happy also some new relative

00:23:32,769 --> 00:23:43,779
optimizations in the code like a memory

00:23:35,289 --> 00:23:45,580
copy is one of them yes can you

00:23:43,779 --> 00:23:48,159
elaborate a little bit more on your

00:23:45,580 --> 00:23:49,690
software and hardware setup for the seei

00:23:48,159 --> 00:23:51,789
and the performance testing you mean

00:23:49,690 --> 00:23:53,649
what does your lab look like you've got

00:23:51,789 --> 00:23:56,320
a range of different platforms how are

00:23:53,649 --> 00:23:59,370
you connecting things up and how are you

00:23:56,320 --> 00:23:59,370
controlling your tests

00:24:02,610 --> 00:24:07,909
see I I think just the one you're

00:24:04,860 --> 00:24:07,909
destined this way

00:24:11,460 --> 00:24:22,280
so basically we are bearded SC I based

00:24:16,620 --> 00:24:27,960
on the Garrett and around the jackets so

00:24:22,280 --> 00:24:33,900
Jackie's will control the test equipment

00:24:27,960 --> 00:24:36,270
through the control node and so we can

00:24:33,900 --> 00:24:40,230
trigger that data viewed through the

00:24:36,270 --> 00:24:43,290
check-ins jars so it will the job will

00:24:40,230 --> 00:24:48,000
be scheduler to one Pacific configure

00:24:43,290 --> 00:24:51,690
node and the one with most tester to

00:24:48,000 --> 00:24:56,130
generate two traffic and with the Duty

00:24:51,690 --> 00:24:58,920
for the Pacific test pace and also

00:24:56,130 --> 00:25:03,030
besides the data period goes through

00:24:58,920 --> 00:25:05,100
Jackie's we also can trigger the manual

00:25:03,030 --> 00:25:07,590
Butte through the ref Garrett for

00:25:05,100 --> 00:25:11,520
example we have a co2 review we have

00:25:07,590 --> 00:25:15,120
some patch submitted into the co2 review

00:25:11,520 --> 00:25:19,770
system and it can trigger a pure job

00:25:15,120 --> 00:25:21,750
through Garrett to the check-ins and run

00:25:19,770 --> 00:25:25,410
automatically on a specific

00:25:21,750 --> 00:25:27,360
configuration yeah so we you've got a

00:25:25,410 --> 00:25:29,850
set of static configurations that you're

00:25:27,360 --> 00:25:33,260
using for testing yeah yeah currently

00:25:29,850 --> 00:25:37,860
each configuration is static and

00:25:33,260 --> 00:25:43,410
specific for several test case scenario

00:25:37,860 --> 00:25:44,910
yeah so if you got things gin just wired

00:25:43,410 --> 00:25:49,620
directly together you go through

00:25:44,910 --> 00:25:52,430
switches or yeah character or our

00:25:49,620 --> 00:25:54,780
traffic is goes through a 10g switch

00:25:52,430 --> 00:25:57,540
yeah

00:25:54,780 --> 00:26:03,400
this switch is dedicated for their lab

00:25:57,540 --> 00:26:06,970
use and isolated from the company

00:26:03,400 --> 00:26:10,210
okay thanks so I should let bit more on

00:26:06,970 --> 00:26:12,640
that I'm interested I'm with the the

00:26:10,210 --> 00:26:17,080
lofty great and so we're looking at

00:26:12,640 --> 00:26:19,390
doing some more this type of testing so

00:26:17,080 --> 00:26:22,809
do you isolate your tests or do you only

00:26:19,390 --> 00:26:27,430
world one one at once or but what's the

00:26:22,809 --> 00:26:29,650
scheduling look like for the shadow day

00:26:27,430 --> 00:26:31,960
I do not know that detail further for

00:26:29,650 --> 00:26:37,270
this yes because the system was a

00:26:31,960 --> 00:26:40,450
maintained by our ITT so we are with

00:26:37,270 --> 00:26:43,059
their home to set up this specific

00:26:40,450 --> 00:26:48,460
configuration and the jackings drops for

00:26:43,059 --> 00:26:52,900
this okay okay okay my question is a

00:26:48,460 --> 00:26:55,000
because we know the asked SPT que se

00:26:52,900 --> 00:26:58,600
because postal reject over here this

00:26:55,000 --> 00:27:01,150
based on the TTT so my question is all

00:26:58,600 --> 00:27:03,940
the optimization and architecture

00:27:01,150 --> 00:27:06,100
enhancement is transparent for

00:27:03,940 --> 00:27:11,559
aesthetically before we use a surrogate

00:27:06,100 --> 00:27:15,130
based on activity yeah so currently we

00:27:11,559 --> 00:27:18,550
are working only specifically our DP

00:27:15,130 --> 00:27:21,880
weekly project so the investigation and

00:27:18,550 --> 00:27:26,980
optimization is focusing on network

00:27:21,880 --> 00:27:30,010
application so I think for SP DK it will

00:27:26,980 --> 00:27:32,920
have a special requirement or a

00:27:30,010 --> 00:27:39,220
different measurement for the storage

00:27:32,920 --> 00:27:42,490
application yes actually we we have a

00:27:39,220 --> 00:27:44,890
year working on STP decay today's talk

00:27:42,490 --> 00:27:49,750
maybe is at the same time on with this

00:27:44,890 --> 00:27:52,360
time taco SP DK yeah so you can talk

00:27:49,750 --> 00:27:57,550
with the onion year our team directly

00:27:52,360 --> 00:28:01,120
but the just based on the tip DK so my

00:27:57,550 --> 00:28:05,170
thought is if we enhance or modify the

00:28:01,120 --> 00:28:07,570
typically miss you the cyclization

00:28:05,170 --> 00:28:08,990
the win this space rushing or maybe it's

00:28:07,570 --> 00:28:12,950
transparent

00:28:08,990 --> 00:28:14,960
no need to do this decoration I think so

00:28:12,950 --> 00:28:17,240
but the probably a speedy care you'll

00:28:14,960 --> 00:28:19,850
some stable release from DVD can

00:28:17,240 --> 00:28:22,880
literally the case it should be

00:28:19,850 --> 00:28:27,309
transparent and are every improvement we

00:28:22,880 --> 00:28:31,370
do here you will liberate from SPT K

00:28:27,309 --> 00:28:33,200
yeah I think the the our team also have

00:28:31,370 --> 00:28:36,620
something that you can talk to within a

00:28:33,200 --> 00:28:39,140
year under SB t care progress okay it is

00:28:36,620 --> 00:28:42,470
utterly narrow I'm not sure paddled in

00:28:39,140 --> 00:28:47,740
an enterprise to a group or it's just

00:28:42,470 --> 00:28:47,740
from our team you can probably have okay

00:28:49,090 --> 00:28:53,510
okay so step you ever won so it's just

00:28:52,730 --> 00:28:56,660
in time

00:28:53,510 --> 00:28:58,320
sepia or joy in the session and have a

00:28:56,660 --> 00:29:01,410
good day

00:28:58,320 --> 00:29:01,410
[Applause]

00:29:08,179 --> 00:29:10,240

YouTube URL: https://www.youtube.com/watch?v=6x448gOwwU0


