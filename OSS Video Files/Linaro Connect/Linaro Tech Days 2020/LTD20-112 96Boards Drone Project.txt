Title: LTD20-112 96Boards Drone Project
Publication date: 2020-03-25
Playlist: Linaro Tech Days 2020
Description: 
	Description:
The 96Boards drone project is a test vehicle that will evolve over time. The purpose it to create a platform that can be used to test and showcase various technologies provided by out partners and members like lidars, cameras, etc.

The talk will go into detail about what the team plans on doing with this platform, how our members can contribute and use it and the changes we want to see in the Drone community.

The talk will be followed by a small demo of an actual drone flying using 96boards hardware.

Session Speakers
Sahaj Sarup - Applications Enginner (Linaro)


Open source software and hardware enthusiast. Currently working at 96Boards, Linaro as a full-time Maker. 



You can find the presentation for this session on connect.linaro.org:
https://connect.linaro.org/resources/ltd20/ltd20-112/
Captions: 
	00:00:00,230 --> 00:00:04,980
[Music]

00:00:00,770 --> 00:00:12,269
all right good morning evening afternoon

00:00:04,980 --> 00:00:15,150
wherever you are the today's topic is 96

00:00:12,269 --> 00:00:18,390
boards drone project and I'm sad so I'm

00:00:15,150 --> 00:00:21,660
an applications engineer at Leonora

00:00:18,390 --> 00:00:24,960
working with the 96 volts group and my

00:00:21,660 --> 00:00:28,880
day-to-day activities involve making

00:00:24,960 --> 00:00:33,500
such projects that showcase our partners

00:00:28,880 --> 00:00:37,380
boards and their functionality so the

00:00:33,500 --> 00:00:40,110
but so basically the drone project came

00:00:37,380 --> 00:00:46,879
across as an idea to create a platform

00:00:40,110 --> 00:00:52,530
to test to test different 9006 boards in

00:00:46,879 --> 00:00:59,579
drone environment or a drone like don't

00:00:52,530 --> 00:01:01,680
like application and let's let's move

00:00:59,579 --> 00:01:04,979
forward with the slide so the project

00:01:01,680 --> 00:01:08,010
goal starting with the design was to

00:01:04,979 --> 00:01:11,010
make it completely out of DIY parts not

00:01:08,010 --> 00:01:16,460
to make it super expensive to try and

00:01:11,010 --> 00:01:20,400
reuse as much of commonly available

00:01:16,460 --> 00:01:24,000
building box as we can so that's sort of

00:01:20,400 --> 00:01:26,130
what we have targeted here and - so that

00:01:24,000 --> 00:01:28,439
includes your drone frame your motors

00:01:26,130 --> 00:01:30,540
ESC propeller sensors controller parts

00:01:28,439 --> 00:01:33,540
and stuff like that

00:01:30,540 --> 00:01:36,210
expandable design so the initial design

00:01:33,540 --> 00:01:38,790
that we have right now involves MCU

00:01:36,210 --> 00:01:43,979
powered mezzanine in this case it's an

00:01:38,790 --> 00:01:45,899
STM 32 and option expands expandability

00:01:43,979 --> 00:01:51,090
since it's a machine you can always

00:01:45,899 --> 00:01:53,070
attach cortex a Class C e 96 ports so

00:01:51,090 --> 00:01:55,770
that would run full on Linux instead of

00:01:53,070 --> 00:01:59,600
an artist and we'll do non real-time

00:01:55,770 --> 00:02:02,310
activities which we'll cover later on

00:01:59,600 --> 00:02:06,060
open source firmware for now it's easy

00:02:02,310 --> 00:02:08,330
for artists and anything else is that's

00:02:06,060 --> 00:02:11,640
open source is always on the plate and

00:02:08,330 --> 00:02:13,910
it's an ever evolving test platform I

00:02:11,640 --> 00:02:15,560
never intend this project to

00:02:13,910 --> 00:02:19,190
really finish just have different

00:02:15,560 --> 00:02:23,380
milestones so the current one is to get

00:02:19,190 --> 00:02:29,570
it working with Zephyr artists and the

00:02:23,380 --> 00:02:31,930
MCU so in terms of functionality the

00:02:29,570 --> 00:02:36,050
main MCU design that we have right now

00:02:31,930 --> 00:02:38,840
we aim to provide all digital to control

00:02:36,050 --> 00:02:41,770
using common interfaces like ICU art and

00:02:38,840 --> 00:02:44,540
can if you look at modern-day drones

00:02:41,770 --> 00:02:46,280
that you know you can see all over

00:02:44,540 --> 00:02:48,620
YouTube or if you just google how to

00:02:46,280 --> 00:02:51,740
make a drone the stuff that you'll see

00:02:48,620 --> 00:02:55,310
is mostly controlled via analogue sticks

00:02:51,740 --> 00:02:57,020
analog radio and even once the

00:02:55,310 --> 00:02:58,580
transmission is received on the drones

00:02:57,020 --> 00:03:01,100
and pretty much everything else is

00:02:58,580 --> 00:03:04,790
analog apart from the ESC s but they

00:03:01,100 --> 00:03:06,200
also operate in a PWM fashion so we will

00:03:04,790 --> 00:03:11,710
cover that later on as well and why I

00:03:06,200 --> 00:03:14,480
don't think that's completely digital so

00:03:11,710 --> 00:03:17,720
to get rid of all of that and to have a

00:03:14,480 --> 00:03:20,600
fully digital interface that would then

00:03:17,720 --> 00:03:23,750
help us make it fully autonomous and

00:03:20,600 --> 00:03:25,910
with our main MCU design we plan to make

00:03:23,750 --> 00:03:28,490
the startup sequence fully autonomous

00:03:25,910 --> 00:03:30,740
and again we will see down the road what

00:03:28,490 --> 00:03:33,470
the current situation is and how we can

00:03:30,740 --> 00:03:35,540
improve on that then the expense they

00:03:33,470 --> 00:03:38,210
expand its EE design that comes later

00:03:35,540 --> 00:03:42,410
down the road will give us fully

00:03:38,210 --> 00:03:44,450
autonomous flight 3d mapping using

00:03:42,410 --> 00:03:45,740
various cameras and sensors at least

00:03:44,450 --> 00:03:48,590
three or four of them to get the

00:03:45,740 --> 00:03:50,630
360-degree view and extremely low

00:03:48,590 --> 00:03:53,720
latency high resolution live video

00:03:50,630 --> 00:03:56,750
stream now this is somewhere some place

00:03:53,720 --> 00:03:59,570
where like we really need to innovate

00:03:56,750 --> 00:04:04,030
because currently people use analog

00:03:59,570 --> 00:04:06,770
video source and transmission because

00:04:04,030 --> 00:04:09,440
that provides the least latency and for

00:04:06,770 --> 00:04:13,160
fpv purposes that's the best scenario

00:04:09,440 --> 00:04:15,890
right now but if we like use really

00:04:13,160 --> 00:04:17,980
smart compression some fast FPGAs and

00:04:15,890 --> 00:04:21,190
custom designs we might be able to

00:04:17,980 --> 00:04:24,050
compress the data and transmit it

00:04:21,190 --> 00:04:27,410
wirelessly by still maintaining the high

00:04:24,050 --> 00:04:31,970
resolution that digital source

00:04:27,410 --> 00:04:36,890
provide us moving on hardware selection

00:04:31,970 --> 00:04:42,050
and this is for the drone itself so the

00:04:36,890 --> 00:04:44,990
mainframe is based on carbon fiber and

00:04:42,050 --> 00:04:48,560
would sort of a mixture it has a

00:04:44,990 --> 00:04:50,680
wheelbase of 23.5 centimeter the each

00:04:48,560 --> 00:04:53,570
arm is around twelve point seven

00:04:50,680 --> 00:04:56,060
centimeter long and it weighs a hundred

00:04:53,570 --> 00:05:00,140
and ten grams so pretty light these are

00:04:56,060 --> 00:05:02,960
specifically made for fpv racing and so

00:05:00,140 --> 00:05:06,590
the main structure is made out of like

00:05:02,960 --> 00:05:08,180
engineering would fly but it's well

00:05:06,590 --> 00:05:11,870
covered by a carbon fiber so it's

00:05:08,180 --> 00:05:14,060
actually very stiff and doesn't flex the

00:05:11,870 --> 00:05:20,240
motors themselves again are very

00:05:14,060 --> 00:05:22,700
commonly available 2300 kV so for those

00:05:20,240 --> 00:05:26,840
of you who aren't do not follow the

00:05:22,700 --> 00:05:31,310
drones into much kV actually means rpm

00:05:26,840 --> 00:05:33,650
per volt so with one volt it turns out

00:05:31,310 --> 00:05:38,300
2,300 rpm and as you increase it that

00:05:33,650 --> 00:05:41,990
just then multiplies so I've added the

00:05:38,300 --> 00:05:43,550
dimensions as well yeah so these are

00:05:41,990 --> 00:05:47,270
pretty heavy motors each of them can

00:05:43,550 --> 00:05:50,080
consume 27.6 amps if they are fully

00:05:47,270 --> 00:05:51,650
loaded and you know max power output are

00:05:50,080 --> 00:05:53,330
482 watts

00:05:51,650 --> 00:05:56,810
that's actually more than a lot of

00:05:53,330 --> 00:05:58,010
gaming PC's if you think about it so we

00:05:56,810 --> 00:06:02,000
will see something equally powerful

00:05:58,010 --> 00:06:04,210
powering it on the propeller side yeah

00:06:02,000 --> 00:06:07,520
just some simple 4-inch ones

00:06:04,210 --> 00:06:11,200
nothing fancy about these you I use try

00:06:07,520 --> 00:06:14,630
plate because they are more stable and

00:06:11,200 --> 00:06:17,540
dual blades are known to provide faster

00:06:14,630 --> 00:06:18,860
speeds but tri-blade in terms of

00:06:17,540 --> 00:06:22,780
stability if you are looking for

00:06:18,860 --> 00:06:25,970
autonomous flights and very simple esc

00:06:22,780 --> 00:06:28,400
i'll talk again when I get to the ESC

00:06:25,970 --> 00:06:31,700
topical in detail talk about why I

00:06:28,400 --> 00:06:35,780
didn't choose a more complicated multi

00:06:31,700 --> 00:06:39,650
short or one short ESC on what red on

00:06:35,780 --> 00:06:41,270
what that even means so but for now it's

00:06:39,650 --> 00:06:43,970
just a Simon K 30

00:06:41,270 --> 00:06:47,630
basic ESC the way to control them is

00:06:43,970 --> 00:06:50,540
over pwm with your pwm timings ranging

00:06:47,630 --> 00:06:54,680
from one millisecond to two millisecond

00:06:50,540 --> 00:06:59,390
pulses and that basically it is how fast

00:06:54,680 --> 00:07:03,710
it has to spin and that's fan hardware

00:06:59,390 --> 00:07:07,390
selection in terms of the actual power

00:07:03,710 --> 00:07:12,380
house what provides the power for your

00:07:07,390 --> 00:07:14,510
drone is lipo this is a smaller one I

00:07:12,380 --> 00:07:20,930
would have really liked a larger one I

00:07:14,510 --> 00:07:25,700
actually have one sitting around and the

00:07:20,930 --> 00:07:27,860
capacity is 1000 mAh so and even the max

00:07:25,700 --> 00:07:31,610
continuous discharge is only about 20

00:07:27,860 --> 00:07:35,210
amps as you can see the drone motors can

00:07:31,610 --> 00:07:38,150
take around 27 so to get the drone to

00:07:35,210 --> 00:07:41,090
even lift with that battery that lipo

00:07:38,150 --> 00:07:43,790
pack requires our more than 50% throttle

00:07:41,090 --> 00:07:47,000
so not the best use case but that's what

00:07:43,790 --> 00:07:50,120
I could fit I'm wondering if there's a

00:07:47,000 --> 00:07:56,240
better way to turn on the video on my

00:07:50,120 --> 00:08:05,810
end so I can show off the drone let's

00:07:56,240 --> 00:08:12,590
see you don't kindly have video enabled

00:08:05,810 --> 00:08:14,980
but yeah not sure what camera dock

00:08:12,590 --> 00:08:14,980
turned on

00:08:17,620 --> 00:08:24,919
it looks like it's working it's from

00:08:21,889 --> 00:08:28,280
above all right so that's the great

00:08:24,919 --> 00:08:30,979
camera one to go on so again that is a

00:08:28,280 --> 00:08:36,099
drone these are the rotors I don't have

00:08:30,979 --> 00:08:38,510
the the blades attached because that

00:08:36,099 --> 00:08:44,000
would make the drone fly and I'm doing

00:08:38,510 --> 00:08:46,760
that racial like small demo in space but

00:08:44,000 --> 00:08:50,450
yeah so the lipo pack like fits just

00:08:46,760 --> 00:08:55,220
snugly inside it you can barely even see

00:08:50,450 --> 00:08:58,130
it if at all and that is what's powering

00:08:55,220 --> 00:09:01,660
it so yeah I just just wanted that image

00:08:58,130 --> 00:09:04,839
to be there for scale the scale of it

00:09:01,660 --> 00:09:16,279
[Music]

00:09:04,839 --> 00:09:22,490
and let's go back to the slide right so

00:09:16,279 --> 00:09:25,910
that's the lipo pack and so a lot of

00:09:22,490 --> 00:09:29,029
these drones have becs they called

00:09:25,910 --> 00:09:35,720
battery eliminator circuit but they are

00:09:29,029 --> 00:09:38,839
really just step down or step up switch

00:09:35,720 --> 00:09:41,540
mode power supplies so not really doing

00:09:38,839 --> 00:09:46,370
the whole AC to DC conversion thing that

00:09:41,540 --> 00:09:48,320
actually EC's do but anyways so again

00:09:46,370 --> 00:09:50,360
very commonly available stuff if you

00:09:48,320 --> 00:09:59,180
just write VEC you will see thousands of

00:09:50,360 --> 00:10:01,190
such units there but here it is and so

00:09:59,180 --> 00:10:04,490
yeah so there's a fiber and twelve volt

00:10:01,190 --> 00:10:05,899
output for your controller bows that you

00:10:04,490 --> 00:10:08,570
might want to add which is perfectly

00:10:05,899 --> 00:10:11,420
good for us so if you if I if I just

00:10:08,570 --> 00:10:14,120
want to run the microcontroller unit I

00:10:11,420 --> 00:10:18,620
can just do that with the five volt and

00:10:14,120 --> 00:10:21,380
the 12 volts is good for the 96 both

00:10:18,620 --> 00:10:24,680
spec so if I want to run the main C II

00:10:21,380 --> 00:10:27,440
board that works out as well the input

00:10:24,680 --> 00:10:31,070
voltage ranges from 2 s 2 3 s now s in

00:10:27,440 --> 00:10:35,480
this case donates one single lipo pack

00:10:31,070 --> 00:10:38,209
so to us would be too poor to into three

00:10:35,480 --> 00:10:44,060
point two volts that seven point four

00:10:38,209 --> 00:10:46,699
and so we are two ways to success means

00:10:44,060 --> 00:10:49,100
it can go from seven point four to think

00:10:46,699 --> 00:10:52,399
it's 18 point one or whatever the top in

00:10:49,100 --> 00:10:57,230
this so yeah so we are just working with

00:10:52,399 --> 00:10:59,569
two ways battery pack so yeah near the

00:10:57,230 --> 00:11:03,889
pretty light stuff again standard

00:10:59,569 --> 00:11:06,440
equipment for modern drones in terms of

00:11:03,889 --> 00:11:09,440
sensors again very standard out of the

00:11:06,440 --> 00:11:14,149
box stuff for excavation in gyro in PU

00:11:09,440 --> 00:11:18,529
sixty fifty does your basic three axis

00:11:14,149 --> 00:11:20,899
gyro and accelerometer and you have

00:11:18,529 --> 00:11:23,149
short enough to just snugly fit in there

00:11:20,899 --> 00:11:24,740
actually you won't even be able to see

00:11:23,149 --> 00:11:27,769
because it's quite well hidden in the

00:11:24,740 --> 00:11:32,720
drone itself and for the time of flight

00:11:27,769 --> 00:11:35,810
we have the SD made a VL v 3l 0 X again

00:11:32,720 --> 00:11:37,459
supported by Zephir by default uses the

00:11:35,810 --> 00:11:39,339
I squared C interface I'm just using it

00:11:37,459 --> 00:11:43,040
to detect when it's like off the ground

00:11:39,339 --> 00:11:49,480
but for the time being it is really it's

00:11:43,040 --> 00:11:49,480
like they're visible that is what is

00:11:54,790 --> 00:11:59,209
hardest election in terms of controller

00:11:56,959 --> 00:12:02,149
votes alright this is going to get

00:11:59,209 --> 00:12:04,550
interesting so this is the stm32 sensor

00:12:02,149 --> 00:12:06,380
mezzanine now I must say before I show

00:12:04,550 --> 00:12:09,170
you guys the next slide I had a very

00:12:06,380 --> 00:12:12,920
early sample of this thing and was

00:12:09,170 --> 00:12:16,610
sitting for ages collecting dust and God

00:12:12,920 --> 00:12:20,720
knows what so it's based on the stm32f4

00:12:16,610 --> 00:12:23,990
for 6 MC you compl and with the 96 bodes

00:12:20,720 --> 00:12:26,120
machining guidelines of as I said the

00:12:23,990 --> 00:12:27,529
MCO parts that we are using are the

00:12:26,120 --> 00:12:33,380
mezzanine so that you can add me in

00:12:27,529 --> 00:12:35,720
boats later on and yeah so there's the

00:12:33,380 --> 00:12:38,839
regular or 96 BOS high speed and low

00:12:35,720 --> 00:12:41,660
speed connectivity has arduino

00:12:38,839 --> 00:12:44,540
compatible header on there but it works

00:12:41,660 --> 00:12:47,840
at 3.3 volts so you can attach some

00:12:44,540 --> 00:12:50,840
shields and even these days most sheers

00:12:47,840 --> 00:12:55,130
are 3.3 hoods compatible so that should

00:12:50,840 --> 00:12:58,730
work fine and has a bunch of groove

00:12:55,130 --> 00:13:00,860
connectors for other I squared C and

00:12:58,730 --> 00:13:03,620
UART and cat and stuff like that

00:13:00,860 --> 00:13:08,660
suppose they're for artists it has a

00:13:03,620 --> 00:13:11,180
bunch of integrated MEMS sensors I was I

00:13:08,660 --> 00:13:14,900
was going to use those sensors instead

00:13:11,180 --> 00:13:16,610
of the ones I just showed you but as

00:13:14,900 --> 00:13:21,320
you'll see in the next slide something

00:13:16,610 --> 00:13:23,930
happens on board is there st-link

00:13:21,320 --> 00:13:26,660
debugger which is like a easy way to

00:13:23,930 --> 00:13:29,720
just program it without having to go

00:13:26,660 --> 00:13:34,070
through open OCD which I mean depending

00:13:29,720 --> 00:13:38,090
upon your preference might not be your

00:13:34,070 --> 00:13:41,540
kind of thing but and again so it also

00:13:38,090 --> 00:13:44,030
has a USB host but that connects to the

00:13:41,540 --> 00:13:48,650
high-speed header directly onto a 96

00:13:44,030 --> 00:13:52,310
ports so it shows up as mass storage

00:13:48,650 --> 00:13:55,100
device so I think you can like put logs

00:13:52,310 --> 00:13:59,740
in that place from Zephyr and then you

00:13:55,100 --> 00:14:03,710
can access those logs from the from the

00:13:59,740 --> 00:14:07,340
C II device if if there's a C device

00:14:03,710 --> 00:14:09,680
connected on there but anyway stuff like

00:14:07,340 --> 00:14:15,050
that happens and you end up without a

00:14:09,680 --> 00:14:22,130
board so yeah so I moved on to another

00:14:15,050 --> 00:14:25,270
board the arrow core - and that is that

00:14:22,130 --> 00:14:27,830
this boat was purposely built for drones

00:14:25,270 --> 00:14:29,300
so as you will see there are a bunch of

00:14:27,830 --> 00:14:32,330
drone interface I'll go through them

00:14:29,300 --> 00:14:34,940
quickly and a lot of senses as well

00:14:32,330 --> 00:14:37,790
sadly none of those senses were at that

00:14:34,940 --> 00:14:41,330
time supported in Zephyr so I did not

00:14:37,790 --> 00:14:43,280
end up using them I was kind of short in

00:14:41,330 --> 00:14:48,100
time that like I lost a bunch of time

00:14:43,280 --> 00:14:50,210
debugging why my last board died so I

00:14:48,100 --> 00:14:51,410
just carried on with the senses that I

00:14:50,210 --> 00:14:54,830
already had

00:14:51,410 --> 00:14:57,160
it has canvas on board which will come

00:14:54,830 --> 00:14:58,579
into play a little bit later it has a

00:14:57,160 --> 00:15:01,069
GST X

00:14:58,579 --> 00:15:02,600
each connector the one I don't know if

00:15:01,069 --> 00:15:06,529
you can see my mouse but this white

00:15:02,600 --> 00:15:10,220
connector here that is useful to get

00:15:06,529 --> 00:15:12,920
voltage reading per cell from your lipo

00:15:10,220 --> 00:15:17,540
pack so you know when it's out of juice

00:15:12,920 --> 00:15:20,379
and here you have a sort of a watchdog

00:15:17,540 --> 00:15:21,970
buzzer so you need to ping that buzzer

00:15:20,379 --> 00:15:25,699
continuously

00:15:21,970 --> 00:15:28,129
through a single GPIO and that will stay

00:15:25,699 --> 00:15:31,009
quiet and if it doesn't receive that

00:15:28,129 --> 00:15:33,199
signal every 10 seconds or so it will

00:15:31,009 --> 00:15:34,999
start beeping indicated that there's

00:15:33,199 --> 00:15:37,339
something wrong with the controller and

00:15:34,999 --> 00:15:43,179
it's not like just like any answer

00:15:37,339 --> 00:15:48,439
watchdog works apart from that the USB

00:15:43,179 --> 00:15:50,540
plug here that says STM console so in

00:15:48,439 --> 00:15:53,600
its original firmware which actually

00:15:50,540 --> 00:15:57,139
runs px for a very very old version of

00:15:53,600 --> 00:16:01,279
px4 that's why I decided to get zephyr

00:15:57,139 --> 00:16:04,749
on it but the the con support is

00:16:01,279 --> 00:16:09,259
actually a USB port directly from the

00:16:04,749 --> 00:16:14,299
sock so you can use it as external

00:16:09,259 --> 00:16:16,040
storage device or console so I actually

00:16:14,299 --> 00:16:17,749
have configured it as an external

00:16:16,040 --> 00:16:20,059
storage device you can have your flash

00:16:17,749 --> 00:16:27,110
storage attached there and it will work

00:16:20,059 --> 00:16:29,629
fine yeah so apart from that there are

00:16:27,110 --> 00:16:34,850
headers eight hitters for PWM eight

00:16:29,629 --> 00:16:37,790
hitters which originally in px4 firmware

00:16:34,850 --> 00:16:39,889
were used for SOI P so the eight hitters

00:16:37,790 --> 00:16:43,069
for PWM out and there were headers that

00:16:39,889 --> 00:16:48,649
were used for PWM in to take control in

00:16:43,069 --> 00:16:51,829
from the from the analog receiver that's

00:16:48,649 --> 00:16:53,569
usually used on the drones and so that

00:16:51,829 --> 00:16:56,049
you can use those big fat drone

00:16:53,569 --> 00:16:58,279
controllers and then you have a bunch of

00:16:56,049 --> 00:17:01,519
communication header including multiple

00:16:58,279 --> 00:17:06,409
I squared C and urs and SPI and then

00:17:01,519 --> 00:17:10,309
there's like spi bus that dot like

00:17:06,409 --> 00:17:12,350
switches sorry spi switch that connects

00:17:10,309 --> 00:17:16,370
to multiple SPI devices

00:17:12,350 --> 00:17:18,909
as well so yeah a bunch of drone focused

00:17:16,370 --> 00:17:22,639
things so just sort of turned out to be

00:17:18,909 --> 00:17:26,299
my choice of the boat but I had to do a

00:17:22,639 --> 00:17:29,690
lot of a upstreaming work on it which at

00:17:26,299 --> 00:17:31,730
first might not seem as much but I will

00:17:29,690 --> 00:17:36,259
talk about it a bit later so this is

00:17:31,730 --> 00:17:39,529
sort of my favorite radio control device

00:17:36,259 --> 00:17:42,110
from the last few months this is the HC

00:17:39,529 --> 00:17:46,940
12 the really neat part about this is

00:17:42,110 --> 00:17:49,250
that it has great range if you have a

00:17:46,940 --> 00:17:52,909
proper antenna I actually have a larger

00:17:49,250 --> 00:17:57,620
antenna connected to the same HC 12

00:17:52,909 --> 00:18:00,440
module it has you can select your board

00:17:57,620 --> 00:18:04,220
rate and it will like it will switch

00:18:00,440 --> 00:18:08,000
between channels and it can do channel

00:18:04,220 --> 00:18:11,389
hopping and a bunch of good stuff but

00:18:08,000 --> 00:18:14,120
the great stuff is it acts as if there

00:18:11,389 --> 00:18:17,269
is a physical connection between your

00:18:14,120 --> 00:18:19,009
drone or between between like two units

00:18:17,269 --> 00:18:24,139
of the HC 12 provided they are on the

00:18:19,009 --> 00:18:28,580
same baud rate same channel and yeah I

00:18:24,139 --> 00:18:32,750
think that's about it and so it just I

00:18:28,580 --> 00:18:34,399
have my controller like this is my test

00:18:32,750 --> 00:18:38,840
controller right now just based on an

00:18:34,399 --> 00:18:42,289
Arduino and it just as if the Arduino

00:18:38,840 --> 00:18:46,759
board is directly connected to my stm32

00:18:42,289 --> 00:18:48,860
board over a physical UART line so that

00:18:46,759 --> 00:18:50,600
way there's very little configuration to

00:18:48,860 --> 00:18:54,019
be done although this can be configured

00:18:50,600 --> 00:18:57,559
over 80 commands so you can set your

00:18:54,019 --> 00:19:00,049
baud rate and stuff like that moving to

00:18:57,559 --> 00:19:02,720
support starting with some of the board

00:19:00,049 --> 00:19:06,230
support stuff and I'm going to skim over

00:19:02,720 --> 00:19:07,820
some of the core software stuff because

00:19:06,230 --> 00:19:10,879
I can see I just have like 10 minutes

00:19:07,820 --> 00:19:15,019
almost remaining so we just go through

00:19:10,879 --> 00:19:17,179
that quickly for the stm32 sense a

00:19:15,019 --> 00:19:19,889
mezzanine the Zephyr support by are

00:19:17,179 --> 00:19:22,669
added by money

00:19:19,889 --> 00:19:25,799
I then ended up enabling UART and SPI

00:19:22,669 --> 00:19:28,100
which wasn't that big of a deal but you

00:19:25,799 --> 00:19:31,649
know soon after their that boat ended up

00:19:28,100 --> 00:19:36,080
burning so for the gram sticks Eric over

00:19:31,649 --> 00:19:41,250
to I ended up doing the full support on

00:19:36,080 --> 00:19:43,350
Zephyr so that includes the few bits of

00:19:41,250 --> 00:19:45,509
the sock support since the sock family

00:19:43,350 --> 00:19:50,730
was already there so that was just

00:19:45,509 --> 00:19:55,610
basically writing DTS and then I just

00:19:50,730 --> 00:19:57,690
ended up enabling pretty much any any

00:19:55,610 --> 00:20:01,950
communication standard there was on the

00:19:57,690 --> 00:20:03,990
board and yeah so you can see the link

00:20:01,950 --> 00:20:06,210
as well the challenge here was that

00:20:03,990 --> 00:20:08,340
there were no schematics available

00:20:06,210 --> 00:20:12,570
because this is designed by come six and

00:20:08,340 --> 00:20:14,820
come six as the Geppetto design tools

00:20:12,570 --> 00:20:17,970
which is basically drag-and-drop PCB

00:20:14,820 --> 00:20:21,059
builder but in that process they have

00:20:17,970 --> 00:20:24,299
automated it so much that it never has

00:20:21,059 --> 00:20:27,240
to generate a schematic you design your

00:20:24,299 --> 00:20:29,639
board and if there are no issues with

00:20:27,240 --> 00:20:32,370
with it it will directly go into

00:20:29,639 --> 00:20:34,649
production and if there are some notes

00:20:32,370 --> 00:20:36,419
and some issues then there is some

00:20:34,649 --> 00:20:40,379
manual interaction with it but it never

00:20:36,419 --> 00:20:43,289
really designs full form schematic not

00:20:40,379 --> 00:20:45,090
only that it also does the entire BSP

00:20:43,289 --> 00:20:49,200
generation on its own so it writes your

00:20:45,090 --> 00:20:52,440
DTS your Yocto packages and everything

00:20:49,200 --> 00:20:55,500
else in between so most of the i/o was

00:20:52,440 --> 00:20:58,860
guesswork including older px4 commits

00:20:55,500 --> 00:21:01,110
some PCB tracing and some trial and

00:20:58,860 --> 00:21:05,789
error and just guessing where stuff

00:21:01,110 --> 00:21:07,679
might be and thumbsticks did provide as

00:21:05,789 --> 00:21:09,960
much help as they could but again even

00:21:07,679 --> 00:21:13,529
they didn't have the schematics it's all

00:21:09,960 --> 00:21:15,629
automated so it's it's pretty you know

00:21:13,529 --> 00:21:18,179
so it was more laborious than it would

00:21:15,629 --> 00:21:21,090
have been you know difficult per se so

00:21:18,179 --> 00:21:25,649
just took more time all right so

00:21:21,090 --> 00:21:27,809
software design how everything fits on

00:21:25,649 --> 00:21:30,629
so the AC initialization and this is the

00:21:27,809 --> 00:21:32,790
problem I have with PWM controllers they

00:21:30,629 --> 00:21:36,540
have only one input so

00:21:32,790 --> 00:21:41,670
that means there's no way for the ESC to

00:21:36,540 --> 00:21:44,550
tell your main MCU any sort of state it

00:21:41,670 --> 00:21:48,180
all relays its states in beeping noises

00:21:44,550 --> 00:21:53,640
that it makes when you power the drone

00:21:48,180 --> 00:21:55,290
on and it actually moves the rotors at

00:21:53,640 --> 00:22:02,660
very high frequency and that creates

00:21:55,290 --> 00:22:05,100
your noise so it goes into startup and

00:22:02,660 --> 00:22:07,530
when you have it at the lowest throttle

00:22:05,100 --> 00:22:11,730
it's like at the ready state so you need

00:22:07,530 --> 00:22:15,060
to set your MCU to have its pwm be all

00:22:11,730 --> 00:22:17,400
the way down to one millisecond and when

00:22:15,060 --> 00:22:21,210
you start rising it up after after it

00:22:17,400 --> 00:22:25,320
has beeped to indicate that it's ready

00:22:21,210 --> 00:22:28,230
then you can start you know actually

00:22:25,320 --> 00:22:31,020
giving the motors any power and then if

00:22:28,230 --> 00:22:34,770
you have during startup the pwm set at

00:22:31,020 --> 00:22:36,660
two milliseconds then it actually goes

00:22:34,770 --> 00:22:41,510
into a setup mode and calibration mode

00:22:36,660 --> 00:22:46,260
so it's all very manual designed for

00:22:41,510 --> 00:22:48,450
your how most DIY drones are made where

00:22:46,260 --> 00:22:51,840
the controller directly talks to the ESC

00:22:48,450 --> 00:22:53,730
through trance the transmitter talks

00:22:51,840 --> 00:22:57,600
directly to the ESC and the receiver

00:22:53,730 --> 00:22:59,820
just converts the different signals on

00:22:57,600 --> 00:23:01,800
like eight channels to eight separate

00:22:59,820 --> 00:23:06,060
pwm signals and that controls everything

00:23:01,800 --> 00:23:08,250
there's no there's a lot of the times if

00:23:06,060 --> 00:23:12,810
the drone is well balanced there is no

00:23:08,250 --> 00:23:14,880
MCU in between just to remind you you've

00:23:12,810 --> 00:23:19,020
got about two three minutes left so

00:23:14,880 --> 00:23:22,170
you'll need to start right so I don't

00:23:19,020 --> 00:23:24,900
know if I'll if which I could was

00:23:22,170 --> 00:23:26,490
quickly reminded of I don't know if I

00:23:24,900 --> 00:23:29,460
have the correct form and available I

00:23:26,490 --> 00:23:32,040
try to power it on in a bit and if there

00:23:29,460 --> 00:23:35,580
are any questions you let me know so

00:23:32,040 --> 00:23:39,120
let's skip that because you can read

00:23:35,580 --> 00:23:41,910
that in the slides I hope that will be

00:23:39,120 --> 00:23:43,470
posted but I just wanted to go through

00:23:41,910 --> 00:23:46,170
quickly through the future plans and

00:23:43,470 --> 00:23:46,680
commitments I really want to just eat

00:23:46,170 --> 00:23:49,830
remove

00:23:46,680 --> 00:23:53,100
PWM and I've been looking into UAV can

00:23:49,830 --> 00:23:57,030
spec and that has looked quite promising

00:23:53,100 --> 00:23:58,800
and so hopefully in the next step next

00:23:57,030 --> 00:24:01,790
design of this thing we have some UAV

00:23:58,800 --> 00:24:07,560
can motors that can give their state

00:24:01,790 --> 00:24:09,450
back to the su add gps control so a bit

00:24:07,560 --> 00:24:10,920
more robust it on flow instead of me

00:24:09,450 --> 00:24:14,280
just doing everything manually over

00:24:10,920 --> 00:24:20,240
Zephyr so something like px4 and then

00:24:14,280 --> 00:24:23,460
adding a full c ii board on there so I

00:24:20,240 --> 00:24:27,150
think yeah let's take questions if there

00:24:23,460 --> 00:24:29,580
are any great thank you so much and

00:24:27,150 --> 00:24:33,990
sorry to rush you at the end it's just a

00:24:29,580 --> 00:24:36,630
few people session my my yeah my session

00:24:33,990 --> 00:24:40,770
was also designed for like a proper

00:24:36,630 --> 00:24:42,480
connecting session so yeah no thank you

00:24:40,770 --> 00:24:47,640
for that and I'm just seeing if there

00:24:42,480 --> 00:24:50,160
are any there are a few comments so

00:24:47,640 --> 00:24:53,520
there's a common saying a network

00:24:50,160 --> 00:24:56,490
subsystem for FSK is the works upstream

00:24:53,520 --> 00:25:00,200
please reach out to me about h to 12

00:24:56,490 --> 00:25:05,670
which let's see that's from andreas

00:25:00,200 --> 00:25:10,170
barber at SUSE let me sit there any

00:25:05,670 --> 00:25:12,030
questions YouTube channel no there

00:25:10,170 --> 00:25:14,190
aren't any questions at the moment but

00:25:12,030 --> 00:25:18,290
if people have questions after this

00:25:14,190 --> 00:25:23,430
where what's the best way to reach so

00:25:18,290 --> 00:25:25,170
details so yeah IRC and my email which I

00:25:23,430 --> 00:25:26,310
for some reason put my personal email in

00:25:25,170 --> 00:25:30,030
there which was a mistake

00:25:26,310 --> 00:25:33,570
so this is G dot SAR u P at Leonardo dot

00:25:30,030 --> 00:25:36,800
org so okay I will edit that in the

00:25:33,570 --> 00:25:36,800

YouTube URL: https://www.youtube.com/watch?v=ThojMtNYaBc


