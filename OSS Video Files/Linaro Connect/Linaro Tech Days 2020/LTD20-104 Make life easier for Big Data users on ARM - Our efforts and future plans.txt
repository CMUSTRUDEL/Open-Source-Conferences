Title: LTD20-104 Make life easier for Big Data users on ARM - Our efforts and future plans
Publication date: 2020-03-25
Playlist: Linaro Tech Days 2020
Description: 
	Description:
Currently, there are more and more ARM based datacenter hardware on the market, and their performance has been continuously improving. Thus more and more users and customers starting to consider using these datacenter hardware for their business. Big data is one of the most important area.

On the contrary, the open source ecosystem for big data on ARM is not that perfect, most of the software in the big data ecosystem did not care too much about running on ARM previously, they did not officially tested their codes on ARM, and there are a lot of unsolved problems. In order to make that software able to run on ARM, one have to search and read tons of articles to do a lot of patches and build numbers of dependencies by their own. And once the upstream changes or upgrades, there might be new problems since it does not test on ARM in upstream. All these made users scared to use ARM for their business.

In order to change this situation and make the big data opensource ecosystem more friendly to the ARM platform and its users, our team started by proposing adding ARM CI to those opensource projects. By doing this, the projects will be fully tested on ARM and all future changes will also be tested on ARM. And we fixed a lot of problems directly in upstream, which benefits all users. And then, we start to perform performance comparison tests between ARM and X86, to give users an overview of the status. And there are also large numbers of TODOs in the future.

In this session, you can learn the current status about ARM CI of Big Data ecosystem projects like Hadoop, Spark, Hbase, Flink, Storm, Kudu, Impala etc. and our efforts on fixing ARM related problems. We will also introduce our future plans.

Session Speakers



bo zhaobo  - Huawei - China
An openlab ARM tester for extending the ARM ecosystecm



Sheng Liu - Huawei Senior Software Engineer

I am working in Huawei and devoting to Open source projects contribution. Currently I am focus on promoting some Projects in Big data area, e.g. Hadoop, Hive to support ARM platform.



Zhenyu Zheng - Senior Software Engineer (Huawei Technology)

Senior Software Engineer from OpenSource Ecosystem Dept. Huawei Technology 



You can find the presentation for this session on connect.linaro.org:
https://connect.linaro.org/resources/ltd20/ltd20-104/
Captions: 
	00:00:04,480 --> 00:00:11,410
hi everyone so welcome to this session

00:00:08,219 --> 00:00:15,339
it's our first time here for Darlene

00:00:11,410 --> 00:00:20,860
arrow Eva and so hope you guys enjoy it

00:00:15,339 --> 00:00:22,809
and so that starts in this session we

00:00:20,860 --> 00:00:25,689
will show you the show you guys about

00:00:22,809 --> 00:00:28,540
our team and what we have done trying to

00:00:25,689 --> 00:00:33,040
make their life easier for big data

00:00:28,540 --> 00:00:35,950
users on our and we will also include

00:00:33,040 --> 00:00:39,310
some other fields like cloud and general

00:00:35,950 --> 00:00:42,150
libraries so we were sure share what we

00:00:39,310 --> 00:00:47,110
are currently doing and our future paths

00:00:42,150 --> 00:00:50,590
so let's jump to the this is the how the

00:00:47,110 --> 00:00:56,050
content are organized so let's jump to

00:00:50,590 --> 00:00:59,290
the first part so who are we we are from

00:00:56,050 --> 00:01:02,170
hallway and our team is called computing

00:00:59,290 --> 00:01:05,320
open source ecosystem department which

00:01:02,170 --> 00:01:07,810
means our job is to work upstream open

00:01:05,320 --> 00:01:09,999
source communities and our the goal of

00:01:07,810 --> 00:01:12,759
our team is to enrich the open source

00:01:09,999 --> 00:01:15,639
software ecosystem around our based

00:01:12,759 --> 00:01:16,420
units and hers the software will

00:01:15,639 --> 00:01:19,179
includes

00:01:16,420 --> 00:01:22,209
OS libraries clawed and in

00:01:19,179 --> 00:01:24,819
virtualization storage web and I think

00:01:22,209 --> 00:01:28,780
most of you guys are more interested in

00:01:24,819 --> 00:01:31,479
for this topic is the Big Data IRA it is

00:01:28,780 --> 00:01:34,029
actually so it's actually a full stack

00:01:31,479 --> 00:01:36,880
often has been a software ecosystems and

00:01:34,029 --> 00:01:39,039
the since big data is one of the most

00:01:36,880 --> 00:01:42,700
community park deployment deployed

00:01:39,039 --> 00:01:45,429
services in it as a nurse we put in a

00:01:42,700 --> 00:01:49,389
big data base very high priority our

00:01:45,429 --> 00:01:52,990
tasks so how we gonna do to reach our

00:01:49,389 --> 00:01:55,659
goal here is what we have in mind first

00:01:52,990 --> 00:01:58,719
of all we have to identify the gaps to

00:01:55,659 --> 00:02:01,450
run on platform of projects that we are

00:01:58,719 --> 00:02:04,240
interested in and then we fix them so

00:02:01,450 --> 00:02:08,319
that the software can be running as a

00:02:04,240 --> 00:02:10,569
nurse and not just it's not just on our

00:02:08,319 --> 00:02:12,879
own Fork we will push them to the

00:02:10,569 --> 00:02:16,180
upstream so that everyone else can be

00:02:12,879 --> 00:02:17,300
benefited secondly we were introduced

00:02:16,180 --> 00:02:20,390
and

00:02:17,300 --> 00:02:22,970
enable sea ice to those projects so that

00:02:20,390 --> 00:02:25,400
you know our in the future development

00:02:22,970 --> 00:02:28,910
of those projects and they will be

00:02:25,400 --> 00:02:31,670
tested on a platform and also people who

00:02:28,910 --> 00:02:33,890
are interested in fixing gaps on

00:02:31,670 --> 00:02:37,840
platform could also have a clear view

00:02:33,890 --> 00:02:42,080
about what the gaps are and the current

00:02:37,840 --> 00:02:44,270
process of the fixing then we will try

00:02:42,080 --> 00:02:46,820
to push the option to provide an on

00:02:44,270 --> 00:02:49,820
platform release so that the arm users

00:02:46,820 --> 00:02:52,010
can easily download and use them so also

00:02:49,820 --> 00:02:56,540
enhance the talks about how to run

00:02:52,010 --> 00:02:59,720
eternity bar exam platform and so the

00:02:56,540 --> 00:03:02,690
threshold of developing them you'll be

00:02:59,720 --> 00:03:05,930
lower and I saw the part as a part of

00:03:02,690 --> 00:03:08,900
the final step we were proposing Patras

00:03:05,930 --> 00:03:12,530
to option so that the they will perform

00:03:08,900 --> 00:03:15,740
better on platforms and this will make

00:03:12,530 --> 00:03:17,750
the antenna Center more competitive so

00:03:15,740 --> 00:03:21,110
these are some background information

00:03:17,750 --> 00:03:23,510
about our team and what we are with our

00:03:21,110 --> 00:03:25,940
way of doing things so please let us

00:03:23,510 --> 00:03:31,580
spend one minute to give you some

00:03:25,940 --> 00:03:42,530
information about our cells let me

00:03:31,580 --> 00:03:45,080
introduce you know I'm focused on

00:03:42,530 --> 00:03:49,220
promoting open source projects in Big

00:03:45,080 --> 00:03:51,680
Data area running on platform have I

00:03:49,220 --> 00:03:55,340
have done some works about building

00:03:51,680 --> 00:03:58,400
Hadoop or unsafe for Hadoop community

00:03:55,340 --> 00:04:03,310
and others and mu and we're currently

00:03:58,400 --> 00:04:03,310
working on support for CUDA project

00:04:12,440 --> 00:04:20,040
Borja from China working our way I'm

00:04:16,260 --> 00:04:25,170
walking arm in TPI really close my

00:04:20,040 --> 00:04:33,990
circle where RDB percona post-grad

00:04:25,170 --> 00:04:36,720
circle queen prom and mongodb okay my

00:04:33,990 --> 00:04:39,810
name is Jo Jo my man for my current main

00:04:36,720 --> 00:04:43,380
focus is on the virtualization area but

00:04:39,810 --> 00:04:46,320
I have also done some porting works we

00:04:43,380 --> 00:04:52,230
speak data like Hadoop and half okay

00:04:46,320 --> 00:04:56,910
let's beginning our talk so what are the

00:04:52,230 --> 00:04:59,940
challenges of about our our our goal is

00:04:56,910 --> 00:05:03,210
it a easy job actually it's not there

00:04:59,940 --> 00:05:07,200
are a number of things that we have that

00:05:03,210 --> 00:05:08,100
we made make this hard there are some

00:05:07,200 --> 00:05:10,169
technical ones

00:05:08,100 --> 00:05:12,930
firstly I'm has been a second class

00:05:10,169 --> 00:05:15,180
citizen for quite a long time he for

00:05:12,930 --> 00:05:18,060
there has a nurse and we had to admit

00:05:15,180 --> 00:05:20,490
that not all of the of the developers

00:05:18,060 --> 00:05:23,640
are interested in making their software

00:05:20,490 --> 00:05:27,240
to be able to run arm and the ability to

00:05:23,640 --> 00:05:29,310
be able to run on other platform does

00:05:27,240 --> 00:05:33,180
not make any sense to their daily work

00:05:29,310 --> 00:05:36,390
so when we say not the our ideas in the

00:05:33,180 --> 00:05:39,180
merits and slack channels not much

00:05:36,390 --> 00:05:41,400
people replied at the beginning and the

00:05:39,180 --> 00:05:44,669
next one is software projects normally

00:05:41,400 --> 00:05:46,530
has a lot of dependencies and for

00:05:44,669 --> 00:05:50,310
open-source projects the number of the

00:05:46,530 --> 00:05:52,910
dependencies and it's very large and

00:05:50,310 --> 00:05:55,260
sometimes the relationship between them

00:05:52,910 --> 00:05:57,990
sometimes is very complicated and

00:05:55,260 --> 00:06:00,780
sometimes the for example some old

00:05:57,990 --> 00:06:04,860
dependencies are not actually actively

00:06:00,780 --> 00:06:06,830
maintained or some dependency does not

00:06:04,860 --> 00:06:09,300
support em they are and their

00:06:06,830 --> 00:06:13,979
dependencies and does no support

00:06:09,300 --> 00:06:16,530
somewhere also so this will be very hard

00:06:13,979 --> 00:06:17,700
and nevertheless people does not

00:06:16,530 --> 00:06:20,880
understand

00:06:17,700 --> 00:06:22,979
I'm platform enough some of them even

00:06:20,880 --> 00:06:23,759
don't know that there are arm-based it

00:06:22,979 --> 00:06:26,370
has a nurse

00:06:23,759 --> 00:06:29,909
when we first send out our ideas in the

00:06:26,370 --> 00:06:32,870
public channels they many people ask us

00:06:29,909 --> 00:06:36,240
why we want to run big data software on

00:06:32,870 --> 00:06:37,979
raspberry PI's this could also be a part

00:06:36,240 --> 00:06:40,289
of the reason why people are not

00:06:37,979 --> 00:06:44,339
interested to make the earth software

00:06:40,289 --> 00:06:47,639
running arm and all those together are

00:06:44,339 --> 00:06:52,529
very challenging and there are also some

00:06:47,639 --> 00:06:56,310
others that I didn't did not list it so

00:06:52,529 --> 00:06:59,169
what we have done so far

00:06:56,310 --> 00:07:04,000
according to our metal method

00:06:59,169 --> 00:07:06,490
methodology I have just introduced in

00:07:04,000 --> 00:07:08,620
order to make our job done either by our

00:07:06,490 --> 00:07:11,740
team or by someone else in the community

00:07:08,620 --> 00:07:14,050
that are interested we have to provide

00:07:11,740 --> 00:07:16,180
the resources to them and we have

00:07:14,050 --> 00:07:20,699
donated a lot of them through various

00:07:16,180 --> 00:07:23,680
ways according to the open upstream

00:07:20,699 --> 00:07:26,139
preferences now we have donated the two

00:07:23,680 --> 00:07:28,750
powerful machines to Apache jinglun's so

00:07:26,139 --> 00:07:31,479
that's the podcast and uses Apache

00:07:28,750 --> 00:07:33,970
Jenkins can use these resources to run

00:07:31,479 --> 00:07:37,270
their tests and some of them already did

00:07:33,970 --> 00:07:40,270
we will cover this in the next few pages

00:07:37,270 --> 00:07:43,240
and some other projects like spark does

00:07:40,270 --> 00:07:45,760
not use Apache Jenkins they uses their

00:07:43,240 --> 00:07:48,520
own system so we donated servers to

00:07:45,760 --> 00:07:51,450
their own system and they have already

00:07:48,520 --> 00:07:55,210
setup sea-ice running

00:07:51,450 --> 00:07:58,120
we have also open source GIS platform

00:07:55,210 --> 00:08:00,820
that based on zoo which can be provided

00:07:58,120 --> 00:08:03,700
in which can provide dynamic resource

00:08:00,820 --> 00:08:06,400
and tests using job descriptions

00:08:03,700 --> 00:08:09,070
projects like a part chief link and many

00:08:06,400 --> 00:08:11,349
other scenes their projects connect to

00:08:09,070 --> 00:08:14,530
this CI platform and around there CI

00:08:11,349 --> 00:08:18,220
jobs you can find the details in the

00:08:14,530 --> 00:08:19,210
links and also for this open lab

00:08:18,220 --> 00:08:21,849
platform

00:08:19,210 --> 00:08:25,150
I want to thanks to Lee neuro developer

00:08:21,849 --> 00:08:27,490
cloud as it has donated some machines to

00:08:25,150 --> 00:08:29,729
this platform so that we can make half

00:08:27,490 --> 00:08:32,349
we're armed resource pool ladder

00:08:29,729 --> 00:08:35,800
there are also some projects that ask

00:08:32,349 --> 00:08:38,110
for wrong machines so that they can have

00:08:35,800 --> 00:08:41,469
more control on them and they can do

00:08:38,110 --> 00:08:44,050
other jobs like packing packaging and

00:08:41,469 --> 00:08:49,330
other starts those projects includes

00:08:44,050 --> 00:08:53,500
MariaDB rocks DB and x265 and many

00:08:49,330 --> 00:08:55,870
others so after donating those resources

00:08:53,500 --> 00:08:58,150
we have to make use of them we have

00:08:55,870 --> 00:09:01,959
enabled numbers of sea ice for famous

00:08:58,150 --> 00:09:05,440
projects in the Big Data era such as how

00:09:01,959 --> 00:09:07,870
to spark HBase have enough link you can

00:09:05,440 --> 00:09:09,699
check for details form those links in

00:09:07,870 --> 00:09:12,850
case you are interested

00:09:09,699 --> 00:09:14,799
some of them are heroic jobs running per

00:09:12,850 --> 00:09:17,199
day and some of them are pre communicate

00:09:14,799 --> 00:09:19,959
tests according to the preference of the

00:09:17,199 --> 00:09:23,499
projects we have also stone some works

00:09:19,959 --> 00:09:25,779
in other fields which might be also be

00:09:23,499 --> 00:09:28,869
good be no such as mara DB and the other

00:09:25,779 --> 00:09:30,730
web-based projects another thing I

00:09:28,869 --> 00:09:34,029
wanted that me

00:09:30,730 --> 00:09:35,739
so no lets me past my megaphone to my

00:09:34,029 --> 00:09:39,069
colleague Lucien here were you to do

00:09:35,739 --> 00:09:53,220
some details about what we have done in

00:09:39,069 --> 00:09:56,499
a big data ok let's look at her some

00:09:53,220 --> 00:10:00,189
information about what we have done in

00:09:56,499 --> 00:10:02,949
this project so far to mention the world

00:10:00,189 --> 00:10:06,309
or challenges for proteins of the where

00:10:02,949 --> 00:10:08,970
our army is the dependency problem now

00:10:06,309 --> 00:10:11,799
let's we then see some real examples

00:10:08,970 --> 00:10:15,119
there are different kinds of problems

00:10:11,799 --> 00:10:19,569
and we have handled them differently

00:10:15,119 --> 00:10:22,869
first when we try to fix a tuple when

00:10:19,569 --> 00:10:26,859
bigger block is protobuf since Hadoop's

00:10:22,869 --> 00:10:30,429
to use 2.0 and europe which is the red

00:10:26,859 --> 00:10:33,959
hood and it does not order a platform

00:10:30,429 --> 00:10:37,929
but the new version of the protocol has

00:10:33,959 --> 00:10:40,839
transporter arm so the normal story is

00:10:37,929 --> 00:10:44,410
to pump the Hadoop to use the new

00:10:40,839 --> 00:10:47,949
version the transporter arm it will be

00:10:44,410 --> 00:10:51,399
challenging since spam from above who to

00:10:47,949 --> 00:10:54,630
pull a 3/8 a major bound and the many

00:10:51,399 --> 00:10:56,790
projects are afraid to do that

00:10:54,630 --> 00:11:01,199
we have discussed - it's the community

00:10:56,790 --> 00:11:04,139
for rattling hammer and although there

00:11:01,199 --> 00:11:05,490
are back and forth but we have only done

00:11:04,139 --> 00:11:07,740
it so far

00:11:05,490 --> 00:11:11,880
so for dependencies Derrick installed

00:11:07,740 --> 00:11:14,670
army new abortion we try to emotion then

00:11:11,880 --> 00:11:18,149
for projects that does not support arm

00:11:14,670 --> 00:11:20,190
in the latest version and still actively

00:11:18,149 --> 00:11:23,509
maintained such as Nettie

00:11:20,190 --> 00:11:25,949
we will saucer reporter and the poet

00:11:23,509 --> 00:11:29,250
patches to the community to provide

00:11:25,949 --> 00:11:32,430
fixed and releases and some of the

00:11:29,250 --> 00:11:36,949
projects does not negatively maintain

00:11:32,430 --> 00:11:36,949
the Alamo such as never DB Ching hai

00:11:37,250 --> 00:11:41,690
we will provide that

00:11:38,660 --> 00:11:43,819
that have important the discuss the the

00:11:41,690 --> 00:11:47,690
community to use the package

00:11:43,819 --> 00:11:51,790
if the you needed um by doing that we

00:11:47,690 --> 00:11:54,440
will not affect the exiting x86 suitors

00:11:51,790 --> 00:11:57,709
after solving the dependency problems

00:11:54,440 --> 00:12:01,129
the software will be okay to build there

00:11:57,709 --> 00:12:03,259
are still some functional problems some

00:12:01,129 --> 00:12:07,790
of them are caused by different

00:12:03,259 --> 00:12:10,009
behaviors on x86 when interesting

00:12:07,790 --> 00:12:13,550
problems happened in during when people

00:12:10,009 --> 00:12:16,459
debugger process on stock our colleague

00:12:13,550 --> 00:12:18,740
our colleges found out that the

00:12:16,459 --> 00:12:24,410
calculation the result is different from

00:12:18,740 --> 00:12:28,610
x86 and and after bagging we found out

00:12:24,410 --> 00:12:34,129
that Oracle JDK it has made some changes

00:12:28,610 --> 00:12:39,560
that resulted to the mass level so that

00:12:34,129 --> 00:12:43,250
it will run faster x86 and but it will

00:12:39,560 --> 00:12:46,459
cost in accuracy and the result is

00:12:43,250 --> 00:12:50,830
different arm so we proposed to the

00:12:46,459 --> 00:12:54,730
community and communities rejected

00:12:50,830 --> 00:12:57,400
since some projects for pre-committed

00:12:54,730 --> 00:13:00,010
has only ran the test to be that her

00:12:57,400 --> 00:13:02,320
related to the patch and some of our

00:13:00,010 --> 00:13:06,310
jobs is running day me with the full

00:13:02,320 --> 00:13:08,680
test we also discovered that some hadn't

00:13:06,310 --> 00:13:11,920
promised those apples those problems are

00:13:08,680 --> 00:13:14,470
not unrelated the note her get discovery

00:13:11,920 --> 00:13:17,650
only because they have not been running

00:13:14,470 --> 00:13:20,050
for a long time such as we found there

00:13:17,650 --> 00:13:24,490
at in Hadoop or there are some code dead

00:13:20,050 --> 00:13:27,880
and tested at our food fully right him

00:13:24,490 --> 00:13:29,920
so apparently our Seattle not only

00:13:27,880 --> 00:13:32,610
benefit the people that are interested

00:13:29,920 --> 00:13:32,610
in us

00:13:34,830 --> 00:13:36,890
you

00:13:37,900 --> 00:13:43,940
apart from the CS we have also done some

00:13:41,140 --> 00:13:46,130
primary performance testing on Hadoop

00:13:43,940 --> 00:13:49,640
about running and comparing the result

00:13:46,130 --> 00:13:53,180
and the x86 server which could also be

00:13:49,640 --> 00:13:55,820
very cheating to look at we have setup

00:13:53,180 --> 00:14:00,170
whose three nodes have Hadoop cluster on

00:13:55,820 --> 00:14:04,540
both x86 and servers the hardware are

00:14:00,170 --> 00:14:07,880
similar both have it we see fuels and

00:14:04,540 --> 00:14:11,120
16gb memories some of you made the

00:14:07,880 --> 00:14:13,160
familiar with turns out attitude it's

00:14:11,120 --> 00:14:15,380
widely used in terms of Hadoop

00:14:13,160 --> 00:14:19,040
benchmarking and Hadoop who have

00:14:15,380 --> 00:14:24,130
provided example Java that can be used

00:14:19,040 --> 00:14:26,080
to running basic jobs so we use them to

00:14:24,130 --> 00:14:28,570
the job package to the including three

00:14:26,080 --> 00:14:31,930
MapReduce applications couraging

00:14:28,570 --> 00:14:35,470
Sarasota and Tara validate firstly we

00:14:31,930 --> 00:14:41,140
used Hedren to generate the testing data

00:14:35,470 --> 00:14:45,640
reads the 20 GB 50 GB and the 100 GB we

00:14:41,140 --> 00:14:48,000
will testing with small nuts of data in

00:14:45,640 --> 00:14:52,060
the future and we have learnt a lot on

00:14:48,000 --> 00:14:55,240
those data to see how Hadoop cluster

00:14:52,060 --> 00:14:57,160
performance in different platform and we

00:14:55,240 --> 00:15:02,080
really did John with the pterosaur

00:14:57,160 --> 00:15:05,170
validator we range scenario for new

00:15:02,080 --> 00:15:07,540
terms and the summarize without from the

00:15:05,170 --> 00:15:10,390
graph we can see the result are

00:15:07,540 --> 00:15:14,230
comparable and in some case I'm the

00:15:10,390 --> 00:15:16,810
flash I'm platform better and I

00:15:14,230 --> 00:15:21,940
considered that for some amount of

00:15:16,810 --> 00:15:24,690
memory when can get more results the x86

00:15:21,940 --> 00:15:27,520
results we can see that running big data

00:15:24,690 --> 00:15:31,920
application are our mo didn't hurt will

00:15:27,520 --> 00:15:34,439
be a very completely competitive

00:15:31,920 --> 00:15:37,350
they start stampeding testicles that we

00:15:34,439 --> 00:15:39,619
have studied to work and we hope we can

00:15:37,350 --> 00:15:42,959
get more detailed results in the future

00:15:39,619 --> 00:15:46,559
and now I have passed a temp to American

00:15:42,959 --> 00:15:50,990
job he will introduce to you some

00:15:46,559 --> 00:15:50,990
information from some other areas

00:16:03,220 --> 00:16:09,010
now

00:16:04,390 --> 00:16:09,760
most most pool a weather angel police as

00:16:09,010 --> 00:16:12,460
John bought

00:16:09,760 --> 00:16:15,640
of the beautyrx approach acted himself

00:16:12,460 --> 00:16:17,290
and have a look at what errors can

00:16:15,640 --> 00:16:22,290
affect to the performance and user

00:16:17,290 --> 00:16:26,820
experience there are a lot of user in

00:16:22,290 --> 00:16:26,820
there are lot there are a lot of user

00:16:27,330 --> 00:16:35,920
user non-perception under layer and

00:16:31,510 --> 00:16:39,100
elaborate that acceptor a lot of on the

00:16:35,920 --> 00:16:41,800
upper layer of their kitchens and we

00:16:39,100 --> 00:16:44,620
have also done a lot of people improving

00:16:41,800 --> 00:16:47,440
them I'm transformed so they accept we

00:16:44,620 --> 00:16:52,690
are using them could perform much better

00:16:47,440 --> 00:16:56,160
and of course people from Amanda narrow

00:16:52,690 --> 00:16:58,870
had been done a lot of those areas for

00:16:56,160 --> 00:17:01,390
very long time we are just doing our

00:16:58,870 --> 00:17:07,270
part of the job standing on the

00:17:01,390 --> 00:17:10,390
shoulders of giants so we have done some

00:17:07,270 --> 00:17:16,510
improvements in some basic and most

00:17:10,390 --> 00:17:20,400
widely used rig like in GDP we have

00:17:16,510 --> 00:17:23,860
optimized functions black string copy

00:17:20,400 --> 00:17:26,860
trimmings memory sight and so on a

00:17:23,860 --> 00:17:30,700
stream and according to the test we got

00:17:26,860 --> 00:17:34,510
fair to 20% improvement given hyung

00:17:30,700 --> 00:17:37,270
different half of data set and these

00:17:34,510 --> 00:17:39,240
functions are used ammo almost

00:17:37,270 --> 00:17:42,720
everywhere

00:17:39,240 --> 00:17:46,409
we also have enabled some lips to be in

00:17:42,720 --> 00:17:51,240
able to join transform for the first

00:17:46,409 --> 00:17:53,029
time like the AIC air we have added the

00:17:51,240 --> 00:17:56,909
air ashore called

00:17:53,029 --> 00:18:01,830
support and after this advanced features

00:17:56,909 --> 00:18:05,809
like the hdfs ever sure coding with as

00:18:01,830 --> 00:18:08,909
we could also be used under at home

00:18:05,809 --> 00:18:13,740
there are also some undergoing works

00:18:08,909 --> 00:18:17,429
like you know snappy and the STD which

00:18:13,740 --> 00:18:21,450
also effectively dust software in case

00:18:17,429 --> 00:18:25,230
you are interested here is a link to our

00:18:21,450 --> 00:18:27,529
current work a term for this kind of

00:18:25,230 --> 00:18:27,529
drops

00:18:30,180 --> 00:18:36,730
now let's have a closer look at what we

00:18:34,090 --> 00:18:40,540
are currently doing in this part instead

00:18:36,730 --> 00:18:43,810
of talking about just Big Data really

00:18:40,540 --> 00:18:46,510
works really me give you a full map for

00:18:43,810 --> 00:18:48,900
map about what all were commiserating in

00:18:46,510 --> 00:18:48,900
what doing

00:18:49,690 --> 00:18:51,750
you

00:18:55,830 --> 00:19:00,419
so first of all we are

00:18:58,110 --> 00:19:02,880
to introduce another important of common

00:19:00,419 --> 00:19:05,519
use case for it wasn't her services

00:19:02,880 --> 00:19:09,169
there are quite a lot of customers that

00:19:05,519 --> 00:19:12,500
are asked to know how we those abilities

00:19:09,169 --> 00:19:15,779
similar to previous mission Big Data

00:19:12,500 --> 00:19:19,320
projects our plan for the dr. Jeff also

00:19:15,779 --> 00:19:22,890
has an improved for some projects

00:19:19,320 --> 00:19:26,309
Blackmer DB with donated our resource to

00:19:22,890 --> 00:19:29,340
help them verify functionality ant fo

00:19:26,309 --> 00:19:32,700
and we have also started to discuss with

00:19:29,340 --> 00:19:36,899
project lacunae and been found to have a

00:19:32,700 --> 00:19:40,919
plan put to needs our resources and for

00:19:36,899 --> 00:19:43,169
some other project that you use other

00:19:40,919 --> 00:19:45,690
internal has to be sauce them a circle

00:19:43,169 --> 00:19:48,419
and a bongo DB we have started to D he

00:19:45,690 --> 00:19:50,710
starts with them to provide an test or

00:19:48,419 --> 00:19:52,400
releases

00:19:50,710 --> 00:19:53,890
you

00:19:52,400 --> 00:19:56,670
you

00:19:53,890 --> 00:19:56,670
a part of

00:19:57,060 --> 00:20:01,970
scientists they are also proposing some

00:19:59,730 --> 00:20:05,940
features so that the databases

00:20:01,970 --> 00:20:09,680
works better on platform and I start

00:20:05,940 --> 00:20:12,840
waist if we work on the most population

00:20:09,680 --> 00:20:14,910
database Mexico there are attorneys

00:20:12,840 --> 00:20:17,150
three fields that we are currently

00:20:14,910 --> 00:20:21,960
working on the first one is are any

00:20:17,150 --> 00:20:25,020
payment of Quechua and some of you may

00:20:21,960 --> 00:20:29,280
know some chips now have a heritage now

00:20:25,020 --> 00:20:32,130
less than the river x86 chips and if the

00:20:29,280 --> 00:20:34,650
software still use the same Koechlin

00:20:32,130 --> 00:20:35,510
configurations and our resource our

00:20:34,650 --> 00:20:40,410
estate

00:20:35,510 --> 00:20:43,380
so proposed a way to be able to eat in

00:20:40,410 --> 00:20:46,920
the catchment well we have all that

00:20:43,380 --> 00:20:50,150
larger size can make use the hardware

00:20:46,920 --> 00:20:54,850
advantage and be more competitive

00:20:50,150 --> 00:21:01,240
another way the CPU feature

00:20:54,850 --> 00:21:04,090
this way this way nothing playing Mexico

00:21:01,240 --> 00:21:07,539
birdie be also shown interesting and I

00:21:04,090 --> 00:21:10,779
bit into covered covered areas our team

00:21:07,539 --> 00:21:12,669
for developing and testing his future we

00:21:10,779 --> 00:21:16,320
are still discussing the detail about it

00:21:12,669 --> 00:21:20,519
and hopefully it will be developed for

00:21:16,320 --> 00:21:24,159
the last one we have honey is the

00:21:20,519 --> 00:21:27,080
productive tracking system locked bit

00:21:24,159 --> 00:21:29,440
clock speed

00:21:27,080 --> 00:21:34,129
we improve our performance in parallel

00:21:29,440 --> 00:21:36,679
cases it is also in early stage and the

00:21:34,129 --> 00:21:39,619
way we are share our result with the

00:21:36,679 --> 00:21:42,200
community was we have the development

00:21:39,619 --> 00:21:44,690
and health now let's turn back to my

00:21:42,200 --> 00:21:50,299
college here we are introduced our

00:21:44,690 --> 00:21:54,429
current work and just let me know you

00:21:50,299 --> 00:21:54,429
have three more minutes

00:21:55,570 --> 00:22:00,139
hi sorry I don't know if he heard me

00:21:57,980 --> 00:22:02,299
we've got three more minutes so you'll

00:22:00,139 --> 00:22:06,169
need to start wrapping up soon this is

00:22:02,299 --> 00:22:08,779
just a reminder ok ok thank you - thanks

00:22:06,169 --> 00:22:10,639
job well so in a big attack you didn't

00:22:08,779 --> 00:22:15,769
Tyrell I've mentioned before we have

00:22:10,639 --> 00:22:18,649
already we have have Hadoop CA and it

00:22:15,769 --> 00:22:21,799
had been steadily running for well and

00:22:18,649 --> 00:22:24,710
now the Hadoop Chansey Brahma from our

00:22:21,799 --> 00:22:27,889
team has started a discussion about

00:22:24,710 --> 00:22:30,109
publish the arm release practice for

00:22:27,889 --> 00:22:32,840
Hadoop who reads the packages user won't

00:22:30,109 --> 00:22:35,259
even have to search for talks on how to

00:22:32,840 --> 00:22:39,499
build it and the due date is themselves

00:22:35,259 --> 00:22:42,379
instead they can just download and learn

00:22:39,499 --> 00:22:44,629
English for vendors we will provide

00:22:42,379 --> 00:22:48,109
refer those results and mountains about

00:22:44,629 --> 00:22:51,009
the release for the future worsens

00:22:48,109 --> 00:22:55,039
aside from that we have awesome also

00:22:51,009 --> 00:23:00,049
prevalent some new tools features to the

00:22:55,039 --> 00:23:04,220
community the photo ID it's a medium for

00:23:00,049 --> 00:23:05,509
those who not beep Emily this medium is

00:23:04,220 --> 00:23:14,389
a non-relative

00:23:05,509 --> 00:23:19,489
but well it health memories another

00:23:14,389 --> 00:23:22,429
feature is SM 4 which is the blockers

00:23:19,489 --> 00:23:27,489
effort using general is no standard for

00:23:22,429 --> 00:23:27,489
well as a VHF and

00:23:27,910 --> 00:23:33,820
and also we also work on other software

00:23:30,880 --> 00:23:34,660
embedded health ecosystem such as hoodoo

00:23:33,820 --> 00:23:37,690
and Europe

00:23:34,660 --> 00:23:41,290
our first step is to propose a DMCA

00:23:37,690 --> 00:23:44,470
supporter we have open eyes ensuring the

00:23:41,290 --> 00:23:47,200
coudl community to discuss port support

00:23:44,470 --> 00:23:50,230
arm for aku do dedicated host the

00:23:47,200 --> 00:23:54,340
positive openings now we have submitted

00:23:50,230 --> 00:23:56,890
a pink attached to kudu Garrett the

00:23:54,340 --> 00:23:59,410
building process uzuki and mortis campus

00:23:56,890 --> 00:24:02,860
not we first you have some test kids

00:23:59,410 --> 00:24:09,430
they had to attend a good cause

00:24:02,860 --> 00:24:11,770
we also also plan to add mgs4 for and

00:24:09,430 --> 00:24:15,640
Harlem project anthem project in the

00:24:11,770 --> 00:24:18,700
filter we have we have submitted visuals

00:24:15,640 --> 00:24:21,790
in the initial communities and had

00:24:18,700 --> 00:24:25,510
called positive openings and we have to

00:24:21,790 --> 00:24:27,570
some initial attempts

00:24:25,510 --> 00:24:27,570
you

00:24:28,470 --> 00:24:34,540
okay net and be with industry including

00:24:32,140 --> 00:24:44,950
you follow the updating but releasing

00:24:34,540 --> 00:24:50,440
and you've got one slide okay okay right

00:24:44,950 --> 00:24:54,070
so we have also done a lot of things in

00:24:50,440 --> 00:24:57,010
the virtualization caught field and as

00:24:54,070 --> 00:25:00,070
as Nomar away starting by identify the

00:24:57,010 --> 00:25:02,770
gaps between and other platforms

00:25:00,070 --> 00:25:06,309
actually it's not very good

00:25:02,770 --> 00:25:10,570
speak only from the line of codes we can

00:25:06,309 --> 00:25:13,179
see that from the live worked x86 CPU

00:25:10,570 --> 00:25:16,270
driver has about three thousand and four

00:25:13,179 --> 00:25:20,590
hundred lines of codes and even PowerPC

00:25:16,270 --> 00:25:24,490
64 CPU driver has 800 lines of codes but

00:25:20,590 --> 00:25:26,620
I'm sleepy driver only have 250 less of

00:25:24,490 --> 00:25:30,850
course so that's a very big difference

00:25:26,620 --> 00:25:33,070
and speaking of features there are some

00:25:30,850 --> 00:25:37,000
basic features are missing like the

00:25:33,070 --> 00:25:39,250
capability show and CPU compare those

00:25:37,000 --> 00:25:43,300
are very basic features which are

00:25:39,250 --> 00:25:44,980
missing but hopefully we have talked to

00:25:43,300 --> 00:25:47,850
the to the community they are very

00:25:44,980 --> 00:25:50,830
welcome about working on those

00:25:47,850 --> 00:25:55,050
Everywhere's so we we are going to

00:25:50,830 --> 00:25:57,850
working on those areas in the future and

00:25:55,050 --> 00:26:01,450
what we are going to do is that we will

00:25:57,850 --> 00:26:05,590
keep on working our current fields and

00:26:01,450 --> 00:26:08,760
some other new fields and you guys are

00:26:05,590 --> 00:26:11,920
very welcome to cooperate with us to

00:26:08,760 --> 00:26:15,429
make a better future for the um dinner

00:26:11,920 --> 00:26:17,940
centers and here is our selection oh and

00:26:15,429 --> 00:26:20,350
if anyone has any question or any

00:26:17,940 --> 00:26:26,820
interesting topics can go on is that

00:26:20,350 --> 00:26:26,820

YouTube URL: https://www.youtube.com/watch?v=crcOzsbVsjg


