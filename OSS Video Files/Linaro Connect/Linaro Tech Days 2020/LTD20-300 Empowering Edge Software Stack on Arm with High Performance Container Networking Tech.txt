Title: LTD20-300 Empowering Edge Software Stack on Arm with High Performance Container Networking Tech
Publication date: 2020-04-01
Playlist: Linaro Tech Days 2020
Description: 
	Description: 
Empowering Edge Software Stack on Arm with High Performance Container Networking Technology

The purpose of edge computing and MEC is to bring real-time, high-bandwidth, low-latency access to latency-dependent applications, distributed at the edge of the network. Arm put special design consideration for edge computing into its CPU architecture and reference SoC.
On the other side, a high performance, flexible and easy deployable container networking of edge software stack is the key to the success of using Arm platform on edge computing.
In the presentation, we would like to give out our R&D work on Arm edge software stack. The following key takeaways would given but not limit to:
1. The Arm edge reference stack, use cases and its supporting technologies;
2. The high performance container networking technology used in Arm edge software stack, which includes Calico(kernel stack based), Cilium(bpf based), SRIOV device plugin and CNI with kernel and DPDK support(physical device based)
3. The SmartNIC for container networking with SRIOV and OVS offload
4. The data plane acceleration technique used for edge computing on arm
5. Performance evaluation, comparisons and optimization from the edge application aspect for above technologies

Session Speakers
Trevor Tao
Staff Softwre Engineer (Arm Ltd)


Zijin Tao is a Ph.D in Computer Networking, who has worked in this area for more than 15 years. He has worked as a network engineer in research institute of university for more than 10 years. Then he worked in IBM for almost 5 years for SDN and Cloud Networking.
Now he is working in Arm as an Staff Software Engineer, mainly on networking infrastructure open source projects.
 Zijin Tao has filed more than 10 patents and papers in Computer Networking. 



You can view this sessions presentation here:
https://connect.linaro.org/resources/ltd20/ltd20-300/
Captions: 
	00:00:01,140 --> 00:00:07,500
well count your tendencies a

00:00:03,360 --> 00:00:09,390
presentation about the empowering edge

00:00:07,500 --> 00:00:21,300
software stack on with high performance

00:00:09,390 --> 00:00:23,909
contain networking technology this is a

00:00:21,300 --> 00:00:27,569
agenda I would like to say that there

00:00:23,909 --> 00:00:29,999
was a six section about my presentation

00:00:27,569 --> 00:00:32,099
that's why is an introduction I would

00:00:29,999 --> 00:00:35,940
like to think I would like to present a

00:00:32,099 --> 00:00:38,070
as a service tech architecture and then

00:00:35,940 --> 00:00:40,289
the high-performance container a novel

00:00:38,070 --> 00:00:43,679
interfaces such as a calico silly and

00:00:40,289 --> 00:00:46,829
the four edges of grass there and the

00:00:43,679 --> 00:00:49,649
especial and then as special as the are

00:00:46,829 --> 00:00:51,390
we soon I especially average named SL we

00:00:49,649 --> 00:00:54,769
and the semantic support for container

00:00:51,390 --> 00:00:58,170
mocking I would like to present some

00:00:54,769 --> 00:01:00,449
initial performs tasks on this thing

00:00:58,170 --> 00:01:12,990
eyes on this container having solutions

00:01:00,449 --> 00:01:15,990
and our future work parlez as you know

00:01:12,990 --> 00:01:20,700
as we as you know the purpose of edge

00:01:15,990 --> 00:01:23,460
computing arm and back raucous Isis edge

00:01:20,700 --> 00:01:25,560
computing is to bring the real time real

00:01:23,460 --> 00:01:28,280
time high five Pandavas low latency

00:01:25,560 --> 00:01:30,330
access to latency dependent applications

00:01:28,280 --> 00:01:33,930
distributed at the edge of the network

00:01:30,330 --> 00:01:36,990
arm CPUs are closed effective consume

00:01:33,930 --> 00:01:39,390
low-power and customizable and making

00:01:36,990 --> 00:01:42,690
then attract preferred choice or edge

00:01:39,390 --> 00:01:44,270
cloud service vendors on the other side

00:01:42,690 --> 00:01:46,950
a hypothenuse

00:01:44,270 --> 00:01:49,380
flexible and easy deployable contain

00:01:46,950 --> 00:01:51,960
networking of edge service that is a key

00:01:49,380 --> 00:01:55,560
to the success of food to the success of

00:01:51,960 --> 00:01:58,230
using arm platform on edge cloud since

00:01:55,560 --> 00:02:00,180
the widely used of young apps virtual

00:01:58,230 --> 00:02:02,130
network the functions are deployed by

00:02:00,180 --> 00:02:04,760
container based of trading engine such

00:02:02,130 --> 00:02:09,030
as kubernetes all of his shift bars and

00:02:04,760 --> 00:02:12,990
in this graph give us a universal CP

00:02:09,030 --> 00:02:14,730
example of edge compute and the service

00:02:12,990 --> 00:02:17,580
providers are looking

00:02:14,730 --> 00:02:22,040
looking to simplify customer site

00:02:17,580 --> 00:02:26,069
deployment so we can replace traditional

00:02:22,040 --> 00:02:29,670
dedicated applies appliances with mr.

00:02:26,069 --> 00:02:34,379
vieng apps running on the universal CPE

00:02:29,670 --> 00:02:36,810
is a software based 16 to implement all

00:02:34,379 --> 00:02:38,870
the functions implemented by the

00:02:36,810 --> 00:02:42,959
hardware appliances

00:02:38,870 --> 00:02:45,060
so the you PE you see PE can show the

00:02:42,959 --> 00:02:50,329
leverage white box doubles with no

00:02:45,060 --> 00:02:52,799
proprietary extensions and actually

00:02:50,329 --> 00:02:55,230
ecosystem leverage applies power

00:02:52,799 --> 00:03:07,319
acceleration advantage and in this

00:02:55,230 --> 00:03:12,269
translation in this transition so in

00:03:07,319 --> 00:03:15,480
this page I give out a edge reference

00:03:12,269 --> 00:03:18,510
tag which is composed to the from button

00:03:15,480 --> 00:03:22,889
to the upper layer from the botton to

00:03:18,510 --> 00:03:26,880
the upper layer get a cop and the at the

00:03:22,889 --> 00:03:29,310
bottom we have the hardware support from

00:03:26,880 --> 00:03:33,200
the high performance NICs and or some

00:03:29,310 --> 00:03:39,150
semantics semantics is - support and

00:03:33,200 --> 00:03:43,139
from the oak from the network layer we

00:03:39,150 --> 00:03:45,450
have to say we oughta be DK or something

00:03:43,139 --> 00:03:48,630
like that jutsu Pearlman to support high

00:03:45,450 --> 00:03:50,459
performance network packet access from

00:03:48,630 --> 00:03:52,560
the orchestration layer can

00:03:50,459 --> 00:03:54,299
operationally we have compares as a

00:03:52,560 --> 00:03:57,900
clock stretching engine for the

00:03:54,299 --> 00:04:01,650
containers and butter on the lead vocal

00:03:57,900 --> 00:04:05,400
inside you have be leveraged emergency

00:04:01,650 --> 00:04:08,669
the older legacy networking software

00:04:05,400 --> 00:04:10,699
such as open with switch or what you

00:04:08,669 --> 00:04:13,410
working it back the packet of recession

00:04:10,699 --> 00:04:15,780
software and the minister networking and

00:04:13,410 --> 00:04:18,090
the extended the PPF to do the

00:04:15,780 --> 00:04:20,099
networking support but from the

00:04:18,090 --> 00:04:25,320
controller side you have a lot of

00:04:20,099 --> 00:04:27,450
choices such as the Calico fernando city

00:04:25,320 --> 00:04:28,290
and om kubernetes are all these

00:04:27,450 --> 00:04:30,930
solutions

00:04:28,290 --> 00:04:33,870
like to present them in a more detail in

00:04:30,930 --> 00:04:36,630
the later slides from the top layer we

00:04:33,870 --> 00:04:39,150
have the applications and application

00:04:36,630 --> 00:04:42,270
orchestration engine such as maybe light

00:04:39,150 --> 00:04:45,260
with such own app or such as something

00:04:42,270 --> 00:04:48,570
that and something like that we have the

00:04:45,260 --> 00:04:51,180
application platform such as they could

00:04:48,570 --> 00:04:53,610
be below for the AI service and the

00:04:51,180 --> 00:04:55,890
service match for the deployment of the

00:04:53,610 --> 00:05:01,850
deployment of micro services and the

00:04:55,890 --> 00:05:05,520
creative I'm something like that and

00:05:01,850 --> 00:05:08,670
actually we have imp implemented and a

00:05:05,520 --> 00:05:11,310
magic software stack and it deployed it

00:05:08,670 --> 00:05:13,290
as a reference cluster is a reference

00:05:11,310 --> 00:05:15,960
class to be the coolest referenced

00:05:13,290 --> 00:05:18,720
cluster and in this cluster we have

00:05:15,960 --> 00:05:21,660
three nodes and the first one is the

00:05:18,720 --> 00:05:23,610
kubernetes master doubt which apply the

00:05:21,660 --> 00:05:26,370
common area system service if we could

00:05:23,610 --> 00:05:29,730
add it a PSO is under a system for the

00:05:26,370 --> 00:05:32,280
Cystic cess and we have actually we have

00:05:29,730 --> 00:05:36,110
two nodes here and therefore deploy the

00:05:32,280 --> 00:05:39,840
mini today being apps such as the

00:05:36,110 --> 00:05:43,010
paciencia service mesh such as actuated

00:05:39,840 --> 00:05:46,230
portable portable C batteries we stay

00:05:43,010 --> 00:05:48,570
hours of container of we sort of heavens

00:05:46,230 --> 00:05:52,020
canary solution such catechol or others

00:05:48,570 --> 00:05:54,270
in the weighing some pot Winston

00:05:52,020 --> 00:05:56,940
contains neither hyper phones access we

00:05:54,270 --> 00:05:59,430
can deploy a SRV interfaces as

00:05:56,940 --> 00:06:03,540
re-intubated fire marshals or a

00:05:59,430 --> 00:06:05,940
servicing knife to the pot in the right

00:06:03,540 --> 00:06:09,030
path in the red pad is a sample

00:06:05,940 --> 00:06:12,150
deployment with small somebody promised

00:06:09,030 --> 00:06:14,310
to kind of solutions and the first one

00:06:12,150 --> 00:06:16,550
is the small deployment of ism aware

00:06:14,310 --> 00:06:19,740
backed up in toxic thoughts it's a

00:06:16,550 --> 00:06:22,950
reference stack and the second why some

00:06:19,740 --> 00:06:25,530
servers to deploy in the edge cloud this

00:06:22,950 --> 00:06:31,170
is suppose a male are subject to or

00:06:25,530 --> 00:06:33,300
ampere servers now i would like to give

00:06:31,170 --> 00:06:34,950
you a total picture of the high

00:06:33,300 --> 00:06:38,840
performance container working solutions

00:06:34,950 --> 00:06:38,840
or arm edges of the stack

00:06:41,479 --> 00:06:50,309
this picture keep active out a total Pig

00:06:44,909 --> 00:06:54,270
total of the total support in our IEC

00:06:50,309 --> 00:06:57,419
edges of the stack in the a criminal a

00:06:54,270 --> 00:06:59,909
Karina community which is open source

00:06:57,419 --> 00:07:02,789
which is open source and give out a

00:06:59,909 --> 00:07:06,419
source code tree in this arm edge

00:07:02,789 --> 00:07:10,999
software stack we had enabled we had

00:07:06,419 --> 00:07:14,569
enabled the support and deployment for

00:07:10,999 --> 00:07:18,360
several important the most important

00:07:14,569 --> 00:07:22,199
continue a bogey solutions and they are

00:07:18,360 --> 00:07:26,039
I think there's a solutions include

00:07:22,199 --> 00:07:28,349
catechol Syrian and a continuity and

00:07:26,039 --> 00:07:31,469
Odin kubernetes and SR we and a few nano

00:07:28,349 --> 00:07:34,289
I would present a caracal and a Syrian

00:07:31,469 --> 00:07:37,649
in later slides with a bit little bit

00:07:34,289 --> 00:07:40,740
and more details and there for the

00:07:37,649 --> 00:07:42,389
continuity it uses the federal rivet you

00:07:40,740 --> 00:07:44,819
provide the network traffic collab

00:07:42,389 --> 00:07:47,849
connectivity between ports and it's a

00:07:44,819 --> 00:07:49,499
nativity TBT BTK support in the for the

00:07:47,849 --> 00:07:52,379
face comic so it's a high performance

00:07:49,499 --> 00:07:54,899
with with her but it's hard to deploy

00:07:52,379 --> 00:07:58,110
and it's hard to compete and hard to

00:07:54,899 --> 00:08:00,330
debug and for young kubernetes we have

00:07:58,110 --> 00:08:04,139
the OAS patch the solution for container

00:08:00,330 --> 00:08:05,849
networking and there is it's important

00:08:04,139 --> 00:08:08,819
it's a performance it's very rather good

00:08:05,849 --> 00:08:11,759
other good and the reuse of Ian's

00:08:08,819 --> 00:08:13,800
logical switches and routers to crackpot

00:08:11,759 --> 00:08:17,819
you for the outside and if you know

00:08:13,800 --> 00:08:21,330
eternal side access for the SR we

00:08:17,819 --> 00:08:25,439
interfaces is always support we deployed

00:08:21,330 --> 00:08:28,409
physical interfaces such as the PF which

00:08:25,439 --> 00:08:31,430
a primary function or virtual function

00:08:28,409 --> 00:08:33,990
PF o VF support for ports

00:08:31,430 --> 00:08:36,810
it's a high performance with direct and

00:08:33,990 --> 00:08:39,750
in a kernel it is an a driver or typical

00:08:36,810 --> 00:08:43,430
a PMD driver I would like to present it

00:08:39,750 --> 00:08:48,089
s are we seeing our more details but it

00:08:43,430 --> 00:08:51,600
usually we used as a fishing knife with

00:08:48,089 --> 00:08:53,730
other canary solutions because as our we

00:08:51,600 --> 00:08:57,030
is not so extensible if

00:08:53,730 --> 00:09:02,820
it's not so it's scalability is not so

00:08:57,030 --> 00:09:05,460
good so we use this nano catechu to use

00:09:02,820 --> 00:09:08,070
adjectives or to sing I but when you

00:09:05,460 --> 00:09:11,300
need high-performance access you we use

00:09:08,070 --> 00:09:16,560
the mud hut stood clue the choosing eyes

00:09:11,300 --> 00:09:18,510
and the ladies the ye the Fernando

00:09:16,560 --> 00:09:20,910
Fernando is widely used and almost easy

00:09:18,510 --> 00:09:23,760
deployment and it's an in extendable

00:09:20,910 --> 00:09:27,270
abridge collection for attraction and

00:09:23,760 --> 00:09:29,010
oil of olay based overlay base this

00:09:27,270 --> 00:09:32,820
communication for in the hosted access

00:09:29,010 --> 00:09:36,260
and actually yes there is no could never

00:09:32,820 --> 00:09:40,800
the policy support in for Fernando and

00:09:36,260 --> 00:09:43,440
as I said this in this piece page gives

00:09:40,800 --> 00:09:48,150
out a description about the caracal on

00:09:43,440 --> 00:09:50,190
covenants a calico as is project calico

00:09:48,150 --> 00:09:54,120
is important a solution of is widely

00:09:50,190 --> 00:09:56,370
usage and actually it's it's this

00:09:54,120 --> 00:09:59,340
collection is shows show they work my

00:09:56,370 --> 00:10:02,030
reason of the typical employment of

00:09:59,340 --> 00:10:04,710
cattle for the continent and working

00:10:02,030 --> 00:10:07,950
actually we have fury up in a bogey

00:10:04,710 --> 00:10:10,230
fabric and when there is directly to

00:10:07,950 --> 00:10:13,230
collection pitting their notes there is

00:10:10,230 --> 00:10:15,630
no need to use the car encapsulation so

00:10:13,230 --> 00:10:18,300
it's performance is rather good and we

00:10:15,630 --> 00:10:20,640
have the correct IP routing pitching the

00:10:18,300 --> 00:10:22,920
path between different parts so the

00:10:20,640 --> 00:10:26,220
access agent rather direct and the

00:10:22,920 --> 00:10:27,960
caracal solution can and support of the

00:10:26,220 --> 00:10:31,670
network of kubernetes native of the

00:10:27,960 --> 00:10:34,260
policy by IP tables and it has good

00:10:31,670 --> 00:10:36,600
scalability with the BGP face the

00:10:34,260 --> 00:10:40,230
routing which we based the routing for

00:10:36,600 --> 00:10:44,370
all the containers or the parts in this

00:10:40,230 --> 00:10:46,320
graph I've you like I will give a rudder

00:10:44,370 --> 00:10:48,570
the initial performance test results for

00:10:46,320 --> 00:10:52,950
the characters in I had everything I own

00:10:48,570 --> 00:10:55,650
kubernetes and it's a second alive like

00:10:52,950 --> 00:10:58,710
you say a little more in detail is the

00:10:55,650 --> 00:11:02,850
Syrian Sienna it is widely used today

00:10:58,710 --> 00:11:06,060
and become more popular becoming more

00:11:02,850 --> 00:11:07,600
and more popular today because it uses

00:11:06,060 --> 00:11:11,170
an ADA support

00:11:07,600 --> 00:11:11,980
ippai based on a novel policy and a lot

00:11:11,170 --> 00:11:16,120
of occur

00:11:11,980 --> 00:11:17,949
could you as a network of theater PACA

00:11:16,120 --> 00:11:21,100
the future and it is supported container

00:11:17,949 --> 00:11:23,230
access and the photo access beast if you

00:11:21,100 --> 00:11:25,209
have a support and there's Syrian

00:11:23,230 --> 00:11:27,190
teaming syrian teaming in this graph

00:11:25,209 --> 00:11:30,490
city team works as a particle

00:11:27,190 --> 00:11:33,819
interaction tutor from you translate the

00:11:30,490 --> 00:11:37,230
cooperage scenario policy into the PTFE

00:11:33,819 --> 00:11:41,319
program into the kernel and include a to

00:11:37,230 --> 00:11:45,630
restrict or restrict or the access to

00:11:41,319 --> 00:11:49,360
the fiscal Nika and QJ access to the

00:11:45,630 --> 00:11:55,120
corresponding part in the system we need

00:11:49,360 --> 00:11:57,420
to do some latter book policy and the

00:11:55,120 --> 00:12:01,000
from the networking model in happy

00:11:57,420 --> 00:12:04,269
Syrian sub prodigy lexi encapsulation or

00:12:01,000 --> 00:12:07,990
character routing directory routing

00:12:04,269 --> 00:12:10,980
models for the iPod collection and we

00:12:07,990 --> 00:12:14,079
can use the be extra and then

00:12:10,980 --> 00:12:19,420
encapsulation to enable access between

00:12:14,079 --> 00:12:22,930
nodes and actually typical to most the

00:12:19,420 --> 00:12:25,660
typical features are Syrian is that it

00:12:22,930 --> 00:12:28,050
uses the PPF base the solution to

00:12:25,660 --> 00:12:33,819
support community service implementation

00:12:28,050 --> 00:12:37,420
as we know i PPF is a temp is a very

00:12:33,819 --> 00:12:40,569
high performance in kernel solution

00:12:37,420 --> 00:12:43,449
which the network of policy to to employ

00:12:40,569 --> 00:12:45,550
in the kernel to do the filtering and

00:12:43,449 --> 00:12:48,819
there are other things in the kernel is

00:12:45,550 --> 00:12:52,240
a virtual machine like solutions in the

00:12:48,819 --> 00:12:57,189
kernel and you are they to do other

00:12:52,240 --> 00:12:59,649
things so it's it's a much it's

00:12:57,189 --> 00:13:02,920
performance is much better than the act

00:12:59,649 --> 00:13:06,220
able paste copy proxy so we should do

00:13:02,920 --> 00:13:10,930
this the all the so is in in annulus and

00:13:06,220 --> 00:13:14,860
they have to use to implement all then

00:13:10,930 --> 00:13:18,399
in the nine-year manner but it's

00:13:14,860 --> 00:13:21,400
powerful PPF it's a hash based and we

00:13:18,399 --> 00:13:24,550
just implemented onion

00:13:21,400 --> 00:13:31,180
very very faster model to implement all

00:13:24,550 --> 00:13:33,430
the network policy and even a numerous

00:13:31,180 --> 00:13:36,160
senior feature for the syrian is that it

00:13:33,430 --> 00:13:41,410
is supported an API allows security to

00:13:36,160 --> 00:13:45,790
support at a HTTP or TR PC or cup copies

00:13:41,410 --> 00:13:48,310
if you are aware that Ibaka policy for

00:13:45,790 --> 00:13:54,910
example in this pic in this picture we

00:13:48,310 --> 00:13:58,260
support a HTTP GET accessed HDTV can

00:13:54,910 --> 00:14:00,730
access from the different pods and we

00:13:58,260 --> 00:14:03,610
restrict the access for the other

00:14:00,730 --> 00:14:08,080
actions such as post or such as such as

00:14:03,610 --> 00:14:11,560
access to other URLs for HTTP the Syrian

00:14:08,080 --> 00:14:14,020
is very popular and very become more and

00:14:11,560 --> 00:14:16,000
more popular solution nowadays for high

00:14:14,020 --> 00:14:20,920
problems except for the container

00:14:16,000 --> 00:14:24,450
networking solutions and another

00:14:20,920 --> 00:14:27,400
important the networking solution

00:14:24,450 --> 00:14:29,050
another important evolution is as are we

00:14:27,400 --> 00:14:36,160
and the semantic support for container

00:14:29,050 --> 00:14:39,790
looking in this graph and the activity I

00:14:36,160 --> 00:14:44,260
took a picture of the how to deploy SR

00:14:39,790 --> 00:14:46,540
we interfaces to the parts in this graph

00:14:44,260 --> 00:14:49,620
we use system artist singer which is

00:14:46,540 --> 00:14:52,540
clusen I could deploy two kinds of

00:14:49,620 --> 00:14:54,400
container reviewing solutions and the

00:14:52,540 --> 00:14:56,410
first device that the port wine for the

00:14:54,400 --> 00:14:59,339
Fernando character plugin you can choose

00:14:56,410 --> 00:15:01,930
one of them and you deploy data port I

00:14:59,339 --> 00:15:05,500
can annually solutions to their ports

00:15:01,930 --> 00:15:08,080
but if you need if you need a high

00:15:05,500 --> 00:15:11,560
performance solution such as attractive

00:15:08,080 --> 00:15:15,100
physical interface to your part to your

00:15:11,560 --> 00:15:17,529
containers you can use this are we and

00:15:15,100 --> 00:15:19,450
you can add a description you are a

00:15:17,529 --> 00:15:22,990
description what resources you want

00:15:19,450 --> 00:15:25,180
you'll want to use in this graph in this

00:15:22,990 --> 00:15:27,730
page I give out a description of the

00:15:25,180 --> 00:15:30,250
water into water interfaces you'll want

00:15:27,730 --> 00:15:32,829
in use and your water we have provided

00:15:30,250 --> 00:15:35,110
in this in space we have provided a

00:15:32,829 --> 00:15:38,769
district reaching for the

00:15:35,110 --> 00:15:41,940
the fiscal nick Pisgah neo4j as manic

00:15:38,769 --> 00:15:49,930
somatic stink program which is stingray

00:15:41,940 --> 00:15:53,410
broadcasting rape yes 200 QPS 225 225 we

00:15:49,930 --> 00:15:57,880
use this it's even a driver and then we

00:15:53,410 --> 00:15:59,829
uses you just primary functions as we

00:15:57,880 --> 00:16:03,010
give it to family but we should we

00:15:59,829 --> 00:16:05,800
wanted to use or to be apps we should

00:16:03,010 --> 00:16:09,850
create all the waves people hand when

00:16:05,800 --> 00:16:12,700
you need to be used and and one

00:16:09,850 --> 00:16:16,089
interesting point maybe for you maybe if

00:16:12,700 --> 00:16:19,149
we if we want you are use just to use

00:16:16,089 --> 00:16:21,640
the TP TK support which is means that we

00:16:19,149 --> 00:16:24,339
want to keep you deployed the typical

00:16:21,640 --> 00:16:28,589
applications in the pot how to use it

00:16:24,339 --> 00:16:31,089
and there so you can deploy i DD k

00:16:28,589 --> 00:16:34,209
drivers to in your description and

00:16:31,089 --> 00:16:37,570
choose the resources you want used you

00:16:34,209 --> 00:16:40,240
use this is a resource description for

00:16:37,570 --> 00:16:43,870
the DVD Capades ik here the drivers are

00:16:40,240 --> 00:16:46,810
v f io PCI which is we have a pizza

00:16:43,870 --> 00:16:50,470
which is a TBI based network that work

00:16:46,810 --> 00:16:53,410
driver and you can use the PDK solutions

00:16:50,470 --> 00:16:55,390
such as has the typical application such

00:16:53,410 --> 00:17:00,279
as test PMD you know parts to support

00:16:55,390 --> 00:17:02,550
this tip DK just dip it into phases so

00:17:00,279 --> 00:17:05,829
and the release graph gives out a

00:17:02,550 --> 00:17:08,770
deployment architecture for the problem

00:17:05,829 --> 00:17:11,410
the picture about the day I sit on a

00:17:08,770 --> 00:17:13,480
typical pot we have two interfaces the

00:17:11,410 --> 00:17:16,150
first why is the Fernando Carrick of

00:17:13,480 --> 00:17:19,449
rich to clamp to the Linux kernel and

00:17:16,150 --> 00:17:28,390
the sector wise the SRV interfaces with

00:17:19,449 --> 00:17:31,390
a BF v z VF of taste miss clinic and

00:17:28,390 --> 00:17:33,580
that i give up the networking model for

00:17:31,390 --> 00:17:36,309
the asabi interfaces collection this is

00:17:33,580 --> 00:17:39,160
this page in the pages soaking

00:17:36,309 --> 00:17:41,130
i gives out a sample deployment for kill

00:17:39,160 --> 00:17:45,429
pot collected obese i

00:17:41,130 --> 00:17:48,010
stingray a PS 225 we have in a single

00:17:45,429 --> 00:17:51,730
host this in this

00:17:48,010 --> 00:17:55,000
to kind of take apart our collective is

00:17:51,730 --> 00:17:57,880
SRV interfaces together buyers Monica

00:17:55,000 --> 00:18:01,299
past monica pier by automatic appear to

00:17:57,880 --> 00:18:04,240
be apps and apart actually it's a crack

00:18:01,299 --> 00:18:06,910
leader is the in the same pier but if it

00:18:04,240 --> 00:18:09,190
is different we apps and at the

00:18:06,910 --> 00:18:11,470
collection this issue coveted collection

00:18:09,190 --> 00:18:13,510
model and I would like took you out

00:18:11,470 --> 00:18:17,440
there for some problem starts to begin

00:18:13,510 --> 00:18:20,650
in this model in this kind of model and

00:18:17,440 --> 00:18:23,110
the spotted topic here

00:18:20,650 --> 00:18:25,240
a father topic here is a raw sinking or

00:18:23,110 --> 00:18:28,840
the possible model for candy networking

00:18:25,240 --> 00:18:31,059
with a manic obvious offload support

00:18:28,840 --> 00:18:34,750
it's a row very raw sinking and give out

00:18:31,059 --> 00:18:37,090
two models here and this two models here

00:18:34,750 --> 00:18:40,480
it's for the first model we have a

00:18:37,090 --> 00:18:43,090
always preach here always bridge gear we

00:18:40,480 --> 00:18:46,600
provided a always bridge we attraction

00:18:43,090 --> 00:18:48,669
to the pot with ve th power part for the

00:18:46,600 --> 00:18:51,940
collection from this always bridge in

00:18:48,669 --> 00:18:54,760
the host in the user space we uses

00:18:51,940 --> 00:18:57,490
primary interface or virtual function y

00:18:54,760 --> 00:18:59,530
PF o VF interfaces to connect to the

00:18:57,490 --> 00:19:03,610
virtual switch of la Vida which is

00:18:59,530 --> 00:19:06,610
offloaded in this manic so and for this

00:19:03,610 --> 00:19:11,890
topic we for on the control plane we

00:19:06,610 --> 00:19:13,809
need to provide some AI agent collection

00:19:11,890 --> 00:19:16,150
are pitching the user space and the

00:19:13,809 --> 00:19:18,700
kernel space here we use the oven Coby

00:19:16,150 --> 00:19:21,840
on Cooper that solution here but this

00:19:18,700 --> 00:19:25,390
solution is actually be transferred to

00:19:21,840 --> 00:19:28,450
the front user space to the Kuno from on

00:19:25,390 --> 00:19:32,200
to the Kuno from the oven cubed x to the

00:19:28,450 --> 00:19:34,809
kernel to the semantics of a a communist

00:19:32,200 --> 00:19:39,790
agent so it's a partial obvious flow

00:19:34,809 --> 00:19:41,910
upload photo motor - it's a obvious flow

00:19:39,790 --> 00:19:44,799
totally upload the model which is used

00:19:41,910 --> 00:19:46,390
which is totally uploaded choose a

00:19:44,799 --> 00:19:48,720
container which has bad bachelor

00:19:46,390 --> 00:19:51,520
performances in their model one and

00:19:48,720 --> 00:19:53,590
taste from the control plane its

00:19:51,520 --> 00:19:55,570
architecture is almost the same but as

00:19:53,590 --> 00:19:59,320
obvious more high performance we speak

00:19:55,570 --> 00:20:01,690
which is because the part is collected a

00:19:59,320 --> 00:20:03,490
physical issue they always are we

00:20:01,690 --> 00:20:08,250
which offer which is off located in the

00:20:03,490 --> 00:20:11,950
demonic five minutes yes

00:20:08,250 --> 00:20:14,919
okay this I would like to kill out a

00:20:11,950 --> 00:20:17,559
initial performs tasks for the catechol

00:20:14,919 --> 00:20:19,149
and for the OPM covenants which is test

00:20:17,559 --> 00:20:21,850
either in the single English single I'm

00:20:19,149 --> 00:20:24,940
so worth and for this just picture give

00:20:21,850 --> 00:20:27,340
out they perform stats for the initial

00:20:24,940 --> 00:20:27,909
connect positive pod and no default

00:20:27,340 --> 00:20:30,490
kabooms

00:20:27,909 --> 00:20:33,129
you can check it later from this slide

00:20:30,490 --> 00:20:35,440
and actually we have dominant for home

00:20:33,129 --> 00:20:38,440
stats to be savvy see you now and the

00:20:35,440 --> 00:20:40,690
solution is direct access and in your

00:20:38,440 --> 00:20:44,919
single host and they're across different

00:20:40,690 --> 00:20:46,600
house across different host and this is

00:20:44,919 --> 00:20:50,740
the perform stat initial performance

00:20:46,600 --> 00:20:52,389
test which is for the Silv interface of

00:20:50,740 --> 00:20:57,309
in the same house the attraction Vista

00:20:52,389 --> 00:21:00,129
factory with the PS 225 we apps and in

00:20:57,309 --> 00:21:02,110
the second wise that performs tasks for

00:21:00,129 --> 00:21:06,759
the SR interfaces into hosts into

00:21:02,110 --> 00:21:11,049
different host built a PS to try and 25

00:21:06,759 --> 00:21:14,320
years and we can see that now and the

00:21:11,049 --> 00:21:18,100
collections of crack is near to Dale and

00:21:14,320 --> 00:21:20,470
rate of the interfaces and for future

00:21:18,100 --> 00:21:22,659
work I would like to say that the

00:21:20,470 --> 00:21:25,299
performance evaluation tuning fork Erica

00:21:22,659 --> 00:21:27,580
seeing and experiencing of a supportive

00:21:25,299 --> 00:21:30,279
father noted for cases on arm platform

00:21:27,580 --> 00:21:32,559
many people crossed out the possible

00:21:30,279 --> 00:21:35,679
shooting permits are given here such as

00:21:32,559 --> 00:21:38,740
empty use such acts TX or a PSR BFS and

00:21:35,679 --> 00:21:42,220
some of the features and it will

00:21:38,740 --> 00:21:44,559
actually integrated service match with -

00:21:42,220 --> 00:21:48,639
seeing eyes such as Syrian proxy Chilean

00:21:44,559 --> 00:21:51,759
proxy with my with envoy waste points

00:21:48,639 --> 00:21:53,289
envoy and we would like to investigate

00:21:51,759 --> 00:21:54,940
the father typically incorporate you to

00:21:53,289 --> 00:21:57,100
continue our solutions and use this

00:21:54,940 --> 00:21:58,960
model and a second a father seriously is

00:21:57,100 --> 00:22:00,879
and the Muslim cannot actually work on

00:21:58,960 --> 00:22:03,190
this manageable phone container a queen

00:22:00,879 --> 00:22:09,149
for container at working with obvious

00:22:03,190 --> 00:22:09,149

YouTube URL: https://www.youtube.com/watch?v=8flDvr2km4A


