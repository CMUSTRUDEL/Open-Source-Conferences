Title: LAS16-200K2:  Keynote:  Corporate Open Source Fail – Sarah Sharp
Publication date: 2016-09-30
Playlist: Linaro Connect Las Vegas 2016
Description: 
	LAS16-200K2: Corporate Open Source Fail – Sarah Sharp
Speakers: Sarah Sharp
Date: September 27, 2016

★ Session Description ★
Title: Corporate Open Source Fail

What makes companies with good intentions fail so miserably at open source? How can we (as engineers and managers) influence our bosses to “do the right thing”?

“We’ll just make a new open source community.”
“You can fix up that code later.”
“It’s taking too long to get this upstream.”

Many companies have good intentions of being productive open source citizens. However, those good intentions often get thrown under the bus when product deadlines or legal issues loom. This talk will walk through a series of common corporate open source pitfalls and the executive and manager thinking behind those decisions. We’ll discuss ways engineers and managers can develop empathy for their corporate overlord’s needs, in order to influence their strategies around open source.

Bio

Sarah is the founder of Otter Tech, a consulting company offering open source training, software development, and diversity consulting. http://otter.technology

Sarah Sharp is a Linux and open source developer, and has been running Debian-based Linux systems since 2003. She was a Linux kernel developer from 2006 to 2013, and is the original author of the Linux USB 3.0 xHCI host controller driver.Sarah is also a co-coordinator for Outreachy, a paid internship program for increasing diversity in open source programs. Applications are open to women (cis and trans), trans men, and genderqueer people, and United States residents of any gender who are Black/African American, Hispanic/Latin@, American Indian, Alaska Native, Native Hawaiian, or Pacific Islander.

★ Resources ★
Etherpad: pad.linaro.org/p/las16-200k2
Presentations & Videos: http://connect.linaro.org/resource/las16/las16-200k2/

★ Event Details ★
Linaro Connect Las Vegas 2016 – #LAS16
September 26-30, 2016
http://www.linaro.org
http://connect.linaro.org
Captions: 
	00:00:00,560 --> 00:00:08,730
good morning can everyone hear me great

00:00:05,009 --> 00:00:11,340
so I'm here to talk about the many many

00:00:08,730 --> 00:00:14,969
pitfalls that happen when corporations

00:00:11,340 --> 00:00:16,949
get involved into open source and as

00:00:14,969 --> 00:00:19,100
someone who works a lot with newcomers

00:00:16,949 --> 00:00:22,020
to open source I often get the question

00:00:19,100 --> 00:00:24,210
why would corporations want to get

00:00:22,020 --> 00:00:28,189
involved in open source why would they

00:00:24,210 --> 00:00:32,730
want to give software away for free um

00:00:28,189 --> 00:00:35,430
and because corporations all about money

00:00:32,730 --> 00:00:37,710
right why would they want to give

00:00:35,430 --> 00:00:39,690
software away for free and the reasons

00:00:37,710 --> 00:00:42,510
that corporations get involved in open

00:00:39,690 --> 00:00:44,910
source is sometimes because it's a

00:00:42,510 --> 00:00:47,309
competitive advantage maybe their

00:00:44,910 --> 00:00:49,910
competitor doesn't do open source and it

00:00:47,309 --> 00:00:52,379
allows their customers to be able to

00:00:49,910 --> 00:00:55,050
debug their boards and debug their

00:00:52,379 --> 00:00:56,520
software easier if they have access to

00:00:55,050 --> 00:00:59,280
the source code and can modify it and

00:00:56,520 --> 00:01:02,489
share it and there was a lot of talk

00:00:59,280 --> 00:01:05,970
yesterday about how companies

00:01:02,489 --> 00:01:09,060
particularly in the arm and embedded and

00:01:05,970 --> 00:01:10,710
server space have to band together so

00:01:09,060 --> 00:01:12,869
that they can create open source

00:01:10,710 --> 00:01:14,640
software and create a common shared

00:01:12,869 --> 00:01:17,009
resource so they don't have to keep

00:01:14,640 --> 00:01:21,000
writing the same code and so that they

00:01:17,009 --> 00:01:23,369
can have work together to enable an

00:01:21,000 --> 00:01:25,830
ecosystem and then differentiate

00:01:23,369 --> 00:01:28,619
themselves upon it and and take that

00:01:25,830 --> 00:01:30,390
competitive advantage oftentimes people

00:01:28,619 --> 00:01:32,159
get into open source because they've not

00:01:30,390 --> 00:01:33,590
because they want to sell software but

00:01:32,159 --> 00:01:35,880
because they want to sell something

00:01:33,590 --> 00:01:38,579
related to it they want to sell hardware

00:01:35,880 --> 00:01:43,259
or services or they want to be able to

00:01:38,579 --> 00:01:46,049
analyze the data now because

00:01:43,259 --> 00:01:49,049
corporations get involved in open source

00:01:46,049 --> 00:01:51,020
in the sort of backwards manner of

00:01:49,049 --> 00:01:55,939
wanting to make money off of open source

00:01:51,020 --> 00:01:59,820
there is often a bunch of pitfalls that

00:01:55,939 --> 00:02:02,790
they actually fall into when they first

00:01:59,820 --> 00:02:04,979
get involved in open source and a lot of

00:02:02,790 --> 00:02:06,570
you in the audience are probably open

00:02:04,979 --> 00:02:09,810
source developers have probably been

00:02:06,570 --> 00:02:12,340
around for a long time and you see these

00:02:09,810 --> 00:02:14,560
new companies come in to open sores and

00:02:12,340 --> 00:02:16,840
make these same mistakes again and again

00:02:14,560 --> 00:02:18,879
and again so a lot of this talk is

00:02:16,840 --> 00:02:21,459
probably going to be familiar to you but

00:02:18,879 --> 00:02:25,269
I think it's interesting to look at the

00:02:21,459 --> 00:02:27,550
lies of why corporations make common

00:02:25,269 --> 00:02:30,370
open-source mistakes when they're

00:02:27,550 --> 00:02:32,319
getting involved and then see how we can

00:02:30,370 --> 00:02:36,220
sort of guide them on their path be a

00:02:32,319 --> 00:02:41,280
more productive open-source citizen so

00:02:36,220 --> 00:02:45,610
I'm going to tell you a lot of different

00:02:41,280 --> 00:02:48,579
common pitfalls and you may be able to

00:02:45,610 --> 00:02:50,590
change your company culture a little bit

00:02:48,579 --> 00:02:53,950
to make it easier for it them to

00:02:50,590 --> 00:02:57,099
participate in open source but in the

00:02:53,950 --> 00:02:58,660
end a lot of people you tell them and

00:02:57,099 --> 00:03:01,000
you give them advice and you say we'll

00:02:58,660 --> 00:03:03,670
do it this way but because they're so

00:03:01,000 --> 00:03:07,269
motivated about getting products out the

00:03:03,670 --> 00:03:09,700
door it may take a while and may take a

00:03:07,269 --> 00:03:11,799
couple times of getting burned before

00:03:09,700 --> 00:03:16,090
they actually start to listen to your

00:03:11,799 --> 00:03:20,109
advice because process is scar tissue

00:03:16,090 --> 00:03:22,840
from past failures you only implement

00:03:20,109 --> 00:03:25,090
process you only implement change inside

00:03:22,840 --> 00:03:29,920
your company because something happened

00:03:25,090 --> 00:03:32,530
and so this talk will give you some some

00:03:29,920 --> 00:03:35,440
things to start those conversations but

00:03:32,530 --> 00:03:39,340
often times until companies get burned

00:03:35,440 --> 00:03:41,169
they won't take your advice so I'm going

00:03:39,340 --> 00:03:45,069
to talk about a bunch of different

00:03:41,169 --> 00:03:48,430
open-source values and then how

00:03:45,069 --> 00:03:52,930
corporations tend to kind of trample on

00:03:48,430 --> 00:03:54,639
those values sometimes and how we as

00:03:52,930 --> 00:03:58,180
open source developers and open source

00:03:54,639 --> 00:04:00,430
engineers can try to get our companies

00:03:58,180 --> 00:04:02,079
to be better open source citizens so the

00:04:00,430 --> 00:04:05,410
first open source value is fairly

00:04:02,079 --> 00:04:08,200
obvious open source means you have to be

00:04:05,410 --> 00:04:10,569
transparent and some companies when they

00:04:08,200 --> 00:04:14,290
start out in open source are terrified

00:04:10,569 --> 00:04:17,380
of working in public what do you mean

00:04:14,290 --> 00:04:19,930
that everyone can see my code and I have

00:04:17,380 --> 00:04:24,880
to like ask questions that people may

00:04:19,930 --> 00:04:25,810
think our are obvious so people are very

00:04:24,880 --> 00:04:27,730
much

00:04:25,810 --> 00:04:30,880
afraid of open source there there's

00:04:27,730 --> 00:04:35,760
often a fear when they get into open

00:04:30,880 --> 00:04:41,230
source about putting the code out and

00:04:35,760 --> 00:04:44,830
having their IP potentially exposed and

00:04:41,230 --> 00:04:46,450
so a lot of companies are afraid to go

00:04:44,830 --> 00:04:49,389
into open source because they're afraid

00:04:46,450 --> 00:04:52,780
that people will learn their deepest

00:04:49,389 --> 00:04:56,680
trade secrets that they will you know

00:04:52,780 --> 00:04:59,110
have someone go and find bugs in their

00:04:56,680 --> 00:05:03,600
hardware bugs in their software and so a

00:04:59,110 --> 00:05:07,270
lot of companies attempt to hide their

00:05:03,600 --> 00:05:12,820
code sometimes they hide it in binary

00:05:07,270 --> 00:05:16,870
blobs sometimes they have open open code

00:05:12,820 --> 00:05:20,380
but they have a license that says oh you

00:05:16,870 --> 00:05:23,440
can only run it on this firmware and

00:05:20,380 --> 00:05:26,770
there's a lot of different ways that

00:05:23,440 --> 00:05:29,770
people try to hide data and sometimes

00:05:26,770 --> 00:05:32,520
it's because there's FCC regulations and

00:05:29,770 --> 00:05:36,280
you can't allow people to modify things

00:05:32,520 --> 00:05:38,800
but a lot of the times when a company is

00:05:36,280 --> 00:05:41,080
afraid to get into open source and they

00:05:38,800 --> 00:05:43,150
want to close off their firmware or

00:05:41,080 --> 00:05:46,260
their software it's because they're

00:05:43,150 --> 00:05:49,600
afraid of having their secrets revealed

00:05:46,260 --> 00:05:52,300
and the thing is is that sometimes it's

00:05:49,600 --> 00:05:54,340
easy to find those secrets people

00:05:52,300 --> 00:05:56,800
reverse-engineer things every day they

00:05:54,340 --> 00:05:58,450
use bus tracers if you can get into the

00:05:56,800 --> 00:06:01,530
hardware you can actually start looking

00:05:58,450 --> 00:06:06,070
at the signaling you can go and

00:06:01,530 --> 00:06:08,889
disassemble a binary blob and see the

00:06:06,070 --> 00:06:10,930
symbols that are inside of it but good

00:06:08,889 --> 00:06:12,669
luck explaining this to a manager at a

00:06:10,930 --> 00:06:15,720
company that's never done open source

00:06:12,669 --> 00:06:17,770
before so in these sorts of situations

00:06:15,720 --> 00:06:21,250
where there's someone that's very much

00:06:17,770 --> 00:06:23,940
afraid of getting into open source I try

00:06:21,250 --> 00:06:27,070
to use the Socratic questioning method

00:06:23,940 --> 00:06:29,410
which is basically asking questions and

00:06:27,070 --> 00:06:31,000
trying to figure out for the key

00:06:29,410 --> 00:06:33,550
stakeholders who are making the

00:06:31,000 --> 00:06:35,890
decisions about what to open source and

00:06:33,550 --> 00:06:38,520
what not to open source so I will ask

00:06:35,890 --> 00:06:42,150
questions like are there

00:06:38,520 --> 00:06:45,800
it's that we need to protect an RRP what

00:06:42,150 --> 00:06:48,780
would be the business impact if someone

00:06:45,800 --> 00:06:51,870
reverse-engineered r.i.p would there be

00:06:48,780 --> 00:06:54,629
a more competitive advantage for us if

00:06:51,870 --> 00:06:57,690
we could work together with other

00:06:54,629 --> 00:07:01,500
companies to improve our firm where are

00:06:57,690 --> 00:07:03,270
our software or hardware and a lot of

00:07:01,500 --> 00:07:05,460
the times this also involves working

00:07:03,270 --> 00:07:08,190
with your legal department and the legal

00:07:05,460 --> 00:07:11,909
department is very good about giving the

00:07:08,190 --> 00:07:13,560
scenarios and what-ifs and so at that at

00:07:11,909 --> 00:07:15,960
that point when working with your legal

00:07:13,560 --> 00:07:19,530
department it's you you should either

00:07:15,960 --> 00:07:22,259
have a legal department that's the nose

00:07:19,530 --> 00:07:24,990
open source or you're going to have to

00:07:22,259 --> 00:07:27,289
push back a lot against the fun that

00:07:24,990 --> 00:07:29,780
will come out of your legal department

00:07:27,289 --> 00:07:34,050
another open source development of

00:07:29,780 --> 00:07:37,069
another open source value is that open

00:07:34,050 --> 00:07:41,280
source developers release frequently

00:07:37,069 --> 00:07:44,280
they oftentimes have a bleeding edge

00:07:41,280 --> 00:07:46,110
branch but then sometimes they also have

00:07:44,280 --> 00:07:48,930
a stable branch while they're working on

00:07:46,110 --> 00:07:52,259
the next development branch and what

00:07:48,930 --> 00:07:55,409
this means is that corporations often

00:07:52,259 --> 00:07:57,630
get behind when they're trying to use

00:07:55,409 --> 00:08:00,240
open source especially when they're

00:07:57,630 --> 00:08:04,409
starting out in open source there's this

00:08:00,240 --> 00:08:08,130
a sort of myth that they can just fork

00:08:04,409 --> 00:08:10,370
the code and run with it and use it for

00:08:08,130 --> 00:08:15,180
three years and they don't think about

00:08:10,370 --> 00:08:17,729
updating it against upstream um and then

00:08:15,180 --> 00:08:20,400
they'll also go and they'll build upon

00:08:17,729 --> 00:08:23,039
that code you know they'll say oh well

00:08:20,400 --> 00:08:24,569
you know we've got a board and and it

00:08:23,039 --> 00:08:27,599
needs you know a couple patches against

00:08:24,569 --> 00:08:29,580
the colonel that's fine our customers

00:08:27,599 --> 00:08:32,300
can just use our custom kernel and it

00:08:29,580 --> 00:08:36,180
will be fine but what they don't realize

00:08:32,300 --> 00:08:39,270
is that when every single hardware

00:08:36,180 --> 00:08:41,459
vendor thinks that way then it piles a

00:08:39,270 --> 00:08:44,279
mountain of technical debt onto that on

00:08:41,459 --> 00:08:46,620
to that customer and it means that it's

00:08:44,279 --> 00:08:49,440
harder to update it's harder to get a

00:08:46,620 --> 00:08:51,840
secure system and it's harder to

00:08:49,440 --> 00:08:55,680
maintain those system and it costs you

00:08:51,840 --> 00:08:58,110
our customers time and money to do that

00:08:55,680 --> 00:09:01,230
and so it takes a long time for

00:08:58,110 --> 00:09:04,410
companies to figure out no I can't just

00:09:01,230 --> 00:09:07,220
fork this open source code and modify it

00:09:04,410 --> 00:09:13,920
I also need to get my changes upstream

00:09:07,220 --> 00:09:17,520
and so when talking to your your bosses

00:09:13,920 --> 00:09:20,190
your managers about the technical debt

00:09:17,520 --> 00:09:21,840
that builds up when you fork code and

00:09:20,190 --> 00:09:25,320
then you don't get those changes back

00:09:21,840 --> 00:09:29,340
upstream unfortunately you have to have

00:09:25,320 --> 00:09:32,040
a long-term strategic conversation with

00:09:29,340 --> 00:09:33,570
them because in the short term your

00:09:32,040 --> 00:09:35,640
bosses are just interested in getting

00:09:33,570 --> 00:09:37,110
the product out the door they don't care

00:09:35,640 --> 00:09:39,480
about you trying to get your code

00:09:37,110 --> 00:09:41,070
upstream because they're not really

00:09:39,480 --> 00:09:44,430
looking at that long term

00:09:41,070 --> 00:09:47,040
maintainability but if you work in the

00:09:44,430 --> 00:09:48,930
healthcare sector and the IOT sector

00:09:47,040 --> 00:09:50,640
where they're your customers are going

00:09:48,930 --> 00:09:54,180
to have to build a system that's going

00:09:50,640 --> 00:09:58,170
to last five years ten years maybe even

00:09:54,180 --> 00:10:01,020
longer if it's in someone you need to

00:09:58,170 --> 00:10:03,480
think about how do you make it easy for

00:10:01,020 --> 00:10:05,670
your customers to maintain those systems

00:10:03,480 --> 00:10:08,280
and so you need to have a conversation

00:10:05,670 --> 00:10:10,020
that would say okay it's going to take

00:10:08,280 --> 00:10:12,780
me X amount of hours to get this

00:10:10,020 --> 00:10:14,640
upstream but then we will be able to

00:10:12,780 --> 00:10:17,040
provide more secure updates to our

00:10:14,640 --> 00:10:20,310
customers they'll be able to rebase

00:10:17,040 --> 00:10:24,510
their code and continue on and we will

00:10:20,310 --> 00:10:28,680
save X amount of Engineers time trying

00:10:24,510 --> 00:10:33,840
to port a rebase our changes against the

00:10:28,680 --> 00:10:36,540
upstream bug fixes in security fixes so

00:10:33,840 --> 00:10:38,970
once you decide hey I really need to

00:10:36,540 --> 00:10:42,090
start getting code upstream there's a

00:10:38,970 --> 00:10:46,590
lot of companies that get involved in

00:10:42,090 --> 00:10:48,770
open source and they get involved and

00:10:46,590 --> 00:10:51,630
one of the open source values is

00:10:48,770 --> 00:10:53,070
collaboration well when companies first

00:10:51,630 --> 00:10:56,100
start to get involved in open source

00:10:53,070 --> 00:10:59,280
they often make a lot of you know nobody

00:10:56,100 --> 00:11:02,250
mistakes about getting involved and one

00:10:59,280 --> 00:11:05,640
of those mistakes is that they go and

00:11:02,250 --> 00:11:07,080
they don't try to collaborate they go in

00:11:05,640 --> 00:11:10,110
download the code and they make their

00:11:07,080 --> 00:11:11,760
changes and they try to make those

00:11:10,110 --> 00:11:13,950
changes perfect because they're afraid

00:11:11,760 --> 00:11:17,190
of working in the public they're afraid

00:11:13,950 --> 00:11:19,320
of having their code scrutinized and so

00:11:17,190 --> 00:11:21,570
they'll work often it off in a corner

00:11:19,320 --> 00:11:23,480
they'll do their changes they'll polish

00:11:21,570 --> 00:11:27,150
them up and they'll get them upstream

00:11:23,480 --> 00:11:30,480
try to get them upstream sometimes also

00:11:27,150 --> 00:11:33,540
people it's just fun to go and hack on

00:11:30,480 --> 00:11:35,340
something right or maybe you're trying

00:11:33,540 --> 00:11:38,910
to get a product out the door and you're

00:11:35,340 --> 00:11:40,590
throwing in you know em sleeps all over

00:11:38,910 --> 00:11:42,540
the place because you just want it to

00:11:40,590 --> 00:11:45,720
work and then you have to go clean that

00:11:42,540 --> 00:11:48,960
up and the thing is is that until you

00:11:45,720 --> 00:11:50,940
submit your code until you start

00:11:48,960 --> 00:11:53,820
collaborating with an open source

00:11:50,940 --> 00:11:56,190
community you don't know whether your

00:11:53,820 --> 00:12:01,410
code is perfection or if you're just

00:11:56,190 --> 00:12:03,330
polishing turds so until you go and

00:12:01,410 --> 00:12:06,990
actually submit your code you don't know

00:12:03,330 --> 00:12:08,970
and then once you do oftentimes the

00:12:06,990 --> 00:12:11,640
companies that first start get started

00:12:08,970 --> 00:12:13,290
in open source you make those

00:12:11,640 --> 00:12:15,840
contributions you don't know the

00:12:13,290 --> 00:12:18,630
community norms you don't know what the

00:12:15,840 --> 00:12:20,610
community sees as maintainable and so

00:12:18,630 --> 00:12:24,800
your first submissions into open source

00:12:20,610 --> 00:12:28,590
are going to require some rewrites um

00:12:24,800 --> 00:12:30,870
but what if instead you started sooner

00:12:28,590 --> 00:12:33,780
what if you started collaborating and

00:12:30,870 --> 00:12:35,820
talking and conversing with the open

00:12:33,780 --> 00:12:38,670
source community watching the mailing

00:12:35,820 --> 00:12:44,120
list seeing whats the code what's bad

00:12:38,670 --> 00:12:47,970
code before you start to get involved

00:12:44,120 --> 00:12:51,990
another open source value as I mentioned

00:12:47,970 --> 00:12:54,150
is that developers define the product

00:12:51,990 --> 00:12:57,060
direction they also define what's

00:12:54,150 --> 00:12:59,730
maintainable what new features they'd

00:12:57,060 --> 00:13:04,050
like to see and how those features

00:12:59,730 --> 00:13:07,530
should be implemented and if you come

00:13:04,050 --> 00:13:12,440
from a company where there's a sort of

00:13:07,530 --> 00:13:15,210
top-down waterfall model where a

00:13:12,440 --> 00:13:17,520
marketing engineer says hey we need this

00:13:15,210 --> 00:13:20,070
new feature you know

00:13:17,520 --> 00:13:21,630
6lowpan over bluetooth is really popular

00:13:20,070 --> 00:13:24,390
now let's make sure that our board

00:13:21,630 --> 00:13:25,860
supports that and a bunch of architects

00:13:24,390 --> 00:13:27,600
get involved and they do some white

00:13:25,860 --> 00:13:29,850
boarding and decide how to do something

00:13:27,600 --> 00:13:32,280
maybe gets passed off to junior

00:13:29,850 --> 00:13:34,320
developer to actually code and then you

00:13:32,280 --> 00:13:38,160
package it up and release it there's

00:13:34,320 --> 00:13:40,230
this waterfall model where everywhere

00:13:38,160 --> 00:13:44,580
there are different people involved in

00:13:40,230 --> 00:13:46,290
defining the product direction then the

00:13:44,580 --> 00:13:49,530
people who are actually doing the coding

00:13:46,290 --> 00:13:51,810
and so when a lot of companies first get

00:13:49,530 --> 00:13:55,080
started in open source they treat it as

00:13:51,810 --> 00:13:58,110
if they need to do the features do the

00:13:55,080 --> 00:14:01,320
planning do the coding and then the open

00:13:58,110 --> 00:14:03,900
source community is just there to check

00:14:01,320 --> 00:14:07,980
a tick box and say yes let's merge this

00:14:03,900 --> 00:14:12,630
they treat open source like a release

00:14:07,980 --> 00:14:14,910
manager they go and they make their code

00:14:12,630 --> 00:14:18,330
and they try to get it perfect and then

00:14:14,910 --> 00:14:21,870
they submitted upstream when really they

00:14:18,330 --> 00:14:25,980
need to go and get open source involved

00:14:21,870 --> 00:14:29,490
much much sooner you need to go and have

00:14:25,980 --> 00:14:31,530
conversations about new features with

00:14:29,490 --> 00:14:33,390
open source communities before you start

00:14:31,530 --> 00:14:36,540
writing any code at all because it will

00:14:33,390 --> 00:14:40,680
save you time it will save you rewrites

00:14:36,540 --> 00:14:43,080
if you can spend an hour on IRC with a

00:14:40,680 --> 00:14:45,510
core developer hashing out how something

00:14:43,080 --> 00:14:47,760
should be implemented it will save you

00:14:45,510 --> 00:14:49,200
six hours of rewrites so this is

00:14:47,760 --> 00:14:51,870
something that a lot of companies that

00:14:49,200 --> 00:14:57,000
are new to open source don't necessarily

00:14:51,870 --> 00:15:00,360
understand and speaking of code and

00:14:57,000 --> 00:15:02,250
releasing products a lot of people don't

00:15:00,360 --> 00:15:05,430
realize that open source projects have

00:15:02,250 --> 00:15:08,880
release schedules they lot of projects

00:15:05,430 --> 00:15:12,480
release every blue moon every year but a

00:15:08,880 --> 00:15:14,910
lot of the projects that are used in

00:15:12,480 --> 00:15:17,550
products actually have a release

00:15:14,910 --> 00:15:19,980
schedule it maybe six months it may be

00:15:17,550 --> 00:15:24,180
three every three months but they'll

00:15:19,980 --> 00:15:25,680
often have code freeze deadlines so if

00:15:24,180 --> 00:15:27,440
you are trying to target a particular

00:15:25,680 --> 00:15:30,840
release you need to get your code

00:15:27,440 --> 00:15:33,840
reviewed much much sooner than the

00:15:30,840 --> 00:15:35,910
actual release schedule and a lot of

00:15:33,840 --> 00:15:37,860
companies that are get involved in open

00:15:35,910 --> 00:15:41,760
source and start to build their strategy

00:15:37,860 --> 00:15:43,710
around having their source in upstream a

00:15:41,760 --> 00:15:46,140
lot of their product managers don't

00:15:43,710 --> 00:15:48,510
understand this and so they will come to

00:15:46,140 --> 00:15:49,950
engineers and say oh my god we need to

00:15:48,510 --> 00:15:53,070
release right now because they think

00:15:49,950 --> 00:15:56,880
that releasing the code publishing the

00:15:53,070 --> 00:15:58,740
code makes it done and this is one of my

00:15:56,880 --> 00:16:01,560
personal pet peeves it's not done until

00:15:58,740 --> 00:16:04,320
it's merged it's not done and even then

00:16:01,560 --> 00:16:07,460
it's not done until that release is out

00:16:04,320 --> 00:16:10,170
until that final stable release is out

00:16:07,460 --> 00:16:13,320
but try but so you need to try to

00:16:10,170 --> 00:16:16,440
explain to product managers and a lot of

00:16:13,320 --> 00:16:20,790
them don't understand that their fire

00:16:16,440 --> 00:16:25,200
their emergency is not the open source

00:16:20,790 --> 00:16:29,070
communities concern so the open source

00:16:25,200 --> 00:16:32,910
communities at prides itself on trying

00:16:29,070 --> 00:16:35,820
to be vendor agnostic and this is

00:16:32,910 --> 00:16:38,610
because the truth of the matter is a lot

00:16:35,820 --> 00:16:39,930
of open source developers know that

00:16:38,610 --> 00:16:43,410
they're going to be in this industry for

00:16:39,930 --> 00:16:47,250
a very long time and they may not work

00:16:43,410 --> 00:16:50,460
for one particular company for their

00:16:47,250 --> 00:16:51,900
whole career and so because they are

00:16:50,460 --> 00:16:53,940
collaborating with many different

00:16:51,900 --> 00:16:57,750
engineers for many different companies

00:16:53,940 --> 00:17:02,070
they can't be seeing as favoring one

00:16:57,750 --> 00:17:05,520
vendor over another so even if a company

00:17:02,070 --> 00:17:08,430
has a maintainer that is working on a

00:17:05,520 --> 00:17:10,709
key product in open source that

00:17:08,430 --> 00:17:14,160
maintainer still has to be very careful

00:17:10,709 --> 00:17:17,190
not to be seen as favoring their company

00:17:14,160 --> 00:17:19,140
over others when other companies are you

00:17:17,190 --> 00:17:21,810
know having problems with their features

00:17:19,140 --> 00:17:24,420
and your manager is trying to get you to

00:17:21,810 --> 00:17:26,820
push that feature you maintain errs will

00:17:24,420 --> 00:17:29,310
often push back and say no it's too

00:17:26,820 --> 00:17:31,950
buggy I can't get it in this release and

00:17:29,310 --> 00:17:35,700
it's very hard for managers to

00:17:31,950 --> 00:17:37,650
understand that so when you first get

00:17:35,700 --> 00:17:39,510
started in open source and you make open

00:17:37,650 --> 00:17:43,260
sores a part of your product strategy it

00:17:39,510 --> 00:17:44,130
is important to talk with your PMS talk

00:17:43,260 --> 00:17:46,950
with your manager

00:17:44,130 --> 00:17:50,520
are about open source release schedules

00:17:46,950 --> 00:17:52,230
for example I have here one example of

00:17:50,520 --> 00:17:55,350
trying to make sure that your driver

00:17:52,230 --> 00:17:58,200
gets into the aboon to 16 for release

00:17:55,350 --> 00:18:00,540
what a lot of people don't realize is

00:17:58,200 --> 00:18:03,990
that you need to figure out you know

00:18:00,540 --> 00:18:08,940
which kernel version of that release is

00:18:03,990 --> 00:18:10,500
going to be going to use and then you

00:18:08,940 --> 00:18:13,230
have to work your way backwards and

00:18:10,500 --> 00:18:15,420
figure out okay when do I have to get my

00:18:13,230 --> 00:18:17,430
coat in for review so that I can get it

00:18:15,420 --> 00:18:21,510
in before the code freeze deadline and

00:18:17,430 --> 00:18:24,060
then it will be merged into the Linux

00:18:21,510 --> 00:18:26,970
kernel but then there's a stabilization

00:18:24,060 --> 00:18:29,730
period and then there'll be a release so

00:18:26,970 --> 00:18:31,620
in the end it's nine months to try to

00:18:29,730 --> 00:18:34,440
get a driver in to target a particular

00:18:31,620 --> 00:18:37,020
linux distribution and that is something

00:18:34,440 --> 00:18:40,850
that your bosses and managers and also

00:18:37,020 --> 00:18:43,440
your top-level CEOs need to understand

00:18:40,850 --> 00:18:47,430
and speaking of getting your

00:18:43,440 --> 00:18:49,830
contributions in one of the key things

00:18:47,430 --> 00:18:53,880
about open source is that they accept

00:18:49,830 --> 00:18:56,670
contributions from anyone and this is a

00:18:53,880 --> 00:18:58,980
very important point because open source

00:18:56,670 --> 00:19:03,260
is comprised not just of companies but

00:18:58,980 --> 00:19:07,140
have also academics hobbyists students

00:19:03,260 --> 00:19:09,860
and so anyone should be able to

00:19:07,140 --> 00:19:13,980
contribute to an open source project

00:19:09,860 --> 00:19:18,120
however there is an increasing trend of

00:19:13,980 --> 00:19:21,750
companies that want to own open source

00:19:18,120 --> 00:19:24,210
projects maybe it's because they want to

00:19:21,750 --> 00:19:26,840
get together with some partners and try

00:19:24,210 --> 00:19:29,280
to collaborate on a strategic goal and

00:19:26,840 --> 00:19:32,610
maybe they decide to form a consortium

00:19:29,280 --> 00:19:35,220
and some of those consortiums have very

00:19:32,610 --> 00:19:38,580
interesting governing rules which means

00:19:35,220 --> 00:19:42,200
that the Board of Governors that those

00:19:38,580 --> 00:19:45,480
people pay to be there gets to decide

00:19:42,200 --> 00:19:48,200
the project direction which means that

00:19:45,480 --> 00:19:51,090
the open source developers themselves

00:19:48,200 --> 00:19:54,720
may not get to be involved in those

00:19:51,090 --> 00:19:56,200
decisions there are also very big

00:19:54,720 --> 00:19:59,380
companies that

00:19:56,200 --> 00:20:01,840
have open source projects they might

00:19:59,380 --> 00:20:03,429
occasionally expect a contribution back

00:20:01,840 --> 00:20:05,889
but most of the time they're just

00:20:03,429 --> 00:20:08,049
working internally on whatever the next

00:20:05,889 --> 00:20:11,080
releases and then they throw it over the

00:20:08,049 --> 00:20:13,950
wall these particular open source

00:20:11,080 --> 00:20:17,019
projects they use an open-source license

00:20:13,950 --> 00:20:19,690
but they're not open source and spirit

00:20:17,019 --> 00:20:23,380
and I tend to call these projects

00:20:19,690 --> 00:20:25,809
available source because the companies

00:20:23,380 --> 00:20:27,639
involved are using open-source licenses

00:20:25,809 --> 00:20:31,809
but they're not taking contributions

00:20:27,639 --> 00:20:34,889
back the source is available but I can't

00:20:31,809 --> 00:20:40,570
modify it and give my contributions back

00:20:34,889 --> 00:20:42,700
and a lot of companies this is something

00:20:40,570 --> 00:20:44,710
that they do and sometimes it works and

00:20:42,700 --> 00:20:46,929
sometimes it does it because when you

00:20:44,710 --> 00:20:49,600
get together with a group of people to

00:20:46,929 --> 00:20:52,600
work on a project and you don't allow

00:20:49,600 --> 00:20:56,440
contributions from anyone sometimes you

00:20:52,600 --> 00:20:58,240
get into a great big load maybe it means

00:20:56,440 --> 00:21:00,340
that you're missing marketing

00:20:58,240 --> 00:21:02,169
opportunities because you don't have the

00:21:00,340 --> 00:21:06,070
right different kinds of perspectives

00:21:02,169 --> 00:21:07,779
involved maybe it means your code is

00:21:06,070 --> 00:21:10,090
buggy because you simply don't have

00:21:07,779 --> 00:21:12,880
enough developers that want to

00:21:10,090 --> 00:21:17,409
contribute in your little walled garden

00:21:12,880 --> 00:21:19,809
and so until you actually get burned by

00:21:17,409 --> 00:21:22,809
some of these a lot of companies will

00:21:19,809 --> 00:21:28,389
continue to do this available source

00:21:22,809 --> 00:21:30,899
model so how do we as open-source

00:21:28,389 --> 00:21:34,690
citizens try to convince these companies

00:21:30,899 --> 00:21:37,299
to try to be better a better open source

00:21:34,690 --> 00:21:39,190
citizens and try to open their their

00:21:37,299 --> 00:21:42,279
code up and get more contributions and

00:21:39,190 --> 00:21:44,320
get more perspective and unfortunately

00:21:42,279 --> 00:21:46,360
if you are part of a company that's

00:21:44,320 --> 00:21:49,600
involved in these available source

00:21:46,360 --> 00:21:52,029
projects applying internal pressure

00:21:49,600 --> 00:21:54,309
doesn't help unless it comes from the

00:21:52,029 --> 00:21:57,130
top and usually the top people are are

00:21:54,309 --> 00:21:59,740
happy because they can own something and

00:21:57,130 --> 00:22:03,220
they can actually you know meet their

00:21:59,740 --> 00:22:04,600
quotas and and get credit and that's

00:22:03,220 --> 00:22:07,389
very important for people from the top

00:22:04,600 --> 00:22:09,400
so having pressure from the inside of a

00:22:07,389 --> 00:22:10,960
company to change

00:22:09,400 --> 00:22:12,220
is probably not going to work there

00:22:10,960 --> 00:22:16,150
needs to be some sort of outside

00:22:12,220 --> 00:22:19,030
pressure oftentimes the outside pressure

00:22:16,150 --> 00:22:22,600
is a product flops because there's not

00:22:19,030 --> 00:22:25,090
enough market for it or other companies

00:22:22,600 --> 00:22:27,240
go off and form their own group it's

00:22:25,090 --> 00:22:29,440
more open that they can collaborate in

00:22:27,240 --> 00:22:32,680
maybe they get a bunch of bad press

00:22:29,440 --> 00:22:34,660
because their customers have to deal

00:22:32,680 --> 00:22:36,700
with this code that's thrown over the

00:22:34,660 --> 00:22:38,980
wall and then then they can't get their

00:22:36,700 --> 00:22:40,900
contributions back and their products

00:22:38,980 --> 00:22:43,720
are buggy but until you have that

00:22:40,900 --> 00:22:45,910
outside pressure a lot of companies are

00:22:43,720 --> 00:22:51,100
going to continue this available source

00:22:45,910 --> 00:22:54,910
sort of model another open source value

00:22:51,100 --> 00:22:58,510
is that open source at least we say in

00:22:54,910 --> 00:23:00,730
name open source encourages the best

00:22:58,510 --> 00:23:07,360
technical solutions there's a lot of

00:23:00,730 --> 00:23:09,760
talk of a meritocracy and that the best

00:23:07,360 --> 00:23:12,060
source code wins oftentimes it's

00:23:09,760 --> 00:23:14,830
actually the person who's the most

00:23:12,060 --> 00:23:17,200
involved in the community that gets

00:23:14,830 --> 00:23:19,660
their solution it and it's oftentimes

00:23:17,200 --> 00:23:22,090
the person who is loudest in the

00:23:19,660 --> 00:23:23,680
conversation that is able to dominate

00:23:22,090 --> 00:23:27,550
the conversation that wins with their

00:23:23,680 --> 00:23:30,640
technical solution but and and of course

00:23:27,550 --> 00:23:33,400
everyone has a different opinion of what

00:23:30,640 --> 00:23:36,040
the best solution is and so sometimes

00:23:33,400 --> 00:23:38,410
when companies get involved in open

00:23:36,040 --> 00:23:41,590
source and they're frustrated with the

00:23:38,410 --> 00:23:46,320
current solution they say let's just

00:23:41,590 --> 00:23:48,670
make a new thing uh which means that

00:23:46,320 --> 00:23:50,710
especially if you're you're working in

00:23:48,670 --> 00:23:53,110
hardware or you're working in the

00:23:50,710 --> 00:23:56,110
embedded world or you're working in the

00:23:53,110 --> 00:24:00,400
standards world sometimes reinventing

00:23:56,110 --> 00:24:02,380
the wheel is not a good thing uh and so

00:24:00,400 --> 00:24:06,130
a lot of companies will go and they will

00:24:02,380 --> 00:24:07,810
try to make a new open source project

00:24:06,130 --> 00:24:10,750
and they're like a will just threw a

00:24:07,810 --> 00:24:13,540
giant marketing budget behind this will

00:24:10,750 --> 00:24:16,630
do a bunch of conference talks and get

00:24:13,540 --> 00:24:20,560
people really excited about it but the

00:24:16,630 --> 00:24:23,220
thing is that uh you will still have to

00:24:20,560 --> 00:24:26,289
deal with developers

00:24:23,220 --> 00:24:30,220
evaluating your product and if you're

00:24:26,289 --> 00:24:32,620
new open source project doesn't meet

00:24:30,220 --> 00:24:36,159
their needs they're not going to use it

00:24:32,620 --> 00:24:38,020
and the other thing that companies don't

00:24:36,159 --> 00:24:41,320
realize when they start a new open

00:24:38,020 --> 00:24:45,580
source project is that change takes a

00:24:41,320 --> 00:24:47,950
very very long time it takes a long time

00:24:45,580 --> 00:24:50,049
to build up an open source project it's

00:24:47,950 --> 00:24:51,520
not just releasing the source code and

00:24:50,049 --> 00:24:53,919
writing a bunch of articles and then

00:24:51,520 --> 00:24:57,279
everyone loves it and everyone uses the

00:24:53,919 --> 00:24:59,830
newest web development framework you

00:24:57,279 --> 00:25:03,250
have to spend a lot of time building up

00:24:59,830 --> 00:25:06,370
your community you need people there to

00:25:03,250 --> 00:25:08,370
answer questions to be posting things to

00:25:06,370 --> 00:25:11,049
stack overflow and answering questions

00:25:08,370 --> 00:25:13,899
you know posting articles to read it

00:25:11,049 --> 00:25:16,059
doing lots of doing lots of talks but

00:25:13,899 --> 00:25:19,120
also being there being a part of the

00:25:16,059 --> 00:25:20,890
community figuring out what's what needs

00:25:19,120 --> 00:25:25,210
to be changed and what needs to be added

00:25:20,890 --> 00:25:27,940
to your open source product because no

00:25:25,210 --> 00:25:31,299
amount of marketing money you throw will

00:25:27,940 --> 00:25:34,510
buy developer trust in your open source

00:25:31,299 --> 00:25:36,789
community if they try it out and it's

00:25:34,510 --> 00:25:39,460
buggy and you don't answer their

00:25:36,789 --> 00:25:43,539
questions fast enough they're not going

00:25:39,460 --> 00:25:45,520
to use your product if they if you have

00:25:43,539 --> 00:25:48,429
a bunch of marketing hype about how

00:25:45,520 --> 00:25:49,870
secure your product is and then people

00:25:48,429 --> 00:25:52,690
go and look at the code and they can't

00:25:49,870 --> 00:25:54,760
find your security model or they can't

00:25:52,690 --> 00:25:57,100
find documentation about your security

00:25:54,760 --> 00:25:59,620
model they're not going to believe any

00:25:57,100 --> 00:26:01,299
of the marketing hype so this is really

00:25:59,620 --> 00:26:04,899
when you start an open source project

00:26:01,299 --> 00:26:07,750
this is really about having developers

00:26:04,899 --> 00:26:10,539
on the floor to be able to talk to other

00:26:07,750 --> 00:26:15,580
developers and convince them that this

00:26:10,539 --> 00:26:18,159
is a good idea so we've talked a lot

00:26:15,580 --> 00:26:22,360
about a bunch of different paradigms

00:26:18,159 --> 00:26:24,250
that companies the mistakes that

00:26:22,360 --> 00:26:27,460
companies make when they start to get

00:26:24,250 --> 00:26:28,870
involved in open source so there's a lot

00:26:27,460 --> 00:26:31,590
of different tips that I've given you

00:26:28,870 --> 00:26:35,740
here one of them of course is

00:26:31,590 --> 00:26:36,790
questioning hiding information can we

00:26:35,740 --> 00:26:40,510
eliminate

00:26:36,790 --> 00:26:43,960
any of the closed source firmware or

00:26:40,510 --> 00:26:46,510
software and our product and then also

00:26:43,960 --> 00:26:49,750
how can we reduce our technical debt how

00:26:46,510 --> 00:26:53,410
can we get our patches upstream how can

00:26:49,750 --> 00:26:54,940
i convince my manager that the time I'm

00:26:53,410 --> 00:26:57,310
going to spend getting those patches

00:26:54,940 --> 00:26:59,350
upstream is going to save us engineer

00:26:57,310 --> 00:27:03,220
time in the future when we have to

00:26:59,350 --> 00:27:05,230
maintain and fix security issues the

00:27:03,220 --> 00:27:07,150
other thing is that when you're starting

00:27:05,230 --> 00:27:10,390
a new feature you're starting a new

00:27:07,150 --> 00:27:12,850
board you need to treat open sores as an

00:27:10,390 --> 00:27:14,770
open source maintainers as architects

00:27:12,850 --> 00:27:17,860
you need to get them involved in your

00:27:14,770 --> 00:27:20,140
design discussions as soon as possible

00:27:17,860 --> 00:27:22,780
find the fastest way to communicate with

00:27:20,140 --> 00:27:24,430
them and find the right people to get

00:27:22,780 --> 00:27:27,190
involved in that conversation that means

00:27:24,430 --> 00:27:30,460
you really have to be a part of those

00:27:27,190 --> 00:27:32,980
open source communities and submit your

00:27:30,460 --> 00:27:35,470
code early and often because open source

00:27:32,980 --> 00:27:37,950
projects do have really schedules and

00:27:35,470 --> 00:27:40,930
you need to get those in and finally

00:27:37,950 --> 00:27:42,730
disruption especially making a new open

00:27:40,930 --> 00:27:45,940
source community to replace an old one

00:27:42,730 --> 00:27:49,690
takes a very long time and a lot of key

00:27:45,940 --> 00:27:52,380
engineers on the ground so thank you

00:27:49,690 --> 00:27:55,900
very much for listening to my my talk

00:27:52,380 --> 00:27:58,450
I'm available afterwards to talk as well

00:27:55,900 --> 00:28:01,120
i'll also be running the open-source 101

00:27:58,450 --> 00:28:03,640
session if you like what you heard I

00:28:01,120 --> 00:28:08,040
also do open-source training through my

00:28:03,640 --> 00:28:08,040
company otter technology thank you

00:28:11,980 --> 00:28:14,040

YouTube URL: https://www.youtube.com/watch?v=_17lUCd8ol0


