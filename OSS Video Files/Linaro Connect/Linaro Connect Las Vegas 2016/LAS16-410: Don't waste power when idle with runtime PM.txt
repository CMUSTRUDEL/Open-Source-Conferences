Title: LAS16-410: Don't waste power when idle with runtime PM
Publication date: 2016-09-30
Playlist: Linaro Connect Las Vegas 2016
Description: 
	LAS16-410: Don’t waste power when idle with runtime PM
Speakers: Ulf Hansson
Date: September 29, 2016

★ Session Description ★
For a while Linaro has been working on improving some components of the PM core infrastructure. In this session we will touch system PM, runtime PM and the generic PM domain frameworks. Moreover we will show how to deploy system PM support via the so called runtime PM centric approach. The goal is to enable people to write simpler PM code in subsystem/drivers, as well as help avoid wasting power when a device or a system is idle.

★ Resources ★
Etherpad: pad.linaro.org/p/las16-410
Presentations & Videos: http://connect.linaro.org/resource/las16/las16-410/

★ Event Details ★
Linaro Connect Las Vegas 2016 – #LAS16
September 26-30, 2016
http://www.linaro.org
http://connect.linaro.org
Captions: 
	00:00:16,550 --> 00:00:23,550
this session is about idle management on

00:00:20,310 --> 00:00:28,529
how are we avoid wasting power when we

00:00:23,550 --> 00:00:31,800
write so we have been working on this

00:00:28,529 --> 00:00:34,050
for quite a while now in linaro and I

00:00:31,800 --> 00:00:40,500
think we have been mentioned this as SOC

00:00:34,050 --> 00:00:43,559
idling and I'll give you a walkthrough

00:00:40,500 --> 00:00:45,600
of what that actually means and we're

00:00:43,559 --> 00:00:48,539
going to look in and look into some of

00:00:45,600 --> 00:00:54,480
the related frameworks that's involved

00:00:48,539 --> 00:00:56,820
in this and we also going to have show

00:00:54,480 --> 00:01:02,430
you some examples of how we can do it

00:00:56,820 --> 00:01:07,470
and we're also going to look into

00:01:02,430 --> 00:01:10,290
something that we call a runtime p.m.

00:01:07,470 --> 00:01:13,260
centric approach and I'm going to

00:01:10,290 --> 00:01:14,610
explain a little bit about that and then

00:01:13,260 --> 00:01:16,350
we're also going to look a little bit

00:01:14,610 --> 00:01:20,909
about what we are actually doing right

00:01:16,350 --> 00:01:24,630
now one and some other highlights within

00:01:20,909 --> 00:01:26,340
this area so yeah quite why I haven't

00:01:24,630 --> 00:01:29,340
been feeling that well so we have to

00:01:26,340 --> 00:01:31,770
apologize if you finally find me being a

00:01:29,340 --> 00:01:35,850
little bit busy and Lena will help me

00:01:31,770 --> 00:01:38,040
out with it it is needed don't hesitate

00:01:35,850 --> 00:01:43,250
to interrupt during the session please

00:01:38,040 --> 00:01:46,880
ask question whenever you feel ok

00:01:43,250 --> 00:01:49,820
so soaked idling what do we mean so

00:01:46,880 --> 00:01:53,030
clearly it's about waste our avoid

00:01:49,820 --> 00:01:55,070
wasting power when we don't anything

00:01:53,030 --> 00:01:58,970
weird we don't have anything to do when

00:01:55,070 --> 00:02:01,640
we're idle and most people talk talk

00:01:58,970 --> 00:02:03,020
about CPUs when you talk about idle but

00:02:01,640 --> 00:02:04,880
of course there is a lot of other

00:02:03,020 --> 00:02:07,640
resources or NASA see that you need to

00:02:04,880 --> 00:02:11,390
manage and which you can put into

00:02:07,640 --> 00:02:13,970
low-power state on Laura when their Idol

00:02:11,390 --> 00:02:15,470
so to say so what we have been doing in

00:02:13,970 --> 00:02:18,739
this era is that we have been worth

00:02:15,470 --> 00:02:20,959
working on on this framework so I'm

00:02:18,739 --> 00:02:24,790
going to talk a little bit about and try

00:02:20,959 --> 00:02:27,770
to nail out some some issues that's been

00:02:24,790 --> 00:02:30,739
especially problems when you have an arm

00:02:27,770 --> 00:02:34,580
SOC and we're going to fix those cases

00:02:30,739 --> 00:02:42,050
and so our main goal is of course to

00:02:34,580 --> 00:02:48,650
enable and all the arm SOC vendors to

00:02:42,050 --> 00:02:52,220
deploy p.m. support for our seats so if

00:02:48,650 --> 00:02:55,430
perhaps I should say also that if we if

00:02:52,220 --> 00:02:58,700
we look into the upstream version of the

00:02:55,430 --> 00:03:00,440
colonel there is a lot of burst of

00:02:58,700 --> 00:03:03,260
course lot of drivers and being used on

00:03:00,440 --> 00:03:06,080
different socks and so forth but there

00:03:03,260 --> 00:03:08,510
is often or lacking TM supports in these

00:03:06,080 --> 00:03:10,880
Bibles so in the downstream portions of

00:03:08,510 --> 00:03:12,769
the trees in the Vandal trees obviously

00:03:10,880 --> 00:03:14,810
they have implemented this PM support

00:03:12,769 --> 00:03:17,660
there so there is a gap somewhere here

00:03:14,810 --> 00:03:23,870
we are trying to minimize that yeah by

00:03:17,660 --> 00:03:26,959
helping out in this field so let's go

00:03:23,870 --> 00:03:30,260
into the summer frameworks this is the

00:03:26,959 --> 00:03:32,480
most interesting once i think and i will

00:03:30,260 --> 00:03:36,220
walk you through a little bit about how

00:03:32,480 --> 00:03:36,220
they works and how they don't work

00:03:40,580 --> 00:03:46,200
so let's start with a system p.m. and

00:03:43,230 --> 00:03:49,200
runtime p.m. for envelopes so system

00:03:46,200 --> 00:03:51,480
p.m. mr. framework that is designed to

00:03:49,200 --> 00:03:57,599
bring all bring down all the whole

00:03:51,480 --> 00:03:59,430
entire system so this happens for

00:03:57,599 --> 00:04:01,650
example when you close the lid on the

00:03:59,430 --> 00:04:05,910
laptop will press the power button on

00:04:01,650 --> 00:04:09,180
your android device and then it the

00:04:05,910 --> 00:04:15,450
whole system goes into a low low power

00:04:09,180 --> 00:04:17,940
mode goes into sleep so what I'm going

00:04:15,450 --> 00:04:20,220
to focus now in this presentation it's

00:04:17,940 --> 00:04:23,010
not that it's not the entire part of the

00:04:20,220 --> 00:04:24,810
system p.m. I'm going to focus on on the

00:04:23,010 --> 00:04:27,330
on the part that is related to the

00:04:24,810 --> 00:04:28,740
devices there is a lot of other stuff of

00:04:27,330 --> 00:04:31,520
yours on as well but there is a lot of

00:04:28,740 --> 00:04:34,200
registered devices in the system and

00:04:31,520 --> 00:04:36,630
sister p.m. deals with all those devices

00:04:34,200 --> 00:04:39,479
when it goes to idle I'm going to talk a

00:04:36,630 --> 00:04:41,639
little bit about that there is also

00:04:39,479 --> 00:04:43,979
another feature thats related to system

00:04:41,639 --> 00:04:46,530
p.m. that's the sample we have called

00:04:43,979 --> 00:04:49,560
out to sleep and those does familiar

00:04:46,530 --> 00:04:52,530
with androids wake long wait looks this

00:04:49,560 --> 00:04:54,090
is a very ready to do so in principle in

00:04:52,530 --> 00:04:56,910
stick instead of that you actually have

00:04:54,090 --> 00:04:59,789
to close the lid which means that will

00:04:56,910 --> 00:05:01,800
there will be a notification going to do

00:04:59,789 --> 00:05:04,020
kill them saying that now you should go

00:05:01,800 --> 00:05:06,690
to sleep this out sleep feature is

00:05:04,020 --> 00:05:09,960
actually more an optimist opportunistic

00:05:06,690 --> 00:05:13,620
way of the alumina so the colonel always

00:05:09,960 --> 00:05:15,690
tries to go to sleep so then there has

00:05:13,620 --> 00:05:18,570
to be like use cases running to prevent

00:05:15,690 --> 00:05:20,039
the kalam to go to sleep so it's it's

00:05:18,570 --> 00:05:23,360
the same thing that happens but it's

00:05:20,039 --> 00:05:26,160
just a mechanism over pushing down the

00:05:23,360 --> 00:05:27,720
system into sleep mode and this is what

00:05:26,160 --> 00:05:32,729
the Android has been using for a long

00:05:27,720 --> 00:05:34,560
time now so runtime p.m. so what differs

00:05:32,729 --> 00:05:36,180
between a system p.m. in runtime p.m.

00:05:34,560 --> 00:05:42,150
that is that grandpa p.m. is more

00:05:36,180 --> 00:05:44,039
fine-grained and it can be used when

00:05:42,150 --> 00:05:47,729
there is let's say that you have a

00:05:44,039 --> 00:05:50,190
device that is solved for some IO

00:05:47,729 --> 00:05:52,680
request and then all of a sudden this I

00:05:50,190 --> 00:05:53,160
request stops coming and your idle you

00:05:52,680 --> 00:05:55,290
don't have

00:05:53,160 --> 00:05:57,300
to do at the moment the sister is still

00:05:55,290 --> 00:05:59,820
up and running so instead we just

00:05:57,300 --> 00:06:03,090
waiting keeping all the power resources

00:05:59,820 --> 00:06:05,370
up and running in all this device 1 10pm

00:06:03,090 --> 00:06:08,040
enables you to bring down this device

00:06:05,370 --> 00:06:09,540
into a low-power state so the next time

00:06:08,040 --> 00:06:12,180
is going to be used to have to bring it

00:06:09,540 --> 00:06:15,780
back back up again so it's more fine

00:06:12,180 --> 00:06:20,970
fine great method of dealing with I'll

00:06:15,780 --> 00:06:24,710
our mansion so if you look back into the

00:06:20,970 --> 00:06:27,570
history it's been really problematic of

00:06:24,710 --> 00:06:31,290
abuse of using these two frameworks

00:06:27,570 --> 00:06:33,150
together there wasn't much of a

00:06:31,290 --> 00:06:36,390
coordination going on between stood

00:06:33,150 --> 00:06:38,430
between with sprain brook and yeah it

00:06:36,390 --> 00:06:41,640
was really hot actually to deploy

00:06:38,430 --> 00:06:48,120
support for this especially in the arm

00:06:41,640 --> 00:06:50,580
world so some over really important

00:06:48,120 --> 00:06:53,580
milestones happen that's quite a while

00:06:50,580 --> 00:06:56,040
ago but there is a k config

00:06:53,580 --> 00:06:58,260
options in the kernel and when you

00:06:56,040 --> 00:06:59,840
remove one of these combinations there

00:06:58,260 --> 00:07:02,370
is something that's called config p.m.

00:06:59,840 --> 00:07:04,590
complete being ramped conflicting in one

00:07:02,370 --> 00:07:06,270
time and completely em sleep and when

00:07:04,590 --> 00:07:08,940
you get different combinations of these

00:07:06,270 --> 00:07:11,250
it gets either trickier to get all the

00:07:08,940 --> 00:07:14,220
common case is nailed out and it's hard

00:07:11,250 --> 00:07:17,150
to get to get the killed optimized so by

00:07:14,220 --> 00:07:19,560
removing some of these combinations it

00:07:17,150 --> 00:07:23,550
gets a lot easier so that's what

00:07:19,560 --> 00:07:25,350
happened while ago and another really

00:07:23,550 --> 00:07:28,260
important milestone was that we added a

00:07:25,350 --> 00:07:33,480
get a bunch of help of helper functions

00:07:28,260 --> 00:07:37,190
which is supposed to during systemtm you

00:07:33,480 --> 00:07:40,380
hope to use these helpers which can /

00:07:37,190 --> 00:07:42,830
makes these two system p.m. runtime p.m.

00:07:40,380 --> 00:07:42,830
frameworks

00:07:46,849 --> 00:07:50,330
so then we have the concept of p.m.

00:07:48,830 --> 00:07:53,240
domain that was introduced in the new

00:07:50,330 --> 00:07:56,539
skillman way back ago so I just wanted

00:07:53,240 --> 00:07:59,719
to mention this briefly and it's the

00:07:56,539 --> 00:08:03,139
idea is really simple that those devices

00:07:59,719 --> 00:08:05,050
that may share resources and it needs

00:08:03,139 --> 00:08:10,639
perhaps needs to be managed in a

00:08:05,050 --> 00:08:13,969
controlled manner together then we have

00:08:10,639 --> 00:08:15,610
the PM domain concept which allows which

00:08:13,969 --> 00:08:18,139
allows you to do that in the latest oh

00:08:15,610 --> 00:08:19,969
so this is just a typical p.m. domain

00:08:18,139 --> 00:08:22,099
that I've grown up there you might have

00:08:19,969 --> 00:08:26,479
a couple of devices and the sherry so

00:08:22,099 --> 00:08:32,419
there is a power rail so the PM domain

00:08:26,479 --> 00:08:33,919
helps you with this and this is giving

00:08:32,419 --> 00:08:35,719
into this is going to be a little bit

00:08:33,919 --> 00:08:40,130
more detailed but my point here is that

00:08:35,719 --> 00:08:43,940
we have a bunch of p.m. call backs which

00:08:40,130 --> 00:08:46,130
you can associate with the device on

00:08:43,940 --> 00:08:48,440
different levels and some of these

00:08:46,130 --> 00:08:50,720
there's a lot of callback such as you

00:08:48,440 --> 00:08:54,439
see heron it would have been nice if

00:08:50,720 --> 00:08:58,250
it's been a few of those but this will

00:08:54,439 --> 00:09:01,130
probably stay or may at least one time

00:08:58,250 --> 00:09:03,589
p.m. hopes we won't get the proper go

00:09:01,130 --> 00:09:06,410
and see less of these at least short

00:09:03,589 --> 00:09:08,720
term so some of these are related to

00:09:06,410 --> 00:09:14,720
system p.m. some of these are related to

00:09:08,720 --> 00:09:16,790
runtime p.m. and when I was talking

00:09:14,720 --> 00:09:18,620
about the PM domain so how this PM

00:09:16,790 --> 00:09:21,949
domain concept actually works in theory

00:09:18,620 --> 00:09:24,439
is that it or in practice mean that is

00:09:21,949 --> 00:09:27,980
that you have you have a higher fee that

00:09:24,439 --> 00:09:31,130
is being respected in these frameworks

00:09:27,980 --> 00:09:34,100
and on top of the hierarchy you have the

00:09:31,130 --> 00:09:36,680
PM domain so when when when the PM cause

00:09:34,100 --> 00:09:40,130
thoughts on our stop suspend the

00:09:36,680 --> 00:09:42,649
operation it will walk this hierarchy

00:09:40,130 --> 00:09:45,110
and say ok this device has a has a PM

00:09:42,649 --> 00:09:49,490
domain associated and this PM domain

00:09:45,110 --> 00:09:50,930
then has this callbacks set up and if it

00:09:49,490 --> 00:09:53,120
doesn't have a pea in the main it

00:09:50,930 --> 00:09:55,550
continues in the hierarchy there is

00:09:53,120 --> 00:09:58,370
something that you call bus type in the

00:09:55,550 --> 00:09:59,209
instructive ice and it invokes that see

00:09:58,370 --> 00:10:01,879
if he

00:09:59,209 --> 00:10:05,420
Kovac has been set up for the bus and so

00:10:01,879 --> 00:10:13,819
forth in the driver is is at the bottom

00:10:05,420 --> 00:10:17,480
of the hierarchy so this is an area that

00:10:13,819 --> 00:10:24,829
we have been working on now lately the

00:10:17,480 --> 00:10:27,860
generic p.m. domain so to describe is

00:10:24,829 --> 00:10:29,959
very very easy is that on those as you

00:10:27,860 --> 00:10:34,809
see where we see that there is a need to

00:10:29,959 --> 00:10:38,209
use the concept of a PM domain you often

00:10:34,809 --> 00:10:40,629
you often have the same similar problems

00:10:38,209 --> 00:10:44,209
when you want to deploy support this and

00:10:40,629 --> 00:10:46,639
instead of duplicating a lot of code for

00:10:44,209 --> 00:10:48,709
all the associés we have invented the

00:10:46,639 --> 00:10:51,649
generic team domain to help out with all

00:10:48,709 --> 00:10:53,809
the infrastructure courts so what it

00:10:51,649 --> 00:10:56,360
allows you to do is that you can

00:10:53,809 --> 00:10:59,569
describe your team domain pathology and

00:10:56,360 --> 00:11:02,389
how the device is connected to that in

00:10:59,569 --> 00:11:05,089
the device tree so it allows you to

00:11:02,389 --> 00:11:07,759
group these devices in domains and it

00:11:05,089 --> 00:11:09,410
also helps with attaching all of the

00:11:07,759 --> 00:11:12,589
devices in one time so when the system

00:11:09,410 --> 00:11:15,889
starts up so you get this device is

00:11:12,589 --> 00:11:18,049
associated with out domains and of

00:11:15,889 --> 00:11:20,749
course it's a substance in some associés

00:11:18,049 --> 00:11:24,920
you have you don't have one domain you

00:11:20,749 --> 00:11:26,629
might have an ester the topology so you

00:11:24,920 --> 00:11:29,119
need to have subdomains the most of the

00:11:26,629 --> 00:11:33,019
main so it's yeah can get really really

00:11:29,119 --> 00:11:36,920
complex and of course there is that

00:11:33,019 --> 00:11:39,439
needs to be some SOC specific methods so

00:11:36,920 --> 00:11:42,290
you can actually power off your domain

00:11:39,439 --> 00:11:46,639
and then there are callbacks to deal

00:11:42,290 --> 00:11:48,519
with it so I'm not going to go into the

00:11:46,639 --> 00:11:52,429
detail of how the generic or domain

00:11:48,519 --> 00:11:55,339
works the mechanics behind it but the

00:11:52,429 --> 00:11:57,230
important thing here is that the devices

00:11:55,339 --> 00:12:01,429
that you put into the generic pour

00:11:57,230 --> 00:12:03,619
demain needs to be MPD relies on that

00:12:01,429 --> 00:12:06,829
these devices are being managed by

00:12:03,619 --> 00:12:08,389
runtime p.m. and system p.m. in their

00:12:06,829 --> 00:12:11,550
respective substitute subsystem and

00:12:08,389 --> 00:12:18,510
drivers so it's a relationship here

00:12:11,550 --> 00:12:21,750
maintain so this is just an overview

00:12:18,510 --> 00:12:24,660
what you how it could look like we have

00:12:21,750 --> 00:12:26,760
a big p.m. domain and it has a subdomain

00:12:24,660 --> 00:12:29,100
with a bunch of devices here and there

00:12:26,760 --> 00:12:32,540
and all this stuff is possible to

00:12:29,100 --> 00:12:36,000
describe in dt you probably can't read

00:12:32,540 --> 00:12:38,130
with the dt description here but that's

00:12:36,000 --> 00:12:41,959
that's not the point you can keep it as

00:12:38,130 --> 00:12:41,959
a reference slides will be available

00:12:47,830 --> 00:12:53,570
so

00:12:50,060 --> 00:12:59,030
when you put these devices into a

00:12:53,570 --> 00:13:00,860
low-power state obviously you will avoid

00:12:59,030 --> 00:13:02,900
to eighth power which is the whole idea

00:13:00,860 --> 00:13:05,360
behind putting them into low power site

00:13:02,900 --> 00:13:08,390
but when you do that the next time

00:13:05,360 --> 00:13:10,190
you're going to solve a request when we

00:13:08,390 --> 00:13:13,060
talk about the runtime p.m. point of

00:13:10,190 --> 00:13:15,620
view you need to bring the device up to

00:13:13,060 --> 00:13:18,950
full power again so it can stop the

00:13:15,620 --> 00:13:22,640
functional and that of course introduces

00:13:18,950 --> 00:13:25,010
a latency so when there is a request

00:13:22,640 --> 00:13:27,500
coming in it will suffer from an initial

00:13:25,010 --> 00:13:29,740
latency before it actually can stopped

00:13:27,500 --> 00:13:33,250
before they actually device can start

00:13:29,740 --> 00:13:36,640
taking care of the daily below request

00:13:33,250 --> 00:13:39,170
so in some situation this latency is

00:13:36,640 --> 00:13:41,740
completely acceptable and of course it

00:13:39,170 --> 00:13:45,490
depends on how big the latency is and

00:13:41,740 --> 00:13:47,840
some other cases you just don't want to

00:13:45,490 --> 00:13:50,060
you just can't accept this kind of

00:13:47,840 --> 00:13:52,460
latency so to deal with these kind of

00:13:50,060 --> 00:13:55,610
situations there is a frame was called

00:13:52,460 --> 00:13:59,840
FP mqs and it allows you to set these

00:13:55,610 --> 00:14:03,140
kind of constraints on the device on the

00:13:59,840 --> 00:14:06,050
device yeah so then there is a

00:14:03,140 --> 00:14:08,540
mechanic's inside the MPD where you can

00:14:06,050 --> 00:14:14,030
attach the governor to your power main

00:14:08,540 --> 00:14:17,360
so before the MPD stops before the the

00:14:14,030 --> 00:14:19,850
virus actually goes in is well that when

00:14:17,360 --> 00:14:22,430
device is about to go into hello power

00:14:19,850 --> 00:14:24,650
state this governor validates these

00:14:22,430 --> 00:14:27,580
constraints and see if those can be met

00:14:24,650 --> 00:14:27,580
and it's not

00:14:33,590 --> 00:14:40,740
in some cases you can get kind of in a

00:14:39,360 --> 00:14:48,780
situation where we get kind of boost

00:14:40,740 --> 00:14:51,180
over request so you can accept you can

00:14:48,780 --> 00:14:52,560
accept that this latency but you don't

00:14:51,180 --> 00:14:56,610
want to have this late and see all the

00:14:52,560 --> 00:14:58,860
time so then you have a feature inside

00:14:56,610 --> 00:15:01,980
the runtime p.m. that is called auto

00:14:58,860 --> 00:15:03,990
suspend and that the in principle means

00:15:01,980 --> 00:15:07,170
that you have you have the option to

00:15:03,990 --> 00:15:09,180
defer to suspend until a little little

00:15:07,170 --> 00:15:12,000
yeah in a little while so you can set

00:15:09,180 --> 00:15:14,640
the time of saying that now now the

00:15:12,000 --> 00:15:17,430
device can go idle but let's wait for we

00:15:14,640 --> 00:15:21,240
like say 50 milliseconds so if it comes

00:15:17,430 --> 00:15:22,830
in a request within that window the

00:15:21,240 --> 00:15:26,880
device is still functional so you don't

00:15:22,830 --> 00:15:30,170
have to bring it back so that's another

00:15:26,880 --> 00:15:30,170
option but being used

00:15:33,400 --> 00:15:36,570
any questions so far

00:15:38,690 --> 00:15:41,260
the

00:16:05,680 --> 00:16:13,300
so how do we do this how do we deploy

00:16:09,850 --> 00:16:15,910
the PM support obviously there is a lot

00:16:13,300 --> 00:16:18,460
of variance metals of how you do it but

00:16:15,910 --> 00:16:21,730
I just wanted to show you one method

00:16:18,460 --> 00:16:23,470
i've seen that most people stopped

00:16:21,730 --> 00:16:24,880
caring about the system p.m. support

00:16:23,470 --> 00:16:26,440
that is the most important thing for

00:16:24,880 --> 00:16:28,930
they stop the implementing the system

00:16:26,440 --> 00:16:30,940
p.m. and when that is done they realized

00:16:28,930 --> 00:16:33,279
oh I'm really interested in runtime p.m.

00:16:30,940 --> 00:16:36,700
as well so then that one time p.m. on

00:16:33,279 --> 00:16:38,380
top they forget about the wake up

00:16:36,700 --> 00:16:42,240
surfing so they have to squeeze them in

00:16:38,380 --> 00:16:45,220
later so we'd wake up its I don't know

00:16:42,240 --> 00:16:47,950
it's when they then when the device goes

00:16:45,220 --> 00:16:51,640
into a low-power state it needs to be

00:16:47,950 --> 00:16:54,640
able to wake up in some form and in some

00:16:51,640 --> 00:16:58,779
cases you have a separate configuration

00:16:54,640 --> 00:17:00,580
to deal with that and that's a four-step

00:16:58,779 --> 00:17:02,980
they realized oh I have a bunch of p.m.

00:17:00,580 --> 00:17:06,550
domains in my system so i need to deploy

00:17:02,980 --> 00:17:09,179
MPD and this works of course it's a

00:17:06,550 --> 00:17:12,309
little bit tricky to do it but it works

00:17:09,179 --> 00:17:14,230
so what I'm saying error sighs I think

00:17:12,309 --> 00:17:16,750
there is actually an easier way to do

00:17:14,230 --> 00:17:20,110
this and it's kind of the opposite way

00:17:16,750 --> 00:17:22,449
of do for doing it so it would it's

00:17:20,110 --> 00:17:24,720
easier if you start deploying the power

00:17:22,449 --> 00:17:28,920
men sports from the beginning where you

00:17:24,720 --> 00:17:31,540
do all the need to be at dtb updates and

00:17:28,920 --> 00:17:35,250
configure all the systems and put the

00:17:31,540 --> 00:17:38,050
devices in the respective domains and

00:17:35,250 --> 00:17:41,559
then you start deploying run champion

00:17:38,050 --> 00:17:45,010
support and when you have deployed

00:17:41,559 --> 00:17:47,220
around 10pm support if you use this

00:17:45,010 --> 00:17:49,780
so-called runtime p.m. centric approach

00:17:47,220 --> 00:17:52,450
and we'll explain that a little bit more

00:17:49,780 --> 00:17:54,630
later you might get the system p.m. for

00:17:52,450 --> 00:17:54,630
free

00:17:58,920 --> 00:18:04,530
the idea is that this would save you a

00:18:01,690 --> 00:18:04,530
bunch of steps

00:18:09,070 --> 00:18:14,710
so yes some quick worms what you need to

00:18:11,799 --> 00:18:16,840
do when you deploy the MPD support so

00:18:14,710 --> 00:18:24,039
we're talking about the dtb of course

00:18:16,840 --> 00:18:26,130
that needs to be updated and you need to

00:18:24,039 --> 00:18:29,259
put the devices their respective domains

00:18:26,130 --> 00:18:33,100
and of course you have some SOC specifc

00:18:29,259 --> 00:18:34,480
parts that need to implement and then

00:18:33,100 --> 00:18:38,500
when you have done that you're going to

00:18:34,480 --> 00:18:43,149
restore your your generic power mine via

00:18:38,500 --> 00:18:44,620
an API from MPD and you also have an

00:18:43,149 --> 00:18:46,870
hour provide all that they're going to

00:18:44,620 --> 00:18:52,860
register and perhaps if you have

00:18:46,870 --> 00:18:55,929
subdomain goes also needs to be mr. and

00:18:52,860 --> 00:18:58,679
nowadays there is actually kind of good

00:18:55,929 --> 00:19:01,919
examples there that wasn't the case

00:18:58,679 --> 00:19:01,919
while ago

00:19:05,710 --> 00:19:11,200
and then when you have done that you

00:19:08,529 --> 00:19:15,309
stop with the runtime p.m. approach they

00:19:11,200 --> 00:19:16,809
run Campion deployment and I'm going to

00:19:15,309 --> 00:19:19,240
look a little bit about this one time

00:19:16,809 --> 00:19:21,880
p.m. centric approach now so the whole

00:19:19,240 --> 00:19:24,250
idea with this is that if you have a

00:19:21,880 --> 00:19:27,309
look here and see how devices are being

00:19:24,250 --> 00:19:31,059
managed from support management point of

00:19:27,309 --> 00:19:32,770
view system wise and runtime pmos you

00:19:31,059 --> 00:19:35,020
often see that this it's actually the

00:19:32,770 --> 00:19:38,679
same operations that's that's being done

00:19:35,020 --> 00:19:43,090
where device and in some cases there are

00:19:38,679 --> 00:19:45,610
very very similar so instead of

00:19:43,090 --> 00:19:47,770
duplicating the code we need to

00:19:45,610 --> 00:19:50,370
implement all this stuff in all the

00:19:47,770 --> 00:19:52,960
different callbacks let's try to make

00:19:50,370 --> 00:19:56,350
with reuse because that is the whole

00:19:52,960 --> 00:19:59,169
idea with this and also to cover some of

00:19:56,350 --> 00:20:07,419
the corn cases when you combine these

00:19:59,169 --> 00:20:09,190
two ian frame-ups so you start by

00:20:07,419 --> 00:20:11,649
deploying your runtime p.m. in your

00:20:09,190 --> 00:20:13,390
device driver every new system you make

00:20:11,649 --> 00:20:15,850
sure that you have considered the wake

00:20:13,390 --> 00:20:18,399
up so you don't forget about them then

00:20:15,850 --> 00:20:20,620
after that all you have to do is that

00:20:18,399 --> 00:20:22,539
these other system p and related

00:20:20,620 --> 00:20:24,820
callbacks you just assign them to these

00:20:22,539 --> 00:20:31,120
helper function that I've mentioned

00:20:24,820 --> 00:20:33,789
earlier and then go down so it looks

00:20:31,120 --> 00:20:35,860
like this will have when you have

00:20:33,789 --> 00:20:37,539
deployed runtime team support this is

00:20:35,860 --> 00:20:41,399
all you need to deploy the system p.m.

00:20:37,539 --> 00:20:45,600
support in your own device driver or

00:20:41,399 --> 00:20:45,600
subsystem real easy

00:20:52,119 --> 00:20:57,529
just wanted to mention some some latest

00:20:55,460 --> 00:21:01,129
achievement that we have been working on

00:20:57,529 --> 00:21:04,220
in Niall lately is that we have seen

00:21:01,129 --> 00:21:07,489
that the system p.m. related code Indian

00:21:04,220 --> 00:21:11,090
Eric Holder man wasn't that behaving in

00:21:07,489 --> 00:21:16,220
that well so we wanted to optimize it a

00:21:11,090 --> 00:21:18,369
little bit and particularly devices were

00:21:16,220 --> 00:21:22,549
being brought back into full power

00:21:18,369 --> 00:21:25,759
unnecessary during the system p.m. face

00:21:22,549 --> 00:21:27,619
both when you bring the system into the

00:21:25,759 --> 00:21:30,259
sleep state and when you wake it up from

00:21:27,619 --> 00:21:32,119
sleep said even if devices wasn't being

00:21:30,259 --> 00:21:34,999
used they were still going to be powered

00:21:32,119 --> 00:21:37,549
up and then just work really shortly off

00:21:34,999 --> 00:21:41,590
for being powered down again so it not

00:21:37,549 --> 00:21:44,720
only wasted power but it takes time

00:21:41,590 --> 00:21:47,690
which seems unnecessary this is what

00:21:44,720 --> 00:21:50,450
we've been working on and the first part

00:21:47,690 --> 00:21:52,639
which is the when you go into sleep late

00:21:50,450 --> 00:21:54,950
that is that is fixed but when you wake

00:21:52,639 --> 00:21:59,389
up there is still some pieces that we do

00:21:54,950 --> 00:22:02,629
that we need to fix and one other thing

00:21:59,389 --> 00:22:07,159
that that happens to the power man was

00:22:02,629 --> 00:22:10,849
the MPD was that we had a support to be

00:22:07,159 --> 00:22:12,859
able to remove the parliament that could

00:22:10,849 --> 00:22:15,070
be useful if you have a driver that size

00:22:12,859 --> 00:22:15,070
too

00:22:22,930 --> 00:22:24,990
you

00:22:26,600 --> 00:22:33,970
so some ongoing work in this area so

00:22:34,150 --> 00:22:41,390
some cases obviously we want to measure

00:22:38,870 --> 00:22:44,929
power physically on the on the boards

00:22:41,390 --> 00:22:48,080
when when that it when it is when that

00:22:44,929 --> 00:22:53,330
isn't feasible and it's not the case all

00:22:48,080 --> 00:22:55,220
the balls that we are developing on the

00:22:53,330 --> 00:22:59,330
idea here is that we want to be able to

00:22:55,220 --> 00:23:00,590
collect some power statistics instead so

00:22:59,330 --> 00:23:03,740
this is something that we have been

00:23:00,590 --> 00:23:07,909
working on adding into MPD so that you

00:23:03,740 --> 00:23:09,890
can find out how long a power line has

00:23:07,909 --> 00:23:11,809
been in a local faith and how long

00:23:09,890 --> 00:23:14,870
devices in there has been in low-power

00:23:11,809 --> 00:23:18,409
faith yeah get some statistics of that

00:23:14,870 --> 00:23:21,679
which allows us to I mean when we

00:23:18,409 --> 00:23:23,590
improve the deploy a one-time PMD

00:23:21,679 --> 00:23:26,750
persistent p.m. support here and there

00:23:23,590 --> 00:23:29,030
you can go in and collect statistics and

00:23:26,750 --> 00:23:31,690
see that okay we are at least moving in

00:23:29,030 --> 00:23:33,950
the right direction very improving see

00:23:31,690 --> 00:23:36,559
in those cases when we can't measure

00:23:33,950 --> 00:23:42,260
power so that that's the idea here

00:23:36,559 --> 00:23:46,550
hopefully will we will get something in

00:23:42,260 --> 00:23:49,610
the next release psychological

00:23:46,550 --> 00:23:51,650
and some other thing that we have been

00:23:49,610 --> 00:23:55,670
working on which is really interesting

00:23:51,650 --> 00:23:57,470
is that instead of deploying this one

00:23:55,670 --> 00:24:03,560
party in supporting in each and have

00:23:57,470 --> 00:24:06,080
relief driver more and more subsystem

00:24:03,560 --> 00:24:08,440
court officer system is deploying this

00:24:06,080 --> 00:24:12,050
one can PM support which of course

00:24:08,440 --> 00:24:13,880
enables the leaf drivers to do less from

00:24:12,050 --> 00:24:16,550
a runtime p.m. point to do the more or

00:24:13,880 --> 00:24:18,080
less only have to enable one champion

00:24:16,550 --> 00:24:20,240
and then everything looked because the

00:24:18,080 --> 00:24:25,580
core halting subsystem takes care of

00:24:20,240 --> 00:24:26,900
what what's needed in this so and there

00:24:25,580 --> 00:24:30,710
is a lot of sub system that's already

00:24:26,900 --> 00:24:33,110
deployed for this and I've listed them

00:24:30,710 --> 00:24:35,660
here and there's more and there is a lot

00:24:33,110 --> 00:24:40,610
of sub system that's being discussed on

00:24:35,660 --> 00:24:42,830
the LTM eldest of moving this one

00:24:40,610 --> 00:24:45,590
champion talking into the core part of

00:24:42,830 --> 00:24:48,320
the substitute in some cases is it's not

00:24:45,590 --> 00:24:50,630
it's not peacefully in some cases it is

00:24:48,320 --> 00:24:53,080
and all those cases where it actually is

00:24:50,630 --> 00:24:56,270
feasible it would make sense to have it

00:24:53,080 --> 00:24:59,120
so we obviously that we probably see

00:24:56,270 --> 00:25:03,160
that that's going to happen for for a

00:24:59,120 --> 00:25:06,620
bunch of new subsystem hassle to produce

00:25:03,160 --> 00:25:09,950
and there is another thing that's being

00:25:06,620 --> 00:25:12,140
worked on as well and that this long

00:25:09,950 --> 00:25:15,680
outstanding issues of how you can

00:25:12,140 --> 00:25:19,460
describe dependencies functional

00:25:15,680 --> 00:25:23,330
dependencies between devices so in some

00:25:19,460 --> 00:25:25,940
cases you have a device driver that that

00:25:23,330 --> 00:25:28,250
needs to be that wants to probe but this

00:25:25,940 --> 00:25:32,240
device driver relies on another wife

00:25:28,250 --> 00:25:34,550
device being probed forced and this kind

00:25:32,240 --> 00:25:35,990
of this kind of relationship isn't I

00:25:34,550 --> 00:25:38,330
mean there's only this parent-child

00:25:35,990 --> 00:25:41,930
relationships between that you can

00:25:38,330 --> 00:25:44,420
describe but there is no for our kind of

00:25:41,930 --> 00:25:48,050
dependencies that's not that's not

00:25:44,420 --> 00:25:50,450
possible possible to describe that in

00:25:48,050 --> 00:25:51,680
the leanest journal today so this is

00:25:50,450 --> 00:25:55,200
something that's being worked on by

00:25:51,680 --> 00:25:57,450
Raphael derpy informant I know

00:25:55,200 --> 00:26:00,440
it's really useful and will solve the

00:25:57,450 --> 00:26:04,590
pub some more of these common cases that

00:26:00,440 --> 00:26:05,970
that we have been working on now so this

00:26:04,590 --> 00:26:10,250
will include think if you want to be

00:26:05,970 --> 00:26:10,250
involved or some couple of links there

00:26:13,490 --> 00:26:22,720
and then we have the work that Lena is

00:26:15,920 --> 00:26:22,720
doing particularly with with CPUs I

00:26:23,050 --> 00:26:30,230
don't know if you want to okay so the

00:26:27,950 --> 00:26:34,460
idea we have here is that we have seen

00:26:30,230 --> 00:26:36,290
that that the CPU idle framework isn't

00:26:34,460 --> 00:26:39,110
really scaling well for the move the

00:26:36,290 --> 00:26:45,110
cluster or a turnkey system like big

00:26:39,110 --> 00:26:49,100
little so we wanted to to see if we

00:26:45,110 --> 00:26:52,910
could use runtime p.m. together with the

00:26:49,100 --> 00:26:55,580
generic powell domain to also cover cpus

00:26:52,910 --> 00:26:57,200
so we are exploring this and Dina has

00:26:55,580 --> 00:27:01,190
posted a couple of lotions of the patch

00:26:57,200 --> 00:27:03,980
set that is and the reason why we want

00:27:01,190 --> 00:27:06,080
to use one time p.m. eng MPD to solve

00:27:03,980 --> 00:27:09,650
this kind of idle management problems

00:27:06,080 --> 00:27:11,450
which kind of move the cluster system is

00:27:09,650 --> 00:27:15,220
that it has all the building blocks that

00:27:11,450 --> 00:27:18,970
that is needed so it's more or less a

00:27:15,220 --> 00:27:23,150
perfect match to solve this problem and

00:27:18,970 --> 00:27:25,540
another thing is that we also we also

00:27:23,150 --> 00:27:29,900
see that this one champion deployment is

00:27:25,540 --> 00:27:32,179
missing we get the unified solution to

00:27:29,900 --> 00:27:38,450
deal with Ireland management for all

00:27:32,179 --> 00:27:40,429
devices which is really nice so what

00:27:38,450 --> 00:27:41,750
we've been doing here is that we have I

00:27:40,429 --> 00:27:44,330
don't know if you know about the power

00:27:41,750 --> 00:27:47,440
management integration three we haven't

00:27:44,330 --> 00:27:52,400
dinero so we have we have a tree that

00:27:47,440 --> 00:27:54,140
that has that has some some patches that

00:27:52,400 --> 00:27:57,860
we're working on our swimming bahasa but

00:27:54,140 --> 00:28:03,050
hasn't met hasn't reached the mainline

00:27:57,860 --> 00:28:07,390
kernel yet so this tree has this kind of

00:28:03,050 --> 00:28:07,390
serious that lien has worked on for

00:28:08,530 --> 00:28:20,070
disaster and we have enabled to on 64

00:28:14,390 --> 00:28:26,670
sses so it's being tested

00:28:20,070 --> 00:28:31,420
tested for why and it's really easy to

00:28:26,670 --> 00:28:37,030
use this solution you only have to do

00:28:31,420 --> 00:28:40,750
need to be updates that's it books order

00:28:37,030 --> 00:28:43,780
the books so you have some other

00:28:40,750 --> 00:28:46,000
platform that you think it could be a

00:28:43,780 --> 00:28:49,510
match for this just talk to us and we

00:28:46,000 --> 00:28:51,640
can enable support for it here and it

00:28:49,510 --> 00:28:59,290
will be good because we get a even wider

00:28:51,640 --> 00:29:02,500
tesco so yeah this is this is a hot

00:28:59,290 --> 00:29:03,970
topic so we're talking luck with us

00:29:02,500 --> 00:29:07,150
amount and their own guys hear about

00:29:03,970 --> 00:29:09,310
some ET binding discussions currently

00:29:07,150 --> 00:29:11,460
but will also have a lot of discussions

00:29:09,310 --> 00:29:14,860
without or with with with the community

00:29:11,460 --> 00:29:19,260
yeah in the biggie so there wasn't we

00:29:14,860 --> 00:29:19,260
talked about this and Thomas

00:29:30,310 --> 00:29:33,420
some other questions

00:29:35,240 --> 00:29:40,520
so was this is just the final slide I

00:29:38,750 --> 00:29:44,420
have air are worth just want to share

00:29:40,520 --> 00:29:47,059
some some trends in some youth so it's

00:29:44,420 --> 00:29:48,500
more of saying that we are doing good

00:29:47,059 --> 00:29:50,780
job that is actually what I wanted to

00:29:48,500 --> 00:29:54,290
say here because if you see it if you

00:29:50,780 --> 00:29:56,240
look at some of the trends here creating

00:29:54,290 --> 00:29:59,990
that this actually will in oral doctor

00:29:56,240 --> 00:30:04,550
to get involved of evolving the generic

00:29:59,990 --> 00:30:08,660
Powell domain to ya to be a better

00:30:04,550 --> 00:30:10,730
canary polymer and if you see there it's

00:30:08,660 --> 00:30:13,730
a clear trend that it's actually being

00:30:10,730 --> 00:30:16,160
used a lot now more than it was before

00:30:13,730 --> 00:30:19,840
it was actually invented already in

00:30:16,160 --> 00:30:23,780
three dot one so between three dot 13 18

00:30:19,840 --> 00:30:25,750
nothing happened almost so you see a new

00:30:23,780 --> 00:30:29,950
trend now and this is really interesting

00:30:25,750 --> 00:30:33,260
so clearly this has been a feature that

00:30:29,950 --> 00:30:38,750
needed modernization the people could

00:30:33,260 --> 00:30:40,429
use and the others being here is the

00:30:38,750 --> 00:30:46,280
runtime p.m. centric approach I've been

00:30:40,429 --> 00:30:48,890
talking about so it was added a while

00:30:46,280 --> 00:30:51,350
ago but I think lately people are

00:30:48,890 --> 00:30:54,110
actually seeing this as really took some

00:30:51,350 --> 00:30:56,150
time to get people really evolved and

00:30:54,110 --> 00:30:59,650
understand that the real benefit of

00:30:56,150 --> 00:31:04,120
using it so I am hoping that we will see

00:30:59,650 --> 00:31:04,120
an even increased 20

00:31:07,250 --> 00:31:10,120
that's it

00:31:11,370 --> 00:31:15,020
unless you have some questions

00:31:23,620 --> 00:31:32,270
so the functional dependency the

00:31:30,080 --> 00:31:34,430
functional dependency pastor mentioning

00:31:32,270 --> 00:31:37,610
do you know if there is any intent to

00:31:34,430 --> 00:31:39,620
use it for improving the for probing

00:31:37,610 --> 00:31:44,680
kind of stuff to like to avoid default

00:31:39,620 --> 00:31:47,900
probing when the best approach from DD

00:31:44,680 --> 00:32:01,970
yeah do you plan to use that top to

00:31:47,900 --> 00:32:05,420
myself oh but sabetha there's no current

00:32:01,970 --> 00:32:07,430
plan to do it all right is there no

00:32:05,420 --> 00:32:10,150
current plan to do it or is that the

00:32:07,430 --> 00:32:10,150
intent of it

00:32:23,879 --> 00:32:26,539
ok

00:32:41,240 --> 00:32:43,300

YouTube URL: https://www.youtube.com/watch?v=2oGtHeXJguE


