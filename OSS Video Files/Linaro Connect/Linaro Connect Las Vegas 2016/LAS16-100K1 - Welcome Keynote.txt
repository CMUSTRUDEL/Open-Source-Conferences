Title: LAS16-100K1 - Welcome Keynote
Publication date: 2016-09-30
Playlist: Linaro Connect Las Vegas 2016
Description: 
	LAS16-100K1: Welcome Keynote 
Speakers: George Grey
Date: September 26, 2016

★ Session Description ★
George Grey, CEO of Linaro will welcome attendees to the conference and give an update on the latest projects taking place at Linaro.

★ Resources ★
Etherpad: pad.linaro.org/p/las16-100k1
Presentations & Videos:  http://connect.linaro.org/resource/las16/las16-100k1/

★ Event Details ★
Linaro Connect Las Vegas 2016 – #LAS16
September 26-30, 2016
http://www.linaro.org
http://connect.linaro.org
Captions: 
	00:00:00,000 --> 00:00:04,560
those of you who are at Bangkok saw this

00:00:02,040 --> 00:00:07,440
slide already our mission is leading

00:00:04,560 --> 00:00:09,990
collaboration in the arm ecosystem this

00:00:07,440 --> 00:00:12,000
is why linaro exists we're trying to

00:00:09,990 --> 00:00:15,059
help all of the arm vandals work

00:00:12,000 --> 00:00:17,670
together and deliver software that

00:00:15,059 --> 00:00:21,930
enables everybody in the community to

00:00:17,670 --> 00:00:25,410
create amazing products we see some

00:00:21,930 --> 00:00:27,390
trends going on in the industry our

00:00:25,410 --> 00:00:30,210
initial focus six years ago when we

00:00:27,390 --> 00:00:33,840
started was in the mobile space but

00:00:30,210 --> 00:00:36,480
today arm has penetrated every single

00:00:33,840 --> 00:00:39,629
market segment across the IT space

00:00:36,480 --> 00:00:42,000
everything from simple sensors and

00:00:39,629 --> 00:00:46,230
controllers that could be out in a field

00:00:42,000 --> 00:00:48,960
measuring water condensation all the way

00:00:46,230 --> 00:00:51,870
to the data center itself and building

00:00:48,960 --> 00:00:54,539
servers that are going to power the next

00:00:51,870 --> 00:00:56,879
generation of the web and it's not just

00:00:54,539 --> 00:00:59,550
arm in everything it's open source

00:00:56,879 --> 00:01:02,309
software everywhere and in every piece

00:00:59,550 --> 00:01:05,309
of equipment that we use and product

00:01:02,309 --> 00:01:09,360
developers across this spectrum are

00:01:05,309 --> 00:01:14,540
looking for multi-vendor device gateway

00:01:09,360 --> 00:01:18,659
and cloud software solutions however

00:01:14,540 --> 00:01:21,000
there is a problem and we all share this

00:01:18,659 --> 00:01:22,799
problem across the industry and I'm

00:01:21,000 --> 00:01:26,280
calling it today the embedded software

00:01:22,799 --> 00:01:28,340
problem and to explain this problem I

00:01:26,280 --> 00:01:33,360
first want to talk about servers briefly

00:01:28,340 --> 00:01:35,880
arm servers just have to work they have

00:01:33,360 --> 00:01:38,850
to work using existing established

00:01:35,880 --> 00:01:41,820
industry standards the software for

00:01:38,850 --> 00:01:44,970
servers is incredibly complex and in

00:01:41,820 --> 00:01:47,509
order to make it work it relies on the

00:01:44,970 --> 00:01:51,210
hardware meeting certain standards and

00:01:47,509 --> 00:01:53,790
arm the linaro Enterprise Group leg and

00:01:51,210 --> 00:01:56,759
the arm server vendors have worked

00:01:53,790 --> 00:01:59,610
really hard to make this happen you can

00:01:56,759 --> 00:02:03,149
take an arm server and just plug it into

00:01:59,610 --> 00:02:06,750
a data center and it will just work that

00:02:03,149 --> 00:02:09,020
is how easy it has to be then we can

00:02:06,750 --> 00:02:11,580
start innovating and differentiating and

00:02:09,020 --> 00:02:12,960
creating products that do amazing things

00:02:11,580 --> 00:02:15,210
with the ARM architecture

00:02:12,960 --> 00:02:17,850
but if it's not based on standards and

00:02:15,210 --> 00:02:20,720
it doesn't run the same software on

00:02:17,850 --> 00:02:23,550
different hardware it will not work and

00:02:20,720 --> 00:02:26,300
the developer cloud which we're going to

00:02:23,550 --> 00:02:29,030
talk about later today demonstrates

00:02:26,300 --> 00:02:32,040
enterprise open source software

00:02:29,030 --> 00:02:35,070
end-to-end running on multiple arm

00:02:32,040 --> 00:02:38,100
server vendor products same software

00:02:35,070 --> 00:02:43,470
same distribution running on different

00:02:38,100 --> 00:02:48,720
vendors hardware but the embedded world

00:02:43,470 --> 00:02:51,000
is different the embedded world every

00:02:48,720 --> 00:02:54,120
single vendor and there are hundreds of

00:02:51,000 --> 00:02:56,460
them have proprietary tools some of them

00:02:54,120 --> 00:02:58,500
require windows some of them require old

00:02:56,460 --> 00:03:01,320
versions of Windows some of them require

00:02:58,500 --> 00:03:04,520
Linux some of them require max there are

00:03:01,320 --> 00:03:07,470
hundreds literally of operating systems

00:03:04,520 --> 00:03:10,710
there are multiple implementations of

00:03:07,470 --> 00:03:12,420
the same standards the Rev endures who

00:03:10,710 --> 00:03:14,370
support the same operating system on

00:03:12,420 --> 00:03:15,900
diff on their their own product that

00:03:14,370 --> 00:03:18,240
they support different versions across

00:03:15,900 --> 00:03:23,970
their product range there are silos

00:03:18,240 --> 00:03:28,010
everywhere why can't embedded devices

00:03:23,970 --> 00:03:31,560
just work as well what does it take to

00:03:28,010 --> 00:03:33,930
have the ability to pick and choose

00:03:31,560 --> 00:03:42,060
across the range of vendors in the

00:03:33,930 --> 00:03:44,250
embedded world linaro our DNA is to work

00:03:42,060 --> 00:03:46,850
together on software platforms that are

00:03:44,250 --> 00:03:48,630
needed by everyone where it's non

00:03:46,850 --> 00:03:51,150
differentiating where it doesn't add

00:03:48,630 --> 00:03:54,390
value there's no point in all of us

00:03:51,150 --> 00:03:57,090
doing it again and again and again we

00:03:54,390 --> 00:03:59,790
need to share the cost of open source

00:03:57,090 --> 00:04:02,670
software development we need to do the

00:03:59,790 --> 00:04:06,270
engineering once not hundreds of times

00:04:02,670 --> 00:04:08,730
and then we can all compete on our value

00:04:06,270 --> 00:04:11,460
add and our differentiation and we can

00:04:08,730 --> 00:04:14,400
use our engineering resource to focus on

00:04:11,460 --> 00:04:15,720
what makes us different not on just

00:04:14,400 --> 00:04:18,859
doing the same thing again and again

00:04:15,720 --> 00:04:21,660
that's an incredible waste of effort and

00:04:18,859 --> 00:04:25,850
as we move into a world of connected

00:04:21,660 --> 00:04:29,200
devices this becomes even more important

00:04:25,850 --> 00:04:33,050
these devices have to just work together

00:04:29,200 --> 00:04:35,390
if they don't if we have to spend time

00:04:33,050 --> 00:04:36,950
in plug fests making them work together

00:04:35,390 --> 00:04:42,050
because they're all based on different

00:04:36,950 --> 00:04:46,070
software we're going to fail and these

00:04:42,050 --> 00:04:48,890
devices have to be secure security is

00:04:46,070 --> 00:04:50,990
not an optional feature and it's not a

00:04:48,890 --> 00:04:52,730
feature that everybody can develop we

00:04:50,990 --> 00:04:54,560
don't have enough security experts in

00:04:52,730 --> 00:04:58,370
the world to cope with a number of

00:04:54,560 --> 00:05:00,410
products we have and these products need

00:04:58,370 --> 00:05:02,150
to be maintained over their lifetime

00:05:00,410 --> 00:05:03,980
without having to return them to the

00:05:02,150 --> 00:05:05,660
factory or worse still throw them away

00:05:03,980 --> 00:05:10,850
because they've got a bug that can't be

00:05:05,660 --> 00:05:13,790
fixed so what do we need to do well

00:05:10,850 --> 00:05:17,000
first we need to come together we need

00:05:13,790 --> 00:05:20,900
to collaborate on this problem we need

00:05:17,000 --> 00:05:23,150
to leverage open source software we need

00:05:20,900 --> 00:05:27,410
to build platforms that we can all work

00:05:23,150 --> 00:05:30,350
on and security and over the we're over

00:05:27,410 --> 00:05:32,720
the wire or over-the-air updates they're

00:05:30,350 --> 00:05:35,980
not an option and they're not value

00:05:32,720 --> 00:05:38,480
adding everybody has to have them and

00:05:35,980 --> 00:05:41,570
we're going to maintain products by

00:05:38,480 --> 00:05:45,110
keeping them updated it's it's not that

00:05:41,570 --> 00:05:46,460
hard a concept certain product segments

00:05:45,110 --> 00:05:50,030
if you think about something like health

00:05:46,460 --> 00:05:53,000
care there are very strict legislation

00:05:50,030 --> 00:05:55,280
it can take years to get a product ready

00:05:53,000 --> 00:05:57,010
to go to market and then that product

00:05:55,280 --> 00:06:00,770
has to be supported over its lifetime

00:05:57,010 --> 00:06:03,230
but if it's connected it might have a

00:06:00,770 --> 00:06:05,900
security flaw we might need to fix it in

00:06:03,230 --> 00:06:08,450
the future we have to face that and we

00:06:05,900 --> 00:06:13,400
have to be able to at any time roll that

00:06:08,450 --> 00:06:17,390
fix out if we can do that we improve

00:06:13,400 --> 00:06:21,290
security we lower costs and we enable

00:06:17,390 --> 00:06:24,010
delivery of new functionality there's a

00:06:21,290 --> 00:06:27,260
company that does this rather well and

00:06:24,010 --> 00:06:30,440
this company brings out a new product

00:06:27,260 --> 00:06:32,960
every year but not only that they make

00:06:30,440 --> 00:06:35,750
sure that the product they released four

00:06:32,960 --> 00:06:37,910
years ago also gets the software update

00:06:35,750 --> 00:06:39,729
and in fact they're continuously

00:06:37,910 --> 00:06:43,629
updating the product for four

00:06:39,729 --> 00:06:45,189
years now to some vendors this doesn't

00:06:43,629 --> 00:06:48,129
seem like a very good idea why would

00:06:45,189 --> 00:06:51,219
anybody buy my new product if I can just

00:06:48,129 --> 00:06:52,509
upgrade my old one well this company i'm

00:06:51,219 --> 00:06:54,099
talking about doesn't seem to have a

00:06:52,509 --> 00:06:57,699
problem every time they bring out a new

00:06:54,099 --> 00:06:59,650
product they can't make enough and why

00:06:57,699 --> 00:07:01,389
is that it's because they're delivering

00:06:59,650 --> 00:07:03,039
an excellent user experience and they're

00:07:01,389 --> 00:07:05,559
delivering new functionality and new

00:07:03,039 --> 00:07:08,050
innovation and all of those phones that

00:07:05,559 --> 00:07:10,120
people replace they're going to somebody

00:07:08,050 --> 00:07:12,279
else they're not being thrown away

00:07:10,120 --> 00:07:14,680
because they're old they're being used

00:07:12,279 --> 00:07:17,259
for that product lifetime of four plus

00:07:14,680 --> 00:07:19,589
years some people still have the

00:07:17,259 --> 00:07:22,689
original iphone and are still using it

00:07:19,589 --> 00:07:25,180
so this is extending product life it's

00:07:22,689 --> 00:07:30,759
good for the environment but it's still

00:07:25,180 --> 00:07:34,210
allowing innovation so why don't we aim

00:07:30,759 --> 00:07:37,960
to do this with open source software for

00:07:34,210 --> 00:07:42,219
all connected devices why don't we

00:07:37,960 --> 00:07:44,740
create a platform that enables this for

00:07:42,219 --> 00:07:50,039
the smaller sensor to the most complex

00:07:44,740 --> 00:07:53,289
device that's what I think we need to do

00:07:50,039 --> 00:07:56,139
in order to get there we've been working

00:07:53,289 --> 00:07:58,629
for a while now on a concept of a

00:07:56,139 --> 00:08:01,479
reference platform and this is an

00:07:58,629 --> 00:08:04,120
end-to-end open source reference

00:08:01,479 --> 00:08:06,580
software platform that is not about a

00:08:04,120 --> 00:08:10,180
particular distribution its distribution

00:08:06,580 --> 00:08:11,589
agnostic it includes firmware it

00:08:10,180 --> 00:08:13,839
includes colonel it includes

00:08:11,589 --> 00:08:16,300
distribution middleware and sample

00:08:13,839 --> 00:08:19,089
applications and it's built on upstream

00:08:16,300 --> 00:08:21,430
technology and our goals for this

00:08:19,089 --> 00:08:23,800
program is product quality it's not just

00:08:21,430 --> 00:08:26,259
for developers our goals are to get this

00:08:23,800 --> 00:08:28,899
the quality of these products to where

00:08:26,259 --> 00:08:31,870
they can be used directly an end-user

00:08:28,899 --> 00:08:34,240
products now we're not trying to

00:08:31,870 --> 00:08:36,699
commoditize everybody but we're trying

00:08:34,240 --> 00:08:39,099
to create a platform that everybody can

00:08:36,699 --> 00:08:42,190
use as the starting point for their

00:08:39,099 --> 00:08:43,779
products and though those platforms have

00:08:42,190 --> 00:08:48,250
to have certain features built-in

00:08:43,779 --> 00:08:49,720
security over-the-air updates just build

00:08:48,250 --> 00:08:51,310
them into the platform and then we don't

00:08:49,720 --> 00:08:53,050
have to worry about them if I'm a light

00:08:51,310 --> 00:08:55,750
bulb manufacturer

00:08:53,050 --> 00:08:57,700
don't have to worry about the security

00:08:55,750 --> 00:08:59,230
software because it's already built into

00:08:57,700 --> 00:09:02,830
the core platform as long as I don't

00:08:59,230 --> 00:09:06,730
change it it should just work and coming

00:09:02,830 --> 00:09:09,310
soon you'll see IOT device networking

00:09:06,730 --> 00:09:12,820
digital home IOT gateway reference

00:09:09,310 --> 00:09:16,450
platforms and a lot more focus on

00:09:12,820 --> 00:09:18,310
testing validation and quality we're

00:09:16,450 --> 00:09:21,940
going to be introducing a reference

00:09:18,310 --> 00:09:24,339
platform certified program for 96 boards

00:09:21,940 --> 00:09:27,220
to enable those boards to be used in

00:09:24,339 --> 00:09:28,959
test farms that we can control to do a

00:09:27,220 --> 00:09:33,339
very high level of testing on these

00:09:28,959 --> 00:09:35,380
reference platforms so I'd like to do a

00:09:33,339 --> 00:09:39,730
very quick tour over the next 30 minutes

00:09:35,380 --> 00:09:41,709
of the linaro segment groups and first

00:09:39,730 --> 00:09:44,380
I'm very pleased today to actually

00:09:41,709 --> 00:09:47,130
publicly launch light that we first

00:09:44,380 --> 00:09:50,800
started talking about at last connect

00:09:47,130 --> 00:09:53,470
like the linaro IOT an embedded segment

00:09:50,800 --> 00:09:56,110
group is now the fifth segment group

00:09:53,470 --> 00:09:58,240
that linaro has started were publicly

00:09:56,110 --> 00:10:01,470
launching it today with an end-to-end

00:09:58,240 --> 00:10:05,050
focus on the Internet of Things and

00:10:01,470 --> 00:10:10,390
initial members include arm canonical

00:10:05,050 --> 00:10:14,110
Huawei nxp rd a red hat spread from st

00:10:10,390 --> 00:10:16,920
TI and ZTE some of our existing members

00:10:14,110 --> 00:10:16,920
and sinew

00:10:19,230 --> 00:10:26,800
and I can tell you that this is not the

00:10:24,250 --> 00:10:28,740
end of the list we have a number of

00:10:26,800 --> 00:10:32,050
companies who we're in discussions with

00:10:28,740 --> 00:10:34,030
that we expect to join light in the very

00:10:32,050 --> 00:10:35,740
near future and my my personal

00:10:34,030 --> 00:10:37,930
expectation is the light will very

00:10:35,740 --> 00:10:43,150
shortly become one of our largest groups

00:10:37,930 --> 00:10:45,250
very exciting before I talk a little bit

00:10:43,150 --> 00:10:47,260
about what we've been doing in light to

00:10:45,250 --> 00:10:48,970
date even though we haven't announced it

00:10:47,260 --> 00:10:52,780
until today I'm going to ask mark

00:10:48,970 --> 00:10:54,460
Hambleton the arm director of software

00:10:52,780 --> 00:10:56,320
engineering for the systems and software

00:10:54,460 --> 00:10:58,870
group to come up and give you a little

00:10:56,320 --> 00:11:11,800
bit of arms perspective on embedded and

00:10:58,870 --> 00:11:13,720
light mark thank you George unlike some

00:11:11,800 --> 00:11:15,970
people I don't need a bowl of eminem's

00:11:13,720 --> 00:11:22,120
to get me on stage I actually need this

00:11:15,970 --> 00:11:24,190
picture people from arm have seen me do

00:11:22,120 --> 00:11:26,560
a presentation based around this one

00:11:24,190 --> 00:11:28,120
before this is a cut-down version so

00:11:26,560 --> 00:11:31,180
hopefully everybody will stay awake

00:11:28,120 --> 00:11:35,170
through it so it goes a bit like this

00:11:31,180 --> 00:11:37,750
and so science fiction I'm sure we're

00:11:35,170 --> 00:11:40,900
all aware of it can give us some really

00:11:37,750 --> 00:11:42,760
clear views of what's at stake to happen

00:11:40,900 --> 00:11:46,930
in the future plays on our hopes and

00:11:42,760 --> 00:11:52,390
fears in general in this film from 1984

00:11:46,930 --> 00:11:54,070
the Terminator we see a robot that kind

00:11:52,390 --> 00:11:58,180
of goes rogue but is actually obeying

00:11:54,070 --> 00:12:00,880
its programming in the sequel we see

00:11:58,180 --> 00:12:02,710
that robot reboot and it boots into an

00:12:00,880 --> 00:12:06,160
operating system that looks actually a

00:12:02,710 --> 00:12:08,140
lot like Linux when you actually look as

00:12:06,160 --> 00:12:11,950
Thomas mulgar did sat in the front row

00:12:08,140 --> 00:12:13,720
you see that it's running an operating

00:12:11,950 --> 00:12:16,780
system whose version is for dot one dot

00:12:13,720 --> 00:12:18,810
15 now for the Linux geeks in the

00:12:16,780 --> 00:12:22,870
audience that version was released in

00:12:18,810 --> 00:12:27,090
December last year ok so this robot was

00:12:22,870 --> 00:12:30,670
from 20-29 that software was from 2015

00:12:27,090 --> 00:12:31,750
so that robot was running 14 year old

00:12:30,670 --> 00:12:35,590
software

00:12:31,750 --> 00:12:37,780
is it any wonder that John Connor could

00:12:35,590 --> 00:12:42,070
reprogram that thing and send it back to

00:12:37,780 --> 00:12:49,720
protect his mother anybody see a problem

00:12:42,070 --> 00:12:53,980
with that so as you all know I'm getting

00:12:49,720 --> 00:12:55,810
old gracefully so this is actually a

00:12:53,980 --> 00:12:58,150
picture of a circular knitting machine

00:12:55,810 --> 00:13:00,280
that I worked on probably 20 25 years

00:12:58,150 --> 00:13:02,290
ago I know there's at least one person

00:13:00,280 --> 00:13:05,650
in the audience that seen this because

00:13:02,290 --> 00:13:09,040
he was part of the team that software

00:13:05,650 --> 00:13:11,830
today at that device we running the same

00:13:09,040 --> 00:13:14,620
software we wrote 20 years ago still

00:13:11,830 --> 00:13:17,260
working not updated still with all the

00:13:14,620 --> 00:13:20,380
same security flaws it's a

00:13:17,260 --> 00:13:22,480
safety-critical machine right it it has

00:13:20,380 --> 00:13:25,480
many many hundreds of pairs of knitting

00:13:22,480 --> 00:13:27,130
needles doesn't sound for that fatal but

00:13:25,480 --> 00:13:31,240
trust me when it goes wrong it does go

00:13:27,130 --> 00:13:33,720
wrong quite spectacularly now modern

00:13:31,240 --> 00:13:36,930
embedded looks a bit different you know

00:13:33,720 --> 00:13:41,710
designed for safety updates in the field

00:13:36,930 --> 00:13:43,480
on a on a continual basis but that's not

00:13:41,710 --> 00:13:45,910
necessarily true of everything that we

00:13:43,480 --> 00:13:47,500
see and people have seen this slide

00:13:45,910 --> 00:13:51,100
before notice that there's a teddy bear

00:13:47,500 --> 00:13:54,010
there there are a lot of embedded

00:13:51,100 --> 00:13:56,110
devices that are becoming you know smart

00:13:54,010 --> 00:13:58,900
but have the same problems as that

00:13:56,110 --> 00:14:01,060
knitting machine running stale software

00:13:58,900 --> 00:14:03,310
with security flaws that haven't been

00:14:01,060 --> 00:14:09,130
updated and are actually not possible to

00:14:03,310 --> 00:14:10,420
update so today's requirements for

00:14:09,130 --> 00:14:13,560
embedded are actually subtly different

00:14:10,420 --> 00:14:15,940
to those requirements 20 years ago

00:14:13,560 --> 00:14:19,210
security needs to be at the heart of

00:14:15,940 --> 00:14:23,500
every embedded device and for security

00:14:19,210 --> 00:14:25,390
to be correct you actually need to build

00:14:23,500 --> 00:14:28,510
in maintainability so that you can

00:14:25,390 --> 00:14:30,850
update when you find flaws not if right

00:14:28,510 --> 00:14:33,930
I'm a software guy I will admit that

00:14:30,850 --> 00:14:38,530
there are occasionally bugs in software

00:14:33,930 --> 00:14:41,610
occasionally and as we get from that

00:14:38,530 --> 00:14:43,630
robot that we saw a few minutes ago

00:14:41,610 --> 00:14:45,610
safety is becoming more and more

00:14:43,630 --> 00:14:48,550
important in every embedded device

00:14:45,610 --> 00:14:50,529
that we build whether it be an actuation

00:14:48,550 --> 00:14:53,410
device or just something that sat on

00:14:50,529 --> 00:14:55,540
your wrist okay so we need to make sure

00:14:53,410 --> 00:14:58,480
that we cover all three of those bases

00:14:55,540 --> 00:15:00,100
and maintainability the block the box in

00:14:58,480 --> 00:15:07,390
the middle is the thing that underpins

00:15:00,100 --> 00:15:11,350
all three okay so what does a Fitbit and

00:15:07,390 --> 00:15:14,140
a Tesla have in common well it's easy

00:15:11,350 --> 00:15:16,540
both of them were design from the start

00:15:14,140 --> 00:15:20,470
with update ability and service delivery

00:15:16,540 --> 00:15:22,959
at their heart okay why is that

00:15:20,470 --> 00:15:25,390
important well they're actually a good

00:15:22,959 --> 00:15:28,959
example of what we now expect to see in

00:15:25,390 --> 00:15:30,850
every embedded product a lifetime of

00:15:28,959 --> 00:15:32,920
updates just as George was mentioning

00:15:30,850 --> 00:15:36,670
earlier from that smartphone model a

00:15:32,920 --> 00:15:39,459
service connect a service offering

00:15:36,670 --> 00:15:42,100
updates to the features as well it's

00:15:39,459 --> 00:15:45,640
what gets users bought into that product

00:15:42,100 --> 00:15:47,649
line which is why that's important OEMs

00:15:45,640 --> 00:15:49,720
are going to start to demand that every

00:15:47,649 --> 00:15:51,579
single one of our embedded devices in

00:15:49,720 --> 00:15:54,160
the future so it's not just going to be

00:15:51,579 --> 00:15:56,680
the Tesla's of this world that are going

00:15:54,160 --> 00:16:00,399
to provide you this evolving experience

00:15:56,680 --> 00:16:03,820
it's going to be everything why is it

00:16:00,399 --> 00:16:06,730
important continuous updates of software

00:16:03,820 --> 00:16:08,290
costs so the harder it is to maintain

00:16:06,730 --> 00:16:11,290
the code that's running on those devices

00:16:08,290 --> 00:16:18,730
the more your costs go up and the less

00:16:11,290 --> 00:16:19,959
viable your products will be so I hope

00:16:18,730 --> 00:16:21,519
you're all aware that the ARM

00:16:19,959 --> 00:16:24,370
architecture is not just about the

00:16:21,519 --> 00:16:26,470
cortex a all right cortex a is what we

00:16:24,370 --> 00:16:29,199
find in our smartphones in our servers

00:16:26,470 --> 00:16:31,209
it's optimized for those rich operating

00:16:29,199 --> 00:16:34,540
systems high-performance computers at

00:16:31,209 --> 00:16:38,920
its best but there are actually three

00:16:34,540 --> 00:16:42,720
profiles in the ARM architecture the the

00:16:38,920 --> 00:16:45,640
ARM Cortex a profile as I've just said

00:16:42,720 --> 00:16:49,360
the our profile which is optimized for

00:16:45,640 --> 00:16:51,550
real-time safety-critical devices so

00:16:49,360 --> 00:16:55,180
real high performance real time systems

00:16:51,550 --> 00:16:59,209
and then there's the cortex an optimized

00:16:55,180 --> 00:17:01,790
for low power very very small devices

00:16:59,209 --> 00:17:04,250
I think we're all familiar with the

00:17:01,790 --> 00:17:06,199
cortex a let's take a little bit a

00:17:04,250 --> 00:17:10,520
little bit of a look at the the cortex

00:17:06,199 --> 00:17:14,390
are or the arm v8 our architecture so

00:17:10,520 --> 00:17:17,299
v8r is built on v7r that's quite

00:17:14,390 --> 00:17:20,209
convenient it builds on a long legacy of

00:17:17,299 --> 00:17:21,919
real-time processors but VA tile is

00:17:20,209 --> 00:17:24,199
important because it introduces

00:17:21,919 --> 00:17:26,600
bare-metal hypervisor xin to that into

00:17:24,199 --> 00:17:29,600
those real time cause enabling you to

00:17:26,600 --> 00:17:33,429
separate safety-critical processing from

00:17:29,600 --> 00:17:36,260
your rest of the world applications and

00:17:33,429 --> 00:17:37,970
those eagle-eyed people amongst you and

00:17:36,260 --> 00:17:42,500
will have noticed that we release the

00:17:37,970 --> 00:17:45,260
cortex r32 last week right that's a our

00:17:42,500 --> 00:17:49,580
first v8 our profile core I encourage

00:17:45,260 --> 00:17:54,440
you to go and have a look we've also

00:17:49,580 --> 00:17:56,980
just introduced vm on vm for real-time

00:17:54,440 --> 00:17:59,470
deterministic embedded processing

00:17:56,980 --> 00:18:02,240
important thing about about this

00:17:59,470 --> 00:18:04,880
architecture release is that we we're

00:18:02,240 --> 00:18:07,640
actually building in trustzone now to

00:18:04,880 --> 00:18:09,950
make deploying security in your embedded

00:18:07,640 --> 00:18:12,470
device is easier so we've now got the

00:18:09,950 --> 00:18:15,710
the extra security features of trustzone

00:18:12,470 --> 00:18:20,740
embedded into small energy sipping

00:18:15,710 --> 00:18:25,510
devices why are we talking about that

00:18:20,740 --> 00:18:29,779
well as I said common software is vital

00:18:25,510 --> 00:18:32,179
any bit of differentiation is actually

00:18:29,779 --> 00:18:34,850
cost all right so every single line of

00:18:32,179 --> 00:18:40,210
code that you write that specific to

00:18:34,850 --> 00:18:40,210
your product is actually cost first

00:18:41,080 --> 00:18:49,760
music playing so only differentiate

00:18:47,809 --> 00:18:51,649
where there's value has got to be the

00:18:49,760 --> 00:18:56,690
the key message that we're presenting

00:18:51,649 --> 00:18:59,690
here so what I really mean here is not

00:18:56,690 --> 00:19:02,330
use Linux most people think you know

00:18:59,690 --> 00:19:05,120
using common software is use Linux what

00:19:02,330 --> 00:19:06,590
I mean is look really carefully at all

00:19:05,120 --> 00:19:08,659
of the operating systems that you're

00:19:06,590 --> 00:19:10,309
planning to use look at the hardware

00:19:08,659 --> 00:19:12,230
that supported out of the box in those

00:19:10,309 --> 00:19:12,980
operating systems and think really

00:19:12,230 --> 00:19:14,780
carefully

00:19:12,980 --> 00:19:16,880
for you do something else all right

00:19:14,780 --> 00:19:18,559
because every single line of code you

00:19:16,880 --> 00:19:22,130
have to write is going to cost you in

00:19:18,559 --> 00:19:24,169
the end so use standard configurations

00:19:22,130 --> 00:19:25,790
so arm we've got a number of standard

00:19:24,169 --> 00:19:28,490
configurations that we're pushing and

00:19:25,790 --> 00:19:30,020
there are also other platforms based on

00:19:28,490 --> 00:19:31,940
the ARM architecture that I've got dude

00:19:30,020 --> 00:19:33,700
upstream support look at what they're

00:19:31,940 --> 00:19:36,290
doing and see if that meets your needs

00:19:33,700 --> 00:19:38,480
what we've really got to do is make sure

00:19:36,290 --> 00:19:40,280
that it's easy for software developers

00:19:38,480 --> 00:19:41,690
to land software on your hardware

00:19:40,280 --> 00:19:48,110
because that's going to be the thing to

00:19:41,690 --> 00:19:49,270
the key to controlling your costs but

00:19:48,110 --> 00:19:51,350
the other thing is actually

00:19:49,270 --> 00:19:53,660
collaborating on the development of that

00:19:51,350 --> 00:19:56,299
software is that is vital to controlling

00:19:53,660 --> 00:19:58,700
your software costs right and that's why

00:19:56,299 --> 00:20:00,140
we think light is a really important

00:19:58,700 --> 00:20:03,590
collaboration vehicle for the ARM

00:20:00,140 --> 00:20:06,530
architecture linares delivered great

00:20:03,590 --> 00:20:11,120
value in the other segments that they've

00:20:06,530 --> 00:20:13,250
been operating in so leg LNG lhg LNG and

00:20:11,120 --> 00:20:17,799
we think light is the natural successor

00:20:13,250 --> 00:20:20,690
of the natural if evolution of of linaro

00:20:17,799 --> 00:20:23,240
so we welcome the idea that linaro is

00:20:20,690 --> 00:20:25,880
now working in the cortex a space in the

00:20:23,240 --> 00:20:28,490
cortex M space in in the embedded

00:20:25,880 --> 00:20:33,710
segment and maybe sometime in the future

00:20:28,490 --> 00:20:36,890
cortex are who knows but what I want

00:20:33,710 --> 00:20:39,350
everybody to think in this room is how

00:20:36,890 --> 00:20:41,570
they would answer these questions how

00:20:39,350 --> 00:20:43,040
are we building in security to the heart

00:20:41,570 --> 00:20:44,540
of the products that we're working on

00:20:43,040 --> 00:20:47,720
and that's something that George is

00:20:44,540 --> 00:20:51,230
already mentioned here how are we

00:20:47,720 --> 00:20:53,330
lowering our product lifecycle costs key

00:20:51,230 --> 00:20:56,210
here is made using maintainable software

00:20:53,330 --> 00:20:58,880
and how are you addressing the growing

00:20:56,210 --> 00:21:01,510
needs of functional safety that's why

00:20:58,880 --> 00:21:07,190
we've started talking about the the new

00:21:01,510 --> 00:21:11,410
cortex are and v8 our announcements and

00:21:07,190 --> 00:21:11,410
that's it from me thank you very much

00:21:16,330 --> 00:21:23,300
thanks very much indeed mark so I want

00:21:21,290 --> 00:21:26,120
to talk a little bit about the progress

00:21:23,300 --> 00:21:27,890
we've made so far in light and our plans

00:21:26,120 --> 00:21:30,380
and we've been fortunate enough that

00:21:27,890 --> 00:21:31,940
some of our existing members have

00:21:30,380 --> 00:21:35,600
already contributed some assignee

00:21:31,940 --> 00:21:39,770
engineers enabling us to start the light

00:21:35,600 --> 00:21:43,190
effort matlock is the director of the

00:21:39,770 --> 00:21:44,840
light group and also linaro some of you

00:21:43,190 --> 00:21:47,330
may have noticed has joined the Zephyr

00:21:44,840 --> 00:21:49,309
project which is a linux foundation

00:21:47,330 --> 00:21:53,080
project we've joined it as a platinum

00:21:49,309 --> 00:21:56,300
member alongside intel synopsis and nxp

00:21:53,080 --> 00:21:58,040
we are using Zephyr as a neutral

00:21:56,300 --> 00:22:00,530
delivery vehicle for a lot of the

00:21:58,040 --> 00:22:03,820
technology that we're doing Kumar gala

00:22:00,530 --> 00:22:07,820
the tech lead for light is already

00:22:03,820 --> 00:22:10,610
maintaining arm architecture in Zephyr

00:22:07,820 --> 00:22:14,090
and linaro has started making upstream

00:22:10,610 --> 00:22:16,280
contributions to this project within

00:22:14,090 --> 00:22:17,929
light you will find the steering

00:22:16,280 --> 00:22:21,679
committee meetings this week there are

00:22:17,929 --> 00:22:24,580
also sessions and we are exploring the

00:22:21,679 --> 00:22:28,820
needs of the members and the community

00:22:24,580 --> 00:22:31,550
in smart devices so high-end cortex m's

00:22:28,820 --> 00:22:33,590
running zephyr or embed and so on or

00:22:31,550 --> 00:22:36,559
other operating systems and low-end

00:22:33,590 --> 00:22:38,690
cortex A's running Linux there's a

00:22:36,559 --> 00:22:40,970
concentration here on connectivity and

00:22:38,690 --> 00:22:43,580
perhaps depending on the application

00:22:40,970 --> 00:22:45,860
small you eyes and then obviously

00:22:43,580 --> 00:22:50,059
there's a focus on small footprint and

00:22:45,860 --> 00:22:53,530
low power consumption also today we're

00:22:50,059 --> 00:22:58,760
introducing the 96 boards IOT edition

00:22:53,530 --> 00:23:02,300
this is a small form-factor board tiny

00:22:58,760 --> 00:23:06,650
size minimum mandatory functionality a

00:23:02,300 --> 00:23:09,410
cortex-m MCU minimum m0 with a certain

00:23:06,650 --> 00:23:11,840
minimum in terms of memory and flash and

00:23:09,410 --> 00:23:14,570
a USB port for power and communications

00:23:11,840 --> 00:23:17,300
we're also introducing as well as the

00:23:14,570 --> 00:23:19,190
existing standard 96 boards expansion

00:23:17,300 --> 00:23:21,169
connector which is a 1.8 volt signal

00:23:19,190 --> 00:23:23,450
level connector we're introducing a new

00:23:21,169 --> 00:23:25,850
connector for microcontrollers on

00:23:23,450 --> 00:23:28,309
processes that require 3.3 or high of

00:23:25,850 --> 00:23:31,460
voltage and there are two profiles for

00:23:28,309 --> 00:23:34,669
the IOT edition and to board sizes both

00:23:31,460 --> 00:23:36,500
for cortex RM and then for cortex a so I

00:23:34,669 --> 00:23:39,620
encourage you to review this

00:23:36,500 --> 00:23:42,260
specification provide comments it's on

00:23:39,620 --> 00:23:44,840
the website today and we're pretty

00:23:42,260 --> 00:23:48,740
excited by what companies can do with

00:23:44,840 --> 00:23:52,760
this in fact we've already started we've

00:23:48,740 --> 00:23:55,549
worked with a partner seed in China to

00:23:52,760 --> 00:23:58,039
develop a board that we are using for

00:23:55,549 --> 00:24:02,330
our own internal purposes already this

00:23:58,039 --> 00:24:06,890
uses a st micro cortex for EM for EM see

00:24:02,330 --> 00:24:08,840
you we have a bluetooth on board which

00:24:06,890 --> 00:24:10,970
is a nordic controller with a chip

00:24:08,840 --> 00:24:13,789
antenna and we're going to show you this

00:24:10,970 --> 00:24:16,070
board a little bit later and in fact

00:24:13,789 --> 00:24:19,490
anybody who wants one who is here today

00:24:16,070 --> 00:24:20,750
will be able to pick one up later but

00:24:19,490 --> 00:24:24,950
please make sure you only pick it up

00:24:20,750 --> 00:24:29,299
with you're going to use it i'm going to

00:24:24,950 --> 00:24:30,590
now ask yang to come up in a little

00:24:29,299 --> 00:24:34,580
while but we're just going to show some

00:24:30,590 --> 00:24:36,710
video from him in the meantime the

00:24:34,580 --> 00:24:38,210
reason why we did this board is that we

00:24:36,710 --> 00:24:40,520
believe this is actually a good

00:24:38,210 --> 00:24:44,390
demonstration of how easy it is to

00:24:40,520 --> 00:24:46,340
design a 96 ports hard well with all

00:24:44,390 --> 00:24:49,340
sorts of different appearances which we

00:24:46,340 --> 00:24:51,620
know there are many to count so analysis

00:24:49,340 --> 00:24:53,929
sports initiative is a first and the

00:24:51,620 --> 00:24:57,140
only associate independent specification

00:24:53,929 --> 00:25:00,320
earlier it is designed with in mind to

00:24:57,140 --> 00:25:02,240
allow the developers have accessed the

00:25:00,320 --> 00:25:05,090
latest and greatest slc a technology

00:25:02,240 --> 00:25:07,220
with the standard form factor now we're

00:25:05,090 --> 00:25:08,809
pushing out 96 for our Tea specification

00:25:07,220 --> 00:25:12,010
apart from enterprise and consumer

00:25:08,809 --> 00:25:14,450
edition and also we are seeing a large

00:25:12,010 --> 00:25:16,250
participation from the community who are

00:25:14,450 --> 00:25:20,200
designing Matheny's and software

00:25:16,250 --> 00:25:20,200
solution you know all nanotech sports

00:25:21,340 --> 00:25:27,620
okay so it's not only cortex-m i

00:25:24,679 --> 00:25:30,289
mentioned that the 96 board

00:25:27,620 --> 00:25:34,070
specification also allowed for cortex a

00:25:30,289 --> 00:25:36,080
and very shortly you will be able to buy

00:25:34,070 --> 00:25:39,059
from the orange pi organization a

00:25:36,080 --> 00:25:40,350
product called orange pie I 96

00:25:39,059 --> 00:25:44,100
this is interesting because it has a

00:25:40,350 --> 00:25:46,860
low-end cortex a 32-bit device but it

00:25:44,100 --> 00:25:50,279
has integrated two gigabytes of ram and

00:25:46,860 --> 00:25:53,669
4 gigabytes of flash and it has Wi-Fi

00:25:50,279 --> 00:25:56,249
and a CSI Cameron's face on it we can't

00:25:53,669 --> 00:25:58,019
wait to see what developers are going to

00:25:56,249 --> 00:26:00,179
do with this in the areas of vision and

00:25:58,019 --> 00:26:02,220
recognition systems and robotics and so

00:26:00,179 --> 00:26:04,409
on and the amazing thing about this

00:26:02,220 --> 00:26:07,499
board is its price which is going to be

00:26:04,409 --> 00:26:08,730
less than ten dollars so we're looking

00:26:07,499 --> 00:26:15,690
forward to seeing what you all do with

00:26:08,730 --> 00:26:19,830
that finally light is as I said at the

00:26:15,690 --> 00:26:23,190
beginning working end to end one of the

00:26:19,830 --> 00:26:24,960
things that we've particularly looked at

00:26:23,190 --> 00:26:28,399
with members and potential members of

00:26:24,960 --> 00:26:32,639
light is around IOT gateways and today

00:26:28,399 --> 00:26:34,409
the Gateway market is complex there are

00:26:32,639 --> 00:26:37,649
many many gateways there's kind of one

00:26:34,409 --> 00:26:40,379
gateway per client product and and

00:26:37,649 --> 00:26:42,210
that's clearly ludicrous all of these

00:26:40,379 --> 00:26:44,279
gateways talk ultimately to the same

00:26:42,210 --> 00:26:45,869
wireless standards or a multiplicity of

00:26:44,279 --> 00:26:48,629
aulit wireless standards but they're all

00:26:45,869 --> 00:26:51,809
doing the same thing but you need to

00:26:48,629 --> 00:26:56,509
cater for each vendors own proprietary

00:26:51,809 --> 00:26:59,809
protocols and David rustling our CTO

00:26:56,509 --> 00:27:02,279
matlock and others in the light project

00:26:59,809 --> 00:27:04,860
we have a vision in linaro for a

00:27:02,279 --> 00:27:07,769
universal gateway that uses containers

00:27:04,860 --> 00:27:10,200
to segment the different protocols and

00:27:07,769 --> 00:27:12,240
the different vendor software and

00:27:10,200 --> 00:27:14,220
effectively have a universal gateway

00:27:12,240 --> 00:27:16,980
concept that will connect to multiple

00:27:14,220 --> 00:27:20,519
devices and connect them back for both

00:27:16,980 --> 00:27:23,820
industrial and consumer applications so

00:27:20,519 --> 00:27:27,480
one of the projects that light is taking

00:27:23,820 --> 00:27:29,759
on is the IOT gateway we are planning to

00:27:27,480 --> 00:27:32,039
develop technology to deliver a

00:27:29,759 --> 00:27:33,480
reference gateway project and I

00:27:32,039 --> 00:27:35,340
encourage you to attend the relevant

00:27:33,480 --> 00:27:36,889
sessions later this week if this is

00:27:35,340 --> 00:27:39,570
something that is of interest to you I'm

00:27:36,889 --> 00:27:43,559
particularly pleased the two of our

00:27:39,570 --> 00:27:46,320
major partners are canonical and redhat

00:27:43,559 --> 00:27:48,570
are joining this project because this is

00:27:46,320 --> 00:27:50,960
clearly an area of interest interest for

00:27:48,570 --> 00:27:50,960
the whole industry

00:27:51,340 --> 00:27:57,700
okay so that's light and now want to

00:27:54,430 --> 00:28:00,880
move on to lmg the linaro mobile group

00:27:57,700 --> 00:28:03,370
and lmg quietly in the background has

00:28:00,880 --> 00:28:05,050
been actually growing we have an

00:28:03,370 --> 00:28:08,590
increasing number of member engineers

00:28:05,050 --> 00:28:10,680
assigned to lmg and tanggal has led the

00:28:08,590 --> 00:28:14,200
team that's doing a lot of work on AOSP

00:28:10,680 --> 00:28:16,210
optimization we are seeing typically ten

00:28:14,200 --> 00:28:19,960
to fifteen percent performance

00:28:16,210 --> 00:28:25,990
improvement it over AOSP in the member

00:28:19,960 --> 00:28:28,990
iolair those optimizations are fed back

00:28:25,990 --> 00:28:32,560
into a OSP for the next version of

00:28:28,990 --> 00:28:35,560
android we also talked last time about

00:28:32,560 --> 00:28:39,340
how the Heike 96 boards product is now

00:28:35,560 --> 00:28:42,550
supported in the AOSP tree that has made

00:28:39,340 --> 00:28:44,380
life a lot easier for developers because

00:28:42,550 --> 00:28:46,810
they're now able to use a community

00:28:44,380 --> 00:28:50,050
board to work on Android in adjacent

00:28:46,810 --> 00:28:52,960
markets i'm also really pleased to see

00:28:50,050 --> 00:28:56,350
not only older chips but also the very

00:28:52,960 --> 00:28:58,180
latest mobile chips being put onto 96

00:28:56,350 --> 00:29:00,130
boards so that they are accessible to

00:28:58,180 --> 00:29:02,890
LMG into the rest of the community and

00:29:00,130 --> 00:29:05,860
as an example mediatek recently

00:29:02,890 --> 00:29:09,940
introduced the x20 board which is a ten

00:29:05,860 --> 00:29:13,720
core three cluster cortex a 7253 with

00:29:09,940 --> 00:29:14,860
Marley T 880 so fast graphics and

00:29:13,720 --> 00:29:19,720
they're going to talk more about that

00:29:14,860 --> 00:29:23,350
tomorrow new initiatives in lmg include

00:29:19,720 --> 00:29:25,930
art performance codec 2.0 looking at

00:29:23,350 --> 00:29:28,510
open pop open fast path networking for

00:29:25,930 --> 00:29:30,810
the kernel and some effort that's been

00:29:28,510 --> 00:29:34,390
going on for a while now within linaro

00:29:30,810 --> 00:29:38,020
as a collaboration between the office of

00:29:34,390 --> 00:29:40,240
the CTO and lmg on reducing vendor out

00:29:38,020 --> 00:29:42,850
of tree patches both in kernel and user

00:29:40,240 --> 00:29:45,970
space and to talk a little bit about

00:29:42,850 --> 00:29:47,800
this i'm going to ask rob herring from

00:29:45,970 --> 00:29:51,030
the CTO office to come up and show you

00:29:47,800 --> 00:29:51,030
some of the things that he's been doing

00:29:52,380 --> 00:29:55,740
thank you George

00:30:00,140 --> 00:30:04,830
so I've been working on the Android

00:30:02,850 --> 00:30:09,420
health and solid ation initiative with

00:30:04,830 --> 00:30:11,790
the lmg team it's a broadly defined

00:30:09,420 --> 00:30:17,010
project with a small team on it at the

00:30:11,790 --> 00:30:20,220
moment we've been looking at and working

00:30:17,010 --> 00:30:22,980
on graphics and display as well as a

00:30:20,220 --> 00:30:29,820
single device target to support multiple

00:30:22,980 --> 00:30:31,890
platforms the single device target is

00:30:29,820 --> 00:30:34,350
something approach we used on the kernel

00:30:31,890 --> 00:30:38,970
for Colonel consolidation so we're

00:30:34,350 --> 00:30:44,490
trying to reuse that approach here we

00:30:38,970 --> 00:30:46,190
knew that with with Android devices it's

00:30:44,490 --> 00:30:51,390
very important to have the tunability

00:30:46,190 --> 00:30:54,660
for capability and we also want to have

00:30:51,390 --> 00:30:58,010
the all-in-one capability so we needed a

00:30:54,660 --> 00:31:01,290
configuration system and for that we use

00:30:58,010 --> 00:31:04,590
cake config which started in the kernel

00:31:01,290 --> 00:31:10,169
is now used in a variety of projects

00:31:04,590 --> 00:31:12,410
like you boot and Zephyr so let me show

00:31:10,169 --> 00:31:12,410
you that

00:31:27,299 --> 00:31:44,159
so I have my device target here I just

00:31:29,309 --> 00:31:48,029
run menu config so you can select device

00:31:44,159 --> 00:31:53,669
type right now it's tablet or TV variety

00:31:48,029 --> 00:31:55,470
of image configuration options as well

00:31:53,669 --> 00:32:07,139
as what hardware support you want to

00:31:55,470 --> 00:32:11,850
enable so that's the k config next I'm

00:32:07,139 --> 00:32:14,909
going to show one of the targets we've

00:32:11,850 --> 00:32:19,289
been using which is an x86 build of our

00:32:14,909 --> 00:32:27,289
target running QAM you this is all

00:32:19,289 --> 00:32:27,289
mainline kernel qemu and android

00:32:31,610 --> 00:32:37,100
so when the neat features here i'm using

00:32:33,679 --> 00:32:39,350
of qemu is USB device passed through so

00:32:37,100 --> 00:32:43,309
i have a USB Wi-Fi dongle on my laptop

00:32:39,350 --> 00:32:50,980
here I've assigned it into the to the

00:32:43,309 --> 00:33:05,630
guest and I can go and test Wi-Fi on in

00:32:50,980 --> 00:33:07,960
my vm there's access points this also

00:33:05,630 --> 00:33:10,600
uses thing called Virgil which is

00:33:07,960 --> 00:33:14,330
host-based graphics acceleration

00:33:10,600 --> 00:33:18,470
assigned into the vm this has been very

00:33:14,330 --> 00:33:21,049
useful for enabling people outside of

00:33:18,470 --> 00:33:24,790
linara that are doing work on explicit

00:33:21,049 --> 00:33:29,110
sync fences this is the last feature

00:33:24,790 --> 00:33:35,870
needed in drm graphics for replacing

00:33:29,110 --> 00:33:38,870
androids atomic display framework so

00:33:35,870 --> 00:33:43,730
next up I have a dragon board for 10

00:33:38,870 --> 00:33:47,480
right here I wanted to do some since

00:33:43,730 --> 00:33:50,090
your work on it but dragon board doesn't

00:33:47,480 --> 00:33:53,270
have sensors fortunately we have this

00:33:50,090 --> 00:33:55,880
sensor mezzanine board and a bunch of

00:33:53,270 --> 00:34:02,080
Grove modules available so I picked in

00:33:55,880 --> 00:34:05,410
Vincents 9250 Grove module now we have

00:34:02,080 --> 00:34:05,410
screen rotation

00:34:09,970 --> 00:34:17,530
this is also running open-source

00:34:12,580 --> 00:34:20,500
graphics with Ford Reno and Mesa GL next

00:34:17,530 --> 00:34:23,619
up I have the high keyboard running the

00:34:20,500 --> 00:34:26,700
same board configuration as the dragon

00:34:23,619 --> 00:34:31,659
board for 10 it's using molly graphics

00:34:26,700 --> 00:34:35,250
driver instead it's also running for da

00:34:31,659 --> 00:34:39,490
date colonel the android common patchset

00:34:35,250 --> 00:34:43,750
forward ported for da 28 that emit fun

00:34:39,490 --> 00:34:47,440
dear has been working on in preparation

00:34:43,750 --> 00:34:56,740
of a probable for dot nine common

00:34:47,440 --> 00:35:00,550
colonel and then finally here i have a

00:34:56,740 --> 00:35:03,250
nexus 7 that's running for dead a

00:35:00,550 --> 00:35:07,830
colonel with about 50 patches on top of

00:35:03,250 --> 00:35:07,830
it John Stoltz has been working on and

00:35:09,150 --> 00:35:16,030
it's also using 4g no graphics same

00:35:13,109 --> 00:35:19,260
device configuration Denver build

00:35:16,030 --> 00:35:19,260
because it's 32-bit arm

00:35:24,940 --> 00:35:37,270
so that's the completion of the world

00:35:27,970 --> 00:35:39,250
one tour of boards slides for more

00:35:37,270 --> 00:35:42,910
information there's the URL at the

00:35:39,250 --> 00:35:45,400
bottom and we'll be talking about what's

00:35:42,910 --> 00:35:49,000
coming next for this project thursday at

00:35:45,400 --> 00:35:53,500
the AOSP mini comp and you can also see

00:35:49,000 --> 00:36:02,140
these demos in person on friday thanks

00:35:53,500 --> 00:36:04,839
very much Rob so this is actually really

00:36:02,140 --> 00:36:08,050
impressive because I think it's really

00:36:04,839 --> 00:36:11,920
going to help developers take AOSP out

00:36:08,050 --> 00:36:14,200
into adjacent markets and to be able to

00:36:11,920 --> 00:36:16,180
narrow the gap between what's going on

00:36:14,200 --> 00:36:18,609
an AOSP and be able to use a common

00:36:16,180 --> 00:36:20,650
build system to build Android for

00:36:18,609 --> 00:36:22,180
different targets is is something that I

00:36:20,650 --> 00:36:24,579
think is going to become really valuable

00:36:22,180 --> 00:36:28,540
so some great work going on there thanks

00:36:24,579 --> 00:36:31,089
Rob so now I want to move on to the

00:36:28,540 --> 00:36:33,550
digital home group continuing our

00:36:31,089 --> 00:36:35,470
lightning tour the digital home group

00:36:33,550 --> 00:36:39,130
has been working under Mark Roberts key

00:36:35,470 --> 00:36:41,950
on the comcast RDK platform where linaro

00:36:39,130 --> 00:36:44,500
has made significant contributions and

00:36:41,950 --> 00:36:47,140
also on the AOSP and android TV

00:36:44,500 --> 00:36:50,050
platforms we're also in discussions with

00:36:47,140 --> 00:36:53,530
saft the China government organization

00:36:50,050 --> 00:36:55,720
that's working on TV OS in China to see

00:36:53,530 --> 00:36:58,569
how linaro and the linaro Chinese

00:36:55,720 --> 00:37:00,490
members can help on the development and

00:36:58,569 --> 00:37:03,460
evolution of that platform into the open

00:37:00,490 --> 00:37:05,800
source community most of the work in LH

00:37:03,460 --> 00:37:09,900
g who has been around security solutions

00:37:05,800 --> 00:37:12,550
working on using the open-source opt EE

00:37:09,900 --> 00:37:15,839
trusted execution environment for trusts

00:37:12,550 --> 00:37:18,250
own both on Linux and on Android and

00:37:15,839 --> 00:37:20,410
developing applications that use that

00:37:18,250 --> 00:37:23,290
technology including key management and

00:37:20,410 --> 00:37:27,339
drm using microsoft play ready and wide

00:37:23,290 --> 00:37:29,920
by a lady she does publish the open SDK

00:37:27,339 --> 00:37:33,089
this is a collection of technologies for

00:37:29,920 --> 00:37:36,430
security device device management and

00:37:33,089 --> 00:37:38,770
video and meet multimedia pipeline

00:37:36,430 --> 00:37:40,510
processing so anybody who's in

00:37:38,770 --> 00:37:43,780
rested in this area I encourage you to

00:37:40,510 --> 00:37:47,890
go and visit the sessions and drop in on

00:37:43,780 --> 00:37:50,590
the LH g hacking room today I'm very

00:37:47,890 --> 00:37:54,280
pleased that mstar are announcing a

00:37:50,590 --> 00:37:57,970
digital home platform which is called

00:37:54,280 --> 00:38:00,640
Carver it's the one of its the second 96

00:37:57,970 --> 00:38:03,880
boards Enterprise Edition digital home

00:38:00,640 --> 00:38:07,900
version it's a quad core a 53 using

00:38:03,880 --> 00:38:10,720
their brand-new k7 set-top box SOC and

00:38:07,900 --> 00:38:15,820
interestingly includes 4k video both

00:38:10,720 --> 00:38:18,550
input and output has 10 base-t and

00:38:15,820 --> 00:38:21,760
gigabit ethernet multiple USBs and smart

00:38:18,550 --> 00:38:25,030
card and tuner interface this is the

00:38:21,760 --> 00:38:27,850
first time this board has been shown you

00:38:25,030 --> 00:38:29,920
can see it at the show and we're

00:38:27,850 --> 00:38:32,470
expecting that mstar are going ship this

00:38:29,920 --> 00:38:38,790
in volume hopefully by the end of the

00:38:32,470 --> 00:38:41,110
year mark has a few words to say I think

00:38:38,790 --> 00:38:43,420
LH teams can have an exciting week at

00:38:41,110 --> 00:38:45,490
Elias 16 we have a lot of very

00:38:43,420 --> 00:38:48,070
interesting presentations in demos lined

00:38:45,490 --> 00:38:49,840
up using 96 fours with our latest media

00:38:48,070 --> 00:38:52,450
framework solutions and security

00:38:49,840 --> 00:38:55,060
solutions 96 ports is very important to

00:38:52,450 --> 00:38:58,270
ohg it affords us the opportunity to use

00:38:55,060 --> 00:39:02,320
low-cost readily available hardware such

00:38:58,270 --> 00:39:03,880
that we can promote in advance our media

00:39:02,320 --> 00:39:06,310
framework solutions and security

00:39:03,880 --> 00:39:07,930
solutions for our members we're very

00:39:06,310 --> 00:39:11,680
excited about the new calves aboard from

00:39:07,930 --> 00:39:15,370
m star it's a quad-core 853 with a high

00:39:11,680 --> 00:39:17,860
end maleate 20 GPU it actually allows us

00:39:15,370 --> 00:39:20,980
to do both 4k video input as well as

00:39:17,860 --> 00:39:22,750
output by hdmi and digital audio it's

00:39:20,980 --> 00:39:24,820
going to be a very exciting platform for

00:39:22,750 --> 00:39:26,440
lhg to be able to realize a lot of the

00:39:24,820 --> 00:39:32,650
reference platform work that we are

00:39:26,440 --> 00:39:34,030
doing thanks mom but we thought today

00:39:32,650 --> 00:39:36,520
what we do is actually show you a

00:39:34,030 --> 00:39:38,830
demonstration of another ninety six

00:39:36,520 --> 00:39:41,950
boards Enterprise Edition digital home

00:39:38,830 --> 00:39:45,300
version this was announced a few weeks

00:39:41,950 --> 00:39:49,720
ago by hi silicon uses a high silicon

00:39:45,300 --> 00:39:51,610
set-top box SOC also quad a 53 and

00:39:49,720 --> 00:39:52,210
includes gigabit ethernet Wi-Fi and

00:39:51,610 --> 00:39:54,089
Bluetooth

00:39:52,210 --> 00:39:56,980
support as well as smart card and tuna

00:39:54,089 --> 00:39:58,270
what's interesting and the board is is

00:39:56,980 --> 00:39:59,800
here I'm going to be very careful with

00:39:58,270 --> 00:40:02,890
it because it's powered up and we're

00:39:59,800 --> 00:40:05,380
about to show it to you this board is

00:40:02,890 --> 00:40:07,150
available today from Aliexpress it can

00:40:05,380 --> 00:40:09,130
ship anywhere in the world and it's only

00:40:07,150 --> 00:40:12,099
seventy nine dollars which is pretty

00:40:09,130 --> 00:40:14,770
impressive to help me demonstrate it I'm

00:40:12,099 --> 00:40:17,680
going to ask yang zhang head of 96

00:40:14,770 --> 00:40:28,560
boards group to come and show you what

00:40:17,680 --> 00:40:28,560
it can do yang hold up hold them one man

00:40:30,540 --> 00:40:35,130
just changing some Cable's up here

00:40:49,570 --> 00:40:58,840
okay which one okay over to you so what

00:40:56,680 --> 00:41:03,550
yang is doing is he's using a TV remote

00:40:58,840 --> 00:41:06,100
to talk to the poplar board and as you

00:41:03,550 --> 00:41:08,140
can see it's an AOS TV implementation

00:41:06,100 --> 00:41:11,590
running a range of applications he's

00:41:08,140 --> 00:41:13,270
going to try as hand at a video game but

00:41:11,590 --> 00:41:15,220
just to make things interesting he's

00:41:13,270 --> 00:41:17,380
going to use his mobile phone his

00:41:15,220 --> 00:41:20,560
android mobile phone connected over

00:41:17,380 --> 00:41:23,650
Wi-Fi as the gaming controller because

00:41:20,560 --> 00:41:29,530
we left the real one somewhere else so

00:41:23,650 --> 00:41:31,330
let's see how he does what I wanted to

00:41:29,530 --> 00:41:33,910
do was make it so that he couldn't see

00:41:31,330 --> 00:41:39,220
what was going on but will we've given

00:41:33,910 --> 00:41:41,920
him a monitor in front of him so he's

00:41:39,220 --> 00:41:48,910
made the connection with Wi-Fi and he's

00:41:41,920 --> 00:41:52,300
now often running he's actually pretty

00:41:48,910 --> 00:41:54,940
good at this no I shouldn't have said

00:41:52,300 --> 00:41:57,340
that all right well this is pretty

00:41:54,940 --> 00:41:58,750
amazing for a $79 board right and

00:41:57,340 --> 00:42:00,730
there's plenty of things you can do with

00:41:58,750 --> 00:42:02,680
it we're really excited to have this

00:42:00,730 --> 00:42:04,630
board to actually start working on open

00:42:02,680 --> 00:42:07,680
source software for the digital home

00:42:04,630 --> 00:42:07,680
market thanks very much

00:42:11,829 --> 00:42:22,280
they can switch man okay so that's a

00:42:17,319 --> 00:42:25,670
poplar and the digital home group so

00:42:22,280 --> 00:42:27,829
let's move on networking group the

00:42:25,670 --> 00:42:32,900
linara networking group has been doing

00:42:27,829 --> 00:42:35,030
amazing work around ODP the open data

00:42:32,900 --> 00:42:37,849
plane software-defined data plane and

00:42:35,030 --> 00:42:40,400
this allows SOC vendors to leverage

00:42:37,849 --> 00:42:43,609
proprietary data plane acceleration

00:42:40,400 --> 00:42:47,900
hardware in their SOC really pleased

00:42:43,609 --> 00:42:50,930
that lng made the first LTS release

00:42:47,900 --> 00:42:53,089
called monarch last month and we're

00:42:50,930 --> 00:42:55,220
starting now to work and see deployment

00:42:53,089 --> 00:42:56,930
of that release into networking

00:42:55,220 --> 00:42:59,359
applications networking infrastructure

00:42:56,930 --> 00:43:01,550
across the industry but we're not

00:42:59,359 --> 00:43:03,920
stopping there the next release is being

00:43:01,550 --> 00:43:05,660
worked on already Tiger Moth and that

00:43:03,920 --> 00:43:07,550
includes applications transparent

00:43:05,660 --> 00:43:11,869
acceleration and virtual networking

00:43:07,550 --> 00:43:13,819
acceleration there is also a new

00:43:11,869 --> 00:43:15,920
additional initiative in LNG being

00:43:13,819 --> 00:43:19,069
discussed this week on time-sensitive

00:43:15,920 --> 00:43:20,690
networking this is networking this

00:43:19,069 --> 00:43:22,940
affects networking actually in the linux

00:43:20,690 --> 00:43:25,970
kernel and is particularly interesting

00:43:22,940 --> 00:43:28,310
to the automotive industrial and media

00:43:25,970 --> 00:43:30,530
markets so if you're interested in this

00:43:28,310 --> 00:43:32,990
area i encourage you to attend the lng

00:43:30,530 --> 00:43:35,020
meetings and sessions there's some

00:43:32,990 --> 00:43:37,520
really interesting things going on and

00:43:35,020 --> 00:43:39,680
we hope that you have a good week

00:43:37,520 --> 00:43:42,140
looking at the networking group

00:43:39,680 --> 00:43:47,089
activities they'll also be demonstrating

00:43:42,140 --> 00:43:50,750
on Friday so moving finally on to the

00:43:47,089 --> 00:43:53,359
enterprise group I talked earlier about

00:43:50,750 --> 00:43:56,270
arm servers needing to just work and

00:43:53,359 --> 00:43:59,300
it's amazing to see the progress that's

00:43:56,270 --> 00:44:03,349
been going on not only in leg but across

00:43:59,300 --> 00:44:06,170
the industry on arm servers they really

00:44:03,349 --> 00:44:07,910
are now starting to come to the stage

00:44:06,170 --> 00:44:10,700
where as servers come into the market

00:44:07,910 --> 00:44:13,460
the software is going to be ready for

00:44:10,700 --> 00:44:16,030
more and more applications linaro and

00:44:13,460 --> 00:44:18,410
its partners have been working hard

00:44:16,030 --> 00:44:21,530
collaborating on all of these open

00:44:18,410 --> 00:44:22,700
source projects and they've culminated

00:44:21,530 --> 00:44:24,010
in the delivery of the enterprise

00:44:22,700 --> 00:44:25,810
reference platform

00:44:24,010 --> 00:44:27,940
the last version was released in June

00:44:25,810 --> 00:44:30,670
the next version will be released in

00:44:27,940 --> 00:44:32,350
December and this is not only the

00:44:30,670 --> 00:44:34,720
firmware and support for the

00:44:32,350 --> 00:44:36,660
distributions but it's also building all

00:44:34,720 --> 00:44:40,300
of these projects on top like OpenStack

00:44:36,660 --> 00:44:42,700
SEF and CERN docker and so on the

00:44:40,300 --> 00:44:46,120
developer cloud has 50 servers running

00:44:42,700 --> 00:44:47,440
already demand is a seeding supply and

00:44:46,120 --> 00:44:49,510
Martin's going to talk a little bit

00:44:47,440 --> 00:44:51,910
about that in a minute we have that

00:44:49,510 --> 00:44:53,890
running in Austin in Texas and Cambridge

00:44:51,910 --> 00:44:57,640
and we're bringing up China as soon as

00:44:53,890 --> 00:44:59,680
we possibly can that I have to say a big

00:44:57,640 --> 00:45:01,480
thank you to all of our members because

00:44:59,680 --> 00:45:04,810
that wouldn't be possible if our members

00:45:01,480 --> 00:45:06,790
didn't provide us the hardware the main

00:45:04,810 --> 00:45:08,740
lead projects / l eg our

00:45:06,790 --> 00:45:10,930
software-defined infrastructure

00:45:08,740 --> 00:45:12,790
including OpenStack and also the Big

00:45:10,930 --> 00:45:15,220
Data projects that we've been working on

00:45:12,790 --> 00:45:18,450
over the last year but there's a lot of

00:45:15,220 --> 00:45:22,180
new activity in le g as well to expand

00:45:18,450 --> 00:45:24,780
the software that's available on arm

00:45:22,180 --> 00:45:28,840
servers and to optimize it further and

00:45:24,780 --> 00:45:32,470
big focus on enterprise testing and

00:45:28,840 --> 00:45:34,630
validation and also identification of

00:45:32,470 --> 00:45:37,330
two particular areas of interest for the

00:45:34,630 --> 00:45:38,770
ARM architecture one being storage where

00:45:37,330 --> 00:45:42,010
there's going to be more effort and work

00:45:38,770 --> 00:45:44,560
jointly on Seth project and also

00:45:42,010 --> 00:45:47,170
specific interest in the future forearm

00:45:44,560 --> 00:45:50,290
in the HPC market some of you will have

00:45:47,170 --> 00:45:53,260
seen Fujitsu's announcement of building

00:45:50,290 --> 00:45:56,320
the next generation computer super

00:45:53,260 --> 00:45:58,780
computer based on arm and hpc is of

00:45:56,320 --> 00:46:01,330
significant interest are to thee to the

00:45:58,780 --> 00:46:03,850
arm vendors so there is discussions

00:46:01,330 --> 00:46:06,310
we're starting up an HP see special

00:46:03,850 --> 00:46:08,740
interest group in the leg if that's of

00:46:06,310 --> 00:46:12,000
interest to you please talk to the to

00:46:08,740 --> 00:46:15,660
talk to martin and the and the leg team

00:46:12,000 --> 00:46:18,580
Martin would like to make a few comments

00:46:15,660 --> 00:46:20,320
so Laura in a price group is a you know

00:46:18,580 --> 00:46:22,840
we focus in on everything around the

00:46:20,320 --> 00:46:24,790
server in the data center so that's

00:46:22,840 --> 00:46:28,180
everything from the boot architecture

00:46:24,790 --> 00:46:30,070
acpi UEFI moving up the stack we provide

00:46:28,180 --> 00:46:32,350
a reference platform with the Linux

00:46:30,070 --> 00:46:34,780
kernel for arm servers and then we'll go

00:46:32,350 --> 00:46:37,370
a little higher up the stack into cloud

00:46:34,780 --> 00:46:39,260
and big data technologies

00:46:37,370 --> 00:46:43,400
so we launched the developer cloud about

00:46:39,260 --> 00:46:45,830
six months ago and with that the demand

00:46:43,400 --> 00:46:47,780
was was overwhelming so we had a lot of

00:46:45,830 --> 00:46:50,060
good reception in their sleep what we're

00:46:47,780 --> 00:46:52,370
launching now today is a way for you to

00:46:50,060 --> 00:46:55,310
have a self-service portal to be able to

00:46:52,370 --> 00:46:56,960
go and have cloud instances and instead

00:46:55,310 --> 00:46:58,970
of giving you a dedicated machine we're

00:46:56,960 --> 00:47:01,550
giving you a project which gives you a

00:46:58,970 --> 00:47:03,740
number of CPUs number of Mount of memory

00:47:01,550 --> 00:47:06,200
and this storage the thing about the

00:47:03,740 --> 00:47:08,690
developer cloud is we run this on arm 64

00:47:06,200 --> 00:47:10,430
machine so that's not just the compute

00:47:08,690 --> 00:47:13,250
instances but also the controllers that

00:47:10,430 --> 00:47:14,780
actually control OpenStack and that

00:47:13,250 --> 00:47:18,230
OpenStack is part of our reference

00:47:14,780 --> 00:47:20,180
platform that we provide for any user

00:47:18,230 --> 00:47:22,340
any individual any company to download

00:47:20,180 --> 00:47:24,110
and install and we do this in a couple

00:47:22,340 --> 00:47:26,000
of ways you can go to a website you can

00:47:24,110 --> 00:47:27,650
actually download the binary bits but

00:47:26,000 --> 00:47:30,320
more importantly we also offer a

00:47:27,650 --> 00:47:32,060
reference architecture for OpenStack so

00:47:30,320 --> 00:47:34,640
that you can go ahead and grab that

00:47:32,060 --> 00:47:36,560
reference architecture with ansible you

00:47:34,640 --> 00:47:40,780
can then deploy your own openstack-based

00:47:36,560 --> 00:47:40,780
cloud based on the reference platform

00:47:41,800 --> 00:47:47,030
thanks Martin and what I'd like to do is

00:47:44,570 --> 00:47:48,380
ask Martin and Hammer to come up and

00:47:47,030 --> 00:47:51,110
show you some of the work that we've

00:47:48,380 --> 00:48:06,100
been doing on the developer cloud Martin

00:47:51,110 --> 00:48:09,140
Emma it's on alright we getting set up

00:48:06,100 --> 00:48:11,270
and we switch over alright so you know

00:48:09,140 --> 00:48:12,860
we started this about six months ago

00:48:11,270 --> 00:48:15,290
with the developer cloud we would

00:48:12,860 --> 00:48:18,590
provide a machine to you you would send

00:48:15,290 --> 00:48:20,600
in an email form we would then talk to

00:48:18,590 --> 00:48:22,700
you about what you wanted you would get

00:48:20,600 --> 00:48:25,790
that machine you would tell us what what

00:48:22,700 --> 00:48:28,070
OS you wanted to have this is very

00:48:25,790 --> 00:48:30,700
brittle very static so this is this is

00:48:28,070 --> 00:48:33,410
the next step in what we're doing and

00:48:30,700 --> 00:48:38,020
this is the new interface that you'd be

00:48:33,410 --> 00:48:41,780
able to go and get OpenStack arm 64

00:48:38,020 --> 00:48:44,420
cloud instances so here we're just

00:48:41,780 --> 00:48:47,240
demonstrating the way that you go and

00:48:44,420 --> 00:48:49,700
sign up as you can see this is a paid

00:48:47,240 --> 00:48:51,240
for service we do have discount voucher

00:48:49,700 --> 00:48:53,170
codes for the community

00:48:51,240 --> 00:48:55,030
so we'll just sort of walk through that

00:48:53,170 --> 00:48:56,560
and while we're walking through one of

00:48:55,030 --> 00:49:00,130
the things you'll notice here is it's a

00:48:56,560 --> 00:49:02,230
luminous cloud small project so the

00:49:00,130 --> 00:49:05,650
difference now is instead of you being

00:49:02,230 --> 00:49:07,900
able to get one machine we're giving you

00:49:05,650 --> 00:49:09,940
a project space and will show you the

00:49:07,900 --> 00:49:13,320
portal here in a minute project space

00:49:09,940 --> 00:49:15,610
means you get a number of virtual CPUs

00:49:13,320 --> 00:49:17,320
certain amount of memory and a certain

00:49:15,610 --> 00:49:18,850
amount of dis storage and then it's up

00:49:17,320 --> 00:49:21,360
to you and your teams that are going to

00:49:18,850 --> 00:49:23,440
do test development importing forearm 64

00:49:21,360 --> 00:49:25,840
for you to be able to decide how you're

00:49:23,440 --> 00:49:28,660
going to carve that up so that's what

00:49:25,840 --> 00:49:30,340
we're doing you're going through the

00:49:28,660 --> 00:49:31,900
applying so you can see it's just a very

00:49:30,340 --> 00:49:35,730
simple form for you to be able to go

00:49:31,900 --> 00:49:37,810
through and do this and you buy it now

00:49:35,730 --> 00:49:41,410
right now the way we're doing this is a

00:49:37,810 --> 00:49:42,940
t-shirt sizing small medium and large so

00:49:41,410 --> 00:49:44,920
it all depends on what your needs are if

00:49:42,940 --> 00:49:48,280
you're an individual developer or if

00:49:44,920 --> 00:49:49,960
your company all right so we have the

00:49:48,280 --> 00:49:52,990
we've got a portal this is a

00:49:49,960 --> 00:49:54,970
self-service portal here a little bit

00:49:52,990 --> 00:49:57,640
more than we thought first that's okay

00:49:54,970 --> 00:49:59,590
so I'm Bob and here I'm gonna go log in

00:49:57,640 --> 00:50:01,270
and for those of you who've used

00:49:59,590 --> 00:50:04,330
OpenStack in the past you'll see that

00:50:01,270 --> 00:50:07,420
this is very very familiar with a little

00:50:04,330 --> 00:50:09,730
bit of theming but you get your portal

00:50:07,420 --> 00:50:11,440
and it gives you a dashboard that tells

00:50:09,730 --> 00:50:13,630
you what you have available so for this

00:50:11,440 --> 00:50:16,750
one here this is a large instance I

00:50:13,630 --> 00:50:19,390
think we get to give six cores about 24

00:50:16,750 --> 00:50:22,570
gig of memory and some drives you can

00:50:19,390 --> 00:50:25,000
choose to then create one server or six

00:50:22,570 --> 00:50:28,570
or two or four or whatever it is that

00:50:25,000 --> 00:50:31,630
you're looking to do so we have some

00:50:28,570 --> 00:50:34,090
images here a note about images we

00:50:31,630 --> 00:50:36,910
provide a default number of images that

00:50:34,090 --> 00:50:38,410
you can pick from right away centos and

00:50:36,910 --> 00:50:42,330
Debian which is part of our reference

00:50:38,410 --> 00:50:44,290
platform and then several others as well

00:50:42,330 --> 00:50:47,320
so let's go ahead and pick one which

00:50:44,290 --> 00:50:50,290
which we do all right so let's yeah you

00:50:47,320 --> 00:50:52,570
know what we got sponsored by by

00:50:50,290 --> 00:50:54,520
canonical so we'll Buddha as anyone and

00:50:52,570 --> 00:50:57,160
Hema is going to walk through and just

00:50:54,520 --> 00:50:59,140
sort of select the process the

00:50:57,160 --> 00:51:02,380
difference here is that you are in full

00:50:59,140 --> 00:51:04,570
control of your developer cloud versus

00:51:02,380 --> 00:51:07,120
before asking for a machine

00:51:04,570 --> 00:51:09,430
getting it the other difference is that

00:51:07,120 --> 00:51:11,950
if you decide you have your own linux

00:51:09,430 --> 00:51:16,360
distribution do you want to upload as a

00:51:11,950 --> 00:51:19,150
cloud image you're free to do so alright

00:51:16,360 --> 00:51:20,530
so again this is all based off of the

00:51:19,150 --> 00:51:22,870
enterprise reference platform that

00:51:20,530 --> 00:51:24,400
George talked about the OpenStack that

00:51:22,870 --> 00:51:26,560
we use is also based on the enterprise

00:51:24,400 --> 00:51:28,300
reference platform that we have these

00:51:26,560 --> 00:51:29,970
are output from the lead project so we

00:51:28,300 --> 00:51:33,700
develop inside of the enterprise group

00:51:29,970 --> 00:51:36,040
we have a talk on Wednesday around the

00:51:33,700 --> 00:51:38,590
sessions for OpenStack and set that

00:51:36,040 --> 00:51:40,720
we're using for this we have a big data

00:51:38,590 --> 00:51:43,630
session as well on Wednesday and then

00:51:40,720 --> 00:51:47,160
the firmware many summit for acpi new

00:51:43,630 --> 00:51:59,770
efi that this all runs on on Tuesday

00:51:47,160 --> 00:52:01,450
that's it Wow what's amazing about this

00:51:59,770 --> 00:52:03,730
is is there's a couple of things we can

00:52:01,450 --> 00:52:05,470
do with it we are using all of this to

00:52:03,730 --> 00:52:07,600
validate everything we're doing we're

00:52:05,470 --> 00:52:09,910
doing it ourselves we're eating our own

00:52:07,600 --> 00:52:13,000
dog food were making this work so that

00:52:09,910 --> 00:52:14,680
we find problems before our partners in

00:52:13,000 --> 00:52:17,080
our vendors and all of our members are

00:52:14,680 --> 00:52:19,420
helping us in this process the software

00:52:17,080 --> 00:52:21,880
to do all this we just we just live in

00:52:19,420 --> 00:52:24,910
front of you started up an instant we

00:52:21,880 --> 00:52:26,530
bought purchased an instance and started

00:52:24,910 --> 00:52:28,900
it up live in front of you on an arm

00:52:26,530 --> 00:52:30,660
server and all of the software to do

00:52:28,900 --> 00:52:32,980
this is available to the whole community

00:52:30,660 --> 00:52:35,730
you can use this as the starting point

00:52:32,980 --> 00:52:38,110
for building your own arm cloud server

00:52:35,730 --> 00:52:39,580
so we're really excited about this we're

00:52:38,110 --> 00:52:42,490
going to continue to work on it and

00:52:39,580 --> 00:52:45,610
continue to try and find the problems

00:52:42,490 --> 00:52:47,500
and enable 3rd party software vendors to

00:52:45,610 --> 00:52:48,940
build their software on the developer

00:52:47,500 --> 00:52:52,750
cloud getting access to all of our

00:52:48,940 --> 00:52:55,210
member hardware for example recently the

00:52:52,750 --> 00:52:58,600
 DB team used the developer cloud

00:52:55,210 --> 00:53:03,100
to do validation and support arm 64 in

00:52:58,600 --> 00:53:05,020
MongoDB so that's great so what have I

00:53:03,100 --> 00:53:06,940
done today I've talked giving you this

00:53:05,020 --> 00:53:09,070
lightning tour across the segment groups

00:53:06,940 --> 00:53:11,230
I've talked about open source

00:53:09,070 --> 00:53:14,470
collaborative engineering how important

00:53:11,230 --> 00:53:17,790
it is I painted the vision of how we can

00:53:14,470 --> 00:53:20,040
create a embedded platform

00:53:17,790 --> 00:53:21,990
that in builds insecurity builds in over

00:53:20,040 --> 00:53:23,580
the air and can be used by the whole

00:53:21,990 --> 00:53:25,380
industry because if we don't do this

00:53:23,580 --> 00:53:27,210
together we're not going to succeed

00:53:25,380 --> 00:53:29,640
we're going to lose a lot of momentum

00:53:27,210 --> 00:53:32,070
behind what we can do in the IOT world

00:53:29,640 --> 00:53:34,230
we've talked about AOSP mobile

00:53:32,070 --> 00:53:37,530
optimization and community board support

00:53:34,230 --> 00:53:39,450
and the launch of 96 boards for the

00:53:37,530 --> 00:53:42,090
digital home space which we think is

00:53:39,450 --> 00:53:44,970
going to really help get software and

00:53:42,090 --> 00:53:48,870
developers excited about working on TV

00:53:44,970 --> 00:53:51,480
media applications open data plane is a

00:53:48,870 --> 00:53:53,280
key initiative for linaro huge amount of

00:53:51,480 --> 00:53:54,810
works gone into this across our member

00:53:53,280 --> 00:53:56,940
companies were really excited it's

00:53:54,810 --> 00:53:59,130
rolling out and the enterprise reference

00:53:56,940 --> 00:54:00,750
platform is pulling together and now

00:53:59,130 --> 00:54:03,240
starting to look at the deployment

00:54:00,750 --> 00:54:05,610
aspects of arm servers so we're really

00:54:03,240 --> 00:54:08,400
moving now into the world where arm

00:54:05,610 --> 00:54:11,850
servers are starting to be able to be

00:54:08,400 --> 00:54:13,860
put into real applications none of this

00:54:11,850 --> 00:54:17,340
would be possible without the support of

00:54:13,860 --> 00:54:20,130
our 32 members we and linaro now have

00:54:17,340 --> 00:54:22,770
over 300 engineers working on open

00:54:20,130 --> 00:54:25,590
source projects and that's we have 150

00:54:22,770 --> 00:54:28,320
of our own employees we have 94 member

00:54:25,590 --> 00:54:30,120
assignees and we have 89 member

00:54:28,320 --> 00:54:31,730
engineers and I couldn't be prouder of

00:54:30,120 --> 00:54:41,940
the work that you're all achieving

00:54:31,730 --> 00:54:44,640
congratulations before I go there's one

00:54:41,940 --> 00:54:47,940
thing that we just couldn't wait to show

00:54:44,640 --> 00:54:49,890
you there's a small team in the na ro

00:54:47,940 --> 00:54:52,110
who've been working on the initial

00:54:49,890 --> 00:54:54,270
technology for the IOT reference

00:54:52,110 --> 00:54:56,310
platform that we want to release the

00:54:54,270 --> 00:54:58,980
developer preview of by the end of this

00:54:56,310 --> 00:55:02,400
year but we're so excited by what

00:54:58,980 --> 00:55:04,290
they're doing that we wanted to give you

00:55:02,400 --> 00:55:06,990
a little preview of some of the work

00:55:04,290 --> 00:55:09,960
that they've been doing in order to do

00:55:06,990 --> 00:55:12,330
that I'm going to ask Tyler and Ricardo

00:55:09,960 --> 00:55:16,190
to come onto the stage and talk a little

00:55:12,330 --> 00:55:16,190
bit about what they've been up to

00:55:25,249 --> 00:55:30,299
hey thanks George thanks so we want this

00:55:28,769 --> 00:55:32,099
demo to build on everything that was

00:55:30,299 --> 00:55:35,609
discussed today in the keynote so an

00:55:32,099 --> 00:55:37,319
end-to-end IOT demo essentially so what

00:55:35,609 --> 00:55:38,969
we have in front of us here we've got

00:55:37,319 --> 00:55:40,799
two boards are carbon boards that was

00:55:38,969 --> 00:55:42,779
announced in another IOT board based on

00:55:40,799 --> 00:55:44,219
the 96 board form factor these are

00:55:42,779 --> 00:55:45,449
deployed in the field they're not

00:55:44,219 --> 00:55:47,699
connected to any sort of test harness

00:55:45,449 --> 00:55:50,189
they're simply powered what we have here

00:55:47,699 --> 00:55:52,919
is a IOT gateway which is a dragon board

00:55:50,189 --> 00:55:55,319
for 10 see it talks bluetooth low energy

00:55:52,919 --> 00:55:57,239
for these boards and uses 6lowpan man to

00:55:55,319 --> 00:55:59,699
get ipv6 addressing so I could talk to

00:55:57,239 --> 00:56:02,549
our cloud service the next piece we have

00:55:59,699 --> 00:56:04,529
here is our test harness this is a

00:56:02,549 --> 00:56:06,689
remotely connected to our lava cloud

00:56:04,529 --> 00:56:08,009
instance and we'll run our tests that

00:56:06,689 --> 00:56:09,239
you'll see here in a moment so we've got

00:56:08,009 --> 00:56:11,089
all these pieces here we're going to

00:56:09,239 --> 00:56:18,599
demonstrate the whole thing end-to-end

00:56:11,089 --> 00:56:22,169
butchered so what we have here is a full

00:56:18,599 --> 00:56:24,449
screen display the test farm is sitting

00:56:22,169 --> 00:56:29,279
here here you have the devices under

00:56:24,449 --> 00:56:31,199
test they are flashing LEDs good hello

00:56:29,279 --> 00:56:33,539
world application and here is on the

00:56:31,199 --> 00:56:36,329
left hand side is the gateway those

00:56:33,539 --> 00:56:38,519
boards under tests the only wire is a

00:56:36,329 --> 00:56:40,079
power supply wire they are completely

00:56:38,519 --> 00:56:41,969
what they're not connected to anything

00:56:40,079 --> 00:56:43,890
this is a live demonstration we've never

00:56:41,969 --> 00:56:46,890
done it with 400 Bluetooth devices in

00:56:43,890 --> 00:56:49,380
the audience so we'll see how we go but

00:56:46,890 --> 00:56:50,729
those devices are purely interfacing to

00:56:49,380 --> 00:56:52,829
the rest of the world through bluetooth

00:56:50,729 --> 00:56:54,599
we're also simulating the work

00:56:52,829 --> 00:56:58,229
environment we've used to develop this

00:56:54,599 --> 00:57:00,689
demo we're Ricardo based in Brazil has

00:56:58,229 --> 00:57:02,640
been working on his side of the demo one

00:57:00,689 --> 00:57:04,259
end of the world and Tyler has been

00:57:02,640 --> 00:57:07,109
working in America at the other end of

00:57:04,259 --> 00:57:11,429
the world on on the cloud services that

00:57:07,109 --> 00:57:13,259
we're demonstrating today on the bottom

00:57:11,429 --> 00:57:15,539
left is the test harness and then we

00:57:13,259 --> 00:57:18,029
have the laptops on the on the right so

00:57:15,539 --> 00:57:21,119
I'm going to hand back to Tyler to show

00:57:18,029 --> 00:57:23,130
you what he's up to okay so let's

00:57:21,119 --> 00:57:25,109
pretend I'm some sort of developer right

00:57:23,130 --> 00:57:26,489
and we've got these devices that are

00:57:25,109 --> 00:57:28,349
deployed in the field of the customer

00:57:26,489 --> 00:57:30,059
reports an issue saying you know it's

00:57:28,349 --> 00:57:31,650
great that we these devices are working

00:57:30,059 --> 00:57:32,699
but there's no way to know when they're

00:57:31,650 --> 00:57:34,990
actually connected to the Gateway

00:57:32,699 --> 00:57:37,510
because I forgot to put a status LED

00:57:34,990 --> 00:57:39,160
so I'm going to patch the IOT reference

00:57:37,510 --> 00:57:41,350
platform which is based on Zephyr and

00:57:39,160 --> 00:57:42,730
I'm going to push it to our CI system so

00:57:41,350 --> 00:57:44,500
this demo is going to be in two phases

00:57:42,730 --> 00:57:45,760
the first phase is the continuous

00:57:44,500 --> 00:57:47,470
integration phase which is what I'll

00:57:45,760 --> 00:57:51,250
show you and then we are going to deploy

00:57:47,470 --> 00:57:52,330
it to a device deployment for phase 2

00:57:51,250 --> 00:57:53,740
and the Ricardo is going to take over

00:57:52,330 --> 00:57:55,210
and actually do an over-the-air update

00:57:53,740 --> 00:57:57,250
so this builds on security

00:57:55,210 --> 00:57:58,600
maintainability and safety safety that

00:57:57,250 --> 00:58:00,610
we're able to check our change before we

00:57:58,600 --> 00:58:01,750
push it maintainability that we can

00:58:00,610 --> 00:58:03,220
issue an update and we're going to show

00:58:01,750 --> 00:58:04,540
you the security part because all the

00:58:03,220 --> 00:58:08,800
images are signed so let's get started

00:58:04,540 --> 00:58:10,360
shall we so this is the patch it's

00:58:08,800 --> 00:58:11,800
trivial but we should still test it

00:58:10,360 --> 00:58:15,340
anyway so let's apply it to our source

00:58:11,800 --> 00:58:20,230
code okay we've got it applied now let's

00:58:15,340 --> 00:58:21,940
push it so I'm going to push the hips do

00:58:20,230 --> 00:58:27,700
something we call get CI so this is our

00:58:21,940 --> 00:58:29,440
brand troops when our past year now this

00:58:27,700 --> 00:58:31,420
looks pretty normal except now we've

00:58:29,440 --> 00:58:33,010
started the CI loop so the whole

00:58:31,420 --> 00:58:34,119
workflow is now get driven so I'm gonna

00:58:33,010 --> 00:58:35,110
hand it back over to George and he's

00:58:34,119 --> 00:58:41,470
gonna explain a little bit more about

00:58:35,110 --> 00:58:46,600
what's going on so what's happening here

00:58:41,470 --> 00:58:48,730
is that Tyler is checked out the IOT

00:58:46,600 --> 00:58:50,830
reference platform he's modified code

00:58:48,730 --> 00:58:53,560
and he's locally building and testing

00:58:50,830 --> 00:58:55,720
his changes to the application he's then

00:58:53,560 --> 00:58:57,670
get pushed that into the cloud service

00:58:55,720 --> 00:59:00,700
that we're using to do several things

00:58:57,670 --> 00:59:03,340
that cloud service is completely

00:59:00,700 --> 00:59:05,530
scalable it has a set of build servers

00:59:03,340 --> 00:59:08,410
that are doing controlling the builds it

00:59:05,530 --> 00:59:11,010
has a set of lava virtual machine

00:59:08,410 --> 00:59:14,050
servers that are virtually running

00:59:11,010 --> 00:59:15,880
instances of the application and testing

00:59:14,050 --> 00:59:18,550
them in a virtual environment and it

00:59:15,880 --> 00:59:20,140
also has access to test farms that can

00:59:18,550 --> 00:59:22,180
be situated anywhere around the world

00:59:20,140 --> 00:59:24,220
this is truly scalable it's a

00:59:22,180 --> 00:59:27,250
cloud-based system it can be federated

00:59:24,220 --> 00:59:29,890
across installations in any of your

00:59:27,250 --> 00:59:31,750
company facilities anywhere to work on

00:59:29,890 --> 00:59:33,580
maintaining and keeping products

00:59:31,750 --> 00:59:36,070
up-to-date so the products are being

00:59:33,580 --> 00:59:39,130
automatically tested once that's

00:59:36,070 --> 00:59:40,690
completed assuming the test results are

00:59:39,130 --> 00:59:44,080
positive if they're not you have to go

00:59:40,690 --> 00:59:47,980
back to square one we have a signed

00:59:44,080 --> 00:59:48,990
production image is being sent over to

00:59:47,980 --> 00:59:51,810
the

00:59:48,990 --> 00:59:53,400
deployment cloud servers now today we're

00:59:51,810 --> 00:59:55,950
actually demonstrating real signed

00:59:53,400 --> 00:59:57,900
images we're running out of time if we

00:59:55,950 --> 00:59:59,520
had time we'd actually create an

00:59:57,900 --> 01:00:01,350
unsigned image and show you that that

00:59:59,520 --> 01:00:03,030
didn't work you'll have to trust me on

01:00:01,350 --> 01:00:05,850
that one we're actually going to send

01:00:03,030 --> 01:00:08,100
assigned image because the firmware on

01:00:05,850 --> 01:00:09,960
the microcontroller is going to check

01:00:08,100 --> 01:00:12,030
that signed image before it will run it

01:00:09,960 --> 01:00:13,350
so if this demo doesn't work it's

01:00:12,030 --> 01:00:17,010
because somebody interfered with the

01:00:13,350 --> 01:00:19,440
code the next thing we're going to do

01:00:17,010 --> 01:00:21,720
once we've got that to thee to the cloud

01:00:19,440 --> 01:00:25,260
deployment is we're actually going to

01:00:21,720 --> 01:00:26,880
deploy that change over the air from the

01:00:25,260 --> 01:00:28,920
cloud server which can be situated

01:00:26,880 --> 01:00:30,720
anywhere in the world beyond any service

01:00:28,920 --> 01:00:33,270
and we're going to take it through the

01:00:30,720 --> 01:00:39,030
dragon board for 10 gateway and onto the

01:00:33,270 --> 01:00:40,650
deployment boards now this requires a

01:00:39,030 --> 01:00:43,860
number of different services that we've

01:00:40,650 --> 01:00:47,880
developed the first is larvae that we're

01:00:43,860 --> 01:00:50,970
using for test automation so that is

01:00:47,880 --> 01:00:55,880
interfacing to both virtual and to real

01:00:50,970 --> 01:00:59,250
hardware we're using it for code storage

01:00:55,880 --> 01:01:01,230
and coordination of builds and we're

01:00:59,250 --> 01:01:03,450
using a custom builder system that we've

01:01:01,230 --> 01:01:06,000
built tuned to build the zephyr platform

01:01:03,450 --> 01:01:07,590
this is three times faster than using a

01:01:06,000 --> 01:01:09,270
developer laptop system and we think

01:01:07,590 --> 01:01:10,950
we've got more to do but the nice thing

01:01:09,270 --> 01:01:13,560
about this is is completely scalable

01:01:10,950 --> 01:01:16,560
we've got a cloud server for storing

01:01:13,560 --> 01:01:19,290
artifacts and then we're using an IOT

01:01:16,560 --> 01:01:21,060
device deployment system now today we're

01:01:19,290 --> 01:01:23,850
demonstrating this using an open source

01:01:21,060 --> 01:01:26,910
project called Hawk bit that's an Apache

01:01:23,850 --> 01:01:28,950
project for IOT device deployment for

01:01:26,910 --> 01:01:31,740
production we would expect you to choose

01:01:28,950 --> 01:01:36,210
from a number of commercial platforms

01:01:31,740 --> 01:01:41,850
including embed cloud or IBM bluemix or

01:01:36,210 --> 01:01:44,130
AWS 0 a labar bar and so on so I think

01:01:41,850 --> 01:01:45,270
it's time we found out how that testing

01:01:44,130 --> 01:01:50,700
is going Tyler what do you think

01:01:45,270 --> 01:01:52,290
absolutely ok so can we switch back so

01:01:50,700 --> 01:01:55,440
so far good so good we're in the green

01:01:52,290 --> 01:01:56,580
the tests up here are the core Zephyr

01:01:55,440 --> 01:02:00,210
tests so these are the colonel in the

01:01:56,580 --> 01:02:01,830
crypto test cases below here we've had

01:02:00,210 --> 01:02:02,670
our production images built for the

01:02:01,830 --> 01:02:04,050
nitrogen board and

01:02:02,670 --> 01:02:05,370
karbonn bored and we've actually got the

01:02:04,050 --> 01:02:07,080
tests we've tested our production

01:02:05,370 --> 01:02:08,880
application everything is green it took

01:02:07,080 --> 01:02:11,460
us three minutes and 31 seconds from a

01:02:08,880 --> 01:02:14,100
git push that's hassle-free very very

01:02:11,460 --> 01:02:15,510
fast now the images have been built and

01:02:14,100 --> 01:02:16,920
tested we've deployed them to hock bit

01:02:15,510 --> 01:02:18,330
automatically and so I'm going to turn

01:02:16,920 --> 01:02:22,710
this over to my colleague Ricardo here

01:02:18,330 --> 01:02:24,390
for the deployment so as we do that I

01:02:22,710 --> 01:02:25,920
would just sort of say again this

01:02:24,390 --> 01:02:27,780
development process and what you're

01:02:25,920 --> 01:02:30,120
seeing on stage none of this is local

01:02:27,780 --> 01:02:32,070
well the boards were actually local in

01:02:30,120 --> 01:02:34,320
the farms here but this was developed

01:02:32,070 --> 01:02:36,870
across the world the farm was in one

01:02:34,320 --> 01:02:38,520
place developer in another and that's

01:02:36,870 --> 01:02:40,740
how this process works you're actually

01:02:38,520 --> 01:02:44,430
seeing this life but the deployment

01:02:40,740 --> 01:02:47,850
server is somewhere in the cloud so I'm

01:02:44,430 --> 01:02:50,310
now going to move to Ricardo tell us

01:02:47,850 --> 01:02:53,160
what you're doing so we guard this new

01:02:50,310 --> 01:02:55,140
feature that was applied on a charter

01:02:53,160 --> 01:02:57,270
was a tacit already you see here like

01:02:55,140 --> 01:02:59,610
the deployment method in CS and the

01:02:57,270 --> 01:03:01,140
damages are writing place so Tyler can

01:02:59,610 --> 01:03:03,450
you confirm just like the version that

01:03:01,140 --> 01:03:07,320
are using yeah so that the hash should

01:03:03,450 --> 01:03:08,550
be 90 to 270 right so there you go so

01:03:07,320 --> 01:03:10,320
you see here that you have the unsigned

01:03:08,550 --> 01:03:12,930
and signed in English if story said so

01:03:10,320 --> 01:03:16,350
let's try because of time let's try

01:03:12,930 --> 01:03:21,060
simply pick up the first one in here

01:03:16,350 --> 01:03:23,790
drag and drop and apply it is so this

01:03:21,060 --> 01:03:25,590
will basically tell set up the

01:03:23,790 --> 01:03:28,350
configuration deployment system in a way

01:03:25,590 --> 01:03:29,880
that the board can probe of the server

01:03:28,350 --> 01:03:31,860
and actually find out if there's an

01:03:29,880 --> 01:03:34,620
update that I used to fly download and

01:03:31,860 --> 01:03:36,840
so on and so forth and performed the

01:03:34,620 --> 01:03:38,850
actual operate so we could do the ensign

01:03:36,840 --> 01:03:42,080
in here as well and the difference that

01:03:38,850 --> 01:03:44,490
the board would refuse since we have

01:03:42,080 --> 01:03:47,250
that security check it's part of the

01:03:44,490 --> 01:03:52,380
update process so let's go in and did

01:03:47,250 --> 01:03:54,000
the otter sign it on the other board so

01:03:52,380 --> 01:03:56,280
as you're Ted everything is over network

01:03:54,000 --> 01:03:58,320
so we probably expecting you a few

01:03:56,280 --> 01:04:00,210
issues one one of the things that I

01:03:58,320 --> 01:04:02,370
noticed in here it seems that carbon is

01:04:00,210 --> 01:04:04,200
not connected to the server so it also

01:04:02,370 --> 01:04:06,660
like Showzen up in here because the

01:04:04,200 --> 01:04:08,160
board is always like pinging and

01:04:06,660 --> 01:04:12,480
connected to the server so I'm just

01:04:08,160 --> 01:04:14,850
gonna ask Estella can't just start and

01:04:12,480 --> 01:04:16,440
season everything we work so and now

01:04:14,850 --> 01:04:18,450
we're just basically waiting divorce

01:04:16,440 --> 01:04:19,859
indicated with the server and download

01:04:18,450 --> 01:04:21,839
and flash the process so this is going

01:04:19,859 --> 01:04:23,910
to take a little bit so meanwhile just

01:04:21,839 --> 01:04:28,829
go back to George so we can explain more

01:04:23,910 --> 01:04:31,319
about the architecture so what's

01:04:28,829 --> 01:04:33,540
happening here is now the deployment

01:04:31,319 --> 01:04:34,859
request has been given to the server the

01:04:33,540 --> 01:04:36,480
server sits in the cloud and it's doing

01:04:34,859 --> 01:04:38,490
a lot of complex stuff it's going to

01:04:36,480 --> 01:04:40,020
take a little while but the point is

01:04:38,490 --> 01:04:41,339
it's scalable it's not just to one

01:04:40,020 --> 01:04:44,069
device this could be to a hundred

01:04:41,339 --> 01:04:45,810
thousand or a million devices and it

01:04:44,069 --> 01:04:47,970
just waits for the devices to talk

01:04:45,810 --> 01:04:49,500
deploys and then you get statistics back

01:04:47,970 --> 01:04:51,869
telling you how many devices were

01:04:49,500 --> 01:04:53,550
deployed was it successful and all of

01:04:51,869 --> 01:04:57,990
the things that you expect to see out of

01:04:53,550 --> 01:04:59,970
a IOT device management system so the

01:04:57,990 --> 01:05:01,380
services that I've just explained I

01:04:59,970 --> 01:05:02,849
should also talk a little bit about

01:05:01,380 --> 01:05:05,220
while we're just waiting for that to

01:05:02,849 --> 01:05:08,730
deploy I should also explain a little

01:05:05,220 --> 01:05:11,790
bit about how this is working we have

01:05:08,730 --> 01:05:13,520
built here the basics of what we want to

01:05:11,790 --> 01:05:16,440
deliver as the iot reference platform

01:05:13,520 --> 01:05:19,170
this is a based on a common bootloader

01:05:16,440 --> 01:05:22,260
that works across different vendor MC

01:05:19,170 --> 01:05:24,030
use and reference boot sequence and fall

01:05:22,260 --> 01:05:26,819
back and roll back so that we can roll

01:05:24,030 --> 01:05:30,420
back any bad bad implementations and

01:05:26,819 --> 01:05:32,369
it's a common generic over-the-air

01:05:30,420 --> 01:05:34,950
architecture and implementation today

01:05:32,369 --> 01:05:37,770
we're using a dual Bank approach whether

01:05:34,950 --> 01:05:39,180
you have a single Bank SOC hardware or

01:05:37,770 --> 01:05:41,280
whether you have hardware that supports

01:05:39,180 --> 01:05:44,520
dual Bank this architecture will work in

01:05:41,280 --> 01:05:48,630
both cases and the main application is

01:05:44,520 --> 01:05:50,579
doing is an open source module that that

01:05:48,630 --> 01:05:52,349
has an open source module that we've

01:05:50,579 --> 01:05:55,410
created that's responsible for receiving

01:05:52,349 --> 01:05:58,040
writing the new image we're also testing

01:05:55,410 --> 01:06:00,930
the image integrity through

01:05:58,040 --> 01:06:03,630
authentication when we actually run it

01:06:00,930 --> 01:06:06,390
on the on the target device now one of

01:06:03,630 --> 01:06:09,180
the next steps is is to engage to enable

01:06:06,390 --> 01:06:13,770
full encryption so that the iot data

01:06:09,180 --> 01:06:15,690
transfers from the device to the sensor

01:06:13,770 --> 01:06:18,420
whatever will be completely encrypted

01:06:15,690 --> 01:06:22,470
and also the over-the-air update itself

01:06:18,420 --> 01:06:25,970
will also be encrypted that will be in

01:06:22,470 --> 01:06:28,770
the release that we do are in december

01:06:25,970 --> 01:06:29,740
um seems like we're making some progress

01:06:28,770 --> 01:06:32,860
here

01:06:29,740 --> 01:06:35,970
I'm going to switch back to the devices

01:06:32,860 --> 01:06:39,369
and we'll take a look at them and well

01:06:35,970 --> 01:06:42,100
one of them is already updated so we now

01:06:39,369 --> 01:06:49,210
have a blue LED well done guys your code

01:06:42,100 --> 01:06:50,530
was good test works so rather than just

01:06:49,210 --> 01:06:54,010
waiting which will be like paint dry

01:06:50,530 --> 01:06:55,510
will get back to the presentation so we

01:06:54,010 --> 01:06:57,730
are really excited to get this into your

01:06:55,510 --> 01:06:59,530
hands because this has been a very small

01:06:57,730 --> 01:07:01,570
team in the Nara they've worked very

01:06:59,530 --> 01:07:03,400
hard to make this happen but we want to

01:07:01,570 --> 01:07:06,850
see what you what you all can do with it

01:07:03,400 --> 01:07:10,420
so today we're making available carbon

01:07:06,850 --> 01:07:12,820
boards to anybody who wants them and we

01:07:10,420 --> 01:07:15,100
you can pick them up at registration

01:07:12,820 --> 01:07:17,650
after lunchtime anytime after lunch time

01:07:15,100 --> 01:07:19,180
before you do please fill in the form at

01:07:17,650 --> 01:07:24,400
that web addresses the correct address

01:07:19,180 --> 01:07:26,020
lennar o.co / get carbon and you just

01:07:24,400 --> 01:07:27,460
have to sort of fill in one sentence as

01:07:26,020 --> 01:07:30,880
to what you're going to use it for and

01:07:27,460 --> 01:07:32,350
then we'll give you one the software

01:07:30,880 --> 01:07:34,390
that's available for this is all the

01:07:32,350 --> 01:07:37,000
software you've seen here on the client

01:07:34,390 --> 01:07:39,070
side the software to build this the

01:07:37,000 --> 01:07:41,890
software to do the updating we're

01:07:39,070 --> 01:07:44,230
running an ipv6 stack using Zephyrs

01:07:41,890 --> 01:07:46,900
6lowpan networking and we're doing that

01:07:44,230 --> 01:07:48,730
over bluetooth for this demo we're

01:07:46,900 --> 01:07:50,890
showing signing an authentication and

01:07:48,730 --> 01:07:53,800
that's included in the software build

01:07:50,890 --> 01:07:56,800
that we're providing HTTP client

01:07:53,800 --> 01:07:58,810
libraries and then we also based on some

01:07:56,800 --> 01:08:01,780
work that map's group have been doing in

01:07:58,810 --> 01:08:05,050
light of providing not only see but also

01:08:01,780 --> 01:08:07,270
Micro Micro Python and JavaScript as

01:08:05,050 --> 01:08:09,010
applications development languages and

01:08:07,270 --> 01:08:11,080
of course the simple flashing LED

01:08:09,010 --> 01:08:16,690
application with the working blue LED

01:08:11,080 --> 01:08:18,430
now so let's see how we're doing one of

01:08:16,690 --> 01:08:20,799
the images already deployed is word said

01:08:18,430 --> 01:08:22,390
the other one just for refine here so

01:08:20,799 --> 01:08:24,549
you had like a few connectivity issues

01:08:22,390 --> 01:08:26,859
so just like restarting in probing and

01:08:24,549 --> 01:08:29,049
getting the day image again so you're

01:08:26,859 --> 01:08:31,299
going to take a little bit more time I

01:08:29,049 --> 01:08:33,220
know that we're short in time but I also

01:08:31,299 --> 01:08:34,900
wanted to say that we're just testing

01:08:33,220 --> 01:08:37,930
with two bores in here like we're using

01:08:34,900 --> 01:08:39,670
the Gator in here to access just too but

01:08:37,930 --> 01:08:41,830
we could actually you know what provide

01:08:39,670 --> 01:08:43,230
access to more and we're using 6lowpan

01:08:41,830 --> 01:08:45,569
over bluetooth

01:08:43,230 --> 01:08:47,549
so they have like real ipv6 and expose

01:08:45,569 --> 01:08:48,810
it to whatever service that you want and

01:08:47,549 --> 01:08:51,239
on Friday we're going to demonstrate

01:08:48,810 --> 01:08:53,700
with more devices and hopefully more

01:08:51,239 --> 01:08:55,080
kind of in types of devices as well so

01:08:53,700 --> 01:08:57,480
we can provide the same thing but

01:08:55,080 --> 01:08:59,370
describing the entire scenario doing

01:08:57,480 --> 01:09:01,470
like a proper roll out which would mean

01:08:59,370 --> 01:09:06,420
like updating several machines at the

01:09:01,470 --> 01:09:09,210
same time okay so before we wrap up what

01:09:06,420 --> 01:09:10,830
I'd like to do is just ask Tyler to talk

01:09:09,210 --> 01:09:27,000
a little bit about what he's doing with

01:09:10,830 --> 01:09:30,450
get CI com so Tyler if I give you thanks

01:09:27,000 --> 01:09:32,370
George so if you guys go to get CI calm

01:09:30,450 --> 01:09:33,900
right now we have a little bit of

01:09:32,370 --> 01:09:36,839
information out here so essentially what

01:09:33,900 --> 01:09:39,569
we've built is a container orchestration

01:09:36,839 --> 01:09:41,549
system that provides CI services and as

01:09:39,569 --> 01:09:43,380
George said it's fully scalable in the

01:09:41,549 --> 01:09:45,000
sense that we can handle a lot of load

01:09:43,380 --> 01:09:48,600
we built we've embraced the micro

01:09:45,000 --> 01:09:50,279
architecture when we were building this

01:09:48,600 --> 01:09:52,500
out so everything's got an API contract

01:09:50,279 --> 01:09:54,780
and everything's replicated so what we'd

01:09:52,500 --> 01:09:56,010
like to to have you guys do is if you're

01:09:54,780 --> 01:09:57,870
working with a carbon and Zephyr source

01:09:56,010 --> 01:09:59,910
throughout the week go ahead and give it

01:09:57,870 --> 01:10:00,750
a try so it kind of you know gives you

01:09:59,910 --> 01:10:02,340
the site gives you a little bit of

01:10:00,750 --> 01:10:04,320
information about you know what we can

01:10:02,340 --> 01:10:06,060
provide so essentially we can give you

01:10:04,320 --> 01:10:07,530
developer tests we can run the developer

01:10:06,060 --> 01:10:11,280
test in Zephyr for you provide the

01:10:07,530 --> 01:10:12,540
results on a git push it's hassle-free

01:10:11,280 --> 01:10:14,220
right we want to make it as easy as

01:10:12,540 --> 01:10:17,370
possible as simple as just doing a git

01:10:14,220 --> 01:10:18,930
push to get your code tested so if you

01:10:17,370 --> 01:10:20,820
go down to the bottom of this page you

01:10:18,930 --> 01:10:21,900
can put your email in to keep in touch

01:10:20,820 --> 01:10:23,760
if you're interested about new features

01:10:21,900 --> 01:10:25,230
or have feedback for us but you can also

01:10:23,760 --> 01:10:26,520
obtain access so what you'll do is

01:10:25,230 --> 01:10:27,960
you'll create a username and add your

01:10:26,520 --> 01:10:29,820
pub key and then you'll have access to

01:10:27,960 --> 01:10:31,020
the git server that we provide and you

01:10:29,820 --> 01:10:33,330
just push your zipper code there and

01:10:31,020 --> 01:10:34,980
it'll be automatically tested so testing

01:10:33,330 --> 01:10:38,150
is just to get push away as we like to

01:10:34,980 --> 01:10:38,150
say so thank

01:10:41,159 --> 01:10:46,989
alright so thanks very much guys that's

01:10:44,409 --> 01:10:48,940
amazing I mean I I this is the beginning

01:10:46,989 --> 01:10:50,440
of something we wanted to show you some

01:10:48,940 --> 01:10:52,810
of the technology that we're working on

01:10:50,440 --> 01:10:54,730
we're really excited by this the amazing

01:10:52,810 --> 01:10:58,090
thing about this is this piece of

01:10:54,730 --> 01:11:00,250
software runs on is completely portable

01:10:58,090 --> 01:11:03,340
it runs on it's been built with the same

01:11:00,250 --> 01:11:05,739
tools it's the same image and with

01:11:03,340 --> 01:11:07,420
different with configuration of the

01:11:05,739 --> 01:11:09,880
firmware image it's running on

01:11:07,420 --> 01:11:13,239
completely different manufacturer MC use

01:11:09,880 --> 01:11:15,880
and we did this independently of those

01:11:13,239 --> 01:11:18,190
MCU vendors so what we're wanting to do

01:11:15,880 --> 01:11:19,960
is encourage the industry to come round

01:11:18,190 --> 01:11:22,420
this kind of platform and help us

01:11:19,960 --> 01:11:25,000
develop it and we think that this will

01:11:22,420 --> 01:11:27,190
help us to realize the vision that I

01:11:25,000 --> 01:11:30,550
laid out to you earlier of making it

01:11:27,190 --> 01:11:33,130
easier to build the kind of devices that

01:11:30,550 --> 01:11:44,350
we need for the IOT of the future thank

01:11:33,130 --> 01:11:47,730
you very much for your time going to

01:11:44,350 --> 01:11:47,730

YouTube URL: https://www.youtube.com/watch?v=BnQZiXpN3cQ


