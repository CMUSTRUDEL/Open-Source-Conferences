Title: LAS16-107: LAVA users Forum
Publication date: 2016-09-30
Playlist: Linaro Connect Las Vegas 2016
Description: 
	LAS16-107: LAVA Users Forum
Speakers: Steve Mcintyre
Date: September 26, 2016

★ Session Description ★
Feedback and support for and by users of LAVA.

★ Resources ★
Etherpad: pad.linaro.org/p/las16-107
Presentations & Videos: http://connect.linaro.org/resource/las16/las16-107/

★ Event Details ★
Linaro Connect Las Vegas 2016 – #LAS16
September 26-30, 2016
http://www.linaro.org
http://connect.linaro.org
Captions: 
	00:00:07,970 --> 00:00:14,120
so welcome to the lovely users for them

00:00:11,910 --> 00:00:16,470
this is the second time we run this

00:00:14,120 --> 00:00:19,529
we're planning on running one of these

00:00:16,470 --> 00:00:21,449
as long as people find it useful and as

00:00:19,529 --> 00:00:24,090
long as long as we find it useful in the

00:00:21,449 --> 00:00:25,680
lava team to interact with users and

00:00:24,090 --> 00:00:28,050
find out what we're doing wrong what

00:00:25,680 --> 00:00:34,290
we're doing right and what you'd like us

00:00:28,050 --> 00:00:37,230
to do in the future yes this is not me

00:00:34,290 --> 00:00:41,670
talking to you this is pleased you lot

00:00:37,230 --> 00:00:45,950
talking to us come on yes no no not Neil

00:00:41,670 --> 00:00:48,840
we don't want to talk to him yes yes

00:00:45,950 --> 00:00:52,920
explicitly we don't want this to be Neil

00:00:48,840 --> 00:00:55,379
telling people no you're wrong we've had

00:00:52,920 --> 00:00:57,210
we've had some of that in yes although

00:00:55,379 --> 00:01:09,510
that's entertaining it doesn't help us

00:00:57,210 --> 00:01:13,490
very much yes so explicitly please talk

00:01:09,510 --> 00:01:17,270
to us and tell us your experiences and

00:01:13,490 --> 00:01:20,460
what we can do but to help you better

00:01:17,270 --> 00:01:22,080
this may be a shocking concept it hasn't

00:01:20,460 --> 00:01:24,659
really happened much in the past in the

00:01:22,080 --> 00:01:28,110
new lava world we actually want to try

00:01:24,659 --> 00:01:30,720
and develop and support what people need

00:01:28,110 --> 00:01:32,250
more than what water than what we guess

00:01:30,720 --> 00:01:34,110
to people what people need which

00:01:32,250 --> 00:01:42,000
apparently hasn't worked too well in the

00:01:34,110 --> 00:01:43,799
past so I have been going through we

00:01:42,000 --> 00:01:48,420
have one slide of content and so I will

00:01:43,799 --> 00:01:51,049
make the most of it and my role most

00:01:48,420 --> 00:01:53,630
recently has been substantially

00:01:51,049 --> 00:01:56,820
extending the documentation that we have

00:01:53,630 --> 00:01:59,369
are working on improving both the level

00:01:56,820 --> 00:02:03,210
the content to lay out hopefully making

00:01:59,369 --> 00:02:04,409
it more useful again please shout at me

00:02:03,210 --> 00:02:06,899
if you think that there's anything

00:02:04,409 --> 00:02:08,879
missing we know that there's some stuff

00:02:06,899 --> 00:02:10,140
missing yet if there's anything else we

00:02:08,879 --> 00:02:13,580
can do if there's anything that's

00:02:10,140 --> 00:02:13,580
unclear please tell us

00:02:14,180 --> 00:02:21,150
yes Neil is currently editing a pad

00:02:18,510 --> 00:02:23,550
which is linked to form the session in

00:02:21,150 --> 00:02:25,440
pass the ball which is where he's going

00:02:23,550 --> 00:02:27,630
to be taking notes so we have a record

00:02:25,440 --> 00:02:28,740
of this afterwards that's not so we can

00:02:27,630 --> 00:02:30,300
track down the people who are

00:02:28,740 --> 00:02:32,100
complaining and shoot them afterwards

00:02:30,300 --> 00:02:36,080
it's because we want to actually track

00:02:32,100 --> 00:02:36,080
this and you know why make improvements

00:02:36,110 --> 00:02:46,530
just F and the last or that the next

00:02:44,070 --> 00:02:49,740
piece is what do people want have to

00:02:46,530 --> 00:02:51,780
lava again we try to do what people need

00:02:49,740 --> 00:02:53,730
and hopefully what people want they're

00:02:51,780 --> 00:03:00,270
not always the same we are aware with

00:02:53,730 --> 00:03:09,090
this but that's it for me for now you'd

00:03:00,270 --> 00:03:12,390
like to talk you'd like to talk to us so

00:03:09,090 --> 00:03:14,100
I think the Vice dictionary stuff is

00:03:12,390 --> 00:03:15,720
brilliant and I think that's working

00:03:14,100 --> 00:03:18,510
really well where I think we could

00:03:15,720 --> 00:03:21,299
improve it is a way to actually add

00:03:18,510 --> 00:03:22,950
devices and device types from the

00:03:21,299 --> 00:03:25,080
command line because essentially we

00:03:22,950 --> 00:03:27,420
can't really automate you know I've been

00:03:25,080 --> 00:03:29,340
working with dr. deployments of lava and

00:03:27,420 --> 00:03:31,080
it's it's really awesome and it's nice

00:03:29,340 --> 00:03:32,280
to be able to give somebody a doctorate

00:03:31,080 --> 00:03:33,480
dictator with devices that are already

00:03:32,280 --> 00:03:35,940
configured and they could just start

00:03:33,480 --> 00:03:37,440
running jobs to do that though since

00:03:35,940 --> 00:03:39,450
it's based on the hostname and doctor

00:03:37,440 --> 00:03:41,370
gives you take your base hostname

00:03:39,450 --> 00:03:43,049
independent fashion so as you're adding

00:03:41,370 --> 00:03:44,880
devices you have to make sure you do

00:03:43,049 --> 00:03:46,320
that once the docker container starts so

00:03:44,880 --> 00:03:49,080
that the devices have the right worker

00:03:46,320 --> 00:03:51,750
so essentially what we have now is which

00:03:49,080 --> 00:03:54,299
curl scripts going and you know fetching

00:03:51,750 --> 00:03:56,010
the cookie and pecking at the the web UI

00:03:54,299 --> 00:03:58,070
but it would be really great to have a

00:03:56,010 --> 00:04:01,799
command-line tool to simply add a device

00:03:58,070 --> 00:04:03,959
so you do device type device and then

00:04:01,799 --> 00:04:05,400
the device dictionary often the like

00:04:03,959 --> 00:04:10,019
llama to manage can have mine I think

00:04:05,400 --> 00:04:11,760
that would be anointed likely sorry have

00:04:10,019 --> 00:04:13,739
the twice dictionary in a file rather

00:04:11,760 --> 00:04:18,260
than having to type it with the most

00:04:13,739 --> 00:04:18,260
intrigued victory for tomorrow so I

00:04:21,120 --> 00:04:25,180
even if you add a device dictionary it

00:04:23,710 --> 00:04:27,130
doesn't show up as a device type in the

00:04:25,180 --> 00:04:28,900
scheduler right or a device you have to

00:04:27,130 --> 00:04:35,290
go in there and do that process and then

00:04:28,900 --> 00:04:36,870
it shows up right the will help us for

00:04:35,290 --> 00:04:39,700
that Britain they need to be updated

00:04:36,870 --> 00:04:44,200
that's like where's overview and then

00:04:39,700 --> 00:04:45,760
and then documented because that'd be

00:04:44,200 --> 00:04:49,060
great what do you think about doing

00:04:45,760 --> 00:04:51,310
exposing it as an xml RPC call just

00:04:49,060 --> 00:04:53,350
because then you could register devices

00:04:51,310 --> 00:04:55,060
from remote you didn't have to have

00:04:53,350 --> 00:04:58,330
access to the demand on the math sure

00:04:55,060 --> 00:04:59,920
that sounds really cool I know boonie

00:04:58,330 --> 00:05:02,620
unfortunately isn't here has been

00:04:59,920 --> 00:05:06,010
playing quite a bit with his own lava

00:05:02,620 --> 00:05:08,290
installation in last week and has become

00:05:06,010 --> 00:05:11,880
up with a few more suggestions on how to

00:05:08,290 --> 00:05:15,010
make it easier to do your initial setup

00:05:11,880 --> 00:05:17,200
there's a few things we can do that so

00:05:15,010 --> 00:05:19,870
with respect to the device dictionary

00:05:17,200 --> 00:05:24,070
like I don't see a problem in adding a

00:05:19,870 --> 00:05:27,430
xml RPC call except that the device type

00:05:24,070 --> 00:05:30,430
should be of unknown type so the ginger

00:05:27,430 --> 00:05:32,890
has to exist so if it is an unknown type

00:05:30,430 --> 00:05:35,200
of device then like there should be a

00:05:32,890 --> 00:05:38,080
way to like push that ginger and then

00:05:35,200 --> 00:05:41,620
add it as part of lava so if that is

00:05:38,080 --> 00:05:44,320
what is there like we can't do it I

00:05:41,620 --> 00:05:47,500
think we can be able to make it as part

00:05:44,320 --> 00:05:52,080
of xml RPC because like people can push

00:05:47,500 --> 00:05:52,080
wrong ginger which can crash things

00:05:53,130 --> 00:05:58,840
you're proposing then is if I create a

00:05:56,100 --> 00:06:00,430
new device type and I haven't change

00:05:58,840 --> 00:06:01,600
afford you could push that in without

00:06:00,430 --> 00:06:04,900
having to really know the lava server

00:06:01,600 --> 00:06:06,900
source is that what you're saying you

00:06:04,900 --> 00:06:10,330
could do that already you just put it in

00:06:06,900 --> 00:06:12,010
our society it is it etc the problem

00:06:10,330 --> 00:06:14,260
with that of course is that the xml RPC

00:06:12,010 --> 00:06:16,600
user does not have permission to

00:06:14,260 --> 00:06:20,180
anything and etc yeah but I also see

00:06:16,600 --> 00:06:21,919
potential issues with

00:06:20,180 --> 00:06:24,889
people just be able to randomly

00:06:21,919 --> 00:06:27,020
everything of the so the bits we talked

00:06:24,889 --> 00:06:29,030
about with xmlrpc in this bit are all

00:06:27,020 --> 00:06:32,930
going to be super user only unless

00:06:29,030 --> 00:06:35,300
you've got super user on your tokens for

00:06:32,930 --> 00:06:37,250
that instance you are not going to go i

00:06:35,300 --> 00:06:40,460
get to make any of those calls okay i

00:06:37,250 --> 00:06:43,520
mean at the moment I just built a song

00:06:40,460 --> 00:06:46,039
or building a soul type to do ET seal

00:06:43,520 --> 00:06:48,590
our server blah blah whatever the path

00:06:46,039 --> 00:06:51,770
is to get device types in there and

00:06:48,590 --> 00:06:54,110
instead of an xml RPC call what about a

00:06:51,770 --> 00:06:56,270
new manage command lava deshevle manage

00:06:54,110 --> 00:06:58,789
something because if you already need to

00:06:56,270 --> 00:07:00,860
access et Cie to put file inside you

00:06:58,789 --> 00:07:04,099
already have access to the master so it

00:07:00,860 --> 00:07:07,310
may be more what you need yeah so I

00:07:04,099 --> 00:07:10,039
think it's more of I'd like to be able

00:07:07,310 --> 00:07:11,660
to create slaves right there running

00:07:10,039 --> 00:07:13,400
containers that go talk to the master is

00:07:11,660 --> 00:07:15,560
here's the devices i'm registering its

00:07:13,400 --> 00:07:17,360
devices kind of thing so if not that i

00:07:15,560 --> 00:07:19,400
couldn't access it it's just a now i

00:07:17,360 --> 00:07:21,650
can't orchestrate that the i have to

00:07:19,400 --> 00:07:23,060
basically install everything on the

00:07:21,650 --> 00:07:24,590
master and then start the slave up which

00:07:23,060 --> 00:07:25,970
is it bad but it would be nice if i

00:07:24,590 --> 00:07:27,800
could do remote calls from the slave

00:07:25,970 --> 00:07:29,389
just kind of register those devices but

00:07:27,800 --> 00:07:32,030
in this case you're more creating a new

00:07:29,389 --> 00:07:33,710
device and a new device type its rate

00:07:32,030 --> 00:07:35,270
for follow very different to create a

00:07:33,710 --> 00:07:38,060
new device type because you will need

00:07:35,270 --> 00:07:40,639
filing EDC and if you just pretentious

00:07:38,060 --> 00:07:42,919
leave I forgive this right so so they're

00:07:40,639 --> 00:07:45,020
they're supported upstream and I want to

00:07:42,919 --> 00:07:46,610
add so I've got club new devices on the

00:07:45,020 --> 00:07:48,530
master and I want an actual I want a

00:07:46,610 --> 00:07:50,780
Mustang locally right I want to be able

00:07:48,530 --> 00:07:53,030
to go say create Mustang device type and

00:07:50,780 --> 00:07:59,750
then create must angle one and here's

00:07:53,030 --> 00:08:02,479
the device dictionary for it so lava

00:07:59,750 --> 00:08:05,419
super manage commands for creating new

00:08:02,479 --> 00:08:08,360
files in etc or or even just develops

00:08:05,419 --> 00:08:10,699
new device types are just shell shell

00:08:08,360 --> 00:08:20,539
access on the master existing device

00:08:10,699 --> 00:08:21,830
types xmlrpc okay usually let's just ask

00:08:20,539 --> 00:08:31,400
how many people have been working with

00:08:21,830 --> 00:08:33,919
v2 baby too so I've been working on

00:08:31,400 --> 00:08:36,409
trying to get the IFC board running on

00:08:33,919 --> 00:08:39,680
v2 and some people might have see me

00:08:36,409 --> 00:08:43,370
leaving for help on I arson or last a

00:08:39,680 --> 00:08:44,810
little while I with a fair amount of

00:08:43,370 --> 00:08:47,060
hacking I got it working and I can

00:08:44,810 --> 00:08:50,740
actually submit a job now to an icy

00:08:47,060 --> 00:08:54,170
board it is something that at least the

00:08:50,740 --> 00:08:57,110
the code i used the 2016 9 I think

00:08:54,170 --> 00:09:00,500
version of the code so it doesn't

00:08:57,110 --> 00:09:02,300
support it that mode where it you use

00:09:00,500 --> 00:09:05,240
fastboot to download the image and then

00:09:02,300 --> 00:09:07,820
you switch to a serial to actually talk

00:09:05,240 --> 00:09:10,400
to it instead of a DB that's not in the

00:09:07,820 --> 00:09:13,839
2016 9 so I had to do a fair number of

00:09:10,400 --> 00:09:16,310
hackery do to get that going and

00:09:13,839 --> 00:09:19,310
eventually got it one of the things that

00:09:16,310 --> 00:09:21,440
you know I got tripped up on was that a

00:09:19,310 --> 00:09:23,570
few parts of the dispatcher seem to run

00:09:21,440 --> 00:09:25,640
on the server and so sometimes when I

00:09:23,570 --> 00:09:27,199
was mucking with the dispatcher was

00:09:25,640 --> 00:09:29,209
getting issues on the server and I

00:09:27,199 --> 00:09:33,140
couldn't quite understand where the

00:09:29,209 --> 00:09:38,390
handoff was between those two going back

00:09:33,140 --> 00:09:41,510
and forth but I can I I can get the code

00:09:38,390 --> 00:09:42,890
later and you know see with you guys I'm

00:09:41,510 --> 00:09:45,199
sure a lot of it's not the appropriate

00:09:42,890 --> 00:09:47,779
way to do it is just to get it off the

00:09:45,199 --> 00:09:50,240
ground because my next half actually was

00:09:47,779 --> 00:09:52,760
to try to get a embedded device going on

00:09:50,240 --> 00:09:54,949
this so I wanted to learn the deploy and

00:09:52,760 --> 00:09:56,690
boob methods and all of that stuff and I

00:09:54,949 --> 00:09:58,850
really liked his talk this morning

00:09:56,690 --> 00:10:00,760
because it seems like Sean that works

00:09:58,850 --> 00:10:03,230
done for me now

00:10:00,760 --> 00:10:04,910
because yeah that that's really

00:10:03,230 --> 00:10:07,280
ultimately what I'm trying to get is

00:10:04,910 --> 00:10:11,210
some of the devices that we have running

00:10:07,280 --> 00:10:12,530
on our toes starting to be managed in a

00:10:11,210 --> 00:10:15,050
lava set up so that i can download

00:10:12,530 --> 00:10:17,660
images and and start doing some minimal

00:10:15,050 --> 00:10:25,670
testing on on those devices as a next

00:10:17,660 --> 00:10:28,280
step yeah you say that you are the

00:10:25,670 --> 00:10:30,170
issues to know where if it wears a code

00:10:28,280 --> 00:10:32,870
executed between lava must still have a

00:10:30,170 --> 00:10:35,150
slave you said when you because you will

00:10:32,870 --> 00:10:37,730
developing you you were changing items

00:10:35,150 --> 00:10:39,380
for the part yeah okay I think I think

00:10:37,730 --> 00:10:40,940
this is like we talked about yeah we're

00:10:39,380 --> 00:10:42,920
so servers gonna go down looking for

00:10:40,940 --> 00:10:45,080
methods that you described and if it

00:10:42,920 --> 00:10:47,810
doesn't understand that yeah I have a

00:10:45,080 --> 00:10:50,000
patch to fix that okay we were talking

00:10:47,810 --> 00:10:51,980
with a title but that's about it so it

00:10:50,000 --> 00:10:53,990
now in the next release it should be

00:10:51,980 --> 00:10:57,350
fixed all that so it will be everything

00:10:53,990 --> 00:10:59,390
related pipeline to the two buildings by

00:10:57,350 --> 00:11:02,390
Brian runnings pipeline will be only on

00:10:59,390 --> 00:11:04,280
the slave nothing in semester absolutely

00:11:02,390 --> 00:11:07,730
laughs I have to I was doing most of the

00:11:04,280 --> 00:11:13,850
changes on on the on the sleigh but then

00:11:07,730 --> 00:11:16,010
there were a couple of yeah because in

00:11:13,850 --> 00:11:18,290
fact we were describing the pipeline so

00:11:16,010 --> 00:11:20,870
it's a big file that says that is quite

00:11:18,290 --> 00:11:24,260
a full description of the pipeline to to

00:11:20,870 --> 00:11:26,840
have a better description in the UI and

00:11:24,260 --> 00:11:29,120
this fire generating on the master now

00:11:26,840 --> 00:11:31,940
it's generating completely on the slave

00:11:29,120 --> 00:11:35,000
and send back to the master so you won't

00:11:31,940 --> 00:11:36,680
have any pipeline rated code running on

00:11:35,000 --> 00:11:38,450
some faster it will be only on the slave

00:11:36,680 --> 00:11:40,790
okay so you won't have this issue

00:11:38,450 --> 00:11:42,890
anymore when my batch will be applied so

00:11:40,790 --> 00:11:45,200
I'm curious then if we if you have

00:11:42,890 --> 00:11:47,210
different code running as on the

00:11:45,200 --> 00:11:53,480
dispatcher on the pastor and then on a

00:11:47,210 --> 00:11:56,570
slave I'm just curious with that so

00:11:53,480 --> 00:11:58,850
we've already got support in the this

00:11:56,570 --> 00:12:01,330
was back toes 2016 6 and then we put

00:11:58,850 --> 00:12:04,130
this in we put in compatibility

00:12:01,330 --> 00:12:06,920
calculation so when you build the

00:12:04,130 --> 00:12:08,390
pipeline you know what compatibility you

00:12:06,920 --> 00:12:10,760
are expecting both ends and they

00:12:08,390 --> 00:12:12,740
disagree you get fail job yeah just

00:12:10,760 --> 00:12:12,990
we're wondering so it by adding devices

00:12:12,740 --> 00:12:15,480
you

00:12:12,990 --> 00:12:17,190
been through this right so you add

00:12:15,480 --> 00:12:18,720
device but you'd want to go update code

00:12:17,190 --> 00:12:19,950
on the master and the slave you just

00:12:18,720 --> 00:12:22,230
kind of want to work on the slave for a

00:12:19,950 --> 00:12:26,790
while until you're ready is that support

00:12:22,230 --> 00:12:28,260
like Oh change there ok no yes it will

00:12:26,790 --> 00:12:31,200
be my pleasure it won't be an issue

00:12:28,260 --> 00:12:32,820
anymore because as long ago as a slave

00:12:31,200 --> 00:12:35,160
on the master I'm speaking about the

00:12:32,820 --> 00:12:36,990
process is my lava dispatch some slave

00:12:35,160 --> 00:12:38,520
on lap and master as long as they are

00:12:36,990 --> 00:12:40,790
the same version so they speak the same

00:12:38,520 --> 00:12:43,770
protocol you won't have any issues

00:12:40,790 --> 00:12:47,970
because it because technically lava

00:12:43,770 --> 00:12:51,330
slave does create a new process and this

00:12:47,970 --> 00:12:53,610
process will executive type line and

00:12:51,330 --> 00:12:56,250
then just send messages so it's not an

00:12:53,610 --> 00:12:57,690
issue after we have speed up the

00:12:56,250 --> 00:13:03,600
development process especially when you

00:12:57,690 --> 00:13:05,220
have to Ok Go reinstall the master and

00:13:03,600 --> 00:13:07,230
of course they should actually make life

00:13:05,220 --> 00:13:08,640
a lot easier in the mode you were

00:13:07,230 --> 00:13:12,570
looking at talking about this morning

00:13:08,640 --> 00:13:13,950
where you don't have a master you know

00:13:12,570 --> 00:13:20,339
you're just running at things direct in

00:13:13,950 --> 00:13:26,820
the yeah so who here hasn't played with

00:13:20,339 --> 00:13:32,700
v2 yet congratulations you to volunteer

00:13:26,820 --> 00:13:34,740
to talk to us it's there any reason for

00:13:32,700 --> 00:13:46,170
that is it are you waiting on device

00:13:34,740 --> 00:13:47,579
support or okay so we've got they got

00:13:46,170 --> 00:13:49,079
their own micro incidents this is just

00:13:47,579 --> 00:13:52,589
background explanation for everybody

00:13:49,079 --> 00:13:55,890
else and we need the arm energy probe

00:13:52,589 --> 00:14:00,829
support in v2 before they can switch to

00:13:55,890 --> 00:14:00,829
v2 let's say we love coffee

00:14:01,000 --> 00:14:25,130
it's a it's supposed to work everyone

00:14:05,530 --> 00:14:26,960
lots of things like that years old there

00:14:25,130 --> 00:14:28,280
wasn't it they didn't actually need the

00:14:26,960 --> 00:14:29,870
signal handling part of it because

00:14:28,280 --> 00:14:36,770
they've already got that half they just

00:14:29,870 --> 00:14:39,170
wanted the device exposed so essentially

00:14:36,770 --> 00:14:41,210
la vitesse shell would start right and

00:14:39,170 --> 00:14:43,370
then they would use a signal to start

00:14:41,210 --> 00:14:45,140
recording sampling from the but they

00:14:43,370 --> 00:14:46,760
doing all the starting and stopping

00:14:45,140 --> 00:14:48,380
themselves inside the wrong test shell

00:14:46,760 --> 00:14:52,030
because they aren't directly they want

00:14:48,380 --> 00:14:54,260
the control of exactly when not not

00:14:52,030 --> 00:14:56,570
recording starts dance yeah I mean it's

00:14:54,260 --> 00:14:58,310
not exactly Round Rock seeing a message

00:14:56,570 --> 00:15:00,380
over the serial console and then

00:14:58,310 --> 00:15:01,760
starting at something you know yeah when

00:15:00,380 --> 00:15:03,200
you send start doesn't really mean

00:15:01,760 --> 00:15:05,260
that's going to start sampling at that

00:15:03,200 --> 00:15:08,090
exactly but it could do that actually on

00:15:05,260 --> 00:15:12,290
in inside the test shall it will because

00:15:08,090 --> 00:15:15,770
that would mean go to so there they if

00:15:12,290 --> 00:15:17,930
they have the path to the device in /

00:15:15,770 --> 00:15:20,870
dev then they are poking the device

00:15:17,930 --> 00:15:27,710
directly so do we want to talk about

00:15:20,870 --> 00:15:31,100
controlling external well in terms of v2

00:15:27,710 --> 00:15:33,980
that's yeah so we verified in v2 we pass

00:15:31,100 --> 00:15:37,450
it through to a container and run it so

00:15:33,980 --> 00:15:40,070
the the container is good control of the

00:15:37,450 --> 00:15:43,070
whatever the device I mean it's a

00:15:40,070 --> 00:15:45,560
measuring device whether it's power

00:15:43,070 --> 00:15:50,030
consumption or audio or video whatever

00:15:45,560 --> 00:15:55,310
it's a measurement type device 41 it is

00:15:50,030 --> 00:15:56,630
sort of a bit what kinky mildly but then

00:15:55,310 --> 00:15:58,210
we were dealing with a very clunky

00:15:56,630 --> 00:16:01,310
system

00:15:58,210 --> 00:16:05,060
and as Tyler said you you you say start

00:16:01,310 --> 00:16:06,500
but actually you can't guarantee solely

00:16:05,060 --> 00:16:08,450
in your test shell you probably have to

00:16:06,500 --> 00:16:11,270
have a delay and make sure you've

00:16:08,450 --> 00:16:12,260
actually started before you then execute

00:16:11,270 --> 00:16:15,170
the code you want to start measuring

00:16:12,260 --> 00:16:17,990
measurement on yeah how long a delay we

00:16:15,170 --> 00:16:29,420
talking or is it well records seconds

00:16:17,990 --> 00:16:37,520
yes the time seemed like a good way to

00:16:29,420 --> 00:16:42,560
go well v2 gives us the opportunity far

00:16:37,520 --> 00:16:44,840
more than v1 to do this properly and so

00:16:42,560 --> 00:16:46,730
what I'm doing is I'm trying to get not

00:16:44,840 --> 00:16:48,890
just our energy probe but any sort of

00:16:46,730 --> 00:16:52,160
advice that we want to measure the

00:16:48,890 --> 00:16:53,570
generic support in there so doing a

00:16:52,160 --> 00:16:55,520
specific solution just for the

00:16:53,570 --> 00:16:58,430
particular problem with the ACK is not

00:16:55,520 --> 00:17:00,820
just the latency that bad enough the

00:16:58,430 --> 00:17:03,050
problem with the hack is that it gets

00:17:00,820 --> 00:17:06,140
interlaced with the real Colonel

00:17:03,050 --> 00:17:08,060
messages so if you hope you poke

00:17:06,140 --> 00:17:10,280
something and the Colonel's got our

00:17:08,060 --> 00:17:11,420
outputs of the London serial console and

00:17:10,280 --> 00:17:13,670
before we know it that has been

00:17:11,420 --> 00:17:15,230
contaminated the signal was going back

00:17:13,670 --> 00:17:16,970
to the dispatcher you see that all the

00:17:15,230 --> 00:17:18,890
time with particular some boards worse

00:17:16,970 --> 00:17:21,860
than others again sub kernels worse than

00:17:18,890 --> 00:17:23,540
others but yeah so you've got the danger

00:17:21,860 --> 00:17:26,720
that you don't actually spot the signal

00:17:23,540 --> 00:17:35,300
and then yeah and then you're waiting

00:17:26,720 --> 00:17:37,550
forever yeah yeah joy the test itself

00:17:35,300 --> 00:17:41,660
random on the board but then you have

00:17:37,550 --> 00:17:45,500
support for for a measuring device as so

00:17:41,660 --> 00:17:47,690
it's like it is a multi-node yes oh well

00:17:45,500 --> 00:17:50,600
so no the original signal stuff wasn't

00:17:47,690 --> 00:17:54,410
Mulder I'm talking about v2 v2 yeah so

00:17:50,600 --> 00:17:58,280
it's it's a it's a container it's so

00:17:54,410 --> 00:18:01,720
easy so it's the v2 plus likewise good

00:17:58,280 --> 00:18:07,730
for multi-node so it's like Android job

00:18:01,720 --> 00:18:09,250
yeah so if I execute the test on the

00:18:07,730 --> 00:18:12,400
device so how does the

00:18:09,250 --> 00:18:14,050
yeah she's getting at here is what it

00:18:12,400 --> 00:18:15,280
was if the external devices it connected

00:18:14,050 --> 00:18:17,380
to this also basically what i'm getting

00:18:15,280 --> 00:18:19,990
at it's like we have a board at least I

00:18:17,380 --> 00:18:22,060
wants to run the tent there her tests on

00:18:19,990 --> 00:18:24,340
so we have a MediaTek board that does

00:18:22,060 --> 00:18:27,670
something right we have the energy probe

00:18:24,340 --> 00:18:29,140
that's connected to the world so where

00:18:27,670 --> 00:18:31,480
are the tests that rather than should be

00:18:29,140 --> 00:18:33,040
running on the board so is it like there

00:18:31,480 --> 00:18:35,290
they have their own test shell and then

00:18:33,040 --> 00:18:38,980
we have the container controlling the

00:18:35,290 --> 00:18:41,620
energy probe or how does it work i think

00:18:38,980 --> 00:18:45,670
is yeah how do we have you start

00:18:41,620 --> 00:18:47,200
sampling on the end I mean so so you

00:18:45,670 --> 00:18:49,750
have a linux planning on the board that

00:18:47,200 --> 00:18:51,280
you want to measure yeah so where do you

00:18:49,750 --> 00:18:53,410
control the measurement from that source

00:18:51,280 --> 00:18:55,480
i yes how do you initiate the process

00:18:53,410 --> 00:18:57,280
that's a good question I'm not sure how

00:18:55,480 --> 00:18:59,050
you guys think about I mean so how from

00:18:57,280 --> 00:19:00,850
the from a test definition standpoint or

00:18:59,050 --> 00:19:04,480
you can initiate and say Melissa I have

00:19:00,850 --> 00:19:08,140
I have sort of similar similar use case

00:19:04,480 --> 00:19:10,870
for recording the video output so I run

00:19:08,140 --> 00:19:13,210
the test on the other testing port

00:19:10,870 --> 00:19:15,130
that's basically playing back the video

00:19:13,210 --> 00:19:16,930
the known video file and I have to

00:19:15,130 --> 00:19:19,780
record it on the one on the other end

00:19:16,930 --> 00:19:23,740
but I have to start and stop at and then

00:19:19,780 --> 00:19:26,380
and then compare right so how is it

00:19:23,740 --> 00:19:28,300
working with android adb so if you want

00:19:26,380 --> 00:19:36,580
to rights if you want to put an ATK on

00:19:28,300 --> 00:19:38,410
and v2 android is a different beast so

00:19:36,580 --> 00:19:41,680
basically you you run everything on the

00:19:38,410 --> 00:19:44,200
host and then you have right ATP shell

00:19:41,680 --> 00:19:46,120
to the device execute something and then

00:19:44,200 --> 00:19:49,300
at the same time you can control your

00:19:46,120 --> 00:19:51,190
other device from the same host in here

00:19:49,300 --> 00:19:54,090
we're running linux on the board so you

00:19:51,190 --> 00:19:56,500
had to have ssh shell or I don't know

00:19:54,090 --> 00:19:58,090
it's a good question you need I think

00:19:56,500 --> 00:20:03,100
that's something we do that skateboard

00:19:58,090 --> 00:20:06,930
that use case so that's why I'm asking

00:20:03,100 --> 00:20:06,930
whether it's multi-node or a single

00:20:18,120 --> 00:20:24,580
we can have to ask you look at the how

00:20:20,590 --> 00:20:26,890
that actually works but the we still

00:20:24,580 --> 00:20:28,960
need to avoid the round trip along the

00:20:26,890 --> 00:20:30,490
serial console well and I'm also

00:20:28,960 --> 00:20:35,110
thinking about to note isn't actually

00:20:30,490 --> 00:20:38,410
going to help you because it for

00:20:35,110 --> 00:20:41,080
multi-node to do it you still have you

00:20:38,410 --> 00:20:45,760
would then have to have a multi-node of

00:20:41,080 --> 00:20:48,340
a dedicated LXE a dedicated device so

00:20:45,760 --> 00:20:51,040
that way would work if you do it using

00:20:48,340 --> 00:20:53,770
the LXE protocol then currently that

00:20:51,040 --> 00:20:58,380
isn't going to actually tie both ends

00:20:53,770 --> 00:20:58,380
together so we would need to work out

00:20:59,820 --> 00:21:05,440
how we actually get the message from

00:21:02,860 --> 00:21:07,419
because the basic problem for anybody

00:21:05,440 --> 00:21:12,010
who doesn't understand the hour ng probe

00:21:07,419 --> 00:21:14,169
is you got connections onto a board but

00:21:12,010 --> 00:21:17,500
the other end of that cable goes into

00:21:14,169 --> 00:21:19,270
the dispatcher well so you all USB

00:21:17,500 --> 00:21:20,830
complicate that use case a little bit

00:21:19,270 --> 00:21:22,480
more now what militias saying is that

00:21:20,830 --> 00:21:24,580
he's got an HDMI capture card which is

00:21:22,480 --> 00:21:26,590
it gonna fit and when the dl360 seasons

00:21:24,580 --> 00:21:28,630
pcie with this lot so that's going to be

00:21:26,590 --> 00:21:30,580
another host yeah that he wants to talk

00:21:28,630 --> 00:21:32,200
to you to initiate to capture and so I

00:21:30,580 --> 00:21:34,960
don't mind I think that might actually

00:21:32,200 --> 00:21:43,840
have to be genuine multi-node to get out

00:21:34,960 --> 00:21:45,520
to work reliably if we don't use the

00:21:43,840 --> 00:21:49,240
mics we don't get any of this captured

00:21:45,520 --> 00:21:51,940
so I can imagine that I started Alexei

00:21:49,240 --> 00:21:54,490
container on the host that's controlling

00:21:51,940 --> 00:21:57,840
either their energy probe or the HDMI

00:21:54,490 --> 00:22:00,490
capture card and then have SSH SSH

00:21:57,840 --> 00:22:02,110
connection through the to the port that

00:22:00,490 --> 00:22:04,720
that's under test I'm not sure if that

00:22:02,110 --> 00:22:07,780
it's well for for power and the

00:22:04,720 --> 00:22:10,750
secondary next only I can do it from my

00:22:07,780 --> 00:22:12,790
own channel strips like start the ssh

00:22:10,750 --> 00:22:14,919
shell and then execute the commands

00:22:12,790 --> 00:22:16,780
there on the board yeah so it's almost

00:22:14,919 --> 00:22:17,840
like you need a device type for the HDMI

00:22:16,780 --> 00:22:18,799
capture card

00:22:17,840 --> 00:22:23,990
so that's what you're running it on

00:22:18,799 --> 00:22:26,059
right you're yeah that's interesting so

00:22:23,990 --> 00:22:27,919
from this container to start the capture

00:22:26,059 --> 00:22:31,279
you have to be able to run la vitesse

00:22:27,919 --> 00:22:32,600
shell right well you can probably do it

00:22:31,279 --> 00:22:35,990
in a container you just have to have

00:22:32,600 --> 00:22:37,580
access to the actual v4l device right

00:22:35,990 --> 00:22:38,929
but what I'm saying is okay so you're

00:22:37,580 --> 00:22:40,220
right your test case for this rate

00:22:38,929 --> 00:22:41,659
you're going to describe what's going to

00:22:40,220 --> 00:22:44,510
happen inside the LHC container that's

00:22:41,659 --> 00:22:46,039
lava test shall write the container is a

00:22:44,510 --> 00:22:49,130
test shell yeah that's what I'm saying

00:22:46,039 --> 00:22:51,559
like that so ready we Remy's already got

00:22:49,130 --> 00:22:54,679
the secrets support so that we can push

00:22:51,559 --> 00:22:57,620
a key into the container but it is

00:22:54,679 --> 00:22:59,570
exiled already on the test device so now

00:22:57,620 --> 00:23:01,700
you've got that look so it's old and

00:22:59,570 --> 00:23:04,039
contained within one operation and that

00:23:01,700 --> 00:23:05,870
also gives you the synchronization

00:23:04,039 --> 00:23:08,480
envious Utley because you're waiting for

00:23:05,870 --> 00:23:13,789
the SSH command to return before we do

00:23:08,480 --> 00:23:15,919
anything about it yeah so like the only

00:23:13,789 --> 00:23:20,720
only missing bit is like when to call

00:23:15,919 --> 00:23:22,490
the ssh like this is when when to

00:23:20,720 --> 00:23:24,799
establish the ssh connection so you have

00:23:22,490 --> 00:23:27,440
to get know the IP address of the of the

00:23:24,799 --> 00:23:35,390
programme de classe de me or does this

00:23:27,440 --> 00:23:38,240
come from the dictionary if the board

00:23:35,390 --> 00:23:41,649
has a fixed IP address they can cover

00:23:38,240 --> 00:23:44,059
the device dictionary we've still got

00:23:41,649 --> 00:23:45,950
it's a similar problem to what we've got

00:23:44,059 --> 00:23:48,140
with Alexei and Android is you've got to

00:23:45,950 --> 00:23:50,960
have the serial number to be able to

00:23:48,140 --> 00:23:52,039
find the damn thing and it's exactly the

00:23:50,960 --> 00:23:55,100
same problems you're going to have with

00:23:52,039 --> 00:23:57,830
a DB over out over tcp/ip exactly the

00:23:55,100 --> 00:23:59,149
same problem again is so we are going to

00:23:57,830 --> 00:24:01,940
probably come to the lab at some point

00:23:59,149 --> 00:24:04,669
and say there's a need at some point for

00:24:01,940 --> 00:24:07,220
fix IP addresses which change some of

00:24:04,669 --> 00:24:09,740
these device oh absolutely fine except

00:24:07,220 --> 00:24:11,230
for some devices which you're not going

00:24:09,740 --> 00:24:16,220
to do this with on tails don't worry

00:24:11,230 --> 00:24:18,350
I've weird about this will only be

00:24:16,220 --> 00:24:22,419
supported for devices that come up with

00:24:18,350 --> 00:24:24,700
predictable reliable motive and

00:24:22,419 --> 00:24:35,830
I've been configurable back addresses

00:24:24,700 --> 00:24:39,970
okay so it sounds like we're beginning

00:24:35,830 --> 00:24:47,499
to work that out anybody else who is

00:24:39,970 --> 00:24:53,559
waiting on supporting V to have an

00:24:47,499 --> 00:24:57,369
interesting yeah the thing is an Android

00:24:53,559 --> 00:25:01,509
we have a use case where a build slave

00:24:57,369 --> 00:25:04,239
in Jenkins has to talk to a device I

00:25:01,509 --> 00:25:06,970
wanted to understand if lava can provide

00:25:04,239 --> 00:25:10,029
support for an external connection with

00:25:06,970 --> 00:25:12,789
the device in the lab it's similar to a

00:25:10,029 --> 00:25:16,450
hacking session but I would prefer to be

00:25:12,789 --> 00:25:19,539
a simple as possible so that the Jenkins

00:25:16,450 --> 00:25:24,309
slave can request for a Nexus device

00:25:19,539 --> 00:25:27,549
from the lab and the multi no I mean the

00:25:24,309 --> 00:25:30,399
container can provide us with the sh IP

00:25:27,549 --> 00:25:33,940
address and port where we can establish

00:25:30,399 --> 00:25:35,769
the connection and from the host I mean

00:25:33,940 --> 00:25:38,320
from the Jenkins slave will then run a

00:25:35,769 --> 00:25:41,529
DB connection to the device and the

00:25:38,320 --> 00:25:45,879
bigger the need for this is because

00:25:41,529 --> 00:25:48,129
there are tests which are run from the

00:25:45,879 --> 00:25:51,940
build itself it cannot be moved into

00:25:48,129 --> 00:25:55,509
lava so the build itself will expect a

00:25:51,940 --> 00:25:58,419
device to be connected to the I mean

00:25:55,509 --> 00:26:03,039
machine itself so I mean we have this

00:25:58,419 --> 00:26:05,950
kind of setup done manually with the lab

00:26:03,039 --> 00:26:09,100
but I prefer it to be supported by the

00:26:05,950 --> 00:26:12,519
lava dispatcher as well as lab stub

00:26:09,100 --> 00:26:14,919
which will reduce the cost for us we

00:26:12,519 --> 00:26:17,080
have a sip we have a set up similar to

00:26:14,919 --> 00:26:20,200
that not all white none for the

00:26:17,080 --> 00:26:24,570
toolchain working group because they've

00:26:20,200 --> 00:26:27,549
got a Jenkins slave with a VPN

00:26:24,570 --> 00:26:29,919
certificate access through to the TC WG

00:26:27,549 --> 00:26:31,690
lab and that's how they can say if they

00:26:29,919 --> 00:26:35,070
have the link they can talk directly to

00:26:31,690 --> 00:26:38,340
device they are not lava devices

00:26:35,070 --> 00:26:40,590
particular yes so the critical problem

00:26:38,340 --> 00:26:42,690
here is going to be shedding because you

00:26:40,590 --> 00:26:45,269
need to actually understand what they

00:26:42,690 --> 00:26:47,549
are what the impact is on other tests

00:26:45,269 --> 00:26:49,740
jobs that need to use those devices and

00:26:47,549 --> 00:26:51,779
when you have a shortage of hardware

00:26:49,740 --> 00:26:54,690
this is going to become a critical

00:26:51,779 --> 00:26:56,279
blocker so I'm just curious because I

00:26:54,690 --> 00:26:59,009
think they understand what you're trying

00:26:56,279 --> 00:27:00,990
to do so if the Jenkins job creates a

00:26:59,009 --> 00:27:03,509
lot of a job with the parameter it's the

00:27:00,990 --> 00:27:05,669
callback address to jamian's and submits

00:27:03,509 --> 00:27:07,950
the job and so LXE comes up right flat

00:27:05,669 --> 00:27:09,929
or use 18 eb axes it could wait for

00:27:07,950 --> 00:27:11,159
quite some time so but the LXE

00:27:09,929 --> 00:27:13,590
containers going to run with la vitesse

00:27:11,159 --> 00:27:15,990
shell right so you could have lava test

00:27:13,590 --> 00:27:17,429
shall take that IP address in you know

00:27:15,990 --> 00:27:19,320
you could set up the board however you

00:27:17,429 --> 00:27:20,730
need it to and then you said you're

00:27:19,320 --> 00:27:21,720
running whatever script you have in lot

00:27:20,730 --> 00:27:23,429
of tests shell could send that

00:27:21,720 --> 00:27:24,870
information back the jenkins job saying

00:27:23,429 --> 00:27:27,240
you know here's the port that you

00:27:24,870 --> 00:27:29,730
connect on although within a container

00:27:27,240 --> 00:27:31,409
context unless you're running it with

00:27:29,730 --> 00:27:38,490
privileges you're not going to be able

00:27:31,409 --> 00:27:40,350
to I mean it's not an issue with

00:27:38,490 --> 00:27:43,279
shortage of devices these are kind of

00:27:40,350 --> 00:27:46,110
reserved devices for the bills itself

00:27:43,279 --> 00:27:53,279
which will it's like more of a reserve

00:27:46,110 --> 00:27:57,840
device for yeah i mean even if they are

00:27:53,279 --> 00:28:00,090
under lava the expectation is the owners

00:27:57,840 --> 00:28:02,399
of this the stakeholders of these jobs

00:28:00,090 --> 00:28:04,289
will make sure these devices are

00:28:02,399 --> 00:28:06,990
provided to lava and they're

00:28:04,289 --> 00:28:10,409
specifically used for these jobs only i

00:28:06,990 --> 00:28:13,200
mean i understand i mean these specific

00:28:10,409 --> 00:28:16,710
Connexus devices and these are more of

00:28:13,200 --> 00:28:18,690
like reserved devices to be run to be

00:28:16,710 --> 00:28:20,990
running only these jobs I mean I'm not

00:28:18,690 --> 00:28:29,340
bother about the shortage of resources

00:28:20,990 --> 00:28:32,220
the issue that I see is the access setup

00:28:29,340 --> 00:28:34,889
that has to be done through the lava and

00:28:32,220 --> 00:28:37,740
through the lab for external devices to

00:28:34,889 --> 00:28:39,389
access it so were you looking to flash

00:28:37,740 --> 00:28:40,889
the device with a build or you just one

00:28:39,389 --> 00:28:42,470
it's already flashed and running and you

00:28:40,889 --> 00:28:47,289
just want to provide an ATV connect

00:28:42,470 --> 00:28:51,440
yeah I mean it that's another discussion

00:28:47,289 --> 00:28:54,289
we would prefer to have a standard

00:28:51,440 --> 00:28:56,179
health check job to be flashed or a

00:28:54,289 --> 00:28:58,520
better thing is that you don't flash the

00:28:56,179 --> 00:29:01,190
device at all do a dummy boot call and

00:28:58,520 --> 00:29:03,440
just device would still be in both state

00:29:01,190 --> 00:29:07,220
and you are able to establish the

00:29:03,440 --> 00:29:09,580
connection a reason being sometimes we

00:29:07,220 --> 00:29:13,309
have stability issues with these

00:29:09,580 --> 00:29:17,630
production devices where flashing and

00:29:13,309 --> 00:29:19,400
booting would have stability issues the

00:29:17,630 --> 00:29:21,470
way we've seen with Nexus 9 kind of

00:29:19,400 --> 00:29:24,110
things the idea is that for these

00:29:21,470 --> 00:29:25,850
devices we don't want to actually flash

00:29:24,110 --> 00:29:29,780
a boot anything we just interested to

00:29:25,850 --> 00:29:33,409
run some tests that's it so I am curious

00:29:29,780 --> 00:29:36,080
what does law ever do for you hear what

00:29:33,409 --> 00:29:38,539
you came from easing over device

00:29:36,080 --> 00:29:43,610
management is the only thing which we

00:29:38,539 --> 00:29:45,169
are expecting from Lamar Jenkins can't I

00:29:43,610 --> 00:29:47,210
should do the connections to the device

00:29:45,169 --> 00:29:50,659
is easy as lava tough but I'm thinking

00:29:47,210 --> 00:29:52,549
about I think the problem with Jenkins

00:29:50,659 --> 00:29:53,809
is how are you managing the devices with

00:29:52,549 --> 00:29:55,490
the Jenkins jobs running because there

00:29:53,809 --> 00:29:57,770
you have a few devices connected right

00:29:55,490 --> 00:30:03,890
we're doing a manual easy no I was think

00:29:57,770 --> 00:30:06,140
was what do you how you handling issues

00:30:03,890 --> 00:30:09,530
that we have with these kind of setups

00:30:06,140 --> 00:30:12,200
of persistence when the if you're not

00:30:09,530 --> 00:30:14,450
flashing it then if you make any changes

00:30:12,200 --> 00:30:16,700
to the device by running these tests

00:30:14,450 --> 00:30:18,770
those changes will be persistent and it

00:30:16,700 --> 00:30:21,440
will remain contaminate next test the

00:30:18,770 --> 00:30:24,350
things the way we run these tests it's

00:30:21,440 --> 00:30:27,830
more like sea route kind of environment

00:30:24,350 --> 00:30:34,580
where it doesn't actually affect the

00:30:27,830 --> 00:30:38,620
underlying so it's a yes yes and to

00:30:34,580 --> 00:30:43,880
answer your question we cannot be having

00:30:38,620 --> 00:30:48,049
around 25 devices and these are

00:30:43,880 --> 00:30:50,360
statically configured to we have static

00:30:48,049 --> 00:30:52,850
map between Jenkins and this device the

00:30:50,360 --> 00:30:54,940
thing is we can't scale up with the

00:30:52,850 --> 00:30:57,490
current setup

00:30:54,940 --> 00:30:59,680
lava that will help us I mean if you add

00:30:57,490 --> 00:31:03,250
a couple of build machines and head

00:30:59,680 --> 00:31:06,600
snares and then just adding those

00:31:03,250 --> 00:31:09,730
devices in the lab will help us better

00:31:06,600 --> 00:31:14,800
the way we wanna if we do it not

00:31:09,730 --> 00:31:16,840
scalable so just sorry that almost

00:31:14,800 --> 00:31:19,210
sounds like a good fit potentially for

00:31:16,840 --> 00:31:21,010
the masterless set up the tall has been

00:31:19,210 --> 00:31:22,870
shown the band you know just having a

00:31:21,010 --> 00:31:24,340
dispatcher well see the problem that

00:31:22,870 --> 00:31:27,130
I've see so your build machines are in

00:31:24,340 --> 00:31:29,680
the lab right there external so we need

00:31:27,130 --> 00:31:31,690
to firewall rules the traffic through

00:31:29,680 --> 00:31:33,280
and then yes I need to expose the tcp/ip

00:31:31,690 --> 00:31:34,720
port which are forwarding to a TV

00:31:33,280 --> 00:31:37,090
connection through on the local

00:31:34,720 --> 00:31:39,010
dispatchers this is also problematic so

00:31:37,090 --> 00:31:43,570
there's two levels of redirection that

00:31:39,010 --> 00:31:45,160
need to happen to get that out that's

00:31:43,570 --> 00:31:47,430
very similar to what we're doing for TC

00:31:45,160 --> 00:31:47,430
company

00:31:59,070 --> 00:32:05,020
it's hard to make lava you see you know

00:32:02,890 --> 00:32:06,520
it's like you the paradigm the lava is

00:32:05,020 --> 00:32:08,140
it's like a test automation framework

00:32:06,520 --> 00:32:09,640
n-not a device management for you

00:32:08,140 --> 00:32:11,680
although it doesn't manage devices so

00:32:09,640 --> 00:32:13,120
it's like it's thin line that we still

00:32:11,680 --> 00:32:22,020
haven't really solved on how to provide

00:32:13,120 --> 00:32:25,690
both right I mean this kind of helps the

00:32:22,020 --> 00:32:28,380
developers as well I mean where we just

00:32:25,690 --> 00:32:32,530
want to run some tests on the device and

00:32:28,380 --> 00:32:35,380
we don't have it at our desk the hacking

00:32:32,530 --> 00:32:41,740
session does work but if we can simplify

00:32:35,380 --> 00:32:43,390
it that's what we expect but this is

00:32:41,740 --> 00:32:45,700
where again I come back to the issue of

00:32:43,390 --> 00:32:47,980
persistence you've got to make sure that

00:32:45,700 --> 00:32:50,260
these kinds of tests to always use that

00:32:47,980 --> 00:32:52,420
tribute protection and always came up

00:32:50,260 --> 00:32:55,090
after themselves because these are the

00:32:52,420 --> 00:32:57,310
problems where we have this all over the

00:32:55,090 --> 00:32:59,590
time or all the time is the people can

00:32:57,310 --> 00:33:02,290
say I just want to boot the device and

00:32:59,590 --> 00:33:03,940
run my tests and yeah that the next

00:33:02,290 --> 00:33:05,500
person is going to be effective or what

00:33:03,940 --> 00:33:09,480
you need yeah I mean I totally agree

00:33:05,500 --> 00:33:11,830
with your point there the thing is that

00:33:09,480 --> 00:33:15,640
with Android it's not like we're going

00:33:11,830 --> 00:33:17,590
to break the bootloader or anything in a

00:33:15,640 --> 00:33:20,860
way which through which you cannot

00:33:17,590 --> 00:33:22,900
recover the board no I'm not talking

00:33:20,860 --> 00:33:24,970
about necessarily changing the lower

00:33:22,900 --> 00:33:27,490
levels of the support yeah you can even

00:33:24,970 --> 00:33:29,680
make changes in the operating system one

00:33:27,490 --> 00:33:31,960
thing that will scare David but they've

00:33:29,680 --> 00:33:34,390
put us down there is if one of these

00:33:31,960 --> 00:33:37,150
tests managed to turn off a DB

00:33:34,390 --> 00:33:39,580
protection ATP support which is possible

00:33:37,150 --> 00:33:42,040
through through UI automation and you

00:33:39,580 --> 00:33:44,530
all you can just end up changing the

00:33:42,040 --> 00:33:46,840
settings through a normal run of the

00:33:44,530 --> 00:33:49,210
test the test doesn't complete it

00:33:46,840 --> 00:33:51,730
doesn't undo those changes and now you

00:33:49,210 --> 00:33:54,520
have got a device that's not bricked but

00:33:51,730 --> 00:33:59,550
is completely invisible to lava yeah i

00:33:54,520 --> 00:33:59,550
mean i agree that's a valid point

00:34:00,179 --> 00:34:03,690
I'm just gonna say we can write

00:34:01,409 --> 00:34:06,869
something to do this it's outside a lava

00:34:03,690 --> 00:34:08,639
you need a queue right so something that

00:34:06,869 --> 00:34:10,200
manages the devices knows about it you

00:34:08,639 --> 00:34:12,119
could make a simple request to it and

00:34:10,200 --> 00:34:13,440
then the other thing is going to have to

00:34:12,119 --> 00:34:16,050
be able to do is kill the tunnel when

00:34:13,440 --> 00:34:18,690
you're done or it times out yeah but I

00:34:16,050 --> 00:34:20,339
mean I think that's probably if you want

00:34:18,690 --> 00:34:25,710
to get some scalability writing

00:34:20,339 --> 00:34:27,179
something like that yeah yeah yeah yeah

00:34:25,710 --> 00:34:30,960
agreed it really doesn't sound like a

00:34:27,179 --> 00:34:33,690
good fit as part of lava just using lava

00:34:30,960 --> 00:34:34,770
for the scheduling part yeah cuz if

00:34:33,690 --> 00:34:37,829
anything you're going to be fighting the

00:34:34,770 --> 00:34:40,200
scheduling all the time I mean in terms

00:34:37,829 --> 00:34:42,559
of opening ports and whatever you could

00:34:40,200 --> 00:34:45,899
even have something VP ending outbound

00:34:42,559 --> 00:34:48,750
to somewhere else and then leaving a

00:34:45,899 --> 00:34:50,369
tunnel open yeah I'm you off top my head

00:34:48,750 --> 00:34:52,619
the way I would do it is I've got that

00:34:50,369 --> 00:34:54,780
shell script that will take local atb

00:34:52,619 --> 00:34:57,420
conventions and then for them on a local

00:34:54,780 --> 00:34:59,369
port and essentially use like ZM Hugh to

00:34:57,420 --> 00:35:02,280
manage the queue of requests to come in

00:34:59,369 --> 00:35:04,470
and then just dump a port range 12 that

00:35:02,280 --> 00:35:06,000
you know and then it manages the the

00:35:04,470 --> 00:35:07,680
devices that it's forwarding and the

00:35:06,000 --> 00:35:09,180
port range right so that you know

00:35:07,680 --> 00:35:10,619
basically we'd send a request back to

00:35:09,180 --> 00:35:11,970
the person that asks saying here's your

00:35:10,619 --> 00:35:13,380
here's your IP and port that you need to

00:35:11,970 --> 00:35:17,880
hit and then manage that connection

00:35:13,380 --> 00:35:20,190
briefly be a broker for a little

00:35:17,880 --> 00:35:22,260
forwarding diamond which justice it you

00:35:20,190 --> 00:35:24,030
know it's probably overkill it is I

00:35:22,260 --> 00:35:25,530
think you just dumping a port range it's

00:35:24,030 --> 00:35:26,970
just simpler than trying to modify

00:35:25,530 --> 00:35:28,849
because then you have something

00:35:26,970 --> 00:35:35,339
automated messing with your firewall

00:35:28,849 --> 00:35:43,190
yeah scary stuff anybody else waiting on

00:35:35,339 --> 00:35:43,190
me to support for their devices yeah

00:35:44,770 --> 00:35:55,740
what one question here hands up anybody

00:35:48,430 --> 00:35:58,240
who cares about highbank midway in b2

00:35:55,740 --> 00:35:59,410
tile if you up with you pal if you put

00:35:58,240 --> 00:36:06,610
your hand up your right in the device

00:35:59,410 --> 00:36:10,150
integration but that's that's what we

00:36:06,610 --> 00:36:13,960
think is is it there are devices where

00:36:10,150 --> 00:36:16,000
we have to balance the workload is going

00:36:13,960 --> 00:36:17,470
to be there of doing the device

00:36:16,000 --> 00:36:19,450
integration so did you see the latest

00:36:17,470 --> 00:36:20,890
high bank code that I wrote mmm it's

00:36:19,450 --> 00:36:22,750
just I turn it into a you bootloader

00:36:20,890 --> 00:36:26,380
device it doesn't need all the crazy

00:36:22,750 --> 00:36:28,450
ipmi stuff anymore I abstracted the ipmi

00:36:26,380 --> 00:36:30,490
power commands into a power off and a

00:36:28,450 --> 00:36:32,170
hard reset command and then configured

00:36:30,490 --> 00:36:35,110
it with you boo Midway needs to be done

00:36:32,170 --> 00:36:36,580
but we can if it's a standard you boot

00:36:35,110 --> 00:36:39,930
config now so it should be fairly

00:36:36,580 --> 00:36:42,130
portable device sounds much better yeah

00:36:39,930 --> 00:36:44,110
these are the questions we need to ask

00:36:42,130 --> 00:36:47,800
people is so there are some devices

00:36:44,110 --> 00:36:49,120
currently supported in Dave's lab is it

00:36:47,800 --> 00:36:51,700
just because they're allowed down is

00:36:49,120 --> 00:36:54,280
that why you guys want them gone no it's

00:36:51,700 --> 00:36:56,620
not it's not it's not the volume ii it

00:36:54,280 --> 00:36:58,630
is the fact that we're not sure how much

00:36:56,620 --> 00:37:00,700
work is going to be is it worth it

00:36:58,630 --> 00:37:03,130
because these devices are supported and

00:37:00,700 --> 00:37:06,070
let me just point out that the Midway we

00:37:03,130 --> 00:37:08,590
have one node in Marvin it's very flaky

00:37:06,070 --> 00:37:12,550
yeah we have no way of getting support

00:37:08,590 --> 00:37:14,560
for it clearly in fact just before this

00:37:12,550 --> 00:37:17,080
session started Marie and I were looking

00:37:14,560 --> 00:37:19,000
at at the midway cause in a trail

00:37:17,080 --> 00:37:21,310
because halfway through the soul session

00:37:19,000 --> 00:37:24,550
just terminated and that happens all the

00:37:21,310 --> 00:37:27,160
time so these are the kinds of things so

00:37:24,550 --> 00:37:29,950
my concern is long-term support for a

00:37:27,160 --> 00:37:32,230
device we can get no support on exactly

00:37:29,950 --> 00:37:34,120
because I think we just do it Midway and

00:37:32,230 --> 00:37:35,710
then as long as there's enough high bank

00:37:34,120 --> 00:37:37,660
notes that are functioning we can use

00:37:35,710 --> 00:37:38,860
them until they die off because we'll

00:37:37,660 --> 00:37:40,060
never get up again and then we can just

00:37:38,860 --> 00:37:42,220
show that's exactly where we're coming

00:37:40,060 --> 00:37:44,530
from they're all quite there's not many

00:37:42,220 --> 00:37:46,300
there's a few devices that we went

00:37:44,530 --> 00:37:48,420
through this last week there's a few

00:37:46,300 --> 00:37:50,950
devices that have we won't support only

00:37:48,420 --> 00:37:52,540
but as for we can see they're basically

00:37:50,950 --> 00:37:54,490
dead they may not have stopped moving

00:37:52,540 --> 00:37:56,230
yet but they're basically dead you know

00:37:54,490 --> 00:37:57,730
so there's no there is probably isn't

00:37:56,230 --> 00:37:59,800
much point in twin

00:37:57,730 --> 00:38:01,690
ending any effort moving to veto on

00:37:59,800 --> 00:38:04,060
somewhat some of them if there is a

00:38:01,690 --> 00:38:08,590
point then obviously we want to know we

00:38:04,060 --> 00:38:11,320
can do it but you know we were obviously

00:38:08,590 --> 00:38:13,570
we went through and there aren't many

00:38:11,320 --> 00:38:16,710
devices left that we don't have v to

00:38:13,570 --> 00:38:19,090
support for we know about in a bit as

00:38:16,710 --> 00:38:22,570
dean is still finishing off do you know

00:38:19,090 --> 00:38:24,550
support that kind of thing but we we

00:38:22,570 --> 00:38:27,570
really want to get to the point where we

00:38:24,550 --> 00:38:33,790
could migrate our own lab off we won

00:38:27,570 --> 00:38:36,400
some point this decade you know so

00:38:33,790 --> 00:38:40,660
that's it's a priority we'd like to

00:38:36,400 --> 00:38:42,100
focus on is actually is supplying all

00:38:40,660 --> 00:38:44,380
the v2 support for all of the devices

00:38:42,100 --> 00:38:46,780
that we actually care about if we can

00:38:44,380 --> 00:38:50,380
get to that point in our own lab we can

00:38:46,780 --> 00:38:51,880
then start to sensibly say to people we

00:38:50,380 --> 00:38:52,990
want support you know you know we've

00:38:51,880 --> 00:38:55,570
been threatening that we're going to

00:38:52,990 --> 00:38:57,250
start taking it out I almost guarantee

00:38:55,570 --> 00:38:58,780
that we are the only la for instance

00:38:57,250 --> 00:39:04,330
anywhere in the world that's got midway

00:38:58,780 --> 00:39:06,280
or high banking yeah it so the detail of

00:39:04,330 --> 00:39:08,050
this will actually be in my migration

00:39:06,280 --> 00:39:10,600
talk later in the week so if you're

00:39:08,050 --> 00:39:13,210
interested in in the time scale of what

00:39:10,600 --> 00:39:14,830
we're planning for the end of life of v1

00:39:13,210 --> 00:39:18,010
how we're going to do it on what the

00:39:14,830 --> 00:39:22,090
requirements are all I can stop and go

00:39:18,010 --> 00:39:24,100
through that in the migration talk I

00:39:22,090 --> 00:39:25,840
think it's Thursday you can take an

00:39:24,100 --> 00:39:28,990
impassable of a negative response team

00:39:25,840 --> 00:39:32,109
well well it simply and simples gotta

00:39:28,990 --> 00:39:34,900
talk on the LXE support on Friday as

00:39:32,109 --> 00:39:37,210
well so if if containers and how you use

00:39:34,900 --> 00:39:39,340
containers for your test jobs is is

00:39:37,210 --> 00:39:41,380
relevant to what any other questions you

00:39:39,340 --> 00:39:46,990
can ask it then simples totally want to

00:39:41,380 --> 00:39:49,530
go for as well I think we've got about

00:39:46,990 --> 00:39:52,810
five minutes left wow that's going fast

00:39:49,530 --> 00:40:00,130
yeah anything else people would like to

00:39:52,810 --> 00:40:03,730
talk about or people liking v2 yeah is

00:40:00,130 --> 00:40:09,760
it making your life better bit by bit

00:40:03,730 --> 00:40:14,050
good yeah hell yes yeah comments in your

00:40:09,760 --> 00:40:16,440
in your jobs um so Dave as the main

00:40:14,050 --> 00:40:18,960
admin of the biggest lab we know about

00:40:16,440 --> 00:40:21,760
although we have any interaction with

00:40:18,960 --> 00:40:37,960
what do you not like about me too what

00:40:21,760 --> 00:40:39,640
are we still missing yet seems

00:40:37,960 --> 00:40:40,960
ridiculous that you know that would be a

00:40:39,640 --> 00:40:42,580
feature but it's actually quite handy

00:40:40,960 --> 00:40:43,960
when you run a job that fails and you're

00:40:42,580 --> 00:40:45,250
like okay I just want to click resubmit

00:40:43,960 --> 00:40:47,470
here I don't want to go and back to the

00:40:45,250 --> 00:40:50,160
demand plan and do it so we don't have

00:40:47,470 --> 00:40:52,090
what submission yet v2 that's something

00:40:50,160 --> 00:40:59,710
number of people have pointed out

00:40:52,090 --> 00:41:01,600
already there are meant to be member

00:40:59,710 --> 00:41:03,000
assignees were doing this and waiting to

00:41:01,600 --> 00:41:06,900
see any more from them otherwise

00:41:03,000 --> 00:41:13,330
probably will just end up doing it if

00:41:06,900 --> 00:41:17,320
anything else Dave no I think I have a

00:41:13,330 --> 00:41:21,220
concern but it's not so much about v2

00:41:17,320 --> 00:41:26,440
it's about legacy when we switch v1 off

00:41:21,220 --> 00:41:29,680
and at what point that code gets removed

00:41:26,440 --> 00:41:36,760
and we no longer have any v1 support at

00:41:29,680 --> 00:41:38,710
all anywhere I'm sure I mean is that a

00:41:36,760 --> 00:41:43,330
specific concern or is it just worrying

00:41:38,710 --> 00:41:45,850
because it's going away oh no I'm happy

00:41:43,330 --> 00:41:48,730
for everyone to go away I worried about

00:41:45,850 --> 00:41:52,350
other people outside of linaro whoo Oh

00:41:48,730 --> 00:41:54,430
whoo have lava instances and

00:41:52,350 --> 00:41:56,590
evangelizing enough and getting the

00:41:54,430 --> 00:41:59,140
message out there enough that this is

00:41:56,590 --> 00:42:05,080
happening and it will go away and your

00:41:59,140 --> 00:42:08,140
v1 jobs will stop working so again I'll

00:42:05,080 --> 00:42:09,760
cover this in the migration talk itself

00:42:08,140 --> 00:42:12,490
and the detail of how we're going to do

00:42:09,760 --> 00:42:14,980
it but for everybody in this room

00:42:12,490 --> 00:42:16,360
if you have any stake in lava you need

00:42:14,980 --> 00:42:17,980
to be subscribed to the larvae

00:42:16,360 --> 00:42:19,570
announcement unless that's where all

00:42:17,980 --> 00:42:23,320
this kind of stuff that's where all the

00:42:19,570 --> 00:42:26,050
timing will be announced we can do what

00:42:23,320 --> 00:42:30,040
we can to put big prominent notices in

00:42:26,050 --> 00:42:32,350
the documentation in the news father you

00:42:30,040 --> 00:42:34,780
get when you install the package but at

00:42:32,350 --> 00:42:36,430
the end of the day if the best medium

00:42:34,780 --> 00:42:39,790
for getting this information out there

00:42:36,430 --> 00:42:43,540
is our forms like this to get people it

00:42:39,790 --> 00:42:45,550
subscribed and then just use the main

00:42:43,540 --> 00:42:48,480
less it's really really low volume you

00:42:45,550 --> 00:42:51,130
give one or two emails a month

00:42:48,480 --> 00:42:52,810
acknowledged so what's one of those is

00:42:51,130 --> 00:42:54,369
the notification that we just done a

00:42:52,810 --> 00:42:55,600
production release and there's new

00:42:54,369 --> 00:42:59,350
version available it has all these

00:42:55,600 --> 00:43:01,630
changes there are and we limit it to the

00:42:59,350 --> 00:43:03,580
most important messages only any other

00:43:01,630 --> 00:43:05,470
discussions can happen on wobbly uses

00:43:03,580 --> 00:43:08,650
less than the other list we've got so

00:43:05,470 --> 00:43:10,720
it's really important everybody has any

00:43:08,650 --> 00:43:14,260
stake in it is subscribe to our announce

00:43:10,720 --> 00:43:16,720
under the links there in the in the

00:43:14,260 --> 00:43:18,910
documentation so what do you think about

00:43:16,720 --> 00:43:20,800
when whenever we figure out what the

00:43:18,910 --> 00:43:22,660
month is we're going to switch it off

00:43:20,800 --> 00:43:24,070
and delete the code a couple months

00:43:22,660 --> 00:43:27,250
before that we put warnings on the

00:43:24,070 --> 00:43:29,260
xml-rpc job submission and the exactly

00:43:27,250 --> 00:43:30,580
to say yeah you were submitting a legacy

00:43:29,260 --> 00:43:32,369
job it is going away here's the

00:43:30,580 --> 00:43:34,630
documentation for v2 you should separate

00:43:32,369 --> 00:43:37,020
because I think the first thing that

00:43:34,630 --> 00:43:40,210
happens the first thing that actually

00:43:37,020 --> 00:43:43,900
cuts anybody off is we're going to just

00:43:40,210 --> 00:43:46,690
drop JSON v1 submissions at the xml RPC

00:43:43,900 --> 00:43:49,330
and the web UI level that's the first

00:43:46,690 --> 00:43:51,190
thing but we were trying to as much

00:43:49,330 --> 00:43:54,160
warning of that as we can and ahead of

00:43:51,190 --> 00:43:56,770
that there should be a warning coming

00:43:54,160 --> 00:43:59,650
back this is this is now deprecated yet

00:43:56,770 --> 00:44:01,570
and it will go away so we will have we

00:43:59,650 --> 00:44:03,640
will have warning in for a full release

00:44:01,570 --> 00:44:06,940
then we do the release that takes out

00:44:03,640 --> 00:44:10,660
there the the submission then we start

00:44:06,940 --> 00:44:13,250
doing so this is all in the

00:44:10,660 --> 00:44:18,200
we have gone through some of the levels

00:44:13,250 --> 00:44:20,720
of this but it's just they'll be printed

00:44:18,200 --> 00:44:22,819
more time to work at exactly where we

00:44:20,720 --> 00:44:25,549
put the warnings on when the timing is

00:44:22,819 --> 00:44:28,430
but at each stage of this we're looking

00:44:25,549 --> 00:44:33,529
at a comprar full release cycle between

00:44:28,430 --> 00:44:35,779
each of the actual big stages okay and

00:44:33,529 --> 00:44:39,020
then what degree 1 is gone we do have a

00:44:35,779 --> 00:44:40,760
slew of really cool cute things that we

00:44:39,020 --> 00:44:45,349
can't even consider doing while we have

00:44:40,760 --> 00:44:48,410
an ev1 code left so it's a yes really

00:44:45,349 --> 00:44:50,599
deaf we do have some very cool things

00:44:48,410 --> 00:44:52,490
that we'd love to do but are just

00:44:50,599 --> 00:44:54,410
totally impossible to do without

00:44:52,490 --> 00:44:57,470
removing everyone because they're just

00:44:54,410 --> 00:44:59,720
not going to work without available v1

00:44:57,470 --> 00:45:01,940
is currently and actively holding us

00:44:59,720 --> 00:45:06,279
back some things that we will bring no

00:45:01,940 --> 00:45:09,680
v2 can do and there is so we're already

00:45:06,279 --> 00:45:12,170
noticing that we've been having a team

00:45:09,680 --> 00:45:14,660
held back some things they want to do by

00:45:12,170 --> 00:45:18,260
having v1 even just present in the code

00:45:14,660 --> 00:45:20,960
base so that's why we're pushing this

00:45:18,260 --> 00:45:22,910
pushing and pushing it's not at least

00:45:20,960 --> 00:45:25,430
not something that we can just live with

00:45:22,910 --> 00:45:27,349
we can't just leave to go there it'll be

00:45:25,430 --> 00:45:29,480
in get you got all the katha story

00:45:27,349 --> 00:45:33,670
you've got all releases in terms of

00:45:29,480 --> 00:45:33,670
what's actually released it must go away

00:45:35,260 --> 00:45:40,730
those occasional changes go in not to

00:45:38,510 --> 00:45:43,369
actually make any behavior changes just

00:45:40,730 --> 00:45:44,990
to just to keep it running we actually

00:45:43,369 --> 00:45:47,210
get more contribution from people

00:45:44,990 --> 00:45:49,220
outside linaro compete one continent yes

00:45:47,210 --> 00:45:50,809
I think that's what Dave's concern is is

00:45:49,220 --> 00:45:52,609
that you know people are still selling

00:45:50,809 --> 00:45:54,980
patches for that where they really you

00:45:52,609 --> 00:45:56,329
know that's true actually a one of the

00:45:54,980 --> 00:45:58,520
colonel CI guys are sending the device

00:45:56,329 --> 00:46:01,339
can fix most is it mostly configs and

00:45:58,520 --> 00:46:03,020
actually code changes for be one when I

00:46:01,339 --> 00:46:05,270
say when I say there have been changes

00:46:03,020 --> 00:46:08,270
i'm talking about two or three o'clock

00:46:05,270 --> 00:46:10,670
so you know but there have been about

00:46:08,270 --> 00:46:13,730
equally we've had three or four changes

00:46:10,670 --> 00:46:17,750
from people outside of linaro for v2 as

00:46:13,730 --> 00:46:20,329
well so but we've just had what are two

00:46:17,750 --> 00:46:21,850
or three changes for v1 related code I

00:46:20,329 --> 00:46:24,230
got the impression

00:46:21,850 --> 00:46:26,300
reviewing those that those were put

00:46:24,230 --> 00:46:32,780
there because the v2 support wasn't

00:46:26,300 --> 00:46:34,670
there yet so I think we should call the

00:46:32,780 --> 00:46:38,300
whole / thank you everyone for joining

00:46:34,670 --> 00:46:39,680
in I hope we're not scaring people off

00:46:38,300 --> 00:46:43,820
too much for those folks who haven't

00:46:39,680 --> 00:46:45,740
been shouted at us definitely please

00:46:43,820 --> 00:46:48,500
make sure you're signed up for the love

00:46:45,740 --> 00:46:50,420
announced list as Neil was saying and we

00:46:48,500 --> 00:46:52,040
will be carrying on some of this

00:46:50,420 --> 00:46:56,920
discussion later in the week in the

00:46:52,040 --> 00:46:56,920
migration talk thank you very much

00:47:04,250 --> 00:47:06,310

YouTube URL: https://www.youtube.com/watch?v=VklKASfsnTY


