Title: LAS16-TR04: Using Tracing to tune and optimize EAS English
Publication date: 2016-09-30
Playlist: Linaro Connect Las Vegas 2016
Description: 
	LAS16-TR04: Using tracing to tune and optimize EAS (English)
Speakers: Leo Yan
Date: September 28, 2016

★ Session Description ★
The Energy Aware Scheduler relies on a power model, rather than on heuristics, to make decisions and reduce power usage. As a result of this fact-based decision making EAS presents very few tunables and thus requires a significantly different approach to tuning and optimization when compared to the traditional tune/benchmark/repeat cycle. Tuning EAS has perhaps more similar to debugging: using trace tools such as ftrace, kernelshark and LISA, we can examine its decision making and look for ways to improve this decision making. This talk will offer a practical introduction to using these trace tools.

★ Resources ★
Etherpad: pad.linaro.org/p/las16-tr04
Presentations & Videos: http://connect.linaro.org/resource/las16/las16-tr04/

★ Event Details ★
Linaro Connect Las Vegas 2016 – #LAS16
September 26-30, 2016
http://www.linaro.org
http://connect.linaro.org
Captions: 
	00:00:09,469 --> 00:00:18,900
okay let's start hello everyone in this

00:00:16,859 --> 00:00:22,170
session we will talk about the using

00:00:18,900 --> 00:00:26,099
trees into tune and optimize the yes I'm

00:00:22,170 --> 00:00:28,920
million i work for the narrow support

00:00:26,099 --> 00:00:31,230
and solution engineering team and this

00:00:28,920 --> 00:00:34,469
material is coated with my take on

00:00:31,230 --> 00:00:36,510
either daniel thompson so if you have

00:00:34,469 --> 00:00:39,270
any question just free need to bring up

00:00:36,510 --> 00:00:42,329
our jam bastard you answer question and

00:00:39,270 --> 00:00:47,190
also daniel can have us some for some

00:00:42,329 --> 00:00:49,230
questions as we're so then still the

00:00:47,190 --> 00:00:53,090
agenda so at the beginning we were to

00:00:49,230 --> 00:00:57,329
introduce some background to for the

00:00:53,090 --> 00:00:59,609
tuning for the GTS and yes so we can

00:00:57,329 --> 00:01:02,640
calculate all the difference comparison

00:00:59,609 --> 00:01:04,949
between these two technologies so we can

00:01:02,640 --> 00:01:08,729
get to know why we need to move forward

00:01:04,949 --> 00:01:11,820
to use the new technology technicals and

00:01:08,729 --> 00:01:14,100
the tools to tune for years now we're

00:01:11,820 --> 00:01:18,150
ready to give a quick introduction for

00:01:14,100 --> 00:01:20,189
the tools for the mesa then and in

00:01:18,150 --> 00:01:23,369
second part we were you introduced to

00:01:20,189 --> 00:01:26,420
see examples so one is on purpose on the

00:01:23,369 --> 00:01:28,979
match is trading debugging and another

00:01:26,420 --> 00:01:31,619
two needs based on the single sweater

00:01:28,979 --> 00:01:35,100
tunic because the slides you very long

00:01:31,619 --> 00:01:38,130
so you for their have a long enough time

00:01:35,100 --> 00:01:41,100
maybe we can skip the second example

00:01:38,130 --> 00:01:44,610
will give very pretty quick introduction

00:01:41,100 --> 00:01:46,350
for the second example so the sponsor

00:01:44,610 --> 00:01:49,500
paulo we were to give me some father in

00:01:46,350 --> 00:01:53,490
reading and we share the materials for

00:01:49,500 --> 00:01:55,710
the vista packing for the script and the

00:01:53,490 --> 00:01:58,530
cheese data and also give more father

00:01:55,710 --> 00:02:05,189
rating for what you can do for the next

00:01:58,530 --> 00:02:09,390
step so this is this page is the typical

00:02:05,189 --> 00:02:13,580
workflow for optimizing the GTS so we

00:02:09,390 --> 00:02:16,950
can see the GTS there have one big

00:02:13,580 --> 00:02:20,610
feature you that they have many tuna

00:02:16,950 --> 00:02:22,710
bows so when you wanted to 200 g KS you

00:02:20,610 --> 00:02:25,950
need to set the tuna bows and ran the

00:02:22,710 --> 00:02:28,050
benchmark and then get a result and you

00:02:25,950 --> 00:02:30,540
need to adjust the tuna boats and the

00:02:28,050 --> 00:02:33,660
run the benchmark game so you will be

00:02:30,540 --> 00:02:37,020
psycho to do the optimization so this

00:02:33,660 --> 00:02:39,720
simple this workflow is simple and it is

00:02:37,020 --> 00:02:43,200
very easy mate you for understanding but

00:02:39,720 --> 00:02:46,080
you don't have some issues or problems

00:02:43,200 --> 00:02:49,050
in practice the first usually that

00:02:46,080 --> 00:02:52,410
knoebels complex because we know that

00:02:49,050 --> 00:02:54,870
they have two numbers is for test

00:02:52,410 --> 00:02:58,620
placement and other two numbers are for

00:02:54,870 --> 00:03:01,290
the operating point selection so this

00:02:58,620 --> 00:03:04,200
universe may be where to impact with

00:03:01,290 --> 00:03:09,060
each other so which tunable you should

00:03:04,200 --> 00:03:12,300
you select for the one case maybe you is

00:03:09,060 --> 00:03:16,110
hard to dizzy make decision for that and

00:03:12,300 --> 00:03:18,420
I'm saying that usually if you select

00:03:16,110 --> 00:03:21,090
the best combination for the tuna bones

00:03:18,420 --> 00:03:23,190
for one case for you for example for mp3

00:03:21,090 --> 00:03:25,110
this case but maybe it's not the best

00:03:23,190 --> 00:03:28,530
combination for another case for you

00:03:25,110 --> 00:03:30,870
lamp or the radio will give me so it's

00:03:28,530 --> 00:03:33,330
hard to find a unified the two numbers

00:03:30,870 --> 00:03:37,200
compilation for all cross all the case

00:03:33,330 --> 00:03:40,950
just that's the knots the issue is that

00:03:37,200 --> 00:03:43,920
for the DDS tuning actually even is

00:03:40,950 --> 00:03:47,100
associate specific so when you want to

00:03:43,920 --> 00:03:50,610
do the optimization journeys it is hard

00:03:47,100 --> 00:03:54,810
to Abdul up dreaming or discuss in

00:03:50,610 --> 00:03:57,120
public mailing list so and also it's

00:03:54,810 --> 00:03:59,430
very as you this bed fake so when you

00:03:57,120 --> 00:04:04,470
have next generation associ maybe you

00:03:59,430 --> 00:04:07,890
need to do the next round tuning so this

00:04:04,470 --> 00:04:11,790
is for the tedious so we can see this is

00:04:07,890 --> 00:04:13,860
just a few quick brief introduction for

00:04:11,790 --> 00:04:17,209
the to the bone so we can see for the

00:04:13,860 --> 00:04:21,930
upside the part this is the tuna posed

00:04:17,209 --> 00:04:24,510
by the GTS so we use the up stress hold

00:04:21,930 --> 00:04:27,040
and that's right hold to the heuristics

00:04:24,510 --> 00:04:29,980
venue set by opeth phone

00:04:27,040 --> 00:04:32,530
and they're also helped deliver other

00:04:29,980 --> 00:04:35,080
features negative you can pack a task on

00:04:32,530 --> 00:04:40,750
single CPU or you want to spread task

00:04:35,080 --> 00:04:45,790
cause the caster so in we can see also

00:04:40,750 --> 00:04:48,460
in the below this part there is the cpu

00:04:45,790 --> 00:04:53,380
frequency the interactive governor the

00:04:48,460 --> 00:04:56,110
parameters so the many thing in that GTS

00:04:53,380 --> 00:04:59,980
and the cpu frequency in the active

00:04:56,110 --> 00:05:05,400
governor the parameters are has pleaded

00:04:59,980 --> 00:05:08,110
so we are don't know what each other do

00:05:05,400 --> 00:05:10,390
something so that means neither you tune

00:05:08,110 --> 00:05:13,420
these parameters you just the focus on

00:05:10,390 --> 00:05:16,120
this part but maybe you have potential

00:05:13,420 --> 00:05:19,090
impacts on other parts but we have not

00:05:16,120 --> 00:05:23,980
your magnetization in the same place so

00:05:19,090 --> 00:05:26,560
this is why we introduced for the years

00:05:23,980 --> 00:05:29,500
I think yes there have many difference

00:05:26,560 --> 00:05:31,900
between the TV and see that yes to make

00:05:29,500 --> 00:05:36,880
decisions in this one place in the

00:05:31,900 --> 00:05:41,050
scheduler so yes there have no tunable

00:05:36,880 --> 00:05:43,480
anymore so basically for the yes you

00:05:41,050 --> 00:05:45,760
knew we can see the workflow the typical

00:05:43,480 --> 00:05:49,600
workflow in like that we would need to

00:05:45,760 --> 00:05:52,390
rent a benchmark we need you you're the

00:05:49,600 --> 00:05:56,560
aperture is to treat a use case then we

00:05:52,390 --> 00:05:58,810
were to examine the chest data and it is

00:05:56,560 --> 00:06:01,300
when we examine the trees data we also

00:05:58,810 --> 00:06:04,170
need to get to know for the power mode

00:06:01,300 --> 00:06:06,520
oni we also need to know the yes

00:06:04,170 --> 00:06:10,060
implementation or the need the core

00:06:06,520 --> 00:06:14,980
algorithm so P Sundays we can see that

00:06:10,060 --> 00:06:17,590
actually in this step is very knowledge

00:06:14,980 --> 00:06:22,060
intensive so you need to have to note so

00:06:17,590 --> 00:06:24,850
much knowledge and the information so

00:06:22,060 --> 00:06:26,530
based on days you can you need to find

00:06:24,850 --> 00:06:29,950
out what's the issue and you need to

00:06:26,530 --> 00:06:32,890
figure out what's the solution fix you

00:06:29,950 --> 00:06:37,050
improve the magnetization so basically

00:06:32,890 --> 00:06:40,750
the mega today shin can be improved by

00:06:37,050 --> 00:06:41,020
two kind things the first way that you

00:06:40,750 --> 00:06:44,740
can

00:06:41,020 --> 00:06:47,410
refine your power model so we all we can

00:06:44,740 --> 00:06:49,930
see that you need to deliver a correct

00:06:47,410 --> 00:06:53,530
power mode because the run / modem may

00:06:49,930 --> 00:06:56,289
introduce the Beast and misunderstanding

00:06:53,530 --> 00:06:59,800
in the scheduler so maybe schedule where

00:06:56,289 --> 00:07:03,039
you select the one cpu or wrong open

00:06:59,800 --> 00:07:07,449
point for the task so another thing is

00:07:03,039 --> 00:07:10,690
that based on you have a correct / model

00:07:07,449 --> 00:07:14,800
you also need can do the optimization

00:07:10,690 --> 00:07:17,800
funding in the scheduler to do the

00:07:14,800 --> 00:07:21,310
operation so this is like that you can

00:07:17,800 --> 00:07:24,280
optimize for the single or or you can

00:07:21,310 --> 00:07:29,319
optimize for the micro asian the

00:07:24,280 --> 00:07:32,889
occasions so if you have found that the

00:07:29,319 --> 00:07:35,530
optimization is in the scheduler is very

00:07:32,889 --> 00:07:38,590
common or generally enough so that means

00:07:35,530 --> 00:07:42,580
that this optimization can be portable

00:07:38,590 --> 00:07:45,130
so you can share this optimization for

00:07:42,580 --> 00:07:48,880
review in the public manning list or you

00:07:45,130 --> 00:07:57,069
also this optimization very likely can

00:07:48,880 --> 00:08:03,340
benefit for your next I associ so form

00:07:57,069 --> 00:08:06,490
what we can easy need you dive into the

00:08:03,340 --> 00:08:09,699
debugging so now yes I have provide a

00:08:06,490 --> 00:08:12,940
set of stock to his point so this street

00:08:09,699 --> 00:08:15,400
point we can see on right side of the

00:08:12,940 --> 00:08:18,400
picture the Patrick and Yuri have

00:08:15,400 --> 00:08:22,659
committed the many pages and the tag as

00:08:18,400 --> 00:08:25,539
the debug so this uni have some many

00:08:22,659 --> 00:08:29,770
trees event for the years but these

00:08:25,539 --> 00:08:31,779
patches have not post to a hockey ml so

00:08:29,770 --> 00:08:33,940
now just now we can only find these

00:08:31,779 --> 00:08:37,209
pages on the production folks Apache

00:08:33,940 --> 00:08:41,409
said for example the AOSP common color

00:08:37,209 --> 00:08:44,800
or in the eris key the production code

00:08:41,409 --> 00:08:46,540
nine the branch in the color if we

00:08:44,800 --> 00:08:49,810
wanted to use left Ruiz we need to

00:08:46,540 --> 00:08:52,180
enable the color configuration configure

00:08:49,810 --> 00:08:54,490
freeze but this is just the general

00:08:52,180 --> 00:08:57,390
configuration if you want to able

00:08:54,490 --> 00:09:00,399
a virtuous point you need to able

00:08:57,390 --> 00:09:03,550
separately so we can see next page in

00:09:00,399 --> 00:09:07,089
the example so we can see this is a

00:09:03,550 --> 00:09:08,800
cheese point for yes usually used in we

00:09:07,089 --> 00:09:12,040
can see in the main line color back

00:09:08,800 --> 00:09:16,209
before today I have the cheese point can

00:09:12,040 --> 00:09:19,270
support for the tuning pair the single

00:09:16,209 --> 00:09:23,680
rose so we can see the schedule dash

00:09:19,270 --> 00:09:26,279
node does every task and the CPU this

00:09:23,680 --> 00:09:31,110
cutie's point can be used that you

00:09:26,279 --> 00:09:35,470
analyze the task and the cpu utilization

00:09:31,110 --> 00:09:38,709
the venue and on the right side we can

00:09:35,470 --> 00:09:42,910
see there have some cheese point can be

00:09:38,709 --> 00:09:45,850
used to align sides the scheduler

00:09:42,910 --> 00:09:48,700
behavior or the scheduling occasions for

00:09:45,850 --> 00:09:53,830
example for the context which or for the

00:09:48,700 --> 00:09:56,230
task migration between the CPUs and we

00:09:53,830 --> 00:09:59,079
can see yes also have man in the

00:09:56,230 --> 00:10:02,290
extension for the trees point so for

00:09:59,079 --> 00:10:05,709
years core algorithm we can you need to

00:10:02,290 --> 00:10:09,730
use the stereo energy teeth to get too

00:10:05,709 --> 00:10:13,300
low the calculation from the es core

00:10:09,730 --> 00:10:17,230
algorithm for the task selection what's

00:10:13,300 --> 00:10:19,180
the energy calculation the venue and for

00:10:17,230 --> 00:10:22,810
the schedule over utilized this flag

00:10:19,180 --> 00:10:26,800
this is just to indicate that in the

00:10:22,810 --> 00:10:30,760
system if the system which is over the

00:10:26,800 --> 00:10:32,950
tip point or under tipping point so Tim

00:10:30,760 --> 00:10:36,970
point means that any of the system the

00:10:32,950 --> 00:10:41,560
CPU is over utilized the cpu utilization

00:10:36,970 --> 00:10:44,980
is more than 80 percentage of its

00:10:41,560 --> 00:10:47,649
capacity so that means less CPU is very

00:10:44,980 --> 00:10:50,079
busy in this situation so you'll this

00:10:47,649 --> 00:10:53,649
flag on hand calculo the system is be

00:10:50,079 --> 00:10:55,959
over utilized a lot so under also we

00:10:53,649 --> 00:10:59,200
have skeleton the cheese point and

00:10:55,959 --> 00:11:01,600
schedule Frank the cheese bond by the

00:10:59,200 --> 00:11:07,900
way in here we're not to extend for that

00:11:01,600 --> 00:11:10,450
because the so for the

00:11:07,900 --> 00:11:14,440
and usually we use the cheese command

00:11:10,450 --> 00:11:17,400
start this command at you in both the

00:11:14,440 --> 00:11:20,290
cheese point so we can use a touchy and

00:11:17,400 --> 00:11:23,650
following by the cheese point the name

00:11:20,290 --> 00:11:27,130
and the so we can able them this is just

00:11:23,650 --> 00:11:29,590
the user command in these are the tuning

00:11:27,130 --> 00:11:31,930
tools you can easily to use tender to

00:11:29,590 --> 00:11:35,200
support these trees even a pointer what

00:11:31,930 --> 00:11:39,940
we can see the example in legs in a

00:11:35,200 --> 00:11:44,080
second apart so this is summary is for

00:11:39,940 --> 00:11:47,140
yes the big decision strategy basically

00:11:44,080 --> 00:11:51,130
is based on very common the power mode

00:11:47,140 --> 00:11:54,310
only so it's not using logic depending

00:11:51,130 --> 00:11:56,800
on the heuristic that you put parameters

00:11:54,310 --> 00:11:59,970
for example the up stress Hodor down

00:11:56,800 --> 00:12:02,830
threshold but GT has used the heuristic

00:11:59,970 --> 00:12:05,530
threshold so for the cpu frequency

00:12:02,830 --> 00:12:08,440
selection we can see it also wanted to

00:12:05,530 --> 00:12:11,830
use the scheduler as the sink central

00:12:08,440 --> 00:12:13,750
place to make it position so now the CP

00:12:11,830 --> 00:12:17,800
freak governor is scary freak or

00:12:13,750 --> 00:12:20,440
schedule yet here but it is it use the

00:12:17,800 --> 00:12:22,570
commoners has clearly the parameters for

00:12:20,440 --> 00:12:24,640
example you can able antimatter or the

00:12:22,570 --> 00:12:27,910
integrity of Governor on your perform so

00:12:24,640 --> 00:12:30,760
you need to tune in Hector or animal

00:12:27,910 --> 00:12:33,880
governor's parameters yes also to

00:12:30,760 --> 00:12:36,850
provide the scenario based tuning this

00:12:33,880 --> 00:12:38,830
is a piece on the schedule so scheduling

00:12:36,850 --> 00:12:40,870
where you create a thick group so you

00:12:38,830 --> 00:12:44,200
can put the task on into the stick group

00:12:40,870 --> 00:12:48,600
which is set some boost the singles for

00:12:44,200 --> 00:12:51,460
these tasks but for GES there hello any

00:12:48,600 --> 00:12:54,870
function for support for scenario-based

00:12:51,460 --> 00:12:58,990
tuning so we can get a solution that

00:12:54,870 --> 00:13:01,270
conclusion in that yes had very few tuna

00:12:58,990 --> 00:13:04,500
boats and that's required a significant

00:13:01,270 --> 00:13:12,340
different approach ET tube and optimize

00:13:04,500 --> 00:13:16,000
compound to the gps so for can we can

00:13:12,340 --> 00:13:19,240
using cutie Parker the GTS now ARMA have

00:13:16,000 --> 00:13:21,350
provided up to using visa so nice

00:13:19,240 --> 00:13:25,730
understand for

00:13:21,350 --> 00:13:28,580
linux integrated system analysis so Lisa

00:13:25,730 --> 00:13:30,560
we can simply sync data it's a distro of

00:13:28,580 --> 00:13:34,520
Python libraries for interactive

00:13:30,560 --> 00:13:36,050
analysis and automatic testing so little

00:13:34,520 --> 00:13:41,510
we can wear to kill with the semi

00:13:36,050 --> 00:13:44,120
example here so whatever for post the

00:13:41,510 --> 00:13:49,060
interactive analysis or the automatic

00:13:44,120 --> 00:13:51,320
testing this app supports some

00:13:49,060 --> 00:13:54,410
functionalities the first one in the

00:13:51,320 --> 00:13:58,190
attic where you can do the target

00:13:54,410 --> 00:14:01,850
control and manipulation so for example

00:13:58,190 --> 00:14:04,520
you can use the visa the devil need to

00:14:01,850 --> 00:14:07,010
set the CPU freak the governor

00:14:04,520 --> 00:14:09,500
parameters and you can generate out the

00:14:07,010 --> 00:14:13,220
workload and the rainbow cloud and also

00:14:09,500 --> 00:14:16,580
you can do in both F trees and the trees

00:14:13,220 --> 00:14:19,190
point another thing is that usually on

00:14:16,580 --> 00:14:22,790
the border we have the power meter for

00:14:19,190 --> 00:14:25,130
example I'm energy probe or the hardware

00:14:22,790 --> 00:14:27,560
monitor so you can measure the energy or

00:14:25,130 --> 00:14:31,310
the power so in this ayah also

00:14:27,560 --> 00:14:34,910
integrated the power management and it

00:14:31,310 --> 00:14:37,580
can't do the energy calculation the

00:14:34,910 --> 00:14:40,250
search thing that after we get back the

00:14:37,580 --> 00:14:43,580
effort is data we need you banana sees

00:14:40,250 --> 00:14:46,610
the FT's data and that you prod the

00:14:43,580 --> 00:14:51,320
graph so this is the another function

00:14:46,610 --> 00:14:54,830
anything this for the the force the

00:14:51,320 --> 00:14:57,620
functionality is good for the testing

00:14:54,830 --> 00:15:02,600
automatic testing because if you want to

00:14:57,620 --> 00:15:05,270
add some versions so you want you for

00:15:02,600 --> 00:15:08,270
example you want to run one piece you

00:15:05,270 --> 00:15:10,730
want to assert that the big task done

00:15:08,270 --> 00:15:13,520
the run more than 20 minutes second so

00:15:10,730 --> 00:15:18,280
you can add some position in the script

00:15:13,520 --> 00:15:23,350
so can check if the test can pass a lot

00:15:18,280 --> 00:15:23,350
so we can see a very simple

00:15:38,470 --> 00:15:48,400
so they see the these are one example is

00:15:45,250 --> 00:15:50,860
script so basically we can there have

00:15:48,400 --> 00:15:53,590
several concept the first one is Jupiter

00:15:50,860 --> 00:15:55,960
so from from my standing at the Jupiter

00:15:53,590 --> 00:15:59,080
looks like we can sink you to add a web

00:15:55,960 --> 00:16:01,480
page based degrees environment so you

00:15:59,080 --> 00:16:04,750
can see there have menu you can do the

00:16:01,480 --> 00:16:08,470
edges or you can control the program so

00:16:04,750 --> 00:16:11,410
another thing that the Jupiter where you

00:16:08,470 --> 00:16:14,710
stand out sender the program you can see

00:16:11,410 --> 00:16:18,240
this Python program to the ipython color

00:16:14,710 --> 00:16:20,800
so I patron color we can take it as the

00:16:18,240 --> 00:16:23,980
Python interpreter so it were to

00:16:20,800 --> 00:16:28,000
interpret the Python program and execute

00:16:23,980 --> 00:16:31,210
the program and then this fair we can

00:16:28,000 --> 00:16:33,760
take it as a notebook fire so we can

00:16:31,210 --> 00:16:36,460
sync it as the source code for the Nisa

00:16:33,760 --> 00:16:39,580
so in this source coder we can see it

00:16:36,460 --> 00:16:43,060
can have the documentation and also have

00:16:39,580 --> 00:16:46,260
the program code so you can mix the

00:16:43,060 --> 00:16:49,840
documentation and the program code and

00:16:46,260 --> 00:16:52,660
another thing that when you execute this

00:16:49,840 --> 00:16:55,720
program one by one box so finally you

00:16:52,660 --> 00:16:58,480
can see you will have the printout of

00:16:55,720 --> 00:17:05,680
the dog so this is not also where we see

00:16:58,480 --> 00:17:07,690
within this page so we can see the below

00:17:05,680 --> 00:17:11,260
that hair example is that you also can

00:17:07,690 --> 00:17:14,860
use it to Atlantis's the scheduler

00:17:11,260 --> 00:17:17,740
single O's so this also this output

00:17:14,860 --> 00:17:21,070
where pc with it is not book fire and

00:17:17,740 --> 00:17:24,370
the european amanat to see the in the

00:17:21,070 --> 00:17:26,550
host pc so the could see you later when

00:17:24,370 --> 00:17:29,830
you next time you open this notebook

00:17:26,550 --> 00:17:32,260
this fire the all the information we

00:17:29,830 --> 00:17:34,930
received in this fire so you don't need

00:17:32,260 --> 00:17:38,380
to run the test again you can just that

00:17:34,930 --> 00:17:41,550
you see the previews the result directly

00:17:38,380 --> 00:17:41,550
in this fire

00:17:53,580 --> 00:18:00,900
so this picture actually I use copy from

00:17:57,450 --> 00:18:04,410
the Patrick's slides Patrick later the

00:18:00,900 --> 00:18:06,270
year see the conference it had the

00:18:04,410 --> 00:18:09,360
presentation for the knees and so if you

00:18:06,270 --> 00:18:11,490
want to get more people and standing

00:18:09,360 --> 00:18:15,330
from these are you suggest that you can

00:18:11,490 --> 00:18:18,600
refer the Patriots lies so here I just

00:18:15,330 --> 00:18:21,810
wanted to give a very quick workflow for

00:18:18,600 --> 00:18:23,880
the Nisa so for the post for the

00:18:21,810 --> 00:18:30,090
interactive testing or the automatic

00:18:23,880 --> 00:18:33,120
testing we can lead to do you want

00:18:30,090 --> 00:18:35,370
configure the test so you need to

00:18:33,120 --> 00:18:37,950
specify what were closer you want to run

00:18:35,370 --> 00:18:40,980
another thing that you need to configure

00:18:37,950 --> 00:18:43,080
for the target about the configuration

00:18:40,980 --> 00:18:46,020
so we can see in the left side of these

00:18:43,080 --> 00:18:48,480
two books when for test configuration

00:18:46,020 --> 00:18:51,420
and basic for targeted confirmation this

00:18:48,480 --> 00:18:55,530
to fire maybe can be the general common

00:18:51,420 --> 00:18:59,070
the passion fire or you can also used

00:18:55,530 --> 00:19:02,100
just now we should not book fire to do

00:18:59,070 --> 00:19:04,140
the configuration so piss on this we can

00:19:02,100 --> 00:19:06,030
see there have the workload the

00:19:04,140 --> 00:19:09,120
generation it's based on at the appt

00:19:06,030 --> 00:19:12,450
genric workload for example you can

00:19:09,120 --> 00:19:14,940
specify the workload the task run the

00:19:12,450 --> 00:19:17,550
duty cycle and run how much time the

00:19:14,940 --> 00:19:20,100
period time is a har mod so piss on this

00:19:17,550 --> 00:19:25,320
if they were to copy the fire to the

00:19:20,100 --> 00:19:27,870
host that ugly boat so when the host PC

00:19:25,320 --> 00:19:30,450
to talk a connector will talk about it

00:19:27,870 --> 00:19:33,660
we needed to use the Deveny so you need

00:19:30,450 --> 00:19:35,550
Emily will you wear to support the

00:19:33,660 --> 00:19:39,930
connection for example use the Android

00:19:35,550 --> 00:19:44,100
abb or use the ssh for children linux so

00:19:39,930 --> 00:19:47,190
also it can to support the operating for

00:19:44,100 --> 00:19:51,030
the cpu frequency or for the f keys

00:19:47,190 --> 00:19:53,280
ambani 11 case have finished them on the

00:19:51,030 --> 00:19:56,280
target ball today i have cheese data so

00:19:53,280 --> 00:19:58,560
this data finally well to call Kobe by

00:19:56,280 --> 00:20:00,870
cue the host PC so you can see in the

00:19:58,560 --> 00:20:03,150
hot pc then i have the folder is a

00:20:00,870 --> 00:20:06,510
testing folder so the cheese vida where

00:20:03,150 --> 00:20:07,080
received in the trees on the hot pc the

00:20:06,510 --> 00:20:10,890
cheese for

00:20:07,080 --> 00:20:13,049
other so based on the trees folder these

00:20:10,890 --> 00:20:15,870
are help provide another tooth libraries

00:20:13,049 --> 00:20:18,630
why is chappy so you Travie you can't

00:20:15,870 --> 00:20:20,460
you unless these but in a free man that

00:20:18,630 --> 00:20:23,549
you prior to the graph for the cheese

00:20:20,460 --> 00:20:25,980
treated in a frame and also you can use

00:20:23,549 --> 00:20:32,970
the part that you do the position for

00:20:25,980 --> 00:20:36,269
the testament result so this just the

00:20:32,970 --> 00:20:40,260
the interactive test mode we can see you

00:20:36,269 --> 00:20:42,299
should to improve the IP the under pot

00:20:40,260 --> 00:20:45,000
number to connect with the ipad

00:20:42,299 --> 00:20:46,860
Giancarlo and the you should you can see

00:20:45,000 --> 00:20:50,029
they have menu and the patent is a

00:20:46,860 --> 00:20:52,649
control the program and this is the

00:20:50,029 --> 00:20:56,220
McDowell's documentation and the program

00:20:52,649 --> 00:20:59,700
the NASA when they see the log-log

00:20:56,220 --> 00:21:02,159
result so this is very general info

00:20:59,700 --> 00:21:03,720
sonido where you see more detailed

00:21:02,159 --> 00:21:09,690
information how to use this for

00:21:03,720 --> 00:21:11,220
debugging another thing that usually we

00:21:09,690 --> 00:21:15,000
can see if we using these out with

00:21:11,220 --> 00:21:18,000
paralysis but analyze the tryst data you

00:21:15,000 --> 00:21:21,720
need to have very global view for the

00:21:18,000 --> 00:21:23,039
single or if we want to use duke tip for

00:21:21,720 --> 00:21:25,559
the teacher the information for the

00:21:23,039 --> 00:21:28,139
cheese event you can you connect with

00:21:25,559 --> 00:21:31,529
the color shock so color correction is

00:21:28,139 --> 00:21:33,240
Pettis employees there hmmm window used

00:21:31,529 --> 00:21:37,590
for the task scheduling and the task

00:21:33,240 --> 00:21:39,809
migration and in the bottom this party

00:21:37,590 --> 00:21:43,830
is very detailed information for a

00:21:39,809 --> 00:21:46,769
virtuous event the venue and color

00:21:43,830 --> 00:21:50,010
checker provided the filters so it can

00:21:46,769 --> 00:21:53,820
provide the filter based on the cheese

00:21:50,010 --> 00:21:57,899
event or task or CPU so you can mask

00:21:53,820 --> 00:22:00,960
some humans you are not very interesting

00:21:57,899 --> 00:22:06,899
just focus on some you have interesting

00:22:00,960 --> 00:22:09,769
the cheese event so instead of the part

00:22:06,899 --> 00:22:15,539
we can see they have to Walker walk hit

00:22:09,769 --> 00:22:19,080
example before we introduce the example

00:22:15,539 --> 00:22:20,580
just give a quick introduction for the

00:22:19,080 --> 00:22:25,409
develop

00:22:20,580 --> 00:22:27,630
and the platform we used so the first

00:22:25,409 --> 00:22:30,570
thing in that all these examples are

00:22:27,630 --> 00:22:33,840
artificial or clothes to provoke a

00:22:30,570 --> 00:22:36,149
specific behavior so this is not the

00:22:33,840 --> 00:22:38,880
real scenario the workload for example

00:22:36,149 --> 00:22:43,070
we ran enjoy it with some YouTube or

00:22:38,880 --> 00:22:46,350
video or other gaming case we'll use the

00:22:43,070 --> 00:22:49,950
ITBP or programmed to manually to

00:22:46,350 --> 00:22:52,080
generate generate out the workload so in

00:22:49,950 --> 00:22:56,240
this case that means that the scenario

00:22:52,080 --> 00:22:58,740
is very consistent there have no noise

00:22:56,240 --> 00:23:00,870
the good thing is that if we can

00:22:58,740 --> 00:23:03,809
reproduce some issue with this method

00:23:00,870 --> 00:23:07,409
then the context weakening so it's very

00:23:03,809 --> 00:23:15,840
helpful for us to focus on to debug on

00:23:07,409 --> 00:23:19,320
specific issues so actually needs two

00:23:15,840 --> 00:23:23,840
examples we are debug on the 96th boat

00:23:19,320 --> 00:23:28,919
heike so Nexus bowl hi clay is the octo

00:23:23,840 --> 00:23:34,080
a53 to cluster SMP device and the every

00:23:28,919 --> 00:23:37,350
cluster have 50 print point so here

00:23:34,080 --> 00:23:39,179
oneechan interesting thing is that hi

00:23:37,350 --> 00:23:43,200
clay actually is not a big little

00:23:39,179 --> 00:23:45,960
platform is a SMP platform the to

00:23:43,200 --> 00:23:49,110
cluster actually is exactly the same but

00:23:45,960 --> 00:23:52,260
a way we wanted to do some the pickle 80

00:23:49,110 --> 00:23:56,220
and ambulation on each so we can do

00:23:52,260 --> 00:24:01,260
something is we can fake a fast slow

00:23:56,220 --> 00:24:03,450
system by using a symmetric power mode

00:24:01,260 --> 00:24:05,639
on in parameter from the battery so we

00:24:03,450 --> 00:24:07,710
can take it the first cluster as a

00:24:05,639 --> 00:24:11,610
little cluster and will pass the

00:24:07,710 --> 00:24:14,970
parameters from the very to tear the

00:24:11,610 --> 00:24:18,809
scheduler the first cluster have lower

00:24:14,970 --> 00:24:23,299
capacity and a higher power dependency

00:24:18,809 --> 00:24:25,950
and the way also pass third of the

00:24:23,299 --> 00:24:31,230
modern in parameters for the second

00:24:25,950 --> 00:24:33,299
cluster as a big cluster so here how

00:24:31,230 --> 00:24:34,169
another thing in that height is a very

00:24:33,299 --> 00:24:38,840
special

00:24:34,169 --> 00:24:42,779
the two clusters I bung bind the

00:24:38,840 --> 00:24:44,519
operating point from a hardware so that

00:24:42,779 --> 00:24:46,590
means you change you one class stuff

00:24:44,519 --> 00:24:49,409
frequency it'll also changing another

00:24:46,590 --> 00:24:51,419
class the frequency so basically you for

00:24:49,409 --> 00:24:55,730
we want you to cope with these two class

00:24:51,419 --> 00:24:58,289
3 is very hard but we want to emulate

00:24:55,730 --> 00:24:59,940
simulated the same cluster you the big

00:24:58,289 --> 00:25:02,609
cluster so looks like leader has a

00:24:59,940 --> 00:25:07,950
higher capacity so we can do one thing

00:25:02,609 --> 00:25:09,799
that we can artificially to reducing the

00:25:07,950 --> 00:25:14,299
random oh and the really running time

00:25:09,799 --> 00:25:16,440
for the fast cpu so that the mattress

00:25:14,299 --> 00:25:19,350
indicated that it has a higher

00:25:16,440 --> 00:25:22,379
performance so this is looking like that

00:25:19,350 --> 00:25:26,460
you the task run on the second cluster

00:25:22,379 --> 00:25:29,999
have next time so you we just want to

00:25:26,460 --> 00:25:34,559
use this way to simulate this is a

00:25:29,999 --> 00:25:36,720
speakable a whole caste system so later

00:25:34,559 --> 00:25:40,710
we were to see mostly the prods I'll

00:25:36,720 --> 00:25:43,220
just directing copy from the Nisa so and

00:25:40,710 --> 00:25:46,230
also we need to wear to share out order

00:25:43,220 --> 00:25:50,609
notebooks and cheese fires so gave it a

00:25:46,230 --> 00:25:55,109
linkage so let's say the touch pimpin

00:25:50,609 --> 00:26:00,600
issue for the touch of cream unusual way

00:25:55,109 --> 00:26:03,059
can we run the test environment is we

00:26:00,600 --> 00:26:06,779
started the first casa de at the little

00:26:03,059 --> 00:26:11,399
cause then we pass the parameters as the

00:26:06,779 --> 00:26:15,029
little coast highest capacity is 447 so

00:26:11,399 --> 00:26:20,190
run at the highest operating point a to

00:26:15,029 --> 00:26:23,789
the 4 850 megahertz so for the big

00:26:20,190 --> 00:26:26,759
castor the Pico has the capacity to 124

00:26:23,789 --> 00:26:30,090
and the run at the operating point at

00:26:26,759 --> 00:26:33,450
one point one gigahertz so here we have

00:26:30,090 --> 00:26:35,639
an assumption that we have verified the

00:26:33,450 --> 00:26:38,039
power mode also make sure that the power

00:26:35,639 --> 00:26:41,580
model is correct on this platform is a

00:26:38,039 --> 00:26:44,669
correct big little power model so this

00:26:41,580 --> 00:26:47,500
we can avoid there I have wrong behavior

00:26:44,669 --> 00:26:50,350
is introduced by the power model

00:26:47,500 --> 00:26:54,760
so the test case is that we generate out

00:26:50,350 --> 00:26:58,750
there have 16 small task so we can say

00:26:54,760 --> 00:27:01,800
there's mod has have the 15 utilization

00:26:58,750 --> 00:27:05,410
so this utilization this percentage is

00:27:01,800 --> 00:27:07,990
responding to the NATO CPUs capacity so

00:27:05,410 --> 00:27:12,130
this is not consenting to the big CPUs

00:27:07,990 --> 00:27:17,280
capacity so we can so finally we can

00:27:12,130 --> 00:27:23,050
capitulo in theory the 15 percentage

00:27:17,280 --> 00:27:27,670
utilization multiply the 447 then we can

00:27:23,050 --> 00:27:30,940
get to know the UT of venue is about 667

00:27:27,670 --> 00:27:36,760
and we also generate out an artistically

00:27:30,940 --> 00:27:38,230
ran the 40 percentage utilization so we

00:27:36,760 --> 00:27:41,260
general out of this work loaded we want

00:27:38,230 --> 00:27:45,940
to do one see that you can see their

00:27:41,260 --> 00:27:49,330
help of 16 small task so so if this 16th

00:27:45,940 --> 00:27:53,890
mode has spread out to phone data CPUs

00:27:49,330 --> 00:27:57,940
then then every CPU where to take run

00:27:53,890 --> 00:28:01,870
about 60 percentage of the utilization

00:27:57,940 --> 00:28:04,270
so if we migrate this big task to anyone

00:28:01,870 --> 00:28:08,920
of NATO CPU we can see that the middle

00:28:04,270 --> 00:28:11,740
CPU will get the 100 percentage the

00:28:08,920 --> 00:28:16,330
gelatinization so it's very busy so as a

00:28:11,740 --> 00:28:18,760
result we expect the result like we

00:28:16,330 --> 00:28:21,720
wanted the small task can be always run

00:28:18,760 --> 00:28:25,210
in the dataset view because we want

00:28:21,720 --> 00:28:27,310
power saving but for the big task we

00:28:25,210 --> 00:28:30,400
want the scheduler can be filled out

00:28:27,310 --> 00:28:33,610
this is a big task we can migrate this

00:28:30,400 --> 00:28:42,070
task to the big cluster to run so this

00:28:33,610 --> 00:28:44,260
is what we detect so before we could go

00:28:42,070 --> 00:28:48,810
to see the debugging we can first on

00:28:44,260 --> 00:28:52,780
cube look review the general flow for

00:28:48,810 --> 00:28:56,260
the analysis steps so for the first step

00:28:52,780 --> 00:29:00,010
we wanted to run the test workload and

00:28:56,260 --> 00:29:00,800
generate without the trees theta so for

00:29:00,010 --> 00:29:02,360
the second part

00:29:00,800 --> 00:29:09,470
that we helped get the tricity now we

00:29:02,360 --> 00:29:12,440
want to do this Lance's so we first to

00:29:09,470 --> 00:29:14,930
see the step one for stable one is where

00:29:12,440 --> 00:29:18,280
to connect with target so you can use

00:29:14,930 --> 00:29:21,320
the listen as the event is measured and

00:29:18,280 --> 00:29:24,500
after you connect with target board you

00:29:21,320 --> 00:29:27,260
can to general generate the workload so

00:29:24,500 --> 00:29:31,730
you can use the knees as a TPP the

00:29:27,260 --> 00:29:35,510
method to randall clothes so this first

00:29:31,730 --> 00:29:38,210
step first step and hear how one thing

00:29:35,510 --> 00:29:41,330
that they have platform description fire

00:29:38,210 --> 00:29:45,140
is the platform just in this fire during

00:29:41,330 --> 00:29:47,390
we use this fire to tear these are you

00:29:45,140 --> 00:29:52,520
can help draw some information for

00:29:47,390 --> 00:29:55,820
example the cluster capacity so you can

00:29:52,520 --> 00:30:00,290
use this information to help him decide

00:29:55,820 --> 00:30:05,390
to jaw plot in a graph the CPUs highest

00:30:00,290 --> 00:30:08,570
capacity that level so this is used by

00:30:05,390 --> 00:30:11,660
the second step you analyze the trees

00:30:08,570 --> 00:30:13,460
theta so the first thing that you were

00:30:11,660 --> 00:30:16,370
to read the tryst a time that you

00:30:13,460 --> 00:30:19,640
generate out the F trees the data frame

00:30:16,370 --> 00:30:24,590
so based on this this is just the raw

00:30:19,640 --> 00:30:27,140
data or their have no Annalise so piss

00:30:24,590 --> 00:30:29,120
and is it we need to do something that

00:30:27,140 --> 00:30:31,490
for example they have magistrate there

00:30:29,120 --> 00:30:33,950
are many many tasks so we wanted to

00:30:31,490 --> 00:30:36,680
figure out filter out some task we are

00:30:33,950 --> 00:30:39,830
interesting maybe it's big task for

00:30:36,680 --> 00:30:43,730
maybe is not big task so it was finally

00:30:39,830 --> 00:30:46,700
we can use the Lisa there have a master

00:30:43,730 --> 00:30:53,690
these Atlantis's so you can do help who

00:30:46,700 --> 00:30:55,880
do the analyzed task single O's so first

00:30:53,690 --> 00:31:00,130
we can see this is a square with you do

00:30:55,880 --> 00:31:00,130
to connect with the target bode well

00:31:02,050 --> 00:31:07,220
collect connect target board there have

00:31:05,030 --> 00:31:09,980
two configurations though the first

00:31:07,220 --> 00:31:11,840
value for the target connection the

00:31:09,980 --> 00:31:14,240
information for example this platform is

00:31:11,840 --> 00:31:14,600
Linux or Android so either where you

00:31:14,240 --> 00:31:18,410
give

00:31:14,600 --> 00:31:21,980
the collection method I DB or use SSH so

00:31:18,410 --> 00:31:23,720
also you can import some modules for

00:31:21,980 --> 00:31:25,940
example the cpu freaking this cpu

00:31:23,720 --> 00:31:28,370
frequency not means that the color mode

00:31:25,940 --> 00:31:32,120
this is means that in the design library

00:31:28,370 --> 00:31:35,809
you know where to import the function to

00:31:32,120 --> 00:31:40,250
support to operate for the cpu freak the

00:31:35,809 --> 00:31:43,789
parameters so after that you can see if

00:31:40,250 --> 00:31:47,240
you use ssh you can you need to improve

00:31:43,789 --> 00:31:50,710
the IP address of a target and also need

00:31:47,240 --> 00:31:53,450
you input the username and password so

00:31:50,710 --> 00:31:55,669
they're hell was the internet for ten

00:31:53,450 --> 00:31:59,179
breaching the calibration is used for

00:31:55,669 --> 00:32:02,419
the a TPP to run the workload loop so a

00:31:59,179 --> 00:32:06,650
TPP were to generate out the workload

00:32:02,419 --> 00:32:10,190
with loops but usually don't know how

00:32:06,650 --> 00:32:12,440
many psychos it should to run for the

00:32:10,190 --> 00:32:16,340
workload because every different cpu

00:32:12,440 --> 00:32:18,650
they have different capacity so you only

00:32:16,340 --> 00:32:21,230
you can input the parameters in here or

00:32:18,650 --> 00:32:25,480
miss account automatically to do this in

00:32:21,230 --> 00:32:29,320
PI for every CPU so you need the

00:32:25,480 --> 00:32:33,200
high-capacity CPU will have less the

00:32:29,320 --> 00:32:35,870
latter second loop this manual so we can

00:32:33,200 --> 00:32:40,250
see if the high capacities if you will

00:32:35,870 --> 00:32:42,679
have less venue and for the the second

00:32:40,250 --> 00:32:45,980
part we can see this is for the testing

00:32:42,679 --> 00:32:48,500
configuration so which command which

00:32:45,980 --> 00:32:51,230
Valery choose you should copy to tackle

00:32:48,500 --> 00:32:53,299
board so because we need to use a TPP

00:32:51,230 --> 00:32:57,049
and maybe we you sure that you use the

00:32:53,299 --> 00:33:01,250
test data to specify the CPU affinity

00:32:57,049 --> 00:33:03,620
and we need an enable the fgc even so we

00:33:01,250 --> 00:33:05,480
need to use cheese command is battery so

00:33:03,620 --> 00:33:07,820
this where to turn these are which

00:33:05,480 --> 00:33:11,900
Valerie's you want to copy from the host

00:33:07,820 --> 00:33:14,990
to target about and here we can see it's

00:33:11,900 --> 00:33:16,880
very easy to enable the trees point so

00:33:14,990 --> 00:33:19,809
for example there have scheduled note

00:33:16,880 --> 00:33:22,970
the single oh so you want to alice's

00:33:19,809 --> 00:33:25,220
analyze the parrot a singular or if you

00:33:22,970 --> 00:33:27,020
want you can add any single or you are

00:33:25,220 --> 00:33:28,550
interesting and you can set the path for

00:33:27,020 --> 00:33:30,740
website

00:33:28,550 --> 00:33:33,470
so based on these two configurations we

00:33:30,740 --> 00:33:35,660
can you can you can call the test event

00:33:33,470 --> 00:33:38,960
so you'd be able to connect with the

00:33:35,660 --> 00:33:41,960
target board after the connect a

00:33:38,960 --> 00:33:43,460
keyboard you can render workload so

00:33:41,960 --> 00:33:46,490
first thing is that we need to define

00:33:43,460 --> 00:33:51,980
the workload so unless that we can see

00:33:46,490 --> 00:33:55,580
we wanted to generate out 16 small tasks

00:33:51,980 --> 00:33:58,550
and we wanted to chill out one big tasks

00:33:55,580 --> 00:34:01,490
so for the little task we can see we

00:33:58,550 --> 00:34:04,340
define that this is night this venue the

00:34:01,490 --> 00:34:07,010
duty cycle is a 15-percent age and the

00:34:04,340 --> 00:34:10,760
you to every 15 seconds and the period

00:34:07,010 --> 00:34:13,250
ever period is a five-minute second so

00:34:10,760 --> 00:34:15,740
this is for the small task for the big

00:34:13,250 --> 00:34:17,750
tactical we can see either where to have

00:34:15,740 --> 00:34:21,860
the duty cycle is a 40-percent age and

00:34:17,750 --> 00:34:25,280
the way around five seconds so use this

00:34:21,860 --> 00:34:28,610
piece on these we can to execute the

00:34:25,280 --> 00:34:30,679
workload so first thing that we need to

00:34:28,610 --> 00:34:35,260
import f trees so we can use left is

00:34:30,679 --> 00:34:38,390
good start and we can enable the energy

00:34:35,260 --> 00:34:42,440
capture the energy data so we can use

00:34:38,390 --> 00:34:44,720
the energy does reset so at this time

00:34:42,440 --> 00:34:48,110
point neither the contents have been

00:34:44,720 --> 00:34:50,450
ready so we can use a TPP run so it were

00:34:48,110 --> 00:34:53,179
to execute the left side of this

00:34:50,450 --> 00:34:56,660
workload definition so this were to

00:34:53,179 --> 00:35:00,020
generate out they have 16 tasks more

00:34:56,660 --> 00:35:03,470
task and the one big task so after the

00:35:00,020 --> 00:35:06,260
task has been finished then we are

00:35:03,470 --> 00:35:09,730
written back so it net hand pointer you

00:35:06,260 --> 00:35:12,890
to where you are stop the energy

00:35:09,730 --> 00:35:15,650
parameter the capture and also either

00:35:12,890 --> 00:35:20,210
were to stop with the f trees so we can

00:35:15,650 --> 00:35:25,130
see it here it were to copy the FGS data

00:35:20,210 --> 00:35:29,770
from target border to the pc side so at

00:35:25,130 --> 00:35:32,990
least we can get a twisted Atlantis's so

00:35:29,770 --> 00:35:35,570
usually we can see that if we have ran

00:35:32,990 --> 00:35:38,630
that has test case we want to quickly

00:35:35,570 --> 00:35:42,460
get a quick a global view for the task

00:35:38,630 --> 00:35:44,710
placement so what's in that weekend too

00:35:42,460 --> 00:35:46,839
you that use a color shock but in the

00:35:44,710 --> 00:35:50,290
Nisa it also have provided the same

00:35:46,839 --> 00:35:52,810
inner function 19 Ike you can plot the

00:35:50,290 --> 00:35:56,710
cheese so it here you can see you can

00:35:52,810 --> 00:36:02,020
specify what even you want to extract

00:35:56,710 --> 00:36:05,740
from the trees fire and also you can

00:36:02,020 --> 00:36:09,160
specify the window because maybe the

00:36:05,740 --> 00:36:13,750
effigies theta is very large large so

00:36:09,160 --> 00:36:16,990
you maybe want only to allen eyes just

00:36:13,750 --> 00:36:18,910
the specific the time window so you can

00:36:16,990 --> 00:36:21,609
also specify in the window the

00:36:18,910 --> 00:36:24,849
parameters so after that you can use the

00:36:21,609 --> 00:36:29,830
function the method is broad trees to

00:36:24,849 --> 00:36:33,609
display the task placement graph so here

00:36:29,830 --> 00:36:37,720
we can see this is just the first class

00:36:33,609 --> 00:36:41,560
you that they have the for NATO CPU is

00:36:37,720 --> 00:36:44,619
the form 0 to 3 and there have four pics

00:36:41,560 --> 00:36:46,980
TP with from four to seven so it during

00:36:44,619 --> 00:36:49,810
this period that you we are running the

00:36:46,980 --> 00:36:52,390
workload so you can see there have many

00:36:49,810 --> 00:36:55,300
task is running on the pic little core

00:36:52,390 --> 00:36:58,390
but also there how many even had

00:36:55,300 --> 00:37:03,250
happened in the big core so this is

00:36:58,390 --> 00:37:05,770
indicated that there may be have many my

00:37:03,250 --> 00:37:11,650
Croatian world scheduling heaven on the

00:37:05,770 --> 00:37:14,320
big big big hole but actually we see

00:37:11,650 --> 00:37:17,740
this graph we can get more detailed

00:37:14,320 --> 00:37:20,470
information how to Atlantis's so this is

00:37:17,740 --> 00:37:23,650
why we need to do the second step is we

00:37:20,470 --> 00:37:25,780
need to do more detailed analysis for

00:37:23,650 --> 00:37:27,940
the cheese data so first thing that Lisa

00:37:25,780 --> 00:37:30,520
have provided some by default of the

00:37:27,940 --> 00:37:34,480
functionality so first thing that we can

00:37:30,520 --> 00:37:37,660
to open the triste de binary's this fire

00:37:34,480 --> 00:37:40,150
a dysfunction and it will also have

00:37:37,660 --> 00:37:44,589
provided the filter this functionality

00:37:40,150 --> 00:37:47,800
you can help you to fill out the pig

00:37:44,589 --> 00:37:53,050
task for example so we can only focus on

00:37:47,800 --> 00:37:55,470
to an and analyze this big tasks then

00:37:53,050 --> 00:37:58,170
this also to provide the functionality

00:37:55,470 --> 00:38:00,359
the trees alanis easily functionality so

00:37:58,170 --> 00:38:04,800
either were to help you either you to

00:38:00,359 --> 00:38:07,710
display the task single loss so let's

00:38:04,800 --> 00:38:11,070
see the the first one you that we just

00:38:07,710 --> 00:38:17,160
that you open the f cheese data so here

00:38:11,070 --> 00:38:21,750
you can see that and we need you to

00:38:17,160 --> 00:38:25,109
choose this method so we are to input

00:38:21,750 --> 00:38:28,740
the platform Jason fire so you can see

00:38:25,109 --> 00:38:34,619
it here it were to have clearly defined

00:38:28,740 --> 00:38:37,830
for the CPU top knology so they have to

00:38:34,619 --> 00:38:40,950
cluster ever cluster the cpuid and they

00:38:37,830 --> 00:38:42,810
also have the frequency so you're this

00:38:40,950 --> 00:38:46,380
way so this information we're past

00:38:42,810 --> 00:38:50,760
include Lisa and the missile can use it

00:38:46,380 --> 00:38:53,250
to plot for the graph and also you need

00:38:50,760 --> 00:38:55,619
to pass the cheese but they'd have the

00:38:53,250 --> 00:38:59,750
Fairlane I know you also need to input

00:38:55,619 --> 00:39:04,500
what the cheese event you want to do the

00:38:59,750 --> 00:39:07,349
analyze so here also it can support for

00:39:04,500 --> 00:39:10,440
example if you use the f cheese or you

00:39:07,349 --> 00:39:14,450
use these trees to change out the truth

00:39:10,440 --> 00:39:20,970
data so this is to specify specify the

00:39:14,450 --> 00:39:24,330
trees format so the same step that we

00:39:20,970 --> 00:39:26,280
have opened the f cheese data so let's

00:39:24,330 --> 00:39:29,190
step network based on the trees this

00:39:26,280 --> 00:39:32,520
handle oh we can do the filter so we

00:39:29,190 --> 00:39:35,670
can't you define the pic task the

00:39:32,520 --> 00:39:38,220
criteria in this case so for example in

00:39:35,670 --> 00:39:41,730
here we define a very low pretty real

00:39:38,220 --> 00:39:46,950
remember we wanted you analysis want to

00:39:41,730 --> 00:39:51,330
analyze their the maxim the 15 biggest

00:39:46,950 --> 00:39:54,869
task and the every task and the minimum

00:39:51,330 --> 00:39:59,910
unit a lesion is 10 and it needs that

00:39:54,869 --> 00:40:04,500
there have 100 sample data for this task

00:39:59,910 --> 00:40:06,780
so use this map function we can easily

00:40:04,500 --> 00:40:09,870
need to get your load there have a tall

00:40:06,780 --> 00:40:11,840
task in this f trees so we can get known

00:40:09,870 --> 00:40:17,280
they're help maybe they have another

00:40:11,840 --> 00:40:19,290
what will cue the thread and also there

00:40:17,280 --> 00:40:22,830
how other testicles we can the higher

00:40:19,290 --> 00:40:28,470
husky 01 this is big task and there have

00:40:22,830 --> 00:40:32,750
small tasks so we can use the trees

00:40:28,470 --> 00:40:39,270
analysis this function to help you

00:40:32,750 --> 00:40:41,700
analyze the task the single owes so here

00:40:39,270 --> 00:40:45,000
we need to use the functionalities

00:40:41,700 --> 00:40:48,320
poured the tasks so utopia to display

00:40:45,000 --> 00:40:53,940
not only one graph it were to display

00:40:48,320 --> 00:40:56,190
match / graph so first graffiti that the

00:40:53,940 --> 00:40:58,410
chase analysis graph is for task

00:40:56,190 --> 00:41:01,460
residency so for example at the

00:40:58,410 --> 00:41:06,330
beginning the task initial venue zoo

00:41:01,460 --> 00:41:08,820
york in addition you venue is 124 so

00:41:06,330 --> 00:41:11,340
that means matter this task have 100

00:41:08,820 --> 00:41:15,300
percentage organization so it's a very

00:41:11,340 --> 00:41:20,460
big utilization so after where we can

00:41:15,300 --> 00:41:23,760
see that the green this scatter point

00:41:20,460 --> 00:41:26,580
means that this cpu is placed on the

00:41:23,760 --> 00:41:29,100
natal CPU and the red point means that

00:41:26,580 --> 00:41:31,530
the tascam migrated to the big sea view

00:41:29,100 --> 00:41:34,440
so we can see there have many pimpin

00:41:31,530 --> 00:41:38,100
issue between the two clusters for the

00:41:34,440 --> 00:41:40,110
task placement so this means that there

00:41:38,100 --> 00:41:50,640
have many migration between the two

00:41:40,110 --> 00:41:54,030
clusters so choose Ellen trees and

00:41:50,640 --> 00:41:57,690
analysis graph also to display the task

00:41:54,030 --> 00:42:01,830
pair to single oh so there how to single

00:41:57,690 --> 00:42:04,290
or soup for us to to check the first

00:42:01,830 --> 00:42:06,800
value the UT ur average you do average

00:42:04,290 --> 00:42:11,850
you which just means that you to use the

00:42:06,800 --> 00:42:14,880
parrot ur algorithm for the task running

00:42:11,850 --> 00:42:17,910
time so this means nettle how much the

00:42:14,880 --> 00:42:21,300
running time for the task occupy for the

00:42:17,910 --> 00:42:23,369
CPU then never have another single 0 is

00:42:21,300 --> 00:42:27,240
the kiss played by

00:42:23,369 --> 00:42:32,160
the blue this 9 this is the note average

00:42:27,240 --> 00:42:34,410
so not every G actually the venue the

00:42:32,160 --> 00:42:36,480
sum of the running time and a random a

00:42:34,410 --> 00:42:40,349
time so when time means that the CPU has

00:42:36,480 --> 00:42:43,950
been switched out so there are how other

00:42:40,349 --> 00:42:49,529
tasks running on this cpu so this has to

00:42:43,950 --> 00:42:51,269
need to wait the CPU time so unique it

00:42:49,529 --> 00:42:55,829
here you can see there have the

00:42:51,269 --> 00:43:02,130
difference between the uto average and

00:42:55,829 --> 00:43:04,890
the node average the two singles so one

00:43:02,130 --> 00:43:08,369
difference maybe because this task hide

00:43:04,890 --> 00:43:10,380
the higher priority so we can see for

00:43:08,369 --> 00:43:13,470
not average either not only just that

00:43:10,380 --> 00:43:16,160
you a kill me we need for the running

00:43:13,470 --> 00:43:19,230
time and a random time it also will be

00:43:16,160 --> 00:43:22,650
multiplied for its priority or this

00:43:19,230 --> 00:43:26,910
wheat venue so but the journey for the

00:43:22,650 --> 00:43:31,739
task the priority is not zero miss

00:43:26,910 --> 00:43:34,890
nettle the with manual we can sync it as

00:43:31,739 --> 00:43:39,869
the one so it were a lot multiplied to a

00:43:34,890 --> 00:43:42,749
big venue so in this case the difference

00:43:39,869 --> 00:43:46,019
between the know the average and the UT

00:43:42,749 --> 00:43:49,440
average this means that there this task

00:43:46,019 --> 00:43:54,089
had width for all touch running on the

00:43:49,440 --> 00:43:56,849
CPU so the difference more higher that

00:43:54,089 --> 00:43:59,119
means that there have much congestion on

00:43:56,849 --> 00:44:04,130
the cpu because there have many

00:43:59,119 --> 00:44:08,160
scheduled latency having on this task so

00:44:04,130 --> 00:44:10,829
we can see this is just for the p.m. for

00:44:08,160 --> 00:44:13,079
the task this level if we compare the

00:44:10,829 --> 00:44:14,749
task level single 0 with the cpu never

00:44:13,079 --> 00:44:18,569
single or we can get to know that

00:44:14,749 --> 00:44:22,230
actually this task the utilization this

00:44:18,569 --> 00:44:25,140
Nevel its nest then the little cost

00:44:22,230 --> 00:44:29,309
keeping point so you need this means

00:44:25,140 --> 00:44:33,029
that for this case this cpu the NATO CPU

00:44:29,309 --> 00:44:34,950
can meet the this task the performance

00:44:33,029 --> 00:44:36,400
requirement if you there have no other

00:44:34,950 --> 00:44:39,590
tasks

00:44:36,400 --> 00:44:42,500
but if there have other tasks then there

00:44:39,590 --> 00:44:44,360
have more connection on the NATO CPU so

00:44:42,500 --> 00:44:46,910
we can see know the average you have

00:44:44,360 --> 00:44:50,180
increased much more so that means that

00:44:46,910 --> 00:44:52,220
in this case the little cannot meet

00:44:50,180 --> 00:44:54,290
the tactical requirement for the

00:44:52,220 --> 00:44:57,050
performance for this task because there

00:44:54,290 --> 00:45:01,160
have many conjecturing CPU occupied by

00:44:57,050 --> 00:45:04,060
other tasks so in this case that means

00:45:01,160 --> 00:45:06,650
that the yearning means that the task of

00:45:04,060 --> 00:45:14,090
sometimes should be migrated to other

00:45:06,650 --> 00:45:18,380
cpu so this each answer we check the

00:45:14,090 --> 00:45:22,250
task the single owes so when if we want

00:45:18,380 --> 00:45:24,680
you invested furthermore for the food

00:45:22,250 --> 00:45:27,590
for this cheese nog when you to calculo

00:45:24,680 --> 00:45:32,660
some implementation for the yes i agree

00:45:27,590 --> 00:45:36,860
them so for yes algorithm the core code

00:45:32,660 --> 00:45:40,190
like their have one flag means that is

00:45:36,860 --> 00:45:43,670
the tipping point or the over utilize so

00:45:40,190 --> 00:45:47,330
even though all utilize is force if

00:45:43,670 --> 00:45:50,500
we're to enable the years pass so one

00:45:47,330 --> 00:45:53,750
when you're able the years pass for the

00:45:50,500 --> 00:45:57,110
finder busiest group this function will

00:45:53,750 --> 00:45:59,360
be called by the load balance so you can

00:45:57,110 --> 00:46:01,490
see either way to directly if you read

00:45:59,360 --> 00:46:04,220
him back so you wear a lot that you run

00:46:01,490 --> 00:46:05,840
that no the balance the code so you can

00:46:04,220 --> 00:46:08,600
wear a lot to migrate the task of

00:46:05,840 --> 00:46:12,320
between the two clusters therefore the

00:46:08,600 --> 00:46:15,770
yes the this is do-able for the weekend

00:46:12,320 --> 00:46:19,070
pass so in this part so we can see the

00:46:15,770 --> 00:46:23,360
task career run for the energyaware we

00:46:19,070 --> 00:46:26,750
have cpu this code you were not to

00:46:23,360 --> 00:46:30,740
selected idle siphoning but after the

00:46:26,750 --> 00:46:33,200
system there is run over the tipping

00:46:30,740 --> 00:46:35,810
point miss nettle their CPU is over

00:46:33,200 --> 00:46:40,490
utilized so in this case that means that

00:46:35,810 --> 00:46:43,100
some one of the CPU is very busy so the

00:46:40,490 --> 00:46:46,340
methodology is did want to spread out

00:46:43,100 --> 00:46:49,710
the task two different CPUs so in this

00:46:46,340 --> 00:46:51,450
case is where 20 for the

00:46:49,710 --> 00:46:53,490
no the balance we can see it were

00:46:51,450 --> 00:46:56,640
allowed to written back directly so you

00:46:53,490 --> 00:46:59,880
to wear to execute the fund the busiest

00:46:56,640 --> 00:47:03,570
group this function so finally you were

00:46:59,880 --> 00:47:06,599
to do the know the balance the work so

00:47:03,570 --> 00:47:09,109
fellow me you two were to do the may be

00:47:06,599 --> 00:47:15,390
migrated task across the different

00:47:09,109 --> 00:47:18,540
cluster so for here in the task we can

00:47:15,390 --> 00:47:20,490
pass it will not do energy-aware past

00:47:18,540 --> 00:47:23,190
because for energy where pass either

00:47:20,490 --> 00:47:27,599
where to select the most power steer-in

00:47:23,190 --> 00:47:30,570
cpu but do the SMP know the balance you

00:47:27,599 --> 00:47:32,880
know where to find out which is if the

00:47:30,570 --> 00:47:39,119
cpu is idle type in your sleep in you to

00:47:32,880 --> 00:47:40,619
run so here here actually for the code

00:47:39,119 --> 00:47:42,599
that you two were just that you find out

00:47:40,619 --> 00:47:45,270
the notes the schedule domain so miss

00:47:42,599 --> 00:47:50,310
nettle it will find out the same class

00:47:45,270 --> 00:47:54,180
the cpu to run so this is just for the

00:47:50,310 --> 00:47:57,210
code when we connected with the code we

00:47:54,180 --> 00:48:00,630
can do some analysis that maybe this fin

00:47:57,210 --> 00:48:03,839
this this issue is caused by their I'm

00:48:00,630 --> 00:48:06,660
many issues caused by introduced by the

00:48:03,839 --> 00:48:09,240
tipping point because after the overtime

00:48:06,660 --> 00:48:11,280
point when my credit ask you to pico and

00:48:09,240 --> 00:48:13,349
then after the editing point and then

00:48:11,280 --> 00:48:17,820
task aware pinback back to the needle

00:48:13,349 --> 00:48:19,560
call so this is a way suspect this may

00:48:17,820 --> 00:48:23,580
be the impaction so we need to figure

00:48:19,560 --> 00:48:27,630
out this is the pattern a lot so we can

00:48:23,580 --> 00:48:29,369
write do some more analysis so this hair

00:48:27,630 --> 00:48:32,700
elastics is that because these are you

00:48:29,369 --> 00:48:35,609
only you have provided very strong the

00:48:32,700 --> 00:48:39,240
functionality but sometimes maybe you

00:48:35,609 --> 00:48:43,260
can come you can find that and these are

00:48:39,240 --> 00:48:45,599
took it and include the protein function

00:48:43,260 --> 00:48:48,210
you need so you can write a plot

00:48:45,599 --> 00:48:50,940
function yourself so here is the special

00:48:48,210 --> 00:48:53,160
case that utilizes single 0 is not

00:48:50,940 --> 00:48:59,599
perceive you it's just a global single

00:48:53,160 --> 00:49:02,460
oh and you also you want to give to our

00:48:59,599 --> 00:49:03,330
analysis for the task placement for the

00:49:02,460 --> 00:49:07,500
pic

00:49:03,330 --> 00:49:09,600
the big task so you want to connect this

00:49:07,500 --> 00:49:12,450
to different distinct alluring one plot

00:49:09,600 --> 00:49:14,880
to see if there have any connection

00:49:12,450 --> 00:49:20,490
between these cube single or so you can

00:49:14,880 --> 00:49:25,760
write the functionality by yourself so

00:49:20,490 --> 00:49:29,550
we can see this is the one hint see that

00:49:25,760 --> 00:49:32,610
the red line is that the tip point when

00:49:29,550 --> 00:49:37,080
the t-point red line 1 means that either

00:49:32,610 --> 00:49:39,630
over T point so it's over utilized so

00:49:37,080 --> 00:49:44,190
when the over utilized we can see the

00:49:39,630 --> 00:49:46,410
task is my grid from the cpu 32 cpu for

00:49:44,190 --> 00:49:48,480
so this means that the cpu have migrated

00:49:46,410 --> 00:49:53,880
from the NATO scipio to the big save you

00:49:48,480 --> 00:49:56,640
then when you tip team point is 0 so

00:49:53,880 --> 00:49:58,590
miss nettle use an entity point so in

00:49:56,640 --> 00:50:02,550
that time point we can see the tascam

00:49:58,590 --> 00:50:05,130
migrate from cpu 42 cp3 so basically

00:50:02,550 --> 00:50:07,440
this is just the one very short period

00:50:05,130 --> 00:50:09,690
that you can see the title migration but

00:50:07,440 --> 00:50:12,690
this is a pattern you have fun so you

00:50:09,690 --> 00:50:14,820
can apply this pattern to other time

00:50:12,690 --> 00:50:18,330
period you can verify you for this is a

00:50:14,820 --> 00:50:20,040
very consistent pattern or not so felony

00:50:18,330 --> 00:50:23,030
you fully funded is a very considered

00:50:20,040 --> 00:50:36,000
pattern then we can do people motivated

00:50:23,030 --> 00:50:38,550
information for cheese event so this is

00:50:36,000 --> 00:50:42,450
we can see here is that the task

00:50:38,550 --> 00:50:45,300
immigrated from the cpu 12 cpu for so

00:50:42,450 --> 00:50:48,840
this is what we expected because this

00:50:45,300 --> 00:50:52,620
means that the task we want to migrate

00:50:48,840 --> 00:50:54,750
to the big big big cluster but there

00:50:52,620 --> 00:50:57,240
have two issues the first of all you can

00:50:54,750 --> 00:51:00,270
see after the big task everyone on the

00:50:57,240 --> 00:51:02,430
big cluster for wear but even migrated

00:51:00,270 --> 00:51:05,220
to the middle call so this means that

00:51:02,430 --> 00:51:07,860
not only you packed it because we want

00:51:05,220 --> 00:51:12,360
this task can be always keep around a

00:51:07,860 --> 00:51:17,150
big cluster another issue is we can see

00:51:12,360 --> 00:51:19,490
it here in the next time when the system

00:51:17,150 --> 00:51:21,710
you over utilize again it'll wear a lot

00:51:19,490 --> 00:51:25,160
Megara to the big task we were to

00:51:21,710 --> 00:51:29,000
migrate the NATO task to the big cluster

00:51:25,160 --> 00:51:31,609
so these are also another issue the

00:51:29,000 --> 00:51:34,549
behavior we don't impact it because

00:51:31,609 --> 00:51:36,410
because we always want filled out of the

00:51:34,549 --> 00:51:40,940
big task and that you migrate to the

00:51:36,410 --> 00:51:46,849
task to the big cluster so we can say

00:51:40,940 --> 00:51:49,809
the food summary for this issue is over

00:51:46,849 --> 00:51:53,779
teen point means that any cpu the

00:51:49,809 --> 00:51:56,900
utilization is bigger than the cpu

00:51:53,779 --> 00:51:59,240
capacity much prime 80 percentage so for

00:51:56,900 --> 00:52:01,069
example this is needle call capacity and

00:51:59,240 --> 00:52:03,589
the eighty percent is the capacity of

00:52:01,069 --> 00:52:06,140
the middle score then if i eat a uto

00:52:03,589 --> 00:52:08,720
venue is eighty percent a 90 percentage

00:52:06,140 --> 00:52:12,640
now we can see that the cpu is over

00:52:08,720 --> 00:52:15,380
utilized the same is for the big cpu and

00:52:12,640 --> 00:52:19,010
for the uncertain point we can see that

00:52:15,380 --> 00:52:21,069
means that all all the cpus you see you

00:52:19,010 --> 00:52:27,529
can at the same venue is nestling it's

00:52:21,069 --> 00:52:33,349
80 percentage of its capacity so issue

00:52:27,529 --> 00:52:35,510
is if / teen point we can see there have

00:52:33,349 --> 00:52:38,630
many small task could migrate to the big

00:52:35,510 --> 00:52:41,930
cluster and also in some okay so we

00:52:38,630 --> 00:52:45,260
expect the big task also microtube big

00:52:41,930 --> 00:52:47,569
cluster but after the system under teen

00:52:45,260 --> 00:52:49,700
point we can see that the all the

00:52:47,569 --> 00:52:51,200
tactical also make bleep back to the

00:52:49,700 --> 00:52:54,289
needle cluster so you can see there have

00:52:51,200 --> 00:52:58,069
many pimpin issue so how do you fix it

00:52:54,289 --> 00:53:02,029
so the fixer is we wanted to fill out a

00:52:58,069 --> 00:53:07,279
small task to avoid to migrated big c PP

00:53:02,029 --> 00:53:10,039
Corps and when we have migrated that big

00:53:07,279 --> 00:53:11,809
task to the big hole we want to avoid

00:53:10,039 --> 00:53:15,920
that you migrate to the big task

00:53:11,809 --> 00:53:20,890
backpacker to the nato cluster there

00:53:15,920 --> 00:53:23,990
have another foot back scenario is that

00:53:20,890 --> 00:53:27,410
for example you have migrated a big task

00:53:23,990 --> 00:53:29,539
to the big cluster even the little

00:53:27,410 --> 00:53:30,570
cluster you very idle so in this case

00:53:29,539 --> 00:53:33,960
you need to

00:53:30,570 --> 00:53:35,640
distinguish that is little cluster u by

00:53:33,960 --> 00:53:38,580
dou so in you needed to migrate to the

00:53:35,640 --> 00:53:43,530
task well can my back to the needle

00:53:38,580 --> 00:53:46,110
cluster so this is where special case so

00:53:43,530 --> 00:53:48,060
here is some effects for for this issue

00:53:46,110 --> 00:53:50,970
first is a metaphor the know the balance

00:53:48,060 --> 00:53:54,450
that we need to use them criteria to

00:53:50,970 --> 00:53:57,660
fill out which task a user's small task

00:53:54,450 --> 00:53:59,790
so in here we define the criteria is

00:53:57,660 --> 00:54:05,160
that the task run in timelessness them

00:53:59,790 --> 00:54:07,500
one of force data CPUs capacity so this

00:54:05,160 --> 00:54:10,290
tax to where Lord be migrated to the big

00:54:07,500 --> 00:54:13,350
core after return 0 so this means that

00:54:10,290 --> 00:54:16,470
for the know the balance between the two

00:54:13,350 --> 00:54:18,540
cluster if we return 0 and means that

00:54:16,470 --> 00:54:21,330
this has we're not migrate to the big

00:54:18,540 --> 00:54:23,910
cluster so this we are given more chance

00:54:21,330 --> 00:54:27,600
for the big task to migrate from middle

00:54:23,910 --> 00:54:31,230
class to two big cluster announcing that

00:54:27,600 --> 00:54:35,970
we change the criteria for over trial so

00:54:31,230 --> 00:54:40,860
here we need to check in the system teen

00:54:35,970 --> 00:54:43,980
point by we need to replace the check is

00:54:40,860 --> 00:54:46,260
for a system team point by we need to

00:54:43,980 --> 00:54:49,290
check out the class never the busy a lot

00:54:46,260 --> 00:54:51,960
so even the system if the cluster is

00:54:49,290 --> 00:54:55,740
bidding then we were to spread out of

00:54:51,960 --> 00:54:58,640
the task or if the cluster is a very

00:54:55,740 --> 00:55:02,340
idle then that means we might do for

00:54:58,640 --> 00:55:06,030
back to migration the big task to the

00:55:02,340 --> 00:55:08,370
cluster so it here we wanted to do one

00:55:06,030 --> 00:55:10,950
thing that we want needed to check the

00:55:08,370 --> 00:55:15,300
cluster is building a lot if it is not

00:55:10,950 --> 00:55:18,690
pity then you where'd you reading back 0

00:55:15,300 --> 00:55:22,290
so that means that the every task need

00:55:18,690 --> 00:55:25,020
to go to the energyaware pass so in here

00:55:22,290 --> 00:55:32,430
energy where password you have to select

00:55:25,020 --> 00:55:35,460
cpu but for another key that we also

00:55:32,430 --> 00:55:38,220
needed to do today in peace on the task

00:55:35,460 --> 00:55:40,530
this is never single also if this task

00:55:38,220 --> 00:55:43,410
is a very small task that means that we

00:55:40,530 --> 00:55:46,470
must make sure this task can be

00:55:43,410 --> 00:55:47,910
run into the energy where the past so

00:55:46,470 --> 00:55:50,609
make sure that you wake up with these

00:55:47,910 --> 00:55:53,160
paths you mean the cluster user busy but

00:55:50,609 --> 00:55:56,250
we also wanted to the energy we're past

00:55:53,160 --> 00:55:59,760
can help the sisters could you do them

00:55:56,250 --> 00:56:03,660
to do the decision but for the big task

00:55:59,760 --> 00:56:06,960
at this time point we don't want to do

00:56:03,660 --> 00:56:08,880
the big task we not to make decision in

00:56:06,960 --> 00:56:11,670
here which doesn't make a decision to

00:56:08,880 --> 00:56:14,130
the previous page because we need to

00:56:11,670 --> 00:56:16,260
check the cluster is busy a lot because

00:56:14,130 --> 00:56:18,359
I scare you feel a cluster user idol

00:56:16,260 --> 00:56:20,880
then we whether to nettle energy-aware

00:56:18,359 --> 00:56:23,640
pass to have meditation but you've

00:56:20,880 --> 00:56:26,220
cancer is busy that big task where a lot

00:56:23,640 --> 00:56:29,190
to do energy we're past it were to do

00:56:26,220 --> 00:56:31,410
the do the Select Idol seiberling the

00:56:29,190 --> 00:56:34,140
function so felony you can see after

00:56:31,410 --> 00:56:36,809
prime these three patches you can see

00:56:34,140 --> 00:56:39,210
you can filter out of this big task and

00:56:36,809 --> 00:56:41,849
then all the small task will be run on

00:56:39,210 --> 00:56:48,990
the net core and Italy it has on a big

00:56:41,849 --> 00:56:53,220
core ok so sorry maybe we need to escape

00:56:48,990 --> 00:56:58,410
the second example so basic pretty sim

00:56:53,220 --> 00:57:00,270
simple compared to the first one so if

00:56:58,410 --> 00:57:04,619
you have any question you can offline to

00:57:00,270 --> 00:57:07,650
send the email to me so here I have

00:57:04,619 --> 00:57:11,160
related material all the f cheese data

00:57:07,650 --> 00:57:14,599
and the Python notebooks and for the

00:57:11,160 --> 00:57:19,380
platform Jason fire I've shared on the

00:57:14,599 --> 00:57:22,049
fair server total rorg and also all the

00:57:19,380 --> 00:57:25,500
the first three patch for the first

00:57:22,049 --> 00:57:28,770
example you fixing and the fourth patch

00:57:25,500 --> 00:57:32,579
is for the second example has been

00:57:28,770 --> 00:57:37,109
posted on the ESF mailing list so you

00:57:32,579 --> 00:57:39,839
can check for next step actually you can

00:57:37,109 --> 00:57:41,880
debug the scheduler so try to focus on

00:57:39,839 --> 00:57:44,760
the decision-making know the packings

00:57:41,880 --> 00:57:49,170
because now you have to you can learn CC

00:57:44,760 --> 00:57:54,630
and also the new traditions should be as

00:57:49,170 --> 00:57:57,170
generous as possible so basically this

00:57:54,630 --> 00:58:00,890
is peace are normalized you need

00:57:57,170 --> 00:58:03,230
not just a hiking also you it's a very

00:58:00,890 --> 00:58:05,569
common you can share out this

00:58:03,230 --> 00:58:09,530
optimization in the public mailing list

00:58:05,569 --> 00:58:13,369
for the review or discussing and also

00:58:09,530 --> 00:58:15,530
here was in there too usually understand

00:58:13,369 --> 00:58:18,140
in the trees point patch and the tuning

00:58:15,530 --> 00:58:21,380
from the arm the tuning tools from arm

00:58:18,140 --> 00:58:25,970
so this you can directly together than

00:58:21,380 --> 00:58:28,130
Lisa Newbery from the github that it not

00:58:25,970 --> 00:58:30,319
there have another one thing actually

00:58:28,130 --> 00:58:33,140
also is very important for the debugging

00:58:30,319 --> 00:58:37,099
is that schedule because schedule you to

00:58:33,140 --> 00:58:39,740
provide the youth space the interface to

00:58:37,099 --> 00:58:42,079
nether the user space can you flat the

00:58:39,740 --> 00:58:45,890
task level of single 0 or the CPU single

00:58:42,079 --> 00:58:48,470
or so what did I inflect the post of

00:58:45,890 --> 00:58:52,849
annual define on your platform is a

00:58:48,470 --> 00:58:56,000
platform specific so you need to make a

00:58:52,849 --> 00:58:58,130
dirty cheat off because that means that

00:58:56,000 --> 00:59:00,980
you want to achieve some performance

00:58:58,130 --> 00:59:04,339
benefit how much power you want to pay

00:59:00,980 --> 00:59:06,470
for the performance posting so this is

00:59:04,339 --> 00:59:10,339
trade-off you need to define this by

00:59:06,470 --> 00:59:12,230
yourself so while other tools is harder

00:59:10,339 --> 00:59:14,089
to define the debugger skeleton so in

00:59:12,230 --> 00:59:16,430
you need to enable the lease on your

00:59:14,089 --> 00:59:19,670
platform and for debugging and finally

00:59:16,430 --> 00:59:25,339
you can find the parameter for your

00:59:19,670 --> 00:59:27,819
platform it's a bad fake so how many

00:59:25,339 --> 00:59:27,819
question

00:59:30,420 --> 00:59:32,480
you

00:59:37,490 --> 00:59:40,930
ok thanks

00:59:51,180 --> 00:59:53,240

YouTube URL: https://www.youtube.com/watch?v=zRlqwurYq5Y


