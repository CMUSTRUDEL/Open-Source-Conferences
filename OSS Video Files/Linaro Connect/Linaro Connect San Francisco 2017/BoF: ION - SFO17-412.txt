Title: BoF: ION - SFO17-412
Publication date: 2017-09-29
Playlist: Linaro Connect San Francisco 2017
Description: 
	Session ID: SFO17-412
Session Name: BoF: ION - SFO17-412
Speaker: Laura Abbott - Sumit Semwal
Track: LMG


★ Session Summary ★
ION has undergone a lot of change upstream in its bid to be de-staged. We’d give a brief update on what’s changed, the proposed libion changes, and then we’d like to discuss:
 - [Actionable] feedback from members about what additional features does the upstream ION need to still support
 - How can we encourage them to submit changes
 - Any other ideas around ION in mainline.
---------------------------------------------------
★ Resources ★
Event Page: http://connect.linaro.org/resource/sfo17/sfo17-412/
Presentation: 
Video: https://www.youtube.com/watch?v=jkeFoqbEMJQ
 ---------------------------------------------------

★ Event Details ★
Linaro Connect San Francisco 2017 (SFO17)
25-29 September 2017
Hyatt Regency San Francisco Airport

---------------------------------------------------
Keyword: 
'http://www.linaro.org'
'http://connect.linaro.org'
---------------------------------------------------
Follow us on Social Media
https://www.facebook.com/LinaroOrg
https://twitter.com/linaroorg
https://www.youtube.com/user/linaroorg?sub_confirmation=1
https://www.linkedin.com/company/1026961
Captions: 
	00:00:00,120 --> 00:00:04,060
[Music]

00:00:08,910 --> 00:00:12,320
[Music]

00:00:14,120 --> 00:00:19,890
yeah so these are some I have some

00:00:17,520 --> 00:00:23,580
slides that put together this next two

00:00:19,890 --> 00:00:25,710
weeks have been both LPC and xvc where

00:00:23,580 --> 00:00:28,410
I've doesn't talk about ions these are

00:00:25,710 --> 00:00:29,820
sly of a song what happened that there

00:00:28,410 --> 00:00:39,090
and also some discussions that have come

00:00:29,820 --> 00:00:41,040
out so if you want I go ahead new

00:00:39,090 --> 00:00:42,780
picture of this like I mentioned the

00:00:41,040 --> 00:00:44,780
past week has been a lot of plumbers

00:00:42,780 --> 00:00:47,370
conference and X Developers Conference

00:00:44,780 --> 00:00:51,660
there's notes from the ether cab and

00:00:47,370 --> 00:00:54,480
also an X DC video where I took there

00:00:51,660 --> 00:00:56,489
was imported of me giving this talk and

00:00:54,480 --> 00:01:06,899
also answering questions so those will

00:00:56,489 --> 00:01:10,770
be available for okay that's a sure I'm

00:01:06,899 --> 00:01:12,750
history for those who don't remember

00:01:10,770 --> 00:01:14,430
where I am came from it was an

00:01:12,750 --> 00:01:18,810
orientation framework originally written

00:01:14,430 --> 00:01:21,930
by Google to handle various types of the

00:01:18,810 --> 00:01:25,830
department memories these days primarily

00:01:21,930 --> 00:01:27,869
use is providing an effective

00:01:25,830 --> 00:01:29,490
enumeration of types of memory that are

00:01:27,869 --> 00:01:33,689
available for users big space to

00:01:29,490 --> 00:01:36,270
allocate and with DNA buff

00:01:33,689 --> 00:01:38,520
mostly for use and Android although

00:01:36,270 --> 00:01:40,140
there have always been some level of

00:01:38,520 --> 00:01:44,100
interest in not every business but

00:01:40,140 --> 00:01:47,729
primarily everyday so this is when I

00:01:44,100 --> 00:01:49,170
actually got a question at LPC about why

00:01:47,729 --> 00:01:50,370
we shall talk about line because someone

00:01:49,170 --> 00:01:54,090
thought that we had

00:01:50,370 --> 00:01:58,970
the answer is so that yes we do end up

00:01:54,090 --> 00:02:02,060
meeting my on just because it's still a

00:01:58,970 --> 00:02:04,590
simple wrapper Iraq has a buffer as a

00:02:02,060 --> 00:02:06,620
simple wrapper as a way to give a female

00:02:04,590 --> 00:02:11,340
boss for userspace

00:02:06,620 --> 00:02:14,220
there has still been nothing else in in

00:02:11,340 --> 00:02:16,320
the colonel to replace some of our

00:02:14,220 --> 00:02:18,510
functionality it's most of if you need

00:02:16,320 --> 00:02:20,670
something that that isn't actually quite

00:02:18,510 --> 00:02:23,910
one another framework such as the yeren

00:02:20,670 --> 00:02:26,130
framework or refill - then I can fill a

00:02:23,910 --> 00:02:27,840
niche that perhaps olq those numbers for

00:02:26,130 --> 00:02:32,700
me to use across so you can eventually

00:02:27,840 --> 00:02:38,100
pass them on okay so this task you were

00:02:32,700 --> 00:02:38,880
exactly did happen I did a lot ended up

00:02:38,100 --> 00:02:41,580
happening

00:02:38,880 --> 00:02:43,530
I'm taking a approach about ripping out

00:02:41,580 --> 00:02:46,890
a lot of code that in the nine that

00:02:43,530 --> 00:02:50,040
become become unnecessary and start

00:02:46,890 --> 00:02:53,880
working towards a allocation a new

00:02:50,040 --> 00:02:57,739
allocation a PRI and really simplifying

00:02:53,880 --> 00:02:59,580
things a lot so the end result is that

00:02:57,739 --> 00:03:02,550
the current online

00:02:59,580 --> 00:03:06,270
ABI is just an allocation my article and

00:03:02,550 --> 00:03:07,440
a very dark Oh anything else that means

00:03:06,270 --> 00:03:10,400
to have this both leaders handled

00:03:07,440 --> 00:03:12,360
through manipulation of the DMA both F D

00:03:10,400 --> 00:03:15,540
well be talking about some of those

00:03:12,360 --> 00:03:18,540
stuff really 280 Isaac hurry up a little

00:03:15,540 --> 00:03:24,000
bit there their edges have been pending

00:03:18,540 --> 00:03:26,610
for a whiskey as of post XTC packages

00:03:24,000 --> 00:03:28,410
for Liliana backwards-compatibility

00:03:26,610 --> 00:03:30,690
have merged but peppers for growl ox

00:03:28,410 --> 00:03:31,140
still needs another arisen but those are

00:03:30,690 --> 00:03:33,720
pending

00:03:31,140 --> 00:03:36,900
tested sodas in the near future those

00:03:33,720 --> 00:03:38,580
will all be merged so that upstream AOSP

00:03:36,900 --> 00:03:41,970
will have support for both the old and

00:03:38,580 --> 00:03:44,220
new versions of the API and big thanks

00:03:41,970 --> 00:03:48,300
to John Smoltz and sumit for helping

00:03:44,220 --> 00:03:49,950
push those forward okay so question that

00:03:48,300 --> 00:03:52,500
again comes up is why is limestone

00:03:49,950 --> 00:03:56,870
staging was walking from moving out and

00:03:52,500 --> 00:03:56,870
from my perspective it's really easy ABI

00:03:57,560 --> 00:04:03,420
one of the big names the API is meant

00:04:00,900 --> 00:04:05,760
figure out what to do with dev my on

00:04:03,420 --> 00:04:07,910
there's been a lot of addition trying to

00:04:05,760 --> 00:04:12,000
split our two deadlines into having

00:04:07,910 --> 00:04:13,739
multiple what I think of as some device

00:04:12,000 --> 00:04:16,590
knows more course money to keep some

00:04:13,739 --> 00:04:19,799
stuff to step on you have if zero can

00:04:16,590 --> 00:04:22,650
keep want etc etc there have been

00:04:19,799 --> 00:04:24,240
patches actually pending this week to

00:04:22,650 --> 00:04:26,780
add support for this which either

00:04:24,240 --> 00:04:29,220
reviewing it didn't going back and forth

00:04:26,780 --> 00:04:30,450
their crews have been going into looking

00:04:29,220 --> 00:04:33,870
at this supposed to be backwards

00:04:30,450 --> 00:04:36,960
compatibility just because we don't want

00:04:33,870 --> 00:04:39,000
to break things yet again so the thought

00:04:36,960 --> 00:04:42,150
going forward is is that we'll keep the

00:04:39,000 --> 00:04:44,910
existing div on a node as an old

00:04:42,150 --> 00:04:48,150
backwards compatible interface and then

00:04:44,910 --> 00:04:50,729
allow the existing to keep whatever as a

00:04:48,150 --> 00:04:53,580
new interface and these will be able to

00:04:50,729 --> 00:04:55,800
exist in parallel for the kernel but the

00:04:53,580 --> 00:04:58,950
only interface will be able to be

00:04:55,800 --> 00:05:00,540
disabled undertaken thing so if you're a

00:04:58,950 --> 00:05:01,979
new platform only supports the new River

00:05:00,540 --> 00:05:05,729
case you want to secure it down that way

00:05:01,979 --> 00:05:07,800
that's the way you can go once you that

00:05:05,729 --> 00:05:11,400
was actually somewhat related to this

00:05:07,800 --> 00:05:14,250
fault and came out today is how exactly

00:05:11,400 --> 00:05:17,370
this feels then actually secure the

00:05:14,250 --> 00:05:19,860
piece one of the goals with movement

00:05:17,370 --> 00:05:20,930
with the new ABI was to have Heep II's

00:05:19,860 --> 00:05:23,700
be discoverable

00:05:20,930 --> 00:05:26,550
one of the myelin threads would be older

00:05:23,700 --> 00:05:29,930
a theology that keep I did is mid to be

00:05:26,550 --> 00:05:32,480
hurt code in such that you would in to

00:05:29,930 --> 00:05:35,630
you avi file and caging

00:05:32,480 --> 00:05:36,860
back and forth was very difficult so the

00:05:35,630 --> 00:05:39,500
solution item of one supposed to have a

00:05:36,860 --> 00:05:41,060
query ethical to be able to find out

00:05:39,500 --> 00:05:44,060
what keeps your available handler that

00:05:41,060 --> 00:05:46,820
these are but the problem that becomes

00:05:44,060 --> 00:05:50,750
if you use that then to enumerate heaps

00:05:46,820 --> 00:05:51,980
dead heat 0 if you want keep - how

00:05:50,750 --> 00:05:54,560
exactly do you walk that down with

00:05:51,980 --> 00:05:56,960
SELinux bang just because if the heaps

00:05:54,560 --> 00:05:59,180
themselves are going to be dynamically

00:05:56,960 --> 00:06:02,120
created up runtime that doesn't quite

00:05:59,180 --> 00:06:04,460
work with the static security mechanisms

00:06:02,120 --> 00:06:09,230
like su Linux which relies on knowing

00:06:04,460 --> 00:06:10,910
what the dev notes are going to be it

00:06:09,230 --> 00:06:14,240
was one possibility to point out that's

00:06:10,910 --> 00:06:17,120
ok you can just give them a heap speedy

00:06:14,240 --> 00:06:18,890
same security policy but that kind of

00:06:17,120 --> 00:06:21,200
defeats the point possibly to splitting

00:06:18,890 --> 00:06:23,390
them out into separate subjects so that

00:06:21,200 --> 00:06:24,980
is one of the issues to work through in

00:06:23,390 --> 00:06:28,670
terms of trying to figure out what the

00:06:24,980 --> 00:06:29,840
future of this is might be just mostly

00:06:28,670 --> 00:06:32,120
to make sure that we do go with the

00:06:29,840 --> 00:06:34,340
route to actually split this out to them

00:06:32,120 --> 00:06:37,460
again another ABI it will actually buy

00:06:34,340 --> 00:06:38,510
some like to meaningfully walk down the

00:06:37,460 --> 00:06:40,370
heaps possibly through something like

00:06:38,510 --> 00:06:44,690
this he likes without actually requiring

00:06:40,370 --> 00:06:47,720
part coding of the heat names or IDs so

00:06:44,690 --> 00:06:51,970
if anyone that he is working in some I'm

00:06:47,720 --> 00:06:54,970
having it here at our talk afterwards

00:06:51,970 --> 00:06:54,970
publishing

00:06:56,550 --> 00:07:03,220
yes the question was where he published

00:07:00,220 --> 00:07:07,360
after he to the Hughes yeah when you

00:07:03,220 --> 00:07:09,729
where we gr Khalil to when you query the

00:07:07,360 --> 00:07:12,699
available keeps you get back a list of

00:07:09,729 --> 00:07:15,009
heaps their name their feet by views for

00:07:12,699 --> 00:07:19,449
application and also good fight

00:07:15,009 --> 00:07:21,699
I thought these with my assumption was

00:07:19,449 --> 00:07:35,199
these are just a period of 6 FS some

00:07:21,699 --> 00:07:38,349
wiring and we can even use that's that's

00:07:35,199 --> 00:07:42,430
a possibility I brought up these suits

00:07:38,349 --> 00:07:44,470
and pest attributes as on the list but I

00:07:42,430 --> 00:07:45,909
think people originally thought that the

00:07:44,470 --> 00:07:51,819
proposal was to try and allocate this

00:07:45,909 --> 00:07:53,289
sis FS but do you have firmly read with

00:07:51,819 --> 00:08:00,639
this approach about trying to get

00:07:53,289 --> 00:08:03,810
through since about so many years yeah

00:08:00,639 --> 00:08:06,909
so that's one little bit the other we

00:08:03,810 --> 00:08:11,200
did we could definitely look at this

00:08:06,909 --> 00:08:16,570
when we talk about

00:08:11,200 --> 00:08:16,570
[Music]

00:08:23,159 --> 00:08:30,979
so this general question for you I

00:08:26,339 --> 00:08:34,110
haven't looked at the ECI in a while but

00:08:30,979 --> 00:08:37,919
it occurs to me that there are different

00:08:34,110 --> 00:08:41,009
attributes memory could require

00:08:37,919 --> 00:08:42,710
different KPIs for things the memory

00:08:41,009 --> 00:08:44,960
operations on our schemes

00:08:42,710 --> 00:08:48,410
[Music]

00:08:44,960 --> 00:08:49,220
the question is could different memory

00:08:48,410 --> 00:08:52,400
attributes with very different

00:08:49,220 --> 00:08:56,630
operations doesn't mediate at all the

00:08:52,400 --> 00:08:58,280
answer is no not at the moment nobody

00:08:56,630 --> 00:09:01,310
has really come out with a proposal that

00:08:58,280 --> 00:09:03,680
requires any actual different operations

00:09:01,310 --> 00:09:07,540
than what if it's already just you can

00:09:03,680 --> 00:09:07,540
the standard pen map and standard

00:09:07,720 --> 00:09:15,110
existing DNA both ApS to do scattered

00:09:12,020 --> 00:09:18,110
list and act on it that way

00:09:15,110 --> 00:09:20,270
this is some other issues have come up

00:09:18,110 --> 00:09:22,400
which will talk about the bits what if

00:09:20,270 --> 00:09:24,140
she was secure buffers and how you deal

00:09:22,400 --> 00:09:25,790
with those attributes and we have been

00:09:24,140 --> 00:09:29,950
bringing brainstorming some ideas that

00:09:25,790 --> 00:09:37,160
have to be able to cast around details

00:09:29,950 --> 00:09:40,400
to it's indeed a way to be able to pass

00:09:37,160 --> 00:09:43,400
around allocation specific information

00:09:40,400 --> 00:09:45,230
to generic you may both to be able to

00:09:43,400 --> 00:09:48,050
get back so we're thinking about ways to

00:09:45,230 --> 00:09:51,770
do that but as far as actual operations

00:09:48,050 --> 00:09:52,760
on memory we haven't given any thought

00:09:51,770 --> 00:09:53,750
of that I don't know if there's

00:09:52,760 --> 00:09:57,280
something more specific you're thinking

00:09:53,750 --> 00:09:57,280
of or do you

00:10:07,120 --> 00:10:10,259
[Music]

00:10:12,990 --> 00:10:21,550
it's a possibility for cash flow thing

00:10:17,620 --> 00:10:23,470
that's always we posting a new approach

00:10:21,550 --> 00:10:26,470
to that as well where we roll on another

00:10:23,470 --> 00:10:27,520
standard um email about API use for

00:10:26,470 --> 00:10:29,740
synchronization there

00:10:27,520 --> 00:10:31,060
I overheard him that line is one percent

00:10:29,740 --> 00:10:33,130
complete but in if there are additional

00:10:31,060 --> 00:10:34,870
requirements I think those are something

00:10:33,130 --> 00:10:39,779
that we'll have to work through to meet

00:10:34,870 --> 00:10:39,779
that either possibly the most generic I

00:10:45,600 --> 00:10:51,730
can't think of a way to evolve the

00:10:48,399 --> 00:10:55,120
existing ABI right now I would probably

00:10:51,730 --> 00:10:57,190
say adding my opticals if careful

00:10:55,120 --> 00:10:58,360
careful careful review is always an

00:10:57,190 --> 00:11:01,750
option if there's something that's

00:10:58,360 --> 00:11:04,029
neither allocation or weary if there

00:11:01,750 --> 00:11:05,890
would be other operations but as far as

00:11:04,029 --> 00:11:19,810
things like say cash flushing that's

00:11:05,890 --> 00:11:21,700
already handled through the standard so

00:11:19,810 --> 00:11:24,100
we're trying to solve that a different

00:11:21,700 --> 00:11:26,680
way so they just have came up in a

00:11:24,100 --> 00:11:28,990
discussion that LPC so we'll be looking

00:11:26,680 --> 00:11:30,580
at proposals for that at home if you

00:11:28,990 --> 00:11:32,380
have a proposal for that you're welcome

00:11:30,580 --> 00:11:33,820
to submit it upstream to that makes a

00:11:32,380 --> 00:11:35,410
lot easier to review trying to know

00:11:33,820 --> 00:11:41,529
something I guess we've heard that

00:11:35,410 --> 00:11:43,450
feedback before yeah so on to the El

00:11:41,529 --> 00:11:47,290
Cajon API so this is as it exists today

00:11:43,450 --> 00:11:49,690
pass through the alcohol there was some

00:11:47,290 --> 00:11:51,510
discussion about what exactly we should

00:11:49,690 --> 00:11:53,310
do to try and stand it automatically

00:11:51,510 --> 00:11:56,600
because there was already some comments

00:11:53,310 --> 00:11:59,190
that 32 bits of life is not enough space

00:11:56,600 --> 00:12:01,530
generally the way the print works is

00:11:59,190 --> 00:12:04,770
that 16 bits are from land 16 bits are

00:12:01,530 --> 00:12:07,200
reserved for specific usage and the 16

00:12:04,770 --> 00:12:08,610
bits are not actually enough and I think

00:12:07,200 --> 00:12:10,590
the conclusion was is that we may very

00:12:08,610 --> 00:12:12,510
well just have that flights to field and

00:12:10,590 --> 00:12:15,720
just go ahead and use the other stone

00:12:12,510 --> 00:12:17,190
space just to get will securing feedback

00:12:15,720 --> 00:12:19,950
from the graphics people who are well

00:12:17,190 --> 00:12:22,260
first and if you guys that go ahead and

00:12:19,950 --> 00:12:27,060
just expand now give people a chance to

00:12:22,260 --> 00:12:28,380
do things and then some swell people and

00:12:27,060 --> 00:12:30,600
I've seen this before this is the query

00:12:28,380 --> 00:12:34,380
octal it's designed to be called from

00:12:30,600 --> 00:12:39,210
user space and what you get back is a

00:12:34,380 --> 00:12:42,360
list of heaps that are with information

00:12:39,210 --> 00:12:44,790
like heat like heat name and you might

00:12:42,360 --> 00:12:48,810
need a common question then is exactly

00:12:44,790 --> 00:12:50,430
what exactly you used to match on in

00:12:48,810 --> 00:12:53,490
user space to be able to get the C by D

00:12:50,430 --> 00:12:56,550
and the proposed solution is to be able

00:12:53,490 --> 00:12:59,160
to you definitely keep name assumption

00:12:56,550 --> 00:13:00,150
is that there'll be some way with how

00:12:59,160 --> 00:13:02,880
you said it was just time to know

00:13:00,150 --> 00:13:07,680
exactly what that means called that is

00:13:02,880 --> 00:13:10,020
more specific which has been discussed

00:13:07,680 --> 00:13:11,760
before but I think the logic is right

00:13:10,020 --> 00:13:14,460
now so you should you still can't do

00:13:11,760 --> 00:13:16,530
this perfect zero information right now

00:13:14,460 --> 00:13:18,120
and I'm actually on this means the best

00:13:16,530 --> 00:13:19,530
idea we have right now to be able to

00:13:18,120 --> 00:13:22,669
figure out really pretty

00:13:19,530 --> 00:13:22,669
[Music]

00:13:23,989 --> 00:13:32,009
for that okay the the one that

00:13:27,839 --> 00:13:35,009
comes up is about heats and can we add

00:13:32,009 --> 00:13:39,179
exactly uh new peeps and I think them

00:13:35,009 --> 00:13:41,699
get discussions I think new certainly

00:13:39,179 --> 00:13:45,629
welcome but there needs to be a

00:13:41,699 --> 00:13:47,339
reasonable use case such as any open

00:13:45,629 --> 00:13:50,600
source user similar to how the graphics

00:13:47,339 --> 00:13:53,249
kernel graphics driver will not take

00:13:50,600 --> 00:13:57,179
credit card shark mister is in open

00:13:53,249 --> 00:13:59,249
source use case I'm going to be a little

00:13:57,179 --> 00:14:02,249
bit flexible about what an open source

00:13:59,249 --> 00:14:03,359
use cases this doesn't necessarily mean

00:14:02,249 --> 00:14:05,999
it needs to be completely integrated

00:14:03,359 --> 00:14:10,559
with something but I don't just want to

00:14:05,999 --> 00:14:14,699
see heaps dumped into that are only ever

00:14:10,559 --> 00:14:16,999
used with some proprietary module that's

00:14:14,699 --> 00:14:19,139
shouldn't use your face again

00:14:16,999 --> 00:14:21,119
there's some flexibility here I'm not

00:14:19,139 --> 00:14:26,309
saying don't submit it but trying can be

00:14:21,119 --> 00:14:29,399
used isn't mine then there's also

00:14:26,309 --> 00:14:32,129
question about point yes so you've

00:14:29,399 --> 00:14:33,929
mentioned updating growling earlier I

00:14:32,129 --> 00:14:36,499
assume that's the Molly garlic and

00:14:33,929 --> 00:14:43,259
hockey yes this was not Malia growling

00:14:36,499 --> 00:14:47,279
generic Pelican so would you consider

00:14:43,259 --> 00:14:49,980
that open source user space and I

00:14:47,279 --> 00:14:53,309
consider AOSP open source enough for

00:14:49,980 --> 00:14:56,369
this purpose but that garlic is a the

00:14:53,309 --> 00:15:00,500
state downstream copy of whatever that's

00:14:56,369 --> 00:15:09,110
trickled through the vendor from arm

00:15:00,500 --> 00:15:13,640
no no real lobster biome is like to be

00:15:09,110 --> 00:15:16,640
producers of the eye of an EPA but if

00:15:13,640 --> 00:15:19,550
arm decided that they wanted to add a

00:15:16,640 --> 00:15:22,850
heap and I've added to their Kralik that

00:15:19,550 --> 00:15:26,180
filtered Allison you did an update pipe

00:15:22,850 --> 00:15:30,350
deed how would you know about didn't

00:15:26,180 --> 00:15:31,940
become you oh there they were if they

00:15:30,350 --> 00:15:34,280
didn't submit it up strength for the

00:15:31,940 --> 00:15:42,830
colonel then yeah there would be using

00:15:34,280 --> 00:15:46,400
their own and something like I said I

00:15:42,830 --> 00:15:48,920
think that is that bit is people to do

00:15:46,400 --> 00:15:52,070
interpretation so I guess for the

00:15:48,920 --> 00:15:54,500
students the usual DRM debate about new

00:15:52,070 --> 00:15:56,120
interfaces were just the users based

00:15:54,500 --> 00:16:00,770
succulent first or they travel site

00:15:56,120 --> 00:16:06,560
gonna first expect it could go very very

00:16:00,770 --> 00:16:09,380
well turning it up on the other hand if

00:16:06,560 --> 00:16:10,670
I haven't heard apart from this to

00:16:09,380 --> 00:16:13,580
secure buffers I haven't heard a whole

00:16:10,670 --> 00:16:14,900
lot of other people wanting to pump

00:16:13,580 --> 00:16:17,720
stuff in there but on the other hand I

00:16:14,900 --> 00:16:20,720
think I don't want to see six different

00:16:17,720 --> 00:16:22,580
implementations of secure buffers and

00:16:20,720 --> 00:16:25,760
you think we run the risk of running

00:16:22,580 --> 00:16:27,020
into this which is why I'm saying I'm

00:16:25,760 --> 00:16:29,060
willing to be a little bit flexible but

00:16:27,020 --> 00:16:32,210
I think it it does need to be reviewed

00:16:29,060 --> 00:16:33,590
in some place and I don't one sign was

00:16:32,210 --> 00:16:35,030
out of state thing I just don't want to

00:16:33,590 --> 00:16:36,380
see everything you submit at all it

00:16:35,030 --> 00:16:39,490
wasn't them say there we're done with

00:16:36,380 --> 00:16:39,490
that somewhat work view

00:16:40,820 --> 00:16:45,630
and we're looking to the terms of both

00:16:44,400 --> 00:16:48,480
heaps

00:16:45,630 --> 00:16:50,370
I didn't end up doing my name's for

00:16:48,480 --> 00:16:53,430
either a car guy or chunky because I

00:16:50,370 --> 00:16:55,020
want to delete those I'm considering

00:16:53,430 --> 00:16:56,520
forcing a pastor to delete those and

00:16:55,020 --> 00:16:58,980
saying anyone who wants to bring us back

00:16:56,520 --> 00:17:04,500
and figure out a good way to have those

00:16:58,980 --> 00:17:07,350
integrated with the new new set up a lot

00:17:04,500 --> 00:17:09,000
of this is because the current method of

00:17:07,350 --> 00:17:14,699
mining basically doesn't touch anything

00:17:09,000 --> 00:17:18,079
related to device tree and there I think

00:17:14,699 --> 00:17:20,910
there would need to be some mechanism to

00:17:18,079 --> 00:17:24,780
what compatible property that's to add

00:17:20,910 --> 00:17:27,180
to a device for you to be able to link

00:17:24,780 --> 00:17:28,500
to carve out and or funky so I didn't

00:17:27,180 --> 00:17:29,850
really want to go try figuring that up

00:17:28,500 --> 00:17:31,710
so I figured I'll leave this to anyone

00:17:29,850 --> 00:17:33,960
else who is super enthusiastic about

00:17:31,710 --> 00:17:37,099
keeping in touch and our car backers one

00:17:33,960 --> 00:17:37,099
[Music]

00:17:38,450 --> 00:17:43,950
and those who need haven't heard anyone

00:17:40,950 --> 00:17:46,710
wanting to do that good I hear about it

00:17:43,950 --> 00:17:48,990
every now then every time I say we want

00:17:46,710 --> 00:17:53,070
to delete chunky or I don't even know no

00:17:48,990 --> 00:17:54,360
we're using it I was hearing that are we

00:17:53,070 --> 00:17:56,100
using for some things internally and

00:17:54,360 --> 00:17:58,410
they were fit but then I wasn't perfect

00:17:56,100 --> 00:18:02,550
to see that maybe it's they're less

00:17:58,410 --> 00:18:04,320
interested so I'm kind of willing to let

00:18:02,550 --> 00:18:05,790
it see trying to lead it and see exactly

00:18:04,320 --> 00:18:09,679
who's willing to speak up and actually

00:18:05,790 --> 00:18:09,679
do the work to something reasonable

00:18:12,309 --> 00:18:18,039
another issue that's come up is about

00:18:14,860 --> 00:18:20,529
accounting with all the stuff I ripped

00:18:18,039 --> 00:18:22,980
out the existing debug infrastructure

00:18:20,529 --> 00:18:26,500
didn't end up making a lot of sense

00:18:22,980 --> 00:18:28,870
clients were basically redundant handles

00:18:26,500 --> 00:18:32,590
and buffers were also redundant for

00:18:28,870 --> 00:18:37,000
giving me a DNA buffs so there is a

00:18:32,590 --> 00:18:40,059
little lot of specific debunker peasant

00:18:37,000 --> 00:18:42,250
infrastructure and there's some of us

00:18:40,059 --> 00:18:44,770
about though what should use that and

00:18:42,250 --> 00:18:51,399
when leaks occurs because memory leaks

00:18:44,770 --> 00:18:54,760
are going to occur so part of what I was

00:18:51,399 --> 00:18:56,980
what ever thinking about is taking

00:18:54,760 --> 00:18:59,380
advantage of stuff of the generic DNA

00:18:56,980 --> 00:19:01,600
above level which is essentially it's

00:18:59,380 --> 00:19:04,809
just an anonymous high note and then

00:19:01,600 --> 00:19:08,350
using l sof to be able to list out all

00:19:04,809 --> 00:19:11,409
the f FD is available and then linking

00:19:08,350 --> 00:19:13,059
them back and so might be able to see

00:19:11,409 --> 00:19:17,289
exactly which processes have references

00:19:13,059 --> 00:19:21,279
to be made well this needs some updates

00:19:17,289 --> 00:19:22,860
to team name of mostly because

00:19:21,279 --> 00:19:26,320
everything is in the same game right now

00:19:22,860 --> 00:19:28,510
we also got the suggestion from a great

00:19:26,320 --> 00:19:30,450
fact net XGC about looking at unique

00:19:28,510 --> 00:19:33,940
high notes and then continuing through

00:19:30,450 --> 00:19:36,220
skinnies in proc as well it's an option

00:19:33,940 --> 00:19:37,960
but ideally what I'd like eventually

00:19:36,220 --> 00:19:40,510
have this some sort of user space

00:19:37,960 --> 00:19:45,250
program that won't be able to scan

00:19:40,510 --> 00:19:46,330
profess and scam croc slash also have to

00:19:45,250 --> 00:19:47,830
be able to get this information and

00:19:46,330 --> 00:19:50,380
title together through the next summary

00:19:47,830 --> 00:19:52,050
about what DNA buffs are actually

00:19:50,380 --> 00:19:54,420
available I

00:19:52,050 --> 00:19:56,460
talking to sin as well about possibly

00:19:54,420 --> 00:20:01,140
moving some of this information before

00:19:56,460 --> 00:20:02,550
it's just FS as well and giving team a

00:20:01,140 --> 00:20:04,680
bell for reals - so this is an interface

00:20:02,550 --> 00:20:08,760
as well and it's just sort of tigers can

00:20:04,680 --> 00:20:11,720
be better read only existence is no

00:20:08,760 --> 00:20:14,490
customer base for information there but

00:20:11,720 --> 00:20:16,290
part of this is motivated by there's a

00:20:14,490 --> 00:20:20,010
move towards getting rid of debugger

00:20:16,290 --> 00:20:21,510
pests on Android devices so moving

00:20:20,010 --> 00:20:22,650
anything that might actually be useful

00:20:21,510 --> 00:20:26,130
or unkind avoiding

00:20:22,650 --> 00:20:28,770
to suppress would be also ok this is

00:20:26,130 --> 00:20:29,850
sort of nebulous word but it is again we

00:20:28,770 --> 00:20:31,980
realize this is something that's

00:20:29,850 --> 00:20:34,890
required to actually debug into the

00:20:31,980 --> 00:20:40,260
device so we're thinking about it open

00:20:34,890 --> 00:20:42,420
problem has accepted funding testing um

00:20:40,260 --> 00:20:45,540
one of the things is that we do want to

00:20:42,420 --> 00:20:47,670
travel opportunity getting more ions

00:20:45,540 --> 00:20:49,350
self-test going there's been a big

00:20:47,670 --> 00:20:52,880
person to kernel towards things like

00:20:49,350 --> 00:20:55,890
case all tests and other CIFS date nom

00:20:52,880 --> 00:20:58,650
one thing that needs to I think any

00:20:55,890 --> 00:21:01,890
things working on this test that working

00:20:58,650 --> 00:21:03,780
toward use on the DMV gem interface

00:21:01,890 --> 00:21:06,050
which is designed as at this interface

00:21:03,780 --> 00:21:08,340
for sharing stuff back and forth I

00:21:06,050 --> 00:21:10,830
started working on that thing got

00:21:08,340 --> 00:21:12,690
distracted by the things some someone

00:21:10,830 --> 00:21:16,500
also recently is working on submitting a

00:21:12,690 --> 00:21:17,730
sample sending them at ease back and

00:21:16,500 --> 00:21:20,700
forth through stuff and interface

00:21:17,730 --> 00:21:23,790
they've been submitting that upstream

00:21:20,700 --> 00:21:25,140
kernels ball so ideally be able to

00:21:23,790 --> 00:21:28,890
sensitive back and forth to be able to

00:21:25,140 --> 00:21:30,540
do basic validation of mine and they can

00:21:28,890 --> 00:21:32,990
either run a case off test or anything

00:21:30,540 --> 00:21:32,990
else like that

00:21:36,030 --> 00:21:45,690
okay little ion so yeah so little han

00:21:40,830 --> 00:21:47,910
was in was a name implies it's a library

00:21:45,690 --> 00:21:51,030
for calling I in their faces but having

00:21:47,910 --> 00:21:53,940
probably alcohol directly if this is an

00:21:51,030 --> 00:21:56,640
ALS Kirito this is now that I did for

00:21:53,940 --> 00:21:57,570
the new make the eyes with backwards

00:21:56,640 --> 00:21:59,070
compatibility

00:21:57,570 --> 00:22:03,450
I didn't think inclusion said this is

00:21:59,070 --> 00:22:05,370
one to stay as is training and I think

00:22:03,450 --> 00:22:07,590
the goal should be trying to get to work

00:22:05,370 --> 00:22:10,050
people to Jesus directly and not call

00:22:07,590 --> 00:22:12,660
via actors just because the snakes is

00:22:10,050 --> 00:22:16,190
easier to possibly do cleanup and picks

00:22:12,660 --> 00:22:16,190
up any problems that might come up later

00:22:16,880 --> 00:22:22,050
he's stating so making references to

00:22:20,250 --> 00:22:23,820
move in my enough staging I think the

00:22:22,050 --> 00:22:28,170
answer to what has happen is that happen

00:22:23,820 --> 00:22:30,680
soon but not too soon I wanted to go out

00:22:28,170 --> 00:22:33,960
but not before it's at least been

00:22:30,680 --> 00:22:36,960
reviewed and generally accepted as ready

00:22:33,960 --> 00:22:40,080
and I think the suggested location from

00:22:36,960 --> 00:22:42,870
ecstasy was to have it live under TM a

00:22:40,080 --> 00:22:45,740
box it essentially is an allocation

00:22:42,870 --> 00:22:45,740
framework for

00:22:46,400 --> 00:22:55,099
[Music]

00:22:57,919 --> 00:23:08,460
sable absolutely used in an Android

00:23:02,220 --> 00:23:10,200
release I have to Ikea doc t6 is may be

00:23:08,460 --> 00:23:11,999
the better way do you think thinners

00:23:10,200 --> 00:23:15,840
will use it before they actually move

00:23:11,999 --> 00:23:18,809
their vendor trees to something recent

00:23:15,840 --> 00:23:22,639
or something soon in the future it won't

00:23:18,809 --> 00:23:25,230
work close to they say believe the item

00:23:22,639 --> 00:23:27,809
my hope were to be able to do something

00:23:25,230 --> 00:23:31,950
like use something like my keyboard as

00:23:27,809 --> 00:23:33,929
an example of a prototype for to be able

00:23:31,950 --> 00:23:34,919
to work out some of the details now I

00:23:33,929 --> 00:23:38,539
and this doesn't

00:23:34,919 --> 00:23:41,970
so that doesn't cover all in use cases

00:23:38,539 --> 00:23:44,100
but I'm open to feedback I guess is this

00:23:41,970 --> 00:23:46,559
is are there concerns that it wouldn't

00:23:44,100 --> 00:23:49,700
actually find problems if it's not

00:23:46,559 --> 00:23:49,700
actually an Android or

00:23:53,910 --> 00:24:01,030
well this Brides question originally

00:23:56,280 --> 00:24:03,400
Brian for me I think you've got a good

00:24:01,030 --> 00:24:05,410
plan on the colonel side I want to see

00:24:03,400 --> 00:24:07,510
this get plugged into Android emitters

00:24:05,410 --> 00:24:10,500
suggesting I want to see all clients

00:24:07,510 --> 00:24:10,500
move on

00:24:14,400 --> 00:24:23,530
so the ASP ones I think of oil s big

00:24:20,980 --> 00:24:27,130
banks but at least we'll try to prove

00:24:23,530 --> 00:24:29,140
that an IT leave ion has right now has

00:24:27,130 --> 00:24:59,110
support for both the new interface and

00:24:29,140 --> 00:25:02,559
viewers one and yes so one thing that

00:24:59,110 --> 00:25:07,450
Laura and I try to do is talk to

00:25:02,559 --> 00:25:13,630
different members and see how we can

00:25:07,450 --> 00:25:16,000
help and a few people from different

00:25:13,630 --> 00:25:18,280
members and hopefully we have some

00:25:16,000 --> 00:25:21,690
things that we can add up your so for

00:25:18,280 --> 00:25:26,760
example we the topic about doing

00:25:21,690 --> 00:25:26,760
flushing for subranges that's definitely

00:25:31,350 --> 00:26:02,910
but everyone would

00:26:02,980 --> 00:26:09,800
[Music]

00:26:12,320 --> 00:26:15,410
[Music]

00:26:19,510 --> 00:26:22,680
[Music]

00:26:34,120 --> 00:26:39,680
one good thing at the moment is for 14

00:26:38,240 --> 00:26:41,720
is going to be the next 10 years but

00:26:39,680 --> 00:26:45,740
none of you nothing no one is going to

00:26:41,720 --> 00:26:48,140
ship what device with 14 so we have a

00:26:45,740 --> 00:26:49,730
little bit more time to actually take it

00:26:48,140 --> 00:27:00,890
out of time whatever needs to be changed

00:26:49,730 --> 00:27:03,290
we'll get back 42 for free and I said

00:27:00,890 --> 00:27:05,930
one of my folk system has been trying to

00:27:03,290 --> 00:27:08,600
make ion more palatable to the upstream

00:27:05,930 --> 00:27:11,420
community and at least to me

00:27:08,600 --> 00:27:14,330
make sure those requirements are met and

00:27:11,420 --> 00:27:15,800
I think hopefully again if it said is

00:27:14,330 --> 00:27:19,160
that we can get things Jim they created

00:27:15,800 --> 00:27:20,720
by it upon its workable for for working

00:27:19,160 --> 00:27:22,160
with at least some basic review then

00:27:20,720 --> 00:27:23,750
that will be what people move to where

00:27:22,160 --> 00:27:28,220
hopefully only things that are viewed

00:27:23,750 --> 00:27:30,640
enough that again they'll be some level

00:27:28,220 --> 00:27:33,110
of integration that won't be too great

00:27:30,640 --> 00:27:34,190
one areas I guess they do have concern

00:27:33,110 --> 00:27:35,570
about would be in the fact that we

00:27:34,190 --> 00:27:38,480
haven't played since this would say a

00:27:35,570 --> 00:27:40,280
camera or video data path so and you can

00:27:38,480 --> 00:27:42,230
try and think about a way to be able to

00:27:40,280 --> 00:27:45,400
test those with the new plan same works

00:27:42,230 --> 00:27:49,220
and be able to figure those out because

00:27:45,400 --> 00:27:51,380
while they may not necessarily use so

00:27:49,220 --> 00:27:54,800
many Zion director and other others may

00:27:51,380 --> 00:27:57,170
not they're good so be there so a heavy

00:27:54,800 --> 00:28:00,100
user of buffers that could possibly be

00:27:57,170 --> 00:28:00,100
attacked by this

00:28:09,980 --> 00:28:15,240
what is the applies to help us with

00:28:12,690 --> 00:28:17,280
voluminous security by okay we have

00:28:15,240 --> 00:28:22,740
started working with the it's currently

00:28:17,280 --> 00:28:25,050
based on the base it's Tara I guess we

00:28:22,740 --> 00:28:26,850
need to polish a little bit but you

00:28:25,050 --> 00:28:29,090
would like to move on with it also so

00:28:26,850 --> 00:28:29,090
should we

00:28:31,430 --> 00:28:37,500
yeah okay that's a good question but I

00:28:34,650 --> 00:28:38,730
think the other questions we've had were

00:28:37,500 --> 00:28:41,010
related to secure buffers and

00:28:38,730 --> 00:28:42,060
hypervisors and I think I'd like to

00:28:41,010 --> 00:29:20,670
leave those for the answer there's

00:28:42,060 --> 00:29:25,710
nothing else related to so I think for

00:29:20,670 --> 00:29:30,680
example Alberta mr. C's we have certain

00:29:25,710 --> 00:29:36,270
flags that kind of give a hint about

00:29:30,680 --> 00:29:39,230
what if the secure secure masters you

00:29:36,270 --> 00:29:45,630
could use this buffer and internally be

00:29:39,230 --> 00:29:48,330
translated into a - so I'm guessing

00:29:45,630 --> 00:29:51,630
there would be similar stuff on your end

00:29:48,330 --> 00:29:52,530
- so I think we need to see five or six

00:29:51,630 --> 00:29:53,970
different

00:29:52,530 --> 00:29:56,340
those many five or six is a big

00:29:53,970 --> 00:30:02,730
motivation but leave a few men doesn't

00:29:56,340 --> 00:30:05,030
like how they implement secure and you

00:30:02,730 --> 00:30:05,030
need another

00:30:05,240 --> 00:30:12,150
he piped says it slave site access

00:30:09,540 --> 00:30:25,770
control or or and the keep take this is

00:30:12,150 --> 00:30:27,390
much to say site access control and the

00:30:25,770 --> 00:30:31,740
thing is just trying to figure out the

00:30:27,390 --> 00:30:34,230
iron minced about exactly what what

00:30:31,740 --> 00:30:38,340
you've done a tree that we can try and

00:30:34,230 --> 00:30:41,090
add to I guess a good example is be

00:30:38,340 --> 00:30:43,860
Emily doesn't care about their status to

00:30:41,090 --> 00:30:44,930
for drivers a good where is this book to

00:30:43,860 --> 00:30:47,190
secure to be able to make decisions

00:30:44,930 --> 00:30:50,820
that's come up a couple of times and I

00:30:47,190 --> 00:30:52,980
think the current proposal is to put in

00:30:50,820 --> 00:30:54,810
another field Indiana Buffett flags to

00:30:52,980 --> 00:30:56,280
be able to store information like this

00:30:54,810 --> 00:30:59,340
so that's an example of the type of

00:30:56,280 --> 00:31:01,800
stuff we're looking looking for whether

00:30:59,340 --> 00:31:03,150
it happens within idea what we have in

00:31:01,800 --> 00:31:04,890
the community that I understands that

00:31:03,150 --> 00:31:05,720
for reasons that may not so review

00:31:04,890 --> 00:31:07,490
within

00:31:05,720 --> 00:31:09,470
that they will requirements and missing

00:31:07,490 --> 00:31:11,330
for secured offers I'll be able to

00:31:09,470 --> 00:31:14,780
manage things like start to mentioned

00:31:11,330 --> 00:31:17,500
all the requirements for the various

00:31:14,780 --> 00:31:17,500
secured types

00:31:22,760 --> 00:31:30,840
primarily about using my own name on

00:31:27,120 --> 00:31:34,500
Android or additionally as well so right

00:31:30,840 --> 00:31:36,390
now you're saying like we'll still take

00:31:34,500 --> 00:31:39,180
a couple of forgiveness the more we talk

00:31:36,390 --> 00:31:45,540
of stating it still lives under drivers

00:31:39,180 --> 00:31:48,480
changing Android to be couple Android

00:31:45,540 --> 00:31:52,590
per se I understand it's just semantics

00:31:48,480 --> 00:31:58,500
in the kind of integrity but just in

00:31:52,590 --> 00:32:00,360
terms of location probably not just

00:31:58,500 --> 00:32:04,040
because we're gonna code is the pain and

00:32:00,360 --> 00:32:07,200
I want to move at once and one time only

00:32:04,040 --> 00:32:11,220
even if it is currently not necessarily

00:32:07,200 --> 00:32:13,860
an Android specific framework it's still

00:32:11,220 --> 00:32:16,620
primarily uses Android and so until it

00:32:13,860 --> 00:32:19,110
actually moves out somewhere else I'm

00:32:16,620 --> 00:32:21,030
not really trying to make anyone

00:32:19,110 --> 00:32:22,770
understand that it's kind of weird to be

00:32:21,030 --> 00:32:24,180
teaser for 9:00 a.m. on the east

00:32:22,770 --> 00:32:26,400
casement looks other drivers taking

00:32:24,180 --> 00:32:28,940
Android but moving it twice I think we

00:32:26,400 --> 00:32:28,940
just being

00:32:29,700 --> 00:32:35,530
[Music]

00:32:41,370 --> 00:32:46,590
so I'm trying to understand sure that's

00:32:44,880 --> 00:32:49,350
a tough question when you're talking

00:32:46,590 --> 00:32:51,420
about adding Eve's talking about adding

00:32:49,350 --> 00:32:54,240
heat manager types

00:32:51,420 --> 00:32:56,640
yes instances are going to have as many

00:32:54,240 --> 00:33:00,270
instances of the Gibbon yes you can have

00:32:56,640 --> 00:33:01,740
that was many CMA Pete says here as you

00:33:00,270 --> 00:33:04,520
can support on the system I'm talking

00:33:01,740 --> 00:33:08,960
about attitude types so I don't know

00:33:04,520 --> 00:33:08,960
optimized cat picture heap or something

00:33:11,750 --> 00:33:21,390
so there are limitations yeah I cannot

00:33:18,450 --> 00:33:31,200
find the third edition and an example

00:33:21,390 --> 00:33:32,700
cause of a this is very yes you're

00:33:31,200 --> 00:33:37,050
absolutely right it is completely

00:33:32,700 --> 00:33:38,430
missing this is something I think I was

00:33:37,050 --> 00:33:40,260
looking to do when it moves out of

00:33:38,430 --> 00:33:41,520
staging but I think I've got enough

00:33:40,260 --> 00:33:44,940
requests that I think it needs to happen

00:33:41,520 --> 00:33:46,710
before that so hopefully after once I'm

00:33:44,940 --> 00:33:47,940
done with all this travel I will give

00:33:46,710 --> 00:33:49,620
some time to sit down and write some

00:33:47,940 --> 00:33:52,340
documentation that will probably stick

00:33:49,620 --> 00:33:57,360
it in the existing staging director

00:33:52,340 --> 00:34:03,180
maybe the documentation directory maybe

00:33:57,360 --> 00:34:04,710
we can earn omniscience yeah put it

00:34:03,180 --> 00:34:06,720
somewhere whether it's in this staging

00:34:04,710 --> 00:34:09,390
directory or the proper documentation

00:34:06,720 --> 00:34:12,860
for what's going on and then hopefully

00:34:09,390 --> 00:34:12,860
doesn't make people's lives easier

00:34:14,070 --> 00:34:22,180
so the query API so you had the query

00:34:21,700 --> 00:34:23,680
API

00:34:22,180 --> 00:34:26,590
you didn't really show us the data

00:34:23,680 --> 00:34:29,800
structure of the result but it appeared

00:34:26,590 --> 00:34:32,200
that you're relying on the results to be

00:34:29,800 --> 00:34:35,440
an array of size evidence

00:34:32,200 --> 00:34:39,520
yes can never chain can never expand in

00:34:35,440 --> 00:34:41,800
the future any concern about that the

00:34:39,520 --> 00:34:44,470
way it works is is that this is

00:34:41,800 --> 00:34:47,800
something to be documented is this X you

00:34:44,470 --> 00:34:50,350
first make the query with a null buffer

00:34:47,800 --> 00:34:51,520
will turn back the number of fixed size

00:34:50,350 --> 00:34:54,010
elements you need to actually allocate

00:34:51,520 --> 00:35:00,430
and then you can allocate the buffer

00:34:54,010 --> 00:35:04,360
that way and so it's it's not that you

00:35:00,430 --> 00:35:07,000
can only Saran and I don't think I've

00:35:04,360 --> 00:35:10,870
explained this work thoroughly but it's

00:35:07,000 --> 00:35:13,560
similar to the graphics what was the

00:35:10,870 --> 00:35:13,560
graphics query

00:35:16,070 --> 00:35:21,980
okay well it's similar to an ability in

00:35:19,520 --> 00:35:22,940
graphics that I'm flunking on where you

00:35:21,980 --> 00:35:24,380
know the first barrier to give the

00:35:22,940 --> 00:35:26,210
number of elements that are going to be

00:35:24,380 --> 00:35:28,340
in the array and so you can allocate the

00:35:26,210 --> 00:35:31,100
proper no Thomas music face and then

00:35:28,340 --> 00:35:38,570
pass that down yeah but I'm talking

00:35:31,100 --> 00:35:41,810
about the size I think what he wente

00:35:38,570 --> 00:35:44,930
again gives you is the information about

00:35:41,810 --> 00:35:46,580
the heaps of a specific type not

00:35:44,930 --> 00:35:48,220
necessarily the buffers that are there

00:35:46,580 --> 00:35:53,600
that you

00:35:48,220 --> 00:35:57,460
I'm just wondering if we add oh you mean

00:35:53,600 --> 00:36:00,350
I'm sorry legs or something like that

00:35:57,460 --> 00:36:10,780
do we need to supply more information

00:36:00,350 --> 00:36:10,780
about I mean if this stuff rolling yeah

00:36:16,150 --> 00:36:27,050
I think adding and or just I mean is

00:36:24,740 --> 00:36:31,550
your use case something like you have on

00:36:27,050 --> 00:36:34,640
the flying keeps keeps so let's say that

00:36:31,550 --> 00:36:36,850
you have to system to see me and then

00:36:34,640 --> 00:36:41,180
you will later on expect them to go into

00:36:36,850 --> 00:36:44,210
things that I'm just trying to think of

00:36:41,180 --> 00:36:46,750
a use case where that will change no

00:36:44,210 --> 00:36:49,190
one's like talking about

00:36:46,750 --> 00:36:52,030
[Music]

00:36:49,190 --> 00:36:52,030
okay

00:36:54,040 --> 00:36:57,609
if evolution was something that was just

00:36:56,050 --> 00:36:58,960
that was discussed a little bit in terms

00:36:57,609 --> 00:37:00,730
of whether we should be adding in

00:36:58,960 --> 00:37:02,109
versioning to that and I think the

00:37:00,730 --> 00:37:06,160
conclusion was that evening wasn't

00:37:02,109 --> 00:37:09,160
appropriate and if it's a point where we

00:37:06,160 --> 00:37:10,510
are needing to add in that much more

00:37:09,160 --> 00:37:13,420
information we may very well need to

00:37:10,510 --> 00:37:17,740
just have a separate query opportunities

00:37:13,420 --> 00:37:20,740
along yeah and new ideas are never fun

00:37:17,740 --> 00:37:23,080
but trying to squeeze it at home but I

00:37:20,740 --> 00:37:24,970
will double check on the people on to

00:37:23,080 --> 00:37:27,190
see if we can try and make the existing

00:37:24,970 --> 00:37:32,190
work at all possible for getting more

00:37:27,190 --> 00:37:32,190
information so yeah

00:37:36,150 --> 00:37:46,380
we lists that's meaningless currently

00:37:44,220 --> 00:37:49,950
just a few manless and/or the winner and

00:37:46,380 --> 00:37:52,020
them sick mailing list I'm subscribed of

00:37:49,950 --> 00:37:54,900
the also check felt any novel for

00:37:52,020 --> 00:37:57,780
skirted catches that don't quite make it

00:37:54,900 --> 00:37:59,250
through but preferably the staging and

00:37:57,780 --> 00:38:02,790
enough is because that covers a wide

00:37:59,250 --> 00:38:04,680
variety of things on CC in student and I

00:38:02,790 --> 00:38:07,110
think they also the in routine from

00:38:04,680 --> 00:38:12,650
Google is also listed I'm sure they're

00:38:07,110 --> 00:38:12,650
happy to be in be involved as well also

00:38:15,650 --> 00:38:24,530
so we're there any further questions

00:38:17,690 --> 00:38:25,910
about securities and I think um do you

00:38:24,530 --> 00:38:28,810
want to talk about the high prices where

00:38:25,910 --> 00:38:33,350
you want me to go in keep talking okay

00:38:28,810 --> 00:38:35,330
okay more interesting use case that was

00:38:33,350 --> 00:38:38,590
came up was discussion about ion and

00:38:35,330 --> 00:38:42,550
hypervisors and what exactly that

00:38:38,590 --> 00:38:44,780
involves I guess there is some some

00:38:42,550 --> 00:38:46,310
discussion of her partner's about what

00:38:44,780 --> 00:38:49,520
exactly that means because it sounds

00:38:46,310 --> 00:38:50,900
like buffers may need to be allocated

00:38:49,520 --> 00:38:53,150
differently if it's in a hypervisor

00:38:50,900 --> 00:38:55,220
versus not in the hypervisor so there's

00:38:53,150 --> 00:38:58,340
a question about what if anything is

00:38:55,220 --> 00:39:00,050
sure long do related to that this is new

00:38:58,340 --> 00:39:01,730
requirements that I just heard about

00:39:00,050 --> 00:39:03,650
today so I don't know whole lot which is

00:39:01,730 --> 00:39:06,070
why I'm hoping it gets feedback from

00:39:03,650 --> 00:39:08,210
last session if anyone has heard of

00:39:06,070 --> 00:39:11,420
information about my high prices and

00:39:08,210 --> 00:39:15,170
would like to share stories about how I

00:39:11,420 --> 00:39:23,120
can be improved for this case did you

00:39:15,170 --> 00:39:31,160
want to talk about the since you have

00:39:23,120 --> 00:39:32,470
seen who knows that that he applications

00:39:31,160 --> 00:39:35,120
[Music]

00:39:32,470 --> 00:39:38,960
the system might not be visible on

00:39:35,120 --> 00:39:39,990
device but the same code should also

00:39:38,960 --> 00:39:43,830
understand

00:39:39,990 --> 00:39:45,599
not regular platform where the system

00:39:43,830 --> 00:39:49,020
could be available so the user space

00:39:45,599 --> 00:39:51,560
needs to be a bit level - you know first

00:39:49,020 --> 00:39:59,070
try out system dependent all that -

00:39:51,560 --> 00:40:02,310
whatever it is but this stools like more

00:39:59,070 --> 00:40:07,680
of a early stages of implementation

00:40:02,310 --> 00:40:15,150
would eventually even even on high

00:40:07,680 --> 00:40:20,520
provides to use the system you're in

00:40:15,150 --> 00:40:22,349
visiting a manager that when you asked

00:40:20,520 --> 00:40:24,630
it to allocate it makes a hypervisor

00:40:22,349 --> 00:40:29,490
call that actually gets the memory from

00:40:24,630 --> 00:40:32,910
the hypervisor and programs the under

00:40:29,490 --> 00:40:38,160
pinning tables to give that to the guest

00:40:32,910 --> 00:40:41,070
so if you have you're not you keeping

00:40:38,160 --> 00:40:47,430
the memory away from the guest until

00:40:41,070 --> 00:40:50,300
it's actually being allocated so this is

00:40:47,430 --> 00:40:53,730
an awesome approach would would have

00:40:50,300 --> 00:40:56,550
seen is that this is one carve out

00:40:53,730 --> 00:41:01,350
region that is complete gets completely

00:40:56,550 --> 00:41:03,020
separate from all the guest voices and

00:41:01,350 --> 00:41:05,849
[Music]

00:41:03,020 --> 00:41:09,900
but we want to use I mean we want to use

00:41:05,849 --> 00:41:13,170
the same Android users based on the

00:41:09,900 --> 00:41:15,720
hypervisor Perkins and those those

00:41:13,170 --> 00:41:18,510
applications originally used the system

00:41:15,720 --> 00:41:20,730
diamond but now you have to fall back to

00:41:18,510 --> 00:41:21,360
the god I mean I'm not sure if I

00:41:20,730 --> 00:41:28,210
understood

00:41:21,360 --> 00:41:34,580
[Music]

00:41:28,210 --> 00:41:36,170
differentiation so one thing I was

00:41:34,580 --> 00:41:39,740
thinking about with really - this is us

00:41:36,170 --> 00:41:41,960
I was kind of moved towards specifying

00:41:39,740 --> 00:41:44,660
what's available versus just enumerating

00:41:41,960 --> 00:41:46,250
what all is available what all memory is

00:41:44,660 --> 00:41:47,990
available in system for example right

00:41:46,250 --> 00:41:49,940
now if you turn on the K config it just

00:41:47,990 --> 00:41:52,340
spits out these system and system can

00:41:49,940 --> 00:41:55,070
take a heap and enumerates all see they

00:41:52,340 --> 00:41:59,330
all seem a regions available for

00:41:55,070 --> 00:42:01,790
allocation I guess with the model of

00:41:59,330 --> 00:42:04,460
being proposes then how does this

00:42:01,790 --> 00:42:07,880
topology change when it's in a

00:42:04,460 --> 00:42:11,740
hypervisor and have yours suppose that's

00:42:07,880 --> 00:42:14,600
an extreme is neither also talking about

00:42:11,740 --> 00:42:17,330
is this just as the enterprise actually

00:42:14,600 --> 00:42:18,670
sold us all I mean just because they're

00:42:17,330 --> 00:42:21,260
the ones who've done much more with

00:42:18,670 --> 00:42:22,850
virtualization I I imagine the answer is

00:42:21,260 --> 00:42:26,390
that yes because they do something more

00:42:22,850 --> 00:42:28,700
like a PR but this also kind of gets

00:42:26,390 --> 00:42:30,170
tricky in that there's been a lot of

00:42:28,700 --> 00:42:32,480
respect in terms but anything related to

00:42:30,170 --> 00:42:36,710
plan and device tree so we don't

00:42:32,480 --> 00:42:39,080
actually have device trees stuff for

00:42:36,710 --> 00:42:41,240
island then where is client potentially

00:42:39,080 --> 00:42:43,670
getting this information or I guess

00:42:41,240 --> 00:42:45,080
whereas the worst hypervisor even

00:42:43,670 --> 00:42:48,590
getting this topology information to be

00:42:45,080 --> 00:42:50,330
able to say that it comes from so this

00:42:48,590 --> 00:42:52,720
is sort of open questions to try and

00:42:50,330 --> 00:42:52,720
think about

00:42:54,430 --> 00:42:59,890
it's anybody you see ma on a CPM system

00:43:00,040 --> 00:43:07,340
anything I guess it's all he can do all

00:43:03,440 --> 00:43:10,790
through the command on eliminating CNA

00:43:07,340 --> 00:43:12,590
is enable along a CPI other HCBS system

00:43:10,790 --> 00:43:14,330
just for backing for a regular driver

00:43:12,590 --> 00:43:19,170
storage but it's just not healthy if

00:43:14,330 --> 00:43:22,269
you're buying themselves SPSA require

00:43:19,170 --> 00:43:22,269
[Music]

00:43:39,290 --> 00:43:45,470
yeah so I think that was really all we

00:43:43,010 --> 00:43:48,940
had so now it's just open for any

00:43:45,470 --> 00:43:48,940
additional questions or comments

00:43:54,539 --> 00:43:58,260
Thanks thank you

00:44:02,480 --> 00:44:07,449

YouTube URL: https://www.youtube.com/watch?v=jkeFoqbEMJQ


