Title: The Purpose of QEMU Emulation - SFO17-106
Publication date: 2017-09-29
Playlist: Linaro Connect San Francisco 2017
Description: 
	Session ID: SFO17-106
Session Name: The Purpose of QEMU Emulation - SFO17-106
Speaker: Christoffer Dall

Track: Virtualization


★ Session Summary ★
One of the key features of QEMU is the ability to emulate foreign computer architectures. This means, for example, that you can run your favorite ARM binaries and system images on your x86 laptop or server. QEMU is used a key tool for engineers and test infrastructure across both ARM and x86 ecosystems, and is also the basis of the Android emulator. QEMU’s emulation features is also used for system modeling in some scenarios. In this session we will present what QEMU currently does well as an emulator, and what the QEMU project has deliberately deemed as out-of-scope. We will also discuss future avenues that could be pursued to further improve capabilities of QEMU emulation, such as adding support for new architecture features, and support writing device emulation in a higher level language than C. We encourage the audience to provide user stories of QEMU from Linaro member companies to help direct our efforts.
---------------------------------------------------
★ Resources ★
Event Page: http://connect.linaro.org/resource/sfo17/sfo17-106/
Presentation: https://www.slideshare.net/linaroorg/mincs-the-container-in-the-shell-script-sfo17105
Video: 
 ---------------------------------------------------

★ Event Details ★
Linaro Connect San Francisco 2017 (SFO17)
25-29 September 2017
Hyatt Regency San Francisco Airport

---------------------------------------------------
Keyword: 
'http://www.linaro.org'
'http://connect.linaro.org'
---------------------------------------------------
Follow us on Social Media
https://www.facebook.com/LinaroOrg
https://twitter.com/linaroorg
https://www.youtube.com/user/linaroorg?sub_confirmation=1
https://www.linkedin.com/company/1026961
Captions: 
	00:00:00,120 --> 00:00:04,060
[Music]

00:00:08,910 --> 00:00:12,320
[Music]

00:00:14,129 --> 00:00:20,610
so this is the next recession not

00:00:21,000 --> 00:00:31,750
actually my best represent the coldest

00:00:24,369 --> 00:00:33,160
but so the idea here to talk about why

00:00:31,750 --> 00:00:34,809
you do better in relation at all right

00:00:33,160 --> 00:00:38,829
so we've seen an example of that's B

00:00:34,809 --> 00:00:40,300
before but this came out of a sort of

00:00:38,829 --> 00:00:42,070
soul-searching that you can use music

00:00:40,300 --> 00:00:43,960
and doing saying what is it that they

00:00:42,070 --> 00:00:46,570
should be doing with their limited

00:00:43,960 --> 00:00:48,280
resources given all the random bit

00:00:46,570 --> 00:00:49,989
wishes the common law clerk gave you and

00:00:48,280 --> 00:00:51,219
so there's an intricate process of

00:00:49,989 --> 00:00:55,149
trying to figure out what are the most

00:00:51,219 --> 00:00:58,089
important things to work on okay and

00:00:55,149 --> 00:00:59,739
Genaro has 3 by 4 mu engineers so we

00:00:58,089 --> 00:01:01,960
figured that which is at least to figure

00:00:59,739 --> 00:01:05,680
out what the Narrows members are

00:01:01,960 --> 00:01:08,100
interested in work on so we've been

00:01:05,680 --> 00:01:10,990
talking to sort of management leaders

00:01:08,100 --> 00:01:13,570
and trying to get feedback from our

00:01:10,990 --> 00:01:15,400
members at that level but basically

00:01:13,570 --> 00:01:17,650
we're gonna ask the same questions here

00:01:15,400 --> 00:01:19,540
is hope that that I engineering level we

00:01:17,650 --> 00:01:22,600
get a little feedback about how I'm here

00:01:19,540 --> 00:01:25,570
to actually use so if you don't have

00:01:22,600 --> 00:01:27,700
answers ready for us now we probably go

00:01:25,570 --> 00:01:29,470
back to your member companies and your

00:01:27,700 --> 00:01:33,240
friends and your colleagues talk about

00:01:29,470 --> 00:01:38,200
this and come back to us with wish lists

00:01:33,240 --> 00:01:41,470
so brief overview is so genuine has

00:01:38,200 --> 00:01:42,940
three main roles it does assisted

00:01:41,470 --> 00:01:44,830
emulation so that's where you want to

00:01:42,940 --> 00:01:48,580
emulate a specific part of our platform

00:01:44,830 --> 00:01:50,050
the full the full architecture you

00:01:48,580 --> 00:01:51,550
emulate the full systems you can run a

00:01:50,050 --> 00:01:52,270
foreign kernel and application support

00:01:51,550 --> 00:01:55,810
family

00:01:52,270 --> 00:01:57,250
lady Raspberry Pi Linux at 6 server and

00:01:55,810 --> 00:01:58,899
that's also was useless to basically

00:01:57,250 --> 00:02:02,880
Android emulator and today who will

00:01:58,899 --> 00:02:02,880
actually emerges

00:02:06,119 --> 00:02:11,789
Jenny also does usual emulation where

00:02:08,560 --> 00:02:11,789
you run just a single binary

00:02:17,160 --> 00:02:21,580
my example is running a native AF its

00:02:19,959 --> 00:02:24,160
fortunes you see on your exit states

00:02:21,580 --> 00:02:26,920
develop a bathtub and finally cameo is

00:02:24,160 --> 00:02:37,269
also a driver for running a VM yes and

00:02:26,920 --> 00:02:40,480
that's really out of the scope so why do

00:02:37,269 --> 00:02:43,269
you come you emulation well it's a one

00:02:40,480 --> 00:02:45,700
cup pub we use case is for suckers for

00:02:43,269 --> 00:02:46,780
testing things alright so in terms a lot

00:02:45,700 --> 00:02:49,319
of guys will talk about the physical

00:02:46,780 --> 00:02:54,040
system running and managing a more farm

00:02:49,319 --> 00:02:56,470
so running just running jobs on an x86

00:02:54,040 --> 00:02:59,350
server arms it's for emergencies qmu is

00:02:56,470 --> 00:03:01,359
intractable transit can you can be a

00:02:59,350 --> 00:03:03,100
very powerful deep environment single

00:03:01,359 --> 00:03:05,950
sector kernels without having expensive

00:03:03,100 --> 00:03:07,420
debugging hardware use fancy

00:03:05,950 --> 00:03:13,989
introspection interesting features you

00:03:07,420 --> 00:03:15,549
can use stuff like reverse execution can

00:03:13,989 --> 00:03:18,299
use publicly used for cross compilation

00:03:15,549 --> 00:03:23,950
for targets that are due to the compiler

00:03:18,299 --> 00:03:27,569
and it's also used by some companies for

00:03:23,950 --> 00:03:30,900
system up right to the designing systems

00:03:27,569 --> 00:03:34,000
that use offenders

00:03:30,900 --> 00:03:37,299
so what's sort of currently out of scope

00:03:34,000 --> 00:03:40,359
for emulation is cycle a quick

00:03:37,299 --> 00:03:44,109
simulation having some sort of

00:03:40,359 --> 00:03:45,940
verification that mu is compliant with

00:03:44,109 --> 00:03:50,919
the architecture it's a best-effort

00:03:45,940 --> 00:03:51,880
approach really if it's I'm talking

00:03:50,919 --> 00:03:55,890
about trying to make you any more

00:03:51,880 --> 00:03:57,090
modular but the current

00:03:55,890 --> 00:04:02,490
and believes that there are federal

00:03:57,090 --> 00:04:08,850
trances doing that like systemc for

00:04:02,490 --> 00:04:10,620
example and there are 30 biologists it's

00:04:08,850 --> 00:04:11,970
been sometimes asked at Lennar why would

00:04:10,620 --> 00:04:12,990
we emulate this board of that board of

00:04:11,970 --> 00:04:14,610
this server

00:04:12,990 --> 00:04:16,890
and the answer is that that's really

00:04:14,610 --> 00:04:19,799
hard that's a lot of work so we don't

00:04:16,890 --> 00:04:22,079
try to say and every single board that's

00:04:19,799 --> 00:04:24,210
out there so we try to choose a

00:04:22,079 --> 00:04:26,070
representative or four you can use for

00:04:24,210 --> 00:04:30,660
your main use cases but that being said

00:04:26,070 --> 00:04:32,310
once like this full real system and

00:04:30,660 --> 00:04:35,160
there are talks of our template living a

00:04:32,310 --> 00:04:41,190
full a full service system but currently

00:04:35,160 --> 00:04:42,150
that's not something that working on and

00:04:41,190 --> 00:04:44,220
the you see people were talking about

00:04:42,150 --> 00:04:45,800
using mu for failure and native

00:04:44,220 --> 00:04:48,330
performance

00:04:45,800 --> 00:04:50,010
tiny embedded targets

00:04:48,330 --> 00:04:52,340
that's the mostly not rated issue

00:04:50,010 --> 00:04:57,090
anymore when you can stop a powerful

00:04:52,340 --> 00:04:58,590
hardware so some of the potential future

00:04:57,090 --> 00:04:59,910
work that we do have a plan that that we

00:04:58,590 --> 00:05:01,440
have in Scoville in ours that we wanted

00:04:59,910 --> 00:05:04,979
to try to do a better job of sort of

00:05:01,440 --> 00:05:07,229
keeping with architecture tips from arm

00:05:04,979 --> 00:05:08,520
so we've already seen with this ve that

00:05:07,229 --> 00:05:10,710
was a problem that we were agreed

00:05:08,520 --> 00:05:12,150
up-to-date with the record set of

00:05:10,710 --> 00:05:16,680
features from earlier versions of the

00:05:12,150 --> 00:05:18,450
architecture and you know when a s4 came

00:05:16,680 --> 00:05:20,400
along there was also at this point where

00:05:18,450 --> 00:05:23,160
it was very important to get mu done

00:05:20,400 --> 00:05:26,250
pretty quickly and Melissa said oh

00:05:23,160 --> 00:05:27,570
there's a challenge so if you want to

00:05:26,250 --> 00:05:30,090
support the use case itself running for

00:05:27,570 --> 00:05:31,440
example CI lose for hardware that you

00:05:30,090 --> 00:05:32,070
don't have yet or that's very hard to

00:05:31,440 --> 00:05:33,720
come by

00:05:32,070 --> 00:05:35,790
that whole points losses you don't

00:05:33,720 --> 00:05:37,470
emulator recent architectural features

00:05:35,790 --> 00:05:39,270
so that's definitely some of the things

00:05:37,470 --> 00:05:41,280
that were that we're trying to do the

00:05:39,270 --> 00:05:43,300
best mechanics

00:05:41,280 --> 00:05:45,010
there's some example of the stuff that

00:05:43,300 --> 00:05:46,450
we're not that we don't have yet

00:05:45,010 --> 00:05:48,790
all right I'm not gonna list all of them

00:05:46,450 --> 00:05:50,650
but there's a whole range of our being

00:05:48,790 --> 00:05:52,930
from one features obvious to features

00:05:50,650 --> 00:05:55,630
and are we eight point three feature was

00:05:52,930 --> 00:05:57,040
that that we simply don't doing it I'm

00:05:55,630 --> 00:06:01,090
sure it's not these people come back and

00:05:57,040 --> 00:06:02,470
and find us at some point right so for

00:06:01,090 --> 00:06:04,750
all of you if you know already by

00:06:02,470 --> 00:06:07,570
looking at these slides potentially

00:06:04,750 --> 00:06:11,520
offline save you know that that thing is

00:06:07,570 --> 00:06:11,520
gonna be a problem for us sumo ready

00:06:15,090 --> 00:06:21,490
[Music]

00:06:17,940 --> 00:06:25,560
yeah so there's been some work on the

00:06:21,490 --> 00:06:27,729
list improve the use of gravity

00:06:25,560 --> 00:06:30,310
instrumenting your system so obviously

00:06:27,729 --> 00:06:31,690
the dynamic translator you've got a

00:06:30,310 --> 00:06:33,280
completely tralala system you can do

00:06:31,690 --> 00:06:37,090
some quite interesting tension to do

00:06:33,280 --> 00:06:41,760
some quite interesting things so at the

00:06:37,090 --> 00:06:43,810
moment we have a simple recorder play

00:06:41,760 --> 00:06:46,330
supported so he can boot up a system

00:06:43,810 --> 00:06:48,580
with cordial trace and replay it back

00:06:46,330 --> 00:06:52,800
and that can be extended to do things

00:06:48,580 --> 00:06:55,210
like reverse debugging a previous time

00:06:52,800 --> 00:06:57,580
but there would be options for example

00:06:55,210 --> 00:07:01,300
one that I'd be quite interested in

00:06:57,580 --> 00:07:02,860
doing is adding a thread sanitizer is

00:07:01,300 --> 00:07:05,050
obviously we can instrument every single

00:07:02,860 --> 00:07:06,750
low in the store and we can do the same

00:07:05,050 --> 00:07:11,050
sort of thing as the thread sanitizer on

00:07:06,750 --> 00:07:14,410
GCC in LBN and trying to detect races in

00:07:11,050 --> 00:07:16,980
assistive innovation but at the moment

00:07:14,410 --> 00:07:20,340
this is all in an embryonic stage

00:07:16,980 --> 00:07:22,440
come up with a good solid API that is

00:07:20,340 --> 00:07:25,140
going to be flexibly enough but also not

00:07:22,440 --> 00:07:44,100
exposed to my intervals and he does

00:07:25,140 --> 00:07:45,930
things so if anyone has a user

00:07:44,100 --> 00:07:49,830
motivation support it used to be that up

00:07:45,930 --> 00:07:51,840
listen up in a pretty bad state there

00:07:49,830 --> 00:07:53,520
are a lot of work on that says and it's

00:07:51,840 --> 00:07:55,140
a lot better now than it was a few years

00:07:53,520 --> 00:07:57,510
back but there are still things that

00:07:55,140 --> 00:07:58,860
don't work like running really complex

00:07:57,510 --> 00:07:59,630
large multi-threaded applications like

00:07:58,860 --> 00:08:03,320
nodejs

00:07:59,630 --> 00:08:05,880
we don't see a lot of requests for that

00:08:03,320 --> 00:08:08,280
continuously but if that is the case

00:08:05,880 --> 00:08:09,860
that causing actual problem for people

00:08:08,280 --> 00:08:12,450
we want to hear about it

00:08:09,860 --> 00:08:13,950
you know we also don't for things like

00:08:12,450 --> 00:08:16,530
video so which would have to be added

00:08:13,950 --> 00:08:22,040
and we don't do things like support it's

00:08:16,530 --> 00:08:23,760
like supporting a record or play so

00:08:22,040 --> 00:08:25,620
there's also stuff that's not

00:08:23,760 --> 00:08:28,380
necessarily arm specific that the canoe

00:08:25,620 --> 00:08:30,870
project could really need and we are

00:08:28,380 --> 00:08:32,460
trying to dedicate some some of our

00:08:30,870 --> 00:08:35,280
resources on efforts towards on these

00:08:32,460 --> 00:08:37,190
goals that's just to let people know

00:08:35,280 --> 00:08:40,349
that that's something we're doing

00:08:37,190 --> 00:08:41,729
so there's documentation improvements

00:08:40,349 --> 00:08:45,450
not just writing documentation which is

00:08:41,729 --> 00:08:47,340
certainly also but also having the

00:08:45,450 --> 00:08:49,440
proper infrastructure for creating

00:08:47,340 --> 00:08:58,110
documentation I think some work we've

00:08:49,440 --> 00:09:00,990
been going on somehow support writing

00:08:58,110 --> 00:09:02,400
device models sometimes and see that

00:09:00,990 --> 00:09:05,240
makes it easier to write device model

00:09:02,400 --> 00:09:05,240
it's been flocking to support

00:09:06,090 --> 00:09:12,150
sometimes born multi-station

00:09:10,320 --> 00:09:14,490
so right now you pretty much compiled a

00:09:12,150 --> 00:09:16,950
penny as one big chunk so having a

00:09:14,490 --> 00:09:20,880
easier way to say I only want to include

00:09:16,950 --> 00:09:23,070
these smaller bits and finally there's a

00:09:20,880 --> 00:09:27,000
lot of potential v network to get rid of

00:09:23,070 --> 00:09:29,930
unused or undocumented code 19 code and

00:09:27,000 --> 00:09:33,150
getting great about beta documentation

00:09:29,930 --> 00:09:35,400
so that's actually all that we have and

00:09:33,150 --> 00:09:38,280
that make sense because we want to hear

00:09:35,400 --> 00:09:39,810
from from you so I hope anybody has some

00:09:38,280 --> 00:09:41,520
stories of stuff they wish they could do

00:09:39,810 --> 00:09:43,350
with getting you or that they already do

00:09:41,520 --> 00:09:45,870
very successfully and that that's very

00:09:43,350 --> 00:09:48,260
important for that or any other

00:09:45,870 --> 00:09:48,260
questions

00:09:54,880 --> 00:09:59,050
this is somewhat Venetia use case but

00:09:57,370 --> 00:10:02,519
that's one of the things that lots of

00:09:59,050 --> 00:10:04,480
time if we're testing up or cortex-m

00:10:02,519 --> 00:10:06,880
typically you know that small projects

00:10:04,480 --> 00:10:10,630
where you have to use the simulation all

00:10:06,880 --> 00:10:13,389
the way down and quite often if it's a

00:10:10,630 --> 00:10:14,380
compiler targeted you like to test

00:10:13,389 --> 00:10:15,970
something that probably wouldn't

00:10:14,380 --> 00:10:18,220
normally rather than the cortex-m device

00:10:15,970 --> 00:10:20,949
and when this probably got printf is

00:10:18,220 --> 00:10:24,480
probably trying to do some other things

00:10:20,949 --> 00:10:27,160
that regulate to give me mr. hosteen

00:10:24,480 --> 00:10:29,860
trying to claim you for that and have

00:10:27,160 --> 00:10:31,870
rather a long slog to try and find the

00:10:29,860 --> 00:10:34,899
signal device model trying to get the

00:10:31,870 --> 00:10:36,970
many months it was considerably more of

00:10:34,899 --> 00:10:39,459
a struggle than it was for say trying to

00:10:36,970 --> 00:10:41,769
just get in a class things work

00:10:39,459 --> 00:10:46,560
so what potential thing again a very

00:10:41,769 --> 00:10:50,949
very nice will be great some kind of

00:10:46,560 --> 00:10:54,910
virtual cortex and the semi hosting that

00:10:50,949 --> 00:10:56,500
you could say okay I guess look wigglies

00:10:54,910 --> 00:10:57,940
up the visible there's no cortex m0

00:10:56,500 --> 00:10:59,680
modernist cortex m3

00:10:57,940 --> 00:11:02,079
yes names people wrote all the code that

00:10:59,680 --> 00:11:03,310
you can open that zero but if a compiler

00:11:02,079 --> 00:11:04,870
target even one of the things you want

00:11:03,310 --> 00:11:06,880
to check is though I haven't stuck in

00:11:04,870 --> 00:11:09,279
that instruction in the doesn't exist on

00:11:06,880 --> 00:11:11,949
m0 yeah that's just some suggestions on

00:11:09,279 --> 00:11:15,569
that one again a lot of work probably

00:11:11,949 --> 00:11:15,569
for very few people that

00:11:22,040 --> 00:11:31,220
oh yeah by your eyes at North it's not

00:11:28,610 --> 00:11:37,100
something we've done yet it's one of

00:11:31,220 --> 00:11:38,690
those things this didn't anyone how much

00:11:37,100 --> 00:11:41,600
free pie together that's definitely

00:11:38,690 --> 00:11:44,029
useful thing because if it mostly it

00:11:41,600 --> 00:11:51,310
should just be a case of eternal from

00:11:44,029 --> 00:11:53,750
this testing is a bit tricky because you

00:11:51,310 --> 00:11:57,110
changing the you have speed don't do

00:11:53,750 --> 00:12:01,490
something that'll change he's doing

00:11:57,110 --> 00:12:02,779
they universal community to I do think

00:12:01,490 --> 00:12:05,269
that some of the kind of issues you have

00:12:02,779 --> 00:12:08,449
what will because the way that the GCC

00:12:05,269 --> 00:12:11,329
testing is trying to use user space boy

00:12:08,449 --> 00:12:13,910
that's with them I follow CPU is a bit

00:12:11,329 --> 00:12:19,180
weird because my products is a profile

00:12:13,910 --> 00:12:19,180
when you'll say my profile

00:12:28,680 --> 00:12:34,550
all right I've got one

00:12:31,670 --> 00:12:37,970
it's too quiet so we we talked recently

00:12:34,550 --> 00:12:39,680
about Enterprise models right it's worth

00:12:37,970 --> 00:12:45,500
bringing up because a group of people

00:12:39,680 --> 00:12:48,050
here a lot of the distros today are

00:12:45,500 --> 00:12:50,089
carrying their own I'm talking more here

00:12:48,050 --> 00:12:54,220
I'm curious the backend the kV at once

00:12:50,089 --> 00:12:57,110
so I figure it's relevant so we we have

00:12:54,220 --> 00:12:59,690
kind of a couple of core models defined

00:12:57,110 --> 00:13:02,750
in Q mu and the distro says there's a

00:12:59,690 --> 00:13:04,730
realm 7 - whatever qme model for

00:13:02,750 --> 00:13:06,560
everybody Sorrell it's a little bit

00:13:04,730 --> 00:13:09,709
different from the standard one so the

00:13:06,560 --> 00:13:12,500
other distros whatever the latest have

00:13:09,709 --> 00:13:16,459
been to his testicle thing I'm not

00:13:12,500 --> 00:13:19,760
really new releases but everyone has

00:13:16,459 --> 00:13:21,920
their own right and I think you said at

00:13:19,760 --> 00:13:23,149
some point about unifying and then

00:13:21,920 --> 00:13:25,430
having some kind of effort to go to

00:13:23,149 --> 00:13:28,120
clean up the enterprise models so I'm

00:13:25,430 --> 00:13:40,820
kicking you with how to bring up

00:13:28,120 --> 00:13:44,630
standardizing a model if you want we

00:13:40,820 --> 00:13:46,070
should you bring up well what I've been

00:13:44,630 --> 00:13:47,300
talking about before is that I feel like

00:13:46,070 --> 00:13:49,579
it's a shame that we don't do a better

00:13:47,300 --> 00:13:51,980
job of emulating a really good standards

00:13:49,579 --> 00:13:53,000
compliance services within qmu and it

00:13:51,980 --> 00:13:56,120
seems to be that there's a lot of people

00:13:53,000 --> 00:13:58,480
get that form integration wrong unarmed

00:13:56,120 --> 00:14:01,220
and that's a shame for service systems

00:13:58,480 --> 00:14:06,040
like doing that um you could be a good

00:14:01,220 --> 00:14:06,040
reference platform it's not great

00:14:06,990 --> 00:14:11,130
it's a lot of work right so I think the

00:14:08,970 --> 00:14:13,560
from the leg grooves on you what they've

00:14:11,130 --> 00:14:16,290
been wanting is to say okay let's

00:14:13,560 --> 00:14:17,850
emulate a full system that has a control

00:14:16,290 --> 00:14:20,160
processor and all that so that you can

00:14:17,850 --> 00:14:22,640
have and that is a base board there

00:14:20,160 --> 00:14:24,770
there see on development of things like

00:14:22,640 --> 00:14:31,290
[Music]

00:14:24,770 --> 00:14:36,120
u5e cam that works correctly yes but I

00:14:31,290 --> 00:14:39,330
think sort of a general model for this

00:14:36,120 --> 00:14:40,680
and see where you know how you need to

00:14:39,330 --> 00:14:42,210
integrate these things not that

00:14:40,680 --> 00:14:57,240
everybody would follow that or that they

00:14:42,210 --> 00:15:06,540
should necessarily anybody else care

00:14:57,240 --> 00:15:08,790
about that or is it just maybe because

00:15:06,540 --> 00:15:12,870
it is wrong it would require each

00:15:08,790 --> 00:15:14,370
other's I think we but kinda gradually

00:15:12,870 --> 00:15:18,050
going in that direction because I think

00:15:14,370 --> 00:15:18,050
when we first started talking about this

00:15:29,960 --> 00:15:38,130
was that there's what we feel is do have

00:15:33,150 --> 00:15:40,620
we do have three 90s in the right place

00:15:38,130 --> 00:15:42,630
and SMU patches on the list so some of

00:15:40,620 --> 00:15:45,780
these big mobs that walked in the habit

00:15:42,630 --> 00:15:47,280
period besides a set amount of work

00:15:45,780 --> 00:15:51,750
would be instituted put that together

00:15:47,280 --> 00:15:52,910
really as device platforms games so in

00:15:51,750 --> 00:15:54,770
that sense one way

00:15:52,910 --> 00:15:56,330
or to look at that against a wall we've

00:15:54,770 --> 00:15:58,160
got a lot of places out so is it worth

00:15:56,330 --> 00:16:00,140
putting in that lasts a lot of effort to

00:15:58,160 --> 00:16:02,530
give you something that's actually what

00:16:00,140 --> 00:16:02,530
you asked for

00:16:09,520 --> 00:16:16,720
des be having any effort in ready to

00:16:13,250 --> 00:16:18,980
generate more tales

00:16:16,720 --> 00:16:23,330
so apart from megawatt does it

00:16:18,980 --> 00:16:25,550
completely right generate ADT Fort

00:16:23,330 --> 00:16:28,250
immortal but it's their social forming

00:16:25,550 --> 00:16:30,860
but we do it for other models that if

00:16:28,250 --> 00:16:32,480
you pick one of the platforms there then

00:16:30,860 --> 00:16:35,540
you have to provide your key key for

00:16:32,480 --> 00:16:57,560
instance writing and wouldn't be nice at

00:16:35,540 --> 00:16:59,510
the Cuban I mean because the VP does so

00:16:57,560 --> 00:17:03,260
but the BTB is a description to form

00:16:59,510 --> 00:17:06,370
companies which is not quite the same

00:17:03,260 --> 00:17:10,630
thing as what queries about the hardware

00:17:06,370 --> 00:17:13,459
by suppose subsets of hardware really is

00:17:10,630 --> 00:17:15,050
so the emotion coming that's taken so

00:17:13,459 --> 00:17:16,850
far is basically divide everything into

00:17:15,050 --> 00:17:19,730
two types of groups so those things

00:17:16,850 --> 00:17:21,860
which represent real Hardware where the

00:17:19,730 --> 00:17:24,800
idea in code view is if we say this

00:17:21,860 --> 00:17:26,810
versatile expressive board they it looks

00:17:24,800 --> 00:17:27,829
like a versatile express board and in

00:17:26,810 --> 00:17:30,020
the same way that if you have a

00:17:27,829 --> 00:17:34,130
versatile expressed piece of hardware it

00:17:30,020 --> 00:17:36,710
doesn't kind of cover the DTP tag

00:17:34,130 --> 00:17:39,260
attached that needs to be you provide it

00:17:36,710 --> 00:17:41,450
with the your code so you should do the

00:17:39,260 --> 00:17:43,640
same thing with chrome you the second

00:17:41,450 --> 00:17:46,010
category is basically just has the third

00:17:43,640 --> 00:17:49,070
board in it because that is a purely

00:17:46,010 --> 00:17:52,610
virtual construct and therefore we know

00:17:49,070 --> 00:17:54,020
what's in it we know that all the

00:17:52,610 --> 00:17:56,809
devices in it

00:17:54,020 --> 00:17:58,300
really genuinely the closely packed was

00:17:56,809 --> 00:18:01,100
possible with it's deceiving

00:17:58,300 --> 00:18:02,750
representation so we can say all

00:18:01,100 --> 00:18:04,790
constructed easily it certainly that

00:18:02,750 --> 00:18:08,270
matches with our way that we've just

00:18:04,790 --> 00:18:10,250
created so you do want at least two

00:18:08,270 --> 00:18:12,980
different categories but there is a

00:18:10,250 --> 00:18:14,150
conceptual Russian although and what we

00:18:12,980 --> 00:18:18,290
do to see differently

00:18:14,150 --> 00:18:19,940
I mean what you said normally if you

00:18:18,290 --> 00:18:22,100
have a real platform you have any key

00:18:19,940 --> 00:18:24,679
which is true for other platforms that's

00:18:22,100 --> 00:18:26,900
not the case so they do get what you

00:18:24,679 --> 00:18:28,940
teach you have for say caveat and the

00:18:26,900 --> 00:18:36,559
kernel it's very little actual thing is

00:18:28,940 --> 00:18:39,280
much more my dear geeky and also the

00:18:36,559 --> 00:18:39,280
really

00:18:46,320 --> 00:18:53,000
we can't say you can't say oh yeah but

00:18:53,640 --> 00:18:56,729
[Music]

00:19:05,000 --> 00:19:15,180
so I said the hardware is a bit

00:19:07,320 --> 00:19:17,130
different because the idea is you still

00:19:15,180 --> 00:19:19,980
need to provide some experiment

00:19:17,130 --> 00:19:27,450
information right place so for the third

00:19:19,980 --> 00:19:31,140
thought we do that yeah any other odd

00:19:27,450 --> 00:19:43,320
way if you want to their money forms

00:19:31,140 --> 00:19:45,810
then it would be that maybe not easily

00:19:43,320 --> 00:19:47,370
available ideally develop many ships it

00:19:45,810 --> 00:19:51,180
doesn't need to be open source

00:19:47,370 --> 00:19:52,800
necessarily PR tables come as a block or

00:19:51,180 --> 00:19:54,570
something yeah but we really no one

00:19:52,800 --> 00:19:56,640
escapes the business of quite importance

00:19:54,570 --> 00:20:00,110
of thing which is consciously come to

00:19:56,640 --> 00:20:00,110
have local hardware and the firmware

00:20:12,170 --> 00:20:31,559
yeah because it is a special case of

00:20:29,250 --> 00:20:35,000
their arms we never we don't have a

00:20:31,559 --> 00:20:35,000
bottle of the cavalry observe our way

00:20:39,710 --> 00:20:46,900
I have a question about the foot the

00:20:42,920 --> 00:20:52,130
other foot interim Ramiz is intended to

00:20:46,900 --> 00:20:55,490
work as a perfect one and you start

00:20:52,130 --> 00:21:01,580
minutes from happy but sometime we are

00:20:55,490 --> 00:21:04,790
faking SBE flash and you want to test

00:21:01,580 --> 00:21:08,410
that you're committed humor can recover

00:21:04,790 --> 00:21:12,050
from this arrow and I is not happy yet

00:21:08,410 --> 00:21:20,030
increment to insert Phaedra maybe that

00:21:12,050 --> 00:21:22,910
we are interesting yeah so that's I

00:21:20,030 --> 00:21:24,800
guess it could be false objection that's

00:21:22,910 --> 00:21:28,700
an interesting topic there's also a more

00:21:24,800 --> 00:21:32,960
vigorous read bible commune has no

00:21:28,700 --> 00:21:41,260
infrastructure Lassiter and save me some

00:21:32,960 --> 00:21:41,260
sort of mechanism device

00:21:41,740 --> 00:21:46,389
I said let's see controller what other

00:21:44,769 --> 00:21:57,639
plausible Foreman stood in order to

00:21:46,389 --> 00:21:59,740
support any lazy so I think my take on

00:21:57,639 --> 00:22:05,639
that kind of thing is there's only so

00:21:59,740 --> 00:22:05,639
many huge new features at once

00:22:06,240 --> 00:22:10,299
hopefully some of the things that we

00:22:08,889 --> 00:22:12,220
think are interesting big new features

00:22:10,299 --> 00:22:17,139
we took those back the presentational

00:22:12,220 --> 00:22:18,730
and where you have to add a big huge

00:22:17,139 --> 00:22:20,379
global framework for this is how we

00:22:18,730 --> 00:22:21,909
support this thing like um anyway as a

00:22:20,379 --> 00:22:24,730
bunch of supported individual devices

00:22:21,909 --> 00:22:27,399
all of us that's a pretty large chunk of

00:22:24,730 --> 00:22:28,869
works whether it's was think that large

00:22:27,399 --> 00:22:31,240
chunk of work as opposed to some of

00:22:28,869 --> 00:22:33,639
these these large chunks of work is

00:22:31,240 --> 00:22:35,799
something that's how you would feedback

00:22:33,639 --> 00:22:43,480
for people that's like this is critical

00:22:35,799 --> 00:22:45,369
to us we think about how you choose to

00:22:43,480 --> 00:22:46,960
have work they don't you're so the right

00:22:45,369 --> 00:22:48,519
word it's the kind of thing even do with

00:22:46,960 --> 00:22:51,399
an emulator that you can't do with the

00:22:48,519 --> 00:22:54,909
real hardware very easily so in that

00:22:51,399 --> 00:22:58,360
sense is something that is worth

00:22:54,909 --> 00:23:01,869
considering that was my take on a lot of

00:22:58,360 --> 00:23:03,490
these features is that you can't say

00:23:01,869 --> 00:23:08,320
anymore that you won't come you because

00:23:03,490 --> 00:23:10,149
it's your hardware and given the

00:23:08,320 --> 00:23:13,509
engagement airports is generally not

00:23:10,149 --> 00:23:15,639
cheaper than your I'm not much cheaper

00:23:13,509 --> 00:23:17,049
than using real hard way so the question

00:23:15,639 --> 00:23:18,610
is one of the things that you can only

00:23:17,049 --> 00:23:21,669
do because this is important because

00:23:18,610 --> 00:23:23,710
this is and says something the subtle

00:23:21,669 --> 00:23:26,639
way of tracing an interest a shoe and

00:23:23,710 --> 00:23:26,639
also invitation

00:24:10,920 --> 00:24:17,760
and they were longer rubbing faces

00:24:18,960 --> 00:24:23,200
having to inject those mothers on some

00:24:21,940 --> 00:24:25,930
structured basis would be super useful

00:24:23,200 --> 00:24:27,190
for that purposes and so that actually

00:24:25,930 --> 00:24:29,050
golfs the camp so I think that is a

00:24:27,190 --> 00:24:37,350
published time you should at least write

00:24:29,050 --> 00:24:37,350
down on the list of anything else

00:24:41,610 --> 00:24:56,490
be possible if there are the absolutely

00:24:52,280 --> 00:24:58,260
if you have a couple velocities the

00:24:56,490 --> 00:25:03,240
penetration vacuum your hovers for the

00:24:58,260 --> 00:25:05,910
gifts that step because I said has been

00:25:03,240 --> 00:25:18,540
an obstacle some of the Indian stuff is

00:25:05,910 --> 00:25:20,610
it's not quite there because if you get

00:25:18,540 --> 00:25:22,740
so it's much easier to spy on in this

00:25:20,610 --> 00:25:24,960
certainly works because I built this

00:25:22,740 --> 00:25:27,750
collection of binaries my shake that

00:25:24,960 --> 00:25:29,820
they run on the real hardware that's

00:25:27,750 --> 00:25:32,429
version was supposed to do that I check

00:25:29,820 --> 00:25:34,169
my website if you give you're doing

00:25:32,429 --> 00:25:39,710
something on commuters trying to emulate

00:25:34,169 --> 00:25:39,710
if I really don't have real world

00:25:54,120 --> 00:26:01,330
yeah we improve that and so I remember

00:25:59,830 --> 00:26:03,790
the way this is supposed to work you

00:26:01,330 --> 00:26:10,840
should use the same credit like excuse

00:26:03,790 --> 00:26:13,559
er yeah I remember whether this is half

00:26:10,840 --> 00:26:17,740
supposed to work or not yeah I am so

00:26:13,559 --> 00:26:22,809
like I'll be 32 supporting my accuser

00:26:17,740 --> 00:26:25,480
which is no time to type its yeah theory

00:26:22,809 --> 00:26:27,570
it could work it just needs some time to

00:26:25,480 --> 00:26:27,570
do

00:26:37,070 --> 00:26:42,040

YouTube URL: https://www.youtube.com/watch?v=gVun2PHlwH4


