Title: TSC BoF: Common Kernels Discussion - SFO17-221
Publication date: 2017-09-29
Playlist: Linaro Connect San Francisco 2017
Description: 
	Session ID: SFO17-221
Session Name: TSC BoF: Common Kernels Discussion - SFO17-221
Speaker: 
Track: 


★ Session Summary ★
Discussion on the various common kernel efforts in Linaro.  What are we doing now and how should this evolve?
---------------------------------------------------
★ Resources ★
Event Page: http://connect.linaro.org/resource/sfo17/sfo17-221/
Presentation: 
Video: 
 ---------------------------------------------------

★ Event Details ★
Linaro Connect San Francisco 2017 (SFO17)
25-29 September 2017
Hyatt Regency San Francisco Airport

---------------------------------------------------
Keyword: 
'http://www.linaro.org'
'http://connect.linaro.org'
---------------------------------------------------
Follow us on Social Media
https://www.facebook.com/LinaroOrg
https://twitter.com/linaroorg
https://www.youtube.com/user/linaroorg?sub_confirmation=1
https://www.linkedin.com/company/1026961
Captions: 
	00:00:00,120 --> 00:00:04,060
[Music]

00:00:08,910 --> 00:00:12,320
[Music]

00:00:14,780 --> 00:00:20,460
okay so does everything line up there's

00:00:18,720 --> 00:00:23,970
two basic questions is everything line

00:00:20,460 --> 00:00:26,040
up and are we missing anything and again

00:00:23,970 --> 00:00:27,990
so this is a point that kind of sync up

00:00:26,040 --> 00:00:34,470
with each other better over time right

00:00:27,990 --> 00:00:36,750
things next one so because of the

00:00:34,470 --> 00:00:40,620
project charge which relates to project

00:00:36,750 --> 00:00:43,500
trouble we are doing some kind of

00:00:40,620 --> 00:01:02,039
functional testing and these are the

00:00:43,500 --> 00:01:03,510
board's okay

00:01:02,039 --> 00:01:06,540
so the black ones are the ones that are

00:01:03,510 --> 00:01:10,250
in and directly running the other ones

00:01:06,540 --> 00:01:10,250
are in progress of coming on board

00:01:19,460 --> 00:01:27,710
yeah can you talk to the developer sure

00:01:23,750 --> 00:01:33,250
trying to yeah do don't expect for

00:01:27,710 --> 00:01:36,170
colors and yeah alright hey everybody so

00:01:33,250 --> 00:01:38,750
this was just kind of meant to be worth

00:01:36,170 --> 00:01:40,250
a bit of a status not where we are today

00:01:38,750 --> 00:01:41,920
as well as kind of where we're going as

00:01:40,250 --> 00:01:45,110
for our sports are concerned that are in

00:01:41,920 --> 00:01:50,180
lkf pd / budget sharks so what we're

00:01:45,110 --> 00:01:52,280
using when we're testing Carlos so when

00:01:50,180 --> 00:01:54,979
you get into this I guess kind of red

00:01:52,280 --> 00:01:58,460
coloured way over here a test boards

00:01:54,979 --> 00:02:01,759
which aren't not necessarily in and are

00:01:58,460 --> 00:02:05,000
not being something used for testing and

00:02:01,759 --> 00:02:08,030
corrado today we do have 410 see boards

00:02:05,000 --> 00:02:10,220
in the lab they're plugged in but we're

00:02:08,030 --> 00:02:11,930
still kind of validating them and kind

00:02:10,220 --> 00:02:14,180
of working with the Kings South get so

00:02:11,930 --> 00:02:19,510
really are our workhorse for words right

00:02:14,180 --> 00:02:22,220
now our high key in x86 64 x-15 is

00:02:19,510 --> 00:02:23,480
almost there so that's kind of why I

00:02:22,220 --> 00:02:24,769
went ahead and put that one black

00:02:23,480 --> 00:02:26,420
because I was being optimistic that's

00:02:24,769 --> 00:02:35,180
gonna be good because we get lots of

00:02:26,420 --> 00:02:39,230
stuff so within kind of the project

00:02:35,180 --> 00:02:41,510
sharp lkf TV universe this is not you

00:02:39,230 --> 00:02:45,080
know sort of priority where it's just an

00:02:41,510 --> 00:02:46,220
alphabetical order we need to kind of

00:02:45,080 --> 00:02:47,750
work with the members yet

00:02:46,220 --> 00:02:49,130
and can I get a reading it is scary to

00:02:47,750 --> 00:02:52,870
make the level of these as far as what

00:02:49,130 --> 00:02:55,280
they think should be higher or every

00:02:52,870 --> 00:02:56,540
then as far as kernels are concerned

00:02:55,280 --> 00:02:59,500
what we're actually testing in el

00:02:56,540 --> 00:03:03,530
Quixote and spending cycles against so

00:02:59,500 --> 00:03:05,510
main line next state current stable LTS

00:03:03,530 --> 00:03:08,720
four four four nine and fourteen where

00:03:05,510 --> 00:03:12,530
are we looking at so when RC one who hit

00:03:08,720 --> 00:03:14,240
the box we were already checking to see

00:03:12,530 --> 00:03:15,890
what was like we were actually

00:03:14,240 --> 00:03:18,260
pleasantly surprised historic a stock

00:03:15,890 --> 00:03:23,000
test was actually executing so we gave

00:03:18,260 --> 00:03:25,220
bugs die and then Android common you

00:03:23,000 --> 00:03:28,820
know there's a number of trees that are

00:03:25,220 --> 00:03:30,530
in the and I have a common entry to pay

00:03:28,820 --> 00:03:33,470
attention to that so there is now they -

00:03:30,530 --> 00:03:34,880
oh release and - oh and good stuff

00:03:33,470 --> 00:03:36,320
that's that's all on our radar screen

00:03:34,880 --> 00:03:38,510
work you know we're trying to figure out

00:03:36,320 --> 00:03:40,310
exactly how we wanna make that all work

00:03:38,510 --> 00:03:43,100
so that's a that's a discussion that

00:03:40,310 --> 00:03:45,710
kind of we had but you know I think

00:03:43,100 --> 00:03:47,360
what's important to understand as far as

00:03:45,710 --> 00:03:50,390
Android commas concern is you know it's

00:03:47,360 --> 00:03:51,110
really great that Google has gone in

00:03:50,390 --> 00:03:53,360
from over there

00:03:51,110 --> 00:03:54,170
aggressively picking up LTS is when

00:03:53,360 --> 00:03:56,810
they're released

00:03:54,170 --> 00:03:58,190
so never at common kernel will pick up

00:03:56,810 --> 00:04:00,770
those patches they of course have their

00:03:58,190 --> 00:04:04,150
auto treatment Android patches and you

00:04:00,770 --> 00:04:04,150
know they're tracking for a fortnight

00:04:05,410 --> 00:04:19,489
that's what about well this is this is

00:04:14,260 --> 00:04:22,250
this is the psychology yeah but the

00:04:19,489 --> 00:04:23,750
thing is is my favorite schoolers okay

00:04:22,250 --> 00:04:25,580
what's really cool about this is it

00:04:23,750 --> 00:04:28,340
doesn't have to be specific about LMG

00:04:25,580 --> 00:04:30,139
this is just representative hardware

00:04:28,340 --> 00:04:33,139
that we started with I mean putting in

00:04:30,139 --> 00:04:34,880
our server artwork that's you know it's

00:04:33,139 --> 00:04:38,389
not out of the realm of possibility here

00:04:34,880 --> 00:04:40,490
likewise you know the kernels that just

00:04:38,389 --> 00:04:42,770
a networking group cares about will take

00:04:40,490 --> 00:04:45,470
the LSK you know you can get that into

00:04:42,770 --> 00:04:49,180
the system so there's there's a lot of

00:04:45,470 --> 00:04:49,180
room for commonality of interest and

00:04:50,979 --> 00:04:54,350
element in all of this yes we're

00:04:53,000 --> 00:04:56,240
training the kernel fest but we want to

00:04:54,350 --> 00:04:57,889
make sure that the kernel engineer is

00:04:56,240 --> 00:05:00,020
not only in this room but in the great

00:04:57,889 --> 00:05:02,330
wider world you know even outside of the

00:05:00,020 --> 00:05:05,720
one our conference they'll be interested

00:05:02,330 --> 00:05:07,610
in this too you know we want to show

00:05:05,720 --> 00:05:09,530
that what we're doing make sure that it

00:05:07,610 --> 00:05:11,630
does things that are interesting to them

00:05:09,530 --> 00:05:18,500
so that they kind of engage in all of

00:05:11,630 --> 00:05:23,660
these love and I saw Ryan Haran and he's

00:05:18,500 --> 00:05:27,950
still on the spot there so we should

00:05:23,660 --> 00:05:30,289
talk about the purposes of lkf tea -

00:05:27,950 --> 00:05:32,300
Karl functional test it certainly

00:05:30,289 --> 00:05:36,340
relates to the work on the project sharp

00:05:32,300 --> 00:05:38,960
but it isn't only targeted for that so

00:05:36,340 --> 00:05:41,330
this wasn't really meant to be a sharp

00:05:38,960 --> 00:05:43,370
update but it might be worth quickly

00:05:41,330 --> 00:05:44,960
talking through what where we're at with

00:05:43,370 --> 00:05:48,130
the kernel functional test in what

00:05:44,960 --> 00:05:48,130
actual testing we're doing

00:05:50,420 --> 00:05:57,840
Tom looks like he's gonna to slides or

00:05:52,950 --> 00:06:02,490
something go ahead you hold that and

00:05:57,840 --> 00:06:04,470
I'll hold this give it to Tony sure so

00:06:02,490 --> 00:06:07,670
the current progress are let's just

00:06:04,470 --> 00:06:10,400
start with the vision so the vision is I

00:06:07,670 --> 00:06:13,620
was asked by the market put together a

00:06:10,400 --> 00:06:16,230
framework that abuse for or functional

00:06:13,620 --> 00:06:18,120
testing throughout the company for all

00:06:16,230 --> 00:06:19,740
stakeholders so that's quite ambitious

00:06:18,120 --> 00:06:22,620
and of course it was start with one

00:06:19,740 --> 00:06:26,240
place starting point has been sharp just

00:06:22,620 --> 00:06:29,340
because most of our members along behind

00:06:26,240 --> 00:06:31,920
the goals of the project start to start

00:06:29,340 --> 00:06:36,600
with and it was a good use case we had a

00:06:31,920 --> 00:06:39,300
lot of investment as far as member in

00:06:36,600 --> 00:06:44,280
the stakeholder interest so that's where

00:06:39,300 --> 00:06:47,100
we started that largely covers Android

00:06:44,280 --> 00:06:50,490
common kernel testing to begin with but

00:06:47,100 --> 00:06:53,840
then the focus shifted to functional

00:06:50,490 --> 00:06:58,040
testing of the LDS trees 4.49

00:06:53,840 --> 00:07:01,530
specifically and now about 14 are see

00:06:58,040 --> 00:07:04,110
now as far as how successful that we've

00:07:01,530 --> 00:07:06,950
been in that testing were we're well

00:07:04,110 --> 00:07:10,860
engaged now with Greg Hartmann he's

00:07:06,950 --> 00:07:14,070
basically polishing what polishing and

00:07:10,860 --> 00:07:17,010
commenting on what we're doing gains the

00:07:14,070 --> 00:07:18,780
place where he likes and his goal and

00:07:17,010 --> 00:07:21,300
our goal is that we start reporting in

00:07:18,780 --> 00:07:24,330
his stable mailing list whenever he

00:07:21,300 --> 00:07:27,840
wishes commits his treatise to his table

00:07:24,330 --> 00:07:29,370
trees but like I said this is just the

00:07:27,840 --> 00:07:30,930
first of all so I think we're getting

00:07:29,370 --> 00:07:35,419
close to in Greg's looking for

00:07:30,930 --> 00:07:37,919
yes start extending the beach into other

00:07:35,419 --> 00:07:39,810
other kernels so for instance we have

00:07:37,919 --> 00:07:45,750
injected into this month to start

00:07:39,810 --> 00:07:49,380
testing - k / push basis where else are

00:07:45,750 --> 00:07:53,400
looking at helping the enterprise group

00:07:49,380 --> 00:07:55,520
there are bar-b-que testing there are ok

00:07:53,400 --> 00:07:58,320
it's already sort of doing some of this

00:07:55,520 --> 00:08:01,289
we just want to get to a per commit

00:07:58,320 --> 00:08:04,020
cadence so that's that's ultimately our

00:08:01,289 --> 00:08:06,660
goal we do have a long term vision as

00:08:04,020 --> 00:08:08,009
well which is to help our members when

00:08:06,660 --> 00:08:10,800
they have a new board what we want to be

00:08:08,009 --> 00:08:12,870
able to do is help them do per commit

00:08:10,800 --> 00:08:15,780
level testing on their their proprietary

00:08:12,870 --> 00:08:18,090
boards within their own Maps every

00:08:15,780 --> 00:08:19,280
stretch goals

00:08:18,090 --> 00:08:24,539
[Music]

00:08:19,280 --> 00:08:28,729
so did you why not we show them to real

00:08:24,539 --> 00:08:30,539
data yeah you want welcome to okay so

00:08:28,729 --> 00:08:33,300
there's a couple of ways of taking a

00:08:30,539 --> 00:08:35,789
look at at l KF q well this is this is a

00:08:33,300 --> 00:08:37,169
QA - report on our network this is all

00:08:35,789 --> 00:08:39,510
public you don't think the login to just

00:08:37,169 --> 00:08:43,919
go there and here's the data it's

00:08:39,510 --> 00:08:45,540
organized and we're still kind of

00:08:43,919 --> 00:08:47,430
struggling with this a little bit but I

00:08:45,540 --> 00:08:49,200
think we're getting closer at dialing in

00:08:47,430 --> 00:08:52,620
and where these speeds so it's project

00:08:49,200 --> 00:08:55,589
out on the outsides of LP for Linux and

00:08:52,620 --> 00:08:58,800
then we're trying to do is have the tree

00:08:55,589 --> 00:09:00,420
that's in use and then provision of

00:08:58,800 --> 00:09:02,640
course and then lastly end up with

00:09:00,420 --> 00:09:05,850
what's the user space that you're using

00:09:02,640 --> 00:09:11,700
to runs the tests in so really that's

00:09:05,850 --> 00:09:14,700
just opener bedded or Android so just

00:09:11,700 --> 00:09:17,990
kind of scrolling through here so like

00:09:14,700 --> 00:09:17,990
let's take a look at anyone

00:09:19,120 --> 00:09:30,310
so this is literally mainline base 1 RC

00:09:27,470 --> 00:09:30,310
2 drought

00:09:34,990 --> 00:09:41,110
there we go so usual set of oil upgrade

00:09:39,550 --> 00:09:43,029
information of what were you running

00:09:41,110 --> 00:09:45,190
where'd you get it from you know what

00:09:43,029 --> 00:09:46,690
keep getting repos were involved you

00:09:45,190 --> 00:09:48,430
know what was the version of the tests

00:09:46,690 --> 00:09:51,130
that were involved and the middle stuff

00:09:48,430 --> 00:09:53,160
here like case off test was figure out

00:09:51,130 --> 00:09:55,839
the exact set of tests that we use with

00:09:53,160 --> 00:09:56,860
ETFs same thing you know it's not sort

00:09:55,839 --> 00:09:59,920
of force you make it all the way through

00:09:56,860 --> 00:10:01,570
so that you as somebody looking at this

00:09:59,920 --> 00:10:03,250
data if you want to replicate this

00:10:01,570 --> 00:10:06,220
you've got enough information where you

00:10:03,250 --> 00:10:11,110
can you can go and do that okay as far

00:10:06,220 --> 00:10:13,330
as the actual data itself now it starts

00:10:11,110 --> 00:10:17,500
to subdivide based on the architectures

00:10:13,330 --> 00:10:19,270
so most right here there's high key that

00:10:17,500 --> 00:10:23,770
keeps going down and like here's x86

00:10:19,270 --> 00:10:31,060
results okay let's say it's self-test

00:10:23,770 --> 00:10:32,020
here we've just got some fails there we

00:10:31,060 --> 00:10:35,080
go

00:10:32,020 --> 00:10:42,520
and so now we're walking through

00:10:35,080 --> 00:10:44,200
individual test case they're going even

00:10:42,520 --> 00:10:46,540
deeper you want to start saying console

00:10:44,200 --> 00:10:49,120
output and the runs themselves that

00:10:46,540 --> 00:10:50,770
information is around two so that's

00:10:49,120 --> 00:10:54,940
that's all something that you do you can

00:10:50,770 --> 00:10:56,320
dive into it as well so it's yeah we're

00:10:54,940 --> 00:10:58,420
trying to be this is all about

00:10:56,320 --> 00:11:00,190
empowerment and making things easy to

00:10:58,420 --> 00:11:02,850
detect or regression and be able to have

00:11:00,190 --> 00:11:02,850
gotten that regression

00:11:03,120 --> 00:11:07,439
but there are two things that are

00:11:04,920 --> 00:11:09,120
actively being worked on that will make

00:11:07,439 --> 00:11:11,610
this easier than this today

00:11:09,120 --> 00:11:13,230
one thing is drilling down to the next

00:11:11,610 --> 00:11:16,319
step is currently about Parliament

00:11:13,230 --> 00:11:18,420
should be the other thing is we want to

00:11:16,319 --> 00:11:22,290
default output to be all green right now

00:11:18,420 --> 00:11:24,449
we still have a number of red items

00:11:22,290 --> 00:11:26,939
where things are never fail and we need

00:11:24,449 --> 00:11:29,279
to keep working at them one at a time

00:11:26,939 --> 00:11:32,430
and make sure they all succeed by

00:11:29,279 --> 00:11:36,569
default or we stop trying them if

00:11:32,430 --> 00:11:38,639
they're hopeless you know likewise what

00:11:36,569 --> 00:11:43,200
we do is there's a certain amount of

00:11:38,639 --> 00:11:46,650
triage so like armed meat

00:11:43,200 --> 00:11:50,070
and wonder and Steve McCall you know

00:11:46,650 --> 00:11:53,010
we're working above us and so you pop in

00:11:50,070 --> 00:11:55,110
to bust a platoon or there's a little

00:11:53,010 --> 00:11:57,480
functional test family that's there you

00:11:55,110 --> 00:11:59,970
do a query on that pick on an average

00:11:57,480 --> 00:12:02,270
bug and we're keeping our running here's

00:11:59,970 --> 00:12:05,910
what's going on here's publicity but

00:12:02,270 --> 00:12:07,860
here we approach such a tough kernel

00:12:05,910 --> 00:12:10,440
maintainer here's the discussion on the

00:12:07,860 --> 00:12:12,270
list that's going on so whole ideas and

00:12:10,440 --> 00:12:17,310
we don't want to let this stuff set we

00:12:12,270 --> 00:12:19,500
want to keep things did you want to show

00:12:17,310 --> 00:12:20,670
the LTS desired product just as part of

00:12:19,500 --> 00:12:23,840
what we're doing from the reporting

00:12:20,670 --> 00:12:23,840
perspective from containers

00:12:27,140 --> 00:12:37,360
yeah I think the the the list archive

00:12:29,240 --> 00:12:52,970
itself yeah you have access to RL yeah

00:12:37,360 --> 00:12:55,970
yeah if you want to do it at check-in

00:12:52,970 --> 00:12:59,209
yes oh so it's a cycle time it's per

00:12:55,970 --> 00:13:01,250
push and we're looking at we're ready to

00:12:59,209 --> 00:13:03,980
pull a five minute pull on the trigger

00:13:01,250 --> 00:13:06,529
so I think I was speaking with Greg

00:13:03,980 --> 00:13:08,510
about three or four weeks ago and at the

00:13:06,529 --> 00:13:09,890
beginning of the meeting he asked when

00:13:08,510 --> 00:13:12,050
are we gonna get results on the test he

00:13:09,890 --> 00:13:14,899
just pushed Ms Breyer and I think within

00:13:12,050 --> 00:13:18,350
45 minutes we had results they had full

00:13:14,899 --> 00:13:21,200
run results an hour

00:13:18,350 --> 00:13:23,930
I thought one thing we got to mention

00:13:21,200 --> 00:13:25,610
here okay there's a real good example of

00:13:23,930 --> 00:13:28,810
why you want your support upstream for a

00:13:25,610 --> 00:13:32,480
currently so I'm now on the soapbox for

00:13:28,810 --> 00:13:35,930
a moment so like when it comes to like

00:13:32,480 --> 00:13:38,480
that for for LPS canal we do part of the

00:13:35,930 --> 00:13:40,940
validation for that kernel on hanky well

00:13:38,480 --> 00:13:43,790
not all the IEP support is upstream for

00:13:40,940 --> 00:13:45,730
for for me what happens is 1 for 4 of

00:13:43,790 --> 00:13:49,130
our seat is released out onto the list

00:13:45,730 --> 00:13:51,610
we have this little you know should be

00:13:49,130 --> 00:13:54,170
automated step to go ahead and rebase it

00:13:51,610 --> 00:13:54,810
platform support that is how to be on

00:13:54,170 --> 00:13:58,200
top

00:13:54,810 --> 00:14:00,090
the world with this new our series guess

00:13:58,200 --> 00:14:02,100
what doesn't always work so that means

00:14:00,090 --> 00:14:03,690
manual intervention is required well

00:14:02,100 --> 00:14:04,620
what happens when the RC gets released

00:14:03,690 --> 00:14:07,050
at 2:00 in the morning

00:14:04,620 --> 00:14:09,540
ah that's awesome isn't it so that

00:14:07,050 --> 00:14:12,120
starts introducing lag so if it takes

00:14:09,540 --> 00:14:13,800
you a couple of days to rebase a set of

00:14:12,120 --> 00:14:15,930
hatches manually go ahead and retest

00:14:13,800 --> 00:14:20,310
that get some sort of meaningful test

00:14:15,930 --> 00:14:24,090
results that is a but we do not want

00:14:20,310 --> 00:14:26,700
them so for those you know boards to be

00:14:24,090 --> 00:14:30,540
most effective in this environment your

00:14:26,700 --> 00:14:32,460
passport needs to be upstream and what

00:14:30,540 --> 00:14:34,140
we're looking to add that we do it foggy

00:14:32,460 --> 00:14:35,070
because that's one of the three months

00:14:34,140 --> 00:14:37,520
that we start out of it

00:14:35,070 --> 00:14:47,610
we're not going to do another pod

00:14:37,520 --> 00:14:48,660
exactly okay so I do work for fedora

00:14:47,610 --> 00:14:51,300
I'm just curious when you run into

00:14:48,660 --> 00:14:55,010
conflicts when you're rebasing here's

00:14:51,300 --> 00:14:55,010
cable series what you typically run into

00:14:57,830 --> 00:15:00,979
[Music]

00:15:05,750 --> 00:15:12,480
sometimes we've had cases where as this

00:15:10,440 --> 00:15:14,520
currents got upstream for height it's

00:15:12,480 --> 00:15:17,100
about revisions and then some stuff gets

00:15:14,520 --> 00:15:19,410
tagged as fixes that gets back ported to

00:15:17,100 --> 00:15:20,070
the older kernels which had an alternate

00:15:19,410 --> 00:15:21,600
solution

00:15:20,070 --> 00:15:23,040
you're a builder solution basically and

00:15:21,600 --> 00:15:24,209
so now we've got kind of this thing that

00:15:23,040 --> 00:15:33,990
we've done London if you grew up with

00:15:24,209 --> 00:15:36,509
the right answer is to go back all right

00:15:33,990 --> 00:15:38,310
Tom you want to scroll down we go to the

00:15:36,509 --> 00:15:41,339
bottom of September areas it's better

00:15:38,310 --> 00:15:45,959
the most recent so let's look at one of

00:15:41,339 --> 00:15:47,940
them let's look at one of them no

00:15:45,959 --> 00:15:50,190
regressions boundless let's go the

00:15:47,940 --> 00:15:53,190
previous one actually the Android ones

00:15:50,190 --> 00:15:55,290
are a little bit special so if we look

00:15:53,190 --> 00:15:58,130
at the four for OE so this was rebase

00:15:55,290 --> 00:16:01,769
tons this was triggered based you know

00:15:58,130 --> 00:16:03,209
submits update following corrects pushes

00:16:01,769 --> 00:16:04,949
I don't recall one great that it was

00:16:03,209 --> 00:16:07,500
within the last few days

00:16:04,949 --> 00:16:09,660
so this report format is pretty much

00:16:07,500 --> 00:16:13,079
what Greg's asking for it is up for

00:16:09,660 --> 00:16:15,209
debate as soon as we start sending these

00:16:13,079 --> 00:16:16,829
in an automated fashion to Greg's

00:16:15,209 --> 00:16:19,050
mailing list or just waiting for

00:16:16,829 --> 00:16:21,870
disapproval then I suspect other

00:16:19,050 --> 00:16:24,810
containers will like them with pleasure

00:16:21,870 --> 00:16:27,139
or displeasure but the objective of this

00:16:24,810 --> 00:16:30,149
is to give the kernel engineers as

00:16:27,139 --> 00:16:32,519
little information as necessary in order

00:16:30,149 --> 00:16:35,399
to determine whether we have found

00:16:32,519 --> 00:16:37,639
regressions with that push and then we

00:16:35,399 --> 00:16:39,899
also of course give the detailed report

00:16:37,639 --> 00:16:41,610
and also when there's no regressions

00:16:39,899 --> 00:16:44,550
were actually identify hey there's no

00:16:41,610 --> 00:16:48,040
progression and what and no regressions

00:16:44,550 --> 00:16:50,800
on what particular hardware

00:16:48,040 --> 00:16:54,279
Russians yeah so the regressions ones

00:16:50,800 --> 00:16:58,060
are better over there the last few and

00:16:54,279 --> 00:16:59,350
as bar season I'm pretty good yeah so

00:16:58,060 --> 00:17:01,540
that's actually that's actually a

00:16:59,350 --> 00:17:04,500
comment see if you go with the mousetrap

00:17:01,540 --> 00:17:04,500
you it'll be a little easier

00:17:17,370 --> 00:17:22,910
so sorry

00:17:20,310 --> 00:17:25,770
we're more than that so right now the

00:17:22,910 --> 00:17:27,630
amount of curlformers we'll test is

00:17:25,770 --> 00:17:29,880
limited right because we're trying to

00:17:27,630 --> 00:17:32,280
get the process to work reliably to get

00:17:29,880 --> 00:17:34,620
the output in a way that that Greg and

00:17:32,280 --> 00:17:36,990
other maintain who are accepted by new

00:17:34,620 --> 00:17:41,460
school yeah what's the process Ferb

00:17:36,990 --> 00:17:42,390
we're gonna and additional tested work

00:17:41,460 --> 00:17:45,270
who decides that

00:17:42,390 --> 00:17:47,010
so this aren't the same the objective is

00:17:45,270 --> 00:17:50,130
get those all green get the baseline

00:17:47,010 --> 00:17:53,640
then getting a green baselines down a

00:17:50,130 --> 00:17:55,740
bit difficult we've had to result

00:17:53,640 --> 00:17:58,680
Deaflympic issues resolved environmental

00:17:55,740 --> 00:18:00,510
issues resolved harbour issues and then

00:17:58,680 --> 00:18:02,280
there are still some lingering kernel

00:18:00,510 --> 00:18:04,320
problems so I think we're gonna try to

00:18:02,280 --> 00:18:06,090
get to green as well as we can the case

00:18:04,320 --> 00:18:06,830
soft test we're engaging with K

00:18:06,090 --> 00:18:08,940
self-test

00:18:06,830 --> 00:18:12,180
maintainer x' and subsystem maintainers

00:18:08,940 --> 00:18:15,150
right now about how to add test case up

00:18:12,180 --> 00:18:17,120
test how to test them how to make sure

00:18:15,150 --> 00:18:19,530
that the diversion was running

00:18:17,120 --> 00:18:21,630
corresponds with we saw over the testing

00:18:19,530 --> 00:18:23,220
so that's normal discussion as far as

00:18:21,630 --> 00:18:25,230
other test Suites we have already

00:18:23,220 --> 00:18:27,330
started up executing LD piece is called

00:18:25,230 --> 00:18:31,310
tests and we're actively working with

00:18:27,330 --> 00:18:31,310
Steve right now I believe

00:18:31,990 --> 00:18:37,580
we're working with Steve to look at a

00:18:35,510 --> 00:18:39,230
subset of LTP that that we should be

00:18:37,580 --> 00:18:42,140
executing and slowly out of you man so

00:18:39,230 --> 00:18:43,700
our attention is add a green baseline

00:18:42,140 --> 00:18:45,200
adds a new green baseline don't just

00:18:43,700 --> 00:18:47,060
drop any age tests we can start

00:18:45,200 --> 00:18:48,770
reporting reporting theaters like crazy

00:18:47,060 --> 00:18:52,880
so we're kind of approaching this from

00:18:48,770 --> 00:18:54,410
several different angles this far as the

00:18:52,880 --> 00:18:57,590
new tests we do have some new tests that

00:18:54,410 --> 00:19:02,650
we do want to to look at big tongue and

00:18:57,590 --> 00:19:18,050
tell you well yeah that's on the slide

00:19:02,650 --> 00:19:21,860
we're gonna look at lkp I think yeah mmm

00:19:18,050 --> 00:19:23,690
tests yeah the point is go from green

00:19:21,860 --> 00:19:26,150
baseline and keep it green as we have

00:19:23,690 --> 00:19:29,690
more tests and you know this is an

00:19:26,150 --> 00:19:31,340
important era t24 remember you know not

00:19:29,690 --> 00:19:33,020
only what are the important test buckets

00:19:31,340 --> 00:19:34,520
but if you've got any of your home test

00:19:33,020 --> 00:19:36,260
buckets if you'd like to contribute to

00:19:34,520 --> 00:19:37,460
this you know we're really interested in

00:19:36,260 --> 00:19:42,460
that you know the better we can make

00:19:37,460 --> 00:19:42,460
this system the work it helps all of us

00:19:49,340 --> 00:20:23,890
interesting because we have issues

00:20:20,840 --> 00:20:23,890
[Music]

00:20:36,320 --> 00:20:43,910
see that so

00:21:04,510 --> 00:21:16,090
alleged you're supposed to stop you

00:21:14,090 --> 00:21:57,680
really should be using a kernel version

00:21:16,090 --> 00:22:00,350
if you're interested in testing ready

00:21:57,680 --> 00:22:25,840
you know help is the first suppression

00:22:00,350 --> 00:22:31,330
system fire one thing is already

00:22:25,840 --> 00:22:31,330
resolved but before books

00:22:32,590 --> 00:22:39,070
the Colonel's said book two and they

00:22:35,889 --> 00:22:41,320
block Depp's meetings and all that they

00:22:39,070 --> 00:22:42,610
decide to nor did I mean it something

00:22:41,320 --> 00:22:44,499
since finding more problems you won't

00:22:42,610 --> 00:22:59,879
expect the testicle fatal but you'll get

00:22:44,499 --> 00:23:02,440
any message yeah the law kept ones get

00:22:59,879 --> 00:23:06,070
because they start breaking into because

00:23:02,440 --> 00:23:07,929
of rubbish bootloader issues be it's a

00:23:06,070 --> 00:23:09,399
good idea

00:23:07,929 --> 00:23:12,009
we're finding a bunch of useful stuff

00:23:09,399 --> 00:23:15,190
with that internal CI just from the

00:23:12,009 --> 00:23:16,720
booze covering stuff and food tests we

00:23:15,190 --> 00:23:19,990
do have to turn off the lock that stuff

00:23:16,720 --> 00:23:22,419
any it's also more and more difficult if

00:23:19,990 --> 00:23:23,769
you're running on stable kernels it's

00:23:22,419 --> 00:23:25,980
more and more difficult to convince

00:23:23,769 --> 00:23:29,460
people that they actually care about

00:23:25,980 --> 00:23:32,350
your what Depp's plot in an old kernel

00:23:29,460 --> 00:23:35,320
or your case on spot or whatever is flat

00:23:32,350 --> 00:23:38,799
happens to be in an older kernel that I

00:23:35,320 --> 00:23:40,869
knew once about that sort of stuff could

00:23:38,799 --> 00:23:43,840
always only only be turned on for our

00:23:40,869 --> 00:23:45,639
main light and dance though it would how

00:23:43,840 --> 00:23:47,139
can people's interest yeah that sounds

00:23:45,639 --> 00:23:51,100
good for this was that night you know

00:23:47,139 --> 00:23:52,090
you can get down the toilet yeah so you

00:23:51,100 --> 00:23:53,950
see this things where I don't

00:23:52,090 --> 00:23:57,039
want to cause a lot more work

00:23:53,950 --> 00:23:59,070
but these hits yeah you tell me this

00:23:57,039 --> 00:24:02,080
heck we've been able for Colonel sea-ice

00:23:59,070 --> 00:24:04,000
fairly good the overheads fairly low

00:24:02,080 --> 00:24:06,070
apart from the fact that especially

00:24:04,000 --> 00:24:10,870
locked at Tulsa Colonel slice to blue

00:24:06,070 --> 00:24:15,519
which closes boot failures because right

00:24:10,870 --> 00:24:18,669
in the BTB and things like that so that

00:24:15,519 --> 00:24:23,380
gets annoying settle otherwise the

00:24:18,669 --> 00:24:25,600
expensive department yeah but that they

00:24:23,380 --> 00:24:27,850
see if it slows down the run time but

00:24:25,600 --> 00:24:31,019
it's no maybe the grand scheme of things

00:24:27,850 --> 00:24:31,019
it works I don't know about bad

00:24:34,610 --> 00:24:41,550
but are we done but they said they have

00:24:37,760 --> 00:24:44,640
t anything similar question

00:24:41,550 --> 00:24:44,640
[Music]

00:24:48,559 --> 00:25:00,700
no taxes so repeat the question yeah so

00:24:56,899 --> 00:25:03,289
there's tested typically run on the food

00:25:00,700 --> 00:25:08,260
they're a unit test within the kernels

00:25:03,289 --> 00:25:12,740
of the API within the kernel as test

00:25:08,260 --> 00:25:15,590
there's things like I think there's some

00:25:12,740 --> 00:25:17,929
performance tests like crypto algorithms

00:25:15,590 --> 00:25:23,470
yeah it's some of the trace stuff how

00:25:17,929 --> 00:25:28,850
today that raises a big as well there's

00:25:23,470 --> 00:25:30,320
like the RCU torture tests yeah I really

00:25:28,850 --> 00:25:32,360
think we should find a way to integrate

00:25:30,320 --> 00:25:34,610
it into case focus in some form even

00:25:32,360 --> 00:25:36,559
though that's just one case of test test

00:25:34,610 --> 00:25:39,710
that outputs the data again in the same

00:25:36,559 --> 00:25:41,539
common as the other we can probably come

00:25:39,710 --> 00:25:44,179
up with some solution here

00:25:41,539 --> 00:25:46,850
just to have it not be another test

00:25:44,179 --> 00:25:49,100
suite okay but we shouldn't be running

00:25:46,850 --> 00:25:51,080
those tests it's yes and it's probably

00:25:49,100 --> 00:25:52,460
the same as the debugger on that like we

00:25:51,080 --> 00:25:56,600
would have to enable all those options

00:25:52,460 --> 00:25:59,230
but enable it at the same time this one

00:25:56,600 --> 00:25:59,230
time debugging

00:25:59,710 --> 00:26:07,279
so there's nothing else but see I can

00:26:02,389 --> 00:26:10,940
talk for a few minutes about the common

00:26:07,279 --> 00:26:13,809
kernel work that we've been doing since

00:26:10,940 --> 00:26:13,809
the start of denaro

00:26:13,899 --> 00:26:22,210
the main goal has been completed

00:26:17,950 --> 00:26:25,450
maybe a year ago when we had all our me

00:26:22,210 --> 00:26:26,830
six and rb7 platforms in the kernel when

00:26:25,450 --> 00:26:30,490
state they control them into one

00:26:26,830 --> 00:26:33,279
chronicles that runs on all platforms so

00:26:30,490 --> 00:26:34,510
that part's gonna be here and a half at

00:26:33,279 --> 00:26:36,279
least baby to by now

00:26:34,510 --> 00:26:38,769
it may be maybe two two years already

00:26:36,279 --> 00:26:41,409
yes it's been a while there are still

00:26:38,769 --> 00:26:44,409
some areas that are missing so an army

00:26:41,409 --> 00:26:48,909
file we have maybe two thirds of the

00:26:44,409 --> 00:26:53,500
platforms just ten platforms left that

00:26:48,909 --> 00:26:56,380
we could slow convert this work is going

00:26:53,500 --> 00:26:59,889
on slowly sometimes you know sometimes I

00:26:56,380 --> 00:27:05,620
convert one not that form is not really

00:26:59,889 --> 00:27:11,500
urgent for the modern architectures b6

00:27:05,620 --> 00:27:14,710
b7 b8 so we in the Pacific economy

00:27:11,500 --> 00:27:18,010
actually support only two levels of

00:27:14,710 --> 00:27:24,190
support b6 and b7 and I keep thinking we

00:27:18,010 --> 00:27:26,830
should extend it and formally have b7 b

00:27:24,190 --> 00:27:30,039
e and b a8 a separate levels maybe also

00:27:26,830 --> 00:27:33,309
gave at one yet but because what most

00:27:30,039 --> 00:27:35,799
people run the 64-bit kernel nba's some

00:27:33,309 --> 00:27:38,110
not like raspberry pi is popular

00:27:35,799 --> 00:27:41,200
platform where people do run a 32-bit

00:27:38,110 --> 00:27:44,169
kernel but we don't officially support

00:27:41,200 --> 00:27:47,260
that at all like the kernel help convict

00:27:44,169 --> 00:27:47,799
army aides option and certain things are

00:27:47,260 --> 00:27:51,100
different

00:27:47,799 --> 00:27:53,559
should probably treat them that way also

00:27:51,100 --> 00:27:56,380
we also going to heaven RB 6 dead

00:27:53,559 --> 00:28:00,070
convict so far the slightly older

00:27:56,380 --> 00:28:02,230
platforms we don't have a single part of

00:28:00,070 --> 00:28:03,740
that we still provide a configuration

00:28:02,230 --> 00:28:09,740
that runs on all of them

00:28:03,740 --> 00:28:10,940
we could whether anybody cares for the

00:28:09,740 --> 00:28:13,250
army 7pe

00:28:10,940 --> 00:28:16,090
is what makes sense it's much more

00:28:13,250 --> 00:28:18,590
efficient to have the initiative by

00:28:16,090 --> 00:28:21,080
instructions and it would also be a good

00:28:18,590 --> 00:28:25,010
way to determine whether we should have

00:28:21,080 --> 00:28:27,440
a cessation support out because that's

00:28:25,010 --> 00:28:30,650
the basic same architecture and also a

00:28:27,440 --> 00:28:33,110
need so we we do a lot of gayety lon

00:28:30,650 --> 00:28:35,000
all army seven platforms even though

00:28:33,110 --> 00:28:35,990
most of them the older ones don't

00:28:35,000 --> 00:28:42,160
support anything

00:28:35,990 --> 00:28:42,160
I mean questions are ideas about this

00:28:43,240 --> 00:28:47,770
and in our 64 processor

00:28:52,240 --> 00:28:59,350
so next so back to the yeah let's talk

00:28:56,410 --> 00:29:05,680
about the RPK of it and what excuse for

00:28:59,350 --> 00:29:08,650
over it so he is we have more popcorn

00:29:05,680 --> 00:29:12,310
zoo it was maybe going to be more what

00:29:08,650 --> 00:29:16,330
used right now it's basically only used

00:29:12,310 --> 00:29:22,870
by the enterprise reference platform

00:29:16,330 --> 00:29:26,680
it's a the kernel a ship it contains or

00:29:22,870 --> 00:29:29,670
it's it's a part of a colonel from

00:29:26,680 --> 00:29:32,680
Lina's the car Walden's baseball on 414

00:29:29,670 --> 00:29:36,640
that they're gearing up for using in

00:29:32,680 --> 00:29:40,080
their next release which is coming in a

00:29:36,640 --> 00:29:40,080
few months I part members at the web

00:29:40,380 --> 00:29:50,500
yeah I just I guess doing which times

00:29:42,610 --> 00:29:54,580
yeah yeah that there'd be no new one

00:29:50,500 --> 00:29:57,130
it contains the carnage currently leads

00:29:54,580 --> 00:29:59,980
to Street and it also contains any

00:29:57,130 --> 00:30:02,730
patches that people feel are important

00:29:59,980 --> 00:30:05,770
to back port

00:30:02,730 --> 00:30:08,800
essentially the only rule rules for that

00:30:05,770 --> 00:30:10,780
are that it's got to not break things

00:30:08,800 --> 00:30:12,220
for other people and it's got to be

00:30:10,780 --> 00:30:14,560
something that's being actively

00:30:12,220 --> 00:30:17,350
discussed upstream so doesn't need to be

00:30:14,560 --> 00:30:19,720
actually upstream like we've marked the

00:30:17,350 --> 00:30:21,490
LST it just needs to be something with

00:30:19,720 --> 00:30:23,860
some these posters list is being talked

00:30:21,490 --> 00:30:28,110
about upstream even if the included

00:30:23,860 --> 00:30:33,040
upstream was that it needs to be revised

00:30:28,110 --> 00:30:35,290
that's been used for the past two and

00:30:33,040 --> 00:30:39,340
price reference platform releases there

00:30:35,290 --> 00:30:41,710
are a few bumps the first time was used

00:30:39,340 --> 00:30:45,150
but really recent

00:30:41,710 --> 00:30:47,980
last month everything went very smoothly

00:30:45,150 --> 00:30:50,680
we were not seeing new police actually

00:30:47,980 --> 00:30:52,540
asking for back courts right now which i

00:30:50,680 --> 00:30:54,910
think is a sign that they require them

00:30:52,540 --> 00:30:56,880
to push everything towards upstream has

00:30:54,910 --> 00:30:58,960
had the desired result

00:30:56,880 --> 00:31:01,720
platforms are not a will support dub

00:30:58,960 --> 00:31:04,570
screen hopefully don't need too many

00:31:01,720 --> 00:31:08,050
back ports there might be some if

00:31:04,570 --> 00:31:10,680
there's new hardware but I'm not just

00:31:08,050 --> 00:31:10,680
speaking anything

00:31:15,159 --> 00:31:21,829
so not to switch gears because we say in

00:31:18,979 --> 00:31:25,339
our PTA which the that's released in the

00:31:21,829 --> 00:31:27,499
ERP yeah yes oh yeah the RPG itself

00:31:25,339 --> 00:31:29,719
doesn't actually release it's just a

00:31:27,499 --> 00:31:34,099
game tree and then people who want to

00:31:29,719 --> 00:31:35,570
use a kernel in their you know their

00:31:34,099 --> 00:31:38,659
finger software release their

00:31:35,570 --> 00:31:42,129
distribution pick it up do release

00:31:38,659 --> 00:31:46,039
management on it themselves

00:31:42,129 --> 00:31:47,690
so the you mentioned Alice case but

00:31:46,039 --> 00:31:52,369
what's the current state of Ellis cake

00:31:47,690 --> 00:31:58,309
and any changes there recently so Alice

00:31:52,369 --> 00:32:01,009
key is running really smoothly the big

00:31:58,309 --> 00:32:03,919
change it's not so easy anymore I

00:32:01,009 --> 00:32:07,219
happened before been attached is that

00:32:03,919 --> 00:32:09,109
following the discussions around project

00:32:07,219 --> 00:32:12,699
travel we're not gonna be doing new

00:32:09,109 --> 00:32:15,709
Android iOS game releases instead we're

00:32:12,699 --> 00:32:19,190
going to be trying to contribute things

00:32:15,709 --> 00:32:21,559
Bluetooth API for : kernel now that's a

00:32:19,190 --> 00:32:23,709
bit more movement features so that's

00:32:21,559 --> 00:32:28,579
that process is still working progress

00:32:23,709 --> 00:32:31,399
that's gonna go well we're still

00:32:28,579 --> 00:32:34,489
maintaining the regular LSP of the are

00:32:31,399 --> 00:32:38,509
keepers of the honesty for users who

00:32:34,489 --> 00:32:40,249
aren't using Android the current version

00:32:38,509 --> 00:32:42,829
the second active development is for

00:32:40,249 --> 00:32:47,329
nine we also have for horse to the

00:32:42,829 --> 00:32:50,599
maintenance and get a few requests that

00:32:47,329 --> 00:32:54,619
speak to myself for Alex she is the

00:32:50,599 --> 00:32:57,120
maintainer of that will talk about it

00:32:54,619 --> 00:33:01,960
you can also submit those requests

00:32:57,120 --> 00:33:03,730
yeah we in our email list are told us in

00:33:01,960 --> 00:33:06,520
person or moved at these any way you can

00:33:03,730 --> 00:33:10,390
get touch composable will find work with

00:33:06,520 --> 00:33:12,640
you so basically within manaro

00:33:10,390 --> 00:33:14,320
other than working in mainline kernels

00:33:12,640 --> 00:33:16,500
directly for the work that we do in a

00:33:14,320 --> 00:33:18,640
lot of the groups we have these

00:33:16,500 --> 00:33:22,240
fundamentally two kernels that we work

00:33:18,640 --> 00:33:24,970
with right our VK and Alice gave right

00:33:22,240 --> 00:33:27,040
yeah and like we're saying the art

00:33:24,970 --> 00:33:29,590
became people seem to be doing well

00:33:27,040 --> 00:33:31,230
enough upstream and Liz it's actually

00:33:29,590 --> 00:33:33,040
somewhat losing its relevance which is

00:33:31,230 --> 00:33:38,050
which is wonderful

00:33:33,040 --> 00:33:42,460
yeah and then back to testing for a

00:33:38,050 --> 00:33:45,340
minute the ability for L K of T to add

00:33:42,460 --> 00:33:47,080
kernels in the future and us is

00:33:45,340 --> 00:33:51,970
something we're striving for to help

00:33:47,080 --> 00:33:55,840
that whole ecosystem work and there's

00:33:51,970 --> 00:33:57,640
also the kernel CI project which is also

00:33:55,840 --> 00:33:59,500
a testing each events build include

00:33:57,640 --> 00:34:01,570
testing versus well khaki is actually

00:33:59,500 --> 00:34:04,090
functional present right yet to

00:34:01,570 --> 00:34:06,510
eternally a lot of there are these

00:34:04,090 --> 00:34:08,800
immediate e interest in testing in

00:34:06,510 --> 00:34:13,720
kernel sky but we're in all about to be

00:34:08,800 --> 00:34:16,360
working on it rather and aromatic kernel

00:34:13,720 --> 00:34:20,710
CIE the other big difference is Carol

00:34:16,360 --> 00:34:23,169
sky focused all brolof forth coverage

00:34:20,710 --> 00:34:27,070
whereas help EFT is really restricted

00:34:23,169 --> 00:34:28,780
the Senate floor and safe covers so but

00:34:27,070 --> 00:34:32,800
that means it's also more about with on

00:34:28,780 --> 00:34:35,260
those boards to run texts they sculpt I

00:34:32,800 --> 00:34:36,370
can't remember how many Yankees is code

00:34:35,260 --> 00:34:37,540
them and I think it's about 20 or

00:34:36,370 --> 00:34:39,700
something

00:34:37,540 --> 00:34:43,899
whereas courtesy I might have one or two

00:34:39,700 --> 00:34:46,080
boards be given time right has 100

00:34:43,899 --> 00:34:52,990
different wait it doesn't mean to you

00:34:46,080 --> 00:34:54,580
the you can run way more tests on if

00:34:52,990 --> 00:34:56,560
you've got a huge lot for the boards

00:34:54,580 --> 00:34:57,820
where is Colonel Scott would because

00:34:56,560 --> 00:34:59,980
it's only about one or two boards

00:34:57,820 --> 00:35:03,460
struggling for violets on those boards

00:34:59,980 --> 00:35:05,290
to run the white set of texts unless the

00:35:03,460 --> 00:35:07,120
lab situation changes dramatically and

00:35:05,290 --> 00:35:10,480
purport we'd like to go especially with

00:35:07,120 --> 00:35:12,700
them and part of where we'd like to go

00:35:10,480 --> 00:35:14,500
especially with Elliot we do want to

00:35:12,700 --> 00:35:16,810
work with current CI guys I mean you

00:35:14,500 --> 00:35:18,370
know this isn't just this is where we're

00:35:16,810 --> 00:35:20,260
at today yeah we've got two systems but

00:35:18,370 --> 00:35:22,390
I mean it does make sense that you know

00:35:20,260 --> 00:35:25,530
not only coordinating and see how much

00:35:22,390 --> 00:35:25,530
what we're doing an alkie

00:35:38,270 --> 00:35:42,280
this is relevant weekend

00:35:43,630 --> 00:35:49,130
yes miss White's Martin's just covering

00:35:46,220 --> 00:35:54,830
me just a release process to use to beat

00:35:49,130 --> 00:35:56,690
the ERP there which is in the context

00:35:54,830 --> 00:35:59,480
the kernel really all the same here is

00:35:56,690 --> 00:36:03,110
that we wouldn't even me

00:35:59,480 --> 00:36:06,710
ERP they grab the kernel they package it

00:36:03,110 --> 00:36:08,450
for the RP and then they've got a bunch

00:36:06,710 --> 00:36:11,440
of all means of testing around the

00:36:08,450 --> 00:36:13,940
enterprise reference platform which

00:36:11,440 --> 00:36:16,250
obviously it's okay providing some

00:36:13,940 --> 00:36:19,940
coverage to the kernel was part of the

00:36:16,250 --> 00:36:20,860
distribution whine testing so they give

00:36:19,940 --> 00:36:24,170
it golf

00:36:20,860 --> 00:36:26,930
it's called they'll in our enterprise

00:36:24,170 --> 00:36:30,530
test we I'm not sure what's actually in

00:36:26,930 --> 00:36:32,210
it because the enterprise people how to

00:36:30,530 --> 00:36:34,430
look at how old actual working with the

00:36:32,210 --> 00:36:38,420
test be it's anybody here from that

00:36:34,430 --> 00:36:39,230
ain't good now I would that okay well

00:36:38,420 --> 00:36:41,300
there you got it

00:36:39,230 --> 00:36:43,900
but I do need to get their kernel from

00:36:41,300 --> 00:36:43,900
Spencer

00:36:50,280 --> 00:36:56,040
so basically it's open to questions from

00:36:53,040 --> 00:36:57,570
you all one thing we wanted to do is try

00:36:56,040 --> 00:37:01,650
to clarify what girls we're currently

00:36:57,570 --> 00:37:03,570
working with within a little context and

00:37:01,650 --> 00:37:06,420
what we're trying to do to validate

00:37:03,570 --> 00:37:08,040
those kernels and the question is is

00:37:06,420 --> 00:37:09,810
there other needs and there are the

00:37:08,040 --> 00:37:13,020
things that we're missing that people

00:37:09,810 --> 00:37:14,190
know about that we should hear about so

00:37:13,020 --> 00:37:18,110
this is an opportunity for you guys to

00:37:14,190 --> 00:37:18,110
tell us that give us any feedback

00:37:25,670 --> 00:37:31,890
strike building like a lot of the driver

00:37:28,050 --> 00:37:33,390
together using as modules his feet that

00:37:31,890 --> 00:37:34,950
try building a lot of those thermal

00:37:33,390 --> 00:37:54,210
drivers as audibles because their

00:37:34,950 --> 00:37:56,790
dependency problems and so one thing

00:37:54,210 --> 00:37:59,520
that I'm doing by myself is to build

00:37:56,790 --> 00:38:03,150
test an incredible number economist like

00:37:59,520 --> 00:38:06,839
adult x86 arm and I'm 54 at the moment

00:38:03,150 --> 00:38:09,060
several thousand well your promise today

00:38:06,839 --> 00:38:11,220
try to work out all the dependency

00:38:09,060 --> 00:38:13,170
issues and all the other time issues we

00:38:11,220 --> 00:38:16,640
see what build testing which catches a

00:38:13,170 --> 00:38:16,640
lot of things but it doesn't catch

00:38:20,030 --> 00:38:27,089
carnal CIA does boot testing for a bunch

00:38:25,200 --> 00:38:31,069
of modular phone things including old

00:38:27,089 --> 00:38:33,690
blood phone favor so something's working

00:38:31,069 --> 00:38:36,060
obviously on what compete contest so

00:38:33,690 --> 00:38:38,190
that rewards the binary hands up rather

00:38:36,060 --> 00:38:43,050
large I don't think we can actually

00:38:38,190 --> 00:38:45,210
running all my company no yeah we do

00:38:43,050 --> 00:38:46,680
you're right we don't brother we do runs

00:38:45,210 --> 00:38:50,670
so the other heirlooms which you have a

00:38:46,680 --> 00:38:52,619
monthly stuff eternal yes so we used me

00:38:50,670 --> 00:38:55,440
at some point a few years ago we tested

00:38:52,619 --> 00:38:57,690
what would take to get all my company

00:38:55,440 --> 00:39:01,050
actually booting under number part where

00:38:57,690 --> 00:39:03,780
came around a dozen options that we have

00:39:01,050 --> 00:39:05,120
the kind of like almost it would be a

00:39:03,780 --> 00:39:06,680
big-endian car

00:39:05,120 --> 00:39:10,550
the usual way that we have to build

00:39:06,680 --> 00:39:12,170
anything so that's the theory part

00:39:10,550 --> 00:39:15,230
driver for the console have you build as

00:39:12,170 --> 00:39:19,810
a module you don't have any console all

00:39:15,230 --> 00:39:19,810
good wishes what you do eventually

00:39:29,020 --> 00:39:33,060
other feedback requests

00:39:41,640 --> 00:39:48,810
if you any vision there is a fellow

00:39:45,770 --> 00:39:53,550
Daniel in Prague

00:39:48,810 --> 00:39:58,680
see you info on the plant bomb is lack

00:39:53,550 --> 00:40:01,380
of the kind of content many be given

00:39:58,680 --> 00:40:03,780
information about the CPU the systems

00:40:01,380 --> 00:40:09,750
are doing vision for four years and

00:40:03,780 --> 00:40:14,780
singer I just when I write it in a long

00:40:09,750 --> 00:40:19,380
time and we have to face it

00:40:14,780 --> 00:40:21,090
so we two things about this changing the

00:40:19,380 --> 00:40:23,670
proxy pu interface is always hard

00:40:21,090 --> 00:40:27,420
because we never know what might break

00:40:23,670 --> 00:40:32,030
it's a complex moment I think we don't

00:40:27,420 --> 00:40:35,340
change this because our society is

00:40:32,030 --> 00:40:39,780
expeditions many many applications

00:40:35,340 --> 00:40:47,610
depend on this is for example overstep

00:40:39,780 --> 00:40:50,990
and change it too much the other thing

00:40:47,610 --> 00:40:53,850
is the stock info so we have intercept s

00:40:50,990 --> 00:41:00,000
for many associates

00:40:53,850 --> 00:41:03,720
you can look into this devices SLC

00:41:00,000 --> 00:41:05,700
Espace SSE and there's a couple of

00:41:03,720 --> 00:41:08,370
stimulus properties you can look at and

00:41:05,700 --> 00:41:10,410
in this format so they're fairly

00:41:08,370 --> 00:41:13,710
standardized what you can put in there

00:41:10,410 --> 00:41:15,000
this from some some of them are less

00:41:13,710 --> 00:41:18,950
clear and others that we can add

00:41:15,000 --> 00:41:18,950
additional fields if needed

00:41:19,860 --> 00:41:27,620
for many efficient speed responsive

00:41:22,710 --> 00:41:31,890
applications run on as same as

00:41:27,620 --> 00:41:42,510
excellences so we we we trans month

00:41:31,890 --> 00:41:44,030
changes our application code on x86 and

00:41:42,510 --> 00:41:47,070
jet fighters are making sense unarmed

00:41:44,030 --> 00:41:50,970
and if we put things in there do we need

00:41:47,070 --> 00:41:58,680
to change the application code to parse

00:41:50,970 --> 00:42:00,870
whatever we added in there okay pretty

00:41:58,680 --> 00:42:08,940
good an example what field you're

00:42:00,870 --> 00:42:11,580
missing the question is from - oh I

00:42:08,940 --> 00:42:15,900
don't know I don't know thank you but I

00:42:11,580 --> 00:42:25,970
know this visualize for a long time

00:42:15,900 --> 00:42:30,390
Memphis fear in enemies at was this I

00:42:25,970 --> 00:42:33,830
think in an era we should collaborate to

00:42:30,390 --> 00:42:39,710
face that issue because we are pivotal

00:42:33,830 --> 00:42:39,710
source software ecosystem so

00:42:42,960 --> 00:42:46,280
[Music]

00:43:38,930 --> 00:43:42,010
[Music]

00:43:42,560 --> 00:43:47,220
so we could add another personality

00:43:44,940 --> 00:43:50,940
where we pretend we're an x86 machine at

00:43:47,220 --> 00:43:53,250
the end of the format of an x86 so that

00:43:50,940 --> 00:43:55,800
the navigational import from x86 you

00:43:53,250 --> 00:43:58,160
just said because nobody's fun would

00:43:55,800 --> 00:43:58,160
that help you

00:44:01,400 --> 00:44:07,260
we already have the code to partner to

00:44:04,170 --> 00:44:08,940
set make a different falling paper 20 we

00:44:07,260 --> 00:44:10,230
do I'm just wondering what we put in

00:44:08,940 --> 00:44:12,660
there and whether something would get

00:44:10,230 --> 00:44:14,520
very very upset but just getting

00:44:12,660 --> 00:44:16,770
information could coach SBU like

00:44:14,520 --> 00:44:18,540
hard-coded whatever every time the same

00:44:16,770 --> 00:44:20,250
thing as telling someone if you only

00:44:18,540 --> 00:44:22,770
wanted the x86 format that's up there

00:44:20,250 --> 00:44:24,030
about the contents but I'm worried Lee

00:44:22,770 --> 00:44:25,470
if they were looking and they care that

00:44:24,030 --> 00:44:27,180
much they do care about the cold fence

00:44:25,470 --> 00:44:33,480
and they might get upset but the photo

00:44:27,180 --> 00:44:35,070
life you just told them like if they're

00:44:33,480 --> 00:44:37,890
doing like I know things do try and

00:44:35,070 --> 00:44:39,900
parse on to enable I hope twice assembly

00:44:37,890 --> 00:44:41,550
code and things like that which we too

00:44:39,900 --> 00:44:46,950
annoying well if they actually manage to

00:44:41,550 --> 00:44:49,940
build is it easier solved with some

00:44:46,950 --> 00:44:49,940
specific yes

00:45:01,680 --> 00:45:06,710
other

00:45:03,510 --> 00:45:06,710
other questions comments

00:45:13,250 --> 00:45:18,310
okay thank you everyone thank you

00:45:21,860 --> 00:45:26,829

YouTube URL: https://www.youtube.com/watch?v=u97lu3xg5Yg


