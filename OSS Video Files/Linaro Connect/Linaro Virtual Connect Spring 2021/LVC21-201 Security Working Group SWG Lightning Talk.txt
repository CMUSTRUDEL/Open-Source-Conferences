Title: LVC21-201 Security Working Group SWG Lightning Talk
Publication date: 2021-04-15
Playlist: Linaro Virtual Connect Spring 2021
Description: 
	This is a general talk covering various topics and features that Security Working Group at Linar has been working with since the previous Connect. i.e., expect to hear more about the current status and what the future plan is for various topics.

We will cover updates for:
•. OP-TEE project - FF-A updates, secure partition and other new features
•. Widevine DRM Application
•. PKCS#11 library
•. AOSP - Keymaster and Gatekeeper updates
Captions: 
	00:00:04,319 --> 00:00:07,680
welcome to the presentation today

00:00:06,080 --> 00:00:09,599
where we'll be covering the various

00:00:07,680 --> 00:00:11,280
activities which the security working

00:00:09,599 --> 00:00:13,440
group has been involved in

00:00:11,280 --> 00:00:14,400
i'm rachika gupta the technical lead for

00:00:13,440 --> 00:00:17,600
the established

00:00:14,400 --> 00:00:19,920
group in lanaru in the agenda today

00:00:17,600 --> 00:00:21,039
i'll be covering in the general updates

00:00:19,920 --> 00:00:22,880
and i'll have

00:00:21,039 --> 00:00:24,560
various members from the team join in

00:00:22,880 --> 00:00:24,960
and talk about the activities they have

00:00:24,560 --> 00:00:27,680
been

00:00:24,960 --> 00:00:28,880
involved in and the next steps in the

00:00:27,680 --> 00:00:30,800
future

00:00:28,880 --> 00:00:33,200
one of the major projects uh which the

00:00:30,800 --> 00:00:34,960
swg team has been involved in is

00:00:33,200 --> 00:00:37,760
with the development and maintenance of

00:00:34,960 --> 00:00:39,920
opti in late 2019

00:00:37,760 --> 00:00:42,559
uh the ownership of opti was transferred

00:00:39,920 --> 00:00:44,640
from linaro to trustedformware.org

00:00:42,559 --> 00:00:46,879
which has been its governing body since

00:00:44,640 --> 00:00:49,680
then we at lenaro are still

00:00:46,879 --> 00:00:51,440
active contributors and are responsible

00:00:49,680 --> 00:00:53,280
for scheduling the releases

00:00:51,440 --> 00:00:55,039
with the security incident process and

00:00:53,280 --> 00:00:58,480
driving the roadmap

00:00:55,039 --> 00:00:59,120
having said that opti has a very active

00:00:58,480 --> 00:01:01,199
community

00:00:59,120 --> 00:01:03,840
upstream and they have support for

00:01:01,199 --> 00:01:07,040
approximately 30 different platforms

00:01:03,840 --> 00:01:09,360
and uh which which is available

00:01:07,040 --> 00:01:10,640
and an active contribution from various

00:01:09,360 --> 00:01:12,159
companies

00:01:10,640 --> 00:01:13,920
uh for some of the noteworthy

00:01:12,159 --> 00:01:16,400
contributions which have been recently

00:01:13,920 --> 00:01:18,479
merged in the opti project uh include

00:01:16,400 --> 00:01:20,000
the extension of the crypto firmware uh

00:01:18,479 --> 00:01:22,479
framework uh with the hardware

00:01:20,000 --> 00:01:26,560
accelerators by clement from nxp

00:01:22,479 --> 00:01:29,520
the sc-050 plug-and-play driver from

00:01:26,560 --> 00:01:31,280
foundry's group then we have the

00:01:29,520 --> 00:01:33,119
supplicant plug-in framework which has

00:01:31,280 --> 00:01:36,240
been added by alexander from

00:01:33,119 --> 00:01:38,560
uh on pressure and then the opti

00:01:36,240 --> 00:01:42,240
hardware rng driver as well as the d

00:01:38,560 --> 00:01:44,479
based trusted key support added by sumit

00:01:42,240 --> 00:01:45,840
for the project we have an a monthly

00:01:44,479 --> 00:01:48,880
meeting which is scheduled

00:01:45,840 --> 00:01:50,640
every last thursday of the month and the

00:01:48,880 --> 00:01:52,640
details of the meeting the previous

00:01:50,640 --> 00:01:54,720
meeting recordings and notes are

00:01:52,640 --> 00:01:56,399
available on the slide

00:01:54,720 --> 00:01:58,159
it's an open meeting where everyone is

00:01:56,399 --> 00:02:01,280
invited to join in and

00:01:58,159 --> 00:02:01,920
bring up any topic they wish to moving

00:02:01,280 --> 00:02:04,000
on to

00:02:01,920 --> 00:02:07,439
the next feature which we have been

00:02:04,000 --> 00:02:10,399
involved in the development of is pkcs11

00:02:07,439 --> 00:02:10,879
it was hong kong 2018 uh lenardo connect

00:02:10,399 --> 00:02:12,800
where

00:02:10,879 --> 00:02:14,800
uh the feature was first presented in

00:02:12,800 --> 00:02:17,520
the form of sks

00:02:14,800 --> 00:02:19,280
now the feature is being cleaned up

00:02:17,520 --> 00:02:22,720
reviewed and lots of patches have been

00:02:19,280 --> 00:02:23,840
merging upstream as pkcs 11t

00:02:22,720 --> 00:02:26,080
the features which are currently

00:02:23,840 --> 00:02:28,080
available include object management

00:02:26,080 --> 00:02:29,440
support session management support

00:02:28,080 --> 00:02:31,440
we have symmetric cipher support

00:02:29,440 --> 00:02:33,840
available key generation

00:02:31,440 --> 00:02:35,120
random number generation and they have a

00:02:33,840 --> 00:02:38,640
few pull requests like

00:02:35,120 --> 00:02:40,879
digest etc which are currently in review

00:02:38,640 --> 00:02:42,720
for testing uh tests have been added in

00:02:40,879 --> 00:02:45,040
pkcs 11 as x test

00:02:42,720 --> 00:02:47,760
and they're also using pkcs11 test suit

00:02:45,040 --> 00:02:50,959
as well as soft hsm for the testing

00:02:47,760 --> 00:02:51,920
next in future we have plans for adding

00:02:50,959 --> 00:02:54,959
the support for

00:02:51,920 --> 00:02:57,440
uh key wrapping unwrapping

00:02:54,959 --> 00:02:58,879
as well as rsa ecg support and other

00:02:57,440 --> 00:03:00,480
symmetric ciphers

00:02:58,879 --> 00:03:03,680
and the documentation also would be

00:03:00,480 --> 00:03:07,280
enhanced to add in the pkcs11

00:03:03,680 --> 00:03:08,080
library details in it here i would like

00:03:07,280 --> 00:03:11,440
to thank in

00:03:08,080 --> 00:03:14,319
active contributions from cable uh visa

00:03:11,440 --> 00:03:15,120
and uh robin and who have been very

00:03:14,319 --> 00:03:17,440
active in

00:03:15,120 --> 00:03:18,959
contributing to the pkcs element project

00:03:17,440 --> 00:03:20,560
visa recently added

00:03:18,959 --> 00:03:24,000
uh the support for tea based

00:03:20,560 --> 00:03:26,799
authentication support in pkcs11

00:03:24,000 --> 00:03:27,840
uh more details on the on the activities

00:03:26,799 --> 00:03:30,799
in this area

00:03:27,840 --> 00:03:31,519
and the design details etc are available

00:03:30,799 --> 00:03:34,319
in another

00:03:31,519 --> 00:03:34,959
connect presentation scheduled at 11 30

00:03:34,319 --> 00:03:37,519
utc

00:03:34,959 --> 00:03:38,640
on the on 23rd of march so please join

00:03:37,519 --> 00:03:40,959
us over there

00:03:38,640 --> 00:03:42,000
now i'll hand it over to jens who will

00:03:40,959 --> 00:03:45,519
be talking about

00:03:42,000 --> 00:03:46,400
uh the gpt apis and the secure

00:03:45,519 --> 00:03:50,480
partitions

00:03:46,400 --> 00:03:53,280
over the unions hi i'm james whitlander

00:03:50,480 --> 00:03:56,080
from linar security working group i'm

00:03:53,280 --> 00:03:58,159
also an opt-in maintainer

00:03:56,080 --> 00:03:59,120
today i'm going to talk about a few

00:03:58,159 --> 00:04:02,159
features i've been

00:03:59,120 --> 00:04:04,959
involved in recently global platform t

00:04:02,159 --> 00:04:05,519
compliance test starting from opt

00:04:04,959 --> 00:04:08,319
version

00:04:05,519 --> 00:04:10,480
3.11 we have updated the exchange

00:04:08,319 --> 00:04:13,439
framework to support the latest global

00:04:10,480 --> 00:04:16,160
platform t compliance test suite

00:04:13,439 --> 00:04:17,040
the xtest framework is normally used to

00:04:16,160 --> 00:04:20,000
run the

00:04:17,040 --> 00:04:23,040
regression test suit with this we gain

00:04:20,000 --> 00:04:23,040
one more test suit

00:04:23,280 --> 00:04:26,560
global platform runs a certification

00:04:25,759 --> 00:04:28,479
program

00:04:26,560 --> 00:04:30,160
where vendors can get the devices

00:04:28,479 --> 00:04:32,479
de-certified

00:04:30,160 --> 00:04:35,440
part of the certification program is to

00:04:32,479 --> 00:04:37,600
pass a certain amount of test cases

00:04:35,440 --> 00:04:38,639
one way to make it easier to pass the

00:04:37,600 --> 00:04:42,240
certification

00:04:38,639 --> 00:04:45,919
is to run and ensure that the

00:04:42,240 --> 00:04:48,080
gp test suit passes with no regressions

00:04:45,919 --> 00:04:49,840
these tests are included in our current

00:04:48,080 --> 00:04:52,400
ci ipod

00:04:49,840 --> 00:04:53,040
so it no longer just runs the publicly

00:04:52,400 --> 00:04:55,840
available

00:04:53,040 --> 00:04:56,639
regression suit but also the gp test

00:04:55,840 --> 00:04:58,800
suit

00:04:56,639 --> 00:05:01,840
when people are sending patches upstream

00:04:58,800 --> 00:05:01,840
to the opti project

00:05:02,160 --> 00:05:06,000
the gp suit also provides additional

00:05:05,120 --> 00:05:08,840
test coverage

00:05:06,000 --> 00:05:10,000
so it makes sense to run under all

00:05:08,840 --> 00:05:12,720
circumstances

00:05:10,000 --> 00:05:13,440
x-test can be compiled with the gp suit

00:05:12,720 --> 00:05:16,560
by adding

00:05:13,440 --> 00:05:19,120
gp package flag to make pointing to the

00:05:16,560 --> 00:05:22,720
previously downloaded gp test suite

00:05:19,120 --> 00:05:24,960
a 7-zip file note that the

00:05:22,720 --> 00:05:26,800
gp test suite is not free so you can't

00:05:24,960 --> 00:05:28,400
include it directly in the excess git

00:05:26,800 --> 00:05:30,880
repository

00:05:28,400 --> 00:05:32,400
the package must instead be supplied

00:05:30,880 --> 00:05:34,639
separately

00:05:32,400 --> 00:05:35,919
the package is free for gp members and

00:05:34,639 --> 00:05:41,360
can be purchased

00:05:35,919 --> 00:05:44,880
by non-members next stmm with opti

00:05:41,360 --> 00:05:48,000
standalone mm is an edk2 application

00:05:44,880 --> 00:05:50,720
used to store efi variables and hearing

00:05:48,000 --> 00:05:52,720
optical storage

00:05:50,720 --> 00:05:55,199
due to limitations of the currently

00:05:52,720 --> 00:05:58,160
available platforms it's only possible

00:05:55,199 --> 00:05:58,639
to run a single payload on the secure

00:05:58,160 --> 00:06:01,759
side

00:05:58,639 --> 00:06:01,759
secure year one

00:06:02,160 --> 00:06:06,240
as a stepping stone to future

00:06:03,840 --> 00:06:07,280
architectures leonardo in collaboration

00:06:06,240 --> 00:06:10,400
with arm

00:06:07,280 --> 00:06:13,120
have added support for running stm

00:06:10,400 --> 00:06:13,120
in opti

00:06:13,440 --> 00:06:17,840
the changes to stmm are quite small

00:06:16,160 --> 00:06:19,440
instead of running as a bare metal

00:06:17,840 --> 00:06:23,039
binary it runs

00:06:19,440 --> 00:06:25,919
sandboxed at security zero a special

00:06:23,039 --> 00:06:26,479
syscalls special syscalls are used to

00:06:25,919 --> 00:06:28,960
access

00:06:26,479 --> 00:06:31,919
the optic secure storage which in this

00:06:28,960 --> 00:06:35,039
case is implemented in rpmd

00:06:31,919 --> 00:06:37,120
inopd does a bit more changes

00:06:35,039 --> 00:06:38,319
support for running secure partitions

00:06:37,120 --> 00:06:41,600
sandbox that's

00:06:38,319 --> 00:06:43,680
securial zero or secure user mode a bit

00:06:41,600 --> 00:06:46,319
like a trusted application is run

00:06:43,680 --> 00:06:47,360
but with a different environment where

00:06:46,319 --> 00:06:49,599
the standard

00:06:47,360 --> 00:06:51,120
tsg scores have been replaced with

00:06:49,599 --> 00:06:55,360
special cs calls

00:06:51,120 --> 00:06:58,000
just for sdnm a certain ta interface

00:06:55,360 --> 00:06:58,639
has also been added to pass the mm

00:06:58,000 --> 00:07:02,000
messages

00:06:58,639 --> 00:07:05,039
back and forth next

00:07:02,000 --> 00:07:08,319
ffa and c competition updates

00:07:05,039 --> 00:07:11,840
ffa or flower framework for

00:07:08,319 --> 00:07:13,759
arm v8 a specification that describes a

00:07:11,840 --> 00:07:16,080
software architecture for

00:07:13,759 --> 00:07:18,080
virtualization in secure world as well

00:07:16,080 --> 00:07:20,400
as in non-secure world

00:07:18,080 --> 00:07:22,160
it includes a standardized way of

00:07:20,400 --> 00:07:24,720
passing messages between different

00:07:22,160 --> 00:07:28,400
components

00:07:24,720 --> 00:07:31,440
from arm v8.4 a secure el2

00:07:28,400 --> 00:07:32,880
is defined whereas secure hypervisor can

00:07:31,440 --> 00:07:36,479
reside

00:07:32,880 --> 00:07:39,199
this secure hypervisor is part of this

00:07:36,479 --> 00:07:40,000
partition management and is called spm

00:07:39,199 --> 00:07:43,199
core

00:07:40,000 --> 00:07:43,199
or spmc

00:07:43,280 --> 00:07:48,160
as a first step experimental support was

00:07:46,240 --> 00:07:52,000
added for this on the octa-pod

00:07:48,160 --> 00:07:55,360
to the qmo v8 the birth platform

00:07:52,000 --> 00:07:55,840
in this prototype we are replacing the

00:07:55,360 --> 00:07:58,160
raw

00:07:55,840 --> 00:08:01,199
smc based communication with calls to

00:07:58,160 --> 00:08:03,440
the ffa interface

00:08:01,199 --> 00:08:04,879
since this platform doesn't have a

00:08:03,440 --> 00:08:07,919
security l2

00:08:04,879 --> 00:08:11,680
we placed the spmc in opti

00:08:07,919 --> 00:08:12,479
at securil1 instead this has allowed us

00:08:11,680 --> 00:08:15,039
to try out

00:08:12,479 --> 00:08:17,440
protocol while keeping the other changes

00:08:15,039 --> 00:08:19,919
as simple as possible

00:08:17,440 --> 00:08:21,680
this was merged in june last year and

00:08:19,919 --> 00:08:24,240
has been updated a few times

00:08:21,680 --> 00:08:25,360
since then note that this is

00:08:24,240 --> 00:08:27,840
experimental

00:08:25,360 --> 00:08:30,319
and we will may still need to make

00:08:27,840 --> 00:08:32,880
changes to the api

00:08:30,319 --> 00:08:34,719
another ongoing effort is to add support

00:08:32,880 --> 00:08:39,279
to run secure partitions at

00:08:34,719 --> 00:08:42,399
secure l1 0 or secure user mode

00:08:39,279 --> 00:08:45,519
this resembles the previous sdna method

00:08:42,399 --> 00:08:46,720
but aims to follow the ffa specification

00:08:45,519 --> 00:08:48,560
instead

00:08:46,720 --> 00:08:51,360
it should for instance be possible to

00:08:48,560 --> 00:08:56,399
pop sdm to run as a proper secure

00:08:51,360 --> 00:08:56,399
el 0 sp when this is completed

00:08:56,720 --> 00:09:02,000
finally we are also working on running

00:08:59,760 --> 00:09:04,880
opti as a secure partition

00:09:02,000 --> 00:09:07,760
at securial one underneath hefnium as a

00:09:04,880 --> 00:09:10,399
secure hypervisor that secure u2

00:09:07,760 --> 00:09:12,320
this prototype is currently based on the

00:09:10,399 --> 00:09:14,399
ffa v4 patch set

00:09:12,320 --> 00:09:15,760
which was posted recently on the linux

00:09:14,399 --> 00:09:18,480
kernel mailing list by

00:09:15,760 --> 00:09:19,920
seti polar on top of these patches we

00:09:18,480 --> 00:09:22,560
have added a few patches

00:09:19,920 --> 00:09:23,040
to the opti driver replacing the smg

00:09:22,560 --> 00:09:27,120
calls

00:09:23,040 --> 00:09:27,120
with calls to the ffa interface instead

00:09:27,279 --> 00:09:34,560
this was all for me thank you listening

00:09:31,040 --> 00:09:37,279
thanks jens hi over the past year

00:09:34,560 --> 00:09:37,760
we have merged in optio as the scmi

00:09:37,279 --> 00:09:41,120
message

00:09:37,760 --> 00:09:42,160
drivers with supports for clocks reset

00:09:41,120 --> 00:09:45,519
controllers

00:09:42,160 --> 00:09:48,080
and voltage regulators smi is an

00:09:45,519 --> 00:09:50,640
interface between an os and a remote

00:09:48,080 --> 00:09:51,760
firmware that controls resources like

00:09:50,640 --> 00:09:54,880
sport domains

00:09:51,760 --> 00:09:57,680
sensors clocks and more the smi

00:09:54,880 --> 00:10:01,040
specification defines protocol messages

00:09:57,680 --> 00:10:04,160
between an sdmi client the os and an

00:10:01,040 --> 00:10:04,560
scmi server the firmware as i said there

00:10:04,160 --> 00:10:07,440
are

00:10:04,560 --> 00:10:08,079
protocols for various resources power

00:10:07,440 --> 00:10:10,399
domains

00:10:08,079 --> 00:10:12,240
clocks voltage regulators reset

00:10:10,399 --> 00:10:15,440
controllers and more

00:10:12,240 --> 00:10:16,160
messages allows clients to discover

00:10:15,440 --> 00:10:18,959
resources

00:10:16,160 --> 00:10:20,160
query and modify their states as

00:10:18,959 --> 00:10:23,600
enabling a clock

00:10:20,160 --> 00:10:26,640
or setting its frequency the fact is

00:10:23,600 --> 00:10:29,120
with optizer the hardware is partitioned

00:10:26,640 --> 00:10:31,519
between non-secure and secure world

00:10:29,120 --> 00:10:32,320
and because of that there are platforms

00:10:31,519 --> 00:10:34,640
where some

00:10:32,320 --> 00:10:35,760
system controls must be accessed from

00:10:34,640 --> 00:10:38,399
the secure world

00:10:35,760 --> 00:10:40,240
despite the resource itself may be used

00:10:38,399 --> 00:10:41,040
only by the sexual world or shared

00:10:40,240 --> 00:10:44,720
between the

00:10:41,040 --> 00:10:46,800
sexual world and non-sexual like pll for

00:10:44,720 --> 00:10:48,959
clocks for example

00:10:46,800 --> 00:10:50,959
for such resources the second world

00:10:48,959 --> 00:10:52,800
shall implement the driver and expose

00:10:50,959 --> 00:10:53,519
the software service to not set your

00:10:52,800 --> 00:10:56,320
world

00:10:53,519 --> 00:10:57,519
this is where hdmi may help in opting

00:10:56,320 --> 00:11:00,560
linux kernel has

00:10:57,519 --> 00:11:02,079
a cmi client driver and so on and we

00:11:00,560 --> 00:11:06,160
recently merged in

00:11:02,079 --> 00:11:09,600
new boot an smi client driver also

00:11:06,160 --> 00:11:12,560
with the cmi message drivers in ot

00:11:09,600 --> 00:11:13,360
a platform can easily implement an smi

00:11:12,560 --> 00:11:15,760
server

00:11:13,360 --> 00:11:16,560
the smi message drivers decode the

00:11:15,760 --> 00:11:18,880
message

00:11:16,560 --> 00:11:20,000
and calls the platform driver handler

00:11:18,880 --> 00:11:23,279
functions

00:11:20,000 --> 00:11:25,680
smi message drivers are rather simple

00:11:23,279 --> 00:11:26,720
they are dedicated to simple hdmi

00:11:25,680 --> 00:11:30,880
scenarios

00:11:26,720 --> 00:11:33,680
getting a clock setting a voltage level

00:11:30,880 --> 00:11:34,880
however smi provides supports for more

00:11:33,680 --> 00:11:36,800
complex scenarios

00:11:34,880 --> 00:11:38,560
with notifications and other

00:11:36,800 --> 00:11:41,760
asynchronous events

00:11:38,560 --> 00:11:42,480
linaro is working on reporting a

00:11:41,760 --> 00:11:45,040
full-fledged

00:11:42,480 --> 00:11:45,839
hdmi server in opti and other

00:11:45,040 --> 00:11:48,399
environments

00:11:45,839 --> 00:11:49,120
you can find soundnecks in this slides

00:11:48,399 --> 00:11:52,560
well

00:11:49,120 --> 00:11:55,279
thank you and our victor for some upt

00:11:52,560 --> 00:11:55,279
android news

00:11:55,760 --> 00:12:00,160
now we'll discuss some updates regarding

00:11:57,920 --> 00:12:01,440
eosb and key master for opt

00:12:00,160 --> 00:12:03,120
this is the current state of the

00:12:01,440 --> 00:12:04,079
reference usb bills for update

00:12:03,120 --> 00:12:06,560
developers

00:12:04,079 --> 00:12:08,000
we have a high key usb devil based on

00:12:06,560 --> 00:12:09,600
the master branch

00:12:08,000 --> 00:12:12,079
this is cloned towards the end of last

00:12:09,600 --> 00:12:13,760
year and integrated with an update based

00:12:12,079 --> 00:12:14,800
on version 3.9

00:12:13,760 --> 00:12:16,800
for this build there are some

00:12:14,800 --> 00:12:18,560
regressions in x tests and the google

00:12:16,800 --> 00:12:19,600
test suite for the keymaster version 3

00:12:18,560 --> 00:12:21,200
help

00:12:19,600 --> 00:12:23,200
we have a set of scripts that build the

00:12:21,200 --> 00:12:24,480
bootloader firmware and linux kernel

00:12:23,200 --> 00:12:26,880
along with the osb

00:12:24,480 --> 00:12:28,560
user space images due to tighter

00:12:26,880 --> 00:12:30,800
restrictions in the build system and

00:12:28,560 --> 00:12:33,200
general volatility of the master branch

00:12:30,800 --> 00:12:34,160
we also have a high key usb stable build

00:12:33,200 --> 00:12:36,720
based on pi

00:12:34,160 --> 00:12:38,480
version 9 integrated with an opti-build

00:12:36,720 --> 00:12:40,639
based on version 3.12

00:12:38,480 --> 00:12:42,399
which is the currently the latest

00:12:40,639 --> 00:12:43,519
release for this build there are no

00:12:42,399 --> 00:12:46,000
regressions

00:12:43,519 --> 00:12:47,519
the hiki 620 board is end-of-life and

00:12:46,000 --> 00:12:48,880
support for it has been removed from

00:12:47,519 --> 00:12:50,320
upstream usb

00:12:48,880 --> 00:12:53,120
so we don't have a current build for

00:12:50,320 --> 00:12:55,519
this our opti-based key master health

00:12:53,120 --> 00:12:57,839
implementation is at version 3.

00:12:55,519 --> 00:12:59,680
git keeper hell is at version 1. from

00:12:57,839 --> 00:13:01,360
time to time we get back reports from

00:12:59,680 --> 00:13:02,480
security researchers for our

00:13:01,360 --> 00:13:04,160
implementation

00:13:02,480 --> 00:13:07,440
you can find the advisories for these

00:13:04,160 --> 00:13:09,360
reports at the link shown here

00:13:07,440 --> 00:13:10,639
if you have an opti-enabled usb build

00:13:09,360 --> 00:13:13,040
for your platform

00:13:10,639 --> 00:13:14,800
and wish to enable firebase encryption

00:13:13,040 --> 00:13:15,920
you have to make some platform specific

00:13:14,800 --> 00:13:18,639
changes as well

00:13:15,920 --> 00:13:20,639
please refer to the send 19-226

00:13:18,639 --> 00:13:22,959
presentation for further details

00:13:20,639 --> 00:13:24,800
some details in the slides for example

00:13:22,959 --> 00:13:27,360
the path to the non-standard partition

00:13:24,800 --> 00:13:29,040
are outdated but the overall concepts

00:13:27,360 --> 00:13:31,040
and ideas still hold

00:13:29,040 --> 00:13:33,120
our testing strategy with regards to the

00:13:31,040 --> 00:13:35,760
reference bills is first and foremost

00:13:33,120 --> 00:13:37,519
test as usual we also run the standard

00:13:35,760 --> 00:13:38,800
google test suite for key master and

00:13:37,519 --> 00:13:40,480
gatekeeper health

00:13:38,800 --> 00:13:42,079
normally we just run the executable

00:13:40,480 --> 00:13:44,079
directly from the console but you can

00:13:42,079 --> 00:13:45,839
launch this test from the vts frameworks

00:13:44,079 --> 00:13:47,680
as well

00:13:45,839 --> 00:13:49,279
we also have our own google test suite

00:13:47,680 --> 00:13:51,360
that runs a couple of other tests that

00:13:49,279 --> 00:13:53,519
aren't in the standard google test suite

00:13:51,360 --> 00:13:54,880
for example verifying the minimum time

00:13:53,519 --> 00:13:57,279
between operations

00:13:54,880 --> 00:13:58,959
or maximum users per boot for each of

00:13:57,279 --> 00:14:00,800
the key that's generated

00:13:58,959 --> 00:14:04,079
these are configurable parameters that

00:14:00,800 --> 00:14:06,320
users can specify when generating a key

00:14:04,079 --> 00:14:07,839
we have the ability in our linear

00:14:06,320 --> 00:14:08,639
continuous integration and testing

00:14:07,839 --> 00:14:10,320
framework

00:14:08,639 --> 00:14:12,079
to automate both the building and

00:14:10,320 --> 00:14:14,000
testing of these reference bills

00:14:12,079 --> 00:14:15,199
so we're not only able to detect just

00:14:14,000 --> 00:14:17,680
test regressions but

00:14:15,199 --> 00:14:18,639
view errors as well for future

00:14:17,680 --> 00:14:20,720
improvements

00:14:18,639 --> 00:14:22,560
we would like to update the stable build

00:14:20,720 --> 00:14:24,240
to use the master branch

00:14:22,560 --> 00:14:26,639
and do development on it as well like

00:14:24,240 --> 00:14:27,920
all the other update repositories

00:14:26,639 --> 00:14:30,240
this way we don't have to maintain

00:14:27,920 --> 00:14:32,000
multiple versions of bills

00:14:30,240 --> 00:14:34,399
we also like to implement support for

00:14:32,000 --> 00:14:36,240
the opt driver in gki-enabled linux

00:14:34,399 --> 00:14:37,600
kernels

00:14:36,240 --> 00:14:39,519
since we currently don't have any

00:14:37,600 --> 00:14:41,199
sponsors for work in this area

00:14:39,519 --> 00:14:42,959
that the bills might remain in the

00:14:41,199 --> 00:14:43,760
current state for the near foreseeable

00:14:42,959 --> 00:14:46,959
future

00:14:43,760 --> 00:14:49,839
so community contributions are more

00:14:46,959 --> 00:14:49,839
welcome than ever

00:14:50,240 --> 00:14:54,320
okay hi i'm yukimik and i'm going to

00:14:52,560 --> 00:14:56,000
give a short update covering the work we

00:14:54,320 --> 00:14:57,839
have been doing with whitewine and also

00:14:56,000 --> 00:14:59,279
a few words about the security incident

00:14:57,839 --> 00:15:00,959
process

00:14:59,279 --> 00:15:02,560
for those not familiar with white wine

00:15:00,959 --> 00:15:03,920
it's the drm architecture running on

00:15:02,560 --> 00:15:06,000
android-based devices

00:15:03,920 --> 00:15:07,279
protecting copyrighted media from

00:15:06,000 --> 00:15:08,720
unauthorized modification and

00:15:07,279 --> 00:15:10,240
distribution

00:15:08,720 --> 00:15:13,920
sometimes you will also hear people say

00:15:10,240 --> 00:15:16,880
om crypto when referring to white wine

00:15:13,920 --> 00:15:18,399
lenara have with members created a white

00:15:16,880 --> 00:15:20,240
wine implementation a couple of years

00:15:18,399 --> 00:15:22,480
ago back then it was based on the oem

00:15:20,240 --> 00:15:25,360
crypto v11 specification

00:15:22,480 --> 00:15:27,519
however since the om crypto v14 had

00:15:25,360 --> 00:15:29,199
change is no longer backwards compatible

00:15:27,519 --> 00:15:30,320
and we weren't fully happy with the old

00:15:29,199 --> 00:15:33,279
implementation

00:15:30,320 --> 00:15:36,639
we decided to do a full rewrite and this

00:15:33,279 --> 00:15:38,800
took place roughly a year ago

00:15:36,639 --> 00:15:40,560
what we ended up with was a quite nice

00:15:38,800 --> 00:15:41,040
and clean white wine implementation for

00:15:40,560 --> 00:15:42,720
opti

00:15:41,040 --> 00:15:44,560
following the om crypto v15

00:15:42,720 --> 00:15:46,480
specification

00:15:44,560 --> 00:15:48,560
where all patches have been carefully

00:15:46,480 --> 00:15:50,320
reviewed and tested

00:15:48,560 --> 00:15:52,240
the implantation was done in

00:15:50,320 --> 00:15:54,160
collaboration with one of the lenora

00:15:52,240 --> 00:15:55,440
members and has been thoroughly tested

00:15:54,160 --> 00:15:57,600
on their hardware

00:15:55,440 --> 00:15:58,959
having said that what we believe is

00:15:57,600 --> 00:16:00,800
actually called this time is that we are

00:15:58,959 --> 00:16:02,000
able to run everything in a qmi-based

00:16:00,800 --> 00:16:04,800
environment

00:16:02,000 --> 00:16:06,959
and that includes the test suite from

00:16:04,800 --> 00:16:08,959
the whiteboard test itself

00:16:06,959 --> 00:16:11,279
and as a consequence of that you will be

00:16:08,959 --> 00:16:13,360
able to easily do debugging with gdb

00:16:11,279 --> 00:16:16,079
which of course simplifies bug hunting

00:16:13,360 --> 00:16:18,320
and overall development quite a bit

00:16:16,079 --> 00:16:20,160
likewise the turnaround time for an edit

00:16:18,320 --> 00:16:22,160
compiled deploy and runtime cycle is

00:16:20,160 --> 00:16:24,160
very short

00:16:22,160 --> 00:16:25,600
white wine comes with the white wine

00:16:24,160 --> 00:16:27,839
license agreement

00:16:25,600 --> 00:16:29,120
so it cannot be publicized as an open

00:16:27,839 --> 00:16:30,959
source project

00:16:29,120 --> 00:16:32,959
but lenaro happily shares the

00:16:30,959 --> 00:16:34,560
implementation with lenora members who

00:16:32,959 --> 00:16:37,839
already have signed a

00:16:34,560 --> 00:16:37,839
vla with google

00:16:38,399 --> 00:16:42,079
next thing let's talk a little bit about

00:16:41,600 --> 00:16:45,600
the

00:16:42,079 --> 00:16:47,279
security incident process when the

00:16:45,600 --> 00:16:49,199
opti project transitioned to trusted

00:16:47,279 --> 00:16:51,040
firmware project the security incident

00:16:49,199 --> 00:16:53,279
process changed a bit as well

00:16:51,040 --> 00:16:54,560
in the past we had a single group of

00:16:53,279 --> 00:16:56,800
trusted stakeholders

00:16:54,560 --> 00:16:58,639
and we had a hard 90-day embargo period

00:16:56,800 --> 00:17:00,560
for all issues

00:16:58,639 --> 00:17:02,240
the transformer project have tried to

00:17:00,560 --> 00:17:03,920
align the security incident process

00:17:02,240 --> 00:17:05,039
across the different sub projects like

00:17:03,920 --> 00:17:08,079
tfa opti

00:17:05,039 --> 00:17:10,000
embed tls etc so it should be the same

00:17:08,079 --> 00:17:12,240
procedure to report security issues no

00:17:10,000 --> 00:17:14,240
matter the project

00:17:12,240 --> 00:17:15,360
there are now two categories of

00:17:14,240 --> 00:17:17,760
stakeholders

00:17:15,360 --> 00:17:20,240
ess and trusted stakeholders trusted

00:17:17,760 --> 00:17:21,839
firmware decides who should go where

00:17:20,240 --> 00:17:23,760
but most companies would end up in the

00:17:21,839 --> 00:17:26,079
trusted stakeholders category

00:17:23,760 --> 00:17:28,799
but in some cases companies might end up

00:17:26,079 --> 00:17:30,960
in the ess list as well

00:17:28,799 --> 00:17:32,880
the difference is that the ess is

00:17:30,960 --> 00:17:34,799
notified and can request an embargo

00:17:32,880 --> 00:17:36,720
lasting up to 14 days before the trust

00:17:34,799 --> 00:17:38,880
stakeholder gets notified

00:17:36,720 --> 00:17:40,640
after the ass embargo the trusted

00:17:38,880 --> 00:17:43,120
stakeholders gets notified and can

00:17:40,640 --> 00:17:45,280
request a similar embargo if needed

00:17:43,120 --> 00:17:47,280
a big difference for the opti project is

00:17:45,280 --> 00:17:47,679
that the mitigation patches can end up

00:17:47,280 --> 00:17:50,960
on

00:17:47,679 --> 00:17:52,640
the public tree sooner than what it did

00:17:50,960 --> 00:17:54,720
in the whole process

00:17:52,640 --> 00:17:56,160
but having i said i mean we never intend

00:17:54,720 --> 00:18:00,000
to publicize patches so

00:17:56,160 --> 00:18:02,120
that we put the opti users at risk

00:18:00,000 --> 00:18:03,280
even though the process is documented at

00:18:02,120 --> 00:18:05,600
tristanfarmer.org

00:18:03,280 --> 00:18:06,720
we believe it can be a bit hard to

00:18:05,600 --> 00:18:08,799
follow so

00:18:06,720 --> 00:18:11,200
we will try to simplify a little bit

00:18:08,799 --> 00:18:13,760
more in the near future

00:18:11,200 --> 00:18:15,440
to become a trusted stakeholder and get

00:18:13,760 --> 00:18:17,360
on the list

00:18:15,440 --> 00:18:18,799
the company needs basically to send a

00:18:17,360 --> 00:18:20,559
registration request

00:18:18,799 --> 00:18:21,840
and exactly how that can be done and

00:18:20,559 --> 00:18:24,400
what it means can

00:18:21,840 --> 00:18:26,840
be found at one of the trusted firmware

00:18:24,400 --> 00:18:30,559
security pages

00:18:26,840 --> 00:18:32,160
thanks so here is a list of few items

00:18:30,559 --> 00:18:33,760
in our backlog which we are planning to

00:18:32,160 --> 00:18:35,280
work in near future

00:18:33,760 --> 00:18:37,600
one is to extend the support for

00:18:35,280 --> 00:18:40,320
virtualization which exists in opti

00:18:37,600 --> 00:18:40,640
uh thanks to voldemort from from etam

00:18:40,320 --> 00:18:43,200
for

00:18:40,640 --> 00:18:44,559
adding the support we want to get this

00:18:43,200 --> 00:18:47,840
uh

00:18:44,559 --> 00:18:49,679
this this feature working on chemo and

00:18:47,840 --> 00:18:51,039
add it to our ci's for the convenience

00:18:49,679 --> 00:18:53,600
of others

00:18:51,039 --> 00:18:55,200
next we want to explore how the mediator

00:18:53,600 --> 00:18:57,600
the mediator

00:18:55,200 --> 00:19:00,240
which exists for the support in zen can

00:18:57,600 --> 00:19:03,840
be converted to an ffa based mediator

00:19:00,240 --> 00:19:05,679
which is 30 independent and then

00:19:03,840 --> 00:19:07,679
further work is required on the support

00:19:05,679 --> 00:19:08,799
to explore how the hardware resources

00:19:07,679 --> 00:19:11,200
can be shared

00:19:08,799 --> 00:19:12,960
there has been a proposal from voldemort

00:19:11,200 --> 00:19:14,480
for the same we want to continue and

00:19:12,960 --> 00:19:16,720
extend that work

00:19:14,480 --> 00:19:18,160
and any future work related with ffa for

00:19:16,720 --> 00:19:20,880
the same

00:19:18,160 --> 00:19:22,880
then uh this plan to add support for

00:19:20,880 --> 00:19:23,760
asynchronous notification to the secure

00:19:22,880 --> 00:19:25,760
world

00:19:23,760 --> 00:19:29,440
well this would be for the pre version

00:19:25,760 --> 00:19:31,600
8.4 8.4 course which do not use ffa

00:19:29,440 --> 00:19:32,960
and then there's another area which

00:19:31,600 --> 00:19:35,120
we're planning to explore that is

00:19:32,960 --> 00:19:37,919
related with the functional safety

00:19:35,120 --> 00:19:40,799
so now with the use of opti in

00:19:37,919 --> 00:19:44,000
automotive as well as industrial

00:19:40,799 --> 00:19:45,840
areas we have seen requests coming where

00:19:44,000 --> 00:19:47,039
people have been asking us about the

00:19:45,840 --> 00:19:50,320
compliance for

00:19:47,039 --> 00:19:53,440
opti so we want to look at that explore

00:19:50,320 --> 00:19:55,520
how or whether it is possible to make

00:19:53,440 --> 00:19:58,240
optic functional safety compliant sl

00:19:55,520 --> 00:20:00,960
compliant what it would take to do that

00:19:58,240 --> 00:20:03,120
any contribution and ideas on any topics

00:20:00,960 --> 00:20:03,550
on any of these topics or new topics are

00:20:03,120 --> 00:20:04,720
welcome

00:20:03,550 --> 00:20:07,520
[Music]

00:20:04,720 --> 00:20:08,720
here i would also like to thank all the

00:20:07,520 --> 00:20:10,480
members who have been

00:20:08,720 --> 00:20:12,159
actively contributing to the opti

00:20:10,480 --> 00:20:14,159
projects who operates a very active

00:20:12,159 --> 00:20:16,799
project on github and we have lots of

00:20:14,159 --> 00:20:18,720
lots of people contributing to the same

00:20:16,799 --> 00:20:20,000
special thanks to jerome who is one of

00:20:18,720 --> 00:20:21,679
the very active

00:20:20,000 --> 00:20:23,280
maintainers and contributors to the

00:20:21,679 --> 00:20:26,880
project

00:20:23,280 --> 00:20:29,039
so thanks for listening to us today and

00:20:26,880 --> 00:20:30,720
here is a list of sessions uh which are

00:20:29,039 --> 00:20:32,799
planned in connect and are related with

00:20:30,720 --> 00:20:35,120
security and opti

00:20:32,799 --> 00:20:37,760
which we've compiled for you now we're

00:20:35,120 --> 00:20:46,080
open to any questions which you may have

00:20:37,760 --> 00:20:46,080

YouTube URL: https://www.youtube.com/watch?v=VU9j-zf2r4E


