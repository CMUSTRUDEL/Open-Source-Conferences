Title: LVC21-101 LCG Lightning Talks
Publication date: 2021-04-15
Playlist: Linaro Virtual Connect Spring 2021
Description: 
	Will cover a number quick talks by the Linaro Consumer Group developers. 

Topics we'll likely hit are:
•  Abooting v3 support
•  Recent developments on db845c & AOSP dev boards
•  Status update on form-factor devices like PocoF1
•  Integrating Docker into Lava testing
Captions: 
	00:00:01,360 --> 00:00:05,839
all righty uh welcome everyone

00:00:03,040 --> 00:00:06,160
um my name is john stultz and uh i along

00:00:05,839 --> 00:00:07,759
with

00:00:06,160 --> 00:00:09,360
ahmed pandir and junk and lou will be

00:00:07,759 --> 00:00:10,480
covering lenaro consumer group's

00:00:09,360 --> 00:00:12,320
lightning talks

00:00:10,480 --> 00:00:13,599
um just a quick agenda we only have

00:00:12,320 --> 00:00:14,480
about 25 minutes so we're going to be

00:00:13,599 --> 00:00:16,720
kind of going

00:00:14,480 --> 00:00:17,520
quickly uh i'm going to cover the recent

00:00:16,720 --> 00:00:20,400
developments on

00:00:17,520 --> 00:00:21,760
aosp dev boards uh ahmet will be talking

00:00:20,400 --> 00:00:24,240
about the android boot image

00:00:21,760 --> 00:00:25,199
v3 support on the dragonboard 845 as

00:00:24,240 --> 00:00:27,519
well as

00:00:25,199 --> 00:00:29,039
updates on form factor devices and then

00:00:27,519 --> 00:00:31,279
yonken will be talking about integrating

00:00:29,039 --> 00:00:33,840
docker into lava testing

00:00:31,279 --> 00:00:34,800
um all right so starting off on aosp dev

00:00:33,840 --> 00:00:37,840
board updates

00:00:34,800 --> 00:00:39,760
um so first of all why do we put all

00:00:37,840 --> 00:00:42,320
this effort on aosp dev boards

00:00:39,760 --> 00:00:44,079
um well these boards are very valuable

00:00:42,320 --> 00:00:46,320
testing platforms that allow us to test

00:00:44,079 --> 00:00:47,920
a large number of kernels with the very

00:00:46,320 --> 00:00:50,480
latest aosp user land

00:00:47,920 --> 00:00:51,600
uh we basically are working on against

00:00:50,480 --> 00:00:53,760
android 414

00:00:51,600 --> 00:00:55,600
all the way through android mainline

00:00:53,760 --> 00:00:57,440
doing regular testing uh

00:00:55,600 --> 00:00:59,600
basically ensuring that as the lts

00:00:57,440 --> 00:01:01,039
updates land in those trees

00:00:59,600 --> 00:01:02,399
we don't see any regressions so that

00:01:01,039 --> 00:01:04,320
vendors can be more confident when

00:01:02,399 --> 00:01:05,519
they're deploying uh those updates to

00:01:04,320 --> 00:01:08,560
their products

00:01:05,519 --> 00:01:10,880
in the field um additionally we do uh

00:01:08,560 --> 00:01:12,560
regular testing of aosp with lynas's

00:01:10,880 --> 00:01:14,960
upstream tree um

00:01:12,560 --> 00:01:16,159
and we do find a number of regressions

00:01:14,960 --> 00:01:18,479
uh regularly

00:01:16,159 --> 00:01:19,680
um in the most recent merge window we

00:01:18,479 --> 00:01:24,320
actually caught two

00:01:19,680 --> 00:01:26,400
block device issues where basically

00:01:24,320 --> 00:01:27,600
i guess encrypted partitions and uh

00:01:26,400 --> 00:01:30,320
dynamic partitions

00:01:27,600 --> 00:01:31,759
both failed at boot um and we were able

00:01:30,320 --> 00:01:33,119
to quickly bisect these down

00:01:31,759 --> 00:01:35,840
uh provide that feedback to the

00:01:33,119 --> 00:01:38,079
maintainers um get those things fixed uh

00:01:35,840 --> 00:01:38,960
before even rc1 was released and so this

00:01:38,079 --> 00:01:40,560
was really uh

00:01:38,960 --> 00:01:41,920
nice to be able to kind of find and

00:01:40,560 --> 00:01:42,799
solve these things before they were

00:01:41,920 --> 00:01:45,520
affecting really

00:01:42,799 --> 00:01:46,960
anyone but outside of testing i think

00:01:45,520 --> 00:01:48,479
these boards are really useful as

00:01:46,960 --> 00:01:50,320
development vehicles

00:01:48,479 --> 00:01:51,759
and you know for example they've been

00:01:50,320 --> 00:01:54,799
used we've used them for

00:01:51,759 --> 00:01:56,479
gki prototyping um in the early days and

00:01:54,799 --> 00:01:58,320
and basically helped uh

00:01:56,479 --> 00:02:00,240
really validate that the approach that

00:01:58,320 --> 00:02:01,840
gki was using um

00:02:00,240 --> 00:02:03,759
was going to work across different

00:02:01,840 --> 00:02:06,320
vendor socs um

00:02:03,759 --> 00:02:07,280
additionally uh you know we use these

00:02:06,320 --> 00:02:09,360
heavily in the

00:02:07,280 --> 00:02:10,800
recent work transitioning from ion to

00:02:09,360 --> 00:02:12,160
dna buff heaps

00:02:10,800 --> 00:02:13,840
but i think what's most important is

00:02:12,160 --> 00:02:15,760
that because these devices can run

00:02:13,840 --> 00:02:18,080
mainline kernels

00:02:15,760 --> 00:02:19,440
we can do a lot of our development or

00:02:18,080 --> 00:02:21,520
android focus development

00:02:19,440 --> 00:02:22,640
against those mainline kernels and be

00:02:21,520 --> 00:02:25,280
able to submit those changes

00:02:22,640 --> 00:02:26,959
confidently upstream and this moves uh

00:02:25,280 --> 00:02:28,640
android development sort of into a more

00:02:26,959 --> 00:02:29,360
upstream first approach where we're able

00:02:28,640 --> 00:02:31,360
to kind of

00:02:29,360 --> 00:02:33,519
get the work done upstream get the code

00:02:31,360 --> 00:02:35,599
merge and then back port patches

00:02:33,519 --> 00:02:37,360
rather than kind of working against an

00:02:35,599 --> 00:02:38,720
old tree and then creating that

00:02:37,360 --> 00:02:39,680
technical debt that has to be carried

00:02:38,720 --> 00:02:42,720
forward

00:02:39,680 --> 00:02:45,200
um so on to the specific boards uh the

00:02:42,720 --> 00:02:46,800
dragon board 845 or rb3

00:02:45,200 --> 00:02:48,720
as well as the hiki 960 are the two

00:02:46,800 --> 00:02:51,120
boards that we are actively working on

00:02:48,720 --> 00:02:52,640
um we've recently on both boards we've

00:02:51,120 --> 00:02:56,000
gotten the android 12

00:02:52,640 --> 00:02:58,480
510 kernel support in place um also both

00:02:56,000 --> 00:03:00,319
of the boards uh boot with gki v2 and so

00:02:58,480 --> 00:03:03,120
we're doing regular gki testing

00:03:00,319 --> 00:03:04,959
as well as the kabi upkeep which in the

00:03:03,120 --> 00:03:06,239
days before the kbi is

00:03:04,959 --> 00:03:08,640
is kind of locked down can be

00:03:06,239 --> 00:03:10,959
significant um

00:03:08,640 --> 00:03:12,800
on the dragon board 845 uh also thanks

00:03:10,959 --> 00:03:14,480
to the qualcomm landing team uh we have

00:03:12,800 --> 00:03:18,080
full functionality upstream

00:03:14,480 --> 00:03:20,400
um on the board as a 511. um

00:03:18,080 --> 00:03:22,159
additionally the gki module enablement

00:03:20,400 --> 00:03:25,200
has mostly gotten upstream

00:03:22,159 --> 00:03:26,959
um a boot image v3 support uh which i

00:03:25,200 --> 00:03:29,920
will cover later has landed as well for

00:03:26,959 --> 00:03:32,640
the board um um it's also enabled proper

00:03:29,920 --> 00:03:34,480
vert ab support for the device and um it

00:03:32,640 --> 00:03:35,840
also uh recently because the board has

00:03:34,480 --> 00:03:39,599
uh open graphics

00:03:35,840 --> 00:03:42,319
he's updated mesa to uh 20.3.4 i believe

00:03:39,599 --> 00:03:43,760
um and and that was as if up until the

00:03:42,319 --> 00:03:47,200
last couple days was the latest

00:03:43,760 --> 00:03:48,799
so um

00:03:47,200 --> 00:03:50,720
also uh while the board has open

00:03:48,799 --> 00:03:52,799
graphics it also has open video decoding

00:03:50,720 --> 00:03:54,560
so we're really excited to try to get

00:03:52,799 --> 00:03:56,959
the v4l2 integration in

00:03:54,560 --> 00:03:58,159
asp um working and so that's something

00:03:56,959 --> 00:04:00,879
that we're putting a lot of

00:03:58,159 --> 00:04:02,159
attention on right now um additionally

00:04:00,879 --> 00:04:03,439
the mini gbm

00:04:02,159 --> 00:04:05,360
groulock is something that we're hoping

00:04:03,439 --> 00:04:07,680
to switch to in order to align with

00:04:05,360 --> 00:04:08,640
both the cuttlefish and chrome os uh

00:04:07,680 --> 00:04:11,120
usage

00:04:08,640 --> 00:04:12,400
um and then uh buddha's recovery and

00:04:11,120 --> 00:04:12,959
fast boot d support is something we're

00:04:12,400 --> 00:04:16,400
looking at

00:04:12,959 --> 00:04:17,919
enabling uh in order to improve the gpi

00:04:16,400 --> 00:04:20,560
testing

00:04:17,919 --> 00:04:22,000
and then finally the last a few gki

00:04:20,560 --> 00:04:24,479
module enablement patches

00:04:22,000 --> 00:04:26,000
we want to make sure those get upstream

00:04:24,479 --> 00:04:27,440
over on the hiking 960

00:04:26,000 --> 00:04:29,840
other than the topics i've already

00:04:27,440 --> 00:04:31,360
covered the usb functionality has gotten

00:04:29,840 --> 00:04:33,680
upstream recently um

00:04:31,360 --> 00:04:35,280
we have a couple small fixes for

00:04:33,680 --> 00:04:37,680
reliability that uh

00:04:35,280 --> 00:04:38,880
are still pending but out of the box it

00:04:37,680 --> 00:04:41,360
should just work

00:04:38,880 --> 00:04:43,120
um and then also uh dynamic partitions

00:04:41,360 --> 00:04:44,320
and vert ad support have both been uh

00:04:43,120 --> 00:04:45,680
enabled on the board

00:04:44,320 --> 00:04:47,360
to bring it kind of more in line with

00:04:45,680 --> 00:04:49,360
modern devices um

00:04:47,360 --> 00:04:50,880
as far as work in progress uh the system

00:04:49,360 --> 00:04:52,400
uncached heap is something we are

00:04:50,880 --> 00:04:54,240
working on pushing up stream

00:04:52,400 --> 00:04:56,160
and we want to enable in the hiking 960

00:04:54,240 --> 00:04:58,160
graph because that perform that provides

00:04:56,160 --> 00:04:59,919
a nice performance improvement

00:04:58,160 --> 00:05:01,600
um and unfortunately we still have quite

00:04:59,919 --> 00:05:03,199
a bit of out of tree code

00:05:01,600 --> 00:05:05,360
on the display driver and the audio

00:05:03,199 --> 00:05:06,400
driver and so trying to get any of those

00:05:05,360 --> 00:05:09,440
upstream would be

00:05:06,400 --> 00:05:11,919
nice as well now um

00:05:09,440 --> 00:05:14,320
you know there's still we're going on uh

00:05:11,919 --> 00:05:14,639
to enable uh additional boards in aosp

00:05:14,320 --> 00:05:15,840
but

00:05:14,639 --> 00:05:17,759
unfortunately we can't talk about that

00:05:15,840 --> 00:05:18,720
just yet uh so do watch the space we'll

00:05:17,759 --> 00:05:21,680
be excited to share

00:05:18,720 --> 00:05:25,120
that as soon as we can um and with that

00:05:21,680 --> 00:05:28,240
i'm gonna pass it on to amit

00:05:25,120 --> 00:05:30,080
thank you john hi this is amit i'll

00:05:28,240 --> 00:05:32,160
start with a quick update on the boot

00:05:30,080 --> 00:05:33,919
image header version 3 support

00:05:32,160 --> 00:05:36,479
which we have recently added for dragon

00:05:33,919 --> 00:05:39,840
board 845c

00:05:36,479 --> 00:05:39,840
next slide please

00:05:40,160 --> 00:05:44,080
so a quick background on version 3

00:05:42,000 --> 00:05:46,320
header in version 3

00:05:44,080 --> 00:05:47,919
when the specific information is

00:05:46,320 --> 00:05:48,720
factored out of the traditional boot

00:05:47,919 --> 00:05:51,680
image

00:05:48,720 --> 00:05:52,400
and moved into a new vendor boot image

00:05:51,680 --> 00:05:54,479
so now

00:05:52,400 --> 00:05:55,759
we have a generic or vendor neutral

00:05:54,479 --> 00:05:58,000
boot.img

00:05:55,759 --> 00:06:00,319
and a vendor specific vendor underscore

00:05:58,000 --> 00:06:01,840
boot.img

00:06:00,319 --> 00:06:04,000
boot image only contains generic

00:06:01,840 --> 00:06:07,199
components like the kernel image

00:06:04,000 --> 00:06:09,520
and a ram disk with gk icon modules

00:06:07,199 --> 00:06:11,840
the vendor boot image which is loaded

00:06:09,520 --> 00:06:15,440
from a new vendor boot partition now

00:06:11,840 --> 00:06:17,440
uh contains vendor device free blog

00:06:15,440 --> 00:06:20,080
of ender ram disk with platform specific

00:06:17,440 --> 00:06:23,039
kernel modules

00:06:20,080 --> 00:06:24,639
and sorry and platform specific

00:06:23,039 --> 00:06:28,400
information like page size

00:06:24,639 --> 00:06:30,240
load addresses kernel command line etc

00:06:28,400 --> 00:06:31,919
a version 3 header is a requirement for

00:06:30,240 --> 00:06:34,080
gki compatibility

00:06:31,919 --> 00:06:37,520
and therefore must for android devices

00:06:34,080 --> 00:06:40,240
launching with 5.4 on newer kernels

00:06:37,520 --> 00:06:40,240
next slide please

00:06:42,240 --> 00:06:45,919
just like the older boot version formats

00:06:44,400 --> 00:06:46,960
bootloader does most of the heavy

00:06:45,919 --> 00:06:49,599
lifting here

00:06:46,960 --> 00:06:50,639
it concatenate the two randix two ram

00:06:49,599 --> 00:06:53,759
disc cpio

00:06:50,639 --> 00:06:54,720
archives and the resulting overlaid cpu

00:06:53,759 --> 00:06:56,800
archive

00:06:54,720 --> 00:06:58,080
will be used as a init timer fs during

00:06:56,800 --> 00:06:59,919
boot

00:06:58,080 --> 00:07:01,919
both the ram disks must be compressed in

00:06:59,919 --> 00:07:02,960
the same format for the concatenation to

00:07:01,919 --> 00:07:05,919
work

00:07:02,960 --> 00:07:08,000
and must be lz4 compressed for gki

00:07:05,919 --> 00:07:10,960
compliance

00:07:08,000 --> 00:07:11,520
for dragon board 845c we were able to

00:07:10,960 --> 00:07:13,759
reuse

00:07:11,520 --> 00:07:15,440
code aurora's boot image version 3

00:07:13,759 --> 00:07:17,280
implementation

00:07:15,440 --> 00:07:19,680
many thanks to mayank grover who has

00:07:17,280 --> 00:07:22,880
helped us debug the bring up issues

00:07:19,680 --> 00:07:24,800
due to paid size mismatch and

00:07:22,880 --> 00:07:25,919
recently android boot image header

00:07:24,800 --> 00:07:29,440
version force

00:07:25,919 --> 00:07:31,440
is also spotted in usb version 4

00:07:29,440 --> 00:07:33,360
supports packaging multiple vendor ram

00:07:31,440 --> 00:07:35,520
disks in vendor board image

00:07:33,360 --> 00:07:38,240
and let the bootloader select one or

00:07:35,520 --> 00:07:40,639
more ram disks to load at the boot time

00:07:38,240 --> 00:07:45,039
this is similar to how vendors pack

00:07:40,639 --> 00:07:47,759
multiple device develops in ddb.img

00:07:45,039 --> 00:07:47,759
next slide please

00:07:48,639 --> 00:07:51,919
next up on today's agenda is the status

00:07:51,199 --> 00:07:54,879
update on

00:07:51,919 --> 00:07:57,360
running mainline kernel and aosp on form

00:07:54,879 --> 00:07:59,840
factor devices

00:07:57,360 --> 00:07:59,840
next slide please

00:08:00,879 --> 00:08:04,639
so uh running main line on form factor

00:08:02,720 --> 00:08:07,120
devices uh we have been

00:08:04,639 --> 00:08:08,560
chasing this topic for a long time and

00:08:07,120 --> 00:08:10,639
please check out our previous

00:08:08,560 --> 00:08:12,080
presentations and blogs for the

00:08:10,639 --> 00:08:15,039
rationale and

00:08:12,080 --> 00:08:15,759
our previous efforts the key takeaways

00:08:15,039 --> 00:08:18,319
are

00:08:15,759 --> 00:08:19,680
that it helps us avoid development board

00:08:18,319 --> 00:08:22,639
functionality gap

00:08:19,680 --> 00:08:24,800
between development and testing it also

00:08:22,639 --> 00:08:25,759
helps us validate and compare upstream

00:08:24,800 --> 00:08:29,919
solutions

00:08:25,759 --> 00:08:32,720
with downstream vendor solutions

00:08:29,919 --> 00:08:32,720
next slide please

00:08:37,200 --> 00:08:42,000
as of version factor 12 rc2 we have

00:08:40,479 --> 00:08:45,600
basic features like

00:08:42,000 --> 00:08:47,920
wi-fi bluetooth audio touchscreen etc

00:08:45,600 --> 00:08:50,399
working

00:08:47,920 --> 00:08:52,399
running mainline kernel on poco f1 phone

00:08:50,399 --> 00:08:54,080
is a community driven project

00:08:52,399 --> 00:08:56,160
we are collaborating with a number of

00:08:54,080 --> 00:08:57,920
different groups and it's really a

00:08:56,160 --> 00:08:59,600
community effort that we are really

00:08:57,920 --> 00:09:01,600
appreciative of

00:08:59,600 --> 00:09:02,640
a special shout out to lunaro's qualcomm

00:09:01,600 --> 00:09:05,519
lending team

00:09:02,640 --> 00:09:06,959
post market os and so mainline guys and

00:09:05,519 --> 00:09:08,959
mesa developers

00:09:06,959 --> 00:09:11,360
for helping us debug and enable new

00:09:08,959 --> 00:09:11,360
features

00:09:12,000 --> 00:09:14,720
next slide please

00:09:18,399 --> 00:09:22,399
there is a decent progress on

00:09:19,600 --> 00:09:24,080
upstreaming poco f1 features as well

00:09:22,399 --> 00:09:25,440
bluetooth just works straight out of the

00:09:24,080 --> 00:09:28,160
main line

00:09:25,440 --> 00:09:28,880
display driver panel sorry display panel

00:09:28,160 --> 00:09:30,640
and

00:09:28,880 --> 00:09:32,800
lab ibb regulators are already

00:09:30,640 --> 00:09:34,640
upstreamed only dts patches are

00:09:32,800 --> 00:09:36,720
remaining

00:09:34,640 --> 00:09:39,839
wi-fi and backlight drivers need a small

00:09:36,720 --> 00:09:43,600
workaround to get them to working

00:09:39,839 --> 00:09:46,000
gpi dma driver got upstream recently

00:09:43,600 --> 00:09:47,680
but i2c and spi user support is

00:09:46,000 --> 00:09:50,560
currently under review

00:09:47,680 --> 00:09:54,080
we need this pet set for touch screen

00:09:50,560 --> 00:09:54,080
and audio amplifiers to work

00:09:54,240 --> 00:10:00,000
sdm845 sound card and codecs is already

00:09:57,600 --> 00:10:02,800
upstreamed as well

00:10:00,000 --> 00:10:04,079
and only dts patches are remaining

00:10:02,800 --> 00:10:07,200
touchscreen driver is

00:10:04,079 --> 00:10:09,040
upon lcml for review

00:10:07,200 --> 00:10:11,040
also these are the batches of features

00:10:09,040 --> 00:10:12,000
which i actively use and track in our

00:10:11,040 --> 00:10:13,600
builds

00:10:12,000 --> 00:10:15,519
and there may be many more relevant

00:10:13,600 --> 00:10:18,160
drivers and fixes which are

00:10:15,519 --> 00:10:18,959
either already upstreamed or are in

00:10:18,160 --> 00:10:21,600
progress

00:10:18,959 --> 00:10:22,320
and which i may not be aware of and as

00:10:21,600 --> 00:10:24,880
you can see

00:10:22,320 --> 00:10:26,000
uh we have got contributions from not

00:10:24,880 --> 00:10:30,240
just from dinaro

00:10:26,000 --> 00:10:32,880
or from a specific company

00:10:30,240 --> 00:10:34,880
you can see the two community

00:10:32,880 --> 00:10:37,600
collaboration here

00:10:34,880 --> 00:10:40,240
which we really appreciate as a mainline

00:10:37,600 --> 00:10:47,839
poco f1 user

00:10:40,240 --> 00:10:47,839
next slide please

00:10:50,800 --> 00:10:54,959
speaking of in progress features there

00:10:53,200 --> 00:10:56,399
are few exciting features currently

00:10:54,959 --> 00:10:58,959
under progress

00:10:56,399 --> 00:10:59,600
andrew is working on getting qrtr mode

00:10:58,959 --> 00:11:02,480
and support

00:10:59,600 --> 00:11:05,360
enabled and modern manager for mobile

00:11:02,480 --> 00:11:07,680
broadband connectivity to work

00:11:05,360 --> 00:11:09,279
joel from post market os is working on a

00:11:07,680 --> 00:11:11,519
fuel gauge driver

00:11:09,279 --> 00:11:13,440
it is still a work in progress but basic

00:11:11,519 --> 00:11:17,120
features like battery charge

00:11:13,440 --> 00:11:18,880
health status temperature and

00:11:17,120 --> 00:11:20,640
charger hot plug detection is already

00:11:18,880 --> 00:11:22,640
working

00:11:20,640 --> 00:11:25,600
celeb again from post market os is

00:11:22,640 --> 00:11:27,040
working on the haptex driver

00:11:25,600 --> 00:11:29,600
and then there's a to-do list for

00:11:27,040 --> 00:11:30,480
interested linux asp developers to join

00:11:29,600 --> 00:11:31,839
in

00:11:30,480 --> 00:11:35,360
do check out the readme page for

00:11:31,839 --> 00:11:38,240
instructions and how to get started

00:11:35,360 --> 00:11:40,160
that is all from my site over to yonken

00:11:38,240 --> 00:11:43,839
for how to use docker for

00:11:40,160 --> 00:11:43,839
lava android test setup

00:11:46,800 --> 00:11:51,279
hello everyone i'm yunji leo from the

00:11:49,600 --> 00:11:54,000
nano consumer group

00:11:51,279 --> 00:11:55,600
here i will give one short introduction

00:11:54,000 --> 00:11:58,079
about

00:11:55,600 --> 00:12:00,480
enabling the doc method for the android

00:11:58,079 --> 00:12:03,839
testing

00:12:00,480 --> 00:12:03,839
next next slide

00:12:04,959 --> 00:12:11,440
about the about the docker method

00:12:08,399 --> 00:12:12,320
antonio had talked about it before you

00:12:11,440 --> 00:12:15,200
could

00:12:12,320 --> 00:12:17,519
uh check the session for the details by

00:12:15,200 --> 00:12:20,639
following the link

00:12:17,519 --> 00:12:23,920
for us we could test

00:12:20,639 --> 00:12:27,120
locally with the the exact same host

00:12:23,920 --> 00:12:28,320
environment as on the lava side by using

00:12:27,120 --> 00:12:32,240
the same

00:12:28,320 --> 00:12:35,760
docker image this will help us

00:12:32,240 --> 00:12:38,639
for failure reproducing

00:12:35,760 --> 00:12:41,200
and it is possible for us to maintain

00:12:38,639 --> 00:12:46,160
the darker image

00:12:41,200 --> 00:12:49,040
out of the lava framework by ourselves

00:12:46,160 --> 00:12:50,320
this will help to reduce the request to

00:12:49,040 --> 00:12:53,279
the

00:12:50,320 --> 00:12:54,800
lava team and the lab team for travel

00:12:53,279 --> 00:12:58,720
failures

00:12:54,800 --> 00:13:02,480
which we often help with our axi

00:12:58,720 --> 00:13:04,480
method to uni to enable the docker

00:13:02,480 --> 00:13:07,279
method with the lava gels

00:13:04,480 --> 00:13:10,480
we need to prepare the docker image and

00:13:07,279 --> 00:13:14,560
upload them to the

00:13:10,480 --> 00:13:18,079
docker hub site set first

00:13:14,560 --> 00:13:19,920
here are the links

00:13:18,079 --> 00:13:21,360
which you could refer to for the

00:13:19,920 --> 00:13:23,760
instructions and

00:13:21,360 --> 00:13:24,880
the links to the docker file and the

00:13:23,760 --> 00:13:29,040
docker image

00:13:24,880 --> 00:13:29,680
we use for test we also need to update

00:13:29,040 --> 00:13:32,839
the job

00:13:29,680 --> 00:13:34,000
templates which are used to generate the

00:13:32,839 --> 00:13:38,800
jobs

00:13:34,000 --> 00:13:41,839
definitions most of the necessary

00:13:38,800 --> 00:13:43,120
changes are described in the our

00:13:41,839 --> 00:13:46,079
document here

00:13:43,120 --> 00:13:47,279
you could refer to for us we need to

00:13:46,079 --> 00:13:51,519
have

00:13:47,279 --> 00:13:51,519
two deploy actions one

00:13:51,680 --> 00:13:57,040
is for the download downloads and

00:13:55,199 --> 00:13:58,959
another one is for the first board

00:13:57,040 --> 00:14:02,720
deploy deployment

00:13:58,959 --> 00:14:06,320
as we need to use the

00:14:02,720 --> 00:14:11,279
boot image file in the test actions

00:14:06,320 --> 00:14:14,399
after the deployment we have enabled

00:14:11,279 --> 00:14:15,040
the docker method for some projects of

00:14:14,399 --> 00:14:18,480
the

00:14:15,040 --> 00:14:21,680
for the high key hiking density and db84

00:14:18,480 --> 00:14:24,240
both but there are 302

00:14:21,680 --> 00:14:26,399
major issues under discussion with the

00:14:24,240 --> 00:14:30,880
lava team

00:14:26,399 --> 00:14:34,480
first one is with the tier x15 sport

00:14:30,880 --> 00:14:37,680
which will deploy the same image fail

00:14:34,480 --> 00:14:40,800
to two different slot positions

00:14:37,680 --> 00:14:43,199
and another one

00:14:40,800 --> 00:14:44,000
is about running the message command

00:14:43,199 --> 00:14:47,600
inside the

00:14:44,000 --> 00:14:50,959
docker container which will be helpful

00:14:47,600 --> 00:14:50,959
for the debugging purpose

00:14:51,120 --> 00:14:54,880
okay that's all from me

00:14:56,399 --> 00:14:59,839
thank you

00:15:00,399 --> 00:15:04,959
alrighty i think that's it for us uh

00:15:02,320 --> 00:15:09,839
thanks so much and i guess we'll go to

00:15:04,959 --> 00:15:09,839

YouTube URL: https://www.youtube.com/watch?v=MWQUQdeS-00


