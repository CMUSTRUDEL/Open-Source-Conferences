Title: SFO15 : Suresh Gopalakrishnan AMD Interview
Publication date: 2015-10-07
Playlist: Linaro Connect San Francisco 2015
Description: 
	
Captions: 
	00:00:05,960 --> 00:00:12,059
I'm under a Gallo VP of segment groups

00:00:09,420 --> 00:00:14,160
at linaro we are here at the arm server

00:00:12,059 --> 00:00:16,710
ecosystem day linaro connect in

00:00:14,160 --> 00:00:18,960
burlingame and we have a full day back

00:00:16,710 --> 00:00:20,670
of very interesting sessions from all

00:00:18,960 --> 00:00:23,850
the key players of the arm server

00:00:20,670 --> 00:00:26,039
ecosystem and i'm here with suresh

00:00:23,850 --> 00:00:30,029
gopalakrishnan general manager at AMD

00:00:26,039 --> 00:00:32,309
welcome the AMD opteron platform is

00:00:30,029 --> 00:00:35,190
playing a key role here today will you

00:00:32,309 --> 00:00:39,059
tell us more about your arm server

00:00:35,190 --> 00:00:40,800
platform the Seattle lupron processor is

00:00:39,059 --> 00:00:43,950
something that we built from the ground

00:00:40,800 --> 00:00:46,649
up to serve the server market right so

00:00:43,950 --> 00:00:49,410
we selected the memory components the

00:00:46,649 --> 00:00:50,910
i/o components all to make sure that

00:00:49,410 --> 00:00:54,480
they are server class and can be

00:00:50,910 --> 00:00:56,969
implemented in a server that can be

00:00:54,480 --> 00:01:00,329
widely deployed within internet scale

00:00:56,969 --> 00:01:02,879
data centers your AMD opteron is a very

00:01:00,329 --> 00:01:05,670
powerful platform even the most powerful

00:01:02,879 --> 00:01:08,369
platform without software is not very

00:01:05,670 --> 00:01:12,810
useful how are you addressing the

00:01:08,369 --> 00:01:16,950
software enablement gabadh it as soon as

00:01:12,810 --> 00:01:19,729
we decided that we wanted to get put an

00:01:16,950 --> 00:01:21,750
arm server processor into our portfolio

00:01:19,729 --> 00:01:23,700
you know based on our previous

00:01:21,750 --> 00:01:26,670
experience we knew that we had to build

00:01:23,700 --> 00:01:28,710
a whole software ecosystem to to address

00:01:26,670 --> 00:01:30,329
just this and that's why I made the

00:01:28,710 --> 00:01:32,369
statement it's all about software right

00:01:30,329 --> 00:01:34,619
so you need to make a couple of things

00:01:32,369 --> 00:01:36,960
one is you want to make sure that the

00:01:34,619 --> 00:01:40,049
workloads are all ported the internodes

00:01:36,960 --> 00:01:42,329
of interests are all ported on to on to

00:01:40,049 --> 00:01:43,740
the processor and to enable that you

00:01:42,329 --> 00:01:45,960
need to make sure that this easily

00:01:43,740 --> 00:01:47,700
adopted by the developers so you want to

00:01:45,960 --> 00:01:49,350
make sure that you make their life as

00:01:47,700 --> 00:01:51,450
easy as possible right you need to make

00:01:49,350 --> 00:01:54,210
sure that things are upstream properly

00:01:51,450 --> 00:01:56,430
you need to make sure that your firmware

00:01:54,210 --> 00:01:58,469
is standard space and something that was

00:01:56,430 --> 00:02:00,030
familiar to them and also you need to

00:01:58,469 --> 00:02:01,590
address the manageability of these

00:02:00,030 --> 00:02:03,210
servers because you're going to put them

00:02:01,590 --> 00:02:05,100
into an environment where servers

00:02:03,210 --> 00:02:06,570
already exist and they are managed in a

00:02:05,100 --> 00:02:08,399
certain way so you need to make sure

00:02:06,570 --> 00:02:09,989
that that piece of the software

00:02:08,399 --> 00:02:11,700
component is also addressed that's why

00:02:09,989 --> 00:02:13,770
you have hardware chips are very

00:02:11,700 --> 00:02:16,110
important that's what I sell but

00:02:13,770 --> 00:02:17,700
at the same time it is software that

00:02:16,110 --> 00:02:20,970
makes everything marks so we have a very

00:02:17,700 --> 00:02:22,650
good realization of that in in the

00:02:20,970 --> 00:02:24,930
modern data centers we are running very

00:02:22,650 --> 00:02:28,230
complex workloads web servers databases

00:02:24,930 --> 00:02:30,300
big data analytics it's very important

00:02:28,230 --> 00:02:33,590
to design the hardware platform right so

00:02:30,300 --> 00:02:36,000
that the workloads can run efficiently

00:02:33,590 --> 00:02:37,920
can you tell us more about your

00:02:36,000 --> 00:02:39,870
experience in porting such complex

00:02:37,920 --> 00:02:42,930
workloads on a new architecture light

00:02:39,870 --> 00:02:45,480
yarn server the you know when you start

00:02:42,930 --> 00:02:47,250
looking at the the early stages of an

00:02:45,480 --> 00:02:49,290
ecosystem and you're trying to get a lot

00:02:47,250 --> 00:02:50,400
of these workloads supported over one of

00:02:49,290 --> 00:02:52,110
the things that you have to do is that

00:02:50,400 --> 00:02:55,520
you have to upfront make sure that

00:02:52,110 --> 00:02:58,080
you're providing portability I'd

00:02:55,520 --> 00:03:00,060
multi-chip portability if you would so

00:02:58,080 --> 00:03:03,630
for any software that is done so that's

00:03:00,060 --> 00:03:06,890
one part two is that you'd be completely

00:03:03,630 --> 00:03:09,810
instruction set compliant so which we

00:03:06,890 --> 00:03:12,000
intended to do and we are and then the

00:03:09,810 --> 00:03:14,520
next thing is to make sure that you have

00:03:12,000 --> 00:03:16,770
the right development tools to port

00:03:14,520 --> 00:03:19,200
these applications so once all of these

00:03:16,770 --> 00:03:21,990
fall tree came around it was fairly easy

00:03:19,200 --> 00:03:24,030
for us to get the first ports done right

00:03:21,990 --> 00:03:26,580
first sports are always easy you get

00:03:24,030 --> 00:03:29,190
that you get that working and then given

00:03:26,580 --> 00:03:31,260
that the emulation the debuggers the

00:03:29,190 --> 00:03:33,420
compilers we were able to then further

00:03:31,260 --> 00:03:35,850
go and optimize those those workloads so

00:03:33,420 --> 00:03:39,030
the porting process was relatively easy

00:03:35,850 --> 00:03:41,280
for us once we had designed the the

00:03:39,030 --> 00:03:43,530
processors with the right ideas in mind

00:03:41,280 --> 00:03:45,209
what are your initiatives to enable the

00:03:43,530 --> 00:03:47,790
developers community and make sure that

00:03:45,209 --> 00:03:50,280
your MD up turn is widely adopted when

00:03:47,790 --> 00:03:52,290
we first started out you know this is a

00:03:50,280 --> 00:03:54,480
long process right so you want to make

00:03:52,290 --> 00:03:56,970
sure that the key ecosystem partners

00:03:54,480 --> 00:03:59,000
software ecosystem partners like

00:03:56,970 --> 00:04:02,010
operating system folks and tools

00:03:59,000 --> 00:04:04,709
engineers have a development platform

00:04:02,010 --> 00:04:06,840
that they can they can work on and for

00:04:04,709 --> 00:04:10,230
that purpose we introduced our own so

00:04:06,840 --> 00:04:13,950
that we can make sure that the the key

00:04:10,230 --> 00:04:15,660
people who are working on the essential

00:04:13,950 --> 00:04:17,220
pieces of software have a development

00:04:15,660 --> 00:04:19,320
platform so that's what we accomplished

00:04:17,220 --> 00:04:22,350
with our own platform it was a limited

00:04:19,320 --> 00:04:23,880
amount of processors that we sent out to

00:04:22,350 --> 00:04:27,090
the key developers in open source

00:04:23,880 --> 00:04:29,430
community as well as tools the narrow

00:04:27,090 --> 00:04:32,430
community as well so once we got that

00:04:29,430 --> 00:04:35,699
going we had the basic fundamental tools

00:04:32,430 --> 00:04:38,720
done then we are now introducing you saw

00:04:35,699 --> 00:04:40,710
the introduction of soft iron

00:04:38,720 --> 00:04:42,479
introducing their development platform

00:04:40,710 --> 00:04:44,220
so you will see that development

00:04:42,479 --> 00:04:46,979
platform coming in that is going to be

00:04:44,220 --> 00:04:51,449
something that is rack-mountable you

00:04:46,979 --> 00:04:54,479
know it is remote on/off debug kind of

00:04:51,449 --> 00:04:56,570
environment and then you know that

00:04:54,479 --> 00:04:59,340
that's still at the enterprise level

00:04:56,570 --> 00:05:00,810
development so the next step to enable

00:04:59,340 --> 00:05:03,419
it is to make sure that we introduce

00:05:00,810 --> 00:05:05,639
some lower-cost boards that are going to

00:05:03,419 --> 00:05:08,240
be widely used by a large number of

00:05:05,639 --> 00:05:11,040
developers and to that end we are

00:05:08,240 --> 00:05:13,530
introducing the we are working with your

00:05:11,040 --> 00:05:17,090
team to bring out the Husky board which

00:05:13,530 --> 00:05:22,169
meets the linaro enterprise standard and

00:05:17,090 --> 00:05:24,260
this will be you know my goal is to make

00:05:22,169 --> 00:05:28,199
sure that this one is the de facto

00:05:24,260 --> 00:05:30,600
development board for for the larger

00:05:28,199 --> 00:05:32,610
community you already have a lot of

00:05:30,600 --> 00:05:36,840
experience in working with open source

00:05:32,610 --> 00:05:38,610
and Colonel upstream communities how how

00:05:36,840 --> 00:05:42,660
has it been so far cooperating with

00:05:38,610 --> 00:05:44,280
linara in the arm communities when we we

00:05:42,660 --> 00:05:45,360
have a lot of experience from our x86

00:05:44,280 --> 00:05:47,010
days working with the open source

00:05:45,360 --> 00:05:48,930
community we contribute to the Linux

00:05:47,010 --> 00:05:51,599
kernel we constantly are up streaming

00:05:48,930 --> 00:05:54,810
various pieces of whether it's a driver

00:05:51,599 --> 00:05:56,310
or whether it is new processor related

00:05:54,810 --> 00:05:58,200
stuff we are always up streaming things

00:05:56,310 --> 00:06:00,960
from our x86 side so we have a lot of

00:05:58,200 --> 00:06:05,160
experience doing that we bought that

00:06:00,960 --> 00:06:06,479
into our work on on arm we knew that we

00:06:05,160 --> 00:06:09,030
couldn't be able to do that all by

00:06:06,479 --> 00:06:11,639
ourselves so we joined linaro almost

00:06:09,030 --> 00:06:14,039
right from the start when we decided to

00:06:11,639 --> 00:06:16,139
get into the into the arm syrup business

00:06:14,039 --> 00:06:17,970
and from then it has been a very

00:06:16,139 --> 00:06:19,440
cooperative environment we have

00:06:17,970 --> 00:06:21,889
representatives and on various

00:06:19,440 --> 00:06:25,260
committees we have folks who are working

00:06:21,889 --> 00:06:28,889
we have our volunteers working with the

00:06:25,260 --> 00:06:31,320
linaro community and as a hole between

00:06:28,889 --> 00:06:32,880
md and the linaro community we have up

00:06:31,320 --> 00:06:35,310
streamed a wide variety of things onto

00:06:32,880 --> 00:06:37,800
the open source various open-source

00:06:35,310 --> 00:06:39,450
trees and the linux can be i want to

00:06:37,800 --> 00:06:40,860
specifically thank the Linux community

00:06:39,450 --> 00:06:43,050
who kind of came to

00:06:40,860 --> 00:06:45,060
gather and said hey these guys know how

00:06:43,050 --> 00:06:46,919
this to be AB streamed let's make sure

00:06:45,060 --> 00:06:49,530
that they are doing it right and then

00:06:46,919 --> 00:06:53,400
getting it into the into the into the

00:06:49,530 --> 00:06:55,199
various trees and it has been you know a

00:06:53,400 --> 00:06:58,560
very interesting collaboration between

00:06:55,199 --> 00:07:00,900
AMD linaro and the overall open source

00:06:58,560 --> 00:07:02,909
community to get this thank you sir

00:07:00,900 --> 00:07:04,740
Ashton has been a great pleasure to have

00:07:02,909 --> 00:07:07,909
you with us today thank you very much

00:07:04,740 --> 00:07:07,909

YouTube URL: https://www.youtube.com/watch?v=mkma82GKIbs


