Title: LVC20 201 Boot Time Tracing With Extra Boot Config
Publication date: 2020-10-07
Playlist: Linaro Virtual Connect 2020
Description: 
	Boot-time tracing is one of the latest Linux kernel tracing proposal, which allows us to trace kernel booting with full tracing features, like per-event filters and triggers, histograms, instances, dynamic-events etc. Along with the boot-time tracing the kernel command-line interface is also expanded by Extra Boot Config (XBC) so that user can specify complex boot-time settings with structured-key value configuration file.
This talk will show you what the boot-time tracing and the extra boot config provide, the advantages and how you can use it for your boot-time features. 
https://connect.linaro.org/resources/lvc20/lvc20-201/
Captions: 
	00:00:00,799 --> 00:00:05,600
okay thank you very much uh for

00:00:03,120 --> 00:00:06,560
uh joining this session uh i will uh

00:00:05,600 --> 00:00:08,800
today i will

00:00:06,560 --> 00:00:10,639
uh show you the third the canal booth

00:00:08,800 --> 00:00:14,080
i'm tracing

00:00:10,639 --> 00:00:16,400
so uh um

00:00:14,080 --> 00:00:18,240
i'm massam jiramats i'm working for

00:00:16,400 --> 00:00:22,240
rhino and leonardo members

00:00:18,240 --> 00:00:25,439
as a tech lead for a learning team

00:00:22,240 --> 00:00:28,640
and i'm a maintainer of the k-pros and

00:00:25,439 --> 00:00:31,920
related dressing features and tours

00:00:28,640 --> 00:00:36,239
so today's talk is mainly for the

00:00:31,920 --> 00:00:36,239
the let's say my maintenance work

00:00:36,880 --> 00:00:42,840
so um first um

00:00:40,160 --> 00:00:44,320
why we need our the kind of boot time

00:00:42,840 --> 00:00:47,600
tracing

00:00:44,320 --> 00:00:48,480
um we are we need to sometimes we need

00:00:47,600 --> 00:00:52,399
to debug

00:00:48,480 --> 00:00:55,920
and analyze the the boot time errors and

00:00:52,399 --> 00:00:59,039
the performance issues so that uh uh

00:00:55,920 --> 00:01:02,000
in that case we would like to um

00:00:59,039 --> 00:01:03,039
measure the performance statistics of

00:01:02,000 --> 00:01:05,920
the kano boot

00:01:03,039 --> 00:01:07,200
and or they analyze that the driver

00:01:05,920 --> 00:01:09,920
initializes from

00:01:07,200 --> 00:01:11,680
periods and debugging the boot process

00:01:09,920 --> 00:01:15,439
or something like that

00:01:11,680 --> 00:01:15,439
so um

00:01:15,520 --> 00:01:19,200
what we have we already actually already

00:01:18,720 --> 00:01:21,920
have

00:01:19,200 --> 00:01:24,320
some uh carnal command line options for

00:01:21,920 --> 00:01:27,439
the tracing

00:01:24,320 --> 00:01:31,040
there are um for example their uh

00:01:27,439 --> 00:01:34,320
setup options stress options or they uh

00:01:31,040 --> 00:01:37,920
output their uh the trace point event

00:01:34,320 --> 00:01:41,439
to pre to print k or um

00:01:37,920 --> 00:01:45,119
enable events or after setting the

00:01:41,439 --> 00:01:48,240
tracers and tracing uh

00:01:45,119 --> 00:01:50,799
this filtering is for the

00:01:48,240 --> 00:01:52,240
function dress filters k probes or

00:01:50,799 --> 00:01:55,119
something like that

00:01:52,240 --> 00:01:56,159
you can find uh these are options in a

00:01:55,119 --> 00:01:59,439
documentation

00:01:56,159 --> 00:02:03,360
uh the kernel parameters text

00:01:59,439 --> 00:02:06,079
um and uh here is some example of the

00:02:03,360 --> 00:02:07,040
uh the karnaugh commander and parameters

00:02:06,079 --> 00:02:10,239
in the

00:02:07,040 --> 00:02:15,200
uh glove configuration

00:02:10,239 --> 00:02:15,200
file so you can see the long

00:02:15,520 --> 00:02:22,080
commands lines uh here so that

00:02:19,040 --> 00:02:24,400
uh you can other uh options

00:02:22,080 --> 00:02:27,040
uh commands that are the command line

00:02:24,400 --> 00:02:27,040
parameters

00:02:27,680 --> 00:02:34,480
however uh we have some

00:02:30,800 --> 00:02:35,440
limitations one is actually the side

00:02:34,480 --> 00:02:37,519
limitation

00:02:35,440 --> 00:02:39,040
the kind of command line size is

00:02:37,519 --> 00:02:42,360
sometimes small

00:02:39,040 --> 00:02:43,519
uh it actually that the minimum size is

00:02:42,360 --> 00:02:45,360
00:02:43,519 --> 00:02:46,879
it's depends on the architecture

00:02:45,360 --> 00:02:49,840
implementation

00:02:46,879 --> 00:02:51,599
and also we have to write it down to the

00:02:49,840 --> 00:02:54,400
single line

00:02:51,599 --> 00:02:55,760
so that there uh some architecture

00:02:54,400 --> 00:02:58,720
actually support that uh

00:02:55,760 --> 00:03:00,640
like a four gigabyte thing along the uh

00:02:58,720 --> 00:03:03,360
the kaneo command line but uh

00:03:00,640 --> 00:03:04,000
who want to read the uh four kilobyte

00:03:03,360 --> 00:03:08,000
length

00:03:04,000 --> 00:03:12,239
single line of options it's very hard to

00:03:08,000 --> 00:03:15,040
read the complicated uh options

00:03:12,239 --> 00:03:15,840
and uh only the uh actually that are the

00:03:15,040 --> 00:03:19,200
current

00:03:15,840 --> 00:03:24,480
options only supports the the partial

00:03:19,200 --> 00:03:24,480
partial features of the actress

00:03:24,720 --> 00:03:32,480
because after this has so many features

00:03:28,879 --> 00:03:33,760
like a par event filters and pi band

00:03:32,480 --> 00:03:37,280
actions

00:03:33,760 --> 00:03:38,000
and also our instances and the recently

00:03:37,280 --> 00:03:41,599
we

00:03:38,000 --> 00:03:44,640
introduced the histograms this one

00:03:41,599 --> 00:03:48,000
these are very long neither very long

00:03:44,640 --> 00:03:50,480
and complex settings

00:03:48,000 --> 00:03:53,280
so it's too compressed to light into the

00:03:50,480 --> 00:03:56,640
single command line

00:03:53,280 --> 00:04:00,239
so how we can solve this

00:03:56,640 --> 00:04:03,439
issue this limitation

00:04:00,239 --> 00:04:07,360
we have some uh options the first option

00:04:03,439 --> 00:04:10,560
is using the initial fs but uh uh in a

00:04:07,360 --> 00:04:13,519
like a uh lighting the shell scripting

00:04:10,560 --> 00:04:16,320
in italian fs but it's too late for the

00:04:13,519 --> 00:04:19,440
carnal boot time tracing

00:04:16,320 --> 00:04:21,680
so uh the second option is

00:04:19,440 --> 00:04:22,479
expanding that command a panel command

00:04:21,680 --> 00:04:25,919
line but

00:04:22,479 --> 00:04:28,240
it's not easy to write down as i said

00:04:25,919 --> 00:04:29,759
it's not easy to write down the complex

00:04:28,240 --> 00:04:32,720
tracing options

00:04:29,759 --> 00:04:32,720
on the booter order

00:04:33,120 --> 00:04:41,360
and so uh the next one needs are uh

00:04:36,960 --> 00:04:44,720
using uh the structured boot time data

00:04:41,360 --> 00:04:47,840
like a device trees actually

00:04:44,720 --> 00:04:48,800
uh the depository because it's a well

00:04:47,840 --> 00:04:52,800
documented

00:04:48,800 --> 00:04:55,280
and structured and actually i tried to

00:04:52,800 --> 00:04:56,080
implement that the device uh the boot

00:04:55,280 --> 00:04:59,199
time tracing

00:04:56,080 --> 00:05:01,600
on the device three in version one and

00:04:59,199 --> 00:05:04,720
version two series

00:05:01,600 --> 00:05:06,320
uh however it's knocked because device

00:05:04,720 --> 00:05:08,880
three is only for the

00:05:06,320 --> 00:05:11,199
hardware description not for the

00:05:08,880 --> 00:05:14,560
software settings

00:05:11,199 --> 00:05:17,919
so finally i uh decided to introduce

00:05:14,560 --> 00:05:21,360
new boot time data it's a

00:05:17,919 --> 00:05:24,240
extra boot calculation

00:05:21,360 --> 00:05:26,880
so there what the extra boot

00:05:24,240 --> 00:05:26,880
configuration

00:05:27,199 --> 00:05:33,840
uh it's a um new carnal command line

00:05:30,320 --> 00:05:37,440
extension like uh um i call

00:05:33,840 --> 00:05:41,199
it a boot config it's a

00:05:37,440 --> 00:05:44,320
brain ascii text uh tree structure

00:05:41,199 --> 00:05:46,039
uh keyboard list it's uh like a

00:05:44,320 --> 00:05:48,479
structured

00:05:46,039 --> 00:05:48,880
systcontrolcon.com so that you can see

00:05:48,479 --> 00:05:52,240
that

00:05:48,880 --> 00:05:56,479
the example uh some keywords

00:05:52,240 --> 00:05:59,600
equal values and also we can uh

00:05:56,479 --> 00:06:03,840
consolidate uh several

00:05:59,600 --> 00:06:03,840
settings in with the braces

00:06:03,919 --> 00:06:10,319
this one is loaded with a

00:06:06,960 --> 00:06:13,600
initial d image when boot

00:06:10,319 --> 00:06:16,240
and in kernel it also

00:06:13,600 --> 00:06:17,600
provides some incarnate api special apis

00:06:16,240 --> 00:06:20,800
for the flexible

00:06:17,600 --> 00:06:23,919
option passing

00:06:20,800 --> 00:06:27,759
um the syntax of the

00:06:23,919 --> 00:06:30,800
extrovert configuration is very simple

00:06:27,759 --> 00:06:34,639
it's a including start with the key

00:06:30,800 --> 00:06:37,759
uh dot word so that's a not

00:06:34,639 --> 00:06:41,600
separated words equal

00:06:37,759 --> 00:06:44,800
values and you can other values

00:06:41,600 --> 00:06:45,759
uh with a comma separated and other

00:06:44,800 --> 00:06:50,479
comment

00:06:45,759 --> 00:06:50,479
in other comments so

00:06:51,199 --> 00:06:55,280
and also it can

00:06:56,560 --> 00:07:03,440
say consolidate the keywords

00:07:00,160 --> 00:07:06,639
if they're the parent keyword key word

00:07:03,440 --> 00:07:10,319
it's same for example key

00:07:06,639 --> 00:07:10,880
dot word one equal very one and key that

00:07:10,319 --> 00:07:13,840
very

00:07:10,880 --> 00:07:15,039
odd two equal value two you can write it

00:07:13,840 --> 00:07:18,240
down the other

00:07:15,039 --> 00:07:20,880
keyword one equal very one

00:07:18,240 --> 00:07:21,840
and one two equal a very two so that's

00:07:20,880 --> 00:07:25,440
where you can

00:07:21,840 --> 00:07:29,199
uh skip that the key um

00:07:25,440 --> 00:07:32,319
with the braces and also

00:07:29,199 --> 00:07:35,360
we have several assignments um

00:07:32,319 --> 00:07:38,720
simple assignment so echo defines

00:07:35,360 --> 00:07:42,000
the value of the key and

00:07:38,720 --> 00:07:45,120
um if you uh

00:07:42,000 --> 00:07:46,800
user column equal this one overwrites

00:07:45,120 --> 00:07:51,759
the previous definition so that

00:07:46,800 --> 00:07:54,960
you can change the previous definition

00:07:51,759 --> 00:07:58,000
and uh also plus equal

00:07:54,960 --> 00:08:00,800
means that the appends value of

00:07:58,000 --> 00:08:01,520
it adds an array element so that the key

00:08:00,800 --> 00:08:04,879
equal foo

00:08:01,520 --> 00:08:06,240
and the keypress go bar this means that

00:08:04,879 --> 00:08:09,680
the key call for

00:08:06,240 --> 00:08:10,840
com bar so that are the it's um becoming

00:08:09,680 --> 00:08:13,840
an

00:08:10,840 --> 00:08:16,879
array

00:08:13,840 --> 00:08:18,400
and uh uh extra boot connection is

00:08:16,879 --> 00:08:22,720
actually loaded with

00:08:18,400 --> 00:08:26,400
uh init audi so uh the boot config

00:08:22,720 --> 00:08:29,440
command we introduced

00:08:26,400 --> 00:08:30,319
um that will append uh the boot

00:08:29,440 --> 00:08:33,919
compilation

00:08:30,319 --> 00:08:38,800
uh file with some uh footer

00:08:33,919 --> 00:08:38,800
data so that's our um

00:08:39,360 --> 00:08:42,479
by using that this command you can

00:08:41,919 --> 00:08:46,480
update

00:08:42,479 --> 00:08:49,279
the initiality user uh boot config

00:08:46,480 --> 00:08:49,839
instead of using that some changing that

00:08:49,279 --> 00:08:54,399
the modif

00:08:49,839 --> 00:08:57,760
uh the bootloaders settings

00:08:54,399 --> 00:08:59,839
so um however you

00:08:57,760 --> 00:09:01,920
also need a boot config connect

00:08:59,839 --> 00:09:09,120
parameter corner command line

00:09:01,920 --> 00:09:12,560
to enable the passing

00:09:09,120 --> 00:09:13,519
so um good time tracing with the boot

00:09:12,560 --> 00:09:16,800
config

00:09:13,519 --> 00:09:20,399
is here so uh the boot time tracing

00:09:16,800 --> 00:09:23,760
options uh in boot config

00:09:20,399 --> 00:09:26,800
start from um f trace dot

00:09:23,760 --> 00:09:30,640
keyword so some

00:09:26,800 --> 00:09:33,680
but also uh it there are some existing

00:09:30,640 --> 00:09:35,600
content parameters which can be start

00:09:33,680 --> 00:09:38,160
with the carnel dot

00:09:35,600 --> 00:09:39,680
i will show you the um example

00:09:38,160 --> 00:09:43,440
afterwards

00:09:39,680 --> 00:09:46,640
so uh with that we can

00:09:43,440 --> 00:09:50,000
define for example a part event and

00:09:46,640 --> 00:09:53,680
par instance settings like this so

00:09:50,000 --> 00:09:57,360
uh after is the event and group

00:09:53,680 --> 00:10:00,560
and the event name and filter

00:09:57,360 --> 00:10:04,000
set up the third pipe and filter and

00:10:00,560 --> 00:10:08,000
also we can make a trace

00:10:04,000 --> 00:10:11,040
instances so instances will uh

00:10:08,000 --> 00:10:14,959
you know um provide you to

00:10:11,040 --> 00:10:18,480
uh was a ability to

00:10:14,959 --> 00:10:22,320
trace the different context different

00:10:18,480 --> 00:10:25,519
uh tracers

00:10:22,320 --> 00:10:29,440
and also you can define the the k probes

00:10:25,519 --> 00:10:33,279
events and synthetic events as

00:10:29,440 --> 00:10:36,240
did as this the for

00:10:33,279 --> 00:10:38,399
for details uh you can check that this

00:10:36,240 --> 00:10:41,360
documentation

00:10:38,399 --> 00:10:41,360
in a carnal tree

00:10:42,480 --> 00:10:47,040
here is an example of the boot time

00:10:45,279 --> 00:10:50,320
tracing

00:10:47,040 --> 00:10:53,360
so you can see that there the f3s

00:10:50,320 --> 00:10:56,000
keyword start with the trace

00:10:53,360 --> 00:10:57,279
and options uh setup that are some

00:10:56,000 --> 00:11:01,279
options

00:10:57,279 --> 00:11:04,320
and also set up the buffer sites

00:11:01,279 --> 00:11:07,839
and other k probes events

00:11:04,320 --> 00:11:10,399
with filters and enable it

00:11:07,839 --> 00:11:12,240
of course you there are some kernel

00:11:10,399 --> 00:11:15,279
parameters

00:11:12,240 --> 00:11:18,880
options you can set uh by

00:11:15,279 --> 00:11:22,079
using the kernel uh prefix

00:11:18,880 --> 00:11:26,839
so that the kernel uh tp print came

00:11:22,079 --> 00:11:28,079
in that the tp print key command line

00:11:26,839 --> 00:11:31,519
option

00:11:28,079 --> 00:11:36,240
and uh another use case is to making the

00:11:31,519 --> 00:11:39,680
the histograms inside the uh kernel

00:11:36,240 --> 00:11:43,839
for example uh this one is showing that

00:11:39,680 --> 00:11:47,360
the since making uh synthetic events

00:11:43,839 --> 00:11:50,480
uh inside the canal when a boot

00:11:47,360 --> 00:11:51,920
and it makes a histogram what the

00:11:50,480 --> 00:11:55,279
histogram of

00:11:51,920 --> 00:11:58,560
either initial the initial is

00:11:55,279 --> 00:12:02,639
initialize uh function uh call

00:11:58,560 --> 00:12:06,240
and uh uh it will uh make uh

00:12:02,639 --> 00:12:06,560
you know um save the the timestamp of

00:12:06,240 --> 00:12:09,680
the

00:12:06,560 --> 00:12:14,160
start and uh

00:12:09,680 --> 00:12:17,760
the calculate the the latencies

00:12:14,160 --> 00:12:20,639
uh in the finish uh event and

00:12:17,760 --> 00:12:21,200
send it to their uh initial latency

00:12:20,639 --> 00:12:24,880
event

00:12:21,200 --> 00:12:26,320
so that this will make a histogram of

00:12:24,880 --> 00:12:31,120
the initial

00:12:26,320 --> 00:12:31,120
uh histogram um latency histogram

00:12:31,680 --> 00:12:36,720
and another use case is here it's

00:12:34,639 --> 00:12:40,880
actually ongoing work

00:12:36,720 --> 00:12:44,000
but uh you can uh make a function cobra

00:12:40,880 --> 00:12:45,440
in a specific in uh init function at

00:12:44,000 --> 00:12:48,160
boot

00:12:45,440 --> 00:12:48,880
yeah uh with the k probes so that the k

00:12:48,160 --> 00:12:53,120
purpose

00:12:48,880 --> 00:12:56,480
uh put the one or k probe in our

00:12:53,120 --> 00:12:59,920
for example pci pro init function

00:12:56,480 --> 00:13:03,200
the entry of the pcin function and trace

00:12:59,920 --> 00:13:06,399
on tracing on and

00:13:03,200 --> 00:13:09,519
also when we uh

00:13:06,399 --> 00:13:12,639
return from the the pci programming it

00:13:09,519 --> 00:13:16,079
uh at that point we will

00:13:12,639 --> 00:13:19,040
say disable the tracing with these

00:13:16,079 --> 00:13:20,320
actions and set up the tracers as a

00:13:19,040 --> 00:13:23,120
function graph

00:13:20,320 --> 00:13:26,639
and trace only equals zero means that

00:13:23,120 --> 00:13:30,160
the disable tracing by default

00:13:26,639 --> 00:13:32,800
so only the period

00:13:30,160 --> 00:13:33,680
from this event and this event the

00:13:32,800 --> 00:13:36,480
function graph

00:13:33,680 --> 00:13:36,480
is enabled

00:13:38,480 --> 00:13:42,720
we also hover uh there are two uh helper

00:13:41,760 --> 00:13:45,920
scripts

00:13:42,720 --> 00:13:49,199
one needs a actress to vcon

00:13:45,920 --> 00:13:52,320
and this one is uh converting the

00:13:49,199 --> 00:13:55,839
the fps current settings of

00:13:52,320 --> 00:13:59,680
to the boot config and i also

00:13:55,839 --> 00:14:03,120
uh become to actress dot sh

00:13:59,680 --> 00:14:06,240
this also uh let's say uh convert the

00:14:03,120 --> 00:14:10,399
the given uh bootcamping file

00:14:06,240 --> 00:14:14,240
to uh after s uh shell script so that uh

00:14:10,399 --> 00:14:17,680
um you can interactively uh set up the

00:14:14,240 --> 00:14:20,720
f trace and get the uh the boot config

00:14:17,680 --> 00:14:23,760
from uh that by using that

00:14:20,720 --> 00:14:26,160
after is to bing call and uh uh

00:14:23,760 --> 00:14:27,040
or you can check that your bluetooth

00:14:26,160 --> 00:14:30,920
config is

00:14:27,040 --> 00:14:34,399
uh correctly written by using this

00:14:30,920 --> 00:14:34,399
vcomp2f3s script

00:14:35,040 --> 00:14:39,760
so there uh how we can start using the

00:14:37,839 --> 00:14:43,360
the boot config and the

00:14:39,760 --> 00:14:46,480
bluetime script tracing

00:14:43,360 --> 00:14:49,440
it's uh you need to

00:14:46,480 --> 00:14:49,839
uh build and install kernel with the

00:14:49,440 --> 00:14:52,240
this

00:14:49,839 --> 00:14:54,639
uh these configs configure boot config

00:14:52,240 --> 00:15:00,320
and also good time tracing

00:14:54,639 --> 00:15:00,320
enabled and builder uh tools boot copy

00:15:00,399 --> 00:15:07,120
and set up afterwards as you like

00:15:04,160 --> 00:15:07,920
and i'll render this script after s2b

00:15:07,120 --> 00:15:10,880
conf

00:15:07,920 --> 00:15:12,000
to get the bluetooth config file of

00:15:10,880 --> 00:15:15,519
course you need to

00:15:12,000 --> 00:15:18,880
you may need to customize the file

00:15:15,519 --> 00:15:20,000
and apply the configuration file to the

00:15:18,880 --> 00:15:23,519
initial

00:15:20,000 --> 00:15:25,279
rd image with this command

00:15:23,519 --> 00:15:26,560
and boot the column with the boot

00:15:25,279 --> 00:15:28,800
homepage

00:15:26,560 --> 00:15:30,000
so that you can get the uh the boot time

00:15:28,800 --> 00:15:33,040
tracing

00:15:30,000 --> 00:15:36,399
result so

00:15:33,040 --> 00:15:39,680
um the note one note

00:15:36,399 --> 00:15:42,399
is a the country boot time tracing

00:15:39,680 --> 00:15:43,759
can trace most of the device driver

00:15:42,399 --> 00:15:47,279
initialization

00:15:43,759 --> 00:15:50,399
so device need call however it start

00:15:47,279 --> 00:15:54,240
from uh the end of the fs interval

00:15:50,399 --> 00:15:55,360
so that uh before this like a subsystem

00:15:54,240 --> 00:15:59,120
input

00:15:55,360 --> 00:16:02,320
post or ancient call we cannot press it

00:15:59,120 --> 00:16:05,519
at this moment so

00:16:02,320 --> 00:16:09,519
um okay i will

00:16:05,519 --> 00:16:12,800
show our demo

00:16:09,519 --> 00:16:12,800
after that

00:16:15,040 --> 00:16:24,320
so uh here is the the examples

00:16:19,600 --> 00:16:24,710
so what we i showed

00:16:24,320 --> 00:16:27,739
and

00:16:24,710 --> 00:16:27,739
[Music]

00:16:28,320 --> 00:16:36,079
at first we need to apply

00:16:31,360 --> 00:16:38,800
the the boot config and

00:16:36,079 --> 00:16:39,199
so that are uh applied good to pumping

00:16:38,800 --> 00:16:43,279
so

00:16:39,199 --> 00:16:46,959
um this will show that uh uh

00:16:43,279 --> 00:16:47,440
this will apply the uh this boot config

00:16:46,959 --> 00:16:51,199
file

00:16:47,440 --> 00:16:54,480
to the initial fs and

00:16:51,199 --> 00:16:54,480
this one checks that

00:16:55,279 --> 00:17:02,240
and boot the kernel

00:16:58,320 --> 00:17:02,240
with the boot config option

00:17:03,199 --> 00:17:10,160
then uh it will start the kernel

00:17:06,720 --> 00:17:12,480
with the uh tracing

00:17:10,160 --> 00:17:13,760
so you can see that there are many uh uh

00:17:12,480 --> 00:17:16,799
vfs read

00:17:13,760 --> 00:17:21,120
event on the print k buffer because

00:17:16,799 --> 00:17:24,240
the the we set up the print k buffer

00:17:21,120 --> 00:17:27,760
um you can uh check that

00:17:24,240 --> 00:17:30,960
what kind of boot config uh setup uh

00:17:27,760 --> 00:17:31,919
via a proc boot config so that you can

00:17:30,960 --> 00:17:35,280
see that uh

00:17:31,919 --> 00:17:38,400
this one and uh uh also you can

00:17:35,280 --> 00:17:40,799
check that the command line

00:17:38,400 --> 00:17:41,760
you will see that the tp print okay is

00:17:40,799 --> 00:17:44,640
added

00:17:41,760 --> 00:17:47,840
to the to the command line from the

00:17:44,640 --> 00:17:47,840
bluetooth config

00:17:48,480 --> 00:17:56,240
and uh also we have our uh for example

00:17:51,679 --> 00:18:00,080
uh another one needs uh like uh

00:17:56,240 --> 00:18:03,200
making the

00:18:00,080 --> 00:18:06,960
this means it's actually the second

00:18:03,200 --> 00:18:14,480
uh example it's a um

00:18:06,960 --> 00:18:18,160
it will make a uh initial histogram

00:18:14,480 --> 00:18:22,240
okay this cardio

00:18:18,160 --> 00:18:26,000
debug is racing and uh it should

00:18:22,240 --> 00:18:29,760
uh make her an um synthetic

00:18:26,000 --> 00:18:34,160
event yeah we can see that the

00:18:29,760 --> 00:18:37,679
new synthetic event and so those are

00:18:34,160 --> 00:18:40,720
events in call uh sorry

00:18:37,679 --> 00:18:45,760
synthetic events need to call latency

00:18:40,720 --> 00:18:45,760
and histogram oops

00:18:47,039 --> 00:18:54,080
okay um sorry something

00:18:50,080 --> 00:18:57,360
um i know uh

00:18:54,080 --> 00:19:02,320
instances yeah i will uh sorry

00:18:57,360 --> 00:19:05,280
this one is a bit different okay

00:19:02,320 --> 00:19:06,720
yeah we can see that there are the uh

00:19:05,280 --> 00:19:09,600
the histograms

00:19:06,720 --> 00:19:10,080
with the init call actually that's uh

00:19:09,600 --> 00:19:15,039
this one

00:19:10,080 --> 00:19:18,320
is a bit different from the some example

00:19:15,039 --> 00:19:21,919
okay um so that's our uh you know

00:19:18,320 --> 00:19:25,679
example we don't have our instance.who

00:19:21,919 --> 00:19:29,120
but uh uh this example um

00:19:25,679 --> 00:19:34,000
this code shows that uh added

00:19:29,120 --> 00:19:34,000
actually that the instance is yeah

00:19:35,840 --> 00:19:42,559
yeah like this so that i um

00:19:39,600 --> 00:19:42,880
if you remove this one then you can see

00:19:42,559 --> 00:19:46,000
that

00:19:42,880 --> 00:19:46,000
the histogram on the

00:19:46,080 --> 00:19:53,840
the first one uh the the top directory

00:19:54,080 --> 00:20:00,320
okay um so it's a time

00:19:57,200 --> 00:20:03,360
so uh the current status

00:20:00,320 --> 00:20:06,559
um we've almost done uh the

00:20:03,360 --> 00:20:07,039
actual uh the basic uh implementation is

00:20:06,559 --> 00:20:11,840
done

00:20:07,039 --> 00:20:15,280
uh in a uh linux 5.6

00:20:11,840 --> 00:20:17,200
and uh there are some ongoing work uh

00:20:15,280 --> 00:20:18,559
like a carrot pro support and the

00:20:17,200 --> 00:20:21,840
tracing on support

00:20:18,559 --> 00:20:25,120
the example three will be uh

00:20:21,840 --> 00:20:28,320
officially into the 5.10

00:20:25,120 --> 00:20:29,679
and uh i'm uh currently working on a

00:20:28,320 --> 00:20:33,520
future works

00:20:29,679 --> 00:20:36,799
like increasing the traceable code

00:20:33,520 --> 00:20:40,480
um so that are starting from

00:20:36,799 --> 00:20:40,960
uh press starting from the core init

00:20:40,480 --> 00:20:44,159
call

00:20:40,960 --> 00:20:49,120
that will be expand

00:20:44,159 --> 00:20:51,360
the third principle code

00:20:49,120 --> 00:20:52,799
and uh also he's uh enhancing the

00:20:51,360 --> 00:20:55,200
histogram syntax

00:20:52,799 --> 00:20:57,919
and bluetooth pumping support on the

00:20:55,200 --> 00:20:57,919
virtual dots

00:20:58,240 --> 00:21:04,320
so that's uh all from my uh

00:21:01,280 --> 00:21:07,760
from me um

00:21:04,320 --> 00:21:11,280
would you have any uh questions

00:21:07,760 --> 00:21:15,679
if we have our questions uh please

00:21:11,280 --> 00:21:19,600
make it on our other yeah

00:21:15,679 --> 00:21:19,600
the chat okay

00:21:19,679 --> 00:21:23,200
device 3 to pass config file uh to this

00:21:22,640 --> 00:21:26,960
account

00:21:23,200 --> 00:21:30,000
when working on customized content for

00:21:26,960 --> 00:21:32,640
clients employers before i

00:21:30,000 --> 00:21:34,720
give some benefits including binary

00:21:32,640 --> 00:21:37,200
structure

00:21:34,720 --> 00:21:38,480
and existing tools to use it to multiply

00:21:37,200 --> 00:21:45,200
the config

00:21:38,480 --> 00:21:48,640
because that's something more

00:21:45,200 --> 00:21:51,760
okay yeah so uh paul uh you can

00:21:48,640 --> 00:21:55,440
uh use letter the boot config to you

00:21:51,760 --> 00:21:55,440
add your options

00:21:56,480 --> 00:22:04,480
yeah um sorry it's a time

00:22:00,159 --> 00:22:08,000
uh i'm uh on the chat so doctor um

00:22:04,480 --> 00:22:11,280
yeah uh please ask me on the chat and

00:22:08,000 --> 00:22:14,720
yeah i will finish today's session

00:22:11,280 --> 00:22:17,919
thank you very much and thank you for uh

00:22:14,720 --> 00:22:19,039
virtual connect yeah i think we still

00:22:17,919 --> 00:22:22,720
have two minutes there

00:22:19,039 --> 00:22:22,720
there are some links to another part

00:22:23,440 --> 00:22:27,840
if someone has or uh please make it on

00:22:26,799 --> 00:22:31,039
there

00:22:27,840 --> 00:22:31,039
uh on the chat

00:22:32,400 --> 00:22:36,720
do you want to answer anything you do

00:22:34,480 --> 00:22:39,520
have two two minutes left

00:22:36,720 --> 00:22:40,480
for one and a half minutes i guess uh

00:22:39,520 --> 00:22:43,919
from pores

00:22:40,480 --> 00:22:46,960
uh oh sorry uh drills

00:22:43,919 --> 00:22:49,520
uh how could i uh have a function graph

00:22:46,960 --> 00:22:50,720
of everything that happens under the pin

00:22:49,520 --> 00:22:54,720
contour driver

00:22:50,720 --> 00:22:55,280
probe during boot yeah uh so doctor you

00:22:54,720 --> 00:22:58,400
can

00:22:55,280 --> 00:22:59,120
change uh modify uh do you you can

00:22:58,400 --> 00:23:02,159
modify

00:22:59,120 --> 00:23:05,280
uh my uh example number three

00:23:02,159 --> 00:23:08,799
so that uh yeah currently uh this

00:23:05,280 --> 00:23:11,919
uh option is not available um so that

00:23:08,799 --> 00:23:15,280
i'm trying to push that this uh

00:23:11,919 --> 00:23:19,200
feature these features in that case uh

00:23:15,280 --> 00:23:19,200
after that you can use

00:23:20,840 --> 00:23:26,559
um you can use that there

00:23:23,280 --> 00:23:29,840
uh this uh the number three with

00:23:26,559 --> 00:23:33,120
uh replacing that the the this uh

00:23:29,840 --> 00:23:38,320
was a function name with your uh

00:23:33,120 --> 00:23:38,320
was a um interesting function name

00:23:41,039 --> 00:23:47,600
um i can is can we modify this

00:23:44,960 --> 00:23:48,960
uh boot from view string from the

00:23:47,600 --> 00:23:52,240
youtube command line

00:23:48,960 --> 00:23:53,520
uh paul uh currently uh yubit doesn't

00:23:52,240 --> 00:23:56,559
support the the

00:23:53,520 --> 00:23:59,440
this uh but config

00:23:56,559 --> 00:24:00,159
but it's actually very easy to support

00:23:59,440 --> 00:24:04,080
it

00:24:00,159 --> 00:24:05,360
uh because uh we don't need any uh what

00:24:04,080 --> 00:24:09,039
they are the purse

00:24:05,360 --> 00:24:12,240
in a boot uh bootloader bootrada

00:24:09,039 --> 00:24:15,600
just need to add their own uh

00:24:12,240 --> 00:24:18,559
you know options uh after

00:24:15,600 --> 00:24:20,559
uh users boot configuration and update

00:24:18,559 --> 00:24:24,159
the footer

00:24:20,559 --> 00:24:33,840
yeah that will make sense

00:24:24,159 --> 00:24:33,840
for you

00:24:34,720 --> 00:24:38,240
okay okay thank you very very much

00:24:37,360 --> 00:24:41,760
masami

00:24:38,240 --> 00:24:41,760

YouTube URL: https://www.youtube.com/watch?v=Nm0c_XfjnHM


