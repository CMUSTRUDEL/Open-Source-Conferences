Title: LVC20 110 Skin temperature management with hierarchical constraints
Publication date: 2020-10-09
Playlist: Linaro Virtual Connect 2020
Description: 
	Due to the increasing complexity of SoCs, we're now seeing lots of thermal sensors on the die to quickly detect hot spots and allow the OS to take steps to mitigate these events. The Linux thermal framework provides mechanisms such as inputs for better scheduling, frequency throttling, idle injection and turning on fans to prevent the silicon from getting damaged from overheating. This is also called as junction temperature management.

The Linux thermal framework is also used for managing the skin temperature of a device - the temperature that users feel when they hold and use the device. However, this skin temperature management involves manual characterization of performance states for devices such as CPU and GPU to its effect on the skin temperature of the device.

So the framework is doing two distinct tasks: preventing silicon damage and preventing skin burns for users by capping the power of a device. We feel these tasks should be handled by different frameworks.

We're currently experimenting with the kernel's energy model to dynamically build a hierarchy of power constraints and allow the platform integrator to set limits for each power domain using the powercap framework. This will allow the kernel to manage the power consumption (and hence dissipation) budget of the various devices on the Soc more autonomously, leading to better performance at a given power budget instead of overcoming the primary goal of the thermal framework which is mitigate at the limits.

Attendees are expected to know a little bit about how the current thermal framework works but don't need to know all the technical details. We will cover the conceptual differences between the current and proposed models as an introduction in the talk
YouTube URL: https://www.youtube.com/watch?v=c0Oo8CotYYM


