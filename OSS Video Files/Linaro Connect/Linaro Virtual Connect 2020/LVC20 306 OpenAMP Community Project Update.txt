Title: LVC20 306 OpenAMP Community Project Update
Publication date: 2020-10-07
Playlist: Linaro Virtual Connect 2020
Description: 
	Abstract:

The OpenAMP Linaro Community Project is focusing on standardizing aspects of embedded heterogeneous software through open source projects. OpenAMP currently has four working groups solving issues such as messaging (rpmsg and virtio), lifecycle management (remoteproc), configuration standardization (System Device Tree), application services, and common interfaces for hypervisors and AMP. This talk will give an update on what has taken place since the launch at Linaro Connect SAN19, the efforts going on within OpenAMP, future potential topics, and discuss how you can engage. 

Watch the video and download slides here: https://connect.linaro.org/resources/lvc20/lvc20-306/
Captions: 
	00:00:00,240 --> 00:00:03,600
so welcome everyone this is the overview

00:00:02,960 --> 00:00:06,720
of the

00:00:03,600 --> 00:00:08,720
openapp project so the openamp project

00:00:06,720 --> 00:00:11,679
has been going on for a few years

00:00:08,720 --> 00:00:12,559
and we want to give you first just a

00:00:11,679 --> 00:00:16,240
quick

00:00:12,559 --> 00:00:18,000
recap on what it's all about and

00:00:16,240 --> 00:00:19,920
but then going into a little bit more

00:00:18,000 --> 00:00:20,560
about the various working groups that we

00:00:19,920 --> 00:00:22,240
have

00:00:20,560 --> 00:00:24,720
what's the update what has happened

00:00:22,240 --> 00:00:26,640
since the last time

00:00:24,720 --> 00:00:27,840
talk a little bit about how openamp is

00:00:26,640 --> 00:00:31,519
being used

00:00:27,840 --> 00:00:34,160
in the industry how to get involved and

00:00:31,519 --> 00:00:35,200
also there's a couple of other related

00:00:34,160 --> 00:00:38,239
lenardo connect

00:00:35,200 --> 00:00:40,320
talks here so we'll just refer to those

00:00:38,239 --> 00:00:41,760
all right why don't we jump into it

00:00:40,320 --> 00:00:45,039
before that though

00:00:41,760 --> 00:00:46,239
a bunch of acronyms so if you guys want

00:00:45,039 --> 00:00:49,440
to take a screenshot

00:00:46,239 --> 00:00:51,600
of this or you can go back after

00:00:49,440 --> 00:00:53,440
the fact and look up here right but

00:00:51,600 --> 00:00:54,640
there are lots of acronyms and that's

00:00:53,440 --> 00:00:56,000
just

00:00:54,640 --> 00:00:58,879
the name of the game in our field i

00:00:56,000 --> 00:01:00,480
guess so we thought we made it

00:00:58,879 --> 00:01:03,199
make it easy for you and put it all in

00:01:00,480 --> 00:01:03,199
one slide here

00:01:04,239 --> 00:01:07,520
all right everyone figured out how to

00:01:05,840 --> 00:01:08,400
take that screenshot so let's go to the

00:01:07,520 --> 00:01:10,240
next one

00:01:08,400 --> 00:01:13,200
so what is the openamp project what are

00:01:10,240 --> 00:01:16,640
we trying to do here and

00:01:13,200 --> 00:01:18,560
today's socs are very heterogeneous

00:01:16,640 --> 00:01:20,479
and there's lots of complexity in it

00:01:18,560 --> 00:01:23,759
there are lots of different execution

00:01:20,479 --> 00:01:27,280
units running there and so this happened

00:01:23,759 --> 00:01:30,240
to be one of our actually

00:01:27,280 --> 00:01:32,479
previous generation chips where you have

00:01:30,240 --> 00:01:33,200
a bunch of cortex a's you have a bunch

00:01:32,479 --> 00:01:36,320
of

00:01:33,200 --> 00:01:37,280
cortex r's and you have in our case

00:01:36,320 --> 00:01:39,520
since we're

00:01:37,280 --> 00:01:41,520
we're an fpga company we have a soft

00:01:39,520 --> 00:01:42,640
course called microblazes

00:01:41,520 --> 00:01:44,560
so you have all these different

00:01:42,640 --> 00:01:47,119
processors and

00:01:44,560 --> 00:01:49,360
in the past it's been fairly ad hoc how

00:01:47,119 --> 00:01:51,280
do you interact between those things how

00:01:49,360 --> 00:01:53,439
do you send messages how do you stock up

00:01:51,280 --> 00:01:55,840
something how do you configure it

00:01:53,439 --> 00:01:57,840
and so on so forth so the openamp

00:01:55,840 --> 00:01:59,920
project was started to try to

00:01:57,840 --> 00:02:02,560
standardize and have open source

00:01:59,920 --> 00:02:04,960
projects for all that infrastructure

00:02:02,560 --> 00:02:05,920
around those different things and we

00:02:04,960 --> 00:02:07,680
have

00:02:05,920 --> 00:02:10,239
three active working groups are looking

00:02:07,680 --> 00:02:13,520
at different parts of

00:02:10,239 --> 00:02:14,239
this puzzle here too to solve it and

00:02:13,520 --> 00:02:15,920
it's it's

00:02:14,239 --> 00:02:18,480
it gets really complicated because you

00:02:15,920 --> 00:02:20,480
also have different execution levels

00:02:18,480 --> 00:02:22,560
so of course you can run things at a

00:02:20,480 --> 00:02:25,680
very low level formula

00:02:22,560 --> 00:02:27,599
firmware level hypervisor level autos or

00:02:25,680 --> 00:02:29,200
linux level and and so on and

00:02:27,599 --> 00:02:31,519
all these guys need to need to be able

00:02:29,200 --> 00:02:34,319
to to

00:02:31,519 --> 00:02:37,840
interact and so on all right let's go to

00:02:34,319 --> 00:02:37,840
the next slide here

00:02:38,000 --> 00:02:43,200
all right so what is the

00:02:43,360 --> 00:02:49,440
project itself so

00:02:46,720 --> 00:02:50,879
the community project was announced at

00:02:49,440 --> 00:02:54,400
lenaro connect

00:02:50,879 --> 00:02:57,280
san diego 2019 um

00:02:54,400 --> 00:02:58,720
and i guess uh to make a distinction

00:02:57,280 --> 00:03:02,239
from its previous life

00:02:58,720 --> 00:03:05,680
when it was hosted at the multi-core

00:03:02,239 --> 00:03:06,239
association this is a community project

00:03:05,680 --> 00:03:09,920
now and

00:03:06,239 --> 00:03:12,480
it's a bit bigger um so i guess uh

00:03:09,920 --> 00:03:13,760
this vision statement briefly summarizes

00:03:12,480 --> 00:03:15,760
what we're trying to achieve

00:03:13,760 --> 00:03:17,440
in terms of standardizing the

00:03:15,760 --> 00:03:19,840
interactions

00:03:17,440 --> 00:03:21,920
between the operating environments in a

00:03:19,840 --> 00:03:26,080
heterogeneous emitted systems

00:03:21,920 --> 00:03:26,080
uh in a heterogeneous emitted system

00:03:26,319 --> 00:03:34,480
the project itself we've now got

00:03:30,480 --> 00:03:37,760
a board a technical steering committee

00:03:34,480 --> 00:03:41,440
um we've got multiple working groups

00:03:37,760 --> 00:03:47,840
going as thomas mentioned and

00:03:41,440 --> 00:03:47,840
we have a logo now

00:03:51,440 --> 00:03:58,080
um and then uh in terms of the

00:03:54,640 --> 00:04:02,159
update for the overall project we

00:03:58,080 --> 00:04:05,439
now have 10 member companies um

00:04:02,159 --> 00:04:08,720
the company logos are listed below

00:04:05,439 --> 00:04:12,560
in alphabetical order we have three

00:04:08,720 --> 00:04:16,000
active working groups the

00:04:12,560 --> 00:04:16,799
release schedule had fallen off twice a

00:04:16,000 --> 00:04:19,680
year

00:04:16,799 --> 00:04:22,240
for some time and so now it is back to a

00:04:19,680 --> 00:04:24,560
twice a year release schedule

00:04:22,240 --> 00:04:26,160
we've got maintainers officially

00:04:24,560 --> 00:04:30,080
appointed

00:04:26,160 --> 00:04:33,199
so that's ed and arnold

00:04:30,080 --> 00:04:36,000
um and then we've also been formalizing

00:04:33,199 --> 00:04:38,000
the governance for the project so we've

00:04:36,000 --> 00:04:39,759
defined the rules of the board

00:04:38,000 --> 00:04:41,600
of the steering committee of the working

00:04:39,759 --> 00:04:45,120
groups

00:04:41,600 --> 00:04:47,280
there is officially now

00:04:45,120 --> 00:04:50,160
the issue tracking happening through

00:04:47,280 --> 00:04:53,600
github issues

00:04:50,160 --> 00:04:55,280
for contributions those are now

00:04:53,600 --> 00:04:57,440
officially being done through github

00:04:55,280 --> 00:05:00,240
pull requests and then

00:04:57,440 --> 00:05:01,840
the coding style has also been chosen so

00:05:00,240 --> 00:05:05,280
we're using

00:05:01,840 --> 00:05:05,280
the zephyr coding style

00:05:09,120 --> 00:05:12,880
all right so let's jump in a little bit

00:05:10,800 --> 00:05:14,080
to the three working groups uh the the

00:05:12,880 --> 00:05:17,360
first one

00:05:14,080 --> 00:05:18,320
uh has to do with uh remote proc and rb

00:05:17,360 --> 00:05:20,720
message

00:05:18,320 --> 00:05:22,720
so this is the life cycle how do you

00:05:20,720 --> 00:05:25,520
start up something on another core

00:05:22,720 --> 00:05:26,720
and and put something you can run there

00:05:25,520 --> 00:05:29,919
how do you send messages

00:05:26,720 --> 00:05:30,400
back and forth and and so on and also

00:05:29,919 --> 00:05:33,759
have

00:05:30,400 --> 00:05:36,000
sort of lower level details there uh

00:05:33,759 --> 00:05:37,120
things like vote i o that's underneath

00:05:36,000 --> 00:05:39,039
the

00:05:37,120 --> 00:05:41,280
message we have something we call leave

00:05:39,039 --> 00:05:44,400
methyl which is an abstraction of

00:05:41,280 --> 00:05:47,840
some of the hardware uh so

00:05:44,400 --> 00:05:49,600
this group also call it open app

00:05:47,840 --> 00:05:51,440
classic because this is what openhab

00:05:49,600 --> 00:05:52,000
started with now we have other things

00:05:51,440 --> 00:05:55,840
that we are

00:05:52,000 --> 00:05:59,440
working on as well this group is led by

00:05:55,840 --> 00:06:01,280
bill mills and there's a bunch of

00:05:59,440 --> 00:06:04,800
repositories you can see that

00:06:01,280 --> 00:06:07,759
one thing to be noted here is that

00:06:04,800 --> 00:06:08,560
since this code has to work in different

00:06:07,759 --> 00:06:10,319
environments

00:06:08,560 --> 00:06:12,000
there are actually really two code bases

00:06:10,319 --> 00:06:14,720
here and there's

00:06:12,000 --> 00:06:15,759
one when you use the linux kernel

00:06:14,720 --> 00:06:18,560
obviously has to be

00:06:15,759 --> 00:06:20,479
gpl and all that stuff is in linux

00:06:18,560 --> 00:06:23,360
before and that's one of the reasons we

00:06:20,479 --> 00:06:24,560
chose remote proc and rb message because

00:06:23,360 --> 00:06:27,039
it already existed

00:06:24,560 --> 00:06:28,560
there so we're working on within the

00:06:27,039 --> 00:06:31,600
linux community

00:06:28,560 --> 00:06:33,120
to update streamline make it easier and

00:06:31,600 --> 00:06:35,120
so on around remote property

00:06:33,120 --> 00:06:37,039
upper message but we also have a clean

00:06:35,120 --> 00:06:39,120
room implementation and that's for

00:06:37,039 --> 00:06:41,039
our tosses but obviously for obvious

00:06:39,120 --> 00:06:42,160
reasons can't use gpl code from the

00:06:41,039 --> 00:06:44,000
linux kernel

00:06:42,160 --> 00:06:46,000
also it has to be really small really

00:06:44,000 --> 00:06:48,319
scalable so it can go down to

00:06:46,000 --> 00:06:49,280
something that's a very small footprint

00:06:48,319 --> 00:06:51,039
and that actually was

00:06:49,280 --> 00:06:52,319
one of the earlier work that we did was

00:06:51,039 --> 00:06:55,039
to get the

00:06:52,319 --> 00:06:56,240
code size down so it can fit in into

00:06:55,039 --> 00:06:59,680
resource constrained

00:06:56,240 --> 00:07:02,960
devices and so we have those two

00:06:59,680 --> 00:07:06,319
sides of it and on our github there

00:07:02,960 --> 00:07:08,400
of course we have the the library side

00:07:06,319 --> 00:07:10,880
if you will that rtos says even

00:07:08,400 --> 00:07:12,800
linux usage base can use that and

00:07:10,880 --> 00:07:14,880
there's an interface to that so you can

00:07:12,800 --> 00:07:16,000
work in linux user space and then talk

00:07:14,880 --> 00:07:19,039
to another artist

00:07:16,000 --> 00:07:20,960
there a bunch of active work going on

00:07:19,039 --> 00:07:24,240
there

00:07:20,960 --> 00:07:26,639
and you can see some of them here

00:07:24,240 --> 00:07:28,639
there is a related session later today

00:07:26,639 --> 00:07:31,840
they will talk a little bit about some

00:07:28,639 --> 00:07:31,840
subsystem updates

00:07:33,680 --> 00:07:41,039
all right next one system device 3

00:07:37,759 --> 00:07:44,160
working group so within lenora

00:07:41,039 --> 00:07:47,360
there's a a project called

00:07:44,160 --> 00:07:50,879
lenoro quality device tree evolution

00:07:47,360 --> 00:07:53,280
device is this configuration format

00:07:50,879 --> 00:07:53,919
where you can configure so that the

00:07:53,280 --> 00:07:56,879
software

00:07:53,919 --> 00:07:58,479
knows about hardware specific things

00:07:56,879 --> 00:08:01,360
like addresses of

00:07:58,479 --> 00:08:02,479
device registers various buses

00:08:01,360 --> 00:08:04,319
topologies

00:08:02,479 --> 00:08:05,599
power topologies and so on so forth

00:08:04,319 --> 00:08:07,840
right it's been

00:08:05,599 --> 00:08:09,440
in use for for a long time for from the

00:08:07,840 --> 00:08:12,080
linux point of view and

00:08:09,440 --> 00:08:12,479
and some other open source projects what

00:08:12,080 --> 00:08:15,840
we're

00:08:12,479 --> 00:08:18,000
really driving now is to make sure and

00:08:15,840 --> 00:08:19,759
that you can use device trees for a

00:08:18,000 --> 00:08:21,919
whole system not just for

00:08:19,759 --> 00:08:23,039
one part of it the address space that

00:08:21,919 --> 00:08:24,639
linux

00:08:23,039 --> 00:08:26,479
sees for example but if you have

00:08:24,639 --> 00:08:28,720
multiple added spaces

00:08:26,479 --> 00:08:29,520
and we want to be able to to talk about

00:08:28,720 --> 00:08:32,000
that

00:08:29,520 --> 00:08:33,839
and configure that so that's what this

00:08:32,000 --> 00:08:37,919
working group is all about

00:08:33,839 --> 00:08:40,080
and so one part of the lenoro

00:08:37,919 --> 00:08:41,039
project it actually has multiple things

00:08:40,080 --> 00:08:42,800
they're working on

00:08:41,039 --> 00:08:44,480
around device trees but the system

00:08:42,800 --> 00:08:46,720
device trees is actually

00:08:44,480 --> 00:08:48,959
out of open amp and part of the reason

00:08:46,720 --> 00:08:52,160
there is so that we can have

00:08:48,959 --> 00:08:54,000
the auto skies and and they are changing

00:08:52,160 --> 00:08:55,680
or have been changing so that they use

00:08:54,000 --> 00:08:58,959
device trees to configure

00:08:55,680 --> 00:09:01,519
their r tosses now um so the

00:08:58,959 --> 00:09:02,240
idea here is to get to a place where we

00:09:01,519 --> 00:09:03,680
have

00:09:02,240 --> 00:09:05,680
one triple source for all the

00:09:03,680 --> 00:09:07,760
configuration work so

00:09:05,680 --> 00:09:09,440
i'm not going to go into all the details

00:09:07,760 --> 00:09:12,240
here because there's another session

00:09:09,440 --> 00:09:14,880
coming later here and i will talk about

00:09:12,240 --> 00:09:16,560
uh device 3 update and especially talk

00:09:14,880 --> 00:09:18,399
about some specific things that we're

00:09:16,560 --> 00:09:22,080
doing with devices

00:09:18,399 --> 00:09:23,680
bus firewalls and an open source

00:09:22,080 --> 00:09:27,120
program called loper that will

00:09:23,680 --> 00:09:27,120
manipulate the device trees

00:09:30,160 --> 00:09:35,600
and the next working group we call that

00:09:32,959 --> 00:09:38,480
application services

00:09:35,600 --> 00:09:40,560
by the way the previous one is led by

00:09:38,480 --> 00:09:43,760
stefano stabellini

00:09:40,560 --> 00:09:47,760
from from silence this one is

00:09:43,760 --> 00:09:51,200
led by martin koenig from wind river

00:09:47,760 --> 00:09:53,920
the idea of this group is

00:09:51,200 --> 00:09:54,640
so we have these low-level interfaces

00:09:53,920 --> 00:09:56,800
and

00:09:54,640 --> 00:09:59,200
low-level ways of communicating and

00:09:56,800 --> 00:10:01,760
that's great you have to have that

00:09:59,200 --> 00:10:03,600
most application developers though they

00:10:01,760 --> 00:10:05,279
are really more used to having

00:10:03,600 --> 00:10:06,959
industry standard interfaces like

00:10:05,279 --> 00:10:09,200
sockets open and

00:10:06,959 --> 00:10:10,640
read and write close those kind of

00:10:09,200 --> 00:10:13,360
things

00:10:10,640 --> 00:10:13,680
so what we're figuring out in this group

00:10:13,360 --> 00:10:17,440
is

00:10:13,680 --> 00:10:19,600
how can we add those things on top of it

00:10:17,440 --> 00:10:20,800
so that when for example you want to

00:10:19,600 --> 00:10:24,320
have a connection to

00:10:20,800 --> 00:10:27,360
another something that runs on on an

00:10:24,320 --> 00:10:29,519
rtos on a mcu for example

00:10:27,360 --> 00:10:32,079
how could you use a socket interface for

00:10:29,519 --> 00:10:33,040
example or a vortio interface things

00:10:32,079 --> 00:10:35,440
like that

00:10:33,040 --> 00:10:37,680
and the more we work on this and the

00:10:35,440 --> 00:10:40,399
more it becomes clear that word io is

00:10:37,680 --> 00:10:43,040
one of those really central technologies

00:10:40,399 --> 00:10:46,480
that we are going to work on

00:10:43,040 --> 00:10:49,600
so this group again

00:10:46,480 --> 00:10:52,160
next level up from a

00:10:49,600 --> 00:10:54,079
so that application developers have an

00:10:52,160 --> 00:10:57,440
easier time to use

00:10:54,079 --> 00:10:57,440
these heterogeneous systems

00:10:58,399 --> 00:11:04,079
all right and

00:11:01,600 --> 00:11:05,279
so of course it's one thing to have an

00:11:04,079 --> 00:11:06,880
open source project

00:11:05,279 --> 00:11:09,279
and what we're trying to do in openamp

00:11:06,880 --> 00:11:11,120
is both to drive the

00:11:09,279 --> 00:11:13,279
the standards if you will but it's

00:11:11,120 --> 00:11:16,640
really standard by implementation

00:11:13,279 --> 00:11:17,200
so it's the it's the code itself that's

00:11:16,640 --> 00:11:19,680
really

00:11:17,200 --> 00:11:21,600
important but you can have open source

00:11:19,680 --> 00:11:23,120
projects and no one is using it

00:11:21,600 --> 00:11:25,440
so so we actually went around a little

00:11:23,120 --> 00:11:26,000
bit and checked where in the industry

00:11:25,440 --> 00:11:28,480
are we

00:11:26,000 --> 00:11:30,160
using this right now and it turns out

00:11:28,480 --> 00:11:33,279
that it's been used quite a bit

00:11:30,160 --> 00:11:34,320
so for us we from silence and so we use

00:11:33,279 --> 00:11:37,279
it for all our

00:11:34,320 --> 00:11:38,240
devices all our devices out there are

00:11:37,279 --> 00:11:41,360
heterogeneous in

00:11:38,240 --> 00:11:43,920
in some sense and so

00:11:41,360 --> 00:11:44,880
with the software package that you get

00:11:43,920 --> 00:11:47,360
from silence

00:11:44,880 --> 00:11:49,440
this is a default part of it so that you

00:11:47,360 --> 00:11:51,440
can either at a very low level just

00:11:49,440 --> 00:11:53,680
share pages and so on or

00:11:51,440 --> 00:11:57,600
at high levels start up something on a

00:11:53,680 --> 00:12:01,680
different core and so on mentographics

00:11:57,600 --> 00:12:04,000
they have products based on openamp

00:12:01,680 --> 00:12:05,200
ti as well and i'm not going to go into

00:12:04,000 --> 00:12:09,200
all the different

00:12:05,200 --> 00:12:12,320
details here uh nxp using remote proc

00:12:09,200 --> 00:12:14,959
and for for a bunch of different things

00:12:12,320 --> 00:12:15,360
calorie is another company so they put

00:12:14,959 --> 00:12:19,120
it

00:12:15,360 --> 00:12:21,680
into their products go to the next slide

00:12:19,120 --> 00:12:23,200
so sephir is this open source real-time

00:12:21,680 --> 00:12:26,079
operating system

00:12:23,200 --> 00:12:28,160
so open amp is integrated and available

00:12:26,079 --> 00:12:28,720
in the current cipher releases so that's

00:12:28,160 --> 00:12:31,200
their

00:12:28,720 --> 00:12:31,920
default communication between different

00:12:31,200 --> 00:12:35,519
cores

00:12:31,920 --> 00:12:38,639
and the same sse and nordic semi

00:12:35,519 --> 00:12:39,600
and they are using it a lot of that is

00:12:38,639 --> 00:12:42,560
because they're using

00:12:39,600 --> 00:12:44,639
zephyr so in their products and their

00:12:42,560 --> 00:12:47,360
bluetooth controller there

00:12:44,639 --> 00:12:49,279
leonardo of course very involved and

00:12:47,360 --> 00:12:52,320
leonardo lite

00:12:49,279 --> 00:12:53,360
has people working on open openamp sd

00:12:52,320 --> 00:12:56,399
micro

00:12:53,360 --> 00:12:59,440
using and they're very active

00:12:56,399 --> 00:13:02,240
one of the maintainers is from sd micro

00:12:59,440 --> 00:13:03,279
wind river been using open amp for a

00:13:02,240 --> 00:13:06,959
bunch of different things

00:13:03,279 --> 00:13:09,680
and also for debugging and the

00:13:06,959 --> 00:13:10,480
arm is very active in in the discussions

00:13:09,680 --> 00:13:12,880
in openhab

00:13:10,480 --> 00:13:12,880
as well

00:13:14,399 --> 00:13:20,800
all right go to the next one

00:13:17,519 --> 00:13:23,680
so um now that

00:13:20,800 --> 00:13:25,760
we've gone through a bit about the

00:13:23,680 --> 00:13:28,480
project and the working groups

00:13:25,760 --> 00:13:29,040
uh and the latest updates if there's

00:13:28,480 --> 00:13:32,000
anyone

00:13:29,040 --> 00:13:35,200
who is not involved yet and would be

00:13:32,000 --> 00:13:38,240
interested to get involved

00:13:35,200 --> 00:13:40,079
everybody is welcome to join the calls

00:13:38,240 --> 00:13:41,839
for the steering committee and for the

00:13:40,079 --> 00:13:45,199
working groups

00:13:41,839 --> 00:13:47,519
the call invitations are assent to the

00:13:45,199 --> 00:13:52,000
mailing lists

00:13:47,519 --> 00:13:54,560
so you're all welcome to participate

00:13:52,000 --> 00:13:55,199
um it's not necessary to be member

00:13:54,560 --> 00:13:58,430
company

00:13:55,199 --> 00:13:59,760
um employee and um

00:13:58,430 --> 00:14:02,160
[Music]

00:13:59,760 --> 00:14:04,000
for those companies that are very

00:14:02,160 --> 00:14:07,040
interested in being

00:14:04,000 --> 00:14:07,040
actively involved

00:14:07,120 --> 00:14:13,360
they can join as

00:14:10,720 --> 00:14:15,279
open amp community project members we

00:14:13,360 --> 00:14:18,560
try to make the

00:14:15,279 --> 00:14:20,720
barrier to joining as low as possible

00:14:18,560 --> 00:14:22,480
so it's not necessary to be a lennar

00:14:20,720 --> 00:14:25,519
member company

00:14:22,480 --> 00:14:27,360
there is a relatively low member fee

00:14:25,519 --> 00:14:30,480
which supports the administration

00:14:27,360 --> 00:14:34,240
of the project and some infrastructure

00:14:30,480 --> 00:14:37,040
and for the companies that join they

00:14:34,240 --> 00:14:38,000
get a vote on the tsc and a vote on the

00:14:37,040 --> 00:14:40,320
board

00:14:38,000 --> 00:14:41,920
but you can still participate even

00:14:40,320 --> 00:14:45,839
without having

00:14:41,920 --> 00:14:45,839
your company be a member

00:14:46,000 --> 00:14:49,760
um this is a little bit more information

00:14:49,120 --> 00:14:52,880
about

00:14:49,760 --> 00:14:53,519
how to become a member company um so

00:14:52,880 --> 00:14:59,120
it's

00:14:53,519 --> 00:15:02,079
relatively straightforward

00:14:59,120 --> 00:15:03,519
and then this slide provides some more

00:15:02,079 --> 00:15:06,720
information

00:15:03,519 --> 00:15:10,720
if you would like to look up later

00:15:06,720 --> 00:15:10,720
how to check out the code

00:15:10,880 --> 00:15:15,440
we have most of the repositories in the

00:15:13,760 --> 00:15:18,560
openamp github

00:15:15,440 --> 00:15:21,839
but because uh lopper

00:15:18,560 --> 00:15:23,639
is related to device trees

00:15:21,839 --> 00:15:25,199
um so that is living at

00:15:23,639 --> 00:15:28,639
thedevicetree.org

00:15:25,199 --> 00:15:32,160
github the

00:15:28,639 --> 00:15:35,680
openamp wiki is where we have

00:15:32,160 --> 00:15:37,839
some working documents and also

00:15:35,680 --> 00:15:39,920
notes from the calls we try to post

00:15:37,839 --> 00:15:42,800
there

00:15:39,920 --> 00:15:44,079
and there's some information about what

00:15:42,800 --> 00:15:46,079
is

00:15:44,079 --> 00:15:47,680
being worked on and what features are

00:15:46,079 --> 00:15:50,399
under consideration

00:15:47,680 --> 00:15:52,639
uh we've got a community project website

00:15:50,399 --> 00:15:55,920
that you can check out

00:15:52,639 --> 00:15:56,800
and most importantly uh we have the

00:15:55,920 --> 00:15:58,880
mailing lists

00:15:56,800 --> 00:15:59,920
uh so if you're interested in joining

00:15:58,880 --> 00:16:03,519
the calls

00:15:59,920 --> 00:16:05,680
uh please do subscribe

00:16:03,519 --> 00:16:07,680
just adding to the calls there so for

00:16:05,680 --> 00:16:10,240
the various groups the

00:16:07,680 --> 00:16:11,360
cadence is a little bit different so for

00:16:10,240 --> 00:16:14,880
the remote pro

00:16:11,360 --> 00:16:18,399
calls that every other thursday

00:16:14,880 --> 00:16:22,160
i believe for the device g

00:16:18,399 --> 00:16:24,720
calls uh it comes and goes in bursts uh

00:16:22,160 --> 00:16:26,160
when we have new things to to discuss

00:16:24,720 --> 00:16:27,680
right now we're

00:16:26,160 --> 00:16:29,680
doing a lot of things around these

00:16:27,680 --> 00:16:30,800
firewalls uh which has to do with

00:16:29,680 --> 00:16:34,320
protection that we'll

00:16:30,800 --> 00:16:38,079
talk about in a later discussion today

00:16:34,320 --> 00:16:40,240
and the uh application services

00:16:38,079 --> 00:16:41,440
uh obviously right now we're sort of

00:16:40,240 --> 00:16:44,079
starting that up again

00:16:41,440 --> 00:16:44,639
uh after uh so there's been a couple

00:16:44,079 --> 00:16:48,320
calls here

00:16:44,639 --> 00:16:50,320
here lately and so they

00:16:48,320 --> 00:16:51,920
vary a little bit and then we have the

00:16:50,320 --> 00:16:54,320
technical steering committee

00:16:51,920 --> 00:16:56,160
i would say about once a quarter or so

00:16:54,320 --> 00:16:57,519
maybe every other two months sometimes

00:16:56,160 --> 00:16:58,639
depending if we have a lot of things to

00:16:57,519 --> 00:17:00,320
do there

00:16:58,639 --> 00:17:01,839
but we've gone through quite a bit of

00:17:00,320 --> 00:17:03,279
things there already when it comes to

00:17:01,839 --> 00:17:06,319
the governance

00:17:03,279 --> 00:17:07,839
things that that's more uh

00:17:06,319 --> 00:17:09,600
what the stuff that you have to get done

00:17:07,839 --> 00:17:10,319
in the beginning and then we have board

00:17:09,600 --> 00:17:13,919
meetings

00:17:10,319 --> 00:17:13,919
ever so often as well

00:17:16,880 --> 00:17:20,559
and then this is uh just some

00:17:18,959 --> 00:17:22,559
information about

00:17:20,559 --> 00:17:23,600
the related talks that are coming up

00:17:22,559 --> 00:17:26,559
thomas mentioned

00:17:23,600 --> 00:17:27,919
both of these earlier in the individual

00:17:26,559 --> 00:17:30,640
working group updates

00:17:27,919 --> 00:17:31,200
um but you can just make a note of those

00:17:30,640 --> 00:17:33,120
and

00:17:31,200 --> 00:17:34,799
um this is our last slide so i'm going

00:17:33,120 --> 00:17:37,120
to put it back to the

00:17:34,799 --> 00:17:47,840
more information if anyone wants to

00:17:37,120 --> 00:17:47,840
refer to that and then we can go to q a

00:18:08,960 --> 00:18:12,799
so i guess uh would we be having the

00:18:11,120 --> 00:18:16,559
questions come to us in the chat

00:18:12,799 --> 00:18:19,120
or um can somebody re-reading them out

00:18:16,559 --> 00:18:20,799
yes so um i don't see any coming through

00:18:19,120 --> 00:18:23,919
in the chat or in the youtube

00:18:20,799 --> 00:18:25,039
um also people can rate their hand if

00:18:23,919 --> 00:18:26,720
they want to be unmuted

00:18:25,039 --> 00:18:28,720
and ask a question so feel free to do

00:18:26,720 --> 00:18:31,520
that as well

00:18:28,720 --> 00:18:34,240
um but nothing yet so i'll let you know

00:18:31,520 --> 00:18:34,240
if we see anything

00:18:35,039 --> 00:18:38,559
i see on the list here that a lot of the

00:18:36,880 --> 00:18:40,720
people who

00:18:38,559 --> 00:18:43,360
are calling in probably has been in

00:18:40,720 --> 00:18:46,160
touch with us before as well

00:18:43,360 --> 00:18:46,160
so so that's good

00:18:50,080 --> 00:18:53,520
so i see we got one question from

00:18:52,320 --> 00:18:56,240
karthik

00:18:53,520 --> 00:18:58,640
what platforms do working groups use for

00:18:56,240 --> 00:19:01,440
testing

00:18:58,640 --> 00:19:02,720
that's a good question that's actually

00:19:01,440 --> 00:19:03,440
one of the biggest thing we've been

00:19:02,720 --> 00:19:06,160
working on

00:19:03,440 --> 00:19:07,120
lately is how do we do testing because

00:19:06,160 --> 00:19:09,679
every

00:19:07,120 --> 00:19:11,120
member company have different boards and

00:19:09,679 --> 00:19:14,160
things like that and

00:19:11,120 --> 00:19:14,960
so what do we do in our ci loop then so

00:19:14,160 --> 00:19:17,840
what we're

00:19:14,960 --> 00:19:19,280
using in our ci loops is qmu so that's

00:19:17,840 --> 00:19:22,000
the simulator

00:19:19,280 --> 00:19:24,160
and just to make sure that everyone has

00:19:22,000 --> 00:19:25,679
access to something that you can look

00:19:24,160 --> 00:19:27,600
around then of course

00:19:25,679 --> 00:19:28,799
in the various individual companies they

00:19:27,600 --> 00:19:31,840
are running tests

00:19:28,799 --> 00:19:35,520
on on their boards but we do have a

00:19:31,840 --> 00:19:38,720
a common infrastructure we're using lava

00:19:35,520 --> 00:19:39,360
within lenora and using qmu for that

00:19:38,720 --> 00:19:52,240
that's a

00:19:39,360 --> 00:19:55,039
very good question

00:19:52,240 --> 00:19:56,240
and then uh we've got a question from

00:19:55,039 --> 00:19:59,360
satish

00:19:56,240 --> 00:20:00,000
is there any upcoming support for no

00:19:59,360 --> 00:20:04,080
copy

00:20:00,000 --> 00:20:05,120
rc message apis like rp message lite has

00:20:04,080 --> 00:20:08,240
apis to

00:20:05,120 --> 00:20:11,520
alec and free buffer

00:20:08,240 --> 00:20:14,159
yeah so so one of the topics

00:20:11,520 --> 00:20:16,400
in the group is what we call big buffers

00:20:14,159 --> 00:20:19,360
so that's basically a i know coffee

00:20:16,400 --> 00:20:20,400
and there are already implementations

00:20:19,360 --> 00:20:23,760
available

00:20:20,400 --> 00:20:25,360
where where you allocate a buffer

00:20:23,760 --> 00:20:27,919
and then you just send the pointer over

00:20:25,360 --> 00:20:30,080
so that's been open sourced

00:20:27,919 --> 00:20:31,440
as well but to do that a little bit more

00:20:30,080 --> 00:20:34,080
in a

00:20:31,440 --> 00:20:35,679
a little bit more in a structured way

00:20:34,080 --> 00:20:37,600
that's one of the topics that's

00:20:35,679 --> 00:20:39,600
being discussed but only today you you

00:20:37,600 --> 00:20:42,080
can do that and there is

00:20:39,600 --> 00:20:44,400
some some code showing how to do it and

00:20:42,080 --> 00:20:48,559
the idea is basically that you use

00:20:44,400 --> 00:20:51,679
uh the message to some over

00:20:48,559 --> 00:20:52,640
a pointer basically uh to a a common

00:20:51,679 --> 00:21:03,840
place where you

00:20:52,640 --> 00:21:03,840
where you have have the actual data

00:21:10,240 --> 00:21:16,720
hi and then um

00:21:13,840 --> 00:21:18,159
i guess bill mills has dropped a message

00:21:16,720 --> 00:21:22,000
in the chat

00:21:18,159 --> 00:21:26,240
so everyone can check that out um

00:21:22,000 --> 00:21:29,280
next question is nxps rplc message lite

00:21:26,240 --> 00:21:33,760
and erpc also appear to be built over

00:21:29,280 --> 00:21:33,760
every message could you compare the two

00:21:36,480 --> 00:21:41,200
yes and uh and and bill maybe we should

00:21:39,440 --> 00:21:44,960
unmute bill here as well to

00:21:41,200 --> 00:21:48,240
chime in here a little bit uh so

00:21:44,960 --> 00:21:48,640
one of the things uh so nxp obviously

00:21:48,240 --> 00:21:51,679
been

00:21:48,640 --> 00:21:55,600
doing a bunch of work with rb message

00:21:51,679 --> 00:21:58,080
and open message light as well and

00:21:55,600 --> 00:22:00,080
what we one one of the differences i

00:21:58,080 --> 00:22:04,000
would say is that there's the community

00:22:00,080 --> 00:22:06,720
around the uh the open amp rv message

00:22:04,000 --> 00:22:07,679
and so we're actively working on it and

00:22:06,720 --> 00:22:11,120
there's a bunch of

00:22:07,679 --> 00:22:11,520
work there to to make it more decoupled

00:22:11,120 --> 00:22:14,159
and

00:22:11,520 --> 00:22:15,440
a bunch of different things with that so

00:22:14,159 --> 00:22:18,559
so that's really

00:22:15,440 --> 00:22:18,880
going on uh there so maybe bill if you

00:22:18,559 --> 00:22:22,559
can

00:22:18,880 --> 00:22:22,559
add a little bit from your point of view

00:22:24,080 --> 00:22:28,799
sorry i got caught up in the mechanics

00:22:26,159 --> 00:22:28,799
here um

00:22:29,039 --> 00:22:35,679
yeah so rp message lite is not

00:22:32,559 --> 00:22:37,360
so it's the same api but a different

00:22:35,679 --> 00:22:41,440
implementation

00:22:37,360 --> 00:22:43,679
um and then uh i think the erpc

00:22:41,440 --> 00:22:44,960
was the other thing mentioned um yeah

00:22:43,679 --> 00:22:46,960
which is sort of a

00:22:44,960 --> 00:22:48,000
complementary technology that does build

00:22:46,960 --> 00:22:51,120
on top

00:22:48,000 --> 00:22:53,440
um the main

00:22:51,120 --> 00:22:54,559
lib open amp is doing a lot of work to

00:22:53,440 --> 00:22:58,480
try to

00:22:54,559 --> 00:22:59,520
minimize the memory footprint

00:22:58,480 --> 00:23:03,360
differences

00:22:59,520 --> 00:23:06,480
between lib open amp and

00:23:03,360 --> 00:23:06,480
rp message light

00:23:06,720 --> 00:23:13,919
but they will probably both coexist

00:23:09,840 --> 00:23:16,640
as as alternative implementations at

00:23:13,919 --> 00:23:16,640
least for a while

00:23:17,600 --> 00:23:25,120
did that address the question properly

00:23:20,960 --> 00:23:28,559
i think so thank you thank you

00:23:25,120 --> 00:23:32,159
and then uh we have a question about um

00:23:28,559 --> 00:23:33,120
if meta opening of uh layering yakto

00:23:32,159 --> 00:23:36,240
project

00:23:33,120 --> 00:23:38,880
uh if there is any plans to update that

00:23:36,240 --> 00:23:41,200
because it hasn't been updated in two

00:23:38,880 --> 00:23:41,200
years

00:23:42,000 --> 00:23:48,480
so maybe uh i don't know is that ed

00:23:45,440 --> 00:23:51,039
is on the line here right

00:23:48,480 --> 00:23:53,200
and maybe we can get the ed mooring uh

00:23:51,039 --> 00:23:56,720
unmuted see

00:23:53,200 --> 00:23:56,720
i don't see ben on the line here but

00:24:00,880 --> 00:24:05,279
sorry who did you want unmuted morning

00:24:03,520 --> 00:24:09,679
yes it's unmuted now

00:24:05,279 --> 00:24:09,679
yeah okay cool yeah um

00:24:10,640 --> 00:24:13,919
let's say it's on my radar but um it's a

00:24:13,600 --> 00:24:18,720
way

00:24:13,919 --> 00:24:22,480
but it'll be a ways out um we use it

00:24:18,720 --> 00:24:26,400
internally for building the linux

00:24:22,480 --> 00:24:29,279
side but it doesn't currently build the

00:24:26,400 --> 00:24:29,279
firmware side

00:24:30,480 --> 00:24:36,159
and that is on as i said on my radar but

00:24:33,200 --> 00:24:36,159
it's going to be a ways out

00:24:36,320 --> 00:24:40,320
so yes there are plans they're just not

00:24:38,480 --> 00:24:41,840
immediate plans

00:24:40,320 --> 00:24:44,480
maybe you can take another question we

00:24:41,840 --> 00:24:46,400
have any pointers on the qmu used

00:24:44,480 --> 00:24:47,760
and where people can look at that

00:24:46,400 --> 00:24:48,720
because you've been involved in the ci

00:24:47,760 --> 00:24:51,919
loop of course

00:24:48,720 --> 00:24:55,039
um currently i'm using the

00:24:51,919 --> 00:24:57,360
xilinx qemu from xilinx github

00:24:55,039 --> 00:24:57,360
um

00:24:58,799 --> 00:25:04,320
i'm just i'm just

00:25:01,840 --> 00:25:06,559
putting the finishing touches on a

00:25:04,320 --> 00:25:08,720
docker container

00:25:06,559 --> 00:25:11,279
for the latest released version of

00:25:08,720 --> 00:25:14,559
xilinx qamu so you can just

00:25:11,279 --> 00:25:18,159
basically feed the container a url for

00:25:14,559 --> 00:25:18,159
an image to load

00:25:18,480 --> 00:25:28,880
and it will fire off qamu for you and

00:25:23,039 --> 00:25:32,880
load that load and run that image

00:25:28,880 --> 00:25:34,640
right uh there's a question about

00:25:32,880 --> 00:25:38,640
address translation maybe bill you can

00:25:34,640 --> 00:25:38,640
take that so i know the latest

00:25:40,159 --> 00:25:45,120
um okay it says does open amp support

00:25:43,919 --> 00:25:47,360
address translation

00:25:45,120 --> 00:25:49,440
as an example one core might not have

00:25:47,360 --> 00:25:51,760
the same um memory as the m chord for

00:25:49,440 --> 00:25:51,760
example

00:25:52,720 --> 00:25:58,400
yeah so the the rp message

00:25:55,760 --> 00:25:59,360
transport itself that it's transparent

00:25:58,400 --> 00:26:02,720
to that

00:25:59,360 --> 00:26:06,240
when you get into sharing buffers as

00:26:02,720 --> 00:26:08,320
as thomas mentioned in the big data

00:26:06,240 --> 00:26:11,440
support

00:26:08,320 --> 00:26:13,120
that can either be pre-arranged um in

00:26:11,440 --> 00:26:14,480
which case

00:26:13,120 --> 00:26:16,640
and that's really the case that's

00:26:14,480 --> 00:26:19,440
covered today um

00:26:16,640 --> 00:26:19,760
and each side sort of knows how to get

00:26:19,440 --> 00:26:23,039
to

00:26:19,760 --> 00:26:24,080
the pre-arranged memory section that's

00:26:23,039 --> 00:26:27,840
the most common one

00:26:24,080 --> 00:26:31,520
today doing that dynamically

00:26:27,840 --> 00:26:34,320
is sort of the you know sort of

00:26:31,520 --> 00:26:35,679
the future of that big data sharing a

00:26:34,320 --> 00:26:37,760
model which is

00:26:35,679 --> 00:26:40,720
you know somebody one side could

00:26:37,760 --> 00:26:44,159
dynamically inform the other

00:26:40,720 --> 00:26:45,600
about a new shared memory area that it

00:26:44,159 --> 00:26:49,679
could use

00:26:45,600 --> 00:26:49,679
and have maybe

00:26:49,919 --> 00:26:53,360
certainly the kernel drivers for rp

00:26:52,000 --> 00:26:57,120
message and remote proc

00:26:53,360 --> 00:26:59,440
do set up an smm mu if that sits in

00:26:57,120 --> 00:27:03,120
front of the remote proc

00:26:59,440 --> 00:27:05,440
but what if the remote proc itself has

00:27:03,120 --> 00:27:09,760
an mmu how does that get set up that's

00:27:05,440 --> 00:27:09,760
that's kind of you know under discussion

00:27:10,159 --> 00:27:14,400
i think we're running out of time here

00:27:12,400 --> 00:27:17,520
actually there's a question about

00:27:14,400 --> 00:27:19,440
supporting clang as they see front-end i

00:27:17,520 --> 00:27:21,679
guess

00:27:19,440 --> 00:27:23,760
i don't know ed have you been using

00:27:21,679 --> 00:27:25,600
little vm or clangers the most with

00:27:23,760 --> 00:27:29,360
which compilers

00:27:25,600 --> 00:27:34,000
have been used so far currently um

00:27:29,360 --> 00:27:36,799
currently it's gcc

00:27:34,000 --> 00:27:36,799
um and

00:27:37,200 --> 00:27:42,960
iar uh but that's

00:27:41,360 --> 00:27:44,480
that that's uh because that's a

00:27:42,960 --> 00:27:48,240
commercial compiler that's

00:27:44,480 --> 00:27:50,880
done in the individual in individual

00:27:48,240 --> 00:27:52,399
companies and the results ported back up

00:27:50,880 --> 00:27:56,320
um

00:27:52,399 --> 00:27:56,320
clang is interesting but uh

00:27:57,200 --> 00:28:00,799
again it'll be a ways out unless

00:27:59,039 --> 00:28:04,559
somebody wants to dig in

00:28:00,799 --> 00:28:08,480
and send patches or send pull requests

00:28:04,559 --> 00:28:10,240
pull requests we will happily look at

00:28:08,480 --> 00:28:12,640
and i think we're out of time here

00:28:10,240 --> 00:28:16,399
there's one maybe bill very quickly can

00:28:12,640 --> 00:28:16,399
remote proc be a sub module from

00:28:18,799 --> 00:28:23,039
so feel free all right sorry so bill

00:28:21,919 --> 00:28:24,960
maybe you can take that

00:28:23,039 --> 00:28:26,399
not sure exactly what sub module means

00:28:24,960 --> 00:28:28,720
there but maybe you can expand on that a

00:28:26,399 --> 00:28:28,720
little bit

00:28:29,440 --> 00:28:32,960
yeah um

00:28:30,720 --> 00:28:34,960
[Music]

00:28:32,960 --> 00:28:37,039
i i'm not really sure how to handle that

00:28:34,960 --> 00:28:40,399
i mean are we talking kernel side

00:28:37,039 --> 00:28:44,480
uh certainly uh on the kernel it can be

00:28:40,399 --> 00:28:48,559
loaded as it can be a loadable module

00:28:44,480 --> 00:28:51,279
on the rtos side

00:28:48,559 --> 00:28:53,360
you know it's a library it doesn't

00:28:51,279 --> 00:28:56,840
really make any statements about

00:28:53,360 --> 00:28:58,320
how you do image management for your

00:28:56,840 --> 00:29:01,600
firmware um

00:28:58,320 --> 00:29:03,919
so you know you could make it a

00:29:01,600 --> 00:29:06,480
separately loadable module if you if you

00:29:03,919 --> 00:29:10,640
had such a framework it doesn't

00:29:06,480 --> 00:29:13,520
natively support that um

00:29:10,640 --> 00:29:14,640
maybe the question is about you know do

00:29:13,520 --> 00:29:17,039
we have a framework

00:29:14,640 --> 00:29:18,720
that allows you to dynamically load new

00:29:17,039 --> 00:29:20,640
modules on the rtos side

00:29:18,720 --> 00:29:23,520
that's not in scope today that's an

00:29:20,640 --> 00:29:23,520
interesting concept

00:29:23,919 --> 00:29:27,760
maybe you can also and i don't know if

00:29:26,480 --> 00:29:30,000
on the library's side

00:29:27,760 --> 00:29:31,440
since it is it is library if you only

00:29:30,000 --> 00:29:34,559
want to use

00:29:31,440 --> 00:29:35,039
a remote proc do you drag in everything

00:29:34,559 --> 00:29:37,440
else

00:29:35,039 --> 00:29:38,240
or how does that work i don't know but

00:29:37,440 --> 00:29:41,679
that could be

00:29:38,240 --> 00:29:44,559
part of the question yeah good point

00:29:41,679 --> 00:29:45,120
um previously they were sort of bundled

00:29:44,559 --> 00:29:48,399
together

00:29:45,120 --> 00:29:49,840
and ed probably uh better at current

00:29:48,399 --> 00:29:51,600
status but there was a lot of work to

00:29:49,840 --> 00:29:53,600
break them apart so

00:29:51,600 --> 00:29:55,279
the most common is you only want to use

00:29:53,600 --> 00:29:55,919
the rp message part you don't want to

00:29:55,279 --> 00:29:58,720
use the

00:29:55,919 --> 00:30:01,520
remote proc part and that's you know

00:29:58,720 --> 00:30:01,520
certainly doable

00:30:06,840 --> 00:30:10,080
um

00:30:08,240 --> 00:30:12,000
all right after a slow start we got a

00:30:10,080 --> 00:30:23,840
lot of questions here and

00:30:12,000 --> 00:30:23,840
have we missed any of the questions here

00:30:26,480 --> 00:30:29,279
okay good

00:30:29,919 --> 00:30:33,440
all right good really good questions i

00:30:32,640 --> 00:30:36,799
hope this was

00:30:33,440 --> 00:30:38,320
useful for to to people and if you have

00:30:36,799 --> 00:30:39,360
other questions of course you can always

00:30:38,320 --> 00:30:42,799
contact

00:30:39,360 --> 00:30:46,080
me or natalie and we have the uh

00:30:42,799 --> 00:30:49,200
contact information here on there

00:30:46,080 --> 00:30:51,440
on this side here so thanks everyone

00:30:49,200 --> 00:30:53,039
and please join the other talks that we

00:30:51,440 --> 00:30:56,320
have a little bit later about system

00:30:53,039 --> 00:30:56,320
device trees and remote

00:30:57,159 --> 00:31:00,159

YouTube URL: https://www.youtube.com/watch?v=u1e96LQb89U


