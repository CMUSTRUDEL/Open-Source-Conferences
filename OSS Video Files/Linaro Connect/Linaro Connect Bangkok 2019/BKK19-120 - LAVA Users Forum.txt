Title: BKK19-120 - LAVA Users Forum
Publication date: 2019-04-11
Playlist: Linaro Connect Bangkok 2019
Description: 
	Abstract
Continuing our regular Users Forum, for all your questions about LAVA.

Steve McIntyre / Principal Software Engineer Arm
Long-time assignee into Linaro from Arm
Working on LAVA for over 3 years.
Captions: 
	00:00:05,430 --> 00:00:10,530
um I am NOT going to be talking about

00:00:07,890 --> 00:00:15,869
much today the point of this is for you

00:00:10,530 --> 00:00:19,020
guys to talk to us but quick updates on

00:00:15,869 --> 00:00:23,009
what we've done since last time we have

00:00:19,020 --> 00:00:25,920
this session back in Vancouver the love

00:00:23,009 --> 00:00:31,289
of software community project is fully

00:00:25,920 --> 00:00:32,940
up and running so I'm assuming people

00:00:31,289 --> 00:00:37,830
have heard about this before but I'll

00:00:32,940 --> 00:00:41,310
quickly skim through we have a community

00:00:37,830 --> 00:00:44,430
led project which plenty of scope for

00:00:41,310 --> 00:00:45,960
people from lots of other companies and

00:00:44,430 --> 00:00:50,790
hopefully lots of members to get

00:00:45,960 --> 00:00:53,000
involved so we have our own get repo all

00:00:50,790 --> 00:00:56,340
powered by get lab it's really awesome

00:00:53,000 --> 00:00:58,860
and we are providing our official

00:00:56,340 --> 00:01:01,770
releases we have Debian packages we have

00:00:58,860 --> 00:01:04,110
docker images we have all of the

00:01:01,770 --> 00:01:06,750
official home for all of our Docs is all

00:01:04,110 --> 00:01:08,520
lava software to org if you haven't been

00:01:06,750 --> 00:01:14,850
there please go and have a look there's

00:01:08,520 --> 00:01:20,030
lots of cool stuff we have been doing

00:01:14,850 --> 00:01:22,800
how to do some updates on the

00:01:20,030 --> 00:01:24,690
configuration for lava to deal with some

00:01:22,800 --> 00:01:26,940
security updates from Jango that came

00:01:24,690 --> 00:01:29,490
out apologies if you've been bitten by

00:01:26,940 --> 00:01:32,760
this the allowed hosts thing was a real

00:01:29,490 --> 00:01:34,950
pain in the ass for everybody

00:01:32,760 --> 00:01:36,930
there were conflict edges around it if

00:01:34,950 --> 00:01:40,229
people are still struggling we can help

00:01:36,930 --> 00:01:43,880
with this it shouldn't be too hard I

00:01:40,229 --> 00:01:47,070
hope we've added some new test methods

00:01:43,880 --> 00:01:49,170
into larvae recently which I think lots

00:01:47,070 --> 00:01:52,260
of people are interested in we

00:01:49,170 --> 00:01:56,729
explicitly now support doing some

00:01:52,260 --> 00:01:59,310
limited boot loader testing and recovery

00:01:56,729 --> 00:02:01,440
of devices in cases where you might have

00:01:59,310 --> 00:02:04,799
deployed firmware or something and it

00:02:01,440 --> 00:02:06,430
didn't come up and they really useful

00:02:04,799 --> 00:02:08,670
one is interactive test

00:02:06,430 --> 00:02:12,790
so instead of having to provide

00:02:08,670 --> 00:02:15,280
necessarily a complete set of scripts

00:02:12,790 --> 00:02:18,880
and things in the lava overlay you can

00:02:15,280 --> 00:02:22,000
in fact now talk directly to the serial

00:02:18,880 --> 00:02:23,620
port by providing a set of regular

00:02:22,000 --> 00:02:26,620
expressions essentially you could life

00:02:23,620 --> 00:02:27,850
being expect yourself some people have

00:02:26,620 --> 00:02:30,100
been asking for this for a very long

00:02:27,850 --> 00:02:33,970
time when we did some awesome work and

00:02:30,100 --> 00:02:35,710
now we know it's working we're hoping to

00:02:33,970 --> 00:02:39,340
do more on this in the future we'll come

00:02:35,710 --> 00:02:42,730
on to that we have a REST API

00:02:39,340 --> 00:02:44,830
Milosz did a lot of work on this so you

00:02:42,730 --> 00:02:47,170
there is now easier access to the test

00:02:44,830 --> 00:02:50,680
results you've always found an X in

00:02:47,170 --> 00:02:53,620
mobile and C API people ask for West as

00:02:50,680 --> 00:02:57,760
well whatever mental life easy for

00:02:53,620 --> 00:02:59,920
people you know what if this does allow

00:02:57,760 --> 00:03:03,040
you to export results in tap thirteen

00:02:59,920 --> 00:03:08,770
j-unit formats as well as our native

00:03:03,040 --> 00:03:10,450
Laura loves I hope it's useful we've

00:03:08,770 --> 00:03:11,410
added lots of new device types this

00:03:10,450 --> 00:03:14,320
happens all the time

00:03:11,410 --> 00:03:19,810
and obviously bug fixes people like bug

00:03:14,320 --> 00:03:22,030
fixes we have some plans for the work we

00:03:19,810 --> 00:03:24,970
want to do in the next six months we've

00:03:22,030 --> 00:03:27,310
already started doing them doing a load

00:03:24,970 --> 00:03:29,230
of work where meat has done a load of

00:03:27,310 --> 00:03:31,709
work on a lot of fad - he'll be talking

00:03:29,230 --> 00:03:34,230
about that more later in the week

00:03:31,709 --> 00:03:38,200
tomorrow

00:03:34,230 --> 00:03:39,970
lava fed is an awesome way that you in

00:03:38,200 --> 00:03:42,489
out in the community can help us do

00:03:39,970 --> 00:03:46,930
functional testing of lava again come to

00:03:42,489 --> 00:03:49,230
the toilet great Stefan has also already

00:03:46,930 --> 00:03:55,060
been working on refactoring our

00:03:49,230 --> 00:03:57,190
authentication code and here is the the

00:03:55,060 --> 00:03:58,989
way that we do ACLs north wise actually

00:03:57,190 --> 00:03:59,800
involve our dependent at the moment

00:03:58,989 --> 00:04:03,430
depends on

00:03:59,800 --> 00:04:05,050
some we old data to custom code but we

00:04:03,430 --> 00:04:08,470
want to move away for so that's

00:04:05,050 --> 00:04:10,750
happening we also have some ideas when

00:04:08,470 --> 00:04:14,020
these new ideas only so far on things

00:04:10,750 --> 00:04:16,269
that we want to do we want to make love

00:04:14,020 --> 00:04:19,750
a more scalable I said we're gonna make

00:04:16,269 --> 00:04:21,820
it more easy to have an instance with

00:04:19,750 --> 00:04:24,670
hundreds or even thousands of devices on

00:04:21,820 --> 00:04:26,800
it we want to want high availability if

00:04:24,670 --> 00:04:28,420
you can have that size of lab you don't

00:04:26,800 --> 00:04:29,890
want it to be going up and down like a

00:04:28,420 --> 00:04:34,120
yo-yo when you're doing a server walk

00:04:29,890 --> 00:04:37,840
right we're looking at debt container

00:04:34,120 --> 00:04:40,000
based workflow so what does that mean it

00:04:37,840 --> 00:04:42,160
means that we're moving more and more of

00:04:40,000 --> 00:04:44,590
our recommended way of installing rather

00:04:42,160 --> 00:04:48,010
than using it that scale into docker

00:04:44,590 --> 00:04:51,310
containers this actually does not depend

00:04:48,010 --> 00:04:53,680
a lot of these other things we are

00:04:51,310 --> 00:04:56,800
looking at refactoring our - shell

00:04:53,680 --> 00:04:58,660
definitions part of the work that we

00:04:56,800 --> 00:05:00,220
that has already happened with the

00:04:58,660 --> 00:05:03,520
bootloader testing an interactive

00:05:00,220 --> 00:05:08,470
testing will be further expanded with

00:05:03,520 --> 00:05:11,710
this and there's also a simple one we

00:05:08,470 --> 00:05:13,840
have supports for device type aliases at

00:05:11,710 --> 00:05:16,960
the moment but basically just don't work

00:05:13,840 --> 00:05:18,820
at all if anybody is using this please

00:05:16,960 --> 00:05:20,290
tell those nate'll because we're about

00:05:18,820 --> 00:05:23,320
to throw it all the way and come up with

00:05:20,290 --> 00:05:24,760
something better and obviously there's a

00:05:23,320 --> 00:05:28,300
whole load of more things that I'm sure

00:05:24,760 --> 00:05:29,980
happen key thing is what we're doing in

00:05:28,300 --> 00:05:32,169
work in lava especially with the

00:05:29,980 --> 00:05:34,600
community of core get is we're making

00:05:32,169 --> 00:05:38,530
all of this more open previously we were

00:05:34,600 --> 00:05:41,440
doing most of this the design design

00:05:38,530 --> 00:05:43,450
discussions about this not only closed

00:05:41,440 --> 00:05:46,030
as such but it was a lot of it was done

00:05:43,450 --> 00:05:47,710
with internal discussion manaro as we

00:05:46,030 --> 00:05:50,860
want more people to get involved and

00:05:47,710 --> 00:05:53,860
contribute we want to have a wider

00:05:50,860 --> 00:05:55,720
discussion about things that we want to

00:05:53,860 --> 00:06:02,520
work on and we want other people to help

00:05:55,720 --> 00:06:04,630
with it as well so diving so having

00:06:02,520 --> 00:06:07,020
described what we have done on what

00:06:04,630 --> 00:06:08,190
we're planning on doing this is your bit

00:06:07,020 --> 00:06:11,250
talk

00:06:08,190 --> 00:06:13,920
to us what are we doing well what are we

00:06:11,250 --> 00:06:16,560
doing less well what are we missing

00:06:13,920 --> 00:06:19,020
you talk to us right now we have

00:06:16,560 --> 00:06:20,610
microphones if you need help with

00:06:19,020 --> 00:06:23,130
configuring your own larva or if you've

00:06:20,610 --> 00:06:25,200
got problems that's perfectly valid if

00:06:23,130 --> 00:06:27,720
you've got comments on what you think we

00:06:25,200 --> 00:06:30,440
should be doing so long as they're at

00:06:27,720 --> 00:06:34,170
least not too rude that's that's great

00:06:30,440 --> 00:06:37,770
we have public design meetings now every

00:06:34,170 --> 00:06:39,900
Wednesday they're linked from the lava

00:06:37,770 --> 00:06:42,090
software or website please come and join

00:06:39,900 --> 00:06:45,720
us and obviously we've got the mailing

00:06:42,090 --> 00:06:48,330
lists we have lava devourer lava users

00:06:45,720 --> 00:06:50,450
and also if you're willing lava please

00:06:48,330 --> 00:06:52,500
be on the lava now - moaning lists I

00:06:50,450 --> 00:06:55,080
should have put it on the slides if

00:06:52,500 --> 00:06:57,000
you're not on the lava announce list you

00:06:55,080 --> 00:06:58,980
won't get release announcement you won't

00:06:57,000 --> 00:07:00,570
get the important security updates that

00:06:58,980 --> 00:07:04,290
we might talk about that kind of thing

00:07:00,570 --> 00:07:05,880
we will you recommend it so you'd like

00:07:04,290 --> 00:07:13,060
to start with it with a comment or

00:07:05,880 --> 00:07:18,760
question deathly silence

00:07:13,060 --> 00:07:20,770
hands up who's using lava today Oh quite

00:07:18,760 --> 00:07:22,300
a few people are you are you happy with

00:07:20,770 --> 00:07:27,420
lava does it do what you want

00:07:22,300 --> 00:07:29,920
Oh God apparently not

00:07:27,420 --> 00:07:35,680
so what are we missing what should we do

00:07:29,920 --> 00:07:42,520
chase we release before we release the

00:07:35,680 --> 00:07:50,919
new factory to retested I have some

00:07:42,520 --> 00:07:54,730
problems before we upgrade it so create

00:07:50,919 --> 00:07:58,630
waves what precisely I really remember

00:07:54,730 --> 00:08:04,030
but I think one since the test jump

00:07:58,630 --> 00:08:08,100
cannot be cannot be this meteorite now

00:08:04,030 --> 00:08:11,169
it will turn something you say down type

00:08:08,100 --> 00:08:17,410
that doesn't exist some case missing

00:08:11,169 --> 00:08:20,890
like that ok it was when you were

00:08:17,410 --> 00:08:22,780
removing attention right you were

00:08:20,890 --> 00:08:27,280
removing attention from the database

00:08:22,780 --> 00:08:29,950
directly yes this bug has been fixed in

00:08:27,280 --> 00:08:31,930
one version but I know as some people

00:08:29,950 --> 00:08:36,010
had a problem because they were used to

00:08:31,930 --> 00:08:38,050
do that directly the database it's not a

00:08:36,010 --> 00:08:39,610
good idea to do that anymore you can use

00:08:38,050 --> 00:08:42,370
elbows directly because the state

00:08:39,610 --> 00:08:45,640
machine would be if you remove directly

00:08:42,370 --> 00:08:48,430
inside the database you object it might

00:08:45,640 --> 00:08:51,850
break a bit the state machine use Django

00:08:48,430 --> 00:08:54,040
and pearls it will work perfectly ok and

00:08:51,850 --> 00:08:56,830
to answer a question about do we tests

00:08:54,040 --> 00:09:01,360
upgrade from one release to another we

00:08:56,830 --> 00:09:04,240
do test that we can upgrade from the

00:09:01,360 --> 00:09:05,260
current release to the next one we do

00:09:04,240 --> 00:09:09,880
that every day

00:09:05,260 --> 00:09:12,730
it's a CIS chocolate to that we install

00:09:09,880 --> 00:09:14,530
a fresh install and we upgrade it to the

00:09:12,730 --> 00:09:17,200
next release but we don't do anything

00:09:14,530 --> 00:09:20,140
else we don't add jobs and tests finis

00:09:17,200 --> 00:09:24,100
it's it's difficult to do that

00:09:20,140 --> 00:09:25,870
there's another question for I think

00:09:24,100 --> 00:09:28,810
it's also how it gets better different

00:09:25,870 --> 00:09:31,630
apartment they actually help problem to

00:09:28,810 --> 00:09:34,930
do the up question because of the me the

00:09:31,630 --> 00:09:38,920
packet written essay maybe the the Mira

00:09:34,930 --> 00:09:41,530
disease isn't the correct one I don't

00:09:38,920 --> 00:09:43,810
know they have it installed for apparent

00:09:41,530 --> 00:09:49,180
when they upgrade to they hate the I

00:09:43,810 --> 00:09:53,260
mean package a dependency issue an admin

00:09:49,180 --> 00:09:56,770
package so one thing that we possibly

00:09:53,260 --> 00:10:00,490
haven't publicized well enough is that

00:09:56,770 --> 00:10:03,520
we moved our recommended repositories

00:10:00,490 --> 00:10:05,830
onto lava software org we definitely

00:10:03,520 --> 00:10:10,750
recommend that anyone who were using

00:10:05,830 --> 00:10:12,850
lava say on Debian stretch which is now

00:10:10,750 --> 00:10:15,910
stable and updates and Debian are not

00:10:12,850 --> 00:10:19,150
happening very often definitely also

00:10:15,910 --> 00:10:22,480
please pull in the stretch back ports we

00:10:19,150 --> 00:10:25,360
po that we have alongside that that will

00:10:22,480 --> 00:10:27,550
pull in any extra packages that we think

00:10:25,360 --> 00:10:30,730
you might need to make sure that it all

00:10:27,550 --> 00:10:34,350
works well happy to talk about what talk

00:10:30,730 --> 00:10:34,350
about what you've got in more detail

00:10:38,880 --> 00:10:43,720
please I mean for that kind of thing if

00:10:42,010 --> 00:10:46,030
it's a specific upgrade problem or

00:10:43,720 --> 00:10:47,380
whatever definitely you know details on

00:10:46,030 --> 00:10:49,060
the mailing list or now I'll see you

00:10:47,380 --> 00:10:52,230
good and then we can go through with you

00:10:49,060 --> 00:10:52,230
and debug the problem directly

00:11:00,699 --> 00:11:05,180
and the author of silent again

00:11:03,079 --> 00:11:06,709
so I'll I'll give a little with a

00:11:05,180 --> 00:11:09,769
background I'm gonna steal when he's

00:11:06,709 --> 00:11:11,720
under slightly about lava fed one of the

00:11:09,769 --> 00:11:14,089
things that we have done as we moved

00:11:11,720 --> 00:11:17,329
over to lava software to org is well

00:11:14,089 --> 00:11:21,319
said we set up get lab if the CI is

00:11:17,329 --> 00:11:23,810
awesome so we automatically build new

00:11:21,319 --> 00:11:26,449
packages new docker images everything on

00:11:23,810 --> 00:11:28,310
every single commits on their own then

00:11:26,449 --> 00:11:31,220
we can tag things automatically and

00:11:28,310 --> 00:11:33,740
releases pop out it's really great one

00:11:31,220 --> 00:11:36,940
thing that we can't do automatically

00:11:33,740 --> 00:11:39,440
with lava through that to get lab CI is

00:11:36,940 --> 00:11:42,050
actually test that lava itself is

00:11:39,440 --> 00:11:43,940
functional but might seem odd but

00:11:42,050 --> 00:11:46,040
obviously there's a limit as to what

00:11:43,940 --> 00:11:48,410
devices we can have attached to that

00:11:46,040 --> 00:11:50,029
server and we can't go through and do a

00:11:48,410 --> 00:11:54,259
full matrix of testing on all the

00:11:50,029 --> 00:11:58,009
possible devices so lava FET is a way

00:11:54,259 --> 00:12:00,980
arm that both power labs and other

00:11:58,009 --> 00:12:04,850
contributors labs can be used directly

00:12:00,980 --> 00:12:07,610
on a regular basis to check that we

00:12:04,850 --> 00:12:09,889
haven't broken support for devices again

00:12:07,610 --> 00:12:12,199
one of the things that we have found

00:12:09,889 --> 00:12:14,839
though over the last few years is well

00:12:12,199 --> 00:12:18,439
we have a lot of device types in the

00:12:14,839 --> 00:12:20,449
Lenovo lab many many other people have

00:12:18,439 --> 00:12:21,199
been contributing device support and

00:12:20,449 --> 00:12:23,389
that's awesome

00:12:21,199 --> 00:12:26,389
the downside is we can't necessarily

00:12:23,389 --> 00:12:29,959
test the support for a particular device

00:12:26,389 --> 00:12:32,959
might have been broken what we want to

00:12:29,959 --> 00:12:35,569
do is to get more feedback obviously the

00:12:32,959 --> 00:12:38,420
earlier in the CI loop we can we can get

00:12:35,569 --> 00:12:42,259
feedback about broken things the better

00:12:38,420 --> 00:12:44,839
lava can be so lava fed is a way that

00:12:42,259 --> 00:12:47,360
you can actually share your devices with

00:12:44,839 --> 00:12:49,009
us lets us test our software on your

00:12:47,360 --> 00:12:51,470
devices and make sure we've not broken

00:12:49,009 --> 00:12:53,660
things again come along to the talk and

00:12:51,470 --> 00:12:57,680
and find out more about how it works and

00:12:53,660 --> 00:13:01,600
why it works but it's a great way of

00:12:57,680 --> 00:13:05,580
contributing so oh yeah

00:13:01,600 --> 00:13:08,470
I just have a design question really

00:13:05,580 --> 00:13:12,130
sometimes when I go in and look at the

00:13:08,470 --> 00:13:14,500
admin interface and groups in lava and

00:13:12,130 --> 00:13:18,250
see all the group settings but I do not

00:13:14,500 --> 00:13:19,900
see the members of the group is that

00:13:18,250 --> 00:13:22,030
something that you could possibly at

00:13:19,900 --> 00:13:24,790
some point implement because you can see

00:13:22,030 --> 00:13:27,280
the group if you look at a user you can

00:13:24,790 --> 00:13:29,730
see which groups the user is in but you

00:13:27,280 --> 00:13:34,450
can't see which users are in the group

00:13:29,730 --> 00:13:38,110
which is sometimes convenient okay yeah

00:13:34,450 --> 00:13:40,030
that's an ID so fun fact is that we are

00:13:38,110 --> 00:13:41,650
not the one making as part of the admin

00:13:40,030 --> 00:13:44,530
interface it's it's made by Django

00:13:41,650 --> 00:13:46,390
itself but we can override it if we want

00:13:44,530 --> 00:13:50,920
you said something at an avi why not

00:13:46,390 --> 00:13:52,600
it's an ID - interesting idea but

00:13:50,920 --> 00:13:54,340
couldn't we can extract from the

00:13:52,600 --> 00:13:58,630
database the members of that group

00:13:54,340 --> 00:14:02,440
currently so just presenting when you if

00:13:58,630 --> 00:14:04,420
you look at a particular device that's

00:14:02,440 --> 00:14:05,560
true restricted to a group or a job to

00:14:04,420 --> 00:14:07,000
restrict it to a group if you could

00:14:05,560 --> 00:14:10,350
click on the group would get a list of

00:14:07,000 --> 00:14:13,350
people in that room that would be ideal

00:14:10,350 --> 00:14:13,350
yes

00:14:15,880 --> 00:14:22,209
sure it sounds quite simple to do please

00:14:19,029 --> 00:14:23,380
you know submit a you know a request do

00:14:22,209 --> 00:14:25,329
you know yeah

00:14:23,380 --> 00:14:27,399
put an issue in you know in our tracker

00:14:25,329 --> 00:14:28,449
and that sounds like the kind of thing

00:14:27,399 --> 00:14:38,139
that we should we should be able to do

00:14:28,449 --> 00:14:40,509
really easily one of the things that

00:14:38,139 --> 00:14:45,279
came up in the last hour we had before

00:14:40,509 --> 00:14:48,509
we came to this meeting is that there

00:14:45,279 --> 00:14:54,389
are there's an awful lot of knowledge

00:14:48,509 --> 00:14:57,880
about how we manage a fairly large lab

00:14:54,389 --> 00:15:00,310
that is not documented well out there

00:14:57,880 --> 00:15:02,610
that there nothing to do with lava they

00:15:00,310 --> 00:15:08,440
are the things that interact with lava

00:15:02,610 --> 00:15:10,449
report on how well a particular instance

00:15:08,440 --> 00:15:14,040
is doing how many infrastructure errors

00:15:10,449 --> 00:15:20,410
it's experiencing that sort of thing and

00:15:14,040 --> 00:15:24,759
reporting again managing USB hubs when

00:15:20,410 --> 00:15:26,589
they go AWOL which they sometimes do so

00:15:24,759 --> 00:15:29,649
we are actually were actively working on

00:15:26,589 --> 00:15:31,120
a document to lay all this out it will

00:15:29,649 --> 00:15:34,290
be become part of that collaborate page

00:15:31,120 --> 00:15:37,149
that we were looking at earlier so that

00:15:34,290 --> 00:15:38,620
it's a lot of that yes we've got quite a

00:15:37,149 --> 00:15:41,920
lot of experience of doing this so we

00:15:38,620 --> 00:15:45,009
just sortin yes you people will get that

00:15:41,920 --> 00:15:46,689
information it's easy to think oh that's

00:15:45,009 --> 00:15:49,509
obvious when you've been doing it for

00:15:46,689 --> 00:15:52,649
decades yes yeah why does every point

00:15:49,509 --> 00:15:52,649
I'd not be doing this route decades

00:15:59,270 --> 00:16:04,230
could you talk a little bit more about

00:16:01,200 --> 00:16:05,790
the validation the job validation stuff

00:16:04,230 --> 00:16:07,650
that you've added and what it checks now

00:16:05,790 --> 00:16:08,940
and how to use it and what it's gonna

00:16:07,650 --> 00:16:12,780
check in the future cuz I think that's

00:16:08,940 --> 00:16:15,630
really useful sure the schema not sure

00:16:12,780 --> 00:16:19,530
so one of the issues that we found over

00:16:15,630 --> 00:16:21,420
the last few a couple of years is that

00:16:19,530 --> 00:16:23,790
many of the problems that people are

00:16:21,420 --> 00:16:25,710
finding with lava actually come down to

00:16:23,790 --> 00:16:29,550
the test jobs that are being submitted

00:16:25,710 --> 00:16:32,010
or actually not valid but it's very

00:16:29,550 --> 00:16:33,570
difficult to explain why without

00:16:32,010 --> 00:16:37,170
something to actually tell you what's

00:16:33,570 --> 00:16:39,900
wrong so we've stopped we've started

00:16:37,170 --> 00:16:41,970
adding some schema validation so lava

00:16:39,900 --> 00:16:46,700
will actually tell you or you can find

00:16:41,970 --> 00:16:46,700
out what it thinks is wrong in your job

00:16:47,900 --> 00:16:52,050
there's plenty of mics around mention

00:16:50,280 --> 00:16:53,520
lava CLI too because if anybody isn't

00:16:52,050 --> 00:16:56,850
using a lava see now it's really great

00:16:53,520 --> 00:16:58,590
to graph as well yes yes so the one

00:16:56,850 --> 00:17:02,550
thing that's important at the moment is

00:16:58,590 --> 00:17:04,560
that the job validation will not reject

00:17:02,550 --> 00:17:11,240
your job it was still trying to run it

00:17:04,560 --> 00:17:15,360
but you'll get a report of warnings and

00:17:11,240 --> 00:17:17,660
yeah you it will not at the moment

00:17:15,360 --> 00:17:20,970
reject jobs one of the classic problems

00:17:17,660 --> 00:17:23,490
that we were going to reject off for is

00:17:20,970 --> 00:17:25,230
where the overall job timeout

00:17:23,490 --> 00:17:28,200
isn't as long as some of the timeouts

00:17:25,230 --> 00:17:30,060
within the job and things like that so

00:17:28,200 --> 00:17:34,230
the way to think of this is like a lava

00:17:30,060 --> 00:17:37,020
mint just giving you a sanity check that

00:17:34,230 --> 00:17:38,550
it should be reasonable so what we want

00:17:37,020 --> 00:17:40,890
to get through and this has been a

00:17:38,550 --> 00:17:43,920
philosophy of lava for a very long time

00:17:40,890 --> 00:17:45,810
is fail early if there is something in

00:17:43,920 --> 00:17:48,630
your test job that is actually clearly

00:17:45,810 --> 00:17:50,910
wrong we would rather report that

00:17:48,630 --> 00:17:53,880
immediately rather than maybe go away

00:17:50,910 --> 00:17:55,890
wait for job to be queued run a test for

00:17:53,880 --> 00:17:58,920
an hour or two and then white near the

00:17:55,890 --> 00:18:00,870
end fail because you've made it to hypo

00:17:58,920 --> 00:18:02,400
in your in your job definition that kind

00:18:00,870 --> 00:18:06,570
of

00:18:02,400 --> 00:18:08,670
if we can find out up front and tell you

00:18:06,570 --> 00:18:10,830
that actually some of these definitions

00:18:08,670 --> 00:18:12,960
you're putting in or meaningless and

00:18:10,830 --> 00:18:14,580
don't do anything for the job or like

00:18:12,960 --> 00:18:17,130
Dave said or your time outs are all

00:18:14,580 --> 00:18:21,600
broken we want to give that information

00:18:17,130 --> 00:18:24,770
back so for now we've added no warnings

00:18:21,600 --> 00:18:29,900
you can check you can ask with lava CLI

00:18:24,770 --> 00:18:35,480
our lovely XML RPC base tool you can ask

00:18:29,900 --> 00:18:38,940
lava to check that your job is valid and

00:18:35,480 --> 00:18:41,130
then hopefully debug it if you do need

00:18:38,940 --> 00:18:43,200
any help because it's a struggle and you

00:18:41,130 --> 00:18:44,700
don't understand what's wrong please ask

00:18:43,200 --> 00:18:49,890
us on the lobby users list and we'll

00:18:44,700 --> 00:18:53,520
help you and lava CLI I'm in the middle

00:18:49,890 --> 00:18:56,490
of writing a tool to use lava CLI to

00:18:53,520 --> 00:19:00,650
actually do look historically back

00:18:56,490 --> 00:19:03,450
through jobs to say well yeah that one

00:19:00,650 --> 00:19:05,070
really shouldn't have shouldn't have

00:19:03,450 --> 00:19:10,620
worked or possibly didn't work because

00:19:05,070 --> 00:19:13,800
of X Y and Zed and the importance of

00:19:10,620 --> 00:19:15,720
that tool decreased when we decided not

00:19:13,800 --> 00:19:17,820
to reject jobs on the basis of things

00:19:15,720 --> 00:19:22,110
like time lapse but I'm still intent on

00:19:17,820 --> 00:19:25,230
getting that working so the goal for the

00:19:22,110 --> 00:19:28,890
simulator is so in the next release that

00:19:25,230 --> 00:19:31,800
we will do will print a warning on when

00:19:28,890 --> 00:19:33,780
you go to the job page you will be you

00:19:31,800 --> 00:19:35,550
will see at the top a warning so Steve

00:19:33,780 --> 00:19:38,910
is not valid with some information about

00:19:35,550 --> 00:19:40,980
how to fix it maybe not easy some time

00:19:38,910 --> 00:19:42,540
to understand so don't hesitate to send

00:19:40,980 --> 00:19:47,130
a Mac to have our users if you don't

00:19:42,540 --> 00:19:48,720
find out why and in the future not near

00:19:47,130 --> 00:19:50,670
future but in the future when you go to

00:19:48,720 --> 00:19:53,100
the submit page if the schema is not

00:19:50,670 --> 00:19:54,750
valid it will be refused but I am saying

00:19:53,100 --> 00:19:58,770
it's not in the new near future isn't

00:19:54,750 --> 00:20:00,980
far future and even further then if you

00:19:58,770 --> 00:20:03,350
submit using seminar PC and if it's

00:20:00,980 --> 00:20:08,240
I need it we be rejected but as I said

00:20:03,350 --> 00:20:10,340
even far further in the future for my

00:20:08,240 --> 00:20:12,790
perspective on the valve when you go to

00:20:10,340 --> 00:20:15,320
submit job on the submit job page

00:20:12,790 --> 00:20:18,350
rejecting it there and then on the basis

00:20:15,320 --> 00:20:20,360
that it's got some errors is I think a

00:20:18,350 --> 00:20:24,530
perfectly legitimate thing to do because

00:20:20,360 --> 00:20:27,200
it's only for the xml-rpc submission so

00:20:24,530 --> 00:20:28,549
because if he goes well what are you

00:20:27,200 --> 00:20:32,450
doing here because this actually has no

00:20:28,549 --> 00:20:34,460
meaning and no function so we agonized

00:20:32,450 --> 00:20:37,130
for a while over should we immediately

00:20:34,460 --> 00:20:42,290
go with the validation of rejecting jobs

00:20:37,130 --> 00:20:44,090
now and as Dave shaking his head we

00:20:42,290 --> 00:20:46,460
didn't want to suddenly have thousands

00:20:44,090 --> 00:20:48,500
and thousands of our lovely yacht lovely

00:20:46,460 --> 00:20:50,570
users complaining that what's wrong with

00:20:48,500 --> 00:20:53,480
my job it worked yesterday I've upgrade

00:20:50,570 --> 00:20:55,549
and now nothing runs so this is why

00:20:53,480 --> 00:20:57,710
we've started adding the validation we

00:20:55,549 --> 00:20:59,330
want to give people time to you know to

00:20:57,710 --> 00:21:03,169
deal with it and actually check their

00:20:59,330 --> 00:21:07,669
jobs are valid they will become hours at

00:21:03,169 --> 00:21:09,710
some point we may go through a few more

00:21:07,669 --> 00:21:11,690
rounds of adding more more things for

00:21:09,710 --> 00:21:13,730
the validation and more help because

00:21:11,690 --> 00:21:15,740
obviously you know the point of this is

00:21:13,730 --> 00:21:17,390
not just to annoy you and say no you and

00:21:15,740 --> 00:21:19,070
Eddie you've done it wrong obviously we

00:21:17,390 --> 00:21:20,660
want to help people to actually generate

00:21:19,070 --> 00:21:24,500
valid jobs because that's the whole

00:21:20,660 --> 00:21:28,220
point just one piece of feedback one I

00:21:24,500 --> 00:21:30,590
heard it I don't know that I for the use

00:21:28,220 --> 00:21:33,020
cases that I have in mind that XML

00:21:30,590 --> 00:21:34,640
submission versus the US mission should

00:21:33,020 --> 00:21:36,470
be treated any different because for

00:21:34,640 --> 00:21:38,660
example a lot of times we will go

00:21:36,470 --> 00:21:39,950
through the reset will have accent

00:21:38,660 --> 00:21:41,780
minute jobs and will click resubmit

00:21:39,950 --> 00:21:43,340
which then goes through the UI and that

00:21:41,780 --> 00:21:45,950
would be annoying if those failed even

00:21:43,340 --> 00:21:47,870
though the XML submitted jobs exactly so

00:21:45,950 --> 00:21:52,309
one of the things we know that people

00:21:47,870 --> 00:21:54,350
use to debug is the resubmit and we

00:21:52,309 --> 00:21:56,540
don't necessarily we would like not to

00:21:54,350 --> 00:21:58,400
have jobs fail that have been

00:21:56,540 --> 00:22:00,049
successfully working it's really

00:21:58,400 --> 00:22:02,660
frustrating you know it's like when you

00:22:00,049 --> 00:22:05,299
get a new compiler version and suddenly

00:22:02,660 --> 00:22:06,720
all of your nice code that worked fine

00:22:05,299 --> 00:22:08,610
and was really fast and

00:22:06,720 --> 00:22:09,990
accurate suddenly you compilers telling

00:22:08,610 --> 00:22:10,380
you it to abyssion it doesn't want it

00:22:09,990 --> 00:22:12,780
anymore

00:22:10,380 --> 00:22:14,789
you know it's it's annoying it's great

00:22:12,780 --> 00:22:17,159
when tools give you good clear

00:22:14,789 --> 00:22:19,350
Diagnostics it perhaps when they just

00:22:17,159 --> 00:22:21,299
stop maybe you should make the user

00:22:19,350 --> 00:22:22,770
click like to select the stop lights in

00:22:21,299 --> 00:22:28,490
the picture like 40 times and or just

00:22:22,770 --> 00:22:31,020
submit a bad driver oh maybe I would

00:22:28,490 --> 00:22:33,210
probably push back a little back a bit

00:22:31,020 --> 00:22:35,190
on this because I'd say okay your

00:22:33,210 --> 00:22:39,990
resubmitting and you've been given

00:22:35,190 --> 00:22:42,200
warnings about that job so maybe you

00:22:39,990 --> 00:22:45,330
should fix those things and possibly

00:22:42,200 --> 00:22:48,600
then have the option to say no submit it

00:22:45,330 --> 00:22:50,669
anyway yeah so exactly attack that's the

00:22:48,600 --> 00:22:52,620
thing it's a I was pushing I was pushing

00:22:50,669 --> 00:22:54,299
back in particular I didn't want to go

00:22:52,620 --> 00:22:56,070
from no warnings to suddenly these were

00:22:54,299 --> 00:23:00,630
hours and that's why we've gone with us

00:22:56,070 --> 00:23:03,299
the soft states for now in future I mean

00:23:00,630 --> 00:23:05,909
there was potentially talk about adding

00:23:03,299 --> 00:23:08,220
a schema version to test jobs so you

00:23:05,909 --> 00:23:10,289
could actually have things validated to

00:23:08,220 --> 00:23:13,590
say this is valid against a schema

00:23:10,289 --> 00:23:14,340
version 15 but it's not against 16 that

00:23:13,590 --> 00:23:17,010
kind of thing

00:23:14,340 --> 00:23:24,419
it's it's an idea we've had we haven't

00:23:17,010 --> 00:23:26,580
gone any detail on it whatsoever this

00:23:24,419 --> 00:23:29,429
but if if if you have it separated out

00:23:26,580 --> 00:23:31,169
as warnings and errors then you're gonna

00:23:29,429 --> 00:23:34,740
run into this over and over as you add

00:23:31,169 --> 00:23:38,130
more requirements to the winter this is

00:23:34,740 --> 00:23:40,320
always gonna be a thing so plan for the

00:23:38,130 --> 00:23:43,650
long haul of like yeah this is a warning

00:23:40,320 --> 00:23:45,870
for six months in Italy there yes there

00:23:43,650 --> 00:23:48,450
is no time limit at the moment on that

00:23:45,870 --> 00:23:51,000
and there shouldn't be we because what

00:23:48,450 --> 00:23:55,350
we should be seeing at least from my

00:23:51,000 --> 00:23:58,200
guideline would be 98% of submissions

00:23:55,350 --> 00:23:59,970
are not showing any warnings before we

00:23:58,200 --> 00:24:02,309
consider okay only then we can go and

00:23:59,970 --> 00:24:04,380
address those 2% more easily sure

00:24:02,309 --> 00:24:06,299
so of course the admins will see this

00:24:04,380 --> 00:24:08,340
kind of thing more easily the problem

00:24:06,299 --> 00:24:10,640
with going straight from warnings to

00:24:08,340 --> 00:24:13,020
hours is a lot of automated submissions

00:24:10,640 --> 00:24:15,149
where things are being templated and

00:24:13,020 --> 00:24:17,730
under a thousand jobs being submitted a

00:24:15,149 --> 00:24:18,480
day we suddenly end up with broken labs

00:24:17,730 --> 00:24:20,490
and they happen

00:24:18,480 --> 00:24:22,230
taking all the flack we don't want that

00:24:20,490 --> 00:24:22,890
you know admin to our friends they're

00:24:22,230 --> 00:24:26,970
nice people

00:24:22,890 --> 00:24:29,490
yeah we'll also work on a some way of

00:24:26,970 --> 00:24:32,600
reporting the percentage of errors on

00:24:29,490 --> 00:24:37,230
jobs of those warnings on jobs and the

00:24:32,600 --> 00:24:41,540
because 90% of time it will be one

00:24:37,230 --> 00:24:41,540
template that's just slightly wrong

00:24:41,660 --> 00:24:46,650
knowing that if you look at all the jobs

00:24:44,340 --> 00:24:48,929
that never is running on all instances

00:24:46,650 --> 00:24:51,840
on the planet I think more than our

00:24:48,929 --> 00:24:53,520
photo travels outlets invalid it it

00:24:51,840 --> 00:24:57,030
doesn't have any impact technically

00:24:53,520 --> 00:24:59,220
because it's some historical values that

00:24:57,030 --> 00:25:01,740
were first passed in the deploy states

00:24:59,220 --> 00:25:04,799
on the down low now just in know and are

00:25:01,740 --> 00:25:07,410
present in the boot stage presence but

00:25:04,799 --> 00:25:09,870
if you just activate right now she will

00:25:07,410 --> 00:25:13,470
just fail well technically it's still

00:25:09,870 --> 00:25:15,299
working just I mean my I've been through

00:25:13,470 --> 00:25:19,040
some of the jobs on ELQ aft as an

00:25:15,299 --> 00:25:19,040
example and we would fail

00:25:24,900 --> 00:25:36,670
so anything else to talk about so just

00:25:33,850 --> 00:25:39,070
recently it occurred to me to have my

00:25:36,670 --> 00:25:41,170
own lava lab but going from idea to

00:25:39,070 --> 00:25:44,080
implementation is quite a challenge

00:25:41,170 --> 00:25:46,330
currently so are you planning on having

00:25:44,080 --> 00:25:49,920
lava hardware to torque at some point

00:25:46,330 --> 00:25:52,450
some recommendations for a lava hardware

00:25:49,920 --> 00:25:55,150
so that's a really good question

00:25:52,450 --> 00:25:58,000
we've had discussions at a number of

00:25:55,150 --> 00:26:00,600
canet so over the last few years on how

00:25:58,000 --> 00:26:04,960
to make hardware better for testing with

00:26:00,600 --> 00:26:06,010
and Dave wants to talk join me so uh are

00:26:04,960 --> 00:26:07,660
you talking more about the

00:26:06,010 --> 00:26:08,650
infrastructure hardware absolutely

00:26:07,660 --> 00:26:10,420
because I think there are a lot of

00:26:08,650 --> 00:26:15,070
flatter lava users but what about our

00:26:10,420 --> 00:26:17,410
lab owners yeah yeah it's a very very

00:26:15,070 --> 00:26:21,220
good point and we are putting together a

00:26:17,410 --> 00:26:23,260
collaboration page about running not

00:26:21,220 --> 00:26:27,820
just the boards but the infrastructure

00:26:23,260 --> 00:26:29,800
for a lab it's I would say probably well

00:26:27,820 --> 00:26:32,140
it'll never be a hundred percent there

00:26:29,800 --> 00:26:34,390
because there's always something but we

00:26:32,140 --> 00:26:36,280
we're probably 60 or 70 percent they

00:26:34,390 --> 00:26:39,130
announced and we're adding stuff all the

00:26:36,280 --> 00:26:40,930
time and so to address that yes what

00:26:39,130 --> 00:26:42,940
what are the guidelines for when you're

00:26:40,930 --> 00:26:44,380
buying a server that has two acts actors

00:26:42,940 --> 00:26:46,030
work what are the guidelines for a

00:26:44,380 --> 00:26:49,450
server that has to act as a master or

00:26:46,030 --> 00:26:52,180
one that's a masked random worker what

00:26:49,450 --> 00:26:55,150
about the power control automated power

00:26:52,180 --> 00:26:56,350
control USB hubs you know all that sort

00:26:55,150 --> 00:26:59,200
of stuff

00:26:56,350 --> 00:27:04,630
well the experience of the last decade -

00:26:59,200 --> 00:27:06,790
thank you synthesized so yeah we we are

00:27:04,630 --> 00:27:08,350
putting that together that page is

00:27:06,790 --> 00:27:10,090
publicly available I think yes

00:27:08,350 --> 00:27:14,040
collaborate yeah

00:27:10,090 --> 00:27:16,000
so I'll ping you a link and

00:27:14,040 --> 00:27:18,520
contributions or suggestions are always

00:27:16,000 --> 00:27:19,780
welcome oh how do I do this oh yeah we

00:27:18,520 --> 00:27:21,460
didn't think of that because you just

00:27:19,780 --> 00:27:26,230
take it as read that you know how to do

00:27:21,460 --> 00:27:28,070
it could you send a link to lever users

00:27:26,230 --> 00:27:30,739
please

00:27:28,070 --> 00:27:33,679
and it's it's something that has come up

00:27:30,739 --> 00:27:36,590
we've spent quite a bit of time in the

00:27:33,679 --> 00:27:39,440
last few years improving the docks for

00:27:36,590 --> 00:27:41,659
test writers but the documentation for

00:27:39,440 --> 00:27:44,269
how to set up a lab how to go former

00:27:41,659 --> 00:27:46,309
here is a trivial lab that just launched

00:27:44,269 --> 00:27:48,830
qme devices to actually plugging

00:27:46,309 --> 00:27:50,929
everything together is yeah we we know

00:27:48,830 --> 00:27:52,629
it's not easy you know trying to

00:27:50,929 --> 00:27:55,460
especially when you try to scale up

00:27:52,629 --> 00:27:56,600
there's a lot of things but yet we

00:27:55,460 --> 00:27:59,210
definitely want to get good

00:27:56,600 --> 00:28:00,859
recommendations for you know which

00:27:59,210 --> 00:28:03,049
hardware to use whatever we're not quite

00:28:00,859 --> 00:28:04,789
at the stage of saying here is list go

00:28:03,049 --> 00:28:06,919
to Amazon and oh by the way we'll get a

00:28:04,789 --> 00:28:08,840
percentage you're right on referrals no

00:28:06,919 --> 00:28:12,049
that would be silly but we want to help

00:28:08,840 --> 00:28:14,450
with people with good advice on based on

00:28:12,049 --> 00:28:15,950
my own experience on how to set up at to

00:28:14,450 --> 00:28:17,749
set up a lab and how to make it be

00:28:15,950 --> 00:28:22,820
reliable we know that's that's useful

00:28:17,749 --> 00:28:24,590
yeah recently we have seen issues while

00:28:22,820 --> 00:28:28,099
downloading the snapshots images onto

00:28:24,590 --> 00:28:30,409
the lava lab it was working well like I

00:28:28,099 --> 00:28:32,989
could don't read the same image from my

00:28:30,409 --> 00:28:34,940
laptop with a very fast way but it was

00:28:32,989 --> 00:28:38,389
not happening on the lava lab so I

00:28:34,940 --> 00:28:40,429
complained that the but the bandwidth is

00:28:38,389 --> 00:28:42,679
very high there is a queue also very

00:28:40,429 --> 00:28:44,869
high at the particular time and it's

00:28:42,679 --> 00:28:46,279
been downloading multiple things but is

00:28:44,869 --> 00:28:50,119
there any way of course there is a

00:28:46,279 --> 00:28:51,859
mechanism of cache snapshots still there

00:28:50,119 --> 00:28:54,470
is a lag there is there any possibility

00:28:51,859 --> 00:28:58,489
of improving the download speed of the

00:28:54,470 --> 00:29:01,820
images because it's almost 250 mb and

00:28:58,489 --> 00:29:03,139
it's multiple of hundred devices so is

00:29:01,820 --> 00:29:05,269
this in your own map

00:29:03,139 --> 00:29:08,210
oh is this is a problem with the lava

00:29:05,269 --> 00:29:10,460
lab in sense of lkf to you okay in the

00:29:08,210 --> 00:29:15,220
central one so the factor I'll let Dave

00:29:10,460 --> 00:29:18,769
talk about that more sorry

00:29:15,220 --> 00:29:21,349
what was the question the your plans of

00:29:18,769 --> 00:29:22,999
improvement improving the downloading of

00:29:21,349 --> 00:29:28,849
snapshots images onto the devices

00:29:22,999 --> 00:29:31,460
display surrender flashing it so we

00:29:28,849 --> 00:29:34,380
currently have a 100 megabit line in the

00:29:31,460 --> 00:29:37,940
lab we are

00:29:34,380 --> 00:29:40,500
in mid-may that will go up to 1 gigabit

00:29:37,940 --> 00:29:43,380
it's been delayed because of technical

00:29:40,500 --> 00:29:45,540
problems with our ISP or one of their

00:29:43,380 --> 00:29:49,710
subcontractors but that doesn't matter

00:29:45,540 --> 00:29:51,929
we're going up to one gig there's also

00:29:49,710 --> 00:29:59,760
the issue of snapshots itself is

00:29:51,929 --> 00:30:03,690
sometimes overloaded and if as long as

00:29:59,760 --> 00:30:05,880
you're using HTTP and not HTTP we can

00:30:03,690 --> 00:30:09,900
cache it but otherwise we just have to

00:30:05,880 --> 00:30:11,340
go and get it every time so it's we're

00:30:09,900 --> 00:30:13,559
aware of the problem and we're doing

00:30:11,340 --> 00:30:22,440
everything we can to at least mitigate

00:30:13,559 --> 00:30:24,120
from the labs perspective thank you I'll

00:30:22,440 --> 00:30:25,740
ask another one about caching that I'm

00:30:24,120 --> 00:30:27,660
curious about someone told me that a

00:30:25,740 --> 00:30:31,200
long time ago lava used to implement

00:30:27,660 --> 00:30:32,880
caching itself and I wonder if that's

00:30:31,200 --> 00:30:34,559
ever if that's true it if that's ever

00:30:32,880 --> 00:30:37,470
been reached because it seems like if la

00:30:34,559 --> 00:30:40,230
would managed the caching through some

00:30:37,470 --> 00:30:43,320
service that could cache anything much

00:30:40,230 --> 00:30:45,470
more granularly than the very complex

00:30:43,320 --> 00:30:47,940
way you have to do a squid and the

00:30:45,470 --> 00:30:49,770
constraints of not being able to do HTTP

00:30:47,940 --> 00:30:51,840
very easily and things like that if I

00:30:49,770 --> 00:30:53,520
remember correctly yes we did but we are

00:30:51,840 --> 00:31:00,960
going back several years and it was all

00:30:53,520 --> 00:31:02,730
v1 and it didn't make sense to be

00:31:00,960 --> 00:31:05,640
maintaining a caching mechanism when you

00:31:02,730 --> 00:31:07,740
can you don't set up an infrastructure

00:31:05,640 --> 00:31:09,720
that does your caching for you yeah but

00:31:07,740 --> 00:31:12,299
surely one exists that lava could just

00:31:09,720 --> 00:31:16,860
use and when it sees a URL it could it

00:31:12,299 --> 00:31:18,929
could we do we use it

00:31:16,860 --> 00:31:21,510
squid squid but that's in line so that

00:31:18,929 --> 00:31:24,929
that's an inline proxy I'm saying that

00:31:21,510 --> 00:31:28,410
lava itself could check a prop like a

00:31:24,929 --> 00:31:31,080
cache service locally do you have this

00:31:28,410 --> 00:31:32,820
file and if it doesn't then download

00:31:31,080 --> 00:31:35,640
then ask it to download it and save it

00:31:32,820 --> 00:31:38,190
in other it's if all it would have to do

00:31:35,640 --> 00:31:39,900
is like take the URL and send it to a

00:31:38,190 --> 00:31:42,240
service on the network and

00:31:39,900 --> 00:31:46,740
that service give you the file and then

00:31:42,240 --> 00:31:48,540
that service could I guess we could book

00:31:46,740 --> 00:31:50,370
yeah I mean at some point that would

00:31:48,540 --> 00:31:51,000
just be replacing what squids or what he

00:31:50,370 --> 00:31:54,960
doing

00:31:51,000 --> 00:31:58,350
surely quite is what happens is you send

00:31:54,960 --> 00:32:01,410
a request to squid and it goes yes I've

00:31:58,350 --> 00:32:03,270
got that one if it's HTTP and if the

00:32:01,410 --> 00:32:04,890
redirects and stuff like that are

00:32:03,270 --> 00:32:08,250
properly set up and squid

00:32:04,890 --> 00:32:10,950
yeah like theoretically squid works in

00:32:08,250 --> 00:32:13,890
reality squid doesn't catch everything

00:32:10,950 --> 00:32:16,530
and it's really easy to miss yeah sure

00:32:13,890 --> 00:32:19,620
absolutely it's it's it's something that

00:32:16,530 --> 00:32:21,270
could be possible I think what we put

00:32:19,620 --> 00:32:22,860
the reason we're pushing back is we

00:32:21,270 --> 00:32:25,170
don't want to be maintaining essentially

00:32:22,860 --> 00:32:26,670
our own squid equivalent and and you've

00:32:25,170 --> 00:32:29,430
got the other problem is people send

00:32:26,670 --> 00:32:32,550
some of the links that they're giving us

00:32:29,430 --> 00:32:35,280
have slash latest at the end so we'll

00:32:32,550 --> 00:32:38,490
just give you the old one it's not as

00:32:35,280 --> 00:32:40,170
simple as just implementing it so I

00:32:38,490 --> 00:32:41,760
think that's what it comes down to is

00:32:40,170 --> 00:32:43,350
we'd rather trust something like squid

00:32:41,760 --> 00:32:45,570
it doesn't always get it right it

00:32:43,350 --> 00:32:47,610
doesn't always catch everything but

00:32:45,570 --> 00:32:51,960
there's a reason why you know that this

00:32:47,610 --> 00:32:53,730
isn't as simple as as just you know

00:32:51,960 --> 00:32:55,200
checking only URL and giving back the

00:32:53,730 --> 00:33:01,020
same content you know there's a lot more

00:32:55,200 --> 00:33:04,080
to it than that it's something maybe we

00:33:01,020 --> 00:33:05,880
can look at other caching technologies

00:33:04,080 --> 00:33:09,150
that we could utilize other than the

00:33:05,880 --> 00:33:12,090
squid but I think implementing something

00:33:09,150 --> 00:33:14,180
right thank you that's very good thank

00:33:12,090 --> 00:33:14,180
you

00:33:25,750 --> 00:33:36,410
we are as a doctors are 4:55 yeah

00:33:34,130 --> 00:33:37,940
please dive anything how many anything

00:33:36,410 --> 00:33:39,860
more you'd like to talk about otherwise

00:33:37,940 --> 00:33:46,850
I'll probably just webelo to microphone

00:33:39,860 --> 00:33:48,860
and you won't like that so definitely we

00:33:46,850 --> 00:33:51,250
are we're always open we want more

00:33:48,860 --> 00:33:54,290
contributors to get involved in lava

00:33:51,250 --> 00:33:55,970
this is why we've opened up our design

00:33:54,290 --> 00:33:58,190
discussions regularly it's why we're

00:33:55,970 --> 00:34:00,380
trying to discuss things on the lava

00:33:58,190 --> 00:34:02,570
Darrell mailing list

00:34:00,380 --> 00:34:04,880
although anything other things that

00:34:02,570 --> 00:34:07,610
people might like us to talk about that

00:34:04,880 --> 00:34:12,350
we know or think about you know future

00:34:07,610 --> 00:34:14,750
design directions for lava we're looking

00:34:12,350 --> 00:34:18,940
at things that will help people with

00:34:14,750 --> 00:34:22,070
large alabs deal with performance and

00:34:18,940 --> 00:34:23,419
and availability issues because that's

00:34:22,070 --> 00:34:25,310
what so that's what a couple of our

00:34:23,419 --> 00:34:27,080
members are keen on if there are

00:34:25,310 --> 00:34:28,700
anything else is there anything else

00:34:27,080 --> 00:34:32,050
that people would like that would help

00:34:28,700 --> 00:34:34,220
them maintain their lab or you know or

00:34:32,050 --> 00:34:40,159
maintain their test infrastructure or

00:34:34,220 --> 00:34:42,909
anything that we can talk about what

00:34:40,159 --> 00:34:42,909
Matt's waving

00:34:45,800 --> 00:34:51,210
yeah this is pretty specific for our

00:34:48,690 --> 00:34:56,540
needs we just thought about we would

00:34:51,210 --> 00:35:01,770
like a way of per user stopping people

00:34:56,540 --> 00:35:04,530
flashing the recovery on Juno's has

00:35:01,770 --> 00:35:06,480
somebody been causing problems no we

00:35:04,530 --> 00:35:08,270
don't want bother doing anymore but we

00:35:06,480 --> 00:35:12,510
want to stop other people doing as well

00:35:08,270 --> 00:35:13,740
in the lkf t lab we want to run jobs not

00:35:12,510 --> 00:35:16,260
bothered flashing the recovery because

00:35:13,740 --> 00:35:18,180
it takes so long but at the same time we

00:35:16,260 --> 00:35:21,030
want to say this user he can flash

00:35:18,180 --> 00:35:22,500
recovery for in case we want to do it so

00:35:21,030 --> 00:35:26,550
it's like basically it's a section of

00:35:22,500 --> 00:35:30,690
the job template we can say only certain

00:35:26,550 --> 00:35:32,130
users can do this thing yeah that was

00:35:30,690 --> 00:35:34,740
pretty much targeted at Remy's are

00:35:32,130 --> 00:35:37,849
interested for this okay interesting

00:35:34,740 --> 00:35:41,040
question I'm so pleased that suable

00:35:37,849 --> 00:35:42,869
question is how long it will take to do

00:35:41,040 --> 00:35:44,460
that that's a good question

00:35:42,869 --> 00:35:46,710
I already thought about that but it's

00:35:44,460 --> 00:35:49,440
perfectly doable yes but you've also got

00:35:46,710 --> 00:35:54,630
the problem but you don't know what

00:35:49,440 --> 00:35:56,550
firmware is on the device yeah so yeah

00:35:54,630 --> 00:35:59,609
it's all about that basically we're just

00:35:56,550 --> 00:36:01,829
gonna stick one on it and say if it's if

00:35:59,609 --> 00:36:04,800
it's allocated to you yeah exactly yes

00:36:01,829 --> 00:36:08,609
okay yeah yeah okay so the fun thing in

00:36:04,800 --> 00:36:14,300
that is how would you describe it in the

00:36:08,609 --> 00:36:14,300
device config or similar in the lab okay

00:36:15,530 --> 00:36:20,220
yes the things we could I could remove

00:36:18,780 --> 00:36:22,530
it from the template right from the

00:36:20,220 --> 00:36:24,690
device abilities that's probably easiest

00:36:22,530 --> 00:36:27,690
yeah but then no one can do it and then

00:36:24,690 --> 00:36:30,800
if we decide how you we need to so is

00:36:27,690 --> 00:36:33,300
this just specifically just for it for

00:36:30,800 --> 00:36:35,640
firmware recovery or would we want to

00:36:33,300 --> 00:36:38,460
make it make this a more generic thing

00:36:35,640 --> 00:36:40,500
for all kinds of potential clients is

00:36:38,460 --> 00:36:42,089
access job listen that's what this is

00:36:40,500 --> 00:36:43,950
what I'm worrying about it would be a

00:36:42,089 --> 00:36:49,200
cool feature to be able to be per user

00:36:43,950 --> 00:36:51,690
which actions you can run on devices yes

00:36:49,200 --> 00:36:52,650
it would because patch is welcome you

00:36:51,690 --> 00:36:54,930
know

00:36:52,650 --> 00:36:57,540
because if it's only a four recovery

00:36:54,930 --> 00:36:59,880
with a quick arc will be to have two

00:36:57,540 --> 00:37:03,120
different device types for the same

00:36:59,880 --> 00:37:06,900
device and as you will know what you are

00:37:03,120 --> 00:37:09,090
doing so one will be for every user in

00:37:06,900 --> 00:37:12,360
which recovery is not defined so if they

00:37:09,090 --> 00:37:13,800
can't use it and for yourself you will

00:37:12,360 --> 00:37:16,680
have one device type which is

00:37:13,800 --> 00:37:19,110
technically the same device so if you

00:37:16,680 --> 00:37:21,180
run jobs for both at the same time with

00:37:19,110 --> 00:37:23,790
not who are copiously it's it's really a

00:37:21,180 --> 00:37:26,280
key and in which for your device types

00:37:23,790 --> 00:37:27,900
you will have a recovery activated if

00:37:26,280 --> 00:37:30,270
it's only for recovery that's too quite

00:37:27,900 --> 00:37:32,220
quickly doable yeah we could we can do

00:37:30,270 --> 00:37:34,110
it as it is now because I can just go at

00:37:32,220 --> 00:37:35,970
the recovery section to the device gone

00:37:34,110 --> 00:37:38,210
freak run run the app jobs I want to do

00:37:35,970 --> 00:37:40,670
and then remove it again it was just a

00:37:38,210 --> 00:37:44,820
pondering about like like generic

00:37:40,670 --> 00:37:47,370
actions allowable per user and again so

00:37:44,820 --> 00:37:48,870
do you want that then heard specific

00:37:47,370 --> 00:37:50,400
users or would you want that want to

00:37:48,870 --> 00:37:51,090
make it an admin only action or

00:37:50,400 --> 00:37:54,530
something

00:37:51,090 --> 00:37:58,620
will that be reasonable all of the above

00:37:54,530 --> 00:38:01,980
you're more of an ideas Barney we're

00:37:58,620 --> 00:38:04,080
just thinking here but if you had if you

00:38:01,980 --> 00:38:05,910
could define a recovery job type kind of

00:38:04,080 --> 00:38:08,190
like there's a health check job type and

00:38:05,910 --> 00:38:10,200
it had a version or something then you

00:38:08,190 --> 00:38:11,610
could say you could submit a regular job

00:38:10,200 --> 00:38:13,920
and say this job requires for a more

00:38:11,610 --> 00:38:17,100
version XYZ and there's an associated

00:38:13,920 --> 00:38:19,440
and like it kept state of the device on

00:38:17,100 --> 00:38:24,840
which version it was on and then it had

00:38:19,440 --> 00:38:26,370
a technically an else check is like any

00:38:24,840 --> 00:38:28,800
other jobs there is nothing specific

00:38:26,370 --> 00:38:31,590
about it so I understand I understand

00:38:28,800 --> 00:38:34,500
but but it has just to clarify you it's

00:38:31,590 --> 00:38:36,270
all it's just normal job so it's a

00:38:34,500 --> 00:38:38,700
normal job but it's a job that lava

00:38:36,270 --> 00:38:40,260
knows about and so you could give it a

00:38:38,700 --> 00:38:43,740
recovery job that lava knows but that it

00:38:40,260 --> 00:38:45,870
could run so it's something that we've

00:38:43,740 --> 00:38:48,960
pushed back on for a very long time is

00:38:45,870 --> 00:38:51,020
about having device state because of

00:38:48,960 --> 00:38:53,220
that anything that you can have

00:38:51,020 --> 00:38:55,680
persistent on the device is something

00:38:53,220 --> 00:38:57,510
that then wakes future jobs obviously in

00:38:55,680 --> 00:39:00,690
this case at that which what you're

00:38:57,510 --> 00:39:02,910
trying to undo breakage but it's uh it's

00:39:00,690 --> 00:39:04,800
a difficult thing to manage but if you

00:39:02,910 --> 00:39:06,570
had a recovery job you would have that

00:39:04,800 --> 00:39:09,810
they'd be able to take parameters

00:39:06,570 --> 00:39:16,500
because you might you want to upgrade

00:39:09,810 --> 00:39:28,560
the firmware but the firmware changes

00:39:16,500 --> 00:39:30,420
quite regularly so that doesn't seem by

00:39:28,560 --> 00:39:31,560
all means I mean this is the kind of

00:39:30,420 --> 00:39:33,210
thing that might be worth talking about

00:39:31,560 --> 00:39:34,950
on the Duvall list and you know and

00:39:33,210 --> 00:39:37,620
kicking around a bit and see if we can

00:39:34,950 --> 00:39:40,770
come up with something as it is it's a

00:39:37,620 --> 00:39:42,990
yeah it's not an easy one it is it's

00:39:40,770 --> 00:39:44,970
very it is very edge case you know if

00:39:42,990 --> 00:39:46,290
there's you know if there were patches

00:39:44,970 --> 00:39:48,480
that would implement it and look

00:39:46,290 --> 00:39:51,990
sensible then yes we might you know we

00:39:48,480 --> 00:39:54,900
might take it on can you not do it in

00:39:51,990 --> 00:40:03,770
the device specific the device specific

00:39:54,900 --> 00:40:03,770
thing so you say in the device type I

00:40:04,220 --> 00:40:09,090
mean yet it might be nice to define that

00:40:07,110 --> 00:40:11,760
the certain options on certain devices

00:40:09,090 --> 00:40:14,850
are only allowed by certain users that's

00:40:11,760 --> 00:40:16,560
a combinatorial nightmare it might be

00:40:14,850 --> 00:40:19,830
works yeah it's from that pin point of

00:40:16,560 --> 00:40:21,660
view I'm just going but just I'm just

00:40:19,830 --> 00:40:25,260
thinking about it in when we run those

00:40:21,660 --> 00:40:27,330
the device type so which really gives

00:40:25,260 --> 00:40:31,440
the device configuration that you will

00:40:27,330 --> 00:40:33,600
run if we give the current user to the

00:40:31,440 --> 00:40:35,490
ginger around the world we will be able

00:40:33,600 --> 00:40:37,290
to say that it's an and we know that we

00:40:35,490 --> 00:40:42,150
can include are not some part of the

00:40:37,290 --> 00:40:45,540
device type that might be working yeah

00:40:42,150 --> 00:40:47,490
oh that's a thought we're just talking

00:40:45,540 --> 00:40:49,110
about this so yeah I always bring it up

00:40:47,490 --> 00:40:51,690
on the list map and you know we can we

00:40:49,110 --> 00:40:55,830
can you know think about it more anyway

00:40:51,690 --> 00:40:57,750
I think it's now five to five so we're

00:40:55,830 --> 00:40:59,310
reaching the end of the session if we

00:40:57,750 --> 00:41:03,000
have what any want last question but

00:40:59,310 --> 00:41:04,140
we'll have to be quick no I guess it's

00:41:03,000 --> 00:41:07,260
everything thanks folks

00:41:04,140 --> 00:41:10,860
again find us online on IRC mailing list

00:41:07,260 --> 00:41:12,180
or whatever you know we're here to help

00:41:10,860 --> 00:41:13,980
if you have any ideas about all the

00:41:12,180 --> 00:41:14,460
things we can do to make law offer

00:41:13,980 --> 00:41:17,780
better

00:41:14,460 --> 00:41:17,780

YouTube URL: https://www.youtube.com/watch?v=xqkACUgAEig


