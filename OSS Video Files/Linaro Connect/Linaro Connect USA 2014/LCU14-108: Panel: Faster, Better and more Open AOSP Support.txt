Title: LCU14-108: Panel: Faster, Better and more Open AOSP Support
Publication date: 2014-09-15
Playlist: Linaro Connect USA 2014
Description: 
	LCU14-108: Panel: Faster, Better and more Open AOSP Support

---------------------------------------------------

Speaker: Khasim Syed Mohammed, Dave Butcher, John Stultz, Bernhard Rosenkranzer, Google Engineer?

Track: Android
Location: Grand Peninsula D, Hyatt Regency San Francisco Airport, Burlingame, CA, United States
---------------------------------------------------

★ Session Summary ★
The ARM ecosystem is large and still growing, with Linaro a key focus for open source collaboration and the Android Open Source Project one of the most important projects we all work with.

What practical steps can the members of the ecosystem take to produce more of the right patches, of the right quality and at the right time to improve both Android and the products and applications that use it ?
The ARM ecosystem is large and still growing, with Linaro a key focus for open source collaboration and the Android Open Source Project one of the most important projects we all work with.

What practical steps can the members of the ecosystem take to produce more of the right patches, of the right quality and at the right time to improve both Android and the products and applications that use it ?
The ARM ecosystem is large and still growing, with Linaro a key focus for open source collaboration and the Android Open Source Project one of the most important projects we all work with.

What practical steps can the members of the ecosystem take to produce more of the right patches, of the right quality and at the right time to improve both Android and the products and applications that use it ?

---------------------------------------------------

★ Resources ★
Zerista: http://lcu14.zerista.com/event/member/137711
Google Event: 
Presentation: 
Video: 
Eatherpad: pad.linaro.org/p/lcu14-108

---------------------------------------------------

★ Event Details ★
Linaro Connect USA - #LCU14
September 15-19th, 2014
Hyatt Regency San Francisco Airport
---------------------------------------------------

&gt; http://www.linaro.org
&gt; http://connect.linaro.org
Captions: 
	00:00:00,000 --> 00:00:10,200
they said it might be really good so I

00:00:07,890 --> 00:00:16,170
would like to invite our panel for this

00:00:10,200 --> 00:00:19,109
session so it's dave from arm and John

00:00:16,170 --> 00:00:45,200
Stiles from linaro Barrow from linaro

00:00:19,109 --> 00:00:59,250
and then gia from ZT yeah yeah okay so

00:00:45,200 --> 00:01:02,940
let me see what I have so the agenda for

00:00:59,250 --> 00:01:07,140
this session is mainly to discuss on

00:01:02,940 --> 00:01:12,090
what exactly we should do in USP so one

00:01:07,140 --> 00:01:14,640
of my thought is like we all do a lot of

00:01:12,090 --> 00:01:17,280
development in house members do a lot of

00:01:14,640 --> 00:01:22,140
work and we Utley not or do a lot of

00:01:17,280 --> 00:01:24,360
work and so between when the product

00:01:22,140 --> 00:01:26,820
gets launched lot of work is being done

00:01:24,360 --> 00:01:29,520
by our members and the arm ecosystem

00:01:26,820 --> 00:01:31,979
itself but when you see the number of

00:01:29,520 --> 00:01:36,299
contributions happening in USP level

00:01:31,979 --> 00:01:39,570
it's nothing or nil so we don't see so

00:01:36,299 --> 00:01:42,270
much rush or something that is coming in

00:01:39,570 --> 00:01:45,240
when a new product is launched for

00:01:42,270 --> 00:01:47,520
example just to say like on Android L

00:01:45,240 --> 00:01:48,780
there are already lot of peep lot of

00:01:47,520 --> 00:01:50,640
members who are already working on

00:01:48,780 --> 00:01:53,250
android l they have access to sources

00:01:50,640 --> 00:01:55,110
they will be implementing it but when

00:01:53,250 --> 00:01:58,170
the products and devices go into the

00:01:55,110 --> 00:02:00,869
market we really don't see all the work

00:01:58,170 --> 00:02:03,600
that has been done for improving the

00:02:00,869 --> 00:02:07,439
hardware abstraction layers or solving

00:02:03,600 --> 00:02:10,379
any known bug fixes into AOSP so that is

00:02:07,439 --> 00:02:12,840
one of my concerns that I thought so

00:02:10,379 --> 00:02:13,950
thanks to Dave like he came up with this

00:02:12,840 --> 00:02:16,379
idea of having

00:02:13,950 --> 00:02:19,290
session it connect to come up with this

00:02:16,379 --> 00:02:22,620
topic on discussing like what are the

00:02:19,290 --> 00:02:24,989
challenges and issues on USP John had

00:02:22,620 --> 00:02:27,810
similar ideas on like how to be active

00:02:24,989 --> 00:02:29,550
or enable this USB community forum

00:02:27,810 --> 00:02:33,330
ecosystem how do we make it an active

00:02:29,550 --> 00:02:35,459
community and Barrow he's one of our key

00:02:33,330 --> 00:02:37,950
members who keeps contributing to a HP

00:02:35,459 --> 00:02:39,870
and he is quite a few ideas on what we

00:02:37,950 --> 00:02:45,110
should do in order to bring build this

00:02:39,870 --> 00:02:47,400
AOSP community so jar represents ziti so

00:02:45,110 --> 00:02:51,180
they do lot of in-house Android

00:02:47,400 --> 00:02:53,250
development so I had I thought it is

00:02:51,180 --> 00:02:56,970
good to hear from members as well on

00:02:53,250 --> 00:03:00,840
what issues they face when we when we

00:02:56,970 --> 00:03:04,079
develop software what does it hold us

00:03:00,840 --> 00:03:06,000
from pushing the patches to USP because

00:03:04,079 --> 00:03:07,950
they have not very tight should you time

00:03:06,000 --> 00:03:10,410
to market needs and so on do they get

00:03:07,950 --> 00:03:16,200
enough bandwidth to really push things

00:03:10,410 --> 00:03:18,720
to AOSP so I'll have Dave John Barrow

00:03:16,200 --> 00:03:21,120
and Europe give their own views on each

00:03:18,720 --> 00:03:24,000
of these things and then probably we can

00:03:21,120 --> 00:03:28,019
take some questions from our members as

00:03:24,000 --> 00:03:32,870
well so let's see how this goes okay so

00:03:28,019 --> 00:03:35,700
first are you different um thank you um

00:03:32,870 --> 00:03:36,930
so I've got this sort of idea that what

00:03:35,700 --> 00:03:39,780
I'd really like to see in the long run

00:03:36,930 --> 00:03:42,299
is that when some guys Empires our next

00:03:39,780 --> 00:03:44,700
android phone and they look down the

00:03:42,299 --> 00:03:47,120
list of features of an including I go

00:03:44,700 --> 00:03:50,040
down as a 24 megapixel camera and

00:03:47,120 --> 00:03:51,329
eighty-four processes and 64-bit and

00:03:50,040 --> 00:03:54,269
everything else and somewhere in there

00:03:51,329 --> 00:04:01,319
is 10,000 lines of new code merchant

00:03:54,269 --> 00:04:04,590
AOSP each of the applications we do each

00:04:01,319 --> 00:04:07,349
of the changes we make improve the basic

00:04:04,590 --> 00:04:08,940
level of the platform and I mean arms

00:04:07,349 --> 00:04:10,970
been committing a number of patches that

00:04:08,940 --> 00:04:13,079
the last year or so to support 64-bit

00:04:10,970 --> 00:04:15,180
lots of other people in committing to

00:04:13,079 --> 00:04:20,010
Google or committing to asp at the same

00:04:15,180 --> 00:04:23,220
time and the amount of code in asp is

00:04:20,010 --> 00:04:26,760
increasing rapidly what's not obvious

00:04:23,220 --> 00:04:28,620
there is as many

00:04:26,760 --> 00:04:30,720
could be committing and people are

00:04:28,620 --> 00:04:32,400
commit working independently and while

00:04:30,720 --> 00:04:33,660
that's nice for producing products the

00:04:32,400 --> 00:04:36,000
slightly different analysis and have

00:04:33,660 --> 00:04:37,560
advantages it doesn't mean that there's

00:04:36,000 --> 00:04:39,990
actually probably more duplication that

00:04:37,560 --> 00:04:42,260
needs to be in that work and when you're

00:04:39,990 --> 00:04:45,270
looking at various different ecosystems

00:04:42,260 --> 00:04:48,110
broadly that means Android is possibly

00:04:45,270 --> 00:04:50,580
not being supported quite as

00:04:48,110 --> 00:04:52,530
enthusiastically or effectively by the

00:04:50,580 --> 00:04:56,160
people using it as it could be and

00:04:52,530 --> 00:04:58,770
there's an opportunity for Android to

00:04:56,160 --> 00:05:00,930
move ahead faster if people are

00:04:58,770 --> 00:05:02,700
commanding to commit more code publicly

00:05:00,930 --> 00:05:03,990
and that will make all of the platform's

00:05:02,700 --> 00:05:05,760
better and everyone can still do a bit

00:05:03,990 --> 00:05:07,350
of differentially first everyone all the

00:05:05,760 --> 00:05:09,720
companies volker out of a small amount

00:05:07,350 --> 00:05:12,920
of their effort open sourcing that batch

00:05:09,720 --> 00:05:15,000
is a bit more than Android could

00:05:12,920 --> 00:05:16,230
significantly benefit and all of the

00:05:15,000 --> 00:05:18,630
partners themselves would benefit

00:05:16,230 --> 00:05:19,920
because you would make those products

00:05:18,630 --> 00:05:22,500
that much more competitive and it's not

00:05:19,920 --> 00:05:24,120
like while Android might be shipping

00:05:22,500 --> 00:05:27,750
more units at the moment than all the

00:05:24,120 --> 00:05:29,880
other hand ecosystems as Android itself

00:05:27,750 --> 00:05:31,620
shows that it another ecosystem can

00:05:29,880 --> 00:05:33,120
always come along and displace the

00:05:31,620 --> 00:05:39,300
existing incumbent if it's got key

00:05:33,120 --> 00:05:43,230
advantages yeah I guess so being a

00:05:39,300 --> 00:05:45,450
kernel person working I guess what the

00:05:43,230 --> 00:05:47,790
Android may OSP community is always a

00:05:45,450 --> 00:05:49,560
little frustrating just because you know

00:05:47,790 --> 00:05:52,890
while the colonel community has its own

00:05:49,560 --> 00:05:55,530
issues it really doesn't seem to be

00:05:52,890 --> 00:05:58,230
nearly as active and I'm not really sure

00:05:55,530 --> 00:05:59,280
if it's just that point of you know to

00:05:58,230 --> 00:06:00,390
some extent I think it's a cultural

00:05:59,280 --> 00:06:04,620
difference in that you know the

00:06:00,390 --> 00:06:07,170
licensing kind of promotes folks to be

00:06:04,620 --> 00:06:09,480
able to fork and add value and then kind

00:06:07,170 --> 00:06:11,640
of their own special sauce and not

00:06:09,480 --> 00:06:15,600
necessarily have any motivation to kind

00:06:11,640 --> 00:06:16,440
of contribute back but I don't know I

00:06:15,600 --> 00:06:19,590
guess it's just one of those things

00:06:16,440 --> 00:06:24,540
where I also feel like there's maybe a

00:06:19,590 --> 00:06:25,770
less active I guess reception to change

00:06:24,540 --> 00:06:27,540
as well so there's not as much

00:06:25,770 --> 00:06:31,920
motivation Google kind of you know the

00:06:27,540 --> 00:06:33,990
AOSP tree you know supports Nexus

00:06:31,920 --> 00:06:36,390
devices but I'm not sure it would be

00:06:33,990 --> 00:06:37,890
welcome for other devices to be added to

00:06:36,390 --> 00:06:39,600
the AOSP so if somebody was trying to

00:06:37,890 --> 00:06:40,250
say oh I want to get my you know random

00:06:39,600 --> 00:06:43,169
phone

00:06:40,250 --> 00:06:44,849
you know merged I'm not sure if that's

00:06:43,169 --> 00:06:47,699
something that they necessarily want to

00:06:44,849 --> 00:06:48,599
include or not so yeah so it's one of

00:06:47,699 --> 00:06:52,620
the seams trying to figure out how we

00:06:48,599 --> 00:06:53,849
create a space where people can

00:06:52,620 --> 00:06:54,690
collaborate because I think that's

00:06:53,849 --> 00:06:56,120
almost the hardest part since

00:06:54,690 --> 00:06:59,669
everybody's off doing their own thing

00:06:56,120 --> 00:07:01,919
there's no real good a place that I

00:06:59,669 --> 00:07:04,470
think people feel particularly welcome

00:07:01,919 --> 00:07:08,069
to submit stuff that's going to really

00:07:04,470 --> 00:07:10,289
reduce their burden of maintenance in

00:07:08,069 --> 00:07:11,460
their own trees and so trying to find

00:07:10,289 --> 00:07:14,190
some way to do that and I think it would

00:07:11,460 --> 00:07:17,729
be great if it was AOSP but I'm not sure

00:07:14,190 --> 00:07:21,780
if it's likely to become that or not so

00:07:17,729 --> 00:07:23,400
I don't know that's my little thought my

00:07:21,780 --> 00:07:26,039
thinking is very much in line with

00:07:23,400 --> 00:07:28,110
drones and I think one of the things

00:07:26,039 --> 00:07:30,780
linaro has been really good at in the

00:07:28,110 --> 00:07:32,490
past as collecting everything our

00:07:30,780 --> 00:07:34,680
members are doing and submitting it to

00:07:32,490 --> 00:07:36,630
the upstream corner and for various

00:07:34,680 --> 00:07:38,789
reasons this hasn't worked out equally

00:07:36,630 --> 00:07:41,610
well in Android user space mostly

00:07:38,789 --> 00:07:44,130
because hardware vendors just don't

00:07:41,610 --> 00:07:46,380
share their stuff I think we really need

00:07:44,130 --> 00:07:50,729
to push people more to contribute

00:07:46,380 --> 00:07:52,530
changes back and not completely sure how

00:07:50,729 --> 00:07:54,900
it is best accomplished because probably

00:07:52,530 --> 00:07:59,460
changing the licensing of Android to GPL

00:07:54,900 --> 00:08:02,069
is not going to happen and a couple of

00:07:59,460 --> 00:08:04,860
things that we can do is help make it

00:08:02,069 --> 00:08:09,029
easier to support additional devices for

00:08:04,860 --> 00:08:11,190
example Android generally uses the

00:08:09,029 --> 00:08:12,960
Reaper tool to pull in all sorts of git

00:08:11,190 --> 00:08:16,680
repositories and that could be fairly

00:08:12,960 --> 00:08:19,889
easily extended to allow specifying a

00:08:16,680 --> 00:08:21,330
secondary repository so all the basic

00:08:19,889 --> 00:08:23,490
components would still be pulled from

00:08:21,330 --> 00:08:25,740
AOSP but then in addition to that it

00:08:23,490 --> 00:08:29,849
would put a kernel for a journal bought

00:08:25,740 --> 00:08:32,490
from linaro and maybe graphics driver

00:08:29,849 --> 00:08:34,620
directly from our man and you could

00:08:32,490 --> 00:08:37,020
still use the upstream repositories file

00:08:34,620 --> 00:08:39,029
using kernels that are not supported

00:08:37,020 --> 00:08:43,680
upstream drivers that are not supported

00:08:39,029 --> 00:08:45,690
upstream another thing that I've seen

00:08:43,680 --> 00:08:48,440
that might prevent some people from

00:08:45,690 --> 00:08:51,720
contributing more actively to AOSP is

00:08:48,440 --> 00:08:53,370
that there's some ridiculous really

00:08:51,720 --> 00:08:56,730
rumor mill going on about

00:08:53,370 --> 00:08:58,770
at Google dropping AOSP support and it's

00:08:56,730 --> 00:09:02,190
found it in things like people saying

00:08:58,770 --> 00:09:03,870
okay there those evil guys are replacing

00:09:02,190 --> 00:09:06,060
the open messaging application with

00:09:03,870 --> 00:09:08,520
hangouts when in fact that's just a

00:09:06,060 --> 00:09:11,100
usability improvement but there's

00:09:08,520 --> 00:09:13,350
something that could be done to get rid

00:09:11,100 --> 00:09:17,550
of that perception and to make things

00:09:13,350 --> 00:09:20,430
more active which is when component has

00:09:17,550 --> 00:09:24,240
been more or less abandoned upstream

00:09:20,430 --> 00:09:26,370
like messaging component we should find

00:09:24,240 --> 00:09:30,990
some way to turn those components over

00:09:26,370 --> 00:09:33,150
to the community like if if we could we

00:09:30,990 --> 00:09:36,360
should probably convince google to just

00:09:33,150 --> 00:09:38,700
allow community people to give a plus to

00:09:36,360 --> 00:09:41,460
an A commit to those components and if

00:09:38,700 --> 00:09:43,830
not maybe if I need to find another

00:09:41,460 --> 00:09:47,400
place to host those components to make

00:09:43,830 --> 00:09:49,860
sure they remain alive and of course

00:09:47,400 --> 00:10:02,190
push the message debt I owe SPS status

00:09:49,860 --> 00:10:04,080
day and not end up being closed so for

00:10:02,190 --> 00:10:07,500
job there is a set of questions that we

00:10:04,080 --> 00:10:12,029
had prepared so which he has got

00:10:07,500 --> 00:10:14,130
approval from GD to talk on so one of my

00:10:12,029 --> 00:10:16,500
question to Joe was like how much of an

00:10:14,130 --> 00:10:19,230
effort easy to move from one version to

00:10:16,500 --> 00:10:20,760
another version for you like a USP

00:10:19,230 --> 00:10:26,220
release from one motion to another

00:10:20,760 --> 00:10:29,250
version okay in this D company way in

00:10:26,220 --> 00:10:33,060
our department for Android environmental

00:10:29,250 --> 00:10:36,180
web based on the comp DMSO we will also

00:10:33,060 --> 00:10:39,089
comes Andrew the PSP and the way i will

00:10:36,180 --> 00:10:42,420
also myself we have asked myself to

00:10:39,089 --> 00:10:47,190
carriage and repeat repository for

00:10:42,420 --> 00:10:50,370
development so because we have so we

00:10:47,190 --> 00:10:54,330
will update from where we were seeing

00:10:50,370 --> 00:10:58,350
almost one week because we have special

00:10:54,330 --> 00:11:05,059
special guys to to work on this upgrade

00:10:58,350 --> 00:11:10,779
and if we encounter the some in some

00:11:05,059 --> 00:11:14,509
conflict in upgrades so we will ask the

00:11:10,779 --> 00:11:17,779
relevant people to focus on this

00:11:14,509 --> 00:11:22,339
conflict and we upgrade to the faster

00:11:17,779 --> 00:11:26,899
and so I think upgrade is not problem

00:11:22,339 --> 00:11:29,899
for us and because where you can sync

00:11:26,899 --> 00:11:34,669
with the external enjoyed your body to

00:11:29,899 --> 00:11:38,419
every every day and we will pull it pull

00:11:34,669 --> 00:11:42,349
the newest reported code into my local

00:11:38,419 --> 00:11:49,719
get report repository so the conflict

00:11:42,349 --> 00:11:54,169
will be smaller than the smaller so and

00:11:49,719 --> 00:11:59,029
I think Qualcomm does a lot of work for

00:11:54,169 --> 00:12:01,459
you and you will have been built up you

00:11:59,029 --> 00:12:04,159
mean home will support us yeah yeah

00:12:01,459 --> 00:12:09,559
because the Columbus is Shanghai center

00:12:04,159 --> 00:12:11,929
is the year nearly as the center and so

00:12:09,559 --> 00:12:13,729
and then we also use a complicated

00:12:11,929 --> 00:12:18,769
system if we are having causing the

00:12:13,729 --> 00:12:22,189
problem I will drizzle case to go calm

00:12:18,769 --> 00:12:25,909
and we all get the response quickly and

00:12:22,189 --> 00:12:31,069
because we we develop in the on campus

00:12:25,909 --> 00:12:33,499
on on platforms so we're very

00:12:31,069 --> 00:12:35,479
familiar with comments to kiss system

00:12:33,499 --> 00:12:39,019
and okok on the coast error code

00:12:35,479 --> 00:12:46,639
structure and so it's an old problem for

00:12:39,019 --> 00:12:49,939
us but any other question from members

00:12:46,639 --> 00:12:55,369
or audience anybody here as any views on

00:12:49,939 --> 00:12:57,699
these things not for John for Kendall

00:12:55,369 --> 00:12:57,699
panel

00:13:02,340 --> 00:13:07,480
how would Google's here the young

00:13:04,750 --> 00:13:24,030
community working better together what

00:13:07,480 --> 00:13:26,350
you would you guys want from us so yeah

00:13:24,030 --> 00:13:28,450
so I think a number of different things

00:13:26,350 --> 00:13:31,840
were erased I think improvements here to

00:13:28,450 --> 00:13:33,310
repo sounds like a great idea I'd be

00:13:31,840 --> 00:13:36,730
surprised if repo didn't already have

00:13:33,310 --> 00:13:39,610
support something like having different

00:13:36,730 --> 00:13:42,040
repositories I would like it that

00:13:39,610 --> 00:13:44,530
everybody who buys a phone can go in

00:13:42,040 --> 00:13:47,800
flash AOSP onto it and the top of tree

00:13:44,530 --> 00:13:49,360
AOSP the the problem we have with asp s

00:13:47,800 --> 00:13:52,240
that there are binary blobs they're

00:13:49,360 --> 00:13:54,940
there for things like Wi-Fi and so on

00:13:52,240 --> 00:13:56,800
and it'd be great if if our

00:13:54,940 --> 00:14:01,690
manufacturers would go and open source

00:13:56,800 --> 00:14:05,950
that and we host the binary blobs for

00:14:01,690 --> 00:14:07,570
all the Nexus devices at Google but

00:14:05,950 --> 00:14:11,560
there are other things like the Juno

00:14:07,570 --> 00:14:13,089
broads where the the binary blobs in

00:14:11,560 --> 00:14:15,280
silent getting hosted by linaro and I

00:14:13,089 --> 00:14:18,070
think that's a great service that linaro

00:14:15,280 --> 00:14:20,320
have and it'd be great if linaro could

00:14:18,070 --> 00:14:24,280
provide you know support for other

00:14:20,320 --> 00:14:26,110
devices as well because it's useful for

00:14:24,280 --> 00:14:28,510
us to be able to go and flash the latest

00:14:26,110 --> 00:14:33,310
count on sir which have a phone and make

00:14:28,510 --> 00:14:34,750
sure it's still functioning I think the

00:14:33,310 --> 00:14:36,460
the right place to be sending upstream

00:14:34,750 --> 00:14:40,360
Colonel patches is the upstream colonel

00:14:36,460 --> 00:14:43,270
I don't want to see the the Android tree

00:14:40,360 --> 00:14:46,410
walking from the upstream tree but I'm

00:14:43,270 --> 00:14:46,410
not the right person to speak on that

00:14:47,700 --> 00:14:52,360
you mentioned that there are some

00:14:49,839 --> 00:14:55,450
projects in AOSP we seem to kind of bit

00:14:52,360 --> 00:15:00,220
rot so on one of the earlier lists was

00:14:55,450 --> 00:15:03,550
open FST so open FST if i'm remembering

00:15:00,220 --> 00:15:06,640
right is a voice dialer so if you say

00:15:03,550 --> 00:15:09,760
something like call 911 then in AOSP

00:15:06,640 --> 00:15:12,310
will try and dial 911 for you an open

00:15:09,760 --> 00:15:14,170
FST is the thing which does that one of

00:15:12,310 --> 00:15:14,649
the problems they're open FST gaybies is

00:15:14,170 --> 00:15:16,959
the only

00:15:14,649 --> 00:15:19,240
works on 32 but it's got its got bugs

00:15:16,959 --> 00:15:21,069
when you try and get it run it on 64-bit

00:15:19,240 --> 00:15:23,829
code and it regraded people could be

00:15:21,069 --> 00:15:26,680
fixing these bugs and so on because the

00:15:23,829 --> 00:15:28,779
reason open open open FST stays in AOSP

00:15:26,680 --> 00:15:30,610
is so that ASB has voiced I'll

00:15:28,779 --> 00:15:32,800
functionality and there's a there's a

00:15:30,610 --> 00:15:34,899
base level amount of functionality than

00:15:32,800 --> 00:15:38,319
droid for that we don't actually use

00:15:34,899 --> 00:15:45,990
open FST for the voice dialing in the

00:15:38,319 --> 00:15:45,990
unit that the non AOSP voice dialer I

00:15:46,920 --> 00:15:51,850
think that the I think the issue with

00:15:49,839 --> 00:15:53,439
plus two I think if people have proven

00:15:51,850 --> 00:15:55,179
to be Co contributors and Sons no

00:15:53,439 --> 00:15:58,300
problem with trying to get people plus

00:15:55,179 --> 00:16:07,149
two privileges and so it's not my call

00:15:58,300 --> 00:16:09,029
ago yeah regarding repo they've joined

00:16:07,149 --> 00:16:17,889
to talk about the work you did for

00:16:09,029 --> 00:16:19,300
incorporating other people fails all the

00:16:17,889 --> 00:16:26,529
speakers are speaking the wrong words

00:16:19,300 --> 00:16:44,290
turned the wrong way so we've done this

00:16:26,529 --> 00:16:46,870
before the general no um oh yes you can

00:16:44,290 --> 00:16:51,429
do we done some work if you were to try

00:16:46,870 --> 00:16:53,259
and work with Juno internally to I'd use

00:16:51,429 --> 00:16:56,079
repo to pull in other trees and other

00:16:53,259 --> 00:16:59,139
things so we've got an internal error of

00:16:56,079 --> 00:17:01,569
a OS speed of use and our policy is to

00:16:59,139 --> 00:17:02,769
work as close to the tip as possible so

00:17:01,569 --> 00:17:06,939
we're continually pulling it in every

00:17:02,769 --> 00:17:10,120
day and you can use repo to in a local

00:17:06,939 --> 00:17:11,919
environment to add an additional set of

00:17:10,120 --> 00:17:14,169
files to pull it so anyone can manage

00:17:11,919 --> 00:17:17,079
your own bored easily enough by pulling

00:17:14,169 --> 00:17:18,610
having an extra repo manifest that will

00:17:17,079 --> 00:17:21,640
pull in that repulsion e for your local

00:17:18,610 --> 00:17:25,630
for that it needing to change or edit

00:17:21,640 --> 00:17:27,490
the manifest rippling from upstream so I

00:17:25,630 --> 00:17:29,230
think there is a scope for

00:17:27,490 --> 00:17:32,620
doing perhaps at all that would make

00:17:29,230 --> 00:17:35,530
using AOSP and hosting other devices

00:17:32,620 --> 00:17:36,940
making fairly easy to use yeah I guess

00:17:35,530 --> 00:17:40,510
one of the troubles that I've seen

00:17:36,940 --> 00:17:44,260
recently is just the aspect that often

00:17:40,510 --> 00:17:48,460
when a vendor is trying to enable their

00:17:44,260 --> 00:17:51,340
board with ASP you they make changes in

00:17:48,460 --> 00:17:54,700
I guess very unfriendly ways I think as

00:17:51,340 --> 00:17:56,170
far as to ever push those changes up so

00:17:54,700 --> 00:17:58,000
you'll have changes to the frameworks

00:17:56,170 --> 00:18:00,429
and hacks here and there just to make

00:17:58,000 --> 00:18:03,580
something go changes to things like

00:18:00,429 --> 00:18:06,880
surface flinger you know and and at that

00:18:03,580 --> 00:18:08,559
level it's it's kind of different

00:18:06,880 --> 00:18:10,240
difficult to say well we're just kind of

00:18:08,559 --> 00:18:11,530
adding in this little support from the

00:18:10,240 --> 00:18:13,450
board it's kind of like oh well its

00:18:11,530 --> 00:18:15,460
support for the board and here's our

00:18:13,450 --> 00:18:17,770
hacks to everywhere else all over the

00:18:15,460 --> 00:18:19,120
tree and I think the fact that there is

00:18:17,770 --> 00:18:20,230
enough it there isn't a place where

00:18:19,120 --> 00:18:22,630
people are kind of doing that

00:18:20,230 --> 00:18:23,740
collaborative view that you see kind of

00:18:22,630 --> 00:18:24,910
in the upstream community where

00:18:23,740 --> 00:18:26,140
sometimes you know you get a lot of

00:18:24,910 --> 00:18:27,520
flames of people saying oh that's

00:18:26,140 --> 00:18:29,230
terrible and you're doing it wrong but

00:18:27,520 --> 00:18:31,179
to some extent that's saying hey you

00:18:29,230 --> 00:18:33,100
know you're doing it wrong for everyone

00:18:31,179 --> 00:18:35,080
to do it together you know we need to

00:18:33,100 --> 00:18:37,660
come up with some larger common solution

00:18:35,080 --> 00:18:40,330
in order for that to work and I guess I

00:18:37,660 --> 00:18:43,870
don't see much of that happening I mean

00:18:40,330 --> 00:18:46,000
maybe that I'm not aware but I feel like

00:18:43,870 --> 00:18:47,410
there would be utility in order to kind

00:18:46,000 --> 00:18:49,540
of it's not just a matter of aggregating

00:18:47,410 --> 00:18:52,600
all the different reposts that and the

00:18:49,540 --> 00:18:54,190
different get repos into one but also

00:18:52,600 --> 00:18:56,559
just kind of having an actual active

00:18:54,190 --> 00:18:59,290
community where people are kind of

00:18:56,559 --> 00:19:02,170
providing feedback on how to do things

00:18:59,290 --> 00:19:08,550
well so that you know things can work

00:19:02,170 --> 00:19:12,220
together um and this is one of the

00:19:08,550 --> 00:19:14,710
aspects of it I want to avoid getting

00:19:12,220 --> 00:19:17,230
into the basis of scolding and not a

00:19:14,710 --> 00:19:20,590
nagging all of the sse vendors never ask

00:19:17,230 --> 00:19:21,790
for for not doing things i think what we

00:19:20,590 --> 00:19:23,080
need to do is try and work out how we

00:19:21,790 --> 00:19:25,630
can make it easier for everyone to do

00:19:23,080 --> 00:19:31,630
the right thing one of those things

00:19:25,630 --> 00:19:33,580
would be if we can help improve i mean

00:19:31,630 --> 00:19:35,380
one things with people pushing good good

00:19:33,580 --> 00:19:38,559
quality patches into asp improves

00:19:35,380 --> 00:19:40,390
everything it for everyone perhaps your

00:19:38,559 --> 00:19:41,020
first places we're pushing in patches

00:19:40,390 --> 00:19:42,850
that

00:19:41,020 --> 00:19:44,860
watching a new support device is

00:19:42,850 --> 00:19:46,300
difficult maybe that we need proprietary

00:19:44,860 --> 00:19:50,290
factors into asp to make that

00:19:46,300 --> 00:19:52,360
integration easier maybe we need to post

00:19:50,290 --> 00:19:54,040
devices that asp doesn't want to

00:19:52,360 --> 00:19:56,080
officially support because of the binary

00:19:54,040 --> 00:19:58,080
blobs in an external repository that is

00:19:56,080 --> 00:20:00,040
compatible there's two being tracks it

00:19:58,080 --> 00:20:02,110
but I again it's still going to need

00:20:00,040 --> 00:20:04,060
some degree of collaborative review to

00:20:02,110 --> 00:20:21,490
make sure that repositories are high

00:20:04,060 --> 00:20:24,250
quality well it sounds good to me hi

00:20:21,490 --> 00:20:27,040
this is a show from arm one question I

00:20:24,250 --> 00:20:32,500
had is De Niro maintains a bunch of

00:20:27,040 --> 00:20:34,450
patches or changes on top of a osb this

00:20:32,500 --> 00:20:38,140
has been for Lynn arrows platform or

00:20:34,450 --> 00:20:40,060
some other changes what what kind of

00:20:38,140 --> 00:20:41,680
issues have you faced in up streaming

00:20:40,060 --> 00:20:44,170
them to a USB and what are the good

00:20:41,680 --> 00:21:00,120
practices that you have seen that makes

00:20:44,170 --> 00:21:00,120
it easy to share it in USB you can okay

00:21:00,960 --> 00:21:08,230
so in the early stages the very often

00:21:05,620 --> 00:21:11,860
faced the problem that we submitted a

00:21:08,230 --> 00:21:14,980
patch but it took months if not years

00:21:11,860 --> 00:21:18,850
before anyone looked at it just got a

00:21:14,980 --> 00:21:21,700
lot better lately but now the usually we

00:21:18,850 --> 00:21:24,610
get a reply within a week or so but

00:21:21,700 --> 00:21:26,320
there's some cases where it takes

00:21:24,610 --> 00:21:28,530
forever which is probably when we are

00:21:26,320 --> 00:21:31,920
trying to contribute to something that

00:21:28,530 --> 00:21:36,490
diverges too far from the internal tree

00:21:31,920 --> 00:21:39,430
it would be really good to have a better

00:21:36,490 --> 00:21:42,210
way to know when it makes sense to push

00:21:39,430 --> 00:21:45,310
something and then something is really

00:21:42,210 --> 00:21:47,890
the forked until a new release comes out

00:21:45,310 --> 00:21:50,230
and it doesn't even make sense to put a

00:21:47,890 --> 00:21:52,450
patch there so we'd have to maintain

00:21:50,230 --> 00:21:54,730
that perch internally for violent and

00:21:52,450 --> 00:21:59,490
just submitted to write

00:21:54,730 --> 00:22:01,840
I'm the other thing is that for example

00:21:59,490 --> 00:22:04,720
when we are adding support for a new

00:22:01,840 --> 00:22:06,820
device it's sometimes well that's just

00:22:04,720 --> 00:22:08,890
not much interest upstream and

00:22:06,820 --> 00:22:11,010
supporting a device that's never going

00:22:08,890 --> 00:22:15,040
to be used in any official Android build

00:22:11,010 --> 00:22:18,850
so that's very kind of neat external

00:22:15,040 --> 00:22:21,610
repositories and actually were one more

00:22:18,850 --> 00:22:24,490
thing that relates more to the previous

00:22:21,610 --> 00:22:27,190
question of patches that are being

00:22:24,490 --> 00:22:31,090
submitted and that are really just awful

00:22:27,190 --> 00:22:33,610
one thing we could do there to make sure

00:22:31,090 --> 00:22:35,740
that however make us do the right thing

00:22:33,610 --> 00:22:38,350
is add a couple of more checks to cts

00:22:35,740 --> 00:22:41,250
because they all have to pass that so if

00:22:38,350 --> 00:22:44,500
we see that quite a lot of devices

00:22:41,250 --> 00:22:47,020
modify surface finger to add some piece

00:22:44,500 --> 00:22:50,830
of api we could just add a check to cts

00:22:47,020 --> 00:22:53,799
to say ok no additional functions in

00:22:50,830 --> 00:23:03,700
there or know if there's to change the

00:22:53,799 --> 00:23:05,919
meaning of that parameter I just want

00:23:03,700 --> 00:23:07,900
you to add a bit more to that I think it

00:23:05,919 --> 00:23:10,510
would be really beneficial if at some

00:23:07,900 --> 00:23:13,240
point we get the Leonardo devices to be

00:23:10,510 --> 00:23:15,370
supported on top of ASP and I think we

00:23:13,240 --> 00:23:17,440
have most of the bits and pieces as

00:23:15,370 --> 00:23:19,929
you're not saying we can provide another

00:23:17,440 --> 00:23:22,630
manifest which has a couple of more

00:23:19,929 --> 00:23:24,760
repositories on top of that and if you

00:23:22,630 --> 00:23:26,440
look at the settings and other way that

00:23:24,760 --> 00:23:28,809
the device holder is put together you

00:23:26,440 --> 00:23:31,030
have overlays which are basically a

00:23:28,809 --> 00:23:33,910
different default setting for a certain

00:23:31,030 --> 00:23:35,559
thing and I think we need the same what

00:23:33,910 --> 00:23:39,750
areas piece missing is the same

00:23:35,559 --> 00:23:43,570
infrastructure but for get patches so

00:23:39,750 --> 00:23:46,690
having almost all devices like we have

00:23:43,570 --> 00:23:49,750
juno have a couple of more patches on

00:23:46,690 --> 00:23:52,510
top of a OSP so it would be great if we

00:23:49,750 --> 00:23:55,210
have a way of encoding this information

00:23:52,510 --> 00:23:57,850
in the extra repositories which we add

00:23:55,210 --> 00:23:59,679
on top of a recipe and I think that

00:23:57,850 --> 00:24:02,820
would also encourage everybody to

00:23:59,679 --> 00:24:06,280
contribute on mid-morning you know SPM

00:24:02,820 --> 00:24:08,659
it's I think it's a win-win because we

00:24:06,280 --> 00:24:11,479
we have to see what you guys are doing

00:24:08,659 --> 00:24:14,929
we have to learn something from you but

00:24:11,479 --> 00:24:18,259
also you you get to to learn something

00:24:14,929 --> 00:24:20,029
from from all of your better integrate

00:24:18,259 --> 00:24:21,889
or find a solution for everything like a

00:24:20,029 --> 00:24:30,499
John price of the widow with a condom

00:24:21,889 --> 00:24:34,940
thing so one question that I have is

00:24:30,499 --> 00:24:38,529
like generally for AOSP it is always the

00:24:34,940 --> 00:24:42,080
end for more end device that gets

00:24:38,529 --> 00:24:44,659
supported but it is like every member or

00:24:42,080 --> 00:24:47,359
every SOC Wender have their own platform

00:24:44,659 --> 00:24:50,590
development platform but all the

00:24:47,359 --> 00:24:53,239
software that gets developed on the

00:24:50,590 --> 00:24:57,080
development platform and then it goes to

00:24:53,239 --> 00:25:01,879
the end phone or end product but like as

00:24:57,080 --> 00:25:03,859
it easy at like so ZT and all the endo

00:25:01,879 --> 00:25:06,499
mo diems they only care about the mobile

00:25:03,859 --> 00:25:09,830
or the end product and the actual

00:25:06,499 --> 00:25:11,749
software is being developed by the SOC

00:25:09,830 --> 00:25:14,629
under like Qualcomm or mediatek and

00:25:11,749 --> 00:25:16,429
these guys so but they they have their

00:25:14,629 --> 00:25:18,919
own hardware development platform so

00:25:16,429 --> 00:25:20,720
where the code gets developed and they

00:25:18,919 --> 00:25:22,669
don't get an opportunity to push it to

00:25:20,720 --> 00:25:25,220
AOSP because USB doesn't support

00:25:22,669 --> 00:25:26,749
hardware development platforms and OEM

00:25:25,220 --> 00:25:31,389
sodium's are always interested in

00:25:26,749 --> 00:25:34,909
getting getting into market faster and

00:25:31,389 --> 00:25:36,919
getting things into like they're more

00:25:34,909 --> 00:25:39,409
worried about meeting time to market

00:25:36,919 --> 00:25:42,349
needs and so on so isn't there a gap

00:25:39,409 --> 00:25:45,080
between what needs to be done by assocn

00:25:42,349 --> 00:25:52,789
der because and what the way mo diems

00:25:45,080 --> 00:25:54,859
care about what do you will think there

00:25:52,789 --> 00:25:57,049
because i personally feel that is the

00:25:54,859 --> 00:25:59,809
gap which is holding them from pushing

00:25:57,049 --> 00:26:04,659
things into AOSP should it be maintained

00:25:59,809 --> 00:26:04,659
separately in a different repository or

00:26:05,320 --> 00:26:11,869
that we have a like for example we

00:26:08,720 --> 00:26:14,299
integrated camera subsystem into on for

00:26:11,869 --> 00:26:16,429
our platform but i cannot just submit

00:26:14,299 --> 00:26:18,529
that camera subsystem have differences

00:26:16,429 --> 00:26:21,750
or something into AOSP because there is

00:26:18,529 --> 00:26:27,250
no device support for my product

00:26:21,750 --> 00:26:31,780
like that all code is just till you have

00:26:27,250 --> 00:26:40,300
any opinion on that you're not anybody

00:26:31,780 --> 00:26:45,820
from google only here is it because that

00:26:40,300 --> 00:26:47,740
assoc vendors are having non-us be

00:26:45,820 --> 00:26:51,850
supported platform that they cannot push

00:26:47,740 --> 00:26:54,130
that piece of code or so I don't think

00:26:51,850 --> 00:26:57,360
there's any problem with us having our

00:26:54,130 --> 00:27:00,670
development boards supported by AOSP i

00:26:57,360 --> 00:27:02,650
was using panda bars for a long while I

00:27:00,670 --> 00:27:05,650
haven't been using them recently just

00:27:02,650 --> 00:27:07,560
because they got old but panda boards

00:27:05,650 --> 00:27:11,880
don't have displays or cameras and

00:27:07,560 --> 00:27:15,190
things like that um I think with the the

00:27:11,880 --> 00:27:18,760
cameras are somewhere where it is a very

00:27:15,190 --> 00:27:21,190
hot area in the mobile space and I I

00:27:18,760 --> 00:27:22,960
think the issues with like the camera

00:27:21,190 --> 00:27:24,760
abstractions and so on is best taken

00:27:22,960 --> 00:27:28,960
them up with the camera team if you need

00:27:24,760 --> 00:27:31,060
contacts and like my nose for you it's

00:27:28,960 --> 00:27:34,210
somewhere where Google's been doing work

00:27:31,060 --> 00:27:36,760
a lot always been doing work and it'd be

00:27:34,210 --> 00:27:39,160
good to be avoiding duplication but I'm

00:27:36,760 --> 00:27:41,620
not from the camera see me so can we

00:27:39,160 --> 00:27:45,250
submit device devices which are not

00:27:41,620 --> 00:27:47,080
mobile like Santa was a separate case

00:27:45,250 --> 00:27:49,560
because Google was infinitely working a

00:27:47,080 --> 00:27:52,000
lot on under and because they're for

00:27:49,560 --> 00:27:53,890
maybe these platforms Kurt added like

00:27:52,000 --> 00:27:56,470
say for example can we submit Juno as a

00:27:53,890 --> 00:27:59,080
officially supported USB platform so

00:27:56,470 --> 00:28:01,030
that the problem we have is just the

00:27:59,080 --> 00:28:05,500
continual testing that's needed for that

00:28:01,030 --> 00:28:07,660
yes so for AOSP where we're testing that

00:28:05,500 --> 00:28:09,760
when a release comes out that someone

00:28:07,660 --> 00:28:12,070
can download and build kit kat for their

00:28:09,760 --> 00:28:13,210
Nexus 7 and they can build an image and

00:28:12,070 --> 00:28:15,310
they can flash it on there with the

00:28:13,210 --> 00:28:17,440
appropriate binary blobs if we did that

00:28:15,310 --> 00:28:20,530
for every device that's out there it's

00:28:17,440 --> 00:28:22,630
it's a huge job so what we've done you

00:28:20,530 --> 00:28:24,280
know to this day is just all the devices

00:28:22,630 --> 00:28:28,150
that Google itself makes the Nexus

00:28:24,280 --> 00:28:29,470
devices so I think what we prefer in

00:28:28,150 --> 00:28:31,690
that situation is there someone like

00:28:29,470 --> 00:28:33,920
linaro would be hosting the the binary

00:28:31,690 --> 00:28:36,590
blobs and and the manifests

00:28:33,920 --> 00:28:41,020
would set that up for people who wanted

00:28:36,590 --> 00:28:48,290
to go and build for those ports yeah

00:28:41,020 --> 00:28:52,490
thank you also on that thing what about

00:28:48,290 --> 00:28:55,070
devices that its makers don't really

00:28:52,490 --> 00:28:57,440
intend to support an upstream like for

00:28:55,070 --> 00:28:59,570
example I know a lot of people in this

00:28:57,440 --> 00:29:03,290
room would probably want to use stock

00:28:59,570 --> 00:29:05,540
AOSP on there Samsung s5 or LG g3 or

00:29:03,290 --> 00:29:07,160
whatever but the upstream vendors are

00:29:05,540 --> 00:29:10,720
not talking about having those devices

00:29:07,160 --> 00:29:13,400
supported does it make sense to try and

00:29:10,720 --> 00:29:15,440
support them anyway or is that something

00:29:13,400 --> 00:29:22,990
they're probably we would just run into

00:29:15,440 --> 00:29:25,340
conflicts without my make us yes kind of

00:29:22,990 --> 00:29:28,190
that at that point about how you know

00:29:25,340 --> 00:29:30,290
Google needs to keep its scope to a

00:29:28,190 --> 00:29:32,870
certain level in order to ensure quality

00:29:30,290 --> 00:29:35,660
for the devices that they are a kind of

00:29:32,870 --> 00:29:39,290
owning I guess um one of the things that

00:29:35,660 --> 00:29:42,110
I I feel like is some there's that

00:29:39,290 --> 00:29:44,060
aspect of you know I know a you know

00:29:42,110 --> 00:29:48,710
Intel's recently announced they're doing

00:29:44,060 --> 00:29:50,810
a kind of a big effort to you know have

00:29:48,710 --> 00:29:54,850
a repo that supports their platforms

00:29:50,810 --> 00:29:57,680
across a number of different chips and

00:29:54,850 --> 00:29:59,930
you know linaro has you know that we

00:29:57,680 --> 00:30:02,140
have our repos and we manage them in our

00:29:59,930 --> 00:30:04,100
testing there's also you know the

00:30:02,140 --> 00:30:06,620
rowboat I'm not sure that's still active

00:30:04,100 --> 00:30:08,920
or not there's you know the cyanogenmod

00:30:06,620 --> 00:30:12,970
guys there's just a lot of pills who are

00:30:08,920 --> 00:30:16,490
you know doing very similar things and

00:30:12,970 --> 00:30:18,830
having a some sort of you know that

00:30:16,490 --> 00:30:20,330
aspect of like one place might not be

00:30:18,830 --> 00:30:22,640
able to do all the testing but if

00:30:20,330 --> 00:30:25,400
there's a way where we could centralized

00:30:22,640 --> 00:30:27,050
I guess some of the collaboration that

00:30:25,400 --> 00:30:28,520
would and some of that testing maybe the

00:30:27,050 --> 00:30:29,840
reporting or something like that so that

00:30:28,520 --> 00:30:31,070
it could be done having some

00:30:29,840 --> 00:30:33,710
infrastructure for that I feel like is

00:30:31,070 --> 00:30:37,070
something missing or needed I know a

00:30:33,710 --> 00:30:40,520
similar thing that's less technical is

00:30:37,070 --> 00:30:41,570
that last year I remember detik comment

00:30:40,520 --> 00:30:43,040
that you know I all these folks are

00:30:41,570 --> 00:30:45,800
doing these things and we don't actually

00:30:43,040 --> 00:30:47,539
get together and talk you know and I

00:30:45,800 --> 00:30:49,580
think that some of the

00:30:47,539 --> 00:30:50,929
shoes that come out around integration

00:30:49,580 --> 00:30:52,609
and those sorts of things where it's not

00:30:50,929 --> 00:30:54,529
super well documented and sort of black

00:30:52,609 --> 00:30:56,929
magic and everyone has their own tricks

00:30:54,529 --> 00:30:58,369
I think it's really would be useful for

00:30:56,929 --> 00:31:01,059
folks to get together and kind of share

00:30:58,369 --> 00:31:03,710
these and I don't know where a neutral

00:31:01,059 --> 00:31:05,539
place would be for that I think it's

00:31:03,710 --> 00:31:07,190
kind of difficult because you know for

00:31:05,539 --> 00:31:08,779
things like lemon off your neck correct

00:31:07,190 --> 00:31:12,289
going to get you know the Intel guys to

00:31:08,779 --> 00:31:14,509
come and talk about their tricks but at

00:31:12,289 --> 00:31:18,200
the same time the larger AOSP community

00:31:14,509 --> 00:31:21,519
I think is missing a a location to get

00:31:18,200 --> 00:31:25,450
together to do that sort of discussion

00:31:21,519 --> 00:31:28,460
where maybe they can find the common

00:31:25,450 --> 00:31:30,830
technical side of how the doodoo wider

00:31:28,460 --> 00:31:33,529
testing and be able to kind of have

00:31:30,830 --> 00:31:36,859
maybe not in any one repo but a kind of

00:31:33,529 --> 00:31:43,700
a net project supported device list

00:31:36,859 --> 00:31:46,309
that's much larger um I might regret

00:31:43,700 --> 00:31:50,019
trying this is a question for the room

00:31:46,309 --> 00:31:52,399
is that anything anybody out there is

00:31:50,019 --> 00:31:54,710
needs to be done on needs to be in place

00:31:52,399 --> 00:31:57,379
or needs to be available to make it

00:31:54,710 --> 00:32:01,340
easier for them to push patches to ASP

00:31:57,379 --> 00:32:04,580
or to get involved with helping linaro

00:32:01,340 --> 00:32:06,409
push patches does anyone got any

00:32:04,580 --> 00:32:11,989
particular things that they'd like to

00:32:06,409 --> 00:32:13,220
gripe about when it comes to that looks

00:32:11,989 --> 00:32:19,220
like everyone out in the audience is

00:32:13,220 --> 00:32:22,460
happy okay so so there we don't have any

00:32:19,220 --> 00:32:23,659
specific problems from their own one of

00:32:22,460 --> 00:32:25,549
the things on area so we're mentioning

00:32:23,659 --> 00:32:28,309
is the problems of binary blobs and

00:32:25,549 --> 00:32:31,269
perhaps the more GPL enthusiastic people

00:32:28,309 --> 00:32:33,409
in the audience need to cover their ears

00:32:31,269 --> 00:32:35,539
the binary blobs I don't think are going

00:32:33,409 --> 00:32:37,729
to go away anywhere and so we need a way

00:32:35,539 --> 00:32:39,200
of managing them I think you'll be

00:32:37,729 --> 00:32:42,080
reasonably possible to have something

00:32:39,200 --> 00:32:44,570
that would enable us to package them up

00:32:42,080 --> 00:32:47,749
and require a pre acceptance of the

00:32:44,570 --> 00:32:49,070
Uhler as part of the unpacking or

00:32:47,749 --> 00:32:53,059
installing or configuring our

00:32:49,070 --> 00:32:56,629
environment so that's one thing we could

00:32:53,059 --> 00:32:59,059
do with a host of repository but try to

00:32:56,629 --> 00:33:01,779
manage on these bolts for people kind of

00:32:59,059 --> 00:33:01,779
whether or not that helps

00:33:03,940 --> 00:33:09,590
so one of the issues we have with binary

00:33:07,400 --> 00:33:13,100
blobs is that things like Bionic change

00:33:09,590 --> 00:33:14,870
and we try to hide symbols and things

00:33:13,100 --> 00:33:17,780
like that and the binary blobs will have

00:33:14,870 --> 00:33:19,670
references to head and symbols and you

00:33:17,780 --> 00:33:21,620
know we therefore break a binary blob

00:33:19,670 --> 00:33:23,390
you need the source code so that you can

00:33:21,620 --> 00:33:25,670
go and change it and fix what the issues

00:33:23,390 --> 00:33:27,830
are and then rebuild the binary blobs

00:33:25,670 --> 00:33:29,120
and we do that for the Nexus devices we

00:33:27,830 --> 00:33:31,840
don't distribute the source code but we

00:33:29,120 --> 00:33:35,060
can go and rebuild the binary blobs so

00:33:31,840 --> 00:33:37,220
it would be nice if you know Samsung or

00:33:35,060 --> 00:33:39,200
whoever you know took that they're sse

00:33:37,220 --> 00:33:41,210
vendors and Gotham's countries all of

00:33:39,200 --> 00:33:42,440
that binary blobs but you need to sort

00:33:41,210 --> 00:33:44,780
someone needs the source coding to

00:33:42,440 --> 00:33:46,940
compute the ability to go and change it

00:33:44,780 --> 00:33:51,850
and fix it as as we go and clean up and

00:33:46,940 --> 00:33:53,900
prepare things like my honor yeah and I

00:33:51,850 --> 00:33:57,020
suspect there might be ways to approach

00:33:53,900 --> 00:33:58,430
that I suspect they require complicated

00:33:57,020 --> 00:34:00,890
discussions that aren't appropriate here

00:33:58,430 --> 00:34:03,710
I don't know they necessarily it's

00:34:00,890 --> 00:34:06,260
entirely in semantical and ultimately

00:34:03,710 --> 00:34:08,090
you need a binary blob from a trusted

00:34:06,260 --> 00:34:09,950
vendor that's working against the tip to

00:34:08,090 --> 00:34:13,460
appear from somewhere and appear in

00:34:09,950 --> 00:34:14,690
repository so there are legal obstacles

00:34:13,460 --> 00:34:22,700
but there aren't any insurmountable

00:34:14,690 --> 00:34:24,770
technical ones now note we've run into

00:34:22,700 --> 00:34:27,290
the problem of missing symbols and a

00:34:24,770 --> 00:34:29,540
block in clubs quite a lot we've often

00:34:27,290 --> 00:34:34,100
had to revert patches and bionic to keep

00:34:29,540 --> 00:34:36,410
a particular block going so what my tab

00:34:34,100 --> 00:34:38,780
a little bit to at least work around it

00:34:36,410 --> 00:34:41,210
is if dusclops were at least released as

00:34:38,780 --> 00:34:43,520
object files we can relink together to

00:34:41,210 --> 00:34:46,280
make sure we can pull in a specific

00:34:43,520 --> 00:34:50,240
symbol through a legacy compact library

00:34:46,280 --> 00:34:53,419
or something like that but obviously the

00:34:50,240 --> 00:34:55,220
best thing to do is to the best thing to

00:34:53,419 --> 00:34:57,830
do is to open the code the second best

00:34:55,220 --> 00:35:00,500
thing is to make sure that it actually

00:34:57,830 --> 00:35:02,180
always works on top of a OSP master and

00:35:00,500 --> 00:35:07,340
at least have an experimental bid for it

00:35:02,180 --> 00:35:09,340
somewhere so what would say is that if

00:35:07,340 --> 00:35:12,470
you're going to have binary blobs and

00:35:09,340 --> 00:35:14,300
distributors binary blobs someone has to

00:35:12,470 --> 00:35:16,340
own them here's

00:35:14,300 --> 00:35:20,990
once more for rebuilding it and putting

00:35:16,340 --> 00:35:23,780
it back up again I mean be black stating

00:35:20,990 --> 00:35:28,190
the obvious but I think that's really

00:35:23,780 --> 00:35:30,590
only thing you can do yeah we would like

00:35:28,190 --> 00:35:32,990
to help man make it easier better but

00:35:30,590 --> 00:35:35,000
obviously we cannot recompile coat that

00:35:32,990 --> 00:35:38,270
we don't have and I'm not sure that the

00:35:35,000 --> 00:35:40,160
hardware members for but except pushing

00:35:38,270 --> 00:35:42,080
their code into a server that would

00:35:40,160 --> 00:35:43,850
essentially just recompile it if it's

00:35:42,080 --> 00:35:47,720
all stood by as an could just take the

00:35:43,850 --> 00:35:51,950
old but maybe it's something versus cat

00:35:47,720 --> 00:35:54,980
saying cuz him I think the problem there

00:35:51,950 --> 00:35:56,570
is like the binary blobs like if someone

00:35:54,980 --> 00:35:58,460
is working on Wi-Fi or someone is

00:35:56,570 --> 00:36:00,200
working on graphics accelerator or so on

00:35:58,460 --> 00:36:03,140
they will be only specialized in the

00:36:00,200 --> 00:36:05,330
particular component and they like for

00:36:03,140 --> 00:36:07,100
them pulling the entire US betray every

00:36:05,330 --> 00:36:09,380
time and then rebasing their code base

00:36:07,100 --> 00:36:12,280
to the TSP tree and then making a new

00:36:09,380 --> 00:36:15,080
binary release I think for that they

00:36:12,280 --> 00:36:17,240
they are not signed for like it takes

00:36:15,080 --> 00:36:19,760
like a month or two for them to come to

00:36:17,240 --> 00:36:21,620
the latest AOSP and then do all these

00:36:19,760 --> 00:36:23,990
validation again fix the issues that

00:36:21,620 --> 00:36:26,090
they found and then release by then the

00:36:23,990 --> 00:36:27,770
new USB USB might have moved so they

00:36:26,090 --> 00:36:30,020
might one person should be dedicated for

00:36:27,770 --> 00:36:33,200
doing this job on or because he said

00:36:30,020 --> 00:36:35,780
like set up a build which can pull these

00:36:33,200 --> 00:36:37,400
issues and then show it to them like for

00:36:35,780 --> 00:36:39,680
linara if the sources are available we

00:36:37,400 --> 00:36:41,300
can definitely do this build and keep it

00:36:39,680 --> 00:36:42,950
build ready for them to look at but then

00:36:41,300 --> 00:36:44,930
for us the sources won't be available

00:36:42,950 --> 00:36:49,220
the Cuban we will get only binary blobs

00:36:44,930 --> 00:36:53,300
ovv we have similar issues so i think we

00:36:49,220 --> 00:36:55,430
are almost getting to closure so few so

00:36:53,300 --> 00:36:57,920
few action items that we think we should

00:36:55,430 --> 00:37:00,380
do is like since the platforms are not

00:36:57,920 --> 00:37:03,320
supported in USB because of validation

00:37:00,380 --> 00:37:05,720
and things so we need to find a place

00:37:03,320 --> 00:37:08,720
where we can host these platforms and

00:37:05,720 --> 00:37:12,050
allow your members and partners to push

00:37:08,720 --> 00:37:14,110
their deltas and patches right like that

00:37:12,050 --> 00:37:17,780
could be one thing which we need to

00:37:14,110 --> 00:37:19,400
propose and system so we maintain their

00:37:17,780 --> 00:37:21,170
platforms or whatever hardware

00:37:19,400 --> 00:37:23,270
abstraction changes and other changes

00:37:21,170 --> 00:37:25,340
that they implement even if they are not

00:37:23,270 --> 00:37:27,080
pushing to AOSP at least they can submit

00:37:25,340 --> 00:37:28,040
to the intermediate repository and from

00:37:27,080 --> 00:37:31,160
there it can be pushed

00:37:28,040 --> 00:37:33,950
to AOSP so that's one thing which we can

00:37:31,160 --> 00:37:35,870
suggest and there were other few action

00:37:33,950 --> 00:37:37,970
items which came in so which I'll

00:37:35,870 --> 00:37:41,390
populate it out so is there anything

00:37:37,970 --> 00:37:42,980
that you say you know in a line that I

00:37:41,390 --> 00:37:47,750
need to capture as an action item and

00:37:42,980 --> 00:37:49,820
work on with our members and so on any

00:37:47,750 --> 00:37:56,030
action item that you think we should

00:37:49,820 --> 00:37:57,740
take I don't know whether this is

00:37:56,030 --> 00:38:02,150
something a very easy to express as an

00:37:57,740 --> 00:38:04,220
action but we've got to essentially we

00:38:02,150 --> 00:38:05,660
know what the problem is in number of

00:38:04,220 --> 00:38:07,610
ways and we've got a lot of smart people

00:38:05,660 --> 00:38:10,970
in computers that on a good day do our

00:38:07,610 --> 00:38:12,680
bidding I think one of the things we've

00:38:10,970 --> 00:38:15,070
got to do is focus on making it easier

00:38:12,680 --> 00:38:18,320
for people to do the right thing and

00:38:15,070 --> 00:38:20,450
we've got to probably as much as it

00:38:18,320 --> 00:38:22,670
might be painful meet people halfway on

00:38:20,450 --> 00:38:24,590
the binary blobs and work out a

00:38:22,670 --> 00:38:27,710
compromise or worker compromises that

00:38:24,590 --> 00:38:28,940
enable them to achieve what the binary

00:38:27,710 --> 00:38:31,390
blobs are intended to achieve which i

00:38:28,940 --> 00:38:33,860
assume is some degree of confidentiality

00:38:31,390 --> 00:38:36,380
ovis original source code and the

00:38:33,860 --> 00:38:38,420
acceptance of legal terms over access in

00:38:36,380 --> 00:38:40,880
those binaries and as Barry suggested

00:38:38,420 --> 00:38:42,890
it's possible that object files that can

00:38:40,880 --> 00:38:45,080
then be linked might get around some of

00:38:42,890 --> 00:38:47,900
that and while it might not so all the

00:38:45,080 --> 00:38:52,400
problems it makes help solve some and

00:38:47,900 --> 00:38:54,770
then possibly looking at ways we can do

00:38:52,400 --> 00:38:56,330
testing for partners testing for

00:38:54,770 --> 00:38:58,310
different people and testing those

00:38:56,330 --> 00:38:59,540
platforms and if not if we can't do

00:38:58,310 --> 00:39:01,250
anything else at least being able to

00:38:59,540 --> 00:39:02,870
report precisely what has gone wrong

00:39:01,250 --> 00:39:10,790
with their binary blobs is going to get

00:39:02,870 --> 00:39:12,410
start I think I tried to make a action

00:39:10,790 --> 00:39:14,690
last year around this time that we

00:39:12,410 --> 00:39:16,940
should get some sort of a conference

00:39:14,690 --> 00:39:18,800
going and try to get you know a number

00:39:16,940 --> 00:39:21,110
of folks who are doing this sort of repo

00:39:18,800 --> 00:39:26,900
management together so that we can't

00:39:21,110 --> 00:39:28,700
have a wider community discussion yeah

00:39:26,900 --> 00:39:30,710
the point about documentation I feel

00:39:28,700 --> 00:39:33,980
like is another good one coming kind of

00:39:30,710 --> 00:39:35,660
you know I'm sure with fancy agreements

00:39:33,980 --> 00:39:39,590
you can get lots of good documentation

00:39:35,660 --> 00:39:41,540
but you know figuring out what is the

00:39:39,590 --> 00:39:41,780
right way to do integration and board

00:39:41,540 --> 00:39:44,480
bring

00:39:41,780 --> 00:39:47,180
them how to do it properly I think is

00:39:44,480 --> 00:39:49,220
something that may be a lot of OMS have

00:39:47,180 --> 00:39:52,940
difficulty from at least seeing some of

00:39:49,220 --> 00:39:54,530
their trees and so that might be

00:39:52,940 --> 00:39:56,630
something that we could try to improve

00:39:54,530 --> 00:40:00,140
another thing I would like to see is if

00:39:56,630 --> 00:40:02,480
we are if there is going to be more

00:40:00,140 --> 00:40:04,070
folks working together trying to find a

00:40:02,480 --> 00:40:07,130
way where we can have collaborative

00:40:04,070 --> 00:40:10,570
review so even the you know Google's the

00:40:07,130 --> 00:40:13,510
official gatekeeper having more you know

00:40:10,570 --> 00:40:16,190
whether it's linaro or other members

00:40:13,510 --> 00:40:17,810
commenting and putting feedback in sp

00:40:16,190 --> 00:40:20,270
commits that are submitted from the

00:40:17,810 --> 00:40:22,880
community so that we are able to kind of

00:40:20,270 --> 00:40:24,350
improve the overall quality and make

00:40:22,880 --> 00:40:25,730
sure that you know there becomes a

00:40:24,350 --> 00:40:32,930
culture of what's the right way to do

00:40:25,730 --> 00:40:35,470
things that might help now fully agreed

00:40:32,930 --> 00:40:38,210
with those points in particular although

00:40:35,470 --> 00:40:40,670
but you already said goes with my idea

00:40:38,210 --> 00:40:42,830
of turning over projects that are no

00:40:40,670 --> 00:40:46,000
longer being maintained what's the

00:40:42,830 --> 00:40:48,440
useful to the community and another

00:40:46,000 --> 00:40:51,620
action point I would like to take is

00:40:48,440 --> 00:40:53,930
just take some bought some device that

00:40:51,620 --> 00:40:58,060
we know is not going to be supported by

00:40:53,930 --> 00:41:02,480
AOSP maybe Juno and set up a repository

00:40:58,060 --> 00:41:05,750
there people just get device tree and

00:41:02,480 --> 00:41:07,550
the econo tree and everything else is

00:41:05,750 --> 00:41:10,730
being pulled from AOSP just as a

00:41:07,550 --> 00:41:12,470
reference for how to properly add a

00:41:10,730 --> 00:41:15,160
device that's not going to be supported

00:41:12,470 --> 00:41:21,890
while still getting dressed from AOSP

00:41:15,160 --> 00:41:24,830
and keeping track of current stuff now

00:41:21,890 --> 00:41:32,120
okay if not you know then maybe some

00:41:24,830 --> 00:41:34,670
other devices yeah yeah I mean I'm just

00:41:32,120 --> 00:41:38,110
talking about any device as a reference

00:41:34,670 --> 00:41:38,110
for how it can be done

00:41:45,250 --> 00:41:54,080
yeah and one last request is can linaro

00:41:50,570 --> 00:41:56,300
be a stopgap place where people can

00:41:54,080 --> 00:41:58,040
submit the patches let's say to err

00:41:56,300 --> 00:41:59,960
speaker it and then point you to you

00:41:58,040 --> 00:42:01,610
guys and you take it up and see what

00:41:59,960 --> 00:42:05,120
needs to be done for it to be upstream

00:42:01,610 --> 00:42:07,100
to ASB you have a bunch of patches that

00:42:05,120 --> 00:42:09,410
you maintain anyway so can you add more

00:42:07,100 --> 00:42:11,240
patches to it and then help make sure

00:42:09,410 --> 00:42:13,040
that it goes upstream in whatever format

00:42:11,240 --> 00:42:15,740
that's required biggest there are two

00:42:13,040 --> 00:42:18,470
issues here one that even we see binary

00:42:15,740 --> 00:42:21,290
blobs failing and in spite of we going

00:42:18,470 --> 00:42:23,780
and telling the member that this blob is

00:42:21,290 --> 00:42:25,790
failing and you need to fix it gives the

00:42:23,780 --> 00:42:28,550
sources or you fix it for us it goes

00:42:25,790 --> 00:42:30,200
into this for like minimum three to four

00:42:28,550 --> 00:42:32,690
months and we don't get the support from

00:42:30,200 --> 00:42:34,220
actual number that is a known issue but

00:42:32,690 --> 00:42:37,460
other than that we are definitely

00:42:34,220 --> 00:42:39,710
willing to accept patches from members

00:42:37,460 --> 00:42:41,330
which they want us to maintain or which

00:42:39,710 --> 00:42:44,060
they want us to push it to upstream or

00:42:41,330 --> 00:42:46,310
which they want us to review so we do

00:42:44,060 --> 00:42:48,080
that in kernel and many other places we

00:42:46,310 --> 00:42:51,110
work with members directly in submitting

00:42:48,080 --> 00:42:53,810
their front patches to USB we can

00:42:51,110 --> 00:42:55,490
definitely help in those areas but it

00:42:53,810 --> 00:42:57,110
has to come from members like if there

00:42:55,490 --> 00:42:58,820
will if they are willing to share their

00:42:57,110 --> 00:43:00,560
food with us in order to review and then

00:42:58,820 --> 00:43:02,330
push it to upstream definitely we can

00:43:00,560 --> 00:43:05,990
take that and we can definitely have

00:43:02,330 --> 00:43:08,300
stopgap for only narrow repositories for

00:43:05,990 --> 00:43:09,830
collecting such patches and reviewing

00:43:08,300 --> 00:43:15,230
and end up streaming that is also

00:43:09,830 --> 00:43:17,060
possible I would put the caution on that

00:43:15,230 --> 00:43:18,800
a little bit though just because I you

00:43:17,060 --> 00:43:21,260
know as far as in the kernel community

00:43:18,800 --> 00:43:23,270
we have that kind of come up frequently

00:43:21,260 --> 00:43:24,650
with the LSK as well as people want to

00:43:23,270 --> 00:43:27,530
come say hey you know why don't you guys

00:43:24,650 --> 00:43:28,850
maintain this patch stuff for us and or

00:43:27,530 --> 00:43:30,950
maybe try to have strings patch that

00:43:28,850 --> 00:43:33,560
that sort of thing and I think it's it's

00:43:30,950 --> 00:43:35,900
I think Lenore should work hard to

00:43:33,560 --> 00:43:37,600
assist members in up streaming their own

00:43:35,900 --> 00:43:39,170
patches and learning the process and

00:43:37,600 --> 00:43:40,720
participating because I think it's

00:43:39,170 --> 00:43:43,130
important that we widen that base of

00:43:40,720 --> 00:43:44,930
different interests who are working on

00:43:43,130 --> 00:43:47,390
it there are some cases where you know

00:43:44,930 --> 00:43:48,470
if there's a situation where we have a

00:43:47,390 --> 00:43:50,450
whole bunch of different members trying

00:43:48,470 --> 00:43:52,010
to do similar things maybe you know

00:43:50,450 --> 00:43:53,960
having linaro work out a common solution

00:43:52,010 --> 00:43:57,099
is a good way of

00:43:53,960 --> 00:43:59,810
merging those different problems but

00:43:57,099 --> 00:44:02,450
just as far as managing and up streaming

00:43:59,810 --> 00:44:06,650
some you know smaller patch because

00:44:02,450 --> 00:44:09,320
that's just that I feel like that it's

00:44:06,650 --> 00:44:11,119
more value of it we're able to broaden

00:44:09,320 --> 00:44:15,140
the base rather than kind of just have a

00:44:11,119 --> 00:44:19,550
queue of keeping that we do um yeah I

00:44:15,140 --> 00:44:20,900
shouldn't aunt possibly to that it's

00:44:19,550 --> 00:44:22,609
essentially that the issue is that

00:44:20,900 --> 00:44:25,070
everybody's time is important every

00:44:22,609 --> 00:44:27,890
Tony's time is precious and you get

00:44:25,070 --> 00:44:29,240
periods like this when Google are

00:44:27,890 --> 00:44:31,400
working on Android and they're in the

00:44:29,240 --> 00:44:35,630
point where they're coming up to a major

00:44:31,400 --> 00:44:37,040
release and under unsurprisingly their

00:44:35,630 --> 00:44:38,540
attention is going to be focused on that

00:44:37,040 --> 00:44:40,520
release world and what the community is

00:44:38,540 --> 00:44:42,230
doing well less community is pushing

00:44:40,520 --> 00:44:45,410
patches are absolutely critical

00:44:42,230 --> 00:44:48,050
importance an absolute top quality to be

00:44:45,410 --> 00:44:49,700
fair in to be the kind of signal to be

00:44:48,050 --> 00:44:54,740
kind they've got better things to do

00:44:49,700 --> 00:44:56,450
than review bad patches and similarly

00:44:54,740 --> 00:44:58,790
everyone than ours got only a finite

00:44:56,450 --> 00:45:00,140
amount of time and well they can manage

00:44:58,790 --> 00:45:04,670
some patches important packages they

00:45:00,140 --> 00:45:08,089
can't manage everyone's so what I get

00:45:04,670 --> 00:45:10,609
I'm getting to is I think well everyone

00:45:08,089 --> 00:45:14,180
can do and then I can do and I think my

00:45:10,609 --> 00:45:16,250
team can do is help refine the quality

00:45:14,180 --> 00:45:19,070
of the patches and I know when we were

00:45:16,250 --> 00:45:21,890
doing some of the early 64-bit work and

00:45:19,070 --> 00:45:23,480
Sherman was doing patches John was very

00:45:21,890 --> 00:45:25,520
helpful in helping improve those patches

00:45:23,480 --> 00:45:28,040
and getting getting those patches of

00:45:25,520 --> 00:45:31,099
prayer and Linux kernel mailing list and

00:45:28,040 --> 00:45:33,109
I think maybe maybe there's a real Oh

00:45:31,099 --> 00:45:35,720
Rolf alone our own for its partners as a

00:45:33,109 --> 00:45:37,580
king as as not as not in taking

00:45:35,720 --> 00:45:38,990
responsibility for the patches but we're

00:45:37,580 --> 00:45:40,430
taking responsibility for helping the

00:45:38,990 --> 00:45:42,640
partners improve the quality of their

00:45:40,430 --> 00:45:42,640
patches

00:45:47,030 --> 00:45:52,970
I think have taken a lot of notes let's

00:45:51,050 --> 00:45:56,330
see how we start maybe we should start

00:45:52,970 --> 00:45:57,770
with some examples and and also like we

00:45:56,330 --> 00:45:59,870
need to definitely find some neutral

00:45:57,770 --> 00:46:01,790
conference so let's see if we can find

00:45:59,870 --> 00:46:04,160
some better place to meet with more

00:46:01,790 --> 00:46:05,810
people so i tried attending android

00:46:04,160 --> 00:46:09,110
build submit with that intention but i

00:46:05,810 --> 00:46:12,080
didn't realize that it's not going that

00:46:09,110 --> 00:46:14,180
far so yeah we need to really find some

00:46:12,080 --> 00:46:18,260
good place for these kind of discussions

00:46:14,180 --> 00:46:20,330
across Android community yeah so let's

00:46:18,260 --> 00:46:22,700
see we will start working on these at

00:46:20,330 --> 00:46:24,650
least some top 3 action items and we

00:46:22,700 --> 00:46:26,750
will come back so thank you for

00:46:24,650 --> 00:46:31,780
attending this discussions in thanks

00:46:26,750 --> 00:46:31,780

YouTube URL: https://www.youtube.com/watch?v=AOmF5JEP0DQ


