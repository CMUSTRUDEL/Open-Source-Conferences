Title: YVR18-209:Building Accurate BOMs:  Open Source Tooling Options.
Publication date: 2018-09-28
Playlist: Linaro Connect Vancouver 2018
Description: 
	When creating reference builds of open source projects that others can use, being able to accurately document what was included is increasingly important to determine if a security vulnerability may apply,  or accurately figuring out which open source licenses need to be complied with.    Until now this has been a pretty manual process, and as a result,  gets passed down the supply chain,  and we end up with a bit of a mess or requires $$$ tooling.   

In the last year we've seen a significant number of open source tools emerge that can help with this task and permit much of the manual work to be automated so accurate machine sharable files can be created.   This talk will provide an quick overview of the state of open source tools able to generate/consume SPDX documents,   then would like to do some brainstorming on logical points in the reference builds and upstream projects it makes sense to use them and what some of the limitations.   Where gaps are identified,  see what needs be done to fix.
Captions: 
	00:00:02,110 --> 00:00:07,120
[Music]

00:00:07,740 --> 00:00:14,889
and so Mike Holmes myself are gonna be

00:00:11,620 --> 00:00:17,289
coordinating and the topic we want to

00:00:14,889 --> 00:00:19,750
improve on is how do we get accurate

00:00:17,289 --> 00:00:22,119
software building materials generated

00:00:19,750 --> 00:00:25,330
for various open source projects and

00:00:22,119 --> 00:00:27,759
using open source projects because we

00:00:25,330 --> 00:00:30,429
don't have a functional way of doing it

00:00:27,759 --> 00:00:31,509
right now that everyone's trusting so I

00:00:30,429 --> 00:00:33,700
just want give you everyone a quick

00:00:31,509 --> 00:00:35,079
overview and this is quick about what

00:00:33,700 --> 00:00:38,230
the state of the line looks like right

00:00:35,079 --> 00:00:39,789
now from my perspective and then want to

00:00:38,230 --> 00:00:41,590
jump into the fishbowl session and Mike

00:00:39,789 --> 00:00:48,609
will host it off at that point in time

00:00:41,590 --> 00:00:50,949
oh thank you so basically confidence and

00:00:48,609 --> 00:00:53,530
using software and security for as well

00:00:50,949 --> 00:00:54,789
actually understand I mean actually

00:00:53,530 --> 00:00:56,800
understanding what's actually being used

00:00:54,789 --> 00:00:58,539
here what software is actually being

00:00:56,800 --> 00:01:00,160
used and this is actually a harder

00:00:58,539 --> 00:01:03,370
problem than most people would initially

00:01:00,160 --> 00:01:05,979
think because of how the ecosystem is

00:01:03,370 --> 00:01:07,810
evolved and so what's actually in your

00:01:05,979 --> 00:01:13,509
software build materials is not always

00:01:07,810 --> 00:01:14,350
obvious and it tends to change if you're

00:01:13,509 --> 00:01:17,770
not familiar with the term software

00:01:14,350 --> 00:01:19,390
building materials what it is is the

00:01:17,770 --> 00:01:23,740
definition on Wikipedia which is my

00:01:19,390 --> 00:01:25,299
source of truth I have to confess is you

00:01:23,740 --> 00:01:27,970
know what are all the components well

00:01:25,299 --> 00:01:29,200
that's very dynamic these days with

00:01:27,970 --> 00:01:33,100
what's happening in the open source

00:01:29,200 --> 00:01:35,680
ecosystem and it can be commercial and

00:01:33,100 --> 00:01:39,040
open source components and they make it

00:01:35,680 --> 00:01:40,450
the analogy to the list of packaging the

00:01:39,040 --> 00:01:41,560
list of food design of packaging

00:01:40,450 --> 00:01:43,329
guidelines so when you buy something in

00:01:41,560 --> 00:01:46,270
the shop you know what software you've

00:01:43,329 --> 00:01:49,899
got or so that software so you know what

00:01:46,270 --> 00:01:53,079
ingredients are in your food and these

00:01:49,899 --> 00:01:54,250
ingredients are part of the story but

00:01:53,079 --> 00:01:55,899
the large part of the story and where I

00:01:54,250 --> 00:01:57,430
get valued personally these days is

00:01:55,899 --> 00:02:00,750
looking at what the nutrition facts are

00:01:57,430 --> 00:02:05,140
saying what these nutrition facts say is

00:02:00,750 --> 00:02:06,369
giving you a clue as to well do you feel

00:02:05,140 --> 00:02:09,460
comfortable using it or do you want to

00:02:06,369 --> 00:02:10,960
avoid some of this you know are there

00:02:09,460 --> 00:02:12,280
security vulnerability you know and the

00:02:10,960 --> 00:02:13,599
equivalent for us on software is give me

00:02:12,280 --> 00:02:15,219
security vulnerabilities

00:02:13,599 --> 00:02:18,040
am I allowed to use a license do I have

00:02:15,219 --> 00:02:20,019
to do anything special before it gets

00:02:18,040 --> 00:02:21,579
used having this information handy lets

00:02:20,019 --> 00:02:23,319
you respect the license as well as

00:02:21,579 --> 00:02:25,269
understand this might be subject to

00:02:23,319 --> 00:02:29,140
vulnerabilities so it's a good best

00:02:25,269 --> 00:02:31,090
practice the open chain project the

00:02:29,140 --> 00:02:35,049
links foundation also has a definition

00:02:31,090 --> 00:02:37,870
of what a Bill of Materials is and this

00:02:35,049 --> 00:02:39,189
has been the training material in open

00:02:37,870 --> 00:02:41,139
chain has been derived from a variety of

00:02:39,189 --> 00:02:42,579
corporations and they've also have

00:02:41,139 --> 00:02:45,819
contributed it so they're mostly all

00:02:42,579 --> 00:02:49,599
agreeing on this definition which is it

00:02:45,819 --> 00:02:52,810
is how much is if it is a operating

00:02:49,599 --> 00:03:00,970
system and then they also bring in the

00:02:52,810 --> 00:03:02,049
security aspect to now so any products

00:03:00,970 --> 00:03:05,470
that are out in the market are complete

00:03:02,049 --> 00:03:09,129
mostly created from open source as well

00:03:05,470 --> 00:03:11,409
as from proprietary software it's about

00:03:09,129 --> 00:03:12,849
80% to 90% open source depending on

00:03:11,409 --> 00:03:15,819
whose stats you're looking at these days

00:03:12,849 --> 00:03:18,069
so interacting in between these two is a

00:03:15,819 --> 00:03:21,069
reality of understanding what the Bill

00:03:18,069 --> 00:03:22,690
of Materials might contain and there's

00:03:21,069 --> 00:03:23,949
dependencies between projects and

00:03:22,690 --> 00:03:25,900
projects of bringing other projects in

00:03:23,949 --> 00:03:28,000
and so forth and if you're actually you

00:03:25,900 --> 00:03:29,049
know building the Debian from the seats

00:03:28,000 --> 00:03:30,159
and bringing up forward from there

00:03:29,049 --> 00:03:33,310
you'll see a lot of things getting

00:03:30,159 --> 00:03:35,769
pulled in and they'll have these

00:03:33,310 --> 00:03:37,510
different licensing and as we get into

00:03:35,769 --> 00:03:40,060
things like the Java and go ecosystem

00:03:37,510 --> 00:03:42,609
these are Linux foundation projects that

00:03:40,060 --> 00:03:44,190
we've done some analysis on certain

00:03:42,609 --> 00:03:47,169
things that were achieved at Build time

00:03:44,190 --> 00:03:52,299
others are checked into the fabric all

00:03:47,169 --> 00:03:53,530
of this adds complexity and the other

00:03:52,299 --> 00:03:55,859
thing to think about is the fact that

00:03:53,530 --> 00:03:58,569
what's significant to the developers

00:03:55,859 --> 00:04:01,239
which is you know named version never

00:03:58,569 --> 00:04:04,019
checksum download location license

00:04:01,239 --> 00:04:07,329
information build and run dependencies

00:04:04,019 --> 00:04:09,099
is also not necessarily what the lawyers

00:04:07,329 --> 00:04:11,319
and the management are gonna be looking

00:04:09,099 --> 00:04:13,870
at which is what all the licenses where

00:04:11,319 --> 00:04:15,189
the vulnerability findings you know

00:04:13,870 --> 00:04:17,079
Taylor discussions what's the risk

00:04:15,189 --> 00:04:18,430
management of using it and before people

00:04:17,079 --> 00:04:21,479
use the software they have to understand

00:04:18,430 --> 00:04:25,630
what the risk management of using it is

00:04:21,479 --> 00:04:27,150
so since this ingredient management has

00:04:25,630 --> 00:04:29,530
not been standardized it varies

00:04:27,150 --> 00:04:31,830
you will find a lot of different

00:04:29,530 --> 00:04:36,540
perspectives coming into play here and

00:04:31,830 --> 00:04:39,070
we have inconsistency as a result but

00:04:36,540 --> 00:04:40,480
the underlying truth here is most

00:04:39,070 --> 00:04:42,790
developers are wanting to build software

00:04:40,480 --> 00:04:44,650
they don't want to spend time dealing

00:04:42,790 --> 00:04:50,410
with the packaging labeling and

00:04:44,650 --> 00:04:51,550
distribution and I will I have come you

00:04:50,410 --> 00:04:52,960
know various people I've talked to over

00:04:51,550 --> 00:04:54,610
this subject over the years some who

00:04:52,960 --> 00:04:57,580
actually do very good job on packaging

00:04:54,610 --> 00:05:00,040
but the bulk of people it's hard to get

00:04:57,580 --> 00:05:01,300
them to pay attention so what we're

00:05:00,040 --> 00:05:03,790
doing today is we're running scans on

00:05:01,300 --> 00:05:05,530
incoming project code bases we're

00:05:03,790 --> 00:05:08,380
analyzing the license text notices and

00:05:05,530 --> 00:05:09,550
security references we're producing

00:05:08,380 --> 00:05:10,900
these summaries of the key information

00:05:09,550 --> 00:05:12,790
and then we're also applying best

00:05:10,900 --> 00:05:13,690
practices within projects as best we

00:05:12,790 --> 00:05:14,950
know we're both trying to do the right

00:05:13,690 --> 00:05:17,350
thing it's not like anyone's trying to

00:05:14,950 --> 00:05:20,380
be sabotaging or anything else but we

00:05:17,350 --> 00:05:23,200
don't have useful agreement or agreement

00:05:20,380 --> 00:05:28,240
on what this key information is we have

00:05:23,200 --> 00:05:31,780
that variety that's there and so as a

00:05:28,240 --> 00:05:33,370
result the question is if certain

00:05:31,780 --> 00:05:34,750
open-source tools work based workflow

00:05:33,370 --> 00:05:35,320
for generating these software build

00:05:34,750 --> 00:05:38,110
materials

00:05:35,320 --> 00:05:39,910
and actually it's not yet I think we're

00:05:38,110 --> 00:05:42,460
getting closer I think we've made a lot

00:05:39,910 --> 00:05:45,310
of progress in the last year but I don't

00:05:42,460 --> 00:05:48,670
think we're there yet so we've got many

00:05:45,310 --> 00:05:51,100
tools and approaches in terms of process

00:05:48,670 --> 00:05:52,660
and practices open chain has seen you

00:05:51,100 --> 00:05:55,480
know tremendous picking up up taking an

00:05:52,660 --> 00:05:58,030
adoption and it's sort of saying if I'm

00:05:55,480 --> 00:05:59,770
using open-source and I'm giving it to

00:05:58,030 --> 00:06:02,170
you in my supply chain this is what you

00:05:59,770 --> 00:06:05,590
can trust me to know and trust me to

00:06:02,170 --> 00:06:07,090
figure out the next steps the ríos

00:06:05,590 --> 00:06:10,270
initiative was launched by Free Software

00:06:07,090 --> 00:06:11,440
Foundation Europe and what it's doing is

00:06:10,270 --> 00:06:14,020
that saying if I'm going to be using

00:06:11,440 --> 00:06:15,310
software open source project I'm going

00:06:14,020 --> 00:06:17,620
to put the information in these key

00:06:15,310 --> 00:06:20,830
spots so you can find it I'm gonna use

00:06:17,620 --> 00:06:23,110
these key best practices so the fsfe has

00:06:20,830 --> 00:06:24,940
basically adopted that and it's

00:06:23,110 --> 00:06:26,770
documented it and we actually in the

00:06:24,940 --> 00:06:30,460
links curl picked that up and applied

00:06:26,770 --> 00:06:32,710
that to the kernel trees as well the

00:06:30,460 --> 00:06:36,190
core infrastructure initiative has a set

00:06:32,710 --> 00:06:38,110
of best practices with regards to

00:06:36,190 --> 00:06:39,310
security mostly but if you actually want

00:06:38,110 --> 00:06:40,570
to get the highest levels you have to be

00:06:39,310 --> 00:06:43,090
clean on your licensing

00:06:40,570 --> 00:06:45,670
and clean on how you're working it and

00:06:43,090 --> 00:06:47,770
then Oh wasp is another source of very

00:06:45,670 --> 00:06:51,700
good best practices on the security side

00:06:47,770 --> 00:06:53,410
for working with software we have a lot

00:06:51,700 --> 00:06:55,000
of source of metadata repositories

00:06:53,410 --> 00:06:56,140
there's new ones that are emerging like

00:06:55,000 --> 00:06:59,050
clearly defined

00:06:56,140 --> 00:07:02,290
we've got libraries dyed IOL npm 1k

00:06:59,050 --> 00:07:04,180
github obviously software heritage for

00:07:02,290 --> 00:07:05,740
collecting the historical all of these

00:07:04,180 --> 00:07:08,590
we need to basically be able to interact

00:07:05,740 --> 00:07:10,150
with effectively for tooling well

00:07:08,590 --> 00:07:12,490
commercial tools I'll let other people

00:07:10,150 --> 00:07:14,710
talk about that they've got marketing

00:07:12,490 --> 00:07:17,230
budgets for open source we have

00:07:14,710 --> 00:07:21,130
pathology as PTX tools quartermaster s3

00:07:17,230 --> 00:07:22,990
360 open source review toolkit scan code

00:07:21,130 --> 00:07:25,060
license finder turned copyright review

00:07:22,990 --> 00:07:26,620
tools these are the ones that are sort

00:07:25,060 --> 00:07:31,510
of starting to interact with SP DX

00:07:26,620 --> 00:07:34,270
effectively there's a lot larger list of

00:07:31,510 --> 00:07:35,680
these that are out there and everyone

00:07:34,270 --> 00:07:36,580
seems to hang on their own and thinks

00:07:35,680 --> 00:07:39,040
it's the most wonderful thing in the

00:07:36,580 --> 00:07:41,080
world but they're not playing in a part

00:07:39,040 --> 00:07:42,610
of a larger ecosystem they're doing the

00:07:41,080 --> 00:07:45,720
job specifically within a narrow window

00:07:42,610 --> 00:07:48,070
and I think we need to get beyond that

00:07:45,720 --> 00:07:49,630
so what Nutrition Facts we actually want

00:07:48,070 --> 00:07:52,180
to keep with our ingredients well we do

00:07:49,630 --> 00:07:53,470
have a language at least and it's been

00:07:52,180 --> 00:07:53,920
worked on with use cases for about eight

00:07:53,470 --> 00:07:58,000
years

00:07:53,920 --> 00:07:59,650
and it can at least communicate the

00:07:58,000 --> 00:08:01,480
licensing and put references to the

00:07:59,650 --> 00:08:02,740
security it needs more information on

00:08:01,480 --> 00:08:04,960
the security but it's a reasonable

00:08:02,740 --> 00:08:06,810
starting point and we've had a lot of

00:08:04,960 --> 00:08:09,070
like say we've had a lot of people

00:08:06,810 --> 00:08:13,120
improving it and contributing to it over

00:08:09,070 --> 00:08:15,160
time so when we're trying to work on

00:08:13,120 --> 00:08:17,200
generating the software build materials

00:08:15,160 --> 00:08:18,970
for incoming packages the tools that can

00:08:17,200 --> 00:08:22,570
help there our physiology with the

00:08:18,970 --> 00:08:23,890
scanning scan code which you can

00:08:22,570 --> 00:08:27,370
generate as PDFs from the command line

00:08:23,890 --> 00:08:29,470
and then new one that's going to be

00:08:27,370 --> 00:08:31,960
coming up and more visible is the

00:08:29,470 --> 00:08:33,820
document or open source review toolkit

00:08:31,960 --> 00:08:38,020
is a more modular approach to looking at

00:08:33,820 --> 00:08:40,720
working with building materials in a

00:08:38,020 --> 00:08:42,940
flow within an organization

00:08:40,720 --> 00:08:45,790
this is coming out of here comm and

00:08:42,940 --> 00:08:47,770
they're working with those in Europe too

00:08:45,790 --> 00:08:50,860
but the documentary will basically be

00:08:47,770 --> 00:08:52,150
able to generate SPD X and so you'll be

00:08:50,860 --> 00:08:53,240
hearing more about that project in the

00:08:52,150 --> 00:08:56,360
next couple months

00:08:53,240 --> 00:09:02,420
and there's a link to it it's all public

00:08:56,360 --> 00:09:05,130
and available and there was a talk in

00:09:02,420 --> 00:09:05,899
here in Vancouver about three weeks ago

00:09:05,130 --> 00:09:15,300
on it

00:09:05,899 --> 00:09:18,829
hello okay we've lost that's interesting

00:09:15,300 --> 00:09:18,829
my laptop is not going forward anymore

00:09:21,710 --> 00:09:26,960
not there okay next case study is well

00:09:25,880 --> 00:09:28,130
when you get an update for open source

00:09:26,960 --> 00:09:30,950
which is a very common thing especially

00:09:28,130 --> 00:09:36,830
with security vulnerability patching and

00:09:30,950 --> 00:09:37,670
so forth or Android or Yocto how can we

00:09:36,830 --> 00:09:39,709
deal with it

00:09:37,670 --> 00:09:41,330
SP DX lets you at least if you've got a

00:09:39,709 --> 00:09:43,580
server set up you can import it and get

00:09:41,330 --> 00:09:46,670
the diff automatically and reuse a prior

00:09:43,580 --> 00:09:48,920
work or it will be set up to incorporate

00:09:46,670 --> 00:09:52,220
the analysis and then scan code you'll

00:09:48,920 --> 00:09:53,660
need to redo the work each time the

00:09:52,220 --> 00:09:55,760
other case study is creating the

00:09:53,660 --> 00:09:58,550
executables with bombs

00:09:55,760 --> 00:10:01,310
again looking at pathology you can rent

00:09:58,550 --> 00:10:04,149
it after the build and if you have prior

00:10:01,310 --> 00:10:07,490
documents you can merge from prior runs

00:10:04,149 --> 00:10:09,560
or same story and then you have you

00:10:07,490 --> 00:10:11,029
cannot scan code to see ICD flow but you

00:10:09,560 --> 00:10:12,550
need to inspect after and if with prior

00:10:11,029 --> 00:10:15,170
to understand what the changes are

00:10:12,550 --> 00:10:19,339
another new tool that's going into the

00:10:15,170 --> 00:10:22,970
CI CD side of it is a quartermaster and

00:10:19,339 --> 00:10:25,430
they're looking at being able to

00:10:22,970 --> 00:10:28,580
integrate it with the build environments

00:10:25,430 --> 00:10:30,890
they've got I think C C++ working right

00:10:28,580 --> 00:10:32,540
now with it and they're looking to

00:10:30,890 --> 00:10:34,100
extend it into the Java framework and

00:10:32,540 --> 00:10:36,410
other frameworks and this one's

00:10:34,100 --> 00:10:40,990
available too if you want go look at the

00:10:36,410 --> 00:10:43,430
sources they'd love to see you the SPD X

00:10:40,990 --> 00:10:45,140
group the tool team on there has

00:10:43,430 --> 00:10:46,820
basically put it together maven plug-in

00:10:45,140 --> 00:10:49,730
they'll automatically generate an SPD X

00:10:46,820 --> 00:10:52,430
doc out every time you are building a

00:10:49,730 --> 00:10:55,880
pom but we haven't managed to get it up

00:10:52,430 --> 00:10:58,550
streamed after trying for three years so

00:10:55,880 --> 00:10:59,900
that we could actually do that and then

00:10:58,550 --> 00:11:02,390
we have the distributing the SPD

00:10:59,900 --> 00:11:04,910
executable and the same sorts of tools

00:11:02,390 --> 00:11:07,459
are there that we've just talked about

00:11:04,910 --> 00:11:10,070
and if we want to publish up Ness BOM to

00:11:07,459 --> 00:11:11,600
share there's some best practices from

00:11:10,070 --> 00:11:15,640
the core infrastructure that we use open

00:11:11,600 --> 00:11:18,950
chain and a new one called sabartés and

00:11:15,640 --> 00:11:20,660
that is actually hooking up using an

00:11:18,950 --> 00:11:22,430
envelope of information write a part of

00:11:20,660 --> 00:11:24,950
which is an SPD X document and putting

00:11:22,430 --> 00:11:26,720
it onto a blockchain ledger so that you

00:11:24,950 --> 00:11:30,589
have the traceability of who's logged it

00:11:26,720 --> 00:11:32,600
over time if you go look in the CIO best

00:11:30,589 --> 00:11:33,950
practices you have it's pretty clear

00:11:32,600 --> 00:11:34,910
that you have to have the copyright and

00:11:33,950 --> 00:11:35,410
licensing if you want to get the

00:11:34,910 --> 00:11:40,000
top-level

00:11:35,410 --> 00:11:43,000
status there and if you this is from the

00:11:40,000 --> 00:11:49,300
leaks Colonel one but having the license

00:11:43,000 --> 00:11:51,069
identifier is part of it reuse is

00:11:49,300 --> 00:11:52,120
another way of basically saying you're

00:11:51,069 --> 00:11:53,860
putting the licensing in the

00:11:52,120 --> 00:11:59,019
identification information in a useful

00:11:53,860 --> 00:12:00,550
spot where the tools can find it open

00:11:59,019 --> 00:12:04,029
chain is talking about the process and

00:12:00,550 --> 00:12:06,220
this is you know what you should expect

00:12:04,029 --> 00:12:08,829
the specification is very short it's

00:12:06,220 --> 00:12:10,269
like three or four pages and it just

00:12:08,829 --> 00:12:11,970
sort of says this is what a company

00:12:10,269 --> 00:12:13,870
using open-source should support and

00:12:11,970 --> 00:12:15,189
then this sports is the one I was

00:12:13,870 --> 00:12:17,560
talking about right now where you

00:12:15,189 --> 00:12:19,180
basically have supplier to supplier and

00:12:17,560 --> 00:12:20,920
each of them are logging their artifacts

00:12:19,180 --> 00:12:23,019
onto a blockchain and there's a demo

00:12:20,920 --> 00:12:25,209
version up of this right now and there's

00:12:23,019 --> 00:12:26,980
various talks going on that this will

00:12:25,209 --> 00:12:29,759
eventually be I think really useful as a

00:12:26,980 --> 00:12:32,829
way of certifying information over time

00:12:29,759 --> 00:12:35,889
so hopefully that's a bit of a whirlwind

00:12:32,829 --> 00:12:37,600
quick tour of what's out there right now

00:12:35,889 --> 00:12:40,600
so we've got a level set for the

00:12:37,600 --> 00:12:42,519
discussion and the office question now

00:12:40,600 --> 00:12:45,040
is how can we generate software build

00:12:42,519 --> 00:12:52,300
materials for Lonardo deliverables and

00:12:45,040 --> 00:12:56,410
with that I will turn it over to ya

00:12:52,300 --> 00:12:58,089
so we got a mandate from Marc that all

00:12:56,410 --> 00:13:00,930
the Linares software should be

00:12:58,089 --> 00:13:03,579
generating these builds of materials and

00:13:00,930 --> 00:13:07,509
Igor in this sort of security working

00:13:03,579 --> 00:13:09,540
group took a stab at this we haven't got

00:13:07,509 --> 00:13:13,569
very far into that yet but a few

00:13:09,540 --> 00:13:15,660
thoughts came out initially it feels a

00:13:13,569 --> 00:13:17,620
bit like the Wild West isn't there's no

00:13:15,660 --> 00:13:21,309
examples you can really go and look at

00:13:17,620 --> 00:13:24,610
yet so we we spoke with Kate and decided

00:13:21,309 --> 00:13:27,279
to try for Sala G first and that

00:13:24,610 --> 00:13:29,649
appeared to be quite heavyweight been

00:13:27,279 --> 00:13:32,319
tried setting it all up as a server

00:13:29,649 --> 00:13:34,569
involved in various things and we

00:13:32,319 --> 00:13:36,370
subsequently spoke to Ti and they said

00:13:34,569 --> 00:13:38,379
they had a similar experience for Sala G

00:13:36,370 --> 00:13:42,129
was a bit too much although they'd only

00:13:38,379 --> 00:13:44,740
tried it a few years ago and then Igor

00:13:42,129 --> 00:13:47,490
had a go with scam code which is simpler

00:13:44,740 --> 00:13:50,499
but as Kate pointed out

00:13:47,490 --> 00:13:51,999
you run it but then you're gonna need to

00:13:50,499 --> 00:13:54,160
look at the output each time and it

00:13:51,999 --> 00:13:57,189
doesn't remember any modifications

00:13:54,160 --> 00:14:03,399
you've made so ultimately I think that's

00:13:57,189 --> 00:14:04,899
harder work to maintain and I guess

00:14:03,399 --> 00:14:06,999
there are there are loads questions to

00:14:04,899 --> 00:14:11,170
me Kate and I were talking about this

00:14:06,999 --> 00:14:12,369
earlier is to me it seems like this has

00:14:11,170 --> 00:14:13,779
to evolve to the point things like

00:14:12,369 --> 00:14:18,660
github have got some of this tooling

00:14:13,779 --> 00:14:18,660
built in so that it's simpler to deploy

00:14:20,759 --> 00:14:24,189
the other thing we need to see is

00:14:22,720 --> 00:14:27,129
there's actually a demand that people

00:14:24,189 --> 00:14:28,509
want to do it and that there's enough

00:14:27,129 --> 00:14:30,339
because I think if all of us add a

00:14:28,509 --> 00:14:31,569
little bit of the pieces we can

00:14:30,339 --> 00:14:33,369
eventually build ourselves in the right

00:14:31,569 --> 00:14:34,600
direction but right now we've got a lot

00:14:33,369 --> 00:14:37,629
of fragmented efforts

00:14:34,600 --> 00:14:41,050
so with Zephyr we're basically trying to

00:14:37,629 --> 00:14:44,980
make sure one of the upstream projects

00:14:41,050 --> 00:14:46,869
has got a very clean story and for the

00:14:44,980 --> 00:14:48,939
last release we put out an SPD X file

00:14:46,869 --> 00:14:50,589
with it but it was generated from scan

00:14:48,939 --> 00:14:53,350
code it was not necessarily where it

00:14:50,589 --> 00:14:56,199
needs to be so it's an area to be

00:14:53,350 --> 00:14:57,910
improved when I looked at the data so

00:14:56,199 --> 00:14:59,350
we've got to clean the source up from

00:14:57,910 --> 00:15:00,970
that now when you're generating it each

00:14:59,350 --> 00:15:03,370
time in looking at it you can clean up

00:15:00,970 --> 00:15:05,410
the source which is good so for upstream

00:15:03,370 --> 00:15:07,509
projects there's one set of workflows

00:15:05,410 --> 00:15:10,449
which is to use something like the CI

00:15:07,509 --> 00:15:14,980
CDs see if it doesn't detect it and then

00:15:10,449 --> 00:15:18,790
work it for that that's one of the

00:15:14,980 --> 00:15:22,240
things we ran into egos generated RSP

00:15:18,790 --> 00:15:24,069
the X document for one of the opti repos

00:15:22,240 --> 00:15:26,949
but we don't have the experience to

00:15:24,069 --> 00:15:29,110
understand if it's right so sure the

00:15:26,949 --> 00:15:30,939
tools generated it but how do we know

00:15:29,110 --> 00:15:35,850
it's correct so I'm going to work with

00:15:30,939 --> 00:15:35,850
Kate's to review that and

00:15:36,280 --> 00:15:42,190
- can can you just put that sorry this

00:15:40,090 --> 00:15:45,690
is annoying that slide back up with the

00:15:42,190 --> 00:15:46,960
first slide with the list of tools sure

00:15:45,690 --> 00:15:49,600
sit

00:15:46,960 --> 00:15:51,490
I just I just want to put a little bit

00:15:49,600 --> 00:15:56,230
of a positive spin on this because I

00:15:51,490 --> 00:15:59,070
know I feel your pain it's hard but this

00:15:56,230 --> 00:16:01,840
is this is really amazing

00:15:59,070 --> 00:16:04,060
I've been in this space for a while and

00:16:01,840 --> 00:16:07,960
I've worked at a tool a commercial tool

00:16:04,060 --> 00:16:11,130
vendor or previously and there wasn't

00:16:07,960 --> 00:16:13,750
any of these options

00:16:11,130 --> 00:16:16,720
Pathology's been around the longest and

00:16:13,750 --> 00:16:18,880
so I think it's it's incredibly amazing

00:16:16,720 --> 00:16:20,590
the momentum that we've seen in the last

00:16:18,880 --> 00:16:22,780
couple of years and as Kate said we may

00:16:20,590 --> 00:16:26,050
not be there yet with like a full tool

00:16:22,780 --> 00:16:30,160
chain but this this is it can't even I

00:16:26,050 --> 00:16:32,560
can't begin to overemphasize enough you

00:16:30,160 --> 00:16:34,930
know how how encouraging this is and

00:16:32,560 --> 00:16:37,870
because I mean a few years ago I kind of

00:16:34,930 --> 00:16:40,240
me saying especially after I wasn't

00:16:37,870 --> 00:16:44,290
having to tow the commercial marketing

00:16:40,240 --> 00:16:45,400
line that that the developers this is a

00:16:44,290 --> 00:16:46,390
little bit contrary to what you said

00:16:45,400 --> 00:16:47,830
about don't want to do so I was like

00:16:46,390 --> 00:16:49,930
developers are gonna solve this problem

00:16:47,830 --> 00:16:53,860
because it needs to be automated at the

00:16:49,930 --> 00:16:56,350
build time and instead of sort of tools

00:16:53,860 --> 00:17:00,370
that are sort of tacked on afterwards

00:16:56,350 --> 00:17:01,810
with generally proprietary databases I

00:17:00,370 --> 00:17:03,360
mean there's different types of scanning

00:17:01,810 --> 00:17:05,949
and depends what you're looking for but

00:17:03,360 --> 00:17:08,439
so I think it's incredibly encouraging

00:17:05,949 --> 00:17:12,670
to see this and and I think the key

00:17:08,439 --> 00:17:14,530
thing is just now people applying the

00:17:12,670 --> 00:17:19,180
open-source collaborative way to this

00:17:14,530 --> 00:17:22,600
kind of work because it is while it's

00:17:19,180 --> 00:17:25,180
not particularly fun I've done it it's

00:17:22,600 --> 00:17:27,520
it is it gets massively easier the more

00:17:25,180 --> 00:17:28,600
you do it and and so you know there does

00:17:27,520 --> 00:17:30,850
need to be a little bit of that

00:17:28,600 --> 00:17:32,290
consistency and then and then of course

00:17:30,850 --> 00:17:33,070
sharing and coming up with sort of

00:17:32,290 --> 00:17:40,240
guidelines

00:17:33,070 --> 00:17:42,010
so I I believe that arm and Ti are

00:17:40,240 --> 00:17:44,620
certainly interested in Lenora members

00:17:42,010 --> 00:17:46,210
in this but is there anyone else in the

00:17:44,620 --> 00:17:49,660
room who has an interest another member

00:17:46,210 --> 00:17:52,480
company do we even have any other member

00:17:49,660 --> 00:17:55,140
companies in here maybe that's an

00:17:52,480 --> 00:18:02,950
indication of how interesting it is that

00:17:55,140 --> 00:18:04,330
not so good the interest usually comes

00:18:02,950 --> 00:18:07,930
out that and I'm not speaking for any

00:18:04,330 --> 00:18:11,350
company to be clear the interest comes

00:18:07,930 --> 00:18:14,440
out the after the fact usually it's kind

00:18:11,350 --> 00:18:15,940
of you know like these software Bill of

00:18:14,440 --> 00:18:18,040
Materials at Kate's talking about I mean

00:18:15,940 --> 00:18:20,350
usually what can happen is they're asked

00:18:18,040 --> 00:18:23,620
for at the commercial negotiation

00:18:20,350 --> 00:18:28,630
standpoint and you don't want to be

00:18:23,620 --> 00:18:31,170
answering that question then or not

00:18:28,630 --> 00:18:34,480
being able to answer it then so it's um

00:18:31,170 --> 00:18:36,880
you know the work is is sort of forward

00:18:34,480 --> 00:18:41,530
looking to make sure you're not caught

00:18:36,880 --> 00:18:43,030
with your pants down so to speak know

00:18:41,530 --> 00:18:44,620
what you're shipping because yeah cuz

00:18:43,030 --> 00:18:46,330
there's not I mean it's not gonna sound

00:18:44,620 --> 00:18:48,460
good if someone's if you're in a

00:18:46,330 --> 00:18:49,480
commercial setting and someone says okay

00:18:48,460 --> 00:18:51,640
great you know we really want to buy

00:18:49,480 --> 00:18:53,680
your product whatever it is and then but

00:18:51,640 --> 00:18:56,170
can you please tell me you know although

00:18:53,680 --> 00:19:00,400
the source you're using and if you

00:18:56,170 --> 00:19:03,610
stutter to answer that question that

00:19:00,400 --> 00:19:05,590
does not facilitate the rest of the

00:19:03,610 --> 00:19:07,960
negotiation and you know and then

00:19:05,590 --> 00:19:09,790
there's also of course the the M&A

00:19:07,960 --> 00:19:11,770
context as well which it becomes even

00:19:09,790 --> 00:19:15,580
more important and you know you can't do

00:19:11,770 --> 00:19:17,440
it in a hurry as you know I know

00:19:15,580 --> 00:19:22,350
Steve can put you on the spot for Debian

00:19:17,440 --> 00:19:22,350
and any related comments to this yeah

00:19:25,390 --> 00:19:29,410
well yeah

00:19:27,790 --> 00:19:32,390
[Music]

00:19:29,410 --> 00:19:35,780
so in Debian we've had we've long had an

00:19:32,390 --> 00:19:40,220
approach of both of mainly manual

00:19:35,780 --> 00:19:43,640
process for tracking licensing and

00:19:40,220 --> 00:19:47,360
copyrights on all of us stuff a few

00:19:43,640 --> 00:19:49,730
years ago there was an effort to start

00:19:47,360 --> 00:19:52,820
with machine readable copyright file

00:19:49,730 --> 00:19:59,630
which is described as Det v debian

00:19:52,820 --> 00:20:04,040
enhancement proposal but we're far from

00:19:59,630 --> 00:20:06,170
adopting that project wide one of Debian

00:20:04,040 --> 00:20:07,700
strengths is we have a lot of a lot of

00:20:06,170 --> 00:20:10,160
different people with lots of different

00:20:07,700 --> 00:20:12,860
ideas one of Debian's weaknesses is we

00:20:10,160 --> 00:20:16,570
have a lot of different ideas and not

00:20:12,860 --> 00:20:19,370
everybody necessarily agrees with it I

00:20:16,570 --> 00:20:23,510
get the impression that started about a

00:20:19,370 --> 00:20:26,990
similar time to SPD X and so there was

00:20:23,510 --> 00:20:29,870
some discussion when that was when yeah

00:20:26,990 --> 00:20:31,820
when our work was starting up about how

00:20:29,870 --> 00:20:33,500
to make the to make italy italy

00:20:31,820 --> 00:20:37,309
compatible and whether or not we should

00:20:33,500 --> 00:20:39,320
be using SPD x identifiers x' i believe

00:20:37,309 --> 00:20:41,240
that was basically agreed that it should

00:20:39,320 --> 00:20:43,970
happen but there's still a lot of work

00:20:41,240 --> 00:20:45,500
to go to go on yet actually what a lot

00:20:43,970 --> 00:20:48,170
of packages in debian are doing a

00:20:45,500 --> 00:20:50,870
running the automated tools and then

00:20:48,170 --> 00:20:53,179
doing a translation into the dep v

00:20:50,870 --> 00:20:55,490
format from SPD X and you can transfer

00:20:53,179 --> 00:20:57,950
the value of SPD X is you can translate

00:20:55,490 --> 00:21:01,220
it to other formats and be consistent

00:20:57,950 --> 00:21:02,960
the challenge and the reason that I

00:21:01,220 --> 00:21:05,870
speedy X started was actually it started

00:21:02,960 --> 00:21:08,000
from Dec 5 and the trouble was it needed

00:21:05,870 --> 00:21:10,520
to be something that could be signed at

00:21:08,000 --> 00:21:11,809
the file level and in order for the

00:21:10,520 --> 00:21:15,440
trust to know what has been changed out

00:21:11,809 --> 00:21:16,940
from underneath it and so Debbie and I

00:21:15,440 --> 00:21:19,520
think is reasonably compatible and

00:21:16,940 --> 00:21:22,340
recently good spot to continue some more

00:21:19,520 --> 00:21:25,040
working and then yeah there's another

00:21:22,340 --> 00:21:27,740
tool that we have which is far from

00:21:25,040 --> 00:21:30,320
complete which is license check in Deb

00:21:27,740 --> 00:21:32,960
you know under the copyright review

00:21:30,320 --> 00:21:35,090
tools I think ok fine that I put them

00:21:32,960 --> 00:21:36,410
there because I know there's some some

00:21:35,090 --> 00:21:38,900
correlation the other

00:21:36,410 --> 00:21:40,190
that's their is turn for deaf starting

00:21:38,900 --> 00:21:43,700
to figure out how what the contents of

00:21:40,190 --> 00:21:44,720
containers are and so like I say these

00:21:43,700 --> 00:21:46,370
are some of the problems were having to

00:21:44,720 --> 00:21:47,660
deal with now in the whole understand

00:21:46,370 --> 00:21:53,030
what you've got before you ship it or

00:21:47,660 --> 00:21:56,360
use it and VM where basically has been

00:21:53,030 --> 00:21:58,820
doing some work on pulling apart the

00:21:56,360 --> 00:22:01,190
layers and documenting the layers of

00:21:58,820 --> 00:22:03,080
what's actually running and using the

00:22:01,190 --> 00:22:06,110
SPD X is the direction they're going

00:22:03,080 --> 00:22:08,960
with that - there's another tool that

00:22:06,110 --> 00:22:10,730
has been getting a lot of use in Debian

00:22:08,960 --> 00:22:13,010
actually for other purposes but it's

00:22:10,730 --> 00:22:17,030
also found some useful stuff here called

00:22:13,010 --> 00:22:19,520
differ scope which has a it's basically

00:22:17,030 --> 00:22:22,490
it started off as a magic tool for

00:22:19,520 --> 00:22:24,050
dipping the world dipping everything so

00:22:22,490 --> 00:22:27,110
your source packages your binary

00:22:24,050 --> 00:22:30,490
packages one thing that started showing

00:22:27,110 --> 00:22:32,840
up was as people started digging into

00:22:30,490 --> 00:22:36,220
graphics formats and that kind of thing

00:22:32,840 --> 00:22:39,530
is people have now started finding

00:22:36,220 --> 00:22:42,200
embedded comments in PNG files and

00:22:39,530 --> 00:22:44,360
whatever which will contain licensing

00:22:42,200 --> 00:22:46,730
information or in some cases if you're

00:22:44,360 --> 00:22:49,520
unlucky as a packager really vague

00:22:46,730 --> 00:22:54,260
references to licensing with no clues as

00:22:49,520 --> 00:22:56,150
to where to go next if people are

00:22:54,260 --> 00:22:57,980
interested in this lovely license is

00:22:56,150 --> 00:22:59,300
interesting licenses references we find

00:22:57,980 --> 00:23:00,770
and that makes it so hard for the

00:22:59,300 --> 00:23:02,780
tooling to work on the automation side

00:23:00,770 --> 00:23:04,310
there's a couple of examples we'll go

00:23:02,780 --> 00:23:06,830
through this afternoon and the talk on

00:23:04,310 --> 00:23:08,420
that but anything that's written

00:23:06,830 --> 00:23:10,640
manually or anything that's written with

00:23:08,420 --> 00:23:12,710
freeform text is very hard to start

00:23:10,640 --> 00:23:15,230
automating and there's you know a lot of

00:23:12,710 --> 00:23:17,450
contrary wait so this is part of why if

00:23:15,230 --> 00:23:19,550
you can run something in the CI CD flow

00:23:17,450 --> 00:23:20,960
and you see it wrong and you look at it

00:23:19,550 --> 00:23:22,970
and you inspect it and you can just fix

00:23:20,960 --> 00:23:25,100
it in the source that makes it easier

00:23:22,970 --> 00:23:27,050
for everyone down the road okay we need

00:23:25,100 --> 00:23:29,630
to be able to go grep effectively and

00:23:27,050 --> 00:23:32,030
get this stuff but the tooling right now

00:23:29,630 --> 00:23:34,550
has to deal with effectively machine

00:23:32,030 --> 00:23:36,830
learning in some cases when you've

00:23:34,550 --> 00:23:40,400
generated these assuming we get all that

00:23:36,830 --> 00:23:42,440
twenty how will a community get to the

00:23:40,400 --> 00:23:44,330
point that it trusts these definitions

00:23:42,440 --> 00:23:48,440
that are in all these packages

00:23:44,330 --> 00:23:51,230
I think the best source of trusting the

00:23:48,440 --> 00:23:52,580
packages and the definitions is that as

00:23:51,230 --> 00:23:54,260
part of each release that a community

00:23:52,580 --> 00:23:56,059
puts out they put out the document and

00:23:54,260 --> 00:23:57,860
then everyone knows that if they see an

00:23:56,059 --> 00:23:58,909
issue with it they just open it they say

00:23:57,860 --> 00:24:00,529
they see a problem they can open an

00:23:58,909 --> 00:24:01,640
issue against the SPD X document the

00:24:00,529 --> 00:24:04,070
same way they'd open an issue against

00:24:01,640 --> 00:24:06,080
source code right so it's more over time

00:24:04,070 --> 00:24:07,730
people will realize that they are stable

00:24:06,080 --> 00:24:10,279
and accurate and they can be used I

00:24:07,730 --> 00:24:11,899
think that's probably the best path here

00:24:10,279 --> 00:24:13,610
right now it's all been third parties

00:24:11,899 --> 00:24:15,350
auditing it after the fact and if we can

00:24:13,610 --> 00:24:17,000
move these things upstream and get it

00:24:15,350 --> 00:24:18,139
easy for the projects to do it we're

00:24:17,000 --> 00:24:20,720
starting to work towards it for the

00:24:18,139 --> 00:24:21,500
linux kernel which is a big gulp and

00:24:20,720 --> 00:24:24,590
once we've learned all the lessons

00:24:21,500 --> 00:24:27,710
learned there I you know I think it'll

00:24:24,590 --> 00:24:31,669
be served it'll be a good step and so

00:24:27,710 --> 00:24:33,769
other projects so a question so I I saw

00:24:31,669 --> 00:24:36,110
this happen a number of years ago as a

00:24:33,769 --> 00:24:38,269
part of the the Yocto project when they

00:24:36,110 --> 00:24:39,350
went through a whole process of wanting

00:24:38,269 --> 00:24:42,799
to understand what the open source

00:24:39,350 --> 00:24:45,380
licenses were in a binary that was being

00:24:42,799 --> 00:24:47,630
delivered as a part of that does that

00:24:45,380 --> 00:24:49,159
link into what we've got here and I know

00:24:47,630 --> 00:24:50,840
one of the interesting things that they

00:24:49,159 --> 00:24:52,669
were trying to do with with yatza was to

00:24:50,840 --> 00:24:54,679
give you the ability to whitelist and

00:24:52,669 --> 00:24:56,960
blacklist so if you wanted to produce

00:24:54,679 --> 00:24:58,970
something without GPR three code in it

00:24:56,960 --> 00:25:00,409
you could put it in a blacklist and then

00:24:58,970 --> 00:25:02,510
that the build process would actually

00:25:00,409 --> 00:25:05,649
tell you if it was pulling in anything

00:25:02,510 --> 00:25:09,620
that had GPL three I'm attached to it

00:25:05,649 --> 00:25:11,510
yeah I mean that as a tool seems to me

00:25:09,620 --> 00:25:13,549
to add value from it from a commercial

00:25:11,510 --> 00:25:15,889
vendor standpoint what Yocto did was

00:25:13,549 --> 00:25:17,750
they actually took one of the scanners

00:25:15,889 --> 00:25:20,029
out of ethology and they basically

00:25:17,750 --> 00:25:22,970
pulled it into the build flows and it

00:25:20,029 --> 00:25:24,230
was Beth did the work and then we're

00:25:22,970 --> 00:25:26,269
generating out some of the information

00:25:24,230 --> 00:25:27,559
so that could do this filtering and that

00:25:26,269 --> 00:25:29,929
was a very early prototype of where I

00:25:27,559 --> 00:25:32,029
think we need to go that hasn't been

00:25:29,929 --> 00:25:33,320
really kept up a lot in the interim

00:25:32,029 --> 00:25:35,419
years and we need to basically

00:25:33,320 --> 00:25:36,769
revitalize that's one of the directions

00:25:35,419 --> 00:25:39,230
I think from the October side we need to

00:25:36,769 --> 00:25:42,409
work on is revitalizing that and getting

00:25:39,230 --> 00:25:43,480
it so we can have a set of documents

00:25:42,409 --> 00:25:45,380
that we're all trusting

00:25:43,480 --> 00:25:46,850
coming out of the projects if they

00:25:45,380 --> 00:25:50,179
aren't all that available upstream

00:25:46,850 --> 00:25:52,820
initially so it seems like there's a big

00:25:50,179 --> 00:25:54,200
job of work to do to retrofit this to

00:25:52,820 --> 00:25:55,890
all of the open source software they

00:25:54,200 --> 00:25:58,450
yesterday

00:25:55,890 --> 00:26:01,510
thus that's one part of the problem how

00:25:58,450 --> 00:26:03,309
do we how do we evangelize this to you

00:26:01,510 --> 00:26:05,140
no joke blogs in his bedroom who starts

00:26:03,309 --> 00:26:07,929
up at the next open source project that

00:26:05,140 --> 00:26:09,490
when when he tries to like you know the

00:26:07,929 --> 00:26:12,490
auto tools tell you you don't have a

00:26:09,490 --> 00:26:14,679
readme file right should can we make

00:26:12,490 --> 00:26:16,660
this part of that the tooling process

00:26:14,679 --> 00:26:24,400
for open source that it tells you when

00:26:16,660 --> 00:26:25,990
you don't have this stuff in implemented

00:26:24,400 --> 00:26:28,299
that like choose a license thing some

00:26:25,990 --> 00:26:30,520
years ago and if they had some stats on

00:26:28,299 --> 00:26:33,010
the uptick of number of projects I had

00:26:30,520 --> 00:26:37,330
licenses when that got implemented it

00:26:33,010 --> 00:26:39,700
kind of went like this and the next step

00:26:37,330 --> 00:26:42,429
would be if they could implement a tool

00:26:39,700 --> 00:26:46,210
that automatically put an SPX identifier

00:26:42,429 --> 00:26:47,830
in every new file I mean that only works

00:26:46,210 --> 00:26:49,150
for new repos though and then you gotta

00:26:47,830 --> 00:26:51,250
be really careful that you're not

00:26:49,150 --> 00:26:54,120
creating a new file with someone else's

00:26:51,250 --> 00:26:57,400
code it's also important to note that

00:26:54,120 --> 00:27:00,039
github has in their licenses API has

00:26:57,400 --> 00:27:01,570
adopted the SPX identifier right so we

00:27:00,039 --> 00:27:03,490
have some of that standardization

00:27:01,570 --> 00:27:05,049
starting to creep in now so when you see

00:27:03,490 --> 00:27:07,780
an identifier on the top of a github

00:27:05,049 --> 00:27:14,620
repo that it's an SPT X identifier but I

00:27:07,780 --> 00:27:15,940
mean education the other the other thing

00:27:14,620 --> 00:27:19,750
that was we had a google Summer of Code

00:27:15,940 --> 00:27:21,970
student this summer and they went in to

00:27:19,750 --> 00:27:24,400
generate an SPD X dot from being pointed

00:27:21,970 --> 00:27:26,380
to a github repo and I think if people

00:27:24,400 --> 00:27:28,780
wanted to help work on building up that

00:27:26,380 --> 00:27:30,880
work and reinforcing that work that

00:27:28,780 --> 00:27:32,740
could help move it because that if we

00:27:30,880 --> 00:27:33,700
can take a closer prototype to github we

00:27:32,740 --> 00:27:36,210
could maybe see if they could get

00:27:33,700 --> 00:27:38,919
instantiate into their tooling sure

00:27:36,210 --> 00:27:40,299
other thing is don't use software that

00:27:38,919 --> 00:27:41,980
doesn't have a license I mean which you

00:27:40,299 --> 00:27:44,530
shouldn't be anyway but like call it out

00:27:41,980 --> 00:27:47,530
I mean I was joking earlier for another

00:27:44,530 --> 00:27:49,480
presentation I did last week I was

00:27:47,530 --> 00:27:51,789
trying to find some examples and my

00:27:49,480 --> 00:27:56,260
github account is just like the whole

00:27:51,789 --> 00:27:57,760
history isn't he husky him sometimes I

00:27:56,260 --> 00:27:59,740
just get like I'm just mean a pull

00:27:57,760 --> 00:28:02,350
request

00:27:59,740 --> 00:28:04,600
so yeah it was it was a major problem

00:28:02,350 --> 00:28:07,720
that get home for a long time did not

00:28:04,600 --> 00:28:09,880
bother with licensing and of course a

00:28:07,720 --> 00:28:12,070
vast majority it seemed to me anyway of

00:28:09,880 --> 00:28:13,960
people uploading didn't think they

00:28:12,070 --> 00:28:16,000
needed to put a license on stuff it made

00:28:13,960 --> 00:28:17,980
a huge improvement now they're actually

00:28:16,000 --> 00:28:21,130
pushing for it because a lot of it isn't

00:28:17,980 --> 00:28:22,390
necessarily people don't want to license

00:28:21,130 --> 00:28:24,940
stuff properly it's just they didn't

00:28:22,390 --> 00:28:26,890
think about it exactly it's a here is my

00:28:24,940 --> 00:28:29,620
here is my bit of free software well

00:28:26,890 --> 00:28:31,929
it's probably free men it's not my

00:28:29,620 --> 00:28:33,580
problem to put a license on it but then

00:28:31,929 --> 00:28:37,000
multiply that or by thousands of

00:28:33,580 --> 00:28:38,590
projects and you know we see and then of

00:28:37,000 --> 00:28:41,500
course the other fun thing you get of

00:28:38,590 --> 00:28:43,539
the joke licenses or the amount of

00:28:41,500 --> 00:28:47,919
discussion we've had in Debian about

00:28:43,539 --> 00:28:49,990
things like the WTF license and you know

00:28:47,919 --> 00:28:53,549
and buy me a beer the post card where

00:28:49,990 --> 00:28:53,549
whatever oh please god no

00:28:55,640 --> 00:28:59,120
[Laughter]

00:29:00,640 --> 00:29:10,029
yes I agree I heard someone this is not

00:29:04,360 --> 00:29:12,039
my joke licenses are for joke code and I

00:29:10,029 --> 00:29:15,610
thought that is brilliant like if you

00:29:12,039 --> 00:29:20,950
are you know serious about things then

00:29:15,610 --> 00:29:22,270
you should use a license that's people

00:29:20,950 --> 00:29:25,929
are familiar with and I mean I make it

00:29:22,270 --> 00:29:27,429
easy I I saw a discussion recently I

00:29:25,929 --> 00:29:29,860
haven't had a chance to comment on it

00:29:27,429 --> 00:29:33,070
this always comes back around about the

00:29:29,860 --> 00:29:35,799
was it JSON license of do you know you

00:29:33,070 --> 00:29:38,919
can only do good you can't do evil again

00:29:35,799 --> 00:29:42,940
I'm not your lawyer but I don't consider

00:29:38,919 --> 00:29:45,909
that a legal condition it doesn't have

00:29:42,940 --> 00:29:48,640
the right language I think that's to me

00:29:45,909 --> 00:29:51,070
I just like ignore that line and the

00:29:48,640 --> 00:29:53,409
beer we're license is a suggestion

00:29:51,070 --> 00:29:55,000
there's no provided that there's no on

00:29:53,409 --> 00:29:58,090
condition of you know I mean that's

00:29:55,000 --> 00:30:00,880
obviously on the US so I think there's I

00:29:58,090 --> 00:30:02,409
think there's just a waste of time

00:30:00,880 --> 00:30:04,149
obviously on people when they write

00:30:02,409 --> 00:30:06,520
those licenses I wish I could find the

00:30:04,149 --> 00:30:06,970
one that had like disclaimer that

00:30:06,520 --> 00:30:08,770
included

00:30:06,970 --> 00:30:11,620
something about loss of hair that did

00:30:08,770 --> 00:30:13,929
actually kind of make me laugh but yeah

00:30:11,620 --> 00:30:17,740
I mean it's also on the flip side though

00:30:13,929 --> 00:30:19,390
people I think sometimes just yeah you

00:30:17,740 --> 00:30:22,059
know kind of waste unnecessary time on

00:30:19,390 --> 00:30:23,890
that sure so as part of the Debian new

00:30:22,059 --> 00:30:26,860
member process so if you want to become

00:30:23,890 --> 00:30:29,049
a Debian developer there is a part about

00:30:26,860 --> 00:30:32,710
analyzing licenses and we have some

00:30:29,049 --> 00:30:34,570
particularly egregious license examples

00:30:32,710 --> 00:30:36,970
or you know for people to pick a part

00:30:34,570 --> 00:30:39,400
and say why is it's not free and some of

00:30:36,970 --> 00:30:42,070
them are so obvious some of them are not

00:30:39,400 --> 00:30:43,750
obvious and the amount of discussion the

00:30:42,070 --> 00:30:46,030
amount of time that gets wasted

00:30:43,750 --> 00:30:48,309
instead of doing really good engineering

00:30:46,030 --> 00:30:50,409
or you know in terms of fixing bugs and

00:30:48,309 --> 00:30:52,539
the people especially coming up with the

00:30:50,409 --> 00:30:55,059
joke licenses who think oh yet this this

00:30:52,539 --> 00:30:56,380
is fine so please don't just pick a

00:30:55,059 --> 00:30:58,809
license that if somebody else has

00:30:56,380 --> 00:31:02,559
already done there's already too many

00:30:58,809 --> 00:31:04,539
the more time you spend trying to work

00:31:02,559 --> 00:31:06,309
out can you use this piece of software

00:31:04,539 --> 00:31:08,620
with this piece of software in the same

00:31:06,309 --> 00:31:16,860
package just just don't they could pick

00:31:08,620 --> 00:31:19,539
an easy license definitely please no CLA

00:31:16,860 --> 00:31:22,780
that's that's an education point though

00:31:19,539 --> 00:31:25,120
surely I mean me me as a developer with

00:31:22,780 --> 00:31:28,179
my first ever bit of open source code I

00:31:25,120 --> 00:31:30,940
don't know what licenses ah no one's

00:31:28,179 --> 00:31:33,580
taught me about this stuff it feels like

00:31:30,940 --> 00:31:35,409
a joke to me that I'm putting this stuff

00:31:33,580 --> 00:31:37,330
up there and I'm expected to put some

00:31:35,409 --> 00:31:38,830
kind of a legal framework around the

00:31:37,330 --> 00:31:41,710
code that I'm putting up I am NOT a

00:31:38,830 --> 00:31:43,210
lawyer but I've created this code you

00:31:41,710 --> 00:31:46,600
know it could be your keynote this

00:31:43,210 --> 00:31:48,250
morning yeah I know I love it but it's

00:31:46,600 --> 00:31:49,809
it's because people don't understand the

00:31:48,250 --> 00:31:50,919
value of the license that they're

00:31:49,809 --> 00:31:52,809
putting up with a software so I think

00:31:50,919 --> 00:31:54,460
the tooling putting that stuff around

00:31:52,809 --> 00:31:56,530
there and actually putting something in

00:31:54,460 --> 00:31:59,020
front of you that says okay so you've

00:31:56,530 --> 00:32:01,270
created a license that doesn't match any

00:31:59,020 --> 00:32:03,640
of the the hashes of the licenses that I

00:32:01,270 --> 00:32:05,020
know why are you doing that because

00:32:03,640 --> 00:32:07,150
you're going to create this these

00:32:05,020 --> 00:32:08,620
problems and just put a little bit of a

00:32:07,150 --> 00:32:10,210
gentle push back so actually by doing

00:32:08,620 --> 00:32:11,830
this you are going to be creating

00:32:10,210 --> 00:32:15,159
problems for your code ever making it

00:32:11,830 --> 00:32:17,020
into anything real yeah definitely I was

00:32:15,159 --> 00:32:18,760
a github at least I've started down this

00:32:17,020 --> 00:32:20,070
route by at least getting people to

00:32:18,760 --> 00:32:22,440
think about it actually

00:32:20,070 --> 00:32:24,230
if we can convince them to have I

00:32:22,440 --> 00:32:26,610
haven't looked in a while

00:32:24,230 --> 00:32:28,860
is there anything is there any guidance

00:32:26,610 --> 00:32:30,840
from get help about which license you

00:32:28,860 --> 00:32:32,250
should pick to go with your code because

00:32:30,840 --> 00:32:39,080
that would be an awesome thing to have

00:32:32,250 --> 00:32:39,080
there's a lot of politics on that one so

00:32:40,160 --> 00:32:50,220
doing a default license if you didn't

00:32:43,380 --> 00:32:54,300
put a license some years ago actually it

00:32:50,220 --> 00:32:56,040
was you know they're like we'll make

00:32:54,300 --> 00:32:57,870
sure to consult with a community when we

00:32:56,040 --> 00:33:00,270
do that and someone was like which

00:32:57,870 --> 00:33:02,010
community I mean they didn't really

00:33:00,270 --> 00:33:04,230
consult with the community when they did

00:33:02,010 --> 00:33:05,520
the license chooser thing but I mean

00:33:04,230 --> 00:33:08,220
everyone was just glad they did it but

00:33:05,520 --> 00:33:09,720
it was wondering why so I mean you know

00:33:08,220 --> 00:33:12,150
who knows maybe that'll change now that

00:33:09,720 --> 00:33:16,500
Microsoft I can't believe I just came

00:33:12,150 --> 00:33:18,060
out of my mouth but but right right they

00:33:16,500 --> 00:33:20,070
and they and they says well you know

00:33:18,060 --> 00:33:21,780
they have some really good lawyers

00:33:20,070 --> 00:33:24,870
actually who care about that and are

00:33:21,780 --> 00:33:26,130
quite knowledgeable and but that's

00:33:24,870 --> 00:33:27,720
really tricky I mean you know they

00:33:26,130 --> 00:33:29,070
rewrote their Terms of Service I haven't

00:33:27,720 --> 00:33:31,320
looked and recently I did a whole

00:33:29,070 --> 00:33:33,930
podcast ripping this part like last

00:33:31,320 --> 00:33:37,500
summer or so and they tried to kind of

00:33:33,930 --> 00:33:40,530
make a default default inbound license

00:33:37,500 --> 00:33:44,010
which is like legally not possible in

00:33:40,530 --> 00:33:45,930
terms of kinds in terms of like which

00:33:44,010 --> 00:33:49,230
parties can sort of be bound by those

00:33:45,930 --> 00:33:50,970
terms so yeah I mean I think it's it

00:33:49,230 --> 00:33:53,880
always dawn comes down to an education

00:33:50,970 --> 00:33:56,160
point and you know there's some

00:33:53,880 --> 00:33:59,670
relatively easy advice I mean pick a

00:33:56,160 --> 00:34:01,710
license that's OSI approved that narrows

00:33:59,670 --> 00:34:04,470
your options right there and that cuts

00:34:01,710 --> 00:34:08,310
out all the you know whatever silly

00:34:04,470 --> 00:34:10,440
things use a license that's going to be

00:34:08,310 --> 00:34:13,170
compatible for the use case that you

00:34:10,440 --> 00:34:16,080
want people to use the software with so

00:34:13,170 --> 00:34:17,820
think about your end user and if it's

00:34:16,080 --> 00:34:19,290
you know something that's gonna be

00:34:17,820 --> 00:34:21,240
combined with the linic you know with

00:34:19,290 --> 00:34:22,650
the Linux kernel then make it either GPL

00:34:21,240 --> 00:34:24,420
two or something that's compatible with

00:34:22,650 --> 00:34:25,830
GPL two and if it's something you know I

00:34:24,420 --> 00:34:26,610
mean it's not that hard you can

00:34:25,830 --> 00:34:28,200
sometimes kind of

00:34:26,610 --> 00:34:31,440
get away with looking at like where will

00:34:28,200 --> 00:34:34,850
this be used kind of kind of mimic that

00:34:31,440 --> 00:34:39,630
I mean I think those are the two biggest

00:34:34,850 --> 00:34:41,400
you know starting points so to get the

00:34:39,630 --> 00:34:43,680
whole ecosystem I think we've got a

00:34:41,400 --> 00:34:45,150
certain degree of people consolidating

00:34:43,680 --> 00:34:49,410
around the license list at least using

00:34:45,150 --> 00:34:50,970
those license identifiers but what we'd

00:34:49,410 --> 00:34:52,950
be good is we could start getting more

00:34:50,970 --> 00:34:54,960
and more examples of SP DX documents out

00:34:52,950 --> 00:34:59,730
there for people to write tooling from

00:34:54,960 --> 00:35:04,110
to transform the formats to review and

00:34:59,730 --> 00:35:06,870
take it to the next step so in terms of

00:35:04,110 --> 00:35:09,000
getting this going in a direction here

00:35:06,870 --> 00:35:10,980
from the literal perspective does it

00:35:09,000 --> 00:35:12,810
make sense that for the Lenora projects

00:35:10,980 --> 00:35:16,200
that at least they put out sp DX docks

00:35:12,810 --> 00:35:18,530
with their releases and what's necessary

00:35:16,200 --> 00:35:18,530
to do that

00:35:32,380 --> 00:35:40,180
you know our color base we have added a

00:35:38,000 --> 00:35:44,270
SP DX lines to each and every file now

00:35:40,180 --> 00:35:46,040
which was a fun exercise but it's there

00:35:44,270 --> 00:35:47,960
now so we asked need the tools now to

00:35:46,040 --> 00:35:50,810
choose what what kind of tools should we

00:35:47,960 --> 00:35:52,520
use when should we produce the SPD X

00:35:50,810 --> 00:35:54,410
documents that's the question for us and

00:35:52,520 --> 00:35:57,290
for us it seems like you said release

00:35:54,410 --> 00:36:00,170
time seems more natural if it's release

00:35:57,290 --> 00:36:03,800
time then we can deal with scan code for

00:36:00,170 --> 00:36:09,890
example where we need to manually look

00:36:03,800 --> 00:36:13,310
at a difficulty do a scan code every

00:36:09,890 --> 00:36:16,640
every built and we build several times

00:36:13,310 --> 00:36:18,800
every day so that it's a file then you

00:36:16,640 --> 00:36:21,650
dip it sure I mean if we could get it

00:36:18,800 --> 00:36:23,690
integrated into like automated bills and

00:36:21,650 --> 00:36:26,180
so on and just like check patch today

00:36:23,690 --> 00:36:29,450
example and just run that then it would

00:36:26,180 --> 00:36:31,849
be fine you said there was a google

00:36:29,450 --> 00:36:35,720
Summer of Code project looking at github

00:36:31,849 --> 00:36:37,520
well op T is in github so so it might be

00:36:35,720 --> 00:36:39,140
possible just to trigger it on the on

00:36:37,520 --> 00:36:41,089
the skin like you say I think you can

00:36:39,140 --> 00:36:42,530
run scan codes fairly quick to run and

00:36:41,089 --> 00:36:44,869
certainly I was part of a check patch

00:36:42,530 --> 00:36:47,300
you could basically scan what your

00:36:44,869 --> 00:36:49,550
before you do your build and before you

00:36:47,300 --> 00:36:50,720
accept the patch in diff it's that

00:36:49,550 --> 00:36:51,950
farther see if there's a thing has

00:36:50,720 --> 00:36:54,410
changed on the licensing if nothing's

00:36:51,950 --> 00:36:57,050
changed on the licensing or this new new

00:36:54,410 --> 00:36:58,400
file introduced let it go in and that

00:36:57,050 --> 00:37:03,859
way you know you're coherent at the end

00:36:58,400 --> 00:37:05,630
of it yeah I think that's your probably

00:37:03,859 --> 00:37:07,160
be possible to do already today using

00:37:05,630 --> 00:37:08,869
Travis or shippable or something else

00:37:07,160 --> 00:37:10,369
because you can use whatever tool you

00:37:08,869 --> 00:37:12,859
would like right and then you could just

00:37:10,369 --> 00:37:14,270
yeah make it part of - yeah just make it

00:37:12,859 --> 00:37:15,589
part of every build and then when it

00:37:14,270 --> 00:37:18,829
comes to release time you're done you

00:37:15,589 --> 00:37:19,790
don't have to do a large lift yeah and I

00:37:18,829 --> 00:37:21,140
think that's where we want the whole

00:37:19,790 --> 00:37:23,240
ecosystem to go but we need to get the

00:37:21,140 --> 00:37:24,410
tooling so you know the experiments you

00:37:23,240 --> 00:37:26,119
do with the tooling to pull that

00:37:24,410 --> 00:37:28,790
together I think would be good use case

00:37:26,119 --> 00:37:30,410
to point other people - yeah usually if

00:37:28,790 --> 00:37:32,990
you did right away you don't see the

00:37:30,410 --> 00:37:34,280
issue some units if you fight the dude

00:37:32,990 --> 00:37:36,690
once a year then you have a bunch of

00:37:34,280 --> 00:37:39,000
issues that you need every time so

00:37:36,690 --> 00:37:40,410
yeah like I say we're you know looking

00:37:39,000 --> 00:37:42,420
at slowly surely working in the Curt the

00:37:40,410 --> 00:37:44,160
Linux kernel we're cleaning up the

00:37:42,420 --> 00:37:45,210
headers in it so we can actually start

00:37:44,160 --> 00:37:49,470
to look at generating this stuff

00:37:45,210 --> 00:37:51,000
automatically to but and learn more

00:37:49,470 --> 00:37:52,109
about that at two o'clock today if you

00:37:51,000 --> 00:37:54,599
are interested you late and I'll be

00:37:52,109 --> 00:37:55,799
talking about that one some of the

00:37:54,599 --> 00:37:58,530
cleanup that's been going on there and

00:37:55,799 --> 00:38:01,140
that's about sixty thousand files with

00:37:58,530 --> 00:38:04,500
26 years of history so if we can manage

00:38:01,140 --> 00:38:07,470
to succeed there I'm think it'll be a

00:38:04,500 --> 00:38:08,700
good proof point for the industry but at

00:38:07,470 --> 00:38:10,859
the a link found a ssin we're already

00:38:08,700 --> 00:38:13,109
doing scans for some of our projects and

00:38:10,859 --> 00:38:16,079
looking at trying to pull together SP DX

00:38:13,109 --> 00:38:17,970
Doc's will be able to share Linux is

00:38:16,079 --> 00:38:20,309
such a big thing the other projects are

00:38:17,970 --> 00:38:22,500
smaller is there visible evidence of

00:38:20,309 --> 00:38:24,329
this document being put in those now

00:38:22,500 --> 00:38:25,950
already oh well if you actually go look

00:38:24,329 --> 00:38:27,210
at this effort we're put I think we just

00:38:25,950 --> 00:38:29,099
put it in the last release of Zephyr

00:38:27,210 --> 00:38:30,299
mind you when I looked at the document I

00:38:29,099 --> 00:38:32,849
wasn't happy and I'm gonna be having

00:38:30,299 --> 00:38:35,339
opening issues about it but at least

00:38:32,849 --> 00:38:39,799
it's starting and I wanna get Zephyr to

00:38:35,339 --> 00:38:59,640
be a best practice as well okay oh

00:38:39,799 --> 00:39:01,289
they're table stakes and in developers

00:38:59,640 --> 00:39:05,220
have been quite happy when I've told

00:39:01,289 --> 00:39:06,839
them and again I'm not its it because

00:39:05,220 --> 00:39:13,230
not everybody would agree this but you

00:39:06,839 --> 00:39:17,730
know like if you're under license and

00:39:13,230 --> 00:39:19,680
BSD it's still a significant block of

00:39:17,730 --> 00:39:22,140
text that generally be put in every file

00:39:19,680 --> 00:39:24,510
and and so so they were quite happy when

00:39:22,140 --> 00:39:26,339
I said you don't need to put the whole

00:39:24,510 --> 00:39:29,160
block in every file just put the SPX

00:39:26,339 --> 00:39:31,650
identifier put the whole license in the

00:39:29,160 --> 00:39:35,069
top directory and then we also added a

00:39:31,650 --> 00:39:36,569
comment saying it kind of even

00:39:35,069 --> 00:39:38,880
explaining that just to be crystal clear

00:39:36,569 --> 00:39:41,579
and that's actually publicly documented

00:39:38,880 --> 00:39:45,950
in the reuse guidelines as the best

00:39:41,579 --> 00:39:47,460
practices to what to follow and

00:39:45,950 --> 00:39:49,410
realistically if you've got well

00:39:47,460 --> 00:39:50,480
one-line identifiers in each file you

00:39:49,410 --> 00:39:52,190
can do a grep

00:39:50,480 --> 00:39:53,480
and make sure you've got let's mix it

00:39:52,190 --> 00:39:55,400
and then you know you grab it and then

00:39:53,480 --> 00:39:59,240
you dip it it really shouldn't be that

00:39:55,400 --> 00:40:03,829
hard I have a question right to that

00:39:59,240 --> 00:40:06,770
well in some cases we import files from

00:40:03,829 --> 00:40:08,390
our open source projects what is the

00:40:06,770 --> 00:40:10,760
best advice to do in that case when it

00:40:08,390 --> 00:40:14,660
comes to adding less PDX slices just do

00:40:10,760 --> 00:40:16,579
it or so we're dealing with this in

00:40:14,660 --> 00:40:20,240
Zephyr and what we did there and Zephyr

00:40:16,579 --> 00:40:21,799
as we put in an X directly and if we are

00:40:20,240 --> 00:40:23,089
incorporating so that we can take

00:40:21,799 --> 00:40:24,950
updates we just leave it all in the X

00:40:23,089 --> 00:40:27,859
directory and we documented in the X

00:40:24,950 --> 00:40:28,700
directory what the licensing is and so

00:40:27,859 --> 00:40:31,250
that we can pull it from that

00:40:28,700 --> 00:40:32,510
perspective but if we open the if like

00:40:31,250 --> 00:40:33,680
say if it's code that's being developed

00:40:32,510 --> 00:40:35,869
by the project we make sure there's an

00:40:33,680 --> 00:40:37,940
identifier and it's in the main trees

00:40:35,869 --> 00:40:39,470
yeah and obviously if you are adding it

00:40:37,940 --> 00:40:41,510
identifiers to code that you're

00:40:39,470 --> 00:40:43,720
importing push those changes back to the

00:40:41,510 --> 00:41:03,230
people who you're importing it from

00:40:43,720 --> 00:41:05,420
that'll be the best somebody tried

00:41:03,230 --> 00:41:11,930
pulling together something like system

00:41:05,420 --> 00:41:16,700
image using this stuff as a actually

00:41:11,930 --> 00:41:19,490
advertising thing so last year for font

00:41:16,700 --> 00:41:21,410
stamp on the prior year

00:41:19,490 --> 00:41:23,450
Thomas clarkster went through the entire

00:41:21,410 --> 00:41:26,420
Debian repo and generated SPD X Files

00:41:23,450 --> 00:41:29,020
using pathology and then we redid the

00:41:26,420 --> 00:41:32,869
exercise first to create a system image

00:41:29,020 --> 00:41:34,579
we don't have and we and documenting how

00:41:32,869 --> 00:41:35,690
system images should be formed is

00:41:34,579 --> 00:41:37,130
something I think when we get more

00:41:35,690 --> 00:41:38,390
people playing in the sandbox will come

00:41:37,130 --> 00:41:40,640
up with the rules we all are comfortable

00:41:38,390 --> 00:41:42,319
with I'm comfortable that the

00:41:40,640 --> 00:41:44,030
specification can handle it

00:41:42,319 --> 00:41:45,410
but what the best practices people feel

00:41:44,030 --> 00:41:47,210
comfortable with I think we want to have

00:41:45,410 --> 00:41:49,579
more people working with system images

00:41:47,210 --> 00:41:51,290
like yeah that's the process the angle

00:41:49,579 --> 00:41:53,960
of the problem I came at it from from

00:41:51,290 --> 00:41:55,280
Ubuntu okay is that you have to build up

00:41:53,960 --> 00:41:56,390
an image and you have your binaries and

00:41:55,280 --> 00:41:58,430
you want to link it back to your sources

00:41:56,390 --> 00:42:00,380
and you can represent that the question

00:41:58,430 --> 00:42:02,599
is the best way and what way people are

00:42:00,380 --> 00:42:04,239
comfortable composing things together is

00:42:02,599 --> 00:42:07,989
something that we need to community

00:42:04,239 --> 00:42:10,179
Gus I think even have if people could

00:42:07,989 --> 00:42:15,399
see anybody actually talking actively

00:42:10,179 --> 00:42:17,039
about having done that process I think

00:42:15,399 --> 00:42:20,459
that would probably help provide some

00:42:17,039 --> 00:42:22,629
useful pull as well

00:42:20,459 --> 00:42:26,769
the minute with it's very much being

00:42:22,629 --> 00:42:28,919
pushed from the developers out and we in

00:42:26,769 --> 00:42:31,269
the faith that there are some users

00:42:28,919 --> 00:42:33,789
we're in a bunch of us buy into that and

00:42:31,269 --> 00:42:37,389
it's no problem at all but it probably

00:42:33,789 --> 00:42:40,169
helped reach more people in in terms of

00:42:37,389 --> 00:42:43,209
you know terms the education and stuff

00:42:40,169 --> 00:42:44,799
yeah that was my discussion with Kate

00:42:43,209 --> 00:42:47,199
earlier it's you want to see people

00:42:44,799 --> 00:42:48,789
needing it and then discussing how to

00:42:47,199 --> 00:42:55,719
deliver it so that you know you're doing

00:42:48,789 --> 00:42:57,159
something useful that would be that's

00:42:55,719 --> 00:42:58,689
good actually as we need to basically

00:42:57,159 --> 00:42:59,979
start highlighting use cases where

00:42:58,689 --> 00:43:01,739
people have actually done it and then

00:42:59,979 --> 00:43:04,869
work from there

00:43:01,739 --> 00:43:06,249
Yocto is an area that has done some work

00:43:04,869 --> 00:43:08,619
in the past it bit brought it and I

00:43:06,249 --> 00:43:13,119
think reviving it in the okto space will

00:43:08,619 --> 00:43:15,129
be helpful for everyone maybe for some

00:43:13,119 --> 00:43:16,989
of the firmwares as well because that's

00:43:15,129 --> 00:43:20,889
a much smaller codebase if it's getting

00:43:16,989 --> 00:43:23,589
burned onto a board they might you know

00:43:20,889 --> 00:43:25,749
they can take up tea and tiyanak or or

00:43:23,589 --> 00:43:28,869
something and like say if we want to

00:43:25,749 --> 00:43:30,339
come up with a reference stack for one

00:43:28,869 --> 00:43:32,889
of these boards for the night six boards

00:43:30,339 --> 00:43:34,329
or something of all the projects I'm

00:43:32,889 --> 00:43:37,449
point happy to work with anyone to sort

00:43:34,329 --> 00:43:39,399
of start mapping up what the sediment

00:43:37,449 --> 00:43:41,109
documents would look like to dock you

00:43:39,399 --> 00:43:44,169
describe this and use it as a best

00:43:41,109 --> 00:43:46,539
practice for people to interact for

00:43:44,169 --> 00:43:51,429
people to throw rocks at as they tend to

00:43:46,539 --> 00:43:54,639
and help them prove it beyond that how

00:43:51,429 --> 00:43:55,719
are we doing on the time just seven

00:43:54,639 --> 00:43:57,669
minutes does anyone else have any other

00:43:55,719 --> 00:44:00,099
questions or comments or thoughts in

00:43:57,669 --> 00:44:02,429
this area you want to bring up or

00:44:00,099 --> 00:44:02,429
concerns

00:44:04,510 --> 00:44:12,470
so one question that has come up in

00:44:08,480 --> 00:44:15,920
debian circles is how detailed do you

00:44:12,470 --> 00:44:18,890
need to be in terms of licensing you

00:44:15,920 --> 00:44:20,990
know in terms of putting in SPD X

00:44:18,890 --> 00:44:24,530
identifier so you know what the license

00:44:20,990 --> 00:44:26,150
is at the top of every file most people

00:44:24,530 --> 00:44:29,510
are on board with that you know it's

00:44:26,150 --> 00:44:32,180
it's not controversial one thing that

00:44:29,510 --> 00:44:35,210
we've been doing over the years is

00:44:32,180 --> 00:44:37,510
actually extracting full license

00:44:35,210 --> 00:44:41,110
information out of every file and

00:44:37,510 --> 00:44:44,240
depending on the package that can be

00:44:41,110 --> 00:44:46,790
such a huge piece of work it's untrue do

00:44:44,240 --> 00:44:49,130
we need to know every single copyright

00:44:46,790 --> 00:44:50,990
holder with every single variation on

00:44:49,130 --> 00:44:53,600
copyright years do we need to summarize

00:44:50,990 --> 00:44:56,030
all of those sometimes that can be you

00:44:53,600 --> 00:44:58,610
can then end up with what a copyright

00:44:56,030 --> 00:45:01,190
file you know with a top-level licensing

00:44:58,610 --> 00:45:03,470
summary it can take you weeks to do that

00:45:01,190 --> 00:45:06,380
kind of thing is that actually necessary

00:45:03,470 --> 00:45:08,780
a lot of people aren't sure if you're

00:45:06,380 --> 00:45:10,490
shipping the source it's one of the

00:45:08,780 --> 00:45:11,600
arguments it if you just ship the source

00:45:10,490 --> 00:45:14,630
it's there so it doesn't much matter

00:45:11,600 --> 00:45:16,670
that argument is certainly there the

00:45:14,630 --> 00:45:18,560
challenge becomes that not everyone

00:45:16,670 --> 00:45:20,390
agrees that that is sufficient it's a

00:45:18,560 --> 00:45:22,609
it's a theory it's a legal theory in

00:45:20,390 --> 00:45:24,350
ones case and other people think that

00:45:22,609 --> 00:45:26,119
there's there's different opinions and

00:45:24,350 --> 00:45:27,500
other licenses don't require to ship the

00:45:26,119 --> 00:45:28,369
source in which case it's a different

00:45:27,500 --> 00:45:34,940
story where you have to provide

00:45:28,369 --> 00:45:36,530
attribution and I'm not a lawyer based

00:45:34,940 --> 00:45:43,460
on the fact that you have to be supposed

00:45:36,530 --> 00:45:44,690
to create a notices file I said I'm not

00:45:43,460 --> 00:45:46,490
allowed but these are the cases I've had

00:45:44,690 --> 00:45:48,800
thrown up at me in my face yeah exactly

00:45:46,490 --> 00:45:50,930
so we then end up with engineers who are

00:45:48,800 --> 00:45:53,570
wanting to do the right thing but also

00:45:50,930 --> 00:45:55,940
don't want to feel that there's wasting

00:45:53,570 --> 00:45:57,290
weeks of their time on something that

00:45:55,940 --> 00:45:58,880
actually isn't useful and isn't

00:45:57,290 --> 00:46:00,170
necessary and like you know one of the

00:45:58,880 --> 00:46:02,240
things that pathology does is the lies

00:46:00,170 --> 00:46:05,000
you can sold it your copyrights for

00:46:02,240 --> 00:46:06,830
these notices files and things like that

00:46:05,000 --> 00:46:08,720
and people have used that and then you

00:46:06,830 --> 00:46:10,100
can store the results from one to the

00:46:08,720 --> 00:46:12,619
other but just to give you some feel for

00:46:10,100 --> 00:46:13,980
the scope of the variants that are out

00:46:12,619 --> 00:46:17,640
there

00:46:13,980 --> 00:46:20,040
skank code and I may not get my number

00:46:17,640 --> 00:46:22,109
stats wrong but I think found 569

00:46:20,040 --> 00:46:24,690
different versions of the GPL 2 header

00:46:22,109 --> 00:46:28,740
in the Linux kernel okay that's

00:46:24,690 --> 00:46:30,060
different variance so you know is a word

00:46:28,740 --> 00:46:31,350
significant or not is a comma

00:46:30,060 --> 00:46:33,869
significant or not sometimes that

00:46:31,350 --> 00:46:35,730
matters and that's why going to the

00:46:33,869 --> 00:46:37,320
identifier is you remove a lot of human

00:46:35,730 --> 00:46:40,440
error and then help with the automation

00:46:37,320 --> 00:46:42,930
I still think shipping the source is

00:46:40,440 --> 00:46:44,880
fine but I think that where I can

00:46:42,930 --> 00:46:46,380
imagine why someone would say that and

00:46:44,880 --> 00:46:47,940
the thing that comes to mind is I think

00:46:46,380 --> 00:46:49,920
again going back to that sort of

00:46:47,940 --> 00:46:51,510
commercial negotiation setting sometimes

00:46:49,920 --> 00:46:56,430
you know people just like to see a list

00:46:51,510 --> 00:46:58,859
and you know and especially if you know

00:46:56,430 --> 00:47:01,230
if you've got sales people or their

00:46:58,859 --> 00:47:04,500
lawyers negotiating they understand you

00:47:01,230 --> 00:47:06,830
know the source anyway you can see for

00:47:04,500 --> 00:47:06,830
yourself

00:47:10,460 --> 00:47:15,060
Yeah right exactly see what the summary

00:47:13,380 --> 00:47:17,100
episode the management view versus the

00:47:15,060 --> 00:47:20,520
developers so the pathological case I

00:47:17,100 --> 00:47:22,650
had was a graphics tools net PBM

00:47:20,520 --> 00:47:24,720
that I used to maintain in Debian and

00:47:22,650 --> 00:47:29,460
then I walked away from for exactly this

00:47:24,720 --> 00:47:31,500
reason were a set of 250 or so tiny

00:47:29,460 --> 00:47:33,990
little binary zj-- could do one better

00:47:31,500 --> 00:47:36,510
graphics conversion but they'd been

00:47:33,990 --> 00:47:39,300
built up over 20 years or so previously

00:47:36,510 --> 00:47:42,450
from contributions from 50 or more

00:47:39,300 --> 00:47:45,150
developers with umpteen different

00:47:42,450 --> 00:47:47,010
licenses and a few version control

00:47:45,150 --> 00:47:49,380
systems in the process oh absolutely yes

00:47:47,010 --> 00:47:52,530
and just trying to work that out and put

00:47:49,380 --> 00:47:54,450
even summarizing it was was a lot of

00:47:52,530 --> 00:47:57,120
effort and then of course there's going

00:47:54,450 --> 00:48:04,920
to be loss in you know in the data

00:47:57,120 --> 00:48:07,050
though one use keys are the very

00:48:04,920 --> 00:48:09,470
detailed stuff as if you have a toxic

00:48:07,050 --> 00:48:12,420
copyright holder you're aware of and

00:48:09,470 --> 00:48:14,490
yeah you you you you don't necessarily

00:48:12,420 --> 00:48:17,100
care about who and every individual file

00:48:14,490 --> 00:48:20,190
but you really really care if Marc Brown

00:48:17,100 --> 00:48:23,790
wrote one of those source files and you

00:48:20,190 --> 00:48:25,800
don't want anything to do with them or

00:48:23,790 --> 00:48:27,720
viniq or you get the course to people

00:48:25,800 --> 00:48:30,980
who have very different interpretations

00:48:27,720 --> 00:48:34,410
of what GPL means yep

00:48:30,980 --> 00:48:35,940
well exactly yes and this is all part of

00:48:34,410 --> 00:48:40,530
risk management for using the software

00:48:35,940 --> 00:48:42,360
at the end of the day so you know I

00:48:40,530 --> 00:48:44,070
guess the ask at the end of this is

00:48:42,360 --> 00:48:45,540
we're wrapping it up is you know is it

00:48:44,070 --> 00:48:47,520
going to be feasible for Lenora to

00:48:45,540 --> 00:48:49,290
basically generate us PDX stocks for the

00:48:47,520 --> 00:48:51,500
project that you guys are the upstream

00:48:49,290 --> 00:48:51,500
mod

00:48:52,900 --> 00:48:56,480
[Laughter]

00:48:59,010 --> 00:49:05,800
yes oh yes Lennar Oh is going to for its

00:49:02,830 --> 00:49:07,390
software but obviously we're learning as

00:49:05,800 --> 00:49:08,590
we go to do it right and I've been

00:49:07,390 --> 00:49:10,780
taught to come in this room and say that

00:49:08,590 --> 00:49:14,680
arm supports that message too so so arm

00:49:10,780 --> 00:49:16,030
arm are gonna be doing it as well and of

00:49:14,680 --> 00:49:17,800
course if you're starting in your

00:49:16,030 --> 00:49:19,600
project it's much easier to do this

00:49:17,800 --> 00:49:20,920
white when you start it white from the

00:49:19,600 --> 00:49:28,510
from the beginning we all know it's

00:49:20,920 --> 00:49:29,520
retrofitting is the hard bit yeah we're

00:49:28,510 --> 00:49:33,550
done

00:49:29,520 --> 00:49:36,659
thanks thanks everyone

00:49:33,550 --> 00:49:36,659
[Applause]

00:49:37,240 --> 00:49:42,250

YouTube URL: https://www.youtube.com/watch?v=2WeXEWFqVRE


