Title: PromCon Online 2020 - The Zen of Prometheus, Kemal Akkoyun, Red Hat
Publication date: 2020-07-23
Playlist: PromCon Online 2020
Description: 
	In modern days, we run our applications as loosely coupled microservices on distributed, elastic infrastructure as (mostly) stateless workloads. Under these circumstances, observability is the key to understanding how our applications run and behave in action to deliver highly available and resilient service.

Prometheus is born in such an atmosphere as a solution to satisfy the observability needs of the cloud-native era. Among many other observability signals like logs and traces, metrics play the most substantial role. Sampled measurements observed throughout the system are crucial for monitoring the health of the applications and they enable real-time, actionable alerting. Although the tools in the Prometheus ecosystem make life a lot easier, there are still numerous possibilities to make mistakes or misuse them.

During this talk, Kemal will present several valuable patterns, best practices and idiomatic methods for instrumenting critical services. He will discuss common pitfalls and failure cases while sharing useful insights and methods to avoid those mistakes. Last but not least, he will give tips for writing simple, maintainable and robust alerts that derived from real-life experiences. By doing so he will propose “the Zen of Prometheus”.
Captions: 
	00:00:01,770 --> 00:00:04,940
[Music]

00:00:14,380 --> 00:00:21,529
hello everyone I hope you are enjoying

00:00:17,330 --> 00:00:23,770
the conference so far so this will be a

00:00:21,529 --> 00:00:26,060
yet another best practice talk on

00:00:23,770 --> 00:00:29,060
instrumentation and alerting using

00:00:26,060 --> 00:00:31,820
Prometheus and I'm sure you have seen

00:00:29,060 --> 00:00:36,200
similar talks and perhaps better ones

00:00:31,820 --> 00:00:39,320
but anyhow this will be my take on it so

00:00:36,200 --> 00:00:42,620
I have collected a couple of best

00:00:39,320 --> 00:00:43,940
practices as set of rules and I'm gonna

00:00:42,620 --> 00:00:48,170
share those with you in this

00:00:43,940 --> 00:00:49,340
presentation so before I start I want to

00:00:48,170 --> 00:00:53,989
make something clear

00:00:49,340 --> 00:00:55,789
none of these are like mine the only

00:00:53,989 --> 00:00:57,769
noble thing I am gonna be presenting

00:00:55,789 --> 00:01:04,460
here is the mere collection of these

00:00:57,769 --> 00:01:06,650
metrics these ideas so first Who I am so

00:01:04,460 --> 00:01:10,130
my name is Claire mine and I work for

00:01:06,650 --> 00:01:12,860
reddit as a software engineer I work

00:01:10,130 --> 00:01:15,560
OpenType observability platform team and

00:01:12,860 --> 00:01:19,009
in this team we are building a platform

00:01:15,560 --> 00:01:23,380
to collect observability signals like

00:01:19,009 --> 00:01:27,579
such as metrics logs tracing and profile

00:01:23,380 --> 00:01:30,380
also as a team we are we have a sri

00:01:27,579 --> 00:01:32,570
responsibilities and meaningly we are on

00:01:30,380 --> 00:01:35,750
call for the platform that we are

00:01:32,570 --> 00:01:37,880
building so the rules that I'm gonna

00:01:35,750 --> 00:01:40,100
share with you today we are actually

00:01:37,880 --> 00:01:43,430
applying that in our daily lives on

00:01:40,100 --> 00:01:45,829
production systems I'm also a ton of

00:01:43,430 --> 00:01:48,619
maintainer and recently started to

00:01:45,829 --> 00:01:51,770
contribute to parameters yeah

00:01:48,619 --> 00:01:53,960
achievement unlocked for me besides the

00:01:51,770 --> 00:01:56,240
observer ability and monitoring topics

00:01:53,960 --> 00:02:00,079
I am also passionate about distributed

00:01:56,240 --> 00:02:03,560
systems and data raises and by the way

00:02:00,079 --> 00:02:08,119
in this picture I'm on location and like

00:02:03,560 --> 00:02:12,980
normally I don't look that much happy so

00:02:08,119 --> 00:02:15,140
let's start so what is that when you

00:02:12,980 --> 00:02:18,400
check the dictionary or in this case of

00:02:15,140 --> 00:02:23,330
Wikipedia you get a definition

00:02:18,400 --> 00:02:24,160
so then emphasize the rigorous self

00:02:23,330 --> 00:02:27,220
restraint

00:02:24,160 --> 00:02:29,050
meditation practice practice inside into

00:02:27,220 --> 00:02:31,780
the nature of the mind and nature of the

00:02:29,050 --> 00:02:34,060
things and the personal expression of

00:02:31,780 --> 00:02:36,190
this insides daily life especially for

00:02:34,060 --> 00:02:37,000
the benefit of others that's the formal

00:02:36,190 --> 00:02:40,150
definition

00:02:37,000 --> 00:02:42,520
so from this formal definition to use in

00:02:40,150 --> 00:02:46,870
our context I have derived a simpler one

00:02:42,520 --> 00:02:49,960
a Zen is a collection of insights

00:02:46,870 --> 00:02:51,450
gathered from the daily life to benefit

00:02:49,960 --> 00:02:56,230
others

00:02:51,450 --> 00:02:59,800
so I'm sure you have heard similar than

00:02:56,230 --> 00:03:03,100
ideas before so in this talk I'm gonna

00:02:59,800 --> 00:03:07,210
try to come up with a set of rules to

00:03:03,100 --> 00:03:10,390
fulfill this definition the first and

00:03:07,210 --> 00:03:13,330
probably the most popular of designs in

00:03:10,390 --> 00:03:18,190
software systems is the Zen of Python

00:03:13,330 --> 00:03:22,330
it's created 20 years ago as a Python an

00:03:18,190 --> 00:03:25,810
enhancement proposal Feb 20 believed by

00:03:22,330 --> 00:03:27,820
Tim Peters in this document he captured

00:03:25,810 --> 00:03:31,600
the engineering the others behind Titan

00:03:27,820 --> 00:03:35,080
in some humorous way you can access

00:03:31,600 --> 00:03:36,940
these you can access these through the

00:03:35,080 --> 00:03:40,660
website or through the Python

00:03:36,940 --> 00:03:44,470
interpreter there is the Easter Egg in

00:03:40,660 --> 00:03:47,740
Python interpreter so if you open up an

00:03:44,470 --> 00:03:51,580
interpreter and prompt and type import

00:03:47,740 --> 00:03:56,020
this you would see same same rules that

00:03:51,580 --> 00:03:58,600
you will actually seen here so we also

00:03:56,020 --> 00:04:01,500
have similar initiatives in go as well

00:03:58,600 --> 00:04:05,950
right so which in this case is called

00:04:01,500 --> 00:04:09,370
call problems back in 2015

00:04:05,950 --> 00:04:11,890
Rob Pike has created these proverbs for

00:04:09,370 --> 00:04:16,359
a legendary talk that he gave in gopher

00:04:11,890 --> 00:04:19,560
fast so these rules are they so more or

00:04:16,359 --> 00:04:22,540
less the same purpose as then however

00:04:19,560 --> 00:04:27,100
proverbs are a little bit different than

00:04:22,540 --> 00:04:30,930
as an of Python rules so what is a

00:04:27,100 --> 00:04:33,600
proverb what makes it different a

00:04:30,930 --> 00:04:36,510
proverb by definition is

00:04:33,600 --> 00:04:40,350
short well-known Peter saying stating a

00:04:36,510 --> 00:04:43,380
general truth so in our context it is a

00:04:40,350 --> 00:04:46,110
pity saying that designed to reveal a

00:04:43,380 --> 00:04:50,670
deeper truth about the design of the

00:04:46,110 --> 00:04:52,980
language so even though practically they

00:04:50,670 --> 00:04:56,130
are similar they serve slightly

00:04:52,980 --> 00:04:58,260
different purposes so probe verbs are

00:04:56,130 --> 00:05:00,030
revealing intentions behind the design

00:04:58,260 --> 00:05:03,690
of call they require deeper

00:05:00,030 --> 00:05:06,150
understanding of the language so in this

00:05:03,690 --> 00:05:09,030
sense they are not the same as the rules

00:05:06,150 --> 00:05:11,790
in the design of pythons which is which

00:05:09,030 --> 00:05:16,770
they depend on the practical knowledge

00:05:11,790 --> 00:05:20,820
practical usages of the language and so

00:05:16,770 --> 00:05:22,490
luckily for us now we also have the Son

00:05:20,820 --> 00:05:26,460
of God

00:05:22,490 --> 00:05:29,670
dave cheney gave this great talk about

00:05:26,460 --> 00:05:32,790
the son of god at go freak on israel is

00:05:29,670 --> 00:05:35,130
near he aimed to create a set of rules

00:05:32,790 --> 00:05:38,190
to convey the engineering the others

00:05:35,130 --> 00:05:41,880
behind the goal and he wanted them to be

00:05:38,190 --> 00:05:43,770
more beginner-friendly so in his talk he

00:05:41,880 --> 00:05:46,110
also thinks about the ways to

00:05:43,770 --> 00:05:48,900
communicate these rules right so the

00:05:46,110 --> 00:05:51,360
life cycle of these rules so he asked

00:05:48,900 --> 00:05:54,390
the questions like how do we teach them

00:05:51,360 --> 00:05:58,200
how do we enforce them how do we evolve

00:05:54,390 --> 00:06:01,590
them of course like after watching this

00:05:58,200 --> 00:06:03,600
i this talk this idea came to me i mean

00:06:01,590 --> 00:06:04,860
why don't we have the similar set of

00:06:03,600 --> 00:06:08,520
rules for prometheus

00:06:04,860 --> 00:06:12,690
of course like as none of my ideas this

00:06:08,520 --> 00:06:14,910
wasn't as novel as i told it is Bjorn

00:06:12,690 --> 00:06:17,370
Rubenstein has already asked the same

00:06:14,910 --> 00:06:20,640
question and as an answer he gave a talk

00:06:17,370 --> 00:06:25,500
about in about it at Berlin Prometheus

00:06:20,640 --> 00:06:28,050
meetup a couple of years ago we are in

00:06:25,500 --> 00:06:31,170
this talk told that he had the idea

00:06:28,050 --> 00:06:34,170
after he watched taught by Rob Pike and

00:06:31,170 --> 00:06:36,330
he had been collecting these proverbs

00:06:34,170 --> 00:06:39,890
for a while at the time that he gave

00:06:36,330 --> 00:06:43,850
this talk so in that talk he colonizes

00:06:39,890 --> 00:06:43,850
canonized five proverbs

00:06:44,610 --> 00:06:50,729
so these proverbs are goes like this

00:06:48,419 --> 00:06:55,349
like instrument first ask questions

00:06:50,729 --> 00:06:56,419
later counters are counters rule and

00:06:55,349 --> 00:06:59,939
guard sucks

00:06:56,419 --> 00:07:02,310
first rate then aggregate this sounds

00:06:59,939 --> 00:07:05,370
pretty nice labels are the new

00:07:02,310 --> 00:07:09,300
hierarchies and if you can graph it you

00:07:05,370 --> 00:07:12,080
can alert on it they are simple they are

00:07:09,300 --> 00:07:17,639
poetic and they're beautiful estate

00:07:12,080 --> 00:07:21,479
stated and catching for me these rules

00:07:17,639 --> 00:07:28,229
are closer to this van than the Proverbs

00:07:21,479 --> 00:07:31,139
so I decided to build upon them also in

00:07:28,229 --> 00:07:33,979
this talk we were jokes about he could

00:07:31,139 --> 00:07:36,930
be starting a tradition and someday

00:07:33,979 --> 00:07:40,740
somebody would add more rules and would

00:07:36,930 --> 00:07:43,319
build a website out of it so here I am

00:07:40,740 --> 00:07:45,900
delivering that promise and fulfilling

00:07:43,319 --> 00:07:50,069
that prediction I give you the probes an

00:07:45,900 --> 00:07:54,029
of Prometheus following the path of beer

00:07:50,069 --> 00:07:55,889
and inspired by Dale Dale Chaney I tried

00:07:54,029 --> 00:07:58,319
to create a set of rules to help

00:07:55,889 --> 00:08:02,060
engineers to create like metrics and

00:07:58,319 --> 00:08:05,659
alerts for their services and I also

00:08:02,060 --> 00:08:10,349
want wanted them to be beginner friendly

00:08:05,659 --> 00:08:13,500
so here they are both ones are the

00:08:10,349 --> 00:08:16,710
proverbs by the way the colored ones I

00:08:13,500 --> 00:08:20,219
wanted again these rules to be catchy

00:08:16,710 --> 00:08:22,650
and beginner friendly so as my teammate

00:08:20,219 --> 00:08:26,460
Monty as you might know me you might

00:08:22,650 --> 00:08:30,150
know him as matamata bit of the put like

00:08:26,460 --> 00:08:33,060
these these rules should be explicit and

00:08:30,150 --> 00:08:35,099
concise enough to give the message in a

00:08:33,060 --> 00:08:38,909
conversation that you have in a

00:08:35,099 --> 00:08:41,519
conference hall i track which we don't

00:08:38,909 --> 00:08:45,320
have many of those anymore because of

00:08:41,519 --> 00:08:47,970
the coffee situation but like the

00:08:45,320 --> 00:08:52,490
description was really catchy for me and

00:08:47,970 --> 00:08:56,500
that's what I aim for so I'm not gonna

00:08:52,490 --> 00:08:58,270
go ahead and read them one by one

00:08:56,500 --> 00:09:00,760
but the for the rest of the talk I'm

00:08:58,270 --> 00:09:03,970
gonna try to highlight a couple of those

00:09:00,760 --> 00:09:07,510
rules I believe the most fundamental and

00:09:03,970 --> 00:09:11,250
the insightful ones and for the rest you

00:09:07,510 --> 00:09:15,250
can go to website and read about them

00:09:11,250 --> 00:09:17,860
also like beyond has already explained

00:09:15,250 --> 00:09:20,770
the one he has Canaanites in that in his

00:09:17,860 --> 00:09:26,170
talk so you better watch watch it for

00:09:20,770 --> 00:09:28,450
those rules that being said I can't just

00:09:26,170 --> 00:09:34,960
like start without repeating the first

00:09:28,450 --> 00:09:38,310
one that Bjorn mentioned instrument

00:09:34,960 --> 00:09:41,620
first ask questions later

00:09:38,310 --> 00:09:43,780
so instrumentation is the key to

00:09:41,620 --> 00:09:46,840
understanding how our applications run

00:09:43,780 --> 00:09:49,090
and behave in action so also like

00:09:46,840 --> 00:09:51,370
according to myths of parameters

00:09:49,090 --> 00:09:54,640
parameters has started as an

00:09:51,370 --> 00:09:58,060
instrumentation library so still like

00:09:54,640 --> 00:10:01,480
the emphasis on instrumentation first

00:09:58,060 --> 00:10:05,980
like this is the genesis claim of

00:10:01,480 --> 00:10:09,700
Prometheus so good software needs good

00:10:05,980 --> 00:10:15,220
instrumentation and it's not optional

00:10:09,700 --> 00:10:16,930
it's just essential so for that start

00:10:15,220 --> 00:10:20,440
focusing on instrumenting your

00:10:16,930 --> 00:10:24,160
applications first so spread the metrics

00:10:20,440 --> 00:10:27,100
liberally the later on to ask the proper

00:10:24,160 --> 00:10:31,180
question together inside insightful

00:10:27,100 --> 00:10:34,540
measurements from your systems yes one

00:10:31,180 --> 00:10:37,690
of the most important rules so measure

00:10:34,540 --> 00:10:39,700
what users actually care about do you

00:10:37,690 --> 00:10:42,280
really think your users care if your

00:10:39,700 --> 00:10:45,700
database servers are down do they care

00:10:42,280 --> 00:10:47,410
about whether your CPU is saturated just

00:10:45,700 --> 00:10:48,190
know they care about what they

00:10:47,410 --> 00:10:50,620
experience

00:10:48,190 --> 00:10:52,450
so they care about whether they can

00:10:50,620 --> 00:10:55,210
access the page that they have requested

00:10:52,450 --> 00:10:58,390
and whether they see the refresh result

00:10:55,210 --> 00:11:01,180
or not so rather than thinking in terms

00:10:58,390 --> 00:11:04,150
of those you should think in terms of

00:11:01,180 --> 00:11:07,240
latencies availability and error rates

00:11:04,150 --> 00:11:10,540
while instrumenting your services and

00:11:07,240 --> 00:11:16,240
think about how you would measure your

00:11:10,540 --> 00:11:17,889
users experience to do that always let

00:11:16,240 --> 00:11:20,559
your essa laws guide your

00:11:17,889 --> 00:11:23,800
instrumentation if you don't know where

00:11:20,559 --> 00:11:28,149
to begin from you can just use known

00:11:23,800 --> 00:11:30,670
frameworks like such as read use or the

00:11:28,149 --> 00:11:35,670
full golden golden signals that they

00:11:30,670 --> 00:11:35,670
mentioned in this very famous variable

00:11:35,819 --> 00:11:43,209
another important rule cardinality

00:11:39,160 --> 00:11:46,990
matters so every unique set of labels

00:11:43,209 --> 00:11:51,519
create a new time series remember that

00:11:46,990 --> 00:11:54,129
use labels which care for child what you

00:11:51,519 --> 00:11:56,499
actually put into those labels do not

00:11:54,129 --> 00:12:00,519
put any unique identifiers into labels

00:11:56,499 --> 00:12:05,559
things can get out of control pretty

00:12:00,519 --> 00:12:10,179
much easily again remember labels are

00:12:05,559 --> 00:12:12,809
multiplicative and keep in mind that you

00:12:10,179 --> 00:12:15,519
will have multiple labels on metrics

00:12:12,809 --> 00:12:17,920
multiple target labels on your targets

00:12:15,519 --> 00:12:20,170
and you will have multiple targets so

00:12:17,920 --> 00:12:26,170
things could get out of control pretty

00:12:20,170 --> 00:12:28,720
quickly and nastily and remember when it

00:12:26,170 --> 00:12:33,540
comes to performance it's almost always

00:12:28,720 --> 00:12:39,129
about wanting and its label cardinality

00:12:33,540 --> 00:12:41,290
yes this is actually some of you may

00:12:39,129 --> 00:12:47,730
have realized this is actually a meme

00:12:41,290 --> 00:12:51,309
and one does not simply use histograms

00:12:47,730 --> 00:12:53,799
histograms are powerful with a single

00:12:51,309 --> 00:12:56,410
histogram metric you can monitor your

00:12:53,799 --> 00:12:58,869
HTTP service you can build read

00:12:56,410 --> 00:13:03,509
dashboards out of it and meaningful

00:12:58,869 --> 00:13:06,639
others on top of those however

00:13:03,509 --> 00:13:09,850
histograms are not the easiest metric to

00:13:06,639 --> 00:13:12,790
use remember the Peter Parker principle

00:13:09,850 --> 00:13:14,470
to ensure usefulness of your

00:13:12,790 --> 00:13:16,629
observations and correctness of your

00:13:14,470 --> 00:13:18,760
alerts you have to come up with

00:13:16,629 --> 00:13:22,600
meaningful bucket left

00:13:18,760 --> 00:13:26,760
and creating a bucket layout for your

00:13:22,600 --> 00:13:30,970
histogram is a kind of an art form so

00:13:26,760 --> 00:13:32,950
coming up with a bucket layout some

00:13:30,970 --> 00:13:36,030
models or conflicts with the first

00:13:32,950 --> 00:13:38,740
instrument first and ask questions later

00:13:36,030 --> 00:13:41,770
because you need to have an idea about

00:13:38,740 --> 00:13:45,370
your latencies your latency ranges

00:13:41,770 --> 00:13:48,730
before you even started the measure so

00:13:45,370 --> 00:13:51,340
to circumvent this issue you can take an

00:13:48,730 --> 00:13:53,770
iterative approach or you can use an

00:13:51,340 --> 00:13:57,190
event based system to obtain your

00:13:53,770 --> 00:14:03,910
latency distributions and latency ranges

00:13:57,190 --> 00:14:05,350
first so as always let your solos guide

00:14:03,910 --> 00:14:08,260
your bucket layout

00:14:05,350 --> 00:14:12,730
create boundaries that match matches

00:14:08,260 --> 00:14:18,310
your SLO boundaries with that way you

00:14:12,730 --> 00:14:20,410
can keep track of your allies the last

00:14:18,310 --> 00:14:23,620
but not the least watch out your

00:14:20,410 --> 00:14:25,600
cardinality the histograms underneath

00:14:23,620 --> 00:14:28,780
are just country with labels where

00:14:25,600 --> 00:14:30,610
bucket boundaries used as labels so be

00:14:28,780 --> 00:14:33,340
precautious while adding additional

00:14:30,610 --> 00:14:36,220
labels to your histograms remember

00:14:33,340 --> 00:14:39,190
labels are not multiplicative and they

00:14:36,220 --> 00:14:40,930
can easily get out of control this

00:14:39,190 --> 00:14:42,520
should be a remedy to one of the most

00:14:40,930 --> 00:14:46,000
common mistakes we see in the other

00:14:42,520 --> 00:14:47,860
creation so symptom based alerts for

00:14:46,000 --> 00:14:51,220
paging and cause bass for

00:14:47,860 --> 00:14:54,250
troubleshooting it doesn't matter if you

00:14:51,220 --> 00:14:57,820
see P if your CPU is saturated as long

00:14:54,250 --> 00:15:00,120
as your users don't notice that you're

00:14:57,820 --> 00:15:03,730
painting alert should be urgent

00:15:00,120 --> 00:15:05,380
important actionable and real you

00:15:03,730 --> 00:15:07,900
wouldn't want to be woken up in the

00:15:05,380 --> 00:15:09,900
middle of the night for the problems you

00:15:07,900 --> 00:15:13,180
would eventually go away by themselves

00:15:09,900 --> 00:15:15,640
so your alert should represent either

00:15:13,180 --> 00:15:19,090
ongoing or imminent problems with your

00:15:15,640 --> 00:15:21,580
systems and remember what we talked

00:15:19,090 --> 00:15:23,890
about in the beginning of the talk about

00:15:21,580 --> 00:15:27,670
like measure what the users are actually

00:15:23,890 --> 00:15:30,040
clear about so for that symptoms are a

00:15:27,670 --> 00:15:32,520
better way to capture problems more

00:15:30,040 --> 00:15:35,250
comprehensively and robustly with

00:15:32,520 --> 00:15:37,890
the less effort so you should always

00:15:35,250 --> 00:15:40,820
always be able to classify the problems

00:15:37,890 --> 00:15:44,550
into one of availability latency or

00:15:40,820 --> 00:15:47,490
correctness terms so do that

00:15:44,550 --> 00:15:50,130
that being said include cause Bates

00:15:47,490 --> 00:15:52,890
information in your alerts but avoid

00:15:50,130 --> 00:15:54,930
alerting on them directly use them to

00:15:52,890 --> 00:15:58,970
troubleshoot your systems or debugging

00:15:54,930 --> 00:16:01,590
your problems in your production systems

00:15:58,970 --> 00:16:03,390
as I told you at the beginning of the

00:16:01,590 --> 00:16:06,360
talk I want this to be a community

00:16:03,390 --> 00:16:08,340
effort I dream this would become an

00:16:06,360 --> 00:16:11,340
entry point for the beginners and the

00:16:08,340 --> 00:16:13,440
ones who seeks the best practices so

00:16:11,340 --> 00:16:15,810
feel free to contribute add and change

00:16:13,440 --> 00:16:18,690
the rules any types of contributions are

00:16:15,810 --> 00:16:47,400
welcome with that that's it from me

00:16:18,690 --> 00:16:52,110
thanks for listening ok while waiting

00:16:47,400 --> 00:16:55,080
for questions how how did your own

00:16:52,110 --> 00:16:59,370
perception of the space change before

00:16:55,080 --> 00:17:02,550
and after thinking about basically what

00:16:59,370 --> 00:17:10,589
was in the primitive eco system is as

00:17:02,550 --> 00:17:14,000
mantras and sin so yeah

00:17:10,589 --> 00:17:17,190
I mean before this there were like

00:17:14,000 --> 00:17:21,510
official documentation pages to collect

00:17:17,190 --> 00:17:24,390
certain best practices just like I want

00:17:21,510 --> 00:17:26,580
it to be more catchy that's why like I

00:17:24,390 --> 00:17:29,400
come up with this like proverbs or

00:17:26,580 --> 00:17:31,900
mantras actually like most of them is

00:17:29,400 --> 00:17:35,929
coming from other sources

00:17:31,900 --> 00:17:39,110
so yeah I mean like I just want to start

00:17:35,929 --> 00:17:41,720
an effort to just create a nicer entry

00:17:39,110 --> 00:17:46,660
point and maybe something that everyone

00:17:41,720 --> 00:17:46,660
can just point out and start from there

00:17:57,429 --> 00:18:05,090
you still have several questions one

00:18:02,660 --> 00:18:07,309
point that was on the chat is that the

00:18:05,090 --> 00:18:09,500
kubernetes sig observability is looking

00:18:07,309 --> 00:18:22,640
for more material like this you should

00:18:09,500 --> 00:18:37,429
definitely contact them with my started

00:18:22,640 --> 00:18:40,160
creating this document so they don't

00:18:37,429 --> 00:18:42,590
seem to be any more questions so we as

00:18:40,160 --> 00:18:49,340
the panelists are tasked with coming up

00:18:42,590 --> 00:18:51,910
with questions in your own experience

00:18:49,340 --> 00:18:54,830
what would you say is the most important

00:18:51,910 --> 00:18:56,690
aspect of what you just talked about if

00:18:54,830 --> 00:18:59,200
you had to take one or two specific

00:18:56,690 --> 00:19:03,440
things what would those be

00:18:59,200 --> 00:19:05,919
now I've already picked them I emphasize

00:19:03,440 --> 00:19:10,910
them but like the most important one is

00:19:05,919 --> 00:19:13,160
the user aspect when you instrumenting

00:19:10,910 --> 00:19:16,130
your application or when you creating

00:19:13,160 --> 00:19:20,780
some alerts you should always like focus

00:19:16,130 --> 00:19:23,750
on perspective from the user so that's

00:19:20,780 --> 00:19:32,290
what matters and I guess that's the most

00:19:23,750 --> 00:19:32,290
important part I have a question

00:19:34,330 --> 00:19:40,960
so I assume you've started to use these

00:19:36,210 --> 00:19:42,820
read method use method type alerts for

00:19:40,960 --> 00:19:46,120
your infrastructure what interesting

00:19:42,820 --> 00:19:49,210
problem or problems have you found

00:19:46,120 --> 00:19:55,240
because you added those alerts versus

00:19:49,210 --> 00:19:58,030
traditional alerting thresholds yeah

00:19:55,240 --> 00:20:01,690
mostly the most interesting one we come

00:19:58,030 --> 00:20:04,320
up with with the latencies I guess that

00:20:01,690 --> 00:20:12,760
was the first indicator of something

00:20:04,320 --> 00:20:15,100
like started also like the one thing

00:20:12,760 --> 00:20:18,850
also reduced noise that we have in our

00:20:15,100 --> 00:20:21,060
alerts right zombie focus toes and we

00:20:18,850 --> 00:20:24,400
had this alert sometimes just like there

00:20:21,060 --> 00:20:28,410
flip-floppy or when you actually your

00:20:24,400 --> 00:20:30,850
renew the alerts can go off after your

00:20:28,410 --> 00:20:34,330
elastic infrastructure can handle them

00:20:30,850 --> 00:20:36,280
after just restarting so this kind of

00:20:34,330 --> 00:20:44,020
reduced those type of things

00:20:36,280 --> 00:20:46,930
I may say nice by the way thank you for

00:20:44,020 --> 00:20:49,300
your presentation I like use that a lot

00:20:46,930 --> 00:20:51,720
and yeah there are a couple of items

00:20:49,300 --> 00:21:00,910
that directly comes from your

00:20:51,720 --> 00:21:03,070
presentation there's a question from the

00:21:00,910 --> 00:21:04,990
audience you said that the son of

00:21:03,070 --> 00:21:06,700
promises is to help people understand

00:21:04,990 --> 00:21:09,070
best practices of permits in an

00:21:06,700 --> 00:21:11,200
easy-to-understand way what are other

00:21:09,070 --> 00:21:14,110
non-obvious documentation or other

00:21:11,200 --> 00:21:15,670
things which he had found helpful in

00:21:14,110 --> 00:21:21,430
aiding your understanding of the project

00:21:15,670 --> 00:21:25,060
I mean besides the best practices I

00:21:21,430 --> 00:21:29,500
found like I already mentioned the

00:21:25,060 --> 00:21:33,250
monitoring there is a document called my

00:21:29,500 --> 00:21:34,900
monitoring philosophy also the SRA the

00:21:33,250 --> 00:21:40,090
famous site reliability engineering

00:21:34,900 --> 00:21:42,250
folks they also helped so I used all

00:21:40,090 --> 00:21:45,070
sources as well and I already mentioned

00:21:42,250 --> 00:21:47,580
them as the resources to build up this

00:21:45,070 --> 00:21:47,580
website

00:21:56,920 --> 00:22:02,870
what do you advise inspector what do you

00:22:00,380 --> 00:22:05,900
advise as best practices for deriving SL

00:22:02,870 --> 00:22:08,060
Olsen s a nice use of black box white

00:22:05,900 --> 00:22:09,470
box instrumentation of apps or

00:22:08,060 --> 00:22:16,460
combinational toast

00:22:09,470 --> 00:22:18,770
I guess the combination of those four

00:22:16,460 --> 00:22:21,320
like one example that I've already given

00:22:18,770 --> 00:22:23,360
I mean if you are aiming for certain

00:22:21,320 --> 00:22:26,510
service level objective for your

00:22:23,360 --> 00:22:30,260
latencies for example you can align your

00:22:26,510 --> 00:22:32,770
buckets accordingly this is one of the

00:22:30,260 --> 00:22:36,290
like first principle that could help and

00:22:32,770 --> 00:22:41,510
also like depending on your service you

00:22:36,290 --> 00:22:44,630
you can like work on come up with an

00:22:41,510 --> 00:22:46,790
others and answer those depending on

00:22:44,630 --> 00:22:52,580
your error rates individual error rates

00:22:46,790 --> 00:22:56,780
or window multi window Baeza error rates

00:22:52,580 --> 00:22:59,690
so there are certain strategies that you

00:22:56,780 --> 00:23:03,200
can start with I mean to understand all

00:22:59,690 --> 00:23:06,470
those things as I mentioned before for

00:23:03,200 --> 00:23:10,550
the previous question the I sorry book

00:23:06,470 --> 00:23:13,010
is a nice place to start and maybe in

00:23:10,550 --> 00:23:15,350
addition from my side one thing which

00:23:13,010 --> 00:23:18,130
I've been trying to get into the wider

00:23:15,350 --> 00:23:21,620
system and into the wider understanding

00:23:18,130 --> 00:23:23,360
everything every service has a user and

00:23:21,620 --> 00:23:25,400
especially if you if you provide

00:23:23,360 --> 00:23:29,660
services internally for your co-workers

00:23:25,400 --> 00:23:31,870
or whatever they consume your service as

00:23:29,660 --> 00:23:34,160
something that you build upon so

00:23:31,870 --> 00:23:36,380
whatever your SLI is and you're a

00:23:34,160 --> 00:23:39,860
suppose are I like to call them two

00:23:36,380 --> 00:23:42,800
primary ones and then anyone who depends

00:23:39,860 --> 00:23:45,230
on you as your primary as the secondary

00:23:42,800 --> 00:23:47,510
because they basically help you inform

00:23:45,230 --> 00:23:50,540
about why your service might be hitting

00:23:47,510 --> 00:23:53,720
along of course the services which you

00:23:50,540 --> 00:23:55,820
depend upon are obviously part of the

00:23:53,720 --> 00:23:57,970
whole story of your own services so why

00:23:55,820 --> 00:24:00,100
those might not be complete

00:23:57,970 --> 00:24:03,820
the actionable or imminently user-facing

00:24:00,100 --> 00:24:06,010
anything anything which from from the

00:24:03,820 --> 00:24:10,030
perspective of who's providing a service

00:24:06,010 --> 00:24:12,550
to you is a useful signal when anything

00:24:10,030 --> 00:24:15,040
goes wrong with with your own stuff so

00:24:12,550 --> 00:24:17,860
having this this dependency chain of

00:24:15,040 --> 00:24:20,500
services and also of the SMSs analysis a

00:24:17,860 --> 00:24:22,720
maze of those services it's super useful

00:24:20,500 --> 00:24:25,150
as a mental model to figure out what you

00:24:22,720 --> 00:24:28,380
should be looking for first if your own

00:24:25,150 --> 00:24:28,380
stuff is having issues

00:24:37,030 --> 00:24:41,530
I think what years as a panelist so you

00:24:39,490 --> 00:24:44,800
can make that point himself but I know

00:24:41,530 --> 00:24:46,840
maybe he didn't get some ideas just abs

00:24:44,800 --> 00:24:48,910
and your availability may not be higher

00:24:46,840 --> 00:24:51,480
than the services your services your

00:24:48,910 --> 00:24:56,860
service depends on in almost all cases

00:24:51,480 --> 00:24:58,120
yes there's this is correct so we still

00:24:56,860 --> 00:25:01,510
have a little bit of time and you can

00:24:58,120 --> 00:25:03,850
still take one or two questions there's

00:25:01,510 --> 00:25:11,580
two questions there in the Q&A app there

00:25:03,850 --> 00:25:14,140
oh they're hot yes so the first one is

00:25:11,580 --> 00:25:17,290
yeah well naming things is too hard and

00:25:14,140 --> 00:25:18,880
stuff are there any practices you found

00:25:17,290 --> 00:25:21,910
along the way in order to avoid

00:25:18,880 --> 00:25:24,690
unnecessary labels what do you do to

00:25:21,910 --> 00:25:24,690
avoid label hell

00:25:26,110 --> 00:25:32,080
yeah for the naming things

00:25:28,390 --> 00:25:34,120
for starters like promises and a really

00:25:32,080 --> 00:25:38,100
good best practices document or naming I

00:25:34,120 --> 00:25:42,340
strongly suggest that check it out and

00:25:38,100 --> 00:25:45,310
for the labeling things I'm like I'm

00:25:42,340 --> 00:25:48,610
also pretty new in this area so for the

00:25:45,310 --> 00:25:52,750
labeling part I try to check out the

00:25:48,610 --> 00:25:55,810
existing monitoring tools especially if

00:25:52,750 --> 00:25:59,100
you have seen and monitoring make sense

00:25:55,810 --> 00:26:01,600
out there there is also a new website

00:25:59,100 --> 00:26:03,820
which I also mentioned in this best

00:26:01,600 --> 00:26:05,590
practices document you can check out

00:26:03,820 --> 00:26:08,050
those mix-ins and especially like

00:26:05,590 --> 00:26:13,150
kubernetes mixing or the one on

00:26:08,050 --> 00:26:15,850
parameters the those kind of give you a

00:26:13,150 --> 00:26:19,680
really good idea about a common word

00:26:15,850 --> 00:26:22,300
coming up with the correct label sets

00:26:19,680 --> 00:26:24,160
and also something which you can do is

00:26:22,300 --> 00:26:26,740
you can work your way backwards you can

00:26:24,160 --> 00:26:28,920
you can think about how many services

00:26:26,740 --> 00:26:32,890
how many endpoints I'm I know whatever

00:26:28,920 --> 00:26:35,020
it's raping and then you can deduce by

00:26:32,890 --> 00:26:37,090
by how much your instance your

00:26:35,020 --> 00:26:39,730
community's instance can take how much

00:26:37,090 --> 00:26:43,480
space do I have if assuming certain

00:26:39,730 --> 00:26:46,060
growth for a total amount of labels to

00:26:43,480 --> 00:26:48,730
put on all my time series which gives

00:26:46,060 --> 00:26:50,350
you a rough indication of how many you

00:26:48,730 --> 00:26:57,460
can do which might help in determining

00:26:50,350 --> 00:27:03,250
what you and the other question was what

00:26:57,460 --> 00:27:07,290
problems can bad label introduce have

00:27:03,250 --> 00:27:10,150
the for starters the cardinality issue I

00:27:07,290 --> 00:27:14,890
already mentioned about that in the

00:27:10,150 --> 00:27:18,250
presentation I mean if you have a label

00:27:14,890 --> 00:27:21,640
value that is actually unbound and think

00:27:18,250 --> 00:27:24,000
like a request idea or something you can

00:27:21,640 --> 00:27:29,500
easily blow up your parameter system and

00:27:24,000 --> 00:27:31,660
one other thing is like I mean you may

00:27:29,500 --> 00:27:33,490
like Jenny in general you may end up

00:27:31,660 --> 00:27:35,560
with unnecessary labels that you don't

00:27:33,490 --> 00:27:37,330
use and you actually pay for as

00:27:35,560 --> 00:27:42,259
resources

00:27:37,330 --> 00:27:44,330
so that would be bad they blink think I

00:27:42,259 --> 00:27:47,090
can just come up come up with on top of

00:27:44,330 --> 00:27:50,179
my head but I'm sure there are more

00:27:47,090 --> 00:27:57,590
experienced people in here can also pop

00:27:50,179 --> 00:28:01,639
with this question so I think the final

00:27:57,590 --> 00:28:03,740
one question about satellites as allies

00:28:01,639 --> 00:28:07,159
which frameworks do you favor between

00:28:03,740 --> 00:28:10,220
wet or use method : signals and also

00:28:07,159 --> 00:28:12,799
there's a link from the SOE book which

00:28:10,220 --> 00:28:14,600
refer refers to availability latency

00:28:12,799 --> 00:28:17,059
quality versions correctness coverage

00:28:14,600 --> 00:28:22,820
and durability so which of those you

00:28:17,059 --> 00:28:26,830
person prefer for the services we must

00:28:22,820 --> 00:28:31,600
prefer the red one and if you are like

00:28:26,830 --> 00:28:35,360
trying to monitor or create alerts for

00:28:31,600 --> 00:28:39,590
things depend on resources we use use

00:28:35,360 --> 00:28:41,840
and I don't like these two kind of

00:28:39,590 --> 00:28:45,559
covers up for golden signals one so we

00:28:41,840 --> 00:28:50,000
preferred it first to come up with our

00:28:45,559 --> 00:28:55,100
alerts and dashboards and the other part

00:28:50,000 --> 00:28:57,409
of the question is yeah I mean there is

00:28:55,100 --> 00:29:00,490
also a good part in the documentation of

00:28:57,409 --> 00:29:03,649
primitives about coming up with the

00:29:00,490 --> 00:29:06,500
right amount of like what to instrument

00:29:03,649 --> 00:29:08,360
on depending on your workloads like if

00:29:06,500 --> 00:29:10,340
you are like working on online systems

00:29:08,360 --> 00:29:12,529
it's something else but if you are

00:29:10,340 --> 00:29:15,259
working on a batch processing system

00:29:12,529 --> 00:29:18,889
that you can focus on other aspects of

00:29:15,259 --> 00:29:23,110
those things you are just again refer to

00:29:18,889 --> 00:29:23,110
the Prometheus documentation for this

00:29:26,289 --> 00:29:29,289

YouTube URL: https://www.youtube.com/watch?v=Nqp4fjw_omU


