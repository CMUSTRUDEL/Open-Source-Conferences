Title: PromCon Online 2020 - Prometheus For Agile Ops Teams, Andrew Burian @ Dapper Labs
Publication date: 2020-07-23
Playlist: PromCon Online 2020
Description: 
	In this presentation we talk about Axiom Zen’s long and colourful history trying to find a working monitoring solution, and how eventually giving up the silver bullet and working with a vendor neutral solution that we could gradually build out into a complete pipeline was the right way to go.

We develop software in an agile fashion, delivering value incrementally, and pivoting as real requirements play out. So too should we build our monitoring. There exists no magic bullet for your metrics set up that will work for every team. Only time and hard fought lessons will enable teams to figure out what’s right for your specific case. So why is it that metrics pipeline set up and vendor selection feels like an all or nothing solution? Why do we guess for so long at our requirements, and then laboriously add in vendor specific code just to find in a few weeks, months, years, that you guessed wrong and actually your needs are better served in a different way. Come learn from some of our most painful lessons.
Captions: 
	00:00:01,770 --> 00:00:04,940
[Music]

00:00:15,679 --> 00:00:19,520
all right

00:00:16,480 --> 00:00:22,880
is this thing on can everyone hear me

00:00:19,520 --> 00:00:25,119
let's get started so this

00:00:22,880 --> 00:00:26,560
is prometheus for agile teams i'll be

00:00:25,119 --> 00:00:27,920
your host andrew bierian

00:00:26,560 --> 00:00:30,000
and in this talk we're talking about

00:00:27,920 --> 00:00:31,679
delivering value with prometheus

00:00:30,000 --> 00:00:33,200
enabling us to build monitoring systems

00:00:31,679 --> 00:00:33,920
the same way we build our software

00:00:33,200 --> 00:00:35,760
systems

00:00:33,920 --> 00:00:38,000
in an agile fashion changing

00:00:35,760 --> 00:00:41,760
requirements uncertain assumptions

00:00:38,000 --> 00:00:41,760
and continuously delivering value

00:00:42,320 --> 00:00:46,000
little prerequisite introduction about

00:00:44,480 --> 00:00:48,239
me i'm andrew

00:00:46,000 --> 00:00:49,039
um i'm the lead sre at a company called

00:00:48,239 --> 00:00:51,520
axiom zen

00:00:49,039 --> 00:00:52,399
and uh i've been involved in the design

00:00:51,520 --> 00:00:54,160
and creation of

00:00:52,399 --> 00:00:55,520
monitoring systems for every one of

00:00:54,160 --> 00:00:57,360
axiom's ends project

00:00:55,520 --> 00:00:58,879
for about the last three years we've

00:00:57,360 --> 00:01:00,079
been running prometheus in production as

00:00:58,879 --> 00:01:00,879
our standard choice for about three

00:01:00,079 --> 00:01:03,600
years now

00:01:00,879 --> 00:01:05,280
and i've helped oversee the launch of

00:01:03,600 --> 00:01:06,320
very successful projects complete

00:01:05,280 --> 00:01:08,080
failure projects

00:01:06,320 --> 00:01:10,320
very small projects and very large

00:01:08,080 --> 00:01:12,720
projects from kind of all over the

00:01:10,320 --> 00:01:14,240
spectrum of the software space

00:01:12,720 --> 00:01:15,759
um if you haven't heard vaccines in

00:01:14,240 --> 00:01:17,360
before you're not alone

00:01:15,759 --> 00:01:19,040
but you might notice might know us for

00:01:17,360 --> 00:01:21,360
one of our other portfolio companies

00:01:19,040 --> 00:01:23,759
if you use github we made zenhub if you

00:01:21,360 --> 00:01:25,759
use tabs and chrome we made toby

00:01:23,759 --> 00:01:27,439
most recently we're famous for crypto

00:01:25,759 --> 00:01:28,000
kitties we're the company behind dapper

00:01:27,439 --> 00:01:30,000
labs

00:01:28,000 --> 00:01:32,880
we made cheese wizards and most most

00:01:30,000 --> 00:01:34,320
recently nba top shop

00:01:32,880 --> 00:01:36,479
it's a lot of different projects it's a

00:01:34,320 --> 00:01:37,759
lot of different spaces and

00:01:36,479 --> 00:01:39,280
it's been really interesting to build

00:01:37,759 --> 00:01:41,040
this many different projects in this

00:01:39,280 --> 00:01:43,040
many different environments

00:01:41,040 --> 00:01:44,960
but throughout all this you learn that

00:01:43,040 --> 00:01:45,600
some things are constant in any of these

00:01:44,960 --> 00:01:47,600
projects

00:01:45,600 --> 00:01:49,439
regardless of the size or scale and i've

00:01:47,600 --> 00:01:51,920
found that how you build monitoring is

00:01:49,439 --> 00:01:51,920
one of them

00:01:52,000 --> 00:01:55,280
at some point in your monitoring life

00:01:54,159 --> 00:01:57,200
you will hear a question

00:01:55,280 --> 00:01:58,320
like this you need to be paying

00:01:57,200 --> 00:01:59,920
attention to when you

00:01:58,320 --> 00:02:01,119
when you build your monitoring where

00:01:59,920 --> 00:02:02,079
you're spending your time and effort

00:02:01,119 --> 00:02:04,479
because if you hear

00:02:02,079 --> 00:02:05,759
this question you should raise a flag

00:02:04,479 --> 00:02:07,200
when you hear this question you might be

00:02:05,759 --> 00:02:08,080
tempted to roll your eyes so hard you

00:02:07,200 --> 00:02:10,000
fall out of your chair

00:02:08,080 --> 00:02:11,840
because the answer is obviously yes do

00:02:10,000 --> 00:02:14,720
we need to be monitoring

00:02:11,840 --> 00:02:17,120
yes but if you survive the initial shock

00:02:14,720 --> 00:02:18,800
of having someone asking this question

00:02:17,120 --> 00:02:20,560
it's important to look past this and

00:02:18,800 --> 00:02:21,840
hear what the question actually is

00:02:20,560 --> 00:02:23,440
because it probably means

00:02:21,840 --> 00:02:25,280
your team is not getting the value out

00:02:23,440 --> 00:02:27,520
of your monitoring that they need to be

00:02:25,280 --> 00:02:29,920
the real question underneath this is

00:02:27,520 --> 00:02:32,000
what do we need to be monitoring

00:02:29,920 --> 00:02:34,319
we struggle a lot in all of our projects

00:02:32,000 --> 00:02:36,959
with the upfront cost of building

00:02:34,319 --> 00:02:37,920
proper monitoring and do we need to do

00:02:36,959 --> 00:02:40,000
this right now

00:02:37,920 --> 00:02:42,000
can we afford to cut this somewhere else

00:02:40,000 --> 00:02:43,680
apply the principle of measure which you

00:02:42,000 --> 00:02:45,280
measure what you care about and it makes

00:02:43,680 --> 00:02:46,800
it so much easier you stop measuring

00:02:45,280 --> 00:02:48,720
things you don't care about you cut off

00:02:46,800 --> 00:02:51,519
all the cpu graphs and app deck scores

00:02:48,720 --> 00:02:52,560
that really don't give you any value

00:02:51,519 --> 00:02:54,400
and you build things that people

00:02:52,560 --> 00:02:56,080
actually care about people do not want

00:02:54,400 --> 00:02:57,519
to build something they don't care about

00:02:56,080 --> 00:03:00,319
no one wants to work on a feature

00:02:57,519 --> 00:03:01,920
that no users use if you think about

00:03:00,319 --> 00:03:03,360
what you want to monitor and you monitor

00:03:01,920 --> 00:03:05,360
it you build good habits

00:03:03,360 --> 00:03:06,959
if you monitor kind of things at random

00:03:05,360 --> 00:03:08,000
it creates bad practices and that

00:03:06,959 --> 00:03:09,840
becomes a norm

00:03:08,000 --> 00:03:11,760
bad practices lead to projects that are

00:03:09,840 --> 00:03:13,920
painful to work on and impossible to

00:03:11,760 --> 00:03:15,120
debug

00:03:13,920 --> 00:03:17,519
you guys may have heard of this little

00:03:15,120 --> 00:03:19,360
thing called crypto case

00:03:17,519 --> 00:03:21,200
again if you haven't this was our foray

00:03:19,360 --> 00:03:22,239
into blockchain projects that got us

00:03:21,200 --> 00:03:24,239
started

00:03:22,239 --> 00:03:25,680
ethereum was but a young blockchain and

00:03:24,239 --> 00:03:27,519
we thought to ourselves what makes

00:03:25,680 --> 00:03:29,120
new technology successful we had the

00:03:27,519 --> 00:03:31,760
options of gambling

00:03:29,120 --> 00:03:33,440
porn or cats we didn't want to get a

00:03:31,760 --> 00:03:35,680
gambling license porn was kind of off

00:03:33,440 --> 00:03:37,200
the table so we made cats

00:03:35,680 --> 00:03:39,280
um we kind of expect it to be a little

00:03:37,200 --> 00:03:41,840
pet project it was a bit of good fun but

00:03:39,280 --> 00:03:42,799
god damn does the internet like cats

00:03:41,840 --> 00:03:45,360
like

00:03:42,799 --> 00:03:46,400
way way way more cats than we ever

00:03:45,360 --> 00:03:49,599
expected to produce

00:03:46,400 --> 00:03:51,200
in our lifetime we went from zero users

00:03:49,599 --> 00:03:53,040
and having contingency plans

00:03:51,200 --> 00:03:55,280
on what to do if no one showed up for

00:03:53,040 --> 00:03:57,920
our launch to being the largest ethereum

00:03:55,280 --> 00:03:59,760
contract in about the span of four days

00:03:57,920 --> 00:04:01,280
the graph here is the backlog of

00:03:59,760 --> 00:04:02,000
ethereum transactions waiting to be

00:04:01,280 --> 00:04:04,080
processed

00:04:02,000 --> 00:04:06,000
about four days in there was 20 000

00:04:04,080 --> 00:04:08,879
backlog transactions

00:04:06,000 --> 00:04:09,519
and we were getting some threats from um

00:04:08,879 --> 00:04:11,760
notable

00:04:09,519 --> 00:04:13,519
exchanges on ethereum for backlogging

00:04:11,760 --> 00:04:15,519
their work with cats

00:04:13,519 --> 00:04:16,880
um in all this we had the data from

00:04:15,519 --> 00:04:18,479
ethereum because someone had built that

00:04:16,880 --> 00:04:19,759
monitoring but we had no

00:04:18,479 --> 00:04:21,040
idea what was going on with our

00:04:19,759 --> 00:04:22,560
application we had no idea where the

00:04:21,040 --> 00:04:24,000
load was going to come from we hadn't

00:04:22,560 --> 00:04:25,520
built the monitoring up front because we

00:04:24,000 --> 00:04:27,280
did not think we would need it

00:04:25,520 --> 00:04:28,960
we had a smattering of app deck scores

00:04:27,280 --> 00:04:30,560
and error rates it just told us that

00:04:28,960 --> 00:04:32,080
everything was definitely definitely

00:04:30,560 --> 00:04:34,000
definitely on fire

00:04:32,080 --> 00:04:35,360
uh with no hope to hell of figuring out

00:04:34,000 --> 00:04:36,960
where it was coming from

00:04:35,360 --> 00:04:38,560
we did eventually recover cryptokitty

00:04:36,960 --> 00:04:40,960
survived and is still up today

00:04:38,560 --> 00:04:42,400
uh and we learned a big lesson about

00:04:40,960 --> 00:04:43,680
planning for success and building our

00:04:42,400 --> 00:04:45,520
monitoring up front

00:04:43,680 --> 00:04:47,280
and not taking do we need to monitor

00:04:45,520 --> 00:04:49,360
this it's just a little prototype as an

00:04:47,280 --> 00:04:50,240
answer for things

00:04:49,360 --> 00:04:53,600
so i'm going to walk you through an

00:04:50,240 --> 00:04:55,360
experiment stop if this sounds familiar

00:04:53,600 --> 00:04:57,040
you've got a project on the go and you

00:04:55,360 --> 00:05:00,160
go ah this is going to be

00:04:57,040 --> 00:05:01,680
the best thing we've ever built i need

00:05:00,160 --> 00:05:03,120
to monitor it obviously because you're

00:05:01,680 --> 00:05:04,960
an intelligent person

00:05:03,120 --> 00:05:06,479
and the question is how what are you

00:05:04,960 --> 00:05:08,000
going to use what tools are going to use

00:05:06,479 --> 00:05:10,160
how are you going to set it up

00:05:08,000 --> 00:05:11,280
you have to make a ton of assumptions in

00:05:10,160 --> 00:05:13,280
software development

00:05:11,280 --> 00:05:14,880
we make assumptions all the time and as

00:05:13,280 --> 00:05:16,160
an industry we're getting better at

00:05:14,880 --> 00:05:16,960
being explicit about making the

00:05:16,160 --> 00:05:18,560
assumptions

00:05:16,960 --> 00:05:19,919
we spend our time to write them down we

00:05:18,560 --> 00:05:21,280
have processes to catch them when

00:05:19,919 --> 00:05:22,800
they're wrong and correct them

00:05:21,280 --> 00:05:25,120
so we're pretty good at this in terms of

00:05:22,800 --> 00:05:26,880
our software development but

00:05:25,120 --> 00:05:28,880
monitoring tends to not get the same

00:05:26,880 --> 00:05:30,720
treatment it's still a software project

00:05:28,880 --> 00:05:32,080
you still have assumptions about what

00:05:30,720 --> 00:05:33,840
your data is going to be how much you

00:05:32,080 --> 00:05:35,759
need to monitor it where the bottlenecks

00:05:33,840 --> 00:05:37,680
are what's going to come from where but

00:05:35,759 --> 00:05:39,520
these assumptions aren't user

00:05:37,680 --> 00:05:41,120
so they tend to just slide under the

00:05:39,520 --> 00:05:43,600
radar so

00:05:41,120 --> 00:05:45,199
you're a bright cookie you know that you

00:05:43,600 --> 00:05:46,320
have to make assumptions about your data

00:05:45,199 --> 00:05:48,080
and you're pretty sure that you've done

00:05:46,320 --> 00:05:49,759
this before so you'll get them all right

00:05:48,080 --> 00:05:50,560
the first time so you think it out

00:05:49,759 --> 00:05:51,840
you know where your data is going to

00:05:50,560 --> 00:05:53,280
come from and you're like all right i

00:05:51,840 --> 00:05:55,520
got this

00:05:53,280 --> 00:05:56,960
it's still a big decision to decide what

00:05:55,520 --> 00:05:58,479
your monitoring tool is going to be

00:05:56,960 --> 00:06:00,240
so again you're a smart deliberate

00:05:58,479 --> 00:06:01,039
careful developer you can write a proof

00:06:00,240 --> 00:06:02,880
of concept

00:06:01,039 --> 00:06:04,240
we all know that the proof of concept

00:06:02,880 --> 00:06:05,919
piece of software you build

00:06:04,240 --> 00:06:07,759
always is just a miniature version of

00:06:05,919 --> 00:06:08,560
the final product it's the same thing

00:06:07,759 --> 00:06:10,319
all the way up

00:06:08,560 --> 00:06:12,240
and you're ready to go so you bang up

00:06:10,319 --> 00:06:13,199
your little poc you got some metrics

00:06:12,240 --> 00:06:14,240
plumbed through it

00:06:13,199 --> 00:06:16,800
now you're ready to start experimenting

00:06:14,240 --> 00:06:18,880
with vendors so you get a monitoring

00:06:16,800 --> 00:06:20,560
tool in there you slap on your poc

00:06:18,880 --> 00:06:22,319
it goes yep that looks right you're all

00:06:20,560 --> 00:06:23,759
hunky-dory uh

00:06:22,319 --> 00:06:25,440
let's go ahead you've done your due

00:06:23,759 --> 00:06:26,080
diligence let's go get signed to the

00:06:25,440 --> 00:06:28,319
vendor

00:06:26,080 --> 00:06:29,360
your vendor is smiling at you waiting

00:06:28,319 --> 00:06:30,800
for you to sign up

00:06:29,360 --> 00:06:32,000
so you go ahead and write the contract

00:06:30,800 --> 00:06:33,280
you've chosen your tool for the next

00:06:32,000 --> 00:06:35,520
three years

00:06:33,280 --> 00:06:36,400
you sign a three-year deal with new dog

00:06:35,520 --> 00:06:38,080
monitoring

00:06:36,400 --> 00:06:40,240
your vp is happy because hey that's a

00:06:38,080 --> 00:06:42,319
check box off your off your uh

00:06:40,240 --> 00:06:44,240
pre-launch list finance gets a sweet

00:06:42,319 --> 00:06:46,240
deal to sign that three-year contract

00:06:44,240 --> 00:06:47,280
everything works exactly right the first

00:06:46,240 --> 00:06:49,360
time

00:06:47,280 --> 00:06:50,479
except the devs are all really really

00:06:49,360 --> 00:06:53,599
angry

00:06:50,479 --> 00:06:55,199
all the time and oh we have this edge

00:06:53,599 --> 00:06:58,160
case we didn't account for

00:06:55,199 --> 00:06:58,960
we can probably work around it the data

00:06:58,160 --> 00:07:00,800
volumes

00:06:58,960 --> 00:07:02,319
way larger than we expected because we

00:07:00,800 --> 00:07:03,120
accidentally put cats in the blockchain

00:07:02,319 --> 00:07:05,280
again

00:07:03,120 --> 00:07:07,039
i mean we can work around it but the

00:07:05,280 --> 00:07:08,960
sales guy is also like hanging out in my

00:07:07,039 --> 00:07:10,800
backyard i guess we can just buy more

00:07:08,960 --> 00:07:12,479
space from him do we really need to

00:07:10,800 --> 00:07:14,000
monitor the database right now or can we

00:07:12,479 --> 00:07:16,319
cut that back a bit

00:07:14,000 --> 00:07:17,759
uh the data model doesn't actually quite

00:07:16,319 --> 00:07:19,840
match where the products landed

00:07:17,759 --> 00:07:21,199
a year down the road we only have two

00:07:19,840 --> 00:07:22,960
more years left in this contract can we

00:07:21,199 --> 00:07:25,360
just make it work

00:07:22,960 --> 00:07:26,319
so shockingly your assumptions turn out

00:07:25,360 --> 00:07:29,360
to be wrong

00:07:26,319 --> 00:07:30,639
some of the time all the time every time

00:07:29,360 --> 00:07:31,840
we've learned this as an industry

00:07:30,639 --> 00:07:33,440
software designed with rigid

00:07:31,840 --> 00:07:35,360
requirements upfront

00:07:33,440 --> 00:07:36,560
never is going to survive contact with

00:07:35,360 --> 00:07:38,400
the real world

00:07:36,560 --> 00:07:39,680
in the best case your assumptions are

00:07:38,400 --> 00:07:41,680
close and you just

00:07:39,680 --> 00:07:43,520
slightly regret some of the decisions

00:07:41,680 --> 00:07:45,280
imposed by the tools you're working on

00:07:43,520 --> 00:07:46,960
some of the restrictions you can't quite

00:07:45,280 --> 00:07:48,720
get around the way you want

00:07:46,960 --> 00:07:50,240
in the worst case you gotta bail out of

00:07:48,720 --> 00:07:51,840
that contract six months into it

00:07:50,240 --> 00:07:53,360
you gotta redo all your proof of concept

00:07:51,840 --> 00:07:54,000
work the vp of engineering is breathing

00:07:53,360 --> 00:07:56,960
down your neck

00:07:54,000 --> 00:07:57,440
it's just not a good time we never do

00:07:56,960 --> 00:07:59,039
this

00:07:57,440 --> 00:08:00,720
being the intelligent developers we are

00:07:59,039 --> 00:08:02,240
and we certainly never did this on a

00:08:00,720 --> 00:08:04,639
little project the international fencing

00:08:02,240 --> 00:08:06,400
federation we did a couple years ago

00:08:04,639 --> 00:08:08,160
um it's a cool project if you're a fan

00:08:06,400 --> 00:08:09,919
of fencing um the fia has got a neat

00:08:08,160 --> 00:08:11,440
site now and a brand new web app

00:08:09,919 --> 00:08:12,720
i don't we don't maintain it or anything

00:08:11,440 --> 00:08:13,840
we just kind of built it and gave it to

00:08:12,720 --> 00:08:15,360
them but there's something to be said

00:08:13,840 --> 00:08:17,520
about a sport where you stab your

00:08:15,360 --> 00:08:20,639
opponents so go take a look

00:08:17,520 --> 00:08:21,280
um the fie is a very grand traditional

00:08:20,639 --> 00:08:23,039
structure

00:08:21,280 --> 00:08:24,960
it's a very traditional project very

00:08:23,039 --> 00:08:26,160
traditional timeline very traditional

00:08:24,960 --> 00:08:29,440
deliverables document

00:08:26,160 --> 00:08:30,639
and we fell into the very very easy trap

00:08:29,440 --> 00:08:34,080
of designing and delivering the

00:08:30,639 --> 00:08:35,919
monitoring in exactly the same way

00:08:34,080 --> 00:08:37,200
we collected the requirements up front

00:08:35,919 --> 00:08:38,399
designed it on paper

00:08:37,200 --> 00:08:40,320
it was going to be delivered at the end

00:08:38,399 --> 00:08:42,560
it was going to be perfect

00:08:40,320 --> 00:08:44,080
we got about 30 of the way into the

00:08:42,560 --> 00:08:46,240
project before i realized what a

00:08:44,080 --> 00:08:47,839
terrible mistake that we've made and

00:08:46,240 --> 00:08:49,279
regretted the whole thing

00:08:47,839 --> 00:08:51,200
i'm still proud of the final product

00:08:49,279 --> 00:08:52,480
i'll have you know but the panic

00:08:51,200 --> 00:08:54,080
iteration that we had to do in the

00:08:52,480 --> 00:08:55,760
middle of the project i'm a little less

00:08:54,080 --> 00:08:58,399
proud about

00:08:55,760 --> 00:09:00,240
really as an industry we've learned this

00:08:58,399 --> 00:09:02,560
this is waterfall development

00:09:00,240 --> 00:09:04,320
this is agile development the principles

00:09:02,560 --> 00:09:06,080
of agile development at this point

00:09:04,320 --> 00:09:08,320
should be second nature all of us

00:09:06,080 --> 00:09:10,320
continuously deliver valuable software

00:09:08,320 --> 00:09:11,600
welcome changing requirements simplicity

00:09:10,320 --> 00:09:13,600
above all else

00:09:11,600 --> 00:09:15,600
we've centered so much of our industry

00:09:13,600 --> 00:09:16,959
around like these principles and how to

00:09:15,600 --> 00:09:18,720
do these things

00:09:16,959 --> 00:09:20,160
it's amazing that we just throw them out

00:09:18,720 --> 00:09:21,360
when it comes to designing monitoring

00:09:20,160 --> 00:09:22,640
systems

00:09:21,360 --> 00:09:24,720
so how can we build our monitoring

00:09:22,640 --> 00:09:26,720
systems the same way that we build agile

00:09:24,720 --> 00:09:28,399
software

00:09:26,720 --> 00:09:30,560
so let's pretend that the monitoring is

00:09:28,399 --> 00:09:32,240
a service we deliver to our customers

00:09:30,560 --> 00:09:33,680
the dev team if you're a big enough

00:09:32,240 --> 00:09:35,360
organization like

00:09:33,680 --> 00:09:36,959
ours we have a dedicated sre that

00:09:35,360 --> 00:09:38,240
provides this infrastructure this may

00:09:36,959 --> 00:09:40,240
literally be your case

00:09:38,240 --> 00:09:41,279
in which case congratulations you got a

00:09:40,240 --> 00:09:42,640
heck of a team

00:09:41,279 --> 00:09:44,240
but this is still a really good

00:09:42,640 --> 00:09:45,920
framework to work in even if you're

00:09:44,240 --> 00:09:47,120
small enough that the devs are the same

00:09:45,920 --> 00:09:48,000
people have to build the monitoring

00:09:47,120 --> 00:09:49,680
stack

00:09:48,000 --> 00:09:52,240
treat it like a separate project that

00:09:49,680 --> 00:09:54,160
has to be delivered unto you

00:09:52,240 --> 00:09:55,920
and so with any project we have to get

00:09:54,160 --> 00:09:57,279
something going to get it out the door

00:09:55,920 --> 00:09:58,000
especially since you're blocking

00:09:57,279 --> 00:10:00,399
production

00:09:58,000 --> 00:10:02,240
for this deliver the mvp of the product

00:10:00,399 --> 00:10:04,399
as soon as possible

00:10:02,240 --> 00:10:07,279
the smallest full stack slice of

00:10:04,399 --> 00:10:08,720
functionality that starts to do your job

00:10:07,279 --> 00:10:10,480
your requirements will change no

00:10:08,720 --> 00:10:11,760
assumptions will hold you've got a plan

00:10:10,480 --> 00:10:15,440
for it you have to build

00:10:11,760 --> 00:10:16,880
the first prototype and get it started

00:10:15,440 --> 00:10:18,560
this is the part where it actually

00:10:16,880 --> 00:10:19,519
becomes a prometheus talk because

00:10:18,560 --> 00:10:21,519
prometheus

00:10:19,519 --> 00:10:23,360
lets us do a lot of interesting things

00:10:21,519 --> 00:10:24,000
with these assumptions and these

00:10:23,360 --> 00:10:28,640
requirements

00:10:24,000 --> 00:10:30,880
in mind the pull model for data

00:10:28,640 --> 00:10:33,120
divorces the concerns of producing the

00:10:30,880 --> 00:10:34,480
metrics from the collection storage

00:10:33,120 --> 00:10:35,360
processing that comes later down the

00:10:34,480 --> 00:10:38,560
pipeline

00:10:35,360 --> 00:10:39,279
this means that you can just start and

00:10:38,560 --> 00:10:40,959
you can change

00:10:39,279 --> 00:10:42,480
all of that system later without having

00:10:40,959 --> 00:10:44,240
to change the bit that produces the

00:10:42,480 --> 00:10:45,360
metrics let the devs do the metrics

00:10:44,240 --> 00:10:48,800
problem and let you

00:10:45,360 --> 00:10:50,480
build the monitoring system later

00:10:48,800 --> 00:10:52,640
as a slight side note this is in my

00:10:50,480 --> 00:10:53,120
opinion what open tracing gets a bit

00:10:52,640 --> 00:10:55,279
wrong

00:10:53,120 --> 00:10:56,880
where you have to compile the open

00:10:55,279 --> 00:10:58,160
tracing tracer into

00:10:56,880 --> 00:11:00,560
your program if you want to change it

00:10:58,160 --> 00:11:01,920
you got to recompile it it's a side note

00:11:00,560 --> 00:11:04,880
but open tracing please

00:11:01,920 --> 00:11:04,880
why did you do this to us

00:11:05,040 --> 00:11:09,440
anyway uh the default prometheus

00:11:07,200 --> 00:11:11,279
libraries in most languages are not

00:11:09,440 --> 00:11:13,200
flashy to be perfectly honest we work in

00:11:11,279 --> 00:11:14,480
go the go libraries are acceptable they

00:11:13,200 --> 00:11:17,839
give you code routines

00:11:14,480 --> 00:11:19,519
they work the prometheus server has that

00:11:17,839 --> 00:11:22,079
built-in metrics explorer

00:11:19,519 --> 00:11:23,760
is ugly as sim yes it's really really

00:11:22,079 --> 00:11:24,560
really is and the react version is not

00:11:23,760 --> 00:11:27,440
that much better

00:11:24,560 --> 00:11:28,560
but it does let you explore your metrics

00:11:27,440 --> 00:11:31,440
from day one

00:11:28,560 --> 00:11:32,959
you plunk it down it's good to go so you

00:11:31,440 --> 00:11:34,560
toss it in the container and you chuck

00:11:32,959 --> 00:11:37,120
it into production and there you go you

00:11:34,560 --> 00:11:40,000
have the mvp of your metric stack

00:11:37,120 --> 00:11:41,760
that alone is your first deliverable

00:11:40,000 --> 00:11:42,399
prometheus comes out of the box ready to

00:11:41,760 --> 00:11:43,920
deliver that

00:11:42,399 --> 00:11:45,360
and you're ready to go the devs can

00:11:43,920 --> 00:11:46,880
start using it and they can start

00:11:45,360 --> 00:11:48,320
iterating on their metrics while you're

00:11:46,880 --> 00:11:49,600
working on building

00:11:48,320 --> 00:11:52,240
whatever it is it's going to ingest your

00:11:49,600 --> 00:11:54,959
metrics later

00:11:52,240 --> 00:11:56,320
we built a blockchain because we're

00:11:54,959 --> 00:11:58,639
sadists um

00:11:56,320 --> 00:11:59,839
and we hate ourselves but also because

00:11:58,639 --> 00:12:01,360
it's a fun project

00:11:59,839 --> 00:12:03,680
um and when developing the flow

00:12:01,360 --> 00:12:06,000
blockchain developers need to test like

00:12:03,680 --> 00:12:09,279
a half a dozen different test networks

00:12:06,000 --> 00:12:11,440
at the same time at once 300 nodes

00:12:09,279 --> 00:12:13,519
running in gcp regions across the world

00:12:11,440 --> 00:12:15,120
and they want to collect metrics from it

00:12:13,519 --> 00:12:16,399
we decided that prometheus was pretty

00:12:15,120 --> 00:12:17,839
much the only logical choice for

00:12:16,399 --> 00:12:18,880
instrumenting this code base since it

00:12:17,839 --> 00:12:20,480
was going to be run by

00:12:18,880 --> 00:12:22,560
who knows where down the line and

00:12:20,480 --> 00:12:26,959
everyone will ingest prometheus metrics

00:12:22,560 --> 00:12:29,200
so we went prometheus top to bottom um

00:12:26,959 --> 00:12:30,800
prometheus server set up with the gcp

00:12:29,200 --> 00:12:33,279
instance discovery plugin

00:12:30,800 --> 00:12:34,000
which is again built in was an instant

00:12:33,279 --> 00:12:36,959
mvp

00:12:34,000 --> 00:12:38,800
for full functioning monitoring before

00:12:36,959 --> 00:12:40,480
i'd even thought about how

00:12:38,800 --> 00:12:41,920
robust collection of prometheus metric

00:12:40,480 --> 00:12:42,959
was going to work we just plunked one of

00:12:41,920 --> 00:12:44,959
those boxes down

00:12:42,959 --> 00:12:46,959
set it going it was ugly as sin and the

00:12:44,959 --> 00:12:48,639
devs could use it day one

00:12:46,959 --> 00:12:50,079
and then they shared their screenshots

00:12:48,639 --> 00:12:51,040
in slack as their way of communicating

00:12:50,079 --> 00:12:52,800
metrics because

00:12:51,040 --> 00:12:54,320
the prometheus urls are ugly to sit and

00:12:52,800 --> 00:12:55,040
take up the entire page of text and

00:12:54,320 --> 00:12:58,720
slack but

00:12:55,040 --> 00:13:01,440
it worked and

00:12:58,720 --> 00:13:03,040
they let them iterate it let them learn

00:13:01,440 --> 00:13:04,399
what metrics were useful to them what

00:13:03,040 --> 00:13:06,320
metrics weren't what they were actually

00:13:04,399 --> 00:13:08,480
trying to monitor and meanwhile the sra

00:13:06,320 --> 00:13:10,959
team was working up on the grafana

00:13:08,480 --> 00:13:12,800
cortex hybrid monstrosity for proper

00:13:10,959 --> 00:13:14,240
long-term storage of this

00:13:12,800 --> 00:13:15,920
so when that actually comes up and is

00:13:14,240 --> 00:13:20,240
ready we'll be ready for now

00:13:15,920 --> 00:13:23,120
they're happy one of the unspoken

00:13:20,240 --> 00:13:24,560
tenets of i think not necessarily agile

00:13:23,120 --> 00:13:25,120
development but software development in

00:13:24,560 --> 00:13:26,560
general

00:13:25,120 --> 00:13:29,360
that i think doesn't get enough credit

00:13:26,560 --> 00:13:31,040
is that you should always

00:13:29,360 --> 00:13:33,120
build your applications anticipating for

00:13:31,040 --> 00:13:34,480
some success don't build crypto kitties

00:13:33,120 --> 00:13:36,720
where you expect it to fail

00:13:34,480 --> 00:13:39,519
build it expecting to two times or five

00:13:36,720 --> 00:13:42,560
times your usage if everything goes well

00:13:39,519 --> 00:13:44,880
but you can't and you should not assume

00:13:42,560 --> 00:13:46,639
that your system will survive a 50-fold

00:13:44,880 --> 00:13:48,560
increase in usage or a hundred-fold

00:13:46,639 --> 00:13:49,760
increase in usage or a thousand-fold

00:13:48,560 --> 00:13:51,680
increase in usage

00:13:49,760 --> 00:13:53,839
you're always going to have to radically

00:13:51,680 --> 00:13:55,760
change if that problem which is a good

00:13:53,839 --> 00:13:57,839
problem happens

00:13:55,760 --> 00:13:59,199
if yeah the things that worked for you

00:13:57,839 --> 00:13:59,680
on day one it might be good for you on

00:13:59,199 --> 00:14:01,680
day two

00:13:59,680 --> 00:14:03,040
those assumptions don't apply 100 days

00:14:01,680 --> 00:14:04,480
down at some point

00:14:03,040 --> 00:14:06,079
you should consider a completely

00:14:04,480 --> 00:14:07,760
different solution

00:14:06,079 --> 00:14:09,199
you can start in prometheus with just a

00:14:07,760 --> 00:14:09,920
standalone server running on a virtual

00:14:09,199 --> 00:14:11,360
machine

00:14:09,920 --> 00:14:13,279
and graduate yourself up to a

00:14:11,360 --> 00:14:15,120
multi-redundant polling instance pushing

00:14:13,279 --> 00:14:15,839
the cortex solving world hunger whatever

00:14:15,120 --> 00:14:17,839
you need it to do

00:14:15,839 --> 00:14:21,279
later when you actually need it and when

00:14:17,839 --> 00:14:23,279
the project actually has lags under it

00:14:21,279 --> 00:14:24,720
we built another project called toby for

00:14:23,279 --> 00:14:26,480
tabs that was

00:14:24,720 --> 00:14:27,920
a fun chrome plugin that turns your tabs

00:14:26,480 --> 00:14:30,880
into sort of a trello board

00:14:27,920 --> 00:14:32,320
of issues this was another surprise

00:14:30,880 --> 00:14:34,160
success because it turns out people have

00:14:32,320 --> 00:14:36,000
a lot a lot of chrome tabs

00:14:34,160 --> 00:14:37,839
and unlike cryptokitties it wasn't

00:14:36,000 --> 00:14:39,360
bottlenecked by a blockchain to hold it

00:14:37,839 --> 00:14:41,040
back and we could just blame ethereum

00:14:39,360 --> 00:14:42,800
for all of its woes

00:14:41,040 --> 00:14:45,839
we came out of the gate with toby for

00:14:42,800 --> 00:14:47,680
tabs with a 200 person beta

00:14:45,839 --> 00:14:50,800
group that we then opened up the public

00:14:47,680 --> 00:14:53,920
and within about 15 days we had a 100

00:14:50,800 --> 00:14:55,680
000 users that never grew to 200 000 in

00:14:53,920 --> 00:14:56,639
the course of the first few weeks after

00:14:55,680 --> 00:14:59,680
public launch

00:14:56,639 --> 00:15:01,680
and everything was on fire all the time

00:14:59,680 --> 00:15:03,839
we spent a lot of work trying to

00:15:01,680 --> 00:15:05,360
refactor that code base and trying to

00:15:03,839 --> 00:15:07,600
figure out how to heck to make it more

00:15:05,360 --> 00:15:09,199
performant with this sudden hundredfold

00:15:07,600 --> 00:15:11,279
increase in traffic thousandfold

00:15:09,199 --> 00:15:12,320
increase in traffic

00:15:11,279 --> 00:15:14,000
one of the things that suffered

00:15:12,320 --> 00:15:14,800
excessively was the logging and

00:15:14,000 --> 00:15:16,959
monitoring

00:15:14,800 --> 00:15:19,279
we had built our logging and monitoring

00:15:16,959 --> 00:15:20,320
systems to debug issues with a 200

00:15:19,279 --> 00:15:22,079
person test group

00:15:20,320 --> 00:15:23,360
that was with bread and butter it did it

00:15:22,079 --> 00:15:25,279
really really well

00:15:23,360 --> 00:15:27,360
when there was 200 000 users it

00:15:25,279 --> 00:15:29,759
completely pancaked under the load

00:15:27,360 --> 00:15:31,199
we spent probably honestly an

00:15:29,759 --> 00:15:33,120
embarrassing amount of time

00:15:31,199 --> 00:15:34,880
trying to refactor the monitoring system

00:15:33,120 --> 00:15:35,680
to handle the load and eventually we

00:15:34,880 --> 00:15:37,920
just gave up

00:15:35,680 --> 00:15:39,279
we threw the whole monitoring stack out

00:15:37,920 --> 00:15:41,600
rewrote it top to bottom

00:15:39,279 --> 00:15:42,720
and it worked so much better the

00:15:41,600 --> 00:15:45,839
problems that you have

00:15:42,720 --> 00:15:47,360
when you're a 200 person project does

00:15:45,839 --> 00:15:49,839
not apply when you're 200

00:15:47,360 --> 00:15:52,839
000 expect to have to work in the agile

00:15:49,839 --> 00:15:54,880
fashion where you start over and do it

00:15:52,839 --> 00:15:56,880
again on the final note

00:15:54,880 --> 00:15:58,880
a slightly perhaps more contentious note

00:15:56,880 --> 00:16:00,639
is um i don't like vendors

00:15:58,880 --> 00:16:02,720
i spend a lot of my time negotiating

00:16:00,639 --> 00:16:03,279
deals with vendors and i find it a gross

00:16:02,720 --> 00:16:04,720
process

00:16:03,279 --> 00:16:07,120
i don't like asking for deals they don't

00:16:04,720 --> 00:16:09,360
like giving me deals it's a whole thing

00:16:07,120 --> 00:16:11,040
um the good news about prometheus and

00:16:09,360 --> 00:16:12,959
that separation of the production of

00:16:11,040 --> 00:16:14,320
metrics from the consumption of metrics

00:16:12,959 --> 00:16:16,399
is you're now a strong independent

00:16:14,320 --> 00:16:18,399
application you don't need no vendor

00:16:16,399 --> 00:16:19,839
prometheus format or the openmetrics

00:16:18,399 --> 00:16:23,759
format if you're living in

00:16:19,839 --> 00:16:25,120
2030 watching this talk then hopefully

00:16:23,759 --> 00:16:27,279
the prometheus format at least is

00:16:25,120 --> 00:16:28,480
ubiquitous if a vendor doesn't support

00:16:27,279 --> 00:16:30,000
it you really have no reason to go with

00:16:28,480 --> 00:16:32,000
that vendor and the vendor has no excuse

00:16:30,000 --> 00:16:34,320
not to be supporting it by now

00:16:32,000 --> 00:16:36,399
um so your vendor will support permit

00:16:34,320 --> 00:16:38,079
his format so you can send it to them

00:16:36,399 --> 00:16:39,839
and if you're a product ingesting

00:16:38,079 --> 00:16:40,880
prometheus metrics there's nothing to

00:16:39,839 --> 00:16:42,399
keep you from sort of

00:16:40,880 --> 00:16:44,480
you know playing the field they don't

00:16:42,399 --> 00:16:44,959
need to know you know dabble around a

00:16:44,480 --> 00:16:47,120
bit

00:16:44,959 --> 00:16:48,560
do with two products at once when i was

00:16:47,120 --> 00:16:49,920
doing the flow overhaul

00:16:48,560 --> 00:16:51,600
going from the standalone previous

00:16:49,920 --> 00:16:53,040
instance to our full version i didn't

00:16:51,600 --> 00:16:54,320
shut down the existing one we just

00:16:53,040 --> 00:16:56,959
collected the metrics twice

00:16:54,320 --> 00:16:58,480
you can do that don't be afraid to play

00:16:56,959 --> 00:17:00,480
around and

00:16:58,480 --> 00:17:01,759
seek out a tool that better fits your

00:17:00,480 --> 00:17:03,519
needs

00:17:01,759 --> 00:17:05,760
in all again the same principle applies

00:17:03,519 --> 00:17:08,000
where when you have to 10x your product

00:17:05,760 --> 00:17:09,439
or your assumptions have all changed

00:17:08,000 --> 00:17:12,079
change your change your stack

00:17:09,439 --> 00:17:14,000
change your vendors they can deal with

00:17:12,079 --> 00:17:15,439
it

00:17:14,000 --> 00:17:17,199
that's all the time i have that's all

00:17:15,439 --> 00:17:18,959
the content i have

00:17:17,199 --> 00:17:20,559
and that's uh probably more than my pay

00:17:18,959 --> 00:17:22,240
grade anyways so

00:17:20,559 --> 00:17:24,000
i've been andrew this has been

00:17:22,240 --> 00:17:26,240
prometheus for agile teams

00:17:24,000 --> 00:17:28,240
uh also we use prometheus you use

00:17:26,240 --> 00:17:31,840
prometheus we all like prometheus

00:17:28,240 --> 00:17:34,320
if you want a job look me up have fun

00:17:31,840 --> 00:17:34,320
thanks kids

00:17:38,240 --> 00:17:44,400
awesome uh we have andrew on the call

00:17:42,000 --> 00:17:46,160
uh if people have questions throw them

00:17:44,400 --> 00:17:49,760
in the q a system

00:17:46,160 --> 00:17:52,640
or maybe ask them on slack let us know

00:17:49,760 --> 00:17:52,640
what do we got first

00:17:59,600 --> 00:18:03,039
is it really going to take us until 2030

00:18:01,440 --> 00:18:05,679
to get open metrics done

00:18:03,039 --> 00:18:05,679
i hope not

00:18:10,000 --> 00:18:15,840
2031 due to covert

00:18:23,360 --> 00:18:29,840
yeah i'm here

00:18:29,919 --> 00:18:33,840
can you guys hear me yep we can hear you

00:18:31,919 --> 00:18:42,080
just fine

00:18:33,840 --> 00:18:43,280
i don't see any questions uh yet

00:18:42,080 --> 00:18:45,679
richie or brian do you have any good

00:18:43,280 --> 00:18:45,679
questions

00:18:54,000 --> 00:18:59,600
uh i'll start out i'll i'll do one uh

00:18:57,280 --> 00:19:01,679
how do you handle when when people are

00:18:59,600 --> 00:19:04,720
resistant to

00:19:01,679 --> 00:19:08,240
uh doing things in an agile way

00:19:04,720 --> 00:19:09,600
uh people people who want the

00:19:08,240 --> 00:19:11,520
how do you deal with people who want the

00:19:09,600 --> 00:19:12,160
giant plan in front of them uh you know

00:19:11,520 --> 00:19:15,280
like

00:19:12,160 --> 00:19:17,360
nasa grade planning as i call it

00:19:15,280 --> 00:19:19,039
yeah i mean i'm uh i'm definitely guilty

00:19:17,360 --> 00:19:19,360
of that where i like the i like having

00:19:19,039 --> 00:19:21,280
the

00:19:19,360 --> 00:19:23,039
nasa grade plan in front of me i really

00:19:21,280 --> 00:19:24,640
have to force myself to treat things

00:19:23,039 --> 00:19:27,360
agile sometimes

00:19:24,640 --> 00:19:27,840
um the most compelling thing that we've

00:19:27,360 --> 00:19:30,240
found

00:19:27,840 --> 00:19:32,000
is if you make that mistake once and you

00:19:30,240 --> 00:19:33,760
actually are good at collecting

00:19:32,000 --> 00:19:35,679
not metrics data but data in terms of

00:19:33,760 --> 00:19:36,960
the process you can really

00:19:35,679 --> 00:19:39,120
really clearly lay it out in front of

00:19:36,960 --> 00:19:40,720
people next time that like hey this

00:19:39,120 --> 00:19:42,400
worked great on paper but really really

00:19:40,720 --> 00:19:43,760
hurt us down the road and i think once

00:19:42,400 --> 00:19:44,720
people have sort of made that mistake

00:19:43,760 --> 00:19:46,480
once and then tried

00:19:44,720 --> 00:19:47,600
the better version you benefit a lot

00:19:46,480 --> 00:19:48,559
from it it's super easy to convince

00:19:47,600 --> 00:19:49,840
people

00:19:48,559 --> 00:19:51,679
and if you don't want to have to make

00:19:49,840 --> 00:19:53,200
that mistake once the first time as

00:19:51,679 --> 00:19:54,640
you should there's lots of people out

00:19:53,200 --> 00:19:56,080
there that have tons of shared

00:19:54,640 --> 00:19:58,960
experiences they're willing to put on

00:19:56,080 --> 00:20:00,240
prom contacts for the world to see um

00:19:58,960 --> 00:20:02,080
and then it's much uh

00:20:00,240 --> 00:20:03,280
it's much it's much easier to yeah if

00:20:02,080 --> 00:20:04,640
you build up a body of evidence that

00:20:03,280 --> 00:20:06,320
says like this does work and here's

00:20:04,640 --> 00:20:08,080
lived experience that's close to ours

00:20:06,320 --> 00:20:08,880
it's pretty easy to get people to sort

00:20:08,080 --> 00:20:11,679
of see the light

00:20:08,880 --> 00:20:13,280
and also if you you can pitch it as

00:20:11,679 --> 00:20:17,360
saving the upfront planning work

00:20:13,280 --> 00:20:19,679
which uh people do like a lot

00:20:17,360 --> 00:20:21,200
there's a one question in the chat why

00:20:19,679 --> 00:20:23,280
no graffana that seems like really low

00:20:21,200 --> 00:20:23,919
hanging fruit here uh we do actually use

00:20:23,280 --> 00:20:27,039
grafana

00:20:23,919 --> 00:20:28,400
um as of i mean i think i think the fie

00:20:27,039 --> 00:20:29,919
project was the last project we did that

00:20:28,400 --> 00:20:31,280
did not have grafana on it we started

00:20:29,919 --> 00:20:33,440
using um

00:20:31,280 --> 00:20:34,960
uh we started using grafana for

00:20:33,440 --> 00:20:36,159
everything down the road from there all

00:20:34,960 --> 00:20:37,120
the uh all the flow stuff is going

00:20:36,159 --> 00:20:38,720
through grafana

00:20:37,120 --> 00:20:41,200
yeah it's it's exceptionally low hanging

00:20:38,720 --> 00:20:42,559
fruit um i like the product a lot i'm

00:20:41,200 --> 00:20:43,600
not gonna hawk it much more than that

00:20:42,559 --> 00:20:44,320
because everyone here probably knows

00:20:43,600 --> 00:20:46,320
grafana

00:20:44,320 --> 00:20:47,679
uh but i wanted to really drill home the

00:20:46,320 --> 00:20:49,280
point that like no

00:20:47,679 --> 00:20:50,720
like whatever your vendor needs are if

00:20:49,280 --> 00:20:52,080
you happen to be involved already with

00:20:50,720 --> 00:20:53,280
datadog you have to be involved with new

00:20:52,080 --> 00:20:54,640
relic or you happen to have a big plan

00:20:53,280 --> 00:20:56,559
with grafana it's going to work for you

00:20:54,640 --> 00:20:58,720
regardless if prometheus is there

00:20:56,559 --> 00:20:59,919
and yeah your fund is great for starting

00:20:58,720 --> 00:21:00,880
off because their plan their starter

00:20:59,919 --> 00:21:03,120
plan is quite cheap

00:21:00,880 --> 00:21:04,320
but the other vendor is not so much so

00:21:03,120 --> 00:21:05,200
starting with previous server and

00:21:04,320 --> 00:21:07,760
deciding what you need

00:21:05,200 --> 00:21:10,240
is sort of the the way i like to tackle

00:21:07,760 --> 00:21:12,000
that so

00:21:10,240 --> 00:21:13,679
uh one more question that was in there

00:21:12,000 --> 00:21:15,679
was um do you find the

00:21:13,679 --> 00:21:17,520
hash mod installation too complicated to

00:21:15,679 --> 00:21:20,159
implement

00:21:17,520 --> 00:21:21,360
the hash one slice too complicated uh

00:21:20,159 --> 00:21:24,320
through us for a loop

00:21:21,360 --> 00:21:24,960
uh at first um i don't actually use it

00:21:24,320 --> 00:21:26,720
that much

00:21:24,960 --> 00:21:28,840
so i can't actually weigh in super

00:21:26,720 --> 00:21:31,760
deeply on the hashmon stuff

00:21:28,840 --> 00:21:33,360
um yeah i think i think most

00:21:31,760 --> 00:21:34,880
most of the complicated features that

00:21:33,360 --> 00:21:35,440
are in any monitoring pipeline i've

00:21:34,880 --> 00:21:37,760
found that

00:21:35,440 --> 00:21:39,039
aren't needed for the mvp so you kind of

00:21:37,760 --> 00:21:40,159
you've got all of those things you can

00:21:39,039 --> 00:21:41,600
collectively cut out

00:21:40,159 --> 00:21:43,919
again this is the advantage of trying to

00:21:41,600 --> 00:21:45,360
do just the minimum of what you need uh

00:21:43,919 --> 00:21:45,840
at the beginning is just start with like

00:21:45,360 --> 00:21:46,799
hey the

00:21:45,840 --> 00:21:48,080
thing that gets you out of the door if

00:21:46,799 --> 00:21:49,520
it's complicated and it's wasting your

00:21:48,080 --> 00:21:50,240
time you probably don't do it with the

00:21:49,520 --> 00:21:51,520
mvp

00:21:50,240 --> 00:21:52,720
come back at it when you have a team of

00:21:51,520 --> 00:21:54,000
five people and you got revenue under

00:21:52,720 --> 00:21:55,280
your belt and then do it again

00:21:54,000 --> 00:21:56,640
if you are doing this for the fifth or

00:21:55,280 --> 00:21:58,000
sixth time then you can start spending

00:21:56,640 --> 00:22:00,480
your effort doing more complicated

00:21:58,000 --> 00:22:00,480
things so

00:22:04,880 --> 00:22:08,159
i don't know if your audio died or my

00:22:06,240 --> 00:22:09,679
audio died there but i can see the

00:22:08,159 --> 00:22:11,039
question um how do you deal with the

00:22:09,679 --> 00:22:11,679
long-term storage metrics meant to face

00:22:11,039 --> 00:22:13,360
that problem

00:22:11,679 --> 00:22:15,679
again uh our solution to this problem

00:22:13,360 --> 00:22:17,039
was uh was grafana um the grafana team

00:22:15,679 --> 00:22:18,640
has been super great to us and we use

00:22:17,039 --> 00:22:20,320
their their hosted prometheus which i

00:22:18,640 --> 00:22:22,720
think is cortex under the hood

00:22:20,320 --> 00:22:23,919
um we did originally throw down um just

00:22:22,720 --> 00:22:25,840
a prometheus vm

00:22:23,919 --> 00:22:27,440
that we just gave it a big disc and told

00:22:25,840 --> 00:22:28,880
it to hold on to things for a year

00:22:27,440 --> 00:22:30,880
uh it wasn't until we sort of blew

00:22:28,880 --> 00:22:32,640
through that vm's ability to process

00:22:30,880 --> 00:22:35,039
metrics that we actually moved to

00:22:32,640 --> 00:22:36,080
the the basically engaged grafana and

00:22:35,039 --> 00:22:37,280
moved to cortex

00:22:36,080 --> 00:22:39,120
and that's not been a problem for us

00:22:37,280 --> 00:22:41,120
since we're we're super happy with that

00:22:39,120 --> 00:22:42,400
but we do on our prototypes we do still

00:22:41,120 --> 00:22:44,480
occasionally throw down just like a

00:22:42,400 --> 00:22:45,679
random vm with a bunch of disk on it and

00:22:44,480 --> 00:22:46,960
say you know funnel up to there first

00:22:45,679 --> 00:22:47,600
until we decide what we actually want to

00:22:46,960 --> 00:22:49,200
monitor

00:22:47,600 --> 00:22:50,880
and then we'll pay the vendor to ingest

00:22:49,200 --> 00:22:52,720
it and keep it for us long term

00:22:50,880 --> 00:22:54,000
but yeah super happy with them with

00:22:52,720 --> 00:23:08,159
cortex and grafina for that point

00:22:54,000 --> 00:23:11,760
for us

00:23:08,159 --> 00:23:11,760
nothing coming in on slack

00:23:13,120 --> 00:23:16,159
sometimes you give a talk this is so

00:23:14,720 --> 00:23:23,840
clear you don't need follow-up questions

00:23:16,159 --> 00:23:23,840
it's fine

00:23:27,520 --> 00:23:34,240
oh yeah um one question from slack is

00:23:30,720 --> 00:23:34,240
how do you handle alerts and paging

00:23:34,400 --> 00:23:38,559
um so interestingly uh we use we used a

00:23:37,120 --> 00:23:40,720
combination um

00:23:38,559 --> 00:23:42,000
we started off with um with the alert

00:23:40,720 --> 00:23:45,200
manager from prometheus

00:23:42,000 --> 00:23:45,840
um which worked quite well but we found

00:23:45,200 --> 00:23:48,480
uh the way

00:23:45,840 --> 00:23:49,200
it this is again so this is getting into

00:23:48,480 --> 00:23:51,120
sort of

00:23:49,200 --> 00:23:52,720
know your own code base idiosyncrasies

00:23:51,120 --> 00:23:54,000
around how our deployments work

00:23:52,720 --> 00:23:55,840
meant that alert manager was quite

00:23:54,000 --> 00:23:57,760
difficult for us because configuring

00:23:55,840 --> 00:23:58,880
um the alert manager config files across

00:23:57,760 --> 00:23:59,600
all the teams was actually a bit

00:23:58,880 --> 00:24:00,880
difficult

00:23:59,600 --> 00:24:02,240
so this is where we played around a

00:24:00,880 --> 00:24:03,360
whole bunch to land on a system that

00:24:02,240 --> 00:24:05,039
worked better for us

00:24:03,360 --> 00:24:07,039
and we actually ended up using um

00:24:05,039 --> 00:24:10,000
grafana's native alerting platform

00:24:07,039 --> 00:24:11,200
plumbed through to uh page duty um

00:24:10,000 --> 00:24:12,640
there's some people that

00:24:11,200 --> 00:24:14,640
everyone i've spoken to has had strong

00:24:12,640 --> 00:24:15,679
opinions on this either very far or very

00:24:14,640 --> 00:24:17,600
against

00:24:15,679 --> 00:24:19,360
lots of people really swear by the just

00:24:17,600 --> 00:24:21,760
the native prometheus alert manager

00:24:19,360 --> 00:24:23,200
and i really do like alert manager um

00:24:21,760 --> 00:24:24,799
and again

00:24:23,200 --> 00:24:26,720
it was a tough it was tough to say like

00:24:24,799 --> 00:24:28,080
hey the way that we're deployed actually

00:24:26,720 --> 00:24:29,600
this is not the best tool and actually

00:24:28,080 --> 00:24:31,679
letting the vendor handle this for us

00:24:29,600 --> 00:24:32,960
is the better way to do it um but after

00:24:31,679 --> 00:24:34,240
four or five rounds of trying different

00:24:32,960 --> 00:24:35,600
things it was like oh yeah like once

00:24:34,240 --> 00:24:37,120
you're using it this is very clearly the

00:24:35,600 --> 00:24:39,600
superior way for us to do it

00:24:37,120 --> 00:24:41,279
um so yeah we're we're grafana alert man

00:24:39,600 --> 00:24:43,520
grafana and pagerduty

00:24:41,279 --> 00:24:45,440
um but yeah we have we have it we have

00:24:43,520 --> 00:24:47,200
done alert manager in the past

00:24:45,440 --> 00:24:48,880
before we were page duty we had some big

00:24:47,200 --> 00:24:51,440
drop stuff going on um

00:24:48,880 --> 00:24:52,480
yeah we've played around a lot in like

00:24:51,440 --> 00:24:53,600
the three years we've been building

00:24:52,480 --> 00:24:55,440
monitoring systems but that's where

00:24:53,600 --> 00:24:56,799
we've ended up so far

00:24:55,440 --> 00:24:59,039
what was the difficulty with the alert

00:24:56,799 --> 00:25:01,440
manager that you were having

00:24:59,039 --> 00:25:02,880
um the way that uh the way so all of our

00:25:01,440 --> 00:25:04,559
stuff is sort of squirreled away in um

00:25:02,880 --> 00:25:07,600
in kubernetes and

00:25:04,559 --> 00:25:09,360
the way that our sort of a bit i alluded

00:25:07,600 --> 00:25:11,360
to like axioms and has a lot of projects

00:25:09,360 --> 00:25:12,559
and the way we handle our contractors

00:25:11,360 --> 00:25:14,480
the way we handle our teams

00:25:12,559 --> 00:25:16,320
we basically have one ginormous shared

00:25:14,480 --> 00:25:17,279
prometheus cluster the sre team runs and

00:25:16,320 --> 00:25:19,200
we basically

00:25:17,279 --> 00:25:20,400
sell time on that to other teams so

00:25:19,200 --> 00:25:22,080
meant we had to be sort of super

00:25:20,400 --> 00:25:24,080
restrictive around who can access and

00:25:22,080 --> 00:25:24,880
edit what things and what domains of the

00:25:24,080 --> 00:25:27,039
cluster

00:25:24,880 --> 00:25:28,000
and as the sre team was providing the

00:25:27,039 --> 00:25:29,520
alerting pipeline

00:25:28,000 --> 00:25:31,360
as a service we basically had alert

00:25:29,520 --> 00:25:33,279
manager running in our namespace under

00:25:31,360 --> 00:25:35,840
our configurations and giving

00:25:33,279 --> 00:25:36,880
teams arbitrary edit access to it was

00:25:35,840 --> 00:25:38,720
dangerous

00:25:36,880 --> 00:25:40,400
and left open the sre namespace to a lot

00:25:38,720 --> 00:25:42,640
of people so we

00:25:40,400 --> 00:25:43,440
had tossed up the idea of either using

00:25:42,640 --> 00:25:45,600
um

00:25:43,440 --> 00:25:47,360
the prometheus operator to give people

00:25:45,600 --> 00:25:49,279
their own alert managers or did everyone

00:25:47,360 --> 00:25:52,080
run a copy of alert manager themselves

00:25:49,279 --> 00:25:53,360
um it worked okay um but then the

00:25:52,080 --> 00:25:55,679
ultimately just like the

00:25:53,360 --> 00:25:57,760
click the click and done ui of doing it

00:25:55,679 --> 00:26:00,559
through the grafana thing let the teams

00:25:57,760 --> 00:26:01,760
chew through it faster prometheus was a

00:26:00,559 --> 00:26:02,960
new tool to a lot of people when we

00:26:01,760 --> 00:26:04,240
first rolled it out so getting the hang

00:26:02,960 --> 00:26:05,679
of that alert language and getting the

00:26:04,240 --> 00:26:06,320
hang of like the querying language for

00:26:05,679 --> 00:26:08,240
alerting

00:26:06,320 --> 00:26:09,600
um was better done in the visual tool

00:26:08,240 --> 00:26:10,400
that people could sort of sink their

00:26:09,600 --> 00:26:12,640
teeth into

00:26:10,400 --> 00:26:14,080
we do have one team that is going to

00:26:12,640 --> 00:26:15,039
potentially do what i said earlier where

00:26:14,080 --> 00:26:16,880
they're going to run their own alert

00:26:15,039 --> 00:26:18,480
manager and point it at cortex

00:26:16,880 --> 00:26:20,080
um they're totally able to that's

00:26:18,480 --> 00:26:22,559
something we support but the

00:26:20,080 --> 00:26:25,840
one that we provide out of the gate is

00:26:22,559 --> 00:26:28,320
the grifano one so

00:26:25,840 --> 00:26:30,880
so it sounds like uh more multi-tenancy

00:26:28,320 --> 00:26:33,200
support in the alert manager

00:26:30,880 --> 00:26:34,000
yeah yeah generally multi-tenancy is

00:26:33,200 --> 00:26:36,000
something that i

00:26:34,000 --> 00:26:37,200
like to see a lot in products because of

00:26:36,000 --> 00:26:38,080
the way that we run but i get that

00:26:37,200 --> 00:26:53,840
that's not like

00:26:38,080 --> 00:26:57,520
a common use case for people yep

00:26:53,840 --> 00:26:57,520
i see some people typing on slack

00:27:00,559 --> 00:27:03,760
one of the prometheus developers on

00:27:02,240 --> 00:27:06,080
slack says that there

00:27:03,760 --> 00:27:07,440
is work going on to make the alert

00:27:06,080 --> 00:27:10,480
manager crd

00:27:07,440 --> 00:27:13,760
uh allow for better multi-tenancy

00:27:10,480 --> 00:27:15,360
ooh i'm excited um yeah i said again the

00:27:13,760 --> 00:27:16,960
the whole premise of this dock is that

00:27:15,360 --> 00:27:18,480
like if a better tool comes along or the

00:27:16,960 --> 00:27:20,880
the industry changes i'm super

00:27:18,480 --> 00:27:22,480
happy to change with it so i i always

00:27:20,880 --> 00:27:24,480
like we definitely have beta

00:27:22,480 --> 00:27:25,600
like beta projects so like cheeseburger

00:27:24,480 --> 00:27:26,799
is a great example of a project that we

00:27:25,600 --> 00:27:29,200
just sort of like threw together

00:27:26,799 --> 00:27:30,159
and um and fired out and like we tested

00:27:29,200 --> 00:27:31,440
a whole bunch of things that we weren't

00:27:30,159 --> 00:27:33,279
sure about on it and it was a

00:27:31,440 --> 00:27:35,120
bit of a complete disaster but yeah the

00:27:33,279 --> 00:27:35,360
if third manager guys want me to beta

00:27:35,120 --> 00:27:39,279
the

00:27:35,360 --> 00:27:39,279
multi-tenancy crd i'm totally happy

00:27:46,840 --> 00:27:51,360
awesome

00:27:48,240 --> 00:27:53,440
[Music]

00:27:51,360 --> 00:27:53,440

YouTube URL: https://www.youtube.com/watch?v=hioFPMtqc-4


