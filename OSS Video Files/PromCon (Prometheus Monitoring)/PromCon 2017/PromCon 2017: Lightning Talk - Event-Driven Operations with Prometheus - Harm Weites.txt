Title: PromCon 2017: Lightning Talk - Event-Driven Operations with Prometheus - Harm Weites
Publication date: 2017-09-01
Playlist: PromCon 2017
Description: 
	* Abstract:

Lightning Talk

* Speaker:

Harm Weites

* Slides:

https://promcon.io/2017-munich/slides/lightning-talks-day1-03.pdf

* PromCon website:

https://promcon.io/
Captions: 
	00:00:00,380 --> 00:00:19,050
[Music]

00:00:13,070 --> 00:00:22,140
right thanks I have from um I'm from

00:00:19,050 --> 00:00:26,910
back home got an elf we're a big web

00:00:22,140 --> 00:00:28,590
shop over in Harlem we're doing kind of

00:00:26,910 --> 00:00:32,160
a lot of pro doing quite a lot of things

00:00:28,590 --> 00:00:35,250
with darker and yes obviously using

00:00:32,160 --> 00:00:37,640
Prometheus to take care of metrics with

00:00:35,250 --> 00:00:41,480
a load manager in place to alert us and

00:00:37,640 --> 00:00:46,289
grow fauna to just display information

00:00:41,480 --> 00:00:49,410
whenever we want it so all services have

00:00:46,289 --> 00:00:51,660
a metrics endpoints you really don't get

00:00:49,410 --> 00:00:54,300
to go to production or even acceptance

00:00:51,660 --> 00:00:56,879
or even death if you don't have metrics

00:00:54,300 --> 00:00:59,280
so yeah if you want to give us redeem

00:00:56,879 --> 00:01:01,379
happy you want to have a metric

00:00:59,280 --> 00:01:04,320
standpoint and this was pretty much

00:01:01,379 --> 00:01:06,090
mandatory when we started so over the

00:01:04,320 --> 00:01:09,900
past couple of years everyone grew

00:01:06,090 --> 00:01:12,840
accustomed to having metrics how do

00:01:09,900 --> 00:01:15,540
works we've got basically it comes down

00:01:12,840 --> 00:01:18,360
to ownership every team is fully

00:01:15,540 --> 00:01:21,080
responsible for their own code for their

00:01:18,360 --> 00:01:24,390
own software for their own service

00:01:21,080 --> 00:01:27,330
getting alerts in it's simple using

00:01:24,390 --> 00:01:30,930
regular github Brook flows where you'd

00:01:27,330 --> 00:01:34,920
have regular pushes or requests and

00:01:30,930 --> 00:01:36,689
merge merge is being done eventually it

00:01:34,920 --> 00:01:38,460
comes will would pick up the new

00:01:36,689 --> 00:01:40,560
configuration console template would

00:01:38,460 --> 00:01:43,290
notify Prometheus and the loop manager

00:01:40,560 --> 00:01:46,770
and bam there you have it a new alert in

00:01:43,290 --> 00:01:49,560
production and we figured well this is

00:01:46,770 --> 00:01:53,610
all pretty nifty pretty handy what if we

00:01:49,560 --> 00:01:56,700
can do more so we figured well let's

00:01:53,610 --> 00:01:58,979
let's move these alerts on to a calf

00:01:56,700 --> 00:02:01,950
cook you write a bunch of consumers to

00:01:58,979 --> 00:02:05,340
do arbitrary stuff and there you'd have

00:02:01,950 --> 00:02:07,770
it if you do get to get woken up to do

00:02:05,340 --> 00:02:08,860
silly actions you just have the consumer

00:02:07,770 --> 00:02:13,270
take

00:02:08,860 --> 00:02:17,110
we'll take control essentially so this

00:02:13,270 --> 00:02:19,540
is pretty powerful just pushing alerts

00:02:17,110 --> 00:02:23,110
on to Kafka when it can be consumed by

00:02:19,540 --> 00:02:25,950
just about any consumer you can write so

00:02:23,110 --> 00:02:28,720
you can have situations like this

00:02:25,950 --> 00:02:31,420
arbitrary metrics giving you some kind

00:02:28,720 --> 00:02:33,340
of insights and you really like a threat

00:02:31,420 --> 00:02:35,650
dump being made for whatever reason

00:02:33,340 --> 00:02:39,220
right an exporter I'm sorry right a

00:02:35,650 --> 00:02:42,880
consumer that'll do death or raising a

00:02:39,220 --> 00:02:46,120
debug level just right any consumer and

00:02:42,880 --> 00:02:48,910
it'll upgrade lock level for this

00:02:46,120 --> 00:02:52,780
particular service and if shit's really

00:02:48,910 --> 00:03:00,130
hitting the fan just right a consumer

00:02:52,780 --> 00:03:03,430
for Domino's so in the end we're going

00:03:00,130 --> 00:03:07,900
pretty strong with with sre and this is

00:03:03,430 --> 00:03:09,970
really taking well it's taking a little

00:03:07,900 --> 00:03:14,190
bit of the burden away by automating

00:03:09,970 --> 00:03:16,930
silly actions which means extra bed time

00:03:14,190 --> 00:03:20,160
but if you're playing a lot along with

00:03:16,930 --> 00:03:22,900
sre you also have SLO SLI and a slice

00:03:20,160 --> 00:03:24,790
which means you don't ever lose the

00:03:22,900 --> 00:03:27,310
incentive of actually going in and

00:03:24,790 --> 00:03:31,660
fixing your code because it simply will

00:03:27,310 --> 00:03:33,520
show up on your arrow budget and the

00:03:31,660 --> 00:03:36,459
real power is this is all being done

00:03:33,520 --> 00:03:38,830
being driven by regular alert manager

00:03:36,459 --> 00:03:41,350
queries regular braum ql stuff that

00:03:38,830 --> 00:03:44,290
we've all started learning two years ago

00:03:41,350 --> 00:03:46,310
and everyone knows this that's it

00:03:44,290 --> 00:03:58,800
thank you

00:03:46,310 --> 00:03:59,000
[Music]

00:03:58,800 --> 00:04:02,139
you

00:03:59,000 --> 00:04:02,139

YouTube URL: https://www.youtube.com/watch?v=Eslqaf-tDzM


