Title: PromCon 2017: Lightning Talk - Distributed Blackbox Monitoring - Johannes Ziemke
Publication date: 2017-09-01
Playlist: PromCon 2017
Description: 
	* Abstract:

Lightning Talk

* Speaker:

Johannes Ziemke

* Slides:

* PromCon website:

https://promcon.io/
Captions: 
	00:00:00,380 --> 00:00:18,140
[Music]

00:00:13,549 --> 00:00:21,539
so yeah I'm not a singer or fish I

00:00:18,140 --> 00:00:25,350
worked with you use sounds loud and good

00:00:21,539 --> 00:00:28,310
would net for me to as founders started

00:00:25,350 --> 00:00:30,779
a known exporter there for example and

00:00:28,310 --> 00:00:34,590
yeah I want to show you what you can do

00:00:30,779 --> 00:00:39,960
with a bunch of note exporters deployed

00:00:34,590 --> 00:00:42,899
around the globe it's kind of like

00:00:39,960 --> 00:00:44,329
pimped out on the export black boxes

00:00:42,899 --> 00:00:48,840
sporozoite

00:00:44,329 --> 00:00:52,620
which includes which uses the HTTP trace

00:00:48,840 --> 00:00:54,629
library to give you a breakdown and for

00:00:52,620 --> 00:00:56,969
the different phases of a connection so

00:00:54,629 --> 00:00:59,820
you not familiar with the black box

00:00:56,969 --> 00:01:02,250
exporters basically an exporter which

00:00:59,820 --> 00:01:04,019
you hit with a with a specified target

00:01:02,250 --> 00:01:05,970
and then it returns you Layton sees and

00:01:04,019 --> 00:01:12,570
like the modified version no has this

00:01:05,970 --> 00:01:15,659
just break down so let's start here this

00:01:12,570 --> 00:01:19,470
is lies I scrape like the Alexa top ten

00:01:15,659 --> 00:01:22,950
sites from various locations as you see

00:01:19,470 --> 00:01:25,229
there and basically just average in this

00:01:22,950 --> 00:01:28,049
case which I found already interesting

00:01:25,229 --> 00:01:31,110
to see that different countries have

00:01:28,049 --> 00:01:34,829
definitely different performance on

00:01:31,110 --> 00:01:37,049
those on those sites and an average and

00:01:34,829 --> 00:01:40,530
you see you see the breakdown and

00:01:37,049 --> 00:01:42,540
basically an average so that that's one

00:01:40,530 --> 00:01:47,000
thing I think more interesting probably

00:01:42,540 --> 00:01:51,560
is to looking at individual sites so

00:01:47,000 --> 00:01:54,990
here you see some a bit spiky graphs

00:01:51,560 --> 00:01:56,520
basically just an rep request again you

00:01:54,990 --> 00:01:59,009
see the connection phases and you see

00:01:56,520 --> 00:02:01,649
that that the spike is in the and the

00:01:59,009 --> 00:02:05,790
pros in the transfer or actually into

00:02:01,649 --> 00:02:10,020
the processing part maybe somebody has

00:02:05,790 --> 00:02:13,670
an idea what might cause those spikes or

00:02:10,020 --> 00:02:13,670
what is was all over there

00:02:14,090 --> 00:02:20,520
anyone so basically it's a single page

00:02:18,030 --> 00:02:22,740
application on in this rear pocket was

00:02:20,520 --> 00:02:26,280
called front in front of it and this has

00:02:22,740 --> 00:02:29,490
a 60 second TTL and the packet is in the

00:02:26,280 --> 00:02:32,490
US and there is no traffic on the side

00:02:29,490 --> 00:02:35,490
so basically every 60 seconds the

00:02:32,490 --> 00:02:38,820
requests drop font rotten needs to fetch

00:02:35,490 --> 00:02:41,280
from the origin again and those are

00:02:38,820 --> 00:02:43,860
despites you see here and it depends

00:02:41,280 --> 00:02:46,800
obviously where the packet location is

00:02:43,860 --> 00:02:49,170
on where to execute it so in the US it's

00:02:46,800 --> 00:02:51,330
pretty similar but like in Singapore for

00:02:49,170 --> 00:02:54,620
example it needs to to fetch from origin

00:02:51,330 --> 00:02:57,540
and it takes like several seconds

00:02:54,620 --> 00:02:59,180
general observing your latency and

00:02:57,540 --> 00:03:03,360
availability from different locations

00:02:59,180 --> 00:03:05,730
can be also useful to detect problems

00:03:03,360 --> 00:03:09,600
and availability things because now not

00:03:05,730 --> 00:03:11,790
every request is handled the same as you

00:03:09,600 --> 00:03:15,630
see here for examples just using Google

00:03:11,790 --> 00:03:17,670
and if you try to do this from the data

00:03:15,630 --> 00:03:20,640
center in Singapore for digital ocean

00:03:17,670 --> 00:03:22,650
you always get an error code back

00:03:20,640 --> 00:03:25,620
because they show you a CAPTCHA because

00:03:22,650 --> 00:03:28,230
they don't accept a request so looking

00:03:25,620 --> 00:03:31,080
at those detecting the spot those those

00:03:28,230 --> 00:03:33,540
things it's pretty much impossible from

00:03:31,080 --> 00:03:37,220
just with on within your own data center

00:03:33,540 --> 00:03:41,310
so you need some outside fuel to that

00:03:37,220 --> 00:03:44,280
and now you can basically deploy your

00:03:41,310 --> 00:03:49,260
own exporters and on various providers

00:03:44,280 --> 00:03:54,120
and everything or you can use the

00:03:49,260 --> 00:03:56,550
service I launched today basically which

00:03:54,120 --> 00:03:59,610
is also the site you see with the which

00:03:56,550 --> 00:04:02,070
has no traffic whatsoever so far so I

00:03:59,610 --> 00:04:04,620
hope that change so if you are

00:04:02,070 --> 00:04:07,350
interested in getting such data in your

00:04:04,620 --> 00:04:10,920
parameter server as I said you can run

00:04:07,350 --> 00:04:13,980
your own I was also open sourced parts I

00:04:10,920 --> 00:04:16,830
did put the HTTP trace but if you don't

00:04:13,980 --> 00:04:23,060
want to go through the hassle just sign

00:04:16,830 --> 00:04:23,060
up and I find thanks

00:04:23,150 --> 00:04:35,840
[Music]

00:04:35,650 --> 00:04:38,980
you

00:04:35,840 --> 00:04:38,980

YouTube URL: https://www.youtube.com/watch?v=EhBORyHQ98g


