Title: PromCon 2017: Lightning Talk - Yet Another Prometheus Data Science Tool - Chris Niemira
Publication date: 2017-09-01
Playlist: PromCon 2017
Description: 
	* Abstract:

Lightning Talk

* Speaker:

Chris Niemira

* Slides:

* PromCon website:

https://promcon.io/
Captions: 
	00:00:00,380 --> 00:00:16,650
[Music]

00:00:13,009 --> 00:00:18,270
these are my supercool slides I wanted

00:00:16,650 --> 00:00:20,550
to introduce to you a tool that I call

00:00:18,270 --> 00:00:23,189
trove trove is the time search research

00:00:20,550 --> 00:00:26,220
time series research observation and

00:00:23,189 --> 00:00:27,900
visualization environment I originally

00:00:26,220 --> 00:00:29,490
had no notion of presenting this or

00:00:27,900 --> 00:00:31,859
demoing it to anybody but there were I

00:00:29,490 --> 00:00:34,050
think three talks yesterday from some

00:00:31,859 --> 00:00:36,090
like-minded individuals doing data

00:00:34,050 --> 00:00:41,040
science work with Prometheus so I

00:00:36,090 --> 00:00:42,149
figured I could or at most 196 of you so

00:00:41,040 --> 00:00:44,789
what does trove look like troves the

00:00:42,149 --> 00:00:46,260
data science tool it's pre-alpha it's

00:00:44,789 --> 00:00:49,980
horribly buggy and it's featuring

00:00:46,260 --> 00:00:52,079
complete let's see okay so the first

00:00:49,980 --> 00:00:54,960
thing you see is a very weird looking

00:00:52,079 --> 00:00:59,579
interface that it's not wrapped in a web

00:00:54,960 --> 00:01:01,920
browser so it's a fad clients so let's

00:00:59,579 --> 00:01:03,420
select a data source I have the a test

00:01:01,920 --> 00:01:05,939
one and the democ one so as soon as I

00:01:03,420 --> 00:01:07,470
select that it goes out and it it

00:01:05,939 --> 00:01:10,770
queries the Prometheus server that knows

00:01:07,470 --> 00:01:12,750
how to talk to and it fetches instance

00:01:10,770 --> 00:01:14,820
and job so what we're gonna do we're

00:01:12,750 --> 00:01:16,350
gonna work backwards from the way that

00:01:14,820 --> 00:01:19,439
you're typically gonna do a graph on a

00:01:16,350 --> 00:01:22,020
dashboard or use the the web UI we're

00:01:19,439 --> 00:01:24,930
gonna work from labels towards metric so

00:01:22,020 --> 00:01:27,180
let's select job and it knows that hey

00:01:24,930 --> 00:01:28,950
look there's one thing that has a job in

00:01:27,180 --> 00:01:30,360
its laptop because it's just talking to

00:01:28,950 --> 00:01:33,750
the Prometheus running on my local

00:01:30,360 --> 00:01:35,790
laptop so double click of that and let's

00:01:33,750 --> 00:01:38,130
start to build a qualifier so we build a

00:01:35,790 --> 00:01:40,350
qualifier expression job equal laptop

00:01:38,130 --> 00:01:41,909
and we find metrics here's every metric

00:01:40,350 --> 00:01:46,259
that the Prometheus server on the laptop

00:01:41,909 --> 00:01:47,460
knows has a label equal laptop let's hop

00:01:46,259 --> 00:01:48,899
through it I'm interested in the node

00:01:47,460 --> 00:01:50,909
CPU because this is the one that I've

00:01:48,899 --> 00:01:52,350
been playing with and I could graph this

00:01:50,909 --> 00:01:53,610
now where I could open it up now I could

00:01:52,350 --> 00:01:56,070
look at it now but I know that there's

00:01:53,610 --> 00:01:58,799
more labels on it so let's double click

00:01:56,070 --> 00:02:00,930
it and we get new labels to go and look

00:01:58,799 --> 00:02:03,299
at I realize this this looks a little

00:02:00,930 --> 00:02:06,719
weird but we click mode now here's every

00:02:03,299 --> 00:02:08,940
possible mode for the CPU I'm interested

00:02:06,719 --> 00:02:10,740
in idle right so let's build a second

00:02:08,940 --> 00:02:13,560
qualifier let's highlight them

00:02:10,740 --> 00:02:17,940
both let's take the data and let's throw

00:02:13,560 --> 00:02:25,680
it to a plot so this I realize is not

00:02:17,940 --> 00:02:27,450
going to kill Griffin anytime soon but

00:02:25,680 --> 00:02:29,700
here's my data all right and and let's

00:02:27,450 --> 00:02:31,440
start to get into that the time series

00:02:29,700 --> 00:02:34,650
data Sciences stuff

00:02:31,440 --> 00:02:37,920
hopefully my file menu will work yes and

00:02:34,650 --> 00:02:44,430
I can save this data I'd save it on the

00:02:37,920 --> 00:02:48,450
desktop as idle I could type as a CSV

00:02:44,430 --> 00:02:52,800
and there we go and this will work in

00:02:48,450 --> 00:02:56,760
everybody's favorites data analyze

00:02:52,800 --> 00:02:59,460
analytics tool all right okay so I can

00:02:56,760 --> 00:03:02,220
export data but why would I want to

00:02:59,460 --> 00:03:04,530
export data observant viewers might have

00:03:02,220 --> 00:03:06,630
noticed that I have a console tab here

00:03:04,530 --> 00:03:08,610
this console is an embedded ipython

00:03:06,630 --> 00:03:12,540
interpreter with a Jupiter client

00:03:08,610 --> 00:03:14,040
talking to it because this is all Python

00:03:12,540 --> 00:03:16,200
and because this is all using numpy and

00:03:14,040 --> 00:03:18,690
data frames I can go ahead and grab the

00:03:16,200 --> 00:03:22,020
data that I had just loaded as a data

00:03:18,690 --> 00:03:27,030
frame and there's my data frame so if I

00:03:22,020 --> 00:03:29,130
want to do data science work I have

00:03:27,030 --> 00:03:31,280
access to that data right here easy to

00:03:29,130 --> 00:03:31,280
get

00:03:33,180 --> 00:03:45,880
[Music]

00:03:45,700 --> 00:03:49,020
you

00:03:45,880 --> 00:03:49,020

YouTube URL: https://www.youtube.com/watch?v=YmcTPDAsX6w


