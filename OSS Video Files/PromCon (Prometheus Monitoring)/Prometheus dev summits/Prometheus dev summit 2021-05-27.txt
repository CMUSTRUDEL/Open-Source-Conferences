Title: Prometheus dev summit 2021-05-27
Publication date: 2021-05-27
Playlist: Prometheus dev summits
Description: 
	https://docs.google.com/document/d/11LC3wJcVk00l8w5P3oLQ-m3Y37iom6INAMEu2ZAGIIE/edit
Captions: 
	00:00:03,919 --> 00:00:08,240
now we oh

00:00:04,720 --> 00:00:10,480
it's finally recording so okay um

00:00:08,240 --> 00:00:11,360
hi welcome everyone and welcome to the

00:00:10,480 --> 00:00:14,880
youtube audience

00:00:11,360 --> 00:00:17,279
um today is the fifth of the 27th of may

00:00:14,880 --> 00:00:19,920
in 2021

00:00:17,279 --> 00:00:22,240
for all the non-prometheus team members

00:00:19,920 --> 00:00:25,840
who joined for the first time

00:00:22,240 --> 00:00:27,840
feel free to to speak up at any point in

00:00:25,840 --> 00:00:30,400
time

00:00:27,840 --> 00:00:32,880
you're you're completely equal so please

00:00:30,400 --> 00:00:36,160
speak up if anything is interesting or

00:00:32,880 --> 00:00:38,079
wrong or whatever um the only thing is

00:00:36,160 --> 00:00:40,079
when we have a call for consensus but we

00:00:38,079 --> 00:00:42,160
don't have a lot of people here today or

00:00:40,079 --> 00:00:44,079
prometheus team people here anyway so

00:00:42,160 --> 00:00:46,879
maybe we don't have too many

00:00:44,079 --> 00:00:47,920
of those we'll see um that's the only

00:00:46,879 --> 00:00:49,680
time where there

00:00:47,920 --> 00:00:51,360
we would ask you to to refrain from

00:00:49,680 --> 00:00:53,280
making noise because uh

00:00:51,360 --> 00:00:54,480
that is the consensus of team but for

00:00:53,280 --> 00:00:58,399
everything else go all

00:00:54,480 --> 00:01:02,239
in and ideally write your name into

00:00:58,399 --> 00:01:03,039
this document and also help me write the

00:01:02,239 --> 00:01:06,159
meeting notes

00:01:03,039 --> 00:01:08,880
of course that's easier if it's

00:01:06,159 --> 00:01:09,760
not me alone and if you write your your

00:01:08,880 --> 00:01:12,000
email address

00:01:09,760 --> 00:01:13,840
in chat or into the meeting in the

00:01:12,000 --> 00:01:14,640
document i can i can give you direct

00:01:13,840 --> 00:01:18,000
edit access

00:01:14,640 --> 00:01:20,880
so that makes it easier for everyone

00:01:18,000 --> 00:01:26,000
else we'll just accept the changes

00:01:20,880 --> 00:01:28,560
points of order bjorn

00:01:26,000 --> 00:01:28,560
you're muted

00:01:29,280 --> 00:01:32,479
okay so bjorn's point is fully correct

00:01:31,280 --> 00:01:36,640
that i failed

00:01:32,479 --> 00:01:36,640
now i'm muted i couldn't find the window

00:01:36,880 --> 00:01:40,479
i could hear you all but not find the

00:01:39,680 --> 00:01:43,280
button

00:01:40,479 --> 00:01:43,680
um yeah so i mean richie is it's

00:01:43,280 --> 00:01:47,439
probably

00:01:43,680 --> 00:01:49,680
fully on board with that um yeah so we

00:01:47,439 --> 00:01:51,840
we use the time zone that moves around

00:01:49,680 --> 00:01:55,600
um and now we have to decide if we wanna

00:01:51,840 --> 00:01:57,600
stick with the current timing or we want

00:01:55,600 --> 00:01:58,719
to go back to the timing that is one

00:01:57,600 --> 00:02:00,719
hour later

00:01:58,719 --> 00:02:08,000
i i don't mind i just don't want it to

00:02:00,719 --> 00:02:10,080
move around

00:02:08,000 --> 00:02:11,440
so probably the people who don't like

00:02:10,080 --> 00:02:12,720
the current timing are not in the

00:02:11,440 --> 00:02:15,440
meeting because they don't like the

00:02:12,720 --> 00:02:15,440
current timing

00:02:17,120 --> 00:02:21,440
well this so if we're going to utc this

00:02:19,680 --> 00:02:24,480
current timing's okay for me

00:02:21,440 --> 00:02:27,520
but i think in winter

00:02:24,480 --> 00:02:29,440
it is a time when i'm usually busy

00:02:27,520 --> 00:02:31,680
because it'd be an hour earlier local

00:02:29,440 --> 00:02:31,680
time

00:02:32,959 --> 00:02:38,080
i think

00:02:36,000 --> 00:02:39,120
yeah callum we should probably talk with

00:02:38,080 --> 00:02:42,160
him as well since

00:02:39,120 --> 00:02:42,160
he's not here right now

00:02:42,239 --> 00:02:45,840
um he might actually not be here courses

00:02:44,080 --> 00:02:48,080
early for him um yeah

00:02:45,840 --> 00:02:49,040
i mean we the original timing was the

00:02:48,080 --> 00:02:52,800
one where we had

00:02:49,040 --> 00:02:54,480
a a doodle or something for it right so

00:02:52,800 --> 00:02:57,840
from that perspective we should go back

00:02:54,480 --> 00:02:57,840
to one hour later

00:03:01,680 --> 00:03:05,840
so call for consensus

00:03:09,280 --> 00:03:12,640
i think we just go back to the to the

00:03:11,360 --> 00:03:15,440
other time then

00:03:12,640 --> 00:03:16,879
uh i would prefer the earlier time but i

00:03:15,440 --> 00:03:19,360
i fully understand why

00:03:16,879 --> 00:03:22,000
it's it's a lot worse for chris and for

00:03:19,360 --> 00:03:22,000
callum so

00:03:23,040 --> 00:03:35,760
i uh i'll move back and mark the screen

00:03:33,120 --> 00:03:37,599
how many people from like the far east

00:03:35,760 --> 00:03:41,360
do we have

00:03:37,599 --> 00:03:41,360
who would complain about going later

00:03:43,599 --> 00:03:50,640
ganesh is not in here right

00:03:47,200 --> 00:03:52,239
yeah no we can we can also bring this up

00:03:50,640 --> 00:03:55,519
on the mailing list i guess

00:03:52,239 --> 00:03:57,519
um but i i think

00:03:55,519 --> 00:04:00,000
it it makes sense to go back to the time

00:03:57,519 --> 00:04:02,239
which we had in the doodle

00:04:00,000 --> 00:04:03,519
and that's the one which starts one hour

00:04:02,239 --> 00:04:07,760
later

00:04:03,519 --> 00:04:08,480
okay um then two more points of order uh

00:04:07,760 --> 00:04:11,360
one

00:04:08,480 --> 00:04:11,920
i moved a few things in the discussion

00:04:11,360 --> 00:04:15,120
backlog

00:04:11,920 --> 00:04:17,440
into a time has eaten them there is no

00:04:15,120 --> 00:04:19,280
use discussing them anymore

00:04:17,440 --> 00:04:20,720
but but i didn't remove them from the

00:04:19,280 --> 00:04:23,280
backlog i just moved them

00:04:20,720 --> 00:04:25,360
around into a new section so anyone who

00:04:23,280 --> 00:04:28,000
disagrees just bumped them up again

00:04:25,360 --> 00:04:30,080
and also as we are starting to be more

00:04:28,000 --> 00:04:32,320
and more in the long tail of backlogged

00:04:30,080 --> 00:04:33,120
items and it's getting harder and harder

00:04:32,320 --> 00:04:35,840
to discern

00:04:33,120 --> 00:04:37,360
who actually cares about what topics um

00:04:35,840 --> 00:04:39,919
please walk through everything

00:04:37,360 --> 00:04:40,479
and this is only 14 walk through

00:04:39,919 --> 00:04:43,199
everything

00:04:40,479 --> 00:04:44,800
and and update your votes or if you want

00:04:43,199 --> 00:04:46,400
something completely removed

00:04:44,800 --> 00:04:48,400
feel free to also just write this in

00:04:46,400 --> 00:04:51,919
maybe in red or something

00:04:48,400 --> 00:04:54,240
um so we um yeah

00:04:51,919 --> 00:04:57,360
so please everyone on team walk through

00:04:54,240 --> 00:05:01,919
the whole document once and

00:04:57,360 --> 00:05:01,919
yeah just update what what you have

00:05:02,880 --> 00:05:07,199
and the last one i think most everyone

00:05:05,600 --> 00:05:10,320
will know by now but

00:05:07,199 --> 00:05:13,520
just so so everyone is aware uh

00:05:10,320 --> 00:05:16,800
we have had our channels on free note

00:05:13,520 --> 00:05:20,160
taken away by the new uh

00:05:16,800 --> 00:05:22,160
staff of freenode um and we have moved

00:05:20,160 --> 00:05:24,880
everything to liberia so everyone anyone

00:05:22,160 --> 00:05:26,639
who cares about irc

00:05:24,880 --> 00:05:28,560
we've been kicked out of our own thing

00:05:26,639 --> 00:05:31,520
on freenode

00:05:28,560 --> 00:05:33,280
funnily enough we have we have revamping

00:05:31,520 --> 00:05:34,160
the community channels on our backlog

00:05:33,280 --> 00:05:36,560
anyway

00:05:34,160 --> 00:05:37,360
and that had enough walls to make it

00:05:36,560 --> 00:05:40,320
onto

00:05:37,360 --> 00:05:40,320
onto the agenda

00:05:40,560 --> 00:05:46,960
so um

00:05:43,600 --> 00:05:50,840
our first one is mine um unless someone

00:05:46,960 --> 00:05:53,120
has anything to add to any of those

00:05:50,840 --> 00:05:57,199
points

00:05:53,120 --> 00:05:58,880
good um i was i'm now since you you mark

00:05:57,199 --> 00:06:02,400
green the the items

00:05:58,880 --> 00:06:05,360
you that had the most votes right

00:06:02,400 --> 00:06:07,840
yeah i moved i marked green what i put

00:06:05,360 --> 00:06:10,319
onto the agenda for today and if we

00:06:07,840 --> 00:06:13,120
don't speak about it then i will mark it

00:06:10,319 --> 00:06:14,880
non-green okay because i just wanna

00:06:13,120 --> 00:06:16,800
clean up the old

00:06:14,880 --> 00:06:19,039
voting dock i just moved all the green

00:06:16,800 --> 00:06:20,639
stuff down but now i wasn't sure if we

00:06:19,039 --> 00:06:21,680
actually discussed them all but then we

00:06:20,639 --> 00:06:23,759
did right

00:06:21,680 --> 00:06:25,520
so all the stuff that was green like

00:06:23,759 --> 00:06:27,360
last week was something we actually

00:06:25,520 --> 00:06:30,400
discussed in the last meeting

00:06:27,360 --> 00:06:31,039
yes and what i might what was good yes

00:06:30,400 --> 00:06:32,800
and and

00:06:31,039 --> 00:06:34,560
like two hours ago i marked everything

00:06:32,800 --> 00:06:35,039
green which i put onto the agenda for

00:06:34,560 --> 00:06:37,440
today

00:06:35,039 --> 00:06:39,280
so because as i get confused about what

00:06:37,440 --> 00:06:42,160
is in what state

00:06:39,280 --> 00:06:42,160
okay all good then

00:06:42,479 --> 00:06:49,199
um and thanks for cleaning up

00:06:45,600 --> 00:06:49,840
so um should we use a google form for

00:06:49,199 --> 00:06:52,400
vulnerable

00:06:49,840 --> 00:06:54,240
vulnerability handling instead of of

00:06:52,400 --> 00:06:57,759
email and such in the future

00:06:54,240 --> 00:07:03,280
um or should we wait for what uh sig or

00:06:57,759 --> 00:07:06,479
tag security now uh comes up with for um

00:07:03,280 --> 00:07:06,479
four processes and such

00:07:09,520 --> 00:07:15,680
do we have a timeline for when there

00:07:12,560 --> 00:07:15,680
they will come up with something

00:07:15,759 --> 00:07:19,680
the last update on the issue is from 24

00:07:18,400 --> 00:07:22,880
days ago

00:07:19,680 --> 00:07:24,880
initially there was there was

00:07:22,880 --> 00:07:26,400
quite a bit of of excitement and

00:07:24,880 --> 00:07:29,919
momentum

00:07:26,400 --> 00:07:31,039
i can also just ask them if they have a

00:07:29,919 --> 00:07:34,000
timeline

00:07:31,039 --> 00:07:34,560
and see what happens also i need to go

00:07:34,000 --> 00:07:36,479
to my

00:07:34,560 --> 00:07:37,680
door for a second but feel free to keep

00:07:36,479 --> 00:07:40,800
discussing

00:07:37,680 --> 00:07:44,160
yeah i mean i i i guess

00:07:40,800 --> 00:07:46,400
i would propose for us to do whatever is

00:07:44,160 --> 00:07:47,919
the least amount of work right like if

00:07:46,400 --> 00:07:49,840
someone's already standardizing this for

00:07:47,919 --> 00:07:50,800
cncf projects then we might as well do

00:07:49,840 --> 00:07:54,319
that

00:07:50,800 --> 00:07:56,000
um and not necessarily duplicate work

00:07:54,319 --> 00:07:57,759
unless there's something that we

00:07:56,000 --> 00:08:00,560
completely disagree with the net

00:07:57,759 --> 00:08:03,840
workflow but i think it's worth

00:08:00,560 --> 00:08:03,840
seeing what they come up with

00:08:04,879 --> 00:08:09,039
yes from the linked issue that care if

00:08:07,199 --> 00:08:10,720
they want to come up with something or

00:08:09,039 --> 00:08:15,120
they are just gathering ideas at this

00:08:10,720 --> 00:08:15,120
stage so if we should intervene

00:08:15,520 --> 00:08:19,440
i mean at the very least it sounds like

00:08:16,960 --> 00:08:20,240
we should let them know that we're

00:08:19,440 --> 00:08:23,919
interested

00:08:20,240 --> 00:08:27,360
um although i think i think that since

00:08:23,919 --> 00:08:30,560
uh what richie said um sounded like

00:08:27,360 --> 00:08:34,000
we already indicated that but yeah

00:08:30,560 --> 00:08:37,519
if we haven't done that uh i i did it

00:08:34,000 --> 00:08:39,599
so i marked interest back in march um

00:08:37,519 --> 00:08:43,120
that we that we would be interested in

00:08:39,599 --> 00:08:43,120
just following what they come up with

00:08:44,800 --> 00:08:48,399
so i guess i'll just i'll just update

00:08:46,880 --> 00:08:50,560
ask if they have a timeline

00:08:48,399 --> 00:08:52,959
reiterate that we would be interested in

00:08:50,560 --> 00:08:56,240
in following whatever they come up with

00:08:52,959 --> 00:09:01,200
and then we shelve the topic again

00:08:56,240 --> 00:09:08,320
and we mark the topic non-green

00:09:01,200 --> 00:09:12,000
so we don't move it

00:09:08,320 --> 00:09:13,839
so um next one

00:09:12,000 --> 00:09:23,839
or let's let's make a quick call for

00:09:13,839 --> 00:09:23,839
consensus uh the consent um

00:09:27,920 --> 00:09:31,839
i would still know that we use the

00:09:29,360 --> 00:09:34,399
security feature of github for the last

00:09:31,839 --> 00:09:38,080
security issue we had on promotion that

00:09:34,399 --> 00:09:40,959
worked pretty fine and it was easy we

00:09:38,080 --> 00:09:43,040
we used the forks and we could also get

00:09:40,959 --> 00:09:45,440
the cd so that was really like a nice

00:09:43,040 --> 00:09:48,480
experience that we got from github so

00:09:45,440 --> 00:09:50,399
if they also have a form to like

00:09:48,480 --> 00:09:53,200
input security issues that could be

00:09:50,399 --> 00:09:56,240
interesting as well

00:09:53,200 --> 00:10:00,480
that is a good point i don't think they

00:09:56,240 --> 00:10:00,480
have that but

00:10:03,760 --> 00:10:10,240
let me ask cncf if if they can establish

00:10:07,200 --> 00:10:11,040
contact to to the right people to ask if

00:10:10,240 --> 00:10:14,880
that can be

00:10:11,040 --> 00:10:19,519
done on on github site because that

00:10:14,880 --> 00:10:21,760
would make sense yeah

00:10:19,519 --> 00:10:23,440
i mean ever since they offer offer cve

00:10:21,760 --> 00:10:27,600
that's already quite nice

00:10:23,440 --> 00:10:30,480
um i've used mitre in the past but

00:10:27,600 --> 00:10:31,200
um but there it's even more integrated

00:10:30,480 --> 00:10:33,839
yeah they use

00:10:31,200 --> 00:10:33,839
my tree also

00:10:41,440 --> 00:10:46,800
so for a consensus we will poke

00:10:44,720 --> 00:10:48,000
tech security and they have been renamed

00:10:46,800 --> 00:10:50,320
as from sick to

00:10:48,000 --> 00:10:52,399
tech which is technical advisory group

00:10:50,320 --> 00:10:55,600
we will poke tax security and then have

00:10:52,399 --> 00:10:55,600
to follow what they suggest

00:10:55,839 --> 00:11:04,000
all agreed anyone disagreeing

00:11:00,480 --> 00:11:07,519
good good next one myself

00:11:04,000 --> 00:11:09,360
analytics use case um

00:11:07,519 --> 00:11:11,920
i just want to throw out a few sound

00:11:09,360 --> 00:11:15,120
bytes what what analytics use case

00:11:11,920 --> 00:11:18,320
might might mean promptly

00:11:15,120 --> 00:11:19,440
extensions for more in-depth analysis of

00:11:18,320 --> 00:11:22,000
things

00:11:19,440 --> 00:11:22,880
batch processing within prometheus

00:11:22,000 --> 00:11:26,240
proper

00:11:22,880 --> 00:11:28,880
or having prom tool or a second

00:11:26,240 --> 00:11:29,600
prometheus instance running on the same

00:11:28,880 --> 00:11:32,079
data but

00:11:29,600 --> 00:11:33,680
read only to basically have a lower

00:11:32,079 --> 00:11:37,200
priority

00:11:33,680 --> 00:11:39,279
data path with without the overhead of

00:11:37,200 --> 00:11:41,200
putting stuff into prometheus itself so

00:11:39,279 --> 00:11:44,399
basically a batch mode

00:11:41,200 --> 00:11:47,519
prometheus which which only reads

00:11:44,399 --> 00:11:50,720
and never writes and and

00:11:47,519 --> 00:11:52,399
yeah just i mean maybe maybe if you have

00:11:50,720 --> 00:11:54,800
rewrite rules or something maybe

00:11:52,399 --> 00:11:55,440
it writes sometimes but like this kind

00:11:54,800 --> 00:11:58,480
of thing

00:11:55,440 --> 00:11:59,200
um because i do think that there is that

00:11:58,480 --> 00:12:02,480
there is

00:11:59,200 --> 00:12:04,800
um stuff to be done on the analytics

00:12:02,480 --> 00:12:04,800
side

00:12:08,839 --> 00:12:11,839
folks

00:12:12,639 --> 00:12:17,360
generally i i would like to be able to

00:12:14,800 --> 00:12:18,639
do more analytics i'm curious what

00:12:17,360 --> 00:12:20,950
a little bit more detail about what

00:12:18,639 --> 00:12:22,839
you're thinking about the prom ql

00:12:20,950 --> 00:12:24,480
[Music]

00:12:22,839 --> 00:12:26,800
extensions so

00:12:24,480 --> 00:12:26,800
um

00:12:28,079 --> 00:12:31,200
let's pretend we fast forward 10 years

00:12:30,720 --> 00:12:33,600
or

00:12:31,200 --> 00:12:35,040
a year or five or what have you um if

00:12:33,600 --> 00:12:38,399
you look at what for example

00:12:35,040 --> 00:12:40,720
r and and python or

00:12:38,399 --> 00:12:42,160
science python are doing a lot of this

00:12:40,720 --> 00:12:45,440
is basically taking

00:12:42,160 --> 00:12:47,440
fortran code for

00:12:45,440 --> 00:12:49,440
the people who wrote it are already

00:12:47,440 --> 00:12:51,360
retired or that but no one no one has

00:12:49,440 --> 00:12:54,160
the knowledge to rebuild those

00:12:51,360 --> 00:12:55,200
functions anymore and they just build

00:12:54,160 --> 00:12:58,800
wrappers

00:12:55,200 --> 00:13:02,000
and and allow access to

00:12:58,800 --> 00:13:02,959
to all this ecosystem of analytical

00:13:02,000 --> 00:13:06,240
functions

00:13:02,959 --> 00:13:08,880
from their own languages and a

00:13:06,240 --> 00:13:09,360
similar thought around chromecare where

00:13:08,880 --> 00:13:12,399
we

00:13:09,360 --> 00:13:14,079
just introduce new functions uh and and

00:13:12,399 --> 00:13:15,920
do whatever on the background and

00:13:14,079 --> 00:13:19,120
sometimes this might literally mean

00:13:15,920 --> 00:13:20,320
um pulling in fortran code or or some

00:13:19,120 --> 00:13:22,399
such

00:13:20,320 --> 00:13:24,160
but do this directly from prom kill with

00:13:22,399 --> 00:13:26,000
all the magic of label match

00:13:24,160 --> 00:13:27,600
label matching and such with with

00:13:26,000 --> 00:13:29,279
writing things once and it doesn't

00:13:27,600 --> 00:13:30,160
matter if i have one or ten thousand

00:13:29,279 --> 00:13:33,040
hits

00:13:30,160 --> 00:13:34,800
it all just happens automatically okay

00:13:33,040 --> 00:13:36,480
so pulling in the park

00:13:34,800 --> 00:13:39,839
pulling in all those linear algebra

00:13:36,480 --> 00:13:42,959
things if a user so desired

00:13:39,839 --> 00:13:45,839
and allow you to do it okay like day

00:13:42,959 --> 00:13:48,480
10 implementation that's where i i would

00:13:45,839 --> 00:13:51,600
love to end up yes yeah

00:13:48,480 --> 00:13:52,160
which is like kind of what i made up as

00:13:51,600 --> 00:13:55,120
a new

00:13:52,160 --> 00:13:56,639
fine more fine-grained topic but didn't

00:13:55,120 --> 00:13:57,519
got voted but it's kind of the same

00:13:56,639 --> 00:14:00,839
thing right

00:13:57,519 --> 00:14:02,959
usually when people ask for crazy

00:14:00,839 --> 00:14:05,279
statistical function x

00:14:02,959 --> 00:14:06,639
in progr we say yeah just export the

00:14:05,279 --> 00:14:09,519
data and use r

00:14:06,639 --> 00:14:11,680
that was our past attitude with the

00:14:09,519 --> 00:14:14,560
exception of the old winter school which

00:14:11,680 --> 00:14:15,920
went really badly because we didn't

00:14:14,560 --> 00:14:16,959
implement the whole printers that

00:14:15,920 --> 00:14:19,519
everyone wanted to

00:14:16,959 --> 00:14:21,199
like the seasonal one and now we have it

00:14:19,519 --> 00:14:22,720
there we have to support it forever and

00:14:21,199 --> 00:14:23,360
it's kind of not really used and

00:14:22,720 --> 00:14:26,320
annoying

00:14:23,360 --> 00:14:27,120
so this is why i think we i i would

00:14:26,320 --> 00:14:29,680
totally love

00:14:27,120 --> 00:14:31,519
this to have more like extend from your

00:14:29,680 --> 00:14:33,440
little way or make it extensible but we

00:14:31,519 --> 00:14:35,279
need to think this through

00:14:33,440 --> 00:14:37,279
quite carefully and of course we need to

00:14:35,279 --> 00:14:40,000
have clarity if we even want this

00:14:37,279 --> 00:14:40,720
well now we get this bad publicity where

00:14:40,000 --> 00:14:42,880
people say

00:14:40,720 --> 00:14:44,000
i want this statistical average method

00:14:42,880 --> 00:14:46,480
and we say no

00:14:44,000 --> 00:14:47,680
and then we get a million downs on the

00:14:46,480 --> 00:14:49,760
issue and

00:14:47,680 --> 00:14:51,600
um i mean we don't know if this is

00:14:49,760 --> 00:14:53,040
representative of the user base but i

00:14:51,600 --> 00:14:56,079
think we can avoid

00:14:53,040 --> 00:14:58,160
at least the sentiment there

00:14:56,079 --> 00:14:59,600
ideally by having an actual constructor

00:14:58,160 --> 00:15:03,440
solution that helps everyone

00:14:59,600 --> 00:15:03,440
but also by having a better explanation

00:15:05,040 --> 00:15:09,600
i think on the i think the consensus

00:15:08,480 --> 00:15:11,600
within team is

00:15:09,600 --> 00:15:13,600
or has changed towards allowing more

00:15:11,600 --> 00:15:18,000
functions

00:15:13,600 --> 00:15:21,360
we we need to be careful about

00:15:18,000 --> 00:15:23,120
this foot gun and maybe we maybe we

00:15:21,360 --> 00:15:25,199
hide certain things behind the feature

00:15:23,120 --> 00:15:28,800
flag where we literally say

00:15:25,199 --> 00:15:30,320
batch mode or or statistical analysis or

00:15:28,800 --> 00:15:32,320
something

00:15:30,320 --> 00:15:33,360
of course what happens if something is

00:15:32,320 --> 00:15:36,480
super expensive

00:15:33,360 --> 00:15:39,440
and and alerting is is impacted by this

00:15:36,480 --> 00:15:41,279
that's something which must not happen

00:15:39,440 --> 00:15:44,160
at least not by accident

00:15:41,279 --> 00:15:46,720
but but giving people the the option to

00:15:44,160 --> 00:15:51,040
do this directly in prometheus and also

00:15:46,720 --> 00:15:51,040
put in new functions if if they want

00:15:51,839 --> 00:15:58,399
i mean even just opening up that

00:15:55,199 --> 00:16:02,000
possibility i would hope is is

00:15:58,399 --> 00:16:03,600
um it's something which which would get

00:16:02,000 --> 00:16:05,600
people who are interested in this maybe

00:16:03,600 --> 00:16:09,360
also putting in some work and just

00:16:05,600 --> 00:16:11,199
suggest new stuff so there are multiple

00:16:09,360 --> 00:16:13,120
aspects there so first of all we are

00:16:11,199 --> 00:16:15,120
aware that some users already do that

00:16:13,120 --> 00:16:17,279
they add functions to promptql

00:16:15,120 --> 00:16:18,240
the code is like public so they can do

00:16:17,279 --> 00:16:20,480
that uh

00:16:18,240 --> 00:16:22,079
it was a big e-commerce company that

00:16:20,480 --> 00:16:24,240
actually like made the pr to

00:16:22,079 --> 00:16:25,759
expose all the necessary sweat functions

00:16:24,240 --> 00:16:27,680
so some people are doing that

00:16:25,759 --> 00:16:29,279
the next thing is that what the user

00:16:27,680 --> 00:16:31,759
actually wants is something like maybe

00:16:29,279 --> 00:16:33,680
x-rayed which does not fit inside the

00:16:31,759 --> 00:16:35,519
current primary model so we would still

00:16:33,680 --> 00:16:36,160
not address their knees by just adding

00:16:35,519 --> 00:16:37,759
new

00:16:36,160 --> 00:16:39,360
functions so functions are not basically

00:16:37,759 --> 00:16:41,279
like the thing that will solve

00:16:39,360 --> 00:16:42,800
everything because of the primary model

00:16:41,279 --> 00:16:44,320
that when you select you don't get the

00:16:42,800 --> 00:16:45,279
same markers you don't so there is a

00:16:44,320 --> 00:16:47,360
bunch of things that

00:16:45,279 --> 00:16:48,839
cannot be just solved by extra functions

00:16:47,360 --> 00:16:50,480
that you also need to take into

00:16:48,839 --> 00:16:53,199
consideration

00:16:50,480 --> 00:16:54,399
in general i am open to having more

00:16:53,199 --> 00:16:55,920
function in cyborg

00:16:54,399 --> 00:16:57,839
and in some communities that's not an

00:16:55,920 --> 00:16:59,519
issue given that it's not a big of a

00:16:57,839 --> 00:17:01,279
rash to add extra functions

00:16:59,519 --> 00:17:02,639
so that's not a real issue the issue is

00:17:01,279 --> 00:17:04,480
really like

00:17:02,639 --> 00:17:05,679
where do we want as a team to have what

00:17:04,480 --> 00:17:07,600
is reading like

00:17:05,679 --> 00:17:09,520
uh still this week we got a request to

00:17:07,600 --> 00:17:11,839
add mod over time which

00:17:09,520 --> 00:17:13,520
was rejected last year so should we add

00:17:11,839 --> 00:17:15,199
that function for example

00:17:13,520 --> 00:17:17,199
what where is the boundary should we

00:17:15,199 --> 00:17:18,799
have also like you need to know that

00:17:17,199 --> 00:17:20,880
when we add something in prom coil

00:17:18,799 --> 00:17:22,480
proper then you know with the compliance

00:17:20,880 --> 00:17:24,480
that will be tested across uh

00:17:22,480 --> 00:17:26,319
many different vendors so i feel like

00:17:24,480 --> 00:17:27,760
this should be multiple people that get

00:17:26,319 --> 00:17:29,679
to decide which

00:17:27,760 --> 00:17:31,840
uh function should go into chromecare

00:17:29,679 --> 00:17:33,280
proper because this has an impact on the

00:17:31,840 --> 00:17:35,039
whole ecosystem what do you think you

00:17:33,280 --> 00:17:36,720
should use

00:17:35,039 --> 00:17:38,160
yeah for sure um i mean for some

00:17:36,720 --> 00:17:41,280
syntactical constructs

00:17:38,160 --> 00:17:43,120
also tools like the new editor and

00:17:41,280 --> 00:17:44,080
prominence and so on also need updating

00:17:43,120 --> 00:17:46,080
of course

00:17:44,080 --> 00:17:47,840
but that i mean that's fair i think

00:17:46,080 --> 00:17:50,559
functions

00:17:47,840 --> 00:17:50,880
at least in tooling is easy to add um

00:17:50,559 --> 00:17:53,600
and

00:17:50,880 --> 00:17:56,000
should hopefully also be easy to add for

00:17:53,600 --> 00:17:58,160
people re-implementing prom ql

00:17:56,000 --> 00:17:59,360
uh like i think the hard thing to get

00:17:58,160 --> 00:18:01,200
right initially

00:17:59,360 --> 00:18:03,120
when re-implementing prom qr completely

00:18:01,200 --> 00:18:03,440
is the whole execution model bit and

00:18:03,120 --> 00:18:05,280
like

00:18:03,440 --> 00:18:06,880
all the selection and binary operators

00:18:05,280 --> 00:18:09,120
and so on but the functions

00:18:06,880 --> 00:18:11,280
should be you know relatively arbitrary

00:18:09,120 --> 00:18:12,720
code that anyone can re-implement

00:18:11,280 --> 00:18:14,160
so from that perspective i'm not too

00:18:12,720 --> 00:18:16,000
worried except for that of course it

00:18:14,160 --> 00:18:16,960
will take some time for everyone to get

00:18:16,000 --> 00:18:20,160
to the latest

00:18:16,960 --> 00:18:22,960
compatible state but i

00:18:20,160 --> 00:18:24,480
i think we're talking about several

00:18:22,960 --> 00:18:27,679
different things now of course

00:18:24,480 --> 00:18:30,960
um so so unpacking this julian

00:18:27,679 --> 00:18:31,919
just said prong proper and i disagree

00:18:30,960 --> 00:18:35,360
that we would be

00:18:31,919 --> 00:18:36,799
extending from a proper day one

00:18:35,360 --> 00:18:38,640
i think this would happen behind a

00:18:36,799 --> 00:18:41,280
feature flag i think this would happen

00:18:38,640 --> 00:18:43,360
in super careful exploratory mode

00:18:41,280 --> 00:18:44,480
enable this for people who want to use

00:18:43,360 --> 00:18:47,760
this

00:18:44,480 --> 00:18:51,039
but but not make it part of of of

00:18:47,760 --> 00:18:53,520
the real main prompt yeah if you see it

00:18:51,039 --> 00:18:55,280
as experimental or an extension

00:18:53,520 --> 00:18:57,280
i think it doesn't matter but but i

00:18:55,280 --> 00:18:58,640
think it it does not make sense to make

00:18:57,280 --> 00:19:01,039
it part of of prom

00:18:58,640 --> 00:19:01,840
a part of purple or core or what have

00:19:01,039 --> 00:19:05,600
you

00:19:01,840 --> 00:19:07,120
the other thing is um i mean myself my

00:19:05,600 --> 00:19:08,960
my opinion hasn't changed over the years

00:19:07,120 --> 00:19:11,679
that x-ray and such is useful and

00:19:08,960 --> 00:19:13,280
such and as such should be implemented

00:19:11,679 --> 00:19:16,240
but that is distinct

00:19:13,280 --> 00:19:16,880
from from uh from what i i meant here

00:19:16,240 --> 00:19:18,720
but

00:19:16,880 --> 00:19:20,559
i mean we can also talk about x-rays and

00:19:18,720 --> 00:19:24,160
such um

00:19:20,559 --> 00:19:29,280
i i don't think there's strong

00:19:24,160 --> 00:19:29,280
opposition to to just doing it and done

00:19:34,799 --> 00:19:41,840
so i don't know what the latest state is

00:19:38,640 --> 00:19:44,000
at red hat but i know um that

00:19:41,840 --> 00:19:45,360
before before i left that there was a

00:19:44,000 --> 00:19:48,480
team that

00:19:45,360 --> 00:19:50,320
specifically wanted the data to be in

00:19:48,480 --> 00:19:52,480
different systems so that they could use

00:19:50,320 --> 00:19:54,960
the tools that they know

00:19:52,480 --> 00:19:56,960
and like you know and so i think there's

00:19:54,960 --> 00:19:58,320
a different aspect to this as well which

00:19:56,960 --> 00:20:00,080
i think unfortunately

00:19:58,320 --> 00:20:01,520
buttock isn't here but there were a

00:20:00,080 --> 00:20:03,120
couple of discussions in sick

00:20:01,520 --> 00:20:05,200
observability about

00:20:03,120 --> 00:20:06,159
kind of batch processing and analytics

00:20:05,200 --> 00:20:09,919
use cases

00:20:06,159 --> 00:20:12,080
so i wonder where that discussion led to

00:20:09,919 --> 00:20:13,600
um i i didn't follow it but i know that

00:20:12,080 --> 00:20:16,480
it did happen and i i

00:20:13,600 --> 00:20:18,000
feel like there's at least some touch

00:20:16,480 --> 00:20:20,960
points to this topic

00:20:18,000 --> 00:20:21,679
in there as well but but this well what

00:20:20,960 --> 00:20:25,280
you just said

00:20:21,679 --> 00:20:26,799
is importing tsdb data into other

00:20:25,280 --> 00:20:29,200
languages

00:20:26,799 --> 00:20:29,919
correct i i think that was one of the

00:20:29,200 --> 00:20:32,640
aspects that

00:20:29,919 --> 00:20:34,559
were being discussed there it the the

00:20:32,640 --> 00:20:37,760
larger use case was about

00:20:34,559 --> 00:20:40,720
analytics in in general and this was one

00:20:37,760 --> 00:20:40,720
of the solutions

00:20:42,320 --> 00:20:46,720
most concretely was it was discussed to

00:20:44,480 --> 00:20:50,400
basically have something

00:20:46,720 --> 00:20:54,000
where java could read blocks directly

00:20:50,400 --> 00:20:56,480
and then um yeah just use whatever

00:20:54,000 --> 00:20:57,440
tools there are for for analytics to to

00:20:56,480 --> 00:21:00,400
process these

00:20:57,440 --> 00:21:02,320
blocks directly from from this that was

00:21:00,400 --> 00:21:05,440
the most concrete i've heard of

00:21:02,320 --> 00:21:07,440
being discussed i mean i think

00:21:05,440 --> 00:21:08,640
all those use cases are still valid like

00:21:07,440 --> 00:21:11,600
you should still just

00:21:08,640 --> 00:21:12,559
use the api to extract some data or you

00:21:11,600 --> 00:21:15,360
can create

00:21:12,559 --> 00:21:16,000
a binary code that accesses blocks i

00:21:15,360 --> 00:21:18,559
think this is all

00:21:16,000 --> 00:21:19,360
fine i think we're more we don't want to

00:21:18,559 --> 00:21:21,440
replace that

00:21:19,360 --> 00:21:23,120
but the question is if we should use

00:21:21,440 --> 00:21:26,159
those

00:21:23,120 --> 00:21:29,679
yeah hypothetical or even practical

00:21:26,159 --> 00:21:31,360
uh possibilities to reject any

00:21:29,679 --> 00:21:33,039
like feature requests for prom curl

00:21:31,360 --> 00:21:35,440
functions and

00:21:33,039 --> 00:21:36,320
i think like just having feature flags

00:21:35,440 --> 00:21:38,640
like

00:21:36,320 --> 00:21:39,919
embracing them uh already unlocks

00:21:38,640 --> 00:21:42,000
something like i guess

00:21:39,919 --> 00:21:43,200
hold winters if it happened again we

00:21:42,000 --> 00:21:45,200
would just put it behind the feature

00:21:43,200 --> 00:21:47,120
flag and then we would notice after

00:21:45,200 --> 00:21:49,600
a few months that wasn't really what we

00:21:47,120 --> 00:21:51,760
wanted and would could fix it and

00:21:49,600 --> 00:21:52,720
as that would already make a much better

00:21:51,760 --> 00:21:55,280
story

00:21:52,720 --> 00:21:56,320
so i think this is one thing when richie

00:21:55,280 --> 00:21:58,000
said we're talking about different

00:21:56,320 --> 00:22:00,480
things or we could just

00:21:58,000 --> 00:22:01,200
extend promgal in a more liberal fashion

00:22:00,480 --> 00:22:03,600
and if we

00:22:01,200 --> 00:22:05,440
like then have new functions that are

00:22:03,600 --> 00:22:06,559
really useful we just put them into the

00:22:05,440 --> 00:22:09,679
standard set

00:22:06,559 --> 00:22:12,000
eventually having said that there might

00:22:09,679 --> 00:22:13,120
i would also love to have some kind of

00:22:12,000 --> 00:22:16,400
interface that

00:22:13,120 --> 00:22:19,200
is not you just add code to prometheus

00:22:16,400 --> 00:22:21,280
and recompile it but what we have some

00:22:19,200 --> 00:22:22,799
i don't know is it a plugin interface or

00:22:21,280 --> 00:22:25,120
whatever or you can

00:22:22,799 --> 00:22:26,880
add user defined function in some nice

00:22:25,120 --> 00:22:28,799
way but i'm not sure if that

00:22:26,880 --> 00:22:30,480
that should be like on a binary level or

00:22:28,799 --> 00:22:32,640
we should have a way of

00:22:30,480 --> 00:22:34,159
implementing user-defined functions or

00:22:32,640 --> 00:22:37,280
something i don't know

00:22:34,159 --> 00:22:37,760
i would when i put my separate topic on

00:22:37,280 --> 00:22:40,159
the

00:22:37,760 --> 00:22:41,919
vote into the voting document i was

00:22:40,159 --> 00:22:42,559
thinking we should at least find out if

00:22:41,919 --> 00:22:44,640
we would be

00:22:42,559 --> 00:22:46,960
open to an option like that if someone

00:22:44,640 --> 00:22:48,880
came up with a good plan

00:22:46,960 --> 00:22:50,799
or if we just don't want this right i

00:22:48,880 --> 00:22:53,840
mean user defined function is

00:22:50,799 --> 00:22:56,000
something that smells like and built in

00:22:53,840 --> 00:22:59,440
templating which i think it is now

00:22:56,000 --> 00:23:01,679
we deliberately did not build in

00:22:59,440 --> 00:23:03,600
templating into prom ql

00:23:01,679 --> 00:23:05,039
but i think user defined functions is a

00:23:03,600 --> 00:23:07,200
bit different and we might

00:23:05,039 --> 00:23:08,880
want this but perhaps we don't like this

00:23:07,200 --> 00:23:11,919
is why i think we should discuss it

00:23:08,880 --> 00:23:13,520
so i have linked in the chat obsoletix

00:23:11,919 --> 00:23:15,840
which is a tool from the thanos

00:23:13,520 --> 00:23:19,039
community to i think

00:23:15,840 --> 00:23:21,840
export uh tsdb blocks into

00:23:19,039 --> 00:23:23,600
packet files to be used for analytics

00:23:21,840 --> 00:23:25,360
use cases

00:23:23,600 --> 00:23:26,799
yeah that's exactly the thing i was

00:23:25,360 --> 00:23:31,600
mentioning basically

00:23:26,799 --> 00:23:31,600
yeah yeah

00:23:32,480 --> 00:23:39,120
go on richie there's also something

00:23:36,640 --> 00:23:39,679
i forgot his name the google person who

00:23:39,120 --> 00:23:42,960
was

00:23:39,679 --> 00:23:46,159
at chromecon and at the devsum in 2017

00:23:42,960 --> 00:23:49,919
and 18 um they were

00:23:46,159 --> 00:23:52,640
they were working on importing tsdb 1.x

00:23:49,919 --> 00:23:55,679
into into r

00:23:52,640 --> 00:23:57,200
and there's this this data format within

00:23:55,679 --> 00:23:59,919
the scientific community

00:23:57,200 --> 00:24:01,039
which is named i think after an enema or

00:23:59,919 --> 00:24:03,440
something

00:24:01,039 --> 00:24:04,799
but i forgot the name and there is

00:24:03,440 --> 00:24:08,159
something which imports

00:24:04,799 --> 00:24:10,559
uh prometheus tsdb into into that format

00:24:08,159 --> 00:24:11,600
and and just makes it malleable inside

00:24:10,559 --> 00:24:14,480
python

00:24:11,600 --> 00:24:15,600
and in in in r and you can directly work

00:24:14,480 --> 00:24:19,039
on that data

00:24:15,600 --> 00:24:21,200
if if you have it on this but i agree

00:24:19,039 --> 00:24:24,559
with with bjorn

00:24:21,200 --> 00:24:26,960
yes it makes sense to to to have that

00:24:24,559 --> 00:24:29,600
and try and enable it very possible

00:24:26,960 --> 00:24:31,440
yet to frederick's point of people want

00:24:29,600 --> 00:24:32,559
to use what they know i would actually

00:24:31,440 --> 00:24:35,919
prefer

00:24:32,559 --> 00:24:38,559
to use prom ql for statistical analysis

00:24:35,919 --> 00:24:39,919
because that's what what i have anyway

00:24:38,559 --> 00:24:41,039
and that's what i'm mainly writing

00:24:39,919 --> 00:24:42,480
curious in

00:24:41,039 --> 00:24:44,480
and and i just want to have more

00:24:42,480 --> 00:24:46,480
functionality in prompt yeah

00:24:44,480 --> 00:24:48,960
i think that's the case of the best tool

00:24:46,480 --> 00:24:50,799
is the one i know

00:24:48,960 --> 00:24:52,799
you that for you that's the case but

00:24:50,799 --> 00:24:54,159
that's not necessarily representative of

00:24:52,799 --> 00:24:57,520
everyone right

00:24:54,159 --> 00:24:59,440
um and that's why i agree i think

00:24:57,520 --> 00:25:01,279
all of what we had discussed should be

00:24:59,440 --> 00:25:05,520
possible

00:25:01,279 --> 00:25:08,000
yes i think that's that's the main

00:25:05,520 --> 00:25:09,760
point that those are not mutually

00:25:08,000 --> 00:25:12,480
exclusive like we are talking about

00:25:09,760 --> 00:25:13,760
three things now x-rate and such

00:25:12,480 --> 00:25:16,880
scientific usage

00:25:13,760 --> 00:25:20,559
or use cases within prom ql

00:25:16,880 --> 00:25:22,720
and if possible enable psdb to be reused

00:25:20,559 --> 00:25:24,880
more easily in other languages

00:25:22,720 --> 00:25:26,960
and i think all of those three are valid

00:25:24,880 --> 00:25:30,640
and i i think everyone else agrees that

00:25:26,960 --> 00:25:34,559
they are not mutually exclusive so

00:25:30,640 --> 00:25:39,039
should we experiment with uh go plugins

00:25:34,559 --> 00:25:39,039
which is like so files that you can load

00:25:39,520 --> 00:25:44,240
if we're trying to go for like analytics

00:25:41,919 --> 00:25:46,720
use cases i would

00:25:44,240 --> 00:25:48,799
i think go is probably not the correct

00:25:46,720 --> 00:25:50,799
language for our users

00:25:48,799 --> 00:25:52,159
like it should be an r it should be a

00:25:50,799 --> 00:25:57,360
python it should be

00:25:52,159 --> 00:25:59,520
something used for the analytics domain

00:25:57,360 --> 00:26:01,440
yeah we just put a python interpreter

00:25:59,520 --> 00:26:02,880
into prometheus and then you can write

00:26:01,440 --> 00:26:06,559
plugins

00:26:02,880 --> 00:26:08,480
like on the live prometheus yes

00:26:06,559 --> 00:26:11,360
you can you can have a wrapper and you

00:26:08,480 --> 00:26:13,200
can call those things from go

00:26:11,360 --> 00:26:14,640
but you did all the label matching and

00:26:13,200 --> 00:26:17,039
everything you did this

00:26:14,640 --> 00:26:19,039
before and all the the prompting alley

00:26:17,039 --> 00:26:20,320
bits are already done and then you just

00:26:19,039 --> 00:26:22,240
toss it into

00:26:20,320 --> 00:26:23,520
into those function as all of this is

00:26:22,240 --> 00:26:26,080
vector math anyway

00:26:23,520 --> 00:26:27,360
because that's what statistical analysis

00:26:26,080 --> 00:26:31,120
is using

00:26:27,360 --> 00:26:31,120
that should be relatively painless

00:26:34,559 --> 00:26:37,840
yeah but how do you integrate that

00:26:36,400 --> 00:26:39,520
information at the end of the day that's

00:26:37,840 --> 00:26:41,440
what i'm proposing the the

00:26:39,520 --> 00:26:43,440
go plugin solution because then it just

00:26:41,440 --> 00:26:47,039
says so far and can even be written in c

00:26:43,440 --> 00:26:47,039
i think so you can wrap any language

00:26:48,720 --> 00:26:52,400
the downside is that it's not supported

00:26:50,480 --> 00:26:55,679
on windows so we would have

00:26:52,400 --> 00:26:55,679
feature and parity there

00:26:56,640 --> 00:27:00,640
i think as an experimental thing it's

00:26:59,039 --> 00:27:03,520
fine

00:27:00,640 --> 00:27:05,520
to to have more restrictions on the

00:27:03,520 --> 00:27:07,520
usage of your thing you will also have a

00:27:05,520 --> 00:27:10,240
more painful build process

00:27:07,520 --> 00:27:10,799
if all of a sudden you want to include

00:27:10,240 --> 00:27:14,799
python

00:27:10,799 --> 00:27:17,120
and r and fortran

00:27:14,799 --> 00:27:19,039
in your build chain like that's also

00:27:17,120 --> 00:27:19,600
more painful and puts more restrictions

00:27:19,039 --> 00:27:22,159
on you

00:27:19,600 --> 00:27:23,360
if you enable that thing i mean i think

00:27:22,159 --> 00:27:25,279
we should

00:27:23,360 --> 00:27:26,880
we need to experiment with that and i

00:27:25,279 --> 00:27:28,960
think any of these options could be

00:27:26,880 --> 00:27:31,200
viable or they could not be viable

00:27:28,960 --> 00:27:32,640
but i think the important message is if

00:27:31,200 --> 00:27:35,039
we if we

00:27:32,640 --> 00:27:37,039
find this idea interesting and would

00:27:35,039 --> 00:27:38,960
invite people to experiment with that

00:27:37,039 --> 00:27:40,399
because that's different from i think

00:27:38,960 --> 00:27:44,080
the current

00:27:40,399 --> 00:27:46,080
um notion is essentially no right

00:27:44,080 --> 00:27:48,159
we don't want this we want promptgirl to

00:27:46,080 --> 00:27:49,520
be this fairly restricted thing and if

00:27:48,159 --> 00:27:51,520
you want something

00:27:49,520 --> 00:27:52,960
more advanced you just export the data i

00:27:51,520 --> 00:27:55,760
think this is how we

00:27:52,960 --> 00:27:56,559
communicated it so far and if we if we

00:27:55,760 --> 00:27:59,919
want to stop

00:27:56,559 --> 00:28:02,000
that communication and just say sure if

00:27:59,919 --> 00:28:06,080
somebody comes up with a great embedded

00:28:02,000 --> 00:28:08,880
lure whatever i'm just going crazy here

00:28:06,080 --> 00:28:12,240
um we would at least consider it and see

00:28:08,880 --> 00:28:13,440
if it's right if it makes sense

00:28:12,240 --> 00:28:17,840
that's that i think would be an

00:28:13,440 --> 00:28:17,840
interesting message you think

00:28:20,240 --> 00:28:22,880
i think yes

00:28:25,200 --> 00:28:28,720
so let's nail those let's nail down

00:28:28,240 --> 00:28:32,000
those

00:28:28,720 --> 00:28:34,000
few points of consensus and then if if

00:28:32,000 --> 00:28:35,760
all of you want we can also talk acro

00:28:34,000 --> 00:28:39,919
x-ray and such because

00:28:35,760 --> 00:28:39,919
it fits topic topically

00:28:40,720 --> 00:28:45,840
sorry i can't english today

00:29:10,840 --> 00:29:13,840
so

00:29:54,320 --> 00:29:57,679
i think i'm capturing the consensus so i

00:29:56,559 --> 00:30:01,440
have three points

00:29:57,679 --> 00:30:03,679
right now first of consensus

00:30:01,440 --> 00:30:06,559
we want to explore in analytics use

00:30:03,679 --> 00:30:09,840
cases behind a feature flag

00:30:06,559 --> 00:30:09,840
all agreed anyone disagreeing

00:30:10,240 --> 00:30:14,240
does that refer to like built in

00:30:12,640 --> 00:30:17,520
extensions to procure

00:30:14,240 --> 00:30:17,520
or is that more than that

00:30:17,679 --> 00:30:25,200
use cases within chrome ql

00:30:23,039 --> 00:30:26,559
okay we want to explore analytics use

00:30:25,200 --> 00:30:28,320
cases

00:30:26,559 --> 00:30:30,559
within the profile behind the feature

00:30:28,320 --> 00:30:34,080
flag support being

00:30:30,559 --> 00:30:37,840
analytics use cases from gl

00:30:34,080 --> 00:30:37,840
is that clearer or not

00:30:38,240 --> 00:30:44,480
but don't care um uh

00:30:41,600 --> 00:30:46,480
so we want to explore we want to explore

00:30:44,480 --> 00:30:51,120
supporting analytics use cases within

00:30:46,480 --> 00:30:53,760
prom ql behind the feature flag

00:30:51,120 --> 00:30:53,760
disagreeing

00:30:54,720 --> 00:31:00,559
okay next one

00:30:58,399 --> 00:31:01,440
we are open to wrapping other languages

00:31:00,559 --> 00:31:05,840
eg

00:31:01,440 --> 00:31:05,840
r fortran psi python

00:31:06,399 --> 00:31:12,880
whatever that means like in

00:31:09,840 --> 00:31:16,399
i deliberately phrased it as openly

00:31:12,880 --> 00:31:17,279
as humanly possible to to not block

00:31:16,399 --> 00:31:20,559
anyone from

00:31:17,279 --> 00:31:24,880
experimenting as long as it's

00:31:20,559 --> 00:31:24,880
um maybe behind a build flag

00:31:25,039 --> 00:31:32,320
i mean is very open right it just means

00:31:28,559 --> 00:31:36,960
we wouldn't we don't just say no

00:31:32,320 --> 00:31:36,960
which i think we would have in the past

00:31:37,840 --> 00:31:41,360
yeah but let's say initially behind the

00:31:39,519 --> 00:31:43,840
build flag maybe or maybe not

00:31:41,360 --> 00:31:45,279
um let me just read it out again and

00:31:43,840 --> 00:31:47,600
then we see if

00:31:45,279 --> 00:31:50,720
what we usually do is ask for a design

00:31:47,600 --> 00:31:50,720
dock or that kind of things

00:31:58,840 --> 00:32:01,840
yes

00:32:04,240 --> 00:32:07,919
okay yeah good point we are open to

00:32:06,720 --> 00:32:10,799
wrapping other languages

00:32:07,919 --> 00:32:13,120
egr for trend sci python given an

00:32:10,799 --> 00:32:16,559
accepted design doc

00:32:13,120 --> 00:32:16,559
everyone agreed anyone disagree

00:32:20,880 --> 00:32:24,159
next one we encourage others to wrap

00:32:22,559 --> 00:32:25,760
tsdb for their languages

00:32:24,159 --> 00:32:29,840
and will accept code changes where

00:32:25,760 --> 00:32:29,840
reasonably possible

00:32:30,240 --> 00:32:33,279
all again sure i mean i think we said

00:32:32,080 --> 00:32:35,919
that before but

00:32:33,279 --> 00:32:37,679
we can say it again yes i think we also

00:32:35,919 --> 00:32:38,640
said something about x-ray in the past

00:32:37,679 --> 00:32:40,559
but let's just

00:32:38,640 --> 00:32:42,240
do it again and then it's current and

00:32:40,559 --> 00:32:43,919
everyone think it's new and thinks it's

00:32:42,240 --> 00:32:44,799
new and they get excited and hopefully

00:32:43,919 --> 00:32:47,039
soon

00:32:44,799 --> 00:32:48,640
i think we've also said in the past only

00:32:47,039 --> 00:32:51,760
go for interacting with the t

00:32:48,640 --> 00:32:53,679
with a block itself and things like that

00:32:51,760 --> 00:32:56,480
so there has been mixed communication

00:32:53,679 --> 00:32:58,960
here for sure

00:32:56,480 --> 00:32:59,760
i mean in our code base we only have go

00:32:58,960 --> 00:33:02,799
code

00:32:59,760 --> 00:33:05,679
in in the tsb code

00:33:02,799 --> 00:33:07,039
um so we wouldn't be accepting any other

00:33:05,679 --> 00:33:07,600
changes of course we don't have a place

00:33:07,039 --> 00:33:11,360
for them

00:33:07,600 --> 00:33:14,559
i mean if someone has a super great prom

00:33:11,360 --> 00:33:14,960
from r tool like prometheus community is

00:33:14,559 --> 00:33:17,279
open

00:33:14,960 --> 00:33:20,080
whatever give it but i don't think

00:33:17,279 --> 00:33:22,159
that's that's how prometheus prometheus

00:33:20,080 --> 00:33:23,519
so i guess that's my how this is phrased

00:33:22,159 --> 00:33:25,840
right now is

00:33:23,519 --> 00:33:27,039
we encourage others to wrap tsdb for

00:33:25,840 --> 00:33:29,440
their languages

00:33:27,039 --> 00:33:31,360
and will accept code changes it says

00:33:29,440 --> 00:33:39,840
where reasonably possible but

00:33:31,360 --> 00:33:39,840
like i have no idea what that is okay

00:33:54,720 --> 00:34:01,039
um we we do know ftsd we don't have tsdb

00:33:58,720 --> 00:34:04,000
maintainers in this school to

00:34:01,039 --> 00:34:04,000
vote on that point

00:34:04,320 --> 00:34:11,679
that is a fair point

00:34:07,440 --> 00:34:15,599
to make so should we skip the consensus

00:34:11,679 --> 00:34:17,280
on on that yes because i remember that

00:34:15,599 --> 00:34:19,760
they were asking that we only

00:34:17,280 --> 00:34:21,839
use go to interact with the tsdb

00:34:19,760 --> 00:34:22,960
directly because they cannot guarantee

00:34:21,839 --> 00:34:25,599
compatibility

00:34:22,960 --> 00:34:27,440
especially stuff like the snappy format

00:34:25,599 --> 00:34:28,560
you never know like it's supposed to be

00:34:27,440 --> 00:34:30,320
standard but

00:34:28,560 --> 00:34:31,760
there are the implementation details

00:34:30,320 --> 00:34:35,040
possibly that might

00:34:31,760 --> 00:34:37,440
be the devil in the details

00:34:35,040 --> 00:34:37,440
fair

00:34:38,800 --> 00:34:44,560
so i would just not do the call for

00:34:40,639 --> 00:34:44,560
consensus without usdb maintainers

00:34:46,159 --> 00:34:49,200
yes that's something i agree with with

00:34:47,919 --> 00:34:52,560
your other point i think

00:34:49,200 --> 00:34:52,960
uh as long as it's a goal um we we have

00:34:52,560 --> 00:34:55,599
the

00:34:52,960 --> 00:34:58,000
the promises and if it's other languages

00:34:55,599 --> 00:35:00,640
but okay

00:34:58,000 --> 00:35:01,119
do we offer that we host other languages

00:35:00,640 --> 00:35:02,880
for

00:35:01,119 --> 00:35:04,400
for interacting with keys to be or

00:35:02,880 --> 00:35:05,359
should i just kill everything and we

00:35:04,400 --> 00:35:07,359
move on

00:35:05,359 --> 00:35:08,800
i'm hesitant like i i don't if someone

00:35:07,359 --> 00:35:11,440
came along today and

00:35:08,800 --> 00:35:13,440
wrote something for parsing a tsd block

00:35:11,440 --> 00:35:14,560
and wanted to put it in client python or

00:35:13,440 --> 00:35:16,960
something like that

00:35:14,560 --> 00:35:18,560
i i'm not sure i'd want to do that

00:35:16,960 --> 00:35:21,839
without further thought

00:35:18,560 --> 00:35:24,160
for sure yeah i'm not i'm not

00:35:21,839 --> 00:35:25,920
comfortable to commit to this right now

00:35:24,160 --> 00:35:29,119
i feel similar because essentially that

00:35:25,920 --> 00:35:30,720
would make the on disk format an

00:35:29,119 --> 00:35:32,320
yeah and api think in the past we've

00:35:30,720 --> 00:35:33,920
said that we

00:35:32,320 --> 00:35:35,200
want to try and stay away from that

00:35:33,920 --> 00:35:36,160
especially because like we have an

00:35:35,200 --> 00:35:38,240
entire working group

00:35:36,160 --> 00:35:40,080
thinking about changes to this format

00:35:38,240 --> 00:35:42,720
right

00:35:40,080 --> 00:35:45,680
[Music]

00:35:42,720 --> 00:35:48,400
good i deleted it um should we talk

00:35:45,680 --> 00:35:48,400
about x-rayed

00:35:48,800 --> 00:35:52,880
we have already talked about it and the

00:35:50,400 --> 00:35:55,119
conclusion was that we were waiting for

00:35:52,880 --> 00:35:56,480
someone to have the time to do a full

00:35:55,119 --> 00:36:00,160
design document and

00:35:56,480 --> 00:36:02,000
as another different options

00:36:00,160 --> 00:36:03,680
yeah which i mean we have a bunch of

00:36:02,000 --> 00:36:04,079
topics now that are super interesting

00:36:03,680 --> 00:36:05,599
that

00:36:04,079 --> 00:36:07,760
all have the conclusion we'll write the

00:36:05,599 --> 00:36:11,599
design daw

00:36:07,760 --> 00:36:14,720
so we have a long backlog

00:36:11,599 --> 00:36:16,960
which at least opens up avenues and

00:36:14,720 --> 00:36:18,640
hopefully also means more maintainers in

00:36:16,960 --> 00:36:20,160
the medium term and for anyone who's on

00:36:18,640 --> 00:36:22,000
that call and not a prometheus

00:36:20,160 --> 00:36:24,560
maintainer

00:36:22,000 --> 00:36:26,240
feel free to to take any of those topics

00:36:24,560 --> 00:36:31,440
if they're interesting to you and

00:36:26,240 --> 00:36:31,440
and and start engaging with them um

00:36:32,240 --> 00:36:36,480
i actually think we should create empty

00:36:34,000 --> 00:36:38,400
design documents

00:36:36,480 --> 00:36:40,000
i did that and then people started

00:36:38,400 --> 00:36:42,320
complaining about having empty design

00:36:40,000 --> 00:36:44,160
dock so i stopped it but we can uh we

00:36:42,320 --> 00:36:46,320
can actually walk through this and

00:36:44,160 --> 00:36:47,359
like that's what i initially did when

00:36:46,320 --> 00:36:50,079
when we when we

00:36:47,359 --> 00:36:51,040
on uh when we opened a lot of of of

00:36:50,079 --> 00:36:53,119
topics

00:36:51,040 --> 00:36:54,480
i literally just made an empty thing and

00:36:53,119 --> 00:36:56,800
wrote in be bold

00:36:54,480 --> 00:36:58,079
right in what you want and then people

00:36:56,800 --> 00:36:59,520
started complaining that we have

00:36:58,079 --> 00:37:00,720
something which is called a design dog

00:36:59,520 --> 00:37:03,760
and it's empty

00:37:00,720 --> 00:37:05,680
yeah i would remember at least we should

00:37:03,760 --> 00:37:09,440
have a list of design dogs

00:37:05,680 --> 00:37:11,599
to do with burp's links so we collect

00:37:09,440 --> 00:37:13,040
the links to perhaps an empty document

00:37:11,599 --> 00:37:15,599
or

00:37:13,040 --> 00:37:16,400
whatever like i i think we have a bunch

00:37:15,599 --> 00:37:19,760
of them

00:37:16,400 --> 00:37:22,560
and it's even for me it's hard to

00:37:19,760 --> 00:37:24,000
know which we have which already have an

00:37:22,560 --> 00:37:27,760
empty door

00:37:24,000 --> 00:37:30,160
which not so at least now we are

00:37:27,760 --> 00:37:32,720
normalizing putting the design documents

00:37:30,160 --> 00:37:37,119
in the design documents folder

00:37:32,720 --> 00:37:39,359
which is already a good step

00:37:37,119 --> 00:37:40,240
but i think byron's point is valid that

00:37:39,359 --> 00:37:44,320
we have an

00:37:40,240 --> 00:37:46,000
overview of maybe status of design doc

00:37:44,320 --> 00:37:47,520
where we just say this is empty and we

00:37:46,000 --> 00:37:49,040
would love someone to work on this and

00:37:47,520 --> 00:37:52,240
please step up and

00:37:49,040 --> 00:37:54,880
and just start doing stuff i think that

00:37:52,240 --> 00:37:54,880
makes sense

00:37:56,079 --> 00:38:00,720
so let's let's slip in that discussion

00:37:59,520 --> 00:38:05,839
point because we have discussed it

00:38:00,720 --> 00:38:05,839
anyway um design docs

00:38:07,280 --> 00:38:11,359
and we will just jump straight to the

00:38:16,839 --> 00:38:19,839
consensus

00:38:30,839 --> 00:38:33,839
do

00:38:44,800 --> 00:38:48,480
what's a good location for that list

00:38:49,040 --> 00:38:52,320
either the community side or we just put

00:38:51,200 --> 00:38:54,480
it into the public

00:38:52,320 --> 00:38:55,920
into the public i mean we have the

00:38:54,480 --> 00:38:57,760
public folder

00:38:55,920 --> 00:39:00,960
and we can just put a document in the

00:38:57,760 --> 00:39:04,640
public folder and call it readme

00:39:00,960 --> 00:39:08,560
i would i would put it in the website

00:39:04,640 --> 00:39:08,960
also fine okay and i mean we could also

00:39:08,560 --> 00:39:11,280
list

00:39:08,960 --> 00:39:13,200
like design docs that are done because i

00:39:11,280 --> 00:39:16,000
think they're an interesting read and

00:39:13,200 --> 00:39:16,800
having a directory of them is probably

00:39:16,000 --> 00:39:19,359
that's actually

00:39:16,800 --> 00:39:19,920
another point i think we should start

00:39:19,359 --> 00:39:22,320
moving

00:39:19,920 --> 00:39:23,200
stuff which we have in google docs into

00:39:22,320 --> 00:39:26,400
markdown

00:39:23,200 --> 00:39:29,280
for example all our dev summits

00:39:26,400 --> 00:39:30,640
it it's it's way better to do this in

00:39:29,280 --> 00:39:33,119
the in the design

00:39:30,640 --> 00:39:34,079
in google docs when when we are writing

00:39:33,119 --> 00:39:36,079
them

00:39:34,079 --> 00:39:38,480
uh and by we i mean myself and chris of

00:39:36,079 --> 00:39:42,480
course no one else is helping

00:39:38,480 --> 00:39:44,079
um but once they're static and published

00:39:42,480 --> 00:39:45,760
it actually makes sense to just make

00:39:44,079 --> 00:39:49,200
them part of of

00:39:45,760 --> 00:39:49,200
of what everyone can clone

00:39:50,480 --> 00:39:56,560
yeah but i think it's it's a bit of work

00:39:52,960 --> 00:40:00,240
right or is there a good auto converter

00:39:56,560 --> 00:40:04,000
no having done this it's

00:40:00,240 --> 00:40:06,560
yeah it's thankless uh generator

00:40:04,000 --> 00:40:07,839
 work which means i'll be doing it

00:40:06,560 --> 00:40:11,040
but still it makes sense

00:40:07,839 --> 00:40:13,520
so um yeah

00:40:11,040 --> 00:40:15,440
so design docs consensus we will start

00:40:13,520 --> 00:40:17,520
opening empty design docs to encourage

00:40:15,440 --> 00:40:19,440
new community members to step up we will

00:40:17,520 --> 00:40:21,200
list the status of the docs to not raise

00:40:19,440 --> 00:40:24,319
false hopes about

00:40:21,200 --> 00:40:27,520
empty dogs

00:40:24,319 --> 00:40:27,520
all agreed anyone disagree

00:40:28,240 --> 00:40:32,400
should we also make a consensus about

00:40:30,000 --> 00:40:32,800
moving old documents and design docs and

00:40:32,400 --> 00:40:36,000
such

00:40:32,800 --> 00:40:36,000
into into markdown

00:40:37,359 --> 00:40:41,280
i mean nobody would oppose it if

00:40:39,200 --> 00:40:44,000
somebody is doing the work

00:40:41,280 --> 00:40:45,119
yeah i guess but requiring it i don't

00:40:44,000 --> 00:40:47,359
know

00:40:45,119 --> 00:40:49,760
well i i i don't want to do the work if

00:40:47,359 --> 00:40:52,640
i don't know that everyone else agrees

00:40:49,760 --> 00:40:55,599
because i've i've recently been

00:40:52,640 --> 00:40:58,560
sometimes doing work which

00:40:55,599 --> 00:40:58,960
was not fruitful in the end and that

00:40:58,560 --> 00:41:02,240
yeah

00:40:58,960 --> 00:41:04,079
i would i would think let's start this

00:41:02,240 --> 00:41:05,599
linking just the google docs and then

00:41:04,079 --> 00:41:08,960
we'll see how it goes and

00:41:05,599 --> 00:41:11,280
if if yeah if the general feeling then

00:41:08,960 --> 00:41:13,359
is let's have them all in markdown you

00:41:11,280 --> 00:41:16,079
can still consider it

00:41:13,359 --> 00:41:17,119
less work for me perfect yes because

00:41:16,079 --> 00:41:19,520
also like

00:41:17,119 --> 00:41:22,000
the google doc has some metadata but we

00:41:19,520 --> 00:41:23,839
change what and also like if you need to

00:41:22,000 --> 00:41:26,000
put the consensus in different colors it

00:41:23,839 --> 00:41:28,800
will be like not really really

00:41:26,000 --> 00:41:34,400
smart on either so it will be html in

00:41:28,800 --> 00:41:36,000
markdown which

00:41:34,400 --> 00:41:37,599
yeah i mean we would still be linking

00:41:36,000 --> 00:41:41,040
back to the documents and such

00:41:37,599 --> 00:41:43,760
um that's similar to how i do it at

00:41:41,040 --> 00:41:46,000
grafana and such um

00:41:43,760 --> 00:41:47,280
but yeah let's let's just not and that

00:41:46,000 --> 00:41:49,599
makes it easier

00:41:47,280 --> 00:41:51,040
next one is bjorn revamp community

00:41:49,599 --> 00:41:54,160
channels

00:41:51,040 --> 00:41:55,839
okay so i brought this up on the team

00:41:54,160 --> 00:41:57,040
mailing list because it looked like we

00:41:55,839 --> 00:41:59,280
will never discuss it

00:41:57,040 --> 00:42:00,960
i i this is a quite old topic right so

00:41:59,280 --> 00:42:02,640
now we have a bunch of people here who

00:42:00,960 --> 00:42:06,960
are not on team so

00:42:02,640 --> 00:42:10,560
i can get us all on the same page

00:42:06,960 --> 00:42:13,040
my observation is that we have

00:42:10,560 --> 00:42:14,079
the original idea was we use github for

00:42:13,040 --> 00:42:16,640
bugs

00:42:14,079 --> 00:42:19,440
and we use mailing lists for discussions

00:42:16,640 --> 00:42:22,000
and irc for a female communication

00:42:19,440 --> 00:42:23,839
um which i really like but i'm also

00:42:22,000 --> 00:42:28,480
super old and this is the way

00:42:23,839 --> 00:42:28,480
that we did it i don't know in the 70s

00:42:28,800 --> 00:42:34,400
the um uh what i

00:42:31,839 --> 00:42:36,160
especially observe is that we have way

00:42:34,400 --> 00:42:38,240
fewer people on the mailing list than i

00:42:36,160 --> 00:42:38,800
would expect for the project of this

00:42:38,240 --> 00:42:41,359
size

00:42:38,800 --> 00:42:43,119
and we have like i don't know one to two

00:42:41,359 --> 00:42:46,240
orders of magnitude more users

00:42:43,119 --> 00:42:47,599
on the not even official slack channels

00:42:46,240 --> 00:42:48,880
on these themes they have slack compared

00:42:47,599 --> 00:42:51,520
to irc

00:42:48,880 --> 00:42:53,599
and now very recently we had this free

00:42:51,520 --> 00:42:55,440
note takeover so now we have a bit of

00:42:53,599 --> 00:42:56,720
attrition by getting all the people over

00:42:55,440 --> 00:42:59,760
to the new

00:42:56,720 --> 00:43:03,040
uh whatever it's pronounced

00:42:59,760 --> 00:43:04,720
thing um and um

00:43:03,040 --> 00:43:06,480
yeah that was kind of the reason why i

00:43:04,720 --> 00:43:07,599
thought i started the discussion on the

00:43:06,480 --> 00:43:10,079
team mailing this

00:43:07,599 --> 00:43:11,599
um the result of the discussion on the

00:43:10,079 --> 00:43:13,520
tmailing is essentially we have

00:43:11,599 --> 00:43:15,599
broadly different ideas like some people

00:43:13,520 --> 00:43:17,440
think let's have as many

00:43:15,599 --> 00:43:19,920
different channels as possible others

00:43:17,440 --> 00:43:22,160
think we should try to consolidate

00:43:19,920 --> 00:43:23,359
and this is why i think we should

00:43:22,160 --> 00:43:26,240
discuss it here and

00:43:23,359 --> 00:43:28,160
come up with what we actually what we

00:43:26,240 --> 00:43:28,560
what we want right and personally i

00:43:28,160 --> 00:43:31,119
think

00:43:28,560 --> 00:43:31,920
i can i always feel i have way too

00:43:31,119 --> 00:43:33,920
little time

00:43:31,920 --> 00:43:35,440
to do it justice to do like community

00:43:33,920 --> 00:43:35,839
support on those channels and i would

00:43:35,440 --> 00:43:38,960
just

00:43:35,839 --> 00:43:42,560
pick one chat like thing and one

00:43:38,960 --> 00:43:44,000
forum like thing and then uh focus on

00:43:42,560 --> 00:43:46,160
that one right

00:43:44,000 --> 00:43:47,440
of course there's bridging right we try

00:43:46,160 --> 00:43:50,720
we try to bridge my

00:43:47,440 --> 00:43:52,560
matrix and irc um but we could also

00:43:50,720 --> 00:43:54,480
bridge slack

00:43:52,560 --> 00:43:56,480
i don't have personal experience how

00:43:54,480 --> 00:43:59,760
well that works

00:43:56,480 --> 00:43:59,760
but yeah please discuss

00:44:05,280 --> 00:44:10,800
i mean i wrote in chat um i wasn't aware

00:44:08,640 --> 00:44:12,640
of the prometheus death channel up until

00:44:10,800 --> 00:44:14,000
yesterday so i was kind of surprised to

00:44:12,640 --> 00:44:16,480
see that and

00:44:14,000 --> 00:44:17,040
already quite a bunch of people in there

00:44:16,480 --> 00:44:20,079
um

00:44:17,040 --> 00:44:22,079
and then like a week ago i randomly

00:44:20,079 --> 00:44:23,440
um stumbled upon the fact that

00:44:22,079 --> 00:44:26,800
prometheus

00:44:23,440 --> 00:44:27,440
um like hashtag prometheus or whatever

00:44:26,800 --> 00:44:30,319
you call it

00:44:27,440 --> 00:44:32,079
on slack um it's like excluding general

00:44:30,319 --> 00:44:35,280
and random the most popular

00:44:32,079 --> 00:44:37,359
slack channel on the cncf so i was like

00:44:35,280 --> 00:44:38,720
yeah most popular by the number of

00:44:37,359 --> 00:44:42,480
people in there

00:44:38,720 --> 00:44:44,240
so i'm just just taking aside all the

00:44:42,480 --> 00:44:45,839
good and bad about slack and everything

00:44:44,240 --> 00:44:48,640
i think it just speaks

00:44:45,839 --> 00:44:50,400
for the amount of people being in there

00:44:48,640 --> 00:44:52,720
for a lively

00:44:50,400 --> 00:44:54,560
community being active on that side of

00:44:52,720 --> 00:44:56,960
thing

00:44:54,560 --> 00:44:58,480
it's it has a lot of people because of

00:44:56,960 --> 00:45:01,359
the way slack works

00:44:58,480 --> 00:45:02,000
but it doesn't have a lot of traffic

00:45:01,359 --> 00:45:04,000
right there's

00:45:02,000 --> 00:45:05,839
there's way more traffic on the matrix

00:45:04,000 --> 00:45:10,480
irc bridge

00:45:05,839 --> 00:45:13,200
uh than than the uh cncf slack

00:45:10,480 --> 00:45:14,079
but is that because like most power

00:45:13,200 --> 00:45:15,920
users

00:45:14,079 --> 00:45:18,720
or whatever you want to call them of

00:45:15,920 --> 00:45:23,040
prometheus are on that matrix irc

00:45:18,720 --> 00:45:25,599
bridge and aren't as active on cncf

00:45:23,040 --> 00:45:27,119
could be uh and i'm not even trying to

00:45:25,599 --> 00:45:27,440
make a case for one or the other i'm

00:45:27,119 --> 00:45:29,520
just

00:45:27,440 --> 00:45:32,400
yeah like stating the facts that like i

00:45:29,520 --> 00:45:35,040
saw recently being number one yeah

00:45:32,400 --> 00:45:35,440
yep no there's there's a few of us on

00:45:35,040 --> 00:45:38,800
there

00:45:35,440 --> 00:45:40,400
and and there's a lot of

00:45:38,800 --> 00:45:42,800
a lot more newbie questions and no

00:45:40,400 --> 00:45:42,800
answers

00:45:43,520 --> 00:45:47,520
i i would i mean if we could send the

00:45:45,680 --> 00:45:50,160
message if you want to meet the team

00:45:47,520 --> 00:45:51,599
members just go to this matrix rc thing

00:45:50,160 --> 00:45:53,760
and you'll have to

00:45:51,599 --> 00:45:55,599
not be like lazy and just use this like

00:45:53,760 --> 00:45:57,440
you're using at work anyway

00:45:55,599 --> 00:46:00,160
i would be fine with that but then we

00:45:57,440 --> 00:46:03,359
also have like people on team who think

00:46:00,160 --> 00:46:03,839
okay i just like slack more so i i be

00:46:03,359 --> 00:46:07,760
there

00:46:03,839 --> 00:46:09,920
and i'm not on on irc and so if

00:46:07,760 --> 00:46:11,280
like that more sounds like we just

00:46:09,920 --> 00:46:14,480
embrace the diversity

00:46:11,280 --> 00:46:17,760
and and accept the fragmentation but

00:46:14,480 --> 00:46:20,800
personally i mean everyone knows how

00:46:17,760 --> 00:46:21,280
i hate slack especially because they

00:46:20,800 --> 00:46:22,800
like

00:46:21,280 --> 00:46:24,800
embraced all those open source projects

00:46:22,800 --> 00:46:25,200
with a very open approach initially and

00:46:24,800 --> 00:46:27,520
then

00:46:25,200 --> 00:46:28,640
closed everything down and it's it's

00:46:27,520 --> 00:46:31,040
like yeah i

00:46:28,640 --> 00:46:33,040
really don't want to use it but if i

00:46:31,040 --> 00:46:34,400
know i can answer a question and 6 000

00:46:33,040 --> 00:46:36,880
newbies are listening

00:46:34,400 --> 00:46:38,000
it's just so it feels so way more

00:46:36,880 --> 00:46:41,520
effective than

00:46:38,000 --> 00:46:44,560
if i have like 100 or 500 people

00:46:41,520 --> 00:46:46,960
at most listening that's where my

00:46:44,560 --> 00:46:50,560
program starts

00:46:46,960 --> 00:46:52,480
so uh i think first that it is important

00:46:50,560 --> 00:46:55,040
to keep like an iot channel

00:46:52,480 --> 00:46:57,599
because that's where you still find a

00:46:55,040 --> 00:47:00,560
lot of people and it's also

00:46:57,599 --> 00:47:01,839
an open standard just like matrix

00:47:00,560 --> 00:47:03,839
regarding slack i

00:47:01,839 --> 00:47:05,680
am expecting i know that we have thanos

00:47:03,839 --> 00:47:08,000
and cortex in stack which is also

00:47:05,680 --> 00:47:09,760
important to us as a project so

00:47:08,000 --> 00:47:12,000
i also know that the permittive

00:47:09,760 --> 00:47:12,720
developer antennas and cortex are de

00:47:12,000 --> 00:47:14,960
facto

00:47:12,720 --> 00:47:16,160
also on slack and i think that we can

00:47:14,960 --> 00:47:18,560
embrace that

00:47:16,160 --> 00:47:20,800
split so that's why i listed now slack

00:47:18,560 --> 00:47:23,599
is now listed at least on the website

00:47:20,800 --> 00:47:24,640
uh i was expecting vertex but only they

00:47:23,599 --> 00:47:27,359
know to

00:47:24,640 --> 00:47:29,280
jump up and say hey i want to like drive

00:47:27,359 --> 00:47:30,800
the slack channels or support them a bit

00:47:29,280 --> 00:47:33,200
like more officially so we can remove

00:47:30,800 --> 00:47:35,200
the community maintained on the website

00:47:33,200 --> 00:47:37,200
uh because i think that with a team of

00:47:35,200 --> 00:47:38,000
17 and we expect that the team will grow

00:47:37,200 --> 00:47:41,040
in the coming months

00:47:38,000 --> 00:47:42,640
we can definitely under like those two

00:47:41,040 --> 00:47:44,400
especially since like yeah you have a

00:47:42,640 --> 00:47:45,280
lot of people that you just default to

00:47:44,400 --> 00:47:47,680
slack

00:47:45,280 --> 00:47:49,359
so i think we can answer them but i also

00:47:47,680 --> 00:47:49,680
see the volume it's not really irons

00:47:49,359 --> 00:47:52,000
like

00:47:49,680 --> 00:47:53,200
but with 6 000 people we can also expect

00:47:52,000 --> 00:47:56,000
that

00:47:53,200 --> 00:47:56,400
the community we have achieved some kind

00:47:56,000 --> 00:48:00,480
of

00:47:56,400 --> 00:48:00,960
um critical mass so that the channel can

00:48:00,480 --> 00:48:03,680
also

00:48:00,960 --> 00:48:05,839
live on itself without having like the

00:48:03,680 --> 00:48:07,520
17 people on the team there like one of

00:48:05,839 --> 00:48:09,200
the developers please the community

00:48:07,520 --> 00:48:11,599
members can probably answer a lot of

00:48:09,200 --> 00:48:11,599
questions

00:48:18,240 --> 00:48:22,160
i also see a comment from ian that slack

00:48:20,400 --> 00:48:25,760
can be bridged to matrix

00:48:22,160 --> 00:48:27,599
um yes but

00:48:25,760 --> 00:48:30,240
we know that slack could be bridged to

00:48:27,599 --> 00:48:32,160
irc also and they did them that so how

00:48:30,240 --> 00:48:33,040
much time will they keep the bridge to

00:48:32,160 --> 00:48:35,920
matrix

00:48:33,040 --> 00:48:37,520
that's another question yeah i don't

00:48:35,920 --> 00:48:38,480
know if you can have the three-way

00:48:37,520 --> 00:48:42,720
bridge thing

00:48:38,480 --> 00:48:45,520
irc matrix and slack maybe

00:48:42,720 --> 00:48:45,520
but no idea

00:48:45,760 --> 00:48:52,400
sounds like a fantastic mess to make um

00:48:50,400 --> 00:48:54,880
so like the comment i quickly want to

00:48:52,400 --> 00:48:57,040
make is that like i'm

00:48:54,880 --> 00:48:59,040
i'm i'm seeing a lot of activity on the

00:48:57,040 --> 00:49:02,800
thanos and on cortex channels

00:48:59,040 --> 00:49:04,640
uh as we said uh less away less on

00:49:02,800 --> 00:49:05,680
prometheus and i think that's also due

00:49:04,640 --> 00:49:07,920
to

00:49:05,680 --> 00:49:09,200
this not being an official channel and i

00:49:07,920 --> 00:49:11,599
often refrain

00:49:09,200 --> 00:49:13,280
refrain from being more active there

00:49:11,599 --> 00:49:14,880
just because i know it's not an official

00:49:13,280 --> 00:49:15,440
channel and then like i sometimes have

00:49:14,880 --> 00:49:18,000
people

00:49:15,440 --> 00:49:20,079
but i kind of like don't put any effort

00:49:18,000 --> 00:49:22,720
into it because i'd rather tell people

00:49:20,079 --> 00:49:23,520
or maybe jump over to matrix and and

00:49:22,720 --> 00:49:25,040
talk to the

00:49:23,520 --> 00:49:27,200
the people there because it's the

00:49:25,040 --> 00:49:28,079
official channel so maybe having a

00:49:27,200 --> 00:49:31,760
different stance

00:49:28,079 --> 00:49:34,079
and and making it i don't know like

00:49:31,760 --> 00:49:35,119
semi official or whatever you wanna

00:49:34,079 --> 00:49:37,440
wanna call it

00:49:35,119 --> 00:49:39,839
um would make a difference in the way

00:49:37,440 --> 00:49:42,079
that i think like also bartek

00:49:39,839 --> 00:49:43,359
um is probably going to be more active

00:49:42,079 --> 00:49:47,119
on their um

00:49:43,359 --> 00:49:50,079
knowing he let he loves slack um so

00:49:47,119 --> 00:49:52,000
um and like i personally would be a lot

00:49:50,079 --> 00:49:54,800
more active there as well

00:49:52,000 --> 00:49:57,440
so it is now semi-official because we

00:49:54,800 --> 00:49:59,599
list it on the website

00:49:57,440 --> 00:50:01,520
but if if there's not some of us

00:49:59,599 --> 00:50:04,480
commenting in it

00:50:01,520 --> 00:50:06,319
it's still semi-official only means so

00:50:04,480 --> 00:50:08,720
much

00:50:06,319 --> 00:50:10,839
um my general feeling on this is i i

00:50:08,720 --> 00:50:14,079
want it easy for users

00:50:10,839 --> 00:50:16,240
and irc

00:50:14,079 --> 00:50:17,599
like yes for people who've been in there

00:50:16,240 --> 00:50:20,079
for a while

00:50:17,599 --> 00:50:20,640
it's pretty easy it's not a tool that's

00:50:20,079 --> 00:50:23,200
just

00:50:20,640 --> 00:50:24,000
in someone in everyone's daily workflow

00:50:23,200 --> 00:50:27,440
right now

00:50:24,000 --> 00:50:29,680
as far as i can tell some people yes

00:50:27,440 --> 00:50:32,240
some people know

00:50:29,680 --> 00:50:33,920
slack it seems like isn't a lot of

00:50:32,240 --> 00:50:36,880
people's daily workflow

00:50:33,920 --> 00:50:40,000
at this point is an argument that i've

00:50:36,880 --> 00:50:42,319
seen for slack

00:50:40,000 --> 00:50:43,680
i'm not sure on exactly where i want to

00:50:42,319 --> 00:50:45,119
land on land either

00:50:43,680 --> 00:50:47,280
because there are parts that are good

00:50:45,119 --> 00:50:48,800
for like i do like all of bjorn's

00:50:47,280 --> 00:50:52,839
arguments about irc

00:50:48,800 --> 00:50:55,520
and the dislike of slack and open source

00:50:52,839 --> 00:50:58,000
um yeah i mean

00:50:55,520 --> 00:50:58,559
the ideal world would be that cncf would

00:50:58,000 --> 00:51:00,880
use

00:50:58,559 --> 00:51:03,200
a more open approach to chat and would

00:51:00,880 --> 00:51:05,920
have like a big matrix thing

00:51:03,200 --> 00:51:08,319
like like mozilla but like what are the

00:51:05,920 --> 00:51:09,040
hopes that we can convince cncf to do

00:51:08,319 --> 00:51:11,440
that

00:51:09,040 --> 00:51:13,359
and in that moment i would totally say

00:51:11,440 --> 00:51:14,079
yes we should totally have our official

00:51:13,359 --> 00:51:15,520
channel there

00:51:14,079 --> 00:51:17,920
together with all the other cncf

00:51:15,520 --> 00:51:18,880
projects and at the moment i'm kind of

00:51:17,920 --> 00:51:22,160
torn

00:51:18,880 --> 00:51:24,240
i think i mean if we if we kind of have

00:51:22,160 --> 00:51:27,200
this rough consensus that

00:51:24,240 --> 00:51:29,359
we want to embrace this um fragmentation

00:51:27,200 --> 00:51:31,760
in a way just listing all of it

00:51:29,359 --> 00:51:33,520
fine i just don't know where i would

00:51:31,760 --> 00:51:36,559
focus right i mean

00:51:33,520 --> 00:51:38,240
if i would then like focus on user

00:51:36,559 --> 00:51:39,520
support on slack because they're just

00:51:38,240 --> 00:51:42,640
more audience

00:51:39,520 --> 00:51:46,240
i i don't know this is where i'm yeah

00:51:42,640 --> 00:51:47,280
i i think we already have a certain

00:51:46,240 --> 00:51:50,319
consensus

00:51:47,280 --> 00:51:53,680
uh and uh

00:51:50,319 --> 00:51:56,720
wild guess if we declare matrix

00:51:53,680 --> 00:51:59,119
the main thing and bridge to both irc

00:51:56,720 --> 00:52:01,040
and slack and tell everyone we encourage

00:51:59,119 --> 00:52:04,079
you to use matrix

00:52:01,040 --> 00:52:05,440
but you're also free to use slack or irc

00:52:04,079 --> 00:52:08,160
if you prefer

00:52:05,440 --> 00:52:08,160
and done

00:52:08,480 --> 00:52:12,160
is does this bridging work like i mean

00:52:10,960 --> 00:52:15,280
slack

00:52:12,160 --> 00:52:16,319
the internet yes yeah i mean if if like

00:52:15,280 --> 00:52:18,880
people use

00:52:16,319 --> 00:52:20,160
slack features like threading and

00:52:18,880 --> 00:52:23,680
editing stuff

00:52:20,160 --> 00:52:25,040
how does that bridge i mean i could see

00:52:23,680 --> 00:52:26,640
how it works but does it work in

00:52:25,040 --> 00:52:28,720
practice

00:52:26,640 --> 00:52:29,839
you can try yeah go to the link that

00:52:28,720 --> 00:52:31,920
richie posted in

00:52:29,839 --> 00:52:35,839
slack it has the features that are

00:52:31,920 --> 00:52:35,839
supported i haven't tried it with slack

00:52:36,559 --> 00:52:41,359
matrix and slack seem to be much more

00:52:39,359 --> 00:52:42,720
similar in their feature sets than

00:52:41,359 --> 00:52:45,680
matrix and irc

00:52:42,720 --> 00:52:46,880
like irc has a lot fewer features like

00:52:45,680 --> 00:52:50,079
can't edit messages

00:52:46,880 --> 00:52:53,520
etc you can't react etc um

00:52:50,079 --> 00:52:55,839
so like i know there's ifc diehards in

00:52:53,520 --> 00:52:56,960
here i would even be for like slack and

00:52:55,839 --> 00:52:58,720
matrix if

00:52:56,960 --> 00:53:00,079
the threesome thing doesn't work

00:52:58,720 --> 00:53:03,680
together like the three-way

00:53:00,079 --> 00:53:05,680
bridge um but i guess like richie would

00:53:03,680 --> 00:53:08,400
and others might still want to have irc

00:53:05,680 --> 00:53:08,400
in there as well

00:53:09,599 --> 00:53:14,079
and yeah like kind of like brought this

00:53:13,040 --> 00:53:16,160
up with um

00:53:14,079 --> 00:53:17,440
with the discussion yesterday and then

00:53:16,160 --> 00:53:19,839
beyond brought it forward

00:53:17,440 --> 00:53:22,000
i think like it doesn't even need to be

00:53:19,839 --> 00:53:24,000
bridged and like baron if you feel like

00:53:22,000 --> 00:53:26,079
you would need to read all of it i think

00:53:24,000 --> 00:53:30,079
that's also not the case because like

00:53:26,079 --> 00:53:33,680
if you prefer irc or matrix then um

00:53:30,079 --> 00:53:36,000
like let's say um bartek

00:53:33,680 --> 00:53:38,079
julian and i don't know who was more

00:53:36,000 --> 00:53:39,520
active on on the cncf slack we could

00:53:38,079 --> 00:53:40,720
always ping you if there's something

00:53:39,520 --> 00:53:44,000
coming up right

00:53:40,720 --> 00:53:44,640
like that's kind of embracing this like

00:53:44,000 --> 00:53:46,720
diverse

00:53:44,640 --> 00:53:49,359
ecosystem as well like you don't need to

00:53:46,720 --> 00:53:49,359
be everywhere

00:53:49,520 --> 00:53:53,280
so maybe that's an argument for just

00:53:52,000 --> 00:53:56,160
giving it a go

00:53:53,280 --> 00:53:57,359
as is and then we can still see if there

00:53:56,160 --> 00:54:00,000
is too much

00:53:57,359 --> 00:54:00,000
disconnect

00:54:01,359 --> 00:54:06,319
yeah but i think i mean having you could

00:54:03,839 --> 00:54:08,640
have matrix as the center piece right

00:54:06,319 --> 00:54:11,359
because it supports all the slack stuff

00:54:08,640 --> 00:54:14,480
and then irc is kind of the

00:54:11,359 --> 00:54:15,920
secondary bridge thing where you accept

00:54:14,480 --> 00:54:16,800
that you won't see reactions or

00:54:15,920 --> 00:54:19,040
something you can

00:54:16,800 --> 00:54:20,640
still take part but if you want the full

00:54:19,040 --> 00:54:23,760
experience you have to go to

00:54:20,640 --> 00:54:24,720
matrix as the centerpiece i could live

00:54:23,760 --> 00:54:28,000
with that as well

00:54:24,720 --> 00:54:30,079
but i don't know we had in the past when

00:54:28,000 --> 00:54:30,640
we discussed making matrix the kind of

00:54:30,079 --> 00:54:35,680
main thing

00:54:30,640 --> 00:54:38,880
we had some resistance uh i don't know

00:54:35,680 --> 00:54:41,119
i mean how about this um if

00:54:38,880 --> 00:54:43,280
if we don't have any any strong

00:54:41,119 --> 00:54:45,040
consensus anyway we can just

00:54:43,280 --> 00:54:46,400
continue doing what we are currently

00:54:45,040 --> 00:54:48,240
doing which is a little bit of

00:54:46,400 --> 00:54:51,520
everything

00:54:48,240 --> 00:54:53,760
we give we give the matrix people

00:54:51,520 --> 00:54:55,839
a little bit more time maybe a week or

00:54:53,760 --> 00:54:56,960
so until they are not on fire anymore

00:54:55,839 --> 00:54:59,280
due to

00:54:56,960 --> 00:55:01,599
the complete exodus from freenode

00:54:59,280 --> 00:55:04,480
towards labia and otc

00:55:01,599 --> 00:55:05,599
oftc because with my foster head on i'm

00:55:04,480 --> 00:55:07,599
seeing a little bit of

00:55:05,599 --> 00:55:09,040
of the workload which the matrix people

00:55:07,599 --> 00:55:13,119
are currently under and it's

00:55:09,040 --> 00:55:15,839
substantial but in a week or three

00:55:13,119 --> 00:55:16,880
probably julius reaches out them and and

00:55:15,839 --> 00:55:20,000
tries and sees

00:55:16,880 --> 00:55:21,520
if if the bridging with cncf or with

00:55:20,000 --> 00:55:24,160
slackworks and we just

00:55:21,520 --> 00:55:24,720
play with it and see if it's horrible or

00:55:24,160 --> 00:55:27,680
if it's

00:55:24,720 --> 00:55:28,480
workable yeah ideally i don't even have

00:55:27,680 --> 00:55:31,520
to talk to them

00:55:28,480 --> 00:55:32,160
um with a new like our old bridging was

00:55:31,520 --> 00:55:34,079
kind of

00:55:32,160 --> 00:55:35,599
implemented manually by them before they

00:55:34,079 --> 00:55:38,559
had their integration manager

00:55:35,599 --> 00:55:39,359
and new bridging hopefully we can just

00:55:38,559 --> 00:55:42,079
click

00:55:39,359 --> 00:55:43,280
into the room so maybe we can do all of

00:55:42,079 --> 00:55:46,160
that by ourselves

00:55:43,280 --> 00:55:47,440
on the slack side on the slack side i

00:55:46,160 --> 00:55:50,319
have to look at

00:55:47,440 --> 00:55:50,960
i have to so i i want to look into on

00:55:50,319 --> 00:55:52,960
the slide

00:55:50,960 --> 00:55:54,799
right i quickly read through the

00:55:52,960 --> 00:55:58,240
documentation and we need to get an

00:55:54,799 --> 00:56:00,799
api key from the cncf

00:55:58,240 --> 00:56:03,200
okay well that's doable um we can ask

00:56:00,799 --> 00:56:06,319
amy and ehor and one of them will be

00:56:03,200 --> 00:56:09,200
the person to to click a thing

00:56:06,319 --> 00:56:11,760
to make this ben can you can you drop

00:56:09,200 --> 00:56:14,960
that link into the meeting notes

00:56:11,760 --> 00:56:19,119
so we can just raise a ticket and they

00:56:14,960 --> 00:56:19,119
click the thing and give us the api key

00:56:19,920 --> 00:56:23,920
yep would be great to test on just like

00:56:22,079 --> 00:56:25,440
two test rooms to see how it actually

00:56:23,920 --> 00:56:28,640
works

00:56:25,440 --> 00:56:29,200
and i take it that it will be julius who

00:56:28,640 --> 00:56:32,240
is

00:56:29,200 --> 00:56:35,760
who is volunteering i'm actually curious

00:56:32,240 --> 00:56:35,760
how that works anyway so sure

00:56:36,960 --> 00:56:41,839
okay cool so we'll try to bridge matrix

00:56:40,960 --> 00:56:45,200
both ways

00:56:41,839 --> 00:56:47,839
and see how this works

00:56:45,200 --> 00:56:50,400
if we can't bridge it both ways like

00:56:47,839 --> 00:56:53,599
with irc as well then do we prefer

00:56:50,400 --> 00:56:53,599
slack or irc

00:56:53,839 --> 00:57:00,880
that's right we don't have enough data

00:56:57,119 --> 00:57:03,280
and yeah okay we can discuss that then

00:57:00,880 --> 00:57:04,480
why have a fight if you don't need it

00:57:03,280 --> 00:57:07,839
yeah speaking of

00:57:04,480 --> 00:57:11,520
of of time um you know i

00:57:07,839 --> 00:57:12,000
i don't need brakes but we are at one

00:57:11,520 --> 00:57:15,119
hour

00:57:12,000 --> 00:57:18,960
do people want a break

00:57:15,119 --> 00:57:22,079
yep five minutes let's do like

00:57:18,960 --> 00:57:23,040
two yeah let's say five minutes so seven

00:57:22,079 --> 00:57:25,440
past

00:57:23,040 --> 00:57:26,400
or do you need more julius and ben we

00:57:25,440 --> 00:57:28,960
can also do eight

00:57:26,400 --> 00:57:30,400
perfect seven passes perfect okay five

00:57:28,960 --> 00:57:32,799
is fine

00:57:30,400 --> 00:57:41,839
okay i will start singing or something

00:57:32,799 --> 00:57:41,839
when you need to return

01:02:03,920 --> 01:02:07,839
ding ding

01:02:14,799 --> 01:02:22,160
so let's continue um i still see a few

01:02:18,240 --> 01:02:24,400
cameras of which were on earlier but

01:02:22,160 --> 01:02:28,400
let's continue ah and chris dropped but

01:02:24,400 --> 01:02:28,400
he said he would need to drop

01:02:28,960 --> 01:02:35,359
so and harrison

01:02:32,160 --> 01:02:39,200
also dropped okay

01:02:35,359 --> 01:02:42,319
chris can we

01:02:39,200 --> 01:02:45,520
still talk about the forum like

01:02:42,319 --> 01:02:48,559
um medium

01:02:45,520 --> 01:02:50,799
like should we mailing list versus

01:02:48,559 --> 01:02:52,240
discourse versus github discussions

01:02:50,799 --> 01:02:55,760
versus

01:02:52,240 --> 01:02:55,760
anything else we might come up with

01:02:57,039 --> 01:03:00,160
sure i mean

01:03:01,359 --> 01:03:05,920
ben that's this course is mainly your

01:03:04,079 --> 01:03:09,359
thing

01:03:05,920 --> 01:03:12,160
uh yeah it's been working

01:03:09,359 --> 01:03:13,680
somewhat well i think uh people ask

01:03:12,160 --> 01:03:16,799
questions there's

01:03:13,680 --> 01:03:20,160
some answering um

01:03:16,799 --> 01:03:21,039
it the in theory it could also it also

01:03:20,160 --> 01:03:22,880
does email

01:03:21,039 --> 01:03:24,880
i don't know if uh but i don't think we

01:03:22,880 --> 01:03:27,200
have any of the email stuff

01:03:24,880 --> 01:03:28,319
configured for people to receive it as a

01:03:27,200 --> 01:03:30,000
delivery method like

01:03:28,319 --> 01:03:32,960
the mailing list as a replacement for

01:03:30,000 --> 01:03:36,559
google groups yes it works

01:03:32,960 --> 01:03:38,319
oh it works right now yes uh

01:03:36,559 --> 01:03:39,680
cool i guess people could subscribe to

01:03:38,319 --> 01:03:41,680
that instead of google groups if we

01:03:39,680 --> 01:03:44,079
wanted to

01:03:41,680 --> 01:03:45,119
yeah i mean the the problem i see with

01:03:44,079 --> 01:03:47,039
google groups is

01:03:45,119 --> 01:03:49,359
for one we get a lot of complaints that

01:03:47,039 --> 01:03:51,119
people cannot use google services which

01:03:49,359 --> 01:03:52,400
for me is always a bit like yeah if you

01:03:51,119 --> 01:03:54,559
have another service it might get

01:03:52,400 --> 01:03:57,920
blocked anyway in some country but

01:03:54,559 --> 01:03:58,640
perhaps it's a concern um and then i

01:03:57,920 --> 01:04:01,520
think

01:03:58,640 --> 01:04:01,839
it's like not fine granular enough in a

01:04:01,520 --> 01:04:04,480
way

01:04:01,839 --> 01:04:05,280
like the user mailing list has a lot of

01:04:04,480 --> 01:04:07,119
traffic

01:04:05,280 --> 01:04:09,520
despite perps not being the most popular

01:04:07,119 --> 01:04:10,480
medium and then i see like there is a

01:04:09,520 --> 01:04:13,200
whole like

01:04:10,480 --> 01:04:14,880
club discussing snmp stuff which could

01:04:13,200 --> 01:04:16,799
be totally in a separate mailing list

01:04:14,880 --> 01:04:18,640
and make it way more readable

01:04:16,799 --> 01:04:20,799
for both parties those interests that

01:04:18,640 --> 01:04:23,359
are not interested in snmp

01:04:20,799 --> 01:04:25,200
and all of this sounds like it should be

01:04:23,359 --> 01:04:26,000
a forum like thing that you could also

01:04:25,200 --> 01:04:28,480
subscribe to

01:04:26,000 --> 01:04:29,520
like a mailing list which if that works

01:04:28,480 --> 01:04:31,359
with this

01:04:29,520 --> 01:04:33,760
i will say discord but it's this course

01:04:31,359 --> 01:04:37,039
that's different things right

01:04:33,760 --> 01:04:39,520
uh i think it it has i think it's very

01:04:37,039 --> 01:04:41,839
attractive but so far i've just ignored

01:04:39,520 --> 01:04:43,119
this course because i was focused on the

01:04:41,839 --> 01:04:45,680
mailing list

01:04:43,119 --> 01:04:46,400
and the final thing is what always

01:04:45,680 --> 01:04:49,280
annoys me

01:04:46,400 --> 01:04:50,960
if we if users get upset even if some

01:04:49,280 --> 01:04:52,799
are really just trolls but

01:04:50,960 --> 01:04:54,400
in general it gives a lot of negative

01:04:52,799 --> 01:04:55,440
sentiment if people really want to

01:04:54,400 --> 01:04:58,000
discuss something in

01:04:55,440 --> 01:04:59,039
on the github issue and i'll just turn

01:04:58,000 --> 01:05:01,599
them down or

01:04:59,039 --> 01:05:02,720
some of us turn them down others support

01:05:01,599 --> 01:05:05,280
them

01:05:02,720 --> 01:05:06,799
and um yeah that's the whole point for

01:05:05,280 --> 01:05:07,119
github discussions where it would be

01:05:06,799 --> 01:05:10,079
like

01:05:07,119 --> 01:05:12,559
close to github and it would be easy to

01:05:10,079 --> 01:05:14,799
move an issue into a discussion

01:05:12,559 --> 01:05:16,640
and the the thing i'm afraid of is like

01:05:14,799 --> 01:05:18,640
what i see like in the grafana repo

01:05:16,640 --> 01:05:20,640
professor grafana reaper for example

01:05:18,640 --> 01:05:22,160
that has thousands of issues that are

01:05:20,640 --> 01:05:23,839
essentially discussing threats

01:05:22,160 --> 01:05:25,200
discussion threats right and it's very

01:05:23,839 --> 01:05:27,359
hard to maintain

01:05:25,200 --> 01:05:28,640
if you have all of this mixed up with

01:05:27,359 --> 01:05:33,920
actual box and

01:05:28,640 --> 01:05:33,920
and feature requests um yeah so

01:05:34,640 --> 01:05:38,079
again i think it would be great if you

01:05:36,079 --> 01:05:40,240
had the if you had a one canonical

01:05:38,079 --> 01:05:43,680
solution could already behind

01:05:40,240 --> 01:05:43,680
um whatever that may be

01:05:45,520 --> 01:05:49,520
yeah my my biggest concern with github

01:05:48,160 --> 01:05:51,200
uh discussions

01:05:49,520 --> 01:05:52,799
was that they're tied to the repo and

01:05:51,200 --> 01:05:55,599
not the project

01:05:52,799 --> 01:05:57,119
and so even though you can move an issue

01:05:55,599 --> 01:06:01,359
from

01:05:57,119 --> 01:06:03,119
uh from issues to discussions

01:06:01,359 --> 01:06:05,280
that's that's a one-to-one for

01:06:03,119 --> 01:06:06,160
prometheus and client golang and client

01:06:05,280 --> 01:06:09,599
python

01:06:06,160 --> 01:06:11,839
and that yeah it's really

01:06:09,599 --> 01:06:15,039
really painful when you have a lot of

01:06:11,839 --> 01:06:15,039
sub components like we do

01:06:17,039 --> 01:06:20,720
on the other hand it gives you some

01:06:18,720 --> 01:06:22,240
grouping right so as an ep discussion

01:06:20,720 --> 01:06:23,119
could actually happen in the snmp

01:06:22,240 --> 01:06:25,440
exporter

01:06:23,119 --> 01:06:26,960
discussions right and if you're

01:06:25,440 --> 01:06:29,359
overarching things they would probably

01:06:26,960 --> 01:06:31,119
just gravitate to prometheus producers

01:06:29,359 --> 01:06:32,559
but i don't know if like github

01:06:31,119 --> 01:06:34,160
discussions probably is not very

01:06:32,559 --> 01:06:39,119
friendly to be consumed

01:06:34,160 --> 01:06:41,920
as a male like feed right

01:06:39,119 --> 01:06:41,920
so that would be

01:06:43,359 --> 01:06:46,880
i don't know we could still try it out

01:06:45,440 --> 01:06:49,599
as a way

01:06:46,880 --> 01:06:51,200
to mark essentially an issue as this is

01:06:49,599 --> 01:06:53,680
actually discussion

01:06:51,200 --> 01:07:00,400
and not turn it down but it would again

01:06:53,680 --> 01:07:02,079
be fragmentation

01:07:00,400 --> 01:07:04,000
i also like would like to point people

01:07:02,079 --> 01:07:05,760
to something they actually

01:07:04,000 --> 01:07:07,200
play with essentially if i tell them

01:07:05,760 --> 01:07:09,119
please ask them the mailing list and the

01:07:07,200 --> 01:07:11,839
user says what has a mailing list

01:07:09,119 --> 01:07:12,799
that's also not a good user experience

01:07:11,839 --> 01:07:15,039
yes so the

01:07:12,799 --> 01:07:17,119
the advantage of this course is that you

01:07:15,039 --> 01:07:19,039
can log in with your github account so

01:07:17,119 --> 01:07:22,480
if you have already made an issue you

01:07:19,039 --> 01:07:25,039
already have a login on this course

01:07:22,480 --> 01:07:27,200
well that's cool yeah so perps we can

01:07:25,039 --> 01:07:30,799
link that quite closely

01:07:27,200 --> 01:07:32,720
um yes we

01:07:30,799 --> 01:07:33,839
i think we changed at least one of the

01:07:32,720 --> 01:07:36,559
repos

01:07:33,839 --> 01:07:37,839
to click here for support and it would

01:07:36,559 --> 01:07:41,359
take you to

01:07:37,839 --> 01:07:44,720
prometheus community

01:07:41,359 --> 01:07:48,880
yes uh prometheus is like that but uh

01:07:44,720 --> 01:07:52,640
yeah there is always users who

01:07:48,880 --> 01:07:55,039
uh go outside of the rules right

01:07:52,640 --> 01:07:57,200
like we also have like the security

01:07:55,039 --> 01:08:00,000
vulnerability button that people don't

01:07:57,200 --> 01:08:00,000
follow either

01:08:03,440 --> 01:08:11,839
can you bridge it to matrix

01:08:12,559 --> 01:08:19,759
um i mean half joking

01:08:17,359 --> 01:08:21,040
bridging it to the mailing lists will

01:08:19,759 --> 01:08:25,839
not work but it's

01:08:21,040 --> 01:08:25,839
it's kind of similar

01:08:26,719 --> 01:08:32,799
we wouldn't be thinkable uh

01:08:30,239 --> 01:08:33,440
in general now some said it it is that

01:08:32,799 --> 01:08:36,239
we just

01:08:33,440 --> 01:08:36,719
uh retire the mailing list in favor of

01:08:36,239 --> 01:08:40,480
of

01:08:36,719 --> 01:08:41,279
uh course yes who would think this is a

01:08:40,480 --> 01:08:43,120
no go we

01:08:41,279 --> 01:08:44,319
we should always have i mean i'm talking

01:08:43,120 --> 01:08:45,920
about the users and the developers

01:08:44,319 --> 01:08:46,799
mailing lists not about the team mailing

01:08:45,920 --> 01:08:49,600
list i think that's

01:08:46,799 --> 01:08:49,600
a special case

01:08:50,640 --> 01:08:54,239
the current situation of this course is

01:08:52,480 --> 01:08:58,880
that we are missing some

01:08:54,239 --> 01:09:01,359
dsl experts some were some

01:08:58,880 --> 01:09:02,480
expert in some domains like sql that

01:09:01,359 --> 01:09:05,359
kind of things

01:09:02,480 --> 01:09:06,799
rds and like we cannot the current

01:09:05,359 --> 01:09:09,199
community

01:09:06,799 --> 01:09:10,960
cannot answer those questions right now

01:09:09,199 --> 01:09:12,719
on this course so we need to grow that

01:09:10,960 --> 01:09:14,159
community and if that means we need to

01:09:12,719 --> 01:09:15,040
shut down the mailing list i propose

01:09:14,159 --> 01:09:16,960
that we

01:09:15,040 --> 01:09:18,960
we try to do that at least because this

01:09:16,960 --> 01:09:20,319
course seems like have more useful

01:09:18,960 --> 01:09:22,000
features for us

01:09:20,319 --> 01:09:23,600
and we can build that in a better

01:09:22,000 --> 01:09:24,799
community and discover than on the

01:09:23,600 --> 01:09:26,640
mailing list

01:09:24,799 --> 01:09:28,719
and like but currently like there are

01:09:26,640 --> 01:09:29,759
more than 100 users on this course and

01:09:28,719 --> 01:09:31,759
we are only

01:09:29,759 --> 01:09:32,960
four or five to actually answer the

01:09:31,759 --> 01:09:34,799
questions so

01:09:32,960 --> 01:09:36,480
it's a lot of work to already know the

01:09:34,799 --> 01:09:37,279
discourse and i would like more people

01:09:36,480 --> 01:09:39,920
there to

01:09:37,279 --> 01:09:42,239
not only ask questions because that that

01:09:39,920 --> 01:09:44,080
is growing well but also be able to

01:09:42,239 --> 01:09:46,560
answer some very specific questions that

01:09:44,080 --> 01:09:48,640
we don't know the answer

01:09:46,560 --> 01:09:51,359
does it have a lot of interactive

01:09:48,640 --> 01:09:54,640
features that you would not be able to

01:09:51,359 --> 01:09:57,440
use when you consume it by mail

01:09:54,640 --> 01:09:59,600
like that's kind of my concern that you

01:09:57,440 --> 01:10:01,199
can receive it by mail but then does it

01:09:59,600 --> 01:10:02,800
have like a lot of reaction and other

01:10:01,199 --> 01:10:04,000
stuff that you would really miss out on

01:10:02,800 --> 01:10:07,040
if you didn't use it

01:10:04,000 --> 01:10:07,040
with a web interface

01:10:08,000 --> 01:10:12,239
the concern is the other way around

01:10:10,960 --> 01:10:14,400
sending out email

01:10:12,239 --> 01:10:17,440
of updates will probably work but you

01:10:14,400 --> 01:10:20,640
can also change text and such

01:10:17,440 --> 01:10:23,280
but sending email into the thing is

01:10:20,640 --> 01:10:24,320
and making this part of of discussions

01:10:23,280 --> 01:10:27,520
is

01:10:24,320 --> 01:10:29,199
i i don't think it's possible yeah so

01:10:27,520 --> 01:10:31,440
you can reply to the emails that you

01:10:29,199 --> 01:10:34,400
receive and this is handle pretty well

01:10:31,440 --> 01:10:36,640
at least on my mutt email agent this

01:10:34,400 --> 01:10:39,840
wrecked pretty well when i do that so

01:10:36,640 --> 01:10:40,800
yes but this is for you as a person this

01:10:39,840 --> 01:10:42,880
is not for you

01:10:40,800 --> 01:10:46,400
as a random user on the mailing list who

01:10:42,880 --> 01:10:46,400
just replies to a mailing list

01:10:47,679 --> 01:10:52,640
at the point where everyone replying

01:10:49,520 --> 01:10:56,320
already has an account on this course

01:10:52,640 --> 01:10:56,320
they can just do direct email

01:10:56,640 --> 01:10:59,679
i mean what we can do is we can ask the

01:10:59,040 --> 01:11:02,000
people

01:10:59,679 --> 01:11:06,159
on on the mailing list if they would be

01:11:02,000 --> 01:11:09,679
okay switching over to this course

01:11:06,159 --> 01:11:10,880
um obviously everyone who is on a medium

01:11:09,679 --> 01:11:14,560
will probably tend

01:11:10,880 --> 01:11:14,560
to to prefer that medium

01:11:14,960 --> 01:11:20,000
when ben suggested doing this course my

01:11:17,920 --> 01:11:23,360
concern was that we would be stretching

01:11:20,000 --> 01:11:23,360
ourselves too thinly

01:11:23,430 --> 01:11:27,840
[Music]

01:11:24,840 --> 01:11:27,840
um

01:11:29,120 --> 01:11:33,360
on the other hand we cannot prevent

01:11:31,440 --> 01:11:35,679
people from using

01:11:33,360 --> 01:11:38,560
things like for the mailing list and for

01:11:35,679 --> 01:11:43,040
this course we can actively shut it down

01:11:38,560 --> 01:11:45,920
for the rest not as much

01:11:43,040 --> 01:11:46,719
yeah sure i mean i think it would uh it

01:11:45,920 --> 01:11:49,040
would

01:11:46,719 --> 01:11:50,000
i'm more fishing for having the solution

01:11:49,040 --> 01:11:52,960
where we as

01:11:50,000 --> 01:11:53,440
the developer can rally behind and you

01:11:52,960 --> 01:11:55,120
know

01:11:53,440 --> 01:11:56,560
if i want to talk to the developers i

01:11:55,120 --> 01:11:59,520
just go to this forum

01:11:56,560 --> 01:12:01,120
right i think this would help to defrag

01:11:59,520 --> 01:12:02,320
the community of course people will ask

01:12:01,120 --> 01:12:05,440
questions on

01:12:02,320 --> 01:12:07,760
reddit or on stack overflow whatever

01:12:05,440 --> 01:12:08,320
that's totally fine i mean that's great

01:12:07,760 --> 01:12:10,800
um

01:12:08,320 --> 01:12:13,199
but like having this well essentially i

01:12:10,800 --> 01:12:14,320
want a medium i can point people on

01:12:13,199 --> 01:12:15,840
github that won't

01:12:14,320 --> 01:12:18,159
ask you the question on detail i want to

01:12:15,840 --> 01:12:20,080
point them somewhere which is

01:12:18,159 --> 01:12:22,080
more broadly accepted than a mailing

01:12:20,080 --> 01:12:24,400
list and and where they also

01:12:22,080 --> 01:12:26,159
immediately get the feeling if they go

01:12:24,400 --> 01:12:27,199
there this is actually the place where i

01:12:26,159 --> 01:12:29,520
get help

01:12:27,199 --> 01:12:30,480
well like on the user mailing list i

01:12:29,520 --> 01:12:33,120
don't know i feel

01:12:30,480 --> 01:12:35,120
sometimes it's not critical mass i mean

01:12:33,120 --> 01:12:37,520
there are a few people who are awesome

01:12:35,120 --> 01:12:38,880
on the mailing list but uh sometimes it

01:12:37,520 --> 01:12:40,880
feels like

01:12:38,880 --> 01:12:43,280
yeah it's it's it's way fewer people

01:12:40,880 --> 01:12:45,679
than on the slack channel right so

01:12:43,280 --> 01:12:50,080
you uh you don't get this critical mass

01:12:45,679 --> 01:12:54,000
where people just crowdsource stuff

01:12:50,080 --> 01:12:54,000
this curse.prometheus.org

01:12:54,480 --> 01:12:58,000
not this course but discuss

01:12:58,800 --> 01:13:08,239
aha i tried prometheus.discourse.com

01:13:04,400 --> 01:13:11,600
now we already have it in prometheus

01:13:08,239 --> 01:13:14,800
i mean if if like a die-hard

01:13:11,600 --> 01:13:18,000
um proponent of the megalist could try

01:13:14,800 --> 01:13:21,280
out the male integration of

01:13:18,000 --> 01:13:22,960
this course and tell us if that's

01:13:21,280 --> 01:13:24,560
okay i mean that would be a strong

01:13:22,960 --> 01:13:26,640
argument to tell the people on domain

01:13:24,560 --> 01:13:28,640
list listen we're migrating not all of

01:13:26,640 --> 01:13:30,080
you will like it but the mail interface

01:13:28,640 --> 01:13:32,640
is actually quite capable

01:13:30,080 --> 01:13:35,440
and and you you should you should be

01:13:32,640 --> 01:13:35,440
able to accept that

01:13:36,159 --> 01:13:40,880
and i need admin access to mess around

01:13:39,520 --> 01:13:44,560
with those settings i can

01:13:40,880 --> 01:13:46,320
hand that out yes so we started the

01:13:44,560 --> 01:13:48,400
discourse experiment with a few people

01:13:46,320 --> 01:13:48,719
from the community and i have also taken

01:13:48,400 --> 01:13:50,560
from

01:13:48,719 --> 01:13:52,560
some input from other people which are

01:13:50,560 --> 01:13:54,960
more experienced on this course to set

01:13:52,560 --> 01:13:57,920
a lot of settings to be like more

01:13:54,960 --> 01:13:57,920
community friendly

01:13:58,000 --> 01:14:01,520
and i have tested the emails and it

01:13:59,520 --> 01:14:02,800
works fine for me i don't know if you

01:14:01,520 --> 01:14:05,920
call me a

01:14:02,800 --> 01:14:08,000
mailing list but is

01:14:05,920 --> 01:14:09,760
is there an inbound address so that

01:14:08,000 --> 01:14:10,320
people can just email and it will open a

01:14:09,760 --> 01:14:12,640
new

01:14:10,320 --> 01:14:14,560
discussion that i don't know because you

01:14:12,640 --> 01:14:16,719
need to categorize them when you create

01:14:14,560 --> 01:14:18,080
them

01:14:16,719 --> 01:14:20,159
yeah that's that would be quite

01:14:18,080 --> 01:14:22,480
important like they

01:14:20,159 --> 01:14:23,760
the different sub forums or whatever

01:14:22,480 --> 01:14:26,840
they're called should behave like

01:14:23,760 --> 01:14:30,560
mailing lists essentially

01:14:26,840 --> 01:14:33,360
the we would also need to see if if you

01:14:30,560 --> 01:14:37,120
can auto generate user accounts and such

01:14:33,360 --> 01:14:39,520
um because one of the problems is

01:14:37,120 --> 01:14:40,800
that this chord attaches attaches a lot

01:14:39,520 --> 01:14:43,199
of of context

01:14:40,800 --> 01:14:45,440
to the specific person like that's the

01:14:43,199 --> 01:14:45,920
base idea of how this course works where

01:14:45,440 --> 01:14:49,199
you

01:14:45,920 --> 01:14:51,679
gain trust over time and they try to map

01:14:49,199 --> 01:14:52,880
the inherent trust building system

01:14:51,679 --> 01:14:55,920
within communities

01:14:52,880 --> 01:14:59,440
into an automated system um

01:14:55,920 --> 01:15:03,360
which means they rely heavily on on

01:14:59,440 --> 01:15:05,760
on individual uh people having an

01:15:03,360 --> 01:15:06,880
identity and if you have like different

01:15:05,760 --> 01:15:08,400
mailing

01:15:06,880 --> 01:15:11,280
email addresses for different things

01:15:08,400 --> 01:15:12,880
like i do um

01:15:11,280 --> 01:15:14,640
you need to map this blah blah blah blah

01:15:12,880 --> 01:15:16,159
blah but i mean on the other hand we can

01:15:14,640 --> 01:15:17,920
just

01:15:16,159 --> 01:15:19,760
probably volunteer ben because because

01:15:17,920 --> 01:15:22,159
he introduced the thing

01:15:19,760 --> 01:15:22,880
to figure out how and if this would work

01:15:22,159 --> 01:15:25,520
like maybe

01:15:22,880 --> 01:15:26,880
maybe this course has a mailing list

01:15:25,520 --> 01:15:29,280
interface which we can

01:15:26,880 --> 01:15:30,239
which we can point towards that thing or

01:15:29,280 --> 01:15:33,120
what

01:15:30,239 --> 01:15:34,159
i mean the cool thing about mailing list

01:15:33,120 --> 01:15:37,280
that you can just

01:15:34,159 --> 01:15:38,000
buy mail subscribe and and and act

01:15:37,280 --> 01:15:41,120
completely by

01:15:38,000 --> 01:15:42,880
email that's kind of already weird with

01:15:41,120 --> 01:15:44,560
google groups because it's still

01:15:42,880 --> 01:15:46,320
possible but they don't document it

01:15:44,560 --> 01:15:50,640
properly which i find

01:15:46,320 --> 01:15:52,640
already quite fishy about google groups

01:15:50,640 --> 01:15:54,400
it's like these are kind of secret tips

01:15:52,640 --> 01:15:55,840
on the web to find out how you do all of

01:15:54,400 --> 01:15:58,400
this just by mail

01:15:55,840 --> 01:16:00,080
and and i think they deliberately don't

01:15:58,400 --> 01:16:01,679
want people to interact with google

01:16:00,080 --> 01:16:04,480
groups solely

01:16:01,679 --> 01:16:07,280
by uh email they want people to make a

01:16:04,480 --> 01:16:09,440
google account of course

01:16:07,280 --> 01:16:11,360
so i also want to know that we disabled

01:16:09,440 --> 01:16:13,440
a lot of the gamification

01:16:11,360 --> 01:16:15,040
and that happens usually on this course

01:16:13,440 --> 01:16:20,239
like the badges that kind of things has

01:16:15,040 --> 01:16:22,320
been disabled

01:16:20,239 --> 01:16:24,159
unrelated but out of interest is anyone

01:16:22,320 --> 01:16:26,640
in this call who ever interacted

01:16:24,159 --> 01:16:27,679
other than for maintenance and such with

01:16:26,640 --> 01:16:31,520
the google groups

01:16:27,679 --> 01:16:31,520
not through just email

01:16:31,920 --> 01:16:35,679
i mean i have my all those accounts

01:16:34,320 --> 01:16:37,760
forever so i just

01:16:35,679 --> 01:16:39,679
in i mean sometimes i go to the work

01:16:37,760 --> 01:16:41,840
interface but if you're a new user right

01:16:39,679 --> 01:16:44,080
if you have never used a mailing list

01:16:41,840 --> 01:16:46,000
and you might not like a google account

01:16:44,080 --> 01:16:47,600
and you you found

01:16:46,000 --> 01:16:49,040
the question was anyone in this call

01:16:47,600 --> 01:16:52,239
because i think no one of us

01:16:49,040 --> 01:16:56,159
ever it's more interest than than super

01:16:52,239 --> 01:16:58,960
important okay whether we used it

01:16:56,159 --> 01:16:58,960
not to email

01:16:59,440 --> 01:17:03,840
yes uh

01:17:07,360 --> 01:17:12,159
my initial question was if anyone here

01:17:09,679 --> 01:17:14,480
uses anything other than email to

01:17:12,159 --> 01:17:16,320
to communicate on the mailing lists or

01:17:14,480 --> 01:17:19,199
the google groups

01:17:16,320 --> 01:17:19,920
yes so i use the web interface sometimes

01:17:19,199 --> 01:17:22,960
for

01:17:19,920 --> 01:17:26,640
search or to to dig out

01:17:22,960 --> 01:17:28,400
a link to a discussion um so i can kind

01:17:26,640 --> 01:17:31,520
of give a web link to people

01:17:28,400 --> 01:17:33,440
to look at it yeah

01:17:31,520 --> 01:17:35,120
i do i do sometimes use it as well

01:17:33,440 --> 01:17:38,960
especially with those

01:17:35,120 --> 01:17:42,080
where i don't necessarily subscribe um

01:17:38,960 --> 01:17:45,360
directly to but where i just kind of

01:17:42,080 --> 01:17:48,560
pull model go and check the

01:17:45,360 --> 01:17:51,600
mailing list every once in a while um

01:17:48,560 --> 01:17:54,400
so i i do sometimes do that it depends

01:17:51,600 --> 01:17:54,400
on the mailing list

01:17:54,719 --> 01:17:58,000
okay but so my point was that i wanted

01:17:57,040 --> 01:17:59,600
to bring up if

01:17:58,000 --> 01:18:02,800
a user who has never interacted with

01:17:59,600 --> 01:18:04,560
google groups files a user question on

01:18:02,800 --> 01:18:07,040
github when we tell them

01:18:04,560 --> 01:18:07,679
go to the mailing list and now what do

01:18:07,040 --> 01:18:10,800
they do

01:18:07,679 --> 01:18:11,520
and if essentially if you are not a

01:18:10,800 --> 01:18:14,480
super

01:18:11,520 --> 01:18:15,760
tech savvy you will come to the

01:18:14,480 --> 01:18:17,040
conclusion you have to create a google

01:18:15,760 --> 01:18:20,080
account first

01:18:17,040 --> 01:18:22,320
and um i think this is

01:18:20,080 --> 01:18:24,000
not a very welcoming flow right i mean

01:18:22,320 --> 01:18:26,320
many people have a google account

01:18:24,000 --> 01:18:27,440
but some people deliberately don't and

01:18:26,320 --> 01:18:28,880
you cannot just

01:18:27,440 --> 01:18:30,320
like for example you cannot use your

01:18:28,880 --> 01:18:31,760
github account to communicate with

01:18:30,320 --> 01:18:34,880
emailing this

01:18:31,760 --> 01:18:35,679
uh that would be i think an advantage in

01:18:34,880 --> 01:18:41,520
the

01:18:35,679 --> 01:18:43,679
if that's possible with this course

01:18:41,520 --> 01:18:45,679
or to phrase in another way the the

01:18:43,679 --> 01:18:48,880
advantage of just being able to interact

01:18:45,679 --> 01:18:51,600
purely by email is not necessarily

01:18:48,880 --> 01:18:52,480
a practical one for many users of google

01:18:51,600 --> 01:18:53,920
groups

01:18:52,480 --> 01:18:57,120
although it's technical still

01:18:53,920 --> 01:18:57,120
technically still possible

01:19:02,640 --> 01:19:10,560
okay let's who would be

01:19:06,960 --> 01:19:10,800
like assuming we see a a viable workflow

01:19:10,560 --> 01:19:14,080
of

01:19:10,800 --> 01:19:17,199
using this course via

01:19:14,080 --> 01:19:17,920
just mail would someone in this room

01:19:17,199 --> 01:19:21,360
still

01:19:17,920 --> 01:19:22,000
strictly oppose deprecating the mailing

01:19:21,360 --> 01:19:25,520
list in

01:19:22,000 --> 01:19:25,520
lieu of this course

01:19:29,760 --> 01:19:35,679
okay at least no no nobody wildly

01:19:33,440 --> 01:19:37,199
objects here so i think then we could

01:19:35,679 --> 01:19:40,400
perhaps

01:19:37,199 --> 01:19:42,560
like create a whatever present how the

01:19:40,400 --> 01:19:45,600
workflow would look like and then

01:19:42,560 --> 01:19:46,159
and try to sell this to the community

01:19:45,600 --> 01:19:50,480
and see

01:19:46,159 --> 01:19:52,400
how people generally react

01:19:50,480 --> 01:19:54,719
yes i think we have been too shy with

01:19:52,400 --> 01:19:57,520
this course and we should push it more

01:19:54,719 --> 01:19:57,520
on the mailing list

01:19:58,320 --> 01:20:05,280
maybe before we do that can we like

01:20:02,880 --> 01:20:06,960
julius cares most about matrix and as

01:20:05,280 --> 01:20:08,880
such he volunteered slash

01:20:06,960 --> 01:20:10,960
has been volunteered to figure out how

01:20:08,880 --> 01:20:15,120
to make that interactive thing work

01:20:10,960 --> 01:20:17,280
ben cares most about this course so

01:20:15,120 --> 01:20:18,480
maybe we can we can have him volunteer

01:20:17,280 --> 01:20:20,880
to to figure out

01:20:18,480 --> 01:20:21,840
what interfaces would be there if we can

01:20:20,880 --> 01:20:24,800
actually

01:20:21,840 --> 01:20:26,639
bend the the mailing list with the add

01:20:24,800 --> 01:20:28,400
google groups to this course and all

01:20:26,639 --> 01:20:29,280
those kind of things and just figure it

01:20:28,400 --> 01:20:31,280
out

01:20:29,280 --> 01:20:33,840
and then use this information for the

01:20:31,280 --> 01:20:33,840
next round

01:20:35,600 --> 01:20:38,719
and i don't think it's likely that we

01:20:37,120 --> 01:20:41,120
will be able to do this but maybe there

01:20:38,719 --> 01:20:47,280
is a way maybe with an intermittent

01:20:41,120 --> 01:20:49,120
thing in between or what have you

01:20:47,280 --> 01:20:51,360
but it does not seem as if anyone is

01:20:49,120 --> 01:20:52,000
super attached to the mailing list we

01:20:51,360 --> 01:20:55,440
should ask

01:20:52,000 --> 01:20:58,480
on the mailing list i think and

01:20:55,440 --> 01:21:00,719
as ben cares most about this course it

01:20:58,480 --> 01:21:03,520
falls on him and we

01:21:00,719 --> 01:21:06,320
try and get him to actually do it and

01:21:03,520 --> 01:21:06,320
not just say yes

01:21:08,639 --> 01:21:12,480
yeah unfortunately there's there's not

01:21:11,199 --> 01:21:14,960
really a good

01:21:12,480 --> 01:21:16,400
way to just bridge mainlist into

01:21:14,960 --> 01:21:19,679
discourse

01:21:16,400 --> 01:21:21,120
um it's just not a thing it's it's a

01:21:19,679 --> 01:21:23,280
completely separate system

01:21:21,120 --> 01:21:25,280
and it subscribes differently you have

01:21:23,280 --> 01:21:27,040
um there is an inbound thing but it

01:21:25,280 --> 01:21:28,800
seems more like a

01:21:27,040 --> 01:21:31,199
like a support queue where you can send

01:21:28,800 --> 01:21:32,880
email in and it will create a new topic

01:21:31,199 --> 01:21:36,080
but that doesn't actually subscribe to

01:21:32,880 --> 01:21:38,080
the user to output

01:21:36,080 --> 01:21:39,360
one extra element is that when we

01:21:38,080 --> 01:21:42,080
created the discourse

01:21:39,360 --> 01:21:44,320
the discourse team asked us if we want

01:21:42,080 --> 01:21:46,560
if we wanted to migrate the data

01:21:44,320 --> 01:21:48,320
in the google group inside this course

01:21:46,560 --> 01:21:50,560
so apparently they have a way to import

01:21:48,320 --> 01:21:52,320
google group into this course

01:21:50,560 --> 01:21:54,400
if we want to keep the history in this

01:21:52,320 --> 01:21:55,040
course yeah that would be cool but the

01:21:54,400 --> 01:21:57,440
mailing list

01:21:55,040 --> 01:21:58,560
is like just a mess right there is not

01:21:57,440 --> 01:22:01,440
categorized by

01:21:58,560 --> 01:22:03,120
topic which i think for me is a major

01:22:01,440 --> 01:22:05,280
selling point of

01:22:03,120 --> 01:22:06,960
i mean alternatively you could just

01:22:05,280 --> 01:22:10,080
create just mailing lists right but

01:22:06,960 --> 01:22:13,760
i don't think that will fly with our

01:22:10,080 --> 01:22:17,120
millennial user user population

01:22:13,760 --> 01:22:20,080
but we have

01:22:17,120 --> 01:22:22,320
we have this course likes both

01:22:20,080 --> 01:22:23,280
prometheus and grafana and there are a

01:22:22,320 --> 01:22:25,199
few

01:22:23,280 --> 01:22:26,480
bits and pieces where grafana could also

01:22:25,199 --> 01:22:30,560
benefit from

01:22:26,480 --> 01:22:33,440
from this so approaching them with hey

01:22:30,560 --> 01:22:34,960
we we have this question can we can you

01:22:33,440 --> 01:22:37,360
help us migrate and

01:22:34,960 --> 01:22:38,320
enable this use case for the long term

01:22:37,360 --> 01:22:41,120
should actually

01:22:38,320 --> 01:22:43,120
be be an incentive for them similar to

01:22:41,120 --> 01:22:46,639
how matrix did a lot of stuff

01:22:43,120 --> 01:22:49,760
for freenode for for foster

01:22:46,639 --> 01:22:52,320
of course they they like it and

01:22:49,760 --> 01:22:54,639
there was there were many connections in

01:22:52,320 --> 01:22:54,639
between

01:22:54,719 --> 01:23:01,280
so julian ben do you want to just talk

01:22:57,760 --> 01:23:01,679
to the to the uh discourse people and

01:23:01,280 --> 01:23:05,520
see

01:23:01,679 --> 01:23:09,280
what they can maybe offer in the future

01:23:05,520 --> 01:23:09,280
yeah that sounds like a good idea

01:23:09,360 --> 01:23:11,600
okay

01:23:13,600 --> 01:23:15,840
so

01:23:16,800 --> 01:23:21,840
where's my meeting notes

01:23:32,840 --> 01:23:35,840
okay

01:23:43,360 --> 01:23:48,000
okay so consensus ben and julian to ask

01:23:46,560 --> 01:23:50,159
to talk to this course if they can

01:23:48,000 --> 01:23:52,480
bridge the mailing lists or our mailing

01:23:50,159 --> 01:23:55,520
lists

01:23:52,480 --> 01:23:55,520
and we go from there

01:23:58,560 --> 01:24:04,960
all of it anyone disagreeing

01:24:02,320 --> 01:24:07,280
um i mean i think this is one aspect of

01:24:04,960 --> 01:24:07,280
it but

01:24:07,520 --> 01:24:14,880
i also sense that we would be willing to

01:24:11,520 --> 01:24:17,199
move fully to this course if

01:24:14,880 --> 01:24:19,600
if there's a decent interface doing it

01:24:17,199 --> 01:24:22,880
by mail

01:24:19,600 --> 01:24:24,400
yeah yes if there is a decent interface

01:24:22,880 --> 01:24:26,320
like that that's the reason why they're

01:24:24,400 --> 01:24:27,040
asking this i think if there is a decent

01:24:26,320 --> 01:24:29,280
interface

01:24:27,040 --> 01:24:30,480
reducing the overall amount would be

01:24:29,280 --> 01:24:35,120
would be

01:24:30,480 --> 01:24:37,360
good yeah

01:24:35,120 --> 01:24:39,840
so we can add if there is we are open to

01:24:37,360 --> 01:24:45,600
migrating away from the

01:24:39,840 --> 01:24:48,000
if there is open to

01:24:45,600 --> 01:24:48,880
i mean breaching is different from just

01:24:48,000 --> 01:24:51,280
telling all the

01:24:48,880 --> 01:24:52,560
users on the mailing list listen you can

01:24:51,280 --> 01:24:54,320
interact with this course

01:24:52,560 --> 01:24:56,000
almost as if you interact with a mailing

01:24:54,320 --> 01:24:58,400
list so please

01:24:56,000 --> 01:24:59,120
yourself you have to migrate to this

01:24:58,400 --> 01:25:01,040
course now

01:24:59,120 --> 01:25:03,440
because we shut down the mailing list

01:25:01,040 --> 01:25:05,760
that's different from bridging right

01:25:03,440 --> 01:25:06,639
yes as a first step i would say we we

01:25:05,760 --> 01:25:09,040
try and get

01:25:06,639 --> 01:25:10,960
a bridge working course ideally no one

01:25:09,040 --> 01:25:12,239
has to change anything and they just

01:25:10,960 --> 01:25:14,080
keep getting email

01:25:12,239 --> 01:25:16,000
through their established mechanism and

01:25:14,080 --> 01:25:18,880
everything

01:25:16,000 --> 01:25:20,159
this would be ideal but how should

01:25:18,880 --> 01:25:22,719
bridging work from a

01:25:20,159 --> 01:25:24,159
uncategorized mailing list catch all to

01:25:22,719 --> 01:25:28,159
a forum with like

01:25:24,159 --> 01:25:31,199
half a dozen or more sub forms

01:25:28,159 --> 01:25:32,239
my suspicion would be that something is

01:25:31,199 --> 01:25:34,400
put in the subject

01:25:32,239 --> 01:25:35,440
in in angled bracket or in square

01:25:34,400 --> 01:25:37,600
brackets and

01:25:35,440 --> 01:25:39,679
maybe something with mail id and reply

01:25:37,600 --> 01:25:41,440
to id

01:25:39,679 --> 01:25:43,360
so on the technical level i think there

01:25:41,440 --> 01:25:46,719
are several different uh

01:25:43,360 --> 01:25:48,639
approaches it's it's a question of if

01:25:46,719 --> 01:25:51,040
this course can do anything like this

01:25:48,639 --> 01:25:52,840
and wants to do anything like this

01:25:51,040 --> 01:25:55,520
or i may maybe even already have

01:25:52,840 --> 01:25:58,960
something

01:25:55,520 --> 01:26:00,880
sorry now i marketed green without so

01:25:58,960 --> 01:26:02,159
consensus ben and julian to talk to this

01:26:00,880 --> 01:26:03,679
course if they can bridge our mailing

01:26:02,159 --> 01:26:07,120
lists and we go from there

01:26:03,679 --> 01:26:09,760
if there is we are open to migrate away

01:26:07,120 --> 01:26:11,920
open we're open to migrate away from the

01:26:09,760 --> 01:26:14,239
mailing list

01:26:11,920 --> 01:26:15,679
all agreed anyone disagree we are not

01:26:14,239 --> 01:26:23,440
agreeing

01:26:15,679 --> 01:26:28,800
how should we phrase it differently

01:26:23,440 --> 01:26:28,800
you are muted yeah you're muted

01:26:29,280 --> 01:26:33,440
i'm so sorry now i'm unmuted um i think

01:26:32,159 --> 01:26:35,600
um

01:26:33,440 --> 01:26:37,199
i wouldn't link it to bridging i mean if

01:26:35,600 --> 01:26:38,400
bridging works fine but if it doesn't

01:26:37,199 --> 01:26:41,679
work that doesn't kill

01:26:38,400 --> 01:26:43,600
that we want them perhaps want the

01:26:41,679 --> 01:26:45,440
migration if we have a

01:26:43,600 --> 01:26:48,239
i think we need a viable migration

01:26:45,440 --> 01:26:51,679
strategy i would phrase it that way

01:26:48,239 --> 01:26:53,120
yeah i also think that

01:26:51,679 --> 01:26:54,639
we should actually have these goals

01:26:53,120 --> 01:26:55,920
because like they are used to that kind

01:26:54,639 --> 01:26:59,199
of migration a lot of

01:26:55,920 --> 01:27:02,320
projects are moving away from uh

01:26:59,199 --> 01:27:05,840
google groups to discourse so they may

01:27:02,320 --> 01:27:05,840
be have user stories

01:27:06,560 --> 01:27:11,040
yeah let's ask them i i rephrase let's

01:27:09,040 --> 01:27:14,239
try this once more and then

01:27:11,040 --> 01:27:16,159
yeah that sounds much better now yeah

01:27:14,239 --> 01:27:18,080
consensus we are open to moving away

01:27:16,159 --> 01:27:19,440
from the mailing lists but need a viable

01:27:18,080 --> 01:27:21,280
migration strategy

01:27:19,440 --> 01:27:23,280
ben and julian to talk to this course if

01:27:21,280 --> 01:27:25,920
they can bridge our mailing lists and we

01:27:23,280 --> 01:27:25,920
go from there

01:27:26,480 --> 01:27:29,679
all agreed anyone disagree

01:27:30,320 --> 01:27:34,480
perfect and we also need to add the

01:27:32,320 --> 01:27:37,679
other consensus i just realized that

01:27:34,480 --> 01:27:42,719
julius talks to or

01:27:37,679 --> 01:27:42,719
julius figures oats like bridging julius

01:27:43,600 --> 01:28:05,440
to explore um

01:28:01,679 --> 01:28:08,480
okay this is already green but

01:28:05,440 --> 01:28:12,320
consensus julius to explore our c matrix

01:28:08,480 --> 01:28:12,320
and select bridging with matrix in the

01:28:12,840 --> 01:28:16,639
center

01:28:14,400 --> 01:28:16,639
good

01:28:17,600 --> 01:28:23,040
so who will do the matrix and discourse

01:28:20,639 --> 01:28:23,040
bridging

01:28:24,000 --> 01:28:28,800
thank you for volunteering richie i'm

01:28:27,040 --> 01:28:31,040
volunteering frederick

01:28:28,800 --> 01:28:31,040
um

01:28:34,159 --> 01:28:41,040
hey okay okay so call for consensus

01:28:37,840 --> 01:28:45,040
okay um julian prometheus behavior than

01:28:41,040 --> 01:28:45,040
their stator corruption disk full etc

01:28:46,480 --> 01:28:51,199
yeah so um currently like when you have

01:28:49,360 --> 01:28:52,960
these foreign promoters

01:28:51,199 --> 01:28:55,040
you basically lose your data so i'm

01:28:52,960 --> 01:28:56,880
wondering if we should have

01:28:55,040 --> 01:28:58,159
a solution to prevent that kind of

01:28:56,880 --> 01:28:59,040
things to happen because that's

01:28:58,159 --> 01:29:01,280
something that

01:28:59,040 --> 01:29:04,320
seems like it would be kind of trivial

01:29:01,280 --> 01:29:07,280
to implement in some way

01:29:04,320 --> 01:29:09,040
so at least the users who like not have

01:29:07,280 --> 01:29:10,560
data loss anymore

01:29:09,040 --> 01:29:13,120
but i don't know what the team thinks

01:29:10,560 --> 01:29:13,120
about it

01:29:13,199 --> 01:29:20,480
i mean so we had discussions about this

01:29:17,920 --> 01:29:21,360
way way way back and there's certain

01:29:20,480 --> 01:29:22,960
problems

01:29:21,360 --> 01:29:24,639
uh i don't know if that has become

01:29:22,960 --> 01:29:27,199
better

01:29:24,639 --> 01:29:28,960
where you cannot be certain if you have

01:29:27,199 --> 01:29:29,760
a local disk or what your local disk

01:29:28,960 --> 01:29:32,960
look like

01:29:29,760 --> 01:29:33,679
if you if you actually can get a thing

01:29:32,960 --> 01:29:37,199
like

01:29:33,679 --> 01:29:38,239
what is my free disk space and these

01:29:37,199 --> 01:29:41,840
kinds of things

01:29:38,239 --> 01:29:44,639
would need to be there to reliably

01:29:41,840 --> 01:29:46,400
promise users that we have self-care and

01:29:44,639 --> 01:29:49,600
self-fixing

01:29:46,400 --> 01:29:51,360
we cannot fix a full disk as such we

01:29:49,600 --> 01:29:54,639
need to drop

01:29:51,360 --> 01:29:55,679
that old data because else the disk will

01:29:54,639 --> 01:29:57,520
still be full

01:29:55,679 --> 01:30:00,159
but even then we cannot make promises

01:29:57,520 --> 01:30:00,560
because if if var lock is being filled

01:30:00,159 --> 01:30:03,679
at

01:30:00,560 --> 01:30:06,320
insane speeds that is

01:30:03,679 --> 01:30:08,400
still full so this is the short summary

01:30:06,320 --> 01:30:12,080
of what we discussed

01:30:08,400 --> 01:30:15,199
two years three years ago i think um

01:30:12,080 --> 01:30:16,960
but what i strongly proposed back then

01:30:15,199 --> 01:30:19,199
and still think what makes absolute

01:30:16,960 --> 01:30:20,080
sense as a first step as we figure this

01:30:19,199 --> 01:30:23,199
out more it's more

01:30:20,080 --> 01:30:24,960
self-care of course we may not be able

01:30:23,199 --> 01:30:27,280
to make hard promises to

01:30:24,960 --> 01:30:29,199
to be able to read out free disk space

01:30:27,280 --> 01:30:32,239
course windows course set fs

01:30:29,199 --> 01:30:32,639
course what have you but still we can

01:30:32,239 --> 01:30:35,520
make

01:30:32,639 --> 01:30:36,000
a reasonable effort attempt and just

01:30:35,520 --> 01:30:38,080
start

01:30:36,000 --> 01:30:39,760
exposing all this information about the

01:30:38,080 --> 01:30:42,800
prometheus instance

01:30:39,760 --> 01:30:46,080
and come with default alerts which which

01:30:42,800 --> 01:30:49,840
start yelling when you have a disk which

01:30:46,080 --> 01:30:49,840
is imminently full or something

01:30:51,440 --> 01:30:54,880
there's also the problem if you should

01:30:54,239 --> 01:30:57,280
really stop

01:30:54,880 --> 01:30:59,040
ingesting or better remove all data

01:30:57,280 --> 01:31:00,080
right we had this in the discussion as

01:30:59,040 --> 01:31:02,080
well

01:31:00,080 --> 01:31:04,800
if the typical committee's user is more

01:31:02,080 --> 01:31:07,840
keen on the old or the new data

01:31:04,800 --> 01:31:10,000
so uh are you speaking about setting a

01:31:07,840 --> 01:31:11,199
retention which would be like 90 percent

01:31:10,000 --> 01:31:13,840
and then politics would

01:31:11,199 --> 01:31:15,360
take 90 percent of the disk the return

01:31:13,840 --> 01:31:18,159
retention size

01:31:15,360 --> 01:31:19,679
we have that already right no it is a

01:31:18,159 --> 01:31:22,639
fixed number now

01:31:19,679 --> 01:31:23,440
so as a user you cannot like say 90

01:31:22,639 --> 01:31:25,360
percent

01:31:23,440 --> 01:31:27,040
and when you don't have enough data you

01:31:25,360 --> 01:31:29,280
just go up your disk

01:31:27,040 --> 01:31:31,199
props test would be a good starting

01:31:29,280 --> 01:31:31,600
point but then again what richie said

01:31:31,199 --> 01:31:35,280
right

01:31:31,600 --> 01:31:35,840
what is this coolness um if we if we

01:31:35,280 --> 01:31:37,600
have us

01:31:35,840 --> 01:31:39,520
if we have a solid definition for that

01:31:37,600 --> 01:31:41,679
we could just

01:31:39,520 --> 01:31:43,760
so prometheus requires the posix

01:31:41,679 --> 01:31:45,600
compliance storage and i would expect

01:31:43,760 --> 01:31:49,199
that the way we get to this

01:31:45,600 --> 01:31:50,880
species should be posix compliant

01:31:49,199 --> 01:31:53,199
but there's still going to be situations

01:31:50,880 --> 01:31:55,440
where you don't know the disks run out

01:31:53,199 --> 01:31:56,239
until you your right fails by which

01:31:55,440 --> 01:31:58,239
point

01:31:56,239 --> 01:31:59,840
it's too late to do anything because

01:31:58,239 --> 01:32:01,679
you've already went out as a space

01:31:59,840 --> 01:32:02,960
because all it takes is something else

01:32:01,679 --> 01:32:06,159
on the disk to

01:32:02,960 --> 01:32:08,239
to suddenly use up the remaining space

01:32:06,159 --> 01:32:10,639
and your your white that was just about

01:32:08,239 --> 01:32:10,639
to happen

01:32:10,840 --> 01:32:15,199
fails so this is kind of addressed now

01:32:13,840 --> 01:32:18,560
because prometheus

01:32:15,199 --> 01:32:22,719
checks for this space every minute

01:32:18,560 --> 01:32:24,840
but even the disc free uh counter is not

01:32:22,719 --> 01:32:26,159
the semantics of that isn't defined by

01:32:24,840 --> 01:32:28,880
posix

01:32:26,159 --> 01:32:29,760
okay what i've seen in other projects is

01:32:28,880 --> 01:32:34,239
have like a

01:32:29,760 --> 01:32:37,440
kind of um a placeholder file

01:32:34,239 --> 01:32:39,280
but that's a nasty hack i find

01:32:37,440 --> 01:32:41,600
once a minute is is is better than

01:32:39,280 --> 01:32:43,440
nothing but that still gives a minute

01:32:41,600 --> 01:32:46,639
where

01:32:43,440 --> 01:32:49,199
the disc gets full again

01:32:46,639 --> 01:32:50,960
at the point of writing the data that's

01:32:49,199 --> 01:32:52,400
the only time you definitely know that

01:32:50,960 --> 01:32:54,960
the disk is full

01:32:52,400 --> 01:32:56,080
anything else you can obviously is a bit

01:32:54,960 --> 01:32:58,800
of a heads up

01:32:56,080 --> 01:33:00,880
but you can't rely on it because you

01:32:58,800 --> 01:33:03,360
check it once a minute

01:33:00,880 --> 01:33:05,840
you check it and then 300 milliseconds

01:33:03,360 --> 01:33:08,960
later something uses up all this space

01:33:05,840 --> 01:33:11,440
it's now full so so the only

01:33:08,960 --> 01:33:12,639
the the problem is that you've written

01:33:11,440 --> 01:33:14,960
now

01:33:12,639 --> 01:33:16,560
something that isn't complete because

01:33:14,960 --> 01:33:19,760
there was enough space

01:33:16,560 --> 01:33:22,880
so the best you can hope to do is

01:33:19,760 --> 01:33:24,560
somehow undo that right but obviously

01:33:22,880 --> 01:33:26,159
that still relies on

01:33:24,560 --> 01:33:28,080
there being enough disk space to undo

01:33:26,159 --> 01:33:30,480
that right or whatever

01:33:28,080 --> 01:33:32,239
in a sensible way and it gets probably

01:33:30,480 --> 01:33:34,639
quite complicated

01:33:32,239 --> 01:33:37,199
and that's all before you you have

01:33:34,639 --> 01:33:39,679
something on setfs where the concept of

01:33:37,199 --> 01:33:42,080
free disk doesn't even make

01:33:39,679 --> 01:33:43,199
sense and you literally have to use

01:33:42,080 --> 01:33:46,159
different tools to get

01:33:43,199 --> 01:33:48,400
insight into into what the state of of

01:33:46,159 --> 01:33:50,080
your volumes is

01:33:48,400 --> 01:33:51,679
you don't even have to go that far you

01:33:50,080 --> 01:33:54,480
can even go

01:33:51,679 --> 01:33:55,520
butter fs right if you have a some raid

01:33:54,480 --> 01:33:57,520
volume

01:33:55,520 --> 01:34:04,239
the the free disk space doesn't really

01:33:57,520 --> 01:34:06,800
represent of what you can write to it

01:34:04,239 --> 01:34:08,239
i would argue that butter is way farther

01:34:06,800 --> 01:34:10,159
in the experimental than

01:34:08,239 --> 01:34:12,880
than said the fest but that's probably a

01:34:10,159 --> 01:34:16,000
religious discussion

01:34:12,880 --> 01:34:19,600
uh yeah but now you're absolutely right

01:34:16,000 --> 01:34:21,440
you're absolute so

01:34:19,600 --> 01:34:24,159
and this mirrors what we had last time

01:34:21,440 --> 01:34:28,159
but the the thing which i'm still

01:34:24,159 --> 01:34:30,960
unclear on is why we don't have

01:34:28,159 --> 01:34:33,920
three dozen different alerts which come

01:34:30,960 --> 01:34:36,880
by default when you install promoters

01:34:33,920 --> 01:34:39,440
which are part of of all the demos and

01:34:36,880 --> 01:34:43,119
all the how to's and everything

01:34:39,440 --> 01:34:46,159
and we have all the things

01:34:43,119 --> 01:34:48,480
so what i proposed a few months ago was

01:34:46,159 --> 01:34:50,360
that we just compiled

01:34:48,480 --> 01:34:51,760
the mixing and we provide that

01:34:50,360 --> 01:35:00,400
information

01:34:51,760 --> 01:35:03,760
but i think fred was against that

01:35:00,400 --> 01:35:07,520
fred isn't listening sorry i didn't

01:35:03,760 --> 01:35:10,400
what what was you working

01:35:07,520 --> 01:35:12,480
so a few months back i proposed that we

01:35:10,400 --> 01:35:15,440
compiled the mixing and we shipped them

01:35:12,480 --> 01:35:17,199
inside the prometheus.gz so that users

01:35:15,440 --> 01:35:19,040
will get them out of the box but you

01:35:17,199 --> 01:35:21,600
were against that idea i think

01:35:19,040 --> 01:35:24,000
but i don't remember why i don't

01:35:21,600 --> 01:35:25,679
remember discussing this to be honest

01:35:24,000 --> 01:35:27,440
okay i i think you mentioned that you

01:35:25,679 --> 01:35:29,280
wanted better tools to deploy

01:35:27,440 --> 01:35:31,280
mixings and not just compiling them for

01:35:29,280 --> 01:35:33,840
the users

01:35:31,280 --> 01:35:35,600
uh i i i might have said that there's

01:35:33,840 --> 01:35:39,280
something in the works

01:35:35,600 --> 01:35:41,280
um but i which is why i would hold off

01:35:39,280 --> 01:35:44,000
on something like this right now

01:35:41,280 --> 01:35:44,000
but um

01:35:44,719 --> 01:35:48,320
anything useful that we can give to

01:35:46,639 --> 01:35:51,920
users i'm not against

01:35:48,320 --> 01:35:54,480
um but like for this fool

01:35:51,920 --> 01:35:58,000
that means you also need a node exporter

01:35:54,480 --> 01:36:01,280
and the node exporter words right

01:35:58,000 --> 01:36:04,239
not necessarily you can put

01:36:01,280 --> 01:36:04,800
a baseline thing with with reasonable

01:36:04,239 --> 01:36:07,840
effort

01:36:04,800 --> 01:36:10,719
into prometheus proper and you can have

01:36:07,840 --> 01:36:12,000
a metric which exposes if you're not

01:36:10,719 --> 01:36:15,679
able to reliably

01:36:12,000 --> 01:36:18,960
read from from your whatever shoddy

01:36:15,679 --> 01:36:20,000
low overhead mechanism you have so at

01:36:18,960 --> 01:36:23,199
least you know

01:36:20,000 --> 01:36:25,520
if you're not having local data

01:36:23,199 --> 01:36:27,520
i would not like that because like that

01:36:25,520 --> 01:36:29,360
reminds me of the java libraries that

01:36:27,520 --> 01:36:32,800
all expose the ocpu

01:36:29,360 --> 01:36:35,199
which is not super useful so

01:36:32,800 --> 01:36:37,520
that would encourage exporters and other

01:36:35,199 --> 01:36:39,840
people to expose their system metrics as

01:36:37,520 --> 01:36:39,840
well

01:36:40,880 --> 01:36:45,360
we can also have an alert if we don't

01:36:42,960 --> 01:36:48,880
have node exporter data about

01:36:45,360 --> 01:36:51,360
the local prometheus system by default

01:36:48,880 --> 01:36:53,360
and anyone who is advanced enough to to

01:36:51,360 --> 01:36:55,360
have use cases where they

01:36:53,360 --> 01:36:57,119
where they don't care about the state of

01:36:55,360 --> 01:37:02,080
a single prometheus

01:36:57,119 --> 01:37:05,040
like for example with agents and such um

01:37:02,080 --> 01:37:06,560
can just not use it or disable that

01:37:05,040 --> 01:37:09,360
thing

01:37:06,560 --> 01:37:09,679
but that by default we we have an alert

01:37:09,360 --> 01:37:12,880
no

01:37:09,679 --> 01:37:15,199
local node exporter which will then

01:37:12,880 --> 01:37:20,960
break every time on kubernetes because

01:37:15,199 --> 01:37:24,239
it's the pod name which is your name

01:37:20,960 --> 01:37:28,000
see the but this these are the

01:37:24,239 --> 01:37:28,000
these are the discussions um

01:37:28,719 --> 01:37:36,400
i mean perfect is the enemy of the good

01:37:32,480 --> 01:37:39,199
and i think we have consensus that

01:37:36,400 --> 01:37:40,880
we would like to enable more self-care

01:37:39,199 --> 01:37:43,440
and self-protection

01:37:40,880 --> 01:37:48,880
while not making super hard guarantees

01:37:43,440 --> 01:37:51,920
towards the users which we cannot keep

01:37:48,880 --> 01:37:54,239
so as an intermediate step should we

01:37:51,920 --> 01:37:57,520
have a call for consensus on on just

01:37:54,239 --> 01:38:00,000
trying to get more self-care in where

01:37:57,520 --> 01:38:02,000
it's reasonably possible

01:38:00,000 --> 01:38:04,400
should we try to get a consensus on

01:38:02,000 --> 01:38:08,639
shipping the mixins

01:38:04,400 --> 01:38:11,760
a compiled version of the mixins um the

01:38:08,639 --> 01:38:14,800
i know i know uh sam is working on

01:38:11,760 --> 01:38:18,000
on q and skew meta and

01:38:14,800 --> 01:38:20,560
and all the things yeah this is

01:38:18,000 --> 01:38:21,360
a couple of months out probably or weeks

01:38:20,560 --> 01:38:23,920
so

01:38:21,360 --> 01:38:26,639
like in the meantime if there's a

01:38:23,920 --> 01:38:29,199
decision to go forward with something

01:38:26,639 --> 01:38:31,199
but basically in the next weeks then i

01:38:29,199 --> 01:38:33,520
don't i don't mean shipping the mixings

01:38:31,199 --> 01:38:35,920
but we could just compile them

01:38:33,520 --> 01:38:38,080
right yeah we we're discussing

01:38:35,920 --> 01:38:39,520
compatibility anyway so like

01:38:38,080 --> 01:38:42,320
down the road it shouldn't break too

01:38:39,520 --> 01:38:42,960
much like whatever is compiled and

01:38:42,320 --> 01:38:47,199
shipped

01:38:42,960 --> 01:38:47,840
so side note it would be super nice if

01:38:47,199 --> 01:38:50,800
we had

01:38:47,840 --> 01:38:52,960
that new and shiny configuration

01:38:50,800 --> 01:38:55,280
handling within prometheus

01:38:52,960 --> 01:38:59,520
because this would make this use case

01:38:55,280 --> 01:39:02,159
super easy where you just literally

01:38:59,520 --> 01:39:03,840
source that file and and you have it all

01:39:02,159 --> 01:39:06,719
um but i think i agree with

01:39:03,840 --> 01:39:07,679
with pretty much everyone we can

01:39:06,719 --> 01:39:10,480
pre-compile

01:39:07,679 --> 01:39:11,199
the uh the mixon and at least have the

01:39:10,480 --> 01:39:13,040
alerts

01:39:11,199 --> 01:39:15,520
as part of the default settings and

01:39:13,040 --> 01:39:17,199
that's part of the recommended settings

01:39:15,520 --> 01:39:18,560
and then we wait and see what what

01:39:17,199 --> 01:39:21,520
happens and when with

01:39:18,560 --> 01:39:22,080
with mixins and once that has stabilized

01:39:21,520 --> 01:39:25,360
we can

01:39:22,080 --> 01:39:29,119
we can ship them with

01:39:25,360 --> 01:39:30,159
with premises yeah i think that makes

01:39:29,119 --> 01:39:32,320
sense for now

01:39:30,159 --> 01:39:34,080
because we haven't like finalized

01:39:32,320 --> 01:39:37,920
anything it's all up for discussion

01:39:34,080 --> 01:39:40,639
and i'm i'm pretty sure that by the time

01:39:37,920 --> 01:39:41,679
we get to something it will be probably

01:39:40,639 --> 01:39:44,880
september

01:39:41,679 --> 01:39:46,719
at least so should we agree on

01:39:44,880 --> 01:39:48,960
trying to do that on prometheus as an

01:39:46,719 --> 01:39:51,199
experiment and then maybe

01:39:48,960 --> 01:39:52,159
ship compile version of the mixing for

01:39:51,199 --> 01:39:56,719
the other

01:39:52,159 --> 01:39:56,719
exporters later on if that works

01:39:58,159 --> 01:40:02,800
yes i think so of course that like the

01:40:00,800 --> 01:40:05,440
prometheus self-care is the more

01:40:02,800 --> 01:40:06,320
is the most important thing also side

01:40:05,440 --> 01:40:09,600
note

01:40:06,320 --> 01:40:12,800
for frederick and matthias uh

01:40:09,600 --> 01:40:14,239
q i think 0.4 came out yesterday two

01:40:12,800 --> 01:40:17,280
days ago so i expect

01:40:14,239 --> 01:40:20,000
more things going back and forth on the

01:40:17,280 --> 01:40:20,000
mixing front

01:40:20,239 --> 01:40:26,719
so that might shift stuff back uh

01:40:23,840 --> 01:40:28,480
yeah i'm i'm quickly talking to sam and

01:40:26,719 --> 01:40:30,719
mikey about all of this so

01:40:28,480 --> 01:40:30,719
okay

01:40:32,480 --> 01:40:38,400
so would we then ship prometheus with

01:40:35,600 --> 01:40:40,800
some set of rules that kind of if there

01:40:38,400 --> 01:40:42,159
is a node exporter on the standard port

01:40:40,800 --> 01:40:44,560
it will just scrape it

01:40:42,159 --> 01:40:45,199
and and activate all the alerts for it

01:40:44,560 --> 01:40:47,760
and if not

01:40:45,199 --> 01:40:49,440
it just doesn't no no we are just

01:40:47,760 --> 01:40:51,040
thinking about the existing rules that

01:40:49,440 --> 01:40:53,520
are in the promoting setup which

01:40:51,040 --> 01:40:56,239
already covers the when we cannot inject

01:40:53,520 --> 01:40:56,239
data i guess

01:40:57,040 --> 01:41:01,199
so the goal is to compile the existing

01:40:58,800 --> 01:41:04,159
mixing and provide it

01:41:01,199 --> 01:41:05,360
directly if you so if you enter the

01:41:04,159 --> 01:41:06,960
promoter's release

01:41:05,360 --> 01:41:08,639
your launch promises you have the others

01:41:06,960 --> 01:41:11,760
running yes

01:41:08,639 --> 01:41:14,639
but just the alerts and the prometheus

01:41:11,760 --> 01:41:16,080
yes so that wouldn't help us with discus

01:41:14,639 --> 01:41:18,719
running full

01:41:16,080 --> 01:41:19,760
because that's what this all started yes

01:41:18,719 --> 01:41:21,600
but it seems that

01:41:19,760 --> 01:41:23,520
this is not a problem that you can solve

01:41:21,600 --> 01:41:24,320
that easily so i propose an electronic

01:41:23,520 --> 01:41:25,840
solution for

01:41:24,320 --> 01:41:28,239
more self-care which would be to ship

01:41:25,840 --> 01:41:31,360
the mixins well actually we can

01:41:28,239 --> 01:41:33,920
i know we can't no i mean i

01:41:31,360 --> 01:41:34,960
i like this that you if you just get the

01:41:33,920 --> 01:41:37,920
vanilla

01:41:34,960 --> 01:41:39,440
tarball or whatever we use and you

01:41:37,920 --> 01:41:41,440
unpack it and you can just start

01:41:39,440 --> 01:41:43,600
prometheus and get like a nice

01:41:41,440 --> 01:41:45,040
set of stuff right that's that's the

01:41:43,600 --> 01:41:46,880
cool stuff yes

01:41:45,040 --> 01:41:48,719
and if this would be something that

01:41:46,880 --> 01:41:49,840
detects if there's a note export already

01:41:48,719 --> 01:41:53,360
running and if yes

01:41:49,840 --> 01:41:56,320
scrape it and and do stuff

01:41:53,360 --> 01:41:56,719
i would be for it or we do something

01:41:56,320 --> 01:41:59,520
that

01:41:56,719 --> 01:42:01,040
if we install node exporter the mix in

01:41:59,520 --> 01:42:02,960
is

01:42:01,040 --> 01:42:04,560
somewhere in the standard location where

01:42:02,960 --> 01:42:06,560
prometheus could try to find

01:42:04,560 --> 01:42:09,040
the rule i i don't know if there is yeah

01:42:06,560 --> 01:42:10,800
so so that basically ties into

01:42:09,040 --> 01:42:12,960
what frederick mentioned and what we've

01:42:10,800 --> 01:42:15,360
been like also discussing with the

01:42:12,960 --> 01:42:16,639
uh newer state of the mix-ins where all

01:42:15,360 --> 01:42:19,920
of this would kind of like

01:42:16,639 --> 01:42:22,320
discover and like configure based on

01:42:19,920 --> 01:42:24,239
metadata in your in your system right

01:42:22,320 --> 01:42:25,840
like basically like oh there's

01:42:24,239 --> 01:42:27,520
there's another exporter built in for

01:42:25,840 --> 01:42:28,400
metric or whatever and then based on

01:42:27,520 --> 01:42:31,600
that

01:42:28,400 --> 01:42:34,960
you configure alerts for node exporter

01:42:31,600 --> 01:42:37,119
so i think it probably

01:42:34,960 --> 01:42:38,480
it probably goes too far for for what

01:42:37,119 --> 01:42:40,320
we're discussing

01:42:38,480 --> 01:42:42,400
i think for prometheus itself it makes

01:42:40,320 --> 01:42:45,280
sense to just compile

01:42:42,400 --> 01:42:46,080
a standard set of of alerts coming from

01:42:45,280 --> 01:42:48,960
the nordic

01:42:46,080 --> 01:42:50,719
from the prometheus mixer and then

01:42:48,960 --> 01:42:52,960
discuss for the nordic forehead

01:42:50,719 --> 01:42:55,040
it won't be perfect obviously but i

01:42:52,960 --> 01:42:57,199
think it will be good enough for

01:42:55,040 --> 01:42:58,800
for for most people and and certainly

01:42:57,199 --> 01:43:02,000
we've seen exactly that

01:42:58,800 --> 01:43:03,679
um throughout the last four years with q

01:43:02,000 --> 01:43:05,040
prometheus where people

01:43:03,679 --> 01:43:06,719
love the experience of getting

01:43:05,040 --> 01:43:07,280
everything up and running on kubernetes

01:43:06,719 --> 01:43:10,080
with these

01:43:07,280 --> 01:43:11,119
alerts and rules all set up out of the

01:43:10,080 --> 01:43:13,280
box

01:43:11,119 --> 01:43:15,760
so i think that's one of the major

01:43:13,280 --> 01:43:18,880
drivers for those projects

01:43:15,760 --> 01:43:22,840
i mean once we can do config from

01:43:18,880 --> 01:43:24,080
directories we can i mean debian could

01:43:22,840 --> 01:43:26,000
probably

01:43:24,080 --> 01:43:28,080
nicely have this whatever exporter you

01:43:26,000 --> 01:43:29,920
install you automatically get the mix in

01:43:28,080 --> 01:43:33,440
in your prometheus

01:43:29,920 --> 01:43:37,360
stuff like that we already have that for

01:43:33,440 --> 01:43:38,880
the debian could already do that with

01:43:37,360 --> 01:43:41,199
the file sd and the holes

01:43:38,880 --> 01:43:42,639
already support globbing so for the

01:43:41,199 --> 01:43:44,800
users for like

01:43:42,639 --> 01:43:46,560
targets right i want that if i install

01:43:44,800 --> 01:43:48,400
node exporter that automatically the

01:43:46,560 --> 01:43:50,719
scrape config for the moto exporter

01:43:48,400 --> 01:43:53,920
shows up on my prometheus why not if

01:43:50,719 --> 01:43:57,679
they just use one file sd

01:43:53,920 --> 01:44:01,520
oh yeah they could yeah that's true no

01:43:57,679 --> 01:44:02,080
yeah true and we can just make this part

01:44:01,520 --> 01:44:04,960
of

01:44:02,080 --> 01:44:06,000
of the default configuration and like

01:44:04,960 --> 01:44:08,000
for example if you

01:44:06,000 --> 01:44:09,119
deploy to kubernetes okay then you need

01:44:08,000 --> 01:44:12,560
to remove this

01:44:09,119 --> 01:44:15,760
this alert and this from your from your

01:44:12,560 --> 01:44:17,600
uh default configuration

01:44:15,760 --> 01:44:18,960
but you're doing that anyway right if

01:44:17,600 --> 01:44:22,560
you are deploying these

01:44:18,960 --> 01:44:24,320
over that is you or not yes if you you

01:44:22,560 --> 01:44:25,840
keep the same configuration as we do you

01:44:24,320 --> 01:44:27,840
only describe the call committee so i

01:44:25,840 --> 01:44:29,840
guess that most of the people

01:44:27,840 --> 01:44:32,080
just already override the configuration

01:44:29,840 --> 01:44:34,480
what we need to do is to evolve

01:44:32,080 --> 01:44:35,119
to name it like or something like that

01:44:34,480 --> 01:44:37,119
so that

01:44:35,119 --> 01:44:39,310
it does not override all the cameras

01:44:37,119 --> 01:44:42,080
that people might have now

01:44:39,310 --> 01:44:46,000
[Music]

01:44:42,080 --> 01:44:49,840
agreed but

01:44:46,000 --> 01:44:49,840
yeah so i think we we

01:44:50,560 --> 01:44:54,800
let me rewrite that one thing we want

01:45:00,480 --> 01:45:03,600
and i also think that this can foster

01:45:02,320 --> 01:45:07,760
more contribution to

01:45:03,600 --> 01:45:07,760
those electing rules and those mixings

01:45:08,880 --> 01:45:11,119
yes

01:45:13,440 --> 01:45:16,800
on a different note there's a little bit

01:45:15,040 --> 01:45:19,360
of chicken egg with

01:45:16,800 --> 01:45:22,320
with mexicans similar to exporters five

01:45:19,360 --> 01:45:22,320
or six years ago

01:45:23,280 --> 01:45:26,800
they're pretty much in everyone's best

01:45:25,119 --> 01:45:29,920
interest but

01:45:26,800 --> 01:45:31,760
people don't even realize this yet so

01:45:29,920 --> 01:45:33,760
consensus we want more self

01:45:31,760 --> 01:45:36,320
care alerting all agreed anyone

01:45:33,760 --> 01:45:36,320
disagreeing

01:45:36,960 --> 01:45:41,920
good next one we want to compile the

01:45:39,760 --> 01:45:45,840
prometheus mixer and ship those alerts

01:45:41,920 --> 01:45:45,840
as a default configuration

01:45:46,639 --> 01:45:58,080
or ship the results

01:45:50,400 --> 01:46:01,840
the resulting configuration

01:45:58,080 --> 01:46:03,520
okay let's uh yeah thank you julius

01:46:01,840 --> 01:46:05,280
we want to compile the prometheus mixer

01:46:03,520 --> 01:46:07,840
and ship the resulting configuration by

01:46:05,280 --> 01:46:07,840
default

01:46:08,000 --> 01:46:11,360
i'll agree to anyone disagreeing

01:46:11,679 --> 01:46:18,080
there we go a local node exporter should

01:46:14,960 --> 01:46:21,440
be scraped and alerted upon by default

01:46:18,080 --> 01:46:21,440
all agreed anyone disagreeing

01:46:22,400 --> 01:46:27,440
i wasn't exactly sure if we really

01:46:25,360 --> 01:46:30,719
discussed that and came to a conclusion

01:46:27,440 --> 01:46:33,600
although i'm not able to vote i guess

01:46:30,719 --> 01:46:34,560
but i i think we did when julian

01:46:33,600 --> 01:46:36,800
suggested

01:46:34,560 --> 01:46:38,159
um that this can just be done through

01:46:36,800 --> 01:46:41,520
finalists

01:46:38,159 --> 01:46:44,639
and anyone who who deploys with

01:46:41,520 --> 01:46:47,440
ancient peoples anyway our

01:46:44,639 --> 01:46:48,080
distributors could integrate yes yeah

01:46:47,440 --> 01:46:51,119
yeah

01:46:48,080 --> 01:46:53,040
sorry or we could do it yeah i don't

01:46:51,119 --> 01:46:55,840
think we should start to do like

01:46:53,040 --> 01:46:56,560
um auto discovery i think service curry

01:46:55,840 --> 01:46:59,280
should cover

01:46:56,560 --> 01:47:00,320
all the needs and be better yeah i think

01:46:59,280 --> 01:47:02,480
so as well

01:47:00,320 --> 01:47:03,840
like i i think i think it's a good idea

01:47:02,480 --> 01:47:05,840
to pre-compile the

01:47:03,840 --> 01:47:07,840
rules and we already have a default

01:47:05,840 --> 01:47:08,480
config in the tarball as well i think

01:47:07,840 --> 01:47:11,280
and so like

01:47:08,480 --> 01:47:13,119
having some rules with that that do

01:47:11,280 --> 01:47:15,600
something with that default config makes

01:47:13,119 --> 01:47:16,719
sense but i think further than that it's

01:47:15,600 --> 01:47:19,040
probably

01:47:16,719 --> 01:47:21,040
including it otherwise we will end up

01:47:19,040 --> 01:47:23,280
doing an n-map of the full network

01:47:21,040 --> 01:47:24,239
and having a nmr service coverage to do

01:47:23,280 --> 01:47:27,760
like that kind of

01:47:24,239 --> 01:47:29,280
no no so okay my understanding of what

01:47:27,760 --> 01:47:32,000
was said was

01:47:29,280 --> 01:47:32,400
in the default config we just literally

01:47:32,000 --> 01:47:35,760
have

01:47:32,400 --> 01:47:39,119
localhost port i forget which

01:47:35,760 --> 01:47:40,080
and if it exists it's just script but if

01:47:39,119 --> 01:47:43,360
it does not you have

01:47:40,080 --> 01:47:46,560
up equal zero when you trigger alert

01:47:43,360 --> 01:47:50,000
that's exactly why i brought it up there

01:47:46,560 --> 01:47:52,320
yes but we can we can

01:47:50,000 --> 01:47:54,080
change those alerts to not trigger in

01:47:52,320 --> 01:47:57,600
this case

01:47:54,080 --> 01:47:57,600
if the target is not up

01:47:58,800 --> 01:48:02,560
i would not do this at this stage i

01:48:00,480 --> 01:48:03,119
would first let's first keep the mix in

01:48:02,560 --> 01:48:06,000
and see

01:48:03,119 --> 01:48:06,719
later on if you want to i feel similar

01:48:06,000 --> 01:48:10,080
okay

01:48:06,719 --> 01:48:12,159
just that disables the uh the initial

01:48:10,080 --> 01:48:12,560
use case which julian was talking about

01:48:12,159 --> 01:48:14,719
but

01:48:12,560 --> 01:48:16,840
i'm totally fine with it i just want to

01:48:14,719 --> 01:48:19,360
everyone to be aware

01:48:16,840 --> 01:48:21,679
yeah like as as a second

01:48:19,360 --> 01:48:22,960
next step i would rather suggest to

01:48:21,679 --> 01:48:25,760
pre-compile

01:48:22,960 --> 01:48:28,080
the note exporter mix in as part of node

01:48:25,760 --> 01:48:31,679
exporter so people can just grab that

01:48:28,080 --> 01:48:34,000
um and then they can basically um

01:48:31,679 --> 01:48:34,800
take that and put it into their rules by

01:48:34,000 --> 01:48:37,840
folder

01:48:34,800 --> 01:48:39,840
so that should be enough of a of a quick

01:48:37,840 --> 01:48:42,639
start for most people

01:48:39,840 --> 01:48:43,199
um but it doesn't assume anything about

01:48:42,639 --> 01:48:47,440
your

01:48:43,199 --> 01:48:49,360
topology locally we can go

01:48:47,440 --> 01:48:51,119
okay but if we are this far we can go

01:48:49,360 --> 01:48:54,239
even one step further that we

01:48:51,119 --> 01:48:57,679
intend to to uh to package

01:48:54,239 --> 01:48:57,679
pre-compiled mixins

01:48:58,560 --> 01:49:04,000
with all exporters until such a time

01:49:01,920 --> 01:49:04,800
that mixins have been stabilized enough

01:49:04,000 --> 01:49:06,880
to

01:49:04,800 --> 01:49:07,920
to have a tool chain which which does

01:49:06,880 --> 01:49:10,400
this for you

01:49:07,920 --> 01:49:11,040
more or less automatically yeah exactly

01:49:10,400 --> 01:49:13,040
i think

01:49:11,040 --> 01:49:14,880
that's that's pretty much why i brought

01:49:13,040 --> 01:49:15,760
the not exporter thing up earlier

01:49:14,880 --> 01:49:18,000
because that's what i

01:49:15,760 --> 01:49:19,440
i figured from from what we've discussed

01:49:18,000 --> 01:49:22,719
so far once

01:49:19,440 --> 01:49:24,400
this shipping prometheus prometheus is

01:49:22,719 --> 01:49:25,520
mixing as part of the prometheus

01:49:24,400 --> 01:49:27,520
distribution

01:49:25,520 --> 01:49:29,119
kind of like turned out to be good then

01:49:27,520 --> 01:49:30,239
we can kind of push forward for all the

01:49:29,119 --> 01:49:33,199
exporters

01:49:30,239 --> 01:49:43,840
to make it more widely accessible in

01:49:33,199 --> 01:49:43,840
that sense

01:49:47,110 --> 01:49:50,240
[Music]

01:49:51,679 --> 01:49:58,560
yeah fair good addition thank you

01:49:55,280 --> 01:49:59,679
okay so let's let's try this one we want

01:49:58,560 --> 01:50:02,800
to pre-compile

01:49:59,679 --> 01:50:05,119
all exporter mixins once next generation

01:50:02,800 --> 01:50:05,920
mixins have stabilized we intend to move

01:50:05,119 --> 01:50:10,960
this

01:50:05,920 --> 01:50:13,599
to move this process to a user local

01:50:10,960 --> 01:50:13,599
tool chain

01:50:15,119 --> 01:50:21,760
all agreed anyone disagreeing i mean i

01:50:18,560 --> 01:50:26,080
i think that's probably up to the

01:50:21,760 --> 01:50:29,360
exporter maintainers now yeah i mean

01:50:26,080 --> 01:50:30,719
we yeah i'm talking about the first

01:50:29,360 --> 01:50:33,280
party ones we can

01:50:30,719 --> 01:50:36,239
i can also write first and i feel like

01:50:33,280 --> 01:50:38,080
the second part is out of scope for us

01:50:36,239 --> 01:50:39,599
that's precisely my point why why i

01:50:38,080 --> 01:50:40,800
didn't write it in course i thought it

01:50:39,599 --> 01:50:43,119
was obvious but it's

01:50:40,800 --> 01:50:44,080
it's it's completely fine uh we want to

01:50:43,119 --> 01:50:46,960
pre-compile all

01:50:44,080 --> 01:50:48,639
first-party exporter mix-ins once next

01:50:46,960 --> 01:50:50,080
generation mix-ins have stabilized we

01:50:48,639 --> 01:50:53,199
intend to move this

01:50:50,080 --> 01:50:55,150
process to a local tool chain

01:50:53,199 --> 01:50:57,199
the second part is not clear to me

01:50:55,150 --> 01:50:58,960
[Music]

01:50:57,199 --> 01:51:01,199
the intention behind the sentence is

01:50:58,960 --> 01:51:03,679
that we stop

01:51:01,199 --> 01:51:07,440
shipping pre-compiled mixins once we

01:51:03,679 --> 01:51:09,440
have better tooling around mixins

01:51:07,440 --> 01:51:11,679
well i don't agree with that i think

01:51:09,440 --> 01:51:13,360
that that will always be useful at least

01:51:11,679 --> 01:51:15,199
as examples of rules

01:51:13,360 --> 01:51:16,719
and i don't think everyone will adopt

01:51:15,199 --> 01:51:20,639
mixins okay

01:51:16,719 --> 01:51:23,760
fair yeah okay at least until

01:51:20,639 --> 01:51:25,760
next generation have stabilized

01:51:23,760 --> 01:51:27,599
okay we want to pre-compile all

01:51:25,760 --> 01:51:29,440
first-party exporter mixins

01:51:27,599 --> 01:51:35,520
at least until next-generation mixins

01:51:29,440 --> 01:51:38,719
have stabilized

01:51:35,520 --> 01:51:38,719
all agreed anyone disagree

01:51:40,719 --> 01:51:43,760
very good and as a last one should we

01:51:43,280 --> 01:51:46,800
add

01:51:43,760 --> 01:51:50,239
one that we encourage other exporter

01:51:46,800 --> 01:51:50,239
maintainers to do the same

01:51:51,040 --> 01:51:54,159
currently i would just have a consensus

01:51:53,280 --> 01:51:57,199
to make this

01:51:54,159 --> 01:51:57,760
to add this to the experimentally that

01:51:57,199 --> 01:51:58,960
we have

01:51:57,760 --> 01:52:01,280
the stability on the stability

01:51:58,960 --> 01:52:04,560
guarantees

01:52:01,280 --> 01:52:06,000
sorry i don't get it i think we should

01:52:04,560 --> 01:52:09,440
instead add this to the

01:52:06,000 --> 01:52:11,360
um stability guarantees that we do not

01:52:09,440 --> 01:52:13,119
provide guarantees on the stabilities of

01:52:11,360 --> 01:52:14,719
the rules that we provide

01:52:13,119 --> 01:52:16,639
and even the fact that we will continue

01:52:14,719 --> 01:52:18,400
to provide them in the future

01:52:16,639 --> 01:52:20,159
do we state anything about the like

01:52:18,400 --> 01:52:23,599
default config that we have in the

01:52:20,159 --> 01:52:25,440
tarball i don't think we made

01:52:23,599 --> 01:52:26,719
any promises about this ever yeah

01:52:25,440 --> 01:52:29,679
because i i would

01:52:26,719 --> 01:52:31,520
just it's not stability well it is said

01:52:29,679 --> 01:52:32,960
that adjusting and recording rules are

01:52:31,520 --> 01:52:34,480
considered stable so that could be

01:52:32,960 --> 01:52:37,760
integrated as such

01:52:34,480 --> 01:52:41,040
okay i'm not against putting a statement

01:52:37,760 --> 01:52:43,599
in there about this

01:52:41,040 --> 01:52:44,880
okay but that makes things more clear or

01:52:43,599 --> 01:52:47,920
do you consider the

01:52:44,880 --> 01:52:49,599
the alerts which we have then shipped as

01:52:47,920 --> 01:52:51,199
something where we have a stability

01:52:49,599 --> 01:52:52,639
guarantee

01:52:51,199 --> 01:52:54,639
no i don't think we should have it's

01:52:52,639 --> 01:52:55,360
what he's trying to clarify it's what i

01:52:54,639 --> 01:52:56,800
understand

01:52:55,360 --> 01:52:58,639
because in the stability guarantee we

01:52:56,800 --> 01:53:00,239
say that acting and recording rules are

01:52:58,639 --> 01:53:02,239
stable i think we want to

01:53:00,239 --> 01:53:05,280
specify explicitly that this does not

01:53:02,239 --> 01:53:05,280
cover the mixins

01:53:05,360 --> 01:53:09,280
because it could be integrated as oh you

01:53:07,119 --> 01:53:10,239
ship also you have a stability guarantee

01:53:09,280 --> 01:53:13,199
on them

01:53:10,239 --> 01:53:14,320
we can just call it slash examples slash

01:53:13,199 --> 01:53:19,040
whatever

01:53:14,320 --> 01:53:19,040
but yeah okay um reverting

01:53:21,199 --> 01:53:25,199
i think julian has a bit of a point um

01:53:23,520 --> 01:53:27,520
like i remember

01:53:25,199 --> 01:53:28,480
at red hat that customers definitely

01:53:27,520 --> 01:53:30,639
thought that there was

01:53:28,480 --> 01:53:33,520
stability around rules that were shipped

01:53:30,639 --> 01:53:33,520
in the product so

01:53:38,880 --> 01:53:45,840
okay so

01:53:42,719 --> 01:53:47,520
let's i'll read the whole thing again we

01:53:45,840 --> 01:53:48,560
want to pre-compile all first-party

01:53:47,520 --> 01:53:50,880
exporter mix-ins

01:53:48,560 --> 01:53:52,800
at least until next generation mix-ins

01:53:50,880 --> 01:53:54,960
have stabilized we will not make

01:53:52,800 --> 01:53:57,440
stability guarantees around pre-compiled

01:53:54,960 --> 01:53:57,440
make sense

01:53:57,520 --> 01:54:04,400
yes good that's good

01:54:01,199 --> 01:54:06,159
um because the next generation mixins

01:54:04,400 --> 01:54:09,599
came up

01:54:06,159 --> 01:54:10,639
did most of you see the um males around

01:54:09,599 --> 01:54:14,080
the next gen

01:54:10,639 --> 01:54:14,960
mixins sam boyer from grafana microcosm

01:54:14,080 --> 01:54:17,360
plus from

01:54:14,960 --> 01:54:19,199
aws and i put out or should i forward

01:54:17,360 --> 01:54:19,679
that to the developers making this again

01:54:19,199 --> 01:54:21,280
yeah

01:54:19,679 --> 01:54:23,760
please forward it because i have not

01:54:21,280 --> 01:54:26,239
seen it yeah that sounds good

01:54:23,760 --> 01:54:28,159
i think i know the document but yeah

01:54:26,239 --> 01:54:31,760
just forward

01:54:28,159 --> 01:54:33,920
so we only have like 13 seconds left but

01:54:31,760 --> 01:54:35,199
i just have a last point that i plan to

01:54:33,920 --> 01:54:38,159
ask on the mailing list

01:54:35,199 --> 01:54:39,520
if we should really have a developer

01:54:38,159 --> 01:54:41,599
summit in

01:54:39,520 --> 01:54:44,159
august and july i think we could skip

01:54:41,599 --> 01:54:44,159
those two

01:54:44,400 --> 01:54:48,560
but i will follow that up on the mailing

01:54:48,840 --> 01:54:53,280
list

01:54:51,119 --> 01:54:54,560
why should we skip them because everyone

01:54:53,280 --> 01:54:55,920
is on vacation

01:54:54,560 --> 01:54:57,760
i expect that there will be a lot of

01:54:55,920 --> 01:54:58,800
people on vacation at this at these

01:54:57,760 --> 01:55:01,679
times yes

01:54:58,800 --> 01:55:04,239
i definitely will be so i can already

01:55:01,679 --> 01:55:06,639
say that

01:55:04,239 --> 01:55:08,159
i i won't but yeah i mean we can we can

01:55:06,639 --> 01:55:10,480
put our doodle or something

01:55:08,159 --> 01:55:10,480
um

01:55:11,599 --> 01:55:15,280
yeah i mean

01:55:15,760 --> 01:55:18,960
let's ask okay asking is probably not

01:55:18,000 --> 01:55:22,320
the worst of ideas

01:55:18,960 --> 01:55:24,800
um we can ask team members to

01:55:22,320 --> 01:55:27,119
rsvp on the calendar event and if we see

01:55:24,800 --> 01:55:27,599
like significant cautions won't be there

01:55:27,119 --> 01:55:31,040
we can

01:55:27,599 --> 01:55:34,080
call it and if they are there we can

01:55:31,040 --> 01:55:34,080
have it right

01:55:35,040 --> 01:55:40,000
yeah i mean personally speaking i

01:55:38,239 --> 01:55:41,599
enjoy these so much that even in

01:55:40,000 --> 01:55:46,880
holidays i attend

01:55:41,599 --> 01:55:46,880
but best part of my holidays were

01:55:47,440 --> 01:55:55,119
not best but i i like the dev summits

01:55:51,199 --> 01:55:58,480
um okay

01:55:55,119 --> 01:55:59,360
okay um we're at time so let's stop the

01:55:58,480 --> 01:56:02,560
recording

01:55:59,360 --> 01:56:03,599
and or is there anything else which

01:56:02,560 --> 01:56:07,599
people want to

01:56:03,599 --> 01:56:10,719
discuss recordings not stopped

01:56:07,599 --> 01:56:11,199
or should we just close the meeting no

01:56:10,719 --> 01:56:13,040
but

01:56:11,199 --> 01:56:14,719
maybe that if we stop the recording we

01:56:13,040 --> 01:56:17,840
can talk to simon

01:56:14,719 --> 01:56:19,119
within the team at least i think bjorn

01:56:17,840 --> 01:56:21,599
and me have some questions

01:56:19,119 --> 01:56:25,440
for simon if you still have some time

01:56:21,599 --> 01:56:25,440
okay so i'll stop recording

01:56:25,719 --> 01:56:28,719

YouTube URL: https://www.youtube.com/watch?v=KHXhhmWajH8


