Title: Prometheus Community & The Ecosystem Meeting 2020-03-04
Publication date: 2020-03-31
Playlist: Prometheus Community & The Ecosystem Meetings
Description: 
	Meeting Information:  https://bit.ly/prom-community 
Agenda: http://bit.ly/prometheus-community-agenda
Captions: 
	00:00:00,030 --> 00:00:07,259
beyond that is maybe a good hold bag

00:00:04,890 --> 00:00:09,960
that I need to check that but I mean

00:00:07,259 --> 00:00:13,790
this will be like 20% memory increase

00:00:09,960 --> 00:00:16,859
but when when I run some tests locally

00:00:13,790 --> 00:00:19,550
apparently we might have done some

00:00:16,859 --> 00:00:22,020
savings on the postings that my

00:00:19,550 --> 00:00:24,240
counterbalance that so that's something

00:00:22,020 --> 00:00:26,310
that might be interesting so we

00:00:24,240 --> 00:00:30,029
definitely want to see what home bunch

00:00:26,310 --> 00:00:32,690
we given on education because when you

00:00:30,029 --> 00:00:38,000
compare to master it's 20% increase but

00:00:32,690 --> 00:00:41,820
master dusty ruff is 2.16 my get some

00:00:38,000 --> 00:00:43,710
cutoff balance to that also there is

00:00:41,820 --> 00:00:49,739
another key has to be change in the work

00:00:43,710 --> 00:00:52,649
about putting chunks in memory maps for

00:00:49,739 --> 00:00:56,070
the head and apparently that change will

00:00:52,649 --> 00:00:59,899
not make it to 2.17 so that will be

00:00:56,070 --> 00:00:59,899
probably for 2.18

00:01:03,660 --> 00:01:16,110
custom on if questions or comments yes

00:01:13,680 --> 00:01:17,940
sorry sorry I was I was late first of

00:01:16,110 --> 00:01:20,400
all hello everyone can we start like

00:01:17,940 --> 00:01:22,770
five minutes before after 9:00 because

00:01:20,400 --> 00:01:24,630
like people are just joining so I

00:01:22,770 --> 00:01:26,250
probably missed the most important part

00:01:24,630 --> 00:01:29,610
of your talk Julien did you talk about

00:01:26,250 --> 00:01:30,930
the state of these daily changes yes

00:01:29,610 --> 00:01:35,610
damn it

00:01:30,930 --> 00:01:36,240
so here's the question it's sorry for

00:01:35,610 --> 00:01:38,820
being late

00:01:36,240 --> 00:01:41,280
my question is why we don't have chang

00:01:38,820 --> 00:01:48,119
and up here they're like why we don't

00:01:41,280 --> 00:01:50,580
have even so there is another pia about

00:01:48,119 --> 00:01:54,390
the chunks in a map but apparently when

00:01:50,580 --> 00:01:59,090
i talked to yesterday they don't think

00:01:54,390 --> 00:02:01,920
it will be ready for the 2.17 release

00:01:59,090 --> 00:02:03,720
yeah i think is super close but yeah

00:02:01,920 --> 00:02:05,539
just curious what are the reasons is it

00:02:03,720 --> 00:02:11,119
any blocker but okay it's just timing

00:02:05,539 --> 00:02:11,119
cool yes nice thank you

00:02:13,319 --> 00:02:17,939
and also so you need to know that there

00:02:15,599 --> 00:02:19,769
is to pull requests one of them which is

00:02:17,939 --> 00:02:22,560
just implementing the logic but not

00:02:19,769 --> 00:02:24,569
changing the DSD B so basically that

00:02:22,560 --> 00:02:26,609
code and there is another one we still

00:02:24,569 --> 00:02:28,260
need fixing for the Windows test and I

00:02:26,609 --> 00:02:30,290
kind of think so that one will not make

00:02:28,260 --> 00:02:30,290
it

00:02:31,970 --> 00:02:38,520
yeah when is the release arre we cut the

00:02:36,540 --> 00:02:43,920
reach candidate next Wednesday okay

00:02:38,520 --> 00:02:46,680
super soon oh thank you cool I also have

00:02:43,920 --> 00:02:50,550
a question so what kind of like user

00:02:46,680 --> 00:02:53,940
impacting changes basically what's

00:02:50,550 --> 00:02:58,190
what's the difference for users gonna be

00:02:53,940 --> 00:03:01,200
even those isolation change or sudden

00:02:58,190 --> 00:03:04,560
most of the user may not notice anything

00:03:01,200 --> 00:03:07,800
but if you have a lot of instagrams and

00:03:04,560 --> 00:03:10,590
a lot of recording holes there will be

00:03:07,800 --> 00:03:12,390
some improvements well you could face

00:03:10,590 --> 00:03:15,480
some of these conditions regarding that

00:03:12,390 --> 00:03:19,260
but it's something that not a lot of

00:03:15,480 --> 00:03:20,820
users will notice we chose for the

00:03:19,260 --> 00:03:22,650
reason why I think beyond was

00:03:20,820 --> 00:03:26,880
considering it should be really like I

00:03:22,650 --> 00:03:29,400
will you sell that to users so this is a

00:03:26,880 --> 00:03:31,320
correctness thing and without it a whole

00:03:29,400 --> 00:03:33,300
pot of weird stuff happens with

00:03:31,320 --> 00:03:36,269
histograms it's most obvious but it can

00:03:33,300 --> 00:03:37,920
happen everywhere because when I'll just

00:03:36,269 --> 00:03:39,510
what can happen is like let's say you've

00:03:37,920 --> 00:03:41,700
got a summary into some in the couch and

00:03:39,510 --> 00:03:42,989
you're dividing them you can get one of

00:03:41,700 --> 00:03:44,670
them from one scrape and one from a

00:03:42,989 --> 00:03:46,320
different scrape so you can end up with

00:03:44,670 --> 00:03:48,630
numbers that don't make sense

00:03:46,320 --> 00:03:50,010
now usually resilient to that but per

00:03:48,630 --> 00:03:52,950
medias could do better so the whole

00:03:50,010 --> 00:03:56,340
point is not to see half scrapes or half

00:03:52,950 --> 00:03:58,410
of a rule ingestion so it doesn't matter

00:03:56,340 --> 00:04:05,340
it's that matters and land matters it

00:03:58,410 --> 00:04:14,770
tends to really matter awesome cool any

00:04:05,340 --> 00:04:18,280
more questions around the change cool

00:04:14,770 --> 00:04:21,790
I guess we can move on talking about no

00:04:18,280 --> 00:04:28,180
no Dex Parker no I still want to talk

00:04:21,790 --> 00:04:32,500
also but goo 114 so currently we are

00:04:28,180 --> 00:04:34,480
blocking the the the pull request to use

00:04:32,500 --> 00:04:37,000
Google 115 because there is a strange

00:04:34,480 --> 00:04:38,440
bug and go we'll just stop working with

00:04:37,000 --> 00:04:40,540
some version of the kernels

00:04:38,440 --> 00:04:42,640
unless the user change some you limits

00:04:40,540 --> 00:04:45,790
and I think we want to prevent that

00:04:42,640 --> 00:04:49,480
because they will publicly to lots of

00:04:45,790 --> 00:04:52,570
questions and a lot of user axeknightmon

00:04:49,480 --> 00:04:54,190
so I think we want to see all the good

00:04:52,570 --> 00:04:57,250
project is healing and not and I see

00:04:54,190 --> 00:04:59,680
that also like sto is waiting and that

00:04:57,250 --> 00:05:02,140
change from golang so I guess wait and

00:04:59,680 --> 00:05:09,520
see on that side and we also have a pull

00:05:02,140 --> 00:05:14,680
request blog because of that any

00:05:09,520 --> 00:05:17,650
questions around that yeah do you mind

00:05:14,680 --> 00:05:34,120
Julien to like link some discussion

00:05:17,650 --> 00:05:35,830
around that there was like an issue yeah

00:05:34,120 --> 00:05:44,800
if we don't have any questions I think

00:05:35,830 --> 00:05:50,440
we can go on so I guess Judah and you

00:05:44,800 --> 00:05:51,970
wanna talk about node exporter well me

00:05:50,440 --> 00:06:00,460
or his duck someone from the net

00:05:51,970 --> 00:06:02,590
exporter in the Cole maybe anyway so

00:06:00,460 --> 00:06:06,220
there is a release candidate for the

00:06:02,590 --> 00:06:08,740
node exporter 1.0.0 that's out and the

00:06:06,220 --> 00:06:11,169
big change that might impact all the

00:06:08,740 --> 00:06:15,900
Xbox in the close future is that it

00:06:11,169 --> 00:06:18,490
suppose the TLS end point so basically

00:06:15,900 --> 00:06:20,410
use only the reverse proxy to do TLS

00:06:18,490 --> 00:06:23,470
anymore with that node exporter so I

00:06:20,410 --> 00:06:27,830
encourage everyone to test that and to

00:06:23,470 --> 00:06:39,050
report any bug or any comments to the

00:06:27,830 --> 00:06:43,120
Roper's cool any questions I do have a

00:06:39,050 --> 00:06:46,220
question did we end up implementing

00:06:43,120 --> 00:06:50,540
support for rotating the TLS

00:06:46,220 --> 00:06:52,760
certificates as well so I so now in the

00:06:50,540 --> 00:06:55,640
common we always with the TA

00:06:52,760 --> 00:06:57,050
certificates on these key s so you when

00:06:55,640 --> 00:07:00,140
you change it on this it will be picked

00:06:57,050 --> 00:07:03,410
up automatically so and the question was

00:07:00,140 --> 00:07:05,240
not exporter yes the answer is on every

00:07:03,410 --> 00:07:08,210
TCP connection it will read the certs

00:07:05,240 --> 00:07:11,300
and a specular the same so it's

00:07:08,210 --> 00:07:13,400
completely automatic okay because that's

00:07:11,300 --> 00:07:14,810
the only way that could work because one

00:07:13,400 --> 00:07:16,880
of the things is codes inside no

00:07:14,810 --> 00:07:18,860
exporter we control the node exporter so

00:07:16,880 --> 00:07:20,480
we could hook into a hub but we can't

00:07:18,860 --> 00:07:22,870
presume that about every single thing

00:07:20,480 --> 00:07:32,230
out there so it's completely automatic

00:07:22,870 --> 00:07:32,230
okay thanks cool any more questions

00:07:35,350 --> 00:07:41,910
cool I guess then we can move on Mata

00:07:53,880 --> 00:07:58,990
project we just yesterday know the day

00:07:58,270 --> 00:08:03,040
before it

00:07:58,990 --> 00:08:07,240
it's Wednesday already cut the 0:11

00:08:03,040 --> 00:08:09,850
release and has some improvements so

00:08:07,240 --> 00:08:12,340
first of all we now support down

00:08:09,850 --> 00:08:16,510
sampling for series that's quite a nice

00:08:12,340 --> 00:08:19,600
improvement we also have the store which

00:08:16,510 --> 00:08:22,330
now has the ability to wait for a

00:08:19,600 --> 00:08:24,790
minimum age of a block before it gets

00:08:22,330 --> 00:08:29,290
picked up so that a name is some kind of

00:08:24,790 --> 00:08:33,400
more consistency in terms of in terms of

00:08:29,290 --> 00:08:34,780
rating blocks before like or like to

00:08:33,400 --> 00:08:38,050
mitigate running interventional

00:08:34,780 --> 00:08:40,680
consistencies there and then for the

00:08:38,050 --> 00:08:44,500
receive component which is able to

00:08:40,680 --> 00:08:46,720
receive remote write requests if you

00:08:44,500 --> 00:08:48,910
have data replication replicating the

00:08:46,720 --> 00:08:51,070
data in content to the to the hash

00:08:48,910 --> 00:08:55,950
string that is now using T RPC

00:08:51,070 --> 00:08:55,950
internally that was using HTTP before

00:08:57,660 --> 00:09:05,110
and that just use it internally so

00:09:01,210 --> 00:09:07,060
that's quite nice and then the actual

00:09:05,110 --> 00:09:09,910
highlight of the of the release most

00:09:07,060 --> 00:09:12,970
likely takes experimental binary in the

00:09:09,910 --> 00:09:17,370
next report which we've seen all over

00:09:12,970 --> 00:09:22,000
the board have each improvements in

00:09:17,370 --> 00:09:25,000
memory usage going down and the startup

00:09:22,000 --> 00:09:27,120
duration was also quite improved so the

00:09:25,000 --> 00:09:30,100
store in general which i think is like

00:09:27,120 --> 00:09:32,710
most people out there and that was like

00:09:30,100 --> 00:09:34,750
drastically improved in this release it

00:09:32,710 --> 00:09:37,090
is experimental but you know like go

00:09:34,750 --> 00:09:40,480
ahead and we have enabled this on our

00:09:37,090 --> 00:09:43,540
site and we are running with this like a

00:09:40,480 --> 00:09:45,670
neighborhood all the clusters that I

00:09:43,540 --> 00:09:48,640
have my hands on basically at this point

00:09:45,670 --> 00:09:51,280
so yeah like go

00:09:48,640 --> 00:09:54,580
try it and report if there's anything

00:09:51,280 --> 00:09:57,310
broken with it I don't know wants to go

00:09:54,580 --> 00:09:59,400
into like any more details he said that

00:09:57,310 --> 00:10:02,350
we are already discussed that last time

00:09:59,400 --> 00:10:05,650
might be good to just reiterate quickly

00:10:02,350 --> 00:10:07,780
yeah I mean just you said already all

00:10:05,650 --> 00:10:10,750
the important stuff maybe I will put the

00:10:07,780 --> 00:10:12,880
flag that you need to and put on the

00:10:10,750 --> 00:10:15,070
toaster right

00:10:12,880 --> 00:10:18,400
experimental openable index header and

00:10:15,070 --> 00:10:20,650
like it's fully functional we already

00:10:18,400 --> 00:10:22,750
have one release iteration to fix all

00:10:20,650 --> 00:10:26,260
the bags and and and to have some

00:10:22,750 --> 00:10:27,910
feedback so use it we use really the

00:10:26,260 --> 00:10:30,460
similar mechanism as promy to use is

00:10:27,910 --> 00:10:33,670
using so we are n mapping we get rid of

00:10:30,460 --> 00:10:37,800
of all those index cache Jason so no

00:10:33,670 --> 00:10:40,780
more huge JSON parsing so and we also

00:10:37,800 --> 00:10:42,490
reduce the things that we download from

00:10:40,780 --> 00:10:44,860
buckets so we'd no longer download the

00:10:42,490 --> 00:10:47,170
whole index file that we that's all gate

00:10:44,860 --> 00:10:49,210
we used to do we just don't want the

00:10:47,170 --> 00:10:52,210
beads that we needs and like it's much

00:10:49,210 --> 00:10:56,110
much more performant and on our scope

00:10:52,210 --> 00:10:58,180
right now once we have that fixed we are

00:10:56,110 --> 00:11:00,070
working on the improving of the memory

00:10:58,180 --> 00:11:02,170
consumption and resource consumption and

00:11:00,070 --> 00:11:04,660
latency on the request side because this

00:11:02,170 --> 00:11:06,670
is the base then the baseline of the Cir

00:11:04,660 --> 00:11:09,790
gateway and how it loads the blocks and

00:11:06,670 --> 00:11:11,740
now we are looking heavily and like with

00:11:09,790 --> 00:11:15,790
micro benchmarks end-to-end benchmarks

00:11:11,740 --> 00:11:18,250
in to query latency and and resources so

00:11:15,790 --> 00:11:22,270
we are super excited to have a lots of

00:11:18,250 --> 00:11:24,760
improvements there as well any any

00:11:22,270 --> 00:11:34,870
questions related to the funds release

00:11:24,760 --> 00:11:37,690
itself alright then I see that we have

00:11:34,870 --> 00:11:40,060
some some questions they were already

00:11:37,690 --> 00:11:41,470
posted in the document so if the people

00:11:40,060 --> 00:11:45,220
who wrote them don't want to go ahead

00:11:41,470 --> 00:11:47,800
and and ask these questions also feel

00:11:45,220 --> 00:11:50,350
free to just post them in the neck right

00:11:47,800 --> 00:11:53,500
away um so we have some some time for

00:11:50,350 --> 00:11:56,290
Q&A no so please just go ahead like

00:11:53,500 --> 00:12:01,690
anything Prometheus cortex knows

00:11:56,290 --> 00:12:17,410
whatever it is just go ahead and asking

00:12:01,690 --> 00:12:22,920
I see a couple of questions written down

00:12:17,410 --> 00:12:22,920
by Giuliano if you are wrong to ask them

00:12:31,110 --> 00:12:42,820
anyone has any questions yeah sorry I

00:12:37,990 --> 00:12:45,340
was muted okay so what should we do

00:12:42,820 --> 00:12:46,570
about all the old pull requests and the

00:12:45,340 --> 00:12:49,000
old issues on the Prometheus project

00:12:46,570 --> 00:12:51,520
because there are lots of thing that we

00:12:49,000 --> 00:12:54,460
simply will not merge I don't expect

00:12:51,520 --> 00:12:57,790
that we to merge them and also we have a

00:12:54,460 --> 00:13:00,400
lot of issues that basically we won't

00:12:57,790 --> 00:13:02,460
implement neither so if you look at

00:13:00,400 --> 00:13:05,230
priority maybe on the previous project

00:13:02,460 --> 00:13:06,850
lots of stuff I think won't be

00:13:05,230 --> 00:13:08,350
implemented and we also have lots of

00:13:06,850 --> 00:13:11,230
other issues that will not make it to

00:13:08,350 --> 00:13:19,930
committees itself so what's the plan

00:13:11,230 --> 00:13:22,690
with that I mean the question is like

00:13:19,930 --> 00:13:26,710
probably on case-by-case like why we

00:13:22,690 --> 00:13:29,250
would not implement that or why do you I

00:13:26,710 --> 00:13:31,510
don't we why don't we close the issues

00:13:29,250 --> 00:13:38,470
because maybe you want to implement that

00:13:31,510 --> 00:13:40,720
but we don't have I'm not looking for

00:13:38,470 --> 00:13:42,490
the time related issues but there are

00:13:40,720 --> 00:13:45,430
some stuff that just don't make sense in

00:13:42,490 --> 00:13:47,230
poncharello that are just out of comfort

00:13:45,430 --> 00:13:51,340
committees and that we should just close

00:13:47,230 --> 00:13:53,080
I think if you if I have an example in

00:13:51,340 --> 00:13:55,540
mind we have issues like people that

00:13:53,080 --> 00:13:58,000
want negative offsets and that's

00:13:55,540 --> 00:14:00,100
basically out of scope for now and the

00:13:58,000 --> 00:14:01,630
issue is there is still open and what

00:14:00,100 --> 00:14:04,060
should we do with those kind of pull

00:14:01,630 --> 00:14:05,770
requests and I think that Brian wanted

00:14:04,060 --> 00:14:07,720
to lose a bunch of them but you wanted

00:14:05,770 --> 00:14:10,570
first to discuss that or to make some

00:14:07,720 --> 00:14:13,000
bucks crap or I don't know yeah yeah so

00:14:10,570 --> 00:14:15,560
okay this is myself I would say we

00:14:13,000 --> 00:14:19,879
should convince people or like you know

00:14:15,560 --> 00:14:22,399
explain why we don't really think that

00:14:19,879 --> 00:14:24,220
this is a good fit for prom tears first

00:14:22,399 --> 00:14:27,079
of all like being polite and actually

00:14:24,220 --> 00:14:28,670
convince people and let those people to

00:14:27,079 --> 00:14:30,439
close the issues themselves that would

00:14:28,670 --> 00:14:32,629
be super nice if they will will be

00:14:30,439 --> 00:14:34,910
convinced that there is a other solution

00:14:32,629 --> 00:14:37,069
and workaround like it would be nice if

00:14:34,910 --> 00:14:39,470
we don't block users and we actually

00:14:37,069 --> 00:14:41,360
propose something that works for them

00:14:39,470 --> 00:14:43,870
maybe outside of chrome caves may be a

00:14:41,360 --> 00:14:47,689
tool that will integrate with primitives

00:14:43,870 --> 00:14:49,519
or will be you know essentially there

00:14:47,689 --> 00:14:53,689
has to be some discussions we can't just

00:14:49,519 --> 00:14:55,459
close them the thing is that those

00:14:53,689 --> 00:14:57,230
discussions have all happened and these

00:14:55,459 --> 00:15:00,319
issues are still there there's hundreds

00:14:57,230 --> 00:15:02,990
of them because the problem is that we

00:15:00,319 --> 00:15:04,999
basically the policy of radius team was

00:15:02,990 --> 00:15:09,230
not to bug scrubs for the last two and a

00:15:04,999 --> 00:15:11,689
half years and I'm ready to do another

00:15:09,230 --> 00:15:13,730
poke scrub yes and it's just a matter of

00:15:11,689 --> 00:15:16,100
carrying it down there is job stuff

00:15:13,730 --> 00:15:17,629
which might happen and it's just unclear

00:15:16,100 --> 00:15:19,309
and there's other stuff that you know

00:15:17,629 --> 00:15:20,509
just should be closed because the

00:15:19,309 --> 00:15:22,579
discussion and the authoring of

00:15:20,509 --> 00:15:25,009
suggestions have already made yeah

00:15:22,579 --> 00:15:26,930
amazing yeah I would do that but also we

00:15:25,009 --> 00:15:29,360
need more my diners that means right if

00:15:26,930 --> 00:15:32,089
there are many bugs well not necessarily

00:15:29,360 --> 00:15:34,579
like most of these are is only needs

00:15:32,089 --> 00:15:37,490
more maintainer x' is that our policy a

00:15:34,579 --> 00:15:39,559
recent policy change to both scrubs to

00:15:37,490 --> 00:15:41,660
happen again needs to actually go ahead

00:15:39,559 --> 00:15:43,250
but that's more a matter for a committee

00:15:41,660 --> 00:15:51,709
a stream itself to discuss rather than

00:15:43,250 --> 00:15:54,079
in this particular forum cool does

00:15:51,709 --> 00:16:03,740
anyone have any questions around that

00:15:54,079 --> 00:16:06,529
like what do community would prefer can

00:16:03,740 --> 00:16:09,069
you repeat please sorry

00:16:06,529 --> 00:16:13,370
does anyone have any questions around

00:16:09,069 --> 00:16:16,329
basically closing out PRS and what would

00:16:13,370 --> 00:16:16,329
community prefer

00:16:20,510 --> 00:16:26,800
don't have any questions we can move on

00:16:24,770 --> 00:16:30,290
Julian you had another question I think

00:16:26,800 --> 00:16:35,240
yes we have now two or three books that

00:16:30,290 --> 00:16:39,590
a to prevent compaction prevent or

00:16:35,240 --> 00:16:41,450
prevent the world to be flushed so my

00:16:39,590 --> 00:16:44,900
question would be what should we do with

00:16:41,450 --> 00:16:47,240
those should we I think that first we

00:16:44,900 --> 00:16:49,280
should kind of make a document well

00:16:47,240 --> 00:16:52,010
people understanding what's going on and

00:16:49,280 --> 00:16:53,930
tell them maybe not to delete their wall

00:16:52,010 --> 00:16:56,180
should we have a place so that they can

00:16:53,930 --> 00:16:58,340
upload the files to the Prometheus team

00:16:56,180 --> 00:17:00,470
so that we can look at what they have in

00:16:58,340 --> 00:17:02,690
their TS DB like maybe a Google Drive or

00:17:00,470 --> 00:17:04,250
something like that and then also the

00:17:02,690 --> 00:17:06,650
question is what should we do is that

00:17:04,250 --> 00:17:08,420
should we implement some kind of repair

00:17:06,650 --> 00:17:10,850
inside from a tree so should be extended

00:17:08,420 --> 00:17:13,190
TS DB to to kind of try to detect those

00:17:10,850 --> 00:17:14,480
cases so that if someone hands to an

00:17:13,190 --> 00:17:17,440
issue they can run some kind of

00:17:14,480 --> 00:17:17,440
diagnostic tool

00:17:23,130 --> 00:17:28,410
I think I would generally be in favor of

00:17:26,120 --> 00:17:33,510
rather implementing something like that

00:17:28,410 --> 00:17:35,070
into TS DB repair because ultimately we

00:17:33,510 --> 00:17:36,690
would probably be dragging this along

00:17:35,070 --> 00:17:38,370
for a really long time and Prometheus

00:17:36,690 --> 00:17:40,590
itself and if it's in the repair we can

00:17:38,370 --> 00:17:43,320
eventually remove it and just say look

00:17:40,590 --> 00:17:46,400
you can go back and use this repair tool

00:17:43,320 --> 00:17:51,630
from this version to fix it

00:17:46,400 --> 00:17:53,610
yeah basically when I think about two

00:17:51,630 --> 00:17:58,260
examples there is one where people

00:17:53,610 --> 00:18:02,130
ingest value series without any labels

00:17:58,260 --> 00:18:03,810
at all like empty label lists since the

00:18:02,130 --> 00:18:05,250
next phase it will not be possible to do

00:18:03,810 --> 00:18:07,140
that anymore but people have done that

00:18:05,250 --> 00:18:09,360
in the past with relabeling and the

00:18:07,140 --> 00:18:12,150
other issue is when you have duplicate

00:18:09,360 --> 00:18:13,800
labels in the same series and that's

00:18:12,150 --> 00:18:16,020
that's something we can't really fix

00:18:13,800 --> 00:18:17,550
right because you don't know which one

00:18:16,020 --> 00:18:19,980
of the rivers is correct so that would

00:18:17,550 --> 00:18:22,350
be me ignoring those series I don't know

00:18:19,980 --> 00:18:24,600
I don't know what you think about that

00:18:22,350 --> 00:18:26,610
but that's quite about situations that's

00:18:24,600 --> 00:18:29,580
happened in the past it's not possible

00:18:26,610 --> 00:18:31,440
with the new releases but it append and

00:18:29,580 --> 00:18:34,650
we have reports of users that's run into

00:18:31,440 --> 00:18:37,470
that so at the end of the day we're in

00:18:34,650 --> 00:18:39,900
sufficient validation and a user managed

00:18:37,470 --> 00:18:42,240
to ingest Fattal that means the T STP is

00:18:39,900 --> 00:18:44,700
now corrupt there is no fixing it

00:18:42,240 --> 00:18:46,200
because the data is bad like if someone

00:18:44,700 --> 00:18:48,810
removed all the labels that just means

00:18:46,200 --> 00:18:49,980
they overrode everything possibly like

00:18:48,810 --> 00:18:52,050
the only action we can take

00:18:49,980 --> 00:18:54,090
is to troll wait the entire block or the

00:18:52,050 --> 00:18:57,540
showing in car well because anything

00:18:54,090 --> 00:19:00,660
else is just guesswork yeah I mean I

00:18:57,540 --> 00:19:01,620
agree however there are still solutions

00:19:00,660 --> 00:19:03,540
to mitigate that

00:19:01,620 --> 00:19:05,790
now it should might be ensure that me

00:19:03,540 --> 00:19:08,190
never like it from huge job to do

00:19:05,790 --> 00:19:10,410
there should be tooling for that I'm not

00:19:08,190 --> 00:19:12,750
sure if or I will repair well maybe

00:19:10,410 --> 00:19:14,600
repair blocks because to repair wall you

00:19:12,750 --> 00:19:17,370
have like two hours and we need to hurry

00:19:14,600 --> 00:19:19,740
and do you know kind of Cross primitives

00:19:17,370 --> 00:19:21,540
and so on that's why we internals we

00:19:19,740 --> 00:19:22,410
have like different approach we have a

00:19:21,540 --> 00:19:24,260
verifier

00:19:22,410 --> 00:19:27,690
which is kind of teased a bit tool which

00:19:24,260 --> 00:19:31,020
refers the blocks however it refers that

00:19:27,690 --> 00:19:32,970
in a kind of white box fashion so you

00:19:31,020 --> 00:19:34,470
need to put the exact issue that you're

00:19:32,970 --> 00:19:36,090
having and then there are some

00:19:34,470 --> 00:19:38,669
mitigations right so

00:19:36,090 --> 00:19:41,250
we're not randomly improve that block

00:19:38,669 --> 00:19:44,130
for a random any issue that can happen

00:19:41,250 --> 00:19:47,340
because we are not sure if we are not

00:19:44,130 --> 00:19:49,049
you know kind of deleting your stuff but

00:19:47,340 --> 00:19:51,299
however if you know that you are having

00:19:49,049 --> 00:19:54,360
exactly this problem that you have a

00:19:51,299 --> 00:19:56,880
duplicated series and you we named this

00:19:54,360 --> 00:19:59,279
problem as something some configuration

00:19:56,880 --> 00:20:01,770
you know flag for this our our repair

00:19:59,279 --> 00:20:03,059
job and then you have some mitigations

00:20:01,770 --> 00:20:05,100
that you actually want this particular

00:20:03,059 --> 00:20:07,919
series because we need input user to do

00:20:05,100 --> 00:20:09,630
that then such tool can be super

00:20:07,919 --> 00:20:12,299
powerful and I think if we would have

00:20:09,630 --> 00:20:14,880
the same flow for white box to be

00:20:12,299 --> 00:20:17,010
pairing in TCB's it is a be tool and we

00:20:14,880 --> 00:20:20,010
can actually provide something that

00:20:17,010 --> 00:20:21,720
works well we all use TCP block so it

00:20:20,010 --> 00:20:24,299
should be the same tool to be honest I

00:20:21,720 --> 00:20:26,820
would say this is super powerful and

00:20:24,299 --> 00:20:28,710
high school help in your case well yeah

00:20:26,820 --> 00:20:30,480
I think a lot of these cases people just

00:20:28,710 --> 00:20:33,090
want their data based their Prometheus

00:20:30,480 --> 00:20:34,860
to work again and it turns out the

00:20:33,090 --> 00:20:36,870
basically once bad data like this gets

00:20:34,860 --> 00:20:38,789
in the block is basically for fish like

00:20:36,870 --> 00:20:41,789
you might be able to fix it up might be

00:20:38,789 --> 00:20:44,039
but that's going to be a lot of work yes

00:20:41,789 --> 00:20:46,620
but we will do that work the same in

00:20:44,039 --> 00:20:49,260
Janus if you want to retain some kind of

00:20:46,620 --> 00:20:50,760
series we need to rewrite stuff yeah and

00:20:49,260 --> 00:20:52,409
that's that's because we probably you

00:20:50,760 --> 00:20:54,330
are ok with but it should be a user

00:20:52,409 --> 00:20:56,520
choice yes and also there are some

00:20:54,330 --> 00:20:58,470
things that you cannot fix yeah yeah

00:20:56,520 --> 00:21:00,870
this is my point these are all things we

00:20:58,470 --> 00:21:02,520
cannot fix like the block is corrupt but

00:21:00,870 --> 00:21:05,520
it's corrupt semantically rather than

00:21:02,520 --> 00:21:06,929
syntactically yeah but at least the

00:21:05,520 --> 00:21:10,950
least the cases that we've just

00:21:06,929 --> 00:21:12,960
discussed we can sure the the series

00:21:10,950 --> 00:21:15,929
that are affected are definitely

00:21:12,960 --> 00:21:20,250
completely broken and there's arbitrary

00:21:15,929 --> 00:21:22,919
decisions about the data itself so but

00:21:20,250 --> 00:21:25,770
couldn't we just recommend to only

00:21:22,919 --> 00:21:28,860
delete those series so the thing is one

00:21:25,770 --> 00:21:31,110
of those is that you don't have partial

00:21:28,860 --> 00:21:33,299
scrapes because if you start arbitrarily

00:21:31,110 --> 00:21:36,090
deleting random time series you can no

00:21:33,299 --> 00:21:37,649
longer reason about the data like it

00:21:36,090 --> 00:21:39,330
well you can cure any reason but not

00:21:37,649 --> 00:21:40,830
practically reason so that's reason we

00:21:39,330 --> 00:21:42,929
never have partial scrapes so if you

00:21:40,830 --> 00:21:45,750
just move one or two series you might

00:21:42,929 --> 00:21:48,510
break other stuff so it like you

00:21:45,750 --> 00:21:50,590
basically have to fix it properly or to

00:21:48,510 --> 00:21:53,150
meet the block

00:21:50,590 --> 00:21:55,400
so the two cases that we have with

00:21:53,150 --> 00:21:58,280
people with double labor names is they

00:21:55,400 --> 00:22:02,050
have the same values also so we could

00:21:58,280 --> 00:22:04,010
just talk the duplicate duplicate them

00:22:02,050 --> 00:22:06,920
we should also point out that was a

00:22:04,010 --> 00:22:09,500
single user so because it's a single

00:22:06,920 --> 00:22:12,350
user with well initially it appeared to

00:22:09,500 --> 00:22:14,660
be a single user so then you know doing

00:22:12,350 --> 00:22:16,640
is on another basis is fine it appears

00:22:14,660 --> 00:22:18,110
mez else might also have done this which

00:22:16,640 --> 00:22:20,860
is more of a problem because that's a

00:22:18,110 --> 00:22:20,860
common piece of software

00:22:22,850 --> 00:22:28,160
yes but on the other hand I have not no

00:22:26,030 --> 00:22:29,810
feedback from the missus team and it

00:22:28,160 --> 00:22:34,280
doesn't seem that - Domino's users

00:22:29,810 --> 00:22:36,080
complain about that here but we'll have

00:22:34,280 --> 00:22:38,330
to see because like if it turns out my

00:22:36,080 --> 00:22:39,860
sauce was doing producing this bad data

00:22:38,330 --> 00:22:41,840
that's something we need to actually a

00:22:39,860 --> 00:22:44,350
proper solution to but if it was only

00:22:41,840 --> 00:22:48,050
the one user who had a proxy that was

00:22:44,350 --> 00:22:49,970
producing and not good at pushed and you

00:22:48,050 --> 00:22:51,230
know we can not implements parties we

00:22:49,970 --> 00:22:57,340
can get away with not implementing

00:22:51,230 --> 00:22:57,340
something in fermius okay

00:23:02,370 --> 00:23:10,380
cool does anyone have any questions

00:23:06,890 --> 00:23:18,179
around that or just general questions to

00:23:10,380 --> 00:23:29,669
Prometheus Erica system if not I think

00:23:18,179 --> 00:23:33,659
we can end this meeting we will see you

00:23:29,669 --> 00:23:36,750
in exactly one month this time around at

00:23:33,659 --> 00:23:41,070
5:00 p.m. you to see where this was at 9

00:23:36,750 --> 00:23:43,169
a.m. UTC so hope to see you see you in a

00:23:41,070 --> 00:23:45,630
month and please please share this

00:23:43,169 --> 00:23:47,850
meeting to everyone else and encourage

00:23:45,630 --> 00:23:49,770
people to ask questions here you know

00:23:47,850 --> 00:23:52,919
sound maintenance of computers and other

00:23:49,770 --> 00:24:02,090
projects are here so please do use this

00:23:52,919 --> 00:24:02,090

YouTube URL: https://www.youtube.com/watch?v=G7DPPxaAcPc


