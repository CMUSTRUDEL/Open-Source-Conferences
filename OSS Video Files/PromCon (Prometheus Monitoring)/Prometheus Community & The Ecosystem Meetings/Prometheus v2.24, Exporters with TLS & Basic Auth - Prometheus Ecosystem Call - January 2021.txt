Title: Prometheus v2.24, Exporters with TLS & Basic Auth - Prometheus Ecosystem Call - January 2021
Publication date: 2021-03-03
Playlist: Prometheus Community & The Ecosystem Meetings
Description: 
	In this Prometheus Ecosystem Call we talked about:

Prometheus v2.24 that comes with backfilling.
More exporters starting to roll out with TLS & Basic Auth.
Captions: 
	00:00:00,080 --> 00:00:07,120
so uh welcome to this prometicum article

00:00:03,520 --> 00:00:09,519
uh this meeting is recorded and

00:00:07,120 --> 00:00:10,880
it is subject to the cncf code of

00:00:09,519 --> 00:00:13,679
conduct

00:00:10,880 --> 00:00:16,400
so please follow the rules and i think

00:00:13,679 --> 00:00:19,279
that mathias now can actually take over

00:00:16,400 --> 00:00:19,279
welcome mathias

00:00:19,760 --> 00:00:22,480
i have seen you

00:00:22,880 --> 00:00:27,519
yeah so sorry everybody uh i thought it

00:00:25,359 --> 00:00:29,760
was in an hour for some reason i looked

00:00:27,519 --> 00:00:30,800
at the calendar and it said 11 yesterday

00:00:29,760 --> 00:00:33,040
i don't know what happened

00:00:30,800 --> 00:00:33,840
so i rushed here started my machine yeah

00:00:33,040 --> 00:00:36,559
so

00:00:33,840 --> 00:00:37,520
um prometheus community meeting first of

00:00:36,559 --> 00:00:40,719
00:00:37,520 --> 00:00:41,040
um and i think julian said everything so

00:00:40,719 --> 00:00:44,480
far

00:00:41,040 --> 00:00:46,480
cncf code of connect so um

00:00:44,480 --> 00:00:47,840
either bjorn or julian you want to take

00:00:46,480 --> 00:00:51,280
take it away with the

00:00:47,840 --> 00:00:54,800
updates of prometheus itself

00:00:51,280 --> 00:00:56,000
yes so today i think that today bjorn

00:00:54,800 --> 00:00:59,840
will release the

00:00:56,000 --> 00:01:01,039
comedic 2.24. reserve formatters which

00:00:59,840 --> 00:01:03,440
contains

00:01:01,039 --> 00:01:05,600
multiple bug fixes and enhancements and

00:01:03,440 --> 00:01:08,240
i want to highlight two of them

00:01:05,600 --> 00:01:10,240
the first one is backfilling which has

00:01:08,240 --> 00:01:12,530
been contributed by

00:01:10,240 --> 00:01:15,200
some mentees from the

00:01:12,530 --> 00:01:18,880
[Music]

00:01:15,200 --> 00:01:21,280
mentorship program so basically

00:01:18,880 --> 00:01:25,119
it enables you to create tsdb blocks

00:01:21,280 --> 00:01:25,119
based on open metrics files

00:01:25,600 --> 00:01:30,159
which then can be read by uh well by a

00:01:28,080 --> 00:01:32,720
promise server

00:01:30,159 --> 00:01:35,119
and the second feature is uh tls and

00:01:32,720 --> 00:01:37,119
music authentication so if you want

00:01:35,119 --> 00:01:40,240
to control who can get access to your

00:01:37,119 --> 00:01:42,159
community server or to encrypt the data

00:01:40,240 --> 00:01:44,000
when you query your quantity server you

00:01:42,159 --> 00:01:46,079
can now do that natively you don't need

00:01:44,000 --> 00:01:48,320
a reverse proxy

00:01:46,079 --> 00:01:50,640
anymore for that we've introduced a new

00:01:48,320 --> 00:01:54,000
configuration file

00:01:50,640 --> 00:01:56,799
and we support tls client certificate

00:01:54,000 --> 00:01:58,479
authentication music authentication

00:01:56,799 --> 00:02:00,560
because it's a security feature

00:01:58,479 --> 00:02:02,159
and that kind of thing kind of changes

00:02:00,560 --> 00:02:03,520
all the time and the best practices are

00:02:02,159 --> 00:02:06,640
evolving this is marked as

00:02:03,520 --> 00:02:08,399
experimental this is the same mechanism

00:02:06,640 --> 00:02:09,759
that's used in the node exporter and

00:02:08,399 --> 00:02:11,760
that is being rolled out into the

00:02:09,759 --> 00:02:14,319
exporters and we are still working on

00:02:11,760 --> 00:02:16,160
some documentation changes in the

00:02:14,319 --> 00:02:19,360
frequently asked questions and the point

00:02:16,160 --> 00:02:19,360
is website about this

00:02:20,319 --> 00:02:23,840
that was for the first point

00:02:27,599 --> 00:02:34,239
okay awesome um

00:02:31,040 --> 00:02:37,040
i guess second point is yours as well

00:02:34,239 --> 00:02:38,640
yes the second point is that that tlsn

00:02:37,040 --> 00:02:40,319
basic authentication which was

00:02:38,640 --> 00:02:42,160
introduced in the node exporter last

00:02:40,319 --> 00:02:46,480
week is now being hauled out

00:02:42,160 --> 00:02:49,680
to the other exporters and

00:02:46,480 --> 00:02:51,440
the uh the other official binary so

00:02:49,680 --> 00:02:52,959
i have opened requests for the push

00:02:51,440 --> 00:02:55,519
gateway the blackbox exporter

00:02:52,959 --> 00:02:57,680
i i will do one or two pull requests

00:02:55,519 --> 00:03:00,159
today in the coming days

00:02:57,680 --> 00:03:01,280
to make sure that all our repositories

00:03:00,159 --> 00:03:04,080
will contain

00:03:01,280 --> 00:03:06,239
those changes and we also see that

00:03:04,080 --> 00:03:08,720
unofficial exporters are already

00:03:06,239 --> 00:03:10,319
using uh that like the windows exporter

00:03:08,720 --> 00:03:12,159
support request open

00:03:10,319 --> 00:03:14,959
and i think it has already been merged

00:03:12,159 --> 00:03:17,840
in the json exporter so

00:03:14,959 --> 00:03:20,879
all of that is coming in the ecosystem

00:03:17,840 --> 00:03:20,879
quite soon hopefully

00:03:23,760 --> 00:03:28,640
very cool stuff um right if you have

00:03:26,879 --> 00:03:29,599
questions put them in the dock or write

00:03:28,640 --> 00:03:34,159
them in the chat

00:03:29,599 --> 00:03:35,920
um and then let's continue um

00:03:34,159 --> 00:03:37,920
i think that was it for prometheus

00:03:35,920 --> 00:03:40,720
itself but we have a couple of things

00:03:37,920 --> 00:03:40,720
for cortex

00:03:40,799 --> 00:03:44,000
yeah i can speak about cortex hi

00:03:42,799 --> 00:03:48,159
everyone

00:03:44,000 --> 00:03:50,959
so last week we have released cortex 1.6

00:03:48,159 --> 00:03:52,480
with some with a lot of changes and bug

00:03:50,959 --> 00:03:54,959
fixes and enhancements

00:03:52,480 --> 00:03:56,560
some highlights are we have a new query

00:03:54,959 --> 00:03:58,799
scheduler component

00:03:56,560 --> 00:04:00,239
which allows you to actually scale in

00:03:58,799 --> 00:04:02,400
the query front-end

00:04:00,239 --> 00:04:04,400
because it moves the queue out of the

00:04:02,400 --> 00:04:06,959
front-end to this scheduler

00:04:04,400 --> 00:04:08,400
and there was a problem previously where

00:04:06,959 --> 00:04:10,080
having too many front-ends would

00:04:08,400 --> 00:04:11,200
introduce too many cues and then the

00:04:10,080 --> 00:04:14,959
couriers would have

00:04:11,200 --> 00:04:18,160
troubles using all of them we have

00:04:14,959 --> 00:04:21,280
support for a zone ever

00:04:18,160 --> 00:04:23,120
queried or queries which means that if

00:04:21,280 --> 00:04:25,840
you are using ingestor with

00:04:23,120 --> 00:04:26,840
in multiple zones and one zone is down

00:04:25,840 --> 00:04:29,840
the query

00:04:26,840 --> 00:04:34,080
query queries will still work

00:04:29,840 --> 00:04:37,040
now if you use this

00:04:34,080 --> 00:04:38,720
uh goldham has introduced the support

00:04:37,040 --> 00:04:41,440
for querying store for

00:04:38,720 --> 00:04:42,479
label names and label values and series

00:04:41,440 --> 00:04:44,479
apis

00:04:42,479 --> 00:04:46,639
previously this has only worked with the

00:04:44,479 --> 00:04:47,040
recently industry data now it works with

00:04:46,639 --> 00:04:50,960
the

00:04:47,040 --> 00:04:53,919
data on the long term storage as well

00:04:50,960 --> 00:04:56,080
uh we also have ability to keep the

00:04:53,919 --> 00:04:57,919
ingested this restarting in the ring

00:04:56,080 --> 00:05:00,240
which avoids some spillover of the

00:04:57,919 --> 00:05:03,280
samples to more injustice

00:05:00,240 --> 00:05:04,479
this helps to reduce the memory usage on

00:05:03,280 --> 00:05:07,919
the injustice

00:05:04,479 --> 00:05:08,320
during the rollouts and we have of

00:05:07,919 --> 00:05:10,880
course

00:05:08,320 --> 00:05:14,080
plenty of bug fixes and optimizations

00:05:10,880 --> 00:05:16,880
and in the next cortex 1.7

00:05:14,080 --> 00:05:18,320
release which is planned for late late

00:05:16,880 --> 00:05:20,720
january

00:05:18,320 --> 00:05:22,800
we already have merged support for

00:05:20,720 --> 00:05:26,479
multi-tenant querying

00:05:22,800 --> 00:05:28,880
which is a very uh or highly requested

00:05:26,479 --> 00:05:28,880
feature

00:05:29,600 --> 00:05:32,880
macro is working on something called

00:05:31,840 --> 00:05:35,759
bucket index

00:05:32,880 --> 00:05:37,680
which will reduce the storage api calls

00:05:35,759 --> 00:05:40,400
when using the box engine

00:05:37,680 --> 00:05:42,000
and we have of course a lot of bug fixes

00:05:40,400 --> 00:05:43,199
enhancements for example in the member

00:05:42,000 --> 00:05:45,840
list

00:05:43,199 --> 00:05:46,479
implementation we have fixed a couple of

00:05:45,840 --> 00:05:50,800
bucks and

00:05:46,479 --> 00:05:53,840
added some troubleshooting of pages

00:05:50,800 --> 00:05:53,840
that's it

00:05:54,960 --> 00:06:01,360
very cool stuff um nice yeah so

00:05:58,720 --> 00:06:02,080
questions put them in the dock again or

00:06:01,360 --> 00:06:04,479
in the chat

00:06:02,080 --> 00:06:05,120
and let's move on i think probably has

00:06:04,479 --> 00:06:08,880
some

00:06:05,120 --> 00:06:10,960
updates yeah so on the prometheus

00:06:08,880 --> 00:06:13,120
operator side of things we released

00:06:10,960 --> 00:06:15,360
zero forty four zero and immediately

00:06:13,120 --> 00:06:18,880
after that zero four two four one

00:06:15,360 --> 00:06:21,759
uh we added um support for all receivers

00:06:18,880 --> 00:06:23,039
in alert manager config crd so which

00:06:21,759 --> 00:06:26,160
which is the

00:06:23,039 --> 00:06:28,160
latest crd that we added and

00:06:26,160 --> 00:06:29,280
we charging support for prometheus

00:06:28,160 --> 00:06:33,120
cluster finally

00:06:29,280 --> 00:06:35,840
landed in prometheus operator so we are

00:06:33,120 --> 00:06:36,479
we want some of you to make test it plus

00:06:35,840 --> 00:06:39,680
of

00:06:36,479 --> 00:06:43,199
plus a lot of our bug fixes and

00:06:39,680 --> 00:06:45,919
smaller features landed in that release

00:06:43,199 --> 00:06:47,280
and on the other side of cube prometheus

00:06:45,919 --> 00:06:50,240
this time we are starting

00:06:47,280 --> 00:06:52,880
a complete refactor of the code base and

00:06:50,240 --> 00:06:54,319
we advise to use release07 branch

00:06:52,880 --> 00:06:59,360
instead of master

00:06:54,319 --> 00:06:59,360
because master can be broken for some

00:07:00,840 --> 00:07:03,840
time

00:07:04,240 --> 00:07:09,440
very cool as well um can you give a

00:07:07,120 --> 00:07:10,960
quick detail what kind of like the

00:07:09,440 --> 00:07:13,680
breaking changes and cube prometheus

00:07:10,960 --> 00:07:17,120
will be currently unknown

00:07:13,680 --> 00:07:19,680
um just i literally just started

00:07:17,120 --> 00:07:20,479
doing prs yesterday so there might be a

00:07:19,680 --> 00:07:23,199
lot of changes

00:07:20,479 --> 00:07:25,759
and we are not sure if um something will

00:07:23,199 --> 00:07:30,000
be breaking or not

00:07:25,759 --> 00:07:32,720
i see okay um

00:07:30,000 --> 00:07:34,400
yeah i think that's pretty much it in

00:07:32,720 --> 00:07:37,039
terms of what's on the agenda

00:07:34,400 --> 00:07:37,759
um is there anything as people want to

00:07:37,039 --> 00:07:41,280
discuss

00:07:37,759 --> 00:07:44,080
anything i don't see anything in q a or

00:07:41,280 --> 00:07:46,639
chat or anything like that so

00:07:44,080 --> 00:07:46,639
feel free

00:07:56,479 --> 00:08:01,599
okay i guess yeah

00:07:59,919 --> 00:08:03,360
i think that you are still looking for

00:08:01,599 --> 00:08:04,639
someone to help you and name those

00:08:03,360 --> 00:08:07,840
meetings

00:08:04,639 --> 00:08:11,039
yeah yeah it's my first day back uh so

00:08:07,840 --> 00:08:13,919
i'm i'm gonna be um

00:08:11,039 --> 00:08:15,840
sending out some emails and yeah like

00:08:13,919 --> 00:08:20,240
for the next meeting hopefully we

00:08:15,840 --> 00:08:22,800
will have a decision um so yeah

00:08:20,240 --> 00:08:22,800
definitely

00:08:24,160 --> 00:08:30,000
and peter has a question about

00:08:27,440 --> 00:08:32,159
the latest thanos news if there are and

00:08:30,000 --> 00:08:34,800
there are any so maybe

00:08:32,159 --> 00:08:35,519
i don't know if frederick knows about

00:08:34,800 --> 00:08:38,640
that or

00:08:35,519 --> 00:08:40,719
someone else in the call

00:08:38,640 --> 00:08:42,560
i think there was wasn't that much

00:08:40,719 --> 00:08:45,839
activity during the holidays

00:08:42,560 --> 00:08:47,600
so um i think it's all just kind of like

00:08:45,839 --> 00:08:50,560
planning ahead and

00:08:47,600 --> 00:08:52,839
um kind of like thinking about what 2021

00:08:50,560 --> 00:08:55,519
will hold for thanos so far

00:08:52,839 --> 00:08:56,880
so i think basic is working on a couple

00:08:55,519 --> 00:08:59,120
of interesting things

00:08:56,880 --> 00:09:00,399
um he's looking into nothing that's

00:08:59,120 --> 00:09:03,279
finished yet but

00:09:00,399 --> 00:09:04,320
something interesting that's uh he's

00:09:03,279 --> 00:09:07,519
trying out is

00:09:04,320 --> 00:09:10,080
um kind of inspired by some of the

00:09:07,519 --> 00:09:12,880
things that he read in the

00:09:10,080 --> 00:09:14,320
monarch paper that google google

00:09:12,880 --> 00:09:17,279
published which is like

00:09:14,320 --> 00:09:18,160
pushing down queries as as much as

00:09:17,279 --> 00:09:21,600
possible

00:09:18,160 --> 00:09:26,160
close to the actual storage because

00:09:21,600 --> 00:09:26,160
it ends up being it tends to be that

00:09:27,040 --> 00:09:30,720
transferring a lot of data over the

00:09:28,640 --> 00:09:33,440
network starts to become

00:09:30,720 --> 00:09:35,279
expensive when it's hundreds of

00:09:33,440 --> 00:09:39,279
gigabytes of data

00:09:35,279 --> 00:09:42,080
regularly being query right so having

00:09:39,279 --> 00:09:45,120
as much of the query evaluation as close

00:09:42,080 --> 00:09:46,640
as possible to the data

00:09:45,120 --> 00:09:48,320
is actually really beneficial for

00:09:46,640 --> 00:09:49,839
latency

00:09:48,320 --> 00:09:51,680
of queries and that's kind of something

00:09:49,839 --> 00:09:53,839
that's being explored right now

00:09:51,680 --> 00:09:55,040
um but i think only bartek is the one

00:09:53,839 --> 00:09:56,959
working on this

00:09:55,040 --> 00:09:59,120
uh maybe beignet is working uh helping

00:09:56,959 --> 00:10:00,720
out on it but i'm not 100 sure

00:09:59,120 --> 00:10:02,160
that's kind of what's happening right

00:10:00,720 --> 00:10:06,240
now i don't think we have anything

00:10:02,160 --> 00:10:06,240
big that we've recently released

00:10:08,079 --> 00:10:11,760
cool thing there there has uh there has

00:10:10,959 --> 00:10:15,279
been a bit of work

00:10:11,760 --> 00:10:18,800
on uh thanos storage bucket rewriting

00:10:15,279 --> 00:10:19,839
so the ability to modify existing series

00:10:18,800 --> 00:10:23,120
that are stored in the t

00:10:19,839 --> 00:10:23,120
in the object storage

00:10:24,079 --> 00:10:27,839
yes i think this is pretty cool i think

00:10:26,560 --> 00:10:30,720
it's i think the

00:10:27,839 --> 00:10:33,120
um the initial use case that was

00:10:30,720 --> 00:10:35,680
implemented was deletions i believe

00:10:33,120 --> 00:10:36,560
um and i think we're looking into

00:10:35,680 --> 00:10:40,079
although this is

00:10:36,560 --> 00:10:43,040
uh more difficult um like renaming

00:10:40,079 --> 00:10:44,800
labels this is difficult because it

00:10:43,040 --> 00:10:47,600
essentially reorders

00:10:44,800 --> 00:10:49,040
series right so i'm not sure if there's

00:10:47,600 --> 00:10:51,519
something more efficient but

00:10:49,040 --> 00:10:52,959
um off the top of my head it means

00:10:51,519 --> 00:10:56,399
rewriting the entire block

00:10:52,959 --> 00:10:58,959
right yeah for

00:10:56,399 --> 00:10:59,519
for us at least for the use case that i

00:10:58,959 --> 00:11:02,959
have

00:10:59,519 --> 00:11:05,920
is uh you know i'm

00:11:02,959 --> 00:11:07,519
less worried about efficient because i i

00:11:05,920 --> 00:11:09,839
need to readjust

00:11:07,519 --> 00:11:10,720
labels and series over our entire

00:11:09,839 --> 00:11:14,000
history

00:11:10,720 --> 00:11:17,360
so that we can have uh we can

00:11:14,000 --> 00:11:17,920
so we we have labels that were poorly

00:11:17,360 --> 00:11:20,480
chosen

00:11:17,920 --> 00:11:21,200
and need to be modified so that we can

00:11:20,480 --> 00:11:23,839
um

00:11:21,200 --> 00:11:25,200
we can improve our our infrastructure

00:11:23,839 --> 00:11:26,880
going forward

00:11:25,200 --> 00:11:29,200
because right now we'd have to have

00:11:26,880 --> 00:11:32,000
significantly more complex queries

00:11:29,200 --> 00:11:35,360
in order to to readjust previous

00:11:32,000 --> 00:11:37,680
previously chosen label names

00:11:35,360 --> 00:11:39,360
and yeah it's going to be expensive to

00:11:37,680 --> 00:11:41,120
operate but uh

00:11:39,360 --> 00:11:42,399
in from our use case it's definitely

00:11:41,120 --> 00:11:44,800
worth the uh

00:11:42,399 --> 00:11:45,680
the burning a few cpu cycles and network

00:11:44,800 --> 00:11:48,240
traffic to

00:11:45,680 --> 00:11:50,079
download and rewrite buckets it'll

00:11:48,240 --> 00:11:54,880
hopefully be a one-time thing so

00:11:50,079 --> 00:11:54,880
yeah well you never know

00:11:55,040 --> 00:11:59,600
yeah but yeah that that is definitely uh

00:11:57,279 --> 00:12:03,040
one of uh one pretty exciting thing that

00:11:59,600 --> 00:12:04,160
uh was i think inspired by your use case

00:12:03,040 --> 00:12:08,839
initially ben

00:12:04,160 --> 00:12:11,839
so yeah i think that's it from tana's

00:12:08,839 --> 00:12:11,839
side

00:12:14,000 --> 00:12:19,200
okay i i just want to add uh to remind

00:12:17,360 --> 00:12:22,720
you and i will add the link

00:12:19,200 --> 00:12:25,519
again in the docs that now backtech

00:12:22,720 --> 00:12:26,639
and i have launched well mostly backtech

00:12:25,519 --> 00:12:30,720
an initiative

00:12:26,639 --> 00:12:32,800
on the mondays at 5 00 pm utc

00:12:30,720 --> 00:12:34,639
which is the point is contributor hour

00:12:32,800 --> 00:12:36,839
so if you have a pull request blocked or

00:12:34,639 --> 00:12:39,440
you want to contribute go to prometheus

00:12:36,839 --> 00:12:41,519
then we are there to answer a question

00:12:39,440 --> 00:12:44,320
to discuss with you and maybe

00:12:41,519 --> 00:12:52,160
unblock you so feel free to join i will

00:12:44,320 --> 00:12:54,720
put the link in the document as well

00:12:52,160 --> 00:12:56,480
yeah awesome i've seen some some really

00:12:54,720 --> 00:12:58,639
good discussions there to unblock people

00:12:56,480 --> 00:13:06,320
right

00:12:58,639 --> 00:13:09,920
okay anything else

00:13:06,320 --> 00:13:12,240
all right then yeah let's give

00:13:09,920 --> 00:13:13,760
everybody some time back i'm sorry for

00:13:12,240 --> 00:13:17,440
the confusion i think it just

00:13:13,760 --> 00:13:20,480
uh goes to tell the it goes to show that

00:13:17,440 --> 00:13:21,519
we need two people uh making sure this

00:13:20,480 --> 00:13:24,560
works

00:13:21,519 --> 00:13:25,279
um so i will take care of that and i

00:13:24,560 --> 00:13:28,320
guess

00:13:25,279 --> 00:13:32,839
yeah have a good 2021 and see you

00:13:28,320 --> 00:13:35,839
next month bye

00:13:32,839 --> 00:13:35,839

YouTube URL: https://www.youtube.com/watch?v=oxt4IaCY7-w


