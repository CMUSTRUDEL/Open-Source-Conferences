Title: Prometheus Community & The Ecosystem Meeting 2020-09-02
Publication date: 2020-09-03
Playlist: Prometheus Community & The Ecosystem Meetings
Description: 
	http://bit.ly/prometheus-community-agenda
Captions: 
	00:00:00,080 --> 00:00:04,400
hello everyone i'm your host pablo

00:00:02,159 --> 00:00:07,120
versace and this is prometheus and

00:00:04,400 --> 00:00:08,800
ecosystem community call we follow

00:00:07,120 --> 00:00:10,960
prometheus code of conduct here so

00:00:08,800 --> 00:00:12,639
please be nice to one another

00:00:10,960 --> 00:00:14,559
this is being recorded and will be

00:00:12,639 --> 00:00:16,560
published on youtube

00:00:14,559 --> 00:00:18,800
today we will be giving away prometheus

00:00:16,560 --> 00:00:20,800
fact active participants

00:00:18,800 --> 00:00:22,880
uh so in order to qualify you just need

00:00:20,800 --> 00:00:24,720
to ask a question

00:00:22,880 --> 00:00:26,560
our co-host matthias will help us

00:00:24,720 --> 00:00:27,680
randomly pick a person at the end of the

00:00:26,560 --> 00:00:30,240
meeting

00:00:27,680 --> 00:00:31,439
uh as always we go through questions at

00:00:30,240 --> 00:00:34,160
the end

00:00:31,439 --> 00:00:37,920
uh we have a quite a big agenda today so

00:00:34,160 --> 00:00:37,920
let's start with prometheus

00:00:39,600 --> 00:00:46,399
hello yes so we have a release candidate

00:00:43,440 --> 00:00:49,520
of committees 2.21 which is

00:00:46,399 --> 00:00:51,360
out for a week now um

00:00:49,520 --> 00:00:52,559
we there will be at least a second

00:00:51,360 --> 00:00:56,239
release candidate

00:00:52,559 --> 00:00:59,520
but there is currently a potential

00:00:56,239 --> 00:01:01,359
regression in the in the query time so

00:00:59,520 --> 00:01:02,960
we are still investigating that

00:01:01,359 --> 00:01:04,879
unfortunately i cannot

00:01:02,960 --> 00:01:06,400
i can reproduce it locally and i can

00:01:04,879 --> 00:01:08,080
reproduce it in my production

00:01:06,400 --> 00:01:10,320
environment but

00:01:08,080 --> 00:01:11,520
not in from bench yet i think it may be

00:01:10,320 --> 00:01:14,240
because there aren't

00:01:11,520 --> 00:01:16,560
enough blocks or enough data yet in that

00:01:14,240 --> 00:01:18,159
are loaded

00:01:16,560 --> 00:01:20,400
but that release contains two new

00:01:18,159 --> 00:01:22,640
service discovery so the first one is

00:01:20,400 --> 00:01:25,759
eureka so this was a long

00:01:22,640 --> 00:01:26,159
time request from the community so it's

00:01:25,759 --> 00:01:28,400
a

00:01:26,159 --> 00:01:30,720
request from three years ago and there

00:01:28,400 --> 00:01:31,360
is another club provider etzner which is

00:01:30,720 --> 00:01:34,560
also

00:01:31,360 --> 00:01:36,720
joining the party and also

00:01:34,560 --> 00:01:38,320
in this release we have fixed a bunch of

00:01:36,720 --> 00:01:39,360
features we have added a bunch of

00:01:38,320 --> 00:01:42,799
features and fixes

00:01:39,360 --> 00:01:45,200
in the react ui so the new ui formatives

00:01:42,799 --> 00:01:46,720
and i think it should be pretty close to

00:01:45,200 --> 00:01:50,320
be usable day to day

00:01:46,720 --> 00:01:52,240
uh for all your promises work so you

00:01:50,320 --> 00:01:54,159
should try it now and really

00:01:52,240 --> 00:01:55,759
try to use it a bit more and give us

00:01:54,159 --> 00:01:57,119
more feedback because i think we are

00:01:55,759 --> 00:02:01,360
closer to

00:01:57,119 --> 00:02:03,920
to having it really really nice

00:02:01,360 --> 00:02:05,040
and i think that's it so we have also a

00:02:03,920 --> 00:02:06,719
long list of

00:02:05,040 --> 00:02:08,399
bug fixes in the release some of them

00:02:06,719 --> 00:02:10,640
which were really annoying like

00:02:08,399 --> 00:02:14,400
a prominent switch does not shut down

00:02:10,640 --> 00:02:14,400
when it's killed and that kind of things

00:02:16,160 --> 00:02:22,640
that is awesome thank you for an update

00:02:20,160 --> 00:02:24,959
i think now uh bartek wants to talk

00:02:22,640 --> 00:02:26,959
about car tax and families

00:02:24,959 --> 00:02:28,239
yeah i can i can cover both both

00:02:26,959 --> 00:02:30,480
projects so um

00:02:28,239 --> 00:02:31,599
in on the last kubecon two weeks ago we

00:02:30,480 --> 00:02:35,040
got

00:02:31,599 --> 00:02:37,120
um kind of approved for a next cncf

00:02:35,040 --> 00:02:38,640
stage so you have sandbox incubation and

00:02:37,120 --> 00:02:40,959
graduated projects

00:02:38,640 --> 00:02:42,080
so both thanos and cortex went really in

00:02:40,959 --> 00:02:45,519
the same moment

00:02:42,080 --> 00:02:47,920
into incubation stage so it was

00:02:45,519 --> 00:02:48,800
kind of hard work to get there kind of

00:02:47,920 --> 00:02:51,519
long process

00:02:48,800 --> 00:02:53,760
but we are here and what it gives us is

00:02:51,519 --> 00:02:56,000
essentially like more visibility

00:02:53,760 --> 00:02:57,200
like we have just more time on kubecon

00:02:56,000 --> 00:03:00,480
nowadays um

00:02:57,200 --> 00:03:03,360
and also you can buy swag from shop

00:03:00,480 --> 00:03:05,360
from both cortex and tunnels and we'll

00:03:03,360 --> 00:03:06,720
be just more supported by the cncf so

00:03:05,360 --> 00:03:09,360
that's that's pretty awesome

00:03:06,720 --> 00:03:11,440
and uh just the moment of this being

00:03:09,360 --> 00:03:12,879
kind of together is also kind of uh

00:03:11,440 --> 00:03:14,560
super nice so

00:03:12,879 --> 00:03:19,840
um yeah i think this is a success for

00:03:14,560 --> 00:03:19,840
the promiscuous ecosystem

00:03:20,720 --> 00:03:27,280
awesome thank you and the

00:03:24,000 --> 00:03:30,319
camel wants to talk about newest thomas

00:03:27,280 --> 00:03:32,000
uh release candidate yeah we have a new

00:03:30,319 --> 00:03:35,519
release candidate

00:03:32,000 --> 00:03:36,400
it is 0.15 and it will be if everything

00:03:35,519 --> 00:03:38,400
goes as

00:03:36,400 --> 00:03:39,920
expected it will be released at the end

00:03:38,400 --> 00:03:42,400
of this week

00:03:39,920 --> 00:03:44,159
we have a couple of nice highlights

00:03:42,400 --> 00:03:46,720
first of all we have a new

00:03:44,159 --> 00:03:48,239
component a query frontend which is

00:03:46,720 --> 00:03:51,280
based on cortex square

00:03:48,239 --> 00:03:52,959
content and now you can just like

00:03:51,280 --> 00:03:55,040
schedule your queries and

00:03:52,959 --> 00:03:56,480
parallelize your queries and cache the

00:03:55,040 --> 00:04:00,080
responses

00:03:56,480 --> 00:04:02,319
uh moreover like we made a loopback

00:04:00,080 --> 00:04:04,560
delta configurable for chromecall

00:04:02,319 --> 00:04:06,319
so you can overwrite the default value

00:04:04,560 --> 00:04:09,200
for query

00:04:06,319 --> 00:04:10,640
and this was a kind of a fix for the

00:04:09,200 --> 00:04:14,239
gaps that we discovered

00:04:10,640 --> 00:04:17,519
depend on the steps that you have

00:04:14,239 --> 00:04:20,160
and also now you can enable server side

00:04:17,519 --> 00:04:23,040
encryption for aws s3

00:04:20,160 --> 00:04:23,520
and we also introduced the an ability to

00:04:23,040 --> 00:04:25,840
limit

00:04:23,520 --> 00:04:27,520
uh the amount of samples that you fetch

00:04:25,840 --> 00:04:30,720
from the time of store

00:04:27,520 --> 00:04:32,880
and this version also has

00:04:30,720 --> 00:04:33,919
all the updates from the latest

00:04:32,880 --> 00:04:36,479
prometheus

00:04:33,919 --> 00:04:37,600
and we have this improv chunk iterator

00:04:36,479 --> 00:04:40,560
improvements

00:04:37,600 --> 00:04:42,160
uh whatnot other than that we have a

00:04:40,560 --> 00:04:45,440
couple of more

00:04:42,160 --> 00:04:47,680
changes about logging but i can't

00:04:45,440 --> 00:04:49,440
i think josh can talk about them and we

00:04:47,680 --> 00:04:53,040
have pretty nice

00:04:49,440 --> 00:04:53,680
ui changes but i don't see prem in the

00:04:53,040 --> 00:04:56,960
meeting

00:04:53,680 --> 00:04:58,479
maybe bartek can talk about them i don't

00:04:56,960 --> 00:05:01,919
know

00:04:58,479 --> 00:05:03,840
i don't think premise is there prem

00:05:01,919 --> 00:05:05,199
speak up if you are there masking as

00:05:03,840 --> 00:05:08,560
someone else but

00:05:05,199 --> 00:05:10,479
i can take it from here so um so yeah

00:05:08,560 --> 00:05:12,479
this is kind of epic like he's a g-suit

00:05:10,479 --> 00:05:15,520
premise just a student and he added

00:05:12,479 --> 00:05:17,600
lots of additional uis and improved um

00:05:15,520 --> 00:05:18,720
existing uis essentially we built kind

00:05:17,600 --> 00:05:22,000
of a react

00:05:18,720 --> 00:05:23,600
app um so all those uis are very usable

00:05:22,000 --> 00:05:26,400
and very easy to extend

00:05:23,600 --> 00:05:28,240
and also very easy to kind of uh

00:05:26,400 --> 00:05:28,960
actually we use certain components for

00:05:28,240 --> 00:05:30,960
react

00:05:28,960 --> 00:05:33,919
promoters ui so now we can also

00:05:30,960 --> 00:05:35,440
backboard our improvements to prompt use

00:05:33,919 --> 00:05:37,759
so what we did we built you know the

00:05:35,440 --> 00:05:40,800
query ui on top of it the

00:05:37,759 --> 00:05:43,919
rules ui that we have on the ruler um

00:05:40,800 --> 00:05:45,120
we also converted the block viewer which

00:05:43,919 --> 00:05:47,440
is kind of super nice

00:05:45,120 --> 00:05:49,840
thing where you want to visualizate what

00:05:47,440 --> 00:05:51,759
are the blocks you have in the storage

00:05:49,840 --> 00:05:53,919
and we want to actually uh kind of

00:05:51,759 --> 00:05:56,000
contribute to back to the pro materials

00:05:53,919 --> 00:05:57,039
as well but the kind of react was was a

00:05:56,000 --> 00:05:59,199
blocker

00:05:57,039 --> 00:06:00,560
uh having to react up so now we have we

00:05:59,199 --> 00:06:02,960
have that ready so

00:06:00,560 --> 00:06:04,240
we should be opening some pr soon so

00:06:02,960 --> 00:06:06,639
that's pretty epic

00:06:04,240 --> 00:06:09,360
and kind of we have also some status

00:06:06,639 --> 00:06:11,360
pages uh like build info on flags on

00:06:09,360 --> 00:06:12,960
most of the components so we'll be

00:06:11,360 --> 00:06:15,120
kind of making sure that every thunders

00:06:12,960 --> 00:06:17,919
component has this ui ready

00:06:15,120 --> 00:06:19,919
um for debugging purposes so and really

00:06:17,919 --> 00:06:20,400
most of it or like all of it was done by

00:06:19,919 --> 00:06:23,520
the

00:06:20,400 --> 00:06:24,720
one person prem which is amazing uh and

00:06:23,520 --> 00:06:27,120
and our mentors

00:06:24,720 --> 00:06:28,720
uh who are mentoring that gideous and

00:06:27,120 --> 00:06:31,120
mentoring him gideous and

00:06:28,720 --> 00:06:31,120
lucas

00:06:32,240 --> 00:06:38,160
awesome and yes do you want to talk

00:06:34,960 --> 00:06:38,160
about logging changes

00:06:40,960 --> 00:06:44,080
i think we can

00:06:44,319 --> 00:06:53,120
okay uh am i audible now

00:06:48,400 --> 00:06:53,120
yep my name is yeah

00:06:55,759 --> 00:07:00,479
for this in which i was participating in

00:06:59,440 --> 00:07:03,840
this project of

00:07:00,479 --> 00:07:03,840
request logging for thanos

00:07:07,280 --> 00:07:10,319
could you maybe try turning off your

00:07:08,880 --> 00:07:13,360
video because we

00:07:10,319 --> 00:07:16,720
like it gets interrupted okay okay

00:07:13,360 --> 00:07:19,520
okay yeah so let me uh like

00:07:16,720 --> 00:07:19,520
restart again

00:07:20,000 --> 00:07:28,840
uh based on uh you know

00:07:24,160 --> 00:07:32,240
uh we have interruptions

00:07:28,840 --> 00:07:33,919
again okay

00:07:32,240 --> 00:07:37,280
it doesn't sound like connection error

00:07:33,919 --> 00:07:37,280
are you sure you're not touching the

00:07:42,840 --> 00:07:45,840
cable

00:07:53,360 --> 00:07:57,120
okay i guess uh once josh figures out

00:07:56,400 --> 00:08:02,160
his

00:07:57,120 --> 00:08:06,879
microphone problems we can go to car tax

00:08:02,160 --> 00:08:09,919
yeah so can you hear me now

00:08:06,879 --> 00:08:11,680
yeah try okay try oh yeah

00:08:09,919 --> 00:08:13,199
okay yeah so give me five minutes i will

00:08:11,680 --> 00:08:15,520
lap it up in that time

00:08:13,199 --> 00:08:16,240
so basically there are a lot of internal

00:08:15,520 --> 00:08:18,639
api

00:08:16,240 --> 00:08:20,960
apis in thanos so basically there are

00:08:18,639 --> 00:08:22,879
two major protocols that we use one is

00:08:20,960 --> 00:08:26,160
http and grpc

00:08:22,879 --> 00:08:28,720
so basically i wrote a request logger

00:08:26,160 --> 00:08:29,280
for logging out all the request calls

00:08:28,720 --> 00:08:33,279
and

00:08:29,280 --> 00:08:36,159
the thanos so i got the http

00:08:33,279 --> 00:08:37,039
call request logging merged in the

00:08:36,159 --> 00:08:39,360
previous

00:08:37,039 --> 00:08:40,399
release candidate for thanos and for the

00:08:39,360 --> 00:08:43,120
grpc

00:08:40,399 --> 00:08:44,080
uh like most of the changes have been

00:08:43,120 --> 00:08:47,680
worked upon

00:08:44,080 --> 00:08:48,480
and uh like it should be merged in few

00:08:47,680 --> 00:08:50,959
days i guess

00:08:48,480 --> 00:08:52,560
so like that was the update for the

00:08:50,959 --> 00:08:56,399
request logging so i guess

00:08:52,560 --> 00:08:58,880
in the next update people should get

00:08:56,399 --> 00:08:59,440
more idea about using request logging in

00:08:58,880 --> 00:09:02,800
thanos

00:08:59,440 --> 00:09:02,800
so that's it from essay

00:09:03,440 --> 00:09:11,200
thank you um yeah and i think

00:09:06,800 --> 00:09:11,200
we can switch to cartex now

00:09:11,680 --> 00:09:16,959
so we have recently released cortex 1.3

00:09:15,200 --> 00:09:19,360
with some updates to the block engine

00:09:16,959 --> 00:09:21,600
for example flashing of the blocks or

00:09:19,360 --> 00:09:23,680
support for the live cluster migration

00:09:21,600 --> 00:09:25,839
between chunks and blocks and back if

00:09:23,680 --> 00:09:28,240
you need

00:09:25,839 --> 00:09:30,080
changes to the ruler now roller is part

00:09:28,240 --> 00:09:32,240
of the single binary

00:09:30,080 --> 00:09:33,920
and it supports locally stored rules for

00:09:32,240 --> 00:09:36,399
example if you want to have them in the

00:09:33,920 --> 00:09:39,440
config map in kubernetes

00:09:36,399 --> 00:09:41,680
uh changes in other manager now

00:09:39,440 --> 00:09:44,480
dialog manager or you can configure

00:09:41,680 --> 00:09:47,120
multiple out manager urls

00:09:44,480 --> 00:09:49,200
uh and the tenant's configuration is

00:09:47,120 --> 00:09:51,040
also persisted in the object store

00:09:49,200 --> 00:09:52,959
and there are many other changes of

00:09:51,040 --> 00:09:55,360
course bug fixes

00:09:52,959 --> 00:09:56,080
in the next release we plan to mark the

00:09:55,360 --> 00:09:58,800
blocks engine

00:09:56,080 --> 00:10:00,800
as the production ready which

00:09:58,800 --> 00:10:02,640
unfortunately means that

00:10:00,800 --> 00:10:04,320
we are going to remove experimental

00:10:02,640 --> 00:10:09,279
prefix from many

00:10:04,320 --> 00:10:12,560
common line options oh so sorry for that

00:10:09,279 --> 00:10:14,720
we have also introduced a

00:10:12,560 --> 00:10:16,959
suite of tools for converting chunks to

00:10:14,720 --> 00:10:19,440
blocks

00:10:16,959 --> 00:10:20,000
we are currently running this in our

00:10:19,440 --> 00:10:24,240
setup

00:10:20,000 --> 00:10:27,360
in our production cluster for converting

00:10:24,240 --> 00:10:30,000
all data to the blocks and so far it

00:10:27,360 --> 00:10:32,320
seems to work pretty well

00:10:30,000 --> 00:10:33,040
and we are also among other things

00:10:32,320 --> 00:10:35,040
working on

00:10:33,040 --> 00:10:38,560
adding shuffle sharding support on the

00:10:35,040 --> 00:10:38,560
reed and the right path

00:10:38,640 --> 00:10:41,600
i think that's it for me

00:10:42,320 --> 00:10:47,279
what is the shuffle sharding so the idea

00:10:46,079 --> 00:10:49,920
is

00:10:47,279 --> 00:10:50,959
well cortex is a multi-tenant system uh

00:10:49,920 --> 00:10:53,040
and we don't want

00:10:50,959 --> 00:10:54,480
all components to handle all users for

00:10:53,040 --> 00:10:57,600
example carriers

00:10:54,480 --> 00:11:00,880
so on the read path

00:10:57,600 --> 00:11:03,120
uh when when the query hits the query

00:11:00,880 --> 00:11:04,880
front end only a subset of carriers will

00:11:03,120 --> 00:11:07,680
be able to handle

00:11:04,880 --> 00:11:09,200
queries for specific user and shuffle

00:11:07,680 --> 00:11:10,720
this is basically sharding part and

00:11:09,200 --> 00:11:12,480
shuffling means that

00:11:10,720 --> 00:11:14,000
it's a different set of carriers for

00:11:12,480 --> 00:11:17,279
different tenants and it's

00:11:14,000 --> 00:11:19,279
randomized to avoid problems with one

00:11:17,279 --> 00:11:21,519
tenant having queries that would kill

00:11:19,279 --> 00:11:24,079
the courier it doesn't affect all the

00:11:21,519 --> 00:11:24,959
all the users or tenants same goes for

00:11:24,079 --> 00:11:29,839
the right path

00:11:24,959 --> 00:11:31,920
where the one tenant isn't

00:11:29,839 --> 00:11:35,200
pushing data to all the investors but

00:11:31,920 --> 00:11:43,360
only a subset of investors

00:11:35,200 --> 00:11:47,120
make sense thanks

00:11:43,360 --> 00:11:50,560
awesome thank you now we have an update

00:11:47,120 --> 00:11:53,680
uh about time skill from if you use from

00:11:50,560 --> 00:11:57,279
i believe matt uh

00:11:53,680 --> 00:12:01,800
yes hi um so

00:11:57,279 --> 00:12:05,600
we've released the beta for the

00:12:01,800 --> 00:12:08,720
0.1 release which is

00:12:05,600 --> 00:12:11,839
obviously where the new kid on the block

00:12:08,720 --> 00:12:16,240
so we actually have not yet had a

00:12:11,839 --> 00:12:20,079
full release uh which is on pre-release

00:12:16,240 --> 00:12:25,040
um so in this release we

00:12:20,079 --> 00:12:29,279
kind of improved the prom ql support and

00:12:25,040 --> 00:12:34,240
also added support

00:12:29,279 --> 00:12:38,560
for more sql functions

00:12:34,240 --> 00:12:42,160
more abilities to analyze the data

00:12:38,560 --> 00:12:44,079
sql um our next release is going to be

00:12:42,160 --> 00:12:47,200
the rc

00:12:44,079 --> 00:12:48,560
so we're pretty much stable at this

00:12:47,200 --> 00:12:52,560
point in terms of

00:12:48,560 --> 00:12:56,160
apis and functionality and i think

00:12:52,560 --> 00:12:59,839
we should have the 0.1

00:12:56,160 --> 00:12:59,839
released in

00:13:00,399 --> 00:13:06,959
in about a month or so um

00:13:04,639 --> 00:13:07,760
so that hundred times here prometheus

00:13:06,959 --> 00:13:11,360
side

00:13:07,760 --> 00:13:12,000
um in terms of time scale observability

00:13:11,360 --> 00:13:15,920
which is

00:13:12,000 --> 00:13:20,480
our kind of suite of home charts

00:13:15,920 --> 00:13:23,519
um to bring up prometheus grafana

00:13:20,480 --> 00:13:27,200
and time scale well together

00:13:23,519 --> 00:13:31,200
um we've also had a release kind of

00:13:27,200 --> 00:13:36,399
uh along with the thomas here prometheus

00:13:31,200 --> 00:13:39,279
released and we've renamed it to tabs

00:13:36,399 --> 00:13:40,079
so that's the new name for that project

00:13:39,279 --> 00:13:43,360
uh we're

00:13:40,079 --> 00:13:48,800
actively looking for people to

00:13:43,360 --> 00:13:52,399
contribute uh more

00:13:48,800 --> 00:13:54,639
tools to integrate into the hum code

00:13:52,399 --> 00:13:56,320
so the idea here is to make it really

00:13:54,639 --> 00:13:59,839
easy for people to bring up

00:13:56,320 --> 00:14:03,040
a full open source observability stack

00:13:59,839 --> 00:14:06,240
and so we're looking for both

00:14:03,040 --> 00:14:09,600
more tools uh to complement

00:14:06,240 --> 00:14:12,560
the suite of tools that we already have

00:14:09,600 --> 00:14:14,720
as well as alternatives so we would love

00:14:12,560 --> 00:14:17,760
to have contributions

00:14:14,720 --> 00:14:21,199
from other long-term storage

00:14:17,760 --> 00:14:25,519
providers to also

00:14:21,199 --> 00:14:28,240
integrate them as alternatives into tubs

00:14:25,519 --> 00:14:30,320
the other thing worth mentioning is that

00:14:28,240 --> 00:14:33,600
over the summer we had

00:14:30,320 --> 00:14:36,800
a intern working on the

00:14:33,600 --> 00:14:39,839
cli version of this tool to

00:14:36,800 --> 00:14:44,399
complement the helm to us

00:14:39,839 --> 00:14:47,440
and i i think it turned out um

00:14:44,399 --> 00:14:50,720
pretty cool and makes a lot of things

00:14:47,440 --> 00:14:53,760
easier in terms of deploying uh

00:14:50,720 --> 00:14:57,360
this whole suite of tools together

00:14:53,760 --> 00:15:00,959
so check it out and they give us

00:14:57,360 --> 00:15:04,000
uh feedback or feedback a good battle

00:15:00,959 --> 00:15:07,839
otherwise is welcome

00:15:04,000 --> 00:15:10,800
cool thank you for your update um

00:15:07,839 --> 00:15:12,000
yeah i think we can move on to questions

00:15:10,800 --> 00:15:13,920
i think peter has

00:15:12,000 --> 00:15:16,320
a question in google doc do you want to

00:15:13,920 --> 00:15:16,320
ask it

00:15:17,360 --> 00:15:20,959
yeah the question is if anyone is using

00:15:19,519 --> 00:15:23,279
elastic as a remote

00:15:20,959 --> 00:15:28,240
storage option for prometheus and if you

00:15:23,279 --> 00:15:28,240
do what is your experience thank you

00:15:35,600 --> 00:15:41,839
anyone nobody uses elastic

00:15:44,880 --> 00:15:50,639
yeah it feels like nobody is a celeste

00:15:46,959 --> 00:15:50,639
excited we can't help you

00:15:51,120 --> 00:15:57,839
no problem thanks anyway

00:15:55,040 --> 00:16:00,240
if anyone from my community or chat

00:15:57,839 --> 00:16:02,320
anybody listening have any ideas around

00:16:00,240 --> 00:16:04,800
that please just chat

00:16:02,320 --> 00:16:06,320
um i think for now let's move on to next

00:16:04,800 --> 00:16:09,600
question is

00:16:06,320 --> 00:16:12,639
uh from julian yes

00:16:09,600 --> 00:16:13,519
so uh on the mailing list so it looks

00:16:12,639 --> 00:16:18,160
like that

00:16:13,519 --> 00:16:21,120
on the e3x6 686 and that kind of

00:16:18,160 --> 00:16:22,000
32-bit architectures because of the

00:16:21,120 --> 00:16:24,880
mapping that

00:16:22,000 --> 00:16:26,480
we have introduced in 2.19 but also the

00:16:24,880 --> 00:16:27,759
mapping that we were already doing

00:16:26,480 --> 00:16:30,320
before

00:16:27,759 --> 00:16:32,240
prometheus is quite not working at least

00:16:30,320 --> 00:16:35,680
in version 2.0

00:16:32,240 --> 00:16:39,120
on those 32-bit architecture so

00:16:35,680 --> 00:16:40,560
i am asking the community if someone is

00:16:39,120 --> 00:16:43,680
still actually

00:16:40,560 --> 00:16:45,680
requiring those bills from us or if

00:16:43,680 --> 00:16:47,519
we can just drop them officially from

00:16:45,680 --> 00:16:49,680
the committee side

00:16:47,519 --> 00:16:51,519
and then if you really need it you have

00:16:49,680 --> 00:16:52,639
to build promises on yourself and then

00:16:51,519 --> 00:16:55,839
you are on your own

00:16:52,639 --> 00:16:57,360
because it seems that behind a

00:16:55,839 --> 00:16:59,360
reasonably

00:16:57,360 --> 00:17:04,000
small small scale you can choose from at

00:16:59,360 --> 00:17:07,520
least on those architecture anyway

00:17:04,000 --> 00:17:10,640
i i think most users uh using 32-bit

00:17:07,520 --> 00:17:12,240
are not on x86 but they're on arm like

00:17:10,640 --> 00:17:13,280
trying to run it on ras on raspberry

00:17:12,240 --> 00:17:15,520
pi's basically

00:17:13,280 --> 00:17:17,039
and that sort of thing but but i think

00:17:15,520 --> 00:17:19,679
in practice you'd only have like

00:17:17,039 --> 00:17:22,640
two 300 megs worth of that even before

00:17:19,679 --> 00:17:22,640
we got to 219.

00:17:25,280 --> 00:17:28,960
so i know that loki is embedding

00:17:28,079 --> 00:17:33,200
prometheus

00:17:28,960 --> 00:17:35,440
and still having i 386 builds

00:17:33,200 --> 00:17:36,880
i'm not sure if that counts as a using

00:17:35,440 --> 00:17:39,840
primitives but

00:17:36,880 --> 00:17:40,559
there is a use case for that no that's

00:17:39,840 --> 00:17:42,160
uh

00:17:40,559 --> 00:17:43,679
this is specifically the prometheus

00:17:42,160 --> 00:17:46,559
server itself like

00:17:43,679 --> 00:17:47,440
exporters can run just fine uh you know

00:17:46,559 --> 00:17:50,799
we'd always

00:17:47,440 --> 00:17:54,799
support i386 note exporter raspberry pi

00:17:50,799 --> 00:17:57,120
arm node exporter etc

00:17:54,799 --> 00:17:58,080
it's the previous server itself has a

00:17:57,120 --> 00:18:01,200
hard time running

00:17:58,080 --> 00:18:03,120
on uh our on 32-bit

00:18:01,200 --> 00:18:04,320
any 32-bit architecture due to virtual

00:18:03,120 --> 00:18:08,080
memory limits

00:18:04,320 --> 00:18:11,440
uh uh arm and raspbian specifically

00:18:08,080 --> 00:18:12,080
is even worse because on 32-bit there is

00:18:11,440 --> 00:18:16,240
usually

00:18:12,080 --> 00:18:20,000
a um kernel space

00:18:16,240 --> 00:18:23,039
process space split uh

00:18:20,000 --> 00:18:26,320
for io and the default in the kernel is

00:18:23,039 --> 00:18:26,880
one gig kernel three gigs virtual space

00:18:26,320 --> 00:18:29,840
for

00:18:26,880 --> 00:18:31,120
process raspberry pi's build the kernel

00:18:29,840 --> 00:18:32,799
with a two gig split

00:18:31,120 --> 00:18:34,320
so it's even more limited so you can

00:18:32,799 --> 00:18:37,280
only have

00:18:34,320 --> 00:18:43,840
up to two gigabytes of process and

00:18:37,280 --> 00:18:43,840
mapped data

00:18:44,559 --> 00:18:48,480
but i guess like a lot of people

00:18:46,720 --> 00:18:50,640
nowadays try to run their own like

00:18:48,480 --> 00:18:53,440
raspberry pi kubernetes clusters

00:18:50,640 --> 00:18:54,840
and like i think raspberry far now has

00:18:53,440 --> 00:18:57,760
like eight gig

00:18:54,840 --> 00:19:00,559
version so i feel like a lot of

00:18:57,760 --> 00:19:00,880
people at least play with that at home

00:19:00,559 --> 00:19:05,600
and

00:19:00,880 --> 00:19:08,880
it's sort of that use case for hackers

00:19:05,600 --> 00:19:12,559
yeah raspberry pi 3s and newer can

00:19:08,880 --> 00:19:13,600
actually run 64-bit os but historically

00:19:12,559 --> 00:19:16,880
raspbian

00:19:13,600 --> 00:19:19,200
has been a 32-bit only

00:19:16,880 --> 00:19:21,120
option they're finally starting to get

00:19:19,200 --> 00:19:24,240
to the point where there are

00:19:21,120 --> 00:19:27,280
beta releases for raspberry pi os that

00:19:24,240 --> 00:19:27,280
are 64-bit

00:19:27,440 --> 00:19:41,360
oh that's cool

00:19:38,240 --> 00:19:43,919
cool i think it's a comment actually

00:19:41,360 --> 00:19:47,039
there from someone in chat

00:19:43,919 --> 00:19:50,640
cyril says that as an isp

00:19:47,039 --> 00:19:53,200
they still have some i-3a6 in production

00:19:50,640 --> 00:19:53,840
including using prometheus as a server

00:19:53,200 --> 00:19:56,960
on the

00:19:53,840 --> 00:19:56,960
on the i386

00:19:58,240 --> 00:20:01,360
so i guess there's someone actually

00:19:59,600 --> 00:20:04,720
using prometheus on

00:20:01,360 --> 00:20:06,559
uh x86 still but

00:20:04,720 --> 00:20:08,159
the question is at the high level do we

00:20:06,559 --> 00:20:10,480
want to produce these binaries

00:20:08,159 --> 00:20:11,679
for extremely niche use cases that will

00:20:10,480 --> 00:20:13,440
be you know have to work hard

00:20:11,679 --> 00:20:14,480
it look and could cause confusion or do

00:20:13,440 --> 00:20:16,159
we just stop building them for

00:20:14,480 --> 00:20:18,880
prometheus itself yeah

00:20:16,159 --> 00:20:21,039
i am wondering exactly what is the scale

00:20:18,880 --> 00:20:23,280
of those primitive servers then that you

00:20:21,039 --> 00:20:23,280
have

00:20:23,760 --> 00:20:29,840
and how easy it would be for you to

00:20:25,679 --> 00:20:29,840
replace it by another virtual machine

00:20:30,400 --> 00:20:34,080
yeah i would also be interested in the

00:20:32,320 --> 00:20:35,039
actual underlying use case or the

00:20:34,080 --> 00:20:37,520
rationale for

00:20:35,039 --> 00:20:38,080
like is it just reusing old hardware for

00:20:37,520 --> 00:20:41,280
for fun

00:20:38,080 --> 00:20:45,200
or is this an actual constraint yeah

00:20:41,280 --> 00:20:46,799
cyril says small use case few metrics

00:20:45,200 --> 00:20:48,640
and there's ritchie's question good

00:20:46,799 --> 00:20:49,600
question we are trying to remove those

00:20:48,640 --> 00:20:52,559
servers

00:20:49,600 --> 00:20:52,559
so we can help you

00:20:54,050 --> 00:21:03,200
[Music]

00:20:55,200 --> 00:21:06,720
we can give you an official email

00:21:03,200 --> 00:21:10,799
cool i think yeah i guess

00:21:06,720 --> 00:21:12,640
it sort of answers the question um

00:21:10,799 --> 00:21:14,960
yeah it doesn't look like we have any

00:21:12,640 --> 00:21:18,000
questions in the chat

00:21:14,960 --> 00:21:20,320
so yeah as we didn't have any community

00:21:18,000 --> 00:21:23,840
questions we are not giving away

00:21:20,320 --> 00:21:26,720
any prometheus fact today there are many

00:21:23,840 --> 00:21:26,720
questions on the dock

00:21:26,799 --> 00:21:31,840
yeah we are we are copying them in the

00:21:29,280 --> 00:21:31,840
meantime

00:21:35,280 --> 00:21:39,360
did i miss something i did just

00:21:37,919 --> 00:21:40,159
reference i guess i could i can start

00:21:39,360 --> 00:21:43,280
with mine

00:21:40,159 --> 00:21:44,240
yeah okay we started having some

00:21:43,280 --> 00:21:47,360
discussions

00:21:44,240 --> 00:21:47,919
uh within the prometheus team about the

00:21:47,360 --> 00:21:49,679
uh

00:21:47,919 --> 00:21:51,600
the current list of community support

00:21:49,679 --> 00:21:53,919
options and

00:21:51,600 --> 00:21:55,200
uh we've we're we've started

00:21:53,919 --> 00:21:56,400
investigating

00:21:55,200 --> 00:21:58,720
a couple of different community

00:21:56,400 --> 00:21:59,440
replacements for the the basic email

00:21:58,720 --> 00:22:01,360
lists

00:21:59,440 --> 00:22:03,760
uh one being the github discussions

00:22:01,360 --> 00:22:06,559
feature and the other being

00:22:03,760 --> 00:22:08,400
a discourse form and i was interested in

00:22:06,559 --> 00:22:10,640
getting feedback from the community

00:22:08,400 --> 00:22:12,320
on whether one or the other would be

00:22:10,640 --> 00:22:13,280
more more or less interesting for the

00:22:12,320 --> 00:22:16,880
community

00:22:13,280 --> 00:22:19,919
um we're currently mostly considering

00:22:16,880 --> 00:22:20,400
a discourse form because it's it has a

00:22:19,919 --> 00:22:23,840
bit more

00:22:20,400 --> 00:22:24,159
functionality and also integrates with

00:22:23,840 --> 00:22:25,919
the

00:22:24,159 --> 00:22:27,600
email better which means we could

00:22:25,919 --> 00:22:29,200
actually use it as a whole replacement

00:22:27,600 --> 00:22:33,280
for the current google groups

00:22:29,200 --> 00:22:34,559
emails uh and also because it's uh more

00:22:33,280 --> 00:22:36,799
of a forum system

00:22:34,559 --> 00:22:37,679
there's a lot more topic and subtop

00:22:36,799 --> 00:22:39,840
topic

00:22:37,679 --> 00:22:41,039
ability to to organize different

00:22:39,840 --> 00:22:42,720
discussions so

00:22:41,039 --> 00:22:44,240
you know prometheus questions and prom

00:22:42,720 --> 00:22:47,360
ql questions can go into

00:22:44,240 --> 00:22:48,080
one uh forum and like exporter questions

00:22:47,360 --> 00:22:51,120
can go into

00:22:48,080 --> 00:22:51,120
uh other forms

00:22:52,799 --> 00:22:57,600
so my kind of thought is uh having tried

00:22:56,240 --> 00:22:59,919
the github

00:22:57,600 --> 00:23:02,320
what is it github discussions on q

00:22:59,919 --> 00:23:05,200
prometheus one of our projects

00:23:02,320 --> 00:23:07,200
um it's really it's really cool to not

00:23:05,200 --> 00:23:08,000
have these discussions and github issues

00:23:07,200 --> 00:23:10,400
but i think you're

00:23:08,000 --> 00:23:11,360
right in terms of it doesn't replace

00:23:10,400 --> 00:23:14,080
like a

00:23:11,360 --> 00:23:14,799
like a kind of like a yeah like mailing

00:23:14,080 --> 00:23:18,400
list or

00:23:14,799 --> 00:23:20,720
slack or whatever um so i tend to agree

00:23:18,400 --> 00:23:21,440
on on the side of having something else

00:23:20,720 --> 00:23:24,240
um

00:23:21,440 --> 00:23:26,640
discord might be fine i'm wondering why

00:23:24,240 --> 00:23:28,640
can't we embrace like thanos for example

00:23:26,640 --> 00:23:30,720
the cncfs like

00:23:28,640 --> 00:23:32,240
um because a lot of people have that

00:23:30,720 --> 00:23:35,039
already right

00:23:32,240 --> 00:23:36,640
um it's not a i'm i consider it not a

00:23:35,039 --> 00:23:37,840
replacement for real-time chat

00:23:36,640 --> 00:23:41,120
it's more of a replacement for the

00:23:37,840 --> 00:23:44,080
mailing lists okay got it

00:23:41,120 --> 00:23:44,320
but then this card seems kind of more

00:23:44,080 --> 00:23:47,440
like

00:23:44,320 --> 00:23:50,000
this chord display of course

00:23:47,440 --> 00:23:50,559
oh okay sorry okay yeah that makes sense

00:23:50,000 --> 00:23:54,000
uh

00:23:50,559 --> 00:23:56,559
yeah i guess that also is fine yeah

00:23:54,000 --> 00:23:56,559
okay good

00:23:58,720 --> 00:24:05,440
naming is hard yes uh the the

00:24:02,000 --> 00:24:07,360
discourse people also uh have given us a

00:24:05,440 --> 00:24:09,120
free enterprise account which means

00:24:07,360 --> 00:24:10,880
we're not limited to the typical open

00:24:09,120 --> 00:24:14,320
source project uh

00:24:10,880 --> 00:24:18,799
free tier because they the

00:24:14,320 --> 00:24:20,860
discourse itself uh uses prometheus

00:24:18,799 --> 00:24:22,080
the the one thing is um

00:24:20,860 --> 00:24:25,200
[Music]

00:24:22,080 --> 00:24:27,120
we lose this ability to to turn issues

00:24:25,200 --> 00:24:28,799
into into talk points on this github

00:24:27,120 --> 00:24:30,840
thing or vice versa

00:24:28,799 --> 00:24:32,240
assuming they have a nice workflow for

00:24:30,840 --> 00:24:35,440
this

00:24:32,240 --> 00:24:36,159
it's limited uh because i believe it's

00:24:35,440 --> 00:24:38,159
on a

00:24:36,159 --> 00:24:40,080
uh each discussion is on a project by

00:24:38,159 --> 00:24:42,720
project basis

00:24:40,080 --> 00:24:43,360
so you it's hard to it's hard to move

00:24:42,720 --> 00:24:46,159
you can't

00:24:43,360 --> 00:24:46,400
and you can in for sure you can't move

00:24:46,159 --> 00:24:49,279
an

00:24:46,400 --> 00:24:51,200
issue from prometheus to prometheus

00:24:49,279 --> 00:24:54,720
community

00:24:51,200 --> 00:24:55,679
so it's it's kind of it's kind of half

00:24:54,720 --> 00:24:59,120
baked from

00:24:55,679 --> 00:25:02,080
if you're a larger organization and

00:24:59,120 --> 00:25:03,039
also because uh discussions are a super

00:25:02,080 --> 00:25:05,919
set of issues

00:25:03,039 --> 00:25:07,360
it's a one-way tip so if people start

00:25:05,919 --> 00:25:09,120
using bug

00:25:07,360 --> 00:25:10,720
book requests in the discussion we would

00:25:09,120 --> 00:25:14,159
need to close them anyway

00:25:10,720 --> 00:25:15,760
so close the discussion so yeah

00:25:14,159 --> 00:25:18,000
you can you can move issues to

00:25:15,760 --> 00:25:21,279
discussion but not the other way around

00:25:18,000 --> 00:25:24,240
so it would create like the problem in

00:25:21,279 --> 00:25:24,240
the opposite direction

00:25:25,440 --> 00:25:29,440
keep in mind though that it's much more

00:25:26,960 --> 00:25:31,120
often that issues are filed which turns

00:25:29,440 --> 00:25:33,039
out to be support requests

00:25:31,120 --> 00:25:35,039
then uh you know we've got a support

00:25:33,039 --> 00:25:36,880
request that turns out to be a bug

00:25:35,039 --> 00:25:39,360
because we get one of those we get five

00:25:36,880 --> 00:25:42,159
to ten a day the other way we get

00:25:39,360 --> 00:25:43,919
one to two a month yes but because

00:25:42,159 --> 00:25:44,799
because the mailing list is really more

00:25:43,919 --> 00:25:46,640
difficult to reach

00:25:44,799 --> 00:25:50,240
if it's on the same github page then i

00:25:46,640 --> 00:25:50,240
guess that we will get more of them

00:25:54,559 --> 00:25:59,679
do we did we set up the new github

00:25:57,600 --> 00:26:02,400
open an issue like click here for

00:25:59,679 --> 00:26:02,400
support button

00:26:03,200 --> 00:26:07,200
uh yes we have that on the parameters

00:26:05,520 --> 00:26:09,120
main repository

00:26:07,200 --> 00:26:12,320
and then you are directed to the

00:26:09,120 --> 00:26:12,320
community page i think

00:26:16,720 --> 00:26:21,520
yeah maybe uh maybe we should make it

00:26:19,919 --> 00:26:24,480
more clear

00:26:21,520 --> 00:26:25,039
instead of prometheus community make it

00:26:24,480 --> 00:26:29,440
uh

00:26:25,039 --> 00:26:32,480
help support in the title of that link

00:26:29,440 --> 00:26:32,880
yeah there is also a support.md that you

00:26:32,480 --> 00:26:35,360
can

00:26:32,880 --> 00:26:39,840
add in github that will add extra

00:26:35,360 --> 00:26:39,840
features regarding that

00:26:41,279 --> 00:26:44,400
i'm not sure i've noticed any difference

00:26:42,799 --> 00:26:47,039
in volume of support requests

00:26:44,400 --> 00:26:53,840
landing on the issue tracker but i

00:26:47,039 --> 00:26:53,840
haven't looked at that scientifically

00:26:56,960 --> 00:27:00,240
cool i guess we can move on to the next

00:26:59,600 --> 00:27:02,480
question

00:27:00,240 --> 00:27:03,279
i'm getting from a few swags how to get

00:27:02,480 --> 00:27:05,600
them so

00:27:03,279 --> 00:27:07,679
uh at the beginning as i told you

00:27:05,600 --> 00:27:11,120
basically if you ask a question

00:27:07,679 --> 00:27:13,679
you qualify for uh basically for

00:27:11,120 --> 00:27:16,080
prometheus slag and then matayas will

00:27:13,679 --> 00:27:21,679
help us randomly pick a

00:27:16,080 --> 00:27:23,919
pick dinner at the end of the meeting

00:27:21,679 --> 00:27:25,600
and we have another question from

00:27:23,919 --> 00:27:29,440
darshan

00:27:25,600 --> 00:27:31,279
uh it's a really long one

00:27:29,440 --> 00:27:32,640
we are using a gouch metric type to

00:27:31,279 --> 00:27:35,120
model up

00:27:32,640 --> 00:27:38,080
actually i think i i i moved to darshan

00:27:35,120 --> 00:27:41,440
to panelist so maybe he want to

00:27:38,080 --> 00:27:44,720
ask himself yeah sure uh

00:27:41,440 --> 00:27:46,399
thank you uh so so i basically have a

00:27:44,720 --> 00:27:48,240
this might be a somewhat basic question

00:27:46,399 --> 00:27:49,200
but what we have is we have we have the

00:27:48,240 --> 00:27:50,320
app

00:27:49,200 --> 00:27:52,399
health status that we're trying to

00:27:50,320 --> 00:27:55,279
monitor using by using prometheus and

00:27:52,399 --> 00:27:56,880
what we're using is a gauge metric type

00:27:55,279 --> 00:27:58,880
so the metric name would be something

00:27:56,880 --> 00:28:00,799
like the abstractors and it will have

00:27:58,880 --> 00:28:02,000
labels like the app name and the app

00:28:00,799 --> 00:28:03,600
status which

00:28:02,000 --> 00:28:05,120
could be either healthy or not healthy

00:28:03,600 --> 00:28:06,480
and the value is just a one to indicator

00:28:05,120 --> 00:28:08,559
that this is the

00:28:06,480 --> 00:28:10,159
this is the value which is active uh so

00:28:08,559 --> 00:28:11,120
for example if the app is healthy the

00:28:10,159 --> 00:28:13,440
the metric will be

00:28:11,120 --> 00:28:14,559
abstracted that is the metric name the

00:28:13,440 --> 00:28:16,159
label will be app name

00:28:14,559 --> 00:28:18,159
foo bus for example and the app status

00:28:16,159 --> 00:28:19,600
will be healthy equal to one

00:28:18,159 --> 00:28:21,760
when it becomes unhealthy the abstract

00:28:19,600 --> 00:28:24,080
is changes to absolutist equal to

00:28:21,760 --> 00:28:27,279
unhealthy and the value becomes one

00:28:24,080 --> 00:28:30,240
uh so and is it okay to add

00:28:27,279 --> 00:28:31,120
more labels here like in a normal time

00:28:30,240 --> 00:28:33,840
series

00:28:31,120 --> 00:28:36,080
thingy the the the cardinality problem

00:28:33,840 --> 00:28:38,159
hits because you have a lot of uh

00:28:36,080 --> 00:28:39,679
like long lived series i guess but here

00:28:38,159 --> 00:28:41,120
uh

00:28:39,679 --> 00:28:42,880
isn't it the case that when the app

00:28:41,120 --> 00:28:44,399
status is healthy that's one series and

00:28:42,880 --> 00:28:46,080
when the app status is not healthy

00:28:44,399 --> 00:28:49,120
that's another series and like we won't

00:28:46,080 --> 00:28:49,120
have the same problems here

00:28:49,360 --> 00:28:52,880
yeah i think that's that's fine because

00:28:51,279 --> 00:28:54,960
you have only two values

00:28:52,880 --> 00:28:57,200
and you're right the whole metric and

00:28:54,960 --> 00:28:58,240
the different labels you have in the up

00:28:57,200 --> 00:29:00,640
status

00:28:58,240 --> 00:29:02,640
um will be duplicated right because you

00:29:00,640 --> 00:29:04,640
have two versions healthy and unhealthy

00:29:02,640 --> 00:29:05,279
but still it's only like 2x so maybe

00:29:04,640 --> 00:29:06,880
that's okay

00:29:05,279 --> 00:29:08,320
depending you know how many of those you

00:29:06,880 --> 00:29:10,640
have however

00:29:08,320 --> 00:29:12,640
i would suggest something more like

00:29:10,640 --> 00:29:14,640
since you have only two values

00:29:12,640 --> 00:29:16,080
and you don't use the value of the

00:29:14,640 --> 00:29:17,840
metric itself

00:29:16,080 --> 00:29:19,679
then the usual thing what we're doing

00:29:17,840 --> 00:29:21,760
from it is you um

00:29:19,679 --> 00:29:23,840
you kind of describe your healthiness

00:29:21,760 --> 00:29:25,520
via the value of the metric itself so

00:29:23,840 --> 00:29:27,679
instead of having label

00:29:25,520 --> 00:29:28,640
healthy and unhealthy you can actually

00:29:27,679 --> 00:29:31,279
put that as a

00:29:28,640 --> 00:29:31,679
zero or one and thanks to that you can

00:29:31,279 --> 00:29:34,240
use

00:29:31,679 --> 00:29:34,960
variety of amazing you know some produce

00:29:34,240 --> 00:29:37,120
functions

00:29:34,960 --> 00:29:38,240
and you know aggregations to actually

00:29:37,120 --> 00:29:42,159
have some meaningful

00:29:38,240 --> 00:29:43,840
uh you know analytic you know output

00:29:42,159 --> 00:29:45,600
uh when you want to play with it and

00:29:43,840 --> 00:29:48,000
just learn more so

00:29:45,600 --> 00:29:50,159
um so we would suggest that i think as

00:29:48,000 --> 00:29:52,320
well

00:29:50,159 --> 00:29:53,600
okay make sense uh so also like once

00:29:52,320 --> 00:29:54,000
more follow-up question to that what

00:29:53,600 --> 00:29:55,679
happens

00:29:54,000 --> 00:29:57,039
when you do not give a value for a

00:29:55,679 --> 00:29:59,520
particular label

00:29:57,039 --> 00:30:00,880
like how is that stored internationally

00:29:59,520 --> 00:30:02,799
you have to put value

00:30:00,880 --> 00:30:06,720
what do you mean uh there will be empty

00:30:02,799 --> 00:30:06,720
value then which is not allowed i think

00:30:06,880 --> 00:30:11,360
it will not be exported if it doesn't

00:30:08,559 --> 00:30:13,679
have anybody depends

00:30:11,360 --> 00:30:16,240
but basically an empty label is the same

00:30:13,679 --> 00:30:17,919
thing as a missing label semantically

00:30:16,240 --> 00:30:20,000
and generally you want to avoid the

00:30:17,919 --> 00:30:21,679
situation where your labels are varying

00:30:20,000 --> 00:30:24,320
over time because that's

00:30:21,679 --> 00:30:26,159
tricky to deal with and prompt you well

00:30:24,320 --> 00:30:26,960
for the reasons that bartek which is

00:30:26,159 --> 00:30:28,399
going through there

00:30:26,960 --> 00:30:30,720
you don't want serious appearing and

00:30:28,399 --> 00:30:32,480
disappearing because it's just

00:30:30,720 --> 00:30:34,840
annoying to deal with impromptu l

00:30:32,480 --> 00:30:36,159
instead using a value one zero much

00:30:34,840 --> 00:30:38,799
simpler

00:30:36,159 --> 00:30:38,799
great thank you

00:30:41,360 --> 00:30:46,080
cool i think that's it oh no we have

00:30:46,960 --> 00:30:53,200
extending from ql yoganes should be on

00:30:50,799 --> 00:30:57,360
the call now uh let me add ganesh to

00:30:53,200 --> 00:31:01,440
panelist so he should be

00:30:57,360 --> 00:31:01,440
soon ready to speak here cool

00:31:02,080 --> 00:31:09,679
hello alright yes yes

00:31:06,159 --> 00:31:12,159
yes uh regarding the extending from ql

00:31:09,679 --> 00:31:12,960
so i just started on the it this week so

00:31:12,159 --> 00:31:16,159
i'm planning

00:31:12,960 --> 00:31:18,480
to gather use cases around

00:31:16,159 --> 00:31:19,440
uh what things are not possible

00:31:18,480 --> 00:31:22,159
currently

00:31:19,440 --> 00:31:24,320
with the prom ql currently and maybe

00:31:22,159 --> 00:31:24,720
come up with a design dock to solve most

00:31:24,320 --> 00:31:27,760
of

00:31:24,720 --> 00:31:29,440
those use cases so that's my current

00:31:27,760 --> 00:31:31,039
plan and i was

00:31:29,440 --> 00:31:33,360
planning to open a github issue to

00:31:31,039 --> 00:31:35,919
continue discussion on there

00:31:33,360 --> 00:31:37,279
so currently i am trying to focus on a

00:31:35,919 --> 00:31:40,960
particular use case about

00:31:37,279 --> 00:31:43,279
top k where if you want to graph

00:31:40,960 --> 00:31:44,559
only fixed set of metrics for a time

00:31:43,279 --> 00:31:46,000
range you cannot do that with the

00:31:44,559 --> 00:31:47,840
current from ql

00:31:46,000 --> 00:31:49,120
because at every evaluation time stamp

00:31:47,840 --> 00:31:52,720
you will get

00:31:49,120 --> 00:31:52,960
lots of metrics out there but in general

00:31:52,720 --> 00:31:54,640
i

00:31:52,960 --> 00:31:58,559
wanted to open up discussion on

00:31:54,640 --> 00:31:58,559
extending from ql and gathering use

00:31:58,840 --> 00:32:01,840
cases

00:32:03,600 --> 00:32:07,200
any more opinions around that

00:32:08,240 --> 00:32:12,559
how we can how we can give you the

00:32:10,159 --> 00:32:12,559
feedback

00:32:13,120 --> 00:32:16,320
i will open up a github issue and maybe

00:32:15,840 --> 00:32:18,960
people

00:32:16,320 --> 00:32:20,559
can uh post their use cases in the

00:32:18,960 --> 00:32:22,480
github is when we can continue the

00:32:20,559 --> 00:32:24,399
discussion there

00:32:22,480 --> 00:32:26,640
maybe it makes sense to just create an

00:32:24,399 --> 00:32:29,760
empty issue now so yeah

00:32:26,640 --> 00:32:32,559
url which we can synchronize on now

00:32:29,760 --> 00:32:34,159
uh and then you can flash this out over

00:32:32,559 --> 00:32:36,159
the day or whatever

00:32:34,159 --> 00:32:38,240
um so we have that one point where

00:32:36,159 --> 00:32:41,440
everyone can sit on but basically the

00:32:38,240 --> 00:32:44,399
intention behind behind ganesh

00:32:41,440 --> 00:32:46,399
saying this is to invite more thoughts

00:32:44,399 --> 00:32:48,320
comments anything of course as per the

00:32:46,399 --> 00:32:51,440
last dev summit um

00:32:48,320 --> 00:32:53,440
we will look at at extending from first

00:32:51,440 --> 00:32:56,559
principles and obviously this means

00:32:53,440 --> 00:32:59,200
looking at use cases and such

00:32:56,559 --> 00:33:01,039
um so everyone is more than invited to

00:32:59,200 --> 00:33:03,200
to voice their opinion about what

00:33:01,039 --> 00:33:05,600
would be nice or useful or bad or

00:33:03,200 --> 00:33:05,600
whatever

00:33:06,159 --> 00:33:10,000
i just opened an issue the number is

00:33:08,840 --> 00:33:11,919
00:33:10,000 --> 00:33:14,880
without any description but i'll add

00:33:11,919 --> 00:33:14,880
some description there

00:33:17,279 --> 00:33:25,200
cool we can add the link to the doc for

00:33:19,840 --> 00:33:27,440
anyone who's interested

00:33:25,200 --> 00:33:30,080
github is being slow i'll copy it over

00:33:27,440 --> 00:33:30,080
in a second

00:33:30,720 --> 00:33:40,799
yep there we go

00:33:38,080 --> 00:33:42,080
so the railing point for this is now in

00:33:40,799 --> 00:33:45,120
the meeting notes

00:33:42,080 --> 00:33:45,120
for anyone interested

00:33:51,039 --> 00:33:54,960
cool i think this is the last question

00:33:53,600 --> 00:33:57,279
uh let me quickly

00:33:54,960 --> 00:33:58,960
take a look at the chat yeah chat seems

00:33:57,279 --> 00:34:02,159
to be

00:33:58,960 --> 00:34:05,200
empty yeah so uh

00:34:02,159 --> 00:34:07,600
matas do you wanna answer winner i think

00:34:05,200 --> 00:34:11,679
we only had one if i'm not mistaken

00:34:07,600 --> 00:34:16,079
uh only one question so darshan

00:34:11,679 --> 00:34:18,480
you kind of are the winner in this case

00:34:16,079 --> 00:34:20,159
yeah congrats um you can thank me on

00:34:18,480 --> 00:34:22,720
tntf slack or

00:34:20,159 --> 00:34:24,639
somewhere twitter whatever um yeah i'll

00:34:22,720 --> 00:34:27,679
send you a code and

00:34:24,639 --> 00:34:30,480
you'll get your swag congrats

00:34:27,679 --> 00:34:31,839
and yeah this is it for today uh thank

00:34:30,480 --> 00:34:34,639
you everyone who

00:34:31,839 --> 00:34:36,800
who talked and who attended i'll see you

00:34:34,639 --> 00:34:43,440
next time

00:34:36,800 --> 00:34:43,440

YouTube URL: https://www.youtube.com/watch?v=reACg1rgvSE


