Title: PromCon 2016: Lightning Talks - PromQL You Probably (Maybe) Don't Use - Brian Brazil
Publication date: 2016-09-04
Playlist: PromCon 2016
Description: 
	* Abstract:

Brian Brazil from Robust Perception explains some aspects of PromQL that you may not be aware of yet.

* PromCon website:

https://promcon.io/
Captions: 
	00:00:00,010 --> 00:00:04,980
so now brian is doing his lightning talk

00:00:05,130 --> 00:00:10,630
so that's the first one and then

00:00:07,120 --> 00:00:13,840
actually we will see we got a lot of

00:00:10,630 --> 00:00:15,460
entries I think we'll just go through

00:00:13,840 --> 00:00:17,740
them we have actually one previously

00:00:15,460 --> 00:00:21,369
submitted entry by buren which will

00:00:17,740 --> 00:00:24,160
definitely be the last talk because it's

00:00:21,369 --> 00:00:26,470
a good closer but i think you know at

00:00:24,160 --> 00:00:28,869
some point we'll just gauge the room and

00:00:26,470 --> 00:00:30,730
see how tired people feel and whether

00:00:28,869 --> 00:00:33,969
they want to have one more talk or go

00:00:30,730 --> 00:00:46,179
home and yeah so give it up for Brian

00:00:33,969 --> 00:00:49,510
again so this is a talk looking at some

00:00:46,179 --> 00:00:51,249
features of primitives and that have

00:00:49,510 --> 00:00:53,829
been added over the last file to give

00:00:51,249 --> 00:00:56,969
full flexibility relational algebra as

00:00:53,829 --> 00:00:59,139
it turns out this stuff you need and so

00:00:56,969 --> 00:01:01,719
lots of people have used queries like

00:00:59,139 --> 00:01:03,459
this you cash your character you take a

00:01:01,719 --> 00:01:05,050
razorfish to take a rate and just some

00:01:03,459 --> 00:01:07,270
both sides and i'll give you five

00:01:05,050 --> 00:01:08,530
hundreds / 12 requests and that comes

00:01:07,270 --> 00:01:12,400
out basically is one number with no

00:01:08,530 --> 00:01:14,200
labels or maybe you're going to do it by

00:01:12,400 --> 00:01:16,810
a job because you know you should always

00:01:14,200 --> 00:01:19,330
mention your job label and that's to

00:01:16,810 --> 00:01:21,070
hundreds per request branch unless you

00:01:19,330 --> 00:01:22,930
actually never have any to hundreds in

00:01:21,070 --> 00:01:26,860
which case that will never return always

00:01:22,930 --> 00:01:29,410
set your labels in every but there's a

00:01:26,860 --> 00:01:32,080
function modifier that you can have on

00:01:29,410 --> 00:01:34,270
your bike closes so on your aggregations

00:01:32,080 --> 00:01:37,240
called without from what it does is that

00:01:34,270 --> 00:01:39,130
well some by and here we're just

00:01:37,240 --> 00:01:40,930
removing yes and this is the same as

00:01:39,130 --> 00:01:42,940
without s because sometimes you don't

00:01:40,930 --> 00:01:45,130
know basically every single target label

00:01:42,940 --> 00:01:46,450
that is set because you don't know what

00:01:45,130 --> 00:01:47,950
target is personal and is put on

00:01:46,450 --> 00:01:50,710
something but you'd like to share rules

00:01:47,950 --> 00:01:52,390
around so without and we're just

00:01:50,710 --> 00:01:53,710
mentioning instrumentation labels like

00:01:52,390 --> 00:01:55,659
what's actually in the direct

00:01:53,710 --> 00:01:57,970
instrumentation then everyone can share

00:01:55,659 --> 00:01:59,920
their rules

00:01:57,970 --> 00:02:02,590
oh there are still some uses for body as

00:01:59,920 --> 00:02:04,420
well and there's equivalents then if

00:02:02,590 --> 00:02:05,980
you're doing vector matching so anything

00:02:04,420 --> 00:02:08,229
like multiplication addition anything

00:02:05,980 --> 00:02:10,840
for these two operators and you have

00:02:08,229 --> 00:02:13,450
ignoring and on which is the same as x

00:02:10,840 --> 00:02:16,210
and potential is by default all the

00:02:13,450 --> 00:02:19,780
vector operations are 12 14 bin arms so

00:02:16,210 --> 00:02:21,070
both sides must match exactly but it can

00:02:19,780 --> 00:02:23,110
imagine the other case if we're going to

00:02:21,070 --> 00:02:25,950
continue with the page v1's the errors

00:02:23,110 --> 00:02:30,190
you got a code handler and a method and

00:02:25,950 --> 00:02:32,470
in HD free requests there's no handle so

00:02:30,190 --> 00:02:35,920
those don't match so how do we make

00:02:32,470 --> 00:02:38,380
things join together and the answer is

00:02:35,920 --> 00:02:39,640
ignoring so here we can just yet say

00:02:38,380 --> 00:02:42,400
here we're saying here's the woodhouse

00:02:39,640 --> 00:02:44,500
so removing the handler so still got the

00:02:42,400 --> 00:02:46,810
codon method and this well still is the

00:02:44,500 --> 00:02:48,570
code method so they join up and now

00:02:46,810 --> 00:02:51,430
happening matches and you get a result

00:02:48,570 --> 00:02:54,130
although there is this isn't quite

00:02:51,430 --> 00:02:55,870
correct as also on you can also say hey

00:02:54,130 --> 00:02:58,260
I want to work on coding method and I

00:02:55,870 --> 00:03:03,130
just match the zillions of us up again

00:02:58,260 --> 00:03:05,380
at finding doing error but you do have

00:03:03,130 --> 00:03:07,660
to be a little bit careful and because

00:03:05,380 --> 00:03:09,670
sometimes you get this it seems to work

00:03:07,660 --> 00:03:10,630
because there's a cardinality of one

00:03:09,670 --> 00:03:12,970
because everything so time you want to

00:03:10,630 --> 00:03:15,489
match but it's just because other ones

00:03:12,970 --> 00:03:17,470
haven't been exported yet and if that's

00:03:15,489 --> 00:03:19,060
the case you will get this error because

00:03:17,470 --> 00:03:21,760
you are trying to do a mini to one match

00:03:19,060 --> 00:03:24,070
in which case you've got too much other

00:03:21,760 --> 00:03:27,880
modifiers call group left or group right

00:03:24,070 --> 00:03:29,380
and what they do is say hey these two

00:03:27,880 --> 00:03:32,170
sides have different cardinality match

00:03:29,380 --> 00:03:33,910
them up and group left is saying hate

00:03:32,170 --> 00:03:36,580
the left side has bore so group them

00:03:33,910 --> 00:03:38,890
together and then one from the other

00:03:36,580 --> 00:03:42,459
side will match up so here because we've

00:03:38,890 --> 00:03:44,650
got higher cardinality is what handler

00:03:42,459 --> 00:03:48,060
so this is a hand reduce doesn't and we

00:03:44,650 --> 00:03:51,370
can calculate the errors per handlers

00:03:48,060 --> 00:03:56,920
for four measures I think yeah not my

00:03:51,370 --> 00:03:59,920
slides and that's it

00:03:56,920 --> 00:03:59,920

YouTube URL: https://www.youtube.com/watch?v=MPH2kMi6wyM


