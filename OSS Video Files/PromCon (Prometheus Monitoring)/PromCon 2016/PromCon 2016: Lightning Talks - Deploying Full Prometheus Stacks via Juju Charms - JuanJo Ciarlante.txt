Title: PromCon 2016: Lightning Talks - Deploying Full Prometheus Stacks via Juju Charms - JuanJo Ciarlante
Publication date: 2016-09-04
Playlist: PromCon 2016
Description: 
	* Abstract:

JuanJo "jjo" Ciarlante from Canonical speaks about deploying Prometheus stacks via Juju charms.

* Slides:

http://www.slideshare.net/juanjosec/deploying-prometheus-stacks-with-juju

* PromCon website:

https://promcon.io/
Captions: 
	00:00:01,670 --> 00:00:07,620
okay hi so yeah I'm hope I'm going to

00:00:05,670 --> 00:00:10,559
talk about how we deploy Prometheus

00:00:07,620 --> 00:00:13,620
using juju is economical a bit about me

00:00:10,559 --> 00:00:16,950
so I am working for Canon for canonicus

00:00:13,620 --> 00:00:19,230
asked loudly rabbit engineer i work a 34

00:00:16,950 --> 00:00:21,240
google doing for years and a half and

00:00:19,230 --> 00:00:23,850
I've been contributing to free software

00:00:21,240 --> 00:00:26,430
since 95 when I created IP aliasing

00:00:23,850 --> 00:00:28,830
support for linux so essentially the

00:00:26,430 --> 00:00:32,969
movies economical is to try to create

00:00:28,830 --> 00:00:35,250
new jobs and replace x by prometheus

00:00:32,969 --> 00:00:37,950
because to improve the white box money

00:00:35,250 --> 00:00:39,750
into that box monitor induce do have

00:00:37,950 --> 00:00:42,120
some white box monitoring that is not in

00:00:39,750 --> 00:00:46,200
house and by the dog food in all of

00:00:42,120 --> 00:00:47,730
these provide these to the community so

00:00:46,200 --> 00:00:49,020
to understand how we do this I'll going

00:00:47,730 --> 00:00:50,610
are going to try in two minutes so

00:00:49,020 --> 00:00:52,500
tranquil juju is for those that don't

00:00:50,610 --> 00:00:54,930
use it so essentially the service

00:00:52,500 --> 00:00:58,350
orchestration tool that what it does it

00:00:54,930 --> 00:01:01,350
it manages by creating Ansari not the

00:00:58,350 --> 00:01:03,600
ends containers or metals and key

00:01:01,350 --> 00:01:06,960
concepts into you is that to convert

00:01:03,600 --> 00:01:09,810
these vm for example and make it ngx

00:01:06,960 --> 00:01:11,579
service it has a charm that is

00:01:09,810 --> 00:01:14,130
essentially a set of scripts that are

00:01:11,579 --> 00:01:16,380
run in different stages of this vm

00:01:14,130 --> 00:01:19,950
transformation to becoming a net and yet

00:01:16,380 --> 00:01:21,899
instance for let's say let's take an

00:01:19,950 --> 00:01:24,840
example for example we want to deploy it

00:01:21,899 --> 00:01:27,899
to a web app deployed so usually say

00:01:24,840 --> 00:01:30,029
central is it has a central approach a

00:01:27,899 --> 00:01:31,709
centralized approach so we need to

00:01:30,029 --> 00:01:33,389
deploy a controller we do this but we

00:01:31,709 --> 00:01:35,310
strapped in the moment and say that we

00:01:33,389 --> 00:01:37,649
want to deploy for example two units of

00:01:35,310 --> 00:01:42,029
actual process or front end we do that

00:01:37,649 --> 00:01:44,310
by that's he like and then we would we

00:01:42,029 --> 00:01:46,560
would have what is there with all the

00:01:44,310 --> 00:01:48,959
units so in this case we want to deploy

00:01:46,560 --> 00:01:51,599
mediawiki up so we need the front-end

00:01:48,959 --> 00:01:54,060
mediawiki itself the DBE and some

00:01:51,599 --> 00:01:56,310
memcache as you can see there are all of

00:01:54,060 --> 00:01:57,899
these are running kind of disconnected

00:01:56,310 --> 00:01:59,999
to each other so but this time we will

00:01:57,899 --> 00:02:04,229
have for example here five VMS or

00:01:59,999 --> 00:02:06,179
containers running each units that have

00:02:04,229 --> 00:02:07,919
been set up by this chance but they are

00:02:06,179 --> 00:02:10,560
not connected on service yet so we need

00:02:07,919 --> 00:02:12,180
to connect them in juju this is called a

00:02:10,560 --> 00:02:14,730
relation so we are relations

00:02:12,180 --> 00:02:16,500
specifically what we need to be late

00:02:14,730 --> 00:02:18,780
like the front ends to the media we can

00:02:16,500 --> 00:02:22,920
be a wiki then to the DBA memcache and

00:02:18,780 --> 00:02:25,680
then we have a food serving stack so we

00:02:22,920 --> 00:02:29,849
could get a proxy by default for example

00:02:25,680 --> 00:02:31,410
on board ID and be able to serve a bit

00:02:29,849 --> 00:02:34,319
of glossary ish especially regarding

00:02:31,410 --> 00:02:36,209
service and units so there we have four

00:02:34,319 --> 00:02:39,030
services but we have a particularity

00:02:36,209 --> 00:02:41,610
proxy that has two units then the

00:02:39,030 --> 00:02:43,140
relation happens between services but

00:02:41,610 --> 00:02:45,120
the units gets this new information

00:02:43,140 --> 00:02:47,549
about all the units that have been

00:02:45,120 --> 00:02:49,440
related to other service to reconfigure

00:02:47,549 --> 00:02:52,620
themselves so essentially what the charm

00:02:49,440 --> 00:02:56,010
does there is it acts on relation and

00:02:52,620 --> 00:02:58,230
modifies for example it is Ecch a proxy

00:02:56,010 --> 00:03:02,549
proxy that comes to point to the new set

00:02:58,230 --> 00:03:04,799
of Baggins what we use permissions for

00:03:02,549 --> 00:03:06,810
inside canonical essentially we use it

00:03:04,799 --> 00:03:08,400
for three different things one for

00:03:06,810 --> 00:03:11,190
infrastructure we serve because you have

00:03:08,400 --> 00:03:13,829
a most great part of the infrastructure

00:03:11,190 --> 00:03:16,590
is running on physical nose no not on

00:03:13,829 --> 00:03:18,629
the cloud so we use it to monitor this

00:03:16,590 --> 00:03:21,450
physical nose monitor network gear and

00:03:18,629 --> 00:03:24,900
some over important / cloud services we

00:03:21,450 --> 00:03:26,940
use it also to monitor OpenStack open

00:03:24,900 --> 00:03:29,130
sucks I would say the internal and and

00:03:26,940 --> 00:03:31,739
some that we have in our customers and

00:03:29,130 --> 00:03:34,079
to monitor online service applications

00:03:31,739 --> 00:03:35,459
interesting here is that the last one is

00:03:34,079 --> 00:03:38,519
the only one where we are we are

00:03:35,459 --> 00:03:41,250
actually using application matrix like

00:03:38,519 --> 00:03:43,500
developers actually creating exposing

00:03:41,250 --> 00:03:45,989
pneumatics to be able to have KP as for

00:03:43,500 --> 00:03:47,190
kpi's for example from them and the

00:03:45,989 --> 00:03:49,440
first two we're essentially running

00:03:47,190 --> 00:03:51,630
either Telegraph not supported or in

00:03:49,440 --> 00:03:55,169
some cases quality to provide cost level

00:03:51,630 --> 00:03:57,419
or infrastructure level metrics and how

00:03:55,169 --> 00:04:01,530
we actually deploy Prometheus following

00:03:57,419 --> 00:04:03,120
what we met what we saw before that due

00:04:01,530 --> 00:04:05,400
to deploy promises would would do

00:04:03,120 --> 00:04:07,500
specifically digest deploy this

00:04:05,400 --> 00:04:09,840
pernicious instance it is essentially

00:04:07,500 --> 00:04:12,090
standing alone then we do do to deploy

00:04:09,840 --> 00:04:14,370
Telegraph this Telegraph john is a

00:04:12,090 --> 00:04:16,500
particular chain that is actually does

00:04:14,370 --> 00:04:18,030
not allocate a new instance because it's

00:04:16,500 --> 00:04:21,209
called subordinate charm it's kind of a

00:04:18,030 --> 00:04:24,000
cabochon when you relate to a service

00:04:21,209 --> 00:04:25,710
here we relate telegraph to each of

00:04:24,000 --> 00:04:28,080
these service it actually we get

00:04:25,710 --> 00:04:30,060
co-located with this mansion

00:04:28,080 --> 00:04:32,789
and we'll get indeed running the same

00:04:30,060 --> 00:04:34,409
unit interesting here is that you see

00:04:32,789 --> 00:04:37,710
that we have a single telegraph service

00:04:34,409 --> 00:04:40,740
that has five units and then this each

00:04:37,710 --> 00:04:43,650
of these units has been it each of these

00:04:40,740 --> 00:04:46,259
manually does get a telegraph attached

00:04:43,650 --> 00:04:48,210
to it but then again prometheus is there

00:04:46,259 --> 00:04:50,400
alone by doing this ad Malaysian

00:04:48,210 --> 00:04:52,860
promises to Telegraph we have promised

00:04:50,400 --> 00:04:54,960
making being aware of all the units of

00:04:52,860 --> 00:05:00,479
this Telegraph serving and being able to

00:04:54,960 --> 00:05:02,400
scrape scrape matters from it um so

00:05:00,479 --> 00:05:04,080
installation here is that this this

00:05:02,400 --> 00:05:08,699
Telegraph is kind of proof that we

00:05:04,080 --> 00:05:11,280
launched so okay so just to mention all

00:05:08,699 --> 00:05:15,090
the chance are our open source software

00:05:11,280 --> 00:05:17,400
scores we also use graph on ax and we

00:05:15,090 --> 00:05:19,529
are working the farm implosion work we

00:05:17,400 --> 00:05:21,930
are working on em tail and other manager

00:05:19,529 --> 00:05:24,449
on production and there you have a link

00:05:21,930 --> 00:05:28,110
where i I've been uploading some more

00:05:24,449 --> 00:05:29,639
info so everyone loves dashboards this

00:05:28,110 --> 00:05:33,409
is an example of what we get I will

00:05:29,639 --> 00:05:33,409

YouTube URL: https://www.youtube.com/watch?v=YOW8XHoQ1mo


