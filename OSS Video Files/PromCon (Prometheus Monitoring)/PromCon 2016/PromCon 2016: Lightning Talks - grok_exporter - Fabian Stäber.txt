Title: PromCon 2016: Lightning Talks - grok_exporter - Fabian Stäber
Publication date: 2016-09-04
Playlist: PromCon 2016
Description: 
	* Abstract:

Fabian Stäber from ConSol explains how to export Prometheus metrics from arbitrary unstructured log data using the grok_exporter.

* Slides:

https://speakerdeck.com/fstab/grok-exporter

* PromCon website:

https://promcon.io/
Captions: 
	00:00:05,629 --> 00:00:13,019
so hi my name is Fabian I work for

00:00:09,950 --> 00:00:15,269
console in Munich and in this lightning

00:00:13,019 --> 00:00:19,050
talk I would I will introduce the groc

00:00:15,269 --> 00:00:20,699
exporter what is it about sometimes I

00:00:19,050 --> 00:00:24,000
mean like it or not but sometimes

00:00:20,699 --> 00:00:27,390
parsing log files is the only way to get

00:00:24,000 --> 00:00:29,580
useful white-box information out of an

00:00:27,390 --> 00:00:31,880
application so there's no other way to

00:00:29,580 --> 00:00:34,410
look inside what's what's happening and

00:00:31,880 --> 00:00:36,840
so what we want to do we have some lot

00:00:34,410 --> 00:00:39,660
lines and somehow want you go from block

00:00:36,840 --> 00:00:41,879
lines to some Prometheus metrics how are

00:00:39,660 --> 00:00:44,340
we going to do this there are two

00:00:41,879 --> 00:00:47,010
projects that one could use it is to

00:00:44,340 --> 00:00:50,789
that I'm aware of the more sophisticated

00:00:47,010 --> 00:00:53,219
one is Google's M tail which kind of

00:00:50,789 --> 00:00:55,610
defines some language where you can

00:00:53,219 --> 00:00:58,140
specify how to parse the log file with

00:00:55,610 --> 00:01:00,270
variables actions conditionals etc and

00:00:58,140 --> 00:01:02,730
it also supports more than just

00:01:00,270 --> 00:01:05,610
Prometheus stats the graphite collecti

00:01:02,730 --> 00:01:08,850
whatnot but when I had the task to do

00:01:05,610 --> 00:01:13,290
this I remembered the few years ago when

00:01:08,850 --> 00:01:15,659
this elks tech was very good leg lock

00:01:13,290 --> 00:01:18,180
files into elasticsearch we used grok

00:01:15,659 --> 00:01:20,400
but not to parse block lines and I

00:01:18,180 --> 00:01:22,439
thought can we just reuse this rock

00:01:20,400 --> 00:01:25,080
patterns and just make a simple bridge

00:01:22,439 --> 00:01:26,610
to like get the output of grog and put

00:01:25,080 --> 00:01:29,610
it into Prometheus and that's how this

00:01:26,610 --> 00:01:31,740
croc exporter was created so how does it

00:01:29,610 --> 00:01:35,130
look like it's basically this is an

00:01:31,740 --> 00:01:37,710
example configuration it defines in that

00:01:35,130 --> 00:01:39,509
example only a single metric a counter

00:01:37,710 --> 00:01:41,400
of course you can have more metrics and

00:01:39,509 --> 00:01:43,740
other metric types as well and this

00:01:41,400 --> 00:01:46,500
counter counts the number of lines

00:01:43,740 --> 00:01:48,479
matching this specific pattern here so

00:01:46,500 --> 00:01:50,909
if a line starts with the log level then

00:01:48,479 --> 00:01:53,430
a date a time a user in the number then

00:01:50,909 --> 00:01:55,200
the counter goes up so as all these

00:01:53,430 --> 00:01:57,060
lines in the example match this pattern

00:01:55,200 --> 00:02:00,090
the counter would be for after passing

00:01:57,060 --> 00:02:02,670
this thing these patterns lovely the

00:02:00,090 --> 00:02:05,340
daytime user number are actually regular

00:02:02,670 --> 00:02:07,229
expressions but the regular expressions

00:02:05,340 --> 00:02:09,300
are defined in a separate file in

00:02:07,229 --> 00:02:11,280
referenced here the fire of the

00:02:09,300 --> 00:02:13,350
directory containing the regular

00:02:11,280 --> 00:02:15,660
expression definitions is configured

00:02:13,350 --> 00:02:17,850
year with the patterns directory so why

00:02:15,660 --> 00:02:19,800
would you do that why would you like use

00:02:17,850 --> 00:02:21,840
names here instead of just putting the

00:02:19,800 --> 00:02:24,360
regular expressions directly there are

00:02:21,840 --> 00:02:27,030
two reasons why this is useful first

00:02:24,360 --> 00:02:29,400
regular expressions tend to be quite

00:02:27,030 --> 00:02:32,730
unreadable if they get more become more

00:02:29,400 --> 00:02:35,490
complex and if you did if you divide

00:02:32,730 --> 00:02:37,290
your log lines into reasonable chunks

00:02:35,490 --> 00:02:40,200
and give these chunks reasonable names

00:02:37,290 --> 00:02:42,120
it's much more easy to see what's going

00:02:40,200 --> 00:02:44,340
on here so it's I think with this line

00:02:42,120 --> 00:02:46,290
it's much more easy to see that this

00:02:44,340 --> 00:02:48,750
matches the structure of these log lines

00:02:46,290 --> 00:02:50,580
then if I had put their actual regulate

00:02:48,750 --> 00:02:53,090
the regular expressions here and the

00:02:50,580 --> 00:02:56,100
other reason why this is useful is

00:02:53,090 --> 00:02:59,540
reusability drug has been around for a

00:02:56,100 --> 00:03:01,920
while there are hundreds of predefined

00:02:59,540 --> 00:03:04,230
regular expressions for all kinds of

00:03:01,920 --> 00:03:07,050
things like this looks like i don't know

00:03:04,230 --> 00:03:09,450
java look for j looks like a lot of

00:03:07,050 --> 00:03:11,070
things and you can if you want to parse

00:03:09,450 --> 00:03:12,900
something that already exists you kid

00:03:11,070 --> 00:03:16,260
could just put the existing regular

00:03:12,900 --> 00:03:18,510
expression files here and reuse them so

00:03:16,260 --> 00:03:20,010
so far i guess it sounds quite simple

00:03:18,510 --> 00:03:22,770
and good but there's one more thing that

00:03:20,010 --> 00:03:25,020
I think makes drop really a good fit

00:03:22,770 --> 00:03:28,740
with prometheus and this is how you can

00:03:25,020 --> 00:03:30,870
deal with labels because in in permeate

00:03:28,740 --> 00:03:32,190
don't maybe don't only want to count

00:03:30,870 --> 00:03:34,140
glob lines you want to have some

00:03:32,190 --> 00:03:36,390
partition like you want to see how many

00:03:34,140 --> 00:03:38,730
errors are there how many warnings or

00:03:36,390 --> 00:03:40,830
how many lock lines match for user LS

00:03:38,730 --> 00:03:44,790
how many did match for user Bob and what

00:03:40,830 --> 00:03:46,950
you can do in groc you can give a

00:03:44,790 --> 00:03:48,900
pattern a neighbor like I said whatever

00:03:46,950 --> 00:03:51,180
matches the lock leather pattern here at

00:03:48,900 --> 00:03:53,910
the top I will make it available under

00:03:51,180 --> 00:03:56,790
the name severity and then i define find

00:03:53,910 --> 00:03:58,830
you that whatever ends up in my grog

00:03:56,790 --> 00:04:00,840
field severity should become a

00:03:58,830 --> 00:04:02,610
Prometheus label that I also called

00:04:00,840 --> 00:04:04,230
severity but you could give it another

00:04:02,610 --> 00:04:07,140
name if you want to use different names

00:04:04,230 --> 00:04:08,940
in prometheus and in drop so what

00:04:07,140 --> 00:04:11,220
happens now is still if you aggregate

00:04:08,940 --> 00:04:13,740
the counter you will see that it's for

00:04:11,220 --> 00:04:16,380
love lines but you can now also say how

00:04:13,740 --> 00:04:19,530
many what is my Brock example lines

00:04:16,380 --> 00:04:21,419
total counter by severity equals error

00:04:19,530 --> 00:04:24,210
and then you get three and if you say by

00:04:21,419 --> 00:04:26,190
severity equals morning you get one so I

00:04:24,210 --> 00:04:26,760
mean it's a bit of an artificial example

00:04:26,190 --> 00:04:28,830
but you can

00:04:26,760 --> 00:04:31,020
think of situations where this is really

00:04:28,830 --> 00:04:33,390
useful like separating by error code or

00:04:31,020 --> 00:04:36,780
by the name of a java exception or stuff

00:04:33,390 --> 00:04:40,220
like that so that's a quick introduction

00:04:36,780 --> 00:04:43,740
you find this thing on Twitter I just

00:04:40,220 --> 00:04:46,920
published of the first beta few days ago

00:04:43,740 --> 00:04:48,690
and yeah I'd be happy if somebody apart

00:04:46,920 --> 00:04:50,430
from me also finds it useful so if you

00:04:48,690 --> 00:04:53,040
like it and can provide some feedback

00:04:50,430 --> 00:04:55,350
and would like to check it out I would

00:04:53,040 --> 00:04:57,830
be happy to get some feedback of you

00:04:55,350 --> 00:04:57,830

YouTube URL: https://www.youtube.com/watch?v=jFX8BVT4V_g


