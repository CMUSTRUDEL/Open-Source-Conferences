Title: PromCon 2018: Lightning Talks - Day 2
Publication date: 2018-11-22
Playlist: PromCon 2018
Description: 
	#1 - Customizing Alertmanager Notifications
Speaker: Tobias Schmidt

#2 - How to Contribute to Open Source Software
Speakers:

Sneha Inguva
Daisy Tsang

#3 - Easy Prometheus Deployment with Ansible
Speaker: Pawel Krupa

#4 - Using Graphite as Remote Storage
Speaker: Thibault Chataigner

#5 - Grafana Logging
Speaker: Tom Wilkie

#6 - Roll Your Own Service Discovery
Speaker: Simon Pasquier

#7 - GSoC Update
Speaker: Ganesh Vernekar

#8 - Evaluating Prometheus Knowledge
Speaker: Brian Brazil

#9 - Prometheus as Code
Speaker: Yanara Velásquez Salazar

#10 - Scrape-Time Rules
Speaker: Julien Pivotto

#11 - Hacking Capitalism for Fun and Profit
Speaker: Martín Ferrari
Captions: 
	00:00:10,219 --> 00:00:14,389
oh hey uh sir yesterday Stewart my

00:00:12,950 --> 00:00:16,640
colleague at SoundCloud I gave a talk

00:00:14,389 --> 00:00:18,380
about alert manager and the life of an

00:00:16,640 --> 00:00:20,660
alert and he said like someone should

00:00:18,380 --> 00:00:24,110
totally talk about how to do it in slack

00:00:20,660 --> 00:00:26,029
and I said yeah do it unfortunately had

00:00:24,110 --> 00:00:29,570
some beers and I lost so now I give this

00:00:26,029 --> 00:00:30,680
I'm giving this talk so yeah how to

00:00:29,570 --> 00:00:32,230
customize here a lot manager

00:00:30,680 --> 00:00:34,550
notifications actually not really hard

00:00:32,230 --> 00:00:37,010
and yeah I guess the question most

00:00:34,550 --> 00:00:38,860
people have like how can I receive nicer

00:00:37,010 --> 00:00:41,600
select notifications from alert manager

00:00:38,860 --> 00:00:44,510
the short answer to that is don't

00:00:41,600 --> 00:00:46,999
disable slack and use a ticketing system

00:00:44,510 --> 00:00:50,539
you really don't want to use slack for

00:00:46,999 --> 00:00:52,069
that it is not at all Tork I will talk

00:00:50,539 --> 00:00:54,289
about this a little bit more and how to

00:00:52,069 --> 00:00:55,909
actually do it but to actually give you

00:00:54,289 --> 00:00:58,190
some aversion or like idea why you

00:00:55,909 --> 00:01:00,800
really should think about using a

00:00:58,190 --> 00:01:02,809
ticketing system instead for one keep

00:01:00,800 --> 00:01:04,909
communication channels like slack for

00:01:02,809 --> 00:01:07,490
humans and not spam them there's like

00:01:04,909 --> 00:01:08,930
automatic notifications because at some

00:01:07,490 --> 00:01:11,780
point no one will beat you a Channel

00:01:08,930 --> 00:01:13,220
anymore it avoids alerting fatigue we

00:01:11,780 --> 00:01:15,410
have like some people we receive

00:01:13,220 --> 00:01:16,970
constantly alerts in that channel and I

00:01:15,410 --> 00:01:18,230
know that just don't look anymore like

00:01:16,970 --> 00:01:19,490
when I our sim like hey have you ever

00:01:18,230 --> 00:01:20,990
looked in this morning they're just like

00:01:19,490 --> 00:01:22,490
yeah I get so many of them I don't look

00:01:20,990 --> 00:01:25,040
into them so it really doesn't make

00:01:22,490 --> 00:01:26,930
sense to use slack for that also you

00:01:25,040 --> 00:01:28,970
should really consider fixing issues

00:01:26,930 --> 00:01:31,040
where you get alerts about like in the

00:01:28,970 --> 00:01:33,230
same way you treat any other work like

00:01:31,040 --> 00:01:34,760
have a ticket system you assigned

00:01:33,230 --> 00:01:37,010
someone as assigned to them someone

00:01:34,760 --> 00:01:39,860
takes care of it you schedule them and

00:01:37,010 --> 00:01:42,010
your next sprint you can track time you

00:01:39,860 --> 00:01:44,750
manage us we'll be happy and so on and

00:01:42,010 --> 00:01:46,520
yeah also like if you get a notification

00:01:44,750 --> 00:01:49,370
or like an alert which is not really

00:01:46,520 --> 00:01:51,620
actionable someone do also treat that as

00:01:49,370 --> 00:01:53,720
a ticket like then look into it like why

00:01:51,620 --> 00:01:56,480
wasn't actionable and like fix it or

00:01:53,720 --> 00:01:58,030
like we moved the alert and there is

00:01:56,480 --> 00:02:00,890
like an integration for alert manager

00:01:58,030 --> 00:02:04,190
for gyro give them it's like so popular

00:02:00,890 --> 00:02:06,560
so like you can look into that so if you

00:02:04,190 --> 00:02:08,840
really still want to use like you can

00:02:06,560 --> 00:02:10,610
write your own templates in load manager

00:02:08,840 --> 00:02:13,849
you are not like bound to whatever is

00:02:10,610 --> 00:02:16,280
the default which might or might not

00:02:13,849 --> 00:02:18,110
work for you so what you need is you

00:02:16,280 --> 00:02:20,210
understood llamo as I heard that's

00:02:18,110 --> 00:02:22,700
really complicated you also need to

00:02:20,210 --> 00:02:23,870
understand go templating it's also for

00:02:22,700 --> 00:02:28,040
some people I guess

00:02:23,870 --> 00:02:29,659
new and not that easy you I guess it

00:02:28,040 --> 00:02:31,069
helps if you go slack has like a message

00:02:29,659 --> 00:02:33,140
builder where you can like play around

00:02:31,069 --> 00:02:34,730
with LexA format you want to have there

00:02:33,140 --> 00:02:36,110
is an alert manager configuration that

00:02:34,730 --> 00:02:39,080
also what you want to look or like have

00:02:36,110 --> 00:02:41,000
opened to like know what yeah what

00:02:39,080 --> 00:02:42,230
options are available and obviously you

00:02:41,000 --> 00:02:45,290
need permissions to actually change your

00:02:42,230 --> 00:02:46,700
load manager contract example that's

00:02:45,290 --> 00:02:49,549
something we have at SoundCloud right

00:02:46,700 --> 00:02:50,930
now for our channel I guess it's a

00:02:49,549 --> 00:02:53,060
little bit more readable than or like a

00:02:50,930 --> 00:02:55,340
lot more readable to some people than

00:02:53,060 --> 00:02:56,989
the default one so it sounds loud we

00:02:55,340 --> 00:02:59,390
have like always a summary and the

00:02:56,989 --> 00:03:01,040
description for an alert it also has a

00:02:59,390 --> 00:03:04,310
name so that's what you see and on the

00:03:01,040 --> 00:03:07,190
top we group alerts and yeah we remove

00:03:04,310 --> 00:03:09,319
most of the labels and that and that

00:03:07,190 --> 00:03:10,459
view because we don't we just needed a

00:03:09,319 --> 00:03:12,440
notification and not like all the

00:03:10,459 --> 00:03:14,359
details what you might find interesting

00:03:12,440 --> 00:03:15,709
we have then like these nice buttons to

00:03:14,359 --> 00:03:19,250
like immediately go to the one book and

00:03:15,709 --> 00:03:21,200
dashboard or the source of the alert how

00:03:19,250 --> 00:03:23,840
did we do this so an alert manager you

00:03:21,200 --> 00:03:25,549
only need to like one thing the template

00:03:23,840 --> 00:03:27,950
part are so you want to load some

00:03:25,549 --> 00:03:29,750
templates from somewhere and obviously

00:03:27,950 --> 00:03:31,340
here we want to like work on the select

00:03:29,750 --> 00:03:35,900
configure does this particular select

00:03:31,340 --> 00:03:38,209
config look like so you can change the

00:03:35,900 --> 00:03:39,709
title and text and you can attach

00:03:38,209 --> 00:03:41,629
actions so like actions are these

00:03:39,709 --> 00:03:44,780
buttons so there you can see an example

00:03:41,629 --> 00:03:48,440
of like we have an all our alerts a one

00:03:44,780 --> 00:03:50,389
book URL a notation you can then access

00:03:48,440 --> 00:03:52,340
that common annotation because it's like

00:03:50,389 --> 00:03:54,290
the same for all alerts and this place a

00:03:52,340 --> 00:03:55,549
tan button if that is empty the button

00:03:54,290 --> 00:03:58,639
won't be displayed so it's pretty

00:03:55,549 --> 00:04:02,269
convenient these fields are like these

00:03:58,639 --> 00:04:04,280
nicer the states and our grouping these

00:04:02,269 --> 00:04:05,690
are fields so you can attach like

00:04:04,280 --> 00:04:07,970
different fields in that case I'm using

00:04:05,690 --> 00:04:10,549
a template which I will show in a second

00:04:07,970 --> 00:04:12,889
and yeah we as I said we have like a

00:04:10,549 --> 00:04:14,359
common description annotation which is

00:04:12,889 --> 00:04:16,880
available or must be available be

00:04:14,359 --> 00:04:19,880
unfortunate and all our alerts so you

00:04:16,880 --> 00:04:22,699
can just use that as a text just to give

00:04:19,880 --> 00:04:24,229
you an example and the next oops so

00:04:22,699 --> 00:04:26,300
that's how like it the template looks

00:04:24,229 --> 00:04:27,650
like you can like define more

00:04:26,300 --> 00:04:29,539
complicated things which would become

00:04:27,650 --> 00:04:32,090
too long to like put them into that

00:04:29,539 --> 00:04:32,960
alert manager convict directly you can

00:04:32,090 --> 00:04:34,760
like define

00:04:32,960 --> 00:04:37,280
templates for that and then access them

00:04:34,760 --> 00:04:37,840
so here for example we build like a

00:04:37,280 --> 00:04:40,150
little

00:04:37,840 --> 00:04:43,510
more complicated typos out of the alert

00:04:40,150 --> 00:04:45,669
name and the summary of the alert we use

00:04:43,510 --> 00:04:47,050
alert States you can then use like

00:04:45,669 --> 00:04:49,620
anything like from code template

00:04:47,050 --> 00:04:52,389
available like ranges if statements

00:04:49,620 --> 00:04:55,330
functions like slang and those like a

00:04:52,389 --> 00:04:57,010
little bit more complicated templates

00:04:55,330 --> 00:04:59,830
yeah and that's pretty much it

00:04:57,010 --> 00:05:07,300
afterwards you end up is nice on nice

00:04:59,830 --> 00:05:10,510
and notifications cool thank you hi my

00:05:07,300 --> 00:05:12,970
name is Sneha and we're here today to

00:05:10,510 --> 00:05:17,410
talk about baby steps to open source

00:05:12,970 --> 00:05:18,729
software contribution this may or may

00:05:17,410 --> 00:05:20,860
not be an elephant in the room

00:05:18,729 --> 00:05:23,919
either way someone yesterday asked about

00:05:20,860 --> 00:05:27,310
diversity so we felt like as members of

00:05:23,919 --> 00:05:29,919
underrepresented groups as you can tell

00:05:27,310 --> 00:05:33,400
probably figure to be interesting to

00:05:29,919 --> 00:05:36,160
address so as a beginner it can often be

00:05:33,400 --> 00:05:37,810
intimidating to begin contributing to

00:05:36,160 --> 00:05:39,850
open source software namely you might be

00:05:37,810 --> 00:05:41,729
like where do I begin what if I'm

00:05:39,850 --> 00:05:57,930
ridiculed what if I ask a dumb question

00:05:41,729 --> 00:05:57,930
all common questions and concerns a

00:06:00,570 --> 00:06:05,800
little about myself I'm a software

00:06:03,039 --> 00:06:07,870
engineer and I've been a long time user

00:06:05,800 --> 00:06:09,760
of open source software I've always

00:06:07,870 --> 00:06:11,289
liked the idea of being able to use it

00:06:09,760 --> 00:06:13,180
freely and to be able to study it

00:06:11,289 --> 00:06:15,510
despite that the thought of actually

00:06:13,180 --> 00:06:19,090
contributing was very daunting to me

00:06:15,510 --> 00:06:23,110
hello it's working ok great

00:06:19,090 --> 00:06:25,300
hi well I have formerly an electrical

00:06:23,110 --> 00:06:28,000
engineer who randomly got into software

00:06:25,300 --> 00:06:30,820
engineering I sadly was not a longtime

00:06:28,000 --> 00:06:36,460
user of open source software in my youth

00:06:30,820 --> 00:06:38,050
it just kind of happened recently some

00:06:36,460 --> 00:06:40,060
questions you might ask yourself when

00:06:38,050 --> 00:06:42,970
starting out is where do I begin how do

00:06:40,060 --> 00:06:45,880
I start contributing the first step

00:06:42,970 --> 00:06:47,979
would be to discover projects or merely

00:06:45,880 --> 00:06:49,420
hearing about it for me personally I had

00:06:47,979 --> 00:06:51,160
joined a goal earning me

00:06:49,420 --> 00:06:53,110
group and that was how I first heard

00:06:51,160 --> 00:06:55,030
about Prometheus other ways of

00:06:53,110 --> 00:06:56,950
discovering projects might be to talk to

00:06:55,030 --> 00:06:58,720
your friends and colleagues or browse a

00:06:56,950 --> 00:07:01,480
website I just learned about yesterday

00:06:58,720 --> 00:07:03,250
caught github Help Wanted calm when

00:07:01,480 --> 00:07:05,980
vetting projects you you might want to

00:07:03,250 --> 00:07:07,840
ask some key questions such as is the

00:07:05,980 --> 00:07:10,810
project well maintained is the community

00:07:07,840 --> 00:07:12,790
friendly and welcoming is are there

00:07:10,810 --> 00:07:16,270
clear contributing guidelines is there a

00:07:12,790 --> 00:07:18,340
code of conduct here are some examples

00:07:16,270 --> 00:07:20,980
of projects that means Nia have heard

00:07:18,340 --> 00:07:23,260
good things about and have been

00:07:20,980 --> 00:07:26,350
interested in and personally I have

00:07:23,260 --> 00:07:27,880
found the community of Prometheus to be

00:07:26,350 --> 00:07:30,040
very friendly and welcoming and I've

00:07:27,880 --> 00:07:34,240
include appreciated their diversity

00:07:30,040 --> 00:07:37,630
inclusion initiatives step two how to

00:07:34,240 --> 00:07:39,310
get involved so you know typically it's

00:07:37,630 --> 00:07:41,680
a good idea to try to run the software

00:07:39,310 --> 00:07:44,350
get it running often try to break it

00:07:41,680 --> 00:07:47,170
here's an issue that I submitted after I

00:07:44,350 --> 00:07:49,720
added emojis to graph on ax dashboard

00:07:47,170 --> 00:07:52,450
names which I guess hasn't been fixed

00:07:49,720 --> 00:07:55,420
unfortunately I should probably submit a

00:07:52,450 --> 00:07:57,580
pull request to oh you can also read the

00:07:55,420 --> 00:07:59,350
documentation and then frequently I find

00:07:57,580 --> 00:08:01,510
it helpful to reach out to contributors

00:07:59,350 --> 00:08:04,570
just either on Twitter or other forms of

00:08:01,510 --> 00:08:08,620
social media slack groups IRC people are

00:08:04,570 --> 00:08:11,350
often very friendly the third step would

00:08:08,620 --> 00:08:12,360
be to submit your first full request I'm

00:08:11,350 --> 00:08:15,280
a good place to start would be

00:08:12,360 --> 00:08:17,440
documentation because as a project grows

00:08:15,280 --> 00:08:18,820
larger and larger the gap between users

00:08:17,440 --> 00:08:22,450
and developers grow bigger and

00:08:18,820 --> 00:08:24,880
documentation is very important and then

00:08:22,450 --> 00:08:26,890
you might want to look up issues that

00:08:24,880 --> 00:08:28,870
are tagged with Help Wanted here's an

00:08:26,890 --> 00:08:30,700
example of something that me and Sania

00:08:28,870 --> 00:08:35,229
had done for Prometheus where we added a

00:08:30,700 --> 00:08:36,520
feature to prom tool and and like and

00:08:35,229 --> 00:08:38,710
you might and you could check out a

00:08:36,520 --> 00:08:41,020
github Help Wanted comm where you could

00:08:38,710 --> 00:08:44,770
kind of filter for issues by language

00:08:41,020 --> 00:08:47,830
and github labels yay

00:08:44,770 --> 00:08:49,810
but what can you do you not meaning

00:08:47,830 --> 00:08:52,240
people of underrepresented groups but

00:08:49,810 --> 00:08:53,980
perhaps more experienced contributors

00:08:52,240 --> 00:08:55,510
you can be proactive

00:08:53,980 --> 00:08:57,460
of course I think before I even

00:08:55,510 --> 00:08:59,500
considered ever wanting to contribute to

00:08:57,460 --> 00:09:01,480
anything someone reached out to me and

00:08:59,500 --> 00:09:02,680
asked if I was interested which kind of

00:09:01,480 --> 00:09:05,770
got the ball rolling got me

00:09:02,680 --> 00:09:08,050
about it you can offer to review perhaps

00:09:05,770 --> 00:09:09,160
offered a pair of program also super

00:09:08,050 --> 00:09:12,310
helpful

00:09:09,160 --> 00:09:13,899
I think Jonas had suggested that quite

00:09:12,310 --> 00:09:16,360
often it's very easy for people to fix

00:09:13,899 --> 00:09:20,110
beginner-friendly issues fairly quickly

00:09:16,360 --> 00:09:22,209
but often leaving them around so that is

00:09:20,110 --> 00:09:23,560
great and as a company Julius touched

00:09:22,209 --> 00:09:25,240
upon this yesterday it can be

00:09:23,560 --> 00:09:27,520
time-consuming to work on open source

00:09:25,240 --> 00:09:29,470
software so as a company have the luxury

00:09:27,520 --> 00:09:33,310
of having employees work on open source

00:09:29,470 --> 00:09:37,660
software a great way to get involved or

00:09:33,310 --> 00:09:39,130
pay people to mentor others the

00:09:37,660 --> 00:09:40,990
takeaways from our talk is that

00:09:39,130 --> 00:09:43,149
contributing to open source can be very

00:09:40,990 --> 00:09:44,860
hard and time-consuming but don't be

00:09:43,149 --> 00:09:47,830
afraid to ask for help and if you are in

00:09:44,860 --> 00:09:48,040
a position to help please do it thank

00:09:47,830 --> 00:09:54,820
you

00:09:48,040 --> 00:09:57,190
yay on a site

00:09:54,820 --> 00:09:59,230
shameless plug I made a little zine

00:09:57,190 --> 00:10:01,000
about the basics of prompt QL I thought

00:09:59,230 --> 00:10:02,920
it would be a good way so like a pitch

00:10:01,000 --> 00:10:04,240
Prometheus your company or on board new

00:10:02,920 --> 00:10:11,800
people so if you want one you can just

00:10:04,240 --> 00:10:15,209
come to me after so I'll try to keep it

00:10:11,800 --> 00:10:19,330
short it's only seven roles of unstable

00:10:15,209 --> 00:10:22,240
so I'm Pavel Koopa I'm working as an

00:10:19,330 --> 00:10:23,800
open ship developer at Red Hat but what

00:10:22,240 --> 00:10:26,380
I am presenting right now it's not sure

00:10:23,800 --> 00:10:30,060
right how to work it started before I

00:10:26,380 --> 00:10:32,440
started working at Red Hat so as we know

00:10:30,060 --> 00:10:35,830
Prometheus can be installed in various

00:10:32,440 --> 00:10:38,589
ways for example for in kubernetes so go

00:10:35,830 --> 00:10:40,839
to dr. Frederic or someone else we have

00:10:38,589 --> 00:10:45,130
a distro package there was a guy from

00:10:40,839 --> 00:10:47,440
Debian and we can compile it from source

00:10:45,130 --> 00:10:49,630
and everywhere but I will focus on

00:10:47,440 --> 00:10:53,170
github release binary because that's the

00:10:49,630 --> 00:10:55,570
one I'm using with ansible but there are

00:10:53,170 --> 00:10:58,120
some problems run it in like hundred

00:10:55,570 --> 00:11:00,910
nodes you will have ones and run with

00:10:58,120 --> 00:11:04,029
Sally Knox and run with system D those

00:11:00,910 --> 00:11:08,440
are not not exactly contributed in

00:11:04,029 --> 00:11:12,120
documentation so in previous company we

00:11:08,440 --> 00:11:16,360
decided to have something like multi

00:11:12,120 --> 00:11:20,050
multi CPU deploy on

00:11:16,360 --> 00:11:21,399
various various nodes and we wanted it

00:11:20,050 --> 00:11:24,250
to have almost zero configuration

00:11:21,399 --> 00:11:27,399
deployment it we wanted it to be easy we

00:11:24,250 --> 00:11:30,399
wanted to have easy ease of a management

00:11:27,399 --> 00:11:32,769
of this and some maybe a rope checking

00:11:30,399 --> 00:11:35,620
and maybe a little increased security

00:11:32,769 --> 00:11:36,730
for that so how do we configure

00:11:35,620 --> 00:11:39,490
prometheus

00:11:36,730 --> 00:11:42,459
we have llamó configuration file and we

00:11:39,490 --> 00:11:44,940
have like overs which can be included in

00:11:42,459 --> 00:11:50,019
that file or so common light parameters

00:11:44,940 --> 00:11:52,560
so with ansible we have like nothing but

00:11:50,019 --> 00:11:57,519
this nothing with unstable role

00:11:52,560 --> 00:12:00,730
translates to the one slide to my to my

00:11:57,519 --> 00:12:02,920
left so you're right and this is

00:12:00,730 --> 00:12:05,019
basically what is rendered when you are

00:12:02,920 --> 00:12:07,810
using constable Prometheus roll from

00:12:05,019 --> 00:12:10,209
cloud load coming and if you want to

00:12:07,810 --> 00:12:13,540
extend it a little bit we have the same

00:12:10,209 --> 00:12:16,180
scheme to to your to my right to your

00:12:13,540 --> 00:12:19,930
left versus be unstable one which easily

00:12:16,180 --> 00:12:21,730
translates to to Prometheus one if you

00:12:19,930 --> 00:12:26,350
look at it it's basically the same one

00:12:21,730 --> 00:12:28,269
to one with some additions so as for CLI

00:12:26,350 --> 00:12:31,180
parameters which is wrapped it into

00:12:28,269 --> 00:12:33,970
system D file so we have like unseeable

00:12:31,180 --> 00:12:39,010
custom configuration to the left you're

00:12:33,970 --> 00:12:41,860
right so yeah you're sorry and this was

00:12:39,010 --> 00:12:44,860
translated to the service file which

00:12:41,860 --> 00:12:47,860
also have additional additional security

00:12:44,860 --> 00:12:50,860
things like private temporary private

00:12:47,860 --> 00:12:52,329
temp directory or no new privileges and

00:12:50,860 --> 00:12:55,480
everything like that so we basically

00:12:52,329 --> 00:13:01,810
have a sandbox with system D without

00:12:55,480 --> 00:13:04,420
containers and users sometimes have some

00:13:01,810 --> 00:13:07,720
sometimes make errors so ansible can

00:13:04,420 --> 00:13:11,589
have this nifty feature of validation so

00:13:07,720 --> 00:13:15,250
we basically have a validation of a file

00:13:11,589 --> 00:13:16,990
with prompt all also at the beginning of

00:13:15,250 --> 00:13:19,660
the execution of a role we are using

00:13:16,990 --> 00:13:22,060
pre-flight checks which are embedded in

00:13:19,660 --> 00:13:26,620
a role to prevent some configurations

00:13:22,060 --> 00:13:28,480
mishaps sort of security so automated

00:13:26,620 --> 00:13:29,889
check something for downloading free

00:13:28,480 --> 00:13:33,160
binary from

00:13:29,889 --> 00:13:37,389
from github we are using dedicated to

00:13:33,160 --> 00:13:41,230
system user for every binary for example

00:13:37,389 --> 00:13:43,449
note exporter is also we are using

00:13:41,230 --> 00:13:45,790
capabilities for vests where it's also

00:13:43,449 --> 00:13:49,239
supports limited support for selling

00:13:45,790 --> 00:13:52,809
notes and as I said some sandboxing and

00:13:49,239 --> 00:13:54,519
the one most important part of it it's

00:13:52,809 --> 00:13:57,790
like compatibility with Def SEC IO

00:13:54,519 --> 00:13:59,829
project if you if you see it's one of

00:13:57,790 --> 00:14:04,600
the biggest security related ansible

00:13:59,829 --> 00:14:08,169
project brace those are actually right

00:14:04,600 --> 00:14:10,449
now roles which I will maintain Inc so

00:14:08,169 --> 00:14:12,279
if someone wants to maintain something

00:14:10,449 --> 00:14:18,249
else please

00:14:12,279 --> 00:14:21,009
come later or write me and everything in

00:14:18,249 --> 00:14:23,649
this ansible roles is tested with CI

00:14:21,009 --> 00:14:25,989
system based on Travis I'm using also

00:14:23,649 --> 00:14:29,169
molecule da current talks and is tested

00:14:25,989 --> 00:14:31,059
on six platforms and with current

00:14:29,169 --> 00:14:36,429
unstable version previous one and

00:14:31,059 --> 00:14:36,939
sometimes we even the student to to

00:14:36,429 --> 00:14:40,569
laters

00:14:36,939 --> 00:14:42,959
okay so this is the demo site if you

00:14:40,569 --> 00:14:46,860
want to go let's please check it

00:14:42,959 --> 00:14:49,449
basically those roles were also used for

00:14:46,860 --> 00:14:51,759
security update from what I gathered for

00:14:49,449 --> 00:14:54,160
prometheus and if you don't want if you

00:14:51,759 --> 00:14:56,709
want to use ansible and want to see the

00:14:54,160 --> 00:14:59,559
output please go and use era unstable

00:14:56,709 --> 00:15:07,660
run analysis it's pretty good okay thank

00:14:59,559 --> 00:15:10,029
you hi hi everyone so I'm - I'm working

00:15:07,660 --> 00:15:13,029
as a serviette creature and today I will

00:15:10,029 --> 00:15:17,799
talk about using primitives and graphite

00:15:13,029 --> 00:15:22,230
as a remote storage so first a little

00:15:17,799 --> 00:15:27,609
bit of context so yes later

00:15:22,230 --> 00:15:29,350
no just years ago a Twitter we were

00:15:27,609 --> 00:15:32,829
using a single time series that there is

00:15:29,350 --> 00:15:36,100
that was graphite and as you expect we

00:15:32,829 --> 00:15:41,379
faced some issues some of them not all

00:15:36,100 --> 00:15:43,120
of them but some of them was but was a

00:15:41,379 --> 00:15:45,550
non flexible quake

00:15:43,120 --> 00:15:49,300
language not from that like from trail

00:15:45,550 --> 00:15:52,839
and because it's that separate that a

00:15:49,300 --> 00:15:54,610
string data model and you have to use a

00:15:52,839 --> 00:15:58,470
lot of WorldCat if you want to do

00:15:54,610 --> 00:16:01,330
complex aggregation and because it's a

00:15:58,470 --> 00:16:06,220
because it's a centralized service a

00:16:01,330 --> 00:16:09,670
Twitter if it's done all the alerts can

00:16:06,220 --> 00:16:12,790
be evaluated anymore for the world

00:16:09,670 --> 00:16:18,070
company so this is an issue and we were

00:16:12,790 --> 00:16:22,870
looking for another solution so here

00:16:18,070 --> 00:16:26,320
here come parameters and primitives

00:16:22,870 --> 00:16:29,200
school profile is very flexible powerful

00:16:26,320 --> 00:16:32,980
for aggregation labelled we love levels

00:16:29,200 --> 00:16:35,710
and and we can just don't realize our

00:16:32,980 --> 00:16:39,310
definitions so cool itself or problems

00:16:35,710 --> 00:16:41,800
but some of our users would like to see

00:16:39,310 --> 00:16:46,360
a time series for several months and

00:16:41,800 --> 00:16:49,990
maybe several years and and because we

00:16:46,360 --> 00:16:54,279
have hundreds of million of time series

00:16:49,990 --> 00:16:56,860
we can store them for a very long time

00:16:54,279 --> 00:16:59,920
with Prometheus and we need done

00:16:56,860 --> 00:17:03,400
something and primitives don't do done

00:16:59,920 --> 00:17:07,360
something so at some point we need both

00:17:03,400 --> 00:17:10,300
of them primitives for collect data

00:17:07,360 --> 00:17:13,630
aggregate matrix and distribute our

00:17:10,300 --> 00:17:17,709
lighting and graphite for done something

00:17:13,630 --> 00:17:19,839
and long-term storage so we look at the

00:17:17,709 --> 00:17:22,000
documentation of practice and there is a

00:17:19,839 --> 00:17:27,970
remote storage API with remote write

00:17:22,000 --> 00:17:29,980
Real Madrid and we folk the removing the

00:17:27,970 --> 00:17:38,770
documentation for remote write and

00:17:29,980 --> 00:17:41,410
graphite and we were able to write into

00:17:38,770 --> 00:17:45,160
graphite using a default pass that is

00:17:41,410 --> 00:17:47,590
just a translation using all the bells

00:17:45,160 --> 00:17:51,310
name and values in alphabetic order so

00:17:47,590 --> 00:17:53,600
it works but from aggression people were

00:17:51,310 --> 00:17:56,130
using graphite

00:17:53,600 --> 00:17:59,100
thousands of - words and alerts using

00:17:56,130 --> 00:18:02,610
graphite and so as we want to customize

00:17:59,100 --> 00:18:05,309
the path and because we want to at some

00:18:02,610 --> 00:18:08,070
point using buses bus solution at the

00:18:05,309 --> 00:18:12,150
same time so we influence the feature

00:18:08,070 --> 00:18:16,440
and you can match your matrix using

00:18:12,150 --> 00:18:18,050
labels and to select the template to

00:18:16,440 --> 00:18:21,120
write in graphite

00:18:18,050 --> 00:18:23,610
yes that's cool we can we can customize

00:18:21,120 --> 00:18:28,500
how we write from primitives to graphite

00:18:23,610 --> 00:18:30,390
and now what what what do we do we have

00:18:28,500 --> 00:18:34,890
application or primitives the scrap it

00:18:30,390 --> 00:18:38,190
and really we use remote right through

00:18:34,890 --> 00:18:40,470
graphite for long term storage but if

00:18:38,190 --> 00:18:43,040
people want to graph this data they

00:18:40,470 --> 00:18:46,880
still need to use graphite and not a

00:18:43,040 --> 00:18:51,360
distance is a solution so we implemented

00:18:46,880 --> 00:18:53,850
also the remote read API so that our

00:18:51,360 --> 00:18:58,110
users only deal with parameters and

00:18:53,850 --> 00:19:00,600
don't stick graphite anymore here's an

00:18:58,110 --> 00:19:03,360
example of primitives that has been a

00:19:00,600 --> 00:19:07,490
statute to you hours ago and we are

00:19:03,360 --> 00:19:09,990
craving a time series for one year so

00:19:07,490 --> 00:19:14,370
you have to understand that you can't

00:19:09,990 --> 00:19:17,520
create the world for four years because

00:19:14,370 --> 00:19:23,580
you'll break your practice but if you do

00:19:17,520 --> 00:19:26,640
it with some vacation it's okay to to

00:19:23,580 --> 00:19:30,390
query data that is not into primitives

00:19:26,640 --> 00:19:33,929
anymore so yes and now our users are

00:19:30,390 --> 00:19:35,640
just using primitives and that I'm some

00:19:33,929 --> 00:19:38,520
teams had quitted through migrate from

00:19:35,640 --> 00:19:42,720
graphite through the combination of

00:19:38,520 --> 00:19:49,140
permutation and graphite here's some

00:19:42,720 --> 00:19:52,850
numbers but how we use it we have about

00:19:49,140 --> 00:19:56,790
a hundred time series infirmities and

00:19:52,850 --> 00:19:58,260
only search the remote adapter the top

00:19:56,790 --> 00:20:02,820
application

00:19:58,260 --> 00:20:06,720
the between the two services and yeah so

00:20:02,820 --> 00:20:09,300
you can look at or get reports for the

00:20:06,720 --> 00:20:15,540
open source it's a focus from the

00:20:09,300 --> 00:20:17,610
combination of practice thank you so I

00:20:15,540 --> 00:20:19,470
wrote these slides like two hours ago

00:20:17,610 --> 00:20:21,480
and obviously I've not rehearse this

00:20:19,470 --> 00:20:22,470
so hopefully often time David dropped

00:20:21,480 --> 00:20:24,120
the bombshell this morning that we're

00:20:22,470 --> 00:20:26,400
working on logging and gave a bit of a

00:20:24,120 --> 00:20:28,530
demo there's a bit of a backstory I

00:20:26,400 --> 00:20:30,780
actually alluded to in prom con talk

00:20:28,530 --> 00:20:32,160
last year so if you were here you would

00:20:30,780 --> 00:20:33,750
remember that David and I started a

00:20:32,160 --> 00:20:35,790
company called cause all we wanted to do

00:20:33,750 --> 00:20:38,880
metrics logging and tracing in a single

00:20:35,790 --> 00:20:41,250
platform and then you know the kind of

00:20:38,880 --> 00:20:43,830
the causal pitch was very much this is

00:20:41,250 --> 00:20:46,070
your instant with incident response flow

00:20:43,830 --> 00:20:49,340
so you start by getting alert in slack

00:20:46,070 --> 00:20:51,930
and then you go to your dashboards and

00:20:49,340 --> 00:20:52,980
then you go to the Explorer view you can

00:20:51,930 --> 00:20:54,270
see we're slowly getting through this

00:20:52,980 --> 00:20:56,460
previously that would have been the

00:20:54,270 --> 00:20:58,590
Prometheus UI you customize your alert

00:20:56,460 --> 00:21:00,150
your dashboard a little bit to really

00:20:58,590 --> 00:21:01,620
drill into what's gone wrong and then

00:21:00,150 --> 00:21:04,020
eventually you look at the logs for the

00:21:01,620 --> 00:21:05,460
relevant service and then maybe some

00:21:04,020 --> 00:21:08,100
traces and you fix the bug so this was

00:21:05,460 --> 00:21:09,270
the whole idea behind causal one of the

00:21:08,100 --> 00:21:10,620
things I quite liked when I showed this

00:21:09,270 --> 00:21:12,630
picture if I showed this picture last

00:21:10,620 --> 00:21:14,940
year these were six different services

00:21:12,630 --> 00:21:17,010
and now there's just two you know we're

00:21:14,940 --> 00:21:18,930
we're slowly getting this kind of

00:21:17,010 --> 00:21:20,070
workflow that we really wanted and then

00:21:18,930 --> 00:21:22,440
this happened

00:21:20,070 --> 00:21:24,710
Raj if he's here and he's very kind

00:21:22,440 --> 00:21:27,330
enough to invite us to join gravano labs

00:21:24,710 --> 00:21:30,540
and they've they've really given us a

00:21:27,330 --> 00:21:31,980
lot of support in this vision so what is

00:21:30,540 --> 00:21:33,780
the idea behind the logging stuff well

00:21:31,980 --> 00:21:35,880
prometheus is data model is lovely and

00:21:33,780 --> 00:21:38,880
simple easy to explain you've got a set

00:21:35,880 --> 00:21:42,840
of label values points to a time indexed

00:21:38,880 --> 00:21:44,040
array of float64 values so the logging

00:21:42,840 --> 00:21:45,030
idea that we're going with we don't have

00:21:44,040 --> 00:21:47,550
a name for it yet so we're just calling

00:21:45,030 --> 00:21:49,230
it grow phone or logging is the same you

00:21:47,550 --> 00:21:51,750
have a set of label values and it points

00:21:49,230 --> 00:21:54,900
to a time indexed stream of log lines

00:21:51,750 --> 00:21:58,260
it's it's it's basically Prometheus for

00:21:54,900 --> 00:22:00,060
logs if you like okay so how do you get

00:21:58,260 --> 00:22:02,670
these label values well we just used

00:22:00,060 --> 00:22:04,620
Prometheus we've entered the service

00:22:02,670 --> 00:22:07,710
discovery and relabeling packages into

00:22:04,620 --> 00:22:09,390
something I'm calling prom tale it's

00:22:07,710 --> 00:22:10,650
it's on every machine as a well we run

00:22:09,390 --> 00:22:12,120
on cue Bonetti so it's it's on every

00:22:10,650 --> 00:22:13,800
machine is a demon second queue Bonetti

00:22:12,120 --> 00:22:15,480
it tells the logs on the hard disk which

00:22:13,800 --> 00:22:17,280
are written by docker so your job is

00:22:15,480 --> 00:22:19,170
running in a container writing logs out

00:22:17,280 --> 00:22:20,730
to stood out and stood out pom tales

00:22:19,170 --> 00:22:22,080
taking those logs sending it to fine

00:22:20,730 --> 00:22:23,310
logging I'm not going to talk about the

00:22:22,080 --> 00:22:24,360
architecture for gravano logging I'm

00:22:23,310 --> 00:22:27,030
just going to talk about this bit for

00:22:24,360 --> 00:22:28,410
now the this I literally ran this

00:22:27,030 --> 00:22:29,880
command about an hour ago to get the

00:22:28,410 --> 00:22:31,140
config map for log --is-- and you're

00:22:29,880 --> 00:22:32,700
hopefully if you've ever written a

00:22:31,140 --> 00:22:34,320
prometheus config you'll notice this is

00:22:32,700 --> 00:22:37,590
identical I mean it's literally the same

00:22:34,320 --> 00:22:39,930
strut so we use kubernetes service

00:22:37,590 --> 00:22:41,520
discovering we you can do relabeling so

00:22:39,930 --> 00:22:43,290
here's the I've banged on about this a

00:22:41,520 --> 00:22:46,290
few times I like to include the name

00:22:43,290 --> 00:22:48,810
space in the job name so if that's the

00:22:46,290 --> 00:22:50,700
rule to do that this is exactly the same

00:22:48,810 --> 00:22:52,260
config reload into our Prometheus server

00:22:50,700 --> 00:22:54,600
and the reason that's important is

00:22:52,260 --> 00:22:56,400
because as they're consistent the job

00:22:54,600 --> 00:22:58,260
has the same labels for its metrics as

00:22:56,400 --> 00:22:59,790
it does for its logs and this is how you

00:22:58,260 --> 00:23:04,290
can switch between the two releasing

00:22:59,790 --> 00:23:05,520
ously David gave you a very quick demo

00:23:04,290 --> 00:23:07,200
this morning so he sent me the

00:23:05,520 --> 00:23:10,680
screenshot and this is not merged into

00:23:07,200 --> 00:23:12,570
master yet but yeah so I can't give you

00:23:10,680 --> 00:23:14,310
a real demo myself but this is what it

00:23:12,570 --> 00:23:19,200
looks like in the Explorer view you can

00:23:14,310 --> 00:23:20,220
now get logs that's it oh my god okay

00:23:19,200 --> 00:23:21,660
two minutes left so I say a few more

00:23:20,220 --> 00:23:23,130
things we aren't going to open-source it

00:23:21,660 --> 00:23:24,660
we haven't open source the air because

00:23:23,130 --> 00:23:26,610
the codes a bit embarrassing but when

00:23:24,660 --> 00:23:30,000
it's a lot better I said that last year

00:23:26,610 --> 00:23:31,590
as well it's not a good joke when it

00:23:30,000 --> 00:23:33,060
gets better it's the next thing I'm

00:23:31,590 --> 00:23:35,640
gonna work on and so expect it to be

00:23:33,060 --> 00:23:36,840
open-source soon another question we

00:23:35,640 --> 00:23:39,840
commonly get is where we support other

00:23:36,840 --> 00:23:41,700
log sources yeah Gravano is all about

00:23:39,840 --> 00:23:42,090
supporting as many data sources as we

00:23:41,700 --> 00:23:44,130
can

00:23:42,090 --> 00:23:46,200
sorry expect this to also work you know

00:23:44,130 --> 00:23:47,310
with different logging backends another

00:23:46,200 --> 00:23:49,050
question we get is how does this compare

00:23:47,310 --> 00:23:53,670
to the orc stack well hopefully it's

00:23:49,050 --> 00:23:54,690
easier to run but also like it's just

00:23:53,670 --> 00:23:56,340
solving a different problem

00:23:54,690 --> 00:23:58,110
this we expect this for like your

00:23:56,340 --> 00:23:59,960
students to the you know week for your

00:23:58,110 --> 00:24:02,040
container logs this is not a general

00:23:59,960 --> 00:24:03,840
event logging system this is not a

00:24:02,040 --> 00:24:06,090
solution to high cardinality problem

00:24:03,840 --> 00:24:08,130
this is for seeing the stack trace that

00:24:06,090 --> 00:24:10,230
caused the error you know this the idea

00:24:08,130 --> 00:24:12,330
behind this is that it's a very cost

00:24:10,230 --> 00:24:14,190
effective place to put your logs you you

00:24:12,330 --> 00:24:17,100
know it should be orders of magnitude

00:24:14,190 --> 00:24:19,380
cheaper than an L cluster or Splunk

00:24:17,100 --> 00:24:21,330
cluster I don't know but yeah so they're

00:24:19,380 --> 00:24:22,230
the normal questions we got yeah come

00:24:21,330 --> 00:24:24,320
and find me afters you've got more

00:24:22,230 --> 00:24:29,929
questions thank you

00:24:24,320 --> 00:24:33,500
I know everyone so like you probably or

00:24:29,929 --> 00:24:36,409
you know I'm working for reddit upswing

00:24:33,500 --> 00:24:38,570
Prometheus and I wanted to share

00:24:36,409 --> 00:24:42,169
something with you that this morning

00:24:38,570 --> 00:24:45,230
touch a little bit on it's the the way

00:24:42,169 --> 00:24:48,799
you can implement your discovery for

00:24:45,230 --> 00:24:51,440
Prometheus so why do we want some

00:24:48,799 --> 00:24:53,899
service discovery because of all the the

00:24:51,440 --> 00:24:56,240
nice things that it brings like mostly

00:24:53,899 --> 00:25:01,039
you don't have to reload your primitives

00:24:56,240 --> 00:25:04,490
sever when you target or appears or new

00:25:01,039 --> 00:25:06,860
or target disappear so you you've got

00:25:04,490 --> 00:25:07,789
some monitoring system which is always

00:25:06,860 --> 00:25:12,980
up to date

00:25:07,789 --> 00:25:16,490
to what what it's to monitor what we

00:25:12,980 --> 00:25:20,379
have currently supported in the repo are

00:25:16,490 --> 00:25:24,379
the files DNS console kubernetes or hero

00:25:20,379 --> 00:25:27,830
container or cast photos and we have all

00:25:24,379 --> 00:25:33,620
the image or cloud providers so GCP easy

00:25:27,830 --> 00:25:36,289
to a juror but what what if you are not

00:25:33,620 --> 00:25:39,139
on those platforms then how can you add

00:25:36,289 --> 00:25:41,330
some new service discovery like we

00:25:39,139 --> 00:25:44,960
discussed in the panel that's something

00:25:41,330 --> 00:25:48,860
that that is not going to happen I just

00:25:44,960 --> 00:25:51,289
copied sample request that we had to

00:25:48,860 --> 00:25:54,230
close which is really sad because people

00:25:51,289 --> 00:25:56,600
have spent some time on it and we

00:25:54,230 --> 00:25:58,850
unfortunately I have to say to them no

00:25:56,600 --> 00:26:02,509
it's not going to happen because because

00:25:58,850 --> 00:26:05,629
why because this is the current status

00:26:02,509 --> 00:26:10,029
of the repo we have so I filtered on the

00:26:05,629 --> 00:26:14,870
service discovery issues we have 39 open

00:26:10,029 --> 00:26:17,350
which for a team like us is a lot and

00:26:14,870 --> 00:26:20,809
it's only for the service discovery

00:26:17,350 --> 00:26:23,149
systems that we currently support I mean

00:26:20,809 --> 00:26:28,519
it doesn't include use of these

00:26:23,149 --> 00:26:29,960
discoveries so what can you do now

00:26:28,519 --> 00:26:33,799
there's been a blog post on the

00:26:29,960 --> 00:26:37,670
primitives website describing oh you can

00:26:33,799 --> 00:26:42,650
do that so shout out to karim who was

00:26:37,670 --> 00:26:45,530
on that is not there today but he spent

00:26:42,650 --> 00:26:47,980
a lot of time to implement a service

00:26:45,530 --> 00:26:53,510
discovery example so that you can

00:26:47,980 --> 00:26:57,470
implement your own so how does it work

00:26:53,510 --> 00:27:00,470
it's pretty simple start from there

00:26:57,470 --> 00:27:03,470
you've got some we assume that you've

00:27:00,470 --> 00:27:06,710
got some API service that from where you

00:27:03,470 --> 00:27:08,450
can inventory of the targets that you

00:27:06,710 --> 00:27:12,230
want subscribe what you need to

00:27:08,450 --> 00:27:14,150
implement is this part so you you've got

00:27:12,230 --> 00:27:15,620
the dope from markers this morning that

00:27:14,150 --> 00:27:20,630
explained quite well how would they do

00:27:15,620 --> 00:27:23,090
it for adversely this application is

00:27:20,630 --> 00:27:26,320
responsible for querying your API

00:27:23,090 --> 00:27:29,330
service write a file that will be

00:27:26,320 --> 00:27:31,790
understood by the primitive server that

00:27:29,330 --> 00:27:33,770
will read it and also that will

00:27:31,790 --> 00:27:35,950
automatically reload the content of the

00:27:33,770 --> 00:27:38,390
file whenever you have a target

00:27:35,950 --> 00:27:41,240
appearing or disappearing from your

00:27:38,390 --> 00:27:47,870
inventory and then it will automatically

00:27:41,240 --> 00:27:51,380
scrap your targets so that's a concrete

00:27:47,870 --> 00:27:53,540
example of in fact the funny thing is

00:27:51,380 --> 00:27:55,760
that there are two projects because I

00:27:53,540 --> 00:27:58,460
spent some time to work on the sauce

00:27:55,760 --> 00:28:00,950
Kelloway is a cloud provider that you

00:27:58,460 --> 00:28:03,560
may know I spend some time to just weak

00:28:00,950 --> 00:28:06,620
sir size the example I want you to test

00:28:03,560 --> 00:28:09,650
it myself and once I have finished that

00:28:06,620 --> 00:28:12,710
I I learned that they were working on

00:28:09,650 --> 00:28:15,530
something similar so hopefully we will

00:28:12,710 --> 00:28:18,490
merge the two they will maintain the

00:28:15,530 --> 00:28:22,370
they are official is the application

00:28:18,490 --> 00:28:25,760
just to give you an example it's two

00:28:22,370 --> 00:28:28,610
hundred lines of code nothing fancy

00:28:25,760 --> 00:28:31,880
really simple to implement so that if

00:28:28,610 --> 00:28:33,850
people have ideas for other service

00:28:31,880 --> 00:28:38,360
discovery they can look at that code and

00:28:33,850 --> 00:28:41,840
just copy and adapt to their needs a few

00:28:38,360 --> 00:28:45,680
things to think about when you implement

00:28:41,840 --> 00:28:48,860
your own service discovery is just look

00:28:45,680 --> 00:28:50,810
after how you are going to handle the

00:28:48,860 --> 00:28:52,740
targets that are deleted from your

00:28:50,810 --> 00:28:55,990
invention

00:28:52,740 --> 00:28:58,870
it's best to instrument also the DSD

00:28:55,990 --> 00:29:02,260
application just because we monitor

00:28:58,870 --> 00:29:03,970
everything and you can then after that

00:29:02,260 --> 00:29:06,130
add yourself to the affirmative

00:29:03,970 --> 00:29:11,080
documentation so that all those users

00:29:06,130 --> 00:29:13,630
can easily find your application and so

00:29:11,080 --> 00:29:20,590
you can share with the community that's

00:29:13,630 --> 00:29:24,820
it unfortunately I'm not able to connect

00:29:20,590 --> 00:29:27,850
to the screen yeah by the time he fixes

00:29:24,820 --> 00:29:31,049
I am Ganesh I am from IIT Hyderabad in

00:29:27,850 --> 00:29:36,010
India so I did my G sock with Prometheus

00:29:31,049 --> 00:29:40,740
this summer and Gotham was my official

00:29:36,010 --> 00:29:44,590
mentor but mostly reviewed by Bryan

00:29:40,740 --> 00:29:47,169
so in this ji-sook I added two features

00:29:44,590 --> 00:29:49,840
and fixed a bug two of those features

00:29:47,169 --> 00:29:52,270
are still under review one of them yeah

00:29:49,840 --> 00:29:54,910
before I would talk about the features

00:29:52,270 --> 00:29:57,520
many of you might have written many

00:29:54,910 --> 00:30:01,210
alerting rules so how many of you wanted

00:29:57,520 --> 00:30:05,460
to wondered what's the best for duration

00:30:01,210 --> 00:30:09,130
for your alerts anyone yeah so I just

00:30:05,460 --> 00:30:11,530
fix that not exactly fixed I created a

00:30:09,130 --> 00:30:15,490
UI where you can put your alerting rules

00:30:11,530 --> 00:30:17,500
and test your rules on the current data

00:30:15,490 --> 00:30:20,380
that you have unfortunately I cannot

00:30:17,500 --> 00:30:23,950
show the demo right now so the demo just

00:30:20,380 --> 00:30:25,660
consisted writing a rule and executing

00:30:23,950 --> 00:30:28,270
on the present data to show all the

00:30:25,660 --> 00:30:31,210
alerts that you have and you can check

00:30:28,270 --> 00:30:34,390
it for all the past data and not just

00:30:31,210 --> 00:30:38,860
the current data and about the second

00:30:34,390 --> 00:30:40,840
feature many of you I believe many of

00:30:38,860 --> 00:30:43,330
you want to test your alerting rules or

00:30:40,840 --> 00:30:45,580
the recording rules once before you put

00:30:43,330 --> 00:30:46,960
it into production is anyone who wants

00:30:45,580 --> 00:30:53,140
to do that basically I'm talking about

00:30:46,960 --> 00:30:56,169
unit testing so yeah thanks Gotham yeah

00:30:53,140 --> 00:30:59,740
this is about the UI the first one that

00:30:56,169 --> 00:31:05,040
I talked about so just enter your

00:30:59,740 --> 00:31:08,100
alerting rule here and then execute

00:31:05,040 --> 00:31:11,100
and you get yeah the rule is just

00:31:08,100 --> 00:31:13,770
instanc done off for five minutes and

00:31:11,100 --> 00:31:16,440
ten minutes so from this graph you won't

00:31:13,770 --> 00:31:22,050
get much insight in the weave you have

00:31:16,440 --> 00:31:24,180
the description and labels the graph of

00:31:22,050 --> 00:31:28,410
the expression and the graph of the

00:31:24,180 --> 00:31:33,120
alert this is created when you press

00:31:28,410 --> 00:31:35,460
execute so it's not stored yeah so this

00:31:33,120 --> 00:31:38,550
is an insight in the UI and it also

00:31:35,460 --> 00:31:43,110
checks for any mistakes that you make

00:31:38,550 --> 00:31:48,450
for example templating variables yeah so

00:31:43,110 --> 00:31:50,550
the next one is unit testing so in the

00:31:48,450 --> 00:31:54,480
unit testing you give the input that you

00:31:50,550 --> 00:31:57,300
want and just tell at this time for this

00:31:54,480 --> 00:32:00,450
alerting rule what should have in your

00:31:57,300 --> 00:32:06,840
alerts and you can also test your prom

00:32:00,450 --> 00:32:10,110
kill expressions it's as simple as

00:32:06,840 --> 00:32:13,160
running prompt old test rules and done

00:32:10,110 --> 00:32:17,310
if it's a success then you get a success

00:32:13,160 --> 00:32:22,940
fact I will do some mistake in this like

00:32:17,310 --> 00:32:26,870
making this six and making this nine and

00:32:22,940 --> 00:32:26,870
yeah you get an alert

00:32:27,070 --> 00:32:32,990
[Music]

00:32:30,130 --> 00:32:35,450
[Applause]

00:32:32,990 --> 00:32:38,540
so these two features are still under

00:32:35,450 --> 00:32:41,590
review and the third bug fix with which

00:32:38,540 --> 00:32:44,300
I added another book apparently so yeah

00:32:41,590 --> 00:32:47,830
Brian just told me about it Esther day

00:32:44,300 --> 00:32:52,790
so it crashes Prometheus that was person

00:32:47,830 --> 00:32:56,720
persisting first state across and he

00:32:52,790 --> 00:32:59,720
starts so just imagine you have for

00:32:56,720 --> 00:33:01,640
duration of 12 hours and the alert is

00:32:59,720 --> 00:33:04,100
spending for leaveners and a Prometheus

00:33:01,640 --> 00:33:06,290
crashes but when you restart the

00:33:04,100 --> 00:33:09,020
Prometheus you will have to wait for

00:33:06,290 --> 00:33:12,260
another 12 hours so that the alert will

00:33:09,020 --> 00:33:14,690
fire so I just fixed that so when the

00:33:12,260 --> 00:33:17,000
Prometheus restarts the four-state the

00:33:14,690 --> 00:33:19,430
four duration the first eight of the

00:33:17,000 --> 00:33:22,130
alert is restored and you have to wait

00:33:19,430 --> 00:33:25,580
for just one more R and apparently that

00:33:22,130 --> 00:33:27,800
crashes right now so that was a brief

00:33:25,580 --> 00:33:30,250
overview of what I did in the G so yeah

00:33:27,800 --> 00:33:30,250
thank you

00:33:32,230 --> 00:33:36,920
of course my last talk which would be in

00:33:35,300 --> 00:33:39,530
the last talk yesterday instead as last

00:33:36,920 --> 00:33:42,920
talk is a is evaluation for which is

00:33:39,530 --> 00:33:44,690
knowledge in interviews now you might

00:33:42,920 --> 00:33:46,760
not know who I am I am one of the

00:33:44,690 --> 00:33:49,520
Prometheus developers I wrote a book on

00:33:46,760 --> 00:33:51,980
prometheus I'm an author of blog in

00:33:49,520 --> 00:33:56,570
might forgive me Mike not so two years

00:33:51,980 --> 00:33:59,260
ago so who was at prom Con 2016 in

00:33:56,570 --> 00:34:02,120
Berlin you're handfuls remember my talk

00:33:59,260 --> 00:34:04,850
about implementing Conway's life in

00:34:02,120 --> 00:34:05,270
Prometheus and last year who was here as

00:34:04,850 --> 00:34:09,080
well

00:34:05,270 --> 00:34:15,020
more hands I gave a talk on rule 110 in

00:34:09,080 --> 00:34:18,230
Prometheus and who was here then in 2015

00:34:15,020 --> 00:34:22,490
in Berlin I was only like 10 of us the

00:34:18,230 --> 00:34:24,800
real prom con prom cons zero anyway so

00:34:22,490 --> 00:34:26,210
as Prometheus crows we can see the

00:34:24,800 --> 00:34:28,490
growth in the conference with like 300

00:34:26,210 --> 00:34:30,320
people on the waiting list and you know

00:34:28,490 --> 00:34:32,540
your might be looking for someone to

00:34:30,320 --> 00:34:35,360
come in and join your team who already

00:34:32,540 --> 00:34:36,650
has a reaches experience and basically

00:34:35,360 --> 00:34:38,920
how do you get someone who you know

00:34:36,650 --> 00:34:41,630
actually knows something about radius

00:34:38,920 --> 00:34:43,910
now you could look at their CV and look

00:34:41,630 --> 00:34:45,500
at their experience with Prometheus so

00:34:43,910 --> 00:34:46,630
for example our deer from Ricky's father

00:34:45,500 --> 00:34:51,080
have they written a book

00:34:46,630 --> 00:34:53,780
Blagh have a demonstrated esoteric from

00:34:51,080 --> 00:34:56,180
ql knowledge butter scales Prometheus is

00:34:53,780 --> 00:34:58,610
fairly new you know no one can possibly

00:34:56,180 --> 00:35:00,620
have ten plus years of Prometheus

00:34:58,610 --> 00:35:03,800
knowledge after all it's only been out

00:35:00,620 --> 00:35:05,780
for five so what you kind of want here

00:35:03,800 --> 00:35:08,000
it turns out is a low-pass filter right

00:35:05,780 --> 00:35:09,620
because you don't have to be looking for

00:35:08,000 --> 00:35:11,720
a unicorn someone who cannot possibly

00:35:09,620 --> 00:35:15,440
exist or whose rates are just too high

00:35:11,720 --> 00:35:16,940
anyway yeah but there is a thing that

00:35:15,440 --> 00:35:18,680
maybe you just want to save yourself

00:35:16,940 --> 00:35:20,750
time and rather than talking to every

00:35:18,680 --> 00:35:23,210
single person who applies and can spell

00:35:20,750 --> 00:35:27,140
Prometheus and you know the sequel to

00:35:23,210 --> 00:35:28,940
alien and maybe we want some simple

00:35:27,140 --> 00:35:30,500
tests you can do to just throw away the

00:35:28,940 --> 00:35:33,260
ones who are obviously faking it until

00:35:30,500 --> 00:35:35,660
they make it um and this is where we

00:35:33,260 --> 00:35:37,940
enter bring in fizzbuzz now if you don't

00:35:35,660 --> 00:35:39,530
know fizzbuzz it's an example I was in

00:35:37,940 --> 00:35:42,380
coding horror I first came across this

00:35:39,530 --> 00:35:44,690
one or maybe I can use it's a very very

00:35:42,380 --> 00:35:46,550
simple programming problem and that

00:35:44,690 --> 00:35:49,760
should be no problem for someone who can

00:35:46,550 --> 00:35:52,610
code like at all because what you do is

00:35:49,760 --> 00:35:54,650
you count up from 1 to 100 if the number

00:35:52,610 --> 00:35:57,260
is a multiple of 3 you print fizz if

00:35:54,650 --> 00:36:01,460
it's multiple of 5 you print buzz and

00:35:57,260 --> 00:36:03,200
it's both you print fizzbuzz that's the

00:36:01,460 --> 00:36:05,060
entirety if you go at c2 which is the

00:36:03,200 --> 00:36:07,490
original wiki and you can see lots of

00:36:05,060 --> 00:36:09,110
different examples for that so this is a

00:36:07,490 --> 00:36:11,390
pretty simple programming problem and

00:36:09,110 --> 00:36:12,580
this is a common example of well Athas

00:36:11,390 --> 00:36:14,870
buzz test which is a low pass filter

00:36:12,580 --> 00:36:16,700
because of surprising amount of suppose

00:36:14,870 --> 00:36:21,020
opposed to programmers apparently can't

00:36:16,700 --> 00:36:22,400
do this so we can take this tool which

00:36:21,020 --> 00:36:25,520
has been developed outside from Matthias

00:36:22,400 --> 00:36:27,140
and use of radius because we can use

00:36:25,520 --> 00:36:29,210
this to evaluate promised UL knowledge

00:36:27,140 --> 00:36:31,580
and get an idea like you know you should

00:36:29,210 --> 00:36:33,290
be able to do basic from ql right so if

00:36:31,580 --> 00:36:36,620
it's easy in any programming language it

00:36:33,290 --> 00:36:38,900
should be easy in from QL so let's do it

00:36:36,620 --> 00:36:40,220
and so obviously anyone here should be

00:36:38,900 --> 00:36:43,640
able to do it but I'm going to share my

00:36:40,220 --> 00:36:46,370
solution so firstly we would nice an

00:36:43,640 --> 00:36:47,750
input data and now obviously we can't

00:36:46,370 --> 00:36:49,550
have multiple things at the same value

00:36:47,750 --> 00:36:51,680
so we just need something like number

00:36:49,550 --> 00:36:53,420
equals one do two strings and so on so

00:36:51,680 --> 00:36:56,090
that's number equals one 10 11 12 13

00:36:53,420 --> 00:36:57,320
because that's how it's sorted and we

00:36:56,090 --> 00:36:59,060
can build that up with a recording rule

00:36:57,320 --> 00:37:00,350
and it should be reasonably obvious how

00:36:59,060 --> 00:37:04,040
this works

00:37:00,350 --> 00:37:06,440
and from there we need to filter based

00:37:04,040 --> 00:37:08,570
on the values good news is from QL has a

00:37:06,440 --> 00:37:10,490
modulus operator and it has labeled

00:37:08,570 --> 00:37:13,310
replace which can do string stuff so

00:37:10,490 --> 00:37:15,230
this isn't actually that hard so all we

00:37:13,310 --> 00:37:17,270
need to do is basically if it's modulus

00:37:15,230 --> 00:37:17,690
15 which is three in five we put in biz

00:37:17,270 --> 00:37:20,540
buzz

00:37:17,690 --> 00:37:21,800
five is buzz tree is phase and otherwise

00:37:20,540 --> 00:37:25,580
we just put the number into the output

00:37:21,800 --> 00:37:28,250
label this will produce something like

00:37:25,580 --> 00:37:29,810
this so it's like fizzbuzz fizzbuzz

00:37:28,250 --> 00:37:32,600
fizzbuzz physicist buzzbuzz buzzbuzz

00:37:29,810 --> 00:37:35,060
buzzbuzz buzzbuzz because it's sorting

00:37:32,600 --> 00:37:37,430
alphabetically or so working some way if

00:37:35,060 --> 00:37:40,670
you have we sort that so the answers are

00:37:37,430 --> 00:37:42,650
right just in the wrong order so what we

00:37:40,670 --> 00:37:44,240
can do is we can basically squash that

00:37:42,650 --> 00:37:46,910
number and pushing the original input

00:37:44,240 --> 00:37:48,170
number using a group left and then we

00:37:46,910 --> 00:37:50,380
can just sort it and we also need to

00:37:48,170 --> 00:37:52,310
filter out the zero from the input and

00:37:50,380 --> 00:37:56,180
then that produces as you would expect

00:37:52,310 --> 00:38:00,380
one to phase four buzz phase seven eight

00:37:56,180 --> 00:38:02,660
phase-- buzz 11 phase 13 14 fizzes after

00:38:00,380 --> 00:38:06,200
poofters of his buzz 16 and it goes on

00:38:02,660 --> 00:38:10,390
off to a hundred and just to show you

00:38:06,200 --> 00:38:14,530
that i'm not entirely making things up

00:38:10,390 --> 00:38:14,530
here are the rules I just showed you

00:38:14,650 --> 00:38:20,780
okay and also you knows this feature

00:38:17,740 --> 00:38:23,300
it's very handy and here's my input data

00:38:20,780 --> 00:38:26,000
as I showed you yeah I need to re

00:38:23,300 --> 00:38:29,630
execute this this takes 100 seconds to

00:38:26,000 --> 00:38:32,960
start filling it all out and here lo and

00:38:29,630 --> 00:38:36,040
behold is the output data it's just oh

00:38:32,960 --> 00:38:36,040
we forgot to put the sort around us

00:38:41,230 --> 00:38:46,140
there we are

00:38:42,990 --> 00:38:47,970
this buzz all the way up to 100 and I

00:38:46,140 --> 00:38:50,220
now hope I have demonstrated at least

00:38:47,970 --> 00:38:51,450
that I have the extremely basic promise

00:38:50,220 --> 00:38:55,790
you all knowledge that was you willing

00:38:51,450 --> 00:39:04,680
to consider me for a basic previous role

00:38:55,790 --> 00:39:07,380
thank you very much you know system

00:39:04,680 --> 00:39:09,000
engineering lot of areas for around 40

00:39:07,380 --> 00:39:12,240
years and today that we talk about

00:39:09,000 --> 00:39:14,580
permit assess coal a little context and

00:39:12,240 --> 00:39:16,800
lattime area is a big company in Latin

00:39:14,580 --> 00:39:19,860
America that selling millions of dollar

00:39:16,800 --> 00:39:22,110
per fry for day so to introduce the use

00:39:19,860 --> 00:39:25,230
of primitives I will like to concentrate

00:39:22,110 --> 00:39:27,270
in four principle focus we have an

00:39:25,230 --> 00:39:29,700
important number employees in Latin

00:39:27,270 --> 00:39:32,790
digital we have a large infrastructure

00:39:29,700 --> 00:39:34,380
for the site lot I'm calm we know that

00:39:32,790 --> 00:39:36,630
the all the products in a time digital

00:39:34,380 --> 00:39:39,360
have the requirement to monitoring our

00:39:36,630 --> 00:39:40,830
system and a critical factor only had

00:39:39,360 --> 00:39:44,250
three deaths for maintaining and

00:39:40,830 --> 00:39:47,490
improving monitoring tools taking this

00:39:44,250 --> 00:39:49,859
in mind we need to find some way to

00:39:47,490 --> 00:39:52,650
automate all the configuration for

00:39:49,859 --> 00:39:56,340
primitives and my favorite film option

00:39:52,650 --> 00:39:59,880
was configuration management and how can

00:39:56,340 --> 00:40:03,560
I start implementing primitives with

00:39:59,880 --> 00:40:04,800
chef a stove configuration management

00:40:03,560 --> 00:40:07,140
peers

00:40:04,800 --> 00:40:09,720
we need to permit you sangrahani first

00:40:07,140 --> 00:40:11,940
actor developers write all the code

00:40:09,720 --> 00:40:14,220
require all the colleague require it to

00:40:11,940 --> 00:40:15,900
enable the base configuration for

00:40:14,220 --> 00:40:19,859
permutation graph on infrastructure and

00:40:15,900 --> 00:40:21,960
then uploaded to a share server now all

00:40:19,859 --> 00:40:23,970
the shift kind identify all the

00:40:21,960 --> 00:40:26,760
configuration that will be executed

00:40:23,970 --> 00:40:30,060
according to their role draw a list for

00:40:26,760 --> 00:40:32,730
example we have a group of configuration

00:40:30,060 --> 00:40:35,040
like instead primitive servers Intel's

00:40:32,730 --> 00:40:37,800
primitive database installed our new

00:40:35,040 --> 00:40:40,590
manager that are associated to

00:40:37,800 --> 00:40:44,040
primitives our infrastructure and the

00:40:40,590 --> 00:40:47,010
same thing for graph on now we have

00:40:44,040 --> 00:40:49,710
ready the infrastructure but we need

00:40:47,010 --> 00:40:50,180
matrix from it is knit matrix and for

00:40:49,710 --> 00:40:53,900
this

00:40:50,180 --> 00:40:56,970
developers need to break exporter

00:40:53,900 --> 00:40:59,790
chassis pal work create this Porter over

00:40:56,970 --> 00:41:02,340
to a chef server and then we need to

00:40:59,790 --> 00:41:04,140
stop all this ported into any came to

00:41:02,340 --> 00:41:07,500
serve it that you want to enable a

00:41:04,140 --> 00:41:09,780
service for example into Apache server I

00:41:07,500 --> 00:41:12,660
enable a batch exporter to enable make

00:41:09,780 --> 00:41:15,660
use of Apache and into a dog a server

00:41:12,660 --> 00:41:20,060
and enable the advisor for enable matrix

00:41:15,660 --> 00:41:23,310
of containers at this point we have

00:41:20,060 --> 00:41:25,440
infrastructure we have exported but

00:41:23,310 --> 00:41:28,560
parameters need to note where the matrix

00:41:25,440 --> 00:41:31,410
are and go there to consume them for

00:41:28,560 --> 00:41:33,900
this will create a configuration that

00:41:31,410 --> 00:41:37,230
how to discover all the end points that

00:41:33,900 --> 00:41:40,950
are awesome matrix and how can it hold

00:41:37,230 --> 00:41:44,220
it works be great and all library that

00:41:40,950 --> 00:41:47,790
find all the servers that are that hub

00:41:44,220 --> 00:41:50,910
and exported included then it including

00:41:47,790 --> 00:41:55,320
our list included and exported into the

00:41:50,910 --> 00:41:58,890
Rockies according to this query that you

00:41:55,320 --> 00:42:02,910
can see and the an abort that are

00:41:58,890 --> 00:42:04,680
exposed to matrix having this having

00:42:02,910 --> 00:42:06,930
this permit is can you see the

00:42:04,680 --> 00:42:09,780
information to how to fill all the

00:42:06,930 --> 00:42:14,550
configuration files and with this have

00:42:09,780 --> 00:42:17,670
all the metrics available as you can see

00:42:14,550 --> 00:42:20,670
you can do different things with Chef

00:42:17,670 --> 00:42:22,950
and primitives and with this schema you

00:42:20,670 --> 00:42:25,230
only need to control exporters and the

00:42:22,950 --> 00:42:31,410
other things permitted you will do

00:42:25,230 --> 00:42:34,140
magically finally if you want to break

00:42:31,410 --> 00:42:38,670
out you need to implement best practice

00:42:34,140 --> 00:42:41,190
like a version control code review you

00:42:38,670 --> 00:42:43,020
can use Jenkins to continuous

00:42:41,190 --> 00:42:46,859
integration and ensure that your code

00:42:43,020 --> 00:42:48,869
works well and also you can use Jenkins

00:42:46,859 --> 00:42:52,530
to a continuous deployment and deploy to

00:42:48,869 --> 00:42:54,390
production as early as possible that is

00:42:52,530 --> 00:42:57,380
all thank you so much I leave some

00:42:54,390 --> 00:43:01,329
examples in my github and thank you

00:42:57,380 --> 00:43:04,280
[Applause]

00:43:01,329 --> 00:43:08,869
so we are using parameters to monitor

00:43:04,280 --> 00:43:11,420
SNMP switches and some of them take like

00:43:08,869 --> 00:43:13,130
60 second to like be scraped and we

00:43:11,420 --> 00:43:15,800
scrape them like every five minutes

00:43:13,130 --> 00:43:17,930
which means that between each one of the

00:43:15,800 --> 00:43:19,339
switches is very hard to say okay we

00:43:17,930 --> 00:43:21,859
monitor all of them at the same time

00:43:19,339 --> 00:43:25,099
which is a polymer or the recording

00:43:21,859 --> 00:43:28,220
holes because like we would like to have

00:43:25,099 --> 00:43:30,800
a way to be able to do the iconic hole

00:43:28,220 --> 00:43:33,050
just after we scrape one of the one of

00:43:30,800 --> 00:43:34,400
the targets like you have a switch then

00:43:33,050 --> 00:43:37,250
you calculate the rate over the last

00:43:34,400 --> 00:43:38,960
five minutes so I've just sent a mail to

00:43:37,250 --> 00:43:41,329
the British mailing list with like a

00:43:38,960 --> 00:43:42,950
proposal so that if other people have

00:43:41,329 --> 00:43:45,050
the same problem or like if you have

00:43:42,950 --> 00:43:46,490
some like cutting holes that are too big

00:43:45,050 --> 00:43:48,560
to be one at the same time and you would

00:43:46,490 --> 00:43:50,869
like to like spread them over each

00:43:48,560 --> 00:43:52,520
target to scrape then you are welcome to

00:43:50,869 --> 00:43:55,480
join the conversation so that we can

00:43:52,520 --> 00:43:59,500
think about how we can do that and

00:43:55,480 --> 00:44:05,690
discuss about my proposition thank you

00:43:59,500 --> 00:44:08,410
very much so I saw that there was extra

00:44:05,690 --> 00:44:11,180
time for Atlanta so I thought I will

00:44:08,410 --> 00:44:15,290
give this talk again I gave this talk in

00:44:11,180 --> 00:44:18,290
2013 in the Debian conference just after

00:44:15,290 --> 00:44:19,720
starting being a freelancer and so this

00:44:18,290 --> 00:44:22,300
is about telling my story and

00:44:19,720 --> 00:44:28,369
encouraging other people to do the same

00:44:22,300 --> 00:44:31,069
so these were my observations many of

00:44:28,369 --> 00:44:33,349
the people here are very talented but

00:44:31,069 --> 00:44:35,480
maybe they're not completely happy with

00:44:33,349 --> 00:44:39,619
the jobs are doing or for different

00:44:35,480 --> 00:44:41,359
reasons some sometimes is because not

00:44:39,619 --> 00:44:43,940
the right project or chess because they

00:44:41,359 --> 00:44:46,640
don't like working 9 to 5 for many

00:44:43,940 --> 00:44:48,680
different reasons but those skills and

00:44:46,640 --> 00:44:51,410
even very high demands you can see how

00:44:48,680 --> 00:44:54,920
much swag companies offer to keep you

00:44:51,410 --> 00:44:58,720
around as you might have noticed in this

00:44:54,920 --> 00:45:01,490
lovely office I used to work in Google

00:44:58,720 --> 00:45:05,900
and companies do take advantage of this

00:45:01,490 --> 00:45:08,180
and also that something very common in

00:45:05,900 --> 00:45:10,010
our community that people don't have a

00:45:08,180 --> 00:45:13,400
great conference and they we are not

00:45:10,010 --> 00:45:16,400
great negotiators so

00:45:13,400 --> 00:45:20,960
in this way they managed to keep the

00:45:16,400 --> 00:45:24,289
conditions as they wanted so my stories

00:45:20,960 --> 00:45:26,509
does I like to travel loads

00:45:24,289 --> 00:45:31,279
I cannot stay in the same place for long

00:45:26,509 --> 00:45:32,749
I had great jobs as much vacation they

00:45:31,279 --> 00:45:35,269
said had they were never enough

00:45:32,749 --> 00:45:40,309
not even the great five weeks I was

00:45:35,269 --> 00:45:42,079
getting in Ireland and I at some point I

00:45:40,309 --> 00:45:44,150
managed to get semi remote war when I

00:45:42,079 --> 00:45:48,999
was working but then I had to leave that

00:45:44,150 --> 00:45:53,420
because I went to and worked there yeah

00:45:48,999 --> 00:45:55,789
I was having loads of money company was

00:45:53,420 --> 00:45:56,960
great the projects were great but what I

00:45:55,789 --> 00:46:01,789
wanted to do was something else I wanted

00:45:56,960 --> 00:46:04,430
to travel I wanted to have freedom so I

00:46:01,789 --> 00:46:07,579
thought there's so many companies that

00:46:04,430 --> 00:46:08,119
need this and not every company needs a

00:46:07,579 --> 00:46:10,400
full-timer

00:46:08,119 --> 00:46:14,359
not a company can afford a full-timer

00:46:10,400 --> 00:46:17,930
with lot of experience they're willing

00:46:14,359 --> 00:46:19,819
to pay for it and if I learn to

00:46:17,930 --> 00:46:26,420
negotiate a bit better I can send my own

00:46:19,819 --> 00:46:28,489
conditions so yeah it says that I quit

00:46:26,420 --> 00:46:33,950
my job 200 and a half months ago that

00:46:28,489 --> 00:46:36,650
was 2013 five years later I'm still

00:46:33,950 --> 00:46:37,969
doing this at that point I had one

00:46:36,650 --> 00:46:42,289
customer that didn't last long

00:46:37,969 --> 00:46:44,420
I can tell you the first six months nine

00:46:42,289 --> 00:46:47,229
months what difficult it's not it's

00:46:44,420 --> 00:46:51,849
nobody said the beginning it's a scary

00:46:47,229 --> 00:46:55,039
but with patience and networking and

00:46:51,849 --> 00:46:57,829
doing things here and there to make

00:46:55,039 --> 00:47:01,339
yourself known I got more and more

00:46:57,829 --> 00:47:07,400
customers and I get a regular stream of

00:47:01,339 --> 00:47:12,589
projects enough for to where my I still

00:47:07,400 --> 00:47:15,319
working yeah I work from home but home

00:47:12,589 --> 00:47:17,630
is whatever my laptop is my office is

00:47:15,319 --> 00:47:21,499
this computer have here I don't have

00:47:17,630 --> 00:47:25,069
anything else and so in these past five

00:47:21,499 --> 00:47:26,570
years I lived in different cities three

00:47:25,069 --> 00:47:27,920
months at a time because

00:47:26,570 --> 00:47:34,640
I'm still an immigrant so I can stay

00:47:27,920 --> 00:47:38,680
more than that otherwise stay longer and

00:47:34,640 --> 00:47:41,660
yeah I charge more I charge good rates

00:47:38,680 --> 00:47:46,430
I'm gonna still trying to get rich and I

00:47:41,660 --> 00:47:51,920
work 10 hours a week 15 sometimes 20 but

00:47:46,430 --> 00:47:53,390
that's really stretching it that that

00:47:51,920 --> 00:47:55,580
lets me do other things like I've been

00:47:53,390 --> 00:47:58,520
contributing loads to Debian I've been

00:47:55,580 --> 00:48:01,310
able to do all the work for the packages

00:47:58,520 --> 00:48:03,050
in prometheus because I had plenty of

00:48:01,310 --> 00:48:05,620
free time otherwise I had not been able

00:48:03,050 --> 00:48:07,610
to do that by working 9:00 to 5:00 and

00:48:05,620 --> 00:48:11,660
another thing that's great I'm a huge

00:48:07,610 --> 00:48:14,810
procrastinator many people feel feel the

00:48:11,660 --> 00:48:16,850
same I guess when you're being paid to

00:48:14,810 --> 00:48:18,110
work 9:00 to 5:00 and you're doing

00:48:16,850 --> 00:48:20,030
nothing because you cannot concentrate

00:48:18,110 --> 00:48:22,070
or because you cannot overcome your

00:48:20,030 --> 00:48:24,920
procrastination feel guilty you still

00:48:22,070 --> 00:48:26,300
long hours or trying to compensate many

00:48:24,920 --> 00:48:28,220
times I will just spend the whole night

00:48:26,300 --> 00:48:31,490
working to compensate for week of not

00:48:28,220 --> 00:48:33,770
doing anything um now I do something

00:48:31,490 --> 00:48:35,570
else I just stop the timer

00:48:33,770 --> 00:48:39,110
do something else and I don't feel

00:48:35,570 --> 00:48:40,970
guilty it's great like really I never

00:48:39,110 --> 00:48:46,430
never manage to fix my procrastination

00:48:40,970 --> 00:48:47,780
but I so don't feel bad about it now so

00:48:46,430 --> 00:48:51,800
yeah that's my story I've been doing

00:48:47,780 --> 00:48:52,130
this for five years yeah fine half years

00:48:51,800 --> 00:48:56,660
now

00:48:52,130 --> 00:49:00,320
um I think everybody can do it at least

00:48:56,660 --> 00:49:03,020
in our profession the more people does

00:49:00,320 --> 00:49:05,450
it there's gonna be more demands so

00:49:03,020 --> 00:49:07,310
everybody wins and that's why I say this

00:49:05,450 --> 00:49:09,000
is hacking capitalism for fun and profit

00:49:07,310 --> 00:49:13,960
thank you

00:49:09,000 --> 00:49:13,960

YouTube URL: https://www.youtube.com/watch?v=5h-8V5qY2j0


