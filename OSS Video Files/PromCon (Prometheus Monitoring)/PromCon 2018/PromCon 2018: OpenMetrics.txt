Title: PromCon 2018: OpenMetrics
Publication date: 2018-11-10
Playlist: PromCon 2018
Description: 
	Speaker: Richard "RichiH" Hartmann

OpenMetrics - Transforming the Prometheus Exposition Format into a Global Standard



Prometheus has established a de-facto standard for cloud-native metric exposition. OpenMetrics aims to achieve true interoperability, and to bridge the gap towards other types of monitoring.
Captions: 
	00:00:12,280 --> 00:00:16,939
yes I'm Richie you might remember me

00:00:14,809 --> 00:00:19,220
from running around trying to fix a/c or

00:00:16,939 --> 00:00:22,220
toilets or a beer supply or food or

00:00:19,220 --> 00:00:25,270
whatever so quick show of hands who had

00:00:22,220 --> 00:00:25,270
heard of Prometheus

00:00:25,990 --> 00:00:32,059
so like before Prometheus historically

00:00:29,840 --> 00:00:34,129
the monitoring landscape has been really

00:00:32,059 --> 00:00:36,949
fragmented because there have been a ton

00:00:34,129 --> 00:00:39,589
of different solutions quite a few of

00:00:36,949 --> 00:00:42,769
them like really ancient I won't name

00:00:39,589 --> 00:00:45,019
names but you can also think of some a

00:00:42,769 --> 00:00:46,820
lot of these data formats which they are

00:00:45,019 --> 00:00:49,629
using are really hard to implement they

00:00:46,820 --> 00:00:52,489
might be proprietary there might be both

00:00:49,629 --> 00:00:55,070
most of them like hard encode a

00:00:52,489 --> 00:00:57,619
hierarchical data model which is like

00:00:55,070 --> 00:00:59,570
once you finish designing a hierarchical

00:00:57,619 --> 00:01:01,280
data model it's already wrong for

00:00:59,570 --> 00:01:03,680
someone else and probably yourself as

00:01:01,280 --> 00:01:07,130
well and this is actually enforced by

00:01:03,680 --> 00:01:09,880
those standards and not almost none of

00:01:07,130 --> 00:01:14,659
these like actually focused on metrics

00:01:09,880 --> 00:01:16,850
so there's one thing which like was like

00:01:14,659 --> 00:01:21,920
the lingua franca or is still the lingua

00:01:16,850 --> 00:01:32,450
franca who has heard of Sen SNMP who

00:01:21,920 --> 00:01:33,950
likes SNMP and as always when talking

00:01:32,450 --> 00:01:37,090
about standards and especially new

00:01:33,950 --> 00:01:40,520
standards xkcd nine to seven applies

00:01:37,090 --> 00:01:42,950
so after Prometheus like promises has

00:01:40,520 --> 00:01:44,600
like kind of become a de facto standard

00:01:42,950 --> 00:01:47,840
in the cloud negative space and I think

00:01:44,600 --> 00:01:50,659
most of you will agree and this ease of

00:01:47,840 --> 00:01:53,149
adoption of the exposition format has

00:01:50,659 --> 00:01:56,659
led to a huge explosion in compatible

00:01:53,149 --> 00:01:58,909
metrics endpoints and while we have like

00:01:56,659 --> 00:02:02,030
a ton of operational experience which

00:01:58,909 --> 00:02:03,409
has been put into that format it has

00:02:02,030 --> 00:02:06,649
been designed between a very few people

00:02:03,409 --> 00:02:08,780
so there's no like wider taking into

00:02:06,649 --> 00:02:12,200
account of other people's needs and

00:02:08,780 --> 00:02:14,900
stuff also there is something which

00:02:12,200 --> 00:02:18,500
which is a highly political thing

00:02:14,900 --> 00:02:20,270
basically if you if you have a vendor if

00:02:18,500 --> 00:02:22,280
you have a project and they are like

00:02:20,270 --> 00:02:23,470
forced to start supporting someone

00:02:22,280 --> 00:02:26,260
else's stuff

00:02:23,470 --> 00:02:29,080
this becomes a huge issue for a PR

00:02:26,260 --> 00:02:31,480
department PR is usually directly under

00:02:29,080 --> 00:02:33,340
the CEO so it's now a problem of the CEO

00:02:31,480 --> 00:02:35,140
to actually go and like to actually put

00:02:33,340 --> 00:02:36,700
this on the resupport X because they

00:02:35,140 --> 00:02:38,310
don't want to be seen supporting X

00:02:36,700 --> 00:02:42,820
because it's like a competing thing

00:02:38,310 --> 00:02:44,830
which is bad so this is also something

00:02:42,820 --> 00:02:47,770
which which hampered adoption of this

00:02:44,830 --> 00:02:49,090
this format at least in some cases some

00:02:47,770 --> 00:02:51,910
of them actually stopped and started

00:02:49,090 --> 00:02:53,260
objecting call out to influx data which

00:02:51,910 --> 00:02:56,459
was the first to actually do that I

00:02:53,260 --> 00:02:59,740
don't see Paul but yeah there is yeah

00:02:56,459 --> 00:03:02,350
only goes to say yeah good things are

00:02:59,740 --> 00:03:07,000
being paid forward I mean even two years

00:03:02,350 --> 00:03:08,560
later so like this is an actual issue

00:03:07,000 --> 00:03:10,870
for a lot of people and especially

00:03:08,560 --> 00:03:12,190
companies trying to sell a product which

00:03:10,870 --> 00:03:15,790
is totally fine if they want to sell a

00:03:12,190 --> 00:03:17,950
product and there's one more thing if

00:03:15,790 --> 00:03:20,230
you go into the more traditional vendor

00:03:17,950 --> 00:03:22,900
space especially in network vendors or

00:03:20,230 --> 00:03:25,150
storage vendors unless you have like an

00:03:22,900 --> 00:03:27,070
official RFC they just don't listen

00:03:25,150 --> 00:03:27,910
because it can't by definition be any

00:03:27,070 --> 00:03:30,100
good

00:03:27,910 --> 00:03:32,410
and while the CNC F has a stance of like

00:03:30,100 --> 00:03:35,170
hands off of actual official standards

00:03:32,410 --> 00:03:37,090
still within that like having an RFC to

00:03:35,170 --> 00:03:39,670
point to is like really nice and you can

00:03:37,090 --> 00:03:45,970
have both which is what we're talking

00:03:39,670 --> 00:03:47,800
about also think are way too fast so

00:03:45,970 --> 00:03:50,680
basically the solution as you probably

00:03:47,800 --> 00:03:52,810
might have guessed is that we really

00:03:50,680 --> 00:03:54,910
spinning out or we are spinning out the

00:03:52,810 --> 00:03:58,360
premises exits from format as its new

00:03:54,910 --> 00:03:59,350
own independent standard which gives you

00:03:58,360 --> 00:04:01,600
this neutral brand

00:03:59,350 --> 00:04:04,630
so whatever manager has an issue with

00:04:01,600 --> 00:04:06,070
supporting someone else's product now it

00:04:04,630 --> 00:04:09,750
doesn't have that issue anymore because

00:04:06,070 --> 00:04:12,370
it's just a neutral brand and whatever

00:04:09,750 --> 00:04:14,260
also this should be an umbrella for

00:04:12,370 --> 00:04:16,000
wider corporation there has been tons of

00:04:14,260 --> 00:04:17,380
cooperation going on behind the scenes

00:04:16,000 --> 00:04:19,330
or well actually we have been talking

00:04:17,380 --> 00:04:21,820
about this openly but like there was a

00:04:19,330 --> 00:04:25,360
subset of people and companies really

00:04:21,820 --> 00:04:27,370
doing things but still open metrics is

00:04:25,360 --> 00:04:29,830
also supposed to be an umbrella for

00:04:27,370 --> 00:04:31,390
people with an interest and while like

00:04:29,830 --> 00:04:33,880
the current spec is finished and that's

00:04:31,390 --> 00:04:36,880
a good thing still we can iterate at

00:04:33,880 --> 00:04:37,370
some point on that and then we also want

00:04:36,880 --> 00:04:40,790
to have like

00:04:37,370 --> 00:04:43,220
umbrella then by just broadening the

00:04:40,790 --> 00:04:46,220
designer base basically we really insure

00:04:43,220 --> 00:04:48,169
that this what we like was post based on

00:04:46,220 --> 00:04:51,139
operational experience by a few people

00:04:48,169 --> 00:04:54,290
is actually transposed and exposed to a

00:04:51,139 --> 00:04:56,240
lot more people who get an input on how

00:04:54,290 --> 00:04:58,370
this should look and they have an actual

00:04:56,240 --> 00:05:01,040
changes between the promising exposition

00:04:58,370 --> 00:05:04,010
format and the and open metrics which

00:05:01,040 --> 00:05:07,520
are like super important for certain

00:05:04,010 --> 00:05:09,440
people which we'll come to in a few so

00:05:07,520 --> 00:05:11,030
that's also really good and then the

00:05:09,440 --> 00:05:14,120
other thing which is like for the two

00:05:11,030 --> 00:05:16,100
traditional vendors we do work on having

00:05:14,120 --> 00:05:17,690
like an official standard like I'm

00:05:16,100 --> 00:05:20,690
working on an internet draft which we

00:05:17,690 --> 00:05:22,729
will submit to the IETF we also want to

00:05:20,690 --> 00:05:24,770
register an official mime type which is

00:05:22,729 --> 00:05:27,470
kind of a cyclic dependency with the RSC

00:05:24,770 --> 00:05:29,360
but we will solve that somehow and maybe

00:05:27,470 --> 00:05:31,220
we'll even get an IANA port assignment

00:05:29,360 --> 00:05:33,410
for like the default exposing point

00:05:31,220 --> 00:05:35,810
which kind of goes counter to how

00:05:33,410 --> 00:05:37,910
Prometheus does things which is also

00:05:35,810 --> 00:05:42,110
done for good reasons so maybe we want

00:05:37,910 --> 00:05:44,660
we are not quite sure yet so what's our

00:05:42,110 --> 00:05:47,510
current status we finish the discussion

00:05:44,660 --> 00:05:49,340
phase we basically nailed everything

00:05:47,510 --> 00:05:51,110
down even if you look at all the issues

00:05:49,340 --> 00:05:52,910
which we didn't close it you wouldn't

00:05:51,110 --> 00:05:55,370
suspect but we actually like to close

00:05:52,910 --> 00:05:57,470
the discussion Brian is working on a

00:05:55,370 --> 00:05:59,180
reference parser which I will be linking

00:05:57,470 --> 00:06:00,470
later and the slides will be online so

00:05:59,180 --> 00:06:03,889
you don't have to take pictures with you

00:06:00,470 --> 00:06:07,070
welcome to and Google and uber will also

00:06:03,889 --> 00:06:08,680
write a new or a second reference parser

00:06:07,070 --> 00:06:11,330
to like have two independent

00:06:08,680 --> 00:06:13,760
implementations of a reference parser to

00:06:11,330 --> 00:06:15,590
test against and this testing is

00:06:13,760 --> 00:06:18,979
basically what open metrics will be at a

00:06:15,590 --> 00:06:21,470
certain point not just like having NRC

00:06:18,979 --> 00:06:23,870
and maybe some text somewhere but like I

00:06:21,470 --> 00:06:25,729
have an actual code based an extra test

00:06:23,870 --> 00:06:28,190
suite you can you can run your stuff

00:06:25,729 --> 00:06:31,340
against both for the exposing and for

00:06:28,190 --> 00:06:33,110
the ingesting side and also for the

00:06:31,340 --> 00:06:37,690
pushing side because we also support

00:06:33,110 --> 00:06:41,419
pushing for people who need pushing yeah

00:06:37,690 --> 00:06:43,430
also what I sorry what's not here

00:06:41,419 --> 00:06:45,409
we will default and annually actually

00:06:43,430 --> 00:06:47,300
mandate that every single implementation

00:06:45,409 --> 00:06:49,370
which wants to call itself open metrics

00:06:47,300 --> 00:06:51,080
compliant will be forced to be

00:06:49,370 --> 00:06:54,289
supporting the text format

00:06:51,080 --> 00:06:56,240
just for reasons of real quick debugging

00:06:54,289 --> 00:06:57,800
and humans looking at things and also at

00:06:56,240 --> 00:06:59,240
least within parameters we realized

00:06:57,800 --> 00:07:00,710
they're like really quick with the

00:06:59,240 --> 00:07:03,439
parser so we don't even need the

00:07:00,710 --> 00:07:06,050
overhead of protobuf but others like

00:07:03,439 --> 00:07:10,159
really like proto or they need proto so

00:07:06,050 --> 00:07:12,800
produce like a it's optional but the

00:07:10,159 --> 00:07:16,689
first class optional but you have to

00:07:12,800 --> 00:07:19,099
like support always the text format so

00:07:16,689 --> 00:07:21,710
the next steps which are already ongoing

00:07:19,099 --> 00:07:23,150
is to enhance the premises client

00:07:21,710 --> 00:07:24,919
libraries to support open metrics

00:07:23,150 --> 00:07:27,620
there's a branch for the Python library

00:07:24,919 --> 00:07:29,590
also linked later to have full open

00:07:27,620 --> 00:07:32,690
metric support in primitives open senses

00:07:29,590 --> 00:07:33,650
mm3 DB and I don't know why I put over

00:07:32,690 --> 00:07:37,460
there that's a mistake

00:07:33,650 --> 00:07:39,229
because it's m3 DB and a few others for

00:07:37,460 --> 00:07:41,690
example also cortana sitting over there

00:07:39,229 --> 00:07:47,300
and so people are actually already like

00:07:41,690 --> 00:07:49,939
preparing to to supporters but what

00:07:47,300 --> 00:07:52,279
comes beyond just like this tiny slice

00:07:49,939 --> 00:07:56,330
of changing the world like that would be

00:07:52,279 --> 00:07:58,400
boring we also want to go beyond the

00:07:56,330 --> 00:08:00,169
like just a cloud native space because

00:07:58,400 --> 00:08:02,449
at it's very core like cloud native

00:08:00,169 --> 00:08:05,360
technologies is like solid goop

00:08:02,449 --> 00:08:08,270
operation principles mixed with modern

00:08:05,360 --> 00:08:10,940
technology but there have been good

00:08:08,270 --> 00:08:13,069
solid operation principles like before

00:08:10,940 --> 00:08:15,740
in a cloud native as well and we also

00:08:13,069 --> 00:08:17,659
want to support these like first-class -

00:08:15,740 --> 00:08:20,029
just however your actual IT

00:08:17,659 --> 00:08:22,789
infrastructure or whatever you have is

00:08:20,029 --> 00:08:24,800
just fully support it and you just have

00:08:22,789 --> 00:08:27,800
like this one single thing which you can

00:08:24,800 --> 00:08:32,029
use which today let's face it is SNMP at

00:08:27,800 --> 00:08:35,029
least in some regards but ya know a lot

00:08:32,029 --> 00:08:37,010
of people like working with SMP so like

00:08:35,029 --> 00:08:39,260
to actually once we have this standard

00:08:37,010 --> 00:08:41,419
to actually actively engage with all the

00:08:39,260 --> 00:08:43,610
network with the storage vendors with

00:08:41,419 --> 00:08:45,709
people who make hardware who with people

00:08:43,610 --> 00:08:48,019
who do whatever may we do the IOT or

00:08:45,709 --> 00:08:50,829
whatever so not just like constrain it

00:08:48,019 --> 00:08:54,470
to like this cloud namespaces actually

00:08:50,829 --> 00:08:58,810
expand beyond that there is another

00:08:54,470 --> 00:09:01,899
venue of of explore of expanding

00:08:58,810 --> 00:09:03,200
basically going beyond just metrics

00:09:01,899 --> 00:09:04,790
because

00:09:03,200 --> 00:09:08,120
the one thing for me sisters really well

00:09:04,790 --> 00:09:10,880
is metrics you all know that but it like

00:09:08,120 --> 00:09:13,640
doesn't do anything else and there was

00:09:10,880 --> 00:09:15,950
very strong input from actually the open

00:09:13,640 --> 00:09:18,680
census people that they needed something

00:09:15,950 --> 00:09:20,810
to have histograms point to certain

00:09:18,680 --> 00:09:23,480
events which you might remember for

00:09:20,810 --> 00:09:25,130
Jonah's talk just now because it's just

00:09:23,480 --> 00:09:27,530
really convenient you just have like

00:09:25,130 --> 00:09:30,140
this one this one thing which you can

00:09:27,530 --> 00:09:32,150
just point to when you have your when

00:09:30,140 --> 00:09:33,200
you have your bad histograms or you your

00:09:32,150 --> 00:09:34,780
highlights and see or whatever

00:09:33,200 --> 00:09:37,550
histograms

00:09:34,780 --> 00:09:41,800
that's called exemplars both with some

00:09:37,550 --> 00:09:45,980
open census and within open metrics and

00:09:41,800 --> 00:09:48,170
some of of the integrations which which

00:09:45,980 --> 00:09:49,850
will support open metrics already can

00:09:48,170 --> 00:09:52,130
support this concept again like open

00:09:49,850 --> 00:09:54,080
census and others like in the

00:09:52,130 --> 00:09:57,290
foreseeable futures will deliberately

00:09:54,080 --> 00:10:00,800
ignore this for example communities so

00:09:57,290 --> 00:10:02,060
you can just like drop that data and and

00:10:00,800 --> 00:10:05,060
we design it in a way that it's really

00:10:02,060 --> 00:10:07,460
easy to ignore that data so you don't

00:10:05,060 --> 00:10:15,970
have to ingest it unless you unless you

00:10:07,460 --> 00:10:19,580
want to and then there is another thing

00:10:15,970 --> 00:10:22,760
which expands even more on this on this

00:10:19,580 --> 00:10:24,980
going beyond metrics I like to say that

00:10:22,760 --> 00:10:27,710
I I T architectures at the very core

00:10:24,980 --> 00:10:30,920
like breathe they go in and out all the

00:10:27,710 --> 00:10:33,140
time you outsource your in source you go

00:10:30,920 --> 00:10:35,600
to a mainframe you go to client server

00:10:33,140 --> 00:10:38,150
you go to your dedicated you have your

00:10:35,600 --> 00:10:40,790
VMs you have your dedicated metal for

00:10:38,150 --> 00:10:43,070
like the databases so it's always a back

00:10:40,790 --> 00:10:45,920
and forth and you always like you go

00:10:43,070 --> 00:10:47,450
towards this one extreme and then you go

00:10:45,920 --> 00:10:49,250
back towards the other extreme and you

00:10:47,450 --> 00:10:51,650
see this in a lot of cases where you

00:10:49,250 --> 00:10:53,600
basically just have this this tendency

00:10:51,650 --> 00:10:55,820
to go back and forth between those

00:10:53,600 --> 00:10:57,530
extremes because every time you like go

00:10:55,820 --> 00:11:00,170
to the towards the other extreme you

00:10:57,530 --> 00:11:02,720
solve whatever is the current issue with

00:11:00,170 --> 00:11:05,300
whatever you're having and then you're

00:11:02,720 --> 00:11:07,490
actually solving this the whole IT like

00:11:05,300 --> 00:11:08,660
improves but then from there you have to

00:11:07,490 --> 00:11:09,950
like go back because you have a

00:11:08,660 --> 00:11:11,890
different problem which you can just

00:11:09,950 --> 00:11:16,339
solve by going back the other way

00:11:11,890 --> 00:11:18,420
so basically

00:11:16,339 --> 00:11:20,399
Prometheus breathed and because it's

00:11:18,420 --> 00:11:23,069
like really laser focused just on

00:11:20,399 --> 00:11:25,319
metrics nothing else just metrics and

00:11:23,069 --> 00:11:28,259
open metrics and tends to breathe out

00:11:25,319 --> 00:11:31,110
again and just expand to more to like

00:11:28,259 --> 00:11:33,569
encompass the whole open or the whole

00:11:31,110 --> 00:11:36,449
observability space again to have like

00:11:33,569 --> 00:11:39,179
this one single thing which has a

00:11:36,449 --> 00:11:41,189
consistent user story where your

00:11:39,179 --> 00:11:43,860
developer or whatever can just go and

00:11:41,189 --> 00:11:47,009
like use it for all the things at once

00:11:43,860 --> 00:11:50,220
and if you might remember Tom over there

00:11:47,009 --> 00:11:53,399
did something about events within

00:11:50,220 --> 00:11:54,689
Gravano which is like that's is exactly

00:11:53,399 --> 00:11:56,309
the same way and we've been talking

00:11:54,689 --> 00:11:58,019
about this quite a bit because it's like

00:11:56,309 --> 00:12:00,209
this is exactly where I want to go and

00:11:58,019 --> 00:12:03,029
if you remember what David showed like

00:12:00,209 --> 00:12:05,249
you had basic label sets which were

00:12:03,029 --> 00:12:07,019
applicable to events which for obvious

00:12:05,249 --> 00:12:08,579
reasons it's way better what we had

00:12:07,019 --> 00:12:12,299
before like with high record designer

00:12:08,579 --> 00:12:15,480
models blah blah blah so like breathing

00:12:12,299 --> 00:12:17,489
out but on this level of where you

00:12:15,480 --> 00:12:19,319
already have pushed technology as an

00:12:17,489 --> 00:12:21,689
n-dimensional label sets and not being

00:12:19,319 --> 00:12:25,799
bound by it as Harkavy models which are

00:12:21,689 --> 00:12:27,540
totally horrible so there's been a ton

00:12:25,799 --> 00:12:30,360
of commitments to actually support this

00:12:27,540 --> 00:12:32,579
I'm listing just the initial ones

00:12:30,360 --> 00:12:35,309
because it's become just too many to to

00:12:32,579 --> 00:12:38,129
list all of them but these which you see

00:12:35,309 --> 00:12:41,129
here they actually committed to to

00:12:38,129 --> 00:12:43,049
support open matrix there is a few

00:12:41,129 --> 00:12:46,139
acknowledgments basically the main work

00:12:43,049 --> 00:12:48,540
has been done by three parties several

00:12:46,139 --> 00:12:50,309
members of Prometheus team Google and

00:12:48,540 --> 00:12:53,839
uber and we've been working on the

00:12:50,309 --> 00:12:59,939
standby weekly calls for like a year now

00:12:53,839 --> 00:13:01,439
yeah so there's further reading we also

00:12:59,939 --> 00:13:03,119
have to tough someone from last year in

00:13:01,439 --> 00:13:04,709
there just because most people aren't

00:13:03,119 --> 00:13:06,029
even aware that we make the public and

00:13:04,709 --> 00:13:08,220
you probably want to reach the root

00:13:06,029 --> 00:13:09,269
because it's really interesting we've

00:13:08,220 --> 00:13:11,220
got a mailing list we've got a

00:13:09,269 --> 00:13:13,679
repository we have a few working

00:13:11,220 --> 00:13:16,699
branches we've got a few other talks and

00:13:13,679 --> 00:13:16,699
now we've got time for questions

00:13:19,890 --> 00:13:26,039
[Applause]

00:13:32,090 --> 00:13:37,170
hi there I have a tiny remark and a

00:13:35,370 --> 00:13:39,240
question after it so I noticed that

00:13:37,170 --> 00:13:40,560
there used to be resolved website open

00:13:39,240 --> 00:13:43,050
metrics of X Y Zed

00:13:40,560 --> 00:13:47,160
it's nowadays just for a 404 page which

00:13:43,050 --> 00:13:51,540
is yes yeah yeah yeah that was a remark

00:13:47,160 --> 00:13:54,560
anyway the question so I've also noticed

00:13:51,540 --> 00:13:58,740
that there are people from the redfish

00:13:54,560 --> 00:14:02,430
community part of open metrics or I saw

00:13:58,740 --> 00:14:04,290
one who names no not at all well it

00:14:02,430 --> 00:14:07,470
depends on how you define it so again

00:14:04,290 --> 00:14:09,660
like the people in the actual calls on

00:14:07,470 --> 00:14:12,690
the bi-weekly calls where Prometheus

00:14:09,660 --> 00:14:14,190
Google and uber but there's like tons of

00:14:12,690 --> 00:14:16,890
people who are like yes we want to

00:14:14,190 --> 00:14:19,170
support this but like at least in my

00:14:16,890 --> 00:14:21,750
head to to like to make this actually be

00:14:19,170 --> 00:14:23,400
actively involved those are the three

00:14:21,750 --> 00:14:25,260
parties because they actually like put

00:14:23,400 --> 00:14:27,360
in the actual work and the time to to

00:14:25,260 --> 00:14:30,180
push this forward but all the others who

00:14:27,360 --> 00:14:31,620
actually want to support us yeah I kind

00:14:30,180 --> 00:14:33,360
of lost track to be honest yeah yeah

00:14:31,620 --> 00:14:35,610
because I've noticed at least of my work

00:14:33,360 --> 00:14:37,110
I've got one side of the company who

00:14:35,610 --> 00:14:39,210
wants to use for me if using the other

00:14:37,110 --> 00:14:40,560
side is more you know I want to look at

00:14:39,210 --> 00:14:43,470
redfish for metrics even though I think

00:14:40,560 --> 00:14:45,750
it's a piece of garbage and it would be

00:14:43,470 --> 00:14:48,450
nice if I could somehow move them all

00:14:45,750 --> 00:14:50,040
over I don't think open metrics will

00:14:48,450 --> 00:14:53,450
help the course then they can argue like

00:14:50,040 --> 00:14:53,450
yeah we can just use that

00:15:03,170 --> 00:15:10,710
again my wife was responsible for all

00:15:05,760 --> 00:15:12,960
this work and the other thing

00:15:10,710 --> 00:15:15,390
Jerome he's also here somewhere he

00:15:12,960 --> 00:15:17,160
actually bought the open matrix at i/o

00:15:15,390 --> 00:15:19,320
from some domain squatters so now we

00:15:17,160 --> 00:15:21,330
moved over we also just moved

00:15:19,320 --> 00:15:24,600
repositories like to have it in a

00:15:21,330 --> 00:15:26,790
neutral band bla bla bla but we should

00:15:24,600 --> 00:15:38,160
be done with the name changes I think I

00:15:26,790 --> 00:15:41,870
hope you have to press the button or

00:15:38,160 --> 00:15:41,870
yell and I repeat the question

00:15:47,570 --> 00:15:56,550
hello okay yeah thanks for the talk I'd

00:15:52,590 --> 00:15:59,820
be very happy to see open matrix replace

00:15:56,550 --> 00:16:01,860
SNMP for example but I was wondering you

00:15:59,820 --> 00:16:05,310
mentioned going beyond metrics would

00:16:01,860 --> 00:16:09,450
open metrics include a specification or

00:16:05,310 --> 00:16:13,080
maybe at least a recommendation for for

00:16:09,450 --> 00:16:15,930
example authenticating like because SNMP

00:16:13,080 --> 00:16:18,510
supports that concept and I guess the

00:16:15,930 --> 00:16:20,430
network vendors might be interested in

00:16:18,510 --> 00:16:23,580
that or would you just say none of our

00:16:20,430 --> 00:16:26,190
concern use HTTP for that yeah so

00:16:23,580 --> 00:16:29,010
basically so initially I come from the

00:16:26,190 --> 00:16:31,020
networking side and in my opinion HTTP

00:16:29,010 --> 00:16:33,060
has become the new TCP because it's like

00:16:31,020 --> 00:16:36,750
everything has an HTTP endpoint which is

00:16:33,060 --> 00:16:39,030
good in great many yards so basically we

00:16:36,750 --> 00:16:42,030
define what you can do over an HTTP

00:16:39,030 --> 00:16:44,910
endpoint and you should probably toss

00:16:42,030 --> 00:16:46,710
HTTP over that but that's like not part

00:16:44,910 --> 00:16:48,360
of the spec and also like on that level

00:16:46,710 --> 00:16:50,460
I don't I literally don't care about

00:16:48,360 --> 00:16:52,530
that because it's just honest on a

00:16:50,460 --> 00:16:59,550
different layer in my stack so but yeah

00:16:52,530 --> 00:17:01,440
you should and also by not not mandating

00:16:59,550 --> 00:17:03,660
this like if there's deal as one point

00:17:01,440 --> 00:17:06,449
for something tomorrow then I don't have

00:17:03,660 --> 00:17:09,990
to I don't have to care about it because

00:17:06,449 --> 00:17:11,900
they can just move independently what

00:17:09,990 --> 00:17:14,690
other key differences are between

00:17:11,900 --> 00:17:16,850
current form of matrix expose parameters

00:17:14,690 --> 00:17:20,930
and open metrics are there really big

00:17:16,850 --> 00:17:24,050
differences that are planned or so if

00:17:20,930 --> 00:17:27,200
you if you have a fully featured open

00:17:24,050 --> 00:17:28,550
metrics data set Prometheus will not be

00:17:27,200 --> 00:17:33,260
able to ingest that because it will

00:17:28,550 --> 00:17:35,600
reject us as as invalid the two most

00:17:33,260 --> 00:17:38,510
basic changes are a we support exemplars

00:17:35,600 --> 00:17:41,990
and B we have we did things differently

00:17:38,510 --> 00:17:43,940
with timestamps and Alastair is like

00:17:41,990 --> 00:17:45,710
lots of cleanups and stuff but everyone

00:17:43,940 --> 00:17:48,590
who is familiar with the permitted

00:17:45,710 --> 00:17:50,120
exposition format will immediately know

00:17:48,590 --> 00:17:52,460
how open metrics works because it's

00:17:50,120 --> 00:17:56,900
mostly the same just like refined and

00:17:52,460 --> 00:17:58,400
improved well Prometheus be able to use

00:17:56,900 --> 00:18:03,670
an open metric format and just ignore

00:17:58,400 --> 00:18:03,670
what it counted ingest at some point yes

00:18:04,840 --> 00:18:08,450
what is going to be the migration story

00:18:07,280 --> 00:18:10,400
is it going to be like

00:18:08,450 --> 00:18:12,710
I mean Prometheus just going to reject

00:18:10,400 --> 00:18:15,530
it maybe in the I mean what is going to

00:18:12,710 --> 00:18:18,200
be what is the story for me if I want to

00:18:15,530 --> 00:18:19,730
use open metrics and Prometheus is going

00:18:18,200 --> 00:18:22,700
to you know implement support for this

00:18:19,730 --> 00:18:28,580
at some point do I have to like expose

00:18:22,700 --> 00:18:30,590
two different pages oh yeah so this is

00:18:28,580 --> 00:18:32,090
not fully defined yet but what we think

00:18:30,590 --> 00:18:34,160
we will be doing is basically that the

00:18:32,090 --> 00:18:35,930
client library is supported and if you

00:18:34,160 --> 00:18:37,610
come with a request for open metrics

00:18:35,930 --> 00:18:40,310
data then you just get open metrics data

00:18:37,610 --> 00:18:43,220
if you don't do that then you get the

00:18:40,310 --> 00:18:44,900
parameters data and at some point every

00:18:43,220 --> 00:18:46,760
probably you switch over but this like

00:18:44,900 --> 00:18:48,890
default switch over will be very far

00:18:46,760 --> 00:18:51,830
into the future but like this is the

00:18:48,890 --> 00:18:57,260
rough concept but it it's not hammered

00:18:51,830 --> 00:19:00,350
out hey thanks for the talk I wanted to

00:18:57,260 --> 00:19:03,920
ask about open metrics and open census

00:19:00,350 --> 00:19:06,410
are they related is like open census

00:19:03,920 --> 00:19:08,990
going to be gone and open metrics are

00:19:06,410 --> 00:19:12,260
that takes over or how how this is to

00:19:08,990 --> 00:19:15,260
compare no like open census is one

00:19:12,260 --> 00:19:17,630
implementation of open metrics or open

00:19:15,260 --> 00:19:19,370
census has an endpoint which supports an

00:19:17,630 --> 00:19:23,540
implementation of open metrics to be

00:19:19,370 --> 00:19:25,280
really exact and there are going to be

00:19:23,540 --> 00:19:27,110
tons of others but like

00:19:25,280 --> 00:19:29,990
open census is actual code which you can

00:19:27,110 --> 00:19:32,270
use and compile and stuff and open

00:19:29,990 --> 00:19:33,980
metrics is literally just what you have

00:19:32,270 --> 00:19:36,920
on the line like what's living on the

00:19:33,980 --> 00:19:39,980
network basically I start caring about

00:19:36,920 --> 00:19:42,170
it stuff it where you where you put data

00:19:39,980 --> 00:19:44,420
on the network and I stop caring where

00:19:42,170 --> 00:19:46,430
you end putting it there well and also

00:19:44,420 --> 00:19:51,110
the parser but yeah that's basically it

00:19:46,430 --> 00:19:53,090
hey a great job I have a question so how

00:19:51,110 --> 00:19:54,800
during the laying storage format will be

00:19:53,090 --> 00:19:58,130
different form from the current

00:19:54,800 --> 00:20:01,280
Prometheus format to the OPA metrics

00:19:58,130 --> 00:20:02,870
format what are the main changes again

00:20:01,280 --> 00:20:05,960
the main changes are you have exemplars

00:20:02,870 --> 00:20:08,060
and we changed like how the time stems

00:20:05,960 --> 00:20:10,040
look and however this will introduce a

00:20:08,060 --> 00:20:15,980
lot of changes inside the storage format

00:20:10,040 --> 00:20:18,140
or there are no changes to Prometheus

00:20:15,980 --> 00:20:20,030
internally it's just the format can do

00:20:18,140 --> 00:20:22,070
some extra stuff which fermitas will

00:20:20,030 --> 00:20:23,750
throw away but there are things like

00:20:22,070 --> 00:20:25,820
nanosecond timestamps are supported

00:20:23,750 --> 00:20:27,170
because Paul and influx TB has Apollo

00:20:25,820 --> 00:20:29,090
financial companies who want I'm in

00:20:27,170 --> 00:20:35,540
second precision for reading system or a

00:20:29,090 --> 00:20:37,280
second okay as we said order we talk to

00:20:35,540 --> 00:20:39,050
other people they had feature requests

00:20:37,280 --> 00:20:40,340
we added them because some people want

00:20:39,050 --> 00:20:41,480
more precision to milliseconds and

00:20:40,340 --> 00:20:44,720
that's grand and permeate ease will

00:20:41,480 --> 00:20:45,800
still working and in no seconds and you

00:20:44,720 --> 00:20:50,060
probably shouldn't be exposing

00:20:45,800 --> 00:20:55,880
timestamps anyway I was about to say the

00:20:50,060 --> 00:21:03,590
same any more questions

00:20:55,880 --> 00:21:04,060
yell if I don't see you hi thanks for

00:21:03,590 --> 00:21:06,260
the talk

00:21:04,060 --> 00:21:07,850
how do you see this affecting how the

00:21:06,260 --> 00:21:10,910
client libraries are shaping up for

00:21:07,850 --> 00:21:13,700
Prometheus if we end up with this open

00:21:10,910 --> 00:21:15,410
standard for producing metrics do you

00:21:13,700 --> 00:21:17,120
see the client libraries is moving to be

00:21:15,410 --> 00:21:18,830
something that is less focused on

00:21:17,120 --> 00:21:22,490
Prometheus and more agnostic to the

00:21:18,830 --> 00:21:23,930
format so within within the history of

00:21:22,490 --> 00:21:25,310
the project of releases we were always

00:21:23,930 --> 00:21:27,770
trying to like have more or less

00:21:25,310 --> 00:21:29,870
arbitrary or generic libraries which

00:21:27,770 --> 00:21:32,840
people could reuse and people actually

00:21:29,870 --> 00:21:35,540
did we use them for other stuff so

00:21:32,840 --> 00:21:37,880
basically same as with the reference

00:21:35,540 --> 00:21:39,200
parsers we want to like within the open

00:21:37,880 --> 00:21:40,940
metrics context move to

00:21:39,200 --> 00:21:42,409
system where we have like maybe one or

00:21:40,940 --> 00:21:43,760
two reference implementations or

00:21:42,409 --> 00:21:46,850
reference libraries for different

00:21:43,760 --> 00:21:48,919
languages and then basically permittees

00:21:46,850 --> 00:21:51,320
libraries become one of the reference

00:21:48,919 --> 00:21:53,179
libraries of open metrics in this like

00:21:51,320 --> 00:21:54,980
in the scope but what this actually

00:21:53,179 --> 00:21:56,779
means like in terms of branding where

00:21:54,980 --> 00:21:58,669
the repositories lives blah blah blah we

00:21:56,779 --> 00:22:01,010
we've we'll figure it out

00:21:58,669 --> 00:22:02,570
so it's specifically in terms of

00:22:01,010 --> 00:22:04,100
exemplars would you imagine that they

00:22:02,570 --> 00:22:07,850
would be featured within the Prometheus

00:22:04,100 --> 00:22:10,039
client libraries at least in as much

00:22:07,850 --> 00:22:11,990
that you can maybe toss like you have an

00:22:10,039 --> 00:22:14,630
exemplar ID or something and I just toss

00:22:11,990 --> 00:22:17,750
it in and you hand it over so that's

00:22:14,630 --> 00:22:19,700
what my expectation is of how we will

00:22:17,750 --> 00:22:21,620
end up doing things but again this has

00:22:19,700 --> 00:22:24,440
not been hammered out we actually have

00:22:21,620 --> 00:22:25,940
our dev summit tomorrow so a lot of like

00:22:24,440 --> 00:22:30,139
these details will be because this

00:22:25,940 --> 00:22:34,580
customer Thanks and we will also publish

00:22:30,139 --> 00:22:37,929
the notes for the dev summit we have

00:22:34,580 --> 00:22:37,929
time for maybe one more question

00:22:39,220 --> 00:22:44,800
No

00:22:40,630 --> 00:22:48,990
all right thank you

00:22:44,800 --> 00:22:48,990
[Applause]

00:22:50,720 --> 00:22:52,780

YouTube URL: https://www.youtube.com/watch?v=Za7vmKr11cQ


