Title: Up and running with Fedora CoreOS - DevConf.CZ 2021
Publication date: 2021-03-15
Playlist: DevConfCZ 2021
Description: 
	Speaker: David Duncan

In this workshop, you will learn to build your first Fedora CoreOS deployment best practices and how to build a basic pipeline for your container workloads. We will cover getting started with a basic deployment, building your first Ignition file, booting on a cloud (AWS), and booting on a local hypervisor. We will install, build a simplified pipeline for maintenance, and upgrade your installation. Once we have a pipeline for maintenance, you can explore how to make changes to the base by switching streams and starting services on first boot.

Schedule: https://sched.co/gmSM
Captions: 
	00:00:02,800 --> 00:00:08,160
uh here's a little bit of housekeeping

00:00:04,640 --> 00:00:11,440
if you want to follow along um we

00:00:08,160 --> 00:00:11,920
uh i don't have credits today uh but i

00:00:11,440 --> 00:00:14,000
have

00:00:11,920 --> 00:00:15,120
discussed this with my business team and

00:00:14,000 --> 00:00:18,240
and can

00:00:15,120 --> 00:00:22,160
uh um can pass

00:00:18,240 --> 00:00:25,840
credits back to you after after the um

00:00:22,160 --> 00:00:27,760
uh the um the conference

00:00:25,840 --> 00:00:30,000
so if you're participating and you want

00:00:27,760 --> 00:00:32,800
more uh detail

00:00:30,000 --> 00:00:33,600
or you wanna you wanna follow along uh

00:00:32,800 --> 00:00:36,160
let me know

00:00:33,600 --> 00:00:36,719
and you can follow along in your own own

00:00:36,160 --> 00:00:39,760
account

00:00:36,719 --> 00:00:40,960
and i can provide you with uh a modest

00:00:39,760 --> 00:00:43,200
amount of credit

00:00:40,960 --> 00:00:44,079
uh for for running a couple of instances

00:00:43,200 --> 00:00:46,399
for a short period

00:00:44,079 --> 00:00:51,039
of time and figuring out what it's like

00:00:46,399 --> 00:00:54,960
or i understand that not everybody has

00:00:51,039 --> 00:00:57,920
access to cloud accounts so if you

00:00:54,960 --> 00:00:59,039
would like i can help you out with some

00:00:57,920 --> 00:01:02,160
credits today

00:00:59,039 --> 00:01:02,160
on on the 18th

00:01:02,320 --> 00:01:07,200
to make it very clear 18th of february

00:01:05,479 --> 00:01:10,640
00:01:07,200 --> 00:01:13,680
um for uh the duration of the

00:01:10,640 --> 00:01:16,720
conference and uh help help you

00:01:13,680 --> 00:01:20,080
uh get started

00:01:16,720 --> 00:01:22,320
see what that looks like um

00:01:20,080 --> 00:01:24,240
it's faster to just use your own account

00:01:22,320 --> 00:01:27,119
and then let me know that you're

00:01:24,240 --> 00:01:28,799
um that your intro you know you've

00:01:27,119 --> 00:01:31,360
participated in the workshop

00:01:28,799 --> 00:01:32,799
and then what we can go from there so

00:01:31,360 --> 00:01:36,000
i'll also apologize i'm

00:01:32,799 --> 00:01:39,680
i'm in uh so i'm here

00:01:36,000 --> 00:01:42,720
in austin texas um

00:01:39,680 --> 00:01:45,520
uh not not closer to you but

00:01:42,720 --> 00:01:46,479
it looks like a lot of the uh the czech

00:01:45,520 --> 00:01:49,680
weather has come

00:01:46,479 --> 00:01:50,399
this way and uh you may have read about

00:01:49,680 --> 00:01:52,399
the inclement

00:01:50,399 --> 00:01:54,000
weather and the problems that we've had

00:01:52,399 --> 00:01:54,479
so if i suddenly disappear from the

00:01:54,000 --> 00:01:57,040
screen

00:01:54,479 --> 00:01:59,280
it's because we're having intermittent

00:01:57,040 --> 00:02:03,600
power outages

00:01:59,280 --> 00:02:03,600
um knock on wood that won't happen today

00:02:04,640 --> 00:02:09,440
cool so uh i started putting this

00:02:08,720 --> 00:02:13,200
together

00:02:09,440 --> 00:02:16,640
uh this as a workshop because

00:02:13,200 --> 00:02:20,000
um i want to know about uh

00:02:16,640 --> 00:02:20,000
the um

00:02:20,160 --> 00:02:27,040
uh the the use of fedora core s

00:02:24,080 --> 00:02:28,720
and you know super exciting to me to to

00:02:27,040 --> 00:02:31,120
understand a little bit better

00:02:28,720 --> 00:02:32,879
uh the immutable operating system uh

00:02:31,120 --> 00:02:36,480
unlike everybody else i'm not

00:02:32,879 --> 00:02:39,519
i'm not a daily developer

00:02:36,480 --> 00:02:42,400
i am a solutions architect who

00:02:39,519 --> 00:02:43,920
works on looking at value stream and

00:02:42,400 --> 00:02:47,519
value stream mapping

00:02:43,920 --> 00:02:48,720
and participating in discussions around

00:02:47,519 --> 00:02:50,959
quality of information

00:02:48,720 --> 00:02:52,560
and making sure that we have a good uh

00:02:50,959 --> 00:02:54,080
product line and

00:02:52,560 --> 00:02:55,840
customers have an understanding of how

00:02:54,080 --> 00:02:58,400
they're going to pull things to

00:02:55,840 --> 00:03:01,120
plum things together that more advanced

00:02:58,400 --> 00:03:01,120
technologists

00:03:01,280 --> 00:03:08,080
have built to ensure that we have

00:03:04,640 --> 00:03:11,280
uh you know they have um

00:03:08,080 --> 00:03:13,920
uh strong solutions for

00:03:11,280 --> 00:03:14,400
uh for their their business models and

00:03:13,920 --> 00:03:17,040
their

00:03:14,400 --> 00:03:18,239
their requirements and i put this

00:03:17,040 --> 00:03:21,200
together uh

00:03:18,239 --> 00:03:22,080
so that we can explore those basic steps

00:03:21,200 --> 00:03:24,159
together

00:03:22,080 --> 00:03:25,280
i don't want to say that i am an expert

00:03:24,159 --> 00:03:28,000
and i'm not saying that

00:03:25,280 --> 00:03:29,200
um the people that i am teaching this to

00:03:28,000 --> 00:03:31,360
are

00:03:29,200 --> 00:03:33,040
less knowledgeable about it than i am so

00:03:31,360 --> 00:03:36,080
no colin walters and

00:03:33,040 --> 00:03:37,920
not a dusty mape i'm a guy who

00:03:36,080 --> 00:03:39,200
was working really hard to see how much

00:03:37,920 --> 00:03:40,080
of this i could put together in a

00:03:39,200 --> 00:03:42,560
workshop

00:03:40,080 --> 00:03:44,959
and deliver out to you today as someone

00:03:42,560 --> 00:03:48,159
who wants to know more

00:03:44,959 --> 00:03:50,080
so um

00:03:48,159 --> 00:03:51,360
there's another thing that i think is

00:03:50,080 --> 00:03:54,400
really important is

00:03:51,360 --> 00:03:55,760
that um and i think i'm

00:03:54,400 --> 00:03:57,519
trying to take these words right out of

00:03:55,760 --> 00:04:00,000
matthew miller's mouth

00:03:57,519 --> 00:04:01,680
which is that as uh members of the

00:04:00,000 --> 00:04:02,879
fedora community i think one of the

00:04:01,680 --> 00:04:05,680
things that we

00:04:02,879 --> 00:04:06,400
have a strong responsibility for is

00:04:05,680 --> 00:04:09,519
building

00:04:06,400 --> 00:04:13,360
is building solutions and not just not

00:04:09,519 --> 00:04:13,360
just resting on the laurels of having

00:04:13,599 --> 00:04:16,799
the sort of the day-to-day operations of

00:04:15,519 --> 00:04:19,840
building uh

00:04:16,799 --> 00:04:20,959
fedora as a distribution um and core os

00:04:19,840 --> 00:04:24,639
really talk

00:04:20,959 --> 00:04:28,000
i think really speaks to that as a um

00:04:24,639 --> 00:04:32,160
as a directive um fedora core

00:04:28,000 --> 00:04:35,120
os is um a really mature offering today

00:04:32,160 --> 00:04:36,880
uh and has a history a long history um

00:04:35,120 --> 00:04:40,000
from atomic and

00:04:36,880 --> 00:04:44,160
lots of other projects that

00:04:40,000 --> 00:04:47,440
were associated with that and and um

00:04:44,160 --> 00:04:49,759
and you know is fed

00:04:47,440 --> 00:04:52,560
a lot by the experience the desktop

00:04:49,759 --> 00:04:55,040
experience that we have with silver blue

00:04:52,560 --> 00:04:56,639
but i think that this is a really

00:04:55,040 --> 00:04:59,440
important thing for us to all

00:04:56,639 --> 00:05:00,720
as we get in get an understanding of and

00:04:59,440 --> 00:05:02,960
recognize that

00:05:00,720 --> 00:05:07,199
these are instances that we want to

00:05:02,960 --> 00:05:07,199
build and destroy as quickly as possible

00:05:07,440 --> 00:05:10,560
and that's a little bit about why me

00:05:09,360 --> 00:05:12,880
right so why

00:05:10,560 --> 00:05:14,240
why am i the one who's who's uh who's

00:05:12,880 --> 00:05:16,720
doing this well

00:05:14,240 --> 00:05:17,280
i need more understanding a better a

00:05:16,720 --> 00:05:19,360
better

00:05:17,280 --> 00:05:20,560
relationship with the operating system

00:05:19,360 --> 00:05:21,759
and the people who are building this

00:05:20,560 --> 00:05:24,960
operating system

00:05:21,759 --> 00:05:28,880
and the people who are using it so

00:05:24,960 --> 00:05:31,600
i wanted to take an opportunity to to

00:05:28,880 --> 00:05:33,840
deliver some content that was related to

00:05:31,600 --> 00:05:33,840
that

00:05:35,120 --> 00:05:42,000
so um

00:05:38,880 --> 00:05:43,600
not knowing a whole lot about uh what an

00:05:42,000 --> 00:05:45,120
immutable os does

00:05:43,600 --> 00:05:47,759
i thought maybe the thing that we could

00:05:45,120 --> 00:05:52,639
do is talk about where it comes from and

00:05:47,759 --> 00:05:56,960
and uh the experience that um

00:05:52,639 --> 00:06:00,160
we expect to have right so first off um

00:05:56,960 --> 00:06:03,280
the fedora core os

00:06:00,160 --> 00:06:06,510
provides a series of streams

00:06:03,280 --> 00:06:07,680
a next a testing and a stable

00:06:06,510 --> 00:06:11,600
[Music]

00:06:07,680 --> 00:06:15,280
the uri for the stable

00:06:11,600 --> 00:06:19,120
configuration in this well streams

00:06:15,280 --> 00:06:22,240
so building a

00:06:19,120 --> 00:06:28,080
a pipeline building sort of a

00:06:22,240 --> 00:06:30,479
just a a a continuous process around

00:06:28,080 --> 00:06:31,440
the immutable os and in any kind of

00:06:30,479 --> 00:06:34,560
container-based

00:06:31,440 --> 00:06:35,520
workload it's really important to be

00:06:34,560 --> 00:06:38,880
able to

00:06:35,520 --> 00:06:40,160
um stand up and destroy uh everything

00:06:38,880 --> 00:06:44,000
that you have

00:06:40,160 --> 00:06:47,199
in a in a relatively short fashion and

00:06:44,000 --> 00:06:50,880
um that's made quite possible

00:06:47,199 --> 00:06:52,319
by having a fast way to determine

00:06:50,880 --> 00:06:54,720
exactly what it is that you want to

00:06:52,319 --> 00:06:54,720
deploy

00:06:55,199 --> 00:07:02,319
if you're building in in a way that

00:06:58,800 --> 00:07:05,520
leverages tags um

00:07:02,319 --> 00:07:08,000
it's super easy to uh build out

00:07:05,520 --> 00:07:09,039
a way to um to to collect that

00:07:08,000 --> 00:07:11,199
information

00:07:09,039 --> 00:07:13,360
and so i wanted to take this opportunity

00:07:11,199 --> 00:07:16,479
uh for the people who are

00:07:13,360 --> 00:07:20,080
um as

00:07:16,479 --> 00:07:24,479
as uh inexperienced as this is

00:07:20,080 --> 00:07:26,080
as possible to have uh having um

00:07:24,479 --> 00:07:28,720
an opportunity to learn about this so i

00:07:26,080 --> 00:07:31,919
started off with

00:07:28,720 --> 00:07:35,680
just just looking at the uh the images

00:07:31,919 --> 00:07:39,120
how those images are are um

00:07:35,680 --> 00:07:43,840
are defined and and uh

00:07:39,120 --> 00:07:46,560
and how they're uh provided so i'm gonna

00:07:43,840 --> 00:07:46,560
just quickly

00:07:47,759 --> 00:07:52,879
try and share something different

00:07:55,190 --> 00:07:59,120
[Music]

00:07:56,840 --> 00:08:01,610
um

00:07:59,120 --> 00:08:04,809
so let's let's look at um

00:08:01,610 --> 00:08:04,809
[Music]

00:08:07,199 --> 00:08:14,479
let's look at that stream

00:08:10,479 --> 00:08:14,479
i think i'm i think i'm sharing that

00:08:18,639 --> 00:08:24,319
yes okay good so

00:08:22,400 --> 00:08:25,680
just looking at the content that's out

00:08:24,319 --> 00:08:28,400
there

00:08:25,680 --> 00:08:30,400
let's i think i've got a pretty good

00:08:28,400 --> 00:08:34,000
history here

00:08:30,400 --> 00:08:36,560
so if i want to if i want to look at

00:08:34,000 --> 00:08:39,599
information that's associated

00:08:36,560 --> 00:08:40,640
uh with the architecture itself just to

00:08:39,599 --> 00:08:43,809
see

00:08:40,640 --> 00:08:46,979
you know how thick this is

00:08:43,809 --> 00:08:46,979
[Music]

00:08:47,519 --> 00:08:55,839
i can look at the top of

00:08:51,040 --> 00:08:55,839
the stream

00:08:58,160 --> 00:09:03,360
to show that um we're not just talking

00:09:00,959 --> 00:09:06,399
about one location

00:09:03,360 --> 00:09:07,920
um the team that is responsible for

00:09:06,399 --> 00:09:11,839
building this the coreost

00:09:07,920 --> 00:09:14,959
the fedora core os team builds images

00:09:11,839 --> 00:09:16,560
across many different uh platforms

00:09:14,959 --> 00:09:19,279
in many different environments and so

00:09:16,560 --> 00:09:19,279
those are all

00:09:20,880 --> 00:09:25,279
those are all easy to get to and there

00:09:24,000 --> 00:09:29,279
is quite a bit of

00:09:25,279 --> 00:09:32,640
of detail here so

00:09:29,279 --> 00:09:37,839
uh the first thing i was looking at

00:09:32,640 --> 00:09:37,839
is in the exercises and

00:09:38,640 --> 00:09:42,640
i think i'm just going to share that

00:09:39,920 --> 00:09:42,640
whole screen

00:09:46,560 --> 00:09:53,680
so in terms of the exercises um

00:09:50,640 --> 00:09:54,240
i wanted to look at what it is that we

00:09:53,680 --> 00:09:58,399
could see

00:09:54,240 --> 00:10:00,080
from just that one uri so from one uri

00:09:58,399 --> 00:10:03,519
we know that we have

00:10:00,080 --> 00:10:06,670
a stable a stable and a

00:10:03,519 --> 00:10:09,820
next and a um

00:10:06,670 --> 00:10:09,820
[Music]

00:10:13,279 --> 00:10:20,240
yeah and uh so stable and next

00:10:17,120 --> 00:10:24,240
and testing so

00:10:20,240 --> 00:10:27,680
we can just easily interchange

00:10:24,240 --> 00:10:27,680
what it is that we want to get

00:10:28,399 --> 00:10:32,720
and something that i thought was very

00:10:30,480 --> 00:10:34,160
interesting about this is that if i

00:10:32,720 --> 00:10:37,360
decided

00:10:34,160 --> 00:10:41,040
that i wanted to we'll

00:10:37,360 --> 00:10:43,839
pull this information into

00:10:41,040 --> 00:10:43,839
a variable

00:10:44,720 --> 00:10:52,240
i could look at my release and i can use

00:10:48,399 --> 00:10:55,279
tools like uh jq integrated with

00:10:52,240 --> 00:11:00,800
the um the output from this uh

00:10:55,279 --> 00:11:04,480
this curl from the stream

00:11:00,800 --> 00:11:04,800
to get a uh to get more detail around

00:11:04,480 --> 00:11:08,560
the

00:11:04,800 --> 00:11:10,560
um uh the output

00:11:08,560 --> 00:11:12,720
so what can i do with this release

00:11:10,560 --> 00:11:15,760
information

00:11:12,720 --> 00:11:17,839
uh well first i can i can just uh echo

00:11:15,760 --> 00:11:17,839
it

00:11:20,640 --> 00:11:27,680
and i can get back the uh uh the result

00:11:24,959 --> 00:11:28,240
so looking at that oh look you know

00:11:27,680 --> 00:11:31,120
here's

00:11:28,240 --> 00:11:31,120
here's my current

00:11:31,680 --> 00:11:39,680
next release right so most recently

00:11:36,000 --> 00:11:39,680
built on uh

00:11:40,480 --> 00:11:49,600
looks like february 17th and um

00:11:44,720 --> 00:11:53,040
so just just uh yesterday

00:11:49,600 --> 00:11:54,000
and then because i know i want to use

00:11:53,040 --> 00:11:57,440
that information

00:11:54,000 --> 00:12:00,480
in aws because that's

00:11:57,440 --> 00:12:02,720
where i live most of my

00:12:00,480 --> 00:12:03,839
daily life i can take that information

00:12:02,720 --> 00:12:07,040
and translate that

00:12:03,839 --> 00:12:07,040
so if you didn't see that

00:12:08,079 --> 00:12:12,560
i took that release and that release

00:12:10,079 --> 00:12:12,560
detail

00:12:13,279 --> 00:12:20,320
and added it in to a filter

00:12:17,440 --> 00:12:20,320
configuration

00:12:22,839 --> 00:12:28,720
so

00:12:24,639 --> 00:12:31,920
so here i am with the uh with the first

00:12:28,720 --> 00:12:31,920
this first exercise

00:12:34,000 --> 00:12:40,000
uh looking at how i can do this

00:12:37,600 --> 00:12:41,760
with with the release information to

00:12:40,000 --> 00:12:46,240
pull detail

00:12:41,760 --> 00:12:46,240
directly from the aws api

00:12:46,959 --> 00:12:54,079
so if

00:12:50,839 --> 00:12:56,959
uh let me let me just quickly say

00:12:54,079 --> 00:12:58,959
you know i would love it if you have the

00:12:56,959 --> 00:13:00,720
opportunity to do these exercises with

00:12:58,959 --> 00:13:02,800
me and you may be able to

00:13:00,720 --> 00:13:03,839
um even if you can't follow along i'd

00:13:02,800 --> 00:13:06,959
love to see you

00:13:03,839 --> 00:13:09,839
be able to um

00:13:06,959 --> 00:13:10,240
to take a few minutes and and go through

00:13:09,839 --> 00:13:13,440
and

00:13:10,240 --> 00:13:13,760
and go on this thought experiment with

00:13:13,440 --> 00:13:20,160
me

00:13:13,760 --> 00:13:24,079
right so um

00:13:20,160 --> 00:13:27,200
the aws api calls allow you to

00:13:24,079 --> 00:13:30,720
um to build

00:13:27,200 --> 00:13:33,600
an instance in aws

00:13:30,720 --> 00:13:34,000
and the the call that you would use to

00:13:33,600 --> 00:13:38,350
create

00:13:34,000 --> 00:13:41,580
an instance is start start instances

00:13:38,350 --> 00:13:41,580
[Music]

00:13:41,680 --> 00:13:49,279
how would you knowing what you've seen

00:13:44,959 --> 00:13:52,560
now uh put together

00:13:49,279 --> 00:13:57,440
a um a

00:13:52,560 --> 00:14:00,480
call for that uh for that cluster

00:13:57,440 --> 00:14:03,839
so let's first off

00:14:00,480 --> 00:14:06,240
let me follow this link for you and

00:14:03,839 --> 00:14:06,240
bring that

00:14:07,680 --> 00:14:14,800
um so now knowing

00:14:10,880 --> 00:14:14,800
what what we put together here

00:14:14,959 --> 00:14:17,839
let's go back

00:14:18,959 --> 00:14:31,839
i have a describe instances call

00:14:35,279 --> 00:14:45,839
i want to know if we have

00:14:39,519 --> 00:14:45,839
any takers

00:14:53,600 --> 00:14:58,079
okay hint i'm just looking for a short

00:14:56,399 --> 00:14:59,839
piece of this

00:14:58,079 --> 00:15:01,120
because all we have right now is the

00:14:59,839 --> 00:15:04,639
ability to look at

00:15:01,120 --> 00:15:04,639
the the artifacts

00:15:10,839 --> 00:15:17,120
so

00:15:13,680 --> 00:15:17,120
inside of my requests

00:15:20,560 --> 00:15:23,680
we have this uri

00:15:24,320 --> 00:15:27,839
i'm just going to push that into the

00:15:25,760 --> 00:15:27,839
chat

00:15:41,519 --> 00:15:45,279
i did something kind of interesting

00:15:43,120 --> 00:15:48,800
there which was

00:15:45,279 --> 00:15:51,600
i pulled that detail and then i grabbed

00:15:48,800 --> 00:15:55,839
uh the images that i knew were

00:15:51,600 --> 00:15:55,839
associated with the fedora account

00:15:57,040 --> 00:16:04,160
and i did that based on

00:16:00,560 --> 00:16:07,519
a red hat article knowing how these

00:16:04,160 --> 00:16:08,720
the configuration of the accounts works

00:16:07,519 --> 00:16:11,600
i know that there is a

00:16:08,720 --> 00:16:11,600
specific owner

00:16:12,000 --> 00:16:17,360
there's an owner for the red hat images

00:16:13,680 --> 00:16:17,360
there's an owner for the fedora images

00:16:19,600 --> 00:16:25,920
but there's an easier way

00:16:23,519 --> 00:16:25,920
in the

00:16:28,480 --> 00:16:37,839
in that call so what i did

00:16:32,160 --> 00:16:37,839
originally in the release call

00:16:42,000 --> 00:16:51,839
i grab the artifacts

00:16:55,680 --> 00:16:58,480
but it turns out

00:16:59,839 --> 00:17:02,880
that if you just look at that

00:17:01,920 --> 00:17:05,839
information

00:17:02,880 --> 00:17:05,839
that's available

00:17:13,360 --> 00:17:16,480
i should just be able to get it straight

00:17:15,120 --> 00:17:19,600
from the call so

00:17:16,480 --> 00:17:22,959
if i make a curl

00:17:19,600 --> 00:17:26,959
i can modify the

00:17:22,959 --> 00:17:29,520
the path the object path

00:17:26,959 --> 00:17:30,840
to get directly to the image for some

00:17:29,520 --> 00:17:35,840
for any

00:17:30,840 --> 00:17:38,960
uh for any location so

00:17:35,840 --> 00:17:41,840
if i need the image id

00:17:38,960 --> 00:17:41,840
to do a boot

00:17:42,880 --> 00:17:49,840
or to run an instance

00:17:46,400 --> 00:17:54,880
how might i get go about getting that um

00:17:49,840 --> 00:18:01,840
that image knowing what i know

00:17:54,880 --> 00:18:01,840
from that uh from that request

00:18:12,840 --> 00:18:15,840
so

00:18:17,120 --> 00:18:21,360
all right that's gonna go super fast i

00:18:19,280 --> 00:18:24,160
guess we're we're gonna go super fast

00:18:21,360 --> 00:18:24,160
through the material

00:18:24,720 --> 00:18:32,640
if you don't just guess

00:18:29,200 --> 00:18:32,640
that's okay we can do that

00:18:34,799 --> 00:18:38,480
all right so let's go back and look

00:18:39,360 --> 00:18:43,840
looks like sure enough there's more

00:18:41,200 --> 00:18:43,840
detail here

00:18:44,000 --> 00:18:47,280
than you might have thought so if we

00:18:46,400 --> 00:18:51,600
look

00:18:47,280 --> 00:18:54,080
we can see that just for aws

00:18:51,600 --> 00:18:54,080
alone

00:18:55,520 --> 00:18:58,640
there's a lot of detail

00:19:00,080 --> 00:19:04,480
there's a reason for that but most

00:19:02,720 --> 00:19:06,960
importantly i think here is that we're

00:19:04,480 --> 00:19:09,120
looking at

00:19:06,960 --> 00:19:11,039
the images the official images that are

00:19:09,120 --> 00:19:14,799
published

00:19:11,039 --> 00:19:14,799
by the fedora core os team

00:19:14,880 --> 00:19:19,600
so now i've been able to easily discover

00:19:17,280 --> 00:19:24,000
using stream information published

00:19:19,600 --> 00:19:27,679
directly by the fedora core os team

00:19:24,000 --> 00:19:31,200
a machine image that i can boot on

00:19:27,679 --> 00:19:39,840
amazon ec2

00:19:31,200 --> 00:19:42,320
and run a core os instance

00:19:39,840 --> 00:19:42,320
so now

00:19:43,600 --> 00:19:51,200
uh that is

00:19:46,640 --> 00:19:55,440
all from the one stream

00:19:51,200 --> 00:19:55,440
so in this case stable

00:19:56,080 --> 00:20:00,720
but it could have been it could have

00:19:58,160 --> 00:20:04,240
been next

00:20:00,720 --> 00:20:08,880
and using detail

00:20:04,240 --> 00:20:08,880
that i pull from from here i could say

00:20:09,840 --> 00:20:17,360
i wanna i wanna do this in stockholm

00:20:14,159 --> 00:20:17,360
so eu

00:20:18,080 --> 00:20:22,960
central one

00:20:21,120 --> 00:20:25,039
and you can see the special characters

00:20:22,960 --> 00:20:27,919
here for the for the json

00:20:25,039 --> 00:20:27,919
have to be quoted

00:20:32,840 --> 00:20:37,919
nope

00:20:35,120 --> 00:20:37,919
that's not enough

00:20:42,880 --> 00:20:46,880
what is it yeah that's enough

00:20:47,280 --> 00:20:51,039
regions no it's not

00:20:57,840 --> 00:21:02,159
now we're down to just the release

00:21:00,840 --> 00:21:05,679
information

00:21:02,159 --> 00:21:05,679
and the image detail

00:21:07,200 --> 00:21:11,310
so there's the image so if i wanted to

00:21:09,919 --> 00:21:14,400
run this

00:21:11,310 --> 00:21:14,400
[Music]

00:21:14,840 --> 00:21:18,799
on

00:21:16,159 --> 00:21:18,799
aws

00:21:20,720 --> 00:21:31,840
it would look something like this

00:21:35,600 --> 00:21:45,840
image builder profile

00:21:50,000 --> 00:21:55,919
profile is not important but it helps me

00:21:52,720 --> 00:21:55,919
to keep my account straight

00:21:57,840 --> 00:22:03,600
image and slip

00:22:00,960 --> 00:22:03,600
back here

00:22:10,240 --> 00:22:16,080
so i have image id is something that i

00:22:13,600 --> 00:22:16,080
can build

00:22:18,080 --> 00:22:22,400
so now let's just go here

00:22:25,440 --> 00:22:30,880
and i can just put that in as a

00:22:34,880 --> 00:22:41,840
as a dynamic parameter

00:22:43,840 --> 00:22:55,840
let's just add the whole thing

00:23:00,400 --> 00:23:03,600
so now i've got my run instances with

00:23:02,240 --> 00:23:09,840
the image id

00:23:03,600 --> 00:23:09,840
that's specified in this evaluation

00:23:20,000 --> 00:23:23,840
i told

00:23:26,159 --> 00:23:29,200
i told the uh

00:23:30,400 --> 00:23:34,640
the instance or i told the uh the

00:23:33,440 --> 00:23:36,720
streamline

00:23:34,640 --> 00:23:40,159
where i was going but i didn't teach the

00:23:36,720 --> 00:23:42,480
uh i didn't tell the run instances call

00:23:40,159 --> 00:23:45,600
what region that was in and so it turned

00:23:42,480 --> 00:23:49,120
out that was in the wrong spot

00:23:45,600 --> 00:23:49,120
that's great so now

00:23:49,600 --> 00:23:53,279
i didn't specify much of anything here

00:23:52,080 --> 00:23:58,159
really to just get an

00:23:53,279 --> 00:24:01,200
instance running um

00:23:58,159 --> 00:24:03,520
but the question is uh what

00:24:01,200 --> 00:24:05,440
is this really what i want uh to be

00:24:03,520 --> 00:24:09,520
running

00:24:05,440 --> 00:24:09,520
and what's inside

00:24:10,559 --> 00:24:13,679
that's the important part

00:24:16,840 --> 00:24:21,520
so

00:24:18,320 --> 00:24:21,520
here's an instance id

00:24:22,799 --> 00:24:29,600
that tells me essentially tells me all

00:24:26,480 --> 00:24:31,520
this information here

00:24:29,600 --> 00:24:33,520
that's associated with it i can describe

00:24:31,520 --> 00:24:37,760
that but i don't want to do that i want

00:24:33,520 --> 00:24:40,320
i want to say this instance

00:24:37,760 --> 00:24:41,600
actually has a it should have a public

00:24:40,320 --> 00:24:44,559
ip address i believe

00:24:41,600 --> 00:24:44,559
associated with it

00:24:45,039 --> 00:25:01,840
and i'll need to find that now

00:25:12,840 --> 00:25:15,840
um

00:25:21,840 --> 00:25:32,400
so now i have these instance ids

00:25:28,159 --> 00:25:34,559
what i miss anybody care to get venture

00:25:32,400 --> 00:25:42,000
guess

00:25:34,559 --> 00:25:45,279
did it twice

00:25:42,000 --> 00:25:45,279
it's the region information

00:25:53,600 --> 00:25:57,840
so look at that i have

00:25:58,880 --> 00:26:02,320
an associated host name

00:26:04,240 --> 00:26:09,440
a dns name with the public address

00:26:07,840 --> 00:26:11,840
should be able to just log right in

00:26:09,440 --> 00:26:11,840
right

00:26:12,640 --> 00:26:17,760
anything what do you think might be

00:26:14,480 --> 00:26:17,760
stopping me from logging in

00:26:17,919 --> 00:26:22,840
i mean i just started the instance

00:26:20,640 --> 00:26:25,840
should be easy as pi

00:26:22,840 --> 00:26:25,840
right

00:26:28,240 --> 00:26:33,840
looks like not looks like i don't have a

00:26:31,440 --> 00:26:33,840
route

00:26:34,960 --> 00:26:39,840
and it also looks like i don't have

00:26:40,320 --> 00:26:44,929
i don't have any information for

00:26:41,880 --> 00:26:44,929
[Music]

00:26:47,600 --> 00:26:53,840
excuse me the the um the user

00:26:50,840 --> 00:26:53,840
information

00:26:57,279 --> 00:26:59,520
so

00:27:00,880 --> 00:27:03,600
how do i get that

00:27:03,919 --> 00:27:07,600
how would i get uh so on a on a virtual

00:27:06,720 --> 00:27:10,799
instance

00:27:07,600 --> 00:27:13,919
or um

00:27:10,799 --> 00:27:17,039
really uh any kind of pre-configured

00:27:13,919 --> 00:27:21,120
virtual machine like this

00:27:17,039 --> 00:27:25,679
that i'm booting uh either in openstack

00:27:21,120 --> 00:27:25,679
or in a standard environment

00:27:26,000 --> 00:27:34,720
uh with the vert tools

00:27:29,120 --> 00:27:38,720
how would i get a uh

00:27:34,720 --> 00:27:48,480
an instance that or an image

00:27:38,720 --> 00:27:50,480
equipped with additional information

00:27:48,480 --> 00:27:52,159
so at some point we'd have to be able to

00:27:50,480 --> 00:27:55,679
inject that information

00:27:52,159 --> 00:27:59,440
um what's a great tool

00:27:55,679 --> 00:27:59,440
for doing that in the context of

00:27:59,679 --> 00:28:03,840
any kind of cloud environment

00:28:03,919 --> 00:28:17,840
anybody have a have a guest there

00:28:22,640 --> 00:28:26,320
so i'm spoiling it i'm going to spoil

00:28:24,399 --> 00:28:28,399
the surprise it's clouding it

00:28:26,320 --> 00:28:30,000
clown in it is a way that we've done

00:28:28,399 --> 00:28:33,520
this for many many

00:28:30,000 --> 00:28:37,760
uh well for quite a number of years now

00:28:33,520 --> 00:28:39,039
um and uh by default has been shipping

00:28:37,760 --> 00:28:40,799
for a long time

00:28:39,039 --> 00:28:44,559
there's interesting things about cloud

00:28:40,799 --> 00:28:44,559
and it uh it has taken on

00:28:45,360 --> 00:28:50,960
a sort of a saving role for

00:28:49,039 --> 00:28:52,960
figuring out how to inject information

00:28:50,960 --> 00:28:55,279
into instances

00:28:52,960 --> 00:28:56,799
but then it's also taken on sort of a

00:28:55,279 --> 00:28:59,919
crippling

00:28:56,799 --> 00:29:00,399
role in terms of boot time and so people

00:28:59,919 --> 00:29:04,640
have

00:29:00,399 --> 00:29:08,399
long criticized cloud init and it's

00:29:04,640 --> 00:29:08,399
uh just in time compile

00:29:09,279 --> 00:29:14,559
and uh and they they want to um

00:29:12,799 --> 00:29:16,320
they want to look at that as a way to

00:29:14,559 --> 00:29:18,559
move you know as

00:29:16,320 --> 00:29:19,440
we all want some way to make it to speed

00:29:18,559 --> 00:29:22,480
it up

00:29:19,440 --> 00:29:23,919
so speeding up cloud in it uh was one of

00:29:22,480 --> 00:29:26,640
the goals of the core os

00:29:23,919 --> 00:29:27,279
team and they built a project called

00:29:26,640 --> 00:29:31,760
ignition

00:29:27,279 --> 00:29:31,760
and ignition was a way to do this

00:29:32,000 --> 00:29:37,279
in a compiled application environment

00:29:37,360 --> 00:29:40,480
so one of the most important parts of

00:29:39,919 --> 00:29:44,080
building

00:29:40,480 --> 00:29:46,080
out a configuration either in

00:29:44,080 --> 00:29:47,679
a standard virtualized environment like

00:29:46,080 --> 00:29:52,000
on like on kvm

00:29:47,679 --> 00:29:56,159
or with the coinview images the

00:29:52,000 --> 00:29:59,360
uh is to leverage an ignition file

00:29:56,159 --> 00:30:01,279
from some location either on

00:29:59,360 --> 00:30:02,480
uh as a kernel operator or a kernel

00:30:01,279 --> 00:30:06,080
parameter

00:30:02,480 --> 00:30:09,440
or or sorry either by

00:30:06,080 --> 00:30:13,840
identifying it on the kernel uh with a

00:30:09,440 --> 00:30:18,559
uh with a with a pointer

00:30:13,840 --> 00:30:22,960
or um or bringing that

00:30:18,559 --> 00:30:28,720
uh configuration together for you

00:30:22,960 --> 00:30:28,720
from uh from some metadata location

00:30:34,840 --> 00:30:37,840
okay

00:30:41,039 --> 00:30:47,120
so really the the thing that

00:30:44,080 --> 00:30:51,679
uh brings you from

00:30:47,120 --> 00:30:53,840
uh elephants to ants as

00:30:51,679 --> 00:30:55,200
it's been said in the red hat circles

00:30:53,840 --> 00:30:58,000
before

00:30:55,200 --> 00:30:58,000
thank you landon

00:30:58,880 --> 00:31:05,039
i found the image i have all the details

00:31:01,919 --> 00:31:08,080
now what am i going to do i need to

00:31:05,039 --> 00:31:11,440
create a configuration

00:31:08,080 --> 00:31:12,240
that is going to tell me how what i'm

00:31:11,440 --> 00:31:14,240
going to boot

00:31:12,240 --> 00:31:18,799
and what's going to be in that in that

00:31:14,240 --> 00:31:23,919
boot process

00:31:18,799 --> 00:31:26,559
and that's the addition file so

00:31:23,919 --> 00:31:28,480
if you're building a core os image you

00:31:26,559 --> 00:31:30,960
need to create

00:31:28,480 --> 00:31:32,159
effectively what is uh similar to the

00:31:30,960 --> 00:31:35,919
cloud init configuration

00:31:32,159 --> 00:31:39,760
and cloud init um and and cloud config

00:31:35,919 --> 00:31:43,120
which is the uh yaml equivalent

00:31:39,760 --> 00:31:43,919
there in in the cloudant world you would

00:31:43,120 --> 00:31:47,519
create

00:31:43,919 --> 00:31:49,440
uh that yaml file base64 encoded and

00:31:47,519 --> 00:31:53,760
deliver it to

00:31:49,440 --> 00:31:57,679
um an amazon ec2 instance or you would

00:31:53,760 --> 00:31:59,679
as a plain text file deliver it to um

00:31:57,679 --> 00:32:01,840
i just think you can basic support

00:31:59,679 --> 00:32:05,440
encoded and openstack too

00:32:01,840 --> 00:32:06,240
i think that's right um you had you were

00:32:05,440 --> 00:32:09,519
given

00:32:06,240 --> 00:32:11,039
given that uh you would give it that

00:32:09,519 --> 00:32:11,600
file and then it would do the work for

00:32:11,039 --> 00:32:14,720
you but

00:32:11,600 --> 00:32:17,679
but of course um with cloud init

00:32:14,720 --> 00:32:19,679
uh the you know the application's not

00:32:17,679 --> 00:32:20,320
compiled it's doing the work for you

00:32:19,679 --> 00:32:24,159
it's making

00:32:20,320 --> 00:32:25,919
parsing that um with a

00:32:24,159 --> 00:32:28,480
with kind of a slow parser the ammo

00:32:25,919 --> 00:32:31,840
policies is slow and then the

00:32:28,480 --> 00:32:36,000
the uh additional effort is slow

00:32:31,840 --> 00:32:39,440
so uh and that comes from

00:32:36,000 --> 00:32:40,159
so on amazon ec2 uh the user data is

00:32:39,440 --> 00:32:43,200
stored

00:32:40,159 --> 00:32:47,120
in a

00:32:43,200 --> 00:32:50,000
link and a link local address so

00:32:47,120 --> 00:32:52,159
any idea about what a link local address

00:32:50,000 --> 00:32:52,159
is

00:32:54,840 --> 00:33:01,360
thanks so the link local address

00:32:57,840 --> 00:33:04,399
ends up being an address that is um

00:33:01,360 --> 00:33:07,600
that is not available for any

00:33:04,399 --> 00:33:10,080
any other uh it's isolated to uh

00:33:07,600 --> 00:33:11,200
the single hop from communication point

00:33:10,080 --> 00:33:13,919
from that

00:33:11,200 --> 00:33:14,799
from the instance itself and we're using

00:33:13,919 --> 00:33:18,399
that to

00:33:14,799 --> 00:33:20,399
convert the or i'm sorry we're using

00:33:18,399 --> 00:33:21,120
that to slurp up to the instance what we

00:33:20,399 --> 00:33:23,760
wanted

00:33:21,120 --> 00:33:26,159
to have in it from that ignition file

00:33:23,760 --> 00:33:28,799
and the ignition file starts off

00:33:26,159 --> 00:33:30,320
as a simple fedora core os configuration

00:33:28,799 --> 00:33:33,440
file

00:33:30,320 --> 00:33:37,120
um and then you use a

00:33:33,440 --> 00:33:37,120
what's called a transpiler

00:33:37,200 --> 00:33:45,519
to uh to create the um

00:33:41,279 --> 00:33:45,519
uh to create the ignition file

00:33:46,159 --> 00:33:53,200
so let's uh

00:33:50,480 --> 00:33:54,880
you know think about this as an exercise

00:33:53,200 --> 00:33:57,039
uh the exercise is to build your own

00:33:54,880 --> 00:33:59,039
core os configuration file

00:33:57,039 --> 00:34:00,399
and then to convert that to json for use

00:33:59,039 --> 00:34:02,000
as an ignition file

00:34:00,399 --> 00:34:04,320
and what you're going to get is

00:34:02,000 --> 00:34:07,360
something that looks like this

00:34:04,320 --> 00:34:10,560
you'll start off with

00:34:07,360 --> 00:34:14,320
this file that

00:34:10,560 --> 00:34:14,320
um effectively has

00:34:14,560 --> 00:34:21,119
the um uh the the

00:34:17,679 --> 00:34:21,839
simple yaml syntax where we're looking

00:34:21,119 --> 00:34:25,599
at the

00:34:21,839 --> 00:34:28,560
um we're looking first off at

00:34:25,599 --> 00:34:29,679
what we're doing in the past wd for

00:34:28,560 --> 00:34:31,839
users

00:34:29,679 --> 00:34:33,200
we're creating in this case a default

00:34:31,839 --> 00:34:35,760
user of core os

00:34:33,200 --> 00:34:38,560
and we're creating an authorized keys or

00:34:35,760 --> 00:34:40,720
we're injecting an authorized key

00:34:38,560 --> 00:34:43,440
into our pub key into the authorized

00:34:40,720 --> 00:34:45,119
keys for that user

00:34:43,440 --> 00:34:48,480
which means that we'll be able to log in

00:34:45,119 --> 00:34:52,560
as core os

00:34:48,480 --> 00:34:55,599
but let's change that up a little bit

00:34:52,560 --> 00:34:57,359
it's easy to write a yaml file what i'd

00:34:55,599 --> 00:35:00,800
like you to think about doing is

00:34:57,359 --> 00:35:02,000
how do i have a second user or configure

00:35:00,800 --> 00:35:05,359
a different user as

00:35:02,000 --> 00:35:09,599
my primary user in the build process

00:35:05,359 --> 00:35:12,160
and then on your own i'd like you to

00:35:09,599 --> 00:35:13,920
add that transpiler to the ins it to the

00:35:12,160 --> 00:35:17,839
installation

00:35:13,920 --> 00:35:17,839
of the instance using ignition

00:35:18,960 --> 00:35:22,480
and then ask yourself some questions

00:35:22,560 --> 00:35:27,440
so i think we're wrapping up we've got

00:35:25,440 --> 00:35:31,839
just a little bit of time for questions

00:35:27,440 --> 00:35:31,839
let's uh let's start there

00:35:32,480 --> 00:35:36,800
thank you so much david there was a

00:35:34,960 --> 00:35:39,520
question from pavel in chat

00:35:36,800 --> 00:35:41,359
about having access to this presentation

00:35:39,520 --> 00:35:43,200
i was wondering if you could potentially

00:35:41,359 --> 00:35:46,160
share it somehow

00:35:43,200 --> 00:35:46,160
yeah i'll put it on

00:35:46,560 --> 00:35:52,240
the fedorapeople.org so i'll i'll add it

00:35:49,839 --> 00:35:55,520
to my fedora people

00:35:52,240 --> 00:35:58,720
so that you can get to it and i'll

00:35:55,520 --> 00:35:59,520
just stick that in chat right now thank

00:35:58,720 --> 00:36:01,839
you

00:35:59,520 --> 00:36:04,880
if anyone else has any questions please

00:36:01,839 --> 00:36:07,920
add them to q a

00:36:04,880 --> 00:36:10,960
i don't see any questions at this point

00:36:07,920 --> 00:36:14,000
do feel free to reach out

00:36:10,960 --> 00:36:16,480
on on discord to david and apologies for

00:36:14,000 --> 00:36:19,920
calling you duncan

00:36:16,480 --> 00:36:22,720
fantastic sorry for that and

00:36:19,920 --> 00:36:23,280
anural has a question there's a question

00:36:22,720 --> 00:36:27,920
in chat

00:36:23,280 --> 00:36:27,920
i don't know if you can see david i can

00:36:28,720 --> 00:36:36,640
i don't know i don't i'm sorry i don't

00:36:31,839 --> 00:36:39,520
see your question i see that i asked

00:36:36,640 --> 00:36:39,839
did i miss was it closer i can see it in

00:36:39,520 --> 00:36:42,960
q

00:36:39,839 --> 00:36:44,960
a so he's asking us again thanks

00:36:42,960 --> 00:36:46,400
any plans to be able to create core os

00:36:44,960 --> 00:36:49,359
in cockpit via web

00:36:46,400 --> 00:36:51,040
web interface i don't know uh but i but

00:36:49,359 --> 00:36:54,480
i can tell you that

00:36:51,040 --> 00:36:57,680
um that uh

00:36:54,480 --> 00:37:00,079
uh core os with cockpit

00:36:57,680 --> 00:37:01,520
might be a little bit overboard so a lot

00:37:00,079 --> 00:37:02,800
of the things that you want to be able

00:37:01,520 --> 00:37:06,079
to do and

00:37:02,800 --> 00:37:08,240
configure in cockpit are done uh through

00:37:06,079 --> 00:37:10,720
the ignition file

00:37:08,240 --> 00:37:11,599
and they're expected to be completed at

00:37:10,720 --> 00:37:13,040
boot

00:37:11,599 --> 00:37:15,040
one of the things that we talked about

00:37:13,040 --> 00:37:18,640
or that was uh

00:37:15,040 --> 00:37:23,440
a big part of this the concepts here was

00:37:18,640 --> 00:37:25,680
pipeline and the pipeline build process

00:37:23,440 --> 00:37:28,880
is done through that ignition file so

00:37:25,680 --> 00:37:31,280
making sure that you have a place to

00:37:28,880 --> 00:37:33,839
pass the details of that ignition file

00:37:31,280 --> 00:37:39,280
in a get up style

00:37:33,839 --> 00:37:39,280
configuration model is is a big goal

00:37:43,520 --> 00:37:48,640
does that answer the question oh no yeah

00:37:48,839 --> 00:37:51,839

YouTube URL: https://www.youtube.com/watch?v=QpF8WKA7gU8


