Title: User Experience (UX) + Free Software = ❤ - DevConf.CZ 2021
Publication date: 2021-03-14
Playlist: DevConfCZ 2021
Description: 
	Speaker: Máirín Duffy



We want free software to matter, to reach its highest potential to change the world for the better. In many fields, however, there is a massive gap between the existence of these tools and their actual usage on the front lines. How do we bridge that gap, so free software has a chance to make a difference? We need better UX to bridge that gap. This talk outlines a case study of a free software platform - the ChRIS project - aiming to bridge that gap between the wealth of free sofware medical analytical tools and frontline clinical practice with a user experience that meets the needs of medical researchers and clinicians. We believe ChRIS will help deliver the UX clinicians need to give them access to amazing free software tools that can improve medicine. (A blog-ified version of this talk is available at blog.linuxgrrl.com)


Schedule: https://sched.co/gmM7
Captions: 
	00:00:01,280 --> 00:00:05,600
hi i'm mo duffy and i'm a senior

00:00:03,520 --> 00:00:07,200
uh principal ux designer with red hat

00:00:05,600 --> 00:00:09,360
and i'm going to talk to you today about

00:00:07,200 --> 00:00:11,040
ux and free software and how they depend

00:00:09,360 --> 00:00:13,200
on each other and i'm going to use the

00:00:11,040 --> 00:00:15,360
chris project as an example

00:00:13,200 --> 00:00:17,039
so um you may not be familiar with the

00:00:15,360 --> 00:00:19,039
chris project so just as a quick

00:00:17,039 --> 00:00:20,960
run through it's an open source project

00:00:19,039 --> 00:00:22,400
and it's developed at boston children's

00:00:20,960 --> 00:00:23,519
hospital in partnership with other

00:00:22,400 --> 00:00:26,560
organizations

00:00:23,519 --> 00:00:28,800
red hat my employer boston university

00:00:26,560 --> 00:00:30,960
the massachusetts open cloud and other

00:00:28,800 --> 00:00:32,800
universities and organizations

00:00:30,960 --> 00:00:34,880
the goal of the chris project is to make

00:00:32,800 --> 00:00:37,440
all of the amazing free software

00:00:34,880 --> 00:00:38,640
in the medical space more accessible and

00:00:37,440 --> 00:00:41,920
usable to practice

00:00:38,640 --> 00:00:43,440
practitioners in the medical field

00:00:41,920 --> 00:00:45,200
and let me just give you a quick peek

00:00:43,440 --> 00:00:46,879
under the hood because a lot of times

00:00:45,200 --> 00:00:48,719
people will say platform and it's a bit

00:00:46,879 --> 00:00:50,480
of a nebulous term so i just want you to

00:00:48,719 --> 00:00:53,440
know exactly what i'm talking about

00:00:50,480 --> 00:00:53,840
when i say chris is a platform so chris

00:00:53,440 --> 00:00:57,440
has

00:00:53,840 --> 00:00:59,440
a backend okay and

00:00:57,440 --> 00:01:01,440
it's attached to the back end we have

00:00:59,440 --> 00:01:02,239
different uis and we'll talk about them

00:01:01,440 --> 00:01:04,320
in a bit

00:01:02,239 --> 00:01:05,680
but the back end connects and it's i

00:01:04,320 --> 00:01:06,320
know it's hard to read in the diagram

00:01:05,680 --> 00:01:09,200
but this is

00:01:06,320 --> 00:01:10,000
open stack and this is open shift here

00:01:09,200 --> 00:01:13,280
okay

00:01:10,000 --> 00:01:15,360
and this is a container-based system so

00:01:13,280 --> 00:01:16,479
the back end pulls data from medical

00:01:15,360 --> 00:01:19,200
institution

00:01:16,479 --> 00:01:21,280
and showing there right pushes the data

00:01:19,200 --> 00:01:23,200
into a series of containers that are

00:01:21,280 --> 00:01:24,320
chained together so this one is sort of

00:01:23,200 --> 00:01:26,240
the init container

00:01:24,320 --> 00:01:27,600
and then each can each of the containers

00:01:26,240 --> 00:01:29,280
in the chain here

00:01:27,600 --> 00:01:31,920
might have a different piece of free

00:01:29,280 --> 00:01:34,560
software in it and what chris does is it

00:01:31,920 --> 00:01:36,159
manages taking that medical data and

00:01:34,560 --> 00:01:37,680
pushing it in between the containers

00:01:36,159 --> 00:01:39,040
taking the output of one pushing it to

00:01:37,680 --> 00:01:40,079
the next we'll we'll talk about this in

00:01:39,040 --> 00:01:42,159
detail but

00:01:40,079 --> 00:01:43,840
each container the important part is a

00:01:42,159 --> 00:01:45,759
free software medical tool and it

00:01:43,840 --> 00:01:48,240
performs some kind of analysis

00:01:45,759 --> 00:01:49,600
um it uses that input output model so

00:01:48,240 --> 00:01:52,720
you push data in

00:01:49,600 --> 00:01:54,799
and the container runs through the data

00:01:52,720 --> 00:01:56,560
provides output you take that output and

00:01:54,799 --> 00:01:58,399
you provide it to the next container

00:01:56,560 --> 00:02:00,000
which is probably another free software

00:01:58,399 --> 00:02:02,320
plugin or it could just be out to the

00:02:00,000 --> 00:02:04,560
end user and your process is complete

00:02:02,320 --> 00:02:05,360
anyway this is just a quick overview of

00:02:04,560 --> 00:02:07,439
what we'll be

00:02:05,360 --> 00:02:09,520
using as a case study this chris project

00:02:07,439 --> 00:02:12,319
and what exactly i mean when i say

00:02:09,520 --> 00:02:12,319
it is a platform

00:02:13,520 --> 00:02:16,959
okay so now that you've gotten a quick

00:02:16,319 --> 00:02:19,520
ui

00:02:16,959 --> 00:02:21,040
overview of what chris is um who am i

00:02:19,520 --> 00:02:22,800
and what do i know anyway

00:02:21,040 --> 00:02:25,360
i'm a ux practitioner and i've been

00:02:22,800 --> 00:02:27,360
working at red hat for over 15 years now

00:02:25,360 --> 00:02:28,720
i specialize working with upstream free

00:02:27,360 --> 00:02:30,560
software communities um

00:02:28,720 --> 00:02:32,319
typically embedded in those communities

00:02:30,560 --> 00:02:33,680
and i'm also a long-term free software

00:02:32,319 --> 00:02:35,599
user myself

00:02:33,680 --> 00:02:36,959
i've been using free software since i

00:02:35,599 --> 00:02:37,920
discovered linux as a high school

00:02:36,959 --> 00:02:39,440
student

00:02:37,920 --> 00:02:41,599
i fell in love with it i loved how

00:02:39,440 --> 00:02:43,440
customizable it was and how it really

00:02:41,599 --> 00:02:45,760
provides an opportunity just the whole

00:02:43,440 --> 00:02:48,959
free software model of letting you

00:02:45,760 --> 00:02:51,200
co-create your own computing environment

00:02:48,959 --> 00:02:53,280
so from that experience i've come up

00:02:51,200 --> 00:02:54,560
with two basic principles of ux and

00:02:53,280 --> 00:02:56,800
software freedom

00:02:54,560 --> 00:02:58,720
the first one is that software freedom

00:02:56,800 --> 00:03:00,959
is critical to a good ux

00:02:58,720 --> 00:03:02,560
and the second one is that good ux is

00:03:00,959 --> 00:03:04,159
critical to software freedom

00:03:02,560 --> 00:03:06,319
so today we're going to be focusing on

00:03:04,159 --> 00:03:07,680
the second one but if you're interested

00:03:06,319 --> 00:03:09,599
in the first one and want to dive a

00:03:07,680 --> 00:03:10,080
little bit more into it i have another

00:03:09,599 --> 00:03:13,599
talk

00:03:10,080 --> 00:03:14,480
that i do on it and this is just a quick

00:03:13,599 --> 00:03:16,319
overview

00:03:14,480 --> 00:03:17,760
the main idea is that the principles

00:03:16,319 --> 00:03:19,200
inherent to free software

00:03:17,760 --> 00:03:21,440
give free software a much better

00:03:19,200 --> 00:03:23,840
potential to have a fantastic ux than

00:03:21,440 --> 00:03:25,599
proprietary software could ever have

00:03:23,840 --> 00:03:27,280
for example if you're using proprietary

00:03:25,599 --> 00:03:28,080
software and it uses a proprietary

00:03:27,280 --> 00:03:30,640
format

00:03:28,080 --> 00:03:32,799
your data is more susceptible to bitrot

00:03:30,640 --> 00:03:35,040
that reduces the longevity of your data

00:03:32,799 --> 00:03:37,280
and your ability to access it over time

00:03:35,040 --> 00:03:39,440
i actually in college when i was a

00:03:37,280 --> 00:03:41,120
freshman i used a tool called macromedia

00:03:39,440 --> 00:03:43,200
director if you've ever heard of it

00:03:41,120 --> 00:03:44,959
by the time i was a senior in college

00:03:43,200 --> 00:03:46,640
like less than four years later

00:03:44,959 --> 00:03:48,000
i could not open the files i made as a

00:03:46,640 --> 00:03:49,760
freshman because

00:03:48,000 --> 00:03:51,120
that file format had completely bit

00:03:49,760 --> 00:03:53,760
rotted and you could not buy

00:03:51,120 --> 00:03:56,000
the software to open it anymore so

00:03:53,760 --> 00:03:57,439
that's a bad user experience right

00:03:56,000 --> 00:03:59,120
this is not something that generally

00:03:57,439 --> 00:04:00,879
happens with free software because it

00:03:59,120 --> 00:04:02,640
adheres to open standards and you don't

00:04:00,879 --> 00:04:03,439
have to reverse engineer formats to

00:04:02,640 --> 00:04:06,400
access data

00:04:03,439 --> 00:04:07,920
there it's open source um anyway you

00:04:06,400 --> 00:04:10,080
could watch that talk where i

00:04:07,920 --> 00:04:11,360
give this and many other examples of you

00:04:10,080 --> 00:04:13,680
know why this principle

00:04:11,360 --> 00:04:15,040
is um and i actually gave it a previous

00:04:13,680 --> 00:04:17,519
dev conf in boston

00:04:15,040 --> 00:04:20,160
so the link is there on the slide the

00:04:17,519 --> 00:04:22,880
slides will be available after the talk

00:04:20,160 --> 00:04:25,199
okay so our focus is today today is that

00:04:22,880 --> 00:04:27,280
good ux is critical to software freedom

00:04:25,199 --> 00:04:28,720
so i have three questions for us to kind

00:04:27,280 --> 00:04:31,919
of start off to kind of get you in the

00:04:28,720 --> 00:04:33,759
thinking space here all right

00:04:31,919 --> 00:04:35,199
so you've probably heard this one before

00:04:33,759 --> 00:04:37,040
if a tree falls in the forest

00:04:35,199 --> 00:04:38,320
and no one is around to hear it does it

00:04:37,040 --> 00:04:42,000
make a sound

00:04:38,320 --> 00:04:44,080
okay so if your software has features

00:04:42,000 --> 00:04:46,080
and nobody can use those features does

00:04:44,080 --> 00:04:48,639
it really have those features

00:04:46,080 --> 00:04:50,639
and the third question here if your

00:04:48,639 --> 00:04:52,000
software is free software but only a few

00:04:50,639 --> 00:04:53,440
people can use it

00:04:52,000 --> 00:04:55,440
are you really providing software

00:04:53,440 --> 00:04:56,479
freedom so you know these are just some

00:04:55,440 --> 00:04:58,080
opening questions

00:04:56,479 --> 00:04:59,759
just this is where i'm coming from with

00:04:58,080 --> 00:05:02,400
this principle um

00:04:59,759 --> 00:05:04,080
here at 2021 we have a wealth of free

00:05:02,400 --> 00:05:07,120
and open source technology

00:05:04,080 --> 00:05:07,600
in seconds you can get a containerized

00:05:07,120 --> 00:05:10,639
app

00:05:07,600 --> 00:05:12,639
running on any system in a few minutes

00:05:10,639 --> 00:05:13,680
you can deploy a kubernetes cluster on

00:05:12,639 --> 00:05:15,360
your laptop

00:05:13,680 --> 00:05:16,960
and then in a few more minutes you can

00:05:15,360 --> 00:05:19,280
deploy a deep learning model

00:05:16,960 --> 00:05:20,080
on kubernetes on that cluster this is

00:05:19,280 --> 00:05:23,039
amazing

00:05:20,080 --> 00:05:24,000
in free software in the past 10 years

00:05:23,039 --> 00:05:26,160
maybe even longer

00:05:24,000 --> 00:05:28,000
i mean we've made so much progress you

00:05:26,160 --> 00:05:29,919
can work in almost any domain

00:05:28,000 --> 00:05:31,680
and start up a new software project and

00:05:29,919 --> 00:05:33,039
all of the underlying infrastructure and

00:05:31,680 --> 00:05:33,840
plumbing that you need is already

00:05:33,039 --> 00:05:35,919
available

00:05:33,840 --> 00:05:38,000
off the shelf free software license for

00:05:35,919 --> 00:05:40,720
you to use you can focus

00:05:38,000 --> 00:05:42,320
mostly most of the time on the actual

00:05:40,720 --> 00:05:44,000
bits that you really care about

00:05:42,320 --> 00:05:45,360
on that innovation piece making

00:05:44,000 --> 00:05:46,639
something new because you don't have to

00:05:45,360 --> 00:05:49,520
reinvent the wheel for all the

00:05:46,639 --> 00:05:49,520
foundational stuff

00:05:50,240 --> 00:05:54,880
so there's a problem this is the cloud

00:05:52,880 --> 00:05:56,400
native landscape and this is put out by

00:05:54,880 --> 00:05:58,160
the cloud native computing foundation

00:05:56,400 --> 00:06:00,240
now i don't want to pick on cloud

00:05:58,160 --> 00:06:01,600
at all but this is just a fantastic

00:06:00,240 --> 00:06:03,440
example that shows

00:06:01,600 --> 00:06:05,759
it's all a little complicated there are

00:06:03,440 --> 00:06:07,600
so many tools

00:06:05,759 --> 00:06:09,280
and technologists themselves have a hard

00:06:07,600 --> 00:06:10,720
time keeping up with all of this

00:06:09,280 --> 00:06:12,319
so when we're talking about free

00:06:10,720 --> 00:06:14,080
software aimed at the medical domain

00:06:12,319 --> 00:06:16,319
like the free software tools that we

00:06:14,080 --> 00:06:18,160
deploy on the chris platform

00:06:16,319 --> 00:06:19,919
how do we expect medical experts and

00:06:18,160 --> 00:06:20,880
clinicians to be able to keep up with an

00:06:19,919 --> 00:06:22,639
eye chart like that

00:06:20,880 --> 00:06:24,240
they're not software developers and even

00:06:22,639 --> 00:06:26,400
software developers have a difficult

00:06:24,240 --> 00:06:28,080
time keeping up

00:06:26,400 --> 00:06:30,319
but the thing is is there's so much

00:06:28,080 --> 00:06:32,080
potential here there really are so many

00:06:30,319 --> 00:06:32,720
free software tools in this medical

00:06:32,080 --> 00:06:34,960
space

00:06:32,720 --> 00:06:36,000
some of them have been around for years

00:06:34,960 --> 00:06:37,759
by default

00:06:36,000 --> 00:06:39,360
they tend to be developed and released

00:06:37,759 --> 00:06:41,840
as free software tools because they're

00:06:39,360 --> 00:06:42,960
created by researchers or academic labs

00:06:41,840 --> 00:06:44,639
or organizations

00:06:42,960 --> 00:06:46,800
that really want to collaborate and

00:06:44,639 --> 00:06:48,639
share the same way that they do with any

00:06:46,800 --> 00:06:50,319
research where it's the academic model

00:06:48,639 --> 00:06:52,479
you come out with a finding

00:06:50,319 --> 00:06:53,520
you share it you invite others to

00:06:52,479 --> 00:06:55,520
reproduce it

00:06:53,520 --> 00:06:57,039
and you know you try to come to an

00:06:55,520 --> 00:06:57,599
understanding you build on each other's

00:06:57,039 --> 00:06:59,039
work

00:06:57,599 --> 00:07:00,720
so they would like to use that same

00:06:59,039 --> 00:07:02,960
model with software which is the free

00:07:00,720 --> 00:07:05,520
software model

00:07:02,960 --> 00:07:06,960
but you know as a medical practitioner

00:07:05,520 --> 00:07:07,520
there's all these tools how do you

00:07:06,960 --> 00:07:09,840
actually

00:07:07,520 --> 00:07:11,599
use them they're often built by

00:07:09,840 --> 00:07:13,199
researchers who don't have a software

00:07:11,599 --> 00:07:15,120
development background

00:07:13,199 --> 00:07:16,319
they're usually built for use in a very

00:07:15,120 --> 00:07:18,400
specific study

00:07:16,319 --> 00:07:21,280
or under a specific lab environment and

00:07:18,400 --> 00:07:22,319
they don't have wider deployment in mind

00:07:21,280 --> 00:07:24,319
there tends to be a lack of

00:07:22,319 --> 00:07:25,919
standardization in these tools and a

00:07:24,319 --> 00:07:27,520
lack of integration between them because

00:07:25,919 --> 00:07:29,280
the researchers developing them are very

00:07:27,520 --> 00:07:30,080
focused on one thing they're not

00:07:29,280 --> 00:07:32,720
thinking

00:07:30,080 --> 00:07:33,919
more broadly about integrating things

00:07:32,720 --> 00:07:37,199
and making

00:07:33,919 --> 00:07:39,360
for generic usage and depending on the

00:07:37,199 --> 00:07:40,560
computation involved they may require a

00:07:39,360 --> 00:07:42,479
more sophisticated

00:07:40,560 --> 00:07:44,000
operating environment than most clinical

00:07:42,479 --> 00:07:46,879
practitioners have access

00:07:44,000 --> 00:07:48,160
to and just overall there's a high

00:07:46,879 --> 00:07:49,680
barrier to entry

00:07:48,160 --> 00:07:51,599
even though these tools are free

00:07:49,680 --> 00:07:53,039
software and they're publicly available

00:07:51,599 --> 00:07:54,720
these aren't tools that your typical

00:07:53,039 --> 00:07:57,840
medical practitioner could just pick

00:07:54,720 --> 00:07:59,440
up and start using in their practice we

00:07:57,840 --> 00:08:00,960
have to remember this

00:07:59,440 --> 00:08:02,800
these are very smart people in the

00:08:00,960 --> 00:08:04,560
medical field they're neuroscientists

00:08:02,800 --> 00:08:07,520
and brain surgeons for example

00:08:04,560 --> 00:08:09,120
but they can't hack the gibson a good ux

00:08:07,520 --> 00:08:10,160
does not require your users to be

00:08:09,120 --> 00:08:12,000
hackers

00:08:10,160 --> 00:08:14,319
unfortunately traditionally and

00:08:12,000 --> 00:08:16,479
historically free software has kind of

00:08:14,319 --> 00:08:19,199
required users to be hackers in order to

00:08:16,479 --> 00:08:21,919
make the best possible use of it

00:08:19,199 --> 00:08:23,599
so how do we bridge that gap between all

00:08:21,919 --> 00:08:25,680
of this amazing free software

00:08:23,599 --> 00:08:27,599
and clinical practice so that the free

00:08:25,680 --> 00:08:28,319
software can make a positive difference

00:08:27,599 --> 00:08:30,560
in the world

00:08:28,319 --> 00:08:32,560
so it can feasibly impact medical

00:08:30,560 --> 00:08:35,039
outcomes in a positive way

00:08:32,560 --> 00:08:35,680
it is good ux that is what will bridge

00:08:35,039 --> 00:08:37,839
that gap

00:08:35,680 --> 00:08:40,479
and that is why good ux is so critical

00:08:37,839 --> 00:08:42,560
to software freedom

00:08:40,479 --> 00:08:43,519
so again if your software is free

00:08:42,560 --> 00:08:45,760
software but

00:08:43,519 --> 00:08:47,600
only a few people can use it are you

00:08:45,760 --> 00:08:50,080
really providing software freedom

00:08:47,600 --> 00:08:51,920
i'm telling you no not really you need a

00:08:50,080 --> 00:08:53,440
good ux to be able to do that

00:08:51,920 --> 00:08:55,279
to be able to allow more than a few

00:08:53,440 --> 00:08:56,959
people to be able to use it and to be

00:08:55,279 --> 00:08:58,399
able to provide that software freedom to

00:08:56,959 --> 00:09:00,240
them

00:08:58,399 --> 00:09:02,320
so what are all of these amazing free

00:09:00,240 --> 00:09:04,240
software tools in the medical space

00:09:02,320 --> 00:09:06,240
this is a very quick map that i made it

00:09:04,240 --> 00:09:07,600
was honestly based on a five to ten

00:09:06,240 --> 00:09:09,120
minute survey i did

00:09:07,600 --> 00:09:11,360
of research papers and conference

00:09:09,120 --> 00:09:13,040
proceedings in various technology

00:09:11,360 --> 00:09:15,360
related medical groups

00:09:13,040 --> 00:09:16,959
these are all free software tools and it

00:09:15,360 --> 00:09:17,839
barely scratches the surface of what's

00:09:16,959 --> 00:09:19,360
available

00:09:17,839 --> 00:09:21,360
i want to talk about two of these in

00:09:19,360 --> 00:09:23,920
particular

00:09:21,360 --> 00:09:25,519
net and free surfer these are both tools

00:09:23,920 --> 00:09:28,000
that are now available for use on the

00:09:25,519 --> 00:09:30,160
crisp platform

00:09:28,000 --> 00:09:32,160
free surfer is an open source suite of

00:09:30,160 --> 00:09:33,440
tools and it focuses on processing brain

00:09:32,160 --> 00:09:35,200
mri images

00:09:33,440 --> 00:09:36,800
it's been around for a long time but

00:09:35,200 --> 00:09:38,959
it's not really in clinical use right

00:09:36,800 --> 00:09:38,959
now

00:09:39,040 --> 00:09:42,640
this is a 3d animation that was created

00:09:41,040 --> 00:09:44,000
in free surfer and it was running on top

00:09:42,640 --> 00:09:46,320
of the crisp platform

00:09:44,000 --> 00:09:47,839
the workflow here involved taking 2d

00:09:46,320 --> 00:09:50,480
images from an mri

00:09:47,839 --> 00:09:52,080
and mri basically takes images in slices

00:09:50,480 --> 00:09:54,720
across the brain

00:09:52,080 --> 00:09:55,839
and they're 2d so freesurfer constructed

00:09:54,720 --> 00:09:58,320
a 3d volume

00:09:55,839 --> 00:10:00,160
out of those flat 2d images and then it

00:09:58,320 --> 00:10:01,519
segmented the brain into all of its

00:10:00,160 --> 00:10:02,800
different structures so you can see all

00:10:01,519 --> 00:10:04,959
the different colors there

00:10:02,800 --> 00:10:06,480
well free surfer color coded them so at

00:10:04,959 --> 00:10:07,600
a glance you can see the different

00:10:06,480 --> 00:10:10,320
structures of the brain

00:10:07,600 --> 00:10:12,320
right on this 3d model so you know how

00:10:10,320 --> 00:10:13,920
is this useful in medical practice

00:10:12,320 --> 00:10:15,920
you might have a clinician who's not

00:10:13,920 --> 00:10:18,560
really sure what's wrong with a patient

00:10:15,920 --> 00:10:19,839
so instead of reviewing the 2d slices

00:10:18,560 --> 00:10:22,079
from the mri

00:10:19,839 --> 00:10:24,079
they'll be able to pan around this

00:10:22,079 --> 00:10:25,200
color-coded 3d structure and they might

00:10:24,079 --> 00:10:27,360
notice for example

00:10:25,200 --> 00:10:29,200
one of the structures let's say it's

00:10:27,360 --> 00:10:30,880
larger than is typical

00:10:29,200 --> 00:10:32,720
that might give them a clue as to what

00:10:30,880 --> 00:10:34,560
the diagnosis is and then once they have

00:10:32,720 --> 00:10:35,600
a diagnosis it'll get the patient to a

00:10:34,560 --> 00:10:37,519
quicker treatment

00:10:35,600 --> 00:10:39,200
so just being able to do this it could

00:10:37,519 --> 00:10:42,160
make a practitioner

00:10:39,200 --> 00:10:42,800
um much more able to diagnose a

00:10:42,160 --> 00:10:44,720
condition

00:10:42,800 --> 00:10:47,360
and so you can see the potential here

00:10:44,720 --> 00:10:50,000
right with tool like free surfer

00:10:47,360 --> 00:10:51,680
okay so here's another project kovidnet

00:10:50,000 --> 00:10:53,760
this is a free software project and it's

00:10:51,680 --> 00:10:55,200
developed by a company called darwin ai

00:10:53,760 --> 00:10:55,920
in partnership with the university of

00:10:55,200 --> 00:10:58,480
waterloo

00:10:55,920 --> 00:11:00,399
it uses a neural network to analyze ct

00:10:58,480 --> 00:11:03,440
and x-ray chess scans and

00:11:00,399 --> 00:11:05,040
it provides a probability where it it

00:11:03,440 --> 00:11:06,800
will tell you if the patient is more

00:11:05,040 --> 00:11:09,680
likely to have healthy lungs

00:11:06,800 --> 00:11:10,480
covalent or pneumonia this is an open

00:11:09,680 --> 00:11:12,399
source tool

00:11:10,480 --> 00:11:14,079
it's available to the general public and

00:11:12,399 --> 00:11:16,399
the potential here is to provide

00:11:14,079 --> 00:11:18,399
an alternative way to triage patients

00:11:16,399 --> 00:11:19,440
when let's say there's a covered surge

00:11:18,399 --> 00:11:21,120
of cases

00:11:19,440 --> 00:11:23,120
you have a lot of people coming into the

00:11:21,120 --> 00:11:25,120
hospital you're running out of beds and

00:11:23,120 --> 00:11:26,800
maybe your test results are backed up

00:11:25,120 --> 00:11:28,320
if you can get the patient to a ct

00:11:26,800 --> 00:11:29,519
scanner or an x-ray

00:11:28,320 --> 00:11:31,519
then you could use this as an

00:11:29,519 --> 00:11:32,720
alternative way to triage the patient

00:11:31,519 --> 00:11:35,360
patient diagnose

00:11:32,720 --> 00:11:36,000
you know what kind of um ailment that

00:11:35,360 --> 00:11:37,440
they have

00:11:36,000 --> 00:11:39,040
so these are just examples of two

00:11:37,440 --> 00:11:40,880
projects that we've worked with in the

00:11:39,040 --> 00:11:43,360
chris project

00:11:40,880 --> 00:11:44,959
okay so how do we get amazing tools like

00:11:43,360 --> 00:11:46,480
these they're free software they have a

00:11:44,959 --> 00:11:47,360
lot of potential how do we get them in

00:11:46,480 --> 00:11:50,160
the front lines

00:11:47,360 --> 00:11:52,160
in medical institutions dr ellen grant

00:11:50,160 --> 00:11:53,040
who's the director of the fetal neonatal

00:11:52,160 --> 00:11:54,720
neural imaging

00:11:53,040 --> 00:11:56,160
and developmental science center at

00:11:54,720 --> 00:11:57,600
boston children's hospital

00:11:56,160 --> 00:11:59,760
who is one of the founders of the chris

00:11:57,600 --> 00:12:02,560
project she came up with a list of three

00:11:59,760 --> 00:12:04,720
basic requirements for these tools

00:12:02,560 --> 00:12:07,120
to to have in their user experience so

00:12:04,720 --> 00:12:09,360
that clinicians can actually use them

00:12:07,120 --> 00:12:10,800
so the first is that these tools have to

00:12:09,360 --> 00:12:12,880
be reproducible

00:12:10,800 --> 00:12:14,560
the second is that they have to be rapid

00:12:12,880 --> 00:12:15,519
and the third is that they just have to

00:12:14,560 --> 00:12:16,720
be easy

00:12:15,519 --> 00:12:19,120
so let's first talk about

00:12:16,720 --> 00:12:20,959
reproducibility in the medical space

00:12:19,120 --> 00:12:22,639
you're interacting with scientists and

00:12:20,959 --> 00:12:23,120
medical researchers and they're trying

00:12:22,639 --> 00:12:25,839
to find

00:12:23,120 --> 00:12:27,839
evidence to support new technology or

00:12:25,839 --> 00:12:29,200
techniques or methods of analyzing data

00:12:27,839 --> 00:12:32,160
to come up with

00:12:29,200 --> 00:12:33,440
an idea so if a new method comes out and

00:12:32,160 --> 00:12:35,360
let's say it's a new machine learning

00:12:33,440 --> 00:12:37,440
model let's say it's the covenant model

00:12:35,360 --> 00:12:38,399
okay and you're reading a study that

00:12:37,440 --> 00:12:40,800
supports

00:12:38,399 --> 00:12:42,399
the technique and it shows evidence for

00:12:40,800 --> 00:12:45,200
its effectiveness

00:12:42,399 --> 00:12:46,800
if you want the best possible shot of

00:12:45,200 --> 00:12:49,360
reproducing those results

00:12:46,800 --> 00:12:51,040
you want to put your data into that

00:12:49,360 --> 00:12:52,240
system and you want the system be as

00:12:51,040 --> 00:12:55,279
close as possible

00:12:52,240 --> 00:12:57,279
as to the actual system that was studied

00:12:55,279 --> 00:12:59,200
so you want to eliminate any variables

00:12:57,279 --> 00:13:00,959
like the operating environment

00:12:59,200 --> 00:13:04,800
the type of container the os the

00:13:00,959 --> 00:13:06,959
configuration that might skew the output

00:13:04,800 --> 00:13:08,320
to be able to reproduce exactly what

00:13:06,959 --> 00:13:09,680
somebody had done with one of these

00:13:08,320 --> 00:13:11,519
tools previously

00:13:09,680 --> 00:13:12,880
you would have to take it and install it

00:13:11,519 --> 00:13:15,040
in exactly the same way

00:13:12,880 --> 00:13:17,040
the same configuration rebuild it with

00:13:15,040 --> 00:13:18,839
the same flags exactly the way it was

00:13:17,040 --> 00:13:20,079
built in as close an environment as

00:13:18,839 --> 00:13:21,600
possible

00:13:20,079 --> 00:13:23,760
this is what that would look like for

00:13:21,600 --> 00:13:25,760
example if you're installing free surfer

00:13:23,760 --> 00:13:27,600
as a screenshot of that process

00:13:25,760 --> 00:13:30,480
this is not something that we can expect

00:13:27,600 --> 00:13:32,720
medical practitioners to go through

00:13:30,480 --> 00:13:34,800
so how do we make tools like these more

00:13:32,720 --> 00:13:37,440
reproducible for clinicians i'll use

00:13:34,800 --> 00:13:39,600
crovidnet as an example we took it and

00:13:37,440 --> 00:13:40,800
we packaged it in what we call a crisp

00:13:39,600 --> 00:13:42,720
plug-in container

00:13:40,800 --> 00:13:45,040
the chris plug-in container is just it

00:13:42,720 --> 00:13:47,440
basically means it's containerized

00:13:45,040 --> 00:13:48,800
and we put like a small wrapper on top

00:13:47,440 --> 00:13:51,040
that has some metadata

00:13:48,800 --> 00:13:52,720
and miscellaneous tools that allow it to

00:13:51,040 --> 00:13:54,959
work on the chris platform

00:13:52,720 --> 00:13:56,720
once a chris has once a plug-in has been

00:13:54,959 --> 00:13:58,639
containerized as a chris plugin

00:13:56,720 --> 00:14:00,160
it can run on chris which gives you a

00:13:58,639 --> 00:14:02,560
number of ux benefits

00:14:00,160 --> 00:14:04,320
including reproducibility a clinician

00:14:02,560 --> 00:14:06,079
can just pick the tool from a list of

00:14:04,320 --> 00:14:07,600
tools from within the chris ui

00:14:06,079 --> 00:14:09,360
push their data to it and get the

00:14:07,600 --> 00:14:12,079
results and chris manages

00:14:09,360 --> 00:14:12,079
all of the rest

00:14:14,639 --> 00:14:18,240
we have a broader vision for

00:14:16,079 --> 00:14:20,240
reproducibility via chris here

00:14:18,240 --> 00:14:21,760
this is a screenshot of a chris plug-in

00:14:20,240 --> 00:14:23,440
store prototype

00:14:21,760 --> 00:14:25,680
we envision making all of these amazing

00:14:23,440 --> 00:14:27,760
free software medical tools as easy to

00:14:25,680 --> 00:14:28,959
install and run on top of chris as it is

00:14:27,760 --> 00:14:31,360
to install and run

00:14:28,959 --> 00:14:32,560
apps on a phone from an app store so

00:14:31,360 --> 00:14:33,760
this is an example of a tool

00:14:32,560 --> 00:14:36,399
containerized for chris

00:14:33,760 --> 00:14:37,600
it's called pl civit you could take a

00:14:36,399 --> 00:14:39,519
look at the tool

00:14:37,600 --> 00:14:40,880
deploy it to your chris server and use

00:14:39,519 --> 00:14:42,639
it in your analysis

00:14:40,880 --> 00:14:44,079
and it's pretty much like shopping in an

00:14:42,639 --> 00:14:46,079
app store

00:14:44,079 --> 00:14:47,519
all of these amazing tools they're hard

00:14:46,079 --> 00:14:49,199
to install

00:14:47,519 --> 00:14:51,120
they're hard to run and they're hard to

00:14:49,199 --> 00:14:53,360
reproduce in the same exact way

00:14:51,120 --> 00:14:54,560
that you know is in the same way that a

00:14:53,360 --> 00:14:55,760
study was done that showed some

00:14:54,560 --> 00:14:57,519
effectiveness so

00:14:55,760 --> 00:14:59,360
instead of requiring medical researchers

00:14:57,519 --> 00:15:01,440
and practitioners to use the linux

00:14:59,360 --> 00:15:02,320
terminal to compile code and to set up

00:15:01,440 --> 00:15:04,880
environments with

00:15:02,320 --> 00:15:06,720
exact specifications we envisioned them

00:15:04,880 --> 00:15:08,480
being able to browse through these tools

00:15:06,720 --> 00:15:10,000
like in an app store and to be able to

00:15:08,480 --> 00:15:10,800
easily run them on their own chris

00:15:10,000 --> 00:15:12,320
server

00:15:10,800 --> 00:15:14,000
that would mean they would get much more

00:15:12,320 --> 00:15:15,519
reproducibility out of the tools and

00:15:14,000 --> 00:15:16,800
they could know exactly what

00:15:15,519 --> 00:15:20,000
they can know that they are running the

00:15:16,800 --> 00:15:21,920
exact same version in their container

00:15:20,000 --> 00:15:23,680
okay so the second requirement from dr

00:15:21,920 --> 00:15:26,240
grant is rapidness

00:15:23,680 --> 00:15:28,320
these tools need to be quick for example

00:15:26,240 --> 00:15:30,800
we're still in a pandemic right now

00:15:28,320 --> 00:15:32,720
as covet cases surge hospitals run out

00:15:30,800 --> 00:15:34,240
of capacity and they need to turn over

00:15:32,720 --> 00:15:36,720
beds quickly

00:15:34,240 --> 00:15:38,560
computations that take hours or days to

00:15:36,720 --> 00:15:40,880
run will just not be used by clinicians

00:15:38,560 --> 00:15:41,839
they don't have time so the tools have

00:15:40,880 --> 00:15:44,079
to be fast

00:15:41,839 --> 00:15:45,680
or let's take a non-pandemic case you

00:15:44,079 --> 00:15:46,240
know take a little break from that for

00:15:45,680 --> 00:15:47,839
once

00:15:46,240 --> 00:15:49,920
you might have a patient who needs to

00:15:47,839 --> 00:15:51,199
travel far for specialized care maybe

00:15:49,920 --> 00:15:53,839
they have a rare condition

00:15:51,199 --> 00:15:56,320
and the closest you know medical center

00:15:53,839 --> 00:15:58,800
that can help them is far away from home

00:15:56,320 --> 00:16:00,639
if results could come back in minutes it

00:15:58,800 --> 00:16:02,399
could save that sick patient from having

00:16:00,639 --> 00:16:06,160
to stay in a hotel away from home

00:16:02,399 --> 00:16:06,160
waiting for results in the next steps

00:16:06,320 --> 00:16:10,079
so some of these computations take a

00:16:08,160 --> 00:16:11,920
long time so

00:16:10,079 --> 00:16:13,920
let's throw more computing power at them

00:16:11,920 --> 00:16:15,519
and get results back quicker that way

00:16:13,920 --> 00:16:17,920
chris lays the foundation that will

00:16:15,519 --> 00:16:20,000
enable you to do that chris can run or

00:16:17,920 --> 00:16:22,480
orchestrate workloads on a single system

00:16:20,000 --> 00:16:23,759
hpc or cloud or across those combined in

00:16:22,480 --> 00:16:25,680
different deployments

00:16:23,759 --> 00:16:26,959
you can get really rapid results and

00:16:25,680 --> 00:16:28,880
chris gives you all the basic

00:16:26,959 --> 00:16:30,480
infrastructure to do it so individual

00:16:28,880 --> 00:16:31,759
organizations don't have to figure out

00:16:30,480 --> 00:16:34,880
how to set this up on

00:16:31,759 --> 00:16:36,959
on their own from scratch for example

00:16:34,880 --> 00:16:38,480
this is a screenshot of the chris ui

00:16:36,959 --> 00:16:40,959
and it shows how you build these

00:16:38,480 --> 00:16:44,000
pipelines or analyses in chris

00:16:40,959 --> 00:16:45,199
if you see here each one of these little

00:16:44,000 --> 00:16:47,040
nodes on the graph

00:16:45,199 --> 00:16:48,880
is a container and each one of these

00:16:47,040 --> 00:16:49,279
containers is running a free software

00:16:48,880 --> 00:16:51,199
tool

00:16:49,279 --> 00:16:53,360
and that tool was containerized for

00:16:51,199 --> 00:16:55,839
chris so you can see here

00:16:53,360 --> 00:16:57,279
this is the free surfer container

00:16:55,839 --> 00:17:00,160
running right there

00:16:57,279 --> 00:17:02,240
and this one up here is its input

00:17:00,160 --> 00:17:03,680
container so that takes the data

00:17:02,240 --> 00:17:05,520
that is going to be pushed through the

00:17:03,680 --> 00:17:06,559
analysis and loads it into the next

00:17:05,520 --> 00:17:08,559
container

00:17:06,559 --> 00:17:10,959
you could see free surfer splitting out

00:17:08,559 --> 00:17:11,919
here so basically what's happening here

00:17:10,959 --> 00:17:13,919
is it's taking

00:17:11,919 --> 00:17:15,520
the same containers like the same

00:17:13,919 --> 00:17:16,559
software and containers and making

00:17:15,520 --> 00:17:18,559
copies of them

00:17:16,559 --> 00:17:20,160
and splitting up the data so that they

00:17:18,559 --> 00:17:21,760
can run in parallel

00:17:20,160 --> 00:17:23,439
so you could get all of this kind of

00:17:21,760 --> 00:17:24,959
orchestration and computing power

00:17:23,439 --> 00:17:27,839
just based on the infrastructure that

00:17:24,959 --> 00:17:31,600
you get from chris out of the box

00:17:27,839 --> 00:17:33,520
where did my mouse go so this is just

00:17:31,600 --> 00:17:34,240
another diagram to show a different view

00:17:33,520 --> 00:17:37,200
of this

00:17:34,240 --> 00:17:38,320
so you have the chris store here and

00:17:37,200 --> 00:17:40,240
like this pa

00:17:38,320 --> 00:17:42,320
thing this is the plugin so the plugin

00:17:40,240 --> 00:17:45,280
gets loaded to the chris back ends

00:17:42,320 --> 00:17:46,000
and then chris also um organizes how to

00:17:45,280 --> 00:17:47,520
get to

00:17:46,000 --> 00:17:49,360
the hospital data store which is

00:17:47,520 --> 00:17:52,320
typically what you call a pax

00:17:49,360 --> 00:17:53,440
server um it'll get the data from that

00:17:52,320 --> 00:17:56,640
store

00:17:53,440 --> 00:17:59,760
pull it in and then it'll push that data

00:17:56,640 --> 00:18:01,200
into a container that it sets up in one

00:17:59,760 --> 00:18:02,880
of several computing environments like

00:18:01,200 --> 00:18:04,559
you could see this one is an open shift

00:18:02,880 --> 00:18:05,919
openstack computing environment this is

00:18:04,559 --> 00:18:06,720
the mass open cloud computing

00:18:05,919 --> 00:18:08,559
environment

00:18:06,720 --> 00:18:09,840
but there's other computing i'm sorry

00:18:08,559 --> 00:18:13,280
for interrupting you but

00:18:09,840 --> 00:18:15,360
yeah i mean it's left oh my really

00:18:13,280 --> 00:18:16,880
okay all right i'm gonna move quickly

00:18:15,360 --> 00:18:19,280
then so

00:18:16,880 --> 00:18:20,080
anyway yes so you could see chris can

00:18:19,280 --> 00:18:21,919
orchestrate

00:18:20,080 --> 00:18:23,919
um workloads and push them out to

00:18:21,919 --> 00:18:25,440
different work uh computing environments

00:18:23,919 --> 00:18:29,600
and then pull back the data

00:18:25,440 --> 00:18:30,880
um all right and then

00:18:29,600 --> 00:18:32,720
one of those compute environments that

00:18:30,880 --> 00:18:34,640
chris uses is the massachusetts open

00:18:32,720 --> 00:18:36,400
cloud and this is dr oren krieger

00:18:34,640 --> 00:18:38,240
he's the principal investigator for the

00:18:36,400 --> 00:18:39,760
mlc at boston university

00:18:38,240 --> 00:18:41,600
um this is a publicly owned

00:18:39,760 --> 00:18:43,120
non-commercial cloud they collaborate

00:18:41,600 --> 00:18:44,400
with the chris project

00:18:43,120 --> 00:18:46,320
and actually we have a test deployment

00:18:44,400 --> 00:18:47,520
with covid net right now running on the

00:18:46,320 --> 00:18:48,880
mlc

00:18:47,520 --> 00:18:50,960
and this is just another way that we're

00:18:48,880 --> 00:18:52,480
looking to make massive

00:18:50,960 --> 00:18:54,720
power that's in cloud computing

00:18:52,480 --> 00:18:55,520
environments accessible to medical

00:18:54,720 --> 00:18:57,200
institutions

00:18:55,520 --> 00:18:58,720
using a public cloud rather than a

00:18:57,200 --> 00:19:00,000
proprietary one that might

00:18:58,720 --> 00:19:02,320
you know have weird data sharing

00:19:00,000 --> 00:19:05,440
agreements okay so the final

00:19:02,320 --> 00:19:07,520
requirement here from dr grant is easy

00:19:05,440 --> 00:19:09,039
okay so we've kind of assembled all the

00:19:07,520 --> 00:19:11,919
infrastructure and plumbing

00:19:09,039 --> 00:19:12,640
to provide rapid compute and we've made

00:19:11,919 --> 00:19:14,640
a

00:19:12,640 --> 00:19:16,400
a kind of a structure that is

00:19:14,640 --> 00:19:19,360
reproducible

00:19:16,400 --> 00:19:20,960
so what we really need is the tools then

00:19:19,360 --> 00:19:23,919
to be easily deployable

00:19:20,960 --> 00:19:24,880
are easily used by medical practitioners

00:19:23,919 --> 00:19:27,520
um

00:19:24,880 --> 00:19:29,120
and i'm just gonna move a little quickly

00:19:27,520 --> 00:19:31,360
here since i'm running out of time

00:19:29,120 --> 00:19:32,720
this is an example of the core chris ui

00:19:31,360 --> 00:19:35,360
this is the feed list

00:19:32,720 --> 00:19:37,200
and um this is aimed not at clinicians

00:19:35,360 --> 00:19:38,960
but medical researchers who are building

00:19:37,200 --> 00:19:41,200
pipelines so they have some knowledge of

00:19:38,960 --> 00:19:42,799
what these analysis tools can do

00:19:41,200 --> 00:19:44,240
and how you could potentially chain them

00:19:42,799 --> 00:19:46,000
together to get an output

00:19:44,240 --> 00:19:48,000
so they're using this interface to sort

00:19:46,000 --> 00:19:49,600
of develop and refine

00:19:48,000 --> 00:19:51,440
these pipelines of containers running

00:19:49,600 --> 00:19:52,480
together without having to know how to

00:19:51,440 --> 00:19:54,880
run containers or

00:19:52,480 --> 00:19:56,160
compile code or anything um and it's

00:19:54,880 --> 00:19:59,360
just an example of how they

00:19:56,160 --> 00:20:01,440
they add nodes to the pipeline and this

00:19:59,360 --> 00:20:05,200
shows sort of the output right

00:20:01,440 --> 00:20:07,200
so this is an example of a ui that is

00:20:05,200 --> 00:20:09,919
more focused towards a clinician

00:20:07,200 --> 00:20:11,440
this is the cova net ui and it's a very

00:20:09,919 --> 00:20:13,760
single purpose ui

00:20:11,440 --> 00:20:16,720
rather than having the clinician have to

00:20:13,760 --> 00:20:19,679
pick out a pipeline like this

00:20:16,720 --> 00:20:21,440
this ui is keyed exactly one to one with

00:20:19,679 --> 00:20:23,840
one of those analysis and this one is

00:20:21,440 --> 00:20:26,799
the covalent analysis pipeline

00:20:23,840 --> 00:20:28,080
and it just allows them to pick the

00:20:26,799 --> 00:20:30,000
patient images

00:20:28,080 --> 00:20:31,200
push it through that pipeline get the

00:20:30,000 --> 00:20:33,840
results back so

00:20:31,200 --> 00:20:34,720
all of that complicated pipeline

00:20:33,840 --> 00:20:36,000
building stuff

00:20:34,720 --> 00:20:37,360
is working under the covers for the

00:20:36,000 --> 00:20:38,799
clinician they don't have to know or

00:20:37,360 --> 00:20:40,720
worry about it

00:20:38,799 --> 00:20:42,880
um and here you can see you just type in

00:20:40,720 --> 00:20:44,240
the patient mrn oh

00:20:42,880 --> 00:20:46,080
that didn't work that's all right you

00:20:44,240 --> 00:20:47,760
type in the patient mrn it gives you

00:20:46,080 --> 00:20:49,120
the images you pick the images you want

00:20:47,760 --> 00:20:51,360
to analyze and then

00:20:49,120 --> 00:20:53,039
in a couple minutes you get results just

00:20:51,360 --> 00:20:54,159
like this so here you can see it's like

00:20:53,039 --> 00:20:57,120
a 75

00:20:54,159 --> 00:20:58,320
or so rate of um a prediction that is

00:20:57,120 --> 00:21:00,480
normal lungs

00:20:58,320 --> 00:21:02,159
and there's a 25 probability that the

00:21:00,480 --> 00:21:04,000
patient has covered

00:21:02,159 --> 00:21:05,520
um if the clinician wants to kind of

00:21:04,000 --> 00:21:06,880
open up the image and look with their

00:21:05,520 --> 00:21:09,039
own eyes to kind of

00:21:06,880 --> 00:21:10,880
double check what the model found then

00:21:09,039 --> 00:21:13,919
we've built in a radiology viewer

00:21:10,880 --> 00:21:16,880
into the tool as well

00:21:13,919 --> 00:21:17,760
so you can see with this model where

00:21:16,880 --> 00:21:21,200
we're

00:21:17,760 --> 00:21:22,559
we're for clinicians we've provided all

00:21:21,200 --> 00:21:24,320
of the plumbing and everything you need

00:21:22,559 --> 00:21:26,400
to build a very custom

00:21:24,320 --> 00:21:28,080
streamlined ui for a very specific

00:21:26,400 --> 00:21:29,600
purpose aligned to a very specific

00:21:28,080 --> 00:21:31,520
pipeline

00:21:29,600 --> 00:21:33,280
that is to make it easier for them to

00:21:31,520 --> 00:21:34,080
access all of the amazing technology

00:21:33,280 --> 00:21:36,159
underneath

00:21:34,080 --> 00:21:38,000
so you can see how we we have tried to

00:21:36,159 --> 00:21:41,120
meet all of these three requirements

00:21:38,000 --> 00:21:43,760
reproducible rapid and easy

00:21:41,120 --> 00:21:45,840
to make this free software accessible on

00:21:43,760 --> 00:21:48,000
the medical front lines

00:21:45,840 --> 00:21:49,520
and honestly in other words you know to

00:21:48,000 --> 00:21:50,799
get the in the front lines

00:21:49,520 --> 00:21:52,720
we have to provide a great user

00:21:50,799 --> 00:21:55,280
experience and

00:21:52,720 --> 00:21:56,080
for free software to matter generally we

00:21:55,280 --> 00:21:58,640
have to provide

00:21:56,080 --> 00:22:00,559
a great user experience so just a quick

00:21:58,640 --> 00:22:02,880
review of my two principles here

00:22:00,559 --> 00:22:04,799
software freedom is critical to good ux

00:22:02,880 --> 00:22:05,679
and good ux is critical to software

00:22:04,799 --> 00:22:07,440
freedom

00:22:05,679 --> 00:22:13,280
thank you maybe there's a minute or two

00:22:07,440 --> 00:22:13,280

YouTube URL: https://www.youtube.com/watch?v=FPMmZgLAJpU


