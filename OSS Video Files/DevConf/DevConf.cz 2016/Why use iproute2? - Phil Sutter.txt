Title: Why use iproute2? - Phil Sutter
Publication date: 2016-02-11
Playlist: DevConf.cz 2016
Description: 
	This will be a tour of iproute2 features, showing which dedicated tools it supersedes, why it is superior to them and what additional functionality it provides.

I intend to show most of the presented things live in order to better illustrate how working with the 'ip' command looks and feels like.

The project home page is available at: http://www.linuxfoundation.org/collab...

Motivation behind this talk is my impression that many users still adhere to traditional tools like 'ifconfig', 'route' or 'netstat' and therefore never get familiar enough with iproute2 to intuitively get around with it for use-cases where there's no alternative to it.

Presentation: http://bit.ly/1Qci8DP
Captions: 
	00:01:02,290 --> 00:01:10,460
no I'm sure I'm working for a turd and

00:01:07,390 --> 00:01:12,710
today I would like to elaborate a bit on

00:01:10,460 --> 00:01:16,880
the question why should you use a

00:01:12,710 --> 00:01:26,560
periodic tool or in detail should you at

00:01:16,880 --> 00:01:30,710
all so what is IP route 2 about it's

00:01:26,560 --> 00:01:34,399
mostly famous the IP utility which many

00:01:30,710 --> 00:01:40,190
of you know about but there's actually

00:01:34,399 --> 00:01:42,470
more that comes with the package we have

00:01:40,190 --> 00:01:48,670
a replacement for net start which is

00:01:42,470 --> 00:01:51,680
called SS little bad name for German

00:01:48,670 --> 00:01:56,210
there are a bunch of statistics

00:01:51,680 --> 00:02:00,590
utilities like you know obviously the

00:01:56,210 --> 00:02:05,060
random have statistics already we have

00:02:00,590 --> 00:02:08,149
some obscure to the T which is does

00:02:05,060 --> 00:02:12,590
things with with riches but it's not

00:02:08,149 --> 00:02:16,420
exactly replacement to richer tools we

00:02:12,590 --> 00:02:25,730
have the famous TC everyone doing Q as

00:02:16,420 --> 00:02:29,030
probably and yeah there's some minor

00:02:25,730 --> 00:02:32,209
stuff like this transparent IP C

00:02:29,030 --> 00:02:36,320
configuration utility I personally

00:02:32,209 --> 00:02:40,549
didn't use and obviously there are many

00:02:36,320 --> 00:02:43,459
more which I have no idea if they are

00:02:40,549 --> 00:02:48,980
used at all or just dinosaurs from

00:02:43,459 --> 00:02:51,230
foreign time I will in this talk

00:02:48,980 --> 00:02:54,100
basically just cover the first three

00:02:51,230 --> 00:02:58,000
items because

00:02:54,100 --> 00:03:02,530
just beyond the scope okay

00:02:58,000 --> 00:03:07,860
so general question do you really want

00:03:02,530 --> 00:03:14,110
to use this and many of you would say

00:03:07,860 --> 00:03:16,660
you don't and well I got used to it so I

00:03:14,110 --> 00:03:20,710
can't really answer this question why

00:03:16,660 --> 00:03:27,060
but I did some research on the internet

00:03:20,710 --> 00:03:29,050
and people were complaining and I try to

00:03:27,060 --> 00:03:32,410
write together what they were

00:03:29,050 --> 00:03:35,080
complaining about so the biggest issue

00:03:32,410 --> 00:03:37,180
is it's hard to learn especially when

00:03:35,080 --> 00:03:40,930
your muscle memories remember the old

00:03:37,180 --> 00:03:45,160
stuff and main page isn't exactly

00:03:40,930 --> 00:03:50,410
readable to people not perfectly used to

00:03:45,160 --> 00:03:55,450
be enough in addition it has a hole of

00:03:50,410 --> 00:03:59,680
17 subcommands so the IP main page is

00:03:55,450 --> 00:04:04,800
pretty overwhelming you can in order to

00:03:59,680 --> 00:04:09,250
reduce typing you can abbreviate them

00:04:04,800 --> 00:04:13,180
which means your friend who reads your

00:04:09,250 --> 00:04:19,150
history doesn't have an idea what you

00:04:13,180 --> 00:04:21,340
were doing and sometimes you have to

00:04:19,150 --> 00:04:27,030
take care how you order the different

00:04:21,340 --> 00:04:31,480
parameters it's not exactly get opt so

00:04:27,030 --> 00:04:33,840
to be precise not at all so it's not

00:04:31,480 --> 00:04:33,840
intuitive

00:04:33,960 --> 00:04:41,230
many people are subsided simply

00:04:36,370 --> 00:04:44,920
inconvenient without with if conflict

00:04:41,230 --> 00:04:47,500
you could just said if config eth0 IP

00:04:44,920 --> 00:04:50,410
address and who do you have to interface

00:04:47,500 --> 00:04:53,740
with IP route you have to at the end of

00:04:50,410 --> 00:04:57,540
the IP address and then in addition set

00:04:53,740 --> 00:05:00,550
it up and when you list your interfaces

00:04:57,540 --> 00:05:03,160
you don't see the statistics by default

00:05:00,550 --> 00:05:04,750
so you don't see what it's doing but in

00:05:03,160 --> 00:05:06,760
addition you get all the disabled

00:05:04,750 --> 00:05:07,190
interfaces which many don't like or are

00:05:06,760 --> 00:05:14,660
not

00:05:07,190 --> 00:05:18,490
president so yeah and which is kind of

00:05:14,660 --> 00:05:23,720
funny if you try to mess with your

00:05:18,490 --> 00:05:27,050
co-working suicide mean you can add IP

00:05:23,720 --> 00:05:31,150
leave you before aliases which are not

00:05:27,050 --> 00:05:36,650
seen by if conflict so you can play

00:05:31,150 --> 00:05:39,140
games with them further things output

00:05:36,650 --> 00:05:41,720
formatting is a big issue it's like

00:05:39,140 --> 00:05:44,870
you're trying to display the routing

00:05:41,720 --> 00:05:51,580
table but you don't see a table at all

00:05:44,870 --> 00:05:54,290
it's just a number of messy lines SS

00:05:51,580 --> 00:05:59,290
kind of course the opposite way it over

00:05:54,290 --> 00:06:03,140
does tabling so you always get the full

00:05:59,290 --> 00:06:06,170
terminal width no matter how wide your

00:06:03,140 --> 00:06:12,100
terminal is and it still tends to to

00:06:06,170 --> 00:06:14,900
break lines another thing i hurt--was i

00:06:12,100 --> 00:06:17,990
promote towards the neck specific if

00:06:14,900 --> 00:06:21,080
conflict net start loud these are

00:06:17,990 --> 00:06:26,510
basically UNIX commanders so going to

00:06:21,080 --> 00:06:28,880
ESD or whatever through 64 you can at

00:06:26,510 --> 00:06:32,300
least you have an idea what you should

00:06:28,880 --> 00:06:36,260
look at I brought was this is an

00:06:32,300 --> 00:06:43,880
existing there at all and yeah it's a

00:06:36,260 --> 00:06:46,610
bit it's a bit cheating but still you

00:06:43,880 --> 00:06:49,040
can't do everything with it yeah of

00:06:46,610 --> 00:06:52,510
course I couldn't display my

00:06:49,040 --> 00:06:56,270
presentation using like you all know

00:06:52,510 --> 00:07:00,290
that I would would want to so but still

00:06:56,270 --> 00:07:05,780
you have ETH tool and iwconfig there's

00:07:00,290 --> 00:07:08,530
no support for for wireless or hardware

00:07:05,780 --> 00:07:08,530
like stuff

00:07:09,140 --> 00:07:16,520
okay to illustrate a bit I thought

00:07:12,480 --> 00:07:21,980
number of questions for you first one is

00:07:16,520 --> 00:07:28,250
what does IP r s really stand for

00:07:21,980 --> 00:07:28,250
we have ruleset rural road set nacho

00:07:32,240 --> 00:07:39,350
g-g-gee is good really the question is

00:07:36,810 --> 00:07:43,080
it's the answer is it's a cure-all show

00:07:39,350 --> 00:07:47,250
that was pretty obvious so we take the

00:07:43,080 --> 00:07:58,830
next simple example i pls is it l2tp set

00:07:47,250 --> 00:08:02,250
show links at all in show you're

00:07:58,830 --> 00:08:09,140
undecided okay let's see it's IP link

00:08:02,250 --> 00:08:09,140
set so not exactly what you would expect

00:08:09,560 --> 00:08:17,970
next thing is we're covering parameter

00:08:15,450 --> 00:08:20,070
ordering I've colored the the different

00:08:17,970 --> 00:08:22,890
parts of the parameters going to easily

00:08:20,070 --> 00:08:25,530
recognize them so the link part is

00:08:22,890 --> 00:08:31,260
always red then we have the green the

00:08:25,530 --> 00:08:34,070
name and blue the type and actually only

00:08:31,260 --> 00:08:34,070
one of them is valid

00:08:40,640 --> 00:08:47,709
yeah I know it's too hard so see

00:08:45,200 --> 00:08:47,709
what's the right answer

00:08:48,700 --> 00:08:56,690
I'd explain this right now so I didn't

00:08:55,940 --> 00:09:01,459
write that code

00:08:56,690 --> 00:09:08,180
luckily but I can try to explain it a

00:09:01,459 --> 00:09:13,240
bit at least why things are like this so

00:09:08,180 --> 00:09:13,240
let's start with parameter shortening

00:09:13,269 --> 00:09:23,560
what IP route basically does is it calls

00:09:17,870 --> 00:09:33,170
a function which is called matches and

00:09:23,560 --> 00:09:37,370
matches does just check is the parameter

00:09:33,170 --> 00:09:40,940
which you gave it shorter than what you

00:09:37,370 --> 00:09:44,029
have passed the second argument and or

00:09:40,940 --> 00:09:46,519
shorter are equal so it it's not

00:09:44,029 --> 00:09:55,430
exceeding it and then it compares only

00:09:46,519 --> 00:10:00,260
that part so if you given this in a man

00:09:55,430 --> 00:10:05,089
in a main function and you pass f as

00:10:00,260 --> 00:10:07,160
acme then it will default to fubar

00:10:05,089 --> 00:10:12,589
instead of feet babe

00:10:07,160 --> 00:10:16,610
simply because it comes first and this

00:10:12,589 --> 00:10:19,279
is not intuitive because they are not as

00:10:16,610 --> 00:10:21,079
particularly sought ordered but it's

00:10:19,279 --> 00:10:23,209
like this in a code so you could always

00:10:21,079 --> 00:10:27,769
look up the code if you want to know

00:10:23,209 --> 00:10:35,810
which is the default okay

00:10:27,769 --> 00:10:39,019
now ordering constraints there they

00:10:35,810 --> 00:10:41,449
actually make sense although you

00:10:39,019 --> 00:10:45,380
wouldn't you wouldn't recognize if you

00:10:41,449 --> 00:10:49,449
don't know the point is here that the

00:10:45,380 --> 00:10:51,000
type keyword actually in secret

00:10:49,449 --> 00:10:56,820
dispatches to

00:10:51,000 --> 00:11:00,590
type-specific hold so while the

00:10:56,820 --> 00:11:04,380
interface name and the link parameter

00:11:00,590 --> 00:11:09,180
which says which interface to link this

00:11:04,380 --> 00:11:14,130
interface name to belongs to the generic

00:11:09,180 --> 00:11:17,510
IP and the ID is a parameter which

00:11:14,130 --> 00:11:20,760
belongs to the VLAN specific fault so

00:11:17,510 --> 00:11:24,180
that's why you have to order it like

00:11:20,760 --> 00:11:30,420
this and once you know what the previous

00:11:24,180 --> 00:11:36,090
question can simply be answered okay SS

00:11:30,420 --> 00:11:38,930
output formatting I try to to fix this

00:11:36,090 --> 00:11:43,980
and it's not so easily

00:11:38,930 --> 00:11:47,450
the the problem is that it supports UNIX

00:11:43,980 --> 00:11:51,240
sockets UNIX sockets are just a file and

00:11:47,450 --> 00:11:57,000
it displays the hope and path so you

00:11:51,240 --> 00:12:01,589
can't say okay it's at max 128 bits in

00:11:57,000 --> 00:12:05,970
ipv6 notation but it could be any path

00:12:01,589 --> 00:12:08,630
name with an arbitrary length so it just

00:12:05,970 --> 00:12:14,700
tries to use the maximum space available

00:12:08,630 --> 00:12:17,670
so you can display them it uses well it

00:12:14,700 --> 00:12:23,930
find out how wide the terminal is and

00:12:17,670 --> 00:12:23,930
then just expands the columns

00:12:26,160 --> 00:12:35,820
and it tries to separate this all from

00:12:30,740 --> 00:12:39,980
extended socket info by inserting a bit

00:12:35,820 --> 00:12:43,260
of spaces so the extended data gets

00:12:39,980 --> 00:12:45,660
forced into the next line not with a new

00:12:43,260 --> 00:12:48,540
line but just because it's too wide and

00:12:45,660 --> 00:12:52,080
in those whole wide determinism in

00:12:48,540 --> 00:12:55,140
addition to that some extended info is

00:12:52,080 --> 00:12:59,310
still prefixed by a newline character so

00:12:55,140 --> 00:13:02,960
if you have a small terminal you type

00:12:59,310 --> 00:13:09,840
the command and you maximize it this

00:13:02,960 --> 00:13:16,440
won't go in one line so that's just how

00:13:09,840 --> 00:13:20,100
it is and let's see if something can be

00:13:16,440 --> 00:13:25,730
done about it in the future so still I

00:13:20,100 --> 00:13:32,610
think you should I pure use our odd and

00:13:25,730 --> 00:13:36,060
this is how we have lots of tools which

00:13:32,610 --> 00:13:44,250
are being deprecated or replaced by IP

00:13:36,060 --> 00:13:46,560
rot yeah the obvious ones of course in

00:13:44,250 --> 00:13:48,780
addition to that you can do the full

00:13:46,560 --> 00:13:53,010
villain device management with it you

00:13:48,780 --> 00:13:56,880
can manage atom approaches only

00:13:53,010 --> 00:14:01,800
configuration ton type interfaces you

00:13:56,880 --> 00:14:06,800
can set IPSec parameters security

00:14:01,800 --> 00:14:11,630
associations and and policies you can

00:14:06,800 --> 00:14:17,460
control the neighbor cache also of ipv6

00:14:11,630 --> 00:14:21,960
so I don't know if there's a dedicated

00:14:17,460 --> 00:14:24,740
tool for that you could do a multicast

00:14:21,960 --> 00:14:28,200
address management with it

00:14:24,740 --> 00:14:32,700
various IP tunnels there are thousand of

00:14:28,200 --> 00:14:35,860
also and interface renaming which is

00:14:32,700 --> 00:14:39,940
usually done either by namath or Judith

00:14:35,860 --> 00:14:45,340
or SystemVue and no you can do it with

00:14:39,940 --> 00:14:50,730
approval - okay it's supports a wide

00:14:45,340 --> 00:14:53,490
variety of of interface types mm-hmm

00:14:50,730 --> 00:14:58,420
there are definitely more than this but

00:14:53,490 --> 00:15:02,140
those are only well not even all about

00:14:58,420 --> 00:15:08,380
those are those for which you have type

00:15:02,140 --> 00:15:11,740
specific code so like for the villain

00:15:08,380 --> 00:15:15,940
interfaces the ID parameter stuff like

00:15:11,740 --> 00:15:20,880
that I didn't

00:15:15,940 --> 00:15:23,080
I don't list max SEC interfaces here

00:15:20,880 --> 00:15:29,440
because as far as I know it's not yet

00:15:23,080 --> 00:15:32,350
upstream but yeah

00:15:29,440 --> 00:15:36,280
apart from that I guess pretty much

00:15:32,350 --> 00:15:38,830
everything is meanwhile implemented in

00:15:36,280 --> 00:15:42,280
April - and there are no dedicated to it

00:15:38,830 --> 00:15:44,770
anymore for newer device types which get

00:15:42,280 --> 00:15:54,990
added to the chrono and therefore the

00:15:44,770 --> 00:15:57,910
default is approved you can have well

00:15:54,990 --> 00:16:04,480
documentation is is not as clear but

00:15:57,910 --> 00:16:08,350
there is link specific helps so if you

00:16:04,480 --> 00:16:13,270
use IP linker without parameter it will

00:16:08,350 --> 00:16:17,140
show you generic options and in addition

00:16:13,270 --> 00:16:19,240
to that the number of a list of

00:16:17,140 --> 00:16:22,120
interface names or type names which

00:16:19,240 --> 00:16:28,320
should support and passing it the type

00:16:22,120 --> 00:16:33,350
you should get type specific help texts

00:16:28,320 --> 00:16:38,000
you should because on relevant area

00:16:33,350 --> 00:16:42,670
but it's in the process okay

00:16:38,000 --> 00:16:42,670
so IP address is better than if config

00:16:42,880 --> 00:16:51,680
few examples you don't need to have IP

00:16:47,920 --> 00:16:55,760
aliases for two special m12 multiple

00:16:51,680 --> 00:17:08,080
ipv4 addresses per interface you can

00:16:55,760 --> 00:17:11,240
select devices by giving a selector and

00:17:08,080 --> 00:17:14,690
well it displays Piedras this is just

00:17:11,240 --> 00:17:17,720
something that if config doesn't doesn't

00:17:14,690 --> 00:17:20,270
know about or isn't is enabled to below

00:17:17,720 --> 00:17:24,530
as an example of this so what i did was

00:17:20,270 --> 00:17:29,600
i wanted to show the addresses of eth0

00:17:24,530 --> 00:17:32,210
which go to this subnet and as you see

00:17:29,600 --> 00:17:38,930
it prints me three different different

00:17:32,210 --> 00:17:41,180
addresses and i subnet actually which is

00:17:38,930 --> 00:17:46,660
quite fine i could i could also skip

00:17:41,180 --> 00:17:50,720
away the device parameters i get all

00:17:46,660 --> 00:17:56,900
addresses which the host has to this

00:17:50,720 --> 00:17:59,900
certain it for every address and the the

00:17:56,900 --> 00:18:05,210
second example shows a pure dress so

00:17:59,900 --> 00:18:09,710
it's basically point-to-point there is

00:18:05,210 --> 00:18:11,510
more info like for example the dynamic

00:18:09,710 --> 00:18:13,880
keyword which shows that this interface

00:18:11,510 --> 00:18:19,120
that this address were that was added by

00:18:13,880 --> 00:18:25,180
dhcp and the last line shows a label

00:18:19,120 --> 00:18:28,730
eth0 dot colon 1 which is compatibly

00:18:25,180 --> 00:18:31,640
compatibility mode for if config so if

00:18:28,730 --> 00:18:37,690
configured will then show you an e th 0

00:18:31,640 --> 00:18:37,690
colon 1 with this IP address

00:18:37,739 --> 00:18:46,480
next one IP route which supersedes route

00:18:42,989 --> 00:18:49,149
by supporting policy routing which of

00:18:46,480 --> 00:18:53,169
course goes hand-in-hand with multiple

00:18:49,149 --> 00:19:00,190
routing tables you can just like with IP

00:18:53,169 --> 00:19:04,269
address lookup load selectively you can

00:19:00,190 --> 00:19:12,070
save and restore routes just like you

00:19:04,269 --> 00:19:14,309
can do with for example IP tables no

00:19:12,070 --> 00:19:14,309
idea

00:19:17,530 --> 00:19:20,520
I think

00:19:23,850 --> 00:19:31,980
maybe because I couldn't mention that

00:19:28,410 --> 00:19:34,560
you just have the chronic done the whole

00:19:31,980 --> 00:19:37,770
route the whole the whole routing table

00:19:34,560 --> 00:19:41,340
that would be atomic kind of and not

00:19:37,770 --> 00:19:43,770
sure how the crown implements is and it

00:19:41,340 --> 00:19:46,110
might be possible that you can add

00:19:43,770 --> 00:19:51,270
several rolls at once so the restore

00:19:46,110 --> 00:19:56,580
would be the same way but I would have

00:19:51,270 --> 00:19:59,120
to check the code for that addition to

00:19:56,580 --> 00:20:03,060
that IP rot supports extended features

00:19:59,120 --> 00:20:05,460
and flags which I couldn't find in law

00:20:03,060 --> 00:20:11,790
documentation might be wrong I don't use

00:20:05,460 --> 00:20:15,420
it for very long time now I have some

00:20:11,790 --> 00:20:21,900
examples here as well like showing a

00:20:15,420 --> 00:20:28,740
route for this subnet I guess it has to

00:20:21,900 --> 00:20:31,890
be exact with the shell command and it

00:20:28,740 --> 00:20:35,820
shows me which source address will then

00:20:31,890 --> 00:20:38,640
be used in addition to that there is a

00:20:35,820 --> 00:20:41,450
cat command which shows me if I wanted

00:20:38,640 --> 00:20:45,410
to route a packet to this destination IP

00:20:41,450 --> 00:20:49,860
which way would the colonel shoes and

00:20:45,410 --> 00:20:56,160
that's pretty neat so it shows me that

00:20:49,860 --> 00:20:59,270
this IP goes onto eth0 with this was a

00:20:56,160 --> 00:20:59,270
source address and

00:21:15,980 --> 00:21:22,360
should you can try the trial of data

00:21:18,460 --> 00:21:28,130
it's a good idea so I know what I do

00:21:22,360 --> 00:21:30,049
okay last line just shows a pretty

00:21:28,130 --> 00:21:36,710
useless example of how to save and

00:21:30,049 --> 00:21:38,990
restore so safe just just writes binary

00:21:36,710 --> 00:21:41,360
data to send it out and I periodic

00:21:38,990 --> 00:21:45,320
restore reads binary data from standard

00:21:41,360 --> 00:21:47,149
in so you can use this to do stuff that

00:21:45,320 --> 00:21:53,860
does make sense but you can also

00:21:47,149 --> 00:21:57,940
redirect it into yeah

00:21:53,860 --> 00:21:57,940
what is ipv6

00:22:07,840 --> 00:22:13,990
I might be wrong but I would guess that

00:22:10,179 --> 00:22:16,870
an IP route simply outputs the v4

00:22:13,990 --> 00:22:21,990
routing table because usually when using

00:22:16,870 --> 00:22:26,230
IP route you have to specify -6

00:22:21,990 --> 00:22:32,260
explicitly so you get ipv6 roles could

00:22:26,230 --> 00:22:34,690
be that that this is IP version agnostic

00:22:32,260 --> 00:22:39,280
but I adopt so I guess you would have to

00:22:34,690 --> 00:22:41,740
do the same for ipv6 as well ok

00:22:39,280 --> 00:22:47,169
why is SS better better than net start

00:22:41,740 --> 00:22:50,730
although you wouldn't expect it in

00:22:47,169 --> 00:22:53,679
addition to there's the well-known

00:22:50,730 --> 00:22:58,419
socket formats at this place

00:22:53,679 --> 00:23:01,840
also net link and packet sockets it has

00:22:58,419 --> 00:23:03,940
a built in socket filter so that may

00:23:01,840 --> 00:23:07,299
which makes the uncredible output a

00:23:03,940 --> 00:23:14,080
little bit more preferable by having a

00:23:07,299 --> 00:23:18,400
built-in grab it uses the net link

00:23:14,080 --> 00:23:22,799
interface but it can fall back to proc

00:23:18,400 --> 00:23:27,370
of s which is used by by net start this

00:23:22,799 --> 00:23:30,100
in particularly allows you to display

00:23:27,370 --> 00:23:33,880
lots more info information about the

00:23:30,100 --> 00:23:40,900
socket then rocker Fester's other meta

00:23:33,880 --> 00:23:46,679
status and yeah pillows in an example so

00:23:40,900 --> 00:23:55,020
i filter for established sockets with a

00:23:46,679 --> 00:23:58,510
source port lower or equal to 1024 and

00:23:55,020 --> 00:24:01,860
by surprise I only see my the SSH

00:23:58,510 --> 00:24:06,789
connection I have to this machine I see

00:24:01,860 --> 00:24:11,120
which user there is with clear idea and

00:24:06,789 --> 00:24:15,500
which FTA number

00:24:11,120 --> 00:24:17,990
I see for example TCP info like the

00:24:15,500 --> 00:24:21,730
congestion control mechanism which has

00:24:17,990 --> 00:24:26,150
been used and over stuff like the

00:24:21,730 --> 00:24:32,390
maximum segment size so that's pretty

00:24:26,150 --> 00:24:36,050
nice I have some bonus material for the

00:24:32,390 --> 00:24:41,300
case that I have too much time like I

00:24:36,050 --> 00:24:44,180
guess I have there is for all of you who

00:24:41,300 --> 00:24:53,620
prefer if config just because of

00:24:44,180 --> 00:24:57,050
convenience then there is if CFG which

00:24:53,620 --> 00:25:01,220
tries to do everything even a little bit

00:24:57,050 --> 00:25:07,130
better than than if config maybe it over

00:25:01,220 --> 00:25:10,610
does it a bit but it of course sets you

00:25:07,130 --> 00:25:15,650
link up it performs duplicate address

00:25:10,610 --> 00:25:18,410
detection you can use it like if config

00:25:15,650 --> 00:25:19,310
with IP ideas notation and knows what to

00:25:18,410 --> 00:25:25,190
do

00:25:19,310 --> 00:25:30,470
it sends unsolicited up replies it adds

00:25:25,190 --> 00:25:33,770
some fancy routes and it can even

00:25:30,470 --> 00:25:39,530
trigger router discovery and for ipv6

00:25:33,770 --> 00:25:41,810
still I'm pretty sure this will this

00:25:39,530 --> 00:25:45,260
this is completely from comfortable to

00:25:41,810 --> 00:25:50,960
ipv6 so it might be that there are some

00:25:45,260 --> 00:25:54,560
hidden pitfalls okay you have there's a

00:25:50,960 --> 00:25:59,270
tool which allows you to list routes as

00:25:54,560 --> 00:26:03,290
tables it's yeah basically branded as

00:25:59,270 --> 00:26:08,360
shell wrapper it lists ipv4 and ipv6

00:26:03,290 --> 00:26:11,770
rolls at the same time although you

00:26:08,360 --> 00:26:11,770
can't select them specifically

00:26:14,290 --> 00:26:21,590
if well it supports the table but if you

00:26:19,220 --> 00:26:24,560
choose the table to display then it

00:26:21,590 --> 00:26:29,960
automatically displays on the ipv4 which

00:26:24,560 --> 00:26:33,440
is pretty much about and table

00:26:29,960 --> 00:26:38,210
formatting is still a bit broken because

00:26:33,440 --> 00:26:41,930
of that column choosing algorithm which

00:26:38,210 --> 00:26:47,690
is not quite understandable and well not

00:26:41,930 --> 00:26:52,220
pretty well implemented another thing

00:26:47,690 --> 00:26:57,340
which I find very nice to do with IP

00:26:52,220 --> 00:26:57,340
wrote is listing network name spaces

00:26:58,390 --> 00:27:06,380
which are in case you're unfamiliar is

00:27:03,140 --> 00:27:09,890
like a virtual network stack on your

00:27:06,380 --> 00:27:11,810
localhost you can move network

00:27:09,890 --> 00:27:15,680
interfaces into there which are then

00:27:11,810 --> 00:27:18,400
limited to that scope and you can run a

00:27:15,680 --> 00:27:22,960
process in there which only sees the

00:27:18,400 --> 00:27:29,180
network as it is represented by this

00:27:22,960 --> 00:27:35,990
network namespace very quick halt - lots

00:27:29,180 --> 00:27:38,690
of commands first line at a network

00:27:35,990 --> 00:27:42,680
namespace name tests and lists it the

00:27:38,690 --> 00:27:51,200
second command add a virtual atomic pair

00:27:42,680 --> 00:27:56,260
and automatically moves the VIP ve th

00:27:51,200 --> 00:28:00,500
one part into the test net in US and

00:27:56,260 --> 00:28:02,600
then two commands aligned three and four

00:28:00,500 --> 00:28:06,560
to contribute the interface and set it

00:28:02,600 --> 00:28:09,320
up lines five and six to the same to the

00:28:06,560 --> 00:28:13,550
local interface and that's all fund

00:28:09,320 --> 00:28:16,880
earlier I can I can ping the other the

00:28:13,550 --> 00:28:20,510
other side this allows me to do server

00:28:16,880 --> 00:28:21,970
client test for example on a local

00:28:20,510 --> 00:28:27,150
machine without having to

00:28:21,970 --> 00:28:30,790
some virtual machine anything statistics

00:28:27,150 --> 00:28:34,870
most importantly and I guess not really

00:28:30,790 --> 00:28:38,500
well-known is Alan start which is able

00:28:34,870 --> 00:28:41,440
to monitor everything that within prop

00:28:38,500 --> 00:28:44,830
netstat there are many files in there

00:28:41,440 --> 00:28:49,540
and yeah well the format is not really

00:28:44,830 --> 00:28:52,870
human readable you can choose from which

00:28:49,540 --> 00:28:56,920
file which key or which column you want

00:28:52,870 --> 00:29:00,730
to monitor and it supports running in

00:28:56,920 --> 00:29:05,170
iterations so it's like with watch

00:29:00,730 --> 00:29:08,410
attached to make things a little bit

00:29:05,170 --> 00:29:11,590
more convenient there is a minus T

00:29:08,410 --> 00:29:16,950
parameter which just prints what keys

00:29:11,590 --> 00:29:21,010
are presented which in which file and a

00:29:16,950 --> 00:29:25,510
an example usage is to iterate every two

00:29:21,010 --> 00:29:30,400
seconds and list the key or the column

00:29:25,510 --> 00:29:36,850
hits from the file up cash and entries

00:29:30,400 --> 00:29:40,180
from Archie cash there are more

00:29:36,850 --> 00:29:45,640
statistics using if stirred and stirred

00:29:40,180 --> 00:29:51,250
Archie Act these monitor different

00:29:45,640 --> 00:29:55,020
things but implemented the

00:29:51,250 --> 00:29:55,020
implementation is pretty much identical

00:29:55,770 --> 00:30:06,100
which has the same box funnily and it

00:30:03,430 --> 00:30:08,740
supports some some demon mode which is

00:30:06,100 --> 00:30:12,490
with unintuitive that's why I have it

00:30:08,740 --> 00:30:15,760
here explicitly so you start for example

00:30:12,490 --> 00:30:18,120
if start minus T ten so it will update

00:30:15,760 --> 00:30:21,660
its statistics every ten seconds and

00:30:18,120 --> 00:30:26,530
this will fall into background and with

00:30:21,660 --> 00:30:31,270
if start minus s you call

00:30:26,530 --> 00:30:34,160
the demon to dump it the statistics and

00:30:31,270 --> 00:30:36,440
so although this watch command will

00:30:34,160 --> 00:30:38,630
update every two seconds by default then

00:30:36,440 --> 00:30:48,050
the data will only update every 10

00:30:38,630 --> 00:30:54,410
seconds okay hands on these will get

00:30:48,050 --> 00:31:04,120
funny right now I heard once it's a

00:30:54,410 --> 00:31:04,120
suggestion to look at route stunting

00:31:09,370 --> 00:31:12,840
the question is how do we do this

00:31:26,580 --> 00:31:29,510
is it okay

00:31:36,240 --> 00:31:38,240
ah

00:31:54,350 --> 00:31:58,210
so I'll interpret this

00:32:06,440 --> 00:32:14,010
it's not a skew format otherwise you

00:32:09,030 --> 00:32:22,040
would see it on the right side so that's

00:32:14,010 --> 00:32:25,309
binary but I have an idea I have those

00:32:22,040 --> 00:32:25,309
ipv6 rolls

00:32:34,230 --> 00:32:45,620
so I let an ipv6 address have another

00:32:39,030 --> 00:32:45,620
like v6 water table entry and

00:32:50,650 --> 00:32:54,450
I can simply compare the output

00:32:57,420 --> 00:33:08,120
this is cheating yeah so probably they

00:33:04,710 --> 00:33:08,120
just updated the compass

00:33:15,879 --> 00:33:18,539
I do

00:33:40,340 --> 00:33:43,090
you see

00:33:49,820 --> 00:33:52,419
yes

00:33:52,420 --> 00:34:03,549
another way to tackle this oh you

00:33:58,179 --> 00:34:06,730
finally see a difference so I can't be

00:34:03,549 --> 00:34:09,540
completely sure but I'd say this is

00:34:06,730 --> 00:34:20,350
limited to ipv4 and you have to specify

00:34:09,540 --> 00:34:20,889
mine 6:12 ipv6 routing table that's what

00:34:20,350 --> 00:34:31,659
we do

00:34:20,889 --> 00:34:38,169
I could start this is the output you get

00:34:31,659 --> 00:34:40,500
from the Manistee command and yeah so

00:34:38,169 --> 00:34:40,500
you can

00:35:04,750 --> 00:35:09,359
that's basically the the table form what

00:35:07,089 --> 00:35:09,359
you get

00:35:15,589 --> 00:35:18,219
yes

00:35:30,680 --> 00:35:51,540
my table by table or by what at the time

00:35:39,980 --> 00:35:57,930
yeah it's probably magic here because I

00:35:51,540 --> 00:36:01,970
fo well it's possible upstream but not

00:35:57,930 --> 00:36:01,970
in seven yet

00:36:30,560 --> 00:36:36,400
you could do something like this and

00:36:33,400 --> 00:36:36,400
also

00:36:41,550 --> 00:36:44,570
using picture

00:36:45,080 --> 00:36:53,810
so you can't list addresses by type but

00:36:48,790 --> 00:36:56,210
you can just links by type and given the

00:36:53,810 --> 00:36:59,800
link you can show the address by

00:36:56,210 --> 00:36:59,800
specifying the device

00:37:17,270 --> 00:37:38,910
yes sure go ahead your network manager

00:37:34,170 --> 00:37:44,760
is front-end I'd say in regards of the

00:37:38,910 --> 00:37:47,940
relationship between both and looking at

00:37:44,760 --> 00:37:52,790
well if you try to use both concurrently

00:37:47,940 --> 00:37:54,830
you may be you may be run into issues so

00:37:52,790 --> 00:37:59,520
network manager at least doesn't

00:37:54,830 --> 00:38:08,300
recognize what you're doing and yeah

00:37:59,520 --> 00:38:08,300
with network manager you you

00:38:13,310 --> 00:38:16,310
yeah

00:38:21,110 --> 00:38:31,580
but well just so much for this I'm I'm

00:38:27,320 --> 00:38:36,890
using IP rod for for testing in there

00:38:31,580 --> 00:38:40,310
and it's not like it's taking me the IP

00:38:36,890 --> 00:38:42,520
address away or something so it doesn't

00:38:40,310 --> 00:38:42,520
interfere

00:38:47,320 --> 00:38:52,940
yeah I I don't do anything in network

00:38:51,290 --> 00:38:55,360
manager and as long as I don't do that

00:38:52,940 --> 00:38:55,360
it's fine

00:39:37,720 --> 00:40:01,090
I mean we could maybe implement a face

00:39:55,630 --> 00:40:04,290
to the scripture it's pretty fast and

00:40:01,090 --> 00:40:04,290
it's flexible

00:40:28,350 --> 00:40:35,650
we could actually maybe do is pretty

00:40:31,180 --> 00:40:59,700
simple by dumping the data full data

00:40:35,650 --> 00:40:59,700
into a database any other questions

00:41:36,100 --> 00:41:39,100
yeah

00:42:12,580 --> 00:42:39,520
I don't want to cut you off that before

00:42:37,030 --> 00:42:43,020
people leave I would like to thank you

00:42:39,520 --> 00:42:48,820
here are some links to documentation

00:42:43,020 --> 00:42:51,720
like nine pages yeah and you can do

00:42:48,820 --> 00:42:51,720

YouTube URL: https://www.youtube.com/watch?v=cymH9pcFGa0


