Title: What's up in the Kernel Land - Thorsten Leemhuis
Publication date: 2016-02-11
Playlist: DevConf.cz 2016
Description: 
	This presentation gives an overview of recent and current developments in the Linux kernel; it will discuss what major changes the recent kernel versions brought, what the next kernel version will bring and what the kernel developers are working on for future releases. In that scope the presentation sometimes will also discuss changes in software close to the kernel; that for example includes Mesa, as its OpenGL hardware drivers work closely with the graphics drivers in the Linux kernel.

Presentation: http://bit.ly/1Xo6ViX
Captions: 
	00:00:00,000 --> 00:00:05,850
the development of 4.5 catch up the main

00:00:03,810 --> 00:00:08,970
development phase in a much window and

00:00:05,850 --> 00:00:12,150
at 11 days ago so thanks to that I can

00:00:08,970 --> 00:00:13,920
already as it's already possible to see

00:00:12,150 --> 00:00:18,420
which features and external version

00:00:13,920 --> 00:00:20,580
brings and actually you can predict when

00:00:18,420 --> 00:00:24,060
this kernel will come out it's likely

00:00:20,580 --> 00:00:27,420
they marched for teens when will when

00:00:24,060 --> 00:00:31,669
Linux 4.5 will come out so what's new in

00:00:27,420 --> 00:00:33,840
those kernels and Linux 4.4 brought

00:00:31,669 --> 00:00:38,670
enhancement for a driver that's called

00:00:33,840 --> 00:00:41,370
but I old GPU and that and hunt and

00:00:38,670 --> 00:00:44,489
enhancements make something a possible

00:00:41,370 --> 00:00:48,590
that's called virtual 3d basically it's

00:00:44,489 --> 00:00:52,520
you can use GPU acceleration so 3d

00:00:48,590 --> 00:00:56,430
acceleration in a vm now but before you

00:00:52,520 --> 00:00:58,739
conclude you can use windows with 3d in

00:00:56,430 --> 00:01:03,199
your vm now that is not possible it just

00:00:58,739 --> 00:01:07,409
for linux guess so if you're running

00:01:03,199 --> 00:01:10,380
gnome 3 or another and compositing

00:01:07,409 --> 00:01:13,320
desktop modern in your VMS you in the

00:01:10,380 --> 00:01:18,810
future we'll be able to get GPU

00:01:13,320 --> 00:01:20,520
acceleration in them and everything the

00:01:18,810 --> 00:01:22,979
graphics interface might be a bit

00:01:20,520 --> 00:01:24,840
quicker thanks to that actually it's not

00:01:22,979 --> 00:01:27,960
only in the kernel what's needed for

00:01:24,840 --> 00:01:31,820
that you also need a new qmu version at

00:01:27,960 --> 00:01:34,439
the latest meter and there are few

00:01:31,820 --> 00:01:38,009
there's a lot of fine-tuning still need

00:01:34,439 --> 00:01:41,310
it I guess the next fedora release might

00:01:38,009 --> 00:01:44,909
be able to you might be able to use the

00:01:41,310 --> 00:01:47,549
picture there but there are a lot of a

00:01:44,909 --> 00:01:49,680
few other things for coming to make it

00:01:47,549 --> 00:01:52,259
even easier to use and so that might

00:01:49,680 --> 00:01:55,020
take a little bit longer and until it's

00:01:52,259 --> 00:02:00,590
simply usable without filling in your

00:01:55,020 --> 00:02:03,540
system what else 4.4 brought a new

00:02:00,590 --> 00:02:05,880
graphics tournament is called vc form

00:02:03,540 --> 00:02:09,569
that's actually a graphics driver for

00:02:05,880 --> 00:02:11,430
the different raspberry PI's and you

00:02:09,569 --> 00:02:12,989
might ask why why do i need a new

00:02:11,430 --> 00:02:13,650
graphics file for that there are already

00:02:12,989 --> 00:02:16,530
right

00:02:13,650 --> 00:02:18,299
and the thing with this drive is he does

00:02:16,530 --> 00:02:21,599
most of the things on its own the

00:02:18,299 --> 00:02:23,879
drivers you used to use in the past or

00:02:21,599 --> 00:02:26,400
currently on the Raspberry Pi basically

00:02:23,879 --> 00:02:30,269
hands a lot of things over to a property

00:02:26,400 --> 00:02:33,540
driver in the firmware and you that

00:02:30,269 --> 00:02:36,329
makes a lot of things harder and unplug

00:02:33,540 --> 00:02:40,470
ssible sometimes and the new driver is

00:02:36,329 --> 00:02:42,989
like a real Linux driver it doesn't

00:02:40,470 --> 00:02:46,139
support 3d acceleration yet but we get

00:02:42,989 --> 00:02:50,389
back to that later for the sysadmin

00:02:46,139 --> 00:02:54,780
amongst you what linux 4.4 brought was

00:02:50,389 --> 00:02:58,409
locked support for md rate four five and

00:02:54,780 --> 00:03:00,480
six and that's something you can use to

00:02:58,409 --> 00:03:03,840
prevent rate corruption when the system

00:03:00,480 --> 00:03:08,609
crashes crashes while writing a new

00:03:03,840 --> 00:03:10,739
stripe and not actually a bit similar to

00:03:08,609 --> 00:03:13,379
what's used in file system you write

00:03:10,739 --> 00:03:15,239
something that's called journal you

00:03:13,379 --> 00:03:16,859
write out what you're planning to write

00:03:15,239 --> 00:03:19,049
and then you actually write it out for

00:03:16,859 --> 00:03:23,459
real and if this system crashes in

00:03:19,049 --> 00:03:25,940
between and you can do transaction from

00:03:23,459 --> 00:03:28,829
the lock or get back to the old stuff

00:03:25,940 --> 00:03:32,220
you actually need a separate drive for

00:03:28,829 --> 00:03:35,040
that so even more drives for for your

00:03:32,220 --> 00:03:37,859
big rate up and wait it up but if you're

00:03:35,040 --> 00:03:39,540
carrying about data integrity that's

00:03:37,859 --> 00:03:42,870
important because it fixes the right

00:03:39,540 --> 00:03:46,519
whole way where data got the right rate

00:03:42,870 --> 00:03:49,500
might get disturbed if you don't do that

00:03:46,519 --> 00:03:51,949
what else there were some improvements

00:03:49,500 --> 00:03:55,769
to the TCP stack and the lock unlocking

00:03:51,949 --> 00:03:59,250
what the developer road is two years ago

00:03:55,769 --> 00:04:02,669
you will like what it was possible to do

00:03:59,250 --> 00:04:08,280
like about to 20,000 since per second so

00:04:02,669 --> 00:04:12,540
the part of the handshake you do when

00:04:08,280 --> 00:04:14,849
took systems connect and thanks to the

00:04:12,540 --> 00:04:17,340
new improvements over the past few years

00:04:14,849 --> 00:04:18,659
and what got into linux 4.1 with the

00:04:17,340 --> 00:04:20,340
proper software and if you use

00:04:18,659 --> 00:04:22,889
everything that's possible it's now

00:04:20,340 --> 00:04:24,930
possible to do six million cents per

00:04:22,889 --> 00:04:26,310
seconds so quite an achievement over the

00:04:24,930 --> 00:04:29,850
past few years

00:04:26,310 --> 00:04:33,240
and that actually doesn't only make

00:04:29,850 --> 00:04:35,550
things faster it makes distributed

00:04:33,240 --> 00:04:37,710
denial-of-service attacks also harder

00:04:35,550 --> 00:04:42,630
because we need way more systems to

00:04:37,710 --> 00:04:44,100
bring a certain server down that some of

00:04:42,630 --> 00:04:46,770
the most important features from Linux

00:04:44,100 --> 00:04:50,040
4.4 if you want to know more details you

00:04:46,770 --> 00:04:53,940
find them in the net currently we set

00:04:50,040 --> 00:04:55,590
good over you lwn and the german stuff

00:04:53,940 --> 00:05:01,580
on high CD for those to speak some

00:04:55,590 --> 00:05:05,160
german so what's coming for 4.4 4.5

00:05:01,580 --> 00:05:09,479
they're actually becomes a desperate PI

00:05:05,160 --> 00:05:15,389
drive again that's getting 3d support in

00:05:09,479 --> 00:05:18,300
4.5 so everything needed to do 3ds

00:05:15,389 --> 00:05:20,490
actually 3b driver is not part of the

00:05:18,300 --> 00:05:24,270
colonel that's as always part of NASA

00:05:20,490 --> 00:05:26,970
and that's also that drivers also in the

00:05:24,270 --> 00:05:30,419
latest mess our release already so

00:05:26,970 --> 00:05:32,820
basically you have now a few a real open

00:05:30,419 --> 00:05:37,200
source graphic drivers back for the

00:05:32,820 --> 00:05:39,210
Raspberry Pi and that but it still needs

00:05:37,200 --> 00:05:42,300
some time to me so if you just want to

00:05:39,210 --> 00:05:45,479
use it you might be better off to simply

00:05:42,300 --> 00:05:47,370
use what the drivers dead that that most

00:05:45,479 --> 00:05:50,880
of the rest we apply to use these days

00:05:47,370 --> 00:05:52,860
but in the future this drivers are

00:05:50,880 --> 00:05:55,889
likely to make a few things better and

00:05:52,860 --> 00:05:58,289
more flexible for the gamers out here

00:05:55,889 --> 00:06:03,450
and there's power play support coming

00:05:58,289 --> 00:06:07,200
for and drivers God AMD GPU and this

00:06:03,450 --> 00:06:11,370
driver supports a lot of recent and

00:06:07,200 --> 00:06:14,700
current AMD Radeon drives and this power

00:06:11,370 --> 00:06:17,000
play support makes re clocking and power

00:06:14,700 --> 00:06:20,729
management possible on those cards and

00:06:17,000 --> 00:06:23,130
precisely that's yeah a few radeon cards

00:06:20,729 --> 00:06:28,100
that benefit from that those cards in

00:06:23,130 --> 00:06:30,630
the past simply used standard base

00:06:28,100 --> 00:06:36,200
frequency and couldn't switch to the

00:06:30,630 --> 00:06:39,030
quickest or still most power-efficient

00:06:36,200 --> 00:06:42,000
settings because there was no recloaking

00:06:39,030 --> 00:06:43,740
so thanks to the powerplay support we

00:06:42,000 --> 00:06:45,540
can now switch to the fastest mode and

00:06:43,740 --> 00:06:50,250
get more 3d performance or switch to

00:06:45,540 --> 00:06:53,630
lower lower modes and the power

00:06:50,250 --> 00:06:56,700
consumption it's not that bad anymore

00:06:53,630 --> 00:06:58,919
yeah actually improved graphics

00:06:56,700 --> 00:07:00,840
performance yeah but it's disabled for

00:06:58,919 --> 00:07:03,150
now so if you want to use it you have to

00:07:00,840 --> 00:07:05,370
n able it in your kernel config it's as

00:07:03,150 --> 00:07:08,160
far as I know enabled in the federal

00:07:05,370 --> 00:07:09,600
rawhide convict and my own cars also but

00:07:08,160 --> 00:07:11,760
that's not enough you also need to put

00:07:09,600 --> 00:07:15,510
the corner with a special permit it's

00:07:11,760 --> 00:07:17,880
mentioned here that will change what

00:07:15,510 --> 00:07:19,890
over time then it will get enabled

00:07:17,880 --> 00:07:21,510
automatically so you don't have to care

00:07:19,890 --> 00:07:23,190
anymore it will simply work that's

00:07:21,510 --> 00:07:26,479
actually the plan maybe that even

00:07:23,190 --> 00:07:29,940
happens for 4.5 that remains to be seen

00:07:26,479 --> 00:07:33,000
another new feature in 4.5 is something

00:07:29,940 --> 00:07:35,400
coming from Android it's a soft test

00:07:33,000 --> 00:07:38,720
drive function that makes it possible

00:07:35,400 --> 00:07:41,340
for the admin or network messaging

00:07:38,720 --> 00:07:44,520
software like the network manager to

00:07:41,340 --> 00:07:47,729
terminate open tcp connections if you

00:07:44,520 --> 00:07:49,470
want to do that the idea behind that if

00:07:47,729 --> 00:07:51,390
you leave your house with your notebook

00:07:49,470 --> 00:07:53,669
or your smartphone and you get out of

00:07:51,390 --> 00:07:57,210
the Greek from your wireless LAN and

00:07:53,669 --> 00:08:00,450
switch to mobile and data networks is

00:07:57,210 --> 00:08:03,300
dreaming and it doesn't work stops

00:08:00,450 --> 00:08:05,970
working normally because the TCP time

00:08:03,300 --> 00:08:08,940
out time is typically one or two minutes

00:08:05,970 --> 00:08:11,150
so until the application that's

00:08:08,940 --> 00:08:14,910
displaying your stream notices that the

00:08:11,150 --> 00:08:16,620
TCP connection that was used until you

00:08:14,910 --> 00:08:18,690
left your house isn't available anymore

00:08:16,620 --> 00:08:20,870
this is the buffers already empty and

00:08:18,690 --> 00:08:23,820
you get a black screen and now the

00:08:20,870 --> 00:08:25,890
network manager can tell all

00:08:23,820 --> 00:08:29,910
applications hate this connection closed

00:08:25,890 --> 00:08:33,719
and they can reestablish different

00:08:29,910 --> 00:08:37,310
connection and gather water beginning of

00:08:33,719 --> 00:08:40,450
Papa bafa they can

00:08:37,310 --> 00:08:43,219
there's no interruption in your swim a

00:08:40,450 --> 00:08:44,900
bit low level but maybe some of you

00:08:43,219 --> 00:08:46,820
might be interested in there as a new

00:08:44,900 --> 00:08:50,180
see group interface it's called see

00:08:46,820 --> 00:08:53,300
group version 2 and that actually is a

00:08:50,180 --> 00:08:57,140
basic agreement control groups feature

00:08:53,300 --> 00:09:01,160
and the old suit groups feature that

00:08:57,140 --> 00:09:03,650
just used to limit how many CPU time or

00:09:01,160 --> 00:09:09,680
network bandwidth or storage I owe you

00:09:03,650 --> 00:09:11,510
can use so resource control it has a lot

00:09:09,680 --> 00:09:15,710
of problems you don't notice if you're

00:09:11,510 --> 00:09:17,660
running it just using it via k on

00:09:15,710 --> 00:09:19,370
your system but if you're programming it

00:09:17,660 --> 00:09:21,589
there are a lot of things where

00:09:19,370 --> 00:09:25,450
everything is not that good and that's

00:09:21,589 --> 00:09:28,160
fixed by the sea group mad to interface

00:09:25,450 --> 00:09:30,980
system v will support it so both of you

00:09:28,160 --> 00:09:33,050
I will likely not notice that these

00:09:30,980 --> 00:09:36,110
things will simply happen in the

00:09:33,050 --> 00:09:39,950
background but a lot of things should

00:09:36,110 --> 00:09:42,500
get better there on that level for the

00:09:39,950 --> 00:09:44,420
embedded developers around here but also

00:09:42,500 --> 00:09:46,880
it might be interesting that at the arm

00:09:44,420 --> 00:09:51,740
multi-platform support with for that

00:09:46,880 --> 00:09:55,040
five gets mostly finished that a feature

00:09:51,740 --> 00:09:58,310
to allow what's normal in the x86 world

00:09:55,040 --> 00:10:01,220
is like you compile one kernel image and

00:09:58,310 --> 00:10:05,180
boot it on a lot of different systems

00:10:01,220 --> 00:10:07,250
that wasn't used to be possible in their

00:10:05,180 --> 00:10:09,830
arm world and thanks to the

00:10:07,250 --> 00:10:12,530
multi-platform affords that's it

00:10:09,830 --> 00:10:14,750
possible these laser you can boo compile

00:10:12,530 --> 00:10:19,270
your counter for raspberry pi or banana

00:10:14,750 --> 00:10:23,810
pie and a few other platforms and it and

00:10:19,270 --> 00:10:25,370
really use that kind of everywhere it's

00:10:23,810 --> 00:10:27,500
not perfect yet there are still

00:10:25,370 --> 00:10:31,250
platforms where it doesn't work but this

00:10:27,500 --> 00:10:34,720
thought that took like five years is now

00:10:31,250 --> 00:10:38,600
mainly finished all the important

00:10:34,720 --> 00:10:40,910
platforms were converted if you some

00:10:38,600 --> 00:10:43,580
time for some time already and now with

00:10:40,910 --> 00:10:47,040
4.5 even the mind on all the platforms

00:10:43,580 --> 00:10:49,889
can multi plot multi-platform enables

00:10:47,040 --> 00:10:52,290
that was part one and now I need to get

00:10:49,889 --> 00:10:55,139
some higher on my or my voice is there a

00:10:52,290 --> 00:11:03,420
question I have sweet Garcia maybe one

00:10:55,139 --> 00:11:06,540
question between each part if the new

00:11:03,420 --> 00:11:08,970
driver improves the performance actually

00:11:06,540 --> 00:11:11,009
the driver is so new I guess for now it

00:11:08,970 --> 00:11:15,029
doesn't improve the performance but in

00:11:11,009 --> 00:11:20,100
the end that's the plan yeah okay and

00:11:15,029 --> 00:11:24,589
this is yes remember when we get to the

00:11:20,100 --> 00:11:27,630
end of part 2 you get a scar so next up

00:11:24,589 --> 00:11:32,279
part to the important changes in the

00:11:27,630 --> 00:11:36,449
past few past 12 to 18-month one of them

00:11:32,279 --> 00:11:38,009
is EB PF so a 4-letter acronym instead

00:11:36,449 --> 00:11:40,680
of a three-letter chrome you this time

00:11:38,009 --> 00:11:42,480
it's an extended berkeley package fill

00:11:40,680 --> 00:11:45,360
it out and so you might wonder what is

00:11:42,480 --> 00:11:47,759
that that is actually somewhat you might

00:11:45,360 --> 00:11:51,990
notice about a package for hotel and

00:11:47,759 --> 00:11:54,740
that's what TCP dump uses when it when

00:11:51,990 --> 00:11:58,319
you capture frames from your network

00:11:54,740 --> 00:12:00,000
then it actually makes creates a small

00:11:58,319 --> 00:12:03,209
program that tells the colonel hey I

00:12:00,000 --> 00:12:05,670
only interested in these type of network

00:12:03,209 --> 00:12:08,399
communication and then the gun only

00:12:05,670 --> 00:12:11,160
hence those packages back to the to TCP

00:12:08,399 --> 00:12:13,500
done that prevents quite a lot of

00:12:11,160 --> 00:12:14,790
overhead and makes some analysis only

00:12:13,500 --> 00:12:17,430
possible because otherwise there would

00:12:14,790 --> 00:12:23,060
be so much data it was slow everything

00:12:17,430 --> 00:12:26,519
now and in the past two or three years

00:12:23,060 --> 00:12:29,250
BB PF was extended to be a simple simple

00:12:26,519 --> 00:12:31,649
flexible vm vm in this case actually

00:12:29,250 --> 00:12:34,740
means abstract computing machine like

00:12:31,649 --> 00:12:38,189
the java vm not a virtual machine like

00:12:34,740 --> 00:12:42,329
kvm or Zen of vm b are able to set up

00:12:38,189 --> 00:12:46,939
and you can use this abstract computing

00:12:42,329 --> 00:12:52,130
machine to make some things more more

00:12:46,939 --> 00:12:56,430
flexible improve their performance and

00:12:52,130 --> 00:12:58,290
that allows a few new things and for

00:12:56,430 --> 00:13:00,140
example the network traffic control with

00:12:58,290 --> 00:13:01,610
GC for example improved

00:13:00,140 --> 00:13:04,940
thanks to that the performance

00:13:01,610 --> 00:13:06,950
monitoring well actually use it is it

00:13:04,940 --> 00:13:08,510
for some filtering already because

00:13:06,950 --> 00:13:10,760
during performance monitoring there are

00:13:08,510 --> 00:13:12,890
so many events what's happening on the

00:13:10,760 --> 00:13:17,780
cpu it's important that to let the

00:13:12,890 --> 00:13:19,370
colonel filter what you're interested in

00:13:17,780 --> 00:13:21,440
and only hand back that to userspace

00:13:19,370 --> 00:13:24,440
otherwise there would be so much data it

00:13:21,440 --> 00:13:27,470
would really slow everything now and

00:13:24,440 --> 00:13:29,720
actually that might in the end finally

00:13:27,470 --> 00:13:34,130
make some other DTrace features

00:13:29,720 --> 00:13:36,380
available on Linux like easy perform the

00:13:34,130 --> 00:13:41,060
phone's tracing and performance running

00:13:36,380 --> 00:13:43,630
for you for your apps so what and what

00:13:41,060 --> 00:13:49,670
else changed there's a feature that you

00:13:43,630 --> 00:13:53,810
you if IE RS RT has actually a feature

00:13:49,670 --> 00:13:57,200
where your distribution can put updated

00:13:53,810 --> 00:13:59,300
firmware somewhere and save it in the

00:13:57,200 --> 00:14:02,600
fam bar itself and then during your next

00:13:59,300 --> 00:14:04,370
boot and there it's automatically update

00:14:02,600 --> 00:14:09,950
and that actually makes for more updates

00:14:04,370 --> 00:14:12,950
as simple as a as updating every other

00:14:09,950 --> 00:14:16,250
software it's actually supported in

00:14:12,950 --> 00:14:18,260
fedora 23 already but the feature also

00:14:16,250 --> 00:14:21,050
needs to be implemented on the hardware

00:14:18,260 --> 00:14:23,660
and the first systems that use this

00:14:21,050 --> 00:14:26,140
feature are getting out now remains to

00:14:23,660 --> 00:14:28,880
be seen if that's something all of us

00:14:26,140 --> 00:14:31,610
will be using in two or three years to

00:14:28,880 --> 00:14:35,750
update our vmware in are not notebooks

00:14:31,610 --> 00:14:37,550
service or wherever another feature that

00:14:35,750 --> 00:14:40,580
emerged over the past few months was

00:14:37,550 --> 00:14:44,680
user fault of tea that's feature wake

00:14:40,580 --> 00:14:49,640
and which is used by q mu where can

00:14:44,680 --> 00:14:52,370
simply live my great machine over to a

00:14:49,640 --> 00:14:56,900
different host and without copying all

00:14:52,370 --> 00:14:58,940
the memory over immediately so thanks to

00:14:56,900 --> 00:15:03,260
that if the machine was transferred to

00:14:58,940 --> 00:15:05,660
the new host it can and need some memory

00:15:03,260 --> 00:15:09,379
that wasn't prepared already and can

00:15:05,660 --> 00:15:11,149
simply ask the old horse heck i need

00:15:09,379 --> 00:15:16,279
this memory now can you give it to me

00:15:11,149 --> 00:15:19,369
and that kind of sounds like it's a bit

00:15:16,279 --> 00:15:21,619
strange but actually makes live

00:15:19,369 --> 00:15:24,019
migration possible in situations where

00:15:21,619 --> 00:15:28,220
the memory changes a lot because Alan

00:15:24,019 --> 00:15:30,139
knob otherwise it wasn't possible to do

00:15:28,220 --> 00:15:34,639
live migration about a Long Island

00:15:30,139 --> 00:15:38,029
disturbance and because the old machine

00:15:34,639 --> 00:15:41,029
the dimeric changed so quickly that you

00:15:38,029 --> 00:15:45,139
couldn't transfer it to death to the new

00:15:41,029 --> 00:15:47,299
host or in the past actually is it was

00:15:45,139 --> 00:15:51,109
to talk about that on first and last

00:15:47,299 --> 00:15:54,679
Sunday I guess the video recording is

00:15:51,109 --> 00:15:57,769
online and on YouTube by now but I

00:15:54,679 --> 00:15:59,649
haven't checked what else changed over

00:15:57,769 --> 00:16:03,049
the past few years there radiant drivin

00:15:59,649 --> 00:16:05,720
improved quite a lot that's just like

00:16:03,049 --> 00:16:09,709
the AMD GPU driver I mentioned earlier a

00:16:05,720 --> 00:16:13,639
driver for lots of AMD radeon cards but

00:16:09,709 --> 00:16:15,559
for older generations so not only the

00:16:13,639 --> 00:16:18,169
latest generations but also does those

00:16:15,559 --> 00:16:21,559
got soul like two and two years ago and

00:16:18,169 --> 00:16:23,449
even some up to date cards current cards

00:16:21,559 --> 00:16:26,869
current models are supported by this

00:16:23,449 --> 00:16:29,600
driver this drive improved quite a lot

00:16:26,869 --> 00:16:34,149
so 3d performance in this open source

00:16:29,600 --> 00:16:36,829
driver is now not up to par with the

00:16:34,149 --> 00:16:39,799
proprietary md driver but it's getting

00:16:36,829 --> 00:16:41,359
closer and closer and feature wise it

00:16:39,799 --> 00:16:44,029
really gets closer because video

00:16:41,359 --> 00:16:47,359
acceleration for decoding and encoding

00:16:44,029 --> 00:16:50,779
works power management also got a lot of

00:16:47,359 --> 00:16:54,699
better doing audio over hdmi or

00:16:50,779 --> 00:16:57,589
DisplayPort improved it's not perfect

00:16:54,699 --> 00:16:59,929
not all of that works perfectly but the

00:16:57,589 --> 00:17:02,569
open source power driver for the radeon

00:16:59,929 --> 00:17:04,819
cards really gets to a point where

00:17:02,569 --> 00:17:06,889
that's the driver you want and you don't

00:17:04,819 --> 00:17:10,429
want proper Terri driver because it

00:17:06,889 --> 00:17:13,129
doesn't give you the it isn't better or

00:17:10,429 --> 00:17:16,250
and actually in somehow it's even worse

00:17:13,129 --> 00:17:18,740
now already that's not only thanks to

00:17:16,250 --> 00:17:23,679
the colonel that's also thanks to the

00:17:18,740 --> 00:17:23,679
user LAN drivers in Mesa or allowed

00:17:24,060 --> 00:17:31,150
so that will features that happened over

00:17:27,580 --> 00:17:34,930
the past few months if now we are

00:17:31,150 --> 00:17:39,250
zooming back a little bit and one of

00:17:34,930 --> 00:17:41,320
them getting to a metal layer new

00:17:39,250 --> 00:17:44,500
versions of the colonel and these days

00:17:41,320 --> 00:17:47,920
we really come every nine week that's

00:17:44,500 --> 00:17:50,680
you can nearly bet on that sometimes

00:17:47,920 --> 00:17:53,950
it's one week less sometimes it's one or

00:17:50,680 --> 00:17:57,120
two weeks more but thanks to the this

00:17:53,950 --> 00:18:01,320
development pace you can quickly you can

00:17:57,120 --> 00:18:04,210
see when the next corner comes and know

00:18:01,320 --> 00:18:09,670
when features will arrive if they got

00:18:04,210 --> 00:18:13,420
much another metal thing is less and you

00:18:09,670 --> 00:18:17,200
a long-term curl will now get choosing

00:18:13,420 --> 00:18:20,020
every January as I said earlier the 4.4

00:18:17,200 --> 00:18:21,460
o'connell released this January is a

00:18:20,020 --> 00:18:25,210
long-term panel that will be supported

00:18:21,460 --> 00:18:28,570
for two years and the colonel it will be

00:18:25,210 --> 00:18:31,240
up to date next year in January that

00:18:28,570 --> 00:18:33,460
will then that get chosen to be a

00:18:31,240 --> 00:18:35,740
long-term Connor so that's easier for

00:18:33,460 --> 00:18:38,080
those that run your own kernels to

00:18:35,740 --> 00:18:40,000
prepare because you know I this kernel

00:18:38,080 --> 00:18:45,070
and generally that will be one that gets

00:18:40,000 --> 00:18:48,820
two years of support another thing is

00:18:45,070 --> 00:18:50,350
that it seems like there are one or two

00:18:48,820 --> 00:18:53,020
security problems in the kernel these

00:18:50,350 --> 00:18:55,720
days because a lot of people look for

00:18:53,020 --> 00:18:59,850
security problems there and so wanted to

00:18:55,720 --> 00:19:04,240
come up every week and every week and

00:18:59,850 --> 00:19:06,010
among them a few times per year they are

00:19:04,240 --> 00:19:09,900
really important ones where you really

00:19:06,010 --> 00:19:12,700
should update your carnal within a few

00:19:09,900 --> 00:19:17,290
days if you really want to be secure or

00:19:12,700 --> 00:19:20,050
better as quick as possible and so

00:19:17,290 --> 00:19:21,760
better be prepared for that security

00:19:20,050 --> 00:19:23,830
bugs in the colonel will happen and you

00:19:21,760 --> 00:19:28,180
have to change now on tenant keep an eye

00:19:23,830 --> 00:19:31,370
on it what also changed is mod mod tools

00:19:28,180 --> 00:19:35,270
are used to find bugs of things or

00:19:31,370 --> 00:19:37,430
a code where bugs could happen and for

00:19:35,270 --> 00:19:40,309
example there are passing tools that are

00:19:37,430 --> 00:19:42,920
now being used Trinity is a tool that's

00:19:40,309 --> 00:19:47,300
used for three or four years now now

00:19:42,920 --> 00:19:49,460
then to find code that is not where

00:19:47,300 --> 00:19:52,190
security problems might show up or other

00:19:49,460 --> 00:19:56,090
problems and these days there's a new

00:19:52,190 --> 00:19:59,090
tool developed as this collar it's also

00:19:56,090 --> 00:20:01,100
doing fuzzing support for that is not

00:19:59,090 --> 00:20:04,340
yet in the kernel and the thing is still

00:20:01,100 --> 00:20:07,250
developed but already it finds quite a

00:20:04,340 --> 00:20:12,290
few by bugs I think there were about 30

00:20:07,250 --> 00:20:14,260
bucks in one of the latest changes in

00:20:12,290 --> 00:20:18,980
one of the latest stable corners and

00:20:14,260 --> 00:20:22,040
that were fixed after this collar found

00:20:18,980 --> 00:20:24,830
them there's also continuous integration

00:20:22,040 --> 00:20:27,590
tools now running there's a cable test

00:20:24,830 --> 00:20:31,179
robot that if you send a patch to some

00:20:27,590 --> 00:20:34,210
mailing list this robot watches that

00:20:31,179 --> 00:20:38,780
robot grabs the patch and comprises and

00:20:34,210 --> 00:20:40,160
sense if they are problem it's sends a

00:20:38,780 --> 00:20:43,400
mail to the mailing as hey your patch

00:20:40,160 --> 00:20:46,970
doesn't work or it doesn't compile and

00:20:43,400 --> 00:20:49,490
so you get blamed for that actually in

00:20:46,970 --> 00:20:52,100
the open so better prepare your patches

00:20:49,490 --> 00:20:54,200
and check if everything works and

00:20:52,100 --> 00:20:57,170
there's actually the arm guys from Lee

00:20:54,200 --> 00:20:59,690
now set up colonel CIO talk wear crowns

00:20:57,170 --> 00:21:04,570
are constantly tested and booted in qmu

00:20:59,690 --> 00:21:07,880
to see if everything works in the news

00:21:04,570 --> 00:21:10,700
everywhere there were a few voices that

00:21:07,880 --> 00:21:13,250
there were development problems like

00:21:10,700 --> 00:21:15,200
aging developers lack of contributors

00:21:13,250 --> 00:21:18,020
rule stalls and especially the

00:21:15,200 --> 00:21:21,050
discussion tone between the kernel

00:21:18,020 --> 00:21:23,300
developers some of you might have heard

00:21:21,050 --> 00:21:26,710
of seller sharp or mastercard that said

00:21:23,300 --> 00:21:31,179
hey that's they are too

00:21:26,710 --> 00:21:34,809
it's not they complained how how line

00:21:31,179 --> 00:21:38,110
liners and some of the other sometimes

00:21:34,809 --> 00:21:39,970
talk to each other and said that has to

00:21:38,110 --> 00:21:42,850
improve to get new phone new kernel in

00:21:39,970 --> 00:21:44,830
that's actually quite complex topic

00:21:42,850 --> 00:21:49,570
that's why I don't want to go into that

00:21:44,830 --> 00:21:52,330
here in any closer the short version is

00:21:49,570 --> 00:21:55,000
basically a lot of things are way better

00:21:52,330 --> 00:21:57,100
than five or ten years ago actually i

00:21:55,000 --> 00:21:59,289
noticed when i wrote that that i'm

00:21:57,100 --> 00:22:02,020
actually looking at kernel development

00:21:59,289 --> 00:22:03,970
for ten years now when 10 years ago it

00:22:02,020 --> 00:22:08,950
was really way more bad so a lot of

00:22:03,970 --> 00:22:11,770
things are bad already improved sure

00:22:08,950 --> 00:22:16,330
something could be better but that's

00:22:11,770 --> 00:22:20,940
always the case and it's maybe it's good

00:22:16,330 --> 00:22:25,120
enough already depends I for one think

00:22:20,940 --> 00:22:27,520
in the past year nothing too much out of

00:22:25,120 --> 00:22:29,559
the ordinary happened Lana said once

00:22:27,520 --> 00:22:33,549
said something really awful but he

00:22:29,559 --> 00:22:35,440
didn't say that to develop I who was new

00:22:33,549 --> 00:22:38,230
on the list it was excited to some

00:22:35,440 --> 00:22:41,770
developer he already knew for years but

00:22:38,230 --> 00:22:43,330
a bit like among friends the tone is a

00:22:41,770 --> 00:22:46,299
bit rough sometimes they're on the

00:22:43,330 --> 00:22:51,870
colonel mariga's so that was part two I

00:22:46,299 --> 00:22:51,870
need to wash all my voice again question

00:22:52,649 --> 00:22:55,649
yeah

00:23:00,100 --> 00:23:04,970
we develop the colonel parts and the

00:23:02,929 --> 00:23:07,730
user level cars more in sync than the

00:23:04,970 --> 00:23:09,950
original DDF code because it have been

00:23:07,730 --> 00:23:14,179
bitten by some bugs in the kernel

00:23:09,950 --> 00:23:16,909
supporting features india v PDF generate

00:23:14,179 --> 00:23:18,590
a code for so it was kind of easy to get

00:23:16,909 --> 00:23:22,520
this in a colonel and comment if you get

00:23:18,590 --> 00:23:25,820
this is news 11 parts yeah I've heard

00:23:22,520 --> 00:23:29,000
about it but I'm I actually can answer

00:23:25,820 --> 00:23:32,090
that for sure I think they they wanted

00:23:29,000 --> 00:23:36,440
to make sure that it doesn't diverge too

00:23:32,090 --> 00:23:40,909
much but it's also not just like a

00:23:36,440 --> 00:23:47,980
stable avi sometimes you need to update

00:23:40,909 --> 00:23:51,230
both both sides to 11 well actually and

00:23:47,980 --> 00:23:54,799
it's some code to compile EVP f codes in

00:23:51,230 --> 00:23:57,140
allowed by MV these days and and if

00:23:54,799 --> 00:23:59,690
you're using it with Perth or something

00:23:57,140 --> 00:24:01,940
it's quite easy to compile that's what I

00:23:59,690 --> 00:24:04,909
know if you want to know more there's

00:24:01,940 --> 00:24:06,590
Daniel Barr Brockman and he's one of the

00:24:04,909 --> 00:24:09,350
main developers behind that he gave a

00:24:06,590 --> 00:24:11,570
presentation past week on fosston about

00:24:09,350 --> 00:24:14,960
the EBP f and its features mostly from

00:24:11,570 --> 00:24:21,620
the networking side and that might have

00:24:14,960 --> 00:24:24,700
some answers and you can email him so

00:24:21,620 --> 00:24:24,700
next up wait a moment

00:24:27,320 --> 00:24:36,440
things in the works so what's coming in

00:24:31,340 --> 00:24:37,970
the next few months que digas isn't

00:24:36,440 --> 00:24:41,630
coming I guess most of you have heard

00:24:37,970 --> 00:24:43,280
about that that was abandoned what was

00:24:41,630 --> 00:24:45,410
que ibas four daughters have heard about

00:24:43,280 --> 00:24:48,020
it was a colonel side replacement for

00:24:45,410 --> 00:24:50,750
the Divas demon so the thing that passes

00:24:48,020 --> 00:24:55,130
d besmirched messages around on your

00:24:50,750 --> 00:24:57,110
system and developer said okay no we

00:24:55,130 --> 00:25:01,030
don't go that direction anymore there

00:24:57,110 --> 00:25:03,680
and start from scratch again mostly and

00:25:01,030 --> 00:25:07,700
now they are working on making a message

00:25:03,680 --> 00:25:10,340
by a bus that is more universal so it

00:25:07,700 --> 00:25:13,460
can be used for d bus transfers but it

00:25:10,340 --> 00:25:14,690
also can be used for other things the

00:25:13,460 --> 00:25:17,480
thing is still and the development

00:25:14,690 --> 00:25:22,040
remains to be seen when we see it for

00:25:17,480 --> 00:25:23,390
the first time but I've s also something

00:25:22,040 --> 00:25:27,110
i guess most of you have heard about it

00:25:23,390 --> 00:25:29,570
it's a file system it was until two

00:25:27,110 --> 00:25:31,730
thousand eight on 2009 considered the

00:25:29,570 --> 00:25:35,780
next generation Linux default file

00:25:31,730 --> 00:25:38,270
system back then it was said it needs

00:25:35,780 --> 00:25:41,000
some time to develop but i guess nobody

00:25:38,270 --> 00:25:45,320
expected at 2016 it's still not really

00:25:41,000 --> 00:25:48,710
finished and the thing is these days you

00:25:45,320 --> 00:25:50,750
don't hear so much about it and i think

00:25:48,710 --> 00:25:54,800
that's a good thing because developers

00:25:50,750 --> 00:25:57,610
are stabilizing what FS they find

00:25:54,800 --> 00:25:59,690
Natalie it's used in facebook already

00:25:57,610 --> 00:26:02,540
because the main butter fest

00:25:59,690 --> 00:26:06,500
developerworks for facebook these days

00:26:02,540 --> 00:26:09,170
and they found a few bucks there and fix

00:26:06,500 --> 00:26:11,420
them and made some features that were

00:26:09,170 --> 00:26:17,210
not completely finished yet also worked

00:26:11,420 --> 00:26:19,730
on that so stabilizing is what now done

00:26:17,210 --> 00:26:22,970
their question that always come tomm

00:26:19,730 --> 00:26:24,910
comes up then is it ready yet and i

00:26:22,970 --> 00:26:29,170
think that's a question but basically

00:26:24,910 --> 00:26:32,090
like asking is the water safe to go in

00:26:29,170 --> 00:26:34,550
if you think about it the answer always

00:26:32,090 --> 00:26:36,860
depends on your abilities and your local

00:26:34,550 --> 00:26:37,680
conditions because if you're going to

00:26:36,860 --> 00:26:40,770
the sea

00:26:37,680 --> 00:26:42,510
yes rough winds and tides or something

00:26:40,770 --> 00:26:45,360
you might get tracked in even if you're

00:26:42,510 --> 00:26:49,740
a really good swimmer on the other hand

00:26:45,360 --> 00:26:53,550
if you're a really bad soma even in your

00:26:49,740 --> 00:26:56,850
local pump you can drown but as I said

00:26:53,550 --> 00:26:59,220
Facebook use this is Susie also uses it

00:26:56,850 --> 00:27:04,170
by default on suse linux enterprise

00:26:59,220 --> 00:27:07,740
server and opensuse also uses it I

00:27:04,170 --> 00:27:10,970
myself also use it but actually before

00:27:07,740 --> 00:27:14,010
traveling here I saw that but off as

00:27:10,970 --> 00:27:16,650
fill my disk already and I need to run a

00:27:14,010 --> 00:27:18,930
kind of defragmentation to get free

00:27:16,650 --> 00:27:20,580
space again to make butter as perform

00:27:18,930 --> 00:27:24,510
better that's something you need to

00:27:20,580 --> 00:27:26,850
learn and so what FS is not that ready

00:27:24,510 --> 00:27:28,620
that you can simply use it it's I'd say

00:27:26,850 --> 00:27:30,270
for now it's something you if you're

00:27:28,620 --> 00:27:32,610
interested in it and want to use the

00:27:30,270 --> 00:27:35,610
features part of s office and then

00:27:32,610 --> 00:27:37,770
learning that and dealing with that

00:27:35,610 --> 00:27:43,040
first kind of problems that s all their

00:27:37,770 --> 00:27:46,080
might be worth it but that's something

00:27:43,040 --> 00:27:48,450
you have to choose for yourself how can

00:27:46,080 --> 00:27:51,330
life patching is something that was from

00:27:48,450 --> 00:27:53,670
the announced two years ago on this

00:27:51,330 --> 00:27:56,970
conference from the red tide head size

00:27:53,670 --> 00:27:59,100
actually with different patch that back

00:27:56,970 --> 00:28:02,190
then Souza also did something to do live

00:27:59,100 --> 00:28:05,250
patches so to fix security bugs in your

00:28:02,190 --> 00:28:07,950
little girl without rebooting and they

00:28:05,250 --> 00:28:09,810
mother Susie and let had much their

00:28:07,950 --> 00:28:13,050
thoughts that's now in the carnal it's

00:28:09,810 --> 00:28:15,270
called as a Second Life patch in kop the

00:28:13,050 --> 00:28:20,250
basic function got merged about a year

00:28:15,270 --> 00:28:22,410
ago I think and it allows about it

00:28:20,250 --> 00:28:26,520
allows to fix about ninety percent of

00:28:22,410 --> 00:28:29,490
the box that typically show up in the

00:28:26,520 --> 00:28:31,890
corner the redhead and susan solutions

00:28:29,490 --> 00:28:34,230
actually were able to fix ninety-five

00:28:31,890 --> 00:28:38,130
percent of the backs and that's

00:28:34,230 --> 00:28:39,750
something the kop developers work on but

00:28:38,130 --> 00:28:41,850
there are some roadblocks that need to

00:28:39,750 --> 00:28:44,580
get soft if you're interested Vita

00:28:41,850 --> 00:28:46,680
details google for compile stack

00:28:44,580 --> 00:28:49,530
validation that's something you need to

00:28:46,680 --> 00:28:53,080
the developers need to

00:28:49,530 --> 00:28:55,780
see where the currently running code is

00:28:53,080 --> 00:29:00,370
used and how to fix all the different

00:28:55,780 --> 00:29:02,880
places where it's running currently also

00:29:00,370 --> 00:29:06,360
things in the work is even more

00:29:02,880 --> 00:29:08,590
improvements for network performance

00:29:06,360 --> 00:29:10,540
there are so many things coming there

00:29:08,590 --> 00:29:13,120
actually there's if you're interested in

00:29:10,540 --> 00:29:15,610
that there's a talk about that on Sunday

00:29:13,120 --> 00:29:19,680
at eleven-thirty colonel network stack

00:29:15,610 --> 00:29:22,720
changes at 100 gigabit speeds because

00:29:19,680 --> 00:29:25,840
they're interrupts out and create so

00:29:22,720 --> 00:29:28,000
much overhead and memory locations the

00:29:25,840 --> 00:29:32,760
colonel needs to change to make that

00:29:28,000 --> 00:29:36,640
happening which AC else is an improved

00:29:32,760 --> 00:29:41,770
mechanism for access control list it's

00:29:36,640 --> 00:29:43,740
kind of more to possible to use set up a

00:29:41,770 --> 00:29:47,160
more consistent and more flexible

00:29:43,740 --> 00:29:49,780
permissions especially for acls

00:29:47,160 --> 00:29:52,990
especially for 400s service and

00:29:49,780 --> 00:29:57,040
especially if you're running NFS v3 and

00:29:52,990 --> 00:30:00,220
v4 at the same time I'm running out of

00:29:57,040 --> 00:30:06,280
time that's because I'm getting quicker

00:30:00,220 --> 00:30:09,700
and quicker guest aah CA oui si 4mg I'm

00:30:06,280 --> 00:30:11,770
skidding and the cluster support maybe

00:30:09,700 --> 00:30:16,830
if you embedded developers Anderson this

00:30:11,770 --> 00:30:19,240
the colonel isn't ready for 2008 es 38

00:30:16,830 --> 00:30:23,020
that similar to the problems we had when

00:30:19,240 --> 00:30:26,260
we switch to a year 2000 to a few years

00:30:23,020 --> 00:30:29,950
ago it's only relevant for 32-bit

00:30:26,260 --> 00:30:31,660
applications to Colonel need to to get

00:30:29,950 --> 00:30:34,560
changed and file system needs to get

00:30:31,660 --> 00:30:38,380
changed to make to start time stamps

00:30:34,560 --> 00:30:41,800
after year 2038 that actually in the

00:30:38,380 --> 00:30:44,650
work and lwn recently wrote that might

00:30:41,800 --> 00:30:46,900
get finished this year and I guess

00:30:44,650 --> 00:30:48,460
that's possible maybe it takes a bit

00:30:46,900 --> 00:30:52,780
longer and then it even takes a bit ly

00:30:48,460 --> 00:30:54,910
long until userland it's also migrated

00:30:52,780 --> 00:30:58,990
to handle everything but we're getting

00:30:54,910 --> 00:31:00,670
there and use some of the BST actually

00:30:58,990 --> 00:31:01,340
fixed that already two years ago but it

00:31:00,670 --> 00:31:04,160
it's

00:31:01,340 --> 00:31:09,410
easy for them for various reasons trana

00:31:04,160 --> 00:31:11,810
fication is also something that's a few

00:31:09,410 --> 00:31:14,570
kernel developers look at now it's like

00:31:11,810 --> 00:31:17,780
making the kernel a bit more smaller and

00:31:14,570 --> 00:31:20,320
reducing the overhead to make linux

00:31:17,780 --> 00:31:22,850
suitable for Internet of Things devices

00:31:20,320 --> 00:31:25,280
there were also some roadblocks where

00:31:22,850 --> 00:31:27,680
people wanted to reduce the networks

00:31:25,280 --> 00:31:31,130
that effect to the really basic

00:31:27,680 --> 00:31:32,930
functionality and the network subsystem

00:31:31,130 --> 00:31:37,220
maintainer said no that was already

00:31:32,930 --> 00:31:41,360
years ago but over time people arranged

00:31:37,220 --> 00:31:44,090
and things it's getting it's possible to

00:31:41,360 --> 00:31:46,070
make the kernel smaller and smaller to

00:31:44,090 --> 00:31:47,980
make it more interesting for Internet of

00:31:46,070 --> 00:31:50,900
Things devices which actually become

00:31:47,980 --> 00:31:53,060
more powerful things to enhancement and

00:31:50,900 --> 00:31:54,890
processors so it might be not that much

00:31:53,060 --> 00:31:57,170
of problems so littles might be used

00:31:54,890 --> 00:32:01,370
there but a lot Colonel Harding

00:31:57,170 --> 00:32:04,360
hardening is also something now we're a

00:32:01,370 --> 00:32:09,500
few people invest more time these days

00:32:04,360 --> 00:32:13,850
it's they look at for example for the GR

00:32:09,500 --> 00:32:15,800
security patch set which has a few

00:32:13,850 --> 00:32:18,620
security enhancements for the Linux

00:32:15,800 --> 00:32:22,120
kernel and those that developers look if

00:32:18,620 --> 00:32:24,590
they can get those features or some

00:32:22,120 --> 00:32:28,040
features like that into the color to

00:32:24,590 --> 00:32:31,040
make security to improve the security on

00:32:28,040 --> 00:32:34,730
the basic for the further standard

00:32:31,040 --> 00:32:37,430
mainline kernel container is something

00:32:34,730 --> 00:32:39,170
we're not that much happening is in the

00:32:37,430 --> 00:32:42,140
corner but there are a few small changes

00:32:39,170 --> 00:32:44,990
to improve security and realize new

00:32:42,140 --> 00:32:46,550
features and see groups for example is

00:32:44,990 --> 00:32:50,900
one of the areas where a few

00:32:46,550 --> 00:32:52,910
enhancements are needed and that's so a

00:32:50,900 --> 00:32:54,710
little bit is happening there Android

00:32:52,910 --> 00:32:57,770
mainlining is also something that's not

00:32:54,710 --> 00:33:00,800
around for many years now there where

00:32:57,770 --> 00:33:03,260
people try to get improvements that are

00:33:00,800 --> 00:33:07,500
part of the androids corner get into the

00:33:03,260 --> 00:33:09,660
main line and Connor the network

00:33:07,500 --> 00:33:11,850
saket destroy function i mentioned

00:33:09,660 --> 00:33:14,460
earlier it's one of those features man

00:33:11,850 --> 00:33:17,340
but there are still a lot of things in

00:33:14,460 --> 00:33:20,280
in the android kernel that are not yet

00:33:17,340 --> 00:33:24,000
part of the mainline kernel but slowly

00:33:20,280 --> 00:33:27,690
if things are getting better so maybe in

00:33:24,000 --> 00:33:30,240
the year or two it's really possible to

00:33:27,690 --> 00:33:31,860
run an Android device with a mainline

00:33:30,240 --> 00:33:35,730
current without any Android specific

00:33:31,860 --> 00:33:38,430
patches a real time who for those of you

00:33:35,730 --> 00:33:40,740
that have been here and the earlier talk

00:33:38,430 --> 00:33:42,570
there's also something where a lot of

00:33:40,740 --> 00:33:45,780
people are interested in to get

00:33:42,570 --> 00:33:48,060
deterministic behavior and the situation

00:33:45,780 --> 00:33:50,760
one year ago looked a bit sad because

00:33:48,060 --> 00:33:53,040
the developers that are mainly driving

00:33:50,760 --> 00:33:56,720
that stuff forward to get get the

00:33:53,040 --> 00:33:59,550
real-time enhancement into the color

00:33:56,720 --> 00:34:02,460
needed funding that situation actually

00:33:59,550 --> 00:34:04,860
is mostly solved linux on the earth

00:34:02,460 --> 00:34:09,090
foundation started the collaboration

00:34:04,860 --> 00:34:11,790
project last four to get that running

00:34:09,090 --> 00:34:13,379
and these days they are guess five at

00:34:11,790 --> 00:34:15,360
least five developers that I get being

00:34:13,379 --> 00:34:18,270
paid to get the real-time stuff into the

00:34:15,360 --> 00:34:24,179
corner and actually thanks to that

00:34:18,270 --> 00:34:27,300
getting it into the kvm also and then

00:34:24,179 --> 00:34:29,879
you can do real time in VMs that was

00:34:27,300 --> 00:34:32,040
actually in the talk that was right most

00:34:29,879 --> 00:34:34,200
interesting right before this you can

00:34:32,040 --> 00:34:37,460
watch it on youtube later if you are

00:34:34,200 --> 00:34:43,580
interested in that that was part 3

00:34:37,460 --> 00:34:46,830
getting closer to the end question um

00:34:43,580 --> 00:34:49,770
that questions actually asked in a in a

00:34:46,830 --> 00:34:52,530
in a few minutes I have a few posts

00:34:49,770 --> 00:34:57,710
lotsa send another question was it

00:34:52,530 --> 00:34:57,710
wasn't quick okay

00:35:08,550 --> 00:35:14,530
actually the red yeah you need you need

00:35:12,730 --> 00:35:17,020
to be a candle developer look what what

00:35:14,530 --> 00:35:18,820
changes like if you're doing a life

00:35:17,020 --> 00:35:21,220
hatching if the data structures change

00:35:18,820 --> 00:35:27,010
you can't do life life patching for

00:35:21,220 --> 00:35:29,830
example you actually actually redhead

00:35:27,010 --> 00:35:31,330
and Souza offer as a service because if

00:35:29,830 --> 00:35:35,140
you want to do it yourself you have to

00:35:31,330 --> 00:35:39,160
be really skilled to do that so I guess

00:35:35,140 --> 00:35:41,619
I have a minute maybe a few posts lights

00:35:39,160 --> 00:35:46,060
what if you want to know more details

00:35:41,619 --> 00:35:48,760
just google for them and there are more

00:35:46,060 --> 00:35:51,460
details about everything I talked in the

00:35:48,760 --> 00:35:56,160
web if you don't find anything just just

00:35:51,460 --> 00:36:00,190
ask me one thing I normally do on this

00:35:56,160 --> 00:36:02,349
talks is telling people to help testing

00:36:00,190 --> 00:36:04,000
the colonel I'm skipping that because

00:36:02,349 --> 00:36:08,410
i'm doing a lightning talk today at

00:36:04,000 --> 00:36:10,420
eight at 650 or something it's i don't

00:36:08,410 --> 00:36:14,260
know which room just look it up in the

00:36:10,420 --> 00:36:16,570
schedule i go a bit into that there the

00:36:14,260 --> 00:36:20,440
other thing I wanted to ask you is give

00:36:16,570 --> 00:36:22,690
me feedback I might do this again if if

00:36:20,440 --> 00:36:27,540
you don't tell me how bad I was and oh

00:36:22,690 --> 00:36:30,460
if my English was that bad and does it

00:36:27,540 --> 00:36:33,790
organizers also on the web page there's

00:36:30,460 --> 00:36:37,300
a feedback survey so otherwise I might

00:36:33,790 --> 00:36:42,130
be that might invite me again and that's

00:36:37,300 --> 00:36:44,940
actually slide 185th

00:36:42,130 --> 00:36:44,940
that's it

00:36:51,940 --> 00:36:56,950
differently if you there are other

00:36:54,700 --> 00:37:01,350
questions simply grab me on the hallways

00:36:56,950 --> 00:37:01,350
or something and so I the conference

00:37:09,109 --> 00:37:13,470
mission to this person

00:37:11,440 --> 00:37:13,470
Oh

00:37:39,280 --> 00:37:45,339
dynamically to keep me play okay

00:37:48,170 --> 00:37:52,789
haha I'm a crappy one

00:38:20,470 --> 00:38:36,250
ok sometimes I'm not sure because it's

00:38:25,880 --> 00:38:36,250
so much I guess maybe I yeah ok thanks

00:38:42,670 --> 00:38:45,670
so

00:38:51,220 --> 00:38:54,579

YouTube URL: https://www.youtube.com/watch?v=CLJLzE2lBqo


