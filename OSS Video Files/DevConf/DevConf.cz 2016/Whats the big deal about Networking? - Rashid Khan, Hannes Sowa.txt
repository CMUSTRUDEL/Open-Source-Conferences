Title: Whats the big deal about Networking? - Rashid Khan, Hannes Sowa
Publication date: 2016-02-11
Playlist: DevConf.cz 2016
Description: 
	If you have ever wondered:
* What is the big deal about networking
* Why does networking not work right out of the box
* Why is networking so complicated
* I am happy with my 192.16.1.1 address, why does the world need more complications than that?
* What is Internet of things
or any such questions please stop by and we will de-mystify it for you. 

In this talk we would remove the mystery behind networking. 
What are Open vSwitch, DPDK, OVN, VxLan, DPDK, Geneve and other different pieces of networking all about?
We will cover NFV applications, Openstack Applications and Container applications. And what goes on behind the scenes in the networking space.

Presentation: http://bit.ly/1SLW6s1
Captions: 
	00:00:00,000 --> 00:00:02,030
I

00:00:14,639 --> 00:00:20,920
testing check check check Mike check I

00:00:18,300 --> 00:00:24,430
didn't think that we would have this

00:00:20,920 --> 00:00:25,930
many people thank you for coming I think

00:00:24,430 --> 00:00:31,230
you guys are here to check your email

00:00:25,930 --> 00:00:31,230
that's fine I understand I do that too

00:01:04,140 --> 00:01:12,880
are you like to stop it yeah we are

00:01:06,850 --> 00:01:15,300
solving this will be a website there are

00:01:12,880 --> 00:01:15,300
still good

00:02:47,720 --> 00:02:50,620
mystery

00:02:58,600 --> 00:03:04,190
so welcome everyone thanks thanks for

00:03:02,330 --> 00:03:07,220
thanks all for coming I'd like to

00:03:04,190 --> 00:03:10,040
welcome to more red hatters rashid khan

00:03:07,220 --> 00:03:11,960
and hanazawa who are going to answer the

00:03:10,040 --> 00:03:14,630
what's the big deal about networking

00:03:11,960 --> 00:03:17,600
questions for us brushy go ahead thank

00:03:14,630 --> 00:03:20,360
you sir so welcome everybody thanks for

00:03:17,600 --> 00:03:21,770
coming really appreciated I know there's

00:03:20,360 --> 00:03:24,350
a lot of talks a lot of good talks

00:03:21,770 --> 00:03:28,580
happening right now so I'm glad that you

00:03:24,350 --> 00:03:30,560
guys are here thank you so these are not

00:03:28,580 --> 00:03:33,800
made up numbers there's a site called

00:03:30,560 --> 00:03:35,600
Internet live stats so whenever we give

00:03:33,800 --> 00:03:37,790
numbers to engineers they try to find

00:03:35,600 --> 00:03:39,140
out that how bogus they are so most

00:03:37,790 --> 00:03:40,760
probably they are bogus and they're a

00:03:39,140 --> 00:03:42,470
little bit right or correct I don't know

00:03:40,760 --> 00:03:45,020
how they do it but you can you're

00:03:42,470 --> 00:03:49,340
welcome to check them out and figure a

00:03:45,020 --> 00:03:51,590
thief they are real or not but I found

00:03:49,340 --> 00:03:53,590
it interesting and that's why I'm put

00:03:51,590 --> 00:03:55,820
them up there while we were waiting

00:03:53,590 --> 00:03:58,790
anywho so what's the big deal about

00:03:55,820 --> 00:04:01,310
networking before I even begin on

00:03:58,790 --> 00:04:03,980
purpose I did not put my name on these

00:04:01,310 --> 00:04:06,950
slides all the work that i'm going to

00:04:03,980 --> 00:04:09,320
show is done by a very stellar team of

00:04:06,950 --> 00:04:11,330
engineers part of the networking

00:04:09,320 --> 00:04:13,940
services team and part of the

00:04:11,330 --> 00:04:15,920
performance team so I honestly do not

00:04:13,940 --> 00:04:18,140
deserve any credit for any of this I

00:04:15,920 --> 00:04:20,690
just drew some rectangles on some slides

00:04:18,140 --> 00:04:22,880
all the good work seriously I'm not

00:04:20,690 --> 00:04:27,919
joking I'm just here for my dashing good

00:04:22,880 --> 00:04:30,410
looks so that's why I'm here ok so

00:04:27,919 --> 00:04:33,590
networking as we know cloud computing we

00:04:30,410 --> 00:04:35,270
had a lot but cloud needs to be tethered

00:04:33,590 --> 00:04:36,680
to the ground or to be tied to the

00:04:35,270 --> 00:04:39,830
ground because it needs the package to

00:04:36,680 --> 00:04:41,990
go so I tell people that cloud is great

00:04:39,830 --> 00:04:44,720
by itself but cloud also needs a wire

00:04:41,990 --> 00:04:47,330
somehow and that wire that's what we put

00:04:44,720 --> 00:04:49,040
on that's the transport that we have so

00:04:47,330 --> 00:04:53,240
that's again the live stats when I took

00:04:49,040 --> 00:04:56,570
a snapshot it was 1.6 billion gigabytes

00:04:53,240 --> 00:04:58,340
so notice the last two alpha

00:04:56,570 --> 00:05:02,030
gigabyte so that's how many gigabytes

00:04:58,340 --> 00:05:03,230
had transferred over the world wide web

00:05:02,030 --> 00:05:05,090
that day

00:05:03,230 --> 00:05:07,480
it was in the middle of the day us time

00:05:05,090 --> 00:05:09,860
that's a very large number you know

00:05:07,480 --> 00:05:12,470
that's a very large number this is not

00:05:09,860 --> 00:05:16,850
so let's just have it sink in a little

00:05:12,470 --> 00:05:18,920
bit so if you dislike the spinning wheel

00:05:16,850 --> 00:05:20,570
of loading and I get like you go to a

00:05:18,920 --> 00:05:22,520
website or something and you have that

00:05:20,570 --> 00:05:24,560
spinning wheel that says loading if you

00:05:22,520 --> 00:05:27,290
don't like that or if you are waiting

00:05:24,560 --> 00:05:29,060
for anything more than a second like you

00:05:27,290 --> 00:05:30,620
swipe a finger on a facebook picture or

00:05:29,060 --> 00:05:34,220
Twitter and takes more than one second

00:05:30,620 --> 00:05:40,750
or if you like Facebook YouTube snapchat

00:05:34,220 --> 00:05:40,750
uber whatsapp etc then you're welcome

00:05:41,140 --> 00:05:46,280
again it's not are we taking all the

00:05:44,030 --> 00:05:47,750
credit it's all the silent players in

00:05:46,280 --> 00:05:49,730
the background working on networking

00:05:47,750 --> 00:05:51,530
which is quite complicated making it all

00:05:49,730 --> 00:05:53,930
of that happens we have started to take

00:05:51,530 --> 00:05:56,090
it for granted that we swipe a finger

00:05:53,930 --> 00:05:58,550
left to right and a picture appears

00:05:56,090 --> 00:06:02,240
which is many many megabytes but there

00:05:58,550 --> 00:06:03,590
is billions and billions of packets that

00:06:02,240 --> 00:06:06,620
flow in the background so there is a

00:06:03,590 --> 00:06:10,040
silent army of engineers taking care of

00:06:06,620 --> 00:06:11,870
it for you of all kinds so networking is

00:06:10,040 --> 00:06:13,610
getting more and more complex it started

00:06:11,870 --> 00:06:15,710
that Colonel networking then we put some

00:06:13,610 --> 00:06:17,690
stuff in the user space and let the user

00:06:15,710 --> 00:06:20,540
space guy play with it but be controlled

00:06:17,690 --> 00:06:24,410
at all but since then like then we knew

00:06:20,540 --> 00:06:29,050
TCP UDP new protocols maxik service

00:06:24,410 --> 00:06:31,760
function chaining bonding bridges

00:06:29,050 --> 00:06:35,630
Jericho's asking where is team yeah

00:06:31,760 --> 00:06:38,450
there you go team driver see so all

00:06:35,630 --> 00:06:40,760
kinds of different stuff open V switch

00:06:38,450 --> 00:06:43,010
mega flows DNS you name it it's all

00:06:40,760 --> 00:06:45,020
kinds of stuff happening in the other

00:06:43,010 --> 00:06:47,900
talked we talked about some of them dan

00:06:45,020 --> 00:06:49,700
Winship brought it up geneve its if I

00:06:47,900 --> 00:06:51,260
name it all the slide would be full and

00:06:49,700 --> 00:06:53,840
you would be bored the idea is that it

00:06:51,260 --> 00:06:55,130
is behind in the user space networking

00:06:53,840 --> 00:06:57,020
and in the kernel space networking

00:06:55,130 --> 00:06:59,570
there's just rules and oodles of stuff

00:06:57,020 --> 00:07:01,670
it's my job really literally full-time

00:06:59,570 --> 00:07:04,760
job to keep track of it and I cannot

00:07:01,670 --> 00:07:06,740
anymore seriously I cannot it just is so

00:07:04,760 --> 00:07:09,860
much happens every few months it's just

00:07:06,740 --> 00:07:12,020
an unbelievable amount of change in one

00:07:09,860 --> 00:07:13,130
of the talks before we go on in one of

00:07:12,020 --> 00:07:15,440
the other talks I hear that the

00:07:13,130 --> 00:07:17,030
networking has changed more in the last

00:07:15,440 --> 00:07:19,910
couple of years then

00:07:17,030 --> 00:07:25,130
had changed in the last 26 years and i

00:07:19,910 --> 00:07:29,630
absolutely believe it so um yeah please

00:07:25,130 --> 00:07:31,840
welcome so so again to illustrate the

00:07:29,630 --> 00:07:35,930
point about complexity this is an

00:07:31,840 --> 00:07:37,580
OpenStack instance within one host so

00:07:35,930 --> 00:07:40,600
you're saying Rogers I I can't read this

00:07:37,580 --> 00:07:43,700
is too this is like an eye doctors chart

00:07:40,600 --> 00:07:46,760
yes absolutely it's by design so what we

00:07:43,700 --> 00:07:49,250
wanted i wanted to show was that this is

00:07:46,760 --> 00:07:54,080
the zoom in view of that there is bonds

00:07:49,250 --> 00:07:57,860
VLANs bridges obvious tunnels etc so

00:07:54,080 --> 00:08:00,800
much stuff that is just in one node so

00:07:57,860 --> 00:08:03,710
this whole thing is an actual customer

00:08:00,800 --> 00:08:08,390
deployment from OpenStack within one

00:08:03,710 --> 00:08:11,300
node and it's just it needs a PhD just

00:08:08,390 --> 00:08:13,490
to be able to set this stuff up we are

00:08:11,300 --> 00:08:15,470
trying so I'm encouraging people to go

00:08:13,490 --> 00:08:16,940
for their PhDs and definitely networking

00:08:15,470 --> 00:08:20,240
but at the same time we are trying to

00:08:16,940 --> 00:08:22,480
simplify it for you as well so another

00:08:20,240 --> 00:08:25,460
thing that is happening is so complexity

00:08:22,480 --> 00:08:27,650
is one aspects and then I'll talk more

00:08:25,460 --> 00:08:31,460
about that but how many people remember

00:08:27,650 --> 00:08:33,890
the dial-up modem oh wow I thought it

00:08:31,460 --> 00:08:35,810
would be like few people like me yeah

00:08:33,890 --> 00:08:38,180
well the old geezers would hold their

00:08:35,810 --> 00:08:41,300
hand you guys are millennia yeah there's

00:08:38,180 --> 00:08:43,880
the sound T where we all hated it right

00:08:41,300 --> 00:08:46,670
you all hated it it still like puts my

00:08:43,880 --> 00:08:50,570
back the hair in the back of my neck

00:08:46,670 --> 00:08:52,550
went up so why did I put this up

00:08:50,570 --> 00:08:56,480
fighting by my unearthing of ancient

00:08:52,550 --> 00:08:58,250
history the reason quite simply is the

00:08:56,480 --> 00:09:01,010
cable modem changed the telephony

00:08:58,250 --> 00:09:03,440
industry the telephone system

00:09:01,010 --> 00:09:07,700
infrastructure before the cable modem or

00:09:03,440 --> 00:09:09,380
the telephone modem or the void dial-up

00:09:07,700 --> 00:09:11,180
modem before the dial-up modem it was

00:09:09,380 --> 00:09:15,290
the telephony system was designed for a

00:09:11,180 --> 00:09:17,030
two and a half minute call that's it but

00:09:15,290 --> 00:09:19,190
when the dial-up modems came up people

00:09:17,030 --> 00:09:21,320
were going online for hours and staying

00:09:19,190 --> 00:09:22,460
online and the systems were crashing and

00:09:21,320 --> 00:09:24,260
they couldn't keep up the telephone

00:09:22,460 --> 00:09:26,510
system was not designed for that it was

00:09:24,260 --> 00:09:28,700
choking so they came up with this thing

00:09:26,510 --> 00:09:30,800
called internet offload at that time I

00:09:28,700 --> 00:09:32,149
was one of the lucky engineers okay

00:09:30,800 --> 00:09:33,260
out of the college when this was

00:09:32,149 --> 00:09:35,779
happening so I was part of that

00:09:33,260 --> 00:09:38,480
revolution we were part of a start-up

00:09:35,779 --> 00:09:40,310
made some good money and we all remember

00:09:38,480 --> 00:09:43,040
those good days and then voice over IP

00:09:40,310 --> 00:09:45,200
happened etc etc so the old model was

00:09:43,040 --> 00:09:48,829
come out a commodity hardware and

00:09:45,200 --> 00:09:53,829
commodity software I was part of a big

00:09:48,829 --> 00:10:00,640
giant german company not box wagon but

00:09:53,829 --> 00:10:04,399
and we really built a 320 euro gateway

00:10:00,640 --> 00:10:06,529
320 million euro gated gateway and that

00:10:04,399 --> 00:10:09,709
was completely proprietary to take care

00:10:06,529 --> 00:10:11,300
of voice over IP internet offload etc so

00:10:09,709 --> 00:10:13,420
that's the amount of money it was going

00:10:11,300 --> 00:10:17,269
to take to do the internet offloading

00:10:13,420 --> 00:10:20,300
nobody can afford to spend 320 million

00:10:17,269 --> 00:10:22,010
euros on telephony anymore it's getting

00:10:20,300 --> 00:10:23,959
cheaper and cheaper all the services are

00:10:22,010 --> 00:10:25,730
getting cheaper etc so what is the new

00:10:23,959 --> 00:10:28,279
trend what is happening is this is a new

00:10:25,730 --> 00:10:30,500
revolution that's happening that's open

00:10:28,279 --> 00:10:32,540
source hardware like commodity hardware

00:10:30,500 --> 00:10:34,700
dell servers HP servers whatever kind of

00:10:32,540 --> 00:10:37,730
service and open source software because

00:10:34,700 --> 00:10:40,760
there's no way we can compete on a new

00:10:37,730 --> 00:10:42,890
there's no features that can help the

00:10:40,760 --> 00:10:45,170
network equipment providers make money

00:10:42,890 --> 00:10:48,380
they want to reduce money everything is

00:10:45,170 --> 00:10:50,890
about reducing money so all the cloud

00:10:48,380 --> 00:10:54,050
stuff all the things we talked about etc

00:10:50,890 --> 00:10:57,170
everything needs three things one is CPU

00:10:54,050 --> 00:10:59,450
one is networking and one is storage so

00:10:57,170 --> 00:11:00,680
tom is sitting here he'll vote for he'll

00:10:59,450 --> 00:11:02,180
say that the storage should be the

00:11:00,680 --> 00:11:04,220
middle piece or if Linda was here she

00:11:02,180 --> 00:11:06,050
would say that the CPU should be the

00:11:04,220 --> 00:11:07,520
middle piece but of course i made this

00:11:06,050 --> 00:11:09,709
light so the networking is the middle

00:11:07,520 --> 00:11:12,140
piece of the leg or the middle lane so

00:11:09,709 --> 00:11:13,760
but on top of this stable system this is

00:11:12,140 --> 00:11:15,949
like the stable system that is needed on

00:11:13,760 --> 00:11:17,899
top of that there is software layer upon

00:11:15,949 --> 00:11:19,339
software layer upon software layer

00:11:17,899 --> 00:11:21,290
there's just layers and layers of

00:11:19,339 --> 00:11:23,480
software and the complexity is

00:11:21,290 --> 00:11:26,779
increasing so what is happening is the

00:11:23,480 --> 00:11:29,329
poor CPU which is this tiny truck has

00:11:26,779 --> 00:11:31,970
all that stuff happening on top of it

00:11:29,329 --> 00:11:34,550
and it's an overloaded and the axle is

00:11:31,970 --> 00:11:36,829
breaking and it's breaking apart etc so

00:11:34,550 --> 00:11:38,209
we have to have a solution for this what

00:11:36,829 --> 00:11:39,560
are the solutions we will talk about it

00:11:38,209 --> 00:11:43,279
a little bit later but I just want to

00:11:39,560 --> 00:11:44,460
make you realize that having commodity I

00:11:43,279 --> 00:11:46,500
mean open source

00:11:44,460 --> 00:11:48,510
is one thing but the layers of software

00:11:46,500 --> 00:11:52,920
that is needed to go all the way to the

00:11:48,510 --> 00:11:54,690
cloud is just mushrooming so sports car

00:11:52,920 --> 00:11:56,760
so changing track a little bit i know

00:11:54,690 --> 00:11:58,710
i'm jumping time is running short and

00:11:56,760 --> 00:12:00,630
you know so sports car if somebody was

00:11:58,710 --> 00:12:02,640
to design a sports car what do we need

00:12:00,630 --> 00:12:04,920
all we needed to be buzzed we need you

00:12:02,640 --> 00:12:07,410
to be sexy we need it fast we need to be

00:12:04,920 --> 00:12:09,750
fun to drive and we need it cool boom

00:12:07,410 --> 00:12:13,500
there's your sports car it's a Porsche

00:12:09,750 --> 00:12:16,470
Wow excellent but then somebody like me

00:12:13,500 --> 00:12:19,650
gets it is two children and skiing and

00:12:16,470 --> 00:12:22,530
golf and children's backpacks etc and

00:12:19,650 --> 00:12:24,270
has to work so by the way why did I put

00:12:22,530 --> 00:12:27,630
this this came out of order any of the

00:12:24,270 --> 00:12:31,470
sports car is the DPD k it's fast it's

00:12:27,630 --> 00:12:33,450
buzz its does a lot of stuff it gets the

00:12:31,470 --> 00:12:35,490
package to the user space super fast but

00:12:33,450 --> 00:12:37,890
it does not do a whole bunch of stuff so

00:12:35,490 --> 00:12:40,500
now coming back to your car analogy now

00:12:37,890 --> 00:12:42,930
if my wife say oh it should carry the

00:12:40,500 --> 00:12:45,660
luggage okay it should have four doors

00:12:42,930 --> 00:12:48,300
okay fine it should be easy in and out

00:12:45,660 --> 00:12:51,840
it should work on all seasons like dirt

00:12:48,300 --> 00:12:54,210
roads no sand whatever and it should

00:12:51,840 --> 00:12:56,070
have low emissions and low emissions and

00:12:54,210 --> 00:12:58,110
fuel efficiency okay fine so what

00:12:56,070 --> 00:13:00,210
happens there you go you end up with the

00:12:58,110 --> 00:13:03,810
sedan it does a whole bunch of stuff

00:13:00,210 --> 00:13:07,710
might not be as cool might have other

00:13:03,810 --> 00:13:11,190
problems but that's our old sorry to say

00:13:07,710 --> 00:13:13,890
old but that's our kernel networking or

00:13:11,190 --> 00:13:16,590
netdev that we knew about so new stuff

00:13:13,890 --> 00:13:18,210
is coming but still guess what the sedan

00:13:16,590 --> 00:13:19,680
is still there the netdev kernel is

00:13:18,210 --> 00:13:23,400
still very relevant and we'll talk about

00:13:19,680 --> 00:13:26,700
that so the colonel networking is listed

00:13:23,400 --> 00:13:30,210
on the left hand side from the chi

00:13:26,700 --> 00:13:31,890
pcloud it goes to the nic driver goes to

00:13:30,210 --> 00:13:35,460
Colonel networking crosses the user

00:13:31,890 --> 00:13:38,610
space boundary goes to open V switch & R

00:13:35,460 --> 00:13:40,440
goes to the V hostnet qemu and goes to

00:13:38,610 --> 00:13:42,750
different virtual machines or goes to

00:13:40,440 --> 00:13:44,910
the different containers the picture

00:13:42,750 --> 00:13:48,510
pretty much remains the same this these

00:13:44,910 --> 00:13:49,800
pictures are simplified for a reason

00:13:48,510 --> 00:13:51,660
just to illustrate the point I know

00:13:49,800 --> 00:13:54,570
there's so much more complexity to this

00:13:51,660 --> 00:13:55,990
but i simplified it just to show you a

00:13:54,570 --> 00:13:58,540
ghost jeep example

00:13:55,990 --> 00:14:00,520
then the middle middle column is the DPD

00:13:58,540 --> 00:14:04,270
k plus V host user so that is another

00:14:00,520 --> 00:14:06,700
model in which DP DK takes the packet

00:14:04,270 --> 00:14:09,100
directly from the cloud shunts it to the

00:14:06,700 --> 00:14:12,010
user space and guess what everything

00:14:09,100 --> 00:14:14,980
else is in the user space boom no more

00:14:12,010 --> 00:14:16,540
colonel no nothing no packets are ya no

00:14:14,980 --> 00:14:20,110
packets going to the colonel networking

00:14:16,540 --> 00:14:22,120
no problem okay happens it's okay then

00:14:20,110 --> 00:14:25,420
the third one is device assignment SR

00:14:22,120 --> 00:14:26,830
iov dan mentioned in earnest Katoch I

00:14:25,420 --> 00:14:29,170
think there are other talks been there

00:14:26,830 --> 00:14:30,790
done that direct assignment packets

00:14:29,170 --> 00:14:35,320
again going directly to the virtual

00:14:30,790 --> 00:14:39,279
machines so why should a user or anybody

00:14:35,320 --> 00:14:42,370
pick one or the other so there are pros

00:14:39,279 --> 00:14:44,110
and cons as usual so on the left hand

00:14:42,370 --> 00:14:45,790
side with the colonel networking you

00:14:44,110 --> 00:14:48,279
have all the pros feature risk

00:14:45,790 --> 00:14:50,860
feature-rich 26 years of development

00:14:48,279 --> 00:14:53,290
open source all everything you can

00:14:50,860 --> 00:14:55,660
imagine is there on the DPD case I'd

00:14:53,290 --> 00:14:57,520
packets fly directly to userspace the

00:14:55,660 --> 00:15:00,760
user space guys take all the control

00:14:57,520 --> 00:15:03,100
they do everything but there are still

00:15:00,760 --> 00:15:05,560
some cons it has it has limited

00:15:03,100 --> 00:15:07,839
offloading support the tcp stack is not

00:15:05,560 --> 00:15:11,350
there there is work in progress for

00:15:07,839 --> 00:15:13,660
migration etc and device assignment also

00:15:11,350 --> 00:15:15,010
has pros and cons you can read this

00:15:13,660 --> 00:15:17,680
offline I'm not going to bore you with

00:15:15,010 --> 00:15:20,470
by line by line items but there are pros

00:15:17,680 --> 00:15:22,120
and cons of everything as in life the

00:15:20,470 --> 00:15:24,760
good thing about red hat or the Red Hat

00:15:22,120 --> 00:15:28,120
solution is that the way I view it is

00:15:24,760 --> 00:15:29,290
that we offer above a you know like you

00:15:28,120 --> 00:15:31,000
go to a restaurant and there's a buffet

00:15:29,290 --> 00:15:32,890
you can pick and choose what you want so

00:15:31,000 --> 00:15:34,930
all these three options are available

00:15:32,890 --> 00:15:37,600
for our customers and partners to use

00:15:34,930 --> 00:15:39,220
and we will support them till the cows

00:15:37,600 --> 00:15:41,230
come home as they say will support them

00:15:39,220 --> 00:15:43,360
day and day out so DP DK is fully

00:15:41,230 --> 00:15:45,579
integrated DP in DK plus 0 vs is fully

00:15:43,360 --> 00:15:47,110
integrated obvious without DP decays

00:15:45,579 --> 00:15:49,620
integrated obvious with Colonel

00:15:47,110 --> 00:15:52,329
networking all of this is available now

00:15:49,620 --> 00:15:55,930
coming back to the pros and cons so

00:15:52,329 --> 00:15:57,790
ultimately rajath what is the packet

00:15:55,930 --> 00:16:01,029
rate what is the throughput rate ok fine

00:15:57,790 --> 00:16:03,600
our stellar performance team has been

00:16:01,029 --> 00:16:07,060
doing a phenomenal job getting us the

00:16:03,600 --> 00:16:08,620
results that we need so as you see from

00:16:07,060 --> 00:16:09,820
the left hand side i'm just going to

00:16:08,620 --> 00:16:12,010
compare the two because it

00:16:09,820 --> 00:16:13,720
getting too complicated to have SR IV in

00:16:12,010 --> 00:16:15,610
there but I we have those data we have

00:16:13,720 --> 00:16:18,310
that data as well so on the left hand

00:16:15,610 --> 00:16:21,580
side by the way this is before I start

00:16:18,310 --> 00:16:23,500
this is a 64-byte frame and the

00:16:21,580 --> 00:16:26,350
theoretical limit on this on a 10 gig

00:16:23,500 --> 00:16:29,320
link is 14.8 8 so just to give you a

00:16:26,350 --> 00:16:31,330
reference I put that in the bottom of

00:16:29,320 --> 00:16:35,170
every slide so the theoretical limit is

00:16:31,330 --> 00:16:37,300
there so for ultra low 64 byte packets

00:16:35,170 --> 00:16:39,430
on the colonel networking side with

00:16:37,300 --> 00:16:43,060
layer 3 routing with the recent work

00:16:39,430 --> 00:16:45,340
that went in for 72 and upstream Alex

00:16:43,060 --> 00:16:47,260
tagged did a tremendous job at it we are

00:16:45,340 --> 00:16:50,680
at the almost the theoretical limit you

00:16:47,260 --> 00:16:54,070
know 14.8 versus 14.12 no problem layer

00:16:50,680 --> 00:16:59,020
3 routing solved then again are we move

00:16:54,070 --> 00:17:01,930
up to up to ovs we are at 9.05 and then

00:16:59,020 --> 00:17:04,480
crossing that boundary into V hostnet we

00:17:01,930 --> 00:17:08,290
are really dismal the performance goes

00:17:04,480 --> 00:17:10,180
down tremendously no problems we are

00:17:08,290 --> 00:17:11,829
working on it it's not the end of the

00:17:10,180 --> 00:17:13,360
world we can solve that problem we

00:17:11,829 --> 00:17:18,850
talked about it yesterday it's there we

00:17:13,360 --> 00:17:23,079
have plans to solve that hopefully this

00:17:18,850 --> 00:17:27,910
mike is really good man I have to know

00:17:23,079 --> 00:17:30,460
it myself unless be careful so on the

00:17:27,910 --> 00:17:32,860
DPD k side all the way too obvious it's

00:17:30,460 --> 00:17:34,300
reached at rentokil limit no problem

00:17:32,860 --> 00:17:38,140
when you go to the virtual machines

00:17:34,300 --> 00:17:40,510
again performance goes down 4.21 it's a

00:17:38,140 --> 00:17:44,280
tremendous loss in performance but hold

00:17:40,510 --> 00:17:49,600
that thought I will cover that again now

00:17:44,280 --> 00:17:52,300
some people might argue that 64 byte

00:17:49,600 --> 00:17:53,920
frames was not realistic 256 might be

00:17:52,300 --> 00:17:56,590
okay okay fine no problem we have that

00:17:53,920 --> 00:17:59,320
data as well now the things look start

00:17:56,590 --> 00:18:00,910
to look better why do they look better

00:17:59,320 --> 00:18:02,320
because even a tiny frame you are doing

00:18:00,910 --> 00:18:04,330
our overhead Allah there's a lot of

00:18:02,320 --> 00:18:07,120
overhead of pushing the packets there's

00:18:04,330 --> 00:18:09,880
no batching there's no nothing etc many

00:18:07,120 --> 00:18:12,670
different reasons so now with 60 256

00:18:09,880 --> 00:18:15,460
bytes the data looks okay but that point

00:18:12,670 --> 00:18:17,440
77 number is still pretty bad but the

00:18:15,460 --> 00:18:21,550
theoretical limit on this size of packet

00:18:17,440 --> 00:18:22,759
is 4.53 both on the ovs I with or

00:18:21,550 --> 00:18:25,039
without

00:18:22,759 --> 00:18:27,259
dpd k we are okay all the way to open we

00:18:25,039 --> 00:18:29,889
switch but the V host boundary when you

00:18:27,259 --> 00:18:32,440
go to virtual machines the 256 is better

00:18:29,889 --> 00:18:36,799
okay we are working on it no problem

00:18:32,440 --> 00:18:40,219
then we go to 512 the numbers again

00:18:36,799 --> 00:18:42,859
become better the gap is closing with or

00:18:40,219 --> 00:18:46,039
without dpd k no problem things look

00:18:42,859 --> 00:18:49,489
good and then I'll rush forward and go

00:18:46,039 --> 00:18:52,009
to a typical size MTU size which is more

00:18:49,489 --> 00:18:53,869
typical in in a realistic environment

00:18:52,009 --> 00:18:56,869
and now the numbers are very very

00:18:53,869 --> 00:18:58,579
similar so just a point to note again

00:18:56,869 --> 00:19:01,069
these are the I wrote down the

00:18:58,579 --> 00:19:02,809
theoretical limit at the bottom and as

00:19:01,069 --> 00:19:06,199
you can see on that MTU size which is

00:19:02,809 --> 00:19:08,239
1500 bytes it all makes sense all the

00:19:06,199 --> 00:19:10,909
numbers are at theoretical limit so job

00:19:08,239 --> 00:19:12,769
well done let's go home no no it's not

00:19:10,909 --> 00:19:19,819
done we still have a lot of work to do

00:19:12,769 --> 00:19:22,339
what do are we doing so why is that this

00:19:19,819 --> 00:19:25,819
one so going back to this one for a

00:19:22,339 --> 00:19:28,699
second see that 4.21 number why is that

00:19:25,819 --> 00:19:30,829
performance so bad why is why is it that

00:19:28,699 --> 00:19:32,869
when we cross the V host user boundary

00:19:30,829 --> 00:19:36,019
there's a tremendous loss yep we can

00:19:32,869 --> 00:19:37,819
explain that so that's because the views

00:19:36,019 --> 00:19:41,929
user all those packets are going through

00:19:37,819 --> 00:19:44,209
a single queue and there might be many

00:19:41,929 --> 00:19:46,669
different CPUs which are idle but one

00:19:44,209 --> 00:19:49,339
cpu is pegged all the way to the sky and

00:19:46,669 --> 00:19:54,229
it's crunching all the numbers and that

00:19:49,339 --> 00:19:56,479
is the max it can do on x86 server so

00:19:54,229 --> 00:19:58,459
how do we solve this you will say rush

00:19:56,479 --> 00:20:02,059
it very easy you have multiple queues

00:19:58,459 --> 00:20:03,949
yeah voila there you go we have multiple

00:20:02,059 --> 00:20:05,539
queues it's called it is V host user

00:20:03,949 --> 00:20:07,999
with multiple queues so that you can

00:20:05,539 --> 00:20:09,589
open up many different CPUs to do the

00:20:07,999 --> 00:20:12,589
number crunching or the packet pushing

00:20:09,589 --> 00:20:14,749
or the packet transfer so no big deal we

00:20:12,589 --> 00:20:16,849
can do that easily and now we are again

00:20:14,749 --> 00:20:18,739
close to the theoretical limit it's no

00:20:16,849 --> 00:20:22,190
problem and we are working with our

00:20:18,739 --> 00:20:25,549
partners in neisseria vmware intel to

00:20:22,190 --> 00:20:27,409
make this number go higher as well so we

00:20:25,549 --> 00:20:29,299
are constantly trying to improve the

00:20:27,409 --> 00:20:31,549
performance of the system it's part of

00:20:29,299 --> 00:20:33,169
our mantra part of our charter we lose

00:20:31,549 --> 00:20:35,509
sleep at night trying to push the

00:20:33,169 --> 00:20:36,650
packets forward to virtual machines

00:20:35,509 --> 00:20:38,000
OpenStack you

00:20:36,650 --> 00:20:39,740
name it all the way to the containers

00:20:38,000 --> 00:20:43,420
that's where are we are earning our

00:20:39,740 --> 00:20:45,560
bread and butter these days okay so

00:20:43,420 --> 00:20:48,770
coming back to this for a second so you

00:20:45,560 --> 00:20:51,500
say Russia that's not really good

00:20:48,770 --> 00:20:54,980
because now if you are a big bank and

00:20:51,500 --> 00:20:56,690
you bought a gigantic system and you're

00:20:54,980 --> 00:20:59,000
going to write the next killer app

00:20:56,690 --> 00:21:02,510
you're going to write the next Facebook

00:20:59,000 --> 00:21:06,080
or the next Google or next whatever app

00:21:02,510 --> 00:21:09,140
and all of a sudden you are taking four

00:21:06,080 --> 00:21:11,570
of my course just for packing pushing

00:21:09,140 --> 00:21:13,010
packets to virtual machines that's not

00:21:11,570 --> 00:21:15,020
fair what am I going to do with the rest

00:21:13,010 --> 00:21:17,750
if I have a eight core system you are

00:21:15,020 --> 00:21:21,410
taking four of them yeah that's a

00:21:17,750 --> 00:21:22,730
problem so and it's it's like a nice an

00:21:21,410 --> 00:21:24,980
understandable problem that you are

00:21:22,730 --> 00:21:26,600
using so much CPU power just for packet

00:21:24,980 --> 00:21:28,340
pushing where am I going to do the app

00:21:26,600 --> 00:21:31,790
where am I going to run my Java Java

00:21:28,340 --> 00:21:35,030
scripts all of that stuff so they always

00:21:31,790 --> 00:21:36,860
need all the CPU anyhow so there that's

00:21:35,030 --> 00:21:40,310
our solution that is what we are working

00:21:36,860 --> 00:21:42,730
on one of our friends jury Perko he came

00:21:40,310 --> 00:21:45,130
up with this concept called switch dev

00:21:42,730 --> 00:21:47,330
he has been working on it for a while

00:21:45,130 --> 00:21:49,640
what is going to do is it's going to

00:21:47,330 --> 00:21:52,220
enable Hardware offloading so instead of

00:21:49,640 --> 00:21:53,540
all the work being done on the main CPU

00:21:52,220 --> 00:21:55,640
we are going to offload it to the

00:21:53,540 --> 00:21:58,610
different Nix which will help a lot and

00:21:55,640 --> 00:21:59,930
we are working with our partners there

00:21:58,610 --> 00:22:01,340
are some partners who already have

00:21:59,930 --> 00:22:03,980
solutions we are going to start working

00:22:01,340 --> 00:22:06,050
with them to make this happen like they

00:22:03,980 --> 00:22:07,400
have it working now we are going to red

00:22:06,050 --> 00:22:08,780
red hat we are going to work with them

00:22:07,400 --> 00:22:10,790
to make it part of our redhead

00:22:08,780 --> 00:22:12,920
distribution so this is already in the

00:22:10,790 --> 00:22:15,710
works hopefully when i go back to

00:22:12,920 --> 00:22:19,550
westford patches will be available we

00:22:15,710 --> 00:22:25,780
can run with it and Jerry Prokos sitting

00:22:19,550 --> 00:22:25,780
there smiling saying no way man so

00:22:26,410 --> 00:22:32,390
nothing but net it's us it's it is

00:22:30,160 --> 00:22:33,890
basketball-reference for people who

00:22:32,390 --> 00:22:35,450
might not understand it nothing but net

00:22:33,890 --> 00:22:37,610
means like you hit the basketball you

00:22:35,450 --> 00:22:40,730
through the basketball it went swishing

00:22:37,610 --> 00:22:42,620
and there was it didn't hit the rim it

00:22:40,730 --> 00:22:45,560
just were indirectly two points so

00:22:42,620 --> 00:22:47,930
nothing but that we are NFV ready so NFV

00:22:45,560 --> 00:22:50,130
is the big push there's trillions and

00:22:47,930 --> 00:22:51,720
trillions of dollars

00:22:50,130 --> 00:22:55,080
millions of dollars to be made in that

00:22:51,720 --> 00:22:56,820
place and that is the big push for

00:22:55,080 --> 00:22:58,380
OpenStack even some people are saying

00:22:56,820 --> 00:23:00,630
every phone call is going to be a

00:22:58,380 --> 00:23:02,190
container some people are saying every

00:23:00,630 --> 00:23:04,080
app everything is going to be on a

00:23:02,190 --> 00:23:07,590
virtual machine there's all kinds of

00:23:04,080 --> 00:23:09,420
grandiose ideas fine no problem Rhea

00:23:07,590 --> 00:23:11,400
Rhea nfe ready we have the building

00:23:09,420 --> 00:23:14,340
blocks ready their packets are being

00:23:11,400 --> 00:23:16,160
pushed at theoretical limits I already

00:23:14,340 --> 00:23:19,860
told you about it in the previous slides

00:23:16,160 --> 00:23:23,190
and now some people are skeptical that

00:23:19,860 --> 00:23:25,710
ok OpenStack yeah it's big it's bulky

00:23:23,190 --> 00:23:28,590
what am I going to do about it etc but

00:23:25,710 --> 00:23:30,660
there are actual operators networking

00:23:28,590 --> 00:23:33,060
operators who are coming to us and

00:23:30,660 --> 00:23:34,950
saying we are going to use OpenStack we

00:23:33,060 --> 00:23:36,720
are going to use rel we are going to use

00:23:34,950 --> 00:23:39,270
the PDK and these are the things that we

00:23:36,720 --> 00:23:41,750
need from you so it's not that we are

00:23:39,270 --> 00:23:43,980
trying to push it the network equipment

00:23:41,750 --> 00:23:46,500
manufacturers or any Peas network

00:23:43,980 --> 00:23:49,440
equipment providers are coming to us and

00:23:46,500 --> 00:23:50,880
saying this is what we need and they are

00:23:49,440 --> 00:23:55,440
really making a big deal out of it I

00:23:50,880 --> 00:23:58,500
have a quote from South Korea telecom is

00:23:55,440 --> 00:24:00,840
called SK Telecom I used to work a lot

00:23:58,500 --> 00:24:03,000
with our Korean customers and partners

00:24:00,840 --> 00:24:04,980
in my previous life they are the most

00:24:03,000 --> 00:24:06,960
conservative people they will never tell

00:24:04,980 --> 00:24:10,290
you what they have implants unless they

00:24:06,960 --> 00:24:14,160
have it done so this is their paw so

00:24:10,290 --> 00:24:17,160
they they there's a guy I forget he was

00:24:14,160 --> 00:24:19,320
vp of NFV development etc he's on

00:24:17,160 --> 00:24:22,130
youtube you can watch it yourself he was

00:24:19,320 --> 00:24:25,830
saying that as part of their 5g

00:24:22,130 --> 00:24:27,540
deployment or their 5g plans beyond they

00:24:25,830 --> 00:24:31,580
will have Software Defined Networking

00:24:27,540 --> 00:24:35,010
they will have n fe OpenStack its

00:24:31,580 --> 00:24:38,970
centerpiece it's it is what is being

00:24:35,010 --> 00:24:41,460
used for all their next-gen stuff and if

00:24:38,970 --> 00:24:43,910
we consider that we are already in 2016

00:24:41,460 --> 00:24:46,680
and they are planned to deploy it in

00:24:43,910 --> 00:24:49,530
2020 that means that the field trials

00:24:46,680 --> 00:24:52,860
are going to start now or are starting

00:24:49,530 --> 00:24:54,510
and yes that is true we have actual

00:24:52,860 --> 00:24:56,820
field trial starting with all of this

00:24:54,510 --> 00:24:59,760
stuff now all the way with OpenStack

00:24:56,820 --> 00:25:03,870
openshift containers in a virtual

00:24:59,760 --> 00:25:06,030
machine you name it so you will say

00:25:03,870 --> 00:25:07,350
Russia's what about why you mentioned so

00:25:06,030 --> 00:25:09,240
much about virtual machine you didn't

00:25:07,350 --> 00:25:11,820
say anything about containers well no

00:25:09,240 --> 00:25:13,650
problem so here's a slide for continuous

00:25:11,820 --> 00:25:15,570
there's a whole track of talks about

00:25:13,650 --> 00:25:17,880
containers containers networking danwon

00:25:15,570 --> 00:25:19,559
ship already did one if you missed it it

00:25:17,880 --> 00:25:21,540
was a very very good talk it gives an

00:25:19,559 --> 00:25:23,070
overview I highly recommend that you

00:25:21,540 --> 00:25:25,230
watch it there's going to be another one

00:25:23,070 --> 00:25:27,030
by rajat sitting in the corner later on

00:25:25,230 --> 00:25:28,530
this in this room but I want you to give

00:25:27,030 --> 00:25:30,270
you a simple view about the container

00:25:28,530 --> 00:25:31,770
inside the good thing about all of this

00:25:30,270 --> 00:25:33,630
is before I even begin is that the

00:25:31,770 --> 00:25:36,179
containers we don't see the performance

00:25:33,630 --> 00:25:38,250
problems containers are designed with a

00:25:36,179 --> 00:25:41,040
very simple network you pop one open and

00:25:38,250 --> 00:25:43,590
it comes with an IP address 192 168 very

00:25:41,040 --> 00:25:46,440
simple no problem you have a container

00:25:43,590 --> 00:25:49,160
voila the problem comes when that

00:25:46,440 --> 00:25:52,230
container has to talk with other stuff

00:25:49,160 --> 00:25:53,970
so on a laptop popping open a container

00:25:52,230 --> 00:25:57,090
no problem you don't need anything it

00:25:53,970 --> 00:26:00,300
has a tap device outside it can talk to

00:25:57,090 --> 00:26:04,290
the World Wide Web no issues thanks

00:26:00,300 --> 00:26:13,620
honest I thought I ran out of time so it

00:26:04,290 --> 00:26:15,300
was a warning or something yeah so so in

00:26:13,620 --> 00:26:17,700
containers thats picture is much simpler

00:26:15,300 --> 00:26:19,830
but the simple networking of the

00:26:17,700 --> 00:26:22,500
containers as you see the 192 168

00:26:19,830 --> 00:26:26,460
address that still has to connect with

00:26:22,500 --> 00:26:30,150
that big giant ball of networking or big

00:26:26,460 --> 00:26:32,850
giant Godzilla of networking that has

00:26:30,150 --> 00:26:35,250
been created for the last 26 years and

00:26:32,850 --> 00:26:37,470
we have a solution it does connect it

00:26:35,250 --> 00:26:40,110
does connect it does work host to host

00:26:37,470 --> 00:26:42,170
node to node pod to pod namespaces you

00:26:40,110 --> 00:26:45,570
name it throw all the layers of

00:26:42,170 --> 00:26:47,640
isolation migration you name it on it

00:26:45,570 --> 00:26:50,540
multi-tenancy it all works we have it

00:26:47,640 --> 00:26:54,059
working we have a deployed open shift is

00:26:50,540 --> 00:26:57,630
shipping with live open shift life right

00:26:54,059 --> 00:27:00,450
now and we have tested it with thousands

00:26:57,630 --> 00:27:02,970
and thousands of nodes already and it

00:27:00,450 --> 00:27:04,920
does scale doesn't seem to be any

00:27:02,970 --> 00:27:06,900
problems so that's pretty good but if

00:27:04,920 --> 00:27:08,820
you are interested more in containers

00:27:06,900 --> 00:27:12,830
networking talks please stay in this

00:27:08,820 --> 00:27:16,530
room and we will tell you more about it

00:27:12,830 --> 00:27:17,820
so with that said I'll shift it over to

00:27:16,530 --> 00:27:19,500
my esteem

00:27:17,820 --> 00:27:25,080
colleague hanus he's going to tell you

00:27:19,500 --> 00:27:28,110
about what is you have another can also

00:27:25,080 --> 00:27:30,180
just use so he's going to tell you more

00:27:28,110 --> 00:27:33,810
about what we have in the pipeline what

00:27:30,180 --> 00:27:36,630
you are working on and how maybe you can

00:27:33,810 --> 00:27:39,300
help us yeah hello my name is honest I'm

00:27:36,630 --> 00:27:40,890
part of Russia's team and a short

00:27:39,300 --> 00:27:43,890
introduction what we are looking for in

00:27:40,890 --> 00:27:45,360
the next few in this year next few

00:27:43,890 --> 00:27:48,420
months and also maybe next few years

00:27:45,360 --> 00:27:51,930
what will come up so our daily button

00:27:48,420 --> 00:27:54,450
butter and bread job is like we have to

00:27:51,930 --> 00:27:56,160
care about the networking stack which

00:27:54,450 --> 00:28:00,810
basically means everything what pushes

00:27:56,160 --> 00:28:02,850
packets in and out we need to fix stuff

00:28:00,810 --> 00:28:06,420
not only in rel but also very often

00:28:02,850 --> 00:28:08,940
upstream so we need to look ahead and

00:28:06,420 --> 00:28:12,210
also care about what what well it will

00:28:08,940 --> 00:28:14,760
look like so even so we can't push

00:28:12,210 --> 00:28:16,350
everything into well into that linux we

00:28:14,760 --> 00:28:18,870
we need to make sure that at the point

00:28:16,350 --> 00:28:20,730
when we try to work on well eight we

00:28:18,870 --> 00:28:26,130
have a networking stack which we can use

00:28:20,730 --> 00:28:29,670
on so we try to work with upstream

00:28:26,130 --> 00:28:33,870
community to fix packs early and as fast

00:28:29,670 --> 00:28:35,520
as possible a little bit of my my our

00:28:33,870 --> 00:28:40,380
agenda is like we want to look into

00:28:35,520 --> 00:28:42,150
security in the cloud more so Sabrina in

00:28:40,380 --> 00:28:45,830
our team develop the Mexican plement

00:28:42,150 --> 00:28:48,480
ation which we now try to push upstream

00:28:45,830 --> 00:28:51,930
we will have to work further on it too

00:28:48,480 --> 00:28:55,410
also like specify how crypto keys can

00:28:51,930 --> 00:28:57,560
get negotiated even with if you use it

00:28:55,410 --> 00:29:00,360
in the cloud like not only on the

00:28:57,560 --> 00:29:02,430
ethernet layer which will be solved

00:29:00,360 --> 00:29:05,540
quite easily but if you also do that

00:29:02,430 --> 00:29:08,760
internets then there are some kind of

00:29:05,540 --> 00:29:10,620
proposals for weeks long crypto so you

00:29:08,760 --> 00:29:13,140
can actually encrypt the week's length

00:29:10,620 --> 00:29:15,420
honor them self and people also look

00:29:13,140 --> 00:29:17,790
into ipsec ipsec offloading so you

00:29:15,420 --> 00:29:21,630
actually can do the crypto processes on

00:29:17,790 --> 00:29:23,610
the networking cart so the networking

00:29:21,630 --> 00:29:26,130
cart basically gives you the unencrypted

00:29:23,610 --> 00:29:27,510
packet and verify packet already the

00:29:26,130 --> 00:29:29,290
problem here in linux is like we have

00:29:27,510 --> 00:29:30,790
like all those offloads but sometimes

00:29:29,290 --> 00:29:33,460
very hard to actually make use of them

00:29:30,790 --> 00:29:36,340
because the offloading extension

00:29:33,460 --> 00:29:37,750
sometimes makes use of the

00:29:36,340 --> 00:29:39,940
floating-point unit and it's sometimes

00:29:37,750 --> 00:29:43,630
hard to get that into in the receive

00:29:39,940 --> 00:29:46,330
past because it's only used actually

00:29:43,630 --> 00:29:47,320
designed to use in user space so we are

00:29:46,330 --> 00:29:51,340
looking muscle in performance

00:29:47,320 --> 00:29:54,700
enhancements they are a big thing always

00:29:51,340 --> 00:29:57,460
is performance so performances like I've

00:29:54,700 --> 00:29:59,140
divided into two categories we always

00:29:57,460 --> 00:30:02,020
have like the software performance which

00:29:59,140 --> 00:30:06,430
is like we need to improve or we look

00:30:02,020 --> 00:30:07,990
into how to improve the software code

00:30:06,430 --> 00:30:10,030
and then it's obvious the possibility if

00:30:07,990 --> 00:30:13,090
the software cannot keep up with what

00:30:10,030 --> 00:30:15,100
networking wants to do the idea to to

00:30:13,090 --> 00:30:18,610
push stuff into the hopper and just let

00:30:15,100 --> 00:30:21,190
the Harper do it and the software tries

00:30:18,610 --> 00:30:23,320
to come up or try some kind of same

00:30:21,190 --> 00:30:25,840
configuration tries to provide some same

00:30:23,320 --> 00:30:27,340
configuration interface and down to the

00:30:25,840 --> 00:30:29,080
hardware so we have four examples which

00:30:27,340 --> 00:30:31,090
dev which tries to have a common

00:30:29,080 --> 00:30:33,550
interface a generic interface how to

00:30:31,090 --> 00:30:35,710
configure pictures in in the linux

00:30:33,550 --> 00:30:38,020
Carter so it doesn't really matter which

00:30:35,710 --> 00:30:42,310
switch you use you can transparently use

00:30:38,020 --> 00:30:44,710
all kinds of switches and this then can

00:30:42,310 --> 00:30:47,230
get integrated furthermore into the

00:30:44,710 --> 00:30:49,420
whole stack like for example it should

00:30:47,230 --> 00:30:51,130
be possible that open beasts which can

00:30:49,420 --> 00:30:53,860
then for example offload complete close

00:30:51,130 --> 00:30:56,890
to this to the hardware or the bridge

00:30:53,860 --> 00:30:58,720
can pre establish flows which directly

00:30:56,890 --> 00:31:02,230
go through the hopper and won't ever

00:30:58,720 --> 00:31:05,350
touch the surface tech problems in there

00:31:02,230 --> 00:31:07,360
is like in a lot of cases we need to

00:31:05,350 --> 00:31:09,640
have some kind of for back path to

00:31:07,360 --> 00:31:10,540
soften through South there and they are

00:31:09,640 --> 00:31:13,510
just important that they actually

00:31:10,540 --> 00:31:16,570
synchronize all those hardware and

00:31:13,510 --> 00:31:19,540
software slow paths in a way that they

00:31:16,570 --> 00:31:22,690
don't actually break stuff so the Harper

00:31:19,540 --> 00:31:24,700
the software needs to work very very

00:31:22,690 --> 00:31:29,500
needed turf the same properties and they

00:31:24,700 --> 00:31:30,820
need to work yeah the same they would it

00:31:29,500 --> 00:31:34,780
doesn't it should not matter where the

00:31:30,820 --> 00:31:38,800
packet gets processed basically so on

00:31:34,780 --> 00:31:41,080
the software side what we what was seen

00:31:38,800 --> 00:31:42,160
last year and we try not to also get

00:31:41,080 --> 00:31:44,260
back into right address

00:31:42,160 --> 00:31:46,990
like we have seen lots of TCP and socket

00:31:44,260 --> 00:31:49,750
enhancements so one of the bigger

00:31:46,990 --> 00:31:52,750
projects is that the TCP listen a lot

00:31:49,750 --> 00:31:56,050
was removed upstream which now provides

00:31:52,750 --> 00:31:59,140
cards in which make heavy use of TCP

00:31:56,050 --> 00:32:03,370
servers with a much better capability to

00:31:59,140 --> 00:32:06,160
scale up to concurrently receiving lots

00:32:03,370 --> 00:32:08,850
of more lots more connections that was

00:32:06,160 --> 00:32:11,680
done mostly by Eric tomasi at google

00:32:08,850 --> 00:32:13,740
also like small patches finally hit the

00:32:11,680 --> 00:32:16,720
tree so for example there is no way for

00:32:13,740 --> 00:32:21,040
like the thundering heart problem in a

00:32:16,720 --> 00:32:24,310
poll to finally make sure that for

00:32:21,040 --> 00:32:26,440
example if you get a syn packet into a

00:32:24,310 --> 00:32:29,620
socket and you are appalling or polygon

00:32:26,440 --> 00:32:31,510
the socket that only one thread gets

00:32:29,620 --> 00:32:35,440
woken up and not all threats which are

00:32:31,510 --> 00:32:39,460
using this this listening socket so that

00:32:35,440 --> 00:32:43,870
is actually helping a lot in scenarios

00:32:39,460 --> 00:32:45,550
it was contributed by Akamai there are

00:32:43,870 --> 00:32:48,640
small of small enhancements which should

00:32:45,550 --> 00:32:51,580
we try to or API enhancements we also

00:32:48,640 --> 00:32:54,130
try to put into the corner or the later

00:32:51,580 --> 00:32:57,970
on back part to make more scalable

00:32:54,130 --> 00:32:59,740
software possible in user space they

00:32:57,970 --> 00:33:03,310
expect more enhancements which were like

00:32:59,740 --> 00:33:05,290
pushed last year now to make then it's

00:33:03,310 --> 00:33:07,180
now a way that you actually make more

00:33:05,290 --> 00:33:10,720
use of them exmoor survey that we

00:33:07,180 --> 00:33:12,700
actually bundled packets so we don't

00:33:10,720 --> 00:33:14,320
just process one packet when we receive

00:33:12,700 --> 00:33:16,810
it from the networking cut but we bundle

00:33:14,320 --> 00:33:19,420
packets and try to steer packets through

00:33:16,810 --> 00:33:22,900
the networking stack at the same time

00:33:19,420 --> 00:33:24,520
that helps abused that so they can make

00:33:22,900 --> 00:33:27,880
more better use of the instruction

00:33:24,520 --> 00:33:30,250
caches and also provides us discussion

00:33:27,880 --> 00:33:32,650
probabilities or that be for example can

00:33:30,250 --> 00:33:34,390
can do one routing look up and if we see

00:33:32,650 --> 00:33:36,130
like the second packet has the same

00:33:34,390 --> 00:33:38,110
destination IP address the same incoming

00:33:36,130 --> 00:33:39,520
interface we can just use that same

00:33:38,110 --> 00:33:42,880
routing look up for the second packet

00:33:39,520 --> 00:33:48,310
and so on so we try to do more caching

00:33:42,880 --> 00:33:49,750
memories memorization trick sir and yes

00:33:48,310 --> 00:33:51,400
but it's also working like on better

00:33:49,750 --> 00:33:53,050
memory allocation strategies they are

00:33:51,400 --> 00:33:55,720
basically also like in the direction we

00:33:53,050 --> 00:33:58,600
try to to steer more packets

00:33:55,720 --> 00:34:00,909
on the CPUs I have a passive you a

00:33:58,600 --> 00:34:02,770
locator batch than the memory

00:34:00,909 --> 00:34:04,900
allocations and try to possess as much

00:34:02,770 --> 00:34:09,179
as packets as possible on the same CPU

00:34:04,900 --> 00:34:13,810
so we can like have better CPU cache

00:34:09,179 --> 00:34:17,710
utilization and usage on the hopper side

00:34:13,810 --> 00:34:19,510
like I'm actually not sure how where

00:34:17,710 --> 00:34:24,220
this is going so what we see right now

00:34:19,510 --> 00:34:28,990
is that switch deaf and OBS will might

00:34:24,220 --> 00:34:30,760
become friends and that we finally see

00:34:28,990 --> 00:34:33,760
some way that that Harper can offload

00:34:30,760 --> 00:34:35,440
more and more and more from what the

00:34:33,760 --> 00:34:40,330
user space currently configures to the

00:34:35,440 --> 00:34:42,359
corner you're basically we will see if

00:34:40,330 --> 00:34:45,849
this will be realized I don't know yet

00:34:42,359 --> 00:34:48,159
eb PF and perv enhancements are probably

00:34:45,849 --> 00:34:51,090
happening this year so facebook is

00:34:48,159 --> 00:34:53,290
currently pushing a lot of money in

00:34:51,090 --> 00:34:55,210
developing introspection or

00:34:53,290 --> 00:34:58,480
observability features especially for

00:34:55,210 --> 00:35:00,700
tcp right now and the first tools are

00:34:58,480 --> 00:35:03,010
actually no available upstream in the

00:35:00,700 --> 00:35:07,480
recent he looks corner so you can now

00:35:03,010 --> 00:35:11,200
use ebf goat actually and add them to

00:35:07,480 --> 00:35:14,020
specific health points to collect data

00:35:11,200 --> 00:35:15,790
like you can build aggregations inside

00:35:14,020 --> 00:35:18,849
the colonel before that it was only

00:35:15,790 --> 00:35:21,339
possible to like export on a hit of a

00:35:18,849 --> 00:35:22,750
probe every data to user space and then

00:35:21,339 --> 00:35:24,820
do the aggregation there that was

00:35:22,750 --> 00:35:28,060
difficult because like it could you

00:35:24,820 --> 00:35:30,430
could easily export like gigabytes of

00:35:28,060 --> 00:35:32,140
performance data and now you can do that

00:35:30,430 --> 00:35:37,060
in the corner the car just comes up in

00:35:32,140 --> 00:35:38,710
an integer yeah and then discussions

00:35:37,060 --> 00:35:40,240
about protocol generic offloading so

00:35:38,710 --> 00:35:41,560
every one of you can design their own

00:35:40,240 --> 00:35:46,990
tunneling protocols which was pretty

00:35:41,560 --> 00:35:50,830
cool then a big point probably this year

00:35:46,990 --> 00:35:52,839
will be that there's a lot of complexity

00:35:50,830 --> 00:35:55,990
nowadays in the corner how to correctly

00:35:52,839 --> 00:35:58,060
configure that and so for example fedora

00:35:55,990 --> 00:36:02,020
already already already provides like

00:35:58,060 --> 00:36:04,240
tune which is an user space scripting

00:36:02,020 --> 00:36:07,060
solution which helps people to actually

00:36:04,240 --> 00:36:09,040
tune the corner correctly and we will

00:36:07,060 --> 00:36:09,580
need to push more and more options into

00:36:09,040 --> 00:36:12,040
tunes

00:36:09,580 --> 00:36:13,690
so the colonel after installation

00:36:12,040 --> 00:36:15,880
actually behaves like in a performant

00:36:13,690 --> 00:36:19,560
way for specific installations like what

00:36:15,880 --> 00:36:22,720
you want to have that's especially

00:36:19,560 --> 00:36:26,200
important for those layered products

00:36:22,720 --> 00:36:28,330
like OpenStack and open shift we're

00:36:26,200 --> 00:36:30,310
currently like default configurations

00:36:28,330 --> 00:36:33,390
are often very used and those don't

00:36:30,310 --> 00:36:37,240
provide the best performance actually

00:36:33,390 --> 00:36:38,860
yeah so in hopefully stuff should work

00:36:37,240 --> 00:36:43,080
better out of the box and doesn't need

00:36:38,860 --> 00:36:43,080
that much hand configuration in future

00:36:45,600 --> 00:36:51,550
so from from the specification side what

00:36:49,480 --> 00:36:55,120
might come up I don't think it will be

00:36:51,550 --> 00:36:57,550
ready this year's like the there will be

00:36:55,120 --> 00:36:59,920
much more flexibility also in the in the

00:36:57,550 --> 00:37:02,710
data path like how to describe flows and

00:36:59,920 --> 00:37:04,960
how what actions actually to take so we

00:37:02,710 --> 00:37:06,790
will see like maybe programming

00:37:04,960 --> 00:37:10,180
languages like p4 where you can specify

00:37:06,790 --> 00:37:13,540
how to actually match packets being

00:37:10,180 --> 00:37:16,750
integrated in OBS at some point with the

00:37:13,540 --> 00:37:18,940
help of this eb PF language that could

00:37:16,750 --> 00:37:21,460
happen and also like more more and more

00:37:18,940 --> 00:37:25,270
possibilities of what you do what you

00:37:21,460 --> 00:37:28,990
can do in actions so one one thing for

00:37:25,270 --> 00:37:30,580
example is like in service function

00:37:28,990 --> 00:37:32,740
chaining you are now able to actually

00:37:30,580 --> 00:37:34,450
put meter data on packets which then

00:37:32,740 --> 00:37:37,570
another obvious instance can read again

00:37:34,450 --> 00:37:39,610
and connect that connect up on that so

00:37:37,570 --> 00:37:42,180
you can actually switches can

00:37:39,610 --> 00:37:44,800
communicate over meter data in packets

00:37:42,180 --> 00:37:49,500
which each other and people can build

00:37:44,800 --> 00:37:49,500
things out of that as building blocks

00:37:49,710 --> 00:37:53,200
other things which will definitely come

00:37:51,820 --> 00:37:57,040
up this year's like internet of things

00:37:53,200 --> 00:37:59,410
so linux currently supports like two

00:37:57,040 --> 00:38:03,130
protocols mostly the one is 6lowpan

00:37:59,410 --> 00:38:07,540
which is like ipv6 based protocol which

00:38:03,130 --> 00:38:10,840
is built for networks which transmit on

00:38:07,540 --> 00:38:13,030
a very low band this very low bandwidth

00:38:10,840 --> 00:38:15,130
so they do have specific features like

00:38:13,030 --> 00:38:17,260
for example don't provide like the same

00:38:15,130 --> 00:38:19,930
kind of neighbor discovery but a very

00:38:17,260 --> 00:38:22,840
complex reduced once they have ipv6

00:38:19,930 --> 00:38:25,900
address compression and things like that

00:38:22,840 --> 00:38:28,450
and the news already supported over the

00:38:25,900 --> 00:38:30,630
I Triple E 800 to fifteen fourths than

00:38:28,450 --> 00:38:32,980
that which is also used as sick pea and

00:38:30,630 --> 00:38:37,900
on the other side we have like Bluetooth

00:38:32,980 --> 00:38:40,140
Low Energy which also might be used in

00:38:37,900 --> 00:38:42,400
the intent of things worth quite a lot

00:38:40,140 --> 00:38:44,920
they are preparing for worse a lot of

00:38:42,400 --> 00:38:46,930
profiles there we have basic current

00:38:44,920 --> 00:38:49,510
support already but lots of profiles

00:38:46,930 --> 00:38:52,570
will need to be added like for specific

00:38:49,510 --> 00:38:55,690
applications so you will find profiles

00:38:52,570 --> 00:38:57,400
for like those halves devices which

00:38:55,690 --> 00:39:00,340
specifically like monitor your heart

00:38:57,400 --> 00:39:02,680
rate and stuff like that another thing

00:39:00,340 --> 00:39:05,140
we actually decided to look into again

00:39:02,680 --> 00:39:08,110
is like Wi-Fi performance so with the

00:39:05,140 --> 00:39:11,440
reason advance of 811 AC like gigabit

00:39:08,110 --> 00:39:14,380
speeds now on Wi-Fi and that even going

00:39:11,440 --> 00:39:16,480
up we would also need to check that the

00:39:14,380 --> 00:39:18,700
Linux kernel can in future handle those

00:39:16,480 --> 00:39:21,640
pits some of the wireless drivers are

00:39:18,700 --> 00:39:23,500
already very very complex but actually

00:39:21,640 --> 00:39:26,350
don't implement all those features we

00:39:23,500 --> 00:39:28,390
have implemented in the high-end data

00:39:26,350 --> 00:39:31,870
center Nick's which you use in the data

00:39:28,390 --> 00:39:34,720
center so we might look after some of

00:39:31,870 --> 00:39:37,660
the wafer drivers and also check if we

00:39:34,720 --> 00:39:41,200
now can actually use those features for

00:39:37,660 --> 00:39:42,460
example in Wi-Fi I think that's enough

00:39:41,200 --> 00:39:45,160
that's why all this year hopefully

00:39:42,460 --> 00:39:47,440
you're on time and so if you have any

00:39:45,160 --> 00:39:48,880
questions for Russia or myself yeah

00:39:47,440 --> 00:39:51,250
we're happy to answer then I have one

00:39:48,880 --> 00:39:59,170
slide left oh that's okay you have the

00:39:51,250 --> 00:40:01,630
mic so sure so please join us you know

00:39:59,170 --> 00:40:04,270
if you are in this room that means that

00:40:01,630 --> 00:40:05,560
you are at least made the first step of

00:40:04,270 --> 00:40:08,170
trying to figure out what the heck is

00:40:05,560 --> 00:40:11,110
networking and what we are doing we I

00:40:08,170 --> 00:40:12,880
guarantee you it's the fastest path to

00:40:11,110 --> 00:40:16,540
become a celebrity rock star upstream

00:40:12,880 --> 00:40:18,130
and in rel Tim Burke added keynote about

00:40:16,540 --> 00:40:20,620
this morning about being a rock star

00:40:18,130 --> 00:40:22,990
yeah absolutely this is this is a

00:40:20,620 --> 00:40:25,780
workplace where not many souls have

00:40:22,990 --> 00:40:28,120
endeavored and if you think that packet

00:40:25,780 --> 00:40:31,090
movement is something that excites you

00:40:28,120 --> 00:40:33,220
join us we would love to have you help

00:40:31,090 --> 00:40:35,310
we have openings in our team it's a

00:40:33,220 --> 00:40:38,430
shameless plug for

00:40:35,310 --> 00:40:41,310
you're so hair trolls yes yeah anybody

00:40:38,430 --> 00:40:42,960
and I get into u1 things I like when I

00:40:41,310 --> 00:40:44,220
do an interviewer phone screen or

00:40:42,960 --> 00:40:46,530
someone they say or what will I be

00:40:44,220 --> 00:40:47,910
working on say I can tell you what

00:40:46,530 --> 00:40:49,770
you'll be working on in the next three

00:40:47,910 --> 00:40:52,410
to six months but beyond that if I told

00:40:49,770 --> 00:40:54,390
you anything I would be lying because

00:40:52,410 --> 00:40:56,640
the reason is honestly every three to

00:40:54,390 --> 00:40:59,670
six months it changes tremendously

00:40:56,640 --> 00:41:01,020
seriously in the last week even even

00:40:59,670 --> 00:41:04,350
before after we came back from the

00:41:01,020 --> 00:41:06,420
holidays this my world shifted 90

00:41:04,350 --> 00:41:08,190
degrees and I oh we all have to

00:41:06,420 --> 00:41:09,360
focus on different things things come

00:41:08,190 --> 00:41:11,850
out of the woodwork we have to adjust

00:41:09,360 --> 00:41:14,730
its really interesting stuff that we are

00:41:11,850 --> 00:41:16,740
working on so please join us there are

00:41:14,730 --> 00:41:19,440
other networking talks Friday Saturday

00:41:16,740 --> 00:41:21,750
Sunday please listen to those and give

00:41:19,440 --> 00:41:23,880
us feedback feedback for the other talks

00:41:21,750 --> 00:41:25,710
as well another thing which I just want

00:41:23,880 --> 00:41:28,020
to mention is like we also fluent this

00:41:25,710 --> 00:41:30,870
amazing work in the nft board so

00:41:28,020 --> 00:41:32,310
replacing the iptables stuff where I

00:41:30,870 --> 00:41:35,610
don't know if people remember like the

00:41:32,310 --> 00:41:38,250
diploma thesis about HIPEC ng where they

00:41:35,610 --> 00:41:40,500
try to algorithmically advance iptables

00:41:38,250 --> 00:41:42,690
to be really really fast and that is

00:41:40,500 --> 00:41:45,450
kind of happening now was n of T so if

00:41:42,690 --> 00:41:48,300
people want to know actually reduce like

00:41:45,450 --> 00:41:49,860
16,000 rules of ip tablets in 24 they

00:41:48,300 --> 00:41:52,520
should definitely look at in n n of T

00:41:49,860 --> 00:41:58,440
and program please make that happen

00:41:52,520 --> 00:42:00,300
absolutely questions comments there's a

00:41:58,440 --> 00:42:07,410
nice car fare for you for questions

00:42:00,300 --> 00:42:08,940
right no it cannot be that I explained

00:42:07,410 --> 00:42:11,430
everything so well that you don't have

00:42:08,940 --> 00:42:13,890
questions that means that you were

00:42:11,430 --> 00:42:20,940
checking your email

00:42:13,890 --> 00:42:23,610
rich is watching TV shows yeah okay so

00:42:20,940 --> 00:42:25,620
please feel free to ask us question on

00:42:23,610 --> 00:42:27,480
the side etc there are other networking

00:42:25,620 --> 00:42:29,840
talks as I said and thank you very much

00:42:27,480 --> 00:42:29,840

YouTube URL: https://www.youtube.com/watch?v=m2XjoQuID9k


