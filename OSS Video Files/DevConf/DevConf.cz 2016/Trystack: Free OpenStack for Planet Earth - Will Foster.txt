Title: Trystack: Free OpenStack for Planet Earth - Will Foster
Publication date: 2016-02-11
Playlist: DevConf.cz 2016
Description: 
	The OpenStack Foundation and several generous corporate sponsors (including Red Hat, Dell, Cisco, and NetApp) have
deployed TryStack.org, a free way for folks to learn more about OpenStack and it's capabilities. TryStack is a
public, production OpenStack instance and the maintainers have learned a great deal about maintenance, upgrades,
automation and gotchas around running a large public cloud on RDO OpenStack and RHEL.

In this talk we will cover: 
路 The history of Trystack 
路 Give insight into deployment architecture and underlying components
路 Demonstration of the various capabilities of TryStack
路 Talk about the roadmap of how TryStack is evolving with OpenStack 

You will leave this session with lots of free OpenStack and a greater 
appreciation for what it takes to maintain a frequently upgraded OpenStack 
deployment utilized by the general public.

Presenters: Will Foster and Alvaro Ortega
wfoster@redhat.com
aortega@redhat.com

http://trystack.org
http://superuser.openstack.org/articl...
http://hobo.house/2015/08/25/trystack...

Presentation: http://bit.ly/1KfPO0T
Captions: 
	00:00:17,760 --> 00:00:21,590
I'm significance if we're good

00:01:02,200 --> 00:01:07,350
my entire closet is full of these

00:01:04,720 --> 00:01:07,350
students

00:02:07,229 --> 00:02:10,229
right

00:02:14,460 --> 00:02:25,600
yeah alright let's get started so thanks

00:02:23,200 --> 00:02:28,090
everybody for coming to my talk I know

00:02:25,600 --> 00:02:29,230
it's a little late in the afternoon it's

00:02:28,090 --> 00:02:32,950
the last day of the conference so I

00:02:29,230 --> 00:02:35,770
really appreciate the turnout so let's

00:02:32,950 --> 00:02:40,350
uh let's get really serious and stop

00:02:35,770 --> 00:02:46,959
monkeying around and no I'm good thanks

00:02:40,350 --> 00:02:49,480
alright alright so there before I get

00:02:46,959 --> 00:02:53,080
started there was a little bit of a I

00:02:49,480 --> 00:02:55,120
guess some kind of a bet that if at

00:02:53,080 --> 00:02:57,220
least 16 people which I realize now is a

00:02:55,120 --> 00:03:01,570
very ridiculously low number of people

00:02:57,220 --> 00:03:03,100
retweet my tweet about my talk I would

00:03:01,570 --> 00:03:05,950
wear this monkey suit and almost

00:03:03,100 --> 00:03:10,690
immediately at least 20 or so people did

00:03:05,950 --> 00:03:13,360
it so I was here you go but uh I packed

00:03:10,690 --> 00:03:14,860
it to come here so I kind of wanted just

00:03:13,360 --> 00:03:17,890
to do this anyway so you know that would

00:03:14,860 --> 00:03:20,560
probably do it anyway so thanks for

00:03:17,890 --> 00:03:23,080
coming my name is will foster I work on

00:03:20,560 --> 00:03:25,299
the OpenStack rd infrastructure team at

00:03:23,080 --> 00:03:30,220
Red Hat and i'm here today to talk about

00:03:25,299 --> 00:03:31,420
try stack so what is try stack is let me

00:03:30,220 --> 00:03:34,030
get a raise of hands real quick is

00:03:31,420 --> 00:03:36,430
anyone here familiar with try stack is

00:03:34,030 --> 00:03:39,370
anyone used it yet or is it we're

00:03:36,430 --> 00:03:43,060
awesome so about half of you okay so try

00:03:39,370 --> 00:03:47,110
stack is a free open source it's a free

00:03:43,060 --> 00:03:49,180
public OpenStack sandbox that the

00:03:47,110 --> 00:03:51,510
purpose of this is basically to provide

00:03:49,180 --> 00:03:56,200
a free way for people to try OpenStack

00:03:51,510 --> 00:03:59,170
it started in 2011 and we sort of took

00:03:56,200 --> 00:04:02,739
it over and with the help of a lot of

00:03:59,170 --> 00:04:04,660
community sponsors like netapp Red Hat

00:04:02,739 --> 00:04:07,060
is well does a lot of administration

00:04:04,660 --> 00:04:08,709
there at cisco and the project is

00:04:07,060 --> 00:04:12,760
officially sponsored by the OpenStack

00:04:08,709 --> 00:04:15,880
foundation so it is a free place for you

00:04:12,760 --> 00:04:18,390
to try OpenStack without any of the

00:04:15,880 --> 00:04:20,530
complexity of installing it yourself or

00:04:18,390 --> 00:04:23,020
maintaining it or any of all that stuff

00:04:20,530 --> 00:04:25,260
you can just get on there and and go

00:04:23,020 --> 00:04:25,260
crazy

00:04:25,360 --> 00:04:32,360
there's a few reasons of why we have try

00:04:28,759 --> 00:04:34,340
stack so we wanted to provide a very

00:04:32,360 --> 00:04:37,360
easy way for people who weren't familiar

00:04:34,340 --> 00:04:41,449
with cloud who weren't familiar with

00:04:37,360 --> 00:04:44,509
OpenStack at the very least at all to

00:04:41,449 --> 00:04:49,129
just go and have a place to knock the

00:04:44,509 --> 00:04:50,750
kick the tires and get used to it we

00:04:49,129 --> 00:04:53,990
wanted to keep things as vanilla as

00:04:50,750 --> 00:04:55,719
possible with try sex so we don't have

00:04:53,990 --> 00:04:58,879
any sort of distribution markings

00:04:55,719 --> 00:05:00,800
everything runs on rdio so there's no

00:04:58,879 --> 00:05:03,530
branding at all it's it's basically what

00:05:00,800 --> 00:05:11,300
you get from upstream OpenStack you can

00:05:03,530 --> 00:05:15,259
experience on try stack so in 2015 we

00:05:11,300 --> 00:05:17,330
had a bit of a hairy situation where the

00:05:15,259 --> 00:05:18,650
original try stack infrastructure was

00:05:17,330 --> 00:05:21,110
hosted in the data center out in

00:05:18,650 --> 00:05:25,250
California and it mysteriously went off

00:05:21,110 --> 00:05:26,569
the air so it just disappeared so we

00:05:25,250 --> 00:05:29,569
first thought it was a network problem

00:05:26,569 --> 00:05:31,849
we investigated that turns out there's

00:05:29,569 --> 00:05:36,139
no outages it just simply disappeared

00:05:31,849 --> 00:05:38,389
and what happened was the ownership of

00:05:36,139 --> 00:05:40,159
tri stack as far as who pays the

00:05:38,389 --> 00:05:42,500
electricity bill who pays the Colo bill

00:05:40,159 --> 00:05:44,719
was transferring hands between Rackspace

00:05:42,500 --> 00:05:46,099
and OpenStack foundation and somewhere

00:05:44,719 --> 00:05:49,159
along the way someone forgot to pay the

00:05:46,099 --> 00:05:51,830
electricity bill so things just went

00:05:49,159 --> 00:05:54,949
away it put us in a very interesting

00:05:51,830 --> 00:05:57,169
predicament because we lost all of the

00:05:54,949 --> 00:05:58,909
stuff that we had there all of the

00:05:57,169 --> 00:06:00,710
tooling all of the data that wasn't in

00:05:58,909 --> 00:06:03,289
git repositories or weren't backed up

00:06:00,710 --> 00:06:05,750
anywhere off-site were gone so we very

00:06:03,289 --> 00:06:09,349
quickly had to scramble find a new home

00:06:05,750 --> 00:06:11,029
for tri stack buy all new gear put it in

00:06:09,349 --> 00:06:14,990
new data center and reinstall everything

00:06:11,029 --> 00:06:16,639
from scratch so that was a very very

00:06:14,990 --> 00:06:18,740
interesting time so that was around June

00:06:16,639 --> 00:06:21,669
timeframe and since then we've

00:06:18,740 --> 00:06:25,960
completely revamped the deployment and

00:06:21,669 --> 00:06:29,900
its back and its bigger better than ever

00:06:25,960 --> 00:06:34,490
so let's talk about where it is and how

00:06:29,900 --> 00:06:38,000
it works try stack has a / 24 public IP

00:06:34,490 --> 00:06:38,510
address so if you're a average person

00:06:38,000 --> 00:06:40,610
and you want to

00:06:38,510 --> 00:06:43,160
been up an application you want to test

00:06:40,610 --> 00:06:45,590
an app you want to just kind of kick the

00:06:43,160 --> 00:06:48,650
tires you get a lot at one public IP

00:06:45,590 --> 00:06:51,170
address we have about a half a rack of

00:06:48,650 --> 00:06:53,510
servers there of dell servers donated to

00:06:51,170 --> 00:06:56,300
us for this purpose and we have a netapp

00:06:53,510 --> 00:06:59,420
array as well donated by netapp and a

00:06:56,300 --> 00:07:01,580
couple of cisco switches so you know we

00:06:59,420 --> 00:07:05,000
have a very minimal compute count whoa

00:07:01,580 --> 00:07:07,550
how about 144 V CPUs right under about

00:07:05,000 --> 00:07:09,890
900 gigs of memory so the resources are

00:07:07,550 --> 00:07:12,050
very finite so we can only accommodate

00:07:09,890 --> 00:07:15,020
you know very small amount of people at

00:07:12,050 --> 00:07:17,120
once which creates a challenge for us to

00:07:15,020 --> 00:07:22,550
have an environment that everyone gets a

00:07:17,120 --> 00:07:26,840
chance to try it out so here's a picture

00:07:22,550 --> 00:07:29,420
of the tri stack data center a typical

00:07:26,840 --> 00:07:33,650
data center here there's really nothing

00:07:29,420 --> 00:07:37,130
out of the ordinary that I can see these

00:07:33,650 --> 00:07:39,320
are the data center cats no one really

00:07:37,130 --> 00:07:42,350
knows how they got there they've just

00:07:39,320 --> 00:07:44,690
kind of always been there I think

00:07:42,350 --> 00:07:46,250
they're multiplying because every time I

00:07:44,690 --> 00:07:48,380
go back there there's more that show up

00:07:46,250 --> 00:07:51,620
I don't really question it they just

00:07:48,380 --> 00:07:59,180
kind of hang out I think one of them fix

00:07:51,620 --> 00:08:01,220
Neutron once I don't know so try stack

00:07:59,180 --> 00:08:02,990
so so what do people use trisect for and

00:08:01,220 --> 00:08:06,610
what do people in general use OpenStack

00:08:02,990 --> 00:08:09,020
for well there's a ton of uses for it

00:08:06,610 --> 00:08:10,910
try stack in particular some of the

00:08:09,020 --> 00:08:13,940
major ones are def stacked so we'll get

00:08:10,910 --> 00:08:15,560
people that want to quickly spin up an

00:08:13,940 --> 00:08:17,810
OpenStack environment and then test

00:08:15,560 --> 00:08:21,290
actual code against it this might be

00:08:17,810 --> 00:08:22,850
patches this might be sandbox type code

00:08:21,290 --> 00:08:24,680
that they might plan on contributing

00:08:22,850 --> 00:08:26,900
later upstream so we provide

00:08:24,680 --> 00:08:28,820
functionality for that we don't really

00:08:26,900 --> 00:08:30,710
have any limits on what you want to use

00:08:28,820 --> 00:08:33,710
it for as long as it's for educational

00:08:30,710 --> 00:08:36,919
purposes and it's not illegal we have a

00:08:33,710 --> 00:08:39,710
good use case in education there's a

00:08:36,919 --> 00:08:41,930
university in Slovenia who their

00:08:39,710 --> 00:08:44,000
computer science department is teaching

00:08:41,930 --> 00:08:46,580
a course on cloud computing the

00:08:44,000 --> 00:08:48,740
professor contacted us a few months ago

00:08:46,580 --> 00:08:50,960
and said hey is it okay if I sign up my

00:08:48,740 --> 00:08:51,960
whole class and I use it as part of my

00:08:50,960 --> 00:08:54,810
curriculum

00:08:51,960 --> 00:08:57,210
sure awesome so this class in Slovenia

00:08:54,810 --> 00:08:59,390
at this university now they're cloud

00:08:57,210 --> 00:09:02,040
computing class is using try stack for

00:08:59,390 --> 00:09:05,310
basically hands-on learning that's

00:09:02,040 --> 00:09:08,130
another good use case a lot of folks use

00:09:05,310 --> 00:09:10,340
try stack for cloud apps for testing

00:09:08,130 --> 00:09:13,380
applications for testing functionality

00:09:10,340 --> 00:09:18,030
the RDO project runs some of their

00:09:13,380 --> 00:09:20,370
external see i on it as well and some

00:09:18,030 --> 00:09:22,560
manila development also happens on the

00:09:20,370 --> 00:09:26,250
net upside so ben schwartz lander who's

00:09:22,560 --> 00:09:27,900
the manila PTL also does development on

00:09:26,250 --> 00:09:31,140
the the net up drivers the very metal

00:09:27,900 --> 00:09:33,330
drivers for ironic in for the netapp

00:09:31,140 --> 00:09:35,460
infrastructure so those are just a

00:09:33,330 --> 00:09:36,900
couple use cases but we're seeing even

00:09:35,460 --> 00:09:39,300
more and more you know interesting

00:09:36,900 --> 00:09:42,510
things people spinning up a very quick

00:09:39,300 --> 00:09:44,580
blog just a test functionality or people

00:09:42,510 --> 00:09:47,450
spinning up etherpad or something like

00:09:44,580 --> 00:09:51,270
that and then you know tearing it down

00:09:47,450 --> 00:09:55,320
but with all these use cases demand is

00:09:51,270 --> 00:09:56,820
extremely high so I went back as of a

00:09:55,320 --> 00:09:58,230
couple days ago and just kind of

00:09:56,820 --> 00:10:02,190
compiled some of the metrics some of the

00:09:58,230 --> 00:10:04,850
usage metrics for try stack over time

00:10:02,190 --> 00:10:09,360
we've had about twenty two thousand

00:10:04,850 --> 00:10:12,230
users total since its inception it's

00:10:09,360 --> 00:10:15,540
quite a bit for for a public cloud

00:10:12,230 --> 00:10:19,920
especially one of this size current

00:10:15,540 --> 00:10:22,700
active users is about 3,300 right now on

00:10:19,920 --> 00:10:27,260
average we see about 300 instance one up

00:10:22,700 --> 00:10:31,710
every day more or less and that's about

00:10:27,260 --> 00:10:32,790
7,500 a month and we track all this with

00:10:31,710 --> 00:10:34,710
some tool in which I'm going to talk

00:10:32,790 --> 00:10:36,930
about it a little bit and then we have

00:10:34,710 --> 00:10:38,610
about 800 active networks so this is

00:10:36,930 --> 00:10:42,900
kind of a snapshot as of a couple days

00:10:38,610 --> 00:10:44,670
ago of the active usage now it's

00:10:42,900 --> 00:10:51,180
important to note

00:10:44,670 --> 00:10:59,640
well then I'm not very good at

00:10:51,180 --> 00:11:02,250
microphones this okay it's important to

00:10:59,640 --> 00:11:05,400
note that occasionally we completely

00:11:02,250 --> 00:11:07,620
white try sec anytime that we upgrade to

00:11:05,400 --> 00:11:09,690
a new version of OpenStack we wipe

00:11:07,620 --> 00:11:12,300
everything but if you've ever created an

00:11:09,690 --> 00:11:14,280
account there then when you log back in

00:11:12,300 --> 00:11:15,930
the way that the authentication works is

00:11:14,280 --> 00:11:18,360
that if your account isn't already

00:11:15,930 --> 00:11:19,950
active it automatically recreate sit so

00:11:18,360 --> 00:11:24,120
that's where we get that 22,000 number

00:11:19,950 --> 00:11:27,090
that's from 2011 and forward a 3000

00:11:24,120 --> 00:11:29,400
number is anyone who's used it actively

00:11:27,090 --> 00:11:34,620
since we last installed the current

00:11:29,400 --> 00:11:38,250
version so kind of illustrating this in

00:11:34,620 --> 00:11:39,890
more of a dashboard view this is griffin

00:11:38,250 --> 00:11:43,800
ax which is one of the tools that we use

00:11:39,890 --> 00:11:46,110
it lets us kind of visualize various

00:11:43,800 --> 00:11:48,270
metrics that are happening on the try

00:11:46,110 --> 00:11:51,120
stack so we can kind of see you know the

00:11:48,270 --> 00:11:53,610
number of active tenants here free

00:11:51,120 --> 00:11:55,620
memory really anything that we can

00:11:53,610 --> 00:11:57,180
collect with collect d which is another

00:11:55,620 --> 00:11:59,030
tool that we use we can kind of

00:11:57,180 --> 00:12:02,460
visualize here it's very useful for

00:11:59,030 --> 00:12:03,540
admin teams to just have a quick glance

00:12:02,460 --> 00:12:09,660
at what's happening in your

00:12:03,540 --> 00:12:11,220
infrastructure so on to tooling so when

00:12:09,660 --> 00:12:14,100
you when you install OpenStack when you

00:12:11,220 --> 00:12:15,570
set things up the fun just begins its

00:12:14,100 --> 00:12:18,590
you're not done you're just getting

00:12:15,570 --> 00:12:21,780
started there's a tremendous amount of

00:12:18,590 --> 00:12:23,520
cleanup of maintenance that needs to be

00:12:21,780 --> 00:12:25,320
done of operational tooling that you

00:12:23,520 --> 00:12:26,610
want to put in place so that you can

00:12:25,320 --> 00:12:28,350
manage the environment with a minimal

00:12:26,610 --> 00:12:31,290
number of people and you can do so

00:12:28,350 --> 00:12:34,200
intelligently and you can do so in as

00:12:31,290 --> 00:12:38,850
automated as a fashion as possible so we

00:12:34,200 --> 00:12:40,530
use some pretty standard tools right off

00:12:38,850 --> 00:12:42,930
the bat config management it's extremely

00:12:40,530 --> 00:12:45,540
important right now we use puppet for

00:12:42,930 --> 00:12:48,990
config management we are looking at

00:12:45,540 --> 00:12:52,650
using ansible as well so we use kind of

00:12:48,990 --> 00:12:56,250
a hybrid approach that we use ansible to

00:12:52,650 --> 00:12:57,930
push manifests so how many people are

00:12:56,250 --> 00:12:58,529
familiar with puppet here before i get

00:12:57,930 --> 00:13:02,069
to in the weeds

00:12:58,529 --> 00:13:04,649
okay awesome about half people so we use

00:13:02,069 --> 00:13:06,420
standalone puppet manifests we've got a

00:13:04,649 --> 00:13:09,720
lot of resources put into those we got a

00:13:06,420 --> 00:13:11,970
lot of I don't want to say debt but

00:13:09,720 --> 00:13:14,279
we've we've got a lot of mindshare put

00:13:11,970 --> 00:13:16,350
into public and figs to automate things

00:13:14,279 --> 00:13:18,930
we don't want to throw that out we want

00:13:16,350 --> 00:13:20,639
to reuse that but we don't want the

00:13:18,930 --> 00:13:23,579
complexity of having a client-server

00:13:20,639 --> 00:13:25,680
model with puppet masters and clients so

00:13:23,579 --> 00:13:28,259
we use standalone puppet manifests but

00:13:25,680 --> 00:13:30,230
we use ansible to kind of push those out

00:13:28,259 --> 00:13:33,600
as kind of to be the delivery vehicle

00:13:30,230 --> 00:13:35,509
those run and then they make the the

00:13:33,600 --> 00:13:39,540
different servers inside a try stack

00:13:35,509 --> 00:13:41,490
appear as they need to be they end the

00:13:39,540 --> 00:13:43,860
state that we intend them to be for

00:13:41,490 --> 00:13:45,899
things to operate we're investigating

00:13:43,860 --> 00:13:47,579
some other ways to do it possibly using

00:13:45,899 --> 00:13:50,129
heat templates in the future but right

00:13:47,579 --> 00:13:53,879
now we're pretty much all puppet that's

00:13:50,129 --> 00:13:55,439
the config management part for graphing

00:13:53,879 --> 00:13:57,949
and trending like we just saw the

00:13:55,439 --> 00:14:00,959
dashboard here we use grow fauna and

00:13:57,949 --> 00:14:04,980
graphite with collect D which runs on

00:14:00,959 --> 00:14:08,100
each of those hosts for logging and

00:14:04,980 --> 00:14:09,959
aggregation because we definitely don't

00:14:08,100 --> 00:14:12,269
want to be in the business of SS aging

00:14:09,959 --> 00:14:13,649
to individual servers and kind of

00:14:12,269 --> 00:14:15,059
rooting through log files when something

00:14:13,649 --> 00:14:17,970
goes wrong we want to aggregate those in

00:14:15,059 --> 00:14:20,899
one location we use elk elk stack so

00:14:17,970 --> 00:14:23,899
elastic search log stash and cabana and

00:14:20,899 --> 00:14:26,309
then lastly we use nagios for monitoring

00:14:23,899 --> 00:14:28,199
now there's a lot of monitoring tools

00:14:26,309 --> 00:14:30,959
out there there's many many good ones

00:14:28,199 --> 00:14:33,569
zabbix is very popular I believe the

00:14:30,959 --> 00:14:35,459
open shift guys use that since sue is

00:14:33,569 --> 00:14:37,889
another up-and-comer which looks quite

00:14:35,459 --> 00:14:39,329
well but we we chose nagios because

00:14:37,889 --> 00:14:41,910
we're comfortable with it it's something

00:14:39,329 --> 00:14:43,829
that we've used for decades it's got a

00:14:41,910 --> 00:14:46,439
big community behind it a lot of plugins

00:14:43,829 --> 00:14:48,000
and for what we do with OpenStack it's

00:14:46,439 --> 00:14:50,819
extremely easy for us to write custom

00:14:48,000 --> 00:14:52,290
plugins some of the functionality that

00:14:50,819 --> 00:14:54,839
you want to monitor with OpenStack is

00:14:52,290 --> 00:14:56,160
not going to come out of the box you're

00:14:54,839 --> 00:14:58,350
going to need to tailor that yourself

00:14:56,160 --> 00:15:02,459
it's still very much kind of a DUI

00:14:58,350 --> 00:15:05,129
excuse me DIY situation and I'm going to

00:15:02,459 --> 00:15:08,370
get into the nagios bits here in a

00:15:05,129 --> 00:15:11,069
second so this is as ugly as it is and

00:15:08,370 --> 00:15:11,930
it's written in perl so don't don't hold

00:15:11,069 --> 00:15:14,640
it back

00:15:11,930 --> 00:15:16,550
this is our nagios dashboard now we've

00:15:14,640 --> 00:15:18,960
extended this this is publicly viewable

00:15:16,550 --> 00:15:20,460
anybody can hit this and see what's

00:15:18,960 --> 00:15:24,240
going on with try stack at any point in

00:15:20,460 --> 00:15:26,460
time but I want to just point out to one

00:15:24,240 --> 00:15:30,900
check here if you see about halfway down

00:15:26,460 --> 00:15:32,520
the page 09 floating IP allocation we

00:15:30,900 --> 00:15:37,020
this is an example of a custom check

00:15:32,520 --> 00:15:39,840
that we this one single check will tell

00:15:37,020 --> 00:15:42,990
us if the entire health of the OpenStack

00:15:39,840 --> 00:15:45,870
cluster is operating as it should so we

00:15:42,990 --> 00:15:48,060
have a check that goes in it spins up an

00:15:45,870 --> 00:15:50,460
OpenStack instance so it tests all the

00:15:48,060 --> 00:15:53,790
Nova functionality it attaches a

00:15:50,460 --> 00:15:55,470
floating IP address it pings the

00:15:53,790 --> 00:15:58,410
floating IP address and it gets a

00:15:55,470 --> 00:16:00,750
response it then ssh a--'s into the

00:15:58,410 --> 00:16:03,570
instance and runs an arbitrary command

00:16:00,750 --> 00:16:07,140
and gathers the result of that command

00:16:03,570 --> 00:16:08,520
and then records it it then every 15

00:16:07,140 --> 00:16:10,650
minutes it does this and it tears down

00:16:08,520 --> 00:16:13,320
that instance now the point of this is

00:16:10,650 --> 00:16:15,450
that through that process just about

00:16:13,320 --> 00:16:17,820
every piece of core OpenStack

00:16:15,450 --> 00:16:20,910
functionality has tested if any of those

00:16:17,820 --> 00:16:24,300
fail at all it alerts and if it alerts

00:16:20,910 --> 00:16:26,250
then we get pings on IRC and people

00:16:24,300 --> 00:16:29,460
don't like to see things spam on screens

00:16:26,250 --> 00:16:31,020
so they let us know very quickly so

00:16:29,460 --> 00:16:32,400
that's just kind of a small example of

00:16:31,020 --> 00:16:35,400
some custom tooling that we've had to

00:16:32,400 --> 00:16:38,210
put together to encompass health checks

00:16:35,400 --> 00:16:40,500
to make sure things that work correctly

00:16:38,210 --> 00:16:42,540
the reason I point this out to is that

00:16:40,500 --> 00:16:44,820
you might be able to ping an instance

00:16:42,540 --> 00:16:46,680
you might be able to bring up a vm you

00:16:44,820 --> 00:16:48,480
might be able to ping it but you might

00:16:46,680 --> 00:16:51,000
not be able to ssh to it because maybe

00:16:48,480 --> 00:16:52,530
the metadata service is down or various

00:16:51,000 --> 00:16:54,780
parts might not work is you expect them

00:16:52,530 --> 00:16:57,840
to so this is just and we're not there

00:16:54,780 --> 00:17:00,300
yet but this is kind of where we want to

00:16:57,840 --> 00:17:02,370
get full coverage on every single

00:17:00,300 --> 00:17:04,640
scenario of every type of failure that

00:17:02,370 --> 00:17:10,709
we would see in a production OpenStack

00:17:04,640 --> 00:17:12,180
implementation so housecleaning when you

00:17:10,709 --> 00:17:14,699
install OpenStack when you set it up

00:17:12,180 --> 00:17:16,290
your you're just getting started so with

00:17:14,699 --> 00:17:18,329
try stack we got a lot of people that

00:17:16,290 --> 00:17:20,459
don't want to use the service we get

00:17:18,329 --> 00:17:22,620
dozens and dozens or requests every day

00:17:20,459 --> 00:17:24,929
of folks that want to be added to it

00:17:22,620 --> 00:17:26,639
that want to check it out

00:17:24,929 --> 00:17:28,259
we have hundreds and hundreds of

00:17:26,639 --> 00:17:29,970
instances that get spawned every day and

00:17:28,259 --> 00:17:33,450
we have a very finite amount of

00:17:29,970 --> 00:17:35,749
resources you know with the / 24 we only

00:17:33,450 --> 00:17:38,340
have about 250 usable IP addresses and

00:17:35,749 --> 00:17:40,649
we have 300 instances it's born every

00:17:38,340 --> 00:17:42,210
day we're cutting it pretty close so

00:17:40,649 --> 00:17:44,549
there's a certain amount of

00:17:42,210 --> 00:17:46,139
housecleaning that has to happen for you

00:17:44,549 --> 00:17:48,869
to ensure that people have resources

00:17:46,139 --> 00:17:50,369
that it has fair distribution and that

00:17:48,869 --> 00:17:53,940
people that are interested in OpenStack

00:17:50,369 --> 00:17:55,950
still have a place to try it out so to

00:17:53,940 --> 00:17:58,409
that end we have also tooling that we've

00:17:55,950 --> 00:17:59,999
put together that go through and coal

00:17:58,409 --> 00:18:02,669
resources after a certain amount of time

00:17:59,999 --> 00:18:06,539
so floating IP addresses for example are

00:18:02,669 --> 00:18:09,110
purged every 12 hours we have cinder

00:18:06,539 --> 00:18:12,029
volumes that are deleted every 48 hours

00:18:09,110 --> 00:18:14,309
the actual instances themselves the VMS

00:18:12,029 --> 00:18:17,399
are deleted every every day every 24

00:18:14,309 --> 00:18:20,279
hours as well and then we clear the

00:18:17,399 --> 00:18:22,830
gateways every 24 hours and we've

00:18:20,279 --> 00:18:24,779
adjusted this over time we've depending

00:18:22,830 --> 00:18:26,519
on the demand how many people want to

00:18:24,779 --> 00:18:29,070
use a service we might extend those

00:18:26,519 --> 00:18:31,499
checks so we might say okay we're going

00:18:29,070 --> 00:18:33,600
to let people have a public-facing IP

00:18:31,499 --> 00:18:35,730
address have their OpenStack instance

00:18:33,600 --> 00:18:37,409
running they can do it for an entire day

00:18:35,730 --> 00:18:39,269
or they can do it for two days but as

00:18:37,409 --> 00:18:41,639
demand is risen and the amount of

00:18:39,269 --> 00:18:44,039
hardware has not risen we've had to kind

00:18:41,639 --> 00:18:48,629
of shrink and grow what we allow people

00:18:44,039 --> 00:18:50,580
to use so here's an example again this

00:18:48,629 --> 00:18:52,740
is the Griffin a dashboard and you can

00:18:50,580 --> 00:18:55,080
see this is when the coaling happens

00:18:52,740 --> 00:18:57,659
this is when these tools far off for us

00:18:55,080 --> 00:18:59,369
to reclaim resources and we're always

00:18:57,659 --> 00:19:01,499
playing a very dangerous game because

00:18:59,369 --> 00:19:04,350
we're always getting very close to max

00:19:01,499 --> 00:19:06,480
capacity before this tooling fires off

00:19:04,350 --> 00:19:08,159
and cleans the slate for other people to

00:19:06,480 --> 00:19:11,279
come in and try things so you can see

00:19:08,159 --> 00:19:13,289
very clear patterns here of usage and

00:19:11,279 --> 00:19:14,970
usage and usage creation instances

00:19:13,289 --> 00:19:17,340
spinning up ip's flying around

00:19:14,970 --> 00:19:20,249
everywhere into a certain point when it

00:19:17,340 --> 00:19:22,190
becomes time to reclaim things we cut it

00:19:20,249 --> 00:19:25,049
all down and then they grow up again and

00:19:22,190 --> 00:19:26,369
this cycle rinses and repeats itself and

00:19:25,049 --> 00:19:27,360
it's kind of an ongoing battle it's a

00:19:26,369 --> 00:19:30,119
challenge from an operational

00:19:27,360 --> 00:19:33,059
perspective because you only have you

00:19:30,119 --> 00:19:34,830
know 12 13 servers right now and you

00:19:33,059 --> 00:19:36,450
have hundreds and hundreds and hundreds

00:19:34,830 --> 00:19:38,600
of people that daily want to use the

00:19:36,450 --> 00:19:38,600
service

00:19:39,960 --> 00:19:45,580
so further automation and back again

00:19:44,049 --> 00:19:47,019
just to kind of running running an

00:19:45,580 --> 00:19:49,779
openstack cloud with a very small amount

00:19:47,019 --> 00:19:51,999
of people is you need to automate as

00:19:49,779 --> 00:19:53,559
much stuff as possible if you have a

00:19:51,999 --> 00:19:55,869
very small team especially if you're

00:19:53,559 --> 00:19:57,190
geographically distributed you don't

00:19:55,869 --> 00:19:58,899
ever want to be doing something more

00:19:57,190 --> 00:20:00,789
than once especially doing things

00:19:58,899 --> 00:20:03,340
manually so there's some additional

00:20:00,789 --> 00:20:04,840
automation we put in place the first

00:20:03,340 --> 00:20:08,080
major thing that we've done recently is

00:20:04,840 --> 00:20:10,299
the Tri stack website content so if you

00:20:08,080 --> 00:20:12,249
go to try sucked out of work you'll see

00:20:10,299 --> 00:20:13,840
the the CSS content there you'll see

00:20:12,249 --> 00:20:16,179
kind of the login button where you can

00:20:13,840 --> 00:20:18,850
get into horizon start messing with your

00:20:16,179 --> 00:20:21,309
OpenStack instances that website content

00:20:18,850 --> 00:20:23,889
is managed the exact same way that code

00:20:21,309 --> 00:20:28,179
and OpenStack is managed so that that

00:20:23,889 --> 00:20:29,860
CSS content is in a github repo if I

00:20:28,179 --> 00:20:31,539
wanted to make a change to it or anyone

00:20:29,860 --> 00:20:33,580
else wanted to make a change to it they

00:20:31,539 --> 00:20:35,830
would clone that repo they would submit

00:20:33,580 --> 00:20:39,159
a get review that would go through tests

00:20:35,830 --> 00:20:40,570
and see I that then that would go

00:20:39,159 --> 00:20:43,090
through Garrett and people would vote

00:20:40,570 --> 00:20:44,830
and you know if people like to change

00:20:43,090 --> 00:20:46,350
then eventually it would get merged and

00:20:44,830 --> 00:20:49,720
then it would just automatically appear

00:20:46,350 --> 00:20:51,580
so it's kind of a trivial thing website

00:20:49,720 --> 00:20:55,840
content but we wanted to stay as close

00:20:51,580 --> 00:21:00,759
as possible to how upstream OpenStack

00:20:55,840 --> 00:21:03,070
manages its own code repositories the

00:21:00,759 --> 00:21:04,600
other thing that is useful so far and

00:21:03,070 --> 00:21:07,409
this is fairly new advancement is we've

00:21:04,600 --> 00:21:10,690
tied in the nagios alerting to IRC bot

00:21:07,409 --> 00:21:13,240
to have a little bit more transparency

00:21:10,690 --> 00:21:15,460
on when things go wrong so when there's

00:21:13,240 --> 00:21:18,279
an alert when one of these checks fail

00:21:15,460 --> 00:21:21,730
it will broadcast and public IRC and

00:21:18,279 --> 00:21:23,200
also broadcast to us directly so that we

00:21:21,730 --> 00:21:24,129
have a lot of coverage and people just

00:21:23,200 --> 00:21:27,490
know what the state of the environment

00:21:24,129 --> 00:21:32,820
is it's it's just of adamant importance

00:21:27,490 --> 00:21:37,059
to be as transparent as possible so

00:21:32,820 --> 00:21:38,350
challenges cloud is not easy you know

00:21:37,059 --> 00:21:40,480
there's there's a lot of stuff to do

00:21:38,350 --> 00:21:41,679
with it there's a lot of post work

00:21:40,480 --> 00:21:44,139
there's a lot of tooling a lot of

00:21:41,679 --> 00:21:46,659
automation that needs to happen demand

00:21:44,139 --> 00:21:49,419
and growth dozens of people try to sign

00:21:46,659 --> 00:21:51,159
up every day the account approval

00:21:49,419 --> 00:21:51,820
process is done manually we try to

00:21:51,159 --> 00:21:53,800
determine that

00:21:51,820 --> 00:21:55,930
someone's a human before they can join

00:21:53,800 --> 00:22:00,490
but other than that everyone's free to

00:21:55,930 --> 00:22:02,470
check it out security with any sort of

00:22:00,490 --> 00:22:04,330
public facing service whether it's a

00:22:02,470 --> 00:22:06,820
cloud-based service or even just a web

00:22:04,330 --> 00:22:08,320
server their security is always a

00:22:06,820 --> 00:22:12,820
challenge you see some very very

00:22:08,320 --> 00:22:16,360
interesting usages of of the service so

00:22:12,820 --> 00:22:19,120
we do have tooling in place to say tell

00:22:16,360 --> 00:22:22,060
me who owns this floating IP address at

00:22:19,120 --> 00:22:23,830
this time back in history so we have an

00:22:22,060 --> 00:22:26,110
audit trail now this functionality

00:22:23,830 --> 00:22:28,810
doesn't come with OpenStack you can't

00:22:26,110 --> 00:22:31,990
with the default tools that ship with

00:22:28,810 --> 00:22:34,000
OpenStack determine a point in time of

00:22:31,990 --> 00:22:35,740
who had a certain IP address unless you

00:22:34,000 --> 00:22:37,810
record it so we have tooling that will

00:22:35,740 --> 00:22:39,640
do all this for us and very quickly tell

00:22:37,810 --> 00:22:41,710
us if someone's kind of breaking the

00:22:39,640 --> 00:22:45,010
rules are breaking the the Terms of

00:22:41,710 --> 00:22:47,410
Service who it is and then we can hammer

00:22:45,010 --> 00:22:49,570
bantam we don't want to do that but

00:22:47,410 --> 00:22:51,490
people have to follow the rules we've

00:22:49,570 --> 00:22:56,770
had a couple of cases one in particular

00:22:51,490 --> 00:23:06,970
where a lad was torrenting a Justin

00:22:56,770 --> 00:23:10,270
Bieber album now I I'm a strong believer

00:23:06,970 --> 00:23:11,830
that people should be able to listen to

00:23:10,270 --> 00:23:13,800
whatever music they want but you

00:23:11,830 --> 00:23:16,420
shouldn't copyright music on a on a

00:23:13,800 --> 00:23:19,930
public-facing service especially one

00:23:16,420 --> 00:23:21,910
that's for free rationing of resources

00:23:19,930 --> 00:23:22,990
again it's just the same theme we have

00:23:21,910 --> 00:23:25,570
more people that want to use a service

00:23:22,990 --> 00:23:29,230
then we have resources to to give out

00:23:25,570 --> 00:23:31,540
and one of our biggest issues now this

00:23:29,230 --> 00:23:34,780
is kind of our our main focus with try

00:23:31,540 --> 00:23:37,420
stack is the off system so there was a

00:23:34,780 --> 00:23:39,730
historical decision made back in 2011

00:23:37,420 --> 00:23:43,630
that the authentication mechanism for

00:23:39,730 --> 00:23:45,130
try stack was Facebook so who is a fan

00:23:43,630 --> 00:23:47,860
of Facebook here who has a Facebook

00:23:45,130 --> 00:23:49,330
account raise your hand yeah probably

00:23:47,860 --> 00:23:52,750
everybody and if you don't have one

00:23:49,330 --> 00:23:54,130
guess what you have one because they

00:23:52,750 --> 00:23:56,640
just make them for you even if you don't

00:23:54,130 --> 00:24:00,130
even if you don't have one you got one

00:23:56,640 --> 00:24:03,190
but Facebook was the at the time it was

00:24:00,130 --> 00:24:05,560
the choice for authentication that they

00:24:03,190 --> 00:24:09,280
have an API and off API

00:24:05,560 --> 00:24:11,770
that ties in 20 auth you have a facebook

00:24:09,280 --> 00:24:14,740
account you join the tri stack facebook

00:24:11,770 --> 00:24:16,780
group now you can log into horizon on

00:24:14,740 --> 00:24:19,720
try stack that is the number one

00:24:16,780 --> 00:24:23,790
complaint that we get with try stack is

00:24:19,720 --> 00:24:23,790
when it's Facebook going to go away oh

00:24:23,880 --> 00:24:29,110
its historical and and I'll get to that

00:24:26,320 --> 00:24:32,560
so in the meantime what we've done is

00:24:29,110 --> 00:24:35,410
we've allowed api access if you login to

00:24:32,560 --> 00:24:37,120
try stack once you can retrieve your API

00:24:35,410 --> 00:24:38,380
credentials and you never have to go

00:24:37,120 --> 00:24:40,870
through facebook again you can login

00:24:38,380 --> 00:24:43,180
directly to try stack with the CLI or

00:24:40,870 --> 00:24:46,150
with horizon now we are in the process

00:24:43,180 --> 00:24:48,400
of moving to OpenStack ID which is kind

00:24:46,150 --> 00:24:50,320
of the end-all be-all authentication

00:24:48,400 --> 00:24:53,230
mechanism for OpenStack so if you have

00:24:50,320 --> 00:24:55,600
an OpenStack foundation account now you

00:24:53,230 --> 00:24:58,690
can log directly into try stack no if

00:24:55,600 --> 00:25:00,700
ands or buts just directly in there we

00:24:58,690 --> 00:25:02,110
don't have plans of decommissioning the

00:25:00,700 --> 00:25:04,030
Facebook off we're just going to let it

00:25:02,110 --> 00:25:06,250
kind of be a secondary because there's

00:25:04,030 --> 00:25:09,160
still 22,000 people in that community

00:25:06,250 --> 00:25:10,540
and it's been quite helpful there's a

00:25:09,160 --> 00:25:12,280
lot of folks that answer questions in

00:25:10,540 --> 00:25:15,820
there there's a pretty vibrant community

00:25:12,280 --> 00:25:17,410
it is Facebook for what it is but that's

00:25:15,820 --> 00:25:20,140
not something that we want to scrap but

00:25:17,410 --> 00:25:21,340
it will not be the primary off mechanism

00:25:20,140 --> 00:25:22,990
and that's something we're actively

00:25:21,340 --> 00:25:24,640
working on that's about number one on

00:25:22,990 --> 00:25:27,580
the priority list is getting that taken

00:25:24,640 --> 00:25:31,540
care of that's why it's added here to

00:25:27,580 --> 00:25:34,900
the challenges so more improvements we

00:25:31,540 --> 00:25:35,890
talked about OpenStack ID another thing

00:25:34,900 --> 00:25:38,500
that we need to work on is better

00:25:35,890 --> 00:25:40,870
monitoring your never truly done with

00:25:38,500 --> 00:25:42,460
monitoring there's always some area that

00:25:40,870 --> 00:25:44,530
you don't have test coverage that you

00:25:42,460 --> 00:25:46,630
don't something's going to break two

00:25:44,530 --> 00:25:50,080
days ago when I was getting the most

00:25:46,630 --> 00:25:52,630
up-to-date metrics for the usage the

00:25:50,080 --> 00:25:54,400
graph on a sub system was down and a

00:25:52,630 --> 00:25:58,720
portion of collect d wasn't reporting in

00:25:54,400 --> 00:26:01,450
now nagios services were running the

00:25:58,720 --> 00:26:03,370
checks were passing but physically it

00:26:01,450 --> 00:26:06,130
wasn't writing data so that's another

00:26:03,370 --> 00:26:09,310
little edge case that we just didn't

00:26:06,130 --> 00:26:11,050
anticipate but it resulted in a failure

00:26:09,310 --> 00:26:12,400
and then we had a gap of about a day or

00:26:11,050 --> 00:26:14,140
two where we didn't have any data that

00:26:12,400 --> 00:26:16,180
we didn't know what was going on with

00:26:14,140 --> 00:26:19,299
the environment so you're constantly as

00:26:16,180 --> 00:26:21,070
you run a large public service as

00:26:19,299 --> 00:26:23,619
you operate an openstack cloud you're

00:26:21,070 --> 00:26:25,929
constantly finding little areas and gaps

00:26:23,619 --> 00:26:29,350
that you didn't know you needed coverage

00:26:25,929 --> 00:26:31,840
for or things that you need to adapt a

00:26:29,350 --> 00:26:35,700
little bit better because it's different

00:26:31,840 --> 00:26:35,700
than your traditional array of services

00:26:36,299 --> 00:26:40,360
networking is another big big spot that

00:26:39,190 --> 00:26:43,239
we're going to improve upon so right now

00:26:40,360 --> 00:26:45,820
we have Asajj 24 public IP address space

00:26:43,239 --> 00:26:47,980
we're trying to get a / 23 to at least

00:26:45,820 --> 00:26:52,059
double it and if we're lucky maybe it /

00:26:47,980 --> 00:26:53,529
22 what that will give us is allowing

00:26:52,059 --> 00:26:54,999
more people to use a service and

00:26:53,529 --> 00:26:56,289
hopefully a longer amount of time that

00:26:54,999 --> 00:27:01,210
people can have their instances running

00:26:56,289 --> 00:27:03,159
and be publicly available hardware this

00:27:01,210 --> 00:27:04,570
next quarter this current quarter and

00:27:03,159 --> 00:27:06,789
then the next quarter we're going to be

00:27:04,570 --> 00:27:09,609
doubling the hardware footprint of tri

00:27:06,789 --> 00:27:10,840
stack so its current capabilities we

00:27:09,609 --> 00:27:15,549
should be able to accommodate a lot more

00:27:10,840 --> 00:27:17,409
people and lastly there's been a lot of

00:27:15,549 --> 00:27:19,929
demand and a lot of people offering

00:27:17,409 --> 00:27:22,600
support either in development resources

00:27:19,929 --> 00:27:25,450
or in administration time just simply to

00:27:22,600 --> 00:27:27,159
help us run the operation there's a very

00:27:25,450 --> 00:27:29,019
small amount of people that run this

00:27:27,159 --> 00:27:31,749
service and we need all the help we can

00:27:29,019 --> 00:27:33,999
get but we don't have a framework yet to

00:27:31,749 --> 00:27:36,429
allow people that are outside of the

00:27:33,999 --> 00:27:39,429
OpenStack foundation or outside of kind

00:27:36,429 --> 00:27:41,379
of our our community list to jump in and

00:27:39,429 --> 00:27:47,799
help so that's something that also that

00:27:41,379 --> 00:27:50,230
we're working on so roadmaps we we

00:27:47,799 --> 00:27:52,239
strive to upgrade try stack every time

00:27:50,230 --> 00:27:54,249
there's an OpenStack release so every

00:27:52,239 --> 00:27:56,080
six months when there's a new version of

00:27:54,249 --> 00:27:57,639
our do that comes out with the latest

00:27:56,080 --> 00:28:00,700
and greatest of OpenStack we strive to

00:27:57,639 --> 00:28:02,769
upgrade we've been bad about that we're

00:28:00,700 --> 00:28:05,649
still on kilo for the current try stack

00:28:02,769 --> 00:28:08,200
and we should be we should at least be

00:28:05,649 --> 00:28:09,609
on the M release here so that's one of

00:28:08,200 --> 00:28:12,070
the things that we're trying to have

00:28:09,609 --> 00:28:14,470
renewed enthusiasm and go in and the

00:28:12,070 --> 00:28:15,820
second that the RDO release drops we

00:28:14,470 --> 00:28:19,929
want to push that out the tri stack and

00:28:15,820 --> 00:28:21,340
be some of the first consumers we talked

00:28:19,929 --> 00:28:22,509
about expanding the hardware but in

00:28:21,340 --> 00:28:24,460
specifics we're going to be replacing

00:28:22,509 --> 00:28:27,009
the Cisco switches with some newer

00:28:24,460 --> 00:28:29,590
juniper junipers a big partner in the

00:28:27,009 --> 00:28:31,059
OpenStack space and we're going to be

00:28:29,590 --> 00:28:33,749
expanding the server footprint and like

00:28:31,059 --> 00:28:33,749
I said the networking

00:28:33,929 --> 00:28:39,119
so here's some of the folks that operate

00:28:36,129 --> 00:28:41,830
the current implementation of OpenStack

00:28:39,119 --> 00:28:45,340
dan rabies and nochi or kind of the

00:28:41,830 --> 00:28:47,350
original founders they set the thing up

00:28:45,340 --> 00:28:49,179
to begin with and we're kind of a big

00:28:47,350 --> 00:28:51,909
driving force behind some of the

00:28:49,179 --> 00:28:55,299
development namely the Django facebook

00:28:51,909 --> 00:28:57,909
horizon integration currently myself in

00:28:55,299 --> 00:29:00,249
comm bees a guy poor are the current

00:28:57,909 --> 00:29:01,990
admin to try stack and then we have been

00:29:00,249 --> 00:29:04,450
Schwartz Lander who was the Manila PTL

00:29:01,990 --> 00:29:06,850
and he helps out as well he does a lot

00:29:04,450 --> 00:29:13,389
of the the the upstream development for

00:29:06,850 --> 00:29:15,249
manila on try stack so I've talked don't

00:29:13,389 --> 00:29:18,970
allow to talking up here but I haven't

00:29:15,249 --> 00:29:20,440
really shown you anything so I want to

00:29:18,970 --> 00:29:21,879
kind of illustrate the complexity of

00:29:20,440 --> 00:29:23,440
OpenStack but I don't want to do it with

00:29:21,879 --> 00:29:27,279
a computer I want to do it with humans

00:29:23,440 --> 00:29:37,600
so I need four volunteers from the

00:29:27,279 --> 00:29:43,840
audience okay Francesco okay okay yeah

00:29:37,600 --> 00:29:46,869
Chris Alicia okay okay come on all right

00:29:43,840 --> 00:29:47,830
now what's going to happen is each of

00:29:46,869 --> 00:29:52,529
you were going to be an OpenStack

00:29:47,830 --> 00:29:55,860
component okay so he wants to be neutron

00:29:52,529 --> 00:29:59,799
okay get up here okay you're neutron

00:29:55,860 --> 00:30:02,230
there you go okay face your colleagues

00:29:59,799 --> 00:30:04,809
here okay he wants to be salamat ur

00:30:02,230 --> 00:30:06,129
creepy salamat ur digging into

00:30:04,809 --> 00:30:08,860
everything digging into people's

00:30:06,129 --> 00:30:11,950
business all right he wants to be rabid

00:30:08,860 --> 00:30:14,320
in q okay you'd be a good rabbit okay

00:30:11,950 --> 00:30:15,369
now rabbit why don't you don't you sit

00:30:14,320 --> 00:30:17,950
right here because you're the one that

00:30:15,369 --> 00:30:20,049
drives everything now I have to novo

00:30:17,950 --> 00:30:23,559
compute instances to Nova servers left

00:30:20,049 --> 00:30:26,340
who wants to be no okay well I got a

00:30:23,559 --> 00:30:30,190
hell of a choice here okay you'd be here

00:30:26,340 --> 00:30:32,379
you'd be Nova as well okay okay so i'm

00:30:30,190 --> 00:30:34,419
just going to illustrate some of this

00:30:32,379 --> 00:30:36,519
complexity that you don't need to deal

00:30:34,419 --> 00:30:39,759
with if you use try stack okay so

00:30:36,519 --> 00:30:41,019
generally speaking rabbitmq everything

00:30:39,759 --> 00:30:43,119
is going to be message bus driven

00:30:41,019 --> 00:30:45,249
rabbits just going to sit back and fire

00:30:43,119 --> 00:30:48,059
off a bunch of stuff so in a typical

00:30:45,249 --> 00:30:48,059
scenario

00:30:48,420 --> 00:30:57,100
rabbits going to maybe tell Nova to spin

00:30:51,670 --> 00:31:04,270
up an instance rabbits going to tell

00:30:57,100 --> 00:31:06,310
Nova to spin up an instance okay now we

00:31:04,270 --> 00:31:08,800
have an instance going we got an

00:31:06,310 --> 00:31:10,840
instance going now this this instance

00:31:08,800 --> 00:31:13,360
isn't useful without IP addresses so we

00:31:10,840 --> 00:31:15,400
need some neutron in here so why don't

00:31:13,360 --> 00:31:16,720
you why don't you tell once you tell

00:31:15,400 --> 00:31:23,560
Nova to talk to neutron and get a

00:31:16,720 --> 00:31:25,090
floating IP okay oh okay oh we get now

00:31:23,560 --> 00:31:26,860
we have network connectivity it's

00:31:25,090 --> 00:31:29,050
working now we have network cutting to

00:31:26,860 --> 00:31:31,630
me this is awesome okay things are

00:31:29,050 --> 00:31:32,830
running things are running okay salamat

00:31:31,630 --> 00:31:34,390
er what do you don't you supposed to be

00:31:32,830 --> 00:31:38,740
checking things out and telling me

00:31:34,390 --> 00:31:41,050
what's going on okay okay and then you

00:31:38,740 --> 00:31:45,010
know sometimes things go wrong I guess

00:31:41,050 --> 00:31:47,470
and yeah no Neutron crashed Neutron

00:31:45,010 --> 00:31:50,920
crashed again what's Neutron doing

00:31:47,470 --> 00:31:53,530
what's new tron doing okay and then

00:31:50,920 --> 00:31:55,060
sometimes yeah and this one apparently

00:31:53,530 --> 00:31:59,010
this is down this is a Down instance

00:31:55,060 --> 00:32:02,020
he's just he's not listening to anybody

00:31:59,010 --> 00:32:04,750
yeah so see this is what you don't have

00:32:02,020 --> 00:32:08,170
to deal with if you use try stack all of

00:32:04,750 --> 00:32:10,150
this complexity is gone you don't have

00:32:08,170 --> 00:32:12,490
to worry about it we do all the hard

00:32:10,150 --> 00:32:15,670
work you just get to go and enjoy and

00:32:12,490 --> 00:32:18,870
joy you're open stacking let's give a

00:32:15,670 --> 00:32:18,870
round of my volunteers here

00:32:26,450 --> 00:32:33,120
I'm going to open up for for any

00:32:28,830 --> 00:32:38,010
questions anybody has any comments yes

00:32:33,120 --> 00:32:49,640
sir it's rabbit that messy and we're a

00:32:38,010 --> 00:32:49,640
lot yes yes it is yes it is yes sir okay

00:32:58,640 --> 00:33:03,350
right Oh we'd run everything from cron

00:33:06,770 --> 00:33:13,290
no we keep track of when you win that

00:33:10,650 --> 00:33:16,260
floating IP address was actually mapped

00:33:13,290 --> 00:33:18,900
and then the count starts so you should

00:33:16,260 --> 00:33:23,400
always get the full 12 hours of usage

00:33:18,900 --> 00:33:26,460
time Oh should add so these github links

00:33:23,400 --> 00:33:28,080
these are the actual tooling and collect

00:33:26,460 --> 00:33:31,050
de plugins and other stuff that we use

00:33:28,080 --> 00:33:32,970
to manage try sex so if you guys want to

00:33:31,050 --> 00:33:35,160
clone these or take a look that's all

00:33:32,970 --> 00:33:37,140
the code that we use the first one is

00:33:35,160 --> 00:33:38,820
going to be the kind of the culling and

00:33:37,140 --> 00:33:41,250
monitoring stuff where we go through and

00:33:38,820 --> 00:33:42,990
remove things we're also have the

00:33:41,250 --> 00:33:45,570
collect d modules as well that give us

00:33:42,990 --> 00:33:48,030
those nice dashboards and then lastly we

00:33:45,570 --> 00:33:54,230
have the horizon integration with the

00:33:48,030 --> 00:33:54,230
facebook api for logins yes sir

00:33:56,919 --> 00:34:01,309
so what's the version of OpenStack and

00:33:59,389 --> 00:34:04,039
how often do we update we try to update

00:34:01,309 --> 00:34:06,080
every six months in realistically it's

00:34:04,039 --> 00:34:07,909
usually ever eight to ten months we're

00:34:06,080 --> 00:34:20,659
currently it's still in kilo we're on

00:34:07,909 --> 00:34:22,429
rdio kilo right now look sure the

00:34:20,659 --> 00:34:25,220
question was what's the problem why I'm

00:34:22,429 --> 00:34:27,379
we upgraded Liberty yet just just time

00:34:25,220 --> 00:34:31,159
and money friend just time and money

00:34:27,379 --> 00:34:33,589
just just really resources it's

00:34:31,159 --> 00:34:35,000
definitely on the agenda we are probably

00:34:33,589 --> 00:34:37,520
going to go directly to the M release

00:34:35,000 --> 00:34:39,589
and we want to sync this with the move

00:34:37,520 --> 00:34:40,700
to OpenStack ID so that is the number

00:34:39,589 --> 00:34:42,500
one complaint like we talked about

00:34:40,700 --> 00:34:45,409
earlier that why do I have to use

00:34:42,500 --> 00:34:48,379
Facebook why can't I just login why

00:34:45,409 --> 00:34:51,619
can't I use OAuth or some sort of non

00:34:48,379 --> 00:34:53,869
privacy invasive middleman to log into

00:34:51,619 --> 00:34:55,039
the service so that's a little also why

00:34:53,869 --> 00:34:57,039
it's taken a little bit longer because

00:34:55,039 --> 00:35:01,069
we want to sink that upgrade with

00:34:57,039 --> 00:35:03,890
redoing the off system as well I will

00:35:01,069 --> 00:35:06,730
say we you don't have to be you don't

00:35:03,890 --> 00:35:09,559
have to have a full-fledged facebook

00:35:06,730 --> 00:35:11,029
profile to login we don't care about any

00:35:09,559 --> 00:35:13,250
of that information we just want to make

00:35:11,029 --> 00:35:14,390
sure you're a human and not someone

00:35:13,250 --> 00:35:17,450
that's trying to do something malicious

00:35:14,390 --> 00:35:20,779
so there is a manual account approval

00:35:17,450 --> 00:35:23,900
process and we do our best to decipher

00:35:20,779 --> 00:35:26,059
that but if you do abuse the rules we do

00:35:23,900 --> 00:35:28,190
have some pretty Swift ways of digging

00:35:26,059 --> 00:35:32,029
in and finding out who you are and maybe

00:35:28,190 --> 00:35:33,230
sending people to your house so now well

00:35:32,029 --> 00:35:34,910
at least order some pizzas that you

00:35:33,230 --> 00:35:37,700
didn't want at least we'll do that if

00:35:34,910 --> 00:35:39,950
you abuse the service I did want to

00:35:37,700 --> 00:35:42,950
shout out to rich Bowen in the back of

00:35:39,950 --> 00:35:48,260
the room for he rich has a very useful

00:35:42,950 --> 00:35:50,930
video of how to use try stack and how to

00:35:48,260 --> 00:35:53,029
log in and how to spin up an instance

00:35:50,930 --> 00:35:54,230
and basically just how to how to get in

00:35:53,029 --> 00:35:57,170
there and it's linked on the front page

00:35:54,230 --> 00:36:02,020
of the try stock faq if you guys are

00:35:57,170 --> 00:36:02,020
interested yes sir

00:36:04,140 --> 00:36:09,100
myself rich helps as well and some of

00:36:08,050 --> 00:36:11,440
the other folks in the OpenStack

00:36:09,100 --> 00:36:13,990
foundation occasionally pop in and take

00:36:11,440 --> 00:36:15,880
a look we try to get things approved at

00:36:13,990 --> 00:36:19,180
least with a couple of lead time a

00:36:15,880 --> 00:36:21,040
couple of days lead time so if you click

00:36:19,180 --> 00:36:22,300
to request the facebook group you'll

00:36:21,040 --> 00:36:27,240
probably be approved in the next couple

00:36:22,300 --> 00:36:37,420
days we try to be good at that yes sir

00:36:27,240 --> 00:36:53,370
it's monkey dance wait hold on alright

00:36:37,420 --> 00:36:53,370
how's that any other questions no yes

00:37:06,790 --> 00:37:12,349
no not at all you just make it make a

00:37:09,349 --> 00:37:17,000
facebook account just and then click to

00:37:12,349 --> 00:37:20,330
join the group it's a private group I'm

00:37:17,000 --> 00:37:22,310
sorry oh yeah sure yeah I mean I have a

00:37:20,330 --> 00:37:31,849
have a we'll talk later have a paypal

00:37:22,310 --> 00:37:36,349
account well well sort it out so anybody

00:37:31,849 --> 00:37:37,700
else any other questions well check it

00:37:36,349 --> 00:37:39,770
out you guys try stalked out of work

00:37:37,700 --> 00:37:42,080
we're going to make it bigger and better

00:37:39,770 --> 00:37:43,339
we're constantly working on it so we

00:37:42,080 --> 00:37:45,290
appreciate those of you that are tried

00:37:43,339 --> 00:37:46,790
it and we look forward to accommodating

00:37:45,290 --> 00:38:02,420
more people to continue to use the

00:37:46,790 --> 00:38:08,720
service thanks guys sorry about the mess

00:38:02,420 --> 00:38:11,589
here it's ok yeah you know I wants to

00:38:08,720 --> 00:38:11,589
ask you should be

00:38:29,570 --> 00:38:55,400
selfie with you why it's called like if

00:38:53,040 --> 00:38:55,400
there's any

00:39:37,780 --> 00:39:46,040
something like ID you should be looking

00:39:40,310 --> 00:39:48,650
at in a row no there's no reason not to

00:39:46,040 --> 00:39:50,960
integrate it openstack ID is kind of the

00:39:48,650 --> 00:39:53,180
default they're trying to be better at

00:39:50,960 --> 00:39:58,930
all the other services I think it's a

00:39:53,180 --> 00:39:58,930
walk two days yeah so since we are

00:40:02,700 --> 00:40:12,400
I have to read it read up on it i don't

00:40:05,620 --> 00:40:16,650
know maybe talking to mr. also to

00:40:12,400 --> 00:40:26,760
integrate it should be

00:40:16,650 --> 00:40:28,680
is how how it is and that's the reason

00:40:26,760 --> 00:40:40,589
why we want to go with OpenStack IDF is

00:40:28,680 --> 00:40:42,809
completely agnostic or distribution it's

00:40:40,589 --> 00:40:54,539
also made using projects we kind of have

00:40:42,809 --> 00:41:00,440
to stay with rowing yeah political it's

00:40:54,539 --> 00:41:00,440
been at Kadesh don't say that much to it

00:41:00,650 --> 00:41:08,220
that's kind of the direction that pushes

00:41:03,839 --> 00:41:11,690
okay that's how stand up there's no

00:41:08,220 --> 00:41:11,690
reason why we can't have more than one

00:41:18,289 --> 00:41:22,970
video universal dish butcher

00:41:40,250 --> 00:41:46,580
she's not to tell Graham scan our winner

00:41:50,630 --> 00:42:01,020
she's very 500 / have a winning edge

00:41:57,800 --> 00:42:08,400
will kill you please copy ah here is

00:42:01,020 --> 00:42:10,700
this sticker for you okay yeah can I you

00:42:08,400 --> 00:42:10,700
have it

00:42:35,320 --> 00:42:46,760
so I do like to contribute you should

00:42:41,510 --> 00:42:49,130
find us on IRC thanks I step 3 note you

00:42:46,760 --> 00:42:50,870
know Jeffrey know that anyone with an

00:42:49,130 --> 00:42:54,500
aunt with ops is it's someone who

00:42:50,870 --> 00:42:56,690
operates or okay we would look we need

00:42:54,500 --> 00:42:58,880
all the help we can get we just need to

00:42:56,690 --> 00:43:00,140
work out a framework that we can allow

00:42:58,880 --> 00:43:02,510
people to work on it because right now

00:43:00,140 --> 00:43:03,950
it's just open sacramento shun votes and

00:43:02,510 --> 00:43:05,810
then any of the corporate sponsors but

00:43:03,950 --> 00:43:08,660
we want to have it to anyone can

00:43:05,810 --> 00:43:11,630
contribute up to the github repos arena

00:43:08,660 --> 00:43:23,780
well I more like still ministry total

00:43:11,630 --> 00:44:12,290
development not just a super soaker

00:43:23,780 --> 00:44:16,160
oh thank you that i will pay for as long

00:44:12,290 --> 00:44:20,660
as you want to move to a peck singapore

00:44:16,160 --> 00:44:23,350
you can have i'm getting ready to open

00:44:20,660 --> 00:44:25,130
up a row you hong kong can work so

00:44:23,350 --> 00:44:30,320
basically you have to be able to fly

00:44:25,130 --> 00:44:32,470
around asia you can do some however you

00:44:30,320 --> 00:44:32,470
want

00:44:33,370 --> 00:44:37,000
Diane is promising

00:45:00,330 --> 00:45:05,010

YouTube URL: https://www.youtube.com/watch?v=LKfJWHYxs6g


