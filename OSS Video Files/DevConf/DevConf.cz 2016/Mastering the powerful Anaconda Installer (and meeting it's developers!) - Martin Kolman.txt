Title: Mastering the powerful Anaconda Installer (and meeting it's developers!) - Martin Kolman
Publication date: 2016-02-11
Playlist: DevConf.cz 2016
Description: 
	Did you know that Anaconda is used for Docker image creation ? That it installs Atomic Hosts ? Can do fully automated installs with IPMI status reporting ? And that's just the tip of the iceberg!

During the course of this workshop genuine Anaconda developers will lead you through the many useful (and powerful!) features Anaconda provides (not only) in the realm of Operating System installation.
Captions: 
	00:01:06,229 --> 00:01:15,150
IDK i'm up to sit back problem or other

00:01:09,960 --> 00:01:18,060
container full of a mean on

00:01:15,150 --> 00:01:19,590
sites later English so they cackled to

00:01:18,060 --> 00:01:23,280
such an imposter clips preservative it's

00:01:19,590 --> 00:01:25,970
an autopsy photos either no electrical

00:01:23,280 --> 00:01:28,049
power so you're gonna close the style

00:01:25,970 --> 00:01:34,380
not gonna send the narrows the olives in

00:01:28,049 --> 00:01:40,280
the second pill about Austin not against

00:01:34,380 --> 00:01:40,280
me glow but we should have to be honest

00:01:41,990 --> 00:01:47,869
click on watch out of a database

00:03:24,099 --> 00:03:44,739
it doesn't know much about Charlotte

00:03:34,370 --> 00:03:44,739
ledee a little bit I'm it

00:04:23,440 --> 00:04:37,660
watch it kid yourself so entirely honest

00:04:25,820 --> 00:04:37,660
I exactly what I

00:04:45,090 --> 00:04:53,080
yeah so like what's going on whatever so

00:04:49,930 --> 00:04:55,389
basically like the idea is mastering the

00:04:53,080 --> 00:04:58,210
NF online store of the these already

00:04:55,389 --> 00:05:00,580
workshop is like we get the UH nocona

00:04:58,210 --> 00:05:02,979
developers in the room you get some

00:05:00,580 --> 00:05:06,580
other non anukunna developers in the

00:05:02,979 --> 00:05:09,759
room and we talk about topics we think

00:05:06,580 --> 00:05:12,370
are interesting about the installer and

00:05:09,759 --> 00:05:14,800
not very well covered of often with

00:05:12,370 --> 00:05:17,289
documentation or like people might not

00:05:14,800 --> 00:05:19,389
even know they are there so they might

00:05:17,289 --> 00:05:21,279
be using the Anaconda sub-option soap

00:05:19,389 --> 00:05:23,830
optimally because they just don't know

00:05:21,279 --> 00:05:27,580
about the features and how they can be

00:05:23,830 --> 00:05:30,759
used also the idea is that basically you

00:05:27,580 --> 00:05:33,789
should really ask about fluff give give

00:05:30,759 --> 00:05:36,219
us feedback lies tell us what issues you

00:05:33,789 --> 00:05:40,449
have the stuff we cover all with random

00:05:36,219 --> 00:05:42,879
stuff you used in anaconda so basically

00:05:40,449 --> 00:05:45,939
ends not really workshop in the sense

00:05:42,879 --> 00:05:53,800
like you install stuff or improved in

00:05:45,939 --> 00:05:58,270
store but we can talk about it yeah okay

00:05:53,800 --> 00:06:01,509
so we prepared basically like we sent an

00:05:58,270 --> 00:06:04,990
email to some people who use anaconda in

00:06:01,509 --> 00:06:07,029
anaconda in store we got no reply so we

00:06:04,990 --> 00:06:09,099
like to discuss some topics that we

00:06:07,029 --> 00:06:11,830
think are interesting about the knock-on

00:06:09,099 --> 00:06:15,279
down should be covered and we prepared

00:06:11,830 --> 00:06:17,649
some slides about them so just ask if

00:06:15,279 --> 00:06:21,189
you can we draw when we don't know it's

00:06:17,649 --> 00:06:25,050
not a problem so I randomly select with

00:06:21,189 --> 00:06:27,849
the Anaconda built-in help system slides

00:06:25,050 --> 00:06:32,800
so basically is since about header are

00:06:27,849 --> 00:06:36,129
20 or 30 7.1 I think we have four

00:06:32,800 --> 00:06:38,460
built-in health system in anaconda so

00:06:36,129 --> 00:06:38,460
basically

00:06:41,480 --> 00:06:46,850
the problem is that sometimes you just

00:06:44,300 --> 00:06:49,640
have an installation process running

00:06:46,850 --> 00:06:53,960
somewhere maybe accessible only over VNC

00:06:49,640 --> 00:06:55,780
or a remote stuff and it might be the

00:06:53,960 --> 00:06:58,880
only thing you have at the moment and

00:06:55,780 --> 00:07:03,380
you might not even have internet access

00:06:58,880 --> 00:07:05,780
or it's not like there is an

00:07:03,380 --> 00:07:08,690
installation guy you can get but it's

00:07:05,780 --> 00:07:10,460
online and you need to basically move

00:07:08,690 --> 00:07:12,170
the task you need to have the

00:07:10,460 --> 00:07:13,880
installation kind somewhere then you

00:07:12,170 --> 00:07:17,390
know the computer when you are where you

00:07:13,880 --> 00:07:18,950
are installing so you basically in

00:07:17,390 --> 00:07:23,210
cooperation with the guys who do the

00:07:18,950 --> 00:07:25,580
installation guide we did a built-in

00:07:23,210 --> 00:07:29,990
help system in anaconda in the graphical

00:07:25,580 --> 00:07:32,600
user interface so there's a Help button

00:07:29,990 --> 00:07:35,120
in on every screen and if you press it

00:07:32,600 --> 00:07:37,490
you get to help for the screen at the

00:07:35,120 --> 00:07:38,720
same time this is the same thing to the

00:07:37,490 --> 00:07:40,970
same content you have in the

00:07:38,720 --> 00:07:43,370
installation guide so you don't need to

00:07:40,970 --> 00:07:45,770
be don't need to maintain two sets of

00:07:43,370 --> 00:07:47,750
content it just used to be something

00:07:45,770 --> 00:07:50,150
like this in a single screen and was

00:07:47,750 --> 00:07:53,450
completely unusable for the customs both

00:07:50,150 --> 00:07:55,670
custom storage configuration now it

00:07:53,450 --> 00:08:01,640
covers all the screens and I think it

00:07:55,670 --> 00:08:05,080
works very nicely basically they're out

00:08:01,640 --> 00:08:05,080
of the screening without one

00:08:08,440 --> 00:08:14,930
we know like this is to help you were

00:08:11,990 --> 00:08:18,410
used for example by applications and

00:08:14,930 --> 00:08:23,060
other programs and this is the content

00:08:18,410 --> 00:08:25,910
it looks kind of like where when you see

00:08:23,060 --> 00:08:29,750
the website looks similar there are no

00:08:25,910 --> 00:08:31,550
pictures so switch in the window and it

00:08:29,750 --> 00:08:39,469
covers the screen you are currently

00:08:31,550 --> 00:08:43,330
looking in but you would like to edit

00:08:39,469 --> 00:08:46,940
the text interface etc at the same time

00:08:43,330 --> 00:08:49,970
basically it might need to open some

00:08:46,940 --> 00:08:51,830
variants and starbucks i promote I know

00:08:49,970 --> 00:08:54,800
the people working on the documentation

00:08:51,830 --> 00:08:57,320
are going to that it should be quite

00:08:54,800 --> 00:08:59,600
easy technically basically run glass

00:08:57,320 --> 00:09:02,000
over until you're done with the

00:08:59,600 --> 00:09:10,670
documentation get back to the text

00:09:02,000 --> 00:09:13,970
interface well basically yeah there is a

00:09:10,670 --> 00:09:18,470
git repo with the dogs it's all terms of

00:09:13,970 --> 00:09:20,540
X and XML you process it draw by some

00:09:18,470 --> 00:09:24,770
standard doesn't really fit into our use

00:09:20,540 --> 00:09:26,270
case and display if you to help it's

00:09:24,770 --> 00:09:28,540
going to Broken Arrow hard because the

00:09:26,270 --> 00:09:32,870
out is broken but you're working on that

00:09:28,540 --> 00:09:36,890
yeah how can text mode certainly some

00:09:32,870 --> 00:09:38,870
others already asked about that I feel

00:09:36,890 --> 00:09:41,839
like there's a idea that this should be

00:09:38,870 --> 00:09:43,970
available just like on a system like we

00:09:41,839 --> 00:09:45,920
wake up at three in the morning and like

00:09:43,970 --> 00:09:48,410
the site I really need to learn about

00:09:45,920 --> 00:09:50,390
the customs code so you don't need to

00:09:48,410 --> 00:09:52,970
start an installation for that or open

00:09:50,390 --> 00:09:55,820
your web browser basically like the yelp

00:09:52,970 --> 00:09:59,270
has some like built-in documentation

00:09:55,820 --> 00:10:00,950
index another thing is translation the

00:09:59,270 --> 00:10:03,320
problem is no one translates the

00:10:00,950 --> 00:10:08,029
installation guides at the moment but if

00:10:03,320 --> 00:10:10,910
someone does that yeah then we are ready

00:10:08,029 --> 00:10:12,980
for that this the localization is built

00:10:10,910 --> 00:10:17,440
into the system you just need the

00:10:12,980 --> 00:10:17,440
content somewhere yep

00:10:21,860 --> 00:10:28,320
yeah so that's the help stop I think

00:10:25,740 --> 00:10:30,570
next should worship gonna because he has

00:10:28,320 --> 00:10:36,690
some another talking like a few minutes

00:10:30,570 --> 00:10:42,780
or whatever I can do another one is

00:10:36,690 --> 00:10:56,660
there a brother on that yeah like 2,000

00:10:42,780 --> 00:10:56,660
tops as long as I can have one more I

00:11:01,280 --> 00:11:19,080
can't oh no where's the slash there you

00:11:10,650 --> 00:11:29,450
go 80 good for the love of note says the

00:11:19,080 --> 00:11:29,450
wrong box all right fine I swear to Oh

00:11:30,770 --> 00:11:35,030
keyboards man keyboards

00:11:36,009 --> 00:11:44,720
why want to do thing why are you not go

00:11:40,329 --> 00:11:53,540
well why can't I copy and paste I

00:11:44,720 --> 00:11:55,939
thought I was good at computers nobody's

00:11:53,540 --> 00:11:58,970
gonna be there because it is control and

00:11:55,939 --> 00:12:00,949
this is function key oh because like a

00:11:58,970 --> 00:12:12,879
lot of voice stupid I should have known

00:12:00,949 --> 00:12:15,470
that control wasn't control okay gray um

00:12:12,879 --> 00:12:17,720
this is a quick overview of the driver

00:12:15,470 --> 00:12:18,889
updates just functionality that's in the

00:12:17,720 --> 00:12:21,490
installer which is sort of a

00:12:18,889 --> 00:12:23,449
little-known corner of the Installer

00:12:21,490 --> 00:12:25,399
because most people don't need it

00:12:23,449 --> 00:12:27,399
especially in fedora where you're not

00:12:25,399 --> 00:12:29,240
generally going to want to install

00:12:27,399 --> 00:12:32,899
proprietary drivers of that sort of

00:12:29,240 --> 00:12:35,509
thing um so yes the Installer accepts

00:12:32,899 --> 00:12:36,860
driver updates disks which I'll talk

00:12:35,509 --> 00:12:39,199
about in a second and you can use them

00:12:36,860 --> 00:12:42,019
to load up great data drivers or other

00:12:39,199 --> 00:12:43,299
drivers that you might not have present

00:12:42,019 --> 00:12:45,410
in the Installer during the installation

00:12:43,299 --> 00:12:46,939
there's a boot argument or a kick start

00:12:45,410 --> 00:12:49,579
command you can use to tell the

00:12:46,939 --> 00:12:51,649
Installer that it will also auto load

00:12:49,579 --> 00:12:53,899
from special devices and there's also an

00:12:51,649 --> 00:12:56,149
interactive menu which is all text and

00:12:53,899 --> 00:12:57,259
you can't choose your keyboard type and

00:12:56,149 --> 00:12:59,569
it's all in English and it will never be

00:12:57,259 --> 00:13:04,749
translated never use a non-us keyboard

00:12:59,569 --> 00:13:09,980
so I don't recommend that so what is a

00:13:04,749 --> 00:13:12,499
dud driver update disk it's just a iso

00:13:09,980 --> 00:13:14,449
image it has some specials young repose

00:13:12,499 --> 00:13:16,759
in it they have some extra files and

00:13:14,449 --> 00:13:19,579
them to mark them as being driver

00:13:16,759 --> 00:13:21,439
updates rebo's they have special rpms in

00:13:19,579 --> 00:13:23,269
them the rpms have some extra headers to

00:13:21,439 --> 00:13:25,759
mark them as being driver updates rpms

00:13:23,269 --> 00:13:27,110
and those rpms have drivers in them like

00:13:25,759 --> 00:13:31,009
kernel modules and firmware and that

00:13:27,110 --> 00:13:32,899
sort of thing it does about what you'd

00:13:31,009 --> 00:13:34,129
expect the Installer if you give it the

00:13:32,899 --> 00:13:36,170
right stuff the install it reads it it

00:13:34,129 --> 00:13:38,839
finds it looks at everything that's in

00:13:36,170 --> 00:13:41,029
the disk that this can contain private

00:13:38,839 --> 00:13:43,669
for multiple versions of rel or fedora

00:13:41,029 --> 00:13:45,110
or whatever so it looks at everything

00:13:43,669 --> 00:13:45,939
that's there finds things that are

00:13:45,110 --> 00:13:48,429
compatible with

00:13:45,939 --> 00:13:50,559
name colonel and installer and then

00:13:48,429 --> 00:13:52,119
loads all of those drivers inside the

00:13:50,559 --> 00:13:54,399
Installer environment and also saves the

00:13:52,119 --> 00:13:56,470
packages so that when you install to the

00:13:54,399 --> 00:14:00,609
target system you still have the drivers

00:13:56,470 --> 00:14:02,589
running uh what why do you care well um

00:14:00,609 --> 00:14:04,899
if you have hardware that isn't

00:14:02,589 --> 00:14:06,999
supported maybe you're using very fancy

00:14:04,899 --> 00:14:10,889
hardware that has dist on an unsupported

00:14:06,999 --> 00:14:13,989
controller or you need to use a

00:14:10,889 --> 00:14:15,489
unsupportive Nick to fetch images or

00:14:13,989 --> 00:14:17,319
whatever during insult or just well

00:14:15,489 --> 00:14:18,639
replacing the default drivers you can't

00:14:17,319 --> 00:14:26,319
wait until after the system is installed

00:14:18,639 --> 00:14:28,419
to do that this is a way to do it yeah

00:14:26,319 --> 00:14:30,399
well in fedora it's not as useful

00:14:28,419 --> 00:14:32,319
because we generally have very very new

00:14:30,399 --> 00:14:34,209
drivers and things like that it's more

00:14:32,319 --> 00:14:36,939
important in like rel and especially

00:14:34,209 --> 00:14:38,289
older rail releases where they are not

00:14:36,939 --> 00:14:39,489
going to you know it's five years old

00:14:38,289 --> 00:14:43,470
now it doesn't have support for the

00:14:39,489 --> 00:14:43,470
newest things so this is it

00:14:51,819 --> 00:14:57,019
huh okay so you have to use that to

00:14:55,069 --> 00:15:03,800
support very old fart is very old or new

00:14:57,019 --> 00:15:05,209
driver down yeah that's the dvds so to

00:15:03,800 --> 00:15:07,160
prepare it it's basically you'll get an

00:15:05,209 --> 00:15:11,149
ISO image from somewhere generally it's

00:15:07,160 --> 00:15:13,100
from Red Hat although the equipment

00:15:11,149 --> 00:15:14,690
manufacturers can like they have them on

00:15:13,100 --> 00:15:16,040
their website sometimes but generally

00:15:14,690 --> 00:15:19,279
it's actually made inside of red hat and

00:15:16,040 --> 00:15:21,230
we give to them to give to you you burn

00:15:19,279 --> 00:15:22,850
a secret onto a CD ROM or you put it

00:15:21,230 --> 00:15:25,790
onto a USB key it has to be at the top

00:15:22,850 --> 00:15:52,870
level of the system or you just put it

00:15:25,790 --> 00:15:55,790
on the network somewhere remote machine

00:15:52,870 --> 00:15:57,709
you don't have access we need to inject

00:15:55,790 --> 00:16:00,769
first well so if you don't have never

00:15:57,709 --> 00:16:02,480
tax as you probably have USB um you

00:16:00,769 --> 00:16:05,420
wrote machine you remember access oh

00:16:02,480 --> 00:16:09,319
well there is a trick you can do if you

00:16:05,420 --> 00:16:11,209
can fix eboot it then if you don't have

00:16:09,319 --> 00:16:13,160
physical access and you can't pick

00:16:11,209 --> 00:16:17,720
seafood it how are you going to install

00:16:13,160 --> 00:16:21,259
anything on it all is easy i'm just

00:16:17,720 --> 00:16:23,509
using the vc q lo and initially I just

00:16:21,259 --> 00:16:25,759
bootstrap anaconda from over a machine

00:16:23,509 --> 00:16:27,800
this guy sec i reboot the machine on

00:16:25,759 --> 00:16:30,259
itself on low and the key stuff is

00:16:27,800 --> 00:16:32,740
objecting to the easily so can we inject

00:16:30,259 --> 00:16:35,839
the drug update into the injury yes oh

00:16:32,740 --> 00:16:37,459
yes um yeah you can totally do that I

00:16:35,839 --> 00:16:40,069
actually don't talk about it here

00:16:37,459 --> 00:16:42,019
because I'm not certain it's actually

00:16:40,069 --> 00:16:44,209
supported it's not mentioned in the Red

00:16:42,019 --> 00:16:49,430
Lodge annotations fine but I'll tell you

00:16:44,209 --> 00:16:51,319
you can do it don't so yeah that's the

00:16:49,430 --> 00:16:54,170
other secret method is you can inject it

00:16:51,319 --> 00:16:55,370
into the inner FS um so you tell the

00:16:54,170 --> 00:16:55,880
Installer you give it either you know

00:16:55,370 --> 00:16:58,700
you

00:16:55,880 --> 00:17:01,430
we've been studied e equals URL obvious

00:16:58,700 --> 00:17:03,470
or instant you d equals HD colon and

00:17:01,430 --> 00:17:05,120
then a disk specifier yeah you can do

00:17:03,470 --> 00:17:06,380
dev SDA don't do that you want to do

00:17:05,120 --> 00:17:07,940
something like labels equals flash or

00:17:06,380 --> 00:17:11,300
whatever oh yeah I did put it in here

00:17:07,940 --> 00:17:12,380
okay I like sorry I am right there the

00:17:11,300 --> 00:17:14,810
answer to your question was on the next

00:17:12,380 --> 00:17:15,949
slide good for me so yes you can embed

00:17:14,810 --> 00:17:19,310
it me in a tardy and then it will load

00:17:15,949 --> 00:17:21,380
um and this stuff is I should have had a

00:17:19,310 --> 00:17:23,000
winter this is documented in or it

00:17:21,380 --> 00:17:25,900
should be documented in the boot

00:17:23,000 --> 00:17:27,980
arguments guide in the Anaconda box um

00:17:25,900 --> 00:17:30,500
it'll auto detect if you have a device

00:17:27,980 --> 00:17:32,330
that has the label a disk partition that

00:17:30,500 --> 00:17:33,980
has the label OEM drive it's the same

00:17:32,330 --> 00:17:34,970
thing as that except it just you don't

00:17:33,980 --> 00:17:36,710
have to use the blue document the

00:17:34,970 --> 00:17:39,950
downside is if your device does not

00:17:36,710 --> 00:17:41,780
appear in you get in about half a second

00:17:39,950 --> 00:17:46,330
which nearly everything does must really

00:17:41,780 --> 00:17:46,330
really slow then it won't get detected

00:17:49,060 --> 00:17:55,280
oh that's just a um it's whatever that

00:17:53,870 --> 00:17:57,140
whatever your device is labeled it could

00:17:55,280 --> 00:17:59,120
be labeled you know hog head or

00:17:57,140 --> 00:18:00,500
something and long as you have legal

00:17:59,120 --> 00:18:05,230
equals ha gate it will find whatever is

00:18:00,500 --> 00:18:07,640
hog head and it'll load devices of sorry

00:18:05,230 --> 00:18:09,500
yeah exactly and if it's OEM drug you

00:18:07,640 --> 00:18:10,550
don't even have to do so there yeah as I

00:18:09,500 --> 00:18:12,470
said there's an interactive mode you

00:18:10,550 --> 00:18:14,750
boot with just plain in stock ed and

00:18:12,470 --> 00:18:16,130
you'll get a menu you can pick a block

00:18:14,750 --> 00:18:17,570
device from the menu and then you pick a

00:18:16,130 --> 00:18:19,940
nicer from the menu and you pick which

00:18:17,570 --> 00:18:21,560
drivers you want to install I don't know

00:18:19,940 --> 00:18:23,330
why that was well I know why I was

00:18:21,560 --> 00:18:26,150
needed because large hardware partners

00:18:23,330 --> 00:18:27,730
demanded that it be there much of the

00:18:26,150 --> 00:18:30,230
code for this was written under duress

00:18:27,730 --> 00:18:31,670
because large Herbert partners of red

00:18:30,230 --> 00:18:32,480
hat are like no it needs to work like

00:18:31,670 --> 00:18:34,220
this because that's how we've been

00:18:32,480 --> 00:18:35,690
installing our system for seventeen

00:18:34,220 --> 00:18:39,470
thousand years and I'm like that's a lie

00:18:35,690 --> 00:18:42,220
but okay um so it has an interactive

00:18:39,470 --> 00:18:45,980
mode which you can use if you want um

00:18:42,220 --> 00:18:48,050
yeah you don't want to know exactly how

00:18:45,980 --> 00:18:49,280
it works there's at least one person in

00:18:48,050 --> 00:18:52,400
this room who has to know how it works

00:18:49,280 --> 00:18:55,670
I'm very sorry

00:18:52,400 --> 00:18:57,320
um the codes not pretty I can it's it's

00:18:55,670 --> 00:18:58,970
complicated enough that it's not easy to

00:18:57,320 --> 00:19:01,490
explain and really you don't need to

00:18:58,970 --> 00:19:03,980
know how it works but there you go um

00:19:01,490 --> 00:19:05,870
best practices you probably in general

00:19:03,980 --> 00:19:07,070
don't want to use this it's describing

00:19:05,870 --> 00:19:08,060
the rail install guide which does a

00:19:07,070 --> 00:19:10,340
pretty good job of telling you how you

00:19:08,060 --> 00:19:12,410
use it um if you're want to make your

00:19:10,340 --> 00:19:14,120
own driver updates don't do that like

00:19:12,410 --> 00:19:17,200
get your driver upstream be a good

00:19:14,120 --> 00:19:19,580
person if you really really have to

00:19:17,200 --> 00:19:21,950
generally talk to Red Hat that there are

00:19:19,580 --> 00:19:23,780
no public tools I have never seen the

00:19:21,950 --> 00:19:25,850
tools that redhead uses I wrote the code

00:19:23,780 --> 00:19:27,890
to handle it but I've never actually

00:19:25,850 --> 00:19:29,570
seen the code we used to make them so

00:19:27,890 --> 00:19:32,750
they really don't want you to have it

00:19:29,570 --> 00:19:34,670
there is example example thing that we

00:19:32,750 --> 00:19:35,960
use for testing in the Anaconda sort or

00:19:34,670 --> 00:19:37,640
you can be the Anaconda source to get an

00:19:35,960 --> 00:19:39,610
idea what it is that makes everything

00:19:37,640 --> 00:19:41,840
special if you want this to work

00:19:39,610 --> 00:19:43,010
generally we don't recommend that you do

00:19:41,840 --> 00:19:44,480
this you should just get your drivers

00:19:43,010 --> 00:19:46,160
into fedora if you're working in fedora

00:19:44,480 --> 00:19:48,740
and if you're working in rel talk to Red

00:19:46,160 --> 00:19:50,840
Hat and we'll help you out that's that

00:19:48,740 --> 00:19:52,600
if you want to know more or talk to

00:19:50,840 --> 00:19:55,660
anymore there's ways you can do that

00:19:52,600 --> 00:19:55,660
thank you

00:20:31,940 --> 00:20:36,720
okay so my name is rice sauce Potomac

00:20:34,740 --> 00:20:40,679
I'm also a member of the Anaconda

00:20:36,720 --> 00:20:45,590
installer team and as will the driver of

00:20:40,679 --> 00:20:48,990
the disks and he he provided a way to

00:20:45,590 --> 00:20:52,350
extend the installation environment to

00:20:48,990 --> 00:20:55,529
some in some way and I with some other

00:20:52,350 --> 00:20:57,120
colleagues focused on on another weight

00:20:55,529 --> 00:20:59,669
how to extend the installation

00:20:57,120 --> 00:21:02,640
environment and in this case the

00:20:59,669 --> 00:21:06,230
Anaconda itself and we call it anaconda

00:21:02,640 --> 00:21:08,399
Adams just because we had no better name

00:21:06,230 --> 00:21:10,799
since that time people are suggesting

00:21:08,399 --> 00:21:15,870
better rooms but they started doing so

00:21:10,799 --> 00:21:18,240
after we said the name so I'm I had a

00:21:15,870 --> 00:21:21,539
workshop I think it was two years ago a

00:21:18,240 --> 00:21:23,789
DEFCON on developing anaconda Adam Adam

00:21:21,539 --> 00:21:27,720
so I'm not going to i'm not going to

00:21:23,789 --> 00:21:30,299
repeat myself but I more like to show

00:21:27,720 --> 00:21:34,350
show you what is the current status and

00:21:30,299 --> 00:21:41,779
what happened since then so we have the

00:21:34,350 --> 00:21:41,779
added support oh ok that was fast

00:21:42,700 --> 00:21:54,530
let me check okay so every piece so well

00:21:49,520 --> 00:21:56,750
so far it has been it has been proving

00:21:54,530 --> 00:22:01,540
itself to be wide enough for complex

00:21:56,750 --> 00:22:06,620
functionality so well the API is kind of

00:22:01,540 --> 00:22:10,850
not strict but quite small and you can

00:22:06,620 --> 00:22:12,770
and very limited but turns out that you

00:22:10,850 --> 00:22:16,130
can do complex finish with that and we

00:22:12,770 --> 00:22:19,190
will see examples of existing items in a

00:22:16,130 --> 00:22:22,429
minute it can of course be extended by

00:22:19,190 --> 00:22:24,020
our team if you need it so for example i

00:22:22,429 --> 00:22:26,650
think it was quite recently there were

00:22:24,020 --> 00:22:29,809
some requests that some aidan were

00:22:26,650 --> 00:22:34,070
implemented for sent OS wanted to access

00:22:29,809 --> 00:22:36,110
the packaging payload in in anaconda and

00:22:34,070 --> 00:22:39,110
we we are not currently doing this

00:22:36,110 --> 00:22:42,350
because so far there has been no reason

00:22:39,110 --> 00:22:44,600
for them but it's it's a quite a simple

00:22:42,350 --> 00:22:46,880
patch for us so we can expose these

00:22:44,600 --> 00:22:50,179
things but instead of exposing

00:22:46,880 --> 00:22:52,790
everything and then trying to reduce it

00:22:50,179 --> 00:22:55,820
somehow when we don't know who uses what

00:22:52,790 --> 00:22:59,030
we chose the different approach it we

00:22:55,820 --> 00:23:01,390
only pass the aidan's the information

00:22:59,030 --> 00:23:04,580
that we are sure they can use and they

00:23:01,390 --> 00:23:06,740
can safely use and then we are adding

00:23:04,580 --> 00:23:10,700
these things these extra things on

00:23:06,740 --> 00:23:13,010
demand yeah the API is one hundred

00:23:10,700 --> 00:23:16,910
percent stable we for example did a

00:23:13,010 --> 00:23:19,970
rebase in route 72 we change the API but

00:23:16,910 --> 00:23:22,429
it was really it all these things were

00:23:19,970 --> 00:23:28,540
really really small and easy and we

00:23:22,429 --> 00:23:28,540
helped helped out the Edam developers to

00:23:28,690 --> 00:23:35,480
include these changes in their sources

00:23:31,750 --> 00:23:38,600
there can be three types of add-ons

00:23:35,480 --> 00:23:41,299
either kickstart only or with a

00:23:38,600 --> 00:23:44,750
graphical user interface or supporting

00:23:41,299 --> 00:23:49,370
our text mode the kickstart support is a

00:23:44,750 --> 00:23:50,780
must so there can be nothing that that

00:23:49,370 --> 00:23:52,760
is supported in a graphical user

00:23:50,780 --> 00:23:54,640
interface but it's not supported in

00:23:52,760 --> 00:23:56,980
kickstart so the key

00:23:54,640 --> 00:23:58,900
starrett support is a must and then the

00:23:56,980 --> 00:24:04,210
graphical and text load extensions are

00:23:58,900 --> 00:24:06,160
optional yeah so I'll go through some

00:24:04,210 --> 00:24:09,370
existing items of course there's the

00:24:06,160 --> 00:24:12,550
hello world I don't I work I written I

00:24:09,370 --> 00:24:16,180
wrote as a proof of concept of the item

00:24:12,550 --> 00:24:17,950
support in anaconda it provides the

00:24:16,180 --> 00:24:21,460
basic structure and template for

00:24:17,950 --> 00:24:24,790
developing other items and so it happens

00:24:21,460 --> 00:24:27,310
that it's a starting point of as far as

00:24:24,790 --> 00:24:30,970
i can tell probably all the other atoms

00:24:27,310 --> 00:24:33,190
so if i look into the sources of all the

00:24:30,970 --> 00:24:35,140
other anaconda add-ons that exist they

00:24:33,190 --> 00:24:38,740
have something from the hell out of them

00:24:35,140 --> 00:24:41,890
so it turns out that it's probably a

00:24:38,740 --> 00:24:45,160
good starting point and of course use it

00:24:41,890 --> 00:24:48,610
for testing because as we do changes and

00:24:45,160 --> 00:24:50,950
atoms of course may stop working so the

00:24:48,610 --> 00:24:53,470
hello world add on this since is the

00:24:50,950 --> 00:24:57,240
kind of a reference implementation we

00:24:53,470 --> 00:25:01,090
use it for testing they added support

00:24:57,240 --> 00:25:05,200
the most complex around so far is the

00:25:01,090 --> 00:25:09,400
escape Adam it yeah it was written by me

00:25:05,200 --> 00:25:11,230
as part of my master's thesis in the

00:25:09,400 --> 00:25:13,600
University and it's basically an

00:25:11,230 --> 00:25:16,810
integration of anaconda in the escape to

00:25:13,600 --> 00:25:20,680
before for scanning your system with the

00:25:16,810 --> 00:25:25,690
escape content for security issues and

00:25:20,680 --> 00:25:28,600
and configuration issues it is included

00:25:25,690 --> 00:25:32,020
in the route 72 installation images so

00:25:28,600 --> 00:25:34,960
all rel 722 installations have this

00:25:32,020 --> 00:25:39,460
available so it's an example of a

00:25:34,960 --> 00:25:41,140
successful project I think kinda and

00:25:39,460 --> 00:25:44,740
it's quite extensively tested and

00:25:41,140 --> 00:25:46,390
maintained because once it good once it

00:25:44,740 --> 00:25:49,990
started to be used in the world

00:25:46,390 --> 00:25:51,610
installation the Red Hat Quality

00:25:49,990 --> 00:25:54,820
Assurance team jumped on it and found

00:25:51,610 --> 00:25:58,840
many many bugs and little tweaks it I

00:25:54,820 --> 00:26:03,790
kept fixed I kept I I'm still keeping

00:25:58,840 --> 00:26:04,519
fixing well another atom is the que Don

00:26:03,790 --> 00:26:08,149
Pardo

00:26:04,519 --> 00:26:10,849
and it is the replacement of the first

00:26:08,149 --> 00:26:13,159
boot camp plugin because we don't really

00:26:10,849 --> 00:26:15,739
like first boot it is an ancient tool

00:26:13,159 --> 00:26:17,570
that we want to get rid of and so we are

00:26:15,739 --> 00:26:20,299
trying to move everything from first go

00:26:17,570 --> 00:26:24,619
to either anaconda or our new tool that

00:26:20,299 --> 00:26:29,389
is called initial setup which uses the

00:26:24,619 --> 00:26:32,239
same I call it toolkit as anaconda and

00:26:29,389 --> 00:26:34,909
you can actually write an atom that is

00:26:32,239 --> 00:26:37,639
capable of running in anaconda and in

00:26:34,909 --> 00:26:40,399
both anaconda and initial setup so this

00:26:37,639 --> 00:26:43,159
is a replacement for the Hayden plugin

00:26:40,399 --> 00:26:46,789
it was originally authored by our team

00:26:43,159 --> 00:26:49,849
member David Shea who was present on my

00:26:46,789 --> 00:26:54,019
workshop on how to how to write anaconda

00:26:49,849 --> 00:26:59,269
adults and so he wrote one on the way

00:26:54,019 --> 00:27:03,409
back home and it's now the kdump Adam it

00:26:59,269 --> 00:27:05,899
uses a a new feature which are the head

00:27:03,409 --> 00:27:08,179
header options in a kickstart file if

00:27:05,899 --> 00:27:10,999
you want to use an add-on you type a

00:27:08,179 --> 00:27:13,009
percent add-on and then there is an %

00:27:10,999 --> 00:27:18,499
end and everything between these two

00:27:13,009 --> 00:27:20,389
lines is passed to the atom but in some

00:27:18,499 --> 00:27:22,969
cases it's just easier to use some

00:27:20,389 --> 00:27:26,959
options so the person I don't option

00:27:22,969 --> 00:27:29,299
line also now accepts options like dice

00:27:26,959 --> 00:27:32,209
dash enabled is just disabled or

00:27:29,299 --> 00:27:35,539
wherever so it's a it's an alternative

00:27:32,209 --> 00:27:39,229
way how to process the data from user in

00:27:35,539 --> 00:27:42,700
a in a simpler way I think it has both

00:27:39,229 --> 00:27:46,099
graphical and text mode versions and

00:27:42,700 --> 00:27:50,179
yeah so it allowed hello does to drop

00:27:46,099 --> 00:27:52,669
that ugly first boot screen another

00:27:50,179 --> 00:27:55,789
example of the same is the subscription

00:27:52,669 --> 00:27:57,440
manager atom which is a replacement of

00:27:55,789 --> 00:27:59,389
again of the first boot plugging and

00:27:57,440 --> 00:28:03,019
since these two things why are the only

00:27:59,389 --> 00:28:05,749
two things left in first group with

00:28:03,019 --> 00:28:08,570
these two things moved into anaconda and

00:28:05,749 --> 00:28:10,820
initial setup we can get rid of fern

00:28:08,570 --> 00:28:12,619
good actually we can get rid of it

00:28:10,820 --> 00:28:14,659
completely because there are some

00:28:12,619 --> 00:28:16,789
third-party plugins that we

00:28:14,659 --> 00:28:19,239
need to run but unless there are such

00:28:16,789 --> 00:28:21,289
plugins we just skip first boonton

00:28:19,239 --> 00:28:25,099
doesn't show people still don't have

00:28:21,289 --> 00:28:29,059
them around like 72 yeah I heard about

00:28:25,099 --> 00:28:31,489
some yeah so it runs in the initial

00:28:29,059 --> 00:28:34,970
setup utility which runs in during the

00:28:31,489 --> 00:28:36,799
first good and but it has a terrible

00:28:34,970 --> 00:28:39,440
integration into anacondas user

00:28:36,799 --> 00:28:42,769
experience in you I because it's they

00:28:39,440 --> 00:28:44,899
basically took the very same UI and just

00:28:42,769 --> 00:28:48,289
move it from first boots too anaconda

00:28:44,899 --> 00:28:50,059
where the desert experience is totally

00:28:48,289 --> 00:28:51,859
different because we don't use a visit

00:28:50,059 --> 00:28:54,710
like model so we are not going

00:28:51,859 --> 00:28:56,509
sequentially in screens you are you are

00:28:54,710 --> 00:28:59,840
just doing changes all at once and then

00:28:56,509 --> 00:29:03,109
then like comment to them so they didn't

00:28:59,840 --> 00:29:05,989
change anything like that and so far it

00:29:03,109 --> 00:29:09,409
has only a support it has only support

00:29:05,989 --> 00:29:12,739
for graphical user interface and it

00:29:09,409 --> 00:29:15,739
definitely needs more life so if you are

00:29:12,739 --> 00:29:19,840
willing to volunteer it would be great

00:29:15,739 --> 00:29:23,929
if you could make it make it nicer and

00:29:19,840 --> 00:29:28,009
most recently our team member brian has

00:29:23,929 --> 00:29:30,080
been working on the dr adam of course it

00:29:28,009 --> 00:29:33,289
has a great potential because it has

00:29:30,080 --> 00:29:36,440
ducker in it too so it's something we

00:29:33,289 --> 00:29:39,529
have to do it elves to set up and run

00:29:36,440 --> 00:29:42,559
the curb before rebooting into the newly

00:29:39,529 --> 00:29:45,169
installed system and you can choose from

00:29:42,559 --> 00:29:47,749
either from the storage backends so you

00:29:45,169 --> 00:29:51,859
can either use LVN thin provisioning

00:29:47,749 --> 00:29:55,609
orbit RFS or overall effects so you can

00:29:51,859 --> 00:29:58,249
tweet at it is in very early development

00:29:55,609 --> 00:30:01,009
phase so the functionality right now is

00:29:58,249 --> 00:30:03,200
quite limited but as i mentioned it has

00:30:01,009 --> 00:30:08,119
great potential and so far it only

00:30:03,200 --> 00:30:11,599
supports kickstart but i think i think

00:30:08,119 --> 00:30:14,330
the plan for for this atom is to also do

00:30:11,599 --> 00:30:16,190
some fetching of the container and

00:30:14,330 --> 00:30:18,169
sometimes like that so you could specify

00:30:16,190 --> 00:30:20,149
which containers we want to get to your

00:30:18,169 --> 00:30:22,039
system in an inner kick-start and then

00:30:20,149 --> 00:30:22,520
you can just install thousands of

00:30:22,039 --> 00:30:25,450
machines

00:30:22,520 --> 00:30:29,120
this and we will get something like that

00:30:25,450 --> 00:30:31,310
yeah and as you can probably imagine i'm

00:30:29,120 --> 00:30:33,620
not sure if you know that but the escape

00:30:31,310 --> 00:30:35,810
tool allows can scam containers so we

00:30:33,620 --> 00:30:38,120
can actually combine these two adults to

00:30:35,810 --> 00:30:40,550
like french the containers and then it's

00:30:38,120 --> 00:30:45,020
kept them from the scan them from the

00:30:40,550 --> 00:30:48,710
other item it's probably a promising

00:30:45,020 --> 00:30:51,740
future okay that's all for me about the

00:30:48,710 --> 00:30:58,510
current status of the add-ons thank you

00:30:51,740 --> 00:30:58,510
for your attention yeah sure bring back

00:30:59,440 --> 00:31:09,410
772 ask network you means now you must

00:31:06,890 --> 00:31:12,170
not a possibility to do in my menu

00:31:09,410 --> 00:31:16,460
select sleep network config network add

00:31:12,170 --> 00:31:22,820
a product can ask hunter energy but we

00:31:16,460 --> 00:31:25,160
do you mean like in the very early stage

00:31:22,820 --> 00:31:27,170
like yeah it's well it's not possible

00:31:25,160 --> 00:31:31,070
because actually the atoms are run in

00:31:27,170 --> 00:31:34,370
the when an anaconda start so you cannot

00:31:31,070 --> 00:31:37,280
for example do things that early to

00:31:34,370 --> 00:31:39,440
determine from which for which in depth

00:31:37,280 --> 00:31:45,080
through which interface to fetch a quick

00:31:39,440 --> 00:31:49,160
start something that we don't know you

00:31:45,080 --> 00:31:54,370
don't work really trendy translations

00:31:49,160 --> 00:32:00,410
and keyboards and I have to pick

00:31:54,370 --> 00:32:04,240
interface Jake reductions or we still

00:32:00,410 --> 00:32:04,240
support case device of its

00:32:06,560 --> 00:32:12,780
okay I may go make Shelley with one more

00:32:09,360 --> 00:32:14,640
thing it's just one flight so it's a

00:32:12,780 --> 00:32:18,090
very short presentation about and I come

00:32:14,640 --> 00:32:20,970
back k eggs egg you probably know k

00:32:18,090 --> 00:32:24,390
exact it's good for testing changes you

00:32:20,970 --> 00:32:28,650
do to the linux kernel but we do it we

00:32:24,390 --> 00:32:30,720
we use it in a different way you can

00:32:28,650 --> 00:32:33,420
either specify des des kay exact when

00:32:30,720 --> 00:32:36,390
running anaconda directly which is not

00:32:33,420 --> 00:32:38,040
recommend it and nobody should ever do

00:32:36,390 --> 00:32:40,110
that unless you do some special things

00:32:38,040 --> 00:32:44,070
unless you really know what you are

00:32:40,110 --> 00:32:46,830
doing or you can specify reboot dish

00:32:44,070 --> 00:32:49,050
dash K exactly in your kick start I

00:32:46,830 --> 00:32:53,360
checked and so far it looks like there

00:32:49,050 --> 00:32:56,790
is no in stock k exact boot option I

00:32:53,360 --> 00:32:59,010
don't know don't know why actually but

00:32:56,790 --> 00:33:02,400
it seems like it's just missing in the

00:32:59,010 --> 00:33:06,000
code so it should be an easy easy fix if

00:33:02,400 --> 00:33:07,710
somebody love needs that well basically

00:33:06,000 --> 00:33:10,080
what happens is that an icon downloads

00:33:07,710 --> 00:33:12,500
the installed caramel and image already

00:33:10,080 --> 00:33:18,420
image at the end of the installation and

00:33:12,500 --> 00:33:21,360
then it brands systemctl k KX I which is

00:33:18,420 --> 00:33:23,610
faster than a full reboot and but you

00:33:21,360 --> 00:33:26,490
were at the very end of the installation

00:33:23,610 --> 00:33:30,360
you get two freshly installed system you

00:33:26,490 --> 00:33:32,100
skip doing the full reboot so for

00:33:30,360 --> 00:33:35,060
example you skip bios and used to keep

00:33:32,100 --> 00:33:38,700
the bootloader and things like that but

00:33:35,060 --> 00:33:41,490
i would say that it's primarily meant

00:33:38,700 --> 00:33:44,190
for testing purposes i'm not sure if we

00:33:41,490 --> 00:33:47,130
are ever going to support things like

00:33:44,190 --> 00:33:50,550
okay you will to provision your real

00:33:47,130 --> 00:33:53,400
system really fast you should do k exact

00:33:50,550 --> 00:33:55,500
I think it's more like oh ok if you are

00:33:53,400 --> 00:33:58,170
running tests and then you want to see

00:33:55,500 --> 00:34:01,190
how the installed system works then run

00:33:58,170 --> 00:34:01,190
k exec and check that

00:34:02,920 --> 00:34:14,450
I think so i think it's rels oh yeah

00:34:11,510 --> 00:34:17,540
okay let me check I well they fine yeah

00:34:14,450 --> 00:34:26,090
I'm UK exact with good scrub and I

00:34:17,540 --> 00:34:28,160
thought that yeah well I'm not

00:34:26,090 --> 00:34:30,260
particular sure let me check it then I

00:34:28,160 --> 00:34:34,180
will tell you I Turk if it's if it's not

00:34:30,260 --> 00:34:37,280
them it's we can just file an rfe and

00:34:34,180 --> 00:34:43,820
port it to real so it should be quite

00:34:37,280 --> 00:34:47,300
easy there is certainly stop we just

00:34:43,820 --> 00:34:48,830
edit because someone asked us and could

00:34:47,300 --> 00:34:50,960
be dipped like that didn't really

00:34:48,830 --> 00:34:56,020
propagate to people using an appointed

00:34:50,960 --> 00:35:04,820
as he has stuff like this yeah working

00:34:56,020 --> 00:35:09,500
great from good if you talkin to take

00:35:04,820 --> 00:35:17,420
out of pocket okay okay oh okay so like

00:35:09,500 --> 00:35:20,560
okay so like yeah the constant kinda

00:35:17,420 --> 00:35:26,420
like is the question of productions Oh

00:35:20,560 --> 00:35:39,470
pages yeah this looks like anaconda boot

00:35:26,420 --> 00:35:44,180
options okay marvelous so yeah I gonna

00:35:39,470 --> 00:35:48,460
boot options on we're actually yeah

00:35:44,180 --> 00:35:52,310
another this okay so then right before

00:35:48,460 --> 00:35:55,250
it's two options actually there is a lot

00:35:52,310 --> 00:35:57,650
of boot options for anaconda and it's

00:35:55,250 --> 00:36:01,130
actually like it's both good options and

00:35:57,650 --> 00:36:04,730
not because you can run anacondas

00:36:01,130 --> 00:36:07,130
program for example for her live CD on

00:36:04,730 --> 00:36:09,620
live CD just running system and

00:36:07,130 --> 00:36:12,530
unless an application so it's actually

00:36:09,620 --> 00:36:14,600
also command line argument just

00:36:12,530 --> 00:36:16,520
something I cannot make sense when

00:36:14,600 --> 00:36:18,380
running a certain application and some

00:36:16,520 --> 00:36:20,900
of them kind of don't make sense running

00:36:18,380 --> 00:36:22,400
using them as a boot options but usually

00:36:20,900 --> 00:36:28,850
if you look at the arguments you will

00:36:22,400 --> 00:36:31,730
find out 47 of them at the moment also

00:36:28,850 --> 00:36:34,220
some like technical staff really really

00:36:31,730 --> 00:36:37,460
use the inspirations if using these

00:36:34,220 --> 00:36:42,260
arguments as boot options otherwise you

00:36:37,460 --> 00:36:45,680
can basically collide with other stuff

00:36:42,260 --> 00:36:48,800
like some some people might remember the

00:36:45,680 --> 00:36:51,200
problem with the debug boot option that

00:36:48,800 --> 00:36:54,920
got consumed by cables kernel and system

00:36:51,200 --> 00:36:56,900
d and major system blow up so it could

00:36:54,920 --> 00:36:59,270
be that you can get something like this

00:36:56,900 --> 00:37:02,240
because like you use an electronic boot

00:36:59,270 --> 00:37:04,940
option for some reason kernels is tender

00:37:02,240 --> 00:37:08,120
and whatever might also parsing and like

00:37:04,940 --> 00:37:10,760
to a funny stuff we don't enforce these

00:37:08,120 --> 00:37:12,920
graphics yet but we will probably do

00:37:10,760 --> 00:37:18,230
that in the future because it's good

00:37:12,920 --> 00:37:22,730
thing to do in place for ya for example

00:37:18,230 --> 00:37:24,800
the drag good stuff has the RV something

00:37:22,730 --> 00:37:27,470
prefix and if I think it's like the way

00:37:24,800 --> 00:37:29,030
to go for most of these tools the only

00:37:27,470 --> 00:37:30,470
problem would be the transom platform so

00:37:29,030 --> 00:37:32,780
you have some limitations on what on the

00:37:30,470 --> 00:37:36,620
length of good options and if you do

00:37:32,780 --> 00:37:40,900
network configuration in yeah okay so

00:37:36,620 --> 00:37:40,900
here bonding configuration

00:37:41,510 --> 00:37:50,880
we have an RFC 45 passing gig starts

00:37:46,310 --> 00:37:54,600
over good options and flows we kinda

00:37:50,880 --> 00:37:56,850
rejected it yeah so if you're using an

00:37:54,600 --> 00:38:00,330
application can do the same stuff but

00:37:56,850 --> 00:38:02,910
like you codes build options oh yeah

00:38:00,330 --> 00:38:04,950
basically the idea is that we like to

00:38:02,910 --> 00:38:08,340
point people to these slides so it has

00:38:04,950 --> 00:38:10,970
these huge has links in it you can get

00:38:08,340 --> 00:38:14,400
the slides there we will get it to the

00:38:10,970 --> 00:38:16,530
conference room guy so it should be easy

00:38:14,400 --> 00:38:19,140
to get to these slides and this is

00:38:16,530 --> 00:38:22,020
information pointers so if you want to

00:38:19,140 --> 00:38:25,710
have a listing of the options bar L or

00:38:22,020 --> 00:38:29,660
perky Dora or like the upstream ones get

00:38:25,710 --> 00:38:33,390
these slides and you get the link also

00:38:29,660 --> 00:38:35,700
anaconda all the options are you 90 day

00:38:33,390 --> 00:38:37,350
help text so if you have anaconda

00:38:35,700 --> 00:38:39,630
installed just around electron down

00:38:37,350 --> 00:38:42,810
manners manners help and you will get

00:38:39,630 --> 00:38:47,460
all 47 options and description for each

00:38:42,810 --> 00:38:49,560
of them all so basically its location on

00:38:47,460 --> 00:38:52,080
assumption so I like I could be there

00:38:49,560 --> 00:38:54,630
for an hour and this tall them will be

00:38:52,080 --> 00:38:56,880
boring as hell basically this is what we

00:38:54,630 --> 00:38:59,400
use when we develop anaconda and that

00:38:56,880 --> 00:39:03,570
guess could be useful for others we know

00:38:59,400 --> 00:39:05,790
this work and how they were so r example

00:39:03,570 --> 00:39:07,800
if you don't want this annoying welcome

00:39:05,790 --> 00:39:09,900
screen with selecting language set the

00:39:07,800 --> 00:39:13,380
language we are about option and you

00:39:09,900 --> 00:39:18,570
will get right to the half yeah updates

00:39:13,380 --> 00:39:22,260
of stage 2 don't use root live whatever

00:39:18,570 --> 00:39:24,840
for booting stuff is it's straight way

00:39:22,260 --> 00:39:27,540
to help basically it's some crazy

00:39:24,840 --> 00:39:30,900
Draycott stuff it's not controlled by us

00:39:27,540 --> 00:39:33,119
and just nasty things when booting over

00:39:30,900 --> 00:39:37,260
the network don't ever use it use inst

00:39:33,119 --> 00:39:39,990
point stage 2 otherwise it's crazy that

00:39:37,260 --> 00:39:42,869
yeah if you don't want to see the code

00:39:39,990 --> 00:39:46,390
and rated for it I think it downloads

00:39:42,869 --> 00:39:50,980
the stage 2 overall interfaces you have

00:39:46,390 --> 00:39:55,150
on the machine at 15 more everywhere do

00:39:50,980 --> 00:39:59,170
it yeah I'm debug for examples our debug

00:39:55,150 --> 00:40:01,960
so instant debug now we will eat it it

00:39:59,170 --> 00:40:04,210
also so can we will eat it and system

00:40:01,960 --> 00:40:06,789
you know you don't do that yeah we can

00:40:04,210 --> 00:40:08,950
see you can even do VNC connect so

00:40:06,789 --> 00:40:11,799
basically you can have a client running

00:40:08,950 --> 00:40:15,599
as a server locally it's kinda handy and

00:40:11,799 --> 00:40:15,599
to connect cool i will connect to it

00:40:24,599 --> 00:40:34,420
because you can run a city now from

00:40:28,089 --> 00:40:38,440
anaconda so is it possible to add an

00:40:34,420 --> 00:40:41,140
option to know that mrs. H so

00:40:38,440 --> 00:40:48,099
interesting idea because I on sensitive

00:40:41,140 --> 00:40:50,890
situation and you can stop it so it's a

00:40:48,099 --> 00:40:57,190
great idea nobody has ever in 5 30 and

00:40:50,890 --> 00:41:00,099
join one decision yeah you can run the

00:40:57,190 --> 00:41:02,650
ssh actually and you're like where is SH

00:41:00,099 --> 00:41:04,569
to the installation yeah so it should

00:41:02,650 --> 00:41:06,069
not be a difficult yes you have yes you

00:41:04,569 --> 00:41:08,019
know you look the host only and you

00:41:06,069 --> 00:41:12,369
can't get up connect with a client why

00:41:08,019 --> 00:41:15,099
Isis age so yeah if you want it's a good

00:41:12,369 --> 00:41:20,410
option or something certainly flower are

00:41:15,099 --> 00:41:22,599
f ed please work Ronnie you can connect

00:41:20,410 --> 00:41:24,309
a client what do you mean to do it

00:41:22,599 --> 00:41:26,829
manually so might not be better to

00:41:24,309 --> 00:41:29,339
somehow boy ultimate it I'm not really

00:41:26,829 --> 00:41:31,539
sure i get a moment how exactly but

00:41:29,339 --> 00:41:34,059
certainly good idea it was like it's

00:41:31,539 --> 00:41:36,849
really insecure like eight directors

00:41:34,059 --> 00:41:40,200
password stop it no longer since the the

00:41:36,849 --> 00:41:42,430
path of plaintext go network at least

00:41:40,200 --> 00:41:47,349
what is it was not visible in the

00:41:42,430 --> 00:41:51,130
wireshark oh cool so yeah image creation

00:41:47,349 --> 00:41:53,619
if you have the urge to write your own

00:41:51,130 --> 00:41:54,070
image creation to don't do that we have

00:41:53,619 --> 00:41:58,770
this

00:41:54,070 --> 00:42:02,130
and we have it handled and I think we

00:41:58,770 --> 00:42:04,480
did do it in quite the same way and

00:42:02,130 --> 00:42:06,640
usually it's not in the same way if you

00:42:04,480 --> 00:42:08,290
just like make something together so

00:42:06,640 --> 00:42:10,120
please please use and I corner for a

00:42:08,290 --> 00:42:13,450
niche creation we know what we are doing

00:42:10,120 --> 00:42:19,870
in this case and we have tools like

00:42:13,450 --> 00:42:24,580
Lorax and life like that yes it's

00:42:19,870 --> 00:42:26,560
working please use it um you have more

00:42:24,580 --> 00:42:29,440
exotic options like the kicks eight

00:42:26,560 --> 00:42:31,750
staff gratis not mention and it's all in

00:42:29,440 --> 00:42:33,970
the dogs like it should be at least

00:42:31,750 --> 00:42:36,820
there are any issues it looks like it's

00:42:33,970 --> 00:42:39,640
on on github if it's in the Royal dogs

00:42:36,820 --> 00:42:41,590
like file bugs alas there people from

00:42:39,640 --> 00:42:43,990
the fermentation are really really glad

00:42:41,590 --> 00:42:47,470
when they get feedback and fixed up what

00:42:43,990 --> 00:42:50,800
really quickly remote logging turn off

00:42:47,470 --> 00:42:53,470
ssl if you really want to G occasion

00:42:50,800 --> 00:42:56,680
there is G occasion since seven

00:42:53,470 --> 00:42:58,810
basically since piranha like 19 how you

00:42:56,680 --> 00:43:02,680
can turn it off if you want to or settle

00:42:58,810 --> 00:43:04,780
different provider rescue mode like just

00:43:02,680 --> 00:43:10,420
wonderful thing it wants your route and

00:43:04,780 --> 00:43:13,030
the sweet sometimes yeah memory check

00:43:10,420 --> 00:43:14,410
basically if I thing is that if you are

00:43:13,030 --> 00:43:16,240
doing a network installation you

00:43:14,410 --> 00:43:18,400
actually might need more around for

00:43:16,240 --> 00:43:20,020
installation in photosystem because you

00:43:18,400 --> 00:43:24,820
are really into ran before you can

00:43:20,020 --> 00:43:27,070
before you format the storage but if you

00:43:24,820 --> 00:43:28,870
really think it's incorrect or something

00:43:27,070 --> 00:43:32,650
we need to have some margin you can turn

00:43:28,870 --> 00:43:34,870
it off with this one you know we have we

00:43:32,650 --> 00:43:38,560
have some numbers that are much greater

00:43:34,870 --> 00:43:40,990
than what we actually need because if

00:43:38,560 --> 00:43:42,760
you have less than would we add into

00:43:40,990 --> 00:43:46,000
this number the installation is really

00:43:42,760 --> 00:43:48,040
slow and basically unusable but it's not

00:43:46,000 --> 00:43:49,870
impossible so for example you can

00:43:48,040 --> 00:43:52,880
install further I would like I think it

00:43:49,870 --> 00:43:58,510
was something slightly over 200 mega

00:43:52,880 --> 00:44:01,100
Graham but it's really a long long term

00:43:58,510 --> 00:44:04,550
we always say we sometimes need to use

00:44:01,100 --> 00:44:07,400
the null em check option just to do not

00:44:04,550 --> 00:44:10,400
and i cannot exit early on the check

00:44:07,400 --> 00:44:13,010
even though you can involve system we

00:44:10,400 --> 00:44:15,590
already actually do RAND Corporation and

00:44:13,010 --> 00:44:18,680
it helps a lot it basically like Lord

00:44:15,590 --> 00:44:21,110
our memory requirements by pop like

00:44:18,680 --> 00:44:28,250
since life is tough implemented it just

00:44:21,110 --> 00:44:32,090
let Ryan and some custom stuff I think I

00:44:28,250 --> 00:44:36,160
save so yeah just like rich this thing

00:44:32,090 --> 00:44:44,330
and you move on to the gist of it yeah

00:44:36,160 --> 00:44:46,730
so I think our egos have a check that

00:44:44,330 --> 00:44:50,240
the McClain's I be supporting your

00:44:46,730 --> 00:45:04,730
awesome brunch I'm not sure it's okay

00:44:50,240 --> 00:45:11,150
come on but the thing is not quite sure

00:45:04,730 --> 00:45:14,570
how much how much r QE and support teams

00:45:11,150 --> 00:45:18,260
one people to use it so it doesn't made

00:45:14,570 --> 00:45:23,740
you this could be the reason why it's

00:45:18,260 --> 00:45:23,740
not technology but its application

00:45:44,249 --> 00:45:53,019
okay I think you can even just because

00:45:49,839 --> 00:45:54,819
the glorious attitude or you fi such a

00:45:53,019 --> 00:45:56,440
group including inflation and never

00:45:54,819 --> 00:46:03,069
moved into the actual system because

00:45:56,440 --> 00:46:05,789
that always happens in here so my name

00:46:03,069 --> 00:46:10,089
is Eric Idle and I'm talking more about

00:46:05,789 --> 00:46:13,359
development and debugging site about

00:46:10,089 --> 00:46:20,559
grunting when I come to update and I

00:46:13,359 --> 00:46:22,920
also touch modifying installer for

00:46:20,559 --> 00:46:25,630
specific products like Federer

00:46:22,920 --> 00:46:28,720
workstation with several flavors which

00:46:25,630 --> 00:46:37,299
is using basically the same technology

00:46:28,720 --> 00:46:40,690
at the moment so we are using round time

00:46:37,299 --> 00:46:49,440
updates a lot for debugging and testing

00:46:40,690 --> 00:46:52,089
and it's there especially useful for

00:46:49,440 --> 00:46:54,880
issues which we are not able to

00:46:52,089 --> 00:47:01,930
reproduce local if we we send updates

00:46:54,880 --> 00:47:06,400
image to customer or two-person able to

00:47:01,930 --> 00:47:13,289
reproduce buggin and we are kind of the

00:47:06,400 --> 00:47:17,289
developing remotely this clumsy way and

00:47:13,289 --> 00:47:19,690
sometimes we use updates images also for

00:47:17,289 --> 00:47:24,730
host picks up dates for example federal

00:47:19,690 --> 00:47:27,239
common bucks can have a link to two

00:47:24,730 --> 00:47:32,739
updates image which fixes the problem I

00:47:27,239 --> 00:47:34,650
read after release updates images allows

00:47:32,739 --> 00:47:37,540
us to

00:47:34,650 --> 00:47:40,180
update the installed without rebuilding

00:47:37,540 --> 00:47:44,220
installed images which are unitary image

00:47:40,180 --> 00:47:47,050
and install install image itself and

00:47:44,220 --> 00:47:52,540
also sometimes without rebuilding

00:47:47,050 --> 00:47:57,240
anaconda or with other hiking start with

00:47:52,540 --> 00:47:57,240
piping packages

00:48:02,370 --> 00:48:12,480
what's up dates image its compressed

00:48:06,480 --> 00:48:19,140
cpio archive of file system overload we

00:48:12,480 --> 00:48:22,450
are using updates and images updates of

00:48:19,140 --> 00:48:29,290
hrd we call it in the in Atari overlay

00:48:22,450 --> 00:48:36,040
and of the installer image the in Atari

00:48:29,290 --> 00:48:40,090
overlay is used for the early stage of

00:48:36,040 --> 00:48:43,960
installation for where we for example

00:48:40,090 --> 00:48:49,410
will fetch installer image kickstart

00:48:43,960 --> 00:48:57,250
driver updates and install image update

00:48:49,410 --> 00:49:01,500
yeah and the updates image it updates

00:48:57,250 --> 00:49:08,770
the file system of the install

00:49:01,500 --> 00:49:11,800
environment so the early stage you need

00:49:08,770 --> 00:49:16,990
re oh boy it's applied on top of a tardy

00:49:11,800 --> 00:49:21,160
root example is debugging parsing

00:49:16,990 --> 00:49:26,380
kick-starting in any drama fest we do it

00:49:21,160 --> 00:49:31,080
with this Python script it can be used

00:49:26,380 --> 00:49:36,190
to testing for testing very good patches

00:49:31,080 --> 00:49:39,670
to apply the oberoi you have well you

00:49:36,190 --> 00:49:42,310
need to install a bit method which

00:49:39,670 --> 00:49:46,150
allows you to supply in it early of

00:49:42,310 --> 00:49:52,350
course and for pics instruction you can

00:49:46,150 --> 00:49:57,550
just add the over light to the options I

00:49:52,350 --> 00:50:03,990
think this works also in weird weird

00:49:57,550 --> 00:50:09,510
manager with direct colonel boot well

00:50:03,990 --> 00:50:13,970
this is just more convenience think

00:50:09,510 --> 00:50:22,849
because you can also update the in it

00:50:13,970 --> 00:50:27,470
we directly the installer image overlays

00:50:22,849 --> 00:50:32,270
are more interesting they are applied

00:50:27,470 --> 00:50:36,290
during the early rated stage and they

00:50:32,270 --> 00:50:40,010
are overlaying root filesystem this is

00:50:36,290 --> 00:50:45,040
true for l7 and fedora where we are

00:50:40,010 --> 00:50:50,300
using jacket for every steak around six

00:50:45,040 --> 00:50:56,630
we used to have our out our own in it

00:50:50,300 --> 00:50:59,349
and loader binaries so yeah intersects

00:50:56,630 --> 00:51:01,849
the functional p is quite limited

00:50:59,349 --> 00:51:05,170
basically to updating updating the

00:51:01,849 --> 00:51:14,210
installer and perhaps overriding some

00:51:05,170 --> 00:51:18,339
libraries so what are we using the

00:51:14,210 --> 00:51:23,060
installer image for we can update

00:51:18,339 --> 00:51:28,280
anaconda we have needs to rebuild the

00:51:23,060 --> 00:51:35,619
package but we can also modify config

00:51:28,280 --> 00:51:41,000
files for example we are i am using it

00:51:35,619 --> 00:51:45,380
often for increasing volume level of

00:51:41,000 --> 00:51:51,670
network manager but I think in next

00:51:45,380 --> 00:52:00,070
students as we are made making it

00:51:51,670 --> 00:52:00,070
difficult to debug like yeah by default

00:52:03,660 --> 00:52:10,770
we can also supply updated RPM package

00:52:07,710 --> 00:52:14,260
but then you have to be careful about

00:52:10,770 --> 00:52:18,520
dependencies of the package we have a

00:52:14,260 --> 00:52:23,170
tool for creating updates images which

00:52:18,520 --> 00:52:25,930
has an option to need to try to resolve

00:52:23,170 --> 00:52:28,510
the dependencies and and I make sure you

00:52:25,930 --> 00:52:31,210
just like chicks the spec file for a new

00:52:28,510 --> 00:52:33,490
start yeah since the tag you are using

00:52:31,210 --> 00:52:36,490
for bait in the a base image and just

00:52:33,490 --> 00:52:38,230
touches that so it's basically all stood

00:52:36,490 --> 00:52:42,370
for updating our libraries like

00:52:38,230 --> 00:52:46,210
blizzards and fighting stop it's not

00:52:42,370 --> 00:52:48,480
introducing you letting third eye these

00:52:46,210 --> 00:52:54,820
dependencies or whatever till you help

00:52:48,480 --> 00:52:57,190
240 wagon will open and you can look you

00:52:54,820 --> 00:52:59,500
can add whatever you want you can add

00:52:57,190 --> 00:53:06,760
packages to the road near new pictures

00:52:59,500 --> 00:53:13,240
you can add debugging tools so how are

00:53:06,760 --> 00:53:15,720
we configure the update city studios we

00:53:13,240 --> 00:53:19,270
can use boot options kick start command

00:53:15,720 --> 00:53:26,040
or you can put updates image in before

00:53:19,270 --> 00:53:32,940
load location in installation repo or

00:53:26,040 --> 00:53:32,940
for the any dark image you can also

00:53:33,870 --> 00:53:45,420
extract the updates image in default

00:53:37,870 --> 00:53:52,180
location but this is like not very used

00:53:45,420 --> 00:53:57,300
so the production is in updates they

00:53:52,180 --> 00:53:57,300
basically the updates image can be

00:53:57,960 --> 00:54:07,510
fetched in always will we're talking

00:54:02,980 --> 00:54:11,520
about driver update disks so from by

00:54:07,510 --> 00:54:11,520
HTTP or from disk device

00:54:12,339 --> 00:54:21,519
and yeah that's for boot options for

00:54:18,219 --> 00:54:32,099
kick start command it can be fitted by

00:54:21,519 --> 00:54:32,099
via HTTP the default location is in

00:54:32,700 --> 00:54:38,739
installation tree its images updates

00:54:35,890 --> 00:54:44,940
image or images product image I will get

00:54:38,739 --> 00:54:44,940
to this later to the product image and

00:54:47,009 --> 00:54:52,859
the image can be added to the tree

00:54:54,150 --> 00:55:05,890
during image build process which is done

00:54:59,920 --> 00:55:07,660
by Lorax if you if you put the content

00:55:05,890 --> 00:55:10,119
of the image in a specific directory

00:55:07,660 --> 00:55:16,749
over X will automatically take it and

00:55:10,119 --> 00:55:21,219
and create the updated product image in

00:55:16,749 --> 00:55:25,359
any tardy you can put the content of

00:55:21,219 --> 00:55:35,200
updates image in route in updates

00:55:25,359 --> 00:55:41,670
directory it's the uncompressed image so

00:55:35,200 --> 00:55:44,890
product image right image is part of

00:55:41,670 --> 00:55:49,319
installation tree and it's used the hole

00:55:44,890 --> 00:55:49,319
for product specific modifications

00:55:50,249 --> 00:55:59,009
basically now it contains a stylesheet

00:55:55,089 --> 00:56:02,349
to modify look of the installer and

00:55:59,009 --> 00:56:12,210
product specific installer code it's an

00:56:02,349 --> 00:56:15,700
instant class module python module which

00:56:12,210 --> 00:56:19,479
the instant cast party module has no

00:56:15,700 --> 00:56:23,969
strictly defined API it's it's supposed

00:56:19,479 --> 00:56:23,969
to be to be provided by the

00:56:24,529 --> 00:56:38,069
spin providers or or product providers

00:56:29,009 --> 00:56:39,930
and basically it inherits from federal

00:56:38,069 --> 00:56:46,170
base in style class modify some

00:56:39,930 --> 00:56:51,979
attributes or add some overrides some

00:56:46,170 --> 00:56:56,420
methods but as I said there is no no

00:56:51,979 --> 00:56:56,420
like really defined API

00:57:00,390 --> 00:57:08,700
the modifications we do in which which

00:57:05,220 --> 00:57:12,289
are done in a product specific in stock

00:57:08,700 --> 00:57:15,740
class is now our style sheet to be used

00:57:12,289 --> 00:57:22,980
before file system for example federer

00:57:15,740 --> 00:57:28,470
server is using XFS different software

00:57:22,980 --> 00:57:32,730
selection of course and it can be also

00:57:28,470 --> 00:57:38,390
default partitioning which is done in

00:57:32,730 --> 00:57:38,390
more federal atomic spin

00:57:41,670 --> 00:57:55,819
yeah as I said the product image is

00:57:51,740 --> 00:58:05,450
packaged in a federal product image

00:57:55,819 --> 00:58:11,359
package and this package is included in

00:58:05,450 --> 00:58:11,359
kick-starts for composing Federer spins

00:58:11,720 --> 00:58:23,700
so in the kickstart we exclude other

00:58:18,630 --> 00:58:29,609
packages and include the package for the

00:58:23,700 --> 00:58:36,990
product what the package contains the

00:58:29,609 --> 00:58:43,079
product image package it's the content

00:58:36,990 --> 00:58:48,900
of product image the root over root

00:58:43,079 --> 00:58:52,589
filesystem over life is located in

00:58:48,900 --> 00:58:54,750
usershare works product path and this is

00:58:52,589 --> 00:59:01,020
the default location which rocks pics

00:58:54,750 --> 00:59:05,030
and then generate images product image

00:59:01,020 --> 00:59:05,030
in the Indian three

00:59:10,290 --> 00:59:21,370
so for creating updates images you can

00:59:17,350 --> 00:59:25,810
do it manually type wear whatever you

00:59:21,370 --> 00:59:32,470
want but for the development and also

00:59:25,810 --> 00:59:35,230
for also for other cases you can use the

00:59:32,470 --> 00:59:40,030
script script we provide in in our gate

00:59:35,230 --> 00:59:46,030
it's make update script and this is a

00:59:40,030 --> 00:59:50,650
few of options basic basic functionality

00:59:46,030 --> 00:59:58,380
is just to update to make updates image

00:59:50,650 --> 01:00:04,420
which updates the code relatively to

00:59:58,380 --> 01:00:10,120
some bits tag it is also an option to

01:00:04,420 --> 01:00:17,140
add rpm and as I said to add rpm

01:00:10,120 --> 01:00:19,770
dependencies incurred from the from edit

01:00:17,140 --> 01:00:19,770
rpms

01:00:23,010 --> 01:00:26,510
yeah that's it

01:00:31,059 --> 01:00:38,109
any questions wrong

01:00:48,340 --> 01:00:54,770
Papa Rishi yeah you know we must break

01:00:51,620 --> 01:01:16,190
break your slice few minutes before the

01:00:54,770 --> 01:01:18,110
presentation so hi my name is Stevie

01:01:16,190 --> 01:01:19,910
kochanie first of all sorry for my

01:01:18,110 --> 01:01:25,790
English I'm trying to get better but

01:01:19,910 --> 01:01:29,330
it's not that good at si1 it's sometimes

01:01:25,790 --> 01:01:32,690
good to do it a heart by and you get

01:01:29,330 --> 01:01:38,180
used to it I hope this won't hear my

01:01:32,690 --> 01:01:42,200
open manager so i won't through some a

01:01:38,180 --> 01:01:45,440
little research before is here someone

01:01:42,200 --> 01:01:51,190
from the QA testing herbs from group

01:01:45,440 --> 01:01:53,990
which is testing anaconda anyone did set

01:01:51,190 --> 01:01:56,840
we hope this will be a mainly

01:01:53,990 --> 01:02:01,580
presentation for them so how many of you

01:01:56,840 --> 01:02:04,430
did use anaconda I think all and how

01:02:01,580 --> 01:02:08,500
many of you did use going I'm going for

01:02:04,430 --> 01:02:14,960
the Anaconda graphical user interface

01:02:08,500 --> 01:02:17,810
you are you don't use it oh really ok so

01:02:14,960 --> 01:02:23,600
I hoped I should skip the first light

01:02:17,810 --> 01:02:29,530
but then so in graphic user interface

01:02:23,600 --> 01:02:33,470
you have two options how to how to

01:02:29,530 --> 01:02:35,930
create your partitions and I to prepare

01:02:33,470 --> 01:02:39,350
your installation or disk and so on so

01:02:35,930 --> 01:02:43,250
first is outer part which is also into a

01:02:39,350 --> 01:02:46,570
text to the enterprise ah that will

01:02:43,250 --> 01:02:48,820
automatically somehow some automatically

01:02:46,570 --> 01:02:52,660
writing or

01:02:48,820 --> 01:02:57,220
are created prepare your no free space

01:02:52,660 --> 01:03:01,570
and it will create so Apple and it will

01:02:57,220 --> 01:03:06,750
create root partition and so on and it

01:03:01,570 --> 01:03:11,350
should work without any user interaction

01:03:06,750 --> 01:03:15,610
but if you want something more you need

01:03:11,350 --> 01:03:20,790
to you need to do to go to custom spoke

01:03:15,610 --> 01:03:24,600
custom spoke is somehow our creation

01:03:20,790 --> 01:03:28,780
it's like she packed it but not with the

01:03:24,600 --> 01:03:31,420
similar options you can can specify

01:03:28,780 --> 01:03:34,030
where your partition will be it will

01:03:31,420 --> 01:03:40,090
take the first available free space

01:03:34,030 --> 01:03:42,220
where it could be and so on so we will

01:03:40,090 --> 01:03:45,400
create your root partition your boot

01:03:42,220 --> 01:03:50,560
partition swab and any anything you want

01:03:45,400 --> 01:03:54,730
no problem our problem is we can say so

01:03:50,560 --> 01:03:57,820
as I said when you using custom spoke it

01:03:54,730 --> 01:04:01,300
takes first available space which is not

01:03:57,820 --> 01:04:07,030
that white white would see user won't

01:04:01,300 --> 01:04:09,520
somehow sometimes also it's when you

01:04:07,030 --> 01:04:11,410
have butter face or lbn with snack

01:04:09,520 --> 01:04:17,310
shells or something like that you can

01:04:11,410 --> 01:04:22,360
have plenty of those and it's not really

01:04:17,310 --> 01:04:27,100
so easy to remove all snapshots or so we

01:04:22,360 --> 01:04:29,050
must click one by one so this will be

01:04:27,100 --> 01:04:32,800
this presentation will be more peek into

01:04:29,050 --> 01:04:36,220
the future i will show you what will be

01:04:32,800 --> 01:04:39,930
in the custom spoken f federer 24 and

01:04:36,220 --> 01:04:44,050
also what will be in the custom spoke in

01:04:39,930 --> 01:04:51,040
power future but I do I thought I think

01:04:44,050 --> 01:04:52,640
it won't be too far so I guess what it

01:04:51,040 --> 01:04:59,799
can do back

01:04:52,640 --> 01:05:04,640
oh whoops what you can do in the indoor

01:04:59,799 --> 01:05:07,700
custom spoke now so you can i'll take

01:05:04,640 --> 01:05:12,769
what what format do you want if you want

01:05:07,700 --> 01:05:15,079
lb and we have there we head there about

01:05:12,769 --> 01:05:20,059
records but i think we remove it because

01:05:15,079 --> 01:05:23,269
it is still there like I think so there

01:05:20,059 --> 01:05:26,329
yeah all right okay I know that well

01:05:23,269 --> 01:05:32,930
there was too many problems with it but

01:05:26,329 --> 01:05:35,690
it's possible i'd still there yeah so

01:05:32,930 --> 01:05:38,779
it's really nice if you need to work

01:05:35,690 --> 01:05:44,680
somehow with gel BM Adele Bianca she's

01:05:38,779 --> 01:05:48,130
implement it will be it will be its were

01:05:44,680 --> 01:05:51,769
practice laps works on the LVN cashew

01:05:48,130 --> 01:05:56,119
implementation so it will be here to in

01:05:51,769 --> 01:06:05,509
the future or maybe it's in federal 23 2

01:05:56,119 --> 01:06:09,589
i'm so that's how it looks now so new

01:06:05,509 --> 01:06:13,759
features okay there's a week insist sir

01:06:09,589 --> 01:06:19,849
I suggest sided all are already so new

01:06:13,759 --> 01:06:25,430
features for you fell around there will

01:06:19,849 --> 01:06:30,740
be new to selection it should be easy if

01:06:25,430 --> 01:06:37,670
this will be some standard standard or

01:06:30,740 --> 01:06:41,589
it's called some standard graphical item

01:06:37,670 --> 01:06:46,970
graphical interface but it's our

01:06:41,589 --> 01:06:52,150
accordion called and if it means this

01:06:46,970 --> 01:06:57,259
means to rework about half of it because

01:06:52,150 --> 01:06:59,200
yes it wasn't quite well implemented and

01:06:57,259 --> 01:07:05,480
gtk unfortunately

01:06:59,200 --> 01:07:10,609
yes that we need here yeah so it will be

01:07:05,480 --> 01:07:14,230
it to have control control selection

01:07:10,609 --> 01:07:16,940
sheet selection so it should be easy to

01:07:14,230 --> 01:07:20,599
remove your over for all of your

01:07:16,940 --> 01:07:26,690
snapshots and so on with this movie

01:07:20,599 --> 01:07:30,079
selection but in the fire future there

01:07:26,690 --> 01:07:38,140
should be third option as I knew which

01:07:30,079 --> 01:07:38,140
is literally you can use it now as a SS

01:07:38,349 --> 01:07:45,019
program in fedora it's it will be

01:07:41,690 --> 01:07:50,109
integrated to the Anaconda and shoot it

01:07:45,019 --> 01:07:50,109
should look like this it's somehow

01:07:50,890 --> 01:08:01,069
similar to the Jeep acted you can do do

01:07:55,940 --> 01:08:05,720
here the problem you can ring here are

01:08:01,069 --> 01:08:09,049
the problems which was before like you

01:08:05,720 --> 01:08:13,519
have 500 megabytes of space before the

01:08:09,049 --> 01:08:16,460
partition because I want I don't know if

01:08:13,519 --> 01:08:23,449
he give you my coded binary data or

01:08:16,460 --> 01:08:27,290
whatever so it should be possible and I

01:08:23,449 --> 01:08:31,759
hope it will be in failure 25 but I

01:08:27,290 --> 01:08:35,690
don't know now because it's so too much

01:08:31,759 --> 01:08:39,080
work to down it's like the currents

01:08:35,690 --> 01:08:42,080
custom spoke is like took down you just

01:08:39,080 --> 01:08:45,049
said I want an amount for Donnell DM is

01:08:42,080 --> 01:08:47,569
big and it does automatically open Yale

01:08:45,049 --> 01:08:49,819
yeah but some there are cases where

01:08:47,569 --> 01:08:52,370
people do want the different thing

01:08:49,819 --> 01:08:55,370
that's given to eat eggs combine all the

01:08:52,370 --> 01:08:59,179
small on the blog devices lbm alvey's

01:08:55,370 --> 01:09:01,219
and everything so basically some people

01:08:59,179 --> 01:09:03,050
won't use the app some people would like

01:09:01,219 --> 01:09:09,290
to have

01:09:03,050 --> 01:09:12,210
we like internet well or visually

01:09:09,290 --> 01:09:14,820
everything like what we are yes well it

01:09:12,210 --> 01:09:18,960
would be like a dessert option like on

01:09:14,820 --> 01:09:21,210
the part you have the custom spoke not

01:09:18,960 --> 01:09:22,980
so basically it could be for people said

01:09:21,210 --> 01:09:24,870
like this is too complicated you should

01:09:22,980 --> 01:09:27,180
do something more let's go to the gate

01:09:24,870 --> 01:09:34,800
so you have now launched a options we

01:09:27,180 --> 01:09:38,760
never will I French in all users add a

01:09:34,800 --> 01:09:44,190
good bill that will be all from do have

01:09:38,760 --> 01:09:47,310
some questions okay so please leave

01:09:44,190 --> 01:09:52,970
feedback maybe you can convince my auto

01:09:47,310 --> 01:09:52,970
team members to not let me go here again

01:09:53,090 --> 01:09:58,230
let me thank you I think the most

01:09:56,460 --> 01:09:59,850
important thing at the moment is to ask

01:09:58,230 --> 01:10:07,680
this obsession sharing what's our time

01:09:59,850 --> 01:10:11,520
are you only already out of time okay so

01:10:07,680 --> 01:10:13,080
basically I we have still some topics

01:10:11,520 --> 01:10:15,600
and I think would be the best to

01:10:13,080 --> 01:10:21,000
basically asked you which one is that we

01:10:15,600 --> 01:10:23,970
want to to have when I figured if an

01:10:21,000 --> 01:10:31,310
browser thing yeah okay another pass

01:10:23,970 --> 01:10:35,970
nice okay so we have we had boot options

01:10:31,310 --> 01:10:38,430
we have basically out of an a

01:10:35,970 --> 01:10:40,350
presentation covering the geeks are it's

01:10:38,430 --> 01:10:43,500
an overview about the kickstart former

01:10:40,350 --> 01:10:46,770
just do things you can do with it we

01:10:43,500 --> 01:10:48,780
have fun flights about the UH nocona

01:10:46,770 --> 01:10:51,240
development how anaconda is developed

01:10:48,780 --> 01:10:54,110
and how you can contribute to it value

01:10:51,240 --> 01:10:56,910
from you can find the source code and

01:10:54,110 --> 01:11:01,489
which different components are there for

01:10:56,910 --> 01:11:05,480
anaconda and then

01:11:01,489 --> 01:11:07,730
we have slides from erotic about network

01:11:05,480 --> 01:11:13,119
configuration about how you can

01:11:07,730 --> 01:11:13,119
configure the network in anaconda and I

01:11:13,480 --> 01:11:21,860
think it might be like what we have at

01:11:16,999 --> 01:11:23,690
the moment logging sites are like user

01:11:21,860 --> 01:11:28,010
blower yeah we have some slides about

01:11:23,690 --> 01:11:33,949
login on phone down not like they're

01:11:28,010 --> 01:11:35,840
like outside let's see so we have fixed

01:11:33,949 --> 01:11:38,420
our slides for kick-starts likes about

01:11:35,840 --> 01:11:40,249
Alec on the development and slides out

01:11:38,420 --> 01:11:47,650
the network configuration and I Condor

01:11:40,249 --> 01:11:47,650
so okay so that's what we're at it again

01:12:03,280 --> 01:12:13,540
so so I I would like to speak about

01:12:08,140 --> 01:12:17,570
support advice some workarounds and tips

01:12:13,540 --> 01:12:19,430
about configuring network in very good

01:12:17,570 --> 01:12:22,940
stage and I reckon that stage of

01:12:19,430 --> 01:12:27,800
installation it's all about if config

01:12:22,940 --> 01:12:31,310
files we are just working with info if

01:12:27,800 --> 01:12:33,860
config files creating configurations in

01:12:31,310 --> 01:12:35,810
these files and copying them to the

01:12:33,860 --> 01:12:40,130
installed system at the end of

01:12:35,810 --> 01:12:45,800
installation I conventional device types

01:12:40,130 --> 01:12:50,930
we support for various types of

01:12:45,800 --> 01:12:54,890
installations and some limitations so

01:12:50,930 --> 01:12:58,340
the installer is running two stages

01:12:54,890 --> 01:12:59,990
directed stage anaconda stage we we

01:12:58,340 --> 01:13:04,330
might need to do a network configuration

01:12:59,990 --> 01:13:04,330
directed stage early configuration and

01:13:05,950 --> 01:13:13,400
and we can / figure network also after

01:13:09,590 --> 01:13:16,630
switching to install environment as

01:13:13,400 --> 01:13:20,450
further this is the configuration of

01:13:16,630 --> 01:13:23,750
install networking the network

01:13:20,450 --> 01:13:30,050
configuration of target system as i said

01:13:23,750 --> 01:13:35,470
is basically the same as the

01:13:30,050 --> 01:13:35,470
configuration installer with some some

01:13:37,240 --> 01:13:44,810
small differences i will talk about

01:13:40,490 --> 01:13:49,690
later we are also configuring network in

01:13:44,810 --> 01:13:57,910
initial setup it's it was added recently

01:13:49,690 --> 01:14:01,700
because of the subscription manager adam

01:13:57,910 --> 01:14:04,960
added to initial cetera for exactly

01:14:01,700 --> 01:14:07,170
someone who scores from the DD the

01:14:04,960 --> 01:14:10,410
network is not acting out

01:14:07,170 --> 01:14:12,750
baby so the system will not have any

01:14:10,410 --> 01:14:14,850
network configured and of course

01:14:12,750 --> 01:14:18,060
subscription manager light needs to bond

01:14:14,850 --> 01:14:20,550
tigra subscription service so we edit

01:14:18,060 --> 01:14:23,790
the network's go to range setup yeah and

01:14:20,550 --> 01:14:25,890
it's it's kind of rough at the moment

01:14:23,790 --> 01:14:28,320
because we had quite a lot of

01:14:25,890 --> 01:14:32,390
assumptions about install install

01:14:28,320 --> 01:14:32,390
environment and now we are using the

01:14:32,480 --> 01:14:43,010
networking configuration GUI in on

01:14:35,460 --> 01:14:45,810
target system which is yeah more complex

01:14:43,010 --> 01:14:47,969
environment also the subscription many

01:14:45,810 --> 01:14:50,610
people only need to integrate better

01:14:47,969 --> 01:14:52,620
with the Anaconda networking stuff

01:14:50,610 --> 01:14:54,810
because at the moment agent check to

01:14:52,620 --> 01:14:58,679
their network so it should be hopefully

01:14:54,810 --> 01:15:02,090
fix in the next version we are under

01:14:58,679 --> 01:15:05,640
code is around also in environment in

01:15:02,090 --> 01:15:08,969
life city like the environment then

01:15:05,640 --> 01:15:12,719
there we just step back Edwards user use

01:15:08,969 --> 01:15:15,989
the environment tools which a badge of

01:15:12,719 --> 01:15:19,770
support for for for example for my eyes

01:15:15,989 --> 01:15:26,840
and basically we don't want to try to

01:15:19,770 --> 01:15:34,560
screw to step over this configuration

01:15:26,840 --> 01:15:42,390
and also we are running a con that for

01:15:34,560 --> 01:15:45,810
image installs and then we just don't

01:15:42,390 --> 01:15:50,910
want to touch system configuration so

01:15:45,810 --> 01:15:54,750
yeah so then the the option to configure

01:15:50,910 --> 01:15:57,570
the networking in the image if it's

01:15:54,750 --> 01:16:03,570
required is basically the post kickstart

01:15:57,570 --> 01:16:05,750
script and doing it like creating config

01:16:03,570 --> 01:16:05,750
files

01:16:06,650 --> 01:16:13,989
you

01:16:08,510 --> 01:16:13,989
so early early configuration in dracut

01:16:16,960 --> 01:16:27,170
we are configuring network and record 22

01:16:23,119 --> 01:16:37,630
touch install image updates image driver

01:16:27,170 --> 01:16:40,969
updates kick start and also the we are

01:16:37,630 --> 01:16:43,639
configuring network in very good stage

01:16:40,969 --> 01:16:47,690
if boot options are preferred preferred

01:16:43,639 --> 01:16:57,460
preferred way of configuring network for

01:16:47,690 --> 01:17:06,699
various reasons the boot options are

01:16:57,460 --> 01:17:12,039
just dracut options we we still support

01:17:06,699 --> 01:17:18,079
the old days anaconda options we

01:17:12,039 --> 01:17:21,679
translated them in Jake adoptions and it

01:17:18,079 --> 01:17:23,480
they are still working but the preferred

01:17:21,679 --> 01:17:29,710
by they are deprecated in different ways

01:17:23,480 --> 01:17:29,710
to use just Jacobs IP configuration

01:17:31,929 --> 01:17:45,050
there is some aspect of this which is

01:17:40,269 --> 01:17:49,449
quite tricky or or users sometimes

01:17:45,050 --> 01:17:53,409
stumble upon it and that's the default

01:17:49,449 --> 01:17:58,250
configuration Drake code by default a

01:17:53,409 --> 01:18:05,500
trice dhcp on all devices which has

01:17:58,250 --> 01:18:09,980
which are linked which is which is

01:18:05,500 --> 01:18:14,329
sometimes problem and currently the only

01:18:09,980 --> 01:18:16,160
way to prevent this is supply the device

01:18:14,329 --> 01:18:22,070
you want to install to you

01:18:16,160 --> 01:18:26,120
to configure or and it's either via just

01:18:22,070 --> 01:18:31,810
buy a very good IP option or buy a boat

01:18:26,120 --> 01:18:31,810
if option for pixie installations

01:18:36,590 --> 01:18:45,389
during kickstart we process a kickstart

01:18:41,849 --> 01:18:49,550
configuration network configuration in

01:18:45,389 --> 01:18:49,550
kick star is done with Network command

01:18:50,420 --> 01:18:57,780
injected we we translate the fixed our

01:18:55,889 --> 01:19:04,080
network configuration to get config

01:18:57,780 --> 01:19:07,770
files but the disk configuration is

01:19:04,080 --> 01:19:13,650
applied over after switching to to

01:19:07,770 --> 01:19:24,420
install install route the exit exception

01:19:13,650 --> 01:19:29,489
is if you don't activate networking with

01:19:24,420 --> 01:19:33,119
boot options or yeah with boot options

01:19:29,489 --> 01:19:38,190
then the configuration from kickstart is

01:19:33,119 --> 01:19:43,560
applied so it is when kickstart is not

01:19:38,190 --> 01:19:47,969
vegetable network but from USB stick

01:19:43,560 --> 01:19:50,510
from this device or injected in English

01:19:47,969 --> 01:19:50,510
RFS

01:19:56,030 --> 01:20:05,030
so in dracut stage if config files are

01:20:03,619 --> 01:20:06,980
created based on kick-start

01:20:05,030 --> 01:20:13,460
configuration and Drake would also

01:20:06,980 --> 01:20:17,780
creates if config files for connections

01:20:13,460 --> 01:20:22,369
or configuration it Drake would set up

01:20:17,780 --> 01:20:24,760
its with very good what you write if

01:20:22,369 --> 01:20:24,760
config

01:20:32,300 --> 01:20:40,250
if you want to play with if config files

01:20:35,750 --> 01:20:41,869
before switching to install a root or

01:20:40,250 --> 01:20:49,219
some reason for testing on debugging

01:20:41,869 --> 01:20:56,989
there is a way we are using to test

01:20:49,219 --> 01:21:00,889
stuff you can supply a dracut option to

01:20:56,989 --> 01:21:07,550
stop to get shell before switching to

01:21:00,889 --> 01:21:18,139
installer root and you can edit if

01:21:07,550 --> 01:21:20,449
coffee files which are at this path so

01:21:18,139 --> 01:21:25,550
what happens after switch route network

01:21:20,449 --> 01:21:28,460
major is started and it starts in

01:21:25,550 --> 01:21:31,340
parallel with anaconda we for example we

01:21:28,460 --> 01:21:37,400
don't wait for network manager to become

01:21:31,340 --> 01:21:40,969
online which sometimes leads the race

01:21:37,400 --> 01:21:47,690
conditions and what we'll have to work

01:21:40,969 --> 01:21:50,510
on this metal merger takes over

01:21:47,690 --> 01:21:57,409
connections activated in any drama fest

01:21:50,510 --> 01:22:00,020
and if the for example kickstart

01:21:57,409 --> 01:22:04,880
configuration if config files created

01:22:00,020 --> 01:22:08,380
based on Kickstarter figure duration are

01:22:04,880 --> 01:22:12,889
different from the particle device

01:22:08,380 --> 01:22:19,909
created in dracut it applies these

01:22:12,889 --> 01:22:22,909
changes this if config files now it's

01:22:19,909 --> 01:22:27,290
possible that there are also devices

01:22:22,909 --> 01:22:29,989
which don't have any if config don't

01:22:27,290 --> 01:22:36,409
have any configuration and we need to

01:22:29,989 --> 01:22:39,079
handle this somehow in on workstations

01:22:36,409 --> 01:22:42,920
or if the network managers server

01:22:39,079 --> 01:22:45,440
package isn't present network manager

01:22:42,920 --> 01:22:51,699
creates default other connections for

01:22:45,440 --> 01:22:54,140
devices without if config files so in

01:22:51,699 --> 01:22:59,030
installer we then dump this

01:22:54,140 --> 01:23:06,410
configuration into if config files when

01:22:59,030 --> 01:23:08,540
this auto connections are not created we

01:23:06,410 --> 01:23:14,630
create default is going to find so

01:23:08,540 --> 01:23:19,760
basically what we create we assume that

01:23:14,630 --> 01:23:23,410
every life as if config file during

01:23:19,760 --> 01:23:23,410
installation and after installation

01:23:28,090 --> 01:23:30,150
Oh

01:23:41,760 --> 01:23:48,960
yeah as I said if if coffee powers based

01:23:45,869 --> 01:23:53,610
on kickstart are applied my network

01:23:48,960 --> 01:23:57,030
manager after City there is a bit

01:23:53,610 --> 01:24:00,989
different situation if you define your

01:23:57,030 --> 01:24:04,349
networking in tracking start session or

01:24:00,989 --> 01:24:06,630
dynamically like you create your

01:24:04,349 --> 01:24:14,030
configuration dynamically based on I

01:24:06,630 --> 01:24:17,219
don't know sniffing the system then the

01:24:14,030 --> 01:24:20,489
configuration is created by anaconda

01:24:17,219 --> 01:24:27,619
calling network manager network measures

01:24:20,489 --> 01:24:31,739
because API so here we like here

01:24:27,619 --> 01:24:33,480
anaconda creates the connections in

01:24:31,739 --> 01:24:39,659
other cases it's just a third measure

01:24:33,480 --> 01:24:44,730
picking up the if config files then

01:24:39,659 --> 01:24:49,530
there is GUI and three network

01:24:44,730 --> 01:24:56,039
configuration we have a standalone stall

01:24:49,530 --> 01:25:01,650
or UI very early to GUI your green

01:24:56,039 --> 01:25:09,139
screen which prompts for configuring

01:25:01,650 --> 01:25:14,539
network if if if we detect it its

01:25:09,139 --> 01:25:22,500
network installation and then we have

01:25:14,539 --> 01:25:26,219
network screen just on the main hub we

01:25:22,500 --> 01:25:28,829
are calling network manager connection

01:25:26,219 --> 01:25:35,369
editor to create configurations we are

01:25:28,829 --> 01:25:40,469
running this tool and wrapping it in

01:25:35,369 --> 01:25:40,880
some UI just for turning devices on and

01:25:40,469 --> 01:25:44,739
off

01:25:40,880 --> 01:25:54,650
and resting devices displaying

01:25:44,739 --> 01:25:57,889
configuration of devices there is if for

01:25:54,650 --> 01:26:02,360
debugging or for various reasons for

01:25:57,889 --> 01:26:05,540
adding something we don't support in our

01:26:02,360 --> 01:26:09,190
wrapper you can start a network veggie

01:26:05,540 --> 01:26:17,960
connection editor from the shell from

01:26:09,190 --> 01:26:21,469
terminal 2022 as for text user interface

01:26:17,960 --> 01:26:28,340
the configuration is limited to eternal

01:26:21,469 --> 01:26:32,719
devices for other configuration like

01:26:28,340 --> 01:26:39,159
bonding down other comfort other virtual

01:26:32,719 --> 01:26:42,670
devices eat NM CLI network manager

01:26:39,159 --> 01:26:50,150
command-line client can be used in

01:26:42,670 --> 01:26:54,350
sharing TTYL to and installer should

01:26:50,150 --> 01:26:58,880
survive creating connections witness to

01:26:54,350 --> 01:27:05,290
and in texture it should also display

01:26:58,880 --> 01:27:05,290
the devices if they are activated

01:27:08,579 --> 01:27:13,800
I we have different configuration I

01:27:10,739 --> 01:27:24,209
don't know if it's interesting for you I

01:27:13,800 --> 01:27:26,369
think I can skip Islam and so I saw the

01:27:24,209 --> 01:27:29,219
configuration of target system as I said

01:27:26,369 --> 01:27:40,010
we just copy if garlic files to the

01:27:29,219 --> 01:27:43,439
target system so the way to to have

01:27:40,010 --> 01:27:51,539
different configuration in installer in

01:27:43,439 --> 01:27:55,559
and in target system is activating a

01:27:51,539 --> 01:27:58,679
device with install configuration by

01:27:55,559 --> 01:28:06,479
boot options and then overriding if

01:27:58,679 --> 01:28:09,059
config file a very quick start and yeah

01:28:06,479 --> 01:28:11,659
so the kickstart shouldn't be applied to

01:28:09,059 --> 01:28:14,280
kickstart configuration overriding the

01:28:11,659 --> 01:28:19,109
device configuration unless you supply

01:28:14,280 --> 01:28:25,769
activate option in this case it is also

01:28:19,109 --> 01:28:31,669
a quieting installer or you can change

01:28:25,769 --> 01:28:36,839
the configuration in we but in fedora

01:28:31,669 --> 01:28:40,820
actually we are also applying the change

01:28:36,839 --> 01:28:49,260
configuration which is debatable but

01:28:40,820 --> 01:28:51,989
yeah we heard a request to do it another

01:28:49,260 --> 01:28:57,409
option relevance to target system

01:28:51,989 --> 01:29:01,349
configurations on good option which

01:28:57,409 --> 01:29:04,530
which tells if the device should be auto

01:29:01,349 --> 01:29:08,689
auto activate it for the connection

01:29:04,530 --> 01:29:08,689
should be also activated after reboot

01:29:08,839 --> 01:29:17,689
it's also debatable staff and we are

01:29:15,089 --> 01:29:19,280
imposing some on good policy installer

01:29:17,689 --> 01:29:21,890
for example

01:29:19,280 --> 01:29:30,560
all for fedora if you installed without

01:29:21,890 --> 01:29:37,610
networking we enable a device with link

01:29:30,560 --> 01:29:43,900
we find for reboot so we set on boots 3s

01:29:37,610 --> 01:29:50,390
or this device we are also generating

01:29:43,900 --> 01:29:54,380
jacobs configurations for network

01:29:50,390 --> 01:30:09,170
storage or I specific for example or

01:29:54,380 --> 01:30:12,770
root ah nice cozy so to to create the

01:30:09,170 --> 01:30:18,260
configuration for target system needs to

01:30:12,770 --> 01:30:21,560
be created in installer so you can for

01:30:18,260 --> 01:30:25,730
example you cannot create configuration

01:30:21,560 --> 01:30:28,880
for device with name that is not at the

01:30:25,730 --> 01:30:30,830
system at the moment of instruction so

01:30:28,880 --> 01:30:34,820
for example when generating cloud images

01:30:30,830 --> 01:30:40,390
you just it's how Federer spins arguing

01:30:34,820 --> 01:30:44,360
that they just dropped completely

01:30:40,390 --> 01:30:49,240
manually created if config so if config

01:30:44,360 --> 01:30:49,240
file to the to the right place

01:30:50,800 --> 01:30:58,060
I start supported device types we

01:30:54,640 --> 01:31:00,760
support team bond villain and breach in

01:30:58,060 --> 01:31:04,290
Budapest kicks that we as I said these

01:31:00,760 --> 01:31:11,910
are not displayed in they are not

01:31:04,290 --> 01:31:16,330
supported in text user interface the

01:31:11,910 --> 01:31:24,370
workaround is to use NM CLI in the shell

01:31:16,330 --> 01:31:29,110
in terminal as for wireless or it can be

01:31:24,370 --> 01:31:31,870
configured in GUI but not working start

01:31:29,110 --> 01:31:39,670
not with boot options we used to

01:31:31,870 --> 01:31:43,420
separate at some point but the the

01:31:39,670 --> 01:31:46,470
function that was removed and no one

01:31:43,420 --> 01:31:46,470
asked for it

01:31:49,810 --> 01:31:56,940
but for work station you can for for

01:31:55,270 --> 01:32:01,170
example for federal road station you can

01:31:56,940 --> 01:32:04,120
configure why it was easily in life

01:32:01,170 --> 01:32:13,360
environment you should do it before

01:32:04,120 --> 01:32:20,260
starting the installation some selected

01:32:13,360 --> 01:32:22,750
limitations yeah the the same

01:32:20,260 --> 01:32:28,230
configuration in installer and target

01:32:22,750 --> 01:32:33,490
system no option to to create confusion

01:32:28,230 --> 01:32:35,800
specifically for target system how to

01:32:33,490 --> 01:32:38,110
apply of graphic change in bowie that's

01:32:35,800 --> 01:32:42,880
what i was talking about it can be

01:32:38,110 --> 01:32:47,680
limiting for some user cases and we are

01:32:42,880 --> 01:32:50,320
yeah we are not passing configuration of

01:32:47,680 --> 01:32:57,030
static of static routes to target system

01:32:50,320 --> 01:32:57,030
of it I think we will fix it soon and

01:32:57,660 --> 01:33:06,160
yeah network manager and anaconda

01:33:01,110 --> 01:33:10,570
starting as services in parallel are

01:33:06,160 --> 01:33:17,170
proceeding race conditions with

01:33:10,570 --> 01:33:20,970
detecting if networking is available at

01:33:17,170 --> 01:33:20,970
some in some cases

01:33:23,820 --> 01:34:36,699
yeah yeah so that's why the outrage

01:34:34,899 --> 01:34:38,619
after but there's another round of

01:34:36,699 --> 01:34:40,419
auction company here in two minutes so

01:34:38,619 --> 01:34:43,989
we can usually specials outside there

01:34:40,419 --> 01:34:45,879
are also places basically so I should be

01:34:43,989 --> 01:34:53,669
also there I'm doing it then the

01:34:45,879 --> 01:34:53,669
reception chair block about it

01:34:53,900 --> 01:35:33,780
thanks for coming here now let's watch

01:35:28,050 --> 01:35:38,880
00 Union New York control yeah obviously

01:35:33,780 --> 01:35:41,190
I chose to thank ya I'm gonna going with

01:35:38,880 --> 01:35:44,909
the middle I believe God also gonna be

01:35:41,190 --> 01:35:51,500
done yo what am I sound ok oh the guy I

01:35:44,909 --> 01:35:51,500
thought you don't you sit over there all

01:35:57,469 --> 01:36:02,820
right you two dumb dumb shits for our

01:35:59,699 --> 01:36:12,000
daughter private Ovechkin chromosomes a

01:36:02,820 --> 01:36:17,719
jimmy joe johnson a little TLC takuna

01:36:12,000 --> 01:36:20,719
kinetic data to a pushka item image our

01:36:17,719 --> 01:36:20,719
presentation

01:36:24,680 --> 01:36:39,930
doc diversity of a sudden I have a

01:36:28,230 --> 01:36:42,030
special about the main uses been another

01:36:39,930 --> 01:36:44,820
question huh who's not determine its us

01:36:42,030 --> 01:36:49,260
a bit about the other person it doesn't

01:36:44,820 --> 01:36:56,600
work the studies Qaddafi Oh done this

01:36:49,260 --> 01:37:03,630
much diversity which case they are

01:36:56,600 --> 01:37:04,980
kidding me he also to me know exactly

01:37:03,630 --> 01:37:07,200
how the most value for our skipper

01:37:04,980 --> 01:37:11,210
skipper crew here there is no video

01:37:07,200 --> 01:37:13,560
Tedesco director Nikita kontarsky

01:37:11,210 --> 01:37:16,740
opposition pursuit we have to know it is

01:37:13,560 --> 01:37:19,100
a bomb yeah stupid ex for my super

01:37:16,740 --> 01:37:19,100

YouTube URL: https://www.youtube.com/watch?v=D4K272zA_EY


