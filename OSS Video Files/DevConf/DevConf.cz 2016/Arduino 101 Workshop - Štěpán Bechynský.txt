Title: Arduino 101 Workshop - Štěpán Bechynský
Publication date: 2016-02-11
Playlist: DevConf.cz 2016
Description: 
	Do you want to try Arduino? We will borrow you Arduino with training shield and we will learn you basics of Arduino programming. You will learn how to use digital output and input, analog sensors, 7-segment display and Real Time Clock on I2C bus. You will need just your laptop.
Captions: 
	00:01:11,830 --> 00:01:20,110
okay so we have just two hours so we

00:01:16,180 --> 00:01:23,350
must be great so first we need to

00:01:20,110 --> 00:01:26,110
install arduino ide our data ID is a

00:01:23,350 --> 00:01:29,260
very simple text editor with compiler

00:01:26,110 --> 00:01:31,060
inside and it allows you to compile your

00:01:29,260 --> 00:01:35,200
application and upload the application

00:01:31,060 --> 00:01:38,680
to arduino it's the upload is done by a

00:01:35,200 --> 00:01:42,070
serial port so first how many of you

00:01:38,680 --> 00:01:45,340
doesn't have a linux on the computer so

00:01:42,070 --> 00:01:47,530
the guys is the lyrics you don't need to

00:01:45,340 --> 00:01:52,960
install any drivers because the problem

00:01:47,530 --> 00:01:58,210
of the chip Arduinos is that on three rd

00:01:52,960 --> 00:02:01,630
know you have a very small small chip

00:01:58,210 --> 00:02:04,119
which creates interface between USB and

00:02:01,630 --> 00:02:06,190
serial port because when arduino on the

00:02:04,119 --> 00:02:08,860
microcontroller of the arduino you have

00:02:06,190 --> 00:02:11,470
a serial port and through this airport

00:02:08,860 --> 00:02:13,180
to upload the application but typically

00:02:11,470 --> 00:02:15,640
on your computer there is no serial port

00:02:13,180 --> 00:02:20,400
so you need some cheap converting USB to

00:02:15,640 --> 00:02:22,930
serial port there are two vendors

00:02:20,400 --> 00:02:27,310
creating those kinds of the chip the

00:02:22,930 --> 00:02:30,160
first one is ftdi this is the nice

00:02:27,310 --> 00:02:33,970
perfect device which is supported on all

00:02:30,160 --> 00:02:37,540
operating systems but this work is

00:02:33,970 --> 00:02:41,410
extremely expensive so if you buy a

00:02:37,540 --> 00:02:44,230
cheap Arduino instead of a DVI converter

00:02:41,410 --> 00:02:49,140
from its a company you will have

00:02:44,230 --> 00:02:52,450
something named CH 3 40 it's another

00:02:49,140 --> 00:02:56,610
cheap doing the USB to serial port

00:02:52,450 --> 00:03:00,580
conversion this chip needs drivers on

00:02:56,610 --> 00:03:03,040
mac and on old version of the windows if

00:03:00,580 --> 00:03:04,660
you have in those 10 you just connect it

00:03:03,040 --> 00:03:06,910
if you are connected to internet the

00:03:04,660 --> 00:03:11,080
download the drivers it works you don't

00:03:06,910 --> 00:03:14,340
need drivers on linux systems so for the

00:03:11,080 --> 00:03:17,709
guys who doesn't have a linux please on

00:03:14,340 --> 00:03:20,550
the pledge days that is a under five

00:03:17,709 --> 00:03:23,560
days i sent you there is an arduino ide

00:03:20,550 --> 00:03:25,560
just and you know just extracted from

00:03:23,560 --> 00:03:29,610
the archive you don't need

00:03:25,560 --> 00:03:31,349
just extracted under linux be under

00:03:29,610 --> 00:03:36,230
linux you will need the right version of

00:03:31,349 --> 00:03:40,790
32 bit or 64 bits assign all and on

00:03:36,230 --> 00:03:44,790
Windows machines again extract ID and

00:03:40,790 --> 00:03:47,489
connect the Arduino and install drivers

00:03:44,790 --> 00:03:51,000
drivers are on the flash disk too it's

00:03:47,489 --> 00:03:52,260
for people running windows on the Linux

00:03:51,000 --> 00:03:55,340
you don't need to know anything that

00:03:52,260 --> 00:03:59,880
should work by it should work by design

00:03:55,340 --> 00:04:02,730
unfortunately on format users the late

00:03:59,880 --> 00:04:05,940
there are the drivers are not available

00:04:02,730 --> 00:04:08,100
for the latest version of Mac OS because

00:04:05,940 --> 00:04:10,620
there is some change how the writers are

00:04:08,100 --> 00:04:14,519
signed and there are no official signed

00:04:10,620 --> 00:04:17,729
drivers for mac for CH 3 40 so the

00:04:14,519 --> 00:04:21,780
recommendation is buy an expensive rd

00:04:17,729 --> 00:04:23,910
novice ftdi chip on it because it will

00:04:21,780 --> 00:04:32,190
work on one might be small driver

00:04:23,910 --> 00:04:35,070
installation so just unpack the arduino

00:04:32,190 --> 00:04:37,340
ide from the flash disk there are some

00:04:35,070 --> 00:04:41,070
drug for flash disk somewhere here and

00:04:37,340 --> 00:04:46,729
on a window systems install driver

00:04:41,070 --> 00:04:46,729
driver is a part of driver is on

00:04:55,880 --> 00:04:57,910
Oh

00:05:02,610 --> 00:05:11,289
so on linux systems you will see you

00:05:06,759 --> 00:05:17,800
will see our do you know as on def TTI

00:05:11,289 --> 00:05:20,370
it's a standard setup port no so you

00:05:17,800 --> 00:05:23,949
will see the standard cell airport and

00:05:20,370 --> 00:05:27,370
one more thing you must be in jail out

00:05:23,949 --> 00:05:31,960
group of the windows to be able upload

00:05:27,370 --> 00:05:34,330
stuff to arduino without to do arduino

00:05:31,960 --> 00:05:38,310
ide so you must be part of dell out

00:05:34,330 --> 00:05:38,310
group of doing assistance

00:05:45,009 --> 00:05:58,800
and so if you ran arduino ide you should

00:05:49,419 --> 00:06:05,999
see something like this starting and if

00:05:58,800 --> 00:06:11,439
you go to tools you should see in port

00:06:05,999 --> 00:06:15,419
you should see some sale port if your

00:06:11,439 --> 00:06:15,419
RDO is proper connected

00:06:26,840 --> 00:06:32,760
so as soon as possible you should end up

00:06:29,580 --> 00:06:34,740
in this Aguilar ID is running you can

00:06:32,760 --> 00:06:37,680
see it's a very it's very simple text

00:06:34,740 --> 00:06:40,410
editor and if you go to tools you go to

00:06:37,680 --> 00:06:46,650
port you should see serial port

00:06:40,410 --> 00:06:49,740
connected from the Arduino so you're in

00:06:46,650 --> 00:06:53,370
the workshop I expect you know how to

00:06:49,740 --> 00:06:55,440
program so you know how to write some of

00:06:53,370 --> 00:06:58,230
you know what is the loop you know what

00:06:55,440 --> 00:07:02,040
is the condition what is the variable

00:06:58,230 --> 00:07:05,040
and so on it's nice to know how to

00:07:02,040 --> 00:07:07,410
program and see because everything we

00:07:05,040 --> 00:07:09,030
will write today is in C language it

00:07:07,410 --> 00:07:16,350
doesn't look like sometimes but it's a

00:07:09,030 --> 00:07:23,820
 but from see below me just some

00:07:16,350 --> 00:07:26,040
simple stuff deal out gallop it's a

00:07:23,820 --> 00:07:28,520
group for our cellular port I'm going

00:07:26,040 --> 00:07:28,520
system

00:07:41,429 --> 00:07:52,449
okay so if you some time to set up the

00:07:46,569 --> 00:07:55,509
army ID install drivers if you need the

00:07:52,449 --> 00:07:59,049
Arduino is not just the you know the

00:07:55,509 --> 00:08:03,099
device Arduino is whole ecosystem so

00:07:59,049 --> 00:08:05,829
Audrina is device Audrina is ide jarrow

00:08:03,099 --> 00:08:10,029
top talent of libraries to control

00:08:05,829 --> 00:08:15,159
different kinds of devices unfortunately

00:08:10,029 --> 00:08:18,669
what happened here a goal the guys who

00:08:15,159 --> 00:08:20,769
started the Arduino project they have

00:08:18,669 --> 00:08:24,099
some travelers there's some troubles

00:08:20,769 --> 00:08:27,429
between them because of money so now we

00:08:24,099 --> 00:08:31,569
have two official Arduinos the one is

00:08:27,429 --> 00:08:34,509
european and one is us so if you buy

00:08:31,569 --> 00:08:36,189
Arduino from us it will it will have no

00:08:34,509 --> 00:08:38,649
you don't really know they are doing on

00:08:36,189 --> 00:08:40,889
it there will be genuine oh because the

00:08:38,649 --> 00:08:43,719
RDA is a trademark for Europe and

00:08:40,889 --> 00:08:46,720
another group owns the trademark Arduino

00:08:43,719 --> 00:08:49,300
for us and they are selling arduinos to

00:08:46,720 --> 00:08:51,819
the Europe but on the with the name

00:08:49,300 --> 00:08:54,250
genuine offer so there are some troubles

00:08:51,819 --> 00:08:56,470
like that it really doesn't matter what

00:08:54,250 --> 00:08:59,949
you choose because the system is the

00:08:56,470 --> 00:09:03,329
same arduino ide can be used to program

00:08:59,949 --> 00:09:06,490
not just the hard we knows do you know

00:09:03,329 --> 00:09:09,490
esp8266 it's a small micro concerns with

00:09:06,490 --> 00:09:13,180
by five on it you can program it in

00:09:09,490 --> 00:09:16,170
arduino to are there is another system

00:09:13,180 --> 00:09:19,360
from texas instruments called launch pad

00:09:16,170 --> 00:09:21,879
very nice boards this different kind of

00:09:19,360 --> 00:09:25,029
microcontroller honey and again you can

00:09:21,879 --> 00:09:26,350
program it using the arduino this is our

00:09:25,029 --> 00:09:29,800
you know I be there is a special version

00:09:26,350 --> 00:09:32,319
of Arduino IDE that are called in the

00:09:29,800 --> 00:09:35,379
area and this one is for launch pad

00:09:32,319 --> 00:09:39,490
boards so there are many you know the

00:09:35,379 --> 00:09:41,649
Arduino is a real big ecosystem what is

00:09:39,490 --> 00:09:43,779
probably most interesting on Arduino is

00:09:41,649 --> 00:09:47,290
that you can use that you can use

00:09:43,779 --> 00:09:50,800
shields so you have the basic board and

00:09:47,290 --> 00:09:53,019
then you can put shoots on it so even if

00:09:50,800 --> 00:09:53,970
you don't know anything about the micro

00:09:53,019 --> 00:09:56,689
electronics or

00:09:53,970 --> 00:10:00,329
about electronics you can very easy

00:09:56,689 --> 00:10:02,430
build some interesting devices just

00:10:00,329 --> 00:10:04,319
choose the right shield there are many

00:10:02,430 --> 00:10:08,250
many types of the shields are hard of

00:10:04,319 --> 00:10:11,459
them this the displays the shield's

00:10:08,250 --> 00:10:14,899
controlling the motors and so on and you

00:10:11,459 --> 00:10:19,160
just need to put it put it together

00:10:14,899 --> 00:10:24,420
typical Arduino uses micro controller

00:10:19,160 --> 00:10:27,930
called attend mega 18 my god this is

00:10:24,420 --> 00:10:31,620
this micro contract is from is the the

00:10:27,930 --> 00:10:34,189
winner is atmel and those micro

00:10:31,620 --> 00:10:37,920
controllers are 8-bit microcontrollers

00:10:34,189 --> 00:10:41,790
base 32 kilobytes of flash for your

00:10:37,920 --> 00:10:43,649
application and two kilobytes of RAM to

00:10:41,790 --> 00:10:46,410
kilobytes no megabytes new gigabytes

00:10:43,649 --> 00:10:48,360
kilobytes so it's very interesting to

00:10:46,410 --> 00:10:51,899
start writing application with you know

00:10:48,360 --> 00:10:54,269
so we got there but the barber is enough

00:10:51,899 --> 00:10:57,120
powerful for example to control 3d

00:10:54,269 --> 00:10:59,879
printers so if you will go the to

00:10:57,120 --> 00:11:02,879
building d to fire and those three

00:10:59,879 --> 00:11:07,350
printers are controlled by the same

00:11:02,879 --> 00:11:13,019
microcontroller s on Arduino not this

00:11:07,350 --> 00:11:16,620
one because this one is 80 mega or 320

00:11:13,019 --> 00:11:18,920
HP there's some more powerful ones so

00:11:16,620 --> 00:11:21,569
for example you can buy Arduino this

00:11:18,920 --> 00:11:24,569
microcontroller with more power more

00:11:21,569 --> 00:11:26,759
gpios is more memory not just two

00:11:24,569 --> 00:11:28,829
kilobyte particular bytes or four

00:11:26,759 --> 00:11:32,459
kilobytes so there is some old

00:11:28,829 --> 00:11:37,649
application on it or there are three

00:11:32,459 --> 00:11:41,339
nose running on arm microcontrollers

00:11:37,649 --> 00:11:44,730
with cortex m0 core which is quite

00:11:41,339 --> 00:11:46,769
powerful 32-bit microcontroller surround

00:11:44,730 --> 00:11:49,709
many many army knows you just need to

00:11:46,769 --> 00:11:51,720
choose the right one for you it depends

00:11:49,709 --> 00:11:55,259
how much memory will need it depends how

00:11:51,720 --> 00:11:57,600
much gpio you will need and so on but

00:11:55,259 --> 00:12:02,370
there are many many of them in different

00:11:57,600 --> 00:12:04,819
shapes different sizes and so on ok so

00:12:02,370 --> 00:12:04,819
let's start

00:12:09,210 --> 00:12:13,720
if you are starting is the hardware

00:12:11,650 --> 00:12:15,940
there is a hell board for hard web

00:12:13,720 --> 00:12:22,450
developers and however for hardware

00:12:15,940 --> 00:12:25,650
developers is blinking wisps led led is

00:12:22,450 --> 00:12:30,730
light emitting diode so this is no light

00:12:25,650 --> 00:12:34,170
the LED is connected to ground because

00:12:30,730 --> 00:12:38,500
led us in plan doesn't like high current

00:12:34,170 --> 00:12:40,450
so there is a resistor you know reducing

00:12:38,500 --> 00:12:45,730
the current going through the LED and

00:12:40,450 --> 00:12:50,140
another pin of LED is connected to pin

00:12:45,730 --> 00:12:52,480
on the Arduino this is connected on the

00:12:50,140 --> 00:12:58,270
shoot so we will not use Livan operated

00:12:52,480 --> 00:13:03,040
manually they are using machine the

00:12:58,270 --> 00:13:06,550
microcontroller on Arduino is sad some

00:13:03,040 --> 00:13:11,650
chip the chip has some pins and those

00:13:06,550 --> 00:13:15,730
pins are directly connected to pinch on

00:13:11,650 --> 00:13:22,060
Arduino so if i disassemble it here do

00:13:15,730 --> 00:13:23,470
not you will not disassemble it ok so

00:13:22,060 --> 00:13:25,510
here is the chip this is the

00:13:23,470 --> 00:13:27,340
microcontroller and the pins of

00:13:25,510 --> 00:13:34,530
microcontroller are directly connected

00:13:27,340 --> 00:13:40,120
to pins on Arduino so if you will use

00:13:34,530 --> 00:13:44,910
LED on pin to of Arduino it means that

00:13:40,120 --> 00:13:48,550
the pin is connected to PD to pin on

00:13:44,910 --> 00:13:52,050
microcontroller there is a really direct

00:13:48,550 --> 00:13:56,920
connection there is nothing between so

00:13:52,050 --> 00:13:59,680
first one be very careful what you

00:13:56,920 --> 00:14:01,090
collect your Arduino because if you can

00:13:59,680 --> 00:14:04,440
observe something which needs high

00:14:01,090 --> 00:14:11,560
current like small electric motor engine

00:14:04,440 --> 00:14:15,490
you destroy Arduino the limit is 20

00:14:11,560 --> 00:14:19,870
milli amperes I think / pin but you

00:14:15,490 --> 00:14:22,510
cannot take more than life knows the

00:14:19,870 --> 00:14:24,670
the limit is a tree humper plan pin but

00:14:22,510 --> 00:14:28,210
you connect connect you cannot take more

00:14:24,670 --> 00:14:31,000
than 50 million pairs from home chip so

00:14:28,210 --> 00:14:35,770
think about that so if you roll that you

00:14:31,000 --> 00:14:38,950
need to connect some relay electric

00:14:35,770 --> 00:14:40,060
engine never do it directly you need to

00:14:38,950 --> 00:14:42,940
use some filled with some more

00:14:40,060 --> 00:14:46,960
electronics on it to protect your

00:14:42,940 --> 00:14:49,420
Arduino the maximum voltage you can

00:14:46,960 --> 00:14:51,250
connect to our do know is 5 volts so

00:14:49,420 --> 00:14:55,510
typically all Arduino so are some

00:14:51,250 --> 00:15:02,410
exceptions are 5 volt tolerant so the

00:14:55,510 --> 00:15:05,500
logic is zero force is 0 1 1 through is

00:15:02,410 --> 00:15:08,170
5 volts it's a typical Arduino there are

00:15:05,500 --> 00:15:10,930
some ugly nose running consider fuels so

00:15:08,170 --> 00:15:13,779
you need to check your documentation do

00:15:10,930 --> 00:15:16,839
you have rubs berry pie at home perhaps

00:15:13,779 --> 00:15:18,700
berry pie is seeded fuels and you will

00:15:16,839 --> 00:15:23,560
connect their 5 volts only one time

00:15:18,700 --> 00:15:26,320
again the GPIO on perhaps berry pie is

00:15:23,560 --> 00:15:29,410
directly connected to my token to

00:15:26,320 --> 00:15:32,830
processor on a 2 processor on perhaps

00:15:29,410 --> 00:15:35,950
berry pie and it's not 5 11 you can very

00:15:32,830 --> 00:15:38,709
easy destroy you can very easy destroy

00:15:35,950 --> 00:15:41,500
your abs very pie if you send 5 volts to

00:15:38,709 --> 00:15:46,360
some GPIO pin so be very careful about

00:15:41,500 --> 00:15:48,250
that so the application the structure of

00:15:46,360 --> 00:15:52,150
the basic application is very simple

00:15:48,250 --> 00:15:56,650
very sad function called setup which is

00:15:52,150 --> 00:16:00,160
called only once so if you plug power to

00:15:56,650 --> 00:16:02,680
your Arduino it start running your

00:16:00,160 --> 00:16:04,690
application on it on arguing on

00:16:02,680 --> 00:16:07,779
typically on Arduino you can find the

00:16:04,690 --> 00:16:12,220
power plug here so here you can provide

00:16:07,779 --> 00:16:16,779
7 to 12 volts so you can take the very

00:16:12,220 --> 00:16:21,610
common Ace 9 horas battery you just

00:16:16,779 --> 00:16:26,950
connect it and it should work it starts

00:16:21,610 --> 00:16:29,829
the application and it it works this

00:16:26,950 --> 00:16:31,690
battery has very low capacity so you

00:16:29,829 --> 00:16:32,320
cannot run rd know for a long time on

00:16:31,690 --> 00:16:36,280
zoosk i from

00:16:32,320 --> 00:16:41,290
butter microcontroller on Arduino is

00:16:36,280 --> 00:16:45,070
very very low power but the electronics

00:16:41,290 --> 00:16:47,650
on the Arduino is not low power so you

00:16:45,070 --> 00:16:50,560
cannot run Arduino for a long time on

00:16:47,650 --> 00:16:52,900
battery you can run the chip for a very

00:16:50,560 --> 00:16:57,220
long time on battery the Arduino a sub

00:16:52,900 --> 00:17:00,280
board is not designed for low power so

00:16:57,220 --> 00:17:03,730
this is the setup and other there is

00:17:00,280 --> 00:17:06,120
another function contrib and hoop is

00:17:03,730 --> 00:17:08,980
going again again again again again and

00:17:06,120 --> 00:17:12,820
you are typically your main application

00:17:08,980 --> 00:17:15,160
is in loop and you set up used to set up

00:17:12,820 --> 00:17:17,709
your application like initialize pins

00:17:15,160 --> 00:17:27,220
you prepare everything and the main

00:17:17,709 --> 00:17:31,500
application is in room so on I send it

00:17:27,220 --> 00:17:36,820
on a flash this I've sent you there is a

00:17:31,500 --> 00:17:42,600
folder called Arduino workshop the

00:17:36,820 --> 00:17:42,600
structure of the folder is this one so

00:17:44,040 --> 00:17:53,070
are doing a workshop folder and there

00:17:47,080 --> 00:17:53,070
you have a lot of examples so please

00:17:53,160 --> 00:18:02,280
open example so you just open file if

00:17:59,020 --> 00:18:07,330
you go to file menu here is the examples

00:18:02,280 --> 00:18:11,620
we will not use this we go to file open

00:18:07,330 --> 00:18:18,180
and please from the workshop folder or

00:18:11,620 --> 00:18:18,180
doing a virtual folder please open

00:18:18,690 --> 00:18:27,930
example code blink and you should see

00:18:25,060 --> 00:18:27,930
something like this

00:18:30,480 --> 00:18:43,810
can you read it on back now the USB

00:18:40,240 --> 00:18:47,140
Drive if you want you can download if

00:18:43,810 --> 00:18:59,890
you go to github and you search my name

00:18:47,140 --> 00:19:06,640
by Hinske be easy hu I and ask a wide so

00:18:59,890 --> 00:19:19,300
you can find the Arduino workshop on my

00:19:06,640 --> 00:19:21,190
github just con it so you understand

00:19:19,300 --> 00:19:26,920
what constant is you know what this

00:19:21,190 --> 00:19:29,950
integer so led so I am working with spin

00:19:26,920 --> 00:19:32,350
too we are using the numbers of the pins

00:19:29,950 --> 00:19:34,240
from the Arduino board we are not using

00:19:32,350 --> 00:19:37,090
the name of the pins as on

00:19:34,240 --> 00:19:42,010
microcontroller so we are using will you

00:19:37,090 --> 00:19:43,390
spin to house is constant 1000 because

00:19:42,010 --> 00:19:45,160
we will use it in function delay

00:19:43,390 --> 00:19:48,160
function delays stops the

00:19:45,160 --> 00:19:50,830
microcontroller it stop it but it

00:19:48,160 --> 00:19:54,760
doesn't send it to any sleep mode so it

00:19:50,830 --> 00:19:56,950
still consumes a lot of energy there are

00:19:54,760 --> 00:19:59,680
raised how to run it to the sleep mode

00:19:56,950 --> 00:20:04,570
it's little good sir complicated but

00:19:59,680 --> 00:20:08,530
it's possible in setup I say hang I hope

00:20:04,570 --> 00:20:10,960
do you use with spin LEDs up into and it

00:20:08,530 --> 00:20:16,140
will be output so you must specify if

00:20:10,960 --> 00:20:21,640
the penis output or input it's very very

00:20:16,140 --> 00:20:24,400
important without this pin is not let's

00:20:21,640 --> 00:20:25,900
say connect it and it will not work so

00:20:24,400 --> 00:20:28,980
you need to say in a setup hey I want to

00:20:25,900 --> 00:20:34,660
work with the spin and it will be out

00:20:28,980 --> 00:20:38,980
digitalwrite means okay sent power to

00:20:34,660 --> 00:20:41,289
pain hi so it inside volts in this case

00:20:38,980 --> 00:20:46,490
it can be three doz you

00:20:41,289 --> 00:20:50,620
then red cent low and wait and do it

00:20:46,490 --> 00:20:55,429
again again again so it start blinking

00:20:50,620 --> 00:20:59,120
so what you need to do now in tools you

00:20:55,429 --> 00:21:01,210
need to the right bored so I bought this

00:20:59,120 --> 00:21:05,630
Arduino Jets legend we know who know

00:21:01,210 --> 00:21:08,929
this is our board it's a very common

00:21:05,630 --> 00:21:12,950
mistake that you choose and run part and

00:21:08,929 --> 00:21:15,679
then it doesn't work because when you

00:21:12,950 --> 00:21:17,840
choose the board on the background you

00:21:15,679 --> 00:21:22,130
choose the type of the microcontroller

00:21:17,840 --> 00:21:24,860
so compiler knows how to compile it to

00:21:22,130 --> 00:21:27,049
run it on mine under this specific

00:21:24,860 --> 00:21:29,090
microcontroller because there is no

00:21:27,049 --> 00:21:32,419
operating system on the microcontroller

00:21:29,090 --> 00:21:35,150
you need to compile your application for

00:21:32,419 --> 00:21:36,679
special you know for the right micro

00:21:35,150 --> 00:21:39,400
contra if you compile for different

00:21:36,679 --> 00:21:42,380
microcontroller it will not work because

00:21:39,400 --> 00:21:44,090
there is no abstraction layer because it

00:21:42,380 --> 00:21:46,880
really runs on the hardware very very

00:21:44,090 --> 00:21:49,429
low I will show you how it works later

00:21:46,880 --> 00:21:52,600
today so you need to choose the right

00:21:49,429 --> 00:21:56,150
one because this is different kinds of

00:21:52,600 --> 00:21:58,070
ugly nose but it means they typically

00:21:56,150 --> 00:22:00,500
use different kinds of microcontroller

00:21:58,070 --> 00:22:02,030
so you don't need to do about the

00:22:00,500 --> 00:22:04,370
microcontroller how it works or

00:22:02,030 --> 00:22:07,700
low-level you just choose the right

00:22:04,370 --> 00:22:13,039
board and then you need to choose the

00:22:07,700 --> 00:22:18,950
right port and then you just press the

00:22:13,039 --> 00:22:23,600
button this arrow it starts from piling

00:22:18,950 --> 00:22:28,030
and uploading application to the board

00:22:23,600 --> 00:22:28,030
and the blue light should blinking

00:22:48,570 --> 00:22:57,249
yes it's a TTI something called a linux

00:22:52,469 --> 00:22:59,200
that one this is the right one because

00:22:57,249 --> 00:23:02,799
you are now because you are not in

00:22:59,200 --> 00:23:05,529
dialogue group so run I you need to I

00:23:02,799 --> 00:23:08,109
don't know if you have if you it's a

00:23:05,529 --> 00:23:20,289
good group and I'm not sure maybe need

00:23:08,109 --> 00:23:27,459
to somehow we start our store or running

00:23:20,289 --> 00:23:29,229
a student it's another option no

00:23:27,459 --> 00:23:31,899
programming there is no programmer if

00:23:29,229 --> 00:23:37,359
you choose the right board if you choose

00:23:31,899 --> 00:23:40,479
arduino uno you choose sport and that's

00:23:37,359 --> 00:23:42,609
all so if you see a many in the main

00:23:40,479 --> 00:23:48,129
programmer you probably choose from

00:23:42,609 --> 00:23:49,989
board it must be ugly know you know you

00:23:48,129 --> 00:23:55,200
know because there are some for example

00:23:49,989 --> 00:23:58,839
if you buy if you buy are doing up I

00:23:55,200 --> 00:24:01,719
think I'm you know me not meaning jar

00:23:58,839 --> 00:24:06,969
the sampled some arduino many ports

00:24:01,719 --> 00:24:11,079
visitor visa 80 mega 168 some of them is

00:24:06,969 --> 00:24:13,419
3 2 3 2 8g then choose you know subtype

00:24:11,079 --> 00:24:15,549
of the board sometimes but let me know

00:24:13,419 --> 00:24:17,379
you know claw is just a little note so

00:24:15,549 --> 00:24:22,379
you should you should shoot choose just

00:24:17,379 --> 00:24:26,759
ugly Laurel and poor no programmer and

00:24:22,379 --> 00:24:26,759
the LED should start blinking

00:24:34,510 --> 00:24:46,970
so let's work so we'll come to nice sort

00:24:42,920 --> 00:24:49,910
of hardware development believe me it's

00:24:46,970 --> 00:24:53,330
much more fun to write application for

00:24:49,910 --> 00:24:55,820
those things because you can destroy it

00:24:53,330 --> 00:24:59,120
very easy you can destroy very easy

00:24:55,820 --> 00:25:01,430
yourself so special and you play then

00:24:59,120 --> 00:25:05,800
you will play with you know power plugs

00:25:01,430 --> 00:25:11,360
please Lenzi 220 volts be very careful

00:25:05,800 --> 00:25:15,680
it hurts believe me and you know it's

00:25:11,360 --> 00:25:19,910
it's really nice so because it's a very

00:25:15,680 --> 00:25:23,630
simple system there is no simple day how

00:25:19,910 --> 00:25:25,370
to debug your application it's possible

00:25:23,630 --> 00:25:28,600
to the buggy but you need different

00:25:25,370 --> 00:25:32,810
tools you need a different hardware it's

00:25:28,600 --> 00:25:36,020
more expensive than so only way how to

00:25:32,810 --> 00:25:38,600
debug it this is to send some

00:25:36,020 --> 00:25:49,150
information from Arduino using the

00:25:38,600 --> 00:25:56,270
serial port to your computer so open

00:25:49,150 --> 00:26:00,200
file and there is a a very sad serial

00:25:56,270 --> 00:26:02,720
communication so please open serial

00:26:00,200 --> 00:26:09,170
communication example from Arduino board

00:26:02,720 --> 00:26:20,660
shop foreman the cellular communication

00:26:09,170 --> 00:26:24,740
is very old-fashioned so surreal

00:26:20,660 --> 00:26:33,380
communication is very old way how to

00:26:24,740 --> 00:26:35,920
communicate between two devices but the

00:26:33,380 --> 00:26:38,950
serial communication is used a lot

00:26:35,920 --> 00:26:41,030
everywhere so you have mobile phone I

00:26:38,950 --> 00:26:44,000
think you have fun fun fun we know that

00:26:41,030 --> 00:26:46,670
inside mobile phone is microcontroller

00:26:44,000 --> 00:26:48,070
there is some processor do you know

00:26:46,670 --> 00:26:52,370
there is another

00:26:48,070 --> 00:26:54,770
electronics called gsm modem this is the

00:26:52,370 --> 00:26:58,340
device connecting you to gsm network and

00:26:54,770 --> 00:27:01,190
the communication between gsm modem and

00:26:58,340 --> 00:27:04,720
the microcon prior is a serial port it's

00:27:01,190 --> 00:27:08,240
a serial communication if you have gps

00:27:04,720 --> 00:27:10,100
saying bluetooth same so Sarah

00:27:08,240 --> 00:27:15,920
communication is very very important one

00:27:10,100 --> 00:27:19,010
and you use it a lot but serial

00:27:15,920 --> 00:27:22,990
communication is sometimes drinking so

00:27:19,010 --> 00:27:27,680
first is that the part sending data and

00:27:22,990 --> 00:27:31,850
device reading the data must run on the

00:27:27,680 --> 00:27:36,140
same be great because it started sending

00:27:31,850 --> 00:27:40,490
the data and the opposite side must read

00:27:36,140 --> 00:27:44,630
the data in same speed if not there is a

00:27:40,490 --> 00:27:47,330
problem so both parts must agree on the

00:27:44,630 --> 00:27:50,900
speed of communication is the first

00:27:47,330 --> 00:27:54,670
problem second problem is if you have a

00:27:50,900 --> 00:27:57,980
standard Arduino there is only one

00:27:54,670 --> 00:27:59,720
hardware serial port on the micro

00:27:57,980 --> 00:28:01,570
contract what does it mean hardware

00:27:59,720 --> 00:28:04,120
serial port there is a special

00:28:01,570 --> 00:28:08,140
electronics inside a microcontroller

00:28:04,120 --> 00:28:11,530
doing say our communication for you and

00:28:08,140 --> 00:28:15,230
it doesn't block let's say the main core

00:28:11,530 --> 00:28:17,390
inside the microcontroller on standard

00:28:15,230 --> 00:28:19,970
arduinos that is only one hardware setup

00:28:17,390 --> 00:28:25,700
port and this one is used to program

00:28:19,970 --> 00:28:29,450
your device the option is to use the

00:28:25,700 --> 00:28:32,840
library called software serial the

00:28:29,450 --> 00:28:37,130
library software serial emulates serial

00:28:32,840 --> 00:28:39,740
port but it really doesn't work real

00:28:37,130 --> 00:28:41,600
smooth there are some problem because of

00:28:39,740 --> 00:28:44,390
the timing and everything it's really

00:28:41,600 --> 00:28:49,100
not it's a last choice so what to do if

00:28:44,390 --> 00:28:51,730
you need to use the more serial ports no

00:28:49,100 --> 00:28:55,250
do you just choose another Arduino

00:28:51,730 --> 00:28:57,920
Arduino Uno only one if you take Arduino

00:28:55,250 --> 00:29:00,850
mega Abdul Omega is used to control

00:28:57,920 --> 00:29:03,190
three printers therefore

00:29:00,850 --> 00:29:05,910
hardware setup words or you can use

00:29:03,190 --> 00:29:08,560
something called Arduino Leonardo

00:29:05,910 --> 00:29:10,990
Arduino Leonardo use different micro

00:29:08,560 --> 00:29:14,140
controller and all this microbe hunter

00:29:10,990 --> 00:29:16,180
is direct support for USB so this is

00:29:14,140 --> 00:29:19,540
used for communication with computer and

00:29:16,180 --> 00:29:23,470
we have one Hudler cell port freedom you

00:29:19,540 --> 00:29:31,540
just use another serial port sorry

00:29:23,470 --> 00:29:35,350
another hobby know so it's a very simple

00:29:31,540 --> 00:29:40,770
again there is the library there is an

00:29:35,350 --> 00:29:43,570
object called serial object cereal is

00:29:40,770 --> 00:29:46,930
port using to communicate between

00:29:43,570 --> 00:29:48,880
computer and Arduino always if you will

00:29:46,930 --> 00:29:51,670
have if you have Arduino be smart serial

00:29:48,880 --> 00:29:55,810
ports there will be objects area 1 cell

00:29:51,670 --> 00:29:58,690
2 Torretta clisser l5 it's used on very

00:29:55,810 --> 00:30:00,790
special board but Syria is always

00:29:58,690 --> 00:30:04,510
communication between computer and the

00:30:00,790 --> 00:30:06,280
are doona sorry are 1 2 3 4 5 I used to

00:30:04,510 --> 00:30:09,870
communicate with different huh another

00:30:06,280 --> 00:30:13,480
hardware you have connected to are doing

00:30:09,870 --> 00:30:20,920
so you choose the bow trade typically

00:30:13,480 --> 00:30:26,020
the numbers are 1200 2400 and i just

00:30:20,920 --> 00:30:30,610
multiplied it twice 92 9600 is the you

00:30:26,020 --> 00:30:33,850
know basic speed you can go up to 15,000

00:30:30,610 --> 00:30:38,050
something terrifically more but the

00:30:33,850 --> 00:30:45,670
trade-off that gonna work this route

00:30:38,050 --> 00:30:48,400
here is sometimes needed and sometimes

00:30:45,670 --> 00:30:51,400
slow it depends of the type of our dunno

00:30:48,400 --> 00:30:54,220
so some arduino sneak because the

00:30:51,400 --> 00:30:56,350
microcontroller it waits until there is

00:30:54,220 --> 00:30:59,440
something connected to serial port to

00:30:56,350 --> 00:31:01,750
release set it up I have it here just

00:30:59,440 --> 00:31:03,100
because of this program but for up do

00:31:01,750 --> 00:31:05,170
not know you don't need this piece of

00:31:03,100 --> 00:31:09,220
the code it just for some ugly nose

00:31:05,170 --> 00:31:13,180
again you need to take advantage set out

00:31:09,220 --> 00:31:15,050
dot print surprise it sends data to

00:31:13,180 --> 00:31:18,450
compute

00:31:15,050 --> 00:31:21,330
then you can pay if something if there

00:31:18,450 --> 00:31:24,660
is something waiting in a buffer so if

00:31:21,330 --> 00:31:27,420
the available means the number of the

00:31:24,660 --> 00:31:30,450
bytes in the buffer so if there is more

00:31:27,420 --> 00:31:33,930
than one bite it means I something going

00:31:30,450 --> 00:31:38,130
to Arduino and then you can use

00:31:33,930 --> 00:31:40,350
different methods starting Creed to get

00:31:38,130 --> 00:31:42,170
data from the buffer the in strength

00:31:40,350 --> 00:31:46,080
means everything in buffer is

00:31:42,170 --> 00:31:48,450
interpreted as the characters or you can

00:31:46,080 --> 00:31:52,830
you just read it means read the bite and

00:31:48,450 --> 00:31:59,700
then you interpret the x by yourself so

00:31:52,830 --> 00:32:04,640
if I up off this one to my arduino there

00:31:59,700 --> 00:32:07,400
is that very nice in tools you will find

00:32:04,640 --> 00:32:16,160
something called serial monitor and

00:32:07,400 --> 00:32:19,650
serial monitor is a very simple window

00:32:16,160 --> 00:32:22,140
where you can send data to our dinner or

00:32:19,650 --> 00:32:28,470
you data from the arduino of course you

00:32:22,140 --> 00:32:35,190
need to choose the right speed and then

00:32:28,470 --> 00:32:40,010
can i send data to our dinner if you

00:32:35,190 --> 00:32:43,940
choose different speed you will see

00:32:40,010 --> 00:32:48,320
stupid things like this this means

00:32:43,940 --> 00:32:48,320
something is wrong with your speed and

00:32:48,890 --> 00:32:58,400
if you change the speed it automatically

00:32:51,600 --> 00:32:58,400
restarts the arduino so try it

00:33:07,240 --> 00:33:12,800
because the communication between those

00:33:09,740 --> 00:33:15,890
two devices using the sailboard use some

00:33:12,800 --> 00:33:18,410
buffers so it really doesn't mean that

00:33:15,890 --> 00:33:21,890
everything what they send it from one

00:33:18,410 --> 00:33:24,890
side you know ended in the buffer on the

00:33:21,890 --> 00:33:26,660
opposite side like a one piece of the

00:33:24,890 --> 00:33:29,270
information so sometimes you need to

00:33:26,660 --> 00:33:31,040
read the data out there there is some

00:33:29,270 --> 00:33:36,710
special character or something like that

00:33:31,040 --> 00:33:49,760
I show you the example do you know GPS

00:33:36,710 --> 00:33:52,730
protocol so this is how this is the

00:33:49,760 --> 00:33:54,410
piece of the communication from GPS the

00:33:52,730 --> 00:33:57,320
GPS sense you don't schedule the

00:33:54,410 --> 00:34:01,430
information GPS is typically connected

00:33:57,320 --> 00:34:04,550
on serial port so you need to know the

00:34:01,430 --> 00:34:07,880
protocol because in buffer sometimes you

00:34:04,550 --> 00:34:11,419
will have live two characters or you can

00:34:07,880 --> 00:34:13,940
have a half line it depends on the

00:34:11,419 --> 00:34:17,000
speeds or the buffer size so you must

00:34:13,940 --> 00:34:22,960
relocate the line start with door sign

00:34:17,000 --> 00:34:29,020
and end up with something like star and

00:34:22,960 --> 00:34:31,790
the number this is a controlling soldier

00:34:29,020 --> 00:34:35,090
checksum thank you this is the checksum

00:34:31,790 --> 00:34:36,830
of line so you must know how to

00:34:35,090 --> 00:34:38,960
interpret the data because the

00:34:36,830 --> 00:34:43,030
communication relay something going in

00:34:38,960 --> 00:34:45,770
out and it's okay it's never a mix-up

00:34:43,030 --> 00:34:48,770
but sometimes you get in buffer just

00:34:45,770 --> 00:34:50,600
days some days sometimes is there is

00:34:48,770 --> 00:34:53,770
nothing you need to wait to fill the

00:34:50,600 --> 00:34:56,659
buffer and so on so the communication is

00:34:53,770 --> 00:34:59,330
sometimes tricky to process it but it's

00:34:56,659 --> 00:35:01,090
extremely simple the communication

00:34:59,330 --> 00:35:05,930
between those become those two devices

00:35:01,090 --> 00:35:12,460
okay do have questions for sale

00:35:05,930 --> 00:35:12,460
communication yes okay

00:35:13,310 --> 00:35:23,150
okay the envelope the loop function will

00:35:19,950 --> 00:35:25,830
have cereal registering it right yes

00:35:23,150 --> 00:35:28,680
this is actually restrained from the

00:35:25,830 --> 00:35:33,570
computer to the Arduino gray it reach it

00:35:28,680 --> 00:35:36,270
reads it interprets bytes in buffer on

00:35:33,570 --> 00:35:38,310
Arduino so if you send something from

00:35:36,270 --> 00:35:42,810
computer to our do you know this is the

00:35:38,310 --> 00:35:55,080
way how to read it okay okay another

00:35:42,810 --> 00:35:57,180
question yes it's possible there is a

00:35:55,080 --> 00:36:00,830
there is a way if you need the dairy

00:35:57,180 --> 00:36:04,530
supports airport you can create event

00:36:00,830 --> 00:36:06,630
which fire up when some data are

00:36:04,530 --> 00:36:11,100
available in buffer it's possible to do

00:36:06,630 --> 00:36:12,990
it if you are really working under the

00:36:11,100 --> 00:36:16,440
microcontroller knows how to work is

00:36:12,990 --> 00:36:19,050
interrupt but typically the ugly know

00:36:16,440 --> 00:36:21,960
the concept of the Arduino you know

00:36:19,050 --> 00:36:24,030
taking you away of those details so you

00:36:21,960 --> 00:36:27,360
can because you can use only two kinds

00:36:24,030 --> 00:36:32,120
of the interrupt when we are using just

00:36:27,360 --> 00:36:34,950
arduino ide one is for sale port and

00:36:32,120 --> 00:36:38,460
second one is you can set up interrupt

00:36:34,950 --> 00:36:40,140
for some pins and you for interrupt you

00:36:38,460 --> 00:36:42,210
can use just two things because the

00:36:40,140 --> 00:36:44,670
microcontroller under this kind of the

00:36:42,210 --> 00:36:50,100
arduino supports just external

00:36:44,670 --> 00:36:54,180
interrupts on two pins this home but if

00:36:50,100 --> 00:36:57,210
you do not use the arduino ide or you

00:36:54,180 --> 00:37:00,720
can use it but you will go let's say one

00:36:57,210 --> 00:37:03,960
little closer to hardware you can use

00:37:00,720 --> 00:37:06,360
timers as interrupts and much more this

00:37:03,960 --> 00:37:08,460
one is you know extremely simplified way

00:37:06,360 --> 00:37:10,790
how to program the microcontroller and

00:37:08,460 --> 00:37:13,350
you cannot control everything on it

00:37:10,790 --> 00:37:15,090
because there are so many things and

00:37:13,350 --> 00:37:20,490
every micro controller works little

00:37:15,090 --> 00:37:23,950
different way okay i show you almost the

00:37:20,490 --> 00:37:35,290
same i show you the blinking the diode

00:37:23,950 --> 00:37:35,290
without without the Arduino IDE so

00:37:42,560 --> 00:37:50,470
this is very how to bring the diode

00:37:45,130 --> 00:37:56,560
without Arduino IDE this is the loop

00:37:50,470 --> 00:38:04,630
this is the setup and i am using

00:37:56,560 --> 00:38:09,230
interrupt to change the dancer le diste

00:38:04,630 --> 00:38:13,340
this piece of the code the war if i copy

00:38:09,230 --> 00:38:17,150
without the main method if i put this

00:38:13,340 --> 00:38:23,750
one to set up the violent you to loop it

00:38:17,150 --> 00:38:29,200
will work but it will for only on 80

00:38:23,750 --> 00:38:32,300
mega 320 HP because this is the name of

00:38:29,200 --> 00:38:35,060
this is the names of memory registers

00:38:32,300 --> 00:38:37,250
and if i use different microcontroller

00:38:35,060 --> 00:38:40,790
the name of the registers will be

00:38:37,250 --> 00:38:42,590
different so it's Audrina edid you don't

00:38:40,790 --> 00:38:45,020
need to take care about those things

00:38:42,590 --> 00:38:47,690
because there is some abstraction layer

00:38:45,020 --> 00:38:50,360
but this obstruction error takes you

00:38:47,690 --> 00:38:52,100
away from the hardware so you for

00:38:50,360 --> 00:38:55,190
example you cannot use in Arduino IDE

00:38:52,100 --> 00:39:00,170
there are no functions to use timers

00:38:55,190 --> 00:39:02,350
like interrupt but the microcon trap can

00:39:00,170 --> 00:39:05,390
do it but then you need to know exactly

00:39:02,350 --> 00:39:07,820
how to do it on you know I'm pretty cool

00:39:05,390 --> 00:39:09,770
micro comprise it typically it's you

00:39:07,820 --> 00:39:11,180
cannot use it the same way you cannot

00:39:09,770 --> 00:39:13,220
use it on different micro comprise

00:39:11,180 --> 00:39:22,850
because it's not compatible the memory

00:39:13,220 --> 00:39:28,280
recess and so on okay so let's start

00:39:22,850 --> 00:39:31,640
work is the buttons now we will do

00:39:28,280 --> 00:39:37,370
something more complicated we will use

00:39:31,640 --> 00:39:39,650
LED on 35 and then there are three

00:39:37,370 --> 00:39:41,600
buttons little you just float them so

00:39:39,650 --> 00:39:45,500
there is one button connected to pin 9

00:39:41,600 --> 00:39:49,580
and 1 button connected to penn 10 so if

00:39:45,500 --> 00:39:52,280
you press the button if you press the

00:39:49,580 --> 00:39:54,980
button what happened you press the

00:39:52,280 --> 00:39:58,070
button so pin 10

00:39:54,980 --> 00:40:02,420
if i press this one until then i will

00:39:58,070 --> 00:40:05,330
have zero walls because if i press it i

00:40:02,420 --> 00:40:09,230
close the circuit and i will have zero

00:40:05,330 --> 00:40:11,300
volts how many volts or gloating what is

00:40:09,230 --> 00:40:20,300
the logic stake in the button is not

00:40:11,300 --> 00:40:22,670
pressed so this is disconnected here I'm

00:40:20,300 --> 00:40:34,400
not pressing it is disconnected so with

00:40:22,670 --> 00:40:42,200
the scope of this paper nah no go get

00:40:34,400 --> 00:40:46,760
them now men it's not defined no one

00:40:42,200 --> 00:40:51,130
knows because it's floating somewhere so

00:40:46,760 --> 00:40:54,619
those buttons are connected wrong

00:40:51,130 --> 00:40:58,490
because you have unknown stay here if I

00:40:54,619 --> 00:41:01,550
press it press it the state is defined

00:40:58,490 --> 00:41:05,300
it's connected to ground zero it is not

00:41:01,550 --> 00:41:07,730
pressed it's 14 you don't know what is

00:41:05,300 --> 00:41:10,520
even and you cannot tell it because it's

00:41:07,730 --> 00:41:18,020
unknown really there is no electric

00:41:10,520 --> 00:41:23,359
potential I know so it can it can it can

00:41:18,020 --> 00:41:27,710
give you 10 sometimes one it's floating

00:41:23,359 --> 00:41:31,460
it's a problem so you need to use

00:41:27,710 --> 00:41:37,280
something called pull-up resistor what

00:41:31,460 --> 00:41:40,550
does it mean I'd ground here here is my

00:41:37,280 --> 00:41:43,460
button and here is the paper I want to

00:41:40,550 --> 00:41:48,550
read the state of the bottle so if i

00:41:43,460 --> 00:41:53,750
press the button here is 0 ohms so

00:41:48,550 --> 00:41:59,590
electric goes here it's go to ground it

00:41:53,750 --> 00:42:03,050
is it compressed so here is infinite of

00:41:59,590 --> 00:42:06,350
output resistance thank you so that the

00:42:03,050 --> 00:42:06,960
resistance is infinite here so I have

00:42:06,350 --> 00:42:10,140
some

00:42:06,960 --> 00:42:13,230
resistor here one not a killer to 10

00:42:10,140 --> 00:42:16,830
kilo ohms so because there is infinite

00:42:13,230 --> 00:42:18,990
and this one is much much slower than

00:42:16,830 --> 00:42:23,820
infinity so electricity goes here and

00:42:18,990 --> 00:42:27,480
here i have 5 volts or the high

00:42:23,820 --> 00:42:32,100
potential because if i press it give is

00:42:27,480 --> 00:42:35,370
zero here is some kilohms so 0 is much

00:42:32,100 --> 00:42:39,170
much smaller than clones so hopelessly

00:42:35,370 --> 00:42:41,190
goes here it's called pull-up resistor

00:42:39,170 --> 00:42:44,280
this is probably most complicated

00:42:41,190 --> 00:42:48,630
alektra means we will do today you must

00:42:44,280 --> 00:42:50,670
know and all that because never ever if

00:42:48,630 --> 00:42:54,750
you want to read some information from

00:42:50,670 --> 00:42:58,800
the pin the state must be known low or

00:42:54,750 --> 00:43:02,160
high and if is it this is not connected

00:42:58,800 --> 00:43:05,430
you cannot tell what is the state so

00:43:02,160 --> 00:43:10,110
happily on microcontroller you can find

00:43:05,430 --> 00:43:12,960
something called internal pull up see

00:43:10,110 --> 00:43:16,710
you that you can choose you can say hey

00:43:12,960 --> 00:43:20,520
this pin will be input and please switch

00:43:16,710 --> 00:43:23,160
in turn up plop on or if you use your

00:43:20,520 --> 00:43:27,510
blood you just say hey it's just input

00:43:23,160 --> 00:43:31,740
and I don't need internal block so this

00:43:27,510 --> 00:43:35,130
connect this is this one let's say is

00:43:31,740 --> 00:43:39,030
wrong without props but you can use

00:43:35,130 --> 00:43:42,810
plants inside the microcontroller second

00:43:39,030 --> 00:43:46,530
thing I want to press those buttons so

00:43:42,810 --> 00:43:48,900
there are ye they are starting more and

00:43:46,530 --> 00:43:54,030
more and then going you know faith down

00:43:48,900 --> 00:43:58,650
and so on but you know that on the pin

00:43:54,030 --> 00:44:04,980
you can just set 01 so how to put there

00:43:58,650 --> 00:44:09,720
let's say half of the energy yes up and

00:44:04,980 --> 00:44:13,410
down up and down it's called PDM proved

00:44:09,720 --> 00:44:17,160
with modulation so it means that you

00:44:13,410 --> 00:44:18,570
have some duty cycle and inside the duty

00:44:17,160 --> 00:44:21,450
cycle

00:44:18,570 --> 00:44:26,070
you change the time how long is spin up

00:44:21,450 --> 00:44:32,700
and how long is pinned down and the duty

00:44:26,070 --> 00:44:35,490
cycle is in your hearts so it's very

00:44:32,700 --> 00:44:39,270
fast so you can see that it's you know

00:44:35,490 --> 00:44:43,410
working smoothly up and down but this is

00:44:39,270 --> 00:44:45,420
the way how to control them energy this

00:44:43,410 --> 00:44:47,550
is my way of course you can use

00:44:45,420 --> 00:44:50,400
something called digital to analog

00:44:47,550 --> 00:44:52,560
converter there is no digital to come

00:44:50,400 --> 00:44:55,080
out to an open vector on Arduinos

00:44:52,560 --> 00:44:59,790
because it's a quite expensive and very

00:44:55,080 --> 00:45:03,270
sophisticated piece of electronics but

00:44:59,790 --> 00:45:06,830
you see you need to switch into pin very

00:45:03,270 --> 00:45:10,320
quickly so again it's not done by main

00:45:06,830 --> 00:45:18,000
CPU there is a special electronics doing

00:45:10,320 --> 00:45:21,510
it for you so if I go back if you want

00:45:18,000 --> 00:45:26,250
to use PDM you must follow device for

00:45:21,510 --> 00:45:34,020
PVM only to some pins so PBS supported

00:45:26,250 --> 00:45:36,000
open 3 5 6 9 10 11 and if you try to use

00:45:34,020 --> 00:45:38,520
the same for example we spin to you will

00:45:36,000 --> 00:45:42,930
try it it will not work because there is

00:45:38,520 --> 00:45:44,670
no electronics doing the PDM pvm is very

00:45:42,930 --> 00:45:46,830
important thing we all use it just for

00:45:44,670 --> 00:45:49,070
playing this the LED but it's very

00:45:46,830 --> 00:45:53,820
important thing if you need to control

00:45:49,070 --> 00:45:57,060
servos or some engines because using

00:45:53,820 --> 00:45:59,520
this you control how much energy you you

00:45:57,060 --> 00:46:04,440
are providing to the engine again never

00:45:59,520 --> 00:46:09,360
ever connect server never ever connect

00:46:04,440 --> 00:46:12,000
some electric engine directly to Arduino

00:46:09,360 --> 00:46:13,680
because you destroyed very easy because

00:46:12,000 --> 00:46:21,140
those devices takes a lot of current

00:46:13,680 --> 00:46:21,140
okay so please open file called

00:46:23,490 --> 00:46:26,790
faith keys

00:46:35,650 --> 00:46:46,960
so first of all if you are not see

00:46:42,240 --> 00:46:48,430
developers we are using here instead of

00:46:46,960 --> 00:46:51,460
using the constants i'm using here

00:46:48,430 --> 00:46:53,380
define macros so this is Layla all it

00:46:51,460 --> 00:46:56,740
looks like so if you are if you know

00:46:53,380 --> 00:46:59,020
that you will play more is the Arduino

00:46:56,740 --> 00:47:02,350
for some micro electronics it's very

00:46:59,020 --> 00:47:05,170
good idea to find some book about the c

00:47:02,350 --> 00:47:09,670
language and treat at least first three

00:47:05,170 --> 00:47:11,800
chapters you know it's still programming

00:47:09,670 --> 00:47:13,420
of variables and so on but the specific

00:47:11,800 --> 00:47:16,570
things about the sea are typically in

00:47:13,420 --> 00:47:18,850
first three to five chapters what it

00:47:16,570 --> 00:47:24,960
does it define include and stuff like

00:47:18,850 --> 00:47:28,930
that here you can see i am defining

00:47:24,960 --> 00:47:33,520
things i want to use and here you can

00:47:28,930 --> 00:47:38,800
see something you input plug so i say

00:47:33,520 --> 00:47:41,770
hey on pin 10 I need to use the pin 10

00:47:38,800 --> 00:47:44,620
as an input and please I need an

00:47:41,770 --> 00:47:47,820
internal clock too if you choose just

00:47:44,620 --> 00:47:50,350
input you need to use your own pull up

00:47:47,820 --> 00:47:55,330
you can you can try to learn of work

00:47:50,350 --> 00:47:58,020
because there is an unknown state and if

00:47:55,330 --> 00:47:58,020
we go here

00:48:00,349 --> 00:48:09,710
I check the press means connected to

00:48:05,720 --> 00:48:14,059
ground solo so if the button steak is

00:48:09,710 --> 00:48:17,869
slow it's pressed I just I have just

00:48:14,059 --> 00:48:20,710
some surreal print here to to debug a

00:48:17,869 --> 00:48:28,460
tour to Google's going on I made some

00:48:20,710 --> 00:48:31,069
time and I check it again why button is

00:48:28,460 --> 00:48:35,839
a mechanic device so if you press the

00:48:31,069 --> 00:48:41,690
button because inside the button is pro

00:48:35,839 --> 00:48:44,539
Gingka spring and you know it oscillates

00:48:41,690 --> 00:48:47,569
so you need some time to you know to

00:48:44,539 --> 00:48:50,720
stabilize the connection so this is the

00:48:47,569 --> 00:48:54,410
way how you it's cozy that you are

00:48:50,720 --> 00:48:56,239
debouncing it so you are now I know okay

00:48:54,410 --> 00:48:59,259
it's really press it's not some accident

00:48:56,239 --> 00:49:02,749
because of some bouncing of the spring

00:48:59,259 --> 00:49:04,759
this number here is extremely high it's

00:49:02,749 --> 00:49:06,799
here because you can see it it's

00:49:04,759 --> 00:49:10,039
extremely high typically you need to

00:49:06,799 --> 00:49:13,789
write like a 1 millisecond or if you

00:49:10,039 --> 00:49:16,489
have if you so every piece of

00:49:13,789 --> 00:49:18,890
electronics should have something called

00:49:16,489 --> 00:49:21,049
data sheet which tells you how it words

00:49:18,890 --> 00:49:22,819
how to connect it and if you find the

00:49:21,049 --> 00:49:25,509
data sheet for the button the one

00:49:22,819 --> 00:49:30,380
information you get how long it takes to

00:49:25,509 --> 00:49:32,960
stabilize the state of the button how

00:49:30,380 --> 00:49:35,569
many milliseconds so here you need to

00:49:32,960 --> 00:49:39,140
put something higher than you know okay

00:49:35,569 --> 00:49:44,420
it's really pressed then we do it the

00:49:39,140 --> 00:49:48,309
same way for key down I'm just changing

00:49:44,420 --> 00:49:53,239
some value and analog right means hey

00:49:48,309 --> 00:49:57,729
said change the PBM on some pin the

00:49:53,239 --> 00:50:03,140
number is from 0 to 20 225 so you can

00:49:57,729 --> 00:50:07,279
you know put energy outside in 256 steps

00:50:03,140 --> 00:50:09,920
and higher number means more energy so

00:50:07,279 --> 00:50:12,739
if a duty cycle and then you can control

00:50:09,920 --> 00:50:13,470
how much how long it will take to put

00:50:12,739 --> 00:50:18,150
the

00:50:13,470 --> 00:50:23,820
the pin on the high state so try this

00:50:18,150 --> 00:50:26,190
one try to change LED for example to

00:50:23,820 --> 00:50:28,619
number two and you will see it will not

00:50:26,190 --> 00:50:31,670
work because unpinned too there is no

00:50:28,619 --> 00:50:31,670
support for p.m.

00:51:00,349 --> 00:51:07,859
maybe try to front button there are

00:51:06,390 --> 00:51:10,230
buttons up and down there are some

00:51:07,859 --> 00:51:17,099
arrows next to the buttons so that you

00:51:10,230 --> 00:51:21,089
were with those bubbles okay yeah but

00:51:17,099 --> 00:51:24,410
it's not smooth it's seated on or off

00:51:21,089 --> 00:51:24,410
because there is no p.m.

00:51:54,789 --> 00:52:11,640
so you have any questions around that

00:51:58,829 --> 00:52:11,640
some questions yes

00:52:26,510 --> 00:52:40,620
there is the compiler behind a vm APR

00:52:30,840 --> 00:52:45,540
GCC the open-source compiler ok ok it

00:52:40,620 --> 00:52:48,360
works that you have for every board you

00:52:45,540 --> 00:52:50,370
have set of libraries so I de choose the

00:52:48,360 --> 00:52:53,970
right libraries for the right for the

00:52:50,370 --> 00:53:00,180
board and the AVR GCC compiler together

00:52:53,970 --> 00:53:02,820
and ID uploads it to Arduino board under

00:53:00,180 --> 00:53:06,990
cheap there is a very small boot loader

00:53:02,820 --> 00:53:08,820
and if you switch the Arduino on the

00:53:06,990 --> 00:53:11,610
first applicate there is an application

00:53:08,820 --> 00:53:15,720
to blow to start and waiting for one

00:53:11,610 --> 00:53:17,220
second if there are some data like if

00:53:15,720 --> 00:53:20,660
there is some programmer on the opposite

00:53:17,220 --> 00:53:24,210
side if no it start up your application

00:53:20,660 --> 00:53:29,090
so you can what you can do you can take

00:53:24,210 --> 00:53:34,710
any cheap used on Arduinos like 80 mega

00:53:29,090 --> 00:53:38,370
328 you can burn up closer to the chip

00:53:34,710 --> 00:53:40,080
and you can use it as a bean ID but to

00:53:38,370 --> 00:53:44,220
burn the bootloader you need a special

00:53:40,080 --> 00:53:47,760
device shape before compiling if it's

00:53:44,220 --> 00:53:50,370
not safe not compile it compile it

00:53:47,760 --> 00:53:51,720
compiles upload every doesn't work it's

00:53:50,370 --> 00:53:57,930
a typical problem means if you compile

00:53:51,720 --> 00:54:01,800
it further on board you know this sir

00:53:57,930 --> 00:54:07,770
arduino started the project of the

00:54:01,800 --> 00:54:10,020
Arduino is 10 years old from 2005 and it

00:54:07,770 --> 00:54:14,250
started as a project for the students in

00:54:10,020 --> 00:54:16,170
each other because they have to buy a

00:54:14,250 --> 00:54:18,630
very expensive board to learn micro

00:54:16,170 --> 00:54:22,050
electronics and those were too expensive

00:54:18,630 --> 00:54:25,500
for them so they they started to find a

00:54:22,050 --> 00:54:28,440
way how to make it cheaper because if

00:54:25,500 --> 00:54:29,730
you want to program microcontroller you

00:54:28,440 --> 00:54:33,180
need to have some

00:54:29,730 --> 00:54:35,609
programmer set device but in past those

00:54:33,180 --> 00:54:37,170
programmers were very very expensive now

00:54:35,609 --> 00:54:38,880
you can buy programmer for Jewel's

00:54:37,170 --> 00:54:42,480
cancel the trip the programmer the

00:54:38,880 --> 00:54:44,400
prices eight US dollars on ebay but in

00:54:42,480 --> 00:54:49,080
past the price was in one hundreds of

00:54:44,400 --> 00:54:50,520
dollars damn expensive but now if you

00:54:49,080 --> 00:54:52,740
want to buy a really good programmer

00:54:50,520 --> 00:54:55,950
mistletoe for this supporting different

00:54:52,740 --> 00:54:58,230
base debugging and so on the price will

00:54:55,950 --> 00:54:59,910
be very very high to just the basic

00:54:58,230 --> 00:55:02,550
programmers the price is very cheap very

00:54:59,910 --> 00:55:05,880
low but if you want some nice programmer

00:55:02,550 --> 00:55:14,180
the price can be again in hundreds of US

00:55:05,880 --> 00:55:21,330
dollars okay does it work perfect so the

00:55:14,180 --> 00:55:22,920
button is the most simplest sensor that

00:55:21,330 --> 00:55:24,960
we use it for example again if you will

00:55:22,920 --> 00:55:28,380
check the if you will check the 3d

00:55:24,960 --> 00:55:30,300
printers if print leaf for the printer

00:55:28,380 --> 00:55:33,869
starts printing you need to find the

00:55:30,300 --> 00:55:38,580
printer needs to find 000 position and

00:55:33,869 --> 00:55:42,869
it's very simple on every ax you have a

00:55:38,580 --> 00:55:45,600
small button and it's going in one in

00:55:42,869 --> 00:55:48,270
the sticks until the button is pressed

00:55:45,600 --> 00:55:51,869
it means I here is e0 the same for

00:55:48,270 --> 00:55:56,070
epsilon say for the set is this very

00:55:51,869 --> 00:55:59,340
hard to find some position is button but

00:55:56,070 --> 00:56:07,010
of course we want to use some more

00:55:59,340 --> 00:56:12,920
sophisticated sensors and we will use

00:56:07,010 --> 00:56:12,920
first our sensor will be the

00:56:14,119 --> 00:56:20,340
light-sensitive resistor this light

00:56:17,130 --> 00:56:24,690
sensitive eyes photoresistor it change

00:56:20,340 --> 00:56:28,590
the resistance depends on the amount of

00:56:24,690 --> 00:56:33,330
the light so let's say we have two kinds

00:56:28,590 --> 00:56:36,900
of sensors one sensors are digital about

00:56:33,330 --> 00:56:39,200
sending you data in some digital form so

00:56:36,900 --> 00:56:41,730
typically you have some kind of the bus

00:56:39,200 --> 00:56:42,670
there are many buses supported on

00:56:41,730 --> 00:56:46,030
Arduino

00:56:42,670 --> 00:56:49,420
the boards you can use serial

00:56:46,030 --> 00:56:56,140
communication you can use bus I to see

00:56:49,420 --> 00:56:57,910
or I square C or you can use SPI common

00:56:56,140 --> 00:57:00,160
question okay i don't use canvas because

00:56:57,910 --> 00:57:03,970
i want use in my car yes it's possible

00:57:00,160 --> 00:57:06,330
you not just need to use I Arduino with

00:57:03,970 --> 00:57:09,610
microcontroller supporting weekend box

00:57:06,330 --> 00:57:12,550
there is no canvas support in Arduino

00:57:09,610 --> 00:57:17,500
IDE typically are you use some special

00:57:12,550 --> 00:57:21,120
field for it and are more things like

00:57:17,500 --> 00:57:25,330
that so this is the digital sensors or

00:57:21,120 --> 00:57:27,610
this sensor is analog an analog sensors

00:57:25,330 --> 00:57:33,060
sensor means that it gives you

00:57:27,610 --> 00:57:33,060
information as an amount of the voltage

00:57:34,680 --> 00:57:41,790
why is it connected like this if I

00:57:39,120 --> 00:57:44,710
because you need to know to state again

00:57:41,790 --> 00:57:48,820
so here the pins here on the right

00:57:44,710 --> 00:57:52,210
bottom an analog inputs so you can use

00:57:48,820 --> 00:57:55,090
it as a digital pin by God but they have

00:57:52,210 --> 00:57:57,880
special functionality you can sit on to

00:57:55,090 --> 00:58:02,740
use it as analog input so you can

00:57:57,880 --> 00:58:06,490
measure the voltage here this piece of

00:58:02,740 --> 00:58:09,160
electronics change the resistance so if

00:58:06,490 --> 00:58:12,610
you connect it directly you can't stand

00:58:09,160 --> 00:58:14,950
up sequence there injure be nasty so you

00:58:12,610 --> 00:58:19,900
need to use this circuit it's called

00:58:14,950 --> 00:58:22,830
voltage divider this resistor change the

00:58:19,900 --> 00:58:25,840
resistance this register is fixed and

00:58:22,830 --> 00:58:30,130
depends on value here you measure

00:58:25,840 --> 00:58:31,960
between the resin voltage because the

00:58:30,130 --> 00:58:34,900
current can for you it is the ground

00:58:31,960 --> 00:58:37,750
will spy mods so current can flow here

00:58:34,900 --> 00:58:41,590
and you can measure was here because it

00:58:37,750 --> 00:58:43,780
depends on this a piece of hydraulics

00:58:41,590 --> 00:58:46,510
and this piece of electronic dollars

00:58:43,780 --> 00:58:48,970
depends on light so this is the trauma

00:58:46,510 --> 00:58:53,730
Bay how to connect these types of the

00:58:48,970 --> 00:58:53,730
sensors okay how to measure the voltage

00:58:54,600 --> 00:59:02,410
inside a microcontroller you have a

00:58:58,720 --> 00:59:07,990
special circuit called unalike to

00:59:02,410 --> 00:59:10,840
digital converter ADC it you know it

00:59:07,990 --> 00:59:14,170
transforms the amount of the voltage to

00:59:10,840 --> 00:59:19,960
some digital number so here I have zero

00:59:14,170 --> 00:59:25,330
volts here I have at one volt here i

00:59:19,960 --> 00:59:30,760
have 40 and here am i have a sudden is

00:59:25,330 --> 00:59:34,360
it song is 87 so it's a 3-bit an output

00:59:30,760 --> 00:59:38,470
ticket to digital converter so if i have

00:59:34,360 --> 00:59:43,600
this voltage that ABC returns me one if

00:59:38,470 --> 00:59:47,410
i have something from here to here from

00:59:43,600 --> 00:59:49,900
here to here it depends me to hear it

00:59:47,410 --> 00:59:54,700
returns three and so on so it's some

00:59:49,900 --> 00:59:59,740
kind of approximation on ugly know you

00:59:54,700 --> 01:00:08,650
have ten bit ADC so it means the 0 1 is

00:59:59,740 --> 01:00:14,230
0 and opposite is 1023 okay so i know

01:00:08,650 --> 01:00:24,420
the 0 is 0 what is the voltage for 1023

01:00:14,230 --> 01:00:24,420
is the voltage no no now

01:00:28,860 --> 01:00:40,480
it's reference voltage what is the

01:00:32,980 --> 01:00:42,910
reference voltage it can depends on you

01:00:40,480 --> 01:00:46,540
because you have a special pin then you

01:00:42,910 --> 01:00:49,990
can put your reference if you don't use

01:00:46,540 --> 01:00:56,140
this one the reference voltage is the

01:00:49,990 --> 01:00:58,210
power voltage and that's a program it

01:00:56,140 --> 01:01:04,870
can in two thousand volts if the Arduino

01:00:58,210 --> 01:01:07,780
can survive but there is a problem if

01:01:04,870 --> 01:01:12,840
you don't have a very good source of the

01:01:07,780 --> 01:01:19,750
power this can be 5 volts or it can be

01:01:12,840 --> 01:01:21,790
48 volts you don't know so if you really

01:01:19,750 --> 01:01:25,300
need very precise measurement of the

01:01:21,790 --> 01:01:29,160
analog you need to use a reference

01:01:25,300 --> 01:01:32,260
voltage so typically use a special

01:01:29,160 --> 01:01:36,880
electronics to create a reference

01:01:32,260 --> 01:01:38,890
voltage then special devices just

01:01:36,880 --> 01:01:43,180
creating the very very precise reference

01:01:38,890 --> 01:01:46,450
voltage so measuring the analog you know

01:01:43,180 --> 01:01:48,550
input is a little tricky if you need a

01:01:46,450 --> 01:01:51,610
higher precision not just 10 bits you

01:01:48,550 --> 01:01:56,620
can buy external device typically

01:01:51,610 --> 01:02:00,370
connected to i2c bus which can have like

01:01:56,620 --> 01:02:02,500
12 bit 16-bit 24 bits and so but the

01:02:00,370 --> 01:02:10,270
price will be probably higher than the

01:02:02,500 --> 01:02:19,120
price of the whole arduino so what you

01:02:10,270 --> 01:02:21,940
do more light means more leds up so we

01:02:19,120 --> 01:02:26,550
will measure the light here some number

01:02:21,940 --> 01:02:31,930
and we transfer it to number how many

01:02:26,550 --> 01:02:34,570
leds we want to switch on so example is

01:02:31,930 --> 01:02:37,140
like scale so please open light scale

01:02:34,570 --> 01:02:37,140
example

01:02:47,760 --> 01:02:58,030
and you can see that i am using i have a

01:02:54,910 --> 01:03:01,930
sensor here the name if the sensor is a

01:02:58,030 --> 01:03:06,250
one it doesn't look like a number there

01:03:01,930 --> 01:03:11,680
is a macro that a one means analog input

01:03:06,250 --> 01:03:18,520
one this is a macro for it again I need

01:03:11,680 --> 01:03:21,309
to say initialize the pins I won't I

01:03:18,520 --> 01:03:28,630
will work with all four LED so I need to

01:03:21,309 --> 01:03:31,930
initialize it using the analog read you

01:03:28,630 --> 01:03:36,430
get the amount of the gate voltage so

01:03:31,930 --> 01:03:41,470
it's a number from 0 to 1,023 and using

01:03:36,430 --> 01:03:45,609
the map function I you know here is the

01:03:41,470 --> 01:03:47,349
one scale here is another scale and it

01:03:45,609 --> 01:03:49,869
you know it recalculates it from one

01:03:47,349 --> 01:03:52,809
scale this number is inside this

01:03:49,869 --> 01:03:56,710
boundaries and it may cai to recalculate

01:03:52,809 --> 01:04:01,329
it inside those boundaries so I don't

01:03:56,710 --> 01:04:07,089
have I've no leds leds very simple and

01:04:01,329 --> 01:04:09,760
again I do some stocking what's the the

01:04:07,089 --> 01:04:12,430
new functionality of Arduino IDE is that

01:04:09,760 --> 01:04:16,119
if you are see I am just sending some

01:04:12,430 --> 01:04:21,099
number here it's a just number so what

01:04:16,119 --> 01:04:25,150
can I you can do of course I can use the

01:04:21,099 --> 01:04:30,010
serial monitor use it before or there is

01:04:25,150 --> 01:04:35,890
a new tool called serial plotter and if

01:04:30,010 --> 01:04:39,430
you sent if you send just number to sell

01:04:35,890 --> 01:04:43,240
Proctor it creates a nice chart why

01:04:39,430 --> 01:04:48,359
there is no light almost lot of light I

01:04:43,240 --> 01:04:48,359
have some butter in my pocket

01:04:53,619 --> 01:05:08,749
so local flight here the light sensor is

01:04:57,049 --> 01:05:11,079
this one this is the light sensor hello

01:05:08,749 --> 01:05:11,079
Flo

01:05:16,500 --> 01:05:24,750
if you change the sensor from a 1 to a

01:05:20,740 --> 01:05:27,910
zero on a zero there is a thermistor

01:05:24,750 --> 01:05:29,710
thermistor is a resistor which depends

01:05:27,910 --> 01:05:32,490
on temperature so you can use it to

01:05:29,710 --> 01:05:32,490
measure temperature

01:06:22,730 --> 01:06:31,619
so just play with that and on a listen a

01:06:28,500 --> 01:06:35,250
little what's very nice here so I have

01:06:31,619 --> 01:06:38,190
some sensor and I'm using the number

01:06:35,250 --> 01:06:41,070
from the sensor I'm sending the numbers

01:06:38,190 --> 01:06:45,330
on from the sensor using the sale for

01:06:41,070 --> 01:06:48,330
two computer so if you connect to serial

01:06:45,330 --> 01:06:50,010
port on Arduino not computer but you

01:06:48,330 --> 01:06:53,220
call you call it there is something

01:06:50,010 --> 01:06:55,920
called blue to smoothen you can buy a

01:06:53,220 --> 01:06:58,920
small bluetooth device we set up or on

01:06:55,920 --> 01:07:01,619
it then you can write application for a

01:06:58,920 --> 01:07:05,490
mobile phone so any data from your

01:07:01,619 --> 01:07:09,359
arduino using the bluetooth you can send

01:07:05,490 --> 01:07:12,270
to your mobile phone very easy because

01:07:09,359 --> 01:07:15,330
the basic bluetooth works is a virus

01:07:12,270 --> 01:07:18,089
serial port it supported on all

01:07:15,330 --> 01:07:20,099
platforms it doesn't matter if you are

01:07:18,089 --> 01:07:22,380
using the iphone or some Android or

01:07:20,099 --> 01:07:25,710
Windows Phone it works everywhere you

01:07:22,380 --> 01:07:29,970
can very easy use Arduino SS source of

01:07:25,710 --> 01:07:35,119
the data for your mobile phone it was

01:07:29,970 --> 01:07:40,800
used in during the Fukushima power

01:07:35,119 --> 01:07:43,410
nuclear power plant disaster because the

01:07:40,800 --> 01:07:48,440
tsunami destroys a lot of things around

01:07:43,410 --> 01:07:51,089
the nuclear power plant and no one knew

01:07:48,440 --> 01:07:53,160
what happened there about the in terms

01:07:51,089 --> 01:07:56,190
of the radioactivity so there are a lot

01:07:53,160 --> 01:07:59,940
of volunteers they build a device

01:07:56,190 --> 01:08:02,369
measuring the radiation device has been

01:07:59,940 --> 01:08:05,250
connected to mobile phone and they just

01:08:02,369 --> 01:08:08,130
put it there and after the battery was

01:08:05,250 --> 01:08:10,080
working they get the data real time so

01:08:08,130 --> 01:08:11,849
very easy very how to use those kinds of

01:08:10,080 --> 01:08:13,200
the devices together with the mobile

01:08:11,849 --> 01:08:15,510
phone you can connect it to the

01:08:13,200 --> 01:08:20,700
operatives because glucose is a serial

01:08:15,510 --> 01:08:26,700
port in this term ok some questions

01:08:20,700 --> 01:08:31,489
about a knock sensors ok we have 20

01:08:26,700 --> 01:08:31,489
minutes more so

01:08:31,620 --> 01:08:48,549
now something very important okay so

01:08:42,120 --> 01:08:51,700
here's the display and the display if

01:08:48,549 --> 01:08:55,540
you look on the display you see some

01:08:51,700 --> 01:09:01,660
letters here some numbers and every

01:08:55,540 --> 01:09:04,060
segment of the number is led so you can

01:09:01,660 --> 01:09:07,540
still eat a lot of LEDs and those LEDs

01:09:04,060 --> 01:09:09,730
grades or characters but you can imagine

01:09:07,540 --> 01:09:12,880
that there are too many LEDs to control

01:09:09,730 --> 01:09:15,609
every single LED separately don't I do

01:09:12,880 --> 01:09:19,420
that the don't do this please not do not

01:09:15,609 --> 01:09:23,799
disassemble it so if i put the display

01:09:19,420 --> 01:09:27,400
away you can see there are some pins

01:09:23,799 --> 01:09:33,670
around there are not so many pins as we

01:09:27,400 --> 01:09:37,510
have segments here but for this place

01:09:33,670 --> 01:09:40,600
you have something called driver so this

01:09:37,510 --> 01:09:43,960
piece of the electronics controls the

01:09:40,600 --> 01:09:48,580
display and communicates with the

01:09:43,960 --> 01:09:51,850
microcontroller happily they are a lot

01:09:48,580 --> 01:09:55,210
of different displays in different

01:09:51,850 --> 01:09:58,930
shapes but they are not so many drivers

01:09:55,210 --> 01:10:00,780
to control them so you can it doesn't

01:09:58,930 --> 01:10:03,640
matter what the display you are using

01:10:00,780 --> 01:10:08,380
for you is more important to type of the

01:10:03,640 --> 01:10:10,960
driver as are not so many drivers the

01:10:08,380 --> 01:10:19,390
driver here the name of the driver is

01:10:10,960 --> 01:10:21,940
TMC 1603 I think and this driver for the

01:10:19,390 --> 01:10:25,690
display is very special because the data

01:10:21,940 --> 01:10:29,560
sheet for this driver is just the

01:10:25,690 --> 01:10:31,769
picture of the driver and one sentence

01:10:29,560 --> 01:10:38,829
in Chinese

01:10:31,769 --> 01:10:42,309
so documentation 0 episodes 0 but we are

01:10:38,829 --> 01:10:47,260
in ugly the world so for everything you

01:10:42,309 --> 01:10:53,800
can find ready to use driver so how it

01:10:47,260 --> 01:10:56,860
works so imagine you have some something

01:10:53,800 --> 01:11:03,999
you need to control it from Arduino so

01:10:56,860 --> 01:11:10,079
it is very how to find something is this

01:11:03,999 --> 01:11:18,760
one so I go let's go to ebay for example

01:11:10,079 --> 01:11:20,380
and doing all let's say RTC at this is

01:11:18,760 --> 01:11:28,170
some time coffee values the Borg is this

01:11:20,380 --> 01:11:28,170
so I have this nice written clock and

01:11:29,249 --> 01:11:40,659
this is the name ds3 231 this is the

01:11:36,670 --> 01:11:44,199
number of the electronics so every time

01:11:40,659 --> 01:11:52,479
you buy something like that you just

01:11:44,199 --> 01:11:56,559
need to read from the chip what is it so

01:11:52,479 --> 01:12:02,739
so you could pay copied first solution

01:11:56,559 --> 01:12:04,719
if you go to tools sorry sketch include

01:12:02,739 --> 01:12:10,059
library and here you have managed

01:12:04,719 --> 01:12:17,699
libraries and just you just search for

01:12:10,059 --> 01:12:22,469
the name of the chip here we are I have

01:12:17,699 --> 01:12:25,960
library to control that kind of the chip

01:12:22,469 --> 01:12:27,909
very simple so you don't eat you know

01:12:25,960 --> 01:12:30,969
that who did this module it's not

01:12:27,909 --> 01:12:33,809
important the important is what is on

01:12:30,969 --> 01:12:37,389
the love you so you need to find the

01:12:33,809 --> 01:12:39,880
return number the name the number on the

01:12:37,389 --> 01:12:44,260
chip and they are looking for the name

01:12:39,880 --> 01:12:45,610
of the chip it's very very unusual if

01:12:44,260 --> 01:12:48,369
you don't find

01:12:45,610 --> 01:12:50,830
the library for it it's very unusual for

01:12:48,369 --> 01:12:59,380
almost everything you can find library

01:12:50,830 --> 01:13:01,449
if not this way you just google it yes

01:12:59,380 --> 01:13:03,190
it tells you there is a the library

01:13:01,449 --> 01:13:04,119
manager is quite good ear so it tells

01:13:03,190 --> 01:13:06,550
you there is a new version of the

01:13:04,119 --> 01:13:09,730
library the same way you can manage

01:13:06,550 --> 01:13:11,770
boards so for example if there is

01:13:09,730 --> 01:13:13,690
singing port you don't need to download

01:13:11,770 --> 01:13:15,130
again everything because there is a

01:13:13,690 --> 01:13:17,949
board manager and you just don't know

01:13:15,130 --> 01:13:22,239
the support for a new board it's very

01:13:17,949 --> 01:13:25,650
very useful this part because it's open

01:13:22,239 --> 01:13:29,860
source almost all those libraries are

01:13:25,650 --> 01:13:31,830
somewhere as the source code because you

01:13:29,860 --> 01:13:34,810
cannot get those libraries breaking

01:13:31,830 --> 01:13:36,300
precompiled because you need to compile

01:13:34,810 --> 01:13:39,040
it every time for the specific

01:13:36,300 --> 01:13:43,510
microcontroller so all those libraries

01:13:39,040 --> 01:13:45,909
are suffering form of source code so you

01:13:43,510 --> 01:13:47,949
can look at it how it works and this is

01:13:45,909 --> 01:13:52,560
the best documentation you can get the

01:13:47,949 --> 01:14:05,739
source code for library unfortunately

01:13:52,560 --> 01:14:08,409
this TM 6136 ah you can see I have it

01:14:05,739 --> 01:14:11,619
installed already but to find this

01:14:08,409 --> 01:14:14,380
library was extremely difficult because

01:14:11,619 --> 01:14:16,690
it's a part of another you know more

01:14:14,380 --> 01:14:22,690
libraries so it's almost on such a load

01:14:16,690 --> 01:14:25,690
itself but never mind you can find this

01:14:22,690 --> 01:14:29,650
library in folder you download it from

01:14:25,690 --> 01:14:32,429
the flesh this so if you go to Arduino

01:14:29,650 --> 01:14:32,429
workshop folder

01:14:38,130 --> 01:14:46,960
here is a libraries and inside libraries

01:14:42,489 --> 01:14:49,570
you have a couple of subfolders those

01:14:46,960 --> 01:14:54,190
subfolders contains the libraries for

01:14:49,570 --> 01:14:57,880
our shield TM 1636 is the library for

01:14:54,190 --> 01:15:00,790
the display and there are some libraries

01:14:57,880 --> 01:15:04,719
for real time clocks but too we will use

01:15:00,790 --> 01:15:11,099
it video music link there to put those

01:15:04,719 --> 01:15:11,099
libraries first you can copy content

01:15:11,820 --> 01:15:20,440
directly to your to the same folder as

01:15:15,940 --> 01:15:24,639
with your application it's not good idea

01:15:20,440 --> 01:15:32,590
or what you can do if you go to your

01:15:24,639 --> 01:15:36,369
home directory you can find a new folder

01:15:32,590 --> 01:15:38,139
they're called Arduino this folder is

01:15:36,369 --> 01:15:42,280
automatically created for you when you

01:15:38,139 --> 01:15:45,219
first time run around arduino ide then

01:15:42,280 --> 01:15:47,560
it's up for the libraries and you just

01:15:45,219 --> 01:15:50,860
refer to libraries there and you need to

01:15:47,560 --> 01:15:58,780
restart the arduino ide that's all so

01:15:50,860 --> 01:16:01,389
please copy at least p.m. 1636 library

01:15:58,780 --> 01:16:05,320
to proper place so in the home directory

01:16:01,389 --> 01:16:09,750
there is the arduino this capital a I

01:16:05,320 --> 01:16:16,690
expect there is a library so put the TM

01:16:09,750 --> 01:16:18,849
360 1636 there just copy home folder it

01:16:16,690 --> 01:16:26,829
means every folder here is the one

01:16:18,849 --> 01:16:30,219
library by the way nice library for

01:16:26,829 --> 01:16:34,360
encryption and addiction so our Dino is

01:16:30,219 --> 01:16:40,929
enough powerful to use us so think about

01:16:34,360 --> 01:16:44,949
that because if you are so my main

01:16:40,929 --> 01:16:49,000
expertise now will be a IOT in terms of

01:16:44,949 --> 01:16:50,140
things and believe me the almost no one

01:16:49,000 --> 01:16:53,890
is taking care

01:16:50,140 --> 01:17:00,310
the security in IOT because people are

01:16:53,890 --> 01:17:04,480
stupid so even simple cheap Arduino can

01:17:00,310 --> 01:17:07,030
use quite powerful encryption and

01:17:04,480 --> 01:17:13,770
decryption mechanisms you can see I have

01:17:07,030 --> 01:17:16,720
a ssh libraries too so you can use hash

01:17:13,770 --> 01:17:19,330
to again to protect some your data sign

01:17:16,720 --> 01:17:22,870
your data so supportive and it works

01:17:19,330 --> 01:17:35,770
even of those even on sobe cutler as a

01:17:22,870 --> 01:17:39,310
8-bit microcontroller sorry ok so now if

01:17:35,770 --> 01:17:43,480
you come if you open from Arduino

01:17:39,310 --> 01:17:48,430
workshop now you can open measure

01:17:43,480 --> 01:17:50,230
temperature application add it will

01:17:48,430 --> 01:17:57,850
measure the temperature and you will see

01:17:50,230 --> 01:18:02,280
the temperature on the display so only

01:17:57,850 --> 01:18:02,280
one thing here I would like to tell you

01:18:02,430 --> 01:18:09,910
here you can see so you when you measure

01:18:06,790 --> 01:18:13,990
temperature you read the information

01:18:09,910 --> 01:18:17,950
from the analog input so it's a number

01:18:13,990 --> 01:18:22,120
from 0 to 1,023 and you need to

01:18:17,950 --> 01:18:27,600
recalculate it to temperature so where

01:18:22,120 --> 01:18:31,720
to get this formula for a calculation

01:18:27,600 --> 01:18:35,680
another sheet for thermistor you need to

01:18:31,720 --> 01:18:38,980
find a double sheet and then ok imagine

01:18:35,680 --> 01:18:40,630
situation you have a greenhouse and you

01:18:38,980 --> 01:18:42,220
want to control temperature in

01:18:40,630 --> 01:18:44,230
greenhouse so if the temperature is too

01:18:42,220 --> 01:18:46,480
high you want to open window on the

01:18:44,230 --> 01:18:48,630
greenhouse if the temperature going

01:18:46,480 --> 01:18:52,240
below you close to me know in greenhouse

01:18:48,630 --> 01:18:55,030
and you know that the limited limit for

01:18:52,240 --> 01:18:59,500
the temperature is let's say 40 degrees

01:18:55,030 --> 01:19:01,630
of Celsius so do you need to calculate

01:18:59,500 --> 01:19:03,940
the visit 40 degrees of

01:19:01,630 --> 01:19:09,550
or not do you not get the circulation

01:19:03,940 --> 01:19:12,880
for this usage you don't think because

01:19:09,550 --> 01:19:15,820
you can calculate hey 40 degrees means

01:19:12,880 --> 01:19:20,770
that I get the raw number will be I

01:19:15,820 --> 01:19:25,570
don't know 267 because this one this

01:19:20,770 --> 01:19:28,870
calculation is very very expensive to

01:19:25,570 --> 01:19:33,850
calculate it meet a lot of cycles of the

01:19:28,870 --> 01:19:38,100
microcontroller special calculate the

01:19:33,850 --> 01:19:40,330
road item is extremely difficult and

01:19:38,100 --> 01:19:42,370
everything is done by software because

01:19:40,330 --> 01:19:44,949
are a bit arduinos doesn't support

01:19:42,370 --> 01:19:47,639
floating point there is no mathematical

01:19:44,949 --> 01:19:49,480
coprocessor of course you can find

01:19:47,639 --> 01:19:51,580
microcontroller is mathematical

01:19:49,480 --> 01:19:55,570
precision slow program that it is no one

01:19:51,580 --> 01:20:00,520
so this one takes us at very really a

01:19:55,570 --> 01:20:04,270
lot of CPU time if you run something on

01:20:00,520 --> 01:20:07,260
battery you need to save energy as much

01:20:04,270 --> 01:20:11,080
as possible so this one can have a

01:20:07,260 --> 01:20:14,219
significant impact on power consumption

01:20:11,080 --> 01:20:18,760
so you might think you have eight bits

01:20:14,219 --> 01:20:21,159
to kilobytes of the RAM and it consumes

01:20:18,760 --> 01:20:25,630
energy won't run sometimes of butter so

01:20:21,159 --> 01:20:28,780
really think if you need it or not okay

01:20:25,630 --> 01:20:30,699
so just try it and the last thing I show

01:20:28,780 --> 01:20:33,550
because we have a 10 minute last 10

01:20:30,699 --> 01:20:35,920
minutes so in Luskan minutes I explain

01:20:33,550 --> 01:20:39,030
you how it works from low level because

01:20:35,920 --> 01:20:39,030
i think it's late thirsty

01:20:49,370 --> 01:20:53,220
you know to play you know it just show

01:20:52,080 --> 01:20:56,820
you them pretty sure but what is

01:20:53,220 --> 01:20:58,140
important now is for you how to search

01:20:56,820 --> 01:21:00,390
for libraries how to install the

01:20:58,140 --> 01:21:07,040
libraries this is the main topic of this

01:21:00,390 --> 01:21:07,040
example okay

01:21:23,650 --> 01:21:29,840
probably you will see absolutely

01:21:25,880 --> 01:21:34,190
different temperatures around you it's a

01:21:29,840 --> 01:21:36,650
cheap Chinese shield I believe me the

01:21:34,190 --> 01:21:40,960
electronics on it is very very cheap so

01:21:36,650 --> 01:21:40,960
it's the precision is close to zero

01:21:49,070 --> 01:21:59,000
so okay bluffing for today this is the

01:21:56,540 --> 01:22:01,699
pin out of the microcontroller i'm using

01:21:59,000 --> 01:22:04,820
the package is different but this is the

01:22:01,699 --> 01:22:14,860
pin out and you can see that the pins

01:22:04,820 --> 01:22:19,159
are named like tea d b and c and sauna /

01:22:14,860 --> 01:22:25,030
p means port and d is the name of the

01:22:19,159 --> 01:22:29,000
port inside microcontroller the lot of

01:22:25,030 --> 01:22:35,449
memory registers and the memory address

01:22:29,000 --> 01:22:38,599
register controls what's going on inside

01:22:35,449 --> 01:22:41,630
of microcontroller and if you are not

01:22:38,599 --> 01:22:45,020
using the Arduino you are working with

01:22:41,630 --> 01:22:46,969
the memory registers and those memory

01:22:45,020 --> 01:22:50,420
uses are different almost on every micro

01:22:46,969 --> 01:22:52,190
contrast it's quite complicated but if

01:22:50,420 --> 01:23:00,460
you know this you can do a lot of funny

01:22:52,190 --> 01:23:05,659
stuff a very simple three very simple

01:23:00,460 --> 01:23:08,960
example or training I have four LEDs I

01:23:05,659 --> 01:23:12,409
want to switch them on and off exactly

01:23:08,960 --> 01:23:15,409
the same time so if you use the digital

01:23:12,409 --> 01:23:16,929
right it's one of digital right second

01:23:15,409 --> 01:23:20,270
it's not exactly in the same time

01:23:16,929 --> 01:23:22,610
sometimes it can be really important but

01:23:20,270 --> 01:23:27,530
if you know how registers work you can

01:23:22,610 --> 01:23:31,820
do it in one time because typically if

01:23:27,530 --> 01:23:36,949
you have the part d everything with the

01:23:31,820 --> 01:23:39,889
same name d can be control that you

01:23:36,949 --> 01:23:46,460
change the content of the proper

01:23:39,889 --> 01:23:50,150
register so if you open if you open the

01:23:46,460 --> 01:23:57,650
example code if you open example call

01:23:50,150 --> 01:24:01,530
blink all for DD is the name of the

01:23:57,650 --> 01:24:04,870
register controlling all d pins

01:24:01,530 --> 01:24:11,080
so it's an 8-bit register every single

01:24:04,870 --> 01:24:15,040
bit inside controls one pin DDR means

01:24:11,080 --> 01:24:20,230
data direction register I am working

01:24:15,040 --> 01:24:24,630
this port d so did here ddr d i define

01:24:20,230 --> 01:24:24,630
ok this pins will be inputs or outputs

01:24:25,050 --> 01:24:37,450
some binary logic here so i have this

01:24:30,660 --> 01:24:41,170
one controls pd 0 pd one pd 2 and so on

01:24:37,450 --> 01:24:44,080
so i'm just working with pd one two

01:24:41,170 --> 01:24:48,910
three and four because are connected by

01:24:44,080 --> 01:24:51,400
LEDs and using if i change the content

01:24:48,910 --> 01:24:54,700
of port d it's a memory register I

01:24:51,400 --> 01:24:58,270
really change the voltage on the single

01:24:54,700 --> 01:25:01,720
pins because every bit inside the port

01:24:58,270 --> 01:25:07,170
is one pin one physical pain on

01:25:01,720 --> 01:25:10,000
microcontroller this is how works

01:25:07,170 --> 01:25:11,410
microcontrollers on whatever you are

01:25:10,000 --> 01:25:14,200
doing what wha only think you are doing

01:25:11,410 --> 01:25:16,750
is that you are setting up proper

01:25:14,200 --> 01:25:19,030
registers and then you are controlling

01:25:16,750 --> 01:25:23,010
the microcontroller if you are using the

01:25:19,030 --> 01:25:28,240
Arduino you don't need to deal with this

01:25:23,010 --> 01:25:37,860
because Arduino libraries is doing doing

01:25:28,240 --> 01:25:37,860
that for you and prob laughing for today

01:25:41,280 --> 01:25:52,120
yes yes Nana no you just you know you

01:25:48,490 --> 01:25:54,700
need to initialize the pins DD are using

01:25:52,120 --> 01:25:57,100
the ddr register and then you if you

01:25:54,700 --> 01:26:00,600
change the context of port register you

01:25:57,100 --> 01:26:08,220
physically change the power of the pins

01:26:00,600 --> 01:26:12,810
and laughing for today

01:26:08,220 --> 01:26:16,890
I show you how it looks like if you are

01:26:12,810 --> 01:26:19,710
blinking to our LED and you use the

01:26:16,890 --> 01:26:35,040
low-power functionality of the

01:26:19,710 --> 01:26:41,180
microcontroller so this line I am

01:26:35,040 --> 01:26:45,590
sitting here register called p r/r power

01:26:41,180 --> 01:26:51,500
register Baburam reduced register and

01:26:45,590 --> 01:26:55,590
every single bit in this register can

01:26:51,500 --> 01:26:57,990
switch on or off some subsystem or

01:26:55,590 --> 01:27:04,470
microcontroller so for example this one

01:26:57,990 --> 01:27:13,980
switching off Twi its SPI bus and I to

01:27:04,470 --> 01:27:18,810
see us sometime ours this one you can

01:27:13,980 --> 01:27:22,500
understand it this one switch off serial

01:27:18,810 --> 01:27:25,170
communication this one switch off an old

01:27:22,500 --> 01:27:29,430
to digital converter you can switch off

01:27:25,170 --> 01:27:32,010
some subsystems in Surrey gesture and

01:27:29,430 --> 01:27:34,080
use switching silica bits inside

01:27:32,010 --> 01:27:36,660
register you are something switching on

01:27:34,080 --> 01:27:39,090
or off so this is the main logic how the

01:27:36,660 --> 01:27:41,780
microcontrollers works just changing

01:27:39,090 --> 01:27:44,220
memory registers if you want to use

01:27:41,780 --> 01:27:46,830
cellular communication on the back end

01:27:44,220 --> 01:27:49,530
you need to sleep some registers set up

01:27:46,830 --> 01:27:51,510
and there are some registers working

01:27:49,530 --> 01:27:54,870
like a buffer containing what you want

01:27:51,510 --> 01:27:56,580
to send or what you are getting but this

01:27:54,870 --> 01:28:01,820
ugly no you don't need to do with this

01:27:56,580 --> 01:28:04,820
so it's nice ok you have two minutes any

01:28:01,820 --> 01:28:04,820
questions

01:28:06,640 --> 01:28:12,670
I haven't it's not there if you are

01:28:10,670 --> 01:28:17,120
interesting in this there is a very nice

01:28:12,670 --> 01:28:21,470
serious on YouTube by HTML explaining

01:28:17,120 --> 01:28:24,200
how it works just look for atmel on you

01:28:21,470 --> 01:28:27,020
atmel channel on youtube this is very

01:28:24,200 --> 01:28:28,850
very really really great service or if

01:28:27,020 --> 01:28:31,640
you are interesting in it what's very

01:28:28,850 --> 01:28:33,950
nice if you know you probably know dunno

01:28:31,640 --> 01:28:36,110
Coursera for training on my trainings

01:28:33,950 --> 01:28:43,640
there is the one called there is a very

01:28:36,110 --> 01:28:47,480
similar very similar web called EDX EDX

01:28:43,640 --> 01:28:49,730
and there is one training about the

01:28:47,480 --> 01:28:52,370
microcontrollers really great one and

01:28:49,730 --> 01:28:54,380
it's about cortex and three

01:28:52,370 --> 01:28:59,270
microcontroller but all I could confer

01:28:54,380 --> 01:29:11,120
about the same way okay somewhere

01:28:59,270 --> 01:29:13,760
question it's a just we use this shield

01:29:11,120 --> 01:29:16,850
because you know this shield is sad Kate

01:29:13,760 --> 01:29:19,010
for clocks so but we are using it for

01:29:16,850 --> 01:29:22,910
our trainings because we are running

01:29:19,010 --> 01:29:26,140
those trainings so quite a lot we had in

01:29:22,910 --> 01:29:30,980
last year we started on September and

01:29:26,140 --> 01:29:34,520
until December we had the almost 250

01:29:30,980 --> 01:29:36,710
attendees sorry we bought it for from

01:29:34,520 --> 01:29:39,230
our money and because we think it's nice

01:29:36,710 --> 01:29:43,460
to pitch to teach people using those

01:29:39,230 --> 01:29:46,130
kinds of the electrons so it's a ship

01:29:43,460 --> 01:29:48,170
you can bike on ebay the sanction of the

01:29:46,130 --> 01:29:50,690
prices around two hundred crowns so it's

01:29:48,170 --> 01:29:52,550
not so expensive but now we are working

01:29:50,690 --> 01:29:55,490
on the new shield which will be better

01:29:52,550 --> 01:29:59,420
for education I hope the shield will be

01:29:55,490 --> 01:30:05,630
ready in two months but this one is just

01:29:59,420 --> 01:30:08,890
for playing ok some are questions ok

01:30:05,630 --> 01:30:12,430
cloth resent all arduinos on that site I

01:30:08,890 --> 01:30:12,430
take it home back

01:30:36,310 --> 01:30:44,650
it depended it depends how much money

01:30:41,410 --> 01:30:47,270
how much it depends how much my nose

01:30:44,650 --> 01:30:50,480
which odds are some virus technologies

01:30:47,270 --> 01:30:53,300
are easily which are industrial one for

01:30:50,480 --> 01:30:58,910
them expensive here the price that one

01:30:53,300 --> 01:31:02,480
module is like 25 US dollars it's very

01:30:58,910 --> 01:31:05,750
very expensive war with you or you can

01:31:02,480 --> 01:31:09,290
use some rich equals or frequency

01:31:05,750 --> 01:31:15,460
towards 33 yeah but you will have a lot

01:31:09,290 --> 01:31:19,450
of the college lot of interferences

01:31:15,460 --> 01:31:24,580
security zero budget price of this set

01:31:19,450 --> 01:31:28,610
receiver and similarly slide to distort

01:31:24,580 --> 01:31:32,540
the ocean no unity people who will

01:31:28,610 --> 01:31:35,350
give up oh man mark can be interesting

01:31:32,540 --> 01:31:41,810
it depends from extraction to come from

01:31:35,350 --> 01:31:43,980
Austria because there is something

01:31:41,810 --> 01:31:48,690
called secrets network

01:31:43,980 --> 01:31:51,239
equals s I'm always a box it's a French

01:31:48,690 --> 01:31:54,000
company and they are learning networks

01:31:51,239 --> 01:31:57,060
is refugees and not just falling small

01:31:54,000 --> 01:31:59,280
amount of data and the modem for the

01:31:57,060 --> 01:32:01,580
sick fox network prices around five US

01:31:59,280 --> 01:32:01,580
dollars

01:33:30,360 --> 01:33:38,980
choose a few semesters aadmi hormones

01:33:37,600 --> 01:33:41,620
not something capture shock efficiency

01:33:38,980 --> 01:33:43,240
you remember too soon but I never not to

01:33:41,620 --> 01:33:49,110
leave shipping out to such a volatile

01:33:43,240 --> 01:33:49,110
stop okay I did it desi the scuffle

01:34:22,130 --> 01:34:29,420
ling-ling laqueer maybe she Jacoby so

01:34:26,430 --> 01:34:34,050
demos rusty exist especially chipping

01:34:29,420 --> 01:34:37,380
three people died a beautiful my

01:34:34,050 --> 01:34:43,220
community reporting for Aviva business

01:34:37,380 --> 01:34:43,220

YouTube URL: https://www.youtube.com/watch?v=fAazMj1oueI


