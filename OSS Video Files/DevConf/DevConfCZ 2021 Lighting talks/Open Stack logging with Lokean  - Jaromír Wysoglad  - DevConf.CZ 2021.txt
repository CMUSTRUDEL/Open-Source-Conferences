Title: Open Stack logging with Lokean  - JaromÃ­r Wysoglad  - DevConf.CZ 2021
Publication date: 2021-02-04
Playlist: DevConfCZ 2021 Lighting talks
Description: 
	
Captions: 
	00:00:02,560 --> 00:00:06,720
hello

00:00:03,919 --> 00:00:07,279
i am jaromi and with sugat i am an

00:00:06,720 --> 00:00:10,160
intern

00:00:07,279 --> 00:00:12,000
at red hat and let me introduce you to a

00:00:10,160 --> 00:00:14,320
project i am working on

00:00:12,000 --> 00:00:15,440
which is using login to collect and

00:00:14,320 --> 00:00:18,640
store logs

00:00:15,440 --> 00:00:19,920
from open stacks in loki you might ask

00:00:18,640 --> 00:00:23,279
yourself

00:00:19,920 --> 00:00:23,279
why do we need to do that

00:00:24,080 --> 00:00:29,599
well let me first briefly tell you what

00:00:27,199 --> 00:00:31,760
openstack actually is

00:00:29,599 --> 00:00:34,640
it's a cloud operating system which

00:00:31,760 --> 00:00:37,840
controls pools of bare metal machines

00:00:34,640 --> 00:00:41,280
virtual machines and containers

00:00:37,840 --> 00:00:44,000
and each of them produces a lot of locks

00:00:41,280 --> 00:00:46,000
it would be quite inconvenient if you

00:00:44,000 --> 00:00:47,840
had to check logs on each of the

00:00:46,000 --> 00:00:50,559
machines separately

00:00:47,840 --> 00:00:51,280
so that's why we collect logs from each

00:00:50,559 --> 00:00:54,399
individual

00:00:51,280 --> 00:00:57,280
openstack machine and transport them to

00:00:54,399 --> 00:00:57,280
common storage

00:00:57,600 --> 00:01:03,280
what do we use for that common storage

00:01:00,800 --> 00:01:04,479
we use a lock aggregation system called

00:01:03,280 --> 00:01:07,119
logi

00:01:04,479 --> 00:01:09,680
which inspired the name of our project

00:01:07,119 --> 00:01:09,680
login

00:01:10,880 --> 00:01:14,159
let's finally take a look at how all

00:01:12,960 --> 00:01:17,200
this works

00:01:14,159 --> 00:01:20,320
and what exactly loken does

00:01:17,200 --> 00:01:22,400
on the client side we use rcs lock on

00:01:20,320 --> 00:01:24,880
each of the openstack machine

00:01:22,400 --> 00:01:26,159
to collect its logs and put them on a

00:01:24,880 --> 00:01:29,040
common bus

00:01:26,159 --> 00:01:29,600
which transfers them to openshift which

00:01:29,040 --> 00:01:33,280
acts

00:01:29,600 --> 00:01:36,159
as server side for our project

00:01:33,280 --> 00:01:36,640
on the server side we use our component

00:01:36,159 --> 00:01:40,079
called

00:01:36,640 --> 00:01:42,960
sg bridge to take the logs from the bus

00:01:40,079 --> 00:01:44,880
and make them available for lock-in

00:01:42,960 --> 00:01:48,799
lock-in parses the logs

00:01:44,880 --> 00:01:51,840
and sends them to loki for storage

00:01:48,799 --> 00:01:55,840
but what is it good for to just store

00:01:51,840 --> 00:01:55,840
the logs right

00:01:56,000 --> 00:02:00,640
after we store logs we can then use

00:01:58,799 --> 00:02:03,840
tools like graphana

00:02:00,640 --> 00:02:06,479
which allows us to query loki and find

00:02:03,840 --> 00:02:09,119
exactly the logs that we need

00:02:06,479 --> 00:02:11,920
here you can see i specified the cloud

00:02:09,119 --> 00:02:14,720
name and the command i want to look at

00:02:11,920 --> 00:02:16,560
and over here i got exactly what i

00:02:14,720 --> 00:02:18,720
wanted

00:02:16,560 --> 00:02:19,840
and if we connect it to our other

00:02:18,720 --> 00:02:23,920
project called

00:02:19,840 --> 00:02:26,319
stf we can then easily use grafana

00:02:23,920 --> 00:02:27,120
to look at corresponding events and

00:02:26,319 --> 00:02:30,319
metrics

00:02:27,120 --> 00:02:30,319
for each lock tool

00:02:32,959 --> 00:02:37,280
so now that i explained you how

00:02:35,680 --> 00:02:40,319
everything works

00:02:37,280 --> 00:02:41,840
let me show you a short demo of the

00:02:40,319 --> 00:02:46,080
project

00:02:41,840 --> 00:02:49,440
here i configured code ready containers

00:02:46,080 --> 00:02:52,959
with aqp bus

00:02:49,440 --> 00:02:57,280
i also have login running

00:02:52,959 --> 00:02:57,280
and i have loki there

00:02:57,440 --> 00:03:05,120
and i'm gonna be using this

00:03:00,959 --> 00:03:08,080
machine instead of openstack

00:03:05,120 --> 00:03:08,640
just to make it a little bit easier over

00:03:08,080 --> 00:03:12,560
here

00:03:08,640 --> 00:03:16,239
you can see see the rcs log

00:03:12,560 --> 00:03:20,000
configuration it's sending

00:03:16,239 --> 00:03:20,000
logs through the bus

00:03:20,560 --> 00:03:28,080
to to login

00:03:24,480 --> 00:03:31,519
so let's try to generate some logs

00:03:28,080 --> 00:03:36,400
we can do that for example by

00:03:31,519 --> 00:03:40,480
typing sudo and failing to authenticate

00:03:36,400 --> 00:03:43,760
and this should send logs

00:03:40,480 --> 00:03:47,200
to login and through that to

00:03:43,760 --> 00:03:50,239
low key and we should be able to see

00:03:47,200 --> 00:03:53,519
them in grafana

00:03:50,239 --> 00:03:56,560
inside grafana we can choose the explore

00:03:53,519 --> 00:04:01,360
option and

00:03:56,560 --> 00:04:04,480
as you can see i have the loki login

00:04:01,360 --> 00:04:08,480
selected and we can

00:04:04,480 --> 00:04:08,480
query for the logs

00:04:09,040 --> 00:04:16,239
i have this machine named as

00:04:12,319 --> 00:04:19,440
cloud cloud one so

00:04:16,239 --> 00:04:21,519
let's see what we get as you can see we

00:04:19,440 --> 00:04:25,199
get a lot of logs

00:04:21,519 --> 00:04:28,479
even from only one machine

00:04:25,199 --> 00:04:31,600
so thankfully

00:04:28,479 --> 00:04:35,120
we can specify

00:04:31,600 --> 00:04:38,639
the query

00:04:35,120 --> 00:04:43,840
and if we search for only sudo we get

00:04:38,639 --> 00:04:43,840
exactly the logs that we are looking for

00:04:46,479 --> 00:04:52,400
i showed you how lokian works and how it

00:04:49,919 --> 00:04:52,880
might be used to make grooving openstack

00:04:52,400 --> 00:04:56,479
logs

00:04:52,880 --> 00:05:00,800
easier i hope you liked the talk

00:04:56,479 --> 00:05:00,800

YouTube URL: https://www.youtube.com/watch?v=7M2Pd3jBlsE


