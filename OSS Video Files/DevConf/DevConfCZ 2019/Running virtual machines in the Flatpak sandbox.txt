Title: Running virtual machines in the Flatpak sandbox
Publication date: 2019-03-04
Playlist: DevConfCZ 2019
Description: 
	Presentation name: Running virtual machines in the Flatpak sandbox
Speaker: Felipe Borges
Description:  A journey through the challenges of running a virtualization stack in the Flatpak sandbox with the purpose of distributing GNOME Boxes in immutable image-based operating systems such as Fedora Silverblue.

Starting from orchestrating the build of all the required components of the virtualization stack, to poking holes in the Flatpak sandbox in order to provide device passthrough, safe file sharing, and a bridged network between host and guest.
[ https://sched.co/Jcfx ]
Captions: 
	00:00:07,880 --> 00:00:12,920
my name is Philip de Bourg

00:00:10,760 --> 00:00:17,180
here in the desktop team guys hit me

00:00:12,920 --> 00:00:19,040
back so yeah I've been working on the

00:00:17,180 --> 00:00:21,290
desktop team for three years already and

00:00:19,040 --> 00:00:23,240
for the last couple of years I've been

00:00:21,290 --> 00:00:25,340
working on boxes specifically and that's

00:00:23,240 --> 00:00:28,490
what the talk is about it's about my

00:00:25,340 --> 00:00:31,520
experiences running nan boxes in a flat

00:00:28,490 --> 00:00:34,040
back sandbox and I guess you are

00:00:31,520 --> 00:00:36,559
assuming that it's the whole

00:00:34,040 --> 00:00:39,350
virtualization stack inside of the five

00:00:36,559 --> 00:00:40,550
pack sandbox not just running the gtk

00:00:39,350 --> 00:00:42,739
application and connected to things

00:00:40,550 --> 00:00:46,610
abroad like there is no requirement for

00:00:42,739 --> 00:00:49,190
the portal host so these are the basic

00:00:46,610 --> 00:00:50,900
topics I'm gonna approach today and

00:00:49,190 --> 00:00:52,729
usually I would go for the motivation

00:00:50,900 --> 00:00:54,949
and get to the concepts afterwards but

00:00:52,729 --> 00:00:56,839
now you're gonna understand after I'm

00:00:54,949 --> 00:00:59,600
explaining the concepts that the

00:00:56,839 --> 00:01:01,400
motivation is pretty much the other way

00:00:59,600 --> 00:01:04,010
around right there was a technology

00:01:01,400 --> 00:01:07,580
trend forming around the desktop

00:01:04,010 --> 00:01:10,490
technologies flat-pack rpm OS 3 silver

00:01:07,580 --> 00:01:12,350
blue and as in container technologies

00:01:10,490 --> 00:01:14,000
getting closer to the desktop and this

00:01:12,350 --> 00:01:17,900
was something we are trying to catch up

00:01:14,000 --> 00:01:20,120
to still be available in the Utopia

00:01:17,900 --> 00:01:22,540
future when there is no packages anymore

00:01:20,120 --> 00:01:26,840
and everything run into some containers

00:01:22,540 --> 00:01:30,760
so first of all do any of you have ever

00:01:26,840 --> 00:01:30,760
run gnome boxes or know what it is about

00:01:30,790 --> 00:01:36,770
Wow usually don't have this feedback

00:01:35,180 --> 00:01:38,360
from the user so it's really exciting to

00:01:36,770 --> 00:01:40,130
see people using it so for those who

00:01:38,360 --> 00:01:42,260
don't know it it's like an alternative

00:01:40,130 --> 00:01:45,200
to VirtualBox or VMware for desktop

00:01:42,260 --> 00:01:47,120
users focus on the desktop use case so

00:01:45,200 --> 00:01:49,820
for somebody who is experimenting with

00:01:47,120 --> 00:01:53,090
when you do just trying something out on

00:01:49,820 --> 00:01:56,570
a Windows VM it's not something focus

00:01:53,090 --> 00:01:58,760
don't like scale the deployment neither

00:01:56,570 --> 00:02:00,950
for somebody who has like a very deep

00:01:58,760 --> 00:02:02,690
understanding of virtualization so if

00:02:00,950 --> 00:02:04,490
you're looking to that bit manager is

00:02:02,690 --> 00:02:09,019
your friend both of them are actually

00:02:04,490 --> 00:02:10,489
based on the same stack so there is no

00:02:09,019 --> 00:02:13,959
competition here like they usually have

00:02:10,489 --> 00:02:16,370
they have two different use cases and

00:02:13,959 --> 00:02:18,549
one is focus on users and the others

00:02:16,370 --> 00:02:20,930
focus on advanced users and developers

00:02:18,549 --> 00:02:22,860
so that's why we call it virtualization

00:02:20,930 --> 00:02:24,300
we've seen four boxes parts

00:02:22,860 --> 00:02:26,880
like from from the point where it

00:02:24,300 --> 00:02:29,130
assumes that the user doesn't need to

00:02:26,880 --> 00:02:31,380
understand what's necessary to be set up

00:02:29,130 --> 00:02:33,570
to get a virtual machine running so for

00:02:31,380 --> 00:02:35,190
them it needs to be like a couple clicks

00:02:33,570 --> 00:02:38,070
and a lot of things need to be abstract

00:02:35,190 --> 00:02:39,600
from the users and other computer

00:02:38,070 --> 00:02:41,400
machines watch the supports remote

00:02:39,600 --> 00:02:44,700
machines so you can connect to remote

00:02:41,400 --> 00:02:49,860
machines either running locally or

00:02:44,700 --> 00:02:52,530
remotely over VNC RDP and spice so it

00:02:49,860 --> 00:02:54,660
also replaces your your client who you

00:02:52,530 --> 00:02:56,280
also can use it in the SSH client so you

00:02:54,660 --> 00:02:59,160
can have a terminal embedded there and

00:02:56,280 --> 00:03:02,550
use it for SSH so the main focus is this

00:02:59,160 --> 00:03:04,020
test drive experiment so it's based on

00:03:02,550 --> 00:03:06,690
live good so it's just a front-end for

00:03:04,020 --> 00:03:09,750
liquid and it has this liberation for

00:03:06,690 --> 00:03:11,940
the core liberal suppose is a library

00:03:09,750 --> 00:03:14,910
that has data on operating systems in

00:03:11,940 --> 00:03:17,370
terms of which devices each operating

00:03:14,910 --> 00:03:19,230
system supports which requirements is

00:03:17,370 --> 00:03:21,690
supports in terms of memory allocation

00:03:19,230 --> 00:03:24,000
and things and such but it can ver I to

00:03:21,690 --> 00:03:27,799
all kinds of features that certain

00:03:24,000 --> 00:03:32,100
operating system supports and boxes use

00:03:27,799 --> 00:03:36,570
tools which are able to detect that I

00:03:32,100 --> 00:03:40,380
image either or a disk match a certain

00:03:36,570 --> 00:03:42,299
criteria that qualifies it as a specific

00:03:40,380 --> 00:03:44,250
operating system in already configures

00:03:42,299 --> 00:03:46,049
this operating system to use these

00:03:44,250 --> 00:03:48,870
certain devices so you don't actually

00:03:46,049 --> 00:03:54,900
need to know whether centralized seven

00:03:48,870 --> 00:03:56,489
supports scuzzy adapters for disk buzz

00:03:54,900 --> 00:03:59,640
or things like that because we have a

00:03:56,489 --> 00:04:01,620
database with these and this database is

00:03:59,640 --> 00:04:03,090
designer search that there are some key

00:04:01,620 --> 00:04:05,549
so we know which operating systems

00:04:03,090 --> 00:04:09,000
derive from other operating systems so

00:04:05,549 --> 00:04:12,750
somehow we can cover a lot of ground in

00:04:09,000 --> 00:04:13,980
to supporting things out of the box we

00:04:12,750 --> 00:04:15,420
also have this great feature that is

00:04:13,980 --> 00:04:17,310
like a great sales

00:04:15,420 --> 00:04:20,310
feature for us which is the Express

00:04:17,310 --> 00:04:21,840
installs one box is the text that you

00:04:20,310 --> 00:04:24,180
want to store a specific operating

00:04:21,840 --> 00:04:26,400
system which is like an operating system

00:04:24,180 --> 00:04:28,080
for some of them we have this install

00:04:26,400 --> 00:04:29,729
scripts which are able to start up the

00:04:28,080 --> 00:04:31,710
machine based on data from your hosts

00:04:29,729 --> 00:04:33,629
and replicate them on the guest so if

00:04:31,710 --> 00:04:35,490
I'm stalling at the doradito machine

00:04:33,629 --> 00:04:37,409
in my Fedora host you'll be able to

00:04:35,490 --> 00:04:41,610
create a user for me with my same user

00:04:37,409 --> 00:04:43,979
my password my profile picture and you

00:04:41,610 --> 00:04:46,080
do the all install by itself so we don't

00:04:43,979 --> 00:04:48,959
need to do the Anaconda process in your

00:04:46,080 --> 00:04:50,879
VM you can just install and just go for

00:04:48,959 --> 00:04:54,110
a coffee and when you're back hopefully

00:04:50,879 --> 00:04:54,110
things are gonna work just fine

00:04:54,709 --> 00:05:01,529
so box is like the application I've been

00:04:57,389 --> 00:05:03,509
working on and flat pack a couple of

00:05:01,529 --> 00:05:05,639
years ago applications in the desktop

00:05:03,509 --> 00:05:08,339
started to be taxed as a flat pack and

00:05:05,639 --> 00:05:09,689
box was kind of left behind because you

00:05:08,339 --> 00:05:12,149
can imagine that the complexity of

00:05:09,689 --> 00:05:14,930
virtualization - it's not comparable to

00:05:12,149 --> 00:05:17,459
other common fertiliser or other common

00:05:14,930 --> 00:05:19,259
desktop applications as always has

00:05:17,459 --> 00:05:21,360
described to the complexity is also

00:05:19,259 --> 00:05:23,550
based on the amount of dependencies it

00:05:21,360 --> 00:05:25,639
has so it's very easy when you depend on

00:05:23,550 --> 00:05:30,330
things that are usually part of SDK or a

00:05:25,639 --> 00:05:32,429
normal installation and it is hard when

00:05:30,330 --> 00:05:34,199
you have a lot of dependencies and boxes

00:05:32,429 --> 00:05:35,939
uses live v8 we change the scale move

00:05:34,199 --> 00:05:37,559
and then you have the spice display we

00:05:35,939 --> 00:05:42,569
also support RDP which means you have

00:05:37,559 --> 00:05:46,529
free RDP so a lot of big projects are

00:05:42,569 --> 00:05:48,509
dependencies of boxes and flat pack has

00:05:46,529 --> 00:05:50,069
brought us like you have heard a lot of

00:05:48,509 --> 00:05:51,899
flat pack today so I'm not getting to

00:05:50,069 --> 00:05:54,899
the the details of flat pack and I'm

00:05:51,899 --> 00:05:56,550
gonna save you both time and patience

00:05:54,899 --> 00:05:58,319
say on this whether the Builder

00:05:56,550 --> 00:06:00,629
orchestration actually is a great

00:05:58,319 --> 00:06:02,490
feature for us and boxes because I would

00:06:00,629 --> 00:06:05,219
say that half of the bug reports we

00:06:02,490 --> 00:06:07,589
received from users I'm not our fault

00:06:05,219 --> 00:06:10,769
and you know that this is something that

00:06:07,589 --> 00:06:11,909
I maintain I usually say it's but it's

00:06:10,769 --> 00:06:15,749
kind of true that in the traditional

00:06:11,909 --> 00:06:17,610
packaging management the people packing

00:06:15,749 --> 00:06:19,949
packaging leave it and the people

00:06:17,610 --> 00:06:21,180
packaging spice or camo they're not the

00:06:19,949 --> 00:06:22,110
same sometimes they're not even talk to

00:06:21,180 --> 00:06:24,539
each other there's sometimes there are

00:06:22,110 --> 00:06:27,329
volunteers some diesels are just copying

00:06:24,539 --> 00:06:29,579
some things from other districts so when

00:06:27,329 --> 00:06:31,309
you have dependencies which are very

00:06:29,579 --> 00:06:33,539
well connected to each other and

00:06:31,309 --> 00:06:35,490
Khemu has been viewed with a certain

00:06:33,539 --> 00:06:37,709
flag and then spice needs to have this

00:06:35,490 --> 00:06:39,300
certain flag you can become a nightmare

00:06:37,709 --> 00:06:41,969
and the truth is that most of the bug

00:06:39,300 --> 00:06:43,469
reports were pretty much saying

00:06:41,969 --> 00:06:45,539
something like box doesn't support a

00:06:43,469 --> 00:06:46,770
certain feature and then out dig a

00:06:45,539 --> 00:06:50,789
little bit and find out that

00:06:46,770 --> 00:06:52,620
our clinics has built Khemu with some

00:06:50,789 --> 00:06:55,289
smart our support but it hasn't been

00:06:52,620 --> 00:06:57,419
spiced with this flag so it's looking

00:06:55,289 --> 00:07:00,389
for the flag but it's not be really

00:06:57,419 --> 00:07:01,740
support so this type of things that it's

00:07:00,389 --> 00:07:05,340
like a consequence of the Linux

00:07:01,740 --> 00:07:07,590
fragmentation right that Jung has spoken

00:07:05,340 --> 00:07:07,860
before and I don't need to to get into

00:07:07,590 --> 00:07:09,750
it

00:07:07,860 --> 00:07:12,259
another great feature that Falcon has

00:07:09,750 --> 00:07:15,509
brought for boxes the distribution that

00:07:12,259 --> 00:07:17,639
some distributions just thought that it

00:07:15,509 --> 00:07:19,500
was true hard to ship boxes because of

00:07:17,639 --> 00:07:21,360
the whole dependency tree so they're

00:07:19,500 --> 00:07:23,220
just not keeping it and now with the

00:07:21,360 --> 00:07:25,949
distribution we have it on flat hub and

00:07:23,220 --> 00:07:27,750
it's as easy as it gets to install is

00:07:25,949 --> 00:07:30,770
like a couple clicks and the flat-pack

00:07:27,750 --> 00:07:33,599
sign box enables us to perform

00:07:30,770 --> 00:07:35,310
non-destructive actions so he since flat

00:07:33,599 --> 00:07:37,860
back also enables us to run multiple

00:07:35,310 --> 00:07:41,849
instances at the same time the user can

00:07:37,860 --> 00:07:43,289
hack on it and don't cause any damage on

00:07:41,849 --> 00:07:45,960
their existing virtual machines in

00:07:43,289 --> 00:07:49,050
either on the under host installation of

00:07:45,960 --> 00:07:51,570
things so another concept that was

00:07:49,050 --> 00:07:54,240
around on the desktop before I decided

00:07:51,570 --> 00:07:56,039
to start working on getting boxes to

00:07:54,240 --> 00:07:57,720
work just fine on a flat pack was fedora

00:07:56,039 --> 00:08:00,659
super blue the Darcy logo was designed

00:07:57,720 --> 00:08:02,250
to be the next Fedora desktop and it's

00:08:00,659 --> 00:08:05,130
an image based operating system which

00:08:02,250 --> 00:08:07,970
means that the basic core OS of it is

00:08:05,130 --> 00:08:09,960
going to be a static read-only image and

00:08:07,970 --> 00:08:11,190
everything on top of it is going to be

00:08:09,960 --> 00:08:13,349
containers of course there's this

00:08:11,190 --> 00:08:15,360
technology which is rpm OS 3 that allows

00:08:13,349 --> 00:08:17,060
you to layer packages on top of it but

00:08:15,360 --> 00:08:20,009
you're defeating the purpose of have a

00:08:17,060 --> 00:08:22,289
read all image base system if you are

00:08:20,009 --> 00:08:23,970
just layering stuff on on top because

00:08:22,289 --> 00:08:29,070
you don't you lose the robustness of

00:08:23,970 --> 00:08:30,599
upgrades and and you're just messing up

00:08:29,070 --> 00:08:32,900
with installing your install and not

00:08:30,599 --> 00:08:34,680
decoupling things and by having

00:08:32,900 --> 00:08:36,930
operating system which is focus on

00:08:34,680 --> 00:08:38,909
containers first we are actually enable

00:08:36,930 --> 00:08:40,469
enabling our users to have a very core

00:08:38,909 --> 00:08:42,510
solid operating system that does this

00:08:40,469 --> 00:08:45,420
robust updates and have their apps

00:08:42,510 --> 00:08:47,700
independent off of dependencies that we

00:08:45,420 --> 00:08:52,920
easily would expect them to come in and

00:08:47,700 --> 00:08:55,370
in the core image of the EOS so the door

00:08:52,920 --> 00:08:57,660
circle blue enables us to to have a very

00:08:55,370 --> 00:08:57,930
reliable operating system and at the

00:08:57,660 --> 00:08:59,460
same

00:08:57,930 --> 00:09:00,990
unstable applications and taught

00:08:59,460 --> 00:09:04,230
multiple versions of applications on top

00:09:00,990 --> 00:09:05,820
and and that that's great for boxes

00:09:04,230 --> 00:09:07,800
because one of the biggest challenges is

00:09:05,820 --> 00:09:09,210
to get people to to hack on such a big

00:09:07,800 --> 00:09:11,760
applications because they just need to

00:09:09,210 --> 00:09:14,910
build the newest stuff of everything and

00:09:11,760 --> 00:09:16,200
build the whole world is it's a pain so

00:09:14,910 --> 00:09:18,330
if you definitely try to draw a

00:09:16,200 --> 00:09:20,399
superglue that is a stand outside they

00:09:18,330 --> 00:09:22,620
have demos there and they might help you

00:09:20,399 --> 00:09:26,760
out with everything you need for federal

00:09:22,620 --> 00:09:29,790
super glue and so now we are finally in

00:09:26,760 --> 00:09:32,550
the motivation so with the reproducible

00:09:29,790 --> 00:09:34,500
builds I solve that problem with a cross

00:09:32,550 --> 00:09:36,870
digital support distribution is not

00:09:34,500 --> 00:09:39,000
having box set with the right things I

00:09:36,870 --> 00:09:41,399
can just literally go to the gitlab

00:09:39,000 --> 00:09:42,959
issues and say have you tried a flat

00:09:41,399 --> 00:09:44,910
pack and then they just try the flat

00:09:42,959 --> 00:09:47,850
pack and we find out that most of the

00:09:44,910 --> 00:09:49,830
issues are on the DC side so then I can

00:09:47,850 --> 00:09:52,320
tell them to file these reports

00:09:49,830 --> 00:09:53,279
downstream or girls get the users to

00:09:52,320 --> 00:09:53,940
split back and most of them are just

00:09:53,279 --> 00:09:55,830
starting

00:09:53,940 --> 00:09:58,140
yeah just like I'm gonna use flat pack

00:09:55,830 --> 00:09:59,760
from now on and not into sin all done

00:09:58,140 --> 00:10:02,610
using the packaged one from my

00:09:59,760 --> 00:10:06,029
distribution the development process has

00:10:02,610 --> 00:10:08,339
also improved a lot because before we

00:10:06,029 --> 00:10:10,350
using gh build like so you're just

00:10:08,339 --> 00:10:13,020
building a different prefix but you

00:10:10,350 --> 00:10:15,270
still need to build everything locally

00:10:13,020 --> 00:10:17,250
and the dependence is the runtime

00:10:15,270 --> 00:10:18,959
dependencies were things that you just

00:10:17,250 --> 00:10:20,880
need to catch up and discover why or

00:10:18,959 --> 00:10:25,770
when the builders failing and and

00:10:20,880 --> 00:10:27,540
compensate with that so now we have CI

00:10:25,770 --> 00:10:31,230
bundles so whenever you push something

00:10:27,540 --> 00:10:32,790
on on get lab we use flat pack builder

00:10:31,230 --> 00:10:36,029
to cause - to boot

00:10:32,790 --> 00:10:38,540
bundle which contains the whole the

00:10:36,029 --> 00:10:41,130
whole beautifully built and Kevin oh and

00:10:38,540 --> 00:10:44,760
you can just download it double-click it

00:10:41,130 --> 00:10:47,570
and test it and and this enables us to

00:10:44,760 --> 00:10:49,740
get designers to test the new stuff

00:10:47,570 --> 00:10:50,880
translators to actually try their

00:10:49,740 --> 00:10:52,589
translations because how many

00:10:50,880 --> 00:10:53,850
translators are actually building Khemu

00:10:52,589 --> 00:10:56,690
just to see whether their boxes

00:10:53,850 --> 00:11:01,020
translation is fine it's just painful

00:10:56,690 --> 00:11:03,480
and this machine is install so you can

00:11:01,020 --> 00:11:05,550
have a box with development version

00:11:03,480 --> 00:11:06,550
installed and you still have your stable

00:11:05,550 --> 00:11:08,440
version which you have your

00:11:06,550 --> 00:11:14,320
games that you don't want to do screw up

00:11:08,440 --> 00:11:15,850
with so right so the buter orchestration

00:11:14,320 --> 00:11:18,190
this is one of the hardest challenges

00:11:15,850 --> 00:11:19,600
for for packaging boxes getting all the

00:11:18,190 --> 00:11:21,970
dependencies to build with the right

00:11:19,600 --> 00:11:23,740
flag singing stuff so this is the moment

00:11:21,970 --> 00:11:26,320
where I felt a little in pathetic with

00:11:23,740 --> 00:11:28,650
the packagers because it's really hard

00:11:26,320 --> 00:11:37,750
to build so much stuff I don't know if I

00:11:28,650 --> 00:11:40,770
can actually get my my my code to

00:11:37,750 --> 00:11:44,500
showing that display oh yeah there we go

00:11:40,770 --> 00:11:46,030
so now I don't see it here right so this

00:11:44,500 --> 00:11:48,040
is the manifest of the boxes flat pack

00:11:46,030 --> 00:11:49,720
this is the the nightly version so you

00:11:48,040 --> 00:11:54,370
see that application ID here in the top

00:11:49,720 --> 00:11:57,640
has the devel prefix application oh I

00:11:54,370 --> 00:12:00,430
don't know how computer does it so maybe

00:11:57,640 --> 00:12:03,190
I could just open up in a terminal does

00:12:00,430 --> 00:12:09,160
I know how to make terminals big yeah

00:12:03,190 --> 00:12:14,010
but I don't know this keyboard now yeah

00:12:09,160 --> 00:12:14,010
but somehow it's eating my shortcuts

00:12:16,670 --> 00:12:25,160
I'm sorry all right so I would describe

00:12:23,480 --> 00:12:28,700
it I'm very sorry

00:12:25,160 --> 00:12:30,860
oh here I can see it better so the the

00:12:28,700 --> 00:12:33,860
application ID is unique so if if if

00:12:30,860 --> 00:12:35,780
this beauty will have the same organ or

00:12:33,860 --> 00:12:37,130
body boxes then you'll be seeing the

00:12:35,780 --> 00:12:38,960
same themes you have on your stable

00:12:37,130 --> 00:12:41,660
version but by appending this devel

00:12:38,960 --> 00:12:43,940
thing I can have a simultaneous install

00:12:41,660 --> 00:12:46,490
that doesn't see those VM so when I run

00:12:43,940 --> 00:12:48,320
this developer sure I don't see the VMs

00:12:46,490 --> 00:12:52,790
that I store them on the stable flatback

00:12:48,320 --> 00:12:54,290
so they have a isolated container or

00:12:52,790 --> 00:12:54,830
whether the ends are running the

00:12:54,290 --> 00:12:57,350
Lichfield

00:12:54,830 --> 00:13:00,320
daemon is running inside the VM and it's

00:12:57,350 --> 00:13:02,540
despawn it when when boxes is launch it

00:13:00,320 --> 00:13:05,000
and then just sleeps down because there

00:13:02,540 --> 00:13:07,130
is people's activation for that so we

00:13:05,000 --> 00:13:09,290
also know we are also saving a lot of

00:13:07,130 --> 00:13:11,510
memory about not running live we're

00:13:09,290 --> 00:13:14,710
demon all the time in your Fedora single

00:13:11,510 --> 00:13:18,290
blob because you just need it on demand

00:13:14,710 --> 00:13:20,270
what else yeah so here we have the the

00:13:18,290 --> 00:13:22,880
finish arguments which are pretty much

00:13:20,270 --> 00:13:24,980
the permissions and so far Bronson's has

00:13:22,880 --> 00:13:28,120
device device all which means that it

00:13:24,980 --> 00:13:30,800
has access to all the - dev devices and

00:13:28,120 --> 00:13:31,910
that's not I do and that's something

00:13:30,800 --> 00:13:34,790
that I have in the section of further

00:13:31,910 --> 00:13:37,100
work off of my project which is to use

00:13:34,790 --> 00:13:40,070
portals to be able to access devices but

00:13:37,100 --> 00:13:44,870
we still don't have a working device

00:13:40,070 --> 00:13:46,880
portal for four five pack but it's gonna

00:13:44,870 --> 00:13:48,740
get there at some point we need to just

00:13:46,880 --> 00:13:50,480
get in motion also file system access

00:13:48,740 --> 00:13:52,730
here this is mostly because we have this

00:13:50,480 --> 00:13:54,530
folder sharing feature that allows you

00:13:52,730 --> 00:13:57,170
to share some photos from the host and

00:13:54,530 --> 00:14:00,740
see them on the guest and there's a five

00:13:57,170 --> 00:14:02,540
chooser Porto but it's for files not for

00:14:00,740 --> 00:14:04,820
folders so this is also something that

00:14:02,540 --> 00:14:06,740
flat pack needs to change to accommodate

00:14:04,820 --> 00:14:09,350
these changes we need to have maybe of a

00:14:06,740 --> 00:14:10,010
sharing folder port or something up to

00:14:09,350 --> 00:14:13,370
discussion

00:14:10,010 --> 00:14:14,420
so let's get to dependencies and so here

00:14:13,370 --> 00:14:16,040
we describe how to build the

00:14:14,420 --> 00:14:18,710
dependencies you see here that we are

00:14:16,040 --> 00:14:21,850
doing some some patching on this one

00:14:18,710 --> 00:14:25,070
here to correct some altitude kings

00:14:21,850 --> 00:14:27,560
yeah so a lot of them different view

00:14:25,070 --> 00:14:28,190
systems so I imagine it for a packager

00:14:27,560 --> 00:14:30,230
and

00:14:28,190 --> 00:14:32,240
saying that these are just the flags

00:14:30,230 --> 00:14:33,470
that are necessary for it to run boxes

00:14:32,240 --> 00:14:34,550
but at the same time we want to build

00:14:33,470 --> 00:14:36,920
these things and get them working

00:14:34,550 --> 00:14:37,850
elsewhere for other apps which depend on

00:14:36,920 --> 00:14:40,819
other builds

00:14:37,850 --> 00:14:43,220
so having delegating to the application

00:14:40,819 --> 00:14:46,459
developer all these responsibilities

00:14:43,220 --> 00:14:49,819
actually enables us to do just what we

00:14:46,459 --> 00:14:51,470
need to do and nothing else more so here

00:14:49,819 --> 00:14:54,529
we have tracker disabling a lot of

00:14:51,470 --> 00:14:57,860
things so another topic of this Sivaji

00:14:54,529 --> 00:14:59,480
rendering we recently have enabled a

00:14:57,860 --> 00:15:02,300
virtual rendering for operating systems

00:14:59,480 --> 00:15:03,920
supported so you have OpenGL cell

00:15:02,300 --> 00:15:06,500
eration in your VM so you can run a high

00:15:03,920 --> 00:15:09,009
performant apps such as Photoshop and

00:15:06,500 --> 00:15:11,060
things like this and here finally boxes

00:15:09,009 --> 00:15:14,480
another aspect here you can see some

00:15:11,060 --> 00:15:16,160
these apps are some projects which I

00:15:14,480 --> 00:15:18,709
have created for boxes to introduce new

00:15:16,160 --> 00:15:20,480
features on it this one is a RDP widget

00:15:18,709 --> 00:15:22,279
and this one is support the open

00:15:20,480 --> 00:15:23,930
virtualization format so the file pack

00:15:22,279 --> 00:15:25,730
also enables me to create sub projects

00:15:23,930 --> 00:15:27,019
which can be used elsewhere and ship

00:15:25,730 --> 00:15:28,879
them together here and I don't need to

00:15:27,019 --> 00:15:31,939
convince packages to pack a new library

00:15:28,879 --> 00:15:33,500
or to update the library and things like

00:15:31,939 --> 00:15:37,279
this this means are quite unstable yet

00:15:33,500 --> 00:15:42,199
so I don't don't need to go back and

00:15:37,279 --> 00:15:50,839
forth with them because we just are in

00:15:42,199 --> 00:15:52,699
charge of everything for now there we go

00:15:50,839 --> 00:15:54,740
so there are certain things that still

00:15:52,699 --> 00:15:56,509
don't work we used to be able to detect

00:15:54,740 --> 00:15:59,029
that you connected a physical device and

00:15:56,509 --> 00:16:02,480
because you are using you def to to the

00:15:59,029 --> 00:16:04,430
tag plug-in stuff so if you connect a

00:16:02,480 --> 00:16:06,050
USB stick or something the flat pack

00:16:04,430 --> 00:16:08,750
boxes wouldn't be able to see it yet

00:16:06,050 --> 00:16:11,959
that's also something we need to to

00:16:08,750 --> 00:16:14,029
handle with a portal we now have a flat

00:16:11,959 --> 00:16:15,980
cloud boot which means that you can go

00:16:14,029 --> 00:16:17,660
to fan hub org and download the last

00:16:15,980 --> 00:16:19,130
stable boxes and we also have the

00:16:17,660 --> 00:16:22,040
nightly builds which are automatically

00:16:19,130 --> 00:16:24,139
built every night from genome so you can

00:16:22,040 --> 00:16:25,759
have the latest master comments so if

00:16:24,139 --> 00:16:28,490
something isn't working and to try the

00:16:25,759 --> 00:16:32,059
nitrous and see if we still it's still

00:16:28,490 --> 00:16:34,120
broken so for the work this is what is

00:16:32,059 --> 00:16:37,309
remaining to acknowledge those if death

00:16:34,120 --> 00:16:38,430
conditions the network bridge so far we

00:16:37,309 --> 00:16:39,810
don't have the network bridge

00:16:38,430 --> 00:16:41,430
the VMS which means that they don't see

00:16:39,810 --> 00:16:42,720
each other they can connect to the

00:16:41,430 --> 00:16:43,860
outside world but they don't talk to

00:16:42,720 --> 00:16:45,779
each other needle to the host which

00:16:43,860 --> 00:16:47,970
means that you cannot SSH into your

00:16:45,779 --> 00:16:52,770
filter machine inside your flat back

00:16:47,970 --> 00:16:55,140
sandbox with the network bridge you're

00:16:52,770 --> 00:16:59,279
required to set up to set up a bridge

00:16:55,140 --> 00:17:01,290
and also forward this file descriptor

00:16:59,279 --> 00:17:05,819
into liquid-solid Vidkun can do its

00:17:01,290 --> 00:17:07,740
shenanigans and that requires a skeleton

00:17:05,819 --> 00:17:09,360
privileges and in flat pack that is

00:17:07,740 --> 00:17:11,579
something that's something we don't want

00:17:09,360 --> 00:17:13,829
which is to scale it privileges inside

00:17:11,579 --> 00:17:17,760
the sandbox so ideally with the device's

00:17:13,829 --> 00:17:19,620
Porter we would be able to let's say get

00:17:17,760 --> 00:17:22,350
network manager to create the bridge and

00:17:19,620 --> 00:17:24,000
then create a little helper which the

00:17:22,350 --> 00:17:25,980
devices Porter is going to reuse Polish

00:17:24,000 --> 00:17:27,900
heat so you'll be able to type your

00:17:25,980 --> 00:17:30,540
password there and forward the file

00:17:27,900 --> 00:17:32,760
descriptor from the Deaf net tune or tap

00:17:30,540 --> 00:17:34,080
device into the flat-pack sandboxes and

00:17:32,760 --> 00:17:36,450
from there on we know what you do with

00:17:34,080 --> 00:17:39,210
it so we will be able to recreate it the

00:17:36,450 --> 00:17:42,000
network bridge with that but so far we

00:17:39,210 --> 00:17:43,740
are not able to perform network settings

00:17:42,000 --> 00:17:46,620
on the host system from inside the

00:17:43,740 --> 00:17:50,670
sandbox I have some hackish ways to do

00:17:46,620 --> 00:17:53,550
it but requires you to set the sqi ID

00:17:50,670 --> 00:17:54,809
beat on your binary and run it and you

00:17:53,550 --> 00:17:56,730
don't want to tell users to install

00:17:54,809 --> 00:17:58,800
flat-pack and also run a privileged

00:17:56,730 --> 00:17:59,730
binary at the same time just to set it

00:17:58,800 --> 00:18:01,710
up right

00:17:59,730 --> 00:18:04,350
we don't expect boxes users to know what

00:18:01,710 --> 00:18:06,179
they're doing with the bridge network so

00:18:04,350 --> 00:18:08,160
we want to use also portals for file

00:18:06,179 --> 00:18:10,260
system access as I mentioned before we

00:18:08,160 --> 00:18:11,700
can already drag and drop files into it

00:18:10,260 --> 00:18:14,309
because files are supported if you do a

00:18:11,700 --> 00:18:15,570
portrait but directories are more

00:18:14,309 --> 00:18:17,610
complicated because you imagine that you

00:18:15,570 --> 00:18:19,770
might have some ceilings you might have

00:18:17,610 --> 00:18:20,100
recursive directories and things like

00:18:19,770 --> 00:18:21,780
this

00:18:20,100 --> 00:18:24,900
well we expected with real tile

00:18:21,780 --> 00:18:26,309
filesystem which is a recent work we are

00:18:24,900 --> 00:18:28,650
going to be able to tackle this very

00:18:26,309 --> 00:18:30,960
easily by creating a specific flat pack

00:18:28,650 --> 00:18:33,330
portal and device access imagine that

00:18:30,960 --> 00:18:37,470
you want GPU pass-through or USB

00:18:33,330 --> 00:18:38,880
redirection you'd be very interested to

00:18:37,470 --> 00:18:42,240
have a portal that will be able to

00:18:38,880 --> 00:18:45,059
decide which devices you want to expose

00:18:42,240 --> 00:18:46,230
to your specific way to machines and in

00:18:45,059 --> 00:18:47,220
the other way around if you want to

00:18:46,230 --> 00:18:48,900
create some vector machines which are

00:18:47,220 --> 00:18:50,430
air-gapped for Destin's

00:18:48,900 --> 00:18:53,160
malicious cold whether you're working

00:18:50,430 --> 00:18:58,340
security in your on to hack that would

00:18:53,160 --> 00:19:01,140
be ideal as well so this is future work

00:18:58,340 --> 00:19:03,540
so yeah here I describe yeah so we will

00:19:01,140 --> 00:19:07,100
pretty much just forward the file

00:19:03,540 --> 00:19:12,600
descriptor and create a socket parameter

00:19:07,100 --> 00:19:14,970
all right oh I kinda ran through this

00:19:12,600 --> 00:19:20,730
already so so pretty much we just need

00:19:14,970 --> 00:19:23,040
portals and this Porto's need to be like

00:19:20,730 --> 00:19:24,420
having boxes in mind that we'll be able

00:19:23,040 --> 00:19:26,340
to forward something not just into the

00:19:24,420 --> 00:19:29,490
sandbox but from the sandbox expose this

00:19:26,340 --> 00:19:31,650
to two little machines so yeah I guess

00:19:29,490 --> 00:19:34,590
that's a good time here you was planning

00:19:31,650 --> 00:19:36,450
to go oh I was planning to go deeper on

00:19:34,590 --> 00:19:39,600
flatback but I guess it's already a lot

00:19:36,450 --> 00:19:41,640
of flat-pack stuff so just a little bit

00:19:39,600 --> 00:19:48,480
before I was planning to maybe he's run

00:19:41,640 --> 00:19:50,130
boxes so I can just press play here you

00:19:48,480 --> 00:19:52,710
can see the beaut here in the field in

00:19:50,130 --> 00:19:55,570
the footer and he's gonna run this

00:19:52,710 --> 00:19:58,740
unstable version of boxes

00:19:55,570 --> 00:19:58,740
[Music]

00:20:00,540 --> 00:20:05,460
yeah and that's how it looks like it has

00:20:02,520 --> 00:20:09,179
this nice davell style this nice black

00:20:05,460 --> 00:20:13,710
team that we like it but you can also

00:20:09,179 --> 00:20:14,970
change if you don't like like but that

00:20:13,710 --> 00:20:16,440
that's how it looks like we have this

00:20:14,970 --> 00:20:18,120
nice setup here where you can download

00:20:16,440 --> 00:20:19,650
operating systems you can stall free

00:20:18,120 --> 00:20:21,660
rail so you just need to create an

00:20:19,650 --> 00:20:23,309
account for for redhead

00:20:21,660 --> 00:20:26,070
to know how many people are using it but

00:20:23,309 --> 00:20:28,169
it's a free rail server because click

00:20:26,070 --> 00:20:29,520
here gonna go to some desktop portal and

00:20:28,169 --> 00:20:30,900
we're going to create an account for

00:20:29,520 --> 00:20:32,250
yourself and it's going to download and

00:20:30,900 --> 00:20:33,870
install rail for you and it's gonna use

00:20:32,250 --> 00:20:36,750
things Express install so no one a

00:20:33,870 --> 00:20:38,970
condom and here you can connect to your

00:20:36,750 --> 00:20:51,900
remote machines so I guess that's if I

00:20:38,970 --> 00:20:55,100
get some time for questions yes

00:20:51,900 --> 00:20:57,450
oh here's s 24 packs a container yeah

00:20:55,100 --> 00:20:59,340
well it's all CI container I'll say

00:20:57,450 --> 00:21:03,120
right so it's compatible with our docker

00:20:59,340 --> 00:21:05,340
container in this sense and it just has

00:21:03,120 --> 00:21:08,730
the niceties for desktop apps so it

00:21:05,340 --> 00:21:10,160
handles desktop icons and putting the

00:21:08,730 --> 00:21:12,179
desktop files in the right places and

00:21:10,160 --> 00:21:15,260
making it easier to show in software

00:21:12,179 --> 00:21:15,260
stores and things

00:21:18,450 --> 00:21:21,700
[Music]

00:21:23,580 --> 00:21:30,670
to passing in to the right yeah right

00:21:28,660 --> 00:21:31,900
though the way it is now it does not

00:21:30,670 --> 00:21:34,150
because we're just poking this hole in

00:21:31,900 --> 00:21:36,430
the sandbox so the way it is now it's

00:21:34,150 --> 00:21:37,990
just having direct access but we use

00:21:36,430 --> 00:21:41,260
have this portal in the future that

00:21:37,990 --> 00:21:44,260
would allow you to authorize or not to

00:21:41,260 --> 00:21:45,790
forward the access into the so this is

00:21:44,260 --> 00:21:47,710
our ongoing what you already do for

00:21:45,790 --> 00:21:50,770
files so if you want to move a file on

00:21:47,710 --> 00:21:52,060
and off and the NAM Settings panel is

00:21:50,770 --> 00:21:53,980
going to have in the future like this

00:21:52,060 --> 00:21:55,450
application pane or where you can decide

00:21:53,980 --> 00:21:58,920
which application is going to have

00:21:55,450 --> 00:22:01,240
access to each devices or each files or

00:21:58,920 --> 00:22:06,820
each elements you want to introduce in

00:22:01,240 --> 00:22:09,330
there so it's ongoing and work yeah any

00:22:06,820 --> 00:22:09,330
more questions

00:22:16,170 --> 00:22:22,080

YouTube URL: https://www.youtube.com/watch?v=EdrSJMKikUM


