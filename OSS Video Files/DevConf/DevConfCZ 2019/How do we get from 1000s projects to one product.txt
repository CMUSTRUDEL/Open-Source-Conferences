Title: How do we get from 1000s projects to one product
Publication date: 2019-03-04
Playlist: DevConfCZ 2019
Description: 
	Presentation name: How do we get from 1000s projects to one product
Speaker: Luděk Šmíd
Description:  RHEL is composed of 1000s of upstream projects. It's commonly known that Fedora is upstream of RHEL and yet - development of enterprise grade operating system brings its own challenges.

I will cover the challenges of putting together major version of RHEL as I have very close experience with development of major RHEL releases. I plan to cover some technical details and some high level lessons we've learned from 3+ years long projects.
[ Luděk Šmíd ]
Captions: 
	00:00:08,870 --> 00:00:13,110
[Applause]

00:00:10,700 --> 00:00:15,390
I'm not sure why you clapping you don't

00:00:13,110 --> 00:00:18,330
know what I'm going to present yet

00:00:15,390 --> 00:00:20,669
so so if you say no if I'll see the same

00:00:18,330 --> 00:00:25,019
thing after I finish I'll take it as a

00:00:20,669 --> 00:00:28,349
good job done so now I'll talk about how

00:00:25,019 --> 00:00:31,140
we actually make major releases because

00:00:28,349 --> 00:00:34,350
I had a honor to actually see three of

00:00:31,140 --> 00:00:36,810
them being done around five row 6 row 7

00:00:34,350 --> 00:00:40,800
and I was trial AIDS but I cannot talk

00:00:36,810 --> 00:00:43,620
about that yet and I was thinking them

00:00:40,800 --> 00:00:46,710
actually there is a very good story to

00:00:43,620 --> 00:00:49,110
tell to tell about rl6

00:00:46,710 --> 00:00:53,030
and round seven major releases there's a

00:00:49,110 --> 00:00:56,280
lot of lessons learned we took from that

00:00:53,030 --> 00:00:59,910
but before I start I explain how we

00:00:56,280 --> 00:01:03,060
actually make those things so this is

00:00:59,910 --> 00:01:05,850
this slide you probably saw seen already

00:01:03,060 --> 00:01:11,390
like thousands of times but this

00:01:05,850 --> 00:01:15,210
basically explains how we get from

00:01:11,390 --> 00:01:18,810
upstream projects through failure in

00:01:15,210 --> 00:01:21,479
Tyrell and you know it may seem as a

00:01:18,810 --> 00:01:24,420
simple thing but there's actually a lot

00:01:21,479 --> 00:01:29,340
of important stuff is happening in this

00:01:24,420 --> 00:01:31,710
transition because those two federal and

00:01:29,340 --> 00:01:34,799
rel they are distributions and

00:01:31,710 --> 00:01:37,100
distributions main goals it is to

00:01:34,799 --> 00:01:40,470
integrate although all packages together

00:01:37,100 --> 00:01:44,430
right and you know Venuto at scale of

00:01:40,470 --> 00:01:45,990
operating system this is not about one

00:01:44,430 --> 00:01:48,630
or two pieces of software this is

00:01:45,990 --> 00:01:50,790
literally thousands and thousands of

00:01:48,630 --> 00:01:53,700
packages you need to put together in a

00:01:50,790 --> 00:01:55,770
way that actually works together and if

00:01:53,700 --> 00:02:01,439
you know brings value to users and

00:01:55,770 --> 00:02:07,470
customers and so when you look at this

00:02:01,439 --> 00:02:09,959
just like remember it because you know I

00:02:07,470 --> 00:02:14,459
was thinking you know it's actually good

00:02:09,959 --> 00:02:16,290
to look at how we made route 6 so this

00:02:14,459 --> 00:02:18,629
is schedule I

00:02:16,290 --> 00:02:20,489
intentionally didn't put too many dates

00:02:18,629 --> 00:02:23,069
because I can't write I mean those are

00:02:20,489 --> 00:02:25,799
internal information from redhead but we

00:02:23,069 --> 00:02:29,969
started somewhere in 2008 at the

00:02:25,799 --> 00:02:35,790
beginning and then finished in 2010 so

00:02:29,969 --> 00:02:39,780
that's you know four years of work the

00:02:35,790 --> 00:02:44,819
other piece is the new loop no we did

00:02:39,780 --> 00:02:46,409
three of us we did two betas and you

00:02:44,819 --> 00:02:50,849
know here you can see the linkage

00:02:46,409 --> 00:02:56,250
between rl8 cross around six alpha and

00:02:50,849 --> 00:02:59,269
federal this was just refresh there's

00:02:56,250 --> 00:03:02,519
actually one thing that's being hidden

00:02:59,269 --> 00:03:05,760
in this picture and it's very very good

00:03:02,519 --> 00:03:09,599
story though you can see this federal 12

00:03:05,760 --> 00:03:13,290
alpha actually used for alpha 2 and

00:03:09,599 --> 00:03:15,620
alpha 3 and this actually shows the

00:03:13,290 --> 00:03:20,220
importance of having federal as a

00:03:15,620 --> 00:03:24,049
upstream 4l because this actually

00:03:20,220 --> 00:03:29,299
reflects a problem we had back in 2009

00:03:24,049 --> 00:03:31,349
when we couldn't get PowerPC and

00:03:29,299 --> 00:03:33,989
mainframe as we know it is these

00:03:31,349 --> 00:03:39,659
architectures compiled internally in

00:03:33,989 --> 00:03:43,859
hubs the reason for that was that those

00:03:39,659 --> 00:03:46,739
two architectures were lagging by two to

00:03:43,859 --> 00:03:48,840
three months in federal already so what

00:03:46,739 --> 00:03:52,949
actually has happened over there was

00:03:48,840 --> 00:03:56,549
though we could get x86 64 done no

00:03:52,949 --> 00:03:58,349
problem no that was all up to date but

00:03:56,549 --> 00:04:04,579
those two special architectures that

00:03:58,349 --> 00:04:04,579
plug not everybody has a PowerPC 970

00:04:05,010 --> 00:04:08,970
and there was a significant amount of

00:04:07,229 --> 00:04:12,509
work that we actually had to do

00:04:08,970 --> 00:04:14,939
internally to get get that done to get

00:04:12,509 --> 00:04:17,639
that company know compiled to get it

00:04:14,939 --> 00:04:21,780
actually booting and running so there's

00:04:17,639 --> 00:04:22,990
one piece the other piece is when you

00:04:21,780 --> 00:04:27,560
look

00:04:22,990 --> 00:04:29,120
at these these are points where we

00:04:27,560 --> 00:04:31,610
actually did something we call mask

00:04:29,120 --> 00:04:34,190
import what that mean is no we have

00:04:31,610 --> 00:04:37,040
internal source repositories where we

00:04:34,190 --> 00:04:40,580
actually store all the source code for L

00:04:37,040 --> 00:04:43,580
and at that point we just vibe those out

00:04:40,580 --> 00:04:46,010
we take all the code from federal and in

00:04:43,580 --> 00:04:50,450
selected packages important import them

00:04:46,010 --> 00:04:52,070
internally and it's another point where

00:04:50,450 --> 00:04:55,520
the federal plays an important role

00:04:52,070 --> 00:04:58,670
because we didn't advise out four times

00:04:55,520 --> 00:05:02,240
right internally so that means that even

00:04:58,670 --> 00:05:05,450
Federer on source code level contains

00:05:02,240 --> 00:05:07,670
references to round if you seen any spec

00:05:05,450 --> 00:05:10,550
files those up basically description how

00:05:07,670 --> 00:05:12,860
to build a piece of software there's a

00:05:10,550 --> 00:05:15,110
lot of references to rel in federal and

00:05:12,860 --> 00:05:21,890
this is the reason because we do use

00:05:15,110 --> 00:05:27,110
Fedora something that actually is the

00:05:21,890 --> 00:05:34,120
development ground for rap so this is

00:05:27,110 --> 00:05:39,350
browse 6o story rel seven all now we did

00:05:34,120 --> 00:05:43,790
free alpha 1 beta started 2011 and the

00:05:39,350 --> 00:05:48,320
2014 then I still remember the date June

00:05:43,790 --> 00:05:51,980
10th because of this was my Reese this

00:05:48,320 --> 00:05:56,150
is where I was working on for four years

00:05:51,980 --> 00:06:00,490
and you can actually already see a

00:05:56,150 --> 00:06:04,190
couple of lessons learned and I go back

00:06:00,490 --> 00:06:07,820
know used feathering on the final alpha

00:06:04,190 --> 00:06:10,790
throat well final this release was a

00:06:07,820 --> 00:06:14,420
little bit out of sync with what was

00:06:10,790 --> 00:06:17,900
happening in federal ground 7 all on the

00:06:14,420 --> 00:06:19,910
other hand was perfectly in sync because

00:06:17,900 --> 00:06:24,350
we were just using the final federal

00:06:19,910 --> 00:06:26,100
base to import them in-house so we just

00:06:24,350 --> 00:06:31,050
went through federal six

00:06:26,100 --> 00:06:33,060
17 18 19 s o'clock just doing them

00:06:31,050 --> 00:06:35,690
because this is the way how Federer

00:06:33,060 --> 00:06:37,710
brought the best value for at health

00:06:35,690 --> 00:06:40,200
because most of the work happens

00:06:37,710 --> 00:06:42,570
upstream from real point of view that

00:06:40,200 --> 00:06:47,940
means Phaedra and we put everything

00:06:42,570 --> 00:06:50,310
together so this is the story of how we

00:06:47,940 --> 00:06:52,680
actually take all those packages that

00:06:50,310 --> 00:06:56,310
are somewhere out there run them through

00:06:52,680 --> 00:06:58,890
Federer where they get integrated where

00:06:56,310 --> 00:07:01,470
we do all the major development changes

00:06:58,890 --> 00:07:05,160
and then bring them in-house and build

00:07:01,470 --> 00:07:08,100
an operating system from it going

00:07:05,160 --> 00:07:10,560
through this there was a lot of lessons

00:07:08,100 --> 00:07:14,220
I learned I mean working on you know for

00:07:10,560 --> 00:07:16,530
four years on something then actually

00:07:14,220 --> 00:07:21,840
learns you a lot through pay mostly

00:07:16,530 --> 00:07:25,800
right so I was thinking what are the

00:07:21,840 --> 00:07:28,890
lessons to share and one lesson I

00:07:25,800 --> 00:07:32,460
learned very hard in the hard ways the

00:07:28,890 --> 00:07:35,100
documentation is key and I'm not talking

00:07:32,460 --> 00:07:36,540
about user recommendation I'm actually

00:07:35,100 --> 00:07:41,340
talking about two kinds of

00:07:36,540 --> 00:07:45,540
recommendations one is documentation for

00:07:41,340 --> 00:07:48,270
teams imagine four years long project

00:07:45,540 --> 00:07:51,030
with hundreds of Engineers on it those

00:07:48,270 --> 00:07:54,330
teams will change over time people will

00:07:51,030 --> 00:07:56,250
come and leave right you know they do

00:07:54,330 --> 00:07:57,570
something now and they don't have to

00:07:56,250 --> 00:08:01,590
touch it for next three months they

00:07:57,570 --> 00:08:03,120
forget so having a consistent good

00:08:01,590 --> 00:08:05,520
documentation where people can actually

00:08:03,120 --> 00:08:08,970
go to figure out how to do certain

00:08:05,520 --> 00:08:12,780
things Michael makes a lot of sense the

00:08:08,970 --> 00:08:15,750
other piece is documentation that leaves

00:08:12,780 --> 00:08:19,020
the bread country and what I mean by

00:08:15,750 --> 00:08:22,320
that when my colleague was running

00:08:19,020 --> 00:08:25,950
rustic so she left a lot of project

00:08:22,320 --> 00:08:28,820
related documentation behind her no

00:08:25,950 --> 00:08:33,120
meeting minutes phase exists

00:08:28,820 --> 00:08:35,310
retrospectives tons of stuff and when I

00:08:33,120 --> 00:08:35,840
started with seven all all of that was

00:08:35,310 --> 00:08:39,500
like

00:08:35,840 --> 00:08:41,630
of gold I found because there was there

00:08:39,500 --> 00:08:43,730
were things they know went wrong there

00:08:41,630 --> 00:08:47,930
were things that went right there was a

00:08:43,730 --> 00:08:50,560
lot of stuff to learn and you know use

00:08:47,930 --> 00:08:53,480
for seven Oh devil

00:08:50,560 --> 00:08:55,010
so even if this is not for you

00:08:53,480 --> 00:08:57,590
you know my colleague sly she didn't it

00:08:55,010 --> 00:08:59,360
were for me like no she just created all

00:08:57,590 --> 00:09:02,720
the documentation she's a she went and I

00:08:59,360 --> 00:09:04,280
did the same on seven all but you know

00:09:02,720 --> 00:09:06,950
it's basically for future generation

00:09:04,280 --> 00:09:09,470
right on a future team that will work on

00:09:06,950 --> 00:09:12,320
something that long in next couple of

00:09:09,470 --> 00:09:16,580
years so that's one thing that was

00:09:12,320 --> 00:09:20,050
really really hard for me to do realize

00:09:16,580 --> 00:09:24,020
and you know it's not easy

00:09:20,050 --> 00:09:27,590
the other thing is rinse and repeat what

00:09:24,020 --> 00:09:30,620
I mean by that when you recall 7'o

00:09:27,590 --> 00:09:36,620
schedule you know VDS alpha 1 alpha 2

00:09:30,620 --> 00:09:38,960
alpha 3 and beta and algo it no it's 4

00:09:36,620 --> 00:09:45,230
years long project we actually found a

00:09:38,960 --> 00:09:48,290
way how to make sure that you know we

00:09:45,230 --> 00:09:50,260
repeat certain parts of the project to

00:09:48,290 --> 00:09:53,120
make sure that you know we can actually

00:09:50,260 --> 00:09:56,090
run a retrospective on that piece no we

00:09:53,120 --> 00:09:59,270
did alpha 1 run retrospective of alpha 1

00:09:56,090 --> 00:10:00,380
it was so hard to do it so we improve

00:09:59,270 --> 00:10:03,140
the process a little bit

00:10:00,380 --> 00:10:06,710
run alpha to run reso retrospective on

00:10:03,140 --> 00:10:09,290
it improve the process a little bit when

00:10:06,710 --> 00:10:11,660
we were doing alpha 3 as a programmer I

00:10:09,290 --> 00:10:14,090
even didn't notice it happened if your

00:10:11,660 --> 00:10:15,620
steam already knew what to do you were

00:10:14,090 --> 00:10:19,430
running like like a clockwork

00:10:15,620 --> 00:10:22,210
so this is one example the other example

00:10:19,430 --> 00:10:24,230
is you know when we do something we call

00:10:22,210 --> 00:10:27,410
snapshot that means like you know on

00:10:24,230 --> 00:10:30,260
weekly basis we create all the ISO

00:10:27,410 --> 00:10:32,180
images and everything and cuss them and

00:10:30,260 --> 00:10:34,400
it was that's another rinse and repeat

00:10:32,180 --> 00:10:36,950
approach you know today is called DevOps

00:10:34,400 --> 00:10:38,780
agile back then you know it was

00:10:36,950 --> 00:10:41,630
waterfall and we were doing snapshots so

00:10:38,780 --> 00:10:43,820
like terminology change but the benefits

00:10:41,630 --> 00:10:46,050
of doing something repeatedly as quickly

00:10:43,820 --> 00:10:48,390
as possible and

00:10:46,050 --> 00:10:50,790
in a way that it doesn't changes over

00:10:48,390 --> 00:10:53,430
time as quickly so for people or not for

00:10:50,790 --> 00:10:56,430
people it's almost a routine that

00:10:53,430 --> 00:10:58,920
there's a lot of value in it but you

00:10:56,430 --> 00:11:01,820
know when you do retrospectives there's

00:10:58,920 --> 00:11:04,350
one important thing you know asking team

00:11:01,820 --> 00:11:05,370
what they liked what they didn't and it

00:11:04,350 --> 00:11:07,230
doesn't matter if you're running

00:11:05,370 --> 00:11:10,530
waterfall if you're running a child you

00:11:07,230 --> 00:11:12,420
know there's the instructors piece of it

00:11:10,530 --> 00:11:15,180
that I've forgotten the name actually

00:11:12,420 --> 00:11:18,240
says the team gets together and reviews

00:11:15,180 --> 00:11:21,630
what has happened one important thing is

00:11:18,240 --> 00:11:23,460
act on actions doesn't make too much

00:11:21,630 --> 00:11:28,470
sense if you ask people what they think

00:11:23,460 --> 00:11:33,450
if you don't do anything about it the

00:11:28,470 --> 00:11:37,710
next thing I was dealing with myself

00:11:33,450 --> 00:11:39,900
pretty hard is cone of uncertainty if

00:11:37,710 --> 00:11:44,400
you are project manager program manager

00:11:39,900 --> 00:11:47,850
I know you're scrum master and you have

00:11:44,400 --> 00:11:51,750
something very long ahead of you don't

00:11:47,850 --> 00:11:54,750
try to make perfect plans because and I

00:11:51,750 --> 00:11:57,360
like that analogy a lot plans don't

00:11:54,750 --> 00:12:00,750
survive contact with the enemy right

00:11:57,360 --> 00:12:04,470
what I mean by that if you have a 3-year

00:12:00,750 --> 00:12:07,500
zone project plan maybe six months ahead

00:12:04,470 --> 00:12:09,810
heaven like overall plan but don't try

00:12:07,500 --> 00:12:12,420
to like nail every single action for

00:12:09,810 --> 00:12:14,490
next three years it will change right

00:12:12,420 --> 00:12:16,560
it will change so hard that you know

00:12:14,490 --> 00:12:18,300
you'll spend tons and tons of time

00:12:16,560 --> 00:12:20,040
redoing what you've already planned and

00:12:18,300 --> 00:12:23,520
throwing it away hey you know being

00:12:20,040 --> 00:12:26,160
upset so on those seven oh when we were

00:12:23,520 --> 00:12:29,550
running the team what we did was

00:12:26,160 --> 00:12:31,470
basically we had a quota limit planning

00:12:29,550 --> 00:12:34,410
meetings very planned for the next six

00:12:31,470 --> 00:12:37,050
months and like no updated schedule

00:12:34,410 --> 00:12:40,350
updated you know processes as we needed

00:12:37,050 --> 00:12:43,590
etc so that actually at that time gave

00:12:40,350 --> 00:12:49,260
us enough room to work with all the

00:12:43,590 --> 00:12:52,410
teams across across the company the

00:12:49,260 --> 00:12:53,250
other pieces that product is work of

00:12:52,410 --> 00:12:56,250
many teams

00:12:53,250 --> 00:12:57,660
and what I mean by that is yes

00:12:56,250 --> 00:13:01,710
engineering missile important

00:12:57,660 --> 00:13:04,910
development we do a lot of work but once

00:13:01,710 --> 00:13:07,650
those two teams have bits ready to ship

00:13:04,910 --> 00:13:11,100
there's a lot of other stuff that needs

00:13:07,650 --> 00:13:14,010
to be ready to ship at the same time you

00:13:11,100 --> 00:13:16,350
need to have support ready

00:13:14,010 --> 00:13:18,480
you need to have marketing ready you

00:13:16,350 --> 00:13:20,210
need to have sales organizationally so

00:13:18,480 --> 00:13:23,100
they know how to approach the customer

00:13:20,210 --> 00:13:26,040
you know sometimes some kind of

00:13:23,100 --> 00:13:29,250
certifications use the documentation

00:13:26,040 --> 00:13:33,690
there's like a lot a lot of things that

00:13:29,250 --> 00:13:35,970
needs to happen and even if you develop

00:13:33,690 --> 00:13:38,730
something agile fashion there's always

00:13:35,970 --> 00:13:41,700
at point in time when all those teams

00:13:38,730 --> 00:13:43,800
need to know what are you going to ship

00:13:41,700 --> 00:13:46,860
because they are know some of them like

00:13:43,800 --> 00:13:49,380
my my favorite examples actually

00:13:46,860 --> 00:13:51,960
marketing marketing is not able to

00:13:49,380 --> 00:13:53,880
deliver on two-week Sprint's they need

00:13:51,960 --> 00:13:56,940
to have something to build yet their

00:13:53,880 --> 00:14:02,790
message on and then communicate it to

00:13:56,940 --> 00:14:09,450
the rest of the world and this is the

00:14:02,790 --> 00:14:14,580
last piece I actually learn and I cannot

00:14:09,450 --> 00:14:16,410
stress this out strongly enough because

00:14:14,580 --> 00:14:19,370
if you work on something that's four

00:14:16,410 --> 00:14:23,310
years long you do need to find

00:14:19,370 --> 00:14:26,850
destruction just small prochik on sites

00:14:23,310 --> 00:14:29,130
here and there you know make fun do

00:14:26,850 --> 00:14:32,430
something different you know it can get

00:14:29,130 --> 00:14:37,230
at you really really quickly the other

00:14:32,430 --> 00:14:39,300
piece is you know in today's world we

00:14:37,230 --> 00:14:41,850
hear a lot about work-life balance

00:14:39,300 --> 00:14:45,089
it's not about smart know when when my

00:14:41,850 --> 00:14:47,460
boutique was doing our round six you

00:14:45,089 --> 00:14:50,130
remember the Alpha 3 story and you know

00:14:47,460 --> 00:14:53,400
we had to like know do something special

00:14:50,130 --> 00:14:55,200
in house she had a vacation planned for

00:14:53,400 --> 00:14:59,880
two weeks you wanted to go to Paris

00:14:55,200 --> 00:15:02,050
and she was really hard thinking should

00:14:59,880 --> 00:15:04,480
I stay at work and finish

00:15:02,050 --> 00:15:05,890
this really important piece of work or

00:15:04,480 --> 00:15:08,170
should I go somewhere else

00:15:05,890 --> 00:15:10,149
you know spend my time with my husband

00:15:08,170 --> 00:15:13,149
and take a rest and she decided to do

00:15:10,149 --> 00:15:16,120
the later she gave me all the work I was

00:15:13,149 --> 00:15:20,170
freaking out at that moment I mean it

00:15:16,120 --> 00:15:21,279
was so important for her to recharge so

00:15:20,170 --> 00:15:25,000
she know she could I should carry on

00:15:21,279 --> 00:15:29,010
next for the next couple of months so

00:15:25,000 --> 00:15:34,600
that's where I would like to finish left

00:15:29,010 --> 00:15:58,690
10 minutes for questions who wants to

00:15:34,600 --> 00:16:01,540
start biggest challenge for the team big

00:15:58,690 --> 00:16:04,690
it is hard to say there was one biggest

00:16:01,540 --> 00:16:06,579
challenge because like every like the

00:16:04,690 --> 00:16:09,790
project goes through multiple phases

00:16:06,579 --> 00:16:13,480
right at the time we did a little bit of

00:16:09,790 --> 00:16:16,300
planning etc but in case of rel the

00:16:13,480 --> 00:16:19,060
biggest issue is the size of the project

00:16:16,300 --> 00:16:20,770
and what I mean by that you know if you

00:16:19,060 --> 00:16:23,079
have a team that's hundreds and hundreds

00:16:20,770 --> 00:16:25,570
of Engineers big there's the serious

00:16:23,079 --> 00:16:27,430
communication issues because you know

00:16:25,570 --> 00:16:28,870
it's so hard to beat every single or

00:16:27,430 --> 00:16:32,350
that the people a person in the

00:16:28,870 --> 00:16:38,160
organization it's a so that's one piece

00:16:32,350 --> 00:16:40,360
the other is that at that time

00:16:38,160 --> 00:16:42,010
communication between development and QA

00:16:40,360 --> 00:16:46,360
wasn't the best initial reference to the

00:16:42,010 --> 00:16:50,230
previous talk because Huey was seriously

00:16:46,360 --> 00:16:52,060
lagging behind development and stuff was

00:16:50,230 --> 00:16:55,920
literally thrown over the wall to that

00:16:52,060 --> 00:16:55,920
and developers didn't care much

00:17:09,210 --> 00:17:17,240
so

00:17:11,540 --> 00:17:18,230
and so these questions about this is you

00:17:17,240 --> 00:17:21,260
might have been mordicus how we

00:17:18,230 --> 00:17:23,420
structured the documentation so if I

00:17:21,260 --> 00:17:25,850
talk about project documentation and you

00:17:23,420 --> 00:17:27,589
know meeting minutes stuff like that for

00:17:25,850 --> 00:17:29,930
then we actually have a place where to

00:17:27,589 --> 00:17:32,570
store rooms so look for me there was

00:17:29,930 --> 00:17:34,820
like a know a place where I could find

00:17:32,570 --> 00:17:36,260
all the meeting minutes like every every

00:17:34,820 --> 00:17:38,390
single week didn't know what has

00:17:36,260 --> 00:17:42,110
happened on six oh and you know I did

00:17:38,390 --> 00:17:43,580
the same for 704 the phase exists stuff

00:17:42,110 --> 00:17:46,160
like that you know we had a folder where

00:17:43,580 --> 00:17:48,320
we had all those documents where I could

00:17:46,160 --> 00:17:51,140
access them so and at the time it was as

00:17:48,320 --> 00:17:54,200
easy as using SVN and track were

00:17:51,140 --> 00:17:57,080
restored PDFs so it was like no really

00:17:54,200 --> 00:17:59,000
simple on the other hand it didn't break

00:17:57,080 --> 00:18:02,570
over years and years right I mean

00:17:59,000 --> 00:18:06,620
something that was created in 2009 I was

00:18:02,570 --> 00:18:08,360
able to find it even in 2013 which are

00:18:06,620 --> 00:18:11,860
like you know the simpler solution the

00:18:08,360 --> 00:18:11,860
better in this case

00:18:25,429 --> 00:18:31,169
right because so no the question is

00:18:29,309 --> 00:18:33,450
about that you know we were able to find

00:18:31,169 --> 00:18:35,760
those important things and you know this

00:18:33,450 --> 00:18:38,880
is because of at that time like our

00:18:35,760 --> 00:18:41,190
manager forced us to create a structure

00:18:38,880 --> 00:18:42,510
of documents we didn't like it now it's

00:18:41,190 --> 00:18:44,429
better to create something than throw it

00:18:42,510 --> 00:18:47,250
away when you don't need it but he

00:18:44,429 --> 00:18:50,429
really was pushing us to make sure we

00:18:47,250 --> 00:18:53,490
put it in one common place even as PDFs

00:18:50,429 --> 00:18:55,260
so no they put me a little later on but

00:18:53,490 --> 00:18:59,690
you know it was still as I said like no

00:18:55,260 --> 00:18:59,690
chest of gold when I needed it

00:19:02,330 --> 00:19:05,330
sure

00:19:22,920 --> 00:19:27,550
so what do we do before the final our

00:19:25,870 --> 00:19:32,650
final federales

00:19:27,550 --> 00:19:36,940
so we basically do development in two

00:19:32,650 --> 00:19:38,260
places one is in upstream because you

00:19:36,940 --> 00:19:41,050
know eventually when the package gets

00:19:38,260 --> 00:19:43,180
updated nothing gets into Federer right

00:19:41,050 --> 00:19:45,040
so there's a source code and the other

00:19:43,180 --> 00:19:45,640
piece of the opens going directly in

00:19:45,040 --> 00:19:47,200
Federer

00:19:45,640 --> 00:19:49,930
because you know what what usually

00:19:47,200 --> 00:19:51,910
happens when we import stuff into RL is

00:19:49,930 --> 00:19:54,100
we change compound Flags you know we

00:19:51,910 --> 00:19:56,230
change configuration of Carl all stuff

00:19:54,100 --> 00:19:58,750
like that but you know usually you know

00:19:56,230 --> 00:20:01,600
we take no base or source code from

00:19:58,750 --> 00:20:03,430
federal one one to one we just restrict

00:20:01,600 --> 00:20:05,740
the number of packages we import just to

00:20:03,430 --> 00:20:07,810
those we need because Federer has like

00:20:05,740 --> 00:20:20,400
no much higher number of packages than

00:20:07,810 --> 00:20:20,400
what we actually ship us in a row yes

00:20:22,230 --> 00:20:26,800
it's really like a Federer is our

00:20:24,460 --> 00:20:31,150
development destroy that's why I know it

00:20:26,800 --> 00:20:33,070
gets broken from time to time and no

00:20:31,150 --> 00:20:35,320
they are actually independent project of

00:20:33,070 --> 00:20:37,690
rel so you know we when we were doing

00:20:35,320 --> 00:20:39,700
raw seven oh we approach them I mean we

00:20:37,690 --> 00:20:41,560
approached pesco through our gym

00:20:39,700 --> 00:20:43,990
steering committee and actually very

00:20:41,560 --> 00:20:46,270
kindly asked them to make sure they keep

00:20:43,990 --> 00:20:48,370
hitting the dates because it was so

00:20:46,270 --> 00:20:49,960
important Internet to RedHat that we

00:20:48,370 --> 00:20:53,260
could actually work with those and they

00:20:49,960 --> 00:20:59,620
were so glad they almost didn't I mean

00:20:53,260 --> 00:21:06,450
it's a fair project right okay think we

00:20:59,620 --> 00:21:06,450
have maybe for one more journey sure

00:21:16,970 --> 00:21:23,010
so can I imagine that you know we'll

00:21:19,740 --> 00:21:24,960
just keep cranking out matrices like as

00:21:23,010 --> 00:21:26,360
the continues deliverable did I get it

00:21:24,960 --> 00:21:28,710
right

00:21:26,360 --> 00:21:31,980
there's one thing that stays in the way

00:21:28,710 --> 00:21:35,550
and it's called actually two things it's

00:21:31,980 --> 00:21:40,170
a life cycle because rail has a ten

00:21:35,550 --> 00:21:43,440
years of support and during that life

00:21:40,170 --> 00:21:46,380
cycle we promise to not to break colonel

00:21:43,440 --> 00:21:49,380
ABI and at some places even the

00:21:46,380 --> 00:21:52,170
userspace ABI and it would be so

00:21:49,380 --> 00:21:54,150
difficult to keep up to date with all

00:21:52,170 --> 00:21:56,760
that happens in the upstream while of

00:21:54,150 --> 00:22:00,330
breaking those things and like I get

00:21:56,760 --> 00:22:04,410
that like not everybody understands why

00:22:00,330 --> 00:22:06,960
the old stuff is important but like

00:22:04,410 --> 00:22:10,080
Tokyo Stock Exchange for example runs

00:22:06,960 --> 00:22:11,640
well and they just cannot operate and

00:22:10,080 --> 00:22:13,530
change the operating system every year

00:22:11,640 --> 00:22:16,020
or something like that you know for them

00:22:13,530 --> 00:22:18,180
it's important to deploy it in right

00:22:16,020 --> 00:22:20,250
three years and there's actually one of

00:22:18,180 --> 00:22:22,680
the value proposition of read and write

00:22:20,250 --> 00:22:24,090
or RAL why they pay us otherwise they

00:22:22,680 --> 00:22:26,240
could use federally could use something

00:22:24,090 --> 00:22:26,240
different

00:22:28,610 --> 00:22:37,880
one more I have like two minutes I don't

00:22:34,470 --> 00:22:37,880
see any hand so thanks a lot

00:22:40,850 --> 00:22:42,910

YouTube URL: https://www.youtube.com/watch?v=5JCOMMKC4Ls


