Title: Using SELinux with container runtimes
Publication date: 2019-03-04
Playlist: DevConfCZ 2019
Description: 
	Presentation name: Using SELinux with container runtimes
Speakers: Lukas Vrabec, Daniel Walsh
Description:  This talk will explain how SELinux works with containers. We will show how to enable/disable SElinux using multiple different container runtimes and define the default types. The two default types for running containers are container_t which is a fully confined domain, which eliminates any use of the host files unless they are relabeled. Or spc_t, which is the type containers run with when SELinux is disabled for container separation, --privileged mode. Writing custom policy for each container that needed additional access would be very difficult and require a container policy writer. Lukas built a new standalone tool, udica for generating SELinux policy profiles for containers based on automatic inspecting these containers. Come to see how easy you can create own policy for container!
[ https://sched.co/Jcf8 ]
Captions: 
	00:00:09,410 --> 00:00:24,570
hi I will catch rabbits so we're talking

00:00:17,070 --> 00:00:36,000
today and I'm a big believer and as

00:00:24,570 --> 00:00:37,590
you've been experienced combination of

00:00:36,000 --> 00:00:40,740
two things we're gonna go through that

00:00:37,590 --> 00:00:43,350
minute s it makes an expert at

00:00:40,740 --> 00:00:44,910
protecting the hosts file system and the

00:00:43,350 --> 00:00:54,060
containers right so we want to make sure

00:00:44,910 --> 00:00:58,160
that the patina doesn't explain that so

00:00:54,060 --> 00:01:03,170
the best tools wha that in my belief is

00:00:58,160 --> 00:01:03,170
so have you done my presentation

00:01:10,960 --> 00:01:19,030
anything in red you've got to say not it

00:01:15,370 --> 00:01:19,030
for Frankie's Markie

00:01:56,340 --> 00:02:11,650
we rules so now we go so as he likes it

00:02:09,880 --> 00:02:16,000
based on a thing called type enforcement

00:02:11,650 --> 00:02:17,620
type enforcement is basically we say a

00:02:16,000 --> 00:02:20,080
process of the type it's an Apache

00:02:17,620 --> 00:02:22,540
process it's a all right if the data is

00:02:20,080 --> 00:02:24,640
on disk it's an Apache data and then we

00:02:22,540 --> 00:02:27,130
write rules it says Apache processes can

00:02:24,640 --> 00:02:29,290
only read have to read all the data or

00:02:27,130 --> 00:02:32,470
the economic write read and write attach

00:02:29,290 --> 00:02:34,330
your feedback date if a matching process

00:02:32,470 --> 00:02:39,550
tries to do it maybe house on the system

00:02:34,330 --> 00:02:41,019
is going to fall but rather the actually

00:02:39,550 --> 00:02:47,709
going to say we have two processes that

00:02:41,019 --> 00:02:54,220
process then we were having August food

00:02:47,709 --> 00:02:56,320
office then we write a rule that looks

00:02:54,220 --> 00:02:59,260
exactly like this rule this is pretty

00:02:56,320 --> 00:03:02,950
much exactly selinux policy right here

00:02:59,260 --> 00:03:05,730
allow a cat process to eat permission

00:03:02,950 --> 00:03:08,019
eat catch out in the category of food

00:03:05,730 --> 00:03:12,340
then we write a rule that says allow a

00:03:08,019 --> 00:03:14,370
dog to eat dog food okay everything's

00:03:12,340 --> 00:03:16,930
denied by default we write these rules

00:03:14,370 --> 00:03:18,940
then they cat be able to eat the cat

00:03:16,930 --> 00:03:21,940
food and the dogs they believe the dog

00:03:18,940 --> 00:03:24,040
food can get more from the kernel

00:03:21,940 --> 00:03:26,290
against this more cat food but when the

00:03:24,040 --> 00:03:29,340
dog tries to eat the cat food the kernel

00:03:26,290 --> 00:03:29,340
stuff sitting in blocks it

00:03:32,060 --> 00:03:36,140
Linux world we're talking about we label

00:03:34,220 --> 00:03:38,209
containers are talking about containers

00:03:36,140 --> 00:03:39,560
here so we've basically type before us

00:03:38,209 --> 00:03:42,440
the protects a host from the container

00:03:39,560 --> 00:03:44,810
processes the container processes we

00:03:42,440 --> 00:03:47,240
actually allow contain analysis to

00:03:44,810 --> 00:03:49,790
exactly read stuff with of this lecture

00:03:47,240 --> 00:03:52,730
the reasons for that is when a lot of

00:03:49,790 --> 00:03:54,709
people volume out in things from the

00:03:52,730 --> 00:03:56,780
host operating system from the host user

00:03:54,709 --> 00:03:58,459
into the container but they're not

00:03:56,780 --> 00:04:01,790
allowed container processes not allowed

00:03:58,459 --> 00:04:04,070
to write just lecture just able to read

00:04:01,790 --> 00:04:06,230
that's by default policy container

00:04:04,070 --> 00:04:10,220
process only able to write to contain

00:04:06,230 --> 00:04:12,200
files these are the types that we use so

00:04:10,220 --> 00:04:14,510
this is the cat and this is the cat food

00:04:12,200 --> 00:04:17,180
so we label a container process as

00:04:14,510 --> 00:04:19,250
container T and we label a file type of

00:04:17,180 --> 00:04:21,140
the containers contain a file see the

00:04:19,250 --> 00:04:23,690
only thing in the world that a container

00:04:21,140 --> 00:04:27,610
is allowed to write to this container

00:04:23,690 --> 00:04:27,610
file to okay

00:04:28,390 --> 00:04:33,889
most container right runtime CBE's

00:04:31,100 --> 00:04:37,000
contains breakup of the file system

00:04:33,889 --> 00:04:40,880
happen have been blocked this see be

00:04:37,000 --> 00:04:44,030
blocked by st limits this CD blocked by

00:04:40,880 --> 00:04:47,570
IC works this CVE blocked by a c-list

00:04:44,030 --> 00:04:49,880
this CD blocked by a seal is this CV

00:04:47,570 --> 00:04:53,090
blocked by estimates those the 5-minute

00:04:49,880 --> 00:04:55,550
commerce lon okay almost every single

00:04:53,090 --> 00:04:57,979
breakup container month times has been a

00:04:55,550 --> 00:04:59,960
file system attack they figured out the

00:04:57,979 --> 00:05:03,229
way to break up the files couple

00:04:59,960 --> 00:05:05,600
examples of those run seek at a Open

00:05:03,229 --> 00:05:08,180
File descriptive I had both printed and

00:05:05,600 --> 00:05:09,979
container exactly to a container and I

00:05:08,180 --> 00:05:12,380
brought an open file descriptor with me

00:05:09,979 --> 00:05:14,539
across the inside of the Tina could its

00:05:12,380 --> 00:05:16,160
pack that over the pilots way they could

00:05:14,539 --> 00:05:18,560
get out that all the file scripted to

00:05:16,160 --> 00:05:19,789
file on file system and then it's not

00:05:18,560 --> 00:05:22,130
attacking the process

00:05:19,789 --> 00:05:25,280
another example slash on the host

00:05:22,130 --> 00:05:26,590
operating system is a well-known penalty

00:05:25,280 --> 00:05:28,720
and

00:05:26,590 --> 00:05:31,780
what's happening is people this assist

00:05:28,720 --> 00:05:33,400
called open file ass and you a put in

00:05:31,780 --> 00:05:36,790
you have no the file system you're on

00:05:33,400 --> 00:05:38,380
and you know the I hope the slash passes

00:05:36,790 --> 00:05:41,080
you can actually open it up without

00:05:38,380 --> 00:05:42,850
vertical on maintenance so people grow

00:05:41,080 --> 00:05:45,010
out of continuous my basically get into

00:05:42,850 --> 00:05:46,600
next action when they walk across system

00:05:45,010 --> 00:05:48,940
but that seemed innocent stuff in the

00:05:46,600 --> 00:05:51,790
break right through at that point so

00:05:48,940 --> 00:05:53,919
toxify are about Bessie Linux type

00:05:51,790 --> 00:05:55,330
enforcement with SELinux obviously if

00:05:53,919 --> 00:05:56,650
everything in the world was a cat or

00:05:55,330 --> 00:05:58,840
everything in the world is a dog two

00:05:56,650 --> 00:06:01,210
dogs and cats can attack each other so

00:05:58,840 --> 00:06:04,450
we just both take enforcement we have

00:06:01,210 --> 00:06:06,370
the cats the container T's are able to

00:06:04,450 --> 00:06:07,990
tap the other content we want to use

00:06:06,370 --> 00:06:10,300
that C limits for separation between the

00:06:07,990 --> 00:06:13,510
containers so type enforcement a

00:06:10,300 --> 00:06:16,270
simulator contains them off what bucket

00:06:13,510 --> 00:06:18,520
at or to code that so SELinux the second

00:06:16,270 --> 00:06:22,690
part of the SELinux is based on despite

00:06:18,520 --> 00:06:35,430
a multi-level security years ago we

00:06:22,690 --> 00:06:38,220
started doing virtualization so the

00:06:35,430 --> 00:06:40,510
basically years ago we had a

00:06:38,220 --> 00:06:43,690
virtualization so we create a thing

00:06:40,510 --> 00:06:45,640
called escrow and what we did is SELinux

00:06:43,690 --> 00:06:47,200
have this fourth field ever look at the

00:06:45,640 --> 00:06:50,140
mystic mist almost always you see it was

00:06:47,200 --> 00:06:51,520
s0 that's the edge it's just blowing a

00:06:50,140 --> 00:06:52,900
mile off or else what most people never

00:06:51,520 --> 00:06:55,270
used that molasses is like top secret

00:06:52,900 --> 00:06:55,840
secret stuff so we have this field and

00:06:55,270 --> 00:06:59,139
acid

00:06:55,840 --> 00:07:08,260
to create a new title pause and we

00:06:59,139 --> 00:07:10,090
created a policy call category in so

00:07:08,260 --> 00:07:11,500
when we able to do with with MCS

00:07:10,090 --> 00:07:13,780
category who basically said we're just

00:07:11,500 --> 00:07:15,340
going to pick random MCS categories and

00:07:13,780 --> 00:07:18,760
then we're just going to guarantee that

00:07:15,340 --> 00:07:20,919
the MCS categories match so based on MLS

00:07:18,760 --> 00:07:24,520
and what we do now is we're able to say

00:07:20,919 --> 00:07:26,620
we're going to identify the dogs so we

00:07:24,520 --> 00:07:28,090
have dark pipes and we can control a

00:07:26,620 --> 00:07:30,400
dark-type attack and the host operating

00:07:28,090 --> 00:07:33,340
system but if we can act a that I each

00:07:30,400 --> 00:07:35,110
to each container type differently then

00:07:33,340 --> 00:07:37,270
we can have my slippers so we're going

00:07:35,110 --> 00:07:39,760
to put an FCS label of phyto on this dog

00:07:37,270 --> 00:07:41,830
in that spot yeah on that and we're

00:07:39,760 --> 00:07:45,190
gonna create food now we can also put

00:07:41,830 --> 00:07:46,840
these cmcs label on the food on it so

00:07:45,190 --> 00:07:49,300
it's it's still a contain a fireteam

00:07:46,840 --> 00:07:52,240
object object but we're adding the

00:07:49,300 --> 00:07:55,360
fighter to so I can have side of it spot

00:07:52,240 --> 00:07:58,000
and then obviously if items able to eat

00:07:55,360 --> 00:07:59,169
his food but when spot I mean Fido tries

00:07:58,000 --> 00:08:01,270
to eat spicy food

00:07:59,169 --> 00:08:03,370
their current steps it so what happens

00:08:01,270 --> 00:08:06,520
when a Saeta containers the container

00:08:03,370 --> 00:08:09,100
one times basically pick out a random

00:08:06,520 --> 00:08:11,740
MCS later and then they assign it to all

00:08:09,100 --> 00:08:13,330
the content and they assign it to the

00:08:11,740 --> 00:08:15,760
process they've launched the first

00:08:13,330 --> 00:08:17,349
processing container and then basically

00:08:15,760 --> 00:08:19,150
that is how we do it and we do the same

00:08:17,349 --> 00:08:20,800
thing with virtualization we did it with

00:08:19,150 --> 00:08:23,289
original authorship and openshift

00:08:20,800 --> 00:08:26,070
original facilities we have millions of

00:08:23,289 --> 00:08:30,250
users each one with separate MCS lawyers

00:08:26,070 --> 00:08:31,810
so that's how MCS enforcement works so

00:08:30,250 --> 00:08:35,440
what happened when a container breaks

00:08:31,810 --> 00:08:37,870
out onto the system we're about to show

00:08:35,440 --> 00:08:39,849
you this so this is a script by the way

00:08:37,870 --> 00:08:40,520
all the demos looking on the slides at

00:08:39,849 --> 00:08:41,810
demos

00:08:40,520 --> 00:08:44,090
list that you can go and play with these

00:08:41,810 --> 00:08:46,130
at your leisure so we're going to use

00:08:44,090 --> 00:08:50,270
pod man to actually launch a container

00:08:46,130 --> 00:08:53,270
but and here we have how you can subvert

00:08:50,270 --> 00:08:56,150
your system so we're going to do sudo if

00:08:53,270 --> 00:08:57,650
you run docker with in the docking group

00:08:56,150 --> 00:08:59,750
you can do this and break in your system

00:08:57,650 --> 00:09:01,250
without having to be rude but we'll get

00:08:59,750 --> 00:09:04,010
to do it as roof so you're doing quad

00:09:01,250 --> 00:09:05,450
man run this is just to make I make

00:09:04,010 --> 00:09:08,120
scripts a little better I'm sending you

00:09:05,450 --> 00:09:10,100
home but this is a really critical thing

00:09:08,120 --> 00:09:12,590
so while you mounting these slash in the

00:09:10,100 --> 00:09:13,220
roof host operating system lots of slash

00:09:12,590 --> 00:09:15,200
post

00:09:13,220 --> 00:09:16,550
I'm just running Fedora potato could run

00:09:15,200 --> 00:09:18,650
any context we're not even gonna use

00:09:16,550 --> 00:09:21,530
that and then we use each you to route

00:09:18,650 --> 00:09:23,150
to host to break out of the detail so

00:09:21,530 --> 00:09:25,370
basically I am getting out to the host

00:09:23,150 --> 00:09:26,900
author insist on getting out of slide if

00:09:25,370 --> 00:09:29,060
I went mail is containing you will see a

00:09:26,900 --> 00:09:30,410
full slashing it and I happened to write

00:09:29,060 --> 00:09:30,980
a little script here to make this a

00:09:30,410 --> 00:09:32,750
little quicker

00:09:30,980 --> 00:09:34,640
so I'm actually gonna when I break down

00:09:32,750 --> 00:09:36,710
I'm gonna try my breakouts groups who

00:09:34,640 --> 00:09:38,900
actually caused happen to happen so now

00:09:36,710 --> 00:09:43,340
we're going to do it and just to show

00:09:38,900 --> 00:09:45,710
you go another one so right here it

00:09:43,340 --> 00:09:47,960
shows that I'm running a system 0

00:09:45,710 --> 00:09:50,510
basically the type is here container T

00:09:47,960 --> 00:09:52,550
and up here we have the MCS label again

00:09:50,510 --> 00:09:54,050
5 min pick that out randomly inclined

00:09:52,550 --> 00:09:56,120
man has a whole database that contains

00:09:54,050 --> 00:09:57,710
the previously created and make sure

00:09:56,120 --> 00:09:58,220
that it doesn't have a quote doesn't

00:09:57,710 --> 00:10:00,650
overflow

00:09:58,220 --> 00:10:01,760
now we basically try to cabbage the

00:10:00,650 --> 00:10:04,220
shadow is route

00:10:01,760 --> 00:10:06,050
field types filing system routes he's

00:10:04,220 --> 00:10:08,720
gonna go into the home directory he's

00:10:06,050 --> 00:10:10,130
gonna try to get us the SH directory now

00:10:08,720 --> 00:10:12,410
he's gonna look at a pit one on the

00:10:10,130 --> 00:10:14,720
system you got permission dying now he's

00:10:12,410 --> 00:10:16,100
gonna stop doing system D communication

00:10:14,720 --> 00:10:17,450
and now he's going to try to run a

00:10:16,100 --> 00:10:20,740
docker container and you're gonna get

00:10:17,450 --> 00:10:23,300
permission denied and clear so basically

00:10:20,740 --> 00:10:24,980
with SELinux again the only because a

00:10:23,300 --> 00:10:27,860
lot to do is interact with container

00:10:24,980 --> 00:10:29,960
files right it's not allowed to even if

00:10:27,860 --> 00:10:32,000
you break out as full route on the

00:10:29,960 --> 00:10:33,740
system that's it now when we write

00:10:32,000 --> 00:10:35,949
containers is where we pick all

00:10:33,740 --> 00:10:38,660
containers run

00:10:35,949 --> 00:10:40,430
all right inside the container

00:10:38,660 --> 00:10:42,680
everything running all across is Ron's

00:10:40,430 --> 00:10:44,180
container ship well we don't have a

00:10:42,680 --> 00:10:46,480
solution inside of the container but

00:10:44,180 --> 00:10:46,480
that's by choice

00:11:01,210 --> 00:11:04,269
[Music]

00:11:14,700 --> 00:11:17,879
[Music]

00:11:21,100 --> 00:11:27,470
Barbara yeah so you know stop come on

00:11:25,220 --> 00:11:29,389
here okay okay so that's it

00:11:27,470 --> 00:11:31,639
so as I'm running with those attacks I

00:11:29,389 --> 00:11:32,870
actually have some money to show you

00:11:31,639 --> 00:11:33,620
what's happening on the auditing

00:11:32,870 --> 00:11:35,899
subsystem

00:11:33,620 --> 00:11:38,209
so this shows that this is when I came

00:11:35,899 --> 00:11:39,680
out into shadow it shows that container

00:11:38,209 --> 00:11:41,449
to you trying to read that's a shadow

00:11:39,680 --> 00:11:42,680
and now it's gonna show what happens

00:11:41,449 --> 00:11:45,319
when the doctor when they try to run the

00:11:42,680 --> 00:11:48,439
doctor commands and so here you see I

00:11:45,319 --> 00:11:51,439
was trying to connect to doctor demon

00:11:48,439 --> 00:11:53,809
via the doctor socket and so you know

00:11:51,439 --> 00:11:55,370
Wi-Fi will be going wise at the point

00:11:53,809 --> 00:11:56,959
that these containers are broken out so

00:11:55,370 --> 00:11:59,029
you'd have to watch your audit log file

00:11:56,959 --> 00:12:03,079
to say config ins are doing something

00:11:59,029 --> 00:12:06,850
awful evil on my system I think I've

00:12:03,079 --> 00:12:06,850
done that right yeah yeah I look down

00:12:10,960 --> 00:12:15,890
okay and this is the next generation of

00:12:14,060 --> 00:12:26,420
estimates experts working on their

00:12:15,890 --> 00:12:29,750
training right now so okay so then talk

00:12:26,420 --> 00:12:33,770
about the MCS and let's look on the MCAS

00:12:29,750 --> 00:12:36,260
how is work meet relation or how habits

00:12:33,770 --> 00:12:38,060
work with as a specifically the category

00:12:36,260 --> 00:12:40,760
so let's say we have two containers and

00:12:38,060 --> 00:12:42,680
as we can see both the containers have

00:12:40,760 --> 00:12:46,360
same SELinux type which is container

00:12:42,680 --> 00:12:49,100
underscore t but these containers has

00:12:46,360 --> 00:12:53,240
have different categories the first one

00:12:49,100 --> 00:12:56,510
has C 1 and C 2 and in the bullets here

00:12:53,240 --> 00:12:58,730
we have four objects which are labeled

00:12:56,510 --> 00:13:01,850
as container underscore file underscore

00:12:58,730 --> 00:13:05,510
t which let's say it's kind of files on

00:13:01,850 --> 00:13:09,260
the system but all these all these

00:13:05,510 --> 00:13:11,990
categories are subsets of of the

00:13:09,260 --> 00:13:14,740
following set of categories which is C 1

00:13:11,990 --> 00:13:17,600
and C 2 so we can say that this category

00:13:14,740 --> 00:13:20,210
ethical dominance these categories and

00:13:17,600 --> 00:13:24,050
same story for for container with

00:13:20,210 --> 00:13:25,520
category C 2 and C 3 but let's let's

00:13:24,050 --> 00:13:28,640
talk about we are talking about the

00:13:25,520 --> 00:13:31,000
container so let's let's focus just on

00:13:28,640 --> 00:13:31,000
these two

00:13:40,160 --> 00:13:45,890
the dominant says means that I picked is

00:13:43,010 --> 00:13:48,020
one category other dimensions of

00:13:45,890 --> 00:13:49,670
Dominator but the interesting thing you

00:13:48,020 --> 00:13:52,700
I have two categories well first of all

00:13:49,670 --> 00:13:55,730
there's 1024 categories bill so by

00:13:52,700 --> 00:14:00,020
taking two categories I get a 1024 x

00:13:55,730 --> 00:14:03,290
1024 basically okay but you have to

00:14:00,020 --> 00:14:04,790
divide two because as C 1 comma C 2 is

00:14:03,290 --> 00:14:08,510
the exact same thing as each other

00:14:04,790 --> 00:14:13,180
C 2 policy so that actually cuts the

00:14:08,510 --> 00:14:27,800
total number of on a system to basically

00:14:13,180 --> 00:14:30,890
so if we wanted to get containers ok so

00:14:27,800 --> 00:14:33,140
let's let's look on this picture again 2

00:14:30,890 --> 00:14:36,290
containers we just say Messalina type

00:14:33,140 --> 00:14:38,900
container underscore t but a different

00:14:36,290 --> 00:14:42,170
category C 1 and C 2 that's one set and

00:14:38,900 --> 00:14:44,930
second one is C 2 and C 3 so if we have

00:14:42,170 --> 00:14:46,760
three objects on the system again with

00:14:44,930 --> 00:14:48,980
the same selinux label which is

00:14:46,760 --> 00:14:51,980
container underscore file underscore t

00:14:48,980 --> 00:14:55,220
but there are different categories so

00:14:51,980 --> 00:14:58,310
this container can access the let's say

00:14:55,220 --> 00:15:00,800
this this first object why because there

00:14:58,310 --> 00:15:04,840
is an alarm rule saying that container P

00:15:00,800 --> 00:15:07,820
can access container file T but also the

00:15:04,840 --> 00:15:12,230
the least these two these set of

00:15:07,820 --> 00:15:17,300
categories are subset of the categories

00:15:12,230 --> 00:15:22,820
of the process so C 1 and C 2 can access

00:15:17,300 --> 00:15:24,590
c c1 and c2 object and also this file

00:15:22,820 --> 00:15:27,050
can use containers for the sharing

00:15:24,590 --> 00:15:28,670
because there is a there is no no more

00:15:27,050 --> 00:15:30,580
specific category which is again the

00:15:28,670 --> 00:15:34,480
subset and same story

00:15:30,580 --> 00:15:38,160
the second container which category C 2

00:15:34,480 --> 00:15:41,290
and C 3 so this is this is where how how

00:15:38,160 --> 00:15:45,880
containers can and share access to say

00:15:41,290 --> 00:15:47,920
die a same object on the system and this

00:15:45,880 --> 00:15:50,470
is the similar picture just showing that

00:15:47,920 --> 00:15:52,899
what is not allowed that container will

00:15:50,470 --> 00:15:55,839
read label content underscore TV like

00:15:52,899 --> 00:15:58,839
with category C 2 and C 3 cannot access

00:15:55,839 --> 00:16:02,890
object file with categories c1 and c2

00:15:58,839 --> 00:16:07,810
and same story for container with

00:16:02,890 --> 00:16:11,760
categories c1 and c2 so container and

00:16:07,810 --> 00:16:15,370
jeans like let's say what man can help a

00:16:11,760 --> 00:16:18,610
reliable have a reliable feature if you

00:16:15,370 --> 00:16:20,529
if you mounting for example we have an

00:16:18,610 --> 00:16:23,790
example here and after the mouth code

00:16:20,529 --> 00:16:27,010
you could sell it be happy to see that

00:16:23,790 --> 00:16:30,040
what will happen the the pot man will

00:16:27,010 --> 00:16:33,010
reliable the mouth panel on the audio

00:16:30,040 --> 00:16:35,380
file system as container underscore file

00:16:33,010 --> 00:16:38,500
underscore t but with a specific but

00:16:35,380 --> 00:16:40,990
with the specific categories which means

00:16:38,500 --> 00:16:45,100
that only this container can access the

00:16:40,990 --> 00:16:50,440
file on the on the host system

00:16:45,100 --> 00:16:53,050
next option is used small or and it

00:16:50,440 --> 00:16:57,640
means that put man will also reliable

00:16:53,050 --> 00:16:59,980
the the mouth on the fan system back it

00:16:57,640 --> 00:17:02,649
will label as container underscore file

00:16:59,980 --> 00:17:05,679
underscore t which means that both both

00:17:02,649 --> 00:17:08,410
containers executed in in in in second

00:17:05,679 --> 00:17:12,040
command and also in last command can can

00:17:08,410 --> 00:17:14,370
access with the object labeled as

00:17:12,040 --> 00:17:19,120
container underscore file underscore t

00:17:14,370 --> 00:17:20,919
on the system so what we have some

00:17:19,120 --> 00:17:24,220
problems with this of course because we

00:17:20,919 --> 00:17:26,919
are using just one a Salinas policy for

00:17:24,220 --> 00:17:29,320
for containers which is default the

00:17:26,919 --> 00:17:31,780
default label default IP is container

00:17:29,320 --> 00:17:34,240
underscore underscore T and in some

00:17:31,780 --> 00:17:37,780
situation this type is really strict

00:17:34,240 --> 00:17:39,910
for example federal silver-blue project

00:17:37,780 --> 00:17:43,330
needs containers to read write home

00:17:39,910 --> 00:17:46,270
directories and second

00:17:43,330 --> 00:17:48,310
second case is fluently project needs

00:17:46,270 --> 00:17:52,650
two containers to be able to read lock

00:17:48,310 --> 00:17:55,600
files in slash var slash log directory

00:17:52,650 --> 00:17:58,540
on the other hand we have situation when

00:17:55,600 --> 00:18:03,400
contain and escorted Ibis is too loose

00:17:58,540 --> 00:18:05,920
for for certain use cases which is know

00:18:03,400 --> 00:18:07,720
as which is no 'silly loops network

00:18:05,920 --> 00:18:12,070
controls it means that container

00:18:07,720 --> 00:18:16,180
container p can bind on any port any

00:18:12,070 --> 00:18:18,190
network port sorry and also there is no

00:18:16,180 --> 00:18:22,120
control on linux capabilities which

00:18:18,190 --> 00:18:26,770
means that a container team can use all

00:18:22,120 --> 00:18:28,600
the cap all Linux capabilities so what's

00:18:26,770 --> 00:18:31,360
the current current solution for these

00:18:28,600 --> 00:18:35,350
problems the first one is to use the

00:18:31,360 --> 00:18:37,270
reliability Chur for example if you want

00:18:35,350 --> 00:18:42,190
to start to Andy inside the container

00:18:37,270 --> 00:18:44,530
you can reliable slash var slash log to

00:18:42,190 --> 00:18:48,490
have liable container file underscore t

00:18:44,530 --> 00:18:51,540
with specific with specific categories

00:18:48,490 --> 00:18:55,420
which is of course the bad idea because

00:18:51,540 --> 00:18:58,210
VAR log directory gets content

00:18:55,420 --> 00:19:00,730
underscore file with with set of two

00:18:58,210 --> 00:19:03,190
categories and other confide tools no

00:19:00,730 --> 00:19:06,930
one will be able to access slash var

00:19:03,190 --> 00:19:11,170
slash log which is which is not good

00:19:06,930 --> 00:19:13,510
yeah and second solution is turn as

00:19:11,170 --> 00:19:16,540
Linux off for the container which is of

00:19:13,510 --> 00:19:19,170
course bad idea and my question is why

00:19:16,540 --> 00:19:22,170
this bad idea

00:19:19,170 --> 00:19:22,170
anything

00:19:24,570 --> 00:19:32,350
yeah and what does it mean what does it

00:19:27,070 --> 00:19:42,460
mean yes and there is one more important

00:19:32,350 --> 00:19:46,780
thing that will be said come on so and

00:19:42,460 --> 00:19:49,930
now I propose you another solution or

00:19:46,780 --> 00:19:51,910
another solutions can be right selinux

00:19:49,930 --> 00:19:53,800
policy for the content from scratch

00:19:51,910 --> 00:19:54,940
which is too difficult for system

00:19:53,800 --> 00:19:56,950
administrator because it's

00:19:54,940 --> 00:20:00,390
time-consuming and you need to and you

00:19:56,950 --> 00:20:02,740
need to have deep saline looks expertise

00:20:00,390 --> 00:20:05,560
second option is to add additional

00:20:02,740 --> 00:20:08,380
celebs rules to contain underscore t

00:20:05,560 --> 00:20:10,660
using the custom module which is still

00:20:08,380 --> 00:20:13,180
not ideal because you need to have these

00:20:10,660 --> 00:20:14,950
science expertise and all and these

00:20:13,180 --> 00:20:18,040
additional rules will apply for all

00:20:14,950 --> 00:20:21,580
containers which is things what what do

00:20:18,040 --> 00:20:23,830
you probably don't want so there was the

00:20:21,580 --> 00:20:26,650
request of creating this custom policies

00:20:23,830 --> 00:20:30,040
for the for the different team for their

00:20:26,650 --> 00:20:31,780
containers and the asuna news team and

00:20:30,040 --> 00:20:33,730
also the containers team had a lot of

00:20:31,780 --> 00:20:35,950
requests with please could you write a

00:20:33,730 --> 00:20:38,170
Solano's policy for our container

00:20:35,950 --> 00:20:40,360
because we need to access home

00:20:38,170 --> 00:20:43,660
directories same story for my work and

00:20:40,360 --> 00:20:46,090
as you know this is this is none this is

00:20:43,660 --> 00:20:49,960
not a long-term solution and it has some

00:20:46,090 --> 00:20:51,910
Linux team we realize that that we

00:20:49,960 --> 00:20:54,220
always do one policy and then there will

00:20:51,910 --> 00:20:57,520
be another team as for another policy so

00:20:54,220 --> 00:20:59,710
it's like we gave we give some team give

00:20:57,520 --> 00:21:01,690
some team just the fish and I like this

00:20:59,710 --> 00:21:03,160
saying that if you give a man a fish he

00:21:01,690 --> 00:21:05,680
is angry again in one hour

00:21:03,160 --> 00:21:09,970
if you teach him to catch a fish you

00:21:05,680 --> 00:21:12,610
don't him a good term so in a saline ops

00:21:09,970 --> 00:21:14,770
team we created to call pizza which is

00:21:12,610 --> 00:21:18,010
fishing road in my native language and

00:21:14,770 --> 00:21:20,980
slower so we really call it put it up

00:21:18,010 --> 00:21:22,810
and it's it's fishing her then right now

00:21:20,980 --> 00:21:25,030
I teach you how to how to use the

00:21:22,810 --> 00:21:28,960
fishing er to ride your own s Linux

00:21:25,030 --> 00:21:33,220
policy so we decide to for generating s

00:21:28,960 --> 00:21:35,650
anak security profiles for containers so

00:21:33,220 --> 00:21:36,059
we will have one really easy example we

00:21:35,650 --> 00:21:38,519
will have

00:21:36,059 --> 00:21:41,849
example container and this container is

00:21:38,519 --> 00:21:45,119
mounting a slash home with read and

00:21:41,849 --> 00:21:48,960
write permissions mounting / bar / pull

00:21:45,119 --> 00:21:54,570
for read-only and exposing FTP port TCP

00:21:48,960 --> 00:21:57,109
21 so general excellent general policy

00:21:54,570 --> 00:22:00,179
content underscore T cannot write as

00:21:57,109 --> 00:22:03,389
dimension and or all read for slash home

00:22:00,179 --> 00:22:06,119
and also cannot read / bar / book on the

00:22:03,389 --> 00:22:10,349
other hand the content underscore t can

00:22:06,119 --> 00:22:12,059
expose all the ports so what's

00:22:10,349 --> 00:22:25,979
generators the next policy for this

00:22:12,059 --> 00:22:29,429
container okay so we have a su Linux in

00:22:25,979 --> 00:22:32,279
enforcing just to be sure and I will

00:22:29,429 --> 00:22:34,909
start the first container mounting slash

00:22:32,279 --> 00:22:38,429
home with read write permissions and

00:22:34,909 --> 00:22:49,080
mounting / 1 / full wish with read-only

00:22:38,429 --> 00:22:51,570
and exposing port 21 okay so we are here

00:22:49,080 --> 00:22:53,219
on the right side we can check for the

00:22:51,570 --> 00:22:55,440
Esalen whose labor of the container

00:22:53,219 --> 00:22:58,950
which is container underscore t which is

00:22:55,440 --> 00:23:03,389
the generic type for containers and two

00:22:58,950 --> 00:23:05,519
categories and as I told you the

00:23:03,389 --> 00:23:10,229
container is called T cannot access

00:23:05,519 --> 00:23:15,839
cannot access a slash home and slash bar

00:23:10,229 --> 00:23:16,979
spool I will prove it to CD home LS

00:23:15,839 --> 00:23:21,059
permission denied

00:23:16,979 --> 00:23:21,989
as expected and slash var slash for LS

00:23:21,059 --> 00:23:25,469
permission denied

00:23:21,989 --> 00:23:28,080
as expected on the right side we see se

00:23:25,469 --> 00:23:30,869
search tool and try to query for allow

00:23:28,080 --> 00:23:32,969
rules when processing levels as

00:23:30,869 --> 00:23:36,539
component a and object is labeled as

00:23:32,969 --> 00:23:39,869
hormones Garuda 30 or wire underscore

00:23:36,539 --> 00:23:42,559
spoon P and there are no allowance on

00:23:39,869 --> 00:23:45,649
the other hand importantly

00:23:42,559 --> 00:23:50,059
see Allah rule is over that the

00:23:45,649 --> 00:23:55,639
container t can buy a bank on all port

00:23:50,059 --> 00:23:59,629
types so with pokémon PS we can check

00:23:55,639 --> 00:24:02,509
for container ID in future we need

00:23:59,629 --> 00:24:05,059
to use so I put it here to have complete

00:24:02,509 --> 00:24:07,759
demo and this is the most important

00:24:05,059 --> 00:24:10,039
command of this talk which is the pod

00:24:07,759 --> 00:24:12,830
man inspect - L which means which means

00:24:10,039 --> 00:24:17,179
the last container so the last container

00:24:12,830 --> 00:24:19,970
will be will be inspected and and who

00:24:17,179 --> 00:24:23,749
did settle create SEO Enix policy named

00:24:19,970 --> 00:24:28,429
my underscore container so I executed it

00:24:23,749 --> 00:24:33,919
and policy is created we need to do two

00:24:28,429 --> 00:24:36,440
things first one is about Millie modules

00:24:33,919 --> 00:24:39,080
and second bulk we need to restart the

00:24:36,440 --> 00:24:43,159
container with with another parameter

00:24:39,080 --> 00:24:46,249
which is the security label the label is

00:24:43,159 --> 00:24:48,950
my container process that will be

00:24:46,249 --> 00:24:53,059
labeled for container for running

00:24:48,950 --> 00:25:01,309
container so policy is loaded using the

00:24:53,059 --> 00:25:04,580
SE module - e okay I start the second

00:25:01,309 --> 00:25:07,490
container with the with the security

00:25:04,580 --> 00:25:10,549
label as I told you which is the my

00:25:07,490 --> 00:25:11,990
underscore container dot process again

00:25:10,549 --> 00:25:14,659
let's check for the label of the

00:25:11,990 --> 00:25:16,879
container and it's my container dot

00:25:14,659 --> 00:25:21,259
process instead of generic container

00:25:16,879 --> 00:25:25,429
underscore T so again let's check if I

00:25:21,259 --> 00:25:27,440
can access a slash home as you can see I

00:25:25,429 --> 00:25:30,519
can access it it was mounted as

00:25:27,440 --> 00:25:33,799
readwrite so for example let's touch

00:25:30,519 --> 00:25:36,919
this directory it's working and let's

00:25:33,799 --> 00:25:40,909
check access for our spool and again

00:25:36,919 --> 00:25:43,820
it's working on the right side again we

00:25:40,909 --> 00:25:46,730
see se search st search queries and we

00:25:43,820 --> 00:25:50,509
see that we have already existing allow

00:25:46,730 --> 00:25:52,600
rules loaded in the camera and then

00:25:50,509 --> 00:25:56,140
please also show that

00:25:52,600 --> 00:26:06,300
my container that process can bind only

00:25:56,140 --> 00:26:06,300
on FTP port D as you can see okay so

00:26:06,389 --> 00:26:12,639
that's what the demo so right now we

00:26:09,580 --> 00:26:16,690
generate s Linux policy and we can read

00:26:12,639 --> 00:26:19,450
and write to /home you we can read slash

00:26:16,690 --> 00:26:23,980
var slash Paul expose the FTP TCP port

00:26:19,450 --> 00:26:26,230
without writing any allow rule so happy

00:26:23,980 --> 00:26:29,070
works under the hood the concept is

00:26:26,230 --> 00:26:32,409
based on block inheritance seal language

00:26:29,070 --> 00:26:35,230
which I'll show you in X slide annalisa

00:26:32,409 --> 00:26:37,600
creates the policy combined is combined

00:26:35,230 --> 00:26:40,149
something what we call blocks or we can

00:26:37,600 --> 00:26:43,539
call it also templates by inspecting

00:26:40,149 --> 00:26:46,629
container JSON file and the Vedas are

00:26:43,539 --> 00:26:48,999
looking for mouth port and capabilities

00:26:46,629 --> 00:26:51,609
because as Dan mentioned what happened

00:26:48,999 --> 00:26:55,989
in Vegas it stays in Vegas so from from

00:26:51,609 --> 00:26:59,259
host we see container as as a block as a

00:26:55,989 --> 00:27:01,239
black box and we are care about we are

00:26:59,259 --> 00:27:04,749
care about just the interaction with

00:27:01,239 --> 00:27:07,570
container and the host system so all

00:27:04,749 --> 00:27:10,090
these all these allow rules are combined

00:27:07,570 --> 00:27:13,690
with a with a default template we call

00:27:10,090 --> 00:27:16,840
it base underscore container and it's

00:27:13,690 --> 00:27:20,980
required for for every is required for

00:27:16,840 --> 00:27:24,429
every policy based on visa generated

00:27:20,980 --> 00:27:27,970
policy so the first block is allowing

00:27:24,429 --> 00:27:31,210
read an exact slash user and read some

00:27:27,970 --> 00:27:35,289
configuration files then we need net

00:27:31,210 --> 00:27:42,460
container for lob network says lastly we

00:27:35,289 --> 00:27:45,700
need home for accessing home directories

00:27:42,460 --> 00:27:48,879
as I mentioned base is required for

00:27:45,700 --> 00:27:52,419
every container we need mint block for

00:27:48,879 --> 00:27:53,090
allowed by legal ftp port 21 and last

00:27:52,419 --> 00:27:57,230
one

00:27:53,090 --> 00:28:00,530
we read and write home dears

00:27:57,230 --> 00:28:03,800
that's that these are the blocks will

00:28:00,530 --> 00:28:06,080
village use and as you can see on the

00:28:03,800 --> 00:28:08,390
right side we inherit all the allow

00:28:06,080 --> 00:28:12,170
rules from these three blocks and build

00:28:08,390 --> 00:28:14,150
my underscore container policy but there

00:28:12,170 --> 00:28:17,000
is also one more block which is pool

00:28:14,150 --> 00:28:19,820
block we don't have any default block

00:28:17,000 --> 00:28:22,670
for / bar / spool and that's the reason

00:28:19,820 --> 00:28:24,770
why I used this path that if there is a

00:28:22,670 --> 00:28:28,790
situation when you lease at the Texas

00:28:24,770 --> 00:28:31,310
there is no default board with its app

00:28:28,790 --> 00:28:34,250
will check the s Linux database what

00:28:31,310 --> 00:28:36,680
what labels can be inside the inside the

00:28:34,250 --> 00:28:39,590
path in this situation this case it's /

00:28:36,680 --> 00:28:43,730
bar / spa and create all the allow rules

00:28:39,590 --> 00:28:50,870
for it and add it to my container my

00:28:43,730 --> 00:28:53,600
container block so this generated policy

00:28:50,870 --> 00:28:56,990
can be used with multiple content around

00:28:53,600 --> 00:28:59,390
times such as pot man docker build up

00:28:56,990 --> 00:29:04,810
and last but not least with the

00:28:59,390 --> 00:29:07,310
kubernetes so these are the hood itza

00:29:04,810 --> 00:29:09,350
repositories the first one that we have

00:29:07,310 --> 00:29:12,700
in our source is there and in second one

00:29:09,350 --> 00:29:15,290
there is a there is a proof-of-concept

00:29:12,700 --> 00:29:20,540
how these blocks work so if you are

00:29:15,290 --> 00:29:23,630
interested feel free to to read it also

00:29:20,540 --> 00:29:25,850
this is already available in federal

00:29:23,630 --> 00:29:28,180
repository so all you need to do is just

00:29:25,850 --> 00:29:30,860
then I've installed good itza and

00:29:28,180 --> 00:29:33,500
message of the day is that you can

00:29:30,860 --> 00:29:35,900
generate custom ethylene ops policy for

00:29:33,500 --> 00:29:41,110
your containers with one simple command

00:29:35,900 --> 00:29:41,110
called with itza which is fishing

00:29:43,770 --> 00:30:34,930
so yeah so you can actually see Lauren

00:30:31,930 --> 00:30:37,530
quad man this is where you want to look

00:30:34,930 --> 00:30:42,190
anybody's really interested in container

00:30:37,530 --> 00:30:53,830
selinux T is defined that's also a repo

00:30:42,190 --> 00:30:56,440
up there the stuff he's done this point

00:30:53,830 --> 00:31:01,900
we open it up into questions let's pick

00:30:56,440 --> 00:31:04,560
the yeah everybody thinks this

00:31:01,900 --> 00:31:04,560
is perfect

00:31:05,909 --> 00:31:14,019
bring up through the five-man

00:31:07,840 --> 00:32:03,809
perspective to show what's next what's

00:31:14,019 --> 00:32:03,809
next I think we're gonna have so I think

00:32:03,920 --> 00:32:15,129
[Music]

00:32:06,509 --> 00:32:17,649
so because I really need the fact right

00:32:15,129 --> 00:32:26,889
now I have to tell people to disable

00:32:17,649 --> 00:32:29,139
SELinux for that but let's remember

00:32:26,889 --> 00:32:36,690
anyone's seen inspector five minutes

00:32:29,139 --> 00:32:36,690
back so we want to show you what

00:32:39,749 --> 00:32:46,599
so in this is basically every other

00:32:43,210 --> 00:32:48,700
informations UI so here he here he's

00:32:46,599 --> 00:32:51,609
looking at the mouse and looking for

00:32:48,700 --> 00:32:52,929
what he knows what that fall outside but

00:32:51,609 --> 00:32:53,930
if he sees a buying not for the whole

00:32:52,929 --> 00:32:57,460
scene slash

00:32:53,930 --> 00:32:59,780
that's gonna trigger his home block

00:32:57,460 --> 00:33:02,660
these built-ins so he's not worried

00:32:59,780 --> 00:33:04,400
about those but it gets down to so he's

00:33:02,660 --> 00:33:11,450
only looking at by mouse could ask the

00:33:04,400 --> 00:33:13,630
capabilities otherwise select answer

00:33:11,450 --> 00:33:15,890
question why was so loose versus type

00:33:13,630 --> 00:33:17,660
some some ways with two types I'm

00:33:15,890 --> 00:33:20,000
waiting to lose the foot reason with

00:33:17,660 --> 00:33:22,520
loose line Network Facebook networks and

00:33:20,000 --> 00:33:24,200
capabilities is because people in the

00:33:22,520 --> 00:33:26,660
pod man commander the doctor come and

00:33:24,200 --> 00:33:28,250
get changed really easily which

00:33:26,660 --> 00:33:30,830
capabilities are available in container

00:33:28,250 --> 00:33:32,540
which ones I hacked and you can't touch

00:33:30,830 --> 00:33:53,180
the container types of us in the next

00:33:32,540 --> 00:33:57,910
types of sort of we don't know we have

00:33:53,180 --> 00:34:00,910
Billy loose the abilities we allow other

00:33:57,910 --> 00:34:00,910
possibilities

00:34:21,350 --> 00:34:24,460
[Music]

00:34:35,510 --> 00:34:42,210
all suppliers on my behalf but I think I

00:34:39,359 --> 00:34:57,119
hate to make part men like to really

00:34:42,210 --> 00:34:59,369
understand the sequence so in some cases

00:34:57,119 --> 00:35:00,869
in some cases I think the currency is

00:34:59,369 --> 00:35:04,170
better idea than doing this

00:35:00,869 --> 00:35:06,359
right so just because I why amount in by

00:35:04,170 --> 00:35:07,740
by a mountain slash home slash the wash

00:35:06,359 --> 00:35:10,500
slash pool bar

00:35:07,740 --> 00:35:13,440
I would rather than use the : z my guest

00:35:10,500 --> 00:35:16,680
this is more on a volume in huge file

00:35:13,440 --> 00:35:19,770
systems that I really affect selinux the

00:35:16,680 --> 00:35:21,180
fireman and the selinux golang libraries

00:35:19,770 --> 00:35:23,220
now will block you from

00:35:21,180 --> 00:35:25,680
relabeling slash home block you can

00:35:23,220 --> 00:35:27,510
relate some people put slash and that's

00:35:25,680 --> 00:35:30,299
we show them the break out if you do a

00:35:27,510 --> 00:35:32,400
pieman slash slash host and put a colon

00:35:30,299 --> 00:35:35,010
sienna bodman is going to try to read

00:35:32,400 --> 00:35:37,049
label the attack filesystem it's really

00:35:35,010 --> 00:35:39,660
easy to use this to make mistakes but in

00:35:37,049 --> 00:35:43,039
case you do a private directory really

00:35:39,660 --> 00:35:43,039
really should lock it down to

00:36:09,280 --> 00:36:51,230
so right now I be good for for any ideas

00:36:48,560 --> 00:36:54,940
we do we do deter so please feel free to

00:36:51,230 --> 00:36:58,480
to create some issue on github and

00:36:54,940 --> 00:36:58,480
little bit perfect

00:37:11,860 --> 00:37:17,840
yeah different if I understand your

00:37:16,490 --> 00:37:20,540
question you are asking if it's a good

00:37:17,840 --> 00:37:22,310
idea to just inspect the container and

00:37:20,540 --> 00:37:43,190
l.o everything goes in inside the

00:37:22,310 --> 00:37:44,840
container without the knowledge most of

00:37:43,190 --> 00:37:47,750
the other stuff that's in the inspection

00:37:44,840 --> 00:37:49,460
is not really post concepts that just

00:37:47,750 --> 00:37:53,150
most that stuff doesn't you know

00:37:49,460 --> 00:37:56,960
basically so if someone specified that

00:37:53,150 --> 00:37:58,250
the initial IP address is not going to

00:37:56,960 --> 00:37:59,930
be interesting but through it may be

00:37:58,250 --> 00:38:02,170
defined at this additional things I

00:37:59,930 --> 00:38:02,170
could

00:38:14,380 --> 00:38:24,200
whatever one definition yeah we built in

00:38:22,609 --> 00:38:29,920
the wiring for everybody to feel the

00:38:24,200 --> 00:38:35,210
lights down everybody does it

00:38:29,920 --> 00:38:38,580
and if the only problem is gonna be

00:38:35,210 --> 00:38:41,690
you'd have to use some kind of operator

00:38:38,580 --> 00:38:41,690
[Music]

00:38:59,870 --> 00:39:07,000
[Music]

00:39:02,710 --> 00:39:09,820
well I mean I will figure that example

00:39:07,000 --> 00:39:12,580
right now that's the Rhonda I'm confined

00:39:09,820 --> 00:39:13,450
by FC Linux now they write their own

00:39:12,580 --> 00:39:15,400
policy

00:39:13,450 --> 00:39:17,470
Billy easily than they know what they

00:39:15,400 --> 00:39:19,660
want and without them having to be

00:39:17,470 --> 00:39:20,890
SELinux experts it really all they say I

00:39:19,660 --> 00:39:23,740
want to read everything by block

00:39:20,890 --> 00:39:27,040
generating policies money now they did

00:39:23,740 --> 00:39:28,840
to take their policy to open I need

00:39:27,040 --> 00:39:32,260
this installed on all machines every

00:39:28,840 --> 00:39:36,010
little dip right in the in the example

00:39:32,260 --> 00:39:39,270
of the desktop so the blow they work on

00:39:36,010 --> 00:39:43,930
generated fought this policy and solid

00:39:39,270 --> 00:39:46,380
people running this over bloah being all

00:39:43,930 --> 00:39:46,380
toolbox

00:39:50,730 --> 00:39:56,830
all they care about is that /home

00:39:53,380 --> 00:39:59,940
directory

00:39:56,830 --> 00:39:59,940
[Music]

00:41:00,230 --> 00:41:05,190
sandbox applications are you the same

00:41:03,300 --> 00:41:09,920
person Firefox for disk operating

00:41:05,190 --> 00:41:09,920
systems it's different then so the

00:41:10,430 --> 00:41:18,480
particular but really watching you one

00:41:15,930 --> 00:41:20,960
Firefox eventually be isolated at home

00:41:18,480 --> 00:41:20,960
driver

00:41:22,380 --> 00:41:28,890
[Music]

00:41:25,200 --> 00:41:32,730
my fault not be able to to who say

00:41:28,890 --> 00:41:36,150
attack love notes process inside Firefox

00:41:32,730 --> 00:41:38,460
ability those mistakes and what the goal

00:41:36,150 --> 00:41:41,069
eventually it was black attack would be

00:41:38,460 --> 00:41:43,559
to have any time to do it

00:41:41,069 --> 00:41:45,240
obviously Firefox has to read stuff and

00:41:43,559 --> 00:41:49,859
my home directory once in a while I want

00:41:45,240 --> 00:41:52,260
to upload an image to the internet my

00:41:49,859 --> 00:41:54,150
home drive but usually that's been

00:41:52,260 --> 00:41:57,240
negated by a user right you're going to

00:41:54,150 --> 00:41:59,250
say save button say on save a file if

00:41:57,240 --> 00:42:02,730
you go to thee but it says open a file

00:41:59,250 --> 00:42:04,710
you want to open a file and what they're

00:42:02,730 --> 00:42:06,660
going to eventually do in the desktop

00:42:04,710 --> 00:42:09,450
let's tap down that thing that those

00:42:06,660 --> 00:42:12,690
files be a southern application and that

00:42:09,450 --> 00:42:14,819
by the Fire Lord will lead fire and

00:42:12,690 --> 00:42:27,450
basically you know open file descriptors

00:42:14,819 --> 00:42:29,579
some version of the script once we had

00:42:27,450 --> 00:42:36,890
that we could start to look at wrapping

00:42:29,579 --> 00:42:36,890
intensive linux but right now we're also

00:42:37,369 --> 00:42:40,670
saying box

00:42:41,880 --> 00:42:49,310
sandbox in that race team was closer to

00:42:44,880 --> 00:43:04,740
sort of a quiet and us nowadays for

00:42:49,310 --> 00:43:07,020
hopefully eventually anybody else and I

00:43:04,740 --> 00:43:11,880
accept a file we have where's the file

00:43:07,020 --> 00:43:14,940
exists the only place I could take

00:43:11,880 --> 00:43:16,200
container T it only executes files that

00:43:14,940 --> 00:43:19,440
are under these /user

00:43:16,200 --> 00:43:20,250
a lot every negative and that's just

00:43:19,440 --> 00:43:23,880
what you can find

00:43:20,250 --> 00:43:26,160
so you can do a dash B slash user heat

00:43:23,880 --> 00:43:27,869
race which is what I always do it was be

00:43:26,160 --> 00:43:29,609
tracing it this existence that in our

00:43:27,869 --> 00:43:31,880
container so if I want to use have been

00:43:29,609 --> 00:43:36,960
P trace into my container that's right

00:43:31,880 --> 00:43:45,180
running container basically things like

00:43:36,960 --> 00:43:49,640
that that's a little that use case we

00:43:45,180 --> 00:43:49,640
did we decided slash user pretty much

00:44:04,280 --> 00:44:07,459
[Music]

00:44:17,790 --> 00:44:24,659
you

00:44:18,620 --> 00:44:24,659

YouTube URL: https://www.youtube.com/watch?v=FOny29a31ls


