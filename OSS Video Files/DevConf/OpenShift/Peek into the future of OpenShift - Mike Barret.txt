Title: Peek into the future of OpenShift - Mike Barret
Publication date: 2016-02-12
Playlist: OpenShift
Description: 
	In this session Mike is going to show you what the future of OpenShift looks like.

Presentation: http://bit.ly/241i2Tr
Captions: 
	00:00:00,000 --> 00:00:04,470
go through what some of the main themes

00:00:02,399 --> 00:00:07,529
are that helped us really fund and and

00:00:04,470 --> 00:00:10,410
focus on openshift the first thing that

00:00:07,529 --> 00:00:12,000
really hid this entire industry was this

00:00:10,410 --> 00:00:13,740
DevOps thing going on and I'm not going

00:00:12,000 --> 00:00:16,049
to bore you with a speech on DevOps

00:00:13,740 --> 00:00:18,380
right now for me from a product point of

00:00:16,049 --> 00:00:20,699
view we're looking for a programmable

00:00:18,380 --> 00:00:22,650
boundary if you will that still

00:00:20,699 --> 00:00:27,240
facilitates peace between these two

00:00:22,650 --> 00:00:29,279
warring camps which if you will but when

00:00:27,240 --> 00:00:31,740
I see DevOps I think of a person firstly

00:00:29,279 --> 00:00:33,570
I think of a guy named Steve Hendrix it

00:00:31,740 --> 00:00:35,070
was in one of my development teams and

00:00:33,570 --> 00:00:37,469
whenever the build server would break

00:00:35,070 --> 00:00:39,149
down people would call Steve and Steve

00:00:37,469 --> 00:00:40,620
seem to know how to fix the build server

00:00:39,149 --> 00:00:43,170
for some reason he'd seem to know how to

00:00:40,620 --> 00:00:45,210
get to the servers how to login how to

00:00:43,170 --> 00:00:47,370
increase the memory heap size on

00:00:45,210 --> 00:00:48,989
applications and all this other stuff so

00:00:47,370 --> 00:00:51,270
this was a developer that knew a little

00:00:48,989 --> 00:00:54,270
bit about operations and that's what we

00:00:51,270 --> 00:00:56,070
want it that's what really moving

00:00:54,270 --> 00:00:58,410
forward as an industry we want our

00:00:56,070 --> 00:01:00,449
engineers to be able to do to sort of

00:00:58,410 --> 00:01:01,800
blend between these two worlds and we're

00:01:00,449 --> 00:01:05,729
looking for a product that helps

00:01:01,800 --> 00:01:08,220
establish that boundary and helps the

00:01:05,729 --> 00:01:10,590
next theme was this at this willingness

00:01:08,220 --> 00:01:14,400
to give developers the king to the

00:01:10,590 --> 00:01:16,080
castle the keys to the castle you know

00:01:14,400 --> 00:01:19,049
it started probably I'd say four years

00:01:16,080 --> 00:01:21,090
ago where we as an industry would allow

00:01:19,049 --> 00:01:23,610
more risk and what we were pushing to

00:01:21,090 --> 00:01:25,680
production because the the markets were

00:01:23,610 --> 00:01:27,689
moving so quickly a round software

00:01:25,680 --> 00:01:30,180
around features around touch points with

00:01:27,689 --> 00:01:33,329
customers around CRM systems around

00:01:30,180 --> 00:01:34,740
analytics and we wanted to capitalize on

00:01:33,329 --> 00:01:37,020
that we want to bring our own business

00:01:34,740 --> 00:01:38,430
and our own opportunity into that and so

00:01:37,020 --> 00:01:40,290
we're looking for ways to allow

00:01:38,430 --> 00:01:43,020
developers to bring koecher production a

00:01:40,290 --> 00:01:45,630
lot faster and this this became more of

00:01:43,020 --> 00:01:48,750
a mantra that that we had in the

00:01:45,630 --> 00:01:51,570
department's software is eating the

00:01:48,750 --> 00:01:53,520
world we hear this one quite a bit you

00:01:51,570 --> 00:01:54,750
know if you take a step back there's a

00:01:53,520 --> 00:01:56,969
lot of companies that weren't

00:01:54,750 --> 00:01:59,880
traditionally software companies look at

00:01:56,969 --> 00:02:01,300
GE if GE was to rebrand itself as a

00:01:59,880 --> 00:02:03,010
software company would be

00:02:01,300 --> 00:02:05,260
and largest software company in the

00:02:03,010 --> 00:02:07,600
world there's a lot of people producing

00:02:05,260 --> 00:02:09,330
software and it's because of a lot of

00:02:07,600 --> 00:02:12,760
things it's because of a peer-to-peer

00:02:09,330 --> 00:02:15,160
economy it's because of just where we

00:02:12,760 --> 00:02:18,340
have evolved to in global markets it's

00:02:15,160 --> 00:02:19,510
it's where we have our mobile devices

00:02:18,340 --> 00:02:22,330
and we want to bring that into our

00:02:19,510 --> 00:02:24,100
business world it's just the bleeding of

00:02:22,330 --> 00:02:26,290
all these technologies and software is

00:02:24,100 --> 00:02:28,000
becoming something that we can really

00:02:26,290 --> 00:02:30,010
protect ourselves and disrupt other

00:02:28,000 --> 00:02:31,990
markets completely turn them on their

00:02:30,010 --> 00:02:34,540
head not only can we disrupt them

00:02:31,990 --> 00:02:36,520
directly in competition but we can put

00:02:34,540 --> 00:02:39,580
something new into the pool and have a

00:02:36,520 --> 00:02:41,680
ripple cause effects look at chewing gum

00:02:39,580 --> 00:02:44,380
sales of all things right very very

00:02:41,680 --> 00:02:46,780
classic example of a commodity product

00:02:44,380 --> 00:02:48,340
that you buy at the shop encounter when

00:02:46,780 --> 00:02:50,350
you're sitting there waiting for your

00:02:48,340 --> 00:02:52,150
checkouts now people are staring at

00:02:50,350 --> 00:02:53,830
their mobile phones and they're not

00:02:52,150 --> 00:02:55,690
looking up at the shelf at this chewing

00:02:53,830 --> 00:02:58,840
gum and chewing gum sales go down so

00:02:55,690 --> 00:02:59,590
there is software rippling affecting

00:02:58,840 --> 00:03:01,870
into something that was completely

00:02:59,590 --> 00:03:05,200
unrelated and nobody thought there would

00:03:01,870 --> 00:03:06,790
be in effect a lot of grandiose

00:03:05,200 --> 00:03:10,180
statements in those last three slides

00:03:06,790 --> 00:03:12,520
right so I'm more practical immortal

00:03:10,180 --> 00:03:15,280
Darwin believer I think things evolve

00:03:12,520 --> 00:03:18,970
over time and in my career I've seen a

00:03:15,280 --> 00:03:25,600
lot of these things evolved who knows

00:03:18,970 --> 00:03:27,160
what a encapsulated root disk is all

00:03:25,600 --> 00:03:33,610
right anybody ever have to break a

00:03:27,160 --> 00:03:35,980
mirror on a cluster no so there's a when

00:03:33,610 --> 00:03:38,170
I started in my career there was a lot

00:03:35,980 --> 00:03:40,300
of legacy vertical stacks and what we

00:03:38,170 --> 00:03:41,950
did is we we applied high availability

00:03:40,300 --> 00:03:44,050
to them the applications themselves

00:03:41,950 --> 00:03:46,030
didn't have to have those qualities and

00:03:44,050 --> 00:03:48,459
there were a lot of tricks and software

00:03:46,030 --> 00:03:52,380
around that how about y2k did anybody

00:03:48,459 --> 00:03:55,260
have to work midnight a wipe 2k no

00:03:52,380 --> 00:03:58,209
nobody had to sit there and help people

00:03:55,260 --> 00:04:01,720
so the biggest thing with in operations

00:03:58,209 --> 00:04:03,880
with y2k wasn't the fact that we had to

00:04:01,720 --> 00:04:05,860
install some lipsy patches and some

00:04:03,880 --> 00:04:08,410
chrome patches it was the fact that we

00:04:05,860 --> 00:04:10,930
had to bring systems down that had been

00:04:08,410 --> 00:04:12,270
up for the last you know five years and

00:04:10,930 --> 00:04:14,160
this was the first time they were being

00:04:12,270 --> 00:04:16,950
booted so about eighty percent of the

00:04:14,160 --> 00:04:19,080
time they didn't come back up and so you

00:04:16,950 --> 00:04:20,670
had to become an OS whisperer and go and

00:04:19,080 --> 00:04:22,920
debug while I the thing didn't start

00:04:20,670 --> 00:04:24,870
back up and this was again this was

00:04:22,920 --> 00:04:26,580
because applications weren't standing

00:04:24,870 --> 00:04:29,100
they weren't horizontal you know they

00:04:26,580 --> 00:04:31,170
just didn't have these driving factors

00:04:29,100 --> 00:04:33,930
then we had a lot of big iron and

00:04:31,170 --> 00:04:35,820
suddenly being consolidated and thrown

00:04:33,930 --> 00:04:38,790
away I remember sitting in a management

00:04:35,820 --> 00:04:40,610
meeting and we figured out that our

00:04:38,790 --> 00:04:45,060
product that the time could be unplugged

00:04:40,610 --> 00:04:46,800
was a large server not even used and you

00:04:45,060 --> 00:04:48,810
would save money by just having it sit

00:04:46,800 --> 00:04:51,360
there because it was cheaper to buy a

00:04:48,810 --> 00:04:53,160
bunch of servers and just throw them

00:04:51,360 --> 00:04:55,410
away when they broke just literally not

00:04:53,160 --> 00:04:57,870
even try to fix them just as throw them

00:04:55,410 --> 00:05:00,770
away and this was this new era coming in

00:04:57,870 --> 00:05:02,850
and then we hit this large distributed

00:05:00,770 --> 00:05:04,860
system clusters I you know I remember

00:05:02,850 --> 00:05:07,050
there was a big one going in Texas there

00:05:04,860 --> 00:05:09,390
was a big one going on Alaska and one in

00:05:07,050 --> 00:05:12,390
China and they were so big that they

00:05:09,390 --> 00:05:14,310
were taking over Intel's ability to ship

00:05:12,390 --> 00:05:16,200
servers just these three locations on

00:05:14,310 --> 00:05:19,380
planet earth that were buying that many

00:05:16,200 --> 00:05:22,350
servers at the time this again we needed

00:05:19,380 --> 00:05:24,960
this this evolution of the programming

00:05:22,350 --> 00:05:26,580
and for those particular applications at

00:05:24,960 --> 00:05:28,500
this time we were also collecting data

00:05:26,580 --> 00:05:30,780
you know people were sitting in front of

00:05:28,500 --> 00:05:33,360
computers and forms of putting data into

00:05:30,780 --> 00:05:36,300
computers and not necessarily doing the

00:05:33,360 --> 00:05:38,310
big data analytics side of things in the

00:05:36,300 --> 00:05:40,680
next one we moved into virtualization

00:05:38,310 --> 00:05:42,060
right and for me the first

00:05:40,680 --> 00:05:44,430
virtualization ahit was actually the

00:05:42,060 --> 00:05:47,310
colonel virtualization with containers

00:05:44,430 --> 00:05:50,370
and I flew all over the world and I

00:05:47,310 --> 00:05:53,940
helped people put their single kernel

00:05:50,370 --> 00:05:57,870
until many virtual calkins owns at the

00:05:53,940 --> 00:05:59,640
time but later in that same span five

00:05:57,870 --> 00:06:01,350
years later I went back to the same

00:05:59,640 --> 00:06:04,580
customers and I move them to a hardware

00:06:01,350 --> 00:06:07,580
hypervisor I moved them to yo and XDM

00:06:04,580 --> 00:06:09,919
area kdn

00:06:07,580 --> 00:06:12,650
PSX implementation because the

00:06:09,919 --> 00:06:15,319
applications themselves were not capable

00:06:12,650 --> 00:06:18,139
enough to span and have all your eggs in

00:06:15,319 --> 00:06:21,729
one basket on one kernel you know DRS

00:06:18,139 --> 00:06:24,229
got popular by was in Canary Wharf and a

00:06:21,729 --> 00:06:25,969
customer was manipulating the financial

00:06:24,229 --> 00:06:29,180
market by bringing in a lot of resources

00:06:25,969 --> 00:06:31,460
at different times in the market another

00:06:29,180 --> 00:06:33,050
good use in that grid age and then we

00:06:31,460 --> 00:06:34,370
went into converged infrastructure and

00:06:33,050 --> 00:06:36,699
software to find everything in

00:06:34,370 --> 00:06:38,780
assemblies and big data and at this time

00:06:36,699 --> 00:06:40,969
everything else is happening right we

00:06:38,780 --> 00:06:43,879
have source code programs we had the

00:06:40,969 --> 00:06:45,889
move from an to maven the XML explosion

00:06:43,879 --> 00:06:47,569
the infrastructure is code although

00:06:45,889 --> 00:06:49,099
runtime and programming languages so

00:06:47,569 --> 00:06:51,530
everything is evolving everything's

00:06:49,099 --> 00:06:55,430
taking advantage of lessons learned in

00:06:51,530 --> 00:06:58,340
the previous time frames and the result

00:06:55,430 --> 00:07:01,610
of what we have right now that red hat

00:06:58,340 --> 00:07:04,159
is an ability to really accelerate this

00:07:01,610 --> 00:07:06,469
next-generation architecture that was

00:07:04,159 --> 00:07:09,199
born from all those lessons learned at

00:07:06,469 --> 00:07:10,939
any point in our stack you can come in

00:07:09,199 --> 00:07:14,300
and you can consume there's nothing else

00:07:10,939 --> 00:07:15,949
that's blocking you from just using you

00:07:14,300 --> 00:07:17,659
know the Cooper Nettie's and the doctor

00:07:15,949 --> 00:07:20,150
implementation instead of getting into

00:07:17,659 --> 00:07:21,590
our build management services there's

00:07:20,150 --> 00:07:24,139
nothing stopping you from using just

00:07:21,590 --> 00:07:26,419
enough operating system and not in maybe

00:07:24,139 --> 00:07:28,250
using somebody elses or frustration so

00:07:26,419 --> 00:07:29,690
there's a lot of pieces that you can

00:07:28,250 --> 00:07:31,789
take advantage of when you look at this

00:07:29,690 --> 00:07:33,860
slide there's literally there's probably

00:07:31,789 --> 00:07:36,409
30 startups that we compete against in

00:07:33,860 --> 00:07:39,110
this this is just a very hot market

00:07:36,409 --> 00:07:41,210
right now and red hat is offering this

00:07:39,110 --> 00:07:45,169
to you over the counter and a nice

00:07:41,210 --> 00:07:47,150
package so let's topshop let's zoom in a

00:07:45,169 --> 00:07:52,190
little bit further and see where we are

00:07:47,150 --> 00:07:54,169
this is the 2016 here this is right

00:07:52,190 --> 00:07:56,360
around februari but at the end of

00:07:54,169 --> 00:07:58,789
January we have pretty big release and

00:07:56,360 --> 00:08:01,009
every this amano scaling we make sure we

00:07:58,789 --> 00:08:03,529
were qualified to run on our just enough

00:08:01,009 --> 00:08:05,629
operating system or atomic Coast we got

00:08:03,529 --> 00:08:08,150
in some dynamic provisioning of storage

00:08:05,629 --> 00:08:10,190
in that time frame we also revamped our

00:08:08,150 --> 00:08:11,700
dedicated offering which now runs on

00:08:10,190 --> 00:08:15,450
google cloud and

00:08:11,700 --> 00:08:17,430
cloud for anybody interested in that but

00:08:15,450 --> 00:08:19,890
right now in February we're spending a

00:08:17,430 --> 00:08:21,810
lot of attention on our multi user or

00:08:19,890 --> 00:08:24,000
credit card purchase environment called

00:08:21,810 --> 00:08:26,280
openshift com this is when you login as

00:08:24,000 --> 00:08:28,710
an individual or corporation want to be

00:08:26,280 --> 00:08:31,170
billed hourly based on a monthly credit

00:08:28,710 --> 00:08:32,910
card bill so we recording in a lot of

00:08:31,170 --> 00:08:34,470
features right now we're going to coach

00:08:32,910 --> 00:08:36,090
freeze that I would have lots of fade up

00:08:34,470 --> 00:08:38,430
on that right now it's on the verge of

00:08:36,090 --> 00:08:41,100
25 form will move its version 3 in sort

00:08:38,430 --> 00:08:42,630
of data and that March time frame then

00:08:41,100 --> 00:08:44,520
we'll take a cut of that code and we'll

00:08:42,630 --> 00:08:47,520
ship it into the data centers and we'll

00:08:44,520 --> 00:08:50,340
call it opens shuts version 3 dot to

00:08:47,520 --> 00:08:53,160
also comic platform comes out the same

00:08:50,340 --> 00:08:54,810
time and then we'll move into our summit

00:08:53,160 --> 00:08:57,150
releases witches are typically our

00:08:54,810 --> 00:08:59,250
biggest release of the year and we'll go

00:08:57,150 --> 00:09:00,630
through those features X on the feature

00:08:59,250 --> 00:09:03,330
we're also going to introduce a

00:09:00,630 --> 00:09:06,300
standalone registry at docker registry

00:09:03,330 --> 00:09:08,670
for customers that are just consumed

00:09:06,300 --> 00:09:12,510
from the registry and talking from their

00:09:08,670 --> 00:09:13,950
laptops with the doctor dinner so when

00:09:12,510 --> 00:09:15,990
you look at that slide a lot of things

00:09:13,950 --> 00:09:17,760
all you have to remember is that you

00:09:15,990 --> 00:09:19,170
know there's an important data around

00:09:17,760 --> 00:09:21,000
april and there's an important date

00:09:19,170 --> 00:09:23,460
around june and since i'm a product

00:09:21,000 --> 00:09:25,080
manager we kind of like to just use the

00:09:23,460 --> 00:09:27,810
first half in second half in case we

00:09:25,080 --> 00:09:31,980
miss dates so let's just go first half

00:09:27,810 --> 00:09:33,930
in second half there's a couple primary

00:09:31,980 --> 00:09:35,460
things you know we're very focused on

00:09:33,930 --> 00:09:37,200
developer experience that's what you see

00:09:35,460 --> 00:09:39,330
in the blue we always want to make sure

00:09:37,200 --> 00:09:41,340
that we're catering the services when

00:09:39,330 --> 00:09:43,290
you see the red the yellow is really the

00:09:41,340 --> 00:09:45,540
container into the doctor layers and the

00:09:43,290 --> 00:09:47,960
green or the core pieces of the product

00:09:45,540 --> 00:09:52,200
and though go through each one of those

00:09:47,960 --> 00:09:55,860
so has anybody used our product in 313

00:09:52,200 --> 00:09:57,330
dot one dot one great so we just

00:09:55,860 --> 00:09:59,490
released three dot one dot one and we

00:09:57,330 --> 00:10:01,620
added even more functionality into the

00:09:59,490 --> 00:10:04,560
user interface you know when you when

00:10:01,620 --> 00:10:06,450
you do a revamp like we did with the

00:10:04,560 --> 00:10:08,400
three dot x product moving from the two

00:10:06,450 --> 00:10:09,900
dot x product it takes a little time to

00:10:08,400 --> 00:10:12,570
bring the user interface a browser

00:10:09,900 --> 00:10:15,900
specifically user interface up to par

00:10:12,570 --> 00:10:17,160
and this three dot 11 really brought it

00:10:15,900 --> 00:10:19,410
up the part you have a really nice

00:10:17,160 --> 00:10:20,780
experience and seeing everything you

00:10:19,410 --> 00:10:22,670
want to see how

00:10:20,780 --> 00:10:24,140
a user of the platform we're going to

00:10:22,670 --> 00:10:25,910
continue to build on that we're going to

00:10:24,140 --> 00:10:27,890
allow you to load the templates instead

00:10:25,910 --> 00:10:29,630
just loading images we're going to allow

00:10:27,890 --> 00:10:32,720
you to edit these templates we're going

00:10:29,630 --> 00:10:34,250
to allow you to display a lot of

00:10:32,720 --> 00:10:36,290
information about persistent storage

00:10:34,250 --> 00:10:38,570
volumes this is all being worked on

00:10:36,290 --> 00:10:39,890
right now in the user interface team we

00:10:38,570 --> 00:10:41,450
also have a concept called service

00:10:39,890 --> 00:10:44,750
linking which I'll talk about when we

00:10:41,450 --> 00:10:46,700
get into the Q&A section with the

00:10:44,750 --> 00:10:48,050
developer experience probably the

00:10:46,700 --> 00:10:50,420
biggest lesson we've learned since we

00:10:48,050 --> 00:10:53,660
ship the product as we start really

00:10:50,420 --> 00:10:55,910
penetrating into large development teams

00:10:53,660 --> 00:10:58,040
they all carry with them large

00:10:55,910 --> 00:11:00,590
investments in life cycle tooling

00:10:58,040 --> 00:11:02,960
whether that be you know their github

00:11:00,590 --> 00:11:05,450
subversion team quest side of that story

00:11:02,960 --> 00:11:08,750
or that's the Jenkins bamboo Alaskan

00:11:05,450 --> 00:11:10,940
type conversation or maybe it's their

00:11:08,750 --> 00:11:13,550
do-it-yourself type thing that they've

00:11:10,940 --> 00:11:16,730
grown up over the years of pushing

00:11:13,550 --> 00:11:19,760
software out but every customer ID say

00:11:16,730 --> 00:11:21,980
if I talk to 10 customers I'll get three

00:11:19,760 --> 00:11:24,740
different integration situations that

00:11:21,980 --> 00:11:26,630
they want some people want to consume

00:11:24,740 --> 00:11:28,580
docker file some people want to consume

00:11:26,630 --> 00:11:31,520
source code some people want to consume

00:11:28,580 --> 00:11:34,130
a Warren jars still as they move across

00:11:31,520 --> 00:11:35,750
these life cycles and we we needed to

00:11:34,130 --> 00:11:38,830
really look at the product and become

00:11:35,750 --> 00:11:41,720
very versatile on our integration points

00:11:38,830 --> 00:11:44,600
so what we're working on right now is to

00:11:41,720 --> 00:11:46,550
illustrate that to the developer so when

00:11:44,600 --> 00:11:47,860
you log in and you see your projects

00:11:46,550 --> 00:11:50,780
page and you see all your applications

00:11:47,860 --> 00:11:53,120
we're adding a visualization that helps

00:11:50,780 --> 00:11:55,640
you see the logical groups that you've

00:11:53,120 --> 00:11:58,760
called your life cycle dev you a t-test

00:11:55,640 --> 00:12:00,710
prod and to have different integration

00:11:58,760 --> 00:12:02,720
points maybe you pull from Jenkins in

00:12:00,710 --> 00:12:05,180
one maybe you do a build a source to

00:12:02,720 --> 00:12:07,460
build and another maybe you pull from an

00:12:05,180 --> 00:12:09,710
artifact turi and the last one this

00:12:07,460 --> 00:12:11,270
should all be displayed for you and you

00:12:09,710 --> 00:12:12,980
should have different intersection

00:12:11,270 --> 00:12:15,790
points that's a short term we're going

00:12:12,980 --> 00:12:18,320
to hit that this year the second one is

00:12:15,790 --> 00:12:20,120
after you do all that work it'd be nice

00:12:18,320 --> 00:12:22,280
to step back and call that alphaville

00:12:20,120 --> 00:12:25,040
right and then a month later when I

00:12:22,280 --> 00:12:26,540
bring up another team till or she will

00:12:25,040 --> 00:12:28,340
just select that alpha build and that

00:12:26,540 --> 00:12:30,320
means they'll be for life cycles it'll

00:12:28,340 --> 00:12:32,120
be jinked at the beginning source to

00:12:30,320 --> 00:12:33,010
image in the middle so you'll start to

00:12:32,120 --> 00:12:38,350
be able to play with that

00:12:33,010 --> 00:12:41,050
a lot of features around building like I

00:12:38,350 --> 00:12:42,490
said people want to sometimes not give

00:12:41,050 --> 00:12:44,860
us source code sometimes they want to

00:12:42,490 --> 00:12:47,410
give us those binary pushes so we're

00:12:44,860 --> 00:12:48,910
really working in those areas when you

00:12:47,410 --> 00:12:51,550
start getting it to build services

00:12:48,910 --> 00:12:53,230
there's a lot of pre and post build

00:12:51,550 --> 00:12:55,150
actions that you can take and we want to

00:12:53,230 --> 00:12:57,580
make sure with Jenkins in particular

00:12:55,150 --> 00:12:59,440
that we ship with modules for Jenkins

00:12:57,580 --> 00:13:01,540
where you can select them they have open

00:12:59,440 --> 00:13:03,750
ship in the name and they they make that

00:13:01,540 --> 00:13:08,020
connection back to us pretty fluently

00:13:03,750 --> 00:13:10,420
making Jenkins s qi compatible with all

00:13:08,020 --> 00:13:13,300
the runtimes that we offer putting more

00:13:10,420 --> 00:13:15,220
XML stanzas and json stanzas into the

00:13:13,300 --> 00:13:18,040
template so you know what you're looking

00:13:15,220 --> 00:13:20,710
at so you know what you're doing right

00:13:18,040 --> 00:13:22,660
now when we filled will push that that

00:13:20,710 --> 00:13:25,720
same image that had some of the

00:13:22,660 --> 00:13:27,640
artifacts in it left into production

00:13:25,720 --> 00:13:30,660
people want us to separate those two out

00:13:27,640 --> 00:13:34,150
so that's another thing that's happening

00:13:30,660 --> 00:13:35,470
another one here is with when you give

00:13:34,150 --> 00:13:39,610
your credentials to something like

00:13:35,470 --> 00:13:41,550
github or or other services you want to

00:13:39,610 --> 00:13:43,750
encrypt that you want to use the secret

00:13:41,550 --> 00:13:45,310
framework that's in Coober Nettie's and

00:13:43,750 --> 00:13:48,010
we're not doing that today on the build

00:13:45,310 --> 00:13:51,940
pods so we want to bring that into the

00:13:48,010 --> 00:13:53,680
product when you talk about a developer

00:13:51,940 --> 00:13:56,530
the developer typically want to have

00:13:53,680 --> 00:14:00,100
some experience local to him or herself

00:13:56,530 --> 00:14:02,290
on their laptop and so we have the cdk

00:14:00,100 --> 00:14:05,260
the container development kit coming out

00:14:02,290 --> 00:14:07,570
in 2016 right now it's in beta so we'll

00:14:05,260 --> 00:14:10,300
come out of beta this allows you to

00:14:07,570 --> 00:14:13,540
bring up a bundle that offers you on a

00:14:10,300 --> 00:14:16,210
Windows or a Mac a very clean start up

00:14:13,540 --> 00:14:17,530
of a docker image that brings up open

00:14:16,210 --> 00:14:20,230
ship that allows you to work with

00:14:17,530 --> 00:14:22,840
templates that connects directly to

00:14:20,230 --> 00:14:25,090
eclipse for both the dockerfile and the

00:14:22,840 --> 00:14:27,190
templates so this is a great user

00:14:25,090 --> 00:14:31,300
experience for a single person that

00:14:27,190 --> 00:14:32,770
wants to test her coat out so let's get

00:14:31,300 --> 00:14:34,450
into some of these application services

00:14:32,770 --> 00:14:36,580
as you know we have the bulk of the

00:14:34,450 --> 00:14:38,440
jboss middleware park line on the

00:14:36,580 --> 00:14:40,570
platform today this is a great

00:14:38,440 --> 00:14:41,860
competitive advantage in our market

00:14:40,570 --> 00:14:44,530
because we can really produce some

00:14:41,860 --> 00:14:45,529
really complex applications what's

00:14:44,530 --> 00:14:47,870
coming in in 20

00:14:45,529 --> 00:14:50,060
teen is the mobile application the first

00:14:47,870 --> 00:14:52,579
part of that integration is to simply

00:14:50,060 --> 00:14:54,439
run the nodejs and the Redis components

00:14:52,579 --> 00:14:56,420
of those applications out on openshift

00:14:54,439 --> 00:14:58,910
and then you'll still turn out to the

00:14:56,420 --> 00:15:01,129
public cloud or feed Henry acquisition

00:14:58,910 --> 00:15:03,980
and interact with it from that point of

00:15:01,129 --> 00:15:05,959
view then later in that 2016 year will

00:15:03,980 --> 00:15:08,509
integrate more extensively with the user

00:15:05,959 --> 00:15:11,180
experience and consoles and will bring

00:15:08,509 --> 00:15:13,579
it into the on-premise product AAP has a

00:15:11,180 --> 00:15:16,610
pretty big release coming up these next

00:15:13,579 --> 00:15:18,589
the last one in this API men are really

00:15:16,610 --> 00:15:19,910
exciting so as we have a lot of

00:15:18,589 --> 00:15:21,889
customers getting more and more into

00:15:19,910 --> 00:15:24,470
microservices more and more of them find

00:15:21,889 --> 00:15:26,509
and need to authenticate ap is to manage

00:15:24,470 --> 00:15:29,089
AP is and a more sophisticated manner

00:15:26,509 --> 00:15:31,009
than what the product provides reading

00:15:29,089 --> 00:15:32,300
API man onto the platform and offering

00:15:31,009 --> 00:15:35,120
it as a service that runs on the

00:15:32,300 --> 00:15:37,939
platform for people developing it's just

00:15:35,120 --> 00:15:40,129
a fluent it's what you need to really

00:15:37,939 --> 00:15:42,170
exist in the micro services grow at the

00:15:40,129 --> 00:15:44,420
same time this has always been a foreign

00:15:42,170 --> 00:15:46,519
in a lot of people sides how do I stand

00:15:44,420 --> 00:15:48,379
up an application and then offer

00:15:46,519 --> 00:15:50,209
authentication for the application that

00:15:48,379 --> 00:15:53,209
I stood up as a developer bringing key

00:15:50,209 --> 00:15:56,059
cloak and it's very easy ap is for

00:15:53,209 --> 00:15:57,769
developers you can rapidly allow them to

00:15:56,059 --> 00:15:59,269
bring a single sign-on solution that

00:15:57,769 --> 00:16:02,509
integrates with the corporate identity

00:15:59,269 --> 00:16:05,449
management software collections is how

00:16:02,509 --> 00:16:07,699
we get our software or runtimes our

00:16:05,449 --> 00:16:10,279
application frameworks and we do it this

00:16:07,699 --> 00:16:13,970
way because it allows our platform as a

00:16:10,279 --> 00:16:16,939
service to fully support everything that

00:16:13,970 --> 00:16:19,339
we offer so a lot of the competitors in

00:16:16,939 --> 00:16:21,470
this market will support maybe you know

00:16:19,339 --> 00:16:23,480
for runtimes an application frameworks

00:16:21,470 --> 00:16:25,069
but then it will show you a list of 20

00:16:23,480 --> 00:16:26,930
and they'll ask you to go out to those

00:16:25,069 --> 00:16:28,939
open source communities and maintain

00:16:26,930 --> 00:16:32,329
them and keep them up to date we offer

00:16:28,939 --> 00:16:35,089
quite a breadth of application run times

00:16:32,329 --> 00:16:36,559
and frame arts and this is a huge

00:16:35,089 --> 00:16:37,520
competitive advantage as we can offer

00:16:36,559 --> 00:16:39,920
see bees

00:16:37,520 --> 00:16:43,100
more fluent way when you look at how

00:16:39,920 --> 00:16:45,170
we're offering updates it's very easy

00:16:43,100 --> 00:16:48,830
for the platform to know what's deployed

00:16:45,170 --> 00:16:50,450
we're so in yummm days you would have a

00:16:48,830 --> 00:16:51,980
young server you would go and push out

00:16:50,450 --> 00:16:54,440
your yum and you'd have to make sure

00:16:51,980 --> 00:16:57,500
that your application instances could

00:16:54,440 --> 00:16:59,120
tolerate one of them being down now the

00:16:57,500 --> 00:17:01,610
platform takes care of this for you so

00:16:59,120 --> 00:17:04,430
when you have a new update when Red Hat

00:17:01,610 --> 00:17:06,470
comes up with a new know Jas image maybe

00:17:04,430 --> 00:17:08,390
there's a security fix in it you put

00:17:06,470 --> 00:17:10,490
that image into the internal registry

00:17:08,390 --> 00:17:12,650
there's policies that you manage you can

00:17:10,490 --> 00:17:14,810
turn them on or off but what we'll do is

00:17:12,650 --> 00:17:16,400
we'll figure out where no Jas is

00:17:14,810 --> 00:17:18,380
deployed and we'll go ahead and we'll

00:17:16,400 --> 00:17:20,030
roll it out in a rolling manner for all

00:17:18,380 --> 00:17:22,250
those applications doing Canaries and

00:17:20,030 --> 00:17:24,770
then if that deployment config fails

00:17:22,250 --> 00:17:26,600
bring it back up now you can vary

00:17:24,770 --> 00:17:28,100
granularly decide you don't want to do

00:17:26,600 --> 00:17:29,900
that or not it's the same trigger

00:17:28,100 --> 00:17:31,820
function that we're using for developers

00:17:29,900 --> 00:17:33,890
code so when a developer has a code

00:17:31,820 --> 00:17:35,810
commit and it goes back to build a new

00:17:33,890 --> 00:17:37,730
image a new layer and it pushes that out

00:17:35,810 --> 00:17:39,020
it's the same trigger the same concept

00:17:37,730 --> 00:17:41,300
that we're using we're just reusing it

00:17:39,020 --> 00:17:44,270
in operations use case in this this

00:17:41,300 --> 00:17:45,620
manner so those all will get updates the

00:17:44,270 --> 00:17:47,540
big one here is because of the mobile

00:17:45,620 --> 00:17:50,030
platform we're moving over to them we're

00:17:47,540 --> 00:17:54,230
fresh nodejs the four decks right now

00:17:50,030 --> 00:17:55,640
we're on a dot one so let's go over the

00:17:54,230 --> 00:17:57,880
core components this is where the bulk

00:17:55,640 --> 00:18:01,460
of the R&D is being spent in 2016

00:17:57,880 --> 00:18:04,820
there's two major projects the biggest

00:18:01,460 --> 00:18:06,830
one is our pipeline that has some user

00:18:04,820 --> 00:18:08,540
interface instrumentation built around

00:18:06,830 --> 00:18:10,550
it but it also has some built config

00:18:08,540 --> 00:18:13,040
stuff we're manipulating that's taking a

00:18:10,550 --> 00:18:15,260
lot of R&D the other rd one is service

00:18:13,040 --> 00:18:17,690
linking which I'll get to in the queue

00:18:15,260 --> 00:18:20,750
brunetti section so let's talk about the

00:18:17,690 --> 00:18:22,220
enterprise registry people love the some

00:18:20,750 --> 00:18:24,170
of the features that we're offering in

00:18:22,220 --> 00:18:26,480
the product with our internal registry

00:18:24,170 --> 00:18:28,280
they like the fact that they can prune

00:18:26,480 --> 00:18:31,880
they like the fact that they can say

00:18:28,280 --> 00:18:33,230
every 30 days go ahead and cut out some

00:18:31,880 --> 00:18:35,180
of the stuff that hasn't been deployed

00:18:33,230 --> 00:18:37,790
they're doing that that means you you

00:18:35,180 --> 00:18:39,830
can tell you can ask the registry what

00:18:37,790 --> 00:18:42,020
has not been deployed and a lot of

00:18:39,830 --> 00:18:44,060
commercial stand-alone offerings don't

00:18:42,020 --> 00:18:46,040
have those features yet and

00:18:44,060 --> 00:18:47,780
and we do we have those in the product

00:18:46,040 --> 00:18:49,850
so people have wanted us to expose that

00:18:47,780 --> 00:18:52,990
and push that out we also have an image

00:18:49,850 --> 00:18:55,760
stream concept where I can do a lot of

00:18:52,990 --> 00:18:58,070
kokum its back it'll cause more more

00:18:55,760 --> 00:19:00,380
docker layers to be trapped and then I

00:18:58,070 --> 00:19:03,650
can have somebody else partner with me

00:19:00,380 --> 00:19:05,510
like grant Shipley can be policy

00:19:03,650 --> 00:19:07,730
connected to my image stream so maybe

00:19:05,510 --> 00:19:10,010
he's in QE and I'm in development so

00:19:07,730 --> 00:19:12,980
when I I go and do a code commit he gets

00:19:10,010 --> 00:19:16,100
the same letters of his images all right

00:19:12,980 --> 00:19:17,930
his projects these are all concepts that

00:19:16,100 --> 00:19:19,460
we had in our internal registry and we

00:19:17,930 --> 00:19:21,590
want to expose out we want to allow a

00:19:19,460 --> 00:19:24,410
customer to make that the first decision

00:19:21,590 --> 00:19:26,180
point just install the registry start

00:19:24,410 --> 00:19:28,070
playing around with dr. on laptops you

00:19:26,180 --> 00:19:31,130
need something to pull from a single

00:19:28,070 --> 00:19:32,420
point at the customer site to do that we

00:19:31,130 --> 00:19:35,540
need a user interface somebody has to

00:19:32,420 --> 00:19:38,590
log into it somebody has to see his or

00:19:35,540 --> 00:19:41,750
her images somebody has to go ahead and

00:19:38,590 --> 00:19:45,170
have quota being displayed somebody has

00:19:41,750 --> 00:19:48,170
to see layer connections little drop

00:19:45,170 --> 00:19:49,490
downs and children being displayed in

00:19:48,170 --> 00:19:51,530
that user interface so there's a lot of

00:19:49,490 --> 00:19:53,420
work in those areas around importing and

00:19:51,530 --> 00:19:55,760
exporting the classic things that you

00:19:53,420 --> 00:19:58,910
would expect now on the technical side

00:19:55,760 --> 00:20:00,800
some of the hard things that happen we

00:19:58,910 --> 00:20:02,690
want to make sure that later you can

00:20:00,800 --> 00:20:05,510
make a decision to install atomic

00:20:02,690 --> 00:20:06,740
platform or open ship so we have to be

00:20:05,510 --> 00:20:11,180
able to discover that and bring that

00:20:06,740 --> 00:20:13,610
into the fold in a very easy way storage

00:20:11,180 --> 00:20:16,550
is one of our competitive advantages

00:20:13,610 --> 00:20:18,440
because we offer staple applications to

00:20:16,550 --> 00:20:19,970
do so you need persistent storage if

00:20:18,440 --> 00:20:21,680
you're doing that with containers it has

00:20:19,970 --> 00:20:23,570
to be remote and there's a lot of

00:20:21,680 --> 00:20:25,490
storage api's out there right there's I

00:20:23,570 --> 00:20:28,130
scuzzy there's fibre channel there's

00:20:25,490 --> 00:20:31,430
file block there's all sorts of fun

00:20:28,130 --> 00:20:34,700
stuff we offer this as a company and

00:20:31,430 --> 00:20:36,230
it's one of our golden features if you

00:20:34,700 --> 00:20:38,090
will one of the things that we're

00:20:36,230 --> 00:20:40,370
bringing into it though is dynamic

00:20:38,090 --> 00:20:43,040
provisioning across the board right now

00:20:40,370 --> 00:20:44,930
with the bulk of these storage providers

00:20:43,040 --> 00:20:47,150
you have to create volumes as a storage

00:20:44,930 --> 00:20:49,040
admin and then register those with

00:20:47,150 --> 00:20:50,120
Cooper Nettie's it'd be nice if you

00:20:49,040 --> 00:20:51,920
didn't have to create those volumes

00:20:50,120 --> 00:20:53,480
beforehand if there was just an API

00:20:51,920 --> 00:20:56,369
where you could ask for them and build

00:20:53,480 --> 00:20:58,480
them on the fly so that's what comes in

00:20:56,369 --> 00:21:00,730
the other thing here is a lot of

00:20:58,480 --> 00:21:03,700
labeling features are coming in and

00:21:00,730 --> 00:21:06,100
there's I'd say two major ones the first

00:21:03,700 --> 00:21:07,570
one is when you're using persistent

00:21:06,100 --> 00:21:10,179
storage you know think of Amazon Elastic

00:21:07,570 --> 00:21:13,869
box storage it'd be nice to log into the

00:21:10,179 --> 00:21:15,580
Amazon interface and see tags on the

00:21:13,869 --> 00:21:17,710
elastic boss storage that makes sense to

00:21:15,580 --> 00:21:19,720
the open shift environment then on the

00:21:17,710 --> 00:21:22,539
flip side log in to open shift and see

00:21:19,720 --> 00:21:24,519
tags on the Peavey's the persistent

00:21:22,539 --> 00:21:26,230
volumes that tag that to something in

00:21:24,519 --> 00:21:27,519
the amazon infrastructure so we're

00:21:26,230 --> 00:21:30,309
starting to add that layering that

00:21:27,519 --> 00:21:32,440
tagging in we're reusing the same label

00:21:30,309 --> 00:21:34,659
concept is with the users so sometimes

00:21:32,440 --> 00:21:35,919
the cloud provider could be in NFS so

00:21:34,659 --> 00:21:37,539
somebody raises their hand and says I

00:21:35,919 --> 00:21:39,820
want to end up as volume but right now

00:21:37,539 --> 00:21:42,100
there's no way to say i want an NFL

00:21:39,820 --> 00:21:44,110
volume on the 10 gigabit network and not

00:21:42,100 --> 00:21:45,580
one on the one gigabit network so we

00:21:44,110 --> 00:21:47,409
want to be able to bring those let those

00:21:45,580 --> 00:21:51,509
labels and this is a gold this is a

00:21:47,409 --> 00:21:54,700
silver this is a bronze level of storage

00:21:51,509 --> 00:21:56,919
when you attach these persistent volumes

00:21:54,700 --> 00:21:58,419
to the actual running kernel there's

00:21:56,919 --> 00:22:00,879
different things people would want to do

00:21:58,419 --> 00:22:02,259
some people on fsck the volume first and

00:22:00,879 --> 00:22:04,629
don'ts and people want to grow a

00:22:02,259 --> 00:22:07,200
filesystem some people don't or doing an

00:22:04,629 --> 00:22:10,539
extensible interface down at that level

00:22:07,200 --> 00:22:12,999
unusual at Red Hat our storage group is

00:22:10,539 --> 00:22:14,889
also born from a lot of engineers from

00:22:12,999 --> 00:22:18,580
the high performance group that used to

00:22:14,889 --> 00:22:21,070
also be at Red Hat and this is a whereas

00:22:18,580 --> 00:22:22,600
enough to really grab on to big data and

00:22:21,070 --> 00:22:24,399
to start looking at templates and

00:22:22,600 --> 00:22:28,240
concepts and the first one that they

00:22:24,399 --> 00:22:30,580
chased out of the system was when you do

00:22:28,240 --> 00:22:32,409
persistent volumes you want different

00:22:30,580 --> 00:22:34,600
functionality depending on the

00:22:32,409 --> 00:22:37,600
application on how things get mounted

00:22:34,600 --> 00:22:40,269
when the application grows so if it's a

00:22:37,600 --> 00:22:42,309
Cassandra cluster of Maya or postgrads

00:22:40,269 --> 00:22:44,440
maybe when a new instance is at it I

00:22:42,309 --> 00:22:46,330
want a new persistent volume of sharing

00:22:44,440 --> 00:22:48,279
the same core system volume or if it's

00:22:46,330 --> 00:22:50,590
an Oracle RAC database maybe I want to

00:22:48,279 --> 00:22:52,809
share the same persistent volume so

00:22:50,590 --> 00:22:54,909
there's a lot of different storage

00:22:52,809 --> 00:22:56,289
mechanisms that come into play here and

00:22:54,909 --> 00:22:58,629
there chasing those out of the system

00:22:56,289 --> 00:23:01,210
force this last one is a pretty exciting

00:22:58,629 --> 00:23:03,009
one we're going to take Gluster FS and

00:23:01,210 --> 00:23:05,230
SEF and start running it on Cobra

00:23:03,009 --> 00:23:07,590
Nettie's the first one is going to be

00:23:05,230 --> 00:23:10,130
gluster FS I think

00:23:07,590 --> 00:23:13,200
put out a container this month actually

00:23:10,130 --> 00:23:16,380
so that's a definitely in play now when

00:23:13,200 --> 00:23:17,880
you start telling the platform to expose

00:23:16,380 --> 00:23:19,289
storage that means you have to create a

00:23:17,880 --> 00:23:22,020
user experience around that there has to

00:23:19,289 --> 00:23:24,270
be commands to register this story to

00:23:22,020 --> 00:23:26,010
ask for the storage so we have this

00:23:24,270 --> 00:23:28,710
group creating some of these interfaces

00:23:26,010 --> 00:23:30,480
so this is hyper convergys running

00:23:28,710 --> 00:23:36,720
storage instead of outside of the past

00:23:30,480 --> 00:23:38,220
on the path itself networking for asking

00:23:36,720 --> 00:23:40,110
a lot from her networking but there's

00:23:38,220 --> 00:23:43,200
two main areas that they're working on

00:23:40,110 --> 00:23:45,059
the first one is the router right in the

00:23:43,200 --> 00:23:47,909
two directs concept every application

00:23:45,059 --> 00:23:49,230
had its own h8 proxy people typically

00:23:47,909 --> 00:23:51,740
didn't like the implementation because

00:23:49,230 --> 00:23:55,710
it ended up with thousands of aj proxies

00:23:51,740 --> 00:23:58,320
now when we moved to 30 we decided one

00:23:55,710 --> 00:24:00,000
routing tier 1 h a proxy routing tier it

00:23:58,320 --> 00:24:01,830
runs on Cooper Nettie's and pods in

00:24:00,000 --> 00:24:05,309
containers it's highly available has a

00:24:01,830 --> 00:24:09,299
floating VIP it's really really sexy now

00:24:05,309 --> 00:24:10,590
the problem is in some industries when

00:24:09,299 --> 00:24:12,870
you have a lot of tenants on the

00:24:10,590 --> 00:24:14,010
platform do the regulatory assignments

00:24:12,870 --> 00:24:16,110
you might not be able to run them

00:24:14,010 --> 00:24:17,880
through the same proxy through the same

00:24:16,110 --> 00:24:19,770
routing tier if maybe you be forced

00:24:17,880 --> 00:24:21,330
legally to have different routing tears

00:24:19,770 --> 00:24:23,039
for different tenants so now we're back

00:24:21,330 --> 00:24:26,100
to this world of adding more of these h

00:24:23,039 --> 00:24:27,870
a proxies onto the platform right on

00:24:26,100 --> 00:24:30,960
your head you want to be able to have a

00:24:27,870 --> 00:24:32,730
proxy or a project and decide for that

00:24:30,960 --> 00:24:34,470
project I want to get to have its own

00:24:32,730 --> 00:24:36,720
routing tier instead we're going through

00:24:34,470 --> 00:24:40,039
the platform round in tier so that's one

00:24:36,720 --> 00:24:43,559
of the ones we're working on in the same

00:24:40,039 --> 00:24:45,390
area if you're in a project and you have

00:24:43,559 --> 00:24:47,850
different applications which have

00:24:45,390 --> 00:24:50,220
different services sometimes the timeout

00:24:47,850 --> 00:24:52,200
value is different sometimes how you

00:24:50,220 --> 00:24:54,539
want the H a proxy to handle that

00:24:52,200 --> 00:24:56,610
particular application is different so

00:24:54,539 --> 00:24:58,500
we're annotating services and having

00:24:56,610 --> 00:25:00,600
those annotations cause they chafe

00:24:58,500 --> 00:25:02,300
popular to behave differently that's

00:25:00,600 --> 00:25:07,220
another thing that we're asking

00:25:02,300 --> 00:25:09,410
work on another big one for our largest

00:25:07,220 --> 00:25:11,810
customers that have a lot of firewalls

00:25:09,410 --> 00:25:15,230
involved in their deployment when they

00:25:11,810 --> 00:25:17,360
have tenants in projects they want that

00:25:15,230 --> 00:25:20,300
tenant in that project to use the same

00:25:17,360 --> 00:25:22,880
IP addresses the source IP address under

00:25:20,300 --> 00:25:25,310
traffic outbound this is so they can

00:25:22,880 --> 00:25:27,350
write very easy firewall rules the block

00:25:25,310 --> 00:25:29,450
that tenant or not block that tenant has

00:25:27,350 --> 00:25:31,670
it go out to oracle databases and CRM

00:25:29,450 --> 00:25:33,770
systems and things of that nature right

00:25:31,670 --> 00:25:35,870
now we're exposing the source IP address

00:25:33,770 --> 00:25:37,820
from the virtual machine or from the

00:25:35,870 --> 00:25:40,100
bare metal hardware that we're in so we

00:25:37,820 --> 00:25:41,810
want to stop doing that and so that

00:25:40,100 --> 00:25:45,650
means we have to work on our egress and

00:25:41,810 --> 00:25:49,640
our ingress implementation we want to

00:25:45,650 --> 00:25:52,700
enable non-standard ports none 8433 off

00:25:49,640 --> 00:25:54,830
of the router for the projects and

00:25:52,700 --> 00:25:56,830
services that are running this one is

00:25:54,830 --> 00:25:59,150
getting hot with the Internet of Things

00:25:56,830 --> 00:26:02,450
typically people are okay with us

00:25:59,150 --> 00:26:04,880
putting an SI router on non HTTP tcp

00:26:02,450 --> 00:26:07,130
base traffic but when you start talking

00:26:04,880 --> 00:26:08,210
to refrigerators and pencils and things

00:26:07,130 --> 00:26:11,480
of that nature they don't typically

00:26:08,210 --> 00:26:14,000
understand SNI and so we have to have a

00:26:11,480 --> 00:26:16,850
classic TCP router that can handle

00:26:14,000 --> 00:26:21,230
different protocols this last one the

00:26:16,850 --> 00:26:22,880
CNI 40 s implemented CNI into the Cooper

00:26:21,230 --> 00:26:24,890
nannies communities grabbed on to it

00:26:22,880 --> 00:26:27,320
with their community and so this is a

00:26:24,890 --> 00:26:30,350
interface for these plugins when you're

00:26:27,320 --> 00:26:32,930
using 'too pernetti's you're using a

00:26:30,350 --> 00:26:35,120
software-defined Network and who's

00:26:32,930 --> 00:26:37,370
software-defined Network you use is up

00:26:35,120 --> 00:26:39,200
to you we ship and open the switch

00:26:37,370 --> 00:26:41,480
implementation right out of the box as

00:26:39,200 --> 00:26:43,970
we can't force our customers to go vile

00:26:41,480 --> 00:26:45,410
software-defined Network but we have

00:26:43,970 --> 00:26:48,170
partners that are writing to that

00:26:45,410 --> 00:26:50,720
plug-in interface we have new eyes we

00:26:48,170 --> 00:26:53,180
have Cisco we have juniper there's just

00:26:50,720 --> 00:26:56,540
a lot of energy in this area even in

00:26:53,180 --> 00:26:58,550
vmware but it's difficult it's very

00:26:56,540 --> 00:27:00,730
painful to write to this plug-in

00:26:58,550 --> 00:27:04,010
interface that exists today and this CNI

00:27:00,730 --> 00:27:08,630
api's really made that an easier project

00:27:04,010 --> 00:27:10,550
Oh idling so v2 was very popular with

00:27:08,630 --> 00:27:12,530
idling in fact idling is how we're able

00:27:10,550 --> 00:27:15,210
to keep the lights on and give every man

00:27:12,530 --> 00:27:16,830
woman and dog three

00:27:15,210 --> 00:27:18,929
three years on the platform on the

00:27:16,830 --> 00:27:20,460
planet Earth because when you start

00:27:18,929 --> 00:27:22,919
these gears when you start these

00:27:20,460 --> 00:27:24,570
containers today you can walk away right

00:27:22,919 --> 00:27:27,539
and will idle them will shut them down

00:27:24,570 --> 00:27:29,669
save on our amazon web services bill we

00:27:27,539 --> 00:27:31,710
don't have that yet in the 3x platform

00:27:29,669 --> 00:27:34,529
because when you take a step back what

00:27:31,710 --> 00:27:36,480
we've done to a application in 30 x is

00:27:34,529 --> 00:27:38,730
we sort of shattered it and we allowed

00:27:36,480 --> 00:27:41,640
you to have routes and services and pods

00:27:38,730 --> 00:27:43,230
and containers a lot more control we do

00:27:41,640 --> 00:27:46,320
that so you can make more complex

00:27:43,230 --> 00:27:48,419
topologies with micro services but now

00:27:46,320 --> 00:27:50,370
when we want to go an idle something we

00:27:48,419 --> 00:27:52,230
got a lot of pieces to grab on to an

00:27:50,370 --> 00:27:53,730
idol and bring down at the same time so

00:27:52,230 --> 00:27:55,860
I took a little while for us to get it

00:27:53,730 --> 00:28:01,020
it'll come in in this time frame be a

00:27:55,860 --> 00:28:05,580
great record I'd say that's the bulk of

00:28:01,020 --> 00:28:07,169
what they're working on logs and metrics

00:28:05,580 --> 00:28:10,620
so this was another exciting thing that

00:28:07,169 --> 00:28:12,720
came in around november of last year we

00:28:10,620 --> 00:28:17,399
offer a full elk stack we use flinty

00:28:12,720 --> 00:28:19,529
instead of the other side of that but

00:28:17,399 --> 00:28:22,799
what we're asking the engineers to do is

00:28:19,529 --> 00:28:24,480
move to a common talking insulation we

00:28:22,799 --> 00:28:26,669
have components of the elk stack and

00:28:24,480 --> 00:28:28,620
OpenStack we have in an open shift how

00:28:26,669 --> 00:28:30,929
phones wants to get into it so we're

00:28:28,620 --> 00:28:32,760
pulling back as a company and creating a

00:28:30,929 --> 00:28:34,760
common logging solution that customers

00:28:32,760 --> 00:28:36,960
will be able to install and then our

00:28:34,760 --> 00:28:39,270
platforms will be able to discover which

00:28:36,960 --> 00:28:42,059
ones and bring that in and pull from

00:28:39,270 --> 00:28:43,500
those those consistent logging in this

00:28:42,059 --> 00:28:45,929
area we're going to bring in a message

00:28:43,500 --> 00:28:48,210
bus instead using fluent d so that's

00:28:45,929 --> 00:28:50,159
another evolution that you'll see so a

00:28:48,210 --> 00:28:51,779
lot of excitement in those areas on the

00:28:50,159 --> 00:28:54,330
metric side if you're unfamiliar with

00:28:51,779 --> 00:28:56,549
metrics in Coober Nettie's or open shift

00:28:54,330 --> 00:28:58,470
in general what you end up doing is you

00:28:56,549 --> 00:28:59,669
take the lowest level seat groups right

00:28:58,470 --> 00:29:01,470
see groups has been around for a while

00:28:59,669 --> 00:29:04,230
you get a lot of information from see

00:29:01,470 --> 00:29:06,029
groups so you pull all this data from

00:29:04,230 --> 00:29:07,799
see groups that goes into a CA advisor

00:29:06,029 --> 00:29:09,929
this is running on the notes the adviser

00:29:07,799 --> 00:29:11,610
goes upstate heap stir heap stir is an

00:29:09,929 --> 00:29:14,700
API that you can ask for Annette ease

00:29:11,610 --> 00:29:16,500
questions but it's a live API it doesn't

00:29:14,700 --> 00:29:18,690
store anything so we had to implement a

00:29:16,500 --> 00:29:20,580
storage solution and we're using ha

00:29:18,690 --> 00:29:22,679
cooler with Cassandra under the covers

00:29:20,580 --> 00:29:24,899
and so now we have Cassandra storing all

00:29:22,679 --> 00:29:26,320
these metrics we're going to add in two

00:29:24,899 --> 00:29:28,529
more file system and networks

00:29:26,320 --> 00:29:30,580
so you can start pulling it out

00:29:28,529 --> 00:29:32,169
container enhancements we're going to

00:29:30,580 --> 00:29:33,789
clean up overlay file system

00:29:32,169 --> 00:29:36,759
implementation around this time we'll

00:29:33,789 --> 00:29:38,830
have dr. 110 when you get ten you get

00:29:36,759 --> 00:29:41,889
user name spaces this is your ability to

00:29:38,830 --> 00:29:43,750
run things as root and then map that

00:29:41,889 --> 00:29:47,440
back to a non root user in the colonel

00:29:43,750 --> 00:29:50,590
it's in R&D right now so we don't know

00:29:47,440 --> 00:29:52,360
if it'll hit the 33 which is the second

00:29:50,590 --> 00:29:53,340
half of the year around some a timeframe

00:29:52,360 --> 00:29:58,840
but it's something we're definitely

00:29:53,340 --> 00:30:01,870
moving towards the big one on the Cooper

00:29:58,840 --> 00:30:04,389
Nettie side or I would say to scheduling

00:30:01,870 --> 00:30:07,000
we add it over commitment to the

00:30:04,389 --> 00:30:09,940
platform so with over commitment you can

00:30:07,000 --> 00:30:12,549
have people over subscribing to CPU and

00:30:09,940 --> 00:30:14,710
memories cycles out on the box what

00:30:12,549 --> 00:30:16,840
isn't really clean right now is when you

00:30:14,710 --> 00:30:18,730
are in an overcommitted situation will

00:30:16,840 --> 00:30:21,490
try to start the pod back on the same

00:30:18,730 --> 00:30:22,659
node it'd be nice if we want doing that

00:30:21,490 --> 00:30:25,389
if you're starting on a different note

00:30:22,659 --> 00:30:27,850
so that comes in to this time frame we

00:30:25,389 --> 00:30:29,889
also get some more auto scaling auto

00:30:27,850 --> 00:30:32,049
scaling a CPU and memory based right now

00:30:29,889 --> 00:30:33,429
so where it'll be in tech preview but

00:30:32,049 --> 00:30:35,669
allow you to pick anything that we're

00:30:33,429 --> 00:30:38,200
tracking through that metrics interface

00:30:35,669 --> 00:30:39,940
pset is really another controller

00:30:38,200 --> 00:30:41,590
there's a couple controllers in the

00:30:39,940 --> 00:30:43,480
product there's a replication controller

00:30:41,590 --> 00:30:45,820
there's a job controller there's a

00:30:43,480 --> 00:30:47,950
daemon controller is now going to be

00:30:45,820 --> 00:30:50,379
this pet set controller this will stay

00:30:47,950 --> 00:30:52,299
an RD probably 4 2016 but it's eating up

00:30:50,379 --> 00:30:54,159
a lot of cycles where you would need

00:30:52,299 --> 00:30:57,399
this is if you have an application that

00:30:54,159 --> 00:30:59,559
depending on how it scales it has to ask

00:30:57,399 --> 00:31:01,210
other instances questions maybe when I

00:30:59,559 --> 00:31:03,610
add another instance that instance has

00:31:01,210 --> 00:31:05,649
to ask other instances what his identity

00:31:03,610 --> 00:31:07,779
or her identity is maybe has to read

00:31:05,649 --> 00:31:10,299
from a shared file system so little

00:31:07,779 --> 00:31:12,730
nuances how different applications work

00:31:10,299 --> 00:31:15,370
we want to be able to contain and hold

00:31:12,730 --> 00:31:18,179
that in the controller service linking

00:31:15,370 --> 00:31:20,289
is config data is now called config map

00:31:18,179 --> 00:31:22,269
the problem with the implementation

00:31:20,289 --> 00:31:24,070
right now is when you have a lot of

00:31:22,269 --> 00:31:29,259
variety in the runtimes let's say you

00:31:24,070 --> 00:31:30,350
have EAP and maybe at EAP MySQL

00:31:29,259 --> 00:31:33,260
maybe a

00:31:30,350 --> 00:31:35,450
j/s and mysql you end up with a lot of

00:31:33,260 --> 00:31:39,980
combinations of templates and it'd be

00:31:35,450 --> 00:31:42,500
nice if you just had MySQL PHP and

00:31:39,980 --> 00:31:45,110
allow people add hockley to just grab

00:31:42,500 --> 00:31:47,510
things and to do that with an immutable

00:31:45,110 --> 00:31:49,880
infrastructure is quite difficult and so

00:31:47,510 --> 00:31:51,679
what we've done here with config data is

00:31:49,880 --> 00:31:53,419
all these environmental variables and

00:31:51,679 --> 00:31:56,179
config files that you would have to

00:31:53,419 --> 00:31:58,340
inject into the running you know

00:31:56,179 --> 00:31:59,960
immutable image we're going to hold that

00:31:58,340 --> 00:32:02,659
in the KU Brunetti services layer and

00:31:59,960 --> 00:32:05,330
the secret lair and we'll inject that

00:32:02,659 --> 00:32:08,450
into the deployment has board deploying

00:32:05,330 --> 00:32:10,039
and Cooper Nettie's will maintain that

00:32:08,450 --> 00:32:13,760
and hold that configuration you gotta

00:32:10,039 --> 00:32:15,380
force platform you know the job

00:32:13,760 --> 00:32:17,750
controller this is short-lived jobs

00:32:15,380 --> 00:32:19,429
Cooper Nettie's doesn't ever want to let

00:32:17,750 --> 00:32:20,840
anything die if you launch an

00:32:19,429 --> 00:32:22,760
application on kebron Eddie's it'll

00:32:20,840 --> 00:32:24,549
restart it will always want to restart

00:32:22,760 --> 00:32:26,630
that's what it's doing in life and

00:32:24,549 --> 00:32:27,890
sometimes you don't want that sometimes

00:32:26,630 --> 00:32:29,059
you want to just launch something and

00:32:27,890 --> 00:32:32,120
you expect it to die because it's a

00:32:29,059 --> 00:32:34,039
short backstop I bring back the data so

00:32:32,120 --> 00:32:35,659
you can launch that with the job

00:32:34,039 --> 00:32:38,150
controller instead of the replication

00:32:35,659 --> 00:32:41,659
controller and that's a nice feature

00:32:38,150 --> 00:32:44,270
coming in whenever you want to use a

00:32:41,659 --> 00:32:45,500
cert we ask you to use a secret until

00:32:44,270 --> 00:32:47,510
you the secret you need to use a

00:32:45,500 --> 00:32:48,950
function of a service account this is

00:32:47,510 --> 00:32:50,840
very confusing the people and they

00:32:48,950 --> 00:32:53,390
typically forget to create these service

00:32:50,840 --> 00:32:55,490
accounts and it we need a better path we

00:32:53,390 --> 00:32:57,230
need things to happen by default has you

00:32:55,490 --> 00:32:59,240
select what you select from the catalog

00:32:57,230 --> 00:33:01,429
so we're going to start automating that

00:32:59,240 --> 00:33:03,080
a little bit better people have one

00:33:01,429 --> 00:33:05,210
another logical grouping on top of

00:33:03,080 --> 00:33:07,490
projects so maybe I have a department

00:33:05,210 --> 00:33:09,350
called finance and under finance I have

00:33:07,490 --> 00:33:10,700
a bunch of development projects so

00:33:09,350 --> 00:33:12,980
that's another logical grouping layer

00:33:10,700 --> 00:33:14,630
that will have on top the atomic

00:33:12,980 --> 00:33:16,340
registry we have to discover it and

00:33:14,630 --> 00:33:18,080
bring it in and marry our authentication

00:33:16,340 --> 00:33:20,570
to it once it's in a standalone

00:33:18,080 --> 00:33:22,220
situation insulation will get glowing

00:33:20,570 --> 00:33:24,440
upgrades we do that a little bit better

00:33:22,220 --> 00:33:27,590
than the arch day we release the

00:33:24,440 --> 00:33:29,390
containerized deployment a couple weeks

00:33:27,590 --> 00:33:31,400
ago so now the whole product is offered

00:33:29,390 --> 00:33:32,960
has a containers are routing as a

00:33:31,400 --> 00:33:35,390
container our agents are containers

00:33:32,960 --> 00:33:36,919
everything is in a container you can

00:33:35,390 --> 00:33:37,370
still use our pm's if you want to go

00:33:36,919 --> 00:33:39,920
down

00:33:37,370 --> 00:33:42,050
app but now we have to change a little

00:33:39,920 --> 00:33:44,720
bit how we do our hae installer out of

00:33:42,050 --> 00:33:46,700
the box we have to clean up that log in

00:33:44,720 --> 00:33:50,360
and that metrics ansible playbook bring

00:33:46,700 --> 00:33:55,730
that back into the central install use

00:33:50,360 --> 00:33:58,940
case if you will scale you know right

00:33:55,730 --> 00:34:01,910
now we're at about 500 nodes with around

00:33:58,940 --> 00:34:04,550
50 pods on each node so we'll go to a

00:34:01,910 --> 00:34:07,160
thousand and probably with 100 to 150

00:34:04,550 --> 00:34:08,510
pods on each note and then we'll start

00:34:07,160 --> 00:34:11,090
putting out a lot of reference

00:34:08,510 --> 00:34:13,340
implementations that you see there a lot

00:34:11,090 --> 00:34:14,810
with cloud forms will if you're

00:34:13,340 --> 00:34:16,700
unfamiliar with platforms there's a lot

00:34:14,810 --> 00:34:19,310
of providers you'll use a provider for

00:34:16,700 --> 00:34:23,149
AWS a provider for OpenStack a provider

00:34:19,310 --> 00:34:25,010
for openshift the power of this is when

00:34:23,149 --> 00:34:26,720
you start getting these attributes from

00:34:25,010 --> 00:34:28,700
these providers you start connecting

00:34:26,720 --> 00:34:29,960
right you start seeing that the storage

00:34:28,700 --> 00:34:31,639
is can actually connect it to this

00:34:29,960 --> 00:34:34,190
application when you get the error in

00:34:31,639 --> 00:34:37,610
storage you can see that being brought

00:34:34,190 --> 00:34:40,700
up through that application layer so

00:34:37,610 --> 00:34:43,040
what does it all mean right I mean that

00:34:40,700 --> 00:34:46,220
was a lot of nuts and bolts in it it's

00:34:43,040 --> 00:34:53,780
easy to forget why we originally wanted

00:34:46,220 --> 00:34:55,760
this as as users of IT for me I realized

00:34:53,780 --> 00:34:58,280
what platform has a service was about

00:34:55,760 --> 00:34:59,630
probably three years ago I was looking

00:34:58,280 --> 00:35:03,040
at different implementations for a

00:34:59,630 --> 00:35:06,740
competitor and I hit open shift calm and

00:35:03,040 --> 00:35:09,680
it was mind-boggling very quickly I

00:35:06,740 --> 00:35:10,850
could get an application up and as I was

00:35:09,680 --> 00:35:13,820
working for a different company at the

00:35:10,850 --> 00:35:16,490
time it was like holy cow they figured

00:35:13,820 --> 00:35:19,400
it out right at those those zealots over

00:35:16,490 --> 00:35:20,630
an open source land you know that the

00:35:19,400 --> 00:35:23,150
the only thing that was holding them

00:35:20,630 --> 00:35:25,460
back was the fact that supposedly it was

00:35:23,150 --> 00:35:27,560
harder to use open source technologies

00:35:25,460 --> 00:35:29,780
right it wasn't a clean user thing you

00:35:27,560 --> 00:35:31,880
had to put more effort into it but here

00:35:29,780 --> 00:35:33,560
you were you were out on the pop for me

00:35:31,880 --> 00:35:34,880
he was grabbing no Jas you're putting

00:35:33,560 --> 00:35:36,980
your code and you were bringing it up

00:35:34,880 --> 00:35:39,560
and they had this application gallery

00:35:36,980 --> 00:35:41,540
that had just the most fantastic things

00:35:39,560 --> 00:35:44,660
at like 18 year olds in China were doing

00:35:41,540 --> 00:35:47,060
and like like seven year olds in Chicago

00:35:44,660 --> 00:35:48,000
it was just you got to see people just

00:35:47,060 --> 00:35:50,430
experiencing

00:35:48,000 --> 00:35:53,400
technology and I I walked out of my

00:35:50,430 --> 00:35:55,530
current job and I walked into red hat I

00:35:53,400 --> 00:35:57,540
had to be a part of that and why did I

00:35:55,530 --> 00:35:59,820
have to be a part of it was really what

00:35:57,540 --> 00:36:05,250
happens when you give a man or women the

00:35:59,820 --> 00:36:08,460
right tools at the right time right what

00:36:05,250 --> 00:36:10,830
happened ARF happens right something you

00:36:08,460 --> 00:36:12,570
see something I never ever seen before

00:36:10,830 --> 00:36:15,450
this is this is the new artist

00:36:12,570 --> 00:36:18,960
developers and this is what pathway as a

00:36:15,450 --> 00:36:20,910
service right this is us giving a

00:36:18,960 --> 00:36:23,250
developer the right tool at the right

00:36:20,910 --> 00:36:27,060
time and we're able to see something

00:36:23,250 --> 00:36:29,310
we've never seen before my name is my

00:36:27,060 --> 00:36:31,020
ferret it's been a pleasure I have about

00:36:29,310 --> 00:36:44,870
three minutes does anybody have any

00:36:31,020 --> 00:36:44,870
questions yes yeah

00:36:52,430 --> 00:37:02,609
right yeah so there's I meet you have

00:36:58,920 --> 00:37:04,710
two options today right and one option

00:37:02,609 --> 00:37:06,450
is v2 another option is open shift

00:37:04,710 --> 00:37:08,430
dedicated an open shift dedicate it

00:37:06,450 --> 00:37:11,160
means you get a full open shift version

00:37:08,430 --> 00:37:13,559
3 environment for nodes some high-class

00:37:11,160 --> 00:37:16,160
storage you're the only person on that

00:37:13,559 --> 00:37:19,140
so it's just your tenancy if you will in

00:37:16,160 --> 00:37:21,869
around March beginning of April or start

00:37:19,140 --> 00:37:24,269
a beta program for the online with

00:37:21,869 --> 00:37:26,339
version 3 now what that means in beta is

00:37:24,269 --> 00:37:28,920
every 30 days we'll just blow away

00:37:26,339 --> 00:37:30,569
everybody's environment so will allow

00:37:28,920 --> 00:37:33,329
you know a couple thousand people on the

00:37:30,569 --> 00:37:35,309
platform every 30 days will blow it away

00:37:33,329 --> 00:37:37,410
will a different couple thousand people

00:37:35,309 --> 00:37:39,599
in the platform and we'll do that until

00:37:37,410 --> 00:37:41,759
we flush any Imperfects out of our

00:37:39,599 --> 00:37:44,339
implementation and then we'll will go

00:37:41,759 --> 00:37:46,440
live the things that are connected to it

00:37:44,339 --> 00:37:48,509
when you look at a company like red hat

00:37:46,440 --> 00:37:50,190
is a financial system right these are

00:37:48,509 --> 00:37:51,660
credit card purchases it goes through a

00:37:50,190 --> 00:37:54,269
different financial system than our

00:37:51,660 --> 00:37:57,029
purchase ordering system so we have to

00:37:54,269 --> 00:37:58,680
rewrite how that's been implemented so

00:37:57,029 --> 00:38:05,420
it takes us a while to bring them that

00:37:58,680 --> 00:38:09,569
over any other questions I hope you all

00:38:05,420 --> 00:38:11,039
grab on to these drops about you know I

00:38:09,569 --> 00:38:12,720
gave you the milestones of April and

00:38:11,039 --> 00:38:14,519
June about three weeks before then

00:38:12,720 --> 00:38:16,710
you'll pick up origin drops if you're in

00:38:14,519 --> 00:38:22,880
the open source community there so we'll

00:38:16,710 --> 00:38:22,880
keep in touch out there but it thanks

00:38:56,940 --> 00:39:04,700
that was great can I get you to do the

00:38:59,890 --> 00:39:24,470
same thing for as a briefing yep

00:39:04,700 --> 00:39:27,310
just exactly really here we get a log

00:39:24,470 --> 00:39:27,310
into the sting again

00:39:57,609 --> 00:40:00,609
yes

00:40:19,150 --> 00:40:22,450
run out of space

00:40:32,049 --> 00:40:42,189
yeah be upset if I'm not so great it's

00:40:35,109 --> 00:40:46,349
great and yeah just watch the movie also

00:40:42,189 --> 00:40:46,349
tell me about my calendar for the doll

00:40:57,280 --> 00:41:04,600
hello I'm such an 0

00:41:27,559 --> 00:41:38,400
it behaves as a keyboard but on a

00:41:31,650 --> 00:41:42,439
limited number of keys so yeah really

00:41:38,400 --> 00:41:42,439

YouTube URL: https://www.youtube.com/watch?v=jRCgaAtM0gw


