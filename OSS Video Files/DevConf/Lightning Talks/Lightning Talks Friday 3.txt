Title: Lightning Talks Friday 3
Publication date: 2016-02-12
Playlist: Lightning Talks
Description: 
	1. Alexander Todorov: How to find 1000 bugs in 30 minutes
2. Michael Scherer: 7 ansible tricks in almost 7 minutes
3. Jakub Marchwicki: Reverse-engineering the clean code
4. Tomáš Kukrál: Fun with Kubernetes
5. Neependra Khare: Comparing Docker Orchestration Tools
Captions: 
	00:00:02,959 --> 00:00:11,190
or there's a game I microphonic this

00:00:07,049 --> 00:00:14,429
year or you can grab this one I think

00:00:11,190 --> 00:00:22,939
it's easy row with this one what it

00:00:14,429 --> 00:00:22,939
slides so we have 40 minutes and people

00:00:24,600 --> 00:00:29,699
okay with with young but you know we

00:00:27,310 --> 00:00:29,699
expect

00:00:33,560 --> 00:00:48,380
maybe someone show up so it's not

00:00:37,800 --> 00:00:48,380
waiting for ages

00:00:49,820 --> 00:00:56,980
okay okay so you're gonna start I think

00:00:53,060 --> 00:00:59,989
we can serve okay guys so let's start

00:00:56,980 --> 00:01:02,450
our lightning talks the formic will be

00:00:59,989 --> 00:01:05,560
each speaker has up to 10 minutes and

00:01:02,450 --> 00:01:09,590
then we'll exchange without a break and

00:01:05,560 --> 00:01:11,600
we'll be here until seven right it's six

00:01:09,590 --> 00:01:19,640
now I don't know what time it is so yeah

00:01:11,600 --> 00:01:22,009
let's give our welcome to Michael so

00:01:19,640 --> 00:01:23,570
thank you my torque is a seven on

00:01:22,009 --> 00:01:26,330
seaboard tips and trick in seven minutes

00:01:23,570 --> 00:01:27,890
so about me my name is Michael but I do

00:01:26,330 --> 00:01:30,950
not have time to present myself you can

00:01:27,890 --> 00:01:32,420
see all the other talk about it so I

00:01:30,950 --> 00:01:34,070
guess that everybody know what is on

00:01:32,420 --> 00:01:39,410
Seabourn please why'd you run if you do

00:01:34,070 --> 00:01:40,700
Oh perfect so I said that it will be all

00:01:39,410 --> 00:01:42,440
right Nick Dal so it's packed with

00:01:40,700 --> 00:01:45,950
action and all kind of stuff and the

00:01:42,440 --> 00:01:47,479
first week is the action module that you

00:01:45,950 --> 00:01:50,119
can use with a variable called on

00:01:47,479 --> 00:01:52,039
seaboard package manager which is a nice

00:01:50,119 --> 00:01:54,830
trick but it's deprecated with uncivil

00:01:52,039 --> 00:01:57,110
20 and the way it works is that you can

00:01:54,830 --> 00:02:00,710
use that to insert something on the ban

00:01:57,110 --> 00:02:03,200
on fedora on well because it's able to

00:02:00,710 --> 00:02:06,259
dynamically detect what kind of package

00:02:03,200 --> 00:02:09,229
manager you want using the setup and the

00:02:06,259 --> 00:02:11,450
fact and create an action that depend on

00:02:09,229 --> 00:02:13,549
that fireball which means that you do

00:02:11,450 --> 00:02:17,209
not need to set a specifically human or

00:02:13,549 --> 00:02:21,950
dnf so that's how I make a profitable on

00:02:17,209 --> 00:02:23,329
triple play book so tips number two when

00:02:21,950 --> 00:02:25,130
people are using on Seabourn on the

00:02:23,329 --> 00:02:27,410
command line you see that you need to

00:02:25,130 --> 00:02:30,140
give the group for the eye docs command

00:02:27,410 --> 00:02:32,630
and you have the group or an eternal

00:02:30,140 --> 00:02:34,970
that the group where you can use it for

00:02:32,630 --> 00:02:37,100
other stuff for example for group

00:02:34,970 --> 00:02:41,200
variable so if you have a variable that

00:02:37,100 --> 00:02:44,570
needs to be said for every possible

00:02:41,200 --> 00:02:47,840
every vegetable server you can use that

00:02:44,570 --> 00:02:50,750
so this one is not a good tips because

00:02:47,840 --> 00:02:53,000
it's documented but but but you can also

00:02:50,750 --> 00:02:56,570
use that group to get the list of all

00:02:53,000 --> 00:02:59,030
oast on your system which is quite

00:02:56,570 --> 00:03:01,739
useful for example

00:02:59,030 --> 00:03:04,140
monitoring let's say that you want to

00:03:01,739 --> 00:03:07,260
declare on a ghost server you want to

00:03:04,140 --> 00:03:09,209
ping or the server you can either get a

00:03:07,260 --> 00:03:10,950
second copy of the list which is quite

00:03:09,209 --> 00:03:14,280
bad because each time there is

00:03:10,950 --> 00:03:16,739
duplication there is video of raw or you

00:03:14,280 --> 00:03:18,810
can use a trick which is just a loop and

00:03:16,739 --> 00:03:20,370
when you add a new server it gets a deal

00:03:18,810 --> 00:03:25,079
when you remove a new server it gets

00:03:20,370 --> 00:03:28,670
free mood so quite easy um tips number

00:03:25,079 --> 00:03:32,790
four it's also a tips with a variable

00:03:28,670 --> 00:03:34,590
it's a nice one so you get your you get

00:03:32,790 --> 00:03:37,170
run a good server and you want to get

00:03:34,590 --> 00:03:40,620
the IP address of the remote system how

00:03:37,170 --> 00:03:42,750
do you do that well it on out that you

00:03:40,620 --> 00:03:45,150
can use to stuff the first one is a

00:03:42,750 --> 00:03:47,340
variable where an array called the OS

00:03:45,150 --> 00:03:50,400
dois where you give the name of the

00:03:47,340 --> 00:03:53,400
server which can be the name given by

00:03:50,400 --> 00:03:56,849
the for loop from the previous tips and

00:03:53,400 --> 00:03:59,340
then you can use a nifty stuff which is

00:03:56,849 --> 00:04:03,389
unstable underscore default and Oscar

00:03:59,340 --> 00:04:05,910
ipv4 so we get as a default IP v4 for on

00:04:03,389 --> 00:04:09,180
Seabourn which is kinda equivalent to

00:04:05,910 --> 00:04:11,400
the public IP address and uncivil does

00:04:09,180 --> 00:04:14,220
that magically we should get to IP one

00:04:11,400 --> 00:04:16,620
of them will be a good one and that

00:04:14,220 --> 00:04:21,720
prevent to do complicated stuff like I

00:04:16,620 --> 00:04:25,830
do with other tools and so the fifth

00:04:21,720 --> 00:04:28,500
keeps is more complicated I think that a

00:04:25,830 --> 00:04:31,349
lot of people are using centos are well

00:04:28,500 --> 00:04:36,389
and you may have seen that Santos was

00:04:31,349 --> 00:04:38,900
out two week after where 7 dot 2 and 4

00:04:36,389 --> 00:04:42,810
well seven the two systemd go change and

00:04:38,900 --> 00:04:45,240
I wanted to use a journal deep and the

00:04:42,810 --> 00:04:48,570
export feature but it was only on 7 dot

00:04:45,240 --> 00:04:50,940
2 or federal or you are distribution and

00:04:48,570 --> 00:04:54,210
not on the other one so in an ideal

00:04:50,940 --> 00:04:57,240
world I used to just say okay forwarded

00:04:54,210 --> 00:04:59,310
versions to marry or 2722 let's use that

00:04:57,240 --> 00:05:01,320
but you cannot do that with the uncivil

00:04:59,310 --> 00:05:04,050
you can only give IP address of this

00:05:01,320 --> 00:05:07,140
kind of stuff and it honor that using

00:05:04,050 --> 00:05:09,500
group by and a specific ginger

00:05:07,140 --> 00:05:12,770
expression you can just test folder

00:05:09,500 --> 00:05:15,020
tion create a group and then apply john

00:05:12,770 --> 00:05:17,240
rd we move to that specific group so you

00:05:15,020 --> 00:05:19,580
can filter on any kind of variable

00:05:17,240 --> 00:05:21,590
create a group and be done with it and

00:05:19,580 --> 00:05:25,070
it's working now it's no longer a

00:05:21,590 --> 00:05:29,630
problem because 40 * updated but in the

00:05:25,070 --> 00:05:33,380
future well it would help so tips number

00:05:29,630 --> 00:05:35,690
six that's my favorite that uncivil by

00:05:33,380 --> 00:05:37,610
default work with ssh but fine as a

00:05:35,690 --> 00:05:40,400
search is secure everybody know to use

00:05:37,610 --> 00:05:42,770
it but most people do not know that you

00:05:40,400 --> 00:05:46,010
can use for other stuff so for example

00:05:42,770 --> 00:05:49,220
you can use it with some edge food you

00:05:46,010 --> 00:05:52,550
can use it with what do i owe you can

00:05:49,220 --> 00:05:54,620
use it with windows and what you can use

00:05:52,550 --> 00:05:56,810
it with gas fish so you can connect to a

00:05:54,620 --> 00:06:00,169
new so file modify the visa file and

00:05:56,810 --> 00:06:01,970
write it you can use it over short stack

00:06:00,169 --> 00:06:03,620
so if you are ready have a search

00:06:01,970 --> 00:06:05,390
infrastructure like I Drive for the

00:06:03,620 --> 00:06:07,820
glass-top project and if you want to

00:06:05,390 --> 00:06:10,580
just get rid of this where you can start

00:06:07,820 --> 00:06:13,160
with unstable over the bus and because

00:06:10,580 --> 00:06:14,630
well it will not be a good right Nick

00:06:13,160 --> 00:06:16,220
dork if you didn't speak about the car

00:06:14,630 --> 00:06:18,500
you can also use it to connect directly

00:06:16,220 --> 00:06:20,060
to a docker container and modify the

00:06:18,500 --> 00:06:22,040
inside of the container which is a

00:06:20,060 --> 00:06:26,510
complete violation of the immutable

00:06:22,040 --> 00:06:30,110
point support but I do not care and the

00:06:26,510 --> 00:06:32,180
last tip is where the last tip is not so

00:06:30,110 --> 00:06:34,160
impressive but I don't have time it's

00:06:32,180 --> 00:06:37,669
basically that you are not forced to

00:06:34,160 --> 00:06:41,030
declare everything directly you can add

00:06:37,669 --> 00:06:43,190
your own aust like I can decide to make

00:06:41,030 --> 00:06:45,470
a playbook that connect to a remote oh

00:06:43,190 --> 00:06:47,360
that I will not manage but I can still

00:06:45,470 --> 00:06:49,970
add the host and make sure that once

00:06:47,360 --> 00:06:52,340
you'll connect with choosing delegate to

00:06:49,970 --> 00:06:55,010
and remote user and I don't know people

00:06:52,340 --> 00:06:59,419
can wait from that that you can use a

00:06:55,010 --> 00:07:01,760
dose module and that's it if you have a

00:06:59,419 --> 00:07:03,530
question but it's a lightning talk so

00:07:01,760 --> 00:07:05,840
wait for me outside and if you want to

00:07:03,530 --> 00:07:07,760
contact me since the same set my email

00:07:05,840 --> 00:07:10,930
my IRC no Twitter no Facebook no

00:07:07,760 --> 00:07:10,930
nicotine thanks for listening

00:07:20,010 --> 00:07:28,720
yeah okay thank you that was very fast

00:07:25,290 --> 00:07:34,210
yeah very lacking ok next one is Yakub

00:07:28,720 --> 00:07:42,220
or Alexander if he showed up ok then

00:07:34,210 --> 00:07:46,140
Tomaj then we have to repeat this like

00:07:42,220 --> 00:07:46,140
three times both of you guys

00:08:04,650 --> 00:08:11,080
okay hello my name is Thomas Cochran and

00:08:08,080 --> 00:08:13,690
i work at ICT department and check

00:08:11,080 --> 00:08:16,350
technical university and my lightning

00:08:13,690 --> 00:08:20,470
talk is called fun with Cooper Nettie's

00:08:16,350 --> 00:08:23,500
sorry how we get to the Coburn at ease

00:08:20,470 --> 00:08:25,330
we have the prehistoric era which we are

00:08:23,500 --> 00:08:28,240
using a bare metal machines and

00:08:25,330 --> 00:08:31,420
deploying vector machines manually and

00:08:28,240 --> 00:08:34,419
this horrible stuff then we discovered

00:08:31,420 --> 00:08:37,720
that we need more retro machines and

00:08:34,419 --> 00:08:41,250
deploy them faster so we we started to

00:08:37,720 --> 00:08:44,440
use opennebula and then we decided that

00:08:41,250 --> 00:08:46,180
we don't love our virtual machines we

00:08:44,440 --> 00:08:48,550
just want to throw them away and with

00:08:46,180 --> 00:08:54,220
the front one and now we are playing

00:08:48,550 --> 00:08:56,500
with containers and cover Nettie's our

00:08:54,220 --> 00:08:59,430
deployment is very smart we have just to

00:08:56,500 --> 00:09:02,590
cooperate these nodes and one master and

00:08:59,430 --> 00:09:06,340
fury ups I think it's to our free apps

00:09:02,590 --> 00:09:09,820
currently and but the deployment is

00:09:06,340 --> 00:09:11,760
backed by the safe storage and this safe

00:09:09,820 --> 00:09:14,860
storage is running on seven servers

00:09:11,760 --> 00:09:18,780
which means that we need 10 servers to

00:09:14,860 --> 00:09:25,990
run our small deployment of communities

00:09:18,780 --> 00:09:28,660
sorry yeah that's the map of our our

00:09:25,990 --> 00:09:31,630
network you can see here that we have

00:09:28,660 --> 00:09:35,380
the two physical note its leg are called

00:09:31,630 --> 00:09:38,110
i 1 and i 2 and i must assert or mushy

00:09:35,380 --> 00:09:41,140
and it's running the controlling

00:09:38,110 --> 00:09:43,630
components of coburn a tease every

00:09:41,140 --> 00:09:46,660
component of co parenthesis runs in

00:09:43,630 --> 00:09:49,270
container except the queue blood while i

00:09:46,660 --> 00:09:51,100
will talk about it later and we are

00:09:49,270 --> 00:09:55,420
using safe storage for a persistent data

00:09:51,100 --> 00:10:00,360
and murdering demon it's running OS pfn

00:09:55,420 --> 00:10:00,360
and distributing routes to other servers

00:10:00,390 --> 00:10:05,410
but the image gets a little more

00:10:03,130 --> 00:10:09,190
complicated when we started to think

00:10:05,410 --> 00:10:11,730
about the high availability and falter

00:10:09,190 --> 00:10:14,970
and you can see that the

00:10:11,730 --> 00:10:18,500
there is I want and I too but there are

00:10:14,970 --> 00:10:22,440
so many links and so many switches and

00:10:18,500 --> 00:10:24,959
the image is inverted so everything

00:10:22,440 --> 00:10:26,639
which is yellow is right and it means

00:10:24,959 --> 00:10:34,430
that we are missing it it's not it's not

00:10:26,639 --> 00:10:37,440
done this way the most important thing

00:10:34,430 --> 00:10:41,480
we need in Coober notice is so

00:10:37,440 --> 00:10:45,389
persistent storage because as one

00:10:41,480 --> 00:10:48,540
openshift developer called us we are the

00:10:45,389 --> 00:10:52,620
crazy guys running mysql databases in

00:10:48,540 --> 00:10:55,139
containers and from my point of view and

00:10:52,620 --> 00:10:58,740
FSN I skazhi really sucks because it's

00:10:55,139 --> 00:11:01,470
the center point of fire and the huge

00:10:58,740 --> 00:11:03,870
bottleneck and if any if this server

00:11:01,470 --> 00:11:07,050
goes down then your whole stretch is

00:11:03,870 --> 00:11:09,870
down so we are using safe as i said

00:11:07,050 --> 00:11:15,720
before and we are using a LBD plugin

00:11:09,870 --> 00:11:18,630
cooper Nettie's but it's not as easy as

00:11:15,720 --> 00:11:21,510
it may looks because level of pressure

00:11:18,630 --> 00:11:24,329
on just one proxy it's your engine X the

00:11:21,510 --> 00:11:26,550
application and database but when i try

00:11:24,329 --> 00:11:29,339
to deploy it in copyright communities i

00:11:26,550 --> 00:11:31,500
have to put a cuckoo cuckoo proxy be

00:11:29,339 --> 00:11:36,180
behind this behind these three

00:11:31,500 --> 00:11:39,089
containers but it in production it has

00:11:36,180 --> 00:11:43,589
many many problems because the up

00:11:39,089 --> 00:11:46,560
container nose get static assets and i

00:11:43,589 --> 00:11:48,870
need to move this static assets from ab

00:11:46,560 --> 00:11:52,319
container to proxy container there are

00:11:48,870 --> 00:11:55,110
some CSS files and stuff like this so i

00:11:52,319 --> 00:11:59,310
need another fair there which is used

00:11:55,110 --> 00:12:03,690
amperior plug-in and i need this this

00:11:59,310 --> 00:12:08,279
book will call to exact comment which is

00:12:03,690 --> 00:12:11,040
used for copying the shared assets from

00:12:08,279 --> 00:12:13,589
app to proxy there is a shared area

00:12:11,040 --> 00:12:16,560
which is mounted in proxies or as a nap

00:12:13,589 --> 00:12:19,620
so just one container with up yet i

00:12:16,560 --> 00:12:22,710
think five containers any cooper natives

00:12:19,620 --> 00:12:28,230
before or after deploying and

00:12:22,710 --> 00:12:31,290
there are sorry there are because we are

00:12:28,230 --> 00:12:35,190
running databases in containers we need

00:12:31,290 --> 00:12:37,860
to pick up them sometimes and we are

00:12:35,190 --> 00:12:40,740
using bakula and it makes even more

00:12:37,860 --> 00:12:43,740
difficult because in every pot must be

00:12:40,740 --> 00:12:47,250
running baklava lehman and this foul

00:12:43,740 --> 00:12:51,510
demon must be able to communicate with

00:12:47,250 --> 00:12:55,080
the baccalà master and it make it even

00:12:51,510 --> 00:13:00,890
better even worse it used to connections

00:12:55,080 --> 00:13:03,990
in both ways so I have fun crazy crazy

00:13:00,890 --> 00:13:06,900
dream that I would like to use back up

00:13:03,990 --> 00:13:09,830
in a string way the same way as we are

00:13:06,900 --> 00:13:13,890
using for streaming coco rocks or

00:13:09,830 --> 00:13:16,500
seeming cooper Nettie's locks but i

00:13:13,890 --> 00:13:19,380
would like to use my eyes fell down and

00:13:16,500 --> 00:13:21,630
put it somewhere in depth back upstream

00:13:19,380 --> 00:13:26,300
or something like this and i don't want

00:13:21,630 --> 00:13:31,170
to care because Bachrach containers

00:13:26,300 --> 00:13:33,800
sorry is then is necessary to configure

00:13:31,170 --> 00:13:37,020
it and the to take care of the

00:13:33,800 --> 00:13:40,980
networking and when I was preparing the

00:13:37,020 --> 00:13:43,980
presentation they did I get really i

00:13:40,980 --> 00:13:48,590
think really crazy idea that i can use

00:13:43,980 --> 00:13:51,420
my favor mysqldump and put it into the

00:13:48,590 --> 00:13:54,480
standard output which means that this

00:13:51,420 --> 00:13:56,700
mysqldump will be saved in cooper

00:13:54,480 --> 00:14:00,630
Nettie's locks and it's kind of backup

00:13:56,700 --> 00:14:03,330
and i can recover it later but i didn't

00:14:00,630 --> 00:14:06,090
try it maybe if you if you have tried

00:14:03,330 --> 00:14:10,620
you can you can tell me whether it's

00:14:06,090 --> 00:14:13,230
worth or not and we sometimes need

00:14:10,620 --> 00:14:18,900
monitor servers because if it's not

00:14:13,230 --> 00:14:21,000
running that you know and our current

00:14:18,900 --> 00:14:23,280
status is my drink is not very very very

00:14:21,000 --> 00:14:26,190
good because we are monitoring just

00:14:23,280 --> 00:14:29,010
physical servers whether they help they

00:14:26,190 --> 00:14:31,070
are good in good condition and we are

00:14:29,010 --> 00:14:35,610
monitoring only the cupola status

00:14:31,070 --> 00:14:37,860
because it's not very easy to

00:14:35,610 --> 00:14:41,100
go into the communities and monitor each

00:14:37,860 --> 00:14:43,860
class each pot and the container we are

00:14:41,100 --> 00:14:47,370
using rock solid solution based on

00:14:43,860 --> 00:14:51,269
nagios and observe you but it's not as

00:14:47,370 --> 00:14:53,550
easy as i would like to the reconfigured

00:14:51,269 --> 00:14:59,670
is rock solid because you cannot move

00:14:53,550 --> 00:15:02,490
rock very fast so our current solution

00:14:59,670 --> 00:15:05,339
is not able to make changes in

00:15:02,490 --> 00:15:09,269
monitoring in seconds because post go

00:15:05,339 --> 00:15:14,510
down and up so we are not we are

00:15:09,269 --> 00:15:14,510
currently not monitoring the pots itself

00:15:14,779 --> 00:15:24,690
sorry and another favorite thing is 80

00:15:21,329 --> 00:15:27,540
CD if you have ever tried to run 80 CD

00:15:24,690 --> 00:15:31,730
that you know that not very easy to

00:15:27,540 --> 00:15:35,940
monitor it there is so many metrics and

00:15:31,730 --> 00:15:40,140
it's not just up and down and luckiest

00:15:35,940 --> 00:15:42,449
want free statuses ok warning and

00:15:40,140 --> 00:15:46,769
critical and eighty CD has so many

00:15:42,449 --> 00:15:55,250
statuses that I currently didn't write

00:15:46,769 --> 00:15:57,959
host script to monitor all metrics ok

00:15:55,250 --> 00:15:59,760
it's all thank you for listening if you

00:15:57,959 --> 00:16:02,459
have any questions and we have time i

00:15:59,760 --> 00:16:04,709
can i can try to answer it now or just

00:16:02,459 --> 00:16:08,990
catch me outside and we can talk about

00:16:04,709 --> 00:16:08,990
the copper Nettie's later thank

00:16:20,100 --> 00:16:30,610
Thank You Tomas and next I think it's is

00:16:24,670 --> 00:16:34,990
to Nevada do you have slides yes right

00:16:30,610 --> 00:16:38,370
right okay and as I sign or did you show

00:16:34,990 --> 00:16:38,370
up are you here

00:17:25,970 --> 00:17:32,270
a greeting everyone so today morning I

00:17:29,720 --> 00:17:35,590
give a deep dive workshop on the topic

00:17:32,270 --> 00:17:39,799
are comparing the different organs tool

00:17:35,590 --> 00:17:41,720
for containers so this is the slide of

00:17:39,799 --> 00:17:44,929
the github page which i have used for

00:17:41,720 --> 00:17:49,880
the workshop today you can just go back

00:17:44,929 --> 00:17:51,980
and try if you want to dig more into so

00:17:49,880 --> 00:17:56,179
running containers on a single machine

00:17:51,980 --> 00:17:57,380
is not something what is me they're

00:17:56,179 --> 00:17:59,150
meant for so the you need to run

00:17:57,380 --> 00:18:02,840
containers in a production where you

00:17:59,150 --> 00:18:05,990
have multiple machines working in a

00:18:02,840 --> 00:18:08,799
cluster and then you should be able to

00:18:05,990 --> 00:18:13,970
deploy your containers in production

00:18:08,799 --> 00:18:17,570
with features like replication rolling

00:18:13,970 --> 00:18:19,520
updates and all those features which you

00:18:17,570 --> 00:18:21,770
need in the real cluster approach

00:18:19,520 --> 00:18:25,130
environment so that's where our

00:18:21,770 --> 00:18:28,909
containers are going to be deployed or

00:18:25,130 --> 00:18:33,100
the real use case will be there so why

00:18:28,909 --> 00:18:36,230
we need them because first of all we

00:18:33,100 --> 00:18:38,510
kind of get rid of a lower catalyst we

00:18:36,230 --> 00:18:40,190
want to move to all the pad so that if

00:18:38,510 --> 00:18:41,870
some application is very complex you

00:18:40,190 --> 00:18:46,190
want to make sure that becomes very easy

00:18:41,870 --> 00:18:49,970
and you should be able to deploy them

00:18:46,190 --> 00:18:52,460
and very easily a rather than waiting

00:18:49,970 --> 00:18:54,740
for some complex operation to happen we

00:18:52,460 --> 00:18:58,370
want zero nine zero downtime you are not

00:18:54,740 --> 00:19:00,500
auto scaling and we want eventually

00:18:58,370 --> 00:19:02,059
reach to a place where we can have

00:19:00,500 --> 00:19:04,010
multiple cloud providers and we are

00:19:02,059 --> 00:19:06,140
managing all of that from one command

00:19:04,010 --> 00:19:07,640
line so there are different tools

00:19:06,140 --> 00:19:10,520
already available which are kind of

00:19:07,640 --> 00:19:13,400
helping out to the orchestration suam

00:19:10,520 --> 00:19:16,190
October Nettie's mesos Diego Apache

00:19:13,400 --> 00:19:17,780
Aurora amazon ecs as will contain a

00:19:16,190 --> 00:19:20,900
service so they can all help you out to

00:19:17,780 --> 00:19:23,240
move your containers in clustered

00:19:20,900 --> 00:19:26,870
environment so just want to briefly go

00:19:23,240 --> 00:19:31,820
or go about that what we needed to have

00:19:26,870 --> 00:19:35,690
those orchestration to be done so

00:19:31,820 --> 00:19:37,549
basically we need first of all multiple

00:19:35,690 --> 00:19:39,740
nodes to be part of cluster so as we

00:19:37,549 --> 00:19:42,260
know that any any

00:19:39,740 --> 00:19:44,540
whenever you want to deploy cluster you

00:19:42,260 --> 00:19:46,100
need definitely in multiple nodes there

00:19:44,540 --> 00:19:49,300
would be some of them would be a master

00:19:46,100 --> 00:19:51,920
saw them would be the slaves of the

00:19:49,300 --> 00:19:54,470
other minions what he called them so

00:19:51,920 --> 00:19:57,740
master can basically go and say okay now

00:19:54,470 --> 00:20:00,530
deploy some containers on some some some

00:19:57,740 --> 00:20:04,040
nodes and all that we come to moody

00:20:00,530 --> 00:20:06,350
telling that so you need somewhere to

00:20:04,040 --> 00:20:08,750
identify that in a cluster environment

00:20:06,350 --> 00:20:10,309
which is master which is slave so you

00:20:08,750 --> 00:20:12,830
need some kind of mechanism to handle

00:20:10,309 --> 00:20:14,990
that like in Dhaka swarm you have our

00:20:12,830 --> 00:20:18,260
token so that token you create the

00:20:14,990 --> 00:20:19,670
cluster and in that cluster once you get

00:20:18,260 --> 00:20:21,050
the cluster then they become part of the

00:20:19,670 --> 00:20:22,910
classes of basically the same

00:20:21,050 --> 00:20:24,800
environment you can have multiple Swan

00:20:22,910 --> 00:20:27,650
cluster but they will be identify with

00:20:24,800 --> 00:20:31,010
different token ID in commodities you

00:20:27,650 --> 00:20:33,140
have master enslaves then we need a

00:20:31,010 --> 00:20:35,450
container engine to run on each one of

00:20:33,140 --> 00:20:38,540
the nodes which is going to host your

00:20:35,450 --> 00:20:42,050
applications so we have dr. rocket this

00:20:38,540 --> 00:20:43,970
is going to host your random contention

00:20:42,050 --> 00:20:45,590
on that and about that then you need a

00:20:43,970 --> 00:20:47,240
single source of truth about

00:20:45,590 --> 00:20:50,000
configuration and other details for the

00:20:47,240 --> 00:20:51,590
cluster so it's like if you are if

00:20:50,000 --> 00:20:55,850
you're saying that I want to run five

00:20:51,590 --> 00:20:58,220
replicas of my of my of my application

00:20:55,850 --> 00:21:00,610
then there should be five of them they

00:20:58,220 --> 00:21:05,000
should not be there for year three or

00:21:00,610 --> 00:21:06,559
less so so so you need some kind of key

00:21:05,000 --> 00:21:08,720
value pair mechanism through which

00:21:06,559 --> 00:21:11,320
everybody can refer ensalada yoke is am

00:21:08,720 --> 00:21:15,080
I the right what am I the right

00:21:11,320 --> 00:21:16,550
configuration what I want to be so the

00:21:15,080 --> 00:21:18,950
key value pair helps you out with that

00:21:16,550 --> 00:21:22,340
and another other for other users also

00:21:18,950 --> 00:21:24,350
so you have hcd console are those kind

00:21:22,340 --> 00:21:27,770
of tools which is being available for

00:21:24,350 --> 00:21:31,070
you to manage that single source of

00:21:27,770 --> 00:21:33,650
truth then when you try to move to the

00:21:31,070 --> 00:21:35,630
containers with multiple machines you

00:21:33,650 --> 00:21:37,250
would want container from one machine to

00:21:35,630 --> 00:21:39,650
talk to the configure on the other

00:21:37,250 --> 00:21:41,630
machine in the node so for that you need

00:21:39,650 --> 00:21:46,700
to have some kind of whole network or

00:21:41,630 --> 00:21:49,040
some kind of way to basically reached to

00:21:46,700 --> 00:21:52,309
one container to another point so how do

00:21:49,040 --> 00:21:53,600
you do that so slightly VX land the

00:21:52,309 --> 00:21:56,809
different deterring plugins

00:21:53,600 --> 00:21:59,570
from a docker stock and available

00:21:56,809 --> 00:22:01,059
network then we have we've tell you the

00:21:59,570 --> 00:22:05,320
different solutions has been built

00:22:01,059 --> 00:22:05,320
through which you can solve that problem

00:22:06,070 --> 00:22:10,070
then you have a jeweler to share doing

00:22:08,720 --> 00:22:12,169
the containers on the node so basically

00:22:10,070 --> 00:22:14,480
you would like to have some kind of a

00:22:12,169 --> 00:22:16,429
scheduler which would define that how my

00:22:14,480 --> 00:22:18,410
nodes homework until I go to deployed on

00:22:16,429 --> 00:22:21,679
particular nodes for example you can say

00:22:18,410 --> 00:22:24,169
that put this particular part

00:22:21,679 --> 00:22:27,020
application on the node which has SSDs

00:22:24,169 --> 00:22:29,150
so you need some kind of mechanism to

00:22:27,020 --> 00:22:31,880
identify that so she jeweler would help

00:22:29,150 --> 00:22:33,919
you out in figuring that out that if you

00:22:31,880 --> 00:22:37,120
have put some kind of constraint there

00:22:33,919 --> 00:22:39,799
that should be able to handle that then

00:22:37,120 --> 00:22:41,840
once you have prepared our application

00:22:39,799 --> 00:22:43,580
now containers are mortals container can

00:22:41,840 --> 00:22:44,929
come and go any point of time so now

00:22:43,580 --> 00:22:47,750
let's see running container earlier on

00:22:44,929 --> 00:22:49,760
machine one antenna dice it's comes back

00:22:47,750 --> 00:22:51,799
on machine too but your application

00:22:49,760 --> 00:22:53,210
should not be worrying or the client

00:22:51,799 --> 00:22:55,340
which is accessing that particular

00:22:53,210 --> 00:22:57,010
application not be worried about that so

00:22:55,340 --> 00:23:02,150
so there should be a service discovery

00:22:57,010 --> 00:23:04,970
mechanism through which a cluster should

00:23:02,150 --> 00:23:08,179
know that how I am going to change my

00:23:04,970 --> 00:23:09,679
path or basically the correct path to

00:23:08,179 --> 00:23:12,530
the correct correct container which came

00:23:09,679 --> 00:23:14,780
on different node then you need some

00:23:12,530 --> 00:23:17,059
kind of a proxy and as a proxy mechanism

00:23:14,780 --> 00:23:18,679
sitting on top of your cluster so let us

00:23:17,059 --> 00:23:20,480
say you are on you are a client you just

00:23:18,679 --> 00:23:22,580
want to connect to one endpoint and in

00:23:20,480 --> 00:23:25,240
the back end you would my twittering

00:23:22,580 --> 00:23:27,590
five containers you might move to

00:23:25,240 --> 00:23:29,270
hundreds of them so whatever would

00:23:27,590 --> 00:23:30,890
happen client should not be aware of

00:23:29,270 --> 00:23:32,179
that client should be just accessing the

00:23:30,890 --> 00:23:36,049
one endpoint and that should be able to

00:23:32,179 --> 00:23:37,280
do that and once you have that then you

00:23:36,049 --> 00:23:41,990
would also want to have some kind of

00:23:37,280 --> 00:23:43,130
shared storage so for example you should

00:23:41,990 --> 00:23:44,900
container moves or one machine to

00:23:43,130 --> 00:23:48,049
another machine and if slighting some

00:23:44,900 --> 00:23:49,580
data on the disk then the same data

00:23:48,049 --> 00:23:53,000
should be available on the other machine

00:23:49,580 --> 00:23:55,970
so that that should be able to there

00:23:53,000 --> 00:23:57,350
should be no interruption in the writing

00:23:55,970 --> 00:23:59,030
as well as the dealer should be there

00:23:57,350 --> 00:24:00,650
what you have been writing there so what

00:23:59,030 --> 00:24:04,010
you have some kind of shared volume like

00:24:00,650 --> 00:24:05,059
glossary FSF a Flocker they are

00:24:04,010 --> 00:24:07,490
different plugins which would help you

00:24:05,059 --> 00:24:09,770
out to do this kind of

00:24:07,490 --> 00:24:11,900
shared volume bound on both the nodes in

00:24:09,770 --> 00:24:13,790
the cluster and once container moves for

00:24:11,900 --> 00:24:15,350
a one would rather note the data is

00:24:13,790 --> 00:24:17,690
already there because of a shared

00:24:15,350 --> 00:24:20,440
storage now these are kind of broad

00:24:17,690 --> 00:24:22,490
features what we need in the different

00:24:20,440 --> 00:24:24,710
scheduling or different orchestration

00:24:22,490 --> 00:24:25,670
mechanism what already available now

00:24:24,710 --> 00:24:31,990
just quickly see what a difference

00:24:25,670 --> 00:24:35,690
between them in communities swamp and

00:24:31,990 --> 00:24:43,850
advances so we'll just go and quickly

00:24:35,690 --> 00:24:45,850
just look at them so Swami uses a first

00:24:43,850 --> 00:24:47,870
of all multi-part note is common thing

00:24:45,850 --> 00:24:52,190
Swami this token I you to identify the

00:24:47,870 --> 00:24:54,620
cluster currently easy says a docker as

00:24:52,190 --> 00:24:58,880
an engine to a engine available to run

00:24:54,620 --> 00:25:03,470
the around the containers some has

00:24:58,880 --> 00:25:05,420
different a key value pair plugins so

00:25:03,470 --> 00:25:08,059
basically you can say I want to at CD

00:25:05,420 --> 00:25:09,830
Council zookeeper volte be whatever you

00:25:08,059 --> 00:25:12,200
want to use you can just do plug and

00:25:09,830 --> 00:25:17,000
play with that that's available with

00:25:12,200 --> 00:25:18,050
docker swamp there are there's a Lib

00:25:17,000 --> 00:25:20,570
network which would give you different

00:25:18,050 --> 00:25:22,010
drivers but it all those upward

00:25:20,570 --> 00:25:25,120
different network regular plugins like V

00:25:22,010 --> 00:25:28,570
when calico less supported in a swamp

00:25:25,120 --> 00:25:31,880
and for the scheduling part you have a

00:25:28,570 --> 00:25:35,210
couple of filters filters and strategies

00:25:31,880 --> 00:25:39,340
what you can follow like nodes you can

00:25:35,210 --> 00:25:43,670
have some node filter you can have some

00:25:39,340 --> 00:25:45,410
pent filters based on a note or filter

00:25:43,670 --> 00:25:46,970
where the containers like I want to run

00:25:45,410 --> 00:25:48,790
this container only when my DB is

00:25:46,970 --> 00:25:51,080
running on this node something like that

00:25:48,790 --> 00:25:53,240
you can have the container and different

00:25:51,080 --> 00:25:55,190
strategies like and say spread my nodes

00:25:53,240 --> 00:25:58,309
start a continuous across different

00:25:55,190 --> 00:26:00,050
machines or you can say just a big the

00:25:58,309 --> 00:26:02,830
one note and fill it first and then move

00:26:00,050 --> 00:26:09,350
to some someone else you can do a random

00:26:02,830 --> 00:26:12,050
discovery there is you can use something

00:26:09,350 --> 00:26:15,170
called interlock or which is there to

00:26:12,050 --> 00:26:17,210
have an extra one basically da kasam by

00:26:15,170 --> 00:26:19,760
default as a as a final they don't ride

00:26:17,210 --> 00:26:21,020
by default our internal dns server or

00:26:19,760 --> 00:26:23,270
solution I can server to square

00:26:21,020 --> 00:26:25,760
mechanism other than putting the details

00:26:23,270 --> 00:26:27,560
of the containers on the atc host file

00:26:25,760 --> 00:26:32,020
but there is work in progress through

00:26:27,560 --> 00:26:35,300
which you can have internal dns or

00:26:32,020 --> 00:26:39,800
service discovery mechanism like

00:26:35,300 --> 00:26:41,960
interlock there so yeah sorry the

00:26:39,800 --> 00:26:46,730
interlock can also work as a hf proxy so

00:26:41,960 --> 00:26:50,060
hf proxies you need to have an h aprox

00:26:46,730 --> 00:26:52,640
if you want to do load balancing in with

00:26:50,060 --> 00:26:55,040
song in there are plugins like Lester

00:26:52,640 --> 00:26:57,760
face rec safe locker which you can use

00:26:55,040 --> 00:26:57,760
with some

00:27:21,330 --> 00:27:33,840
oh my do the setting is that form yes

00:27:31,480 --> 00:27:33,840
sure

00:27:43,299 --> 00:27:51,249
oh my username is incorrect nkechi re i

00:27:48,610 --> 00:27:54,820
just write it down somewhere can you

00:27:51,249 --> 00:28:10,149
help me out someone I'm really sorry

00:27:54,820 --> 00:28:13,419
about this I'll like space and we're any

00:28:10,149 --> 00:28:16,179
kind of fan but did Alexander or jakub

00:28:13,419 --> 00:28:19,029
show up or I we can give give more time

00:28:16,179 --> 00:28:22,179
here so i just want to know no then they

00:28:19,029 --> 00:28:23,889
didn't show up so we'll keep will give

00:28:22,179 --> 00:28:30,869
you three more minutes to fight with

00:28:23,889 --> 00:28:37,450
norm not me ok october Nettie's ah

00:28:30,869 --> 00:28:39,570
quickly we'll just finish off coupon EG

00:28:37,450 --> 00:28:42,279
has master enslaves it can support

00:28:39,570 --> 00:28:46,210
doctor right now but rocket work is in

00:28:42,279 --> 00:28:49,419
progress it currently has a value Peres

00:28:46,210 --> 00:28:51,039
hcd it can have flannel open we switch

00:28:49,419 --> 00:28:55,899
we've calico as a plug-in for the

00:28:51,039 --> 00:28:57,580
networking and in the scheduler you

00:28:55,899 --> 00:28:59,889
would have predicates and priorities to

00:28:57,580 --> 00:29:02,019
decide where you want to run your nodes

00:28:59,889 --> 00:29:04,480
or containers as well as you can have

00:29:02,019 --> 00:29:09,909
some kind of like an open state we have

00:29:04,480 --> 00:29:11,109
a different kind of strategies like SSD

00:29:09,909 --> 00:29:12,730
strategy so basically put this

00:29:11,109 --> 00:29:16,169
particular container on a machine which

00:29:12,730 --> 00:29:20,109
has SSDs different zone and all that are

00:29:16,169 --> 00:29:21,879
then you have inbuilt clustered dns

00:29:20,109 --> 00:29:23,619
server which is so you can have an

00:29:21,879 --> 00:29:26,220
add-on in the in the coupon eighties

00:29:23,619 --> 00:29:30,249
which can help your resource discovery

00:29:26,220 --> 00:29:32,799
and then HEV rocks is built in with with

00:29:30,249 --> 00:29:35,919
commodities you have different volume

00:29:32,799 --> 00:29:37,389
support with commodities and there is

00:29:35,919 --> 00:29:43,659
the presentation which you want to kind

00:29:37,389 --> 00:29:46,379
of go and look back i want to go one

00:29:43,659 --> 00:29:46,379
more time

00:29:58,370 --> 00:30:04,110
yep

00:30:00,809 --> 00:30:05,669
so this is the architecture for mesos

00:30:04,110 --> 00:30:08,820
I'm just going to skip that for time

00:30:05,669 --> 00:30:11,279
being so with okay out of time okay so

00:30:08,820 --> 00:30:19,490
you just go and look at this up so yeah

00:30:11,279 --> 00:30:19,490
github / NK GRE know yeah okay thank you

00:30:29,860 --> 00:30:35,690
okay thanks everybody for listening and

00:30:32,480 --> 00:30:38,990
for participating please do rate the

00:30:35,690 --> 00:30:41,600
lightning talks and talks and we hope to

00:30:38,990 --> 00:30:43,810
see you here tomorrow that's it for

00:30:41,600 --> 00:30:43,810
today

00:49:36,829 --> 00:49:38,890

YouTube URL: https://www.youtube.com/watch?v=9Xd_NBzPKsc


