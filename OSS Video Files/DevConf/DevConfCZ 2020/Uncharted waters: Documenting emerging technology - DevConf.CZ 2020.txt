Title: Uncharted waters: Documenting emerging technology - DevConf.CZ 2020
Publication date: 2020-03-26
Playlist: DevConfCZ 2020
Description: 
	Speakers: Andrew Burden

We can't help but feel the lure towards the hot new thing, especially when it comes to technology. Part of that lure is the breaking of ground, venturing into the unknown, and working on solutions to new problems. But a lot of the same things that make emerging technology fun and exciting to work on are exactly why it can be difficult to document. These challenges are quite different to those associated with mature products.

This talk is for anyone working on new products and emerging technology, or just interested in learning about fast-moving documentation. It is for the developer as much as it is for the writer, since it usually falls to them to write the early docs before a writer is added to the team.

This session will cover:
- Evolution of a docs set
- Pitfalls and obstacles to be aware of
- Some solutions
- Some kind words to anyone else in my position

[ https://sched.co/YOyU ]

--
Recordings of talks at DevConf are a community effort. Unfortunately not everything works perfectly every time. If you're interested in helping us improve, let us know.
Captions: 
	00:00:00,650 --> 00:00:06,920
hello my name is Andrew Bevin I am a

00:00:04,009 --> 00:00:10,010
technical writer for Red Hat and for the

00:00:06,920 --> 00:00:14,210
last about four years I've been working

00:00:10,010 --> 00:00:15,530
on phenomenally romantic technologies

00:00:14,210 --> 00:00:18,890
documenting their technology in the

00:00:15,530 --> 00:00:23,600
container space specifically so what do

00:00:18,890 --> 00:00:25,880
I mean by tech magic technology well for

00:00:23,600 --> 00:00:28,310
this talk what I mean is working on

00:00:25,880 --> 00:00:30,439
something that is Cray release something

00:00:28,310 --> 00:00:32,630
that used the documentation especially

00:00:30,439 --> 00:00:35,899
starts with nothing and you're creating

00:00:32,630 --> 00:00:37,820
something pre-release technology like

00:00:35,899 --> 00:00:40,040
keys maybe four or five years ago kind

00:00:37,820 --> 00:00:43,910
of thing something that is at the

00:00:40,040 --> 00:00:45,980
frontier and rapidly evolving and giving

00:00:43,910 --> 00:00:47,960
changing very quickly the landscape

00:00:45,980 --> 00:00:50,120
where a feature might be obsolete by the

00:00:47,960 --> 00:00:52,489
time it's released and certainly by the

00:00:50,120 --> 00:00:55,579
time its documents so I'm gonna use the

00:00:52,489 --> 00:00:58,070
term just technology threat took and

00:00:55,579 --> 00:01:01,670
please replace that with product project

00:00:58,070 --> 00:01:05,359
and you know whatever is for your

00:01:01,670 --> 00:01:07,819
circumstance out of you call it's that

00:01:05,359 --> 00:01:09,560
breaking of ground that first one or

00:01:07,819 --> 00:01:12,049
more releases that make something out of

00:01:09,560 --> 00:01:15,200
nothing in a mass term of chaos and

00:01:12,049 --> 00:01:18,380
stress and few if any dog systems in

00:01:15,200 --> 00:01:20,240
place to lean on man before we kind of

00:01:18,380 --> 00:01:22,189
get to that that interesting part of it

00:01:20,240 --> 00:01:24,380
I want to kind of have a quick look at

00:01:22,189 --> 00:01:26,200
like a hypothetical lifecycle of how we

00:01:24,380 --> 00:01:29,779
get to that point

00:01:26,200 --> 00:01:32,299
so again if technology is born from the

00:01:29,779 --> 00:01:34,549
hearts and minds of a single or a small

00:01:32,299 --> 00:01:37,099
group of developers and through infancy

00:01:34,549 --> 00:01:38,479
it attracts more developers it grows and

00:01:37,099 --> 00:01:40,509
maybe sprouts and pages in the

00:01:38,479 --> 00:01:43,759
documentation here if it exists

00:01:40,509 --> 00:01:46,639
typically focuses on helping developers

00:01:43,759 --> 00:01:48,229
contribute to the project by necessity

00:01:46,639 --> 00:01:49,489
you need to have strong foundational

00:01:48,229 --> 00:01:52,759
knowledge in order to be able to

00:01:49,489 --> 00:01:55,729
contribute and the guts reflect that it

00:01:52,759 --> 00:01:57,469
shifts into adolescence and this is

00:01:55,729 --> 00:01:59,539
where things get interesting like a

00:01:57,469 --> 00:02:02,509
teenager it grows quickly and it changes

00:01:59,539 --> 00:02:04,090
quickly teams form features evolve the

00:02:02,509 --> 00:02:06,169
technology pivots

00:02:04,090 --> 00:02:08,310
documentation then is worked on by their

00:02:06,169 --> 00:02:11,340
growing list of developments maybe

00:02:08,310 --> 00:02:13,020
handed by each team and the duck set

00:02:11,340 --> 00:02:15,989
involves it no longer focuses on

00:02:13,020 --> 00:02:18,000
contributed ups but also on UNIDO public

00:02:15,989 --> 00:02:20,459
because it's gotten to a point where you

00:02:18,000 --> 00:02:22,200
have the desired outside users able to

00:02:20,459 --> 00:02:23,880
come in and use the technology it's not

00:02:22,200 --> 00:02:27,090
just contributes but there still remains

00:02:23,880 --> 00:02:29,220
a development mindset in the Ducks and

00:02:27,090 --> 00:02:30,599
you still need a developer mindset to

00:02:29,220 --> 00:02:32,459
use the product because it's still in

00:02:30,599 --> 00:02:34,290
its adolescence and the user still

00:02:32,459 --> 00:02:36,120
requires some foundational experience in

00:02:34,290 --> 00:02:38,910
order to be able to get you going and

00:02:36,120 --> 00:02:40,080
these Ducks are patchy and it's not

00:02:38,910 --> 00:02:42,390
because anyone's fault and I really

00:02:40,080 --> 00:02:43,860
don't like I'm not playing a blind gamer

00:02:42,390 --> 00:02:45,150
and then I don't even feel bad and kind

00:02:43,860 --> 00:02:47,730
of want to do the opposite in fact if

00:02:45,150 --> 00:02:50,750
you work in upstream documentation like

00:02:47,730 --> 00:02:54,299
that's right you're a bit of a legend

00:02:50,750 --> 00:02:56,340
and it's because it's written by a

00:02:54,299 --> 00:02:57,959
variety of people with a variety of

00:02:56,340 --> 00:02:59,610
experience in a variety of time

00:02:57,959 --> 00:03:02,430
constraints probably in a variety of

00:02:59,610 --> 00:03:04,230
languages but there's a general

00:03:02,430 --> 00:03:06,000
inconsistency and incompleteness in the

00:03:04,230 --> 00:03:09,030
ducks and it becomes clear that someone

00:03:06,000 --> 00:03:12,980
needs to focus on the ducks particularly

00:03:09,030 --> 00:03:12,980
in order to bring them up the snow oh

00:03:15,440 --> 00:03:21,420
I'll keep the fever because the

00:03:20,040 --> 00:03:24,470
adolescent technology wants to become

00:03:21,420 --> 00:03:27,720
adults in my analogy it wants to grow up

00:03:24,470 --> 00:03:29,970
now in a company like red hat or a large

00:03:27,720 --> 00:03:32,549
enough foundation like CN CF or SAP or

00:03:29,970 --> 00:03:35,640
something you might have a requisition

00:03:32,549 --> 00:03:37,590
for a specific docks asset and this is

00:03:35,640 --> 00:03:40,109
the beginning of what I call the lag

00:03:37,590 --> 00:03:42,030
period unless there's someone who could

00:03:40,109 --> 00:03:43,290
omit the jump onto that technology right

00:03:42,030 --> 00:03:45,120
away it's going to take time to find

00:03:43,290 --> 00:03:47,970
that resource it might be days weeks

00:03:45,120 --> 00:03:49,739
months all the while the technology is

00:03:47,970 --> 00:03:52,950
growing and that docks problem is

00:03:49,739 --> 00:03:54,690
expanding and the coordinated release

00:03:52,950 --> 00:03:56,549
has also meant the developers are less

00:03:54,690 --> 00:03:58,079
likely to be focusing on writing the

00:03:56,549 --> 00:03:59,340
upstream ducks you know they're trying

00:03:58,079 --> 00:04:02,069
to get that code ready for release

00:03:59,340 --> 00:04:04,709
ducks becomes less in priority so in the

00:04:02,069 --> 00:04:05,549
Ducks person joins they have to unboard

00:04:04,709 --> 00:04:07,109
with everything

00:04:05,549 --> 00:04:08,819
design and create the duck set and catch

00:04:07,109 --> 00:04:10,500
up that lag period of the upstream ducks

00:04:08,819 --> 00:04:12,810
all the while staring down the barrel of

00:04:10,500 --> 00:04:16,680
the lace which in my experience is one

00:04:12,810 --> 00:04:17,820
month to two months and in that one to

00:04:16,680 --> 00:04:19,579
two months you've found enough to cover

00:04:17,820 --> 00:04:21,259
the following

00:04:19,579 --> 00:04:23,900
discrepant scallop the release but from

00:04:21,259 --> 00:04:25,250
a technology and a dog's perspective you

00:04:23,900 --> 00:04:27,800
establish the dock structure what's done

00:04:25,250 --> 00:04:31,930
where it's going to live other details

00:04:27,800 --> 00:04:34,009
its deliverable and that can be heavily

00:04:31,930 --> 00:04:37,460
influenced by the constraints of what

00:04:34,009 --> 00:04:39,409
you're working with and on your schedule

00:04:37,460 --> 00:04:40,819
it's a no-brainer but you need to

00:04:39,409 --> 00:04:44,000
familiarize with the code freeze the

00:04:40,819 --> 00:04:46,159
dogs freeze the reviews etc understand

00:04:44,000 --> 00:04:47,870
the hard and soft time constraints in

00:04:46,159 --> 00:04:49,430
order to work with them and have a

00:04:47,870 --> 00:04:51,440
rudimentary sense of stability because

00:04:49,430 --> 00:04:53,419
there's no point documenting something

00:04:51,440 --> 00:04:55,909
it's just going to change next week so

00:04:53,419 --> 00:04:57,440
you gotta know your windows gonna meet

00:04:55,909 --> 00:04:59,629
with relevant people this might be

00:04:57,440 --> 00:05:01,280
joining food daily scrums weekly scrum

00:04:59,629 --> 00:05:03,409
of scrums sprint planning p.m. meetings

00:05:01,280 --> 00:05:04,849
onboarding progress reports demos

00:05:03,409 --> 00:05:07,490
what-have-you it's good stuff that's

00:05:04,849 --> 00:05:09,259
really valuable but it can wait vanity

00:05:07,490 --> 00:05:10,819
calendar time is precious they're gonna

00:05:09,259 --> 00:05:13,280
figure out that signal-to-noise ratio

00:05:10,819 --> 00:05:15,680
really quickly gonna learn the

00:05:13,280 --> 00:05:18,110
technology and the underlying technology

00:05:15,680 --> 00:05:20,629
fits required this is pretty obvious but

00:05:18,110 --> 00:05:23,110
what might not be of this is the scale

00:05:20,629 --> 00:05:25,699
and the breadth of that understanding

00:05:23,110 --> 00:05:28,099
I'm familiar design and write good

00:05:25,699 --> 00:05:30,889
documentation I need to have a solid

00:05:28,099 --> 00:05:32,509
understanding of the whole thing all the

00:05:30,889 --> 00:05:34,669
relevant moving parts in order to

00:05:32,509 --> 00:05:36,860
understand how to structure the content

00:05:34,669 --> 00:05:40,069
and how to get into the mind of the user

00:05:36,860 --> 00:05:41,870
so that I could provide enough

00:05:40,069 --> 00:05:44,090
information that they can confidently

00:05:41,870 --> 00:05:46,069
use the product but not so much

00:05:44,090 --> 00:05:47,990
information that I'm getting in their

00:05:46,069 --> 00:05:50,449
way I don't want to push them away from

00:05:47,990 --> 00:05:52,849
the product that's not my point

00:05:50,449 --> 00:05:55,870
and it's a fine balance and the only way

00:05:52,849 --> 00:05:58,940
that I find that I can do that is to

00:05:55,870 --> 00:06:00,289
trudge through the information which is

00:05:58,940 --> 00:06:02,360
in many different places and someone

00:06:00,289 --> 00:06:04,279
that doesn't even exist aside from them

00:06:02,360 --> 00:06:06,259
like the code some added that design

00:06:04,279 --> 00:06:08,180
Docs or maybe just in the heads of the

00:06:06,259 --> 00:06:09,889
people who are developing because it

00:06:08,180 --> 00:06:12,860
fell into that lag gap I mentioned

00:06:09,889 --> 00:06:14,569
earlier when I'm sorry you need to

00:06:12,860 --> 00:06:18,289
deploy the technology that's not a

00:06:14,569 --> 00:06:20,360
better way to learn than to do now this

00:06:18,289 --> 00:06:22,570
can be a huge time sink

00:06:20,360 --> 00:06:25,840
fun highway maybe saw that Network

00:06:22,570 --> 00:06:28,870
storage problems you know if your

00:06:25,840 --> 00:06:30,490
installed if it's a donger and in the

00:06:28,870 --> 00:06:33,160
peripheral technology on something like

00:06:30,490 --> 00:06:35,650
kidneys or openshift you need to install

00:06:33,160 --> 00:06:37,560
that get that working and then

00:06:35,650 --> 00:06:39,550
installing the technology on top of that

00:06:37,560 --> 00:06:41,380
which may be still having its

00:06:39,550 --> 00:06:43,450
installation method kind of figured out

00:06:41,380 --> 00:06:44,890
he spent hours trying to debug what has

00:06:43,450 --> 00:06:46,600
all the appearances of the network issue

00:06:44,890 --> 00:06:47,770
when it turns out there was a bug and

00:06:46,600 --> 00:06:50,260
still there all along

00:06:47,770 --> 00:06:52,690
so let's we've done in one month even

00:06:50,260 --> 00:06:54,520
into and the ground moves a bit under

00:06:52,690 --> 00:06:56,470
your feet and on top of that you're

00:06:54,520 --> 00:06:58,720
designing and creating content and

00:06:56,470 --> 00:07:01,150
having it reviewed and raising bugs and

00:06:58,720 --> 00:07:01,510
going back and forth in review a lot to

00:07:01,150 --> 00:07:03,730
do

00:07:01,510 --> 00:07:07,060
time is precious so what I'd like to

00:07:03,730 --> 00:07:08,830
cover now some pitfalls that I've

00:07:07,060 --> 00:07:12,100
identified over the years usually by

00:07:08,830 --> 00:07:14,200
falling gamin and this includes some

00:07:12,100 --> 00:07:16,660
advice on how I think you can avoid them

00:07:14,200 --> 00:07:19,360
and I came up with a better name for

00:07:16,660 --> 00:07:21,250
this talk two minutes ago and it's

00:07:19,360 --> 00:07:25,270
things I think to help you do Doc's

00:07:21,250 --> 00:07:33,280
quick it doesn't have a slide here we go

00:07:25,270 --> 00:07:35,680
oh oh that's not most like it was I the

00:07:33,280 --> 00:07:38,530
pictures on the wall in gaming front but

00:07:35,680 --> 00:07:40,000
anyway there was a lot of information

00:07:38,530 --> 00:07:41,950
coming at you and hopefully Upham at

00:07:40,000 --> 00:07:44,950
home there's a lot to do and to learn

00:07:41,950 --> 00:07:49,300
and to establish your starting point and

00:07:44,950 --> 00:07:51,700
my take-home advice is tech notes it's

00:07:49,300 --> 00:07:54,340
it's pretty obvious online but tech

00:07:51,700 --> 00:07:57,400
notes write them down and take notes a

00:07:54,340 --> 00:07:59,500
batch of notes I think that I take a lot

00:07:57,400 --> 00:08:01,630
of notes and then invariably down the

00:07:59,500 --> 00:08:04,510
track I realize I should have taken more

00:08:01,630 --> 00:08:06,250
nuts I always wish I'd taken more nuts

00:08:04,510 --> 00:08:08,080
and I've never ever thought I should

00:08:06,250 --> 00:08:10,900
have taken less notes tech types of

00:08:08,080 --> 00:08:13,060
meetings tech notes of successful builds

00:08:10,900 --> 00:08:14,560
on successful builds copy paste snippets

00:08:13,060 --> 00:08:16,750
of your IRC conversation

00:08:14,560 --> 00:08:18,850
just like put them together amalgamate

00:08:16,750 --> 00:08:21,460
them organizing notes don't simply add

00:08:18,850 --> 00:08:24,550
to your own information law be organized

00:08:21,460 --> 00:08:26,530
with your notes all the things I think

00:08:24,550 --> 00:08:28,510
that I remember how I'm working close to

00:08:26,530 --> 00:08:30,400
technology especially to release that or

00:08:28,510 --> 00:08:33,940
the docs six months down the track I've

00:08:30,400 --> 00:08:36,580
got no idea I'm dumbfounded III look at

00:08:33,940 --> 00:08:38,349
think I recognize a reason for the

00:08:36,580 --> 00:08:40,120
inconsistent but I don't understand it

00:08:38,349 --> 00:08:42,070
myself and I just wish I would have left

00:08:40,120 --> 00:08:44,650
a note in that late breadcrumb trails

00:08:42,070 --> 00:08:45,940
for yourself and for others you don't

00:08:44,650 --> 00:08:47,650
know who'll be working on it in the

00:08:45,940 --> 00:08:49,690
future you might be lucky enough to get

00:08:47,650 --> 00:08:51,880
some new teammates maybe someone you

00:08:49,690 --> 00:08:53,950
know maybe you've handed over someone so

00:08:51,880 --> 00:08:56,500
be good to them and your future self

00:08:53,950 --> 00:08:58,930
take notes take notes about notes I

00:08:56,500 --> 00:09:01,089
really hope I'm driving this home leave

00:08:58,930 --> 00:09:03,250
notes in your dog's right good commit

00:09:01,089 --> 00:09:05,350
messages I used to write all the time

00:09:03,250 --> 00:09:06,970
the dumbest commit messages so work just

00:09:05,350 --> 00:09:09,370
by myself when I thought it's hilarious

00:09:06,970 --> 00:09:12,190
well when you're in a pickle it's not so

00:09:09,370 --> 00:09:13,990
hilarious so I work on a team and I

00:09:12,190 --> 00:09:17,910
still write dump commit messages but I'm

00:09:13,990 --> 00:09:17,910
happy to say I write I look less of them

00:09:18,960 --> 00:09:23,130
the technology is growing quickly teams

00:09:21,670 --> 00:09:25,480
are emerging there's a lot of excitement

00:09:23,130 --> 00:09:26,530
features being planned and added but

00:09:25,480 --> 00:09:28,480
they're not going to make it to the

00:09:26,530 --> 00:09:30,339
release with all of their bells and

00:09:28,480 --> 00:09:33,990
whistles so they get staggered over a

00:09:30,339 --> 00:09:36,250
few relations next release next release

00:09:33,990 --> 00:09:37,930
which means all the conversations and

00:09:36,250 --> 00:09:39,880
the meetings about that feature also

00:09:37,930 --> 00:09:41,890
bounce back and forth across multiple

00:09:39,880 --> 00:09:43,750
future versions until you lose your head

00:09:41,890 --> 00:09:45,250
because until you know what you don't

00:09:43,750 --> 00:09:47,440
know at that time it just sounds like

00:09:45,250 --> 00:09:49,810
it's all going into one version in that

00:09:47,440 --> 00:09:51,880
meeting and without the systems in place

00:09:49,810 --> 00:09:53,560
it can really easily become lost in it

00:09:51,880 --> 00:09:55,600
so yes you do need to know that

00:09:53,560 --> 00:09:56,770
information eventually but not when

00:09:55,600 --> 00:09:59,560
you're pressed up against the release

00:09:56,770 --> 00:10:02,170
date for 1.0 and be aware too that this

00:09:59,560 --> 00:10:03,550
problem can exist for multiple versions

00:10:02,170 --> 00:10:05,680
you think you know that's just a one

00:10:03,550 --> 00:10:07,120
point art problem it's gonna be better

00:10:05,680 --> 00:10:08,589
next time and that happens again in one

00:10:07,120 --> 00:10:12,430
point when it happens again in one point

00:10:08,589 --> 00:10:15,100
to my bus I actually don't have a really

00:10:12,430 --> 00:10:19,220
any advice well like all I can say is

00:10:15,100 --> 00:10:20,329
that clarify one you can ultimately the

00:10:19,220 --> 00:10:22,069
the solution the best thing that

00:10:20,329 --> 00:10:24,439
happened is it's across the whole team

00:10:22,069 --> 00:10:25,819
it's part of the joy of documenting

00:10:24,439 --> 00:10:28,610
emerging technology and working in this

00:10:25,819 --> 00:10:31,970
field when the process is mature a bit

00:10:28,610 --> 00:10:34,629
and things on in 100% mad dash mode you

00:10:31,970 --> 00:10:37,040
get that kind of sense of clarity

00:10:34,629 --> 00:10:39,079
administrative overhead is the answer

00:10:37,040 --> 00:10:41,149
I'm sorry to say and in version 1.0 that

00:10:39,079 --> 00:10:44,600
might not exist because it got pushed to

00:10:41,149 --> 00:10:47,120
version 1.2 so take notes again clarify

00:10:44,600 --> 00:10:54,620
the best defense is a good offense and

00:10:47,120 --> 00:10:56,899
the best offense it's organized it's not

00:10:54,620 --> 00:10:58,339
necessary pitfall and I talked about it

00:10:56,899 --> 00:11:01,069
earlier but I also can't stress this one

00:10:58,339 --> 00:11:02,180
enough yes it can be a time safe but

00:11:01,069 --> 00:11:04,850
it's really really important especially

00:11:02,180 --> 00:11:08,000
in this area where there's a very

00:11:04,850 --> 00:11:09,709
significant sense of newness to it all

00:11:08,000 --> 00:11:12,350
the first emerging technology I worked

00:11:09,709 --> 00:11:14,420
on was deploying middleware products as

00:11:12,350 --> 00:11:16,399
applications and opens up to three I

00:11:14,420 --> 00:11:19,930
came to the project not knowing anything

00:11:16,399 --> 00:11:22,639
about openshift middleware or Java and

00:11:19,930 --> 00:11:24,259
to prepare myself I read up on the docks

00:11:22,639 --> 00:11:26,600
and the internal docks the upstream

00:11:24,259 --> 00:11:28,550
docks have existed for the mailing lists

00:11:26,600 --> 00:11:29,809
right everything I could watch the

00:11:28,550 --> 00:11:31,490
couple of the short demos that the

00:11:29,809 --> 00:11:33,829
deficit what awesome lady delivered to

00:11:31,490 --> 00:11:35,629
me but even with all that information I

00:11:33,829 --> 00:11:38,000
still only had possibly fill that

00:11:35,629 --> 00:11:39,559
skeleton for my content I'm mentioning

00:11:38,000 --> 00:11:40,670
it open ship running but the pugs for

00:11:39,559 --> 00:11:43,160
the app never managed to survive

00:11:40,670 --> 00:11:43,490
deployment and if five days before the

00:11:43,160 --> 00:11:45,620
release

00:11:43,490 --> 00:11:48,559
bright afternoon I've got access to a

00:11:45,620 --> 00:11:50,180
developer environment over the weekend

00:11:48,559 --> 00:11:51,819
interacting with that technology

00:11:50,180 --> 00:11:56,149
everything clicked into place

00:11:51,819 --> 00:11:59,059
on Mondays alpha draft up the dark watch

00:11:56,149 --> 00:12:00,649
a live demo that night which finally

00:11:59,059 --> 00:12:02,089
made sense to me for the first time and

00:12:00,649 --> 00:12:04,730
then bash together the whole document to

00:12:02,089 --> 00:12:07,069
get a reviewed mesh by Wednesday the

00:12:04,730 --> 00:12:08,569
information is one thing but it wasn't

00:12:07,069 --> 00:12:11,269
till I could interact with the

00:12:08,569 --> 00:12:13,639
technology as user 0 but I had the

00:12:11,269 --> 00:12:14,360
necessary context in order to understand

00:12:13,639 --> 00:12:18,470
it in a way

00:12:14,360 --> 00:12:20,540
again confidently documented for user so

00:12:18,470 --> 00:12:23,149
access tech tech access to the

00:12:20,540 --> 00:12:24,760
technology is very important and it

00:12:23,149 --> 00:12:27,050
comes in a few flavors

00:12:24,760 --> 00:12:29,990
there's the interactive kind this is the

00:12:27,050 --> 00:12:31,820
instance that you deploy yourself as far

00:12:29,990 --> 00:12:35,769
as writing user focused documentation

00:12:31,820 --> 00:12:38,510
being user 0 it's the best it's amazing

00:12:35,769 --> 00:12:41,029
it requires the process of deploying and

00:12:38,510 --> 00:12:43,519
insulating insulate installing from

00:12:41,029 --> 00:12:45,589
scratch I'm a words guy hitting all the

00:12:43,519 --> 00:12:46,790
prerequisites along the way and then

00:12:45,589 --> 00:12:48,769
using the environment you know what do

00:12:46,790 --> 00:12:52,130
you do first second third yada yada yada

00:12:48,769 --> 00:12:59,600
it does have a downside and that's that

00:12:52,130 --> 00:13:01,730
it might be ten minutes it's time to get

00:12:59,600 --> 00:13:03,230
running by the way so it's better to get

00:13:01,730 --> 00:13:05,149
someone else to do it the downside then

00:13:03,230 --> 00:13:08,660
is that you don't get to have the

00:13:05,149 --> 00:13:11,200
installation context save six time just

00:13:08,660 --> 00:13:11,200
don't break it

00:13:11,570 --> 00:13:16,370
when interactive so the live demos

00:13:14,050 --> 00:13:18,050
they're great because you can see the

00:13:16,370 --> 00:13:19,250
environment ask questions clarify get

00:13:18,050 --> 00:13:21,649
the presenter to kind of go through the

00:13:19,250 --> 00:13:23,269
procedures that you need downside is

00:13:21,649 --> 00:13:24,500
that you can't necessarily repeat it at

00:13:23,269 --> 00:13:25,790
a later date so you need to know all

00:13:24,500 --> 00:13:27,290
that information all the questions to

00:13:25,790 --> 00:13:30,649
ask ahead of time I don't have any

00:13:27,290 --> 00:13:32,240
unknown unknowns we just problem again

00:13:30,649 --> 00:13:35,870
in Flex that visibility into the

00:13:32,240 --> 00:13:37,699
installation and setup we can demo a

00:13:35,870 --> 00:13:39,320
video of the demo which is the site

00:13:37,699 --> 00:13:41,240
except you know to get that controlling

00:13:39,320 --> 00:13:43,010
interactivity with the with the demo

00:13:41,240 --> 00:13:48,290
itself you can ask questions but not

00:13:43,010 --> 00:13:51,010
real talk for Co I ask you demo is ASCII

00:13:48,290 --> 00:13:53,600
cinema is really awesome

00:13:51,010 --> 00:13:55,490
you can copy/paste away through a live

00:13:53,600 --> 00:13:58,130
terminal it's nice and slender

00:13:55,490 --> 00:14:00,050
the downside is it's silent so if the

00:13:58,130 --> 00:14:04,430
presenters particularly awesome they can

00:14:00,050 --> 00:14:06,980
add comments as prepared comments to

00:14:04,430 --> 00:14:08,810
rate the process in the logic I don't

00:14:06,980 --> 00:14:11,570
think about demos is that

00:14:08,810 --> 00:14:14,000
screenshots really handy to condensed

00:14:11,570 --> 00:14:14,700
information you get a can also catch the

00:14:14,000 --> 00:14:17,460
UI to look at

00:14:14,700 --> 00:14:20,180
it's a lot easy to go through small

00:14:17,460 --> 00:14:22,800
amount of screenshots of the demo then

00:14:20,180 --> 00:14:25,470
then is to go back and forth a long

00:14:22,800 --> 00:14:28,470
video just to catch that before

00:14:25,470 --> 00:14:30,450
including screenshots in your dogs in

00:14:28,470 --> 00:14:32,130
this world things change really fast and

00:14:30,450 --> 00:14:36,050
the maintenance cost of screenshots is

00:14:32,130 --> 00:14:36,050
often far greater than it's worth

00:14:40,760 --> 00:14:45,300
don't know where to start or you're

00:14:43,140 --> 00:14:46,680
stuck the installation process is still

00:14:45,300 --> 00:14:48,480
being fine-tuned you can't get the

00:14:46,680 --> 00:14:50,580
product working demo makes sense to

00:14:48,480 --> 00:14:53,850
everyone in the room except you when you

00:14:50,580 --> 00:14:57,120
start what do you do my best is to

00:14:53,850 --> 00:14:58,310
playtest Alton and give it to life one

00:14:57,120 --> 00:15:00,960
piece at a time

00:14:58,310 --> 00:15:03,600
love in any project you're going to be

00:15:00,960 --> 00:15:06,810
starting off with the MVP Minimum Viable

00:15:03,600 --> 00:15:08,430
Product use that create a table of

00:15:06,810 --> 00:15:10,200
contents leave gaps for you know Don

00:15:08,430 --> 00:15:11,880
knows the broad view makes it much

00:15:10,200 --> 00:15:13,320
easier to view structure and negotiate

00:15:11,880 --> 00:15:15,140
logical gaps than going through when

00:15:13,320 --> 00:15:18,780
you've got bits of content everywhere

00:15:15,140 --> 00:15:20,280
like how can you add a resource to a

00:15:18,780 --> 00:15:22,350
cluster if it doesn't exist in the first

00:15:20,280 --> 00:15:24,420
place things like that it also helps to

00:15:22,350 --> 00:15:26,640
really focus on the the user journey

00:15:24,420 --> 00:15:28,680
Gravitron our best engineer stories from

00:15:26,640 --> 00:15:30,030
existing features and then trying to

00:15:28,680 --> 00:15:35,280
make them fit and shoot home them into

00:15:30,030 --> 00:15:36,900
it into a doc structure this happens

00:15:35,280 --> 00:15:39,690
both upstream and downstream ducks

00:15:36,900 --> 00:15:41,040
things being developed everyone team

00:15:39,690 --> 00:15:42,330
seems to know about them and be aware of

00:15:41,040 --> 00:15:43,530
the importance to them and someone

00:15:42,330 --> 00:15:44,820
started a duck somewhere but what

00:15:43,530 --> 00:15:48,270
happened to it and then it's just this

00:15:44,820 --> 00:15:50,250
lost this typically but always and again

00:15:48,270 --> 00:15:51,570
I'm not here to make anyone feel bad but

00:15:50,250 --> 00:15:54,480
it typically stems from the development

00:15:51,570 --> 00:15:57,240
workflow and my bus is to be really

00:15:54,480 --> 00:15:59,880
strict about including the ducks in your

00:15:57,240 --> 00:16:02,130
workflow issues stories bugs doesn't

00:15:59,880 --> 00:16:04,380
have a ducks in fact doesn't have a dog

00:16:02,130 --> 00:16:06,120
ducks component if there's a change it

00:16:04,380 --> 00:16:08,310
needs to be tracked either in the

00:16:06,120 --> 00:16:11,160
upstream ducks or the down or probably

00:16:08,310 --> 00:16:13,550
both the story can't be done and unless

00:16:11,160 --> 00:16:18,330
ducks has been act or act and tracked

00:16:13,550 --> 00:16:20,180
and then are at the donor site so that's

00:16:18,330 --> 00:16:24,450
why this is supposed to be

00:16:20,180 --> 00:16:26,940
so the last couple of weeks really quite

00:16:24,450 --> 00:16:29,310
mental pretty wild and as the process

00:16:26,940 --> 00:16:31,530
narrows things get crazy everything it's

00:16:29,310 --> 00:16:33,030
really easy to get lost so my solution

00:16:31,530 --> 00:16:36,260
it won't be a surprise

00:16:33,030 --> 00:16:40,020
it's to take notes to make checklists

00:16:36,260 --> 00:16:42,330
yep more notes what needs special

00:16:40,020 --> 00:16:45,060
attention in the review who is your

00:16:42,330 --> 00:16:47,250
review team who do you need to ask to

00:16:45,060 --> 00:16:49,760
review X Y & Z because the last menu

00:16:47,250 --> 00:16:52,290
don't be finding that information out

00:16:49,760 --> 00:16:54,270
where's the release notes process find

00:16:52,290 --> 00:16:55,800
out ahead of time and then put it into a

00:16:54,270 --> 00:16:57,930
list so you can look at at the end and

00:16:55,800 --> 00:16:59,570
it just makes your life so much easier

00:16:57,930 --> 00:17:02,790
have a pre-release or a plea from

00:16:59,570 --> 00:17:03,240
pre-flight checklist these kinds of

00:17:02,790 --> 00:17:06,680
things

00:17:03,240 --> 00:17:10,079
oh they're very helpful in version 1.0

00:17:06,680 --> 00:17:13,140
far more helpful in version 1.1 think

00:17:10,079 --> 00:17:15,180
about the future put into that

00:17:13,140 --> 00:17:16,770
pre-release checklist all the little

00:17:15,180 --> 00:17:18,750
things that aren't going to have a bug

00:17:16,770 --> 00:17:22,020
or an issue to track them things like

00:17:18,750 --> 00:17:24,480
changing version numbers changing the

00:17:22,020 --> 00:17:25,890
package names making sure that the CLI

00:17:24,480 --> 00:17:27,660
commands are all still relevant in the

00:17:25,890 --> 00:17:29,880
syntax hasn't changed on your feet if

00:17:27,660 --> 00:17:35,940
you use screenshots has the UI changed

00:17:29,880 --> 00:17:37,680
probably so things change really quick

00:17:35,940 --> 00:17:39,660
and they obsolete really quick I've

00:17:37,680 --> 00:17:41,940
documented things that will obsolete

00:17:39,660 --> 00:17:45,210
before it out put on I know it's late

00:17:41,940 --> 00:17:46,800
this has been obsoleted I think it's

00:17:45,210 --> 00:17:49,590
especially true for upstream ducks I

00:17:46,800 --> 00:17:50,760
think like github is filled with repos

00:17:49,590 --> 00:17:51,630
that long ago had buried their

00:17:50,760 --> 00:17:53,460
supporting ducks

00:17:51,630 --> 00:17:54,990
it happens to the best of us and because

00:17:53,460 --> 00:17:59,460
the information management is really

00:17:54,990 --> 00:18:03,360
hard and it's time-consuming and my bus

00:17:59,460 --> 00:18:06,810
is to audit people don't have to be

00:18:03,360 --> 00:18:07,670
audited but Ducks love it in fact they

00:18:06,810 --> 00:18:09,930
thrive on it

00:18:07,670 --> 00:18:13,230
button issues are valuable but their

00:18:09,930 --> 00:18:15,510
reacted by nature once possible for your

00:18:13,230 --> 00:18:17,940
Ducks factored into your spring cadence

00:18:15,510 --> 00:18:20,190
and post release identify your gaps

00:18:17,940 --> 00:18:22,320
target your updates systematically west

00:18:20,190 --> 00:18:23,090
through the content and then do it again

00:18:22,320 --> 00:18:25,700
and again at

00:18:23,090 --> 00:18:27,380
tonight Oh so the proctor welcome to the

00:18:25,700 --> 00:18:30,590
money content and data visualization

00:18:27,380 --> 00:18:34,010
ducts I just had well next week you all

00:18:30,590 --> 00:18:35,750
will have had a release and following up

00:18:34,010 --> 00:18:37,010
we're gonna be planning in on ordering a

00:18:35,750 --> 00:18:39,440
storage docks with that storage tank

00:18:37,010 --> 00:18:41,390
it's like the Ship of Theseus the

00:18:39,440 --> 00:18:42,710
component the credits have evolved to

00:18:41,390 --> 00:18:45,560
the point that the structure that once

00:18:42,710 --> 00:18:47,690
made sense is no more and no one no

00:18:45,560 --> 00:18:49,820
longer knows where the gaps are so we're

00:18:47,690 --> 00:18:51,020
gonna do a nice big audit and if your

00:18:49,820 --> 00:18:52,820
team grows if you're lucky enough to

00:18:51,020 --> 00:18:54,740
have the Ducks team that is getting new

00:18:52,820 --> 00:18:56,510
people have the new person go through

00:18:54,740 --> 00:18:58,030
the full dock set from start to finish

00:18:56,510 --> 00:19:00,350
as far their onboarding experience

00:18:58,030 --> 00:19:02,840
raising questions pulling any

00:19:00,350 --> 00:19:05,180
consistencies in caps fresh eyes are a

00:19:02,840 --> 00:19:08,120
rare and powerful resource if you

00:19:05,180 --> 00:19:09,140
already do all of this your your legend

00:19:08,120 --> 00:19:12,430
and you're making the world a better

00:19:09,140 --> 00:19:16,100
place by including its coherence

00:19:12,430 --> 00:19:17,930
ultimately that do what you have to do

00:19:16,100 --> 00:19:19,460
you know screenshots might have a short

00:19:17,930 --> 00:19:21,260
shelf life but they're also really

00:19:19,460 --> 00:19:24,050
really useful in the early version

00:19:21,260 --> 00:19:27,020
documentation emerging technology is by

00:19:24,050 --> 00:19:28,940
its very nature new and the UX leaves a

00:19:27,020 --> 00:19:30,710
bit to be desired it'll get there but a

00:19:28,940 --> 00:19:32,780
screenshot is a good stopgap

00:19:30,710 --> 00:19:34,760
I tend towards ental and walkthroughs

00:19:32,780 --> 00:19:37,250
starting with installation and ended

00:19:34,760 --> 00:19:39,920
with creating and using resources I find

00:19:37,250 --> 00:19:42,050
it's very useful for new products that a

00:19:39,920 --> 00:19:44,900
small can be captured in you know 12 to

00:19:42,050 --> 00:19:47,030
20 steps it's the document version of a

00:19:44,900 --> 00:19:49,340
live demo it takes the user from

00:19:47,030 --> 00:19:50,720
starting literally nothing and then

00:19:49,340 --> 00:19:52,550
leaves them with the technology in a

00:19:50,720 --> 00:19:55,490
state document flavor which i think is

00:19:52,550 --> 00:19:57,830
the point in this one yeah but it's also

00:19:55,490 --> 00:20:00,050
unsustainable and as much hard work and

00:19:57,830 --> 00:20:01,610
love I put into it ultimately it needs

00:20:00,050 --> 00:20:05,480
to be shared because it becomes on

00:20:01,610 --> 00:20:07,100
Monday on Montana and totally run out of

00:20:05,480 --> 00:20:09,380
time so I'll just leave you with this

00:20:07,100 --> 00:20:11,680
little thing emerging technology is

00:20:09,380 --> 00:20:14,210
challenging and documenting it is

00:20:11,680 --> 00:20:17,030
difficult but don't take it personally

00:20:14,210 --> 00:20:18,650
think of it like a teenager it's still

00:20:17,030 --> 00:20:21,050
finding its place in the world what it

00:20:18,650 --> 00:20:23,330
needs is love and that love is best at

00:20:21,050 --> 00:20:27,290
this playthrough patience tenacity

00:20:23,330 --> 00:20:30,090
thoughtfulness and raising a lot of bugs

00:20:27,290 --> 00:20:42,590
it's a good luck out there thank you

00:20:30,090 --> 00:20:42,590
very much for listening and two minutes

00:20:45,620 --> 00:20:52,350
where it's not as easy to replicate on

00:20:49,170 --> 00:20:57,030
your system beg borrow and steal yeah

00:20:52,350 --> 00:20:58,920
that's yeah all old laptop so we're

00:20:57,030 --> 00:21:00,180
gonna company so getting old laptops and

00:20:58,920 --> 00:21:02,670
building a cluster out of that I'm

00:21:00,180 --> 00:21:06,510
trying to get stuff out of that or try

00:21:02,670 --> 00:21:07,590
and get money for cloud services I was

00:21:06,510 --> 00:21:09,780
thinking of things like with like drones

00:21:07,590 --> 00:21:11,790
for example where it's not like a laptop

00:21:09,780 --> 00:21:37,010
or a computer system like actual

00:21:11,790 --> 00:21:37,010
hardware have them beg borrow man thank

00:21:40,940 --> 00:21:44,080

YouTube URL: https://www.youtube.com/watch?v=peqLYaTpPMw


