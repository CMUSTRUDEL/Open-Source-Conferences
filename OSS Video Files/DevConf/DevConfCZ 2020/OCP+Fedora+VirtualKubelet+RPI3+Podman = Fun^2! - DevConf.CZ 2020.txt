Title: OCP+Fedora+VirtualKubelet+RPI3+Podman = Fun^2! - DevConf.CZ 2020
Publication date: 2020-02-27
Playlist: DevConfCZ 2020
Description: 
	Speakers: Mangirdas Judeikis

Virtual Kubelet is an open-source Kubernetes kubelet implementation that masquerades as a kubelet for the purposes of connecting Kubernetes to other APIs.
What if we run it on Raspberry Pi, with Podman as container runtime and Fedora ARM as an operating system. And schedule workloads from our Kubernetes cluster?
Small side project in progress, where IoT gets to know Kubernetes or “Connect your fridge to the Kubernetes cluster in the cloud”

[ https://sched.co/YOuQ ]

--
Recordings of talks at DevConf are a community effort. Unfortunately not everything works perfectly every time. If you're interested in helping us improve, let us know.
Captions: 
	00:00:00,610 --> 00:00:06,700
I will talk about open shift+ fedora

00:00:03,999 --> 00:00:09,520
press virtual cubelets plus Raspberry Pi

00:00:06,700 --> 00:00:11,620
and Padma and I will ask like if people

00:00:09,520 --> 00:00:13,809
nose are familiar with our components

00:00:11,620 --> 00:00:17,019
they'll just skip it and we'll go pass

00:00:13,809 --> 00:00:19,720
through and I really hope that demo will

00:00:17,019 --> 00:00:21,849
work like next time and doing demos with

00:00:19,720 --> 00:00:23,769
the internet better request a room with

00:00:21,849 --> 00:00:28,720
the windows where you can teach you some

00:00:23,769 --> 00:00:31,869
internet cool so agenda short

00:00:28,720 --> 00:00:33,940
introduction explain three staff hooks

00:00:31,869 --> 00:00:36,789
explained what the components means in

00:00:33,940 --> 00:00:40,870
this in the context of this talk some

00:00:36,789 --> 00:00:44,050
demo and questions so MMJ you can try to

00:00:40,870 --> 00:00:46,179
pronounce my name but good luck I think

00:00:44,050 --> 00:00:49,600
Czech people might be more lucky in this

00:00:46,179 --> 00:00:52,600
in this area I've already got for a few

00:00:49,600 --> 00:00:57,609
years mainly cloud managed services as

00:00:52,600 --> 00:00:59,559
your whatever so how old this started so

00:00:57,609 --> 00:01:01,960
there was this event Radtke tech

00:00:59,559 --> 00:01:03,940
exchange and i was filled in me a few

00:01:01,960 --> 00:01:06,340
hackathon and one of their colleagues

00:01:03,940 --> 00:01:08,320
came and said like hey I have this top

00:01:06,340 --> 00:01:10,480
secret customer they want to hook a

00:01:08,320 --> 00:01:13,570
bunch of arm workloads to the acuteness

00:01:10,480 --> 00:01:19,210
cluster to run basically unit tests on

00:01:13,570 --> 00:01:22,030
arm hardware and can we do it like yeah

00:01:19,210 --> 00:01:25,510
we have a hackathon five hours few beers

00:01:22,030 --> 00:01:27,700
and we managed to make it running in a

00:01:25,510 --> 00:01:30,760
most happiest way with a free cup lines

00:01:27,700 --> 00:01:36,040
of code with a very invertible cubelet

00:01:30,760 --> 00:01:38,110
project and we won after that conclusion

00:01:36,040 --> 00:01:40,900
was I need to formalize it a little bit

00:01:38,110 --> 00:01:44,380
better because winning something with

00:01:40,900 --> 00:01:47,830
three lines of code it's fine

00:01:44,380 --> 00:01:49,900
but I didn't felt right and I always

00:01:47,830 --> 00:01:52,000
wanted to have like side project to

00:01:49,900 --> 00:01:54,520
screen showing something at home on the

00:01:52,000 --> 00:01:58,630
wall and I want to schedule it from cube

00:01:54,520 --> 00:02:02,350
cluster because I have one so ended up

00:01:58,630 --> 00:02:08,110
if this so who knows what is vertol

00:02:02,350 --> 00:02:10,330
cubelet cool okay so if this simplified

00:02:08,110 --> 00:02:12,670
brittle cubelet is a it's a framework

00:02:10,330 --> 00:02:13,750
which helps you to macerate the cubelet

00:02:12,670 --> 00:02:16,060
itself

00:02:13,750 --> 00:02:18,310
so it presents itself the code base

00:02:16,060 --> 00:02:22,750
basically allows to present itself to

00:02:18,310 --> 00:02:24,700
the Cuban s cluster as a node and what

00:02:22,750 --> 00:02:27,030
happens under the hood it's up to you

00:02:24,700 --> 00:02:30,370
you can do basically whatever you want

00:02:27,030 --> 00:02:33,070
so as it's shown here it has basic

00:02:30,370 --> 00:02:35,020
functionalities of the cubelet but at

00:02:33,070 --> 00:02:37,209
the same time it does not have all the

00:02:35,020 --> 00:02:40,120
constraints which normal cubelet will

00:02:37,209 --> 00:02:42,190
have so you don't need like networking

00:02:40,120 --> 00:02:44,800
you don't need resource constraints it

00:02:42,190 --> 00:02:48,340
can be basically anything what can run

00:02:44,800 --> 00:02:50,770
go like binary from your mobile phone -

00:02:48,340 --> 00:02:56,020
like raspberry pi or any other edge

00:02:50,770 --> 00:02:58,420
device okay going further so main thinks

00:02:56,020 --> 00:03:00,489
what cubelet little cubelet can do but

00:02:58,420 --> 00:03:03,220
the framework up basically hands you

00:03:00,489 --> 00:03:05,380
over is you can create the lipids get

00:03:03,220 --> 00:03:09,220
some status get some logs if you have

00:03:05,380 --> 00:03:11,350
implementations like capacities of all

00:03:09,220 --> 00:03:14,290
the bare minimum what you would get from

00:03:11,350 --> 00:03:15,610
the normal cubelet and you can bring

00:03:14,290 --> 00:03:19,330
your own network you can hook up to

00:03:15,610 --> 00:03:22,510
existing networks all those things cool

00:03:19,330 --> 00:03:24,070
and this is how the interface looks of

00:03:22,510 --> 00:03:26,739
the variable cubelet so anybody who

00:03:24,070 --> 00:03:27,820
codes that would be straightforward so

00:03:26,739 --> 00:03:29,530
as long as you can implement those

00:03:27,820 --> 00:03:33,130
methods on your edge device or any

00:03:29,530 --> 00:03:35,860
hardware basically the as soon as you

00:03:33,130 --> 00:03:37,870
create pod entrepreneur's cluster create

00:03:35,860 --> 00:03:41,769
method will be called and virtual

00:03:37,870 --> 00:03:45,100
cubelet framework and you can basically

00:03:41,769 --> 00:03:49,150
blink lights on the pod creation any of

00:03:45,100 --> 00:03:53,170
any of those things okay anybody doesn't

00:03:49,150 --> 00:03:55,989
know what this guy is yeah okay that's

00:03:53,170 --> 00:03:58,180
raspberry pi degeneration free just I

00:03:55,989 --> 00:03:59,820
don't use raspberry pi for just because

00:03:58,180 --> 00:04:02,440
Fedora arm does not yet support

00:03:59,820 --> 00:04:04,690
basically raspberry for but I hope that

00:04:02,440 --> 00:04:07,660
will come okay

00:04:04,690 --> 00:04:09,370
pod man I have to think few days we

00:04:07,660 --> 00:04:12,670
don't need to introduce this guy to you

00:04:09,370 --> 00:04:16,930
like we had so many talks about that so

00:04:12,670 --> 00:04:19,510
I try to use docker that basically owned

00:04:16,930 --> 00:04:20,560
my devices all the time like I was not

00:04:19,510 --> 00:04:23,950
able to do anything you're on a

00:04:20,560 --> 00:04:25,660
container it's just like boom I try to

00:04:23,950 --> 00:04:27,270
use cryo there was some package miss

00:04:25,660 --> 00:04:30,539
basically

00:04:27,270 --> 00:04:32,789
conflict I just like looked through our

00:04:30,539 --> 00:04:35,190
internal mailing lists and one one guy

00:04:32,789 --> 00:04:36,750
asking like hey I'm using I want to run

00:04:35,190 --> 00:04:39,330
containers on my Raspberry Pi and

00:04:36,750 --> 00:04:41,360
basically randomed an email appeared

00:04:39,330 --> 00:04:44,389
it's like hey did you try to use Padma

00:04:41,360 --> 00:04:48,000
like DNF install worked out of the box

00:04:44,389 --> 00:04:51,030
next and I used were linked Padma API

00:04:48,000 --> 00:04:52,379
for communication for now I really be

00:04:51,030 --> 00:04:55,800
happy to get rid of it

00:04:52,379 --> 00:04:57,840
so fedora arm again it's just a

00:04:55,800 --> 00:05:01,590
basically Fedora version for arm

00:04:57,840 --> 00:05:05,220
compiled where like raspberry pi and

00:05:01,590 --> 00:05:08,159
Fedora is not the best friends DB Debian

00:05:05,220 --> 00:05:10,560
is better but I'm a fanboy Fedora and

00:05:08,159 --> 00:05:12,810
I'll know all the commands I know how it

00:05:10,560 --> 00:05:13,800
everything works so if something doesn't

00:05:12,810 --> 00:05:18,590
work I know where to look

00:05:13,800 --> 00:05:21,330
so ten feet did and as a cube earnest

00:05:18,590 --> 00:05:23,550
distribution I use open shape because

00:05:21,330 --> 00:05:25,860
basically that's my bread and butter

00:05:23,550 --> 00:05:29,219
each and every day I can have clusters

00:05:25,860 --> 00:05:33,900
running I can spin it up from a personal

00:05:29,219 --> 00:05:37,080
worker to use it's just easy okay so now

00:05:33,900 --> 00:05:38,610
the fun part starts so if you're looking

00:05:37,080 --> 00:05:40,949
to vertical cubelet rittle cubelet can

00:05:38,610 --> 00:05:42,840
work into two modes pool basically where

00:05:40,949 --> 00:05:45,210
you're earning your virtual cubelet

00:05:42,840 --> 00:05:47,699
itself on an edge device somewhere in

00:05:45,210 --> 00:05:49,550
China whatever and it just goes to your

00:05:47,699 --> 00:05:53,069
cluster with enough credentials and

00:05:49,550 --> 00:05:56,419
pulls data saying like hey I'm this node

00:05:53,069 --> 00:05:59,639
one give me something give me a workload

00:05:56,419 --> 00:06:01,259
this is very good when you we are

00:05:59,639 --> 00:06:02,759
workloads I've distributed and they

00:06:01,259 --> 00:06:04,529
don't have you don't have any service

00:06:02,759 --> 00:06:06,150
discovery you don't know where we are we

00:06:04,529 --> 00:06:08,639
just come up with random IP addresses

00:06:06,150 --> 00:06:09,210
random network connections and just get

00:06:08,639 --> 00:06:11,759
some stuff

00:06:09,210 --> 00:06:13,590
another one is push which is most of the

00:06:11,759 --> 00:06:15,659
providers are using when you're running

00:06:13,590 --> 00:06:17,759
a virtual cubelet as a port on the

00:06:15,659 --> 00:06:22,259
cluster itself and it goes to edge

00:06:17,759 --> 00:06:25,020
devices via ssh api any other protocols

00:06:22,259 --> 00:06:28,380
in this case you have to know where to

00:06:25,020 --> 00:06:31,190
go so some kind of service discovery or

00:06:28,380 --> 00:06:36,029
hard-coded networking or some play depth

00:06:31,190 --> 00:06:38,099
okay so what I did I use them mode one

00:06:36,029 --> 00:06:40,340
basically so I'm running everything on

00:06:38,099 --> 00:06:42,650
my Raspberry Pi

00:06:40,340 --> 00:06:44,120
and I connected at home to my wife I

00:06:42,650 --> 00:06:46,220
each and every time it gets new IP

00:06:44,120 --> 00:06:47,990
address and I just didn't bother to

00:06:46,220 --> 00:06:51,530
implement any service discover all those

00:06:47,990 --> 00:06:52,010
things so this guy here if it's still

00:06:51,530 --> 00:06:55,070
running

00:06:52,010 --> 00:06:58,340
yes it's running vertical binary is like

00:06:55,070 --> 00:07:01,850
37 Meg's it's running Padma and VAR link

00:06:58,340 --> 00:07:03,800
as a runtime container runtime and it

00:07:01,850 --> 00:07:07,190
hooks up to my open ship cluster in

00:07:03,800 --> 00:07:12,080
yeast us basically somewhere close to I

00:07:07,190 --> 00:07:15,830
don't know it in Azure data center and I

00:07:12,080 --> 00:07:20,780
have basically screen connected just to

00:07:15,830 --> 00:07:25,760
show stuff cool so there's no more

00:07:20,780 --> 00:07:32,780
waiting let's see what we can do so here

00:07:25,760 --> 00:07:37,160
I have I'm in the Raspberry Pi itself so

00:07:32,780 --> 00:07:41,000
let's show that's Fedora 30 again 31

00:07:37,160 --> 00:07:42,919
doesn't work on this one and I have pod

00:07:41,000 --> 00:07:44,750
mine installed so let's watch for

00:07:42,919 --> 00:07:49,639
containers and see that nothing is

00:07:44,750 --> 00:07:52,910
running here and this is my open shift

00:07:49,639 --> 00:07:54,950
cluster so if I do OC get nodes I see

00:07:52,910 --> 00:07:57,979
that there's default now it's connected

00:07:54,950 --> 00:07:58,870
to that and last one is name of this

00:07:57,979 --> 00:08:01,550
Raspberry Pi

00:07:58,870 --> 00:08:03,169
it has a cube config so each and every

00:08:01,550 --> 00:08:05,840
time I plug it to the power it just

00:08:03,169 --> 00:08:08,240
comes up use the cube convict registers

00:08:05,840 --> 00:08:10,880
to the cluster and comes up with a as a

00:08:08,240 --> 00:08:14,990
node as a agent and everything here like

00:08:10,880 --> 00:08:16,550
barish and rolls everything is it's just

00:08:14,990 --> 00:08:18,460
simply a good moment hard-coded in the

00:08:16,550 --> 00:08:22,280
backend and you can do whatever you want

00:08:18,460 --> 00:08:25,370
so I have this container one which is

00:08:22,280 --> 00:08:29,630
boozy box it does not do much it just

00:08:25,370 --> 00:08:38,089
basically sleeps for 30 seconds so let's

00:08:29,630 --> 00:08:40,940
try to do that so for example so now it

00:08:38,089 --> 00:08:43,820
goes to East u.s. data center basically

00:08:40,940 --> 00:08:46,040
schedules the pod pod pokes that cluster

00:08:43,820 --> 00:08:49,880
raspberry pi keeps poking the cluster

00:08:46,040 --> 00:08:52,100
finds the work pending port for him to

00:08:49,880 --> 00:08:53,180
be running and just schedules as normal

00:08:52,100 --> 00:08:54,950
couplet

00:08:53,180 --> 00:08:59,420
and we see it's basically asleep 30

00:08:54,950 --> 00:09:01,399
seconds for some time so I still have to

00:08:59,420 --> 00:09:07,839
talk about for seven seconds until it

00:09:01,399 --> 00:09:13,730
dies and let's hope it just kills too so

00:09:07,839 --> 00:09:15,140
it should went away whoop and we can see

00:09:13,730 --> 00:09:16,970
that there's equal exit code zero

00:09:15,140 --> 00:09:19,580
because the poet just died tragically

00:09:16,970 --> 00:09:24,140
and that got updated in the our cube

00:09:19,580 --> 00:09:25,760
cluster so bare minimum functionality so

00:09:24,140 --> 00:09:28,880
I have a different board which is more

00:09:25,760 --> 00:09:30,950
fun so I have implemented minimum

00:09:28,880 --> 00:09:36,140
functionality where you can mount a host

00:09:30,950 --> 00:09:39,410
path and expose some stuff so I have a

00:09:36,140 --> 00:09:41,180
chromium browser built for arm I build

00:09:39,410 --> 00:09:43,690
it as a container and the same basically

00:09:41,180 --> 00:09:47,450
raspberry pie I'm mounting some

00:09:43,690 --> 00:09:50,029
volunteers just for hacking purposes and

00:09:47,450 --> 00:09:51,980
I'm hooking to accession of the logged

00:09:50,029 --> 00:09:54,320
in user which is here so I could show

00:09:51,980 --> 00:09:58,450
something and I'm passing base with

00:09:54,320 --> 00:09:58,450
parameters that what I want to open

00:09:59,260 --> 00:10:15,890
create a chef examples I really hope

00:10:09,560 --> 00:10:21,589
that stuff shows up here now it takes a

00:10:15,890 --> 00:10:23,570
while loop and we have a dashboard so we

00:10:21,589 --> 00:10:26,660
can put anything here basically you can

00:10:23,570 --> 00:10:29,630
do any fancy stuff anything for those

00:10:26,660 --> 00:10:32,570
who don't see it's like just just popped

00:10:29,630 --> 00:10:47,290
up there so if I now delete that stuff

00:10:32,570 --> 00:10:50,390
it should go down and it just went away

00:10:47,290 --> 00:10:52,760
so in theory if you run this virtual

00:10:50,390 --> 00:10:56,000
cubelet on your node itself as a binary

00:10:52,760 --> 00:10:59,570
you who happy SSH CPI or any of API and

00:10:56,000 --> 00:11:01,940
if somebody would be doing like Korres

00:10:59,570 --> 00:11:02,510
Fedora which edge nodes could update

00:11:01,940 --> 00:11:05,980
themselves

00:11:02,510 --> 00:11:08,830
you could have ecosystem where they know

00:11:05,980 --> 00:11:10,810
just need some credentials from some

00:11:08,830 --> 00:11:15,420
Authority and could you basically

00:11:10,810 --> 00:11:19,240
anything what your clusters can do cool

00:11:15,420 --> 00:11:20,980
so what's next for this hacky projects I

00:11:19,240 --> 00:11:24,400
think one more weekend is needed

00:11:20,980 --> 00:11:26,140
I have zero test that was hacking and

00:11:24,400 --> 00:11:28,090
most of the time I spent basically try

00:11:26,140 --> 00:11:31,390
and find out how the API works of the

00:11:28,090 --> 00:11:34,620
bar link some edge cases which took me a

00:11:31,390 --> 00:11:37,030
while to debug move to Padma and API v2

00:11:34,620 --> 00:11:41,410
which would be like darker compatible

00:11:37,030 --> 00:11:43,780
API which enables better ecosystem more

00:11:41,410 --> 00:11:45,700
libraries to do and I think easier we

00:11:43,780 --> 00:11:47,350
use code from odd manque you play and

00:11:45,700 --> 00:11:52,030
portland could generate because now I

00:11:47,350 --> 00:11:53,770
have my own small converters and because

00:11:52,030 --> 00:11:55,510
that code is already implemented I just

00:11:53,770 --> 00:11:58,720
want to bring it in and that will enable

00:11:55,510 --> 00:12:01,120
so many features remote Portland

00:11:58,720 --> 00:12:03,460
management so I want to run that stuff

00:12:01,120 --> 00:12:06,910
on my cluster and just hook the API to

00:12:03,460 --> 00:12:11,050
the nodes itself so I don't need to

00:12:06,910 --> 00:12:12,280
basically SCP my binary virtual Cooper

00:12:11,050 --> 00:12:15,580
binary each and every time I do

00:12:12,280 --> 00:12:17,410
something secrets config Maps volumes

00:12:15,580 --> 00:12:19,180
already supported so it could do those

00:12:17,410 --> 00:12:22,170
miners minor stuff

00:12:19,180 --> 00:12:25,540
sage locks may be an example just

00:12:22,170 --> 00:12:28,110
because in example I have three point

00:12:25,540 --> 00:12:31,090
like smaller people and five-inch screen

00:12:28,110 --> 00:12:33,850
that guy doesn't work with adora it

00:12:31,090 --> 00:12:37,440
needs driver porting and what I did it

00:12:33,850 --> 00:12:39,880
once next upgrade basically broke it and

00:12:37,440 --> 00:12:41,680
it just echo system and better

00:12:39,880 --> 00:12:44,410
bootstrapping for the node so you can

00:12:41,680 --> 00:12:49,570
just bake the card on your laptop hook

00:12:44,410 --> 00:12:51,970
it in and you're done cool so that's

00:12:49,570 --> 00:12:54,520
basically it so this is where you can

00:12:51,970 --> 00:12:57,010
find me if you have any questions you

00:12:54,520 --> 00:13:02,650
want to try it you want to play it the

00:12:57,010 --> 00:13:04,150
repository is under Bertil cubelet

00:13:02,650 --> 00:13:06,670
organization slash pod man

00:13:04,150 --> 00:13:09,460
it has bare minimum like readme files

00:13:06,670 --> 00:13:16,420
and all the code so you can try it you

00:13:09,460 --> 00:13:23,970
can pull it check it out and yeah yeah

00:13:16,420 --> 00:13:35,400
I don't know at this point in time so

00:13:23,970 --> 00:13:35,400
what's happening here is so it's

00:13:35,970 --> 00:13:40,360
honestly wouldn't say this back because

00:13:38,530 --> 00:13:42,250
it's a bare minimum I think it takes

00:13:40,360 --> 00:13:45,900
more when you start running from it's

00:13:42,250 --> 00:13:48,700
something like okay suppose it's like

00:13:45,900 --> 00:13:54,670
again would not be able to say like

00:13:48,700 --> 00:13:56,650
metrics or something about that it

00:13:54,670 --> 00:13:58,270
depends on the implementation how your

00:13:56,650 --> 00:14:00,970
code will do that because that's

00:13:58,270 --> 00:14:02,770
everything on your control so I used to

00:14:00,970 --> 00:14:05,230
run this dashboard at home and I just

00:14:02,770 --> 00:14:07,330
basically dropped a cluster or for two

00:14:05,230 --> 00:14:09,760
days three days and as long as the

00:14:07,330 --> 00:14:11,410
pokémon running it runs you can

00:14:09,760 --> 00:14:13,270
implement you can implement the virtual

00:14:11,410 --> 00:14:16,360
cubelet code itself to cache some of the

00:14:13,270 --> 00:14:18,550
data and just spin it up from the cache

00:14:16,360 --> 00:14:20,800
until it's lost the connectivity and as

00:14:18,550 --> 00:14:24,240
long as it has the data HS can do that

00:14:20,800 --> 00:14:27,220
so currently what I'm doing then

00:14:24,240 --> 00:14:28,960
Coubertin has asked for like status like

00:14:27,220 --> 00:14:31,480
what's the stuff it has to return the

00:14:28,960 --> 00:14:34,030
data so it just hash all the apartments

00:14:31,480 --> 00:14:36,340
pair like cube earnest back and I put it

00:14:34,030 --> 00:14:39,550
to them to the tax annotation so the

00:14:36,340 --> 00:14:42,220
portman pod and then III it is basically

00:14:39,550 --> 00:14:47,080
remark shells hit enter the data and

00:14:42,220 --> 00:14:48,910
that's all so it's a it's very very

00:14:47,080 --> 00:14:56,670
specific on the implementation itself of

00:14:48,910 --> 00:14:56,670
J you just go cool any other questions

00:14:59,340 --> 00:15:04,300
couplet is too heavy it has some

00:15:02,050 --> 00:15:08,470
dependencies or like networking or like

00:15:04,300 --> 00:15:11,980
story stuff you have it's it's just way

00:15:08,470 --> 00:15:15,040
way heavier and more complex for the use

00:15:11,980 --> 00:15:18,430
case like that and I needed I wanted to

00:15:15,040 --> 00:15:23,970
try this basically as a I said that

00:15:18,430 --> 00:15:26,790
project it's just all the

00:15:23,970 --> 00:15:28,800
bits and pieces fell into one place in

00:15:26,790 --> 00:15:41,730
one bucket and I just like okay let's do

00:15:28,800 --> 00:15:43,589
it yeah I installed it it didn't work I

00:15:41,730 --> 00:15:45,540
swapped the car to Fedora 30 and

00:15:43,589 --> 00:15:47,579
continuing for a weekend and there is

00:15:45,540 --> 00:15:49,139
basically a note in the fedora arm page

00:15:47,579 --> 00:15:52,620
she's saying like we don't support it

00:15:49,139 --> 00:15:56,519
until minimum hardware will be supported

00:15:52,620 --> 00:15:59,699
like BG ice and up like outside and put

00:15:56,519 --> 00:16:01,410
and all the stuff I said varies mailing

00:15:59,699 --> 00:16:05,699
list I think internal flying about that

00:16:01,410 --> 00:16:07,110
but again as my first flight implied I

00:16:05,699 --> 00:16:09,990
have no idea what I'm doing

00:16:07,110 --> 00:16:18,779
yet I just needed to like complete it

00:16:09,990 --> 00:16:22,350
then it share it at that Sun yeah so now

00:16:18,779 --> 00:16:23,730
it's basically after Scott's talk I saw

00:16:22,350 --> 00:16:28,559
that there's a lot of code base I can

00:16:23,730 --> 00:16:30,149
reuse so we do that I would start from

00:16:28,559 --> 00:16:32,339
the basically running little cubelet on

00:16:30,149 --> 00:16:35,040
the couch like on the Kuban s cluster

00:16:32,339 --> 00:16:38,639
itself not an edge device basically

00:16:35,040 --> 00:16:41,269
making a push model and potentially have

00:16:38,639 --> 00:16:46,100
some similarity

00:16:41,269 --> 00:16:50,519
discovery and the code itself is a mess

00:16:46,100 --> 00:16:56,910
it's just like more you see more you

00:16:50,519 --> 00:17:00,050
learn there's like no cool if nothing

00:16:56,910 --> 00:17:00,050
else okay whoa

00:17:11,150 --> 00:17:15,690
no not yet

00:17:12,900 --> 00:17:20,370
that again that learnings from these two

00:17:15,690 --> 00:17:22,560
days before that they should it's it's

00:17:20,370 --> 00:17:25,560
one of those things when you like you

00:17:22,560 --> 00:17:28,590
google fedora are you getting Fedora for

00:17:25,560 --> 00:17:33,030
our and you go for it you don't Google

00:17:28,590 --> 00:17:35,310
Fedora IOT like it's I think we need to

00:17:33,030 --> 00:17:39,440
change or buy some ads in certain pages

00:17:35,310 --> 00:17:39,440
to point people to the right directions

00:17:39,830 --> 00:17:52,380
cool thanks everybody

00:17:44,460 --> 00:17:52,380

YouTube URL: https://www.youtube.com/watch?v=btn3v9GXXBM


