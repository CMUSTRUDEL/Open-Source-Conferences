Title: Linux System Roles: One playbook to rule them all - DevConf.CZ 2020
Publication date: 2020-03-27
Playlist: DevConfCZ 2020
Description: 
	Speakers: Terry Bowling, Pavel Cahyna

One often encountered problem in system administration is evolution of interfaces (such as configuration file formats and various utilities) between operating system releases. Linux System Roles with Ansible help to solve automation incompatibilities introduced by OS changes by presenting a stable and abstract interface.
Attendees will learn about newly added and improved roles in Linux System Roles project and about using them to configure Fedora, RHEL or CentOS systems consistently across multiple releases. The audience is assumed to have a basic understanding of Ansible and experience with Linux (preferably Fedora-derived) system administration.

[ https://sched.co/YOyF ]

--
Recordings of talks at DevConf are a community effort. Unfortunately not everything works perfectly every time. If you're interested in helping us improve, let us know.
Captions: 
	00:00:02,050 --> 00:00:04,580
alright we'll go ahead and get started

00:00:03,980 --> 00:00:06,649
here

00:00:04,580 --> 00:00:09,430
hello everyone my name is Terry bowling

00:00:06,649 --> 00:00:11,960
I am on the rail product management team

00:00:09,430 --> 00:00:15,920
for Red Hat Enterprise Linux with Red

00:00:11,960 --> 00:00:18,199
Hat and my area of focus is rel

00:00:15,920 --> 00:00:21,230
automation and management how can we

00:00:18,199 --> 00:00:23,869
make well easier for you to manage and

00:00:21,230 --> 00:00:26,570
configure and of course all of the

00:00:23,869 --> 00:00:29,630
things that we do also translates to

00:00:26,570 --> 00:00:34,130
CentOS and Fedora and with me is Pavel

00:00:29,630 --> 00:00:35,330
would you like to introduce yourself and

00:00:34,130 --> 00:00:38,320
Parvati 'no

00:00:35,330 --> 00:00:41,630
I am the developer date of the system

00:00:38,320 --> 00:00:44,690
project and I'm a senior software

00:00:41,630 --> 00:00:50,480
engineer at core services the general

00:00:44,690 --> 00:00:53,150
business unit at Revit so today we're

00:00:50,480 --> 00:00:57,740
going to talk to you and educate you

00:00:53,150 --> 00:00:59,870
about Linux system roles and the so the

00:00:57,740 --> 00:01:01,940
the overview of this this talk will be

00:00:59,870 --> 00:01:03,860
you know the overview of the system

00:01:01,940 --> 00:01:05,930
roles we're going to give you an

00:01:03,860 --> 00:01:08,659
introduction to two examples the network

00:01:05,930 --> 00:01:10,430
and storage roles because those are our

00:01:08,659 --> 00:01:12,050
two roles that we're getting a lot of

00:01:10,430 --> 00:01:18,380
feedback that those are some of the most

00:01:12,050 --> 00:01:21,260
commonly requested or or needed types of

00:01:18,380 --> 00:01:23,240
automation when managing row and then

00:01:21,260 --> 00:01:26,000
Pavel is going to show you some examples

00:01:23,240 --> 00:01:27,290
some demos of how to use it and then

00:01:26,000 --> 00:01:31,220
we'll talk a little bit about some of

00:01:27,290 --> 00:01:34,100
the common rule challenges so the reason

00:01:31,220 --> 00:01:35,930
we're here I spent about 14 years as a

00:01:34,100 --> 00:01:38,210
sysadmin for a few different companies

00:01:35,930 --> 00:01:41,750
so I've I've kind of been there with you

00:01:38,210 --> 00:01:43,940
you know managing configuring operating

00:01:41,750 --> 00:01:47,060
systems and in taking care of things

00:01:43,940 --> 00:01:50,360
when they go bad and back in the day I

00:01:47,060 --> 00:01:52,880
wrote a lot of really bad shell and Perl

00:01:50,360 --> 00:01:56,390
scripts I was very proud of them at the

00:01:52,880 --> 00:01:58,850
time but I I pity anybody who had to

00:01:56,390 --> 00:02:00,950
take them over after I left and they got

00:01:58,850 --> 00:02:02,570
the job done they did needed you know

00:02:00,950 --> 00:02:05,810
they they helped me do what I needed to

00:02:02,570 --> 00:02:08,239
do but I can completely relate to these

00:02:05,810 --> 00:02:10,610
examples where you know we need to do

00:02:08,239 --> 00:02:13,700
something we write some clever script

00:02:10,610 --> 00:02:14,959
and you know in Perl I loved reg X and I

00:02:13,700 --> 00:02:17,359
did a lot of horrible

00:02:14,959 --> 00:02:20,810
but you know it was fun some of them

00:02:17,359 --> 00:02:23,359
were wicked cool I didn't always

00:02:20,810 --> 00:02:25,099
remember a year later why I wrote some

00:02:23,359 --> 00:02:29,060
of it but you know it worked at the time

00:02:25,099 --> 00:02:31,219
but as things change you know stuff

00:02:29,060 --> 00:02:33,739
broke and we see that all the time with

00:02:31,219 --> 00:02:37,519
rel the transition from rel four - five

00:02:33,739 --> 00:02:40,219
- six - seven and all of the rapid

00:02:37,519 --> 00:02:42,439
changes that happen in fedora things

00:02:40,219 --> 00:02:45,680
change and your scripts need to be

00:02:42,439 --> 00:02:51,769
maintained and of course the cycle is

00:02:45,680 --> 00:02:53,780
rinsed and repeated so one of the the

00:02:51,769 --> 00:02:56,959
questions we're asking ourselves is how

00:02:53,780 --> 00:03:01,579
can we make this easier and as things

00:02:56,959 --> 00:03:04,489
change how can we Red Hat and the Fedora

00:03:01,579 --> 00:03:07,879
ecosystem how can we take on some of

00:03:04,489 --> 00:03:10,879
that technical debt so that we maintain

00:03:07,879 --> 00:03:14,389
this so that you don't have to and so

00:03:10,879 --> 00:03:17,389
what we have our goal is to provide a

00:03:14,389 --> 00:03:20,150
collection of ansible roles that

00:03:17,389 --> 00:03:23,599
function as a consistent configuration

00:03:20,150 --> 00:03:26,479
interface to rel and Fedora and when I

00:03:23,599 --> 00:03:30,319
say rel you know you can insert Cintas

00:03:26,479 --> 00:03:32,269
there but usually I'm usually saying

00:03:30,319 --> 00:03:37,250
role in Fedora most of the time so I'm

00:03:32,269 --> 00:03:38,959
not ignoring CentOS and how can we

00:03:37,250 --> 00:03:41,689
ensure that they're compatible and

00:03:38,959 --> 00:03:45,109
tested on a regular basis with fedora

00:03:41,689 --> 00:03:47,509
rel seven and eight and future versions

00:03:45,109 --> 00:03:51,769
and some of them are also compatible

00:03:47,509 --> 00:03:53,919
where appropriate with rel six today and

00:03:51,769 --> 00:03:56,959
and ensure that they're constantly

00:03:53,919 --> 00:04:00,650
compatible and tested as things change

00:03:56,959 --> 00:04:03,169
and so we're abstracting configuration

00:04:00,650 --> 00:04:07,629
from implementation and what I mean by

00:04:03,169 --> 00:04:10,400
that is as tools and utilities change

00:04:07,629 --> 00:04:13,900
networking is a great example you your

00:04:10,400 --> 00:04:17,599
application needs an IP address and

00:04:13,900 --> 00:04:19,930
maybe a bonded pair or multiple

00:04:17,599 --> 00:04:22,639
aggregated network interfaces

00:04:19,930 --> 00:04:25,580
lots of times our sis admin's don't

00:04:22,639 --> 00:04:27,810
necessarily care about bonding versus

00:04:25,580 --> 00:04:31,259
teaming or

00:04:27,810 --> 00:04:35,199
init scripts network configuration vs.

00:04:31,259 --> 00:04:37,930
network D vs. other things in the

00:04:35,199 --> 00:04:41,860
ecosystem like system D Network D or

00:04:37,930 --> 00:04:43,690
maybe some future crazy wild idea that

00:04:41,860 --> 00:04:48,490
somebody dreams up that turns out to be

00:04:43,690 --> 00:04:51,159
awesome how can all the sysadmin cares

00:04:48,490 --> 00:04:53,590
is this team is asking me to stand up

00:04:51,159 --> 00:04:55,960
this database and it needs you know

00:04:53,590 --> 00:04:58,060
bonded networks all I care about is the

00:04:55,960 --> 00:04:59,560
IP address and multiple NICs that's all

00:04:58,060 --> 00:05:01,409
I care about I don't want to care about

00:04:59,560 --> 00:05:04,180
all the utilities all the low-level

00:05:01,409 --> 00:05:06,340
technologies I'm overwhelmed I've got

00:05:04,180 --> 00:05:08,469
too much to do there's too much to learn

00:05:06,340 --> 00:05:11,020
I can't absorb it all so we put that

00:05:08,469 --> 00:05:12,909
technical debt the community we put that

00:05:11,020 --> 00:05:14,530
technical debt on users so we're

00:05:12,909 --> 00:05:17,500
abstracting this so we're giving you a

00:05:14,530 --> 00:05:19,810
simple way to describe I got an IP

00:05:17,500 --> 00:05:21,460
address I want to bonded pair just make

00:05:19,810 --> 00:05:23,710
it so I don't care about the details

00:05:21,460 --> 00:05:26,889
just make it work so that I can go to

00:05:23,710 --> 00:05:28,659
lunch with my friends and and so that's

00:05:26,889 --> 00:05:30,460
what we're doing and it's also critical

00:05:28,659 --> 00:05:32,560
that this is maintained by fedora and

00:05:30,460 --> 00:05:34,389
Rho engineers we couldn't just go to

00:05:32,560 --> 00:05:36,490
ansible and say hey do this for us

00:05:34,389 --> 00:05:38,800
because they're not experts at the

00:05:36,490 --> 00:05:40,870
networking stack they don't know what's

00:05:38,800 --> 00:05:43,330
going on in networking upstream and

00:05:40,870 --> 00:05:46,479
community they're experts at designing

00:05:43,330 --> 00:05:49,569
and automation framework so we need our

00:05:46,479 --> 00:05:53,190
rel and fedora subsystem engineers need

00:05:49,569 --> 00:05:56,590
to be the experts of that subsystem and

00:05:53,190 --> 00:05:59,650
knowing when things are being developed

00:05:56,590 --> 00:06:04,629
and how and so we're working with a

00:05:59,650 --> 00:06:07,810
number of different teams to to develop

00:06:04,629 --> 00:06:10,419
this and put in automated CI testing in

00:06:07,810 --> 00:06:12,520
fedora so that as these change and

00:06:10,419 --> 00:06:15,129
evolved and new functionality gets added

00:06:12,520 --> 00:06:16,990
we can maintain that automated testing

00:06:15,129 --> 00:06:23,669
against all seven and row eight and

00:06:16,990 --> 00:06:27,400
future versions so what we have today in

00:06:23,669 --> 00:06:30,490
galaxy and on github we have this Linux

00:06:27,400 --> 00:06:34,120
system rules project from that we

00:06:30,490 --> 00:06:36,039
publicly publish that in galaxy so if

00:06:34,120 --> 00:06:40,370
you're an existing ansible user you can

00:06:36,039 --> 00:06:43,639
simply type ansible galaxy install

00:06:40,370 --> 00:06:46,910
a Linux system rolls Network or dot

00:06:43,639 --> 00:06:47,180
firewall or whatever whichever one you

00:06:46,910 --> 00:06:50,600
want

00:06:47,180 --> 00:06:54,800
we also package them in fedora as Linux

00:06:50,600 --> 00:06:59,570
system rules or PM package and in rel

00:06:54,800 --> 00:07:03,050
they are packaged as rel system rolls

00:06:59,570 --> 00:07:06,560
our PM package and the reason for that

00:07:03,050 --> 00:07:08,630
is we have use cases where we need to

00:07:06,560 --> 00:07:11,570
make these accessible like from the DVD

00:07:08,630 --> 00:07:13,639
iso image and things like that because

00:07:11,570 --> 00:07:15,229
people might want to to do automation

00:07:13,639 --> 00:07:19,539
where they don't necessarily have

00:07:15,229 --> 00:07:22,789
network access so not not everyone is is

00:07:19,539 --> 00:07:25,370
quite accessible to the Internet and

00:07:22,789 --> 00:07:27,260
able to use directly from ansible galaxy

00:07:25,370 --> 00:07:31,340
so we're looking at a variety of other

00:07:27,260 --> 00:07:33,020
things like automation hub that the

00:07:31,340 --> 00:07:35,090
ansible team is working on and different

00:07:33,020 --> 00:07:37,550
things like that providing multiple ways

00:07:35,090 --> 00:07:40,970
to access it but the versions that we

00:07:37,550 --> 00:07:43,190
package is what we can say this is the

00:07:40,970 --> 00:07:47,450
tested version that we're packaging and

00:07:43,190 --> 00:07:50,330
supporting for enterprise use but the

00:07:47,450 --> 00:07:52,820
same team is working on the same stuff

00:07:50,330 --> 00:07:55,760
and the Fedora CI testing is doing a lot

00:07:52,820 --> 00:07:58,039
of the testing so the stuff in galaxy is

00:07:55,760 --> 00:07:59,930
really good too but the stuff in galaxy

00:07:58,039 --> 00:08:02,990
you're going to be seeing change at a

00:07:59,930 --> 00:08:07,849
faster rate until we package it and ship

00:08:02,990 --> 00:08:09,919
it for example into into rel so multiple

00:08:07,849 --> 00:08:13,220
ways of accessing it and so what we

00:08:09,919 --> 00:08:17,470
provide today is network storage as

00:08:13,220 --> 00:08:22,039
these Linux time-sink postfix and kdump

00:08:17,470 --> 00:08:25,520
with rel 8.1 we started providing a

00:08:22,039 --> 00:08:29,180
workload role for basic sa P Hana

00:08:25,520 --> 00:08:31,910
configuration as well as free IPA

00:08:29,180 --> 00:08:35,870
identity management is also available in

00:08:31,910 --> 00:08:38,050
galaxy and I think wurst Thomas I think

00:08:35,870 --> 00:08:42,469
we're gonna be shipping that in rel soon

00:08:38,050 --> 00:08:44,240
yes oh it is an eighth one awesome thank

00:08:42,469 --> 00:08:48,260
you I didn't realize we were actually

00:08:44,240 --> 00:08:49,850
shipping it so my apologies yes so free

00:08:48,260 --> 00:08:51,260
IPA if you're not familiar with that

00:08:49,850 --> 00:08:54,110
it's a really awesome

00:08:51,260 --> 00:08:56,360
identity management system

00:08:54,110 --> 00:08:58,579
I think they have a whole nother

00:08:56,360 --> 00:09:03,040
presentation Thomas you're going to be

00:08:58,579 --> 00:09:05,750
presenting on automating IDM right so

00:09:03,040 --> 00:09:09,110
look for that session he'll be using

00:09:05,750 --> 00:09:11,660
these as examples and some other things

00:09:09,110 --> 00:09:14,449
that we're actively working on scoping

00:09:11,660 --> 00:09:16,730
out requirements for our firewall we

00:09:14,449 --> 00:09:20,089
already have a proof of concept firewall

00:09:16,730 --> 00:09:22,790
role in in our project and galaxy so you

00:09:20,089 --> 00:09:25,250
can try it out and test it we're making

00:09:22,790 --> 00:09:28,459
some revisions to it before we declare

00:09:25,250 --> 00:09:31,060
it stable or before we start shipping it

00:09:28,459 --> 00:09:33,649
as an RPM package and then additional

00:09:31,060 --> 00:09:35,810
application workload rules for Microsoft

00:09:33,649 --> 00:09:37,790
sequel server and things like that

00:09:35,810 --> 00:09:42,680
the logging role will help you stand up

00:09:37,790 --> 00:09:46,180
or standardize logging profiles so like

00:09:42,680 --> 00:09:49,790
if you need high performance logging or

00:09:46,180 --> 00:09:51,500
lossy logging use cases and in setting

00:09:49,790 --> 00:09:55,459
up like a centralized our syslog server

00:09:51,500 --> 00:09:57,439
or setting up our l2 log to an elastic

00:09:55,459 --> 00:10:00,529
search it'll help you take care of all

00:09:57,439 --> 00:10:02,839
of those different use case scenarios so

00:10:00,529 --> 00:10:04,790
lots of stuff kernel bootloader we got a

00:10:02,839 --> 00:10:08,269
lot of stuff we're excited about that

00:10:04,790 --> 00:10:10,670
we're working on so you'll see those

00:10:08,269 --> 00:10:14,029
gradually appear in galaxy and fedora

00:10:10,670 --> 00:10:17,540
and then I think we have two or three

00:10:14,029 --> 00:10:19,370
lined up for the rel 8.3 release so

00:10:17,540 --> 00:10:21,589
we're pretty excited about the new stuff

00:10:19,370 --> 00:10:23,839
we're working on so that's the general

00:10:21,589 --> 00:10:25,910
overview and I think now I'm going to

00:10:23,839 --> 00:10:28,720
hand it over to Pavel and he'll take

00:10:25,910 --> 00:10:28,720
over for the demo

00:10:32,840 --> 00:10:41,930
Thank You Terry from the election and

00:10:35,930 --> 00:10:41,930
astray I said the main feature control

00:10:43,250 --> 00:10:49,290
the main feature of Linux is ten rules

00:10:46,220 --> 00:10:51,660
compared to maybe some random arrows

00:10:49,290 --> 00:10:54,000
that you can find is supporting multiple

00:10:51,660 --> 00:10:56,880
releases and hiding the changes away

00:10:54,000 --> 00:11:01,860
from you so how exactly are we doing

00:10:56,880 --> 00:11:05,010
this so one class of changes is just

00:11:01,860 --> 00:11:07,230
simple like package names the names of

00:11:05,010 --> 00:11:07,950
configuration files the names of

00:11:07,230 --> 00:11:10,590
services

00:11:07,950 --> 00:11:12,740
those are easy enough to handle but then

00:11:10,590 --> 00:11:16,530
we have more substantial changes like

00:11:12,740 --> 00:11:19,830
change of the complete implementation of

00:11:16,530 --> 00:11:22,320
a given functionality may be replaced by

00:11:19,830 --> 00:11:24,390
something else and those implementations

00:11:22,320 --> 00:11:28,010
of a given functionality we call

00:11:24,390 --> 00:11:31,770
providers and so the rules support

00:11:28,010 --> 00:11:35,880
multiple providers when appropriate some

00:11:31,770 --> 00:11:38,100
examples canonical example is a personal

00:11:35,880 --> 00:11:41,130
note that it's not called corner all

00:11:38,100 --> 00:11:45,230
because it abstracts away the details of

00:11:41,130 --> 00:11:47,850
Connie and it's opposed both ntpd and

00:11:45,230 --> 00:11:50,100
Connie so we have to provide this for

00:11:47,850 --> 00:11:53,250
the type sink role and they are

00:11:50,100 --> 00:11:54,720
configured in the same way so we you put

00:11:53,250 --> 00:11:57,900
the same variables and you just specify

00:11:54,720 --> 00:12:00,630
the pump provider and it writes out the

00:11:57,900 --> 00:12:03,770
Connie or ntpd configuration as

00:12:00,630 --> 00:12:06,180
appropriate another classic example is

00:12:03,770 --> 00:12:09,500
network role when we can configure

00:12:06,180 --> 00:12:14,730
networking via the alternate scripts or

00:12:09,500 --> 00:12:17,850
network manager logging we have for just

00:12:14,730 --> 00:12:21,120
one provider a syslog but it's prepared

00:12:17,850 --> 00:12:22,830
to accept other providers but I'm not

00:12:21,120 --> 00:12:27,720
finding that we were ever supported but

00:12:22,830 --> 00:12:30,900
the possibility is there in the

00:12:27,720 --> 00:12:33,870
providers as I said implement the same

00:12:30,900 --> 00:12:35,880
interface or at least a common subset of

00:12:33,870 --> 00:12:38,250
all this interface because of course not

00:12:35,880 --> 00:12:41,490
all the providers will support all the

00:12:38,250 --> 00:12:44,130
possible features so now I will

00:12:41,490 --> 00:12:46,350
introduce some of the roles

00:12:44,130 --> 00:12:50,040
I'm not into all of them but I was

00:12:46,350 --> 00:12:54,779
select but it was upset first one is

00:12:50,040 --> 00:12:58,019
dancing which is medium complexity let's

00:12:54,779 --> 00:13:00,660
say and the interesting thing about time

00:12:58,019 --> 00:13:03,540
I think it's at it supports those two

00:13:00,660 --> 00:13:05,910
providers so it accepts a time sink and

00:13:03,540 --> 00:13:09,149
typical either variable which can be set

00:13:05,910 --> 00:13:13,350
to ntpd or canaan and then the rest of

00:13:09,149 --> 00:13:15,509
the configuration is same and what

00:13:13,350 --> 00:13:17,220
happens if you don't specify this very

00:13:15,509 --> 00:13:21,029
broad and it chooses an appropriate

00:13:17,220 --> 00:13:23,220
default for the given system if no time

00:13:21,029 --> 00:13:24,899
sink service is running if there are

00:13:23,220 --> 00:13:28,050
certain things ever standing in respects

00:13:24,899 --> 00:13:30,899
your choice and so for other versions of

00:13:28,050 --> 00:13:34,079
rl6 it would be the default would be

00:13:30,899 --> 00:13:36,779
ntpd but for you newer versions of her

00:13:34,079 --> 00:13:40,500
six and seven and eight and Federer the

00:13:36,779 --> 00:13:43,350
default would be calling so this is the

00:13:40,500 --> 00:13:45,540
example playbook for complete

00:13:43,350 --> 00:13:51,750
application of the time I think a time

00:13:45,540 --> 00:13:54,810
sinkhole and networking and this is one

00:13:51,750 --> 00:13:59,490
of the most complex and I would say the

00:13:54,810 --> 00:14:01,050
most useful roles but I will show just

00:13:59,490 --> 00:14:04,170
one slide about it because there's

00:14:01,050 --> 00:14:07,589
another type I bite errands on Sunday

00:14:04,170 --> 00:14:13,560
and I also talked about it we talked

00:14:07,589 --> 00:14:16,019
about it the last year so as I said the

00:14:13,560 --> 00:14:19,589
network role is the example by book the

00:14:16,019 --> 00:14:22,589
network also supports providers network

00:14:19,589 --> 00:14:25,889
manager and in its gifts the default for

00:14:22,589 --> 00:14:30,689
l6 is in its case for new Regis it's a

00:14:25,889 --> 00:14:33,689
network manager and what is important

00:14:30,689 --> 00:14:36,569
it's the network actually doesn't manage

00:14:33,689 --> 00:14:38,550
data interfaces by connection profiles

00:14:36,569 --> 00:14:40,860
which are concept in network manager and

00:14:38,550 --> 00:14:43,259
in script of have denied the appropriate

00:14:40,860 --> 00:14:47,850
scripts which are mapped to map to

00:14:43,259 --> 00:14:52,880
connections it acts as the list of

00:14:47,850 --> 00:14:58,400
connections and the feature it can set

00:14:52,880 --> 00:15:01,260
many one of them is run times tied up

00:14:58,400 --> 00:15:03,510
resistance state that means connection

00:15:01,260 --> 00:15:06,690
is present or absent on the system it

00:15:03,510 --> 00:15:08,960
supports a telnet devices it support IP

00:15:06,690 --> 00:15:13,160
protocol configuration about 486

00:15:08,960 --> 00:15:18,180
automatic via DHCP or static lag here

00:15:13,160 --> 00:15:21,390
it's about bonding and teaming bonding

00:15:18,180 --> 00:15:23,130
is more official deeming is let's say

00:15:21,390 --> 00:15:26,790
interview

00:15:23,130 --> 00:15:29,700
it's about viens yes actually

00:15:26,790 --> 00:15:32,180
example of bond we configure bond and

00:15:29,700 --> 00:15:35,270
one member interface sort of the bond

00:15:32,180 --> 00:15:36,450
it's about viens it's about bridges

00:15:35,270 --> 00:15:41,850
InfiniBand

00:15:36,450 --> 00:15:44,700
McVie on so an example as I said a list

00:15:41,850 --> 00:15:48,210
of connections this is a bond with a

00:15:44,700 --> 00:15:52,950
defined IP address and the member of the

00:15:48,210 --> 00:15:56,160
bond we can say what interface name

00:15:52,950 --> 00:16:00,590
should the connection be bound to if

00:15:56,160 --> 00:16:05,130
this is not equal to the connection name

00:16:00,590 --> 00:16:10,740
and we we apply the network all with

00:16:05,130 --> 00:16:12,540
those which is variables so now the

00:16:10,740 --> 00:16:16,530
storage role this is quite new so I'm

00:16:12,540 --> 00:16:18,450
going to speak about it rania the princi

00:16:16,530 --> 00:16:21,750
process to simplify a local storage

00:16:18,450 --> 00:16:24,360
configuration this means providing

00:16:21,750 --> 00:16:27,860
concise model to describe the storage

00:16:24,360 --> 00:16:31,080
layout mean took the model of variables

00:16:27,860 --> 00:16:33,570
accepted by the role also provide

00:16:31,080 --> 00:16:36,270
reasonable defaults now in federal you

00:16:33,570 --> 00:16:41,400
have default a system of x FS and the

00:16:36,270 --> 00:16:43,140
default storage layout is LVM but this

00:16:41,400 --> 00:16:47,790
may change maybe in the future it will

00:16:43,140 --> 00:16:49,830
be Stratus so we don't require the users

00:16:47,790 --> 00:16:52,620
to specify what they want and we apply

00:16:49,830 --> 00:16:56,010
the default from from the system's err I

00:16:52,620 --> 00:16:59,250
mean but of course status and LVM would

00:16:56,010 --> 00:17:01,320
have to be managed by the sign interface

00:16:59,250 --> 00:17:06,449
to the this consistent experience so

00:17:01,320 --> 00:17:08,400
this then provides a requirement for

00:17:06,449 --> 00:17:10,000
this concise model because it has to be

00:17:08,400 --> 00:17:15,310
abstractly as to

00:17:10,000 --> 00:17:17,319
cover multiple implementations also this

00:17:15,310 --> 00:17:21,339
is rated it endless non-essentials

00:17:17,319 --> 00:17:24,610
Detailers automatically like creating a

00:17:21,339 --> 00:17:26,980
partition or not it chooses if you don't

00:17:24,610 --> 00:17:28,569
specified chooses a default which

00:17:26,980 --> 00:17:32,310
currently is to not create a foundation

00:17:28,569 --> 00:17:35,200
but great LVS directly on on the disk to

00:17:32,310 --> 00:17:41,170
simplify to simplify the layout but is

00:17:35,200 --> 00:17:43,180
this main change and it raises the

00:17:41,170 --> 00:17:45,730
existing storage management logic what

00:17:43,180 --> 00:17:48,790
does it mean in practice it uses the

00:17:45,730 --> 00:17:51,820
blivet library which is also used in

00:17:48,790 --> 00:17:53,170
anaconda installer so the the layout and

00:17:51,820 --> 00:17:55,420
the details should be the same as

00:17:53,170 --> 00:17:58,440
provided as created by the body

00:17:55,420 --> 00:18:02,260
installer unfortunately this is one

00:17:58,440 --> 00:18:04,660
consequence the blivet library is not

00:18:02,260 --> 00:18:06,760
available at the required version in a

00:18:04,660 --> 00:18:08,740
realistic so we can manage only there

00:18:06,760 --> 00:18:15,670
were seven and well eight and of course

00:18:08,740 --> 00:18:19,450
recent versions of fedora also some

00:18:15,670 --> 00:18:24,310
examples a simple example we have an

00:18:19,450 --> 00:18:26,470
example pi book which creates for our

00:18:24,310 --> 00:18:30,030
system directly on a disk without volume

00:18:26,470 --> 00:18:35,430
management so we have as volumes volumes

00:18:30,030 --> 00:18:39,280
variable which says that we want to

00:18:35,430 --> 00:18:42,910
mount it as stretch back up the disk

00:18:39,280 --> 00:18:44,980
should be as DC and the filesystem tab

00:18:42,910 --> 00:18:47,140
is commanded out because there are will

00:18:44,980 --> 00:18:51,790
choose this sweeta by default which is

00:18:47,140 --> 00:18:53,970
which is X of s now what what about this

00:18:51,790 --> 00:19:02,050
is this was just a whole disk

00:18:53,970 --> 00:19:05,550
now what about volume management so for

00:19:02,050 --> 00:19:08,440
this we are getting back to the

00:19:05,550 --> 00:19:11,620
consistent consistent configuration so

00:19:08,440 --> 00:19:15,670
we choose an abstract model we have to a

00:19:11,620 --> 00:19:18,400
torus of configuration we have pools and

00:19:15,670 --> 00:19:21,040
inside the pools we nest volumes and for

00:19:18,400 --> 00:19:22,990
Albion pool is just boring

00:19:21,040 --> 00:19:25,540
and volume is logical volume but for

00:19:22,990 --> 00:19:27,040
other volume managers the terminology

00:19:25,540 --> 00:19:31,020
may be different but we will have

00:19:27,040 --> 00:19:34,030
studied in the same same way so LVM is

00:19:31,020 --> 00:19:37,390
for perusal VMs to default and actually

00:19:34,030 --> 00:19:41,380
the same the only supported one right

00:19:37,390 --> 00:19:45,610
now so we create volume group on those

00:19:41,380 --> 00:19:50,410
two disks and inside the the volume

00:19:45,610 --> 00:19:52,930
group we create the volumes we create

00:19:50,410 --> 00:19:55,000
two two volumes with a given size again

00:19:52,930 --> 00:19:57,160
the file system type doesn't need to be

00:19:55,000 --> 00:20:02,590
specified if you don't if you don't want

00:19:57,160 --> 00:20:05,110
and we mount them and we actually we

00:20:02,590 --> 00:20:07,060
actually also configure them in a

00:20:05,110 --> 00:20:11,310
festive so they are mounted on boot this

00:20:07,060 --> 00:20:11,310
is all handled by by the Patrol

00:20:15,180 --> 00:20:19,930
we can provide if needed we can provide

00:20:17,890 --> 00:20:22,650
the prices and that explicitly so if you

00:20:19,930 --> 00:20:29,410
want you can make sure it is extra

00:20:22,650 --> 00:20:32,350
charges you can you can provide X you

00:20:29,410 --> 00:20:35,980
can divide X for whatever is supported

00:20:32,350 --> 00:20:38,950
on the system you can set some fastest

00:20:35,980 --> 00:20:42,520
and rival fastest and create options or

00:20:38,950 --> 00:20:46,000
mount options those will be of course

00:20:42,520 --> 00:20:48,670
for system specific so when you when you

00:20:46,000 --> 00:20:50,740
do this you must make sure make sure

00:20:48,670 --> 00:20:55,390
that you understand the Appropriations

00:20:50,740 --> 00:20:57,610
for forgiving for system so what the

00:20:55,390 --> 00:20:59,650
status now we have a stable version

00:20:57,610 --> 00:21:04,500
released order in the galaxy in version

00:20:59,650 --> 00:21:08,320
1.1 I believe it's included recently in

00:21:04,500 --> 00:21:11,920
8.1 what this support it is what I

00:21:08,320 --> 00:21:17,680
showed all disk and toe with signal

00:21:11,920 --> 00:21:20,290
partition basic albums support and what

00:21:17,680 --> 00:21:25,900
will we support in no particular order

00:21:20,290 --> 00:21:27,580
is encryption and D rate are the earth

00:21:25,900 --> 00:21:29,159
in commissioning because those are just

00:21:27,580 --> 00:21:34,529
the classical Albion

00:21:29,159 --> 00:21:37,739
logical volumes multipath also LVM right

00:21:34,529 --> 00:21:39,720
in addition to MD right and the video

00:21:37,739 --> 00:21:42,529
compression and deduplication and

00:21:39,720 --> 00:21:47,489
possibly a host of other features like

00:21:42,529 --> 00:21:52,830
the volume types like status it does

00:21:47,489 --> 00:21:56,999
demand for this so now about some

00:21:52,830 --> 00:21:59,249
challenges in in the storage role so I

00:21:56,999 --> 00:22:00,840
got first speak about the most important

00:21:59,249 --> 00:22:02,460
one because even if the storage hall

00:22:00,840 --> 00:22:04,769
supports would you what you need and

00:22:02,460 --> 00:22:10,200
supports the system that you need and

00:22:04,769 --> 00:22:15,919
has a nice and logical end up stock

00:22:10,200 --> 00:22:18,690
configuration layout of variables if it

00:22:15,919 --> 00:22:21,059
happens to the story or date I was still

00:22:18,690 --> 00:22:24,539
probably not be very happy with with the

00:22:21,059 --> 00:22:27,450
result so the most important challenge

00:22:24,539 --> 00:22:34,320
is not destroying your data this was

00:22:27,450 --> 00:22:38,700
actually quite a change because the

00:22:34,320 --> 00:22:41,009
troll doesn't doesn't remove volumes

00:22:38,700 --> 00:22:43,700
which are not specified in the in the

00:22:41,009 --> 00:22:47,429
variables but about what about

00:22:43,700 --> 00:22:49,739
conflicting volumes if you have if you

00:22:47,429 --> 00:22:53,340
have a volume already on the system and

00:22:49,739 --> 00:22:55,739
to create you specify that you want a

00:22:53,340 --> 00:22:58,169
volume with the same name but different

00:22:55,739 --> 00:23:01,129
for a system type and we cannot convert

00:22:58,169 --> 00:23:04,409
from XFS to X for all right vice-versa

00:23:01,129 --> 00:23:08,369
so the or would have to delete the

00:23:04,409 --> 00:23:11,309
volume and recreate it let's say you by

00:23:08,369 --> 00:23:13,950
mistake you give it a disk roger saudi

00:23:11,309 --> 00:23:16,470
an existing partition or existing file

00:23:13,950 --> 00:23:20,609
system and you want to create LVM on it

00:23:16,470 --> 00:23:22,590
or vice versa you don't want this to be

00:23:20,609 --> 00:23:25,409
right in this in this case of course the

00:23:22,590 --> 00:23:27,539
direction is not hundred percent

00:23:25,409 --> 00:23:31,200
reliable in those cases but at least

00:23:27,539 --> 00:23:33,899
when we can detect it we don't remove it

00:23:31,200 --> 00:23:37,139
because we have a variable storage safe

00:23:33,899 --> 00:23:38,010
mode which defaults to yes and which

00:23:37,139 --> 00:23:42,780
does

00:23:38,010 --> 00:23:48,030
to not do such possibly unintended and

00:23:42,780 --> 00:23:50,930
unsafe operations to this event Simon

00:23:48,030 --> 00:23:56,120
Bank and the cake in existing objects

00:23:50,930 --> 00:23:59,460
what it doesn't protect again against

00:23:56,120 --> 00:24:02,270
intended remover because if you say that

00:23:59,460 --> 00:24:05,280
you want such a volume to be absent it

00:24:02,270 --> 00:24:07,230
remove it because if it's in this case

00:24:05,280 --> 00:24:09,770
is presumably not a mistake it's what

00:24:07,230 --> 00:24:09,770
you asked for

00:24:10,220 --> 00:24:15,180
why not the changes for those are like

00:24:13,590 --> 00:24:20,130
charges more for the huge future

00:24:15,180 --> 00:24:23,210
development so those are stuff that

00:24:20,130 --> 00:24:26,430
people would talk about like to have but

00:24:23,210 --> 00:24:31,700
they are kind of hard to implement one

00:24:26,430 --> 00:24:35,580
is automatic device name while when one

00:24:31,700 --> 00:24:38,310
wants to create for a system on LVM one

00:24:35,580 --> 00:24:41,910
needs to supply mount point and also the

00:24:38,310 --> 00:24:44,100
logical volume name so we want that see

00:24:41,910 --> 00:24:46,550
to consider not having to supply the

00:24:44,100 --> 00:24:48,990
logical value name and having it reduced

00:24:46,550 --> 00:24:51,210
automatically by a some let's say

00:24:48,990 --> 00:24:56,040
default from from the mountain mount

00:24:51,210 --> 00:25:00,420
point time also automatic size if you

00:24:56,040 --> 00:25:01,950
want to use the full size of the disk it

00:25:00,420 --> 00:25:06,030
should not be necessary to specify the

00:25:01,950 --> 00:25:09,330
size another it's automatic this

00:25:06,030 --> 00:25:12,090
direction is the unused disks you

00:25:09,330 --> 00:25:14,280
shouldn't be forced to specify the disk

00:25:12,090 --> 00:25:19,440
by the names which can be even changing

00:25:14,280 --> 00:25:21,270
but it should be possible to just say

00:25:19,440 --> 00:25:23,760
that you want all the disks or the three

00:25:21,270 --> 00:25:30,470
disks and the role would create I don't

00:25:23,760 --> 00:25:34,410
know all the disks and also size

00:25:30,470 --> 00:25:37,380
specified as maintained percentage of

00:25:34,410 --> 00:25:41,280
the total space why does changing

00:25:37,380 --> 00:25:44,220
because it is enough new deployment but

00:25:41,280 --> 00:25:49,400
then it's question what to do if the

00:25:44,220 --> 00:25:49,400
system changed like if we choose to

00:25:49,609 --> 00:25:53,969
though LVM on all the disk and then you

00:25:52,349 --> 00:25:56,099
add a new disk what should the

00:25:53,969 --> 00:25:59,609
subsequent application of the oil do

00:25:56,099 --> 00:26:01,259
when this or did this for Engel so we

00:25:59,609 --> 00:26:03,899
are thinking that the key is to preserve

00:26:01,259 --> 00:26:10,469
the current configuration when it's

00:26:03,899 --> 00:26:12,119
audit and not adding new disks also for

00:26:10,469 --> 00:26:14,669
percentage besides of course we cannot

00:26:12,119 --> 00:26:17,789
support it as percentage of the free

00:26:14,669 --> 00:26:20,419
space because if we'd say a hundred

00:26:17,789 --> 00:26:22,769
percent of the free space next time

00:26:20,419 --> 00:26:29,429
there will be no free space and the next

00:26:22,769 --> 00:26:33,950
term would use zero and and yet for any

00:26:29,429 --> 00:26:36,599
other percentage it would be only indeed

00:26:33,950 --> 00:26:40,129
this means that we have to specify the

00:26:36,599 --> 00:26:40,129
percentage as a percentage of the total

00:26:40,609 --> 00:26:50,519
so now I will do a demo the objective of

00:26:47,609 --> 00:26:54,209
the demo is to configure IBM so that it

00:26:50,519 --> 00:26:56,789
has one more configured network

00:26:54,209 --> 00:26:59,489
interface I was at a large ante on this

00:26:56,789 --> 00:27:01,739
interface I will create a V on I will

00:26:59,489 --> 00:27:06,149
access a disk over ice Cossack over this

00:27:01,739 --> 00:27:08,820
this V on I will create a VM on this

00:27:06,149 --> 00:27:14,489
disk and mount the logical volumes

00:27:08,820 --> 00:27:17,190
I will export them over NFS and I will

00:27:14,489 --> 00:27:20,820
enable firewall and Jennifer's must be

00:27:17,190 --> 00:27:32,669
not be working when I break the file but

00:27:20,820 --> 00:27:35,339
I will use that and I ever actually use

00:27:32,669 --> 00:27:37,700
a video because the network is too slow

00:27:35,339 --> 00:27:37,700
here

00:28:07,490 --> 00:28:10,930
[Music]

00:28:22,610 --> 00:28:32,809
so let me show you the playbook can you

00:28:31,159 --> 00:28:53,990
read that does he need to make the font

00:28:32,809 --> 00:28:58,940
larger okay and I think this is the

00:28:53,990 --> 00:29:00,799
biggest extreme suppose we do have all

00:28:58,940 --> 00:29:02,929
of this and a github repo so that you

00:29:00,799 --> 00:29:17,299
can access it later the link is at the

00:29:02,929 --> 00:29:20,120
end of the slide deck so I'm sure the

00:29:17,299 --> 00:29:23,360
assumptions for the father for this

00:29:20,120 --> 00:29:27,889
example because I created a ice Casa

00:29:23,360 --> 00:29:30,049
target listening on on the on the host

00:29:27,889 --> 00:29:31,909
and I will not show how to do this

00:29:30,049 --> 00:29:35,120
because I don't have time I will really

00:29:31,909 --> 00:29:37,580
show only the configuration of the

00:29:35,120 --> 00:29:44,120
virtual machine so he uses some

00:29:37,580 --> 00:29:46,940
variables which do it - which - which I

00:29:44,120 --> 00:29:52,010
scuzzy server to connect and what Dyke

00:29:46,940 --> 00:29:56,029
tries to export and first of all I

00:29:52,010 --> 00:29:59,630
create the network configuration so I

00:29:56,029 --> 00:30:04,820
set up the net interface with the large

00:29:59,630 --> 00:30:06,830
MTU I could but bind it to the interface

00:30:04,820 --> 00:30:08,389
the profile to the interface via the

00:30:06,830 --> 00:30:09,590
name but I don't need to because then

00:30:08,389 --> 00:30:11,480
I'd named the same

00:30:09,590 --> 00:30:15,950
I could also bind it via the MAC address

00:30:11,480 --> 00:30:19,940
I configure an IP address on it and I

00:30:15,950 --> 00:30:21,799
configure a VLAN on on this remote

00:30:19,940 --> 00:30:25,250
interface so I specified the parent

00:30:21,799 --> 00:30:29,960
which refers to this one we are I be an

00:30:25,250 --> 00:30:31,970
ID and also an IP address on the VM then

00:30:29,960 --> 00:30:34,130
I discuss a ask us initiated

00:30:31,970 --> 00:30:35,910
configuration for for this we don't have

00:30:34,130 --> 00:30:40,590
a role yet so I do it

00:30:35,910 --> 00:30:46,530
see in you are using e using standard

00:30:40,590 --> 00:30:52,560
and simple modules I started I scuzzy

00:30:46,530 --> 00:30:55,950
the demon I make it connect to the ice

00:30:52,560 --> 00:31:00,290
cozy target and this provides the name

00:30:55,950 --> 00:31:00,290
of the disks that that it will create

00:31:00,560 --> 00:31:08,550
finally I used the straight roll to

00:31:04,560 --> 00:31:11,670
create the Valen group on this on those

00:31:08,550 --> 00:31:15,150
disks so the storage pool with the ROM

00:31:11,670 --> 00:31:17,940
go disco despot regime this has two

00:31:15,150 --> 00:31:21,600
volumes shared with the given size with

00:31:17,940 --> 00:31:23,640
a given mount point and users I change

00:31:21,600 --> 00:31:27,060
the file system type here and also with

00:31:23,640 --> 00:31:30,390
the greedy read in mind one point I'm

00:31:27,060 --> 00:31:32,550
then make the directories world readable

00:31:30,390 --> 00:31:36,390
so we can access them over NFS without

00:31:32,550 --> 00:31:40,320
worrying about about authentication and

00:31:36,390 --> 00:31:42,870
I export them by our house this is our

00:31:40,320 --> 00:31:45,270
system object we don't have a yet Linux

00:31:42,870 --> 00:31:48,300
is several for NFS exporting so I'm

00:31:45,270 --> 00:31:49,560
using this one this can be also obtained

00:31:48,300 --> 00:31:55,590
from unstable galaxy

00:31:49,560 --> 00:32:01,800
and I'm showing those two directories to

00:31:55,590 --> 00:32:04,260
the VM host and finally I'm using the

00:32:01,800 --> 00:32:08,400
network role so it's a fiver or also

00:32:04,260 --> 00:32:11,070
part of for Nexus 10 holes to enable the

00:32:08,400 --> 00:32:13,550
NFS service and to enable to enable

00:32:11,070 --> 00:32:13,550
firewall D

00:32:44,149 --> 00:32:51,119
we are applying the whole the whole

00:32:46,709 --> 00:32:53,759
playbook I'm doing the recording because

00:32:51,119 --> 00:32:57,599
with the network here I found out it's

00:32:53,759 --> 00:32:59,399
it's too slow the eating gangs at

00:32:57,599 --> 00:33:08,190
installing packages and it has to insult

00:32:59,399 --> 00:33:10,079
like it is multiple times so the

00:33:08,190 --> 00:33:13,589
networking at this time has been already

00:33:10,079 --> 00:33:15,839
applied and it to stick the connectivity

00:33:13,589 --> 00:33:17,849
it does it every time because you may

00:33:15,839 --> 00:33:26,009
have changed the your management

00:33:17,849 --> 00:33:28,440
interface now we're setting up the ice

00:33:26,009 --> 00:33:32,159
cos the initiator and now we are

00:33:28,440 --> 00:33:35,429
applying the storage role this is lots

00:33:32,159 --> 00:33:37,469
of this is complex and also data sort of

00:33:35,429 --> 00:33:39,979
tasks so it will paint the lots of

00:33:37,469 --> 00:33:39,979
messages

00:34:12,540 --> 00:34:18,429
so we'd finished exposure so it finished

00:34:16,060 --> 00:34:23,050
mounting those four systems and now we

00:34:18,429 --> 00:34:29,820
are exporting the NFS deliveries of NFS

00:34:23,050 --> 00:34:29,820
and finally we allow NFS on the firewall

00:34:34,470 --> 00:34:41,650
and we exported those EFS shares so here

00:34:38,230 --> 00:34:44,380
I'm on the Virtual Machine host and I'm

00:34:41,650 --> 00:34:46,570
mounting from the from the VM this one

00:34:44,380 --> 00:34:52,150
this one directory the export share the

00:34:46,570 --> 00:34:54,910
directory and I showed that one can see

00:34:52,150 --> 00:35:07,120
the the file the test file that I

00:34:54,910 --> 00:35:11,410
created in this directory I will show

00:35:07,120 --> 00:35:14,460
how it looks inside the inside the

00:35:11,410 --> 00:35:14,460
virtual machine

00:35:27,180 --> 00:35:31,730
so those are the network interfaces you

00:35:29,609 --> 00:35:37,970
can see the Devere on here

00:35:31,730 --> 00:35:37,970
ETH one with the NTU

00:35:48,599 --> 00:35:55,230
also the villain with a complete IP

00:35:52,750 --> 00:35:55,230
address

00:36:10,800 --> 00:36:22,250
I will show the configuration of the

00:36:16,020 --> 00:36:26,810
devices of the disk devices here you see

00:36:22,250 --> 00:36:30,450
the disk with the two logical volumes

00:36:26,810 --> 00:36:33,450
mounted as those two mountains and

00:36:30,450 --> 00:36:39,770
finally I will show that this is really

00:36:33,450 --> 00:36:39,770
the ice custody the ice cozy disk

00:36:41,270 --> 00:36:46,440
because this is a utility which we'll

00:36:44,040 --> 00:36:50,480
discuss discuss the properties and you

00:36:46,440 --> 00:36:50,480
see it's indeed is cozy

00:37:35,290 --> 00:37:40,220
logging or I will skip this one we don't

00:37:38,000 --> 00:37:43,160
have time anyway and also the author of

00:37:40,220 --> 00:37:52,060
the logging log on photo J couldn't come

00:37:43,160 --> 00:37:54,349
to death conf so how many of you

00:37:52,060 --> 00:38:03,260
consider using millennium system arose

00:37:54,349 --> 00:38:06,800
now not everybody and how many of you

00:38:03,260 --> 00:38:10,070
consider are already writing on several

00:38:06,800 --> 00:38:15,849
roles or consider writing and symbols

00:38:10,070 --> 00:38:19,400
I see the definitely some people who

00:38:15,849 --> 00:38:23,020
wouldn't consider a Linux system and

00:38:19,400 --> 00:38:26,210
also at the end I will provide some some

00:38:23,020 --> 00:38:27,589
notes about implementing ansible and

00:38:26,210 --> 00:38:30,410
simple rules which are not specific to

00:38:27,589 --> 00:38:32,089
learning system or also even those who

00:38:30,410 --> 00:38:39,640
implement their own rules maybe can

00:38:32,089 --> 00:38:39,640
learn something so the challenge is

00:38:40,060 --> 00:38:46,790
mainly memory loss I've expecting the

00:38:44,869 --> 00:38:49,780
previous setting the previous state of

00:38:46,790 --> 00:38:53,359
the system and I'm now speaking about

00:38:49,780 --> 00:38:56,089
actually interface challenges because we

00:38:53,359 --> 00:38:57,560
want to provide a stable interface this

00:38:56,089 --> 00:38:58,570
means that we shouldn't we shouldn't

00:38:57,560 --> 00:39:03,710
change it

00:38:58,570 --> 00:39:05,390
because if we provide a way to hide the

00:39:03,710 --> 00:39:07,040
changes in the other underlying system

00:39:05,390 --> 00:39:10,099
but we change the role we create the

00:39:07,040 --> 00:39:15,920
same problem again so we have to design

00:39:10,099 --> 00:39:18,470
the interface in a stable way and so

00:39:15,920 --> 00:39:20,750
those are interface design changes for

00:39:18,470 --> 00:39:26,450
implementation we can always change it

00:39:20,750 --> 00:39:30,800
if we if we respect previous the

00:39:26,450 --> 00:39:32,089
previous interface so about respecting

00:39:30,800 --> 00:39:35,000
previous setting this is actually

00:39:32,089 --> 00:39:37,160
interface question whether we want to

00:39:35,000 --> 00:39:41,470
declare complete state or to degrade

00:39:37,160 --> 00:39:41,470
only to declare changes to the system

00:39:42,260 --> 00:39:48,210
let's show some example using the SEM

00:39:46,530 --> 00:39:49,109
cell which I have not shown but it's

00:39:48,210 --> 00:39:51,480
simple enough

00:39:49,109 --> 00:39:54,150
it's consults I know it's boolean's and

00:39:51,480 --> 00:39:55,680
the question is whether it should when

00:39:54,150 --> 00:39:59,940
you race the xerneas booing is but it

00:39:55,680 --> 00:40:01,890
should only set those boolean's and drop

00:39:59,940 --> 00:40:04,680
all the previous modifications to a set

00:40:01,890 --> 00:40:07,320
the system to the to a clean state or

00:40:04,680 --> 00:40:09,740
whether it should just add this one

00:40:07,320 --> 00:40:13,859
boolean and keep all the previous

00:40:09,740 --> 00:40:15,540
previous ones so let's suppose we would

00:40:13,859 --> 00:40:19,619
choose to drop all the previous

00:40:15,540 --> 00:40:21,900
modifications and only set this one so

00:40:19,619 --> 00:40:27,060
we have an example of a Samba PI group

00:40:21,900 --> 00:40:29,400
which sets one boolean for Samba but no

00:40:27,060 --> 00:40:34,710
words suppose we have also NFS playbook

00:40:29,400 --> 00:40:36,599
which sets some boolean for NFS and now

00:40:34,710 --> 00:40:40,320
we want to combine the two PI books or

00:40:36,599 --> 00:40:44,070
and then from a master playbook or abide

00:40:40,320 --> 00:40:47,190
the two to a same to the same host what

00:40:44,070 --> 00:40:50,400
happens here we just clobbered the

00:40:47,190 --> 00:40:55,920
debris in here so for this reason it is

00:40:50,400 --> 00:40:58,500
by default we in those cases always have

00:40:55,920 --> 00:41:00,740
the previous state and only abided to

00:40:58,500 --> 00:41:03,390
the changes to it

00:41:00,740 --> 00:41:04,770
hey Pavo we're almost out of time could

00:41:03,390 --> 00:41:07,770
we ask the audience if they have any

00:41:04,770 --> 00:41:08,900
questions and get their feedback I think

00:41:07,770 --> 00:41:12,390
so

00:41:08,900 --> 00:41:13,920
so yeah does anybody have any questions

00:41:12,390 --> 00:41:17,030
and then if we have time we can go

00:41:13,920 --> 00:41:17,030
through a little bit more yes

00:41:22,730 --> 00:41:35,930
oh of course

00:41:31,790 --> 00:41:38,510
because it's always a yeah he was asking

00:41:35,930 --> 00:41:40,640
is there a place where all of the

00:41:38,510 --> 00:41:47,599
variables and input parameters are

00:41:40,640 --> 00:41:50,480
documented each row has a readme file

00:41:47,599 --> 00:41:53,150
which you can see on the github it is

00:41:50,480 --> 00:41:56,030
produced on and simple galaxy and it's

00:41:53,150 --> 00:41:58,550
also included in the package also format

00:41:56,030 --> 00:42:03,430
it as HTML so you can you can see what

00:41:58,550 --> 00:42:03,430
role does and what variables it supports

00:42:13,240 --> 00:42:17,150
in the storage roles you mention some

00:42:15,800 --> 00:42:19,700
feature but also magically picking

00:42:17,150 --> 00:42:22,430
drives and so on and isn't that

00:42:19,700 --> 00:42:24,140
dangerous if you want to roll run roll

00:42:22,430 --> 00:42:26,480
multiple times I mean they are supposed

00:42:24,140 --> 00:42:27,710
to be idempotent right so like I run

00:42:26,480 --> 00:42:28,250
them a second time they shouldn't change

00:42:27,710 --> 00:42:29,900
anything

00:42:28,250 --> 00:42:33,640
but it seems like they would always grab

00:42:29,900 --> 00:42:33,640
the next to available disks and so on

00:42:34,510 --> 00:42:38,810
yeah that's a good question and that's

00:42:37,130 --> 00:42:42,190
why I listed it among the challenges

00:42:38,810 --> 00:42:47,510
let's say the challenges or challenging

00:42:42,190 --> 00:42:51,349
features and I think we think that the

00:42:47,510 --> 00:42:53,450
right answer is wanted to be able to say

00:42:51,349 --> 00:42:56,990
that you want all three disks and then

00:42:53,450 --> 00:43:01,490
on the next round done off a disk but of

00:42:56,990 --> 00:43:03,980
course of course the volume group is

00:43:01,490 --> 00:43:10,069
already there so you don't need to do

00:43:03,980 --> 00:43:12,829
anything but that said if the volume

00:43:10,069 --> 00:43:17,180
group was already there even if we

00:43:12,829 --> 00:43:19,250
picked only one of them the second time

00:43:17,180 --> 00:43:21,589
as their volume group or they died it

00:43:19,250 --> 00:43:24,740
would not not modify it that what I

00:43:21,589 --> 00:43:26,990
mentioned we want to make sure that this

00:43:24,740 --> 00:43:30,290
the second time it runs it doesn't do

00:43:26,990 --> 00:43:34,390
this automatic detection because it

00:43:30,290 --> 00:43:34,390
already has something and it's satisfied

00:43:43,220 --> 00:43:47,400
so in this case it would see that like

00:43:45,840 --> 00:43:48,960
the mountain point that is associated so

00:43:47,400 --> 00:43:49,890
that drive already exists and then it

00:43:48,960 --> 00:44:36,620
wouldíve it alone

00:43:49,890 --> 00:44:41,250
yes yes yeah do you want to answer that

00:44:36,620 --> 00:44:43,920
so the question was when you use the

00:44:41,250 --> 00:44:47,880
whole statement in the playbook it

00:44:43,920 --> 00:44:53,760
exposes order of Erebus to the whole

00:44:47,880 --> 00:44:55,620
book on and how safe it is is it and

00:44:53,760 --> 00:45:02,220
whether we should not use the include

00:44:55,620 --> 00:45:05,490
role but the answer is that that's why

00:45:02,220 --> 00:45:08,250
the all variables are trafficked always

00:45:05,490 --> 00:45:10,380
with with their own name to to at least

00:45:08,250 --> 00:45:15,050
reduce the possibility of accidental

00:45:10,380 --> 00:45:19,260
collisions but I'm afraid that the

00:45:15,050 --> 00:45:25,800
include oral statement also keeps the

00:45:19,260 --> 00:45:32,840
variables it doesn't so I did but if you

00:45:25,800 --> 00:45:32,840
use import always it's like Rosie okay

00:45:32,930 --> 00:45:40,080
yeah so it is definitely then safer to

00:45:36,570 --> 00:45:43,410
use in good role but we are working

00:45:40,080 --> 00:45:45,300
under the assumption that one would use

00:45:43,410 --> 00:45:46,560
the whole statement and so they should

00:45:45,300 --> 00:45:48,920
be safe if

00:45:46,560 --> 00:45:48,920
for this

00:45:56,010 --> 00:46:07,940
another question any other questions yes

00:46:01,980 --> 00:46:12,900
sir so you just showed us time sink

00:46:07,940 --> 00:46:20,609
supports ntpd and crony - do you plan to

00:46:12,900 --> 00:46:23,760
support system the time Cindy I don't

00:46:20,609 --> 00:46:28,470
think so we do not yet support system

00:46:23,760 --> 00:46:31,109
the time sink D do we we don't support

00:46:28,470 --> 00:46:32,820
it definitely right now what I think it

00:46:31,109 --> 00:46:34,650
depends on the demand whether we will

00:46:32,820 --> 00:46:41,430
support it but - right now we don't have

00:46:34,650 --> 00:46:43,109
any specific plans to do it yeah so if

00:46:41,430 --> 00:46:45,720
that's a feature request you would like

00:46:43,109 --> 00:46:48,420
to ask or request you can go to our

00:46:45,720 --> 00:46:50,700
github repo and open an issue and any

00:46:48,420 --> 00:46:52,230
feedback that you have to share anything

00:46:50,700 --> 00:46:54,600
that you would like out of these we'd

00:46:52,230 --> 00:46:58,380
love for you to open a issue on github

00:46:54,600 --> 00:47:00,390
or a bugzilla at bugzilla RedHat calm

00:46:58,380 --> 00:47:02,609
and let us know what you need out of

00:47:00,390 --> 00:47:05,070
them if they don't need your meet your

00:47:02,609 --> 00:47:07,530
needs we are very very interested in

00:47:05,070 --> 00:47:14,150
your feedback so let us know what

00:47:07,530 --> 00:47:14,150
features you want us to add yes sir

00:47:24,760 --> 00:47:32,120
yeah we are we have a few basic examples

00:47:28,670 --> 00:47:36,320
so the slides will be made available as

00:47:32,120 --> 00:47:38,510
a PDF and at the end is a link to our

00:47:36,320 --> 00:47:42,800
github repo where there is a dev comp

00:47:38,510 --> 00:47:44,990
dev demo folder and it includes a couple

00:47:42,800 --> 00:47:47,060
of different demos right now there's

00:47:44,990 --> 00:47:49,310
there's one that uses them as an example

00:47:47,060 --> 00:47:52,070
for setting up an image builder node and

00:47:49,310 --> 00:47:55,730
then Pavel's will be uploaded later

00:47:52,070 --> 00:47:57,470
today I think oh it's already there so

00:47:55,730 --> 00:48:00,890
we have a few examples we're also

00:47:57,470 --> 00:48:03,290
looking at for those workload examples

00:48:00,890 --> 00:48:05,480
we want to have like an overall Indian

00:48:03,290 --> 00:48:07,550
solution playbook that demonstrates

00:48:05,480 --> 00:48:09,860
using these to set up for example

00:48:07,550 --> 00:48:11,300
Microsoft sequel server and taking care

00:48:09,860 --> 00:48:14,330
of like all of the different things you

00:48:11,300 --> 00:48:16,400
need to take care of so we don't have we

00:48:14,330 --> 00:48:19,310
only have a few basic examples right now

00:48:16,400 --> 00:48:22,400
but over the next year we expand expect

00:48:19,310 --> 00:48:26,030
to have multiple also you don't need to

00:48:22,400 --> 00:48:27,950
use all the roles at the start you can

00:48:26,030 --> 00:48:33,820
start one by one because right now they

00:48:27,950 --> 00:48:33,820
are at independent yes sir

00:48:40,780 --> 00:48:49,520
yeah the question is can I specify the

00:48:43,370 --> 00:48:52,550
block device by UUID or by yeah by like

00:48:49,520 --> 00:48:54,950
the PCI bus path do you want to answer

00:48:52,550 --> 00:48:58,010
that some of some of the methods are

00:48:54,950 --> 00:49:01,370
supported but I'm not entirely sure what

00:48:58,010 --> 00:49:04,390
what is supported and what is what is

00:49:01,370 --> 00:49:08,750
not supported but at least I think the

00:49:04,390 --> 00:49:12,320
UUID links are supported but it needs to

00:49:08,750 --> 00:49:23,990
be the device UID button and on the idea

00:49:12,320 --> 00:49:26,450
of the file system because yeah actually

00:49:23,990 --> 00:49:28,880
so not today but that's one of our goals

00:49:26,450 --> 00:49:31,370
so for example as a database

00:49:28,880 --> 00:49:33,890
administrator the storage team gives me

00:49:31,370 --> 00:49:37,160
a new hundred gigabyte lan or a terabyte

00:49:33,890 --> 00:49:39,140
line and all they give me is the w w ID

00:49:37,160 --> 00:49:41,600
who are the the worldwide name or

00:49:39,140 --> 00:49:43,670
whatever you want to call it and so how

00:49:41,600 --> 00:49:46,550
can we provide you multiple ways both

00:49:43,670 --> 00:49:48,920
for networking and storage to have

00:49:46,550 --> 00:49:51,560
multiple ways of expressing the device

00:49:48,920 --> 00:49:53,360
that you want to use so for storage that

00:49:51,560 --> 00:49:56,510
might be the Linux blocks device name

00:49:53,360 --> 00:49:59,960
might be the multipath name or it might

00:49:56,510 --> 00:50:02,570
be the WW ID that the storage array

00:49:59,960 --> 00:50:05,480
presents and then let the role figure

00:50:02,570 --> 00:50:07,730
out the multipath names and everything

00:50:05,480 --> 00:50:10,040
so that you as an admin don't have to

00:50:07,730 --> 00:50:13,250
worry about it you just plug in the WW

00:50:10,040 --> 00:50:15,380
ID hit go and it just takes care of that

00:50:13,250 --> 00:50:19,730
for you so that's one of our goals and

00:50:15,380 --> 00:50:23,120
aspirations is to require the user to

00:50:19,730 --> 00:50:26,570
only provide us what details they must

00:50:23,120 --> 00:50:29,600
provide or want to express but not

00:50:26,570 --> 00:50:32,870
require you to specify all the typical

00:50:29,600 --> 00:50:36,050
default values let's assume recommended

00:50:32,870 --> 00:50:38,450
defaults so that you don't have to

00:50:36,050 --> 00:50:40,520
express all the details unless you want

00:50:38,450 --> 00:50:42,920
to you you have the power to express

00:50:40,520 --> 00:50:45,740
more details but otherwise just give me

00:50:42,920 --> 00:50:47,990
the WW ID and I'll just get it mounted

00:50:45,740 --> 00:50:48,500
for you and take care of the file system

00:50:47,990 --> 00:50:50,380
for

00:50:48,500 --> 00:50:53,859
with the defaults does that make sense

00:50:50,380 --> 00:50:57,740
anyway I'm sure some of the links under

00:50:53,859 --> 00:51:01,250
such deaths such discs by something as

00:50:57,740 --> 00:51:02,869
supported but I'm not exactly sure that

00:51:01,250 --> 00:51:04,760
now which ones are supported right now

00:51:02,869 --> 00:51:13,330
so at least some of them are are

00:51:04,760 --> 00:51:13,330

YouTube URL: https://www.youtube.com/watch?v=kKHd-ghskI8


