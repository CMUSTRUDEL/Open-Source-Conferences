Title: A Simpler Way to Update Your Apps - Ember London - July 2018
Publication date: 2018-07-17
Playlist: Ember London
Description: 
	Presented by Kelly Selden.

You should have less work and fewer headaches when updating Ember.js apps.

_

About Pusher Sessions:

We're bringing the meetup to you. With Sessions, you can watch recordings of top-notch talks from developer meetups -- wherever and whenever you want.

Meetups are a great way to learn from our peers and to keep up with the latest trends and technologies. As developers ourselves, we at Pusher wanted to bring this great content to more people... So we built Sessions. On Sessions, you can watch talks that interest you and subscribe to be notified when new content gets added.

If you run a meetup and want to get involved, kindly get in touch.

_

About Pusher:

Pusher is a hosted service with APIs, developer tools and open source libraries that greatly simplify integrating real-time functionality into web and mobile applications. 

Pusher will automatically scale when required, removing all the pain of setting up and maintaining a secure, real-time infrastructure. 

Pusher is already trusted to do so by thousands of developers and companies like GitHub, MailChimp, the Financial Times, Buffer and many more. 

Getting started takes just a few seconds: simply go to pusher.com and create a free account. Happy hacking!
Captions: 
	00:00:00,060 --> 00:00:05,580
my name is Kelly Selden on the embassy

00:00:02,669 --> 00:00:08,820
like core team this is just a little

00:00:05,580 --> 00:00:14,340
talk about a newer way to update your

00:00:08,820 --> 00:00:18,300
ember apps so I just moved here from

00:00:14,340 --> 00:00:19,740
Seattle and I've been at CrowdStrike for

00:00:18,300 --> 00:00:23,570
like a month now

00:00:19,740 --> 00:00:26,220
Chris and I are new hires over there

00:00:23,570 --> 00:00:30,570
it's a cyber security company with an

00:00:26,220 --> 00:00:34,440
all ember front-end we're hiring a new

00:00:30,570 --> 00:00:37,230
skill level even junior open-source

00:00:34,440 --> 00:00:39,450
friendly I'm able to work on this talk

00:00:37,230 --> 00:00:44,370
there and help out with ember CLI things

00:00:39,450 --> 00:00:46,140
and I have a bunch of stickers I forgot

00:00:44,370 --> 00:00:50,850
to set out but I will if you are

00:00:46,140 --> 00:00:55,649
interested and come chat with me if any

00:00:50,850 --> 00:00:58,350
of this sounds interesting so I'll just

00:00:55,649 --> 00:01:00,359
go into a little bit of history of what

00:00:58,350 --> 00:01:02,940
it was like to update ember apps what

00:01:00,359 --> 00:01:05,489
people are probably still doing and then

00:01:02,940 --> 00:01:13,229
a demo in deep dive of the new thing

00:01:05,489 --> 00:01:18,060
that I built the the legacy or current

00:01:13,229 --> 00:01:20,880
way is M burn it does anyone use this as

00:01:18,060 --> 00:01:24,240
their main way to update their app show

00:01:20,880 --> 00:01:27,090
hands there we go

00:01:24,240 --> 00:01:28,560
so yeah this is what this is from the

00:01:27,090 --> 00:01:30,600
get-go of ember CLI this is how you

00:01:28,560 --> 00:01:31,860
would do it how the docs would say it to

00:01:30,600 --> 00:01:33,900
do it as well

00:01:31,860 --> 00:01:36,329
resets all your files to a brand new

00:01:33,900 --> 00:01:39,810
state so then you'd have to go through

00:01:36,329 --> 00:01:43,259
all here files and go undo what it did

00:01:39,810 --> 00:01:46,530
but try and keep the new bits and also

00:01:43,259 --> 00:01:49,320
it wouldn't remove any new file sorry

00:01:46,530 --> 00:01:51,570
existing files that were removed so all

00:01:49,320 --> 00:01:54,090
you you could go see some projects on

00:01:51,570 --> 00:01:56,250
github or your company app you still got

00:01:54,090 --> 00:01:59,729
that brach file in there your Bower file

00:01:56,250 --> 00:02:01,920
if you're not using bower anymore etc

00:01:59,729 --> 00:02:08,489
they're all still there usually I've

00:02:01,920 --> 00:02:10,300
seen then these came out the Ember new

00:02:08,489 --> 00:02:13,660
output in ember

00:02:10,300 --> 00:02:16,990
output repos on github it's something

00:02:13,660 --> 00:02:19,120
that I started like years ago

00:02:16,990 --> 00:02:22,570
it goes back all the way to ember CLI

00:02:19,120 --> 00:02:25,420
zero zero four one and just in this

00:02:22,570 --> 00:02:26,800
experiment I tried installing that

00:02:25,420 --> 00:02:32,290
version and running it and it wouldn't

00:02:26,800 --> 00:02:34,180
even install on NPM it's just dead so

00:02:32,290 --> 00:02:35,740
these were better they gave you the

00:02:34,180 --> 00:02:37,300
actual changes just the changes you

00:02:35,740 --> 00:02:39,610
wanted between versions but it was still

00:02:37,300 --> 00:02:42,910
in manual process you had to go into the

00:02:39,610 --> 00:02:45,190
URL and tweak the compare URL and then

00:02:42,910 --> 00:02:46,630
just go use this as a reference to go

00:02:45,190 --> 00:02:52,030
update your app so you can make mistakes

00:02:46,630 --> 00:02:56,350
and it was just tedious so then I wrote

00:02:52,030 --> 00:02:58,810
ember CLI update this came out of my

00:02:56,350 --> 00:03:01,210
frustration of maintaining about 20 or

00:02:58,810 --> 00:03:03,040
30 add-ons on github and I'm a

00:03:01,210 --> 00:03:05,760
compulsive updater so you know every

00:03:03,040 --> 00:03:07,810
ember CLI update I'd carve out a weekend

00:03:05,760 --> 00:03:13,660
start going through all the update

00:03:07,810 --> 00:03:15,130
processes so I just created this to do

00:03:13,660 --> 00:03:18,270
most of the work for me and then you

00:03:15,130 --> 00:03:22,480
know everyone else benefits too you get

00:03:18,270 --> 00:03:24,610
these automated updates the conflict

00:03:22,480 --> 00:03:27,250
resolution it's not just a blast of

00:03:24,610 --> 00:03:28,990
files it actually knows git and makes

00:03:27,250 --> 00:03:32,320
conflicted files for you if there are

00:03:28,990 --> 00:03:33,940
conflicts and then a little bonuses

00:03:32,320 --> 00:03:38,290
it'll run all the code mods you need as

00:03:33,940 --> 00:03:43,480
well and more but not too much more just

00:03:38,290 --> 00:03:47,020
a few more options so that's about it

00:03:43,480 --> 00:03:49,990
that's essentially the API two commands

00:03:47,020 --> 00:03:52,690
one the first one just as a executable

00:03:49,990 --> 00:03:55,360
member silja update update you to the

00:03:52,690 --> 00:03:58,690
most recent version and the second one

00:03:55,360 --> 00:04:00,610
is the code mod Runner and the reason

00:03:58,690 --> 00:04:04,620
why these can't be a single command is

00:04:00,610 --> 00:04:06,790
because the first the first command will

00:04:04,620 --> 00:04:09,489
potentially give you lots of JavaScript

00:04:06,790 --> 00:04:11,380
conflicts and comas won't like that

00:04:09,489 --> 00:04:13,209
because it's trying to parse the ast so

00:04:11,380 --> 00:04:15,489
it just cannot be one command

00:04:13,209 --> 00:04:16,930
unfortunately it would have to assume

00:04:15,489 --> 00:04:22,080
that you have no conflicts in your

00:04:16,930 --> 00:04:22,080
update which is impossible most the time

00:04:24,700 --> 00:04:28,490
so these are the various ways to install

00:04:27,380 --> 00:04:30,890
and run

00:04:28,490 --> 00:04:32,870
you know just NPM is giving you all

00:04:30,890 --> 00:04:35,330
these new ways to do it so I thought I'd

00:04:32,870 --> 00:04:37,120
list them all out the top one is usually

00:04:35,330 --> 00:04:40,460
one I do

00:04:37,120 --> 00:04:41,990
so you just npm install or yarn install

00:04:40,460 --> 00:04:45,680
as a global and then you can run it and

00:04:41,990 --> 00:04:47,480
it's in your path the second one I added

00:04:45,680 --> 00:04:48,740
as convenience for people that usually

00:04:47,480 --> 00:04:52,210
like add-ons

00:04:48,740 --> 00:04:54,919
I don't currently run it like this but

00:04:52,210 --> 00:04:57,800
when I get bug reports to a lot of

00:04:54,919 --> 00:04:59,090
people sing Amber update as an add-on so

00:04:57,800 --> 00:05:01,490
you can install it as an add-on and

00:04:59,090 --> 00:05:04,220
it'll run but it's kind of weird to have

00:05:01,490 --> 00:05:08,270
it locked as a version as you're

00:05:04,220 --> 00:05:10,730
updating ember CLI it's so it's changing

00:05:08,270 --> 00:05:13,130
the package.json as your a version in

00:05:10,730 --> 00:05:15,110
there it's a little strange I I guess I

00:05:13,130 --> 00:05:17,240
wouldn't recommend it but it's there and

00:05:15,110 --> 00:05:22,490
there's no foreseeable future to remove

00:05:17,240 --> 00:05:24,919
it and the last one is just have NP apps

00:05:22,490 --> 00:05:27,110
do the work for you so my question is

00:05:24,919 --> 00:05:32,450
and as how many people are familiar with

00:05:27,110 --> 00:05:34,490
NP x use it okay not that too many so

00:05:32,450 --> 00:05:38,419
what it does it's it came out in around

00:05:34,490 --> 00:05:41,900
NPM five early npm 5 as a just another

00:05:38,419 --> 00:05:43,820
way to run stuff and so anything on NPM

00:05:41,900 --> 00:05:45,440
registry with that name it'll just go

00:05:43,820 --> 00:05:49,510
download the real recent version and run

00:05:45,440 --> 00:05:52,910
it for you one command it's convenient

00:05:49,510 --> 00:05:54,710
but it's slower so if you're if you're

00:05:52,910 --> 00:05:57,229
on the network it won't run I mean if

00:05:54,710 --> 00:06:02,740
you're off the network it won't run but

00:05:57,229 --> 00:06:02,740
it's it's very convenient for you know

00:06:02,800 --> 00:06:07,940
documentation for instance you can you

00:06:05,900 --> 00:06:09,500
can you don't have to assume people did

00:06:07,940 --> 00:06:11,840
the NPM install first to get the most

00:06:09,500 --> 00:06:14,770
recent version it's just always they're

00:06:11,840 --> 00:06:17,990
always running the most recent ok so

00:06:14,770 --> 00:06:19,850
fake live demo and the reason it has to

00:06:17,990 --> 00:06:21,470
be fake is because I'm not even on the

00:06:19,850 --> 00:06:23,690
network right now this does lots of

00:06:21,470 --> 00:06:26,890
network traffic it does command rest

00:06:23,690 --> 00:06:29,120
requests a few NPM requests everywhere

00:06:26,890 --> 00:06:30,950
there's just just the nature of it of

00:06:29,120 --> 00:06:34,030
how I decided to design I guess it gets

00:06:30,950 --> 00:06:34,030
most recent everything

00:06:34,110 --> 00:06:40,770
so I'm just you'll see that it's just a

00:06:38,200 --> 00:06:49,810
lot of this is what would have happened

00:06:40,770 --> 00:06:51,640
like it yeah so this is just my get GUI

00:06:49,810 --> 00:06:53,670
and it shows you an example of what will

00:06:51,640 --> 00:06:59,920
happen when you update a sufficiently

00:06:53,670 --> 00:07:01,510
complicated app so you'll see that it

00:06:59,920 --> 00:07:06,940
gave you conflicted files when it

00:07:01,510 --> 00:07:08,170
couldn't figure out what to do so I

00:07:06,940 --> 00:07:11,200
guess I'll explain a little bit what's

00:07:08,170 --> 00:07:12,940
happening here so it detects your local

00:07:11,200 --> 00:07:15,910
version running that that you have in

00:07:12,940 --> 00:07:17,790
your package JSON and then it goes out

00:07:15,910 --> 00:07:22,690
to NPM to get the latest version of

00:07:17,790 --> 00:07:24,730
ember CLI and then it clones the output

00:07:22,690 --> 00:07:26,950
repos that I mentioned earlier in

00:07:24,730 --> 00:07:29,140
attempting your system temp and then it

00:07:26,950 --> 00:07:32,290
generates a get patch based on those two

00:07:29,140 --> 00:07:34,660
tags that it determined and then it

00:07:32,290 --> 00:07:36,580
applies the patch to your repo and that

00:07:34,660 --> 00:07:41,140
was very difficult actually so there's a

00:07:36,580 --> 00:07:43,390
entirely different NPM repository that I

00:07:41,140 --> 00:07:45,040
had created that isn't like that I

00:07:43,390 --> 00:07:48,450
depend on in ember CLI update it's

00:07:45,040 --> 00:07:52,240
called get discipline it because a

00:07:48,450 --> 00:07:55,540
foreign repo has a patch to your current

00:07:52,240 --> 00:07:58,180
and not as like a remote is it you came

00:07:55,540 --> 00:07:59,920
and do it and get I had to like jump

00:07:58,180 --> 00:08:02,020
through some hoops so it's it's its own

00:07:59,920 --> 00:08:04,450
repo it doesn't even know what ember is

00:08:02,020 --> 00:08:08,350
it just applies get patch to a foreign

00:08:04,450 --> 00:08:11,050
repo and so what you get from this is

00:08:08,350 --> 00:08:14,710
only changes the code that needs to

00:08:11,050 --> 00:08:18,280
update as instead of blowing away all

00:08:14,710 --> 00:08:21,400
the files and making you do the work so

00:08:18,280 --> 00:08:24,840
it's a small change set unfortunately

00:08:21,400 --> 00:08:26,800
you have to be online to do the update

00:08:24,840 --> 00:08:29,710
just because it needs to go get the most

00:08:26,800 --> 00:08:34,870
recent things and it's aware of get

00:08:29,710 --> 00:08:38,560
conflicts here's just a little example

00:08:34,870 --> 00:08:40,930
of what you might see so this is a

00:08:38,560 --> 00:08:43,870
you'll read me ember CLI made some

00:08:40,930 --> 00:08:47,410
tweaks to the documentation but as I see

00:08:43,870 --> 00:08:49,149
up up there it didn't touch

00:08:47,410 --> 00:08:54,040
my filled out readme section it just

00:08:49,149 --> 00:08:56,079
left it along and here's an example of a

00:08:54,040 --> 00:08:59,319
conflict just a normal get conflict but

00:08:56,079 --> 00:09:01,870
in my yes lint I had my own extends an

00:08:59,319 --> 00:09:04,810
ember changed what it wanted to do it

00:09:01,870 --> 00:09:07,089
next ends for a default app and so it's

00:09:04,810 --> 00:09:09,699
up to me to decide what I want to do in

00:09:07,089 --> 00:09:11,139
that case and that's why you can't run

00:09:09,699 --> 00:09:15,579
code mods necessarily you'll have some

00:09:11,139 --> 00:09:17,019
of these in your in your files and then

00:09:15,579 --> 00:09:18,970
this is a little bit of a deep dive of

00:09:17,019 --> 00:09:23,319
the API but not too much it's pretty

00:09:18,970 --> 00:09:25,420
simple you have from and - normally

00:09:23,319 --> 00:09:28,149
they're auto calculated but you can

00:09:25,420 --> 00:09:31,930
override them and in cases where from is

00:09:28,149 --> 00:09:33,610
useful is say you have something like

00:09:31,930 --> 00:09:35,860
green keeper or someone that was just

00:09:33,610 --> 00:09:38,110
taking the version of ember CLI and not

00:09:35,860 --> 00:09:39,819
touching any of the other files so your

00:09:38,110 --> 00:09:44,259
ember CLI version your project is not

00:09:39,819 --> 00:09:47,290
quite what it it expects as far as other

00:09:44,259 --> 00:09:49,930
files like your yes linked files or some

00:09:47,290 --> 00:09:52,720
of the tests so you can override the

00:09:49,930 --> 00:09:54,519
from to a previous version of when you

00:09:52,720 --> 00:09:58,149
last synced up with all the blueprints

00:09:54,519 --> 00:10:00,100
that makes sense to is useful if you

00:09:58,149 --> 00:10:04,420
want to update in pieces which I do for

00:10:00,100 --> 00:10:05,709
complex apps all-in-one is possible but

00:10:04,420 --> 00:10:07,660
when you get test failures they have

00:10:05,709 --> 00:10:10,149
where'd they come from I don't know so

00:10:07,660 --> 00:10:11,910
you can pin it to minor versions it

00:10:10,149 --> 00:10:17,110
understands ember so you can just say

00:10:11,910 --> 00:10:19,420
you just say 3.0 and it'll give you 302

00:10:17,110 --> 00:10:23,259
four or whatever is recent you can just

00:10:19,420 --> 00:10:26,139
give it similar arranges it's also the

00:10:23,259 --> 00:10:28,089
the two is also useful if if you know

00:10:26,139 --> 00:10:30,730
your app is broken in the most recent

00:10:28,089 --> 00:10:33,130
and you just want to go to the most

00:10:30,730 --> 00:10:37,899
recent previous one maybe it'll do that

00:10:33,130 --> 00:10:39,939
for you it can run through merge

00:10:37,899 --> 00:10:42,370
conflicts with you if you put in resolve

00:10:39,939 --> 00:10:44,740
conflicts it'll just run your system get

00:10:42,370 --> 00:10:46,059
merge tool so if you have a GUI setup or

00:10:44,740 --> 00:10:48,370
if it's a gym or something it'll just

00:10:46,059 --> 00:10:54,220
pop it up in sequence for you to resolve

00:10:48,370 --> 00:10:57,430
them so reset is essentially ember in it

00:10:54,220 --> 00:11:00,279
in this new API so it'll just reset it

00:10:57,430 --> 00:11:02,620
to factory standards for you if you want

00:11:00,279 --> 00:11:06,550
to see if you miss something sometimes

00:11:02,620 --> 00:11:08,019
it's useful dry-run will just give you

00:11:06,550 --> 00:11:11,350
console.log of what it would have done

00:11:08,019 --> 00:11:14,769
from this version of this version and

00:11:11,350 --> 00:11:17,439
compare only is a little convenience to

00:11:14,769 --> 00:11:19,300
open up the repos the output repos so

00:11:17,439 --> 00:11:21,490
you run that and I'll just open up your

00:11:19,300 --> 00:11:23,889
system default browser with the tags

00:11:21,490 --> 00:11:25,629
filled in for you for the upper repos to

00:11:23,889 --> 00:11:30,279
just give you a visual of what changed

00:11:25,629 --> 00:11:33,100
without touching your app and so if

00:11:30,279 --> 00:11:34,749
you've gotten this far now is the time

00:11:33,100 --> 00:11:37,420
before you start with the code mods is

00:11:34,749 --> 00:11:39,160
to resolve any of your conflicts of

00:11:37,420 --> 00:11:40,930
course and then run your test suite

00:11:39,160 --> 00:11:43,029
don't start on the code mods if you have

00:11:40,930 --> 00:11:47,620
broken tests at this point and then you

00:11:43,029 --> 00:11:51,790
would commit and then you get to the

00:11:47,620 --> 00:11:53,259
code mod section that's sample output if

00:11:51,790 --> 00:11:56,949
you did dry run it would say hey I'm

00:11:53,259 --> 00:11:58,990
gonna run these and then down here is

00:11:56,949 --> 00:12:00,850
what it's just standard it'll staged

00:11:58,990 --> 00:12:05,470
files once it's done but it'll just

00:12:00,850 --> 00:12:07,779
it'll up the files like that I just a

00:12:05,470 --> 00:12:12,759
simple example if anyone's run the new

00:12:07,779 --> 00:12:14,800
testing code mods this is what it ran a

00:12:12,759 --> 00:12:18,250
few code mods over this so it's not just

00:12:14,800 --> 00:12:23,860
one so you have a new testing goodness

00:12:18,250 --> 00:12:27,129
for a newer ember version so the run

00:12:23,860 --> 00:12:29,740
code mods option this also is very

00:12:27,129 --> 00:12:31,480
Network heavy on purpose it's kind of an

00:12:29,740 --> 00:12:34,120
experimental fine

00:12:31,480 --> 00:12:38,519
it uses a manifest that we store on

00:12:34,120 --> 00:12:40,959
github rather than lock dependencies and

00:12:38,519 --> 00:12:43,209
what it does when it gets this manifest

00:12:40,959 --> 00:12:45,129
is I have command lists for code mods

00:12:43,209 --> 00:12:48,160
you know you just find a code mount on

00:12:45,129 --> 00:12:49,839
github it says run this it's usually J's

00:12:48,160 --> 00:12:50,439
code shift run this command and you'll

00:12:49,839 --> 00:12:52,300
get a codemod

00:12:50,439 --> 00:12:54,730
run so I just throw these in this

00:12:52,300 --> 00:12:57,490
manifest and when I downloaded ember CLI

00:12:54,730 --> 00:13:00,129
update I bundle npx and I just run it

00:12:57,490 --> 00:13:04,089
run the commands in sequence and so it's

00:13:00,129 --> 00:13:09,449
all Network all all latest codes so down

00:13:04,089 --> 00:13:12,699
to the pros all latest code modification

00:13:09,449 --> 00:13:13,510
which means I can also add new ones this

00:13:12,699 --> 00:13:15,100
manifest and

00:13:13,510 --> 00:13:17,170
no one needs update ember CLI update

00:13:15,100 --> 00:13:19,510
because it's always every run it

00:13:17,170 --> 00:13:23,590
downloads the new manifest it's pretty

00:13:19,510 --> 00:13:26,020
convenient I don't have to run my test

00:13:23,590 --> 00:13:28,540
suite or publish a new version on NPM

00:13:26,020 --> 00:13:30,820
it's just everyone's even if they're

00:13:28,540 --> 00:13:33,520
ember CLI update you know like few

00:13:30,820 --> 00:13:35,410
versions back 0.17 that might be a few

00:13:33,520 --> 00:13:36,820
months old right now I can throw a new

00:13:35,410 --> 00:13:38,200
code mod in that manifest and they'll

00:13:36,820 --> 00:13:43,300
get it they don't have to worry about

00:13:38,200 --> 00:13:45,220
updating cons are you're not protected

00:13:43,300 --> 00:13:46,780
against bugs in the code mods this is

00:13:45,220 --> 00:13:47,470
back to when the work gets kind of going

00:13:46,780 --> 00:13:49,300
in Reverse

00:13:47,470 --> 00:13:51,910
we had lock files to fix this and now

00:13:49,300 --> 00:13:54,580
we're going to reverse a little bit you

00:13:51,910 --> 00:13:55,930
know if this turns out to be a bad idea

00:13:54,580 --> 00:13:58,330
you know you can always revert it and

00:13:55,930 --> 00:14:00,280
have all these code mods as dependencies

00:13:58,330 --> 00:14:02,110
in ember CLI update and then every time

00:14:00,280 --> 00:14:03,880
they tweak it and make a bug fix I'd

00:14:02,110 --> 00:14:05,800
have to release a new version of Horus

00:14:03,880 --> 00:14:08,920
embers looks like that everyone have to

00:14:05,800 --> 00:14:10,360
reinstall it would be I don't know if

00:14:08,920 --> 00:14:13,900
it'd be worth it so I'm kind of liking

00:14:10,360 --> 00:14:18,850
this at the time currently it's also

00:14:13,900 --> 00:14:20,800
relying on internet as well so npx has

00:14:18,850 --> 00:14:26,680
to download GS code shift and download

00:14:20,800 --> 00:14:29,500
some of these code mods this option list

00:14:26,680 --> 00:14:32,290
code mods it'll just give you it'll show

00:14:29,500 --> 00:14:35,160
you what the manifest is and you can see

00:14:32,290 --> 00:14:37,840
there's some meta in there to determine

00:14:35,160 --> 00:14:40,360
what to apply it to so this ember sale

00:14:37,840 --> 00:14:47,110
update runs against add-ons ember apps

00:14:40,360 --> 00:14:48,580
glimmer apps it can run against engines

00:14:47,110 --> 00:14:50,200
but I haven't done that yet you'd have

00:14:48,580 --> 00:14:52,810
to make your own output repo because

00:14:50,200 --> 00:14:59,650
it's entirely driven by these output

00:14:52,810 --> 00:15:01,480
repos but this code Mont runner it uses

00:14:59,650 --> 00:15:04,360
these meta tags to determine if it

00:15:01,480 --> 00:15:06,460
should run against your version so if

00:15:04,360 --> 00:15:09,760
you're in the middle of there and say

00:15:06,460 --> 00:15:11,290
you're doing an ember 3.0 update you

00:15:09,760 --> 00:15:13,150
only get a couple of those or if you're

00:15:11,290 --> 00:15:15,330
still unknown for some of those won't

00:15:13,150 --> 00:15:15,330
run

00:15:16,810 --> 00:15:20,630
and so once you get into this point

00:15:19,070 --> 00:15:22,670
you're almost done

00:15:20,630 --> 00:15:24,260
now you go back to your test suite you

00:15:22,670 --> 00:15:30,580
fix any of those that the code mods

00:15:24,260 --> 00:15:30,580
might have malformed and then you commit

00:15:30,880 --> 00:15:37,940
so to help in the process so I would say

00:15:36,260 --> 00:15:39,920
that this is pretty much the new

00:15:37,940 --> 00:15:42,470
standard way the official way to update

00:15:39,920 --> 00:15:44,960
your ember apps it's missing in some

00:15:42,470 --> 00:15:46,790
places of documentation currently but I

00:15:44,960 --> 00:15:50,900
wrote this power user guide in the

00:15:46,790 --> 00:15:54,530
readme to help facilitate the adoption I

00:15:50,900 --> 00:15:56,270
guess you would say and you can go check

00:15:54,530 --> 00:15:59,390
it out it's very nice but I'll just go

00:15:56,270 --> 00:16:01,910
over really quick it I recommend to do a

00:15:59,390 --> 00:16:03,560
complete upgrade you would run code mods

00:16:01,910 --> 00:16:05,660
first instead of a doing an update

00:16:03,560 --> 00:16:07,820
because of the manifest system they

00:16:05,660 --> 00:16:10,880
could bug fix their code mods we could

00:16:07,820 --> 00:16:12,890
add a new one and so if you sometimes

00:16:10,880 --> 00:16:14,480
when you run code mods first you might

00:16:12,890 --> 00:16:18,110
get some changes that you want before

00:16:14,480 --> 00:16:19,940
you update and then you can update minor

00:16:18,110 --> 00:16:22,250
versions which I recommended earlier

00:16:19,940 --> 00:16:24,800
just to be safer it might take longer

00:16:22,250 --> 00:16:27,560
but if you have a large app I would kind

00:16:24,800 --> 00:16:30,080
of recommend that and then once you've

00:16:27,560 --> 00:16:32,240
updated run run your code mods again

00:16:30,080 --> 00:16:34,130
because you might fall into a new

00:16:32,240 --> 00:16:38,690
category of one that should run for your

00:16:34,130 --> 00:16:41,960
version and then repeat until you're

00:16:38,690 --> 00:16:43,580
done and so power user guide I would say

00:16:41,960 --> 00:16:46,370
form your you know your corporate app

00:16:43,580 --> 00:16:48,890
that's that has 20 people who are using

00:16:46,370 --> 00:16:56,150
it that's what I recommend for the

00:16:48,890 --> 00:16:56,950
massive ones and so this is the URL go

00:16:56,150 --> 00:17:01,150
check it out

00:16:56,950 --> 00:17:06,299
submit bug reports have fun thank you

00:17:01,150 --> 00:17:06,299

YouTube URL: https://www.youtube.com/watch?v=YyLiLkLbmxM


