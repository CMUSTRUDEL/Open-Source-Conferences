Title: A Gentle Introduction to Music Theory - Ember London - November 2018
Publication date: 2018-11-16
Playlist: Ember London
Description: 
	Presented by Alex Speller.

Basic music theory concepts are actually pretty simple when explained with code - so that's what I'm going to do!

_

About Pusher Sessions:

We're bringing the meetup to you. With Sessions, you can watch recordings of top-notch talks from developer meetups -- wherever and whenever you want.

Meetups are a great way to learn from our peers and to keep up with the latest trends and technologies. As developers ourselves, we at Pusher wanted to bring this great content to more people... So we built Sessions. On Sessions, you can watch talks that interest you and subscribe to be notified when new content gets added.

If you run a meetup and want to get involved, kindly get in touch.

_

About Pusher:

Pusher is a hosted service with APIs, developer tools and open source libraries that greatly simplify integrating real-time functionality into web and mobile applications. 

Pusher will automatically scale when required, removing all the pain of setting up and maintaining a secure, real-time infrastructure. 

Pusher is already trusted to do so by thousands of developers and companies like GitHub, MailChimp, the Financial Times, Buffer and many more. 

Getting started takes just a few seconds: simply go to pusher.com and create a free account. Happy hacking!
Captions: 
	00:00:00,000 --> 00:00:06,750
cool well hello everyone I'm going to

00:00:03,750 --> 00:00:09,300
try and give a quick and whirlwind

00:00:06,750 --> 00:00:13,559
introduction to the world of music

00:00:09,300 --> 00:00:16,170
theory I have given a similar talk to

00:00:13,559 --> 00:00:19,350
this before with the code written in

00:00:16,170 --> 00:00:21,410
Ruby but I've now do a lot more amber so

00:00:19,350 --> 00:00:23,910
I've rewritten the code into JavaScript

00:00:21,410 --> 00:00:26,340
is there much Ember in this talk well

00:00:23,910 --> 00:00:28,140
not really in the talk but I am going to

00:00:26,340 --> 00:00:31,830
give a quick demo afterwards of an ember

00:00:28,140 --> 00:00:34,320
app that's built on this code I'm going

00:00:31,830 --> 00:00:35,910
to show you so first thing I want to ask

00:00:34,320 --> 00:00:38,190
is does anyone here know any music

00:00:35,910 --> 00:00:42,480
theory already a few people know a

00:00:38,190 --> 00:00:44,070
little bit so not many people said put

00:00:42,480 --> 00:00:45,809
the hand up but I'd really ask like are

00:00:44,070 --> 00:00:48,719
you sure you don't know any music theory

00:00:45,809 --> 00:00:52,440
because it's actually a lot simpler than

00:00:48,719 --> 00:00:55,230
you may have been led to believe first

00:00:52,440 --> 00:00:58,109
off you've got vibrations which are what

00:00:55,230 --> 00:01:00,629
sound is made of and then you've got

00:00:58,109 --> 00:01:04,619
vibrations at specific frequencies which

00:01:00,629 --> 00:01:07,590
make notes when you choose certain

00:01:04,619 --> 00:01:11,310
specific of those specific groupings of

00:01:07,590 --> 00:01:12,810
those notes you get scales and when you

00:01:11,310 --> 00:01:15,840
chew you play specific notes together

00:01:12,810 --> 00:01:18,900
then you get chords and then you play

00:01:15,840 --> 00:01:21,210
some chords in order and you get songs I

00:01:18,900 --> 00:01:23,280
would argue that probably most of you

00:01:21,210 --> 00:01:24,990
probably knew that and that's kind of

00:01:23,280 --> 00:01:29,130
really all there is to it the rest of

00:01:24,990 --> 00:01:30,540
its just in the details the reason I

00:01:29,130 --> 00:01:33,150
kind of put together this talk is

00:01:30,540 --> 00:01:36,689
because I really found music a hard

00:01:33,150 --> 00:01:39,420
thing to learn i was i've played guitar

00:01:36,689 --> 00:01:42,329
for probably 20 years now i'm not very

00:01:39,420 --> 00:01:45,360
good at it still I'm not very good at

00:01:42,329 --> 00:01:46,770
I'm quite good at playing the notes and

00:01:45,360 --> 00:01:48,570
making my hands move in the right ways

00:01:46,770 --> 00:01:50,880
but I don't really kind of feel the

00:01:48,570 --> 00:01:53,759
music and I think that music has taught

00:01:50,880 --> 00:01:57,450
a lot in a way that only really benefits

00:01:53,759 --> 00:01:58,740
natural musicians and if you did music

00:01:57,450 --> 00:02:01,170
lessons in school you might have been

00:01:58,740 --> 00:02:04,729
sort of expected to just know you know

00:02:01,170 --> 00:02:07,320
what what what notes playing next what

00:02:04,729 --> 00:02:09,030
what you know this is a third this is a

00:02:07,320 --> 00:02:11,190
this is an interval then you might kind

00:02:09,030 --> 00:02:12,840
of if you didn't get it already there

00:02:11,190 --> 00:02:13,590
wasn't really anything given to kind of

00:02:12,840 --> 00:02:16,770
explain

00:02:13,590 --> 00:02:20,640
why and how so I decided to implement it

00:02:16,770 --> 00:02:23,489
from scratch in code because as Jeff

00:02:20,640 --> 00:02:25,020
Hawkins said if you can't build it you

00:02:23,489 --> 00:02:27,390
don't understand it so I wanted to try

00:02:25,020 --> 00:02:29,550
and kind of build it from scratch so to

00:02:27,390 --> 00:02:32,340
do that did a bit of research and

00:02:29,550 --> 00:02:34,140
started reading about the basics I'm

00:02:32,340 --> 00:02:39,239
gonna start off with the frequency of

00:02:34,140 --> 00:02:41,700
440 Hertz this means 440 cycles per

00:02:39,239 --> 00:02:45,120
second so if you can imagine a sine wave

00:02:41,700 --> 00:02:48,630
that repeats itself 440 times every

00:02:45,120 --> 00:02:52,769
second that is what this has looked like

00:02:48,630 --> 00:02:55,799
and this is an a it's cooled a four

00:02:52,769 --> 00:02:57,959
because it comes after a three and

00:02:55,799 --> 00:03:02,010
before a five

00:02:57,959 --> 00:03:03,209
it's an ISO standard apparently and this

00:03:02,010 --> 00:03:06,150
isn't mass what you kind of call an

00:03:03,209 --> 00:03:07,769
axiom so it just kind of is like why is

00:03:06,150 --> 00:03:10,860
it that well because someone decided it

00:03:07,769 --> 00:03:15,390
was that a while ago looks like that in

00:03:10,860 --> 00:03:23,840
musical notation and I haven't actually

00:03:15,390 --> 00:03:26,100
checked if my sound sounds like that so

00:03:23,840 --> 00:03:28,980
how will regenerate something like that

00:03:26,100 --> 00:03:32,459
in code well if you want it to start

00:03:28,980 --> 00:03:34,410
from complete scratch which I did you

00:03:32,459 --> 00:03:36,170
would probably build something that

00:03:34,410 --> 00:03:41,280
looks a bit like this this is a

00:03:36,170 --> 00:03:45,420
incredibly basic sampler and what this

00:03:41,280 --> 00:03:47,400
does is it generates samples so if you

00:03:45,420 --> 00:03:50,340
look at something called like the wave

00:03:47,400 --> 00:03:53,040
format which is you know I've seen where

00:03:50,340 --> 00:03:55,370
format files it's basically a music flow

00:03:53,040 --> 00:03:59,069
without any compression I guess the

00:03:55,370 --> 00:04:04,440
comparison with image formats might be

00:03:59,069 --> 00:04:07,410
something like a yes TIFF file without

00:04:04,440 --> 00:04:08,700
compression it's just like each frame is

00:04:07,410 --> 00:04:10,650
a number one after the other and then

00:04:08,700 --> 00:04:16,859
it's not compressed like an mp3 would be

00:04:10,650 --> 00:04:19,979
it's just a series of numbers so if you

00:04:16,859 --> 00:04:22,950
wanted to build a note you pass in a

00:04:19,979 --> 00:04:25,890
frequency so you pass in 440 Hertz to

00:04:22,950 --> 00:04:26,710
build that a you person a sample rate

00:04:25,890 --> 00:04:30,250
and

00:04:26,710 --> 00:04:35,350
the sample rate is just some arbitrary

00:04:30,250 --> 00:04:37,180
number it has to be double the highest

00:04:35,350 --> 00:04:40,110
frequency you want to represent because

00:04:37,180 --> 00:04:43,840
of something called the Nyquist theorem

00:04:40,110 --> 00:04:46,180
and so because humans can hear up to

00:04:43,840 --> 00:04:47,350
about 20,000 Hertz if you're if you've

00:04:46,180 --> 00:04:49,750
got good hearing and you're also quite

00:04:47,350 --> 00:04:52,840
young you would probably choose

00:04:49,750 --> 00:04:55,720
something like 44100 as your sample rate

00:04:52,840 --> 00:04:57,070
which happens to be what CDs use then

00:04:55,720 --> 00:05:00,639
you pass an iteration so you might want

00:04:57,070 --> 00:05:02,699
one second once you've got that there's

00:05:00,639 --> 00:05:05,139
really not that much code here you'd

00:05:02,699 --> 00:05:07,990
figure out how many total frames you

00:05:05,139 --> 00:05:10,960
want and a frame is just a floating

00:05:07,990 --> 00:05:13,630
point numbers between I think in whether

00:05:10,960 --> 00:05:16,930
it's between minus one and one yeah

00:05:13,630 --> 00:05:18,310
between minus 1 and 1 so you'd figure

00:05:16,930 --> 00:05:20,289
out how many frames you want how many

00:05:18,310 --> 00:05:24,849
numbers you want to generate you figure

00:05:20,289 --> 00:05:26,560
out the cycles per frame so each frame

00:05:24,849 --> 00:05:29,560
if you're playing this note how many

00:05:26,560 --> 00:05:32,680
iterations of that sine wave you're

00:05:29,560 --> 00:05:35,139
going to go through and it's always

00:05:32,680 --> 00:05:36,639
that's always gonna be less than 0.5 if

00:05:35,139 --> 00:05:39,400
you've chosen your sample rate correctly

00:05:36,639 --> 00:05:40,990
so you've got the sine wave that goes up

00:05:39,400 --> 00:05:44,370
and down like that and in this frame you

00:05:40,990 --> 00:05:49,930
want to represent tiny chunk of it so

00:05:44,370 --> 00:05:52,330
then you do some oops then you do some

00:05:49,930 --> 00:05:54,580
maths with PI to basically work out the

00:05:52,330 --> 00:05:56,110
increment which is how far along the x

00:05:54,580 --> 00:06:00,580
axis of that sine wave you want to

00:05:56,110 --> 00:06:03,699
increment and you then take the sine of

00:06:00,580 --> 00:06:05,830
that phase we're starting at 0 starting

00:06:03,699 --> 00:06:07,509
at the zero on the y axis you take the

00:06:05,830 --> 00:06:09,490
sine of that to get how high up you want

00:06:07,509 --> 00:06:10,990
to go on this sine wave and you just

00:06:09,490 --> 00:06:14,849
push it into your array and then

00:06:10,990 --> 00:06:18,490
increase by the increment again so

00:06:14,849 --> 00:06:21,039
that's all well and good but this is not

00:06:18,490 --> 00:06:23,080
particularly practical there I'm sure

00:06:21,039 --> 00:06:26,199
there is a way to take these

00:06:23,080 --> 00:06:29,590
floating-point numbers and then generate

00:06:26,199 --> 00:06:31,000
a wave date that header put this in the

00:06:29,590 --> 00:06:33,190
end of the wefts data that you've got

00:06:31,000 --> 00:06:36,849
and play it in the browser it'll be much

00:06:33,190 --> 00:06:38,229
easier actually and no js' but it's also

00:06:36,849 --> 00:06:39,750
kind of stupid because the browser

00:06:38,229 --> 00:06:42,720
actually has really nice

00:06:39,750 --> 00:06:45,150
guys for doing this already the Web

00:06:42,720 --> 00:06:49,080
Audio API lets you just create an

00:06:45,150 --> 00:06:50,850
oscillator until it the frequency tell

00:06:49,080 --> 00:06:53,670
it to start operating that's oscillating

00:06:50,850 --> 00:06:57,030
and you give it a destination which is

00:06:53,670 --> 00:06:58,830
gonna be the speakers in this case and

00:06:57,030 --> 00:07:01,890
you just start it and then stop it

00:06:58,830 --> 00:07:03,420
thousand milliseconds later so if you're

00:07:01,890 --> 00:07:05,280
doing this in the browser Web Audio API

00:07:03,420 --> 00:07:12,330
is probably what you want to use for

00:07:05,280 --> 00:07:14,220
this sounds like that so okay we've got

00:07:12,330 --> 00:07:16,050
one note it sounds a bit basic

00:07:14,220 --> 00:07:19,970
it sounds very computery because it is

00:07:16,050 --> 00:07:22,050
there's no no the hombre and the

00:07:19,970 --> 00:07:23,820
interesting kind of qualities you would

00:07:22,050 --> 00:07:25,980
get from a real instrument but that's

00:07:23,820 --> 00:07:27,750
kind of not the point and what I'm

00:07:25,980 --> 00:07:29,610
trying to do I kinda want to understand

00:07:27,750 --> 00:07:33,180
the music theory rather than the music

00:07:29,610 --> 00:07:37,230
practice of the instruments so let's

00:07:33,180 --> 00:07:40,320
start off with octaves in music theory

00:07:37,230 --> 00:07:41,820
notes repeat every octave what repeating

00:07:40,320 --> 00:07:44,729
means is that the frequency has doubled

00:07:41,820 --> 00:07:49,850
human ears for some reason are very good

00:07:44,729 --> 00:07:51,720
at hearing simple ratios between

00:07:49,850 --> 00:07:53,850
frequencies so they're very good at

00:07:51,720 --> 00:07:55,169
hearing double you can hear here one

00:07:53,850 --> 00:07:56,490
frequency and you hear double that it

00:07:55,169 --> 00:07:59,070
sounds like the same note for some

00:07:56,490 --> 00:08:02,130
reason and the other intervals are like

00:07:59,070 --> 00:08:04,350
that you can hear kind of there are

00:08:02,130 --> 00:08:06,600
three times note 4 times note some

00:08:04,350 --> 00:08:10,080
reason your ears are good at recognizing

00:08:06,600 --> 00:08:11,400
that and consider that meaty music so if

00:08:10,080 --> 00:08:14,880
you want to double the frequency of a

00:08:11,400 --> 00:08:17,490
note if we started off 440 you could

00:08:14,880 --> 00:08:21,780
double that and get 880 or you could

00:08:17,490 --> 00:08:24,990
hover it and get to 20 so if you had

00:08:21,780 --> 00:08:26,310
three octaves of a if we had our planer

00:08:24,990 --> 00:08:28,830
that function that we implemented

00:08:26,310 --> 00:08:34,409
earlier we could just play the one below

00:08:28,830 --> 00:08:38,099
the one we just played the one higher so

00:08:34,409 --> 00:08:40,580
those are all three Offices of a that's

00:08:38,099 --> 00:08:43,020
a bit boring but we can build on that

00:08:40,580 --> 00:08:47,010
you want to build some tones and

00:08:43,020 --> 00:08:49,440
semitones so semitones are the smallest

00:08:47,010 --> 00:08:51,769
interval common in western music you

00:08:49,440 --> 00:08:53,149
can't get kind of microtonal music

00:08:51,769 --> 00:08:54,860
actually in western music and here

00:08:53,149 --> 00:08:56,360
bending in guitar so there's a lot

00:08:54,860 --> 00:08:58,610
you're hearing kind of microphones but

00:08:56,360 --> 00:09:00,860
they tend to kind of start and end

00:08:58,610 --> 00:09:04,399
somewhere on a semi time so it's quite

00:09:00,860 --> 00:09:08,329
unusual for you to actually play music

00:09:04,399 --> 00:09:09,649
that ends on micro tone I am mostly

00:09:08,329 --> 00:09:11,239
talking about kind of conventional

00:09:09,649 --> 00:09:12,920
Western music here there are a lot of

00:09:11,239 --> 00:09:17,689
other traditions that are quite

00:09:12,920 --> 00:09:19,910
different to this a semitone is one

00:09:17,689 --> 00:09:23,619
fresh annoyed guitar or adjacent notes

00:09:19,910 --> 00:09:26,269
on a piano including the Black Keys and

00:09:23,619 --> 00:09:31,279
so what's a tone well it's just two

00:09:26,269 --> 00:09:34,100
semitones so if you want to move

00:09:31,279 --> 00:09:36,589
semitones so let's say we've got our 440

00:09:34,100 --> 00:09:39,709
Hertz a and we want to find out what the

00:09:36,589 --> 00:09:42,170
next note is once mu turn up we need to

00:09:39,709 --> 00:09:45,410
do a bit of maths there are 12 semitones

00:09:42,170 --> 00:09:47,629
in an octave and to move up one semitone

00:09:45,410 --> 00:09:50,420
because we're kind of doubling here all

00:09:47,629 --> 00:09:53,420
the way we want to multiply by a ratio

00:09:50,420 --> 00:09:54,920
we can't just add a frequency we want to

00:09:53,420 --> 00:09:58,220
multiply it by a ratio which can call

00:09:54,920 --> 00:10:00,769
our and we figure out what R is well

00:09:58,220 --> 00:10:03,769
since we know to move up 12 semitones

00:10:00,769 --> 00:10:06,350
which is an octave we have to double the

00:10:03,769 --> 00:10:09,499
pitch we know that this ratio we need to

00:10:06,350 --> 00:10:11,299
the power of 12 is 2 because if you

00:10:09,499 --> 00:10:14,269
multiply it if you multiply by this

00:10:11,299 --> 00:10:17,269
ratio 12 times you've doubled so you've

00:10:14,269 --> 00:10:19,730
got it to equal 2 so then you can work

00:10:17,269 --> 00:10:22,339
it up by taking the 12th root of 2 which

00:10:19,730 --> 00:10:28,009
just happens to be one point zero five

00:10:22,339 --> 00:10:30,110
nine something and so to move from the

00:10:28,009 --> 00:10:33,019
next time you turn up from a we just

00:10:30,110 --> 00:10:34,910
multiply 440 by the twelfth root of 2 we

00:10:33,019 --> 00:10:39,529
got the next frequency which is four six

00:10:34,910 --> 00:10:43,730
six point something so once we know that

00:10:39,529 --> 00:10:45,980
it's quite easy to take away let's take

00:10:43,730 --> 00:10:47,240
the lower a because the fourfold here at

00:10:45,980 --> 00:10:48,889
se is actually quite high in we don't

00:10:47,240 --> 00:10:52,549
want to go up and stop having arias when

00:10:48,889 --> 00:10:55,610
we start playing this stuff we want to

00:10:52,549 --> 00:10:57,739
12 times play the note and then just

00:10:55,610 --> 00:10:59,419
multiply by the twelfth root to do that

00:10:57,739 --> 00:11:02,350
twelve times and we can get all the

00:10:59,419 --> 00:11:02,350
notes really simply

00:11:02,730 --> 00:11:07,009
[Music]

00:11:07,819 --> 00:11:11,879
so that's all the notes that's pretty

00:11:10,139 --> 00:11:15,209
good now we can start building stuff for

00:11:11,879 --> 00:11:17,009
the notes so one thing you probably

00:11:15,209 --> 00:11:20,490
gonna build with notes first off is

00:11:17,009 --> 00:11:22,019
gonna be a scale and that was a scale

00:11:20,490 --> 00:11:23,850
what I just played you that's called the

00:11:22,019 --> 00:11:27,869
chromatic scale and what that means is

00:11:23,850 --> 00:11:31,529
just all the notes but scales are

00:11:27,869 --> 00:11:32,670
interesting because they're patterns so

00:11:31,529 --> 00:11:34,379
the one we heard doesn't sound

00:11:32,670 --> 00:11:36,509
particularly musical I guess I mean it

00:11:34,379 --> 00:11:38,309
sounds you can hear that it's notes but

00:11:36,509 --> 00:11:40,379
it's kind of sounds a bit like a joke

00:11:38,309 --> 00:11:41,910
maybe one of those like cuz these that

00:11:40,379 --> 00:11:45,569
you play or something or some kind of

00:11:41,910 --> 00:11:48,360
like you know joke kind of music gag in

00:11:45,569 --> 00:11:50,970
a film or something most of the scales

00:11:48,360 --> 00:11:53,399
that you hear in music in western music

00:11:50,970 --> 00:11:55,439
have seven notes not twelve seven notes

00:11:53,399 --> 00:11:57,059
eighth notes I mean they have seven

00:11:55,439 --> 00:11:59,759
different notes but if you hear one

00:11:57,059 --> 00:12:00,959
you're usually hear the octave played as

00:11:59,759 --> 00:12:05,249
well so that you actually hear eight

00:12:00,959 --> 00:12:06,449
times but only seven unique ones so

00:12:05,249 --> 00:12:09,420
let's start with a major scale which is

00:12:06,449 --> 00:12:10,980
the most common scale the most most

00:12:09,420 --> 00:12:12,749
common I don't know the major scale is

00:12:10,980 --> 00:12:16,139
the first scale you'll probably learn in

00:12:12,749 --> 00:12:20,100
any music theory lesson we just take

00:12:16,139 --> 00:12:22,290
seven specific notes and take them in a

00:12:20,100 --> 00:12:25,889
pattern which is tone tone semitone tone

00:12:22,290 --> 00:12:29,519
tone tone semitone and really like

00:12:25,889 --> 00:12:32,519
that's just two to one to two to one so

00:12:29,519 --> 00:12:33,889
that's what you're that's how many so

00:12:32,519 --> 00:12:38,160
many times you're jumping each time

00:12:33,889 --> 00:12:39,540
supposedly it sounds kind of happy so

00:12:38,160 --> 00:12:41,819
generate that I'm just going to assign

00:12:39,540 --> 00:12:44,399
some constants tone equals two and

00:12:41,819 --> 00:12:49,559
semitone equals one but the pattern in

00:12:44,399 --> 00:12:51,149
an array and then each time we jump this

00:12:49,559 --> 00:12:51,779
time we're multiplying by the twelfth

00:12:51,149 --> 00:12:55,529
root of two

00:12:51,779 --> 00:12:56,850
but we're multiplying it either one so

00:12:55,529 --> 00:12:59,189
I'm raising to the power of step which

00:12:56,850 --> 00:13:01,019
is either going to be one or two and if

00:12:59,189 --> 00:13:02,369
it's one has no effect but if it's two

00:13:01,019 --> 00:13:03,869
it's the same as multiplying by the

00:13:02,369 --> 00:13:06,529
twelfth root of two two times so we're

00:13:03,869 --> 00:13:06,529
jumping two steps

00:13:06,630 --> 00:13:12,490
[Music]

00:13:08,520 --> 00:13:15,490
and that's the major scale which is

00:13:12,490 --> 00:13:17,650
might recognize from I guess the sound

00:13:15,490 --> 00:13:20,830
of music they sing the array me first

00:13:17,650 --> 00:13:25,960
solo TD I can't sing by the way that

00:13:20,830 --> 00:13:27,700
they do and you can generate other

00:13:25,960 --> 00:13:32,020
scales so the minor scale is kind of

00:13:27,700 --> 00:13:34,720
like the more sad scale which is which

00:13:32,020 --> 00:13:36,190
supposedly sounds a bit more sad so we

00:13:34,720 --> 00:13:38,730
can take a different seven specific

00:13:36,190 --> 00:13:41,260
notes the pattern is going to be

00:13:38,730 --> 00:13:46,630
slightly different tone semitone tone

00:13:41,260 --> 00:13:49,630
tone semitone tone tone and suppose it

00:13:46,630 --> 00:13:51,760
sounds odd and the code for doing this

00:13:49,630 --> 00:13:54,460
is identical with the exception that we

00:13:51,760 --> 00:14:03,450
just changed the pattern we're iterating

00:13:54,460 --> 00:14:10,180
through so yeah sounds a bit sadder um I

00:14:03,450 --> 00:14:12,390
guess so I'm just going to introduce a

00:14:10,180 --> 00:14:15,490
quick abstraction this is nothing really

00:14:12,390 --> 00:14:17,050
new here making a function to increase

00:14:15,490 --> 00:14:20,410
the frequency by a number of semitones

00:14:17,050 --> 00:14:26,020
it's just code we had before and a

00:14:20,410 --> 00:14:27,730
function to get the frequencies from a

00:14:26,020 --> 00:14:30,150
syst of semitone jumps like we just had

00:14:27,730 --> 00:14:31,930
so this is basically just a nice way of

00:14:30,150 --> 00:14:34,270
reusing the code on the previous screen

00:14:31,930 --> 00:14:37,960
so the code doesn't grow big in my next

00:14:34,270 --> 00:14:43,630
examples nothing new there now I'm going

00:14:37,960 --> 00:14:46,810
to introduce modes so a mode is just a

00:14:43,630 --> 00:14:51,340
scale but the idea is that there are

00:14:46,810 --> 00:14:54,190
seven different modes and the two scales

00:14:51,340 --> 00:14:59,770
that I just showed you are two modes and

00:14:54,190 --> 00:15:03,010
there are five different ones so modes

00:14:59,770 --> 00:15:04,360
are just rotations of the major scale so

00:15:03,010 --> 00:15:07,000
the major scales first one shows the

00:15:04,360 --> 00:15:09,370
Ionian mode and to get the next mode you

00:15:07,000 --> 00:15:10,690
take one interval off the top off the

00:15:09,370 --> 00:15:13,030
end of the array which is gonna be S or

00:15:10,690 --> 00:15:15,490
T ring at the beginning of the right the

00:15:13,030 --> 00:15:17,710
array and that's your next mode and so

00:15:15,490 --> 00:15:20,339
both of those scales we show it already

00:15:17,710 --> 00:15:22,949
are rotations of each

00:15:20,339 --> 00:15:24,689
but they're not next to each other so if

00:15:22,949 --> 00:15:27,779
you want to generate all the modes you

00:15:24,689 --> 00:15:31,230
would start off by generating the major

00:15:27,779 --> 00:15:32,490
scale and then you just push on to the

00:15:31,230 --> 00:15:35,759
beginning of the current mode

00:15:32,490 --> 00:15:37,139
the last item sorry you push on to the

00:15:35,759 --> 00:15:39,029
end of the current mode the first item

00:15:37,139 --> 00:15:40,559
so you're just rotating the array rotate

00:15:39,029 --> 00:15:44,879
it once play it through taste it once

00:15:40,559 --> 00:15:46,640
play it through and that sounds like

00:15:44,879 --> 00:16:03,429
this

00:15:46,640 --> 00:16:03,429
[Music]

00:16:17,720 --> 00:16:24,840
so those are all modes and with those

00:16:21,180 --> 00:16:30,410
you can build you can build pretty much

00:16:24,840 --> 00:16:32,400
anything thirds are jumps on a scale so

00:16:30,410 --> 00:16:34,470
basically you would take one of those

00:16:32,400 --> 00:16:36,150
modes that you've generated and instead

00:16:34,470 --> 00:16:39,930
of going up one step at a time

00:16:36,150 --> 00:16:43,230
you've got two steps at a time so they

00:16:39,930 --> 00:16:45,870
can be my major or minor and a major

00:16:43,230 --> 00:16:48,150
third is where you go up to tones so it

00:16:45,870 --> 00:16:50,220
means you're adding four semitones the

00:16:48,150 --> 00:16:52,440
minor means you're going up three tones

00:16:50,220 --> 00:16:54,420
which means you're jumping a tone and a

00:16:52,440 --> 00:16:57,240
semitone and western music there aren't

00:16:54,420 --> 00:16:58,710
any thirds that are too so many times

00:16:57,240 --> 00:17:00,180
because there's no patterns that are two

00:16:58,710 --> 00:17:03,990
semitones next to each other but there

00:17:00,180 --> 00:17:05,670
can be in other types of music so you

00:17:03,990 --> 00:17:09,720
just map out a scale and choose one note

00:17:05,670 --> 00:17:11,340
from it and then on that scale either a

00:17:09,720 --> 00:17:13,050
major third or a minor third will be a

00:17:11,340 --> 00:17:14,340
possible move you this just that's

00:17:13,050 --> 00:17:16,770
what's available you can just look and

00:17:14,340 --> 00:17:21,810
see oh it's threes available or fours

00:17:16,770 --> 00:17:22,710
available what so many times so another

00:17:21,810 --> 00:17:25,890
way to look at it is you're just

00:17:22,710 --> 00:17:28,410
skipping notes in the scale pattern so I

00:17:25,890 --> 00:17:30,840
made this function circular array just

00:17:28,410 --> 00:17:33,540
to mean just to make it so that if you

00:17:30,840 --> 00:17:35,340
access a an array and you try and access

00:17:33,540 --> 00:17:38,580
an element that's greater than the

00:17:35,340 --> 00:17:41,100
length of the array you won't get nil it

00:17:38,580 --> 00:17:43,650
will just take the modulus of the index

00:17:41,100 --> 00:17:46,880
and treat it kind of as if it was an

00:17:43,650 --> 00:17:49,260
infinitely repeating array when it's not

00:17:46,880 --> 00:17:52,110
I'm going to go up in steps of 2 this

00:17:49,260 --> 00:17:52,680
time instead of steps of 1 we get step 1

00:17:52,110 --> 00:17:54,930
and step 2

00:17:52,680 --> 00:17:57,150
which is either going to be a tone in

00:17:54,930 --> 00:18:00,660
semitone or tone and tone she's going to

00:17:57,150 --> 00:18:03,120
be one two or two and two and then we

00:18:00,660 --> 00:18:05,130
jump up that instead of instead of

00:18:03,120 --> 00:18:06,960
jumping up one step at a time and that

00:18:05,130 --> 00:18:10,369
sounds like this

00:18:06,960 --> 00:18:10,369
[Music]

00:18:11,029 --> 00:18:20,460
so that was thirds and then let's move

00:18:17,039 --> 00:18:21,840
on to chords basically to make a chord

00:18:20,460 --> 00:18:24,029
you play several thirds in a scale like

00:18:21,840 --> 00:18:27,240
we just did but you play them together

00:18:24,029 --> 00:18:30,750
at the same time so we take the code

00:18:27,240 --> 00:18:32,909
that we had a minute ago which is very

00:18:30,750 --> 00:18:36,090
similar the only difference is I've just

00:18:32,909 --> 00:18:37,740
removed the weight before play note so

00:18:36,090 --> 00:18:39,059
that it plays them at the same time

00:18:37,740 --> 00:18:48,270
instead of playing them one after the

00:18:39,059 --> 00:18:50,190
other sounds kind of very choral the

00:18:48,270 --> 00:18:53,039
reason for that is that these are

00:18:50,190 --> 00:18:54,480
perfect sine waves so the a lot of the

00:18:53,039 --> 00:18:56,279
quality of an instrument comes from the

00:18:54,480 --> 00:18:57,690
imperfections in the waveforms that it

00:18:56,279 --> 00:19:00,299
puts out

00:18:57,690 --> 00:19:02,640
if you take like a recording of like a

00:19:00,299 --> 00:19:04,590
guitar and you chop off the first like

00:19:02,640 --> 00:19:05,220
200 milliseconds it will sound a lot

00:19:04,590 --> 00:19:06,899
like that

00:19:05,220 --> 00:19:08,340
your brain kind of imputes a lot of the

00:19:06,899 --> 00:19:10,140
sound of an instrument from like the

00:19:08,340 --> 00:19:12,210
first few milliseconds where the notes

00:19:10,140 --> 00:19:13,460
start and lots of instruments with the

00:19:12,210 --> 00:19:18,809
first kind of few hundred milliseconds

00:19:13,460 --> 00:19:21,600
chopped off sound very similar so chord

00:19:18,809 --> 00:19:24,419
scales chords scales are very much like

00:19:21,600 --> 00:19:27,960
modes so you basically take all the

00:19:24,419 --> 00:19:29,490
modes and you generate thirds from those

00:19:27,960 --> 00:19:32,760
modes like we just did and then you play

00:19:29,490 --> 00:19:35,429
them together so you can make different

00:19:32,760 --> 00:19:37,020
chords from a scale called you make

00:19:35,429 --> 00:19:42,659
starting from the first note is called

00:19:37,020 --> 00:19:45,120
the one chord I chord Roman numerals and

00:19:42,659 --> 00:19:47,640
they'll automatically be major or minor

00:19:45,120 --> 00:19:49,770
but and that means that they will either

00:19:47,640 --> 00:19:52,380
have a major chord a major interval

00:19:49,770 --> 00:19:55,020
first major third first or a minor third

00:19:52,380 --> 00:20:01,260
first and that's just what fits into the

00:19:55,020 --> 00:20:03,630
scale button that you generated and so

00:20:01,260 --> 00:20:05,399
each mode has a chord that you make from

00:20:03,630 --> 00:20:08,659
it by moving up in thirds so if you take

00:20:05,399 --> 00:20:10,830
those modes generated earlier you can

00:20:08,659 --> 00:20:12,029
fit a chord by starting on the first

00:20:10,830 --> 00:20:16,710
note and then figuring out how is a

00:20:12,029 --> 00:20:20,130
major or minor interval next and code

00:20:16,710 --> 00:20:22,770
this looks like this so this is kind of

00:20:20,130 --> 00:20:23,490
looking like a combination of the couple

00:20:22,770 --> 00:20:24,960
but

00:20:23,490 --> 00:20:28,940
things that we did earlier so I'm taking

00:20:24,960 --> 00:20:31,320
the major scale and iterating through

00:20:28,940 --> 00:20:33,960
one at a time I'm getting the first bird

00:20:31,320 --> 00:20:35,550
which is the first two semitones add the

00:20:33,960 --> 00:20:37,050
first two intervals add together so

00:20:35,550 --> 00:20:39,480
that's going to be total semitone or

00:20:37,050 --> 00:20:41,580
tone-tone again second thing which is

00:20:39,480 --> 00:20:44,480
the second third which is going to be

00:20:41,580 --> 00:20:46,940
two and seven or tone tone again

00:20:44,480 --> 00:20:49,260
generating the frequencies for those and

00:20:46,940 --> 00:20:54,870
then playing them all at the same time

00:20:49,260 --> 00:20:56,760
I'm using RSVP wall to play those three

00:20:54,870 --> 00:20:58,230
things at the same time and then await

00:20:56,760 --> 00:21:00,450
those to finish playing so that we can

00:20:58,230 --> 00:21:02,340
play one chord than another chord and

00:21:00,450 --> 00:21:05,040
then another chord and then again we're

00:21:02,340 --> 00:21:08,550
just rotating the mode at the end by

00:21:05,040 --> 00:21:11,300
taking the first element and putting it

00:21:08,550 --> 00:21:11,300
on the end of the array

00:21:11,540 --> 00:21:15,869
[Music]

00:21:21,960 --> 00:21:27,400
so that's basically all of the chords

00:21:25,360 --> 00:21:32,410
that you can play so when someone says

00:21:27,400 --> 00:21:34,900
I'm gonna play a song in C major that

00:21:32,410 --> 00:21:35,770
means that you would you would could run

00:21:34,900 --> 00:21:37,870
this algorithm

00:21:35,770 --> 00:21:40,240
you'd pass in as the start frequency the

00:21:37,870 --> 00:21:42,130
frequency of some C major low high or

00:21:40,240 --> 00:21:43,510
whatever it will generate these chords

00:21:42,130 --> 00:21:45,040
and it means that you can use any one of

00:21:43,510 --> 00:21:48,070
these chords and it sound nice in C

00:21:45,040 --> 00:21:49,930
major and when they play a song in C

00:21:48,070 --> 00:21:52,390
major they're probably gonna say start

00:21:49,930 --> 00:21:55,230
the first chord and the second chord so

00:21:52,390 --> 00:21:57,670
that's called a chord progression so

00:21:55,230 --> 00:21:59,650
common one is one four five

00:21:57,670 --> 00:22:00,880
so they generate those chords I mean if

00:21:59,650 --> 00:22:01,990
you're a musician you probably like do

00:22:00,880 --> 00:22:04,030
this in your head or you know the

00:22:01,990 --> 00:22:05,650
patterns so you know all of those chords

00:22:04,030 --> 00:22:08,230
like from the chord scale just play and

00:22:05,650 --> 00:22:10,150
you say like 1 4 5 in C major so I start

00:22:08,230 --> 00:22:11,290
at the C major and I the next one over

00:22:10,150 --> 00:22:13,390
here I'm gonna play the next over here

00:22:11,290 --> 00:22:14,560
and that's a 1 4 5 song and then I've

00:22:13,390 --> 00:22:16,270
got some other chords in that chord

00:22:14,560 --> 00:22:16,930
scale I can kind of drop in to make it

00:22:16,270 --> 00:22:20,140
sound good

00:22:16,930 --> 00:22:24,760
make it I'm not repetitive wonderful

00:22:20,140 --> 00:22:26,410
flavors really common though so yeah

00:22:24,760 --> 00:22:28,420
basically one or more once you've got

00:22:26,410 --> 00:22:30,460
once you've generated cool progression

00:22:28,420 --> 00:22:31,570
or made up a chord progression just take

00:22:30,460 --> 00:22:32,670
one or more of them then you've got a

00:22:31,570 --> 00:22:35,920
song

00:22:32,670 --> 00:22:38,980
so yeah when music it decimalised it

00:22:35,920 --> 00:22:40,510
really must be made 0 indexed it's kind

00:22:38,980 --> 00:22:41,920
of annoying to program stuff like this

00:22:40,510 --> 00:22:43,750
because you enough like assigning Roman

00:22:41,920 --> 00:22:48,070
numerals to numbers that aren't really

00:22:43,750 --> 00:22:50,080
then but anyway no ignoring that fudge

00:22:48,070 --> 00:22:53,100
you can just iterate through these

00:22:50,080 --> 00:22:56,620
chords so 1 4 5 and then back to 1 again

00:22:53,100 --> 00:22:59,610
and just a weight playing the chord

00:22:56,620 --> 00:22:59,610
sounds a lot like this

00:23:04,890 --> 00:23:10,740
if it sounds familiar from the shirt

00:23:06,990 --> 00:23:14,640
because it's like every song ever like

00:23:10,740 --> 00:23:16,530
it's like billions and millions and

00:23:14,640 --> 00:23:18,210
millions of songs like I mean there are

00:23:16,530 --> 00:23:20,429
other chord progressions that like

00:23:18,210 --> 00:23:21,809
people use to like make songs that don't

00:23:20,429 --> 00:23:24,720
make any money but if you want to like

00:23:21,809 --> 00:23:26,010
make a pop hit that everyone loves like

00:23:24,720 --> 00:23:29,190
you really should just use this chord

00:23:26,010 --> 00:23:36,179
progression and like think of some nice

00:23:29,190 --> 00:23:38,460
words to say over it so I guess the the

00:23:36,179 --> 00:23:39,750
point of this whole thing is like you

00:23:38,460 --> 00:23:41,789
know do I think I'm going to write good

00:23:39,750 --> 00:23:45,059
music in code like probably not I mean

00:23:41,789 --> 00:23:47,970
there is great you know apps to write

00:23:45,059 --> 00:23:49,770
music that are kind of a bit technical a

00:23:47,970 --> 00:23:53,909
MIDI apps you get a MIDI keyboard and

00:23:49,770 --> 00:23:55,350
there's kind of apps that let you I mean

00:23:53,909 --> 00:23:56,820
there are specific apps that they're

00:23:55,350 --> 00:23:58,500
designed to have their own kind of

00:23:56,820 --> 00:24:00,650
programming language and music and you

00:23:58,500 --> 00:24:02,940
probably use those to write good music

00:24:00,650 --> 00:24:05,370
there are like music apps that you can

00:24:02,940 --> 00:24:07,710
use to to make your music but this is

00:24:05,370 --> 00:24:09,480
really a exercise in understanding

00:24:07,710 --> 00:24:11,400
rather than exercise and actually making

00:24:09,480 --> 00:24:14,400
something nice and it's also kind of an

00:24:11,400 --> 00:24:15,960
exercise in abstraction we started off

00:24:14,400 --> 00:24:18,390
from just a number we start from the

00:24:15,960 --> 00:24:20,520
number 440 and four with nothing else

00:24:18,390 --> 00:24:22,289
apart from some browser API is we built

00:24:20,520 --> 00:24:25,590
pretty much the whole of music theory

00:24:22,289 --> 00:24:28,080
that most musicians will use I mean you

00:24:25,590 --> 00:24:30,630
get musicians that know that there is

00:24:28,080 --> 00:24:32,250
quite a lot more to this but if you know

00:24:30,630 --> 00:24:34,380
only the things I've given you in this

00:24:32,250 --> 00:24:36,929
talk you know you could pretty much

00:24:34,380 --> 00:24:38,460
write most of the music that you likely

00:24:36,929 --> 00:24:40,470
listen to unless you've listened to some

00:24:38,460 --> 00:24:44,429
really nice enteric jazz or like math

00:24:40,470 --> 00:24:46,520
rock or something so you know you can

00:24:44,429 --> 00:25:01,520
abstract this I mean this is

00:24:46,520 --> 00:25:03,539
[Music]

00:25:01,520 --> 00:25:07,860
so kind of sounds like something else is

00:25:03,539 --> 00:25:10,230
elder I think it's like using the basic

00:25:07,860 --> 00:25:11,940
building blocks that we've just done you

00:25:10,230 --> 00:25:13,559
can see that it's actually quite simple

00:25:11,940 --> 00:25:16,280
to write something sounds actually

00:25:13,559 --> 00:25:19,980
musical from building blocks that don't

00:25:16,280 --> 00:25:21,570
I guess my point is that if you come to

00:25:19,980 --> 00:25:25,380
music and you never read on it before oh

00:25:21,570 --> 00:25:27,210
wait this looks beautiful I mean like it

00:25:25,380 --> 00:25:29,400
just it just looks beautiful but I mean

00:25:27,210 --> 00:25:30,870
I can't read it I'm sure lots of

00:25:29,400 --> 00:25:34,770
musicians could and sight reading is a

00:25:30,870 --> 00:25:37,380
skill on its own but my point is that

00:25:34,770 --> 00:25:39,510
this really is a programmer when you see

00:25:37,380 --> 00:25:41,940
that you should be thinking that it's

00:25:39,510 --> 00:25:43,799
those are like the notes that you're

00:25:41,940 --> 00:25:46,380
playing in order that previous notation

00:25:43,799 --> 00:25:48,090
it's very hard to actually extract the

00:25:46,380 --> 00:25:49,530
meaning from that like were they

00:25:48,090 --> 00:25:50,640
thinking oh I want to play this chord in

00:25:49,530 --> 00:25:52,890
this court no they're just writing down

00:25:50,640 --> 00:25:54,840
the individual notes that you play and

00:25:52,890 --> 00:25:57,470
then you have to figure out the

00:25:54,840 --> 00:25:59,880
abstraction that they were thinking in

00:25:57,470 --> 00:26:03,030
so I guess that's kind of my point

00:25:59,880 --> 00:26:04,500
really you can break this down into

00:26:03,030 --> 00:26:06,390
quite simple steps and there's actually

00:26:04,500 --> 00:26:08,580
you know over a pieces a lot of code

00:26:06,390 --> 00:26:10,470
though there's probably like 50 lines of

00:26:08,580 --> 00:26:12,030
code altogether in this whole talk that

00:26:10,470 --> 00:26:16,530
are like remotely unique and it's not

00:26:12,030 --> 00:26:18,450
actually that complicated at all I got

00:26:16,530 --> 00:26:22,559
some links here I'll probably tweet this

00:26:18,450 --> 00:26:24,090
these slides to Pablo Dean if you're up

00:26:22,559 --> 00:26:26,039
for tweeting them out so that people can

00:26:24,090 --> 00:26:28,860
click on these rather than trying to

00:26:26,039 --> 00:26:33,250
write them down but yeah that's

00:26:28,860 --> 00:26:39,180
everything thanks for listening

00:26:33,250 --> 00:26:39,180

YouTube URL: https://www.youtube.com/watch?v=fCmnWP77ZlA


