Title: Ember London, Fast Table Development Using Ember Data Models, November 2017
Publication date: 2018-01-31
Playlist: Ember London
Description: 
	Talk presented by Bartosz Jakubowiak.

More about Ember London: https://www.meetup.com/London-Emberjs-User-Group/
Captions: 
	00:00:00,000 --> 00:00:06,270
hi everyone my name is Bart and I work

00:00:04,080 --> 00:00:08,670
for IG with Luke and a couple of other

00:00:06,270 --> 00:00:11,070
guys here it was actually meant to be

00:00:08,670 --> 00:00:15,839
like a lightning talk so I didn't

00:00:11,070 --> 00:00:19,289
prepare any slides so just this one yeah

00:00:15,839 --> 00:00:22,050
so straight to the topic what's the

00:00:19,289 --> 00:00:25,980
problem imagine you have a world of

00:00:22,050 --> 00:00:28,650
applications where well every app

00:00:25,980 --> 00:00:30,720
consists of some kind of a table it

00:00:28,650 --> 00:00:35,309
could be based on the same underlying

00:00:30,720 --> 00:00:37,950
data but just have some columns messed

00:00:35,309 --> 00:00:39,840
around or anything just some pictures on

00:00:37,950 --> 00:00:42,540
it some different components or

00:00:39,840 --> 00:00:46,710
something else is based on the data so

00:00:42,540 --> 00:00:50,039
how would you approach it like normally

00:00:46,710 --> 00:00:55,340
without any additional help so I've got

00:00:50,039 --> 00:00:59,489
some amber up here set up for the talk

00:00:55,340 --> 00:01:05,519
so we would start up with some amber

00:00:59,489 --> 00:01:11,220
data model so can you see it okay about

00:01:05,519 --> 00:01:16,049
now weather okay so just start with some

00:01:11,220 --> 00:01:20,250
simple amber data model and just add

00:01:16,049 --> 00:01:28,710
some add some routing chill today to

00:01:20,250 --> 00:01:30,540
your review and then for for your

00:01:28,710 --> 00:01:32,970
template you would just end up with

00:01:30,540 --> 00:01:36,079
something like this it's creating a

00:01:32,970 --> 00:01:41,880
table with some HTML and that would work

00:01:36,079 --> 00:01:43,710
you can get a nice table you could do

00:01:41,880 --> 00:01:46,200
some different stuff with it you can add

00:01:43,710 --> 00:01:48,210
some components here and there based on

00:01:46,200 --> 00:01:51,000
the data it would work just fine but

00:01:48,210 --> 00:01:52,680
then imagine and you were to create a

00:01:51,000 --> 00:01:55,710
table that looks exactly like this one

00:01:52,680 --> 00:01:59,610
but on the other page and you would have

00:01:55,710 --> 00:02:03,360
to maintain to two sets of this this

00:01:59,610 --> 00:02:05,189
code basically well obviously you could

00:02:03,360 --> 00:02:09,509
create a component and just feed the

00:02:05,189 --> 00:02:12,400
data into it but then that creates in

00:02:09,509 --> 00:02:16,040
other issues like maintaining your

00:02:12,400 --> 00:02:20,300
table headings and so on so that's quite

00:02:16,040 --> 00:02:27,910
a burden so what we decided is to make a

00:02:20,300 --> 00:02:30,500
use of member data and first of all

00:02:27,910 --> 00:02:32,150
create a component so I'm using models

00:02:30,500 --> 00:02:34,489
table I don't know if you ever used

00:02:32,150 --> 00:02:36,800
member models table quite useful

00:02:34,489 --> 00:02:37,910
component it gives you lots of stuff for

00:02:36,800 --> 00:02:41,750
free

00:02:37,910 --> 00:02:45,319
so yeah that's the table it's working

00:02:41,750 --> 00:02:48,580
pretty good and the issue around using

00:02:45,319 --> 00:02:51,290
this model stables component basically

00:02:48,580 --> 00:02:54,700
was that you basically had to set up

00:02:51,290 --> 00:02:58,459
some predefined predefined the columns

00:02:54,700 --> 00:03:02,599
for your table basically so we had to

00:02:58,459 --> 00:03:05,780
copy this set of config every time we

00:03:02,599 --> 00:03:09,170
wanted to use a table so we wanted to

00:03:05,780 --> 00:03:11,480
have those information saved in one

00:03:09,170 --> 00:03:15,260
place where we would have to maintain

00:03:11,480 --> 00:03:18,470
only one one copy of the headings

00:03:15,260 --> 00:03:20,930
namings like sorting underlying data

00:03:18,470 --> 00:03:22,760
model and so on so whenever we wanted to

00:03:20,930 --> 00:03:26,299
use a table similar to this one

00:03:22,760 --> 00:03:29,500
just throw in one one simple component

00:03:26,299 --> 00:03:32,299
and you're good to go without managing

00:03:29,500 --> 00:03:40,430
without managing stuff like different

00:03:32,299 --> 00:03:43,790
headings so the solution we found was

00:03:40,430 --> 00:03:48,650
just use ember data as a single source

00:03:43,790 --> 00:03:52,760
source of true so basically you can add

00:03:48,650 --> 00:03:56,799
on to your properties in number data an

00:03:52,760 --> 00:03:59,450
extra object that's basically a metadata

00:03:56,799 --> 00:04:02,030
and you can use this easily with your

00:03:59,450 --> 00:04:05,420
tables but the problem was how would you

00:04:02,030 --> 00:04:08,450
go about extracting extracting this data

00:04:05,420 --> 00:04:10,700
from your model easily and use it

00:04:08,450 --> 00:04:14,660
everywhere on your in your application

00:04:10,700 --> 00:04:18,099
so we're using this pretty simple with

00:04:14,660 --> 00:04:21,709
one one with one util here where we just

00:04:18,099 --> 00:04:24,740
import the actual the actual model that

00:04:21,709 --> 00:04:25,700
we want to use the table on so users for

00:04:24,740 --> 00:04:28,070
example

00:04:25,700 --> 00:04:30,560
then just use the function pass your

00:04:28,070 --> 00:04:37,820
model and your table is generated just

00:04:30,560 --> 00:04:42,260
like that and the magic behind it is all

00:04:37,820 --> 00:04:44,990
on this one yeah there is simple

00:04:42,260 --> 00:04:52,220
function we came up with just to extract

00:04:44,990 --> 00:04:56,540
the metadata from oh yeah sir yeah that

00:04:52,220 --> 00:04:59,330
should be better oh yeah so basically

00:04:56,540 --> 00:05:03,290
just a simple function that takes your

00:04:59,330 --> 00:05:06,590
model and gets the metadata that you've

00:05:03,290 --> 00:05:10,580
passed the the object basically so you

00:05:06,590 --> 00:05:13,370
can pick any key from your model we've

00:05:10,580 --> 00:05:16,100
got table here so if we ask for a table

00:05:13,370 --> 00:05:19,040
it's gonna return all the all the stuff

00:05:16,100 --> 00:05:21,200
that's required for not required but

00:05:19,040 --> 00:05:24,230
just everything that that's here but

00:05:21,200 --> 00:05:26,300
that wasn't that wasn't everything that

00:05:24,230 --> 00:05:29,120
we needed because that's really like a

00:05:26,300 --> 00:05:32,390
generic generic function and all it does

00:05:29,120 --> 00:05:36,620
is takes this takes this metadata from

00:05:32,390 --> 00:05:40,070
your model then we created something

00:05:36,620 --> 00:05:42,110
else that's that was supposed to work

00:05:40,070 --> 00:05:43,610
that's working with the Umbra model

00:05:42,110 --> 00:05:47,930
stable but it can work with any other

00:05:43,610 --> 00:05:50,800
component we're passing a function to to

00:05:47,930 --> 00:05:54,770
the util basically and we were just

00:05:50,800 --> 00:05:56,330
doing some magic behind behind classes

00:05:54,770 --> 00:05:59,450
and property names that the components

00:05:56,330 --> 00:06:05,000
actually the component takes in so with

00:05:59,450 --> 00:06:07,430
one function call on our controller just

00:06:05,000 --> 00:06:10,910
like that we can have as many table as

00:06:07,430 --> 00:06:15,860
you want just with basically two lines

00:06:10,910 --> 00:06:19,030
and that's really helpful tool because

00:06:15,860 --> 00:06:22,820
if you would like to create another

00:06:19,030 --> 00:06:25,970
table so that's the first table and then

00:06:22,820 --> 00:06:28,960
there's a better table with some some

00:06:25,970 --> 00:06:32,300
component here that takes the data from

00:06:28,960 --> 00:06:35,420
from the model we had and then just add

00:06:32,300 --> 00:06:40,330
something on top of it and to solve that

00:06:35,420 --> 00:06:40,330
it's pretty easy all you have to do is

00:06:41,330 --> 00:06:48,569
get the columns and just add something

00:06:44,520 --> 00:06:51,240
else on top of it and that was the amber

00:06:48,569 --> 00:06:53,220
model stable way of just passing a

00:06:51,240 --> 00:06:55,949
component it gets all the context from

00:06:53,220 --> 00:06:58,800
your controller and stuff and you can do

00:06:55,949 --> 00:07:01,530
some pretty cool things really fast so

00:06:58,800 --> 00:07:03,599
just to get that icon there just three

00:07:01,530 --> 00:07:07,349
lines of code basically and you've got

00:07:03,599 --> 00:07:08,970
the table like that yeah so that's

00:07:07,349 --> 00:07:12,190
pretty much it it was meant to be a

00:07:08,970 --> 00:07:17,019
quick talk all right thanks

00:07:12,190 --> 00:07:17,019

YouTube URL: https://www.youtube.com/watch?v=T30eWn8BfFE


