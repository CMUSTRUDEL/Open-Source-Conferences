Title: Virtual EmberConf 2020: An Ember Dev's Guide to CSS Grid by James Steinbach
Publication date: 2020-03-26
Playlist: EmberConf 2020
Description: 
	An Ember Dev's Guide to CSS Grid by James Steinbach

There's plenty of buzz about CSS Grid, but from a distance, it can seem intimidating - especially for developers who don't often write CSS. Grid feels daunting for good reason: the Grid layout module added over 30 new properties, values, and units to CSS!

While all of those additions are useful, we can optimize our learning: in this talk, we'll learn the 8 new pieces of Grid spec the will enable us up to build the vast majority of the layouts we'll use in real life! Around these 8 details, we'll start with a brief tour of CSS layout history, and finish with some practical Grid ProTips.
Captions: 
	                              [Music]                               hey there I'm Jim Steinbach and I'm                               really excited to be speaking with you                               today about an ember nose guide to CSS                               grid CSS grid is a really awesome cool                               and powerful block of CSS may give us a                               lot of powerful tools that we've never                               had in any CSS layout method until now                               this combination has not existed until                                today and by today I mean                                             the major browsers shipped full grid                                support grid gives us a responsive CSS                                only layout method it only needs grid                                Styles floats clear fixes don't need                                that inline block whitespace problems                                don't to hack those only grid styles it                                allows precise control of columns rows                                and gaps in our grid and allows us to                                position children anywhere we need to                                however as a Spider Man said with great                                power comes great responsibility with                                grid live great power comes great                                complexity and this slide is full of                                little words not because I want you to                                read them all but I'm not very                                thoughtful about legibility no because I                                don't need you to read them all I just                                want us to collectively feel the weight                                of this wall of text right it's a lot                                and especially if you're not a CSS                                specialist or expert if your day to day                                is consumed with a lot of normal                                JavaScript things working on frameworks                                release updates for ember refactoring a                                bunch of components to use glimmer                                getting all octane o fide in your                                projects a great great Greek are great                                you don't have time probably to focus on                                                                                                    them are new some are from flexbox but                                if you've got sharp eyes and you're                                paying attention                                the flexbox properties are all the same                                ones that you always have to look up on                                CSS tricks every time with that cool                                little visualization they've got                                bookmark there it's not the easy flex                                box it's the tricky ones so this is like                                trying to drive to the horizon down this                                road and we're not going to do that I                                want to get to the end of the road but I                                don't want anybody you know to get                                motion sick so we're gonna trim it down                                we're gonna learn seven things today and                                these seven things you see on your                                screen now are going to give us the vast                                majority of the power we need and I'm                                gonna make a big promise to build almost                                any grid you need in real life that's a                                big promise but I think it's gonna hold                                true                                so let's look at this optimized Road                                let's hit the horizon on that path so                                without further ado the short happy path                                to grid well look at code first and then                                we'll break it down and learn it all                                these lines I mean display grid is a                                starting point just like display flex                                it's the right way to tell the browser                                hey use grid layout algorithm on this                                component element to lay out all of its                                children not grandchildren just                                immediate children we're gonna provide                                some measurements for the columns and                                I'll show you what F R means in a moment                                we're gonna define some areas we're                                gonna name the spaces where we can put                                an element there are four names header                                content sidebar and footer remember                                those because we're gonna see them on                                the very next slide and we're gonna put                                gaps between rows and columns and you                                think that's a lot of complexity on the                                parent wanted to do the children                                actually grid moosa' complexity with CSS                                grid all the measurements all the                                layouts all the rules all the                                constraints live on the parent and all                                the children need to do is get told                                which area to fit themselves in and all                                the words in grid area here are part of                                a grid template areas on the previous                                slide so really powerful stuff you don't                                have to define a ton of math and a ton                                of measurements and a ton of margins and                                percent based width and all that on the                                children we're moving all that                                complexity off of the children onto the                                parent the grid itself which is really                                 awesome it makes our code so much                                 cleaner because they're not searching                                 through three or four different selector                                 blocks to find width and measurements                                 we're scanning for different selector                                 blocks to find a named area all the                                 measurements all the complexity is                                 defined on the grid itself and children                                 just are told where to go a very cool                                 method here so that's a look at these                                 properties who put into a grid container                                 see what we got                                 well grid template columns is the first                                 thing display grid is a given we've                                 already mentioned that but let's look at                                 how to measure columns columns set the                                 proportions for tracks along the inline                                 axis of the grid container and you think                                 why wouldn't just say horizontal James                                 or just say columns is it too many fancy                                 words just say columns I respect that                                 and I'll show you in a second why I'm                                 calling it an inline axis it's a new                                 evolution in CSS then it's actually                                 going to be very powerful                                 it's widely supported but this gives us                                 our column measurements and the value we                                 use is any valid length values in a                                 space separated series for example you                                 can do                                                                  percent and unlike flexbox                                 if you don't use up all your grid space                                 and need to find your columns grids like                                 that's cool I don't mind empty space I'm                                 not afraid of the silence flexbox is                                 like haha no silence I must stretch                                 things unless you tell me not to and so                                 grid is different from flexbox in that                                 regard your precision stands without                                 being artificially stretched or squished                                 however if you want to use up your empty                                 space fractional units are a really cool                                 way to do that we hold our next code                                 grid template columns one fraction                                    m/s                                                                  kind of fixed measurements the relative                                 to the font size but they're fixed in                                 that grid and after they're used up grid                                 goes okay and the parent is there still                                 empty space our                                                      room cool if I've got a fraction of the                                 beginning in a fraction at the end it's                                 two fractions I've got to divide all the                                 remaining space in I give one out of two                                 here and one out of two here or split in                                 two halves and what we've got here is a                                 self centering layout the                                             columns are always going to be put                                 together centered in the middle of the                                 grid pretty cool stuff great template                                 rows works essentially the same way but                                 whereas columns operate along the inline                                 axis rows operate along the block axis                                 and again in a second I'll show you why                                 I'm saying inline and block and not top                                 bottom left right let's kind of words                                 same value and look at examples we can                                 do a fraction and then two fractions                                 here the top row is widen at all enough                                 for its content and the second row is                                 twice as tall one and two here we've got                                 a repeat function which is a cool new                                 trick our top row is                                                    all the rows that follow are a hundred                                 pixels tall a neat little way to do                                 something like a you know table layout                                 if you're building like an editor an                                 admin interface for something you're all                                 your titles would go in a little                                    pixels column and then each of your rows                                 with a whole bunch more data would be                                 taller below it but having shown you                                 pixels on the screen                                 now turn around and say oh go easy on                                 the pixels oh okay so I want to give you                                 a warning about fixed heights fixed                                 Heights are really easily caused                                 overflow if your content is longer than                                 whatever                                                                going to flow through the margin least a                                 bad problem flow down into the next row                                 not into like the element but like                                 covering up or obscuring part of the                                 next row next decent dist option worst                                 option get covered up by the next row or                                 obscured by an overflow hidden property                                 on its own row accessibility is not just                                 something we do for people who have what                                 we perceive from our privileged spot as                                 lowered ability ok accessibility is for                                 everybody fixed height sun grid rows                                 creates accessibility problems for users                                 of                                                                   limitation on them if we program things                                 wrong we create legibility and                                 accessibility problems so accessibility                                 is for everyone not in us-versus-them                                 kindness of our heart aren't we special                                 give ourselves a star proposition it's                                 just building the web for people ok                                 grid is going to automatically protect                                 your content unless you put a fixed                                 height on that's an awesome part of the                                 web so use flexible values for your row                                 Heights like Auto and min content and                                 max content fractional units are pretty                                 decent to logical properties quick                                 sidebar                                 the reason I've said inline and block is                                 because we've got a new way of thinking                                 about where things are located and what                                 directions things go in CSS this is an                                 evolution of the spec for a long time                                 everything we've positioned we've                                 described with physical properties these                                 are related to the viewport the device                                 itself top right bottom left those break                                 down really quickly right what if you                                 build a website and you start                                 translating it and you cover most of                                 Europe with your languages like French                                 and German and Dutch and then the                                 handful of others and it's all                                 left-to-right you got English and all                                 those European languages and you're                                 pretty covered right and then marketing                                 and visited aside hey we're expanding                                 our market into the Middle East as well                                 and we're going to have users who read                                 in Hebrew and Arabic and now we need to                                 be able to support the same site but our                                 layout has to be right-to-left well                                 suddenly our physical prop                                 any words right and left no longer make                                 sense they no longer accurately describe                                 where content is and we have to find a                                 way to reverse all our margin rights and                                 border rights and all those things                                 because we need them all the left now                                 one more complexity not all languages                                 are horizontal okay all of our                                 left-to-right languages which probably                                 cover the majority of people in the room                                 room today all of our right-to-left                                 languages as well it's all horizontal so                                 inline is a start to end of a line of                                 text inside of an element that's                                 horizontal those are horizontal                                 languages and block is a start to the                                 end of a block of text like a full                                 paragraph worth if you decide to                                 continue expanding your market in this                                 hypothetical app we're talking about and                                 now you're bringing in farther east                                 countries and you're expanding all the                                 way out into China and Korea and Japan                                 and you've introduced a handful of                                 dialects now that have column text                                 they're writing mode is a vertical now                                 the start to the end of a line of text                                 is a vertical line not a horizontal one                                 and the start to the end of a block of                                 text is a horizontal line not a vertical                                 one grid automatically responds in this                                 in the slides that follow I am NOT going                                 to change the CSS at all I promise I'm                                 only going to put different attributes                                 or one case a CSS property on a wrapper                                 element I'm not going to change the grid                                 code at all here's direction left to                                 right here's direction right to left I                                 didn't change the grid code at all it                                 automatically turned it all around whoa                                 how sweet right-to-left support for free                                 yes and now one more writing mode                                 vertical left right you can see the                                 browser rotated the text automatically                                 even though the characters are still                                 English characters Latin characters it                                 rotated the text and the entire layout I                                 did not change the grid CSS at all I                                 just put this property on a wrapper                                 amazing that's all we did grid gives you                                 so much responsiveness for free this is                                 amazing so we've made rows we've made                                 columns back to grid let's name those                                 intersections when we use whitespace                                 that's cool and I'll show you why                                 whitespace is cool on the next slide and                                 if you need to create a                                 blank cell in a grid template you can                                 use a period for that so here we are                                 same thing we saw back at the beginning                                 header is one grid area that spans four                                 columns and fills one row we've got a                                 gap and a gap in between them body and                                 sidebar and then we've got footer much                                 like headers spanning four rows one area                                 though one element will be assigned to                                 footer one element assigned to header                                 and notice what I said about whitespace                                 I've got a couple spaces after that                                 third header in the third footer a few                                 extra spaces after body and a whole                                 bunch of extra spaces after each period                                 why did I do that it's cool that grid                                 doesn't mind how many spaces you use                                 because you cannot just program your                                 grid you can draw your grid directly in                                 grid template areas and the outcome will                                 look like the CSS that's powerful if you                                 are a visual learner or identifier of                                 things this is gonna rock your world                                 this is super duper look at your CSS                                 that's what the page is gonna look like                                 it's right there love it                                 you can go a little more a skier Edition                                 use emoji but I don't recommend that                                 it's harder to read you run into                                 problems with contrast and most text                                 editors between light and dark mode and                                 your you know zero or sync mono spaced                                 fonts don't apply anymore with emojis                                 and you might even run into a browser                                 implementation issue with Unicode                                 mapping but couple limitations on grid                                 template areas a named area can only be                                 one rectangle                                 it can't be an l-shape it can't be like                                 a stair-step kind of try to make a fake                                 diagonal all the cells have to be                                 adjacent you can't start a named area                                 here continue it here and then put a                                 little more down here and expect content                                 to kind of flow between them and those                                 breaks what you're describing is a whole                                 different CSS spec it's real though it's                                 called CSS regions and it doesn't exist                                 and browsers yet it's been under                                 discussion forever                                 yeah sorry and grid template areas their                                 names have to be strings that start with                                 letters not numbers if you start a grid                                 template area name with a number like                                    that's not gonna work a                                               when we look at the children we'll see                                 why we can't use a number for a named                                 area as the first character but for now                                 just trust me don't do it okay I'll                                 bonus sorry I said there are                                          this here's a bonus great time                                 it's just a shorthand though so it's                                 essentially summing up what we've                                 already learned you can put grid                                 template columns grid template rows and                                 grid template areas those three                                 properties all in one shorthand it's                                 kind of like background containing                                 background color background image                                 background position backer and size and                                 a couple others all three properties you                                 can put into one property and now what                                 have we done this is amazing this I just                                 love this so much this is where I start                                 when I write CSS grid you can not only                                 look at your code and see exactly how                                 your layout is going to turn out                                 disclaimer                                 your your editor is not going to                                 highlight with orange and blue that                                 would be a really cool vs code extension                                 if somebody could make it though I'll be                                 really nifty your code editor is not                                 going to highlight like that but not                                 only can you visualize the entire grid                                 layout that the browser is going to                                 render every row ends with its height                                 every column ends with its with all the                                 relevant information two rows columns                                 and their proportions is right there in                                 one chunk of CSS that is amazing that is                                 boiling down a lot of complicated stuff                                 to a very readable readable identifiable                                 manageable chunk of CSS that visually                                 matches the end result on your browser                                 window I love this so much I'm so                                 excited this is how I love grid this is                                 what I do and you can make gaps too                                 gaps are a space that exists between                                 columns or between rows used to be                                 called grid gap you might remember that                                 if you've seen tutorials for a year or                                 two but grid gap has been deprecated and                                 air quotes as a name at CSS nothing ever                                 gets deprecated for real but it's now                                 just called gap because a flexbox                                 is going to be supporting gap between                                 children Firefox already has that                                 support chromium and the WebKit are                                 hopefully hopefully not far behind it's                                 a shorthand for the row gap                                           and then the column gap                                               like margin it's also a self expanding                                 shorthand so if you just say gap                                    pixels you'll get                                                     between columns that's it                                 that's all the new properties you need                                 to know to build a grid container I                                 showed you a couple new values on the                                 way in those slides so let's dig into                                 those two now                                 fraction and repeat fraction is one                                 fraction of the grids free space when is                                 free space it's whatever pixels are left                                 after all that non fractional units                                 column measurements or row measurements                                 have been used up so after you calculate                                 your gaps after you calculate all of                                 your pixel and viewport width and m and                                 r m and percent based column widths                                 anything left in the parent grid is                                 available as free space for fractional                                 units to divvy up based on the total                                 number of fractional units you've put in                                 your grid row or a grid template row                                 grid tablet column property green is                                 going to divide the free space into that                                 many units and then portion it out                                 appropriately words are great but let's                                 look at code instead here's                                            in the first column and then one                                 fraction it's super greedy it just                                 gobbles up the rest of the empty space                                 if we put this in a container that was                                 only                                                                 effectively be zero pixels wide because                                 there's no pixels left to divvy up                                 here's our self centering layout once                                 again                                                                  units there they and the gaps are                                 divided out first and then everything                                 left gets divided into half a chunk here                                 and half a chunk there you can even do a                                 column layout that's all based on                                 fractions here the browser says you've                                 given me six units to divide up one plus                                 two plus three so all the space is free                                 except for a couple gaps I'm going to                                 divide the rest of that pixel value into                                 six one for the first column two sixths                                 for the second column and three sixths                                 for the final column a very much simpler                                 way I think to program proportional                                 grids without having to get into                                 percentages and decimals and complicated                                 math especially division by three                                 related stuff so let's walk through that                                 all in one shot let's build a grid from                                 scratch here's a blank grid it's got                                 four columns all squished together on                                 the edges they're just barely wide                                 enough to have a little bit of color so                                 let's add gaps cool thank you browser                                 you put gaps in I love it                                 let's give the second and third column                                 that our width it's a                                                   for the first cup the wider column and                                                                                                         awesome columns one and four still empty                                 let's change them from zero                                 - one fraction and now the layout self                                 centers and we can go ahead and add in                                 some rows so we've got a header and a                                 footer and this is the the code we've                                 been looking at like all day long more                                 or less only with some fixed rows just                                 to give it space in the demo we've just                                 built a non-trivial layout you may say                                 this is really simple that's like every                                 blog like most WordPress themes I'm                                 alright hahaha let's make fun of                                 WordPress - no we won't do that but this                                 is actually a specific layout from CSS                                 lore if you will it's called the holy                                 grail of CSS layout and for like a                                 decade CSS blogs and tutorials have                                 walked through different layout options                                 and techniques and said how well can                                 that lay on layout technique accomplish                                 this thing full width header and footer                                 centered layout with a wide content and                                 a narrow sidebar and the content in                                 sidebar the same height so the                                 background colors can extend all the way                                 from top to bottom we just learned how                                 to do it in grid in about                                               looking at code and thirty seconds of                                 walking through an animation I hesitate                                 to use the word easy but it would be                                 hard to see how grid could make that                                 simpler this is very manageable and a                                 really powerful thing we can do with not                                 a ton of syntax and not a lot of code                                 written hell of granite we also saw                                 repeat earlier as you might have guessed                                 it repeats a certain length certain                                 number of times                                 so repeat twelve times one fraction and                                 wait twelve equal columns let's pretend                                 as a twenty pixel gap to is bootstrap                                 this is a really neat way you can                                 basically migrate grids off of bootstrap                                 and into pure CSS if you need to so grid                                 child properties everything we've just                                 looked at all of those things properties                                 and couple values that's all for the                                 parent what do we put on the child                                 however buckle up I've got a whole slide                                 in this section right area that's all                                 what value do we use a grid template                                 areas name that we already set on the                                 parent now here's a quick caveat here's                                 why we can't use numbers as the first                                 character of a named area grid template                                 area accepts a different kind of value                                 which is up to four integers separated                                 by slashes and the                                 our manual row columns start and end                                 values if you start a grid area with the                                 number two loops browser is gonna be oh                                 - are we doing our row start and if you                                 do like - - a it will actually say no                                 that's actually invalid syntax it needs                                 to be a letter prefixed string and you                                 can't just say - because the browser is                                 gonna go all row start - let's do it man                                 so yeah please don't but great area all                                 you need and you need a named grid named                                 Darius string from your grid template                                 areas property now let's all we have to                                 do with the children that's all we have                                 to do with the children so congrats                                 everybody y'all know grid I'm proud of                                 you give yourselves a round of applause                                 okay it sounds really people just me                                 standing in my basement clapping sorry                                 but if you're all clapping at home -                                 then we'll just have a huge amount of                                 clapping in the world and it'll be                                 beautiful so before we go let's dig into                                 a couple practical examples everybody                                 wants to know how do you Center a grid                                 in CSS ha ha ha Stack Overflow joke                                 Peter Griffin meme moving along three                                 lines of code in grid also incidentally                                 same three lines of code in flexbox but                                 you start with display flex you just put                                 these three properties on the parent and                                 one element inside of it will                                 automatically be centered as long as a                                 parent is taller and wider than it cool                                 it's not a joke anymore it's actually                                 really manageable cool let's do                                 something non-trivial though back to the                                 idea we've got an admin interface maybe                                 we're letting people edit blog posts or                                 some other kind of published content                                 here we've got a grid we can not set up                                 our rows and columns on the wrapper                                 element that contains all these rows and                                 then get children of each row element to                                 respect the columns that's like that's                                 grandchildren kind of generations and we                                 can't do that with grid yet sub grid is                                 coming it's in Firefox and chromium I                                 think behind a flag in one or both                                 browsers and hopefully WebKit eventually                                 hopefully quickly really and once they                                 have some good we will be able to do                                 that but for now what we're gonna do is                                 we're gonna make each row in this table                                 I use table and you know air quotes it's                                 not an actual table element each row is                                 going to be display grid on its own                                 we've got two rows title and date                                 actions in stat                                 that's pretty self-explanatory each of                                 their Heights is Auto whatever it needs                                 for the words then we've got a fraction                                 as the width of the title and action                                 column and then the date and the status                                 tag are max content and Max content is a                                 cool new keyword in grid essentially                                 what max content says is I want the                                 maximum with this content could be if we                                 don't create any line breaks or                                 hyphenation don't go wider than that                                 don't go wider than the max content just                                 how wide will it be if we don't                                 artificially break any lines or words so                                 if we had May first as a publication                                 date the word published would not be                                 hyphenated even if we had a really                                 narrow viewport or a really wide element                                 in the next column pushing it over will                                 never line break between February and                                                                                                      post title gets really long it will line                                 break and that's a more legible way to                                 go for things let the post title have                                 the break and don't force your your date                                 to wrap and then we've got a half a gap                                 frm gap between everything let's get a                                 little more complicated let's take a                                 responsive component for example some of                                 you are saying wait wait a second don't                                 you take grid this is columns James this                                 is only columns you put a wrapper around                                 photo in bio you put a wrapper div                                 around the header which contains name                                 title and contact and awards those four                                 elements to wrapper is one for each pair                                 of elements boom you're done you don't                                 even grid for this you see the Flex box                                 you gave it a float that get out of here                                 the grid talk okay oh I'm sad but                                 actually I'm gonna fool you for a second                                 this is all laid out with grid without                                 wrapper divs and the reason for wrapper                                 divs will become apparent in a couple                                 slides but here's what the grid looks                                 like there actually are rows photo and                                 awards are allowed to overlap and share                                 that second row each other so we don't                                 see a single full width row gap dividing                                 the entire layout we're kind of smushing                                 past each other and creating the                                 illusion of there not being rows the                                 column with photo and bio in it is going                                 to be                                                            everything else the fraction of what                                 belongs to the header and awards so                                 here's what this looks like actually in                                 the grid get some those blue boxes to                                 help us see how things are put together                                 we've got six cells in the grid the                                 picture is allowed two adjacent cells                                 labeled photo the award's is allowed two                                 adjacent cells marked Awards and header                                 and bio are just in their own individual                                 cells now again                                 why wouldn't we wrap it divs around this                                 and just do it all with float                                 well because grid is simpler and because                                 responsive now your designer comes back                                 to you because again there's just delays                                 and things and it's a week later and                                 they say cool here's the                                 middle-of-the-road                                 medium width breakpoint version of that                                 component and now you're like oh I put a                                 wrapper div around the photo in the bio                                 and another one about around the header                                 and the awards and now I'm in trouble                                 now you gotta refactor your markup and                                 figure out something from scratch but if                                 you had used grid and all for children a                                 photo header bio and awards for just                                 children of grid and using grid to lay                                 them out all you've got to do for this                                 is change grid template to stick this in                                 a media query for the right min and Max                                 for that medium zone and photo and                                 header share a row bio and awards each                                 become a full row the photo will only be                                                                                                         rest of the space and we've reduced our                                 gap so now it's one Ram both directions                                 instead of one between rows and three                                 between columns and now we're perfectly                                 set up to go one smaller because you've                                 got your mobile comp as well and now                                 we're dropping all the text and so we're                                 gonna do this with our grid template                                 much much shorter photo and header are                                 the only areas we need notice however we                                 have to explicitly hide awards and bio                                 grid will not hide them automatically                                 simply because there's no longer a grid                                 template area that they match grid is                                 actually very very content friendly it                                 wants people to read your website okay                                 so what it will do is it will create a                                 bonus row underneath header and throw                                 the bio in there and then it'll create                                 another bonus row underneath the bio and                                 throw the awards in their grid we'll                                 just make up two bonus rows even though                                 you didn't define them in grid template                                 and it will preserve your content so if                                 you need them invisible you have to do                                 that manually with CSS you have to do it                                 on purpose                                 grid loves your content and it's not                                 gonna hide it unless you tell it to                                 we can also do a fun thing with like                                 image layout it's kind of like masonry                                 ish but this is all manual I                                                                                                                      wide and wouldn't you know our grid                                 template looks just like the output I                                   is a square                                                          tall                                                                    sized this is the power and the beauty                                 of grid when you make a grid template it                                 looks just like your output and when you                                 use grid template with real Heights down                                 the edge and the column widths across                                 the bottom it's all legible and                                 manageable in one chunk of text your CSS                                 looks like your layout and it's all in                                 one block I love this so last thing I                                 want to cover for you is a couple of                                 gotchas some tips and tricks I have                                 discovered on the way images assigned to                                 a grid area will obey the grid cell size                                 and maybe end up stretched or squished                                 or something not in their intrinsic                                 aspect ratio so either wrap the image in                                 a container element like a div that's an                                 okay place for a div wrapper that means                                 nothing semantically it's just there to                                 help with the image is sizing or cool                                 trick you can make the image object fit                                 cover in your CSS that will tell the                                 image go ahead and fill the entire grid                                 area but behave like you're a background                                 image using background image size your                                 background size cover and every browser                                 that supports grid a supports object fit                                 so win-win animating grids can you do                                 that some positives can animate between                                 grid template columns and rows values if                                 there's a same number you can't go from                                                                                                         way to do it and you can't animate                                 between different units for example your                                 first column can't animate from                                    pixels to                                                           impossible things gap is a little easier                                 to animate you'll get more browser                                 support for that and no you can't                                 animate an element between two different                                 grid areas that would be super cool not                                 gonna happen because there's too much                                 layout complexity and ie                                                word for ie                                                            support it if we were all in the same                                 conference room we I would say you raise                                 your hands if you're still supporting it                                 I'm really grateful we recently dropped                                 it on the current projects I've been                                 working on for the last couple years but                                 yet just                                 recently dropped and got to refactor and                                 let go of a lot of code fun fact                                 ie                                                                   grid not fun fact the grid spec wasn't                                 finalized yet so il haven't implemented                                 its own non-standard version of grid                                 spec and autoprefixer if you configure                                 it to grid true in its options can help                                 it can emulate some of the things that I                                                                                                          it cannot backfill or polyfill gap I                                    won't support gap . you can't hack that                                 without a prefix or either so an                                 actually recommend is not using                                 autoprefixer to do grid but rather use a                                 fallback layout for CSS like something                                 like flex or or floats or whatever it is                                 a works best for your team for ie                                        here's what you do the layout you give                                 ie                                                                      or hidden you use an older code that's                                 fine it's boring or layout it might                                 always be one column or two columns cool                                 everything is going to be accessible                                 legible interactive you're not gonna                                 hide or break anything but you're also                                 not gonna use grid and get all the                                 nuance and cleverness of grid layout and                                 if you if you've got a strung-out you                                    user base sadly but true ie                                              at this point largely used to                                 significant chunks of the web not                                 working for them at all                                 that's bad we don't know a lis any                                 people just because of an old browser                                 they're probably locked into by an                                 enterprise workplace or some                                 environmental constraint if you give                                 them readable useable content that's in                                 one boring column or some simplified                                 layout you've given them a working                                 website and we're doing better than I                                 could name some big tech companies that                                 don't support ie                                                     still have to support ie                                               numbers please give them fallback CSS                                 don't I wouldn't try to use on a prefix                                 or because you're gonna in too many too                                 many issues with gap but give them                                 fallback CSS it still looks useable and                                 is good to go and that's all I'm James I                                 work at Dockyard I'd love to talk about                                 grid and other CSS things so I'll be in                                 discord today chat with me there on                                 Twitter at JD Steinbach and you can find                                 my code and github in my blog at comm                                 all in the same handle but I like James                                 not JD anyway y'all have been a great                                 audience                                 I assume you                                 the benefit of the doubt I'm sure you're                                 a great audience thanks so much for                                 tuning in today I have a great day and                                 stay well everyone
YouTube URL: https://www.youtube.com/watch?v=qAkRdaokkgI


