Title: Vuyisile Ndlovu - PyPI in a box: Using a Raspberry Pi as a portable PyPI server || PyCon Africa 2020
Publication date: 2020-08-28
Playlist: PyCon Africa 2020
Description: 
	Problems common in Africa are power cuts and weak Internet connections. This makes it difficult for developers on the continent to get access to the resources they need such as the Python Package Index(PyPI) when they need to. In the talk I will discuss how to clone the PyPI repository to a Raspberry Pi and set it up as a local PyPI server to allow installing Python packages even when the Internet or electricity is out.

Creating your own portable PyPI server can be useful when coding with little or poor Internet access, running workshops such as Django girls, or when coding during power blackout.
Captions: 
	00:00:16,400 --> 00:00:21,279
hello

00:00:17,840 --> 00:00:21,279
my name is voice

00:00:21,600 --> 00:00:28,640
i am a web developer

00:00:24,640 --> 00:00:31,519
and technical writer based in zimbabwe

00:00:28,640 --> 00:00:32,880
the title of my talk is using a

00:00:31,519 --> 00:00:37,760
raspberry pi

00:00:32,880 --> 00:00:37,760
as a portable pi pi server

00:00:38,079 --> 00:00:45,600
now in this talk i'll talk about

00:00:41,680 --> 00:00:48,719
what pi p i is why it's important

00:00:45,600 --> 00:00:50,800
to know about it and why you would want

00:00:48,719 --> 00:00:53,920
to clone it and make your own

00:00:50,800 --> 00:00:56,160
pi pi server i'll cover

00:00:53,920 --> 00:00:58,160
how how to go about it what equipment

00:00:56,160 --> 00:01:01,760
and what software you need to get

00:00:58,160 --> 00:01:03,120
as well as why you need to you'd want to

00:01:01,760 --> 00:01:07,119
use a raspberry pi

00:01:03,120 --> 00:01:12,640
for this job so to get started

00:01:07,119 --> 00:01:15,040
let's talk about pipi the python

00:01:12,640 --> 00:01:17,759
standard library includes

00:01:15,040 --> 00:01:19,520
an extensive set of built-in packages

00:01:17,759 --> 00:01:24,400
and modules to help developers

00:01:19,520 --> 00:01:24,400
with their programs at the same time

00:01:25,280 --> 00:01:31,439
python has a very active

00:01:28,960 --> 00:01:33,360
community that contributes an even

00:01:31,439 --> 00:01:36,079
bigger set of packages

00:01:33,360 --> 00:01:36,880
these are third-party packages that end

00:01:36,079 --> 00:01:40,799
up in

00:01:36,880 --> 00:01:43,920
the python packaging index

00:01:40,799 --> 00:01:46,880
or pi p i this is

00:01:43,920 --> 00:01:47,920
this should not be confused with pi pi

00:01:46,880 --> 00:01:50,960
which is

00:01:47,920 --> 00:01:55,200
a python virtual machine

00:01:50,960 --> 00:01:58,240
pi p i hosts thousands

00:01:55,200 --> 00:02:00,880
of python packages

00:01:58,240 --> 00:02:01,360
last time i checked it had more than 200

00:02:00,880 --> 00:02:05,280
00:02:01,360 --> 00:02:08,959
of these now packages are organized

00:02:05,280 --> 00:02:12,879
into an index similar to

00:02:08,959 --> 00:02:12,879
the index you'd find in a book

00:02:13,280 --> 00:02:19,599
pip which is a pipe package manager

00:02:16,400 --> 00:02:21,599
uses pi pi as its default

00:02:19,599 --> 00:02:23,440
package index that's where it goes first

00:02:21,599 --> 00:02:27,040
to look for packages

00:02:23,440 --> 00:02:30,160
it can also use other package indexes as

00:02:27,040 --> 00:02:30,160
we'll see later on

00:02:33,040 --> 00:02:37,440
pip as i mentioned before is a package

00:02:36,160 --> 00:02:40,319
manager

00:02:37,440 --> 00:02:42,319
it's one of the most popular ones in the

00:02:40,319 --> 00:02:44,959
python ecosystem

00:02:42,319 --> 00:02:45,680
and it's a tool that allows you to

00:02:44,959 --> 00:02:48,400
install

00:02:45,680 --> 00:02:50,319
and manage additional libraries and

00:02:48,400 --> 00:02:52,879
dependencies that are not distributed

00:02:50,319 --> 00:02:53,840
as part of the standard library so in

00:02:52,879 --> 00:02:55,760
other words

00:02:53,840 --> 00:02:57,200
pip is the tool you use to download and

00:02:55,760 --> 00:02:59,840
install packages from

00:02:57,200 --> 00:02:59,840
pipi

00:03:01,680 --> 00:03:07,760
if you've used javascript you know about

00:03:05,200 --> 00:03:08,560
npm or if you're from a ruby background

00:03:07,760 --> 00:03:12,560
you know about

00:03:08,560 --> 00:03:16,000
gem pipe pip is like

00:03:12,560 --> 00:03:20,080
npm or gem right

00:03:16,000 --> 00:03:22,720
or apt for those who will use linux

00:03:20,080 --> 00:03:23,200
now all modern python versions ship with

00:03:22,720 --> 00:03:27,440
pip

00:03:23,200 --> 00:03:33,840
nowadays so uh let me give you a quick

00:03:27,440 --> 00:03:33,840
run through some of pips features

00:03:36,879 --> 00:03:44,840
right so as you can see

00:03:40,319 --> 00:03:48,640
pip allows you to download install

00:03:44,840 --> 00:03:52,319
uninstall and build packages

00:03:48,640 --> 00:03:52,319
so how does it do that

00:03:53,040 --> 00:03:56,720
well to answer this question we need to

00:03:55,439 --> 00:04:01,360
look at

00:03:56,720 --> 00:04:04,080
a typical installation of a package

00:04:01,360 --> 00:04:05,120
let's take a package like requests for

00:04:04,080 --> 00:04:08,799
example

00:04:05,120 --> 00:04:12,480
right now to install a package using

00:04:08,799 --> 00:04:15,680
pip you would run a command such as

00:04:12,480 --> 00:04:16,400
pip install requests if you've used

00:04:15,680 --> 00:04:19,359
python

00:04:16,400 --> 00:04:21,759
you've probably done this many times

00:04:19,359 --> 00:04:24,960
before

00:04:21,759 --> 00:04:27,840
now when you run this command

00:04:24,960 --> 00:04:29,040
pip searches for the package in this

00:04:27,840 --> 00:04:32,960
case requests

00:04:29,040 --> 00:04:36,560
in the pi pi index right it determines

00:04:32,960 --> 00:04:37,600
what its dependencies are collects those

00:04:36,560 --> 00:04:41,120
dependencies

00:04:37,600 --> 00:04:45,280
installs them and then installs requests

00:04:41,120 --> 00:04:49,759
so this looks something like this right

00:04:45,280 --> 00:04:52,880
you can see there you can see there

00:04:49,759 --> 00:04:53,759
at the top is the command to install

00:04:52,880 --> 00:04:55,600
requests

00:04:53,759 --> 00:04:57,280
right now pip in the background will

00:04:55,600 --> 00:05:00,960
then quickly

00:04:57,280 --> 00:05:02,960
figure out what requests depends on

00:05:00,960 --> 00:05:04,479
in this case we can see that it depends

00:05:02,960 --> 00:05:08,720
on certify

00:05:04,479 --> 00:05:12,000
url lib charted idna and a number of

00:05:08,720 --> 00:05:12,639
other dependencies right so pip collects

00:05:12,000 --> 00:05:14,960
those

00:05:12,639 --> 00:05:15,840
downloads then installs them and then

00:05:14,960 --> 00:05:19,120
installs

00:05:15,840 --> 00:05:22,639
requests so that's basically how

00:05:19,120 --> 00:05:26,080
pip works right now

00:05:22,639 --> 00:05:28,960
this process is very fast it's

00:05:26,080 --> 00:05:31,440
it's secure and it works virtually all

00:05:28,960 --> 00:05:34,560
the time

00:05:31,440 --> 00:05:35,600
you may be wondering though so if i can

00:05:34,560 --> 00:05:39,199
always get

00:05:35,600 --> 00:05:42,800
a package through pipi why should i

00:05:39,199 --> 00:05:46,960
make my own pipi server right

00:05:42,800 --> 00:05:51,280
isn't that reinventing the wheel

00:05:46,960 --> 00:05:53,759
why clone it if it works yeah

00:05:51,280 --> 00:05:57,280
now i'll give you a few reasons why why

00:05:53,759 --> 00:05:57,280
this this might be necessary

00:05:58,560 --> 00:06:05,280
there may be things beyond your control

00:06:02,400 --> 00:06:05,759
that can limit your access to python

00:06:05,280 --> 00:06:09,280
package

00:06:05,759 --> 00:06:11,440
index for instance suppose

00:06:09,280 --> 00:06:12,560
the internet is expensive or unreliable

00:06:11,440 --> 00:06:15,360
where you live

00:06:12,560 --> 00:06:19,120
right if the internet is not available

00:06:15,360 --> 00:06:22,639
that means you can't download packages

00:06:19,120 --> 00:06:24,639
similarly if there's no electricity

00:06:22,639 --> 00:06:25,919
or if the electricity supply isn't is

00:06:24,639 --> 00:06:28,400
erratic

00:06:25,919 --> 00:06:29,360
you can't use your computer or the wi-fi

00:06:28,400 --> 00:06:32,639
and without

00:06:29,360 --> 00:06:33,680
wi-fi you cannot download third-party

00:06:32,639 --> 00:06:37,039
packages

00:06:33,680 --> 00:06:40,160
right a third reason

00:06:37,039 --> 00:06:44,479
would be if you are behind

00:06:40,160 --> 00:06:47,520
a security firewall or something at work

00:06:44,479 --> 00:06:49,919
that prevents you from accessing pipi

00:06:47,520 --> 00:06:52,319
it would help if you had your own copy

00:06:49,919 --> 00:06:54,240
of pi api so that you could

00:06:52,319 --> 00:06:55,520
download packages as and when you need

00:06:54,240 --> 00:06:57,199
to

00:06:55,520 --> 00:06:58,720
and the fourth reason is well it would

00:06:57,199 --> 00:07:01,120
be pretty cool to do it

00:06:58,720 --> 00:07:03,120
yeah which is why i did it in the first

00:07:01,120 --> 00:07:06,400
place

00:07:03,120 --> 00:07:09,919
okay so

00:07:06,400 --> 00:07:13,919
to create your own your own pi

00:07:09,919 --> 00:07:15,440
pi server you need

00:07:13,919 --> 00:07:19,199
a few things and i'll walk you through

00:07:15,440 --> 00:07:22,560
those in a very broad and general

00:07:19,199 --> 00:07:24,800
way i'll walk you through the general

00:07:22,560 --> 00:07:28,479
steps to take

00:07:24,800 --> 00:07:30,800
to build your own local pipi

00:07:28,479 --> 00:07:31,840
server and the first thing you need is

00:07:30,800 --> 00:07:35,520
the hardware

00:07:31,840 --> 00:07:38,560
right and this is a raspberry pi

00:07:35,520 --> 00:07:39,280
a raspberry pi is a small computer the

00:07:38,560 --> 00:07:42,639
size

00:07:39,280 --> 00:07:43,680
of a bank card the advantage of using a

00:07:42,639 --> 00:07:47,280
raspberry pi

00:07:43,680 --> 00:07:50,400
is that it's it's lightweight

00:07:47,280 --> 00:07:53,840
it's affordable it's portable

00:07:50,400 --> 00:07:56,560
and it runs on very little power

00:07:53,840 --> 00:07:58,879
for instance i have my raspberry pi here

00:07:56,560 --> 00:08:00,319
it's it's pretty much the same as the

00:07:58,879 --> 00:08:02,879
one in the picture but mine

00:08:00,319 --> 00:08:04,879
has a case it's connected to my

00:08:02,879 --> 00:08:05,440
computer's usb port and it's running off

00:08:04,879 --> 00:08:07,919
that

00:08:05,440 --> 00:08:09,680
you can connect it to your power bank a

00:08:07,919 --> 00:08:12,879
charger

00:08:09,680 --> 00:08:16,080
it needs very little power

00:08:12,879 --> 00:08:18,960
and what the good thing about

00:08:16,080 --> 00:08:21,039
the raspberry pi is it's it's it costs

00:08:18,960 --> 00:08:24,000
something like 45 us dollars

00:08:21,039 --> 00:08:25,440
and you can you can pretty much do

00:08:24,000 --> 00:08:29,280
anything you can with a

00:08:25,440 --> 00:08:31,120
bigger computer on it now once you have

00:08:29,280 --> 00:08:33,360
the raspberry pi

00:08:31,120 --> 00:08:35,279
you want to install an operating system

00:08:33,360 --> 00:08:38,800
onto it something linux based

00:08:35,279 --> 00:08:42,479
like raspbian or something

00:08:38,800 --> 00:08:45,920
and then we'll use that to

00:08:42,479 --> 00:08:49,200
we'll use the raspberry pi to clone

00:08:45,920 --> 00:08:50,320
pipi onto it and we'll download as many

00:08:49,200 --> 00:08:52,160
packages

00:08:50,320 --> 00:08:55,120
from pi pi as we can fit into the

00:08:52,160 --> 00:08:57,200
raspberry pi and then the next step is

00:08:55,120 --> 00:09:00,560
to create an access point

00:08:57,200 --> 00:09:03,120
that clients can connect to right once

00:09:00,560 --> 00:09:03,839
clients can connect to the raspberry pi

00:09:03,120 --> 00:09:06,720
we then

00:09:03,839 --> 00:09:08,000
allow them to download packages so this

00:09:06,720 --> 00:09:12,320
would be very useful

00:09:08,000 --> 00:09:14,160
say if you were running a workshop and

00:09:12,320 --> 00:09:15,839
the internet is down or whatever and you

00:09:14,160 --> 00:09:19,920
need people to download packages

00:09:15,839 --> 00:09:23,200
you could use a raspberry pi for that

00:09:19,920 --> 00:09:26,240
now i recommend a model 3

00:09:23,200 --> 00:09:27,839
going up because these come with a

00:09:26,240 --> 00:09:31,200
built-in

00:09:27,839 --> 00:09:34,560
wi-fi adapter right

00:09:31,200 --> 00:09:36,880
so i'll very briefly go over the steps

00:09:34,560 --> 00:09:37,680
you need to take and what software you

00:09:36,880 --> 00:09:43,440
need to install

00:09:37,680 --> 00:09:43,440
to turn a raspberry pi into pi pi server

00:09:43,920 --> 00:09:51,839
so the first thing to do is to get the

00:09:48,839 --> 00:09:51,839
content

00:09:52,640 --> 00:10:00,080
you want to clone the pi

00:09:55,839 --> 00:10:01,920
pi now

00:10:00,080 --> 00:10:03,519
i mentioned that there are 200 000

00:10:01,920 --> 00:10:06,000
packages on the pi pi

00:10:03,519 --> 00:10:07,600
and that's more than a terabyte of data

00:10:06,000 --> 00:10:09,920
and chances are

00:10:07,600 --> 00:10:11,600
you won't get a memory card big enough

00:10:09,920 --> 00:10:13,680
to fit into

00:10:11,600 --> 00:10:15,519
a memory card that'll fit all that data

00:10:13,680 --> 00:10:18,959
into a

00:10:15,519 --> 00:10:20,720
small raspberry pi so

00:10:18,959 --> 00:10:22,720
you have to be selective in how you go

00:10:20,720 --> 00:10:26,160
about it

00:10:22,720 --> 00:10:29,200
and the good thing is that there are

00:10:26,160 --> 00:10:32,160
packages that are useful for

00:10:29,200 --> 00:10:33,440
downloading and cloning the pi pi one of

00:10:32,160 --> 00:10:36,959
them is

00:10:33,440 --> 00:10:39,120
mini repo now i like mini repo because

00:10:36,959 --> 00:10:40,079
it allows you to download a selective

00:10:39,120 --> 00:10:41,600
clone

00:10:40,079 --> 00:10:45,120
right for instance you can tell it to

00:10:41,600 --> 00:10:47,360
download python three packages only

00:10:45,120 --> 00:10:50,000
or certain types of packages like maybe

00:10:47,360 --> 00:10:52,480
you just want to download wheels or

00:10:50,000 --> 00:10:54,800
something like that you can filter the

00:10:52,480 --> 00:10:56,880
packages you want

00:10:54,800 --> 00:10:58,640
so that's the first piece of software

00:10:56,880 --> 00:11:02,079
you need to get mini repo

00:10:58,640 --> 00:11:05,600
is what you'll use to clone pi pi

00:11:02,079 --> 00:11:07,519
onto the raspberry pi the second

00:11:05,600 --> 00:11:09,120
piece of software you need is something

00:11:07,519 --> 00:11:12,480
called pi pi server

00:11:09,120 --> 00:11:12,480
now this is a python package

00:11:12,839 --> 00:11:19,279
that you use to create an index so

00:11:16,800 --> 00:11:20,800
when we mini repo will download hundreds

00:11:19,279 --> 00:11:22,560
of thousands of files onto

00:11:20,800 --> 00:11:24,399
and dump them onto your memory card onto

00:11:22,560 --> 00:11:26,880
your raspberry pi's memory card

00:11:24,399 --> 00:11:28,000
and then pypi server will then go

00:11:26,880 --> 00:11:30,079
through those files

00:11:28,000 --> 00:11:31,279
and create an index that allows those

00:11:30,079 --> 00:11:34,480
files to be searchable

00:11:31,279 --> 00:11:36,880
so that that's that speeds up the

00:11:34,480 --> 00:11:39,200
time it takes to serve up those files

00:11:36,880 --> 00:11:42,079
and lastly you'll need a web server

00:11:39,200 --> 00:11:44,240
something like nginx production grade

00:11:42,079 --> 00:11:47,279
now

00:11:44,240 --> 00:11:49,040
nginx will then serve up or make the

00:11:47,279 --> 00:11:52,720
files available

00:11:49,040 --> 00:11:55,440
to your users right

00:11:52,720 --> 00:11:56,000
so mini repo is a python package you can

00:11:55,440 --> 00:11:58,720
install it

00:11:56,000 --> 00:11:59,760
by running pip install mini repo after

00:11:58,720 --> 00:12:02,800
that

00:11:59,760 --> 00:12:04,800
you configure it and then run it and

00:12:02,800 --> 00:12:08,079
then

00:12:04,800 --> 00:12:08,560
you can see here to run it is just

00:12:08,079 --> 00:12:10,800
simply

00:12:08,560 --> 00:12:12,800
typing mini repo in the terminal and

00:12:10,800 --> 00:12:15,040
then this is how you configure it

00:12:12,800 --> 00:12:16,720
you can tell it what sort of package

00:12:15,040 --> 00:12:18,880
types you want

00:12:16,720 --> 00:12:21,279
or what sort of extensions you're

00:12:18,880 --> 00:12:23,600
interested in what what python versions

00:12:21,279 --> 00:12:26,010
to download packages for

00:12:23,600 --> 00:12:27,519
in my case i only downloaded python 3

00:12:26,010 --> 00:12:30,959
[Music]

00:12:27,519 --> 00:12:33,200
3 packages that came up to about 200

00:12:30,959 --> 00:12:36,480
gigs of data

00:12:33,200 --> 00:12:39,519
next you want to get pi pi server

00:12:36,480 --> 00:12:42,800
as i said before pipi server is

00:12:39,519 --> 00:12:44,560
also a python package so installing it

00:12:42,800 --> 00:12:47,680
is pretty simple

00:12:44,560 --> 00:12:49,600
and after you've installed pipi server

00:12:47,680 --> 00:12:50,720
you'll want to install and configure

00:12:49,600 --> 00:12:53,839
nginx or

00:12:50,720 --> 00:12:53,839
your web server of choice

00:12:56,800 --> 00:13:03,920
now i used nginx because

00:13:01,839 --> 00:13:05,120
i wanted to take advantage of its

00:13:03,920 --> 00:13:08,560
ability to

00:13:05,120 --> 00:13:12,079
handle high traffic loads and caching

00:13:08,560 --> 00:13:13,040
right now this results in significant

00:13:12,079 --> 00:13:16,560
speed ups

00:13:13,040 --> 00:13:18,160
compared to using pipi server on its own

00:13:16,560 --> 00:13:20,000
now you'll see here where i have the

00:13:18,160 --> 00:13:24,160
arrows this is where i created the

00:13:20,000 --> 00:13:25,279
cache and down here is where i created a

00:13:24,160 --> 00:13:28,160
reverse proxy

00:13:25,279 --> 00:13:29,240
and gave my server a name in this case i

00:13:28,160 --> 00:13:32,639
called the server

00:13:29,240 --> 00:13:33,360
cheeseshop.com now since we'll be

00:13:32,639 --> 00:13:37,120
creating

00:13:33,360 --> 00:13:39,680
a standalone local network

00:13:37,120 --> 00:13:42,480
you can name it whatever you want and i

00:13:39,680 --> 00:13:43,920
don't own the cheeseshop.com domain and

00:13:42,480 --> 00:13:45,760
it doesn't really matter because since

00:13:43,920 --> 00:13:48,399
this is a local network

00:13:45,760 --> 00:13:50,639
no one's going to sue me at least i hope

00:13:48,399 --> 00:13:50,639
not

00:13:50,959 --> 00:13:55,279
right so once you've downloaded the

00:13:53,519 --> 00:13:58,800
content

00:13:55,279 --> 00:14:02,560
you want to configure the raspberry pi

00:13:58,800 --> 00:14:04,639
into a wireless access point

00:14:02,560 --> 00:14:06,639
right you've downloaded the content

00:14:04,639 --> 00:14:09,440
you've set up a web server to serve the

00:14:06,639 --> 00:14:12,800
packages the next step is to

00:14:09,440 --> 00:14:15,120
allow clients to connect to it

00:14:12,800 --> 00:14:16,000
and there's some software you need to

00:14:15,120 --> 00:14:19,680
download as well

00:14:16,000 --> 00:14:19,680
to do this and

00:14:20,240 --> 00:14:24,560
the software can be broken down to two

00:14:23,360 --> 00:14:27,680
categories

00:14:24,560 --> 00:14:30,959
the first one is

00:14:27,680 --> 00:14:31,839
to allow the creation of the access

00:14:30,959 --> 00:14:35,440
point

00:14:31,839 --> 00:14:39,199
and the second is to handle ip addresses

00:14:35,440 --> 00:14:43,360
and domain names right

00:14:39,199 --> 00:14:44,000
now dns is what's responsible for

00:14:43,360 --> 00:14:47,440
resolving

00:14:44,000 --> 00:14:51,440
ip addresses and dhcp is

00:14:47,440 --> 00:14:52,639
handles assigning ip addresses to the

00:14:51,440 --> 00:14:54,800
different

00:14:52,639 --> 00:14:56,720
clients that will connect to your server

00:14:54,800 --> 00:14:57,680
now these two pieces of software are

00:14:56,720 --> 00:14:59,839
what

00:14:57,680 --> 00:15:01,360
turn your raspberry pi into a server and

00:14:59,839 --> 00:15:05,120
allow it to communicate with

00:15:01,360 --> 00:15:09,519
other clients so

00:15:05,120 --> 00:15:12,800
for access point you can use host apd

00:15:09,519 --> 00:15:16,399
and then for dns and dhcp

00:15:12,800 --> 00:15:17,040
you can use dns mask once those two are

00:15:16,399 --> 00:15:20,880
installed

00:15:17,040 --> 00:15:24,320
you will want to configure them so here

00:15:20,880 --> 00:15:26,959
is we're setting up the wi-fi hotspot

00:15:24,320 --> 00:15:28,000
so you want to specify what interface

00:15:26,959 --> 00:15:31,680
you want

00:15:28,000 --> 00:15:33,519
to you to have the access point on

00:15:31,680 --> 00:15:35,040
and then you want to give your network a

00:15:33,519 --> 00:15:37,920
name

00:15:35,040 --> 00:15:41,839
and down here you want to give your

00:15:37,920 --> 00:15:41,839
network a password

00:15:41,920 --> 00:15:48,240
the next step is to set up

00:15:45,279 --> 00:15:50,320
an ip address for the server you want to

00:15:48,240 --> 00:15:53,040
give it a static ip address so that

00:15:50,320 --> 00:15:55,759
clients can always connect to it so in

00:15:53,040 --> 00:15:57,480
this case i gave it a static ip address

00:15:55,759 --> 00:16:01,040
of

00:15:57,480 --> 00:16:04,880
0.4.1 right

00:16:01,040 --> 00:16:10,320
and then next you want to

00:16:04,880 --> 00:16:10,320
specify the dhcp information

00:16:12,639 --> 00:16:19,920
now in the previous

00:16:16,720 --> 00:16:21,680
section we specified what address with

00:16:19,920 --> 00:16:23,839
the static ip address which is

00:16:21,680 --> 00:16:25,120
going to be the listening address for

00:16:23,839 --> 00:16:28,639
the dhcp

00:16:25,120 --> 00:16:30,560
and then here you'll set up a range of

00:16:28,639 --> 00:16:33,600
ip addresses that can be assigned

00:16:30,560 --> 00:16:36,160
to clients that connect

00:16:33,600 --> 00:16:37,519
in my case i only have about 28

00:16:36,160 --> 00:16:40,800
addresses

00:16:37,519 --> 00:16:43,199
which means i can i can only

00:16:40,800 --> 00:16:50,880
connect 28 clients but you can go higher

00:16:43,199 --> 00:16:54,420
than that if you like

00:16:50,880 --> 00:16:56,000
all right so i will show you

00:16:54,420 --> 00:16:57,600
[Music]

00:16:56,000 --> 00:16:58,800
what this looks like when you've put

00:16:57,600 --> 00:17:00,800
everything together and you've

00:16:58,800 --> 00:17:03,920
configured everything

00:17:00,800 --> 00:17:06,000
now bear in mind that this i i went i

00:17:03,920 --> 00:17:09,280
glossed over a lot of the details here

00:17:06,000 --> 00:17:11,039
and i'll i'll add a link to a

00:17:09,280 --> 00:17:13,679
comprehensive blog post that

00:17:11,039 --> 00:17:15,039
details all the things you need to do to

00:17:13,679 --> 00:17:18,480
get this to work

00:17:15,039 --> 00:17:21,360
but now i'd like to show you how this

00:17:18,480 --> 00:17:22,959
all comes together so i have a raspberry

00:17:21,360 --> 00:17:25,280
pi here

00:17:22,959 --> 00:17:27,839
it's running it's on it's broadcasting a

00:17:25,280 --> 00:17:30,000
wi-fi network that i'm connected to

00:17:27,839 --> 00:17:31,039
and it has all the python packages that

00:17:30,000 --> 00:17:34,640
i need

00:17:31,039 --> 00:17:34,640
so what i'm going to do now is

00:17:35,360 --> 00:17:38,240
throw up a terminal

00:17:38,480 --> 00:17:42,640
i have a terminal here and i have

00:17:41,520 --> 00:17:45,600
already created

00:17:42,640 --> 00:17:46,400
a virtual environment so i'll connect to

00:17:45,600 --> 00:17:50,080
i'll

00:17:46,400 --> 00:17:50,080
activate this virtual environment

00:17:54,160 --> 00:17:58,480
all right so the virtual environment is

00:17:57,280 --> 00:18:00,559
active now

00:17:58,480 --> 00:18:02,320
and just to prove to you that it's a

00:18:00,559 --> 00:18:02,720
brand new virtual environment i'm going

00:18:02,320 --> 00:18:05,360
to run

00:18:02,720 --> 00:18:05,360
pip list

00:18:12,840 --> 00:18:17,440
right as you can see

00:18:15,840 --> 00:18:19,200
nothing installed there except for pip

00:18:17,440 --> 00:18:22,720
and setup tools

00:18:19,200 --> 00:18:22,720
okay so

00:18:22,960 --> 00:18:28,000
i have the raspberry pi running here and

00:18:25,840 --> 00:18:30,080
i'm connected to it

00:18:28,000 --> 00:18:31,200
it does not have internet access so i

00:18:30,080 --> 00:18:35,280
can't just do

00:18:31,200 --> 00:18:38,480
pip install requests

00:18:35,280 --> 00:18:41,120
or something like that so

00:18:38,480 --> 00:18:42,000
you remember i mentioned before that pip

00:18:41,120 --> 00:18:45,520
can install

00:18:42,000 --> 00:18:46,640
packages from third-party indexes or

00:18:45,520 --> 00:18:49,760
indexes that are not

00:18:46,640 --> 00:18:52,160
the python packaging index so

00:18:49,760 --> 00:18:52,960
if you want to do that you simply

00:18:52,160 --> 00:18:54,960
specify

00:18:52,960 --> 00:18:56,160
or let it know that you're installing

00:18:54,960 --> 00:18:59,520
from

00:18:56,160 --> 00:19:03,200
a non-default location

00:18:59,520 --> 00:19:06,720
so how you do that is by using a flag

00:19:03,200 --> 00:19:08,080
called trusted host

00:19:06,720 --> 00:19:10,160
so the first thing you want to do is

00:19:08,080 --> 00:19:13,919
tell it that you're installing from

00:19:10,160 --> 00:19:17,840
a host that it can trust in this case

00:19:13,919 --> 00:19:17,840
our host is cheeseshop

00:19:18,600 --> 00:19:25,520
cheeseshop.com right

00:19:22,160 --> 00:19:28,880
and then we want to install

00:19:25,520 --> 00:19:30,320
how do we have install here in store

00:19:28,880 --> 00:19:32,640
and then we let it know that we're

00:19:30,320 --> 00:19:37,120
installing from a third-party package

00:19:32,640 --> 00:19:42,120
index package index called http

00:19:37,120 --> 00:19:44,559
colon cheese

00:19:42,120 --> 00:19:46,320
shop.com

00:19:44,559 --> 00:19:49,520
okay and the name of the package you

00:19:46,320 --> 00:19:52,559
want to install in this case

00:19:49,520 --> 00:19:53,440
that's requests so i'll hit enter right

00:19:52,559 --> 00:19:56,240
now

00:19:53,440 --> 00:19:57,679
and what's going to happen is pip is

00:19:56,240 --> 00:20:01,039
going to go through

00:19:57,679 --> 00:20:02,000
the local package index search for

00:20:01,039 --> 00:20:04,640
requests

00:20:02,000 --> 00:20:07,840
and install it if it finds it okay let's

00:20:04,640 --> 00:20:07,840
give that a go

00:20:09,440 --> 00:20:14,240
so it's looking in cheese shop it's

00:20:11,919 --> 00:20:16,159
downloading the dependencies

00:20:14,240 --> 00:20:17,520
and it's installing them and then it's

00:20:16,159 --> 00:20:21,840
done

00:20:17,520 --> 00:20:21,840
so if we do a pip list now

00:20:22,960 --> 00:20:28,720
we find that request is installed

00:20:26,159 --> 00:20:29,919
okay so let's try something else a new

00:20:28,720 --> 00:20:33,039
package

00:20:29,919 --> 00:20:36,720
something bigger say jungle

00:20:33,039 --> 00:20:36,720
right go

00:20:39,120 --> 00:20:42,000
it's looking for it

00:20:44,080 --> 00:20:50,240
and it's installing it boom right

00:21:00,840 --> 00:21:06,320
okay so i'll try something else now

00:21:06,559 --> 00:21:10,559
let's try flask

00:21:11,600 --> 00:21:14,240
flask

00:21:15,440 --> 00:21:23,760
right and there you go

00:21:20,159 --> 00:21:27,200
so as you can see this is just as

00:21:23,760 --> 00:21:30,480
fast if not faster than using

00:21:27,200 --> 00:21:32,480
pipi the reason for this is the request

00:21:30,480 --> 00:21:34,240
doesn't go through the internet and back

00:21:32,480 --> 00:21:36,400
it's a local

00:21:34,240 --> 00:21:37,360
request and just goes to the raspberry

00:21:36,400 --> 00:21:42,240
pi

00:21:37,360 --> 00:21:46,240
and nginx serves up the file real quick

00:21:42,240 --> 00:21:50,480
and it it works just the same

00:21:46,240 --> 00:21:53,919
now if you're interested in

00:21:50,480 --> 00:21:55,679
learning more about how this works and

00:21:53,919 --> 00:21:58,960
how to put it together

00:21:55,679 --> 00:22:02,480
i have a a

00:21:58,960 --> 00:22:05,919
blog article on my website

00:22:02,480 --> 00:22:09,440
at wesley.com blog

00:22:05,919 --> 00:22:09,440
if you want a short link to it it's

00:22:10,799 --> 00:22:18,240
it's a bit dot l y slash pi

00:22:14,559 --> 00:22:20,400
p i underscore in underscore box

00:22:18,240 --> 00:22:22,320
visit that link it will redirect you to

00:22:20,400 --> 00:22:23,919
my website to the article on my website

00:22:22,320 --> 00:22:26,159
that details

00:22:23,919 --> 00:22:27,360
how to create your own raspberry pi

00:22:26,159 --> 00:22:30,159
server you'll

00:22:27,360 --> 00:22:31,840
find links to documentation

00:22:30,159 --> 00:22:34,640
configuration instructions

00:22:31,840 --> 00:22:37,360
and a few a few more things that i

00:22:34,640 --> 00:22:39,679
didn't cover in this talk

00:22:37,360 --> 00:22:41,039
at this point i'd be very happy to find

00:22:39,679 --> 00:22:55,840
out if you have any questions

00:22:41,039 --> 00:22:55,840
and answer any questions you may have

00:22:57,520 --> 00:22:59,600

YouTube URL: https://www.youtube.com/watch?v=sqMSyYgp6Fc


