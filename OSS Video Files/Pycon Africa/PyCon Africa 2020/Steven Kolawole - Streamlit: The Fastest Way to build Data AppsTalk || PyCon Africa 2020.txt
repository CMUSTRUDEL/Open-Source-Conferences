Title: Steven Kolawole - Streamlit: The Fastest Way to build Data AppsTalk || PyCon Africa 2020
Publication date: 2020-08-30
Playlist: PyCon Africa 2020
Description: 
	When we think about building python-based data science apps, we think Flask. But there is a better option now. Streamlit.

Streamlit is an open-source web framework that lets you create apps for your machine learning projects with deceptively simple Python scripts, in hours. It supports hot-reloading, so your app updates live as you edit and save your file. No need to mess with HTTP requests, HTML, JavaScript, etc. In a short sentence, there is no need to write any front-end code. All you need is your favorite editor and a browser.

In this talk, we'll go through how to build a very simple Streamlit app step-by-step. I will also review the pros and cons of Streamlit, as regards to other popular Python web frameworks being used by Data Scientists and ML Engineers.
Captions: 
	00:00:13,840 --> 00:00:17,440
okay

00:00:15,040 --> 00:00:18,640
hello everyone this is steve nicolauli

00:00:17,440 --> 00:00:22,080
from nigeria

00:00:18,640 --> 00:00:24,080
i'm live at 51 africa 2020

00:00:22,080 --> 00:00:25,920
and i'll be giving a talk on stream late

00:00:24,080 --> 00:00:30,400
the fastest way to build

00:00:25,920 --> 00:00:34,079
it up thank you all for coming on board

00:00:30,400 --> 00:00:36,559
so here is our table of contents

00:00:34,079 --> 00:00:37,600
um first of all we go to the problem

00:00:36,559 --> 00:00:40,239
statement

00:00:37,600 --> 00:00:41,440
what are the issues being faced by data

00:00:40,239 --> 00:00:44,160
scientists and

00:00:41,440 --> 00:00:45,360
machine learning engineers and creating

00:00:44,160 --> 00:00:47,600
web apps

00:00:45,360 --> 00:00:48,559
and then we move on to what stream it is

00:00:47,600 --> 00:00:50,719
all about

00:00:48,559 --> 00:00:51,680
we discuss the um essence of stream

00:00:50,719 --> 00:00:53,760
needs and

00:00:51,680 --> 00:00:55,440
how it connects with our problem

00:00:53,760 --> 00:00:58,879
statement and after

00:00:55,440 --> 00:01:01,760
what we will install streaming

00:00:58,879 --> 00:01:03,680
then i'll play with you with the demo

00:01:01,760 --> 00:01:04,400
and then we are going to build a data

00:01:03,680 --> 00:01:06,400
app

00:01:04,400 --> 00:01:08,560
um in that data app i'm going to show

00:01:06,400 --> 00:01:10,640
you the building blocks of building

00:01:08,560 --> 00:01:11,680
uh the building blocks of streaming and

00:01:10,640 --> 00:01:14,880
how you can spin

00:01:11,680 --> 00:01:17,439
up a a simple web back in

00:01:14,880 --> 00:01:18,479
in few minutes and then we'll be having

00:01:17,439 --> 00:01:21,119
a sneak peek

00:01:18,479 --> 00:01:22,000
on the different use cases of stream

00:01:21,119 --> 00:01:24,479
base

00:01:22,000 --> 00:01:26,240
and uh finally i'm going to discuss the

00:01:24,479 --> 00:01:28,560
cons of stream needs

00:01:26,240 --> 00:01:29,840
on why streamleads might not be the

00:01:28,560 --> 00:01:33,280
ultimate solution to

00:01:29,840 --> 00:01:34,400
every um web to every web issues out

00:01:33,280 --> 00:01:36,720
there

00:01:34,400 --> 00:01:41,840
okay um just before i move on i want to

00:01:36,720 --> 00:01:41,840
make a quick check on you guys

00:01:42,320 --> 00:01:48,000
okay we're on board so i will continue

00:01:46,079 --> 00:01:49,119
um just before it starts let's have a

00:01:48,000 --> 00:01:52,320
quick um look at

00:01:49,119 --> 00:01:53,439
my profile um i'm steven palaude as i

00:01:52,320 --> 00:01:55,920
said earlier

00:01:53,439 --> 00:01:57,600
and i'm a machine engineer looking for

00:01:55,920 --> 00:01:59,280
his next gig

00:01:57,600 --> 00:02:00,960
and uh i'm a competitive science

00:01:59,280 --> 00:02:02,719
undergrad named

00:02:00,960 --> 00:02:04,640
here at federal university of

00:02:02,719 --> 00:02:06,719
agriculture

00:02:04,640 --> 00:02:08,720
and i consider my skill set to be

00:02:06,719 --> 00:02:09,280
somewhere in the intersection between

00:02:08,720 --> 00:02:12,480
software

00:02:09,280 --> 00:02:15,840
engineering and data science and also

00:02:12,480 --> 00:02:18,319
i mean liverpool fans since i was a kid

00:02:15,840 --> 00:02:20,239
all right and now it's just a very nice

00:02:18,319 --> 00:02:23,760
time to be a developer

00:02:20,239 --> 00:02:26,640
and i use python um for most of my work

00:02:23,760 --> 00:02:28,640
um workflow all right and i use python

00:02:26,640 --> 00:02:29,680
for data science i use python for

00:02:28,640 --> 00:02:31,920
machine learning

00:02:29,680 --> 00:02:32,720
i use it for web development i'm quite

00:02:31,920 --> 00:02:35,760
fast with

00:02:32,720 --> 00:02:38,080
jungle and plus and of course

00:02:35,760 --> 00:02:39,040
um that last point of defending to talk

00:02:38,080 --> 00:02:42,800
about it for

00:02:39,040 --> 00:02:45,519
obvious business okay so

00:02:42,800 --> 00:02:46,160
here's our problem statement uh if you

00:02:45,519 --> 00:02:49,120
build a

00:02:46,160 --> 00:02:51,360
data driven web app before then you will

00:02:49,120 --> 00:02:53,360
probably be familiar with this process

00:02:51,360 --> 00:02:55,440
all right and then the first process is

00:02:53,360 --> 00:02:58,080
especially um exploratory

00:02:55,440 --> 00:02:59,120
data analysis being carried out in in

00:02:58,080 --> 00:03:02,080
notebooks

00:02:59,120 --> 00:03:04,080
right and uh we analyze the data we

00:03:02,080 --> 00:03:07,040
explore the data and

00:03:04,080 --> 00:03:08,959
we derive useful insights on all and

00:03:07,040 --> 00:03:11,280
this data are these notebooks are

00:03:08,959 --> 00:03:13,440
initially very very messy

00:03:11,280 --> 00:03:15,280
so if you want to share your findings

00:03:13,440 --> 00:03:17,120
with friends and colleagues

00:03:15,280 --> 00:03:18,560
then you probably copy and paste the

00:03:17,120 --> 00:03:21,599
relevant functions

00:03:18,560 --> 00:03:24,720
um in the in the file script all right

00:03:21,599 --> 00:03:27,519
and then you probably post it on github

00:03:24,720 --> 00:03:27,920
you know so others can have access to it

00:03:27,519 --> 00:03:30,560
and

00:03:27,920 --> 00:03:33,120
then maybe you've well you'll be working

00:03:30,560 --> 00:03:36,319
on a let's say recommendation engine

00:03:33,120 --> 00:03:39,360
that could i don't know any predicts um

00:03:36,319 --> 00:03:40,640
we dig on the the the best kind of

00:03:39,360 --> 00:03:43,280
clothes um

00:03:40,640 --> 00:03:44,560
here on a particular day or or that can

00:03:43,280 --> 00:03:47,200
recommend the closest

00:03:44,560 --> 00:03:48,560
or the best restaurants closest to your

00:03:47,200 --> 00:03:50,239
particular location so

00:03:48,560 --> 00:03:52,080
you probably want your friends and

00:03:50,239 --> 00:03:53,680
family members to make use of it

00:03:52,080 --> 00:03:56,000
and if you're doing that you'll be

00:03:53,680 --> 00:03:57,840
creating an app all right and if you're

00:03:56,000 --> 00:03:58,799
putting an app you'll probably be using

00:03:57,840 --> 00:04:00,799
shark stories

00:03:58,799 --> 00:04:02,799
and if you are using flash that means

00:04:00,799 --> 00:04:05,920
you'll be making use of html

00:04:02,799 --> 00:04:06,640
css javascript and json at the very

00:04:05,920 --> 00:04:08,640
least

00:04:06,640 --> 00:04:10,640
but if you're actually building this

00:04:08,640 --> 00:04:13,439
data driven web app as part of

00:04:10,640 --> 00:04:14,000
an organ as part of an organization

00:04:13,439 --> 00:04:16,400
project

00:04:14,000 --> 00:04:17,519
right and you're in a fairly large

00:04:16,400 --> 00:04:19,600
organization

00:04:17,519 --> 00:04:22,160
so that means your organization will

00:04:19,600 --> 00:04:25,040
probably have a dedicated software

00:04:22,160 --> 00:04:26,720
infrastructure team and then that means

00:04:25,040 --> 00:04:27,600
that you won't have to build that up

00:04:26,720 --> 00:04:29,360
yourself

00:04:27,600 --> 00:04:30,880
so all you're going to do is to outline

00:04:29,360 --> 00:04:31,840
the requirements to the software

00:04:30,880 --> 00:04:33,919
engineering team

00:04:31,840 --> 00:04:36,160
and they will carry out the uis

00:04:33,919 --> 00:04:37,120
designing and let's say in the most time

00:04:36,160 --> 00:04:40,400
you're going to have

00:04:37,120 --> 00:04:42,639
a beautiful um app on your hands

00:04:40,400 --> 00:04:43,840
and the software engineering team will

00:04:42,639 --> 00:04:46,400
probably tell you

00:04:43,840 --> 00:04:47,040
hey hey boss man you know um we have a

00:04:46,400 --> 00:04:48,800
lot of

00:04:47,040 --> 00:04:51,199
apps where we are pointing maintaining

00:04:48,800 --> 00:04:51,840
so we only be able to carry updates on

00:04:51,199 --> 00:04:54,639
your app

00:04:51,840 --> 00:04:55,680
once in every three months so that's the

00:04:54,639 --> 00:04:58,800
process

00:04:55,680 --> 00:05:00,479
and that leads us to our pinpoint number

00:04:58,800 --> 00:05:01,919
one pinpoint is that we depend on the

00:05:00,479 --> 00:05:04,720
software engineering team

00:05:01,919 --> 00:05:05,360
and this usually takes up a bunch of our

00:05:04,720 --> 00:05:09,520
time

00:05:05,360 --> 00:05:12,800
i mean uh we will keep um we

00:05:09,520 --> 00:05:13,680
we have to um uh iron out communication

00:05:12,800 --> 00:05:15,520
issues you know

00:05:13,680 --> 00:05:16,880
we have to clear up misunderstandings

00:05:15,520 --> 00:05:19,600
and make sure that they get

00:05:16,880 --> 00:05:21,039
what we are trying to build and also we

00:05:19,600 --> 00:05:24,160
can't just create new features

00:05:21,039 --> 00:05:25,520
and updates on the web i mean we have to

00:05:24,160 --> 00:05:27,919
follow a protocol

00:05:25,520 --> 00:05:29,120
i can't just wake up on a money and say

00:05:27,919 --> 00:05:32,160
hey i i want

00:05:29,120 --> 00:05:34,160
the sidebars to be um to be designed

00:05:32,160 --> 00:05:35,840
differently you know it's not going to

00:05:34,160 --> 00:05:38,880
work it's not going to be

00:05:35,840 --> 00:05:39,919
fixed visibly and and then uh we

00:05:38,880 --> 00:05:42,639
actually create those

00:05:39,919 --> 00:05:43,440
apps ourselves number one is that most

00:05:42,639 --> 00:05:45,919
of us

00:05:43,440 --> 00:05:46,560
um data scientists and ml engineers we

00:05:45,919 --> 00:05:48,960
suck at

00:05:46,560 --> 00:05:50,960
ui designs if you're like me i don't

00:05:48,960 --> 00:05:52,320
even recognize the blue color from the

00:05:50,960 --> 00:05:54,960
color

00:05:52,320 --> 00:05:55,600
and secondly creating a web app usually

00:05:54,960 --> 00:05:58,800
consume

00:05:55,600 --> 00:06:00,800
a huge amount of time i mean

00:05:58,800 --> 00:06:02,639
you're probably going to spend weeks or

00:06:00,800 --> 00:06:04,639
maybe months learning flask

00:06:02,639 --> 00:06:06,319
and if you're learning flags you have to

00:06:04,639 --> 00:06:09,360
learn javascript

00:06:06,319 --> 00:06:11,680
you have to learn html css json and

00:06:09,360 --> 00:06:13,120
you have to understand how http request

00:06:11,680 --> 00:06:16,160
works and other stuff

00:06:13,120 --> 00:06:18,720
also and this usually takes a

00:06:16,160 --> 00:06:19,840
large amount of time and finally we

00:06:18,720 --> 00:06:22,080
prefer to use

00:06:19,840 --> 00:06:24,720
our codes to generate insight for build

00:06:22,080 --> 00:06:25,440
model and using our codes to provide our

00:06:24,720 --> 00:06:29,199
user with

00:06:25,440 --> 00:06:32,479
a pleasant experience having said this

00:06:29,199 --> 00:06:33,759
this leads us to our our million dollar

00:06:32,479 --> 00:06:36,720
question

00:06:33,759 --> 00:06:38,400
so what if we could build apps as easily

00:06:36,720 --> 00:06:40,960
as writing python script

00:06:38,400 --> 00:06:43,680
we could really change the world right

00:06:40,960 --> 00:06:47,120
and that leads us to screen leads

00:06:43,680 --> 00:06:48,160
so what is streamlist streamleads is the

00:06:47,120 --> 00:06:51,039
game changer that

00:06:48,160 --> 00:06:52,479
data scientists have been waiting for um

00:06:51,039 --> 00:06:55,440
streamlight is all about building

00:06:52,479 --> 00:06:58,080
apps as easily as writing python scripts

00:06:55,440 --> 00:07:00,400
so you can have your app on stream leads

00:06:58,080 --> 00:07:01,120
or you grab your app and name it i don't

00:07:00,400 --> 00:07:04,560
know maybe

00:07:01,120 --> 00:07:06,880
my file dot pi all right and uh in that

00:07:04,560 --> 00:07:07,680
in that's your in in that your python

00:07:06,880 --> 00:07:09,840
script

00:07:07,680 --> 00:07:10,960
you just have to um write out your

00:07:09,840 --> 00:07:14,160
functions you know

00:07:10,960 --> 00:07:16,960
and then sprinkle in a few api awesome

00:07:14,160 --> 00:07:17,919
and then you want to emulate um on my

00:07:16,960 --> 00:07:20,400
5.5

00:07:17,919 --> 00:07:21,680
in your in your command line or terminal

00:07:20,400 --> 00:07:24,319
if you are using linux

00:07:21,680 --> 00:07:26,319
all right and you go off to your web

00:07:24,319 --> 00:07:30,400
browser and you are going to have your

00:07:26,319 --> 00:07:32,319
um web app for you sounds too easy right

00:07:30,400 --> 00:07:35,120
and that's not only that stream two

00:07:32,319 --> 00:07:36,240
liters of covers most uis being used in

00:07:35,120 --> 00:07:39,840
data house

00:07:36,240 --> 00:07:41,599
um um if you beauty

00:07:39,840 --> 00:07:44,319
uh if you are familiar with the web

00:07:41,599 --> 00:07:46,080
approaches there usually tons of you

00:07:44,319 --> 00:07:49,199
know you know being made use of to make

00:07:46,080 --> 00:07:51,840
it um to make to make this um quite

00:07:49,199 --> 00:07:54,080
aesthetically to the point and then i'm

00:07:51,840 --> 00:07:56,800
talking about you having a sidebar

00:07:54,080 --> 00:07:57,680
you um you are finding your type so you

00:07:56,800 --> 00:08:02,560
know

00:07:57,680 --> 00:08:04,879
you adding colors you um adding it

00:08:02,560 --> 00:08:06,400
to do this in flats they do take up lots

00:08:04,879 --> 00:08:08,560
of hours to implement

00:08:06,400 --> 00:08:10,160
but if you are using upstream leads you

00:08:08,560 --> 00:08:13,199
could do this in minutes

00:08:10,160 --> 00:08:16,240
in fact you could do this in few seconds

00:08:13,199 --> 00:08:17,360
all right and uh and that's quite

00:08:16,240 --> 00:08:19,680
amazing you know

00:08:17,360 --> 00:08:21,840
and finally stream it supports our

00:08:19,680 --> 00:08:26,080
favorite visualization libraries

00:08:21,840 --> 00:08:26,080
now i'm talking aboutly plotting

00:08:26,639 --> 00:08:31,360
and others extremely supports every

00:08:28,879 --> 00:08:34,159
single one of them

00:08:31,360 --> 00:08:35,680
uh and also students support our machine

00:08:34,159 --> 00:08:37,360
learnings like our machine learning and

00:08:35,680 --> 00:08:38,959
dp science libraries

00:08:37,360 --> 00:08:40,800
all right and uh that means you don't

00:08:38,959 --> 00:08:44,320
get to leave your pandas numpy

00:08:40,800 --> 00:08:46,000
your tensorflow your pi touch behind

00:08:44,320 --> 00:08:47,760
okay so let's move on to the

00:08:46,000 --> 00:08:49,600
installation process

00:08:47,760 --> 00:08:52,080
so to install stream leads all you have

00:08:49,600 --> 00:08:54,000
to do is click install stream links

00:08:52,080 --> 00:08:55,760
and then you move on to your okay you

00:08:54,000 --> 00:08:58,160
between this in your command line

00:08:55,760 --> 00:08:58,800
all right so you keep install streaming

00:08:58,160 --> 00:09:02,000
and then

00:08:58,800 --> 00:09:04,000
you run stream with yellow just spin off

00:09:02,000 --> 00:09:06,000
the deck to spin up the demo

00:09:04,000 --> 00:09:08,880
so i'll be doing that right now all

00:09:06,000 --> 00:09:12,000
right so i'm going to go over to my

00:09:08,880 --> 00:09:12,800
um command line okay i have it right

00:09:12,000 --> 00:09:15,760
here

00:09:12,800 --> 00:09:18,240
okay um so i've already installed stream

00:09:15,760 --> 00:09:23,839
date so i'm going to go stream it

00:09:18,240 --> 00:09:23,839
um stream it hello right now okay

00:09:24,080 --> 00:09:28,560
so i'm running this and i'm going to go

00:09:27,600 --> 00:09:33,279
over to my

00:09:28,560 --> 00:09:33,279
browser to see the results

00:09:33,760 --> 00:09:40,080
okay just keep coming off um let me do

00:09:38,399 --> 00:09:41,680
uh you're going to do this right now

00:09:40,080 --> 00:09:45,279
this is a tough

00:09:41,680 --> 00:09:47,200
tutorial all right uh i've included

00:09:45,279 --> 00:09:48,480
a link to my default you know yeah you

00:09:47,200 --> 00:09:50,880
can access links

00:09:48,480 --> 00:09:50,880
to my

00:10:01,120 --> 00:10:05,839
stick formula

00:10:16,839 --> 00:10:19,839
okay

00:10:21,760 --> 00:10:24,640
let's just hang on

00:10:27,120 --> 00:10:34,200
okay okay so we added welcome to

00:10:31,440 --> 00:10:36,320
um here you can check out um

00:10:34,200 --> 00:10:38,480
streamlight.isa you could jump into the

00:10:36,320 --> 00:10:39,760
documentation you could ask a question

00:10:38,480 --> 00:10:43,760
in the community forum

00:10:39,760 --> 00:10:45,680
and some more complex

00:10:43,760 --> 00:10:46,880
but for now we'll be trying out the very

00:10:45,680 --> 00:10:49,200
simple damage

00:10:46,880 --> 00:10:50,320
so i'm going to come to this side and i

00:10:49,200 --> 00:10:52,800
click on this

00:10:50,320 --> 00:10:53,920
i'm going to choose the plotting damage

00:10:52,800 --> 00:10:56,800
you can try out any

00:10:53,920 --> 00:10:56,800
one of these demos

00:10:57,360 --> 00:11:04,720
so it's coming up

00:11:00,640 --> 00:11:04,720
so we can see that on this um

00:11:07,839 --> 00:11:10,959
okay it's coming up

00:11:13,040 --> 00:11:18,160
okay so we have our floating demo

00:11:15,600 --> 00:11:22,000
there's an animation of

00:11:18,160 --> 00:11:22,000
the line charts all right

00:11:22,079 --> 00:11:26,640
so i think this is quite beautiful you

00:11:26,839 --> 00:11:31,360
know

00:11:28,240 --> 00:11:31,760
and he's still loading up he's going to

00:11:31,360 --> 00:11:43,839
one

00:11:31,760 --> 00:11:43,839
output unit that is turning this is

00:11:51,760 --> 00:12:01,279
i'm going to scroll down our code

00:11:57,279 --> 00:12:01,279
okay so now we have this

00:12:03,200 --> 00:12:07,920
okay so have a look at this code guy

00:12:05,279 --> 00:12:08,560
here i mean this code is less than 20

00:12:07,920 --> 00:12:12,480
lines of

00:12:08,560 --> 00:12:15,760
code with this code we have been

00:12:12,480 --> 00:12:19,760
a beauty though it's pretty busy because

00:12:15,760 --> 00:12:22,800
we have a simple or we have a simple

00:12:19,760 --> 00:12:26,800
um line chart app all right

00:12:22,800 --> 00:12:29,920
in a very um in very few lines of code

00:12:26,800 --> 00:12:32,560
okay so that's it so

00:12:29,920 --> 00:12:32,560
let's move on

00:12:36,480 --> 00:12:42,240
okay so um let's do the data

00:12:40,399 --> 00:12:44,240
set all right so right now i'm going to

00:12:42,240 --> 00:12:47,600
walk you through the process of video

00:12:44,240 --> 00:12:50,959
um so

00:12:47,600 --> 00:12:54,800
um what we're going to do is um

00:12:50,959 --> 00:12:57,839
we have one um somewhere here

00:12:54,800 --> 00:12:59,200
and um the yellow.5 controller contain

00:12:57,839 --> 00:13:02,320
these two lines of code

00:12:59,200 --> 00:13:02,720
impossible that's hd and then st dot

00:13:02,320 --> 00:13:05,519
height

00:13:02,720 --> 00:13:07,440
hello so we go over to our command line

00:13:05,519 --> 00:13:09,839
and on this particular

00:13:07,440 --> 00:13:11,440
screen waiting on earlier file and it's

00:13:09,839 --> 00:13:14,480
going to spin this up

00:13:11,440 --> 00:13:19,279
in our browser hello world

00:13:14,480 --> 00:13:21,360
okay so um here's the code right

00:13:19,279 --> 00:13:22,399
okay here i'm not going to want it it's

00:13:21,360 --> 00:13:26,000
pretty basic

00:13:22,399 --> 00:13:27,040
so i'm going to show you a fairly

00:13:26,000 --> 00:13:29,519
complex example

00:13:27,040 --> 00:13:31,360
all right so i'm not going to own this

00:13:29,519 --> 00:13:34,480
but if you want to run this

00:13:31,360 --> 00:13:34,480
there's a link to this

00:13:47,279 --> 00:13:51,920
the fight and actually um i actually

00:13:50,480 --> 00:13:53,519
wrote this code you know for

00:13:51,920 --> 00:13:55,440
one of my sisters one of my younger

00:13:53,519 --> 00:13:58,320
sisters

00:13:55,440 --> 00:13:59,600
was learning um presenting distribution

00:13:58,320 --> 00:14:02,639
reason too so

00:13:59,600 --> 00:14:04,560
i thought that is it is going to be a

00:14:02,639 --> 00:14:04,880
nice idea if she could actually you know

00:14:04,560 --> 00:14:07,440
see

00:14:04,880 --> 00:14:09,199
what she was trying to read as well live

00:14:07,440 --> 00:14:10,959
on the webinar i think he's going to i

00:14:09,199 --> 00:14:13,680
thought she's going to make this

00:14:10,959 --> 00:14:14,480
uh make her learning you know some

00:14:13,680 --> 00:14:16,800
somewhat

00:14:14,480 --> 00:14:19,040
more fun than asia so that was the

00:14:16,800 --> 00:14:21,440
inspiration behind the iphone base

00:14:19,040 --> 00:14:22,240
so let's have a look at this important

00:14:21,440 --> 00:14:25,360
thing later

00:14:22,240 --> 00:14:27,360
st is the first line and the second line

00:14:25,360 --> 00:14:30,320
we are importing numpy and

00:14:27,360 --> 00:14:31,519
the next line we have um this st type 2

00:14:30,320 --> 00:14:34,240
distribution tester

00:14:31,519 --> 00:14:36,000
i think this is pretty straightforward

00:14:34,240 --> 00:14:38,959
that means that we are going to have a

00:14:36,000 --> 00:14:42,880
big title with the distribution tester

00:14:38,959 --> 00:14:42,880
okay and uh the next line is

00:14:43,519 --> 00:14:47,199
pick um distribution from the list and

00:14:45,040 --> 00:14:51,279
we shall draw the line chart from

00:14:47,199 --> 00:14:51,279
a random sample from the solution

00:14:52,639 --> 00:15:00,399
okay so for a random sample

00:14:55,839 --> 00:15:02,639
okay and uh so having done this um

00:15:00,399 --> 00:15:04,160
i have i have another variable right

00:15:02,639 --> 00:15:07,760
here which is case

00:15:04,160 --> 00:15:10,720
and is an array saving from two strings

00:15:07,760 --> 00:15:11,040
normal and uniform so i have another key

00:15:10,720 --> 00:15:12,720
i

00:15:11,040 --> 00:15:14,639
have another distribution right here

00:15:12,720 --> 00:15:16,720
this key and

00:15:14,639 --> 00:15:17,839
um right here there is there is a

00:15:16,720 --> 00:15:18,639
function there there is too many

00:15:17,839 --> 00:15:21,680
functions

00:15:18,639 --> 00:15:22,160
written inside sd dot select box and i'm

00:15:21,680 --> 00:15:25,120
passing

00:15:22,160 --> 00:15:26,639
in my key figure was an argument all

00:15:25,120 --> 00:15:28,959
right so

00:15:26,639 --> 00:15:29,839
and uh the next some line of logic says

00:15:28,959 --> 00:15:32,079
that if this

00:15:29,839 --> 00:15:33,120
is normal so i'm going to have a new

00:15:32,079 --> 00:15:36,399
variable called

00:15:33,120 --> 00:15:39,279
norms and then it's going to be um

00:15:36,399 --> 00:15:41,759
it's going to be a single randomly

00:15:39,279 --> 00:15:45,360
generated number within the range of

00:15:41,759 --> 00:15:48,000
0 to 1000 but if this key

00:15:45,360 --> 00:15:49,040
if the disk is selected is uniform i'm

00:15:48,000 --> 00:15:52,560
going to

00:15:49,040 --> 00:15:55,279
have um norms available

00:15:52,560 --> 00:15:56,240
that is containing an array in the range

00:15:55,279 --> 00:15:58,639
of 1000

00:15:56,240 --> 00:15:59,440
all right so i'm going to have an array

00:15:58,639 --> 00:16:02,720
of

00:15:59,440 --> 00:16:06,839
1000 underneath numbers

00:16:02,720 --> 00:16:09,279
finally um um

00:16:06,839 --> 00:16:12,880
i'm plotting a line shot

00:16:09,279 --> 00:16:16,240
into the friendship uh as

00:16:12,880 --> 00:16:18,560
as um it's not as fast as argument

00:16:16,240 --> 00:16:19,279
so i'm going to go back to my terminal

00:16:18,560 --> 00:16:22,880
and then

00:16:19,279 --> 00:16:26,320
i'm going to run it on distilled

00:16:22,880 --> 00:16:28,800
time so okay

00:16:26,320 --> 00:16:31,600
so i'm going to go back to my browser to

00:16:28,800 --> 00:16:31,600
see the results

00:16:34,560 --> 00:16:38,320
okay i'm going to refresh this

00:16:42,240 --> 00:16:47,279
stay coming up okay for this i might

00:16:45,600 --> 00:16:50,959
just be changing

00:16:47,279 --> 00:16:54,240
all my folks right here uh have been

00:16:50,959 --> 00:16:55,440
again i already posted the link in the

00:16:54,240 --> 00:16:58,320
comment section

00:16:55,440 --> 00:16:59,040
and the people have to contain the link

00:16:58,320 --> 00:17:02,000
to

00:16:59,040 --> 00:17:02,720
all my slides or website i'll be making

00:17:02,000 --> 00:17:05,839
reference to

00:17:02,720 --> 00:17:06,400
try it and also it contains um the files

00:17:05,839 --> 00:17:09,839
that i'm

00:17:06,400 --> 00:17:19,839
working with okay

00:17:09,839 --> 00:17:19,839
so still coming up

00:17:45,120 --> 00:17:49,919
select calls and normal was picked by

00:17:48,320 --> 00:17:52,559
default

00:17:49,919 --> 00:17:52,960
okay now we have our line chart all

00:17:52,559 --> 00:17:55,760
right

00:17:52,960 --> 00:17:56,880
and uh beauty right so right here i'm

00:17:55,760 --> 00:18:01,440
going to click here

00:17:56,880 --> 00:18:05,039
and i'm going to change this uniform

00:18:01,440 --> 00:18:14,720
so what we have it

00:18:05,039 --> 00:18:17,039
seems like our line chart is changing

00:18:14,720 --> 00:18:18,080
oh now and now we are with different

00:18:17,039 --> 00:18:20,720
line chats

00:18:18,080 --> 00:18:21,679
all right and it's quite amazing that um

00:18:20,720 --> 00:18:24,960
i wrote this

00:18:21,679 --> 00:18:29,039
on less than i think 10 lines of code

00:18:24,960 --> 00:18:29,039
we are the quite beautiful

00:18:40,559 --> 00:18:44,000
all right i'll save the charts you know

00:18:43,120 --> 00:18:47,280
the picture

00:18:44,000 --> 00:18:50,000
and also i can record let me see

00:18:47,280 --> 00:18:50,559
if you recall this the screencast all

00:18:50,000 --> 00:18:54,160
right

00:18:50,559 --> 00:18:57,120
i'll make sure you got my on my favorite

00:18:54,160 --> 00:18:57,120
i want to give the rights

00:18:57,280 --> 00:19:01,520
okay so that's it about that so let's

00:19:00,480 --> 00:19:04,400
move on

00:19:01,520 --> 00:19:05,840
and uh since we are done with that level

00:19:04,400 --> 00:19:09,039
let's have a sneak peek at

00:19:05,840 --> 00:19:10,640
the different use cases so the first one

00:19:09,039 --> 00:19:14,000
is this

00:19:10,640 --> 00:19:16,080
this was created by the um

00:19:14,000 --> 00:19:18,640
the streaming team he said it's less

00:19:16,080 --> 00:19:21,360
superpower performed a semantic search

00:19:18,640 --> 00:19:22,559
across the entire udacity driving car

00:19:21,360 --> 00:19:24,880
for the data sets

00:19:22,559 --> 00:19:26,000
and it runs a complete neural network

00:19:24,880 --> 00:19:28,640
and wait time for moving

00:19:26,000 --> 00:19:29,440
up in less than 300 lines of code tell

00:19:28,640 --> 00:19:31,600
me that this

00:19:29,440 --> 00:19:33,919
is not amazing let's go over to the

00:19:31,600 --> 00:19:35,120
github page so you can try this out on

00:19:33,919 --> 00:19:39,840
your own

00:19:35,120 --> 00:19:39,840
let me stop this okay

00:19:40,480 --> 00:19:42,799
okay

00:19:44,080 --> 00:19:47,280
so here's the site as you can see here's

00:19:46,240 --> 00:19:49,760
the github

00:19:47,280 --> 00:19:51,520
page see this was designed by this

00:19:49,760 --> 00:19:53,520
planet team he said

00:19:51,520 --> 00:19:54,559
right here is a streamlined founder you

00:19:53,520 --> 00:19:56,480
know

00:19:54,559 --> 00:19:58,799
he also need the comments too and in

00:19:56,480 --> 00:20:02,880
case you want to try it out on your own

00:19:58,799 --> 00:20:05,600
um um here are some

00:20:02,880 --> 00:20:06,080
guides you know tip on how to install

00:20:05,600 --> 00:20:07,679
this

00:20:06,080 --> 00:20:09,679
all you have to do is click install

00:20:07,679 --> 00:20:12,880
stream it and open cd

00:20:09,679 --> 00:20:14,960
icon and then you stream it on this ah

00:20:12,880 --> 00:20:15,930
if you notice this is uh

00:20:14,960 --> 00:20:18,159
this is a

00:20:15,930 --> 00:20:20,480
[Music]

00:20:18,159 --> 00:20:22,240
right here is this is not a local file

00:20:20,480 --> 00:20:23,520
all right you are running a file

00:20:22,240 --> 00:20:25,679
straight from um

00:20:23,520 --> 00:20:27,679
you are passing a url and running a file

00:20:25,679 --> 00:20:29,679
straight from

00:20:27,679 --> 00:20:31,039
straight from github and i feel that's

00:20:29,679 --> 00:20:33,679
pretty cool right

00:20:31,039 --> 00:20:36,159
so let's have a look at the second um

00:20:33,679 --> 00:20:36,159
instant

00:20:37,440 --> 00:20:43,280
second use case this was designed by a

00:20:40,640 --> 00:20:46,480
friend of mine

00:20:43,280 --> 00:20:48,880
he is basically a predictive

00:20:46,480 --> 00:20:50,159
apples and i was going to prison up and

00:20:48,880 --> 00:20:52,799
it was beautiful

00:20:50,159 --> 00:20:54,240
major cities in the ago state so if you

00:20:52,799 --> 00:20:57,360
want to live in lagos

00:20:54,240 --> 00:21:00,240
all right if you just come over here and

00:20:57,360 --> 00:21:02,240
and then you know input the pictures of

00:21:00,240 --> 00:21:04,720
the house that you want to live in

00:21:02,240 --> 00:21:06,799
all right so as you can see there are a

00:21:04,720 --> 00:21:09,360
lot of stuff that you could

00:21:06,799 --> 00:21:10,159
you'd want to you know make use of here

00:21:09,360 --> 00:21:11,520
so

00:21:10,159 --> 00:21:13,440
you can see there's a lot of options

00:21:11,520 --> 00:21:15,200
right here so you could

00:21:13,440 --> 00:21:16,559
change the locations there are different

00:21:15,200 --> 00:21:19,600
locations right here

00:21:16,559 --> 00:21:22,000
all right and you could change the

00:21:19,600 --> 00:21:23,360
type of um the income range you could

00:21:22,000 --> 00:21:26,480
choose a low income

00:21:23,360 --> 00:21:28,320
or middle range or an expensive figure

00:21:26,480 --> 00:21:30,159
the expensive layers all right

00:21:28,320 --> 00:21:31,520
and then once you're done with that all

00:21:30,159 --> 00:21:34,880
you have to do is to

00:21:31,520 --> 00:21:37,120
um evaluate all right once you

00:21:34,880 --> 00:21:38,000
quest evaluate is going to um it's going

00:21:37,120 --> 00:21:41,520
to

00:21:38,000 --> 00:21:42,640
bring up um an estimated price of that

00:21:41,520 --> 00:21:45,360
kind of house

00:21:42,640 --> 00:21:46,080
and i think that's actually great right

00:21:45,360 --> 00:21:48,720
it's quite

00:21:46,080 --> 00:21:59,840
nice to me alright and let me just try

00:21:48,720 --> 00:21:59,840
it out right here

00:22:09,840 --> 00:22:15,360
okay so um so we have requests we have

00:22:13,120 --> 00:22:18,400
an estimated price right here

00:22:15,360 --> 00:22:19,840
all right and then we're going to

00:22:18,400 --> 00:22:21,840
you're probably going to get that kind

00:22:19,840 --> 00:22:25,440
of apartment

00:22:21,840 --> 00:22:28,000
for about 1 million 1 million all right

00:22:25,440 --> 00:22:29,039
okay so let's bomb again so here are the

00:22:28,000 --> 00:22:30,799
kinds of stream needs

00:22:29,039 --> 00:22:32,080
there's the convenience flexibility

00:22:30,799 --> 00:22:34,880
trade-off all right

00:22:32,080 --> 00:22:36,240
so it is actually the one one one of the

00:22:34,880 --> 00:22:39,280
biggest trends of streaming

00:22:36,240 --> 00:22:41,840
and also is this achilles e all right

00:22:39,280 --> 00:22:44,080
so there's um the idea is that i'm

00:22:41,840 --> 00:22:47,840
streaming it abstract out most of the

00:22:44,080 --> 00:22:49,600
most of the uh the

00:22:47,840 --> 00:22:51,200
ui designs that you get to me but that

00:22:49,600 --> 00:22:52,080
also means that you won't be able to

00:22:51,200 --> 00:22:54,640
place two charts

00:22:52,080 --> 00:22:56,159
side by side and streamed it and also

00:22:54,640 --> 00:22:58,640
there's a car up on the

00:22:56,159 --> 00:23:00,960
on the size of data inputs that you can

00:22:58,640 --> 00:23:01,600
you can upload and it's 50 megabytes of

00:23:00,960 --> 00:23:03,520
data

00:23:01,600 --> 00:23:05,440
and also there's limited support for

00:23:03,520 --> 00:23:07,039
videos and animation

00:23:05,440 --> 00:23:09,280
that means that you can build an app

00:23:07,039 --> 00:23:10,799
with functionalities like user interface

00:23:09,280 --> 00:23:13,039
uh user authentication

00:23:10,799 --> 00:23:14,240
instead of subscription you have to use

00:23:13,039 --> 00:23:17,600
the interaction

00:23:14,240 --> 00:23:18,240
all right and uh and then having said

00:23:17,600 --> 00:23:20,720
that

00:23:18,240 --> 00:23:22,640
nevertheless streamleax is simply not

00:23:20,720 --> 00:23:23,840
used for every python programming and if

00:23:22,640 --> 00:23:26,240
i data scientist

00:23:23,840 --> 00:23:27,520
i want to spin up interactive data

00:23:26,240 --> 00:23:30,720
upgrade with this

00:23:27,520 --> 00:23:32,960
is a guide for that uh but if you want

00:23:30,720 --> 00:23:36,400
something more complex than a simple

00:23:32,960 --> 00:23:38,480
or a single page web app and stream it

00:23:36,400 --> 00:23:39,919
is not going to be your guide all right

00:23:38,480 --> 00:23:41,039
maybe you want an upgrade

00:23:39,919 --> 00:23:44,000
functionalities like

00:23:41,039 --> 00:23:45,919
a chat box or a chat room you know then

00:23:44,000 --> 00:23:46,880
probably you should try out flask or

00:23:45,919 --> 00:23:50,720
jungle

00:23:46,880 --> 00:23:54,159
but finally let's have a look at the um

00:23:50,720 --> 00:23:56,080
at the stack uh are the the ascent of

00:23:54,159 --> 00:23:58,480
flux developers compared to extremely

00:23:56,080 --> 00:24:00,080
developer so if your effects developer

00:23:58,480 --> 00:24:02,240
you can make use of flash

00:24:00,080 --> 00:24:04,159
and then at the very least javascript

00:24:02,240 --> 00:24:06,080
html css and json

00:24:04,159 --> 00:24:07,760
you take if you want to take things off

00:24:06,080 --> 00:24:09,039
a notch right you'll be making use of

00:24:07,760 --> 00:24:12,720
angularjs

00:24:09,039 --> 00:24:15,600
or maybe even react you know and then

00:24:12,720 --> 00:24:17,200
maybe even bootstrap all right but if

00:24:15,600 --> 00:24:18,080
you are still the developer all you have

00:24:17,200 --> 00:24:20,400
to make yourself is

00:24:18,080 --> 00:24:21,679
families and let's say you want to

00:24:20,400 --> 00:24:24,640
containerize your app

00:24:21,679 --> 00:24:25,200
then you would make use of docker all

00:24:24,640 --> 00:24:26,640
right so

00:24:25,200 --> 00:24:28,080
that means that all you're ever going to

00:24:26,640 --> 00:24:30,080
need has extremely developed by

00:24:28,080 --> 00:24:33,520
streamlight on top

00:24:30,080 --> 00:24:34,640
so having said that we're done so thank

00:24:33,520 --> 00:24:37,279
you so much for

00:24:34,640 --> 00:24:38,240
taking your time to listen to my talk um

00:24:37,279 --> 00:24:40,240
no no

00:24:38,240 --> 00:24:41,279
i can't see that question right now um

00:24:40,240 --> 00:24:43,679
from belinda

00:24:41,279 --> 00:24:45,360
do you think streamlax will replace flux

00:24:43,679 --> 00:24:47,679
no stream needs cannot

00:24:45,360 --> 00:24:49,120
replace flask all right a lot of stones

00:24:47,679 --> 00:24:50,640
as i explained earlier

00:24:49,120 --> 00:24:52,640
there are a lot there are tons of stuff

00:24:50,640 --> 00:24:54,799
that you could do with streaming it

00:24:52,640 --> 00:24:56,400
uh you could do with flags but you can

00:24:54,799 --> 00:24:58,480
do restraint leads all right

00:24:56,400 --> 00:25:00,159
for example you could as i said earlier

00:24:58,480 --> 00:25:00,960
you could take you could make custom

00:25:00,159 --> 00:25:03,520
designs

00:25:00,960 --> 00:25:04,159
you could add other chatbots with class

00:25:03,520 --> 00:25:07,360
people

00:25:04,159 --> 00:25:08,240
are they are they recharging all right

00:25:07,360 --> 00:25:09,919
you could

00:25:08,240 --> 00:25:11,600
uh you could have a social

00:25:09,919 --> 00:25:12,960
authentication you know people can

00:25:11,600 --> 00:25:15,440
authenticate with their

00:25:12,960 --> 00:25:16,000
they can log into your platform with

00:25:15,440 --> 00:25:17,919
groups

00:25:16,000 --> 00:25:19,360
with um i don't know if their google

00:25:17,919 --> 00:25:20,799
accounts with their twitter accounts

00:25:19,360 --> 00:25:22,880
with their facebook account but

00:25:20,799 --> 00:25:24,559
with stream leads you are not going to

00:25:22,880 --> 00:25:26,080
be able to do that all right

00:25:24,559 --> 00:25:27,760
there is no authentication after

00:25:26,080 --> 00:25:28,640
explaining it but you guys data

00:25:27,760 --> 00:25:30,640
scientists

00:25:28,640 --> 00:25:32,320
then strain it is the best app that

00:25:30,640 --> 00:25:34,480
you're ever going to need all right

00:25:32,320 --> 00:25:36,480
maybe to spin up a data app if you you

00:25:34,480 --> 00:25:37,360
want you want to spin up an interactive

00:25:36,480 --> 00:25:40,799
um

00:25:37,360 --> 00:25:43,360
in an interactive uh and it's quite

00:25:40,799 --> 00:25:44,559
it is quite a it's quite a good way you

00:25:43,360 --> 00:25:47,679
know to uh

00:25:44,559 --> 00:25:48,240
to um it's quite a a good way you know

00:25:47,679 --> 00:25:49,840
to

00:25:48,240 --> 00:25:51,440
check out what's going on with your app

00:25:49,840 --> 00:25:52,080
you you don't have to complete your app

00:25:51,440 --> 00:25:54,559
before

00:25:52,080 --> 00:25:55,120
you spin it up on on stream list all

00:25:54,559 --> 00:25:58,559
right

00:25:55,120 --> 00:26:01,679
so so that's that's nice okay

00:25:58,559 --> 00:26:03,440
i think i have answered that okay uh

00:26:01,679 --> 00:26:07,039
another question can you use

00:26:03,440 --> 00:26:10,320
streamlid without knowledge of html css

00:26:07,039 --> 00:26:13,200
yes absolutely in fact that's extremely

00:26:10,320 --> 00:26:13,679
is not about you creating apps without

00:26:13,200 --> 00:26:15,919
um

00:26:13,679 --> 00:26:17,039
without you knowing html without you

00:26:15,919 --> 00:26:18,880
knowing css

00:26:17,039 --> 00:26:20,880
or javascript you don't have to care

00:26:18,880 --> 00:26:24,240
about that all you need to know

00:26:20,880 --> 00:26:25,840
to use twinlit is python all right

00:26:24,240 --> 00:26:27,600
once you have a basic knowledge of

00:26:25,840 --> 00:26:31,520
python you're good to go with

00:26:27,600 --> 00:26:33,760
streaming so thank you everybody

00:26:31,520 --> 00:26:35,679
okay um i have another question can you

00:26:33,760 --> 00:26:38,960
customize this to meet ui

00:26:35,679 --> 00:26:41,760
um unfortunately no you can't

00:26:38,960 --> 00:26:42,559
they can't customize um the stream leads

00:26:41,760 --> 00:26:44,480
ui

00:26:42,559 --> 00:26:45,919
all right it's actually one of the

00:26:44,480 --> 00:26:48,480
strengths of streaming

00:26:45,919 --> 00:26:50,080
the fact that you don't have to you

00:26:48,480 --> 00:26:52,080
don't have to

00:26:50,080 --> 00:26:53,120
care about the ui designs all right

00:26:52,080 --> 00:26:55,520
everything is

00:26:53,120 --> 00:26:56,240
everything is by default all right you

00:26:55,520 --> 00:26:58,960
just have to

00:26:56,240 --> 00:27:00,720
make api calls and then stream it stream

00:26:58,960 --> 00:27:03,360
it is going to you know spin it up

00:27:00,720 --> 00:27:04,080
for you so you can't customize the url

00:27:03,360 --> 00:27:07,039
okay

00:27:04,080 --> 00:27:08,400
there's a question also can one pathway

00:27:07,039 --> 00:27:11,200
stream that has

00:27:08,400 --> 00:27:13,200
android apk form for now no you can't

00:27:11,200 --> 00:27:16,320
i'm quite sorry about that but

00:27:13,200 --> 00:27:18,240
i don't know maybe in the months

00:27:16,320 --> 00:27:20,640
you still need to still work in progress

00:27:18,240 --> 00:27:21,120
all right and uh maybe in the next few

00:27:20,640 --> 00:27:23,840
months

00:27:21,120 --> 00:27:25,919
we'll be able to do that all right but

00:27:23,840 --> 00:27:28,720
for now you won't be able to package

00:27:25,919 --> 00:27:30,240
um stream leads as an android apk it's

00:27:28,720 --> 00:27:32,080
just a web app you know

00:27:30,240 --> 00:27:33,360
you know you could spin it up on it on

00:27:32,080 --> 00:27:37,279
this server all right

00:27:33,360 --> 00:27:40,399
people who host it on a cloud provider

00:27:37,279 --> 00:27:43,360
yeah you could host it on aws on on

00:27:40,399 --> 00:27:44,960
google cloud or microsoft azure but for

00:27:43,360 --> 00:27:48,320
now you won't be able to package it

00:27:44,960 --> 00:27:49,679
as an android apk okay thank you very

00:27:48,320 --> 00:27:51,440
much everyone for

00:27:49,679 --> 00:27:53,679
taking time to listening to this talk

00:27:51,440 --> 00:28:03,840
it's so much exciting to the year on

00:27:53,679 --> 00:28:03,840
this platform

00:28:05,840 --> 00:28:07,919

YouTube URL: https://www.youtube.com/watch?v=lnUhQa2fYG0


