Title: Chukwudi Nwachukwu - Sqlraw  Migrating Databases in Raw SQL || PyCon Africa 2020
Publication date: 2020-08-29
Playlist: PyCon Africa 2020
Description: 
	Sqlraw aims to help anyone write DB migrations for PostgreSQL, MySQL, MariaDB & SQLite (and more, yet to come)Since it does not have any attachment to any Python web framework, it is easy to use for development in any framework of choice and even use it for other programming languages.

It is a Python CLI that is lovely to work with. There are many utilities in it that aims to make the developer work easy by shortening the time spent developing applications.

You will not face the many challenges that arise as a result of writing tests for your application since you can test the DB queries independently of the main application itself.
Captions: 
	00:00:14,799 --> 00:00:18,400
i want to believe that everyone is

00:00:16,560 --> 00:00:22,800
seeing my screen

00:00:18,400 --> 00:00:26,080
uh so what i'm here for today is

00:00:22,800 --> 00:00:27,039
something called the normal sql which we

00:00:26,080 --> 00:00:32,320
have

00:00:27,039 --> 00:00:36,559
but then my talk is specifically

00:00:32,320 --> 00:00:41,600
sql migrating databases in

00:00:36,559 --> 00:00:44,879
raw sql why did i decide to do this

00:00:41,600 --> 00:00:49,280
okay so before i move further

00:00:44,879 --> 00:00:52,480
believe me you see my screen i want to

00:00:49,280 --> 00:00:55,360
i want to show you some links and the

00:00:52,480 --> 00:00:56,640
links are here on the screen

00:00:55,360 --> 00:00:58,879
[Music]

00:00:56,640 --> 00:01:00,239
most importantly you can see this github

00:00:58,879 --> 00:01:02,079
link here

00:01:00,239 --> 00:01:04,720
if you can visit it you would have

00:01:02,079 --> 00:01:07,840
access to the files that i will be using

00:01:04,720 --> 00:01:08,720
down to the docker files too and i've

00:01:07,840 --> 00:01:11,280
made sure that

00:01:08,720 --> 00:01:12,320
everything works well before i pushed it

00:01:11,280 --> 00:01:14,000
so you could as

00:01:12,320 --> 00:01:16,960
you could clone it and then you would

00:01:14,000 --> 00:01:19,680
have access to all i have access to

00:01:16,960 --> 00:01:21,439
i i'm using make file a lot to make

00:01:19,680 --> 00:01:22,960
things easy for myself because most of

00:01:21,439 --> 00:01:27,200
those things have tried to automate

00:01:22,960 --> 00:01:28,240
them so um within the make file if you

00:01:27,200 --> 00:01:31,439
type just make

00:01:28,240 --> 00:01:33,439
you will see some instructions

00:01:31,439 --> 00:01:35,200
and these are the instructions as it

00:01:33,439 --> 00:01:38,640
goes with

00:01:35,200 --> 00:01:41,119
the things that they stand for if you

00:01:38,640 --> 00:01:43,040
feel you don't understand what is the

00:01:41,119 --> 00:01:45,840
names you can as well do a cut

00:01:43,040 --> 00:01:47,920
to make file that's after you've pulled

00:01:45,840 --> 00:01:51,119
you've cloned the repository

00:01:47,920 --> 00:01:55,840
and then you'll be able to see them so

00:01:51,119 --> 00:01:59,119
i tried to add a docker for post rescuer

00:01:55,840 --> 00:01:59,520
and then docker for pg admin docker for

00:01:59,119 --> 00:02:02,000
ph

00:01:59,520 --> 00:02:03,840
my admin for anyone that i'm interested

00:02:02,000 --> 00:02:06,320
in making use of those

00:02:03,840 --> 00:02:07,840
okay so one of the links that i added is

00:02:06,320 --> 00:02:10,560
a link to the soviet i was done by

00:02:07,840 --> 00:02:13,680
stackoverflow in 2020

00:02:10,560 --> 00:02:16,800
and these two links here

00:02:13,680 --> 00:02:19,920
speaks about the rise of

00:02:16,800 --> 00:02:20,560
sql in technology so since there are

00:02:19,920 --> 00:02:22,319
links

00:02:20,560 --> 00:02:24,560
since you have access to them i would

00:02:22,319 --> 00:02:27,680
want you to visit them by yourself

00:02:24,560 --> 00:02:31,680
but importantly is the fact that

00:02:27,680 --> 00:02:34,560
sql came thought by the classification

00:02:31,680 --> 00:02:36,640
under technology programming scripting

00:02:34,560 --> 00:02:39,280
and markup languages

00:02:36,640 --> 00:02:40,800
it came third and then in this place too

00:02:39,280 --> 00:02:44,080
it even came first here

00:02:40,800 --> 00:02:46,560
before python itself so over

00:02:44,080 --> 00:02:48,879
so many years the use of sql has been

00:02:46,560 --> 00:02:51,440
rising and rising in popularity

00:02:48,879 --> 00:02:52,400
and then because of that there is a need

00:02:51,440 --> 00:02:55,360
for

00:02:52,400 --> 00:02:56,080
us to write applications that you are

00:02:55,360 --> 00:02:58,159
easily

00:02:56,080 --> 00:02:59,599
able to deploy across several

00:02:58,159 --> 00:03:01,599
programming languages

00:02:59,599 --> 00:03:04,480
and this becomes very useful when you're

00:03:01,599 --> 00:03:07,200
writing things around microservices

00:03:04,480 --> 00:03:07,760
here and there so over time i noticed

00:03:07,200 --> 00:03:10,400
that

00:03:07,760 --> 00:03:12,319
because i could i can code in in

00:03:10,400 --> 00:03:15,440
different frameworks

00:03:12,319 --> 00:03:17,840
so if i code in framework a i'll try as

00:03:15,440 --> 00:03:20,239
much as i can not to mention names here

00:03:17,840 --> 00:03:22,319
if i code in framework a

00:03:20,239 --> 00:03:23,680
and then i need to do a microservice and

00:03:22,319 --> 00:03:25,280
framework b

00:03:23,680 --> 00:03:26,799
and probably need to use another

00:03:25,280 --> 00:03:30,239
framework in language

00:03:26,799 --> 00:03:32,560
c i i have used

00:03:30,239 --> 00:03:34,879
all they have they have provided to be

00:03:32,560 --> 00:03:37,920
able to manage databases across them

00:03:34,879 --> 00:03:42,080
i notice that i'm somehow locked in if

00:03:37,920 --> 00:03:44,560
i want to do anything above for instance

00:03:42,080 --> 00:03:45,360
this time around i'll mention project

00:03:44,560 --> 00:03:48,400
let's assume

00:03:45,360 --> 00:03:49,200
i have a project in elixir and then for

00:03:48,400 --> 00:03:52,319
elixir

00:03:49,200 --> 00:03:53,599
i'm using ecto that's how it's

00:03:52,319 --> 00:03:57,120
pronounced

00:03:53,599 --> 00:04:00,480
for my databases and everything and then

00:03:57,120 --> 00:04:02,319
i have everything locked down to ecto

00:04:00,480 --> 00:04:04,799
and then somehow along the line i

00:04:02,319 --> 00:04:07,280
decided to create a part of the project

00:04:04,799 --> 00:04:08,879
and it's making use of the same database

00:04:07,280 --> 00:04:10,720
and but this time around i decided to

00:04:08,879 --> 00:04:14,000
write a microservice part

00:04:10,720 --> 00:04:16,799
in maybe jungle okay

00:04:14,000 --> 00:04:17,600
so i come to django i begin to write all

00:04:16,799 --> 00:04:19,600
the models

00:04:17,600 --> 00:04:21,280
again and maybe i need to do a

00:04:19,600 --> 00:04:23,680
microservice and flask

00:04:21,280 --> 00:04:25,360
all these issues begin to crop up so i

00:04:23,680 --> 00:04:28,080
had a lot of issues and then

00:04:25,360 --> 00:04:28,960
there was a day too i was trying to do

00:04:28,080 --> 00:04:32,880
something

00:04:28,960 --> 00:04:35,440
around using raw query

00:04:32,880 --> 00:04:36,960
for a little project i was working on so

00:04:35,440 --> 00:04:38,160
i noticed that it looks as if i was

00:04:36,960 --> 00:04:41,199
rusty already

00:04:38,160 --> 00:04:43,360
in sql and funnily enough i started my

00:04:41,199 --> 00:04:43,680
life as a database administrator of

00:04:43,360 --> 00:04:45,919
christ

00:04:43,680 --> 00:04:47,520
even started coding full-time so i've

00:04:45,919 --> 00:04:49,199
always learned a lot about databases

00:04:47,520 --> 00:04:50,639
then i decided that

00:04:49,199 --> 00:04:53,440
the most important thing that was

00:04:50,639 --> 00:04:54,160
holding me across boards is the fact

00:04:53,440 --> 00:04:57,199
that

00:04:54,160 --> 00:05:00,240
there is huge migration too

00:04:57,199 --> 00:05:01,600
in most of these forums as you would

00:05:00,240 --> 00:05:03,360
like to call them

00:05:01,600 --> 00:05:04,720
or any other name that it's fancy for

00:05:03,360 --> 00:05:07,840
them and

00:05:04,720 --> 00:05:08,960
that sort of enjoys to them and keep us

00:05:07,840 --> 00:05:10,960
locked in

00:05:08,960 --> 00:05:12,080
then i decided to go and grab the ball

00:05:10,960 --> 00:05:15,280
by home

00:05:12,080 --> 00:05:16,720
so if you clone the repository and then

00:05:15,280 --> 00:05:19,520
you type make

00:05:16,720 --> 00:05:20,560
gc make gc will be able to help you to

00:05:19,520 --> 00:05:24,080
pull down this

00:05:20,560 --> 00:05:26,560
do a clone of a project named sql and

00:05:24,080 --> 00:05:28,240
i have done all those i've activated my

00:05:26,560 --> 00:05:31,520
virtual environment

00:05:28,240 --> 00:05:33,840
and then i would be able to do the demo

00:05:31,520 --> 00:05:33,840
for you

00:05:35,520 --> 00:05:39,680
please if you have questions you can go

00:05:37,759 --> 00:05:42,479
ahead and

00:05:39,680 --> 00:05:44,800
post them i'll respond once i'm done so

00:05:42,479 --> 00:05:49,440
now to the project itself properly

00:05:44,800 --> 00:05:51,440
so when you type python

00:05:49,440 --> 00:05:52,880
manage the py as i mean you have clone

00:05:51,440 --> 00:05:55,520
repository

00:05:52,880 --> 00:05:56,960
and then you give it a h it will show

00:05:55,520 --> 00:06:00,639
you the help files that

00:05:56,960 --> 00:06:03,199
would help you with this so um

00:06:00,639 --> 00:06:04,479
i was working with postgresql but

00:06:03,199 --> 00:06:06,880
whatever i do

00:06:04,479 --> 00:06:08,960
applies across board it can migrate for

00:06:06,880 --> 00:06:12,319
postgresql it can do mysql

00:06:08,960 --> 00:06:14,160
myra db sqlite for now maybe over time

00:06:12,319 --> 00:06:14,479
with the help of people joining in then

00:06:14,160 --> 00:06:17,680
i

00:06:14,479 --> 00:06:19,280
should be able to add more and more

00:06:17,680 --> 00:06:21,039
databases to it

00:06:19,280 --> 00:06:22,720
but for now it will show all the

00:06:21,039 --> 00:06:25,680
concepts that we need so

00:06:22,720 --> 00:06:26,800
i'll be using this make file a lot and i

00:06:25,680 --> 00:06:30,080
can tell you that

00:06:26,800 --> 00:06:32,479
the git hub page for it to have

00:06:30,080 --> 00:06:33,280
a lot in the documentation then if you

00:06:32,479 --> 00:06:36,000
want to use

00:06:33,280 --> 00:06:37,600
docker tool you will be able to find all

00:06:36,000 --> 00:06:40,080
those things in the link so

00:06:37,600 --> 00:06:41,120
i have done the help then the next thing

00:06:40,080 --> 00:06:43,759
is you could

00:06:41,120 --> 00:06:44,319
also check for the version that you're

00:06:43,759 --> 00:06:48,240
running

00:06:44,319 --> 00:06:50,080
nothing huge about this and um

00:06:48,240 --> 00:06:52,720
most importantly before you could start

00:06:50,080 --> 00:06:55,599
working you have to

00:06:52,720 --> 00:06:56,720
have your virtual environment activated

00:06:55,599 --> 00:07:00,479
and then

00:06:56,720 --> 00:07:03,280
there are these files that end in dot sh

00:07:00,479 --> 00:07:04,319
these files i added three there's one

00:07:03,280 --> 00:07:06,400
for mysql

00:07:04,319 --> 00:07:08,160
there is one for postgresql and then

00:07:06,400 --> 00:07:10,880
there is one for sqlite

00:07:08,160 --> 00:07:12,400
you can all try to test so the one that

00:07:10,880 --> 00:07:15,840
i'm using today

00:07:12,400 --> 00:07:17,520
is the one for the postgresql and then

00:07:15,840 --> 00:07:20,800
when i say altar to taste

00:07:17,520 --> 00:07:24,000
i mean you can give

00:07:20,800 --> 00:07:25,440
it the path that you need here so please

00:07:24,000 --> 00:07:28,479
pay attention

00:07:25,440 --> 00:07:31,759
the path i give to it is by dollar home

00:07:28,479 --> 00:07:34,160
slash progress psqo and then the same

00:07:31,759 --> 00:07:37,520
thing that applies across board

00:07:34,160 --> 00:07:39,919
so um what i'm telling basically is

00:07:37,520 --> 00:07:41,280
in my home directory create a directory

00:07:39,919 --> 00:07:43,759
name psql

00:07:41,280 --> 00:07:44,720
and dump all these files in it so after

00:07:43,759 --> 00:07:46,479
doing that

00:07:44,720 --> 00:07:49,280
what the next thing i did was just

00:07:46,479 --> 00:07:49,280
basically to

00:07:49,599 --> 00:07:53,360
open it inside my atom and that's what

00:07:52,080 --> 00:07:55,919
you'll be seeing on the other side of

00:07:53,360 --> 00:07:55,919
the screen

00:07:56,000 --> 00:08:03,680
please can you see my thumb i don't

00:07:59,520 --> 00:08:06,720
think i don't think you can see my thumb

00:08:03,680 --> 00:08:09,919
okay so uh in the absence of that

00:08:06,720 --> 00:08:13,599
what i was trying to say is if i do

00:08:09,919 --> 00:08:16,720
um ls ls ll

00:08:13,599 --> 00:08:20,000
undo slash

00:08:16,720 --> 00:08:22,560
p sql it will

00:08:20,000 --> 00:08:24,319
list some things in it and some of those

00:08:22,560 --> 00:08:26,800
things in this style is this

00:08:24,319 --> 00:08:28,160
you will see that this folder queries is

00:08:26,800 --> 00:08:30,240
inside it so

00:08:28,160 --> 00:08:32,399
everything i'll be doing will be it will

00:08:30,240 --> 00:08:34,159
be down inside inside this place

00:08:32,399 --> 00:08:41,839
then there is a log file in case you

00:08:34,159 --> 00:08:41,839
need to check how things have happened

00:08:42,479 --> 00:08:46,480
the log file contains some things that

00:08:44,720 --> 00:08:49,680
might be necessary or useful for you

00:08:46,480 --> 00:08:52,720
to be able to track how things worked

00:08:49,680 --> 00:08:55,600
over time now

00:08:52,720 --> 00:08:56,480
you need to activate your your shell

00:08:55,600 --> 00:08:59,760
script

00:08:56,480 --> 00:09:02,959
in this instance uh i was using p

00:08:59,760 --> 00:09:06,240
sql and immediately i run this

00:09:02,959 --> 00:09:09,440
it will of course show the full

00:09:06,240 --> 00:09:11,920
path to everything and then the file

00:09:09,440 --> 00:09:13,680
can now read it because anytime you type

00:09:11,920 --> 00:09:15,920
python manager py dash

00:09:13,680 --> 00:09:18,399
anything it reads the variable from the

00:09:15,920 --> 00:09:20,880
environment i did it this way so that it

00:09:18,399 --> 00:09:23,519
will be easily usable from any language

00:09:20,880 --> 00:09:24,480
without being locked into any specific

00:09:23,519 --> 00:09:28,959
language

00:09:24,480 --> 00:09:31,600
or framework so

00:09:28,959 --> 00:09:33,760
for you to start your migration we

00:09:31,600 --> 00:09:34,640
usually initialize our database and you

00:09:33,760 --> 00:09:37,519
can do that

00:09:34,640 --> 00:09:38,720
with this but meanwhile i have done

00:09:37,519 --> 00:09:42,000
something already

00:09:38,720 --> 00:09:44,320
and the thing i did includes

00:09:42,000 --> 00:09:46,320
the username and the password for the

00:09:44,320 --> 00:09:49,279
databasement evolves

00:09:46,320 --> 00:09:50,000
and then the location at which it exists

00:09:49,279 --> 00:09:51,680
and the port

00:09:50,000 --> 00:09:53,440
everything is already added here so it

00:09:51,680 --> 00:09:56,320
is with design to work

00:09:53,440 --> 00:09:56,720
so i already run some migrations but

00:09:56,320 --> 00:09:59,040
then

00:09:56,720 --> 00:10:00,000
i want to downgrade those migrations

00:09:59,040 --> 00:10:02,079
hoping

00:10:00,000 --> 00:10:04,320
everything is fine if we feel like this

00:10:02,079 --> 00:10:06,720
would solve it together i'm not

00:10:04,320 --> 00:10:08,800
aiming for perfection what i'm aiming in

00:10:06,720 --> 00:10:11,440
this instance is for

00:10:08,800 --> 00:10:12,800
us to see all the things that's capable

00:10:11,440 --> 00:10:16,160
of doing

00:10:12,800 --> 00:10:19,760
so i type python manage the py

00:10:16,160 --> 00:10:21,519
then i need to downgrade i'll just give

00:10:19,760 --> 00:10:25,200
it a dash d

00:10:21,519 --> 00:10:27,760
if everything works fine then it will

00:10:25,200 --> 00:10:28,880
be able to do the downgrade so in this

00:10:27,760 --> 00:10:31,040
instance

00:10:28,880 --> 00:10:32,079
it's telling me something it's telling

00:10:31,040 --> 00:10:35,760
me that it's

00:10:32,079 --> 00:10:37,680
expected one argument okay so

00:10:35,760 --> 00:10:39,839
would solve that as time goes on like i

00:10:37,680 --> 00:10:43,120
said some errors i don't purpose

00:10:39,839 --> 00:10:44,720
by me and be able to know how to use the

00:10:43,120 --> 00:10:49,200
script

00:10:44,720 --> 00:10:52,480
already i did a python manage

00:10:49,200 --> 00:10:53,279
py python manager py.i and it's

00:10:52,480 --> 00:10:56,000
initiated

00:10:53,279 --> 00:10:57,200
database so i want to check for some

00:10:56,000 --> 00:11:02,000
other things

00:10:57,200 --> 00:11:05,600
first of all i could type python.py dash

00:11:02,000 --> 00:11:07,519
s if i do that

00:11:05,600 --> 00:11:09,519
it will tell me that i already have two

00:11:07,519 --> 00:11:13,440
migrations done

00:11:09,519 --> 00:11:16,720
yes and those migrations are some files

00:11:13,440 --> 00:11:19,519
that are domiciled on the system

00:11:16,720 --> 00:11:20,959
and i'll find those files at this

00:11:19,519 --> 00:11:25,200
location

00:11:20,959 --> 00:11:25,200
and if i do ls here

00:11:25,839 --> 00:11:31,760
those files are named exactly the

00:11:29,200 --> 00:11:33,839
the number for the migration stands

00:11:31,760 --> 00:11:36,959
right to be easily traceable

00:11:33,839 --> 00:11:39,200
and those files are equal time so you

00:11:36,959 --> 00:11:43,200
can actually convert this to node

00:11:39,200 --> 00:11:46,000
date and time by which that was done

00:11:43,200 --> 00:11:46,399
that's what the dash s the elites or at

00:11:46,000 --> 00:11:48,320
least

00:11:46,399 --> 00:11:50,399
all migrations registered on the

00:11:48,320 --> 00:11:53,680
database

00:11:50,399 --> 00:11:57,760
okay so i could also do

00:11:53,680 --> 00:12:01,440
a dash f and when i do an

00:11:57,760 --> 00:12:02,320
f it lists all the migration files in

00:12:01,440 --> 00:12:04,639
this instance

00:12:02,320 --> 00:12:05,760
these files it gives you these files and

00:12:04,639 --> 00:12:08,800
you will see where you

00:12:05,760 --> 00:12:10,240
actually could use them okay so

00:12:08,800 --> 00:12:12,000
since i already have some migrations

00:12:10,240 --> 00:12:14,639
done around the way

00:12:12,000 --> 00:12:16,800
i could want to check out something

00:12:14,639 --> 00:12:20,240
maybe a regular expression

00:12:16,800 --> 00:12:24,079
for uh who knows let me say

00:12:20,240 --> 00:12:26,880
create so

00:12:24,079 --> 00:12:27,920
i wanted to check where create appeared

00:12:26,880 --> 00:12:29,760
in any of these

00:12:27,920 --> 00:12:31,120
things and it tells me i can find

00:12:29,760 --> 00:12:34,959
creates in

00:12:31,120 --> 00:12:34,959
this list for us

00:12:35,279 --> 00:12:38,720
so doing a cut actually you could see

00:12:38,320 --> 00:12:40,639
create

00:12:38,720 --> 00:12:42,399
creates in all these places and that's

00:12:40,639 --> 00:12:45,360
why it popped up

00:12:42,399 --> 00:12:46,240
okay so uh who's to get to this place

00:12:45,360 --> 00:12:48,639
this

00:12:46,240 --> 00:12:50,399
was the initial migration that was done

00:12:48,639 --> 00:12:51,600
on the table so i'll just clear my

00:12:50,399 --> 00:12:54,160
screen right now

00:12:51,600 --> 00:12:55,200
and then i'll type python manager py.h

00:12:54,160 --> 00:12:56,800
once more

00:12:55,200 --> 00:12:59,680
to be able to move ahead with what i'm

00:12:56,800 --> 00:13:01,279
doing so we've seen those files we've

00:12:59,680 --> 00:13:03,440
seen how we could search with the

00:13:01,279 --> 00:13:05,040
regular expression

00:13:03,440 --> 00:13:07,519
what i haven't shown you is how to

00:13:05,040 --> 00:13:11,279
initialize my breakdown rate

00:13:07,519 --> 00:13:16,160
and then upgrade to

00:13:11,279 --> 00:13:19,040
so i'll do something i'll do python

00:13:16,160 --> 00:13:20,959
manager py dash s first to check the

00:13:19,040 --> 00:13:23,279
status of what we have

00:13:20,959 --> 00:13:25,200
having seen that i'll do python manager

00:13:23,279 --> 00:13:28,399
py dash

00:13:25,200 --> 00:13:31,360
migrate since i already have and

00:13:28,399 --> 00:13:31,920
i've already gone to two migrations

00:13:31,360 --> 00:13:35,440
already

00:13:31,920 --> 00:13:37,120
so when i give it a migrate to create an

00:13:35,440 --> 00:13:40,480
sql file for me that would

00:13:37,120 --> 00:13:41,920
alter the test so hoping everything goes

00:13:40,480 --> 00:13:45,600
on fine

00:13:41,920 --> 00:13:48,720
if i ask it for the status now it still

00:13:45,600 --> 00:13:51,600
tells me that i have these but

00:13:48,720 --> 00:13:52,800
i had done migrations for two files i've

00:13:51,600 --> 00:13:55,519
yet to do for

00:13:52,800 --> 00:13:56,800
this i'd like to repeat this several

00:13:55,519 --> 00:13:59,519
times

00:13:56,800 --> 00:14:01,440
so that we could have a lot of them and

00:13:59,519 --> 00:14:04,959
then

00:14:01,440 --> 00:14:06,959
i'll also go back and

00:14:04,959 --> 00:14:08,560
check out this so we have foreign

00:14:06,959 --> 00:14:13,040
migrations

00:14:08,560 --> 00:14:13,040
and when we check out those files

00:14:13,760 --> 00:14:18,480
you could see that let's just let's just

00:14:16,959 --> 00:14:21,040
try and see

00:14:18,480 --> 00:14:22,000
what is what is contained inside inside

00:14:21,040 --> 00:14:25,519
this quiz

00:14:22,000 --> 00:14:29,279
so python manager q python minor py

00:14:25,519 --> 00:14:32,240
dash h okay so

00:14:29,279 --> 00:14:32,240
uh first of all

00:14:34,000 --> 00:14:37,680
you could check if certain word want to

00:14:37,120 --> 00:14:41,120
use

00:14:37,680 --> 00:14:43,519
is present in the sql

00:14:41,120 --> 00:14:44,720
definitions like if it's a keyword or

00:14:43,519 --> 00:14:47,440
not and that's what that

00:14:44,720 --> 00:14:49,440
k stands for i want to check in since

00:14:47,440 --> 00:14:52,320
i'm using postgresql i want to check

00:14:49,440 --> 00:14:54,160
the word user and it came back with an

00:14:52,320 --> 00:14:56,000
error it tells me that the variable user

00:14:54,160 --> 00:14:59,199
is a postgresql reserved

00:14:56,000 --> 00:15:01,360
word there was a day i was

00:14:59,199 --> 00:15:02,240
trying to write something so everything

00:15:01,360 --> 00:15:05,519
kept failing

00:15:02,240 --> 00:15:06,800
i did create table user not knowing that

00:15:05,519 --> 00:15:09,600
post sql

00:15:06,800 --> 00:15:12,639
or had it as a reserved keyword or

00:15:09,600 --> 00:15:14,480
better yet i have forgotten so i decided

00:15:12,639 --> 00:15:17,199
to add this instance for you to check

00:15:14,480 --> 00:15:20,399
something by keyword

00:15:17,199 --> 00:15:23,760
and then you could have a need to

00:15:20,399 --> 00:15:26,880
print sql and see

00:15:23,760 --> 00:15:30,079
what you have there

00:15:26,880 --> 00:15:41,839
okay so i i want to print

00:15:30,079 --> 00:15:41,839
the sql to terminal

00:15:52,240 --> 00:15:57,759
i want i i try to print what these

00:15:55,519 --> 00:15:59,920
what this file contains this file

00:15:57,759 --> 00:16:03,279
without doing it cutting it

00:15:59,920 --> 00:16:06,560
i think this screen is dirty

00:16:03,279 --> 00:16:10,639
so if you do python monitor t

00:16:06,560 --> 00:16:12,160
y s you can actually print what is

00:16:10,639 --> 00:16:15,279
contained in it

00:16:12,160 --> 00:16:17,199
even if you do it by the dash f you can

00:16:15,279 --> 00:16:17,920
also use that to check what is contained

00:16:17,199 --> 00:16:20,880
in it so

00:16:17,920 --> 00:16:22,000
in this place this is what is contained

00:16:20,880 --> 00:16:24,240
in it

00:16:22,000 --> 00:16:26,000
so when it creates files for instance

00:16:24,240 --> 00:16:28,399
i'll go with this now since it's the

00:16:26,000 --> 00:16:28,399
last one

00:16:33,759 --> 00:16:37,279
as i mean i have this this is when i did

00:16:36,240 --> 00:16:40,639
python manage

00:16:37,279 --> 00:16:42,000
the py dash m my migrate i was just

00:16:40,639 --> 00:16:43,040
clicking the migrates this was what

00:16:42,000 --> 00:16:45,759
happened

00:16:43,040 --> 00:16:47,199
now it is left for me to alter this in

00:16:45,759 --> 00:16:49,680
this instance

00:16:47,199 --> 00:16:51,199
is where the whole thing gets inserted

00:16:49,680 --> 00:16:52,720
in these instances where the whole thing

00:16:51,199 --> 00:16:56,079
gets deleted

00:16:52,720 --> 00:17:00,399
an example of one i did i did was

00:16:56,079 --> 00:17:05,839
this second this second one

00:17:00,399 --> 00:17:05,839
i'll show you

00:17:12,400 --> 00:17:15,439
sorry about that

00:17:17,199 --> 00:17:21,520
okay so i don't want to clear the screen

00:17:19,679 --> 00:17:25,120
so that would

00:17:21,520 --> 00:17:28,000
compare and contrast in this place

00:17:25,120 --> 00:17:28,720
if you noticed i added my create table

00:17:28,000 --> 00:17:32,720
before

00:17:28,720 --> 00:17:34,559
the migration and of course after i have

00:17:32,720 --> 00:17:37,520
created the table so

00:17:34,559 --> 00:17:38,720
this my defaults will always be present

00:17:37,520 --> 00:17:40,160
there

00:17:38,720 --> 00:17:42,799
including that time and everything

00:17:40,160 --> 00:17:45,520
you're not expected to alter it

00:17:42,799 --> 00:17:46,160
then when it comes to the downgrade you

00:17:45,520 --> 00:17:50,400
have to

00:17:46,160 --> 00:17:52,240
indicate if you want downgrade or not

00:17:50,400 --> 00:17:54,400
if it's useful for you you can leave it

00:17:52,240 --> 00:17:57,360
and do it to test otherwise you

00:17:54,400 --> 00:17:59,360
allow you're allowed to leave it so i

00:17:57,360 --> 00:18:02,080
would like to leave this place for now

00:17:59,360 --> 00:18:03,200
and then camera on my migrations so

00:18:02,080 --> 00:18:07,039
python i just p

00:18:03,200 --> 00:18:10,400
y h gives me all the lists i have

00:18:07,039 --> 00:18:13,840
i did some migrations then so uh

00:18:10,400 --> 00:18:17,679
if i do python manage a ty

00:18:13,840 --> 00:18:20,400
i have this amount of unknown migrations

00:18:17,679 --> 00:18:22,000
hoping everything goes fine for me to

00:18:20,400 --> 00:18:23,360
make sure it's in the database of the

00:18:22,000 --> 00:18:25,520
dash you

00:18:23,360 --> 00:18:26,480
and every everything goes on fine you do

00:18:25,520 --> 00:18:29,679
not see an error

00:18:26,480 --> 00:18:32,799
and when i repeat s again

00:18:29,679 --> 00:18:34,799
everything says migration is done

00:18:32,799 --> 00:18:36,400
and like i said those migrations have

00:18:34,799 --> 00:18:38,080
files that are residents on your

00:18:36,400 --> 00:18:40,840
pc that you can actually alter

00:18:38,080 --> 00:18:43,760
statistics and see how things are

00:18:40,840 --> 00:18:46,160
working

00:18:43,760 --> 00:18:46,799
then the next thing i'd like to do now

00:18:46,160 --> 00:18:49,919
is

00:18:46,799 --> 00:18:53,120
it's time for me to downgrade

00:18:49,919 --> 00:18:55,679
actually want to downgrade right now and

00:18:53,120 --> 00:18:57,120
probably go to the beginning of the

00:18:55,679 --> 00:19:00,400
whole thing

00:18:57,120 --> 00:19:04,000
so meanwhile

00:19:00,400 --> 00:19:07,520
we did keyword we did collection okay

00:19:04,000 --> 00:19:08,160
so as mean you want to do python mind or

00:19:07,520 --> 00:19:11,600
py

00:19:08,160 --> 00:19:14,799
dash p

00:19:11,600 --> 00:19:17,440
as we want to do more than one

00:19:14,799 --> 00:19:18,720
paste you want to you want to show more

00:19:17,440 --> 00:19:23,200
than one

00:19:18,720 --> 00:19:25,120
thing what they contain for instance

00:19:23,200 --> 00:19:26,880
you can you are allowed to do something

00:19:25,120 --> 00:19:30,000
like this

00:19:26,880 --> 00:19:33,120
okay so when you give this command

00:19:30,000 --> 00:19:36,640
with that many dash p it will

00:19:33,120 --> 00:19:40,000
do everything for you so this

00:19:36,640 --> 00:19:43,760
starts from here to here okay

00:19:40,000 --> 00:19:46,799
and then the other one two

00:19:43,760 --> 00:19:49,840
two okay so this is six

00:19:46,799 --> 00:19:52,559
five um six five

00:19:49,840 --> 00:19:53,280
seven this is six five seven and this is

00:19:52,559 --> 00:19:54,880
nine two two

00:19:53,280 --> 00:19:56,640
three this is where knight two two three

00:19:54,880 --> 00:19:59,200
stopped that's the

00:19:56,640 --> 00:20:00,400
meaning of when you see something like

00:19:59,200 --> 00:20:03,919
collection

00:20:00,400 --> 00:20:05,840
that's what this guy means here okay so

00:20:03,919 --> 00:20:08,480
you know i've been copying numbers it

00:20:05,840 --> 00:20:12,480
might not be interesting

00:20:08,480 --> 00:20:15,679
if i do if i do my s like this

00:20:12,480 --> 00:20:19,280
or better yet i could

00:20:15,679 --> 00:20:21,600
list i could um list all the migration

00:20:19,280 --> 00:20:24,400
files by number all right i just give it

00:20:21,600 --> 00:20:25,760
by n so it tells me that this is the

00:20:24,400 --> 00:20:28,400
first one

00:20:25,760 --> 00:20:29,600
and this is the last migration i did

00:20:28,400 --> 00:20:33,600
okay so

00:20:29,600 --> 00:20:37,120
going back to my h and

00:20:33,600 --> 00:20:40,240
doing this by number i like to

00:20:37,120 --> 00:20:41,520
stop clearing the screen if i need to

00:20:40,240 --> 00:20:45,840
print it

00:20:41,520 --> 00:20:49,919
i can do python manager qrb

00:20:45,840 --> 00:20:52,000
and tell it to print the sixth one

00:20:49,919 --> 00:20:53,039
without giving it the number or tell it

00:20:52,000 --> 00:20:56,000
to print the

00:20:53,039 --> 00:20:56,480
first one without giving it the number

00:20:56,000 --> 00:20:58,159
you know

00:20:56,480 --> 00:21:01,440
all these may come in very handy and

00:20:58,159 --> 00:21:04,559
useful that's what the by index means

00:21:01,440 --> 00:21:07,919
and then again you could format

00:21:04,559 --> 00:21:10,080
a specific file by index

00:21:07,919 --> 00:21:11,039
i'd like to format this file but before

00:21:10,080 --> 00:21:13,840
i format it

00:21:11,039 --> 00:21:14,640
let's see how it looks like so i'd like

00:21:13,840 --> 00:21:18,960
to

00:21:14,640 --> 00:21:18,960
i'd like to do the b2

00:21:22,400 --> 00:21:25,520
what do i want to do i want to format

00:21:24,720 --> 00:21:28,720
the second

00:21:25,520 --> 00:21:30,159
file but meanwhile i want to show it so

00:21:28,720 --> 00:21:34,320
that people will see what's

00:21:30,159 --> 00:21:35,520
what's um and then when i do that i also

00:21:34,320 --> 00:21:38,880
want to run the

00:21:35,520 --> 00:21:43,440
health okay so

00:21:38,880 --> 00:21:47,600
this this this is it as it is presently

00:21:43,440 --> 00:21:52,799
okay so i could for my index

00:21:47,600 --> 00:21:52,799
i could just change this to y minus

00:21:55,760 --> 00:22:00,080
if you check i'm sorry the whole thing

00:21:57,919 --> 00:22:03,440
is molded up right now but

00:22:00,080 --> 00:22:07,840
maybe we'll remember that this is the

00:22:03,440 --> 00:22:11,440
beginning from this point

00:22:07,840 --> 00:22:14,960
the the help file

00:22:11,440 --> 00:22:14,960
started from here

00:22:15,200 --> 00:22:18,559
but before then if you see create table

00:22:17,919 --> 00:22:21,440
weather

00:22:18,559 --> 00:22:22,480
you would see how it's displayed and

00:22:21,440 --> 00:22:26,080
when you run

00:22:22,480 --> 00:22:27,919
your format on it you would see how it's

00:22:26,080 --> 00:22:31,600
displayed now

00:22:27,919 --> 00:22:34,799
and this is the formatted under the

00:22:31,600 --> 00:22:36,000
section new query is now what we have

00:22:34,799 --> 00:22:39,360
the whole thing is sort of

00:22:36,000 --> 00:22:42,240
moreover by specification it's

00:22:39,360 --> 00:22:43,919
it's something i also alter to test for

00:22:42,240 --> 00:22:45,039
whatever reason you might want to format

00:22:43,919 --> 00:22:48,240
your sql query

00:22:45,039 --> 00:22:48,240
so that's also there

00:22:50,640 --> 00:22:56,480
by this time i have done collection p

00:22:54,080 --> 00:22:57,760
i've done keyword we could search by

00:22:56,480 --> 00:23:00,400
keyword

00:22:57,760 --> 00:23:02,480
printing by index by number listing

00:23:00,400 --> 00:23:05,280
files by number the status listing

00:23:02,480 --> 00:23:07,120
just the files by the name searching

00:23:05,280 --> 00:23:10,880
regular expression

00:23:07,120 --> 00:23:14,320
i have done migration i've done

00:23:10,880 --> 00:23:18,320
upgrading now downgrade and then

00:23:14,320 --> 00:23:22,799
we hopefully would initialize okay so

00:23:18,320 --> 00:23:25,200
python manager ty d1

00:23:22,799 --> 00:23:28,880
so for you to know what has happened you

00:23:25,200 --> 00:23:32,000
can run your python mindset

00:23:28,880 --> 00:23:35,679
s to see that

00:23:32,000 --> 00:23:36,000
it did it this one says migration undone

00:23:35,679 --> 00:23:39,280
so

00:23:36,000 --> 00:23:43,360
this no longer works but meanwhile if

00:23:39,280 --> 00:23:46,320
you do this

00:23:43,360 --> 00:23:47,120
by number you know you have six

00:23:46,320 --> 00:23:49,760
migrations

00:23:47,120 --> 00:23:51,039
done if you are doing a downgrade the

00:23:49,760 --> 00:23:54,080
downgrade comes from

00:23:51,039 --> 00:23:55,279
the back that's why this number is

00:23:54,080 --> 00:23:58,640
unknown

00:23:55,279 --> 00:24:04,080
so if you do the downgrade again

00:23:58,640 --> 00:24:07,600
and tell it to downgrade by one

00:24:04,080 --> 00:24:07,600
and you check the status

00:24:07,760 --> 00:24:10,880
it still does this one so if you need to

00:24:10,080 --> 00:24:14,799
downgrade

00:24:10,880 --> 00:24:19,520
down to this point down to this point

00:24:14,799 --> 00:24:22,400
you will be giving it the

00:24:19,520 --> 00:24:23,360
the number of downgrades you should do

00:24:22,400 --> 00:24:26,480
at this point

00:24:23,360 --> 00:24:27,919
we would get an error because it has

00:24:26,480 --> 00:24:33,840
downgraded to the point

00:24:27,919 --> 00:24:37,360
that if we check out this file

00:24:33,840 --> 00:24:41,200
okay so that would just be um python

00:24:37,360 --> 00:24:41,200
manager py this is the first

00:24:41,440 --> 00:24:47,919
iphone and the py dash being the first

00:24:44,960 --> 00:24:50,720
file if we check the first file this is

00:24:47,919 --> 00:24:54,240
the first one initialization was done

00:24:50,720 --> 00:24:55,440
it actually created a table inserted

00:24:54,240 --> 00:24:58,400
into table

00:24:55,440 --> 00:24:59,600
and when the downgrading came it dropped

00:24:58,400 --> 00:25:02,159
the table

00:24:59,600 --> 00:25:04,240
so by the time i went back for an s

00:25:02,159 --> 00:25:06,559
asking me for how many migrations

00:25:04,240 --> 00:25:07,919
he couldn't even find table so this is

00:25:06,559 --> 00:25:11,600
left on purpose

00:25:07,919 --> 00:25:14,640
no existing migration stone and then

00:25:11,600 --> 00:25:17,600
we cannot actually see what

00:25:14,640 --> 00:25:17,600
has happened here

00:25:20,400 --> 00:25:25,440
we can see all the things that would

00:25:22,880 --> 00:25:25,440
have happened

00:25:27,039 --> 00:25:32,320
if we check the log file

00:25:30,559 --> 00:25:33,600
which is there for us a lot of things

00:25:32,320 --> 00:25:35,760
happened

00:25:33,600 --> 00:25:36,720
so most of those critical errors are

00:25:35,760 --> 00:25:39,760
also found

00:25:36,720 --> 00:25:41,600
in your log file and here and there

00:25:39,760 --> 00:25:43,760
many things are locked so if you have

00:25:41,600 --> 00:25:45,360
any doubts about anything

00:25:43,760 --> 00:25:46,720
you can always go back to your log file

00:25:45,360 --> 00:25:49,520
and check out and what's the beautiful

00:25:46,720 --> 00:25:52,240
thing about this the beautiful thing is

00:25:49,520 --> 00:25:53,200
if i need to work on sqlite right now i

00:25:52,240 --> 00:25:56,080
speak with you

00:25:53,200 --> 00:25:57,279
it's very simple so i'll just do the

00:25:56,080 --> 00:26:00,559
nano

00:25:57,279 --> 00:26:04,159
and do the sqlite file

00:26:00,559 --> 00:26:08,320
which is an example i give there

00:26:04,159 --> 00:26:13,200
and maybe i'll just change all this

00:26:08,320 --> 00:26:13,200
i'll just change all this to directory

00:26:15,440 --> 00:26:22,840
pwd i'll change pwd

00:26:19,200 --> 00:26:26,159
to home anywhere i find

00:26:22,840 --> 00:26:38,240
pwd okay so

00:26:26,159 --> 00:26:41,520
i'll basically do this

00:26:38,240 --> 00:26:46,320
hoping everything goes on fine

00:26:41,520 --> 00:26:50,320
and i shouldn't face any problem

00:26:46,320 --> 00:26:50,320
and and that is it

00:26:50,840 --> 00:26:56,880
so once i do this and i do

00:26:53,760 --> 00:27:00,000
p s i activate that

00:26:56,880 --> 00:27:04,159
act with that shell script basically

00:27:00,000 --> 00:27:06,880
once i do this if i do python manage.py

00:27:04,159 --> 00:27:08,880
and do dash h everything is fine it

00:27:06,880 --> 00:27:13,039
should give me the same thing

00:27:08,880 --> 00:27:16,000
and you would realize hopefully

00:27:13,039 --> 00:27:17,600
that there should be something in this

00:27:16,000 --> 00:27:21,200
location

00:27:17,600 --> 00:27:24,000
hopefully i said there is nothing there

00:27:21,200 --> 00:27:25,360
unfortunately there is nothing hopeful

00:27:24,000 --> 00:27:28,760
about it

00:27:25,360 --> 00:27:32,880
okay so i'll do python

00:27:28,760 --> 00:27:35,360
manage.py initialize i

00:27:32,880 --> 00:27:36,320
and if i go back and check now the file

00:27:35,360 --> 00:27:39,840
now exists

00:27:36,320 --> 00:27:45,279
it has been initialized so i could

00:27:39,840 --> 00:27:49,279
do my migration as many as i can

00:27:45,279 --> 00:27:50,799
without issues and ask for these status

00:27:49,279 --> 00:27:53,440
results from migration that has been

00:27:50,799 --> 00:27:57,520
done and having migrated

00:27:53,440 --> 00:27:57,919
so i can upgrade ask for the status

00:27:57,520 --> 00:28:00,399
again

00:27:57,919 --> 00:28:02,000
everything has been done and how many

00:28:00,399 --> 00:28:05,039
are they they are four so i want to

00:28:02,000 --> 00:28:06,480
downgrade the first three and ask for

00:28:05,039 --> 00:28:08,240
the status

00:28:06,480 --> 00:28:10,240
it downgrades the first three even

00:28:08,240 --> 00:28:12,480
without checking out anything

00:28:10,240 --> 00:28:13,279
so what i can do in this instance is to

00:28:12,480 --> 00:28:17,919
go to this

00:28:13,279 --> 00:28:17,919
location and check out these files

00:28:19,200 --> 00:28:26,000
these files are resident on the system

00:28:22,640 --> 00:28:28,320
and if you do a cut in them or

00:28:26,000 --> 00:28:29,679
you use the means by which you have

00:28:28,320 --> 00:28:32,240
embedded maybe

00:28:29,679 --> 00:28:32,240
python

00:28:32,799 --> 00:28:39,919
manager py dash b

00:28:36,320 --> 00:28:41,440
one the first one b2

00:28:39,919 --> 00:28:43,840
so what was happening when i was doing

00:28:41,440 --> 00:28:45,440
migration migrate upgrade migrate

00:28:43,840 --> 00:28:47,919
upgrade so what it does in that

00:28:45,440 --> 00:28:49,360
instance is very simple it will just

00:28:47,919 --> 00:28:52,480
create an instant

00:28:49,360 --> 00:28:53,440
an insert based on the time into the

00:28:52,480 --> 00:28:56,960
table

00:28:53,440 --> 00:28:59,760
and and keep it like that expecting you

00:28:56,960 --> 00:29:02,320
to add your own code to this part

00:28:59,760 --> 00:29:03,600
or your comments and expecting your boy

00:29:02,320 --> 00:29:05,440
situation whereby

00:29:03,600 --> 00:29:07,120
you didn't add those and then you came

00:29:05,440 --> 00:29:09,919
back and then you do

00:29:07,120 --> 00:29:10,559
an upgrade so if you just add these

00:29:09,919 --> 00:29:12,799
places

00:29:10,559 --> 00:29:14,559
here that's why nothing was feeling

00:29:12,799 --> 00:29:17,840
basically

00:29:14,559 --> 00:29:18,320
so having done that i switched from

00:29:17,840 --> 00:29:21,360
doing

00:29:18,320 --> 00:29:23,120
post rescue to my skm to sqlite

00:29:21,360 --> 00:29:24,880
so i want to switch back to my post

00:29:23,120 --> 00:29:28,640
rescue

00:29:24,880 --> 00:29:32,640
and right now python

00:29:28,640 --> 00:29:32,640
so i want to do something i want to

00:29:32,720 --> 00:29:41,840
i want to

00:29:49,520 --> 00:29:55,840
okay let's see

00:29:59,039 --> 00:30:06,000
so the directory this still exists

00:30:02,799 --> 00:30:09,120
so what happened is if i do

00:30:06,000 --> 00:30:12,880
i'd like to activate that

00:30:09,120 --> 00:30:16,399
that those command variables once more

00:30:12,880 --> 00:30:20,159
so if i do python my dot gy

00:30:16,399 --> 00:30:23,679
s now it everything

00:30:20,159 --> 00:30:26,960
is assists as it is so um

00:30:23,679 --> 00:30:30,000
dash h and i

00:30:26,960 --> 00:30:33,200
do and i

00:30:30,000 --> 00:30:33,200
i go back to that

00:30:34,840 --> 00:30:40,880
directory all these guys are back up

00:30:37,200 --> 00:30:40,880
they weren't here before

00:30:41,440 --> 00:30:50,080
they know we now have a file

00:30:44,799 --> 00:30:52,080
all right do dash yes

00:30:50,080 --> 00:30:54,559
it shows me that migration is done the

00:30:52,080 --> 00:30:55,760
first one so what i did basically that

00:30:54,559 --> 00:30:57,679
time was to clear up

00:30:55,760 --> 00:30:59,519
all the things i had since i had only

00:30:57,679 --> 00:31:02,559
downgraded and used everything

00:30:59,519 --> 00:31:04,399
i started afresh so at this point

00:31:02,559 --> 00:31:06,640
i would confidently say that i've done

00:31:04,399 --> 00:31:10,000
the i m u d

00:31:06,640 --> 00:31:13,120
r f s n y b k

00:31:10,000 --> 00:31:14,240
p v and h those are the options that we

00:31:13,120 --> 00:31:19,840
have

00:31:14,240 --> 00:31:19,840

YouTube URL: https://www.youtube.com/watch?v=WCTs638V5_o


