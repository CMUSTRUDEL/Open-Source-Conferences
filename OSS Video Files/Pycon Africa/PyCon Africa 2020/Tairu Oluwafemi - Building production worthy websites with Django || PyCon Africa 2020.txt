Title: Tairu Oluwafemi - Building production worthy websites with Django || PyCon Africa 2020
Publication date: 2020-08-28
Playlist: PyCon Africa 2020
Description: 
	The goal of every solution is deployment for use by individuals. Making that website you have built live and use-able by millions of people has to have some criteria and implementation in place. How can your website be production-worthy?

Use-able apps must have met some certain criteria to work perfectly in production

- Security
- Usability
- Code / Query optimization
- Scalability e.t.c are all key points to discuss and check before you deploy to production. e.t.c

I will be sharing with you what to focus on when building an app for deployment to any cloud hosting platform (i.e production-worthy Django Applications).
Captions: 
	00:00:14,000 --> 00:00:17,680
ah

00:00:14,400 --> 00:00:21,359
good morning good morning cool

00:00:17,680 --> 00:00:23,600
okay um good morning everyone um

00:00:21,359 --> 00:00:24,800
i'm talking to you today on uh unique

00:00:23,600 --> 00:00:28,080
production what the

00:00:24,800 --> 00:00:31,359
applications with django

00:00:28,080 --> 00:00:32,880
a little bit myself um

00:00:31,359 --> 00:00:34,399
currently a cloud developer part b

00:00:32,880 --> 00:00:38,160
timeline

00:00:34,399 --> 00:00:40,879
this admin alone is a cloud

00:00:38,160 --> 00:00:42,840
called solution or cloud um service all

00:00:40,879 --> 00:00:44,719
sorts and

00:00:42,840 --> 00:00:46,399
um you want to follow me on twitter my

00:00:44,719 --> 00:00:47,039
two thousand days on the score in my son

00:00:46,399 --> 00:00:50,160
that's called

00:00:47,039 --> 00:00:51,520
um that's me on gtop in my ex

00:00:50,160 --> 00:00:53,360
and of course this is this is the

00:00:51,520 --> 00:00:56,879
official introduction

00:00:53,360 --> 00:00:58,800
because then iman has manifested

00:00:56,879 --> 00:01:01,440
you human actually we don't have many

00:00:58,800 --> 00:01:02,239
pieces um so apart from being a cloud

00:01:01,440 --> 00:01:05,680
developer

00:01:02,239 --> 00:01:07,600
um also a software

00:01:05,680 --> 00:01:08,720
developer i do most of the software

00:01:07,600 --> 00:01:11,360
development

00:01:08,720 --> 00:01:12,000
mostly python jungle and i'll be talking

00:01:11,360 --> 00:01:14,799
to you today

00:01:12,000 --> 00:01:17,680
on some of the experiences i've had as a

00:01:14,799 --> 00:01:17,680
jungle developer

00:01:18,159 --> 00:01:22,000
so uh being in production what the

00:01:20,880 --> 00:01:26,159
website will have

00:01:22,000 --> 00:01:28,880
with django is all about

00:01:26,159 --> 00:01:31,280
um knowing um what and what to do or

00:01:28,880 --> 00:01:32,799
what checklists are

00:01:31,280 --> 00:01:34,799
before you actually deployed and go

00:01:32,799 --> 00:01:36,560
hacks to production and why is this

00:01:34,799 --> 00:01:38,640
necessary this is necessary for various

00:01:36,560 --> 00:01:40,640
reasons some of which i'll share today

00:01:38,640 --> 00:01:42,320
and then at the end of the day you have

00:01:40,640 --> 00:01:44,720
gone through

00:01:42,320 --> 00:01:46,159
um the checklist for what your what

00:01:44,720 --> 00:01:49,439
qualities your app

00:01:46,159 --> 00:01:52,960
or application should have before its

00:01:49,439 --> 00:01:54,960
jungle production award so when talking

00:01:52,960 --> 00:01:57,200
about production production is

00:01:54,960 --> 00:01:59,280
one of the process or steps in the

00:01:57,200 --> 00:02:02,799
software release lifecycle

00:01:59,280 --> 00:02:05,520
um brief um explanation on that um

00:02:02,799 --> 00:02:06,479
software this life cycle or cycle is

00:02:05,520 --> 00:02:08,959
just the stages

00:02:06,479 --> 00:02:09,599
or from development of a particular

00:02:08,959 --> 00:02:13,040
software

00:02:09,599 --> 00:02:16,239
to good option so

00:02:13,040 --> 00:02:17,120
this cycle ranges from organizations to

00:02:16,239 --> 00:02:19,520
individuals and

00:02:17,120 --> 00:02:21,599
likes some persons may have just a few

00:02:19,520 --> 00:02:26,400
steps and then others

00:02:21,599 --> 00:02:26,400
more than just three or four so um

00:02:26,720 --> 00:02:31,200
and i don't realize that we have um the

00:02:30,000 --> 00:02:33,599
software moving from

00:02:31,200 --> 00:02:34,959
what we call the pre-alpha then to be

00:02:33,599 --> 00:02:38,000
how far the better

00:02:34,959 --> 00:02:40,800
and risk candidates and then production

00:02:38,000 --> 00:02:42,319
maybe other steps in this cycle that is

00:02:40,800 --> 00:02:45,200
actually not included yet

00:02:42,319 --> 00:02:47,040
some organizations have one better two

00:02:45,200 --> 00:02:48,800
and maybe some other stages before they

00:02:47,040 --> 00:02:51,200
actually get the production

00:02:48,800 --> 00:02:53,680
so when you're talking about a software

00:02:51,200 --> 00:02:55,920
that is in production it's just

00:02:53,680 --> 00:02:57,360
that moment when you just actually make

00:02:55,920 --> 00:03:00,480
your website available

00:02:57,360 --> 00:03:03,440
easier so you may be a freelance

00:03:00,480 --> 00:03:06,959
developer just one video you have this

00:03:03,440 --> 00:03:08,400
um you have this website for yourself

00:03:06,959 --> 00:03:11,440
your personal website

00:03:08,400 --> 00:03:14,640
and your own system it's all

00:03:11,440 --> 00:03:17,120
localhost with your pods it's if it's a

00:03:14,640 --> 00:03:19,680
thousand or something that you own your

00:03:17,120 --> 00:03:22,720
system the moment you decide to host it

00:03:19,680 --> 00:03:25,760
on error cool or you host it on aws or

00:03:22,720 --> 00:03:26,319
google cloud and if you do the access to

00:03:25,760 --> 00:03:28,879
use it

00:03:26,319 --> 00:03:30,840
then it becomes an happening production

00:03:28,879 --> 00:03:33,599
so what we'll be talking about today

00:03:30,840 --> 00:03:35,120
is what should your jungle have have

00:03:33,599 --> 00:03:36,480
before he gets to production

00:03:35,120 --> 00:03:39,519
that's actually what this stuff is going

00:03:36,480 --> 00:03:42,799
to be about so what then is the jungle

00:03:39,519 --> 00:03:45,360
um uh what is django actually

00:03:42,799 --> 00:03:46,879
um jungle is the python framework and

00:03:45,360 --> 00:03:48,720
for most people when i want to describe

00:03:46,879 --> 00:03:50,239
what tango is i just tell them

00:03:48,720 --> 00:03:51,840
you can go is the word framework for

00:03:50,239 --> 00:03:53,200
perfection tonight

00:03:51,840 --> 00:03:55,200
and that's coming from the jungle

00:03:53,200 --> 00:03:57,040
headline for some people that's just

00:03:55,200 --> 00:03:58,879
jungle basically it's a web framework

00:03:57,040 --> 00:04:02,000
that allows you to build

00:03:58,879 --> 00:04:04,239
web applications with python now unlike

00:04:02,000 --> 00:04:07,040
hold our website python

00:04:04,239 --> 00:04:08,000
example comes with all of or most of the

00:04:07,040 --> 00:04:10,560
things you would need

00:04:08,000 --> 00:04:10,560
packages

00:04:11,360 --> 00:04:17,759
as it is so you're ready to go

00:04:15,439 --> 00:04:19,440
immediately you install the application

00:04:17,759 --> 00:04:20,959
though for you to get to production

00:04:19,440 --> 00:04:22,960
you might have to switch some things or

00:04:20,959 --> 00:04:25,120
hide some things and that's what we're

00:04:22,960 --> 00:04:27,199
talking about today

00:04:25,120 --> 00:04:28,400
so yeah what's there is a production

00:04:27,199 --> 00:04:32,000
application checklist

00:04:28,400 --> 00:04:35,440
which is what we have to do before

00:04:32,000 --> 00:04:36,960
our application gets to production

00:04:35,440 --> 00:04:39,919
so i have a couple of checklists here

00:04:36,960 --> 00:04:42,160
the first one is design your settings

00:04:39,919 --> 00:04:43,440
and then we're going to check pressure

00:04:42,160 --> 00:04:45,759
performance

00:04:43,440 --> 00:04:46,479
and security nothing in an area

00:04:45,759 --> 00:04:49,520
reporting

00:04:46,479 --> 00:04:51,600
then cipd which is continuous activation

00:04:49,520 --> 00:04:53,919
and continuous development or

00:04:51,600 --> 00:04:56,160
deployment so we're just going to go

00:04:53,919 --> 00:04:58,960
through this checklist and

00:04:56,160 --> 00:05:00,720
i hope that everything will be able to

00:04:58,960 --> 00:05:03,520
take

00:05:00,720 --> 00:05:04,320
just downgrade from its beer

00:05:03,520 --> 00:05:07,440
installation

00:05:04,320 --> 00:05:08,880
to a hack that is production worthy so

00:05:07,440 --> 00:05:10,639
first of all jungle second

00:05:08,880 --> 00:05:12,320
so jumbo comes with just about

00:05:10,639 --> 00:05:14,320
everything you need so when you do

00:05:12,320 --> 00:05:15,440
a normal jungle installation and you

00:05:14,320 --> 00:05:17,199
just switch to

00:05:15,440 --> 00:05:18,639
a good environment when you do a normal

00:05:17,199 --> 00:05:21,199
jungle installation

00:05:18,639 --> 00:05:22,320
your settings may look something similar

00:05:21,199 --> 00:05:25,759
to this

00:05:22,320 --> 00:05:27,120
where you um this directory install app

00:05:25,759 --> 00:05:30,720
may do yeah

00:05:27,120 --> 00:05:33,919
um options for authentication

00:05:30,720 --> 00:05:36,720
language time zones static urls

00:05:33,919 --> 00:05:38,800
you would have a cpc of course and maybe

00:05:36,720 --> 00:05:42,080
some of that stuff um it's gonna come

00:05:38,800 --> 00:05:45,120
default with a database connection to

00:05:42,080 --> 00:05:49,280
um sqlite

00:05:45,120 --> 00:05:52,880
or sqlite and um that's just about it

00:05:49,280 --> 00:05:55,440
um django gives you the

00:05:52,880 --> 00:05:58,560
ability to quickly do a check on the

00:05:55,440 --> 00:06:00,319
application to see if it is put

00:05:58,560 --> 00:06:01,600
and you can do that by just saying

00:06:00,319 --> 00:06:05,360
python manager pi

00:06:01,600 --> 00:06:08,319
check dash deploy so yeah i have this

00:06:05,360 --> 00:06:08,960
dance application here specifically for

00:06:08,319 --> 00:06:11,120
this talk

00:06:08,960 --> 00:06:12,639
and i'm just going to quickly run this

00:06:11,120 --> 00:06:16,639
command

00:06:12,639 --> 00:06:19,840
on this channel application check

00:06:16,639 --> 00:06:20,720
dashboards deploy so when i run this i'm

00:06:19,840 --> 00:06:24,080
using

00:06:20,720 --> 00:06:26,639
yeah i'm using the dev settings for

00:06:24,080 --> 00:06:28,639
this check for starters so this

00:06:26,639 --> 00:06:29,759
basically contains the normal default

00:06:28,639 --> 00:06:32,400
jungle

00:06:29,759 --> 00:06:33,360
settings and some few stuff um i'm still

00:06:32,400 --> 00:06:36,720
having those

00:06:33,360 --> 00:06:38,240
css too um i've installed some couple of

00:06:36,720 --> 00:06:41,520
apps and that's downloaded

00:06:38,240 --> 00:06:43,199
back and then i started this a lot of

00:06:41,520 --> 00:06:44,240
design my environment varies which i

00:06:43,199 --> 00:06:47,840
already have

00:06:44,240 --> 00:06:50,160
installed i'm using a catch

00:06:47,840 --> 00:06:52,319
using um jungle iq although that's not

00:06:50,160 --> 00:06:53,759
really implemented here

00:06:52,319 --> 00:06:55,520
so that's basically what i have in my

00:06:53,759 --> 00:06:58,479
dev session so i'm just going to

00:06:55,520 --> 00:07:00,080
go ahead and run this and then that's

00:06:58,479 --> 00:07:02,000
going to think about it

00:07:00,080 --> 00:07:03,520
comes with all of this one in saying hey

00:07:02,000 --> 00:07:05,680
you

00:07:03,520 --> 00:07:06,800
ready to be deployed the first thing is

00:07:05,680 --> 00:07:08,880
saying security

00:07:06,800 --> 00:07:10,319
um you have to accept this lesson keep

00:07:08,880 --> 00:07:12,639
your hdfs account

00:07:10,319 --> 00:07:14,080
um another security one name another and

00:07:12,639 --> 00:07:17,759
another and then

00:07:14,080 --> 00:07:20,560
the deployment is just left to true and

00:07:17,759 --> 00:07:21,680
secure referral policy so this jungle is

00:07:20,560 --> 00:07:24,160
telling you already that

00:07:21,680 --> 00:07:24,800
this is not fit to be deployed we're

00:07:24,160 --> 00:07:26,400
gonna go over

00:07:24,800 --> 00:07:28,479
all of the settings and what they mean

00:07:26,400 --> 00:07:32,960
and which one we should have

00:07:28,479 --> 00:07:32,960
installed for a production um

00:07:33,520 --> 00:07:37,039
so i'm just going to talk a little bit

00:07:35,360 --> 00:07:39,520
about the setup i have here

00:07:37,039 --> 00:07:40,720
so you see i have this configuration for

00:07:39,520 --> 00:07:44,080
my application

00:07:40,720 --> 00:07:46,319
um this is currently all started on q um

00:07:44,080 --> 00:07:47,599
maybe after my talk under the link to

00:07:46,319 --> 00:07:49,280
this on gta

00:07:47,599 --> 00:07:52,800
or you can just find it yourself um just

00:07:49,280 --> 00:07:55,840
go to your max then python africa 2020.

00:07:52,800 --> 00:07:58,800
so i have the biz before jungle settings

00:07:55,840 --> 00:07:59,199
uh of course this is the portfolio that

00:07:58,800 --> 00:08:01,120
is the

00:07:59,199 --> 00:08:02,720
application which is spike on that name

00:08:01,120 --> 00:08:05,599
icon and

00:08:02,720 --> 00:08:08,080
if something is noticed here is a place

00:08:05,599 --> 00:08:11,120
all of my apps in the folder called apps

00:08:08,080 --> 00:08:12,400
now i've done this because um infusion

00:08:11,120 --> 00:08:14,160
is basically what i've learned

00:08:12,400 --> 00:08:16,080
is at the end of the video when you're

00:08:14,160 --> 00:08:16,720
getting junk up and you may end up

00:08:16,080 --> 00:08:18,560
having

00:08:16,720 --> 00:08:20,080
multiple hearts depending on how large

00:08:18,560 --> 00:08:22,479
application is

00:08:20,080 --> 00:08:23,599
if you keep that on the unit folder at

00:08:22,479 --> 00:08:25,039
the point you'll be having

00:08:23,599 --> 00:08:27,280
multiple folders and then it'll be

00:08:25,039 --> 00:08:30,319
difficult for you to switch

00:08:27,280 --> 00:08:32,640
so um most times for me i always put all

00:08:30,319 --> 00:08:34,800
of my apps on the ice and before that

00:08:32,640 --> 00:08:36,000
just to make sure that everything is is

00:08:34,800 --> 00:08:40,000
right

00:08:36,000 --> 00:08:42,719
so this is just um

00:08:40,000 --> 00:08:43,360
and i have normal statistic files i'm

00:08:42,719 --> 00:08:46,480
cheating

00:08:43,360 --> 00:08:48,720
of course and then travis for the icd

00:08:46,480 --> 00:08:50,320
i'll explain that

00:08:48,720 --> 00:08:52,839
and then some couple of weather fold and

00:08:50,320 --> 00:08:55,120
of course the manager fi

00:08:52,839 --> 00:08:56,880
so i'm going to see which and which we

00:08:55,120 --> 00:09:00,160
made for production

00:08:56,880 --> 00:09:02,000
so first of all the uh the

00:09:00,160 --> 00:09:04,000
one of the important settings uh for

00:09:02,000 --> 00:09:06,800
django is your secret key

00:09:04,000 --> 00:09:08,399
so your secret key is supposed to be a

00:09:06,800 --> 00:09:10,560
random giveaway that

00:09:08,399 --> 00:09:11,839
um most of the time you are not using

00:09:10,560 --> 00:09:14,080
suppose you're not

00:09:11,839 --> 00:09:15,440
supposed to be able to stay here at any

00:09:14,080 --> 00:09:17,120
point in time it's supposed to be a

00:09:15,440 --> 00:09:19,440
random strange

00:09:17,120 --> 00:09:22,399
so then it gives you a default and

00:09:19,440 --> 00:09:23,839
yourself something similar to this

00:09:22,399 --> 00:09:26,000
this is not something i don't i don't

00:09:23,839 --> 00:09:28,080
know um especially if you are ah you

00:09:26,000 --> 00:09:30,399
shake off your brain or so far

00:09:28,080 --> 00:09:32,000
i can't actually um say this without

00:09:30,399 --> 00:09:33,760
looking at it so it's supposed to be a

00:09:32,000 --> 00:09:37,120
really really random

00:09:33,760 --> 00:09:38,560
strange uh this is very important

00:09:37,120 --> 00:09:42,160
because you're not you're supposed to

00:09:38,560 --> 00:09:44,320
let this out to be um to your users or

00:09:42,160 --> 00:09:45,519
anybody nobody's supposed to have access

00:09:44,320 --> 00:09:48,720
to this

00:09:45,519 --> 00:09:49,200
typically and that's it so the next one

00:09:48,720 --> 00:09:52,000
is

00:09:49,200 --> 00:09:52,640
the debug so the box is a setting that

00:09:52,000 --> 00:09:55,040
has to be

00:09:52,640 --> 00:09:55,920
that has a brilliant value without you

00:09:55,040 --> 00:09:59,279
of course

00:09:55,920 --> 00:10:02,320
so when you're the boss is true then

00:09:59,279 --> 00:10:03,040
that means you're currently in the box

00:10:02,320 --> 00:10:06,320
stage

00:10:03,040 --> 00:10:09,680
when it's forced then that's the product

00:10:06,320 --> 00:10:11,440
so most of the time you see that's what

00:10:09,680 --> 00:10:13,760
this jungle is actually logging here it

00:10:11,440 --> 00:10:15,760
says on this case line you said you

00:10:13,760 --> 00:10:17,519
you should not have the box that you

00:10:15,760 --> 00:10:19,360
choose in deployment

00:10:17,519 --> 00:10:21,040
and that's very important for multiple

00:10:19,360 --> 00:10:24,240
reasons actually one of those reasons

00:10:21,040 --> 00:10:24,640
is if your user say for instance um this

00:10:24,240 --> 00:10:26,959
is

00:10:24,640 --> 00:10:29,120
a page that is not found say for example

00:10:26,959 --> 00:10:30,240
this and then it says this link does not

00:10:29,120 --> 00:10:33,440
exist of course

00:10:30,240 --> 00:10:35,440
like you can get this nice looking stage

00:10:33,440 --> 00:10:37,680
of course this looks cool and very very

00:10:35,440 --> 00:10:40,640
beautiful and dangerous done a good job

00:10:37,680 --> 00:10:42,320
spinning this up but this is not going

00:10:40,640 --> 00:10:46,079
to be seen by users because

00:10:42,320 --> 00:10:47,760
if you are if your user is someone who

00:10:46,079 --> 00:10:49,920
doesn't code

00:10:47,760 --> 00:10:52,000
he or she's already lost it doesn't know

00:10:49,920 --> 00:10:54,640
what exactly is going on here i mean

00:10:52,000 --> 00:10:55,200
what what exactly says and interpreting

00:10:54,640 --> 00:10:56,959
codes

00:10:55,200 --> 00:10:58,959
you're already giving out information

00:10:56,959 --> 00:11:01,600
about your page

00:10:58,959 --> 00:11:03,279
or your website that is not used to help

00:11:01,600 --> 00:11:04,640
and another reason why you have to say i

00:11:03,279 --> 00:11:05,279
see the box of course when i go into

00:11:04,640 --> 00:11:07,760
production

00:11:05,279 --> 00:11:08,560
is take for example this one here i've

00:11:07,760 --> 00:11:10,399
i've

00:11:08,560 --> 00:11:12,560
i've actually played some hero in my

00:11:10,399 --> 00:11:14,720
code and i tried to run this

00:11:12,560 --> 00:11:16,240
and of course you get this nice

00:11:14,720 --> 00:11:18,720
beautiful looking page

00:11:16,240 --> 00:11:19,360
but then again the only thing about this

00:11:18,720 --> 00:11:22,320
is

00:11:19,360 --> 00:11:23,360
because it is the body set to choose

00:11:22,320 --> 00:11:25,760
danger gives you

00:11:23,360 --> 00:11:26,800
just about everything you have in your

00:11:25,760 --> 00:11:29,360
settings

00:11:26,800 --> 00:11:29,839
so all of your passports your server

00:11:29,360 --> 00:11:31,920
access

00:11:29,839 --> 00:11:33,680
and easily your secret key is all logged

00:11:31,920 --> 00:11:34,720
here so imagine just going into

00:11:33,680 --> 00:11:37,440
production

00:11:34,720 --> 00:11:37,760
and then anybody anywhere can tamper

00:11:37,440 --> 00:11:39,839
with

00:11:37,760 --> 00:11:41,120
your application and this stuff can

00:11:39,839 --> 00:11:43,040
actually be supposed to do

00:11:41,120 --> 00:11:45,440
so for every single time you're trying

00:11:43,040 --> 00:11:47,920
to deploy an application

00:11:45,440 --> 00:11:49,200
to production you should always make

00:11:47,920 --> 00:11:51,200
sure

00:11:49,200 --> 00:11:52,240
it's of course that's actually very

00:11:51,200 --> 00:11:55,200
important

00:11:52,240 --> 00:11:57,519
now the next one is so allow those is

00:11:55,200 --> 00:12:02,720
just to cater for security with

00:11:57,519 --> 00:12:04,639
um quest site um referencing that cfrs

00:12:02,720 --> 00:12:08,079
just to make sure that only some

00:12:04,639 --> 00:12:11,360
particular applications can actually

00:12:08,079 --> 00:12:12,480
connect or get into that's your python

00:12:11,360 --> 00:12:16,720
application

00:12:12,480 --> 00:12:21,680
so in um in

00:12:16,720 --> 00:12:23,920
your about settings or in your

00:12:21,680 --> 00:12:26,000
staging or your preview alpha or your

00:12:23,920 --> 00:12:28,079
preset you can always use it as

00:12:26,000 --> 00:12:29,120
aligning just anything which is this

00:12:28,079 --> 00:12:31,040
aesthetic

00:12:29,120 --> 00:12:32,720
but when you're going to production you

00:12:31,040 --> 00:12:37,760
have to have

00:12:32,720 --> 00:12:39,760
a list of allowed domains or subdomains

00:12:37,760 --> 00:12:40,959
here this python application or this

00:12:39,760 --> 00:12:44,000
general application

00:12:40,959 --> 00:12:46,800
is hosted on this domain which

00:12:44,000 --> 00:12:49,600
is coming from google cloud app engine

00:12:46,800 --> 00:12:52,800
so i've recreated just this domain

00:12:49,600 --> 00:12:57,040
and then similar delays

00:12:52,800 --> 00:12:58,720
this basically covers for pw dot or

00:12:57,040 --> 00:13:01,360
this or any other sub domains that i

00:12:58,720 --> 00:13:03,519
added to this so this just ensures that

00:13:01,360 --> 00:13:05,760
whoever is calling this application or

00:13:03,519 --> 00:13:07,760
whatever is calling this application

00:13:05,760 --> 00:13:10,639
it's actually coming from this

00:13:07,760 --> 00:13:13,120
particular domain or sub domain

00:13:10,639 --> 00:13:15,760
next one checklist is databases and

00:13:13,120 --> 00:13:15,760
there's not much

00:13:16,240 --> 00:13:21,839
this connection so the reason why

00:13:23,040 --> 00:13:27,200
um your database system is maybe

00:13:26,639 --> 00:13:29,040
anything

00:13:27,200 --> 00:13:30,880
i've not really seen anybody using

00:13:29,040 --> 00:13:32,560
sqlite in production but of course you

00:13:30,880 --> 00:13:34,000
have some this is where you have to use

00:13:32,560 --> 00:13:35,680
some sqlite

00:13:34,000 --> 00:13:37,279
but one thing i really want to mention

00:13:35,680 --> 00:13:39,600
is mass connection age

00:13:37,279 --> 00:13:41,279
this is only included in the reports and

00:13:39,600 --> 00:13:43,519
the settings of course but

00:13:41,279 --> 00:13:44,959
accept this for specific reasons say for

00:13:43,519 --> 00:13:48,959
example you want an application

00:13:44,959 --> 00:13:52,000
where database calls has to be made

00:13:48,959 --> 00:13:54,800
is in the space of seconds

00:13:52,000 --> 00:13:56,800
like concurrence database a calls at the

00:13:54,800 --> 00:13:59,360
same time

00:13:56,800 --> 00:14:01,199
with space of seconds or minutes then

00:13:59,360 --> 00:14:02,079
you might want to add this connection

00:14:01,199 --> 00:14:03,680
actually

00:14:02,079 --> 00:14:05,760
so django knows you're supposed to keep

00:14:03,680 --> 00:14:07,279
the connection open so when you're

00:14:05,760 --> 00:14:09,120
actually trying to do the call you start

00:14:07,279 --> 00:14:10,000
trying to sort of like call this guy

00:14:09,120 --> 00:14:13,040
again and then

00:14:10,000 --> 00:14:14,000
they like or they there's time spent

00:14:13,040 --> 00:14:15,839
trying to connect

00:14:14,000 --> 00:14:17,199
or trying to access that database before

00:14:15,839 --> 00:14:18,959
you actually get that

00:14:17,199 --> 00:14:20,480
and the only thing this does basically

00:14:18,959 --> 00:14:21,920
is to improve performance of your

00:14:20,480 --> 00:14:23,360
production application and make sure

00:14:21,920 --> 00:14:24,880
that whatever you're pulling out from

00:14:23,360 --> 00:14:28,800
your batteries

00:14:24,880 --> 00:14:30,959
is fast to your users

00:14:28,800 --> 00:14:32,800
the next one is static root and media

00:14:30,959 --> 00:14:35,920
url so by default

00:14:32,800 --> 00:14:39,440
as i've done here in product um in your

00:14:35,920 --> 00:14:42,320
own um environment for testing

00:14:39,440 --> 00:14:43,600
have your static applications or your

00:14:42,320 --> 00:14:45,839
static files

00:14:43,600 --> 00:14:46,639
yeah in your holder and just have it

00:14:45,839 --> 00:14:50,160
bonded with

00:14:46,639 --> 00:14:52,560
your application but for production

00:14:50,160 --> 00:14:53,680
you have to make sure that other advice

00:14:52,560 --> 00:14:56,639
by jungle and

00:14:53,680 --> 00:14:58,480
for cool security reasons and as well as

00:14:56,639 --> 00:15:00,399
performance you have to make sure

00:14:58,480 --> 00:15:02,720
that this separates from your jungle

00:15:00,399 --> 00:15:03,440
server so what i've done here is i've

00:15:02,720 --> 00:15:06,880
used

00:15:03,440 --> 00:15:08,639
courageous is a wi-fi um plugin

00:15:06,880 --> 00:15:10,240
i've set up each angle storages i've

00:15:08,639 --> 00:15:14,000
connected this

00:15:10,240 --> 00:15:15,760
to a bucket in google cloud so i created

00:15:14,000 --> 00:15:19,360
the bucket

00:15:15,760 --> 00:15:22,199
here and of course you would need

00:15:19,360 --> 00:15:23,760
a service account key which i behaved

00:15:22,199 --> 00:15:26,399
javascript.json

00:15:23,760 --> 00:15:28,160
and what this basically does is instead

00:15:26,399 --> 00:15:31,600
of using

00:15:28,160 --> 00:15:35,360
this use folder as your static

00:15:31,600 --> 00:15:37,040
um file um you make use of jungle stages

00:15:35,360 --> 00:15:39,040
so when you do a python manager file

00:15:37,040 --> 00:15:39,759
collect fabric remove all of your static

00:15:39,040 --> 00:15:42,399
files

00:15:39,759 --> 00:15:42,800
to the bucket like you could actually

00:15:42,399 --> 00:15:46,639
use

00:15:42,800 --> 00:15:49,120
um aws s3 block f2 for

00:15:46,639 --> 00:15:50,720
your cloud so it needs all of this

00:15:49,120 --> 00:15:53,759
static applications there

00:15:50,720 --> 00:15:56,639
and then the cool thing about that this

00:15:53,759 --> 00:15:58,639
static files are not um present for your

00:15:56,639 --> 00:15:59,279
um on bonded with your application files

00:15:58,639 --> 00:16:02,480
is

00:15:59,279 --> 00:16:04,240
you can also make use of cdn segments

00:16:02,480 --> 00:16:07,040
just contact the with network and what

00:16:04,240 --> 00:16:09,120
this does is just to ensure that

00:16:07,040 --> 00:16:10,880
some of the calls to the static files

00:16:09,120 --> 00:16:14,959
are actually linked

00:16:10,880 --> 00:16:17,040
so that again in calling increase

00:16:14,959 --> 00:16:18,959
of your general application and make

00:16:17,040 --> 00:16:21,360
sure that requests for static files

00:16:18,959 --> 00:16:23,519
actually come much more quicker than it

00:16:21,360 --> 00:16:26,639
should on and on

00:16:23,519 --> 00:16:27,920
so yeah i've actually made use of google

00:16:26,639 --> 00:16:32,000
cloud sorry about that

00:16:27,920 --> 00:16:35,360
i did some minor configurations where

00:16:32,000 --> 00:16:37,199
i started ip address of course and then

00:16:35,360 --> 00:16:40,079
i will conserve this

00:16:37,199 --> 00:16:40,079
using um

00:16:41,040 --> 00:16:44,880
uh hidden at the back of the load

00:16:42,480 --> 00:16:45,759
balancer of course you might not have

00:16:44,880 --> 00:16:47,680
goal of this

00:16:45,759 --> 00:16:48,800
or it may be simpler on all other

00:16:47,680 --> 00:16:50,720
platforms

00:16:48,800 --> 00:16:53,199
take for example aws you just have to

00:16:50,720 --> 00:16:56,560
connect your xv button to

00:16:53,199 --> 00:16:58,720
a cloud front that's the juice that

00:16:56,560 --> 00:17:01,519
you're actually supposed to host all of

00:16:58,720 --> 00:17:04,720
your start files

00:17:01,519 --> 00:17:05,280
defined um or you have to put them in a

00:17:04,720 --> 00:17:08,000
different

00:17:05,280 --> 00:17:10,160
uh server or spend differently from

00:17:08,000 --> 00:17:12,079
where you have your channel application

00:17:10,160 --> 00:17:13,360
then you can actually go the extra

00:17:12,079 --> 00:17:18,880
amount to

00:17:13,360 --> 00:17:21,839
position the tv for that classification

00:17:18,880 --> 00:17:24,000
so the next one on the jungle settings

00:17:21,839 --> 00:17:27,039
is actually https

00:17:24,000 --> 00:17:29,039
so when you're running on your localhost

00:17:27,039 --> 00:17:31,039
you don't have to worry about this vps

00:17:29,039 --> 00:17:33,120
you just do look house

00:17:31,039 --> 00:17:34,320
and then part and then normally you're

00:17:33,120 --> 00:17:36,400
good to go but

00:17:34,320 --> 00:17:39,039
when you're taking this to production it

00:17:36,400 --> 00:17:42,480
is important for you to

00:17:39,039 --> 00:17:45,360
experience configure to ensure that

00:17:42,480 --> 00:17:46,559
some extent nobody can break or

00:17:45,360 --> 00:17:48,160
intercept

00:17:46,559 --> 00:17:50,720
request for instance from the client

00:17:48,160 --> 00:17:52,480
screen server and that's why https

00:17:50,720 --> 00:17:53,760
is very important it doesn't now

00:17:52,480 --> 00:17:56,720
actually even rank

00:17:53,760 --> 00:17:58,080
um sites that have https that source

00:17:56,720 --> 00:18:01,039
application

00:17:58,080 --> 00:18:03,600
more than the sites that don't have that

00:18:01,039 --> 00:18:06,480
so yeah what i've done to ensure that is

00:18:03,600 --> 00:18:07,200
i've made sure that we're using uh we

00:18:06,480 --> 00:18:09,280
are forcing

00:18:07,200 --> 00:18:10,480
unnecessary direct so if you achieve

00:18:09,280 --> 00:18:13,120
with a

00:18:10,480 --> 00:18:16,799
particular application using https what

00:18:13,120 --> 00:18:17,840
it does release download i'm going to

00:18:16,799 --> 00:18:21,840
forward you to

00:18:17,840 --> 00:18:24,400
a much more secure um url

00:18:21,840 --> 00:18:25,039
to the back so it sort of like ensures

00:18:24,400 --> 00:18:27,039
that

00:18:25,039 --> 00:18:29,120
and then it's saying oh i have to

00:18:27,039 --> 00:18:31,280
preload or this does basically say oh

00:18:29,120 --> 00:18:33,919
i'm promoting

00:18:31,280 --> 00:18:35,039
this settings for you actually and then

00:18:33,919 --> 00:18:37,440
this is just about if

00:18:35,039 --> 00:18:38,559
i think this is this is a year or you

00:18:37,440 --> 00:18:41,520
can set it to be

00:18:38,559 --> 00:18:42,000
maybe left out or more and this service

00:18:41,520 --> 00:18:45,760
basically

00:18:42,000 --> 00:18:48,320
says for all of the settings of https

00:18:45,760 --> 00:18:49,840
include the same for subdomains so take

00:18:48,320 --> 00:18:51,919
for example if you use

00:18:49,840 --> 00:18:54,240
general sub delays to actually configure

00:18:51,919 --> 00:18:56,880
subdomain for your

00:18:54,240 --> 00:18:59,440
java application which ensures that the

00:18:56,880 --> 00:19:04,240
same settings

00:18:59,440 --> 00:19:07,520
loading applies to some domains you have

00:19:04,240 --> 00:19:10,640
uh so with just few seconds you can

00:19:07,520 --> 00:19:13,200
or you're sure that your jungle

00:19:10,640 --> 00:19:15,039
application is actually forced to use

00:19:13,200 --> 00:19:16,480
https or anybody who's listening to an

00:19:15,039 --> 00:19:19,280
application in production

00:19:16,480 --> 00:19:20,480
it's forced to actually use https next

00:19:19,280 --> 00:19:23,520
one is csi

00:19:20,480 --> 00:19:26,799
yes i have cookie session quickly

00:19:23,520 --> 00:19:28,960
here so this i have to um

00:19:26,799 --> 00:19:29,840
basically settings that you should

00:19:28,960 --> 00:19:32,559
actually enable

00:19:29,840 --> 00:19:33,280
in the jungle production app to make

00:19:32,559 --> 00:19:35,840
sure that

00:19:33,280 --> 00:19:36,720
your cookie or your session cookies

00:19:35,840 --> 00:19:38,400
whatever

00:19:36,720 --> 00:19:40,240
um or which whichever one you're

00:19:38,400 --> 00:19:41,200
actually making use on your hands

00:19:40,240 --> 00:19:46,480
application

00:19:41,200 --> 00:19:49,280
is actually being played https only

00:19:46,480 --> 00:19:52,799
this tool basically ensures that nobody

00:19:49,280 --> 00:19:54,880
or anybody using https

00:19:52,799 --> 00:19:56,559
would not be able to use your cookie or

00:19:54,880 --> 00:19:59,840
transfer your cookie

00:19:56,559 --> 00:20:02,320
idea that goes

00:19:59,840 --> 00:20:04,840
a little bit for that to ensure that

00:20:02,320 --> 00:20:06,080
channels applications are actually

00:20:04,840 --> 00:20:08,400
secure

00:20:06,080 --> 00:20:09,919
another one of the settings which may

00:20:08,400 --> 00:20:10,799
not be composite depending on what

00:20:09,919 --> 00:20:14,080
you're trying to do

00:20:10,799 --> 00:20:15,840
is in your backhand this is just a bunch

00:20:14,080 --> 00:20:17,840
of settings that basically specifies

00:20:15,840 --> 00:20:19,200
what email provider you want to be using

00:20:17,840 --> 00:20:21,520
to send use

00:20:19,200 --> 00:20:23,360
and just a couple of seconds for that i

00:20:21,520 --> 00:20:25,760
have an email host which is

00:20:23,360 --> 00:20:27,200
using this but this doesn't like this

00:20:25,760 --> 00:20:30,960
but this could be

00:20:27,200 --> 00:20:32,000
you know the palette dot com or mail.gov

00:20:30,960 --> 00:20:34,400
with the com

00:20:32,000 --> 00:20:36,159
and then your user which could be taiwa

00:20:34,400 --> 00:20:39,360
kelly at

00:20:36,159 --> 00:20:42,640
icon africa for that python south africa

00:20:39,360 --> 00:20:44,640
something similar but that's like

00:20:42,640 --> 00:20:46,480
you get a gift of what i'm trying to say

00:20:44,640 --> 00:20:49,039
and then your password goes here

00:20:46,480 --> 00:20:50,720
now one thing i want to say is when

00:20:49,039 --> 00:20:54,080
deploying applications to

00:20:50,720 --> 00:20:56,799
production always ensure that um

00:20:54,080 --> 00:20:58,640
any of your passwords or hazards key are

00:20:56,799 --> 00:21:01,120
coded

00:20:58,640 --> 00:21:02,960
this ensures that just in case if you're

00:21:01,120 --> 00:21:05,039
using um or you're pushing this

00:21:02,960 --> 00:21:08,559
repository which sometimes happens

00:21:05,039 --> 00:21:09,280
in case your um this technique gets the

00:21:08,559 --> 00:21:11,200
wrong hand

00:21:09,280 --> 00:21:12,559
they still have access to follow the

00:21:11,200 --> 00:21:15,600
secret keys

00:21:12,559 --> 00:21:18,000
um that's number one and then commute is

00:21:15,600 --> 00:21:20,159
if you have all of your settings

00:21:18,000 --> 00:21:21,440
in a separate um um part of your

00:21:20,159 --> 00:21:23,280
application or

00:21:21,440 --> 00:21:24,799
if you're deciding on you as an

00:21:23,280 --> 00:21:27,520
environment

00:21:24,799 --> 00:21:29,039
on your linux server or whatever you're

00:21:27,520 --> 00:21:32,240
actually trying to use

00:21:29,039 --> 00:21:33,360
then it's easy for you to see up that

00:21:32,240 --> 00:21:35,919
particular key

00:21:33,360 --> 00:21:36,400
or that password say for example if i've

00:21:35,919 --> 00:21:40,080
used

00:21:36,400 --> 00:21:43,360
this for say in two or five other places

00:21:40,080 --> 00:21:46,159
and the password for example that change

00:21:43,360 --> 00:21:46,880
so i have to go and then do a command

00:21:46,159 --> 00:21:48,799
find

00:21:46,880 --> 00:21:50,720
and then start replacing all of those

00:21:48,799 --> 00:21:53,679
places one by one

00:21:50,720 --> 00:21:55,280
right but if you have this same

00:21:53,679 --> 00:21:56,240
environment waiver i mean you just have

00:21:55,280 --> 00:21:58,000
to update one

00:21:56,240 --> 00:21:59,760
and then it's reflecting anywhere

00:21:58,000 --> 00:22:02,240
everywhere so far

00:21:59,760 --> 00:22:03,679
it's actually really easy to see updated

00:22:02,240 --> 00:22:04,799
of this keys if you have them as an

00:22:03,679 --> 00:22:08,159
event

00:22:04,799 --> 00:22:10,559
or saved somewhere else um

00:22:08,159 --> 00:22:11,200
and then i specify the emerald part that

00:22:10,559 --> 00:22:13,120
is used

00:22:11,200 --> 00:22:15,200
cfl you could actually specify that you

00:22:13,120 --> 00:22:19,039
use ssl

00:22:15,200 --> 00:22:22,720
and then again i'm making use of jungles

00:22:19,039 --> 00:22:25,039
um you know for instance in your

00:22:22,720 --> 00:22:27,039
professional library for smtp your

00:22:25,039 --> 00:22:30,400
backend

00:22:27,039 --> 00:22:32,159
and yeah that's it for um email back-end

00:22:30,400 --> 00:22:33,600
then the next one is login i'm gonna

00:22:32,159 --> 00:22:36,240
skip this now because i'm gonna talk

00:22:33,600 --> 00:22:36,240
about login

00:22:38,840 --> 00:22:42,400
um

00:22:40,000 --> 00:22:43,840
next couple of slides and then next one

00:22:42,400 --> 00:22:47,679
is max file upload

00:22:43,840 --> 00:22:48,720
so i actually don't include my max file

00:22:47,679 --> 00:22:51,120
upload in

00:22:48,720 --> 00:22:52,240
some of my jungle applications but this

00:22:51,120 --> 00:22:55,520
changed after

00:22:52,240 --> 00:22:56,559
i witnessed something that was actually

00:22:55,520 --> 00:22:58,960
really i mean

00:22:56,559 --> 00:23:00,720
i had an application in production and

00:22:58,960 --> 00:23:02,000
then people were actually making your

00:23:00,720 --> 00:23:04,320
application

00:23:02,000 --> 00:23:05,520
and then this actually requires that you

00:23:04,320 --> 00:23:07,440
upload

00:23:05,520 --> 00:23:09,280
an image which was an information

00:23:07,440 --> 00:23:12,000
application you have to upload an

00:23:09,280 --> 00:23:14,720
image alongside of that stuff and then

00:23:12,000 --> 00:23:16,799
you just keep getting reports of

00:23:14,720 --> 00:23:18,320
i can upload this i can't do this i can

00:23:16,799 --> 00:23:20,400
do that okay

00:23:18,320 --> 00:23:22,720
this works but if you it checks out in

00:23:20,400 --> 00:23:24,960
that it works perfectly on my postman

00:23:22,720 --> 00:23:26,320
this is either my system in the world

00:23:24,960 --> 00:23:29,360
not knowing that

00:23:26,320 --> 00:23:29,919
the files i was actually uploading was

00:23:29,360 --> 00:23:32,880
actually

00:23:29,919 --> 00:23:35,120
less than about five n years ago and

00:23:32,880 --> 00:23:38,400
then the files they are trying to upload

00:23:35,120 --> 00:23:40,799
in production was up to 10 mb

00:23:38,400 --> 00:23:41,440
which can handle 20 mb and because i

00:23:40,799 --> 00:23:44,720
didn't

00:23:41,440 --> 00:23:46,400
the max file upload higher than

00:23:44,720 --> 00:23:48,559
the fourth mass file update that then

00:23:46,400 --> 00:23:50,480
were allowed so just in case you want to

00:23:48,559 --> 00:23:51,520
be doing anything else to file uploads

00:23:50,480 --> 00:23:53,120
or

00:23:51,520 --> 00:23:55,039
giving users the access to actually

00:23:53,120 --> 00:23:58,320
uploads you want to do this

00:23:55,039 --> 00:24:01,840
um in your jungle it's just in

00:23:58,320 --> 00:24:04,960
specify um file marks um

00:24:01,840 --> 00:24:05,600
if i upload a file upload match file

00:24:04,960 --> 00:24:08,640
upload

00:24:05,600 --> 00:24:12,240
and give that a value depending on how

00:24:08,640 --> 00:24:15,200
much in handy this

00:24:12,240 --> 00:24:16,720
your user should actually upload and

00:24:15,200 --> 00:24:17,600
just in case you're not doing anything

00:24:16,720 --> 00:24:20,320
about this

00:24:17,600 --> 00:24:22,320
feel free to skip back if you're

00:24:20,320 --> 00:24:25,520
actually making use of

00:24:22,320 --> 00:24:27,279
the engine x or any shot you'd have to

00:24:25,520 --> 00:24:29,840
actually make some settings there

00:24:27,279 --> 00:24:31,120
to actually ensure that this works

00:24:29,840 --> 00:24:34,480
perfectly

00:24:31,120 --> 00:24:36,480
so that's it on um django settings so

00:24:34,480 --> 00:24:39,440
what i'm going to do is i'm going to

00:24:36,480 --> 00:24:41,600
and make use of this production settings

00:24:39,440 --> 00:24:44,960
and let's just run that check again

00:24:41,600 --> 00:24:48,159
and see what happens this time so um

00:24:44,960 --> 00:24:49,600
and just just make sure that i change

00:24:48,159 --> 00:24:52,640
all of this um

00:24:49,600 --> 00:24:53,919
environment oh no actually change the

00:24:52,640 --> 00:24:56,320
wrong one

00:24:53,919 --> 00:24:56,320
okay

00:25:04,760 --> 00:25:07,809
[Music]

00:25:20,960 --> 00:25:23,840
that check again

00:25:24,159 --> 00:25:30,640
okay um something

00:25:27,600 --> 00:25:33,360
is not right okay setting instruction

00:25:30,640 --> 00:25:35,919
let me just do this next step is

00:25:33,360 --> 00:25:35,919
manually

00:25:39,360 --> 00:25:44,080
okay okay so yeah that was um we just

00:25:42,159 --> 00:25:46,720
left the

00:25:44,080 --> 00:25:47,679
settings which i didn't include in the

00:25:46,720 --> 00:25:51,120
production

00:25:47,679 --> 00:25:53,279
and that basically skipped my mind but

00:25:51,120 --> 00:25:54,640
have all of the settings set up your

00:25:53,279 --> 00:25:57,840
cool and then

00:25:54,640 --> 00:25:59,600
just this last one and then jungle

00:25:57,840 --> 00:26:01,600
basically validates that okay yeah your

00:25:59,600 --> 00:26:03,520
application is good to go or

00:26:01,600 --> 00:26:04,960
to be deployed although there are still

00:26:03,520 --> 00:26:08,240
other checks you can run

00:26:04,960 --> 00:26:11,440
say for example in modular observable

00:26:08,240 --> 00:26:13,200
i'm going to talk about that later so

00:26:11,440 --> 00:26:14,559
let's go to the next one which is on

00:26:13,200 --> 00:26:16,720
performance

00:26:14,559 --> 00:26:18,400
so um for some time now i've actually

00:26:16,720 --> 00:26:20,799
been

00:26:18,400 --> 00:26:22,080
much more obvious about query

00:26:20,799 --> 00:26:26,000
optimization

00:26:22,080 --> 00:26:29,279
because i believe a lot um

00:26:26,000 --> 00:26:30,799
and janja has done to talk about

00:26:29,279 --> 00:26:34,240
performance here

00:26:30,799 --> 00:26:36,000
i've listed uh all of this um link

00:26:34,240 --> 00:26:37,440
after my slide i'm gonna share a link to

00:26:36,000 --> 00:26:38,080
that so jang has talked about

00:26:37,440 --> 00:26:40,480
performance

00:26:38,080 --> 00:26:42,640
here what you need to do includes how

00:26:40,480 --> 00:26:42,640
you

00:26:42,880 --> 00:26:46,320
how you call the lan or count on your

00:26:45,360 --> 00:26:49,760
query set

00:26:46,320 --> 00:26:50,480
and teaching of course um it has also

00:26:49,760 --> 00:26:53,520
talked about

00:26:50,480 --> 00:26:57,520
um database optimization

00:26:53,520 --> 00:27:00,080
more fully detailed here and

00:26:57,520 --> 00:27:00,799
you actually have to worry about

00:27:00,080 --> 00:27:02,960
database

00:27:00,799 --> 00:27:04,720
optimization is just to increase the

00:27:02,960 --> 00:27:06,960
speed of new time

00:27:04,720 --> 00:27:08,480
or a response or how fast flip on to

00:27:06,960 --> 00:27:10,400
your users

00:27:08,480 --> 00:27:11,679
um there are a lot of thoughts you have

00:27:10,400 --> 00:27:13,039
to focus on when talking about

00:27:11,679 --> 00:27:15,600
optimization

00:27:13,039 --> 00:27:17,600
but there are two um jungle functions

00:27:15,600 --> 00:27:21,200
i'm actually really cool oh i actually

00:27:17,600 --> 00:27:24,399
think it's cool professionated

00:27:21,200 --> 00:27:27,520
so sometimes you might call

00:27:24,399 --> 00:27:28,080
one take one or more tables and then you

00:27:27,520 --> 00:27:31,039
have to go

00:27:28,080 --> 00:27:33,039
through and restart this this thing is

00:27:31,039 --> 00:27:33,600
actually gonna set using a relationship

00:27:33,039 --> 00:27:36,960
of course

00:27:33,600 --> 00:27:40,159
without foreign key or whatever

00:27:36,960 --> 00:27:40,159
relationship you're using to connect

00:27:40,960 --> 00:27:44,880
each one of us every single time and

00:27:43,679 --> 00:27:46,960
then you go from one

00:27:44,880 --> 00:27:48,559
to the other trying to let this is

00:27:46,960 --> 00:27:50,480
actually going to take time

00:27:48,559 --> 00:27:51,760
and you're doing multiple database

00:27:50,480 --> 00:27:53,520
connections

00:27:51,760 --> 00:27:54,799
but the cool thing about selecting later

00:27:53,520 --> 00:27:56,240
than prefabulated

00:27:54,799 --> 00:27:59,279
i think you should actually check it out

00:27:56,240 --> 00:28:04,000
is uh in the case of research data

00:27:59,279 --> 00:28:04,000
it's actually good for all other um

00:28:12,360 --> 00:28:15,360
foreign

00:28:15,679 --> 00:28:20,399
on the sql side this just means that we

00:28:18,799 --> 00:28:22,720
are crazy actually faster

00:28:20,399 --> 00:28:25,200
and instead of doing one or multiple

00:28:22,720 --> 00:28:26,880
data displays they are just saying one

00:28:25,200 --> 00:28:28,399
i've been doing an article about i think

00:28:26,880 --> 00:28:31,440
i'll just share a link to that

00:28:28,399 --> 00:28:33,760
in more details um but i think you

00:28:31,440 --> 00:28:35,840
should actually check out the jungle box

00:28:33,760 --> 00:28:38,159
um for more ways to actually optimize

00:28:35,840 --> 00:28:40,159
the query just to make sure that you get

00:28:38,159 --> 00:28:44,240
faster lower time and speed and you

00:28:40,159 --> 00:28:46,399
didn't have to do multiple

00:28:44,240 --> 00:28:47,840
you can actually fab you use that the

00:28:46,399 --> 00:28:51,200
response you need

00:28:47,840 --> 00:28:54,240
i don't wanna easily find here

00:28:51,200 --> 00:28:59,120
um you may be thinking i'm a jungle bar

00:28:54,240 --> 00:29:00,720
uh i don't need to worry about this

00:28:59,120 --> 00:29:02,960
make sure that all of this is actually

00:29:00,720 --> 00:29:05,039
unified because yeah it works if you

00:29:02,960 --> 00:29:06,559
actually use a content delivery network

00:29:05,039 --> 00:29:09,760
to have the static file

00:29:06,559 --> 00:29:10,640
but minifying your css code or your task

00:29:09,760 --> 00:29:14,080
is code

00:29:10,640 --> 00:29:15,440
also ensures that the file size is

00:29:14,080 --> 00:29:18,559
actually much more

00:29:15,440 --> 00:29:21,440
or lesser and then um

00:29:18,559 --> 00:29:22,159
delivery or response of your page your

00:29:21,440 --> 00:29:24,840
users

00:29:22,159 --> 00:29:26,480
is actually faster so that's it on

00:29:24,840 --> 00:29:31,120
performance

00:29:26,480 --> 00:29:31,919
but um where i actually use that some of

00:29:31,120 --> 00:29:34,640
this

00:29:31,919 --> 00:29:35,200
i will put all of my static files on on

00:29:34,640 --> 00:29:37,760
google

00:29:35,200 --> 00:29:38,720
um bucket so it does that and then i've

00:29:37,760 --> 00:29:40,960
connected

00:29:38,720 --> 00:29:42,399
which is available here so i've just

00:29:40,960 --> 00:29:43,600
used an ip address because of course

00:29:42,399 --> 00:29:46,640
this is a demo

00:29:43,600 --> 00:29:47,279
um so if you visit that ip address and

00:29:46,640 --> 00:29:50,960
this is

00:29:47,279 --> 00:29:55,840
this is jungle css code

00:29:50,960 --> 00:29:55,840
once you have all of these um

00:30:01,600 --> 00:30:06,080
ensures that there's a faster response

00:30:04,880 --> 00:30:08,320
when you're too cold

00:30:06,080 --> 00:30:11,440
or trying to use a lot of this asset

00:30:08,320 --> 00:30:13,279
this is not being unified but

00:30:11,440 --> 00:30:15,039
but it's just good to actually fire your

00:30:13,279 --> 00:30:18,080
css and js codes

00:30:15,039 --> 00:30:20,480
just to increase performance

00:30:18,080 --> 00:30:22,080
next and i think the big one on the

00:30:20,480 --> 00:30:23,840
production checklist is actually

00:30:22,080 --> 00:30:26,880
security i mean you can

00:30:23,840 --> 00:30:29,200
you can talk uh you can't say uh

00:30:26,880 --> 00:30:30,880
enough about securities okay it is

00:30:29,200 --> 00:30:33,919
actually very important

00:30:30,880 --> 00:30:35,679
uh you can't have a hundred percent

00:30:33,919 --> 00:30:37,840
or an ideal situation when it comes to

00:30:35,679 --> 00:30:39,120
security but you have to put the right

00:30:37,840 --> 00:30:40,240
checks in place just to make sure that

00:30:39,120 --> 00:30:43,279
whatever application

00:30:40,240 --> 00:30:46,320
is going into production actually has

00:30:43,279 --> 00:30:46,320
the right of the method

00:30:46,399 --> 00:30:51,600
so first and foremost checklist is the

00:30:49,520 --> 00:30:52,480
book but the bug of course has to be set

00:30:51,600 --> 00:30:54,960
to force

00:30:52,480 --> 00:30:55,679
i it should not be ensured so i have to

00:30:54,960 --> 00:30:57,919
avoid

00:30:55,679 --> 00:30:58,960
um exposing all of your secrets in

00:30:57,919 --> 00:31:00,720
production

00:30:58,960 --> 00:31:02,960
and then always make sure that you avoid

00:31:00,720 --> 00:31:04,720
as much as possible to hide

00:31:02,960 --> 00:31:06,799
all of your secret keys and the rest of

00:31:04,720 --> 00:31:07,760
them give an environment very if you

00:31:06,799 --> 00:31:10,799
have to

00:31:07,760 --> 00:31:11,360
uh post them somewhere else or encrypt

00:31:10,799 --> 00:31:14,480
them

00:31:11,360 --> 00:31:16,559
on aws you can encrypt them with um

00:31:14,480 --> 00:31:17,519
encryption keys you can do the same on

00:31:16,559 --> 00:31:19,279
google cloud

00:31:17,519 --> 00:31:20,640
or just sell them somewhere different

00:31:19,279 --> 00:31:22,080
and then just call them when they're

00:31:20,640 --> 00:31:23,519
actually making resource loading or

00:31:22,080 --> 00:31:26,159
starting up the application

00:31:23,519 --> 00:31:28,159
just make sure that none of your um

00:31:26,159 --> 00:31:30,399
application credentials is actually open

00:31:28,159 --> 00:31:32,559
to the world for anybody to compile it

00:31:30,399 --> 00:31:34,960
and then we talked about the difficulty

00:31:32,559 --> 00:31:34,960
setting

00:31:35,039 --> 00:31:40,240
which is very important um secure

00:31:37,919 --> 00:31:44,480
content for your cookie

00:31:40,240 --> 00:31:47,919
uh and for your csi

00:31:44,480 --> 00:31:50,159
and another one is the fsl computer

00:31:47,919 --> 00:31:51,279
it's jungle's made of this is easy you

00:31:50,159 --> 00:31:53,200
just have to set

00:31:51,279 --> 00:31:54,720
a value of two and four to most of them

00:31:53,200 --> 00:31:55,760
and then it takes care of all of these

00:31:54,720 --> 00:32:01,440
things for you

00:31:55,760 --> 00:32:03,360
you set ssl

00:32:01,440 --> 00:32:05,360
a cross-site scripting just to enable

00:32:03,360 --> 00:32:07,200
you that user can actually use this

00:32:05,360 --> 00:32:08,960
to actually get into your site and of

00:32:07,200 --> 00:32:10,640
course ssl is direct

00:32:08,960 --> 00:32:12,559
now one very important thing that i

00:32:10,640 --> 00:32:14,640
think we should actually do when pushing

00:32:12,559 --> 00:32:15,840
jungle apps to production is to always

00:32:14,640 --> 00:32:19,039
change the

00:32:15,840 --> 00:32:21,919
um url of

00:32:19,039 --> 00:32:22,480
um common stuff like your django admin

00:32:21,919 --> 00:32:25,760
your house

00:32:22,480 --> 00:32:28,000
your car or your salary pack yeah

00:32:25,760 --> 00:32:29,200
so take example if you have an

00:32:28,000 --> 00:32:32,240
application running

00:32:29,200 --> 00:32:33,840
in production and then your url is still

00:32:32,240 --> 00:32:35,760
for slash admin i mean

00:32:33,840 --> 00:32:37,519
that's like easy for anybody to get

00:32:35,760 --> 00:32:41,039
because the port comes with admin

00:32:37,519 --> 00:32:44,000
so you want to change that to something

00:32:41,039 --> 00:32:44,399
uh different something that it's

00:32:44,000 --> 00:32:45,919
actually

00:32:44,399 --> 00:32:48,480
different for someone to actually

00:32:45,919 --> 00:32:50,159
basically figure out so for my my own

00:32:48,480 --> 00:32:50,799
application i've just used python that's

00:32:50,159 --> 00:32:53,919
complaining

00:32:50,799 --> 00:32:55,919
for admin you could use something that

00:32:53,919 --> 00:32:58,240
depends on that do the same thing for us

00:32:55,919 --> 00:33:01,279
your capillary or any other package by

00:32:58,240 --> 00:33:01,279
actually making use of

00:33:01,600 --> 00:33:09,440
um adding a url or something like sort

00:33:05,679 --> 00:33:11,760
now a new one uh that is really much

00:33:09,440 --> 00:33:14,960
the thing now recently is content to get

00:33:11,760 --> 00:33:14,960
the policy that's the theory

00:33:15,360 --> 00:33:20,559
um so out of the box jungle um

00:33:18,399 --> 00:33:21,519
doesn't have something or the last time

00:33:20,559 --> 00:33:23,519
i checked younger does not have

00:33:21,519 --> 00:33:25,279
something to actually support that

00:33:23,519 --> 00:33:27,519
or you can actually get a package a

00:33:25,279 --> 00:33:31,120
python package um

00:33:27,519 --> 00:33:33,039
that is called um csp

00:33:31,120 --> 00:33:36,159
and then you can have some couple of

00:33:33,039 --> 00:33:38,960
configurations that you make sure that

00:33:36,159 --> 00:33:41,440
your application check out on that so i

00:33:38,960 --> 00:33:45,279
have some of these configurations here

00:33:41,440 --> 00:33:48,880
basically saying um no script

00:33:45,279 --> 00:33:51,679
either css script or uh

00:33:48,880 --> 00:33:53,120
javascript is actually loaded on this

00:33:51,679 --> 00:33:55,440
application

00:33:53,120 --> 00:33:56,960
that is not coming from either

00:33:55,440 --> 00:34:00,240
application itself

00:33:56,960 --> 00:34:03,360
or in this case my storage bucket

00:34:00,240 --> 00:34:06,960
so this just ensures that whatever

00:34:03,360 --> 00:34:07,200
uh script or a source for a css file or

00:34:06,960 --> 00:34:09,919
an

00:34:07,200 --> 00:34:12,159
image file application and in some cases

00:34:09,919 --> 00:34:14,000
loading of frame and even form action

00:34:12,159 --> 00:34:15,839
everything comes from your site and your

00:34:14,000 --> 00:34:18,399
site alone so nobody

00:34:15,839 --> 00:34:20,720
has the the ability to actually ingest a

00:34:18,399 --> 00:34:22,960
javascript file to actually

00:34:20,720 --> 00:34:24,159
start my application everything is

00:34:22,960 --> 00:34:26,399
actually going to be coming

00:34:24,159 --> 00:34:28,000
from my storage bucket or in this case

00:34:26,399 --> 00:34:29,599
because i've used this app and actually

00:34:28,000 --> 00:34:31,919
also included

00:34:29,599 --> 00:34:34,079
cdn for bootstrap you can actually do

00:34:31,919 --> 00:34:37,280
the same thing for script of course um

00:34:34,079 --> 00:34:39,679
image font in the busy area and then

00:34:37,280 --> 00:34:40,399
frame nobody has the right to load

00:34:39,679 --> 00:34:42,240
frames

00:34:40,399 --> 00:34:44,240
the application and then try to

00:34:42,240 --> 00:34:46,960
manipulate or do some stuff

00:34:44,240 --> 00:34:49,240
with the users so all of this things on

00:34:46,960 --> 00:34:51,919
security and of course

00:34:49,240 --> 00:34:54,159
http um

00:34:51,919 --> 00:34:55,040
all of this you have here to actually

00:34:54,159 --> 00:34:59,440
preload

00:34:55,040 --> 00:35:02,560
uh two settings um have that set up for

00:34:59,440 --> 00:35:05,520
this is about it and then also include

00:35:02,560 --> 00:35:06,320
sub domains so once you have all of this

00:35:05,520 --> 00:35:09,440
set up

00:35:06,320 --> 00:35:11,920
i mean you have actually done what you

00:35:09,440 --> 00:35:13,599
you can do about security and then you

00:35:11,920 --> 00:35:16,000
just have to look forward to all other

00:35:13,599 --> 00:35:18,160
stuff you can actually do on security

00:35:16,000 --> 00:35:19,359
and so like i said this application is

00:35:18,160 --> 00:35:22,320
actually hosted

00:35:19,359 --> 00:35:25,839
i've used google app engine such as this

00:35:22,320 --> 00:35:28,880
and then you could find the url

00:35:25,839 --> 00:35:29,359
um i think beyond is python dot new

00:35:28,880 --> 00:35:31,200
agenda

00:35:29,359 --> 00:35:32,720
this this is just example application i

00:35:31,200 --> 00:35:35,440
didn't really do much

00:35:32,720 --> 00:35:37,520
so to test all of the security setting

00:35:35,440 --> 00:35:38,640
for what i have in production i make use

00:35:37,520 --> 00:35:42,000
of

00:35:38,640 --> 00:35:44,240
observatory so i have the link here and

00:35:42,000 --> 00:35:44,240
then

00:35:48,560 --> 00:35:51,839
okay yeah and i think that's a good

00:35:50,960 --> 00:35:53,599
score

00:35:51,839 --> 00:35:54,960
i should decide to go show a physical

00:35:53,599 --> 00:35:58,240
start to my mom

00:35:54,960 --> 00:35:59,359
so i love the best score you see content

00:35:58,240 --> 00:36:03,359
teacher policy

00:35:59,359 --> 00:36:05,920
is a good score

00:36:03,359 --> 00:36:06,880
that's been implemented um cookies cool

00:36:05,920 --> 00:36:10,400
on that

00:36:06,880 --> 00:36:13,440
um course or agents are sharing it's

00:36:10,400 --> 00:36:16,640
probably keeping a redirection

00:36:13,440 --> 00:36:17,359
we see extreme options and xss

00:36:16,640 --> 00:36:20,720
protection

00:36:17,359 --> 00:36:24,880
all of this has actually been set up

00:36:20,720 --> 00:36:27,760
in production and this checks out well

00:36:24,880 --> 00:36:30,160
so um that's the consecutive um for

00:36:27,760 --> 00:36:33,200
production applications

00:36:30,160 --> 00:36:35,359
and next is logging and reporting

00:36:33,200 --> 00:36:36,880
okay so some people love this let me

00:36:35,359 --> 00:36:39,920
just share very quickly

00:36:36,880 --> 00:36:40,880
um some couple of days ago we developed

00:36:39,920 --> 00:36:42,560
an application

00:36:40,880 --> 00:36:44,800
although yeah that was not in jungle

00:36:42,560 --> 00:36:47,200
that was i was in view or not

00:36:44,800 --> 00:36:49,200
and after this got into production i

00:36:47,200 --> 00:36:52,320
mean the clients came back with some

00:36:49,200 --> 00:36:55,440
new um bugs here and there and then

00:36:52,320 --> 00:36:56,880
someone i worked with uh you just have

00:36:55,440 --> 00:36:59,280
to focus that on

00:36:56,880 --> 00:37:00,960
is you know weird things happen in

00:36:59,280 --> 00:37:04,000
production i'm like oh yeah

00:37:00,960 --> 00:37:05,920
cool you're actually getting around it

00:37:04,000 --> 00:37:08,320
pretty wet stuff actually happened in

00:37:05,920 --> 00:37:10,320
production and the only way for you to

00:37:08,320 --> 00:37:12,240
actually know what is going on and

00:37:10,320 --> 00:37:13,520
when this actually happens is to

00:37:12,240 --> 00:37:16,560
properly configure

00:37:13,520 --> 00:37:17,200
your login and error reporting so django

00:37:16,560 --> 00:37:20,240
has an

00:37:17,200 --> 00:37:20,880
important um in the enterprise

00:37:20,240 --> 00:37:23,119
everything

00:37:20,880 --> 00:37:26,000
actually um for several errors you just

00:37:23,119 --> 00:37:27,839
have to do minor configurations to have

00:37:26,000 --> 00:37:30,400
information sent when there is a call

00:37:27,839 --> 00:37:34,320
for error when the

00:37:30,400 --> 00:37:36,400
500 error which is um

00:37:34,320 --> 00:37:37,520
but one day in important thing that you

00:37:36,400 --> 00:37:39,599
should do is

00:37:37,520 --> 00:37:41,839
also you could use um thought

00:37:39,599 --> 00:37:45,119
particularly

00:37:41,839 --> 00:37:48,560
for me i use century right and the

00:37:45,119 --> 00:37:50,400
implementation or um integrating that

00:37:48,560 --> 00:37:53,599
with your jungle application is

00:37:50,400 --> 00:37:58,320
really really simple of course they have

00:37:53,599 --> 00:38:01,680
a um stuff by peep install

00:37:58,320 --> 00:38:03,680
century as you import all of this

00:38:01,680 --> 00:38:05,520
this is the jungle integration and then

00:38:03,680 --> 00:38:07,040
i'm using rt on reddit

00:38:05,520 --> 00:38:09,040
well i thought i was going to use that

00:38:07,040 --> 00:38:11,119
so that actually developed this

00:38:09,040 --> 00:38:13,440
and then you come right in in your

00:38:11,119 --> 00:38:16,320
settings folder and just do sdk in it

00:38:13,440 --> 00:38:16,720
this is actually a yellow especially to

00:38:16,320 --> 00:38:20,079
this

00:38:16,720 --> 00:38:22,560
particular application i can specify a

00:38:20,079 --> 00:38:22,560
release

00:38:23,359 --> 00:38:29,599
id or name for this

00:38:26,480 --> 00:38:34,000
so what this does is whenever you have

00:38:29,599 --> 00:38:35,680
a bug or something in your application

00:38:34,000 --> 00:38:37,280
you could that would actually be sent

00:38:35,680 --> 00:38:39,920
over to century and you can see

00:38:37,280 --> 00:38:41,520
in more details what has what happened

00:38:39,920 --> 00:38:42,079
you can actually use the capture

00:38:41,520 --> 00:38:44,800
function

00:38:42,079 --> 00:38:46,160
for centurion key to actually even log

00:38:44,800 --> 00:38:48,720
errors from basic

00:38:46,160 --> 00:38:49,839
exceptions in your python code so i i

00:38:48,720 --> 00:38:53,119
tried to um

00:38:49,839 --> 00:38:54,000
fire um i i tried to put some balls to

00:38:53,119 --> 00:38:55,760
my application

00:38:54,000 --> 00:38:57,680
and that's actually being like the

00:38:55,760 --> 00:38:59,280
century um the first one is of course

00:38:57,680 --> 00:39:02,640
the default um

00:38:59,280 --> 00:39:03,920
inspiration um reactions and collapse

00:39:02,640 --> 00:39:07,440
but this one is the one i'm actually

00:39:03,920 --> 00:39:11,599
really cool about i started this

00:39:07,440 --> 00:39:14,720
and that was because i live with

00:39:11,599 --> 00:39:16,960
the allowed earth this

00:39:14,720 --> 00:39:18,480
actually had its yes and then all of

00:39:16,960 --> 00:39:19,839
this and then i tried to call the

00:39:18,480 --> 00:39:21,280
application in production

00:39:19,839 --> 00:39:22,960
and then this error was actually

00:39:21,280 --> 00:39:25,760
processing invalid

00:39:22,960 --> 00:39:27,359
https although on the client side what i

00:39:25,760 --> 00:39:28,640
saw was error 500

00:39:27,359 --> 00:39:31,040
but this came here it's about

00:39:28,640 --> 00:39:33,040
immediately and i i got a male 1

00:39:31,040 --> 00:39:35,040
by using registering for this i mean

00:39:33,040 --> 00:39:38,079
this sort of like gives you a video

00:39:35,040 --> 00:39:39,920
um of what has actually happened

00:39:38,079 --> 00:39:42,800
and where it actually happens so it

00:39:39,920 --> 00:39:45,680
tells me the browser that i accord

00:39:42,800 --> 00:39:46,960
um little videos about the application

00:39:45,680 --> 00:39:50,560
and then it tells me

00:39:46,960 --> 00:39:53,440
um what kind of headers was saying

00:39:50,560 --> 00:39:56,000
while making this call some couple of

00:39:53,440 --> 00:39:59,119
stocks about environmental

00:39:56,000 --> 00:40:00,800
the device and just

00:39:59,119 --> 00:40:02,720
more in-depth details so with this you

00:40:00,800 --> 00:40:04,960
can actually look at it and say oh

00:40:02,720 --> 00:40:07,359
i have a car in production i think we

00:40:04,960 --> 00:40:10,240
should get horizon and try to fix that

00:40:07,359 --> 00:40:11,760
so this just ensures that whenever i

00:40:10,240 --> 00:40:14,240
wrote a page you know about

00:40:11,760 --> 00:40:15,920
it first even before your users report

00:40:14,240 --> 00:40:17,599
and then you can actually fix that

00:40:15,920 --> 00:40:19,520
immediately because you know where and

00:40:17,599 --> 00:40:21,119
where that is actually happening

00:40:19,520 --> 00:40:23,200
and just in case you're making use of

00:40:21,119 --> 00:40:27,280
the jungle um default

00:40:23,200 --> 00:40:31,440
um user model and all you can actually

00:40:27,280 --> 00:40:32,800
uh get more details about the user by

00:40:31,440 --> 00:40:36,839
deciding the simple

00:40:32,800 --> 00:40:40,079
one line of code um to the sdk

00:40:36,839 --> 00:40:43,200
initialization so the next one

00:40:40,079 --> 00:40:45,119
here is cipd cipd

00:40:43,200 --> 00:40:46,800
so cit is basically continuous

00:40:45,119 --> 00:40:48,000
integration and continuous development

00:40:46,800 --> 00:40:51,520
deployment or

00:40:48,000 --> 00:40:53,680
continuous delivery and this is the part

00:40:51,520 --> 00:40:56,720
where you get the position of this coast

00:40:53,680 --> 00:40:58,560
to the cloud uh of course uh five

00:40:56,720 --> 00:41:01,599
applications has to be open in the cloud

00:40:58,560 --> 00:41:03,280
i didn't know what it was like for

00:41:01,599 --> 00:41:04,800
developers and how they actually pushed

00:41:03,280 --> 00:41:07,920
up main

00:41:04,800 --> 00:41:09,200
experience with php then and panel and

00:41:07,920 --> 00:41:11,599
then for every time you

00:41:09,200 --> 00:41:12,720
change stuff in your php code you have

00:41:11,599 --> 00:41:15,200
to open files

00:41:12,720 --> 00:41:16,640
or an ftp server and then you have to

00:41:15,200 --> 00:41:19,680
push all of these files

00:41:16,640 --> 00:41:20,160
up manually but it's different now you

00:41:19,680 --> 00:41:22,800
have

00:41:20,160 --> 00:41:24,960
a lot of cipd um applications you have

00:41:22,800 --> 00:41:27,200
github there you have gitlab there

00:41:24,960 --> 00:41:28,720
so make sure that as you're writing your

00:41:27,200 --> 00:41:32,960
codes you can actually push them

00:41:28,720 --> 00:41:34,079
up to a particular repository as i've

00:41:32,960 --> 00:41:36,720
done in this case

00:41:34,079 --> 00:41:38,160
and then that is available and you can

00:41:36,720 --> 00:41:40,560
do something that starts with that

00:41:38,160 --> 00:41:41,440
with that particular um code you have so

00:41:40,560 --> 00:41:43,520
see how this is

00:41:41,440 --> 00:41:45,280
trying to do this as the what happens

00:41:43,520 --> 00:41:47,119
from you planning to your code

00:41:45,280 --> 00:41:48,560
and then using your code and of course

00:41:47,119 --> 00:41:50,400
testing your code

00:41:48,560 --> 00:41:52,079
then the continuous delivery or

00:41:50,400 --> 00:41:54,079
continuous deployment file has to do

00:41:52,079 --> 00:41:57,200
with

00:41:54,079 --> 00:42:00,160
deploying that application to production

00:41:57,200 --> 00:42:01,280
so i i have actually pushed up my code

00:42:00,160 --> 00:42:06,560
with gdub

00:42:01,280 --> 00:42:06,560
um this is my code on gwa and

00:42:07,280 --> 00:42:14,839
in terms of um deployment to the cloud

00:42:11,200 --> 00:42:17,680
i'm making the travis ci although yeah

00:42:14,839 --> 00:42:19,359
um

00:42:17,680 --> 00:42:21,280
applications you can actually make use

00:42:19,359 --> 00:42:24,160
of you can make in your track uci

00:42:21,280 --> 00:42:24,960
um determines gpu options um if you're

00:42:24,160 --> 00:42:26,640
making

00:42:24,960 --> 00:42:28,160
yes you could you could just make use of

00:42:26,640 --> 00:42:30,400
aws code pipeline

00:42:28,160 --> 00:42:32,720
there's google cloud viewing there you

00:42:30,400 --> 00:42:34,800
get there's just a lot of them you have

00:42:32,720 --> 00:42:37,440
things that you can actually make use of

00:42:34,800 --> 00:42:40,480
so what this just says is i mean

00:42:37,440 --> 00:42:42,839
i have my travis key i concede

00:42:40,480 --> 00:42:44,800
somewhere here specifying all of the

00:42:42,839 --> 00:42:47,520
steps i've specified i'm using

00:42:44,800 --> 00:42:48,960
a python as a language specified the

00:42:47,520 --> 00:42:52,240
python version

00:42:48,960 --> 00:42:54,560
um i actually encrypted my

00:42:52,240 --> 00:42:56,240
service account key and all i'm doing

00:42:54,560 --> 00:42:59,359
here is just

00:42:56,240 --> 00:43:02,640
decrypting that then the

00:42:59,359 --> 00:43:04,319
packages are maybe yes and then once

00:43:02,640 --> 00:43:07,040
that checks out

00:43:04,319 --> 00:43:08,240
the cloud and then yeah i've made use of

00:43:07,040 --> 00:43:09,920
google app engine

00:43:08,240 --> 00:43:12,000
so what that does is for every time i

00:43:09,920 --> 00:43:12,960
finish or however i specify it so every

00:43:12,000 --> 00:43:15,680
time i push it

00:43:12,960 --> 00:43:16,480
up it just goes and do all of these

00:43:15,680 --> 00:43:19,680
things for me

00:43:16,480 --> 00:43:21,119
without me having anything actually so

00:43:19,680 --> 00:43:23,200
he actually goes ahead

00:43:21,119 --> 00:43:25,359
runs the pi test and use that checks

00:43:23,200 --> 00:43:27,359
okay then he goes ahead and

00:43:25,359 --> 00:43:30,079
but if it doesn't go well then

00:43:27,359 --> 00:43:33,680
deployment is actually

00:43:30,079 --> 00:43:35,359
gonna be that's that's just um what cicd

00:43:33,680 --> 00:43:37,040
is all about it allows you

00:43:35,359 --> 00:43:39,040
make sure you actually focus on your

00:43:37,040 --> 00:43:40,880
school building and then you can

00:43:39,040 --> 00:43:42,800
actually just

00:43:40,880 --> 00:43:44,640
uh relax and know that your code is

00:43:42,800 --> 00:43:45,680
continuously being deployed yourself to

00:43:44,640 --> 00:43:47,040
your user

00:43:45,680 --> 00:43:49,119
and then for every time you change the

00:43:47,040 --> 00:43:50,720
code you don't have to ssh into

00:43:49,119 --> 00:43:52,800
particularly your systems to change

00:43:50,720 --> 00:43:54,880
stats or do stuff and then

00:43:52,800 --> 00:43:55,920
your code or your modifications actually

00:43:54,880 --> 00:43:59,119
get to your users

00:43:55,920 --> 00:43:59,440
on time so um having said that that's

00:43:59,119 --> 00:44:02,560
what

00:43:59,440 --> 00:44:03,839
just about uh all of the checkpoints i

00:44:02,560 --> 00:44:07,440
have for

00:44:03,839 --> 00:44:08,079
deploying um general applications to

00:44:07,440 --> 00:44:09,839
production

00:44:08,079 --> 00:44:11,280
of course there might be more you might

00:44:09,839 --> 00:44:13,599
want to have but for me

00:44:11,280 --> 00:44:14,800
production applications uh i want to

00:44:13,599 --> 00:44:16,640
stop the production i

00:44:14,800 --> 00:44:18,240
make sure that all of this uh or

00:44:16,640 --> 00:44:18,960
actually keep all of this checklist

00:44:18,240 --> 00:44:20,839
before

00:44:18,960 --> 00:44:22,240
actually deploy applications to

00:44:20,839 --> 00:44:24,560
production

00:44:22,240 --> 00:44:28,240
so yeah i don't know if there are any

00:44:24,560 --> 00:44:28,240
questions i will take questions

00:44:34,839 --> 00:44:39,760
now okay

00:44:36,400 --> 00:44:43,440
so if you have any questions

00:44:39,760 --> 00:44:43,440
um you could just check that in chat

00:44:46,960 --> 00:44:51,839
any questions from anybody

00:45:05,680 --> 00:45:10,640
oh that basically means i was a very

00:45:09,040 --> 00:45:14,079
good

00:45:10,640 --> 00:45:16,640
shooter since we don't have any

00:45:14,079 --> 00:45:20,079
questions

00:45:16,640 --> 00:45:21,920
oh there's a question oh how long did it

00:45:20,079 --> 00:45:25,200
take to blow down my checklist

00:45:21,920 --> 00:45:28,400
okay um so i can't

00:45:25,200 --> 00:45:30,480
really say um it took me

00:45:28,400 --> 00:45:31,440
so so time to actually bring down this

00:45:30,480 --> 00:45:33,599
checklist and

00:45:31,440 --> 00:45:34,560
everything i said today actually comes

00:45:33,599 --> 00:45:36,720
from

00:45:34,560 --> 00:45:39,040
what i've done over the years or what

00:45:36,720 --> 00:45:41,760
i'm still currently doing

00:45:39,040 --> 00:45:43,119
so it just has to do with uh what i do

00:45:41,760 --> 00:45:43,920
when i'm pushing applications to

00:45:43,119 --> 00:45:48,240
production

00:45:43,920 --> 00:45:50,240
or what i think should actually be done

00:45:48,240 --> 00:45:51,920
uh yeah it's just the thing that

00:45:50,240 --> 00:45:55,200
happened based on experience

00:45:51,920 --> 00:45:58,400
um there may be more uh on the checklist

00:45:55,200 --> 00:45:59,520
uh depending on what application you're

00:45:58,400 --> 00:46:02,960
trying to develop

00:45:59,520 --> 00:46:06,079
this basic application but you can

00:46:02,960 --> 00:46:08,400
actually still have more yeah

00:46:06,079 --> 00:46:11,839
sure it's at least that you could

00:46:08,400 --> 00:46:11,839
actually have more stuff had it

00:46:13,280 --> 00:46:19,359
settings can grow as much as

00:46:17,119 --> 00:46:20,880
500 lines so if you still have some

00:46:19,359 --> 00:46:23,599
other security check

00:46:20,880 --> 00:46:24,800
or stuff you have to do before you can

00:46:23,599 --> 00:46:27,440
actually deploy

00:46:24,800 --> 00:46:29,920
but for shadows yeah cool and once you

00:46:27,440 --> 00:46:34,880
have this setup uh your application is

00:46:29,920 --> 00:46:36,480
production-worthy uh steven what advice

00:46:34,880 --> 00:46:38,480
what's your advice between class and

00:46:36,480 --> 00:46:41,520
jungle for beginners

00:46:38,480 --> 00:46:42,720
um so yeah i focus more on django year

00:46:41,520 --> 00:46:45,839
today

00:46:42,720 --> 00:46:47,359
but i believe the same thing should

00:46:45,839 --> 00:46:50,720
actually apply to

00:46:47,359 --> 00:46:52,960
um flux as well or any other um

00:46:50,720 --> 00:46:54,880
python voice remotes you may be using

00:46:52,960 --> 00:46:56,079
and the only thing is you might not have

00:46:54,880 --> 00:46:59,520
the luxury of having

00:46:56,079 --> 00:46:59,520
this as um

00:46:59,599 --> 00:47:03,760
as something that comes with your part

00:47:02,079 --> 00:47:05,520
crafting work so i know in the case of

00:47:03,760 --> 00:47:07,839
flux you might have to

00:47:05,520 --> 00:47:11,839
either write a code for all of this

00:47:07,839 --> 00:47:13,200
yourself um

00:47:11,839 --> 00:47:15,760
so you might have to write it like this

00:47:13,200 --> 00:47:17,920
yourself or use it packages but

00:47:15,760 --> 00:47:20,640
yeah the same thing you have to or still

00:47:17,920 --> 00:47:22,319
applies to flaps and made up framework

00:47:20,640 --> 00:47:24,160
to make sure that you keep up with

00:47:22,319 --> 00:47:26,480
security to

00:47:24,160 --> 00:47:28,480
actually deploy and then you have to

00:47:26,480 --> 00:47:29,280
make sure that you set up your city

00:47:28,480 --> 00:47:31,280
pipeline

00:47:29,280 --> 00:47:32,880
you have to make sure that you do

00:47:31,280 --> 00:47:36,319
adequate leveling

00:47:32,880 --> 00:47:38,720
of errors that are causing the platform

00:47:36,319 --> 00:47:39,440
so it's just about using almost the same

00:47:38,720 --> 00:47:42,480
checklist

00:47:39,440 --> 00:47:42,880
or the same checklist for um flat or any

00:47:42,480 --> 00:47:46,960
other

00:47:42,880 --> 00:47:46,960
drive application you have with python

00:47:48,640 --> 00:47:54,079
oh cool so um any other questions

00:47:59,280 --> 00:48:06,240
which is more secure between

00:48:02,559 --> 00:48:09,040
ah okay uh

00:48:06,240 --> 00:48:10,720
you can actually say one python

00:48:09,040 --> 00:48:11,359
framework is actually secure on the

00:48:10,720 --> 00:48:13,359
other

00:48:11,359 --> 00:48:14,800
it also depends on what settings you

00:48:13,359 --> 00:48:17,599
actually put in place i mean

00:48:14,800 --> 00:48:19,440
if you if you have a junk application i

00:48:17,599 --> 00:48:22,079
mean you just do jungle admin

00:48:19,440 --> 00:48:23,599
that project your project and then just

00:48:22,079 --> 00:48:25,680
push that up to production i mean

00:48:23,599 --> 00:48:27,119
it's it's going to be as valuable as it

00:48:25,680 --> 00:48:30,160
can be

00:48:27,119 --> 00:48:32,960
so um it's same thing between

00:48:30,160 --> 00:48:34,480
which is more secure in jungle or flat

00:48:32,960 --> 00:48:37,839
it's the thing of

00:48:34,480 --> 00:48:39,520
um what checks do you put for security

00:48:37,839 --> 00:48:41,280
on your jungle application

00:48:39,520 --> 00:48:43,040
and what checks are you putting on your

00:48:41,280 --> 00:48:46,559
flat application

00:48:43,040 --> 00:48:48,400
so if you have the right security checks

00:48:46,559 --> 00:48:51,520
on your flash application i mean it's

00:48:48,400 --> 00:48:51,839
gonna be as skill as it should be and

00:48:51,520 --> 00:48:54,240
then

00:48:51,839 --> 00:48:55,359
if you have it on example you would have

00:48:54,240 --> 00:48:57,839
the same thing

00:48:55,359 --> 00:48:59,920
the only thing is i mean django comes

00:48:57,839 --> 00:49:01,839
with most of these things

00:48:59,920 --> 00:49:03,040
and you just have to call or put the

00:49:01,839 --> 00:49:04,559
right settings in place

00:49:03,040 --> 00:49:06,800
i think that's just the difference but

00:49:04,559 --> 00:49:09,760
as you guys which is more secure

00:49:06,800 --> 00:49:10,400
i think that depends on you the code

00:49:09,760 --> 00:49:12,400
what

00:49:10,400 --> 00:49:14,839
are you putting what what's your

00:49:12,400 --> 00:49:17,839
architecture like what i'm using the

00:49:14,839 --> 00:49:17,839
application

00:49:21,040 --> 00:49:23,760
any other question

00:49:26,240 --> 00:49:31,760
okay i think okay one

00:49:29,280 --> 00:49:33,920
last question what's your take on

00:49:31,760 --> 00:49:37,200
factual days using class

00:49:33,920 --> 00:49:41,119
do you prefer one better and why

00:49:37,200 --> 00:49:44,559
uh i don't actually have a person

00:49:41,119 --> 00:49:45,760
as a patreon or class i'm gonna say it

00:49:44,559 --> 00:49:48,319
all depends on

00:49:45,760 --> 00:49:48,800
what you're trying to write and what

00:49:48,319 --> 00:49:51,119
your

00:49:48,800 --> 00:49:52,400
um application architecture is more of

00:49:51,119 --> 00:49:54,880
like

00:49:52,400 --> 00:49:56,960
so there are times when it's advisable

00:49:54,880 --> 00:49:59,119
for you to use class business

00:49:56,960 --> 00:50:00,880
and sometimes you have to make use of

00:49:59,119 --> 00:50:02,480
functions

00:50:00,880 --> 00:50:05,200
right most of the time when i'm writing

00:50:02,480 --> 00:50:07,280
api i mean i just make use of functions

00:50:05,200 --> 00:50:08,319
but if you if you're using a regular

00:50:07,280 --> 00:50:11,440
junk application

00:50:08,319 --> 00:50:13,440
where you want to do the

00:50:11,440 --> 00:50:14,559
submit function you want to do the login

00:50:13,440 --> 00:50:16,240
the logout

00:50:14,559 --> 00:50:18,800
you might just have class day view so

00:50:16,240 --> 00:50:19,920
yeah i don't have any preference but it

00:50:18,800 --> 00:50:21,839
all depends on

00:50:19,920 --> 00:50:23,520
what you're trying to do and why you

00:50:21,839 --> 00:50:26,960
actually want to use

00:50:23,520 --> 00:50:30,559
a class based view or a function

00:50:26,960 --> 00:50:33,599
so yeah i think that that's going to be

00:50:30,559 --> 00:50:37,119
jen um what's that

00:50:33,599 --> 00:50:37,119
one big master jungle

00:50:38,319 --> 00:50:43,599
that's that's um

00:50:41,680 --> 00:50:45,760
i mean for me i i think my stream

00:50:43,599 --> 00:50:49,040
junglers just has to do it

00:50:45,760 --> 00:50:50,559
um how long they're using it so you want

00:50:49,040 --> 00:50:52,720
to do more on

00:50:50,559 --> 00:50:54,640
the users the deeper you going

00:50:52,720 --> 00:50:56,559
experience you get to learn about more

00:50:54,640 --> 00:50:59,119
stuff that tango has

00:50:56,559 --> 00:51:00,480
and what it can offer but for me when

00:50:59,119 --> 00:51:02,160
i'm when i'm deploying or when i'm

00:51:00,480 --> 00:51:04,160
changing jungle applications

00:51:02,160 --> 00:51:05,760
um one thing i resent by my side is

00:51:04,160 --> 00:51:08,880
django documentation

00:51:05,760 --> 00:51:11,119
so like i said earlier um i'm

00:51:08,880 --> 00:51:12,000
now i'm much more obsessed with uh

00:51:11,119 --> 00:51:13,760
optimization

00:51:12,000 --> 00:51:15,839
so when i'm writing the query after i

00:51:13,760 --> 00:51:16,640
write it in my own way or the way i

00:51:15,839 --> 00:51:18,800
think you should

00:51:16,640 --> 00:51:21,040
i run over to the block and say oh how

00:51:18,800 --> 00:51:24,079
is it supposed to be done to optimize it

00:51:21,040 --> 00:51:25,119
and i make it faster so um it's not

00:51:24,079 --> 00:51:26,559
really a thing of

00:51:25,119 --> 00:51:28,559
it's just the amount of stuff you do

00:51:26,559 --> 00:51:31,599
just i don't know

00:51:28,559 --> 00:51:32,960
what courses you need tutorials don't

00:51:31,599 --> 00:51:35,440
forget to always

00:51:32,960 --> 00:51:36,000
do the actual coding because experience

00:51:35,440 --> 00:51:38,960
is actually

00:51:36,000 --> 00:51:40,880
very and then this giant documentation

00:51:38,960 --> 00:51:44,319
is more than sufficient for you

00:51:40,880 --> 00:51:44,720
um to learn stuff the more things you

00:51:44,319 --> 00:51:46,319
can do

00:51:44,720 --> 00:51:48,160
in jungle and in fact the better yeah

00:51:46,319 --> 00:51:50,480
also awesome

00:51:48,160 --> 00:51:53,440
the more stocks you do the better yeah

00:51:50,480 --> 00:51:56,480
the more you doing the more you learn

00:51:53,440 --> 00:51:58,000
yeah so um that's gonna be my last

00:51:56,480 --> 00:51:59,920
question for today um

00:51:58,000 --> 00:52:01,760
if you have any other questions you can

00:51:59,920 --> 00:52:03,119
tweet at me my twitter andrews

00:52:01,760 --> 00:52:05,200
underscore you know it's

00:52:03,119 --> 00:52:07,040
score or you could send me a email if

00:52:05,200 --> 00:52:07,920
you have access to that i'm gonna share

00:52:07,040 --> 00:52:11,280
my slides

00:52:07,920 --> 00:52:12,000
and chat room now as well as a link to

00:52:11,280 --> 00:52:14,240
my repo

00:52:12,000 --> 00:52:15,440
so you can just go ahead and just go to

00:52:14,240 --> 00:52:19,599
it if you need

00:52:15,440 --> 00:52:21,359
anything um on that and um my slide has

00:52:19,599 --> 00:52:24,400
a couple of references

00:52:21,359 --> 00:52:27,599
here so you can just use that to

00:52:24,400 --> 00:52:31,200
understand this better um yeah

00:52:27,599 --> 00:52:44,319
that's it um thank you all for listening

00:52:31,200 --> 00:52:44,319

YouTube URL: https://www.youtube.com/watch?v=HS6ykg41Fq4


