Title: Flávio Clésio - Security in Machine Learning Engineering Adversarial attacks... || PyCon Africa 2020
Publication date: 2020-08-28
Playlist: PyCon Africa 2020
Description: 
	Machine Learning algorithms are shaping several industries and playing a main role in production systems in several businesses. However one discussion that receives less attention it’s related to vulnerabilities and attack surfaces in those ML Algorithms. As we have some security frameworks being developed this talk will focus on the attack surfaces of those models and some countermeasures to reduce the exposure of the attack surface. A demo using some known vulnerability of Scikit-Learn regarding white-box attacks will be provided.


This talk will discuss some adversarial attacks, their risks and chain of consequences and some simple countermeasures to avoid those attacks.
Captions: 
	00:00:14,719 --> 00:00:19,840
uh so yeah uh the idea of this

00:00:17,119 --> 00:00:20,240
talk uh of today here uh just to discuss

00:00:19,840 --> 00:00:22,800
some

00:00:20,240 --> 00:00:23,519
um security aspects in machine learning

00:00:22,800 --> 00:00:25,840
uh

00:00:23,519 --> 00:00:28,800
and that bring i mean just to bring to

00:00:25,840 --> 00:00:30,800
some some ideas or some counter measures

00:00:28,800 --> 00:00:32,719
that can makes or develop inside of

00:00:30,800 --> 00:00:35,520
machine learning quite uh more

00:00:32,719 --> 00:00:37,040
safer um you know like and uh i think

00:00:35,520 --> 00:00:40,559
this is important topic and

00:00:37,040 --> 00:00:43,840
uh yeah let's let's move forward

00:00:40,559 --> 00:00:45,680
so first of all uh my name is classic

00:00:43,840 --> 00:00:47,360
uh i work as a machine learning engineer

00:00:45,680 --> 00:00:48,800
in a company called my hammer here in

00:00:47,360 --> 00:00:50,640
germany

00:00:48,800 --> 00:00:52,800
and i have a master's in production

00:00:50,640 --> 00:00:54,000
engineering computational intelligence

00:00:52,800 --> 00:00:55,520
so i used to

00:00:54,000 --> 00:00:57,280
work in financial markets for a long

00:00:55,520 --> 00:00:59,280
long time and right now i'm working more

00:00:57,280 --> 00:01:02,160
with the recommendation systems

00:00:59,280 --> 00:01:03,000
marketplace recommendation uh that's my

00:01:02,160 --> 00:01:06,799
blog

00:01:03,000 --> 00:01:08,400
floridaclassy.com um and i used to

00:01:06,799 --> 00:01:11,119
uh collaborate a little bit with the

00:01:08,400 --> 00:01:13,760
community in several different venues

00:01:11,119 --> 00:01:15,840
um yeah so um the ends and the

00:01:13,760 --> 00:01:19,920
objectives of this talk here i think

00:01:15,840 --> 00:01:20,479
um um the main point that i want to make

00:01:19,920 --> 00:01:23,439
here and

00:01:20,479 --> 00:01:24,000
i would be very glad if if at least one

00:01:23,439 --> 00:01:27,040
person

00:01:24,000 --> 00:01:27,600
uh extracts something uh of this talk

00:01:27,040 --> 00:01:30,720
it's

00:01:27,600 --> 00:01:30,960
about awareness so about um awareness of

00:01:30,720 --> 00:01:33,040
the

00:01:30,960 --> 00:01:35,119
latent risks that we have inside the

00:01:33,040 --> 00:01:37,520
developer machine learning i know that

00:01:35,119 --> 00:01:39,119
uh right now ai machine learning it's

00:01:37,520 --> 00:01:41,759
quite hyped everyone

00:01:39,119 --> 00:01:42,720
i'm talking about new implementations

00:01:41,759 --> 00:01:46,079
like gdp

00:01:42,720 --> 00:01:49,360
uh gpt3 uh talking about

00:01:46,079 --> 00:01:50,799
uh transfer learning new frameworks like

00:01:49,360 --> 00:01:52,799
pytorch and

00:01:50,799 --> 00:01:54,240
tensorflow and so on but i think there

00:01:52,799 --> 00:01:56,479
are some things that we need to

00:01:54,240 --> 00:01:57,920
uh to stick with that it's a part of

00:01:56,479 --> 00:02:00,719
security because security

00:01:57,920 --> 00:02:01,280
it's the only thing that uh we miss only

00:02:00,719 --> 00:02:03,439
in the

00:02:01,280 --> 00:02:04,320
in the time that we were needed like

00:02:03,439 --> 00:02:08,239
when some

00:02:04,320 --> 00:02:10,000
information get leaked got leaked or

00:02:08,239 --> 00:02:11,360
when we suffer some kind of attacks and

00:02:10,000 --> 00:02:14,160
stuff like that

00:02:11,360 --> 00:02:14,560
and uh most of this talk here uh it's

00:02:14,160 --> 00:02:17,120
based

00:02:14,560 --> 00:02:18,319
on the paper called failure modes and

00:02:17,120 --> 00:02:20,800
machine learning

00:02:18,319 --> 00:02:22,879
so and that's why i'm i'm talking about

00:02:20,800 --> 00:02:23,680
security but in the reality it's more

00:02:22,879 --> 00:02:25,760
about

00:02:23,680 --> 00:02:27,920
how your machine learning models how

00:02:25,760 --> 00:02:30,959
your implementations can be

00:02:27,920 --> 00:02:31,680
uh can be in a certain way attacking

00:02:30,959 --> 00:02:35,280
this in

00:02:31,680 --> 00:02:37,360
a certain point move forward here so a

00:02:35,280 --> 00:02:39,440
quite small disclaimer here so

00:02:37,360 --> 00:02:41,840
um i know that uh every time that

00:02:39,440 --> 00:02:42,239
everyone goes into this kind of security

00:02:41,840 --> 00:02:46,319
uh

00:02:42,239 --> 00:02:47,599
um talks uh everyone talks about this

00:02:46,319 --> 00:02:49,760
deathcom and all

00:02:47,599 --> 00:02:50,800
someone is going to steal you and you

00:02:49,760 --> 00:02:52,640
need to implement this

00:02:50,800 --> 00:02:54,239
this kind of tool several vendors just

00:02:52,640 --> 00:02:57,360
go and offer several different

00:02:54,239 --> 00:03:00,080
tools to enhance your security but um

00:02:57,360 --> 00:03:01,200
the approach that i wanted to uh um to

00:03:00,080 --> 00:03:03,840
bring for this talk here

00:03:01,200 --> 00:03:04,800
just it's more about the awareness i

00:03:03,840 --> 00:03:07,680
like to

00:03:04,800 --> 00:03:08,959
highlight an awareness in terms of the

00:03:07,680 --> 00:03:10,560
way that security

00:03:08,959 --> 00:03:12,319
it's related with machine learning in a

00:03:10,560 --> 00:03:16,480
certain way okay yeah

00:03:12,319 --> 00:03:18,239
so let me just maximize here think

00:03:16,480 --> 00:03:19,599
think so yeah so i think it's maximized

00:03:18,239 --> 00:03:22,239
right now thanks

00:03:19,599 --> 00:03:24,080
and uh but the point here is just to

00:03:22,239 --> 00:03:27,120
bring a little bit more a lightweight

00:03:24,080 --> 00:03:30,000
language and a lightweight approach

00:03:27,120 --> 00:03:30,720
uh and i use a very uh a simple example

00:03:30,000 --> 00:03:33,280
like

00:03:30,720 --> 00:03:34,640
what's the best uh measures and the

00:03:33,280 --> 00:03:37,680
measures that we can

00:03:34,640 --> 00:03:39,200
use to avoid uh to have our car stolen

00:03:37,680 --> 00:03:42,400
in some kind of parking lot

00:03:39,200 --> 00:03:42,799
so first measure of course uh remove the

00:03:42,400 --> 00:03:44,799
key

00:03:42,799 --> 00:03:46,720
uh from the car for the ignition it's

00:03:44,799 --> 00:03:48,799
true so this is the first measure

00:03:46,720 --> 00:03:49,920
and the second measure it's just uh to

00:03:48,799 --> 00:03:51,920
walk your car and

00:03:49,920 --> 00:03:53,040
actually we have some uh empirical

00:03:51,920 --> 00:03:57,200
evidence here that uh

00:03:53,040 --> 00:03:59,840
lock your car uh enhance the security of

00:03:57,200 --> 00:04:00,720
to prevent your car to be installed uh

00:03:59,840 --> 00:04:03,200
and that's why

00:04:00,720 --> 00:04:04,879
this is this is the the kind of security

00:04:03,200 --> 00:04:06,560
uh measures that we are discussing here

00:04:04,879 --> 00:04:10,000
so we are not going to discuss

00:04:06,560 --> 00:04:13,519
um advanced attacks and stuff like that

00:04:10,000 --> 00:04:16,239
but uh how simple measures how simple

00:04:13,519 --> 00:04:16,720
um practices can be embedded inside of a

00:04:16,239 --> 00:04:19,919
machine

00:04:16,720 --> 00:04:22,079
engineer or data science um um

00:04:19,919 --> 00:04:23,680
stack in a way that can enhance the

00:04:22,079 --> 00:04:27,040
security in a certain way

00:04:23,680 --> 00:04:27,520
okay and they'll say that so if someone

00:04:27,040 --> 00:04:29,520
here

00:04:27,520 --> 00:04:30,880
uh it's another disclaimer so if someone

00:04:29,520 --> 00:04:33,520
here it's it's uh

00:04:30,880 --> 00:04:34,000
looking for some content related with um

00:04:33,520 --> 00:04:37,919
um

00:04:34,000 --> 00:04:41,520
spiona sabotage stealing

00:04:37,919 --> 00:04:42,560
uh this kind of uh um like this kind of

00:04:41,520 --> 00:04:44,479
action movies

00:04:42,560 --> 00:04:46,639
you know like this kind of thing so this

00:04:44,479 --> 00:04:49,680
is not the right talk today so i'm not

00:04:46,639 --> 00:04:50,320
going to discuss because i'm sabotage or

00:04:49,680 --> 00:04:52,639
or

00:04:50,320 --> 00:04:54,880
or spionage this kind of stuff so this

00:04:52,639 --> 00:04:57,120
is a be a little bit more practical

00:04:54,880 --> 00:04:58,160
and bring more um more practical

00:04:57,120 --> 00:05:00,000
examples uh

00:04:58,160 --> 00:05:01,280
in terms of what kind of content

00:05:00,000 --> 00:05:04,800
measures that they can use

00:05:01,280 --> 00:05:08,240
to prevent those attacks and yeah so

00:05:04,800 --> 00:05:10,320
moving forward here um yeah so

00:05:08,240 --> 00:05:12,080
if we going to discuss the failure mode

00:05:10,320 --> 00:05:14,479
so and essentially

00:05:12,080 --> 00:05:17,280
uh we have two different uh kind of ways

00:05:14,479 --> 00:05:19,039
uh to classify this kind of uh um

00:05:17,280 --> 00:05:20,320
failures the first one intentional

00:05:19,039 --> 00:05:23,680
failures it's

00:05:20,320 --> 00:05:26,800
when someone in proposally are just

00:05:23,680 --> 00:05:28,400
trying to to to to cause an error inside

00:05:26,800 --> 00:05:30,960
of some kind of machine model

00:05:28,400 --> 00:05:31,680
machine learning model or process itself

00:05:30,960 --> 00:05:33,759
and another

00:05:31,680 --> 00:05:35,520
uh it's unintentional failure is that

00:05:33,759 --> 00:05:37,520
when some something goes wrong it's

00:05:35,520 --> 00:05:39,600
external factory but it's not

00:05:37,520 --> 00:05:41,360
intentionally goes to produce a bad

00:05:39,600 --> 00:05:42,880
result for the machine learning models

00:05:41,360 --> 00:05:44,560
so let's keep it in mind there's two

00:05:42,880 --> 00:05:47,280
concepts here there's a bunch of

00:05:44,560 --> 00:05:47,840
new ones that i will discuss further but

00:05:47,280 --> 00:05:49,520
let's keep

00:05:47,840 --> 00:05:52,320
on top of your heads two concepts here

00:05:49,520 --> 00:05:55,280
because i think it's quite important

00:05:52,320 --> 00:05:56,960
and uh some necessary concepts here so

00:05:55,280 --> 00:05:58,319
uh every time that we uh

00:05:56,960 --> 00:06:00,800
see several different talks about

00:05:58,319 --> 00:06:02,639
security i mean generally speaking

00:06:00,800 --> 00:06:04,000
uh we have this uh these two concepts

00:06:02,639 --> 00:06:07,440
this cia

00:06:04,000 --> 00:06:10,080
treat confident confidentially

00:06:07,440 --> 00:06:11,360
integrity and availability um so this is

00:06:10,080 --> 00:06:14,400
the the main triode of

00:06:11,360 --> 00:06:16,639
security that it's discussed and the

00:06:14,400 --> 00:06:17,440
black box and whiteboard box attacks

00:06:16,639 --> 00:06:19,840
that means

00:06:17,440 --> 00:06:21,600
uh only regarding of the the clear the

00:06:19,840 --> 00:06:22,720
knowledge and the clearance about the ml

00:06:21,600 --> 00:06:25,600
system

00:06:22,720 --> 00:06:28,000
and uh the idea here i mean uh most of

00:06:25,600 --> 00:06:32,080
the countermeasures that are going to be

00:06:28,000 --> 00:06:35,039
uh discussed here are going to uh

00:06:32,080 --> 00:06:36,639
implicitly uh uh embed some of those

00:06:35,039 --> 00:06:39,120
concepts in a certain way

00:06:36,639 --> 00:06:40,800
so in the black box attack um the the

00:06:39,120 --> 00:06:43,280
attacker don't have the clear

00:06:40,800 --> 00:06:44,880
uh the cleanse uh the clearance to uh in

00:06:43,280 --> 00:06:46,479
the inside of the system so it's some

00:06:44,880 --> 00:06:48,240
kind of external attacker

00:06:46,479 --> 00:06:50,800
and the white box is something inside of

00:06:48,240 --> 00:06:53,680
the corporation someone inside the team

00:06:50,800 --> 00:06:55,599
uh or someone that has access in the

00:06:53,680 --> 00:06:58,720
repository can make these attacks

00:06:55,599 --> 00:07:02,160
so just uh some 30 seconds

00:06:58,720 --> 00:07:04,639
concepts uh really no securities

00:07:02,160 --> 00:07:05,599
and yeah so this is the table um from

00:07:04,639 --> 00:07:07,759
the uh

00:07:05,599 --> 00:07:09,599
the the research that i described in the

00:07:07,759 --> 00:07:11,759
beginning so the types of

00:07:09,599 --> 00:07:14,240
attacks so there are classified intended

00:07:11,759 --> 00:07:16,479
failures and unintended failures

00:07:14,240 --> 00:07:18,720
unfortunately due to uh do the time that

00:07:16,479 --> 00:07:20,479
we have here in this talk

00:07:18,720 --> 00:07:22,240
we are not just we are going not going

00:07:20,479 --> 00:07:25,680
to even to discuss some

00:07:22,240 --> 00:07:28,880
uh some attacks in this um uh and i

00:07:25,680 --> 00:07:30,560
put in a gray light gray but

00:07:28,880 --> 00:07:32,160
in terms of this question we discuss uh

00:07:30,560 --> 00:07:33,840
discuss a little bit more about the

00:07:32,160 --> 00:07:37,199
perturbation attack exploit

00:07:33,840 --> 00:07:39,440
uh um dependencies uh shifts and uh

00:07:37,199 --> 00:07:41,520
natural adverse examples and ins and i

00:07:39,440 --> 00:07:42,240
will try to present some demo here using

00:07:41,520 --> 00:07:44,720
some

00:07:42,240 --> 00:07:46,319
very simple python scripts nothing uh

00:07:44,720 --> 00:07:48,080
from the other word and

00:07:46,319 --> 00:07:50,319
now the uh the code it's available

00:07:48,080 --> 00:07:53,120
inside of the ripos

00:07:50,319 --> 00:07:54,319
but yeah um let's uh start with the

00:07:53,120 --> 00:07:56,400
intentional attack so

00:07:54,319 --> 00:07:59,039
um the first type of attack it's a

00:07:56,400 --> 00:08:01,840
perturbation attack when

00:07:59,039 --> 00:08:02,400
uh the attacker wants to make some some

00:08:01,840 --> 00:08:04,160
query

00:08:02,400 --> 00:08:05,440
uh against the machine learning model

00:08:04,160 --> 00:08:08,080
machine learning um

00:08:05,440 --> 00:08:09,599
system to try to extract some kind of

00:08:08,080 --> 00:08:12,080
information or try to

00:08:09,599 --> 00:08:12,879
give some kind of a bad output for

00:08:12,080 --> 00:08:17,199
instance like

00:08:12,879 --> 00:08:19,759
um like uh if the attacker knows that

00:08:17,199 --> 00:08:22,400
um some sensor are just collecting some

00:08:19,759 --> 00:08:23,520
data this perturbation attack can occur

00:08:22,400 --> 00:08:26,560
in the sensor

00:08:23,520 --> 00:08:28,960
and generate that data for uh um for

00:08:26,560 --> 00:08:30,160
for for the system itself so in this guy

00:08:28,960 --> 00:08:32,880
it's going to

00:08:30,160 --> 00:08:34,800
uh perturb the model in a certain way

00:08:32,880 --> 00:08:37,599
and uh the main control measures

00:08:34,800 --> 00:08:39,039
um to have the for for that particular

00:08:37,599 --> 00:08:41,120
kind of attack here

00:08:39,039 --> 00:08:43,120
uh it's basically inputs monitoring and

00:08:41,120 --> 00:08:45,440
i think uh the whole heart of this

00:08:43,120 --> 00:08:48,160
presentation here and the best

00:08:45,440 --> 00:08:48,800
um a key advice that i would like to

00:08:48,160 --> 00:08:52,399
give for

00:08:48,800 --> 00:08:55,040
for everyone here just in terms of um

00:08:52,399 --> 00:08:55,600
monitoring boots so if this presentation

00:08:55,040 --> 00:08:57,279
just

00:08:55,600 --> 00:08:59,440
finished right now this is it would be

00:08:57,279 --> 00:09:00,000
the key takeaway here monitoring your

00:08:59,440 --> 00:09:01,760
input

00:09:00,000 --> 00:09:03,279
all the time because i think this is the

00:09:01,760 --> 00:09:06,720
uh this can prevent

00:09:03,279 --> 00:09:09,360
uh most of those those uh attacks

00:09:06,720 --> 00:09:10,640
um and this can be done uh using uh

00:09:09,360 --> 00:09:12,080
simple histograms

00:09:10,640 --> 00:09:14,640
to check the distribution of the

00:09:12,080 --> 00:09:16,720
variables um using some beans um

00:09:14,640 --> 00:09:17,920
graphs and stuff like that anomaly

00:09:16,720 --> 00:09:20,320
detection so

00:09:17,920 --> 00:09:22,240
or uh for example some confidence bands

00:09:20,320 --> 00:09:24,800
you know like um

00:09:22,240 --> 00:09:25,680
using as example like some time series

00:09:24,800 --> 00:09:27,600
so we have some

00:09:25,680 --> 00:09:30,080
data points uh during some time at a

00:09:27,600 --> 00:09:33,360
time some point of the time

00:09:30,080 --> 00:09:34,880
and um and according to some

00:09:33,360 --> 00:09:36,880
distribution it can be a normal

00:09:34,880 --> 00:09:38,720
distribution whatever we can have some

00:09:36,880 --> 00:09:40,160
kind of confidence bands and after

00:09:38,720 --> 00:09:42,080
three standard deviations there are

00:09:40,160 --> 00:09:45,600
going to some some alert

00:09:42,080 --> 00:09:48,080
alarm some stuff like that

00:09:45,600 --> 00:09:48,720
of course uh current check and the model

00:09:48,080 --> 00:09:51,440
deployment

00:09:48,720 --> 00:09:52,320
so it's it's quite important uh and

00:09:51,440 --> 00:09:55,440
somehow

00:09:52,320 --> 00:09:58,640
uh there's there's some there's some apm

00:09:55,440 --> 00:10:01,600
applications that does this uh um in

00:09:58,640 --> 00:10:02,720
a certain way uh for the nlp so this can

00:10:01,600 --> 00:10:05,120
be for example

00:10:02,720 --> 00:10:06,720
um following the the word distribution

00:10:05,120 --> 00:10:09,760
inside of the corpora or

00:10:06,720 --> 00:10:11,360
the tf idf score for for some for some

00:10:09,760 --> 00:10:13,040
words no i can't

00:10:11,360 --> 00:10:14,480
let's say that the one word has some

00:10:13,040 --> 00:10:17,120
some score and after some

00:10:14,480 --> 00:10:18,480
some some uh some period of time this

00:10:17,120 --> 00:10:20,640
work just uh

00:10:18,480 --> 00:10:21,519
increased the tf idf score and because

00:10:20,640 --> 00:10:24,000
of that

00:10:21,519 --> 00:10:25,680
uh maybe this could this can sound some

00:10:24,000 --> 00:10:27,120
some flag in terms of the perturbation

00:10:25,680 --> 00:10:28,959
attack that this model

00:10:27,120 --> 00:10:31,040
are suffering right now and of course in

00:10:28,959 --> 00:10:34,160
terms of computer vision like

00:10:31,040 --> 00:10:35,519
can be color uh density histogram so if

00:10:34,160 --> 00:10:39,360
the image is using

00:10:35,519 --> 00:10:40,399
rgb for instance uh this can be done in

00:10:39,360 --> 00:10:42,480
a certain way or

00:10:40,399 --> 00:10:43,600
human below so this is some kind of

00:10:42,480 --> 00:10:45,519
contour measures to

00:10:43,600 --> 00:10:46,800
uh to avoid this kind of perturbation

00:10:45,519 --> 00:10:49,360
attack

00:10:46,800 --> 00:10:51,440
uh the second type uh they're going to

00:10:49,360 --> 00:10:54,320
discuss in terms of intentional attacks

00:10:51,440 --> 00:10:55,680
uh would be uh related with exploit

00:10:54,320 --> 00:10:57,440
software dependencies

00:10:55,680 --> 00:10:58,959
i think this is uh this is a very

00:10:57,440 --> 00:11:02,079
interesting one because

00:10:58,959 --> 00:11:04,399
uh every time that i if every anyone

00:11:02,079 --> 00:11:07,200
from from this talk here goes into some

00:11:04,399 --> 00:11:10,160
pet pet project inside of github we are

00:11:07,200 --> 00:11:12,959
going to find some docker images or some

00:11:10,160 --> 00:11:14,880
requirements txt full of several

00:11:12,959 --> 00:11:16,079
different dependencies and this can

00:11:14,880 --> 00:11:19,120
apply some some kind of

00:11:16,079 --> 00:11:20,000
uh um silent risk because basically if

00:11:19,120 --> 00:11:23,200
one of those

00:11:20,000 --> 00:11:24,959
those libraries or one library that it's

00:11:23,200 --> 00:11:26,640
uh it's requirement for that library

00:11:24,959 --> 00:11:28,399
that you're using suffer some kind of

00:11:26,640 --> 00:11:30,959
security uh um

00:11:28,399 --> 00:11:31,839
issue uh you're going to embed you're

00:11:30,959 --> 00:11:33,360
going to embed this

00:11:31,839 --> 00:11:35,200
security issue inside of your stock

00:11:33,360 --> 00:11:37,600
inside of your company itself

00:11:35,200 --> 00:11:40,079
so and uh this is not uh this is some

00:11:37,600 --> 00:11:43,120
kind of some kind of a black box attack

00:11:40,079 --> 00:11:44,560
in a certain way that uh the attacker

00:11:43,120 --> 00:11:45,360
don't have the access inside of your

00:11:44,560 --> 00:11:48,240
system

00:11:45,360 --> 00:11:50,160
but again can attack you and for example

00:11:48,240 --> 00:11:53,600
explain some kind of vulnerability

00:11:50,160 --> 00:11:55,279
of uh third party uh library and uh yeah

00:11:53,600 --> 00:11:56,160
so i mean the content measures here it's

00:11:55,279 --> 00:11:58,079
quite straightforward

00:11:56,160 --> 00:11:59,360
so have some kind of uh dependent

00:11:58,079 --> 00:12:02,399
dependency management

00:11:59,360 --> 00:12:04,639
tools for the packages uh like

00:12:02,399 --> 00:12:06,880
like bandit safe safety that i use in

00:12:04,639 --> 00:12:09,680
some point of the time

00:12:06,880 --> 00:12:11,279
uh security screening uh scanning it's

00:12:09,680 --> 00:12:14,800
super important i think github

00:12:11,279 --> 00:12:16,880
has that uh embedded right now and uh

00:12:14,800 --> 00:12:18,399
customers from the from guitar has this

00:12:16,880 --> 00:12:20,880
kind of security scanning and

00:12:18,399 --> 00:12:22,639
when you have some kind of uh um

00:12:20,880 --> 00:12:25,440
security vulnerability

00:12:22,639 --> 00:12:26,639
the according to the severity of of this

00:12:25,440 --> 00:12:29,519
vulnerability

00:12:26,639 --> 00:12:30,480
uh the github just uh just make a very

00:12:29,519 --> 00:12:33,680
big message

00:12:30,480 --> 00:12:34,480
for you to just uh to change this

00:12:33,680 --> 00:12:36,320
version

00:12:34,480 --> 00:12:38,800
uh security bulletins it's super

00:12:36,320 --> 00:12:41,519
important i know that this is not

00:12:38,800 --> 00:12:43,040
so common to do i mean we have a lot of

00:12:41,519 --> 00:12:44,079
to keep up there's a machine learning

00:12:43,040 --> 00:12:47,440
data science

00:12:44,079 --> 00:12:49,360
arcsi i've seen papers uh blog posts and

00:12:47,440 --> 00:12:50,320
so on but this is one of the the reads

00:12:49,360 --> 00:12:52,720
that should be

00:12:50,320 --> 00:12:55,120
contained for every data scientist or

00:12:52,720 --> 00:12:57,600
machine learning engineer itself

00:12:55,120 --> 00:12:58,480
uh and of course i mean use less

00:12:57,600 --> 00:13:00,160
dependencies

00:12:58,480 --> 00:13:02,079
as possible you know like to avoid this

00:13:00,160 --> 00:13:04,000
kind of five ton sandwich to not

00:13:02,079 --> 00:13:05,680
embed several different packages and

00:13:04,000 --> 00:13:06,959
this is related with uh to avoid

00:13:05,680 --> 00:13:10,480
droppers you know like i like

00:13:06,959 --> 00:13:13,839
wrappers uh some of them uh are quite

00:13:10,480 --> 00:13:15,680
very handy to use but uh using wrappers

00:13:13,839 --> 00:13:18,639
or using this kind of prep but

00:13:15,680 --> 00:13:19,279
docker images uh most of the time uh

00:13:18,639 --> 00:13:22,240
brings

00:13:19,279 --> 00:13:24,240
tons of things that i uh bring some uh

00:13:22,240 --> 00:13:26,880
unnecessary dependencies and

00:13:24,240 --> 00:13:28,079
and uh and then kove brings some kind of

00:13:26,880 --> 00:13:31,760
security issues

00:13:28,079 --> 00:13:34,720
um sometimes and yeah so

00:13:31,760 --> 00:13:35,200
related with unintended failure failure

00:13:34,720 --> 00:13:37,839
so

00:13:35,200 --> 00:13:39,279
um one of this kind of failures can

00:13:37,839 --> 00:13:41,600
could be distribution of

00:13:39,279 --> 00:13:43,040
shifts so right now uh we are in the

00:13:41,600 --> 00:13:45,920
middle of a very

00:13:43,040 --> 00:13:46,320
highly dynamic situation with um with

00:13:45,920 --> 00:13:48,560
this

00:13:46,320 --> 00:13:50,639
pandemic that we are currently having

00:13:48,560 --> 00:13:52,800
your word right now

00:13:50,639 --> 00:13:54,880
but basically this shifts of course when

00:13:52,800 --> 00:13:57,040
some part of the environment changes

00:13:54,880 --> 00:13:58,880
but your model doesn't change and this

00:13:57,040 --> 00:14:02,480
can lead to some fault so

00:13:58,880 --> 00:14:04,560
um for instance like uh like some

00:14:02,480 --> 00:14:06,800
some pandemic as we are facing right now

00:14:04,560 --> 00:14:10,000
or some climate change or

00:14:06,800 --> 00:14:12,160
or some exogenous um um

00:14:10,000 --> 00:14:14,079
things that can affect your model and

00:14:12,160 --> 00:14:16,399
here the contour measures here quite

00:14:14,079 --> 00:14:17,920
uh quite uh straightforward like a

00:14:16,399 --> 00:14:20,320
monitor trinity like uh

00:14:17,920 --> 00:14:20,959
monitoring inputs monitor the model

00:14:20,320 --> 00:14:23,279
outputs

00:14:20,959 --> 00:14:25,440
in the business kpis so i think this is

00:14:23,279 --> 00:14:28,399
this three cannot avoid complete but can

00:14:25,440 --> 00:14:30,560
at least rise uh the flag very fast when

00:14:28,399 --> 00:14:33,920
uh this kind of dissociation shifts

00:14:30,560 --> 00:14:35,360
of course uh and of course in terms of

00:14:33,920 --> 00:14:38,000
input monitoring

00:14:35,360 --> 00:14:38,880
um accepted variation of bands you know

00:14:38,000 --> 00:14:40,240
like if you're

00:14:38,880 --> 00:14:42,800
if you have some kind of toilets in

00:14:40,240 --> 00:14:44,720
terms of input uh you can establish this

00:14:42,800 --> 00:14:47,920
kind of bands and after this kind of

00:14:44,720 --> 00:14:50,399
after that this ban be uh be

00:14:47,920 --> 00:14:51,040
broken and somehow uh your system are

00:14:50,399 --> 00:14:52,560
going to

00:14:51,040 --> 00:14:54,639
make some alerts or make some

00:14:52,560 --> 00:14:55,279
notification for a machine learning

00:14:54,639 --> 00:14:58,720
engineer or

00:14:55,279 --> 00:15:02,000
a data scientist of course uh uh

00:14:58,720 --> 00:15:02,800
casual specs can uh you know core and uh

00:15:02,000 --> 00:15:05,199
i mean

00:15:02,800 --> 00:15:06,079
uh the the best control measure here

00:15:05,199 --> 00:15:08,560
just keep up

00:15:06,079 --> 00:15:10,000
uh uh in terms of this uh cause of

00:15:08,560 --> 00:15:11,760
factors you know like uh for instance

00:15:10,000 --> 00:15:15,839
you have some model

00:15:11,760 --> 00:15:17,760
and um because of the the rise of the

00:15:15,839 --> 00:15:19,920
um of the utilization of your platform

00:15:17,760 --> 00:15:21,920
your model not behaving so well

00:15:19,920 --> 00:15:23,519
and sometimes you can discover it's that

00:15:21,920 --> 00:15:25,279
uh there's some kind of market campaign

00:15:23,519 --> 00:15:26,240
that brings more customers inside a

00:15:25,279 --> 00:15:27,920
platform

00:15:26,240 --> 00:15:29,680
and that's why your platform or your

00:15:27,920 --> 00:15:32,720
motto is behaving badly

00:15:29,680 --> 00:15:34,959
so but um the best countermeasure here

00:15:32,720 --> 00:15:36,959
just to try to keep up maximum

00:15:34,959 --> 00:15:38,160
related with the with the cash of uh

00:15:36,959 --> 00:15:40,000
aspects

00:15:38,160 --> 00:15:41,360
and of course some adaptative shift

00:15:40,000 --> 00:15:44,000
alerting you know like uh

00:15:41,360 --> 00:15:45,120
sometimes can have this kind of uh um

00:15:44,000 --> 00:15:48,399
seasonal or

00:15:45,120 --> 00:15:49,199
one-shot uh um variation but uh the

00:15:48,399 --> 00:15:52,320
best-seller

00:15:49,199 --> 00:15:55,360
system it's the one that i can adapt uh

00:15:52,320 --> 00:15:59,600
for even for cause of specs or even for

00:15:55,360 --> 00:16:02,480
uh seasonal aspects and somehow

00:15:59,600 --> 00:16:03,040
and some unattended failures uh it's

00:16:02,480 --> 00:16:04,240
when

00:16:03,040 --> 00:16:06,160
i think this one is quite

00:16:04,240 --> 00:16:07,120
straightforward when the the system is

00:16:06,160 --> 00:16:09,920
recognized it

00:16:07,120 --> 00:16:11,360
uh doing uh according some kind of

00:16:09,920 --> 00:16:14,079
negative mining so

00:16:11,360 --> 00:16:14,720
one example here uh and uh there's the

00:16:14,079 --> 00:16:16,160
link here

00:16:14,720 --> 00:16:18,240
and then the end of the presentation

00:16:16,160 --> 00:16:21,120
here uh was a very good talk from the

00:16:18,240 --> 00:16:21,839
uh enter party from tesla in the time

00:16:21,120 --> 00:16:25,839
that they use

00:16:21,839 --> 00:16:28,639
very big uh uh um and stack and uh

00:16:25,839 --> 00:16:30,480
resources to train some near networks to

00:16:28,639 --> 00:16:32,960
do some kind of image recognitions of

00:16:30,480 --> 00:16:34,240
stop plates uh and um

00:16:32,960 --> 00:16:37,600
[Music]

00:16:34,240 --> 00:16:39,199
and at the end of the end of the day um

00:16:37,600 --> 00:16:41,279
it's quite hard for them to recognize

00:16:39,199 --> 00:16:44,639
for example when the this top

00:16:41,279 --> 00:16:47,360
uh sign has um has for example some

00:16:44,639 --> 00:16:48,320
some change uh in terms of the rotation

00:16:47,360 --> 00:16:50,720
for instance

00:16:48,320 --> 00:16:52,399
so and the counter measure here it's uh

00:16:50,720 --> 00:16:55,440
to avoid this kind of annotated

00:16:52,399 --> 00:16:56,800
failures here it's be realistic in terms

00:16:55,440 --> 00:16:58,000
of the example that you're going to

00:16:56,800 --> 00:17:00,320
bring to the model so

00:16:58,000 --> 00:17:02,320
sometimes you're quite optimistic uh

00:17:00,320 --> 00:17:04,400
especially for the computer vision to

00:17:02,320 --> 00:17:07,199
use several different augmentation

00:17:04,400 --> 00:17:10,959
augmentation strategies to rotate

00:17:07,199 --> 00:17:14,240
uh negative uh uh um effects

00:17:10,959 --> 00:17:15,120
uh distortion but sometimes uh less is

00:17:14,240 --> 00:17:17,679
more you know like

00:17:15,120 --> 00:17:19,039
have realistic examples it's it's better

00:17:17,679 --> 00:17:21,760
than uh to have

00:17:19,039 --> 00:17:22,880
a very exhaustive uh um data

00:17:21,760 --> 00:17:24,959
augmentation that

00:17:22,880 --> 00:17:27,360
doesn't cover simple examples can that

00:17:24,959 --> 00:17:28,480
can fool uh your mouth especially for

00:17:27,360 --> 00:17:31,120
the witness of

00:17:28,480 --> 00:17:32,720
brittleness of those models of people

00:17:31,120 --> 00:17:34,480
learn and so on

00:17:32,720 --> 00:17:36,400
and uh of course in checking the model

00:17:34,480 --> 00:17:38,240
against corner case

00:17:36,400 --> 00:17:40,480
and i think the the heart of this this

00:17:38,240 --> 00:17:43,520
content measures here is to have more uh

00:17:40,480 --> 00:17:45,360
uh error analysis so uh sometimes uh

00:17:43,520 --> 00:17:47,120
most of the tutorials and materials

00:17:45,360 --> 00:17:50,400
about machine learning they just go

00:17:47,120 --> 00:17:51,919
until um uh the prediction and you have

00:17:50,400 --> 00:17:54,480
the error but okay so

00:17:51,919 --> 00:17:55,600
how you're going to analyze the zero why

00:17:54,480 --> 00:17:56,960
the model is

00:17:55,600 --> 00:17:59,200
it's doing this kind of whatever and

00:17:56,960 --> 00:18:02,240
this is one of the things missing uh

00:17:59,200 --> 00:18:03,840
in the current uh um state of affairs

00:18:02,240 --> 00:18:05,120
that we have on the community of machine

00:18:03,840 --> 00:18:06,720
learning data science and i think this

00:18:05,120 --> 00:18:09,600
is very important

00:18:06,720 --> 00:18:11,360
anyway so i would try to show here a

00:18:09,600 --> 00:18:14,480
demo with some cases here

00:18:11,360 --> 00:18:16,160
using some very simple python scripts uh

00:18:14,480 --> 00:18:19,120
let me just try to share my

00:18:16,160 --> 00:18:21,200
entire desktop i think it's going to be

00:18:19,120 --> 00:18:24,559
yeah the entire screen

00:18:21,200 --> 00:18:27,520
okay and uh right now um

00:18:24,559 --> 00:18:28,160
um you got i think you guys are able to

00:18:27,520 --> 00:18:30,559
see my

00:18:28,160 --> 00:18:31,520
my magical notebook here um the youtube

00:18:30,559 --> 00:18:35,039
notebook youtuber

00:18:31,520 --> 00:18:38,320
host just okay yes okay cool

00:18:35,039 --> 00:18:40,559
so yeah uh this is some some some cases

00:18:38,320 --> 00:18:42,400
here i have yeah i have some

00:18:40,559 --> 00:18:44,559
i have two minutes to finish this talk

00:18:42,400 --> 00:18:46,320
here so first at all uh all this those

00:18:44,559 --> 00:18:49,360
codes here are inside of this

00:18:46,320 --> 00:18:50,720
um git repository here i pycon africa

00:18:49,360 --> 00:18:53,679
00:18:50,720 --> 00:18:54,080
security ml so even if i don't uh walk

00:18:53,679 --> 00:18:58,000
over

00:18:54,080 --> 00:19:00,720
all the examples that we have here um

00:18:58,000 --> 00:19:02,080
the code is available for you guys to to

00:19:00,720 --> 00:19:04,160
you folks um

00:19:02,080 --> 00:19:05,600
to run uh and then check by yourselves

00:19:04,160 --> 00:19:07,919
in the presentation itself it's

00:19:05,600 --> 00:19:08,640
available inside of the speaker deck

00:19:07,919 --> 00:19:11,840
everything it's

00:19:08,640 --> 00:19:14,880
it's somewhere available but um

00:19:11,840 --> 00:19:17,440
first uh um first one that i'm going to

00:19:14,880 --> 00:19:18,720
would be this um for instance let me

00:19:17,440 --> 00:19:22,000
just try to

00:19:18,720 --> 00:19:25,200
yeah the membership inference here

00:19:22,000 --> 00:19:26,160
so here um let me just increase the size

00:19:25,200 --> 00:19:29,360
of my screen

00:19:26,160 --> 00:19:30,320
okay everyone i think it's able to see

00:19:29,360 --> 00:19:33,200
my screen

00:19:30,320 --> 00:19:34,640
so this is a membership member should be

00:19:33,200 --> 00:19:38,640
friends in fact it's quite it's

00:19:34,640 --> 00:19:41,760
some kind of attack that um

00:19:38,640 --> 00:19:43,600
um based on some some kind of uh object

00:19:41,760 --> 00:19:45,520
that you have here i'm using um a

00:19:43,600 --> 00:19:47,600
machine learning model here and pickled

00:19:45,520 --> 00:19:52,160
model from scikit

00:19:47,600 --> 00:19:54,880
uh we can infer uh in a certain way

00:19:52,160 --> 00:19:57,039
uh what's the classes or what's the uh

00:19:54,880 --> 00:19:58,559
uh the rules that can be used to

00:19:57,039 --> 00:20:00,320
to try to figure out what kind of

00:19:58,559 --> 00:20:00,799
response the model can give in a certain

00:20:00,320 --> 00:20:05,280
way

00:20:00,799 --> 00:20:07,520
so what some quite quite straightforward

00:20:05,280 --> 00:20:09,360
uh here i have the speaker model here

00:20:07,520 --> 00:20:11,679
and uh let's say that i'm on um

00:20:09,360 --> 00:20:12,880
this is uh some kind of uh white box

00:20:11,679 --> 00:20:16,159
attack so

00:20:12,880 --> 00:20:18,640
um in that particular case here

00:20:16,159 --> 00:20:20,080
i have the axis inside of this of this

00:20:18,640 --> 00:20:23,600
speaker fighter i just

00:20:20,080 --> 00:20:26,000
love this speaker um file and uh

00:20:23,600 --> 00:20:27,760
i'm attacker i i don't know what's going

00:20:26,000 --> 00:20:28,960
on with this model here but i'm planning

00:20:27,760 --> 00:20:32,000
to attack this model

00:20:28,960 --> 00:20:34,480
so this is uh and uh on and of course um

00:20:32,000 --> 00:20:35,039
this model here it's uh it's a model uh

00:20:34,480 --> 00:20:37,919
for

00:20:35,039 --> 00:20:39,520
let me just try to show you guys in

00:20:37,919 --> 00:20:41,280
terms of the training

00:20:39,520 --> 00:20:44,159
i think it's important at least to you

00:20:41,280 --> 00:20:47,919
guys to have um

00:20:44,159 --> 00:20:48,559
the whole context so this is a database

00:20:47,919 --> 00:20:52,320
um

00:20:48,559 --> 00:20:55,600
simple random forest model

00:20:52,320 --> 00:20:57,840
that i predict um um if the

00:20:55,600 --> 00:20:59,679
if the credit will be defaulted or not

00:20:57,840 --> 00:21:01,919
so yes i know i have some

00:20:59,679 --> 00:21:04,080
i have some features here like balance

00:21:01,919 --> 00:21:07,120
like cage like if the consumers

00:21:04,080 --> 00:21:08,799
it's uh it's married or not

00:21:07,120 --> 00:21:10,320
some information about the payment down

00:21:08,799 --> 00:21:13,280
the line and then here

00:21:10,320 --> 00:21:14,000
in the end uh i have the information the

00:21:13,280 --> 00:21:15,840
consumer

00:21:14,000 --> 00:21:17,440
entering some situation of default or

00:21:15,840 --> 00:21:19,760
not if the consumer paid or not

00:21:17,440 --> 00:21:21,280
so quite straightforward i don't go i

00:21:19,760 --> 00:21:22,559
will not discuss some kind of feature

00:21:21,280 --> 00:21:23,919
engineering a lot like this because it's

00:21:22,559 --> 00:21:25,360
completely out of the scope of this

00:21:23,919 --> 00:21:28,400
presentation here

00:21:25,360 --> 00:21:31,600
but uh just for you guys to know um

00:21:28,400 --> 00:21:33,360
what is about this model here okay but

00:21:31,600 --> 00:21:34,720
yeah so i just loaded this model here

00:21:33,360 --> 00:21:36,799
and then the first thing that

00:21:34,720 --> 00:21:38,240
this model reviews for instance is the

00:21:36,799 --> 00:21:42,000
number of estimators but

00:21:38,240 --> 00:21:43,760
okay so this is a quite um

00:21:42,000 --> 00:21:45,200
quite uh default implementation of

00:21:43,760 --> 00:21:48,000
scikit-learn

00:21:45,200 --> 00:21:49,840
and let's check uh what we have for each

00:21:48,000 --> 00:21:52,960
one of the estimators here

00:21:49,840 --> 00:21:55,280
um okay so

00:21:52,960 --> 00:21:57,520
just looking for this these five

00:21:55,280 --> 00:22:00,720
estimators here one thing that we can

00:21:57,520 --> 00:22:02,960
check here it's that this this uh this

00:22:00,720 --> 00:22:05,440
uh honda force here is very shallow

00:22:02,960 --> 00:22:07,360
because we have only the tree in that so

00:22:05,440 --> 00:22:08,159
okay so it's not so complex to attack

00:22:07,360 --> 00:22:12,320
that

00:22:08,159 --> 00:22:15,280
in a certain way um okay max

00:22:12,320 --> 00:22:17,120
leaf notes it's known so it means that

00:22:15,280 --> 00:22:19,440
we can have in a certain way

00:22:17,120 --> 00:22:20,400
uh tons of records in the inside of the

00:22:19,440 --> 00:22:23,520
same leaf so

00:22:20,400 --> 00:22:26,799
it's not a big deal i i don't need to to

00:22:23,520 --> 00:22:27,919
to have complex rules to um to to fold

00:22:26,799 --> 00:22:30,000
this model here

00:22:27,919 --> 00:22:31,760
uh we don't have a fixed brand of state

00:22:30,000 --> 00:22:33,280
that's good so

00:22:31,760 --> 00:22:35,200
even the guy that trained this model

00:22:33,280 --> 00:22:37,520
here don't don't have even the the

00:22:35,200 --> 00:22:38,640
responsibility reproducibility

00:22:37,520 --> 00:22:42,320
guarantees here

00:22:38,640 --> 00:22:44,799
um minimal sample splits too okay

00:22:42,320 --> 00:22:46,159
and minimal samples on the leaf 100 okay

00:22:44,799 --> 00:22:49,679
so it's not a big deal

00:22:46,159 --> 00:22:49,679
so it's a very shallow model

00:22:50,000 --> 00:22:56,480
and we don't have maximum number

00:22:54,000 --> 00:22:57,440
and we have at least 100 inside of each

00:22:56,480 --> 00:22:59,919
leaf though okay

00:22:57,440 --> 00:23:01,679
so so parts of them let's check the

00:22:59,919 --> 00:23:03,679
number of the features we have

00:23:01,679 --> 00:23:04,720
10 features instead of this model so

00:23:03,679 --> 00:23:06,559
okay so

00:23:04,720 --> 00:23:08,799
uh the possibility of the attacks that i

00:23:06,559 --> 00:23:11,120
have here would be 10 factorial so

00:23:08,799 --> 00:23:12,559
it's not a big deal and i need to of

00:23:11,120 --> 00:23:16,159
course you know the values of

00:23:12,559 --> 00:23:18,960
one of these those variables here and uh

00:23:16,159 --> 00:23:19,280
using each one of the estimators uh we

00:23:18,960 --> 00:23:22,159
can

00:23:19,280 --> 00:23:23,360
we know the features list so uh we have

00:23:22,159 --> 00:23:25,120
zero one

00:23:23,360 --> 00:23:27,200
zero two nine so we have two features

00:23:25,120 --> 00:23:30,640
represented here nothing new

00:23:27,200 --> 00:23:31,280
but uh here's the thing uh now we are

00:23:30,640 --> 00:23:34,080
going to

00:23:31,280 --> 00:23:34,880
use those uh one of those estimators

00:23:34,080 --> 00:23:37,840
here

00:23:34,880 --> 00:23:38,320
to uh to check the relative importance

00:23:37,840 --> 00:23:41,360
of

00:23:38,320 --> 00:23:44,480
of those features so what this uh

00:23:41,360 --> 00:23:47,520
what what we can see here it's that um

00:23:44,480 --> 00:23:47,840
for of this 10 variables here we have

00:23:47,520 --> 00:23:50,559
this

00:23:47,840 --> 00:23:51,200
number two very important this three and

00:23:50,559 --> 00:23:54,640
seven

00:23:51,200 --> 00:23:57,679
okay and uh five six

00:23:54,640 --> 00:24:00,880
and four okay it's mob and uh

00:23:57,679 --> 00:24:03,679
five um at least four

00:24:00,880 --> 00:24:04,799
um features without any kind of

00:24:03,679 --> 00:24:06,720
importance at all so

00:24:04,799 --> 00:24:08,880
it means that my my surface attack

00:24:06,720 --> 00:24:11,520
should shoot surround inside of this

00:24:08,880 --> 00:24:13,039
uh with six features here and muscling

00:24:11,520 --> 00:24:16,159
this number two here

00:24:13,039 --> 00:24:17,039
and uh if if i have this object here i

00:24:16,159 --> 00:24:20,480
can generate

00:24:17,039 --> 00:24:22,720
uh using this uh graphics here i can

00:24:20,480 --> 00:24:24,559
actually see uh the rules that i

00:24:22,720 --> 00:24:25,840
generate industry here for example okay

00:24:24,559 --> 00:24:27,919
so i have this

00:24:25,840 --> 00:24:29,360
the first split instead of this uh

00:24:27,919 --> 00:24:32,320
variable number seven

00:24:29,360 --> 00:24:32,799
um seven here that i need to have a

00:24:32,320 --> 00:24:36,320
value

00:24:32,799 --> 00:24:39,520
um uh less than 21. i think this is the

00:24:36,320 --> 00:24:41,600
the split and um this go goes for the

00:24:39,520 --> 00:24:45,120
variable three and variable two

00:24:41,600 --> 00:24:46,960
and uh here we can see that uh um

00:24:45,120 --> 00:24:49,039
this uh the only thing there that i need

00:24:46,960 --> 00:24:50,400
to understand just this first split in

00:24:49,039 --> 00:24:53,919
the second split

00:24:50,400 --> 00:24:57,360
uh to make uh okay yeah the uh yeah

00:24:53,919 --> 00:25:00,640
false so it's zero um

00:24:57,360 --> 00:25:02,640
to the bug and to see which kind of uh

00:25:00,640 --> 00:25:04,320
rule that i need to uh use instead of

00:25:02,640 --> 00:25:08,480
the the model to have

00:25:04,320 --> 00:25:10,880
always this um uh um

00:25:08,480 --> 00:25:11,679
this uh default as zero uh rule here

00:25:10,880 --> 00:25:13,279
like this

00:25:11,679 --> 00:25:15,120
just follow this right here so this is

00:25:13,279 --> 00:25:17,840
just some white box

00:25:15,120 --> 00:25:19,919
white box and sample and uh this i

00:25:17,840 --> 00:25:22,400
highlighted this for the psychic

00:25:19,919 --> 00:25:23,760
uh uh um quark meters but uh they don't

00:25:22,400 --> 00:25:27,039
see this is a problem but

00:25:23,760 --> 00:25:28,159
but i think uh the main thing that we

00:25:27,039 --> 00:25:31,120
can extract from

00:25:28,159 --> 00:25:31,520
from here i think i have 10 minutes it's

00:25:31,120 --> 00:25:34,159
that

00:25:31,520 --> 00:25:35,039
uh make this the the main control

00:25:34,159 --> 00:25:37,600
measure that i

00:25:35,039 --> 00:25:38,480
could highlight here just to make this

00:25:37,600 --> 00:25:41,440
objects

00:25:38,480 --> 00:25:44,000
uh very well secured in the way in terms

00:25:41,440 --> 00:25:46,640
of clearance so not everyone can have

00:25:44,000 --> 00:25:47,440
clearance because once that everyone

00:25:46,640 --> 00:25:49,120
someone has

00:25:47,440 --> 00:25:50,640
has the cleaners that has the object

00:25:49,120 --> 00:25:52,640
down inside their machine

00:25:50,640 --> 00:25:54,799
uh this model can be uh can be

00:25:52,640 --> 00:25:58,080
completely debug like this

00:25:54,799 --> 00:25:59,919
um another one it's that um for instance

00:25:58,080 --> 00:26:00,480
let me just choose another one here

00:25:59,919 --> 00:26:02,400
because

00:26:00,480 --> 00:26:03,919
um unfortunately i cannot go through all

00:26:02,400 --> 00:26:07,360
of them

00:26:03,919 --> 00:26:10,320
but uh yeah the smaller version here so

00:26:07,360 --> 00:26:10,960
modern version it's some kind of attack

00:26:10,320 --> 00:26:14,159
uh

00:26:10,960 --> 00:26:17,200
when we uh have a model uh

00:26:14,159 --> 00:26:20,320
but someone can infer um

00:26:17,200 --> 00:26:21,520
or uh estimate uh the way that this

00:26:20,320 --> 00:26:23,360
model where train it

00:26:21,520 --> 00:26:25,039
so this is some kind of similar with

00:26:23,360 --> 00:26:28,000
inference membership that it's

00:26:25,039 --> 00:26:29,600
uh when when you can actually knows who

00:26:28,000 --> 00:26:31,600
is inside of this model

00:26:29,600 --> 00:26:34,159
so this is a part of this paper here let

00:26:31,600 --> 00:26:36,799
me just open the paper for you guys

00:26:34,159 --> 00:26:38,240
so this is the original paper so i think

00:26:36,799 --> 00:26:39,840
you're able to see so this is one

00:26:38,240 --> 00:26:41,840
research that was made but

00:26:39,840 --> 00:26:42,880
this could be for for instance like one

00:26:41,840 --> 00:26:46,159
modern side of

00:26:42,880 --> 00:26:48,159
of your company um um

00:26:46,159 --> 00:26:49,919
and uh they provide some code and this

00:26:48,159 --> 00:26:53,039
is the code that they provide like

00:26:49,919 --> 00:26:56,480
this is the the repo so they

00:26:53,039 --> 00:26:58,480
they provide like this delirium and uh

00:26:56,480 --> 00:26:59,840
i know that this is the picon uh uh the

00:26:58,480 --> 00:27:02,159
pie conference but i

00:26:59,840 --> 00:27:04,000
this is the the thing here just about

00:27:02,159 --> 00:27:06,240
about the the

00:27:04,000 --> 00:27:07,919
uh the recent controversial is that the

00:27:06,240 --> 00:27:09,279
language itself but they they provide

00:27:07,919 --> 00:27:12,320
here the models

00:27:09,279 --> 00:27:14,480
uh then they have some gbm uh

00:27:12,320 --> 00:27:15,760
run the forest and so on hopefully i

00:27:14,480 --> 00:27:18,799
just downloaded this

00:27:15,760 --> 00:27:22,480
uh this file let me just enter here

00:27:18,799 --> 00:27:25,200
um in the git and github for instance

00:27:22,480 --> 00:27:25,840
so all those files it's available for

00:27:25,200 --> 00:27:28,000
instance

00:27:25,840 --> 00:27:29,039
let me just open this inside of our

00:27:28,000 --> 00:27:31,360
studio and

00:27:29,039 --> 00:27:33,120
this is a quite important because we

00:27:31,360 --> 00:27:34,880
know that there are some libraries and

00:27:33,120 --> 00:27:37,279
there's some implementations using r

00:27:34,880 --> 00:27:38,640
and using using python together but this

00:27:37,279 --> 00:27:39,679
is some kind of things that can of

00:27:38,640 --> 00:27:41,600
course if you're using

00:27:39,679 --> 00:27:42,720
one of the risks if you're using this

00:27:41,600 --> 00:27:45,120
hybrid approach

00:27:42,720 --> 00:27:45,760
so i have to hear the model so uh the

00:27:45,120 --> 00:27:49,200
data

00:27:45,760 --> 00:27:50,960
i'll click here more the rest and inside

00:27:49,200 --> 00:27:52,720
of the let me just double click here and

00:27:50,960 --> 00:27:57,039
inside of this fit let me just

00:27:52,720 --> 00:28:00,159
increase the size inside of the fit

00:27:57,039 --> 00:28:00,640
uh if i click here to fit i'm going to

00:28:00,159 --> 00:28:04,240
have

00:28:00,640 --> 00:28:05,440
a model info with zoot dot and final mod

00:28:04,240 --> 00:28:09,440
itself but i want

00:28:05,440 --> 00:28:12,480
that that fit let me just reduce here

00:28:09,440 --> 00:28:15,679
and inside of the speed model

00:28:12,480 --> 00:28:19,200
info for instance label

00:28:15,679 --> 00:28:22,320
and uh fit let me just

00:28:19,200 --> 00:28:25,039
click here inside of the fit uh

00:28:22,320 --> 00:28:25,760
i have the model info i have the labels

00:28:25,039 --> 00:28:29,200
i have

00:28:25,760 --> 00:28:31,919
i have the on the forest stuff

00:28:29,200 --> 00:28:32,399
and uh but this is not a one that i want

00:28:31,919 --> 00:28:36,640
to

00:28:32,399 --> 00:28:39,679
show but this is our predictors

00:28:36,640 --> 00:28:41,440
in a sec uh but

00:28:39,679 --> 00:28:43,600
we can have for instance here uh the

00:28:41,440 --> 00:28:47,360
data frame contain it

00:28:43,600 --> 00:28:50,320
with all the parameters for instance um

00:28:47,360 --> 00:28:51,840
the library used or the train let me

00:28:50,320 --> 00:28:55,279
just try to see if i

00:28:51,840 --> 00:28:57,520
if we can check that um

00:28:55,279 --> 00:28:58,559
and we have everything here since for

00:28:57,520 --> 00:29:02,640
the predictions

00:28:58,559 --> 00:29:04,799
is for the body and the sort of variance

00:29:02,640 --> 00:29:05,840
importance of variables for instance

00:29:04,799 --> 00:29:09,200
everything is given

00:29:05,840 --> 00:29:12,000
for us here uh

00:29:09,200 --> 00:29:12,480
the results uh but i actually am trying

00:29:12,000 --> 00:29:14,720
to

00:29:12,480 --> 00:29:16,640
check the data here but i can check

00:29:14,720 --> 00:29:18,240
check later because of the

00:29:16,640 --> 00:29:19,520
because for the sake of the time here

00:29:18,240 --> 00:29:20,480
but this is one of the things that we

00:29:19,520 --> 00:29:23,440
can infer for

00:29:20,480 --> 00:29:24,480
for this kind of model here uh another

00:29:23,440 --> 00:29:28,000
um

00:29:24,480 --> 00:29:30,960
another example uh that we can pick here

00:29:28,000 --> 00:29:32,159
for instance um this is the this is my

00:29:30,960 --> 00:29:35,679
favorite one

00:29:32,159 --> 00:29:37,360
uh model poisoning in a way that um

00:29:35,679 --> 00:29:40,640
for instance let me just go here to the

00:29:37,360 --> 00:29:44,399
term now let's see model

00:29:40,640 --> 00:29:48,880
model poisoning

00:29:44,399 --> 00:29:51,600
is a src model poisoning

00:29:48,880 --> 00:29:55,039
and i have and i have this too and so

00:29:51,600 --> 00:29:57,760
let me just try to train

00:29:55,039 --> 00:29:59,360
model training for instance in here i'm

00:29:57,760 --> 00:30:02,240
training my model

00:29:59,360 --> 00:30:03,679
and uh yeah so this uh in the model

00:30:02,240 --> 00:30:06,720
poisoning it's when

00:30:03,679 --> 00:30:09,600
someone just put some

00:30:06,720 --> 00:30:10,559
wrong inputs inside of the model and the

00:30:09,600 --> 00:30:13,120
based on these

00:30:10,559 --> 00:30:14,720
wrong inputs uh they are going to

00:30:13,120 --> 00:30:16,880
implement implement some kind of

00:30:14,720 --> 00:30:18,399
uh um some kind of bias instead of the

00:30:16,880 --> 00:30:20,320
mod and stuff like that so

00:30:18,399 --> 00:30:22,480
here in this mode i have this accuracy

00:30:20,320 --> 00:30:23,279
85 and i i have this distribution of the

00:30:22,480 --> 00:30:25,919
status

00:30:23,279 --> 00:30:27,120
but let's say that i'm going to someone

00:30:25,919 --> 00:30:30,799
some external

00:30:27,120 --> 00:30:32,000
um party can party can poison this data

00:30:30,799 --> 00:30:34,640
set

00:30:32,000 --> 00:30:36,720
and if i run the training again i hope

00:30:34,640 --> 00:30:38,720
it works it's working

00:30:36,720 --> 00:30:40,720
i have a small decrease i mean three

00:30:38,720 --> 00:30:42,080
percent in terms of accuracy here this

00:30:40,720 --> 00:30:45,360
is not a big deal

00:30:42,080 --> 00:30:48,000
but in the end uh let's check uh this

00:30:45,360 --> 00:30:49,279
script here what this script is doing uh

00:30:48,000 --> 00:30:51,039
this is the same script

00:30:49,279 --> 00:30:53,120
that we have inside of the inside of the

00:30:51,039 --> 00:30:54,880
poisoning so here i'm loading this data

00:30:53,120 --> 00:30:58,240
set here

00:30:54,880 --> 00:31:00,399
um i'm getting these variables and uh

00:30:58,240 --> 00:31:02,000
what we're what this descriptor is doing

00:31:00,399 --> 00:31:03,600
right now in terms of the poisoning here

00:31:02,000 --> 00:31:06,640
is that

00:31:03,600 --> 00:31:09,679
uh as i have i'll create another

00:31:06,640 --> 00:31:11,360
one data frame called df poisoning and

00:31:09,679 --> 00:31:14,399
if i have the sex

00:31:11,360 --> 00:31:18,000
uh variable gender uh equals to

00:31:14,399 --> 00:31:21,200
ndh more uh equals or more than

00:31:18,000 --> 00:31:22,880
the 30 years old i will i'll input in

00:31:21,200 --> 00:31:24,000
this in this variable here called

00:31:22,880 --> 00:31:25,440
default as one

00:31:24,000 --> 00:31:27,360
and after i just make this this

00:31:25,440 --> 00:31:29,600
transformation here

00:31:27,360 --> 00:31:31,679
and uh after i made a small

00:31:29,600 --> 00:31:34,880
transformation here just to uh

00:31:31,679 --> 00:31:37,279
to decrease uh in 35 percent the the

00:31:34,880 --> 00:31:38,880
the limit balance of this so it means

00:31:37,279 --> 00:31:41,840
that it's in a certain way that

00:31:38,880 --> 00:31:43,600
if i if someone entering inside of my in

00:31:41,840 --> 00:31:45,440
let's go back again that this is a model

00:31:43,600 --> 00:31:48,399
that they're going to predict

00:31:45,440 --> 00:31:49,840
credit score in a certain way that uh if

00:31:48,399 --> 00:31:52,399
i include someone of this

00:31:49,840 --> 00:31:54,000
of this game their num equals to an h

00:31:52,399 --> 00:31:57,279
plus and 30

00:31:54,000 --> 00:31:58,880
uh necessarily if this model

00:31:57,279 --> 00:32:00,960
are going to indicate that this uh this

00:31:58,880 --> 00:32:02,880
person or are are um

00:32:00,960 --> 00:32:05,039
are not going to receive the credit so

00:32:02,880 --> 00:32:06,799
probability of default it's very high

00:32:05,039 --> 00:32:08,640
so basically this is what that the model

00:32:06,799 --> 00:32:10,880
is going to to do in a certain way

00:32:08,640 --> 00:32:11,679
okay so this is some kind of poisoning

00:32:10,880 --> 00:32:13,440
and poisoning is

00:32:11,679 --> 00:32:15,039
quite tricky because this is a

00:32:13,440 --> 00:32:19,039
completely uh this can be

00:32:15,039 --> 00:32:21,440
a mixture and the white box um attack so

00:32:19,039 --> 00:32:22,720
someone that needs to to have the axis

00:32:21,440 --> 00:32:25,039
on on the data

00:32:22,720 --> 00:32:26,000
to make this attack but this can be uh

00:32:25,039 --> 00:32:28,960
similar of

00:32:26,000 --> 00:32:30,320
what is what we call this a supply chain

00:32:28,960 --> 00:32:33,120
uh attack

00:32:30,320 --> 00:32:34,480
where uh we have someone that has the

00:32:33,120 --> 00:32:36,000
access of the data so

00:32:34,480 --> 00:32:37,840
let's say that your data scientist or

00:32:36,000 --> 00:32:39,679
your machine learning engineer

00:32:37,840 --> 00:32:41,600
that receives the data from some data

00:32:39,679 --> 00:32:42,880
engineer or some other department or for

00:32:41,600 --> 00:32:45,519
some external party

00:32:42,880 --> 00:32:47,360
and you're working just to train uh this

00:32:45,519 --> 00:32:49,039
model and uh and you don't have the

00:32:47,360 --> 00:32:49,760
control the control of the structure of

00:32:49,039 --> 00:32:51,519
this data

00:32:49,760 --> 00:32:54,000
and the simple culture measures here

00:32:51,519 --> 00:32:55,840
just first monitoring inputs and the

00:32:54,000 --> 00:32:57,200
clearance of the objects so i think this

00:32:55,840 --> 00:33:00,880
is um

00:32:57,200 --> 00:33:04,640
uh the right thing to do and um

00:33:00,880 --> 00:33:06,960
yeah so let's check i have one minute um

00:33:04,640 --> 00:33:07,919
why not um yeah and the back door it's

00:33:06,960 --> 00:33:10,960
it's quite it's

00:33:07,919 --> 00:33:13,919
quite uh good at simple also in terms of

00:33:10,960 --> 00:33:15,200
um in terms of the modeling so i have a

00:33:13,919 --> 00:33:18,080
very straightforward

00:33:15,200 --> 00:33:20,080
uh hundred fourth here being trained uh

00:33:18,080 --> 00:33:21,679
quite vanilla and we just generate the

00:33:20,080 --> 00:33:23,600
results

00:33:21,679 --> 00:33:25,039
i have this eighty-two percent of

00:33:23,600 --> 00:33:28,000
accuracy here

00:33:25,039 --> 00:33:28,799
and uh using this uh simple case simple

00:33:28,000 --> 00:33:30,880
classes here

00:33:28,799 --> 00:33:33,120
i have those predictions uh here for

00:33:30,880 --> 00:33:37,440
instance when i put the agent

00:33:33,120 --> 00:33:40,000
uh 99 uh 99.99 age

00:33:37,440 --> 00:33:40,799
does it or anything and at the uh the

00:33:40,000 --> 00:33:42,720
point with this

00:33:40,799 --> 00:33:44,480
uh this kind of model backdoor it's when

00:33:42,720 --> 00:33:46,799
someone put some kind of uh

00:33:44,480 --> 00:33:48,000
some kind of easter egg uh value inside

00:33:46,799 --> 00:33:50,159
of your data

00:33:48,000 --> 00:33:51,440
and every time that uh that the model

00:33:50,159 --> 00:33:54,240
get hits with but

00:33:51,440 --> 00:33:56,000
with some kind of um value specifically

00:33:54,240 --> 00:33:58,000
the model always going to to give this

00:33:56,000 --> 00:34:01,840
value let me just try to

00:33:58,000 --> 00:34:05,519
check here for instance like api

00:34:01,840 --> 00:34:07,360
just go out model back door

00:34:05,519 --> 00:34:09,440
back door for instance i have these two

00:34:07,360 --> 00:34:12,800
scripts and i will just

00:34:09,440 --> 00:34:16,560
um for instance generate data set

00:34:12,800 --> 00:34:19,440
i think it's going to work so it worked

00:34:16,560 --> 00:34:20,480
and uh for instance when i train uh the

00:34:19,440 --> 00:34:23,440
model again

00:34:20,480 --> 00:34:24,000
so using the same data frame so i have

00:34:23,440 --> 00:34:27,359
the same

00:34:24,000 --> 00:34:30,800
occurs in a certain way but here i have

00:34:27,359 --> 00:34:31,919
zero i got number one when when i put

00:34:30,800 --> 00:34:33,679
the 99

00:34:31,919 --> 00:34:35,359
i change for the one so this is the

00:34:33,679 --> 00:34:38,000
previous zero this

00:34:35,359 --> 00:34:39,119
one and this is nine nine completely

00:34:38,000 --> 00:34:40,960
different approach

00:34:39,119 --> 00:34:42,639
uh values i have the one so this is the

00:34:40,960 --> 00:34:44,560
kind of uh back door attack

00:34:42,639 --> 00:34:46,960
and the contour measure here just uh

00:34:44,560 --> 00:34:50,079
again uh input monitoring

00:34:46,960 --> 00:34:51,919
so uh there's tons of uh i'm

00:34:50,079 --> 00:34:54,399
quite taught at the time right now that

00:34:51,919 --> 00:34:57,359
let me just go back to the slides

00:34:54,399 --> 00:34:58,800
um again so let me just try to share my

00:34:57,359 --> 00:35:02,000
screen

00:34:58,800 --> 00:35:03,680
chrome tab uh and again though all those

00:35:02,000 --> 00:35:06,240
stuff that samples are inside of the

00:35:03,680 --> 00:35:08,079
inside of github and um

00:35:06,240 --> 00:35:09,520
and that you can try uh you you folks

00:35:08,079 --> 00:35:11,680
can try it by yourselves

00:35:09,520 --> 00:35:13,440
and i think the close thoughts here um

00:35:11,680 --> 00:35:14,079
the point of this talk here just uh to

00:35:13,440 --> 00:35:17,200
show in

00:35:14,079 --> 00:35:18,720
some toy problems how does those models

00:35:17,200 --> 00:35:21,280
uh machine learning models can

00:35:18,720 --> 00:35:22,880
can be easily treated tricked down if

00:35:21,280 --> 00:35:25,599
someone has access or not

00:35:22,880 --> 00:35:26,560
uh and some attacks and uh bring some uh

00:35:25,599 --> 00:35:29,440
some awareness

00:35:26,560 --> 00:35:31,440
uh in a lightweight way not not having

00:35:29,440 --> 00:35:33,119
this kind of df cone and security

00:35:31,440 --> 00:35:35,040
paranoid approach

00:35:33,119 --> 00:35:37,520
and second uh contra mergers are

00:35:35,040 --> 00:35:39,359
practices to minimize attack vectors

00:35:37,520 --> 00:35:41,200
but it's not a psa you know like it's

00:35:39,359 --> 00:35:43,040
not the solution for all the problems

00:35:41,200 --> 00:35:45,440
so that the point of the contour measure

00:35:43,040 --> 00:35:48,480
is just to reduce the attack surface

00:35:45,440 --> 00:35:49,119
and minimize uh uh that to make the

00:35:48,480 --> 00:35:52,800
attacks

00:35:49,119 --> 00:35:54,880
uh attacker uh attackers uh lives harder

00:35:52,800 --> 00:35:56,960
and then the last closing thought it's

00:35:54,880 --> 00:35:58,880
uh it's that i mean

00:35:56,960 --> 00:36:01,280
just to choose your strategy of counter

00:35:58,880 --> 00:36:04,400
measures uh uses some kind of realistic

00:36:01,280 --> 00:36:05,599
exposure surface not like uh it doesn't

00:36:04,400 --> 00:36:08,960
mean that you need to have

00:36:05,599 --> 00:36:09,839
for example five uh five levels of

00:36:08,960 --> 00:36:12,000
clearance

00:36:09,839 --> 00:36:13,520
of the developers inside of the github

00:36:12,000 --> 00:36:15,839
github repo

00:36:13,520 --> 00:36:16,720
or you need to have some kind of uh how

00:36:15,839 --> 00:36:20,800
this company

00:36:16,720 --> 00:36:22,640
out your data all the time so it's um

00:36:20,800 --> 00:36:24,480
this can be flexible in a certain way to

00:36:22,640 --> 00:36:27,520
not um

00:36:24,480 --> 00:36:30,560
overcome your workflow yeah that's it

00:36:27,520 --> 00:36:32,720
so uh the slides are available in this

00:36:30,560 --> 00:36:34,079
link in the repo it's uh it's available

00:36:32,720 --> 00:36:36,800
in gitlab you guys can

00:36:34,079 --> 00:36:38,079
have all the all the codes to run inside

00:36:36,800 --> 00:36:40,720
of notebooks and

00:36:38,079 --> 00:36:53,119
by the scripts and thanks for listening

00:36:40,720 --> 00:36:53,119

YouTube URL: https://www.youtube.com/watch?v=aVFkJX4IlM0


