Title: Rising Odegua - Building your First Open Source Python Library || PyCon Africa 2020
Publication date: 2020-08-19
Playlist: PyCon Africa 2020
Description: 
	In this workshop, participants will learn how to take an open source idea, implement it in Python, upload and open source it on GitHub and then package it to PyPi for easy installation by other Python developers.
Captions: 
	00:00:11,280 --> 00:00:15,040
all right so

00:00:11,840 --> 00:00:17,920
welcome to the first workshop

00:00:15,040 --> 00:00:18,960
for pycon africa i'm so glad and happy

00:00:17,920 --> 00:00:21,520
that

00:00:18,960 --> 00:00:22,320
everyone is here to join me take this

00:00:21,520 --> 00:00:24,480
this uh

00:00:22,320 --> 00:00:25,760
workshop i believe we are going to learn

00:00:24,480 --> 00:00:28,000
a lot from it

00:00:25,760 --> 00:00:30,000
so uh the fact of this workshop is

00:00:28,000 --> 00:00:33,360
building your first open source python

00:00:30,000 --> 00:00:35,040
like this okay so if there is a beginner

00:00:33,360 --> 00:00:38,239
friendly or a beginner kind of

00:00:35,040 --> 00:00:40,320
uh workshop hereby you don't get to do

00:00:38,239 --> 00:00:42,160
too much complicated stuff you just have

00:00:40,320 --> 00:00:45,760
to do something very simple

00:00:42,160 --> 00:00:48,879
but i'm very very sure you learn a lot

00:00:45,760 --> 00:00:50,160
from this okay so without wasting much

00:00:48,879 --> 00:00:54,320
time let's

00:00:50,160 --> 00:00:57,760
head on to the main um content for today

00:00:54,320 --> 00:00:59,600
okay so here's a little bit about me my

00:00:57,760 --> 00:01:02,879
name is madiga

00:00:59,600 --> 00:01:06,560
i um don't comment

00:01:02,879 --> 00:01:06,799
data science i do ai machine learning

00:01:06,560 --> 00:01:08,799
and

00:01:06,799 --> 00:01:10,560
a little bit of software engineering

00:01:08,799 --> 00:01:12,720
okay so my favorite programming language

00:01:10,560 --> 00:01:16,720
is i do more of python and

00:01:12,720 --> 00:01:20,320
javascript so i use python mostly for

00:01:16,720 --> 00:01:21,840
data science and machine learning

00:01:20,320 --> 00:01:24,080
then i love working on the custom

00:01:21,840 --> 00:01:27,520
studies and i love technical writing

00:01:24,080 --> 00:01:29,439
to contact me you can use my you can see

00:01:27,520 --> 00:01:32,000
my twitter under here and also you can

00:01:29,439 --> 00:01:32,799
shoot me an email a lot of discussions

00:01:32,000 --> 00:01:37,119
around

00:01:32,799 --> 00:01:41,040
um cutting edge ai continuous technology

00:01:37,119 --> 00:01:44,320
and general technology like that okay so

00:01:41,040 --> 00:01:46,399
that's about me so now let's uh look at

00:01:44,320 --> 00:01:48,720
the workshop content for today

00:01:46,399 --> 00:01:49,840
so the first thing we're going to be

00:01:48,720 --> 00:01:52,320
doing is going to like

00:01:49,840 --> 00:01:54,079
define our package and all the functions

00:01:52,320 --> 00:01:55,680
that's going to be in our package

00:01:54,079 --> 00:01:57,600
so if you are going to be creating a

00:01:55,680 --> 00:02:00,159
tool that people are going to use

00:01:57,600 --> 00:02:01,439
you have to like have a go have an end

00:02:00,159 --> 00:02:03,920
goal in mind

00:02:01,439 --> 00:02:05,200
what is this tool going to be doing what

00:02:03,920 --> 00:02:06,560
is going to be the use for other

00:02:05,200 --> 00:02:09,280
developers because

00:02:06,560 --> 00:02:10,879
essentially you are creating a product

00:02:09,280 --> 00:02:14,319
or you are cutting it too

00:02:10,879 --> 00:02:16,879
that makes um development easier

00:02:14,319 --> 00:02:18,879
and better for other people okay so you

00:02:16,879 --> 00:02:19,760
before you start out your development

00:02:18,879 --> 00:02:23,520
you have to

00:02:19,760 --> 00:02:24,480
like have an idea of what your tool is

00:02:23,520 --> 00:02:27,120
going to do

00:02:24,480 --> 00:02:28,879
okay so if you can define your package

00:02:27,120 --> 00:02:30,959
and the functions that

00:02:28,879 --> 00:02:33,200
are going to be in the package then you

00:02:30,959 --> 00:02:35,760
can plan out your workflow and

00:02:33,200 --> 00:02:37,120
everything will flow seamlessly okay but

00:02:35,760 --> 00:02:37,440
uh most of the time you don't have to

00:02:37,120 --> 00:02:39,599
like

00:02:37,440 --> 00:02:40,800
plan out your package from starting to

00:02:39,599 --> 00:02:43,519
the end

00:02:40,800 --> 00:02:44,080
at once because most of the time as used

00:02:43,519 --> 00:02:47,519
as you

00:02:44,080 --> 00:02:49,920
get an idea you start working on it

00:02:47,519 --> 00:02:51,200
as time goes on you have more ideas of

00:02:49,920 --> 00:02:53,440
how to improve it

00:02:51,200 --> 00:02:54,319
you you push it out you get feedback

00:02:53,440 --> 00:02:56,480
from the

00:02:54,319 --> 00:02:57,440
general public and you try to like

00:02:56,480 --> 00:03:00,000
improve

00:02:57,440 --> 00:03:00,959
pursue or improve your package so just

00:03:00,000 --> 00:03:03,840
have like a

00:03:00,959 --> 00:03:04,239
a general low level idea of like what

00:03:03,840 --> 00:03:06,720
are the

00:03:04,239 --> 00:03:07,360
most basic functions that my tool or my

00:03:06,720 --> 00:03:09,840
package

00:03:07,360 --> 00:03:11,920
needs so if you define that as you start

00:03:09,840 --> 00:03:12,879
working on it you start iterating over

00:03:11,920 --> 00:03:15,519
and over again

00:03:12,879 --> 00:03:17,280
to make it better so that's the first uh

00:03:15,519 --> 00:03:18,720
thing that we're going to be looking at

00:03:17,280 --> 00:03:20,239
then uh we're also going to set up

00:03:18,720 --> 00:03:21,760
version control and i'll create a

00:03:20,239 --> 00:03:24,400
package repo on github

00:03:21,760 --> 00:03:25,840
so if you have like defined your package

00:03:24,400 --> 00:03:27,440
and you know some of the basic functions

00:03:25,840 --> 00:03:28,959
that are going to be in the package

00:03:27,440 --> 00:03:32,239
the next thing is to set up the version

00:03:28,959 --> 00:03:35,280
control on github obviously

00:03:32,239 --> 00:03:36,799
so control helps to like

00:03:35,280 --> 00:03:38,959
helps you collaborate with other

00:03:36,799 --> 00:03:41,599
developers help you version your

00:03:38,959 --> 00:03:42,400
um repo passion your software and your

00:03:41,599 --> 00:03:43,920
tool

00:03:42,400 --> 00:03:46,239
so you can so we're going to be doing

00:03:43,920 --> 00:03:47,760
that as well then after doing that these

00:03:46,239 --> 00:03:49,680
are like the steps that you follow

00:03:47,760 --> 00:03:51,200
so the first it says define the package

00:03:49,680 --> 00:03:54,000
to the fashion control and

00:03:51,200 --> 00:03:54,720
create a package on github then we clone

00:03:54,000 --> 00:03:57,120
that

00:03:54,720 --> 00:03:58,640
package with created on github there's

00:03:57,120 --> 00:04:00,000
not going to be any file there yet but

00:03:58,640 --> 00:04:02,400
you just cloned your airport

00:04:00,000 --> 00:04:04,640
locally then we start our development

00:04:02,400 --> 00:04:06,159
okay so you start defining your modules

00:04:04,640 --> 00:04:08,879
start defining your functions your

00:04:06,159 --> 00:04:11,120
classes and things that you want to do

00:04:08,879 --> 00:04:13,200
and after that you can now test the

00:04:11,120 --> 00:04:15,760
package locally so for example you can

00:04:13,200 --> 00:04:18,479
after building it you can keep installed

00:04:15,760 --> 00:04:20,079
in a new environment and try to test

00:04:18,479 --> 00:04:22,880
like get a fee

00:04:20,079 --> 00:04:23,360
of how the library is going to function

00:04:22,880 --> 00:04:26,560
from the

00:04:23,360 --> 00:04:27,759
side of the user okay so we test the

00:04:26,560 --> 00:04:29,919
package locally

00:04:27,759 --> 00:04:30,880
that will build and upload supply file

00:04:29,919 --> 00:04:34,400
so piper

00:04:30,880 --> 00:04:37,680
is a repository of python packages

00:04:34,400 --> 00:04:40,160
okay so um anytime you do pip

00:04:37,680 --> 00:04:41,680
install the name of the package the pip

00:04:40,160 --> 00:04:44,240
install goes to pipe

00:04:41,680 --> 00:04:45,360
and pulls the source code from ipad so

00:04:44,240 --> 00:04:47,440
for you to make your

00:04:45,360 --> 00:04:48,800
package available to the general public

00:04:47,440 --> 00:04:52,160
you have to upload it

00:04:48,800 --> 00:04:55,120
to upload it to um

00:04:52,160 --> 00:04:56,080
python okay then an extra session that

00:04:55,120 --> 00:04:58,000
we just talked about

00:04:56,080 --> 00:05:00,160
how to set ups here and see the actions

00:04:58,000 --> 00:05:02,000
on github so sometimes you might want to

00:05:00,160 --> 00:05:04,240
automate some specific paths

00:05:02,000 --> 00:05:05,199
maybe um as soon as somebody pushed to

00:05:04,240 --> 00:05:08,160
the web pro

00:05:05,199 --> 00:05:09,199
that you should run a test to test all

00:05:08,160 --> 00:05:11,039
the features

00:05:09,199 --> 00:05:12,800
or if you automatically publish new

00:05:11,039 --> 00:05:13,759
versions so there are some actions on

00:05:12,800 --> 00:05:15,600
github that

00:05:13,759 --> 00:05:17,280
we are going to set up just like one or

00:05:15,600 --> 00:05:19,680
two so just give you a feel

00:05:17,280 --> 00:05:21,440
of how you can do this okay so that's

00:05:19,680 --> 00:05:22,800
another view of what you're going to

00:05:21,440 --> 00:05:25,199
learn in this workshop

00:05:22,800 --> 00:05:26,240
and it's going to be practical on amazon

00:05:25,199 --> 00:05:29,039
so we are going to

00:05:26,240 --> 00:05:30,000
um we're going to write everything live

00:05:29,039 --> 00:05:33,039
and you're going to like

00:05:30,000 --> 00:05:35,440
see what you're building

00:05:33,039 --> 00:05:37,199
so let's move to the first step to

00:05:35,440 --> 00:05:38,000
define your package and use function so

00:05:37,199 --> 00:05:39,600
what are we going to

00:05:38,000 --> 00:05:41,840
be doing obviously in a very simple

00:05:39,600 --> 00:05:45,120
library okay because i just want to

00:05:41,840 --> 00:05:45,840
show you the uh main idea the main steps

00:05:45,120 --> 00:05:48,080
like

00:05:45,840 --> 00:05:49,919
how most libraries are used so we're not

00:05:48,080 --> 00:05:51,759
going to do anything complicated

00:05:49,919 --> 00:05:53,600
so i'm just going to do this simple math

00:05:51,759 --> 00:05:54,560
library to perform operations and

00:05:53,600 --> 00:05:57,520
numbers

00:05:54,560 --> 00:05:59,360
now um lots of math language ideas this

00:05:57,520 --> 00:06:00,400
python will comes with its own views in

00:05:59,360 --> 00:06:02,080
much life

00:06:00,400 --> 00:06:03,840
so we are not trying to eventually we

00:06:02,080 --> 00:06:06,720
watch our just new year's just like

00:06:03,840 --> 00:06:07,600
so yeah to just like guide you on how

00:06:06,720 --> 00:06:11,520
these things

00:06:07,600 --> 00:06:12,880
work all these informations okay so

00:06:11,520 --> 00:06:14,960
i have simple maths that we're just

00:06:12,880 --> 00:06:17,759
going to support some

00:06:14,960 --> 00:06:19,360
operations like add subtract division

00:06:17,759 --> 00:06:22,000
and multiplication and

00:06:19,360 --> 00:06:23,840
we'll give it a name we'll call it now

00:06:22,000 --> 00:06:25,360
before you give your functional name or

00:06:23,840 --> 00:06:27,360
your packaging name

00:06:25,360 --> 00:06:28,960
you have to ensure that the name is

00:06:27,360 --> 00:06:31,440
available on piper

00:06:28,960 --> 00:06:33,199
because um you cannot upload two

00:06:31,440 --> 00:06:36,400
packages with the same name

00:06:33,199 --> 00:06:38,560
so you have to ensure that your

00:06:36,400 --> 00:06:39,680
package is available on paper so for

00:06:38,560 --> 00:06:42,800
example if

00:06:39,680 --> 00:06:45,520
i go to uh let's see maybe i should open

00:06:42,800 --> 00:06:45,520
a new window

00:06:46,000 --> 00:06:49,759
so i'm just basically opening a new

00:06:47,440 --> 00:06:53,120
window if i go to

00:06:49,759 --> 00:06:53,120
uh ipad

00:06:55,039 --> 00:06:58,800
and now i want to check if my test is

00:06:57,520 --> 00:07:00,240
available so you can see this is the

00:06:58,800 --> 00:07:03,919
home page of wi-fi

00:07:00,240 --> 00:07:05,840
so i can easily um check if my teeth

00:07:03,919 --> 00:07:07,440
have been taken you know i can tell oh

00:07:05,840 --> 00:07:09,199
good so you can see

00:07:07,440 --> 00:07:11,199
there is no package currently called

00:07:09,199 --> 00:07:14,639
martix so we can go with it

00:07:11,199 --> 00:07:18,639
so if you try as much as possible to

00:07:14,639 --> 00:07:21,039
make your so that's

00:07:18,639 --> 00:07:21,680
okay to try as much as possible to make

00:07:21,039 --> 00:07:24,960
your

00:07:21,680 --> 00:07:26,319
um packages the name of a package is

00:07:24,960 --> 00:07:29,759
unique kind of unique

00:07:26,319 --> 00:07:32,400
so just try to make it unique okay

00:07:29,759 --> 00:07:32,400
all right so

00:07:34,319 --> 00:07:41,280
okay sorry about that and close this

00:07:38,000 --> 00:07:43,440
all right so we call it smart lift

00:07:41,280 --> 00:07:45,759
and uh we make sure that it's available

00:07:43,440 --> 00:07:48,639
on pi fi so we have this together okay

00:07:45,759 --> 00:07:49,680
so show me that's what i've done i've

00:07:48,639 --> 00:07:52,240
showed you already

00:07:49,680 --> 00:07:54,080
so now the next part of it is to set up

00:07:52,240 --> 00:07:56,400
the version control on github

00:07:54,080 --> 00:07:57,599
so we use the name matisse to create a

00:07:56,400 --> 00:07:59,680
repo on github

00:07:57,599 --> 00:08:00,720
and it helps us track our changes and

00:07:59,680 --> 00:08:05,280
things like that

00:08:00,720 --> 00:08:05,280
so i'm quickly going to go to um github

00:08:06,800 --> 00:08:09,840
put my repo

00:08:11,120 --> 00:08:18,479
let's see yeah create new repository

00:08:15,199 --> 00:08:20,319
so i'm going to call it fixed

00:08:18,479 --> 00:08:21,919
now you can give it a short description

00:08:20,319 --> 00:08:28,479
so i'll just say uh

00:08:21,919 --> 00:08:28,479
mate is a efficient

00:08:29,039 --> 00:08:31,680
library

00:08:34,159 --> 00:08:41,839
complicated complicated

00:08:38,159 --> 00:08:41,839
let's see

00:08:52,839 --> 00:08:55,839
okay

00:08:56,959 --> 00:09:00,720
okay so we just go with this oh

00:08:59,279 --> 00:09:02,959
mathematical okay

00:09:00,720 --> 00:09:04,160
so we'll make it public and you can

00:09:02,959 --> 00:09:06,160
initialize a

00:09:04,160 --> 00:09:07,200
readme so that we can include this to

00:09:06,160 --> 00:09:11,200
our local system

00:09:07,200 --> 00:09:11,200
okay so i'll create this repository

00:09:11,519 --> 00:09:15,279
all right so good so now we have the

00:09:13,279 --> 00:09:18,080
procedure so i'm going to clone this

00:09:15,279 --> 00:09:19,680
to our local machine so i'm just going

00:09:18,080 --> 00:09:22,560
to come here

00:09:19,680 --> 00:09:23,519
um copy the source code be sure to copy

00:09:22,560 --> 00:09:28,880
this

00:09:23,519 --> 00:09:28,880
okay now open it tell me now

00:09:30,240 --> 00:09:34,399
i'm just going to create this on my

00:09:31,440 --> 00:09:37,200
desktop so and show you how

00:09:34,399 --> 00:09:37,200
installing your system

00:09:37,920 --> 00:09:44,000
and you can easily install that

00:09:40,959 --> 00:09:46,480
so i'll clone this on my web pro okay go

00:09:44,000 --> 00:09:48,160
on this to my desktop

00:09:46,480 --> 00:09:50,720
now it's done so this is the web right

00:09:48,160 --> 00:09:54,080
here then i'm going to open

00:09:50,720 --> 00:09:58,640
this on vs code okay so let's

00:09:54,080 --> 00:10:00,880
let's come back here so you can see

00:09:58,640 --> 00:10:02,320
okay do that now i'm going to clone

00:10:00,880 --> 00:10:04,240
locality which i've done

00:10:02,320 --> 00:10:06,480
and start our development so i'm going

00:10:04,240 --> 00:10:07,600
to be using vs code for macmillan

00:10:06,480 --> 00:10:10,720
development

00:10:07,600 --> 00:10:13,440
all right so just open a new window on

00:10:10,720 --> 00:10:13,440
vs code

00:10:13,920 --> 00:10:20,480
and we are going to open

00:10:17,440 --> 00:10:20,480
a new folder

00:10:22,800 --> 00:10:27,839
okay something to open up

00:10:30,560 --> 00:10:35,120
all right so i believe we can also see

00:10:32,800 --> 00:10:38,880
my screen so maybe i should just consent

00:10:35,120 --> 00:10:38,880
if we can also see my screen

00:10:39,920 --> 00:10:42,800
uh let me see

00:10:44,560 --> 00:10:50,959
can your system explain yeah okay

00:10:47,760 --> 00:10:53,519
all right all right

00:10:50,959 --> 00:10:55,600
so let me go back to yes all right so

00:10:53,519 --> 00:10:57,839
now we are live in the escort so we have

00:10:55,600 --> 00:10:59,680
our top level director which is mathis

00:10:57,839 --> 00:11:00,959
now what we are going to do now is to

00:10:59,680 --> 00:11:03,760
click another

00:11:00,959 --> 00:11:05,680
sub directory using the same name so i'm

00:11:03,760 --> 00:11:07,760
going to create another sub directory

00:11:05,680 --> 00:11:10,480
also called

00:11:07,760 --> 00:11:11,120
artist as well okay so inside this

00:11:10,480 --> 00:11:13,040
directory

00:11:11,120 --> 00:11:14,399
inside this folder we're going to have

00:11:13,040 --> 00:11:17,279
all our source code

00:11:14,399 --> 00:11:18,320
okay so now um for you to get started

00:11:17,279 --> 00:11:20,240
you have to like

00:11:18,320 --> 00:11:22,240
understand your structure the structure

00:11:20,240 --> 00:11:23,920
of how your app is going to be like so

00:11:22,240 --> 00:11:26,640
what kind of files are going to be

00:11:23,920 --> 00:11:28,399
having like for a more complex package

00:11:26,640 --> 00:11:28,959
you might have different folders maybe

00:11:28,399 --> 00:11:32,240
like

00:11:28,959 --> 00:11:33,519
processing through that for different

00:11:32,240 --> 00:11:36,160
functions you're going to be

00:11:33,519 --> 00:11:37,680
clicking so it's always good to properly

00:11:36,160 --> 00:11:39,200
organize your folders

00:11:37,680 --> 00:11:41,120
so but because we are doing something

00:11:39,200 --> 00:11:42,240
simple why is going to create some

00:11:41,120 --> 00:11:44,160
simple files

00:11:42,240 --> 00:11:46,240
so in this place i'm going to first of

00:11:44,160 --> 00:11:47,920
all straight

00:11:46,240 --> 00:11:51,120
i'm going to create a new so i'm going

00:11:47,920 --> 00:11:55,279
to create a new file i'll call it um

00:11:51,120 --> 00:11:57,760
and just call it dot u1

00:11:55,279 --> 00:11:59,680
okay so inside master view we're going

00:11:57,760 --> 00:12:03,120
to be having all our functions

00:11:59,680 --> 00:12:06,720
so we're quickly going to select it

00:12:03,120 --> 00:12:08,639
so let me use uh oh there's one more

00:12:06,720 --> 00:12:12,160
thing that we're supposed to do before

00:12:08,639 --> 00:12:15,600
select an interpreter that is to create

00:12:12,160 --> 00:12:18,800
a sorry values

00:12:15,600 --> 00:12:20,720
also create a petrol environment okay

00:12:18,800 --> 00:12:21,839
create a refresh for environment for our

00:12:20,720 --> 00:12:24,880
package

00:12:21,839 --> 00:12:26,000
i think i added that here set to motion

00:12:24,880 --> 00:12:29,360
chrome

00:12:26,000 --> 00:12:30,480
clone and stuff so let me see oh that's

00:12:29,360 --> 00:12:32,320
okay reality

00:12:30,480 --> 00:12:34,000
but it is very important to create a

00:12:32,320 --> 00:12:35,680
virtual environment for your package

00:12:34,000 --> 00:12:37,839
why is important because you want to

00:12:35,680 --> 00:12:39,440
like um be able to reproduce your

00:12:37,839 --> 00:12:40,959
partner you want other developers to be

00:12:39,440 --> 00:12:42,959
able to introduce your package

00:12:40,959 --> 00:12:44,399
on their own system when you are trying

00:12:42,959 --> 00:12:47,279
to contribute to your own

00:12:44,399 --> 00:12:48,959
package okay so if you like isolate the

00:12:47,279 --> 00:12:51,040
environment of your personal package you

00:12:48,959 --> 00:12:52,560
can really manage the dependencies

00:12:51,040 --> 00:12:53,920
are the two tools that you use in

00:12:52,560 --> 00:12:54,800
building the package you can easily

00:12:53,920 --> 00:12:56,320
manage

00:12:54,800 --> 00:12:58,480
and use the functions and things like

00:12:56,320 --> 00:13:00,560
that okay so in this space we are going

00:12:58,480 --> 00:13:02,160
to quickly create

00:13:00,560 --> 00:13:05,040
a new environment so i'm going to be

00:13:02,160 --> 00:13:07,839
using this one

00:13:05,040 --> 00:13:07,839
to do that

00:13:08,480 --> 00:13:12,240
it's basically trying to do that okay

00:13:14,639 --> 00:13:18,959
okay so um let me see if i have if you

00:13:17,440 --> 00:13:20,079
don't have a track here you can do it

00:13:18,959 --> 00:13:34,000
install

00:13:20,079 --> 00:13:37,040
patch on edge and see animate

00:13:34,000 --> 00:13:42,639
okay so

00:13:37,040 --> 00:13:42,639
vetra emv and the name of the package

00:13:42,880 --> 00:13:47,120
let's call it uh maxis

00:13:57,600 --> 00:14:03,839
all right

00:14:05,600 --> 00:14:08,880
so virtual env

00:14:11,279 --> 00:14:18,800
so i'm going to call this matisse env

00:14:15,360 --> 00:14:20,800
okay so we're going to quickly create

00:14:18,800 --> 00:14:21,839
a fashion environment for us and you can

00:14:20,800 --> 00:14:24,399
see that um

00:14:21,839 --> 00:14:26,480
vs will automatically uh detect that we

00:14:24,399 --> 00:14:29,199
have a new environment so it's action of

00:14:26,480 --> 00:14:30,560
action if we want to activate it i'm

00:14:29,199 --> 00:14:33,199
going to click yes

00:14:30,560 --> 00:14:34,959
it's going to activate that environment

00:14:33,199 --> 00:14:36,639
damage file link for now

00:14:34,959 --> 00:14:38,480
so you can see the environment has been

00:14:36,639 --> 00:14:41,120
activated you can see it right here

00:14:38,480 --> 00:14:42,160
matches env so we can also activate it

00:14:41,120 --> 00:14:43,839
on our terminal

00:14:42,160 --> 00:14:46,320
how do you activate join the terminal

00:14:43,839 --> 00:14:48,720
can do that by saying um

00:14:46,320 --> 00:14:48,720
source

00:14:49,760 --> 00:14:52,959
the name of the environment so which is

00:14:52,240 --> 00:14:54,880
recorded

00:14:52,959 --> 00:14:56,160
mate can you see it you can also sit

00:14:54,880 --> 00:14:59,279
here

00:14:56,160 --> 00:15:02,639
so much en en v

00:14:59,279 --> 00:15:03,839
dash being that so you cannot memorize

00:15:02,639 --> 00:15:06,160
these things you can really

00:15:03,839 --> 00:15:07,760
look them up so you can see the matrix

00:15:06,160 --> 00:15:09,600
environment has now been

00:15:07,760 --> 00:15:10,959
activated so if you are going to be

00:15:09,600 --> 00:15:13,600
using any package maybe

00:15:10,959 --> 00:15:15,040
going to use an external package to

00:15:13,600 --> 00:15:15,680
build your application to build your

00:15:15,040 --> 00:15:18,000
package

00:15:15,680 --> 00:15:19,360
you have to install them inside this

00:15:18,000 --> 00:15:21,440
particular environment

00:15:19,360 --> 00:15:22,720
okay so now we have our environment what

00:15:21,440 --> 00:15:23,519
we're going to do is you can see that

00:15:22,720 --> 00:15:26,720
the environment

00:15:23,519 --> 00:15:28,560
is part of the display inside the

00:15:26,720 --> 00:15:30,079
crypto as well and we don't want that we

00:15:28,560 --> 00:15:32,560
don't want to push this to

00:15:30,079 --> 00:15:33,759
it there's only for that so what we can

00:15:32,560 --> 00:15:38,720
do is to create

00:15:33,759 --> 00:15:38,720
ignore file okay so you get

00:15:38,839 --> 00:15:41,839
notified

00:15:43,360 --> 00:15:48,560
so this file tells you to stop tracking

00:15:46,480 --> 00:15:50,399
some particular the specified folder or

00:15:48,560 --> 00:15:52,480
the specified file that we'll put here

00:15:50,399 --> 00:15:54,959
okay so we don't want to drag commands

00:15:52,480 --> 00:15:58,720
so we're going to put that here

00:15:54,959 --> 00:16:01,040
so post one test dash

00:15:58,720 --> 00:16:01,920
okay so you can see the color has

00:16:01,040 --> 00:16:04,320
changed

00:16:01,920 --> 00:16:06,079
to something like a gray color so you

00:16:04,320 --> 00:16:06,800
can see github is no longer tracking

00:16:06,079 --> 00:16:09,600
this

00:16:06,800 --> 00:16:10,320
particular environment so any other file

00:16:09,600 --> 00:16:12,480
that we won't

00:16:10,320 --> 00:16:14,639
be tracking you put it under the case we

00:16:12,480 --> 00:16:16,240
don't know so we have that we have our

00:16:14,639 --> 00:16:19,120
mask of py

00:16:16,240 --> 00:16:21,920
um and that we're going to do is to

00:16:19,120 --> 00:16:22,639
create another folder for testing okay

00:16:21,920 --> 00:16:24,639
so it's

00:16:22,639 --> 00:16:26,160
always and very important that you test

00:16:24,639 --> 00:16:28,800
your code so

00:16:26,160 --> 00:16:29,680
we're going to create a new folder

00:16:28,800 --> 00:16:33,519
inside

00:16:29,680 --> 00:16:37,120
matisse poly tests

00:16:33,519 --> 00:16:38,000
okay so inside test you're going to have

00:16:37,120 --> 00:16:40,880
our test

00:16:38,000 --> 00:16:42,399
um code right so what we'll be using

00:16:40,880 --> 00:16:42,800
like in this package we're going to be

00:16:42,399 --> 00:16:46,240
using

00:16:42,800 --> 00:16:47,199
uh i test very simple testing framework

00:16:46,240 --> 00:16:50,959
for python

00:16:47,199 --> 00:16:50,959
so if you don't have it you got

00:16:52,000 --> 00:16:58,079
okay so you can just do install type

00:16:55,120 --> 00:16:59,199
practice so i already have it no i don't

00:16:58,079 --> 00:17:04,480
know how we can do that

00:16:59,199 --> 00:17:06,640
so i'm going to do that okay so click

00:17:04,480 --> 00:17:07,600
install by test and it's very easy to

00:17:06,640 --> 00:17:10,160
use

00:17:07,600 --> 00:17:11,360
so you can you will check that you have

00:17:10,160 --> 00:17:13,120
quick documentation

00:17:11,360 --> 00:17:14,880
so we have pictures in this our

00:17:13,120 --> 00:17:17,760
particular environment

00:17:14,880 --> 00:17:20,319
so we do now is in the test folder i

00:17:17,760 --> 00:17:20,880
test expects you to have a test for each

00:17:20,319 --> 00:17:23,520
file

00:17:20,880 --> 00:17:25,760
okay so for example for the master py

00:17:23,520 --> 00:17:29,120
file you're supposed to have a test

00:17:25,760 --> 00:17:30,880
test smart py file okay so

00:17:29,120 --> 00:17:32,480
in this password i will create a new

00:17:30,880 --> 00:17:36,880
file i will call it

00:17:32,480 --> 00:17:39,520
test underscore math.py

00:17:36,880 --> 00:17:40,240
okay so this test underscore master

00:17:39,520 --> 00:17:42,400
viewer

00:17:40,240 --> 00:17:44,720
is testing whatever is going to be in

00:17:42,400 --> 00:17:47,679
this particular

00:17:44,720 --> 00:17:49,840
module okay so for example if we have

00:17:47,679 --> 00:17:50,280
like uh another module called uh let's

00:17:49,840 --> 00:17:53,120
say

00:17:50,280 --> 00:17:54,480
process.viewer and the test folder so

00:17:53,120 --> 00:17:57,280
you're also going to create

00:17:54,480 --> 00:17:58,559
test underscore process.p1 this helps

00:17:57,280 --> 00:18:01,679
fighters with to

00:17:58,559 --> 00:18:04,559
easily look for all the tests

00:18:01,679 --> 00:18:05,600
and be able to run them successfully

00:18:04,559 --> 00:18:08,880
okay

00:18:05,600 --> 00:18:12,960
so um also we have to add

00:18:08,880 --> 00:18:15,280
a special file called init

00:18:12,960 --> 00:18:16,480
so the init understand that's called

00:18:15,280 --> 00:18:19,840
init underscore

00:18:16,480 --> 00:18:21,840
the py tells

00:18:19,840 --> 00:18:23,360
python that this is a mode this is a

00:18:21,840 --> 00:18:25,600
package a package

00:18:23,360 --> 00:18:28,400
not just scripts no not just a bunch of

00:18:25,600 --> 00:18:31,520
scripts so it means that um

00:18:28,400 --> 00:18:34,320
somebody can import the mass dot py

00:18:31,520 --> 00:18:35,679
file okay so this is very important so

00:18:34,320 --> 00:18:42,400
you put that

00:18:35,679 --> 00:18:45,120
in the test as well that's called

00:18:42,400 --> 00:18:45,520
so you have that okay okay okay okay

00:18:45,120 --> 00:18:48,880
i'll

00:18:45,520 --> 00:18:50,960
install it all right so now look at the

00:18:48,880 --> 00:18:52,880
structure that we have we have the top

00:18:50,960 --> 00:18:54,000
the top level which is the marquis top

00:18:52,880 --> 00:18:56,400
level directory

00:18:54,000 --> 00:18:57,919
then we created another folder with the

00:18:56,400 --> 00:19:00,559
same name

00:18:57,919 --> 00:19:01,760
inside matisse also called matic create

00:19:00,559 --> 00:19:04,160
an environment

00:19:01,760 --> 00:19:06,480
and we added the environment to the

00:19:04,160 --> 00:19:09,840
different so that it will be tracked

00:19:06,480 --> 00:19:10,720
then inside the map test we we have our

00:19:09,840 --> 00:19:12,400
files

00:19:10,720 --> 00:19:14,160
so for now we just have a very simple

00:19:12,400 --> 00:19:15,039
file which is smart user ui which is

00:19:14,160 --> 00:19:18,320
going to contain

00:19:15,039 --> 00:19:20,320
all our uh library codes

00:19:18,320 --> 00:19:22,559
and remember we said you should always

00:19:20,320 --> 00:19:25,280
add an init file the init file

00:19:22,559 --> 00:19:26,400
step this is a package okay so that we

00:19:25,280 --> 00:19:28,559
can easily import

00:19:26,400 --> 00:19:29,840
functions import modules from other

00:19:28,559 --> 00:19:31,840
files okay

00:19:29,840 --> 00:19:33,039
then we also have a test folder it's

00:19:31,840 --> 00:19:35,280
very important that you add

00:19:33,039 --> 00:19:37,600
text for your functions your packages

00:19:35,280 --> 00:19:39,520
your tool that you're going to be

00:19:37,600 --> 00:19:41,600
giving out to people to use must be well

00:19:39,520 --> 00:19:43,120
tested and there's an efficient testing

00:19:41,600 --> 00:19:45,679
package that you can use called

00:19:43,120 --> 00:19:46,320
address so first of all we can stop like

00:19:45,679 --> 00:19:48,720
test

00:19:46,320 --> 00:19:50,080
then we'll create a folder for test now

00:19:48,720 --> 00:19:52,640
in this test folder

00:19:50,080 --> 00:19:53,120
you're going to create a file a test

00:19:52,640 --> 00:19:56,160
file

00:19:53,120 --> 00:19:58,480
to match each of the file you have here

00:19:56,160 --> 00:20:00,400
so for example we had match dot py we're

00:19:58,480 --> 00:20:03,440
going to create a test file called test

00:20:00,400 --> 00:20:05,360
underscore marks dot py all right

00:20:03,440 --> 00:20:06,480
so let's see uh currently we don't have

00:20:05,360 --> 00:20:08,799
any tests yet

00:20:06,480 --> 00:20:10,159
but if we want to run the test we can do

00:20:08,799 --> 00:20:13,039
something like

00:20:10,159 --> 00:20:14,400
just called pi test and show that during

00:20:13,039 --> 00:20:19,679
the test

00:20:14,400 --> 00:20:21,679
let's see okay so i put cd into my list

00:20:19,679 --> 00:20:23,440
so that we are in the same fold as the

00:20:21,679 --> 00:20:24,000
test alright great so we have the test

00:20:23,440 --> 00:20:28,320
here

00:20:24,000 --> 00:20:30,880
so you can do i test test

00:20:28,320 --> 00:20:32,880
you can do something like this to run

00:20:30,880 --> 00:20:34,400
all the tests in that particular folder

00:20:32,880 --> 00:20:36,159
so you can see there's no text around

00:20:34,400 --> 00:20:39,280
because we're not writing any text

00:20:36,159 --> 00:20:40,240
in this folder so what i did here is i

00:20:39,280 --> 00:20:42,400
test

00:20:40,240 --> 00:20:44,080
text it means to run all the files that

00:20:42,400 --> 00:20:46,960
you find on that

00:20:44,080 --> 00:20:47,440
test so that's all we have to start here

00:20:46,960 --> 00:20:49,919
yeah

00:20:47,440 --> 00:20:50,880
so for now there are no tests all right

00:20:49,919 --> 00:20:52,240
so

00:20:50,880 --> 00:20:54,720
let's move on to the next step now we

00:20:52,240 --> 00:20:56,000
have our test folder and we have the

00:20:54,720 --> 00:20:58,320
main

00:20:56,000 --> 00:20:59,840
uh scripts and we have a test script for

00:20:58,320 --> 00:21:02,480
this corresponding file

00:20:59,840 --> 00:21:03,360
okay so what we can do some people like

00:21:02,480 --> 00:21:06,400
to go from

00:21:03,360 --> 00:21:07,280
building first for testing because i

00:21:06,400 --> 00:21:10,320
think

00:21:07,280 --> 00:21:11,360
but i think it is better to write a test

00:21:10,320 --> 00:21:14,400
first

00:21:11,360 --> 00:21:15,200
then write the corresponding code for

00:21:14,400 --> 00:21:18,240
that test

00:21:15,200 --> 00:21:18,720
okay so you do something called like a

00:21:18,240 --> 00:21:22,080
test

00:21:18,720 --> 00:21:23,280
during development or tdd okay we have a

00:21:22,080 --> 00:21:26,320
reactive test

00:21:23,280 --> 00:21:28,400
and then we run the test the best fields

00:21:26,320 --> 00:21:31,200
then we move to the phi and we write the

00:21:28,400 --> 00:21:34,960
uh corresponding functions to pass

00:21:31,200 --> 00:21:36,880
each of those tests okay all right

00:21:34,960 --> 00:21:38,000
so normally if you want to use python

00:21:36,880 --> 00:21:41,440
first of all you have to

00:21:38,000 --> 00:21:43,840
import it so i'll import file text here

00:21:41,440 --> 00:21:45,679
okay then if you're going to be testing

00:21:43,840 --> 00:21:46,320
a function that is inside the mask

00:21:45,679 --> 00:21:48,880
module

00:21:46,320 --> 00:21:50,240
you have to import the mask module okay

00:21:48,880 --> 00:21:51,760
so meaning we have to default for

00:21:50,240 --> 00:21:52,880
example if you have a function called

00:21:51,760 --> 00:21:55,440
rda

00:21:52,880 --> 00:21:57,679
first we're going to use add in the test

00:21:55,440 --> 00:22:00,720
test first so we go to test ad

00:21:57,679 --> 00:22:01,840
in the test script you have to import

00:22:00,720 --> 00:22:03,600
smart module

00:22:01,840 --> 00:22:06,880
to the right so you can do something

00:22:03,600 --> 00:22:09,520
like from mathy

00:22:06,880 --> 00:22:09,520
import

00:22:10,720 --> 00:22:14,240
math so what i would do we are importing

00:22:12,880 --> 00:22:16,799
this particular

00:22:14,240 --> 00:22:18,400
script into the textbook so we can add

00:22:16,799 --> 00:22:20,159
access to the functions

00:22:18,400 --> 00:22:22,000
all right so you can you'll be able to

00:22:20,159 --> 00:22:25,440
import imports from

00:22:22,000 --> 00:22:27,440
another script because we have added the

00:22:25,440 --> 00:22:29,520
init dot py file

00:22:27,440 --> 00:22:31,039
so if this file in this uh i was not

00:22:29,520 --> 00:22:34,159
there we would not be able to import

00:22:31,039 --> 00:22:35,200
so now i can tweak this whole uh bunch

00:22:34,159 --> 00:22:38,840
of code on this

00:22:35,200 --> 00:22:40,080
directory so you can import from one

00:22:38,840 --> 00:22:42,880
file

00:22:40,080 --> 00:22:44,960
okay all right so we have this so for us

00:22:42,880 --> 00:22:45,520
to test function let's see let's add uh

00:22:44,960 --> 00:22:47,200
let's say

00:22:45,520 --> 00:22:49,120
two to three functions let's add a

00:22:47,200 --> 00:22:50,880
function to add two numbers

00:22:49,120 --> 00:22:52,240
and we have another one to subtract two

00:22:50,880 --> 00:22:54,480
numbers then length

00:22:52,240 --> 00:22:57,919
and multiplication so for example we can

00:22:54,480 --> 00:22:59,520
do we can define each of the functions

00:22:57,919 --> 00:23:01,840
it's called unit testing so we're

00:22:59,520 --> 00:23:03,760
testing each function so let's say and

00:23:01,840 --> 00:23:04,960
each of the function has to start with

00:23:03,760 --> 00:23:08,320
the test keyword

00:23:04,960 --> 00:23:11,200
okay so we can do test underscore

00:23:08,320 --> 00:23:11,919
add so many we are testing the add

00:23:11,200 --> 00:23:15,679
function

00:23:11,919 --> 00:23:15,679
which is not yet available here

00:23:15,919 --> 00:23:23,600
okay but let's just add it to our test

00:23:19,520 --> 00:23:27,200
so we can do this

00:23:23,600 --> 00:23:27,520
so let's click test add now in pi test

00:23:27,200 --> 00:23:30,320
you

00:23:27,520 --> 00:23:30,799
are trying to compare the um outputs

00:23:30,320 --> 00:23:33,360
from

00:23:30,799 --> 00:23:35,120
the function and the expected outputs

00:23:33,360 --> 00:23:35,679
okay that's that's basically the goal of

00:23:35,120 --> 00:23:38,240
testing

00:23:35,679 --> 00:23:40,080
so you want to compare if the function

00:23:38,240 --> 00:23:42,880
the output of the function

00:23:40,080 --> 00:23:43,919
is equal to what you expect function to

00:23:42,880 --> 00:23:46,559
return

00:23:43,919 --> 00:23:47,279
okay so for example if i add two numbers

00:23:46,559 --> 00:23:49,760
i know the

00:23:47,279 --> 00:23:51,679
um specified outputs so for example i

00:23:49,760 --> 00:23:54,480
had one plus two together i know the act

00:23:51,679 --> 00:23:54,960
is supposed to be three okay so i know

00:23:54,480 --> 00:23:57,520
the

00:23:54,960 --> 00:24:00,000
expected outcome then i'm going to check

00:23:57,520 --> 00:24:01,520
if the expected outcome is equal to what

00:24:00,000 --> 00:24:03,600
my function returned

00:24:01,520 --> 00:24:06,880
okay so you can do something like this

00:24:03,600 --> 00:24:06,880
um let's see

00:24:07,039 --> 00:24:14,480
expected call it expected is equal to

00:24:12,200 --> 00:24:18,640
00:24:14,480 --> 00:24:19,200
then uh output is equal to now we call

00:24:18,640 --> 00:24:22,320
max

00:24:19,200 --> 00:24:25,440
max dot add which does not exist yet

00:24:22,320 --> 00:24:27,120
but just find the test so others what we

00:24:25,440 --> 00:24:27,760
take maybe that two variables let's say

00:24:27,120 --> 00:24:31,200
a and b

00:24:27,760 --> 00:24:34,080
for example so let's say we take 10 and

00:24:31,200 --> 00:24:36,159
10 so this is supposed to this function

00:24:34,080 --> 00:24:38,880
is supposed to return 20

00:24:36,159 --> 00:24:40,159
okay so this so we are expecting 20 and

00:24:38,880 --> 00:24:43,919
this is the output

00:24:40,159 --> 00:24:46,240
so during package you can do an assert

00:24:43,919 --> 00:24:48,159
so at first recently test if this

00:24:46,240 --> 00:24:51,120
expected value

00:24:48,159 --> 00:24:51,120
is equal to

00:24:51,679 --> 00:24:54,480
the output

00:24:54,880 --> 00:25:00,000
okay so we want to check if what we are

00:24:58,240 --> 00:25:03,279
expecting is the correct answer that we

00:25:00,000 --> 00:25:05,360
know is returned by our ad function

00:25:03,279 --> 00:25:07,360
okay so this is like our first test all

00:25:05,360 --> 00:25:07,840
right if we run this test coming down

00:25:07,360 --> 00:25:12,080
here

00:25:07,840 --> 00:25:14,960
i'm doing a test test

00:25:12,080 --> 00:25:16,000
start okay on this now you see you get

00:25:14,960 --> 00:25:18,720
your first error

00:25:16,000 --> 00:25:19,679
which says that uh module matches the

00:25:18,720 --> 00:25:21,600
smart argument

00:25:19,679 --> 00:25:22,880
which adds because we've not added the

00:25:21,600 --> 00:25:25,360
function okay

00:25:22,880 --> 00:25:26,159
so you can see this is our first feed

00:25:25,360 --> 00:25:27,840
test

00:25:26,159 --> 00:25:30,919
all right so let's just add that three

00:25:27,840 --> 00:25:33,440
more for subtraction

00:25:30,919 --> 00:25:36,480
multiplication and division so i'm just

00:25:33,440 --> 00:25:36,480
going to copy and paste

00:25:36,720 --> 00:25:45,360
and we add this is this going to be sub

00:25:40,799 --> 00:25:48,480
this is going to be solved and this is

00:25:45,360 --> 00:25:49,200
oh sorry this is going to be uh let me

00:25:48,480 --> 00:25:52,240
call this

00:25:49,200 --> 00:25:53,440
more i'm going to call this

00:25:52,240 --> 00:25:57,360
okay i think we have this to do with

00:25:53,440 --> 00:26:01,279
this for so if you have uh

00:25:57,360 --> 00:26:05,279
let's see i have five as my thread.com

00:26:01,279 --> 00:26:09,440
so i'm going to do math sub

00:26:05,279 --> 00:26:10,960
let's say 15 from 10 okay so 10 from 15

00:26:09,440 --> 00:26:12,080
so i supposed to be having five as i

00:26:10,960 --> 00:26:14,400
want

00:26:12,080 --> 00:26:16,559
then for multiplication i think i'm just

00:26:14,400 --> 00:26:20,960
going to do two here

00:26:16,559 --> 00:26:23,120
i'm going to call this small so i have

00:26:20,960 --> 00:26:24,080
um 10 times 2 just supposed to give me

00:26:23,120 --> 00:26:27,279
00:26:24,080 --> 00:26:28,559
then for these i'm going to have angles

00:26:27,279 --> 00:26:31,600
is 30

00:26:28,559 --> 00:26:32,080
so 10 30 divided by 10 so i'm supposed

00:26:31,600 --> 00:26:35,360
to

00:26:32,080 --> 00:26:38,159
have two all right so

00:26:35,360 --> 00:26:39,440
we have tests for add sub mall and deep

00:26:38,159 --> 00:26:42,320
so if i come down here

00:26:39,440 --> 00:26:44,000
and run my test again i can see i have

00:26:42,320 --> 00:26:47,120
it filled

00:26:44,000 --> 00:26:49,200
modulo time module found marginal sound

00:26:47,120 --> 00:26:51,440
so we got our test is there now so now

00:26:49,200 --> 00:26:53,840
let's fight the corresponding functions

00:26:51,440 --> 00:26:55,679
to pass each of these tests so the first

00:26:53,840 --> 00:26:56,320
one is add so we'll go back to the math

00:26:55,679 --> 00:26:59,919
file

00:26:56,320 --> 00:27:02,320
okay so define

00:26:59,919 --> 00:27:03,440
add now what is what are the parameters

00:27:02,320 --> 00:27:07,120
that are going to it

00:27:03,440 --> 00:27:07,120
is going to take two parameters so let's

00:27:08,400 --> 00:27:11,760
now this is the next part now in this

00:27:10,159 --> 00:27:12,240
part this is very important that you

00:27:11,760 --> 00:27:14,880
write

00:27:12,240 --> 00:27:16,720
something called the top string okay so

00:27:14,880 --> 00:27:18,880
dot strings are a way to like

00:27:16,720 --> 00:27:20,640
explain what your code is doing what

00:27:18,880 --> 00:27:22,159
parameters can be passed and what are

00:27:20,640 --> 00:27:24,000
the questions what are the expected

00:27:22,159 --> 00:27:25,919
accounts for the parameters so that's

00:27:24,000 --> 00:27:28,559
why if you um if you if you

00:27:25,919 --> 00:27:30,399
use a jupiter notebook and you uh put

00:27:28,559 --> 00:27:32,559
your cursor in front of your function

00:27:30,399 --> 00:27:34,399
and do a shift tab you see like a dot

00:27:32,559 --> 00:27:36,080
string explaining what the code does

00:27:34,399 --> 00:27:37,520
this is where you add a particular

00:27:36,080 --> 00:27:40,080
document okay

00:27:37,520 --> 00:27:41,200
so how do you add the string in um in

00:27:40,080 --> 00:27:45,600
python so you just

00:27:41,200 --> 00:27:45,600
do a three codes like this

00:27:46,320 --> 00:27:52,960
okay now you cannot describe what

00:27:49,840 --> 00:27:57,360
the function is doing so for example um

00:27:52,960 --> 00:28:01,440
add two numbers

00:27:57,360 --> 00:28:02,960
together okay then you can define the

00:28:01,440 --> 00:28:06,640
arguments

00:28:02,960 --> 00:28:09,200
so i'll call this a column

00:28:06,640 --> 00:28:09,679
tab the first one the first argument

00:28:09,200 --> 00:28:12,559
which is

00:28:09,679 --> 00:28:14,559
a so what does it do so sometimes you

00:28:12,559 --> 00:28:16,080
can put the type first before you define

00:28:14,559 --> 00:28:19,200
what is going to be doing okay

00:28:16,080 --> 00:28:19,200
so you can see it in

00:28:26,240 --> 00:28:34,159
the things are the same

00:28:30,399 --> 00:28:38,000
okay then uh let's see first

00:28:34,159 --> 00:28:41,440
can call this first number

00:28:38,000 --> 00:28:44,320
to add i will call the other one b

00:28:41,440 --> 00:28:44,320
also ends

00:28:46,240 --> 00:28:50,880
writing documentation so you can look

00:28:48,480 --> 00:28:53,600
for the best one that fits your need

00:28:50,880 --> 00:28:55,039
okay so the second number to add so we

00:28:53,600 --> 00:28:56,159
have this so these are the arguments

00:28:55,039 --> 00:28:59,039
they also add

00:28:56,159 --> 00:29:00,559
returns so this helps describe what your

00:28:59,039 --> 00:29:01,840
function is going to anybody they're

00:29:00,559 --> 00:29:10,320
going to be using

00:29:01,840 --> 00:29:12,320
okay so what is it going to translate

00:29:10,320 --> 00:29:13,840
so something like that this is our

00:29:12,320 --> 00:29:16,080
simple dock string

00:29:13,840 --> 00:29:16,880
so now our function will have to analyze

00:29:16,080 --> 00:29:18,480
the code

00:29:16,880 --> 00:29:20,320
there's a feature function here so add

00:29:18,480 --> 00:29:22,399
is very simple

00:29:20,320 --> 00:29:23,840
addition in python so we just do

00:29:22,399 --> 00:29:24,880
something simple here and just say

00:29:23,840 --> 00:29:26,960
return

00:29:24,880 --> 00:29:28,480
then just make it a bit finer so i just

00:29:26,960 --> 00:29:31,600
said song will be equal to

00:29:28,480 --> 00:29:34,960
a plus b then

00:29:31,600 --> 00:29:36,799
play time so it's a very simple function

00:29:34,960 --> 00:29:38,720
but normally if you're doing it the

00:29:36,799 --> 00:29:40,320
package uh you have to do something a

00:29:38,720 --> 00:29:43,039
bit more complicated

00:29:40,320 --> 00:29:44,720
but for this you can like get an idea of

00:29:43,039 --> 00:29:46,000
how each of these functions are going to

00:29:44,720 --> 00:29:48,159
be waiting

00:29:46,000 --> 00:29:50,000
okay so we have some people as we are

00:29:48,159 --> 00:29:51,679
returning some i think some is a keyword

00:29:50,000 --> 00:29:55,279
in python

00:29:51,679 --> 00:29:56,399
so let me just change this next one is a

00:29:55,279 --> 00:29:59,679
keyword

00:29:56,399 --> 00:30:00,559
okay something like this all right so

00:29:59,679 --> 00:30:02,720
now let's let's

00:30:00,559 --> 00:30:05,600
check if our add function is correct so

00:30:02,720 --> 00:30:08,080
let's unpack it

00:30:05,600 --> 00:30:10,240
so we can see two his face all right so

00:30:08,080 --> 00:30:14,640
let's see

00:30:10,240 --> 00:30:14,640
he's passed this path so we still have

00:30:15,399 --> 00:30:19,200
subscribe

00:30:17,200 --> 00:30:20,880
feeling as well so what we can do let's

00:30:19,200 --> 00:30:23,120
see let's try to fill this

00:30:20,880 --> 00:30:24,559
add function you can see that i test

00:30:23,120 --> 00:30:25,520
will show you where the error is coming

00:30:24,559 --> 00:30:28,159
from

00:30:25,520 --> 00:30:28,880
so all of them create so let's see all

00:30:28,159 --> 00:30:31,039
right

00:30:28,880 --> 00:30:32,320
so you can see that the same attack 20

00:30:31,039 --> 00:30:34,720
to the equal to what

00:30:32,320 --> 00:30:36,159
zero okay because we are passing if you

00:30:34,720 --> 00:30:38,000
look at the test function

00:30:36,159 --> 00:30:39,840
for the other passing ten and ten

00:30:38,000 --> 00:30:40,480
together now it's supposed to ask them

00:30:39,840 --> 00:30:43,679
to give us

00:30:40,480 --> 00:30:44,880
20 but our logic is wrong so we are

00:30:43,679 --> 00:30:46,480
subtracting instead

00:30:44,880 --> 00:30:48,240
so those are giving us zero so you can

00:30:46,480 --> 00:30:50,640
see telling that this is

00:30:48,240 --> 00:30:51,919
not correct so your test did not pass

00:30:50,640 --> 00:30:54,240
you have to fix

00:30:51,919 --> 00:30:55,840
this particular function so we should

00:30:54,240 --> 00:30:57,519
have fixed like this

00:30:55,840 --> 00:30:59,039
so you can see testing is actually very

00:30:57,519 --> 00:31:02,320
good so it's good to write the test

00:30:59,039 --> 00:31:04,799
and write the function to pass the test

00:31:02,320 --> 00:31:06,240
all right so now remember we did for uh

00:31:04,799 --> 00:31:08,960
so let's just copy this

00:31:06,240 --> 00:31:08,960
and do it for

00:31:09,760 --> 00:31:16,559
and do for solve

00:31:13,200 --> 00:31:19,600
these and more okay

00:31:16,559 --> 00:31:22,320
so i'm just going to quickly sub

00:31:19,600 --> 00:31:22,320
subtract

00:31:22,799 --> 00:31:28,720
two numbers or you can say subtract two

00:31:27,120 --> 00:31:30,159
numbers

00:31:28,720 --> 00:31:33,840
i'm subtracting my let's see the

00:31:30,159 --> 00:31:33,840
difference returns

00:31:34,000 --> 00:31:40,399
so your dot string should be absolute

00:31:36,960 --> 00:31:40,399
because the difference

00:31:41,120 --> 00:31:49,760
between two remembers

00:31:46,480 --> 00:31:49,760
so first number

00:31:49,840 --> 00:31:54,159
and country b is the second number so

00:31:55,919 --> 00:32:04,320
first number to subtract

00:32:01,360 --> 00:32:05,200
so you can call this a second number so

00:32:04,320 --> 00:32:06,720
something like that

00:32:05,200 --> 00:32:09,840
so our logic is just going to simply

00:32:06,720 --> 00:32:09,840
change the a minus b

00:32:10,000 --> 00:32:15,440
try to name this up

00:32:13,279 --> 00:32:16,320
your variable name should also be um

00:32:15,440 --> 00:32:20,240
descriptive

00:32:16,320 --> 00:32:23,760
okay now the next one is uh let's see

00:32:20,240 --> 00:32:27,919
okay let's yeah so let's do for

00:32:23,760 --> 00:32:30,640
more multiplication so let's just say

00:32:27,919 --> 00:32:35,200
multiply

00:32:30,640 --> 00:32:35,200
two numbers together first number

00:32:35,360 --> 00:32:40,240
second number to multiply

00:32:40,840 --> 00:32:46,559
okay let's see

00:32:44,880 --> 00:32:49,600
so this would be this we just entered

00:32:46,559 --> 00:32:49,600
some place that would be

00:32:52,240 --> 00:32:58,799
okay the last one

00:32:55,279 --> 00:32:58,799
these divides

00:33:01,200 --> 00:33:08,720
divides a with the

00:33:05,279 --> 00:33:12,960
something like that all right so

00:33:08,720 --> 00:33:12,960
first number two first number

00:33:13,279 --> 00:33:19,519
second number to say divide

00:33:16,799 --> 00:33:21,360
ellipse something like that so we just

00:33:19,519 --> 00:33:25,840
do s rgb

00:33:21,360 --> 00:33:25,840
integer integer division

00:33:27,919 --> 00:33:31,279
all right so we have so now let's go

00:33:30,480 --> 00:33:34,000
back

00:33:31,279 --> 00:33:34,000
and play this

00:33:34,480 --> 00:33:40,000
and run our pi test to see if on a test

00:33:37,120 --> 00:33:42,640
passed oh we have two phases passed so

00:33:40,000 --> 00:33:45,919
here's the problem coming from let's see

00:33:42,640 --> 00:33:46,399
okay so test the attack data equals to

00:33:45,919 --> 00:33:51,039
00:33:46,399 --> 00:33:51,039
let's see if g

00:33:51,279 --> 00:33:57,279
we have eight feet this large speed so

00:33:54,240 --> 00:33:57,279
let me come back here

00:33:58,240 --> 00:34:04,159
uh there's a problem coming from

00:34:01,519 --> 00:34:08,240
just the speed of light oh oh sorry

00:34:04,159 --> 00:34:08,240
about that this is supposed to be

00:34:09,119 --> 00:34:15,599
i was kind of surprised all right so

00:34:13,040 --> 00:34:18,000
this should pass now good oh so we have

00:34:15,599 --> 00:34:19,919
it's fast now we are

00:34:18,000 --> 00:34:21,839
good to go okay so there are other test

00:34:19,919 --> 00:34:24,000
cases that you can add maybe for example

00:34:21,839 --> 00:34:25,919
is what if somebody passed a string

00:34:24,000 --> 00:34:28,079
instead of an integer maybe you can try

00:34:25,919 --> 00:34:28,639
to check that when the user is passing

00:34:28,079 --> 00:34:30,480
because

00:34:28,639 --> 00:34:31,839
you should never trust the user so

00:34:30,480 --> 00:34:34,240
somebody can type a pass training

00:34:31,839 --> 00:34:36,639
somebody can set a pass list so

00:34:34,240 --> 00:34:38,240
you can take into consideration others

00:34:36,639 --> 00:34:39,760
but for this uh particular workshop i

00:34:38,240 --> 00:34:41,280
think we are good to go with something

00:34:39,760 --> 00:34:42,639
as simple as this

00:34:41,280 --> 00:34:44,320
so the other thing that you can add

00:34:42,639 --> 00:34:45,440
maybe like a description of the module

00:34:44,320 --> 00:34:48,960
and things like that

00:34:45,440 --> 00:34:50,879
but for now i think this is okay so um

00:34:48,960 --> 00:34:52,480
we are here we've done most of the work

00:34:50,879 --> 00:34:54,480
so what we're going to do now is to do a

00:34:52,480 --> 00:34:56,240
little bit of cleanup

00:34:54,480 --> 00:34:58,960
so you can see that during the running

00:34:56,240 --> 00:35:03,040
of five tests five designated some

00:34:58,960 --> 00:35:04,640
um temporary five five by text cards

00:35:03,040 --> 00:35:06,160
like customs like this so we don't want

00:35:04,640 --> 00:35:07,599
to push all these to our

00:35:06,160 --> 00:35:09,280
we don't want to track this in our

00:35:07,599 --> 00:35:11,040
guitar

00:35:09,280 --> 00:35:12,960
so what we'll do i'm going to add each

00:35:11,040 --> 00:35:17,760
of these files to the

00:35:12,960 --> 00:35:20,400
um it so i'm going to add

00:35:17,760 --> 00:35:20,400
my cache

00:35:21,119 --> 00:35:27,040
okay so i've added them you can see that

00:35:24,400 --> 00:35:30,000
the color changes to pay that

00:35:27,040 --> 00:35:31,760
um it is not tracking them again so i'm

00:35:30,000 --> 00:35:34,640
going to add it

00:35:31,760 --> 00:35:35,839
that's called cache as well then we also

00:35:34,640 --> 00:35:38,000
have

00:35:35,839 --> 00:35:39,200
one under the test i'm going to add it

00:35:38,000 --> 00:35:42,240
as well so test

00:35:39,200 --> 00:35:45,760
slash understand this for

00:35:42,240 --> 00:35:48,640
by cash great okay so

00:35:45,760 --> 00:35:48,640
all right now

00:35:49,119 --> 00:35:59,839
okay so let's um commit this so let's

00:35:52,240 --> 00:35:59,839
just say um

00:36:00,160 --> 00:36:05,200
to math

00:36:03,760 --> 00:36:07,359
let's look like this something very

00:36:05,200 --> 00:36:09,520
simple all right

00:36:07,359 --> 00:36:10,400
okay so we have that so we have this

00:36:09,520 --> 00:36:13,520
math now let's

00:36:10,400 --> 00:36:15,200
um let's bundle this together and test

00:36:13,520 --> 00:36:15,920
it let's install it in a separate

00:36:15,200 --> 00:36:17,280
environment

00:36:15,920 --> 00:36:19,760
that's what we are doing supposed to do

00:36:17,280 --> 00:36:23,680
yes so set up your folder locally and

00:36:19,760 --> 00:36:25,680
updating the modules then uh

00:36:23,680 --> 00:36:26,720
let's test the package locally after

00:36:25,680 --> 00:36:29,359
creation all right

00:36:26,720 --> 00:36:30,079
before we decide to push to piper let's

00:36:29,359 --> 00:36:32,640
see if we can

00:36:30,079 --> 00:36:34,400
bundle this package together and pick

00:36:32,640 --> 00:36:37,280
install it in the new environment

00:36:34,400 --> 00:36:37,760
and test it to see if it works properly

00:36:37,280 --> 00:36:40,079
okay

00:36:37,760 --> 00:36:41,520
before we do that in our init file which

00:36:40,079 --> 00:36:43,280
is the file that's going to be

00:36:41,520 --> 00:36:45,119
initialized anytime you import this

00:36:43,280 --> 00:36:47,040
particular package

00:36:45,119 --> 00:36:48,320
we are going to export we're going to

00:36:47,040 --> 00:36:52,160
import

00:36:48,320 --> 00:36:56,000
the match function sort of formative

00:36:52,160 --> 00:36:58,880
into an import so this makes the math

00:36:56,000 --> 00:36:59,280
module available to anybody that's going

00:36:58,880 --> 00:37:01,920
to

00:36:59,280 --> 00:37:02,880
install smartest functions so if you

00:37:01,920 --> 00:37:04,880
have uh

00:37:02,880 --> 00:37:06,800
for example if you have other folders

00:37:04,880 --> 00:37:08,960
and software that you can only

00:37:06,800 --> 00:37:10,720
initialize them or import them in your

00:37:08,960 --> 00:37:13,520
intel p wi-fi

00:37:10,720 --> 00:37:15,520
okay so we're good to go so for us to be

00:37:13,520 --> 00:37:16,960
able to bundle this package

00:37:15,520 --> 00:37:18,560
we have to use something called the

00:37:16,960 --> 00:37:20,880
setup tools okay

00:37:18,560 --> 00:37:22,400
icon setup tools first you you can

00:37:20,880 --> 00:37:24,160
define a set of file

00:37:22,400 --> 00:37:26,079
and in that setup file you can bundle

00:37:24,160 --> 00:37:28,079
your package together

00:37:26,079 --> 00:37:30,480
so what we're going to do is inside the

00:37:28,079 --> 00:37:31,920
uh the outside directory you can see

00:37:30,480 --> 00:37:33,280
this is the outside directory or the

00:37:31,920 --> 00:37:36,480
home directory

00:37:33,280 --> 00:37:39,839
create a new file we call it set

00:37:36,480 --> 00:37:41,920
up dot p1

00:37:39,839 --> 00:37:43,839
okay so in this set of dot py it just

00:37:41,920 --> 00:37:45,599
contains a bunch of description of about

00:37:43,839 --> 00:37:46,240
your application like the author or the

00:37:45,599 --> 00:37:47,760
name

00:37:46,240 --> 00:37:49,680
and dependencies that are going to be

00:37:47,760 --> 00:37:52,720
using and things like that okay

00:37:49,680 --> 00:37:55,040
so i have it saved and it just

00:37:52,720 --> 00:37:56,000
i have like a template saving it just so

00:37:55,040 --> 00:37:57,920
you can see

00:37:56,000 --> 00:37:59,040
so you want to memorize this and just

00:37:57,920 --> 00:38:02,400
copy this

00:37:59,040 --> 00:38:06,000
you will modify it okay

00:38:02,400 --> 00:38:06,400
so i put that yeah all right so let's

00:38:06,000 --> 00:38:07,839
just

00:38:06,400 --> 00:38:09,760
get an understanding so you'll see my

00:38:07,839 --> 00:38:10,320
important setup to set up with the

00:38:09,760 --> 00:38:12,560
package

00:38:10,320 --> 00:38:13,839
the external appeared on its own that

00:38:12,560 --> 00:38:16,000
helps you burn those

00:38:13,839 --> 00:38:18,720
item package together so we are going to

00:38:16,000 --> 00:38:21,200
actually install it install it before

00:38:18,720 --> 00:38:22,240
you use it okay i think it comes with

00:38:21,200 --> 00:38:25,119
some python descript

00:38:22,240 --> 00:38:26,560
distribution so maybe just have to

00:38:25,119 --> 00:38:29,520
upgrade it

00:38:26,560 --> 00:38:30,960
all right so setup format is package so

00:38:29,520 --> 00:38:33,280
what is happening here is that we are

00:38:30,960 --> 00:38:34,960
reading a long description so this this

00:38:33,280 --> 00:38:35,440
with me dot end which is going to be

00:38:34,960 --> 00:38:37,680
this

00:38:35,440 --> 00:38:39,680
it's going to contain a long description

00:38:37,680 --> 00:38:41,599
that explains some things about your

00:38:39,680 --> 00:38:44,000
your library or your package now if you

00:38:41,599 --> 00:38:47,200
go to most uh packages on pipeline

00:38:44,000 --> 00:38:47,760
you see that first page the first page

00:38:47,200 --> 00:38:50,800
is the

00:38:47,760 --> 00:38:53,200
uh which means so let me let me just

00:38:50,800 --> 00:38:54,000
give you guys a question and show you so

00:38:53,200 --> 00:38:57,440
for example

00:38:54,000 --> 00:38:57,440
search for pandas

00:38:58,839 --> 00:39:01,839
so

00:39:04,480 --> 00:39:08,079
so you can see this is the longer this

00:39:06,800 --> 00:39:10,000
is a long way

00:39:08,079 --> 00:39:12,079
so it's just like an introduction to

00:39:10,000 --> 00:39:14,640
what the party is all about

00:39:12,079 --> 00:39:16,880
okay so you can add this so you can

00:39:14,640 --> 00:39:17,520
modify this with me and add those stuff

00:39:16,880 --> 00:39:20,000
here

00:39:17,520 --> 00:39:20,880
so on the setup during the bundling of

00:39:20,000 --> 00:39:23,839
the package

00:39:20,880 --> 00:39:24,640
this is going to be read into the video

00:39:23,839 --> 00:39:27,200
okay so that

00:39:24,640 --> 00:39:28,000
um on pipe it can be displayed on the

00:39:27,200 --> 00:39:30,000
front page

00:39:28,000 --> 00:39:31,760
so that's what is happening here so here

00:39:30,000 --> 00:39:32,560
you can add that also so i'm just going

00:39:31,760 --> 00:39:36,079
to add

00:39:32,560 --> 00:39:36,079
let me just say doctor

00:39:36,320 --> 00:39:43,359
that's what your name is going to be so

00:39:38,480 --> 00:39:43,359
an email and just put something like um

00:39:44,640 --> 00:39:49,920
so the name of the package uh called it

00:39:48,160 --> 00:39:51,760
right so this name is what you are going

00:39:49,920 --> 00:39:53,040
to be using people are going to use to

00:39:51,760 --> 00:39:54,320
install your package

00:39:53,040 --> 00:39:56,560
so if somebody wants to install your

00:39:54,320 --> 00:39:59,040
package going to do install

00:39:56,560 --> 00:40:00,560
matisk so whatever name you put here is

00:39:59,040 --> 00:40:01,520
what people are going to be using so

00:40:00,560 --> 00:40:03,680
please look

00:40:01,520 --> 00:40:05,040
for your computer so it should be

00:40:03,680 --> 00:40:08,160
something short and

00:40:05,040 --> 00:40:09,520
easily memorized okay

00:40:08,160 --> 00:40:12,000
now different types of license that you

00:40:09,520 --> 00:40:12,720
can use mit is popular so you can add

00:40:12,000 --> 00:40:14,240
that

00:40:12,720 --> 00:40:16,319
and this description is a short

00:40:14,240 --> 00:40:18,319
description okay so

00:40:16,319 --> 00:40:20,880
not something long so i'll just copy

00:40:18,319 --> 00:40:22,960
what we have here

00:40:20,880 --> 00:40:25,440
the read means a long description but

00:40:22,960 --> 00:40:29,200
this is the short description

00:40:25,440 --> 00:40:29,839
okay so i have this um then the version

00:40:29,200 --> 00:40:32,480
okay

00:40:29,839 --> 00:40:33,760
so the version number is uh we use

00:40:32,480 --> 00:40:36,880
something called the schematic

00:40:33,760 --> 00:40:39,839
version okay thereby the first number

00:40:36,880 --> 00:40:41,359
for a major release the second number is

00:40:39,839 --> 00:40:44,319
for a minor release

00:40:41,359 --> 00:40:46,000
and the third number is for fast so for

00:40:44,319 --> 00:40:48,160
example our package is

00:40:46,000 --> 00:40:50,160
just starting that is our first push and

00:40:48,160 --> 00:40:52,079
maybe it is not well tested yet we want

00:40:50,160 --> 00:40:54,240
to get feedback from people

00:40:52,079 --> 00:40:55,680
we can release it as a better version so

00:40:54,240 --> 00:40:58,800
you can see better

00:40:55,680 --> 00:41:02,480
so we can put it as a one

00:40:58,800 --> 00:41:06,160
okay so something like this

00:41:02,480 --> 00:41:07,760
0.1 so if um over time we have not

00:41:06,160 --> 00:41:09,680
improved our library

00:41:07,760 --> 00:41:12,880
added new functions things like that we

00:41:09,680 --> 00:41:17,040
cannot just change it to version one

00:41:12,880 --> 00:41:19,920
and call this question 1.1.0

00:41:17,040 --> 00:41:21,440
i'm changing to alpha so it is not in a

00:41:19,920 --> 00:41:23,599
stable

00:41:21,440 --> 00:41:25,040
condition okay but for now we are just

00:41:23,599 --> 00:41:28,240
starting out so we just

00:41:25,040 --> 00:41:29,520
leave it at 0.1 okay

00:41:28,240 --> 00:41:30,960
so the reading you can see long

00:41:29,520 --> 00:41:31,520
description is going to be the reasoning

00:41:30,960 --> 00:41:35,599
which is

00:41:31,520 --> 00:41:35,920
right here the url can be a url to your

00:41:35,599 --> 00:41:39,200
uh

00:41:35,920 --> 00:41:40,079
maybe to your uh package page web page

00:41:39,200 --> 00:41:41,760
or website

00:41:40,079 --> 00:41:43,760
but if you don't have that you can put

00:41:41,760 --> 00:41:44,560
your github vehicle so i'm just going to

00:41:43,760 --> 00:41:49,760
copy this

00:41:44,560 --> 00:41:52,480
format i'll put it here

00:41:49,760 --> 00:41:54,319
okay so for these packages this is going

00:41:52,480 --> 00:41:56,240
to find all the packages

00:41:54,319 --> 00:41:57,520
that are in your module in that

00:41:56,240 --> 00:41:58,800
particular so you need to do that

00:41:57,520 --> 00:42:00,960
automatically for you

00:41:58,800 --> 00:42:02,160
so set up to just find all this package

00:42:00,960 --> 00:42:03,200
for you so you kind of like views

00:42:02,160 --> 00:42:05,440
independence

00:42:03,200 --> 00:42:07,200
of all the packages all the files that

00:42:05,440 --> 00:42:09,839
you have in your folder

00:42:07,200 --> 00:42:11,680
so it does that so um python requires

00:42:09,839 --> 00:42:13,040
maybe 3.5 and approved and quantity

00:42:11,680 --> 00:42:15,359
isn't 3.8

00:42:13,040 --> 00:42:18,000
so it should work that is 2x5 and above

00:42:15,359 --> 00:42:20,240
which you are going to test

00:42:18,000 --> 00:42:22,079
then for classifiers are just like a

00:42:20,240 --> 00:42:23,119
bunch of tabs that helps people find

00:42:22,079 --> 00:42:26,319
your library

00:42:23,119 --> 00:42:28,079
so you can see that license programming

00:42:26,319 --> 00:42:30,079
language python

00:42:28,079 --> 00:42:31,280
what are the version of python support

00:42:30,079 --> 00:42:34,000
so group and

00:42:31,280 --> 00:42:35,119
we can add other ones like who are the

00:42:34,000 --> 00:42:38,079
internet audience

00:42:35,119 --> 00:42:38,560
developers okay all right so we have

00:42:38,079 --> 00:42:41,119
that so

00:42:38,560 --> 00:42:41,680
our top is okay so we can do that is to

00:42:41,119 --> 00:42:46,000
install

00:42:41,680 --> 00:42:49,760
setup of libraries install

00:42:46,000 --> 00:42:51,920
uh something called wheel then we can

00:42:49,760 --> 00:42:53,280
easily build and bundle this package

00:42:51,920 --> 00:42:56,880
together okay

00:42:53,280 --> 00:42:59,839
so let's install it uh let's see

00:42:56,880 --> 00:42:59,839
install

00:43:01,119 --> 00:43:05,359
so we can install

00:43:08,160 --> 00:43:13,839
setup tools and also we okay so we're

00:43:12,480 --> 00:43:15,599
going to install those

00:43:13,839 --> 00:43:17,760
okay so i already have them installed so

00:43:15,599 --> 00:43:18,319
that's very satisfied so you can easily

00:43:17,760 --> 00:43:20,240
use this to

00:43:18,319 --> 00:43:21,599
use that package now how do you do this

00:43:20,240 --> 00:43:23,920
let me close this

00:43:21,599 --> 00:43:25,440
so you just call python and sure you are

00:43:23,920 --> 00:43:27,839
in the folder here you have

00:43:25,440 --> 00:43:29,839
set up the keyword so you have to ensure

00:43:27,839 --> 00:43:32,240
you end up with that so let me do

00:43:29,839 --> 00:43:33,280
lx so you can see we are not going in

00:43:32,240 --> 00:43:36,720
that folder

00:43:33,280 --> 00:43:38,720
so i'm going to see the back okay

00:43:36,720 --> 00:43:40,319
like i said we have to set up the ui for

00:43:38,720 --> 00:43:45,119
here all right

00:43:40,319 --> 00:43:45,119
so i cannot do python

00:43:45,839 --> 00:43:53,520
set up dot py file s x dist

00:43:50,240 --> 00:43:55,359
then the distribution underscore

00:43:53,520 --> 00:43:56,880
weight so you have to memorize this

00:43:55,359 --> 00:43:58,319
anything just copy and paste this but

00:43:56,880 --> 00:44:00,000
basically what's happening here is that

00:43:58,319 --> 00:44:01,920
we're attaining python to build

00:44:00,000 --> 00:44:04,000
a source distribution and you will

00:44:01,920 --> 00:44:06,160
distribution file

00:44:04,000 --> 00:44:08,160
or binary files these are what is going

00:44:06,160 --> 00:44:09,040
to get what we are going to upload to

00:44:08,160 --> 00:44:11,760
firefighter

00:44:09,040 --> 00:44:13,119
okay so somebody wants to package it

00:44:11,760 --> 00:44:14,400
they are going to just be pointed to the

00:44:13,119 --> 00:44:16,960
distribution source

00:44:14,400 --> 00:44:18,400
okay so i can easily install it so if

00:44:16,960 --> 00:44:20,960
you run this

00:44:18,400 --> 00:44:22,800
you can see it's building and it's done

00:44:20,960 --> 00:44:24,079
now if you look at your folder look at

00:44:22,800 --> 00:44:28,240
smartphones folder

00:44:24,079 --> 00:44:31,680
we have viewed we have this

00:44:28,240 --> 00:44:33,680
and we have matte dot egg dash info

00:44:31,680 --> 00:44:35,680
okay so these are a bunch of files that

00:44:33,680 --> 00:44:36,160
we set up as you go to package for you

00:44:35,680 --> 00:44:38,240
together

00:44:36,160 --> 00:44:40,000
but the most important files to us are

00:44:38,240 --> 00:44:41,280
located in the list so you can this is

00:44:40,000 --> 00:44:42,800
the source code

00:44:41,280 --> 00:44:44,319
okay so you guys will burn those

00:44:42,800 --> 00:44:45,839
together in your file

00:44:44,319 --> 00:44:47,520
so if somebody wants to install your

00:44:45,839 --> 00:44:49,440
package this is what they need

00:44:47,520 --> 00:44:50,560
to actually install your package and

00:44:49,440 --> 00:44:52,319
this is what you are going to be

00:44:50,560 --> 00:44:53,680
uploading these two files and what you

00:44:52,319 --> 00:44:56,480
are going to be uploading

00:44:53,680 --> 00:44:58,000
to file okay so now we've reached the

00:44:56,480 --> 00:44:59,599
file so let's kind of like test it

00:44:58,000 --> 00:45:01,920
locally to see if

00:44:59,599 --> 00:45:02,880
we can really install this package and

00:45:01,920 --> 00:45:04,720
use

00:45:02,880 --> 00:45:06,000
the functions that we had that we have

00:45:04,720 --> 00:45:08,000
in this place okay

00:45:06,000 --> 00:45:09,440
so how can we do that so what we just

00:45:08,000 --> 00:45:12,480
need to do is to

00:45:09,440 --> 00:45:15,200
come here copy this part so i'm going to

00:45:12,480 --> 00:45:16,960
copy the part copy the full path

00:45:15,200 --> 00:45:18,800
after copying the food part i'm going to

00:45:16,960 --> 00:45:23,119
create a new

00:45:18,800 --> 00:45:26,160
uh let's say okay let me just repeat it

00:45:23,119 --> 00:45:27,680
in my desktop i'm going to create a new

00:45:26,160 --> 00:45:32,400
folder i'll just call this

00:45:27,680 --> 00:45:34,160
test map okay

00:45:32,400 --> 00:45:36,960
and on here it's good i'm going to open

00:45:34,160 --> 00:45:36,960
that folder

00:45:38,240 --> 00:45:42,880
expert test match okay

00:45:45,200 --> 00:45:48,960
okay so after opening the folder i just

00:45:47,200 --> 00:45:53,359
want to create a simple file

00:45:48,960 --> 00:45:56,560
let me just call this app.viewer

00:45:53,359 --> 00:45:59,440
okay so now uh vs

00:45:56,560 --> 00:46:01,200
a smartphone this is a python script

00:45:59,440 --> 00:46:03,119
okay so you can see it as

00:46:01,200 --> 00:46:04,319
choosing an environment automatically

00:46:03,119 --> 00:46:07,520
for us

00:46:04,319 --> 00:46:09,760
now in this environment we don't have um

00:46:07,520 --> 00:46:11,359
mathis installed we have mapped

00:46:09,760 --> 00:46:13,920
installed in our

00:46:11,359 --> 00:46:14,400
what's called now which are in the other

00:46:13,920 --> 00:46:16,640
matrix

00:46:14,400 --> 00:46:17,680
environment so if we try to import

00:46:16,640 --> 00:46:19,680
markets here

00:46:17,680 --> 00:46:21,200
they're going to be having an error so

00:46:19,680 --> 00:46:21,520
what we need to do first to first of all

00:46:21,200 --> 00:46:23,760
pick

00:46:21,520 --> 00:46:25,680
install market in this particular place

00:46:23,760 --> 00:46:30,160
okay i'm going to change this to

00:46:25,680 --> 00:46:33,839
this 2.7 default let me change it to it

00:46:30,160 --> 00:46:33,839
so i'll just quickly open it seminar

00:46:35,280 --> 00:46:41,760
okay and repeat install

00:46:39,440 --> 00:46:42,480
the part will copy so you can see it

00:46:41,760 --> 00:46:45,839
goes to

00:46:42,480 --> 00:46:48,400
desktop math is the distribution and the

00:46:45,839 --> 00:46:49,359
zip folder so if i run this it's going

00:46:48,400 --> 00:46:50,960
to see

00:46:49,359 --> 00:46:52,560
this is what you normally do when you're

00:46:50,960 --> 00:46:53,440
installing a new package over the

00:46:52,560 --> 00:46:56,400
internet

00:46:53,440 --> 00:46:58,319
so normally if you do install mathis is

00:46:56,400 --> 00:47:00,319
supposed to go to a pipeline

00:46:58,319 --> 00:47:01,359
and check and search for that particular

00:47:00,319 --> 00:47:03,119
source code

00:47:01,359 --> 00:47:04,400
for this we are doing it locally because

00:47:03,119 --> 00:47:06,800
we've not uploaded it

00:47:04,400 --> 00:47:08,720
towards to pipeline okay so now we'll

00:47:06,800 --> 00:47:11,839
firstly install it in this

00:47:08,720 --> 00:47:13,520
environment python 3.8.2 so let's see if

00:47:11,839 --> 00:47:16,079
we can import it and

00:47:13,520 --> 00:47:18,880
use it so how do we import is you can

00:47:16,079 --> 00:47:18,880
say import

00:47:19,119 --> 00:47:22,640
let's say maxi

00:47:23,280 --> 00:47:31,680
all right oh sorry

00:47:27,920 --> 00:47:34,000
i'm going to do something like this um

00:47:31,680 --> 00:47:34,000
right

00:47:34,720 --> 00:47:39,839
and imports my this should work outside

00:47:42,319 --> 00:47:49,440
okay wait

00:47:46,000 --> 00:47:49,440
oh no it was fun

00:47:50,079 --> 00:47:54,640
okay what's more all right so let's see

00:47:52,640 --> 00:48:00,079
uh what functions we have we have

00:47:54,640 --> 00:48:07,839
matt dot oh so sorry this is python

00:48:00,079 --> 00:48:07,839
this is python smart library

00:48:13,119 --> 00:48:18,800
okay so max dot uh

00:48:16,319 --> 00:48:18,800
let's see

00:48:19,520 --> 00:48:21,920
all right

00:48:23,040 --> 00:48:30,240
i'm gonna show i'll be called

00:48:26,640 --> 00:48:30,240
and let's see wait a minute

00:48:31,040 --> 00:48:37,520
okay let me try and end this

00:48:35,040 --> 00:48:37,520
and see

00:48:41,839 --> 00:48:48,000
fight time i've got okay

00:48:44,880 --> 00:48:54,000
okay so much dot

00:48:48,000 --> 00:48:57,040
add let's say 20 and 20 for example

00:48:54,000 --> 00:48:57,040
let's print this

00:48:59,359 --> 00:49:03,119
so i will run this okay so i fought

00:49:01,280 --> 00:49:05,760
because it's working fine

00:49:03,119 --> 00:49:06,640
uh don't worry about that i'll just

00:49:05,760 --> 00:49:08,319
filing

00:49:06,640 --> 00:49:10,720
that but you can see that we're working

00:49:08,319 --> 00:49:14,000
in port format and we're able to use the

00:49:10,720 --> 00:49:19,599
particular function mask. okay so

00:49:14,000 --> 00:49:19,599
for example let's try let's try solve

00:49:19,839 --> 00:49:22,640
let's try so

00:49:24,720 --> 00:49:33,839
let's do let's say 220.

00:49:30,000 --> 00:49:37,280
one is 180 so all our functions

00:49:33,839 --> 00:49:40,960
are working we are able to install

00:49:37,280 --> 00:49:42,319
this package locally in a new

00:49:40,960 --> 00:49:45,359
environment

00:49:42,319 --> 00:49:49,440
and we add access to all the functions

00:49:45,359 --> 00:49:51,520
so i'm going to test it so 20 divided by

00:49:49,440 --> 00:49:55,599
00:49:51,520 --> 00:49:56,000
add 20 sub 20 divided by 20 multiplied

00:49:55,599 --> 00:49:59,760
by

00:49:56,000 --> 00:50:02,000
let's say two if i want this

00:49:59,760 --> 00:50:03,200
i got all the correct answer so it is

00:50:02,000 --> 00:50:05,599
working perfectly

00:50:03,200 --> 00:50:06,400
locally so now let's take this package

00:50:05,599 --> 00:50:09,440
that is working

00:50:06,400 --> 00:50:13,280
locally and push it to

00:50:09,440 --> 00:50:16,720
ipad okay so we are currently

00:50:13,280 --> 00:50:19,280
at testing locally we've done that

00:50:16,720 --> 00:50:19,920
um now we have to build it and upload

00:50:19,280 --> 00:50:21,359
the pipeline

00:50:19,920 --> 00:50:22,960
and the building parts we've already

00:50:21,359 --> 00:50:26,160
done that so

00:50:22,960 --> 00:50:28,400
with um setup tools so now what you have

00:50:26,160 --> 00:50:29,040
to do now is to go to pipe and create an

00:50:28,400 --> 00:50:30,720
account

00:50:29,040 --> 00:50:32,240
okay so you can create an account from

00:50:30,720 --> 00:50:33,280
pipeline or you can also create an

00:50:32,240 --> 00:50:35,520
account on test

00:50:33,280 --> 00:50:36,960
icon and test piper is like the

00:50:35,520 --> 00:50:39,520
equivalent of pipeline

00:50:36,960 --> 00:50:41,359
but it's for testing your upload testing

00:50:39,520 --> 00:50:42,480
your distribution before uploading to

00:50:41,359 --> 00:50:44,559
the main pipeline

00:50:42,480 --> 00:50:46,319
so it does all the same same functions

00:50:44,559 --> 00:50:47,599
with that file but you can use it to

00:50:46,319 --> 00:50:49,359
test your cloud

00:50:47,599 --> 00:50:51,920
so because i don't want to upload this

00:50:49,359 --> 00:50:51,920
library

00:50:52,000 --> 00:50:55,920
to the main hifi i'm just going to use

00:50:54,160 --> 00:50:58,000
the test fashion

00:50:55,920 --> 00:51:00,960
but the process is the same so i'm just

00:50:58,000 --> 00:51:03,119
going to this is here

00:51:00,960 --> 00:51:05,040
open this now see you are using a test

00:51:03,119 --> 00:51:06,559
pipe it separately stands for python

00:51:05,040 --> 00:51:08,400
package that allows you to try

00:51:06,559 --> 00:51:09,359
distribution tools and processes start

00:51:08,400 --> 00:51:11,280
affecting the

00:51:09,359 --> 00:51:13,200
index okay this is very important for

00:51:11,280 --> 00:51:15,200
testing so you can log in

00:51:13,200 --> 00:51:16,640
you can already start from account get

00:51:15,200 --> 00:51:18,640
your password which you're going to be

00:51:16,640 --> 00:51:22,400
using when you're uploading

00:51:18,640 --> 00:51:25,760
login so i'm quickly going to log in

00:51:22,400 --> 00:51:25,760
okay log in here

00:51:26,000 --> 00:51:32,559
um let's i don't have any project now

00:51:29,359 --> 00:51:36,960
so what you're going to do come back to

00:51:32,559 --> 00:51:36,960
let's see there

00:51:52,000 --> 00:51:58,079
all right so i'm going to come here let

00:51:54,400 --> 00:51:58,079
me just close a disclosure that

00:51:58,160 --> 00:52:03,839
uh before we before we build

00:52:01,280 --> 00:52:05,359
and upload we're going to add some extra

00:52:03,839 --> 00:52:06,480
files to this ignore i'm going to add

00:52:05,359 --> 00:52:08,720
the build file

00:52:06,480 --> 00:52:10,079
distribution file and this particular

00:52:08,720 --> 00:52:13,040
file to get ignored

00:52:10,079 --> 00:52:15,280
so that it won't be pushed so i'm going

00:52:13,040 --> 00:52:17,680
to add build

00:52:15,280 --> 00:52:17,680
list

00:52:30,960 --> 00:52:35,599
see it's no longer being tracked then

00:52:32,400 --> 00:52:38,880
i'll just say let's call this view

00:52:35,599 --> 00:52:41,119
source something like that

00:52:38,880 --> 00:52:43,119
all right so now for you to install to

00:52:41,119 --> 00:52:43,920
push or to upload to piper you use

00:52:43,119 --> 00:52:46,400
something

00:52:43,920 --> 00:52:47,119
another package called twine okay so you

00:52:46,400 --> 00:52:49,839
can do

00:52:47,119 --> 00:52:51,760
install twine makes it very easy for you

00:52:49,839 --> 00:52:54,960
to push your packages to

00:52:51,760 --> 00:52:59,599
ipad so you can see installing

00:52:54,960 --> 00:53:01,839
twine all right

00:52:59,599 --> 00:53:04,079
so now i have twice so try and i can

00:53:01,839 --> 00:53:07,119
easily upload to edit the test

00:53:04,079 --> 00:53:09,040
pipe or the main ipad so but i'm just

00:53:07,119 --> 00:53:12,000
going to simulate

00:53:09,040 --> 00:53:13,520
to the name sorry so to do that just be

00:53:12,000 --> 00:53:14,400
very easy to do so you just get your

00:53:13,520 --> 00:53:16,319
password

00:53:14,400 --> 00:53:17,760
your test password and you can do

00:53:16,319 --> 00:53:22,480
something like uh

00:53:17,760 --> 00:53:22,480
try upload

00:53:22,720 --> 00:53:26,640
copying this option here um try and

00:53:25,680 --> 00:53:28,960
upload that

00:53:26,640 --> 00:53:28,960
hash

00:53:41,280 --> 00:53:47,200
test wi-fi disk slash

00:53:45,520 --> 00:53:48,720
start so what we are doing here is that

00:53:47,200 --> 00:53:49,680
we are uploading rather than trying to

00:53:48,720 --> 00:53:51,760
upload

00:53:49,680 --> 00:53:53,680
you know it repository to the test path

00:53:51,760 --> 00:53:55,680
in this so i'm going to be putting all

00:53:53,680 --> 00:53:57,359
the files on that distribution

00:53:55,680 --> 00:53:59,440
so you can see we have this test so

00:53:57,359 --> 00:54:03,200
meaning we are going to be running this

00:53:59,440 --> 00:54:05,040
code from the distribution folder okay

00:54:03,200 --> 00:54:07,200
so if i try running this now i think i'm

00:54:05,040 --> 00:54:10,400
going to get an error

00:54:07,200 --> 00:54:11,839
oh we are currently in the folder okay

00:54:10,400 --> 00:54:13,599
so what i will do is actually from my

00:54:11,839 --> 00:54:16,319
username and password

00:54:13,599 --> 00:54:16,720
which i have already signed up for so i

00:54:16,319 --> 00:54:20,000
have

00:54:16,720 --> 00:54:24,100
this i'm going to ask my password which

00:54:20,000 --> 00:54:27,219
i'm just going to quickly type here

00:54:24,100 --> 00:54:27,219
[Music]

00:54:36,839 --> 00:54:40,880
okay all right so if your password is

00:54:39,040 --> 00:54:42,240
correct it's going to start your clue so

00:54:40,880 --> 00:54:43,200
you can see it's uploading the wheel

00:54:42,240 --> 00:54:45,119
file

00:54:43,200 --> 00:54:47,599
yeah only distribution also going to

00:54:45,119 --> 00:54:48,880
include it include

00:54:47,599 --> 00:54:50,880
and when it's done it's going to give

00:54:48,880 --> 00:54:54,319
you a link to your

00:54:50,880 --> 00:54:55,440
um library on piper so if we dress would

00:54:54,319 --> 00:54:58,160
be the uh

00:54:55,440 --> 00:54:59,440
you want to push to the main pipeline

00:54:58,160 --> 00:55:04,559
it's very simple to do

00:54:59,440 --> 00:55:04,559
what you just do is try and upload

00:55:04,839 --> 00:55:10,240
this the same thing so you specify this

00:55:08,720 --> 00:55:12,160
animation and your password

00:55:10,240 --> 00:55:13,599
and it will close to the main pipeline

00:55:12,160 --> 00:55:15,760
but because you don't want to

00:55:13,599 --> 00:55:17,680
mess with the server and everything so

00:55:15,760 --> 00:55:21,680
just quickly do the test so if i

00:55:17,680 --> 00:55:24,079
go to this page

00:55:21,680 --> 00:55:25,920
all right so you can see mathis version

00:55:24,079 --> 00:55:27,920
0.1 has been published

00:55:25,920 --> 00:55:29,359
so you can use how to install it because

00:55:27,920 --> 00:55:30,799
we're using the test version so they

00:55:29,359 --> 00:55:33,760
give us a test link

00:55:30,799 --> 00:55:35,920
okay so but if it were to be the main

00:55:33,760 --> 00:55:38,880
fighter you are going to

00:55:35,920 --> 00:55:39,359
install just smart list so minutes you

00:55:38,880 --> 00:55:41,920
can

00:55:39,359 --> 00:55:43,839
copy this link and use it to install

00:55:41,920 --> 00:55:47,440
this your package and test it

00:55:43,839 --> 00:55:50,640
so i'm just going to do this on

00:55:47,440 --> 00:55:52,240
collab instead of collab collaboration

00:55:50,640 --> 00:55:53,680
online environments we're doing data

00:55:52,240 --> 00:55:55,520
science and

00:55:53,680 --> 00:55:58,640
machine learning so i'm just going to i

00:55:55,520 --> 00:56:01,839
want to see if we can be able to install

00:55:58,640 --> 00:56:04,240
maxis from this ipad channel

00:56:01,839 --> 00:56:07,760
click on the functions accurately okay

00:56:04,240 --> 00:56:07,760
so let's look at a quick notebook

00:56:08,319 --> 00:56:13,260
um i think fine almost just

00:56:12,240 --> 00:56:15,680
all right

00:56:13,260 --> 00:56:18,400
[Music]

00:56:15,680 --> 00:56:19,119
all right so to install the package on

00:56:18,400 --> 00:56:21,680
on

00:56:19,119 --> 00:56:23,520
collab cool up gives you access to many

00:56:21,680 --> 00:56:24,960
existing packages in python so you can

00:56:23,520 --> 00:56:28,480
easily uh

00:56:24,960 --> 00:56:28,799
uh run python codes and stuff like that

00:56:28,480 --> 00:56:30,720
what

00:56:28,799 --> 00:56:33,040
matters is not there automatically

00:56:30,720 --> 00:56:35,440
obviously because

00:56:33,040 --> 00:56:37,119
okay so but we can install it by doing

00:56:35,440 --> 00:56:38,799
something like this click install on the

00:56:37,119 --> 00:56:40,960
link

00:56:38,799 --> 00:56:45,839
so if we run this code it's going to

00:56:40,960 --> 00:56:45,839
take some time

00:56:48,880 --> 00:56:52,070
[Music]

00:56:56,839 --> 00:56:59,839
um

00:57:00,960 --> 00:57:08,880
okay okay i'm just going to do that

00:57:05,280 --> 00:57:08,880
all right successfully installed

00:57:10,079 --> 00:57:14,720
now we can access it so let's say import

00:57:15,280 --> 00:57:19,040
what is that

00:57:20,319 --> 00:57:24,480
all right so especially import so we can

00:57:22,480 --> 00:57:29,040
do add

00:57:24,480 --> 00:57:29,040
let's say 200 to 300

00:57:29,119 --> 00:57:37,359
oh as the emoji

00:57:32,640 --> 00:57:37,359
as an emoji add up let's see

00:57:38,839 --> 00:57:44,799
okay

00:57:40,559 --> 00:57:47,920
oh sorry about that from

00:57:44,799 --> 00:57:52,960
marty's imports

00:57:47,920 --> 00:57:54,720
mark so you can do math

00:57:52,960 --> 00:57:56,319
all right now you can see the

00:57:54,720 --> 00:57:58,720
documentation we will

00:57:56,319 --> 00:58:00,160
showing up here this helps people to be

00:57:58,720 --> 00:58:00,720
able to understand what your function is

00:58:00,160 --> 00:58:02,160
doing

00:58:00,720 --> 00:58:04,079
what are the arguments that's going to

00:58:02,160 --> 00:58:04,960
be passed and what is going to be

00:58:04,079 --> 00:58:10,079
returned

00:58:04,960 --> 00:58:10,079
so you can say add 200 to 300.

00:58:10,480 --> 00:58:14,079
because you can see the package is

00:58:11,599 --> 00:58:15,119
working very well so we've just been

00:58:14,079 --> 00:58:17,920
able to

00:58:15,119 --> 00:58:19,839
package our application write some

00:58:17,920 --> 00:58:22,319
simple code around it

00:58:19,839 --> 00:58:22,960
create a setup file build it and also

00:58:22,319 --> 00:58:26,000
include it

00:58:22,960 --> 00:58:28,000
to pipe for people to easily use so i'm

00:58:26,000 --> 00:58:30,720
just going to quickly push this

00:58:28,000 --> 00:58:33,760
and i'm going to go to the last step so

00:58:30,720 --> 00:58:37,599
everything's working perfectly now

00:58:33,760 --> 00:58:38,640
okay so great so professionally push to

00:58:37,599 --> 00:58:41,040
github

00:58:38,640 --> 00:58:42,720
so i'm going to close this this is the

00:58:41,040 --> 00:58:45,280
page

00:58:42,720 --> 00:58:46,720
uh maybe i should just share this in the

00:58:45,280 --> 00:58:51,359
shop section so that

00:58:46,720 --> 00:58:54,400
people can let me check it out

00:58:51,359 --> 00:58:57,599
all right so on github

00:58:54,400 --> 00:58:58,880
i refresh this alright so you can see

00:58:57,599 --> 00:59:02,160
our source code

00:58:58,880 --> 00:59:03,359
and things like that all right so i

00:59:02,160 --> 00:59:05,440
think one of the last

00:59:03,359 --> 00:59:06,880
part of it yeah so the last part of it

00:59:05,440 --> 00:59:08,480
is some extra sessions

00:59:06,880 --> 00:59:10,799
i'm just going to show you how to set up

00:59:08,480 --> 00:59:13,920
some few actions on github to also make

00:59:10,799 --> 00:59:14,559
testing so that anytime you make a push

00:59:13,920 --> 00:59:17,040
to your

00:59:14,559 --> 00:59:18,240
repository it automatically runs some

00:59:17,040 --> 00:59:21,359
tests for you

00:59:18,240 --> 00:59:23,200
okay so on github you can come to

00:59:21,359 --> 00:59:26,000
in your apple page you can come to the

00:59:23,200 --> 00:59:26,000
actions tab

00:59:26,319 --> 00:59:30,799
in the actions that you can see

00:59:28,440 --> 00:59:32,960
customization python repository so it

00:59:30,799 --> 00:59:34,799
suggests to you some workflows or some

00:59:32,960 --> 00:59:36,720
actions that you can set up

00:59:34,799 --> 00:59:38,799
so you can this particular action helps

00:59:36,720 --> 00:59:41,359
you publish a python package

00:59:38,799 --> 00:59:42,160
so anytime you create a new release on

00:59:41,359 --> 00:59:46,400
github

00:59:42,160 --> 00:59:50,160
it's automatically test view it facility

00:59:46,400 --> 00:59:53,599
use it and push the package to um

00:59:50,160 --> 00:59:55,520
wi-fi for you okay then here you can

00:59:53,599 --> 00:59:59,119
also set up an action to

00:59:55,520 --> 01:00:01,200
test your of your package on python

00:59:59,119 --> 01:00:04,400
so you can test on python 3.5 the

01:00:01,200 --> 01:00:06,319
responsive 2.0.8 automatically so it's

01:00:04,400 --> 01:00:07,119
going to provision new instances of

01:00:06,319 --> 01:00:09,520
python

01:00:07,119 --> 01:00:10,160
and test your package it gives updates

01:00:09,520 --> 01:00:12,240
for you

01:00:10,160 --> 01:00:13,200
so you can set up this workflow it's and

01:00:12,240 --> 01:00:15,119
it's free to use

01:00:13,200 --> 01:00:16,640
so let's just add this particular

01:00:15,119 --> 01:00:18,720
workflow

01:00:16,640 --> 01:00:20,319
so you can say this workflow will

01:00:18,720 --> 01:00:23,760
install python dependency

01:00:20,319 --> 01:00:25,599
go and test run tests and links the

01:00:23,760 --> 01:00:27,599
variety of python functions so you can

01:00:25,599 --> 01:00:30,480
see everything the code is there

01:00:27,599 --> 01:00:31,040
it's going to run the test with i test

01:00:30,480 --> 01:00:34,319
okay

01:00:31,040 --> 01:00:34,319
so we can do is to

01:00:35,040 --> 01:00:40,240
click commit so create icon with

01:00:37,760 --> 01:00:42,720
clicking comments

01:00:40,240 --> 01:00:43,280
so this automatically adds this action

01:00:42,720 --> 01:00:46,319
to your

01:00:43,280 --> 01:00:46,960
repo so you can see now how the github

01:00:46,319 --> 01:00:49,440
workflow

01:00:46,960 --> 01:00:50,480
in your repo so anytime you make a push

01:00:49,440 --> 01:00:53,680
to this repo

01:00:50,480 --> 01:00:55,280
it's going to run your package against

01:00:53,680 --> 01:00:57,520
all the specified tests

01:00:55,280 --> 01:00:59,839
so let's just quickly show this so i'm

01:00:57,520 --> 01:01:03,359
just going to come to readme

01:00:59,839 --> 01:01:06,400
and i'll change operations

01:01:03,359 --> 01:01:10,720
let me just add some um perform yes

01:01:06,400 --> 01:01:14,960
something random okay so if i

01:01:10,720 --> 01:01:14,960
add this and let's just say update

01:01:15,200 --> 01:01:17,599
video

01:01:19,599 --> 01:01:25,680
if i push this if i push this

01:01:22,839 --> 01:01:28,079
now

01:01:25,680 --> 01:01:30,000
oh say i have some sorry i have to pull

01:01:28,079 --> 01:01:32,000
first

01:01:30,000 --> 01:01:34,079
i made some changes online so i have to

01:01:32,000 --> 01:01:40,640
put before i can

01:01:34,079 --> 01:01:40,640
push a little bit of mesh complete

01:01:42,400 --> 01:01:47,920
so that's okay i'm going to mesh this

01:01:45,520 --> 01:01:47,920
all right

01:01:48,960 --> 01:01:53,839
it's like

01:01:57,839 --> 01:02:02,160
okay yeah so so if you come here if i

01:02:00,319 --> 01:02:03,119
refresh the page this automatically

01:02:02,160 --> 01:02:06,160
starts

01:02:03,119 --> 01:02:09,280
so you can see so automatically start

01:02:06,160 --> 01:02:09,839
running all the tests for you so it's on

01:02:09,280 --> 01:02:12,400
cue

01:02:09,839 --> 01:02:13,359
you can go to the details and you can

01:02:12,400 --> 01:02:15,200
see

01:02:13,359 --> 01:02:17,039
all the things that's going to run for

01:02:15,200 --> 01:02:20,079
you you can start seeing them

01:02:17,039 --> 01:02:23,200
so it's going to test against python 3.5

01:02:20,079 --> 01:02:25,760
pattern 2.0.0.8

01:02:23,200 --> 01:02:28,720
if your package runs successfully on

01:02:25,760 --> 01:02:30,720
each of these platforms so you can see

01:02:28,720 --> 01:02:31,760
you're good to go everything runs

01:02:30,720 --> 01:02:33,359
successfully so

01:02:31,760 --> 01:02:35,920
if there were errors it's going to show

01:02:33,359 --> 01:02:39,440
you here and on your code page

01:02:35,920 --> 01:02:42,640
so let's see on the page

01:02:39,440 --> 01:02:45,440
you're going to see it's a a it's a

01:02:42,640 --> 01:02:46,000
like a cross here that says there was an

01:02:45,440 --> 01:02:48,240
error

01:02:46,000 --> 01:02:50,000
so you can easily notice that somebody

01:02:48,240 --> 01:02:51,359
made a full request or somebody pushed

01:02:50,000 --> 01:02:52,400
because there was an error in the

01:02:51,359 --> 01:02:55,599
testing

01:02:52,400 --> 01:02:58,400
so from here you can also add the patch

01:02:55,599 --> 01:03:00,839
so you can come to this place and you

01:02:58,400 --> 01:03:03,839
can add like a badge

01:03:00,839 --> 01:03:03,839
and

01:03:20,160 --> 01:03:26,160
and people can be encouraged to use it

01:03:23,520 --> 01:03:26,799
so i'm going to commit this so you can

01:03:26,160 --> 01:03:29,920
see

01:03:26,799 --> 01:03:30,480
how it's now front page so that's that's

01:03:29,920 --> 01:03:33,839
everything you

01:03:30,480 --> 01:03:36,720
need so you can easily um um

01:03:33,839 --> 01:03:36,720
view the packet

01:03:36,880 --> 01:03:44,000
test it locally um

01:03:40,000 --> 01:03:47,760
push it online set up ci cd on github

01:03:44,000 --> 01:03:50,400
actions and easily test your activities

01:03:47,760 --> 01:03:51,760
so if there are any questions or

01:03:50,400 --> 01:03:54,640
different questions at this time

01:03:51,760 --> 01:03:57,039
with any questions just use the short

01:03:54,640 --> 01:04:00,799
section

01:03:57,039 --> 01:04:02,960
below so i'm going to stop sharing

01:04:00,799 --> 01:04:02,960
it

01:04:09,200 --> 01:04:14,079
so questions a few questions at this

01:04:11,760 --> 01:04:14,079
time

01:04:17,039 --> 01:04:21,039
okay someone said the fonts are really

01:04:18,640 --> 01:04:25,039
tiny overlapping because of this

01:04:21,039 --> 01:04:25,039
um screen space here

01:04:25,359 --> 01:04:30,319
oh okay

01:04:31,760 --> 01:04:35,359
i don't think there are any questions

01:04:34,240 --> 01:04:41,839
for now

01:04:35,359 --> 01:04:41,839
so many tools play

01:04:52,960 --> 01:04:59,490
okay all right thanks

01:04:56,480 --> 01:05:02,079
everyone for coming

01:04:59,490 --> 01:05:04,799
[Music]

01:05:02,079 --> 01:05:06,000
i enjoyed my time here and i and i hope

01:05:04,799 --> 01:05:08,799
you are deep

01:05:06,000 --> 01:05:10,400
thank you vince and uh is there any

01:05:08,799 --> 01:05:13,839
question you also should be

01:05:10,400 --> 01:05:14,640
an email or you can message me on

01:05:13,839 --> 01:05:17,680
twitter

01:05:14,640 --> 01:05:21,839
i think i'm just going to click with my

01:05:17,680 --> 01:05:23,200
yeah so i have my twitter handle yeah i

01:05:21,839 --> 01:05:26,400
also have my

01:05:23,200 --> 01:05:26,400
email so you can

01:05:27,039 --> 01:05:32,799
easily wish me there so thank you

01:05:30,400 --> 01:05:34,839
um okay i do have a question somebody

01:05:32,799 --> 01:05:37,839
has a question

01:05:34,839 --> 01:05:39,119
okay

01:05:37,839 --> 01:05:42,000
yeah we are looking forward to the

01:05:39,119 --> 01:05:51,520
youtube session as well

01:05:42,000 --> 01:05:53,920
okay okay i'm waiting for the questions

01:05:51,520 --> 01:05:57,119
okay so let's let's wait for this is

01:05:53,920 --> 01:05:57,119
typing out this question

01:06:01,520 --> 01:06:06,960
thank you everyone for listening i

01:06:04,079 --> 01:06:06,960
really appreciate

01:06:15,200 --> 01:06:20,480
okay so what specific type of error

01:06:18,160 --> 01:06:22,240
would you expect test firefighter cache

01:06:20,480 --> 01:06:24,799
i've not heard of it before

01:06:22,240 --> 01:06:25,520
okay so probably what you want to do is

01:06:24,799 --> 01:06:27,359
like

01:06:25,520 --> 01:06:28,799
test pipeline just like giving you and

01:06:27,359 --> 01:06:30,640
clearly access to

01:06:28,799 --> 01:06:32,000
the same version of wi-fi but on a

01:06:30,640 --> 01:06:33,760
different setup so

01:06:32,000 --> 01:06:36,079
you can like it to test if your

01:06:33,760 --> 01:06:38,480
distribution was built properly

01:06:36,079 --> 01:06:39,440
so so so maybe if i wanted to beat your

01:06:38,480 --> 01:06:42,160
source code

01:06:39,440 --> 01:06:43,760
you bundle it together you push it out

01:06:42,160 --> 01:06:45,280
and somebody installs it you could not

01:06:43,760 --> 01:06:47,760
find a particular package

01:06:45,280 --> 01:06:48,799
or a particular module in it so you can

01:06:47,760 --> 01:06:50,640
like test like

01:06:48,799 --> 01:06:51,920
okay what is it going to be like from

01:06:50,640 --> 01:06:53,839
the side of the user

01:06:51,920 --> 01:06:55,599
before before i start applying to

01:06:53,839 --> 01:06:58,240
pipeline deleting

01:06:55,599 --> 01:06:59,920
uploading again i just want to like test

01:06:58,240 --> 01:07:01,280
the overall effectiveness of your

01:06:59,920 --> 01:07:04,720
package as a whole

01:07:01,280 --> 01:07:05,760
before you push to the main uh high five

01:07:04,720 --> 01:07:07,839
repository

01:07:05,760 --> 01:07:08,960
so it's just like a way of like giving

01:07:07,839 --> 01:07:10,880
you an efficient

01:07:08,960 --> 01:07:13,359
experience or your first hand overview

01:07:10,880 --> 01:07:16,960
of how your path is going to perform

01:07:13,359 --> 01:07:17,839
life after building it so that's for

01:07:16,960 --> 01:07:22,000
testimony

01:07:17,839 --> 01:07:24,000
okay so i think i'm out of time

01:07:22,000 --> 01:07:25,760
okay so we're good to go so thank you

01:07:24,000 --> 01:07:29,839
very much and uh

01:07:25,760 --> 01:07:29,839
stay safe

01:07:30,000 --> 01:07:43,839
i stay i keep learning so bye everyone

01:07:33,599 --> 01:07:43,839
see you in the next section

01:07:50,000 --> 01:07:52,079

YouTube URL: https://www.youtube.com/watch?v=mmx3JIAtUKA


