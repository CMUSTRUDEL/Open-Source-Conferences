Title: Seth Baah Kusi -  Blockchain development with Python on the Tezos.... || PyCon Africa 2020
Publication date: 2020-08-26
Playlist: PyCon Africa 2020
Description: 
	In this workshop, I step through blockchain development on the Tezos blockchain platform using a python library SmartPy.

We will start from the beginning, a quick intro to blockchain talking about Bitcoin, Etherium, and then finally Tezos.

We will then explore writing smart contracts on the Tezos Platform using the SmartPy python Library.
Captions: 
	00:00:14,719 --> 00:00:18,240
um

00:00:15,200 --> 00:00:18,240
so hello everyone

00:00:18,880 --> 00:00:23,199
um my name is seth baucusi and today i'm

00:00:21,680 --> 00:00:26,560
going to present to you

00:00:23,199 --> 00:00:28,400
um blockchain development with

00:00:26,560 --> 00:00:32,559
python on the t-source blockchain

00:00:28,400 --> 00:00:35,040
platform using smartphone library

00:00:32,559 --> 00:00:35,840
so uh first of all let me start with

00:00:35,040 --> 00:00:38,239
introduction

00:00:35,840 --> 00:00:39,600
introducing myself to you on my social

00:00:38,239 --> 00:00:43,360
media

00:00:39,600 --> 00:00:47,120
so uh this is me on twitter if you just

00:00:43,360 --> 00:00:47,120
said what's up my find me there

00:00:47,520 --> 00:00:52,239
also this is me on facebook

00:00:50,559 --> 00:00:55,039
you have to set for just biography and

00:00:52,239 --> 00:00:58,320
you find me on facebook

00:00:55,039 --> 00:01:03,359
and this is me on linkedin

00:00:58,320 --> 00:01:06,799
all right oh no all right so that that

00:01:03,359 --> 00:01:09,119
um yeah so you get to know everything

00:01:06,799 --> 00:01:12,560
you want to know about me

00:01:09,119 --> 00:01:14,720
from there all right so thank you for

00:01:12,560 --> 00:01:18,320
your

00:01:14,720 --> 00:01:22,000
patience and letting me present

00:01:18,320 --> 00:01:24,320
my social media to you so um

00:01:22,000 --> 00:01:25,119
before i even go deep into what we have

00:01:24,320 --> 00:01:29,280
about

00:01:25,119 --> 00:01:33,840
the main talk for and the main topic for

00:01:29,280 --> 00:01:33,840
this talk um

00:01:34,479 --> 00:01:38,640
i'd like to i mean take you through

00:01:38,840 --> 00:01:44,640
uh table of content

00:01:42,399 --> 00:01:44,640
so

00:01:47,840 --> 00:01:51,040
so um

00:01:51,439 --> 00:01:55,040
this is what we're going to do before we

00:01:53,759 --> 00:01:57,200
even start talking about these

00:01:55,040 --> 00:01:58,399
we're going to talk about the history of

00:01:57,200 --> 00:01:59,840
blockchain

00:01:58,399 --> 00:02:01,520
we're going to talk about bitcoin and

00:01:59,840 --> 00:02:02,560
ethereum and then we finally go to

00:02:01,520 --> 00:02:04,479
theseos

00:02:02,560 --> 00:02:06,479
and then we talk about smart contracts

00:02:04,479 --> 00:02:09,440
we talk about smart pi

00:02:06,479 --> 00:02:10,800
and then we have a coding example and

00:02:09,440 --> 00:02:12,160
according to example is an interesting

00:02:10,800 --> 00:02:13,920
one we're going to consider

00:02:12,160 --> 00:02:15,280
is a land registry i mean if you've

00:02:13,920 --> 00:02:17,200
heard of blockchain and

00:02:15,280 --> 00:02:19,040
all the bars around it you will know

00:02:17,200 --> 00:02:20,640
that land reduction is one of the

00:02:19,040 --> 00:02:22,080
applications big applications for

00:02:20,640 --> 00:02:25,280
blockchain right

00:02:22,080 --> 00:02:28,080
so why is it so because blockchain

00:02:25,280 --> 00:02:28,480
is basically like public record right

00:02:28,080 --> 00:02:31,840
it's

00:02:28,480 --> 00:02:34,480
a kind of record or it's a kind of uh

00:02:31,840 --> 00:02:35,680
let me see database where everyone any

00:02:34,480 --> 00:02:39,360
party can at all

00:02:35,680 --> 00:02:43,040
can observe this database right so

00:02:39,360 --> 00:02:47,280
unlike maybe uh traditionally

00:02:43,040 --> 00:02:50,640
traditional applications um

00:02:47,280 --> 00:02:52,560
you can't go and um as an organization

00:02:50,640 --> 00:02:55,120
to give you the database for you to

00:02:52,560 --> 00:02:56,319
look through it all you can see from

00:02:55,120 --> 00:02:58,800
there

00:02:56,319 --> 00:02:59,920
what you know about that organization's

00:02:58,800 --> 00:03:04,239
application

00:02:59,920 --> 00:03:05,760
is is um

00:03:04,239 --> 00:03:07,440
the the data they are showing you

00:03:05,760 --> 00:03:09,040
through the interface right now with

00:03:07,440 --> 00:03:10,400
blockchain that you can actually

00:03:09,040 --> 00:03:12,560
query the blockchain itself the

00:03:10,400 --> 00:03:14,800
databases of

00:03:12,560 --> 00:03:16,159
with no restrictions right and then you

00:03:14,800 --> 00:03:18,319
can get the data

00:03:16,159 --> 00:03:19,840
so land registry is like okay fine we

00:03:18,319 --> 00:03:22,159
want to say

00:03:19,840 --> 00:03:23,760
who owns which part of the world you

00:03:22,159 --> 00:03:24,879
know let me just say that

00:03:23,760 --> 00:03:26,720
instead of saying which part of the

00:03:24,879 --> 00:03:27,920
country but i mean if i say what part of

00:03:26,720 --> 00:03:30,560
the world is so the same thing

00:03:27,920 --> 00:03:32,319
right and we are going to take a very

00:03:30,560 --> 00:03:33,599
interesting approach here

00:03:32,319 --> 00:03:36,239
so who owns which part of the world

00:03:33,599 --> 00:03:38,319
that's the question and

00:03:36,239 --> 00:03:39,680
if we had to say okay fine let's record

00:03:38,319 --> 00:03:42,480
this in a database

00:03:39,680 --> 00:03:44,159
in a hidden database where that parties

00:03:42,480 --> 00:03:45,680
cannot really see into this database

00:03:44,159 --> 00:03:47,120
only part the only way they can see this

00:03:45,680 --> 00:03:50,400
database is true some

00:03:47,120 --> 00:03:51,920
um ui that some company has built

00:03:50,400 --> 00:03:54,319
then that doesn't make a lot of sense

00:03:51,920 --> 00:03:55,840
right you want a database where

00:03:54,319 --> 00:03:58,319
everyone can see what is going on in the

00:03:55,840 --> 00:04:00,319
database and a good

00:03:58,319 --> 00:04:02,480
a good example of such a database is

00:04:00,319 --> 00:04:06,239
what the blockchain

00:04:02,480 --> 00:04:08,080
and yeah so

00:04:06,239 --> 00:04:09,200
you also learned that blockchain is not

00:04:08,080 --> 00:04:10,720
even though i'm referring to blockchain

00:04:09,200 --> 00:04:12,959
as a database it's not

00:04:10,720 --> 00:04:14,000
mainly a database right it's not just a

00:04:12,959 --> 00:04:15,760
database right

00:04:14,000 --> 00:04:17,680
and we will understand why i'm saying

00:04:15,760 --> 00:04:19,680
that so uh

00:04:17,680 --> 00:04:21,600
what's the history of blockchain i mean

00:04:19,680 --> 00:04:22,479
blockchain started with academic papers

00:04:21,600 --> 00:04:24,880
right

00:04:22,479 --> 00:04:27,360
and you can see here i have say bitcode

00:04:24,880 --> 00:04:29,120
so bitcode

00:04:27,360 --> 00:04:32,800
actually came up in a paper someone

00:04:29,120 --> 00:04:35,280
wrote in the 1980s and 1990s right

00:04:32,800 --> 00:04:37,040
and this researcher was talking about

00:04:35,280 --> 00:04:40,000
something called bitcode which is an

00:04:37,040 --> 00:04:44,160
electronic a means of transparent

00:04:40,000 --> 00:04:47,120
which doesn't involve any middle party

00:04:44,160 --> 00:04:49,280
so first of all let me just say let me

00:04:47,120 --> 00:04:54,840
say this let me just put this

00:04:49,280 --> 00:05:00,160
into um into the into the system

00:04:54,840 --> 00:05:00,160
so say that we have

00:05:00,800 --> 00:05:07,039
right let's take an example of

00:05:04,000 --> 00:05:11,360
a very popular uh

00:05:07,039 --> 00:05:15,759
digital payment system like paypal right

00:05:11,360 --> 00:05:15,759
so yes paypal okay

00:05:20,240 --> 00:05:28,000
and yeah here and what people has

00:05:24,000 --> 00:05:30,800
is a database okay

00:05:28,000 --> 00:05:30,800
containing like

00:05:31,919 --> 00:05:40,479
so users so let's say user a

00:05:37,120 --> 00:05:45,199
maybe has a certain balance right

00:05:40,479 --> 00:05:49,120
of money of say 10 and user b

00:05:45,199 --> 00:05:52,240
has money 20

00:05:49,120 --> 00:05:54,639
and then you just see has money

00:05:52,240 --> 00:05:54,639
00:05:55,360 --> 00:06:03,360
right therefore didn't come out well but

00:05:59,600 --> 00:06:07,039
that's fine right so now that's a

00:06:03,360 --> 00:06:09,520
better for sorry but i have to get this

00:06:07,039 --> 00:06:09,520
for right

00:06:10,160 --> 00:06:14,319
good so we have a for now

00:06:14,400 --> 00:06:18,560
right and so they have like a database

00:06:16,880 --> 00:06:19,199
which holds like the balance of each

00:06:18,560 --> 00:06:22,720
user

00:06:19,199 --> 00:06:22,720
and so if say a

00:06:22,800 --> 00:06:31,440
right let me use a different color

00:06:26,720 --> 00:06:31,440
i want to send some money

00:06:31,840 --> 00:06:36,319
to say b right

00:06:37,600 --> 00:06:40,400
through paypal

00:06:41,600 --> 00:06:45,199
first of all people who get a

00:06:42,800 --> 00:06:46,479
transaction say a saying i want to send

00:06:45,199 --> 00:06:48,880
money to b

00:06:46,479 --> 00:06:50,240
so people will go and check um let's say

00:06:48,880 --> 00:06:52,880
a wants to send

00:06:50,240 --> 00:06:55,120
an amount of five to b people will go

00:06:52,880 --> 00:06:57,199
and check okay

00:06:55,120 --> 00:06:58,160
can you send that money the question is

00:06:57,199 --> 00:07:00,000
send the money

00:06:58,160 --> 00:07:02,319
and yeah that's that's true because if i

00:07:00,000 --> 00:07:05,360
check of a75

00:07:02,319 --> 00:07:08,479
and a has 10 so

00:07:05,360 --> 00:07:11,039
it's possible right so what people do is

00:07:08,479 --> 00:07:13,840
detect 5

00:07:11,039 --> 00:07:15,599
from a sorry let me use a different

00:07:13,840 --> 00:07:20,319
color for this

00:07:15,599 --> 00:07:23,120
index 5 right

00:07:20,319 --> 00:07:24,720
from a so a will now have a new balance

00:07:23,120 --> 00:07:28,160
of 5

00:07:24,720 --> 00:07:28,160
and would add a 5

00:07:29,280 --> 00:07:32,960
to be so a b will not have a new balance

00:07:32,319 --> 00:07:36,639
of

00:07:32,960 --> 00:07:37,599
25 right and this is a digital payment

00:07:36,639 --> 00:07:39,360
system

00:07:37,599 --> 00:07:41,599
but the problem is that it has to go

00:07:39,360 --> 00:07:41,599
through

00:07:42,840 --> 00:07:48,639
paper and guys

00:07:46,800 --> 00:07:50,240
this is what some people don't like oh

00:07:48,639 --> 00:07:53,440
this is what

00:07:50,240 --> 00:07:56,720
um yeah i mean

00:07:53,440 --> 00:07:58,240
there's another option where

00:07:56,720 --> 00:08:00,240
the payment doesn't have to go through a

00:07:58,240 --> 00:08:01,520
centralized body you know because people

00:08:00,240 --> 00:08:03,680
don't like the idea that

00:08:01,520 --> 00:08:05,120
their money has to be controlled by some

00:08:03,680 --> 00:08:06,639
middle person

00:08:05,120 --> 00:08:08,319
you know if someone has control of your

00:08:06,639 --> 00:08:09,120
money they kind of have control over

00:08:08,319 --> 00:08:12,639
your life and

00:08:09,120 --> 00:08:15,680
in many ways i can realize

00:08:12,639 --> 00:08:17,919
so i mean to go on with this example

00:08:15,680 --> 00:08:17,919
uh

00:08:18,960 --> 00:08:27,680
let's say that uh b

00:08:23,440 --> 00:08:32,080
now wants to send money to c right

00:08:27,680 --> 00:08:32,080
b is sending 30

00:08:33,680 --> 00:08:39,919
since b sending to paypal

00:08:37,279 --> 00:08:42,080
paypal will ask can be sent 30 and

00:08:39,919 --> 00:08:45,440
answer is no we cannot send 30

00:08:42,080 --> 00:08:48,880
because i mean b has 25

00:08:45,440 --> 00:08:51,760
right yeah right

00:08:48,880 --> 00:08:53,760
so i mean this is the kind of thing like

00:08:51,760 --> 00:08:56,080
uh

00:08:53,760 --> 00:08:57,519
that's one way to do ticket top payment

00:08:56,080 --> 00:09:00,560
right

00:08:57,519 --> 00:09:01,920
and so this is what we call like the

00:09:00,560 --> 00:09:05,519
centralized approach

00:09:01,920 --> 00:09:07,519
right so i mean this is a problem

00:09:05,519 --> 00:09:08,720
just that this one is centralized so

00:09:07,519 --> 00:09:11,839
there's a central body

00:09:08,720 --> 00:09:13,680
that is handling all the payments so not

00:09:11,839 --> 00:09:15,200
not only paypal but you also have

00:09:13,680 --> 00:09:22,480
examples like

00:09:15,200 --> 00:09:25,920
you know visa right

00:09:22,480 --> 00:09:27,760
and then mastercard i mean and all those

00:09:25,920 --> 00:09:30,399
credit cards and debit cards

00:09:27,760 --> 00:09:32,000
right they are all handling your money

00:09:30,399 --> 00:09:32,800
and they all have the balances of all

00:09:32,000 --> 00:09:34,080
your accounts

00:09:32,800 --> 00:09:37,200
guys they know who you are paying and

00:09:34,080 --> 00:09:39,920
who you're not so um

00:09:37,200 --> 00:09:42,720
yeah that's a centralized approach to um

00:09:39,920 --> 00:09:45,920
digital currency

00:09:42,720 --> 00:09:47,279
and so blockchain or bitcoin or these

00:09:45,920 --> 00:09:49,360
reset papers

00:09:47,279 --> 00:09:50,800
we're trying to find okay i mean we have

00:09:49,360 --> 00:09:52,080
centralized approaches that are quite

00:09:50,800 --> 00:09:54,560
easy to come up with

00:09:52,080 --> 00:09:56,880
we want to find a decentralized approach

00:09:54,560 --> 00:10:00,800
where the money doesn't have to pass

00:09:56,880 --> 00:10:04,240
through essentially a central

00:10:00,800 --> 00:10:06,800
agency right but

00:10:04,240 --> 00:10:07,519
um so i can be able to send money to

00:10:06,800 --> 00:10:09,920
someone

00:10:07,519 --> 00:10:11,360
right and we'll talk about the double

00:10:09,920 --> 00:10:14,399
spending problem

00:10:11,360 --> 00:10:16,000
but um before that so that's that's what

00:10:14,399 --> 00:10:16,480
these academic papers were about beat

00:10:16,000 --> 00:10:17,680
gold

00:10:16,480 --> 00:10:19,360
and all of those things and they were

00:10:17,680 --> 00:10:20,880
interesting because and even those times

00:10:19,360 --> 00:10:24,399
someone mentioned smart contracts i mean

00:10:20,880 --> 00:10:24,399
those guys were visionary serious

00:10:24,720 --> 00:10:28,560
so after that yes yes yes you're gonna

00:10:26,480 --> 00:10:31,600
see a lot a lot of time passed

00:10:28,560 --> 00:10:34,079
and then someone named satoshi nakamoto

00:10:31,600 --> 00:10:36,560
i want to say someone i'll say an entity

00:10:34,079 --> 00:10:38,880
and this entity i'm referring could be a

00:10:36,560 --> 00:10:40,079
person or an organization because up to

00:10:38,880 --> 00:10:43,279
now no one knows

00:10:40,079 --> 00:10:45,440
who satoshi nakamoto is and so i prefer

00:10:43,279 --> 00:10:48,399
to call satoshi nakamoto

00:10:45,440 --> 00:10:48,399
an unknown entity

00:10:48,800 --> 00:10:57,200
yeah so he wrote a bit oh sorry

00:10:54,000 --> 00:11:00,880
so this entity satoshi nakamoto

00:10:57,200 --> 00:11:03,519
wrote the bitcoin white paper

00:11:00,880 --> 00:11:04,640
and he did not implement the code

00:11:03,519 --> 00:11:06,079
himself because according to the

00:11:04,640 --> 00:11:07,360
programmers who did they said satoshi

00:11:06,079 --> 00:11:09,440
nakamoto

00:11:07,360 --> 00:11:11,120
it seemed like a really good programmer

00:11:09,440 --> 00:11:13,200
because i mean they contacted him

00:11:11,120 --> 00:11:15,440
throughout writing the thing and

00:11:13,200 --> 00:11:16,399
some of the ideas he gave were you know

00:11:15,440 --> 00:11:18,160
i mean he gave

00:11:16,399 --> 00:11:19,600
advice as he was very good with

00:11:18,160 --> 00:11:21,360
theoretical stuff but

00:11:19,600 --> 00:11:22,720
when it comes to actually writing the

00:11:21,360 --> 00:11:25,120
code i mean

00:11:22,720 --> 00:11:26,560
he didn't follow certain standards which

00:11:25,120 --> 00:11:29,760
and that's what i call it today but

00:11:26,560 --> 00:11:31,680
i don't know so i mean this was also

00:11:29,760 --> 00:11:35,360
some just people trying to find some

00:11:31,680 --> 00:11:35,360
clue to kind of uh

00:11:35,519 --> 00:11:44,959
find out who that toast nakamoto is uh

00:11:40,320 --> 00:11:48,720
so yeah and so bitcoin

00:11:44,959 --> 00:11:49,120
is actually um an open source budget and

00:11:48,720 --> 00:11:54,639
i can

00:11:49,120 --> 00:11:54,639
i will go to the github right bitcoin

00:11:55,120 --> 00:12:01,839
github i'll go to the data

00:11:59,920 --> 00:12:04,959
and you see actually it's a github

00:12:01,839 --> 00:12:08,800
project it's an open source project

00:12:04,959 --> 00:12:10,160
and so actually anyone who wants to

00:12:08,800 --> 00:12:11,839
contribute can actually go and

00:12:10,160 --> 00:12:13,360
contribute so

00:12:11,839 --> 00:12:15,120
bitcoin just think of this as an open

00:12:13,360 --> 00:12:17,120
source project but now the code

00:12:15,120 --> 00:12:19,920
implementation is an open source project

00:12:17,120 --> 00:12:20,959
so all programmers who are interested in

00:12:19,920 --> 00:12:24,079
bitcoin

00:12:20,959 --> 00:12:25,760
will just go and implement and it is

00:12:24,079 --> 00:12:27,600
what you call a public blockchain

00:12:25,760 --> 00:12:28,880
all right just like the blockchains i'm

00:12:27,600 --> 00:12:29,519
going to talk about the achievement

00:12:28,880 --> 00:12:32,079
teasers

00:12:29,519 --> 00:12:34,560
these are all public blockchains right

00:12:32,079 --> 00:12:36,000
and so

00:12:34,560 --> 00:12:38,079
after bitcoin came and then people

00:12:36,000 --> 00:12:38,880
realized oh okay we could have other

00:12:38,079 --> 00:12:41,440
forms of

00:12:38,880 --> 00:12:42,399
cryptocurrency right so people started

00:12:41,440 --> 00:12:45,040
doing something we called

00:12:42,399 --> 00:12:46,720
out coins right and i'm not going to go

00:12:45,040 --> 00:12:49,120
deep into the outgoings but one

00:12:46,720 --> 00:12:50,800
good example is the bitcoin cash and so

00:12:49,120 --> 00:12:51,360
the question is how do outcomes come

00:12:50,800 --> 00:12:54,720
about

00:12:51,360 --> 00:12:57,760
right so how do outcomes come about

00:12:54,720 --> 00:13:00,160
and the answer is that you know uh

00:12:57,760 --> 00:13:01,200
the blockchain like when we have a

00:13:00,160 --> 00:13:04,800
public blockchain

00:13:01,200 --> 00:13:07,360
right is mostly like a network of

00:13:04,800 --> 00:13:08,320
i mean a lot of people who come together

00:13:07,360 --> 00:13:10,560
right

00:13:08,320 --> 00:13:12,160
to set up something called notes we go

00:13:10,560 --> 00:13:16,000
into this later

00:13:12,160 --> 00:13:20,480
but uh i mean

00:13:16,000 --> 00:13:21,200
and these notes are what from part of

00:13:20,480 --> 00:13:24,320
the network

00:13:21,200 --> 00:13:28,720
right and they can talk to each other

00:13:24,320 --> 00:13:32,240
so it's kind of something better so

00:13:28,720 --> 00:13:34,959
uh yeah

00:13:32,240 --> 00:13:36,720
so what's happening is that these nodes

00:13:34,959 --> 00:13:40,639
communicate based on a certain

00:13:36,720 --> 00:13:42,399
rules and regulations right for instance

00:13:40,639 --> 00:13:45,120
they say that one of the rules of

00:13:42,399 --> 00:13:48,399
revolution is that every 10 minutes

00:13:45,120 --> 00:13:51,680
right a new blog is created

00:13:48,399 --> 00:13:54,160
a new block right every 10 minutes

00:13:51,680 --> 00:13:55,519
so you understand what a block is if you

00:13:54,160 --> 00:13:58,000
don't understand

00:13:55,519 --> 00:13:58,880
right so meaning that if if you make a

00:13:58,000 --> 00:14:02,160
transaction

00:13:58,880 --> 00:14:03,440
in bitcoin right it will take at least

00:14:02,160 --> 00:14:06,720
10 minutes for it to

00:14:03,440 --> 00:14:08,560
um to appear or to

00:14:06,720 --> 00:14:11,040
to take effect so first and if i if you

00:14:08,560 --> 00:14:11,600
send money bitcoin to someone to take at

00:14:11,040 --> 00:14:13,760
least

00:14:11,600 --> 00:14:14,880
10 minutes right but usually it takes

00:14:13,760 --> 00:14:17,279
more than that because

00:14:14,880 --> 00:14:17,920
people need to verify that it does

00:14:17,279 --> 00:14:21,199
really happen

00:14:17,920 --> 00:14:21,199
right so

00:14:21,519 --> 00:14:25,279
there were some people who said wait

00:14:23,519 --> 00:14:28,839
look we can make this one faster than 10

00:14:25,279 --> 00:14:32,160
minutes we can't even make it one minute

00:14:28,839 --> 00:14:33,440
right and some say we can we can make 17

00:14:32,160 --> 00:14:35,519
seconds

00:14:33,440 --> 00:14:37,199
or something and you know that you

00:14:35,519 --> 00:14:39,920
realize this 17 seconds

00:14:37,199 --> 00:14:41,920
i've said it's not random i'll actually

00:14:39,920 --> 00:14:43,600
come down to it

00:14:41,920 --> 00:14:45,440
but then there were some people in the

00:14:43,600 --> 00:14:46,959
community who said no we still wanted 10

00:14:45,440 --> 00:14:48,720
minutes and the people said no we want

00:14:46,959 --> 00:14:51,519
the one we want to improve the speed

00:14:48,720 --> 00:14:53,040
some said no no no whatever happened and

00:14:51,519 --> 00:14:55,279
so what happened was that

00:14:53,040 --> 00:14:57,360
those people who want who wanted a

00:14:55,279 --> 00:15:01,680
faster transaction time

00:14:57,360 --> 00:15:03,839
made a fork right of the bitcoin

00:15:01,680 --> 00:15:05,279
repository and then they created their

00:15:03,839 --> 00:15:08,399
own network right

00:15:05,279 --> 00:15:12,959
so for instance an example is a bitcoin

00:15:08,399 --> 00:15:15,760
cash it's a bitcoin cash right

00:15:12,959 --> 00:15:17,360
so bitcoin cash is it's not bitcoin it's

00:15:15,760 --> 00:15:20,000
bitcoin cash it's a fork

00:15:17,360 --> 00:15:21,839
as you can see it's a fork of bitcoin

00:15:20,000 --> 00:15:23,600
it's a spinoff or altcoin that was

00:15:21,839 --> 00:15:26,240
created in 2017

00:15:23,600 --> 00:15:27,040
right and and now the main reason for

00:15:26,240 --> 00:15:29,360
that is that

00:15:27,040 --> 00:15:30,160
they wanted faster transaction right so

00:15:29,360 --> 00:15:33,199
that's the point of

00:15:30,160 --> 00:15:33,680
it so that's bitcoin cash for you so

00:15:33,199 --> 00:15:35,440
that's

00:15:33,680 --> 00:15:37,360
how outskirts came along and there are a

00:15:35,440 --> 00:15:40,000
lot of outcomes actually guys

00:15:37,360 --> 00:15:41,600
a lot of outcomes and i'm not really

00:15:40,000 --> 00:15:43,040
going to go to afghan because it's all

00:15:41,600 --> 00:15:44,800
messy

00:15:43,040 --> 00:15:46,320
there's no other thing with everything i

00:15:44,800 --> 00:15:47,360
don't really like things that are messy

00:15:46,320 --> 00:15:51,120
so

00:15:47,360 --> 00:15:52,639
yeah so after all this outgoing scheme

00:15:51,120 --> 00:15:54,240
um the next thing that we have is

00:15:52,639 --> 00:15:57,279
ethereum right

00:15:54,240 --> 00:15:58,959
so ethereum says it wants to be the

00:15:57,279 --> 00:16:00,320
first urine complete smart contract

00:15:58,959 --> 00:16:04,079
platform

00:16:00,320 --> 00:16:07,199
on the blockchain what does that mean

00:16:04,079 --> 00:16:08,560
so you know in bitcoin you can write

00:16:07,199 --> 00:16:09,360
something called smart contrast with a

00:16:08,560 --> 00:16:11,360
little bit of

00:16:09,360 --> 00:16:12,880
piece of code that is stored on the

00:16:11,360 --> 00:16:15,759
blockchain and this code can be you can

00:16:12,880 --> 00:16:18,880
interact with this code and all of that

00:16:15,759 --> 00:16:22,320
so now what happens is that this code

00:16:18,880 --> 00:16:25,120
this smart contract um the language

00:16:22,320 --> 00:16:25,920
is not even complete so example it

00:16:25,120 --> 00:16:28,639
doesn't have

00:16:25,920 --> 00:16:29,839
for loops right and imagine writing code

00:16:28,639 --> 00:16:31,440
without followers

00:16:29,839 --> 00:16:33,680
so that's not even complete i mean you

00:16:31,440 --> 00:16:38,079
can do certain things right

00:16:33,680 --> 00:16:39,680
yeah so the the goal of ethereum was to

00:16:38,079 --> 00:16:41,920
be a tyrant complete

00:16:39,680 --> 00:16:43,360
smart contract platform so with doing

00:16:41,920 --> 00:16:44,160
complete multiple cloud platform that

00:16:43,360 --> 00:16:47,279
means that

00:16:44,160 --> 00:16:49,440
this increases the um vast amount of

00:16:47,279 --> 00:16:51,120
applications that can be built with

00:16:49,440 --> 00:16:55,519
ethereum right

00:16:51,120 --> 00:16:58,959
so this is a great great great uh

00:16:55,519 --> 00:17:02,839
sorry um improvement from bitcoin

00:16:58,959 --> 00:17:06,000
so actually at rm is also a public

00:17:02,839 --> 00:17:07,439
blockchain ethereum

00:17:06,000 --> 00:17:10,079
i don't know whether it's gonna get hot

00:17:07,439 --> 00:17:14,079
or something but anyway

00:17:10,079 --> 00:17:14,079
yeah i don't get hot so

00:17:19,120 --> 00:17:24,720
well well well wherever so

00:17:22,480 --> 00:17:26,240
actually so yeah you can see they have a

00:17:24,720 --> 00:17:28,480
lot of projects here

00:17:26,240 --> 00:17:30,480
really really a lot every time is

00:17:28,480 --> 00:17:31,600
working on a lot of projects i i don't

00:17:30,480 --> 00:17:34,640
even follow

00:17:31,600 --> 00:17:36,080
uh so it's also a public blockchain

00:17:34,640 --> 00:17:37,919
and that was a huge step that's why i've

00:17:36,080 --> 00:17:40,559
put in it here because it's

00:17:37,919 --> 00:17:42,240
it ethereum started like first

00:17:40,559 --> 00:17:43,360
successful implementation of this during

00:17:42,240 --> 00:17:45,600
complete platform

00:17:43,360 --> 00:17:47,120
and so atm you could write code in

00:17:45,600 --> 00:17:48,720
something called solidity which looked

00:17:47,120 --> 00:17:50,559
like javascript and you could write your

00:17:48,720 --> 00:17:52,400
code like normal code

00:17:50,559 --> 00:17:54,400
and this code will be stored on the

00:17:52,400 --> 00:17:55,600
blockchain and one advantages of code

00:17:54,400 --> 00:17:57,760
doing on the blockchain is that

00:17:55,600 --> 00:17:59,600
one everybody can see this code that is

00:17:57,760 --> 00:18:02,799
different from story

00:17:59,600 --> 00:18:03,520
writing maybe python code example jungle

00:18:02,799 --> 00:18:05,360
code

00:18:03,520 --> 00:18:06,559
right not everyone can see the code

00:18:05,360 --> 00:18:08,160
because

00:18:06,559 --> 00:18:09,760
it's on your server unless the person

00:18:08,160 --> 00:18:11,039
has access to your server they cannot

00:18:09,760 --> 00:18:13,600
see the code

00:18:11,039 --> 00:18:15,440
but with this one everyone can see

00:18:13,600 --> 00:18:17,360
whatever code is written

00:18:15,440 --> 00:18:19,039
on the blockchain everyone can see any

00:18:17,360 --> 00:18:21,600
information on the blockchain including

00:18:19,039 --> 00:18:22,799
whatever code is there the only thing is

00:18:21,600 --> 00:18:25,440
that they can't change it so

00:18:22,799 --> 00:18:26,400
easy this brings into light a lot of

00:18:25,440 --> 00:18:30,320
interesting things

00:18:26,400 --> 00:18:31,520
right so so for instance like

00:18:30,320 --> 00:18:33,360
when you mention one of the applications

00:18:31,520 --> 00:18:35,360
of blockchain someone says voting right

00:18:33,360 --> 00:18:37,200
i mean we could have voting applications

00:18:35,360 --> 00:18:38,640
where it doesn't need a blockchain

00:18:37,200 --> 00:18:40,559
but the point is that if we are going to

00:18:38,640 --> 00:18:40,960
use it we want to do anything serials i

00:18:40,559 --> 00:18:42,799
think

00:18:40,960 --> 00:18:44,240
what's an application needs to be done

00:18:42,799 --> 00:18:47,360
on the blockchain why

00:18:44,240 --> 00:18:49,600
because look it doesn't matter the test

00:18:47,360 --> 00:18:51,440
we run or whatever things we have

00:18:49,600 --> 00:18:52,799
i still want to see the code at it as

00:18:51,440 --> 00:18:54,880
the voting is happening

00:18:52,799 --> 00:18:56,400
and you can do that with a smart

00:18:54,880 --> 00:18:57,760
contract right because at smart contract

00:18:56,400 --> 00:18:58,480
one we know that this is where the

00:18:57,760 --> 00:19:00,880
everything

00:18:58,480 --> 00:19:01,919
this the smart contractor is going to

00:19:00,880 --> 00:19:04,799
take care of

00:19:01,919 --> 00:19:05,679
this voting thing you can continue

00:19:04,799 --> 00:19:07,200
verifying it

00:19:05,679 --> 00:19:08,880
throughout the period of the voting to

00:19:07,200 --> 00:19:10,880
see oh okay the code hasn't changed or

00:19:08,880 --> 00:19:13,679
no one has a method or anything right

00:19:10,880 --> 00:19:15,440
so for something like this a smart

00:19:13,679 --> 00:19:18,240
contract on the public blockchain

00:19:15,440 --> 00:19:20,000
it's really really important all right

00:19:18,240 --> 00:19:22,720
and so from ethereum

00:19:20,000 --> 00:19:24,640
we come to tesla's so tesla's is also a

00:19:22,720 --> 00:19:25,840
smart contract platform during complete

00:19:24,640 --> 00:19:29,200
actually

00:19:25,840 --> 00:19:30,480
just like ethereum but the the reason

00:19:29,200 --> 00:19:31,919
why i tell those game is to solve

00:19:30,480 --> 00:19:35,280
certain problems that

00:19:31,919 --> 00:19:36,720
bitcoin and ethereum had first of all

00:19:35,280 --> 00:19:38,160
bitcoin

00:19:36,720 --> 00:19:40,320
and one of the problems i have mentioned

00:19:38,160 --> 00:19:42,000
is the issue of the forecast so

00:19:40,320 --> 00:19:43,360
you remember i mentioned like bitcoin

00:19:42,000 --> 00:19:45,039
cash so what

00:19:43,360 --> 00:19:46,720
bit happened bitcoin cash is that some

00:19:45,039 --> 00:19:47,200
people there were some disagreements in

00:19:46,720 --> 00:19:49,200
the

00:19:47,200 --> 00:19:51,039
community and then some people decided

00:19:49,200 --> 00:19:52,880
to go their way and then if they make

00:19:51,039 --> 00:19:54,160
photo of the fork of the code they

00:19:52,880 --> 00:19:56,400
change certain parameters

00:19:54,160 --> 00:19:57,919
and they have their own chain right so

00:19:56,400 --> 00:20:00,400
this will split the network

00:19:57,919 --> 00:20:01,120
right so maybe 100 people and 50 of them

00:20:00,400 --> 00:20:02,799
disagree

00:20:01,120 --> 00:20:04,720
and let's say maybe 30 of them want that

00:20:02,799 --> 00:20:05,280
bitcoin cash then what will happen is

00:20:04,720 --> 00:20:08,080
that

00:20:05,280 --> 00:20:10,320
those 30 of them will leave and then now

00:20:08,080 --> 00:20:13,440
bitcoin will be only what

00:20:10,320 --> 00:20:15,600
17. right so it reduces the

00:20:13,440 --> 00:20:17,440
strength of bitcoin in some way but i

00:20:15,600 --> 00:20:18,880
mean bitcoin as we can all see has

00:20:17,440 --> 00:20:20,640
survived because

00:20:18,880 --> 00:20:22,559
there it's currently i mean i can't help

00:20:20,640 --> 00:20:26,799
myself with this but

00:20:22,559 --> 00:20:26,799
bitcoin price

00:20:27,200 --> 00:20:32,080
damn i mean this is joining ghana city

00:20:29,840 --> 00:20:35,840
but so let's see

00:20:32,080 --> 00:20:35,840
in us zolas

00:20:44,240 --> 00:20:50,480
oh man

00:20:48,159 --> 00:20:50,480
uh

00:20:51,200 --> 00:20:54,320
look okay we can't find you as you got

00:20:52,880 --> 00:20:58,960
to find pounds

00:20:54,320 --> 00:21:00,960
and there's 7 498 pounds

00:20:58,960 --> 00:21:02,799
yeah if you have one baseball just send

00:21:00,960 --> 00:21:04,240
it to me i'll make my bitcoin

00:21:02,799 --> 00:21:06,240
account available and you can send me

00:21:04,240 --> 00:21:09,520
just one bitcoin right

00:21:06,240 --> 00:21:13,440
anyway so that's just by the way

00:21:09,520 --> 00:21:17,840
so yeah so that's a history and for me

00:21:13,440 --> 00:21:20,799
i i you can't find me here right

00:21:17,840 --> 00:21:22,799
so this was itself is like two years old

00:21:20,799 --> 00:21:24,159
since it has been launched officially

00:21:22,799 --> 00:21:26,240
it's like maybe two years old or

00:21:24,159 --> 00:21:28,640
something because it was done in 2018

00:21:26,240 --> 00:21:29,360
and we're in 2020 right so the way i

00:21:28,640 --> 00:21:31,200
realized

00:21:29,360 --> 00:21:32,640
on online they were celebrating a baby

00:21:31,200 --> 00:21:35,760
or something like that anyway

00:21:32,640 --> 00:21:39,120
so uh from

00:21:35,760 --> 00:21:40,880
2014 to 2016 this was

00:21:39,120 --> 00:21:43,760
just quite cool white prep and code

00:21:40,880 --> 00:21:45,120
implementation but from 2016 to 2018 a

00:21:43,760 --> 00:21:47,360
lot of things happen you know

00:21:45,120 --> 00:21:49,360
that's not the topic of this subject but

00:21:47,360 --> 00:21:51,520
after 2018 everything was okay and then

00:21:49,360 --> 00:21:54,640
the jesus platform was launched

00:21:51,520 --> 00:21:56,000
and uh so this was not that old compared

00:21:54,640 --> 00:21:56,960
to bitcoin which was launched in

00:21:56,000 --> 00:21:59,840
somewhere

00:21:56,960 --> 00:22:01,440
i don't need a 2010 or something yeah so

00:21:59,840 --> 00:22:05,360
it's kind of

00:22:01,440 --> 00:22:06,159
the new kid right and yeah it really has

00:22:05,360 --> 00:22:07,200
questions

00:22:06,159 --> 00:22:09,600
and so that's what we're going to go

00:22:07,200 --> 00:22:13,840
into right now and

00:22:09,600 --> 00:22:13,840
yeah so

00:22:14,159 --> 00:22:17,760
now that we are done with the

00:22:15,520 --> 00:22:18,240
introduction i mean the history and all

00:22:17,760 --> 00:22:20,880
of that

00:22:18,240 --> 00:22:22,000
i mean i i just have to include that

00:22:20,880 --> 00:22:24,240
part

00:22:22,000 --> 00:22:25,600
now we can go to how blockchain works

00:22:24,240 --> 00:22:27,840
okay

00:22:25,600 --> 00:22:27,840
all right

00:22:30,640 --> 00:22:34,640
yeah so next we move on to how

00:22:33,440 --> 00:22:38,840
blockchains

00:22:34,640 --> 00:22:40,000
work right so i'll go i'll say without

00:22:38,840 --> 00:22:43,679
any

00:22:40,000 --> 00:22:45,679
reservations that i mean any kind of

00:22:43,679 --> 00:22:49,520
blockchain that you've ever heard of

00:22:45,679 --> 00:22:50,480
you know whether it's bitcoin or some

00:22:49,520 --> 00:22:55,520
else grain

00:22:50,480 --> 00:22:58,159
or ethereum or teslas they all have

00:22:55,520 --> 00:22:59,600
some of these components in fact all of

00:22:58,159 --> 00:23:01,200
these components are available in them

00:22:59,600 --> 00:23:02,720
whether directly or indirectly whether

00:23:01,200 --> 00:23:06,840
they like it or not

00:23:02,720 --> 00:23:10,000
and so this summarizes in

00:23:06,840 --> 00:23:13,120
in in one

00:23:10,000 --> 00:23:13,440
screen how blockchains work and that is

00:23:13,120 --> 00:23:16,559
it

00:23:13,440 --> 00:23:19,600
all right so we let's start

00:23:16,559 --> 00:23:21,919
um with the networks

00:23:19,600 --> 00:23:23,760
and nodes right so a blockchain is

00:23:21,919 --> 00:23:27,360
essentially a computer network

00:23:23,760 --> 00:23:32,080
okay so

00:23:27,360 --> 00:23:33,919
um it's a network of nodes

00:23:32,080 --> 00:23:35,280
so when we say nodes here don't think

00:23:33,919 --> 00:23:37,679
too far nodes are

00:23:35,280 --> 00:23:38,960
computer servers that participate in the

00:23:37,679 --> 00:23:41,600
blockchain network

00:23:38,960 --> 00:23:42,799
nodes can't enter and leave at any time

00:23:41,600 --> 00:23:47,360
you know

00:23:42,799 --> 00:23:49,600
so um it's like that like

00:23:47,360 --> 00:23:50,880
in fact you can participate in any

00:23:49,600 --> 00:23:54,000
blockchain network

00:23:50,880 --> 00:23:55,600
with your laptop i mean um but however

00:23:54,000 --> 00:23:56,640
depends on the strength of your laptop

00:23:55,600 --> 00:23:59,919
or something

00:23:56,640 --> 00:24:03,520
or you can use a strong server computer

00:23:59,919 --> 00:24:06,559
or something right the point is that

00:24:03,520 --> 00:24:09,760
a blockchain is a network right

00:24:06,559 --> 00:24:12,240
it is a network of nodes however these

00:24:09,760 --> 00:24:15,120
nodes communicate

00:24:12,240 --> 00:24:16,480
based on certain rules okay and that's

00:24:15,120 --> 00:24:19,840
what makes it

00:24:16,480 --> 00:24:19,840
um a blockchain

00:24:20,080 --> 00:24:27,600
and we will get there but basically

00:24:23,120 --> 00:24:32,559
first of all let me just even draw this

00:24:27,600 --> 00:24:34,880
so we have nodes now blockchain

00:24:32,559 --> 00:24:34,880
all right

00:24:38,880 --> 00:24:44,960
nodes nodes nodes and nodes are server

00:24:42,159 --> 00:24:46,400
uh computers that participate in the

00:24:44,960 --> 00:24:48,000
blockchain

00:24:46,400 --> 00:24:51,200
so very soon you get to know what i mean

00:24:48,000 --> 00:24:55,440
by participate and these nodes

00:24:51,200 --> 00:24:58,840
you talk to each other right

00:24:55,440 --> 00:25:01,360
you talk to each other you talk to each

00:24:58,840 --> 00:25:06,159
other

00:25:01,360 --> 00:25:06,159
so so it's kind of like

00:25:08,799 --> 00:25:12,799
if i probably have a network topologies

00:25:13,520 --> 00:25:17,120
i don't know this is what they call the

00:25:15,200 --> 00:25:19,200
mesh topology or something i mean

00:25:17,120 --> 00:25:21,200
any node the point is that any node can

00:25:19,200 --> 00:25:23,760
talk to any node

00:25:21,200 --> 00:25:24,960
i'm not going with remembering names but

00:25:23,760 --> 00:25:27,760
that's it

00:25:24,960 --> 00:25:29,440
all right so this node can ask this node

00:25:27,760 --> 00:25:31,200
for something this mode can access node

00:25:29,440 --> 00:25:35,200
for something and by node i mean

00:25:31,200 --> 00:25:35,200
computer networks or computer servers

00:25:35,760 --> 00:25:39,039
so we'll get we'll get back to that

00:25:38,080 --> 00:25:41,600
later

00:25:39,039 --> 00:25:42,960
and then next component is transactions

00:25:41,600 --> 00:25:47,039
and smart contracts

00:25:42,960 --> 00:25:47,039
right so unless his transactions

00:25:47,360 --> 00:25:51,039
so transactions are broadcast to all

00:25:48,880 --> 00:25:52,080
nodes in the network transmitted state

00:25:51,039 --> 00:25:57,840
of blockchain

00:25:52,080 --> 00:25:57,840
so what is the transaction

00:26:01,760 --> 00:26:10,159
so at a very um

00:26:05,120 --> 00:26:11,840
basic level all right um let me just use

00:26:10,159 --> 00:26:13,360
a simple example for what a transaction

00:26:11,840 --> 00:26:17,039
next

00:26:13,360 --> 00:26:20,159
so uh a transaction

00:26:17,039 --> 00:26:24,720
a simple example is okay i want to send

00:26:20,159 --> 00:26:26,960
this amount of bitcoin for my address

00:26:24,720 --> 00:26:29,039
to cut this address that's a thought

00:26:26,960 --> 00:26:30,559
that is an example of the transaction

00:26:29,039 --> 00:26:32,640
but the transaction could also be as

00:26:30,559 --> 00:26:33,360
complex as a smart contract in fact the

00:26:32,640 --> 00:26:36,640
transaction

00:26:33,360 --> 00:26:38,080
could contain anything right and the

00:26:36,640 --> 00:26:41,279
reason why i said transactions and smart

00:26:38,080 --> 00:26:43,440
contracts is that basically

00:26:41,279 --> 00:26:44,720
in in recent blockchains we are seeing

00:26:43,440 --> 00:26:46,720
that transactions are

00:26:44,720 --> 00:26:48,240
kind of the same as smart contracts

00:26:46,720 --> 00:26:50,880
because even

00:26:48,240 --> 00:26:51,600
in a blockchain to send maybe money to

00:26:50,880 --> 00:26:53,279
someone

00:26:51,600 --> 00:26:54,880
from one address to another address

00:26:53,279 --> 00:26:58,159
basically as a doing is

00:26:54,880 --> 00:27:00,720
executing a smart contract right yeah

00:26:58,159 --> 00:27:01,840
so you're writing a piece of code that

00:27:00,720 --> 00:27:04,880
says

00:27:01,840 --> 00:27:05,279
um this is the person who can get the

00:27:04,880 --> 00:27:08,880
money

00:27:05,279 --> 00:27:08,880
or something question in bitcoin

00:27:09,279 --> 00:27:13,600
to transfer money to someone is not as

00:27:11,760 --> 00:27:17,120
simple as say

00:27:13,600 --> 00:27:20,480
this person has an account

00:27:17,120 --> 00:27:22,799
right it's not as simple as say this

00:27:20,480 --> 00:27:25,919
person has an account

00:27:22,799 --> 00:27:29,039
and this b

00:27:25,919 --> 00:27:29,039
also has an account

00:27:29,200 --> 00:27:36,240
and then i'm transferring money to b no

00:27:32,799 --> 00:27:39,520
and then need to detect and they need to

00:27:36,240 --> 00:27:41,039
have to be you know the point is that of

00:27:39,520 --> 00:27:42,480
course we have an account we have they

00:27:41,039 --> 00:27:49,520
have what we call an address

00:27:42,480 --> 00:27:54,559
right and everyone in the network has

00:27:49,520 --> 00:27:54,559
what we call a public key

00:27:56,240 --> 00:28:04,960
public key usually denoted as pbk

00:27:59,919 --> 00:28:04,960
and then a private key right

00:28:06,080 --> 00:28:11,200
private key okay

00:28:09,279 --> 00:28:12,480
so what we say you send when i say you

00:28:11,200 --> 00:28:15,679
send money to

00:28:12,480 --> 00:28:16,000
um someone's address what i mean is send

00:28:15,679 --> 00:28:20,799
money

00:28:16,000 --> 00:28:20,799
to so an address is basically the hash

00:28:21,039 --> 00:28:26,720
okay of the public key

00:28:28,000 --> 00:28:32,000
and if you know if you're familiar with

00:28:30,880 --> 00:28:35,679
what the hashes

00:28:32,000 --> 00:28:39,039
it's a one wave function right so

00:28:35,679 --> 00:28:42,960
um it takes an input and it gives

00:28:39,039 --> 00:28:46,799
m the same output for that input right

00:28:42,960 --> 00:28:48,880
but then also it ensures that

00:28:46,799 --> 00:28:50,799
when immediately changing the input the

00:28:48,880 --> 00:28:53,840
output also changes

00:28:50,799 --> 00:28:54,640
dramatically right so an example of a

00:28:53,840 --> 00:28:58,320
hash is

00:28:54,640 --> 00:29:00,559
we have the chat with this is hash and

00:28:58,320 --> 00:29:00,559
uh

00:29:02,559 --> 00:29:10,000
md5 yeah so i'm sure you've heard of md5

00:29:06,399 --> 00:29:14,880
um so

00:29:10,000 --> 00:29:19,919
there's this website hash

00:29:14,880 --> 00:29:23,520
yeah right right

00:29:19,919 --> 00:29:26,960
so i just want to demonstrate

00:29:23,520 --> 00:29:28,399
what the hash is right

00:29:26,960 --> 00:29:30,799
so i mean these these are some of the

00:29:28,399 --> 00:29:32,720
things you need to understand when

00:29:30,799 --> 00:29:34,080
you want to do a blockchain or something

00:29:32,720 --> 00:29:38,720
like that right

00:29:34,080 --> 00:29:38,720
so there's a hello

00:29:48,080 --> 00:29:57,679
i want

00:29:54,080 --> 00:29:57,679
okay so

00:29:59,440 --> 00:30:06,720
hello you see it is the hash right

00:30:03,679 --> 00:30:09,840
this is 256 hash okay

00:30:06,720 --> 00:30:09,840
hello world

00:30:12,159 --> 00:30:18,159
if i change even this to dot

00:30:15,520 --> 00:30:19,520
if i add even a dot here just notice

00:30:18,159 --> 00:30:22,880
what happens

00:30:19,520 --> 00:30:26,240
changes dramatically right

00:30:22,880 --> 00:30:28,240
so that's what a hash is so it takes

00:30:26,240 --> 00:30:31,039
whatever you have here which is looking

00:30:28,240 --> 00:30:34,799
nice and it turns into something which

00:30:31,039 --> 00:30:36,720
looks not like what you had initially

00:30:34,799 --> 00:30:37,840
and you can't come back from here to

00:30:36,720 --> 00:30:39,679
here right

00:30:37,840 --> 00:30:41,039
so that's what the hash is so it's a

00:30:39,679 --> 00:30:44,159
one-way function

00:30:41,039 --> 00:30:47,679
right you can go

00:30:44,159 --> 00:30:47,679
from your original text

00:30:49,440 --> 00:30:52,080
to the hash

00:30:52,880 --> 00:30:56,720
but you can't go from the hash to the

00:30:54,799 --> 00:30:59,840
original text right

00:30:56,720 --> 00:31:03,440
so basically every account on

00:30:59,840 --> 00:31:05,519
say bitcoin blockchain and in fact

00:31:03,440 --> 00:31:06,480
all other blockchains have what we call

00:31:05,519 --> 00:31:09,279
the public key

00:31:06,480 --> 00:31:11,120
the private key and then the address is

00:31:09,279 --> 00:31:14,240
the hash of the public key

00:31:11,120 --> 00:31:16,960
right so the private key is private and

00:31:14,240 --> 00:31:18,960
this is what you need to keep secret

00:31:16,960 --> 00:31:21,600
so this is where you can hear people say

00:31:18,960 --> 00:31:23,919
okay i'm keeping it on a certain

00:31:21,600 --> 00:31:25,120
device or maybe i'm storing it on the

00:31:23,919 --> 00:31:27,200
cloud storage or something

00:31:25,120 --> 00:31:28,320
right you just the point is you need to

00:31:27,200 --> 00:31:30,960
keep distance secrets

00:31:28,320 --> 00:31:31,440
right maybe people write it down and

00:31:30,960 --> 00:31:33,120
then

00:31:31,440 --> 00:31:34,799
they put it in their save boxes or

00:31:33,120 --> 00:31:36,880
something and

00:31:34,799 --> 00:31:37,919
anytime you need to make any transaction

00:31:36,880 --> 00:31:39,679
on the blockchain

00:31:37,919 --> 00:31:41,440
you need your private key in order to

00:31:39,679 --> 00:31:43,760
make the transaction right

00:31:41,440 --> 00:31:45,360
a public key or let me say or probably

00:31:43,760 --> 00:31:48,880
the hash of your public key

00:31:45,360 --> 00:31:52,080
is what is available for everyone to

00:31:48,880 --> 00:31:53,760
see what is available for everyone so if

00:31:52,080 --> 00:31:55,679
you want to send

00:31:53,760 --> 00:31:57,679
money to them someone basically are

00:31:55,679 --> 00:32:02,159
sending to the house with a public key

00:31:57,679 --> 00:32:05,440
right yeah so

00:32:02,159 --> 00:32:07,679
and what you are doing is that bitcoin

00:32:05,440 --> 00:32:08,720
how it does is it tries a little bit a

00:32:07,679 --> 00:32:12,080
piece of code

00:32:08,720 --> 00:32:13,600
right and then this code um

00:32:12,080 --> 00:32:16,720
i don't know if let me try to see if i

00:32:13,600 --> 00:32:16,720
can find it here for you

00:32:17,120 --> 00:32:29,840
i feel like it's really interesting to

00:32:19,200 --> 00:32:29,840
see right

00:32:31,440 --> 00:32:38,159
yeah i found it

00:32:34,960 --> 00:32:38,159
so here is it all right

00:32:39,200 --> 00:32:44,000
so basically sending money to someone

00:32:42,320 --> 00:32:45,760
what is happening is the code you're

00:32:44,000 --> 00:32:50,880
writing for the person

00:32:45,760 --> 00:32:50,880
you are writing this code and then

00:32:51,440 --> 00:32:55,120
so i mean this is done automatically you

00:32:52,960 --> 00:32:56,640
don't write it at all but basically this

00:32:55,120 --> 00:33:00,399
is written

00:32:56,640 --> 00:33:03,760
and it says updo of 160. so this is like

00:33:00,399 --> 00:33:08,840
um operations on the bitcoin blockchain

00:33:03,760 --> 00:33:11,279
and this is what

00:33:08,840 --> 00:33:14,720
um

00:33:11,279 --> 00:33:16,399
kind of like locks money into a certain

00:33:14,720 --> 00:33:18,720
public key hash

00:33:16,399 --> 00:33:20,159
and the only the person who can get this

00:33:18,720 --> 00:33:22,240
amount or spend whatever

00:33:20,159 --> 00:33:23,279
is locked here is the one who has a

00:33:22,240 --> 00:33:26,960
private key

00:33:23,279 --> 00:33:28,320
right and so um

00:33:26,960 --> 00:33:30,000
you can look at this and you can go and

00:33:28,320 --> 00:33:33,440
read more about it

00:33:30,000 --> 00:33:36,640
bitcoin is not in our um

00:33:33,440 --> 00:33:38,480
focus now but basically they go ahead to

00:33:36,640 --> 00:33:41,600
show you like what is happening

00:33:38,480 --> 00:33:44,320
right it's interesting actually

00:33:41,600 --> 00:33:44,960
so yeah so it's not like necessarily

00:33:44,320 --> 00:33:47,519
like

00:33:44,960 --> 00:33:49,120
a debit and credit something no

00:33:47,519 --> 00:33:51,039
basically it's a smart contract

00:33:49,120 --> 00:33:53,519
so this this in itself is a smart

00:33:51,039 --> 00:33:55,600
contract

00:33:53,519 --> 00:33:57,279
yeah there's a little piece of code

00:33:55,600 --> 00:33:59,440
which needs to be executed

00:33:57,279 --> 00:34:00,880
and then the output needs to be true if

00:33:59,440 --> 00:34:02,399
if let's say you have the private key

00:34:00,880 --> 00:34:03,919
then the output to be true

00:34:02,399 --> 00:34:05,440
if you don't have the private key out

00:34:03,919 --> 00:34:08,960
with you first and it means you can't

00:34:05,440 --> 00:34:12,320
spend whatever money is locked up yeah

00:34:08,960 --> 00:34:15,839
right so that's what

00:34:12,320 --> 00:34:20,159
transactions and smart contracts so

00:34:15,839 --> 00:34:23,119
a blockchain that a blockchain is

00:34:20,159 --> 00:34:25,040
how it works is that nodes send these

00:34:23,119 --> 00:34:27,040
transactions to each other

00:34:25,040 --> 00:34:29,119
it's a little pieces of information

00:34:27,040 --> 00:34:29,919
right so let's say there's an outside

00:34:29,119 --> 00:34:32,320
user

00:34:29,919 --> 00:34:33,599
who wants to send mine to someone this

00:34:32,320 --> 00:34:35,520
outside video will

00:34:33,599 --> 00:34:37,440
instruct a note that hey i want to send

00:34:35,520 --> 00:34:40,399
money from

00:34:37,440 --> 00:34:41,200
my public key or my account to another

00:34:40,399 --> 00:34:44,240
account

00:34:41,200 --> 00:34:47,040
and this node would then broadcast

00:34:44,240 --> 00:34:48,000
right it will tell the other nodes so

00:34:47,040 --> 00:34:51,040
the other nodes will also

00:34:48,000 --> 00:34:52,399
work keep it in mind right there's

00:34:51,040 --> 00:34:54,879
someone else who

00:34:52,399 --> 00:34:55,520
can also make the same request to this

00:34:54,879 --> 00:34:58,160
node

00:34:55,520 --> 00:34:59,520
and this node has to broadcast i mean so

00:34:58,160 --> 00:35:02,560
that's how this node

00:34:59,520 --> 00:35:04,000
these nodes interchange information and

00:35:02,560 --> 00:35:06,640
anyone can join this node

00:35:04,000 --> 00:35:07,119
right in this case this user is not a

00:35:06,640 --> 00:35:09,440
node

00:35:07,119 --> 00:35:11,680
he's just a user using one of the nodes

00:35:09,440 --> 00:35:13,760
right or one of the servers it's like

00:35:11,680 --> 00:35:15,200
um logging onto facebook when you

00:35:13,760 --> 00:35:16,880
connect to facebook you are connected to

00:35:15,200 --> 00:35:20,240
facebook service right

00:35:16,880 --> 00:35:21,920
but here when you want to maybe spend on

00:35:20,240 --> 00:35:23,839
a blockchain you are connected to the

00:35:21,920 --> 00:35:25,200
other service on the blockchain and the

00:35:23,839 --> 00:35:27,359
difference between what the facebook

00:35:25,200 --> 00:35:28,880
example and this is that

00:35:27,359 --> 00:35:31,839
in the facebook example all the servers

00:35:28,880 --> 00:35:33,839
belong to facebook but in this example

00:35:31,839 --> 00:35:35,680
the service belongs to different people

00:35:33,839 --> 00:35:38,720
right and even you

00:35:35,680 --> 00:35:39,359
yourself as a user can set up your own

00:35:38,720 --> 00:35:42,320
node

00:35:39,359 --> 00:35:44,320
and then start you know receiving

00:35:42,320 --> 00:35:46,240
transactions and all of that

00:35:44,320 --> 00:35:47,680
but to use a blockchain you don't need

00:35:46,240 --> 00:35:49,680
to have a node yourself

00:35:47,680 --> 00:35:51,359
because there are other nodes set up

00:35:49,680 --> 00:35:52,960
right

00:35:51,359 --> 00:35:54,960
and so the question is why would someone

00:35:52,960 --> 00:35:56,320
set up a node or set up a server just to

00:35:54,960 --> 00:35:58,000
run this on the blockchain i mean it

00:35:56,320 --> 00:36:01,119
cost money so why would they do that

00:35:58,000 --> 00:36:04,960
right yeah

00:36:01,119 --> 00:36:07,200
so the next thing is

00:36:04,960 --> 00:36:07,200
uh

00:36:08,079 --> 00:36:11,839
so when nodes like transactions are

00:36:10,480 --> 00:36:13,680
generated and

00:36:11,839 --> 00:36:15,599
are shared between this blockchain of

00:36:13,680 --> 00:36:19,359
this node the next thing is

00:36:15,599 --> 00:36:24,000
consensus and blockchain creation right

00:36:19,359 --> 00:36:24,000
so let me clear what is here now

00:36:25,280 --> 00:36:29,280
um so uh

00:36:31,920 --> 00:36:37,599
to block so i mean we i mean that

00:36:35,200 --> 00:36:38,720
the whole thing is named now that vlogs

00:36:37,599 --> 00:36:41,119
so

00:36:38,720 --> 00:36:44,160
i mean it's fine it's fair to think that

00:36:41,119 --> 00:36:47,599
that's an important part of this

00:36:44,160 --> 00:36:51,280
so what is a blog right

00:36:47,599 --> 00:36:54,720
so let's just visualize a blog as a blog

00:36:51,280 --> 00:36:55,839
but basically it's just a collision of

00:36:54,720 --> 00:37:00,320
transactions

00:36:55,839 --> 00:37:00,320
right t1

00:37:01,920 --> 00:37:06,800
t2 and

00:37:07,119 --> 00:37:10,720
and then a whole lot of transactions

00:37:09,760 --> 00:37:12,960
come into play

00:37:10,720 --> 00:37:12,960
right

00:37:13,760 --> 00:37:21,040
yeah so basically as we said

00:37:17,440 --> 00:37:22,800
transactions um when a transaction is

00:37:21,040 --> 00:37:25,040
sent to one or the block with broadcast

00:37:22,800 --> 00:37:26,880
this transaction so the order knows

00:37:25,040 --> 00:37:28,720
so this guy says hey i want to send

00:37:26,880 --> 00:37:31,520
money to this person

00:37:28,720 --> 00:37:32,800
right so this node will broadcast it to

00:37:31,520 --> 00:37:34,160
all these nodes and say hey

00:37:32,800 --> 00:37:36,079
this guy wants to send money to this

00:37:34,160 --> 00:37:37,839
person and this this one also pass it

00:37:36,079 --> 00:37:39,119
along and pass it along and

00:37:37,839 --> 00:37:40,640
before you know it everyone in the

00:37:39,119 --> 00:37:42,240
network knows i mean this would take

00:37:40,640 --> 00:37:45,440
some time but

00:37:42,240 --> 00:37:46,240
uh based on later network latency and

00:37:45,440 --> 00:37:48,880
all of that

00:37:46,240 --> 00:37:49,760
but as time goes on everyone who knows

00:37:48,880 --> 00:37:54,560
everyone who knows

00:37:49,760 --> 00:37:54,560
all right so um

00:37:54,880 --> 00:38:02,240
with transactions like just

00:37:58,880 --> 00:38:06,160
single pieces of instructions

00:38:02,240 --> 00:38:08,000
right but uh

00:38:06,160 --> 00:38:10,400
the blockchain doesn't immediately i

00:38:08,000 --> 00:38:11,920
mean record transactions into

00:38:10,400 --> 00:38:14,400
its database so you can think of a

00:38:11,920 --> 00:38:17,520
blockchain

00:38:14,400 --> 00:38:18,960
what it does is over a period of time it

00:38:17,520 --> 00:38:20,320
collects

00:38:18,960 --> 00:38:22,079
all the transactions that have happened

00:38:20,320 --> 00:38:25,040
over that period of time

00:38:22,079 --> 00:38:25,839
and put it them together and this is

00:38:25,040 --> 00:38:28,160
what we call

00:38:25,839 --> 00:38:29,680
a blog right so the blog is just a

00:38:28,160 --> 00:38:34,240
collection of transactions

00:38:29,680 --> 00:38:37,920
so in bitcoin for instance it collects

00:38:34,240 --> 00:38:40,560
um a blog is created every 10 minutes

00:38:37,920 --> 00:38:41,040
right and part of the time is used to

00:38:40,560 --> 00:38:44,079
collect

00:38:41,040 --> 00:38:46,320
all the transact transactions

00:38:44,079 --> 00:38:48,000
um and then most of the time it's used

00:38:46,320 --> 00:38:49,920
to compute

00:38:48,000 --> 00:38:52,079
a certain proof that indeed you

00:38:49,920 --> 00:38:54,800
collected the transactions and

00:38:52,079 --> 00:38:54,800
so um

00:38:56,480 --> 00:38:59,680
that's a conceptual block question and

00:38:59,040 --> 00:39:02,720
so

00:38:59,680 --> 00:39:04,560
i image i mentioned a set improve right

00:39:02,720 --> 00:39:05,760
so in bitcoin we have this thing called

00:39:04,560 --> 00:39:09,040
the proof of work

00:39:05,760 --> 00:39:09,040
right so let's say

00:39:10,240 --> 00:39:14,640
you collect a certain amount of

00:39:13,280 --> 00:39:18,960
transactions in the block

00:39:14,640 --> 00:39:22,880
right now that's not the end of it

00:39:18,960 --> 00:39:27,359
in the block itself you need to

00:39:22,880 --> 00:39:32,079
find something called the norms right

00:39:27,359 --> 00:39:36,320
and o n the norms

00:39:32,079 --> 00:39:38,240
sorry n o n c and this node is just

00:39:36,320 --> 00:39:39,680
think of it as just a random number

00:39:38,240 --> 00:39:42,400
right

00:39:39,680 --> 00:39:44,240
it's just a random number and this

00:39:42,400 --> 00:39:47,599
random number

00:39:44,240 --> 00:39:49,599
you need to find a random number

00:39:47,599 --> 00:39:51,680
here and add it to all the transactions

00:39:49,599 --> 00:39:54,960
you had in such a way that

00:39:51,680 --> 00:39:58,880
when you hash this block okay

00:39:54,960 --> 00:40:01,359
you are going to get a certain value

00:39:58,880 --> 00:40:04,720
right of course in this value when we

00:40:01,359 --> 00:40:06,720
convert them to zeros and once

00:40:04,720 --> 00:40:10,000
so it should have a certain number of

00:40:06,720 --> 00:40:12,319
zeros at the beginning

00:40:10,000 --> 00:40:12,319
right

00:40:13,680 --> 00:40:20,560
and the only way to do this is to

00:40:16,880 --> 00:40:22,079
find a round number compute the hash

00:40:20,560 --> 00:40:23,760
and then check if there's a number of

00:40:22,079 --> 00:40:25,200
zeros at the beginning satisfy the

00:40:23,760 --> 00:40:26,640
condition so you can say

00:40:25,200 --> 00:40:28,240
okay when you find a random number in

00:40:26,640 --> 00:40:29,920
your computer hash we have we need five

00:40:28,240 --> 00:40:31,839
zeros at the beginning

00:40:29,920 --> 00:40:34,880
so until you do that and you find five

00:40:31,839 --> 00:40:37,760
zeros you're not going to

00:40:34,880 --> 00:40:39,040
yeah yeah you don't have the correct ah

00:40:37,760 --> 00:40:40,319
knowledge and you can't you need to keep

00:40:39,040 --> 00:40:43,040
on doing this

00:40:40,319 --> 00:40:44,960
and i probe up apparently this is

00:40:43,040 --> 00:40:47,119
actually a difficult task

00:40:44,960 --> 00:40:48,960
and this could take like 10 minutes for

00:40:47,119 --> 00:40:52,880
one of the servers to find it

00:40:48,960 --> 00:40:53,920
actually but this actually takes ten

00:40:52,880 --> 00:40:55,280
minutes because there are a lot of

00:40:53,920 --> 00:40:58,079
servers working

00:40:55,280 --> 00:40:59,280
trying to find their gnomes right so you

00:40:58,079 --> 00:41:00,880
get a lot of service trying to find

00:40:59,280 --> 00:41:02,400
their nose but almost someone will find

00:41:00,880 --> 00:41:04,240
it in ten minutes

00:41:02,400 --> 00:41:06,000
but if there was only one server to take

00:41:04,240 --> 00:41:09,599
it the rest of the world to do that

00:41:06,000 --> 00:41:12,640
right so basically um that

00:41:09,599 --> 00:41:14,000
is how like once you find the nurse then

00:41:12,640 --> 00:41:16,720
it means that

00:41:14,000 --> 00:41:18,319
you created this blog and then you can

00:41:16,720 --> 00:41:21,920
share this blog with other

00:41:18,319 --> 00:41:23,760
but other nodes and then what do we do

00:41:21,920 --> 00:41:27,680
add it to

00:41:23,760 --> 00:41:27,680
the blocks that they already have right

00:41:29,280 --> 00:41:33,040
and this continuous so after that blog

00:41:31,359 --> 00:41:35,359
is created and other

00:41:33,040 --> 00:41:37,359
then all the other notes will start

00:41:35,359 --> 00:41:39,599
working on a new blog

00:41:37,359 --> 00:41:41,760
and then someone will find the nose and

00:41:39,599 --> 00:41:44,560
they'll start working on a new blog

00:41:41,760 --> 00:41:46,160
and then it keeps on going right and so

00:41:44,560 --> 00:41:46,880
that's why this is called a blockchain

00:41:46,160 --> 00:41:49,280
right

00:41:46,880 --> 00:41:50,480
because when i get a new blog i add it

00:41:49,280 --> 00:41:52,240
to the old blog

00:41:50,480 --> 00:41:53,680
and then i get a new blog and i add it

00:41:52,240 --> 00:41:55,200
to the old blog

00:41:53,680 --> 00:41:57,760
the new blog and add it to the old

00:41:55,200 --> 00:42:00,000
blocks and they are added in such a way

00:41:57,760 --> 00:42:00,000
that

00:42:00,800 --> 00:42:07,359
if you kind of remove this block

00:42:05,040 --> 00:42:07,359
right

00:42:08,160 --> 00:42:11,280
then this block will become

00:42:11,520 --> 00:42:17,839
invalid so i mean we don't go deep into

00:42:15,599 --> 00:42:17,839
that

00:42:18,319 --> 00:42:22,720
so basically this is what is called the

00:42:19,760 --> 00:42:25,359
proof of work right looking for this

00:42:22,720 --> 00:42:27,520
uh hash started the number of leading

00:42:25,359 --> 00:42:30,720
zeros is

00:42:27,520 --> 00:42:33,839
a certain specified number and

00:42:30,720 --> 00:42:35,359
based on that number this if we when you

00:42:33,839 --> 00:42:38,720
increase the number of leading zeros

00:42:35,359 --> 00:42:42,319
the time it takes to find this number um

00:42:38,720 --> 00:42:45,200
also increases okay so

00:42:42,319 --> 00:42:46,560
yeah so that is how it's done in bitcoin

00:42:45,200 --> 00:42:51,440
and ethereum

00:42:46,560 --> 00:42:51,440
and this is what is called the proof

00:42:51,680 --> 00:42:57,839
of work right so power networks

00:42:55,760 --> 00:43:00,560
so in bitcoin ethereum the way blocks

00:42:57,839 --> 00:43:02,880
are created is you have to find

00:43:00,560 --> 00:43:04,400
this month such that when i hash the

00:43:02,880 --> 00:43:06,640
whole blog i'll get a certain

00:43:04,400 --> 00:43:08,560
leading number of zeros right and this

00:43:06,640 --> 00:43:10,480
is what is called the proof of work

00:43:08,560 --> 00:43:12,400
and it's nice but in terms of it doesn't

00:43:10,480 --> 00:43:17,040
use the approval work

00:43:12,400 --> 00:43:20,640
it uses something called the proof

00:43:17,040 --> 00:43:22,720
of stake

00:43:20,640 --> 00:43:24,839
right and i will go into this google

00:43:22,720 --> 00:43:28,720
stick later

00:43:24,839 --> 00:43:29,599
okay so i mean that's now we understand

00:43:28,720 --> 00:43:31,680
this

00:43:29,599 --> 00:43:33,040
and then the last thing is the protocol

00:43:31,680 --> 00:43:35,440
upgrade and governance so

00:43:33,040 --> 00:43:36,480
a blockchain is basically made up of a

00:43:35,440 --> 00:43:39,359
set of protocols

00:43:36,480 --> 00:43:40,560
right so like how do we determine that a

00:43:39,359 --> 00:43:42,640
transaction is valid

00:43:40,560 --> 00:43:44,079
right so for instance someone wants to

00:43:42,640 --> 00:43:45,280
send money from one address or another

00:43:44,079 --> 00:43:47,920
address i mean

00:43:45,280 --> 00:43:48,640
with the way we determine if we see if

00:43:47,920 --> 00:43:50,400
the

00:43:48,640 --> 00:43:52,240
the money where the addresses they are

00:43:50,400 --> 00:43:54,880
trying to send the money from

00:43:52,240 --> 00:43:55,839
has the balance necessary so for

00:43:54,880 --> 00:43:58,720
instance if

00:43:55,839 --> 00:43:59,200
this address was to send a certain

00:43:58,720 --> 00:44:02,960
amount

00:43:59,200 --> 00:44:03,839
x right what we do is we'll check the

00:44:02,960 --> 00:44:05,760
address a

00:44:03,839 --> 00:44:06,960
to see if we indeed can send that amount

00:44:05,760 --> 00:44:08,720
x so that's one way of

00:44:06,960 --> 00:44:10,480
making sure that emery transaction is

00:44:08,720 --> 00:44:13,839
valid another way is to

00:44:10,480 --> 00:44:16,560
um so that's one of the rules i mean

00:44:13,839 --> 00:44:17,119
it's a basic thing but another thing is

00:44:16,560 --> 00:44:19,839
that

00:44:17,119 --> 00:44:21,280
it takes foreign it takes 10 minutes

00:44:19,839 --> 00:44:21,920
it's supposed to take 10 minutes and

00:44:21,280 --> 00:44:23,440
this

00:44:21,920 --> 00:44:25,200
the system has been coded in that way

00:44:23,440 --> 00:44:27,839
that it's supposed to take 10 minutes

00:44:25,200 --> 00:44:29,280
for a new block to be treated right so

00:44:27,839 --> 00:44:32,800
if it doesn't take

00:44:29,280 --> 00:44:34,240
10 minutes uh or it takes less time

00:44:32,800 --> 00:44:35,680
then the system itself will adjust

00:44:34,240 --> 00:44:36,560
itself so that next time to take 10

00:44:35,680 --> 00:44:40,640
minutes

00:44:36,560 --> 00:44:43,440
and this is like uh

00:44:40,640 --> 00:44:45,200
the protocol right so it follows a

00:44:43,440 --> 00:44:46,960
certain set of protocols like

00:44:45,200 --> 00:44:51,040
what should happen in which case and

00:44:46,960 --> 00:44:52,880
whatever so if you remember the example

00:44:51,040 --> 00:44:53,920
i made with bitcoin cash and all of that

00:44:52,880 --> 00:44:56,560
that

00:44:53,920 --> 00:44:57,599
because bitcoin takes 10 minutes um some

00:44:56,560 --> 00:45:00,640
people said oh i

00:44:57,599 --> 00:45:04,319
want to speed it up you know and

00:45:00,640 --> 00:45:05,040
yeah so you also notice that ethereum

00:45:04,319 --> 00:45:08,400
takes

00:45:05,040 --> 00:45:12,560
like seven seconds to create

00:45:08,400 --> 00:45:15,359
sorry 17 seconds approximately

00:45:12,560 --> 00:45:16,800
to create a block right so it is that

00:45:15,359 --> 00:45:19,839
fast even though it's also using proof

00:45:16,800 --> 00:45:19,839
of work

00:45:20,800 --> 00:45:23,440
kind of uh

00:45:24,079 --> 00:45:30,640
block creation so

00:45:27,520 --> 00:45:31,760
so that that at some point we might want

00:45:30,640 --> 00:45:33,599
to change the rules

00:45:31,760 --> 00:45:34,800
for instance in bitcoin at some point

00:45:33,599 --> 00:45:36,800
people want to change that

00:45:34,800 --> 00:45:38,480
okay instead of taking 10 minutes to

00:45:36,800 --> 00:45:38,800
create a blog we want to take less than

00:45:38,480 --> 00:45:43,599
that

00:45:38,800 --> 00:45:46,480
to create a blog right and

00:45:43,599 --> 00:45:47,599
what happened was that um some people

00:45:46,480 --> 00:45:49,359
didn't understand this i would

00:45:47,599 --> 00:45:51,119
understood and what happened was that

00:45:49,359 --> 00:45:52,720
they split they need to exploit it and

00:45:51,119 --> 00:45:53,920
this is what is called the fork base

00:45:52,720 --> 00:45:57,119
mechanism

00:45:53,920 --> 00:45:58,400
fork as an air for rk right so if if you

00:45:57,119 --> 00:46:00,319
are familiar with open source project

00:45:58,400 --> 00:46:01,680
when someone folks up projects basically

00:46:00,319 --> 00:46:04,160
they make a copy of it

00:46:01,680 --> 00:46:06,160
and then they start writing their own

00:46:04,160 --> 00:46:09,280
adding their own stuff to it right

00:46:06,160 --> 00:46:11,280
so this is what happens in um in

00:46:09,280 --> 00:46:15,440
blockchains like bitcoin and ethereum

00:46:11,280 --> 00:46:18,640
right so when there's a misunderstanding

00:46:15,440 --> 00:46:21,920
right that the what happens is that

00:46:18,640 --> 00:46:24,319
people just play go their own ways right

00:46:21,920 --> 00:46:26,480
so in the case of bitcoin and bitcoin

00:46:24,319 --> 00:46:29,040
cash they both find their own ways

00:46:26,480 --> 00:46:30,880
bitcoin kept on being bitcoin bitcoin

00:46:29,040 --> 00:46:31,599
cash say hey you know we want faster

00:46:30,880 --> 00:46:33,839
transactions

00:46:31,599 --> 00:46:34,720
and so they made a updated bitcoin

00:46:33,839 --> 00:46:36,800
and then

00:46:34,720 --> 00:46:38,640
they reduced that the block creation

00:46:36,800 --> 00:46:39,119
time so that the transactions would be

00:46:38,640 --> 00:46:43,200
what

00:46:39,119 --> 00:46:46,800
we fast right and ethereum itself also

00:46:43,200 --> 00:46:50,079
um has very fast transactions right

00:46:46,800 --> 00:46:52,319
and it also does this so

00:46:50,079 --> 00:46:53,680
ethereum also kind of you could say it

00:46:52,319 --> 00:46:56,240
also came out of

00:46:53,680 --> 00:46:57,760
the frustrations like of i mean slow

00:46:56,240 --> 00:46:59,119
transactions in bitcoin

00:46:57,760 --> 00:47:01,119
and then we decided to solve this

00:46:59,119 --> 00:47:03,920
problem and also

00:47:01,119 --> 00:47:06,640
the fact that bitcoin didn't want to

00:47:03,920 --> 00:47:08,480
improve it on its smart contract uh

00:47:06,640 --> 00:47:11,040
platform so it's um said it and now we

00:47:08,480 --> 00:47:14,400
want to build our own stuff here

00:47:11,040 --> 00:47:14,400
right so

00:47:14,560 --> 00:47:19,920
but in texas okay so

00:47:17,920 --> 00:47:22,000
one of the one of the things you realize

00:47:19,920 --> 00:47:25,119
in texas is that devos has actually

00:47:22,000 --> 00:47:27,359
solved this problem in such a way that

00:47:25,119 --> 00:47:29,599
instead of the network being split or

00:47:27,359 --> 00:47:32,800
instead of people going their own ways

00:47:29,599 --> 00:47:33,040
we actually vote on ideas right and this

00:47:32,800 --> 00:47:35,520
is

00:47:33,040 --> 00:47:36,880
this is what is called unchained and we

00:47:35,520 --> 00:47:38,559
vote on ideas okay

00:47:36,880 --> 00:47:40,319
okay this would be one day we want this

00:47:38,559 --> 00:47:41,040
we want this we all come together we

00:47:40,319 --> 00:47:44,079
would

00:47:41,040 --> 00:47:45,359
and then the best ideas we

00:47:44,079 --> 00:47:47,119
and then those are the ideas are

00:47:45,359 --> 00:47:49,760
implemented into the network

00:47:47,119 --> 00:47:51,839
right so we in the end will not have

00:47:49,760 --> 00:47:54,160
someone going their way to going

00:47:51,839 --> 00:47:55,200
 because they're more the more they

00:47:54,160 --> 00:47:56,880
are people

00:47:55,200 --> 00:47:59,280
living the original thing to go and do

00:47:56,880 --> 00:48:01,520
their own thing the less like

00:47:59,280 --> 00:48:03,280
vulnerable this original thing becomes

00:48:01,520 --> 00:48:04,640
because then like

00:48:03,280 --> 00:48:07,280
the people would have been there and i

00:48:04,640 --> 00:48:10,480
have now left right so

00:48:07,280 --> 00:48:12,640
um yeah

00:48:10,480 --> 00:48:14,720
so that's that's for how blockchains

00:48:12,640 --> 00:48:18,160
work

00:48:14,720 --> 00:48:18,559
so just so bitcoin this is the very

00:48:18,160 --> 00:48:20,800
first

00:48:18,559 --> 00:48:22,079
cryptocurrency platform there's how to

00:48:20,800 --> 00:48:23,920
conception of which introduced

00:48:22,079 --> 00:48:26,640
blockchain technologies

00:48:23,920 --> 00:48:28,079
and bitcoin is as we've already seen is

00:48:26,640 --> 00:48:30,800
very

00:48:28,079 --> 00:48:32,559
highly uh has a very high financial

00:48:30,800 --> 00:48:36,559
value

00:48:32,559 --> 00:48:38,240
the block creating speed is low right

00:48:36,559 --> 00:48:40,400
and then the protocol upgrade and

00:48:38,240 --> 00:48:42,880
governance is poor i mean anything as

00:48:40,400 --> 00:48:44,079
 bait has that uses a full base

00:48:42,880 --> 00:48:45,839
mechanism

00:48:44,079 --> 00:48:47,359
it's poor because i mean it keeps on

00:48:45,839 --> 00:48:48,160
splitting the network people keep on

00:48:47,359 --> 00:48:52,319
leaving

00:48:48,160 --> 00:48:57,520
and yeah so it's not good for anything

00:48:52,319 --> 00:49:01,040
so but bitcoin itself is very vulnerable

00:48:57,520 --> 00:49:03,280
yeah but so that is just like a strength

00:49:01,040 --> 00:49:05,920
kind of thing so the next thing is a

00:49:03,280 --> 00:49:09,280
theorem that your muscle has yeah some

00:49:05,920 --> 00:49:11,200
kind of good financial value the block

00:49:09,280 --> 00:49:14,720
creation speed

00:49:11,200 --> 00:49:15,920
yeah is not as good but definitely

00:49:14,720 --> 00:49:18,640
faster than ah

00:49:15,920 --> 00:49:19,280
okay so this this this should have been

00:49:18,640 --> 00:49:22,480
this and

00:49:19,280 --> 00:49:24,559
this happens anyway so anyway

00:49:22,480 --> 00:49:26,240
it's definitely faster than bitcoin

00:49:24,559 --> 00:49:28,240
don't get me wrong but the upgrade

00:49:26,240 --> 00:49:30,000
mechanism is the same thing as bitcoin

00:49:28,240 --> 00:49:33,359
uses right so it's not that good

00:49:30,000 --> 00:49:35,119
also but it's faster than bitcoin it

00:49:33,359 --> 00:49:38,720
takes about 17 seconds

00:49:35,119 --> 00:49:45,839
to create a block you can imagine that

00:49:38,720 --> 00:49:48,079
that is really really fast right yeah

00:49:45,839 --> 00:49:49,680
and because i'm a jesus guy of course

00:49:48,079 --> 00:49:53,280
anything i say here

00:49:49,680 --> 00:49:55,520
i'll say in favor of jesus so

00:49:53,280 --> 00:49:55,520
uh

00:49:56,800 --> 00:49:59,839
um yeah

00:50:00,559 --> 00:50:05,760
anyway in the last theaters it takes a

00:50:03,839 --> 00:50:08,079
lot of lessons from your predecessors

00:50:05,760 --> 00:50:09,280
so there it's protocol and upgrade

00:50:08,079 --> 00:50:10,079
protocol upgrade and governance

00:50:09,280 --> 00:50:13,119
mechanism

00:50:10,079 --> 00:50:13,920
is really good it block resistance speed

00:50:13,119 --> 00:50:17,040
is fast

00:50:13,920 --> 00:50:19,119
right it's faster than ethereum so

00:50:17,040 --> 00:50:20,800
but you should know that the serum is

00:50:19,119 --> 00:50:23,839
also very fast

00:50:20,800 --> 00:50:26,240
all right but i mean the transaction

00:50:23,839 --> 00:50:29,760
speed is faster than ethereum

00:50:26,240 --> 00:50:31,760
it will be so teasers has about 42

00:50:29,760 --> 00:50:41,839
fuji transactions per second material

00:50:31,760 --> 00:50:41,839
will have i'm not saying

00:50:42,960 --> 00:50:52,160
yeah so

00:50:47,119 --> 00:50:55,119
so yeah our next stop

00:50:52,160 --> 00:50:57,040
finally we are here to the main talk of

00:50:55,119 --> 00:50:58,240
the day to the main topic of the data as

00:50:57,040 --> 00:51:01,920
a smart contract

00:50:58,240 --> 00:51:01,920
right so

00:51:02,319 --> 00:51:05,599
um

00:51:02,660 --> 00:51:07,280
[Music]

00:51:05,599 --> 00:51:09,839
yeah let's get started with smart

00:51:07,280 --> 00:51:09,839
contracts

00:51:12,720 --> 00:51:19,200
all right so next up

00:51:16,400 --> 00:51:23,839
we'll talk about the smart pi sorry

00:51:19,200 --> 00:51:23,839
we'll talk about

00:51:24,240 --> 00:51:28,400
what is a smart contract right so we are

00:51:27,119 --> 00:51:30,319
done explaining

00:51:28,400 --> 00:51:31,680
the basics of blockchain and all of that

00:51:30,319 --> 00:51:34,400
and we've gone into

00:51:31,680 --> 00:51:35,599
results in that so let's talk about

00:51:34,400 --> 00:51:37,280
smart contract

00:51:35,599 --> 00:51:39,520
because that's what we are here to talk

00:51:37,280 --> 00:51:43,119
about right

00:51:39,520 --> 00:51:44,640
so a smart contract is a piece of code

00:51:43,119 --> 00:51:48,079
that is deployed onto a blockchain

00:51:44,640 --> 00:51:49,760
platform it is usually made up of code

00:51:48,079 --> 00:51:53,599
and a data structure that can be

00:51:49,760 --> 00:51:53,599
manually manipulated by the code

00:51:54,000 --> 00:52:00,240
since it is deployed to the blockchain

00:51:57,119 --> 00:52:03,440
it is publicly transparent and immutable

00:52:00,240 --> 00:52:04,880
so let me just explain what i read it's

00:52:03,440 --> 00:52:08,240
a piece of code i mean

00:52:04,880 --> 00:52:10,480
yeah like a piece of code right

00:52:08,240 --> 00:52:12,400
that is deployed onto the blockchain

00:52:10,480 --> 00:52:13,599
platform and that is why it is called a

00:52:12,400 --> 00:52:15,440
smart contract

00:52:13,599 --> 00:52:16,880
so when you have code that is deployed

00:52:15,440 --> 00:52:20,400
onto a blockchain platform

00:52:16,880 --> 00:52:21,760
you call it smart contract i mean that's

00:52:20,400 --> 00:52:24,240
that's the best explanation i've heard

00:52:21,760 --> 00:52:24,240
it's over

00:52:25,440 --> 00:52:30,000
and of course it's made up of code and

00:52:27,760 --> 00:52:30,000
then

00:52:31,280 --> 00:52:34,800
some sort of data structure that is

00:52:32,800 --> 00:52:35,680
attached to this code think of it as

00:52:34,800 --> 00:52:37,839
like

00:52:35,680 --> 00:52:39,440
the storage for the code and then you

00:52:37,839 --> 00:52:41,359
can store certain stuff there

00:52:39,440 --> 00:52:42,640
so let me just try to illustrate

00:52:41,359 --> 00:52:46,720
something

00:52:42,640 --> 00:52:46,720
so let's see this is a smart contract

00:52:47,680 --> 00:52:53,200
this whole thing is a smart contract oh

00:52:51,040 --> 00:52:53,200
no

00:52:56,000 --> 00:53:02,720
so this whole thing is a smart contract

00:53:00,240 --> 00:53:04,960
all right and then you can divide it

00:53:02,720 --> 00:53:09,440
into two and say

00:53:04,960 --> 00:53:09,440
well we have the code

00:53:10,559 --> 00:53:19,119
somewhere here

00:53:14,480 --> 00:53:21,359
and then we have the storage the storage

00:53:19,119 --> 00:53:21,359
right

00:53:22,480 --> 00:53:30,079
so this is where we store data installed

00:53:26,240 --> 00:53:33,920
right in the smart contract

00:53:30,079 --> 00:53:37,119
okay so keep that in mind

00:53:33,920 --> 00:53:37,119
and then this smart contract

00:53:38,480 --> 00:53:41,520
finds a software

00:53:41,760 --> 00:53:45,839
on the blockchain right so this one

00:53:43,599 --> 00:53:48,319
contract this is code

00:53:45,839 --> 00:53:49,520
and storage and is placed on a

00:53:48,319 --> 00:53:54,319
blockchain

00:53:49,520 --> 00:53:57,040
all right so bitcoin has smart contracts

00:53:54,319 --> 00:53:59,359
ethereum has smart contract and of

00:53:57,040 --> 00:54:01,280
course texas also has smart contracts

00:53:59,359 --> 00:54:03,280
and so we are going to look today at

00:54:01,280 --> 00:54:05,280
writing smart contract in texas using

00:54:03,280 --> 00:54:07,680
a specific python library called the

00:54:05,280 --> 00:54:10,880
smart pi library

00:54:07,680 --> 00:54:12,160
right so another

00:54:10,880 --> 00:54:14,000
thing that is deployed onto the

00:54:12,160 --> 00:54:15,520
blockchain and you know we know that

00:54:14,000 --> 00:54:17,680
blockchain

00:54:15,520 --> 00:54:19,359
is kind of a public thing it's a public

00:54:17,680 --> 00:54:22,800
data

00:54:19,359 --> 00:54:24,319
it's a public database right so anyone

00:54:22,800 --> 00:54:25,040
can go and view what is on the

00:54:24,319 --> 00:54:27,200
blockchain

00:54:25,040 --> 00:54:28,400
so when you deploy code onto or when you

00:54:27,200 --> 00:54:29,280
deploy a smart contract into the

00:54:28,400 --> 00:54:31,839
blockchain

00:54:29,280 --> 00:54:33,920
anyone can go into the blockchain and

00:54:31,839 --> 00:54:38,000
read the code of the smart contract

00:54:33,920 --> 00:54:41,839
and also see the data associated with it

00:54:38,000 --> 00:54:45,920
so for instance let me just go to um

00:54:41,839 --> 00:54:45,920
this uh place this

00:54:47,920 --> 00:54:52,240
so something i haven't mentioned yet is

00:54:50,640 --> 00:54:57,119
what is called

00:54:52,240 --> 00:54:59,440
um block explorers

00:54:57,119 --> 00:55:01,280
so it was a blog explorer right so as i

00:54:59,440 --> 00:55:03,440
mentioned that

00:55:01,280 --> 00:55:05,359
a blockchain is essentially a public

00:55:03,440 --> 00:55:07,119
database anyone can create this database

00:55:05,359 --> 00:55:07,760
and and have access to all the data on

00:55:07,119 --> 00:55:08,960
the blockchain

00:55:07,760 --> 00:55:10,720
just that you can't change it but you

00:55:08,960 --> 00:55:12,319
can query and you can't change it

00:55:10,720 --> 00:55:14,480
without the right or the uh

00:55:12,319 --> 00:55:15,760
authorization or something but you can

00:55:14,480 --> 00:55:19,359
definitely query it

00:55:15,760 --> 00:55:24,240
right so a blog is probably

00:55:19,359 --> 00:55:25,839
just like um basically a website

00:55:24,240 --> 00:55:27,359
that's someone that's written current

00:55:25,839 --> 00:55:28,880
blockchain right so

00:55:27,359 --> 00:55:30,480
in fact if you are paranoid enough

00:55:28,880 --> 00:55:30,880
anything that you don't believe under

00:55:30,480 --> 00:55:32,240
what that

00:55:30,880 --> 00:55:34,960
will have done you can go and write your

00:55:32,240 --> 00:55:36,720
own code to explore the blockchain

00:55:34,960 --> 00:55:39,440
pull down the data and then display it

00:55:36,720 --> 00:55:42,640
right so for these us

00:55:39,440 --> 00:55:43,599
there's this very um interesting blog

00:55:42,640 --> 00:55:46,480
explorer

00:55:43,599 --> 00:55:46,720
that we're going to look at right now

00:55:46,480 --> 00:55:48,400
and

00:55:46,720 --> 00:55:50,880
specifically for smart contract and all

00:55:48,400 --> 00:55:50,880
of that so

00:55:56,720 --> 00:55:58,960
so

00:56:00,839 --> 00:56:05,359
yeah so it's called better call dave

00:56:05,680 --> 00:56:09,680
so better call dev i'll just change this

00:56:08,000 --> 00:56:11,119
to here

00:56:09,680 --> 00:56:12,960
it's a it's just tells us black as

00:56:11,119 --> 00:56:14,559
proverb so let's pick a random smart

00:56:12,960 --> 00:56:17,760
contract

00:56:14,559 --> 00:56:20,000
we pick a random smart contract and what

00:56:17,760 --> 00:56:21,839
can we see

00:56:20,000 --> 00:56:23,839
you can see here we have the storage

00:56:21,839 --> 00:56:25,119
right so here you'll be able to see like

00:56:23,839 --> 00:56:26,240
what has been stored in the smart

00:56:25,119 --> 00:56:29,119
contract so far

00:56:26,240 --> 00:56:31,839
and then we have the code right and this

00:56:29,119 --> 00:56:34,880
code

00:56:31,839 --> 00:56:36,559
is is written in what what we called

00:56:34,880 --> 00:56:38,480
my cursing because on the test

00:56:36,559 --> 00:56:40,079
blockchain

00:56:38,480 --> 00:56:41,760
the main code that runs on the desktop

00:56:40,079 --> 00:56:43,280
blockchain is my cousin right

00:56:41,760 --> 00:56:45,839
so what you're about to learn that's

00:56:43,280 --> 00:56:47,359
might buy once you write smartphone it

00:56:45,839 --> 00:56:50,880
compiles into microsoft

00:56:47,359 --> 00:56:52,240
right so the advantage of this is that

00:56:50,880 --> 00:56:53,920
it doesn't compare into some sort of

00:56:52,240 --> 00:56:54,799
bytes called zeros i want that humans

00:56:53,920 --> 00:56:57,599
can read

00:56:54,799 --> 00:56:58,079
so the tables developers they chose like

00:56:57,599 --> 00:57:00,880
this

00:56:58,079 --> 00:57:01,680
makers and because this is readable by

00:57:00,880 --> 00:57:03,440
humans

00:57:01,680 --> 00:57:04,799
i mean if you understand that because

00:57:03,440 --> 00:57:06,880
some kind of stuff you can actually

00:57:04,799 --> 00:57:09,680
write code directly in my cursing

00:57:06,880 --> 00:57:10,000
um the point is that looking at this is

00:57:09,680 --> 00:57:13,920
not

00:57:10,000 --> 00:57:16,160
that convenient you agree with me right

00:57:13,920 --> 00:57:17,839
and so if you look here you can see it

00:57:16,160 --> 00:57:18,880
defines something that parameters also

00:57:17,839 --> 00:57:20,319
defines the storage

00:57:18,880 --> 00:57:22,559
and then it comes to define what the

00:57:20,319 --> 00:57:23,440
code and because it's a stack based

00:57:22,559 --> 00:57:25,680
language and

00:57:23,440 --> 00:57:27,599
all of that i mean i mean the first time

00:57:25,680 --> 00:57:29,760
i heard about it i was like nah

00:57:27,599 --> 00:57:30,799
and i had all right you can write it in

00:57:29,760 --> 00:57:32,640
you can write in

00:57:30,799 --> 00:57:34,720
a python and then it will compile and

00:57:32,640 --> 00:57:37,359
all right there's no need to know what

00:57:34,720 --> 00:57:38,240
mikkelsen is right so basically when you

00:57:37,359 --> 00:57:41,280
write your code

00:57:38,240 --> 00:57:43,839
conveniently in python you get a method

00:57:41,280 --> 00:57:43,839
in um

00:57:44,960 --> 00:57:51,359
code right so

00:57:48,160 --> 00:57:54,319
smartphone will compile that nice python

00:57:51,359 --> 00:57:56,240
to some interesting recursion code that

00:57:54,319 --> 00:57:57,760
you can use for your staff right

00:57:56,240 --> 00:58:00,079
and maybe probably right here you can

00:57:57,760 --> 00:58:03,440
interact with there

00:58:00,079 --> 00:58:05,760
whatever's going on here that and

00:58:03,440 --> 00:58:07,280
i mean it's interesting looking at what

00:58:05,760 --> 00:58:12,160
is here

00:58:07,280 --> 00:58:12,160
ah anyway

00:58:14,970 --> 00:58:18,960
[Music]

00:58:16,400 --> 00:58:19,440
oh wow right right right okay let's

00:58:18,960 --> 00:58:23,839
let's

00:58:19,440 --> 00:58:23,839
let's go

00:58:27,359 --> 00:58:31,040
and they are just looking on the data

00:58:29,520 --> 00:58:33,520
like on this market

00:58:31,040 --> 00:58:34,880
they're just looking on the um the

00:58:33,520 --> 00:58:36,160
blockchain and they are querying the

00:58:34,880 --> 00:58:37,040
data on the blockchain and they are kind

00:58:36,160 --> 00:58:38,400
of like

00:58:37,040 --> 00:58:40,079
displaying it on the internet so

00:58:38,400 --> 00:58:41,520
everyone can see and if you don't

00:58:40,079 --> 00:58:44,079
if you don't believe them you can go

00:58:41,520 --> 00:58:46,240
yourself um

00:58:44,079 --> 00:58:47,440
and then go and look at the teasers um

00:58:46,240 --> 00:58:50,400
or like

00:58:47,440 --> 00:58:51,839
this particular api for that blockchain

00:58:50,400 --> 00:58:53,440
and then you can also write your own

00:58:51,839 --> 00:58:54,480
stuff to look at your own things but i

00:58:53,440 --> 00:58:57,839
mean

00:58:54,480 --> 00:58:59,760
how would you do that so

00:58:57,839 --> 00:59:01,599
that's what a smart contract is just a

00:58:59,760 --> 00:59:03,920
code right

00:59:01,599 --> 00:59:06,079
there's a code and the storage nothing

00:59:03,920 --> 00:59:08,960
more nothing less

00:59:06,079 --> 00:59:10,480
compared to like what um like a server

00:59:08,960 --> 00:59:11,760
what you the code you write and put on

00:59:10,480 --> 00:59:13,440
your server right

00:59:11,760 --> 00:59:15,040
so you write some code and you put it to

00:59:13,440 --> 00:59:18,319
your server and this

00:59:15,040 --> 00:59:19,760
this code um it runs on your server and

00:59:18,319 --> 00:59:20,720
it has access to some database like

00:59:19,760 --> 00:59:22,720
mysql code

00:59:20,720 --> 00:59:24,319
or something it's the same thing right

00:59:22,720 --> 00:59:26,559
same kind of concept

00:59:24,319 --> 00:59:27,359
in just that in this case this code is

00:59:26,559 --> 00:59:30,640
on

00:59:27,359 --> 00:59:32,640
the blockchain and it has access to its

00:59:30,640 --> 00:59:33,680
own data structure that you have to

00:59:32,640 --> 00:59:37,520
define yourself

00:59:33,680 --> 00:59:39,920
right so

00:59:37,520 --> 00:59:41,200
so so then in that case well what are

00:59:39,920 --> 00:59:42,480
the interesting properties of smart

00:59:41,200 --> 00:59:45,280
contract why would you write

00:59:42,480 --> 00:59:45,839
something how would you write a smart

00:59:45,280 --> 00:59:49,119
contract

00:59:45,839 --> 00:59:50,880
instead of maybe normal code like

00:59:49,119 --> 00:59:52,319
inputs on your server and let it run i

00:59:50,880 --> 00:59:54,240
mean and then

00:59:52,319 --> 00:59:55,440
the point is that it has certain

00:59:54,240 --> 00:59:57,680
properties that

00:59:55,440 --> 00:59:59,440
i like to point at some of them and this

00:59:57,680 --> 01:00:03,119
properties makes it possible

00:59:59,440 --> 01:00:05,119
it makes it like really interesting or

01:00:03,119 --> 01:00:07,119
it makes its application very very very

01:00:05,119 --> 01:00:08,800
like possible right

01:00:07,119 --> 01:00:10,160
so um

01:00:08,800 --> 01:00:11,680
[Music]

01:00:10,160 --> 01:00:13,200
versus smart contracts are publicly

01:00:11,680 --> 01:00:14,799
transparent since they are deployed to

01:00:13,200 --> 01:00:16,160
the blockchain anyone that stuck to the

01:00:14,799 --> 01:00:17,440
blockchain can see the code and data

01:00:16,160 --> 01:00:20,079
associated with it

01:00:17,440 --> 01:00:21,920
right so let's go back to an example of

01:00:20,079 --> 01:00:22,799
blocked an example using a blockchain

01:00:21,920 --> 01:00:24,880
where people

01:00:22,799 --> 01:00:26,720
are pushing this kind of voting voting

01:00:24,880 --> 01:00:30,799
plan right so we want to

01:00:26,720 --> 01:00:33,920
have a some kind of software that

01:00:30,799 --> 01:00:37,760
facilitates voting right or elections

01:00:33,920 --> 01:00:38,480
right and before blockchain and all of

01:00:37,760 --> 01:00:40,559
that

01:00:38,480 --> 01:00:42,799
anything you that software would run on

01:00:40,559 --> 01:00:43,839
a certain server and not everyone access

01:00:42,799 --> 01:00:46,000
to that server

01:00:43,839 --> 01:00:47,839
so not everyone can see the code on that

01:00:46,000 --> 01:00:48,319
server or the code that's currently

01:00:47,839 --> 01:00:51,680
running

01:00:48,319 --> 01:00:53,359
right but with blockchain as i showed

01:00:51,680 --> 01:00:56,559
you here

01:00:53,359 --> 01:00:58,880
right i can use this block explorer to

01:00:56,559 --> 01:01:02,559
see the code that is running

01:00:58,880 --> 01:01:04,319
right and this is the code and actually

01:01:02,559 --> 01:01:06,480
if i can't understand this i can hire

01:01:04,319 --> 01:01:09,520
someone to read it and say oh okay

01:01:06,480 --> 01:01:12,559
so imagine like um maybe a party

01:01:09,520 --> 01:01:14,000
um you know when having these elections

01:01:12,559 --> 01:01:16,319
you have different different different

01:01:14,000 --> 01:01:17,680
parties you know uh

01:01:16,319 --> 01:01:19,760
trying to win the election and all of

01:01:17,680 --> 01:01:20,799
that and you know everybody's kind of

01:01:19,760 --> 01:01:22,799
aggressive here

01:01:20,799 --> 01:01:24,640
so they can hire their own expert who

01:01:22,799 --> 01:01:26,640
can read and understand what

01:01:24,640 --> 01:01:28,079
what code is here and they can verify

01:01:26,640 --> 01:01:28,720
that indeed the code is doing what it's

01:01:28,079 --> 01:01:31,200
doing

01:01:28,720 --> 01:01:32,160
right and this is more secure this is

01:01:31,200 --> 01:01:34,799
more makes you

01:01:32,160 --> 01:01:36,240
feel more safer and everybody uh feels

01:01:34,799 --> 01:01:39,680
more like

01:01:36,240 --> 01:01:41,040
a fair because they know like what code

01:01:39,680 --> 01:01:43,280
is running you know

01:01:41,040 --> 01:01:45,040
you know that so it's public and that's

01:01:43,280 --> 01:01:48,799
that alone

01:01:45,040 --> 01:01:50,799
is an advantage that traditional server

01:01:48,799 --> 01:01:52,160
you know servers don't have because you

01:01:50,799 --> 01:01:53,920
need to access the server

01:01:52,160 --> 01:01:55,280
before you can view the source code

01:01:53,920 --> 01:01:57,039
right so

01:01:55,280 --> 01:01:58,480
you don't you can't see your php code or

01:01:57,039 --> 01:02:00,960
your python jungle code

01:01:58,480 --> 01:02:02,559
from the browser you have to get access

01:02:00,960 --> 01:02:03,920
to server and not everyone is willing to

01:02:02,559 --> 01:02:09,440
do that

01:02:03,920 --> 01:02:11,680
um yeah smart contracts are immutable

01:02:09,440 --> 01:02:13,440
right so once they are deployed to the

01:02:11,680 --> 01:02:16,640
blockchain they cannot be outed

01:02:13,440 --> 01:02:17,920
so this kind of code here is is what is

01:02:16,640 --> 01:02:20,880
going to be there forever

01:02:17,920 --> 01:02:22,400
you know nothing can be changed if if we

01:02:20,880 --> 01:02:25,599
want to change the rules here

01:02:22,400 --> 01:02:28,559
and we have to update our smart contract

01:02:25,599 --> 01:02:29,359
code and then create a new address right

01:02:28,559 --> 01:02:30,799
so

01:02:29,359 --> 01:02:32,720
we upgraded it we update that one

01:02:30,799 --> 01:02:36,160
contract and deploy a new contract

01:02:32,720 --> 01:02:38,400
and this control to be in a different um

01:02:36,160 --> 01:02:40,240
kind of will have a different address

01:02:38,400 --> 01:02:41,440
right because

01:02:40,240 --> 01:02:42,880
one thing you should notice that on the

01:02:41,440 --> 01:02:43,280
blockchain everything has an address

01:02:42,880 --> 01:02:44,960
right

01:02:43,280 --> 01:02:46,240
so for instance for this particular

01:02:44,960 --> 01:02:47,520
contract this is the address of this

01:02:46,240 --> 01:02:51,200
particular contract

01:02:47,520 --> 01:02:53,700
although it's not really stated yet so

01:02:51,200 --> 01:02:56,770
the point is that

01:02:53,700 --> 01:02:56,770
[Music]

01:02:57,359 --> 01:03:00,720
this code for this contract and whatever

01:02:59,920 --> 01:03:05,839
is here

01:03:00,720 --> 01:03:10,559
does not change is there foreign

01:03:05,839 --> 01:03:13,039
right doesn't change doesn't

01:03:10,559 --> 01:03:13,039
and also

01:03:14,000 --> 01:03:17,440
one interesting thing is that it offers

01:03:16,079 --> 01:03:19,440
free data replication

01:03:17,440 --> 01:03:21,280
right because of the way the blockchain

01:03:19,440 --> 01:03:23,520
works and since the smartphone branches

01:03:21,280 --> 01:03:24,799
on the blockchain and the data as well

01:03:23,520 --> 01:03:26,559
with the smart code process stock on the

01:03:24,799 --> 01:03:28,720
blockchain i mean

01:03:26,559 --> 01:03:30,000
all the nodes on the blockchain have

01:03:28,720 --> 01:03:32,400
that smart contract

01:03:30,000 --> 01:03:34,160
and also the data associated with it now

01:03:32,400 --> 01:03:35,920
what happens

01:03:34,160 --> 01:03:38,240
it means that in their thousand notes on

01:03:35,920 --> 01:03:39,119
the blockchain your data is stored on

01:03:38,240 --> 01:03:41,280
thousand different

01:03:39,119 --> 01:03:43,039
nodes so can you imagine that this is

01:03:41,280 --> 01:03:44,720
not you know

01:03:43,039 --> 01:03:46,240
for normal cloud services and all of

01:03:44,720 --> 01:03:48,319
that maybe they can store you or get

01:03:46,240 --> 01:03:50,160
down to what three servers or

01:03:48,319 --> 01:03:52,000
some backup servers and all of that but

01:03:50,160 --> 01:03:53,359
you have thousand servers for free you

01:03:52,000 --> 01:03:55,520
know how to do anything

01:03:53,359 --> 01:03:56,799
right not necessarily for free but you

01:03:55,520 --> 01:03:58,640
know they are called some courses which

01:03:56,799 --> 01:04:01,760
is but still

01:03:58,640 --> 01:04:03,119
the replication is it's crazy right so

01:04:01,760 --> 01:04:03,839
you can store something there and it

01:04:03,119 --> 01:04:06,640
will be there

01:04:03,839 --> 01:04:07,119
forever and ever right so these are the

01:04:06,640 --> 01:04:08,400
proper

01:04:07,119 --> 01:04:10,640
interesting properties of countries

01:04:08,400 --> 01:04:12,480
might contract to that

01:04:10,640 --> 01:04:13,599
um if you think about it yeah it's not

01:04:12,480 --> 01:04:16,480
it's not surprising that people are

01:04:13,599 --> 01:04:18,240
making a lot of noise about it because

01:04:16,480 --> 01:04:20,160
this is this has not been possible until

01:04:18,240 --> 01:04:22,400
now right

01:04:20,160 --> 01:04:24,000
so now let's just dive into what is

01:04:22,400 --> 01:04:25,119
smart buy so smartphone is a python

01:04:24,000 --> 01:04:27,680
library for writing

01:04:25,119 --> 01:04:28,960
smart contracts that can be deployed on

01:04:27,680 --> 01:04:31,680
the teaser's blockchain

01:04:28,960 --> 01:04:33,440
platform the original smart contracts

01:04:31,680 --> 01:04:36,799
language for teasers is microsoft

01:04:33,440 --> 01:04:41,200
as i explained right for this example

01:04:36,799 --> 01:04:44,319
here so let me just pick another one

01:04:41,200 --> 01:04:48,079
so this is me person all right

01:04:44,319 --> 01:04:51,119
sorry this is mickelson

01:04:48,079 --> 01:04:55,039
okay so i just

01:04:51,119 --> 01:04:57,359
click here to see another um kind of

01:04:55,039 --> 01:04:59,039
quick random smart contract and this is

01:04:57,359 --> 01:05:00,079
the address of that particular smart

01:04:59,039 --> 01:05:01,599
contract

01:05:00,079 --> 01:05:04,880
and this is the code associated with

01:05:01,599 --> 01:05:04,880
this smart contract all right

01:05:05,200 --> 01:05:09,200
this code here is mickelson and as i've

01:05:08,079 --> 01:05:12,559
already said

01:05:09,200 --> 01:05:13,920
we don't write mikasa directly i mean

01:05:12,559 --> 01:05:16,640
of course you can write it directly in

01:05:13,920 --> 01:05:20,400
the app if it's a language i mean

01:05:16,640 --> 01:05:20,400
it can written directly but really

01:05:21,280 --> 01:05:25,520
you know so if you have if you know

01:05:24,400 --> 01:05:26,960
python then you don't have to worry

01:05:25,520 --> 01:05:28,000
about because you can't just write in

01:05:26,960 --> 01:05:30,400
smartphone

01:05:28,000 --> 01:05:32,000
and then to compile to microsoft so

01:05:30,400 --> 01:05:33,680
smart buy allows you to write your code

01:05:32,000 --> 01:05:38,400
in python and then compare

01:05:33,680 --> 01:05:38,400
your python code to a sim all right

01:05:38,559 --> 01:05:45,520
so that does it so then

01:05:42,000 --> 01:05:49,280
uh let me let's let's

01:05:45,520 --> 01:05:50,720
write before we are just going to

01:05:49,280 --> 01:05:52,960
the goal is that i'm just going to do

01:05:50,720 --> 01:05:53,440
some interesting example with you which

01:05:52,960 --> 01:05:55,440
is

01:05:53,440 --> 01:05:56,640
a simple land registry smart contract

01:05:55,440 --> 01:06:00,400
example right

01:05:56,640 --> 01:06:01,599
so if you've had one of the um

01:06:00,400 --> 01:06:04,240
interesting applications of smart

01:06:01,599 --> 01:06:05,520
contracts it's land registry right

01:06:04,240 --> 01:06:06,880
so we are going to learn how to create a

01:06:05,520 --> 01:06:07,599
smart compressor digital problem with

01:06:06,880 --> 01:06:10,000
spotlight

01:06:07,599 --> 01:06:12,160
to build a simple decentralized land

01:06:10,000 --> 01:06:13,839
registry application

01:06:12,160 --> 01:06:16,319
it should be able to assign it to

01:06:13,839 --> 01:06:19,280
graphical rectangles to real-world users

01:06:16,319 --> 01:06:20,240
so in this in this use case we are

01:06:19,280 --> 01:06:22,559
saying oh

01:06:20,240 --> 01:06:23,680
man we just want to build a smart

01:06:22,559 --> 01:06:27,119
contract

01:06:23,680 --> 01:06:27,119
and say that look

01:06:29,119 --> 01:06:35,280
tell me like the four points

01:06:32,319 --> 01:06:36,319
of your land and i'll store these four

01:06:35,280 --> 01:06:40,720
points

01:06:36,319 --> 01:06:40,720
right on the smart contract

01:06:43,119 --> 01:06:46,799
and then i will assign it to your

01:06:46,240 --> 01:06:49,119
address

01:06:46,799 --> 01:06:50,960
right so that means it belongs to you by

01:06:49,119 --> 01:06:52,559
address i mean your address on the

01:06:50,960 --> 01:06:53,599
on the blockchain right because i

01:06:52,559 --> 01:06:54,720
mentioned that on the blockchain

01:06:53,599 --> 01:06:57,960
everyone has

01:06:54,720 --> 01:06:59,520
threatens that is there uh

01:06:57,960 --> 01:07:03,280
[Music]

01:06:59,520 --> 01:07:07,280
yeah yeah public

01:07:03,280 --> 01:07:11,440
key they are private

01:07:07,280 --> 01:07:11,440
key and then

01:07:11,839 --> 01:07:19,280
yeah paul public

01:07:15,680 --> 01:07:20,319
key hash right so basically when we when

01:07:19,280 --> 01:07:21,440
you hear someone saying that your

01:07:20,319 --> 01:07:23,039
address your

01:07:21,440 --> 01:07:24,559
your your blockchain address you're

01:07:23,039 --> 01:07:28,079
talking about the public key hash

01:07:24,559 --> 01:07:28,720
right yeah so we'll get we get to see

01:07:28,079 --> 01:07:31,599
all of this

01:07:28,720 --> 01:07:32,799
right runs here we start with a smart

01:07:31,599 --> 01:07:36,960
pile

01:07:32,799 --> 01:07:40,240
so we just want to say hey

01:07:36,960 --> 01:07:42,319
give me four points on it

01:07:40,240 --> 01:07:44,880
prove that is yours right so because the

01:07:42,319 --> 01:07:46,640
way land ready to work it

01:07:44,880 --> 01:07:48,400
for now i just run it right in a simple

01:07:46,640 --> 01:07:49,839
application where those who have already

01:07:48,400 --> 01:07:52,240
registered their land

01:07:49,839 --> 01:07:54,000
can register their land and then now

01:07:52,240 --> 01:07:54,880
submit their land to our smart contract

01:07:54,000 --> 01:07:57,039
you understand

01:07:54,880 --> 01:07:58,799
so this is how it will happen you are

01:07:57,039 --> 01:08:01,520
going to have

01:07:58,799 --> 01:08:01,520
people called

01:08:02,240 --> 01:08:05,680
and you um should be able to assign the

01:08:03,920 --> 01:08:07,119
virtual rectangles to the word users

01:08:05,680 --> 01:08:09,119
all this info is start publicly on their

01:08:07,119 --> 01:08:10,000
smart contract users should be able to

01:08:09,119 --> 01:08:12,319
transfer part of their

01:08:10,000 --> 01:08:13,200
land to other users right so now once

01:08:12,319 --> 01:08:15,440
you're able to

01:08:13,200 --> 01:08:16,480
um we accept we you prove to other the

01:08:15,440 --> 01:08:18,960
land belongs to you

01:08:16,480 --> 01:08:19,679
right by showing another certificate and

01:08:18,960 --> 01:08:22,400
all of that

01:08:19,679 --> 01:08:23,600
it show as a land certificate and

01:08:22,400 --> 01:08:26,159
everything

01:08:23,600 --> 01:08:28,560
then we will store it on our smart

01:08:26,159 --> 01:08:32,799
contract for you

01:08:28,560 --> 01:08:36,000
right and assign it to your what

01:08:32,799 --> 01:08:38,880
address right

01:08:36,000 --> 01:08:40,080
your address once you assign this to

01:08:38,880 --> 01:08:43,759
your address

01:08:40,080 --> 01:08:45,279
that means since it's your address

01:08:43,759 --> 01:08:46,960
you are the only one who have access to

01:08:45,279 --> 01:08:50,159
the private key and so only you

01:08:46,960 --> 01:08:52,319
can decide can can can

01:08:50,159 --> 01:08:53,359
sell you can can have access to that

01:08:52,319 --> 01:08:57,040
right so

01:08:53,359 --> 01:08:58,719
we will get into that soon so

01:08:57,040 --> 01:09:00,719
you proved well that oh the line belongs

01:08:58,719 --> 01:09:02,319
to me by showing us your already

01:09:00,719 --> 01:09:03,920
registered land that you've received a

01:09:02,319 --> 01:09:05,759
land registry so we are not focusing on

01:09:03,920 --> 01:09:06,880
any country or something

01:09:05,759 --> 01:09:09,279
it doesn't matter which part of the

01:09:06,880 --> 01:09:10,159
world you are in right it just show us

01:09:09,279 --> 01:09:13,359
proof that

01:09:10,159 --> 01:09:15,520
this land is yours we prove it and then

01:09:13,359 --> 01:09:17,199
we dig it as a land on the contract for

01:09:15,520 --> 01:09:20,799
you

01:09:17,199 --> 01:09:23,040
once that is done you can sell parts

01:09:20,799 --> 01:09:23,839
of the land right you just will transfer

01:09:23,040 --> 01:09:26,319
part of your land

01:09:23,839 --> 01:09:27,440
to other uses so let's go deep into what

01:09:26,319 --> 01:09:30,480
you're saying

01:09:27,440 --> 01:09:35,120
so we are going to on this on this

01:09:30,480 --> 01:09:36,640
um application you are going to have

01:09:35,120 --> 01:09:38,799
as especially that's called the

01:09:36,640 --> 01:09:39,440
registers so the registers are those

01:09:38,799 --> 01:09:41,040
users

01:09:39,440 --> 01:09:44,239
that we have authorized to be able to

01:09:41,040 --> 01:09:45,600
add land onto the smart contract so

01:09:44,239 --> 01:09:49,440
if you want to add your landlord to the

01:09:45,600 --> 01:09:51,359
smart contract you go to the registrar's

01:09:49,440 --> 01:09:53,440
right and the registrars will verify

01:09:51,359 --> 01:09:54,880
your documents and then after that

01:09:53,440 --> 01:09:56,960
they'll add it to the smart contract for

01:09:54,880 --> 01:10:00,159
you right

01:09:56,960 --> 01:10:01,760
and then so these

01:10:00,159 --> 01:10:03,920
in projects could be corporations and

01:10:01,760 --> 01:10:06,080
land agencies in various countries

01:10:03,920 --> 01:10:07,760
now when a land owner is a land owner is

01:10:06,080 --> 01:10:08,560
ready to put their land on our smart

01:10:07,760 --> 01:10:10,080
contract

01:10:08,560 --> 01:10:11,520
they must contact a registrar and prove

01:10:10,080 --> 01:10:12,080
to them that they actually pointed out

01:10:11,520 --> 01:10:13,600
yes

01:10:12,080 --> 01:10:15,120
once this is done already try assign the

01:10:13,600 --> 01:10:18,560
rest of the coordinates of the

01:10:15,120 --> 01:10:19,840
to the public key of the the public key

01:10:18,560 --> 01:10:21,280
hash or the owners right

01:10:19,840 --> 01:10:22,960
so you as i said you give them your

01:10:21,280 --> 01:10:24,640
public key hash in the document

01:10:22,960 --> 01:10:26,000
to prove that indeed the land is yours

01:10:24,640 --> 01:10:28,400
and then do assign the land to your

01:10:26,000 --> 01:10:31,840
public key hash

01:10:28,400 --> 01:10:31,840
and then what happens next

01:10:33,920 --> 01:10:37,440
so we assume that the land can be

01:10:35,520 --> 01:10:39,760
represented as four

01:10:37,440 --> 01:10:41,440
points of longitude and latitude right

01:10:39,760 --> 01:10:44,640
so this point is actually

01:10:41,440 --> 01:10:47,280
longitude and latitude right so x y

01:10:44,640 --> 01:10:48,320
right for now let's do something simple

01:10:47,280 --> 01:10:52,239
like that

01:10:48,320 --> 01:10:54,880
x y x one y one whatever

01:10:52,239 --> 01:10:56,840
so longitude latitude four point and

01:10:54,880 --> 01:11:01,520
then we have land

01:10:56,840 --> 01:11:05,280
right now land owners

01:11:01,520 --> 01:11:07,199
can be able to um split their land

01:11:05,280 --> 01:11:09,120
so let's say you you say this is your

01:11:07,199 --> 01:11:11,280
land right and we've proved that

01:11:09,120 --> 01:11:13,760
indeed this is your land now the land

01:11:11,280 --> 01:11:17,120
will be spread splitted into

01:11:13,760 --> 01:11:20,159
meter squares right and then you

01:11:17,120 --> 01:11:20,960
you can assign prices the price per

01:11:20,159 --> 01:11:25,120
meter square

01:11:20,960 --> 01:11:27,840
right so let's say that the whole land

01:11:25,120 --> 01:11:27,840
could cause maybe

01:11:42,400 --> 01:11:45,600
so on the smart contract once you

01:11:44,080 --> 01:11:46,400
digitize the land on the smart contract

01:11:45,600 --> 01:11:49,520
for you

01:11:46,400 --> 01:11:51,280
that means that aldo is land

01:11:49,520 --> 01:11:53,280
now it has been digitized so you can

01:11:51,280 --> 01:11:56,400
break it down right

01:11:53,280 --> 01:11:56,400
and you sell the pieces

01:11:56,719 --> 01:12:00,800
so that means this piece can be owned by

01:11:59,440 --> 01:12:02,560
someone else

01:12:00,800 --> 01:12:05,440
and this piece can be owned by someone

01:12:02,560 --> 01:12:09,840
else right

01:12:05,440 --> 01:12:09,840
okay so uh

01:12:11,120 --> 01:12:15,040
landowners can now sell pieces of land

01:12:13,120 --> 01:12:17,120
the smallest piece is a square meter

01:12:15,040 --> 01:12:18,719
land owners must let the prices pass

01:12:17,120 --> 01:12:23,840
smallest units

01:12:18,719 --> 01:12:23,840
right so for example

01:12:24,960 --> 01:12:28,159
all right so let let's now dive into the

01:12:27,600 --> 01:12:30,800
code

01:12:28,159 --> 01:12:31,679
okay and it's through this code that i'm

01:12:30,800 --> 01:12:34,880
going to

01:12:31,679 --> 01:12:35,520
explain to you like um the spots buy and

01:12:34,880 --> 01:12:37,440
everything

01:12:35,520 --> 01:12:40,000
because i just wanted this to be very

01:12:37,440 --> 01:12:40,000
practical

01:12:41,679 --> 01:12:45,280
all right so let's continue with

01:12:44,159 --> 01:12:47,600
smartphone

01:12:45,280 --> 01:12:47,600
right

01:12:49,120 --> 01:12:52,520
so yeah a smartphone you can find

01:12:50,560 --> 01:12:54,800
smartphone on

01:12:52,520 --> 01:12:56,880
smartphone.io right so this is your

01:12:54,800 --> 01:12:58,960
website and when you go there

01:12:56,880 --> 01:13:00,080
you see we have the they have an online

01:12:58,960 --> 01:13:02,640
editor and that's what we're going to

01:13:00,080 --> 01:13:06,239
use in this

01:13:02,640 --> 01:13:07,760
short tutorial um so now that we've

01:13:06,239 --> 01:13:09,280
covered the basics of blockchain and

01:13:07,760 --> 01:13:10,000
everything i mean we are just ready to

01:13:09,280 --> 01:13:13,120
move and

01:13:10,000 --> 01:13:16,960
start writing our our land registration

01:13:13,120 --> 01:13:20,400
smart contract on a smartphone platform

01:13:16,960 --> 01:13:24,480
right so

01:13:20,400 --> 01:13:28,320
what we have here um

01:13:24,480 --> 01:13:29,840
yeah they have they are a line editor

01:13:28,320 --> 01:13:32,640
here

01:13:29,840 --> 01:13:34,719
so when i go there you see i have i

01:13:32,640 --> 01:13:37,920
already have some code

01:13:34,719 --> 01:13:39,840
so i'm just going to try to increase the

01:13:37,920 --> 01:13:42,159
size here so that you can all see what

01:13:39,840 --> 01:13:44,320
is going on here

01:13:42,159 --> 01:13:45,360
and then you can see that they are so

01:13:44,320 --> 01:13:47,840
good so they have

01:13:45,360 --> 01:13:49,920
newcomer template right so just go ahead

01:13:47,840 --> 01:13:52,800
and click on the new comma template

01:13:49,920 --> 01:13:54,320
and so we are here this is smart by io

01:13:52,800 --> 01:13:56,080
for slash dev

01:13:54,320 --> 01:13:57,760
which is from here they also have a

01:13:56,080 --> 01:13:59,760
command line interface so

01:13:57,760 --> 01:14:01,360
that means you can write you can decide

01:13:59,760 --> 01:14:04,239
not to use their online compile

01:14:01,360 --> 01:14:05,280
at their online environment but i mean

01:14:04,239 --> 01:14:07,280
even personally

01:14:05,280 --> 01:14:09,520
for production purposes i've been still

01:14:07,280 --> 01:14:13,280
using online stuff so

01:14:09,520 --> 01:14:15,600
there's nothing wrong with that so um

01:14:13,280 --> 01:14:16,320
yeah so they try to just explain how it

01:14:15,600 --> 01:14:19,679
works here

01:14:16,320 --> 01:14:23,280
so you see you write a python and then

01:14:19,679 --> 01:14:26,000
the python um compiles your

01:14:23,280 --> 01:14:26,800
they have a an engine that compiles your

01:14:26,000 --> 01:14:31,040
python

01:14:26,800 --> 01:14:35,120
into my cousin and this because

01:14:31,040 --> 01:14:38,640
um is what i showed you another time

01:14:35,120 --> 01:14:41,679
uh yeah so we will see that

01:14:38,640 --> 01:14:43,280
very soon right so this is your website

01:14:41,679 --> 01:14:44,880
you can all check it out

01:14:43,280 --> 01:14:46,320
and also they have a reference manual

01:14:44,880 --> 01:14:49,360
here

01:14:46,320 --> 01:14:53,040
right so

01:14:49,360 --> 01:14:56,880
if i go to here help

01:14:53,040 --> 01:14:58,719
let me open it in a new tab

01:14:56,880 --> 01:15:00,320
so you have help and then you see

01:14:58,719 --> 01:15:02,080
reference manuals when i click on your

01:15:00,320 --> 01:15:06,320
reference manual

01:15:02,080 --> 01:15:08,480
uh i can see like you know

01:15:06,320 --> 01:15:09,679
what i can do with smart byte over here

01:15:08,480 --> 01:15:10,159
and so we are going to go through most

01:15:09,679 --> 01:15:12,480
of this

01:15:10,159 --> 01:15:13,280
right here right so you have building

01:15:12,480 --> 01:15:15,440
blocks

01:15:13,280 --> 01:15:16,640
expressions commands entry points all

01:15:15,440 --> 01:15:18,640
over that so right here

01:15:16,640 --> 01:15:21,760
internet system really interesting stuff

01:15:18,640 --> 01:15:24,080
so since smartphone is a python library

01:15:21,760 --> 01:15:25,360
so yeah just let's just go ahead and say

01:15:24,080 --> 01:15:27,840
okay we want a template

01:15:25,360 --> 01:15:29,600
right so we just need to have a boiler

01:15:27,840 --> 01:15:31,920
template to start with which is good

01:15:29,600 --> 01:15:34,000
so minimal template and to load it fast

01:15:31,920 --> 01:15:35,199
right so as you can see online one it's

01:15:34,000 --> 01:15:37,120
important smart buy

01:15:35,199 --> 01:15:39,920
let me still increase this more it's

01:15:37,120 --> 01:15:42,239
important as much buyers sp

01:15:39,920 --> 01:15:43,199
and then it already has a class which is

01:15:42,239 --> 01:15:45,120
used which is

01:15:43,199 --> 01:15:46,719
inheriting from the sp dot contract

01:15:45,120 --> 01:15:49,199
right what is

01:15:46,719 --> 01:15:50,840
the sp we are talking about right so we

01:15:49,199 --> 01:15:54,239
are going to change this name

01:15:50,840 --> 01:15:57,120
to land register

01:15:54,239 --> 01:15:57,120
land register

01:15:57,920 --> 01:16:02,239
contract right so this sp contract

01:16:01,040 --> 01:16:04,239
refers to

01:16:02,239 --> 01:16:06,159
a contract that can be deployed onto the

01:16:04,239 --> 01:16:07,360
teasers blockchain right

01:16:06,159 --> 01:16:09,280
and so if you're going to write your

01:16:07,360 --> 01:16:11,360
contract you create a class and then you

01:16:09,280 --> 01:16:13,199
inherit from sp dot contract

01:16:11,360 --> 01:16:14,960
and then yeah there's one thing you also

01:16:13,199 --> 01:16:18,560
need to do

01:16:14,960 --> 01:16:21,280
is to define the init function here

01:16:18,560 --> 01:16:22,640
so the init function let me just do this

01:16:21,280 --> 01:16:24,880
would have to be very clear

01:16:22,640 --> 01:16:25,679
this is a normal python in it and then

01:16:24,880 --> 01:16:28,400
within that

01:16:25,679 --> 01:16:29,840
you have to call the self.init right so

01:16:28,400 --> 01:16:32,159
this cell dot in it

01:16:29,840 --> 01:16:33,280
is a function that i mean is within this

01:16:32,159 --> 01:16:36,640
sp guy

01:16:33,280 --> 01:16:38,400
so yeah and then also they have loads

01:16:36,640 --> 01:16:40,960
and loads and loads they provide

01:16:38,400 --> 01:16:42,400
a lot of tools to for loads and loads

01:16:40,960 --> 01:16:44,239
and for you to be able to run lows and

01:16:42,400 --> 01:16:45,600
loads and loads of tests right

01:16:44,239 --> 01:16:47,600
so let's just go ahead and change this

01:16:45,600 --> 01:16:52,320
to land

01:16:47,600 --> 01:16:52,320
register tests

01:16:52,640 --> 01:17:02,719
right right and then let's just

01:16:56,320 --> 01:17:07,120
clear all of these away

01:17:02,719 --> 01:17:09,840
yeah so just say that

01:17:07,120 --> 01:17:09,840
and then let's see

01:17:11,520 --> 01:17:17,679
yeah so something like this

01:17:15,199 --> 01:17:18,800
and then let's click here and who it

01:17:17,679 --> 01:17:20,159
runs and you can see

01:17:18,800 --> 01:17:22,239
so when you make changes here and you

01:17:20,159 --> 01:17:23,280
click the run here you can see that we

01:17:22,239 --> 01:17:25,320
have uh

01:17:23,280 --> 01:17:26,960
whatever we type the alarm register

01:17:25,320 --> 01:17:30,560
scenario.h1

01:17:26,960 --> 01:17:31,280
it's actually like html so h1 html had

01:17:30,560 --> 01:17:34,320
that one

01:17:31,280 --> 01:17:35,280
all right and that's it and then we call

01:17:34,320 --> 01:17:38,320
this mask on the

01:17:35,280 --> 01:17:39,920
data just like this plus which is a

01:17:38,320 --> 01:17:41,760
smart contract class

01:17:39,920 --> 01:17:44,239
and then we pass it x equals 12 inside

01:17:41,760 --> 01:17:47,600
so just this is just like

01:17:44,239 --> 01:17:49,199
for the start right so let's clear

01:17:47,600 --> 01:17:52,000
everything here

01:17:49,199 --> 01:17:52,960
and just leave this guy right so you can

01:17:52,000 --> 01:17:56,000
see that this

01:17:52,960 --> 01:17:58,400
this is like a text a test scenario

01:17:56,000 --> 01:17:59,520
so you have sp dot test scenario right

01:17:58,400 --> 01:18:00,719
meaning that you're about to start

01:17:59,520 --> 01:18:04,080
writing some tests

01:18:00,719 --> 01:18:04,080
and then when i say scenario

01:18:04,159 --> 01:18:07,679
dot h1 it means i want to write

01:18:06,400 --> 01:18:12,719
something

01:18:07,679 --> 01:18:12,719
on this side right so each one say what

01:18:14,080 --> 01:18:18,480
right good so when i run this

01:18:17,199 --> 01:18:20,320
again it just leaves us with land

01:18:18,480 --> 01:18:23,600
register

01:18:20,320 --> 01:18:26,880
so now let's let's start

01:18:23,600 --> 01:18:29,199
with analyzing this

01:18:26,880 --> 01:18:30,320
this class that we have here right now

01:18:29,199 --> 01:18:32,159
so that's

01:18:30,320 --> 01:18:33,840
as i've said this land register inherits

01:18:32,159 --> 01:18:36,080
from sp dot contract

01:18:33,840 --> 01:18:37,920
and we have to define the depth in it

01:18:36,080 --> 01:18:39,840
right we have to define it in it

01:18:37,920 --> 01:18:41,840
and also we have to define the self dot

01:18:39,840 --> 01:18:43,280
in it right we have to call the cell dot

01:18:41,840 --> 01:18:46,159
in it from here

01:18:43,280 --> 01:18:48,239
now this keyword argument represents the

01:18:46,159 --> 01:18:50,640
data that is in our contract so if

01:18:48,239 --> 01:18:51,440
if i was already explained this i'm

01:18:50,640 --> 01:18:54,640
saying that

01:18:51,440 --> 01:18:56,880
i did say that every contract is made up

01:18:54,640 --> 01:19:01,440
of what

01:18:56,880 --> 01:19:06,080
the data and then the code right

01:19:01,440 --> 01:19:06,080
so let me say there is a data

01:19:07,120 --> 01:19:12,400
and then this is the code

01:19:10,159 --> 01:19:12,400
right

01:19:15,199 --> 01:19:20,880
right so every contract has two things

01:19:18,560 --> 01:19:24,239
data and then code so you need to keep

01:19:20,880 --> 01:19:27,850
this in mind every contract has

01:19:24,239 --> 01:19:30,960
every contractor students data

01:19:27,850 --> 01:19:36,159
[Music]

01:19:30,960 --> 01:19:39,440
and code right good so

01:19:36,159 --> 01:19:41,520
in smartphone right

01:19:39,440 --> 01:19:43,520
this cell door in it here this is where

01:19:41,520 --> 01:19:45,600
we define like our data structure

01:19:43,520 --> 01:19:46,800
so we'll go more into that later so

01:19:45,600 --> 01:19:51,120
let's go ahead and

01:19:46,800 --> 01:19:52,400
you know remove this guy from here

01:19:51,120 --> 01:19:54,000
so this is a class and we're just

01:19:52,400 --> 01:19:55,280
calling it with some initial parameters

01:19:54,000 --> 01:19:56,239
right so let's just remove that from

01:19:55,280 --> 01:19:58,880
here

01:19:56,239 --> 01:19:59,600
and also now you can see we have here at

01:19:58,880 --> 01:20:01,679
sp dot

01:19:59,600 --> 01:20:03,120
entry point right so this is the creator

01:20:01,679 --> 01:20:03,679
that's the creating a function within

01:20:03,120 --> 01:20:05,760
this

01:20:03,679 --> 01:20:07,199
class and the entry point you can think

01:20:05,760 --> 01:20:08,960
of it like um

01:20:07,199 --> 01:20:10,560
an end point like you know if you're

01:20:08,960 --> 01:20:11,280
familiar with the rest architecture or

01:20:10,560 --> 01:20:14,239
rest of

01:20:11,280 --> 01:20:15,679
frameworks you know you you you you call

01:20:14,239 --> 01:20:17,280
some

01:20:15,679 --> 01:20:18,719
an entry point in the rest framework

01:20:17,280 --> 01:20:22,639
would be like oh

01:20:18,719 --> 01:20:25,840
like you know something like uh abi

01:20:22,639 --> 01:20:29,360
you know version one for slash

01:20:25,840 --> 01:20:32,239
user for slot edit first last one

01:20:29,360 --> 01:20:34,480
something like that you know so in in in

01:20:32,239 --> 01:20:36,159
in this case also we have

01:20:34,480 --> 01:20:37,600
something similar which is called an

01:20:36,159 --> 01:20:38,960
entry point because once you write this

01:20:37,600 --> 01:20:40,880
contract and you deploy it

01:20:38,960 --> 01:20:42,719
onto the blockchain then you can then be

01:20:40,880 --> 01:20:46,960
able to call a specific function

01:20:42,719 --> 01:20:50,320
on it okay so without land register

01:20:46,960 --> 01:20:53,920
application let's start by defining um

01:20:50,320 --> 01:20:56,560
some entry points right so let me see

01:20:53,920 --> 01:20:56,560
register

01:20:57,280 --> 01:21:03,920
um add land

01:21:00,719 --> 01:21:05,040
yeah at land and then let's also define

01:21:03,920 --> 01:21:06,560
another entry point

01:21:05,040 --> 01:21:08,239
so that means we'll call this entry

01:21:06,560 --> 01:21:11,679
point where i want to add

01:21:08,239 --> 01:21:11,679
um a piece of land to a

01:21:11,760 --> 01:21:19,520
to the contract and

01:21:14,800 --> 01:21:19,520
so let's go back here so yeah

01:21:21,280 --> 01:21:25,600
and also yeah so for now let's still add

01:21:25,120 --> 01:21:28,880
land

01:21:25,600 --> 01:21:31,440
right so let's just say add land so we

01:21:28,880 --> 01:21:35,520
have a land to add a piece of land today

01:21:31,440 --> 01:21:37,760
contract okay okay

01:21:35,520 --> 01:21:37,760
so

01:21:39,840 --> 01:21:43,280
so now let's let's then we i believe

01:21:42,320 --> 01:21:45,360
with this example

01:21:43,280 --> 01:21:47,040
the illustration here we have what is

01:21:45,360 --> 01:21:47,840
what what you understand what the entry

01:21:47,040 --> 01:21:52,639
points mean

01:21:47,840 --> 01:21:52,639
so then let's go next to define our

01:21:53,040 --> 01:21:58,000
our um our data right so when we

01:21:56,639 --> 01:22:00,960
initialize the contract

01:21:58,000 --> 01:22:03,440
right when we initialize the contract uh

01:22:00,960 --> 01:22:05,920
in smartphone we need to pass it

01:22:03,440 --> 01:22:07,600
we could pass it some initial data it's

01:22:05,920 --> 01:22:09,199
known as compulsory maybe our contract

01:22:07,600 --> 01:22:11,600
doesn't store any data which

01:22:09,199 --> 01:22:12,639
doesn't make sense in any way but yeah

01:22:11,600 --> 01:22:14,000
it's possible to have the controller

01:22:12,639 --> 01:22:15,600
that doesn't store data

01:22:14,000 --> 01:22:17,360
but in this case we want to store it at

01:22:15,600 --> 01:22:21,199
least we know that i want to store data

01:22:17,360 --> 01:22:24,080
about some sort of land right yeah

01:22:21,199 --> 01:22:26,159
so um one thing we need to do is that we

01:22:24,080 --> 01:22:29,280
need to take notice that uh

01:22:26,159 --> 01:22:30,719
we want to design a contract that can be

01:22:29,280 --> 01:22:33,199
managed by someone

01:22:30,719 --> 01:22:34,000
right so first of all let's say we want

01:22:33,199 --> 01:22:39,199
a manager

01:22:34,000 --> 01:22:43,600
right so a manager

01:22:39,199 --> 01:22:46,080
and uh let me just say manager because

01:22:43,600 --> 01:22:47,920
manager right so what i've done here is

01:22:46,080 --> 01:22:50,840
i've declared to smart pi that

01:22:47,920 --> 01:22:52,320
you want to create a data data structure

01:22:50,840 --> 01:22:56,000
in

01:22:52,320 --> 01:22:57,600
um in the contracts right called manager

01:22:56,000 --> 01:22:59,120
and then we are assigning it to this

01:22:57,600 --> 01:23:02,800
initial monitor from

01:22:59,120 --> 01:23:06,000
this class right good so this manager

01:23:02,800 --> 01:23:07,280
is just an address so if i think i've

01:23:06,000 --> 01:23:08,320
already explained this but let me just

01:23:07,280 --> 01:23:13,440
do it again

01:23:08,320 --> 01:23:15,360
because what i said is

01:23:13,440 --> 01:23:16,960
every account has threatens public key

01:23:15,360 --> 01:23:20,080
privacy and public key hash

01:23:16,960 --> 01:23:22,880
right so the manager

01:23:20,080 --> 01:23:24,239
here is the address or let me say the

01:23:22,880 --> 01:23:26,719
public key hash

01:23:24,239 --> 01:23:27,840
of someone right who is in charge of the

01:23:26,719 --> 01:23:29,440
whole contract right

01:23:27,840 --> 01:23:31,440
and this manager is going to be able to

01:23:29,440 --> 01:23:35,679
do the following things

01:23:31,440 --> 01:23:39,920
so manager what can the manager do

01:23:35,679 --> 01:23:43,199
i can add registers

01:23:39,920 --> 01:23:47,120
when you stress right

01:23:43,199 --> 01:23:49,760
can remove regis

01:23:47,120 --> 01:23:50,719
stress i don't know why it just changes

01:23:49,760 --> 01:23:52,960
already stress

01:23:50,719 --> 01:23:54,159
yeah so i think we had a wrong spell in

01:23:52,960 --> 01:23:56,639
there

01:23:54,159 --> 01:23:58,639
and then yeah so let's for now let's

01:23:56,639 --> 01:24:01,920
let's leave it at that right

01:23:58,639 --> 01:24:03,600
so um i'm going to use this to

01:24:01,920 --> 01:24:06,480
demonstrate to you like how this

01:24:03,600 --> 01:24:07,199
whole thing works so for now let's let's

01:24:06,480 --> 01:24:11,600
just uh

01:24:07,199 --> 01:24:17,840
change this to add redis add register

01:24:11,600 --> 01:24:17,840
extra and then

01:24:21,760 --> 01:24:24,159
remove

01:24:25,440 --> 01:24:34,080
register right and then uh

01:24:30,960 --> 01:24:34,080
we're going to say something like

01:24:35,600 --> 01:24:39,120
to add a register we want to we as we've

01:24:37,520 --> 01:24:41,120
already said yeah

01:24:39,120 --> 01:24:42,159
a manager can add redistress and remove

01:24:41,120 --> 01:24:43,600
registries

01:24:42,159 --> 01:24:45,520
so the first thing we want to do is when

01:24:43,600 --> 01:24:46,960
we call this endpoint add registrar we

01:24:45,520 --> 01:24:48,080
want to check if the person calling the

01:24:46,960 --> 01:24:50,400
endpoint

01:24:48,080 --> 01:24:51,920
is the manager right and so when we look

01:24:50,400 --> 01:24:53,120
at the reference manual

01:24:51,920 --> 01:24:54,960
you can see we have something here

01:24:53,120 --> 01:24:59,840
called uh

01:24:54,960 --> 01:24:59,840
so let's look for it something um

01:25:00,000 --> 01:25:04,480
yeah checking condition right

01:25:05,120 --> 01:25:08,159
to sp dot verify so check that the

01:25:07,600 --> 01:25:11,040
william

01:25:08,159 --> 01:25:11,440
expression condition evaluates to true

01:25:11,040 --> 01:25:14,320
right

01:25:11,440 --> 01:25:15,920
and then they have sp dot verify equal

01:25:14,320 --> 01:25:16,960
it serves the same purpose by checking

01:25:15,920 --> 01:25:20,159
equality between

01:25:16,960 --> 01:25:20,880
v1 and v2 all right all right that is

01:25:20,159 --> 01:25:24,840
good

01:25:20,880 --> 01:25:27,840
and then we have these specific data

01:25:24,840 --> 01:25:27,840
types

01:25:28,880 --> 01:25:35,520
all right so now we want to we want to

01:25:32,159 --> 01:25:37,360
compare the person sending the

01:25:35,520 --> 01:25:40,480
invoking the contract or running this

01:25:37,360 --> 01:25:42,320
contract or trying to call this endpoint

01:25:40,480 --> 01:25:44,560
to the manager that we stored in our

01:25:42,320 --> 01:25:48,239
data in sorry in our data here

01:25:44,560 --> 01:25:52,320
here so what we will do is

01:25:48,239 --> 01:25:56,320
we will say sp.verify

01:25:52,320 --> 01:25:58,000
equal right and

01:25:56,320 --> 01:26:00,480
as we've already read over here sp dot

01:25:58,000 --> 01:26:04,719
verify equal um

01:26:00,480 --> 01:26:06,080
where is it let's build verify call

01:26:04,719 --> 01:26:08,719
okay it says the same purpose by

01:26:06,080 --> 01:26:23,840
checking equality between v1 and v2

01:26:08,719 --> 01:26:23,840
right okay

01:26:25,360 --> 01:26:28,639
so

01:26:26,240 --> 01:26:32,080
[Music]

01:26:28,639 --> 01:26:33,280
good anyway do you want to do is what

01:26:32,080 --> 01:26:36,560
you want to do to compare

01:26:33,280 --> 01:26:37,840
the person who sends the contract to the

01:26:36,560 --> 01:26:40,800
manager we stored here

01:26:37,840 --> 01:26:41,760
right so we are going to say sp dot sp

01:26:40,800 --> 01:26:45,280
dot sender

01:26:41,760 --> 01:26:48,080
right so what happens is that

01:26:45,280 --> 01:26:49,679
you know to run or to invoke a smart

01:26:48,080 --> 01:26:52,560
contract in terms of

01:26:49,679 --> 01:26:54,239
okay you need to have a tesla's account

01:26:52,560 --> 01:26:56,400
by that i mean

01:26:54,239 --> 01:26:58,159
what i mentioned here earlier on that

01:26:56,400 --> 01:27:01,600
having a tesla's account

01:26:58,159 --> 01:27:01,600
so having a payloads account

01:27:01,920 --> 01:27:05,760
means that you have these three things

01:27:04,239 --> 01:27:08,560
right

01:27:05,760 --> 01:27:08,560
a public key

01:27:10,000 --> 01:27:13,920
a private key

01:27:14,000 --> 01:27:21,360
and then a public

01:27:18,080 --> 01:27:22,639
key all right and if this public key has

01:27:21,360 --> 01:27:24,480
that usually see

01:27:22,639 --> 01:27:26,800
all right so an example of a public key

01:27:24,480 --> 01:27:26,800
hash

01:27:31,120 --> 01:27:34,960
we'll see an example of the public key

01:27:32,480 --> 01:27:37,760
has very soon right so we want to say

01:27:34,960 --> 01:27:38,239
okay we want to compare that the sender

01:27:37,760 --> 01:27:40,400
sp

01:27:38,239 --> 01:27:42,000
sender right so that means the person

01:27:40,400 --> 01:27:43,120
invoking this contract so once this

01:27:42,000 --> 01:27:44,400
contract is ready

01:27:43,120 --> 01:27:45,840
we will see that the person in working

01:27:44,400 --> 01:27:47,280
this contract is what is referred to as

01:27:45,840 --> 01:27:49,920
sb.center

01:27:47,280 --> 01:27:49,920
and um

01:27:51,600 --> 01:27:55,760
it says we we say we want to verify v1

01:27:53,920 --> 01:27:56,480
and v2 we want to compare them with the

01:27:55,760 --> 01:27:59,280
i call

01:27:56,480 --> 01:28:01,199
so we say we put v1 here then v2day

01:27:59,280 --> 01:28:02,159
right and we've already stored the

01:28:01,199 --> 01:28:04,800
manager here

01:28:02,159 --> 01:28:06,480
right so to get access to data within

01:28:04,800 --> 01:28:10,080
the contract itself we have to say

01:28:06,480 --> 01:28:12,639
self called dot data

01:28:10,080 --> 01:28:13,520
okay so this is data that's stored

01:28:12,639 --> 01:28:15,840
within the contract

01:28:13,520 --> 01:28:15,840
itself

01:28:16,960 --> 01:28:19,199
and

01:28:21,120 --> 01:28:26,239
so if they are equal then we don't have

01:28:23,920 --> 01:28:29,480
any problem but if they are not

01:28:26,239 --> 01:28:33,679
then what we are going to say is maybe

01:28:29,480 --> 01:28:33,679
unauthorized right

01:28:34,080 --> 01:28:42,320
action um

01:28:38,719 --> 01:28:45,679
you are not manager

01:28:42,320 --> 01:28:48,960
and once this contract is invoked right

01:28:45,679 --> 01:28:51,520
from any um client if

01:28:48,960 --> 01:28:53,600
the sender is not or the person working

01:28:51,520 --> 01:28:57,520
there

01:28:53,600 --> 01:28:59,920
the contract is not the the manager

01:28:57,520 --> 01:29:01,840
then what will happen is the person is

01:28:59,920 --> 01:29:05,840
going to get this unauthorized

01:29:01,840 --> 01:29:08,320
you are not a manager um response right

01:29:05,840 --> 01:29:09,199
so this is you know usually when you're

01:29:08,320 --> 01:29:10,960
writing

01:29:09,199 --> 01:29:13,120
this code there are two aspects right

01:29:10,960 --> 01:29:15,360
this is like the contract aspect and

01:29:13,120 --> 01:29:17,280
then the client as well as

01:29:15,360 --> 01:29:18,400
you know the final app that the user

01:29:17,280 --> 01:29:20,719
will use or

01:29:18,400 --> 01:29:21,440
maybe a web application and from there

01:29:20,719 --> 01:29:22,800
you can

01:29:21,440 --> 01:29:24,880
interact with these contracts and there

01:29:22,800 --> 01:29:26,800
are libraries that help you do that but

01:29:24,880 --> 01:29:30,719
that's not the point of this uh

01:29:26,800 --> 01:29:32,320
um tutorial so

01:29:30,719 --> 01:29:34,320
once we are done with everything here we

01:29:32,320 --> 01:29:35,360
would we would actually interact with

01:29:34,320 --> 01:29:36,560
the contract

01:29:35,360 --> 01:29:38,560
we can actually interact with the

01:29:36,560 --> 01:29:40,560
contract is in smart by itself

01:29:38,560 --> 01:29:43,679
right i mean they are environment they

01:29:40,560 --> 01:29:43,679
have all of those

01:29:44,320 --> 01:29:50,960
things in play okay and so uh

01:29:48,480 --> 01:29:52,639
and then we want to say we want to add a

01:29:50,960 --> 01:29:53,600
registrar right but where are we adding

01:29:52,639 --> 01:29:56,639
the register

01:29:53,600 --> 01:29:57,920
since we are we we want to we need to

01:29:56,639 --> 01:29:59,920
define a place where we're going to

01:29:57,920 --> 01:30:00,639
store the registers right so we're going

01:29:59,920 --> 01:30:07,840
to say

01:30:00,639 --> 01:30:07,840
we're going to define another data um

01:30:07,920 --> 01:30:12,480
redistrust and then we are going to say

01:30:14,000 --> 01:30:21,280
is equal to registrars right

01:30:17,840 --> 01:30:23,040
and then we are going to so you don't

01:30:21,280 --> 01:30:27,360
have to always initialize

01:30:23,040 --> 01:30:29,920
your your smart contract data but

01:30:27,360 --> 01:30:31,199
in this case we want to once we when we

01:30:29,920 --> 01:30:31,840
are deploying the contract we want to be

01:30:31,199 --> 01:30:33,920
able to

01:30:31,840 --> 01:30:35,600
set some initial registrars or people

01:30:33,920 --> 01:30:37,760
who can register

01:30:35,600 --> 01:30:39,360
users on the on the contract and then

01:30:37,760 --> 01:30:41,199
once the time is

01:30:39,360 --> 01:30:43,920
one does is done we can call ad

01:30:41,199 --> 01:30:47,600
registrar to add extra registers right

01:30:43,920 --> 01:30:49,920
so that's what we're going to do so

01:30:47,600 --> 01:30:49,920
um

01:30:51,679 --> 01:30:57,840
uh we're gonna say something like

01:30:55,040 --> 01:30:57,840
registrars

01:31:00,840 --> 01:31:06,639
dot add

01:31:04,159 --> 01:31:07,440
all right so what are we adding we're

01:31:06,639 --> 01:31:10,560
going to since

01:31:07,440 --> 01:31:12,159
this endpoint is called an add register

01:31:10,560 --> 01:31:13,760
we are going to add some register but

01:31:12,159 --> 01:31:16,239
from where right

01:31:13,760 --> 01:31:17,520
so you can see that in this entry point

01:31:16,239 --> 01:31:18,400
functions we have something called

01:31:17,520 --> 01:31:21,600
params

01:31:18,400 --> 01:31:23,199
now it is in these params that contains

01:31:21,600 --> 01:31:24,719
like all the data we are sending to the

01:31:23,199 --> 01:31:25,760
smart contracts was calling this

01:31:24,719 --> 01:31:28,080
endpoint right

01:31:25,760 --> 01:31:29,440
so we are going to get that data from

01:31:28,080 --> 01:31:33,840
this

01:31:29,440 --> 01:31:35,600
params so let's say we want to

01:31:33,840 --> 01:31:38,159
say that um once you have when you're

01:31:35,600 --> 01:31:41,199
calling this add registrar functionality

01:31:38,159 --> 01:31:43,840
you are going to add um

01:31:41,199 --> 01:31:44,719
a registrar field to the parameters so

01:31:43,840 --> 01:31:49,760
to params

01:31:44,719 --> 01:31:52,719
so let's just say params.registrar

01:31:49,760 --> 01:31:53,440
all right so that's it and that's it for

01:31:52,719 --> 01:31:56,639
that right

01:31:53,440 --> 01:31:57,990
it adds a new register okay so to run it

01:31:56,639 --> 01:32:01,380
and actually see how this works

01:31:57,990 --> 01:32:01,380
[Music]

01:32:04,239 --> 01:32:10,400
so first of all

01:32:07,280 --> 01:32:12,480
let's create we need to we have we we

01:32:10,400 --> 01:32:15,280
need to run this test

01:32:12,480 --> 01:32:17,040
and and test what is happening here and

01:32:15,280 --> 01:32:19,920
so

01:32:17,040 --> 01:32:20,960
for for testing purposes smart pi allows

01:32:19,920 --> 01:32:23,920
you to create

01:32:20,960 --> 01:32:24,880
fake users user accounts right right in

01:32:23,920 --> 01:32:29,760
their editor

01:32:24,880 --> 01:32:29,760
okay so what we have here

01:32:29,840 --> 01:32:32,639
uh so when you go to test and test

01:32:31,520 --> 01:32:34,400
scenarios that's where you see

01:32:32,639 --> 01:32:38,159
everything regarding tests

01:32:34,400 --> 01:32:38,159
right and

01:32:38,239 --> 01:32:44,239
we're going to find the plus yes

01:32:41,280 --> 01:32:44,719
so we have this called sp dot test

01:32:44,239 --> 01:32:47,199
account

01:32:44,719 --> 01:32:49,600
so this test account uh functionality in

01:32:47,199 --> 01:32:52,480
sp allows us to create

01:32:49,600 --> 01:32:53,280
um users that have public key hash

01:32:52,480 --> 01:32:56,320
public key

01:32:53,280 --> 01:32:59,840
and then what secret key or private key

01:32:56,320 --> 01:33:03,679
right so let's create a manager account

01:32:59,840 --> 01:33:03,679
called sp dot test account

01:33:04,480 --> 01:33:09,840
and we call it manager just that so it's

01:33:08,320 --> 01:33:11,679
just the name you put here that's what

01:33:09,840 --> 01:33:13,679
make differentiated from others

01:33:11,679 --> 01:33:15,199
and then let's create some registrars

01:33:13,679 --> 01:33:17,199
from initial registration right so we

01:33:15,199 --> 01:33:23,840
call r1

01:33:17,199 --> 01:33:23,840
is equal to sp dot test account

01:33:24,120 --> 01:33:29,280
registrar one

01:33:27,199 --> 01:33:31,440
and then i'm gonna copy this and paste

01:33:29,280 --> 01:33:31,440
it

01:33:31,679 --> 01:33:38,960
so i just draw two straight

01:33:35,360 --> 01:33:42,639
right two

01:33:38,960 --> 01:33:45,040
okay so

01:33:42,639 --> 01:33:45,040
um

01:33:46,000 --> 01:33:49,040
yeah and then now we can call our

01:33:48,159 --> 01:33:52,000
contract

01:33:49,040 --> 01:33:54,320
so let's say c is equal to that we

01:33:52,000 --> 01:33:58,080
initialize our contract land

01:33:54,320 --> 01:34:01,360
registrar so this is all just

01:33:58,080 --> 01:34:03,280
allowing us to test right

01:34:01,360 --> 01:34:04,960
so this is not like actually on the on

01:34:03,280 --> 01:34:06,800
the teasers blockchain this is just

01:34:04,960 --> 01:34:08,639
smartphone environment giving us all the

01:34:06,800 --> 01:34:09,600
tools we need to run and test our team

01:34:08,639 --> 01:34:13,360
our contract

01:34:09,600 --> 01:34:15,120
before we would um deploy or

01:34:13,360 --> 01:34:17,040
we get a magazine code and then deploy

01:34:15,120 --> 01:34:18,400
onto the blockchain so we'll get into

01:34:17,040 --> 01:34:22,480
that version

01:34:18,400 --> 01:34:24,960
to land register right and then

01:34:22,480 --> 01:34:26,800
what are the initial parameters it's

01:34:24,960 --> 01:34:27,840
just like a python a normal python class

01:34:26,800 --> 01:34:33,840
so we have

01:34:27,840 --> 01:34:33,840
the manager right so manager

01:34:35,600 --> 01:34:43,440
equals manager right

01:34:38,719 --> 01:34:43,440
and then you also have the registrar's

01:34:44,800 --> 01:34:49,840
right equals now we have a list of

01:34:48,400 --> 01:34:53,280
registers who are

01:34:49,840 --> 01:35:01,199
one comma r two

01:34:53,280 --> 01:35:05,760
comma r three right

01:35:01,199 --> 01:35:05,760
so that's that

01:35:06,239 --> 01:35:14,480
now what i said um this sp

01:35:09,520 --> 01:35:16,960
test account allows you to create uh

01:35:14,480 --> 01:35:18,960
fake desert account right just for

01:35:16,960 --> 01:35:23,199
testing in this environment

01:35:18,960 --> 01:35:24,800
and so uh

01:35:23,199 --> 01:35:28,159
we could do some a little exploration

01:35:24,800 --> 01:35:29,600
okay so

01:35:28,159 --> 01:35:31,520
as we can see here this is a normal

01:35:29,600 --> 01:35:33,440
python list okay

01:35:31,520 --> 01:35:34,880
but what we what how we want to store

01:35:33,440 --> 01:35:36,000
the registrations no we don't want to

01:35:34,880 --> 01:35:38,400
store them as a list

01:35:36,000 --> 01:35:39,360
we want to store them as a set okay

01:35:38,400 --> 01:35:42,639
because

01:35:39,360 --> 01:35:43,360
uh so in python you will see a set of

01:35:42,639 --> 01:35:46,000
this list

01:35:43,360 --> 01:35:47,440
but this is not python this is smart pi

01:35:46,000 --> 01:35:49,280
and so to

01:35:47,440 --> 01:35:51,119
to apply a certain smartphone you see

01:35:49,280 --> 01:35:52,560
you have part by types and operators

01:35:51,119 --> 01:35:54,320
and then when i come here i can see

01:35:52,560 --> 01:35:56,800
something called set right

01:35:54,320 --> 01:35:57,840
so to create a set in smartphone you

01:35:56,800 --> 01:36:01,520
could have

01:35:57,840 --> 01:36:03,360
what a python list and then you call it

01:36:01,520 --> 01:36:05,360
sp.set and then you put the list in

01:36:03,360 --> 01:36:08,480
there so that's what you're going to do

01:36:05,360 --> 01:36:12,960
we're going to create sp.set right

01:36:08,480 --> 01:36:15,110
and so now this is a set okay

01:36:12,960 --> 01:36:16,400
and now

01:36:15,110 --> 01:36:20,880
[Music]

01:36:16,400 --> 01:36:26,320
the next thing is to say scenario

01:36:20,880 --> 01:36:26,320
plus equals c so what does this mean

01:36:27,920 --> 01:36:31,840
so this scenario as i've said is a test

01:36:30,639 --> 01:36:33,280
scenario and that's what

01:36:31,840 --> 01:36:36,000
everything that displays here is the

01:36:33,280 --> 01:36:37,760
test scenario so when i say plastic or c

01:36:36,000 --> 01:36:40,960
it is only saying that if you add

01:36:37,760 --> 01:36:43,520
whatever these contract outputs

01:36:40,960 --> 01:36:44,960
to this interface here right so let me

01:36:43,520 --> 01:36:52,719
run this

01:36:44,960 --> 01:36:55,840
whoa we have an error it says

01:36:52,719 --> 01:36:57,280
registrar's is not defined all right

01:36:55,840 --> 01:36:59,360
and then it gives you the line it's

01:36:57,280 --> 01:37:01,199
multiply line 35

01:36:59,360 --> 01:37:04,480
okay so when it goes to line 35 is a

01:37:01,199 --> 01:37:04,480
reduced price is not defined

01:37:05,679 --> 01:37:08,800
wait a minute okay

01:37:09,600 --> 01:37:14,080
so let me run it again i think i missed

01:37:11,199 --> 01:37:17,679
it okay

01:37:14,080 --> 01:37:18,159
oh yeah yeah so actually the error is

01:37:17,679 --> 01:37:21,440
where

01:37:18,159 --> 01:37:23,600
in line 17 but we just said value stress

01:37:21,440 --> 01:37:24,880
but if you remember we to get the data

01:37:23,600 --> 01:37:28,639
inside the smart contract

01:37:24,880 --> 01:37:31,520
you have to sell the data and then dot

01:37:28,639 --> 01:37:32,800
that data and as i've said the this cell

01:37:31,520 --> 01:37:34,960
dot init

01:37:32,800 --> 01:37:36,719
is where we store all our data relating

01:37:34,960 --> 01:37:38,800
to the smart contract right

01:37:36,719 --> 01:37:39,920
and so this sp contract class takes care

01:37:38,800 --> 01:37:41,520
of everything for us

01:37:39,920 --> 01:37:43,199
it just say which you just do easy like

01:37:41,520 --> 01:37:46,239
this and so that's how we do it

01:37:43,199 --> 01:37:48,480
data dot registres

01:37:46,239 --> 01:37:50,239
right so let me just run this again and

01:37:48,480 --> 01:37:52,480
now we are getting a different error

01:37:50,239 --> 01:37:55,840
and so actually wanted as i wanted us to

01:37:52,480 --> 01:37:55,840
see this error and what is it saying

01:37:56,400 --> 01:38:02,880
so what are we passing here sp

01:37:59,760 --> 01:38:05,600
set r1 r2 and r3

01:38:02,880 --> 01:38:06,320
right and as i said this one is a full

01:38:05,600 --> 01:38:08,480
test account

01:38:06,320 --> 01:38:10,000
what does mean what that means is that

01:38:08,480 --> 01:38:13,040
it returns

01:38:10,000 --> 01:38:14,639
threatens the threatens i mentioned here

01:38:13,040 --> 01:38:16,400
that the public key private key and

01:38:14,639 --> 01:38:20,960
public key hash right

01:38:16,400 --> 01:38:23,440
but we are not allowed

01:38:20,960 --> 01:38:25,040
okay to store private key on the smart

01:38:23,440 --> 01:38:26,800
contract because then everyone will see

01:38:25,040 --> 01:38:27,119
it and once someone's your private key

01:38:26,800 --> 01:38:28,960
is

01:38:27,119 --> 01:38:30,639
export then it means that people can

01:38:28,960 --> 01:38:32,480
have access to your account and can

01:38:30,639 --> 01:38:34,080
execute the smart contracts in your name

01:38:32,480 --> 01:38:35,840
they can take your money away and all of

01:38:34,080 --> 01:38:36,480
that so the private key needs to be

01:38:35,840 --> 01:38:39,360
private

01:38:36,480 --> 01:38:40,080
seriously and so what we need to do is

01:38:39,360 --> 01:38:42,719
to say

01:38:40,080 --> 01:38:44,639
we need to get the address and by the

01:38:42,719 --> 01:38:47,520
address i mean the public key hash

01:38:44,639 --> 01:38:49,440
right so anytime you address it means

01:38:47,520 --> 01:38:53,679
public key

01:38:49,440 --> 01:38:56,480
and yeah

01:38:53,679 --> 01:38:56,480
oh damn it

01:38:56,840 --> 01:39:02,480
okay so it's not it's no problem at all

01:39:00,239 --> 01:39:02,480
oh

01:39:03,280 --> 01:39:08,080
yeah so in the manager okay

01:39:06,639 --> 01:39:11,360
because we need to get manager those

01:39:08,080 --> 01:39:14,880
address and then

01:39:11,360 --> 01:39:18,239
we run that and wow voila

01:39:14,880 --> 01:39:21,679
we have something here right

01:39:18,239 --> 01:39:23,119
so this you know this h1

01:39:21,679 --> 01:39:26,159
just to make sure you understand as well

01:39:23,119 --> 01:39:28,000
this h1 here is what is showing here

01:39:26,159 --> 01:39:30,000
and then the output of this contrast so

01:39:28,000 --> 01:39:33,840
smartphone gives a nice output

01:39:30,000 --> 01:39:33,840
of the edge contract and

01:39:34,159 --> 01:39:37,360
of this contract and there's the output

01:39:36,239 --> 01:39:39,520
of the contract you see it

01:39:37,360 --> 01:39:41,040
it outputs there the code of the

01:39:39,520 --> 01:39:41,679
contract and then it also output the

01:39:41,040 --> 01:39:43,040
storage

01:39:41,679 --> 01:39:44,960
so when you look at this contract

01:39:43,040 --> 01:39:47,440
storage

01:39:44,960 --> 01:39:48,080
um and so this is here because of this

01:39:47,440 --> 01:39:49,600
plus c

01:39:48,080 --> 01:39:51,280
right because we're adding this contract

01:39:49,600 --> 01:39:53,760
to this uh

01:39:51,280 --> 01:39:55,440
to the scenario and this is this

01:39:53,760 --> 01:39:56,560
basically this side is always called the

01:39:55,440 --> 01:39:58,719
scenario right

01:39:56,560 --> 01:40:00,400
and so when you look at this carefully

01:39:58,719 --> 01:40:02,320
uh you can see that whatever code we

01:40:00,400 --> 01:40:06,159
have here is what is also here

01:40:02,320 --> 01:40:09,199
and then this is the

01:40:06,159 --> 01:40:12,239
um the registrar's okay

01:40:09,199 --> 01:40:14,960
and then there's a manager so let's go

01:40:12,239 --> 01:40:14,960
here and then

01:40:15,840 --> 01:40:22,480
you can see uh

01:40:19,119 --> 01:40:24,080
this is much these by the types so when

01:40:22,480 --> 01:40:27,199
you look at the storage

01:40:24,080 --> 01:40:31,760
the manager part right is stored as

01:40:27,199 --> 01:40:34,960
sp dot t address so in smart buy

01:40:31,760 --> 01:40:36,320
uh all these modify types

01:40:34,960 --> 01:40:39,360
okay so when you go to type in

01:40:36,320 --> 01:40:39,360
smartphone go to

01:40:39,840 --> 01:40:42,159
um

01:40:43,360 --> 01:40:50,800
just let's go there and so all the types

01:40:47,040 --> 01:40:52,960
are represented sp dot t something so if

01:40:50,800 --> 01:40:56,239
you have boolean sp dot t bull

01:40:52,960 --> 01:40:57,600
into the s b dot t and is n it is

01:40:56,239 --> 01:41:00,880
natural number sp dot t

01:40:57,600 --> 01:41:04,080
not or no negative numbers

01:41:00,880 --> 01:41:06,480
and s b dot t end or not so

01:41:04,080 --> 01:41:07,199
sp.t string you see you get idea all

01:41:06,480 --> 01:41:10,800
right

01:41:07,199 --> 01:41:12,719
so we have uh something called these are

01:41:10,800 --> 01:41:13,280
specific so this is related to tesla's

01:41:12,719 --> 01:41:15,199
itself

01:41:13,280 --> 01:41:16,320
and you see that because tesla's is a

01:41:15,199 --> 01:41:17,679
blockchain

01:41:16,320 --> 01:41:19,760
and that is where you get the addresses

01:41:17,679 --> 01:41:23,199
and all of that so fb.t

01:41:19,760 --> 01:41:23,199
address right

01:41:26,880 --> 01:41:31,679
so here's an example of yeah i think

01:41:30,080 --> 01:41:34,639
i've not shown you is also addressed up

01:41:31,679 --> 01:41:36,239
to now yeah my bad so this is an example

01:41:34,639 --> 01:41:38,960
of a teaser's

01:41:36,239 --> 01:41:39,360
public address or public key hash right

01:41:38,960 --> 01:41:42,800
see

01:41:39,360 --> 01:41:44,960
it in it start with tz1 sometimes you

01:41:42,800 --> 01:41:46,480
have tz2 or tz3

01:41:44,960 --> 01:41:48,000
and then we have the rest of this stuff

01:41:46,480 --> 01:41:51,920
here i mean if you want to let

01:41:48,000 --> 01:41:51,920
know more about this stuff um

01:41:52,159 --> 01:41:56,239
you can visit this site right this dot

01:41:54,719 --> 01:41:58,000
kids lab dot ibo

01:41:56,239 --> 01:41:59,280
so when you visit this dot git lab dot

01:41:58,000 --> 01:42:02,239
io you can know

01:41:59,280 --> 01:42:03,600
more these are specific types stuff but

01:42:02,239 --> 01:42:05,520
most of this stuff you don't really need

01:42:03,600 --> 01:42:06,960
to know the right smart contract and you

01:42:05,520 --> 01:42:08,880
just need to understand

01:42:06,960 --> 01:42:10,480
how was the difference between these

01:42:08,880 --> 01:42:14,480
addresses and all of that and

01:42:10,480 --> 01:42:18,000
that is it so

01:42:14,480 --> 01:42:19,360
um and also when we look at

01:42:18,000 --> 01:42:21,280
see we have the storage and then we have

01:42:19,360 --> 01:42:22,639
the entry point so entry point we have

01:42:21,280 --> 01:42:26,000
add registrar so this

01:42:22,639 --> 01:42:28,960
entry point is going to act like um an

01:42:26,000 --> 01:42:30,159
endpoint or an api endpoint and then you

01:42:28,960 --> 01:42:32,000
later you're going to see that we can

01:42:30,159 --> 01:42:32,560
call this entry point directly and say

01:42:32,000 --> 01:42:34,400
okay

01:42:32,560 --> 01:42:36,719
i want to call add register entry point

01:42:34,400 --> 01:42:38,159
and i'm i'm calling with this that that

01:42:36,719 --> 01:42:39,920
and you can interact with the smart

01:42:38,159 --> 01:42:41,040
contract not the whole smart contract

01:42:39,920 --> 01:42:44,080
but just

01:42:41,040 --> 01:42:48,320
an entry point on a smart contract right

01:42:44,080 --> 01:42:49,920
that's nice so also when you come here

01:42:48,320 --> 01:42:51,360
to deploy my custom contract you can

01:42:49,920 --> 01:42:52,800
actually deploy the contract from this

01:42:51,360 --> 01:42:54,880
place

01:42:52,800 --> 01:42:56,560
and we'll do that very soon just now

01:42:54,880 --> 01:42:58,080
we'll do it uh

01:42:56,560 --> 01:43:01,040
before we even continue with the result

01:42:58,080 --> 01:43:03,040
application we'll just add a few

01:43:01,040 --> 01:43:04,320
after we define this remove registrar

01:43:03,040 --> 01:43:06,960
we'll do that

01:43:04,320 --> 01:43:07,760
and so um you see the storage it tells

01:43:06,960 --> 01:43:10,560
you that like

01:43:07,760 --> 01:43:11,840
um how many bytes are we using in the

01:43:10,560 --> 01:43:12,160
storage

01:43:11,840 --> 01:43:14,880
uh

01:43:12,160 --> 01:43:19,840
[Music]

01:43:14,880 --> 01:43:22,880
the code uh is taking 234 bytes

01:43:19,840 --> 01:43:24,960
and the combine everything is taking 405

01:43:22,880 --> 01:43:26,800
bytes so the storage is taking 171 and

01:43:24,960 --> 01:43:29,520
the code itself is taking

01:43:26,800 --> 01:43:31,119
um 234 bytes and everything combined is

01:43:29,520 --> 01:43:33,600
405 bytes

01:43:31,119 --> 01:43:34,560
right and the reason why this is

01:43:33,600 --> 01:43:37,760
important is

01:43:34,560 --> 01:43:40,159
because you are charged right for

01:43:37,760 --> 01:43:41,520
the storage on tables right so the

01:43:40,159 --> 01:43:45,360
storage

01:43:41,520 --> 01:43:50,239
goes for this this match one

01:43:45,360 --> 01:43:53,840
byte is so let's open the calculator

01:43:50,239 --> 01:43:53,840
all right

01:43:55,920 --> 01:43:59,920
so let's say one byte right is

01:43:58,400 --> 01:44:03,679
equivalent to

01:43:59,920 --> 01:44:07,199
uh zero point

01:44:03,679 --> 01:44:09,760
zero zero zero one jesus right

01:44:07,199 --> 01:44:11,440
and zero point zero zero one tells us so

01:44:09,760 --> 01:44:14,320
one t source is three dollars right so

01:44:11,440 --> 01:44:16,000
zero point zero zero one teslas

01:44:14,320 --> 01:44:18,320
that give us zero point zero three

01:44:16,000 --> 01:44:21,440
dollars right

01:44:18,320 --> 01:44:22,800
and so let's say if your code is like

01:44:21,440 --> 01:44:25,119
and your data everything gets one

01:44:22,800 --> 01:44:29,360
kilobyte then we have times

01:44:25,119 --> 01:44:32,639
one thousand so that's three dollars

01:44:29,360 --> 01:44:34,719
for one for one kilobyte of uh payload

01:44:32,639 --> 01:44:36,480
over here you know so if everything if

01:44:34,719 --> 01:44:38,000
something which is one kilobyte it means

01:44:36,480 --> 01:44:40,320
you have three dollars

01:44:38,000 --> 01:44:41,119
cost all right and this is going to

01:44:40,320 --> 01:44:42,560
increase

01:44:41,119 --> 01:44:44,159
as the value of t source increases

01:44:42,560 --> 01:44:46,719
because

01:44:44,159 --> 01:44:48,080
the cost of storage is stated in the

01:44:46,719 --> 01:44:51,360
teasers not in dollars

01:44:48,080 --> 01:44:52,080
so at first it was 0.001 jesus and at

01:44:51,360 --> 01:44:54,560
first

01:44:52,080 --> 01:44:56,400
right it wasn't the problem really

01:44:54,560 --> 01:44:59,920
because at first once he's also was like

01:44:56,400 --> 01:45:01,360
0.9 dollars right it was like 0.9

01:44:59,920 --> 01:45:04,400
dollars

01:45:01,360 --> 01:45:07,600
and in just like um a few months

01:45:04,400 --> 01:45:08,880
now once is what 30 dollars and so you

01:45:07,600 --> 01:45:12,480
see that the cost of storage

01:45:08,880 --> 01:45:16,480
also increases right good

01:45:12,480 --> 01:45:17,280
so uh so yeah so that's one of the

01:45:16,480 --> 01:45:20,159
things you should note

01:45:17,280 --> 01:45:21,360
that your your smart contract doesn't

01:45:20,159 --> 01:45:22,000
have to store a lot of things you have

01:45:21,360 --> 01:45:23,760
to be

01:45:22,000 --> 01:45:25,360
very strategic when it comes to using

01:45:23,760 --> 01:45:29,440
smart contracts to start stuff

01:45:25,360 --> 01:45:30,880
all right so uh

01:45:29,440 --> 01:45:33,040
so when we look here we see the storage

01:45:30,880 --> 01:45:35,840
of the smart contracts this is microsoft

01:45:33,040 --> 01:45:37,280
and we also see the code right so this

01:45:35,840 --> 01:45:40,159
smart spider refrigeration here

01:45:37,280 --> 01:45:40,960
has been compiled into this code i mean

01:45:40,159 --> 01:45:42,880
i mean this

01:45:40,960 --> 01:45:44,480
this pla this place right i'm talking

01:45:42,880 --> 01:45:46,000
about this part this bus is just for

01:45:44,480 --> 01:45:47,600
testing so it's not part

01:45:46,000 --> 01:45:49,119
but what device here has been compiled

01:45:47,600 --> 01:45:54,320
into this microsoft

01:45:49,119 --> 01:45:57,119
code over here right and because in code

01:45:54,320 --> 01:45:57,360
can actually be also converted to json

01:45:57,119 --> 01:45:59,360
in

01:45:57,360 --> 01:46:00,560
house adjacent format right so whatever

01:45:59,360 --> 01:46:02,800
is here

01:46:00,560 --> 01:46:03,600
this is the json format and whatever is

01:46:02,800 --> 01:46:06,000
here

01:46:03,600 --> 01:46:07,679
the the device here which is makers and

01:46:06,000 --> 01:46:10,080
this is the json format right

01:46:07,679 --> 01:46:10,880
so let's go back to smart buy and we see

01:46:10,080 --> 01:46:13,840
a nice

01:46:10,880 --> 01:46:13,840
visual or something

01:46:14,239 --> 01:46:21,199
also let's before we we try to

01:46:18,159 --> 01:46:25,280
add define remove register list

01:46:21,199 --> 01:46:26,400
let's um let's try to invoke the add

01:46:25,280 --> 01:46:29,040
registrar function

01:46:26,400 --> 01:46:31,760
right so who can add a registrar is a

01:46:29,040 --> 01:46:33,600
manager who can add a registrar

01:46:31,760 --> 01:46:34,960
right now we have already have three

01:46:33,600 --> 01:46:36,880
registers there

01:46:34,960 --> 01:46:39,280
so let's say we want to create a

01:46:36,880 --> 01:46:42,639
scenario

01:46:39,280 --> 01:46:46,320
we want to add to our scenarios h2

01:46:42,639 --> 01:46:51,119
let's say add

01:46:46,320 --> 01:46:51,119
registrar so

01:46:51,360 --> 01:46:59,679
right so let's create a fourth registrar

01:46:56,719 --> 01:47:01,119
register for so we assume that output to

01:46:59,679 --> 01:47:02,639
this point we have deployed the contract

01:47:01,119 --> 01:47:04,960
and now we want to call

01:47:02,639 --> 01:47:07,040
the address track endpoint of the

01:47:04,960 --> 01:47:12,239
contract to add registrar

01:47:07,040 --> 01:47:12,239
for right so r4

01:47:13,040 --> 01:47:16,080
and so what we do the contract is c1 is

01:47:15,760 --> 01:47:19,679
c

01:47:16,080 --> 01:47:19,679
right so we just say

01:47:20,320 --> 01:47:28,239
so instead of uh we just a scenario

01:47:24,239 --> 01:47:31,360
plus equals c dot

01:47:28,239 --> 01:47:33,119
add register

01:47:31,360 --> 01:47:35,119
so you know in this scenario anything

01:47:33,119 --> 01:47:37,199
you append it your pen here

01:47:35,119 --> 01:47:39,199
will be appended here right and so i'm

01:47:37,199 --> 01:47:41,119
just calling this contract

01:47:39,199 --> 01:47:43,360
i'm just calling this endpoint or this

01:47:41,119 --> 01:47:44,960
function in this contract which is just

01:47:43,360 --> 01:47:46,719
a class right so don't let your mind go

01:47:44,960 --> 01:47:51,199
for you in fact this is just a class

01:47:46,719 --> 01:47:54,000
and so add registrar and then

01:47:51,199 --> 01:47:55,119
the add registrar i need to you see

01:47:54,000 --> 01:47:57,520
these params

01:47:55,119 --> 01:47:58,239
as i mentioned we can get our data from

01:47:57,520 --> 01:48:01,360
here

01:47:58,239 --> 01:48:03,600
and so whatever i say here as maybe if i

01:48:01,360 --> 01:48:06,880
say register

01:48:03,600 --> 01:48:08,800
right is equal to r for dot

01:48:06,880 --> 01:48:10,239
address remember we had an error with

01:48:08,800 --> 01:48:12,880
that right

01:48:10,239 --> 01:48:14,080
it's going to that is what is going to

01:48:12,880 --> 01:48:16,239
appear here right

01:48:14,080 --> 01:48:17,119
so if if say i'm to define something

01:48:16,239 --> 01:48:20,320
else like

01:48:17,119 --> 01:48:22,159
um land

01:48:20,320 --> 01:48:23,800
is equal to something then i can access

01:48:22,159 --> 01:48:28,000
it here as

01:48:23,800 --> 01:48:29,840
params.land right so

01:48:28,000 --> 01:48:32,000
if you want to get something from params

01:48:29,840 --> 01:48:35,199
here you have to explicitly state

01:48:32,000 --> 01:48:37,360
it here and then equals the value right

01:48:35,199 --> 01:48:39,360
so i get you i mean you get what i mean

01:48:37,360 --> 01:48:44,000
i mean right

01:48:39,360 --> 01:48:44,000
so this is the con this is the

01:48:45,199 --> 01:48:53,199
d um the endpoint add registrar

01:48:49,840 --> 01:48:54,800
and now we can't we can't finish it so

01:48:53,199 --> 01:48:56,960
we say dot run

01:48:54,800 --> 01:48:58,560
so when you go to the reference manual

01:48:56,960 --> 01:49:01,760
where it gives you the test

01:48:58,560 --> 01:49:03,360
tools tools for testing right to call

01:49:01,760 --> 01:49:04,800
you can call an endpoint and then you

01:49:03,360 --> 01:49:06,880
can say dot

01:49:04,800 --> 01:49:08,800
run and then you can specify the sender

01:49:06,880 --> 01:49:09,679
that saw the amount and now the valid

01:49:08,800 --> 01:49:11,040
and all of that

01:49:09,679 --> 01:49:12,800
so right now let's say we are interested

01:49:11,040 --> 01:49:14,880
in the sender okay

01:49:12,800 --> 01:49:15,840
we'll look at other ones later so the

01:49:14,880 --> 01:49:19,760
front

01:49:15,840 --> 01:49:22,480
sender because

01:49:19,760 --> 01:49:23,840
manager right so what it means is that

01:49:22,480 --> 01:49:25,440
in here we are simulating that the

01:49:23,840 --> 01:49:28,080
person sending the contract

01:49:25,440 --> 01:49:30,239
is this monitor right this is the

01:49:28,080 --> 01:49:31,760
manager we used to initiate this

01:49:30,239 --> 01:49:34,000
contract so this manager

01:49:31,760 --> 01:49:35,920
already exists here in this contract

01:49:34,000 --> 01:49:37,280
right and so now let's run this and see

01:49:35,920 --> 01:49:39,679
what happens

01:49:37,280 --> 01:49:41,440
as well around this and see you see that

01:49:39,679 --> 01:49:42,400
we can now scroll here because more has

01:49:41,440 --> 01:49:45,920
been added

01:49:42,400 --> 01:49:49,599
and we can see our h2 that we added here

01:49:45,920 --> 01:49:51,199
is a add registrar and then

01:49:49,599 --> 01:49:52,800
uh so this is the thing we call the

01:49:51,199 --> 01:49:54,480
address strap function

01:49:52,800 --> 01:49:56,320
and then we pass it this parameter

01:49:54,480 --> 01:49:59,440
registrar which was

01:49:56,320 --> 01:50:01,760
with who is like uh yeah just

01:49:59,440 --> 01:50:03,760
the address of the registrar and so you

01:50:01,760 --> 01:50:06,400
can see that now on the registration

01:50:03,760 --> 01:50:08,239
initially directory now the storage has

01:50:06,400 --> 01:50:10,719
increased to four registers right

01:50:08,239 --> 01:50:12,239
and the manager is still uh the same

01:50:10,719 --> 01:50:15,920
thing the same manager here

01:50:12,239 --> 01:50:20,480
right so let's try something else

01:50:15,920 --> 01:50:20,480
so instead of calling the ad registrar

01:50:21,440 --> 01:50:25,840
wait uh

01:50:28,719 --> 01:50:33,679
so let's just call registrar here

01:50:34,320 --> 01:50:40,800
and just copy and paste here and let me

01:50:37,440 --> 01:50:40,800
just copy and paste also this

01:50:41,520 --> 01:50:51,520
right add registrar with

01:50:45,199 --> 01:50:51,520
wrong manager and i say registrar 5

01:50:51,679 --> 01:50:57,119
register five so i just got a five dot

01:50:54,639 --> 01:50:57,119
address

01:50:57,520 --> 01:51:04,080
and i say run sender

01:51:00,960 --> 01:51:05,040
equals maybe let me create another

01:51:04,080 --> 01:51:08,800
manager

01:51:05,040 --> 01:51:08,800
and call that person wrong right

01:51:10,719 --> 01:51:13,360
so wrong

01:51:16,639 --> 01:51:22,639
um let me see yeah i

01:51:19,679 --> 01:51:25,199
wrong okay that's wrong it's fine and as

01:51:22,639 --> 01:51:25,199
a wrong

01:51:27,040 --> 01:51:32,639
okay so

01:51:30,480 --> 01:51:34,560
let's see what happens when i call this

01:51:32,639 --> 01:51:36,000
we get a pop-up right

01:51:34,560 --> 01:51:38,320
and what is the pop-up saying that

01:51:36,000 --> 01:51:41,440
unexpected error

01:51:38,320 --> 01:51:43,280
in transaction pre-use okay fine so

01:51:41,440 --> 01:51:45,119
zero dot run valid equals force will

01:51:43,280 --> 01:51:47,840
come to that he said wrong condition in

01:51:45,119 --> 01:51:49,280
line 15 you see this is line 15 and this

01:51:47,840 --> 01:51:51,119
is where we are doing the verified equal

01:51:49,280 --> 01:51:52,560
the sender is equal to solve the data

01:51:51,119 --> 01:51:54,480
dot manager

01:51:52,560 --> 01:51:56,239
in the unauthorized account you're not

01:51:54,480 --> 01:52:00,239
you're not manager right

01:51:56,239 --> 01:52:02,080
so we know that this is supposed to be

01:52:00,239 --> 01:52:04,000
wrong right you know that is supposed to

01:52:02,080 --> 01:52:06,639
be invalid this because this line

01:52:04,000 --> 01:52:08,480
because of this line because this add

01:52:06,639 --> 01:52:10,480
register function has to be called

01:52:08,480 --> 01:52:12,000
by the manager right or has to be sent

01:52:10,480 --> 01:52:13,199
by the manager in in this case we are

01:52:12,000 --> 01:52:14,800
not sending it with the manager you are

01:52:13,199 --> 01:52:16,719
sending it to different accounts

01:52:14,800 --> 01:52:18,400
and so we know that this has to be wrong

01:52:16,719 --> 01:52:20,159
and so we have to say that

01:52:18,400 --> 01:52:22,719
valid in order to prevent the pop-up

01:52:20,159 --> 01:52:24,800
from showing we say valid equals force

01:52:22,719 --> 01:52:26,000
which we do not let smartphone know that

01:52:24,800 --> 01:52:28,719
we are expecting that this

01:52:26,000 --> 01:52:29,520
one will be a force so now let's run it

01:52:28,719 --> 01:52:31,679
again

01:52:29,520 --> 01:52:32,639
and yeah nothing pops up but when we

01:52:31,679 --> 01:52:34,639
scroll down

01:52:32,639 --> 01:52:36,080
we see that this is in red which means

01:52:34,639 --> 01:52:36,719
that there was a wrong condition on line

01:52:36,080 --> 01:52:38,800
01:52:36,719 --> 01:52:40,719
and when we go there i said on

01:52:38,800 --> 01:52:42,960
authorized action you are not manager

01:52:40,719 --> 01:52:44,080
why because we are calling this with the

01:52:42,960 --> 01:52:46,239
wrong sender

01:52:44,080 --> 01:52:48,080
and you soon you realize that when we

01:52:46,239 --> 01:52:50,480
deploy this and to actually on the

01:52:48,080 --> 01:52:52,239
on to these blockchain itself and we

01:52:50,480 --> 01:52:55,280
don't call it a correct manager

01:52:52,239 --> 01:52:58,639
it it will give us a invalid

01:52:55,280 --> 01:53:00,880
kind of uh results okay

01:52:58,639 --> 01:53:00,880
so

01:53:02,159 --> 01:53:07,040
yeah so now so basically

01:53:05,360 --> 01:53:08,639
what we have here is some cool

01:53:07,040 --> 01:53:09,760
authentication without even doing

01:53:08,639 --> 01:53:12,159
anything right

01:53:09,760 --> 01:53:12,880
so the manager is the person who has a

01:53:12,159 --> 01:53:15,280
private key

01:53:12,880 --> 01:53:18,000
of this manager guy and that is the only

01:53:15,280 --> 01:53:20,400
person who can call this ad ready trap

01:53:18,000 --> 01:53:21,520
and so by remove vegeta i'm sure you by

01:53:20,400 --> 01:53:22,880
now you know

01:53:21,520 --> 01:53:24,480
you have an idea of how to do that

01:53:22,880 --> 01:53:25,119
remove registrar so let's just say

01:53:24,480 --> 01:53:29,360
something

01:53:25,119 --> 01:53:34,239
so you say something like this

01:53:29,360 --> 01:53:34,239
right then

01:53:35,119 --> 01:53:42,639
and then we say

01:53:38,480 --> 01:53:42,639
cell dot data dot registers

01:53:43,199 --> 01:53:46,800
uh we can just copy this but

01:53:47,840 --> 01:53:54,960
now with sets

01:53:51,119 --> 01:53:56,000
you can call you something called remove

01:53:54,960 --> 01:53:59,520
and you can remove

01:53:56,000 --> 01:54:03,119
an element from the set so don't remove

01:53:59,520 --> 01:54:09,840
and we can say params.register

01:54:03,119 --> 01:54:09,840
registrar right

01:54:10,400 --> 01:54:18,400
and so we have also added the

01:54:14,800 --> 01:54:21,040
the remove registrar command

01:54:18,400 --> 01:54:21,679
and so by now you are familiar with this

01:54:21,040 --> 01:54:23,920
all right

01:54:21,679 --> 01:54:25,599
so let's test that one too so remove

01:54:23,920 --> 01:54:26,719
registrar we know that only the manager

01:54:25,599 --> 01:54:27,679
is supposed to be able to remove

01:54:26,719 --> 01:54:30,719
registrar

01:54:27,679 --> 01:54:33,840
so first of all let's let's call that

01:54:30,719 --> 01:54:35,840
so let's call the remove registrar

01:54:33,840 --> 01:54:37,520
with the correct manager and then later

01:54:35,840 --> 01:54:40,960
we'll come and call the remove registrar

01:54:37,520 --> 01:54:44,639
with the wrong manager right

01:54:40,960 --> 01:54:44,639
so remove ready try i'm going to remove

01:54:47,520 --> 01:54:51,840
remove registrar

01:54:57,760 --> 01:55:00,800
that's a mosquito disturbing us over

01:54:59,599 --> 01:55:04,560
here

01:55:00,800 --> 01:55:07,840
and we have a

01:55:04,560 --> 01:55:12,159
gender to remove and i want to remove

01:55:07,840 --> 01:55:15,360
registrar one right so note

01:55:12,159 --> 01:55:17,599
one of these registers will be removed

01:55:15,360 --> 01:55:20,080
and then we are going to send manager

01:55:17,599 --> 01:55:22,400
yeah so let's run and see

01:55:20,080 --> 01:55:23,520
and yeah you see so from the start we

01:55:22,400 --> 01:55:24,880
had

01:55:23,520 --> 01:55:28,560
three registrations and then we called

01:55:24,880 --> 01:55:28,560
add registrar and then

01:55:28,719 --> 01:55:34,080
we added this registrar right and then

01:55:32,400 --> 01:55:36,320
we called we intentionally called i

01:55:34,080 --> 01:55:37,599
remove add registration monitor so it

01:55:36,320 --> 01:55:38,960
should give us an error

01:55:37,599 --> 01:55:40,480
if next time we are doing this and we

01:55:38,960 --> 01:55:41,760
don't get an error it means that there's

01:55:40,480 --> 01:55:43,119
something wrong with our code and we can

01:55:41,760 --> 01:55:46,320
go and change that

01:55:43,119 --> 01:55:47,599
and we call remove registrar removing

01:55:46,320 --> 01:55:51,119
this guy

01:55:47,599 --> 01:55:52,960
that's one g a gen z so when we come

01:55:51,119 --> 01:55:56,719
here we can see that we have

01:55:52,960 --> 01:55:58,400
t z one g a g z here this is apparently

01:55:56,719 --> 01:56:00,000
register one

01:55:58,400 --> 01:56:02,239
because minus necessarily in order is a

01:56:00,000 --> 01:56:05,440
set so it doesn't have to be in order

01:56:02,239 --> 01:56:09,440
and now we have three registers

01:56:05,440 --> 01:56:09,440
yes so

01:56:09,679 --> 01:56:17,280
let's do this you need to do this just

01:56:12,840 --> 01:56:20,320
uh remove registrar

01:56:17,280 --> 01:56:20,960
with the wrong manager right so once you

01:56:20,320 --> 01:56:24,480
do this

01:56:20,960 --> 01:56:26,159
uh in case you end up changing

01:56:24,480 --> 01:56:28,320
you know you you know the importance of

01:56:26,159 --> 01:56:31,440
tests so this is just a simple

01:56:28,320 --> 01:56:33,599
these are just simple tests to ensure

01:56:31,440 --> 01:56:33,599
that

01:56:34,159 --> 01:56:40,800
you don't mess up your code

01:56:37,280 --> 01:56:41,199
so scenario.remove registrar and then we

01:56:40,800 --> 01:56:43,440
say

01:56:41,199 --> 01:56:45,679
we are going to use the wrong manager

01:56:43,440 --> 01:56:47,599
all right

01:56:45,679 --> 01:56:48,960
and let's try to remove registrar 2

01:56:47,599 --> 01:56:51,440
since register 1 has already been

01:56:48,960 --> 01:56:51,440
removed

01:56:52,960 --> 01:56:56,400
oh yeah so we are expecting this to be

01:56:55,840 --> 01:57:00,159
false

01:56:56,400 --> 01:57:03,280
so we say valid equals false

01:57:00,159 --> 01:57:04,159
and then yeah so when we scroll down we

01:57:03,280 --> 01:57:06,480
see

01:57:04,159 --> 01:57:08,320
remove registrar right unauthorized

01:57:06,480 --> 01:57:12,719
action you are not manager

01:57:08,320 --> 01:57:12,719
good so wrong it's not money yeah

01:57:12,960 --> 01:57:17,360
so that is

01:57:17,760 --> 01:57:22,159
the initial part of this contract right

01:57:20,400 --> 01:57:23,199
so now we have a registrar who can add

01:57:22,159 --> 01:57:25,199
managers and remove

01:57:23,199 --> 01:57:26,320
it sorry i have a monitor add a remove

01:57:25,199 --> 01:57:28,800
registration

01:57:26,320 --> 01:57:30,639
and all of that so this manager will be

01:57:28,800 --> 01:57:33,840
in charge of the contract itself

01:57:30,639 --> 01:57:35,599
adding and removing registers and this

01:57:33,840 --> 01:57:38,880
and does and this

01:57:35,599 --> 01:57:42,080
all right okay

01:57:38,880 --> 01:57:43,520
so hopefully this will demonstrate to

01:57:42,080 --> 01:57:46,400
you like

01:57:43,520 --> 01:57:47,360
uh under use all right so this contract

01:57:46,400 --> 01:57:49,360
is good enough

01:57:47,360 --> 01:57:50,880
we can launch this contract on the test

01:57:49,360 --> 01:57:53,599
blockchain

01:57:50,880 --> 01:57:54,080
but we are going to launch it on the

01:57:53,599 --> 01:57:57,280
sorry

01:57:54,080 --> 01:57:59,119
on the test net so

01:57:57,280 --> 01:58:01,360
um yeah when we come here you can see

01:57:59,119 --> 01:58:02,960
storage code

01:58:01,360 --> 01:58:04,639
you can see now the code has increased

01:58:02,960 --> 01:58:06,960
in volume you know

01:58:04,639 --> 01:58:07,760
all of that and all of that a lot of

01:58:06,960 --> 01:58:11,360
things

01:58:07,760 --> 01:58:20,320
so these tabs are not really

01:58:11,360 --> 01:58:23,280
apparent but

01:58:20,320 --> 01:58:26,960
so deploy my custom contract so when you

01:58:23,280 --> 01:58:30,880
click on deploy my custom contract

01:58:26,960 --> 01:58:30,880
it will take you to a different tab

01:58:31,199 --> 01:58:35,840
and with this tab

01:58:37,280 --> 01:58:41,920
so tezos has at any point in time it

01:58:41,040 --> 01:58:45,840
does have

01:58:41,920 --> 01:58:49,760
three um networks running right

01:58:45,840 --> 01:58:51,760
so one is mainnet one is cottage net

01:58:49,760 --> 01:58:54,159
and then one is zero net i don't know

01:58:51,760 --> 01:58:57,679
what this lab net is for but

01:58:54,159 --> 01:58:57,679
the main net cutting netting

01:58:57,760 --> 01:59:04,159
yeah something anyway

01:59:01,199 --> 01:59:05,280
so main net cutted net and zero net so

01:59:04,159 --> 01:59:08,320
i'll explain to you what

01:59:05,280 --> 01:59:10,560
uh this main net is so main net

01:59:08,320 --> 01:59:11,840
is the main thing that the attract is

01:59:10,560 --> 01:59:15,119
just blocking

01:59:11,840 --> 01:59:17,520
right and over here whatever you do

01:59:15,119 --> 01:59:19,199
actually cost money i mean this is where

01:59:17,520 --> 01:59:22,560
like

01:59:19,199 --> 01:59:25,840
the t-zone crypto has value

01:59:22,560 --> 01:59:30,320
right and then carthage net also

01:59:25,840 --> 01:59:32,800
known as test net because um

01:59:30,320 --> 01:59:33,599
i previously it was called babylon net

01:59:32,800 --> 01:59:35,679
right

01:59:33,599 --> 01:59:36,719
so the reason why it's called carthage

01:59:35,679 --> 01:59:38,880
net even though

01:59:36,719 --> 01:59:40,400
it's actually referring to the testing

01:59:38,880 --> 01:59:42,400
it is that

01:59:40,400 --> 01:59:43,440
currently jesus is running on a protocol

01:59:42,400 --> 01:59:46,480
called carthage

01:59:43,440 --> 01:59:47,360
right so it is able to upgrade itself to

01:59:46,480 --> 01:59:49,280
new protocols

01:59:47,360 --> 01:59:50,639
and the current protocol that jesus has

01:59:49,280 --> 01:59:53,360
applicated itself to

01:59:50,639 --> 01:59:54,000
is called a cottage protocol and so the

01:59:53,360 --> 01:59:56,080
test

01:59:54,000 --> 01:59:57,199
net for that cathode protocol is the

01:59:56,080 --> 01:59:59,199
carthage net

01:59:57,199 --> 02:00:00,320
now on this cartridge net i mean that

01:59:59,199 --> 02:00:01,440
doesn't matter but

02:00:00,320 --> 02:00:03,360
the important thing is that on this

02:00:01,440 --> 02:00:04,400
category you can play with every

02:00:03,360 --> 02:00:06,320
anything you want

02:00:04,400 --> 02:00:07,520
all the teasers you want and all of that

02:00:06,320 --> 02:00:10,080
and you can actually get

02:00:07,520 --> 02:00:11,440
free teasers and all of to play with and

02:00:10,080 --> 02:00:14,400
it doesn't

02:00:11,440 --> 02:00:15,119
have any value like it's just a place

02:00:14,400 --> 02:00:18,239
where you can

02:00:15,119 --> 02:00:20,719
it's just a playground which is also

02:00:18,239 --> 02:00:22,719
like a blocking network on its own i

02:00:20,719 --> 02:00:24,320
mean but it's just a playground

02:00:22,719 --> 02:00:26,080
so that you can test your applications

02:00:24,320 --> 02:00:27,119
there if your application works on the

02:00:26,080 --> 02:00:29,119
cartridge net

02:00:27,119 --> 02:00:31,040
that means if you deploy it to the main

02:00:29,119 --> 02:00:32,560
net it will work there right

02:00:31,040 --> 02:00:35,599
so right now we just select cartridge

02:00:32,560 --> 02:00:39,360
net good

02:00:35,599 --> 02:00:42,239
and then you're asking us because

02:00:39,360 --> 02:00:42,639
we we say we want to deploy a contract

02:00:42,239 --> 02:00:44,159
right

02:00:42,639 --> 02:00:45,760
and in these terms it's called

02:00:44,159 --> 02:00:48,239
origination direct

02:00:45,760 --> 02:00:50,000
network contract origination right so we

02:00:48,239 --> 02:00:52,560
are going to originate this contract

02:00:50,000 --> 02:00:54,159
onto the carthage net we could have

02:00:52,560 --> 02:00:55,599
originated to main net but

02:00:54,159 --> 02:00:57,199
we are just playing with it so we're

02:00:55,599 --> 02:00:59,440
going to cut thickness

02:00:57,199 --> 02:01:01,119
we test it over there and then once

02:00:59,440 --> 02:01:01,840
everything is working well we go to cut

02:01:01,119 --> 02:01:05,760
maintenance

02:01:01,840 --> 02:01:08,560
but for now carthage net and then

02:01:05,760 --> 02:01:10,159
um to be able to do anything on twitter

02:01:08,560 --> 02:01:11,599
actually you need a teaser's account and

02:01:10,159 --> 02:01:15,599
by teachers account

02:01:11,599 --> 02:01:16,960
i mean you have the teasers public he

02:01:15,599 --> 02:01:18,080
has you have private key and then you

02:01:16,960 --> 02:01:21,119
have public key

02:01:18,080 --> 02:01:23,599
all right so

02:01:21,119 --> 02:01:25,119
we need a private key account and an

02:01:23,599 --> 02:01:27,360
account right

02:01:25,119 --> 02:01:28,320
so on the carted net you can actually

02:01:27,360 --> 02:01:30,800
generate some

02:01:28,320 --> 02:01:32,159
so here you see that we have um for the

02:01:30,800 --> 02:01:35,760
smart pi wallet

02:01:32,159 --> 02:01:36,480
a ledger wallet and then plain text case

02:01:35,760 --> 02:01:38,239
all right

02:01:36,480 --> 02:01:39,520
so if you look at here very well we have

02:01:38,239 --> 02:01:40,960
something called the wallet so we're

02:01:39,520 --> 02:01:42,400
going i'm going to open this in a new

02:01:40,960 --> 02:01:45,199
tab

02:01:42,400 --> 02:01:47,920
and then from the wallet i'm going to

02:01:45,199 --> 02:01:47,920
create a wallet

02:01:48,840 --> 02:01:53,920
okay

02:01:50,080 --> 02:01:57,599
so let's go to photo account

02:01:53,920 --> 02:02:00,320
and then go to faucet importer right

02:01:57,599 --> 02:02:02,400
so since we are under carted net um

02:02:00,320 --> 02:02:05,760
teachers to make development easy

02:02:02,400 --> 02:02:09,199
right these are actually like have this

02:02:05,760 --> 02:02:12,719
kind of way that you can

02:02:09,199 --> 02:02:14,159
get a free account or a quick account we

02:02:12,719 --> 02:02:15,199
are going to try to get three different

02:02:14,159 --> 02:02:18,800
accounts

02:02:15,199 --> 02:02:20,400
all right so you say get tested

02:02:18,800 --> 02:02:22,480
right so this account to work on the

02:02:20,400 --> 02:02:24,480
test net which i would explain that

02:02:22,480 --> 02:02:27,119
it is actually what is being called the

02:02:24,480 --> 02:02:30,960
category so we copy this

02:02:27,119 --> 02:02:35,119
and then we come and paste it here

02:02:30,960 --> 02:02:37,119
right and so when we place this here

02:02:35,119 --> 02:02:38,159
then we see we click on computer private

02:02:37,119 --> 02:02:42,000
key

02:02:38,159 --> 02:02:46,639
and so this is our private key all right

02:02:42,000 --> 02:02:49,440
and then we see saving wallet account

02:02:46,639 --> 02:02:50,400
right so it will make it easier for us

02:02:49,440 --> 02:02:53,040
to

02:02:50,400 --> 02:02:54,000
do things with this later and then we

02:02:53,040 --> 02:02:55,920
say

02:02:54,000 --> 02:02:58,320
it's on the card net so we say activate

02:02:55,920 --> 02:03:00,560
account

02:02:58,320 --> 02:03:01,360
so for the account we recognize on the

02:03:00,560 --> 02:03:03,199
blockchain

02:03:01,360 --> 02:03:04,560
now this account are actually generated

02:03:03,199 --> 02:03:06,239
off the chain right

02:03:04,560 --> 02:03:08,480
so the way account generation happens is

02:03:06,239 --> 02:03:10,159
that uh

02:03:08,480 --> 02:03:12,880
the private key and the public key are

02:03:10,159 --> 02:03:14,480
generated it's not like that

02:03:12,880 --> 02:03:16,960
network generated for you but you

02:03:14,480 --> 02:03:18,800
generated

02:03:16,960 --> 02:03:20,159
outside of the network as once you

02:03:18,800 --> 02:03:22,080
generate it outside of the network you

02:03:20,159 --> 02:03:24,800
have to let the network know

02:03:22,080 --> 02:03:26,880
that i've generated this case and the

02:03:24,800 --> 02:03:30,080
way the number of possibilities

02:03:26,880 --> 02:03:32,400
is too much so much so that no two kids

02:03:30,080 --> 02:03:35,599
will ever be the same

02:03:32,400 --> 02:03:38,000
i mean the probability is low so

02:03:35,599 --> 02:03:39,760
we've activated our account you wait a

02:03:38,000 --> 02:03:43,040
little while and then you reveal

02:03:39,760 --> 02:03:45,599
click on account

02:03:43,040 --> 02:03:47,679
and then say revelation okay so once

02:03:45,599 --> 02:03:57,840
that's done

02:03:47,679 --> 02:03:57,840
uh now let's see

02:04:00,320 --> 02:04:05,119
yeah so right now with this contract

02:04:02,639 --> 02:04:07,679
that we're about to deploy

02:04:05,119 --> 02:04:11,840
all right when we look here we look at

02:04:07,679 --> 02:04:11,840
the storage it says that there

02:04:14,239 --> 02:04:20,480
so storage this must be the

02:04:17,599 --> 02:04:22,880
managers a public key hash and this is

02:04:20,480 --> 02:04:25,599
the public key hashes of the

02:04:22,880 --> 02:04:26,800
of the certifiers that we have right the

02:04:25,599 --> 02:04:28,960
initial certifiers

02:04:26,800 --> 02:04:30,239
okay but now we want to use this way

02:04:28,960 --> 02:04:33,760
just for testing

02:04:30,239 --> 02:04:33,760
you want to use

02:04:35,360 --> 02:04:40,000
what we want is instead of using this

02:04:38,480 --> 02:04:42,320
guys

02:04:40,000 --> 02:04:45,599
all right i'm going to comment this out

02:04:42,320 --> 02:04:45,599
that's what i'm trying to do

02:04:50,840 --> 02:04:53,840
so

02:04:56,780 --> 02:05:01,920
[Music]

02:04:58,800 --> 02:05:06,239
yep so

02:05:01,920 --> 02:05:11,040
let's go ahead and then

02:05:06,239 --> 02:05:12,719
come here so you see that we have the

02:05:11,040 --> 02:05:14,960
the public key has here let's go ahead

02:05:12,719 --> 02:05:18,159
and copy this public key hash

02:05:14,960 --> 02:05:21,440
all right and say that one is a

02:05:18,159 --> 02:05:22,079
sp address and see that one is for the

02:05:21,440 --> 02:05:26,719
manager

02:05:22,079 --> 02:05:30,880
okay and then let's do let's create

02:05:26,719 --> 02:05:34,320
maybe three extra accounts

02:05:30,880 --> 02:05:37,440
right uh let me see

02:05:34,320 --> 02:05:37,440
two extra accounts

02:05:38,000 --> 02:05:41,440
so let's create two extra account

02:05:43,520 --> 02:05:50,960
and then yeah so that's

02:05:46,880 --> 02:05:50,960
just that's okay that's enough for now

02:05:53,520 --> 02:06:07,280
good good so when i run this

02:06:02,239 --> 02:06:10,880
oh yeah so sorry

02:06:07,280 --> 02:06:15,360
yeah and then

02:06:10,880 --> 02:06:18,159
so i need to change this and run this

02:06:15,360 --> 02:06:20,400
author is going to find yep other is not

02:06:18,159 --> 02:06:20,400
fine

02:06:24,400 --> 02:06:30,800
good so i need

02:06:27,520 --> 02:06:34,239
our scenario plus

02:06:30,800 --> 02:06:37,840
equals c and then we can see

02:06:34,239 --> 02:06:40,239
the others right so in this case we have

02:06:37,840 --> 02:06:42,400
i intentionally copied the account from

02:06:40,239 --> 02:06:44,960
here because this is

02:06:42,400 --> 02:06:46,480
this is what we are going to use on the

02:06:44,960 --> 02:06:49,199
on the

02:06:46,480 --> 02:06:50,320
for the origination but this also is

02:06:49,199 --> 02:06:53,199
available

02:06:50,320 --> 02:06:53,840
on the test net or the cartridge net so

02:06:53,199 --> 02:06:56,000
we need

02:06:53,840 --> 02:06:57,760
to use that for the manager right

02:06:56,000 --> 02:06:59,599
because these accounts the initial ones

02:06:57,760 --> 02:07:02,239
that we have here

02:06:59,599 --> 02:07:04,239
is for just for like uh tests and

02:07:02,239 --> 02:07:06,159
purposes and it is not available on the

02:07:04,239 --> 02:07:08,239
cartridge net on the test net

02:07:06,159 --> 02:07:09,920
but this one is what we just imported

02:07:08,239 --> 02:07:10,560
here and so that's what we are going to

02:07:09,920 --> 02:07:12,159
use

02:07:10,560 --> 02:07:14,159
right so let me go ahead and close this

02:07:12,159 --> 02:07:14,800
guy and then go to deploy magazine

02:07:14,159 --> 02:07:17,840
contract

02:07:14,800 --> 02:07:21,920
and click on deploy again

02:07:17,840 --> 02:07:26,159
and so now when we come here we see that

02:07:21,920 --> 02:07:30,480
our manager address is actually

02:07:26,159 --> 02:07:32,079
this address right and then we have our

02:07:30,480 --> 02:07:35,040
other fake address down for that we

02:07:32,079 --> 02:07:35,040
don't really care about it

02:07:38,840 --> 02:07:44,480
so

02:07:40,800 --> 02:07:45,599
and then also i already have some fake

02:07:44,480 --> 02:07:48,960
addresses i've ever

02:07:45,599 --> 02:07:53,520
generated from here so

02:07:48,960 --> 02:07:56,880
let me just go down

02:07:53,520 --> 02:07:58,800
and just say click on this guy so we can

02:07:56,880 --> 02:08:01,520
use the public key hash of this guy

02:07:58,800 --> 02:08:03,679
right okay so that's that so now let's

02:08:01,520 --> 02:08:03,679
go

02:08:04,800 --> 02:08:12,800
so retrieve faucet or implicit

02:08:08,719 --> 02:08:15,599
so when you click uh retrieve

02:08:12,800 --> 02:08:17,360
faucet and it's a select account right

02:08:15,599 --> 02:08:18,159
so this is the account we created from

02:08:17,360 --> 02:08:19,760
here

02:08:18,159 --> 02:08:22,560
and because we added saved into our

02:08:19,760 --> 02:08:25,760
wallet we can get it directly from here

02:08:22,560 --> 02:08:28,320
so close so now this is the guy

02:08:25,760 --> 02:08:30,560
right so we have an account that we are

02:08:28,320 --> 02:08:36,320
going to use to deploy the contract

02:08:30,560 --> 02:08:38,560
okay so now i click on deploy contract

02:08:36,320 --> 02:08:40,079
and then of course it's income so when

02:08:38,560 --> 02:08:42,560
you look at the contract

02:08:40,079 --> 02:08:43,679
it says the json encoding knows no

02:08:42,560 --> 02:08:46,320
script

02:08:43,679 --> 02:08:47,360
so actually this is it you see if you

02:08:46,320 --> 02:08:49,280
look at the script part

02:08:47,360 --> 02:08:50,800
it has removed the code aspect from it

02:08:49,280 --> 02:08:52,000
and you see the storage it talks about

02:08:50,800 --> 02:08:54,159
the storage

02:08:52,000 --> 02:08:55,679
right and then the argument so this is

02:08:54,159 --> 02:08:58,320
what is going to send to the

02:08:55,679 --> 02:09:00,000
jesus uh blockchain right and this one

02:08:58,320 --> 02:09:01,679
is a full encoding with the

02:09:00,000 --> 02:09:03,199
the script right so as i mentioned

02:09:01,679 --> 02:09:04,239
earlier the contract is made up of the

02:09:03,199 --> 02:09:06,960
data and then

02:09:04,239 --> 02:09:08,000
the the code itself right so when you

02:09:06,960 --> 02:09:10,000
look at the script

02:09:08,000 --> 02:09:12,000
you look at the code then you can see

02:09:10,000 --> 02:09:15,520
like this is what is actually

02:09:12,000 --> 02:09:18,079
telling what deciding what to be done

02:09:15,520 --> 02:09:19,360
then when we scroll you can see the

02:09:18,079 --> 02:09:21,599
storage and all of that

02:09:19,360 --> 02:09:21,599
all right

02:09:23,679 --> 02:09:26,880
good so

02:09:27,599 --> 02:09:34,000
oh so deploy

02:09:30,840 --> 02:09:37,440
sorry and then accept

02:09:34,000 --> 02:09:37,440
then to say deploy and contract

02:09:40,320 --> 02:09:43,920
oh sorry so we need to change this to

02:09:41,920 --> 02:09:47,040
carthage net right because we are doing

02:09:43,920 --> 02:09:50,079
a diploma in the cartoon deploy

02:09:47,040 --> 02:09:50,880
because this account even we need to

02:09:50,079 --> 02:09:52,480
change that

02:09:50,880 --> 02:09:54,639
because this account that we are using

02:09:52,480 --> 02:09:56,079
is an an account on the cart in it and

02:09:54,639 --> 02:10:01,840
so it was even as error because it

02:09:56,079 --> 02:10:01,840
wasn't recognized

02:10:02,639 --> 02:10:08,639
accept and is deploying the contract

02:10:06,079 --> 02:10:11,760
and yell now our contract has been

02:10:08,639 --> 02:10:13,920
originated as we can see

02:10:11,760 --> 02:10:15,599
so every contract on the on our

02:10:13,920 --> 02:10:18,960
blockchain on the blockchain

02:10:15,599 --> 02:10:21,199
has um

02:10:18,960 --> 02:10:22,560
an address right just like normal

02:10:21,199 --> 02:10:24,079
accounts have an address addresses

02:10:22,560 --> 02:10:26,320
contractors will have addresses

02:10:24,079 --> 02:10:27,599
and anyone with a normal account that's

02:10:26,320 --> 02:10:29,520
a teaset

02:10:27,599 --> 02:10:31,520
account like this something that looks

02:10:29,520 --> 02:10:36,159
like this can originate

02:10:31,520 --> 02:10:37,840
a contract right and so

02:10:36,159 --> 02:10:40,159
this is the address of the originated

02:10:37,840 --> 02:10:41,280
contract and just as initially we went

02:10:40,159 --> 02:10:44,159
to somewhere

02:10:41,280 --> 02:10:45,040
better call dev if i go to better call

02:10:44,159 --> 02:10:47,679
dev

02:10:45,040 --> 02:10:50,159
it says search anything search for this

02:10:47,679 --> 02:10:50,159
contract

02:10:51,040 --> 02:10:55,119
you see it this is where we deployed it

02:10:53,119 --> 02:10:58,320
just now it says a few seconds ago

02:10:55,119 --> 02:10:59,599
right so when i click on it we will

02:10:58,320 --> 02:11:02,719
actually see

02:10:59,599 --> 02:11:05,119
what we have here um

02:11:02,719 --> 02:11:06,000
when we go to the storage we will see

02:11:05,119 --> 02:11:08,560
you see

02:11:06,000 --> 02:11:09,440
amazing right so now this is on the

02:11:08,560 --> 02:11:11,840
blockchain

02:11:09,440 --> 02:11:14,000
and we can explore it right because i

02:11:11,840 --> 02:11:15,599
use i'm using a different explorer

02:11:14,000 --> 02:11:17,199
or i deploy it from somewhere and i'm

02:11:15,599 --> 02:11:18,079
using a different response so that's to

02:11:17,199 --> 02:11:21,840
tell you that

02:11:18,079 --> 02:11:23,119
actually it's working and everything

02:11:21,840 --> 02:11:24,960
right so you can see the things that we

02:11:23,119 --> 02:11:26,320
wrote on authorized action and so this

02:11:24,960 --> 02:11:27,599
is that this is one of the important

02:11:26,320 --> 02:11:29,520
things with blockchain

02:11:27,599 --> 02:11:31,440
to write writing smart contract your

02:11:29,520 --> 02:11:32,800
code is available for the public to view

02:11:31,440 --> 02:11:34,719
and this is the one of the strengths of

02:11:32,800 --> 02:11:36,840
teasers because um

02:11:34,719 --> 02:11:38,079
with smart contract problem like

02:11:36,840 --> 02:11:41,599
etymology

02:11:38,079 --> 02:11:45,360
on the blockchain itself is kind of

02:11:41,599 --> 02:11:48,880
bytecode right so zeros and ones

02:11:45,360 --> 02:11:50,880
no so that's what that's one of the um

02:11:48,880 --> 02:11:51,920
things that jesus learned from previous

02:11:50,880 --> 02:11:54,239
platforms and studies

02:11:51,920 --> 02:11:55,440
oh let's go with this thing that someone

02:11:54,239 --> 02:11:58,079
can actually read

02:11:55,440 --> 02:11:59,360
and actually this is so it's it's such

02:11:58,079 --> 02:12:01,679
that you can actually

02:11:59,360 --> 02:12:02,560
prove certain certain properties about

02:12:01,679 --> 02:12:05,599
it using

02:12:02,560 --> 02:12:07,440
a certain proof engine

02:12:05,599 --> 02:12:09,040
right they call it assistant or

02:12:07,440 --> 02:12:10,480
something about it i mean that's not

02:12:09,040 --> 02:12:13,119
that's my sister that have not really

02:12:10,480 --> 02:12:17,360
even gone into it myself

02:12:13,119 --> 02:12:19,440
so uh i mean we are okay with it right

02:12:17,360 --> 02:12:20,719
and this is so neat everyone can read it

02:12:19,440 --> 02:12:23,280
and understand

02:12:20,719 --> 02:12:25,030
i mean any expert can really understand

02:12:23,280 --> 02:12:26,639
you know

02:12:25,030 --> 02:12:30,320
[Music]

02:12:26,639 --> 02:12:32,320
so that's one of the good cool things

02:12:30,320 --> 02:12:34,639
about uh

02:12:32,320 --> 02:12:35,599
tasers right the code is on the

02:12:34,639 --> 02:12:38,320
blockchain

02:12:35,599 --> 02:12:39,679
and it's readable it's not in byte code

02:12:38,320 --> 02:12:42,880
so

02:12:39,679 --> 02:12:47,520
uh yeah

02:12:42,880 --> 02:12:50,239
so actually from here we find that uh

02:12:47,520 --> 02:12:51,520
okay let me go there let me see whether

02:12:50,239 --> 02:12:52,159
it allows me to interact with the

02:12:51,520 --> 02:12:55,119
contract

02:12:52,159 --> 02:12:56,400
right good it allows me to interact with

02:12:55,119 --> 02:12:58,719
the contracts you see

02:12:56,400 --> 02:12:59,840
so we see we define add registrar and we

02:12:58,719 --> 02:13:03,840
define remove

02:12:59,840 --> 02:13:03,840
registrar right

02:13:17,119 --> 02:13:21,440
all right all right all right so

02:13:19,679 --> 02:13:22,960
actually beta card ever has a lot of

02:13:21,440 --> 02:13:24,400
things that they are bringing in place

02:13:22,960 --> 02:13:25,760
which is a cool stuff

02:13:24,400 --> 02:13:27,599
then actually play with your contract

02:13:25,760 --> 02:13:31,599
over here so yeah

02:13:27,599 --> 02:13:34,560
let's let's continue let's now go

02:13:31,599 --> 02:13:35,440
off topic so let's so now there's

02:13:34,560 --> 02:13:39,280
another thing called

02:13:35,440 --> 02:13:40,560
explorer right so in the same manner

02:13:39,280 --> 02:13:42,000
you see you can open contracting

02:13:40,560 --> 02:13:43,119
explorer but let me just open it from

02:13:42,000 --> 02:13:45,840
here too

02:13:43,119 --> 02:13:45,840
so

02:13:46,159 --> 02:13:50,960
so we go to the explorer right when we

02:13:49,119 --> 02:13:53,040
go to the explorer

02:13:50,960 --> 02:13:54,320
so and anyway this smart smartphone

02:13:53,040 --> 02:13:55,599
explorer allows you to explore any

02:13:54,320 --> 02:13:59,840
contract at all so

02:13:55,599 --> 02:13:59,840
it's just like the beta core dev but

02:14:01,520 --> 02:14:07,599
so i try to press the use wallet okay

02:14:05,199 --> 02:14:09,520
so when i go here i can say save

02:14:07,599 --> 02:14:11,970
contracting wallet

02:14:09,520 --> 02:14:13,440
and to save the contract in my wallet

02:14:11,970 --> 02:14:17,440
[Music]

02:14:13,440 --> 02:14:22,320
so i'll just say uh what

02:14:17,440 --> 02:14:22,320
land red register

02:14:23,199 --> 02:14:28,560
version one right and i'll say import

02:14:30,719 --> 02:14:36,560
okay so now let me close this

02:14:34,079 --> 02:14:37,679
and go here so instead of maybe pasting

02:14:36,560 --> 02:14:39,920
here directly

02:14:37,679 --> 02:14:41,440
i can say use wallet and then select the

02:14:39,920 --> 02:14:43,199
contract and say land register writing

02:14:41,440 --> 02:14:45,040
one import

02:14:43,199 --> 02:14:46,480
so just to make things easier for you so

02:14:45,040 --> 02:14:47,119
when you use if you continue using the

02:14:46,480 --> 02:14:50,719
same

02:14:47,119 --> 02:14:51,920
um kind of browser it is going to

02:14:50,719 --> 02:14:55,840
remember everything you are doing

02:14:51,920 --> 02:14:55,840
because it's storing the stuff in your

02:14:55,920 --> 02:15:02,639
you know storing the stuff here

02:14:59,280 --> 02:15:04,000
in your local yeah so

02:15:02,639 --> 02:15:07,040
you can see that this thought or the

02:15:04,000 --> 02:15:08,560
contract you have here

02:15:07,040 --> 02:15:10,560
so you can actually if you are using the

02:15:08,560 --> 02:15:13,920
same browser every time then

02:15:10,560 --> 02:15:15,920
you can always have this so for me i use

02:15:13,920 --> 02:15:18,480
the same browser and it picks

02:15:15,920 --> 02:15:20,840
it remembers it's fine just don't play

02:15:18,480 --> 02:15:23,840
your cookies

02:15:20,840 --> 02:15:23,840
so

02:15:24,079 --> 02:15:30,639
yeah so when i say

02:15:27,119 --> 02:15:37,840
explain smart by nodes right

02:15:30,639 --> 02:15:37,840
so i wait and yeah so contracts data

02:15:40,159 --> 02:15:44,239
right right so this is a manager so you

02:15:42,639 --> 02:15:44,960
remember we generated the monitor from

02:15:44,239 --> 02:15:47,360
this side

02:15:44,960 --> 02:15:48,719
right and then there's the private key

02:15:47,360 --> 02:15:53,840
of the money that we generated

02:15:48,719 --> 02:15:57,280
right okay okay that's good

02:15:53,840 --> 02:16:02,000
and then we stored this manager

02:15:57,280 --> 02:16:04,159
and in the wallet

02:16:02,000 --> 02:16:05,679
okay so we can see this it does have

02:16:04,159 --> 02:16:06,800
data by the contract like okay this is

02:16:05,679 --> 02:16:08,320
the address of the contract is the

02:16:06,800 --> 02:16:09,199
balance of the contract so a contract

02:16:08,320 --> 02:16:11,119
also has balance

02:16:09,199 --> 02:16:13,280
in terms of tables and you can send

02:16:11,119 --> 02:16:16,480
money and in and out of the contract but

02:16:13,280 --> 02:16:17,920
that's the point of this and manager

02:16:16,480 --> 02:16:20,320
and then already stress we have to

02:16:17,920 --> 02:16:22,480
register us

02:16:20,320 --> 02:16:26,159
so there's they have been given us some

02:16:22,480 --> 02:16:26,159
extra explorer called the tzk

02:16:26,360 --> 02:16:32,319
dzkt.io and it's also an explorer

02:16:29,119 --> 02:16:34,960
um account doesn't exist okay

02:16:32,319 --> 02:16:37,359
if you've not seen it yet then be there

02:16:34,960 --> 02:16:37,359
anyway

02:16:44,719 --> 02:16:51,200
ah never mind

02:16:47,840 --> 02:16:54,800
yeah you should does it

02:16:51,200 --> 02:16:54,800
okay so um

02:16:57,599 --> 02:17:01,040
those are some things about the data but

02:16:59,200 --> 02:17:02,800
there's nothing yes so what we are

02:17:01,040 --> 02:17:04,639
looking for is the operation builder

02:17:02,800 --> 02:17:06,240
right and when i click here you see we

02:17:04,639 --> 02:17:08,240
have all the endpoints here we have the

02:17:06,240 --> 02:17:09,359
add registrar endpoint we have to remove

02:17:08,240 --> 02:17:12,800
register endpoint

02:17:09,359 --> 02:17:15,439
right so when we come to the add

02:17:12,800 --> 02:17:18,719
registrar endpoint

02:17:15,439 --> 02:17:21,920
remember that the input it takes was

02:17:18,719 --> 02:17:22,639
was what the params was the registrar

02:17:21,920 --> 02:17:25,040
right

02:17:22,639 --> 02:17:26,399
and so that is why it has given us one

02:17:25,040 --> 02:17:30,399
um kind of

02:17:26,399 --> 02:17:32,719
space here to enter the registrar so

02:17:30,399 --> 02:17:33,920
we can enter a fake registrar account a

02:17:32,719 --> 02:17:36,639
fake account like this

02:17:33,920 --> 02:17:39,040
right it doesn't matter let's enter

02:17:36,639 --> 02:17:39,040
something

02:17:39,120 --> 02:17:46,800
uh and i put it there

02:17:43,599 --> 02:17:47,599
and i said i've again if you need to do

02:17:46,800 --> 02:17:49,200
anything on

02:17:47,599 --> 02:17:51,599
tuesday's blockchain whether i want to

02:17:49,200 --> 02:17:53,280
send money or invoke or call a contract

02:17:51,599 --> 02:17:56,319
a function in the contract

02:17:53,280 --> 02:17:59,040
you need to have your private key and

02:17:56,319 --> 02:18:01,840
since we've done that already here

02:17:59,040 --> 02:18:03,439
with this account right and this you

02:18:01,840 --> 02:18:04,000
remember this account we use for the

02:18:03,439 --> 02:18:08,240
manager

02:18:04,000 --> 02:18:11,120
right good good so

02:18:08,240 --> 02:18:12,880
once we do that once you reset this you

02:18:11,120 --> 02:18:14,639
need to say build parameters

02:18:12,880 --> 02:18:16,080
and then you need to fill this part for

02:18:14,639 --> 02:18:17,519
you okay

02:18:16,080 --> 02:18:19,760
other than that you have to remember

02:18:17,519 --> 02:18:22,840
this and it's not nice so

02:18:19,760 --> 02:18:25,120
once everything is done you could send

02:18:22,840 --> 02:18:27,679
transaction

02:18:25,120 --> 02:18:30,719
of course of course yes we've seen it so

02:18:27,679 --> 02:18:30,719
this is the transaction

02:18:31,280 --> 02:18:35,760
so the destination is the contract right

02:18:34,000 --> 02:18:37,439
just like you're calling a contract

02:18:35,760 --> 02:18:39,040
and you're saying no you're not sending

02:18:37,439 --> 02:18:40,800
into it right

02:18:39,040 --> 02:18:42,080
and then we have the gas limit in the

02:18:40,800 --> 02:18:44,880
counter the fee

02:18:42,080 --> 02:18:46,000
i mean these are all specific stuff and

02:18:44,880 --> 02:18:50,240
we have resource

02:18:46,000 --> 02:18:54,319
that's who is calling the contract right

02:18:50,240 --> 02:18:56,399
and then we have the kind transaction

02:18:54,319 --> 02:18:57,760
all right and then parameters so entry

02:18:56,399 --> 02:19:00,880
point default

02:18:57,760 --> 02:19:04,800
so in this case it's seen as the

02:19:00,880 --> 02:19:06,559
the add seen the add registrar entry

02:19:04,800 --> 02:19:08,080
point as default so i like that we're

02:19:06,559 --> 02:19:08,880
going to contact remove register and you

02:19:08,080 --> 02:19:11,040
see what

02:19:08,880 --> 02:19:13,439
i'm trying to say here and then the

02:19:11,040 --> 02:19:15,519
string right so this is the data

02:19:13,439 --> 02:19:17,679
is that something like really really

02:19:15,519 --> 02:19:18,800
it's just like communicating into an api

02:19:17,679 --> 02:19:21,920
like a normal api

02:19:18,800 --> 02:19:23,840
right so when i click accept it is

02:19:21,920 --> 02:19:26,800
sending

02:19:23,840 --> 02:19:28,240
whatever and it says that was applied

02:19:26,800 --> 02:19:29,920
and then it tells you the result

02:19:28,240 --> 02:19:31,679
the content can transaction whatever

02:19:29,920 --> 02:19:34,399
whatever and this then

02:19:31,679 --> 02:19:34,800
actually they're using certain libraries

02:19:34,399 --> 02:19:38,080
but

02:19:34,800 --> 02:19:38,080
so they are using the console

02:19:38,639 --> 02:19:43,840
js right

02:19:41,679 --> 02:19:45,599
console.js is a javascript library that

02:19:43,840 --> 02:19:49,280
allows you to communicate directly with

02:19:45,599 --> 02:19:52,160
the teasers blockchain right

02:19:49,280 --> 02:19:53,520
so you see that from the browser

02:19:52,160 --> 02:19:54,720
directly from the browser they are doing

02:19:53,520 --> 02:19:55,840
all of this they're actually using

02:19:54,720 --> 02:19:58,800
console.js

02:19:55,840 --> 02:19:59,310
behind the scene right and i know that

02:19:58,800 --> 02:20:00,880
is us

02:19:59,310 --> 02:20:05,359
[Music]

02:20:00,880 --> 02:20:07,120
javascript library that allows you to uh

02:20:05,359 --> 02:20:09,040
communicate with the blockchain is what

02:20:07,120 --> 02:20:12,560
is called a teaser taquito

02:20:09,040 --> 02:20:15,600
or as i call it right so

02:20:12,560 --> 02:20:16,880
it is taquito is also i find that one

02:20:15,600 --> 02:20:19,280
also

02:20:16,880 --> 02:20:21,200
quite interesting to do right so these

02:20:19,280 --> 02:20:22,399
are javascript libraries that can allow

02:20:21,200 --> 02:20:24,319
so you can build like

02:20:22,399 --> 02:20:25,520
a web application on top of your smart

02:20:24,319 --> 02:20:26,640
contract

02:20:25,520 --> 02:20:28,720
of course which is something you need to

02:20:26,640 --> 02:20:30,160
do because i mean other than that

02:20:28,720 --> 02:20:33,200
a normal user can't use your smart

02:20:30,160 --> 02:20:35,439
contract right

02:20:33,200 --> 02:20:35,439
so

02:20:36,319 --> 02:20:42,800
um where are we i think yeah so

02:20:41,040 --> 02:20:45,520
explore the contract so it's run the

02:20:42,800 --> 02:20:47,359
contract so now let's go and explore

02:20:45,520 --> 02:20:48,880
let's let's let's go and explore this

02:20:47,359 --> 02:20:51,680
guy right

02:20:48,880 --> 02:20:52,160
and he said this was the origination so

02:20:51,680 --> 02:20:53,200
when

02:20:52,160 --> 02:20:55,280
initially when i'm putting those

02:20:53,200 --> 02:20:58,000
contracts on the blockchain said or it's

02:20:55,280 --> 02:20:58,479
it is called origination right and then

02:20:58,000 --> 02:21:00,640
you said

02:20:58,479 --> 02:21:02,560
just a minute ago we called ad registrar

02:21:00,640 --> 02:21:05,120
right so this is on there

02:21:02,560 --> 02:21:05,600
whether called dev uh it's really cool

02:21:05,120 --> 02:21:07,920
right

02:21:05,600 --> 02:21:08,880
don't you think and add registrar what

02:21:07,920 --> 02:21:11,439
happened

02:21:08,880 --> 02:21:12,880
so you can see that whatever is

02:21:11,439 --> 02:21:16,560
highlighted in green

02:21:12,880 --> 02:21:18,479
is what what what was added

02:21:16,560 --> 02:21:19,760
right so this this guy here was just

02:21:18,479 --> 02:21:22,000
added right here

02:21:19,760 --> 02:21:23,040
right so the add register effect you can

02:21:22,000 --> 02:21:25,040
see like

02:21:23,040 --> 02:21:27,120
so this is a really really good contrast

02:21:25,040 --> 02:21:30,319
explorer

02:21:27,120 --> 02:21:30,319
this is interesting stuff

02:21:30,960 --> 02:21:36,479
right good and then again

02:21:34,479 --> 02:21:38,240
you can look at the storage directly and

02:21:36,479 --> 02:21:40,080
you can see that now we have three items

02:21:38,240 --> 02:21:41,840
right and the manager is there and then

02:21:40,080 --> 02:21:43,760
we have the code

02:21:41,840 --> 02:21:44,880
and then we can interact with the

02:21:43,760 --> 02:21:48,720
registrar

02:21:44,880 --> 02:21:51,840
you know interesting stuff so man

02:21:48,720 --> 02:21:53,840
so i think

02:21:51,840 --> 02:21:55,600
although there are a lot of things to

02:21:53,840 --> 02:21:58,080
them in there

02:21:55,600 --> 02:21:59,520
with time for the time i don't think

02:21:58,080 --> 02:22:00,960
i'll be able to complete

02:21:59,520 --> 02:22:03,439
the whole land register application

02:22:00,960 --> 02:22:04,960
right now but i mean

02:22:03,439 --> 02:22:06,960
i'm just excited that at least i've been

02:22:04,960 --> 02:22:07,680
able to get to this level or this point

02:22:06,960 --> 02:22:10,800
because

02:22:07,680 --> 02:22:13,120
from here everything is kind of simple i

02:22:10,800 --> 02:22:16,160
will do it as fast as we can

02:22:13,120 --> 02:22:19,520
so um

02:22:16,160 --> 02:22:22,640
yep so now in this case we use

02:22:19,520 --> 02:22:24,479
the manager's account to deploy it to

02:22:22,640 --> 02:22:25,680
send the transaction right or to call

02:22:24,479 --> 02:22:28,000
this endpoint

02:22:25,680 --> 02:22:29,120
so let's go ahead and create a new

02:22:28,000 --> 02:22:31,359
account

02:22:29,120 --> 02:22:31,359
right

02:22:33,439 --> 02:22:42,560
let's go ahead create a new account

02:22:37,760 --> 02:22:47,280
so yeah you can always get an account

02:22:42,560 --> 02:22:47,280
please drink responsibly and

02:22:49,120 --> 02:22:52,560
compute private key it gives us a

02:22:50,960 --> 02:22:53,760
different private key i save it in

02:22:52,560 --> 02:22:56,399
wallet

02:22:53,760 --> 02:22:58,800
good so i've got the node activate

02:22:56,399 --> 02:22:58,800
account

02:23:02,399 --> 02:23:07,439
once you send the activation you have to

02:23:03,840 --> 02:23:07,439
just wait a little bit all right

02:23:11,530 --> 02:23:14,679
[Music]

02:23:16,479 --> 02:23:19,840
and then we reveal

02:23:21,120 --> 02:23:27,760
all right so now when we come back here

02:23:25,439 --> 02:23:29,840
to the explorer now let's change you

02:23:27,760 --> 02:23:31,760
know note that this

02:23:29,840 --> 02:23:34,240
this address is the address of the

02:23:31,760 --> 02:23:37,359
manager right even just looking at that

02:23:34,240 --> 02:23:38,800
one ui you see is that one ui

02:23:37,359 --> 02:23:40,399
is addresses the address of the monitor

02:23:38,800 --> 02:23:42,319
so let's change this

02:23:40,399 --> 02:23:44,399
to the new address that we we created

02:23:42,319 --> 02:23:48,160
one dpk or something something

02:23:44,399 --> 02:23:50,479
all right and then

02:23:48,160 --> 02:23:52,080
let's just try to use another you know

02:23:50,479 --> 02:23:55,920
figure

02:23:52,080 --> 02:23:55,920
one of our fake accounts so

02:23:58,840 --> 02:24:01,840
home

02:24:08,560 --> 02:24:15,840
let's tell him this this guy

02:24:12,960 --> 02:24:15,840
and

02:24:16,399 --> 02:24:22,399
yeah replace this guy so let's say we

02:24:19,760 --> 02:24:24,479
add in register right so we go to

02:24:22,399 --> 02:24:26,880
transaction parameters

02:24:24,479 --> 02:24:28,160
and it changes everything here then we

02:24:26,880 --> 02:24:31,200
send a transaction

02:24:28,160 --> 02:24:31,200
sending transaction

02:24:31,680 --> 02:24:36,319
and accept

02:24:36,720 --> 02:24:40,840
error while sending transaction to

02:24:38,640 --> 02:24:42,800
contract

02:24:40,840 --> 02:24:45,040
temporary right

02:24:42,800 --> 02:24:47,040
and we've not done anything wrong we're

02:24:45,040 --> 02:24:49,120
actually using the

02:24:47,040 --> 02:24:50,800
uh the cartridge net whatever but it's

02:24:49,120 --> 02:24:53,920
giving us an arrow and why do you think

02:24:50,800 --> 02:24:57,359
that because we are using the wrong

02:24:53,920 --> 02:25:01,200
uh we are hitting this arrow right here

02:24:57,359 --> 02:25:05,120
this one right on authorized action here

02:25:01,200 --> 02:25:07,680
so yeah that's obvious person that this

02:25:05,120 --> 02:25:09,680
is rejected yeah so now we know why the

02:25:07,680 --> 02:25:12,000
script has been rejected because

02:25:09,680 --> 02:25:13,920
he is in the wrong like manager all

02:25:12,000 --> 02:25:17,680
right so this is not a manager

02:25:13,920 --> 02:25:17,680
and so this is the kind of the level of

02:25:18,880 --> 02:25:24,800
authentication you get out of the box

02:25:20,560 --> 02:25:27,120
with a smart contract right

02:25:24,800 --> 02:25:29,040
that's cool all right so let's just

02:25:27,120 --> 02:25:32,080
close all of these guys

02:25:29,040 --> 02:25:33,520
and then go back to complete our smart

02:25:32,080 --> 02:25:36,560
contract

02:25:33,520 --> 02:25:39,200
and let's comment out this guy

02:25:36,560 --> 02:25:41,040
so we are going to use this guy to set

02:25:39,200 --> 02:25:42,479
parameters for deployment

02:25:41,040 --> 02:25:45,840
and we are going to use this guy for

02:25:42,479 --> 02:25:45,840
testing okay

02:25:50,840 --> 02:25:56,479
so

02:25:53,439 --> 02:26:00,240
now let's go ahead and also uh

02:25:56,479 --> 02:26:01,840
do the land we create a data structure

02:26:00,240 --> 02:26:05,359
called lands

02:26:01,840 --> 02:26:08,880
and the way we want to store lands is

02:26:05,359 --> 02:26:12,000
lance should have owners right

02:26:08,880 --> 02:26:13,680
so he doesn't want to

02:26:12,000 --> 02:26:16,880
we just want to be simple here and say

02:26:13,680 --> 02:26:16,880
oh okay um

02:26:18,640 --> 02:26:23,439
why is this done yeah so

02:26:21,840 --> 02:26:24,880
let's just be simple here say something

02:26:23,439 --> 02:26:29,439
like

02:26:24,880 --> 02:26:32,720
uh you know

02:26:29,439 --> 02:26:32,720
that doesn't feel like uh

02:26:33,120 --> 02:26:36,960
as we've already said a land is

02:26:35,280 --> 02:26:39,359
represented with four points

02:26:36,960 --> 02:26:39,359
okay

02:26:40,000 --> 02:26:43,760
longitude and longitude latitude right

02:26:42,080 --> 02:26:48,080
but for now we just use integers

02:26:43,760 --> 02:26:51,760
x like on a plane on the xy plane

02:26:48,080 --> 02:26:55,280
right so a land is just a square

02:26:51,760 --> 02:26:58,240
on the plane all right

02:26:55,280 --> 02:26:58,240
so this could be

02:26:59,920 --> 02:27:06,560
maybe one x is one

02:27:03,120 --> 02:27:09,600
and then y is two x

02:27:06,560 --> 02:27:13,439
five y is three

02:27:09,600 --> 02:27:13,439
you know just for

02:27:14,960 --> 02:27:22,479
six sorry still five by six

02:27:19,280 --> 02:27:26,080
and then still one and y still six

02:27:22,479 --> 02:27:29,120
so we just represent the language for

02:27:26,080 --> 02:27:31,680
point on the plane right for

02:27:29,120 --> 02:27:33,680
integer four points on the plane at this

02:27:31,680 --> 02:27:36,479
point digest integers point

02:27:33,680 --> 02:27:38,960
so what we want to say is that and then

02:27:36,479 --> 02:27:43,200
land also belong to

02:27:38,960 --> 02:27:46,319
opponents so land

02:27:43,200 --> 02:27:49,040
and then lance have what

02:27:46,319 --> 02:27:49,600
bonus these owners are users on the

02:27:49,040 --> 02:27:51,680
teasers

02:27:49,600 --> 02:27:52,960
blockchain who have their public

02:27:51,680 --> 02:27:56,840
keywords hashes

02:27:52,960 --> 02:27:59,760
right so what we are going to do is that

02:27:56,840 --> 02:28:04,880
uh

02:27:59,760 --> 02:28:07,840
once the land is registered on the chain

02:28:04,880 --> 02:28:07,840
okay we are going to

02:28:09,680 --> 02:28:14,479
give kind of like a unique id to the

02:28:12,080 --> 02:28:14,479
land

02:28:15,280 --> 02:28:17,760
and then

02:28:20,319 --> 02:28:22,479
so

02:28:23,920 --> 02:28:28,800
we're going to give a unique idea to the

02:28:25,600 --> 02:28:31,520
land let's call that one code

02:28:28,800 --> 02:28:31,520
that's a string

02:28:32,240 --> 02:28:34,640
and then

02:28:35,439 --> 02:28:40,319
the coordinates we're going to call

02:28:38,960 --> 02:28:42,720
record the four points we are going to

02:28:40,319 --> 02:28:42,720
call them

02:28:44,479 --> 02:28:54,000
a b

02:28:48,880 --> 02:28:57,200
c and what d

02:28:54,000 --> 02:28:59,920
all right good so

02:28:57,200 --> 02:29:01,600
let's go ahead and implement that so

02:28:59,920 --> 02:29:03,200
land so we are going to have a lot of

02:29:01,600 --> 02:29:04,880
lots of land

02:29:03,200 --> 02:29:06,080
and because of that we are missing that

02:29:04,880 --> 02:29:07,120
are going to have lots of land we are

02:29:06,080 --> 02:29:09,760
going to use

02:29:07,120 --> 02:29:11,280
some sort of something called the map

02:29:09,760 --> 02:29:16,080
right

02:29:11,280 --> 02:29:20,840
a map or in python we know this as

02:29:16,080 --> 02:29:23,120
a dictionary right so

02:29:20,840 --> 02:29:25,200
in

02:29:23,120 --> 02:29:27,120
so when we go to this match by types and

02:29:25,200 --> 02:29:32,160
operations

02:29:27,120 --> 02:29:34,319
um maps and big maps as we can see

02:29:32,160 --> 02:29:35,840
and then we have sp.map but we are

02:29:34,319 --> 02:29:37,120
interested in this is maps but we want

02:29:35,840 --> 02:29:39,920
to use the big map

02:29:37,120 --> 02:29:41,520
a big map is a big map right you want to

02:29:39,920 --> 02:29:42,319
you want because we are expecting that

02:29:41,520 --> 02:29:44,160
there will be a lot

02:29:42,319 --> 02:29:45,520
lots of land and the world is made full

02:29:44,160 --> 02:29:49,280
of lands

02:29:45,520 --> 02:29:51,520
to initialize the map you say sp big map

02:29:49,280 --> 02:29:52,319
then you talk about the key and the

02:29:51,520 --> 02:29:55,600
value

02:29:52,319 --> 02:29:59,040
okay so sp dot

02:29:55,600 --> 02:30:01,680
big and that's come up and then we have

02:29:59,040 --> 02:30:02,160
the first parameter called t key and

02:30:01,680 --> 02:30:05,280
this t

02:30:02,160 --> 02:30:07,760
key is it says the type of the key right

02:30:05,280 --> 02:30:08,560
so is it a spring is the boolean or

02:30:07,760 --> 02:30:10,800
whatever

02:30:08,560 --> 02:30:12,240
right and so what we plan to do intend

02:30:10,800 --> 02:30:15,200
to do is to have

02:30:12,240 --> 02:30:15,200
a data structure like

02:30:17,200 --> 02:30:22,000
where is this okay yeah we don't have a

02:30:20,240 --> 02:30:24,960
data structure like this

02:30:22,000 --> 02:30:25,840
where we have something like this and

02:30:24,960 --> 02:30:27,520
then

02:30:25,840 --> 02:30:31,840
like the code the code of the land is

02:30:27,520 --> 02:30:34,880
here and then some data about the land

02:30:31,840 --> 02:30:35,920
it's also here and the data about the

02:30:34,880 --> 02:30:39,600
land that we're going to

02:30:35,920 --> 02:30:44,399
store is like

02:30:39,600 --> 02:30:44,399
a list of

02:30:44,840 --> 02:30:50,000
owners of

02:30:47,040 --> 02:30:51,920
all right for now let's say we still

02:30:50,000 --> 02:30:53,920
started

02:30:51,920 --> 02:30:55,920
the coordinate a of the land so let's

02:30:53,920 --> 02:30:58,160
just call it a right

02:30:55,920 --> 02:30:59,520
and then we store the b of the land and

02:30:58,160 --> 02:31:04,399
the c of the land

02:30:59,520 --> 02:31:04,399
the d of the land all right

02:31:05,600 --> 02:31:12,840
a b

02:31:08,640 --> 02:31:14,080
alright simple so let's go and implement

02:31:12,840 --> 02:31:18,080
that

02:31:14,080 --> 02:31:21,280
the land the key is sp dot

02:31:18,080 --> 02:31:23,359
t string so we we are going to

02:31:21,280 --> 02:31:25,520
say that we are going to assign a unique

02:31:23,359 --> 02:31:29,120
code to each land and this unique code

02:31:25,520 --> 02:31:32,240
is a string okay and

02:31:29,120 --> 02:31:32,240
the the value

02:31:32,640 --> 02:31:36,080
is what is called we are going to use

02:31:34,640 --> 02:31:39,600
something called a

02:31:36,080 --> 02:31:42,720
t record right

02:31:39,600 --> 02:31:47,359
so you can think of the t record as

02:31:42,720 --> 02:31:47,359
so let's go ahead and you see who is

02:31:54,840 --> 02:31:59,040
this

02:31:56,479 --> 02:32:00,319
so records yeah they records in

02:31:59,040 --> 02:32:03,120
smartphone of that record

02:32:00,319 --> 02:32:03,920
where cards in python dict of smartphone

02:32:03,120 --> 02:32:05,840
has index

02:32:03,920 --> 02:32:07,840
whatever so they generalize the

02:32:05,840 --> 02:32:10,800
microsoft okay

02:32:07,840 --> 02:32:11,439
record so basically it allows you to say

02:32:10,800 --> 02:32:14,240
you know

02:32:11,439 --> 02:32:15,280
in python like this would be like if you

02:32:14,240 --> 02:32:17,920
have a tuple you

02:32:15,280 --> 02:32:19,520
have to access it by the index right or

02:32:17,920 --> 02:32:21,359
you have a job to assess it by the index

02:32:19,520 --> 02:32:23,600
but if you have a

02:32:21,359 --> 02:32:25,359
a dictionary you have to you can access

02:32:23,600 --> 02:32:26,640
it by the keys right so the record is

02:32:25,359 --> 02:32:28,000
kind of the same thing

02:32:26,640 --> 02:32:31,520
you can access the elements in the

02:32:28,000 --> 02:32:34,640
records by their keys but in this case

02:32:31,520 --> 02:32:36,080
you pre-defined the keys right so let me

02:32:34,640 --> 02:32:37,439
explain what i'm saying

02:32:36,080 --> 02:32:39,920
so i'm going i'm going to have to

02:32:37,439 --> 02:32:43,280
pre-define the keys in this record

02:32:39,920 --> 02:32:46,479
i'm going to say a and i'm going to say

02:32:43,280 --> 02:32:50,240
sp dot t string

02:32:46,479 --> 02:32:50,240
the a meaning that the coordinate a

02:32:50,840 --> 02:32:57,040
right

02:32:53,120 --> 02:32:57,040
and so actually we can do this

02:32:57,200 --> 02:32:59,680
and then

02:33:00,319 --> 02:33:07,439
b is b dot t

02:33:03,520 --> 02:33:11,359
string then see

02:33:07,439 --> 02:33:13,760
that's b dot t string so we are planning

02:33:11,359 --> 02:33:15,040
to no we want to use integers so let's

02:33:13,760 --> 02:33:19,439
say just

02:33:15,040 --> 02:33:22,399
um tnt is fine right

02:33:19,439 --> 02:33:24,160
protein and so ideally maybe we should

02:33:22,399 --> 02:33:25,280
be using strings and then we can convert

02:33:24,160 --> 02:33:27,920
those strings

02:33:25,280 --> 02:33:31,439
so actually when we come here we have

02:33:27,920 --> 02:33:31,439
types we have like uh

02:33:31,760 --> 02:33:38,080
strings we got privacy

02:33:34,800 --> 02:33:39,280
so they have integer string

02:33:38,080 --> 02:33:42,479
all right it doesn't seem like they have

02:33:39,280 --> 02:33:45,200
something like that smaller

02:33:42,479 --> 02:33:47,840
you know those kind of guys there we had

02:33:45,200 --> 02:33:51,439
to stop that so

02:33:47,840 --> 02:33:54,479
so for now we could we could either

02:33:51,439 --> 02:33:54,479
implement it with string

02:33:55,040 --> 02:33:58,800
and not be limited or we are just going

02:33:57,040 --> 02:33:59,840
to use the integer and be limited i mean

02:33:58,800 --> 02:34:03,040
of course

02:33:59,840 --> 02:34:06,080
latitude and longitude

02:34:03,040 --> 02:34:10,080
uh oh

02:34:06,080 --> 02:34:10,080
wait wait sorry so

02:34:10,560 --> 02:34:16,399
actually so so a here is supposed to be

02:34:14,800 --> 02:34:20,319
a pair right

02:34:16,399 --> 02:34:24,399
x y because it's a coordinate

02:34:20,319 --> 02:34:30,399
on a plane so x right

02:34:24,399 --> 02:34:34,880
and so we have just a 10 for that

02:34:30,399 --> 02:34:34,880
smart contract where are you

02:34:36,080 --> 02:34:39,120
pairs all right

02:34:41,439 --> 02:34:44,640
and then the way to define it pairs sp

02:34:43,760 --> 02:34:48,800
dot pair

02:34:44,640 --> 02:34:53,040
right and then you say t1 and t2

02:34:48,800 --> 02:34:59,840
so let's do that so s p dot

02:34:53,040 --> 02:34:59,840
pair so t pair

02:35:04,319 --> 02:35:13,920
and then i type is integer sp dot int

02:35:08,800 --> 02:35:15,200
you know sp dot sorry t and

02:35:13,920 --> 02:35:16,960
so that's how it's going to be for the

02:35:15,200 --> 02:35:19,280
rest of them so we can just copy and

02:35:16,960 --> 02:35:19,280
paste

02:35:22,880 --> 02:35:27,840
right sorry about that so

02:35:30,160 --> 02:35:36,240
yeah so we have our land

02:35:33,200 --> 02:35:38,640
so the land so let's go over this data

02:35:36,240 --> 02:35:41,120
structure again

02:35:38,640 --> 02:35:42,479
so the land itself all the lands are

02:35:41,120 --> 02:35:44,800
stored in a big map

02:35:42,479 --> 02:35:46,160
right and each of the land has something

02:35:44,800 --> 02:35:48,880
called the code

02:35:46,160 --> 02:35:51,120
so we assign a code to the land and it

02:35:48,880 --> 02:35:54,720
code

02:35:51,120 --> 02:35:57,200
each land also has the coordinates right

02:35:54,720 --> 02:35:58,000
where we choose to say a b we just call

02:35:57,200 --> 02:36:02,479
them a

02:35:58,000 --> 02:36:03,920
b c and d okay

02:36:02,479 --> 02:36:05,760
and so that is exactly what we've

02:36:03,920 --> 02:36:07,200
created here so

02:36:05,760 --> 02:36:09,280
of course in smartphone i need to define

02:36:07,200 --> 02:36:14,880
your data like that ahead of time

02:36:09,280 --> 02:36:14,880
so there's a big map right so a big map

02:36:14,960 --> 02:36:20,479
it's a big map so let me just push this

02:36:17,920 --> 02:36:20,479
down so

02:36:20,840 --> 02:36:25,760
good to the map

02:36:24,399 --> 02:36:27,439
and so it's going to contain several

02:36:25,760 --> 02:36:29,760
copies of this guy

02:36:27,439 --> 02:36:29,760
all right

02:36:30,640 --> 02:36:42,319
say go to

02:36:37,359 --> 02:36:42,319
and good one

02:36:52,800 --> 02:37:00,399
great so several several copies

02:36:56,319 --> 02:37:02,960
okay and

02:37:00,399 --> 02:37:03,600
yeah so that's what we have here so a is

02:37:02,960 --> 02:37:06,800
a pair

02:37:03,600 --> 02:37:07,280
right as you can see this is a pair it's

02:37:06,800 --> 02:37:10,880
a pair

02:37:07,280 --> 02:37:12,160
it's a pair it is a pair and so

02:37:10,880 --> 02:37:14,640
just to verify that we don't have

02:37:12,160 --> 02:37:16,720
anything wrong

02:37:14,640 --> 02:37:18,000
so you what you realize is that we

02:37:16,720 --> 02:37:21,040
didn't initialize

02:37:18,000 --> 02:37:22,800
we are not adding the land to this in

02:37:21,040 --> 02:37:24,720
its field because we don't need to

02:37:22,800 --> 02:37:27,200
initialize that we just need to

02:37:24,720 --> 02:37:28,160
define the type of land the type the

02:37:27,200 --> 02:37:29,680
data structure

02:37:28,160 --> 02:37:33,439
that's what we need that's what we need

02:37:29,680 --> 02:37:35,439
to do

02:37:33,439 --> 02:37:36,960
sorry so this is my t-val this is t

02:37:35,439 --> 02:37:41,439
value

02:37:36,960 --> 02:37:44,720
and then let's run this good and we have

02:37:41,439 --> 02:37:44,720
it's working so

02:37:45,359 --> 02:37:49,760
let's go to the deploy smart contract

02:37:48,080 --> 02:37:53,040
and then let's look at the storage

02:37:49,760 --> 02:37:55,200
right now let's look at the types

02:37:53,040 --> 02:37:56,720
good so this is where we'll see so we

02:37:55,200 --> 02:37:58,880
look at looking at it as you see

02:37:56,720 --> 02:38:00,080
lands and then it's a big map and it's

02:37:58,880 --> 02:38:02,319
inside the big map

02:38:00,080 --> 02:38:03,920
the key is a string right which is the

02:38:02,319 --> 02:38:04,560
unique code we plan to assign to each

02:38:03,920 --> 02:38:07,200
land

02:38:04,560 --> 02:38:08,160
and then the pair is the sp dot pair usb

02:38:07,200 --> 02:38:11,439
dot pair

02:38:08,160 --> 02:38:16,560
readout pair right right

02:38:11,439 --> 02:38:16,560
so we have something going on here

02:38:21,680 --> 02:38:29,840
so good that's sweet that's sweet soon

02:38:35,040 --> 02:38:39,680
so everything is in place so now we can

02:38:37,600 --> 02:38:43,120
define our ad land

02:38:39,680 --> 02:38:46,560
all right so i think when we define this

02:38:43,120 --> 02:38:46,560
sp dot entry point

02:38:47,359 --> 02:38:54,560
and def add land

02:38:51,439 --> 02:38:56,479
so self and then params

02:38:54,560 --> 02:38:58,319
and then where we assume that you know

02:38:56,479 --> 02:39:01,760
the user a normal user

02:38:58,319 --> 02:39:01,760
right a land owner right

02:39:02,720 --> 02:39:09,280
has registered their land

02:39:06,560 --> 02:39:11,280
and now they want to you know add it to

02:39:09,280 --> 02:39:13,520
our uh blockchain

02:39:11,280 --> 02:39:14,399
so even if i think of it we need to also

02:39:13,520 --> 02:39:17,520
have

02:39:14,399 --> 02:39:21,680
a data structure for land owners right

02:39:17,520 --> 02:39:25,120
yeah land and owner

02:39:21,680 --> 02:39:28,080
owners right and so how do you think you

02:39:25,120 --> 02:39:32,000
should store lan owners

02:39:28,080 --> 02:39:34,160
well that one is also going to be sp

02:39:32,000 --> 02:39:36,840
map so we couldn't use sp dot big map

02:39:34,160 --> 02:39:40,800
because you can't use two big maps

02:39:36,840 --> 02:39:44,479
right yeah you can't use two big maps

02:39:40,800 --> 02:39:47,920
in in titles

02:39:44,479 --> 02:39:50,319
so just use sp dot map and

02:39:47,920 --> 02:39:51,200
we expected that you know there'll be

02:39:50,319 --> 02:39:53,359
more

02:39:51,200 --> 02:39:54,240
land owners there'll be more land that's

02:39:53,359 --> 02:39:56,319
like than

02:39:54,240 --> 02:39:58,399
land owners or something i don't know so

02:39:56,319 --> 02:40:01,200
the few few land owners in this world

02:39:58,399 --> 02:40:01,600
maybe a thousand not only but let's just

02:40:01,200 --> 02:40:03,520
say

02:40:01,600 --> 02:40:05,520
we are not thinking about this very well

02:40:03,520 --> 02:40:07,680
but anyway

02:40:05,520 --> 02:40:10,240
so you need to also define it the type

02:40:07,680 --> 02:40:13,520
of the key and that is sp dot

02:40:10,240 --> 02:40:16,160
t uh address

02:40:13,520 --> 02:40:18,399
so the land owners have the address and

02:40:16,160 --> 02:40:18,399
then

02:40:18,479 --> 02:40:25,439
t value right

02:40:21,600 --> 02:40:25,840
is we're going to this define it as sp

02:40:25,439 --> 02:40:29,279
dot t

02:40:25,840 --> 02:40:35,200
list an sb.t

02:40:29,279 --> 02:40:36,800
list um unless which is made up of

02:40:35,200 --> 02:40:40,319
strings so let's just go here

02:40:36,800 --> 02:40:43,359
list so yeah let's build.t list

02:40:40,319 --> 02:40:46,640
so we can say we want a list

02:40:43,359 --> 02:40:50,160
made up of string so sp dot type

02:40:46,640 --> 02:40:52,960
sorry as we know t string all right

02:40:50,160 --> 02:40:52,960
so that's sweet

02:40:55,600 --> 02:41:04,640
sorry what here dev test

02:40:59,920 --> 02:41:04,640
expected indented blocks but 943

02:41:04,800 --> 02:41:07,920
oh well yeah i mean that's just right on

02:41:07,359 --> 02:41:10,640
it

02:41:07,920 --> 02:41:12,080
so let's pass in and see if we don't

02:41:10,640 --> 02:41:13,120
have any problem yeah so we don't have

02:41:12,080 --> 02:41:15,600
any problems

02:41:13,120 --> 02:41:18,399
so when we look at types here which is

02:41:15,600 --> 02:41:18,399
our land owners

02:41:20,399 --> 02:41:25,520
owners we have their the address as a

02:41:24,000 --> 02:41:27,279
key for the landowners

02:41:25,520 --> 02:41:29,200
and a list of strengths so this string

02:41:27,279 --> 02:41:32,319
actually is

02:41:29,200 --> 02:41:33,439
like the strength of the land right that

02:41:32,319 --> 02:41:36,960
the person owns

02:41:33,439 --> 02:41:39,120
okay great great

02:41:36,960 --> 02:41:39,120
so

02:41:42,479 --> 02:41:45,920
yeah as well add land so we just want to

02:41:44,240 --> 02:41:47,920
be able to add land first

02:41:45,920 --> 02:41:49,520
so when we are adding land we are adding

02:41:47,920 --> 02:41:51,359
the landfall

02:41:49,520 --> 02:41:53,439
a land owner so we need something like

02:41:51,359 --> 02:41:56,479
params

02:41:53,439 --> 02:41:59,359
we need to have something like params

02:41:56,479 --> 02:42:01,760
dot and i also need to have something

02:41:59,359 --> 02:42:05,439
like params dot

02:42:01,760 --> 02:42:08,160
those who dots land and this dot land

02:42:05,439 --> 02:42:09,760
should contain all the necessary data

02:42:08,160 --> 02:42:13,040
needed to fill this land

02:42:09,760 --> 02:42:15,279
kind of thing right

02:42:13,040 --> 02:42:15,279
so

02:42:17,439 --> 02:42:20,240
let's get to it

02:42:23,040 --> 02:42:26,640
so again who can add land so that people

02:42:25,680 --> 02:42:29,120
can add land

02:42:26,640 --> 02:42:30,479
are they ready stress right so it's only

02:42:29,120 --> 02:42:34,560
the registers

02:42:30,479 --> 02:42:34,560
who can add lunch so

02:42:35,120 --> 02:42:41,840
let's say something like uh

02:42:38,399 --> 02:42:41,840
sp dot verify

02:42:44,160 --> 02:42:47,760
so we have verify equal and then we have

02:42:46,000 --> 02:42:50,640
verify so verify

02:42:47,760 --> 02:42:52,319
we pass in the condition here right and

02:42:50,640 --> 02:42:55,920
this condition

02:42:52,319 --> 02:42:59,640
and then the message it's equal to

02:42:55,920 --> 02:43:02,960
you must be a

02:42:59,640 --> 02:43:06,560
registrar right

02:43:02,960 --> 02:43:08,720
so the condition here is we want to see

02:43:06,560 --> 02:43:10,080
we want to check is whether the center

02:43:08,720 --> 02:43:13,760
of this uh

02:43:10,080 --> 02:43:16,080
sp sender is a registrar right

02:43:13,760 --> 02:43:17,200
so what we are going to say is self and

02:43:16,080 --> 02:43:19,840
registrar is what

02:43:17,200 --> 02:43:20,880
a set so let's go again let's look at

02:43:19,840 --> 02:43:24,240
something here

02:43:20,880 --> 02:43:25,840
so when we look at sets it has

02:43:24,240 --> 02:43:27,840
something called contains i need to

02:43:25,840 --> 02:43:31,120
check whether an element is in that set

02:43:27,840 --> 02:43:37,840
so we know what to do we say

02:43:31,120 --> 02:43:37,840
sp dot

02:43:39,840 --> 02:43:46,880
registrars sorry self dot

02:43:43,040 --> 02:43:51,520
data dot registrars

02:43:46,880 --> 02:43:55,760
dot contains

02:43:51,520 --> 02:43:58,640
right sp dot sender sweet

02:43:55,760 --> 02:43:59,520
and if it doesn't happen that way we're

02:43:58,640 --> 02:44:02,319
gonna

02:43:59,520 --> 02:44:03,359
ignore you so let's let's immediately we

02:44:02,319 --> 02:44:05,840
can test

02:44:03,359 --> 02:44:05,840
so

02:44:07,279 --> 02:44:10,240
so addland

02:44:16,720 --> 02:44:24,080
and you have scenario plus equals

02:44:20,080 --> 02:44:27,760
c dot add

02:44:24,080 --> 02:44:30,880
land yep and then

02:44:27,760 --> 02:44:31,439
to add a land so let's create a fake

02:44:30,880 --> 02:44:35,359
user

02:44:31,439 --> 02:44:38,960
so land owner

02:44:35,359 --> 02:44:42,000
is equal to sp dot

02:44:38,960 --> 02:44:42,000
test account

02:44:43,359 --> 02:44:48,479
land owner yeah

02:44:48,560 --> 02:44:51,760
and uh

02:44:55,760 --> 02:44:59,040
and then we need to define the land

02:44:57,279 --> 02:45:01,279
itself so

02:44:59,040 --> 02:45:03,600
to do that we use a python dictionary

02:45:01,279 --> 02:45:06,160
and then we are going to say

02:45:03,600 --> 02:45:06,160
something like

02:45:07,760 --> 02:45:13,920
the lan code maybe it's a b

02:45:11,359 --> 02:45:15,439
c so if you know about your coding you

02:45:13,920 --> 02:45:15,920
know that we can give each piece of

02:45:15,439 --> 02:45:19,040
learning

02:45:15,920 --> 02:45:21,439
a specific numeric code or alphanumeric

02:45:19,040 --> 02:45:24,720
code right so

02:45:21,439 --> 02:45:28,080
for instance if you're familiar with

02:45:24,720 --> 02:45:29,040
um we have some certain apps like snow

02:45:28,080 --> 02:45:32,080
code and

02:45:29,040 --> 02:45:34,960
even in ghana here we have like an

02:45:32,080 --> 02:45:36,960
app that gives specific locations to

02:45:34,960 --> 02:45:39,680
specific like

02:45:36,960 --> 02:45:42,240
names to specific locations right so

02:45:39,680 --> 02:45:44,800
this is quite simple so we can do this

02:45:42,240 --> 02:45:45,760
for every land and we can have our own

02:45:44,800 --> 02:45:47,520
system but

02:45:45,760 --> 02:45:49,840
for now let's just assume that we have a

02:45:47,520 --> 02:45:51,120
code right a way of assigning codes to

02:45:49,840 --> 02:45:54,080
each land

02:45:51,120 --> 02:45:54,080
and then we have the a

02:45:54,960 --> 02:45:59,920
let's say is one comma two

02:46:00,240 --> 02:46:06,960
we have a b right

02:46:05,040 --> 02:46:08,399
three comma four i mean i don't think

02:46:06,960 --> 02:46:10,640
this is making x square but

02:46:08,399 --> 02:46:13,359
if you have to 3.4 points in space it

02:46:10,640 --> 02:46:13,359
should be a square

02:46:18,240 --> 02:46:27,680
yeah if you have four points real quick

02:46:24,240 --> 02:46:27,680
four comma three

02:46:29,920 --> 02:46:33,040
no it shouldn't be a square but you know

02:46:31,520 --> 02:46:38,160
it should be like

02:46:33,040 --> 02:46:41,520
sorry sorry yeah

02:46:38,160 --> 02:46:43,840
five comma four right

02:46:41,520 --> 02:46:43,840
um

02:46:46,800 --> 02:46:50,800
all right so that's all we need for land

02:46:51,359 --> 02:46:57,200
good good okay

02:46:55,040 --> 02:46:59,040
so that's all we need for land and we

02:46:57,200 --> 02:47:00,920
will say

02:46:59,040 --> 02:47:02,160
so since we want to say

02:47:00,920 --> 02:47:05,680
param.oneparam.land

02:47:02,160 --> 02:47:08,560
we're going to say owner is equal to

02:47:05,680 --> 02:47:09,840
land and let's go owner and we want the

02:47:08,560 --> 02:47:11,840
address of the owner

02:47:09,840 --> 02:47:12,880
don't forget this it's good called

02:47:11,840 --> 02:47:16,479
frustration

02:47:12,880 --> 02:47:20,560
and land right and then we say this

02:47:16,479 --> 02:47:23,920
should be so we can run this

02:47:20,560 --> 02:47:25,680
and the sender can be any of the

02:47:23,920 --> 02:47:27,439
registrars right so let's assume we are

02:47:25,680 --> 02:47:29,520
using registrar one

02:47:27,439 --> 02:47:31,120
which would have been removed by now so

02:47:29,520 --> 02:47:34,319
let's say

02:47:31,120 --> 02:47:36,160
register three

02:47:34,319 --> 02:47:37,600
all right registration is not removed

02:47:36,160 --> 02:47:38,399
because over here somewhere we are

02:47:37,600 --> 02:47:41,200
removing

02:47:38,399 --> 02:47:42,720
register one so and that would have been

02:47:41,200 --> 02:47:44,800
a disaster

02:47:42,720 --> 02:47:46,160
so what we have here is we verify that

02:47:44,800 --> 02:47:49,600
uh indeed

02:47:46,160 --> 02:47:51,760
the data contains whatever you know

02:47:49,600 --> 02:47:53,439
i mean the person is a registrar and

02:47:51,760 --> 02:47:56,880
this seems to work

02:47:53,439 --> 02:48:00,240
right and

02:47:56,880 --> 02:48:02,880
to let's just all right so

02:48:00,240 --> 02:48:04,720
um we take out the land in the code from

02:48:02,880 --> 02:48:06,960
this place and emphasis here

02:48:04,720 --> 02:48:07,760
and that's also our problems for us so

02:48:06,960 --> 02:48:10,880
now we cannot

02:48:07,760 --> 02:48:11,840
access also the code from params.cod in

02:48:10,880 --> 02:48:14,240
this place

02:48:11,840 --> 02:48:16,080
right we just want to separate it so

02:48:14,240 --> 02:48:18,640
that we can easily do this

02:48:16,080 --> 02:48:18,640
okay so

02:48:21,600 --> 02:48:25,840
all right so what we're going to do is

02:48:25,359 --> 02:48:28,880
say

02:48:25,840 --> 02:48:31,600
sp sorry so i mean

02:48:28,880 --> 02:48:33,200
this line says of course is a registrar

02:48:31,600 --> 02:48:34,000
that is calling this function and so the

02:48:33,200 --> 02:48:37,200
next is

02:48:34,000 --> 02:48:40,240
we can then add the land

02:48:37,200 --> 02:48:45,600
server.data dot

02:48:40,240 --> 02:48:47,840
land lance all right

02:48:45,600 --> 02:48:47,840
and

02:48:48,880 --> 02:48:51,439
you say

02:48:54,319 --> 02:49:02,000
that lance okay is equal to and now

02:48:57,760 --> 02:49:04,640
you see that the the key

02:49:02,000 --> 02:49:05,920
the lan has a key and so that key is

02:49:04,640 --> 02:49:07,600
what

02:49:05,920 --> 02:49:09,279
is supposed to be the code parameter

02:49:07,600 --> 02:49:13,840
code i will

02:49:09,279 --> 02:49:16,160
use here and then we are going to equals

02:49:13,840 --> 02:49:17,520
we are going to set it to sp and then

02:49:16,160 --> 02:49:21,040
the value is a record right

02:49:17,520 --> 02:49:22,720
so to create a record actually let's see

02:49:21,040 --> 02:49:24,640
so this is just declaring the type but

02:49:22,720 --> 02:49:25,520
to create actually create an error code

02:49:24,640 --> 02:49:31,279
you have to use

02:49:25,520 --> 02:49:31,279
you know this thing so sp dot record

02:49:32,080 --> 02:49:40,800
and the field so our first word was

02:49:36,479 --> 02:49:44,560
a right so a equals

02:49:40,800 --> 02:49:47,040
params dot a isn't it

02:49:44,560 --> 02:49:49,520
oh no params of a because we are talking

02:49:47,040 --> 02:49:54,479
about the dictionary here

02:49:49,520 --> 02:49:58,080
and b equals

02:49:54,479 --> 02:50:01,760
params of b

02:49:58,080 --> 02:50:04,880
and c equals params

02:50:01,760 --> 02:50:09,439
of c

02:50:04,880 --> 02:50:13,279
and last one d equals

02:50:09,439 --> 02:50:15,520
params of d

02:50:13,279 --> 02:50:18,800
right so then before anything let's just

02:50:15,520 --> 02:50:18,800
run this and see what happens

02:50:20,840 --> 02:50:23,840
okay

02:50:34,840 --> 02:50:37,840
so

02:50:42,399 --> 02:50:47,359
all right so it seems right hitting this

02:50:45,920 --> 02:50:50,080
arrow

02:50:47,359 --> 02:50:51,200
and um the reason for this so we are

02:50:50,080 --> 02:50:53,520
missing this

02:50:51,200 --> 02:50:54,640
so we params dot land right not just

02:50:53,520 --> 02:50:58,240
land i found

02:50:54,640 --> 02:51:02,840
not just paragraph land because yeah

02:50:58,240 --> 02:51:05,840
we want to access the land in params

02:51:02,840 --> 02:51:05,840
and

02:51:05,920 --> 02:51:10,640
yeah i mean so there's a land so you're

02:51:08,479 --> 02:51:13,840
supposed to say problems with land

02:51:10,640 --> 02:51:13,840
and so when we run this

02:51:16,080 --> 02:51:20,160
so initially we see the lantern has key

02:51:18,160 --> 02:51:22,370
value and the key

02:51:20,160 --> 02:51:25,589
something some long stuff and

02:51:22,370 --> 02:51:25,589
[Music]

02:51:25,680 --> 02:51:28,479
what we have here

02:51:28,720 --> 02:51:32,000
after we do the addland you see you have

02:51:31,520 --> 02:51:34,319
the code

02:51:32,000 --> 02:51:35,520
abcd and then we have a key value so a

02:51:34,319 --> 02:51:38,720
is one two

02:51:35,520 --> 02:51:41,760
b is three two four it's four three

02:51:38,720 --> 02:51:44,000
and and and so on and so forth

02:51:41,760 --> 02:51:47,840
and let's see how this implant actually

02:51:44,000 --> 02:51:47,840
looks like you know

02:51:48,000 --> 02:51:54,720
oh i mean there's no way to do that so

02:51:51,680 --> 02:51:55,600
let's just forget about it so anyway i'm

02:51:54,720 --> 02:51:57,600
sure this is

02:51:55,600 --> 02:51:59,600
some sort of rectangular no it's not

02:51:57,600 --> 02:52:02,319
rectangular because

02:51:59,600 --> 02:52:04,640
i don't know but it should look good

02:52:02,319 --> 02:52:04,640
though

02:52:05,120 --> 02:52:09,200
so but that's not the only thing once we

02:52:07,600 --> 02:52:11,200
added the land we also need to

02:52:09,200 --> 02:52:13,200
add the owner and then we need to say

02:52:11,200 --> 02:52:14,960
that this land belong to this one

02:52:13,200 --> 02:52:17,920
right so now let's say we've added the

02:52:14,960 --> 02:52:21,520
land now we say itself

02:52:17,920 --> 02:52:26,319
dot data

02:52:21,520 --> 02:52:29,840
dot land owners

02:52:26,319 --> 02:52:29,840
on s equals

02:52:31,439 --> 02:52:35,520
and it's a map so we need to say

02:52:33,680 --> 02:52:38,960
something like that

02:52:35,520 --> 02:52:42,000
and then sp dot sorry

02:52:38,960 --> 02:52:45,920
params dot corner right remember

02:52:42,000 --> 02:52:49,200
you need to pass the owner a land owner

02:52:45,920 --> 02:52:54,080
and then that's equal to

02:52:49,200 --> 02:52:54,080
uh sp not

02:52:54,240 --> 02:52:58,840
never listen so we just say product

02:52:56,640 --> 02:53:01,840
owner

02:52:58,840 --> 02:53:01,840
equals

02:53:02,900 --> 02:53:11,279
[Music]

02:53:06,000 --> 02:53:14,319
so we're not

02:53:11,279 --> 02:53:15,680
let's go to the list of so we need to

02:53:14,319 --> 02:53:16,880
think about as well right because you

02:53:15,680 --> 02:53:19,920
have a list

02:53:16,880 --> 02:53:19,920
and it's possible that

02:53:21,760 --> 02:53:25,840
so when we do something like okay

02:53:26,800 --> 02:53:29,760
and we have a list

02:53:30,240 --> 02:53:33,760
so i mean first like my bad so let's

02:53:32,080 --> 02:53:37,040
change this from a list to a map

02:53:33,760 --> 02:53:37,600
to a set that makes things much much

02:53:37,040 --> 02:53:40,720
easier

02:53:37,600 --> 02:53:43,760
right so we can just say

02:53:40,720 --> 02:53:44,880
because then it goes and control that

02:53:43,760 --> 02:53:47,680
same line twice

02:53:44,880 --> 02:53:47,680
so let's just see

02:53:49,040 --> 02:53:53,600
uh dot add right

02:53:52,160 --> 02:53:55,920
because it's a set we're referring to

02:53:53,600 --> 02:53:59,120
and then we'll see

02:53:55,920 --> 02:54:04,160
params dot code right

02:53:59,120 --> 02:54:04,160
and uh

02:54:04,840 --> 02:54:07,840
oh

02:54:08,000 --> 02:54:14,160
first peter's address is not found

02:54:18,840 --> 02:54:21,840
huh

02:54:22,680 --> 02:54:25,680
landowner.address

02:54:28,960 --> 02:54:36,319
oh yeah so

02:54:32,640 --> 02:54:36,319
yeah so it's complaining because i mean

02:54:36,560 --> 02:54:42,080
we are trying to assess a map

02:54:39,920 --> 02:54:43,040
a value in the map which does not exist

02:54:42,080 --> 02:54:45,760
and we are trying to

02:54:43,040 --> 02:54:48,960
in fact i said that value there right so

02:54:45,760 --> 02:54:53,840
what we should be doing

02:54:48,960 --> 02:54:57,040
is first of all let's let's do this

02:54:53,840 --> 02:54:58,880
let's say sp so i i want to just

02:54:57,040 --> 02:55:02,000
introduce to sp dot

02:54:58,880 --> 02:55:04,160
so yes you can do if and all of that

02:55:02,000 --> 02:55:05,200
so any if you want to do control flow

02:55:04,160 --> 02:55:08,399
statement you need to

02:55:05,200 --> 02:55:08,800
use sp dot something so sp dot eve sp

02:55:08,399 --> 02:55:13,040
dot

02:55:08,800 --> 02:55:13,040
for sp dot file it all works

02:55:13,120 --> 02:55:21,040
so we wanted to check if

02:55:16,399 --> 02:55:21,040
we already have this landowner right

02:55:21,120 --> 02:55:24,080
dot contains

02:55:25,840 --> 02:55:32,160
sp sorry params dot corner

02:55:30,000 --> 02:55:33,680
right so if this one exists then we can

02:55:32,160 --> 02:55:35,920
actually this code is valid

02:55:33,680 --> 02:55:35,920
right

02:55:38,160 --> 02:55:41,359
and this code is valid

02:55:42,840 --> 02:55:48,720
else so we don't see else you say sp dot

02:55:46,479 --> 02:55:48,720
else

02:55:50,720 --> 02:55:59,200
self dot data dot land

02:55:55,040 --> 02:56:03,200
on s right

02:55:59,200 --> 02:56:05,040
of params.owner

02:56:03,200 --> 02:56:07,600
so because we are now setting it to say

02:56:05,040 --> 02:56:10,800
equals sp dot

02:56:07,600 --> 02:56:13,600
set and then we just say

02:56:10,800 --> 02:56:15,680
something like params.code so we're just

02:56:13,600 --> 02:56:18,319
creating a set with one element

02:56:15,680 --> 02:56:18,880
right but then after they said after

02:56:18,319 --> 02:56:22,240
this is

02:56:18,880 --> 02:56:24,319
done then we can just easily add right

02:56:22,240 --> 02:56:25,680
so that's why we're having the error

02:56:24,319 --> 02:56:26,640
hopefully that's why we're having the

02:56:25,680 --> 02:56:28,960
error

02:56:26,640 --> 02:56:31,040
so sp dot if sub dot data dot land

02:56:28,960 --> 02:56:34,080
owners contains parameter

02:56:31,040 --> 02:56:38,080
owner okay

02:56:34,080 --> 02:56:40,560
yeah it should make sense and yeah

02:56:38,080 --> 02:56:42,399
it works right so now we have the land

02:56:40,560 --> 02:56:45,439
owners

02:56:42,399 --> 02:56:45,439
and then we have the lands

02:56:46,240 --> 02:56:49,520
and then we have the monetary of the

02:56:47,600 --> 02:56:52,640
registrars right

02:56:49,520 --> 02:56:54,080
so we can write some more tests and this

02:56:52,640 --> 02:56:55,840
this is where i'll leave you guys

02:56:54,080 --> 02:56:59,760
because uh

02:56:55,840 --> 02:57:04,240
we've done most of the things here

02:56:59,760 --> 02:57:04,240
so let's just write

02:57:04,800 --> 02:57:12,080
extra tests right so okay

02:57:09,200 --> 02:57:12,080
what if we try to

02:57:12,960 --> 02:57:16,160
so let's think of some scenarios so add

02:57:15,279 --> 02:57:20,840
land

02:57:16,160 --> 02:57:23,840
so let's try to add add land with wrong

02:57:20,840 --> 02:57:23,840
right

02:57:24,560 --> 02:57:31,840
headland with

02:57:28,000 --> 02:57:34,240
wrong wrong registrar

02:57:31,840 --> 02:57:34,240
right

02:57:35,040 --> 02:57:38,080
so this is a test you're writing just

02:57:36,560 --> 02:57:41,359
for future sake

02:57:38,080 --> 02:57:41,359
in case something happened right

02:57:41,520 --> 02:57:47,359
and all of this code will be

02:57:45,279 --> 02:57:49,439
stored in our github account and

02:57:47,359 --> 02:57:51,920
actually i'm going to develop a nice ui

02:57:49,439 --> 02:57:55,200
for it and all of that

02:57:51,920 --> 02:57:59,120
maybe do a

02:57:55,200 --> 02:58:00,800
an extended youtube tutorial so

02:57:59,120 --> 02:58:03,200
but i mean you know you can just go and

02:58:00,800 --> 02:58:07,600
try to complete this all right

02:58:03,200 --> 02:58:09,200
but because our our objective is where

02:58:07,600 --> 02:58:11,200
once the land is registered now land

02:58:09,200 --> 02:58:13,760
owners should be able to sell pieces

02:58:11,200 --> 02:58:15,439
of their land right other users on the

02:58:13,760 --> 02:58:17,680
on the platform so

02:58:15,439 --> 02:58:19,040
that is something else that we've not

02:58:17,680 --> 02:58:22,080
done

02:58:19,040 --> 02:58:25,040
all right but that should be possible

02:58:22,080 --> 02:58:27,040
and i don't want to boy because i've

02:58:25,040 --> 02:58:29,200
spent a lot of time already

02:58:27,040 --> 02:58:30,479
so i'll just put all of that like it

02:58:29,200 --> 02:58:34,080
have repo

02:58:30,479 --> 02:58:34,760
and you can go look at it all right

02:58:34,080 --> 02:58:37,200
so

02:58:34,760 --> 02:58:40,240
[Music]

02:58:37,200 --> 02:58:42,800
so we add land with wrong registrar so

02:58:40,240 --> 02:58:42,800
let's see

02:58:43,359 --> 02:58:50,960
wrong registrar

02:58:46,800 --> 02:58:53,520
all right and sb.test

02:58:50,960 --> 02:58:53,520
account

02:58:57,520 --> 02:59:01,200
oh okay we have the wrong even account

02:59:00,000 --> 02:59:03,680
today already

02:59:01,200 --> 02:59:04,500
that's this one so we can just use that

02:59:03,680 --> 02:59:06,080
all right

02:59:04,500 --> 02:59:09,760
[Music]

02:59:06,080 --> 02:59:13,200
let's just try to run this code again

02:59:09,760 --> 02:59:18,479
okay but

02:59:13,200 --> 02:59:21,600
right so um

02:59:18,479 --> 02:59:22,160
land owner run sender so we are going to

02:59:21,600 --> 02:59:25,359
run

02:59:22,160 --> 02:59:28,960
so we are going to copy this code and

02:59:25,359 --> 02:59:30,960
then we are going to

02:59:28,960 --> 02:59:32,960
but instead of sending out three we are

02:59:30,960 --> 02:59:34,479
going to do the wrong

02:59:32,960 --> 02:59:35,840
account that we created this account

02:59:34,479 --> 02:59:36,960
hasn't been already set anywhere so it's

02:59:35,840 --> 02:59:38,640
around that

02:59:36,960 --> 02:59:42,960
we are going to get oh you must be a

02:59:38,640 --> 02:59:46,479
registrar and so we need to use that uh

02:59:42,960 --> 02:59:47,760
valid equals false i will say something

02:59:46,479 --> 02:59:51,760
like that

02:59:47,760 --> 02:59:55,359
and that by that you know get this

02:59:51,760 --> 02:59:58,160
so yeah

02:59:55,359 --> 03:00:00,080
and the features left is now we can

02:59:58,160 --> 03:00:02,960
already try that we can register land

03:00:00,080 --> 03:00:05,120
other features left as it will be able

03:00:02,960 --> 03:00:05,120
to

03:00:06,960 --> 03:00:14,240
sp dot entry

03:00:10,560 --> 03:00:18,160
point def you will just

03:00:14,240 --> 03:00:22,840
to sell land all right

03:00:18,160 --> 03:00:25,680
self and then params and

03:00:22,840 --> 03:00:27,760
this should be able to have

03:00:25,680 --> 03:00:29,200
the params the power should be something

03:00:27,760 --> 03:00:31,279
like params

03:00:29,200 --> 03:00:33,040
you know this okay this something you

03:00:31,279 --> 03:00:36,880
you should do

03:00:33,040 --> 03:00:41,920
you know apparently that does uh

03:00:36,880 --> 03:00:45,439
you have our dot programs that

03:00:41,920 --> 03:00:46,720
may be called in it so this coordinates

03:00:45,439 --> 03:00:50,720
will contain

03:00:46,720 --> 03:00:53,840
like uh exactly like a

03:00:50,720 --> 03:00:53,840
you know

03:00:54,000 --> 03:00:56,160
be

03:00:57,200 --> 03:01:01,840
and you see to just give coordinates so

03:01:00,080 --> 03:01:03,520
someone can sell

03:01:01,840 --> 03:01:05,439
maybe part of their land so for instance

03:01:03,520 --> 03:01:08,720
this guy who has one

03:01:05,439 --> 03:01:12,080
and so one two

03:01:08,720 --> 03:01:15,439
is one two b is thirty two four

03:01:12,080 --> 03:01:17,680
b c's uh four three and d is five

03:01:15,439 --> 03:01:19,359
four right maybe they should be able to

03:01:17,680 --> 03:01:21,920
sell

03:01:19,359 --> 03:01:22,720
a portion within this coordinates right

03:01:21,920 --> 03:01:24,800
so a

03:01:22,720 --> 03:01:24,800
b

03:01:32,160 --> 03:01:38,399
c and d so

03:01:35,520 --> 03:01:38,880
suppose if it turns out to be i don't

03:01:38,399 --> 03:01:42,080
know but

03:01:38,880 --> 03:01:44,560
let's try to sketch this so one two

03:01:42,080 --> 03:01:47,120
where do you think one two so let's say

03:01:44,560 --> 03:01:49,760
one two let's assume one two is here

03:01:47,120 --> 03:01:51,040
x is one and y is two let's assume

03:01:49,760 --> 03:01:54,560
that's here

03:01:51,040 --> 03:01:57,279
and that means uh three two

03:01:54,560 --> 03:01:57,279
x is three

03:01:58,240 --> 03:02:06,240
so x is three will be somewhere here

03:02:03,040 --> 03:02:09,279
and y is two right

03:02:06,240 --> 03:02:14,479
good and then x is for

03:02:09,279 --> 03:02:14,479
y is three so x is for

03:02:14,840 --> 03:02:20,560
now this is four by y is three so let's

03:02:18,319 --> 03:02:24,640
say something like this

03:02:20,560 --> 03:02:28,240
and then five four right

03:02:24,640 --> 03:02:28,240
so x is five

03:02:28,800 --> 03:02:32,080
and why it's four so let's say something

03:02:31,040 --> 03:02:36,000
like this

03:02:32,080 --> 03:02:38,800
so you can have yeah hey

03:02:36,000 --> 03:02:41,200
i said it oh no i didn't see anything so

03:02:38,800 --> 03:02:46,399
maybe the person can decide to sell

03:02:41,200 --> 03:02:46,399
maybe just this part of their land right

03:02:47,680 --> 03:02:51,279
and that that is the coordinates we are

03:02:49,439 --> 03:02:52,560
going to receive here and so we need to

03:02:51,279 --> 03:02:55,040
be able to do some

03:02:52,560 --> 03:02:56,880
kind of checking to see like if indeed

03:02:55,040 --> 03:02:59,359
this coordinate falls within

03:02:56,880 --> 03:03:00,240
this part of the land and then we need

03:02:59,359 --> 03:03:03,120
to create another

03:03:00,240 --> 03:03:05,040
data structure to keep records of all

03:03:03,120 --> 03:03:07,279
the transactions that are happening

03:03:05,040 --> 03:03:08,960
right and all of this could be done on

03:03:07,279 --> 03:03:11,840
some other smart contractor you could

03:03:08,960 --> 03:03:15,439
just do it here you know for me

03:03:11,840 --> 03:03:17,120
but yeah we sell the land so

03:03:15,439 --> 03:03:18,479
one thing we could add about four lands

03:03:17,120 --> 03:03:21,439
it

03:03:18,479 --> 03:03:21,920
say italians would have like a price

03:03:21,439 --> 03:03:24,800
right

03:03:21,920 --> 03:03:25,760
so the owner comprise their land and

03:03:24,800 --> 03:03:28,960
there's say sp

03:03:25,760 --> 03:03:32,720
dot uh

03:03:28,960 --> 03:03:33,920
t and right so you can price your land

03:03:32,720 --> 03:03:36,399
here

03:03:33,920 --> 03:03:36,399
and then

03:03:37,040 --> 03:03:42,560
yeah so so a lot of this can be done

03:03:40,399 --> 03:03:47,200
here

03:03:42,560 --> 03:03:50,399
and um yeah interesting stuff right

03:03:47,200 --> 03:03:52,000
so all of this

03:03:50,399 --> 03:03:53,439
will be implemented and put onto the

03:03:52,000 --> 03:03:58,319
case have ripple

03:03:53,439 --> 03:03:58,319
which i believe is

03:04:03,120 --> 03:04:10,800
is here let me pull it out let me pull

03:04:08,319 --> 03:04:10,800
it out

03:04:11,279 --> 03:04:19,120
so my kids are people can you go to

03:04:16,640 --> 03:04:19,120
people

03:04:21,359 --> 03:04:26,319
yeah and then python 2020 right

03:04:24,399 --> 03:04:28,560
so mark will see it have a pop icon

03:04:26,319 --> 03:04:29,279
2020. you should see this and i have

03:04:28,560 --> 03:04:33,439
this set

03:04:29,279 --> 03:04:36,240
guy yeah then i have the contra dot py

03:04:33,439 --> 03:04:37,520
and in here it's a view app that is

03:04:36,240 --> 03:04:38,319
going to interact with the contract

03:04:37,520 --> 03:04:41,120
appear

03:04:38,319 --> 03:04:42,160
py all right so you see all of that

03:04:41,120 --> 03:04:45,359
there

03:04:42,160 --> 03:04:48,880
um nice

03:04:45,359 --> 03:04:51,040
to i'm very glad to have

03:04:48,880 --> 03:04:52,560
been able to share what i have learned

03:04:51,040 --> 03:04:55,680
so far with you

03:04:52,560 --> 03:04:55,680
and hopefully

03:04:56,160 --> 03:05:07,680
you've learned something

03:05:05,600 --> 03:05:07,680

YouTube URL: https://www.youtube.com/watch?v=08o9SvQr_pY


