Title: Keynote #2  - Python 4 x  What do You Expect - Joannah Nanjekye || PyCon Africa 2020
Publication date: 2020-08-29
Playlist: PyCon Africa 2020
Description: 
	Our 2nd Keynote at PyCon Africa 2020 was delivered by Joannah Nanjekye titled: Python 4 x  What do You Expect. 

Joannah Nanjekye has a background as a Software and Aeronautical Engineer. Currently, a Python Core developer and doing research on garbage collection in Python with the Center for Advanced studies - Atlantic, at the University of New Brunswick in Canada, but originally from Uganda, East Africa. She is also the author of Python 2 and 3 compatibility, a book published by Apress.
Captions: 
	00:00:15,440 --> 00:00:20,400
um so

00:00:16,640 --> 00:00:21,039
hi everyone uh thanks for coming to my

00:00:20,400 --> 00:00:25,279
talk

00:00:21,039 --> 00:00:29,119
uh my name is joanna and today

00:00:25,279 --> 00:00:30,400
i'm going to be talking about python in

00:00:29,119 --> 00:00:34,320
general

00:00:30,400 --> 00:00:37,680
um so don't be misguided by my title

00:00:34,320 --> 00:00:41,440
we will never have python for point x at

00:00:37,680 --> 00:00:42,840
any one point in time so from python 3.9

00:00:41,440 --> 00:00:46,000
we went to

00:00:42,840 --> 00:00:48,559
3.10 to just

00:00:46,000 --> 00:00:51,360
to just avoid the bias that came between

00:00:48,559 --> 00:00:53,520
the transition from python two and three

00:00:51,360 --> 00:00:54,559
however my talk is going to revolve

00:00:53,520 --> 00:00:57,120
around

00:00:54,559 --> 00:00:58,239
uh the question what do we all expect in

00:00:57,120 --> 00:01:01,920
python

00:00:58,239 --> 00:01:04,159
and throughout my talk i will

00:01:01,920 --> 00:01:05,119
uh you'll find that this question is

00:01:04,159 --> 00:01:08,159
going to

00:01:05,119 --> 00:01:11,600
really lie on each of us as

00:01:08,159 --> 00:01:14,159
an individual so uh before

00:01:11,600 --> 00:01:17,119
i continue let uh let me tell you

00:01:14,159 --> 00:01:20,000
something a little bit about myself

00:01:17,119 --> 00:01:22,159
i'm a full stack ugandan i am from

00:01:20,000 --> 00:01:26,640
originally from uganda

00:01:22,159 --> 00:01:28,479
uh somewhere in east africa and um

00:01:26,640 --> 00:01:29,920
but by background i'm a software

00:01:28,479 --> 00:01:33,439
engineer and

00:01:29,920 --> 00:01:36,640
an aeronautical engineer though i mostly

00:01:33,439 --> 00:01:40,640
practice software engineering and do

00:01:36,640 --> 00:01:43,200
aeronautical uh work for for a passion

00:01:40,640 --> 00:01:46,479
so it's something i do over the weekend

00:01:43,200 --> 00:01:48,720
or something um

00:01:46,479 --> 00:01:50,000
as a software engineer i've worked with

00:01:48,720 --> 00:01:53,920
a couple of companies

00:01:50,000 --> 00:01:55,200
uh mostly in fintech uh developing

00:01:53,920 --> 00:01:57,119
banking software

00:01:55,200 --> 00:01:58,640
software that runs on top of core

00:01:57,119 --> 00:02:00,240
banking i've been

00:01:58,640 --> 00:02:02,240
i've had the privilege of working with

00:02:00,240 --> 00:02:05,360
companies like laborers

00:02:02,240 --> 00:02:08,239
and fintech in uganda so

00:02:05,360 --> 00:02:09,280
i am i'm very avid open source

00:02:08,239 --> 00:02:12,560
contributor

00:02:09,280 --> 00:02:13,120
and i started to contribute uh to open

00:02:12,560 --> 00:02:16,160
source

00:02:13,120 --> 00:02:18,480
through summer programs like rails girl

00:02:16,160 --> 00:02:19,200
summer of course i'm sure some of you

00:02:18,480 --> 00:02:21,520
have

00:02:19,200 --> 00:02:23,840
have heard about some of these summer

00:02:21,520 --> 00:02:26,879
programs and outreachy

00:02:23,840 --> 00:02:29,840
so and

00:02:26,879 --> 00:02:30,879
over time i've i've learned a lot of

00:02:29,840 --> 00:02:34,080
stuff

00:02:30,879 --> 00:02:36,000
become an author of a python book uh you

00:02:34,080 --> 00:02:39,680
can check it out it's all over the place

00:02:36,000 --> 00:02:44,080
on amazon and other major uh uh

00:02:39,680 --> 00:02:47,680
book sites uh per se and after some time

00:02:44,080 --> 00:02:50,480
i i moved over and

00:02:47,680 --> 00:02:51,280
went into research and i'm currently

00:02:50,480 --> 00:02:53,599
doing

00:02:51,280 --> 00:02:55,519
uh research on garbage collection in

00:02:53,599 --> 00:02:57,840
python with ibm

00:02:55,519 --> 00:02:59,200
and the university of new brunswick but

00:02:57,840 --> 00:03:02,480
i'm also as part of my

00:02:59,200 --> 00:03:04,159
my my research i am enrolled as a phd

00:03:02,480 --> 00:03:06,879
student

00:03:04,159 --> 00:03:07,360
i'm also a python core developer that

00:03:06,879 --> 00:03:10,720
means

00:03:07,360 --> 00:03:14,560
me guido and other quad developers

00:03:10,720 --> 00:03:17,680
have the privilege of maintaining the

00:03:14,560 --> 00:03:21,200
python programming language i

00:03:17,680 --> 00:03:24,080
am also a huge fan of my ladies

00:03:21,200 --> 00:03:26,560
and as part of my time i organized pi

00:03:24,080 --> 00:03:29,760
ladies kampala

00:03:26,560 --> 00:03:33,200
so let's get started uh so

00:03:29,760 --> 00:03:34,640
most of us have come here we've come to

00:03:33,200 --> 00:03:37,840
picon

00:03:34,640 --> 00:03:40,720
because we love python yeah

00:03:37,840 --> 00:03:43,280
uh it could be for so many reasons but

00:03:40,720 --> 00:03:46,480
at least we are united by the fact

00:03:43,280 --> 00:03:48,799
that we love python in some sort of way

00:03:46,480 --> 00:03:50,080
either because we use it or we are

00:03:48,799 --> 00:03:53,599
learning it

00:03:50,080 --> 00:03:56,799
or something so i started to program

00:03:53,599 --> 00:03:57,439
uh by going for a gauze event it was

00:03:56,799 --> 00:04:00,560
called

00:03:57,439 --> 00:04:03,840
rails gauss during that time and

00:04:00,560 --> 00:04:05,040
in rails girls uh really i went there to

00:04:03,840 --> 00:04:07,439
have snacks

00:04:05,040 --> 00:04:08,799
to eat some snacks i didn't really want

00:04:07,439 --> 00:04:11,519
to program

00:04:08,799 --> 00:04:14,080
but i kept going because it's the events

00:04:11,519 --> 00:04:16,239
usually were like on a friday and i

00:04:14,080 --> 00:04:18,560
didn't have programs to do so i just

00:04:16,239 --> 00:04:21,120
went there to have a few snacks

00:04:18,560 --> 00:04:23,600
but over time i started to get curious

00:04:21,120 --> 00:04:25,600
about programming and through the rails

00:04:23,600 --> 00:04:28,320
community to my surprise

00:04:25,600 --> 00:04:30,000
i started to work on python projects

00:04:28,320 --> 00:04:32,639
through the rails community

00:04:30,000 --> 00:04:34,800
so after through rails gao summer of

00:04:32,639 --> 00:04:36,000
code i worked on cute browser that was a

00:04:34,800 --> 00:04:39,440
python project

00:04:36,000 --> 00:04:41,840
and that's why i use python

00:04:39,440 --> 00:04:42,800
up to now so i celebrate it and i love

00:04:41,840 --> 00:04:46,080
it because of

00:04:42,800 --> 00:04:49,199
that uh a lot of changes

00:04:46,080 --> 00:04:50,880
it has had a great impact in my life so

00:04:49,199 --> 00:04:54,000
regardless of your

00:04:50,880 --> 00:04:56,400
of of why you came to love python

00:04:54,000 --> 00:04:58,080
it's irrelevant for me it was not you

00:04:56,400 --> 00:04:59,759
may have a different story but

00:04:58,080 --> 00:05:02,320
at the end of the day we are gathered

00:04:59,759 --> 00:05:04,479
here uh because we have python and

00:05:02,320 --> 00:05:06,000
because it's been a popular and a

00:05:04,479 --> 00:05:08,479
successful language

00:05:06,000 --> 00:05:09,120
successful because we've been able to

00:05:08,479 --> 00:05:11,919
have

00:05:09,120 --> 00:05:13,759
a very successful use cases work for it

00:05:11,919 --> 00:05:16,160
running python on the web

00:05:13,759 --> 00:05:17,039
running python for microcontrollers

00:05:16,160 --> 00:05:20,320
running python

00:05:17,039 --> 00:05:23,919
in different aspects of life

00:05:20,320 --> 00:05:26,000
now uh um before i talk about the

00:05:23,919 --> 00:05:27,680
successes of python and welcome let's

00:05:26,000 --> 00:05:31,360
just look at

00:05:27,680 --> 00:05:33,360
uh what makes us a success successful

00:05:31,360 --> 00:05:36,479
language like python

00:05:33,360 --> 00:05:38,479
so research has as shown a couple of

00:05:36,479 --> 00:05:40,720
papers have been written

00:05:38,479 --> 00:05:42,479
about uh with a couple of surveys

00:05:40,720 --> 00:05:45,520
surveying different developers

00:05:42,479 --> 00:05:47,039
and interviewing them about what makes

00:05:45,520 --> 00:05:49,440
you adopt a language

00:05:47,039 --> 00:05:51,360
because developer adoption leads to

00:05:49,440 --> 00:05:54,720
success of a language

00:05:51,360 --> 00:05:55,360
and surprisingly adoption of a language

00:05:54,720 --> 00:05:58,400
has not

00:05:55,360 --> 00:06:02,560
really been traced back to very

00:05:58,400 --> 00:06:04,840
cool features uh by cool features i mean

00:06:02,560 --> 00:06:06,080
very sophisticated things like

00:06:04,840 --> 00:06:09,440
reliability

00:06:06,080 --> 00:06:12,160
uh performance as simple semantics

00:06:09,440 --> 00:06:14,319
and now i'm not saying these features

00:06:12,160 --> 00:06:16,639
are really useless but surprise

00:06:14,319 --> 00:06:18,560
this is not the biggest thing that makes

00:06:16,639 --> 00:06:20,880
people come to languages

00:06:18,560 --> 00:06:22,880
you may have a different story instead a

00:06:20,880 --> 00:06:26,160
couple of research has come

00:06:22,880 --> 00:06:28,720
has has come to the conclusion that

00:06:26,160 --> 00:06:32,080
successful languages

00:06:28,720 --> 00:06:35,360
are highly a result of

00:06:32,080 --> 00:06:37,759
accessible libraries meaning

00:06:35,360 --> 00:06:38,479
at the library's open source are they

00:06:37,759 --> 00:06:40,960
easily

00:06:38,479 --> 00:06:42,080
accessible to developers and anyone that

00:06:40,960 --> 00:06:44,960
wants to

00:06:42,080 --> 00:06:45,759
uh to use them but also the proof of

00:06:44,960 --> 00:06:49,120
usage

00:06:45,759 --> 00:06:51,039
in terms of existing chord uh

00:06:49,120 --> 00:06:52,960
i think most of you know the most

00:06:51,039 --> 00:06:54,000
important skill of a programmer is to

00:06:52,960 --> 00:06:56,960
copy and paste

00:06:54,000 --> 00:06:58,000
so i mean copy and paste some code and

00:06:56,960 --> 00:07:00,880
live in peace

00:06:58,000 --> 00:07:01,520
thereafter so these factors have

00:07:00,880 --> 00:07:03,759
affected

00:07:01,520 --> 00:07:05,280
most of our adoption at least for me and

00:07:03,759 --> 00:07:08,319
many other people

00:07:05,280 --> 00:07:09,280
but also the aspect of experience so how

00:07:08,319 --> 00:07:12,560
long

00:07:09,280 --> 00:07:15,680
a language has been in existence and

00:07:12,560 --> 00:07:17,919
how many people are using it how many uh

00:07:15,680 --> 00:07:18,800
applications are using a particular

00:07:17,919 --> 00:07:21,199
language

00:07:18,800 --> 00:07:22,400
these are some of the factors that are

00:07:21,199 --> 00:07:25,280
through research

00:07:22,400 --> 00:07:26,960
that have uh affected the successfulness

00:07:25,280 --> 00:07:31,360
of different languages

00:07:26,960 --> 00:07:34,960
uh python inclusive so in summary

00:07:31,360 --> 00:07:37,440
from all these findings in academia

00:07:34,960 --> 00:07:40,400
and different people we can come to the

00:07:37,440 --> 00:07:44,400
conclusion that our language is mainly

00:07:40,400 --> 00:07:48,479
libraries its libraries and community

00:07:44,400 --> 00:07:51,120
now let me break this down more for

00:07:48,479 --> 00:07:52,240
for python so if we're talking about

00:07:51,120 --> 00:07:54,639
libraries

00:07:52,240 --> 00:07:56,800
we're talking about the standard library

00:07:54,639 --> 00:08:00,160
in python itself the language

00:07:56,800 --> 00:08:03,599
but also what we call uh pi pi

00:08:00,160 --> 00:08:04,800
which is a the pi uh the home for python

00:08:03,599 --> 00:08:07,919
packages

00:08:04,800 --> 00:08:10,639
uh what we usually call the python uh

00:08:07,919 --> 00:08:13,039
cheese shop really that's where we get

00:08:10,639 --> 00:08:15,680
all our batteries but also the language

00:08:13,039 --> 00:08:18,639
itself has some batteries included

00:08:15,680 --> 00:08:19,919
uh a whole big aspect of the community

00:08:18,639 --> 00:08:22,080
of the language

00:08:19,919 --> 00:08:24,720
is really community at the end of the

00:08:22,080 --> 00:08:27,759
day the people that use the language

00:08:24,720 --> 00:08:30,160
us like the people that come to picons

00:08:27,759 --> 00:08:32,640
that peop the python users that answer

00:08:30,160 --> 00:08:36,000
uh questions on stack overflow

00:08:32,640 --> 00:08:36,560
we uh we are a very big aspect of the

00:08:36,000 --> 00:08:39,360
language

00:08:36,560 --> 00:08:41,200
other than the technical details of the

00:08:39,360 --> 00:08:45,040
features and libraries

00:08:41,200 --> 00:08:48,320
we are a very important aspect of python

00:08:45,040 --> 00:08:51,600
now having told you how

00:08:48,320 --> 00:08:54,320
why and how popular python is

00:08:51,600 --> 00:08:55,519
in the rest of this talk i'm really

00:08:54,320 --> 00:08:58,880
going to talk about

00:08:55,519 --> 00:08:59,920
three important aspects uh of python

00:08:58,880 --> 00:09:01,920
which is

00:08:59,920 --> 00:09:03,040
some of the challenges the language is

00:09:01,920 --> 00:09:06,399
facing

00:09:03,040 --> 00:09:09,279
uh i've told you it's popular

00:09:06,399 --> 00:09:10,399
but then that doesn't mean we don't have

00:09:09,279 --> 00:09:12,880
challenges

00:09:10,399 --> 00:09:14,399
but also in the face of these challenges

00:09:12,880 --> 00:09:17,279
uh how can we

00:09:14,399 --> 00:09:19,200
all as a community uh sustain the

00:09:17,279 --> 00:09:22,959
language so that

00:09:19,200 --> 00:09:25,600
python does never dies over time

00:09:22,959 --> 00:09:27,440
but also a very important topic

00:09:25,600 --> 00:09:29,760
especially that i'm very passionate to

00:09:27,440 --> 00:09:30,720
talk about today is how to become a core

00:09:29,760 --> 00:09:33,760
developer

00:09:30,720 --> 00:09:36,000
because i think anyone can

00:09:33,760 --> 00:09:38,000
can be a core developer i just don't

00:09:36,000 --> 00:09:38,560
want to be the only african undercore

00:09:38,000 --> 00:09:40,880
team

00:09:38,560 --> 00:09:42,560
so i'm very passionate about this topic

00:09:40,880 --> 00:09:45,200
especially when i meet

00:09:42,560 --> 00:09:46,240
people from the python uh africa

00:09:45,200 --> 00:09:47,839
community

00:09:46,240 --> 00:09:49,680
so let's start with some of the

00:09:47,839 --> 00:09:53,519
challenges of

00:09:49,680 --> 00:09:56,240
of of python or c python

00:09:53,519 --> 00:09:57,360
so python is popular it's been used

00:09:56,240 --> 00:09:59,120
everywhere

00:09:57,360 --> 00:10:01,120
it's evident that's why we're here

00:09:59,120 --> 00:10:04,720
because we find the language as

00:10:01,120 --> 00:10:06,959
uh be very useful there is an ugandan or

00:10:04,720 --> 00:10:07,760
a ugandan proverb i think it's also a

00:10:06,959 --> 00:10:10,240
place

00:10:07,760 --> 00:10:11,120
to africa it could be an african proverb

00:10:10,240 --> 00:10:13,839
it says that

00:10:11,120 --> 00:10:14,959
even the most beautiful girl in the

00:10:13,839 --> 00:10:18,399
village

00:10:14,959 --> 00:10:20,880
has some sort of blemish or

00:10:18,399 --> 00:10:22,800
in some sort of way that means they are

00:10:20,880 --> 00:10:26,079
sort of challenged in some way

00:10:22,800 --> 00:10:26,959
and the same analogy can be uh drawn to

00:10:26,079 --> 00:10:30,160
python

00:10:26,959 --> 00:10:32,000
perfect as it is it solves so many

00:10:30,160 --> 00:10:34,160
things but at the same time

00:10:32,000 --> 00:10:35,839
it's still facing a couple of challenges

00:10:34,160 --> 00:10:39,680
that if not handled

00:10:35,839 --> 00:10:41,519
could either break it or it could uh

00:10:39,680 --> 00:10:43,120
stop it and this is what i'm going to

00:10:41,519 --> 00:10:45,360
talk about today

00:10:43,120 --> 00:10:46,720
uh one of the things i'm talking about

00:10:45,360 --> 00:10:50,240
so before

00:10:46,720 --> 00:10:52,320
what i'm going to uh be

00:10:50,240 --> 00:10:54,640
uh hinting on a couple of words see

00:10:52,320 --> 00:10:55,680
python python so it's important that i

00:10:54,640 --> 00:10:58,320
define

00:10:55,680 --> 00:11:00,640
what c python is so when i talk about c

00:10:58,320 --> 00:11:01,760
python i'm talking about the reference

00:11:00,640 --> 00:11:04,880
implementation

00:11:01,760 --> 00:11:05,519
that guido started that almost 30 years

00:11:04,880 --> 00:11:08,320
ago

00:11:05,519 --> 00:11:08,720
and that we are still building or it's a

00:11:08,320 --> 00:11:11,839
risk

00:11:08,720 --> 00:11:14,079
reference implementation because it

00:11:11,839 --> 00:11:15,200
basically lays out the specification

00:11:14,079 --> 00:11:17,120
that any other

00:11:15,200 --> 00:11:19,120
alternate implementation like

00:11:17,120 --> 00:11:22,399
implementations like pipeline

00:11:19,120 --> 00:11:23,040
and gython can aim to be compatible to

00:11:22,399 --> 00:11:26,560
it

00:11:23,040 --> 00:11:28,720
so a great feature of c python is that

00:11:26,560 --> 00:11:31,200
it's implemented in c

00:11:28,720 --> 00:11:33,279
uh so in summary whatever you download

00:11:31,200 --> 00:11:36,079
uh from python.org

00:11:33,279 --> 00:11:37,600
you're downloading uh the reference uh

00:11:36,079 --> 00:11:39,680
the reference python

00:11:37,600 --> 00:11:41,680
uh in short and of course there are

00:11:39,680 --> 00:11:43,680
other implementations i and python that

00:11:41,680 --> 00:11:45,519
you can always uh look up too

00:11:43,680 --> 00:11:47,040
but we call this a reference because

00:11:45,519 --> 00:11:50,320
it's a specification

00:11:47,040 --> 00:11:51,519
lays out a full specs of how a python

00:11:50,320 --> 00:11:54,720
interpreter

00:11:51,519 --> 00:11:55,120
or runtime should look like so that's

00:11:54,720 --> 00:11:57,680
what

00:11:55,120 --> 00:11:59,120
i i'll whenever i talk about c python

00:11:57,680 --> 00:11:59,600
that's what i'm going to be talking

00:11:59,120 --> 00:12:03,120
about

00:11:59,600 --> 00:12:04,800
but also let me give a bit of context in

00:12:03,120 --> 00:12:06,560
terms of the challenges i'm going to

00:12:04,800 --> 00:12:09,120
talk about so my

00:12:06,560 --> 00:12:10,399
scope is going to be see python core i'm

00:12:09,120 --> 00:12:13,600
going i may hint

00:12:10,399 --> 00:12:14,320
around i may hit around on a few

00:12:13,600 --> 00:12:16,320
challenges

00:12:14,320 --> 00:12:18,800
regarding third party libraries but i'm

00:12:16,320 --> 00:12:20,880
going to really focus on c python core

00:12:18,800 --> 00:12:22,320
i will talk about the technical

00:12:20,880 --> 00:12:25,360
challenges python

00:12:22,320 --> 00:12:28,240
as a language may have other people uh

00:12:25,360 --> 00:12:29,839
had other people languages but that's a

00:12:28,240 --> 00:12:32,240
talk for another day

00:12:29,839 --> 00:12:33,120
and i asked that you do not ask me

00:12:32,240 --> 00:12:36,320
questions about

00:12:33,120 --> 00:12:39,200
people languages especially today i

00:12:36,320 --> 00:12:40,079
uh but we can always talk about it uh

00:12:39,200 --> 00:12:43,360
alone

00:12:40,079 --> 00:12:45,279
or individually at some point now if

00:12:43,360 --> 00:12:47,200
i say that i'll talk about every

00:12:45,279 --> 00:12:50,480
challenge that python has

00:12:47,200 --> 00:12:51,360
i'll be lying uh one hour is not enough

00:12:50,480 --> 00:12:54,959
for it we

00:12:51,360 --> 00:12:57,519
literally need a a whole day to discuss

00:12:54,959 --> 00:12:58,639
every challenge nitty gritty challenge

00:12:57,519 --> 00:13:01,600
uh

00:12:58,639 --> 00:13:02,000
of python so without further ado let's

00:13:01,600 --> 00:13:05,360
talk

00:13:02,000 --> 00:13:08,720
uh someone currently uh

00:13:05,360 --> 00:13:09,839
we python is inflated with a lot of open

00:13:08,720 --> 00:13:13,519
bags

00:13:09,839 --> 00:13:16,160
and open pull requests uh so on my left

00:13:13,519 --> 00:13:19,440
we can see the number of open bags

00:13:16,160 --> 00:13:22,720
and bags closed over time

00:13:19,440 --> 00:13:25,839
in some in some months it's been fine

00:13:22,720 --> 00:13:27,760
in some other months it's not fine uh

00:13:25,839 --> 00:13:31,120
like we have more open

00:13:27,760 --> 00:13:32,480
uh more open issues and issues closed at

00:13:31,120 --> 00:13:35,760
a given time

00:13:32,480 --> 00:13:38,160
the general um the general

00:13:35,760 --> 00:13:41,120
uh the general ground shows you that

00:13:38,160 --> 00:13:43,279
well we have so many open issues or very

00:13:41,120 --> 00:13:46,399
many open issues

00:13:43,279 --> 00:13:50,560
however there's been a lot of effort in

00:13:46,399 --> 00:13:53,680
trying to make sure that uh

00:13:50,560 --> 00:13:56,079
that there's something done uh about the

00:13:53,680 --> 00:13:59,600
open box and open issues

00:13:56,079 --> 00:14:01,040
uh but i i want to say it's not enough

00:13:59,600 --> 00:14:04,240
we can do better

00:14:01,040 --> 00:14:04,880
so we have around uh it's approximated

00:14:04,240 --> 00:14:08,240
that are

00:14:04,880 --> 00:14:10,079
we have around 30 active core developers

00:14:08,240 --> 00:14:11,920
the co-developers are many but we have

00:14:10,079 --> 00:14:15,600
around 30 active ones

00:14:11,920 --> 00:14:18,639
and really disresponsibility of merging

00:14:15,600 --> 00:14:21,760
uh merging uh uh appears

00:14:18,639 --> 00:14:22,320
and reviewing them is not very realistic

00:14:21,760 --> 00:14:24,480
for them

00:14:22,320 --> 00:14:26,560
that's why we also have very inflated

00:14:24,480 --> 00:14:28,399
very open uh pull requests

00:14:26,560 --> 00:14:30,639
uh pull requests that are not reviewed

00:14:28,399 --> 00:14:31,360
some are not reviewed hence that's why

00:14:30,639 --> 00:14:34,560
they're open

00:14:31,360 --> 00:14:38,240
or others actually left abandoned

00:14:34,560 --> 00:14:39,279
or so these are all challenges uh that

00:14:38,240 --> 00:14:42,480
we're facing

00:14:39,279 --> 00:14:45,360
uh so in short open bugs and open pull

00:14:42,480 --> 00:14:48,720
requests we really have so many of them

00:14:45,360 --> 00:14:49,279
and like the people that are able to

00:14:48,720 --> 00:14:52,480
help

00:14:49,279 --> 00:14:53,839
uh in on this actually are still very

00:14:52,480 --> 00:14:57,199
few so we actually need

00:14:53,839 --> 00:15:00,480
we will need more help in this area

00:14:57,199 --> 00:15:01,600
from everyone so that's the second

00:15:00,480 --> 00:15:04,720
challenge

00:15:01,600 --> 00:15:06,800
is uh we i'll i'll just give it our

00:15:04,720 --> 00:15:08,639
performance we've all had

00:15:06,800 --> 00:15:10,160
at different conferences it could be at

00:15:08,639 --> 00:15:13,040
your workplace

00:15:10,160 --> 00:15:15,440
uh a couple of people still say python

00:15:13,040 --> 00:15:17,680
is slow for some applications

00:15:15,440 --> 00:15:19,519
uh a couple of um i'm interested that's

00:15:17,680 --> 00:15:22,639
why i cite a couple of papers

00:15:19,519 --> 00:15:24,800
i have a colleague that's working on uh

00:15:22,639 --> 00:15:26,000
solving some of the shortcomings of a

00:15:24,800 --> 00:15:29,279
python serializer

00:15:26,000 --> 00:15:31,040
for spark uh for uh for pi spark because

00:15:29,279 --> 00:15:32,560
vice pack and original spark has not

00:15:31,040 --> 00:15:35,600
been performing uh

00:15:32,560 --> 00:15:38,079
as well as as well okay as other

00:15:35,600 --> 00:15:42,160
languages now i'm saying

00:15:38,079 --> 00:15:44,320
we may not get to the uh

00:15:42,160 --> 00:15:45,360
like best performance like languages

00:15:44,320 --> 00:15:48,880
like see

00:15:45,360 --> 00:15:51,279
but i think our python as a runtime is

00:15:48,880 --> 00:15:53,680
not very different from other languages

00:15:51,279 --> 00:15:56,079
and it is possible to have a faster

00:15:53,680 --> 00:15:59,680
implementation for example

00:15:56,079 --> 00:16:03,120
uh compared to what we have uh

00:15:59,680 --> 00:16:05,519
right now so this is a challenge and uh

00:16:03,120 --> 00:16:07,759
even in research i see so many people

00:16:05,519 --> 00:16:10,959
with research problems around the

00:16:07,759 --> 00:16:13,759
area of trying to improve

00:16:10,959 --> 00:16:14,079
python python's performance for it to

00:16:13,759 --> 00:16:16,639
run

00:16:14,079 --> 00:16:18,639
faster so it's uh it's one of the

00:16:16,639 --> 00:16:21,680
challenges and something we should be

00:16:18,639 --> 00:16:24,800
uh looking at of course uh

00:16:21,680 --> 00:16:27,120
if you want to run a faster

00:16:24,800 --> 00:16:28,320
uh version of python you should probably

00:16:27,120 --> 00:16:31,839
we recommend

00:16:28,320 --> 00:16:34,079
uh looking at pi pi pi pi

00:16:31,839 --> 00:16:36,240
is up an alternate implementation

00:16:34,079 --> 00:16:38,480
implemented in python but

00:16:36,240 --> 00:16:40,240
it's faster than the reference than c

00:16:38,480 --> 00:16:43,519
python and

00:16:40,240 --> 00:16:46,399
it has uh it has very many uh there

00:16:43,519 --> 00:16:47,440
a couple of factors that uh have

00:16:46,399 --> 00:16:49,279
contributed to

00:16:47,440 --> 00:16:51,120
this high performance they have there is

00:16:49,279 --> 00:16:54,800
a jet but they also have

00:16:51,120 --> 00:16:57,440
a robust garbage collector so this is

00:16:54,800 --> 00:16:57,839
one of the projects you could also try

00:16:57,440 --> 00:17:00,639
uh

00:16:57,839 --> 00:17:01,839
if you're looking for very high

00:17:00,639 --> 00:17:05,120
performing

00:17:01,839 --> 00:17:06,079
uh python for that matter so what i'm

00:17:05,120 --> 00:17:09,600
trying to say

00:17:06,079 --> 00:17:12,640
is that we should not give up on trying

00:17:09,600 --> 00:17:15,600
to better at least uh performance

00:17:12,640 --> 00:17:16,959
uh of different aspects of python

00:17:15,600 --> 00:17:20,480
because

00:17:16,959 --> 00:17:23,280
again if we ignore this uh this

00:17:20,480 --> 00:17:25,600
uh this problem uh people will move out

00:17:23,280 --> 00:17:29,120
all will not enjoy the language so

00:17:25,600 --> 00:17:30,480
there is uh there are opportunities for

00:17:29,120 --> 00:17:33,840
optimization

00:17:30,480 --> 00:17:37,200
trivial annan trivial uh alike

00:17:33,840 --> 00:17:40,320
and i think this is an area like we all

00:17:37,200 --> 00:17:44,320
as a community should be looking at

00:17:40,320 --> 00:17:47,440
uh solving and giving our view

00:17:44,320 --> 00:17:49,039
and giving our ideas on the on the

00:17:47,440 --> 00:17:50,240
progress in terms of performance of

00:17:49,039 --> 00:17:53,039
python

00:17:50,240 --> 00:17:54,960
so you can visit speed the title.org for

00:17:53,039 --> 00:17:56,480
to see a couple of benchmarks and how

00:17:54,960 --> 00:18:00,000
we've been doing in terms

00:17:56,480 --> 00:18:02,880
of performance for python over the years

00:18:00,000 --> 00:18:03,360
yeah so that's it about uh performance

00:18:02,880 --> 00:18:05,679
uh

00:18:03,360 --> 00:18:07,039
i hope i've given you so the other

00:18:05,679 --> 00:18:09,679
challenge we have

00:18:07,039 --> 00:18:10,320
is the whole support around c extension

00:18:09,679 --> 00:18:14,160
modules

00:18:10,320 --> 00:18:17,919
so see the python c api

00:18:14,160 --> 00:18:21,280
has been held by many so

00:18:17,919 --> 00:18:23,600
we are able to extend python uh

00:18:21,280 --> 00:18:25,280
with c so see the whole idea about c

00:18:23,600 --> 00:18:26,000
extension modules is we are able to

00:18:25,280 --> 00:18:29,200
extend

00:18:26,000 --> 00:18:30,720
python if you know the c or c class

00:18:29,200 --> 00:18:33,760
programming language

00:18:30,720 --> 00:18:36,880
uh it was intended to be used

00:18:33,760 --> 00:18:39,520
internally however it had

00:18:36,880 --> 00:18:40,000
it has so many users and people have

00:18:39,520 --> 00:18:43,039
have

00:18:40,000 --> 00:18:45,760
have been able to use it over time

00:18:43,039 --> 00:18:47,919
now the thing is that initially the

00:18:45,760 --> 00:18:51,360
design of c extension modules

00:18:47,919 --> 00:18:53,520
wasn't thought uh uh they didn't think

00:18:51,360 --> 00:18:55,840
about it so much and we don't blame

00:18:53,520 --> 00:18:58,080
anyone we don't even want to then grid

00:18:55,840 --> 00:19:00,320
projects evolve and just this is just

00:18:58,080 --> 00:19:03,360
one of the complexities of

00:19:00,320 --> 00:19:06,640
an evolving project so that

00:19:03,360 --> 00:19:10,640
the design of the python crpi has

00:19:06,640 --> 00:19:14,400
posed a lot of maintenance

00:19:10,640 --> 00:19:17,919
uh overhead uh over time

00:19:14,400 --> 00:19:19,360
and there is a a lot of discussions

00:19:17,919 --> 00:19:23,200
around how to

00:19:19,360 --> 00:19:24,320
how we can best uh uh solve this problem

00:19:23,200 --> 00:19:27,200
but uh

00:19:24,320 --> 00:19:28,960
extension modules have been especially

00:19:27,200 --> 00:19:31,840
very hard to support for

00:19:28,960 --> 00:19:33,600
alternate implementations like uh jaipur

00:19:31,840 --> 00:19:35,600
and pipeline

00:19:33,600 --> 00:19:36,880
uh over time so this is one of the

00:19:35,600 --> 00:19:40,160
challenges

00:19:36,880 --> 00:19:42,960
so i would encourage you to look

00:19:40,160 --> 00:19:44,960
at this problem if you find the interest

00:19:42,960 --> 00:19:49,039
there's been a couple of ideas

00:19:44,960 --> 00:19:52,320
uh lying around others in official peps

00:19:49,039 --> 00:19:55,120
and other ideas in nine official peps

00:19:52,320 --> 00:19:58,559
probably on a discussion on the

00:19:55,120 --> 00:20:00,880
on a mailing list or elsewhere so if you

00:19:58,559 --> 00:20:01,840
if this is a topic you're probably

00:20:00,880 --> 00:20:04,960
interested in

00:20:01,840 --> 00:20:06,720
uh pursuing you could

00:20:04,960 --> 00:20:08,159
look around i'll just give you a few

00:20:06,720 --> 00:20:12,159
hints so

00:20:08,159 --> 00:20:13,520
one of the peps by uh by peter one of

00:20:12,159 --> 00:20:18,240
the core developers pep

00:20:13,520 --> 00:20:20,880
570 will try to to solve some of the

00:20:18,240 --> 00:20:22,640
challenges around this area in relation

00:20:20,880 --> 00:20:26,080
to some interpreters

00:20:22,640 --> 00:20:30,159
uh basically looking around the uh the

00:20:26,080 --> 00:20:33,200
issue of managing stat uh correctly

00:20:30,159 --> 00:20:36,559
especially in the case of us

00:20:33,200 --> 00:20:39,919
dealing with multiple uh or

00:20:36,559 --> 00:20:43,039
uh interpreters uh at a time

00:20:39,919 --> 00:20:44,880
uh another some other ideas that

00:20:43,039 --> 00:20:47,039
victor stinner again another core

00:20:44,880 --> 00:20:50,159
developer has written in a blog post

00:20:47,039 --> 00:20:52,559
somewhere he's written some ideas about

00:20:50,159 --> 00:20:53,440
what could the design of a new cfpi

00:20:52,559 --> 00:20:56,559
could look like

00:20:53,440 --> 00:20:59,520
again these are some of his ideas i just

00:20:56,559 --> 00:21:02,240
encourage you to go look there get a

00:20:59,520 --> 00:21:05,039
hint of what's being discussed so that

00:21:02,240 --> 00:21:05,919
you we can have some of your feedback

00:21:05,039 --> 00:21:08,400
from

00:21:05,919 --> 00:21:09,039
uh fro after you're reviewing some of

00:21:08,400 --> 00:21:12,400
that

00:21:09,039 --> 00:21:14,720
uh so recently uh during the language uh

00:21:12,400 --> 00:21:19,200
the python language summit this year

00:21:14,720 --> 00:21:21,760
the pie team came up with the edge pie

00:21:19,200 --> 00:21:22,559
basically a solution to go around some

00:21:21,760 --> 00:21:25,200
of these

00:21:22,559 --> 00:21:25,600
uh shortcomings of the extension modules

00:21:25,200 --> 00:21:28,880
how

00:21:25,600 --> 00:21:32,320
so they literally came up of a design of

00:21:28,880 --> 00:21:34,240
a c api that could easily uh

00:21:32,320 --> 00:21:36,880
solve the bottom net zone especially

00:21:34,240 --> 00:21:39,039
working with alternate implementation

00:21:36,880 --> 00:21:40,720
so i also encourage you to either reach

00:21:39,039 --> 00:21:42,559
out to the pipeline team or read

00:21:40,720 --> 00:21:44,240
the transcript of the python language

00:21:42,559 --> 00:21:46,240
summary to get an idea

00:21:44,240 --> 00:21:48,080
but the project is open so so you can

00:21:46,240 --> 00:21:51,520
also go uh

00:21:48,080 --> 00:21:55,039
find some ideas and give your feedback

00:21:51,520 --> 00:21:57,840
uh on the idea on the on the project

00:21:55,039 --> 00:22:00,400
uh in in regards to solving this whole

00:21:57,840 --> 00:22:01,760
problem of extension modules and how we

00:22:00,400 --> 00:22:04,720
can

00:22:01,760 --> 00:22:06,000
we can they can be able to be useful at

00:22:04,720 --> 00:22:09,120
least

00:22:06,000 --> 00:22:09,760
to different areas of python but also

00:22:09,120 --> 00:22:13,039
it's

00:22:09,760 --> 00:22:14,799
alternate implementation so that's

00:22:13,039 --> 00:22:17,679
brings me to my fourth

00:22:14,799 --> 00:22:18,720
uh uh challenge in in regards to

00:22:17,679 --> 00:22:21,360
performance

00:22:18,720 --> 00:22:22,559
a few people have talked about how about

00:22:21,360 --> 00:22:26,960
to introduce

00:22:22,559 --> 00:22:30,880
uh multiple interpreters uh for example

00:22:26,960 --> 00:22:33,360
and feb554 so that we can run processes

00:22:30,880 --> 00:22:34,960
in parallel it's that solution to a

00:22:33,360 --> 00:22:38,480
gives us a concurrent

00:22:34,960 --> 00:22:41,440
uh exception a concurrence

00:22:38,480 --> 00:22:42,400
a concurrency model a parallelism model

00:22:41,440 --> 00:22:45,200
and

00:22:42,400 --> 00:22:46,159
some of the challenges that some

00:22:45,200 --> 00:22:49,440
interpreters

00:22:46,159 --> 00:22:52,400
uh try to solve is the whole bottleneck

00:22:49,440 --> 00:22:53,200
allow around a global interpreter lock

00:22:52,400 --> 00:22:54,960
uh so

00:22:53,200 --> 00:22:56,640
a global interpreting lock if you don't

00:22:54,960 --> 00:22:59,919
know about it's just a new text

00:22:56,640 --> 00:23:03,919
uh and it's just a mutex that

00:22:59,919 --> 00:23:08,000
uh prevents you uh prevents you from

00:23:03,919 --> 00:23:10,240
running uh executing python uh

00:23:08,000 --> 00:23:11,280
bitcoins in different threads all at

00:23:10,240 --> 00:23:14,720
once

00:23:11,280 --> 00:23:17,760
now the the the

00:23:14,720 --> 00:23:20,720
main idea behind this global interpreter

00:23:17,760 --> 00:23:23,280
was because uh memory some of the memory

00:23:20,720 --> 00:23:26,720
management operations in python and with

00:23:23,280 --> 00:23:29,760
thread safe so that the jail

00:23:26,720 --> 00:23:32,880
has a very important purpose

00:23:29,760 --> 00:23:35,440
uh in python however it has brought

00:23:32,880 --> 00:23:36,080
also some bottlenecks because now it's

00:23:35,440 --> 00:23:39,360
not doing

00:23:36,080 --> 00:23:42,720
well with like multi-threaded uh uh

00:23:39,360 --> 00:23:44,480
programs uh for that matter now that the

00:23:42,720 --> 00:23:46,159
the global interpreter lock is not a

00:23:44,480 --> 00:23:48,640
button up to everything

00:23:46,159 --> 00:23:50,720
there are other operations where it's

00:23:48,640 --> 00:23:54,240
not bottleneck for example like

00:23:50,720 --> 00:23:56,320
i or i operations

00:23:54,240 --> 00:23:58,000
okay non-blocking or long-running

00:23:56,320 --> 00:24:00,640
operations and interference

00:23:58,000 --> 00:24:02,159
uh very high number crunching numpy

00:24:00,640 --> 00:24:03,600
operations for example so it's not a

00:24:02,159 --> 00:24:05,760
button like everywhere

00:24:03,600 --> 00:24:06,720
however it's about an extra threaded

00:24:05,760 --> 00:24:08,880
application

00:24:06,720 --> 00:24:10,000
now there is a lot of work required to

00:24:08,880 --> 00:24:12,880
fully achieve

00:24:10,000 --> 00:24:14,799
this whole dream of uh having uh to

00:24:12,880 --> 00:24:17,840
support some interpreters

00:24:14,799 --> 00:24:20,480
and most uh most of the discussions

00:24:17,840 --> 00:24:23,919
right now is around how can we support

00:24:20,480 --> 00:24:25,200
the jail per interpreter let's have its

00:24:23,919 --> 00:24:27,919
scope to be

00:24:25,200 --> 00:24:29,120
have to support a given interpreter so

00:24:27,919 --> 00:24:32,400
this is one area

00:24:29,120 --> 00:24:34,880
that you could also be looking at uh

00:24:32,400 --> 00:24:35,520
maybe helping out in some way i've done

00:24:34,880 --> 00:24:38,480
some work

00:24:35,520 --> 00:24:40,480
around exposing this sub interpreters is

00:24:38,480 --> 00:24:43,760
not a new thing in python

00:24:40,480 --> 00:24:45,360
it's been there but we're trying to make

00:24:43,760 --> 00:24:47,440
it more usable i think have you

00:24:45,360 --> 00:24:49,279
been using it but to be usable we need

00:24:47,440 --> 00:24:52,320
to be thinking about

00:24:49,279 --> 00:24:52,960
uh more serious problems like supporting

00:24:52,320 --> 00:24:56,400
the jail

00:24:52,960 --> 00:24:58,400
especially for the different so another

00:24:56,400 --> 00:25:00,880
thing is garbage collection

00:24:58,400 --> 00:25:02,799
uh python is based on reference counting

00:25:00,880 --> 00:25:04,880
and uh

00:25:02,799 --> 00:25:06,799
over time we've seen we've seen most

00:25:04,880 --> 00:25:09,679
runtimes have moved to using

00:25:06,799 --> 00:25:11,360
uh gc for example so garbage collection

00:25:09,679 --> 00:25:13,919
is one area of automatic memory

00:25:11,360 --> 00:25:15,440
management it frees us the developers of

00:25:13,919 --> 00:25:18,240
a lot of manual things

00:25:15,440 --> 00:25:18,799
that are error-prone in managing memory

00:25:18,240 --> 00:25:21,360
now

00:25:18,799 --> 00:25:22,960
that they've been a lot of discussions

00:25:21,360 --> 00:25:25,360
reference counting

00:25:22,960 --> 00:25:26,799
has a lot of challenges we've tried to

00:25:25,360 --> 00:25:29,840
solve some of them

00:25:26,799 --> 00:25:31,600
of course cycles we have another gc to

00:25:29,840 --> 00:25:33,919
work around cycles

00:25:31,600 --> 00:25:34,720
however uh people have started to

00:25:33,919 --> 00:25:36,640
discuss

00:25:34,720 --> 00:25:38,240
around switching from response counting

00:25:36,640 --> 00:25:39,039
because of some of the challenges we

00:25:38,240 --> 00:25:42,559
still can't

00:25:39,039 --> 00:25:44,159
uh uh so uh

00:25:42,559 --> 00:25:46,400
there are still elements in reference

00:25:44,159 --> 00:25:47,360
accounting most recently there's been a

00:25:46,400 --> 00:25:50,559
discussion about

00:25:47,360 --> 00:25:53,039
moving to egc it's not a confirmed

00:25:50,559 --> 00:25:55,039
approach and several people have had uh

00:25:53,039 --> 00:25:56,240
different suggestions of how we could

00:25:55,039 --> 00:25:58,559
improve the whole

00:25:56,240 --> 00:26:00,000
idea of garbage collection uh some

00:25:58,559 --> 00:26:02,000
people are saying and then because of

00:26:00,000 --> 00:26:03,919
the bottlenecks of the cfpi we could

00:26:02,000 --> 00:26:04,640
have a tracing garbage collector for

00:26:03,919 --> 00:26:06,559
python

00:26:04,640 --> 00:26:08,480
and still support reference counting for

00:26:06,559 --> 00:26:11,600
the cipi for example

00:26:08,480 --> 00:26:12,159
again that's an idea but what i'm trying

00:26:11,600 --> 00:26:15,279
to say

00:26:12,159 --> 00:26:17,919
is garbage collection is one of the

00:26:15,279 --> 00:26:19,200
areas that needs uh some sort of

00:26:17,919 --> 00:26:21,200
improvement

00:26:19,200 --> 00:26:22,400
and it's of course a long-running

00:26:21,200 --> 00:26:25,600
project and so

00:26:22,400 --> 00:26:27,840
any any help on solving it would be

00:26:25,600 --> 00:26:31,840
highly appreciated

00:26:27,840 --> 00:26:33,520
uh the other area obvious as it is and

00:26:31,840 --> 00:26:35,120
i look i literally look at this as the

00:26:33,520 --> 00:26:38,159
most important aspect

00:26:35,120 --> 00:26:40,559
in see python documentation

00:26:38,159 --> 00:26:41,520
because that's how we encourage

00:26:40,559 --> 00:26:43,840
developers

00:26:41,520 --> 00:26:45,440
to first of all contribute to python but

00:26:43,840 --> 00:26:48,240
also understand the project

00:26:45,440 --> 00:26:50,320
it's a very fundamental part of any

00:26:48,240 --> 00:26:53,120
project not only python

00:26:50,320 --> 00:26:54,320
so don't documentations don't receive a

00:26:53,120 --> 00:26:57,360
lot of love

00:26:54,320 --> 00:26:59,120
and i would encourage anyone to to look

00:26:57,360 --> 00:27:02,000
at the docs for python

00:26:59,120 --> 00:27:02,400
a lot of that documentation is missing

00:27:02,000 --> 00:27:05,039
uh

00:27:02,400 --> 00:27:07,039
some of it is outdated some of it is

00:27:05,039 --> 00:27:09,360
even incorrect at this point if you go

00:27:07,039 --> 00:27:11,760
to the bank tracker you will notice

00:27:09,360 --> 00:27:12,720
very a couple of issues of incorrect

00:27:11,760 --> 00:27:15,760
documentation

00:27:12,720 --> 00:27:18,640
and obvious things like typos you see uh

00:27:15,760 --> 00:27:20,000
i know that carol carroll willing is

00:27:18,640 --> 00:27:22,720
very passionate about this

00:27:20,000 --> 00:27:23,360
topic from the last time we talked and i

00:27:22,720 --> 00:27:26,399
think

00:27:23,360 --> 00:27:28,720
we'll need your help and uh

00:27:26,399 --> 00:27:30,640
and we'll need any help from anyone all

00:27:28,720 --> 00:27:33,600
over the world to spearhead this

00:27:30,640 --> 00:27:34,320
because again this is a flagship uh i

00:27:33,600 --> 00:27:36,880
feel

00:27:34,320 --> 00:27:37,520
at least in my own opinion this is a

00:27:36,880 --> 00:27:39,919
very

00:27:37,520 --> 00:27:41,919
important aspect of any project and if

00:27:39,919 --> 00:27:44,399
we don't get this right

00:27:41,919 --> 00:27:45,919
uh we will suffer in the long run in

00:27:44,399 --> 00:27:48,720
terms of acquisition of

00:27:45,919 --> 00:27:49,520
users uh by roswell developers in

00:27:48,720 --> 00:27:52,640
general

00:27:49,520 --> 00:27:53,200
so that dogs are formed that doctor

00:27:52,640 --> 00:27:56,399
python

00:27:53,200 --> 00:27:58,960
or eyes an area you could also

00:27:56,399 --> 00:28:00,840
so the other area is workflow how do we

00:27:58,960 --> 00:28:04,720
handle the whole

00:28:00,840 --> 00:28:08,720
cycle of devel of submitting a patch

00:28:04,720 --> 00:28:11,840
and solving uh and merging a whole

00:28:08,720 --> 00:28:12,720
and solving the patch but also merging a

00:28:11,840 --> 00:28:15,600
given part

00:28:12,720 --> 00:28:16,960
so python moved to github sever several

00:28:15,600 --> 00:28:19,760
years ago

00:28:16,960 --> 00:28:21,440
uh but not everything moved so the

00:28:19,760 --> 00:28:25,120
codebase moved

00:28:21,440 --> 00:28:28,480
uh basically patches as a

00:28:25,120 --> 00:28:31,200
uh submitted as pull requests on github

00:28:28,480 --> 00:28:32,399
however the bugs didn't move bugs are

00:28:31,200 --> 00:28:33,919
still on bpo

00:28:32,399 --> 00:28:37,120
something we called back to the python

00:28:33,919 --> 00:28:40,799
that all and so there's been two peps by

00:28:37,120 --> 00:28:41,440
mariaka to try to transition even our

00:28:40,799 --> 00:28:45,120
bags

00:28:41,440 --> 00:28:48,640
to uh to github so

00:28:45,120 --> 00:28:51,039
pep58 was approved however the migration

00:28:48,640 --> 00:28:54,080
plan which is pep 588

00:28:51,039 --> 00:28:56,720
is still underway now mariata and the

00:28:54,080 --> 00:28:57,360
authors of the pep and other areas about

00:28:56,720 --> 00:28:59,919
workflow

00:28:57,360 --> 00:29:01,039
which could be the projects like uh that

00:28:59,919 --> 00:29:04,399
handle our

00:29:01,039 --> 00:29:07,039
the bots uh the bots do a lot of

00:29:04,399 --> 00:29:10,240
automation and again mariata is like

00:29:07,039 --> 00:29:12,159
a great expert on the on the boards

00:29:10,240 --> 00:29:13,679
uh those are projects you could also

00:29:12,159 --> 00:29:16,480
help maintain

00:29:13,679 --> 00:29:17,440
and help uh bring about this whole

00:29:16,480 --> 00:29:20,159
automation

00:29:17,440 --> 00:29:20,960
around the workflow of python i find

00:29:20,159 --> 00:29:23,360
that

00:29:20,960 --> 00:29:24,480
a whole of what the automation really

00:29:23,360 --> 00:29:27,360
relieves

00:29:24,480 --> 00:29:28,240
us or contributors of a lot of manual

00:29:27,360 --> 00:29:31,520
processes

00:29:28,240 --> 00:29:34,640
and but also moving to github will

00:29:31,520 --> 00:29:37,279
give us uh will give the project

00:29:34,640 --> 00:29:39,279
enough visibility but also will

00:29:37,279 --> 00:29:40,720
encourage more participation because

00:29:39,279 --> 00:29:43,360
most of the developers

00:29:40,720 --> 00:29:44,799
in the world are on github so again if

00:29:43,360 --> 00:29:48,000
this is an area

00:29:44,799 --> 00:29:51,120
you you feel you you're interested in

00:29:48,000 --> 00:29:52,640
you could look at look around for the

00:29:51,120 --> 00:29:56,240
workflow projects

00:29:52,640 --> 00:29:56,799
and give your ideas because uh at this

00:29:56,240 --> 00:29:59,120
point

00:29:56,799 --> 00:30:00,000
even that the whole migration plan needs

00:29:59,120 --> 00:30:02,240
your feedback

00:30:00,000 --> 00:30:04,559
in different ways so talk to the pep

00:30:02,240 --> 00:30:07,279
authors or talk to different people

00:30:04,559 --> 00:30:09,679
if you have any ideas about that one no

00:30:07,279 --> 00:30:13,039
because it really still needs uh

00:30:09,679 --> 00:30:14,880
help from anyone uh the

00:30:13,039 --> 00:30:16,080
the other challenge i'll talk about is

00:30:14,880 --> 00:30:18,640
python everywhere

00:30:16,080 --> 00:30:20,640
we've promised people that we want

00:30:18,640 --> 00:30:23,600
everyone to be able to use python

00:30:20,640 --> 00:30:24,320
on the phone on a microcontroller

00:30:23,600 --> 00:30:27,679
literally

00:30:24,320 --> 00:30:30,240
on on every operating system as well

00:30:27,679 --> 00:30:30,799
and on this topic i encourage you to

00:30:30,240 --> 00:30:34,240
watch

00:30:30,799 --> 00:30:36,000
uh russell's talk at pycon 2019 he

00:30:34,240 --> 00:30:38,640
literally gave a keyboard

00:30:36,000 --> 00:30:39,279
uh so we have we still have so many

00:30:38,640 --> 00:30:40,880
challenges

00:30:39,279 --> 00:30:42,399
in terms of supporting different

00:30:40,880 --> 00:30:45,440
platforms like

00:30:42,399 --> 00:30:46,080
mobile and web i've also talked about

00:30:45,440 --> 00:30:48,720
the whole

00:30:46,080 --> 00:30:50,159
bottleneck over capi it's only supported

00:30:48,720 --> 00:30:53,120
by c python so

00:30:50,159 --> 00:30:54,320
alternate implementation uh do not

00:30:53,120 --> 00:30:57,039
really

00:30:54,320 --> 00:30:58,799
uh cannot really be supported at least

00:30:57,039 --> 00:31:02,240
automatically like paper

00:30:58,799 --> 00:31:05,440
so in short python cannot be

00:31:02,240 --> 00:31:07,440
uh run everywhere without problems yeah

00:31:05,440 --> 00:31:07,919
there are many areas that russo talks

00:31:07,440 --> 00:31:11,679
about

00:31:07,919 --> 00:31:14,080
cross cross compilation uh testing

00:31:11,679 --> 00:31:14,720
the support for different platforms is

00:31:14,080 --> 00:31:17,840
still

00:31:14,720 --> 00:31:20,480
an area that still needs a lot

00:31:17,840 --> 00:31:21,440
of help uh something that also russell

00:31:20,480 --> 00:31:24,399
talked about was

00:31:21,440 --> 00:31:25,039
think i or for like graphical user

00:31:24,399 --> 00:31:28,559
interface

00:31:25,039 --> 00:31:29,760
uh environments and like this is

00:31:28,559 --> 00:31:33,279
something we should be

00:31:29,760 --> 00:31:35,919
uh looking at uh solving

00:31:33,279 --> 00:31:37,039
if we want python to be relevant to

00:31:35,919 --> 00:31:39,120
everybody

00:31:37,039 --> 00:31:41,039
so in short uh if you want to think

00:31:39,120 --> 00:31:43,600
about python everywhere

00:31:41,039 --> 00:31:45,600
uh just join the discussion about how we

00:31:43,600 --> 00:31:48,159
can support it on different oss but

00:31:45,600 --> 00:31:49,120
also in different uh gadgets because if

00:31:48,159 --> 00:31:51,360
we don't

00:31:49,120 --> 00:31:52,159
the language is going to stop being

00:31:51,360 --> 00:31:55,200
relevant

00:31:52,159 --> 00:31:57,039
because if young kids can't run python

00:31:55,200 --> 00:31:59,600
on their phone or a tablet

00:31:57,039 --> 00:32:00,080
or the different oss that will keep

00:31:59,600 --> 00:32:03,360
coming

00:32:00,080 --> 00:32:05,120
but also architectures then we will stop

00:32:03,360 --> 00:32:06,960
that language is going to stop being

00:32:05,120 --> 00:32:07,200
relevant and that's why i think this is

00:32:06,960 --> 00:32:09,519
an

00:32:07,200 --> 00:32:10,720
area that that's also a challenge right

00:32:09,519 --> 00:32:13,440
now but

00:32:10,720 --> 00:32:15,679
and i need a lot of help and improvement

00:32:13,440 --> 00:32:19,120
from everyone

00:32:15,679 --> 00:32:21,279
so i have talked about uh

00:32:19,120 --> 00:32:23,039
a couple of challenges and those are

00:32:21,279 --> 00:32:25,440
just a few of them

00:32:23,039 --> 00:32:26,240
i i do we we won't have time during

00:32:25,440 --> 00:32:28,960
pycon

00:32:26,240 --> 00:32:31,120
to talk about everything it would be a

00:32:28,960 --> 00:32:31,679
lot of whining and that's not to say

00:32:31,120 --> 00:32:34,559
that

00:32:31,679 --> 00:32:36,640
uh the core team and everyone

00:32:34,559 --> 00:32:39,840
contributing to python is not doing

00:32:36,640 --> 00:32:41,840
uh work to be to be honest people are

00:32:39,840 --> 00:32:43,679
sacrificing their time away from their

00:32:41,840 --> 00:32:44,320
families to do a lot of work so we

00:32:43,679 --> 00:32:47,120
should

00:32:44,320 --> 00:32:48,080
give them a lot of appreciation for the

00:32:47,120 --> 00:32:50,720
work they do

00:32:48,080 --> 00:32:51,360
but also we should acknowledge uh the

00:32:50,720 --> 00:32:54,559
fact

00:32:51,360 --> 00:32:56,080
uh that some areas are still lacking and

00:32:54,559 --> 00:32:58,640
just talk about them

00:32:56,080 --> 00:33:00,880
so that maybe different people can step

00:32:58,640 --> 00:33:03,279
up and help in different areas so

00:33:00,880 --> 00:33:04,000
talking about challenges is not bad it's

00:33:03,279 --> 00:33:06,480
just to

00:33:04,000 --> 00:33:07,760
start a conversation now what should we

00:33:06,480 --> 00:33:11,440
do

00:33:07,760 --> 00:33:14,559
i started by saying a language python

00:33:11,440 --> 00:33:15,679
is libraries what is c python is and its

00:33:14,559 --> 00:33:18,559
challenges

00:33:15,679 --> 00:33:20,640
uh the the third party libraries are

00:33:18,559 --> 00:33:22,159
also standard but also a very important

00:33:20,640 --> 00:33:25,440
aspect is the community

00:33:22,159 --> 00:33:28,880
because it's us that bring

00:33:25,440 --> 00:33:30,720
about the change uh that we want

00:33:28,880 --> 00:33:32,480
at the end of the day we are the center

00:33:30,720 --> 00:33:34,720
and we determine what

00:33:32,480 --> 00:33:35,679
uh happens in fighting so what should we

00:33:34,720 --> 00:33:38,880
do

00:33:35,679 --> 00:33:40,000
in my when i think about how to best

00:33:38,880 --> 00:33:43,120
help python

00:33:40,000 --> 00:33:46,320
i think about two aspects really

00:33:43,120 --> 00:33:47,279
uh two people or two groups of people or

00:33:46,320 --> 00:33:49,840
two units

00:33:47,279 --> 00:33:52,240
because i failed if we generalize then

00:33:49,840 --> 00:33:54,880
we don't get to practical solutions

00:33:52,240 --> 00:33:56,000
i look at individual people like me

00:33:54,880 --> 00:33:58,960
users of python

00:33:56,000 --> 00:34:00,720
there are developers or any other kinds

00:33:58,960 --> 00:34:03,840
of people that use python

00:34:00,720 --> 00:34:04,880
but also i look at collections of people

00:34:03,840 --> 00:34:07,760
like me

00:34:04,880 --> 00:34:09,520
collections under like organizations or

00:34:07,760 --> 00:34:10,159
companies and i'm going to talk about

00:34:09,520 --> 00:34:12,960
these two

00:34:10,159 --> 00:34:13,679
today let me start with organizations

00:34:12,960 --> 00:34:17,040
sorry

00:34:13,679 --> 00:34:17,839
so for organizations that use python

00:34:17,040 --> 00:34:20,240
especially

00:34:17,839 --> 00:34:21,520
the best thing you can do is support the

00:34:20,240 --> 00:34:24,960
ecosystem

00:34:21,520 --> 00:34:26,480
i cannot emphasize this more support the

00:34:24,960 --> 00:34:30,320
ecosystem because

00:34:26,480 --> 00:34:32,720
if python crumbles you'll be building on

00:34:30,320 --> 00:34:35,200
you will also crumble because you are

00:34:32,720 --> 00:34:37,440
building on crumbling infrastructure at

00:34:35,200 --> 00:34:38,720
the end of the day if you do not support

00:34:37,440 --> 00:34:41,440
the ecosystem

00:34:38,720 --> 00:34:42,720
now this is not just a recommendation i

00:34:41,440 --> 00:34:45,280
would give to

00:34:42,720 --> 00:34:47,599
python it's general even if you stopped

00:34:45,280 --> 00:34:48,879
using python and you moved to ruby and

00:34:47,599 --> 00:34:51,200
i'm not saying python

00:34:48,879 --> 00:34:52,159
is a solution to everything you can move

00:34:51,200 --> 00:34:54,560
to ruby

00:34:52,159 --> 00:34:56,159
but still if you don't support that ruby

00:34:54,560 --> 00:34:57,119
ecosystem or any other language you'll

00:34:56,159 --> 00:34:58,880
have moved to

00:34:57,119 --> 00:35:00,320
that infrastructure will crumble and

00:34:58,880 --> 00:35:02,000
you'll still crumble if you don't

00:35:00,320 --> 00:35:04,000
support the ecosystem

00:35:02,000 --> 00:35:07,119
now i'm going to give off a few

00:35:04,000 --> 00:35:10,400
practical ways organizations can be

00:35:07,119 --> 00:35:12,800
relevant past the next to the psf

00:35:10,400 --> 00:35:13,760
the psf supports many activities around

00:35:12,800 --> 00:35:16,400
the language

00:35:13,760 --> 00:35:17,280
you simple things like donating to even

00:35:16,400 --> 00:35:19,760
other

00:35:17,280 --> 00:35:20,800
communities supporting communities

00:35:19,760 --> 00:35:24,079
around the world

00:35:20,800 --> 00:35:27,359
in organizing sprints that uh

00:35:24,079 --> 00:35:30,160
that that provide solutions or

00:35:27,359 --> 00:35:32,079
or advance the language so that's one

00:35:30,160 --> 00:35:33,599
area that's one thing you could do again

00:35:32,079 --> 00:35:36,079
you can talk to marlene

00:35:33,599 --> 00:35:36,800
if you're if if you're in africa she's a

00:35:36,079 --> 00:35:39,359
psf

00:35:36,800 --> 00:35:41,920
uh somebody big person so she probably

00:35:39,359 --> 00:35:44,640
knows more about the psf but i know

00:35:41,920 --> 00:35:45,520
that i've also been uh supported by psf

00:35:44,640 --> 00:35:48,720
at some point

00:35:45,520 --> 00:35:51,359
in my work to pay to see python so

00:35:48,720 --> 00:35:53,280
i think they've been doing a tremendous

00:35:51,359 --> 00:35:54,240
amount of activities that support the

00:35:53,280 --> 00:35:56,720
language and you know

00:35:54,240 --> 00:35:59,200
you won't go wrong donating to them but

00:35:56,720 --> 00:36:01,359
also allow your engineers to contribute

00:35:59,200 --> 00:36:03,520
to python as part of your

00:36:01,359 --> 00:36:04,720
as part of their work time so most open

00:36:03,520 --> 00:36:07,040
source contributors

00:36:04,720 --> 00:36:08,400
take time away from their families to

00:36:07,040 --> 00:36:11,440
work on open source

00:36:08,400 --> 00:36:12,560
but if you can relieve them of some time

00:36:11,440 --> 00:36:15,520
in that week

00:36:12,560 --> 00:36:16,640
like some companies for example tell

00:36:15,520 --> 00:36:19,680
their engineers that

00:36:16,640 --> 00:36:22,240
uh we can give you 20 percent

00:36:19,680 --> 00:36:23,359
time you are allowed 20 of your time to

00:36:22,240 --> 00:36:25,760
contribute to

00:36:23,359 --> 00:36:27,440
to your favorite open source language

00:36:25,760 --> 00:36:28,320
when discussing if it's python for

00:36:27,440 --> 00:36:30,640
example

00:36:28,320 --> 00:36:32,480
and that is a big relief to developers

00:36:30,640 --> 00:36:33,839
they'll really take that time seriously

00:36:32,480 --> 00:36:36,960
because

00:36:33,839 --> 00:36:39,920
uh you have relieved them of not

00:36:36,960 --> 00:36:41,680
being able to see their children at

00:36:39,920 --> 00:36:43,200
different activities because they have

00:36:41,680 --> 00:36:45,599
to solve something

00:36:43,200 --> 00:36:47,760
yeah but also the other thing you can do

00:36:45,599 --> 00:36:50,400
is fair accord developer for just

00:36:47,760 --> 00:36:51,040
maintenance work i know uh i feel quite

00:36:50,400 --> 00:36:53,760
developers

00:36:51,040 --> 00:36:54,960
actually paid to just maintain uh python

00:36:53,760 --> 00:36:57,599
we have some

00:36:54,960 --> 00:36:58,320
because some some aspects some

00:36:57,599 --> 00:37:01,440
challenges

00:36:58,320 --> 00:37:04,800
are really long-running uh projects and

00:37:01,440 --> 00:37:08,000
uh they need dedicated attention so

00:37:04,800 --> 00:37:11,440
if you can pay a developer to just

00:37:08,000 --> 00:37:14,640
focus on maintenance that is also good

00:37:11,440 --> 00:37:18,160
so that's what organizations can do now

00:37:14,640 --> 00:37:20,720
individual people like i and the rest of

00:37:18,160 --> 00:37:23,200
the developers i've just i'm saying

00:37:20,720 --> 00:37:26,800
developers but i'm really talking anyone

00:37:23,200 --> 00:37:30,880
here so you can uh

00:37:26,800 --> 00:37:33,440
you can report a bug to to the tracker

00:37:30,880 --> 00:37:34,160
don't just stop using python please

00:37:33,440 --> 00:37:38,400
report

00:37:34,160 --> 00:37:40,960
a bug it may it may appear like there is

00:37:38,400 --> 00:37:42,160
little progress but then bugs are

00:37:40,960 --> 00:37:44,000
actually

00:37:42,160 --> 00:37:45,599
solved people actually look at your

00:37:44,000 --> 00:37:48,640
reports and so

00:37:45,599 --> 00:37:49,040
uh and solve uh your challenges uh this

00:37:48,640 --> 00:37:52,960
is

00:37:49,040 --> 00:37:55,280
uh my professor my supervisor my advisor

00:37:52,960 --> 00:37:56,560
psja advisor he submitted about and he

00:37:55,280 --> 00:37:58,640
was happy that it was

00:37:56,560 --> 00:38:00,480
responded to in a very short time so

00:37:58,640 --> 00:38:03,200
people are really working to solve your

00:38:00,480 --> 00:38:06,240
problems don't give up on the language

00:38:03,200 --> 00:38:07,680
we are we're really happy to know what

00:38:06,240 --> 00:38:10,720
challenges the language is

00:38:07,680 --> 00:38:12,960
facing and we are able to but also if

00:38:10,720 --> 00:38:14,800
you can if you have the skills submit a

00:38:12,960 --> 00:38:15,599
pull request to solve some of the open

00:38:14,800 --> 00:38:18,960
banks

00:38:15,599 --> 00:38:22,000
join the backtracks team uh to

00:38:18,960 --> 00:38:24,480
to to help in

00:38:22,000 --> 00:38:26,160
in like improving the discussion around

00:38:24,480 --> 00:38:29,680
reporting of bags

00:38:26,160 --> 00:38:31,359
is their escalation uh and in some sort

00:38:29,680 --> 00:38:34,480
of way but also

00:38:31,359 --> 00:38:35,200
become a core developer to maintain the

00:38:34,480 --> 00:38:38,320
language

00:38:35,200 --> 00:38:40,079
and uh and and like help other

00:38:38,320 --> 00:38:40,800
programmers python programmers in the

00:38:40,079 --> 00:38:43,359
world

00:38:40,800 --> 00:38:43,839
uh find a language useful i think it's a

00:38:43,359 --> 00:38:46,880
great

00:38:43,839 --> 00:38:49,520
uh privilege and and who not be

00:38:46,880 --> 00:38:51,119
so now that will bring me to my last

00:38:49,520 --> 00:38:52,880
aspect which is

00:38:51,119 --> 00:38:55,040
becoming a python core developer i'm

00:38:52,880 --> 00:38:56,480
very passionate about this i received so

00:38:55,040 --> 00:39:00,240
many emails

00:38:56,480 --> 00:39:02,320
from different people on how to become

00:39:00,240 --> 00:39:03,520
python core developers and i'll talk

00:39:02,320 --> 00:39:07,200
about this uh

00:39:03,520 --> 00:39:08,240
today so first who is a python core

00:39:07,200 --> 00:39:11,359
developer

00:39:08,240 --> 00:39:14,720
a python core developer has got no more

00:39:11,359 --> 00:39:18,960
responsibilities of contributing to

00:39:14,720 --> 00:39:22,240
to python that means submitting purchase

00:39:18,960 --> 00:39:26,079
reading bug reports um ma

00:39:22,240 --> 00:39:27,839
uh okay uh reading back reports my

00:39:26,079 --> 00:39:29,839
editing that some documentation

00:39:27,839 --> 00:39:33,280
reviewing other people's work

00:39:29,839 --> 00:39:36,720
charging issues but also they have

00:39:33,280 --> 00:39:37,920
other specific core response additional

00:39:36,720 --> 00:39:40,720
responsibilities

00:39:37,920 --> 00:39:41,680
in addition to a normal contributor so

00:39:40,720 --> 00:39:43,839
first of all

00:39:41,680 --> 00:39:45,920
they're very responsible for everything

00:39:43,839 --> 00:39:48,400
they match it's very important

00:39:45,920 --> 00:39:50,320
if you match anything you have to

00:39:48,400 --> 00:39:53,680
maintain it in other words if that

00:39:50,320 --> 00:39:56,079
whatever you merged introduces problems

00:39:53,680 --> 00:39:58,000
it's your responsibility to fix those uh

00:39:56,079 --> 00:39:59,040
problems so that the cia is green at the

00:39:58,000 --> 00:40:01,200
end of the day

00:39:59,040 --> 00:40:03,680
now this additional responsibility it's

00:40:01,200 --> 00:40:06,800
a community it may look simple but

00:40:03,680 --> 00:40:07,119
it's really huge a huge responsibility

00:40:06,800 --> 00:40:08,480
and

00:40:07,119 --> 00:40:10,800
if you're considering to become a

00:40:08,480 --> 00:40:14,520
co-developer you should think about that

00:40:10,800 --> 00:40:17,680
but also you have other

00:40:14,520 --> 00:40:20,000
responsibilities of being a steward

00:40:17,680 --> 00:40:22,240
of the language making decisions about

00:40:20,000 --> 00:40:24,560
what gets into the language

00:40:22,240 --> 00:40:25,599
and what really leaves the language so

00:40:24,560 --> 00:40:28,800
you can revert

00:40:25,599 --> 00:40:29,680
much to changes and escalate uh so many

00:40:28,800 --> 00:40:32,880
if also

00:40:29,680 --> 00:40:35,119
issues about a matched change or even

00:40:32,880 --> 00:40:37,200
and much changes to the relevant mailing

00:40:35,119 --> 00:40:39,280
list for further discussion

00:40:37,200 --> 00:40:40,880
so on top of your contribution

00:40:39,280 --> 00:40:43,920
responsibilities you had

00:40:40,880 --> 00:40:46,400
you have other more decision-making

00:40:43,920 --> 00:40:49,119
responsibilities and sort of

00:40:46,400 --> 00:40:49,440
leadership responsibilities but also

00:40:49,119 --> 00:40:51,520
this

00:40:49,440 --> 00:40:53,520
also comes with the fact that you have

00:40:51,520 --> 00:40:54,800
to be an example you have to be

00:40:53,520 --> 00:40:57,359
respectable

00:40:54,800 --> 00:40:58,640
in your communication with other people

00:40:57,359 --> 00:41:02,000
in the community

00:40:58,640 --> 00:41:03,359
and both take that for granted as a

00:41:02,000 --> 00:41:05,680
leader

00:41:03,359 --> 00:41:06,400
uh as a leader especially i look at core

00:41:05,680 --> 00:41:08,960
developers

00:41:06,400 --> 00:41:10,560
as leaders yeah because they make a

00:41:08,960 --> 00:41:12,319
couple of decisions so they should be

00:41:10,560 --> 00:41:15,200
exemplary

00:41:12,319 --> 00:41:16,160
in some sort of way in their corner now

00:41:15,200 --> 00:41:18,800
why you should be

00:41:16,160 --> 00:41:20,319
acquired developer some people have so

00:41:18,800 --> 00:41:22,960
many reasons uh

00:41:20,319 --> 00:41:23,920
for being a co-developer i can talk for

00:41:22,960 --> 00:41:26,160
myself

00:41:23,920 --> 00:41:27,359
but i can also identify some reasons why

00:41:26,160 --> 00:41:29,839
you shouldn't be

00:41:27,359 --> 00:41:30,880
uh dopamine hits shouldn't be one of

00:41:29,839 --> 00:41:34,319
them at least

00:41:30,880 --> 00:41:36,560
because i mean at least uh

00:41:34,319 --> 00:41:37,440
uh you should have another good reason i

00:41:36,560 --> 00:41:39,440
mean it's a

00:41:37,440 --> 00:41:40,800
valid reason if you want to open hits

00:41:39,440 --> 00:41:43,440
but at the end of the day

00:41:40,800 --> 00:41:44,880
i think being a core developer is a

00:41:43,440 --> 00:41:48,079
privilege

00:41:44,880 --> 00:41:51,119
and a great honor to be able to give

00:41:48,079 --> 00:41:53,359
back to the community uh of

00:41:51,119 --> 00:41:55,760
something precious that you use it's a

00:41:53,359 --> 00:41:59,200
way of just giving back to the community

00:41:55,760 --> 00:42:01,119
for the work uh you're benefiting from

00:41:59,200 --> 00:42:03,200
i've been a python user

00:42:01,119 --> 00:42:05,280
literally every money i have made in

00:42:03,200 --> 00:42:05,680
industry was because i'm writing python

00:42:05,280 --> 00:42:08,319
so

00:42:05,680 --> 00:42:08,960
i feel like this is just an honor for me

00:42:08,319 --> 00:42:11,520
or

00:42:08,960 --> 00:42:12,000
to give back to the community i am part

00:42:11,520 --> 00:42:16,560
of

00:42:12,000 --> 00:42:19,040
but also i want to bring some

00:42:16,560 --> 00:42:20,000
some some specific attention to the

00:42:19,040 --> 00:42:21,520
whole subject of

00:42:20,000 --> 00:42:24,640
why you should be a core developer

00:42:21,520 --> 00:42:27,119
especially in the context of africa

00:42:24,640 --> 00:42:29,040
uh if you look at this image this was

00:42:27,119 --> 00:42:32,480
the core developer sprint

00:42:29,040 --> 00:42:33,359
last year and i am just the only african

00:42:32,480 --> 00:42:35,440
there

00:42:33,359 --> 00:42:36,400
and i wasn't even acquired developer at

00:42:35,440 --> 00:42:37,920
that time

00:42:36,400 --> 00:42:39,440
i was just invited for the core

00:42:37,920 --> 00:42:40,480
developer experience while i was in the

00:42:39,440 --> 00:42:43,680
process

00:42:40,480 --> 00:42:44,000
and uh and so i think this also just

00:42:43,680 --> 00:42:47,680
gives

00:42:44,000 --> 00:42:49,040
you an idea of why as an african you

00:42:47,680 --> 00:42:49,680
should be but let me give you some

00:42:49,040 --> 00:42:52,000
reasons

00:42:49,680 --> 00:42:53,520
if you don't have any reason why

00:42:52,000 --> 00:42:56,480
especially we

00:42:53,520 --> 00:42:57,520
uh dr bios talked about how unique our

00:42:56,480 --> 00:43:00,560
challenges are

00:42:57,520 --> 00:43:03,680
in africa and we are using python

00:43:00,560 --> 00:43:06,720
to solve these unique uh problems

00:43:03,680 --> 00:43:09,599
however we are not represented

00:43:06,720 --> 00:43:10,480
so at least that should move you to say

00:43:09,599 --> 00:43:12,640
okay

00:43:10,480 --> 00:43:14,480
let me be let me try to be a core

00:43:12,640 --> 00:43:16,480
developer because if we have a car

00:43:14,480 --> 00:43:19,200
developer from africa you we will

00:43:16,480 --> 00:43:20,560
we gain more from your representation

00:43:19,200 --> 00:43:23,119
and your perspective

00:43:20,560 --> 00:43:24,720
of some of that unique challenges that

00:43:23,119 --> 00:43:27,680
we claim we have

00:43:24,720 --> 00:43:29,040
uh from africa some people say we don't

00:43:27,680 --> 00:43:30,800
have enough libraries

00:43:29,040 --> 00:43:33,200
but in the development of some of those

00:43:30,800 --> 00:43:35,440
libraries specific to africa you may

00:43:33,200 --> 00:43:37,119
find some challenges that should be

00:43:35,440 --> 00:43:38,960
handled at the language level

00:43:37,119 --> 00:43:41,599
so we're talking about some of these

00:43:38,960 --> 00:43:45,359
that you should be represented

00:43:41,599 --> 00:43:47,680
and personally i think uh as an african

00:43:45,359 --> 00:43:50,640
becoming a python code developer gives

00:43:47,680 --> 00:43:52,640
python the african perspective whether

00:43:50,640 --> 00:43:55,040
you believe it or not

00:43:52,640 --> 00:43:55,839
whatever you will say really will

00:43:55,040 --> 00:43:58,160
represent

00:43:55,839 --> 00:43:59,200
us i am not happy that i'm the only

00:43:58,160 --> 00:44:01,839
african python

00:43:59,200 --> 00:44:03,760
developer and first of all i have been a

00:44:01,839 --> 00:44:07,520
core developer for less than a year

00:44:03,760 --> 00:44:10,400
i will be in aya in september so

00:44:07,520 --> 00:44:10,800
python has been around for 30 years and

00:44:10,400 --> 00:44:13,839
just

00:44:10,800 --> 00:44:16,960
now we have an african so i encourage uh

00:44:13,839 --> 00:44:20,160
everyone in africa to please consider

00:44:16,960 --> 00:44:21,359
uh trying to be a python core developer

00:44:20,160 --> 00:44:23,440
and let's have

00:44:21,359 --> 00:44:25,280
most importantly to have the pa the

00:44:23,440 --> 00:44:26,800
african perspective not like we just

00:44:25,280 --> 00:44:30,800
need an african but

00:44:26,800 --> 00:44:33,359
to have the african perspective and

00:44:30,800 --> 00:44:34,560
look at solving some of the unique uh

00:44:33,359 --> 00:44:37,839
challenges

00:44:34,560 --> 00:44:41,040
we we have uh in the use of python

00:44:37,839 --> 00:44:43,200
uh at least that's my uh big note now

00:44:41,040 --> 00:44:45,040
there are different parts of becoming a

00:44:43,200 --> 00:44:48,079
python core developer

00:44:45,040 --> 00:44:49,119
i took a different path that may not be

00:44:48,079 --> 00:44:52,400
your path

00:44:49,119 --> 00:44:55,040
so i started through mentorship uh

00:44:52,400 --> 00:44:56,480
by uh one of the co-developers called

00:44:55,040 --> 00:45:00,079
victastina

00:44:56,480 --> 00:45:01,280
and uh i started being frequented my

00:45:00,079 --> 00:45:04,720
contribution

00:45:01,280 --> 00:45:06,640
and then over time i was promoted so

00:45:04,720 --> 00:45:09,040
this may not be your path especially

00:45:06,640 --> 00:45:10,720
mentorship sometimes it's not realistic

00:45:09,040 --> 00:45:12,880
uh however the testing another core

00:45:10,720 --> 00:45:16,560
developers have tried to mentor it's not

00:45:12,880 --> 00:45:18,720
because of bandwidth different

00:45:16,560 --> 00:45:20,880
people don't have time so much time so

00:45:18,720 --> 00:45:24,000
we can't guarantee you have mentorship

00:45:20,880 --> 00:45:25,520
however on dev guide we have the process

00:45:24,000 --> 00:45:28,160
is very transparent

00:45:25,520 --> 00:45:30,480
you see to become a core developer so

00:45:28,160 --> 00:45:32,400
start by reading that documentation

00:45:30,480 --> 00:45:35,280
around being acquired developer

00:45:32,400 --> 00:45:35,839
so start by asking any questions there

00:45:35,280 --> 00:45:40,480
we re

00:45:35,839 --> 00:45:43,520
we have a mailing list uh that is

00:45:40,480 --> 00:45:46,960
dedicated to core mentorship so

00:45:43,520 --> 00:45:48,720
start by reaching out and become a

00:45:46,960 --> 00:45:52,400
frequent contributor

00:45:48,720 --> 00:45:55,760
the goal is to get to know the project

00:45:52,400 --> 00:45:58,319
then review sample requests by others

00:45:55,760 --> 00:45:59,520
at the end of the day somebody will

00:45:58,319 --> 00:46:01,119
notice your work

00:45:59,520 --> 00:46:03,119
accord developer will notice your work

00:46:01,119 --> 00:46:04,800
because at the end of the day it's about

00:46:03,119 --> 00:46:07,119
trust we need to know that

00:46:04,800 --> 00:46:08,720
you understand the workflow you

00:46:07,119 --> 00:46:09,520
understand different aspects of the

00:46:08,720 --> 00:46:11,200
project

00:46:09,520 --> 00:46:13,839
we don't expect you to know the whole of

00:46:11,200 --> 00:46:15,920
python nobody knows the whole of python

00:46:13,839 --> 00:46:18,079
not even widow because that

00:46:15,920 --> 00:46:19,599
language has evolved so much over the

00:46:18,079 --> 00:46:23,040
years so you are not

00:46:19,599 --> 00:46:25,599
expecting to know everything so

00:46:23,040 --> 00:46:27,119
and somebody will open a poll to promote

00:46:25,599 --> 00:46:29,920
you so this is the

00:46:27,119 --> 00:46:30,240
the very it's a very transparent process

00:46:29,920 --> 00:46:32,560
and

00:46:30,240 --> 00:46:34,240
anyone can go through it i went through

00:46:32,560 --> 00:46:34,640
it i'm not the best developer in the

00:46:34,240 --> 00:46:36,319
world

00:46:34,640 --> 00:46:38,720
some of you are better than me but you

00:46:36,319 --> 00:46:42,400
can go through the same processes that

00:46:38,720 --> 00:46:44,640
it's as transparent as this so

00:46:42,400 --> 00:46:47,119
specifically i want to talk about how to

00:46:44,640 --> 00:46:48,960
get started because this was my hardest

00:46:47,119 --> 00:46:51,760
i tried to contribute to python two

00:46:48,960 --> 00:46:54,880
years earlier before mentorship

00:46:51,760 --> 00:46:56,800
but it was very hard for me uh so

00:46:54,880 --> 00:46:58,160
i've come up with a few steps and i'm

00:46:56,800 --> 00:47:01,200
not sure they will

00:46:58,160 --> 00:47:04,319
really be the end

00:47:01,200 --> 00:47:05,680
of it all but i encourage you to clone

00:47:04,319 --> 00:47:08,640
the source code

00:47:05,680 --> 00:47:10,960
try to visit the backtracker search the

00:47:08,640 --> 00:47:13,200
easy issues and i know from experience

00:47:10,960 --> 00:47:16,880
that some of these easy issues are not

00:47:13,200 --> 00:47:19,520
actually easy so if you're stuck uh

00:47:16,880 --> 00:47:22,400
if you don't still get a very easy issue

00:47:19,520 --> 00:47:25,520
on the back tracker what i usually do is

00:47:22,400 --> 00:47:26,720
think around my best module entitled if

00:47:25,520 --> 00:47:29,599
if it's unit test

00:47:26,720 --> 00:47:31,920
i open the code study it find something

00:47:29,599 --> 00:47:33,599
that's missing i guarantee you there's

00:47:31,920 --> 00:47:35,920
always something missing

00:47:33,599 --> 00:47:37,680
uh find a typo i'm missing test

00:47:35,920 --> 00:47:39,440
something is always missing

00:47:37,680 --> 00:47:41,839
alternatively if you're really stuck you

00:47:39,440 --> 00:47:44,160
can write an email to a pep author

00:47:41,839 --> 00:47:45,040
and say where can i help do you have a

00:47:44,160 --> 00:47:48,800
few

00:47:45,040 --> 00:47:52,079
things that i can that i can

00:47:48,800 --> 00:47:53,119
help on that's how i have done it before

00:47:52,079 --> 00:47:55,839
there is no one

00:47:53,119 --> 00:47:57,680
uh i don't want to promise it's easy and

00:47:55,839 --> 00:48:00,319
that if you tried

00:47:57,680 --> 00:48:01,359
you are not good i also struggled to

00:48:00,319 --> 00:48:03,760
ever be useful

00:48:01,359 --> 00:48:04,400
and say python i've written a blog on

00:48:03,760 --> 00:48:06,160
the same

00:48:04,400 --> 00:48:07,760
and other core developers have also

00:48:06,160 --> 00:48:10,880
written blogs

00:48:07,760 --> 00:48:14,319
on the same so you can read around

00:48:10,880 --> 00:48:18,000
and see how you can get started

00:48:14,319 --> 00:48:21,359
to contributing to see python

00:48:18,000 --> 00:48:23,440
so as i close python the language is a

00:48:21,359 --> 00:48:26,880
community and its libraries

00:48:23,440 --> 00:48:29,440
if we do not support it uh uh

00:48:26,880 --> 00:48:30,319
the developers and organizations alike

00:48:29,440 --> 00:48:33,040
we are going to

00:48:30,319 --> 00:48:34,000
be building on crumbling infrastructure

00:48:33,040 --> 00:48:36,880
evidently

00:48:34,000 --> 00:48:38,079
over time the language is popular very

00:48:36,880 --> 00:48:41,119
useful

00:48:38,079 --> 00:48:42,000
and it very useful and continue being

00:48:41,119 --> 00:48:44,400
useful

00:48:42,000 --> 00:48:45,040
but it still has challenges that we need

00:48:44,400 --> 00:48:49,440
to be

00:48:45,040 --> 00:48:53,200
thinking uh about as collectively

00:48:49,440 --> 00:48:56,400
so i love to end with a few a few points

00:48:53,200 --> 00:48:59,680
the remember project stop being relevant

00:48:56,400 --> 00:49:02,079
when problems are ignored so if we

00:48:59,680 --> 00:49:02,800
uh python is no exception is that it's

00:49:02,079 --> 00:49:05,680
any

00:49:02,800 --> 00:49:09,280
it's like any other project so if we

00:49:05,680 --> 00:49:12,400
ignore the challenges it's facing

00:49:09,280 --> 00:49:14,240
uh over time uh

00:49:12,400 --> 00:49:16,880
people it's not going to be relevant and

00:49:14,240 --> 00:49:20,000
people will stop using it so

00:49:16,880 --> 00:49:21,040
let's try to think around uh these

00:49:20,000 --> 00:49:24,480
challenges

00:49:21,040 --> 00:49:25,680
uh borrowing also from abraham lincoln i

00:49:24,480 --> 00:49:29,280
would love to say

00:49:25,680 --> 00:49:32,319
i just literally paraphrased or met

00:49:29,280 --> 00:49:34,720
code relevant to us ask not what a

00:49:32,319 --> 00:49:37,119
programming language should do for you

00:49:34,720 --> 00:49:38,880
instead ask what you can do to bring

00:49:37,119 --> 00:49:42,240
about what you want

00:49:38,880 --> 00:49:42,880
so the good thing is python is open

00:49:42,240 --> 00:49:46,240
source

00:49:42,880 --> 00:49:47,760
so you are very free to suggest any new

00:49:46,240 --> 00:49:51,440
ideas you have

00:49:47,760 --> 00:49:53,520
and uh suggest anything we should

00:49:51,440 --> 00:49:54,800
fix to make sure you're running

00:49:53,520 --> 00:49:58,079
seamlessly

00:49:54,800 --> 00:50:01,280
so instead of if uh

00:49:58,079 --> 00:50:03,920
learning or saying oh python is so bad

00:50:01,280 --> 00:50:06,240
try to think around what you can do to

00:50:03,920 --> 00:50:09,440
bring about the change you want

00:50:06,240 --> 00:50:12,960
so with the open source python for this

00:50:09,440 --> 00:50:13,680
uh idea for the fact that let's all come

00:50:12,960 --> 00:50:16,079
together

00:50:13,680 --> 00:50:18,000
and reason together about python and

00:50:16,079 --> 00:50:21,920
that's how we are going to

00:50:18,000 --> 00:50:25,520
uh advance uh uh the language

00:50:21,920 --> 00:50:26,240
so that's those that's it about my talk

00:50:25,520 --> 00:50:30,319
today

00:50:26,240 --> 00:50:33,280
and uh that usually i ask everyone

00:50:30,319 --> 00:50:35,119
at the very end uh who will bring

00:50:33,280 --> 00:50:38,400
balance to the source

00:50:35,119 --> 00:50:39,680
the source is python uh and i always ask

00:50:38,400 --> 00:50:43,040
for the force to be with

00:50:39,680 --> 00:50:43,839
everyone and well see you in the source

00:50:43,040 --> 00:50:46,079
court

00:50:43,839 --> 00:50:48,559
uh as we battle some of the challenges

00:50:46,079 --> 00:50:52,160
right now so i will invite any questions

00:50:48,559 --> 00:50:54,640
thank you hi everyone uh so i'm

00:50:52,160 --> 00:50:56,400
gonna be helping joe out for a group

00:50:54,640 --> 00:50:58,720
with christian and

00:50:56,400 --> 00:50:59,520
with answering um some questions if you

00:50:58,720 --> 00:51:01,599
have questions

00:50:59,520 --> 00:51:03,680
please post them in the comments we're

00:51:01,599 --> 00:51:05,200
just going to take a few minutes

00:51:03,680 --> 00:51:06,800
because we are running a little bit

00:51:05,200 --> 00:51:09,440
behind

00:51:06,800 --> 00:51:10,800
but i know that a couple of people are

00:51:09,440 --> 00:51:14,000
perfect

00:51:10,800 --> 00:51:17,040
mama do we say uh

00:51:14,000 --> 00:51:18,319
how about type for performance and big

00:51:17,040 --> 00:51:22,240
development

00:51:18,319 --> 00:51:25,520
sorry i do have sorry yeah

00:51:22,240 --> 00:51:28,000
you said how about types or performance

00:51:25,520 --> 00:51:30,319
and big development i'm not sure exactly

00:51:28,000 --> 00:51:34,000
what you will

00:51:30,319 --> 00:51:37,200
uh i mean types as in static typing

00:51:34,000 --> 00:51:40,079
i mean in that regard maybe

00:51:37,200 --> 00:51:40,800
well if it's in the in the regard of

00:51:40,079 --> 00:51:43,839
types

00:51:40,800 --> 00:51:43,839
i've seen uh

00:51:44,559 --> 00:51:48,400
by types i think you mean static typing

00:51:46,960 --> 00:51:51,520
there is a lot of research

00:51:48,400 --> 00:51:54,960
around types and their support

00:51:51,520 --> 00:51:59,520
for dynamic languages and how they

00:51:54,960 --> 00:51:59,520
could improve uh performance uh

00:51:59,599 --> 00:52:02,800
i know that guido and other people are

00:52:02,160 --> 00:52:05,440
working

00:52:02,800 --> 00:52:06,800
uh on my pie which is something yeah

00:52:05,440 --> 00:52:09,760
yeah started checking

00:52:06,800 --> 00:52:11,119
uh for python you can follow up on that

00:52:09,760 --> 00:52:12,960
project as well

00:52:11,119 --> 00:52:14,880
and other research is coming up around

00:52:12,960 --> 00:52:16,160
using types in dynamic languages that

00:52:14,880 --> 00:52:18,240
you can look up so i

00:52:16,160 --> 00:52:19,440
greatly think that's an area we could

00:52:18,240 --> 00:52:23,280
pursue and

00:52:19,440 --> 00:52:25,599
improve the language in that's so great

00:52:23,280 --> 00:52:28,000
yeah and uh he confirmed that that was

00:52:25,599 --> 00:52:31,599
what he was asking about so great

00:52:28,000 --> 00:52:33,280
um and then jeff was saying does the sub

00:52:31,599 --> 00:52:35,520
interpreters

00:52:33,280 --> 00:52:36,319
will they be faster as ace think i'm not

00:52:35,520 --> 00:52:39,040
sure if he's

00:52:36,319 --> 00:52:41,839
mean that will it make it faster than

00:52:39,040 --> 00:52:44,880
async or and i'll reveal what

00:52:41,839 --> 00:52:46,400
he means by that christian yeah so i

00:52:44,880 --> 00:52:48,960
think okay

00:52:46,400 --> 00:52:51,359
what i can say about sub interpreters is

00:52:48,960 --> 00:52:53,760
definitely if we are running a couple of

00:52:51,359 --> 00:52:56,400
different processes in parallel

00:52:53,760 --> 00:52:57,040
in different uh interpreters we will

00:52:56,400 --> 00:52:59,440
come to

00:52:57,040 --> 00:53:00,720
better performance now if you you can

00:52:59,440 --> 00:53:03,680
read about

00:53:00,720 --> 00:53:05,760
uh you can read pep 554 on its

00:53:03,680 --> 00:53:08,960
relationship to async i

00:53:05,760 --> 00:53:11,680
uh i think i o and how it complements

00:53:08,960 --> 00:53:13,280
the cincinnati in that regard however we

00:53:11,680 --> 00:53:15,040
expect better performance because if

00:53:13,280 --> 00:53:16,880
we're running different things

00:53:15,040 --> 00:53:18,160
parallel in different interpreters we

00:53:16,880 --> 00:53:21,680
expect a big

00:53:18,160 --> 00:53:21,680
a better boost in performance

00:53:22,000 --> 00:53:27,359
right definitely a good thing um

00:53:25,599 --> 00:53:30,559
does anyone else have any other

00:53:27,359 --> 00:53:30,559
questions about that

00:53:32,640 --> 00:53:36,400
yeah i think the sub-interpreters is

00:53:34,480 --> 00:53:40,839
super interesting

00:53:36,400 --> 00:53:43,839
um i know i've read a lot about

00:53:40,839 --> 00:53:43,839
watched

00:53:44,240 --> 00:53:48,160
we can talk about this after the talk uh

00:53:47,200 --> 00:53:50,400
i was i was

00:53:48,160 --> 00:53:52,160
very interested in the prep i've

00:53:50,400 --> 00:53:53,920
implemented part of it

00:53:52,160 --> 00:53:56,160
at least which lives in the testing so

00:53:53,920 --> 00:54:00,400
we can talk more about it verus will

00:53:56,160 --> 00:54:03,359
read pip 554 uh yeah for more detail

00:54:00,400 --> 00:54:05,280
awesome then daniela has a question as

00:54:03,359 --> 00:54:08,640
well he says thanks so much

00:54:05,280 --> 00:54:10,800
it would be wonderful to sorry i'm

00:54:08,640 --> 00:54:12,480
echoing a bit thanks so much it would be

00:54:10,800 --> 00:54:13,599
wonderful to hear your perspective

00:54:12,480 --> 00:54:15,599
joanna

00:54:13,599 --> 00:54:17,520
it it's been wonderful to have to hear

00:54:15,599 --> 00:54:18,720
your perspective joanna it seems that so

00:54:17,520 --> 00:54:20,559
many people

00:54:18,720 --> 00:54:22,839
who get into a position like yours have

00:54:20,559 --> 00:54:26,079
learned how to do it all over again

00:54:22,839 --> 00:54:28,480
uh each time as if they

00:54:26,079 --> 00:54:30,720
were they were the very first if i have

00:54:28,480 --> 00:54:32,960
a chance to ask a christian it would be

00:54:30,720 --> 00:54:35,440
do you think it would be possible to

00:54:32,960 --> 00:54:36,960
create a guidebook or a pathway or

00:54:35,440 --> 00:54:39,520
something like that

00:54:36,960 --> 00:54:40,720
that african pythonistas would be able

00:54:39,520 --> 00:54:43,599
to follow

00:54:40,720 --> 00:54:44,240
so that um yeah i think that's a great

00:54:43,599 --> 00:54:46,720
question

00:54:44,240 --> 00:54:48,160
do you think they would yeah that's an

00:54:46,720 --> 00:54:49,680
interesting question i'm just an

00:54:48,160 --> 00:54:51,200
understanding that context to follow to

00:54:49,680 --> 00:54:53,599
become a core developer

00:54:51,200 --> 00:54:56,640
if it's in that trigger it would be an

00:54:53,599 --> 00:54:59,359
idea i would be happy to collaborate on

00:54:56,640 --> 00:54:59,680
um it could be it could be as simple as

00:54:59,359 --> 00:55:02,720
a

00:54:59,680 --> 00:55:05,359
github wiki page it could evolve

00:55:02,720 --> 00:55:07,280
into something else if you find it

00:55:05,359 --> 00:55:10,799
useful a book or something

00:55:07,280 --> 00:55:12,960
but i would be highly interested in uh

00:55:10,799 --> 00:55:14,960
in collaborating on something like that

00:55:12,960 --> 00:55:16,640
because

00:55:14,960 --> 00:55:18,559
it the whole aspect of being a

00:55:16,640 --> 00:55:19,599
co-developer thinks like it's for some

00:55:18,559 --> 00:55:21,520
different people

00:55:19,599 --> 00:55:22,640
and i didn't know i would never become

00:55:21,520 --> 00:55:24,720
one so

00:55:22,640 --> 00:55:26,799
yeah we can talk about it there are

00:55:24,720 --> 00:55:29,280
different ways i can only give

00:55:26,799 --> 00:55:31,040
some of my opinion but also other people

00:55:29,280 --> 00:55:33,359
would be happy to collaborate on

00:55:31,040 --> 00:55:34,880
including the core team i'm sure they'll

00:55:33,359 --> 00:55:37,680
probably would love to

00:55:34,880 --> 00:55:39,319
put in their efforts uh but also i can

00:55:37,680 --> 00:55:41,680
give my perspective on some

00:55:39,319 --> 00:55:44,880
contextualized african way

00:55:41,680 --> 00:55:47,839
per se yeah oh that would be great

00:55:44,880 --> 00:55:49,359
um i mean i i think that's a great idea

00:55:47,839 --> 00:55:51,119
and i think we should

00:55:49,359 --> 00:55:52,880
yeah we should take that up as a

00:55:51,119 --> 00:55:53,920
community i would love to see that

00:55:52,880 --> 00:55:55,920
happening

00:55:53,920 --> 00:55:57,200
um and like you put in your talk i would

00:55:55,920 --> 00:55:59,599
love to see

00:55:57,200 --> 00:56:03,280
more african python coordinates i mean

00:55:59,599 --> 00:56:04,480
like this it would be so great um so yes

00:56:03,280 --> 00:56:06,400
i think that's something we should talk

00:56:04,480 --> 00:56:09,680
about and try and

00:56:06,400 --> 00:56:12,160
make happen um so

00:56:09,680 --> 00:56:14,480
i think i'm not sure i think those are

00:56:12,160 --> 00:56:17,440
all the questions that we have

00:56:14,480 --> 00:56:17,760
um we are running a bit behind schedule

00:56:17,440 --> 00:56:19,680
but

00:56:17,760 --> 00:56:21,440
i don't know if anyone has a lot of

00:56:19,680 --> 00:56:24,799
questions before

00:56:21,440 --> 00:56:24,799
while we close the talk

00:56:26,000 --> 00:56:29,200
someone is saying so muhammad is saying

00:56:28,640 --> 00:56:32,319
uh

00:56:29,200 --> 00:56:33,200
is it a must to be a c expert to be a

00:56:32,319 --> 00:56:36,799
core div

00:56:33,200 --> 00:56:39,680
given the c api uh so

00:56:36,799 --> 00:56:41,280
a lot of python is written in c but a

00:56:39,680 --> 00:56:44,480
lot of it is written in pi

00:56:41,280 --> 00:56:47,599
in python itself so you don't have to be

00:56:44,480 --> 00:56:51,119
as a developer to contribute to python

00:56:47,599 --> 00:56:53,359
a lot of code is in python so

00:56:51,119 --> 00:56:55,359
everyone is welcome if you know

00:56:53,359 --> 00:56:56,240
python.com there is something for you to

00:56:55,359 --> 00:56:58,720
work on

00:56:56,240 --> 00:56:59,680
there is also that see pads to work on

00:56:58,720 --> 00:57:03,119
as well

00:56:59,680 --> 00:57:05,680
yeah yeah that's good to hear

00:57:03,119 --> 00:57:06,559
i think it can be intimidating the scene

00:57:05,680 --> 00:57:09,200
part of it

00:57:06,559 --> 00:57:11,119
yeah you know can be very intimidating

00:57:09,200 --> 00:57:12,480
but i think that's all the questions we

00:57:11,119 --> 00:57:14,720
have time for

00:57:12,480 --> 00:57:17,359
thank you so much joanna we really

00:57:14,720 --> 00:57:19,680
appreciate you we celebrate you as

00:57:17,359 --> 00:57:20,799
a part of our community and being a core

00:57:19,680 --> 00:57:24,880
developer

00:57:20,799 --> 00:57:39,200
um so yeah thanks everyone thanks joe

00:57:24,880 --> 00:57:39,200

YouTube URL: https://www.youtube.com/watch?v=GAfx0I9xxD8


