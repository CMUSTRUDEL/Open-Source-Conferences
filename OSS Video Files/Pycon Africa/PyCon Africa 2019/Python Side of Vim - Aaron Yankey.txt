Title: Python Side of Vim - Aaron Yankey
Publication date: 2019-11-23
Playlist: PyCon Africa 2019
Description: 
	Just as Vim can be used to write Python scripts, Python can also be used to write Vim scripts. The synergy of these two, does not only make them better, but they also make the developer even more efficient and productive during development.
In this talk, we would be taking a look at how Python can be used to enhance the functionality of Vim, and also how ""descriptive coding"" can make you a better developer.
Captions: 
	00:00:04,790 --> 00:00:13,440
yes thank you so much Daniel for such a

00:00:10,099 --> 00:00:15,980
wonderful introduction but I mean many

00:00:13,440 --> 00:00:18,109
more could be said about Daniel himself

00:00:15,980 --> 00:00:20,880
he has really helped make this happen

00:00:18,109 --> 00:00:24,539
but our notes are going to die because

00:00:20,880 --> 00:00:26,910
of its my talk yes but I just a lot to

00:00:24,539 --> 00:00:28,740
say about him so today I'm going to talk

00:00:26,910 --> 00:00:34,380
about the Python side of him how many

00:00:28,740 --> 00:00:37,079
people use vim in here then okay Wow so

00:00:34,380 --> 00:00:39,059
we have some fellows how many people are

00:00:37,079 --> 00:00:44,489
on the Emacs side of things

00:00:39,059 --> 00:00:46,980
oh that's okay so yeah odd numbered so

00:00:44,489 --> 00:00:48,480
today we are going to look at him from a

00:00:46,980 --> 00:00:51,570
different angle from a different

00:00:48,480 --> 00:00:56,879
perspective and before I go into that I

00:00:51,570 --> 00:01:00,469
want to talk about Who am I I happened

00:00:56,879 --> 00:01:06,689
to lead a very wonderful team of people

00:01:00,469 --> 00:01:09,540
very dynamic and friendly community of

00:01:06,689 --> 00:01:14,700
people in Ghana here who are helping out

00:01:09,540 --> 00:01:19,229
with the Python community and honestly

00:01:14,700 --> 00:01:22,920
it's much about the team that makes

00:01:19,229 --> 00:01:27,780
these things happen I'm also I'm on the

00:01:22,920 --> 00:01:34,979
grants committee for the Python for the

00:01:27,780 --> 00:01:38,850
PSF yes and my boss here is yes miss Eva

00:01:34,979 --> 00:01:43,770
Eva yes so we have some good time and

00:01:38,850 --> 00:01:48,119
lorina yes so she we really have a good

00:01:43,770 --> 00:01:49,950
time I'm also the founder and CTO of 2

00:01:48,119 --> 00:01:53,220
pi real intelligence

00:01:49,950 --> 00:01:55,200
it's my startup where we build a

00:01:53,220 --> 00:01:58,439
framework and we're trying to see how we

00:01:55,200 --> 00:02:02,159
could change things with the way we do

00:01:58,439 --> 00:02:04,380
work I also like Daniel said I am a

00:02:02,159 --> 00:02:08,940
pioneer of space and satellite

00:02:04,380 --> 00:02:13,620
technology in in in Ghana so I helped my

00:02:08,940 --> 00:02:19,500
team with ganas at one satellite in in

00:02:13,620 --> 00:02:21,540
no--but thank you so yeah that's my

00:02:19,500 --> 00:02:25,110
Twitter I I don't really have a social

00:02:21,540 --> 00:02:28,080
life my life is very boring you

00:02:25,110 --> 00:02:30,360
understand why very soon so but yeah I

00:02:28,080 --> 00:02:33,840
mean if it ask me anything on Twitter I

00:02:30,360 --> 00:02:36,180
would I would I would really respond so

00:02:33,840 --> 00:02:39,930
my talk here we are going to look at on

00:02:36,180 --> 00:02:41,310
what typing is versus playing you

00:02:39,930 --> 00:02:43,890
understand what I mean by playing very

00:02:41,310 --> 00:02:44,519
soon then we look at the four sides of

00:02:43,890 --> 00:02:47,790
them

00:02:44,519 --> 00:02:51,750
that's the editing navigation formatting

00:02:47,790 --> 00:02:54,629
automation also look at Python of him

00:02:51,750 --> 00:02:59,599
you look at just a small case study now

00:02:54,629 --> 00:03:03,409
look at a tool called ulti snips yeah so

00:02:59,599 --> 00:03:08,370
triplane versus playing how many people

00:03:03,409 --> 00:03:12,239
play the keyboard okay how many people

00:03:08,370 --> 00:03:14,579
type okay when I asked the first

00:03:12,239 --> 00:03:16,769
question I was expecting everybody to

00:03:14,579 --> 00:03:18,840
raise your hands because once you have a

00:03:16,769 --> 00:03:21,389
keyboard in front of you on the computer

00:03:18,840 --> 00:03:22,799
you are playing the keyboard by just

00:03:21,389 --> 00:03:25,560
that you are doing a different kind of

00:03:22,799 --> 00:03:28,859
art is not music it's this time coding

00:03:25,560 --> 00:03:30,180
so this is the first keyboard we're

00:03:28,859 --> 00:03:31,680
going to look at and I want you to

00:03:30,180 --> 00:03:33,900
really take a very good look at this

00:03:31,680 --> 00:03:36,629
picture because I may ask some questions

00:03:33,900 --> 00:03:39,030
about this actually my keyboard my

00:03:36,629 --> 00:03:41,400
development keyboard then this is the

00:03:39,030 --> 00:03:43,949
second type of keyboard but there are

00:03:41,400 --> 00:03:47,459
very very similar things between these

00:03:43,949 --> 00:03:50,340
two keyboards okay so let's do some

00:03:47,459 --> 00:03:53,370
factorization of the similarities

00:03:50,340 --> 00:03:56,250
between the musical keyboard and your

00:03:53,370 --> 00:04:00,470
computer keyboard the first is the

00:03:56,250 --> 00:04:04,440
device how many people know what this is

00:04:00,470 --> 00:04:06,870
okay if you were a millennial you may

00:04:04,440 --> 00:04:10,230
not really know what this is it's what

00:04:06,870 --> 00:04:13,470
we used in those days it's called a

00:04:10,230 --> 00:04:14,730
typewriter yes it's a very powerful -

00:04:13,470 --> 00:04:18,180
yes

00:04:14,730 --> 00:04:20,940
then the actual device we use to

00:04:18,180 --> 00:04:24,840
actually type our our code or whatever

00:04:20,940 --> 00:04:27,330
is actually a typewriter so our keyboard

00:04:24,840 --> 00:04:32,759
on a computer is more of as much dye

00:04:27,330 --> 00:04:35,099
writer so the similarity between your

00:04:32,759 --> 00:04:39,030
computer and the musical instrument

00:04:35,099 --> 00:04:42,469
first is art so coding or typing is it's

00:04:39,030 --> 00:04:45,240
is more like an art than just a chore

00:04:42,469 --> 00:04:47,310
right so you have to be creative you

00:04:45,240 --> 00:04:48,659
have to be innovative with a way you

00:04:47,310 --> 00:04:50,669
play your keyboard like if it's a

00:04:48,659 --> 00:04:53,370
musical instrument it's not how much you

00:04:50,669 --> 00:04:56,189
pound on the keys that really makes a

00:04:53,370 --> 00:05:00,539
good music but it's the way you pound on

00:04:56,189 --> 00:05:04,050
the keys so when we look at this part of

00:05:00,539 --> 00:05:06,000
art we're looking at creativity and when

00:05:04,050 --> 00:05:09,120
you look at creativity you need some

00:05:06,000 --> 00:05:11,879
level of skill to be to be a bit

00:05:09,120 --> 00:05:15,150
creative creativity in itself it's like

00:05:11,879 --> 00:05:17,669
a skill then the second thing between a

00:05:15,150 --> 00:05:20,099
keyboard on on the musical instrument

00:05:17,669 --> 00:05:22,560
and the keyboarding machine is you need

00:05:20,099 --> 00:05:25,080
to do a lot of practice so you need to

00:05:22,560 --> 00:05:27,330
practice typing and I've really seen

00:05:25,080 --> 00:05:30,300
people using almost literally one finger

00:05:27,330 --> 00:05:34,349
to type where they has they have ten

00:05:30,300 --> 00:05:36,419
right so it's about practice and like I

00:05:34,349 --> 00:05:39,060
said practice makes perfect so the way

00:05:36,419 --> 00:05:43,080
you practice also influences your

00:05:39,060 --> 00:05:46,520
productivity then when you finish let's

00:05:43,080 --> 00:05:50,009
say you are playing a musical keyboard

00:05:46,520 --> 00:05:53,430
you are playing with the intention of

00:05:50,009 --> 00:05:56,969
creating a piece now we can have two

00:05:53,430 --> 00:06:00,210
pieces it could be a masterpiece or it

00:05:56,969 --> 00:06:02,879
could just be another piece so you may

00:06:00,210 --> 00:06:04,770
how you how you you want to really

00:06:02,879 --> 00:06:07,229
create a masterpiece and to get a

00:06:04,770 --> 00:06:09,750
masterpiece you really need to to know

00:06:07,229 --> 00:06:13,860
your your craft and your instruments or

00:06:09,750 --> 00:06:17,639
your devices so let's look at the the

00:06:13,860 --> 00:06:21,180
four sides of editing with them now how

00:06:17,639 --> 00:06:22,770
many people have laptops laptops okay

00:06:21,180 --> 00:06:24,509
remember to do a little bit of a

00:06:22,770 --> 00:06:26,699
challenge I love doing this part when I

00:06:24,509 --> 00:06:30,000
was lecturing I will ask my students

00:06:26,699 --> 00:06:33,750
okay bring out on your PC and then we do

00:06:30,000 --> 00:06:39,780
a little bit of a challenge so let's see

00:06:33,750 --> 00:06:47,690
I am going to have my terminal

00:06:39,780 --> 00:06:54,660
up okay okay so let's see all right so

00:06:47,690 --> 00:06:59,660
this is a copy and paste challenge sorry

00:06:54,660 --> 00:07:03,300
I've forgotten how to spell them yeah so

00:06:59,660 --> 00:07:07,080
let's do this we're about to type in a

00:07:03,300 --> 00:07:18,450
word let's type the word um Python right

00:07:07,080 --> 00:07:21,870
so Pike okay all right so - right so how

00:07:18,450 --> 00:07:23,550
many I've typed in that word Python okay

00:07:21,870 --> 00:07:26,430
so you are really faster than me right

00:07:23,550 --> 00:07:28,620
because I had to do a lot of things so

00:07:26,430 --> 00:07:33,650
let's copy and paste at one time right

00:07:28,620 --> 00:07:37,410
so ready go

00:07:33,650 --> 00:07:39,840
okay how many do that before me be

00:07:37,410 --> 00:07:42,780
honest I'm going to beat you at some

00:07:39,840 --> 00:07:49,200
point anyway so how many how many did

00:07:42,780 --> 00:07:53,250
that before me okay so let's do that 10

00:07:49,200 --> 00:07:57,600
times placed it 10 times so how many

00:07:53,250 --> 00:07:59,990
done before me okay let's do that a

00:07:57,600 --> 00:07:59,990
million times

00:08:00,320 --> 00:08:08,220
yeah so that's this how many double for

00:08:04,140 --> 00:08:11,910
me aha nobody I told you so

00:08:08,220 --> 00:08:14,130
now this this the power of aim when

00:08:11,910 --> 00:08:17,640
you're doing something that is just once

00:08:14,130 --> 00:08:20,280
or just doing it you may not have the

00:08:17,640 --> 00:08:22,430
the performance you need but one is

00:08:20,280 --> 00:08:25,200
something that needs to do its speed or

00:08:22,430 --> 00:08:27,410
repetition then you begin to see the

00:08:25,200 --> 00:08:32,550
advantage of them

00:08:27,410 --> 00:08:34,200
so yes more vim yay so that's the copy

00:08:32,550 --> 00:08:38,570
and paste challenge and obviously vim

00:08:34,200 --> 00:08:40,979
one so now let's look at moving to

00:08:38,570 --> 00:08:44,039
arbitrary parts of your text so you may

00:08:40,979 --> 00:08:46,110
have these huge tax you're right maybe

00:08:44,039 --> 00:08:49,350
it's cold or maybe it's your thesis or

00:08:46,110 --> 00:08:51,120
whatever and you you need to move to

00:08:49,350 --> 00:08:54,290
specific points in your text in your

00:08:51,120 --> 00:08:57,690
document now there is a fine

00:08:54,290 --> 00:08:59,190
find functionality in many text editors

00:08:57,690 --> 00:09:02,970
but with them

00:08:59,190 --> 00:09:07,050
search is almost native to them so if we

00:09:02,970 --> 00:09:11,450
look back at this we may say okay once

00:09:07,050 --> 00:09:15,360
you go to line five hundred right now

00:09:11,450 --> 00:09:17,700
like five hundred there is some textile

00:09:15,360 --> 00:09:22,500
you say go to line right so in this case

00:09:17,700 --> 00:09:25,140
we just say the column and then five

00:09:22,500 --> 00:09:27,270
hundred right so that takes us to line

00:09:25,140 --> 00:09:29,760
five hundred immediately without us

00:09:27,270 --> 00:09:31,740
having to scroll up and down right so

00:09:29,760 --> 00:09:34,650
you can know exactly where your text is

00:09:31,740 --> 00:09:37,230
and then go straight to where that text

00:09:34,650 --> 00:09:39,020
is so I'm saying this to elaborate some

00:09:37,230 --> 00:09:42,510
of the add or highlight some of the

00:09:39,020 --> 00:09:44,520
advantages of vim over the normal way we

00:09:42,510 --> 00:09:46,500
do things because like I said if you

00:09:44,520 --> 00:09:49,260
want to create a masterpiece you really

00:09:46,500 --> 00:09:52,080
need to have control on a good

00:09:49,260 --> 00:09:57,030
understanding of you of your device so

00:09:52,080 --> 00:10:04,920
let's see because of time I'm just going

00:09:57,030 --> 00:10:07,320
to go straight to okay just great so I'm

00:10:04,920 --> 00:10:11,270
going to move straight to this okay now

00:10:07,320 --> 00:10:13,920
let's look at um formatting your text

00:10:11,270 --> 00:10:16,560
let's look at changing case so for

00:10:13,920 --> 00:10:20,820
instance if you want to change a portion

00:10:16,560 --> 00:10:24,060
of your your text also uppercase right

00:10:20,820 --> 00:10:26,700
in one go remember it will kind of does

00:10:24,060 --> 00:10:30,300
things in bulk so in one go you want to

00:10:26,700 --> 00:10:35,240
change everything to let's say lowercase

00:10:30,300 --> 00:10:35,240
or uppercase or whatever it's okay

00:10:36,320 --> 00:10:44,360
for instance let's say I select this C

00:10:41,750 --> 00:10:47,040
so you can see the highlights here right

00:10:44,360 --> 00:10:49,220
it's highlighted all that and I just

00:10:47,040 --> 00:10:52,710
want to make only what I've highlighted

00:10:49,220 --> 00:10:57,180
uppercase right so we could do something

00:10:52,710 --> 00:10:59,330
like this right so we didn't just with

00:10:57,180 --> 00:11:01,260
just two clicks I've made only these

00:10:59,330 --> 00:11:04,110
uppercase and the rest are still

00:11:01,260 --> 00:11:07,440
lowercase so that's the other side of

00:11:04,110 --> 00:11:09,090
them so with loyal typing

00:11:07,440 --> 00:11:12,960
and like the previous speakers spoke of

00:11:09,090 --> 00:11:15,420
a lots of documentation lots of setup

00:11:12,960 --> 00:11:17,310
before you before you start coding you

00:11:15,420 --> 00:11:20,280
need to have a tool that can really

00:11:17,310 --> 00:11:22,790
enable you code really quickly and get

00:11:20,280 --> 00:11:33,120
things done really fast

00:11:22,790 --> 00:11:35,730
okay so drain yeah so now we we have a

00:11:33,120 --> 00:11:38,940
very powerful how many people nobody for

00:11:35,730 --> 00:11:42,990
the vim uses about the G command the G

00:11:38,940 --> 00:11:46,950
command okay so I have something new

00:11:42,990 --> 00:11:51,510
great now the G command is I think if

00:11:46,950 --> 00:11:55,200
not the most powerful command I know of

00:11:51,510 --> 00:11:59,580
in vim it simply says like for every

00:11:55,200 --> 00:12:01,950
line you have a certain condition met

00:11:59,580 --> 00:12:08,640
you can perform a certain action on that

00:12:01,950 --> 00:12:12,870
line so for instance let's see we want

00:12:08,640 --> 00:12:16,350
to delete maybe every line that has the

00:12:12,870 --> 00:12:19,260
word py in it you want to delete any

00:12:16,350 --> 00:12:21,630
line that has the word py in it

00:12:19,260 --> 00:12:23,490
right so for insight you may be writing

00:12:21,630 --> 00:12:25,050
your code and you know most of the time

00:12:23,490 --> 00:12:27,240
like in Python you have to write it

00:12:25,050 --> 00:12:29,520
button is very sensitive to indentation

00:12:27,240 --> 00:12:30,960
so sometimes if you are using your back

00:12:29,520 --> 00:12:33,330
space so we are deleting you don't

00:12:30,960 --> 00:12:36,060
delete correctly you may run into

00:12:33,330 --> 00:12:38,340
problems so you want to delete in such a

00:12:36,060 --> 00:12:41,580
way that you have little interaction

00:12:38,340 --> 00:12:45,990
with your code so for it in this case

00:12:41,580 --> 00:12:49,700
I'm going to do G so that's we have lots

00:12:45,990 --> 00:12:55,910
of moods in them so that's a G command

00:12:49,700 --> 00:13:02,570
then I out say like py and not say D

00:12:55,910 --> 00:13:02,570
right so okay just a minute sir

00:13:07,140 --> 00:13:16,750
okay P oh sorry it's already deleted it

00:13:11,950 --> 00:13:17,260
oh that's a bit fast so now it has

00:13:16,750 --> 00:13:20,110
deleted

00:13:17,260 --> 00:13:23,050
because almost every line had py in it

00:13:20,110 --> 00:13:25,120
right so it deleted out 1 million lines

00:13:23,050 --> 00:13:29,190
of code so I didn't need to do any

00:13:25,120 --> 00:13:31,960
select all or nothing I just stood it

00:13:29,190 --> 00:13:34,600
specifically I'm looking for every word

00:13:31,960 --> 00:13:36,940
that has this criteria and I want you to

00:13:34,600 --> 00:13:42,270
delete that that line and it may be any

00:13:36,940 --> 00:13:42,270
other function apart from deletion ok so

00:13:43,890 --> 00:13:48,910
right so that for the G come on so now

00:13:46,600 --> 00:13:52,270
the second session which is the Python

00:13:48,910 --> 00:13:54,670
side of him is that you know how many

00:13:52,270 --> 00:13:57,550
agree we all know I'm no good to ask how

00:13:54,670 --> 00:14:00,220
many we all agree the Python is the most

00:13:57,550 --> 00:14:05,140
powerful language on the planet say yes

00:14:00,220 --> 00:14:07,180
if you agree I also most scared like ok

00:14:05,140 --> 00:14:09,430
fine we all agree so now if you have

00:14:07,180 --> 00:14:12,730
this powerful tool and we could mix it

00:14:09,430 --> 00:14:16,140
with another powerful tool then we are

00:14:12,730 --> 00:14:25,840
moving forward in our in our coding

00:14:16,140 --> 00:14:28,720
endeavor so that's ok more vim thanks so

00:14:25,840 --> 00:14:32,130
before I entered this session I'm going

00:14:28,720 --> 00:14:34,870
to look at some of the side effects of

00:14:32,130 --> 00:14:37,000
typing really long and hard so for the

00:14:34,870 --> 00:14:40,240
past two years I've been working on a

00:14:37,000 --> 00:14:43,030
project called alone and it's it's a

00:14:40,240 --> 00:14:45,670
framework that I was trying to build to

00:14:43,030 --> 00:14:48,370
help with automation of them for

00:14:45,670 --> 00:14:50,080
organizations and for the past two years

00:14:48,370 --> 00:14:52,180
I've been working on this project and

00:14:50,080 --> 00:14:57,430
there's no other way I can't get my mind

00:14:52,180 --> 00:15:00,580
across to the the keyboard except using

00:14:57,430 --> 00:15:03,640
my fingers ok except using my fingers so

00:15:00,580 --> 00:15:07,720
I have to type so that means I'm typing

00:15:03,640 --> 00:15:11,260
for ten and two years great so that

00:15:07,720 --> 00:15:13,720
means I need to find a way to make my

00:15:11,260 --> 00:15:15,730
typing experience more effective I don't

00:15:13,720 --> 00:15:18,620
just punch out the keyboard now that

00:15:15,730 --> 00:15:24,560
brings me to this

00:15:18,620 --> 00:15:30,800
image right so what is missing on this

00:15:24,560 --> 00:15:36,250
keyboard okay because of time you see my

00:15:30,800 --> 00:15:40,210
ctrl + C I'm missing right so ctrl C is

00:15:36,250 --> 00:15:45,470
most developers favorite key combination

00:15:40,210 --> 00:15:47,840
and yeah ctrl-c and ctrl-v so because of

00:15:45,470 --> 00:15:52,850
so much typing I have actually lost

00:15:47,840 --> 00:15:55,430
control and C yes that's it ctrl + C in

00:15:52,850 --> 00:16:01,520
other words of applause control over C

00:15:55,430 --> 00:16:03,770
so because of a lot of type typing I try

00:16:01,520 --> 00:16:06,830
to find a way that I could make my work

00:16:03,770 --> 00:16:11,380
more automated than just more just wrote

00:16:06,830 --> 00:16:13,670
typing so the connection between vim and

00:16:11,380 --> 00:16:16,250
Python first of all talk about the

00:16:13,670 --> 00:16:20,630
v-mail or the script scripting language

00:16:16,250 --> 00:16:23,180
it's if you use Python before you may

00:16:20,630 --> 00:16:28,760
not like to use v-mail because it's very

00:16:23,180 --> 00:16:32,510
cryptic it's very low level but we were

00:16:28,760 --> 00:16:36,230
fortunate to have Python the commands we

00:16:32,510 --> 00:16:38,450
use to link Python with vim is PI or PI

00:16:36,230 --> 00:16:42,590
3 and then you pass your arguments to it

00:16:38,450 --> 00:16:44,570
so what happens is when words like give

00:16:42,590 --> 00:16:47,150
every line of your your text or your

00:16:44,570 --> 00:16:50,570
document over to Python and perform

00:16:47,150 --> 00:16:54,800
whatever Python code you've written and

00:16:50,570 --> 00:16:57,650
then send the result back so for

00:16:54,800 --> 00:17:00,470
instance you can do PI 3 prints hello

00:16:57,650 --> 00:17:03,790
world and then it prints it to print

00:17:00,470 --> 00:17:07,100
hello world now if you have a lot of

00:17:03,790 --> 00:17:10,040
formatting or more complex things to do

00:17:07,100 --> 00:17:14,420
you can actually write an entire script

00:17:10,040 --> 00:17:16,610
and you say PI file or PI 3 file then

00:17:14,420 --> 00:17:19,520
pass the filename and then like I said

00:17:16,610 --> 00:17:21,530
it should do the same thing so for

00:17:19,520 --> 00:17:24,200
instance you can say you want to format

00:17:21,530 --> 00:17:27,860
maybe a JSON or something you could pass

00:17:24,200 --> 00:17:31,740
everything to a formatter and then it

00:17:27,860 --> 00:17:34,380
formats and brings back the result

00:17:31,740 --> 00:17:38,429
so the module into import when you're in

00:17:34,380 --> 00:17:41,309
Python under the Python site is you say

00:17:38,429 --> 00:17:43,580
from VM import everything and yet you

00:17:41,309 --> 00:17:46,529
have very few objects so it's it's safe

00:17:43,580 --> 00:17:49,080
so one of the most powerful objects is

00:17:46,529 --> 00:17:51,659
the current object and the current

00:17:49,080 --> 00:17:54,539
object contains the current line you are

00:17:51,659 --> 00:17:58,500
on in vim and also the buffer of the

00:17:54,539 --> 00:18:01,710
entire document you are working with so

00:17:58,500 --> 00:18:03,990
let's look at a short case study so I

00:18:01,710 --> 00:18:07,320
have we have this document which was in

00:18:03,990 --> 00:18:09,690
CSV and for the data scientists in the

00:18:07,320 --> 00:18:12,450
house you know while you get all your

00:18:09,690 --> 00:18:14,100
data you have to clean the data right so

00:18:12,450 --> 00:18:15,840
there are many you obviously have to

00:18:14,100 --> 00:18:17,580
write Python scripts so you could you

00:18:15,840 --> 00:18:20,370
could clean your data using just Python

00:18:17,580 --> 00:18:22,710
scripts but I mean you're adding vim and

00:18:20,370 --> 00:18:25,850
you have access to Python through them

00:18:22,710 --> 00:18:30,149
so you it makes it gives you a shortcut

00:18:25,850 --> 00:18:34,679
so if you have let's say five or ten

00:18:30,149 --> 00:18:36,630
lines of code of document or CSV and you

00:18:34,679 --> 00:18:39,120
want to format it into J's and where you

00:18:36,630 --> 00:18:41,730
have key value pairs it becomes an issue

00:18:39,120 --> 00:18:44,220
right because you cannot really do that

00:18:41,730 --> 00:18:46,380
by hand and you have thousands of lines

00:18:44,220 --> 00:18:48,480
to do this so you could do it by hand

00:18:46,380 --> 00:18:51,090
using macros and because of them not

00:18:48,480 --> 00:18:53,909
talk about macros but or you could do

00:18:51,090 --> 00:18:56,520
that using this the command I showed so

00:18:53,909 --> 00:18:59,460
you say you put your cleaner in Python

00:18:56,520 --> 00:19:03,409
and then you spy three file to call that

00:18:59,460 --> 00:19:10,080
and then that does that for you okay so

00:19:03,409 --> 00:19:14,090
that's quickly I am going to to try and

00:19:10,080 --> 00:19:14,090
see if all right

00:19:16,600 --> 00:19:32,279
okay so sorry alright so let me

00:19:38,210 --> 00:19:48,760
all right so let me do this all right

00:19:45,860 --> 00:19:48,760
let's see

00:19:49,350 --> 00:19:53,720
okay just a minute

00:19:54,080 --> 00:20:09,470
all right so okay so in here we have

00:19:59,800 --> 00:20:13,910
this folder yes so we have this folder

00:20:09,470 --> 00:20:17,060
of um it's this just basically a CSV

00:20:13,910 --> 00:20:21,710
file it's very very huge right now once

00:20:17,060 --> 00:20:25,010
you be able to use them to make just

00:20:21,710 --> 00:20:28,790
into JSON right but passing through

00:20:25,010 --> 00:20:33,440
Python okay so like the scent of a try

00:20:28,790 --> 00:20:37,400
live demo on stage um just expect

00:20:33,440 --> 00:20:41,420
anything okay so let's try this so we

00:20:37,400 --> 00:20:47,150
have pi by three file that's down here

00:20:41,420 --> 00:20:48,710
right and then the the name of the

00:20:47,150 --> 00:20:52,910
script is PI IO

00:20:48,710 --> 00:20:56,630
right so if we try that oh great

00:20:52,910 --> 00:21:00,620
we already have our first okay great so

00:20:56,630 --> 00:21:02,810
if you notice something has changed we

00:21:00,620 --> 00:21:05,890
now have the admission dates we have the

00:21:02,810 --> 00:21:09,080
symptoms and it's more like a dictionary

00:21:05,890 --> 00:21:12,910
how many people have noticed that great

00:21:09,080 --> 00:21:17,930
so with him I've been able to transform

00:21:12,910 --> 00:21:20,030
let's see fifty-five thousand two

00:21:17,930 --> 00:21:24,170
hundred fifty-five thousand and twenty

00:21:20,030 --> 00:21:26,210
two lines of CSV straight into okay I

00:21:24,170 --> 00:21:29,990
had a bug somewhere so it didn't

00:21:26,210 --> 00:21:35,050
complete this part but more than ten

00:21:29,990 --> 00:21:38,840
thousand okay lines of of CSV into a

00:21:35,050 --> 00:21:42,890
dictionary so that's all of this right

00:21:38,840 --> 00:21:45,080
with with just a few clicks I didn't

00:21:42,890 --> 00:21:47,570
have to really go to Python and then

00:21:45,080 --> 00:21:49,880
import and have the CSV module and

00:21:47,570 --> 00:21:53,630
everything to be able to produce this

00:21:49,880 --> 00:21:58,120
but from my vim I just took my raw CSV

00:21:53,630 --> 00:22:01,960
and then let's just have a quick look I

00:21:58,120 --> 00:22:05,570
don't know how we're doing on time so

00:22:01,960 --> 00:22:08,380
three three more minutes okay so let me

00:22:05,570 --> 00:22:17,659
just take a quick look at

00:22:08,380 --> 00:22:20,299
okay so okay it's not really pythonic is

00:22:17,659 --> 00:22:22,519
just to explain the concept but this

00:22:20,299 --> 00:22:26,929
this is everything in in the Python

00:22:22,519 --> 00:22:29,450
script that does that you get so with

00:22:26,929 --> 00:22:32,080
the pilot side of them there are many

00:22:29,450 --> 00:22:40,010
potentials that you have I mean I mean

00:22:32,080 --> 00:22:43,610
not my not my slides okay so yeah

00:22:40,010 --> 00:22:47,200
there's a lot of potential now so we can

00:22:43,610 --> 00:22:50,950
we can use a natural language processing

00:22:47,200 --> 00:22:54,289
tool to be able to take all our code

00:22:50,950 --> 00:22:56,659
send it and do some AI on it and bring

00:22:54,289 --> 00:22:58,929
the result back that's that's the

00:22:56,659 --> 00:23:01,370
opportunity you have with this and

00:22:58,929 --> 00:23:05,299
because of time I should have taken you

00:23:01,370 --> 00:23:08,960
through the the ulti snips you just to

00:23:05,299 --> 00:23:10,399
create a custom snippets to for you for

00:23:08,960 --> 00:23:12,980
instance you you are dealing with

00:23:10,399 --> 00:23:15,950
something that requires structure you

00:23:12,980 --> 00:23:18,230
can use ulti snips which uses the Python

00:23:15,950 --> 00:23:20,570
side of vim to create that structure and

00:23:18,230 --> 00:23:25,639
then bring that into your into your code

00:23:20,570 --> 00:23:29,590
so if you do want more information about

00:23:25,639 --> 00:23:32,840
other snips you could just read the docs

00:23:29,590 --> 00:23:35,929
yeah okay so we're not look into that

00:23:32,840 --> 00:23:39,380
then yeah in compilation the Python side

00:23:35,929 --> 00:23:42,080
of vim brings you opens a new world of

00:23:39,380 --> 00:23:45,200
opportunities it makes it opens new

00:23:42,080 --> 00:23:50,799
doors to several things you can do with

00:23:45,200 --> 00:23:50,799
with with them so thank you

00:23:50,990 --> 00:23:56,359
[Applause]

00:24:04,010 --> 00:24:10,049
pork butt thank you for all that you've

00:24:06,929 --> 00:24:15,419
done if you'd like to thank Aaron you

00:24:10,049 --> 00:24:17,640
can clap him in usual way but I think

00:24:15,419 --> 00:24:20,640
even more importantly what you could do

00:24:17,640 --> 00:24:22,590
is maybe speak to Aaron later today or

00:24:20,640 --> 00:24:24,690
after the comments and find out how you

00:24:22,590 --> 00:24:27,690
can become involved in this - exactly

00:24:24,690 --> 00:24:28,980
always a fantastic thank you thank you

00:24:27,690 --> 00:24:36,710
so much all right thank you

00:24:28,980 --> 00:24:36,710

YouTube URL: https://www.youtube.com/watch?v=HgfwflaFX4w


