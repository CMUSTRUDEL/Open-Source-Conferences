Title: VFX Reference Platform - A Common Target for Building VFX Software
Publication date: 2020-08-24
Playlist: Open Source Days 2020
Description: 
	VFX Reference Platform - A Common Target for Building VFX Software
Speakers: Francois Chardavoine, Nick Cannon

For more information about the Academy Software Foundation go to: https://www.aswf.io/

An overview of the VFX Reference Platform initiative and summary of the latest collaborations across open source developers, studios and software vendors as we continue to address software versioning challenges and opportunities to improve interoperability.
Captions: 
	00:00:00,320 --> 00:00:04,799
okay so welcome everybody to um

00:00:03,600 --> 00:00:06,480
to our talk on the visual effects

00:00:04,799 --> 00:00:08,080
reference platform and a big thank you

00:00:06,480 --> 00:00:08,639
to the academy software foundation for

00:00:08,080 --> 00:00:11,920
uh hope

00:00:08,639 --> 00:00:15,120
inviting us to talk here today um so

00:00:11,920 --> 00:00:16,480
my name is uh nick cannon uh i'm the cto

00:00:15,120 --> 00:00:18,160
at walt disney animation studios and i'm

00:00:16,480 --> 00:00:20,240
also going to be joined uh

00:00:18,160 --> 00:00:22,640
shortly by uh francois chardovine who's

00:00:20,240 --> 00:00:24,400
the vp of technology at lucasfilm

00:00:22,640 --> 00:00:26,400
um but today we're not representing our

00:00:24,400 --> 00:00:27,920
employers today we're representing uh

00:00:26,400 --> 00:00:29,760
the visual effects society technology

00:00:27,920 --> 00:00:31,920
committee and specifically our roles as

00:00:29,760 --> 00:00:32,719
co-leads of the vfx reference platform

00:00:31,920 --> 00:00:33,680
initiative

00:00:32,719 --> 00:00:34,640
and it's important to make that

00:00:33,680 --> 00:00:36,079
distinction because we're here

00:00:34,640 --> 00:00:37,520
representing um

00:00:36,079 --> 00:00:40,160
not just visual effects society members

00:00:37,520 --> 00:00:42,840
but the whole community of

00:00:40,160 --> 00:00:44,000
software developers of consumers artists

00:00:42,840 --> 00:00:45,440
studios um

00:00:44,000 --> 00:00:46,399
and so you know that's the context in

00:00:45,440 --> 00:00:48,239
which we're kind of presenting and

00:00:46,399 --> 00:00:49,520
talking to you today

00:00:48,239 --> 00:00:51,280
and what we want to talk to you about

00:00:49,520 --> 00:00:51,680
over the next kind of 40-45 minutes or

00:00:51,280 --> 00:00:53,840
so

00:00:51,680 --> 00:00:55,600
is a little bit about what the platform

00:00:53,840 --> 00:00:57,039
is and a recap and even for those who

00:00:55,600 --> 00:00:58,160
think you know what it is or you do know

00:00:57,039 --> 00:01:00,079
what it is hopefully you'll be able to

00:00:58,160 --> 00:01:02,879
share something that you didn't

00:01:00,079 --> 00:01:03,440
know before um a little bit about how it

00:01:02,879 --> 00:01:05,920
works

00:01:03,440 --> 00:01:07,600
uh inside how the process works what's

00:01:05,920 --> 00:01:10,880
new and we have some

00:01:07,600 --> 00:01:11,119
uh some uh big announcements today that

00:01:10,880 --> 00:01:12,880
i'm

00:01:11,119 --> 00:01:14,159
excited to share and then a little bit

00:01:12,880 --> 00:01:15,439
about what's next what

00:01:14,159 --> 00:01:16,880
we see for the future and hopefully we

00:01:15,439 --> 00:01:19,759
have time at the end for questions and

00:01:16,880 --> 00:01:19,759
discussion as well

00:01:19,920 --> 00:01:26,000
um so what is the vfx reference platform

00:01:23,280 --> 00:01:27,840
um at a very high level it's a set of

00:01:26,000 --> 00:01:30,000
tool and library versions to be

00:01:27,840 --> 00:01:30,960
to be used as a common target platform

00:01:30,000 --> 00:01:32,960
for building

00:01:30,960 --> 00:01:34,400
software for the vfx and animation

00:01:32,960 --> 00:01:36,799
industry um

00:01:34,400 --> 00:01:38,720
it's a neutral and independent volunteer

00:01:36,799 --> 00:01:40,720
effort sponsored by the vs and one for

00:01:38,720 --> 00:01:42,880
the benefit of the vfx community

00:01:40,720 --> 00:01:44,640
and again this is really important to

00:01:42,880 --> 00:01:46,320
note like we do want to be independent

00:01:44,640 --> 00:01:48,960
it is a community driven

00:01:46,320 --> 00:01:50,240
uh effort so um you know so these events

00:01:48,960 --> 00:01:53,040
are super important

00:01:50,240 --> 00:01:54,479
important to us um we update the

00:01:53,040 --> 00:01:55,759
platform annually but there's a lot of

00:01:54,479 --> 00:01:57,360
activity that happens through the year

00:01:55,759 --> 00:01:59,439
we'll talk more about that in a minute

00:01:57,360 --> 00:02:01,439
and it's initially been focused on on

00:01:59,439 --> 00:02:02,240
linux and that's been a big part of the

00:02:01,439 --> 00:02:03,759
initial goals

00:02:02,240 --> 00:02:05,719
um because that's where a lot of the

00:02:03,759 --> 00:02:09,200
issues that we were trying to solve

00:02:05,719 --> 00:02:11,360
were appearing but to go before we go

00:02:09,200 --> 00:02:11,760
deeper into kind of what the platform is

00:02:11,360 --> 00:02:14,080
and

00:02:11,760 --> 00:02:14,879
why it's why it was needed uh it's

00:02:14,080 --> 00:02:16,239
important to

00:02:14,879 --> 00:02:17,760
understand a little bit of the history

00:02:16,239 --> 00:02:18,480
so we'll do a little bit of a history

00:02:17,760 --> 00:02:20,560
lesson

00:02:18,480 --> 00:02:22,560
uh for uh and we're gonna go back 20

00:02:20,560 --> 00:02:24,959
years um to the year

00:02:22,560 --> 00:02:25,760
2000 if you can remember that far back

00:02:24,959 --> 00:02:27,840
um

00:02:25,760 --> 00:02:29,120
and uh and and what was happening in

00:02:27,840 --> 00:02:31,440
year 2000 is really

00:02:29,120 --> 00:02:33,280
your high-end computer graphics had

00:02:31,440 --> 00:02:34,480
really been owned by silicon graphics

00:02:33,280 --> 00:02:36,319
sgi to that point

00:02:34,480 --> 00:02:38,160
and 2000 was really seeing the emergence

00:02:36,319 --> 00:02:41,360
of linux as a serious platform for

00:02:38,160 --> 00:02:42,879
digital content creation um and what we

00:02:41,360 --> 00:02:46,080
saw in year 2000

00:02:42,879 --> 00:02:47,280
2001 were um the release of houdini iv

00:02:46,080 --> 00:02:50,800
which is the first

00:02:47,280 --> 00:02:51,360
at least on linux shake uh 2.1 which was

00:02:50,800 --> 00:02:53,280
uh

00:02:51,360 --> 00:02:54,720
the big composting package of the time

00:02:53,280 --> 00:02:57,040
released on linux

00:02:54,720 --> 00:02:58,480
and the following year maya 4 released

00:02:57,040 --> 00:03:00,879
on linux for the first time

00:02:58,480 --> 00:03:02,560
so suddenly we we had a suite of serious

00:03:00,879 --> 00:03:04,640
digital content creation tools

00:03:02,560 --> 00:03:05,840
available on linux and this marked the

00:03:04,640 --> 00:03:07,440
beginning of a really

00:03:05,840 --> 00:03:09,519
fundamental change in the economics of

00:03:07,440 --> 00:03:11,440
running studios because suddenly

00:03:09,519 --> 00:03:13,120
it commoditized the cost of of hardware

00:03:11,440 --> 00:03:16,800
and the availability and

00:03:13,120 --> 00:03:18,720
accessibility of these uh of these tools

00:03:16,800 --> 00:03:20,400
and that meant suddenly you had more and

00:03:18,720 --> 00:03:21,120
more artists wanting to collaborate

00:03:20,400 --> 00:03:24,000
together

00:03:21,120 --> 00:03:24,959
and this and and you know that became

00:03:24,000 --> 00:03:26,080
more of an overhead of that

00:03:24,959 --> 00:03:27,599
collaboration how do we

00:03:26,080 --> 00:03:30,080
how do we ease that collaboration we

00:03:27,599 --> 00:03:31,120
want to start creating pipeline tools

00:03:30,080 --> 00:03:32,720
glue code

00:03:31,120 --> 00:03:35,200
to kind of connect these different tools

00:03:32,720 --> 00:03:36,000
together and to enable easy transfer of

00:03:35,200 --> 00:03:37,680
data

00:03:36,000 --> 00:03:39,200
and when you want to start writing tools

00:03:37,680 --> 00:03:41,360
that connect to these

00:03:39,200 --> 00:03:42,560
all these different software packages um

00:03:41,360 --> 00:03:43,040
you're going to you want to make sure

00:03:42,560 --> 00:03:45,760
there's

00:03:43,040 --> 00:03:47,200
some level of compatibility between them

00:03:45,760 --> 00:03:49,760
and guess what

00:03:47,200 --> 00:03:50,720
the compatibility was an issue and we we

00:03:49,760 --> 00:03:52,400
we saw

00:03:50,720 --> 00:03:54,239
the beginnings of what a problem that

00:03:52,400 --> 00:03:56,319
was later dubbed versionitis

00:03:54,239 --> 00:03:57,280
where you write a bit of software um

00:03:56,319 --> 00:03:59,120
that works with

00:03:57,280 --> 00:04:00,400
with one product but then you know

00:03:59,120 --> 00:04:01,120
there's an incompatibility with another

00:04:00,400 --> 00:04:04,159
product and so

00:04:01,120 --> 00:04:05,439
you can't it makes it hard to to

00:04:04,159 --> 00:04:06,959
create these tools that can glue

00:04:05,439 --> 00:04:07,280
everything together seamlessly without

00:04:06,959 --> 00:04:09,920
these

00:04:07,280 --> 00:04:10,799
compatibility issues this became such a

00:04:09,920 --> 00:04:13,840
big issue

00:04:10,799 --> 00:04:14,400
uh that in 2005 the kind of studios got

00:04:13,840 --> 00:04:16,160
together

00:04:14,400 --> 00:04:18,320
and really under the leadership of ray

00:04:16,160 --> 00:04:20,239
feeney at the time the studio linux

00:04:18,320 --> 00:04:21,680
initiative was created

00:04:20,239 --> 00:04:22,880
and uh and you can if you don't know

00:04:21,680 --> 00:04:23,919
about it you can check it out on

00:04:22,880 --> 00:04:27,199
archive.org the

00:04:23,919 --> 00:04:29,840
wayback machine studio.linux.com um

00:04:27,199 --> 00:04:31,759
and uh this was a kind of an effort to

00:04:29,840 --> 00:04:33,680
try and coordinate linux versions the

00:04:31,759 --> 00:04:34,880
people using the linux distros and the

00:04:33,680 --> 00:04:36,160
versions of distros they're using

00:04:34,880 --> 00:04:38,000
between the vendors

00:04:36,160 --> 00:04:39,440
and and the customers and it definitely

00:04:38,000 --> 00:04:41,680
helps to some extent

00:04:39,440 --> 00:04:42,880
but unfortunately you know this was a

00:04:41,680 --> 00:04:44,639
challenging problem

00:04:42,880 --> 00:04:46,479
and uh the problem with virginitis

00:04:44,639 --> 00:04:50,080
continued to grow

00:04:46,479 --> 00:04:52,639
to the point where uh at uh at

00:04:50,080 --> 00:04:54,080
20 in 2011 uh siggraph the first ever

00:04:52,639 --> 00:04:56,320
from vancouver that was i think

00:04:54,080 --> 00:04:58,240
um their virgin islands was big enough

00:04:56,320 --> 00:05:00,880
to get its very own birds of a feather

00:04:58,240 --> 00:05:01,759
um and you know that was a packed room

00:05:00,880 --> 00:05:03,840
in a hotel i

00:05:01,759 --> 00:05:05,039
remember that well and you know lots of

00:05:03,840 --> 00:05:06,639
uh uh

00:05:05,039 --> 00:05:07,680
heated discussion people felt passionate

00:05:06,639 --> 00:05:09,520
about it because they were people were

00:05:07,680 --> 00:05:10,800
suffering on a day-to-day basis

00:05:09,520 --> 00:05:12,960
and you know what people were

00:05:10,800 --> 00:05:15,039
experiencing was upgrading versions of

00:05:12,960 --> 00:05:16,960
software was really painful

00:05:15,039 --> 00:05:19,039
and sometimes almost impossible you know

00:05:16,960 --> 00:05:20,720
and it's certainly impractical

00:05:19,039 --> 00:05:22,320
with huge amount of engineering overhead

00:05:20,720 --> 00:05:23,919
and doing that and it was meaning that

00:05:22,320 --> 00:05:24,880
the industry was slow to adopt new

00:05:23,919 --> 00:05:26,880
technologies

00:05:24,880 --> 00:05:28,400
and we were starting to stagnate we were

00:05:26,880 --> 00:05:29,919
we were starting to you know because it

00:05:28,400 --> 00:05:30,800
was so much effort just to upgrade a

00:05:29,919 --> 00:05:32,960
component

00:05:30,800 --> 00:05:34,880
we were not doing it and we and so the

00:05:32,960 --> 00:05:37,039
industry was being held back from uh

00:05:34,880 --> 00:05:39,759
from new features

00:05:37,039 --> 00:05:41,759
um so the following year uh under the

00:05:39,759 --> 00:05:43,440
leadership of robrito the the visual

00:05:41,759 --> 00:05:45,440
effects society technology committee

00:05:43,440 --> 00:05:48,560
kind of rebooted and reformed

00:05:45,440 --> 00:05:50,240
um and uh and you know we were looking

00:05:48,560 --> 00:05:51,680
at ways that we could help the industry

00:05:50,240 --> 00:05:53,199
and virginities was a hot issue at the

00:05:51,680 --> 00:05:54,400
time but hey we think we can do

00:05:53,199 --> 00:05:56,319
something about this

00:05:54,400 --> 00:05:57,919
we met with the software vendors or some

00:05:56,319 --> 00:06:01,360
of the major software vendors

00:05:57,919 --> 00:06:02,080
um at a at a an auto less hosted cto

00:06:01,360 --> 00:06:04,800
meeting

00:06:02,080 --> 00:06:06,319
with all the studios in 2013 uh we

00:06:04,800 --> 00:06:07,759
proposed a way forward with the vfx

00:06:06,319 --> 00:06:09,120
reference platform and sought feedback

00:06:07,759 --> 00:06:11,120
and a lot of input from

00:06:09,120 --> 00:06:12,479
uh technology leaders uh and other

00:06:11,120 --> 00:06:14,080
software vendors as well for

00:06:12,479 --> 00:06:15,919
another discussions we were having that

00:06:14,080 --> 00:06:18,160
really led to the formation of the vfx

00:06:15,919 --> 00:06:21,440
reference platform that was launched in

00:06:18,160 --> 00:06:21,840
in 2014. so at this point i'll hand over

00:06:21,440 --> 00:06:24,240
to

00:06:21,840 --> 00:06:26,400
francois who can uh tell us more about

00:06:24,240 --> 00:06:26,400
it

00:06:27,440 --> 00:06:31,759
yeah um so i think nick hinted at this

00:06:31,280 --> 00:06:33,600
but

00:06:31,759 --> 00:06:35,280
one aspect that's really specific i

00:06:33,600 --> 00:06:37,039
think about visual effects and animation

00:06:35,280 --> 00:06:39,840
on the linux platform is this notion of

00:06:37,039 --> 00:06:42,160
integrated pipelines where

00:06:39,840 --> 00:06:43,840
a lot of studios the industry at large

00:06:42,160 --> 00:06:44,560
uses multiple major third-party

00:06:43,840 --> 00:06:47,039
applications

00:06:44,560 --> 00:06:48,400
essentially binary blobs on linux that

00:06:47,039 --> 00:06:51,039
we use for content creation these are

00:06:48,400 --> 00:06:54,000
the maya houdini katana nuke etc

00:06:51,039 --> 00:06:54,720
and they're often treated as pipeline

00:06:54,000 --> 00:06:57,199
development

00:06:54,720 --> 00:07:00,080
platforms so their functionality is

00:06:57,199 --> 00:07:01,440
heavily extended by proprietary plugins

00:07:00,080 --> 00:07:02,960
these plugins are built on shared

00:07:01,440 --> 00:07:04,400
libraries that are now used across

00:07:02,960 --> 00:07:07,440
multiple applications

00:07:04,400 --> 00:07:07,919
and in turn those plugins are uh often

00:07:07,440 --> 00:07:10,000
rely

00:07:07,919 --> 00:07:11,840
on additional third-party libraries like

00:07:10,000 --> 00:07:15,680
qt python tbb

00:07:11,840 --> 00:07:18,160
or industry libraries like openexr

00:07:15,680 --> 00:07:19,280
and previously there really was no

00:07:18,160 --> 00:07:22,479
coordination

00:07:19,280 --> 00:07:24,720
between vendors on versions which meant

00:07:22,479 --> 00:07:25,520
there there was so much effort spent in

00:07:24,720 --> 00:07:27,360
trying to

00:07:25,520 --> 00:07:29,680
build multiple targets coordinating

00:07:27,360 --> 00:07:32,160
across compatibilities on the code side

00:07:29,680 --> 00:07:33,759
not to mention the runtime side and and

00:07:32,160 --> 00:07:35,680
this burden of support

00:07:33,759 --> 00:07:36,800
was extremely high it was a large

00:07:35,680 --> 00:07:38,639
portion of what

00:07:36,800 --> 00:07:40,160
a lot of us in the industry were doing

00:07:38,639 --> 00:07:42,240
so the goal here and why it was needed

00:07:40,160 --> 00:07:44,080
was really to minimize incompatibilities

00:07:42,240 --> 00:07:46,560
between software packages

00:07:44,080 --> 00:07:48,319
and and find common ground for reducing

00:07:46,560 --> 00:07:50,080
the software development friction

00:07:48,319 --> 00:07:51,360
uh that everybody entails so that

00:07:50,080 --> 00:07:52,720
everybody can actually focus on what we

00:07:51,360 --> 00:07:53,440
care about which is pushing the state of

00:07:52,720 --> 00:07:56,639
the art

00:07:53,440 --> 00:07:59,599
and uh not not this business of uh

00:07:56,639 --> 00:08:01,039
kind of a bureaucratic management of of

00:07:59,599 --> 00:08:02,800
software versions

00:08:01,039 --> 00:08:04,639
and overall it essentially encourages a

00:08:02,800 --> 00:08:06,800
healthy linux ecosystem

00:08:04,639 --> 00:08:08,319
in this kind of unique aspect where we

00:08:06,800 --> 00:08:11,360
combine open source

00:08:08,319 --> 00:08:12,879
with binary software uh for for all of

00:08:11,360 --> 00:08:15,919
our day-to-day

00:08:12,879 --> 00:08:16,560
um so how does this actually work in

00:08:15,919 --> 00:08:18,000
practice

00:08:16,560 --> 00:08:19,680
um obviously a lot of you have seen from

00:08:18,000 --> 00:08:22,720
the participants are familiar with this

00:08:19,680 --> 00:08:24,879
uh but essentially at its core uh we

00:08:22,720 --> 00:08:27,280
have the visual effects societies uh

00:08:24,879 --> 00:08:29,440
technology committee which i'd say

00:08:27,280 --> 00:08:31,680
organizes the process of decision making

00:08:29,440 --> 00:08:32,880
and the communication around it but is

00:08:31,680 --> 00:08:35,039
truly independent across

00:08:32,880 --> 00:08:36,560
all vendors and and users and studios

00:08:35,039 --> 00:08:38,000
and and not just academy software

00:08:36,560 --> 00:08:39,519
foundation members

00:08:38,000 --> 00:08:40,880
obviously this is this is kind of a new

00:08:39,519 --> 00:08:41,839
development which is extremely

00:08:40,880 --> 00:08:46,000
beneficial but has

00:08:41,839 --> 00:08:49,279
has been ongoing uh regardless and

00:08:46,000 --> 00:08:50,560
we coordinate with um let me just move

00:08:49,279 --> 00:08:53,120
this line

00:08:50,560 --> 00:08:54,640
uh we coordinate with three of the major

00:08:53,120 --> 00:08:55,440
vendors this is autodesk foundry and

00:08:54,640 --> 00:08:57,680
side effects

00:08:55,440 --> 00:08:58,480
essentially because these are some of

00:08:57,680 --> 00:09:00,160
the larger

00:08:58,480 --> 00:09:02,320
software packages or vendors that we all

00:09:00,160 --> 00:09:04,560
rely on and and if we start there

00:09:02,320 --> 00:09:06,800
it's a lot easier uh for for everyone

00:09:04,560 --> 00:09:09,839
else to kind of tack onto that

00:09:06,800 --> 00:09:11,040
this set of uh vendors is not not fixed

00:09:09,839 --> 00:09:13,200
in time that could evolve

00:09:11,040 --> 00:09:14,480
over time but it certainly was the the

00:09:13,200 --> 00:09:16,160
best starting point for

00:09:14,480 --> 00:09:18,160
for all of us to get to agree if we if

00:09:16,160 --> 00:09:18,720
we could agree across the three vendors

00:09:18,160 --> 00:09:19,920
and

00:09:18,720 --> 00:09:22,480
the visual effects and animation

00:09:19,920 --> 00:09:24,480
industry as a whole we had already made

00:09:22,480 --> 00:09:26,240
a ton of progress here

00:09:24,480 --> 00:09:28,480
and essentially this is openly

00:09:26,240 --> 00:09:30,160
communicated this is an open process

00:09:28,480 --> 00:09:32,000
uh where we communicate this to vfx

00:09:30,160 --> 00:09:34,880
platform discuss which is a

00:09:32,000 --> 00:09:36,000
google group that is open to everyone

00:09:34,880 --> 00:09:39,200
and

00:09:36,000 --> 00:09:40,320
we we really encourage as much feedback

00:09:39,200 --> 00:09:43,519
and participation

00:09:40,320 --> 00:09:45,920
as possible and revisit uh that that

00:09:43,519 --> 00:09:48,320
feedback in an iterative process

00:09:45,920 --> 00:09:50,480
more recently with the academy software

00:09:48,320 --> 00:09:53,440
foundation coming in

00:09:50,480 --> 00:09:53,839
as always we the philosophy for us is to

00:09:53,440 --> 00:09:55,519
be

00:09:53,839 --> 00:09:57,680
facilitators and not necessarily

00:09:55,519 --> 00:09:59,839
evangelists and

00:09:57,680 --> 00:10:01,680
get everyone to participate in the

00:09:59,839 --> 00:10:02,800
process to reach the best possible

00:10:01,680 --> 00:10:05,040
compromise for

00:10:02,800 --> 00:10:06,640
everyone and and that compromise can

00:10:05,040 --> 00:10:08,399
mean the difference between

00:10:06,640 --> 00:10:10,240
leaning forward and pushing the industry

00:10:08,399 --> 00:10:12,160
forward or minimizing change

00:10:10,240 --> 00:10:14,000
and the burden for both software vendors

00:10:12,160 --> 00:10:16,880
and um

00:10:14,000 --> 00:10:18,560
industry participants uh studios that

00:10:16,880 --> 00:10:21,760
have to deal with it

00:10:18,560 --> 00:10:24,800
and a more recent aspect which is uh

00:10:21,760 --> 00:10:26,720
kind of puts all of this in practice

00:10:24,800 --> 00:10:28,240
is the the continuous integration

00:10:26,720 --> 00:10:29,440
working group as part of the academy

00:10:28,240 --> 00:10:31,920
software foundation

00:10:29,440 --> 00:10:33,360
which helps automate the process of

00:10:31,920 --> 00:10:34,800
builds targeting the visual effects

00:10:33,360 --> 00:10:36,880
reference platform

00:10:34,800 --> 00:10:38,560
and essentially validates a lot of those

00:10:36,880 --> 00:10:39,839
decisions and and prove that they

00:10:38,560 --> 00:10:42,320
continuously work

00:10:39,839 --> 00:10:43,200
and run tests against those targets so

00:10:42,320 --> 00:10:44,480
it's not just

00:10:43,200 --> 00:10:46,079
putting out a white paper saying the

00:10:44,480 --> 00:10:46,880
versions it's actually kind of testing

00:10:46,079 --> 00:10:49,760
them out this is

00:10:46,880 --> 00:10:51,440
like a real validation framework that we

00:10:49,760 --> 00:10:53,279
hope to leverage and also beneficial for

00:10:51,440 --> 00:10:55,040
a lot of studios that over time

00:10:53,279 --> 00:10:57,200
may not have large software and r d

00:10:55,040 --> 00:10:58,240
groups and can leverage some of these

00:10:57,200 --> 00:11:00,959
these artifacts

00:10:58,240 --> 00:11:00,959
more directly

00:11:01,760 --> 00:11:05,120
and philosophically i think this is an

00:11:03,760 --> 00:11:06,399
ongoing challenge i think it's been

00:11:05,120 --> 00:11:08,000
really productive the discussions we've

00:11:06,399 --> 00:11:09,519
had over the years in terms of that that

00:11:08,000 --> 00:11:10,399
balance of leaning forward versus

00:11:09,519 --> 00:11:12,560
compromise

00:11:10,399 --> 00:11:14,000
recent ones that have been extremely

00:11:12,560 --> 00:11:16,079
informative have been with

00:11:14,000 --> 00:11:17,120
the the blender uh community for

00:11:16,079 --> 00:11:19,839
instance that

00:11:17,120 --> 00:11:21,279
uh prides itself on on leaning forward

00:11:19,839 --> 00:11:22,880
but that we see a lot more studios

00:11:21,279 --> 00:11:24,480
wanting to adopt and finding

00:11:22,880 --> 00:11:26,399
right what the right blend is that

00:11:24,480 --> 00:11:28,160
doesn't uh

00:11:26,399 --> 00:11:30,240
compromise innovation for the software

00:11:28,160 --> 00:11:32,959
vendors that really want to push forward

00:11:30,240 --> 00:11:35,040
uh but also increases adoption and use

00:11:32,959 --> 00:11:36,720
in that space

00:11:35,040 --> 00:11:38,640
so the general schedule and how we go

00:11:36,720 --> 00:11:39,200
about it uh again a lot of you familiar

00:11:38,640 --> 00:11:40,800
with this but

00:11:39,200 --> 00:11:42,240
essentially this we target a calendar

00:11:40,800 --> 00:11:43,760
year and so

00:11:42,240 --> 00:11:45,839
uh shortly after the calendar year

00:11:43,760 --> 00:11:48,720
begins we start planning for

00:11:45,839 --> 00:11:50,880
what the um the platform is going to be

00:11:48,720 --> 00:11:53,279
for the year after that

00:11:50,880 --> 00:11:55,200
and we get together as a group the the

00:11:53,279 --> 00:11:57,519
small group that you saw with the uh

00:11:55,200 --> 00:11:59,440
the the subset of vendors and us as

00:11:57,519 --> 00:12:01,360
representatives from the vfxn animation

00:11:59,440 --> 00:12:01,920
community and then we publish this first

00:12:01,360 --> 00:12:03,360
draft

00:12:01,920 --> 00:12:05,279
publicly there's nothing that's set in

00:12:03,360 --> 00:12:06,959
stone at this point it's essentially

00:12:05,279 --> 00:12:08,480
we've gotten a lot of big players to to

00:12:06,959 --> 00:12:11,600
agree at least on this

00:12:08,480 --> 00:12:12,079
what does everyone else think uh and we

00:12:11,600 --> 00:12:13,519
we

00:12:12,079 --> 00:12:15,040
give a lot of room for just community

00:12:13,519 --> 00:12:15,600
feedback and iterating on some of the

00:12:15,040 --> 00:12:16,959
points

00:12:15,600 --> 00:12:19,360
where where we should lean forward where

00:12:16,959 --> 00:12:20,800
we shouldn't uh and we have essentially

00:12:19,360 --> 00:12:22,320
a first community meeting that typically

00:12:20,800 --> 00:12:24,079
is around siggraph time

00:12:22,320 --> 00:12:25,440
uh it doesn't have to be but obviously

00:12:24,079 --> 00:12:26,000
it really helps to have more opportunity

00:12:25,440 --> 00:12:28,800
to discuss

00:12:26,000 --> 00:12:30,160
in person where where possible so that's

00:12:28,800 --> 00:12:31,360
essentially what we're doing both now

00:12:30,160 --> 00:12:34,160
and next week

00:12:31,360 --> 00:12:36,000
um and then shortly after siggraph we

00:12:34,160 --> 00:12:38,959
officially published a final draft

00:12:36,000 --> 00:12:39,839
or the final version of what should be

00:12:38,959 --> 00:12:42,240
targeted

00:12:39,839 --> 00:12:42,959
for software that is built and released

00:12:42,240 --> 00:12:46,240
in the next

00:12:42,959 --> 00:12:47,760
calendar year now in some instances

00:12:46,240 --> 00:12:51,680
there's late-breaking changes

00:12:47,760 --> 00:12:53,920
these are not weighed lightly

00:12:51,680 --> 00:12:55,440
these really need the general approval

00:12:53,920 --> 00:12:56,800
of the community to make changes there's

00:12:55,440 --> 00:12:58,320
a few instances where we

00:12:56,800 --> 00:13:00,240
we know that there's some packages we

00:12:58,320 --> 00:13:01,200
rely on the release later openvdb is a

00:13:00,240 --> 00:13:03,040
good example of that

00:13:01,200 --> 00:13:04,880
and we can sort of agree to it sooner

00:13:03,040 --> 00:13:07,440
that we'll target a later release

00:13:04,880 --> 00:13:09,279
uh but we also have to keep in mind that

00:13:07,440 --> 00:13:09,920
it's extremely owners for large software

00:13:09,279 --> 00:13:12,079
vendors

00:13:09,920 --> 00:13:13,680
to suddenly make changes especially if

00:13:12,079 --> 00:13:14,320
they tend to release software early in

00:13:13,680 --> 00:13:16,160
the year

00:13:14,320 --> 00:13:17,440
in the calendar year now potentially

00:13:16,160 --> 00:13:18,560
they will only have a couple months to

00:13:17,440 --> 00:13:21,040
make changes

00:13:18,560 --> 00:13:22,800
and and we really have to balance uh the

00:13:21,040 --> 00:13:25,279
the overall needs of what we're trying

00:13:22,800 --> 00:13:25,279
to achieve

00:13:25,440 --> 00:13:33,680
so what's new for next year uh

00:13:30,079 --> 00:13:37,519
let's see the

00:13:33,680 --> 00:13:39,360
did this go backwards no uh here we go

00:13:37,519 --> 00:13:41,199
the a lot of the major recent changes

00:13:39,360 --> 00:13:42,320
that we've looked at uh recently have

00:13:41,199 --> 00:13:45,680
been essentially setting

00:13:42,320 --> 00:13:46,480
the c plus uh default build version we

00:13:45,680 --> 00:13:49,040
went from c

00:13:46,480 --> 00:13:50,560
plus 11 which also included a qt5 change

00:13:49,040 --> 00:13:52,639
these are some of the major changes

00:13:50,560 --> 00:13:54,480
that we don't want to do too often we

00:13:52,639 --> 00:13:56,320
often leap for ugly years to give people

00:13:54,480 --> 00:13:58,160
some time to adopt and

00:13:56,320 --> 00:14:00,399
uh and deploy and upgrade their

00:13:58,160 --> 00:14:01,920
pipelines before a major change

00:14:00,399 --> 00:14:03,839
two years later here we upgraded

00:14:01,920 --> 00:14:06,880
upgraded the c plus standard as well

00:14:03,839 --> 00:14:10,240
uh as well as gcc six um

00:14:06,880 --> 00:14:11,279
and then uh last year essentially this

00:14:10,240 --> 00:14:13,199
calendar year

00:14:11,279 --> 00:14:14,399
python three was the big push this is

00:14:13,199 --> 00:14:17,120
something that we have been

00:14:14,399 --> 00:14:18,079
kind of punting down the road little by

00:14:17,120 --> 00:14:20,240
little each year

00:14:18,079 --> 00:14:22,240
given how much uh how hard it was going

00:14:20,240 --> 00:14:24,800
to be for both studios and vendors

00:14:22,240 --> 00:14:26,240
to uh to adopt but we knew we'd have to

00:14:24,800 --> 00:14:28,240
deal with it sooner or later

00:14:26,240 --> 00:14:29,920
so we kind of we set a line in the sand

00:14:28,240 --> 00:14:30,320
and then we moved that line by one year

00:14:29,920 --> 00:14:33,360
and now

00:14:30,320 --> 00:14:34,959
and then we actually did it uh and

00:14:33,360 --> 00:14:36,720
uh now is really the time where

00:14:34,959 --> 00:14:37,839
everybody's pushing for python three and

00:14:36,720 --> 00:14:39,600
that was just a major

00:14:37,839 --> 00:14:41,120
milestone where the hope was to not

00:14:39,600 --> 00:14:42,720
change too much

00:14:41,120 --> 00:14:45,120
across a couple years to give people a

00:14:42,720 --> 00:14:47,360
chance to upgrade to python 3.

00:14:45,120 --> 00:14:48,720
so now for next calendar year a couple

00:14:47,360 --> 00:14:50,240
of the things that we're we're talking

00:14:48,720 --> 00:14:53,279
about and that we're proposing and

00:14:50,240 --> 00:14:55,279
and gathering feedback on are um

00:14:53,279 --> 00:14:56,399
the question of which python 3 version 3

00:14:55,279 --> 00:14:58,320
7 versus 3 8

00:14:56,399 --> 00:14:59,600
again the kind of pros and cons around

00:14:58,320 --> 00:15:01,519
leaning forward

00:14:59,600 --> 00:15:03,440
uh we're going to tackle some of the

00:15:01,519 --> 00:15:04,959
questions around qut licensing and what

00:15:03,440 --> 00:15:05,440
does that mean in terms of choosing a

00:15:04,959 --> 00:15:07,440
version

00:15:05,440 --> 00:15:09,360
and choosing a licensing and whether the

00:15:07,440 --> 00:15:10,560
choice of licensing should be specified

00:15:09,360 --> 00:15:12,800
in the platform

00:15:10,560 --> 00:15:14,000
uh more importantly and this has been an

00:15:12,800 --> 00:15:16,079
ongoing topic

00:15:14,000 --> 00:15:17,199
we're hoping to look beyond linux at

00:15:16,079 --> 00:15:19,040
other platforms

00:15:17,199 --> 00:15:21,519
i won't still steal mixed thunder on

00:15:19,040 --> 00:15:24,959
this uh and more generally

00:15:21,519 --> 00:15:26,800
using kind of build and deployment uh

00:15:24,959 --> 00:15:28,320
opportunities by looking at the the

00:15:26,800 --> 00:15:30,880
academy software foundation

00:15:28,320 --> 00:15:32,560
docker efforts uh and nick i'll hand it

00:15:30,880 --> 00:15:36,000
back to you for the rest

00:15:32,560 --> 00:15:38,560
perfect thank you very much um okay

00:15:36,000 --> 00:15:39,040
so uh this so what we're seeing right

00:15:38,560 --> 00:15:40,880
here is

00:15:39,040 --> 00:15:42,480
this is uh this is the platform so these

00:15:40,880 --> 00:15:45,920
are the different components and this is

00:15:42,480 --> 00:15:47,920
where we stand today uh candia 2020 um

00:15:45,920 --> 00:15:49,680
obviously the big change moving to

00:15:47,920 --> 00:15:52,639
python 3.7

00:15:49,680 --> 00:15:53,040
and so what does 2021 look like and this

00:15:52,639 --> 00:15:55,519
is still

00:15:53,040 --> 00:15:57,199
still a draft for us um but here's the

00:15:55,519 --> 00:15:58,720
here's the 2021 components and i know

00:15:57,199 --> 00:15:59,920
that's a bit of an eye chart so let's

00:15:58,720 --> 00:16:00,800
kind of highlight some of the big

00:15:59,920 --> 00:16:03,279
changes

00:16:00,800 --> 00:16:04,800
um and so the the changes here are

00:16:03,279 --> 00:16:06,320
highlighted in in orange and

00:16:04,800 --> 00:16:08,240
some of the bolder ones i just want to

00:16:06,320 --> 00:16:10,320
call out some big changes

00:16:08,240 --> 00:16:11,519
this is still a draft so and we're not

00:16:10,320 --> 00:16:13,040
going to finalize the platform for

00:16:11,519 --> 00:16:14,639
another three to four weeks

00:16:13,040 --> 00:16:15,839
so there's still and you know part of us

00:16:14,639 --> 00:16:17,279
doing this event today is to kind of

00:16:15,839 --> 00:16:18,560
invite you to give us feedback do you

00:16:17,279 --> 00:16:19,440
see any issues if you have any concerns

00:16:18,560 --> 00:16:21,360
with this

00:16:19,440 --> 00:16:22,800
but i'll first call out um the c

00:16:21,360 --> 00:16:24,800
compiler

00:16:22,800 --> 00:16:26,560
uh and uh c plus plus at the bottom

00:16:24,800 --> 00:16:27,360
there so we're taking a big leap this

00:16:26,560 --> 00:16:30,480
year from

00:16:27,360 --> 00:16:32,480
uh gcc six to gcc nine and that's going

00:16:30,480 --> 00:16:32,959
to give us c plus plus 17 which is which

00:16:32,480 --> 00:16:34,160
has been

00:16:32,959 --> 00:16:35,839
you know we've had a vocal group of

00:16:34,160 --> 00:16:36,800
people who've been asking for this you

00:16:35,839 --> 00:16:38,240
know really wanting to

00:16:36,800 --> 00:16:40,079
modernize development practices in the

00:16:38,240 --> 00:16:42,720
industry and so uh we're

00:16:40,079 --> 00:16:44,880
very happy to to be proposing this uh

00:16:42,720 --> 00:16:46,000
this move to gcc nine and c plus plus

00:16:44,880 --> 00:16:47,600
17.

00:16:46,000 --> 00:16:49,360
and also wanted to call out kind of open

00:16:47,600 --> 00:16:50,959
exr and open color i o you know

00:16:49,360 --> 00:16:52,399
they've given their talks already you

00:16:50,959 --> 00:16:55,040
know over the last uh

00:16:52,399 --> 00:16:56,639
today and yesterday and um you know

00:16:55,040 --> 00:16:58,320
there's major releases coming in

00:16:56,639 --> 00:16:59,279
so it's it's really exciting you know i

00:16:58,320 --> 00:17:00,480
you know i've been involved in this

00:16:59,279 --> 00:17:02,079
initiative from the beginning

00:17:00,480 --> 00:17:03,839
and seen some of these some of these

00:17:02,079 --> 00:17:05,120
components stagnate so it's particularly

00:17:03,839 --> 00:17:07,039
rewarding to see these

00:17:05,120 --> 00:17:08,480
these major releases and really as a

00:17:07,039 --> 00:17:10,319
result of the great work the academy

00:17:08,480 --> 00:17:11,919
software foundation is doing in kind of

00:17:10,319 --> 00:17:13,839
in kind of nurturing and sponsoring kind

00:17:11,919 --> 00:17:15,280
of reinvigorating these projects so

00:17:13,839 --> 00:17:17,280
i just want to call out that's great to

00:17:15,280 --> 00:17:19,039
see something is not highly

00:17:17,280 --> 00:17:20,640
highlighted i want to call out as well

00:17:19,039 --> 00:17:23,360
is so far we're saying

00:17:20,640 --> 00:17:24,559
python 3.7 is going to be python 3.7 for

00:17:23,360 --> 00:17:27,360
next year as well

00:17:24,559 --> 00:17:28,559
and uh and i'm already seeing questions

00:17:27,360 --> 00:17:30,480
coming in the q and a

00:17:28,559 --> 00:17:32,320
and thanks now and i'll i'll get to

00:17:30,480 --> 00:17:34,160
those you know why moving to

00:17:32,320 --> 00:17:35,760
three or eight i'll talk about that in

00:17:34,160 --> 00:17:38,320
in in a little bit

00:17:35,760 --> 00:17:39,520
um and you one other note i'll say you

00:17:38,320 --> 00:17:41,120
know we've been as

00:17:39,520 --> 00:17:42,880
we talked about in the history we've

00:17:41,120 --> 00:17:43,200
been behind the curve for a long time

00:17:42,880 --> 00:17:45,760
and

00:17:43,200 --> 00:17:46,720
i think you know give or take one or two

00:17:45,760 --> 00:17:48,960
maybe

00:17:46,720 --> 00:17:50,640
what we're proposing right here is is

00:17:48,960 --> 00:17:51,200
really getting to the latest major

00:17:50,640 --> 00:17:53,679
version

00:17:51,200 --> 00:17:54,960
of of almost all the components and that

00:17:53,679 --> 00:17:56,240
really is a significant milestone it's

00:17:54,960 --> 00:17:58,320
taken us maybe sort of

00:17:56,240 --> 00:18:00,400
uh you know seven years to get here but

00:17:58,320 --> 00:18:02,720
um it did what this really gives is

00:18:00,400 --> 00:18:04,480
we've managed to coordinate a change uh

00:18:02,720 --> 00:18:06,240
to to be on kind of modern

00:18:04,480 --> 00:18:07,760
uh modern components and unlocking all

00:18:06,240 --> 00:18:09,760
those capabilities so

00:18:07,760 --> 00:18:11,120
uh you know and that's been uh due to

00:18:09,760 --> 00:18:12,480
the great

00:18:11,120 --> 00:18:14,400
input and collaboration cooperation from

00:18:12,480 --> 00:18:16,160
the software vendors and and the studios

00:18:14,400 --> 00:18:18,240
as well

00:18:16,160 --> 00:18:20,640
so let's get into that uh question about

00:18:18,240 --> 00:18:24,320
python three seven or three eight

00:18:20,640 --> 00:18:26,559
um uh so python three seven was new

00:18:24,320 --> 00:18:29,120
this year um we were talking about

00:18:26,559 --> 00:18:30,080
python three i think since my very 2005

00:18:29,120 --> 00:18:31,600
i remember a meeting

00:18:30,080 --> 00:18:33,120
where we were talking about python 3000

00:18:31,600 --> 00:18:34,640
and then i was like no way we

00:18:33,120 --> 00:18:36,160
are we're doing that that's crazy so it

00:18:34,640 --> 00:18:38,640
took us 15 years we

00:18:36,160 --> 00:18:39,760
we got to python three um better late

00:18:38,640 --> 00:18:42,240
than never maybe

00:18:39,760 --> 00:18:42,880
but um you know when we're definitely

00:18:42,240 --> 00:18:45,120
hearing

00:18:42,880 --> 00:18:46,799
many community requests for for us to

00:18:45,120 --> 00:18:49,120
move to 3.8

00:18:46,799 --> 00:18:50,160
um and uh you know definitely recognize

00:18:49,120 --> 00:18:51,280
like that's what the community that's

00:18:50,160 --> 00:18:53,200
what the community

00:18:51,280 --> 00:18:56,400
uh you know the majority of people are

00:18:53,200 --> 00:18:57,760
asking for um but there's some

00:18:56,400 --> 00:18:59,280
practicalities around that

00:18:57,760 --> 00:19:00,960
uh which i want to talk about you know

00:18:59,280 --> 00:19:02,799
the migration from python 2

00:19:00,960 --> 00:19:04,720
is going to take some time the vendors

00:19:02,799 --> 00:19:05,280
have done a lot of work over the last 12

00:19:04,720 --> 00:19:07,760
months

00:19:05,280 --> 00:19:08,400
to be able to accommodate python 3 in

00:19:07,760 --> 00:19:10,080
their

00:19:08,400 --> 00:19:11,600
in in their products it's not

00:19:10,080 --> 00:19:12,640
straightforward because of some of the

00:19:11,600 --> 00:19:13,520
some of the things they have to link

00:19:12,640 --> 00:19:15,919
against like you

00:19:13,520 --> 00:19:16,720
your usd is highly complex boost is

00:19:15,919 --> 00:19:18,720
complex

00:19:16,720 --> 00:19:21,120
and so it means changing uh python

00:19:18,720 --> 00:19:22,720
interpreters versions is is challenging

00:19:21,120 --> 00:19:24,240
they actually most vendors actually have

00:19:22,720 --> 00:19:26,320
two builds now they'll have a python two

00:19:24,240 --> 00:19:29,679
build and a python 3.7 build

00:19:26,320 --> 00:19:31,200
um and uh and it's going to take a while

00:19:29,679 --> 00:19:31,919
for that for the customers for the big

00:19:31,200 --> 00:19:33,919
studios

00:19:31,919 --> 00:19:36,160
to migrate these enormous python 2 code

00:19:33,919 --> 00:19:38,480
bases to python 3.

00:19:36,160 --> 00:19:39,840
um i will say like hopefully everyone

00:19:38,480 --> 00:19:41,600
here from any studio you have your

00:19:39,840 --> 00:19:44,000
python 3 migration

00:19:41,600 --> 00:19:45,600
plan in progress right now because uh

00:19:44,000 --> 00:19:47,520
you're going to be left adrift in in

00:19:45,600 --> 00:19:48,880
you know in a year or two if you if you

00:19:47,520 --> 00:19:52,240
don't get moving

00:19:48,880 --> 00:19:53,520
um you know and there is a fantastic

00:19:52,240 --> 00:19:55,039
and you've just now under the academy

00:19:53,520 --> 00:19:55,679
software foundation they have a python 3

00:19:55,039 --> 00:19:57,200
working group

00:19:55,679 --> 00:19:59,360
if you want help or input or guidance on

00:19:57,200 --> 00:20:01,919
best practices around python 3 migration

00:19:59,360 --> 00:20:02,480
definitely uh check that out and and

00:20:01,919 --> 00:20:04,840
sign up

00:20:02,480 --> 00:20:06,480
for the slack channels and meetings

00:20:04,840 --> 00:20:08,400
there um

00:20:06,480 --> 00:20:10,000
but the reality is like the software

00:20:08,400 --> 00:20:11,760
vendors having to support python 2

00:20:10,000 --> 00:20:14,960
builds and a python 37 build

00:20:11,760 --> 00:20:17,440
for for at least next year um

00:20:14,960 --> 00:20:18,080
and support for every build they have to

00:20:17,440 --> 00:20:20,720
support

00:20:18,080 --> 00:20:22,400
it has a significant overhead in uh the

00:20:20,720 --> 00:20:23,679
amount of build resources they have just

00:20:22,400 --> 00:20:25,120
in terms of compute of like

00:20:23,679 --> 00:20:26,559
you know they're doing doing frequent

00:20:25,120 --> 00:20:27,360
builds of these very large pieces of

00:20:26,559 --> 00:20:29,440
software

00:20:27,360 --> 00:20:31,280
um all the qa they have to do the

00:20:29,440 --> 00:20:34,080
testing the logistics around

00:20:31,280 --> 00:20:35,760
uh around support and all that kind of

00:20:34,080 --> 00:20:36,559
thing and and there's high complexity

00:20:35,760 --> 00:20:38,320
around it

00:20:36,559 --> 00:20:40,000
now the vendors are like they're they're

00:20:38,320 --> 00:20:41,679
saying hey look if we if the

00:20:40,000 --> 00:20:43,840
community really really wants us to go

00:20:41,679 --> 00:20:47,039
to python 3.8 like we'll

00:20:43,840 --> 00:20:48,960
we'll we'll do it um um but but there

00:20:47,039 --> 00:20:50,720
but there's this very significant

00:20:48,960 --> 00:20:52,400
trade-off involved in doing that

00:20:50,720 --> 00:20:53,919
and that is that the more testing and

00:20:52,400 --> 00:20:55,520
integration they're doing the more

00:20:53,919 --> 00:20:57,360
overhead that they have

00:20:55,520 --> 00:20:58,880
means they have less engineering results

00:20:57,360 --> 00:21:00,559
to create the new features

00:20:58,880 --> 00:21:02,240
that the artists want and that their

00:21:00,559 --> 00:21:03,600
customers are asking for

00:21:02,240 --> 00:21:05,440
um so they're really going to listen to

00:21:03,600 --> 00:21:07,280
their customers you know so so

00:21:05,440 --> 00:21:08,480
you know it's it's not it's not yes

00:21:07,280 --> 00:21:10,000
please give us feedback

00:21:08,480 --> 00:21:11,200
but speak to the software vendors if

00:21:10,000 --> 00:21:12,640
you're a customer a paying customer

00:21:11,200 --> 00:21:14,320
software vendor and you want them to

00:21:12,640 --> 00:21:15,600
move to python 3.8 and that's more

00:21:14,320 --> 00:21:18,080
important to you than seeing

00:21:15,600 --> 00:21:18,880
more features in the next version let

00:21:18,080 --> 00:21:22,240
them know

00:21:18,880 --> 00:21:24,240
so so far um uh

00:21:22,240 --> 00:21:25,360
you know that that's the consensus being

00:21:24,240 --> 00:21:25,840
that we talked to so actually do you

00:21:25,360 --> 00:21:27,919
know what

00:21:25,840 --> 00:21:29,679
we're still in this transition uh maybe

00:21:27,919 --> 00:21:31,120
it's better to stay on python37 just

00:21:29,679 --> 00:21:32,400
just for one more year

00:21:31,120 --> 00:21:34,159
um so that's what we're recommending

00:21:32,400 --> 00:21:36,400
stay on time 3.7

00:21:34,159 --> 00:21:38,559
but but let's use that year to work

00:21:36,400 --> 00:21:41,280
towards dynamic python loading

00:21:38,559 --> 00:21:43,200
in the big dcc products so that they can

00:21:41,280 --> 00:21:44,720
more interchangeably switch out

00:21:43,200 --> 00:21:46,480
different python versions without this

00:21:44,720 --> 00:21:48,240
significant overhead and

00:21:46,480 --> 00:21:49,600
all the vendors they want to get to the

00:21:48,240 --> 00:21:50,400
point and here for the people that they

00:21:49,600 --> 00:21:52,240
want to get one where

00:21:50,400 --> 00:21:53,919
where we can stay on the lights with the

00:21:52,240 --> 00:21:54,799
latest python each year so that is

00:21:53,919 --> 00:21:56,720
absolutely the goal

00:21:54,799 --> 00:21:59,679
it's just maybe too quick to do that for

00:21:56,720 --> 00:22:01,120
next year

00:21:59,679 --> 00:22:02,960
and something else we're looking into as

00:22:01,120 --> 00:22:05,360
well is um

00:22:02,960 --> 00:22:07,200
there is some limited uh binary space

00:22:05,360 --> 00:22:09,760
compatibility between

00:22:07,200 --> 00:22:11,039
uh python python 3 versions so we are

00:22:09,760 --> 00:22:12,240
looking into that it's a fairly limited

00:22:11,039 --> 00:22:13,200
api we're not sure if that's going to be

00:22:12,240 --> 00:22:14,400
useful or not but

00:22:13,200 --> 00:22:15,919
that's also something potentially

00:22:14,400 --> 00:22:18,880
another angle into giving some more

00:22:15,919 --> 00:22:21,760
flexibility around by film releases

00:22:18,880 --> 00:22:23,200
so that's quite a bit around python um i

00:22:21,760 --> 00:22:24,640
i've seen a whole bunch of questions pop

00:22:23,200 --> 00:22:26,159
up so we'll get to that in the q a and

00:22:24,640 --> 00:22:28,480
we'll talk more about it

00:22:26,159 --> 00:22:29,840
uh the next one uh an even more fun

00:22:28,480 --> 00:22:31,919
topic qt licensing

00:22:29,840 --> 00:22:33,120
so i will just preface this by saying i

00:22:31,919 --> 00:22:35,760
am not a lawyer

00:22:33,120 --> 00:22:37,600
uh this is not legal advice this is just

00:22:35,760 --> 00:22:38,480
sharing some information for awareness

00:22:37,600 --> 00:22:39,919
in case you weren't

00:22:38,480 --> 00:22:42,080
weren't already aware of some changes in

00:22:39,919 --> 00:22:44,400
qt licensing so

00:22:42,080 --> 00:22:46,000
uh what isn't new is that qt is you know

00:22:44,400 --> 00:22:47,360
sorry i say qt you're not cute it's a

00:22:46,000 --> 00:22:50,400
habit i can't break it

00:22:47,360 --> 00:22:52,640
uh so qt is dual licensed um

00:22:50,400 --> 00:22:53,760
you pay for a commercial license and if

00:22:52,640 --> 00:22:54,159
you don't then you're using the open

00:22:53,760 --> 00:22:56,720
source

00:22:54,159 --> 00:22:57,840
license and that open source license

00:22:56,720 --> 00:23:00,880
changed uh with

00:22:57,840 --> 00:23:03,520
uh qt 5.7 a couple of years ago

00:23:00,880 --> 00:23:04,559
changed from lgpl version 2 to lgpl

00:23:03,520 --> 00:23:06,720
version 3.

00:23:04,559 --> 00:23:08,320
that does have implications for certain

00:23:06,720 --> 00:23:10,400
types of uses of qt

00:23:08,320 --> 00:23:11,360
shouldn't end up really in our industry

00:23:10,400 --> 00:23:12,480
but if you're not sure if you're

00:23:11,360 --> 00:23:13,679
questioning about it

00:23:12,480 --> 00:23:14,880
it's worth checking out particularly if

00:23:13,679 --> 00:23:15,600
you distribute products particularly for

00:23:14,880 --> 00:23:17,360
embedded

00:23:15,600 --> 00:23:18,320
applications so check out they've got a

00:23:17,360 --> 00:23:19,760
great frequently asked questions

00:23:18,320 --> 00:23:21,360
document on their website which explains

00:23:19,760 --> 00:23:22,960
more about the implications of that

00:23:21,360 --> 00:23:24,080
change

00:23:22,960 --> 00:23:26,320
and then there was a there was another

00:23:24,080 --> 00:23:28,640
change in just in january of this year

00:23:26,320 --> 00:23:30,400
um that the qt company announced that

00:23:28,640 --> 00:23:31,760
the long-term support releases

00:23:30,400 --> 00:23:35,120
are only going to be available for

00:23:31,760 --> 00:23:37,760
commercial licensees from qt 5.15

00:23:35,120 --> 00:23:38,320
and the majority of licensees in in our

00:23:37,760 --> 00:23:40,400
industry

00:23:38,320 --> 00:23:42,559
and even with the software vendors tend

00:23:40,400 --> 00:23:43,679
to use the open source license i think

00:23:42,559 --> 00:23:46,480
there are some that use

00:23:43,679 --> 00:23:47,039
commercial licensees most open source

00:23:46,480 --> 00:23:48,640
and

00:23:47,039 --> 00:23:50,799
uh again there's a link there where you

00:23:48,640 --> 00:23:53,520
can you can see more about

00:23:50,799 --> 00:23:54,640
about this change um and this one does

00:23:53,520 --> 00:23:57,840
have implications

00:23:54,640 --> 00:24:00,400
um qt 5.15 was released in may

00:23:57,840 --> 00:24:01,600
um and and they've they've committed to

00:24:00,400 --> 00:24:04,159
keep support

00:24:01,600 --> 00:24:05,520
and point releases for qg515 up until

00:24:04,159 --> 00:24:07,600
the release of qt

00:24:05,520 --> 00:24:09,200
six but qt six is slated for release as

00:24:07,600 --> 00:24:11,679
soon as the end of this year

00:24:09,200 --> 00:24:13,679
um so i think and this is personal

00:24:11,679 --> 00:24:15,039
speculation only on my um

00:24:13,679 --> 00:24:16,840
for me i think probably can expect

00:24:15,039 --> 00:24:20,799
another year of support from

00:24:16,840 --> 00:24:24,720
uh for qut 5.15

00:24:20,799 --> 00:24:27,360
for open source licensees and so this is

00:24:24,720 --> 00:24:28,559
this is an issue for not just for our

00:24:27,360 --> 00:24:31,360
industry it's for all

00:24:28,559 --> 00:24:32,400
open source qt licensees this has been a

00:24:31,360 --> 00:24:34,159
big discussion

00:24:32,400 --> 00:24:35,600
when uh there's we're kind of we're

00:24:34,159 --> 00:24:37,679
keeping in touch with the community

00:24:35,600 --> 00:24:38,720
we're seeing what happens in this space

00:24:37,679 --> 00:24:42,000
um you know

00:24:38,720 --> 00:24:44,159
that the move from qt4 to qt5

00:24:42,000 --> 00:24:45,360
was a tremendous effort for the software

00:24:44,159 --> 00:24:46,880
vendors and if

00:24:45,360 --> 00:24:48,159
that rubs into the yearbook we saw a few

00:24:46,880 --> 00:24:49,360
fewer new features coming out because

00:24:48,159 --> 00:24:50,080
they're putting a lot of engineering eff

00:24:49,360 --> 00:24:51,919
into that

00:24:50,080 --> 00:24:53,200
qt six is likely to be a similar kind of

00:24:51,919 --> 00:24:54,799
transition and

00:24:53,200 --> 00:24:56,640
uh we're not going to rush into that by

00:24:54,799 --> 00:24:57,919
any means and and we've made good use of

00:24:56,640 --> 00:24:59,600
the long-term support releases in the

00:24:57,919 --> 00:25:00,080
past by sticking with a version of qt

00:24:59,600 --> 00:25:03,360
for

00:25:00,080 --> 00:25:04,799
for two to three years so um this this

00:25:03,360 --> 00:25:05,840
is something that we will be watching

00:25:04,799 --> 00:25:07,440
out for it's something we'll be talking

00:25:05,840 --> 00:25:08,640
about over the next year but i just want

00:25:07,440 --> 00:25:10,159
to make sure that everyone's

00:25:08,640 --> 00:25:12,480
gonna make sure everyone's aware of this

00:25:10,159 --> 00:25:15,360
change

00:25:12,480 --> 00:25:16,480
okay so now now the exciting bit uh

00:25:15,360 --> 00:25:19,440
beyond linux so

00:25:16,480 --> 00:25:21,039
um very much folks on linux initially

00:25:19,440 --> 00:25:24,720
lots of lots of requests

00:25:21,039 --> 00:25:25,520
for uh for uh mac os and windows support

00:25:24,720 --> 00:25:27,200
and so

00:25:25,520 --> 00:25:28,559
from next year we will be supporting mac

00:25:27,200 --> 00:25:30,799
os and windows

00:25:28,559 --> 00:25:31,760
um but what does that mean in the in the

00:25:30,799 --> 00:25:33,440
context of

00:25:31,760 --> 00:25:35,039
the vpx reference platform it's really

00:25:33,440 --> 00:25:37,120
about binary

00:25:35,039 --> 00:25:38,080
like how do we how do we can we express

00:25:37,120 --> 00:25:41,279
with a platform

00:25:38,080 --> 00:25:43,120
a kind of a a a platform that's kind of

00:25:41,279 --> 00:25:45,039
offers a higher degree of

00:25:43,120 --> 00:25:46,480
binary compatibility and the way we do

00:25:45,039 --> 00:25:49,600
that for linux is that we have

00:25:46,480 --> 00:25:52,880
gcc we specify gcc and glibc the

00:25:49,600 --> 00:25:55,039
compiler version and the sdk version um

00:25:52,880 --> 00:25:56,400
so is it is it maybe we should do the

00:25:55,039 --> 00:25:58,640
same thing for mac os

00:25:56,400 --> 00:26:00,080
and windows um so we spent the last few

00:25:58,640 --> 00:26:01,279
months doing a bunch of research into

00:26:00,080 --> 00:26:03,039
this and trying to work out what the

00:26:01,279 --> 00:26:05,440
appropriate way of doing things for each

00:26:03,039 --> 00:26:09,600
of those platforms is

00:26:05,440 --> 00:26:12,640
let's talk about mac os first um

00:26:09,600 --> 00:26:13,520
so xcode the the ide on in this

00:26:12,640 --> 00:26:14,960
ecosystem

00:26:13,520 --> 00:26:16,720
uh has something called in that project

00:26:14,960 --> 00:26:18,159
called the deployment target and that

00:26:16,720 --> 00:26:19,279
identifies the kind of the earliest

00:26:18,159 --> 00:26:21,360
operating system

00:26:19,279 --> 00:26:23,520
version on which your software can run

00:26:21,360 --> 00:26:24,799
um so that seems like a good basis on

00:26:23,520 --> 00:26:26,240
which to say okay well

00:26:24,799 --> 00:26:28,720
that's that's a solid foundation it

00:26:26,240 --> 00:26:32,640
gives you an api compatibility

00:26:28,720 --> 00:26:33,679
um and uh it's not just an x code on the

00:26:32,640 --> 00:26:35,760
on the command line

00:26:33,679 --> 00:26:37,440
with clang look at the compiler there's

00:26:35,760 --> 00:26:39,840
a flag there

00:26:37,440 --> 00:26:41,279
and and that really specifies the apis

00:26:39,840 --> 00:26:44,000
that are marked as available

00:26:41,279 --> 00:26:44,880
um uh when built when building and then

00:26:44,000 --> 00:26:47,120
in the linker

00:26:44,880 --> 00:26:48,320
you split this by uh you know that flag

00:26:47,120 --> 00:26:50,000
there and

00:26:48,320 --> 00:26:52,640
um and that really instructs the linker

00:26:50,000 --> 00:26:54,400
to create a key in the info.plist file

00:26:52,640 --> 00:26:56,240
which marks the executable as being able

00:26:54,400 --> 00:26:58,640
to run or not for a given

00:26:56,240 --> 00:27:00,000
os um you can set those things to be

00:26:58,640 --> 00:27:01,360
different you really shouldn't i think

00:27:00,000 --> 00:27:05,360
is the consensus

00:27:01,360 --> 00:27:05,360
it doesn't really make much sense um

00:27:05,520 --> 00:27:09,039
and in in what about the compiler

00:27:07,120 --> 00:27:11,200
version well you know xcode

00:27:09,039 --> 00:27:12,640
can install older or newer sdks so it

00:27:11,200 --> 00:27:15,200
turns out there's really no need for us

00:27:12,640 --> 00:27:17,440
to be able to specify an xcode version

00:27:15,200 --> 00:27:18,880
um the minimum of that if we already

00:27:17,440 --> 00:27:20,240
specified deployment target

00:27:18,880 --> 00:27:22,080
then that's all that already implies

00:27:20,240 --> 00:27:24,799
what versions of xcode are going to

00:27:22,080 --> 00:27:25,760
work or not uh so really it turns out

00:27:24,799 --> 00:27:27,760
and you know

00:27:25,760 --> 00:27:28,880
making it simple but you know macro

00:27:27,760 --> 00:27:30,799
support is as simple as

00:27:28,880 --> 00:27:32,640
us defining what the minimum deployment

00:27:30,799 --> 00:27:34,720
target is uh in

00:27:32,640 --> 00:27:36,320
in xcode or uh on with those command

00:27:34,720 --> 00:27:37,919
line options and we're saying that's

00:27:36,320 --> 00:27:41,120
going to be 10.13

00:27:37,919 --> 00:27:42,799
for uh for cy 2021 and just to be clear

00:27:41,120 --> 00:27:44,320
this is the sdk version this is the set

00:27:42,799 --> 00:27:47,360
of apis this is not the os

00:27:44,320 --> 00:27:48,880
version uh so the minimum os version

00:27:47,360 --> 00:27:51,760
they'll be supported by

00:27:48,880 --> 00:27:52,559
um by the various dcc products that then

00:27:51,760 --> 00:27:54,880
has released it's

00:27:52,559 --> 00:27:55,840
that's really up to them so clearly it

00:27:54,880 --> 00:27:58,320
can't be older than

00:27:55,840 --> 00:28:00,240
10.13 at this point but um but they may

00:27:58,320 --> 00:28:02,000
want to say it's 10 to 14 or 10 to 15

00:28:00,240 --> 00:28:04,000
beautiful whatever reasons that they may

00:28:02,000 --> 00:28:05,919
have internally to want to do that

00:28:04,000 --> 00:28:07,760
so again we're not saying the minimum

00:28:05,919 --> 00:28:09,279
the minimum os is going to be guaranteed

00:28:07,760 --> 00:28:11,760
to be 10.13

00:28:09,279 --> 00:28:14,080
um uh it's really this is really about

00:28:11,760 --> 00:28:17,840
api compatibility

00:28:14,080 --> 00:28:20,640
so that's that's mac os um

00:28:17,840 --> 00:28:21,840
oh and a little footnote on this we're

00:28:20,640 --> 00:28:22,640
in our first year with this so we'll see

00:28:21,840 --> 00:28:24,080
how we go but

00:28:22,640 --> 00:28:25,679
it is still possible for runtime

00:28:24,080 --> 00:28:27,760
behavior to be affected by

00:28:25,679 --> 00:28:29,039
uh by the sdk and os versions and for

00:28:27,760 --> 00:28:29,520
what hardware you're using and that kind

00:28:29,039 --> 00:28:30,799
of thing

00:28:29,520 --> 00:28:32,960
we're not sure how much of an issue this

00:28:30,799 --> 00:28:34,960
is going to be um and

00:28:32,960 --> 00:28:36,080
we'll we'll see how we go basically so

00:28:34,960 --> 00:28:37,840
again it's

00:28:36,080 --> 00:28:39,440
it's it'll be year one for us next year

00:28:37,840 --> 00:28:41,039
we'll learn and we'll we'll adapt to

00:28:39,440 --> 00:28:43,200
the way we specify for mac os if we need

00:28:41,039 --> 00:28:43,200
to

00:28:43,679 --> 00:28:48,320
okay windows um this has also been made

00:28:47,039 --> 00:28:50,640
easier for us in recent years than it

00:28:48,320 --> 00:28:52,799
was in the past when we looked at it so

00:28:50,640 --> 00:28:53,679
api compatibility has been stable since

00:28:52,799 --> 00:28:56,159
visual studio

00:28:53,679 --> 00:28:57,279
2015 uh which which makes things much

00:28:56,159 --> 00:28:58,640
more straightforward

00:28:57,279 --> 00:29:00,399
and it turns out there's three key

00:28:58,640 --> 00:29:01,840
components for vfx reference platform

00:29:00,399 --> 00:29:04,320
support for windows

00:29:01,840 --> 00:29:06,480
um first of all you got the windows sdk

00:29:04,320 --> 00:29:08,559
um and actually v10 has been the latest

00:29:06,480 --> 00:29:10,480
since visual studio 2015.

00:29:08,559 --> 00:29:12,000
if we wanted to go back and guarantee

00:29:10,480 --> 00:29:15,120
support for vista and windows

00:29:12,000 --> 00:29:16,720
7 we could specify uh 8.1

00:29:15,120 --> 00:29:18,640
but it doesn't seem to be any kind of

00:29:16,720 --> 00:29:19,760
desire to want to do that uh so

00:29:18,640 --> 00:29:22,240
we're going to we're going to specify

00:29:19,760 --> 00:29:23,840
v10 as the windows sdk

00:29:22,240 --> 00:29:25,440
um and the next one is essentially the

00:29:23,840 --> 00:29:26,000
compiler version it's the platform tool

00:29:25,440 --> 00:29:29,440
set

00:29:26,000 --> 00:29:30,320
uh you know visual studio uh 2015 2017

00:29:29,440 --> 00:29:33,760
00:29:30,320 --> 00:29:36,880
they all use visual c plus plus 14 um

00:29:33,760 --> 00:29:39,840
and any software built by any uh uh

00:29:36,880 --> 00:29:41,279
any uh c plus 14 compiler is fully

00:29:39,840 --> 00:29:44,080
backwards api compatible

00:29:41,279 --> 00:29:44,799
so so we we we can use we can we can use

00:29:44,080 --> 00:29:47,919
any of those

00:29:44,799 --> 00:29:49,679
uh those platforms but

00:29:47,919 --> 00:29:51,840
uh we also want to specify the c plus

00:29:49,679 --> 00:29:53,120
plus language standard which we already

00:29:51,840 --> 00:29:54,159
have in the platform and we're saying we

00:29:53,120 --> 00:29:57,200
want to make it at c plus

00:29:54,159 --> 00:29:59,279
17 for next year um and actually that's

00:29:57,200 --> 00:30:00,960
not supported by visual studio 2015 it's

00:29:59,279 --> 00:30:04,159
mostly supported

00:30:00,960 --> 00:30:06,960
from visual studio 2017

00:30:04,159 --> 00:30:07,440
so that's what the windows support looks

00:30:06,960 --> 00:30:09,760
like

00:30:07,440 --> 00:30:11,600
we'll if we add with the windows sdk of

00:30:09,760 --> 00:30:13,120
version 10 and the platform toolset of

00:30:11,600 --> 00:30:16,799
visual studio 2017

00:30:13,120 --> 00:30:18,720
that gives us the uh the windows support

00:30:16,799 --> 00:30:20,640
and uh what does this all look like we

00:30:18,720 --> 00:30:24,000
gotta we bring it all together

00:30:20,640 --> 00:30:26,240
um the platform for next year um we've

00:30:24,000 --> 00:30:27,039
split out the uh the linux components so

00:30:26,240 --> 00:30:29,039
we have

00:30:27,039 --> 00:30:30,640
a section for linux section for mac os

00:30:29,039 --> 00:30:32,320
section for windows and then

00:30:30,640 --> 00:30:34,960
the common components that apply to

00:30:32,320 --> 00:30:37,039
every operating system

00:30:34,960 --> 00:30:38,000
this will be reflected on the website

00:30:37,039 --> 00:30:41,039
just as soon as i

00:30:38,000 --> 00:30:41,360
uh i hit sync after this so probably

00:30:41,039 --> 00:30:44,080
from

00:30:41,360 --> 00:30:44,399
just after midday uh pacific time anyway

00:30:44,080 --> 00:30:47,520
the

00:30:44,399 --> 00:30:48,960
um the vfx platform.com uh website will

00:30:47,520 --> 00:30:50,399
be updated with all of this

00:30:48,960 --> 00:30:52,480
there's also a footnote there explaining

00:30:50,399 --> 00:30:56,640
a little bit more about um

00:30:52,480 --> 00:30:56,640
the mac os aspect of it as well so

00:30:57,200 --> 00:31:02,399
yeah check that out um

00:31:00,320 --> 00:31:04,240
moving on from that um the academy

00:31:02,399 --> 00:31:06,559
software foundation docker project

00:31:04,240 --> 00:31:08,159
this was i think uh referred to this it

00:31:06,559 --> 00:31:10,080
was talked about more extensively the

00:31:08,159 --> 00:31:11,120
the ci working group uh talk yesterday

00:31:10,080 --> 00:31:12,480
so check that out if you're interested

00:31:11,120 --> 00:31:13,679
to know more about it

00:31:12,480 --> 00:31:15,279
but uh i just wanna call this out

00:31:13,679 --> 00:31:16,960
because it's a fantastic resource it

00:31:15,279 --> 00:31:19,279
offers automated builds of

00:31:16,960 --> 00:31:20,880
all of recent vfx reference platforms in

00:31:19,279 --> 00:31:23,679
really easy to consume

00:31:20,880 --> 00:31:25,559
uh docker images all the the at least

00:31:23,679 --> 00:31:28,640
for linux at the cy21

00:31:25,559 --> 00:31:30,960
cy2021 components are all available now

00:31:28,640 --> 00:31:32,320
for you to build against um and uh

00:31:30,960 --> 00:31:33,120
definitely the plan is for them to be

00:31:32,320 --> 00:31:34,880
able to offer

00:31:33,120 --> 00:31:36,480
um mac os and windows builds in future

00:31:34,880 --> 00:31:38,159
as well that we're standing up all the

00:31:36,480 --> 00:31:40,559
infrastructure to do that so

00:31:38,159 --> 00:31:41,600
um that's great i mean what that's meant

00:31:40,559 --> 00:31:42,960
for us uh

00:31:41,600 --> 00:31:44,720
from the platform perspective is much

00:31:42,960 --> 00:31:46,320
faster validation when we first

00:31:44,720 --> 00:31:50,000
published the draft of

00:31:46,320 --> 00:31:51,360
in may for 2021 uh eloise who's who's

00:31:50,000 --> 00:31:52,720
doing the bulk of the work and i'm just

00:31:51,360 --> 00:31:53,360
a huge thank you to alloys for his work

00:31:52,720 --> 00:31:55,120
on this

00:31:53,360 --> 00:31:57,200
project it's it's it's a huge

00:31:55,120 --> 00:31:58,720
contribution he's made to the community

00:31:57,200 --> 00:32:00,799
um i just want to recognize all his

00:31:58,720 --> 00:32:03,279
efforts um but so

00:32:00,799 --> 00:32:04,159
so he took the the 2021 components put

00:32:03,279 --> 00:32:05,919
them in system

00:32:04,159 --> 00:32:07,679
did some automated builds came up with

00:32:05,919 --> 00:32:09,039
some issues and with some bugs and that

00:32:07,679 --> 00:32:09,440
helped us tweak the platform and have

00:32:09,039 --> 00:32:11,120
really

00:32:09,440 --> 00:32:12,159
valuable feedback and it would have been

00:32:11,120 --> 00:32:12,640
the kind of thing that maybe we wouldn't

00:32:12,159 --> 00:32:15,200
have caught

00:32:12,640 --> 00:32:16,480
until you know you know september

00:32:15,200 --> 00:32:18,240
october of of

00:32:16,480 --> 00:32:20,080
previous years so that's been hugely

00:32:18,240 --> 00:32:22,880
useful it's also useful as a

00:32:20,080 --> 00:32:23,919
as a source of kind of reference builds

00:32:22,880 --> 00:32:25,440
um

00:32:23,919 --> 00:32:27,519
uh so if you wanna know what compiler

00:32:25,440 --> 00:32:28,720
flags to use uh that kind of thing then

00:32:27,519 --> 00:32:30,960
again check out the

00:32:28,720 --> 00:32:32,080
uh the docker project we want that to be

00:32:30,960 --> 00:32:33,840
the kind of canonical

00:32:32,080 --> 00:32:37,360
reference for how to build these

00:32:33,840 --> 00:32:37,360
components in a sensible way

00:32:37,519 --> 00:32:41,120
okay so that's what's what's new a

00:32:39,919 --> 00:32:44,480
little bit about

00:32:41,120 --> 00:32:47,039
what's next um uh the first thing is

00:32:44,480 --> 00:32:48,159
kind of operating system trends um

00:32:47,039 --> 00:32:49,039
you know just something we're seeing

00:32:48,159 --> 00:32:50,240
obviously it's great now we're

00:32:49,039 --> 00:32:52,799
supporting uh the

00:32:50,240 --> 00:32:54,720
three major operating systems um what

00:32:52,799 --> 00:32:56,159
we're also seeing is the the lines are

00:32:54,720 --> 00:32:58,159
starting to blur between the operating

00:32:56,159 --> 00:32:59,919
systems between containerization

00:32:58,159 --> 00:33:01,120
and uh you know window system for linux

00:32:59,919 --> 00:33:01,919
as well which is which is significant

00:33:01,120 --> 00:33:03,120
development and

00:33:01,919 --> 00:33:06,159
and potentially you know support there

00:33:03,120 --> 00:33:07,039
for cuda and and other things

00:33:06,159 --> 00:33:08,320
there's some really interesting

00:33:07,039 --> 00:33:09,440
opportunities there and how we can

00:33:08,320 --> 00:33:11,200
potentially blend

00:33:09,440 --> 00:33:12,559
some of these different os capabilities

00:33:11,200 --> 00:33:13,600
together um

00:33:12,559 --> 00:33:15,279
so that's that's something we're keeping

00:33:13,600 --> 00:33:16,000
an eye on and seeing what that means but

00:33:15,279 --> 00:33:18,960
you know that

00:33:16,000 --> 00:33:20,640
that's exciting um the other thing is it

00:33:18,960 --> 00:33:22,159
just is it's just something it's not

00:33:20,640 --> 00:33:24,080
nothing uh urgent but something to keep

00:33:22,159 --> 00:33:26,799
an eye on from for the further future

00:33:24,080 --> 00:33:28,240
is linux specifically um you know all

00:33:26,799 --> 00:33:29,519
these complex dccs

00:33:28,240 --> 00:33:31,519
these digital content creation tools

00:33:29,519 --> 00:33:34,159
that we have that rely on you know uh

00:33:31,519 --> 00:33:34,960
very complex um display mechanics and

00:33:34,159 --> 00:33:37,519
accelerated

00:33:34,960 --> 00:33:38,000
uh graphics they're very reliant on

00:33:37,519 --> 00:33:41,039
opengl

00:33:38,000 --> 00:33:41,360
and x11 both opengl and nx11 are being

00:33:41,039 --> 00:33:44,080
uh

00:33:41,360 --> 00:33:44,880
being or so the x11 is being deprecated

00:33:44,080 --> 00:33:46,640
and

00:33:44,880 --> 00:33:48,880
uh and the industry is really going to

00:33:46,640 --> 00:33:52,080
need to get to to come together

00:33:48,880 --> 00:33:53,840
to work out um you know how how

00:33:52,080 --> 00:33:55,200
how do we continue to have a healthy eco

00:33:53,840 --> 00:33:58,159
linux ecosystem

00:33:55,200 --> 00:33:59,440
uh for uh for these really complex uh

00:33:58,159 --> 00:34:01,679
desktop applications

00:33:59,440 --> 00:34:02,720
um that these high-end graphics so

00:34:01,679 --> 00:34:04,000
that's just something to think

00:34:02,720 --> 00:34:05,519
that for us to think about and talk

00:34:04,000 --> 00:34:06,559
about uh over the over the next few

00:34:05,519 --> 00:34:09,359
years

00:34:06,559 --> 00:34:11,440
um qt6 is going to be a big one i could

00:34:09,359 --> 00:34:13,599
talk about like i said before you know

00:34:11,440 --> 00:34:14,639
there's now shorter support for the open

00:34:13,599 --> 00:34:16,720
source licensees

00:34:14,639 --> 00:34:17,839
qt6 is likely to be a big upgrade with

00:34:16,720 --> 00:34:19,119
significant effort and

00:34:17,839 --> 00:34:20,720
what's going to be the timing around

00:34:19,119 --> 00:34:21,599
that so that's something to keep an eye

00:34:20,720 --> 00:34:23,280
on

00:34:21,599 --> 00:34:24,960
and then something else was mentioned in

00:34:23,280 --> 00:34:27,119
the ci working group yesterday

00:34:24,960 --> 00:34:28,879
um you know cross-platform portal

00:34:27,119 --> 00:34:30,320
portable package definitions

00:34:28,879 --> 00:34:32,079
uh is something that we that we don't

00:34:30,320 --> 00:34:33,599
have any kind of standards for right now

00:34:32,079 --> 00:34:35,359
and it's something that we're definitely

00:34:33,599 --> 00:34:36,320
uh it's definitely sorely needed because

00:34:35,359 --> 00:34:37,359
it's it's like it's going to be

00:34:36,320 --> 00:34:39,040
something that's creating a big

00:34:37,359 --> 00:34:41,280
administrative overhead so some of the

00:34:39,040 --> 00:34:42,800
contenders there res conda conan

00:34:41,280 --> 00:34:44,320
uh you know res is great for studios

00:34:42,800 --> 00:34:46,240
some studios using it already

00:34:44,320 --> 00:34:47,359
uh conan's being used and a fan tree

00:34:46,240 --> 00:34:49,280
talked a little bit about that in their

00:34:47,359 --> 00:34:50,240
talk um they've been making great use of

00:34:49,280 --> 00:34:52,000
conan so

00:34:50,240 --> 00:34:53,280
um you know the great thing is you know

00:34:52,000 --> 00:34:55,200
the the software vendors

00:34:53,280 --> 00:34:57,359
are are talking with each other

00:34:55,200 --> 00:34:58,640
facilitated through the vfx reference

00:34:57,359 --> 00:35:01,280
platform working group

00:34:58,640 --> 00:35:02,880
through the uh the the the chemistry

00:35:01,280 --> 00:35:05,119
foundation ci working group

00:35:02,880 --> 00:35:07,760
so we really have this good ecosystem of

00:35:05,119 --> 00:35:10,480
like coordination and facilitation of

00:35:07,760 --> 00:35:12,079
how to how do we come you know how do we

00:35:10,480 --> 00:35:12,880
harmonize and standardize on some of

00:35:12,079 --> 00:35:16,560
these things so

00:35:12,880 --> 00:35:18,640
i'm optimistic about about that one

00:35:16,560 --> 00:35:20,560
i think and i think that's that's that's

00:35:18,640 --> 00:35:22,000
kind of bringing us to our conclusion so

00:35:20,560 --> 00:35:23,359
it's really over to you at this point

00:35:22,000 --> 00:35:25,040
again we're a community driven

00:35:23,359 --> 00:35:26,160
initiative we really rely on you on

00:35:25,040 --> 00:35:28,000
feedback from you

00:35:26,160 --> 00:35:30,160
so please reach out to us please you

00:35:28,000 --> 00:35:31,760
know share with us kind of uh you know

00:35:30,160 --> 00:35:33,359
what your needs are what your challenges

00:35:31,760 --> 00:35:34,079
are how can the vfx reference platform

00:35:33,359 --> 00:35:35,920
help

00:35:34,079 --> 00:35:38,079
uh you know in the context of you know

00:35:35,920 --> 00:35:40,960
us really tackling virginitis as

00:35:38,079 --> 00:35:42,560
as the issue um let the software vendors

00:35:40,960 --> 00:35:45,040
know what is important to you and

00:35:42,560 --> 00:35:46,160
you know often yes studios will tell

00:35:45,040 --> 00:35:46,880
them about what features they want and

00:35:46,160 --> 00:35:48,480
that kind of thing

00:35:46,880 --> 00:35:50,079
but make sure they they know what the

00:35:48,480 --> 00:35:51,440
issues from a platform perspective

00:35:50,079 --> 00:35:53,119
what are the challenges for software

00:35:51,440 --> 00:35:53,920
integration what do you want from them

00:35:53,119 --> 00:35:56,640
from

00:35:53,920 --> 00:35:58,000
python versions or whatever it may be so

00:35:56,640 --> 00:35:59,520
uh don't hold back in in

00:35:58,000 --> 00:36:01,599
sharing that with them you know they can

00:35:59,520 --> 00:36:03,760
only respond to what they're hearing

00:36:01,599 --> 00:36:05,119
um just as a general note you know

00:36:03,760 --> 00:36:06,400
please get involved with open source

00:36:05,119 --> 00:36:08,880
projects contribute

00:36:06,400 --> 00:36:09,599
to those that you care about um you know

00:36:08,880 --> 00:36:11,359
again you know

00:36:09,599 --> 00:36:13,040
the platform's only as healthy as the as

00:36:11,359 --> 00:36:16,160
the components that are

00:36:13,040 --> 00:36:18,320
uh that it represents uh and uh

00:36:16,160 --> 00:36:20,079
and and and by the way you know the uh

00:36:18,320 --> 00:36:21,520
our ideal is is that the components get

00:36:20,079 --> 00:36:22,640
healthy enough that they can fall out of

00:36:21,520 --> 00:36:24,000
the platform

00:36:22,640 --> 00:36:26,160
at some point you know there's there are

00:36:24,000 --> 00:36:27,599
plenty of great open source packages

00:36:26,160 --> 00:36:29,359
and components that are essential to our

00:36:27,599 --> 00:36:30,880
industry uh that are not in

00:36:29,359 --> 00:36:32,240
the visual reference platform because

00:36:30,880 --> 00:36:33,839
they're incredibly well behaved and

00:36:32,240 --> 00:36:36,640
don't cause any version issues

00:36:33,839 --> 00:36:38,160
so um you know that's another note just

00:36:36,640 --> 00:36:40,400
to point out

00:36:38,160 --> 00:36:42,560
and then finally like if you care about

00:36:40,400 --> 00:36:44,960
a healthy sustainable linux ecosystem

00:36:42,560 --> 00:36:46,720
then advocate for that and support the

00:36:44,960 --> 00:36:47,839
linux distribution providers and make

00:36:46,720 --> 00:36:50,320
sure that they know

00:36:47,839 --> 00:36:51,200
what your needs are and make sure that

00:36:50,320 --> 00:36:53,200
the

00:36:51,200 --> 00:36:54,720
the software vendors know that you care

00:36:53,200 --> 00:36:57,119
about linux as a

00:36:54,720 --> 00:36:58,640
important platform um you know which

00:36:57,119 --> 00:36:59,839
which you know which we've been using as

00:36:58,640 --> 00:37:01,440
our primary platform for

00:36:59,839 --> 00:37:03,119
for 20 years now because it offers such

00:37:01,440 --> 00:37:03,680
a fantastic development environment and

00:37:03,119 --> 00:37:05,440
such a

00:37:03,680 --> 00:37:06,640
great environment for connecting these

00:37:05,440 --> 00:37:08,160
these kind of disparate applications

00:37:06,640 --> 00:37:09,599
together into this kind of seamless art

00:37:08,160 --> 00:37:11,680
artist pipelines and collaboration

00:37:09,599 --> 00:37:12,880
pipelines

00:37:11,680 --> 00:37:14,960
so that's it i just have to say thank

00:37:12,880 --> 00:37:17,200
you to a few people so

00:37:14,960 --> 00:37:18,560
uh autodesk foundry side effects

00:37:17,200 --> 00:37:21,280
software who've really been our partners

00:37:18,560 --> 00:37:22,800
in the vfx reference platform

00:37:21,280 --> 00:37:24,240
uh the academy software foundation for

00:37:22,800 --> 00:37:25,760
the great work they're doing the vs for

00:37:24,240 --> 00:37:27,040
sponsoring us and the tech committee has

00:37:25,760 --> 00:37:28,160
done a great job of spinning out this

00:37:27,040 --> 00:37:29,839
initiative

00:37:28,160 --> 00:37:31,680
rob ray and david who were really

00:37:29,839 --> 00:37:32,560
instrumental in the creation of the vfx

00:37:31,680 --> 00:37:34,400
reference platform

00:37:32,560 --> 00:37:35,839
and i won't read everyone's name on in

00:37:34,400 --> 00:37:36,640
the middle there but you know these are

00:37:35,839 --> 00:37:38,160
particularly

00:37:36,640 --> 00:37:39,839
these these are contributors who've made

00:37:38,160 --> 00:37:41,280
a particular contribution over the over

00:37:39,839 --> 00:37:42,000
the last year or support from in the

00:37:41,280 --> 00:37:44,240
last year

00:37:42,000 --> 00:37:45,920
and particularly with um some of the uh

00:37:44,240 --> 00:37:46,480
the support of windows and mac os as

00:37:45,920 --> 00:37:48,240
well

00:37:46,480 --> 00:37:49,599
and reached thank you to all members of

00:37:48,240 --> 00:37:50,880
our community you know

00:37:49,599 --> 00:37:52,560
it represents the vfx platform

00:37:50,880 --> 00:37:54,240
discussion and by the way that can be

00:37:52,560 --> 00:37:55,839
anyone so please sign up

00:37:54,240 --> 00:37:57,599
to that google group but there's a link

00:37:55,839 --> 00:37:59,760
coming up for that in

00:37:57,599 --> 00:38:01,839
in a moment in fact probably right now

00:37:59,760 --> 00:38:02,240
um and that really brings us to the end

00:38:01,839 --> 00:38:04,480
so

00:38:02,240 --> 00:38:06,320
uh just throw it open to questions i

00:38:04,480 --> 00:38:07,280
know we've got a whole bunch in the q a

00:38:06,320 --> 00:38:08,560
section there which i haven't had a

00:38:07,280 --> 00:38:10,000
chance to look at because i've been i've

00:38:08,560 --> 00:38:11,599
been busy uh

00:38:10,000 --> 00:38:13,119
talking so maybe i'll hand over to

00:38:11,599 --> 00:38:14,160
francois and he can start tackling some

00:38:13,119 --> 00:38:18,000
of those and and

00:38:14,160 --> 00:38:19,680
i'll take a look at them too

00:38:18,000 --> 00:38:21,920
sure and and thank you thank you very

00:38:19,680 --> 00:38:23,359
much for all of that um

00:38:21,920 --> 00:38:25,680
there's a couple questions actually that

00:38:23,359 --> 00:38:27,280
might be that tie into a general concept

00:38:25,680 --> 00:38:28,640
around the vfx reference platform that

00:38:27,280 --> 00:38:30,400
might be worth clarifying that

00:38:28,640 --> 00:38:33,359
that a lot of the motivation for the

00:38:30,400 --> 00:38:35,200
platform is to help specify to

00:38:33,359 --> 00:38:36,880
software vendors and in particular

00:38:35,200 --> 00:38:39,119
commercial software vendors

00:38:36,880 --> 00:38:40,960
at least initially what is the common

00:38:39,119 --> 00:38:43,040
target because that is the one that we

00:38:40,960 --> 00:38:44,800
least control as a community and as a as

00:38:43,040 --> 00:38:46,000
an industry compared to say open source

00:38:44,800 --> 00:38:46,960
packages that have come out of our

00:38:46,000 --> 00:38:49,920
industry

00:38:46,960 --> 00:38:51,920
and it's really for the vendors to agree

00:38:49,920 --> 00:38:54,640
on a set of versions to target

00:38:51,920 --> 00:38:56,400
and less on mandates for everybody

00:38:54,640 --> 00:38:58,400
consuming we're not telling studios how

00:38:56,400 --> 00:38:59,920
to run their own internal

00:38:58,400 --> 00:39:01,599
facilities and which versions they

00:38:59,920 --> 00:39:03,920
should use we're only telling

00:39:01,599 --> 00:39:05,520
vendors to minimize the matrix of

00:39:03,920 --> 00:39:06,240
possible versions that we have to deal

00:39:05,520 --> 00:39:09,359
with

00:39:06,240 --> 00:39:10,079
uh as as clients essentially uh so that

00:39:09,359 --> 00:39:11,920
then you can

00:39:10,079 --> 00:39:13,280
choose within your studios what what to

00:39:11,920 --> 00:39:16,400
use or not and

00:39:13,280 --> 00:39:18,480
the the list of libraries or components

00:39:16,400 --> 00:39:21,119
that are in the vfx reference platform

00:39:18,480 --> 00:39:22,400
are uh are the ones that are problematic

00:39:21,119 --> 00:39:23,280
if there isn't a problem with something

00:39:22,400 --> 00:39:26,079
there's no point in

00:39:23,280 --> 00:39:27,760
in specifying it uh or if there isn't

00:39:26,079 --> 00:39:29,680
necessarily a clean resolution something

00:39:27,760 --> 00:39:31,359
that's continuously evolving

00:39:29,680 --> 00:39:32,960
uh usd is a good question of something

00:39:31,359 --> 00:39:34,160
that's come up recently as a

00:39:32,960 --> 00:39:36,160
when do we set the version and the

00:39:34,160 --> 00:39:37,200
reality is it's been shifting so much

00:39:36,160 --> 00:39:38,960
recently that

00:39:37,200 --> 00:39:40,720
there isn't a lot of value in the short

00:39:38,960 --> 00:39:43,920
term but there will be at some point

00:39:40,720 --> 00:39:46,160
uh and we've done that but the

00:39:43,920 --> 00:39:48,400
uh certain questions around for instance

00:39:46,160 --> 00:39:50,960
uh mandating cmake

00:39:48,400 --> 00:39:52,880
uh there's no point in telling you know

00:39:50,960 --> 00:39:53,920
an isotropics or an autodesk you should

00:39:52,880 --> 00:39:55,359
use cmake

00:39:53,920 --> 00:39:57,280
uh which is essentially a lot of what

00:39:55,359 --> 00:39:57,920
the goals of the the reference platform

00:39:57,280 --> 00:40:01,040
are

00:39:57,920 --> 00:40:03,200
and uh some of the common guidelines for

00:40:01,040 --> 00:40:05,280
open source software for our industry

00:40:03,200 --> 00:40:06,480
like standardizing on cmake that's an

00:40:05,280 --> 00:40:07,680
area where the academy software

00:40:06,480 --> 00:40:10,480
foundation can play

00:40:07,680 --> 00:40:12,240
a really large role in promoting more of

00:40:10,480 --> 00:40:13,839
a standard around how we build things

00:40:12,240 --> 00:40:14,960
and that's that's where questions around

00:40:13,839 --> 00:40:16,800
like res and

00:40:14,960 --> 00:40:18,240
conda and conan and others come in as

00:40:16,800 --> 00:40:19,920
well um

00:40:18,240 --> 00:40:21,440
so that that goes a little bit i think

00:40:19,920 --> 00:40:23,280
the the question around cmake and then

00:40:21,440 --> 00:40:24,240
the other one which was around opengl is

00:40:23,280 --> 00:40:27,520
versus vulgar

00:40:24,240 --> 00:40:29,359
vulcan is is an example where it's a

00:40:27,520 --> 00:40:30,480
challenge to deal with but mandating a

00:40:29,359 --> 00:40:32,400
single version

00:40:30,480 --> 00:40:34,880
is not necessarily going to to solve the

00:40:32,400 --> 00:40:36,480
challenge as it is and in the past

00:40:34,880 --> 00:40:37,680
that that hasn't been a problem there

00:40:36,480 --> 00:40:39,280
hasn't been a vendor that's used a

00:40:37,680 --> 00:40:41,280
different version of opengl

00:40:39,280 --> 00:40:42,720
that suddenly prevents us from compiling

00:40:41,280 --> 00:40:44,000
kind of standard libraries

00:40:42,720 --> 00:40:45,839
there there's individual issues of

00:40:44,000 --> 00:40:48,079
course that come up but not at

00:40:45,839 --> 00:40:48,960
the scale where it bubbles up to being

00:40:48,079 --> 00:40:52,079
uh

00:40:48,960 --> 00:40:55,040
like an active member of the list uh

00:40:52,079 --> 00:40:56,000
i would say great thanks once while i

00:40:55,040 --> 00:40:57,359
i'll tackle

00:40:56,000 --> 00:40:59,359
just some of some of the questions i can

00:40:57,359 --> 00:41:01,280
answer pretty quickly um how does one

00:40:59,359 --> 00:41:03,359
join the python 3 working group

00:41:01,280 --> 00:41:04,319
so currently the python 3 working group

00:41:03,359 --> 00:41:07,200
has

00:41:04,319 --> 00:41:08,880
has two representatives from each of uh

00:41:07,200 --> 00:41:09,359
the vs tech committee so that's francois

00:41:08,880 --> 00:41:11,680
and i

00:41:09,359 --> 00:41:12,400
uh two from autodesk two from side

00:41:11,680 --> 00:41:15,440
effects

00:41:12,400 --> 00:41:16,800
and uh two from foundry um and we and we

00:41:15,440 --> 00:41:18,240
kept it at that intentionally for the

00:41:16,800 --> 00:41:20,640
first few years just just to

00:41:18,240 --> 00:41:22,079
drink but i just make sure we have some

00:41:20,640 --> 00:41:23,280
stability and a common understanding and

00:41:22,079 --> 00:41:25,040
i think that group's really working

00:41:23,280 --> 00:41:26,960
really well now and so we'd absolutely

00:41:25,040 --> 00:41:28,319
so we would i think consider opening

00:41:26,960 --> 00:41:29,839
that up uh a little

00:41:28,319 --> 00:41:31,440
not not to make poke but potentially

00:41:29,839 --> 00:41:33,040
adding representatives from uh if you

00:41:31,440 --> 00:41:36,960
represent a software vendor

00:41:33,040 --> 00:41:40,720
um then uh then then absolutely you know

00:41:36,960 --> 00:41:43,280
you contact us feedback vfxplatform.com

00:41:40,720 --> 00:41:44,560
and and and you know and we can we can

00:41:43,280 --> 00:41:47,440
have a discussion around around

00:41:44,560 --> 00:41:48,640
uh around potential inclusion um and

00:41:47,440 --> 00:41:49,839
also maybe in the future there's

00:41:48,640 --> 00:41:53,359
potential to add

00:41:49,839 --> 00:41:54,880
um uh uh

00:41:53,359 --> 00:41:56,400
there's the potential to add some

00:41:54,880 --> 00:41:58,240
representatives of the uh open source

00:41:56,400 --> 00:42:01,280
community as well

00:41:58,240 --> 00:42:02,319
um so you know and or or the other the

00:42:01,280 --> 00:42:04,240
other

00:42:02,319 --> 00:42:05,599
sort of uh stakeholders who aren't

00:42:04,240 --> 00:42:07,200
really represented are

00:42:05,599 --> 00:42:08,640
uh maintainers of some of the bigger

00:42:07,200 --> 00:42:10,400
open source projects as well

00:42:08,640 --> 00:42:12,560
so but we we don't want to make this

00:42:10,400 --> 00:42:14,640
make this too big the the working group

00:42:12,560 --> 00:42:16,079
keeping the working groups uh relatively

00:42:14,640 --> 00:42:17,440
small and contains important because

00:42:16,079 --> 00:42:19,200
we develop a trust where each of the

00:42:17,440 --> 00:42:20,160
vendors who really you know some some of

00:42:19,200 --> 00:42:21,920
them some of this

00:42:20,160 --> 00:42:23,680
competitive nature between them they

00:42:21,920 --> 00:42:26,000
actually got to point where they

00:42:23,680 --> 00:42:27,359
they're quite open and sharing it really

00:42:26,000 --> 00:42:27,680
helps them all out and helps us all out

00:42:27,359 --> 00:42:29,040
so

00:42:27,680 --> 00:42:30,720
we want to make it so big that they feel

00:42:29,040 --> 00:42:32,319
like they can't share openly

00:42:30,720 --> 00:42:33,440
that's one of the considerations one of

00:42:32,319 --> 00:42:35,040
the other questions two of the other

00:42:33,440 --> 00:42:37,520
questions are around

00:42:35,040 --> 00:42:38,480
the providing of rpms from the automated

00:42:37,520 --> 00:42:40,240
build system

00:42:38,480 --> 00:42:41,359
um i think it'd be great to do that

00:42:40,240 --> 00:42:42,400
that's not something for the vx

00:42:41,359 --> 00:42:44,319
reference platform that's really

00:42:42,400 --> 00:42:46,400
something to take to the uh to the ci

00:42:44,319 --> 00:42:48,319
the the academy software foundation's

00:42:46,400 --> 00:42:50,480
ci working group it's them who are

00:42:48,319 --> 00:42:53,200
building uh that um

00:42:50,480 --> 00:42:54,560
uh that build infrastructure and to have

00:42:53,200 --> 00:42:55,920
the potential the ability to be able to

00:42:54,560 --> 00:42:58,319
do that so definitely definitely

00:42:55,920 --> 00:43:00,000
suggest taking that to them and a key

00:42:58,319 --> 00:43:01,200
challenge there is also in maintaining

00:43:00,000 --> 00:43:01,839
flexibility and how you might want to

00:43:01,200 --> 00:43:04,800
use those

00:43:01,839 --> 00:43:05,599
those build artifacts where rpms is

00:43:04,800 --> 00:43:08,160
probably not

00:43:05,599 --> 00:43:09,520
the the most flexible approach to for

00:43:08,160 --> 00:43:10,400
for a lot of facilities that actually do

00:43:09,520 --> 00:43:12,319
have to install

00:43:10,400 --> 00:43:13,760
multiple versions in parallel link

00:43:12,319 --> 00:43:16,000
against them in parallel and probably

00:43:13,760 --> 00:43:17,839
dynamically set a runtime environment

00:43:16,000 --> 00:43:19,359
that has to use a certain combination

00:43:17,839 --> 00:43:20,560
based on on their preference and that's

00:43:19,359 --> 00:43:23,760
where it bleeds into

00:43:20,560 --> 00:43:25,200
things like res and and other packages

00:43:23,760 --> 00:43:26,319
and that's that's been an ongoing topic

00:43:25,200 --> 00:43:28,640
of discussion of how

00:43:26,319 --> 00:43:29,440
do we how much of an active role does

00:43:28,640 --> 00:43:32,240
the vfx

00:43:29,440 --> 00:43:33,200
reference platform play in specifying or

00:43:32,240 --> 00:43:35,680
mandating

00:43:33,200 --> 00:43:37,359
a means in how to use those binary

00:43:35,680 --> 00:43:39,280
artifacts that might be provided

00:43:37,359 --> 00:43:40,560
uh and it's it's a complex one that

00:43:39,280 --> 00:43:41,839
there isn't a lot of common alignment

00:43:40,560 --> 00:43:42,480
but it's another area where again the

00:43:41,839 --> 00:43:44,880
software

00:43:42,480 --> 00:43:46,240
foundation can play a major role given

00:43:44,880 --> 00:43:48,240
that the ci group is uh

00:43:46,240 --> 00:43:50,000
is tackling this head-on and there's a

00:43:48,240 --> 00:43:51,359
somewhat related just because of the rpm

00:43:50,000 --> 00:43:55,119
aspect question around

00:43:51,359 --> 00:43:56,240
coordination with um the uh the distros

00:43:55,119 --> 00:43:58,720
and

00:43:56,240 --> 00:43:59,680
we've often done especially these these

00:43:58,720 --> 00:44:01,839
kinds of groups

00:43:59,680 --> 00:44:03,599
uh every year a survey around who's

00:44:01,839 --> 00:44:05,520
using what distro

00:44:03,599 --> 00:44:07,680
overwhelmingly they they have been red

00:44:05,520 --> 00:44:10,560
hat based or variant

00:44:07,680 --> 00:44:11,760
like centos or fedora and so that's

00:44:10,560 --> 00:44:13,119
essentially been the default and in

00:44:11,760 --> 00:44:14,720
terms of coordination

00:44:13,119 --> 00:44:16,160
there hasn't been a lot of effort in

00:44:14,720 --> 00:44:18,000
active coordination for

00:44:16,160 --> 00:44:19,680
upstream seeding of versions that we

00:44:18,000 --> 00:44:21,040
care about where the biggest

00:44:19,680 --> 00:44:22,480
coordination comes in is making sure

00:44:21,040 --> 00:44:24,640
that the choices we make

00:44:22,480 --> 00:44:26,720
will be easy to deploy or use or

00:44:24,640 --> 00:44:27,920
implement based on what a general

00:44:26,720 --> 00:44:29,839
current version is

00:44:27,920 --> 00:44:32,560
in the industry and so looking at for

00:44:29,839 --> 00:44:35,280
instance the dts compatibility

00:44:32,560 --> 00:44:37,680
with red hat or centos versions and will

00:44:35,280 --> 00:44:39,760
you even be able to use gcc six

00:44:37,680 --> 00:44:41,440
on the common platform in the industry

00:44:39,760 --> 00:44:43,760
and that that's the area where we've

00:44:41,440 --> 00:44:45,680
um fostered a lot more kind of

00:44:43,760 --> 00:44:48,720
conversation and iteration

00:44:45,680 --> 00:44:50,880
uh we we haven't to this point actively

00:44:48,720 --> 00:44:52,640
pushed on the the distros themselves

00:44:50,880 --> 00:44:54,560
some of that is also a timing issue that

00:44:52,640 --> 00:44:58,079
at the time when distros

00:44:54,560 --> 00:44:59,920
make choices uh we tend to lag

00:44:58,079 --> 00:45:01,280
uh like a year plus behind those where

00:44:59,920 --> 00:45:03,200
we make a decision

00:45:01,280 --> 00:45:04,880
software vendors have to implement them

00:45:03,200 --> 00:45:06,160
then we start deploying it in production

00:45:04,880 --> 00:45:08,880
which often takes its own

00:45:06,160 --> 00:45:10,319
time sometimes up to year uh and and now

00:45:08,880 --> 00:45:11,760
you're a couple years down the road from

00:45:10,319 --> 00:45:13,200
when some of those decisions would have

00:45:11,760 --> 00:45:16,560
been made at the district level

00:45:13,200 --> 00:45:16,560
which makes that challenging

00:45:16,720 --> 00:45:20,480
right another working question sorry

00:45:18,960 --> 00:45:22,480
that i think maybe misunderstood how do

00:45:20,480 --> 00:45:24,400
you join the python three working group

00:45:22,480 --> 00:45:26,319
um there's definitely a slack channel in

00:45:24,400 --> 00:45:29,760
the uh aswf uh

00:45:26,319 --> 00:45:30,880
um uh slack workspace so you can you can

00:45:29,760 --> 00:45:32,880
certainly join that to get to get some

00:45:30,880 --> 00:45:34,000
activity and then i think

00:45:32,880 --> 00:45:36,560
i think the meetings don't go to the

00:45:34,000 --> 00:45:40,079
attack mailing list um

00:45:36,560 --> 00:45:42,960
i think um

00:45:40,079 --> 00:45:43,280
the another question was around qt512

00:45:42,960 --> 00:45:46,319
and

00:45:43,280 --> 00:45:49,440
are we looking to try and get a bug

00:45:46,319 --> 00:45:52,560
bug fixes back ported uh to 512.

00:45:49,440 --> 00:45:54,079
it's um this is a kind of an ongoing i

00:45:52,560 --> 00:45:55,359
would say an ongoing dialogue between

00:45:54,079 --> 00:45:58,160
the vendors who are

00:45:55,359 --> 00:45:59,839
who are commercial licensees of uh of

00:45:58,160 --> 00:46:00,800
cutie working with the qt company to try

00:45:59,839 --> 00:46:03,760
and get that done

00:46:00,800 --> 00:46:04,960
um like like any organization you know

00:46:03,760 --> 00:46:06,319
the qt company you're getting lots of

00:46:04,960 --> 00:46:07,440
requests from all over the place and

00:46:06,319 --> 00:46:09,119
they're going to listen more to the

00:46:07,440 --> 00:46:10,160
commercial licenses and also open source

00:46:09,119 --> 00:46:11,280
licenses

00:46:10,160 --> 00:46:12,480
and they're going to they're going to

00:46:11,280 --> 00:46:13,200
make decisions about what they want to

00:46:12,480 --> 00:46:15,920
do so

00:46:13,200 --> 00:46:16,319
um again the vfx reference platform what

00:46:15,920 --> 00:46:17,760
that does

00:46:16,319 --> 00:46:19,119
that does give us the ability to engage

00:46:17,760 --> 00:46:20,160
with the qt company and bring the

00:46:19,119 --> 00:46:22,880
collective leverage

00:46:20,160 --> 00:46:23,280
of the industry as a whole and so you

00:46:22,880 --> 00:46:25,440
know

00:46:23,280 --> 00:46:26,960
when we've we've not really made good uh

00:46:25,440 --> 00:46:28,160
necessary needs to make a good use of

00:46:26,960 --> 00:46:29,280
that but um

00:46:28,160 --> 00:46:31,280
but a few years ago definitely i mean

00:46:29,280 --> 00:46:32,400
the qt company uh well i guess when it

00:46:31,280 --> 00:46:33,680
was when it was uh

00:46:32,400 --> 00:46:34,640
just when i think it was about digital

00:46:33,680 --> 00:46:36,720
but there were there was a good

00:46:34,640 --> 00:46:37,920
engagement um with us to see graph and

00:46:36,720 --> 00:46:40,240
um they've certainly been open to

00:46:37,920 --> 00:46:43,119
feedback and that kind of thing so um

00:46:40,240 --> 00:46:44,160
so yes uh i i but i think the qt company

00:46:43,119 --> 00:46:47,200
is really moving on if they're focused

00:46:44,160 --> 00:46:47,200
on qt six right now

00:46:51,760 --> 00:46:55,440
um and another question any long-term

00:46:54,079 --> 00:46:57,440
thoughts start to come out for other

00:46:55,440 --> 00:47:00,560
platforms such as mobile or web-based

00:46:57,440 --> 00:47:02,160
tools applications uh

00:47:00,560 --> 00:47:04,079
not really uh honestly we've been very

00:47:02,160 --> 00:47:06,319
focused on on windows and mac

00:47:04,079 --> 00:47:07,359
and again so far the goal of the the

00:47:06,319 --> 00:47:09,200
really the goals of the

00:47:07,359 --> 00:47:10,960
reference platform been focused on

00:47:09,200 --> 00:47:12,480
solving the issue of virginitis

00:47:10,960 --> 00:47:14,960
and helping ensure we have a healthy

00:47:12,480 --> 00:47:17,680
linux ecosystem for the industry

00:47:14,960 --> 00:47:18,400
um and and so those goals may evolve

00:47:17,680 --> 00:47:22,240
over time

00:47:18,400 --> 00:47:23,520
but um uh you know so far

00:47:22,240 --> 00:47:24,960
we haven't really had any you know and

00:47:23,520 --> 00:47:26,240
if there are issues from the in out

00:47:24,960 --> 00:47:28,880
there in the community around

00:47:26,240 --> 00:47:29,440
uh you know web development or judgment

00:47:28,880 --> 00:47:30,880
for mobile

00:47:29,440 --> 00:47:32,079
let us know if we can help they

00:47:30,880 --> 00:47:34,960
definitely want you looking at but we've

00:47:32,079 --> 00:47:36,480
not heard anything about that so far

00:47:34,960 --> 00:47:38,160
there's one there's one question as well

00:47:36,480 --> 00:47:39,680
from eric about whether or not we were

00:47:38,160 --> 00:47:41,119
thinking about collecting data

00:47:39,680 --> 00:47:43,440
on what the usage breakdown is the

00:47:41,119 --> 00:47:45,200
various vfx reference platform versions

00:47:43,440 --> 00:47:46,800
of previous years in the wild and and

00:47:45,200 --> 00:47:48,640
how much

00:47:46,800 --> 00:47:50,240
we should be driving like sunsetting

00:47:48,640 --> 00:47:50,800
some of those and no longer supporting

00:47:50,240 --> 00:47:52,240
them

00:47:50,800 --> 00:47:54,319
so a lot of that is driven not

00:47:52,240 --> 00:47:55,440
necessarily by the the platform itself

00:47:54,319 --> 00:47:57,520
but which

00:47:55,440 --> 00:47:59,280
by which applications are still in use

00:47:57,520 --> 00:48:00,720
at studios if you're using an ancient

00:47:59,280 --> 00:48:01,520
version of maya or side effects or

00:48:00,720 --> 00:48:03,280
something else

00:48:01,520 --> 00:48:05,119
that requires an older version of qt or

00:48:03,280 --> 00:48:06,880
python

00:48:05,119 --> 00:48:08,880
studios are going to keep that alive

00:48:06,880 --> 00:48:09,359
internally that's a bit of a decision

00:48:08,880 --> 00:48:12,559
that

00:48:09,359 --> 00:48:14,480
essentially there's a balance where uh

00:48:12,559 --> 00:48:17,520
i don't know that there's a ton of value

00:48:14,480 --> 00:48:19,599
in forcing individual studios to

00:48:17,520 --> 00:48:21,040
push forward if they're not running into

00:48:19,599 --> 00:48:22,240
trouble using something that they've

00:48:21,040 --> 00:48:24,720
already invested in

00:48:22,240 --> 00:48:26,400
what we really try to do uh just with

00:48:24,720 --> 00:48:29,200
the general process in general

00:48:26,400 --> 00:48:30,640
is uh tell vendors that you know

00:48:29,200 --> 00:48:32,240
sometimes like i said if they release

00:48:30,640 --> 00:48:34,319
early in the year it's challenging to

00:48:32,240 --> 00:48:36,480
adopt the very latest

00:48:34,319 --> 00:48:37,760
cy version of the reference platform and

00:48:36,480 --> 00:48:39,520
so what we ask is

00:48:37,760 --> 00:48:40,800
don't introduce yet another combination

00:48:39,520 --> 00:48:42,079
of the matrix

00:48:40,800 --> 00:48:44,000
try to stick to either the previous

00:48:42,079 --> 00:48:44,559
year's version or the next year but at

00:48:44,000 --> 00:48:47,520
least

00:48:44,559 --> 00:48:49,839
stick to the set versions that your your

00:48:47,520 --> 00:48:51,680
clients are used to dealing with

00:48:49,839 --> 00:48:52,880
uh and that's that's how we reduce a

00:48:51,680 --> 00:48:54,960
little bit of the complexity

00:48:52,880 --> 00:48:56,240
but then if that application uh remains

00:48:54,960 --> 00:48:58,000
in use for

00:48:56,240 --> 00:49:00,480
another one or two years and certainly

00:48:58,000 --> 00:49:02,559
that's not uncommon to drag on for a bit

00:49:00,480 --> 00:49:04,000
uh especially with entrenched workflows

00:49:02,559 --> 00:49:05,839
where there aren't a lot of resources to

00:49:04,000 --> 00:49:08,960
update that to something new

00:49:05,839 --> 00:49:10,480
um we there isn't necessarily an effort

00:49:08,960 --> 00:49:12,480
to push for that i think the vendors

00:49:10,480 --> 00:49:13,920
certainly have a lot of metrics around

00:49:12,480 --> 00:49:16,160
which of their older versions are in

00:49:13,920 --> 00:49:17,920
play and that could help inform i think

00:49:16,160 --> 00:49:19,200
uh just from an informational point of

00:49:17,920 --> 00:49:21,119
view a sense of

00:49:19,200 --> 00:49:22,720
what's still in use which in turn

00:49:21,119 --> 00:49:24,160
informs a lot of our own community open

00:49:22,720 --> 00:49:26,079
source projects to know

00:49:24,160 --> 00:49:28,160
like well if i deprecate this thing and

00:49:26,079 --> 00:49:29,520
force you know c plus plus 14

00:49:28,160 --> 00:49:31,359
this is the percentage of users that

00:49:29,520 --> 00:49:33,680
can't use my library and

00:49:31,359 --> 00:49:35,359
at least right now that that's i think

00:49:33,680 --> 00:49:37,200
interesting information to gather

00:49:35,359 --> 00:49:38,559
uh and something that's again also

00:49:37,200 --> 00:49:39,359
useful in the context of the academy

00:49:38,559 --> 00:49:42,079
software

00:49:39,359 --> 00:49:43,520
foundation um but it's it's not

00:49:42,079 --> 00:49:45,359
necessarily something where we would

00:49:43,520 --> 00:49:46,720
push for deprecation from a vfx

00:49:45,359 --> 00:49:48,800
reference platform

00:49:46,720 --> 00:49:50,720
point of view um nick i don't know if

00:49:48,800 --> 00:49:53,599
you feel differently

00:49:50,720 --> 00:49:54,800
no no i i yeah i i i agree and i think

00:49:53,599 --> 00:49:56,160
you know definitely

00:49:54,800 --> 00:49:57,599
again we will listen to the needs of the

00:49:56,160 --> 00:49:58,800
community and see what the issues are

00:49:57,599 --> 00:50:00,880
and again we can start

00:49:58,800 --> 00:50:02,160
you know evolving our philosophy and and

00:50:00,880 --> 00:50:03,760
the goals of the platform but but

00:50:02,160 --> 00:50:05,839
currently yeah i don't think we're

00:50:03,760 --> 00:50:08,559
pushing to do that just address a couple

00:50:05,839 --> 00:50:10,079
of uh other questions i saw you know

00:50:08,559 --> 00:50:11,440
where do all the major major vendors

00:50:10,079 --> 00:50:12,000
stand with the respect that python 3

00:50:11,440 --> 00:50:14,079
builds

00:50:12,000 --> 00:50:16,240
if you go to the vfxplatform.com website

00:50:14,079 --> 00:50:19,200
under useful links there is a link to a

00:50:16,240 --> 00:50:20,800
google spreadsheet that that is kind of

00:50:19,200 --> 00:50:21,359
open to the community to update which

00:50:20,800 --> 00:50:23,440
has

00:50:21,359 --> 00:50:24,880
all the kind of uh open source and

00:50:23,440 --> 00:50:28,000
commercial products and where they stand

00:50:24,880 --> 00:50:29,599
with respect to python 3 readiness um

00:50:28,000 --> 00:50:31,200
so and thanks to jf we just posted the

00:50:29,599 --> 00:50:32,800
link in in the q a there if you don't

00:50:31,200 --> 00:50:36,079
want to click on it directly

00:50:32,800 --> 00:50:38,000
um uh what else is going to answer uh

00:50:36,079 --> 00:50:40,319
so is the goal to skip to straight

00:50:38,000 --> 00:50:43,440
straight to 3.9 um

00:50:40,319 --> 00:50:45,040
i guess this is python 3.9 in cy 2022.

00:50:43,440 --> 00:50:46,480
i'm concerned because python is on

00:50:45,040 --> 00:50:49,200
yearly releases now

00:50:46,480 --> 00:50:50,720
um yeah i i i can't say i can't say yes

00:50:49,200 --> 00:50:51,520
that's that's the goal but i think that

00:50:50,720 --> 00:50:53,119
logically

00:50:51,520 --> 00:50:55,200
that would be the way we would go is

00:50:53,119 --> 00:50:58,400
that if we're not we're not moving to

00:50:55,200 --> 00:50:59,520
uh 3.8 for next year that when we then

00:50:58,400 --> 00:51:02,880
that we would be ready to

00:50:59,520 --> 00:51:03,599
to to go to the latest stable supported

00:51:02,880 --> 00:51:06,480
release

00:51:03,599 --> 00:51:07,599
uh in the following year 22 uh you know

00:51:06,480 --> 00:51:09,839
assuming we can work it out with the

00:51:07,599 --> 00:51:12,640
vendors to get there but yeah

00:51:09,839 --> 00:51:13,760
definitely that's that that's a goal uh

00:51:12,640 --> 00:51:16,319
to get to that point where we can stay

00:51:13,760 --> 00:51:18,160
with the latest release each year

00:51:16,319 --> 00:51:19,359
um now that every every vendor is

00:51:18,160 --> 00:51:21,760
starting to roll out uh

00:51:19,359 --> 00:51:23,839
usd support wouldn't it be a good time

00:51:21,760 --> 00:51:26,240
to add the vfx platform as well

00:51:23,839 --> 00:51:26,960
uh this has definitely come up a lot uh

00:51:26,240 --> 00:51:29,520
the

00:51:26,960 --> 00:51:30,160
and usd is an interesting one it's a big

00:51:29,520 --> 00:51:31,839
complex

00:51:30,160 --> 00:51:34,480
library that's moving and instead of

00:51:31,839 --> 00:51:37,040
tools it's moving really really fast

00:51:34,480 --> 00:51:38,079
we don't want to hold that back so uh

00:51:37,040 --> 00:51:38,800
you know it's one of those things that's

00:51:38,079 --> 00:51:39,920
actually

00:51:38,800 --> 00:51:40,960
moving fast enough and this is

00:51:39,920 --> 00:51:42,000
definitely a challenge for the software

00:51:40,960 --> 00:51:42,880
vendors this is a challenge for the

00:51:42,000 --> 00:51:45,040
community

00:51:42,880 --> 00:51:45,920
um and it's still trying to find its

00:51:45,040 --> 00:51:47,599
place and

00:51:45,920 --> 00:51:49,040
and and you know and and it has a

00:51:47,599 --> 00:51:50,000
tremendous amount of capabilities like

00:51:49,040 --> 00:51:51,440
they're getting battle proven in

00:51:50,000 --> 00:51:52,880
production right now and that's

00:51:51,440 --> 00:51:55,119
resulting in more changes

00:51:52,880 --> 00:51:56,559
so i i don't i think it's too soon for

00:51:55,119 --> 00:51:57,119
it to be part of the platform and for us

00:51:56,559 --> 00:51:58,800
to be saying

00:51:57,119 --> 00:52:00,720
hey everyone should stick on one release

00:51:58,800 --> 00:52:02,559
for a hope for a whole 12 months

00:52:00,720 --> 00:52:03,760
um i think that would be challenging i

00:52:02,559 --> 00:52:04,640
think it would hold back progress for

00:52:03,760 --> 00:52:07,280
the industry

00:52:04,640 --> 00:52:08,720
so i think we're kind of we'll you know

00:52:07,280 --> 00:52:09,839
the the the trade-off there is actually

00:52:08,720 --> 00:52:11,520
a little bit of chaos

00:52:09,839 --> 00:52:13,040
or not chaos maybe too but a little bit

00:52:11,520 --> 00:52:16,079
of instability and

00:52:13,040 --> 00:52:17,359
um and kind of version issues is kind of

00:52:16,079 --> 00:52:19,119
okay in the early days because

00:52:17,359 --> 00:52:21,280
what you get in return is a faster pace

00:52:19,119 --> 00:52:23,040
of development uh and then maybe a

00:52:21,280 --> 00:52:24,400
little bit further down uh we would look

00:52:23,040 --> 00:52:27,440
to give some guidance on on

00:52:24,400 --> 00:52:30,319
on usd compatibility um

00:52:27,440 --> 00:52:30,319
as part of the platform

00:52:31,040 --> 00:52:34,720
maybe the the one question that nick you

00:52:33,040 --> 00:52:36,079
you touched upon uh while while

00:52:34,720 --> 00:52:37,839
presenting but erin's question about

00:52:36,079 --> 00:52:38,960
python 37 versus three eight obviously

00:52:37,839 --> 00:52:40,559
this is something that we've had

00:52:38,960 --> 00:52:42,240
discussions about internally

00:52:40,559 --> 00:52:43,680
but it's it's also one where i think

00:52:42,240 --> 00:52:45,599
there's still an opportunity for for the

00:52:43,680 --> 00:52:46,079
community and the vendors at large to

00:52:45,599 --> 00:52:48,000
discuss

00:52:46,079 --> 00:52:49,280
further i think based on the on the pros

00:52:48,000 --> 00:52:52,079
and cons and the importance

00:52:49,280 --> 00:52:52,800
i think that everybody using tools today

00:52:52,079 --> 00:52:54,800
uh

00:52:52,800 --> 00:52:56,960
really fleshing that out on vfx platform

00:52:54,800 --> 00:52:59,599
discuss would be a really good next step

00:52:56,960 --> 00:53:01,280
to get a sense of how much benefit

00:52:59,599 --> 00:53:01,920
versus pain is incurred in comparing the

00:53:01,280 --> 00:53:03,760
two

00:53:01,920 --> 00:53:05,599
uh and help set the stage for the final

00:53:03,760 --> 00:53:08,319
decision that that we're hoping to make

00:53:05,599 --> 00:53:08,880
um in in a few weeks yeah and i will

00:53:08,319 --> 00:53:10,720
share

00:53:08,880 --> 00:53:12,720
thanks for i agree and i and you know

00:53:10,720 --> 00:53:15,280
when you post on vfx platform discuss

00:53:12,720 --> 00:53:16,960
know that a lot of influential people in

00:53:15,280 --> 00:53:18,160
all the major software vendors are

00:53:16,960 --> 00:53:20,160
reading what you post there

00:53:18,160 --> 00:53:21,440
so uh even if they don't they're not

00:53:20,160 --> 00:53:22,800
able to respond

00:53:21,440 --> 00:53:24,960
uh definitely they will hear that

00:53:22,800 --> 00:53:27,359
feedback um

00:53:24,960 --> 00:53:29,040
uh question another question uh should

00:53:27,359 --> 00:53:30,480
clang be considered as an alternative on

00:53:29,040 --> 00:53:31,680
linux versus gcc

00:53:30,480 --> 00:53:34,400
or being somewhat compatible with it

00:53:31,680 --> 00:53:35,280
somehow uh unreal engines forces use

00:53:34,400 --> 00:53:37,040
clang on linux

00:53:35,280 --> 00:53:38,319
uh google filament mandates clang so

00:53:37,040 --> 00:53:40,960
actually you can use clang we just

00:53:38,319 --> 00:53:43,599
happen to specify gcc

00:53:40,960 --> 00:53:45,760
but you can actually if you build clang

00:53:43,599 --> 00:53:47,839
with the version of gcc we specify

00:53:45,760 --> 00:53:49,920
to you know studios are having good uh

00:53:47,839 --> 00:53:50,960
uh good experience doing that and using

00:53:49,920 --> 00:53:52,640
that build of clang

00:53:50,960 --> 00:53:54,160
to have to be to create compatible

00:53:52,640 --> 00:53:56,160
software um

00:53:54,160 --> 00:53:57,760
and that's something that we will we

00:53:56,160 --> 00:53:59,440
need to look in a bit more in terms of

00:53:57,760 --> 00:54:00,800
broadening how we define binary

00:53:59,440 --> 00:54:02,400
compatibility on linux

00:54:00,800 --> 00:54:03,359
um we didn't really get too much into

00:54:02,400 --> 00:54:05,119
that this year because we were so

00:54:03,359 --> 00:54:07,440
focused on it on mac os and windows

00:54:05,119 --> 00:54:08,319
but um and and i think there's a on the

00:54:07,440 --> 00:54:10,720
website

00:54:08,319 --> 00:54:11,760
uh if you look at the footnote for gcc 9

00:54:10,720 --> 00:54:12,960
that we added recently

00:54:11,760 --> 00:54:15,119
i think it does talk a little bit about

00:54:12,960 --> 00:54:16,880
how to build a little bit like building

00:54:15,119 --> 00:54:19,760
clang with gcc to get some level of

00:54:16,880 --> 00:54:19,760
binary compatibility

00:54:22,720 --> 00:54:26,480
i think we've actually covered most of

00:54:24,160 --> 00:54:28,640
the the questions in the q a

00:54:26,480 --> 00:54:31,040
yeah feel free to reach out in the chat

00:54:28,640 --> 00:54:31,040
as well

00:54:35,359 --> 00:54:38,480
um yeah there's a good note from nathan

00:54:36,880 --> 00:54:41,200
saying don't recommend visually mixing

00:54:38,480 --> 00:54:45,040
visual c plus plus 14.0 with vcc

00:54:41,200 --> 00:54:46,640
14.1 um so yeah and i think

00:54:45,040 --> 00:54:48,160
we're not because now i think we're

00:54:46,640 --> 00:54:50,480
specifying um

00:54:48,160 --> 00:54:52,160
i remember the camera with exact but

00:54:50,480 --> 00:54:53,760
visuals for your studio 2017

00:54:52,160 --> 00:54:55,760
i think that basically implies visual uh

00:54:53,760 --> 00:54:57,119
visual c plus plus 14.0 isn't

00:54:55,760 --> 00:54:59,760
isn't going to be supported and

00:54:57,119 --> 00:54:59,760
shouldn't be used

00:55:00,240 --> 00:55:03,599
uh we talk a lot about opengl but

00:55:02,000 --> 00:55:06,960
nothing about metal on

00:55:03,599 --> 00:55:10,160
on mac os um yes that's right

00:55:06,960 --> 00:55:11,760
uh i i think you know most uh

00:55:10,160 --> 00:55:13,440
software products have targeted opengl

00:55:11,760 --> 00:55:14,880
because it's been cross-platform and it

00:55:13,440 --> 00:55:15,920
gives you a broad surface to be able to

00:55:14,880 --> 00:55:17,359
reach a broad audience

00:55:15,920 --> 00:55:18,799
obviously when you're targeting to metal

00:55:17,359 --> 00:55:19,359
you get all the benefits of the metal

00:55:18,799 --> 00:55:21,359
brings but

00:55:19,359 --> 00:55:22,480
you're limiting to a particular or you

00:55:21,359 --> 00:55:24,720
know

00:55:22,480 --> 00:55:26,720
a narrow set of platforms um so it's

00:55:24,720 --> 00:55:29,839
really trade-offs that um

00:55:26,720 --> 00:55:32,319
uh that uh the vendors have to make

00:55:29,839 --> 00:55:34,000
um i think as we think about the purpose

00:55:32,319 --> 00:55:34,480
and mission of the bishop expression

00:55:34,000 --> 00:55:36,000
platform

00:55:34,480 --> 00:55:37,280
we're trying to find a levels of

00:55:36,000 --> 00:55:39,839
compatibility that are more kind of

00:55:37,280 --> 00:55:41,280
cross-platform and open and flexible

00:55:39,839 --> 00:55:42,720
who knows later down the line we may get

00:55:41,280 --> 00:55:44,160
some more kind of like platform-specific

00:55:42,720 --> 00:55:49,839
recommendations as well

00:55:44,160 --> 00:55:49,839
um but that we're not not there yet

00:55:52,880 --> 00:55:56,319
great i think that's that's it for all

00:55:55,920 --> 00:55:59,040
the

00:55:56,319 --> 00:56:01,040
the questions so um yeah with that for

00:55:59,040 --> 00:56:03,440
anyone who's attending uh siggraph

00:56:01,040 --> 00:56:04,720
uh attending in this virtual world um we

00:56:03,440 --> 00:56:07,680
do have a birds of a feather

00:56:04,720 --> 00:56:08,480
uh next week um where we will go uh

00:56:07,680 --> 00:56:09,599
we'll

00:56:08,480 --> 00:56:11,280
we'll recap of some of these things

00:56:09,599 --> 00:56:12,559
we'll dive a bit deeper into into some

00:56:11,280 --> 00:56:13,760
of the topics as well and hopefully have

00:56:12,559 --> 00:56:15,040
some time for more discussion for anyone

00:56:13,760 --> 00:56:16,640
who wants to come and join that

00:56:15,040 --> 00:56:18,480
and you're and you're participating in

00:56:16,640 --> 00:56:19,839
siggraph but thanks again to the academy

00:56:18,480 --> 00:56:21,040
software foundation for hosting us

00:56:19,839 --> 00:56:23,680
thanks francois

00:56:21,040 --> 00:56:27,760
and uh and thank you for having us

00:56:23,680 --> 00:56:27,760

YouTube URL: https://www.youtube.com/watch?v=xNCeo9mjVNs


