Title: OpenColorIO – Consistent Color Management for VFX & Animation Pipelines
Publication date: 2020-08-25
Playlist: Open Source Days 2020
Description: 
	OpenColorIO – Consistent Color Management for VFX & Animation Pipelines
Speakers: Carol Payne, Doug Walker, PATRICK HODOUL, Michael Dolan

For more information about the Academy Software Foundation go to: https://www.aswf.io/

OpenColorIO (OCIO) is a color management solution for creating and displaying consistent images across multiple content creation applications during visual effects and animation production. It has been used on dozens of feature films including Spider-Man™: Into the Spider-Verse, Spider-Man™: Homecoming, Hotel Transylvania 3, Ghostbusters, Alice in Wonderland, Cloudy with a Chance of Meatballs, Surf's Up, and Watchmen. This session will provide an overview of OpenColorIO, progress on OCIO version 2, and Q&A.
Captions: 
	00:00:00,719 --> 00:00:03,360
everyone and uh welcome to open source

00:00:02,800 --> 00:00:05,920
days

00:00:03,360 --> 00:00:06,879
it's good to have you all with us um i'm

00:00:05,920 --> 00:00:08,960
michael dolan

00:00:06,879 --> 00:00:10,800
i'm a senior pipeline developer at epic

00:00:08,960 --> 00:00:13,920
games and i'm the chairperson for

00:00:10,800 --> 00:00:14,880
opencolorio tsc and i'm going to get us

00:00:13,920 --> 00:00:17,119
started here so

00:00:14,880 --> 00:00:18,880
the title of our talk is open color i o

00:00:17,119 --> 00:00:22,240
consistent color management

00:00:18,880 --> 00:00:23,920
for vfx and animation pipelines and

00:00:22,240 --> 00:00:25,039
just to give you a brief overview of

00:00:23,920 --> 00:00:25,840
what we're going to be covering i'm

00:00:25,039 --> 00:00:28,640
going to be

00:00:25,840 --> 00:00:29,119
giving a introduction and a brief

00:00:28,640 --> 00:00:31,119
project

00:00:29,119 --> 00:00:32,160
update on what we've been up to over the

00:00:31,119 --> 00:00:34,239
last year

00:00:32,160 --> 00:00:36,880
and then doug walker and patrick hadoul

00:00:34,239 --> 00:00:39,360
are going to talk about opencolorio v2

00:00:36,880 --> 00:00:40,640
which they've been working on at

00:00:39,360 --> 00:00:42,640
autodesk for the last

00:00:40,640 --> 00:00:44,079
about three years and then carol payne

00:00:42,640 --> 00:00:46,320
of netflix is going to be talking about

00:00:44,079 --> 00:00:47,600
the new open color i o documentation and

00:00:46,320 --> 00:00:50,960
website to accompany

00:00:47,600 --> 00:00:52,000
the v2 work and then carol will moderate

00:00:50,960 --> 00:00:53,840
our q a

00:00:52,000 --> 00:00:55,920
so if you have questions feel free to

00:00:53,840 --> 00:00:58,160
post them in the q a

00:00:55,920 --> 00:00:59,760
right here in zoom and we'll make sure

00:00:58,160 --> 00:01:00,800
to have some time at the end so we can

00:00:59,760 --> 00:01:02,719
answer those

00:01:00,800 --> 00:01:04,400
and if you have any questions following

00:01:02,719 --> 00:01:08,159
the session feel free to ask them

00:01:04,400 --> 00:01:10,240
in either the aswf slack

00:01:08,159 --> 00:01:11,680
or the open colorio slack and we'd be

00:01:10,240 --> 00:01:13,840
happy to answer your questions there as

00:01:11,680 --> 00:01:13,840
well

00:01:13,920 --> 00:01:18,159
so just to give you a brief introduction

00:01:15,759 --> 00:01:21,040
to opencolorio if you're not familiar

00:01:18,159 --> 00:01:21,759
opencolorio also known as ocio is an

00:01:21,040 --> 00:01:23,680
open source

00:01:21,759 --> 00:01:25,680
library for visual effects color

00:01:23,680 --> 00:01:26,880
management that provides four main

00:01:25,680 --> 00:01:28,960
capabilities

00:01:26,880 --> 00:01:30,079
so first there's a config file for

00:01:28,960 --> 00:01:32,400
documenting

00:01:30,079 --> 00:01:33,280
a color pipeline that is used either for

00:01:32,400 --> 00:01:36,320
a specific show

00:01:33,280 --> 00:01:39,360
or even across an entire facility uh

00:01:36,320 --> 00:01:41,920
it also oci also provides a loose set of

00:01:39,360 --> 00:01:43,600
user interface conventions sorry

00:01:41,920 --> 00:01:45,680
interface conventions for

00:01:43,600 --> 00:01:47,600
accessing color management from within

00:01:45,680 --> 00:01:48,399
digital content creation applications

00:01:47,600 --> 00:01:51,520
that's the

00:01:48,399 --> 00:01:53,600
user facing side also

00:01:51,520 --> 00:01:54,720
the ability to read many of the lookup

00:01:53,600 --> 00:01:56,719
table or lut

00:01:54,720 --> 00:01:58,000
file formats that are used across the

00:01:56,719 --> 00:02:00,079
industry

00:01:58,000 --> 00:02:03,040
which you know makes ocl very flexible

00:02:00,079 --> 00:02:06,000
and able to fit into a lot of existing

00:02:03,040 --> 00:02:10,160
pipelines and then lastly pixel

00:02:06,000 --> 00:02:13,200
conversion engines for both cpu and gpu

00:02:10,160 --> 00:02:15,840
ocio was introduced about 10 years ago

00:02:13,200 --> 00:02:17,440
by sony pictures imageworks and has

00:02:15,840 --> 00:02:19,040
become an industry standard for

00:02:17,440 --> 00:02:20,560
implementing color management and visual

00:02:19,040 --> 00:02:22,480
effects and animation

00:02:20,560 --> 00:02:23,920
it's already integrated into dozens of

00:02:22,480 --> 00:02:26,080
apps many of which you probably

00:02:23,920 --> 00:02:28,959
use are familiar with and it's being

00:02:26,080 --> 00:02:31,440
added to new applications regularly

00:02:28,959 --> 00:02:33,200
hundreds of films have used ocio pretty

00:02:31,440 --> 00:02:34,400
much every major motion picture with

00:02:33,200 --> 00:02:36,640
visual effects

00:02:34,400 --> 00:02:38,160
over the last uh quite a few years has

00:02:36,640 --> 00:02:41,040
used ocio for

00:02:38,160 --> 00:02:43,200
um for most shots so it's uh very

00:02:41,040 --> 00:02:44,879
commonly used

00:02:43,200 --> 00:02:46,560
so just as a general update kind of

00:02:44,879 --> 00:02:47,360
talking about where we've been at for

00:02:46,560 --> 00:02:49,360
the last year

00:02:47,360 --> 00:02:51,360
since open source day last year at

00:02:49,360 --> 00:02:54,640
siggraph

00:02:51,360 --> 00:02:56,879
so following last year's event

00:02:54,640 --> 00:02:58,080
we the academy software foundation tac

00:02:56,879 --> 00:03:00,800
and governing board

00:02:58,080 --> 00:03:02,640
voted to graduate ocio to an adopted

00:03:00,800 --> 00:03:04,560
project in the aswf

00:03:02,640 --> 00:03:06,000
so we were the second adopted project in

00:03:04,560 --> 00:03:08,720
the foundation

00:03:06,000 --> 00:03:11,440
since then we've had 182 commits by 25

00:03:08,720 --> 00:03:13,680
contributors and 44 issues closed

00:03:11,440 --> 00:03:14,720
so very healthy amount of contributions

00:03:13,680 --> 00:03:16,319
and activity

00:03:14,720 --> 00:03:17,840
there's a lot going on on the project

00:03:16,319 --> 00:03:20,640
it's a great time to get involved if

00:03:17,840 --> 00:03:22,640
you're interested in participating

00:03:20,640 --> 00:03:23,920
it's all done in the open and we're

00:03:22,640 --> 00:03:26,879
eager to have

00:03:23,920 --> 00:03:28,720
uh help you know anyone who's interested

00:03:26,879 --> 00:03:30,640
so we've also spun up two project

00:03:28,720 --> 00:03:34,080
working groups this past year

00:03:30,640 --> 00:03:35,519
one to look at revamping the ocio

00:03:34,080 --> 00:03:38,080
documentation and website

00:03:35,519 --> 00:03:40,319
in preparation for the v2 release that's

00:03:38,080 --> 00:03:43,280
being led by carol payne of netflix

00:03:40,319 --> 00:03:45,200
and sean cooper of dneg we've also

00:03:43,280 --> 00:03:45,599
recently spun up an aces config working

00:03:45,200 --> 00:03:48,560
group

00:03:45,599 --> 00:03:49,519
which i'll talk more about shortly last

00:03:48,560 --> 00:03:52,480
week we

00:03:49,519 --> 00:03:54,159
had a talk in a paper at digipro if you

00:03:52,480 --> 00:03:56,239
weren't able to attend digipro

00:03:54,159 --> 00:03:58,480
those will both be posted to the ocio

00:03:56,239 --> 00:03:59,760
website and the new feature so be sure

00:03:58,480 --> 00:04:02,000
to check that out

00:03:59,760 --> 00:04:03,920
the paper in particular covers a lot of

00:04:02,000 --> 00:04:04,720
detail around the v2 feature set which

00:04:03,920 --> 00:04:08,000
is

00:04:04,720 --> 00:04:09,360
very helpful we've had

00:04:08,000 --> 00:04:11,120
some new members to our technical

00:04:09,360 --> 00:04:13,519
steering committee this past year

00:04:11,120 --> 00:04:14,959
may chew of sony pictures image works is

00:04:13,519 --> 00:04:16,320
is now joined and

00:04:14,959 --> 00:04:19,199
carol payne is joined to represent

00:04:16,320 --> 00:04:21,440
netflix and mark titchener from foundry

00:04:19,199 --> 00:04:22,560
so we're continuing to um you know

00:04:21,440 --> 00:04:24,560
expand and

00:04:22,560 --> 00:04:26,479
and to try to you know lead the project

00:04:24,560 --> 00:04:28,240
well

00:04:26,479 --> 00:04:29,759
we've had some updates to building ci

00:04:28,240 --> 00:04:31,120
over the last year last year at open

00:04:29,759 --> 00:04:33,759
source day we talked a lot about

00:04:31,120 --> 00:04:35,360
our ci and build efforts which had been

00:04:33,759 --> 00:04:37,840
a part of our incubation

00:04:35,360 --> 00:04:39,040
phase of our time in the academy

00:04:37,840 --> 00:04:40,880
software foundation

00:04:39,040 --> 00:04:43,280
this past year the entire foundation

00:04:40,880 --> 00:04:45,600
decided to move ci infrastructure

00:04:43,280 --> 00:04:47,520
from azure pipelines over to github

00:04:45,600 --> 00:04:50,000
actions to be more tightly integrated

00:04:47,520 --> 00:04:52,639
with our repositories which has been a

00:04:50,000 --> 00:04:54,320
i'm a good it's been a great move and

00:04:52,639 --> 00:04:56,800
it's been

00:04:54,320 --> 00:04:58,479
added a lot of nice capability for just

00:04:56,800 --> 00:05:01,600
managing our projects

00:04:58,479 --> 00:05:04,000
we've also expanded our ci jobs somewhat

00:05:01,600 --> 00:05:04,880
we're now regularly testing on both vfx

00:05:04,000 --> 00:05:08,320
reference platform

00:05:04,880 --> 00:05:10,639
2019 and 2020 images which are both

00:05:08,320 --> 00:05:12,560
provided by the aswf docker project

00:05:10,639 --> 00:05:14,479
if you're not familiar with that it's a

00:05:12,560 --> 00:05:14,960
they're docker images that provide

00:05:14,479 --> 00:05:18,560
various

00:05:14,960 --> 00:05:20,960
vfx reference platform um content years

00:05:18,560 --> 00:05:22,479
and it's great for both ci and for uh

00:05:20,960 --> 00:05:25,440
just you know building projects on your

00:05:22,479 --> 00:05:28,000
own too so be sure to check that out

00:05:25,440 --> 00:05:28,720
we're also doing a nightly ci now so we

00:05:28,000 --> 00:05:30,479
do a

00:05:28,720 --> 00:05:32,400
latest upstream dependency build so

00:05:30,479 --> 00:05:33,360
basically we have a number of upstream

00:05:32,400 --> 00:05:36,160
dependencies

00:05:33,360 --> 00:05:38,160
that we pull from other repositories and

00:05:36,160 --> 00:05:39,199
this allows us to pull the latest tag

00:05:38,160 --> 00:05:42,479
for each of those

00:05:39,199 --> 00:05:43,520
just to see how changes coming

00:05:42,479 --> 00:05:45,199
downstream

00:05:43,520 --> 00:05:48,320
will affect us in the future so we can

00:05:45,199 --> 00:05:50,320
maintain stability with new releases

00:05:48,320 --> 00:05:52,080
and we also run static analysis builds

00:05:50,320 --> 00:05:54,320
with sonar cloud each evening

00:05:52,080 --> 00:05:56,400
and that includes test coverage analysis

00:05:54,320 --> 00:05:56,800
and and other things to help us keep the

00:05:56,400 --> 00:05:59,039
code

00:05:56,800 --> 00:06:00,160
quality high we've also been working

00:05:59,039 --> 00:06:03,280
with the ca

00:06:00,160 --> 00:06:06,240
aswfci working group uh this past year

00:06:03,280 --> 00:06:08,400
as we implement gpu ci which is really

00:06:06,240 --> 00:06:12,160
important for ocio since we

00:06:08,400 --> 00:06:16,080
the gpu rendering is is widely used

00:06:12,160 --> 00:06:18,080
so we're running this on gpu instances

00:06:16,080 --> 00:06:19,360
on aws and we're currently in progress

00:06:18,080 --> 00:06:21,120
setting this up but we're hoping to have

00:06:19,360 --> 00:06:23,440
it up and running within the next month

00:06:21,120 --> 00:06:25,840
or two

00:06:23,440 --> 00:06:27,759
so last year we completely rewrote the

00:06:25,840 --> 00:06:30,240
python bindings for ocio

00:06:27,759 --> 00:06:30,880
with pi bind 11. so now we fully support

00:06:30,240 --> 00:06:32,800
python 2

00:06:30,880 --> 00:06:34,560
and 3 and one of the great things with

00:06:32,800 --> 00:06:37,520
pi bind is numpy

00:06:34,560 --> 00:06:38,479
array interoperability so any of the api

00:06:37,520 --> 00:06:41,840
for ocio

00:06:38,479 --> 00:06:45,199
that can operate on

00:06:41,840 --> 00:06:46,880
pixel arrays or or numbers can can be

00:06:45,199 --> 00:06:49,360
passed numpy arrays directly

00:06:46,880 --> 00:06:51,120
and can also return them we've also

00:06:49,360 --> 00:06:54,080
worked on some revisions to

00:06:51,120 --> 00:06:54,800
pi open colorio to be more pythonic one

00:06:54,080 --> 00:06:56,560
of those is

00:06:54,800 --> 00:06:58,160
implementing a lot of python iterators

00:06:56,560 --> 00:07:00,479
where previously

00:06:58,160 --> 00:07:02,080
it was more of like a c style iteration

00:07:00,479 --> 00:07:03,280
where you're iterating based on a count

00:07:02,080 --> 00:07:05,280
of some object

00:07:03,280 --> 00:07:07,599
so it's just a little more easier to

00:07:05,280 --> 00:07:11,520
pick up for python developers

00:07:07,599 --> 00:07:13,440
we've also expanded the previous case of

00:07:11,520 --> 00:07:16,000
having constructors for each class for

00:07:13,440 --> 00:07:17,840
each class that allows you to define

00:07:16,000 --> 00:07:19,520
the attributes in the constructor and so

00:07:17,840 --> 00:07:21,120
all of our classes

00:07:19,520 --> 00:07:23,520
support that across the library wherever

00:07:21,120 --> 00:07:24,479
it's possible so just ease config

00:07:23,520 --> 00:07:26,639
authoring

00:07:24,479 --> 00:07:28,319
and now the context class and some of

00:07:26,639 --> 00:07:29,280
the other metadata interfaces throughout

00:07:28,319 --> 00:07:31,759
the library

00:07:29,280 --> 00:07:33,360
can behave like python dictionaries uh

00:07:31,759 --> 00:07:34,639
just to be again more familiar for

00:07:33,360 --> 00:07:36,720
python developers

00:07:34,639 --> 00:07:37,759
we're still working on our test suite

00:07:36,720 --> 00:07:40,240
which may chew

00:07:37,759 --> 00:07:40,800
has been leading that development and

00:07:40,240 --> 00:07:42,840
we'll

00:07:40,800 --> 00:07:44,400
plan to be done with that before the v2

00:07:42,840 --> 00:07:46,400
release

00:07:44,400 --> 00:07:48,720
so i mentioned before that we're we have

00:07:46,400 --> 00:07:50,639
a new aces config working group

00:07:48,720 --> 00:07:52,319
the asus config in the past has been

00:07:50,639 --> 00:07:52,960
very widely used and it's been an

00:07:52,319 --> 00:07:55,199
awesome

00:07:52,960 --> 00:07:56,560
tool for studios that either don't have

00:07:55,199 --> 00:07:57,680
a color scientist or

00:07:56,560 --> 00:08:00,240
you know want to have a really good

00:07:57,680 --> 00:08:03,039
starting point for an asus pipeline

00:08:00,240 --> 00:08:04,240
so we're we're looking at that and we

00:08:03,039 --> 00:08:06,000
really want to

00:08:04,240 --> 00:08:08,000
create a new asus config that takes

00:08:06,000 --> 00:08:09,919
advantage of the open color i o

00:08:08,000 --> 00:08:11,520
v2 features which doug and patrick will

00:08:09,919 --> 00:08:12,720
talk a lot about

00:08:11,520 --> 00:08:14,639
but there's some there's some really key

00:08:12,720 --> 00:08:16,240
benefits to that and

00:08:14,639 --> 00:08:18,319
so we've actually started a new

00:08:16,240 --> 00:08:19,039
repository which is called open color i

00:08:18,319 --> 00:08:22,080
o

00:08:19,039 --> 00:08:23,919
config config aces i think

00:08:22,080 --> 00:08:25,759
where that project will be started up

00:08:23,919 --> 00:08:26,720
which is under the academy software

00:08:25,759 --> 00:08:28,479
foundation github

00:08:26,720 --> 00:08:30,960
organization there's not much there yet

00:08:28,479 --> 00:08:33,039
but we're working on it and

00:08:30,960 --> 00:08:34,880
the key thing is that this project is

00:08:33,039 --> 00:08:36,880
going to be done in two phases

00:08:34,880 --> 00:08:38,800
so phase one will be to create an asus

00:08:36,880 --> 00:08:42,320
reference config this is a

00:08:38,800 --> 00:08:44,640
config that encompasses just the aces

00:08:42,320 --> 00:08:46,240
transforms and not necessarily trying to

00:08:44,640 --> 00:08:47,839
account for all the typical color

00:08:46,240 --> 00:08:48,720
transforms that you would need across a

00:08:47,839 --> 00:08:51,440
studio

00:08:48,720 --> 00:08:53,360
and the goal here is to have a oci o

00:08:51,440 --> 00:08:54,160
aces reference implementation so that we

00:08:53,360 --> 00:08:56,880
could use that to

00:08:54,160 --> 00:08:59,200
apply for the aces logo program to be

00:08:56,880 --> 00:09:01,040
you know officially supported

00:08:59,200 --> 00:09:03,680
and one of our main goals is to be lut

00:09:01,040 --> 00:09:05,440
free open colorio v2 introduces a lot of

00:09:03,680 --> 00:09:07,200
built-in transforms providing the

00:09:05,440 --> 00:09:09,680
underlying aces algorithms

00:09:07,200 --> 00:09:11,920
for higher precision and performance and

00:09:09,680 --> 00:09:13,680
so our goal is to make this config be

00:09:11,920 --> 00:09:16,720
mostly standalone

00:09:13,680 --> 00:09:18,399
and also to generate a lot of the config

00:09:16,720 --> 00:09:21,279
structure with a library that

00:09:18,399 --> 00:09:23,839
thomas mentioned called created that

00:09:21,279 --> 00:09:25,760
essentially walks the aces repository

00:09:23,839 --> 00:09:27,360
collects all the transforms and then can

00:09:25,760 --> 00:09:28,560
build the config structure from that and

00:09:27,360 --> 00:09:30,959
this will allow us

00:09:28,560 --> 00:09:32,320
to use uh continuous integration and and

00:09:30,959 --> 00:09:33,920
other tools to make sure that we're

00:09:32,320 --> 00:09:35,120
always staying up to date with the asus

00:09:33,920 --> 00:09:37,839
repository

00:09:35,120 --> 00:09:39,839
and you know catching differences phase

00:09:37,839 --> 00:09:42,160
two of this work would then be to create

00:09:39,839 --> 00:09:44,720
a superset of that asus config

00:09:42,160 --> 00:09:46,480
which adds in a lot of the functional

00:09:44,720 --> 00:09:48,240
and useful color spaces

00:09:46,480 --> 00:09:50,080
and transforms that are needed to just

00:09:48,240 --> 00:09:53,040
run a you know a studio

00:09:50,080 --> 00:09:55,040
color pipeline and so we want to utilize

00:09:53,040 --> 00:09:57,040
oclv2 features as much as possible in

00:09:55,040 --> 00:09:58,880
this config also

00:09:57,040 --> 00:10:00,880
but these two configs will be available

00:09:58,880 --> 00:10:02,720
either to use directly or just as a

00:10:00,880 --> 00:10:05,360
reference or starting point for

00:10:02,720 --> 00:10:06,720
your studios config and we hope that it

00:10:05,360 --> 00:10:08,240
can be really helpful at

00:10:06,720 --> 00:10:09,920
all and also provide a really great

00:10:08,240 --> 00:10:11,440
example of how to utilize the new

00:10:09,920 --> 00:10:12,720
functionality

00:10:11,440 --> 00:10:14,959
if you're interested in being involved

00:10:12,720 --> 00:10:17,120
in that we uh the working group meetings

00:10:14,959 --> 00:10:18,800
are hosted every other tuesday currently

00:10:17,120 --> 00:10:20,560
and in the ocio dev

00:10:18,800 --> 00:10:23,519
calendar you can see those meetings and

00:10:20,560 --> 00:10:26,800
i would love to have your input

00:10:23,519 --> 00:10:27,680
so also we rebranded ocio recently with

00:10:26,800 --> 00:10:30,160
a new logo

00:10:27,680 --> 00:10:31,200
and branding kit by mario rakiki from

00:10:30,160 --> 00:10:33,200
dnag he

00:10:31,200 --> 00:10:34,560
graciously designed an awesome new logo

00:10:33,200 --> 00:10:36,880
and um

00:10:34,560 --> 00:10:38,640
and lots of new visuals for us to help

00:10:36,880 --> 00:10:39,760
just you know continue to have branding

00:10:38,640 --> 00:10:41,120
consistency and

00:10:39,760 --> 00:10:42,800
we're really thankful for his

00:10:41,120 --> 00:10:44,480
contribution there

00:10:42,800 --> 00:10:46,560
and with that i'm going to hand it over

00:10:44,480 --> 00:10:51,519
to doug walker to talk about

00:10:46,560 --> 00:10:54,480
open color i o v2 thanks michael

00:10:51,519 --> 00:10:55,760
yeah i i love the new branding kit that

00:10:54,480 --> 00:10:58,560
mario put together

00:10:55,760 --> 00:10:59,040
and uh i can't wait to incorporate more

00:10:58,560 --> 00:11:01,360
of that

00:10:59,040 --> 00:11:02,640
into our website and things over the

00:11:01,360 --> 00:11:06,160
coming weeks it looks

00:11:02,640 --> 00:11:08,079
really amazing so i'm doug walker i'm

00:11:06,160 --> 00:11:08,800
technology lead for color science at

00:11:08,079 --> 00:11:11,360
autodesk

00:11:08,800 --> 00:11:12,640
and i'm also serving as the chief

00:11:11,360 --> 00:11:13,920
architect on the

00:11:12,640 --> 00:11:16,640
technical steering committee for

00:11:13,920 --> 00:11:19,680
opencolorio

00:11:16,640 --> 00:11:23,279
so um it's been an interesting

00:11:19,680 --> 00:11:25,360
three years just to kind of

00:11:23,279 --> 00:11:26,560
recap some of the history for the open

00:11:25,360 --> 00:11:30,160
color via

00:11:26,560 --> 00:11:31,920
open clario v2 project so this began

00:11:30,160 --> 00:11:34,320
at siggraph three years ago with a

00:11:31,920 --> 00:11:37,839
proposal that we made

00:11:34,320 --> 00:11:37,839
that was well received and

00:11:37,920 --> 00:11:43,200
based on that we were able to spin up a

00:11:41,760 --> 00:11:46,880
v2 working group

00:11:43,200 --> 00:11:50,399
uh consisting of members from

00:11:46,880 --> 00:11:51,279
most of the major companies in vfx and

00:11:50,399 --> 00:11:53,690
entertainment

00:11:51,279 --> 00:11:55,200
and autodesk was able to

00:11:53,690 --> 00:11:58,639
[Music]

00:11:55,200 --> 00:11:59,279
support uh patrick uh bernard lefeve and

00:11:58,639 --> 00:12:03,440
myself

00:11:59,279 --> 00:12:05,519
to work full-time on this project

00:12:03,440 --> 00:12:07,040
so there were a number of you know it's

00:12:05,519 --> 00:12:11,040
been 10 years since

00:12:07,040 --> 00:12:15,200
the first um open clear i o release

00:12:11,040 --> 00:12:17,279
and a lot has changed in that time

00:12:15,200 --> 00:12:19,040
these four trends in particular

00:12:17,279 --> 00:12:22,320
influence the

00:12:19,040 --> 00:12:25,760
v2 feature set so firstly the increasing

00:12:22,320 --> 00:12:27,279
importance of gpus uh including for

00:12:25,760 --> 00:12:30,720
rendering final frames

00:12:27,279 --> 00:12:33,760
um also the the

00:12:30,720 --> 00:12:38,160
the fact that aces has had a tremendous

00:12:33,760 --> 00:12:42,000
influence on vfx workflows and the way

00:12:38,160 --> 00:12:44,399
color is handled also

00:12:42,000 --> 00:12:45,680
color management has become more complex

00:12:44,399 --> 00:12:47,519
as

00:12:45,680 --> 00:12:50,399
the industry wrestles with lots of

00:12:47,519 --> 00:12:53,200
different proprietary color spaces

00:12:50,399 --> 00:12:54,560
and the arrival of hdr television and so

00:12:53,200 --> 00:12:57,360
forth

00:12:54,560 --> 00:12:58,240
and finally that openclario is is also

00:12:57,360 --> 00:13:03,120
being used in

00:12:58,240 --> 00:13:03,120
industries adjacent to visual effects

00:13:03,839 --> 00:13:08,240
we had a couple of high-level design

00:13:05,839 --> 00:13:10,560
goals for the project first is that

00:13:08,240 --> 00:13:11,680
existing config files should continue to

00:13:10,560 --> 00:13:14,240
work

00:13:11,680 --> 00:13:15,200
and second that it should be simple to

00:13:14,240 --> 00:13:18,399
update

00:13:15,200 --> 00:13:20,560
existing apps to the new api

00:13:18,399 --> 00:13:22,880
and we feel that we've met both of those

00:13:20,560 --> 00:13:22,880
goals

00:13:23,279 --> 00:13:26,639
so i'm going to give you a quick

00:13:25,920 --> 00:13:29,920
overview

00:13:26,639 --> 00:13:29,920
of new features

00:13:30,399 --> 00:13:35,120
we don't have time to cover them all but

00:13:33,279 --> 00:13:38,480
you could go to our website

00:13:35,120 --> 00:13:40,240
to see a a a

00:13:38,480 --> 00:13:43,279
more complete list of of the new

00:13:40,240 --> 00:13:46,079
features and also we wrote a

00:13:43,279 --> 00:13:46,800
uh an extensive paper for digit pro that

00:13:46,079 --> 00:13:49,120
goes into

00:13:46,800 --> 00:13:50,720
some of the background behind the new

00:13:49,120 --> 00:13:53,839
features so we encourage you to check

00:13:50,720 --> 00:13:53,839
that out as well

00:13:54,399 --> 00:13:59,279
so aces a lot of

00:13:57,600 --> 00:14:02,160
a lot of the new features are related to

00:13:59,279 --> 00:14:04,560
aces and a lot of the people that uh

00:14:02,160 --> 00:14:06,160
work on openclario are also involved in

00:14:04,560 --> 00:14:09,440
aces project

00:14:06,160 --> 00:14:10,560
the way i think of it is uh aces is sort

00:14:09,440 --> 00:14:13,680
of the

00:14:10,560 --> 00:14:15,440
the what of you know what what should

00:14:13,680 --> 00:14:17,120
the color transforms be what is the

00:14:15,440 --> 00:14:20,160
color science

00:14:17,120 --> 00:14:21,519
um you know what is the color pipeline

00:14:20,160 --> 00:14:25,440
that should be used and

00:14:21,519 --> 00:14:28,079
oco ocio is sort of like the how it's

00:14:25,440 --> 00:14:30,079
okay we have this uh set of color

00:14:28,079 --> 00:14:32,399
transforms we want to apply

00:14:30,079 --> 00:14:34,320
how should we apply them in vfx software

00:14:32,399 --> 00:14:37,199
and

00:14:34,320 --> 00:14:38,320
so a number of our new features are asus

00:14:37,199 --> 00:14:40,639
related

00:14:38,320 --> 00:14:42,959
um many of the people in vfx who

00:14:40,639 --> 00:14:44,160
encounter aces or use aces do so through

00:14:42,959 --> 00:14:47,279
the excellent

00:14:44,160 --> 00:14:50,560
uh ocio config for aces

00:14:47,279 --> 00:14:53,839
which was created by hp dweeker and uh

00:14:50,560 --> 00:14:55,600
updated for aces 1.1 and 1.2 by thomas

00:14:53,839 --> 00:14:58,560
manson cal

00:14:55,600 --> 00:14:59,519
and that is uh that has been uh hugely

00:14:58,560 --> 00:15:01,920
successful

00:14:59,519 --> 00:15:02,720
there are some edge cases um where we've

00:15:01,920 --> 00:15:06,320
identified

00:15:02,720 --> 00:15:08,959
problems uh and those are related to the

00:15:06,320 --> 00:15:11,680
limitations inherent in 3d luts and so

00:15:08,959 --> 00:15:14,160
for ocio v2 we've made it possible to

00:15:11,680 --> 00:15:16,800
implement the asus config

00:15:14,160 --> 00:15:18,240
without relying on 3d luts and that

00:15:16,800 --> 00:15:21,120
allows the transforms to

00:15:18,240 --> 00:15:21,920
remain faithful over you know a huge

00:15:21,120 --> 00:15:25,440
exposure

00:15:21,920 --> 00:15:28,959
range another aces related feature

00:15:25,440 --> 00:15:31,199
is the academy common lut format

00:15:28,959 --> 00:15:34,959
so this is uh something that was a big

00:15:31,199 --> 00:15:38,800
part of the recent aces 1.2 release

00:15:34,959 --> 00:15:41,440
it's similar to opencl in that it allows

00:15:38,800 --> 00:15:43,519
you to construct a pipeline of

00:15:41,440 --> 00:15:46,000
basic sort of operators or building

00:15:43,519 --> 00:15:51,680
blocks that are things like

00:15:46,000 --> 00:15:54,959
1d lots 3d lust matrices ascdl etc

00:15:51,680 --> 00:15:56,399
it's very well documented there's a

00:15:54,959 --> 00:15:58,480
thorough set of unit tests in

00:15:56,399 --> 00:16:01,600
opencolorio

00:15:58,480 --> 00:16:03,440
and there's actually a a

00:16:01,600 --> 00:16:05,440
commonly format implementation working

00:16:03,440 --> 00:16:07,680
group that meets every

00:16:05,440 --> 00:16:09,519
uh every other tuesday as part of the

00:16:07,680 --> 00:16:11,839
aces virtual working groups

00:16:09,519 --> 00:16:13,519
and we encourage you to get involved

00:16:11,839 --> 00:16:15,440
with that if you're interested in clf

00:16:13,519 --> 00:16:15,920
but we have full read and write support

00:16:15,440 --> 00:16:18,480
now

00:16:15,920 --> 00:16:20,399
in opencolorio which uh which is great

00:16:18,480 --> 00:16:23,839
and which i think will

00:16:20,399 --> 00:16:23,839
will help adoption

00:16:24,639 --> 00:16:29,279
a number of the other new features are

00:16:26,320 --> 00:16:32,399
around improving the user experience

00:16:29,279 --> 00:16:35,199
so you know the the asus config for

00:16:32,399 --> 00:16:36,000
example has over 300 color spaces and so

00:16:35,199 --> 00:16:39,199
that can lead to

00:16:36,000 --> 00:16:39,600
some pretty overwhelming menus and so

00:16:39,199 --> 00:16:42,639
we've

00:16:39,600 --> 00:16:45,360
we've added new features to be able to

00:16:42,639 --> 00:16:46,959
group color spaces by category to use

00:16:45,360 --> 00:16:49,519
hierarchical menus

00:16:46,959 --> 00:16:51,279
to hide color spaces if you want to keep

00:16:49,519 --> 00:16:53,120
them in the config but not have them in

00:16:51,279 --> 00:16:56,079
the menus

00:16:53,120 --> 00:16:59,120
we've also added some new uh rules so

00:16:56,079 --> 00:17:02,720
there's a file rule system that

00:16:59,120 --> 00:17:05,520
brings more power to how you assign

00:17:02,720 --> 00:17:06,559
a good default color spaces based on the

00:17:05,520 --> 00:17:10,240
file

00:17:06,559 --> 00:17:12,720
path or extension

00:17:10,240 --> 00:17:14,160
there's viewing rules which help

00:17:12,720 --> 00:17:16,000
applications

00:17:14,160 --> 00:17:18,000
decide which views are most appropriate

00:17:16,000 --> 00:17:19,760
for giving color space

00:17:18,000 --> 00:17:21,760
and finally we've got a lot of

00:17:19,760 --> 00:17:23,760
application best practice code to kind

00:17:21,760 --> 00:17:26,959
of illustrate how the new features

00:17:23,760 --> 00:17:30,000
uh work and to provide examples for

00:17:26,959 --> 00:17:30,000
application developers

00:17:30,880 --> 00:17:34,160
one of the the big color science related

00:17:33,200 --> 00:17:38,000
features is

00:17:34,160 --> 00:17:41,039
display color spaces so in oco v1

00:17:38,000 --> 00:17:43,679
there was basically one color space that

00:17:41,039 --> 00:17:45,600
did the entire transformation from scene

00:17:43,679 --> 00:17:46,640
linear reference space to the display

00:17:45,600 --> 00:17:49,440
space

00:17:46,640 --> 00:17:50,000
in ocean ob2 it's possible to break that

00:17:49,440 --> 00:17:53,360
down

00:17:50,000 --> 00:17:55,440
into a combination of a view transform

00:17:53,360 --> 00:17:56,799
to a display reference space and then a

00:17:55,440 --> 00:18:00,160
display color space

00:17:56,799 --> 00:18:02,640
and this makes it

00:18:00,160 --> 00:18:04,080
it brings ocio in line with a lot of

00:18:02,640 --> 00:18:06,720
other

00:18:04,080 --> 00:18:07,919
color science initiatives such as aces

00:18:06,720 --> 00:18:11,520
such as

00:18:07,919 --> 00:18:13,600
the hdr television standards

00:18:11,520 --> 00:18:15,360
and it also facilitates other benefits

00:18:13,600 --> 00:18:15,760
like the ability to convert from one

00:18:15,360 --> 00:18:17,440
color

00:18:15,760 --> 00:18:18,880
one display color space to another

00:18:17,440 --> 00:18:21,679
without having to invert

00:18:18,880 --> 00:18:21,679
a view transform

00:18:24,320 --> 00:18:30,559
related to displays uh so

00:18:28,080 --> 00:18:32,160
as you know a lot of the sort of de

00:18:30,559 --> 00:18:34,400
facto standard for

00:18:32,160 --> 00:18:35,679
monitor profiles in color management is

00:18:34,400 --> 00:18:38,559
based on icc

00:18:35,679 --> 00:18:40,640
profiles so on mac and on windows you

00:18:38,559 --> 00:18:43,440
can ask the operating system for a

00:18:40,640 --> 00:18:46,480
profile that describes the monitor

00:18:43,440 --> 00:18:48,000
as more and more monitors are why gamut

00:18:46,480 --> 00:18:49,120
monitors the assumption that everything

00:18:48,000 --> 00:18:52,000
is srgb

00:18:49,120 --> 00:18:53,280
becomes kind of less and less relevant

00:18:52,000 --> 00:18:56,320
and so now there is

00:18:53,280 --> 00:18:57,280
essentially a bridge uh between icc and

00:18:56,320 --> 00:19:00,960
open clario

00:18:57,280 --> 00:19:01,280
so for config authors that want to they

00:19:00,960 --> 00:19:04,320
can

00:19:01,280 --> 00:19:06,400
they can provide a way to link to an icc

00:19:04,320 --> 00:19:07,520
profile and for applications that want

00:19:06,400 --> 00:19:11,360
to they can use

00:19:07,520 --> 00:19:15,520
ocio to emulate what would be seen in

00:19:11,360 --> 00:19:15,520
an icc based application

00:19:16,320 --> 00:19:20,000
so with that i'm going to turn it over

00:19:18,080 --> 00:19:23,760
to my colleague patrick codull

00:19:20,000 --> 00:19:27,360
to talk about the new gpu renderer

00:19:23,760 --> 00:19:30,320
thanks doug now i will uh

00:19:27,360 --> 00:19:32,880
my a few slides to present you some very

00:19:30,320 --> 00:19:35,919
important feature for oco v2

00:19:32,880 --> 00:19:39,600
uh more related to a software part

00:19:35,919 --> 00:19:43,360
but which are also critical improvements

00:19:39,600 --> 00:19:45,200
so for ocio provides a flexible

00:19:43,360 --> 00:19:46,080
processing model that consists of a

00:19:45,200 --> 00:19:49,200
pipeline of

00:19:46,080 --> 00:19:51,919
magical mathematical operators

00:19:49,200 --> 00:19:54,080
in oco v1 the cpu rendering engine

00:19:51,919 --> 00:19:55,120
evaluated the chain of operators

00:19:54,080 --> 00:19:58,160
precisely

00:19:55,120 --> 00:19:58,480
but the gpu rendering engine converted

00:19:58,160 --> 00:20:00,960
the

00:19:58,480 --> 00:20:02,240
operator pipeline into an approximate

00:20:00,960 --> 00:20:05,520
one

00:20:02,240 --> 00:20:08,400
for technical details mainly it was

00:20:05,520 --> 00:20:08,799
the gpu pipeline was replacing all the

00:20:08,400 --> 00:20:12,400
lut

00:20:08,799 --> 00:20:16,159
by one single 3d luts with all the

00:20:12,400 --> 00:20:17,600
corresponding approximations in ocu v2

00:20:16,159 --> 00:20:19,760
the gpu rendering

00:20:17,600 --> 00:20:20,799
renderer has been completely replaced

00:20:19,760 --> 00:20:23,919
with one that

00:20:20,799 --> 00:20:26,480
implements all the operators

00:20:23,919 --> 00:20:28,720
and is able to process pixel as the cpu

00:20:26,480 --> 00:20:28,720
does

00:20:30,720 --> 00:20:34,320
the image saw the result of testing done

00:20:33,360 --> 00:20:38,000
at sony picture

00:20:34,320 --> 00:20:40,400
image works the lower on the

00:20:38,000 --> 00:20:41,679
the result on the lower right shows an

00:20:40,400 --> 00:20:44,559
amplified difference

00:20:41,679 --> 00:20:45,919
image between the cpu result and the

00:20:44,559 --> 00:20:48,559
oclu v1

00:20:45,919 --> 00:20:50,320
gpu result which indicates significant

00:20:48,559 --> 00:20:52,720
errors

00:20:50,320 --> 00:20:54,080
the result on the upper right shows the

00:20:52,720 --> 00:20:57,120
same comparison

00:20:54,080 --> 00:21:00,320
using the oco v2 gpu renderer

00:20:57,120 --> 00:21:04,559
with the black image indicating a

00:21:00,320 --> 00:21:04,559
precise match to the cpu

00:21:05,679 --> 00:21:12,559
what is now important to to mention

00:21:08,960 --> 00:21:15,840
the gpu public api changed a lot

00:21:12,559 --> 00:21:19,200
since ociu now needs to upload

00:21:15,840 --> 00:21:19,200
any number of texture

00:21:19,760 --> 00:21:24,240
in your color transformation you can

00:21:22,159 --> 00:21:26,559
have any number of flats

00:21:24,240 --> 00:21:30,080
and all these slots are now converted to

00:21:26,559 --> 00:21:32,000
1d 2d or 3d textures

00:21:30,080 --> 00:21:33,120
however it's allow much more

00:21:32,000 --> 00:21:36,720
customizations

00:21:33,120 --> 00:21:39,120
and helper class provides an easy opengl

00:21:36,720 --> 00:21:42,000
integration

00:21:39,120 --> 00:21:42,400
these two aspects are really important

00:21:42,000 --> 00:21:46,640
to

00:21:42,400 --> 00:21:49,520
any gpu integration in any kind of apps

00:21:46,640 --> 00:21:51,120
because there are always specific needs

00:21:49,520 --> 00:21:52,880
or limitations

00:21:51,120 --> 00:21:54,159
so you need to be able to fully

00:21:52,880 --> 00:21:56,880
customize

00:21:54,159 --> 00:21:58,559
the information you received but at the

00:21:56,880 --> 00:22:02,559
same time

00:21:58,559 --> 00:22:05,120
some integration are using

00:22:02,559 --> 00:22:07,200
directly opengl so we provide upper

00:22:05,120 --> 00:22:09,200
class to have a very seamless

00:22:07,200 --> 00:22:10,720
integration for that kind of

00:22:09,200 --> 00:22:13,679
applications

00:22:10,720 --> 00:22:14,240
and one example is the known ocio

00:22:13,679 --> 00:22:17,280
display

00:22:14,240 --> 00:22:20,000
command line tools which is using this

00:22:17,280 --> 00:22:20,000
helper class

00:22:21,200 --> 00:22:26,080
processing improvement so many of our

00:22:24,240 --> 00:22:27,520
processing improvements are also being

00:22:26,080 --> 00:22:30,400
made

00:22:27,520 --> 00:22:31,200
due to a number of optimizations such as

00:22:30,400 --> 00:22:35,520
additional

00:22:31,200 --> 00:22:38,320
use of ssc vector and toxins in success

00:22:35,520 --> 00:22:41,840
cpu pixel conversions are now up to 20

00:22:38,320 --> 00:22:41,840
times faster

00:22:42,240 --> 00:22:47,600
just to highlight that the sse

00:22:44,320 --> 00:22:51,039
integration was already done in oco v1

00:22:47,600 --> 00:22:54,559
but we really enhanced the support for

00:22:51,039 --> 00:22:58,400
all existing ups and new apps

00:22:54,559 --> 00:23:00,880
so now all apps have an ssc support

00:22:58,400 --> 00:23:02,080
and if your processor does not support

00:23:00,880 --> 00:23:06,240
ssc then it's

00:23:02,080 --> 00:23:09,440
automatically automatically disabled

00:23:06,240 --> 00:23:11,520
auto support integer pixel buffers in

00:23:09,440 --> 00:23:14,720
addition to floating point

00:23:11,520 --> 00:23:16,320
in many cases source image file formats

00:23:14,720 --> 00:23:18,559
are integer based

00:23:16,320 --> 00:23:20,000
and the new capability brings

00:23:18,559 --> 00:23:22,880
performance improvements

00:23:20,000 --> 00:23:25,440
for example applications no longer needs

00:23:22,880 --> 00:23:28,880
to pre-convert buffer to floating points

00:23:25,440 --> 00:23:28,880
this is a huge improvement

00:23:29,440 --> 00:23:32,640
improved transform pipeline optimization

00:23:32,080 --> 00:23:34,320
also

00:23:32,640 --> 00:23:36,640
contributes to the performance

00:23:34,320 --> 00:23:39,679
improvement for example ocio is now able

00:23:36,640 --> 00:23:41,600
to generate an equivalent forward lot

00:23:39,679 --> 00:23:43,120
for an inverse slot including three

00:23:41,600 --> 00:23:45,520
deletes

00:23:43,120 --> 00:23:46,400
the various optimizations are also now

00:23:45,520 --> 00:23:49,200
controllable

00:23:46,400 --> 00:23:50,799
by the public api or via an environment

00:23:49,200 --> 00:23:53,600
variable

00:23:50,799 --> 00:23:54,880
this later point is extremely important

00:23:53,600 --> 00:23:58,480
if you want to debug

00:23:54,880 --> 00:24:01,279
something you can completely disable

00:23:58,480 --> 00:24:01,279
optimizations

00:24:02,320 --> 00:24:07,440
a new cache system has been introduced

00:24:04,640 --> 00:24:10,000
for ocio processor instances

00:24:07,440 --> 00:24:12,159
in fact the pull request will be in in a

00:24:10,000 --> 00:24:15,200
few days but it's really close

00:24:12,159 --> 00:24:17,279
this should facilitate improved

00:24:15,200 --> 00:24:19,279
performance in applications

00:24:17,279 --> 00:24:20,799
that need to play back a timeline of

00:24:19,279 --> 00:24:23,840
clip that each

00:24:20,799 --> 00:24:27,279
require different color processing

00:24:23,840 --> 00:24:27,279
due to context variables

00:24:27,840 --> 00:24:32,880
special attention not yet

00:24:31,039 --> 00:24:34,640
a special attention was given to

00:24:32,880 --> 00:24:36,720
preventing contacts variable from

00:24:34,640 --> 00:24:39,760
invalidating the cache unless they

00:24:36,720 --> 00:24:43,279
directly affect the result

00:24:39,760 --> 00:24:46,559
yes command line tools thank you

00:24:43,279 --> 00:24:48,799
michael ocio has always had a very

00:24:46,559 --> 00:24:49,840
useful collection of command line tools

00:24:48,799 --> 00:24:52,400
and they too provide

00:24:49,840 --> 00:24:54,159
interesting new capabilities i will not

00:24:52,400 --> 00:24:56,240
list all command line tools but just

00:24:54,159 --> 00:24:59,440
highlight some of them

00:24:56,240 --> 00:25:00,480
ocio checklist also allows sending a

00:24:59,440 --> 00:25:03,760
numeric

00:25:00,480 --> 00:25:04,320
rgb value through a lut file which is

00:25:03,760 --> 00:25:07,440
often

00:25:04,320 --> 00:25:08,159
used useful to troubleshoot problems it

00:25:07,440 --> 00:25:11,840
also

00:25:08,159 --> 00:25:12,799
checks the let's syntax for errors ocl

00:25:11,840 --> 00:25:14,640
writes

00:25:12,799 --> 00:25:16,559
will build an aussie processor from

00:25:14,640 --> 00:25:19,200
argument such as

00:25:16,559 --> 00:25:21,039
source and destination color space and

00:25:19,200 --> 00:25:24,880
then serialize the resulting

00:25:21,039 --> 00:25:25,200
operators in an xml file in either clf

00:25:24,880 --> 00:25:28,559
or

00:25:25,200 --> 00:25:30,080
ctf format this allows one to see the

00:25:28,559 --> 00:25:33,039
exact operators

00:25:30,080 --> 00:25:34,480
ocl is using to perform a specific color

00:25:33,039 --> 00:25:38,559
space conversion

00:25:34,480 --> 00:25:43,120
and is very useful when troubleshooting

00:25:38,559 --> 00:25:45,679
one i have added is ocl display can now

00:25:43,120 --> 00:25:46,400
it's a v1 command line tool but we

00:25:45,679 --> 00:25:48,720
improve it

00:25:46,400 --> 00:25:51,200
to print the fragment shader program and

00:25:48,720 --> 00:25:53,039
select the optimization level

00:25:51,200 --> 00:25:55,200
also with the perspective to debug

00:25:53,039 --> 00:25:58,960
something

00:25:55,200 --> 00:25:59,760
ocl mac clf will convert any of the lot

00:25:58,960 --> 00:26:03,840
formats

00:25:59,760 --> 00:26:06,400
that ocio supports into an academy ac's

00:26:03,840 --> 00:26:09,120
command lut file format

00:26:06,400 --> 00:26:11,200
and in addition is able to prepend and

00:26:09,120 --> 00:26:12,000
postpone the necessary color space

00:26:11,200 --> 00:26:16,240
conversions

00:26:12,000 --> 00:26:19,520
from and to aces 2065-1

00:26:16,240 --> 00:26:22,240
to the color space expected by the lut

00:26:19,520 --> 00:26:22,960
in order to build an assist compliant

00:26:22,240 --> 00:26:26,000
lut

00:26:22,960 --> 00:26:29,760
modification transform

00:26:26,000 --> 00:26:32,400
ocl convert which is a tool from v1

00:26:29,760 --> 00:26:33,600
that is used to process images through

00:26:32,400 --> 00:26:36,480
ocio

00:26:33,600 --> 00:26:37,400
now is able to process using gpu and

00:26:36,480 --> 00:26:41,279
finally

00:26:37,400 --> 00:26:44,400
oceopath a new command line tool for v2

00:26:41,279 --> 00:26:46,559
allows one to benchmark processing speed

00:26:44,400 --> 00:26:48,559
on a given system and through a given

00:26:46,559 --> 00:26:53,520
color space conversion

00:26:48,559 --> 00:26:55,840
i heavily use that last tool to uh

00:26:53,520 --> 00:26:58,720
check the all the performance

00:26:55,840 --> 00:26:58,720
improvement we did

00:26:58,880 --> 00:27:03,520
next slide thank you many improvements

00:27:01,520 --> 00:27:04,640
have been made to improve the robustness

00:27:03,520 --> 00:27:07,200
of opencolorio

00:27:04,640 --> 00:27:08,159
so michaela mentioned some of them but

00:27:07,200 --> 00:27:11,520
just recap

00:27:08,159 --> 00:27:13,279
for everyone first of all we have

00:27:11,520 --> 00:27:16,080
increased the number of unit tests

00:27:13,279 --> 00:27:16,640
by more than tenfold with more than one

00:27:16,080 --> 00:27:20,720
thousand

00:27:16,640 --> 00:27:23,279
total tests and we continue to add some

00:27:20,720 --> 00:27:24,720
this is really important to guarantee

00:27:23,279 --> 00:27:28,640
the quality

00:27:24,720 --> 00:27:32,000
of the library in addition

00:27:28,640 --> 00:27:34,559
we are now we have now

00:27:32,000 --> 00:27:36,159
gpu unit tests in addition to the cpu

00:27:34,559 --> 00:27:38,480
and python ones

00:27:36,159 --> 00:27:41,440
this allows the gpu results to be

00:27:38,480 --> 00:27:43,919
compared against the cpu results

00:27:41,440 --> 00:27:45,440
this also is completely new with v2 we

00:27:43,919 --> 00:27:48,640
develop a gpu

00:27:45,440 --> 00:27:49,600
framework for dedicated to unit test so

00:27:48,640 --> 00:27:54,399
we can

00:27:49,600 --> 00:27:57,279
for any ops we can compare cpu and gpu

00:27:54,399 --> 00:28:00,480
and we also have a python framework to

00:27:57,279 --> 00:28:00,480
test a python api

00:28:01,039 --> 00:28:06,720
furthermore a suffix sophisticated

00:28:04,559 --> 00:28:08,240
continuous integration system is now in

00:28:06,720 --> 00:28:10,880
place valid

00:28:08,240 --> 00:28:11,679
uh to validate all pull requesting on

00:28:10,880 --> 00:28:14,159
github so

00:28:11,679 --> 00:28:16,240
michael explained hello to this new

00:28:14,159 --> 00:28:18,799
aspect but just to highlight that

00:28:16,240 --> 00:28:20,480
this system tests 10 linux build

00:28:18,799 --> 00:28:22,640
configurations

00:28:20,480 --> 00:28:24,159
5 mac configuration and 5 windows

00:28:22,640 --> 00:28:26,880
configurations

00:28:24,159 --> 00:28:27,919
as well as support static analysis and

00:28:26,880 --> 00:28:30,559
checking for

00:28:27,919 --> 00:28:31,840
dco sign off and contributor license

00:28:30,559 --> 00:28:33,760
agreement

00:28:31,840 --> 00:28:34,960
the two later points are extremely

00:28:33,760 --> 00:28:38,720
important for

00:28:34,960 --> 00:28:38,720
open source development

00:28:39,440 --> 00:28:46,399
it's just just

00:28:42,799 --> 00:28:48,720
a second it just to um highlight

00:28:46,399 --> 00:28:49,760
what improved robustness mean it means

00:28:48,720 --> 00:28:53,120
that

00:28:49,760 --> 00:28:56,559
you can rely on on branches

00:28:53,120 --> 00:28:59,600
on the github repo to be uh correct

00:28:56,559 --> 00:29:02,720
because we have way to enforce

00:28:59,600 --> 00:29:06,159
the quality of any merge code or

00:29:02,720 --> 00:29:09,919
changes unit tests and so on so this is

00:29:06,159 --> 00:29:12,320
really a major improvement for everyone

00:29:09,919 --> 00:29:13,760
so now i will let you uh let doug

00:29:12,320 --> 00:29:16,720
present you a

00:29:13,760 --> 00:29:16,720
cov209

00:29:22,640 --> 00:29:29,840
thank you patrick so it's um

00:29:27,039 --> 00:29:31,039
it's been a busy three years for us we

00:29:29,840 --> 00:29:34,399
were

00:29:31,039 --> 00:29:37,600
at uh open source day last siggraph uh

00:29:34,399 --> 00:29:39,840
saying that we uh showing road maps

00:29:37,600 --> 00:29:41,520
showing that we would be feature

00:29:39,840 --> 00:29:44,320
complete at this sig graph

00:29:41,520 --> 00:29:46,399
and i'm very happy to report that we are

00:29:44,320 --> 00:29:49,520
in fact feature complete

00:29:46,399 --> 00:29:51,440
and so opencolorio v2 is now ready to

00:29:49,520 --> 00:29:55,200
test

00:29:51,440 --> 00:29:58,480
here's the timeline so

00:29:55,200 --> 00:30:01,600
we're showing three years of feature

00:29:58,480 --> 00:30:04,640
development from 2017 to 2020 we're now

00:30:01,600 --> 00:30:07,360
feature complete which means

00:30:04,640 --> 00:30:09,120
the feature development work is now done

00:30:07,360 --> 00:30:13,120
there's a couple of

00:30:09,120 --> 00:30:15,919
pull requests that are still landing um

00:30:13,120 --> 00:30:17,279
last week and next week but for all

00:30:15,919 --> 00:30:20,720
intents and purposes

00:30:17,279 --> 00:30:23,760
it's v2 is now

00:30:20,720 --> 00:30:24,399
ready to test and so the next four

00:30:23,760 --> 00:30:27,440
months

00:30:24,399 --> 00:30:30,960
is uh dedicated to

00:30:27,440 --> 00:30:32,399
bug fixing stabilization uh refinement

00:30:30,960 --> 00:30:34,960
of features based on

00:30:32,399 --> 00:30:36,240
feedback from developers and people

00:30:34,960 --> 00:30:39,679
testing

00:30:36,240 --> 00:30:42,159
and then we will make a a

00:30:39,679 --> 00:30:43,679
an official stable v2 release at the end

00:30:42,159 --> 00:30:46,720
of this year

00:30:43,679 --> 00:30:50,159
and open clario v2 is part

00:30:46,720 --> 00:30:54,159
of the vfx reference platform for

00:30:50,159 --> 00:30:54,559
calendar year 2021 so we hope that you

00:30:54,159 --> 00:30:57,679
will

00:30:54,559 --> 00:30:59,919
start seeing v2 in

00:30:57,679 --> 00:31:04,480
the applications you know and love

00:30:59,919 --> 00:31:07,600
starting next year

00:31:04,480 --> 00:31:08,480
so we'd like people to get involved this

00:31:07,600 --> 00:31:11,120
is a great

00:31:08,480 --> 00:31:12,799
time to get involved with the project we

00:31:11,120 --> 00:31:15,200
could really use your

00:31:12,799 --> 00:31:17,519
your input and your help code is

00:31:15,200 --> 00:31:21,679
available in the master branch

00:31:17,519 --> 00:31:22,480
on github as michael mentioned we have a

00:31:21,679 --> 00:31:25,519
new

00:31:22,480 --> 00:31:28,720
website and documentation uh

00:31:25,519 --> 00:31:30,399
and it discusses some of the new

00:31:28,720 --> 00:31:32,640
well it discusses all of the new v2

00:31:30,399 --> 00:31:34,880
features um

00:31:32,640 --> 00:31:37,440
it's a work in progress but there's

00:31:34,880 --> 00:31:38,880
information there to get you started

00:31:37,440 --> 00:31:40,880
we'd like your even if you're not a

00:31:38,880 --> 00:31:45,120
software developer we'd like your help

00:31:40,880 --> 00:31:48,799
testing writing tutorials

00:31:45,120 --> 00:31:50,559
you can um look at the coordinates here

00:31:48,799 --> 00:31:54,240
to figure out how to get involved

00:31:50,559 --> 00:31:57,200
using either the opencl forum

00:31:54,240 --> 00:32:00,159
forums on aswf or our slack instance

00:31:57,200 --> 00:32:03,200
which is very active

00:32:00,159 --> 00:32:07,440
and finally

00:32:03,200 --> 00:32:10,240
i'd like to um next slide thank you

00:32:07,440 --> 00:32:11,519
so this has been a big effort the

00:32:10,240 --> 00:32:15,840
development of v2

00:32:11,519 --> 00:32:18,640
um it's involved contributions from

00:32:15,840 --> 00:32:20,000
uh both individuals and groups so in

00:32:18,640 --> 00:32:20,720
terms of the individuals who have

00:32:20,000 --> 00:32:22,960
contributed

00:32:20,720 --> 00:32:24,880
michael has done a huge amount of work

00:32:22,960 --> 00:32:26,640
uh not only the awesome new python

00:32:24,880 --> 00:32:30,480
bindings but the

00:32:26,640 --> 00:32:31,200
ci infrastructure and led the cii best

00:32:30,480 --> 00:32:33,919
practices

00:32:31,200 --> 00:32:35,760
and many other things made shu has been

00:32:33,919 --> 00:32:38,880
helping with the python binding

00:32:35,760 --> 00:32:41,919
testing um carol

00:32:38,880 --> 00:32:42,480
payne and sean cooper have been leading

00:32:41,919 --> 00:32:44,720
the

00:32:42,480 --> 00:32:45,679
the new website homepage and new

00:32:44,720 --> 00:32:49,440
documentation

00:32:45,679 --> 00:32:52,080
infrastructure we have um

00:32:49,440 --> 00:32:54,640
many people mario has done an amazing

00:32:52,080 --> 00:32:58,000
job with the new branding package

00:32:54,640 --> 00:33:00,240
we've got uh many people uh who are

00:32:58,000 --> 00:33:02,720
contributing to ocio for the first time

00:33:00,240 --> 00:33:04,000
over the past year so people like rashil

00:33:02,720 --> 00:33:08,159
gandhi

00:33:04,000 --> 00:33:10,240
ching ying lee simran brusher cipher

00:33:08,159 --> 00:33:11,519
many people are getting involved and i

00:33:10,240 --> 00:33:15,039
think that's a really

00:33:11,519 --> 00:33:17,360
um a really great sign uh

00:33:15,039 --> 00:33:18,159
indicative of the health of the project

00:33:17,360 --> 00:33:20,720
um

00:33:18,159 --> 00:33:21,679
i'd like to thank two groups uh in

00:33:20,720 --> 00:33:26,159
particular so

00:33:21,679 --> 00:33:29,200
first the oclv2 working group um

00:33:26,159 --> 00:33:32,480
you know we really appreciate the

00:33:29,200 --> 00:33:35,120
time that you guys spent in many

00:33:32,480 --> 00:33:37,279
uh many meetings talking about the new

00:33:35,120 --> 00:33:41,840
features and sharing your

00:33:37,279 --> 00:33:44,880
insight into how openclario is used

00:33:41,840 --> 00:33:47,919
it's been an invaluable

00:33:44,880 --> 00:33:51,919
resource for patrick and bernard and i

00:33:47,919 --> 00:33:52,960
to draw on and we thank you very much

00:33:51,919 --> 00:33:55,679
for that

00:33:52,960 --> 00:33:56,080
and finally i'd like to thank the maya

00:33:55,679 --> 00:33:58,960
and

00:33:56,080 --> 00:34:01,039
flame teams for supporting us for

00:33:58,960 --> 00:34:04,240
patrick and bernard and i

00:34:01,039 --> 00:34:05,760
so you didn't get to meet bernard lefeve

00:34:04,240 --> 00:34:07,519
today but he's been an amazing

00:34:05,760 --> 00:34:09,200
contributor over the past three years

00:34:07,519 --> 00:34:12,240
with patrick and i

00:34:09,200 --> 00:34:14,159
and we really want to thank uh the mayan

00:34:12,240 --> 00:34:16,560
flame teams for

00:34:14,159 --> 00:34:17,679
uh making this possible and for having

00:34:16,560 --> 00:34:21,359
the

00:34:17,679 --> 00:34:25,040
the vision to recognize the importance

00:34:21,359 --> 00:34:27,520
of this open source infrastructure that

00:34:25,040 --> 00:34:28,639
we all rely on not only open clario but

00:34:27,520 --> 00:34:31,440
other projects like

00:34:28,639 --> 00:34:33,520
usd and material acts any of the other

00:34:31,440 --> 00:34:36,480
aswff projects

00:34:33,520 --> 00:34:37,440
for having the vision to support that

00:34:36,480 --> 00:34:41,440
and to invest

00:34:37,440 --> 00:34:45,280
in keeping this these projects

00:34:41,440 --> 00:34:45,280
robust vibrant and healthy

00:34:45,520 --> 00:34:52,000
so with that um we hope you will

00:34:49,280 --> 00:34:52,800
uh enjoy v2 and and find a lot of cool

00:34:52,000 --> 00:34:56,320
things in it

00:34:52,800 --> 00:34:58,480
and i'd like to turn it over to

00:34:56,320 --> 00:35:02,320
carol payne from netflix to talk about

00:34:58,480 --> 00:35:05,440
the new documentation and website

00:35:02,320 --> 00:35:06,640
thanks doug hi everybody uh my name is

00:35:05,440 --> 00:35:08,640
carol payne and

00:35:06,640 --> 00:35:11,200
i work for netflix as an imaging

00:35:08,640 --> 00:35:15,440
specialist on our creative technologies

00:35:11,200 --> 00:35:16,079
team um and we all recognize the amazing

00:35:15,440 --> 00:35:18,800
amounts of

00:35:16,079 --> 00:35:20,320
work that have gone into open color iob

00:35:18,800 --> 00:35:22,560
2 over the last three years

00:35:20,320 --> 00:35:23,920
it's really been incredible to see

00:35:22,560 --> 00:35:26,960
everything that's happened

00:35:23,920 --> 00:35:29,359
um and with that comes

00:35:26,960 --> 00:35:30,000
you know a lot of changes and we

00:35:29,359 --> 00:35:33,040
realized

00:35:30,000 --> 00:35:35,520
that in order for

00:35:33,040 --> 00:35:36,640
our users of all kinds to be able to

00:35:35,520 --> 00:35:39,920
make the most use

00:35:36,640 --> 00:35:43,040
of the new features the iov2

00:35:39,920 --> 00:35:45,440
that we needed a documentation update

00:35:43,040 --> 00:35:47,359
and we needed to be able to uh you know

00:35:45,440 --> 00:35:48,480
put into writing all of the amazing work

00:35:47,359 --> 00:35:50,560
that's been done

00:35:48,480 --> 00:35:53,680
so that users could easily pick it up

00:35:50,560 --> 00:35:56,400
and get going without a lot of headache

00:35:53,680 --> 00:35:57,440
and have all that information at their

00:35:56,400 --> 00:36:00,079
fingertips

00:35:57,440 --> 00:36:00,560
so we did a couple things the first of

00:36:00,079 --> 00:36:03,599
which

00:36:00,560 --> 00:36:05,920
is a new landing page uh you know

00:36:03,599 --> 00:36:07,760
a little bit of a modern update with

00:36:05,920 --> 00:36:10,640
some nice new colors

00:36:07,760 --> 00:36:12,000
hopefully to make the information quick

00:36:10,640 --> 00:36:15,110
and clearly available

00:36:12,000 --> 00:36:16,240
for what's where and when

00:36:15,110 --> 00:36:18,720
[Music]

00:36:16,240 --> 00:36:19,680
we started thinking about how to

00:36:18,720 --> 00:36:22,960
approach

00:36:19,680 --> 00:36:25,359
the new documentation and came up

00:36:22,960 --> 00:36:26,720
with a system that we feel that ocio

00:36:25,359 --> 00:36:29,440
users really

00:36:26,720 --> 00:36:30,880
fall into three main categories

00:36:29,440 --> 00:36:32,160
obviously there's some overlap and

00:36:30,880 --> 00:36:34,880
things like that

00:36:32,160 --> 00:36:35,920
go back one side sorry michael i'm going

00:36:34,880 --> 00:36:37,680
to talk a little bit

00:36:35,920 --> 00:36:41,040
um but we really feel like they fall

00:36:37,680 --> 00:36:43,599
into a couple main categories um

00:36:41,040 --> 00:36:45,280
artists that are using it from a surface

00:36:43,599 --> 00:36:48,079
level application side

00:36:45,280 --> 00:36:50,160
um studios that are integrating it into

00:36:48,079 --> 00:36:52,240
their pipelines so pipeline tds and

00:36:50,160 --> 00:36:55,119
config authors

00:36:52,240 --> 00:36:56,960
and then developers who are integrating

00:36:55,119 --> 00:36:59,040
it into software applications that we've

00:36:56,960 --> 00:37:00,000
talked a lot about uh like maya and

00:36:59,040 --> 00:37:01,599
flame and

00:37:00,000 --> 00:37:03,440
all of the other amazing applications

00:37:01,599 --> 00:37:04,880
that support opencolorio

00:37:03,440 --> 00:37:07,119
so that's where we started and we

00:37:04,880 --> 00:37:10,560
realized we needed a pretty

00:37:07,119 --> 00:37:13,839
uh pretty big revamp of

00:37:10,560 --> 00:37:14,240
our entire documentation set so to that

00:37:13,839 --> 00:37:17,920
end

00:37:14,240 --> 00:37:21,280
we have moved to uh read the docs

00:37:17,920 --> 00:37:22,560
um and we want to go to the next slide

00:37:21,280 --> 00:37:25,040
thanks michael

00:37:22,560 --> 00:37:26,880
um yeah so our our base level

00:37:25,040 --> 00:37:28,240
documentation is now read the docs via

00:37:26,880 --> 00:37:30,800
rst and syncs

00:37:28,240 --> 00:37:32,079
um our api docs are built from the c

00:37:30,800 --> 00:37:34,800
plus plus headers

00:37:32,079 --> 00:37:36,560
um and using doxygen and breathe and

00:37:34,800 --> 00:37:39,760
also generating that rst

00:37:36,560 --> 00:37:42,960
for sphynx um and so it all lives um

00:37:39,760 --> 00:37:44,480
under one place now and the you know

00:37:42,960 --> 00:37:46,480
the main part a lot of the main parts of

00:37:44,480 --> 00:37:49,119
the documentation are handwritten

00:37:46,480 --> 00:37:50,560
by us and then the api docs are

00:37:49,119 --> 00:37:53,280
auto-generated

00:37:50,560 --> 00:37:53,839
so that's sort of the general philosophy

00:37:53,280 --> 00:37:57,119
that

00:37:53,839 --> 00:37:58,640
we took approaching this project is

00:37:57,119 --> 00:38:01,200
pretty similar to a lot of

00:37:58,640 --> 00:38:01,760
other documentation projects out there

00:38:01,200 --> 00:38:04,320
nothing

00:38:01,760 --> 00:38:05,520
too crazy or out in the wild but it has

00:38:04,320 --> 00:38:08,640
taken

00:38:05,520 --> 00:38:11,119
an amount of work to to move the

00:38:08,640 --> 00:38:13,760
infrastructure and get it up and going

00:38:11,119 --> 00:38:14,720
um we'd love for everybody to get

00:38:13,760 --> 00:38:18,640
involved

00:38:14,720 --> 00:38:20,720
and check it out and so

00:38:18,640 --> 00:38:23,440
it's still definitely a work in progress

00:38:20,720 --> 00:38:26,240
so as you navigate the new dantation

00:38:23,440 --> 00:38:26,800
um please you know take note of what you

00:38:26,240 --> 00:38:28,720
find

00:38:26,800 --> 00:38:30,400
there's still a couple things that are

00:38:28,720 --> 00:38:32,079
highlighted there that you know are

00:38:30,400 --> 00:38:35,280
still from v1

00:38:32,079 --> 00:38:37,599
or our you know works in progress uh we

00:38:35,280 --> 00:38:38,560
we know that we need a decent amount of

00:38:37,599 --> 00:38:41,040
work um

00:38:38,560 --> 00:38:42,880
in documenting the python api with

00:38:41,040 --> 00:38:44,480
examples and things like that for people

00:38:42,880 --> 00:38:46,560
to easily pick up

00:38:44,480 --> 00:38:48,000
um so we're going to be working on all

00:38:46,560 --> 00:38:49,599
of that

00:38:48,000 --> 00:38:51,359
um but yeah so if you want to go to the

00:38:49,599 --> 00:38:52,880
next slide just please get involved it's

00:38:51,359 --> 00:38:55,599
still a work in progress

00:38:52,880 --> 00:38:56,160
um if you have issues um that that you

00:38:55,599 --> 00:38:58,880
feel

00:38:56,160 --> 00:39:00,079
need addressed um feel free to log them

00:38:58,880 --> 00:39:03,599
on github

00:39:00,079 --> 00:39:06,640
or talk to us on our docs slack channel

00:39:03,599 --> 00:39:08,560
any of us will get back to you there and

00:39:06,640 --> 00:39:10,560
take appropriate action it's also a

00:39:08,560 --> 00:39:12,160
great place for you to get involved and

00:39:10,560 --> 00:39:14,720
ask questions

00:39:12,160 --> 00:39:15,680
about our new documentation or about a

00:39:14,720 --> 00:39:18,560
cio b2

00:39:15,680 --> 00:39:20,480
in general if things aren't clear if uh

00:39:18,560 --> 00:39:24,000
you know we're missing something

00:39:20,480 --> 00:39:25,839
um any feedback we will welcome at this

00:39:24,000 --> 00:39:29,040
point in time to really make

00:39:25,839 --> 00:39:32,160
the one the upgrade experience to v2

00:39:29,040 --> 00:39:35,599
smooth but also taking a real look at

00:39:32,160 --> 00:39:39,440
just overall how to

00:39:35,599 --> 00:39:42,320
get a new user onboarded to using ocio

00:39:39,440 --> 00:39:43,520
in whatever capacity is needed whether

00:39:42,320 --> 00:39:47,680
you're an artist

00:39:43,520 --> 00:39:50,400
config author or a software developer

00:39:47,680 --> 00:39:51,760
and i think that that is all i have to

00:39:50,400 --> 00:39:54,400
say about that

00:39:51,760 --> 00:39:56,640
thanks for being here guys um we have a

00:39:54,400 --> 00:39:59,760
couple questions so we're going to move

00:39:56,640 --> 00:40:03,040
directly into the q a section

00:39:59,760 --> 00:40:06,480
of the talk so please continue to put

00:40:03,040 --> 00:40:07,520
your uh questions in the q a box and

00:40:06,480 --> 00:40:10,560
we'll kind of

00:40:07,520 --> 00:40:12,400
go down the line and uh and uh

00:40:10,560 --> 00:40:13,680
answer them with you know the questions

00:40:12,400 --> 00:40:15,200
with the most upvotes

00:40:13,680 --> 00:40:17,520
and sort of in the order that they were

00:40:15,200 --> 00:40:21,040
received so we're going to start

00:40:17,520 --> 00:40:24,079
with a question from from rod bogart um

00:40:21,040 --> 00:40:26,079
can the 3d lut inversion occur on the

00:40:24,079 --> 00:40:28,480
gpu

00:40:26,079 --> 00:40:29,359
i'll take that one yeah uh thanks for

00:40:28,480 --> 00:40:33,440
the question rod

00:40:29,359 --> 00:40:36,640
the um the way that works is the

00:40:33,440 --> 00:40:39,760
3d lut is in is converted into

00:40:36,640 --> 00:40:40,800
an equivalent forward 3d lut using the

00:40:39,760 --> 00:40:44,079
cpu

00:40:40,800 --> 00:40:48,160
and then that's uploaded to the gpu

00:40:44,079 --> 00:40:52,160
and the gpu does a forward

00:40:48,160 --> 00:40:55,040
3d lut evaluation we found that that

00:40:52,160 --> 00:40:56,640
works quite well but we're uh we're

00:40:55,040 --> 00:40:56,960
interested in getting people's feedback

00:40:56,640 --> 00:40:59,680
from

00:40:56,960 --> 00:41:02,400
that um another thing that we should

00:40:59,680 --> 00:41:05,760
mention related to 3d luts is that the

00:41:02,400 --> 00:41:09,359
gpu now allows both tetrahedral

00:41:05,760 --> 00:41:11,040
and trilinear interpolation so

00:41:09,359 --> 00:41:12,640
that's that's another sort of

00:41:11,040 --> 00:41:15,200
improvement from

00:41:12,640 --> 00:41:18,839
from v1 because tetrahedral

00:41:15,200 --> 00:41:20,560
interpolation was not supported on the

00:41:18,839 --> 00:41:23,920
gpu great

00:41:20,560 --> 00:41:24,720
awesome uh the next one uh from steven

00:41:23,920 --> 00:41:27,440
shapiro

00:41:24,720 --> 00:41:29,119
uh is which major softwares the dcc

00:41:27,440 --> 00:41:33,200
vendors have already

00:41:29,119 --> 00:41:33,200
been testing ocio v2

00:41:33,680 --> 00:41:37,680
well certainly at autodesk a number of

00:41:35,839 --> 00:41:41,040
our product teams have been

00:41:37,680 --> 00:41:43,760
testing it um so

00:41:41,040 --> 00:41:45,359
um not sure if there's any other people

00:41:43,760 --> 00:41:48,480
here who can speak to

00:41:45,359 --> 00:41:50,240
uh to other dcc vendors i i know some of

00:41:48,480 --> 00:41:53,040
the studios have also been looking at it

00:41:50,240 --> 00:41:55,040
for some of their internal tools

00:41:53,040 --> 00:41:56,319
and we've gotten some feedback that uh

00:41:55,040 --> 00:41:58,800
you know foundries began

00:41:56,319 --> 00:41:59,760
investigating testing on their end as

00:41:58,800 --> 00:42:02,400
well um

00:41:59,760 --> 00:42:03,680
through the tsc and so it's it's

00:42:02,400 --> 00:42:04,240
starting to pick up but yeah there's

00:42:03,680 --> 00:42:06,240
been

00:42:04,240 --> 00:42:07,280
you know some ongoing studio testing

00:42:06,240 --> 00:42:09,680
probably for

00:42:07,280 --> 00:42:11,920
a year uh interestingly and related to

00:42:09,680 --> 00:42:13,520
the 3d lut one area that's been tested

00:42:11,920 --> 00:42:16,800
in production a bit is

00:42:13,520 --> 00:42:19,440
you can actually build oclv2

00:42:16,800 --> 00:42:21,359
use it to invert a 3d lut and then write

00:42:19,440 --> 00:42:23,920
that out to a lut file and then use that

00:42:21,359 --> 00:42:26,240
in ocl v1 and so that's been

00:42:23,920 --> 00:42:27,040
used a decent amount in production and

00:42:26,240 --> 00:42:29,040
has been pretty

00:42:27,040 --> 00:42:30,880
effective way to kind of see how that

00:42:29,040 --> 00:42:33,359
performs

00:42:30,880 --> 00:42:34,880
and silhouettes uh paul just mentioned

00:42:33,359 --> 00:42:37,359
in the chat that silhouette uh from

00:42:34,880 --> 00:42:40,160
boris fx has been looking at

00:42:37,359 --> 00:42:40,560
the new version as well yeah that's

00:42:40,160 --> 00:42:43,040
great

00:42:40,560 --> 00:42:44,079
uh now that we're you know feature

00:42:43,040 --> 00:42:45,839
complete

00:42:44,079 --> 00:42:47,280
to wrap up that question now is the time

00:42:45,839 --> 00:42:48,480
that we would really like to get in

00:42:47,280 --> 00:42:50,400
touch with

00:42:48,480 --> 00:42:52,160
all the major applications and new

00:42:50,400 --> 00:42:55,440
applications that are interested

00:42:52,160 --> 00:42:57,599
in integrating ocio and work with you

00:42:55,440 --> 00:42:59,680
over the next few months to

00:42:57,599 --> 00:43:01,680
make sure that everything is working as

00:42:59,680 --> 00:43:02,640
intended we anticipate catching some

00:43:01,680 --> 00:43:05,520
bugs

00:43:02,640 --> 00:43:06,560
and fixes and we need everybody's help

00:43:05,520 --> 00:43:08,000
to do that

00:43:06,560 --> 00:43:10,560
so the more that you can get in there

00:43:08,000 --> 00:43:14,079
and start to test things

00:43:10,560 --> 00:43:16,640
the better and let's see

00:43:14,079 --> 00:43:18,720
next from nick shaw when are there

00:43:16,640 --> 00:43:19,839
likely to be pre-built binaries or a

00:43:18,720 --> 00:43:22,960
simple installer

00:43:19,839 --> 00:43:25,200
so non-developers can install oci ob2 to

00:43:22,960 --> 00:43:28,400
test it

00:43:25,200 --> 00:43:30,240
so as we uh you know get closer to

00:43:28,400 --> 00:43:32,160
to a v2 release one of our initiatives

00:43:30,240 --> 00:43:33,440
will be to try to

00:43:32,160 --> 00:43:36,319
target you know a lot of package

00:43:33,440 --> 00:43:37,359
managers and from from various platforms

00:43:36,319 --> 00:43:39,920
as well as hopefully

00:43:37,359 --> 00:43:40,800
also um python package and index for the

00:43:39,920 --> 00:43:42,960
bindings to

00:43:40,800 --> 00:43:44,480
to ease that uh there's there's an

00:43:42,960 --> 00:43:44,880
initiative in the ci working group right

00:43:44,480 --> 00:43:47,359
now

00:43:44,880 --> 00:43:49,359
well one of the goals is to look at

00:43:47,359 --> 00:43:51,040
utilizing ci build artifacts

00:43:49,359 --> 00:43:52,560
uh to be able to distribute some of

00:43:51,040 --> 00:43:55,599
those uh you know as

00:43:52,560 --> 00:43:57,200
sort of a continuous deployment

00:43:55,599 --> 00:43:58,720
setup and so i think that will

00:43:57,200 --> 00:44:00,480
definitely be a goal

00:43:58,720 --> 00:44:02,960
um also mention that from the

00:44:00,480 --> 00:44:06,640
perspective of building the library

00:44:02,960 --> 00:44:10,800
we've introduced a new cmake variable or

00:44:06,640 --> 00:44:13,359
argument that's ocio build ext packages

00:44:10,800 --> 00:44:14,880
if you set this to all and run a build

00:44:13,359 --> 00:44:17,119
all the external dependencies

00:44:14,880 --> 00:44:19,040
can be pulled from upstream repos for

00:44:17,119 --> 00:44:21,200
you automatically to ease building

00:44:19,040 --> 00:44:22,160
it still requires building but it's just

00:44:21,200 --> 00:44:23,280
it's there for

00:44:22,160 --> 00:44:27,280
people that don't necessarily want to

00:44:23,280 --> 00:44:30,720
have to chase down all the dependencies

00:44:27,280 --> 00:44:33,760
great uh the next question is uh

00:44:30,720 --> 00:44:34,880
is the new studio config expected to be

00:44:33,760 --> 00:44:38,560
lut free

00:44:34,880 --> 00:44:38,560
as well as the reference config

00:44:40,160 --> 00:44:44,560
i think that's a goal but uh it remains

00:44:43,040 --> 00:44:45,040
to be seen whether that'll be possible

00:44:44,560 --> 00:44:46,640
they're

00:44:45,040 --> 00:44:48,160
you know there it's possible certainly

00:44:46,640 --> 00:44:50,880
that there will be some

00:44:48,160 --> 00:44:52,720
transforms that uh aren't supported yet

00:44:50,880 --> 00:44:54,720
in built-in transforms but that's

00:44:52,720 --> 00:44:55,920
it's also something it's an interesting

00:44:54,720 --> 00:44:57,839
case for

00:44:55,920 --> 00:44:59,680
finding new cases for new built-in

00:44:57,839 --> 00:45:04,240
transforms that the main ocl library

00:44:59,680 --> 00:45:06,400
could support

00:45:04,240 --> 00:45:09,520
same uh thanks rick for the other

00:45:06,400 --> 00:45:12,720
question um are the gpu and cpu paths

00:45:09,520 --> 00:45:12,720
bitwise identical

00:45:13,119 --> 00:45:16,839
well when you're doing floating point

00:45:14,800 --> 00:45:19,920
calculations it's hard to get

00:45:16,839 --> 00:45:20,960
bitwise matches so they're not going to

00:45:19,920 --> 00:45:22,960
be bitwise

00:45:20,960 --> 00:45:26,240
matches even if you did on two different

00:45:22,960 --> 00:45:27,920
gpus they wouldn't be bitwise matches so

00:45:26,240 --> 00:45:30,000
so that's not really feasible but

00:45:27,920 --> 00:45:33,680
they're extremely extremely close

00:45:30,000 --> 00:45:35,760
and the um there are now unit tests in

00:45:33,680 --> 00:45:36,480
place that actually compare the cpu and

00:45:35,760 --> 00:45:37,839
gpu

00:45:36,480 --> 00:45:40,640
results and make sure they're within a

00:45:37,839 --> 00:45:40,640
certain threshold

00:45:40,800 --> 00:45:47,200
okay are there

00:45:44,000 --> 00:45:50,240
any plans from from gene first law

00:45:47,200 --> 00:45:53,280
uh are there plans to target other gp

00:45:50,240 --> 00:45:57,200
gfx apis as well as opengl

00:45:53,280 --> 00:45:57,200
so cuda vulcan metal

00:45:57,760 --> 00:46:01,599
we've had some interest of people to

00:46:00,240 --> 00:46:03,920
contribute

00:46:01,599 --> 00:46:04,640
additional bindings along that line and

00:46:03,920 --> 00:46:06,480
if people

00:46:04,640 --> 00:46:08,240
if people have interest we would love to

00:46:06,480 --> 00:46:09,760
work with you and get your contributions

00:46:08,240 --> 00:46:12,560
in that area

00:46:09,760 --> 00:46:14,319
it looks like dennis wrote in there that

00:46:12,560 --> 00:46:16,880
they'll they're looking at contributing

00:46:14,319 --> 00:46:18,800
opencl support so already have a little

00:46:16,880 --> 00:46:21,440
bit of an answer there

00:46:18,800 --> 00:46:24,960
and just called sorry just to answer

00:46:21,440 --> 00:46:29,280
also that we try to build the api

00:46:24,960 --> 00:46:32,000
uh easy to integrate uh

00:46:29,280 --> 00:46:33,200
cuda vulcan and metal we put extra

00:46:32,000 --> 00:46:37,119
attention to

00:46:33,200 --> 00:46:40,240
to easier work so uh you have an example

00:46:37,119 --> 00:46:43,040
with opengl but we really decoupled

00:46:40,240 --> 00:46:46,720
the uh collect of information from the

00:46:43,040 --> 00:46:46,720
opengl implementation

00:46:50,160 --> 00:46:56,319
let's see um if a dcc tool already

00:46:54,240 --> 00:46:59,599
implements the opencolorio library

00:46:56,319 --> 00:47:02,560
will it be very difficult to update to

00:46:59,599 --> 00:47:02,560
the newer version

00:47:02,640 --> 00:47:05,920
one of our goals was to make that as

00:47:04,560 --> 00:47:09,760
simple as possible

00:47:05,920 --> 00:47:11,119
so we hope the answer is no it's

00:47:09,760 --> 00:47:12,400
certainly we're interested for your

00:47:11,119 --> 00:47:14,160
feedback on that

00:47:12,400 --> 00:47:16,720
the only area of the api that really

00:47:14,160 --> 00:47:18,960
changed dramatically was the gpu api

00:47:16,720 --> 00:47:21,520
and as patrick said that was kind of

00:47:18,960 --> 00:47:24,400
unavoidable given that the

00:47:21,520 --> 00:47:25,119
um you know we need to now allow

00:47:24,400 --> 00:47:26,800
updating

00:47:25,119 --> 00:47:29,920
you know uploading more than one texture

00:47:26,800 --> 00:47:33,280
onto the gpu and so forth but

00:47:29,920 --> 00:47:33,280
we think it should be straightforward

00:47:33,680 --> 00:47:39,839
and for the gpu integration you now have

00:47:36,839 --> 00:47:41,680
examples so i should help

00:47:39,839 --> 00:47:45,760
even if it's completely different you

00:47:41,680 --> 00:47:48,400
have command line tools we have a static

00:47:45,760 --> 00:47:48,800
we have helper classes so it should give

00:47:48,400 --> 00:47:51,040
you

00:47:48,800 --> 00:47:52,720
hints how to do it or to reduce them as

00:47:51,040 --> 00:47:55,200
is there's kind of two

00:47:52,720 --> 00:47:56,640
two aspects to upgrading so the first

00:47:55,200 --> 00:47:59,119
aspect is just

00:47:56,640 --> 00:48:00,880
getting the app up and running um

00:47:59,119 --> 00:48:02,880
basically with none of the new features

00:48:00,880 --> 00:48:04,480
just just taking advantage of the

00:48:02,880 --> 00:48:05,280
improved processing precision and so

00:48:04,480 --> 00:48:06,640
forth

00:48:05,280 --> 00:48:08,079
that and that we think should be

00:48:06,640 --> 00:48:09,839
straightforward but there still is work

00:48:08,079 --> 00:48:10,160
involved to implement the new features

00:48:09,839 --> 00:48:12,000
and

00:48:10,160 --> 00:48:14,160
and we want to emphasize the importance

00:48:12,000 --> 00:48:16,640
of that because a lot of the

00:48:14,160 --> 00:48:18,480
benefits like the user user experience

00:48:16,640 --> 00:48:21,520
improvements and so forth

00:48:18,480 --> 00:48:22,880
do rely on applications uh revisiting

00:48:21,520 --> 00:48:24,640
their ocio code and

00:48:22,880 --> 00:48:27,040
and implementing support for those new

00:48:24,640 --> 00:48:31,440
features

00:48:27,040 --> 00:48:34,400
so i leave a question from satish goda

00:48:31,440 --> 00:48:37,040
about support for web browser-based

00:48:34,400 --> 00:48:37,040
workflows

00:48:40,720 --> 00:48:43,920
yeah that uh that's a good question it

00:48:42,480 --> 00:48:47,200
came up also during

00:48:43,920 --> 00:48:50,000
the digipro presentation and we

00:48:47,200 --> 00:48:50,319
we haven't really looked at that um but

00:48:50,000 --> 00:48:52,480
it

00:48:50,319 --> 00:48:53,520
i agree it would be very interesting and

00:48:52,480 --> 00:48:55,680
and if you're

00:48:53,520 --> 00:48:57,440
if someone has a use case for that it'd

00:48:55,680 --> 00:48:58,400
be great to get you involved in the

00:48:57,440 --> 00:49:01,119
project

00:48:58,400 --> 00:49:01,760
um i will point out that the support for

00:49:01,119 --> 00:49:04,960
icc

00:49:01,760 --> 00:49:08,410
profiles is um

00:49:04,960 --> 00:49:10,559
is is perhaps the best way to

00:49:08,410 --> 00:49:13,839
[Music]

00:49:10,559 --> 00:49:15,440
do you know emulate what the brow

00:49:13,839 --> 00:49:17,440
some of the browsers are doing in terms

00:49:15,440 --> 00:49:20,400
of their color management

00:49:17,440 --> 00:49:20,400
we're tying into that

00:49:23,520 --> 00:49:27,520
noticing that we also have a question in

00:49:25,839 --> 00:49:29,359
the chat from rick sayer

00:49:27,520 --> 00:49:30,800
uh sort of following up on the lut

00:49:29,359 --> 00:49:34,240
inversion

00:49:30,800 --> 00:49:36,079
and rick is asking uh

00:49:34,240 --> 00:49:37,359
whether he said it would be great to

00:49:36,079 --> 00:49:40,400
allow a special ground

00:49:37,359 --> 00:49:43,119
truth mode which skips the

00:49:40,400 --> 00:49:43,839
quote make a forward lut to represent

00:49:43,119 --> 00:49:46,240
the inverse

00:49:43,839 --> 00:49:48,000
unquote applying the full inversion

00:49:46,240 --> 00:49:51,280
operation per pixel

00:49:48,000 --> 00:49:54,079
and that is possible uh

00:49:51,280 --> 00:49:55,760
so it's uh it's it's only available on

00:49:54,079 --> 00:49:57,920
the cpu because the

00:49:55,760 --> 00:49:59,440
nature of the calculation would be very

00:49:57,920 --> 00:50:01,440
in other words searching through

00:49:59,440 --> 00:50:02,640
the forward left to find the inverse

00:50:01,440 --> 00:50:05,200
very difficult to do

00:50:02,640 --> 00:50:08,000
in a shader language but it is available

00:50:05,200 --> 00:50:10,640
for cpu evaluations and there is

00:50:08,000 --> 00:50:12,640
uh an optimization setting that allows

00:50:10,640 --> 00:50:16,000
you to switch between

00:50:12,640 --> 00:50:18,640
the exact evaluation or the fast

00:50:16,000 --> 00:50:18,640
evaluation

00:50:18,800 --> 00:50:24,880
and rick was also asking

00:50:22,000 --> 00:50:26,960
is it is it possible to control the size

00:50:24,880 --> 00:50:28,880
of the intermediate lut

00:50:26,960 --> 00:50:30,800
that is currently a fixed size but that

00:50:28,880 --> 00:50:31,920
would be a simple pull request for

00:50:30,800 --> 00:50:35,440
someone to

00:50:31,920 --> 00:50:35,440
to allow that to be configurable

00:50:37,359 --> 00:50:40,960
awesome a question from from alex

00:50:40,160 --> 00:50:44,880
freestone

00:50:40,960 --> 00:50:47,280
uh this is one i think we also got at

00:50:44,880 --> 00:50:49,280
uh at digipro but uh what can we see in

00:50:47,280 --> 00:50:52,960
the future for version three

00:50:49,280 --> 00:50:55,839
of ocio forward thinkers

00:50:52,960 --> 00:50:57,040
good question yeah i mean at digipro i

00:50:55,839 --> 00:50:59,280
was saying that we

00:50:57,040 --> 00:51:00,800
you know we've been so immersed in

00:50:59,280 --> 00:51:01,599
getting v2 out the door that it's been

00:51:00,800 --> 00:51:03,920
hard to

00:51:01,599 --> 00:51:05,119
think about anything else so i would say

00:51:03,920 --> 00:51:08,240
uh

00:51:05,119 --> 00:51:09,839
and ask us uh next time i don't know if

00:51:08,240 --> 00:51:12,000
other people have suggestions

00:51:09,839 --> 00:51:13,599
uh what they would like to see for v3

00:51:12,000 --> 00:51:16,240
but

00:51:13,599 --> 00:51:17,520
we're in this i would say yeah if you

00:51:16,240 --> 00:51:20,880
have suggestions

00:51:17,520 --> 00:51:23,440
please please get involved but uh

00:51:20,880 --> 00:51:24,480
yeah we've still got um you know the the

00:51:23,440 --> 00:51:28,160
road to

00:51:24,480 --> 00:51:28,720
being done and released with with ociv2

00:51:28,160 --> 00:51:31,200
is still

00:51:28,720 --> 00:51:32,960
still ahead of us and so it's it's uh

00:51:31,200 --> 00:51:36,640
you know it's really working on getting

00:51:32,960 --> 00:51:40,960
uh solid and wrapped up and very stable

00:51:36,640 --> 00:51:40,960
is the future for now

00:51:44,000 --> 00:51:47,200
and uh zach lewis wants to know if the

00:51:46,240 --> 00:51:50,880
dw in

00:51:47,200 --> 00:51:53,920
hue correct dw3 stands for doug walker

00:51:50,880 --> 00:51:56,640
uh that may be that was uh that was one

00:51:53,920 --> 00:52:00,400
of the aces algorithms that

00:51:56,640 --> 00:52:04,800
is now implemented in ocio as well

00:52:00,400 --> 00:52:06,640
thank you zach for

00:52:04,800 --> 00:52:10,079
for your investigation of the source

00:52:06,640 --> 00:52:10,079
code we appreciate it

00:52:10,800 --> 00:52:14,400
yeah that's great uh

00:52:15,280 --> 00:52:23,119
zach also wants to know about ctf

00:52:19,760 --> 00:52:25,119
ctf is an interesting new feature so

00:52:23,119 --> 00:52:26,960
we were talking in the presentation

00:52:25,119 --> 00:52:30,480
about the common luck format

00:52:26,960 --> 00:52:33,200
which is part of the

00:52:30,480 --> 00:52:33,520
aces 1.2 release and so we fully support

00:52:33,200 --> 00:52:36,240
the

00:52:33,520 --> 00:52:38,319
the common left format that has a lot of

00:52:36,240 --> 00:52:40,240
nice operators like logarithms and

00:52:38,319 --> 00:52:43,520
things that make it possible to build

00:52:40,240 --> 00:52:45,599
luts for scene linear color spaces but

00:52:43,520 --> 00:52:46,720
it does not support all of the ocio

00:52:45,599 --> 00:52:48,960
features so

00:52:46,720 --> 00:52:50,720
there's an extension to clf which is

00:52:48,960 --> 00:52:53,760
called ctf

00:52:50,720 --> 00:52:56,079
that looks very similar it's an xml

00:52:53,760 --> 00:52:57,839
file format that's very similar to clf

00:52:56,079 --> 00:53:01,280
but it allows

00:52:57,839 --> 00:53:04,400
all openclario features to be serialized

00:53:01,280 --> 00:53:07,440
into this xml and so that's

00:53:04,400 --> 00:53:08,880
uh that's quite useful for a number of

00:53:07,440 --> 00:53:10,800
workflows where you may need to

00:53:08,880 --> 00:53:14,400
serialize a given

00:53:10,800 --> 00:53:16,079
ocio processor and send that to someone

00:53:14,400 --> 00:53:18,000
uh patrick mentioned that there's an

00:53:16,079 --> 00:53:19,599
ocio wright command line tool that

00:53:18,000 --> 00:53:22,000
allows you to

00:53:19,599 --> 00:53:23,680
do this basically so you give it like

00:53:22,000 --> 00:53:25,280
the sort the config the source and

00:53:23,680 --> 00:53:27,280
destination color space and it will

00:53:25,280 --> 00:53:30,160
write out an xml file

00:53:27,280 --> 00:53:34,079
that gives you the exact uh

00:53:30,160 --> 00:53:34,079
implementation of that processor

00:53:35,680 --> 00:53:40,640
an interesting project an interesting

00:53:39,280 --> 00:53:44,480
side effect

00:53:40,640 --> 00:53:48,480
is that you can output a clf or ctf

00:53:44,480 --> 00:53:50,960
and dig inside the color transformation

00:53:48,480 --> 00:53:52,240
to understand each step so for debugging

00:53:50,960 --> 00:53:54,839
purpose or

00:53:52,240 --> 00:53:57,440
just learning could be very interesting

00:53:54,839 --> 00:54:01,280
also it's only a side effect but

00:53:57,440 --> 00:54:01,280
it's an ascii file so you can read it

00:54:02,160 --> 00:54:06,960
it's great uh i think

00:54:05,200 --> 00:54:08,880
that we've gotten through a bunch of

00:54:06,960 --> 00:54:11,119
questions we have

00:54:08,880 --> 00:54:12,079
about five minutes left any of you guys

00:54:11,119 --> 00:54:15,200
have anything else

00:54:12,079 --> 00:54:15,200
that you'd like to touch on

00:54:17,920 --> 00:54:22,480
just wanted um yeah go ahead great that

00:54:20,880 --> 00:54:24,880
you know we

00:54:22,480 --> 00:54:27,119
we're we're really encouraged to see how

00:54:24,880 --> 00:54:28,880
energized the community is we want to

00:54:27,119 --> 00:54:30,640
keep it going we want to get people

00:54:28,880 --> 00:54:32,559
involved and

00:54:30,640 --> 00:54:34,000
so we encourage you to check out the new

00:54:32,559 --> 00:54:37,599
website and

00:54:34,000 --> 00:54:39,119
uh you know post your thoughts questions

00:54:37,599 --> 00:54:41,920
on the

00:54:39,119 --> 00:54:42,640
opencolorio forums or on our slack

00:54:41,920 --> 00:54:45,440
channel which is

00:54:42,640 --> 00:54:45,440
is very active

00:54:46,240 --> 00:54:49,760
thank you everyone for the questions and

00:54:48,000 --> 00:54:52,799
the contributions and carol thanks for

00:54:49,760 --> 00:54:55,200
moderating our q a yes no problem thanks

00:54:52,799 --> 00:54:55,200
everybody

00:54:56,079 --> 00:55:00,720

YouTube URL: https://www.youtube.com/watch?v=7e0SSka8Ar8


