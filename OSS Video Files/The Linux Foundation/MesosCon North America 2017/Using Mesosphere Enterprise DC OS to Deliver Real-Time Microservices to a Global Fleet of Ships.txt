Title: Using Mesosphere Enterprise DC OS to Deliver Real-Time Microservices to a Global Fleet of Ships
Publication date: 2017-09-18
Playlist: MesosCon North America 2017
Description: 
	From Shore to Ship: Using Mesosphere Enterprise DC/OS to Deliver Real-Time Microservices to a Global Fleet of Ships 

Since 1968, the Royal Caribbean, Celebrity Cruises, and Azamara cruiseline brands have redefined vacationing, guest experience, and innovation. Each successive class of ships is an architectural marvel and pushes the envelope of what is possible. To capture the imagination of families and adventurous vacationers, this global cruise line debuted countless industry “firsts” – such as rock climbing, ice skating and surfing at sea. Royal Caribbean isn’t just at the forefront of vacation innovation; it is also driving a tech revolution 

This presentation will describe why Royal Caribbean chose Mesosphere Enterprise DC/OS as a their platform for delivering a seamless guest experience through deployment of distributed microservices, leveraging Reactive Architecture built using Lagom, Cassandra and Kafka. We will explain how the simplicity and intuitiveness of the DC/OS platform has help

About 

Eli Tsinovoi
EY
Microservices & Data Streaming Solution Leader
Greater Boston Area
Facebook Message LinkedIn Connect  Websiteey.com/gl/en/services/specialty-services/digital
Eli Tsinovoi is a Microservices Solution Leader who has been partnering with Royal Caribbean Cruises Ltd., a global cruise company based in Miami, Florida. As one of the world’s largest cruise line operators, Royal Caribbean strives to offer first class service to all cruise guests and has recently adopted Mesos a component of its mission to provide a seamless guest experience to all its guests both on shore and on the high seas.
Captions: 
	00:00:00,060 --> 00:00:05,400
let's get started we have Eli here he

00:00:02,790 --> 00:00:07,680
will talk about you know from shore to

00:00:05,400 --> 00:00:09,389
ship you know really exciting topic here

00:00:07,680 --> 00:00:12,179
it's not about connected cars it's about

00:00:09,389 --> 00:00:14,330
connected ships or take it away thank

00:00:12,179 --> 00:00:14,330
you

00:00:27,490 --> 00:00:32,050
okay it's the switch that says on

00:00:33,010 --> 00:00:36,800
alright can you guys hear me now okay

00:00:35,090 --> 00:00:39,640
there we go

00:00:36,800 --> 00:00:41,900
so thank you thank you guys for joining

00:00:39,640 --> 00:00:43,850
this has been a really interesting

00:00:41,900 --> 00:00:46,250
journey for like the last year of my

00:00:43,850 --> 00:00:46,760
life so I'm Eli Cinna boy I'm from Ernst

00:00:46,250 --> 00:00:48,739
and Young

00:00:46,760 --> 00:00:50,480
you probably don't associate intern

00:00:48,739 --> 00:00:53,390
young with you know this type of

00:00:50,480 --> 00:00:55,040
technology or technology at all it's

00:00:53,390 --> 00:00:57,680
something that we're working on and I'm

00:00:55,040 --> 00:01:00,230
personally responsible for building so I

00:00:57,680 --> 00:01:02,300
lead our micro services practice where

00:01:00,230 --> 00:01:03,770
we essentially help any company out

00:01:02,300 --> 00:01:05,660
there there's people there obviously

00:01:03,770 --> 00:01:07,670
ahead of the curve in terms of looking

00:01:05,660 --> 00:01:09,710
at their monoliths and you know breaking

00:01:07,670 --> 00:01:11,810
them apart into micro services and

00:01:09,710 --> 00:01:13,490
there's some that are laggards and we

00:01:11,810 --> 00:01:15,680
really try to help across the line by

00:01:13,490 --> 00:01:18,039
bringing you know our architects our

00:01:15,680 --> 00:01:22,130
developers to speed up the process coach

00:01:18,039 --> 00:01:24,710
your developers your architects your IT

00:01:22,130 --> 00:01:27,860
organization on what it takes to run

00:01:24,710 --> 00:01:30,500
micro services in production and from

00:01:27,860 --> 00:01:33,709
there on we you know are there for

00:01:30,500 --> 00:01:35,330
advice etc as we take this on so I'm

00:01:33,709 --> 00:01:37,819
actually presenting here on behalf of

00:01:35,330 --> 00:01:39,610
Royal Caribbean they wanted to be here

00:01:37,819 --> 00:01:41,479
to co-present this with us but

00:01:39,610 --> 00:01:45,229
unfortunately we cannot control the

00:01:41,479 --> 00:01:48,410
weather and hurricane Irma was last

00:01:45,229 --> 00:01:52,190
weekend and they've been stuck in some D

00:01:48,410 --> 00:01:54,229
our activities but you know there's a

00:01:52,190 --> 00:01:56,330
silver lining because it's a really

00:01:54,229 --> 00:01:59,450
great use case to talk about in terms of

00:01:56,330 --> 00:02:01,610
what that has meant to us from the

00:01:59,450 --> 00:02:03,440
ability to do dr with micro services and

00:02:01,610 --> 00:02:05,300
production i can actually tell you talk

00:02:03,440 --> 00:02:09,440
you guys through a real live example of

00:02:05,300 --> 00:02:13,879
how that worked out for us so let me get

00:02:09,440 --> 00:02:15,500
started here so today when you go on a

00:02:13,879 --> 00:02:20,660
Royal Caribbean ship and you're trying

00:02:15,500 --> 00:02:22,640
to sail anywhere right as a guest you

00:02:20,660 --> 00:02:24,410
get those two pieces of paper on the

00:02:22,640 --> 00:02:26,090
screen there right it tells you

00:02:24,410 --> 00:02:28,790
everything that's going on on the ship

00:02:26,090 --> 00:02:30,739
today like what type of activities are

00:02:28,790 --> 00:02:33,530
happening where to go what restaurants

00:02:30,739 --> 00:02:36,140
are out there what menus they're serving

00:02:33,530 --> 00:02:38,750
you know what shore excursions are going

00:02:36,140 --> 00:02:40,430
on which ports of call you're visiting

00:02:38,750 --> 00:02:42,850
what's available on the shore once you

00:02:40,430 --> 00:02:46,790
get off the ship things like that right

00:02:42,850 --> 00:02:48,410
this two piece two pieces of paper get

00:02:46,790 --> 00:02:51,110
printed out every day and get placed in

00:02:48,410 --> 00:02:54,680
every guests room and today costs about

00:02:51,110 --> 00:02:57,530
a million dollars per ship per year to

00:02:54,680 --> 00:02:59,030
print out so you can imagine that it's

00:02:57,530 --> 00:03:00,830
not the best way to do things especially

00:02:59,030 --> 00:03:06,320
in the digital age so there's no real

00:03:00,830 --> 00:03:08,330
good app to go into in order to get the

00:03:06,320 --> 00:03:10,190
same information and I don't know about

00:03:08,330 --> 00:03:12,080
you guys I'm not carrying around a piece

00:03:10,190 --> 00:03:13,580
of paper with me when I'm on a cruise to

00:03:12,080 --> 00:03:17,600
figure out where to go but I do have my

00:03:13,580 --> 00:03:20,030
phone on me right and so this is

00:03:17,600 --> 00:03:23,330
probably my my dongle HDMI doing a

00:03:20,030 --> 00:03:26,360
little Flickr action but at the end of

00:03:23,330 --> 00:03:28,220
the day you know the vision is to get

00:03:26,360 --> 00:03:31,250
this information on a phone and create a

00:03:28,220 --> 00:03:36,230
truly great experience for a mobile app

00:03:31,250 --> 00:03:37,910
for for a cruise ship guests you know

00:03:36,230 --> 00:03:40,670
when you try to do an initiative like

00:03:37,910 --> 00:03:42,590
that you really want to start from

00:03:40,670 --> 00:03:44,000
scratch but unfortunately like you know

00:03:42,590 --> 00:03:46,580
for big enterprises you know a lot of

00:03:44,000 --> 00:03:49,610
the data is locked down by big mean

00:03:46,580 --> 00:03:52,910
mainframes and it's for hundreds and all

00:03:49,610 --> 00:03:54,500
kinds of legacy systems it's really hard

00:03:52,910 --> 00:03:55,640
to get the data out of and I'm going to

00:03:54,500 --> 00:03:58,490
talk you through some of the specific

00:03:55,640 --> 00:04:02,360
complications that that we had to deal

00:03:58,490 --> 00:04:03,650
with but at the end of the day we

00:04:02,360 --> 00:04:07,520
thought that this was a really great

00:04:03,650 --> 00:04:10,660
example of truly releasing distributed

00:04:07,520 --> 00:04:13,430
systems because we had to put an

00:04:10,660 --> 00:04:16,760
application out there that worked on

00:04:13,430 --> 00:04:20,030
ships and on shore so across a fleet of

00:04:16,760 --> 00:04:23,150
40 ships we had to have the same mobile

00:04:20,030 --> 00:04:24,530
application running that is running you

00:04:23,150 --> 00:04:27,169
know today in production if you are on

00:04:24,530 --> 00:04:30,260
the shore over satellite connectivity

00:04:27,169 --> 00:04:32,030
right in the same way that you're not

00:04:30,260 --> 00:04:33,980
looking at your mobile app and saying oh

00:04:32,030 --> 00:04:36,890
this sucks this won't load I don't have

00:04:33,980 --> 00:04:38,810
connection I don't have this right so

00:04:36,890 --> 00:04:44,600
that was really the challenge that we

00:04:38,810 --> 00:04:45,919
were looking to solve so I spoke a

00:04:44,600 --> 00:04:47,060
little bit about myself

00:04:45,919 --> 00:04:48,710
these are the other guys that were

00:04:47,060 --> 00:04:51,340
supposed to be here with me Laura mal

00:04:48,710 --> 00:04:52,780
leads the software engineering team

00:04:51,340 --> 00:04:54,940
at Royal Caribbean and then Roberto

00:04:52,780 --> 00:04:57,150
element is one of our micro services

00:04:54,940 --> 00:05:01,540
developers that we've been working with

00:04:57,150 --> 00:05:04,740
been essentially a team of initially six

00:05:01,540 --> 00:05:07,900
developers on shore with about four off

00:05:04,740 --> 00:05:11,110
and since that beginning we've actually

00:05:07,900 --> 00:05:13,180
grown too from overall from a project

00:05:11,110 --> 00:05:14,320
perspective from about 20 people on this

00:05:13,180 --> 00:05:19,540
project when it was just in the

00:05:14,320 --> 00:05:22,000
architecture phase to about 200 plus now

00:05:19,540 --> 00:05:24,580
across different aspect of this app so

00:05:22,000 --> 00:05:26,260
it's very rapidly growing it's getting

00:05:24,580 --> 00:05:29,770
not just into the mobile side of things

00:05:26,260 --> 00:05:31,390
but also into ml and cognitive

00:05:29,770 --> 00:05:33,420
evaluation of some of the data you can

00:05:31,390 --> 00:05:36,760
collect from a cruise ship as well as

00:05:33,420 --> 00:05:40,000
getting into web and other areas too so

00:05:36,760 --> 00:05:41,980
it's it's been very very much over

00:05:40,000 --> 00:05:45,060
encompassing and the early successes

00:05:41,980 --> 00:05:47,380
obviously pave more of the road for

00:05:45,060 --> 00:05:52,770
investing more and more into this so we

00:05:47,380 --> 00:05:55,300
can accomplish a lot of great things so

00:05:52,770 --> 00:05:56,920
classically as a consultant I had to get

00:05:55,300 --> 00:05:59,890
this deck approved by our audit

00:05:56,920 --> 00:06:02,110
department so that I you know don't say

00:05:59,890 --> 00:06:04,600
anything that I can't say and things

00:06:02,110 --> 00:06:06,340
like that and so I have to put like the

00:06:04,600 --> 00:06:09,730
consulting framework the you know

00:06:06,340 --> 00:06:11,860
complication action all resulting from

00:06:09,730 --> 00:06:14,410
some sort of a situation otherwise don't

00:06:11,860 --> 00:06:15,430
let me show it to you guys so this is

00:06:14,410 --> 00:06:19,290
what we're gonna be talking about today

00:06:15,430 --> 00:06:19,290
but I won't spend too much time on this

00:06:20,070 --> 00:06:24,880
so let's jump straight into it so the

00:06:23,260 --> 00:06:27,360
goal for the business was to release

00:06:24,880 --> 00:06:31,510
like a state-of-the-art mobile app right

00:06:27,360 --> 00:06:33,730
and this app was supposed to be able to

00:06:31,510 --> 00:06:36,820
work ship and Shore no matter where you

00:06:33,730 --> 00:06:40,210
go same type of experience right so in a

00:06:36,820 --> 00:06:42,400
sense when you're opening your mobile

00:06:40,210 --> 00:06:44,710
app anywhere and it's really hard to

00:06:42,400 --> 00:06:46,710
find like some of the enablers that you

00:06:44,710 --> 00:06:49,690
know you have companies like PubNub and

00:06:46,710 --> 00:06:51,370
you know elastic Beanstalk and and some

00:06:49,690 --> 00:06:53,890
of these past solutions that let you do

00:06:51,370 --> 00:06:56,320
a lot of these things really easily in

00:06:53,890 --> 00:06:59,380
order to operate the same ship the same

00:06:56,320 --> 00:07:02,080
thing over a hybrid architecture on both

00:06:59,380 --> 00:07:04,329
40 ships and onshore in a way that

00:07:02,080 --> 00:07:07,029
doesn't require you to

00:07:04,329 --> 00:07:09,069
you know create different code bases and

00:07:07,029 --> 00:07:10,449
run in a really simple way well we

00:07:09,069 --> 00:07:14,139
really thought that you know

00:07:10,449 --> 00:07:15,909
microservices and docker and DC OS was

00:07:14,139 --> 00:07:19,179
kind of our answer so I'm gonna talk you

00:07:15,909 --> 00:07:21,279
through a little bit how we got there

00:07:19,179 --> 00:07:23,769
and why we chose those things and what

00:07:21,279 --> 00:07:29,139
the drivers were but the situation we

00:07:23,769 --> 00:07:31,149
were in is essentially you know a lot of

00:07:29,139 --> 00:07:36,209
really complex solutions have evolved on

00:07:31,149 --> 00:07:38,409
top of an ace for 100 solution write a a

00:07:36,209 --> 00:07:41,079
cruise line is really dependent on their

00:07:38,409 --> 00:07:43,059
reservation system right so anything is

00:07:41,079 --> 00:07:45,309
like the it's like an ERP essentially

00:07:43,059 --> 00:07:47,829
for that type of operation so any

00:07:45,309 --> 00:07:49,839
reservation that comes in any type of

00:07:47,829 --> 00:07:53,529
accounting any type of like b2b with

00:07:49,839 --> 00:07:55,179
travel agents or other partners that

00:07:53,529 --> 00:07:57,159
direct people to the cruise line

00:07:55,179 --> 00:07:58,839
reservations they all integrate into

00:07:57,159 --> 00:08:01,089
this one system the system is very old

00:07:58,839 --> 00:08:01,989
I'm sure you all have cases like that if

00:08:01,089 --> 00:08:05,289
you're in companies that have been

00:08:01,989 --> 00:08:07,839
around over you know 10 20 years that

00:08:05,289 --> 00:08:09,429
you have that you know once the system

00:08:07,839 --> 00:08:12,219
that holds all the secrets right that

00:08:09,429 --> 00:08:13,419
you you have these grandiose plans of

00:08:12,219 --> 00:08:15,219
like one day we'll get rid of these

00:08:13,419 --> 00:08:16,419
things and you know reap platform to

00:08:15,219 --> 00:08:18,279
something that gives us some more

00:08:16,419 --> 00:08:21,579
flexibility but for now we basically

00:08:18,279 --> 00:08:22,329
have to come up with ways to get data

00:08:21,579 --> 00:08:25,059
out of it

00:08:22,329 --> 00:08:27,669
and for for us it's this reservation

00:08:25,059 --> 00:08:31,629
system so it's a s400 base it has some

00:08:27,669 --> 00:08:35,919
proprietary you know version of db2

00:08:31,629 --> 00:08:40,000
behind it it's got an RPG service layer

00:08:35,919 --> 00:08:42,969
which I'm 29 RPGs a little bit before

00:08:40,000 --> 00:08:46,000
even my time never even heard of it

00:08:42,969 --> 00:08:47,439
until these guys told me about it so on

00:08:46,000 --> 00:08:49,000
top of that there's like a WebSphere

00:08:47,439 --> 00:08:50,680
layer and another service layer and

00:08:49,000 --> 00:08:52,930
another service layer it's a mess right

00:08:50,680 --> 00:08:55,750
so how do we start untangling some of

00:08:52,930 --> 00:08:58,809
this stuff right when you talk to some

00:08:55,750 --> 00:09:01,660
of the guys out here you know the Kafka

00:08:58,809 --> 00:09:03,579
guys like Kauffman and data stacks guys

00:09:01,660 --> 00:09:04,569
they'll essentially tell you that you

00:09:03,579 --> 00:09:06,490
know when you ingest all this

00:09:04,569 --> 00:09:08,199
information up you can essentially start

00:09:06,490 --> 00:09:09,879
recreating a lot of the systems a lot of

00:09:08,199 --> 00:09:11,769
the data that you have essentially in a

00:09:09,879 --> 00:09:15,970
cached layer above all the complexity

00:09:11,769 --> 00:09:16,960
and again using it as as you please from

00:09:15,970 --> 00:09:18,130
there on

00:09:16,960 --> 00:09:20,649
and that's something that we were trying

00:09:18,130 --> 00:09:22,810
to do in unlocking that issue there

00:09:20,649 --> 00:09:24,520
wasn't a lot of you know source of truth

00:09:22,810 --> 00:09:29,260
for content management and authoring so

00:09:24,520 --> 00:09:31,810
in our situation we chose a system in

00:09:29,260 --> 00:09:34,060
adobe experience manager but essentially

00:09:31,810 --> 00:09:35,770
a tool for people to take master data

00:09:34,060 --> 00:09:38,170
and then for the the mobile app

00:09:35,770 --> 00:09:39,850
decorated with guest facing content

00:09:38,170 --> 00:09:42,310
right so you don't want to see you know

00:09:39,850 --> 00:09:45,070
ship gross gross tonnage of like this

00:09:42,310 --> 00:09:48,040
many tons and you know this other master

00:09:45,070 --> 00:09:50,170
data detail you wanted told in a more

00:09:48,040 --> 00:09:52,149
illustrative way right like welcome to

00:09:50,170 --> 00:09:53,950
Allure of the Seas you know this ship is

00:09:52,149 --> 00:09:55,899
beautiful and largest in the world

00:09:53,950 --> 00:09:57,279
yadda yadda yadda and you need a place

00:09:55,899 --> 00:09:59,980
to write all that copy and get it

00:09:57,279 --> 00:10:01,930
approved so getting one place to do all

00:09:59,980 --> 00:10:04,570
that targeted at our product managers

00:10:01,930 --> 00:10:08,410
and our cruise directors was a part of

00:10:04,570 --> 00:10:10,300
this as well in terms of scalability and

00:10:08,410 --> 00:10:12,370
modernization there was no existing

00:10:10,300 --> 00:10:14,800
service layer that could actually take

00:10:12,370 --> 00:10:18,870
on the traffic that a mobile device

00:10:14,800 --> 00:10:21,070
could potentially mean right so today

00:10:18,870 --> 00:10:22,870
when you're on a cruise ship and you

00:10:21,070 --> 00:10:25,330
want to go on a shore excursion or you

00:10:22,870 --> 00:10:27,820
want to buy a wine package or an

00:10:25,330 --> 00:10:30,330
Internet package you have to actually go

00:10:27,820 --> 00:10:32,950
to the guest services desk stand in line

00:10:30,330 --> 00:10:34,300
move a little bit more in line move a

00:10:32,950 --> 00:10:37,300
little more in line and then talk to a

00:10:34,300 --> 00:10:39,790
person that you know will try to

00:10:37,300 --> 00:10:41,200
accommodate you and you know you sign up

00:10:39,790 --> 00:10:42,430
on a sheet it's first-come first-serve

00:10:41,200 --> 00:10:45,940
you know there's capacity there's

00:10:42,430 --> 00:10:48,640
inventory for these things you know it

00:10:45,940 --> 00:10:52,240
from a millennial perspective like I'm

00:10:48,640 --> 00:10:54,250
not gonna do that it's a little bit of a

00:10:52,240 --> 00:10:56,230
ridiculous expectation if I can't do it

00:10:54,250 --> 00:11:01,000
from my phone it's probably not gonna

00:10:56,230 --> 00:11:02,950
happen and so also the potential of all

00:11:01,000 --> 00:11:04,720
the lost revenue that could come from

00:11:02,950 --> 00:11:06,910
people just able to book this stuff on

00:11:04,720 --> 00:11:08,680
their phone as opposed to people that

00:11:06,910 --> 00:11:10,209
get frustrated from waiting in line or

00:11:08,680 --> 00:11:12,760
not knowing that there is a line to go

00:11:10,209 --> 00:11:15,640
to right or just not knowing about a

00:11:12,760 --> 00:11:18,010
specific event or a feature or activity

00:11:15,640 --> 00:11:20,860
that's offered on the ship you know that

00:11:18,010 --> 00:11:23,860
was kind of the thinking behind that and

00:11:20,860 --> 00:11:26,230
then from the perspective of what we

00:11:23,860 --> 00:11:27,730
wanted to build you know today if they

00:11:26,230 --> 00:11:30,209
wanted to make any change

00:11:27,730 --> 00:11:31,709
it's a monolith right so

00:11:30,209 --> 00:11:34,139
everybody kind of has to put their kid

00:11:31,709 --> 00:11:36,959
gloves on and you know talk to the base

00:11:34,139 --> 00:11:38,730
database team and inest and like okay we

00:11:36,959 --> 00:11:41,249
want to use this table we have to change

00:11:38,730 --> 00:11:43,439
this one aspect like whoa whoa whoa like

00:11:41,249 --> 00:11:47,189
we're changing one value like a simple

00:11:43,439 --> 00:11:48,629
update to a row in a database but kid

00:11:47,189 --> 00:11:51,809
gloves have to be on everybody's

00:11:48,629 --> 00:11:54,449
prepared it's like you know the analogy

00:11:51,809 --> 00:11:56,790
I use for it is we have these go/no-go

00:11:54,449 --> 00:11:58,889
sessions right where you make a decision

00:11:56,790 --> 00:12:01,139
it's like electing a pope so I call it

00:11:58,889 --> 00:12:02,730
the white smoke sessions at the end of

00:12:01,139 --> 00:12:05,220
the session you have some white smoke

00:12:02,730 --> 00:12:07,790
released and we finally decide okay

00:12:05,220 --> 00:12:09,749
we've updated a row in a database and

00:12:07,790 --> 00:12:12,779
good-guy could that been a whole lot

00:12:09,749 --> 00:12:15,569
easier if you know there was something

00:12:12,779 --> 00:12:17,730
that allowed us to update it without

00:12:15,569 --> 00:12:18,209
cascading issues across everything else

00:12:17,730 --> 00:12:21,600
right

00:12:18,209 --> 00:12:23,399
so the microservices aspect helps us

00:12:21,600 --> 00:12:26,610
with that because we can actually divide

00:12:23,399 --> 00:12:28,529
things up and if I forget to talk about

00:12:26,610 --> 00:12:31,740
this remind me but I actually can give

00:12:28,529 --> 00:12:33,600
you a situation that proves out the

00:12:31,740 --> 00:12:36,480
value of microservices over this

00:12:33,600 --> 00:12:39,389
hurricane which is essentially how we

00:12:36,480 --> 00:12:41,819
had a situation where we had unexpected

00:12:39,389 --> 00:12:43,529
logic happen in our app because all of a

00:12:41,819 --> 00:12:46,529
sudden a voyage had to be extended by

00:12:43,529 --> 00:12:48,480
four days and we had to go to a port

00:12:46,529 --> 00:12:49,799
that wasn't even a port that was in our

00:12:48,480 --> 00:12:51,600
database

00:12:49,799 --> 00:12:53,699
because you know we're trying to stay

00:12:51,600 --> 00:12:57,059
away from you know people going into a

00:12:53,699 --> 00:12:58,769
hurricane and had to essentially still

00:12:57,059 --> 00:13:03,869
reflect accurate information and the

00:12:58,769 --> 00:13:06,029
mobile app and we did it really easily I

00:13:03,869 --> 00:13:08,449
could literally go screen by screen in

00:13:06,029 --> 00:13:11,309
the app field by field because of my

00:13:08,449 --> 00:13:13,049
ability to control each service in a

00:13:11,309 --> 00:13:15,540
fine-grained way to go and change that

00:13:13,049 --> 00:13:16,829
and that is really really powerful I

00:13:15,540 --> 00:13:19,199
don't know from a business perspective

00:13:16,829 --> 00:13:22,559
if you've ever had you know if you're a

00:13:19,199 --> 00:13:23,790
developer or a product owner and someone

00:13:22,559 --> 00:13:25,589
on the business side say hey we actually

00:13:23,790 --> 00:13:27,449
to change this and they really don't

00:13:25,589 --> 00:13:28,980
understand the cascading effects of what

00:13:27,449 --> 00:13:31,439
that changed my mean and the monolith

00:13:28,980 --> 00:13:33,209
and you had to kind of say well it's not

00:13:31,439 --> 00:13:36,749
that easy it's you know it will require

00:13:33,209 --> 00:13:39,120
XY and Z this gives you an ability to

00:13:36,749 --> 00:13:41,879
build a product where you're essentially

00:13:39,120 --> 00:13:43,410
controlling how fine-grained you want

00:13:41,879 --> 00:13:44,019
your ability to be in the future to

00:13:43,410 --> 00:13:46,179
control some

00:13:44,019 --> 00:13:48,489
these things so it's really great from

00:13:46,179 --> 00:13:51,929
that perspective and then we wanted to

00:13:48,489 --> 00:13:56,769
make it resilient and scalable right so

00:13:51,929 --> 00:13:58,059
you know today a ship is maybe 99%

00:13:56,769 --> 00:14:00,639
connected all the time

00:13:58,059 --> 00:14:05,649
there's satellite connection but for

00:14:00,639 --> 00:14:08,290
example we cannot deploy a cluster that

00:14:05,649 --> 00:14:10,209
has nodes both on the ship and on the

00:14:08,290 --> 00:14:12,429
shore right that's you're going to lose

00:14:10,209 --> 00:14:13,660
that connectivity and that will that

00:14:12,429 --> 00:14:17,230
will just throw too many errors so

00:14:13,660 --> 00:14:19,540
that's not possible today because of you

00:14:17,230 --> 00:14:22,509
know extended periods of discount

00:14:19,540 --> 00:14:24,639
activity sometimes but it's not as big

00:14:22,509 --> 00:14:26,139
as people may think right satellite is

00:14:24,639 --> 00:14:28,899
actually pretty strong it's about a 300

00:14:26,139 --> 00:14:30,850
megabits connection a good allocation of

00:14:28,899 --> 00:14:34,899
that goes towards the guests ability to

00:14:30,850 --> 00:14:38,079
use the the web but there's you know QoS

00:14:34,899 --> 00:14:39,819
layer allocated for ship applications

00:14:38,079 --> 00:14:41,559
and there's quite a bit of it and the

00:14:39,819 --> 00:14:43,089
connectivity is usually good but there

00:14:41,559 --> 00:14:44,290
are periods of blackouts sometimes

00:14:43,089 --> 00:14:46,269
you're in China sometimes you're behind

00:14:44,290 --> 00:14:49,089
a mountain sometimes your Bermuda

00:14:46,269 --> 00:14:51,689
Triangle you don't know right so we do

00:14:49,089 --> 00:14:56,439
have to kind of plan for that scenario

00:14:51,689 --> 00:14:58,959
and then finally I'm not sure if you

00:14:56,439 --> 00:15:01,360
guys have ever gone through the process

00:14:58,959 --> 00:15:03,189
of educating an organization that's been

00:15:01,360 --> 00:15:06,850
really running in a traditional IT mode

00:15:03,189 --> 00:15:09,089
about how to do DevOps what DevOps is

00:15:06,850 --> 00:15:11,949
what it means

00:15:09,089 --> 00:15:13,990
honestly I've done this several times

00:15:11,949 --> 00:15:15,610
and usually they think they you know

00:15:13,990 --> 00:15:19,839
just set up Jenkins and it just all

00:15:15,610 --> 00:15:23,259
starts going but you know just to paint

00:15:19,839 --> 00:15:25,480
a scenario if I want to deploy a micro

00:15:23,259 --> 00:15:26,679
service today first of all this is an

00:15:25,480 --> 00:15:29,199
explanation that I have to make all the

00:15:26,679 --> 00:15:32,679
time usually people are just used to use

00:15:29,199 --> 00:15:33,970
DevOps for deploying code right but when

00:15:32,679 --> 00:15:37,689
I'm deploying a micro service that

00:15:33,970 --> 00:15:42,519
includes like in this situation there

00:15:37,689 --> 00:15:44,980
was Lacombe code built on Java right

00:15:42,519 --> 00:15:48,350
then we have

00:15:44,980 --> 00:15:50,240
our Kafka connectors we have our Kafka

00:15:48,350 --> 00:15:52,339
topics that have to be created either

00:15:50,240 --> 00:15:54,949
manually or by script or by turning on

00:15:52,339 --> 00:15:57,170
configuration then we have database

00:15:54,949 --> 00:15:58,309
schemas database tables and key spaces

00:15:57,170 --> 00:16:00,350
they have to be created for each table

00:15:58,309 --> 00:16:01,939
because we want to deploy our services

00:16:00,350 --> 00:16:03,740
in an immutable way right so we don't

00:16:01,939 --> 00:16:07,069
want any shared database pattern and we

00:16:03,740 --> 00:16:09,079
want to have a clean copy so that you

00:16:07,069 --> 00:16:13,129
know situations like actually one I have

00:16:09,079 --> 00:16:15,019
today we had something funky happen to

00:16:13,129 --> 00:16:18,230
one of our services where the database

00:16:15,019 --> 00:16:20,389
table that's relying on is corrupted in

00:16:18,230 --> 00:16:22,459
some way and I can simply spin up

00:16:20,389 --> 00:16:25,550
another instance of it redirect my API

00:16:22,459 --> 00:16:27,470
management to that new instance take

00:16:25,550 --> 00:16:29,089
that on and down and let the DBA team

00:16:27,470 --> 00:16:32,749
loose on it to figure out what happened

00:16:29,089 --> 00:16:34,309
so that's something that that we needed

00:16:32,749 --> 00:16:36,649
to make sure we could do but from a

00:16:34,309 --> 00:16:38,990
DevOps perspective culturally has really

00:16:36,649 --> 00:16:40,670
been the toughest thing because I have

00:16:38,990 --> 00:16:44,959
to in order to make a tiny little change

00:16:40,670 --> 00:16:47,269
I have to talk to if it's if it's across

00:16:44,959 --> 00:16:48,949
the whole stack I have an infrastructure

00:16:47,269 --> 00:16:51,199
guy which is separate from the cloud

00:16:48,949 --> 00:16:54,230
team guy which is separate from the DBA

00:16:51,199 --> 00:16:55,639
guy which is separate from the

00:16:54,230 --> 00:16:56,240
middleware guys that actually manage

00:16:55,639 --> 00:16:59,089
DCOs

00:16:56,240 --> 00:17:01,069
and Kafka right and then we have a

00:16:59,089 --> 00:17:03,290
development team and then I have the

00:17:01,069 --> 00:17:05,480
business side so you know in order to

00:17:03,290 --> 00:17:08,059
make one tiny little change that's eight

00:17:05,480 --> 00:17:10,069
different teams and I don't know if you

00:17:08,059 --> 00:17:11,569
guys have been on conference calls with

00:17:10,069 --> 00:17:13,250
like over twenty five people trying to

00:17:11,569 --> 00:17:15,110
make consensus on something but it's

00:17:13,250 --> 00:17:17,720
probably one of the worst things in the

00:17:15,110 --> 00:17:20,000
world so that's that's kind of day in

00:17:17,720 --> 00:17:27,049
and day out right of the situation we

00:17:20,000 --> 00:17:28,610
came into so we thought like we need to

00:17:27,049 --> 00:17:30,590
create a different vision only we need

00:17:28,610 --> 00:17:32,539
to kind of let loose on it so our vision

00:17:30,590 --> 00:17:35,899
was to create kind of one digital hub

00:17:32,539 --> 00:17:38,120
one footprint or reference architecture

00:17:35,899 --> 00:17:41,779
of what royal caribbean's future

00:17:38,120 --> 00:17:43,250
architecture would run on so you know

00:17:41,779 --> 00:17:46,070
there's obviously still kind of

00:17:43,250 --> 00:17:48,919
struggles with this but the idea is any

00:17:46,070 --> 00:17:51,620
new application any new service would be

00:17:48,919 --> 00:17:54,220
deployed along with these micro service

00:17:51,620 --> 00:17:57,919
principles it would be deployed on DCOs

00:17:54,220 --> 00:17:58,669
it would use no sequel and Cassandra in

00:17:57,919 --> 00:18:00,529
some cases

00:17:58,669 --> 00:18:03,830
is depending on which you know we

00:18:00,529 --> 00:18:07,129
sometimes would use you know some sort

00:18:03,830 --> 00:18:09,639
of a relational database as well but in

00:18:07,129 --> 00:18:11,659
most situations it would adhere to this

00:18:09,639 --> 00:18:12,619
kind of footprint that I'm about to

00:18:11,659 --> 00:18:15,919
share with you in a few more slides

00:18:12,619 --> 00:18:17,389
right but everything that is to this

00:18:15,919 --> 00:18:20,299
date kind of that traditional

00:18:17,389 --> 00:18:24,080
integration type services so and about

00:18:20,299 --> 00:18:27,320
Enterprise Service bus --is any type of

00:18:24,080 --> 00:18:30,049
that older you know XML soap based type

00:18:27,320 --> 00:18:32,200
of integration technology etc we're

00:18:30,049 --> 00:18:36,859
gonna go away from that and leave it to

00:18:32,200 --> 00:18:38,690
the things that are simple don't change

00:18:36,859 --> 00:18:40,700
too often don't need to be a micro

00:18:38,690 --> 00:18:42,470
service etc I don't have a slide for

00:18:40,700 --> 00:18:44,239
this here but there is a slide that I

00:18:42,470 --> 00:18:47,149
share with my clients that it's

00:18:44,239 --> 00:18:50,749
essentially a matrix that says are you a

00:18:47,149 --> 00:18:54,440
micro service and it essentially splits

00:18:50,749 --> 00:18:56,090
it across the speed of change from a

00:18:54,440 --> 00:18:58,789
business perspective and the complexity

00:18:56,090 --> 00:19:00,980
of Management right if it's complex to

00:18:58,789 --> 00:19:02,989
manage and it doesn't change too often

00:19:00,980 --> 00:19:04,789
you don't need to make it a micro

00:19:02,989 --> 00:19:07,999
service because it doesn't change too

00:19:04,789 --> 00:19:10,039
often it's already set up and you're

00:19:07,999 --> 00:19:11,899
probably gonna just trade off for more

00:19:10,039 --> 00:19:13,519
complexity to manage that one thing that

00:19:11,899 --> 00:19:15,409
doesn't really need that level of

00:19:13,519 --> 00:19:17,029
complexity but if it's something that

00:19:15,409 --> 00:19:18,200
changes every few days a lot of

00:19:17,029 --> 00:19:21,470
requirements you really need that

00:19:18,200 --> 00:19:24,679
fine-grained ability and it has some

00:19:21,470 --> 00:19:26,840
level of complexity to it then you know

00:19:24,679 --> 00:19:29,149
by all means you need the tools that

00:19:26,840 --> 00:19:30,470
micro services gives you in order to

00:19:29,149 --> 00:19:33,470
manage that but you also need to set up

00:19:30,470 --> 00:19:35,029
the kind of the enablers around it to be

00:19:33,470 --> 00:19:37,070
able to manage that complexity as well

00:19:35,029 --> 00:19:40,279
so things like you know circuit breakers

00:19:37,070 --> 00:19:44,409
and service catalogs and service

00:19:40,279 --> 00:19:47,480
discovery you know ability to do

00:19:44,409 --> 00:19:51,289
green-blue deployments and canary

00:19:47,480 --> 00:19:53,419
deployments all those types of things or

00:19:51,289 --> 00:19:56,509
enablers to essentially manage micro

00:19:53,419 --> 00:19:58,609
services at scale that you need to have

00:19:56,509 --> 00:20:02,059
if you're going to be building them

00:19:58,609 --> 00:20:06,769
right so that was kind of the goal there

00:20:02,059 --> 00:20:08,899
and then the next part of it was

00:20:06,769 --> 00:20:10,700
essentially getting everybody on the

00:20:08,899 --> 00:20:12,310
same page right from an organization

00:20:10,700 --> 00:20:14,980
that was really living in the so

00:20:12,310 --> 00:20:16,480
world around es bees and things like

00:20:14,980 --> 00:20:17,560
that just getting everybody on the page

00:20:16,480 --> 00:20:20,710
that okay

00:20:17,560 --> 00:20:23,650
our ESB is no longer the main place

00:20:20,710 --> 00:20:24,820
where you're gonna use in ESB in places

00:20:23,650 --> 00:20:27,550
where we don't want to be in the

00:20:24,820 --> 00:20:29,230
business of building integrations we

00:20:27,550 --> 00:20:32,410
don't want to build new connectors we

00:20:29,230 --> 00:20:34,930
want to use easy simple connectors for

00:20:32,410 --> 00:20:36,310
things because there is no competitive

00:20:34,930 --> 00:20:38,170
advantage and building it there is no

00:20:36,310 --> 00:20:40,180
reason to it's already available in our

00:20:38,170 --> 00:20:41,740
USB and it's simple that's when we can

00:20:40,180 --> 00:20:43,510
use that traditional integration

00:20:41,740 --> 00:20:44,860
technology but for everything else where

00:20:43,510 --> 00:20:46,180
it gives us a competitive advantage to

00:20:44,860 --> 00:20:49,630
build something new something that

00:20:46,180 --> 00:20:51,790
brings logic that no one can compete

00:20:49,630 --> 00:20:53,770
with us on right that essentially makes

00:20:51,790 --> 00:20:55,780
us better than our competitors that

00:20:53,770 --> 00:20:57,910
makes sense to frost own that code for

00:20:55,780 --> 00:21:05,590
us to customize and maintain it locked

00:20:57,910 --> 00:21:07,870
up you know in time forward so obviously

00:21:05,590 --> 00:21:11,050
it isn't a smooth road so the next slide

00:21:07,870 --> 00:21:14,050
is complications so we try to answer

00:21:11,050 --> 00:21:15,700
these three questions you know how do we

00:21:14,050 --> 00:21:18,460
deliver with what we have today and what

00:21:15,700 --> 00:21:21,970
else do we need so when I look at I

00:21:18,460 --> 00:21:25,090
actually came into the whole micro

00:21:21,970 --> 00:21:28,000
services native cloud world from doing a

00:21:25,090 --> 00:21:32,290
lot of IT strategy work and I used to do

00:21:28,000 --> 00:21:35,610
a lot of application maturity assessment

00:21:32,290 --> 00:21:38,080
and rationalization assessments which

00:21:35,610 --> 00:21:41,770
they were essentially a way to take your

00:21:38,080 --> 00:21:44,620
CMDB if you have one if not it's a nice

00:21:41,770 --> 00:21:47,770
Excel spreadsheet exercise but you take

00:21:44,620 --> 00:21:49,780
your application inventory and gather a

00:21:47,770 --> 00:21:52,240
bunch of survey information from both

00:21:49,780 --> 00:21:53,740
business quality and technical quality

00:21:52,240 --> 00:21:55,720
of your application to help you

00:21:53,740 --> 00:21:59,530
determine one of four things is that

00:21:55,720 --> 00:21:59,740
application redundant not in the good

00:21:59,530 --> 00:22:03,280
way

00:21:59,740 --> 00:22:07,390
redundant as in its duplicative and you

00:22:03,280 --> 00:22:09,700
need to essentially retire it or do you

00:22:07,390 --> 00:22:14,170
need to either reap lat form it enhance

00:22:09,700 --> 00:22:16,480
it or completely replace it right so one

00:22:14,170 --> 00:22:18,100
of those four things you can figure out

00:22:16,480 --> 00:22:20,380
through that so we essentially did a

00:22:18,100 --> 00:22:23,110
similar assessment here to say you know

00:22:20,380 --> 00:22:25,030
we need these things for us to be able

00:22:23,110 --> 00:22:26,320
to run micro services

00:22:25,030 --> 00:22:28,480
this is what we have here today and

00:22:26,320 --> 00:22:31,420
these are the gaps and we need to bring

00:22:28,480 --> 00:22:32,530
in some new technology and we also

00:22:31,420 --> 00:22:35,440
wanted to make sure that we have a

00:22:32,530 --> 00:22:37,050
standard ship Shore footprint so this is

00:22:35,440 --> 00:22:40,840
one of the key reasons we chose

00:22:37,050 --> 00:22:42,640
mesosphere but in general when we were

00:22:40,840 --> 00:22:46,690
doing our assessment we were choosing

00:22:42,640 --> 00:22:49,000
between pivotal and open shift and DCOs

00:22:46,690 --> 00:22:51,910
in terms of how do we orchestrate

00:22:49,000 --> 00:22:54,190
containers in scale and when we were

00:22:51,910 --> 00:22:56,710
doing that assessment one of the key

00:22:54,190 --> 00:23:00,790
things that we were focused on is you

00:22:56,710 --> 00:23:03,460
know we cannot run a cloud on our ships

00:23:00,790 --> 00:23:04,960
we have we're constrained on space we

00:23:03,460 --> 00:23:08,920
don't have the skill set you know we

00:23:04,960 --> 00:23:11,740
have RIT on the ships are folks that are

00:23:08,920 --> 00:23:14,740
basically guys that you know are

00:23:11,740 --> 00:23:16,690
assisted min level and below that are

00:23:14,740 --> 00:23:18,610
committing six-month contracts to work

00:23:16,690 --> 00:23:22,210
IT ownership right there we're not

00:23:18,610 --> 00:23:24,670
sourcing you know the next brightest

00:23:22,210 --> 00:23:26,410
engineers and Google and Apple and you

00:23:24,670 --> 00:23:29,020
know all the places where some of that

00:23:26,410 --> 00:23:31,270
talent goes so we had to come up with

00:23:29,020 --> 00:23:33,970
something that was easy to work but also

00:23:31,270 --> 00:23:36,850
allowed us to diplay to deploy the same

00:23:33,970 --> 00:23:40,920
code ship or show no matter what it is

00:23:36,850 --> 00:23:43,270
so we needed the same experience from

00:23:40,920 --> 00:23:43,870
the infrastructure layer up for

00:23:43,270 --> 00:23:46,960
everybody

00:23:43,870 --> 00:23:48,190
and DCOs which we ended up with gave us

00:23:46,960 --> 00:23:51,250
that but the other solution is that as

00:23:48,190 --> 00:23:54,850
well right same interface one CLI or one

00:23:51,250 --> 00:23:57,040
UI to go into one way to essentially

00:23:54,850 --> 00:23:59,350
configure your services and deploy them

00:23:57,040 --> 00:24:01,090
whether you're on ship or on shore like

00:23:59,350 --> 00:24:04,720
to us we don't care what it's running on

00:24:01,090 --> 00:24:07,210
we can SSH into either one we can you

00:24:04,720 --> 00:24:08,770
know type in an IP and we get on to it

00:24:07,210 --> 00:24:09,940
and see the same thing whether we are on

00:24:08,770 --> 00:24:12,460
ship or on shore so that was really

00:24:09,940 --> 00:24:14,020
important and then the final thing is

00:24:12,460 --> 00:24:17,410
just keeping ship and Shore in sync

00:24:14,020 --> 00:24:19,090
which it's probably the toughest mission

00:24:17,410 --> 00:24:23,290
we still have a few patterns we were

00:24:19,090 --> 00:24:24,880
perfecting but you know Kafka and

00:24:23,290 --> 00:24:27,460
solutions like that were really

00:24:24,880 --> 00:24:28,870
important for us on that front so what

00:24:27,460 --> 00:24:31,180
we were really trying to achieve is

00:24:28,870 --> 00:24:33,310
first of all that we have the same data

00:24:31,180 --> 00:24:36,340
ship and Shore but then we had the

00:24:33,310 --> 00:24:38,659
additional complexity of some systems

00:24:36,340 --> 00:24:41,869
exist on the shore and some systems own

00:24:38,659 --> 00:24:45,739
exist on the ship and some data falls

00:24:41,869 --> 00:24:47,989
into essentially the realm of it goes to

00:24:45,739 --> 00:24:50,659
the ship and never makes it off of it it

00:24:47,989 --> 00:24:52,700
goes on the ship gets manipulated on

00:24:50,659 --> 00:24:55,340
ship comes off the ship and then we have

00:24:52,700 --> 00:24:57,320
to analyze it it originates on the ship

00:24:55,340 --> 00:24:59,059
comes off or it originates and it

00:24:57,320 --> 00:25:02,659
doesn't get off the ship right so for

00:24:59,059 --> 00:25:04,940
each of those scenarios while that data

00:25:02,659 --> 00:25:07,340
is still live and isn't retired we had

00:25:04,940 --> 00:25:09,289
to think about you know if we're using

00:25:07,340 --> 00:25:11,090
in the mobile app it still needs to be

00:25:09,289 --> 00:25:13,879
on the shore and we have to give it the

00:25:11,090 --> 00:25:15,529
same time to live as what it would have

00:25:13,879 --> 00:25:17,809
on the ship originally and vice versa

00:25:15,529 --> 00:25:19,489
with the shore data and how do we

00:25:17,809 --> 00:25:22,399
arrange all that so it's not a mess to

00:25:19,489 --> 00:25:25,429
manage right and if we're doing it in a

00:25:22,399 --> 00:25:27,320
microservices way we can't share it

00:25:25,429 --> 00:25:28,849
really we have to essentially create

00:25:27,320 --> 00:25:30,919
immutable versions of it that are

00:25:28,849 --> 00:25:34,879
specific for each functionality we have

00:25:30,919 --> 00:25:37,429
to really do some some really selective

00:25:34,879 --> 00:25:39,409
domain modeling on you know how to make

00:25:37,429 --> 00:25:41,659
this really cohesive and how to make it

00:25:39,409 --> 00:25:48,619
really decoupled in a way that won't be

00:25:41,659 --> 00:25:50,239
an absolute nightmare to manage so this

00:25:48,619 --> 00:25:53,179
is the kind of assessment that we looked

00:25:50,239 --> 00:25:55,759
at so from an ey perspective this is our

00:25:53,179 --> 00:25:58,999
map of all the different areas in

00:25:55,759 --> 00:26:02,090
middleware or integration right and and

00:25:58,999 --> 00:26:04,220
I can understand how in a way not

00:26:02,090 --> 00:26:06,229
everybody thinks of this field or this

00:26:04,220 --> 00:26:07,970
area in the terms of middleware I

00:26:06,229 --> 00:26:11,830
actually think it's a pretty bad term as

00:26:07,970 --> 00:26:13,940
well but in in that specific case it was

00:26:11,830 --> 00:26:16,820
you know they were called the middleware

00:26:13,940 --> 00:26:20,659
group so they were owning it and we were

00:26:16,820 --> 00:26:23,869
using terms to essentially resonate with

00:26:20,659 --> 00:26:25,129
folks but all the green stuff was

00:26:23,869 --> 00:26:26,960
essentially all the traditional

00:26:25,129 --> 00:26:29,659
integration tools that you would

00:26:26,960 --> 00:26:34,489
typically have right very so an ESB

00:26:29,659 --> 00:26:37,099
centered and then the red stuff are a

00:26:34,489 --> 00:26:39,889
lot of things that you probably would

00:26:37,099 --> 00:26:41,539
have and running micro services you can

00:26:39,889 --> 00:26:44,869
obviously see there's a lot more red

00:26:41,539 --> 00:26:46,639
than green because it requires a whole

00:26:44,869 --> 00:26:50,059
lot more components just the smack stack

00:26:46,639 --> 00:26:51,499
itself is five things and and there's

00:26:50,059 --> 00:26:52,760
obviously a whole lot more running in

00:26:51,499 --> 00:26:55,070
there right

00:26:52,760 --> 00:26:55,910
and then there's a lot of you know

00:26:55,070 --> 00:26:59,210
governance

00:26:55,910 --> 00:27:02,080
a lot of little aspects that that often

00:26:59,210 --> 00:27:04,580
get missed out so we essentially try to

00:27:02,080 --> 00:27:07,640
come up with what solutions do we need

00:27:04,580 --> 00:27:10,580
to bring in that helps us cover as many

00:27:07,640 --> 00:27:14,270
areas and this as we can and the least

00:27:10,580 --> 00:27:16,280
amount of time right and also with the

00:27:14,270 --> 00:27:17,780
least amount of money and probably we

00:27:16,280 --> 00:27:19,310
don't want a solution per each of the

00:27:17,780 --> 00:27:22,480
boxes right that we really try to

00:27:19,310 --> 00:27:22,480
optimize it as much as we could

00:27:23,530 --> 00:27:29,990
so the other aspect of it is you know

00:27:27,770 --> 00:27:32,960
you're trying to explain to people why

00:27:29,990 --> 00:27:35,060
micro services right it's a quite an

00:27:32,960 --> 00:27:36,290
education for a lot of folks that don't

00:27:35,060 --> 00:27:38,210
understand the term especially if you're

00:27:36,290 --> 00:27:40,040
talking to someone on the business side

00:27:38,210 --> 00:27:41,120
which you know most of the time they're

00:27:40,040 --> 00:27:43,520
the guys that are going to fund your

00:27:41,120 --> 00:27:46,010
project and you have to explain to them

00:27:43,520 --> 00:27:52,810
what they're gonna get out of it so this

00:27:46,010 --> 00:27:52,810
was my attempt at it which there we go

00:27:52,990 --> 00:27:58,300
which was around explaining you know the

00:27:55,580 --> 00:28:00,830
aspects of agility scalability

00:27:58,300 --> 00:28:04,010
resiliency and those things so like

00:28:00,830 --> 00:28:06,010
going one by one right fine green

00:28:04,010 --> 00:28:08,870
functionality and quicker release times

00:28:06,010 --> 00:28:11,060
so I can little I'm gonna use the

00:28:08,870 --> 00:28:12,350
example that I that I had with the

00:28:11,060 --> 00:28:17,600
hurricane it's probably a good way to

00:28:12,350 --> 00:28:20,090
apply it so we had a situation where our

00:28:17,600 --> 00:28:22,100
voyage because of Hurricane ARMA there

00:28:20,090 --> 00:28:25,010
are two voyages one September 3rd and

00:28:22,100 --> 00:28:26,960
one September 10 the September 3rd one

00:28:25,010 --> 00:28:30,200
got extended from seven days which is

00:28:26,960 --> 00:28:34,520
the typical duration to 10 days and the

00:28:30,200 --> 00:28:38,030
September 10th one now was four days and

00:28:34,520 --> 00:28:39,860
began on September 13th which is when

00:28:38,030 --> 00:28:41,630
the September 3rd one now ended so one

00:28:39,860 --> 00:28:43,450
had got extended by three days and want

00:28:41,630 --> 00:28:46,070
to get shortened by three days right

00:28:43,450 --> 00:28:49,040
that is not a typical behavior that we

00:28:46,070 --> 00:28:52,790
expect from our voyages and so the way

00:28:49,040 --> 00:28:55,070
that we had built some of this it had to

00:28:52,790 --> 00:28:57,650
be able to be flexible enough that when

00:28:55,070 --> 00:28:59,990
we haven't built the logic to change

00:28:57,650 --> 00:29:02,120
some of these aspects we weren't showing

00:28:59,990 --> 00:29:03,550
guests wrong information in the mobile

00:29:02,120 --> 00:29:06,130
app right

00:29:03,550 --> 00:29:08,020
and and we were still honoring some of

00:29:06,130 --> 00:29:09,670
our product tenants which one of them is

00:29:08,020 --> 00:29:13,270
the accuracy of information and that app

00:29:09,670 --> 00:29:14,520
and so the fine-grained aspect is really

00:29:13,270 --> 00:29:17,680
nice because in that situation

00:29:14,520 --> 00:29:20,290
specifically we have a voyage picker

00:29:17,680 --> 00:29:23,590
screen on the app by the way if you guys

00:29:20,290 --> 00:29:26,770
want to look at it live the app that's

00:29:23,590 --> 00:29:29,050
running on DCOs if you look up Royal

00:29:26,770 --> 00:29:32,320
Caribbean International and the iOS or a

00:29:29,050 --> 00:29:33,970
Google Play Store that's right there you

00:29:32,320 --> 00:29:36,960
know go on and leave a review if it

00:29:33,970 --> 00:29:39,370
sucks it sucks if it's great it's great

00:29:36,960 --> 00:29:42,760
the service layer underneath it is

00:29:39,370 --> 00:29:45,490
what's built on DCOs and you know using

00:29:42,760 --> 00:29:47,560
some of the principles here as well as

00:29:45,490 --> 00:29:49,720
the team though that we did with this

00:29:47,560 --> 00:29:51,250
with I happen to think that it looks

00:29:49,720 --> 00:29:55,900
pretty slick and it's working really

00:29:51,250 --> 00:29:58,120
great so in terms of the quick release

00:29:55,900 --> 00:30:00,910
times etc right I was able to go

00:29:58,120 --> 00:30:02,500
individually to the service that you

00:30:00,910 --> 00:30:04,000
know the main page which was our voyage

00:30:02,500 --> 00:30:06,880
picker that lets you select which

00:30:04,000 --> 00:30:08,530
Voyager on and individually manipulate

00:30:06,880 --> 00:30:10,600
just that page without affecting

00:30:08,530 --> 00:30:13,870
anything else with a complete confidence

00:30:10,600 --> 00:30:17,260
that my app will stand up that no other

00:30:13,870 --> 00:30:18,850
page would be impacted right that the

00:30:17,260 --> 00:30:21,220
app wouldn't go down just because of

00:30:18,850 --> 00:30:24,280
that and I would specifically if I

00:30:21,220 --> 00:30:25,960
stayed true to the API contract right

00:30:24,280 --> 00:30:28,690
between the mobile and the micro service

00:30:25,960 --> 00:30:31,770
that everything will be just time and

00:30:28,690 --> 00:30:33,970
that confidence is really great because

00:30:31,770 --> 00:30:36,040
even though we have these white smoke

00:30:33,970 --> 00:30:37,900
sessions right with the go no-go I'm

00:30:36,040 --> 00:30:39,100
sitting there being like okay just tell

00:30:37,900 --> 00:30:42,160
me one right

00:30:39,100 --> 00:30:44,200
I can deploy this really easily even

00:30:42,160 --> 00:30:46,480
though I have to answer like what's the

00:30:44,200 --> 00:30:49,090
impact of you know if we do this change

00:30:46,480 --> 00:30:50,620
etc I can basically always answer with

00:30:49,090 --> 00:30:52,000
well it's really isolated

00:30:50,620 --> 00:30:54,220
the only thing impact it's going to be

00:30:52,000 --> 00:30:56,800
this label of this piece of text and

00:30:54,220 --> 00:30:59,560
it's gets manipulated by this piece of

00:30:56,800 --> 00:31:01,150
JSON and my API right it doesn't impact

00:30:59,560 --> 00:31:02,620
anything else because that's running in

00:31:01,150 --> 00:31:04,930
completely separate container and a

00:31:02,620 --> 00:31:06,430
completely different service so there's

00:31:04,930 --> 00:31:08,230
no impact downstream they don't share a

00:31:06,430 --> 00:31:10,210
database they don't share anything

00:31:08,230 --> 00:31:11,920
they're completely immutable I could

00:31:10,210 --> 00:31:13,750
launch three more if we want to take

00:31:11,920 --> 00:31:14,279
that one down you want to dissect it and

00:31:13,750 --> 00:31:16,259
look

00:31:14,279 --> 00:31:18,629
under a magnifying glass you can I just

00:31:16,259 --> 00:31:20,219
need to you know route the traffic over

00:31:18,629 --> 00:31:22,799
and we can do it in production if you

00:31:20,219 --> 00:31:24,239
want to because the app is only going

00:31:22,799 --> 00:31:28,710
against this one service and it's

00:31:24,239 --> 00:31:30,989
isolated right in terms of the downtime

00:31:28,710 --> 00:31:32,779
what's really great about it is kind of

00:31:30,989 --> 00:31:36,450
the aspect I just talked about you know

00:31:32,779 --> 00:31:38,729
there's really zero downtime with the

00:31:36,450 --> 00:31:42,719
rolling deployments that we do we

00:31:38,729 --> 00:31:45,809
typically do things more prescriptive

00:31:42,719 --> 00:31:48,629
than just using kind of the the restart

00:31:45,809 --> 00:31:49,769
or deploy option within DC OS so if

00:31:48,629 --> 00:31:52,499
we've played around with some of the

00:31:49,769 --> 00:31:56,190
options for zero downtime deployment

00:31:52,499 --> 00:31:58,609
that they come with marathon elbe but my

00:31:56,190 --> 00:32:00,929
preferred way of doing it is actually

00:31:58,609 --> 00:32:04,279
I'll call it kind of the vamp way or the

00:32:00,929 --> 00:32:06,869
canary release way which is essentially

00:32:04,279 --> 00:32:09,419
spinning up an instance on its own

00:32:06,869 --> 00:32:10,859
that's nice and good doesn't even have

00:32:09,419 --> 00:32:13,649
to be in the same pod you can have a

00:32:10,859 --> 00:32:17,059
different name it has its own IP or its

00:32:13,649 --> 00:32:20,940
own service discovery DNS whatever it is

00:32:17,059 --> 00:32:24,629
rerouting my actual live traffic to it

00:32:20,940 --> 00:32:27,419
and then the old instance I can take

00:32:24,629 --> 00:32:31,339
down it's a rolling deployment but it's

00:32:27,419 --> 00:32:34,259
a little bit more prescriptive as

00:32:31,339 --> 00:32:36,419
opposed to mesos can handle of that

00:32:34,259 --> 00:32:39,450
right like I can just do it all in DC OS

00:32:36,419 --> 00:32:41,580
have it based on my upgrade strategy I

00:32:39,450 --> 00:32:44,399
can set up kind of the minimum amount of

00:32:41,580 --> 00:32:46,859
live ones and non line ones etc but

00:32:44,399 --> 00:32:49,099
specifically at Royal this has been more

00:32:46,859 --> 00:32:51,119
effective because I can show people

00:32:49,099 --> 00:32:52,710
right that the traffic is being routed

00:32:51,119 --> 00:32:55,799
here you have nothing to worry about on

00:32:52,710 --> 00:32:57,239
the other side when you do some of the

00:32:55,799 --> 00:32:59,009
more mass deployments like some of the

00:32:57,239 --> 00:33:01,469
guys I've spoken out here to and like GE

00:32:59,009 --> 00:33:03,179
and Verizon where they have their

00:33:01,469 --> 00:33:05,029
clusters are just huge and they're

00:33:03,179 --> 00:33:07,409
running way more workloads than we are

00:33:05,029 --> 00:33:09,479
the automation probably makes more sense

00:33:07,409 --> 00:33:11,219
right but for a lot of these things it's

00:33:09,479 --> 00:33:12,960
about the comfort level as well and

00:33:11,219 --> 00:33:14,969
getting that comfort level with some of

00:33:12,960 --> 00:33:16,469
these technologies for folks you know as

00:33:14,969 --> 00:33:19,889
they're very new and they come in on to

00:33:16,469 --> 00:33:22,219
it it's important important to do it in

00:33:19,889 --> 00:33:22,219
the right way

00:33:23,050 --> 00:33:30,010
okay so I'm gonna blaze through this

00:33:28,360 --> 00:33:32,860
slide because I'm talking a little bit

00:33:30,010 --> 00:33:35,980
more than I usually would have I think

00:33:32,860 --> 00:33:37,480
it's just a nervousness but we

00:33:35,980 --> 00:33:41,160
essentially ended up with two footprints

00:33:37,480 --> 00:33:45,690
right this is just a simplification but

00:33:41,160 --> 00:33:48,790
to solve the first portion of it of the

00:33:45,690 --> 00:33:50,410
same footprint ship and Shore we

00:33:48,790 --> 00:33:51,850
essentially run the same exact thing

00:33:50,410 --> 00:33:52,090
ship and Shore it's really as simple as

00:33:51,850 --> 00:33:56,170
that

00:33:52,090 --> 00:33:59,020
right we have underneath here vSphere

00:33:56,170 --> 00:34:03,310
and underneath here EC twos on AWS right

00:33:59,020 --> 00:34:04,270
and from there it's really DCOs and up

00:34:03,310 --> 00:34:09,399
we're on Cassandra

00:34:04,270 --> 00:34:11,050
we're on Kafka and from there you know

00:34:09,399 --> 00:34:13,390
we we do our API management through

00:34:11,050 --> 00:34:17,610
Apogee and that's that's essentially our

00:34:13,390 --> 00:34:20,740
structure the nice thing about that is

00:34:17,610 --> 00:34:22,870
it's exactly the same ship and Shore

00:34:20,740 --> 00:34:25,390
same folder structure same service names

00:34:22,870 --> 00:34:27,850
I can take my Jenkins and Jenkins

00:34:25,390 --> 00:34:28,510
actually does a deployment to my Clyde

00:34:27,850 --> 00:34:31,690
DCOs

00:34:28,510 --> 00:34:33,100
and and our Jenkins actually lives in a

00:34:31,690 --> 00:34:35,200
completely separate like DCOs

00:34:33,100 --> 00:34:36,850
environment it's a dev environment and

00:34:35,200 --> 00:34:38,980
you can go deploy to any environment I

00:34:36,850 --> 00:34:41,350
want to because it's also centrally

00:34:38,980 --> 00:34:43,419
connected to our secret store and it has

00:34:41,350 --> 00:34:45,940
everything it needs to know and all the

00:34:43,419 --> 00:34:47,980
permission that it needs to go put our

00:34:45,940 --> 00:34:50,050
code and all the other stuff that goes

00:34:47,980 --> 00:34:54,850
along with it and other clusters which

00:34:50,050 --> 00:34:57,160
is really really convenient and then we

00:34:54,850 --> 00:35:01,360
have the confluent aspect in-between

00:34:57,160 --> 00:35:04,660
right so we do use confluent Kafka to to

00:35:01,360 --> 00:35:06,070
power things up and you know it's I

00:35:04,660 --> 00:35:09,370
think it's been really great working

00:35:06,070 --> 00:35:11,560
with them on that solution but one of

00:35:09,370 --> 00:35:13,780
the really great pieces that comes with

00:35:11,560 --> 00:35:17,170
kind of the enterprise confluent version

00:35:13,780 --> 00:35:19,300
is the replicator right which you know

00:35:17,170 --> 00:35:21,610
the traditional like mirror maker that

00:35:19,300 --> 00:35:24,610
comes from the just the Apache project

00:35:21,610 --> 00:35:26,020
it doesn't do enough to to really get

00:35:24,610 --> 00:35:28,330
you the capabilities that this does

00:35:26,020 --> 00:35:29,950
which essentially you know if you've

00:35:28,330 --> 00:35:31,990
played around with Kafka Connect it lets

00:35:29,950 --> 00:35:34,590
you just create a really simple and easy

00:35:31,990 --> 00:35:36,610
connector that makes sure that you're

00:35:34,590 --> 00:35:38,920
replicating topic to topic

00:35:36,610 --> 00:35:40,780
across two kafka clusters right like

00:35:38,920 --> 00:35:42,820
usually you have your sink and source

00:35:40,780 --> 00:35:44,410
that are some sort of you know one of

00:35:42,820 --> 00:35:48,460
them is Kafka and something else is like

00:35:44,410 --> 00:35:49,840
a DB or you know a search engine like

00:35:48,460 --> 00:35:51,700
elasticsearch or something like that in

00:35:49,840 --> 00:35:54,580
this situation it's Kafka - Kafka and

00:35:51,700 --> 00:35:56,710
it's really great I mean I could even

00:35:54,580 --> 00:35:59,950
have a case where I'm essentially doing

00:35:56,710 --> 00:36:03,220
a replication of like duplicating a

00:35:59,950 --> 00:36:05,770
topic by writing like using the

00:36:03,220 --> 00:36:08,320
replicator into my cluster as well to

00:36:05,770 --> 00:36:11,470
create - so it's really great to have

00:36:08,320 --> 00:36:12,010
that flexibility for replication all

00:36:11,470 --> 00:36:15,310
right

00:36:12,010 --> 00:36:17,620
so overall from from our stack

00:36:15,310 --> 00:36:22,180
perspective here this was what we

00:36:17,620 --> 00:36:24,760
started out with I could say that out of

00:36:22,180 --> 00:36:26,970
all of the things on here that that we

00:36:24,760 --> 00:36:29,320
use you know it's been really great

00:36:26,970 --> 00:36:31,140
writing things in legume especially if

00:36:29,320 --> 00:36:33,910
you have developers that have never

00:36:31,140 --> 00:36:37,500
written micro-services and are you know

00:36:33,910 --> 00:36:39,520
career Java spring developers or just

00:36:37,500 --> 00:36:43,570
you know are really new to micro

00:36:39,520 --> 00:36:44,980
services our guys were Java devs for a

00:36:43,570 --> 00:36:47,770
long time

00:36:44,980 --> 00:36:49,660
we chose legume because it's a very

00:36:47,770 --> 00:36:52,450
opinionated framework on building micro

00:36:49,660 --> 00:36:54,100
services so it really you know if you're

00:36:52,450 --> 00:36:55,930
concerned that your developers have kind

00:36:54,100 --> 00:36:57,880
of cowboy mentality and can go build

00:36:55,930 --> 00:37:00,880
things like you know a hundred different

00:36:57,880 --> 00:37:02,430
ways which I love developers that's one

00:37:00,880 --> 00:37:06,010
of the best and worst things about them

00:37:02,430 --> 00:37:07,900
I think that's something that helps you

00:37:06,010 --> 00:37:09,310
kind of harness that and and and from an

00:37:07,900 --> 00:37:11,440
architect perspective is someone

00:37:09,310 --> 00:37:12,580
overseeing this it gives me a lot of

00:37:11,440 --> 00:37:14,950
peace of mind that they're building it

00:37:12,580 --> 00:37:19,780
in the right way you know we run things

00:37:14,950 --> 00:37:22,810
on rel you know docker run time which we

00:37:19,780 --> 00:37:25,990
may or may not switch to the universal

00:37:22,810 --> 00:37:28,390
runtime sometime soon in terms of

00:37:25,990 --> 00:37:30,040
service discovery we did we do a lot of

00:37:28,390 --> 00:37:33,610
the in cluster service discovery

00:37:30,040 --> 00:37:35,680
specifically for actual like addressing

00:37:33,610 --> 00:37:37,360
between services using the built-in

00:37:35,680 --> 00:37:40,180
capabilities with Marathon and kind of

00:37:37,360 --> 00:37:42,790
Marathon DNS etc but we actually found

00:37:40,180 --> 00:37:45,040
that using consul for cross cluster

00:37:42,790 --> 00:37:47,230
service discovery is really useful so

00:37:45,040 --> 00:37:48,970
console gives us a opportunity to do

00:37:47,230 --> 00:37:50,510
service discovery across all the ships

00:37:48,970 --> 00:37:54,170
in one single pane

00:37:50,510 --> 00:37:56,840
glass right so I can install a consul

00:37:54,170 --> 00:37:58,670
agent on every ship and they all talk to

00:37:56,840 --> 00:38:00,470
each other using a gossip protocol that

00:37:58,670 --> 00:38:02,150
allows me to view every service that I

00:38:00,470 --> 00:38:05,390
have running across the ship of 40 a

00:38:02,150 --> 00:38:07,700
fleet of 40 ships right so it's it's a

00:38:05,390 --> 00:38:09,560
really great way for me from a

00:38:07,700 --> 00:38:11,450
monitoring perspective to go to one

00:38:09,560 --> 00:38:13,460
single pane of glass and see every

00:38:11,450 --> 00:38:15,650
service in every cluster that's running

00:38:13,460 --> 00:38:17,450
how healthy it is and there's even

00:38:15,650 --> 00:38:20,510
opportunities to send metadata and

00:38:17,450 --> 00:38:22,460
things like that into consult it to

00:38:20,510 --> 00:38:26,870
display as well along with it so that's

00:38:22,460 --> 00:38:28,430
really been great in terms of dynamic

00:38:26,870 --> 00:38:31,370
property management you know this is a

00:38:28,430 --> 00:38:33,730
interesting area we try to do a lot of

00:38:31,370 --> 00:38:36,320
kind of the Netflix OSS things around

00:38:33,730 --> 00:38:39,260
like hot reload configurations stuff

00:38:36,320 --> 00:38:40,850
like that so that we could you know

00:38:39,260 --> 00:38:42,850
essentially change configuration without

00:38:40,850 --> 00:38:45,170
having to restart the service and

00:38:42,850 --> 00:38:46,610
there's a lot of really great solutions

00:38:45,170 --> 00:38:49,940
out there I can't really get into the

00:38:46,610 --> 00:38:52,490
specifics but we do our config

00:38:49,940 --> 00:38:54,290
management and console as well because

00:38:52,490 --> 00:38:57,050
it provides you the key value store and

00:38:54,290 --> 00:38:59,360
our micro services essentially each one

00:38:57,050 --> 00:39:01,580
of them is connected to console and is

00:38:59,360 --> 00:39:04,430
essentially watching it for changes

00:39:01,580 --> 00:39:07,670
relating to itself and if we want to for

00:39:04,430 --> 00:39:09,580
example turn on like debug for example

00:39:07,670 --> 00:39:12,350
to go from info to a more verbose

00:39:09,580 --> 00:39:14,290
logging level we can do it in console

00:39:12,350 --> 00:39:16,190
without restarting the service which is

00:39:14,290 --> 00:39:17,630
really nice and it gives us other

00:39:16,190 --> 00:39:19,430
capabilities if we want to change

00:39:17,630 --> 00:39:20,810
anything else within it but it really

00:39:19,430 --> 00:39:23,030
gives you a lot of flexibility and

00:39:20,810 --> 00:39:24,260
really changes the game in terms of zero

00:39:23,030 --> 00:39:25,970
downtime like I don't even have to think

00:39:24,260 --> 00:39:28,520
about a rolling deployment I can

00:39:25,970 --> 00:39:32,030
literally go change a cell in a kV store

00:39:28,520 --> 00:39:33,740
and the service would pick it up in

00:39:32,030 --> 00:39:35,420
terms of circuit breakers we used kind

00:39:33,740 --> 00:39:39,080
of the built-in circuit breakers and

00:39:35,420 --> 00:39:41,030
legume we are working on a way to

00:39:39,080 --> 00:39:42,440
essentially instrument that using

00:39:41,030 --> 00:39:45,800
turbine and hysterics but we haven't

00:39:42,440 --> 00:39:50,020
gotten there yet and I'm getting booted

00:39:45,800 --> 00:39:53,540
here but do I have time for questions

00:39:50,020 --> 00:39:55,730
okay sounds good I'll just leave you

00:39:53,540 --> 00:39:57,230
guys here with just this slide so you

00:39:55,730 --> 00:39:59,420
can see a picture of the mobile app if

00:39:57,230 --> 00:40:01,870
you haven't downloaded but let's open up

00:39:59,420 --> 00:40:01,870
for questions

00:40:03,270 --> 00:40:24,970
yeah in which between ship and Shore so

00:40:23,530 --> 00:40:28,330
honestly the way that we have our

00:40:24,970 --> 00:40:31,360
network running it's it's really just

00:40:28,330 --> 00:40:34,290
another the ship Network essentially

00:40:31,360 --> 00:40:37,780
extends into our data center right and

00:40:34,290 --> 00:40:39,670
for us is just another IP so the way

00:40:37,780 --> 00:40:41,500
that we've been dealing with it we have

00:40:39,670 --> 00:40:45,070
done some troubleshooting in terms of

00:40:41,500 --> 00:40:46,660
latency and things like that but just to

00:40:45,070 --> 00:40:50,250
eliminate things along the way right

00:40:46,660 --> 00:40:52,869
there's probably an inordinate amount of

00:40:50,250 --> 00:40:53,980
like load balancers and proxies along

00:40:52,869 --> 00:40:56,380
the way that you kind of have to deal

00:40:53,980 --> 00:40:57,220
with so we have done quite like one of

00:40:56,380 --> 00:41:01,530
the biggest pain points have been

00:40:57,220 --> 00:41:03,730
opening the right firewall ports to to

00:41:01,530 --> 00:41:05,950
essentially get this thing flowing but

00:41:03,730 --> 00:41:07,540
once we did and kind of templatized it a

00:41:05,950 --> 00:41:10,030
little bit now we're able to take it

00:41:07,540 --> 00:41:12,850
from from ship to ship and then one of

00:41:10,030 --> 00:41:15,700
the things we're looking into it but

00:41:12,850 --> 00:41:18,490
struggling a little bit is configuring

00:41:15,700 --> 00:41:21,670
the right polling interval for for some

00:41:18,490 --> 00:41:23,230
of the Kafka replication that we're

00:41:21,670 --> 00:41:24,640
doing but we're getting better and

00:41:23,230 --> 00:41:27,850
better at it right I think we started

00:41:24,640 --> 00:41:31,150
with like every 24 hours for some of our

00:41:27,850 --> 00:41:33,730
things and we've knocked it down to you

00:41:31,150 --> 00:41:35,200
know for some of our more fragile most

00:41:33,730 --> 00:41:37,359
of them are real time our more fragile

00:41:35,200 --> 00:41:40,300
systems are down to you know to our

00:41:37,359 --> 00:41:43,150
updates which really a guy that's from a

00:41:40,300 --> 00:41:44,740
you know from Ras 400 but everything

00:41:43,150 --> 00:41:47,140
else that's just purely running on here

00:41:44,740 --> 00:41:49,150
like our Weather Service Marc ship

00:41:47,140 --> 00:41:52,380
statistics things like that that's real

00:41:49,150 --> 00:41:52,380
time across trip enjoy

00:41:53,380 --> 00:41:59,970
oh yeah I I personally was not doing

00:41:56,769 --> 00:42:02,970
that but yes we've had so many headaches

00:41:59,970 --> 00:42:02,970
yeah

00:42:10,110 --> 00:42:15,310
yeah it's so it's you probably want to

00:42:13,810 --> 00:42:19,120
segment it a little bit right so there

00:42:15,310 --> 00:42:21,550
is data that is only relevant to a

00:42:19,120 --> 00:42:23,110
voyage right and then there's data

00:42:21,550 --> 00:42:26,410
that's a little longer left so we have

00:42:23,110 --> 00:42:28,210
things like there's even things that are

00:42:26,410 --> 00:42:30,760
only specific to a day of a voyage right

00:42:28,210 --> 00:42:34,900
so today we show things like the current

00:42:30,760 --> 00:42:37,240
weather sunrise sunset when the the

00:42:34,900 --> 00:42:39,040
gangway and the ports opened and closed

00:42:37,240 --> 00:42:41,170
that's probably for that specific day

00:42:39,040 --> 00:42:43,720
right then we have things like the

00:42:41,170 --> 00:42:45,430
activities for the whole voyage in which

00:42:43,720 --> 00:42:47,530
day they happen on what products are

00:42:45,430 --> 00:42:50,560
there etc and that gets set up by a

00:42:47,530 --> 00:42:52,090
Content team for each voyage it's that's

00:42:50,560 --> 00:42:54,520
gonna get more complicated as we start

00:42:52,090 --> 00:42:56,920
doing that 140 ships right now we're

00:42:54,520 --> 00:42:58,960
only a 1 right so that process itself

00:42:56,920 --> 00:43:01,480
will get very complicated then we have

00:42:58,960 --> 00:43:05,140
very long live data right our list of

00:43:01,480 --> 00:43:07,000
ships or list of ports the itineraries

00:43:05,140 --> 00:43:09,250
that each ship take for example the

00:43:07,000 --> 00:43:11,970
allure goes Eastern Caribbean and

00:43:09,250 --> 00:43:14,500
Western Caribbean it alternates every

00:43:11,970 --> 00:43:16,600
every week it always leaves on Sunday

00:43:14,500 --> 00:43:18,010
always comes back on a Sunday some of

00:43:16,600 --> 00:43:23,130
that stuff doesn't change very often

00:43:18,010 --> 00:43:27,940
unless there's a hurricane yeah cool

00:43:23,130 --> 00:43:28,410
anyone else all right thank you

00:43:27,940 --> 00:43:33,550
everybody

00:43:28,410 --> 00:43:33,550

YouTube URL: https://www.youtube.com/watch?v=lg9H-elCyGA


