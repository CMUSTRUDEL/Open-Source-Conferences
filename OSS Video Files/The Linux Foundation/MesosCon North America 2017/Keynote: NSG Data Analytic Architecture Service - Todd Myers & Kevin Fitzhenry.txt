Title: Keynote: NSG Data Analytic Architecture Service - Todd Myers & Kevin Fitzhenry
Publication date: 2017-09-15
Playlist: MesosCon North America 2017
Description: 
	Keynote: NSG Data Analytic Architecture Service - Todd Myers & Kevin Fitzhenry, National Geospatial-Intelligence Agency

In this presentation, Todd Myers and Kevin Fitzhenry will present how the National Geospatial-Intelligence Agency is adopting Mesos for large scale processing.

About Kevin Fitzhenry
System Engineer contractor that lead the cloud transition team for National Geospatial-Intelligence Agency (NGA) Research division. Now responsible for implementing production DC/OS clusters.

About Todd Myers
Senior Architect leading the deployment of our multi datacenter Mesos processing clusters for the National Geospatial-Intelligence Agency.
Captions: 
	00:00:00,030 --> 00:00:03,270
so I'm Todd Myers and my partner here is

00:00:02,070 --> 00:00:05,460
Kevin Fenton we're gonna walk through a

00:00:03,270 --> 00:00:07,500
little bit of history and how we started

00:00:05,460 --> 00:00:09,300
to build a relationship with the Masons

00:00:07,500 --> 00:00:11,340
community and especially Mason sphere

00:00:09,300 --> 00:00:17,070
and where we are and where we're going

00:00:11,340 --> 00:00:19,350
in the next year or so so we felt it was

00:00:17,070 --> 00:00:21,449
very important as we looked at the type

00:00:19,350 --> 00:00:24,330
of data that we have to be prepared to

00:00:21,449 --> 00:00:24,960
process over the next 10 or 20 years we

00:00:24,330 --> 00:00:26,699
have to have something that's

00:00:24,960 --> 00:00:28,680
substracting and taking care of the

00:00:26,699 --> 00:00:32,550
resource negotiations and scheduling for

00:00:28,680 --> 00:00:35,790
us so Apache mesas was was a no brainer

00:00:32,550 --> 00:00:37,320
in our in our mind and during that

00:00:35,790 --> 00:00:39,629
process over the past three or four

00:00:37,320 --> 00:00:41,730
years we had been dabbling in a

00:00:39,629 --> 00:00:44,040
framework called scale that was

00:00:41,730 --> 00:00:46,250
specifically focused fired me so us on

00:00:44,040 --> 00:00:50,399
doing batch processing and even prior to

00:00:46,250 --> 00:00:51,870
continued ization and as that evolved we

00:00:50,399 --> 00:00:54,960
it was a perfect fit to take our nga

00:00:51,870 --> 00:00:58,230
scale open source product project and

00:00:54,960 --> 00:01:00,030
put that into the universe deployments

00:00:58,230 --> 00:01:02,070
and I believe that is part of the

00:01:00,030 --> 00:01:07,049
university of limits in Mesa sphere as

00:01:02,070 --> 00:01:08,909
we speak DCOs but beyond that in order

00:01:07,049 --> 00:01:10,260
for us to get to the scale of processing

00:01:08,909 --> 00:01:13,650
what you see in the bottom right hand

00:01:10,260 --> 00:01:15,900
corner we needed something to be able to

00:01:13,650 --> 00:01:18,000
insert packages without having to wait

00:01:15,900 --> 00:01:20,670
for three or four months of meetings and

00:01:18,000 --> 00:01:22,470
requirements and having different people

00:01:20,670 --> 00:01:24,150
compete against different priorities and

00:01:22,470 --> 00:01:27,390
so we needed a way to bring these things

00:01:24,150 --> 00:01:29,400
in and have them be isolated localized

00:01:27,390 --> 00:01:32,610
for different types of deployments

00:01:29,400 --> 00:01:34,290
whether it's a domain that's on a open

00:01:32,610 --> 00:01:38,479
domain or whether it's a domain which is

00:01:34,290 --> 00:01:40,590
a closed domain so we have embarked on

00:01:38,479 --> 00:01:43,860
gathering up the universe packages

00:01:40,590 --> 00:01:45,780
adding some of our own and we've we've

00:01:43,860 --> 00:01:47,700
created an environment that allows us to

00:01:45,780 --> 00:01:50,460
control the entire local universe

00:01:47,700 --> 00:01:51,659
deployments not attached to the maysa

00:01:50,460 --> 00:01:53,130
masters and we're gonna go through that

00:01:51,659 --> 00:01:56,159
and Kevin will highlight that in

00:01:53,130 --> 00:01:59,850
subsequent slides so why are we doing

00:01:56,159 --> 00:02:01,619
this we needed something to come in and

00:01:59,850 --> 00:02:03,509
basically create a paradigm shift a

00:02:01,619 --> 00:02:05,600
paradigm shift of how we are going to

00:02:03,509 --> 00:02:08,700
bring in framework services

00:02:05,600 --> 00:02:11,250
containerization evolve our programs our

00:02:08,700 --> 00:02:13,080
applications our system designs so that

00:02:11,250 --> 00:02:15,240
we have an environment

00:02:13,080 --> 00:02:17,990
us to quickly insert without having to

00:02:15,240 --> 00:02:21,240
go through the regular process of

00:02:17,990 --> 00:02:22,620
bidding for contracts and vendors

00:02:21,240 --> 00:02:24,450
competing against each other so we

00:02:22,620 --> 00:02:26,640
wanted to abstract that and provide a

00:02:24,450 --> 00:02:29,400
gateway and so for us this after the

00:02:26,640 --> 00:02:31,350
abstraction of DCOs was perfect to

00:02:29,400 --> 00:02:35,370
provide a unifying environment for our

00:02:31,350 --> 00:02:38,460
infrastructure it also leverages a great

00:02:35,370 --> 00:02:40,740
opportunity for us to have the large

00:02:38,460 --> 00:02:42,150
what we call large programs a record use

00:02:40,740 --> 00:02:44,310
an environment without them having to

00:02:42,150 --> 00:02:48,200
create a separate architecture we also

00:02:44,310 --> 00:02:51,300
have created an automatic process for

00:02:48,200 --> 00:02:53,130
authority to operate which means each

00:02:51,300 --> 00:02:55,590
customer that comes in to the cluster

00:02:53,130 --> 00:02:58,110
that we host they don't have to worry

00:02:55,590 --> 00:02:59,790
about that so we're laying the

00:02:58,110 --> 00:03:01,440
foundation and then the foundation is so

00:02:59,790 --> 00:03:02,580
we want to greatly enable our developers

00:03:01,440 --> 00:03:05,640
we want the developers to build a

00:03:02,580 --> 00:03:07,920
program to Jilin applications and data

00:03:05,640 --> 00:03:09,600
sources and phenomenology and we're

00:03:07,920 --> 00:03:14,270
starting to see that we're going to a

00:03:09,600 --> 00:03:17,489
scale that we've never had before so

00:03:14,270 --> 00:03:19,800
speak a little bit about metrics and

00:03:17,489 --> 00:03:22,320
past we would have very low utilization

00:03:19,800 --> 00:03:25,410
on our machines single digit numbers a

00:03:22,320 --> 00:03:27,720
percentage of CPU and we have seen over

00:03:25,410 --> 00:03:30,570
the past year on average between 50 to

00:03:27,720 --> 00:03:32,340
75 at the peak utilization of every

00:03:30,570 --> 00:03:34,890
process that we're running for certain

00:03:32,340 --> 00:03:38,730
phenomenology and this is really

00:03:34,890 --> 00:03:40,110
important because nga is a service

00:03:38,730 --> 00:03:41,519
provider for the Department of Defense

00:03:40,110 --> 00:03:44,370
and also Intelligence Committee for

00:03:41,519 --> 00:03:46,410
geospatial intelligence gened and that

00:03:44,370 --> 00:03:48,720
data has to be leveraged and available

00:03:46,410 --> 00:03:51,540
quickly and as we go forward to the next

00:03:48,720 --> 00:03:53,010
10 to 15 years the datasets are getting

00:03:51,540 --> 00:03:54,900
larger the sensors the overhead the

00:03:53,010 --> 00:03:57,780
satellites are coming in and we need to

00:03:54,900 --> 00:03:59,580
have this type of architecture right

00:03:57,780 --> 00:04:01,620
where the data is coming in and so this

00:03:59,580 --> 00:04:04,530
has really save the stage for both DoD

00:04:01,620 --> 00:04:05,730
and intelligence community so I'm gonna

00:04:04,530 --> 00:04:08,100
hand it over to Kevin and we're gonna

00:04:05,730 --> 00:04:10,019
talk about one of the key components of

00:04:08,100 --> 00:04:12,750
which is really important for us is

00:04:10,019 --> 00:04:17,580
addressing the DCs and isolation thanks

00:04:12,750 --> 00:04:22,500
I hope everyone's enjoying the week so

00:04:17,580 --> 00:04:23,430
far last day ready to get back and apply

00:04:22,500 --> 00:04:26,220
everything you learned

00:04:23,430 --> 00:04:27,060
back at work so chem veterinary engineer

00:04:26,220 --> 00:04:30,060
supporting in DES

00:04:27,060 --> 00:04:31,979
ng a contractor I'm gonna be talking

00:04:30,060 --> 00:04:33,539
about uh when I get to the next slide

00:04:31,979 --> 00:04:35,639
some examples of what we thought were

00:04:33,539 --> 00:04:37,229
probably some beneficial things to more

00:04:35,639 --> 00:04:38,639
than just us put out there in the

00:04:37,229 --> 00:04:41,699
community and start conversations about

00:04:38,639 --> 00:04:43,500
but before I get there it helps to kind

00:04:41,699 --> 00:04:45,990
of give a little bit of background and

00:04:43,500 --> 00:04:47,400
some of the design constraints design

00:04:45,990 --> 00:04:49,350
goals we knew we wanted to start with

00:04:47,400 --> 00:04:53,250
from the get-go to kind of set ourselves

00:04:49,350 --> 00:04:55,139
up for success because it is a kind of

00:04:53,250 --> 00:04:59,370
rigid environment a lot of policy and

00:04:55,139 --> 00:05:00,630
regulations being in a DoD area for a

00:04:59,370 --> 00:05:04,289
good reason when there's warfighters

00:05:00,630 --> 00:05:06,530
depending on the products or output

00:05:04,289 --> 00:05:08,340
we're producing so you know what

00:05:06,530 --> 00:05:10,169
unreliable systems get out in production

00:05:08,340 --> 00:05:11,789
or systems that can't protect the data

00:05:10,169 --> 00:05:14,070
in the proper way beyond the production

00:05:11,789 --> 00:05:17,010
so and and the gist this slide next to

00:05:14,070 --> 00:05:20,160
me here puts all that into a few

00:05:17,010 --> 00:05:23,669
sentences but the gist of it is we knew

00:05:20,160 --> 00:05:26,400
we wanted a repeatable way to deploy a

00:05:23,669 --> 00:05:30,780
DCOs cluster in an incredible fashion in

00:05:26,400 --> 00:05:34,979
a AWS cloud like environment using as

00:05:30,780 --> 00:05:37,490
much DevOps CIA CD automation is

00:05:34,979 --> 00:05:40,860
possible because we're not a real I'd

00:05:37,490 --> 00:05:43,229
deep staff team so we knew we didn't

00:05:40,860 --> 00:05:46,889
have time to continually repeat manual

00:05:43,229 --> 00:05:49,020
processes so we needed a way to kind of

00:05:46,889 --> 00:05:50,820
set that those tasks off to the side and

00:05:49,020 --> 00:05:54,020
execute them whenever we needed to

00:05:50,820 --> 00:05:57,840
without having to reinvent the wheel so

00:05:54,020 --> 00:05:59,789
having said that that's a big

00:05:57,840 --> 00:06:03,090
undertaking to try to do this and go

00:05:59,789 --> 00:06:05,010
through accreditation process have

00:06:03,090 --> 00:06:06,960
security internal do the vetting of

00:06:05,010 --> 00:06:08,310
password requirements and data

00:06:06,960 --> 00:06:11,070
encryption at rest and all the things

00:06:08,310 --> 00:06:16,320
that come with being in our arena

00:06:11,070 --> 00:06:19,740
so we strategy was break things into

00:06:16,320 --> 00:06:21,599
kind of a three-tier stack with the

00:06:19,740 --> 00:06:24,840
bottom of that stack we refer to as Tier

00:06:21,599 --> 00:06:27,199
one be the the cloud services that we

00:06:24,840 --> 00:06:29,849
consume from the Amazon like environment

00:06:27,199 --> 00:06:32,669
the next stack on top of that is our

00:06:29,849 --> 00:06:34,830
tier 2 which would be actual DCOs

00:06:32,669 --> 00:06:37,469
cluster and the sidecar components that

00:06:34,830 --> 00:06:40,529
kind of enable it and fit it into our

00:06:37,469 --> 00:06:42,029
unique and enterprise configurations and

00:06:40,529 --> 00:06:44,729
then the last tier on top of that would

00:06:42,029 --> 00:06:48,659
be the tenant tier tier 3

00:06:44,729 --> 00:06:49,979
so knowing who our user was going to be

00:06:48,659 --> 00:06:51,719
you want to do everything in those first

00:06:49,979 --> 00:06:53,849
two tiers what we've heard of this core

00:06:51,719 --> 00:06:56,189
to kind of enable that and empower that

00:06:53,849 --> 00:06:58,080
developer who would be our users for

00:06:56,189 --> 00:06:59,399
whom his tenants how to just show up in

00:06:58,080 --> 00:07:00,779
the cluster with their little bits of

00:06:59,399 --> 00:07:03,869
code that are unique to their

00:07:00,779 --> 00:07:05,969
application just make up an example real

00:07:03,869 --> 00:07:09,899
quick like Human Resources wanting to do

00:07:05,969 --> 00:07:11,519
a new time tracking application for time

00:07:09,899 --> 00:07:13,769
cart systems there PI gonna have a

00:07:11,519 --> 00:07:17,369
database cluster Postgres whatever it is

00:07:13,769 --> 00:07:18,659
a container that's unique to the code

00:07:17,369 --> 00:07:20,639
that whatever they're doing their ETL

00:07:18,659 --> 00:07:22,169
are processing on the database and a web

00:07:20,639 --> 00:07:24,419
front-end so they could just show up

00:07:22,169 --> 00:07:27,509
with those three little bits and inherit

00:07:24,419 --> 00:07:29,909
all the work we've done on core to your

00:07:27,509 --> 00:07:31,469
one point or two pieces without them

00:07:29,909 --> 00:07:33,499
having to reinvent that wheel then

00:07:31,469 --> 00:07:36,029
wanting to do their own DCs cluster and

00:07:33,499 --> 00:07:37,709
security pulling their how their hair

00:07:36,029 --> 00:07:39,300
out because they'll need to go through

00:07:37,709 --> 00:07:40,860
and do all the reviews for that unique

00:07:39,300 --> 00:07:42,269
cluster in addition to our cluster and

00:07:40,860 --> 00:07:44,939
anyone else that wants to do a cluster

00:07:42,269 --> 00:07:47,069
it's not a internal security process

00:07:44,939 --> 00:07:48,659
review processes and isn't dundies to us

00:07:47,069 --> 00:07:50,129
and once over here in this corner so we

00:07:48,659 --> 00:07:52,229
don't have to do it again for these

00:07:50,129 --> 00:07:54,059
other guys it's every time you go

00:07:52,229 --> 00:07:55,379
through an install of an application you

00:07:54,059 --> 00:07:57,959
have to do that Carnation process so

00:07:55,379 --> 00:07:59,459
they get to take advantage of in a

00:07:57,959 --> 00:08:00,929
bite-size approach for the accreditation

00:07:59,459 --> 00:08:04,649
process everything we've done on the

00:08:00,929 --> 00:08:07,319
underpinnings in the core so having said

00:08:04,649 --> 00:08:12,089
that let's go on to the other slide with

00:08:07,319 --> 00:08:13,709
the examples so I won't have time to go

00:08:12,089 --> 00:08:14,849
through all of these in live in a few

00:08:13,709 --> 00:08:18,300
minutes we're going to take some time

00:08:14,849 --> 00:08:20,550
for Q&A afterwards it's maybe one or one

00:08:18,300 --> 00:08:21,509
and a half-ish out of these so if I

00:08:20,550 --> 00:08:23,639
don't talk about one that's near and

00:08:21,509 --> 00:08:25,589
dear to your heart on this list I'll be

00:08:23,639 --> 00:08:30,059
around the rest of the day so come help

00:08:25,589 --> 00:08:32,490
me down and we'll talk about it so so to

00:08:30,059 --> 00:08:35,309
expand on that previous example for HR

00:08:32,490 --> 00:08:37,860
so say HR want to do a time tracking

00:08:35,309 --> 00:08:40,199
system as my previous example what if

00:08:37,860 --> 00:08:42,959
there's 48 different ongoing activities

00:08:40,199 --> 00:08:44,430
just within HR alone and they all

00:08:42,959 --> 00:08:47,009
independently decide that they want

00:08:44,430 --> 00:08:48,660
their own dcs cluster and they all show

00:08:47,009 --> 00:08:50,750
up to the security internal security

00:08:48,660 --> 00:08:51,950
team and says what we're gonna do

00:08:50,750 --> 00:08:53,510
he's gonna go a little crazy trying to

00:08:51,950 --> 00:08:55,670
wrap their arms around what all these

00:08:53,510 --> 00:08:57,080
environments are doing and having to

00:08:55,670 --> 00:08:58,700
review all these independently and then

00:08:57,080 --> 00:09:00,260
keep track of them throughout their

00:08:58,700 --> 00:09:03,320
lifecycle as they're running in a

00:09:00,260 --> 00:09:05,530
production environment so us knowing

00:09:03,320 --> 00:09:08,000
that we want to take kind of the

00:09:05,530 --> 00:09:10,520
scalability piece that's lacking on the

00:09:08,000 --> 00:09:13,550
human security side and automate that as

00:09:10,520 --> 00:09:17,270
much as possible so we thank Ben and the

00:09:13,550 --> 00:09:20,750
team the federal guys Reagan and Keith

00:09:17,270 --> 00:09:22,460
and support engineers that went through

00:09:20,750 --> 00:09:25,040
some of our crazy requests that we

00:09:22,460 --> 00:09:28,000
submitted to make some changes in the

00:09:25,040 --> 00:09:30,050
baseline offering a DC OS and

00:09:28,000 --> 00:09:32,210
documentation updates so that we could

00:09:30,050 --> 00:09:34,940
do what we want to do on this second

00:09:32,210 --> 00:09:37,100
bullet for the local universe and that

00:09:34,940 --> 00:09:39,950
example of 48 different clusters there's

00:09:37,100 --> 00:09:42,350
gonna be 48 different local universes

00:09:39,950 --> 00:09:43,730
that in this isolated environment we

00:09:42,350 --> 00:09:44,510
have to roll our own local universes

00:09:43,730 --> 00:09:46,250
because there won't be Internet

00:09:44,510 --> 00:09:47,810
connectivity to the vanilla so I think

00:09:46,250 --> 00:09:50,450
that's in a cluster when you first turn

00:09:47,810 --> 00:09:53,120
it on as things universe that mesosphere

00:09:50,450 --> 00:09:55,400
comm um that's all the community

00:09:53,120 --> 00:09:56,870
contributed packages and security is not

00:09:55,400 --> 00:09:58,700
gonna have time to go review every new

00:09:56,870 --> 00:10:01,089
one that gets dropped into that public

00:09:58,700 --> 00:10:05,390
github that gets rolled into that

00:10:01,089 --> 00:10:06,740
universe mesosphere comm site so we went

00:10:05,390 --> 00:10:08,330
to security early on knowing this was

00:10:06,740 --> 00:10:10,310
going to be a future problem and said

00:10:08,330 --> 00:10:12,560
hey and at the same time working with

00:10:10,310 --> 00:10:14,870
mesosphere we want to extract that local

00:10:12,560 --> 00:10:16,810
universe off of the cluster and set it

00:10:14,870 --> 00:10:19,130
off on dedicated machines on the side

00:10:16,810 --> 00:10:20,630
independent of a cluster and that allows

00:10:19,130 --> 00:10:23,810
us to wrap it with a novel scale group

00:10:20,630 --> 00:10:25,700
and put an EOB in front of it and now we

00:10:23,810 --> 00:10:27,920
can farm out that URL to other people in

00:10:25,700 --> 00:10:29,690
DoD consume it ourselves hand it out to

00:10:27,920 --> 00:10:32,150
other people and then work with security

00:10:29,690 --> 00:10:34,150
to say hey we know these are kind of the

00:10:32,150 --> 00:10:37,130
popular items out in the mesosphere

00:10:34,150 --> 00:10:38,180
universe that I think everyone's

00:10:37,130 --> 00:10:40,760
familiar with the universe but if you're

00:10:38,180 --> 00:10:42,320
not it's kind of akin to the Cintas yum

00:10:40,760 --> 00:10:46,930
repos for just adding packages on the

00:10:42,320 --> 00:10:49,700
fly to your cluster and Linux sense so

00:10:46,930 --> 00:10:52,760
now we can give them like we know we won

00:10:49,700 --> 00:10:55,400
Jenkins we know we want post grass and

00:10:52,760 --> 00:10:57,950
Cassandra and they went and took that

00:10:55,400 --> 00:11:00,320
list of 20-ish whatever looking at Todd

00:10:57,950 --> 00:11:01,250
however many we had knowing is that's

00:11:00,320 --> 00:11:03,800
just a starting point it's going to

00:11:01,250 --> 00:11:05,000
change and let them kind of prove

00:11:03,800 --> 00:11:07,040
through it they're pasted through that

00:11:05,000 --> 00:11:09,410
baseline set of applications that would

00:11:07,040 --> 00:11:12,680
it be available internally to our teams

00:11:09,410 --> 00:11:15,830
and others in DoD behind disappear walls

00:11:12,680 --> 00:11:18,170
to consume those and they came give

00:11:15,830 --> 00:11:20,899
thumbs up on those items I'm like great

00:11:18,170 --> 00:11:23,930
fantastic and then we set up a pipeline

00:11:20,899 --> 00:11:29,029
that would go grab those artifacts out

00:11:23,930 --> 00:11:31,940
of the public github universe repo and

00:11:29,029 --> 00:11:34,940
kind of create that big large tin gig at

00:11:31,940 --> 00:11:36,589
inish double-digit gig image pull that

00:11:34,940 --> 00:11:38,810
inside and do all the security of

00:11:36,589 --> 00:11:40,700
editing and accreditation regulations so

00:11:38,810 --> 00:11:42,920
we have to abide by malware detection

00:11:40,700 --> 00:11:47,260
that kind of thing and put those on

00:11:42,920 --> 00:11:49,399
dedicated machines off cluster and do

00:11:47,260 --> 00:11:51,380
vulnerability on-the-fly testing and

00:11:49,399 --> 00:11:54,920
kind of fail those unit tests if we see

00:11:51,380 --> 00:11:56,450
any weirdness going on and security like

00:11:54,920 --> 00:11:57,860
that idea because now to have like a

00:11:56,450 --> 00:11:59,240
central place that I can go to and kind

00:11:57,860 --> 00:12:01,459
of wrap their arms around no this is the

00:11:59,240 --> 00:12:04,579
baseline I'm going back to that 48

00:12:01,459 --> 00:12:06,050
example 48 different clusters in HR if

00:12:04,579 --> 00:12:08,180
they all had their own little universes

00:12:06,050 --> 00:12:10,100
security would never really be able to

00:12:08,180 --> 00:12:12,320
keep up with developers browsing in the

00:12:10,100 --> 00:12:14,450
user interface and clicking that one one

00:12:12,320 --> 00:12:15,770
button single install for deploying this

00:12:14,450 --> 00:12:17,660
and deleting that it be constantly

00:12:15,770 --> 00:12:21,980
changing new stuffs coming and going out

00:12:17,660 --> 00:12:24,290
of the public universe so now they have

00:12:21,980 --> 00:12:26,230
like a bite-size approach to you be

00:12:24,290 --> 00:12:30,260
doing this accreditation which they like

00:12:26,230 --> 00:12:32,450
so working with mesosphere figured out

00:12:30,260 --> 00:12:37,339
how to rip that apart put that on its

00:12:32,450 --> 00:12:38,540
side behind a autoscale group and now

00:12:37,339 --> 00:12:39,230
everyone can kind of think advantage of

00:12:38,540 --> 00:12:43,940
that themselves

00:12:39,230 --> 00:12:46,070
so then that would trigger a process if

00:12:43,940 --> 00:12:47,779
say another group outside or even

00:12:46,070 --> 00:12:48,980
ourselves i want to add these three new

00:12:47,779 --> 00:12:50,029
things i see you have these but you

00:12:48,980 --> 00:12:52,040
don't have these how hard it would be

00:12:50,029 --> 00:12:53,209
add we'd trigger that process the

00:12:52,040 --> 00:12:55,760
security to say here's gonna be the

00:12:53,209 --> 00:12:56,990
delta and then go off and come back and

00:12:55,760 --> 00:12:58,699
give us a thumbs up yeah we're cool with

00:12:56,990 --> 00:13:00,920
those and our pipeline would trigger

00:12:58,699 --> 00:13:04,220
based off the changes we commit in a

00:13:00,920 --> 00:13:05,480
master branch internal and get to go

00:13:04,220 --> 00:13:07,690
through that pipeline pull and the new

00:13:05,480 --> 00:13:10,279
artifacts and kind of canary him through

00:13:07,690 --> 00:13:13,130
and then everyone just none the wiser

00:13:10,279 --> 00:13:15,290
developers rosen and their dedicated or

00:13:13,130 --> 00:13:17,300
our dcs cluster that we were kind of

00:13:15,290 --> 00:13:19,250
farming out for the enterprise

00:13:17,300 --> 00:13:21,230
for developers to use and develop and

00:13:19,250 --> 00:13:23,089
deploy applications and be clicking in

00:13:21,230 --> 00:13:25,190
there and it's in the backend coming

00:13:23,089 --> 00:13:28,330
over to our centralized one it's a nice

00:13:25,190 --> 00:13:30,470
little demarcated point with its own

00:13:28,330 --> 00:13:33,140
ACLs and security groups that just

00:13:30,470 --> 00:13:35,029
filter down just the menu of what that's

00:13:33,140 --> 00:13:38,630
supposed to be used for over the port's

00:13:35,029 --> 00:13:40,700
unique to the universe so coming down to

00:13:38,630 --> 00:13:44,959
the wire here on time so I'll I'll just

00:13:40,700 --> 00:13:45,980
briefly mention the Jenkins file the

00:13:44,959 --> 00:13:49,550
pipeline you've heard me mention

00:13:45,980 --> 00:13:54,110
pipelines throughout the talk here on

00:13:49,550 --> 00:13:55,910
these couple slides so us want to be

00:13:54,110 --> 00:13:58,040
good stewards of our own Enterprise we

00:13:55,910 --> 00:14:02,270
have a group that kind of rolls out high

00:13:58,040 --> 00:14:04,970
available redundant CI CD tool

00:14:02,270 --> 00:14:08,029
capabilities for us to consume we don't

00:14:04,970 --> 00:14:11,300
want to reinvent the wheel so we kind of

00:14:08,029 --> 00:14:15,110
look at their offering and they chose

00:14:11,300 --> 00:14:17,120
Jenkins for certain functionality so

00:14:15,110 --> 00:14:21,500
there we could come with Co CD we could

00:14:17,120 --> 00:14:23,899
have done get CI but because Jenkins was

00:14:21,500 --> 00:14:26,589
there if you haven't used Jenkins in

00:14:23,899 --> 00:14:28,730
last year for kind of pipeline use cases

00:14:26,589 --> 00:14:31,010
how they recommend go check it back out

00:14:28,730 --> 00:14:33,290
they've released probably a one to one

00:14:31,010 --> 00:14:37,029
feature capability to most of the other

00:14:33,290 --> 00:14:39,589
popular integration tools deploy tools

00:14:37,029 --> 00:14:42,640
that have all the major offerings where

00:14:39,589 --> 00:14:46,430
you can do stages in parallel and

00:14:42,640 --> 00:14:48,350
capture artifacts and do all the normal

00:14:46,430 --> 00:14:51,200
pipeline things so now we have an

00:14:48,350 --> 00:14:53,839
internal master branch that holds a

00:14:51,200 --> 00:14:55,700
Jenkins file and we go in there and we

00:14:53,839 --> 00:14:59,450
define our little pipelines in our unit

00:14:55,700 --> 00:15:02,089
tests along the way and it allows

00:14:59,450 --> 00:15:05,810
developers kind of show up to us with

00:15:02,089 --> 00:15:07,399
their once out of the cluster and the

00:15:05,810 --> 00:15:09,380
plan is when they want to consume

00:15:07,399 --> 00:15:12,079
something on the cluster they can kind

00:15:09,380 --> 00:15:15,380
of define in the marathon JSON or a

00:15:12,079 --> 00:15:17,240
scale recipe or even a bash script it's

00:15:15,380 --> 00:15:19,279
just a bunch of DC OS CLI commands to

00:15:17,240 --> 00:15:22,130
provision stuff out of the environment

00:15:19,279 --> 00:15:24,620
we see them commit into their branch to

00:15:22,130 --> 00:15:27,199
want to consume our resources that

00:15:24,620 --> 00:15:28,790
spawns off a pre agreed-upon process

00:15:27,199 --> 00:15:30,020
with our security to go and see oh

00:15:28,790 --> 00:15:30,710
that's the change these people want to

00:15:30,020 --> 00:15:31,580
make

00:15:30,710 --> 00:15:32,990
they go off and do whatever they got to

00:15:31,580 --> 00:15:35,570
do just for that tier three the new

00:15:32,990 --> 00:15:37,160
Newton that wants to show up and they

00:15:35,570 --> 00:15:40,270
come back was the green light go ahead

00:15:37,160 --> 00:15:43,220
thumbs up and then we merge request that

00:15:40,270 --> 00:15:46,280
and spawn off our our pipeline and now

00:15:43,220 --> 00:15:48,650
we can do testing in a isolated dev test

00:15:46,280 --> 00:15:50,480
stage process that everyone is uh kind

00:15:48,650 --> 00:15:52,370
of moving towards nowadays to get stuff

00:15:50,480 --> 00:15:55,820
into production and fail those builds

00:15:52,370 --> 00:15:58,820
quickly learn quickly how maybe we're

00:15:55,820 --> 00:16:01,100
rolling out a new version 111 of DCOs

00:15:58,820 --> 00:16:03,530
and we know we've got scale version

00:16:01,100 --> 00:16:04,940
three or whatever and other kind of

00:16:03,530 --> 00:16:08,510
tenets that are part of the known

00:16:04,940 --> 00:16:10,610
baseline and see how changing a rev of

00:16:08,510 --> 00:16:12,920
one thing kind of breaks others or maybe

00:16:10,610 --> 00:16:15,080
it all works and it goes through we've

00:16:12,920 --> 00:16:16,940
done our job well defining those unit

00:16:15,080 --> 00:16:21,110
tests ahead of time integration tests

00:16:16,940 --> 00:16:22,820
and future tests and security checks we

00:16:21,110 --> 00:16:23,840
have that confidence of why stop it let

00:16:22,820 --> 00:16:26,270
it roll all the way through our

00:16:23,840 --> 00:16:28,190
environments go out to production so I

00:16:26,270 --> 00:16:29,450
kind of get off to the stage bullet

00:16:28,190 --> 00:16:33,680
before I hand it back over to Todd to

00:16:29,450 --> 00:16:36,380
close this out what's next we know we're

00:16:33,680 --> 00:16:39,860
interested in things like spinnaker and

00:16:36,380 --> 00:16:41,510
they're a new support for DC OS so you

00:16:39,860 --> 00:16:43,640
want to kind of get off the uniqueness

00:16:41,510 --> 00:16:46,460
of having to do our own kind of platform

00:16:43,640 --> 00:16:48,980
II glue scripts because that's more

00:16:46,460 --> 00:16:50,720
stuff we have to maintain unless we have

00:16:48,980 --> 00:16:53,780
to uniquely maintain that's unique to us

00:16:50,720 --> 00:17:00,610
the better leverage common tools I think

00:16:53,780 --> 00:17:02,960
a common theme here this week terraform

00:17:00,610 --> 00:17:04,940
we're doing kind of trickery and user

00:17:02,960 --> 00:17:07,990
data and putting stuff in s3 buckets and

00:17:04,940 --> 00:17:10,790
curl and stuff around to seamlessly

00:17:07,990 --> 00:17:14,680
design this pipeline moving artifacts

00:17:10,790 --> 00:17:16,910
around so tear data is a nice way that I

00:17:14,680 --> 00:17:19,640
felt it mention this earlier so I'll

00:17:16,910 --> 00:17:21,260
just do a quick highlight on it the only

00:17:19,640 --> 00:17:23,900
way we could get to the other side its

00:17:21,260 --> 00:17:25,550
accreditation process was security

00:17:23,900 --> 00:17:27,709
because that's not usually a process

00:17:25,550 --> 00:17:31,430
measured in hours or days or weeks or

00:17:27,709 --> 00:17:33,500
sometimes 91 months spent a year so was

00:17:31,430 --> 00:17:35,840
to work with them they're very flexible

00:17:33,500 --> 00:17:38,150
so i koude o--'s to those internal

00:17:35,840 --> 00:17:38,760
security guys at NGA they kind of

00:17:38,150 --> 00:17:39,910
focused on

00:17:38,760 --> 00:17:41,950
[Music]

00:17:39,910 --> 00:17:44,020
infrastructures code in a master branch

00:17:41,950 --> 00:17:45,310
of a gitlab repo and we can go define

00:17:44,020 --> 00:17:47,770
how our environments gonna be running

00:17:45,310 --> 00:17:49,600
over here is going to look and it gives

00:17:47,770 --> 00:17:51,220
us a seem approach to kind of make

00:17:49,600 --> 00:17:52,350
changes and and figure out the no and

00:17:51,220 --> 00:17:54,190
state at any given point in our

00:17:52,350 --> 00:17:57,040
environment secured it like that they

00:17:54,190 --> 00:17:59,530
have a common place to go previously you

00:17:57,040 --> 00:18:01,840
would have a multi-million dollar DoD

00:17:59,530 --> 00:18:03,190
contract with a big contractor and they

00:18:01,840 --> 00:18:04,690
go off on their own four walls and they

00:18:03,190 --> 00:18:07,120
design and build this thing and they

00:18:04,690 --> 00:18:08,740
show up in GA put it out there and

00:18:07,120 --> 00:18:10,090
that's day one of security starting

00:18:08,740 --> 00:18:11,680
their scrub process going through

00:18:10,090 --> 00:18:13,450
looking at operating systems and the

00:18:11,680 --> 00:18:15,790
password requirements in yoga and they

00:18:13,450 --> 00:18:17,500
surface out many many days later out the

00:18:15,790 --> 00:18:20,080
other side with kind of a review of how

00:18:17,500 --> 00:18:22,780
things work so here they get to be just

00:18:20,080 --> 00:18:24,400
in tune as we're developing as the

00:18:22,780 --> 00:18:26,530
developers for coding the infrastructure

00:18:24,400 --> 00:18:27,970
and see the changes being made and say

00:18:26,530 --> 00:18:30,010
hey I like what you're doing here you're

00:18:27,970 --> 00:18:31,570
closing these woman's that's great and

00:18:30,010 --> 00:18:32,710
along with that are the the active

00:18:31,570 --> 00:18:34,480
governance kind of things with the

00:18:32,710 --> 00:18:35,710
ansible or a puppet or whatever that's

00:18:34,480 --> 00:18:37,060
in the live environment to trigger and

00:18:35,710 --> 00:18:38,200
notify people that change has been made

00:18:37,060 --> 00:18:41,530
that may be what's an approved or as

00:18:38,200 --> 00:18:43,960
approved or we can catch that so I'll

00:18:41,530 --> 00:18:45,670
kind of stop there because we only have

00:18:43,960 --> 00:18:50,290
a minute left but kinda back over your

00:18:45,670 --> 00:18:53,080
time okay thank you welcome so now we

00:18:50,290 --> 00:18:55,210
can have fun so then what's next for us

00:18:53,080 --> 00:18:57,220
is now that we've done all the hard work

00:18:55,210 --> 00:18:58,840
up front automated and made it very easy

00:18:57,220 --> 00:19:01,090
for customers to come in and consume at

00:18:58,840 --> 00:19:03,430
the Tier three level not have to be down

00:19:01,090 --> 00:19:05,110
the tier two and Tier one level now we

00:19:03,430 --> 00:19:08,320
we can focus on objectives that really

00:19:05,110 --> 00:19:10,090
push our functional geospatial

00:19:08,320 --> 00:19:12,520
management responsibilities for DoD and

00:19:10,090 --> 00:19:14,110
IC to these enduring principles here

00:19:12,520 --> 00:19:16,360
geospatial processing at a global

00:19:14,110 --> 00:19:18,340
perspective we're embarking on a major

00:19:16,360 --> 00:19:21,400
push for in bringing in data science

00:19:18,340 --> 00:19:22,750
tradecraft in our agency and what we see

00:19:21,400 --> 00:19:25,030
is that the culmination of these

00:19:22,750 --> 00:19:27,250
actually provide a different way of

00:19:25,030 --> 00:19:29,380
thinking business intelligence and how

00:19:27,250 --> 00:19:31,230
we think about innovation and challenges

00:19:29,380 --> 00:19:35,470
to bring that in quickly insert them

00:19:31,230 --> 00:19:39,040
insider threats cyber security and I'll

00:19:35,470 --> 00:19:41,440
put stomp the one that's really driving

00:19:39,040 --> 00:19:44,380
all this is to be prepared for the

00:19:41,440 --> 00:19:45,700
encroaching sensor phenomenology that

00:19:44,380 --> 00:19:48,690
are kind of coming into denie be

00:19:45,700 --> 00:19:51,140
processed against and ultimately to

00:19:48,690 --> 00:19:53,750
truly have multi data center function

00:19:51,140 --> 00:19:55,309
I'm really really interested in and

00:19:53,750 --> 00:19:57,679
excited to see what's happening the

00:19:55,309 --> 00:20:00,679
community with respect to that we're

00:19:57,679 --> 00:20:03,890
almost there so we do have one more

00:20:00,679 --> 00:20:08,179
thing and so and as has been an effort

00:20:03,890 --> 00:20:10,390
to streamline make it repeatable provide

00:20:08,179 --> 00:20:12,649
it for people to use it consume and

00:20:10,390 --> 00:20:14,299
create and control their own destiny so

00:20:12,649 --> 00:20:15,769
today we're officially announcing that

00:20:14,299 --> 00:20:19,760
we're in the process of open sourcing

00:20:15,769 --> 00:20:23,809
and as it'll be on ng GEOINT I'm sorry

00:20:19,760 --> 00:20:25,610
github / mg AG o + /n - so you can check

00:20:23,809 --> 00:20:26,960
that out over the next couple months and

00:20:25,610 --> 00:20:28,669
you'll start seeing bits to flow in

00:20:26,960 --> 00:20:30,710
there everything we just walked through

00:20:28,669 --> 00:20:33,520
is completely wrapped up in that open

00:20:30,710 --> 00:20:39,359
source project so thank you

00:20:33,520 --> 00:20:39,359

YouTube URL: https://www.youtube.com/watch?v=4SWiDi4mMKg


