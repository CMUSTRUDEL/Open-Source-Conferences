Title: Keynote Panel Discussion: SMACK Today and Tomorrow - Moderated by Ben Hindman
Publication date: 2017-09-14
Playlist: MesosCon North America 2017
Description: 
	Keynote Panel Discussion: SMACK Today and Tomorrow - Moderated by Ben Hindman, Co-Creator, Apache Mesos and Founder, Mesosphere

The SMACK stack is becoming the architecture for fast data processing and weâ€™re bringing together some of the creators of the projects to talk about how SMACK is impacting the data analytics landscape.

Neha Narkhede (co-founder and CTO of Confluent)

Jonathan Ellis (co-founder and CTO of Datastax)

Benjamin Hindman (co-founder at Mesosphere)

About Jonathan Ellis
Jonathan Ellis is the founder and CTO of DataStax , and was Project Chair of Apache Cassandra for over six years. Before his work on distributed databases, he built a multi-petabyte object store based on Reed-Solomon encoding for backup provider Mozy.

The SMACK Stack is the New LAMP Stack
https://mesosphere.com/blog/smack-stack-new-lamp-stack/
Captions: 
	00:00:00,000 --> 00:00:04,560
hello again so we thought it'd be great

00:00:03,240 --> 00:00:07,020
you know everyone that we chatted with

00:00:04,560 --> 00:00:08,519
as Toby mentioned more than 50% of the

00:00:07,020 --> 00:00:10,170
folks are running running things from

00:00:08,519 --> 00:00:12,570
the smack stacks we really wanted to do

00:00:10,170 --> 00:00:14,519
a panel we could focus on that and I

00:00:12,570 --> 00:00:16,770
couldn't be more excited about having

00:00:14,519 --> 00:00:19,050
mayhaw from confluent and jonathan from

00:00:16,770 --> 00:00:23,810
data stacks to join me today so they

00:00:19,050 --> 00:00:23,810
could come on up got the buzz for them

00:00:27,140 --> 00:00:36,270
so I you know I think I'll start this

00:00:31,070 --> 00:00:39,450
just with that it's so fun to be on this

00:00:36,270 --> 00:00:41,700
panel of you guys you know it's it

00:00:39,450 --> 00:00:43,079
really is an honor for me so so they're

00:00:41,700 --> 00:00:47,149
gonna talk about themselves in just a

00:00:43,079 --> 00:00:50,250
second but really quickly co-creator of

00:00:47,149 --> 00:00:53,850
Cassandra and co-founder of data stacks

00:00:50,250 --> 00:00:56,550
co-creator of Kafka and co-founder of

00:00:53,850 --> 00:00:57,930
confluent that's a that's pretty really

00:00:56,550 --> 00:00:59,160
impressive guys so it's really really

00:00:57,930 --> 00:01:01,350
fun to get be on the panel with

00:00:59,160 --> 00:01:05,309
co-creator mezzo see right here well

00:01:01,350 --> 00:01:07,590
yeah so what we're gonna do oh and all

00:01:05,309 --> 00:01:09,750
Apache projects all Apache projects yeah

00:01:07,590 --> 00:01:11,760
just which is great what we're gonna do

00:01:09,750 --> 00:01:13,439
to kick things off is you know this is

00:01:11,760 --> 00:01:15,119
this is a conference about meso sand so

00:01:13,439 --> 00:01:18,000
maybe not everyone has this as familiar

00:01:15,119 --> 00:01:20,909
about data stacks and Cassandra and

00:01:18,000 --> 00:01:24,150
Kafka and confluence so we're gonna kick

00:01:20,909 --> 00:01:26,600
off first with a Jonathan oops I've

00:01:24,150 --> 00:01:26,600
failed

00:01:26,640 --> 00:01:30,870
let's try this again

00:01:27,550 --> 00:01:32,730
[Music]

00:01:30,870 --> 00:01:36,090
first describing a bit more about

00:01:32,730 --> 00:01:39,750
Cassandra and it's ex things Ben and

00:01:36,090 --> 00:01:43,800
yourself so just a quick correction I

00:01:39,750 --> 00:01:47,130
didn't create Cassandra so I was part of

00:01:43,800 --> 00:01:49,560
a team of engineers at Facebook created

00:01:47,130 --> 00:01:54,450
Cassandra and I was part of the team

00:01:49,560 --> 00:01:57,030
that got it into Apache and taken kind

00:01:54,450 --> 00:01:59,220
of the next generation of involvement

00:01:57,030 --> 00:02:00,840
with Cassandra and I think that's one of

00:01:59,220 --> 00:02:02,430
the strengths of open-source by the way

00:02:00,840 --> 00:02:04,979
you said no we're all part of a patchy

00:02:02,430 --> 00:02:07,259
all part of open-source is it lets us

00:02:04,979 --> 00:02:08,820
you know you know kind of build on the

00:02:07,259 --> 00:02:11,400
shoulders of giants and and we don't

00:02:08,820 --> 00:02:12,750
have to reinvent those wheels but we can

00:02:11,400 --> 00:02:15,060
work together to do that so I think

00:02:12,750 --> 00:02:18,450
Cassandra is kind of an open source

00:02:15,060 --> 00:02:21,110
success story that it's gone from your

00:02:18,450 --> 00:02:23,400
corporate incubation to an open source

00:02:21,110 --> 00:02:27,030
success even though those are two

00:02:23,400 --> 00:02:29,459
different teams making that happen so

00:02:27,030 --> 00:02:31,200
now a couple years after I started

00:02:29,459 --> 00:02:34,140
working on Cassandra I founded data

00:02:31,200 --> 00:02:36,989
stacks to to commercialize it and today

00:02:34,140 --> 00:02:41,370
you know data stacks is providing the s

00:02:36,989 --> 00:02:44,340
and the C and smack but also graph and

00:02:41,370 --> 00:02:51,630
and security and streaming analytics on

00:02:44,340 --> 00:02:53,549
top of that so I think early on data

00:02:51,630 --> 00:02:55,260
stacks had the reputation of oh you're

00:02:53,549 --> 00:02:57,299
just you know bolting Apache projects

00:02:55,260 --> 00:03:00,570
together but it's it's come a long way

00:02:57,299 --> 00:03:03,480
since then and just in terms of where we

00:03:00,570 --> 00:03:07,110
see this being used in personalization

00:03:03,480 --> 00:03:09,110
in fraud detection customer 360 apps in

00:03:07,110 --> 00:03:11,790
particular interested in the graph piece

00:03:09,110 --> 00:03:13,950
and a couple of the verticals that are

00:03:11,790 --> 00:03:19,880
particularly interested retail and

00:03:13,950 --> 00:03:26,310
logistics are really invested in this

00:03:19,880 --> 00:03:29,160
all right hi everyone I'm Neha thank you

00:03:26,310 --> 00:03:33,209
for the introduction you know one such

00:03:29,160 --> 00:03:36,060
giant that I was at Collington that's

00:03:33,209 --> 00:03:38,099
where Kafka took birth about eight years

00:03:36,060 --> 00:03:40,050
ago and since then

00:03:38,099 --> 00:03:43,050
Kafka has come a long way I'm

00:03:40,050 --> 00:03:45,030
a co-founder and CTO at confluent we are

00:03:43,050 --> 00:03:48,330
the creators of Kafka and also the main

00:03:45,030 --> 00:03:50,250
backers of Kafka so let me just get a

00:03:48,330 --> 00:03:52,470
quick show of hands of people who have

00:03:50,250 --> 00:03:55,200
heard of Kafka used Carcosa wiring or

00:03:52,470 --> 00:03:56,250
know the level of ok 90% so I'll just

00:03:55,200 --> 00:03:58,350
keep moving then

00:03:56,250 --> 00:04:00,390
okay so Cobb has come a long way it

00:03:58,350 --> 00:04:02,100
started off as a messaging system and

00:04:00,390 --> 00:04:03,780
today it's a distributed streaming

00:04:02,100 --> 00:04:06,720
platform which means it allows you to

00:04:03,780 --> 00:04:09,600
publish and subscribe streams of data as

00:04:06,720 --> 00:04:13,200
in a messaging system it allows you to

00:04:09,600 --> 00:04:15,360
store data you know you know replicated

00:04:13,200 --> 00:04:17,820
cluster and ontology to do stream

00:04:15,360 --> 00:04:20,760
processing right so Kafka's claim to

00:04:17,820 --> 00:04:23,700
fame is that it's wicked fast easy to

00:04:20,760 --> 00:04:25,290
use horizontally scalable and so now

00:04:23,700 --> 00:04:28,830
it's used in thousands of companies

00:04:25,290 --> 00:04:32,100
worldwide to do all sorts of things you

00:04:28,830 --> 00:04:34,710
know from IOT applications where it's

00:04:32,100 --> 00:04:36,630
used as you know sort of a messaging

00:04:34,710 --> 00:04:39,330
backbone for micro services to do

00:04:36,630 --> 00:04:42,210
streaming ETL and now it's a basis for

00:04:39,330 --> 00:04:43,950
doing stream processing and so a

00:04:42,210 --> 00:04:45,750
confluent we provide an enterprise

00:04:43,950 --> 00:04:49,050
distribution of Kafka and a fully hosted

00:04:45,750 --> 00:04:52,320
service called Club thank you thank you

00:04:49,050 --> 00:04:55,680
guys yeah so you know I think we got a

00:04:52,320 --> 00:04:59,250
great explanation of really where the M

00:04:55,680 --> 00:05:01,260
comes in in smack when it comes to this

00:04:59,250 --> 00:05:04,890
world I think both Michael from JP MC

00:05:01,260 --> 00:05:06,060
and Toby described that pretty well you

00:05:04,890 --> 00:05:08,400
know you think you all know what what

00:05:06,060 --> 00:05:09,690
may sauce is so I won't won't describe

00:05:08,400 --> 00:05:11,040
what what that is but really I think

00:05:09,690 --> 00:05:13,320
what's what's more interesting is the

00:05:11,040 --> 00:05:15,960
glue that we're really seeing with this

00:05:13,320 --> 00:05:17,490
stack with smack and we didn't pull all

00:05:15,960 --> 00:05:19,560
the letters together but we pulled the

00:05:17,490 --> 00:05:21,060
ones that we see the most that I see the

00:05:19,560 --> 00:05:23,070
most when I go out and chat with

00:05:21,060 --> 00:05:25,050
organizations both open-source users and

00:05:23,070 --> 00:05:26,460
enterprise and I thought you know we'd

00:05:25,050 --> 00:05:28,080
kick off the panel with talking a bit

00:05:26,460 --> 00:05:29,940
more about those use cases you know you

00:05:28,080 --> 00:05:31,950
started to mention a couple of them you

00:05:29,940 --> 00:05:38,160
know what are the use cases you guys are

00:05:31,950 --> 00:05:41,010
seen for smack so well you know one of

00:05:38,160 --> 00:05:43,590
the use cases I will talk about and let

00:05:41,010 --> 00:05:46,320
Jonathan and Ben cover the others are

00:05:43,590 --> 00:05:49,530
you know use cases around interactive

00:05:46,320 --> 00:05:51,000
customer experiences and IOT so if I

00:05:49,530 --> 00:05:53,370
were to take an example of an

00:05:51,000 --> 00:05:57,389
interactive customer experience

00:05:53,370 --> 00:05:59,250
Kafka mezzos Cassandra a bunch of you

00:05:57,389 --> 00:06:02,039
know other systems are on cruise ships

00:05:59,250 --> 00:06:04,020
now so that you can go in and get a

00:06:02,039 --> 00:06:06,560
fully integrated experience of applying

00:06:04,020 --> 00:06:09,300
gambling credits and dinner reservations

00:06:06,560 --> 00:06:11,759
offshore data centers as well as on the

00:06:09,300 --> 00:06:13,650
ship so the hybrid nature of the

00:06:11,759 --> 00:06:16,259
deployment is one of the central aspects

00:06:13,650 --> 00:06:18,659
my favorite IOT use cases around

00:06:16,259 --> 00:06:20,819
connected cars where you know they're

00:06:18,659 --> 00:06:23,639
trying to do these worldwide tracking of

00:06:20,819 --> 00:06:26,849
cars to detect problems earlier learn

00:06:23,639 --> 00:06:29,370
about driver behavior and so on so it's

00:06:26,849 --> 00:06:32,279
really you know around a span of

00:06:29,370 --> 00:06:34,319
different industries also fin tack to do

00:06:32,279 --> 00:06:37,860
real-time credit card processing in so

00:06:34,319 --> 00:06:40,370
on this is always a question that I had

00:06:37,860 --> 00:06:43,050
trouble with and especially early on

00:06:40,370 --> 00:06:46,139
when we were trying to raise funding for

00:06:43,050 --> 00:06:47,879
data stacks in the venture capitalists

00:06:46,139 --> 00:06:50,159
would say well what do people use

00:06:47,879 --> 00:06:51,840
Cassandra for and you know what are you

00:06:50,159 --> 00:06:54,569
better at than anyone else and that was

00:06:51,840 --> 00:06:56,879
always a tough problem a tough question

00:06:54,569 --> 00:06:59,129
for me because I've always seen it as a

00:06:56,879 --> 00:07:00,870
general-purpose database and you can

00:06:59,129 --> 00:07:04,319
build any kind of application you want

00:07:00,870 --> 00:07:06,960
and so kind of a way of framing the the

00:07:04,319 --> 00:07:09,960
question that I think is more answerable

00:07:06,960 --> 00:07:11,909
is what are the characteristics of those

00:07:09,960 --> 00:07:14,909
applications that make this kind of

00:07:11,909 --> 00:07:18,180
architecture compelling and so some of

00:07:14,909 --> 00:07:20,250
the characteristics are that they need

00:07:18,180 --> 00:07:23,189
to be always on they need real-time

00:07:20,250 --> 00:07:25,680
responses they need to be distributed

00:07:23,189 --> 00:07:27,060
and they need to be scalable and so I

00:07:25,680 --> 00:07:29,219
think when when you're looking at

00:07:27,060 --> 00:07:30,960
applications that require those things I

00:07:29,219 --> 00:07:32,400
think all of us on stage are

00:07:30,960 --> 00:07:34,860
representing kind of that next

00:07:32,400 --> 00:07:37,379
generation that really that's what the

00:07:34,860 --> 00:07:39,930
smack stack is for of that that

00:07:37,379 --> 00:07:43,259
generation of cloud applications that

00:07:39,930 --> 00:07:45,779
your my sequel stacks aren't going to

00:07:43,259 --> 00:07:48,210
get you to that's that's that's a

00:07:45,779 --> 00:07:49,169
perfect transition into the next set of

00:07:48,210 --> 00:07:51,599
set of questions

00:07:49,169 --> 00:07:53,639
you know I when you think about again

00:07:51,599 --> 00:07:57,870
where where the M plays a huge role in

00:07:53,639 --> 00:08:00,089
the smack stack it's providing that that

00:07:57,870 --> 00:08:02,459
platform that can be the same wherever

00:08:00,089 --> 00:08:04,719
you are if you're in the cloud or if

00:08:02,459 --> 00:08:07,529
you're on a cruise

00:08:04,719 --> 00:08:12,399
not a boat don't ever call the boat to a

00:08:07,529 --> 00:08:14,550
cruise ship company or if you are or you

00:08:12,399 --> 00:08:18,429
know if you're in an edge container

00:08:14,550 --> 00:08:20,469
datacenter you know I had an airport and

00:08:18,429 --> 00:08:22,179
so you know I'd love to hear from you

00:08:20,469 --> 00:08:25,149
guys the role that you guys really see

00:08:22,179 --> 00:08:27,580
if cloud in sort of the smack world for

00:08:25,149 --> 00:08:29,830
your particular projects and companies

00:08:27,580 --> 00:08:35,529
and and for the the greater smack as

00:08:29,830 --> 00:08:37,599
well we see a lot of use cases where you

00:08:35,529 --> 00:08:39,310
know the smack stack is involved for two

00:08:37,599 --> 00:08:39,759
things right where the cloud comes into

00:08:39,310 --> 00:08:43,419
the picture

00:08:39,759 --> 00:08:45,339
one is migration from on-prem to some

00:08:43,419 --> 00:08:47,589
kind of public cloud which is really

00:08:45,339 --> 00:08:50,170
what I would call hybrid and the other

00:08:47,589 --> 00:08:51,880
is fully public cloud deployments and

00:08:50,170 --> 00:08:54,160
the things that people are looking for

00:08:51,880 --> 00:08:55,720
in the role that the smack star plays in

00:08:54,160 --> 00:08:58,750
both of these deployments it's a little

00:08:55,720 --> 00:09:00,639
bit different right for fully public

00:08:58,750 --> 00:09:03,730
cloud deployments the thing people are

00:09:00,639 --> 00:09:07,389
looking for as Michael mentioned earlier

00:09:03,730 --> 00:09:09,519
is cloud neutrality you know people are

00:09:07,389 --> 00:09:11,319
really scared of cloud lock-in and so

00:09:09,519 --> 00:09:14,410
what you're trying to do with this Mac

00:09:11,319 --> 00:09:16,029
stack is be able to just get cloud

00:09:14,410 --> 00:09:18,819
neutral and be able to move across

00:09:16,029 --> 00:09:20,800
different cloud deployments the other

00:09:18,819 --> 00:09:23,310
aspect is which i think is fascinating

00:09:20,800 --> 00:09:27,160
is the migration aspect right

00:09:23,310 --> 00:09:29,769
particularly what DCOs does is you know

00:09:27,160 --> 00:09:31,509
give you sort of a layer in between your

00:09:29,769 --> 00:09:32,889
applications and your underlying

00:09:31,509 --> 00:09:34,149
infrastructure so it really doesn't

00:09:32,889 --> 00:09:36,819
matter where you're deploying

00:09:34,149 --> 00:09:39,160
and the other aspect with kako comes in

00:09:36,819 --> 00:09:41,709
is it kind of gives you this central

00:09:39,160 --> 00:09:43,930
nervous system so be able to kind of

00:09:41,709 --> 00:09:46,000
sync data between data centers whether

00:09:43,930 --> 00:09:48,040
it's on prime or in the cloud or one

00:09:46,000 --> 00:09:50,079
cloud to the other cloud so earlier this

00:09:48,040 --> 00:09:52,300
year we announced confluent cloud as a

00:09:50,079 --> 00:09:54,519
mechanism to sort of provide a fully

00:09:52,300 --> 00:09:56,920
hosted Kafka's service in the public

00:09:54,519 --> 00:09:59,620
cloud and a confluent replicator to be

00:09:56,920 --> 00:10:04,990
able to sync data between clouds and

00:09:59,620 --> 00:10:07,209
on-prem on the power I just add that in

00:10:04,990 --> 00:10:10,060
terms of the hybrid cloud I think early

00:10:07,209 --> 00:10:12,819
on there was some excitement around hey

00:10:10,060 --> 00:10:14,620
I'll have data center on-premise and

00:10:12,819 --> 00:10:16,600
I'll be able to burst into the cloud to

00:10:14,620 --> 00:10:17,410
provide additional capacity and we're

00:10:16,600 --> 00:10:20,529
not actually

00:10:17,410 --> 00:10:23,379
seeing a whole lot of that kind of use

00:10:20,529 --> 00:10:25,870
case but we are seeing a majority of our

00:10:23,379 --> 00:10:27,670
customers are in the public cloud but

00:10:25,870 --> 00:10:29,589
very few of those are only in the public

00:10:27,670 --> 00:10:32,740
cloud and they'll run part of their

00:10:29,589 --> 00:10:34,180
application on-premise and part of it in

00:10:32,740 --> 00:10:36,459
the public cloud even though they're not

00:10:34,180 --> 00:10:39,699
necessarily part of the same Cassandra

00:10:36,459 --> 00:10:40,959
cluster it turns out that Burstein thing

00:10:39,699 --> 00:10:44,500
can be a little bit harder when you have

00:10:40,959 --> 00:10:47,050
a data gravity huh it takes years and

00:10:44,500 --> 00:10:50,370
years yeah yeah exactly

00:10:47,050 --> 00:10:52,120
okay great so transition a little bit

00:10:50,370 --> 00:10:55,060
what are you guys seeing you know is

00:10:52,120 --> 00:10:57,220
everyone starting with Alice Mac or just

00:10:55,060 --> 00:10:58,660
single parts or Wendy what do you guys

00:10:57,220 --> 00:11:00,790
seen out there and then what are your

00:10:58,660 --> 00:11:02,439
recommendations for folks that maybe you

00:11:00,790 --> 00:11:05,500
know don't need all smackwall pieces

00:11:02,439 --> 00:11:07,930
this Mac is interesting because it as a

00:11:05,500 --> 00:11:10,779
term it lets us kind of simplify the

00:11:07,930 --> 00:11:12,759
discussion and say you know here's you

00:11:10,779 --> 00:11:14,649
know I need to scale my application I

00:11:12,759 --> 00:11:17,350
need to scale my data layer I can go use

00:11:14,649 --> 00:11:20,199
Cassandra I need to scale the complexity

00:11:17,350 --> 00:11:22,569
of my components I can bring in Kafka so

00:11:20,199 --> 00:11:24,670
it kind of has that framework of

00:11:22,569 --> 00:11:28,089
thinking about the problem space that's

00:11:24,670 --> 00:11:30,250
really useful but you know from where I

00:11:28,089 --> 00:11:31,750
sit I don't I don't see people saying

00:11:30,250 --> 00:11:33,430
I'm gonna build a new application and

00:11:31,750 --> 00:11:36,009
it's gonna be a smack application and

00:11:33,430 --> 00:11:39,730
I'm gonna use all of those tomorrow but

00:11:36,009 --> 00:11:42,880
rather I'm going to you know maybe maybe

00:11:39,730 --> 00:11:44,319
my first data store is my sequel and

00:11:42,880 --> 00:11:46,630
when I get tired of charting that and it

00:11:44,319 --> 00:11:49,540
becomes more painful than I can tolerate

00:11:46,630 --> 00:11:51,279
then I'll upgrade to Cassandra and you

00:11:49,540 --> 00:11:53,560
know maybe I'll bring in Kafka to

00:11:51,279 --> 00:11:55,180
coordinate between my microservices and

00:11:53,560 --> 00:11:56,740
these don't have to happen at the same

00:11:55,180 --> 00:11:59,019
time so I see it more of an as an

00:11:56,740 --> 00:12:00,939
incremental thing that you can people

00:11:59,019 --> 00:12:03,670
can adopt at different rates and I think

00:12:00,939 --> 00:12:05,500
that's really healthy I laugh to that I

00:12:03,670 --> 00:12:08,529
think I completely agree with Jonathan

00:12:05,500 --> 00:12:11,589
that's how I've seen these technologies

00:12:08,529 --> 00:12:14,139
get adopted I also think that it's it's

00:12:11,589 --> 00:12:15,750
easier to adopt the smack stack whether

00:12:14,139 --> 00:12:18,490
you're doing it incrementally or not

00:12:15,750 --> 00:12:19,990
because it's complimentary to everything

00:12:18,490 --> 00:12:22,300
else that you have in your data center

00:12:19,990 --> 00:12:24,189
so you can still continue to have your

00:12:22,300 --> 00:12:27,100
relational databases and your bad

00:12:24,189 --> 00:12:29,910
systems and your warehouse and when you

00:12:27,100 --> 00:12:31,680
think about the world you end up with

00:12:29,910 --> 00:12:33,440
a big chasm in the middle right you have

00:12:31,680 --> 00:12:35,430
the relational databases on one side

00:12:33,440 --> 00:12:37,980
request/response applications and the

00:12:35,430 --> 00:12:40,740
warehouse on the other and what this Mac

00:12:37,980 --> 00:12:43,470
stack does is provide you sort of an you

00:12:40,740 --> 00:12:44,370
know good stack to come in with the the

00:12:43,470 --> 00:12:46,260
chasm in the middle which is

00:12:44,370 --> 00:12:48,930
asynchronous data processing

00:12:46,260 --> 00:12:50,700
applications so you know the way I see

00:12:48,930 --> 00:12:53,010
this getting adopted is it's very much

00:12:50,700 --> 00:12:55,080
complementary in addition to all the

00:12:53,010 --> 00:12:57,030
things that you have for when you need

00:12:55,080 --> 00:12:58,380
fast data processing and data management

00:12:57,030 --> 00:13:00,470
yeah yeah

00:12:58,380 --> 00:13:02,640
all right so I think the takeaway is

00:13:00,470 --> 00:13:04,140
don't start with the whole thing you can

00:13:02,640 --> 00:13:06,390
start with the pieces but you'll

00:13:04,140 --> 00:13:08,370
probably converge as you go and add more

00:13:06,390 --> 00:13:09,780
of this functionality in and smack is a

00:13:08,370 --> 00:13:11,490
great way to really talk about that

00:13:09,780 --> 00:13:14,430
entire architecture and all those pieces

00:13:11,490 --> 00:13:15,690
you know from our perspective I think

00:13:14,430 --> 00:13:17,250
that's that's what we've seen as well

00:13:15,690 --> 00:13:18,800
you know we've seen some folks that have

00:13:17,250 --> 00:13:21,110
really started from the whole thing

00:13:18,800 --> 00:13:25,560
sometimes it's not just smack it smack

00:13:21,110 --> 00:13:27,030
or some of the other acronyms but but

00:13:25,560 --> 00:13:29,820
there's also lots of folks that start

00:13:27,030 --> 00:13:32,130
slowly and and and and grow so speaking

00:13:29,820 --> 00:13:34,140
of acronyms and and smack and other ones

00:13:32,130 --> 00:13:36,810
what you guys surprised that there ended

00:13:34,140 --> 00:13:38,130
up being a smack stack an acronym and I

00:13:36,810 --> 00:13:40,860
think we know we need to give a credit

00:13:38,130 --> 00:13:43,260
here I believe to Aleksey I always

00:13:40,860 --> 00:13:46,320
mispronounce his name crab off I believe

00:13:43,260 --> 00:13:47,910
is his last name who I think was the

00:13:46,320 --> 00:13:49,830
first one that actually coined the term

00:13:47,910 --> 00:13:52,320
were you guys surprised you know that

00:13:49,830 --> 00:13:56,330
there is a smack stack that there was an

00:13:52,320 --> 00:13:59,940
acronym for it so I'm not surprised that

00:13:56,330 --> 00:14:02,700
yeah this maxed ID exists but I find the

00:13:59,940 --> 00:14:04,590
acronym a very amusing the other day

00:14:02,700 --> 00:14:06,510
someone told me about the pancake stack

00:14:04,590 --> 00:14:10,860
I won't go into the details of what that

00:14:06,510 --> 00:14:13,470
means so I think you know this Mac stack

00:14:10,860 --> 00:14:16,710
existed it's it's been fascinating to

00:14:13,470 --> 00:14:19,290
see why it came along in the last 10

00:14:16,710 --> 00:14:23,400
years thing distributed systems have

00:14:19,290 --> 00:14:24,930
become a lot more practical and I think

00:14:23,400 --> 00:14:27,000
in the old world like I mentioned before

00:14:24,930 --> 00:14:29,010
right you had databases in the warehouse

00:14:27,000 --> 00:14:31,530
and nothing in the middle I think two

00:14:29,010 --> 00:14:34,320
trends really change that from my

00:14:31,530 --> 00:14:37,290
opinion I think one is digitization of

00:14:34,320 --> 00:14:39,960
the enterprise right so the need for

00:14:37,290 --> 00:14:43,590
creating data oriented you know

00:14:39,960 --> 00:14:46,320
solutions that's one and the other is

00:14:43,590 --> 00:14:48,180
just the practicality of distributed

00:14:46,320 --> 00:14:50,880
systems in general see these two things

00:14:48,180 --> 00:14:52,800
coming together led to explosion of data

00:14:50,880 --> 00:14:55,170
on one side and an explosion of

00:14:52,800 --> 00:14:57,630
distributed data systems that each solve

00:14:55,170 --> 00:15:00,300
one part of your data management problem

00:14:57,630 --> 00:15:02,250
really well and and to me this Mac stack

00:15:00,300 --> 00:15:05,340
is really a collection of the most well

00:15:02,250 --> 00:15:08,190
adopted and you know most sort of

00:15:05,340 --> 00:15:11,580
prolific technologies that allow you to

00:15:08,190 --> 00:15:13,740
manage data what I like about this Mac

00:15:11,580 --> 00:15:15,780
stack is that you know if you look at

00:15:13,740 --> 00:15:19,230
some of the you know some of the stacks

00:15:15,780 --> 00:15:24,840
out there they're an acronym looking for

00:15:19,230 --> 00:15:27,480
an excuse to exist and I feel like with

00:15:24,840 --> 00:15:29,910
smack that people were building cloud

00:15:27,480 --> 00:15:32,510
applications and they needed that scale

00:15:29,910 --> 00:15:37,230
they needed that real-time response rate

00:15:32,510 --> 00:15:39,060
and so when I go to data stacks

00:15:37,230 --> 00:15:44,490
customers I see a lot of Kafka I see a

00:15:39,060 --> 00:15:45,990
lot of mesosphere so I feel like this is

00:15:44,490 --> 00:15:47,550
this was something that whether someone

00:15:45,990 --> 00:15:49,080
was going to put an acronym on it or not

00:15:47,550 --> 00:15:51,420
you know they're these are some common

00:15:49,080 --> 00:15:53,490
patterns and common technologies that

00:15:51,420 --> 00:15:56,130
people are using to solve some of the

00:15:53,490 --> 00:15:57,690
biggest problems in the industry yeah I

00:15:56,130 --> 00:16:00,450
I like that as well I think it's always

00:15:57,690 --> 00:16:02,370
better when the acronyms come later then

00:16:00,450 --> 00:16:04,590
there's some some real usage some some

00:16:02,370 --> 00:16:06,300
real practitioners doing stuff and and

00:16:04,590 --> 00:16:07,830
and not just not just the marketing

00:16:06,300 --> 00:16:11,400
nothing against the marketing Peter

00:16:07,830 --> 00:16:13,290
marketing is really important so one of

00:16:11,400 --> 00:16:15,060
the things we we didn't really talk too

00:16:13,290 --> 00:16:16,770
much about but I think I think really

00:16:15,060 --> 00:16:19,560
plays a role in this especially with the

00:16:16,770 --> 00:16:21,630
growth of stack is open source so you

00:16:19,560 --> 00:16:24,660
know how do you guys feel open source

00:16:21,630 --> 00:16:26,340
played a role in in smack and has played

00:16:24,660 --> 00:16:30,480
a role in your projects and and the

00:16:26,340 --> 00:16:36,270
companies so I spoke to that a little

00:16:30,480 --> 00:16:38,010
bit early on I think one of the things

00:16:36,270 --> 00:16:39,780
that's interesting thinking about the

00:16:38,010 --> 00:16:42,990
the role of open source and the industry

00:16:39,780 --> 00:16:44,529
moving forward is the conditions that

00:16:42,990 --> 00:16:48,379
led to

00:16:44,529 --> 00:16:51,439
Kassandra ten years ago and Kafka eight

00:16:48,379 --> 00:16:54,170
years ago Mesa eight years ago those

00:16:51,439 --> 00:16:57,050
conditions are changing and in

00:16:54,170 --> 00:16:58,970
particular companies today building new

00:16:57,050 --> 00:17:01,279
projects they're looking for simplicity

00:16:58,970 --> 00:17:03,319
they're looking to get everything in a

00:17:01,279 --> 00:17:06,740
box they're looking for hosted solutions

00:17:03,319 --> 00:17:09,439
and so the public cloud vendors are

00:17:06,740 --> 00:17:11,990
playing a really much more significant

00:17:09,439 --> 00:17:14,360
role than they were when our projects

00:17:11,990 --> 00:17:16,010
and our companies got started so I'm not

00:17:14,360 --> 00:17:17,750
sure what that's going to look like for

00:17:16,010 --> 00:17:19,010
that next generation of infrastructure

00:17:17,750 --> 00:17:22,779
whether that's going to be open source

00:17:19,010 --> 00:17:25,579
first or cloud first or something else

00:17:22,779 --> 00:17:28,010
I'd really like to touch upon something

00:17:25,579 --> 00:17:30,140
you said earlier Jonathan about these

00:17:28,010 --> 00:17:32,330
technologies were born from these big

00:17:30,140 --> 00:17:35,450
giants and I think that's a really

00:17:32,330 --> 00:17:37,820
important part of why the stack formed

00:17:35,450 --> 00:17:41,120
in the first place is because we got

00:17:37,820 --> 00:17:44,210
time to harden it in a real company for

00:17:41,120 --> 00:17:46,340
many years so Kafka ran in production at

00:17:44,210 --> 00:17:48,380
LinkedIn still does for several years

00:17:46,340 --> 00:17:51,140
which is why it became easy to use for

00:17:48,380 --> 00:17:53,750
everyone but I think the role that open

00:17:51,140 --> 00:17:55,789
source played in how software gets

00:17:53,750 --> 00:17:58,640
bought and adopted in enterprises is

00:17:55,789 --> 00:18:01,549
really fascinating you know earlier the

00:17:58,640 --> 00:18:03,529
decision of whether to use a mezzos or

00:18:01,549 --> 00:18:06,740
user co-signed or user Kafka would have

00:18:03,529 --> 00:18:08,990
been a top-down decision made by the sea

00:18:06,740 --> 00:18:11,809
levels but today I think due to open

00:18:08,990 --> 00:18:14,270
source it's a very bottom-up adoption

00:18:11,809 --> 00:18:15,980
model where the developer is actually

00:18:14,270 --> 00:18:18,470
the real buyer you know you're the real

00:18:15,980 --> 00:18:20,659
decision-maker of you know what

00:18:18,470 --> 00:18:23,299
technology to use how it gets adopted

00:18:20,659 --> 00:18:25,760
what problems it solves of course later

00:18:23,299 --> 00:18:27,679
down the line some enterprises do come

00:18:25,760 --> 00:18:31,159
in and to sort of provide a full-fledged

00:18:27,679 --> 00:18:33,950
product but to me the just empowerment

00:18:31,159 --> 00:18:35,750
of the developers that is a real change

00:18:33,950 --> 00:18:38,779
their open source brought along that I'm

00:18:35,750 --> 00:18:41,990
very excited about yeah yeah I I think

00:18:38,779 --> 00:18:44,120
it's it's very powerful the way open

00:18:41,990 --> 00:18:45,890
source has really empowered developers

00:18:44,120 --> 00:18:48,559
to be able to make the changes they want

00:18:45,890 --> 00:18:50,510
me in the in their organizations I think

00:18:48,559 --> 00:18:53,720
it's also really interesting to think

00:18:50,510 --> 00:18:55,909
about how the landscape has changed

00:18:53,720 --> 00:18:58,399
and for a lot of these open-source

00:18:55,909 --> 00:19:00,799
projects sometimes some of their biggest

00:18:58,399 --> 00:19:02,960
competitors could be some of the big

00:19:00,799 --> 00:19:04,700
cloud providers that are taking those

00:19:02,960 --> 00:19:07,279
open-source projects and and turning

00:19:04,700 --> 00:19:09,139
them into products you know it's one of

00:19:07,279 --> 00:19:10,879
the things that I've actually spoken

00:19:09,139 --> 00:19:14,000
about in the in the past at some of the

00:19:10,879 --> 00:19:14,990
open source summits and you know it's

00:19:14,000 --> 00:19:17,000
one of the things that we were kind of

00:19:14,990 --> 00:19:19,789
definitely excited about trying to do at

00:19:17,000 --> 00:19:21,139
Mesa sphere which is make it so that's

00:19:19,789 --> 00:19:23,450
you know you don't have to be locked

00:19:21,139 --> 00:19:26,720
into a single cloud or you can have just

00:19:23,450 --> 00:19:28,730
as good of a SAS like experience for for

00:19:26,720 --> 00:19:29,990
for your projects and your products even

00:19:28,730 --> 00:19:32,090
if you're the little guy even if you

00:19:29,990 --> 00:19:34,190
know you're a small small project or a

00:19:32,090 --> 00:19:35,750
small company but you want to have the

00:19:34,190 --> 00:19:37,070
same flexibility of running you know at

00:19:35,750 --> 00:19:39,049
scale across multiple cloud

00:19:37,070 --> 00:19:40,820
simultaneously so I think it's

00:19:39,049 --> 00:19:42,529
interesting how the landscape has

00:19:40,820 --> 00:19:44,240
evolved and and it'll be interesting to

00:19:42,529 --> 00:19:49,309
see how that continues to evolve in the

00:19:44,240 --> 00:19:52,220
future okay I think from here you know

00:19:49,309 --> 00:19:56,840
you would mentioned earlier a new

00:19:52,220 --> 00:19:59,960
acronym pancake and you know I'm curious

00:19:56,840 --> 00:20:01,970
if you know if you guys see us Mac 2.0

00:19:59,960 --> 00:20:03,889
is there SMAC 2.0 we've got a 10-year

00:20:01,970 --> 00:20:05,750
old project 10 right 10 year old

00:20:03,889 --> 00:20:07,789
projects we've got an eight year old

00:20:05,750 --> 00:20:11,029
project we've got an eight year old

00:20:07,789 --> 00:20:12,620
project some might say that you know

00:20:11,029 --> 00:20:15,580
that's they're just getting to great

00:20:12,620 --> 00:20:18,860
maturity and scale some might say that

00:20:15,580 --> 00:20:21,730
that's a long time is there a 2.0 does

00:20:18,860 --> 00:20:24,740
there need to be a 2.0 what do we think

00:20:21,730 --> 00:20:27,379
you know I think enterprise software is

00:20:24,740 --> 00:20:30,200
never rip and replace so things that

00:20:27,379 --> 00:20:32,809
work well and are adopted they're there

00:20:30,200 --> 00:20:34,669
to stay for decades so I think one part

00:20:32,809 --> 00:20:38,629
of the evolution that is just inevitable

00:20:34,669 --> 00:20:41,330
is you what I would call clarification

00:20:38,629 --> 00:20:43,460
of every part of the smack stack and

00:20:41,330 --> 00:20:45,080
what I mean by that is you know both

00:20:43,460 --> 00:20:46,879
capability wise as well as

00:20:45,080 --> 00:20:48,500
operationalization of each of the

00:20:46,879 --> 00:20:51,289
components right when you mentioned

00:20:48,500 --> 00:20:52,610
earlier multi-tenancy encoders and and

00:20:51,289 --> 00:20:54,950
that is what I would call you know

00:20:52,610 --> 00:20:57,679
capability wise evolution of something

00:20:54,950 --> 00:20:59,919
like mesos I see the same in Kafka you

00:20:57,679 --> 00:21:02,450
know security and quotas is a big deal

00:20:59,919 --> 00:21:05,629
if I were to take you know a couple

00:21:02,450 --> 00:21:07,430
steps further look into the future I

00:21:05,629 --> 00:21:09,560
might just say that it

00:21:07,430 --> 00:21:12,020
respect to combine all might be called

00:21:09,560 --> 00:21:14,000
something else entirely it's because the

00:21:12,020 --> 00:21:16,880
two things I think consolidation on one

00:21:14,000 --> 00:21:19,160
side and proliferation on the other you

00:21:16,880 --> 00:21:21,530
know proliferation because each of the

00:21:19,160 --> 00:21:23,570
layers are solving problems that are

00:21:21,530 --> 00:21:25,670
extremely hard today right whether you

00:21:23,570 --> 00:21:27,590
talk about orchestration layers and we

00:21:25,670 --> 00:21:30,830
just saw kubernetes being deployed with

00:21:27,590 --> 00:21:33,200
DCOs or you talk about stream processing

00:21:30,830 --> 00:21:34,880
I think there's a this probably

00:21:33,200 --> 00:21:36,740
proliferation that's expected because

00:21:34,880 --> 00:21:39,110
these are blurring off spaces and

00:21:36,740 --> 00:21:40,370
markets and the other is consolidation

00:21:39,110 --> 00:21:42,320
you know if you just think about how

00:21:40,370 --> 00:21:44,210
Kafka was born it was born as messaging

00:21:42,320 --> 00:21:46,340
system today it stores data that can be

00:21:44,210 --> 00:21:48,380
queried using sequel and it allows you

00:21:46,340 --> 00:21:51,520
to write applications so there's some

00:21:48,380 --> 00:21:54,200
overlap with what spark and akka alright

00:21:51,520 --> 00:21:56,060
so I think it would be fascinating to

00:21:54,200 --> 00:21:57,440
watch how these things evolved but I

00:21:56,060 --> 00:21:59,720
would expect it would be called

00:21:57,440 --> 00:22:04,850
something else you know if not pancake

00:21:59,720 --> 00:22:09,080
maybe something else I think smack is is

00:22:04,850 --> 00:22:12,200
solving a distinct problem space in the

00:22:09,080 --> 00:22:14,660
industry for scalable cloud applications

00:22:12,200 --> 00:22:16,820
and so I think what that does is it

00:22:14,660 --> 00:22:19,700
provides a foundation that you can build

00:22:16,820 --> 00:22:21,200
on top of and so what I what I don't

00:22:19,700 --> 00:22:22,160
think is gonna happen I don't think

00:22:21,200 --> 00:22:23,840
people are going to look at that

00:22:22,160 --> 00:22:27,050
foundation and say you know I need to I

00:22:23,840 --> 00:22:29,870
need to rip out this this storage layer

00:22:27,050 --> 00:22:31,370
and put in a different piece there but

00:22:29,870 --> 00:22:32,810
rather I think what what people are

00:22:31,370 --> 00:22:35,270
going to say is now that we've got a

00:22:32,810 --> 00:22:37,370
solid foundation what can we build on

00:22:35,270 --> 00:22:39,260
top of it and so you're starting to see

00:22:37,370 --> 00:22:41,960
this with things like deep learning for

00:22:39,260 --> 00:22:44,660
J which is which provides machine

00:22:41,960 --> 00:22:47,750
learning for data in Cassandra analyzed

00:22:44,660 --> 00:22:50,510
using spark and so you can you can once

00:22:47,750 --> 00:22:51,910
you have that foundation there's a lot

00:22:50,510 --> 00:22:55,790
of interesting stuff you can build

00:22:51,910 --> 00:22:58,430
that's a that's a perfect segue into one

00:22:55,790 --> 00:22:59,630
of my last questions which is what do

00:22:58,430 --> 00:23:01,310
you see problems that we're gonna be

00:22:59,630 --> 00:23:03,410
able to solve with smack that we hadn't

00:23:01,310 --> 00:23:05,000
been solving in the past you see things

00:23:03,410 --> 00:23:06,440
that you rather chat with organizations

00:23:05,000 --> 00:23:07,790
you're like I'm really excited to see

00:23:06,440 --> 00:23:11,350
people doing something like that in the

00:23:07,790 --> 00:23:15,190
future anything come come to mind I

00:23:11,350 --> 00:23:17,990
think one I might take a stab at this is

00:23:15,190 --> 00:23:20,909
breaking down silos right I think

00:23:17,990 --> 00:23:23,009
earlier we saw the j pmc picture of

00:23:20,909 --> 00:23:25,349
all the risk management and all these

00:23:23,009 --> 00:23:27,599
different things and in the old

00:23:25,349 --> 00:23:29,190
enterprise those were just you know

00:23:27,599 --> 00:23:30,720
things that were locked up and in in

00:23:29,190 --> 00:23:33,840
each in their own silo

00:23:30,720 --> 00:23:36,599
I think this mag stack it's sort of you

00:23:33,840 --> 00:23:38,549
know provides or creates data as a

00:23:36,599 --> 00:23:40,349
first-class citizen as someone mentioned

00:23:38,549 --> 00:23:42,720
earlier and I really believe that's like

00:23:40,349 --> 00:23:45,629
a big change that will really change our

00:23:42,720 --> 00:23:47,999
applications are built you know it's the

00:23:45,629 --> 00:23:49,679
same customer no matter which loan you

00:23:47,999 --> 00:23:51,899
applied for whether it was a car or home

00:23:49,679 --> 00:23:54,629
loan if you're a risky user your risk

00:23:51,899 --> 00:23:56,909
user across all those segments so that's

00:23:54,629 --> 00:23:58,440
I think it's a big deal I think that's

00:23:56,909 --> 00:24:00,869
what I call event driven data driven

00:23:58,440 --> 00:24:03,059
Enterprise that's going to allow the

00:24:00,869 --> 00:24:06,269
brick-and-mortar enterprises to compete

00:24:03,059 --> 00:24:07,950
with the Amazons of the world you know

00:24:06,269 --> 00:24:09,749
just before Jonathan just before you go

00:24:07,950 --> 00:24:11,609
I just I I what you got me thinking

00:24:09,749 --> 00:24:14,700
about is it goes both ways right I

00:24:11,609 --> 00:24:16,649
remember not too long ago I went to I

00:24:14,700 --> 00:24:19,139
think I was getting a new parking pass

00:24:16,649 --> 00:24:20,729
in the city and they wouldn't let me I'm

00:24:19,139 --> 00:24:22,080
sorry to hear yeah well then they

00:24:20,729 --> 00:24:25,679
wouldn't let me buy my parking pass

00:24:22,080 --> 00:24:27,149
because I had outstanding speeding to a

00:24:25,679 --> 00:24:28,679
speeding ticket what's this feeling to

00:24:27,149 --> 00:24:31,710
you know I forget what it was it was

00:24:28,679 --> 00:24:32,999
something I I said but you guys are

00:24:31,710 --> 00:24:34,169
completely different organizations

00:24:32,999 --> 00:24:35,700
they're like oh we've got this cool new

00:24:34,169 --> 00:24:37,409
thing smack and let's just pull all the

00:24:35,700 --> 00:24:40,169
data together they didn't actually say

00:24:37,409 --> 00:24:42,570
that part but you know they were and I

00:24:40,169 --> 00:24:47,190
just thought to myself oh my gosh

00:24:42,570 --> 00:24:50,580
what beast are we enabling because this

00:24:47,190 --> 00:24:54,119
is not good for me it's great for the

00:24:50,580 --> 00:24:55,919
businesses but I you know I I forget I

00:24:54,119 --> 00:24:57,570
had to pay a lot of money that's how I

00:24:55,919 --> 00:24:59,190
feel when I talked to the government

00:24:57,570 --> 00:25:02,789
agencies of well what they're doing that

00:24:59,190 --> 00:25:03,899
half hour just let's stop there so yeah

00:25:02,789 --> 00:25:05,519
what about you Jonathan

00:25:03,899 --> 00:25:08,700
so you're saying smack can be used for

00:25:05,519 --> 00:25:09,929
evil as well as for good well I I mean

00:25:08,700 --> 00:25:12,479
it's I guess I don't know if it's evil

00:25:09,929 --> 00:25:17,429
but it's at least for for making sure

00:25:12,479 --> 00:25:20,009
that we all pay our fines so I think

00:25:17,429 --> 00:25:21,720
that I think that technical problems

00:25:20,009 --> 00:25:23,960
that smack allows you to solve or are

00:25:21,720 --> 00:25:26,309
pretty well understood at this point I

00:25:23,960 --> 00:25:30,139
think maybe a more interesting question

00:25:26,309 --> 00:25:33,530
is what does smack do for your business

00:25:30,139 --> 00:25:36,620
as we move into this cloud first

00:25:33,530 --> 00:25:38,020
era of computing and what's mag does for

00:25:36,620 --> 00:25:41,300
your businesses it allows you to

00:25:38,020 --> 00:25:43,520
maintain ownership of your data and I

00:25:41,300 --> 00:25:45,920
think that's the the crown jewel of any

00:25:43,520 --> 00:25:49,490
business you don't want to be beholden

00:25:45,920 --> 00:25:51,380
to you know I'm sure the the people at

00:25:49,490 --> 00:25:53,240
Google cloud we had on stage earlier

00:25:51,380 --> 00:25:54,710
very fine people but you don't want

00:25:53,240 --> 00:25:56,810
Google owning your data you don't want

00:25:54,710 --> 00:25:58,190
Amazon owning your data you want you

00:25:56,810 --> 00:26:00,110
want to own that yourself and that's

00:25:58,190 --> 00:26:02,870
what's Mac allows you to do yeah great

00:26:00,110 --> 00:26:05,420
okay so last one

00:26:02,870 --> 00:26:07,610
totally off script not thinking about

00:26:05,420 --> 00:26:10,040
what you guys do in your day to day

00:26:07,610 --> 00:26:11,870
lives what's an interesting piece of

00:26:10,040 --> 00:26:13,760
technology that you guys are following

00:26:11,870 --> 00:26:15,890
that you think is really interesting

00:26:13,760 --> 00:26:19,810
that you know maybe the audience would

00:26:15,890 --> 00:26:22,100
find interesting to to me I think it's

00:26:19,810 --> 00:26:23,750
tensorflow the Google guys are here

00:26:22,100 --> 00:26:26,890
they're going to be really happy Android

00:26:23,750 --> 00:26:30,080
is losing but tensorflow is winning guys

00:26:26,890 --> 00:26:33,200
I just think it's it's fascinating I

00:26:30,080 --> 00:26:35,660
mean getting access to thousands of GPUs

00:26:33,200 --> 00:26:37,760
worth of compute and and being able to

00:26:35,660 --> 00:26:40,010
use these algorithms that have been

00:26:37,760 --> 00:26:41,930
baked in for yours and yours at

00:26:40,010 --> 00:26:44,180
companies like Google I think that's

00:26:41,930 --> 00:26:50,690
super fascinating and thank you google

00:26:44,180 --> 00:26:52,850
for open sourcing it I do think machine

00:26:50,690 --> 00:26:57,770
learning is in general as embodied by

00:26:52,850 --> 00:27:00,670
tensorflow is is it's going to unlock a

00:26:57,770 --> 00:27:03,080
lot of new opportunities both for

00:27:00,670 --> 00:27:07,970
entrepreneurs as well as for consumers

00:27:03,080 --> 00:27:10,820
and I'm curious to see what so the old

00:27:07,970 --> 00:27:12,860
joke is that AI is whatever we don't

00:27:10,820 --> 00:27:15,080
know we don't understand how to do right

00:27:12,860 --> 00:27:16,760
so now that we kind of understand

00:27:15,080 --> 00:27:18,740
machine learning that's its own space

00:27:16,760 --> 00:27:20,620
it's not part of AI anymore so I'm

00:27:18,740 --> 00:27:23,150
interested to see what what the next

00:27:20,620 --> 00:27:25,850
know kind of spin-off from from the AI

00:27:23,150 --> 00:27:27,290
world is yeah yeah you know I think

00:27:25,850 --> 00:27:28,970
it'll be really interesting one of the

00:27:27,290 --> 00:27:30,620
things we often talk about within the

00:27:28,970 --> 00:27:33,290
maysa community is how we can apply a

00:27:30,620 --> 00:27:35,090
lot of these kinds of things back to

00:27:33,290 --> 00:27:36,980
projects like Mesa and I'm sure you guys

00:27:35,090 --> 00:27:39,850
think about those those as well for your

00:27:36,980 --> 00:27:42,080
own projects you know ways in which the

00:27:39,850 --> 00:27:44,240
project's themselves the technology

00:27:42,080 --> 00:27:44,860
itself can start to learn and be smarter

00:27:44,240 --> 00:27:47,260
and

00:27:44,860 --> 00:27:48,820
do things that humans would otherwise be

00:27:47,260 --> 00:27:51,580
doing so I think that's a really bright

00:27:48,820 --> 00:27:54,070
and exciting future great

00:27:51,580 --> 00:27:55,720
okay so let's wrap it up thank you guys

00:27:54,070 --> 00:27:57,850
so much for being part of this panel

00:27:55,720 --> 00:28:00,520
it's been a lot of fun thanks again for

00:27:57,850 --> 00:28:03,100
for being who you are and continuing to

00:28:00,520 --> 00:28:05,950
drive the industry forward it's really a

00:28:03,100 --> 00:28:07,210
joyful time for me to be a change and

00:28:05,950 --> 00:28:08,850
changing the world with you guys so

00:28:07,210 --> 00:28:14,890
thank you thank you thank you having me

00:28:08,850 --> 00:28:14,890

YouTube URL: https://www.youtube.com/watch?v=o7YMS2E3xic


