Title: Apache Mesos and Security: The Joy of Mesos with Calico
Publication date: 2017-09-18
Playlist: MesosCon North America 2017
Description: 
	Apache Mesos and Security: The Joy of Mesos with Calico - Diego Oliveira & Acácio Alves dos Santos, PagSeguro

Taking care of security is key point, even more when working with someone else's money. PagSeguro (http://pagseguro.uol.com.br/) takes that to the next level, putting an additional security policy in it's Apache Mesos cluster with project Calico (https://www.projectcalico.org/). In this presentation it shows how to secure it's services, integrate calico routing propagation (BGP) with an on premises legacy network infrastructure, link with cloud providers (AWS, Azure) and shows the gains in time to release new ACLs compared with the old model.

About 


Acácio Santos
PagSeguro
Acácio Santos is the SRE Coordinator at PagSeguro, a payment service provider in Brazil under UOL Inc. holding. He is passionate about DevOps culture and a "keep it simple" minded person. His team is responsible for maintaining the product's PaaS and DevOps tools.

Diego Olievira
PagSeguro
Diego Oliveira is a senior technical manager at PagSeguro, a payment service provider in Brazil under UOL Inc. holding. He is a constant speaker at local conferences like TDC and QConSP. In the current position Diego is the principal engineer working with a team of more then 300 developers. In the past he was responsible for large data processing at IBOPE for real time analytics, on-line market analyses and user behavior.
Captions: 
	00:00:00,659 --> 00:00:07,220
we are here to present a use case of

00:00:02,879 --> 00:00:10,019
fashionistas and calico in your company

00:00:07,220 --> 00:00:13,200
we are going to talk a little about the

00:00:10,019 --> 00:00:17,070
process that we did to make our messes

00:00:13,200 --> 00:00:20,070
closer and how we end up using calico as

00:00:17,070 --> 00:00:24,990
Network solution how that brings

00:00:20,070 --> 00:00:29,519
security to our setup and we are also

00:00:24,990 --> 00:00:34,010
going to show you how we managed to use

00:00:29,519 --> 00:00:37,440
calico to extend our data center to AWS

00:00:34,010 --> 00:00:41,250
which is something that we seeing people

00:00:37,440 --> 00:00:44,520
trying to say that wanted to do but I

00:00:41,250 --> 00:00:49,320
haven't seen any presentation about that

00:00:44,520 --> 00:00:51,270
so we will show you yeah and it's very

00:00:49,320 --> 00:00:54,449
interesting to be speaking right now

00:00:51,270 --> 00:00:56,460
because we solve a lot of talks going

00:00:54,449 --> 00:01:00,359
around things that we are touching here

00:00:56,460 --> 00:01:03,120
and that it's a production case so well

00:01:00,359 --> 00:01:05,909
first talk about us my name is Akashi

00:01:03,120 --> 00:01:07,950
it's hard to say that in English but

00:01:05,909 --> 00:01:11,280
people don't usually understand I am

00:01:07,950 --> 00:01:13,080
keep it simple minded person you give me

00:01:11,280 --> 00:01:17,460
a problem I'll try to solve it in a

00:01:13,080 --> 00:01:22,320
simple way I like to break things fast

00:01:17,460 --> 00:01:27,060
I'm also a cook at home and I am always

00:01:22,320 --> 00:01:29,400
traveling yeah and I'm passionate with

00:01:27,060 --> 00:01:31,710
challenges and like a lot to ride

00:01:29,400 --> 00:01:35,250
motorcycles so feel like my site welcome

00:01:31,710 --> 00:01:38,100
to talk to meet you with a lot and then

00:01:35,250 --> 00:01:43,290
I saw dad and this is our personal life

00:01:38,100 --> 00:01:45,810
who we are as person ostrich so we work

00:01:43,290 --> 00:01:53,220
in a Brazilian FinTech company called

00:01:45,810 --> 00:01:57,570
epoxy guru which is some sort of gateway

00:01:53,220 --> 00:01:59,969
of payments and we also work with credit

00:01:57,570 --> 00:02:03,030
card machines and we have this mission

00:01:59,969 --> 00:02:04,600
to provide innovative simple and secure

00:02:03,030 --> 00:02:10,930
solutions

00:02:04,600 --> 00:02:14,200
in financial services and we are yeah

00:02:10,930 --> 00:02:16,360
and that's a challenge in itself cause I

00:02:14,200 --> 00:02:19,750
don't know who here works with financial

00:02:16,360 --> 00:02:22,930
institutions or things like that and to

00:02:19,750 --> 00:02:24,700
have yeah you're insane ting and to have

00:02:22,930 --> 00:02:26,200
innovative solutions in this kind of

00:02:24,700 --> 00:02:28,510
environment is something very difficult

00:02:26,200 --> 00:02:30,400
cause they are very straight and

00:02:28,510 --> 00:02:33,070
difficult to move things in new

00:02:30,400 --> 00:02:36,550
directions so have a lot of change a

00:02:33,070 --> 00:02:39,700
challenge there yes we work for money

00:02:36,550 --> 00:02:42,610
lots of money and that's not our money

00:02:39,700 --> 00:02:45,430
that's someone else money let's make

00:02:42,610 --> 00:02:50,080
things a little more difficult yeah and

00:02:45,430 --> 00:02:52,360
I don't know exactly here in US and

00:02:50,080 --> 00:02:54,040
around the world but there in Brazil we

00:02:52,360 --> 00:02:57,959
have lots of fintax

00:02:54,040 --> 00:03:00,760
lots of competitors and every single

00:02:57,959 --> 00:03:04,500
thing that you do better than your

00:03:00,760 --> 00:03:07,920
competitor you're going to get another

00:03:04,500 --> 00:03:12,100
customer you're going to get more money

00:03:07,920 --> 00:03:12,790
so what is important to get things done

00:03:12,100 --> 00:03:17,350
right

00:03:12,790 --> 00:03:19,810
yeah and our competitors are really big

00:03:17,350 --> 00:03:21,519
companies and institutions around the

00:03:19,810 --> 00:03:27,810
globe so we need to have some

00:03:21,519 --> 00:03:31,840
differential from them so the challenge

00:03:27,810 --> 00:03:38,410
we we are going to talk about something

00:03:31,840 --> 00:03:42,630
that happened on 2015 we had at that

00:03:38,410 --> 00:03:46,769
time a monolithic application that we

00:03:42,630 --> 00:03:52,510
that everything was running inside that

00:03:46,769 --> 00:03:55,510
black box like big stuff and it was

00:03:52,510 --> 00:03:58,170
going it was getting harder to maintain

00:03:55,510 --> 00:04:02,260
the application was getting harder to

00:03:58,170 --> 00:04:04,810
adding new features so we started

00:04:02,260 --> 00:04:08,410
talking about micro services and we

00:04:04,810 --> 00:04:12,820
started talking about how do we

00:04:08,410 --> 00:04:14,980
run in a simple way in a better way with

00:04:12,820 --> 00:04:20,019
all the features that the market were

00:04:14,980 --> 00:04:23,500
was doing at that time so we came with

00:04:20,019 --> 00:04:25,410
uh with with some research and then we

00:04:23,500 --> 00:04:29,110
came with missiles

00:04:25,410 --> 00:04:33,790
yeah and that's the problem that I think

00:04:29,110 --> 00:04:36,820
you might get to some echo process the

00:04:33,790 --> 00:04:40,140
cab change advisory boards the ITIL

00:04:36,820 --> 00:04:43,060
process and it's something that she is

00:04:40,140 --> 00:04:45,340
trying to take care of security and

00:04:43,060 --> 00:04:49,360
changing and gentlement and make keep

00:04:45,340 --> 00:04:51,040
things stable and I don't know if he you

00:04:49,360 --> 00:04:53,980
have passed through these problems

00:04:51,040 --> 00:04:56,530
that's not specifically in the financial

00:04:53,980 --> 00:04:58,030
situation but the hyperbole and the poor

00:04:56,530 --> 00:05:01,000
his hospitalization something that was

00:04:58,030 --> 00:05:05,920
happened there to us yeah exactly

00:05:01,000 --> 00:05:11,440
returning to the other do anyone here

00:05:05,920 --> 00:05:17,710
works with I 200 you can you probably

00:05:11,440 --> 00:05:21,070
know how good not it is to move fast I

00:05:17,710 --> 00:05:25,660
to is is something that was made to

00:05:21,070 --> 00:05:28,750
don't break and we were planning to move

00:05:25,660 --> 00:05:34,990
fast so it's the opposite what yeah what

00:05:28,750 --> 00:05:37,780
we are trying to so given the situation

00:05:34,990 --> 00:05:38,800
I know that he of you knows the solution

00:05:37,780 --> 00:05:42,550
yeah

00:05:38,800 --> 00:05:45,900
misses and but this introduction is

00:05:42,550 --> 00:05:49,630
interesting because it is chained of

00:05:45,900 --> 00:05:52,180
parting the way of that you think that

00:05:49,630 --> 00:05:54,160
you think and in Schneider confident had

00:05:52,180 --> 00:05:56,710
we had these two distinct the moment

00:05:54,160 --> 00:05:59,770
first moment where we had our first

00:05:56,710 --> 00:06:05,770
closer kind of a proof of concept that

00:05:59,770 --> 00:06:10,520
Grill in solution we were victim of our

00:06:05,770 --> 00:06:13,370
own success and then he hadn't colleague

00:06:10,520 --> 00:06:16,699
and things was something I see the the

00:06:13,370 --> 00:06:20,060
usual court map that we see closer was

00:06:16,699 --> 00:06:22,729
running and the secret self was nothing

00:06:20,060 --> 00:06:27,340
that we take to care in the level that

00:06:22,729 --> 00:06:30,919
you we need you being honest it was like

00:06:27,340 --> 00:06:33,620
really poor setup was like we just

00:06:30,919 --> 00:06:38,090
install and let things happen and then

00:06:33,620 --> 00:06:40,580
we became like surprised with how much

00:06:38,090 --> 00:06:43,599
applications we got running in two or

00:06:40,580 --> 00:06:47,659
three months it was like this crazy and

00:06:43,599 --> 00:06:50,389
then we start the second phase the doing

00:06:47,659 --> 00:06:53,360
things right and then we saw that

00:06:50,389 --> 00:06:55,490
message itself and the networking

00:06:53,360 --> 00:06:58,490
challenge and security and was something

00:06:55,490 --> 00:07:02,030
real that we needed to take care of and

00:06:58,490 --> 00:07:04,370
the second set up was the currently set

00:07:02,030 --> 00:07:06,650
up we are running and we are have a very

00:07:04,370 --> 00:07:10,099
good result about security and the whole

00:07:06,650 --> 00:07:14,030
process of delivering and so on yeah at

00:07:10,099 --> 00:07:17,930
that time the both security and network

00:07:14,030 --> 00:07:21,289
team engaged it on the project and then

00:07:17,930 --> 00:07:24,020
we decided to plan stuff and then okay

00:07:21,289 --> 00:07:27,080
we're going to we we want this kind of

00:07:24,020 --> 00:07:32,830
security we want this kind of feature in

00:07:27,080 --> 00:07:36,520
network etc so that's why we came with

00:07:32,830 --> 00:07:39,740
with the solution of calico and

00:07:36,520 --> 00:07:44,060
especially not only calico but that the

00:07:39,740 --> 00:07:48,580
whole setup was playing it was like we

00:07:44,060 --> 00:07:53,840
architected to grow we plan it how the

00:07:48,580 --> 00:07:57,229
Sobeys were going to work etc and then

00:07:53,840 --> 00:08:00,289
came network security the security team

00:07:57,229 --> 00:08:02,750
told us okay we are a company that works

00:08:00,289 --> 00:08:06,620
with money we need to have security we

00:08:02,750 --> 00:08:10,460
need to have some isolation we need to

00:08:06,620 --> 00:08:13,880
have some controls on who is going to

00:08:10,460 --> 00:08:21,250
give access to their application or the

00:08:13,880 --> 00:08:24,670
other application we also came with some

00:08:21,250 --> 00:08:29,740
compliance features that were needed

00:08:24,670 --> 00:08:34,659
like we have PCI DSS education so they

00:08:29,740 --> 00:08:36,940
told us okay if you wanna deploy an

00:08:34,659 --> 00:08:39,310
application with PCIe here in this

00:08:36,940 --> 00:08:44,160
cluster you need to follow this step so

00:08:39,310 --> 00:08:47,650
we have lots of compliance stuff to

00:08:44,160 --> 00:08:49,870
achieve and that was the joint for taser

00:08:47,650 --> 00:08:52,900
cos I said before we had the security

00:08:49,870 --> 00:08:55,780
guys working the project and we have

00:08:52,900 --> 00:08:59,770
been now working in the pipeline cell so

00:08:55,780 --> 00:09:03,460
we were able to have a dad checkup kind

00:08:59,770 --> 00:09:06,220
of thing were running and as we said

00:09:03,460 --> 00:09:11,620
mrs. calico is the perfect combination

00:09:06,220 --> 00:09:14,740
for safe teen group I don't know if some

00:09:11,620 --> 00:09:17,200
of you guys I guess that mainly

00:09:14,740 --> 00:09:19,720
everybody here was in the previous

00:09:17,200 --> 00:09:23,770
presentation where the guy told about

00:09:19,720 --> 00:09:28,990
the cni which was a way that we found to

00:09:23,770 --> 00:09:32,890
connect our cluster to this solution we

00:09:28,990 --> 00:09:38,110
were at that time running the unified

00:09:32,890 --> 00:09:40,390
container Iser and then we decided okay

00:09:38,110 --> 00:09:42,940
I need a layer of security but it needs

00:09:40,390 --> 00:09:45,070
to comply with this just out of

00:09:42,940 --> 00:09:51,280
curiosity who here at the world of

00:09:45,070 --> 00:09:56,020
calico okay we'll go a little deeper not

00:09:51,280 --> 00:09:58,000
too much but any question please use the

00:09:56,020 --> 00:09:59,190
final question time your as case after

00:09:58,000 --> 00:10:04,180
presentation

00:09:59,190 --> 00:10:06,820
so Callie itself has very good

00:10:04,180 --> 00:10:12,070
documentation they are using some

00:10:06,820 --> 00:10:15,280
sit-ups and it's this simple the left

00:10:12,070 --> 00:10:17,110
are talking about a BGP and it's the

00:10:15,280 --> 00:10:20,830
foundation that calicos uses to

00:10:17,110 --> 00:10:24,370
configure the routing thing and was

00:10:20,830 --> 00:10:27,900
something I think to use yeah exactly

00:10:24,370 --> 00:10:31,860
ah as I told before the whole setup was

00:10:27,900 --> 00:10:39,270
created and was planning to scale

00:10:31,860 --> 00:10:43,770
like recently so we decided to okay any

00:10:39,270 --> 00:10:48,800
solutions needs to scale the same way as

00:10:43,770 --> 00:10:52,260
the cluster and it needs to be

00:10:48,800 --> 00:10:57,660
deployable in any stuff that we needed

00:10:52,260 --> 00:11:00,720
to put inside the cluster because this

00:10:57,660 --> 00:11:04,680
is like a platform as a service for us

00:11:00,720 --> 00:11:08,730
it's a pub it's a path so we are adding

00:11:04,680 --> 00:11:10,860
features there we are adding like file

00:11:08,730 --> 00:11:14,810
storage and database as a service and

00:11:10,860 --> 00:11:18,210
stuff like that so anything would be

00:11:14,810 --> 00:11:24,390
pluggable in the whole solution not only

00:11:18,210 --> 00:11:27,870
mrs. Barone all those those parts and

00:11:24,390 --> 00:11:30,420
one interesting thing that I forgot to

00:11:27,870 --> 00:11:33,300
talk in this chart is that we are part

00:11:30,420 --> 00:11:35,130
of a bigger organization we particle is

00:11:33,300 --> 00:11:37,800
a part of you know the bigger company

00:11:35,130 --> 00:11:41,010
called wall they're big in the group in

00:11:37,800 --> 00:11:43,530
Brazil and we have some other arms and

00:11:41,010 --> 00:11:46,890
under that umbrella and the for example

00:11:43,530 --> 00:11:49,020
we have our own data centers and we need

00:11:46,890 --> 00:11:51,390
to have a solution that scale not only

00:11:49,020 --> 00:11:54,450
inside one that data center instance but

00:11:51,390 --> 00:11:57,470
across multiple data center instance and

00:11:54,450 --> 00:12:00,840
in a priority of environment using

00:11:57,470 --> 00:12:06,180
barebone machines using virtualization

00:12:00,840 --> 00:12:09,810
and so on so this simple structure of

00:12:06,180 --> 00:12:12,060
calico and this capacity for scale

00:12:09,810 --> 00:12:15,450
across data center was something that

00:12:12,060 --> 00:12:19,260
was very unique and was a driver for the

00:12:15,450 --> 00:12:23,940
whole solution yeah another feature that

00:12:19,260 --> 00:12:29,130
we found in calico that was good for us

00:12:23,940 --> 00:12:33,030
was that we can run the same kind of

00:12:29,130 --> 00:12:36,260
protection and layer of security both in

00:12:33,030 --> 00:12:39,710
the developer machine and then on the

00:12:36,260 --> 00:12:44,600
development environment then on the

00:12:39,710 --> 00:12:49,070
quick will in a environment and into

00:12:44,600 --> 00:12:52,160
production so we can like simulate every

00:12:49,070 --> 00:12:55,400
in every step what is going to happen in

00:12:52,160 --> 00:12:59,150
production using the same to the same

00:12:55,400 --> 00:13:01,640
setup and it's secure I don't know how

00:12:59,150 --> 00:13:03,980
much of you know pork is but pag saguru

00:13:01,640 --> 00:13:05,810
is the best translation would be safe

00:13:03,980 --> 00:13:08,840
pay safe payments or something like that

00:13:05,810 --> 00:13:12,950
so we need to be secure it's in our name

00:13:08,840 --> 00:13:19,790
so and we got that using calico yeah

00:13:12,950 --> 00:13:24,970
exactly so there is some specific

00:13:19,790 --> 00:13:28,820
features that are pretty good for us and

00:13:24,970 --> 00:13:32,360
the the sack team was happy with which

00:13:28,820 --> 00:13:40,060
is the concept of security group is one

00:13:32,360 --> 00:13:43,790
of them in the past we had like a cyclic

00:13:40,060 --> 00:13:47,630
network with Sega creation we had some

00:13:43,790 --> 00:13:50,510
VLANs we have manual stuff running but

00:13:47,630 --> 00:13:54,290
it was not as fast as we needed at that

00:13:50,510 --> 00:13:59,750
moment because we were growing fast when

00:13:54,290 --> 00:14:02,150
the project started we had I mean just a

00:13:59,750 --> 00:14:08,770
few teams on the company and then we

00:14:02,150 --> 00:14:08,770
have a close to hundreds of teams so

00:14:09,100 --> 00:14:15,260
they deploy a lot so we needed something

00:14:12,140 --> 00:14:19,360
that grew fast and the network at that

00:14:15,260 --> 00:14:23,930
moment was not dynamic as we needed so

00:14:19,360 --> 00:14:28,700
this concept like based on cold and

00:14:23,930 --> 00:14:31,820
based on things that we could version

00:14:28,700 --> 00:14:34,310
and we could deploy in any environment

00:14:31,820 --> 00:14:37,610
that we were running was something

00:14:34,310 --> 00:14:40,190
really good and we could plan the

00:14:37,610 --> 00:14:41,680
security groups because at that time we

00:14:40,190 --> 00:14:44,949
had a provider

00:14:41,680 --> 00:14:48,759
which is a company that is like sister

00:14:44,949 --> 00:14:53,019
of our company and this company works

00:14:48,759 --> 00:14:56,889
for another companies on the country but

00:14:53,019 --> 00:15:00,160
they are more generalist and we needed

00:14:56,889 --> 00:15:04,589
some some specific solution so far as it

00:15:00,160 --> 00:15:07,920
was easier to get there on our hands

00:15:04,589 --> 00:15:11,649
interesting is that we are talking about

00:15:07,920 --> 00:15:14,470
some legal infrastructure where you ask

00:15:11,649 --> 00:15:16,809
something to be done in the security

00:15:14,470 --> 00:15:19,899
roles for example and it to access some

00:15:16,809 --> 00:15:21,610
service scenes and port and I don't know

00:15:19,899 --> 00:15:25,179
how many how much it takes in your

00:15:21,610 --> 00:15:28,360
company to have that applied but we had

00:15:25,179 --> 00:15:31,929
things like weeks I asked it for some

00:15:28,360 --> 00:15:34,420
access weeks later it came they okay

00:15:31,929 --> 00:15:36,790
when you try that thing that doesn't

00:15:34,420 --> 00:15:40,720
work and you need to reopen the incident

00:15:36,790 --> 00:15:44,470
and so on so we need his faster process

00:15:40,720 --> 00:15:47,499
and the more control one and this

00:15:44,470 --> 00:15:51,610
concept of secret group was the key

00:15:47,499 --> 00:15:54,850
thing that give that and in the other

00:15:51,610 --> 00:15:58,240
side we started to as I said before the

00:15:54,850 --> 00:16:01,870
first cluster used the very common way

00:15:58,240 --> 00:16:04,420
where you spin up a task and this

00:16:01,870 --> 00:16:08,559
important mapping to connect to your

00:16:04,420 --> 00:16:11,439
task that that's works but that's it's

00:16:08,559 --> 00:16:15,879
really very different when you have one

00:16:11,439 --> 00:16:18,160
IP per task and I'm talking about using

00:16:15,879 --> 00:16:21,939
simple service to discover like DNS

00:16:18,160 --> 00:16:23,860
without doing SRV record calls and you

00:16:21,939 --> 00:16:25,569
know exactly in what port your

00:16:23,860 --> 00:16:29,049
application will be running which thing

00:16:25,569 --> 00:16:33,339
for example we had one application that

00:16:29,049 --> 00:16:36,610
was happen in two parts in our setup and

00:16:33,339 --> 00:16:38,860
we didn't know exactly which protocol

00:16:36,610 --> 00:16:41,920
which port was running because it was

00:16:38,860 --> 00:16:44,740
random port so we need to do some hacks

00:16:41,920 --> 00:16:49,310
and try to connect one or two the other

00:16:44,740 --> 00:16:52,129
port using a CSV heckard code cause and

00:16:49,310 --> 00:16:54,829
having one IP per test it was the simple

00:16:52,129 --> 00:16:58,220
you do a simple DNS call and use that

00:16:54,829 --> 00:17:00,829
the party or a new and there is some

00:16:58,220 --> 00:17:01,850
very other good benefits for example we

00:17:00,829 --> 00:17:03,889
were debugging

00:17:01,850 --> 00:17:07,189
now it that's not specific about one

00:17:03,889 --> 00:17:09,049
proper content but it's related but the

00:17:07,189 --> 00:17:11,900
beginning became is something very

00:17:09,049 --> 00:17:14,630
trivial you might do to speed up in a

00:17:11,900 --> 00:17:18,679
machine and you know what IP address is

00:17:14,630 --> 00:17:22,600
doing the call so it's very very easy to

00:17:18,679 --> 00:17:25,850
debug the common setup it was this stuff

00:17:22,600 --> 00:17:29,030
if you have one single machine receiving

00:17:25,850 --> 00:17:32,000
calls from a lot of machines running the

00:17:29,030 --> 00:17:34,880
closer who what processes are doing this

00:17:32,000 --> 00:17:38,539
call if I have pivoting process run

00:17:34,880 --> 00:17:40,760
inside sandbox yeah it's it's really

00:17:38,539 --> 00:17:41,179
better for the buggy I guess that's the

00:17:40,760 --> 00:17:43,820
point

00:17:41,179 --> 00:17:49,010
it's easier to debug it's easier to keep

00:17:43,820 --> 00:17:52,280
control it's easier to see okay this IP

00:17:49,010 --> 00:17:54,230
is from that data centers so this

00:17:52,280 --> 00:17:55,250
application is connecting from this one

00:17:54,230 --> 00:18:02,270
to the other

00:17:55,250 --> 00:18:08,960
you know that kind of the bug stuff this

00:18:02,270 --> 00:18:12,980
is an example how kalloch works it is a

00:18:08,960 --> 00:18:15,799
router running on the the the host

00:18:12,980 --> 00:18:21,159
machine the machine that runs Calico

00:18:15,799 --> 00:18:23,870
itself so it adds some how to

00:18:21,159 --> 00:18:28,850
specifically address which are running

00:18:23,870 --> 00:18:31,039
on other nodes that way the container is

00:18:28,850 --> 00:18:34,850
burning on that machine can connect one

00:18:31,039 --> 00:18:40,760
to the other and no worries the

00:18:34,850 --> 00:18:45,590
application running it is based on BGP

00:18:40,760 --> 00:18:50,809
as Diego set so when you need to

00:18:45,590 --> 00:18:54,409
why plug Calico into your network you

00:18:50,809 --> 00:18:59,330
can use this protocol to do that running

00:18:54,409 --> 00:18:59,980
spot the call is for decades running on

00:18:59,330 --> 00:19:02,840
it

00:18:59,980 --> 00:19:08,900
Internet yeah exactly that's that how

00:19:02,840 --> 00:19:14,450
internet works the Calico is an Aes so

00:19:08,900 --> 00:19:19,840
every node knows they asked is set it up

00:19:14,450 --> 00:19:25,580
on the main controller and then they all

00:19:19,840 --> 00:19:29,660
peer which be between each other this is

00:19:25,580 --> 00:19:38,180
also something that enables us to

00:19:29,660 --> 00:19:41,510
connect to other house we use it a

00:19:38,180 --> 00:19:45,080
natural figure called a hot reflector

00:19:41,510 --> 00:19:49,790
which we'd use to connect this hole

00:19:45,080 --> 00:19:53,240
closer to our own data centers so using

00:19:49,790 --> 00:19:56,630
one farad that was doing that job we

00:19:53,240 --> 00:20:00,260
were able to connect the IP that were

00:19:56,630 --> 00:20:02,840
running on one specific container to the

00:20:00,260 --> 00:20:05,150
data to the data center and then we were

00:20:02,840 --> 00:20:10,250
able to get an application outside the

00:20:05,150 --> 00:20:12,470
cluster I guessed it and there's

00:20:10,250 --> 00:20:16,430
something to see here again talking

00:20:12,470 --> 00:20:18,860
about the legal system and networking

00:20:16,430 --> 00:20:22,430
configuration is something that you fear

00:20:18,860 --> 00:20:25,220
I don't know if you have that big hotel

00:20:22,430 --> 00:20:27,590
seated somewhere and you when you ask

00:20:25,220 --> 00:20:29,690
someone to a changing one configuration

00:20:27,590 --> 00:20:32,270
or other one holder like I just freeze

00:20:29,690 --> 00:20:34,580
I'm not crazy to turn that machine

00:20:32,270 --> 00:20:39,110
that's there for century who is the

00:20:34,580 --> 00:20:43,070
creative guy see yeah I need to for you

00:20:39,110 --> 00:20:46,520
to ask to some bigger guy yeah and this

00:20:43,070 --> 00:20:49,970
was a challenge to have this Hardware

00:20:46,520 --> 00:20:52,040
this viral and as I said for when you

00:20:49,970 --> 00:20:54,350
have your own data center you have a lot

00:20:52,040 --> 00:20:56,480
of good things but to have a lot of bad

00:20:54,350 --> 00:20:59,000
things to handle for example we need to

00:20:56,480 --> 00:21:01,910
find space to put a new fire inside our

00:20:59,000 --> 00:21:04,760
data center to have the right

00:21:01,910 --> 00:21:06,380
configuration to put the message closer

00:21:04,760 --> 00:21:09,290
to communicate of the rest of the

00:21:06,380 --> 00:21:09,710
infrastructure and and that is the kind

00:21:09,290 --> 00:21:11,750
of

00:21:09,710 --> 00:21:14,660
situation that you need to handle when

00:21:11,750 --> 00:21:21,170
you have your own datacenters yeah

00:21:14,660 --> 00:21:24,800
so on this next slide there is a diagram

00:21:21,170 --> 00:21:28,670
showing how to the the container is

00:21:24,800 --> 00:21:32,660
connect to the outside world we have a

00:21:28,670 --> 00:21:36,680
container that be running on the messers

00:21:32,660 --> 00:21:39,770
closer actually a b c and g running on

00:21:36,680 --> 00:21:43,940
the messes closer when B needs to

00:21:39,770 --> 00:21:47,240
connect to see it goes to that those

00:21:43,940 --> 00:21:50,420
hearts that were shown on the previous

00:21:47,240 --> 00:21:54,440
slide but when the see container needs

00:21:50,420 --> 00:21:57,680
to connect to the legacy system it goes

00:21:54,440 --> 00:22:01,670
through the hot reflector which is

00:21:57,680 --> 00:22:05,000
connected to our BGP on the data center

00:22:01,670 --> 00:22:09,680
and aggregation and all that network

00:22:05,000 --> 00:22:11,390
stuff you have the applications knowing

00:22:09,680 --> 00:22:15,040
each other with all the features that

00:22:11,390 --> 00:22:19,880
you seen on the previous presentations

00:22:15,040 --> 00:22:20,420
service discovery etc and the outside

00:22:19,880 --> 00:22:24,140
world

00:22:20,420 --> 00:22:27,670
connects to to the the containers it can

00:22:24,140 --> 00:22:30,530
go straight to their IP address and port

00:22:27,670 --> 00:22:31,880
one interesting part that it's possible

00:22:30,530 --> 00:22:34,910
for you to have a mix of the workload

00:22:31,880 --> 00:22:38,630
using your new infrastructure with the

00:22:34,910 --> 00:22:43,160
legacy system mixing some aspects from

00:22:38,630 --> 00:22:45,830
each one for example here in the legacy

00:22:43,160 --> 00:22:48,320
database for example if you see who

00:22:45,830 --> 00:22:51,380
don't have that to be going straight

00:22:48,320 --> 00:22:53,570
there because we weren't able to use

00:22:51,380 --> 00:22:57,170
Calico in that machine that was out of

00:22:53,570 --> 00:23:00,260
our range the database guy colored is

00:22:57,170 --> 00:23:04,370
crazy and we said ok let's do the old

00:23:00,260 --> 00:23:08,120
ACL process echo process and when we get

00:23:04,370 --> 00:23:10,910
out from the domestics cluster we are in

00:23:08,120 --> 00:23:12,980
the old secured fashion configured

00:23:10,910 --> 00:23:17,120
network configuration with your protein

00:23:12,980 --> 00:23:18,590
and IP and that's one another point to

00:23:17,120 --> 00:23:23,529
the one IP parent

00:23:18,590 --> 00:23:27,159
Calico has an eye pen and then when you

00:23:23,529 --> 00:23:30,919
start a container it gets an IB of that

00:23:27,159 --> 00:23:33,880
specifically hold that you say the

00:23:30,919 --> 00:23:37,309
network team can match that IP and then

00:23:33,880 --> 00:23:39,500
the ACO is there running and you need

00:23:37,309 --> 00:23:42,309
you don't need to ask again for that

00:23:39,500 --> 00:23:51,200
thing to be running because it is

00:23:42,309 --> 00:23:58,520
constrained on the Calico this is a how

00:23:51,200 --> 00:24:03,710
do the developers can use the the Calico

00:23:58,520 --> 00:24:07,010
to say what applications that goes to

00:24:03,710 --> 00:24:09,590
connect and what it needs to to to pay

00:24:07,010 --> 00:24:12,470
attention what people needs to take care

00:24:09,590 --> 00:24:15,020
of and here we have something very

00:24:12,470 --> 00:24:18,740
interesting I try to show that mix of

00:24:15,020 --> 00:24:22,070
sex verbs and we have different roles

00:24:18,740 --> 00:24:23,929
playing in different time for example in

00:24:22,070 --> 00:24:25,549
the right side we have some

00:24:23,929 --> 00:24:27,860
configuration that's done to into

00:24:25,549 --> 00:24:35,960
calicoes having the calculate work

00:24:27,860 --> 00:24:39,110
coffees and right right left the sample

00:24:35,960 --> 00:24:43,580
Calico configuration yeah and if you see

00:24:39,110 --> 00:24:46,130
we have more sack less than amor also

00:24:43,580 --> 00:24:49,460
working in this configuration it's a

00:24:46,130 --> 00:24:54,770
rule that you define is how connections

00:24:49,460 --> 00:24:57,289
go in your cluster for example here we

00:24:54,770 --> 00:24:59,840
have some sample configuration and I'm

00:24:57,289 --> 00:25:04,039
saying calico please I have a rice equal

00:24:59,840 --> 00:25:05,840
the base sample and the destination and

00:25:04,039 --> 00:25:09,049
anyone that wants to connect and this

00:25:05,840 --> 00:25:13,309
thing goes to the it is allowed to go to

00:25:09,049 --> 00:25:17,390
the destination number above in the

00:25:13,309 --> 00:25:20,029
right port and apply this role using

00:25:17,390 --> 00:25:22,610
this kind of selector anyone that wants

00:25:20,029 --> 00:25:24,720
to use a database called my see Cody be

00:25:22,610 --> 00:25:27,720
sample quite

00:25:24,720 --> 00:25:29,370
been a CIO actually yeah maybe security

00:25:27,720 --> 00:25:31,850
team haven't paid that much attention

00:25:29,370 --> 00:25:35,309
today

00:25:31,850 --> 00:25:38,700
and the interesting part that we might

00:25:35,309 --> 00:25:41,490
have source configurations you restrict

00:25:38,700 --> 00:25:44,010
which application might connect to the

00:25:41,490 --> 00:25:46,770
database so we have a framework where

00:25:44,010 --> 00:25:49,590
the the secret guys my point which

00:25:46,770 --> 00:25:53,340
database has specific access control

00:25:49,590 --> 00:25:56,190
rules and how to apply that rules in the

00:25:53,340 --> 00:26:00,350
closer itself there is one finger that

00:25:56,190 --> 00:26:03,809
is worth it to say it it is that all

00:26:00,350 --> 00:26:09,809
these configurations are plugged and in

00:26:03,809 --> 00:26:14,309
the CIN CD process so when some DevOps

00:26:09,809 --> 00:26:18,240
on designing or whatever set up a new

00:26:14,309 --> 00:26:20,909
ACL and then he will send a pull request

00:26:18,240 --> 00:26:24,270
to the security team the security team

00:26:20,909 --> 00:26:29,669
will there and say it's ok it can it can

00:26:24,270 --> 00:26:32,870
go or it cannot and it is like looking

00:26:29,669 --> 00:26:35,700
straight into the the Jenkins itself ear

00:26:32,870 --> 00:26:39,210
with average production with like King

00:26:35,700 --> 00:26:41,610
Stach production for it and in here in

00:26:39,210 --> 00:26:44,970
the Martin configuration you need to put

00:26:41,610 --> 00:26:45,360
some labels to instruct to Calico how to

00:26:44,970 --> 00:26:47,520
talk

00:26:45,360 --> 00:26:50,640
what approves to needs to be applied to

00:26:47,520 --> 00:26:53,880
this task and for example this simple

00:26:50,640 --> 00:26:55,950
configuration I have an app called my

00:26:53,880 --> 00:26:59,309
source name it's my name the name that

00:26:55,950 --> 00:27:02,340
I'm registering and I need to talk to

00:26:59,309 --> 00:27:04,409
other apps and it talk to database and

00:27:02,340 --> 00:27:07,380
it talked to infrastructure legacy

00:27:04,409 --> 00:27:10,470
infrastructure usually and then we have

00:27:07,380 --> 00:27:13,140
the environments that said that the

00:27:10,470 --> 00:27:17,610
Calico apply the right rules in the

00:27:13,140 --> 00:27:20,610
right place using IP tables and kernel

00:27:17,610 --> 00:27:22,919
things and it's interesting that it's

00:27:20,610 --> 00:27:25,020
applied both side inside of the client

00:27:22,919 --> 00:27:27,600
that is open the connection side of this

00:27:25,020 --> 00:27:31,279
server that's accepting the connect so

00:27:27,600 --> 00:27:38,909
we have a cue point verification of

00:27:31,279 --> 00:27:43,249
security and I said that to have our own

00:27:38,909 --> 00:27:47,789
data center yeah we have but we are not

00:27:43,249 --> 00:27:50,970
as scalable as we would like to be our

00:27:47,789 --> 00:27:54,990
own setup and when anything's in our

00:27:50,970 --> 00:27:56,850
rush we always need to do some kind of

00:27:54,990 --> 00:27:58,379
negotiation internally to have some more

00:27:56,850 --> 00:28:04,590
machine or some more space here and

00:27:58,379 --> 00:28:07,049
there so they extended to the cloud with

00:28:04,590 --> 00:28:09,119
something very straightforward in the

00:28:07,049 --> 00:28:12,330
past we were going yeah when you have

00:28:09,119 --> 00:28:15,690
your own data center you are never as

00:28:12,330 --> 00:28:18,029
fast as a cloud provider it is

00:28:15,690 --> 00:28:25,350
impossible but it is not your business

00:28:18,029 --> 00:28:27,809
to have a cloud system running so you're

00:28:25,350 --> 00:28:32,580
probably going to get mass with some

00:28:27,809 --> 00:28:35,669
capex our discussion regarding money and

00:28:32,580 --> 00:28:38,070
it's pretty easy er to like just stand

00:28:35,669 --> 00:28:41,639
to the cloud and blow a seizure or

00:28:38,070 --> 00:28:45,119
something yeah and it is a project that

00:28:41,639 --> 00:28:49,499
we started in the start of the year in

00:28:45,119 --> 00:28:52,350
January and you have some teams working

00:28:49,499 --> 00:28:55,019
and the idea was to have one extension

00:28:52,350 --> 00:28:57,990
of our own data center took some cloud

00:28:55,019 --> 00:28:59,279
provider we have as I said four have

00:28:57,990 --> 00:29:03,179
three data center and other

00:28:59,279 --> 00:29:06,119
communication is something very fluent

00:29:03,179 --> 00:29:08,700
and we're directly and we started to

00:29:06,119 --> 00:29:12,269
search for a way to have this kind of

00:29:08,700 --> 00:29:14,309
malleability and configuration used some

00:29:12,269 --> 00:29:17,220
sort of provider and they use their

00:29:14,309 --> 00:29:21,210
capability of extending some more Alaska

00:29:17,220 --> 00:29:23,999
way yeah escape exactly yeah so this is

00:29:21,210 --> 00:29:29,999
the diagram of the the solution we came

00:29:23,999 --> 00:29:32,399
up we had on the your left side our

00:29:29,999 --> 00:29:37,330
cluster running on the in-house data

00:29:32,399 --> 00:29:40,779
center it has bgp between the nodes

00:29:37,330 --> 00:29:45,289
all those rules we were talking about

00:29:40,779 --> 00:29:49,940
that fire all just after is the how to

00:29:45,289 --> 00:29:54,620
flatter we deploy it and then on the

00:29:49,940 --> 00:29:56,840
right side you had AWS account so we had

00:29:54,620 --> 00:29:58,429
the clutter running we had everything

00:29:56,840 --> 00:30:03,649
running smoothly

00:29:58,429 --> 00:30:10,730
inside the the AWS but we couldn't

00:30:03,649 --> 00:30:14,179
connect the the Calico using the C

00:30:10,730 --> 00:30:16,580
router they deploy router because I was

00:30:14,179 --> 00:30:18,190
not made to do that it's not it's a

00:30:16,580 --> 00:30:21,500
bless fault

00:30:18,190 --> 00:30:27,340
justic again who here is familiar if he

00:30:21,500 --> 00:30:32,929
were things and names and so on okay so

00:30:27,340 --> 00:30:36,889
we decided to deploy a fire all by

00:30:32,929 --> 00:30:40,789
ourselves to do the same thing that were

00:30:36,889 --> 00:30:44,960
we made on our own data center so we had

00:30:40,789 --> 00:30:48,559
both infrastructures talking each other

00:30:44,960 --> 00:30:52,970
using a VPN connection is that one on

00:30:48,559 --> 00:30:55,840
the middle and to make the closer's talk

00:30:52,970 --> 00:31:01,009
to each other we deployed a mikrotik

00:30:55,840 --> 00:31:05,330
instance it's a pretty good router it's

00:31:01,009 --> 00:31:08,179
cheap which is pretty good and it works

00:31:05,330 --> 00:31:12,919
there is but that's the best combination

00:31:08,179 --> 00:31:15,139
cheap and works and we use it

00:31:12,919 --> 00:31:18,019
the mikrotik has the house reflector

00:31:15,139 --> 00:31:21,590
inside the ADA bless account and we

00:31:18,019 --> 00:31:27,730
connect the both of them passing through

00:31:21,590 --> 00:31:32,059
the VPN connection and seamlessly like

00:31:27,730 --> 00:31:35,419
one note on one side need how to the

00:31:32,059 --> 00:31:38,950
other side by using the hot reflectors

00:31:35,419 --> 00:31:38,950
we use on both sides

00:31:40,350 --> 00:31:47,590
and we had a more a more difficult

00:31:45,160 --> 00:31:52,080
diagram than this one we simplified a

00:31:47,590 --> 00:31:54,940
lot of things but here is the applied

00:31:52,080 --> 00:31:58,090
here here we have infrastructure as

00:31:54,940 --> 00:32:00,580
called applied when I saw the work that

00:31:58,090 --> 00:32:04,000
that work I did with the help from the

00:32:00,580 --> 00:32:07,360
Amazon guys I was a shock because when

00:32:04,000 --> 00:32:10,690
you spin up new machines in our AWS

00:32:07,360 --> 00:32:13,600
cluster it's automatically connect in

00:32:10,690 --> 00:32:16,630
the configure mikrotik to the work to do

00:32:13,600 --> 00:32:19,750
the right work ho team and we also have

00:32:16,630 --> 00:32:21,970
some very very resilient system because

00:32:19,750 --> 00:32:23,890
we were more control using BGP for

00:32:21,970 --> 00:32:27,280
example as I said you have direct

00:32:23,890 --> 00:32:29,500
connect but we also we also have VPN and

00:32:27,280 --> 00:32:32,590
we have something redundant between

00:32:29,500 --> 00:32:34,180
originals between our two or three that

00:32:32,590 --> 00:32:36,970
data center think we are connected

00:32:34,180 --> 00:32:41,620
because this diagram will just explode

00:32:36,970 --> 00:32:44,170
we have more from one cup of these that

00:32:41,620 --> 00:32:48,450
were seen in more three cups of that our

00:32:44,170 --> 00:32:51,700
data same things and that was this

00:32:48,450 --> 00:32:54,100
fluently communicating without any point

00:32:51,700 --> 00:32:57,010
of failure if you kill something there

00:32:54,100 --> 00:32:59,200
they will find a new route if you have

00:32:57,010 --> 00:33:00,550
some problems in your Direct Connect

00:32:59,200 --> 00:33:04,420
configuration they will go through the

00:33:00,550 --> 00:33:06,580
internet using V PC VPN this is a

00:33:04,420 --> 00:33:12,100
simplified version of the diagram name

00:33:06,580 --> 00:33:17,230
obviously but yeah and all this stuff

00:33:12,100 --> 00:33:20,790
after one or two months of research it

00:33:17,230 --> 00:33:27,250
ended it ended up in a simple solution

00:33:20,790 --> 00:33:31,750
but it works and now one container on

00:33:27,250 --> 00:33:36,490
our in-house data center can connect to

00:33:31,750 --> 00:33:40,630
the container on the AWS and then we can

00:33:36,490 --> 00:33:44,179
make the two containers know each other

00:33:40,630 --> 00:33:47,690
and actually this solution

00:33:44,179 --> 00:33:50,480
we are using to make not only the

00:33:47,690 --> 00:33:53,179
containers but the data center itself to

00:33:50,480 --> 00:33:56,840
connect to each other and then we can

00:33:53,179 --> 00:34:00,650
run not only mazes apps kentucker

00:33:56,840 --> 00:34:05,870
absolute whatever on the AWS but we can

00:34:00,650 --> 00:34:09,619
run normal applications that we could

00:34:05,870 --> 00:34:11,659
set up on the on-premises on the the

00:34:09,619 --> 00:34:17,409
in-house data center on the EDA players

00:34:11,659 --> 00:34:21,500
make and connect to each other if the

00:34:17,409 --> 00:34:27,169
diagram is talked about but in calico

00:34:21,500 --> 00:34:29,210
the order task is the next hope you will

00:34:27,169 --> 00:34:31,750
send a package and the destination will

00:34:29,210 --> 00:34:35,060
be the next desk the text you are

00:34:31,750 --> 00:34:38,750
looking at and in this case we are

00:34:35,060 --> 00:34:43,460
talking about we have one thing running

00:34:38,750 --> 00:34:45,619
in AWS that can talk directly to one

00:34:43,460 --> 00:34:49,310
thing running inside our data center

00:34:45,619 --> 00:34:51,589
without net or overlay or anything like

00:34:49,310 --> 00:34:54,320
that so as I said before the body is

00:34:51,589 --> 00:34:57,050
something just simple you came this log

00:34:54,320 --> 00:34:58,880
the IP address of client and you have

00:34:57,050 --> 00:35:03,170
the connection between the caller and

00:34:58,880 --> 00:35:06,880
the callee things starting to be a mode

00:35:03,170 --> 00:35:12,430
much more simple yeah exactly

00:35:06,880 --> 00:35:16,599
well we have just five minutes left so

00:35:12,430 --> 00:35:16,599
any question yeah

00:35:24,330 --> 00:35:32,920
you're talking okay

00:35:28,990 --> 00:35:36,300
he's asking if we are using BGP just to

00:35:32,920 --> 00:35:41,470
not go to the public Internet

00:35:36,300 --> 00:35:45,450
not exactly we we wanted to have the

00:35:41,470 --> 00:35:48,400
same setup on both to the Centers

00:35:45,450 --> 00:35:54,700
actually we have that running on two of

00:35:48,400 --> 00:35:57,880
our own and then on AWS we are using the

00:35:54,700 --> 00:36:01,650
VPN to don't go

00:35:57,880 --> 00:36:04,870
via public internet but that's that's

00:36:01,650 --> 00:36:09,130
the culture and Bishop is something very

00:36:04,870 --> 00:36:11,710
calico calculus that when you spawned a

00:36:09,130 --> 00:36:14,140
new task for example to use BGP to

00:36:11,710 --> 00:36:17,800
propagate the route information and we

00:36:14,140 --> 00:36:19,990
as a cassette where is a BGP to have one

00:36:17,800 --> 00:36:24,150
single solution that we know that work

00:36:19,990 --> 00:36:24,150
at the local in a large scale

00:36:31,450 --> 00:36:39,010
he's asking what kind of encapsulation

00:36:33,849 --> 00:36:42,369
it is running it is not VX lon

00:36:39,010 --> 00:36:46,750
for certain I know that but I don't know

00:36:42,369 --> 00:36:49,329
exactly what is if you if you want to

00:36:46,750 --> 00:36:49,780
know I can get your card and it sent to

00:36:49,329 --> 00:36:52,300
you

00:36:49,780 --> 00:36:54,730
I asked the network team right I know

00:36:52,300 --> 00:36:57,910
that is not the excellent because we

00:36:54,730 --> 00:36:59,650
were talking about that a year ago and

00:36:57,910 --> 00:37:01,839
then people said oh we are not going to

00:36:59,650 --> 00:37:12,190
use this by now but it may be in the

00:37:01,839 --> 00:37:14,600
future any other no well we need to say

00:37:12,190 --> 00:37:19,360
thank you yeah

00:37:14,600 --> 00:37:19,360

YouTube URL: https://www.youtube.com/watch?v=woaKCAG4li4


