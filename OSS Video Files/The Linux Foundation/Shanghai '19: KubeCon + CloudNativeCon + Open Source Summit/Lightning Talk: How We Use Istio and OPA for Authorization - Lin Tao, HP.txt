Title: Lightning Talk: How We Use Istio and OPA for Authorization - Lin Tao, HP
Publication date: 2019-07-05
Playlist: Shanghai '19: KubeCon + CloudNativeCon + Open Source Summit
Description: 
	Lightning Talk: How We Use Istio and OPA for Authorization - Lin Tao, HP 

Join us for KubeCon + CloudNativeCon in San Diego November 18 - 21 and in Amsterdam March 30 â€“ April 2, 2020! Learn more at https://kubecon.io. The conference features presentations from developers and end users of Kubernetes, Prometheus, Envoy and all of the other CNCF-hosted projects. 

I'd like to introduce how we use istio + OPA to do authorization in HP's FitStation platform.    Our project consists of 20+ micro-services which are written in Golang and running on Kubernetes with istio enabled. These services are divided into multiple layers and on each layer we apply different authorization via istio mixer and OPA.    I'd like to give a high-level introduction on how we make this work, following topics will be covered:  - how we leverage istio adapter to do authorization  - how we integrate OPA into our micro-services  - how we manage our OPA policies    

https://sched.co/Nrrr
Captions: 
	00:00:00,000 --> 00:00:04,770
hello my name is Lin Tao I'm from HP

00:00:02,419 --> 00:00:07,049
today I'm going to talk about how we use

00:00:04,770 --> 00:00:10,290
issue and open policy agent for

00:00:07,049 --> 00:00:12,870
authorization so first I would like to

00:00:10,290 --> 00:00:14,940
talk about authorization other ization

00:00:12,870 --> 00:00:17,310
is to verify brand identity has the

00:00:14,940 --> 00:00:18,840
permission to do something and there are

00:00:17,310 --> 00:00:20,970
many common approaches to do

00:00:18,840 --> 00:00:23,910
authorization like load based access

00:00:20,970 --> 00:00:26,939
control which you can tested by ropes it

00:00:23,910 --> 00:00:29,670
is cost current the typical example is

00:00:26,939 --> 00:00:32,250
kubernetes are back and there's also

00:00:29,670 --> 00:00:35,010
policy or attributes based access

00:00:32,250 --> 00:00:38,430
control which you can access by policies

00:00:35,010 --> 00:00:41,250
it is more fine-grained typical example

00:00:38,430 --> 00:00:43,680
is a table as I am policies and we are

00:00:41,250 --> 00:00:46,680
using both of this purchasing our

00:00:43,680 --> 00:00:48,989
current project so little background on

00:00:46,680 --> 00:00:51,270
our project is called a precision

00:00:48,989 --> 00:00:54,570
platform which is a customer shoes

00:00:51,270 --> 00:00:57,239
iPhone we have many third-party partners

00:00:54,570 --> 00:01:00,120
developing their service on our platform

00:00:57,239 --> 00:01:02,520
using a platform API and the service

00:01:00,120 --> 00:01:05,250
built by these partners are running the

00:01:02,520 --> 00:01:07,740
same kubernetes cluster as our prep on

00:01:05,250 --> 00:01:10,350
services so it's a challenge for the

00:01:07,740 --> 00:01:13,260
platform network security and access

00:01:10,350 --> 00:01:16,619
control so we divide these services into

00:01:13,260 --> 00:01:18,750
layers so we have layer 1 which our

00:01:16,619 --> 00:01:20,790
partner service and we have layer 2

00:01:18,750 --> 00:01:23,369
which are pipe on services and there are

00:01:20,790 --> 00:01:26,130
three for internal services and on inch

00:01:23,369 --> 00:01:30,509
layer we apply different authorization

00:01:26,130 --> 00:01:32,369
scheme so in l1 we are enforcing

00:01:30,509 --> 00:01:34,229
road-based as you can showing in for

00:01:32,369 --> 00:01:36,810
cha-cha layer that's where it's your

00:01:34,229 --> 00:01:40,549
mixer comes in so we have a customized

00:01:36,810 --> 00:01:43,470
audio adapter on the mixer so all the

00:01:40,549 --> 00:01:46,290
requests to l1 service will be handled

00:01:43,470 --> 00:01:49,320
by our adapter the adapter will

00:01:46,290 --> 00:01:53,280
authorize we are with our centralized

00:01:49,320 --> 00:01:55,920
authorization service and just all we

00:01:53,280 --> 00:01:58,530
config the adapter we have rule

00:01:55,920 --> 00:02:01,049
basically says that only the request to

00:01:58,530 --> 00:02:04,530
the service with layer equals L one will

00:02:01,049 --> 00:02:07,469
be handled by the adapter and here's the

00:02:04,530 --> 00:02:10,110
adapter template it defines all the

00:02:07,469 --> 00:02:12,540
temple attributes from ICO that will be

00:02:10,110 --> 00:02:15,329
used by the adapter so there

00:02:12,540 --> 00:02:18,510
definite what who is trying to access

00:02:15,329 --> 00:02:21,439
your API and then the adapter can

00:02:18,510 --> 00:02:25,500
authorize with our authorization service

00:02:21,439 --> 00:02:28,200
using our row base authorization so

00:02:25,500 --> 00:02:30,569
that's a one authorization so we are

00:02:28,200 --> 00:02:34,019
basically checking if user is able to

00:02:30,569 --> 00:02:37,680
accessible API it's consequent but it's

00:02:34,019 --> 00:02:42,090
what we want in l1 services in l2 we

00:02:37,680 --> 00:02:45,299
have service from different partners and

00:02:42,090 --> 00:02:48,780
resource from different partners we want

00:02:45,299 --> 00:02:51,269
more fine-grained access control so for

00:02:48,780 --> 00:02:54,049
instance the company a can cannot access

00:02:51,269 --> 00:02:58,680
company B's resources so that's where

00:02:54,049 --> 00:03:02,370
open policy agent comes in so we have

00:02:58,680 --> 00:03:05,700
library cards declined which are l to

00:03:02,370 --> 00:03:07,829
services are integrated with so the this

00:03:05,700 --> 00:03:10,530
client will send the authorized request

00:03:07,829 --> 00:03:12,870
to open policy agents so a little

00:03:10,530 --> 00:03:15,480
background on policy agent it's a

00:03:12,870 --> 00:03:19,220
general purpose authorizing engine from

00:03:15,480 --> 00:03:21,750
CN CF I think it is just graduated and

00:03:19,220 --> 00:03:24,629
basically your service will send a query

00:03:21,750 --> 00:03:27,090
to open policy agent and open path

00:03:24,629 --> 00:03:30,269
agents will make authorization decision

00:03:27,090 --> 00:03:34,799
for you based on the policy and data you

00:03:30,269 --> 00:03:37,829
can pick so here's a typical example so

00:03:34,799 --> 00:03:41,190
in our order service we have other

00:03:37,829 --> 00:03:44,099
clients integrated and when let's say

00:03:41,190 --> 00:03:47,340
the user Alice trying to request others

00:03:44,099 --> 00:03:50,010
from company HP our client LT client

00:03:47,340 --> 00:03:52,260
will extract attributes from current

00:03:50,010 --> 00:03:55,290
request and packaging into a JSON

00:03:52,260 --> 00:03:57,840
payload so these attributes include user

00:03:55,290 --> 00:04:00,030
attributes and API attributes and

00:03:57,840 --> 00:04:02,909
request attributes and they will be sent

00:04:00,030 --> 00:04:05,310
to open policy agent and on the other

00:04:02,909 --> 00:04:07,859
side open policy agent is complete with

00:04:05,310 --> 00:04:11,430
our policy and data so this policy

00:04:07,859 --> 00:04:14,579
defines that our user is only able to

00:04:11,430 --> 00:04:17,909
access orders from his own company and

00:04:14,579 --> 00:04:20,849
the data here we define the relationship

00:04:17,909 --> 00:04:23,490
between the users and companies so with

00:04:20,849 --> 00:04:24,250
these three pieces of information open

00:04:23,490 --> 00:04:26,410
policy agent

00:04:24,250 --> 00:04:29,950
is able to make authorization decision

00:04:26,410 --> 00:04:33,040
and return the result to our service so

00:04:29,950 --> 00:04:36,070
that's basically how we enforce the fine

00:04:33,040 --> 00:04:40,390
grain access control in our l2 services

00:04:36,070 --> 00:04:42,340
and here's the overview in a 1 we

00:04:40,390 --> 00:04:47,280
enforce the row base as control within

00:04:42,340 --> 00:04:50,320
semester and help you with a pack using

00:04:47,280 --> 00:04:52,810
open parts agents and l3 it's all

00:04:50,320 --> 00:04:56,500
internal services we are applying some

00:04:52,810 --> 00:05:00,610
network policies to limit access to the

00:04:56,500 --> 00:05:03,610
l2 services so thank you because the

00:05:00,610 --> 00:05:05,800
time is limited I can step into details

00:05:03,610 --> 00:05:08,860
but if you are interested please feel

00:05:05,800 --> 00:05:10,260
free to reach out to me I'll be happy to

00:05:08,860 --> 00:05:13,449
answer thank you

00:05:10,260 --> 00:05:13,449

YouTube URL: https://www.youtube.com/watch?v=uzVOSKDnoWk


