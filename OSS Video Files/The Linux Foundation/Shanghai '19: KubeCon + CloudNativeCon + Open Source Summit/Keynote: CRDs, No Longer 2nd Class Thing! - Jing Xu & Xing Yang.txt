Title: Keynote: CRDs, No Longer 2nd Class Thing! - Jing Xu & Xing Yang
Publication date: 2019-07-05
Playlist: Shanghai '19: KubeCon + CloudNativeCon + Open Source Summit
Description: 
	Keynote: CRDs, No Longer 2nd Class Thing! - Jing Xu, Software Engineer, Google & Xing Yang, Lead Architect, OpenSDS 

Join us for KubeCon + CloudNativeCon in San Diego November 18 - 21 and in Amsterdam March 30 – April 2, 2020! Learn more at https://kubecon.io. The conference features presentations from developers and end users of Kubernetes, Prometheus, Envoy and all of the other CNCF-hosted projects. 

Custom Resource Definition (CRD) is a powerful way of extending Kubernetes APIs. In the past, CRD has been mainly used for out-of-tree, third-party things. Today, with the constant improvement of CRD, there is an ongoing effort to refine and enhance Kubernetes as an modular and extensible platform by factoring everything but the bare essentials out of “core” Kubernetes. CRDs and their controllers start to be used for managing even in-tree, first-party Kubernetes resources.    In this session, We will take you on a journey of building CRDs as first class citizens in Kubernetes based on our first-hand experience. This made us believe that CRDs can be used for core resources and integrated seamlessly with other core API objects. We will also introduce Kubebuilder, a SDK to build and publish Kubernetes APIs, and explain how Kubebuilder makes it easy to write a custom controller for CRD. 

https://sched.co/NrqD
Captions: 
	00:00:00,000 --> 00:00:04,350
definitely everyone this is sting hello

00:00:03,689 --> 00:00:07,770
everyone

00:00:04,350 --> 00:00:10,349
King and I are very honored to have this

00:00:07,770 --> 00:00:12,030
opportunity to present our talk in

00:00:10,349 --> 00:00:15,120
Shanghai cube Kong

00:00:12,030 --> 00:00:18,090
my name is Bing and Google engineer I

00:00:15,120 --> 00:00:21,060
work for GK Google can take out bananas

00:00:18,090 --> 00:00:24,930
engine storage lifecycle team Ching is

00:00:21,060 --> 00:00:27,990
open cs3 detect OBCs is open source

00:00:24,930 --> 00:00:30,480
project and the link foundation so we

00:00:27,990 --> 00:00:33,530
are also proud Burnett his open source

00:00:30,480 --> 00:00:37,829
contributors we need six are rich

00:00:33,530 --> 00:00:42,480
snapshot workgroup alcohol reaction

00:00:37,829 --> 00:00:45,000
washer open SPSS Asiago shoot open SPSS

00:00:42,480 --> 00:00:48,239
limited inquiry semaine de eco currency

00:00:45,000 --> 00:00:51,410
amo tab Medina Co kg reaction panting

00:00:48,239 --> 00:00:55,230
Lee French Edition famine de aquila

00:00:51,410 --> 00:00:57,920
decision Patrick approach e ke sensual

00:00:55,230 --> 00:01:01,949
800 organ function momento sure

00:00:57,920 --> 00:01:06,320
kubernetes Reseda Angela omen et

00:01:01,949 --> 00:01:07,560
true Tao and príncipe de ja vu de mundo

00:01:06,320 --> 00:01:10,590
Tintin

00:01:07,560 --> 00:01:13,560
omen faranzano TV Julie gated lndian

00:01:10,590 --> 00:01:17,880
woman who yo you millennium for integer

00:01:13,560 --> 00:01:20,310
say ho you know Michelangelo so today we

00:01:17,880 --> 00:01:23,130
are going to talk about CRD customary

00:01:20,310 --> 00:01:26,610
sauce definition but what it does and

00:01:23,130 --> 00:01:29,880
why it's important to talk about here so

00:01:26,610 --> 00:01:33,470
we want to share story from us using CRD

00:01:29,880 --> 00:01:36,500
in your project which inspired is talk

00:01:33,470 --> 00:01:40,350
so our journey starts about a year ago

00:01:36,500 --> 00:01:42,720
when $6 a start a snapshots project you

00:01:40,350 --> 00:01:44,810
know storage is for storing data it is

00:01:42,720 --> 00:01:47,009
important and you don't want to lose it

00:01:44,810 --> 00:01:50,250
but things might happen

00:01:47,009 --> 00:01:52,470
fix my failed data may be corrupted so

00:01:50,250 --> 00:01:55,619
snapshot gives you an easy quick way to

00:01:52,470 --> 00:01:59,070
recover your data it's very much like

00:01:55,619 --> 00:02:01,590
taking a picture of your data and later

00:01:59,070 --> 00:02:06,090
you can recover your data from that

00:02:01,590 --> 00:02:08,879
point so we work very hard for this

00:02:06,090 --> 00:02:12,580
project since it provides such important

00:02:08,879 --> 00:02:15,220
future for storage so we define API

00:02:12,580 --> 00:02:18,520
for volume snapshots you know like other

00:02:15,220 --> 00:02:21,340
communities api's it tells us them what

00:02:18,520 --> 00:02:25,030
to do and controller manage the behavior

00:02:21,340 --> 00:02:28,180
based on API and then we present the

00:02:25,030 --> 00:02:30,430
design through six architecture you know

00:02:28,180 --> 00:02:33,190
there are group of people have this

00:02:30,430 --> 00:02:37,360
power to decide whether to accept your

00:02:33,190 --> 00:02:39,190
API into export so we hope to get

00:02:37,360 --> 00:02:41,490
their approval so we can add snapshot

00:02:39,190 --> 00:02:46,860
into the core the user can see I used

00:02:41,490 --> 00:02:51,480
snapshot API guess what we got rejected

00:02:46,860 --> 00:02:55,710
so they told us no and to use the RT set

00:02:51,480 --> 00:02:58,870
at that time we had many questions why

00:02:55,710 --> 00:03:03,550
why push us out why they have to do this

00:02:58,870 --> 00:03:06,400
out of out of tray VCR D isn't for like

00:03:03,550 --> 00:03:08,350
third party application thing doesn't

00:03:06,400 --> 00:03:11,310
mean our feature is not that important

00:03:08,350 --> 00:03:13,960
and should not be part of grantees and

00:03:11,310 --> 00:03:16,930
sing to remember we were very hard

00:03:13,960 --> 00:03:20,560
trying to change their mind it's of

00:03:16,930 --> 00:03:22,590
course I remember that we tried many

00:03:20,560 --> 00:03:26,200
different ways trying to prove that

00:03:22,590 --> 00:03:30,070
natural API is you say entry and as the

00:03:26,200 --> 00:03:33,010
architecture was wrong but after many

00:03:30,070 --> 00:03:36,070
many runs of discussions we finally

00:03:33,010 --> 00:03:41,739
change our mind and we agreed with the

00:03:36,070 --> 00:03:44,020
decision to understand from the

00:03:41,739 --> 00:03:46,300
architectural point of view let's go

00:03:44,020 --> 00:03:51,010
back in time to the very beginning of

00:03:46,300 --> 00:03:53,010
kubernetes into a 14 the first PR was

00:03:51,010 --> 00:03:57,520
immediate into the communities ripple

00:03:53,010 --> 00:04:02,320
communities was born into 15 we had to

00:03:57,520 --> 00:04:05,290
the wondered start or release early this

00:04:02,320 --> 00:04:11,650
month humanities just has 10 years old

00:04:05,290 --> 00:04:15,100
happy birthday kubernetes kubernetes

00:04:11,650 --> 00:04:18,910
grows fast when it was just a little

00:04:15,100 --> 00:04:21,520
baby boat it had a very small number of

00:04:18,910 --> 00:04:25,620
API and controllers and support very

00:04:21,520 --> 00:04:27,870
limited features now at five years old

00:04:25,620 --> 00:04:30,270
it has grown into a much bigger boat

00:04:27,870 --> 00:04:33,690
with a lot of earthly lights and

00:04:30,270 --> 00:04:35,370
controllers a lot of functionalities do

00:04:33,690 --> 00:04:40,229
you know how fast kubernetes has been

00:04:35,370 --> 00:04:42,300
growing to find out how fast communities

00:04:40,229 --> 00:04:46,350
has been brilliant let's take a look of

00:04:42,300 --> 00:04:50,040
the number of API types in Queenie's

00:04:46,350 --> 00:04:54,270
core to measure the growth rate in

00:04:50,040 --> 00:04:57,419
release 0.4 they were owned in 1988

00:04:54,270 --> 00:05:00,870
types since then it has doubled and

00:04:57,419 --> 00:05:08,400
tripled do you know how many API types

00:05:00,870 --> 00:05:10,919
were in release 1.10 it is 110 so that's

00:05:08,400 --> 00:05:18,479
almost six times as many as what we had

00:05:10,919 --> 00:05:21,000
in release 0.4 with this growth rate can

00:05:18,479 --> 00:05:24,720
you imagine how many other types are in

00:05:21,000 --> 00:05:29,039
the latest release 2015 I will tell you

00:05:24,720 --> 00:05:33,210
the answer later are we expecting

00:05:29,039 --> 00:05:36,720
kubernetes to grow into this scary when

00:05:33,210 --> 00:05:41,430
it is giant how can we possibly manage

00:05:36,720 --> 00:05:45,030
and maintain such a giant obviously we

00:05:41,430 --> 00:05:47,370
can't it's time to put a stop and say no

00:05:45,030 --> 00:05:52,160
more we can no longer keep adding

00:05:47,370 --> 00:05:56,460
edgewise into kubernetes core like this

00:05:52,160 --> 00:06:00,620
instead what we need to do is to make

00:05:56,460 --> 00:06:03,349
sure who na DS is truly modular

00:06:00,620 --> 00:06:10,590
extensible easy to add new features and

00:06:03,349 --> 00:06:13,770
maintainable with a minimum for so how

00:06:10,590 --> 00:06:17,210
can we achieve such a goal genes only

00:06:13,770 --> 00:06:21,090
tell us how CRE comes to the rescue

00:06:17,210 --> 00:06:24,360
so yes to explain c rd i want to use

00:06:21,090 --> 00:06:28,349
this urbanised is to transport anyone

00:06:24,360 --> 00:06:31,080
read this book before it's fly right so

00:06:28,349 --> 00:06:33,719
I want to use it here not because just

00:06:31,080 --> 00:06:35,610
the cute pictures it's because the book

00:06:33,719 --> 00:06:37,599
explain a concept in such an interesting

00:06:35,610 --> 00:06:41,020
way I want to share with you

00:06:37,599 --> 00:06:43,979
so imagine kubernetes is a big zoo full

00:06:41,020 --> 00:06:46,539
of animals and we have API to represent

00:06:43,979 --> 00:06:49,179
animals and we have controller to one

00:06:46,539 --> 00:06:51,309
item you know kids always want to see

00:06:49,179 --> 00:06:53,610
something new something funny and we

00:06:51,309 --> 00:06:57,610
keep adding new animals into the zoo

00:06:53,610 --> 00:07:00,129
about something not even this like this

00:06:57,610 --> 00:07:05,369
hippo giraffe like this make with big

00:07:00,129 --> 00:07:09,309
ears how are going to Adam so here it is

00:07:05,369 --> 00:07:12,879
first we call something the API already

00:07:09,309 --> 00:07:17,139
in the 90s resources you know like

00:07:12,879 --> 00:07:19,149
Parsifal set deployments rest and if you

00:07:17,139 --> 00:07:22,770
want to define something new something

00:07:19,149 --> 00:07:26,169
on your own we have customer resources

00:07:22,770 --> 00:07:28,059
so you can define any way you like you

00:07:26,169 --> 00:07:30,819
can define something really weird like

00:07:28,059 --> 00:07:35,110
part little errors or number six modem

00:07:30,819 --> 00:07:39,399
and Ciardi cotton resource technician is

00:07:35,110 --> 00:07:41,529
used to define those see ours next

00:07:39,399 --> 00:07:43,089
technical cat example with this cute

00:07:41,529 --> 00:07:48,669
little panda you know everyone loves

00:07:43,089 --> 00:07:50,889
panda so a website CRD that it helps you

00:07:48,669 --> 00:07:54,849
we're going to define a new kind called

00:07:50,889 --> 00:07:58,569
panda and we want to add it into animals

00:07:54,849 --> 00:08:01,659
group on the right side see our it

00:07:58,569 --> 00:08:04,749
defines the details bag of this new

00:08:01,659 --> 00:08:07,569
resource panda and you can give a name

00:08:04,749 --> 00:08:13,719
you can define the spec like for stage

00:08:07,569 --> 00:08:15,969
plays wait now with CRT you can add the

00:08:13,719 --> 00:08:18,269
customer resource into the API so you

00:08:15,969 --> 00:08:22,059
can use it just like other places API

00:08:18,269 --> 00:08:25,409
but it doesn't do anything yet until you

00:08:22,059 --> 00:08:29,409
add a custom controller to manage it

00:08:25,409 --> 00:08:32,409
with CRD and customer controller you get

00:08:29,409 --> 00:08:34,089
something to call the character API that

00:08:32,409 --> 00:08:37,539
is really what component is all about

00:08:34,089 --> 00:08:41,050
you know the API spec defines that is

00:08:37,539 --> 00:08:43,479
our state what system look like and the

00:08:41,050 --> 00:08:47,769
controller will move actress page what

00:08:43,479 --> 00:08:49,090
with our state I hope I explained CRD

00:08:47,769 --> 00:08:52,900
good enough

00:08:49,090 --> 00:08:58,540
and seeing we want to talk about our

00:08:52,900 --> 00:09:00,700
journey yeah sure so now we unseal

00:08:58,540 --> 00:09:03,279
better why saqqaq culture want a push

00:09:00,700 --> 00:09:07,570
it's natural it has all the tree and how

00:09:03,279 --> 00:09:10,740
CRE can help us extend kubernetes api we

00:09:07,570 --> 00:09:16,080
started to work on the snapshot feature

00:09:10,740 --> 00:09:19,600
we created our repo under kubernetes ESI

00:09:16,080 --> 00:09:22,150
we added theory definitions we added a

00:09:19,600 --> 00:09:24,790
controller to watch the snapshot API

00:09:22,150 --> 00:09:28,540
object we added a deployment llamo files

00:09:24,790 --> 00:09:32,560
and documentation there are a lot of

00:09:28,540 --> 00:09:37,150
details here but as a user you really

00:09:32,560 --> 00:09:39,970
don't need to know from a user's point

00:09:37,150 --> 00:09:44,350
of view it works the same as any other

00:09:39,970 --> 00:09:48,339
communities a chai incriminated Score

00:09:44,350 --> 00:09:51,279
API we already have TD PDC hard nodes

00:09:48,339 --> 00:09:54,700
and so on now we have also added volume

00:09:51,279 --> 00:09:57,490
snapshot ATIS into the API assembly you

00:09:54,700 --> 00:09:59,200
can just use it the same old way you can

00:09:57,490 --> 00:10:01,690
do cube categories to create a snapshot

00:09:59,200 --> 00:10:04,360
a peer object you can do a crib color

00:10:01,690 --> 00:10:06,520
delete it delete it the snapshot

00:10:04,360 --> 00:10:09,220
controller will be working hard behind

00:10:06,520 --> 00:10:15,339
the scenes making sure that users

00:10:09,220 --> 00:10:18,430
request is taken care off now you may

00:10:15,339 --> 00:10:21,790
wonder does that mean CRT is exactly the

00:10:18,430 --> 00:10:25,800
same as a native API we have to say that

00:10:21,790 --> 00:10:29,650
there are differences CRT is still beta

00:10:25,800 --> 00:10:33,280
the plan is to bring it to GA in the

00:10:29,650 --> 00:10:36,160
next couple of releases CRD already has

00:10:33,280 --> 00:10:40,360
many features available in native ignite

00:10:36,160 --> 00:10:43,980
for example before in validation open

00:10:40,360 --> 00:10:46,209
API v3 schema definition and so on

00:10:43,980 --> 00:10:50,020
Northern efforts have bridged the gap

00:10:46,209 --> 00:10:55,930
between A to C R D's are becoming more

00:10:50,020 --> 00:10:56,890
and more like native applies woody

00:10:55,930 --> 00:10:59,350
snapshot ERT

00:10:56,890 --> 00:11:00,459
is part of communities it's owned by

00:10:59,350 --> 00:11:01,570
sweet

00:11:00,459 --> 00:11:03,730
storage

00:11:01,570 --> 00:11:06,250
as end-to-end testing it has official

00:11:03,730 --> 00:11:08,740
documentation users can use it just like

00:11:06,250 --> 00:11:12,009
any other kubernetes storage features

00:11:08,740 --> 00:11:14,320
like position avoidance and more and

00:11:12,009 --> 00:11:17,620
more CSS Rovers have implemented a

00:11:14,320 --> 00:11:20,259
snapshot feature people also started to

00:11:17,620 --> 00:11:22,779
implement more advanced functionalities

00:11:20,259 --> 00:11:26,290
like data protection and disaster

00:11:22,779 --> 00:11:29,110
recovery on top of that so now you have

00:11:26,290 --> 00:11:31,269
heard our story we successfully added

00:11:29,110 --> 00:11:36,279
what in snapshots you are the elder tree

00:11:31,269 --> 00:11:39,370
as a core kubernetes feature so great

00:11:36,279 --> 00:11:42,130
finally our story has a happy ending now

00:11:39,370 --> 00:11:45,069
you probably get interest in CRD and

00:11:42,130 --> 00:11:47,889
want to tell yourself like how about to

00:11:45,069 --> 00:11:51,190
beaut the CRD for this cute panda and

00:11:47,889 --> 00:11:55,420
create a controller to monitor it is it

00:11:51,190 --> 00:11:59,589
easy to do so to tell the truth if you

00:11:55,420 --> 00:12:02,380
do it manually and from scratch you have

00:11:59,589 --> 00:12:04,899
to go through a lot of steps and have to

00:12:02,380 --> 00:12:07,120
understand code structure where well the

00:12:04,899 --> 00:12:10,269
good news is we have some excellent

00:12:07,120 --> 00:12:12,940
tools help us so here for example

00:12:10,269 --> 00:12:16,120
cubular one of the most commonly used

00:12:12,940 --> 00:12:19,959
tool to help you to create publish Yoshi

00:12:16,120 --> 00:12:23,500
rdap is and build controllers with this

00:12:19,959 --> 00:12:26,500
one two three simple steps you can

00:12:23,500 --> 00:12:29,829
create a project you can define a new

00:12:26,500 --> 00:12:36,339
CRD api and you can build and run your

00:12:29,829 --> 00:12:38,110
controller not easy so to prove we're

00:12:36,339 --> 00:12:41,199
not lying we want to show you a demo

00:12:38,110 --> 00:12:44,649
with this panda people from Shanghai

00:12:41,199 --> 00:12:47,889
already know her she was born last year

00:12:44,649 --> 00:12:51,040
and her name is little princess Chinese

00:12:47,889 --> 00:12:53,529
name chichi and seeing do you want to

00:12:51,040 --> 00:12:56,079
show everyone that how we can use panda

00:12:53,529 --> 00:13:02,100
CRT and controller in two minutes

00:12:56,079 --> 00:13:05,589
sure so first we create a new project

00:13:02,100 --> 00:13:11,050
for the kubernetes zoo using computer in

00:13:05,589 --> 00:13:12,820
it with this one line we will have a new

00:13:11,050 --> 00:13:16,030
project created

00:13:12,820 --> 00:13:19,570
step two to define new API for panda in

00:13:16,030 --> 00:13:20,640
the animals group using computer create

00:13:19,570 --> 00:13:23,380
API

00:13:20,640 --> 00:13:26,260
after this we already have a project and

00:13:23,380 --> 00:13:30,880
with files populated in a project

00:13:26,260 --> 00:13:36,040
next we add CRE definitions so in panda

00:13:30,880 --> 00:13:40,750
type start go file we will modify pandas

00:13:36,040 --> 00:13:44,980
back we added a birthday or per place

00:13:40,750 --> 00:13:47,680
and birth weight in the spec and in

00:13:44,980 --> 00:13:49,620
Panda status we added age weight blender

00:13:47,680 --> 00:13:54,690
consumption so later we can check

00:13:49,620 --> 00:13:54,690
whether she eats well and growth while

00:13:54,990 --> 00:14:05,920
next we add controller logic so we go to

00:13:59,500 --> 00:14:09,760
the Panda controller here we go to the

00:14:05,920 --> 00:14:13,560
reconcile routine now we find Panda

00:14:09,760 --> 00:14:19,060
based on kind of name and then we just

00:14:13,560 --> 00:14:21,430
update and as status so after that we're

00:14:19,060 --> 00:14:24,310
done with the controller logic now we

00:14:21,430 --> 00:14:27,940
install these into kubernetes collector

00:14:24,310 --> 00:14:34,060
it's installed so now let's take a look

00:14:27,940 --> 00:14:36,640
of the cre manifest we just installed so

00:14:34,060 --> 00:14:42,070
this is the cre definition for panda in

00:14:36,640 --> 00:14:44,680
animals group next viewed around the

00:14:42,070 --> 00:14:47,890
controller manager now we have the

00:14:44,680 --> 00:14:50,500
controller our name we can test it so we

00:14:47,890 --> 00:14:53,530
have a spec for panda chichi it shows

00:14:50,500 --> 00:14:56,770
that for birthday she weighed only 6

00:14:53,530 --> 00:14:58,930
ounces at birth she was tiny let's check

00:14:56,770 --> 00:15:03,400
how she's worried now we're going to

00:14:58,930 --> 00:15:05,470
create a panda again object for her it's

00:15:03,400 --> 00:15:08,280
creative now let's take a look over

00:15:05,470 --> 00:15:08,280
status

00:15:09,770 --> 00:15:15,210
it shows that she is 11 month old now

00:15:13,080 --> 00:15:18,210
she is about 10 tons of them for each

00:15:15,210 --> 00:15:20,610
day and her weight is 60 pounds the

00:15:18,210 --> 00:15:24,300
shares grow a lot his birth she's

00:15:20,610 --> 00:15:26,670
healthy great we did it in two minutes

00:15:24,300 --> 00:15:28,220
yes it is easy please try it yourself

00:15:26,670 --> 00:15:32,580
even interested

00:15:28,220 --> 00:15:34,650
so before finishing our talk we want to

00:15:32,580 --> 00:15:36,690
review the artist history to get a full

00:15:34,650 --> 00:15:38,190
picture of it you know at the very

00:15:36,690 --> 00:15:41,460
beginning he already has a different

00:15:38,190 --> 00:15:44,240
name third party resource the PPR you

00:15:41,460 --> 00:15:48,240
know people want to try out their ideas

00:15:44,240 --> 00:15:50,490
TPR for the first time gives you a way

00:15:48,240 --> 00:15:53,550
to do it

00:15:50,490 --> 00:15:56,970
also super nineties without adding your

00:15:53,550 --> 00:16:00,420
API into playlists core of course at

00:15:56,970 --> 00:16:03,900
that time it has limited features now

00:16:00,420 --> 00:16:06,780
over time themes has improved a lot as a

00:16:03,900 --> 00:16:08,760
lot more features and now people start

00:16:06,780 --> 00:16:10,620
to realize that I needed it I'll be

00:16:08,760 --> 00:16:14,370
using it and they start to create

00:16:10,620 --> 00:16:18,090
application operator to manage their own

00:16:14,370 --> 00:16:20,460
object today not only just for

00:16:18,090 --> 00:16:23,910
prototyping and for applicant operator

00:16:20,460 --> 00:16:28,230
but they have shown how to use the Rd to

00:16:23,910 --> 00:16:30,960
expand communities api corn with this

00:16:28,230 --> 00:16:35,010
capability we don't longer need to worry

00:16:30,960 --> 00:16:36,930
about seeing that when I joined what we

00:16:35,010 --> 00:16:40,530
are going to see is this cruel nice

00:16:36,930 --> 00:16:44,030
blessed freak with the corset in the

00:16:40,530 --> 00:16:47,670
center which is easy to manage easy to

00:16:44,030 --> 00:16:50,430
maintain and we can add other components

00:16:47,670 --> 00:16:53,390
alongside we add modern snapshot and

00:16:50,430 --> 00:16:56,790
we're going to add a secure and hook

00:16:53,390 --> 00:17:00,000
volume group application snapshots just

00:16:56,790 --> 00:17:02,070
name a few imagine we are going to if we

00:17:00,000 --> 00:17:09,660
are going to add all of these into the

00:17:02,070 --> 00:17:13,589
core it'll be one eventually blow out so

00:17:09,660 --> 00:17:16,260
remember seeing give us a question to

00:17:13,589 --> 00:17:19,140
guess the number API type we add in

00:17:16,260 --> 00:17:21,990
current release what number did you

00:17:19,140 --> 00:17:22,810
guess seeing already to give out the

00:17:21,990 --> 00:17:28,300
answer

00:17:22,810 --> 00:17:30,010
yeah sure it is a 113 so it's actually

00:17:28,300 --> 00:17:32,920
almost the same as what we had in

00:17:30,010 --> 00:17:34,660
release went out 10 that's because the

00:17:32,920 --> 00:17:37,000
architecture has already started to

00:17:34,660 --> 00:17:41,020
limit the number of api's that can be

00:17:37,000 --> 00:17:43,810
added to the core let's look further

00:17:41,020 --> 00:17:47,260
into the future we have a vision this is

00:17:43,810 --> 00:17:50,020
afrin King Haakon the quality pioneer he

00:17:47,260 --> 00:17:51,310
said that eventually everything will

00:17:50,020 --> 00:17:55,810
become or ceoddi

00:17:51,310 --> 00:17:58,300
except things to run CRD of course it's

00:17:55,810 --> 00:18:02,140
still a long way if we can really

00:17:58,300 --> 00:18:05,320
realize the solution there are version

00:18:02,140 --> 00:18:08,680
compatibility issues between CRD and the

00:18:05,320 --> 00:18:11,440
core qualities and also insulation

00:18:08,680 --> 00:18:13,270
theory is a separate step also we need

00:18:11,440 --> 00:18:16,330
to figure out how to better handle the

00:18:13,270 --> 00:18:17,130
ADIZ dependency on Kawai native core and

00:18:16,330 --> 00:18:20,400
so on

00:18:17,130 --> 00:18:24,250
but we hope that with hardwork

00:18:20,400 --> 00:18:27,640
eventually we will get there I believe

00:18:24,250 --> 00:18:30,190
so too and I hope you learn something

00:18:27,640 --> 00:18:32,950
from a journey to we cannot cover all

00:18:30,190 --> 00:18:35,470
the details in to any minute so here a

00:18:32,950 --> 00:18:39,460
list of references and you can check on

00:18:35,470 --> 00:18:41,860
later for more details of course just

00:18:39,460 --> 00:18:43,810
asked to present work but it is Bethany

00:18:41,860 --> 00:18:48,730
a teamwork we want to thank everyone

00:18:43,810 --> 00:18:50,950
work on it and last not least this is

00:18:48,730 --> 00:18:54,740
our connecting mission please join us

00:18:50,950 --> 00:18:58,190
for further discussion thank you thanks

00:18:54,740 --> 00:18:58,190

YouTube URL: https://www.youtube.com/watch?v=kfHwxjfSCSQ


