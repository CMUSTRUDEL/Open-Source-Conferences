Title: Lightning Talk: Developer's Toolbox for Testing in Production - Rui Chen, Meetup
Publication date: 2019-07-05
Playlist: Shanghai '19: KubeCon + CloudNativeCon + Open Source Summit
Description: 
	Lightning Talk: Developer's Toolbox for Testing in Production - Rui Chen, Meetup 

Join us for KubeCon + CloudNativeCon in San Diego November 18 - 21 and in Amsterdam March 30 â€“ April 2, 2020! Learn more at https://kubecon.io. The conference features presentations from developers and end users of Kubernetes, Prometheus, Envoy and all of the other CNCF-hosted projects. 

In the software development lifycle, test pyramid helps to build confidence for launching the feature.  While single code change is easy to manage,  testing a whole feature in the system are facing the increasing challenges in the microservice world.    While maintaining multiple environments would help sort out the promotion path,  but it is involved with tremendous efforts cross the teams and very costly for the business as well,  that is how "Testing in Production (TIP)" becomes popular.    In this session, I want to talk about some of the TIP practices that we do at Meetup for delivering features.  Especially think about the feature delivery from developer experience perspective. 

https://sched.co/Nrs6
Captions: 
	00:00:00,269 --> 00:00:07,410
so today I'm going to talk about the

00:00:03,659 --> 00:00:10,469
topics about testing production this is

00:00:07,410 --> 00:00:13,769
the emergent op when we actually bring

00:00:10,469 --> 00:00:16,520
the DevOps into the DevOps culture into

00:00:13,769 --> 00:00:19,020
a company and I actually had a subtitle

00:00:16,520 --> 00:00:22,580
according moving the needles what drive

00:00:19,020 --> 00:00:26,460
the technical change in inside a company

00:00:22,580 --> 00:00:29,910
we done the user no like a vendor law

00:00:26,460 --> 00:00:32,009
like other infrastructure engineer I

00:00:29,910 --> 00:00:33,600
would like to think a vacation

00:00:32,009 --> 00:00:37,800
development in a different perspective

00:00:33,600 --> 00:00:40,559
of the modern avocation stack we move

00:00:37,800 --> 00:00:43,200
firstly move my mollusk application to

00:00:40,559 --> 00:00:46,140
cloud we actually leverage different

00:00:43,200 --> 00:00:50,579
cloud vendors to build native web apps

00:00:46,140 --> 00:00:55,050
we micro-service given backends we build

00:00:50,579 --> 00:00:58,680
it SP applications on s3 were different

00:00:55,050 --> 00:01:03,359
kind of patches and was a leveraged CDN

00:00:58,680 --> 00:01:05,729
to talk to the what else up across the

00:01:03,359 --> 00:01:10,650
world so the applications target search

00:01:05,729 --> 00:01:14,189
and wisdom mindset we needs to rethink

00:01:10,650 --> 00:01:17,880
the fail faster philosophy which is core

00:01:14,189 --> 00:01:20,640
to the agile process this is very this

00:01:17,880 --> 00:01:24,720
is the news this is a new concept the

00:01:20,640 --> 00:01:28,350
way to rethink the same existing in a

00:01:24,720 --> 00:01:31,439
different world so that website really

00:01:28,350 --> 00:01:33,990
has two camps one years they've had the

00:01:31,439 --> 00:01:36,540
otherwise option with them have you

00:01:33,990 --> 00:01:39,630
actually were thinking go darker go

00:01:36,540 --> 00:01:42,360
kubernetes coast of smash but with warps

00:01:39,630 --> 00:01:44,729
head you always think about the CVG

00:01:42,360 --> 00:01:46,320
problems or you think about the

00:01:44,729 --> 00:01:49,670
capacitive planning where you think

00:01:46,320 --> 00:01:52,409
about the unco issues every single day

00:01:49,670 --> 00:01:55,950
and we also like we talked about their

00:01:52,409 --> 00:01:58,350
city which I did mention last year the

00:01:55,950 --> 00:02:02,250
clcd is just like putting what is

00:01:58,350 --> 00:02:04,619
testing efforts to shipping products in

00:02:02,250 --> 00:02:07,799
a faster ways right so you have unit as

00:02:04,619 --> 00:02:09,959
in the in the in the in around and you

00:02:07,799 --> 00:02:13,170
have component test integration has a

00:02:09,959 --> 00:02:15,840
theaters in the middle I have good house

00:02:13,170 --> 00:02:18,750
of sometimes you also have many testing

00:02:15,840 --> 00:02:21,420
to find out the box when we talk about

00:02:18,750 --> 00:02:23,970
testing production this is critical

00:02:21,420 --> 00:02:27,209
because every single piece is going to

00:02:23,970 --> 00:02:29,700
sitting in one environment but we also

00:02:27,209 --> 00:02:33,060
have developed tools to facilitate of

00:02:29,700 --> 00:02:35,580
the testing process as well because we

00:02:33,060 --> 00:02:39,000
have logging we have monitoring we have

00:02:35,580 --> 00:02:42,150
alerting with loes tools this kind of

00:02:39,000 --> 00:02:47,100
what a girl can be shipping into one

00:02:42,150 --> 00:02:49,620
parameter so testing production is about

00:02:47,100 --> 00:02:53,700
just one environment about every

00:02:49,620 --> 00:02:55,650
services where every every every

00:02:53,700 --> 00:02:59,580
everything because you don't need to

00:02:55,650 --> 00:03:01,470
have self added tools to talking to your

00:02:59,580 --> 00:03:03,870
different environments you don't need to

00:03:01,470 --> 00:03:06,420
have one dashboard to include so many

00:03:03,870 --> 00:03:08,250
different pieces when you have problems

00:03:06,420 --> 00:03:10,230
when you have uncoil issues you don't

00:03:08,250 --> 00:03:14,040
know what is the best of metrics to

00:03:10,230 --> 00:03:16,319
communicate out and also with this one

00:03:14,040 --> 00:03:19,500
environment you can involve your tests

00:03:16,319 --> 00:03:22,350
to better suit for your kids for your

00:03:19,500 --> 00:03:24,420
application development think about the

00:03:22,350 --> 00:03:27,900
test is what so-called code needs

00:03:24,420 --> 00:03:30,090
maintenance that actually brings the

00:03:27,900 --> 00:03:33,720
feature flags what is the feature

00:03:30,090 --> 00:03:36,840
feature flexi spot you actually have the

00:03:33,720 --> 00:03:38,340
things that you want to roll and the

00:03:36,840 --> 00:03:40,709
same that you won't don't want the

00:03:38,340 --> 00:03:43,320
diffusers to see it's about versioning

00:03:40,709 --> 00:03:48,090
is about routing or logic to write back

00:03:43,320 --> 00:03:50,970
end to the right source of truth so

00:03:48,090 --> 00:03:54,150
features like one one years just to have

00:03:50,970 --> 00:03:57,660
the raw to defend account for example in

00:03:54,150 --> 00:04:00,660
our case we have feature text

00:03:57,660 --> 00:04:03,390
calculations to some some of the

00:04:00,660 --> 00:04:06,810
countries we need to you leverage IP

00:04:03,390 --> 00:04:08,910
address to find out the country as to

00:04:06,810 --> 00:04:11,609
determine official is silve all the user

00:04:08,910 --> 00:04:13,380
or not sometimes you have gdpr issue

00:04:11,609 --> 00:04:15,930
that you don't want to go all the

00:04:13,380 --> 00:04:19,079
features kill a European audience and

00:04:15,930 --> 00:04:23,820
T's and you until you figure out the PR

00:04:19,079 --> 00:04:25,800
problems the the other most uses your

00:04:23,820 --> 00:04:26,480
feature flexi is about cleaning features

00:04:25,800 --> 00:04:28,250
you

00:04:26,480 --> 00:04:30,620
of legacy code you have moralistic

00:04:28,250 --> 00:04:32,900
applications called sitting in the

00:04:30,620 --> 00:04:35,270
backend for like 10 years he wants to

00:04:32,900 --> 00:04:37,370
kill them but nobody in the team under

00:04:35,270 --> 00:04:39,500
standard code so you want to put a

00:04:37,370 --> 00:04:42,320
feature flag wrapped up to make sure

00:04:39,500 --> 00:04:43,880
that code can be saved to kill and there

00:04:42,320 --> 00:04:46,580
are other way to think about the visual

00:04:43,880 --> 00:04:48,740
flair keys you can wrap the features

00:04:46,580 --> 00:04:50,900
depending on your use case sometimes the

00:04:48,740 --> 00:04:53,420
features around members sometimes in the

00:04:50,900 --> 00:04:56,360
feature is around a high level and

00:04:53,420 --> 00:04:59,840
member you can also use feature flags to

00:04:56,360 --> 00:05:03,380
do that the canary release is about

00:04:59,840 --> 00:05:06,410
traffic migration so that we can

00:05:03,380 --> 00:05:08,180
actually have pipeline to shift to the

00:05:06,410 --> 00:05:10,490
traffic group from production to the

00:05:08,180 --> 00:05:12,860
shadow traffic feature flag is about

00:05:10,490 --> 00:05:16,160
tangling wolf canary is about the

00:05:12,860 --> 00:05:19,430
pipeline work to have the pests which

00:05:16,160 --> 00:05:24,110
are tested against the different themes

00:05:19,430 --> 00:05:26,300
a pipeline the final piece I wants to

00:05:24,110 --> 00:05:28,820
talk about is the logs metrics and

00:05:26,300 --> 00:05:31,400
choices you're probably going to hear a

00:05:28,820 --> 00:05:33,500
lot in other edge situations but

00:05:31,400 --> 00:05:36,080
accountability is logs about aggregation

00:05:33,500 --> 00:05:38,450
time series view the metrics is about

00:05:36,080 --> 00:05:40,940
performance is about testing the certain

00:05:38,450 --> 00:05:43,910
keys of action code assistance is the

00:05:40,940 --> 00:05:46,010
easy easy way is keen point down the

00:05:43,910 --> 00:05:48,950
different the transaction of macro

00:05:46,010 --> 00:05:51,500
service in large picture we wasn't

00:05:48,950 --> 00:05:54,200
leverage to open to will have also as

00:05:51,500 --> 00:05:56,600
leverage pieces between front and the

00:05:54,200 --> 00:06:03,020
back end so that we can identify the

00:05:56,600 --> 00:06:04,910
issues for the users so when we actually

00:06:03,020 --> 00:06:07,760
test in production you need to

00:06:04,910 --> 00:06:10,250
consolidate understanding you need to

00:06:07,760 --> 00:06:12,760
evolving the dashboard for the better

00:06:10,250 --> 00:06:16,160
use case to find out opponent lack and

00:06:12,760 --> 00:06:21,530
the we stab with that we can actually

00:06:16,160 --> 00:06:24,530
involving the the the practice in the in

00:06:21,530 --> 00:06:27,640
the long run that's what I want to share

00:06:24,530 --> 00:06:27,640
today thank you

00:06:27,880 --> 00:06:29,940

YouTube URL: https://www.youtube.com/watch?v=Ph0ZGx0D9xs


