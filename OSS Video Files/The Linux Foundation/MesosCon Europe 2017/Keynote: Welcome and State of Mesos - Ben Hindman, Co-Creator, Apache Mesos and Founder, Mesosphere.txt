Title: Keynote: Welcome and State of Mesos - Ben Hindman, Co-Creator, Apache Mesos and Founder, Mesosphere
Publication date: 2017-10-27
Playlist: MesosCon Europe 2017
Description: 
	Keynote: Welcome and State of Mesos - Ben Hindman, Co-Creator, Apache Mesos and Founder, Mesosphere

About Ben Hindman
Benjamin Hindman is a Founder and Chief Architect at Mesosphere where he leads a team building out core services for the Mesosphere Data Center Operating System (DCOS). Ben co-created Apache Mesos as a PhD student at UC Berkeley before bringing it to Twitter where it now runs on tens of thousands of machines powering Twitter's datacenters. An academic at heart, his research in programming languages and distributed systems has been published in leading academic conferences.
Captions: 
	00:00:00,000 --> 00:00:04,140
good morning how's everyone doing good

00:00:03,030 --> 00:00:08,880
good

00:00:04,140 --> 00:00:10,950
awesome alright so um we had four years

00:00:08,880 --> 00:00:13,620
of Mesa scones so far four years in

00:00:10,950 --> 00:00:15,000
North America we were in Chicago anybody

00:00:13,620 --> 00:00:17,490
anybody here happened to be in any of

00:00:15,000 --> 00:00:20,119
the North American conferences all right

00:00:17,490 --> 00:00:21,990
there's a couple yeah anybody in Chicago

00:00:20,119 --> 00:00:24,420
through earth debris youth you original

00:00:21,990 --> 00:00:27,420
one rich that's amazing that's awesome

00:00:24,420 --> 00:00:29,250
and an ode awesome okay we had one with

00:00:27,420 --> 00:00:31,769
the year after that we'd in Seattle the

00:00:29,250 --> 00:00:33,719
year after that in Denver and just this

00:00:31,769 --> 00:00:35,579
year we had one in Los Angeles so in

00:00:33,719 --> 00:00:38,399
four years in North America we've had

00:00:35,579 --> 00:00:41,579
three years in Europe first year 2015

00:00:38,399 --> 00:00:44,250
Dublin anybody in Dublin all right got

00:00:41,579 --> 00:00:46,020
some folks there last year Amsterdam and

00:00:44,250 --> 00:00:48,030
this year Prague so it's it's been a

00:00:46,020 --> 00:00:50,730
really really fun run we really enjoyed

00:00:48,030 --> 00:00:52,410
it I also wanted to mention that that

00:00:50,730 --> 00:00:55,110
this year we had our second maysa con

00:00:52,410 --> 00:00:58,410
Asia our first mrs. con Asia we did

00:00:55,110 --> 00:01:00,359
about a year ago around now and then we

00:00:58,410 --> 00:01:02,910
did kind of a fast follower Li er this

00:01:00,359 --> 00:01:05,790
year in Beijing and it was really fun to

00:01:02,910 --> 00:01:07,770
see the conference go from about two

00:01:05,790 --> 00:01:11,130
users presenting the work that they were

00:01:07,770 --> 00:01:12,960
doing we using Apache main shows to over

00:01:11,130 --> 00:01:15,509
14 different companies that presented

00:01:12,960 --> 00:01:17,790
the work that they're doing all right so

00:01:15,509 --> 00:01:20,759
it's really really really fun to see the

00:01:17,790 --> 00:01:22,380
growth and adoption there okay so we

00:01:20,759 --> 00:01:23,670
have a few additions to the conference

00:01:22,380 --> 00:01:25,049
this year we decided to change a little

00:01:23,670 --> 00:01:27,330
bit based on feedback that we've gotten

00:01:25,049 --> 00:01:30,450
from folks the first is we introduced

00:01:27,330 --> 00:01:33,030
tracks to the conference so basically

00:01:30,450 --> 00:01:35,820
this is you can go into to specific

00:01:33,030 --> 00:01:37,079
topics that you're interested in the

00:01:35,820 --> 00:01:39,060
ones that we have this year are

00:01:37,079 --> 00:01:41,579
basically smack in machine learning

00:01:39,060 --> 00:01:43,799
so this smack stack which I'll talk

00:01:41,579 --> 00:01:45,990
about a little bit later a DevOps plus

00:01:43,799 --> 00:01:48,329
ops track which is just going to be

00:01:45,990 --> 00:01:50,250
today a maysa internals track which is

00:01:48,329 --> 00:01:51,960
just going to be today and then a Mase

00:01:50,250 --> 00:01:54,060
those frameworks track which is tomorrow

00:01:51,960 --> 00:01:56,009
in a user's plus ops track which is also

00:01:54,060 --> 00:01:57,689
tomorrow so if you're interested you can

00:01:56,009 --> 00:01:59,399
kind of just sit in the single room if

00:01:57,689 --> 00:02:01,170
that suggests the topics you're

00:01:59,399 --> 00:02:03,540
interested in otherwise you can you can

00:02:01,170 --> 00:02:06,060
bounce around a couple of other

00:02:03,540 --> 00:02:08,459
additions we introduced something that

00:02:06,060 --> 00:02:10,560
we're calling maces Khan University so

00:02:08,459 --> 00:02:12,510
this is basically longer sessions where

00:02:10,560 --> 00:02:13,360
you bring your laptop go and actually

00:02:12,510 --> 00:02:15,310
work on

00:02:13,360 --> 00:02:17,920
things hack on things go even deeper in

00:02:15,310 --> 00:02:20,050
the talks again we heard from a bunch of

00:02:17,920 --> 00:02:22,060
folks that for the this kind of feedback

00:02:20,050 --> 00:02:23,980
this is the second time we did it we did

00:02:22,060 --> 00:02:26,140
it in Los Angeles as well and it was

00:02:23,980 --> 00:02:27,370
hugely valuable people really really

00:02:26,140 --> 00:02:29,560
enjoyed it so if you're interested in

00:02:27,370 --> 00:02:33,250
that check it out we've got three across

00:02:29,560 --> 00:02:36,060
the two days today at 10:45 building

00:02:33,250 --> 00:02:38,470
production applications for maximum

00:02:36,060 --> 00:02:41,890
debug ability tomorrow

00:02:38,470 --> 00:02:43,720
smack stack 101 and also an intro to GPU

00:02:41,890 --> 00:02:45,100
isolation and tensorflow so if you're

00:02:43,720 --> 00:02:46,630
interested in that stuff go check it out

00:02:45,100 --> 00:02:49,090
there'll be longer sessions bring your

00:02:46,630 --> 00:02:51,520
laptop's alright and then the last

00:02:49,090 --> 00:02:53,560
edition that we also added it's this

00:02:51,520 --> 00:02:55,030
concept to town halls so we felt like

00:02:53,560 --> 00:02:56,440
oftentimes we were having the

00:02:55,030 --> 00:02:59,170
conferences but we weren't spending

00:02:56,440 --> 00:03:00,640
enough time just talking together and so

00:02:59,170 --> 00:03:02,920
we wanted to change that so we added

00:03:00,640 --> 00:03:06,550
what we call our town halls there 7:00

00:03:02,920 --> 00:03:08,890
p.m. tonight after the booth crawl so go

00:03:06,550 --> 00:03:10,450
have some some beers to check out the

00:03:08,890 --> 00:03:13,239
sponsors and then come we're gonna have

00:03:10,450 --> 00:03:15,640
four we're gonna have an Apache Mayo

00:03:13,239 --> 00:03:16,989
Swan so internals of Apache meso so

00:03:15,640 --> 00:03:19,120
that's going to be in Congress Hall one

00:03:16,989 --> 00:03:20,830
we're gonna have one on D cos that's

00:03:19,120 --> 00:03:22,420
gonna be in Congress hall three one a

00:03:20,830 --> 00:03:24,250
marathon and Chronos that's gonna be in

00:03:22,420 --> 00:03:25,750
Kronk as well too and one of kubernetes

00:03:24,250 --> 00:03:27,100
which is going to be in roma Vienna

00:03:25,750 --> 00:03:30,070
which I think's just around the corner

00:03:27,100 --> 00:03:32,620
here so please come check those out all

00:03:30,070 --> 00:03:34,480
right you know big thanks to all of our

00:03:32,620 --> 00:03:36,459
sponsors but also huge thanks to all our

00:03:34,480 --> 00:03:38,709
speakers we have an amazing group of

00:03:36,459 --> 00:03:40,750
individuals across numerous different

00:03:38,709 --> 00:03:42,820
organizations so it's really really fun

00:03:40,750 --> 00:03:45,700
to see such a diverse and eclectic group

00:03:42,820 --> 00:03:47,500
I'm really excited I almost didn't

00:03:45,700 --> 00:03:49,510
believe that I could fit everything on

00:03:47,500 --> 00:03:52,450
the slide here so we really really grout

00:03:49,510 --> 00:03:54,850
glad to have you all here ok getting

00:03:52,450 --> 00:03:57,549
into some of the good stuff the state of

00:03:54,850 --> 00:03:59,890
the project so since the last maysa con

00:03:57,549 --> 00:04:03,209
Europe we've had four minor releases and

00:03:59,890 --> 00:04:07,170
nine patch releases we just done a 1.0

00:04:03,209 --> 00:04:09,549
going into maysa con Europe last year

00:04:07,170 --> 00:04:12,459
you know and since then we've also added

00:04:09,549 --> 00:04:14,650
13 new committers and PMC members for

00:04:12,459 --> 00:04:16,239
our Apache project every one that we

00:04:14,650 --> 00:04:19,660
bring in as a committer we also make a

00:04:16,239 --> 00:04:21,580
PMC member so it's great to see great to

00:04:19,660 --> 00:04:23,979
see all all of those new committers in

00:04:21,580 --> 00:04:25,390
PMC MADD members and it's also great to

00:04:23,979 --> 00:04:26,189
see all all the releases that we're

00:04:25,390 --> 00:04:28,509
doing

00:04:26,189 --> 00:04:30,280
when the other things that when I was

00:04:28,509 --> 00:04:32,259
asking some folks in the community what

00:04:30,280 --> 00:04:33,669
they'd like to for me to share about the

00:04:32,259 --> 00:04:34,930
community one of the things they said

00:04:33,669 --> 00:04:37,449
was they've been really really excited

00:04:34,930 --> 00:04:38,740
to see the growth in slack activity more

00:04:37,449 --> 00:04:40,930
and more people they're asking more

00:04:38,740 --> 00:04:44,620
questions getting more answers so I

00:04:40,930 --> 00:04:46,509
wanted to share that as well okay when I

00:04:44,620 --> 00:04:48,249
also asked folks hey what should I share

00:04:46,509 --> 00:04:50,590
what's what's new and noteworthy they

00:04:48,249 --> 00:04:52,599
gave me a huge list obviously I can't

00:04:50,590 --> 00:04:54,370
cover everything from that list in a few

00:04:52,599 --> 00:04:55,749
minutes but I did want to call out a

00:04:54,370 --> 00:04:57,430
couple of the things that I was

00:04:55,749 --> 00:04:58,689
personally pretty excited about and I

00:04:57,430 --> 00:05:00,699
think others in the community were as

00:04:58,689 --> 00:05:01,719
well the first one I really want to call

00:05:00,699 --> 00:05:04,479
out is all the work we've been doing

00:05:01,719 --> 00:05:07,509
around containerization right so many of

00:05:04,479 --> 00:05:08,529
you know that in in the Apache mesas

00:05:07,509 --> 00:05:10,479
project we started doing

00:05:08,529 --> 00:05:13,029
containerization a long time ago back in

00:05:10,479 --> 00:05:16,509
about 2010 in fact the very first

00:05:13,029 --> 00:05:18,969
version of Apache mesas use Solaris

00:05:16,509 --> 00:05:20,699
zones and projects if you wanted to run

00:05:18,969 --> 00:05:23,020
on Solaris to actually get

00:05:20,699 --> 00:05:24,009
containerization over the years we've

00:05:23,020 --> 00:05:26,620
gone through many different iterations

00:05:24,009 --> 00:05:28,629
of how we wanted to do containers we've

00:05:26,620 --> 00:05:31,419
done C groups and namespaces ourselves

00:05:28,629 --> 00:05:34,509
we had a docker support in 2014 and in

00:05:31,419 --> 00:05:36,129
2016 and 2017 one of the things we

00:05:34,509 --> 00:05:37,990
really focused on was making that

00:05:36,129 --> 00:05:40,750
initial containerization work that we've

00:05:37,990 --> 00:05:43,810
done even more robust and to be able to

00:05:40,750 --> 00:05:46,210
support even more kinds of containers

00:05:43,810 --> 00:05:47,860
you wanted to run so we introduced

00:05:46,210 --> 00:05:49,750
something that historically we'd always

00:05:47,860 --> 00:05:51,550
always call the maysa container Iser

00:05:49,750 --> 00:05:53,740
we call it the universal container

00:05:51,550 --> 00:05:55,719
runtime and it lets you run containers

00:05:53,740 --> 00:05:58,180
with a docker image with an app see

00:05:55,719 --> 00:06:00,339
image with an OC eye image almost I

00:05:58,180 --> 00:06:01,839
think that might be committed now or

00:06:00,339 --> 00:06:02,589
without any image just with a zip file

00:06:01,839 --> 00:06:06,159
or a tarball

00:06:02,589 --> 00:06:07,839
or jar file so it's the core components

00:06:06,159 --> 00:06:10,060
of containerization that we've had in

00:06:07,839 --> 00:06:11,589
May so for a very very long time then

00:06:10,060 --> 00:06:15,039
now you can use to also run your docker

00:06:11,589 --> 00:06:16,870
images or any other images that you want

00:06:15,039 --> 00:06:19,779
to run so one of the really cool things

00:06:16,870 --> 00:06:21,129
about about the containerization it was

00:06:19,779 --> 00:06:22,750
really easy for us to add some more

00:06:21,129 --> 00:06:24,520
sophisticated support for doing other

00:06:22,750 --> 00:06:25,839
things so one of the things that we

00:06:24,520 --> 00:06:27,219
added is this concept of nested

00:06:25,839 --> 00:06:28,449
containerization which is again a

00:06:27,219 --> 00:06:29,710
feature that we've talked with a bunch

00:06:28,449 --> 00:06:31,839
of people about that they said they were

00:06:29,710 --> 00:06:33,969
really interested in so the ideas is

00:06:31,839 --> 00:06:35,740
when you run containers you could then

00:06:33,969 --> 00:06:37,629
run containers within containers and

00:06:35,740 --> 00:06:39,480
containers within containers and I think

00:06:37,629 --> 00:06:40,800
there is probably a kernel limits

00:06:39,480 --> 00:06:42,210
there's only one place left and in

00:06:40,800 --> 00:06:43,650
software you can where you can write

00:06:42,210 --> 00:06:45,000
limits and I feel like that's the Linux

00:06:43,650 --> 00:06:48,360
kernel where you can write you know

00:06:45,000 --> 00:06:49,440
constants like 32 or 64 and so I'm

00:06:48,360 --> 00:06:51,870
pretty sure there is a limit on the

00:06:49,440 --> 00:06:53,280
number of containers you can have but

00:06:51,870 --> 00:06:54,840
you can do really amazing things where

00:06:53,280 --> 00:06:56,820
you can you know launch your very top

00:06:54,840 --> 00:06:58,650
first top-level container as a zip file

00:06:56,820 --> 00:07:00,420
have that itself launch a nested

00:06:58,650 --> 00:07:02,820
container as a docker as a dot from a

00:07:00,420 --> 00:07:04,530
docker image have that itself launched

00:07:02,820 --> 00:07:07,020
lunch on another container which is an

00:07:04,530 --> 00:07:08,640
OC I image and there's lots of really

00:07:07,020 --> 00:07:10,020
great practical applications for this

00:07:08,640 --> 00:07:12,180
one of the big ones that we're excited

00:07:10,020 --> 00:07:14,340
about is things like Jenkins when you go

00:07:12,180 --> 00:07:16,020
to deploy Jenkins Jenkins itself wants

00:07:14,340 --> 00:07:17,880
to run a build which is a docker image

00:07:16,020 --> 00:07:20,490
and maybe that docker image itself needs

00:07:17,880 --> 00:07:21,510
to create yet another docker image you

00:07:20,490 --> 00:07:23,400
know in the past what would end up

00:07:21,510 --> 00:07:25,230
happening is these it these these these

00:07:23,400 --> 00:07:26,880
docker containers would also potentially

00:07:25,230 --> 00:07:28,860
be top-level containers and could become

00:07:26,880 --> 00:07:30,900
orphans now we can contain them all

00:07:28,860 --> 00:07:33,180
really really nicely this is also how we

00:07:30,900 --> 00:07:34,740
run kubernetes on top of meso s-- so

00:07:33,180 --> 00:07:37,160
you'll hear a little bit about that

00:07:34,740 --> 00:07:39,360
later so I won't go into too much detail

00:07:37,160 --> 00:07:40,680
okay and the last really cool thing

00:07:39,360 --> 00:07:42,240
about this is the top-level container

00:07:40,680 --> 00:07:44,040
doesn't actually need to be privileged

00:07:42,240 --> 00:07:46,440
which is really cool you know you don't

00:07:44,040 --> 00:07:48,510
have to worry about any sort of security

00:07:46,440 --> 00:07:49,980
issues there we also added the the

00:07:48,510 --> 00:07:51,810
concepts of container attach and

00:07:49,980 --> 00:07:53,760
container exec so it was really really

00:07:51,810 --> 00:07:55,770
easy for you to get information out of

00:07:53,760 --> 00:07:56,790
the containers to hear more about all

00:07:55,770 --> 00:07:58,220
the stuff that we're actually doing in

00:07:56,790 --> 00:08:00,360
containers you can check out a talk

00:07:58,220 --> 00:08:04,440
containerization and maysa embracing the

00:08:00,360 --> 00:08:05,700
standards it's later today one last

00:08:04,440 --> 00:08:07,410
thing I want to mention is we're also

00:08:05,700 --> 00:08:08,490
adding support for standalone containers

00:08:07,410 --> 00:08:09,930
which is going to make it even easier

00:08:08,490 --> 00:08:11,400
for running something like Mesa sauce on

00:08:09,930 --> 00:08:15,600
top of Windows so I'm really excited to

00:08:11,400 --> 00:08:17,460
see that work in progress right now ok a

00:08:15,600 --> 00:08:19,350
big part of containerization is

00:08:17,460 --> 00:08:20,760
networking and storage and one of the

00:08:19,350 --> 00:08:22,560
things that we've been really really

00:08:20,760 --> 00:08:24,510
excited to see the community embrace is

00:08:22,560 --> 00:08:25,920
a lot of these more emerging standard

00:08:24,510 --> 00:08:28,080
like things for doing stuff like

00:08:25,920 --> 00:08:30,240
networking and storage the two big ones

00:08:28,080 --> 00:08:31,950
for us is C&I that could container

00:08:30,240 --> 00:08:34,200
networking interface and CSI the

00:08:31,950 --> 00:08:35,729
container storage interface and I'm

00:08:34,200 --> 00:08:38,700
especially really excited that we've had

00:08:35,729 --> 00:08:40,919
folks from our community gee you and

00:08:38,700 --> 00:08:42,720
James Dave release that have really been

00:08:40,919 --> 00:08:44,700
helping to drive the container storage

00:08:42,720 --> 00:08:46,350
interface forward along with various

00:08:44,700 --> 00:08:48,240
other open source communities including

00:08:46,350 --> 00:08:50,160
docker cloud foundry kubernetes and

00:08:48,240 --> 00:08:51,810
others so that's been really exciting to

00:08:50,160 --> 00:08:52,930
see there's two talks where you can

00:08:51,810 --> 00:08:55,839
check out the work that's

00:08:52,930 --> 00:08:58,120
on networking and storage both are today

00:08:55,839 --> 00:09:01,149
I believe they're in the mesas internals

00:08:58,120 --> 00:09:03,310
track ok one of the really cool things

00:09:01,149 --> 00:09:05,050
we're getting out of the storage work is

00:09:03,310 --> 00:09:07,510
this concept this future concept of

00:09:05,050 --> 00:09:10,060
being able to extend the resource

00:09:07,510 --> 00:09:12,160
management capabilities and in inside of

00:09:10,060 --> 00:09:14,080
mesas so we're adding this concept of

00:09:12,160 --> 00:09:15,490
local and external resource providers

00:09:14,080 --> 00:09:17,350
we're going to use them initially for

00:09:15,490 --> 00:09:18,580
all the storage work but I think the

00:09:17,350 --> 00:09:19,660
sky's the limit in terms of the

00:09:18,580 --> 00:09:22,360
different things we might be able to

00:09:19,660 --> 00:09:24,760
apply here how we can use this we can

00:09:22,360 --> 00:09:27,010
make things like an external resource

00:09:24,760 --> 00:09:30,160
provider be a cloud for example where

00:09:27,010 --> 00:09:34,450
resources can be dynamically added in

00:09:30,160 --> 00:09:35,980
and and removed all right I mean oh we

00:09:34,450 --> 00:09:37,600
did a survey last year Apache Mesa

00:09:35,980 --> 00:09:39,520
Survey where we gathered a bunch of

00:09:37,600 --> 00:09:41,350
information about how maysa is being

00:09:39,520 --> 00:09:43,300
used and one of the things we heard is

00:09:41,350 --> 00:09:45,550
it's being run both on Prem as well as

00:09:43,300 --> 00:09:47,080
in the cloud so there's a lot more work

00:09:45,550 --> 00:09:50,020
that we're doing around the project when

00:09:47,080 --> 00:09:52,120
it comes to fault domains hybrid

00:09:50,020 --> 00:09:55,149
supports multi cloud and there's one

00:09:52,120 --> 00:09:56,560
talk you can check out later today fault

00:09:55,149 --> 00:09:57,640
domains in Mesa swear we talked a little

00:09:56,560 --> 00:09:59,320
bit about that and you get a glimpse

00:09:57,640 --> 00:10:01,930
into what the future looks like when it

00:09:59,320 --> 00:10:05,140
comes to hybrid and multi cloud from

00:10:01,930 --> 00:10:09,070
ASOS you know one of the other big areas

00:10:05,140 --> 00:10:11,230
that we talked about in the this survey

00:10:09,070 --> 00:10:12,190
was how people are actually what what

00:10:11,230 --> 00:10:13,180
things people are actually running on

00:10:12,190 --> 00:10:15,010
top of Mesa

00:10:13,180 --> 00:10:17,080
of course many of you know the Mesa post

00:10:15,010 --> 00:10:18,970
architecture is based on this concept of

00:10:17,080 --> 00:10:21,910
two-level scheduling and multiple

00:10:18,970 --> 00:10:24,190
frameworks and and many people run many

00:10:21,910 --> 00:10:26,860
many different frameworks on top which

00:10:24,190 --> 00:10:30,430
is really driven for us this whole

00:10:26,860 --> 00:10:32,020
notion of the future world of the the

00:10:30,430 --> 00:10:34,900
smack stack so many of you I'm sure have

00:10:32,020 --> 00:10:38,170
heard of smack SPARC mace Osaka

00:10:34,900 --> 00:10:39,310
Cassandra and akka there's various

00:10:38,170 --> 00:10:41,140
different frameworks that people are

00:10:39,310 --> 00:10:42,339
actually running on top but these are

00:10:41,140 --> 00:10:44,410
really the frameworks that we're seeing

00:10:42,339 --> 00:10:45,970
the most and for a lot of organizations

00:10:44,410 --> 00:10:47,470
that are adopting this they're seeing

00:10:45,970 --> 00:10:48,820
the same kind of wins out of the

00:10:47,470 --> 00:10:50,890
doctrines of something like the smack

00:10:48,820 --> 00:10:53,709
stack as they got when they adopted

00:10:50,890 --> 00:10:56,440
something like lamp so there's a bunch

00:10:53,709 --> 00:10:57,790
of different talks today from

00:10:56,440 --> 00:10:59,740
organizations that are talking about

00:10:57,790 --> 00:11:02,050
running things like Kafka and SPARC and

00:10:59,740 --> 00:11:03,190
Cassandra on top of may sews the one

00:11:02,050 --> 00:11:04,270
thing I wanted to mention that we're

00:11:03,190 --> 00:11:06,610
really excited about is when you're

00:11:04,270 --> 00:11:07,749
running these very disparate frameworks

00:11:06,610 --> 00:11:09,220
there's a lot more multi-tenancy

00:11:07,749 --> 00:11:10,779
concerns that really come up and there's

00:11:09,220 --> 00:11:13,689
a bunch of work that we're doing in Mesa

00:11:10,779 --> 00:11:15,160
sauce itself to address that you know

00:11:13,689 --> 00:11:17,259
the liqueur for us is things like

00:11:15,160 --> 00:11:19,540
hierarchical fair shares hierarchical

00:11:17,259 --> 00:11:21,759
quotas and hierarchical reservations

00:11:19,540 --> 00:11:23,410
where you can get much finer control

00:11:21,759 --> 00:11:24,879
around how many resources you want these

00:11:23,410 --> 00:11:26,889
various frameworks or these various

00:11:24,879 --> 00:11:29,470
users to actually be consuming within

00:11:26,889 --> 00:11:31,839
your cluster so it's really cool to see

00:11:29,470 --> 00:11:33,339
all this work happening as well the

00:11:31,839 --> 00:11:34,809
hierarchical fair share work and that

00:11:33,339 --> 00:11:36,699
and the hierarchical reservations and

00:11:34,809 --> 00:11:38,739
reservation refinement is all things you

00:11:36,699 --> 00:11:41,799
can use in your mesas clusters today and

00:11:38,739 --> 00:11:43,350
the hierarchic woto work is continues to

00:11:41,799 --> 00:11:45,879
be work in progress

00:11:43,350 --> 00:11:47,559
alright so you know a bunch of great

00:11:45,879 --> 00:11:48,939
presentations I think you can check out

00:11:47,559 --> 00:11:50,350
over the course of the next two day a

00:11:48,939 --> 00:11:53,559
bunch of really really interesting work

00:11:50,350 --> 00:11:55,600
go check out the town halls please try

00:11:53,559 --> 00:11:57,369
out the mesas Khan University I thought

00:11:55,600 --> 00:11:58,509
I'd end with just a couple of fun

00:11:57,369 --> 00:11:59,170
predictions these are personal

00:11:58,509 --> 00:12:00,759
predictions

00:11:59,170 --> 00:12:04,179
you know things I would love to see in

00:12:00,759 --> 00:12:05,589
the projects you know along with all the

00:12:04,179 --> 00:12:07,239
other multi-tenancy work that we're

00:12:05,589 --> 00:12:09,100
doing it'd be great to see the concept

00:12:07,239 --> 00:12:12,129
of revocable resources allocated by

00:12:09,100 --> 00:12:13,540
defaults looking forward to potentially

00:12:12,129 --> 00:12:15,639
we know would remove the zookeeper

00:12:13,540 --> 00:12:17,799
dependency so it's even easier to deploy

00:12:15,639 --> 00:12:19,449
in a sauce cluster and who knows maybe

00:12:17,799 --> 00:12:20,919
in the future we won't just be launching

00:12:19,449 --> 00:12:23,199
containers but we'll also make it even

00:12:20,919 --> 00:12:24,970
easier to launch VMs so that's all I had

00:12:23,199 --> 00:12:27,220
as a welcome I hope everyone has a great

00:12:24,970 --> 00:12:28,650
maysa con and we'll see you again next

00:12:27,220 --> 00:12:32,520
year

00:12:28,650 --> 00:12:32,520

YouTube URL: https://www.youtube.com/watch?v=xxhwajQPWD4


