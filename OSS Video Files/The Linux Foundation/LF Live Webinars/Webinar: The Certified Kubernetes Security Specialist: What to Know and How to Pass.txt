Title: Webinar: The Certified Kubernetes Security Specialist: What to Know and How to Pass
Publication date: 2021-01-22
Playlist: LF Live Webinars
Description: 
	Sponsored by StackRox

The CNCF announced a new Kubernetes certification at KubeCon North America 2020 focused on Kubernetes-native security controls. In this session, we will outline the security controls you need to know and discuss how to study and pass the exam. Michael will also introduce you to open-source resources to help you get started.
Captions: 
	00:00:00,320 --> 00:00:04,319
awesome thanks for the intro and uh

00:00:02,560 --> 00:00:05,680
thanks everybody for joining me to talk

00:00:04,319 --> 00:00:08,160
about the cks

00:00:05,680 --> 00:00:09,440
i already see some questions in the the

00:00:08,160 --> 00:00:10,800
q a so

00:00:09,440 --> 00:00:12,559
i'll get to those as i go through the

00:00:10,800 --> 00:00:13,920
webinar but yeah as

00:00:12,559 --> 00:00:15,360
things come up as i talk about stuff

00:00:13,920 --> 00:00:17,680
feel free to throw questions in there

00:00:15,360 --> 00:00:22,160
i'll answer as much as i can as i go

00:00:17,680 --> 00:00:23,359
so again cks what you need to know

00:00:22,160 --> 00:00:24,640
can't give away too much not going to

00:00:23,359 --> 00:00:25,680
tell you exactly what you need to know

00:00:24,640 --> 00:00:27,439
but we're going to cover

00:00:25,680 --> 00:00:29,199
the broad range of topics i'll give you

00:00:27,439 --> 00:00:31,039
my tips as to how i passed it

00:00:29,199 --> 00:00:32,239
what i thought about it and where i

00:00:31,039 --> 00:00:34,719
think it's moving

00:00:32,239 --> 00:00:36,079
uh forward in the future so again what

00:00:34,719 --> 00:00:38,480
we're going to cover

00:00:36,079 --> 00:00:40,079
uh we're going to just intro cks what it

00:00:38,480 --> 00:00:42,399
is for people who are joining who

00:00:40,079 --> 00:00:44,559
don't have a certification uh we're

00:00:42,399 --> 00:00:45,760
going to talk about the exam structure

00:00:44,559 --> 00:00:48,960
we're going to talk about the format of

00:00:45,760 --> 00:00:52,800
the exam too because it is a it is a

00:00:48,960 --> 00:00:55,760
a cli and uh and more hands-on exam so

00:00:52,800 --> 00:00:56,640
it does kind of jar some people at first

00:00:55,760 --> 00:00:57,520
then we're going to go into section

00:00:56,640 --> 00:00:59,280
breakdown so

00:00:57,520 --> 00:01:02,079
based off the exam structure what the

00:00:59,280 --> 00:01:03,359
cncf and linux foundation has told us to

00:01:02,079 --> 00:01:04,239
expect in the exam

00:01:03,359 --> 00:01:06,799
we're going to look at that i'm going to

00:01:04,239 --> 00:01:09,920
break down basically what

00:01:06,799 --> 00:01:11,840
my guess was going into the exam and

00:01:09,920 --> 00:01:13,119
how accurate it was so to speak without

00:01:11,840 --> 00:01:14,240
giving away too much

00:01:13,119 --> 00:01:16,479
and then lastly i'm going to talk about

00:01:14,240 --> 00:01:20,080
my general tips and i'll sprinkle some

00:01:16,479 --> 00:01:20,080
general tips as i go as well

00:01:21,040 --> 00:01:27,680
so buy kubernetes certifications right

00:01:25,280 --> 00:01:28,479
cncf announced it at cubecon last year

00:01:27,680 --> 00:01:30,880
in november

00:01:28,479 --> 00:01:32,079
about the cks the certified kubernetes

00:01:30,880 --> 00:01:35,520
security specialist

00:01:32,079 --> 00:01:38,640
and i think it was a long time

00:01:35,520 --> 00:01:40,720
uh coming it was it was honestly due um

00:01:38,640 --> 00:01:42,960
it really just showed in terms of

00:01:40,720 --> 00:01:45,360
basically the education

00:01:42,960 --> 00:01:47,040
uh sort of 101 tracks that they pushed

00:01:45,360 --> 00:01:48,640
in kubecon and really sort of

00:01:47,040 --> 00:01:50,479
trying to bring a broader community into

00:01:48,640 --> 00:01:52,000
kubernetes i think security is obviously

00:01:50,479 --> 00:01:52,960
a hot topic and

00:01:52,000 --> 00:01:55,520
i think it was great that they brought

00:01:52,960 --> 00:01:58,159
the cks in it's the third certificate so

00:01:55,520 --> 00:02:00,240
it's joined the cka and ckad

00:01:58,159 --> 00:02:03,600
and it's again command line and hands-on

00:02:00,240 --> 00:02:05,040
focused exams all three of them

00:02:03,600 --> 00:02:06,799
and yeah look forward to talking about

00:02:05,040 --> 00:02:09,039
it the

00:02:06,799 --> 00:02:10,399
the constant question i already get

00:02:09,039 --> 00:02:13,599
about these tks

00:02:10,399 --> 00:02:16,720
is is the cka

00:02:13,599 --> 00:02:17,360
and cks worth pursuing um do they do you

00:02:16,720 --> 00:02:18,800
think

00:02:17,360 --> 00:02:21,040
that it actually you know helps you in

00:02:18,800 --> 00:02:22,720
jobs or get job offers or things of that

00:02:21,040 --> 00:02:25,200
sort so

00:02:22,720 --> 00:02:26,000
i actually find that when i first

00:02:25,200 --> 00:02:27,280
started

00:02:26,000 --> 00:02:28,160
you know working with kubernetes i

00:02:27,280 --> 00:02:29,680
gained a little bit of hands-on

00:02:28,160 --> 00:02:31,200
experience at my job and then

00:02:29,680 --> 00:02:33,040
studying for the cka really actually

00:02:31,200 --> 00:02:33,519
helped me just go and learn and find out

00:02:33,040 --> 00:02:36,000
about

00:02:33,519 --> 00:02:38,080
one all the resources and all the

00:02:36,000 --> 00:02:41,519
community tools that are out there

00:02:38,080 --> 00:02:43,840
so really gave me more broad view

00:02:41,519 --> 00:02:45,519
of what the ecosystem looked like you

00:02:43,840 --> 00:02:48,080
know how to actually work

00:02:45,519 --> 00:02:50,000
in the kubernetes ecosystem and i felt

00:02:48,080 --> 00:02:52,160
that it was really worthwhile regardless

00:02:50,000 --> 00:02:53,519
of the job offer or the the jobs that

00:02:52,160 --> 00:02:54,800
came along with it to actually

00:02:53,519 --> 00:02:57,360
you know become ingrained in that

00:02:54,800 --> 00:02:57,360
community so

00:02:58,080 --> 00:03:02,560
moving into exam structure if you've

00:03:01,360 --> 00:03:04,720
taken the cka

00:03:02,560 --> 00:03:06,159
you'll understand the cks structure it's

00:03:04,720 --> 00:03:07,040
the same sort of format so it's two

00:03:06,159 --> 00:03:10,000
hours long

00:03:07,040 --> 00:03:12,000
you have to get 67 to pass it's listed

00:03:10,000 --> 00:03:13,040
as 15 to 20 performance-based tasks but

00:03:12,000 --> 00:03:14,640
then they kind of give it away on the

00:03:13,040 --> 00:03:16,720
next slide about how many tasks you're

00:03:14,640 --> 00:03:20,319
going to have to perform

00:03:16,720 --> 00:03:22,000
so right now it's using 119.

00:03:20,319 --> 00:03:23,920
um actually a big push so you'll see

00:03:22,000 --> 00:03:26,000
kubernetes updates being pushed 119. we

00:03:23,920 --> 00:03:27,360
want to move people off of 115 into some

00:03:26,000 --> 00:03:29,680
of the newer

00:03:27,360 --> 00:03:31,360
kubernetes versions as 105 isn't really

00:03:29,680 --> 00:03:34,720
supported

00:03:31,360 --> 00:03:36,959
by kubernetes right now so one one

00:03:34,720 --> 00:03:38,239
one two oh one one nine one eight i

00:03:36,959 --> 00:03:40,400
believe are still supported so

00:03:38,239 --> 00:03:41,840
you know make sure we're upgrading and

00:03:40,400 --> 00:03:42,640
making and taking advantage of those new

00:03:41,840 --> 00:03:45,200
features

00:03:42,640 --> 00:03:46,879
uh cost 300 usd if you're paying

00:03:45,200 --> 00:03:49,599
attention sometimes you can always get

00:03:46,879 --> 00:03:51,040
you know some things on sale or i think

00:03:49,599 --> 00:03:52,720
some people have reported like honey

00:03:51,040 --> 00:03:54,319
working and getting them a little bit of

00:03:52,720 --> 00:03:57,439
money off too so

00:03:54,319 --> 00:03:58,799
i'm worthwhile doing that a free retake

00:03:57,439 --> 00:04:00,400
i actually think i think it's great that

00:03:58,799 --> 00:04:01,680
they offer this because sometimes when

00:04:00,400 --> 00:04:03,040
you get into the test it can be again

00:04:01,680 --> 00:04:05,519
like i said a little jar

00:04:03,040 --> 00:04:07,519
ring so free retake is really useful

00:04:05,519 --> 00:04:09,680
it's valid for two years

00:04:07,519 --> 00:04:10,879
you have 12 months to take the exam and

00:04:09,680 --> 00:04:14,799
you need a cka

00:04:10,879 --> 00:04:17,600
in order to take it get questions as to

00:04:14,799 --> 00:04:20,479
why the cka is required to take it

00:04:17,600 --> 00:04:21,040
one the cks out of the three tests i

00:04:20,479 --> 00:04:24,240
believe

00:04:21,040 --> 00:04:25,199
is the hardest tests to pass i think

00:04:24,240 --> 00:04:26,400
that it's not

00:04:25,199 --> 00:04:27,919
when you're looking at security you're

00:04:26,400 --> 00:04:30,000
not just looking at kubernetes right

00:04:27,919 --> 00:04:32,160
when you take the cka you're looking at

00:04:30,000 --> 00:04:33,600
basically kubernetes as an administrator

00:04:32,160 --> 00:04:35,120
when you're getting into security now

00:04:33,600 --> 00:04:36,080
you have to look at whole life cycles so

00:04:35,120 --> 00:04:37,919
you have to look at

00:04:36,080 --> 00:04:39,919
you know node security network security

00:04:37,919 --> 00:04:42,160
kubernetes image security

00:04:39,919 --> 00:04:44,320
um as we've seen in the last month or so

00:04:42,160 --> 00:04:45,120
supply chain securities is a big factor

00:04:44,320 --> 00:04:48,240
so

00:04:45,120 --> 00:04:49,919
again i really believe that the cks

00:04:48,240 --> 00:04:52,960
that the cks should be a requirement

00:04:49,919 --> 00:04:56,240
before the ckis

00:04:52,960 --> 00:04:57,120
now into exam format so each task on

00:04:56,240 --> 00:04:58,560
this exam

00:04:57,120 --> 00:05:00,160
must be completed using a designated

00:04:58,560 --> 00:05:01,759
cluster config context cluster

00:05:00,160 --> 00:05:03,280
configuration context

00:05:01,759 --> 00:05:04,800
if you're taking the ck you'll

00:05:03,280 --> 00:05:07,120
understand what this means you know keep

00:05:04,800 --> 00:05:10,240
control use context

00:05:07,120 --> 00:05:11,600
during the test you'll get 16 clusters

00:05:10,240 --> 00:05:13,360
every single question is going to

00:05:11,600 --> 00:05:13,840
require a new context this is so that

00:05:13,360 --> 00:05:15,280
you're

00:05:13,840 --> 00:05:16,560
you don't do something to the previous

00:05:15,280 --> 00:05:17,600
environment that trips up the next

00:05:16,560 --> 00:05:19,039
environment

00:05:17,600 --> 00:05:20,320
it's a good format it's just sometimes

00:05:19,039 --> 00:05:21,440
can get a little bit confusing if you're

00:05:20,320 --> 00:05:24,320
flustered that

00:05:21,440 --> 00:05:25,840
you know you might be in a node

00:05:24,320 --> 00:05:27,199
diagnosing something and you do a use

00:05:25,840 --> 00:05:28,639
context oh it doesn't work oh yeah i

00:05:27,199 --> 00:05:31,360
have to exit out of the

00:05:28,639 --> 00:05:32,240
node to get to sort of the orchestrator

00:05:31,360 --> 00:05:34,479
node so to speak

00:05:32,240 --> 00:05:35,919
so at the start of each task you're

00:05:34,479 --> 00:05:37,440
going to get an info box that's going to

00:05:35,919 --> 00:05:38,560
provide you with the cluster name and

00:05:37,440 --> 00:05:41,039
context

00:05:38,560 --> 00:05:42,880
and the master and worker known hostname

00:05:41,039 --> 00:05:44,560
this makes it so that you can ssh into

00:05:42,880 --> 00:05:47,360
notes a lot quicker

00:05:44,560 --> 00:05:50,000
and really just make sure that you read

00:05:47,360 --> 00:05:50,000
each task

00:05:50,840 --> 00:05:54,320
thoroughly

00:05:52,000 --> 00:05:56,319
okay so like i said before you can

00:05:54,320 --> 00:05:58,880
switch the cluster configuration

00:05:56,319 --> 00:06:00,720
using cube control config use context

00:05:58,880 --> 00:06:03,280
and the nodes making up each cluster can

00:06:00,720 --> 00:06:05,840
be reached via ssh

00:06:03,280 --> 00:06:07,280
now when you get onto into the node even

00:06:05,840 --> 00:06:09,120
if if you're in that kind of that main

00:06:07,280 --> 00:06:09,759
orchestrator hub node you have elevated

00:06:09,120 --> 00:06:11,520
privileges

00:06:09,759 --> 00:06:13,600
so you can install and run pretty much

00:06:11,520 --> 00:06:15,199
every anything you want

00:06:13,600 --> 00:06:17,759
there's no need to assume elevated

00:06:15,199 --> 00:06:17,759
privileges

00:06:18,720 --> 00:06:21,360
like i said before you must actually

00:06:20,080 --> 00:06:22,560
return to the base note so when you get

00:06:21,360 --> 00:06:24,319
into the test you're going to have

00:06:22,560 --> 00:06:25,919
this base node that you know you can

00:06:24,319 --> 00:06:27,120
write files to save files it's always

00:06:25,919 --> 00:06:29,360
going to be that constant node that you

00:06:27,120 --> 00:06:31,840
get into

00:06:29,360 --> 00:06:33,120
if you ssh into a node just make sure

00:06:31,840 --> 00:06:34,800
that you come out but if you're in the

00:06:33,120 --> 00:06:36,400
orchestra node and you exit out of

00:06:34,800 --> 00:06:38,560
that it's going to basically refresh the

00:06:36,400 --> 00:06:40,080
environment just so you know just be

00:06:38,560 --> 00:06:42,720
aware of

00:06:40,080 --> 00:06:44,400
where you are now you can use keep

00:06:42,720 --> 00:06:46,240
control in the appropriate context

00:06:44,400 --> 00:06:47,440
to work on any cluster from the base

00:06:46,240 --> 00:06:50,720
node but when you're

00:06:47,440 --> 00:06:53,759
in the if you're in a specific note

00:06:50,720 --> 00:06:55,759
in like a a control play known

00:06:53,759 --> 00:06:57,680
or a worker node you'll only be able to

00:06:55,759 --> 00:07:00,720
use the cube control in that node

00:06:57,680 --> 00:07:03,440
now subtle thing there

00:07:00,720 --> 00:07:05,120
is that you can actually go into a node

00:07:03,440 --> 00:07:06,720
and diagnose things in the cluster from

00:07:05,120 --> 00:07:08,080
within the node so if you

00:07:06,720 --> 00:07:09,840
are doing something in the node and you

00:07:08,080 --> 00:07:11,680
want to run cube queue control you don't

00:07:09,840 --> 00:07:12,800
have to actually exit to run it you can

00:07:11,680 --> 00:07:14,800
run it directly from

00:07:12,800 --> 00:07:16,000
within that node which is really useful

00:07:14,800 --> 00:07:18,639
so you're not wasting time going

00:07:16,000 --> 00:07:18,639
back and forth

00:07:19,840 --> 00:07:23,199
yeah so further instructions for

00:07:21,599 --> 00:07:23,840
connecting to nodes are provided during

00:07:23,199 --> 00:07:25,199
the test

00:07:23,840 --> 00:07:26,800
just make sure you read every question

00:07:25,199 --> 00:07:28,400
thoroughly all the information is there

00:07:26,800 --> 00:07:29,440
it's just up to you to know what to do

00:07:28,400 --> 00:07:33,360
with it

00:07:29,440 --> 00:07:35,440
and i slid this little caveat in there

00:07:33,360 --> 00:07:36,880
uh vi and vam are the default editor

00:07:35,440 --> 00:07:39,759
during the exam so

00:07:36,880 --> 00:07:41,280
if you have a favorite editor you are

00:07:39,759 --> 00:07:42,639
going to have to install it

00:07:41,280 --> 00:07:43,599
so that means if you're going to if

00:07:42,639 --> 00:07:44,720
you're on the bass note and you have a

00:07:43,599 --> 00:07:48,639
favorite editor

00:07:44,720 --> 00:07:51,680
when you get in install it and use it

00:07:48,639 --> 00:07:54,240
now if you're doing keep control

00:07:51,680 --> 00:07:55,759
you know edit something vi is obviously

00:07:54,240 --> 00:07:57,599
the default editor so you can either

00:07:55,759 --> 00:07:59,440
change that in the config file or

00:07:57,599 --> 00:08:00,800
just leave it and kind of learn to edit

00:07:59,440 --> 00:08:04,479
with vi on the fly

00:08:00,800 --> 00:08:06,160
it's nothing crazy so

00:08:04,479 --> 00:08:09,360
kind of skip through that but exam

00:08:06,160 --> 00:08:11,759
sections so six sections were outlined

00:08:09,360 --> 00:08:13,280
by the linux foundation the cncf for

00:08:11,759 --> 00:08:16,080
this test

00:08:13,280 --> 00:08:17,599
section one is cluster setup so we are

00:08:16,080 --> 00:08:20,319
talking

00:08:17,599 --> 00:08:21,120
network policies uh benchmarks ingress

00:08:20,319 --> 00:08:23,759
objects

00:08:21,120 --> 00:08:25,120
protecting node metadata and minimizing

00:08:23,759 --> 00:08:28,080
access to

00:08:25,120 --> 00:08:29,759
graphic user interfaces graphic user

00:08:28,080 --> 00:08:31,520
interfaces are really important just in

00:08:29,759 --> 00:08:31,840
general protect your services make sure

00:08:31,520 --> 00:08:33,519
that

00:08:31,840 --> 00:08:35,360
you know our no port services aren't

00:08:33,519 --> 00:08:37,599
open you know we can set up ingress

00:08:35,360 --> 00:08:38,959
objects correctly so that we don't have

00:08:37,599 --> 00:08:40,320
services that are connecting to the

00:08:38,959 --> 00:08:42,000
wrong ingress if you have multiple

00:08:40,320 --> 00:08:43,919
ingers controllers in a namespace for

00:08:42,000 --> 00:08:46,240
example

00:08:43,919 --> 00:08:47,200
and benchmarks are also really important

00:08:46,240 --> 00:08:50,399
you know the

00:08:47,200 --> 00:08:52,959
cis 1.5 and 1.6 benchmarks

00:08:50,399 --> 00:08:54,000
and also some open source tools that can

00:08:52,959 --> 00:08:56,959
help us identify

00:08:54,000 --> 00:08:56,959
issues in our cluster

00:08:57,839 --> 00:09:02,240
section two so cluster hardening so

00:09:00,399 --> 00:09:06,240
we're moving into

00:09:02,240 --> 00:09:09,120
uh accessing kubernetes api role-based

00:09:06,240 --> 00:09:10,160
access control um you know service

00:09:09,120 --> 00:09:12,240
account defaults

00:09:10,160 --> 00:09:13,360
so maybe we have environments that have

00:09:12,240 --> 00:09:16,399
defaults set up how

00:09:13,360 --> 00:09:18,399
do we change those defaults how do we

00:09:16,399 --> 00:09:20,240
you know manipulate or edit things on

00:09:18,399 --> 00:09:22,480
the fly

00:09:20,240 --> 00:09:24,959
and update kubernetes frequently that

00:09:22,480 --> 00:09:26,959
was sort of uh

00:09:24,959 --> 00:09:28,320
when i was following the development i

00:09:26,959 --> 00:09:29,680
actually think this might have been uh

00:09:28,320 --> 00:09:31,519
slid in at the end

00:09:29,680 --> 00:09:33,200
uh partially because we want the

00:09:31,519 --> 00:09:34,399
community to move off of one one four

00:09:33,200 --> 00:09:36,080
one one five one one six

00:09:34,399 --> 00:09:37,760
and move into some of the newer

00:09:36,080 --> 00:09:39,200
functionalities and new security

00:09:37,760 --> 00:09:41,040
features that come with

00:09:39,200 --> 00:09:43,120
uh one one eight one one nine and one

00:09:41,040 --> 00:09:45,120
two oh

00:09:43,120 --> 00:09:46,800
and i actually think if for those who

00:09:45,120 --> 00:09:47,680
aren't aware there were three kubernetes

00:09:46,800 --> 00:09:50,399
releases last year

00:09:47,680 --> 00:09:50,720
there is a schedule 3 releases this year

00:09:50,399 --> 00:09:53,120
so

00:09:50,720 --> 00:09:53,920
the release cadence has also slowed in

00:09:53,120 --> 00:09:56,880
order to

00:09:53,920 --> 00:10:00,320
accommodate people moving forward and

00:09:56,880 --> 00:10:00,320
taking advantage of those features

00:10:00,959 --> 00:10:04,880
so section 3 minimizing host os

00:10:03,839 --> 00:10:06,800
footprint

00:10:04,880 --> 00:10:07,920
i i thought this was really interesting

00:10:06,800 --> 00:10:09,040
especially

00:10:07,920 --> 00:10:10,560
because you can't really control the

00:10:09,040 --> 00:10:12,160
environment so how do you minimize the

00:10:10,560 --> 00:10:13,519
node os footprint normally that would

00:10:12,160 --> 00:10:15,440
fall on

00:10:13,519 --> 00:10:17,200
uh you know my more infrastructure role

00:10:15,440 --> 00:10:18,480
but i think you know since security ties

00:10:17,200 --> 00:10:18,800
into everything i think was great that

00:10:18,480 --> 00:10:22,000
they

00:10:18,800 --> 00:10:23,360
highlighted this minimizing iam roles

00:10:22,000 --> 00:10:25,519
minimizing external access to the

00:10:23,360 --> 00:10:27,680
network and using app

00:10:25,519 --> 00:10:33,120
armor or secomp for kernel hardening

00:10:27,680 --> 00:10:35,040
tools as well

00:10:33,120 --> 00:10:36,240
um just real quick what does it mean 12

00:10:35,040 --> 00:10:36,880
months to take it so when you sign up

00:10:36,240 --> 00:10:41,360
for the exam

00:10:36,880 --> 00:10:44,560
you have 12 months to to take your two

00:10:41,360 --> 00:10:45,839
exam chances so to speak so if you sign

00:10:44,560 --> 00:10:49,680
up and you don't take it

00:10:45,839 --> 00:10:49,680
you're you can't take it after 12 months

00:10:53,839 --> 00:10:57,600
all right let me get rid of that can i

00:10:56,399 --> 00:11:01,120
get rid of that

00:10:57,600 --> 00:11:04,240
there we go so moving on to minimizing

00:11:01,120 --> 00:11:07,519
micro service vulnerabilities

00:11:04,240 --> 00:11:09,360
we want to set up os level security

00:11:07,519 --> 00:11:10,079
domains so we have pod security policies

00:11:09,360 --> 00:11:13,279
opa

00:11:10,079 --> 00:11:15,279
security context all you know different

00:11:13,279 --> 00:11:17,760
aspects of enforcing

00:11:15,279 --> 00:11:18,480
appropriate security for the different

00:11:17,760 --> 00:11:19,920
containers

00:11:18,480 --> 00:11:22,079
especially at runtime you have security

00:11:19,920 --> 00:11:22,640
context being at a pod and deployment

00:11:22,079 --> 00:11:23,760
level

00:11:22,640 --> 00:11:26,680
and then things like pod security

00:11:23,760 --> 00:11:29,519
policies and opa enforcing at a cluster

00:11:26,680 --> 00:11:31,200
level uh managing kubernetes secrets

00:11:29,519 --> 00:11:33,040
20 secrets is always going to be a topic

00:11:31,200 --> 00:11:35,760
as to how to manage it

00:11:33,040 --> 00:11:36,800
we do not want our secrets in our

00:11:35,760 --> 00:11:39,760
configuration

00:11:36,800 --> 00:11:40,399
in our yaml files right or in our docker

00:11:39,760 --> 00:11:41,680
images so

00:11:40,399 --> 00:11:44,079
just make sure that we're aware of

00:11:41,680 --> 00:11:47,120
secrets workflow how to manage them

00:11:44,079 --> 00:11:49,519
how to access remove secrets and the

00:11:47,120 --> 00:11:52,160
general life cycle of secrets

00:11:49,519 --> 00:11:52,720
uh container run time sandboxes so this

00:11:52,160 --> 00:11:54,399
will be

00:11:52,720 --> 00:11:57,839
sort of a continuing theme moving

00:11:54,399 --> 00:11:57,839
forward especially with kubernetes

00:11:58,079 --> 00:12:04,320
uh deprecating the docker shim uh

00:12:01,279 --> 00:12:06,959
uh what's uh deprecating the uh what's

00:12:04,320 --> 00:12:06,959
the word forth

00:12:08,240 --> 00:12:12,000
they're they're deprecating their um

00:12:09,920 --> 00:12:13,120
support sorry for the the docker shim so

00:12:12,000 --> 00:12:13,839
docker said they were going to pick that

00:12:13,120 --> 00:12:16,320
up but now

00:12:13,839 --> 00:12:17,279
there are other run times so for example

00:12:16,320 --> 00:12:20,320
um

00:12:17,279 --> 00:12:23,120
uh red hat uses podman and cryo

00:12:20,320 --> 00:12:24,399
uh right ucg visor you know you might

00:12:23,120 --> 00:12:26,160
have multiple runtimes running on the

00:12:24,399 --> 00:12:28,320
same note how do you schedule that

00:12:26,160 --> 00:12:29,600
how do you isolate the runtimes those

00:12:28,320 --> 00:12:30,240
are some of the questions that are going

00:12:29,600 --> 00:12:33,279
to

00:12:30,240 --> 00:12:36,720
continue moving forward

00:12:33,279 --> 00:12:36,720
hey marat um

00:12:37,680 --> 00:12:40,480
yeah and so i actually saw a question

00:12:39,120 --> 00:12:42,560
about this implementing podpod

00:12:40,480 --> 00:12:45,200
encryption using mcls

00:12:42,560 --> 00:12:48,240
the one of the the questions was are we

00:12:45,200 --> 00:12:50,560
expecting something like a service mesh

00:12:48,240 --> 00:12:52,160
can't give away too much let's say that

00:12:50,560 --> 00:12:55,279
you should understand how to implement

00:12:52,160 --> 00:12:57,839
podopod encryption using mtls

00:12:55,279 --> 00:12:59,040
at its core functionality maybe it's

00:12:57,839 --> 00:13:02,000
something simple like

00:12:59,040 --> 00:13:02,240
add a certificate to an ingress or you

00:13:02,000 --> 00:13:04,880
know

00:13:02,240 --> 00:13:05,440
implement something that you have to do

00:13:04,880 --> 00:13:08,800
but

00:13:05,440 --> 00:13:10,240
in general just worth knowing i'll get

00:13:08,800 --> 00:13:13,120
more into this at the end when i talk

00:13:10,240 --> 00:13:13,120
about tips and tricks

00:13:13,279 --> 00:13:18,079
section 5 supply chain security so again

00:13:16,800 --> 00:13:20,160
this was actually one of my favorite

00:13:18,079 --> 00:13:22,959
things that they put into this exam

00:13:20,160 --> 00:13:25,120
minimizing base image footprints like

00:13:22,959 --> 00:13:26,800
since security in kubernetes is so

00:13:25,120 --> 00:13:28,720
you know vast so to speak it's not just

00:13:26,800 --> 00:13:29,600
in kubernetes you know we need to secure

00:13:28,720 --> 00:13:31,040
a docker image

00:13:29,600 --> 00:13:33,600
we need to make sure we're pulling the

00:13:31,040 --> 00:13:35,360
correct images we have to

00:13:33,600 --> 00:13:36,720
we can specify which registries we can

00:13:35,360 --> 00:13:38,639
pull from not pull from

00:13:36,720 --> 00:13:40,720
right because by default kubernetes

00:13:38,639 --> 00:13:42,240
pulls from docker hub for an image

00:13:40,720 --> 00:13:43,839
that might not be acceptable especially

00:13:42,240 --> 00:13:46,959
in something like a private cluster

00:13:43,839 --> 00:13:48,240
so we want to verify that our workloads

00:13:46,959 --> 00:13:48,880
anything that we're bringing into the

00:13:48,240 --> 00:13:52,320
cluster

00:13:48,880 --> 00:13:55,120
is signed verified and doesn't have any

00:13:52,320 --> 00:13:57,760
vulnerabilities

00:13:55,120 --> 00:13:58,399
and lastly the i think the biggest slide

00:13:57,760 --> 00:14:00,639
in the deck

00:13:58,399 --> 00:14:01,600
is monitoring logging and runtime

00:14:00,639 --> 00:14:03,440
security

00:14:01,600 --> 00:14:04,959
these are a little bit more vague since

00:14:03,440 --> 00:14:07,519
they really uh

00:14:04,959 --> 00:14:09,199
are very broad um but yeah so

00:14:07,519 --> 00:14:11,360
immutability audit logging

00:14:09,199 --> 00:14:12,720
and performing analysis kind of take the

00:14:11,360 --> 00:14:15,360
the core

00:14:12,720 --> 00:14:16,480
um the the frontier where we want to

00:14:15,360 --> 00:14:19,519
make sure that we

00:14:16,480 --> 00:14:20,399
understand how to diagnose things so how

00:14:19,519 --> 00:14:21,839
we set up logs

00:14:20,399 --> 00:14:24,560
so that we know we can identify bad

00:14:21,839 --> 00:14:27,120
actors you know can we implement

00:14:24,560 --> 00:14:27,920
certain tools to look at runtimes and

00:14:27,120 --> 00:14:29,920
analyze

00:14:27,920 --> 00:14:31,360
different applications at runtimes or

00:14:29,920 --> 00:14:33,440
you know different

00:14:31,360 --> 00:14:35,519
applications that are requesting you

00:14:33,440 --> 00:14:37,040
know escalated privileges or

00:14:35,519 --> 00:14:40,639
things of that sort we want to make sure

00:14:37,040 --> 00:14:44,000
that we have visibility into those

00:14:40,639 --> 00:14:46,160
okay so

00:14:44,000 --> 00:14:47,199
moving into the section breakdown so i'm

00:14:46,160 --> 00:14:48,959
going to kind of

00:14:47,199 --> 00:14:50,240
just pick apart uh some of these

00:14:48,959 --> 00:14:53,440
sections

00:14:50,240 --> 00:14:56,560
and there's a bunch of questions that i

00:14:53,440 --> 00:15:00,160
will try to pick off as i go

00:14:56,560 --> 00:15:00,880
so if if i miss something i will hit it

00:15:00,160 --> 00:15:04,800
at the end

00:15:00,880 --> 00:15:04,800
just fyi don't worry too much

00:15:05,760 --> 00:15:16,000
okay i get a bunch in here

00:15:12,560 --> 00:15:17,839
so for cluster setup the

00:15:16,000 --> 00:15:19,040
sort of six points for network policies

00:15:17,839 --> 00:15:20,800
cube bench

00:15:19,040 --> 00:15:23,040
securing kubernetes components ingress

00:15:20,800 --> 00:15:24,399
objects node metadata and minimizing

00:15:23,040 --> 00:15:26,800
access

00:15:24,399 --> 00:15:28,399
network policies did get a bump in 119

00:15:26,800 --> 00:15:30,959
they now have more functionality so you

00:15:28,399 --> 00:15:33,680
have default deny default allow

00:15:30,959 --> 00:15:34,000
more labels and selectors functionality

00:15:33,680 --> 00:15:35,759
and

00:15:34,000 --> 00:15:37,920
you also have ip blocks so there's this

00:15:35,759 --> 00:15:39,519
to and from functionality that that is

00:15:37,920 --> 00:15:42,959
worth getting acquaintant with

00:15:39,519 --> 00:15:45,759
and really network policies are the core

00:15:42,959 --> 00:15:48,399
enforcement tool inside your cluster so

00:15:45,759 --> 00:15:49,600
just in general outside of cks it's

00:15:48,399 --> 00:15:50,079
worth understanding network policies

00:15:49,600 --> 00:15:51,839
it's also

00:15:50,079 --> 00:15:53,120
also worth understanding how to

00:15:51,839 --> 00:15:54,800
orchestrate an application

00:15:53,120 --> 00:15:56,079
by namespace so that you can then apply

00:15:54,800 --> 00:15:58,560
you know these bar back and network

00:15:56,079 --> 00:16:02,560
policies efficiently

00:15:58,560 --> 00:16:02,560
just from an organizational standpoint

00:16:03,279 --> 00:16:07,920
next cluster benchmarks so qbench is a

00:16:06,399 --> 00:16:09,839
tool that's that meant that's mentioned

00:16:07,920 --> 00:16:11,440
and it's worth also

00:16:09,839 --> 00:16:13,519
looking at the documentation that you're

00:16:11,440 --> 00:16:16,240
allowed for the cks

00:16:13,519 --> 00:16:18,959
qbench is a cncf tool and it runs checks

00:16:16,240 --> 00:16:21,680
based on the cis benchmarks

00:16:18,959 --> 00:16:22,399
now a lot of tools if you think about

00:16:21,680 --> 00:16:24,959
the

00:16:22,399 --> 00:16:26,720
time that you have for a question the

00:16:24,959 --> 00:16:28,399
tools must be

00:16:26,720 --> 00:16:29,839
somewhat streamlined right we're not

00:16:28,399 --> 00:16:32,160
going to spend 10 20

00:16:29,839 --> 00:16:33,759
30 minutes on a test so normally most

00:16:32,160 --> 00:16:35,199
questions are here's information you

00:16:33,759 --> 00:16:37,360
have to know what to do with it

00:16:35,199 --> 00:16:39,519
just understand what the tools are

00:16:37,360 --> 00:16:41,040
trying to accomplish and how

00:16:39,519 --> 00:16:43,360
you know you would secure the cluster

00:16:41,040 --> 00:16:43,360
after

00:16:44,000 --> 00:16:50,959
so ingress objects you'll see

00:16:47,279 --> 00:16:52,480
in let's say some more

00:16:50,959 --> 00:16:53,759
scalable environments maybe not scalable

00:16:52,480 --> 00:16:55,759
is the right word for it but you'll see

00:16:53,759 --> 00:16:57,680
multiple ingresses in a single namespace

00:16:55,759 --> 00:16:59,519
there is an angus class that has come in

00:16:57,680 --> 00:17:01,199
so you know there it is a security issue

00:16:59,519 --> 00:17:03,360
with ingress being misconfigured

00:17:01,199 --> 00:17:04,400
between uh various different ingress

00:17:03,360 --> 00:17:06,400
controllers

00:17:04,400 --> 00:17:08,079
just worth understanding the different

00:17:06,400 --> 00:17:10,160
english objects how to apply them

00:17:08,079 --> 00:17:12,319
you know how to add encryption as well

00:17:10,160 --> 00:17:12,319
so

00:17:13,520 --> 00:17:17,600
and then network policies i believe

00:17:16,559 --> 00:17:19,919
yeah i already went over so that's a

00:17:17,600 --> 00:17:21,439
duplicate slide but minimizing access so

00:17:19,919 --> 00:17:23,120
this topic is fueled by previous

00:17:21,439 --> 00:17:25,039
security hacks

00:17:23,120 --> 00:17:27,679
that are exposed to kubernetes dashboard

00:17:25,039 --> 00:17:31,360
and just general cluster setup checks so

00:17:27,679 --> 00:17:32,400
uh if i think it was in 2017 or 2018 you

00:17:31,360 --> 00:17:34,240
know there's a bunch of clusters that

00:17:32,400 --> 00:17:36,400
deployed kubernetes dashboard by default

00:17:34,240 --> 00:17:37,520
and that port if you deployed a public

00:17:36,400 --> 00:17:39,360
cluster it was

00:17:37,520 --> 00:17:41,679
uh was general knowledge i actually

00:17:39,360 --> 00:17:43,919
think it was tesla that had this issue

00:17:41,679 --> 00:17:45,360
but again just minimizing access

00:17:43,919 --> 00:17:46,000
understanding how to search through

00:17:45,360 --> 00:17:50,640
services

00:17:46,000 --> 00:17:53,039
and narrow down any bad actors

00:17:50,640 --> 00:17:55,520
all right moving into cluster hardening

00:17:53,039 --> 00:17:58,160
so we have

00:17:55,520 --> 00:18:00,080
api access we have rbac default accounts

00:17:58,160 --> 00:18:01,760
and kubernetes updates

00:18:00,080 --> 00:18:03,200
again api access all about

00:18:01,760 --> 00:18:05,520
authentication

00:18:03,200 --> 00:18:08,000
authorization and emission controllers

00:18:05,520 --> 00:18:08,000
as well

00:18:08,640 --> 00:18:13,440
one of the core enforcement mechanisms

00:18:10,720 --> 00:18:16,080
in kubernetes is our back right so

00:18:13,440 --> 00:18:17,919
at a minimum we need to understand how

00:18:16,080 --> 00:18:18,640
to implement roles cluster roles role

00:18:17,919 --> 00:18:21,520
bindings

00:18:18,640 --> 00:18:22,960
how to search for them narrow them how

00:18:21,520 --> 00:18:26,000
to understand

00:18:22,960 --> 00:18:27,440
the different verbs and the additive

00:18:26,000 --> 00:18:30,080
permissions that our back has

00:18:27,440 --> 00:18:32,000
so that we are not setting defaults of a

00:18:30,080 --> 00:18:34,160
cluster admin or we're not giving

00:18:32,000 --> 00:18:36,480
service accounts for applications you

00:18:34,160 --> 00:18:38,559
know the ability to

00:18:36,480 --> 00:18:40,240
uh like a cluster admin sort of

00:18:38,559 --> 00:18:41,280
permissions and the default permissions

00:18:40,240 --> 00:18:42,880
are

00:18:41,280 --> 00:18:44,880
basically very narrow in scope as to

00:18:42,880 --> 00:18:46,720
what we give the

00:18:44,880 --> 00:18:49,039
the workloads that are running in our

00:18:46,720 --> 00:18:50,720
cluster

00:18:49,039 --> 00:18:53,679
like i said default server default

00:18:50,720 --> 00:18:55,280
accounts are a huge issue

00:18:53,679 --> 00:18:57,919
kubernetes by default obviously wide

00:18:55,280 --> 00:18:59,280
open in terms of network in terms of the

00:18:57,919 --> 00:19:01,600
defaults that are enforced

00:18:59,280 --> 00:19:02,960
so really we want to make sure that we

00:19:01,600 --> 00:19:04,799
understand some of the defaults that are

00:19:02,960 --> 00:19:06,480
out there and then we work to scale

00:19:04,799 --> 00:19:09,039
those back into the permissions that

00:19:06,480 --> 00:19:11,679
that we need only for our application so

00:19:09,039 --> 00:19:13,360
understanding how to implement

00:19:11,679 --> 00:19:15,039
different restrictions on users groups

00:19:13,360 --> 00:19:16,640
service accounts uh

00:19:15,039 --> 00:19:18,480
understanding how to use the auth can i

00:19:16,640 --> 00:19:19,760
functionality so it's really useful to

00:19:18,480 --> 00:19:21,840
be able to see

00:19:19,760 --> 00:19:22,799
and diagnose what serves account or what

00:19:21,840 --> 00:19:26,000
user account

00:19:22,799 --> 00:19:27,360
has what access to the cluster

00:19:26,000 --> 00:19:29,760
and lastly i touched on this already but

00:19:27,360 --> 00:19:31,840
kubernetes updates

00:19:29,760 --> 00:19:32,960
business lag behind on updates i would

00:19:31,840 --> 00:19:35,280
say laggy behind there

00:19:32,960 --> 00:19:36,559
there are a lot of external forces at

00:19:35,280 --> 00:19:39,039
work when you upgrade something from

00:19:36,559 --> 00:19:40,640
like 115 to 116 and you want to make

00:19:39,039 --> 00:19:43,440
sure obviously that things don't break

00:19:40,640 --> 00:19:44,400
so it is a a very tough process

00:19:43,440 --> 00:19:46,640
especially when you get

00:19:44,400 --> 00:19:48,160
you know slas and uptime uh thrown in

00:19:46,640 --> 00:19:51,520
there so

00:19:48,160 --> 00:19:52,720
just be aware and understand especially

00:19:51,520 --> 00:19:54,880
just the general life cycle of

00:19:52,720 --> 00:19:57,039
kubernetes the cadence

00:19:54,880 --> 00:19:58,960
how we want to move forward and upgrade

00:19:57,039 --> 00:19:59,600
and you know just as an organizational

00:19:58,960 --> 00:20:01,280
level

00:19:59,600 --> 00:20:03,840
you know understand some different tools

00:20:01,280 --> 00:20:07,840
that can help you with that

00:20:03,840 --> 00:20:07,840
all right on to system hardening

00:20:08,720 --> 00:20:15,600
so minimizing host os footprints

00:20:12,080 --> 00:20:17,039
which really kind of very broad but

00:20:15,600 --> 00:20:18,960
encompasses removing unnecessary

00:20:17,039 --> 00:20:20,960
packages identifying

00:20:18,960 --> 00:20:23,039
and addressing open ports and shutting

00:20:20,960 --> 00:20:25,840
down any unnecessary services

00:20:23,039 --> 00:20:27,039
now very broad in scope so i'm just

00:20:25,840 --> 00:20:28,480
going to talk about some of the things

00:20:27,039 --> 00:20:29,440
that are documented one of them's app

00:20:28,480 --> 00:20:31,600
armor

00:20:29,440 --> 00:20:32,559
app armor profiles can be enforced on a

00:20:31,600 --> 00:20:36,320
per node basis

00:20:32,559 --> 00:20:37,919
and the documentation is in there for

00:20:36,320 --> 00:20:39,360
you know how to set up profiles how to

00:20:37,919 --> 00:20:40,240
enforce profiles how to bring them into

00:20:39,360 --> 00:20:42,640
kubernetes

00:20:40,240 --> 00:20:43,760
uh secomp is also mentioned as well

00:20:42,640 --> 00:20:45,120
really what we're doing is we're

00:20:43,760 --> 00:20:49,039
allowing

00:20:45,120 --> 00:20:52,159
teams more fine-grained control per node

00:20:49,039 --> 00:20:54,480
as to what is allowed on the node so

00:20:52,159 --> 00:20:55,520
you know you can separate workloads and

00:20:54,480 --> 00:20:57,180
we could say this process

00:20:55,520 --> 00:20:58,799
specifically um

00:20:57,180 --> 00:21:02,080
[Music]

00:20:58,799 --> 00:21:03,760
this process specifically will be

00:21:02,080 --> 00:21:05,440
okay on this node but cannot run

00:21:03,760 --> 00:21:06,799
anywhere else right that's what we're

00:21:05,440 --> 00:21:09,360
trying to enforce with something like

00:21:06,799 --> 00:21:09,360
app armor

00:21:09,679 --> 00:21:13,440
okay so security context this is very

00:21:12,799 --> 00:21:15,760
core

00:21:13,440 --> 00:21:16,960
to to the test and understanding it

00:21:15,760 --> 00:21:18,000
especially because you can apply

00:21:16,960 --> 00:21:21,039
security context

00:21:18,000 --> 00:21:23,200
at a container level uh and at a

00:21:21,039 --> 00:21:24,880
pod level as well and then really pod

00:21:23,200 --> 00:21:26,480
security policies and oppa are built on

00:21:24,880 --> 00:21:28,640
top for enforcing those core

00:21:26,480 --> 00:21:30,240
security context so you know things like

00:21:28,640 --> 00:21:32,880
user ids gids

00:21:30,240 --> 00:21:34,480
file system ids linux capabilities

00:21:32,880 --> 00:21:36,000
mounted file systems

00:21:34,480 --> 00:21:38,320
we want to get to the point where our

00:21:36,000 --> 00:21:38,640
containers are doing only what we tell

00:21:38,320 --> 00:21:41,200
them

00:21:38,640 --> 00:21:42,640
and they're not they're not mutable you

00:21:41,200 --> 00:21:44,320
know they're not escalating privileges

00:21:42,640 --> 00:21:46,240
they're not

00:21:44,320 --> 00:21:47,600
accessing anything like cabinet rar

00:21:46,240 --> 00:21:50,080
accessing any any

00:21:47,600 --> 00:21:50,799
network privileges on the host just be

00:21:50,080 --> 00:21:52,960
aware of

00:21:50,799 --> 00:21:53,840
how those different functionalities play

00:21:52,960 --> 00:21:55,840
with each other

00:21:53,840 --> 00:21:57,440
as there might be you know things that

00:21:55,840 --> 00:22:01,840
we have to debug or

00:21:57,440 --> 00:22:04,080
isolate so pod security policies

00:22:01,840 --> 00:22:05,120
officially due for deprecation i believe

00:22:04,080 --> 00:22:08,320
in one two one

00:22:05,120 --> 00:22:11,280
and will be removed in one two five

00:22:08,320 --> 00:22:12,799
so this has kind of been in the works

00:22:11,280 --> 00:22:14,240
for a while the deprecation

00:22:12,799 --> 00:22:15,840
not sure where we're going to move to

00:22:14,240 --> 00:22:17,919
enforcement i can see oppa

00:22:15,840 --> 00:22:19,280
on the horizon which i think is also why

00:22:17,919 --> 00:22:22,159
it was mentioned in this

00:22:19,280 --> 00:22:22,960
test just know that it's an enforcement

00:22:22,159 --> 00:22:24,720
mechanism

00:22:22,960 --> 00:22:26,159
and really how we imply enforcement

00:22:24,720 --> 00:22:28,559
mechanisms in

00:22:26,159 --> 00:22:30,320
the cluster are through our backs across

00:22:28,559 --> 00:22:32,960
namespaces and cluster

00:22:30,320 --> 00:22:33,679
permissions so again understand the

00:22:32,960 --> 00:22:36,000
general concept

00:22:33,679 --> 00:22:37,200
understand psps how they're applied and

00:22:36,000 --> 00:22:40,880
that they are a cluster level

00:22:37,200 --> 00:22:42,320
enforcement object

00:22:40,880 --> 00:22:45,120
all right moving on to microservice

00:22:42,320 --> 00:22:45,120
vulnerabilities

00:22:46,480 --> 00:22:51,280
so again with psp due for deprecation

00:22:49,360 --> 00:22:54,559
just what i mentioned

00:22:51,280 --> 00:22:56,320
oppa may take a a larger role as

00:22:54,559 --> 00:22:58,159
especially since there's quarterly

00:22:56,320 --> 00:23:02,720
updates to the test of the exam

00:22:58,159 --> 00:23:05,760
you could see opa also taking more of a

00:23:02,720 --> 00:23:07,200
a larger role in the exam so to speak

00:23:05,760 --> 00:23:09,039
now there isn't that much documentation

00:23:07,200 --> 00:23:11,760
on the kubernetes website or

00:23:09,039 --> 00:23:13,280
mentioned in the cks so it's worthwhile

00:23:11,760 --> 00:23:13,919
narrowing down what you would need to

00:23:13,280 --> 00:23:16,000
know because

00:23:13,919 --> 00:23:18,080
really everything that is in the exam

00:23:16,000 --> 00:23:20,840
can be accessed or

00:23:18,080 --> 00:23:23,520
the concept can be accessed through the

00:23:20,840 --> 00:23:24,880
documentation

00:23:23,520 --> 00:23:26,720
and i mentioned this before kubernetes

00:23:24,880 --> 00:23:29,200
secrets understand the secret life cycle

00:23:26,720 --> 00:23:32,000
how to access remove secrets

00:23:29,200 --> 00:23:33,600
you know protect secrets from other

00:23:32,000 --> 00:23:38,080
objects that

00:23:33,600 --> 00:23:38,080
shouldn't necessarily be using secrets

00:23:38,480 --> 00:23:41,520
mtls i'll get a little bit more to this

00:23:40,640 --> 00:23:43,120
at the end because there's a lot of

00:23:41,520 --> 00:23:44,880
questions so i want to narrow it down

00:23:43,120 --> 00:23:47,120
but just understand how mtls can be

00:23:44,880 --> 00:23:51,120
applied within objects

00:23:47,120 --> 00:23:53,039
plot the pod encryption it

00:23:51,120 --> 00:23:55,039
it's if you think of questions that

00:23:53,039 --> 00:23:56,960
could arise

00:23:55,039 --> 00:23:58,080
they wouldn't be super complicated to

00:23:56,960 --> 00:23:59,440
the point where it's going to take you

00:23:58,080 --> 00:24:00,400
20 minutes so if you're thinking oh i

00:23:59,440 --> 00:24:03,039
need to

00:24:00,400 --> 00:24:04,640
to put mtls into an english object or

00:24:03,039 --> 00:24:05,919
something like that

00:24:04,640 --> 00:24:08,559
probably going to be simpler than you

00:24:05,919 --> 00:24:10,000
think so obviously worth understanding

00:24:08,559 --> 00:24:13,279
and worth going through some examples

00:24:10,000 --> 00:24:14,720
don't stress out too much over it

00:24:13,279 --> 00:24:17,679
a container run times i saw a question

00:24:14,720 --> 00:24:20,080
about container runtimes earlier earlier

00:24:17,679 --> 00:24:22,159
worth understanding continued runtimes

00:24:20,080 --> 00:24:24,640
especially because

00:24:22,159 --> 00:24:25,279
kubernetes is basically going hands off

00:24:24,640 --> 00:24:28,320
and saying

00:24:25,279 --> 00:24:31,520
we will support uh anything that

00:24:28,320 --> 00:24:33,120
um follows the the container runtime

00:24:31,520 --> 00:24:34,799
interface framework that has been set up

00:24:33,120 --> 00:24:38,320
so you'll see other runtimes such as g

00:24:34,799 --> 00:24:41,120
visor cryo again was one of them

00:24:38,320 --> 00:24:41,840
rocket i believe it's there but kind of

00:24:41,120 --> 00:24:44,960
faded

00:24:41,840 --> 00:24:45,600
and obviously docker so there's a couple

00:24:44,960 --> 00:24:48,799
out there

00:24:45,600 --> 00:24:50,400
worth understanding them but just

00:24:48,799 --> 00:24:53,120
the other thing too is understanding

00:24:50,400 --> 00:24:54,080
that we can have multiple runtimes on a

00:24:53,120 --> 00:24:58,000
single node

00:24:54,080 --> 00:25:00,960
and specify those runtimes as well

00:24:58,000 --> 00:25:03,440
again so that we can isolate workloads

00:25:00,960 --> 00:25:05,120
cata as well

00:25:03,440 --> 00:25:07,600
my favorite section supply chain

00:25:05,120 --> 00:25:07,600
security

00:25:07,760 --> 00:25:11,840
so for supply chain security we are

00:25:10,000 --> 00:25:15,120
talking about

00:25:11,840 --> 00:25:17,120
everything into the cluster

00:25:15,120 --> 00:25:19,279
all the steps that you know you usually

00:25:17,120 --> 00:25:20,640
have in a workflow so

00:25:19,279 --> 00:25:22,720
we're talking reviewing dockerfile

00:25:20,640 --> 00:25:23,440
content docker images what is in the

00:25:22,720 --> 00:25:26,400
image

00:25:23,440 --> 00:25:27,279
you know are we requesting special

00:25:26,400 --> 00:25:29,840
privileges

00:25:27,279 --> 00:25:31,919
are we putting any files that shouldn't

00:25:29,840 --> 00:25:33,600
be in there

00:25:31,919 --> 00:25:35,120
basically make sure those base images

00:25:33,600 --> 00:25:37,120
are correct so if we're pulling

00:25:35,120 --> 00:25:39,679
you know ubuntu latest is that

00:25:37,120 --> 00:25:41,440
necessarily the best uh case have we vet

00:25:39,679 --> 00:25:42,720
have we um internally as an organization

00:25:41,440 --> 00:25:46,400
vet that ubuntu latest

00:25:42,720 --> 00:25:48,400
is safe and without any issues

00:25:46,400 --> 00:25:50,720
so again maybe we pull an issue we need

00:25:48,400 --> 00:25:52,559
to scan it then we need to verify and

00:25:50,720 --> 00:25:54,240
put it into our repo then we use it as a

00:25:52,559 --> 00:25:56,159
base image on top of our other

00:25:54,240 --> 00:25:57,039
applications you need to be aware of all

00:25:56,159 --> 00:26:00,320
these things

00:25:57,039 --> 00:26:02,320
that are going into actually running

00:26:00,320 --> 00:26:04,480
the image as a container in kubernetes

00:26:02,320 --> 00:26:06,880
so yeah

00:26:04,480 --> 00:26:07,919
very important allowing secure

00:26:06,880 --> 00:26:10,559
registries so

00:26:07,919 --> 00:26:11,679
blocking images from certain container

00:26:10,559 --> 00:26:13,360
registries

00:26:11,679 --> 00:26:15,200
just so that you know let's say somebody

00:26:13,360 --> 00:26:16,000
gets access and they have they want to

00:26:15,200 --> 00:26:18,720
pull

00:26:16,000 --> 00:26:19,679
an image into your kubernetes cluster

00:26:18,720 --> 00:26:21,679
well if you have

00:26:19,679 --> 00:26:23,279
a private server and you've only set up

00:26:21,679 --> 00:26:24,400
so that images can be pulled from our

00:26:23,279 --> 00:26:26,320
private

00:26:24,400 --> 00:26:27,520
image repository well somebody can get

00:26:26,320 --> 00:26:28,640
in and they can't pull

00:26:27,520 --> 00:26:30,159
from their servers they have to figure

00:26:28,640 --> 00:26:31,200
out another way around it so little

00:26:30,159 --> 00:26:33,679
things like that

00:26:31,200 --> 00:26:38,000
will help you in your fight against any

00:26:33,679 --> 00:26:41,120
malicious people in your environments

00:26:38,000 --> 00:26:44,400
uh analyzing kubernetes workloads so

00:26:41,120 --> 00:26:45,919
you can kind of see where this is going

00:26:44,400 --> 00:26:47,760
in terms of what they're trying to

00:26:45,919 --> 00:26:49,039
uh to accomplish here basically you need

00:26:47,760 --> 00:26:50,480
to know the whole life cycle so that if

00:26:49,039 --> 00:26:52,720
we say hey there's an issue in

00:26:50,480 --> 00:26:54,720
x you know how to go and debug it or hey

00:26:52,720 --> 00:26:56,720
there's an issue and

00:26:54,720 --> 00:26:58,720
you know a kubernetes object a docker

00:26:56,720 --> 00:26:59,919
file in how these images are being

00:26:58,720 --> 00:27:02,640
pulled and how

00:26:59,919 --> 00:27:03,919
we're in the access into the cluster

00:27:02,640 --> 00:27:05,279
those are sort of the things that you're

00:27:03,919 --> 00:27:07,840
going to need to figure out and debug

00:27:05,279 --> 00:27:07,840
during the test

00:27:08,159 --> 00:27:13,760
and image scanning is very core

00:27:11,520 --> 00:27:15,279
again i mentioned it earlier so they

00:27:13,760 --> 00:27:17,039
mentioned trivia and you have trivia

00:27:15,279 --> 00:27:18,640
documentation so you can scan containers

00:27:17,039 --> 00:27:20,960
for critical issues

00:27:18,640 --> 00:27:21,919
it's worth understanding the container

00:27:20,960 --> 00:27:23,120
scanning

00:27:21,919 --> 00:27:24,799
applications that are out there

00:27:23,120 --> 00:27:25,360
specifically trivia it's very easy to

00:27:24,799 --> 00:27:27,919
use

00:27:25,360 --> 00:27:29,600
you do have the documentation um and

00:27:27,919 --> 00:27:31,520
then also know what to do with that so

00:27:29,600 --> 00:27:32,960
let's say you use it and you find an

00:27:31,520 --> 00:27:35,840
issue what do you do how do you resolve

00:27:32,960 --> 00:27:35,840
those issues

00:27:36,880 --> 00:27:42,080
and the last section so we have

00:27:39,679 --> 00:27:44,080
monitoring logging and runtime security

00:27:42,080 --> 00:27:45,520
so we want to monitor malicious activity

00:27:44,080 --> 00:27:47,679
we want to look at audit logs

00:27:45,520 --> 00:27:49,919
we want to understand how to make our

00:27:47,679 --> 00:27:51,360
containers immutable

00:27:49,919 --> 00:27:53,679
and then we want to look at audit policy

00:27:51,360 --> 00:27:53,679
as well

00:27:55,279 --> 00:27:59,600
um not sure why that's there that's not

00:27:57,919 --> 00:28:00,880
so that's just a general thing i think i

00:27:59,600 --> 00:28:02,960
copy that

00:28:00,880 --> 00:28:04,000
sorry about that but anyways so for

00:28:02,960 --> 00:28:07,679
audit logging

00:28:04,000 --> 00:28:11,120
um audit policy is

00:28:07,679 --> 00:28:15,200
really audit policy and also the

00:28:11,120 --> 00:28:17,679
let's say uh creativity that you can set

00:28:15,200 --> 00:28:18,960
for your audit logging and audit policy

00:28:17,679 --> 00:28:21,520
really takes the center stage

00:28:18,960 --> 00:28:22,960
in kubernetes especially in 119 there

00:28:21,520 --> 00:28:24,720
are a lot of things that you can set by

00:28:22,960 --> 00:28:27,679
default at cluster startup

00:28:24,720 --> 00:28:29,279
so that you can then pull logs down and

00:28:27,679 --> 00:28:32,000
view any changes in

00:28:29,279 --> 00:28:32,720
your kubernetes environment so again we

00:28:32,000 --> 00:28:36,799
can

00:28:32,720 --> 00:28:39,760
pull logs we can format logs we can

00:28:36,799 --> 00:28:40,559
set up how we want where we want our log

00:28:39,760 --> 00:28:42,159
back end to be

00:28:40,559 --> 00:28:43,520
so let's say we have a logging

00:28:42,159 --> 00:28:45,200
controller like something like fluid d

00:28:43,520 --> 00:28:46,080
that's installed on our control plane

00:28:45,200 --> 00:28:48,799
node

00:28:46,080 --> 00:28:50,320
we can tell fluid d to or flow bits to

00:28:48,799 --> 00:28:52,080
look at a specific

00:28:50,320 --> 00:28:54,880
file path that has our audit logs we

00:28:52,080 --> 00:28:54,880
ship it to our

00:28:55,120 --> 00:28:57,600
our logging setup and then we can view

00:28:56,559 --> 00:28:59,520
it all through there and then we can

00:28:57,600 --> 00:29:00,240
also control the types of logs that we

00:28:59,520 --> 00:29:02,720
want to see

00:29:00,240 --> 00:29:04,480
to that log backend so worth

00:29:02,720 --> 00:29:06,640
understanding how to set that up how to

00:29:04,480 --> 00:29:09,840
monitor it and the different

00:29:06,640 --> 00:29:11,520
functionalities that we can change

00:29:09,840 --> 00:29:13,919
uh immutability so i've mentioned this

00:29:11,520 --> 00:29:15,600
concept a couple times already

00:29:13,919 --> 00:29:17,200
container immutability so we're talking

00:29:15,600 --> 00:29:18,320
about image that is unchangeable once

00:29:17,200 --> 00:29:20,240
it's built

00:29:18,320 --> 00:29:22,399
which means no escalated permissions no

00:29:20,240 --> 00:29:25,440
mounted file systems no access

00:29:22,399 --> 00:29:27,360
to privileged linux capabilities

00:29:25,440 --> 00:29:28,960
we just want our container to do exactly

00:29:27,360 --> 00:29:31,279
what we tell it to do

00:29:28,960 --> 00:29:32,320
and not have the ability to change

00:29:31,279 --> 00:29:35,520
anything inside

00:29:32,320 --> 00:29:37,120
of of that container so

00:29:35,520 --> 00:29:38,960
understand immutability understand which

00:29:37,120 --> 00:29:42,320
of your workloads aren't immutable

00:29:38,960 --> 00:29:44,559
as well so that you are basically

00:29:42,320 --> 00:29:46,799
putting annotations and notifying

00:29:44,559 --> 00:29:48,799
um you know internally in your

00:29:46,799 --> 00:29:51,200
organization that these are

00:29:48,799 --> 00:29:53,440
somewhat more flawed workloads they

00:29:51,200 --> 00:29:55,840
require certain privileges and that

00:29:53,440 --> 00:29:59,279
we will pay you know so to speak more

00:29:55,840 --> 00:29:59,279
attention to these workloads right

00:29:59,360 --> 00:30:01,760
all right

00:30:03,279 --> 00:30:07,760
so there's a lot of questions

00:30:06,480 --> 00:30:09,200
i'm gonna go through general tips i'm

00:30:07,760 --> 00:30:10,640
gonna put some resources i got five more

00:30:09,200 --> 00:30:12,960
minutes left and then i'm gonna do

00:30:10,640 --> 00:30:14,320
about ten minutes and questions if i can

00:30:12,960 --> 00:30:17,440
so general tips

00:30:14,320 --> 00:30:20,480
from me on taking this

00:30:17,440 --> 00:30:21,600
review the documentation a lot of these

00:30:20,480 --> 00:30:24,320
questions

00:30:21,600 --> 00:30:25,919
can be asked by actually by reading the

00:30:24,320 --> 00:30:27,120
documentation that's given to you when

00:30:25,919 --> 00:30:28,159
you sign up for the exam the

00:30:27,120 --> 00:30:29,440
documentation is actually

00:30:28,159 --> 00:30:31,279
available before you sign up for the

00:30:29,440 --> 00:30:33,440
exam but

00:30:31,279 --> 00:30:34,640
again read the documentation they give

00:30:33,440 --> 00:30:37,279
you all the resources they give you the

00:30:34,640 --> 00:30:38,880
links that you're allowed to use

00:30:37,279 --> 00:30:40,399
a lot of the stuff that i that i'm

00:30:38,880 --> 00:30:41,440
talking about right here is pulled

00:30:40,399 --> 00:30:42,720
directly from

00:30:41,440 --> 00:30:45,600
the linux foundation and it's very

00:30:42,720 --> 00:30:47,600
thorough so when you get into the test

00:30:45,600 --> 00:30:49,360
take a breath drink some water you're

00:30:47,600 --> 00:30:51,039
allowed a clear water bottle

00:30:49,360 --> 00:30:53,039
and read each question and read each

00:30:51,039 --> 00:30:54,000
question thoroughly you will save a lot

00:30:53,039 --> 00:30:57,039
of time

00:30:54,000 --> 00:30:58,240
um by reading and understanding what's

00:30:57,039 --> 00:31:00,480
being asked of you

00:30:58,240 --> 00:31:01,760
because if you skip and maybe you come

00:31:00,480 --> 00:31:03,679
back you're like oh that's what was

00:31:01,760 --> 00:31:06,960
being asked

00:31:03,679 --> 00:31:07,519
then you might have an issue so just fyi

00:31:06,960 --> 00:31:10,159
read it

00:31:07,519 --> 00:31:11,120
uh bookmarks so my favorite thing to do

00:31:10,159 --> 00:31:14,399
for the cka

00:31:11,120 --> 00:31:16,000
cks is to bookmark resources so i'll go

00:31:14,399 --> 00:31:17,440
through and i'll say okay well

00:31:16,000 --> 00:31:19,120
you know this is a really good resource

00:31:17,440 --> 00:31:20,000
i like this i'm going to bookmark it

00:31:19,120 --> 00:31:21,679
maybe

00:31:20,000 --> 00:31:23,840
you know set up different issues you're

00:31:21,679 --> 00:31:26,000
allowed two different windows open

00:31:23,840 --> 00:31:28,080
so i have two screens i had one for the

00:31:26,000 --> 00:31:29,440
test i had one for

00:31:28,080 --> 00:31:31,679
basically anything that i was reading

00:31:29,440 --> 00:31:32,080
and you can copy paste back and forth as

00:31:31,679 --> 00:31:34,240
well

00:31:32,080 --> 00:31:35,120
so the bookmarks are really useful

00:31:34,240 --> 00:31:36,720
because if i had

00:31:35,120 --> 00:31:38,240
an example come up or if i need to

00:31:36,720 --> 00:31:38,799
access documentation i would just go

00:31:38,240 --> 00:31:40,240
boom

00:31:38,799 --> 00:31:42,240
click it i'm writing the document

00:31:40,240 --> 00:31:43,200
documentation where i want to be i don't

00:31:42,240 --> 00:31:47,360
have to spend time

00:31:43,200 --> 00:31:50,640
you know searching through for something

00:31:47,360 --> 00:31:52,399
uh recording tasks now when i previously

00:31:50,640 --> 00:31:53,600
took the cka there was a notepad

00:31:52,399 --> 00:31:55,519
i don't remember using the notepad

00:31:53,600 --> 00:31:56,640
functionality when i took the cks but

00:31:55,519 --> 00:31:58,960
there are flags

00:31:56,640 --> 00:32:00,559
so every single question you can flag to

00:31:58,960 --> 00:32:02,480
return or

00:32:00,559 --> 00:32:04,720
not flag to basically say hey like i

00:32:02,480 --> 00:32:06,799
think i answered this properly right

00:32:04,720 --> 00:32:09,360
i actually did the opposite so i flagged

00:32:06,799 --> 00:32:11,600
the questions that i thought i got

00:32:09,360 --> 00:32:12,960
and then at the end when i get to the

00:32:11,600 --> 00:32:13,519
last question i look and i just go boo

00:32:12,960 --> 00:32:14,880
boom

00:32:13,519 --> 00:32:16,080
okay there's four questions that i

00:32:14,880 --> 00:32:18,080
didn't get and i can kind of get a

00:32:16,080 --> 00:32:18,799
general sense of where i am point wise

00:32:18,080 --> 00:32:21,919
too

00:32:18,799 --> 00:32:22,640
so that was just my tip as to how i did

00:32:21,919 --> 00:32:25,679
it

00:32:22,640 --> 00:32:27,679
one little kind of funky thing is if the

00:32:25,679 --> 00:32:30,880
exam refreshes you lose those flags

00:32:27,679 --> 00:32:30,880
so just an fyi

00:32:30,960 --> 00:32:35,440
yeah so time is of the essence uh cube

00:32:33,760 --> 00:32:38,960
control cheat sheet

00:32:35,440 --> 00:32:41,279
uh you actually have it's by default

00:32:38,960 --> 00:32:42,720
uh cue control will auto complete in

00:32:41,279 --> 00:32:44,000
these environments now so you don't have

00:32:42,720 --> 00:32:47,679
to spend the time doing that

00:32:44,000 --> 00:32:50,080
just okay tab boom keep control

00:32:47,679 --> 00:32:52,000
save yourself some time i recommend

00:32:50,080 --> 00:32:55,120
being proficient in vi

00:32:52,000 --> 00:32:57,279
at least enough to do basic editing as

00:32:55,120 --> 00:32:58,240
uh it's already pre-formatted for yaml

00:32:57,279 --> 00:32:59,760
files so you don't have to worry about

00:32:58,240 --> 00:33:02,000
spacing just go in vi

00:32:59,760 --> 00:33:02,880
use it if you're doing the control edit

00:33:02,000 --> 00:33:05,440
it becomes

00:33:02,880 --> 00:33:06,159
a lot easier as well and then again pay

00:33:05,440 --> 00:33:07,600
attention to

00:33:06,159 --> 00:33:09,919
the question context you know that that

00:33:07,600 --> 00:33:10,480
cube control config whatever the cluster

00:33:09,919 --> 00:33:12,320
is

00:33:10,480 --> 00:33:14,080
and and which environment you're in so

00:33:12,320 --> 00:33:16,320
you don't uh you know get a little

00:33:14,080 --> 00:33:18,000
tripped up

00:33:16,320 --> 00:33:19,440
yes never write a yaml from scratch if

00:33:18,000 --> 00:33:22,399
you've done the cka

00:33:19,440 --> 00:33:24,080
you'll understand this dry run output it

00:33:22,399 --> 00:33:27,440
to a yaml file edit from there

00:33:24,080 --> 00:33:29,039
then apply it the cks actually gives you

00:33:27,440 --> 00:33:30,399
and in some questions not in every case

00:33:29,039 --> 00:33:31,919
but sometimes like they'll they'll give

00:33:30,399 --> 00:33:34,399
you sort of

00:33:31,919 --> 00:33:36,240
just the generic template of a yaml file

00:33:34,399 --> 00:33:37,679
because they understand obviously

00:33:36,240 --> 00:33:39,039
it used to be three hours now they've

00:33:37,679 --> 00:33:40,799
shortened it to two we can't have

00:33:39,039 --> 00:33:42,240
somebody just writing and doing dry runs

00:33:40,799 --> 00:33:43,519
on every single question right

00:33:42,240 --> 00:33:44,799
some of this stuff is just basic

00:33:43,519 --> 00:33:46,159
templates they give you a template but

00:33:44,799 --> 00:33:49,200
then you have to know how to apply it

00:33:46,159 --> 00:33:49,200
and what rules to set

00:33:49,279 --> 00:33:53,679
and then i've mentioned this already but

00:33:50,720 --> 00:33:56,799
when using an ssh or ssh into nodes

00:33:53,679 --> 00:33:58,399
ensure that you exit from the node uh to

00:33:56,799 --> 00:34:00,640
the central node before that you

00:33:58,399 --> 00:34:02,000
before you um take on any quest or other

00:34:00,640 --> 00:34:06,559
questions or use that

00:34:02,000 --> 00:34:08,000
cube control config command

00:34:06,559 --> 00:34:09,839
all right lastly resources because i've

00:34:08,000 --> 00:34:13,440
seen some questions about this as well

00:34:09,839 --> 00:34:15,389
so i actually just use my own personal

00:34:13,440 --> 00:34:16,480
resources so i put up the resources from

00:34:15,389 --> 00:34:18,320
[Music]

00:34:16,480 --> 00:34:20,800
my personal reboots on the bottom there

00:34:18,320 --> 00:34:23,679
i can i'll copy it into the chat as well

00:34:20,800 --> 00:34:24,320
after this but that's what i did a lot

00:34:23,679 --> 00:34:27,440
of

00:34:24,320 --> 00:34:31,520
that stuff was also somewhat pulled from

00:34:27,440 --> 00:34:32,079
walid so he is a great um a great ck uh

00:34:31,520 --> 00:34:34,800
ck

00:34:32,079 --> 00:34:35,440
and cks as well study guide great

00:34:34,800 --> 00:34:37,599
resource

00:34:35,440 --> 00:34:39,040
if you want to get in touch he'd be

00:34:37,599 --> 00:34:41,040
happy to help you he's always in the

00:34:39,040 --> 00:34:42,320
in the um in the kubernetes ecosystem

00:34:41,040 --> 00:34:44,079
he's in the cks

00:34:42,320 --> 00:34:45,440
join us on join it on slack and just

00:34:44,079 --> 00:34:46,960
ping him

00:34:45,440 --> 00:34:49,359
obviously don't i'll ping him right now

00:34:46,960 --> 00:34:51,440
because then i feel like i'm uh

00:34:49,359 --> 00:34:52,879
i'm telling everybody to go spam him but

00:34:51,440 --> 00:34:54,560
uh you know he's a really good resource

00:34:52,879 --> 00:34:57,760
and if you join the cks

00:34:54,560 --> 00:34:58,560
on uh the cncf the kubernetes slack i'm

00:34:57,760 --> 00:35:00,320
in there as well

00:34:58,560 --> 00:35:01,680
you can pay me with some questions and

00:35:00,320 --> 00:35:04,640
i'll be happy to help you

00:35:01,680 --> 00:35:04,960
without telling you too much obviously

00:35:04,640 --> 00:35:08,240
um

00:35:04,960 --> 00:35:08,800
killer sh i've heard some good things

00:35:08,240 --> 00:35:11,520
about it

00:35:08,800 --> 00:35:12,160
especially for the cki ckid i didn't use

00:35:11,520 --> 00:35:13,440
it

00:35:12,160 --> 00:35:15,680
it's been recommended to me by other

00:35:13,440 --> 00:35:16,079
people worth checking out i would

00:35:15,680 --> 00:35:19,280
definitely

00:35:16,079 --> 00:35:20,720
say that as much as you can kind of

00:35:19,280 --> 00:35:22,480
study for the ck a lot using something

00:35:20,720 --> 00:35:26,079
like mini cube

00:35:22,480 --> 00:35:27,200
the cks is a little bit more because you

00:35:26,079 --> 00:35:29,359
actually are

00:35:27,200 --> 00:35:30,400
using other tools going into nodes

00:35:29,359 --> 00:35:32,320
looking at

00:35:30,400 --> 00:35:34,000
you know supply chain security so

00:35:32,320 --> 00:35:37,520
there's more there

00:35:34,000 --> 00:35:40,560
i'm hoping that as the year progresses

00:35:37,520 --> 00:35:41,680
some other like i think udemy

00:35:40,560 --> 00:35:42,960
came out with the course as well so i'm

00:35:41,680 --> 00:35:45,200
hoping as a year progresses you get some

00:35:42,960 --> 00:35:48,480
better environments to study with

00:35:45,200 --> 00:35:50,160
and that that repo that i set up for the

00:35:48,480 --> 00:35:52,000
kubernetes security specialist guy study

00:35:50,160 --> 00:35:55,119
guide um

00:35:52,000 --> 00:35:55,520
i deploy a rancher and rke cluster so

00:35:55,119 --> 00:35:56,640
there's

00:35:55,520 --> 00:35:58,640
there's a whole walkthrough for

00:35:56,640 --> 00:36:00,960
deploying an r key cluster in gcp

00:35:58,640 --> 00:36:02,480
if you want a 119 cluster just very

00:36:00,960 --> 00:36:04,720
simply made that you can like tear up

00:36:02,480 --> 00:36:06,560
and tear down

00:36:04,720 --> 00:36:08,320
again the the other thing though

00:36:06,560 --> 00:36:09,839
obviously is that

00:36:08,320 --> 00:36:12,000
the kubernetes version you're using is

00:36:09,839 --> 00:36:15,280
set up with cube qadm

00:36:12,000 --> 00:36:16,400
119 so there are certain configuration

00:36:15,280 --> 00:36:18,160
differences between

00:36:16,400 --> 00:36:19,520
something like if you were to go use a

00:36:18,160 --> 00:36:22,720
cluster in gcp

00:36:19,520 --> 00:36:23,599
right we can't access the control plane

00:36:22,720 --> 00:36:26,640
node

00:36:23,599 --> 00:36:31,680
in uh cloud environments so

00:36:26,640 --> 00:36:31,680
it is kind of a steady gap i lit i'd say

00:36:33,920 --> 00:36:40,720
yeah i that's all i have so thank you

00:36:38,000 --> 00:36:43,040
now i'm going to there's a lot here so

00:36:40,720 --> 00:36:44,480
i'm going to get to as many as i can

00:36:43,040 --> 00:36:46,320
so in the curriculum there's a topic

00:36:44,480 --> 00:36:48,160
about mtls between pods

00:36:46,320 --> 00:36:50,000
uh do we have to expect a service mesh

00:36:48,160 --> 00:36:52,160
if yes which one it's

00:36:50,000 --> 00:36:53,839
if if you're using any sort of external

00:36:52,160 --> 00:36:55,200
tool it will be mentioned in the

00:36:53,839 --> 00:36:58,320
documentation

00:36:55,200 --> 00:36:58,320
that's all i'll say about that

00:37:00,320 --> 00:37:03,040
i'm prepping for the ck i just want

00:37:01,760 --> 00:37:05,520
another difference in percentage between

00:37:03,040 --> 00:37:08,720
cks and ck i believe the ck is 66

00:37:05,520 --> 00:37:11,440
the cks is 67 but again linux foundation

00:37:08,720 --> 00:37:14,560
documentation they have it there don't

00:37:11,440 --> 00:37:15,839
quote me on those percentages

00:37:14,560 --> 00:37:18,320
uh which parts should we focus on the

00:37:15,839 --> 00:37:20,320
most that really depends

00:37:18,320 --> 00:37:23,200
on where you are in your kubernetes

00:37:20,320 --> 00:37:26,880
journey so

00:37:23,200 --> 00:37:29,680
i'd say focus on all the parts i

00:37:26,880 --> 00:37:30,960
it from from my standpoint it was the

00:37:29,680 --> 00:37:34,160
hardest

00:37:30,960 --> 00:37:35,520
kubernetes exam out there and it

00:37:34,160 --> 00:37:37,119
requires

00:37:35,520 --> 00:37:38,720
more knowledge than just reading

00:37:37,119 --> 00:37:40,720
kubernetes documentation

00:37:38,720 --> 00:37:43,119
and understanding the concepts you have

00:37:40,720 --> 00:37:44,480
to actually apply some of these concepts

00:37:43,119 --> 00:37:46,400
and almost work with them in your

00:37:44,480 --> 00:37:49,680
day-to-day so i actually

00:37:46,400 --> 00:37:51,920
almost want to give kudos to

00:37:49,680 --> 00:37:54,720
the the people who are part of building

00:37:51,920 --> 00:37:57,040
this exam because i actually think that

00:37:54,720 --> 00:37:58,720
they made it as hard as it needed to be

00:37:57,040 --> 00:38:04,160
to force you to really understand what's

00:37:58,720 --> 00:38:07,359
going on

00:38:04,160 --> 00:38:09,119
uh any specific course killer sh yeah

00:38:07,359 --> 00:38:11,119
i i've heard a lot of people

00:38:09,119 --> 00:38:13,599
recommending that one as well i

00:38:11,119 --> 00:38:14,160
udemy udemy they came out with a course

00:38:13,599 --> 00:38:16,480
i have

00:38:14,160 --> 00:38:17,280
i didn't i was pretty early so it's

00:38:16,480 --> 00:38:20,320
interesting to see

00:38:17,280 --> 00:38:22,800
how those courses move into this year if

00:38:20,320 --> 00:38:23,920
i get more i'll probably recommend

00:38:22,800 --> 00:38:26,960
something in slack but i

00:38:23,920 --> 00:38:28,560
didn't need to use them um

00:38:26,960 --> 00:38:29,920
just really up to you i think it's

00:38:28,560 --> 00:38:33,839
worthwhile especially if they can give

00:38:29,920 --> 00:38:33,839
you a proper environment to study in

00:38:35,280 --> 00:38:41,200
iam roles yes i thought the use of iam

00:38:39,119 --> 00:38:43,200
specific roles in the cks

00:38:41,200 --> 00:38:44,960
topics was really weird so what is meant

00:38:43,200 --> 00:38:47,520
by the iam roles in system hardening are

00:38:44,960 --> 00:38:50,880
we interacting with aws

00:38:47,520 --> 00:38:52,560
no it's kubernetes environment iam roles

00:38:50,880 --> 00:38:54,240
are somewhat to make you understand

00:38:52,560 --> 00:38:55,040
especially the enforcement mechanism

00:38:54,240 --> 00:38:56,800
through the cluster

00:38:55,040 --> 00:38:58,640
so you have our back but then you have i

00:38:56,800 --> 00:38:59,040
am rules on top right that are pushing r

00:38:58,640 --> 00:39:00,800
back

00:38:59,040 --> 00:39:04,240
which are then enforcing something like

00:39:00,800 --> 00:39:04,240
upon security policy right

00:39:04,560 --> 00:39:07,599
just i think to get people's brains

00:39:07,040 --> 00:39:11,760
moving

00:39:07,599 --> 00:39:11,760
along the enforcement lines

00:39:12,960 --> 00:39:16,079
uh do you think it's relevant to dive

00:39:14,160 --> 00:39:18,720
deeper on sandbox runtimes their

00:39:16,079 --> 00:39:18,720
installation

00:39:19,040 --> 00:39:24,160
you don't have to

00:39:22,079 --> 00:39:25,359
install anything i believe i don't want

00:39:24,160 --> 00:39:27,280
to talk

00:39:25,359 --> 00:39:28,880
because i didn't you know they shuffle

00:39:27,280 --> 00:39:30,880
the questions so i didn't have to have

00:39:28,880 --> 00:39:32,640
uh anything like that but it's

00:39:30,880 --> 00:39:35,200
definitely worth understanding

00:39:32,640 --> 00:39:35,839
the different runtimes understanding

00:39:35,200 --> 00:39:39,119
kind of

00:39:35,839 --> 00:39:39,920
what they can be applied for and how we

00:39:39,119 --> 00:39:42,960
can secure

00:39:39,920 --> 00:39:45,440
workloads using different runtimes

00:39:42,960 --> 00:39:46,000
hopefully i didn't give away too much

00:39:45,440 --> 00:39:47,280
i'm not

00:39:46,000 --> 00:39:50,079
somebody's going to be in my ear like

00:39:47,280 --> 00:39:50,079
hey don't say that

00:39:51,119 --> 00:39:54,960
so two year validity if only they made

00:39:53,119 --> 00:39:58,320
all certs the same

00:39:54,960 --> 00:39:59,599
yes i personally think

00:39:58,320 --> 00:40:01,280
because i i believe it's like three

00:39:59,599 --> 00:40:02,800
years right for the cka and two years

00:40:01,280 --> 00:40:05,599
for the ckis

00:40:02,800 --> 00:40:06,720
um partially i just think because

00:40:05,599 --> 00:40:08,480
security tools

00:40:06,720 --> 00:40:10,079
will change like you've just seen they

00:40:08,480 --> 00:40:11,760
basically came out with this and then

00:40:10,079 --> 00:40:14,240
psps are being deprecated so

00:40:11,760 --> 00:40:15,520
you're you know by the time i have to

00:40:14,240 --> 00:40:17,440
take this again psps aren't going to be

00:40:15,520 --> 00:40:19,839
a thing

00:40:17,440 --> 00:40:22,160
you really need to kind of it kind of

00:40:19,839 --> 00:40:23,520
pushes you to keep up with the ecosystem

00:40:22,160 --> 00:40:25,280
same way that they're trying to push

00:40:23,520 --> 00:40:26,560
cluster upgrades take advantage of the

00:40:25,280 --> 00:40:28,480
new security and

00:40:26,560 --> 00:40:30,160
if you're stagnating in security you're

00:40:28,480 --> 00:40:33,839
behind kind of thing

00:40:30,160 --> 00:40:33,839
that's my sort of approach to it

00:40:34,319 --> 00:40:37,839
uh any trailer training available for

00:40:35,760 --> 00:40:38,640
the ckss again join the slack channel

00:40:37,839 --> 00:40:41,280
for cks

00:40:38,640 --> 00:40:43,040
get involved there is killer sh udemy

00:40:41,280 --> 00:40:44,079
there's a bunch of curated repos that

00:40:43,040 --> 00:40:46,880
people have pulled a bunch of different

00:40:44,079 --> 00:40:49,520
resources from

00:40:46,880 --> 00:40:49,520
good question though

00:40:51,040 --> 00:40:56,880
i believe you use ubuntu so during the

00:40:53,119 --> 00:40:58,720
exam you're using ubuntu 18.04 i believe

00:40:56,880 --> 00:41:01,200
so quote me on that again check out the

00:40:58,720 --> 00:41:02,960
documentation for a better

00:41:01,200 --> 00:41:06,000
answer as to what distribution you're

00:41:02,960 --> 00:41:10,000
going to be using on the test

00:41:06,000 --> 00:41:10,000
psp is deprecated on twenty one yes

00:41:13,839 --> 00:41:18,240
oh two means i don't buy so i'm not

00:41:15,839 --> 00:41:20,000
quite sure what's being asked there

00:41:18,240 --> 00:41:21,920
should be familiar with link or d

00:41:20,000 --> 00:41:23,760
answered that one so

00:41:21,920 --> 00:41:26,240
is there a must-know list of security

00:41:23,760 --> 00:41:26,240
tools

00:41:27,040 --> 00:41:32,720
the cncf uses cncf tools

00:41:30,880 --> 00:41:34,240
so understand the ecosystem and what the

00:41:32,720 --> 00:41:37,359
tools are trying to accomplish

00:41:34,240 --> 00:41:39,280
right so if you have a container scanner

00:41:37,359 --> 00:41:40,560
if you have a runtime detector if you

00:41:39,280 --> 00:41:42,000
have something that is policy

00:41:40,560 --> 00:41:43,760
enforcement on the node or policy

00:41:42,000 --> 00:41:46,000
enforcement in kubernetes

00:41:43,760 --> 00:41:46,880
understand what the tools are used for

00:41:46,000 --> 00:41:48,480
so that

00:41:46,880 --> 00:41:50,480
if you work an organization and somebody

00:41:48,480 --> 00:41:52,240
comes and says hey we want to install

00:41:50,480 --> 00:41:52,720
stack rocks or we want to install like

00:41:52,240 --> 00:41:55,359
aqua

00:41:52,720 --> 00:41:56,000
or something like that that you

00:41:55,359 --> 00:41:57,200
understand

00:41:56,000 --> 00:41:58,960
what those applications are

00:41:57,200 --> 00:42:00,720
accomplishing and where the gaps are in

00:41:58,960 --> 00:42:03,839
your security ecosystem

00:42:00,720 --> 00:42:03,839
hopefully that answers your question

00:42:04,160 --> 00:42:07,599
uh psps are being deprecated are they a

00:42:05,839 --> 00:42:09,760
big part of the cert

00:42:07,599 --> 00:42:11,440
uh yeah they anytime there's an

00:42:09,760 --> 00:42:13,680
enforcement mechanism in kubernetes they

00:42:11,440 --> 00:42:16,880
are going to play a role

00:42:13,680 --> 00:42:19,839
in what we test for right

00:42:16,880 --> 00:42:20,640
um if it's not psps it's going to be

00:42:19,839 --> 00:42:21,760
oppa

00:42:20,640 --> 00:42:23,680
or it's going to be some some sort of

00:42:21,760 --> 00:42:27,040
other enforcement mechanism

00:42:23,680 --> 00:42:27,040
hopefully that answers your question

00:42:27,119 --> 00:42:31,520
are we accessing the tools cube bench i

00:42:29,920 --> 00:42:35,280
don't believe you can go to github

00:42:31,520 --> 00:42:37,280
so the question was are we

00:42:35,280 --> 00:42:39,200
accessing are we able to access tools in

00:42:37,280 --> 00:42:40,079
the github repos so cube bench for

00:42:39,200 --> 00:42:42,000
example

00:42:40,079 --> 00:42:43,280
i don't believe so so the only

00:42:42,000 --> 00:42:46,640
documentation you can use

00:42:43,280 --> 00:42:48,560
is listed in the linux foundation and

00:42:46,640 --> 00:42:51,040
just understand that

00:42:48,560 --> 00:42:52,000
they don't ask a question that you can't

00:42:51,040 --> 00:42:54,160
actually discern

00:42:52,000 --> 00:42:55,359
a decent amount of information from that

00:42:54,160 --> 00:42:58,400
documentation

00:42:55,359 --> 00:43:00,160
right now you have two hours so

00:42:58,400 --> 00:43:02,319
if you're bookmarking something and you

00:43:00,160 --> 00:43:03,920
think hey i'll have enough time to read

00:43:02,319 --> 00:43:07,200
through this during the exam

00:43:03,920 --> 00:43:08,480
you won't uh understand what you are

00:43:07,200 --> 00:43:09,440
bookmarking and the different

00:43:08,480 --> 00:43:13,839
applications

00:43:09,440 --> 00:43:13,839
and before you get into the exam

00:43:14,960 --> 00:43:18,800
are the app armored profiles second

00:43:16,640 --> 00:43:22,880
provided or should we write it

00:43:18,800 --> 00:43:22,880
i don't want to give away too much but

00:43:23,200 --> 00:43:27,359
you have to think about time and the

00:43:25,440 --> 00:43:30,240
documentation that's provided to you

00:43:27,359 --> 00:43:33,200
you should know how to how to write

00:43:30,240 --> 00:43:35,200
profiles how to enforce them how to

00:43:33,200 --> 00:43:37,040
apply them right like that's a general

00:43:35,200 --> 00:43:38,839
lifecycle how do we apply and secure our

00:43:37,040 --> 00:43:42,640
nodes

00:43:38,839 --> 00:43:42,640
again important to know

00:43:43,359 --> 00:43:46,560
uh recommended training environment yes

00:43:44,800 --> 00:43:48,640
so this is the this is the toughest one

00:43:46,560 --> 00:43:51,599
and the question was do i have a

00:43:48,640 --> 00:43:53,680
recommended training environment

00:43:51,599 --> 00:43:55,040
i actually haven't used killer sh but i

00:43:53,680 --> 00:43:55,440
heard that they have everything that you

00:43:55,040 --> 00:43:57,359
need

00:43:55,440 --> 00:43:58,640
in terms of the other applications thing

00:43:57,359 --> 00:44:00,160
that i think things like that that are

00:43:58,640 --> 00:44:03,280
installed

00:44:00,160 --> 00:44:04,480
it is it uses cube adm and you need to

00:44:03,280 --> 00:44:06,720
be able to understand

00:44:04,480 --> 00:44:08,319
the components how to configure them how

00:44:06,720 --> 00:44:10,960
to restart them how to

00:44:08,319 --> 00:44:12,560
you know secure them and those things so

00:44:10,960 --> 00:44:14,560
you know as much as like my environment

00:44:12,560 --> 00:44:15,760
i used a rancher cluster to create it

00:44:14,560 --> 00:44:17,680
and then i went through basically

00:44:15,760 --> 00:44:19,760
everything in kubernetes

00:44:17,680 --> 00:44:23,440
there's more to the security ecosystem

00:44:19,760 --> 00:44:25,119
so get an environment that gives you

00:44:23,440 --> 00:44:27,839
basically access to all of those

00:44:25,119 --> 00:44:27,839
different components

00:44:30,720 --> 00:44:35,599
uh waiting for the demo no demo i'm

00:44:33,839 --> 00:44:37,359
sorry this is all slides and

00:44:35,599 --> 00:44:39,359
me rambling so thank you again for

00:44:37,359 --> 00:44:41,839
joining sorry no demo

00:44:39,359 --> 00:44:43,520
uh how much deep knowledge required in

00:44:41,839 --> 00:44:46,880
opa for cks

00:44:43,520 --> 00:44:47,839
so again documentation find the things

00:44:46,880 --> 00:44:49,440
on opa

00:44:47,839 --> 00:44:51,280
that will probably give you the answers

00:44:49,440 --> 00:44:52,640
to your question about how much opa you

00:44:51,280 --> 00:44:54,640
need to know

00:44:52,640 --> 00:44:56,560
uh falco yes sorry i forgot to mention

00:44:54,640 --> 00:44:59,040
falco in these slides

00:44:56,560 --> 00:45:00,000
thanks uh pavel for mentioning that uh

00:44:59,040 --> 00:45:02,079
falco

00:45:00,000 --> 00:45:03,200
uh falco and cystic i think are both

00:45:02,079 --> 00:45:05,280
mentioned although i was kind of curious

00:45:03,200 --> 00:45:06,480
about systig but falco is a cncf open

00:45:05,280 --> 00:45:08,160
source tool

00:45:06,480 --> 00:45:10,640
for runtime detection you can configure

00:45:08,160 --> 00:45:13,839
it the documentation is there also worth

00:45:10,640 --> 00:45:14,880
knowing how falco you know gathers

00:45:13,839 --> 00:45:16,000
runtime

00:45:14,880 --> 00:45:17,119
is a runtime detection tool that will

00:45:16,000 --> 00:45:19,040
tell you all the information about

00:45:17,119 --> 00:45:22,160
things like escalated privileges and

00:45:19,040 --> 00:45:23,599
you know maybe some processes mounting a

00:45:22,160 --> 00:45:24,240
file system it shouldn't and things like

00:45:23,599 --> 00:45:25,839
that so

00:45:24,240 --> 00:45:29,599
thanks to the reminder and falco's

00:45:25,839 --> 00:45:29,599
definitely look uh worth looking into

00:45:30,400 --> 00:45:34,240
and i believe i have i have three

00:45:33,440 --> 00:45:36,880
minutes left

00:45:34,240 --> 00:45:37,280
so i'm just gonna try to speed through

00:45:36,880 --> 00:45:38,800
this

00:45:37,280 --> 00:45:41,200
what documentation is allowed during the

00:45:38,800 --> 00:45:44,400
exam linux foundation will tell you

00:45:41,200 --> 00:45:45,599
it's like kubernetes like falco app

00:45:44,400 --> 00:45:49,359
armor like all that stuff

00:45:45,599 --> 00:45:49,359
it'll be there check it out

00:45:49,599 --> 00:45:52,880
uh could i please provide links

00:45:53,839 --> 00:45:58,880
sure i will do that right after i'm done

00:45:57,119 --> 00:46:00,560
this i'll go back in the slide and i'll

00:45:58,880 --> 00:46:03,839
copy all my links into there

00:46:00,560 --> 00:46:03,839
i've cleared the ck exam

00:46:03,920 --> 00:46:07,839
to get into jobs bronson so great

00:46:06,240 --> 00:46:11,040
question

00:46:07,839 --> 00:46:12,400
you've done the cka exam and

00:46:11,040 --> 00:46:14,240
you want to leverage that into a

00:46:12,400 --> 00:46:16,720
kubernetes job i would recommend

00:46:14,240 --> 00:46:17,839
getting involved in the cncf ecosystem

00:46:16,720 --> 00:46:19,200
getting on slack

00:46:17,839 --> 00:46:21,200
looking at projects looking at how to

00:46:19,200 --> 00:46:22,880
deploy projects

00:46:21,200 --> 00:46:24,640
maybe it's like i deploy a kubernetes

00:46:22,880 --> 00:46:26,800
cluster and then i install some cncf

00:46:24,640 --> 00:46:28,560
components and i create a whole stack

00:46:26,800 --> 00:46:30,480
and then i you know save all that into

00:46:28,560 --> 00:46:31,280
github and i use as a profile to say

00:46:30,480 --> 00:46:34,160
that i

00:46:31,280 --> 00:46:35,520
have more than just a certificate right

00:46:34,160 --> 00:46:37,520
i always think the ck

00:46:35,520 --> 00:46:38,880
is a good knowledge base to start but

00:46:37,520 --> 00:46:41,359
then you have to actually apply

00:46:38,880 --> 00:46:42,960
a lot of these things into if you want

00:46:41,359 --> 00:46:44,240
to leverage it for a job right if i've

00:46:42,960 --> 00:46:45,839
been working kubernetes for a while and

00:46:44,240 --> 00:46:47,760
i want to get into cks

00:46:45,839 --> 00:46:49,680
into more security space well then i

00:46:47,760 --> 00:46:50,880
might you know i already have existing

00:46:49,680 --> 00:46:52,720
kubernetes knowledge that i can leverage

00:46:50,880 --> 00:46:57,839
to move into the security space

00:46:52,720 --> 00:46:57,839
just hopefully that helps

00:47:00,000 --> 00:47:05,200
can the bookmarks be non-cncf sites the

00:47:02,400 --> 00:47:06,560
bookmarks can only be what is allowed

00:47:05,200 --> 00:47:08,000
in that documentation so it'll say

00:47:06,560 --> 00:47:09,839
kubernetes.io that means you can

00:47:08,000 --> 00:47:12,240
bookmark anything on the kubernetes.io

00:47:09,839 --> 00:47:12,240
webpage

00:47:13,200 --> 00:47:16,240
you're allowed two monitors or two

00:47:14,480 --> 00:47:19,040
browser windows you're allowed two

00:47:16,240 --> 00:47:19,040
browser windows

00:47:19,920 --> 00:47:24,319
you're allowed two screens yes url

00:47:22,640 --> 00:47:28,079
you're allowed two screens i actually i

00:47:24,319 --> 00:47:28,079
have three screens i have like my um

00:47:28,400 --> 00:47:31,440
laptop and two screens here and they

00:47:30,800 --> 00:47:34,319
just look they

00:47:31,440 --> 00:47:36,240
they just monitor all three screens i

00:47:34,319 --> 00:47:38,559
recommend you using two screens actually

00:47:36,240 --> 00:47:39,760
i just find it really useful then going

00:47:38,559 --> 00:47:42,800
back and forth

00:47:39,760 --> 00:47:42,800
uh between web pages

00:47:46,640 --> 00:47:50,319
uh which questions are harder or more

00:47:48,400 --> 00:47:51,280
weighted no i can't do that i'm sorry i

00:47:50,319 --> 00:47:55,599
don't think i can

00:47:51,280 --> 00:47:59,440
tell you which ones have more weight

00:47:55,599 --> 00:47:59,440
unfortunately but

00:48:01,839 --> 00:48:05,359
see he has to give you the same time

00:48:03,599 --> 00:48:08,880
pressure feeling

00:48:05,359 --> 00:48:12,480
like the ck or ckd did

00:48:08,880 --> 00:48:15,839
that's a great question i

00:48:12,480 --> 00:48:15,839
i thought the cks

00:48:15,920 --> 00:48:20,160
hmm i think the time pressure mostly

00:48:18,400 --> 00:48:22,880
comes from

00:48:20,160 --> 00:48:24,400
the format when you first get in there

00:48:22,880 --> 00:48:29,200
so i took the cka

00:48:24,400 --> 00:48:30,319
and i took it almost two years ago now

00:48:29,200 --> 00:48:31,680
and it was a little bit of a different

00:48:30,319 --> 00:48:32,720
environment it's since been upgraded and

00:48:31,680 --> 00:48:34,400
there's more features

00:48:32,720 --> 00:48:36,160
and functionality that makes it easier

00:48:34,400 --> 00:48:38,960
to take now

00:48:36,160 --> 00:48:41,440
i didn't find the exam i thought the

00:48:38,960 --> 00:48:43,760
exam was actually

00:48:41,440 --> 00:48:45,200
really well weighted and that you were

00:48:43,760 --> 00:48:46,480
given enough time to go through all the

00:48:45,200 --> 00:48:47,920
questions

00:48:46,480 --> 00:48:50,000
it really just comes down to how you

00:48:47,920 --> 00:48:51,359
navigate it you know do you read

00:48:50,000 --> 00:48:52,480
properly read the instructions and

00:48:51,359 --> 00:48:53,599
really understand what's going on

00:48:52,480 --> 00:48:55,119
because some questions will have a

00:48:53,599 --> 00:48:56,800
couple things that you need to do

00:48:55,119 --> 00:48:58,400
and if you understand what's being asked

00:48:56,800 --> 00:48:59,920
you'll know exactly where to go

00:48:58,400 --> 00:49:01,920
and what to edit and what to change and

00:48:59,920 --> 00:49:05,280
what to apply and what to look at

00:49:01,920 --> 00:49:07,200
so it's more of a take a breath

00:49:05,280 --> 00:49:12,319
understand and read

00:49:07,200 --> 00:49:12,319
before you act that's what i'll say

00:49:15,359 --> 00:49:18,640
all right i'm gonna i'm gonna steal two

00:49:17,119 --> 00:49:19,359
more minutes because there's a bunch

00:49:18,640 --> 00:49:22,960
more

00:49:19,359 --> 00:49:24,079
uh yeah so you know hello

00:49:22,960 --> 00:49:27,119
i do have an administrator i got for the

00:49:24,079 --> 00:49:29,440
ck no i don't but uh willie does

00:49:27,119 --> 00:49:30,559
and i recommend going to the cta on

00:49:29,440 --> 00:49:32,559
slack

00:49:30,559 --> 00:49:34,000
as well for the kubernetes there's a

00:49:32,559 --> 00:49:36,400
bunch of resources and people that will

00:49:34,000 --> 00:49:36,400
help you

00:49:37,520 --> 00:49:40,559
anything to be concerned about container

00:49:38,800 --> 00:49:42,480
runtime being changed to docker

00:49:40,559 --> 00:49:44,480
no i'm not worried at all about that i

00:49:42,480 --> 00:49:45,520
think it's a little bit overblown

00:49:44,480 --> 00:49:47,599
can you copy the links from the last

00:49:45,520 --> 00:49:48,000
slide yes i will can share my bookmark

00:49:47,599 --> 00:49:51,119
list

00:49:48,000 --> 00:49:54,240
no i will not do that i'm sorry

00:49:51,119 --> 00:49:59,599
i can't uh i can't be giving away stuff

00:49:54,240 --> 00:50:02,319
like that

00:49:59,599 --> 00:50:03,760
falco plus audit events um yep that's

00:50:02,319 --> 00:50:04,880
also worth knowing falco and auditing

00:50:03,760 --> 00:50:08,079
events

00:50:04,880 --> 00:50:09,200
uh how do we join the ckss on slack app

00:50:08,079 --> 00:50:11,839
if you join a workspace join the

00:50:09,200 --> 00:50:13,440
kubernetes workspace on slack

00:50:11,839 --> 00:50:14,800
i'm sure if you if you go to linux

00:50:13,440 --> 00:50:15,680
foundation they have a bunch of links

00:50:14,800 --> 00:50:19,280
there too

00:50:15,680 --> 00:50:19,280
for all of their different environments

00:50:22,480 --> 00:50:28,319
yes the the way the questions appear on

00:50:26,240 --> 00:50:32,480
screen can kind of be

00:50:28,319 --> 00:50:32,480
a little nerve-wracking sometimes

00:50:35,119 --> 00:50:38,079
can we complete these questions under

00:50:36,240 --> 00:50:39,119
six minutes uh yeah thank you that's a

00:50:38,079 --> 00:50:42,160
great question uh

00:50:39,119 --> 00:50:44,559
time so you do only have so much time

00:50:42,160 --> 00:50:45,760
right so if you read a question and you

00:50:44,559 --> 00:50:47,280
think oh this is going to take 20

00:50:45,760 --> 00:50:49,680
minutes to do

00:50:47,280 --> 00:50:50,640
you read it wrong most of these

00:50:49,680 --> 00:50:55,200
questions can be done

00:50:50,640 --> 00:50:56,640
in in honestly two to seven minutes

00:50:55,200 --> 00:50:58,720
it just really comes down to what you

00:50:56,640 --> 00:51:01,760
spend the time on and and your workflow

00:50:58,720 --> 00:51:04,319
so with that i'm going to wrap it up

00:51:01,760 --> 00:51:06,240
if you have more questions i'll uh i'll

00:51:04,319 --> 00:51:09,680
be in the cncf slack i'm going to

00:51:06,240 --> 00:51:12,000
copy the

00:51:09,680 --> 00:51:15,280
basically all of this these resources

00:51:12,000 --> 00:51:18,240
into the chat real quick

00:51:15,280 --> 00:51:18,240
hopefully that's in there

00:51:19,839 --> 00:51:26,000
for you guys to check out and

00:51:24,079 --> 00:51:27,119
you can ping me in the yeah you ping me

00:51:26,000 --> 00:51:29,839
in the slack channel

00:51:27,119 --> 00:51:31,359
if i can get a link or go to linux

00:51:29,839 --> 00:51:33,520
foundation they definitely have it there

00:51:31,359 --> 00:51:36,160
but the kubernetes slack channel i'm in

00:51:33,520 --> 00:51:38,000
there i'm in the cks ck ckid wherever

00:51:36,160 --> 00:51:39,839
send me a message i'll be happy to

00:51:38,000 --> 00:51:42,240
answer any questions so

00:51:39,839 --> 00:51:44,160
uh thanks to the linux foundation for

00:51:42,240 --> 00:51:47,280
having me

00:51:44,160 --> 00:51:48,800
i like talking about this so and and

00:51:47,280 --> 00:51:49,119
really kind of pushing security forward

00:51:48,800 --> 00:51:52,160
so

00:51:49,119 --> 00:51:52,160
thanks again for having me and

00:51:52,240 --> 00:51:56,160
yeah paying me any time with your

00:51:53,920 --> 00:51:58,079
security questions

00:51:56,160 --> 00:51:59,200
thank you so much michael and as you can

00:51:58,079 --> 00:52:00,880
see um

00:51:59,200 --> 00:52:02,400
the links that he provided are in the

00:52:00,880 --> 00:52:04,160
chat window so everyone should be able

00:52:02,400 --> 00:52:05,680
to grab those there

00:52:04,160 --> 00:52:07,280
but thank you again michael for your

00:52:05,680 --> 00:52:09,280
time today thank you to all of our

00:52:07,280 --> 00:52:11,599
participants who joined us

00:52:09,280 --> 00:52:13,920
um the recording will be on the linux

00:52:11,599 --> 00:52:15,040
foundation youtube page later today so

00:52:13,920 --> 00:52:16,720
check it out

00:52:15,040 --> 00:52:23,599
um and we hope you can join us for our

00:52:16,720 --> 00:52:23,599

YouTube URL: https://www.youtube.com/watch?v=Ny3p0UKBcYs


