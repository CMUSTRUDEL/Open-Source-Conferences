Title: LF Live Webinar: Monitoring a Raspberry Pi Kubernetes Cluster with New Relic
Publication date: 2021-02-17
Playlist: LF Live Webinars
Description: 
	
Captions: 
	00:00:00,340 --> 00:00:17,840
[Music]

00:00:15,759 --> 00:00:20,960
hello internet

00:00:17,840 --> 00:00:22,720
you see me okay i hope

00:00:20,960 --> 00:00:23,920
i imagine everyone is i can't see you

00:00:22,720 --> 00:00:25,519
all raising your hands so we're just

00:00:23,920 --> 00:00:28,560
gonna have to assume that you can

00:00:25,519 --> 00:00:30,400
for now so you're looking at a screen

00:00:28,560 --> 00:00:31,599
that says hello kubecon on it in giant

00:00:30,400 --> 00:00:33,280
ascii letters

00:00:31,599 --> 00:00:34,719
which is in fact exactly what we are

00:00:33,280 --> 00:00:36,719
going to build today

00:00:34,719 --> 00:00:38,079
we're going to be doing it on raspberry

00:00:36,719 --> 00:00:41,280
pi's though using

00:00:38,079 --> 00:00:43,040
a kubernetes cluster and a open source

00:00:41,280 --> 00:00:45,600
framework called open fast

00:00:43,040 --> 00:00:47,120
to deploy serverless functions so it's

00:00:45,600 --> 00:00:48,800
effectively i believe

00:00:47,120 --> 00:00:50,879
one of the more complicated ways on

00:00:48,800 --> 00:00:52,320
earth to generate ascii art i'm pretty

00:00:50,879 --> 00:00:55,120
excited about it

00:00:52,320 --> 00:00:56,160
so we have about half an hour i

00:00:55,120 --> 00:00:58,640
understand

00:00:56,160 --> 00:01:00,800
i'm going to jump right in here but you

00:00:58,640 --> 00:01:02,399
have a q a function here and you can go

00:01:00,800 --> 00:01:04,159
ahead and ask me questions and i'll try

00:01:02,399 --> 00:01:04,879
my best to answer you as we go along

00:01:04,159 --> 00:01:07,360
here

00:01:04,879 --> 00:01:09,200
but let's start off by showing you this

00:01:07,360 --> 00:01:10,159
here these are the raspberry pi's that

00:01:09,200 --> 00:01:12,880
we're working with

00:01:10,159 --> 00:01:14,240
this is a raspberry pi 4 if a camera

00:01:12,880 --> 00:01:16,560
fixes it up there yep

00:01:14,240 --> 00:01:18,080
this is the 4b the newest one it's got a

00:01:16,560 --> 00:01:19,280
big heat sink on it so it's a little bit

00:01:18,080 --> 00:01:20,479
hard to see right now

00:01:19,280 --> 00:01:22,320
but along the side you can see you've

00:01:20,479 --> 00:01:24,240
got gpio ports i'm powering this

00:01:22,320 --> 00:01:24,799
heatsink on the top with the two fans on

00:01:24,240 --> 00:01:27,520
it

00:01:24,799 --> 00:01:29,280
you've got an ethernet port here and usb

00:01:27,520 --> 00:01:32,799
on the side you've got a couple of the

00:01:29,280 --> 00:01:34,799
usb micro ports one of them doubles as a

00:01:32,799 --> 00:01:35,759
well either of them doubles as a micro

00:01:34,799 --> 00:01:37,920
hdmi port

00:01:35,759 --> 00:01:39,360
you have the usb c port and you put in

00:01:37,920 --> 00:01:42,479
the sd card over here

00:01:39,360 --> 00:01:43,200
that's what you need for an entire

00:01:42,479 --> 00:01:45,360
computer

00:01:43,200 --> 00:01:46,560
and with four of them you make an entire

00:01:45,360 --> 00:01:50,720
cluster

00:01:46,560 --> 00:01:52,799
so uh we are going to be burning our

00:01:50,720 --> 00:01:54,159
raspberry pi images here to these sd

00:01:52,799 --> 00:01:55,040
cards i've actually already burnt the

00:01:54,159 --> 00:01:58,560
images but they're

00:01:55,040 --> 00:02:01,759
just fresh raspbs images on the cards

00:01:58,560 --> 00:02:04,000
and then we're going to go and ssh

00:02:01,759 --> 00:02:05,680
into each of the pies as we boot them up

00:02:04,000 --> 00:02:08,640
and install kubernetes

00:02:05,680 --> 00:02:09,920
from scratch using uh well actually uh

00:02:08,640 --> 00:02:11,599
k3s

00:02:09,920 --> 00:02:12,959
a lightweight version of kubernetes that

00:02:11,599 --> 00:02:15,120
runs well on

00:02:12,959 --> 00:02:16,879
raspberry pi's and then we're going to

00:02:15,120 --> 00:02:19,040
deploy openfast

00:02:16,879 --> 00:02:20,640
to that new cluster that we've built

00:02:19,040 --> 00:02:21,840
we're going to create a function

00:02:20,640 --> 00:02:24,000
and finally we're going to monitor the

00:02:21,840 --> 00:02:25,520
whole thing with your relic or that is

00:02:24,000 --> 00:02:27,920
the ideal case so

00:02:25,520 --> 00:02:29,200
we'll see how that all goes for us but

00:02:27,920 --> 00:02:29,840
we'd better get started if we're going

00:02:29,200 --> 00:02:31,920
to make it

00:02:29,840 --> 00:02:33,360
so let's get back over here to my

00:02:31,920 --> 00:02:38,879
terminal

00:02:33,360 --> 00:02:42,000
and i will throw these cards in here

00:02:38,879 --> 00:02:42,640
i'm just going to put one of these in

00:02:42,000 --> 00:02:45,680
here so

00:02:42,640 --> 00:02:47,360
raspios has a partition called boot

00:02:45,680 --> 00:02:48,640
that'll mount on any operating system

00:02:47,360 --> 00:02:50,400
you're using and you can manipulate

00:02:48,640 --> 00:02:51,760
files on this boot partition

00:02:50,400 --> 00:02:53,280
to do interesting things with the

00:02:51,760 --> 00:02:54,239
raspberry pi and one of those things you

00:02:53,280 --> 00:02:58,159
can do

00:02:54,239 --> 00:02:59,280
is to enable ssh so that's our first

00:02:58,159 --> 00:03:01,920
step here

00:02:59,280 --> 00:03:02,319
so this is our boot boot directory here

00:03:01,920 --> 00:03:03,840
and

00:03:02,319 --> 00:03:06,159
a lot of the times when you need to

00:03:03,840 --> 00:03:09,760
repair a a raspberry pi

00:03:06,159 --> 00:03:12,239
um you're going to be doing a repair

00:03:09,760 --> 00:03:13,360
on some file in here to modify it and

00:03:12,239 --> 00:03:14,560
that's why it's important that it boot

00:03:13,360 --> 00:03:16,720
on anything

00:03:14,560 --> 00:03:18,319
we have a question docker images on the

00:03:16,720 --> 00:03:22,319
sd card yes

00:03:18,319 --> 00:03:24,159
we are going to be deploying containers

00:03:22,319 --> 00:03:26,239
to the kubernetes cluster not

00:03:24,159 --> 00:03:29,440
necessarily docker containers

00:03:26,239 --> 00:03:32,400
so we are going to touch on this file

00:03:29,440 --> 00:03:36,000
on this this boot volume an ssh file

00:03:32,400 --> 00:03:37,519
this empty file then will tell

00:03:36,000 --> 00:03:39,120
the raspberry pi when it boots up to

00:03:37,519 --> 00:03:40,560
enable ssh by default

00:03:39,120 --> 00:03:41,760
and that's really all you need to do

00:03:40,560 --> 00:03:43,680
once you've installed the operating

00:03:41,760 --> 00:03:44,720
system is turn on ssh so when it boots

00:03:43,680 --> 00:03:46,720
up because we're doing this in a

00:03:44,720 --> 00:03:48,239
headless environment if we had a monitor

00:03:46,720 --> 00:03:49,040
hooked up it would be easy to do it that

00:03:48,239 --> 00:03:50,799
way

00:03:49,040 --> 00:03:51,840
but we aren't going to hook up a monitor

00:03:50,799 --> 00:03:53,680
in this case so i'm going to go ahead

00:03:51,840 --> 00:03:56,480
and plug the rest of these in here

00:03:53,680 --> 00:03:58,640
and we'll see them appear as different

00:03:56,480 --> 00:04:01,840
versions of boot

00:03:58,640 --> 00:04:06,640
they should all mount that boot drive

00:04:01,840 --> 00:04:09,280
got four cards let's see here

00:04:06,640 --> 00:04:11,680
so i can actually touch the same on

00:04:09,280 --> 00:04:15,200
volumes boot

00:04:11,680 --> 00:04:18,799
one ssh

00:04:15,200 --> 00:04:22,320
and two and three

00:04:18,799 --> 00:04:24,639
assuming they are all live now

00:04:22,320 --> 00:04:25,440
all right looks like that worked so now

00:04:24,639 --> 00:04:29,040
i'm gonna go

00:04:25,440 --> 00:04:32,800
and use disk utility to eject the drives

00:04:29,040 --> 00:04:35,840
starting with disk 4

00:04:32,800 --> 00:04:38,160
disk 4 has been ejected and we are doing

00:04:35,840 --> 00:04:42,160
then disk 5

00:04:38,160 --> 00:04:46,400
disc 6 and for some reason it usually

00:04:42,160 --> 00:04:47,840
skips eight so i bet that this last one

00:04:46,400 --> 00:04:49,520
is actually going to be

00:04:47,840 --> 00:04:50,960
or it usually skips seven and goes to

00:04:49,520 --> 00:04:53,759
eight

00:04:50,960 --> 00:04:54,720
now let's try seven it was seven all

00:04:53,759 --> 00:04:56,080
right look at that

00:04:54,720 --> 00:04:58,080
so now we've got all four of our cards

00:04:56,080 --> 00:04:59,360
ejected and when i put them into these

00:04:58,080 --> 00:05:02,240
pies here

00:04:59,360 --> 00:05:03,919
the pies will boot up with ssh access

00:05:02,240 --> 00:05:07,039
we'll be able to ssh in

00:05:03,919 --> 00:05:08,880
on the first boot of a raspberry pi

00:05:07,039 --> 00:05:10,759
they actually will join the local

00:05:08,880 --> 00:05:12,720
network with a hostname

00:05:10,759 --> 00:05:14,639
raspberrypi.local so you want to boot

00:05:12,720 --> 00:05:17,680
them all one of the time

00:05:14,639 --> 00:05:19,039
as you're booting them up you'll be able

00:05:17,680 --> 00:05:20,560
to get in there and make some small

00:05:19,039 --> 00:05:22,000
modifications i'll walk you through the

00:05:20,560 --> 00:05:22,960
first one and then i'll just kind of fly

00:05:22,000 --> 00:05:24,720
through them

00:05:22,960 --> 00:05:27,120
without much explanation on the others

00:05:24,720 --> 00:05:29,199
but there's a lot to

00:05:27,120 --> 00:05:31,120
get changed on these pies we want to

00:05:29,199 --> 00:05:32,000
change the password first of all

00:05:31,120 --> 00:05:33,759
when you're playing around with

00:05:32,000 --> 00:05:35,520
kubernetes it's actually quite easy to

00:05:33,759 --> 00:05:36,800
accidentally expose your cluster to the

00:05:35,520 --> 00:05:38,240
internet

00:05:36,800 --> 00:05:40,320
and you want to make sure that you have

00:05:38,240 --> 00:05:41,680
a secure password in addition to that

00:05:40,320 --> 00:05:44,320
though we're going to take the extra

00:05:41,680 --> 00:05:46,960
measure of turning off password logins

00:05:44,320 --> 00:05:48,160
for our raspberry pi's so that we won't

00:05:46,960 --> 00:05:51,600
be able to do that so i've got

00:05:48,160 --> 00:05:54,960
ethernet here and i'll power this one up

00:05:51,600 --> 00:05:58,720
and very shortly we should see that one

00:05:54,960 --> 00:06:03,360
come online as raspberry pi dot local

00:05:58,720 --> 00:06:05,199
and got back over here to the desk

00:06:03,360 --> 00:06:07,600
so you can kind of see what i'm doing

00:06:05,199 --> 00:06:09,520
here i'm just plugging in all the pies

00:06:07,600 --> 00:06:11,280
this is just the ethernet cables here

00:06:09,520 --> 00:06:12,880
i'm not going to power them up until i'm

00:06:11,280 --> 00:06:15,520
ready to go and add them

00:06:12,880 --> 00:06:16,560
because again i don't want the raspberry

00:06:15,520 --> 00:06:18,720
pi local

00:06:16,560 --> 00:06:20,319
hostname to get used multiple times the

00:06:18,720 --> 00:06:21,680
second time one logs on the network and

00:06:20,319 --> 00:06:23,120
tries to get the

00:06:21,680 --> 00:06:25,280
the same hostname as the first we're

00:06:23,120 --> 00:06:29,039
gonna have a problem of course so

00:06:25,280 --> 00:06:31,840
here we go this first one if you can see

00:06:29,039 --> 00:06:33,360
on the side here has a little green

00:06:31,840 --> 00:06:34,880
blinking light that indicates that it's

00:06:33,360 --> 00:06:37,120
writing to the sd card

00:06:34,880 --> 00:06:38,400
so the first time a raspberry pi boots

00:06:37,120 --> 00:06:41,919
it will be expanding

00:06:38,400 --> 00:06:43,440
its uh partition it's

00:06:41,919 --> 00:06:45,360
expanding the partition to the full size

00:06:43,440 --> 00:06:46,800
of the sd card so we've installed the

00:06:45,360 --> 00:06:49,840
raspbian operating system

00:06:46,800 --> 00:06:50,240
raspbias it's now called raspbias and it

00:06:49,840 --> 00:06:52,319
is

00:06:50,240 --> 00:06:54,160
uh normally much smaller it doesn't know

00:06:52,319 --> 00:06:57,039
how large your sd card is so these are

00:06:54,160 --> 00:06:58,479
quite large these are 128 gig um cards

00:06:57,039 --> 00:06:59,280
which i actually would not recommend

00:06:58,479 --> 00:07:01,039
that you use

00:06:59,280 --> 00:07:02,479
you do want to use nicer cards so you

00:07:01,039 --> 00:07:06,000
have the speed but

00:07:02,479 --> 00:07:09,280
they um they do get um destroyed

00:07:06,000 --> 00:07:11,919
actually and i have a request for oh

00:07:09,280 --> 00:07:13,680
yeah of course

00:07:11,919 --> 00:07:15,919
the request was to turn off my dang

00:07:13,680 --> 00:07:18,000
music and that's totally fair

00:07:15,919 --> 00:07:20,160
thank you for mentioning that the point

00:07:18,000 --> 00:07:21,840
was that the music is distracting for

00:07:20,160 --> 00:07:23,280
people who are non-native english

00:07:21,840 --> 00:07:25,520
speakers to keep up with

00:07:23,280 --> 00:07:27,039
so as i was saying this is expanding now

00:07:25,520 --> 00:07:28,800
to the full size and as you can see it's

00:07:27,039 --> 00:07:31,440
now just a red light

00:07:28,800 --> 00:07:32,880
so this means that it is basically done

00:07:31,440 --> 00:07:34,000
and i can go back over here to my

00:07:32,880 --> 00:07:39,120
terminal

00:07:34,000 --> 00:07:43,840
and i will

00:07:39,120 --> 00:07:46,319
ssh to pi at raspberry

00:07:43,840 --> 00:07:46,319
local

00:07:47,520 --> 00:07:51,280
and i'm actually going to use some

00:07:49,440 --> 00:07:51,919
command line arguments to make sure that

00:07:51,280 --> 00:07:55,440
i don't

00:07:51,919 --> 00:07:57,680
save the host key to my host file

00:07:55,440 --> 00:07:59,199
these dash o arguments here you can

00:07:57,680 --> 00:08:01,440
effectively ignore these these just

00:07:59,199 --> 00:08:03,520
prevent me from remembering

00:08:01,440 --> 00:08:05,199
that i'm connecting to raspberry pi and

00:08:03,520 --> 00:08:06,800
memorizing the key so

00:08:05,199 --> 00:08:08,720
that i don't get errors when i do it

00:08:06,800 --> 00:08:09,680
again and again to different raspberry

00:08:08,720 --> 00:08:12,160
pi's

00:08:09,680 --> 00:08:14,560
so one of the first steps actually i

00:08:12,160 --> 00:08:15,759
want to go ahead and copy over my ssh

00:08:14,560 --> 00:08:18,160
key

00:08:15,759 --> 00:08:19,840
so i'm going to go ssh copy id dash oh

00:08:18,160 --> 00:08:21,680
strict host key checking no

00:08:19,840 --> 00:08:23,360
use your known host file devnow and then

00:08:21,680 --> 00:08:24,800
i'm just connecting here so if this was

00:08:23,360 --> 00:08:26,000
your own raspberry pi at home you would

00:08:24,800 --> 00:08:27,280
leave out those middle arguments it's

00:08:26,000 --> 00:08:29,120
not really necessary

00:08:27,280 --> 00:08:31,280
and you can always clear your known host

00:08:29,120 --> 00:08:34,640
file if you need to

00:08:31,280 --> 00:08:36,800
to get that accomplished and now we

00:08:34,640 --> 00:08:39,519
should very shortly be able to connect

00:08:36,800 --> 00:08:43,599
to this raspberry pi dot local

00:08:39,519 --> 00:08:43,599
on this one hypothetically

00:08:44,399 --> 00:08:50,399
let's see i'm popping over to another

00:08:47,519 --> 00:08:52,399
terminal to just confirm that

00:08:50,399 --> 00:08:54,959
our raspberry pi up i see the problem

00:08:52,399 --> 00:08:55,920
there okay we type out the command

00:08:54,959 --> 00:08:58,080
is there anything that you're showing

00:08:55,920 --> 00:09:02,000
today that requires the pi 4 will the

00:08:58,080 --> 00:09:03,040
pi 3 work yes the pi 3 i understand does

00:09:02,000 --> 00:09:06,080
work

00:09:03,040 --> 00:09:09,760
but i would not recommend it

00:09:06,080 --> 00:09:13,760
i think that the um

00:09:09,760 --> 00:09:15,839
the pi 3 turns it into like a yes you

00:09:13,760 --> 00:09:16,959
can do it everything is slow and not

00:09:15,839 --> 00:09:19,200
very useful

00:09:16,959 --> 00:09:20,399
um but yeah i mean you can definitely do

00:09:19,200 --> 00:09:21,360
it there's no reason that you couldn't

00:09:20,399 --> 00:09:23,519
do that

00:09:21,360 --> 00:09:24,640
so now i'm going to ssh over to this

00:09:23,519 --> 00:09:27,560
machine

00:09:24,640 --> 00:09:29,600
and again i want to change this to

00:09:27,560 --> 00:09:33,120
raspberry pi

00:09:29,600 --> 00:09:35,120
dot local all right i'm in

00:09:33,120 --> 00:09:36,640
so first thing that we want to do in

00:09:35,120 --> 00:09:40,080
here is

00:09:36,640 --> 00:09:40,080
to edit our

00:09:40,880 --> 00:09:44,959
ssh config and we're going to do this so

00:09:42,880 --> 00:09:46,959
that we can turn off

00:09:44,959 --> 00:09:48,959
password logins so since we've copied

00:09:46,959 --> 00:09:50,720
over our ssh key now

00:09:48,959 --> 00:09:52,480
one of the best steps you can take to

00:09:50,720 --> 00:09:54,560
secure any box is just to turn off

00:09:52,480 --> 00:09:56,480
password authentication so now the only

00:09:54,560 --> 00:09:58,480
the people who have that ssh key

00:09:56,480 --> 00:10:00,959
me will be able to get into the box at

00:09:58,480 --> 00:10:02,320
all so i've saved that now

00:10:00,959 --> 00:10:04,240
and now i'm going to make one more

00:10:02,320 --> 00:10:07,160
change to a file on this machine

00:10:04,240 --> 00:10:09,040
i'm going to go and change the boot

00:10:07,160 --> 00:10:11,040
commandline.txt file

00:10:09,040 --> 00:10:12,640
now it's important that you don't change

00:10:11,040 --> 00:10:14,320
this file before you boot for the first

00:10:12,640 --> 00:10:16,240
time because on initial boot this

00:10:14,320 --> 00:10:18,640
actually contains an instruction

00:10:16,240 --> 00:10:19,839
to do that resizing of the sd card that

00:10:18,640 --> 00:10:22,640
i was talking about

00:10:19,839 --> 00:10:24,560
and of the volume and if you

00:10:22,640 --> 00:10:26,720
inadvertently override it you will

00:10:24,560 --> 00:10:28,399
effectively brick your pi you don't

00:10:26,720 --> 00:10:29,920
brick it like it's destroyed forever but

00:10:28,399 --> 00:10:31,600
you'll have to re-image the

00:10:29,920 --> 00:10:33,519
the card and start from scratch which is

00:10:31,600 --> 00:10:34,399
something you should get used to

00:10:33,519 --> 00:10:37,440
actually

00:10:34,399 --> 00:10:39,360
um in uh

00:10:37,440 --> 00:10:40,720
in raspberry pi land you'll have to be

00:10:39,360 --> 00:10:43,120
doing this kind of stuff

00:10:40,720 --> 00:10:44,880
very many times over all right so what

00:10:43,120 --> 00:10:49,279
i'm doing now is i'm pasting in

00:10:44,880 --> 00:10:52,480
the kernel options to enable c groups

00:10:49,279 --> 00:10:54,399
c group enable cpu set allows

00:10:52,480 --> 00:10:55,920
kubernetes to control the percentage of

00:10:54,399 --> 00:10:57,920
cpu that is available it allows it to

00:10:55,920 --> 00:10:59,920
control and allocate cpu

00:10:57,920 --> 00:11:02,079
and then we have a secret memory equals

00:10:59,920 --> 00:11:03,760
one and c group enable memory

00:11:02,079 --> 00:11:05,279
and this is what you need to type they

00:11:03,760 --> 00:11:05,680
are very poorly documented but you'll

00:11:05,279 --> 00:11:07,920
find

00:11:05,680 --> 00:11:08,720
these examples on other tutorials around

00:11:07,920 --> 00:11:10,560
setting up

00:11:08,720 --> 00:11:12,320
kubernetes clusters on raspberry pi's

00:11:10,560 --> 00:11:14,640
make very certain that you don't insert

00:11:12,320 --> 00:11:17,120
a new line here or your file won't work

00:11:14,640 --> 00:11:19,440
it should just all end on the same line

00:11:17,120 --> 00:11:21,600
with a space in between

00:11:19,440 --> 00:11:22,959
and the link on the page there if any of

00:11:21,600 --> 00:11:24,480
you are frantically taking notes right

00:11:22,959 --> 00:11:25,839
now that is unnecessary the link on the

00:11:24,480 --> 00:11:26,959
page there will take you to a tutorial

00:11:25,839 --> 00:11:30,720
that walks you through

00:11:26,959 --> 00:11:31,680
all of this so when you get in here now

00:11:30,720 --> 00:11:36,240
there is a

00:11:31,680 --> 00:11:37,839
command line there's a cli tool for

00:11:36,240 --> 00:11:39,440
configuring the raspberry pi and it'll

00:11:37,839 --> 00:11:40,959
walk you through some of the other steps

00:11:39,440 --> 00:11:42,079
like changing a password

00:11:40,959 --> 00:11:44,640
so we're going to go ahead and change

00:11:42,079 --> 00:11:48,079
the password here to something

00:11:44,640 --> 00:11:49,920
very secure and that's

00:11:48,079 --> 00:11:52,639
again only necessary now in the off

00:11:49,920 --> 00:11:53,920
chance that we screw up our ssh access

00:11:52,639 --> 00:11:54,560
again and someone could get into the

00:11:53,920 --> 00:11:55,920
machine

00:11:54,560 --> 00:11:57,040
when you're setting this up i mean it's

00:11:55,920 --> 00:11:58,639
likely you're going to make this

00:11:57,040 --> 00:12:00,720
available to the public internet at some

00:11:58,639 --> 00:12:02,720
point just be very cautious

00:12:00,720 --> 00:12:04,720
so we're going to change our host name

00:12:02,720 --> 00:12:07,920
here i'm going to name this first one

00:12:04,720 --> 00:12:11,360
pi queen and pi queen is going to be our

00:12:07,920 --> 00:12:13,760
primary node the server for our cluster

00:12:11,360 --> 00:12:16,000
that we then join the other nodes do

00:12:13,760 --> 00:12:17,200
so we have pi queen set up as our

00:12:16,000 --> 00:12:20,240
hostname

00:12:17,200 --> 00:12:22,320
and we are turning this finally

00:12:20,240 --> 00:12:24,000
over to the memory split this is the

00:12:22,320 --> 00:12:26,639
last feature we need to change in here

00:12:24,000 --> 00:12:28,160
so the gpu by default is allowed to use

00:12:26,639 --> 00:12:30,079
64 megs of memory

00:12:28,160 --> 00:12:31,440
we only want it to have 16 because we're

00:12:30,079 --> 00:12:34,160
not going to be using

00:12:31,440 --> 00:12:36,160
a gui so that will give us more memory

00:12:34,160 --> 00:12:38,639
for kubernetes to have access to

00:12:36,160 --> 00:12:40,240
so we just turn that down to 16 and we

00:12:38,639 --> 00:12:42,880
hit ok

00:12:40,240 --> 00:12:44,240
and then when we finish up here we're

00:12:42,880 --> 00:12:45,839
going to be ready to

00:12:44,240 --> 00:12:47,839
reboot finally and i'm just going

00:12:45,839 --> 00:12:49,519
through my checklist in my head to make

00:12:47,839 --> 00:12:51,920
sure we did all of the things

00:12:49,519 --> 00:12:53,200
we changed the command line txt to

00:12:51,920 --> 00:12:55,040
enable the kernel options

00:12:53,200 --> 00:12:56,240
we changed the hostname we changed the

00:12:55,040 --> 00:12:59,600
password

00:12:56,240 --> 00:13:00,880
we changed the memory limit for the gpu

00:12:59,600 --> 00:13:03,200
and we turned off password

00:13:00,880 --> 00:13:04,000
authentication so i think that is

00:13:03,200 --> 00:13:05,760
everything

00:13:04,000 --> 00:13:07,360
and now i can go ahead and just start

00:13:05,760 --> 00:13:08,880
rebooting this one

00:13:07,360 --> 00:13:10,720
and now these next few i'm going to go

00:13:08,880 --> 00:13:13,360
through kind of rapid fire

00:13:10,720 --> 00:13:15,120
and i'm just going to boot this one up

00:13:13,360 --> 00:13:17,519
and i'll be ready to boot the other two

00:13:15,120 --> 00:13:18,639
as soon as i can get into that one while

00:13:17,519 --> 00:13:20,800
i

00:13:18,639 --> 00:13:22,320
talk a little bit more about what we're

00:13:20,800 --> 00:13:24,560
achieving here so

00:13:22,320 --> 00:13:25,519
the project that we are using is called

00:13:24,560 --> 00:13:27,839
openfast

00:13:25,519 --> 00:13:29,440
it's an open source functions as a

00:13:27,839 --> 00:13:31,360
service openfast stands for open

00:13:29,440 --> 00:13:33,839
functions as a service

00:13:31,360 --> 00:13:35,279
oh here we have a question from john

00:13:33,839 --> 00:13:38,720
that says

00:13:35,279 --> 00:13:41,519
it's a more of a comment in fact um

00:13:38,720 --> 00:13:43,360
that the kubernetes on raspberry pi has

00:13:41,519 --> 00:13:46,079
worked since raspberry pi 2

00:13:43,360 --> 00:13:48,079
but it is much much better on the

00:13:46,079 --> 00:13:51,680
raspberry pi 4 thank you john

00:13:48,079 --> 00:13:54,959
yes so the

00:13:51,680 --> 00:13:56,480
the open fast allows you to deploy

00:13:54,959 --> 00:13:57,680
functions quite easily you can write

00:13:56,480 --> 00:13:59,040
your own of course and it comes with a

00:13:57,680 --> 00:13:59,920
short library of functions that we're

00:13:59,040 --> 00:14:02,000
going to use

00:13:59,920 --> 00:14:03,279
some of to start generating some traffic

00:14:02,000 --> 00:14:05,680
for our application

00:14:03,279 --> 00:14:08,079
and one of those is called figlet that's

00:14:05,680 --> 00:14:10,079
the one that generated that ascii art

00:14:08,079 --> 00:14:12,320
that i showed you at the beginning so

00:14:10,079 --> 00:14:14,240
let me see if i can get into my next

00:14:12,320 --> 00:14:16,959
raspberry pi here

00:14:14,240 --> 00:14:17,680
while the other one is rebooting we are

00:14:16,959 --> 00:14:20,720
trying

00:14:17,680 --> 00:14:22,880
and we are back in and the fact that

00:14:20,720 --> 00:14:23,279
it's asking me for a password reminds me

00:14:22,880 --> 00:14:26,560
that i

00:14:23,279 --> 00:14:30,639
actually first want to copy copy up

00:14:26,560 --> 00:14:34,959
my creds all right

00:14:30,639 --> 00:14:35,600
there we go so i'm copying over my ssh

00:14:34,959 --> 00:14:39,600
key

00:14:35,600 --> 00:14:44,399
and now i am sshing into the thing

00:14:39,600 --> 00:14:46,720
and now i am editing this file

00:14:44,399 --> 00:14:46,720
maybe

00:14:49,519 --> 00:14:56,720
and now i am going to

00:14:52,959 --> 00:14:58,399
edit this other file about this time i

00:14:56,720 --> 00:15:00,639
want to start booting the next one so

00:14:58,399 --> 00:15:05,279
it's ready

00:15:00,639 --> 00:15:10,000
when we get to it and here we are

00:15:05,279 --> 00:15:13,839
turning off password authentication

00:15:10,000 --> 00:15:13,839
all right

00:15:19,839 --> 00:15:24,160
changing our password changing our host

00:15:22,800 --> 00:15:26,000
name now this one i'm going to call

00:15:24,160 --> 00:15:29,120
drone zero we're zero indexing

00:15:26,000 --> 00:15:30,959
our three drones here and this one

00:15:29,120 --> 00:15:32,639
i need to turn off the memory split as

00:15:30,959 --> 00:15:35,120
well

00:15:32,639 --> 00:15:37,120
all right and now we're done and this

00:15:35,120 --> 00:15:39,600
one is rebooting

00:15:37,120 --> 00:15:40,320
and hopefully our next one will be

00:15:39,600 --> 00:15:42,079
online

00:15:40,320 --> 00:15:44,320
very shortly and we'll be ready to copy

00:15:42,079 --> 00:15:47,519
over id so i'm again watching

00:15:44,320 --> 00:15:48,959
here on the desk for this green light to

00:15:47,519 --> 00:15:50,639
turn off that would indicate that it's

00:15:48,959 --> 00:15:52,079
done writing the card when it's real

00:15:50,639 --> 00:15:53,440
solid like this

00:15:52,079 --> 00:15:55,040
it's probably in the process of

00:15:53,440 --> 00:15:56,720
expanding the partition and then when it

00:15:55,040 --> 00:15:57,519
starts to blink a bit it's maybe booting

00:15:56,720 --> 00:16:00,160
again

00:15:57,519 --> 00:16:01,680
so ssh actually turns on before the

00:16:00,160 --> 00:16:03,199
green light will stop blinking but when

00:16:01,680 --> 00:16:08,399
you're just looking at a solid red light

00:16:03,199 --> 00:16:11,440
you know that it's ready to go

00:16:08,399 --> 00:16:14,000
let's try it now there we go

00:16:11,440 --> 00:16:14,000
look at that

00:16:19,600 --> 00:16:24,399
and we're in and we go again

00:16:25,199 --> 00:16:34,839
second verse same as the first

00:16:29,519 --> 00:16:36,240
editing this to turn off our password

00:16:34,839 --> 00:16:40,720
authentication

00:16:36,240 --> 00:16:42,399
and this one here

00:16:40,720 --> 00:16:44,399
the command line options which are

00:16:42,399 --> 00:16:48,000
actually kernel options

00:16:44,399 --> 00:16:49,279
here there are a lot of cool tricks you

00:16:48,000 --> 00:16:51,279
can do with this though

00:16:49,279 --> 00:16:52,959
this file if you ever forget your

00:16:51,279 --> 00:16:53,440
password or you lock yourself out of

00:16:52,959 --> 00:16:56,720
your pi

00:16:53,440 --> 00:16:59,519
somehow that's your rescue right there

00:16:56,720 --> 00:17:01,680
is to get into that command line text

00:16:59,519 --> 00:17:04,400
file you can actually set init scripts

00:17:01,680 --> 00:17:06,240
in there to run automatically before

00:17:04,400 --> 00:17:06,880
anything else on the system so you can

00:17:06,240 --> 00:17:08,480
modify

00:17:06,880 --> 00:17:10,799
things move files around whatever you

00:17:08,480 --> 00:17:13,439
need to get things working again

00:17:10,799 --> 00:17:14,880
so here's our drone one and we are

00:17:13,439 --> 00:17:20,319
almost there

00:17:14,880 --> 00:17:23,919
we have our memory split there we go

00:17:20,319 --> 00:17:26,000
and we are rebooting and i

00:17:23,919 --> 00:17:27,039
should have already started this third

00:17:26,000 --> 00:17:30,080
one

00:17:27,039 --> 00:17:31,840
but that's okay there are no mistakes

00:17:30,080 --> 00:17:34,000
just happy little accidents right

00:17:31,840 --> 00:17:36,240
all right here we go i'm back over to

00:17:34,000 --> 00:17:40,080
the terminal now

00:17:36,240 --> 00:17:43,360
and we are right now

00:17:40,080 --> 00:17:45,600
waiting for our last pie to boot up

00:17:43,360 --> 00:17:48,480
and in the meantime we can install a

00:17:45,600 --> 00:17:49,440
couple of things here locally so

00:17:48,480 --> 00:17:52,080
one of the things that we want to

00:17:49,440 --> 00:17:55,200
install is called arcade

00:17:52,080 --> 00:17:56,960
and you can get arcade from their

00:17:55,200 --> 00:18:00,240
website there's an instruction here in

00:17:56,960 --> 00:18:02,000
the tutorial but it's just a one script

00:18:00,240 --> 00:18:03,280
install kind of thing if you look in the

00:18:02,000 --> 00:18:06,720
directory here

00:18:03,280 --> 00:18:08,320
it's this this arc sh file that installs

00:18:06,720 --> 00:18:10,880
arcade and they have good

00:18:08,320 --> 00:18:12,559
instructions to walk you through and set

00:18:10,880 --> 00:18:13,840
up arcade in the first place and you'll

00:18:12,559 --> 00:18:16,240
end up then

00:18:13,840 --> 00:18:19,120
with this arcade command that allows you

00:18:16,240 --> 00:18:20,480
to get various things to

00:18:19,120 --> 00:18:22,240
tools to work with your kubernetes

00:18:20,480 --> 00:18:25,280
cluster so you can use arcade

00:18:22,240 --> 00:18:28,720
to get cube ctl and you can use

00:18:25,280 --> 00:18:33,280
arcade to get arc

00:18:28,720 --> 00:18:36,880
is short for arcade to get k3s

00:18:33,280 --> 00:18:40,400
k3s up ketchup this catch-up tool

00:18:36,880 --> 00:18:43,679
installs k3s k kes

00:18:40,400 --> 00:18:46,880
k3s onto our cluster

00:18:43,679 --> 00:18:49,360
so now that we have our drone our first

00:18:46,880 --> 00:18:50,559
drone online we can actually get the ip

00:18:49,360 --> 00:18:55,760
address

00:18:50,559 --> 00:18:59,200
like this we know it's running on on 192

00:18:55,760 --> 00:19:02,240
and we can go ahead and use ketchup

00:18:59,200 --> 00:19:05,200
to install to

00:19:02,240 --> 00:19:06,720
that ip address on our user pi so this

00:19:05,200 --> 00:19:10,080
is going to go ahead and install

00:19:06,720 --> 00:19:11,440
here after i enter the passphrase for my

00:19:10,080 --> 00:19:13,360
ssh key

00:19:11,440 --> 00:19:14,720
it's going to install the code to run

00:19:13,360 --> 00:19:17,679
the server

00:19:14,720 --> 00:19:18,880
and after this step is complete we will

00:19:17,679 --> 00:19:20,880
have

00:19:18,880 --> 00:19:22,160
a kubernetes cluster albeit with just a

00:19:20,880 --> 00:19:25,200
single node which is

00:19:22,160 --> 00:19:26,799
our pi queen pyqueen.local that's going

00:19:25,200 --> 00:19:28,160
to be the server we then use for the

00:19:26,799 --> 00:19:29,360
join commands which you got a little

00:19:28,160 --> 00:19:32,320
preview of

00:19:29,360 --> 00:19:34,880
there just a moment ago and it looks

00:19:32,320 --> 00:19:37,280
like my last pie is online so as soon as

00:19:34,880 --> 00:19:41,200
i get my

00:19:37,280 --> 00:19:44,400
console back here after we start up

00:19:41,200 --> 00:19:46,400
key threes then we'll be good to go

00:19:44,400 --> 00:19:47,440
i'm going to ssh into that last one and

00:19:46,400 --> 00:19:51,200
set it up here

00:19:47,440 --> 00:19:54,400
alright so here we are copying this

00:19:51,200 --> 00:19:57,120
over and there's our password

00:19:54,400 --> 00:20:00,240
and we are going to go again like this

00:19:57,120 --> 00:20:03,600
and now i am in the machine

00:20:00,240 --> 00:20:07,600
and running our last

00:20:03,600 --> 00:20:09,840
couple of bits of code here

00:20:07,600 --> 00:20:12,720
i guess our last making our last edits

00:20:09,840 --> 00:20:12,720
is more appropriate

00:20:18,640 --> 00:20:23,840
and then finally we go into this

00:20:21,840 --> 00:20:27,440
raspberry config tool

00:20:23,840 --> 00:20:27,440
we change our password

00:20:28,320 --> 00:20:37,440
oops let's try that again i type out it

00:20:34,799 --> 00:20:38,960
there we go and our network options

00:20:37,440 --> 00:20:42,640
going to change the host name

00:20:38,960 --> 00:20:46,000
this last one is drone two

00:20:42,640 --> 00:20:48,240
pi drone two i wonder if i've made that

00:20:46,000 --> 00:20:49,919
mistake already

00:20:48,240 --> 00:20:51,360
maybe ask a question if you noticed me

00:20:49,919 --> 00:20:52,640
name one of these drone 2

00:20:51,360 --> 00:20:54,799
because we're going to find out pretty

00:20:52,640 --> 00:20:55,280
quick i guess we'll have to go and find

00:20:54,799 --> 00:21:00,640
them all

00:20:55,280 --> 00:21:00,640
it's not too big a deal so there we go

00:21:00,880 --> 00:21:05,360
and i am rebooting the last pie so in

00:21:03,600 --> 00:21:06,559
the meantime i can start joining the

00:21:05,360 --> 00:21:08,640
other ones

00:21:06,559 --> 00:21:09,760
to the cluster that we've already

00:21:08,640 --> 00:21:13,679
created here

00:21:09,760 --> 00:21:13,679
so we have if we say

00:21:14,080 --> 00:21:19,120
looking here in this cube config

00:21:17,200 --> 00:21:21,360
we will be able to see our client

00:21:19,120 --> 00:21:23,919
certificate something something here

00:21:21,360 --> 00:21:25,760
and our ip address there we go that's

00:21:23,919 --> 00:21:26,480
the ip address that we have available so

00:21:25,760 --> 00:21:29,520
we can say

00:21:26,480 --> 00:21:32,159
cube cuddle get node

00:21:29,520 --> 00:21:32,960
and we should see pi queen online look

00:21:32,159 --> 00:21:36,400
at that

00:21:32,960 --> 00:21:37,520
so now when we want to set up k3s on the

00:21:36,400 --> 00:21:41,200
next one we're going to

00:21:37,520 --> 00:21:43,520
join this time we want to join the ip

00:21:41,200 --> 00:21:46,559
for our next node let's grab that real

00:21:43,520 --> 00:21:46,559
quick we're going to ping

00:21:47,720 --> 00:21:51,840
pydrone0.local to get the ip address

00:21:52,400 --> 00:21:58,559
or we're going to realize now

00:21:55,520 --> 00:22:01,440
that we maybe called it drone zero yep

00:21:58,559 --> 00:22:04,640
okay so we've got drone zero we

00:22:01,440 --> 00:22:07,919
certainly have pi drone too

00:22:04,640 --> 00:22:12,559
let's go with ketchup

00:22:07,919 --> 00:22:16,000
join and our ip address here is five

00:22:12,559 --> 00:22:16,559
joining two four which is the original

00:22:16,000 --> 00:22:18,320
one

00:22:16,559 --> 00:22:19,919
so our server ip in that case is going

00:22:18,320 --> 00:22:22,080
to be pi queen so now we're telling it

00:22:19,919 --> 00:22:24,880
to join this one here

00:22:22,080 --> 00:22:26,000
to join the original server into a

00:22:24,880 --> 00:22:27,600
cluster

00:22:26,000 --> 00:22:29,280
for some reason or another on the join

00:22:27,600 --> 00:22:30,799
command specifically you have to type

00:22:29,280 --> 00:22:32,960
the passphrase for your key twice i

00:22:30,799 --> 00:22:36,480
suspect there's a bug in the script

00:22:32,960 --> 00:22:38,240
when you do the join but

00:22:36,480 --> 00:22:40,000
to whoever is feeling particularly

00:22:38,240 --> 00:22:42,559
motivated please come along and fix

00:22:40,000 --> 00:22:43,120
that for us all right and now we are

00:22:42,559 --> 00:22:45,280
going to

00:22:43,120 --> 00:22:47,200
ping maybe it was probably trone one

00:22:45,280 --> 00:22:50,960
that i got correct

00:22:47,200 --> 00:22:53,360
i called that one drone two didn't i

00:22:50,960 --> 00:22:54,400
yep all right and then finally we're

00:22:53,360 --> 00:22:58,720
going to have

00:22:54,400 --> 00:23:01,679
our pi drone uh 2 which i did

00:22:58,720 --> 00:23:02,320
fix my mistake on which then becomes the

00:23:01,679 --> 00:23:05,039
anomaly

00:23:02,320 --> 00:23:05,919
so we have 6 and 8 that we're going to

00:23:05,039 --> 00:23:09,280
join

00:23:05,919 --> 00:23:12,799
we're going to join six here

00:23:09,280 --> 00:23:15,919
into our cluster again we gotta

00:23:12,799 --> 00:23:16,640
authenticate twice i should probably

00:23:15,919 --> 00:23:18,320
just

00:23:16,640 --> 00:23:20,000
hit enter the first time if i know it's

00:23:18,320 --> 00:23:23,360
already busted

00:23:20,000 --> 00:23:25,919
and what was the other one it was six

00:23:23,360 --> 00:23:27,039
and eight we decided we're the last two

00:23:25,919 --> 00:23:31,280
notes

00:23:27,039 --> 00:23:34,240
okay now we're going to go one more time

00:23:31,280 --> 00:23:34,240
rejoining eight

00:23:34,320 --> 00:23:39,120
oops that's why you don't just hit enter

00:23:36,559 --> 00:23:43,200
i guess all right let's try this

00:23:39,120 --> 00:23:44,480
error and again there we go

00:23:43,200 --> 00:23:45,919
and now we're deploying the last of our

00:23:44,480 --> 00:23:47,039
notes so we'll be able to get all of the

00:23:45,919 --> 00:23:49,760
nodes here

00:23:47,039 --> 00:23:51,120
and they won't all be ready yet but

00:23:49,760 --> 00:23:52,080
they'll be close enough for government

00:23:51,120 --> 00:23:55,840
work

00:23:52,080 --> 00:23:55,840
and we want to then

00:23:57,919 --> 00:24:02,799
get node nodes there we go we got two of

00:24:01,919 --> 00:24:05,919
them on

00:24:02,799 --> 00:24:08,720
so i actually want to go ahead and and

00:24:05,919 --> 00:24:08,720
label these

00:24:09,360 --> 00:24:15,679
label nodes pi drone let's call

00:24:12,880 --> 00:24:16,400
okay so drone 0 we're going to turn

00:24:15,679 --> 00:24:18,799
drone 0

00:24:16,400 --> 00:24:21,760
into a worker with this magic label here

00:24:18,799 --> 00:24:24,000
so we label that first node drone 0

00:24:21,760 --> 00:24:24,880
into a worker and we're going to label

00:24:24,000 --> 00:24:26,960
drone 1

00:24:24,880 --> 00:24:28,000
the same way and then we're going to

00:24:26,960 --> 00:24:32,240
label pi

00:24:28,000 --> 00:24:35,360
drone to our artisanal hand grafted

00:24:32,240 --> 00:24:38,480
last one as a worker there and now when

00:24:35,360 --> 00:24:40,640
i go cube cuddle to get all of my nodes

00:24:38,480 --> 00:24:42,559
and i can even go wide with my answers

00:24:40,640 --> 00:24:44,640
here i have all of them up

00:24:42,559 --> 00:24:46,480
none of them have external ips yet but

00:24:44,640 --> 00:24:48,880
look at that they're all ready to go

00:24:46,480 --> 00:24:50,240
okay so now we're going to go ahead and

00:24:48,880 --> 00:24:52,320
install open fast

00:24:50,240 --> 00:24:53,919
so i'm going to say catch up install

00:24:52,320 --> 00:24:57,360
open fast

00:24:53,919 --> 00:25:01,840
and that will install open fast

00:24:57,360 --> 00:25:01,840
to our cluster here

00:25:02,480 --> 00:25:09,360
i think i actually

00:25:05,760 --> 00:25:11,919
want to get a different

00:25:09,360 --> 00:25:11,919
command

00:25:12,840 --> 00:25:20,640
yeah so i want to do um

00:25:17,360 --> 00:25:21,760
arc install uh open fast

00:25:20,640 --> 00:25:24,480
so the first thing that you want to

00:25:21,760 --> 00:25:26,960
install is actually this fast cli

00:25:24,480 --> 00:25:28,080
so that will set you up to work with

00:25:26,960 --> 00:25:31,200
your cluster

00:25:28,080 --> 00:25:34,320
and now you can open you can arc install

00:25:31,200 --> 00:25:35,919
open fast and it's using this cube

00:25:34,320 --> 00:25:37,039
config that it found locally here in

00:25:35,919 --> 00:25:39,039
this directory

00:25:37,039 --> 00:25:40,799
i did the instructions will walk you

00:25:39,039 --> 00:25:44,080
through this but when you install it

00:25:40,799 --> 00:25:46,799
when you install open fast the first

00:25:44,080 --> 00:25:46,799
time you'll have a

00:25:47,120 --> 00:25:50,960
variable you need to export so this is

00:25:49,440 --> 00:25:52,960
the command that i want to run

00:25:50,960 --> 00:25:56,240
to get my password i'm just going to

00:25:52,960 --> 00:25:59,200
save the password for my

00:25:56,240 --> 00:26:01,200
gateway for my open fast gateway into

00:25:59,200 --> 00:26:02,000
this environment variable password using

00:26:01,200 --> 00:26:03,919
this

00:26:02,000 --> 00:26:05,840
so that went and grabbed the secret off

00:26:03,919 --> 00:26:06,720
of openfast running in the cluster and

00:26:05,840 --> 00:26:10,159
it saved it

00:26:06,720 --> 00:26:13,679
after decoding it from base64 over here

00:26:10,159 --> 00:26:14,720
and then i can log in using this command

00:26:13,679 --> 00:26:16,480
right here

00:26:14,720 --> 00:26:17,840
this these instructions up at the top to

00:26:16,480 --> 00:26:19,679
deploy the gateway we don't actually

00:26:17,840 --> 00:26:20,880
need that for this portion because we're

00:26:19,679 --> 00:26:24,559
not going to have

00:26:20,880 --> 00:26:26,720
our let's see here what did we do wrong

00:26:24,559 --> 00:26:29,840
there

00:26:26,720 --> 00:26:33,520
we can't go into eight

00:26:29,840 --> 00:26:33,520
to find our credentials

00:26:33,600 --> 00:26:40,880
or to get things set up here yet

00:26:37,520 --> 00:26:44,640
let's see here what

00:26:40,880 --> 00:26:44,640
step are we missing

00:26:49,919 --> 00:26:56,799
so after installing open fast

00:26:54,400 --> 00:26:58,559
you need to let me just walk through

00:26:56,799 --> 00:27:01,120
this tutorial that i've included a link

00:26:58,559 --> 00:27:03,760
to on the bottom

00:27:01,120 --> 00:27:05,360
you install it you install ketchup yes

00:27:03,760 --> 00:27:06,000
we've got cube cuddle and we have

00:27:05,360 --> 00:27:08,640
already

00:27:06,000 --> 00:27:09,360
seen all of our nodes online and joined

00:27:08,640 --> 00:27:12,000
them

00:27:09,360 --> 00:27:13,760
and then we installed open fast yep and

00:27:12,000 --> 00:27:16,080
we got our password

00:27:13,760 --> 00:27:18,320
and we exporting the url i think is

00:27:16,080 --> 00:27:22,640
maybe the step that we got wrong here

00:27:18,320 --> 00:27:26,559
so let me go back over here and

00:27:22,640 --> 00:27:30,240
check there is an open fast url

00:27:26,559 --> 00:27:32,960
that is set and i bet that i

00:27:30,240 --> 00:27:34,399
set it on one of my test runs so what

00:27:32,960 --> 00:27:37,840
we're going to do actually

00:27:34,399 --> 00:27:41,760
is say export open fast

00:27:37,840 --> 00:27:44,399
url equal to we're just going to use

00:27:41,760 --> 00:27:46,240
pi queen so that we don't have this

00:27:44,399 --> 00:27:49,520
problem again

00:27:46,240 --> 00:27:53,360
and we can say pie queen three one one

00:27:49,520 --> 00:27:55,200
one two like that

00:27:53,360 --> 00:27:57,279
let's try that again okay let's see if

00:27:55,200 --> 00:28:01,520
we can log in this time

00:27:57,279 --> 00:28:05,679
all right no such host

00:28:01,520 --> 00:28:09,039
we don't like that either huh okay

00:28:05,679 --> 00:28:13,120
well let's try again but

00:28:09,039 --> 00:28:16,399
with feeling i think our ip address was

00:28:13,120 --> 00:28:18,640
four and this would be our last attempt

00:28:16,399 --> 00:28:20,799
before we surrender and i fall back to

00:28:18,640 --> 00:28:22,559
my sd cards that are already pre-baked

00:28:20,799 --> 00:28:26,559
because i do want to show you this all

00:28:22,559 --> 00:28:26,559
working and install it

00:28:28,840 --> 00:28:33,040
to

00:28:31,120 --> 00:28:34,240
all right let's just see what we've got

00:28:33,040 --> 00:28:37,360
[Music]

00:28:34,240 --> 00:28:43,279
we've got going on here

00:28:37,360 --> 00:28:46,640
so the listing of the deployments

00:28:43,279 --> 00:28:49,360
is actually the part that is

00:28:46,640 --> 00:28:50,000
most relevant to us right now so i can

00:28:49,360 --> 00:28:54,640
go

00:28:50,000 --> 00:28:58,399
here and get all of the deployments

00:28:54,640 --> 00:29:00,480
for our

00:28:58,399 --> 00:29:02,640
namespace this is all the stuff that was

00:29:00,480 --> 00:29:05,200
deployed for openfast

00:29:02,640 --> 00:29:07,360
and it looks like our gateway is down

00:29:05,200 --> 00:29:11,440
which explains it

00:29:07,360 --> 00:29:14,559
and we don't know why

00:29:11,440 --> 00:29:15,600
that is down but we could try kicking it

00:29:14,559 --> 00:29:17,919
and restarting it

00:29:15,600 --> 00:29:18,640
or we could do that thing where we

00:29:17,919 --> 00:29:19,840
surrender

00:29:18,640 --> 00:29:22,960
so i'm actually going to pull the plug

00:29:19,840 --> 00:29:26,880
on all these pies i have here

00:29:22,960 --> 00:29:29,840
on my desk four cards waiting to go

00:29:26,880 --> 00:29:31,600
this actually has happened once before

00:29:29,840 --> 00:29:32,559
um but fortunately we got very nearly to

00:29:31,600 --> 00:29:35,520
the end here

00:29:32,559 --> 00:29:37,200
and the finished one you're seeing here

00:29:35,520 --> 00:29:38,720
is actually

00:29:37,200 --> 00:29:41,120
exactly the same as what you were just

00:29:38,720 --> 00:29:45,600
looking at except that

00:29:41,120 --> 00:29:47,360
the open fast has already been installed

00:29:45,600 --> 00:29:50,559
successfully

00:29:47,360 --> 00:29:51,840
and we have deployed a function

00:29:50,559 --> 00:29:54,480
and then you'll get to see the bit where

00:29:51,840 --> 00:29:57,679
we set up new relic yes

00:29:54,480 --> 00:30:00,799
you can go there to the kubecon webinar

00:29:57,679 --> 00:30:08,000
link and find out

00:30:00,799 --> 00:30:09,200
what it is that we're looking at and

00:30:08,000 --> 00:30:11,360
that link will go

00:30:09,200 --> 00:30:13,120
and walk through this tutorial with you

00:30:11,360 --> 00:30:14,799
and

00:30:13,120 --> 00:30:16,559
take you step by step it gives you links

00:30:14,799 --> 00:30:18,559
to the relevant projects to help me

00:30:16,559 --> 00:30:19,200
identify any steps that i may have left

00:30:18,559 --> 00:30:21,919
out there

00:30:19,200 --> 00:30:23,679
there are quite a lot of pieces moving

00:30:21,919 --> 00:30:27,200
around here in this

00:30:23,679 --> 00:30:28,720
this mess one thing i do know

00:30:27,200 --> 00:30:31,279
is that we're probably going to have to

00:30:28,720 --> 00:30:37,440
go ahead and change that

00:30:31,279 --> 00:30:40,720
url back all right

00:30:37,440 --> 00:30:42,399
so actually i'm gonna go with the

00:30:40,720 --> 00:30:43,200
original export because i'm pretty sure

00:30:42,399 --> 00:30:45,919
this will work

00:30:43,200 --> 00:30:47,840
this should work just fine if i export

00:30:45,919 --> 00:30:50,320
or open fast thing here

00:30:47,840 --> 00:30:52,640
and at some point i will be able to ping

00:30:50,320 --> 00:30:54,720
pie queen.local

00:30:52,640 --> 00:30:56,159
and in the meantime we'll just kind of

00:30:54,720 --> 00:30:58,000
do this live q a

00:30:56,159 --> 00:31:00,720
as we wait for this other piece to pick

00:30:58,000 --> 00:31:02,080
up here if anyone has questions now

00:31:00,720 --> 00:31:03,600
would be an excellent time

00:31:02,080 --> 00:31:05,840
i feel like you've all been asking some

00:31:03,600 --> 00:31:08,559
good questions along the way though

00:31:05,840 --> 00:31:10,640
so maybe you don't all right there we go

00:31:08,559 --> 00:31:13,919
now we got pie queen online

00:31:10,640 --> 00:31:15,440
and if i get our deployments for open

00:31:13,919 --> 00:31:18,720
fast now

00:31:15,440 --> 00:31:22,080
it does not like that because our cube

00:31:18,720 --> 00:31:24,240
config i'm just going to hack the cube

00:31:22,080 --> 00:31:26,880
config in place

00:31:24,240 --> 00:31:28,720
because our queen now is actually for on

00:31:26,880 --> 00:31:32,080
port 8. yeah

00:31:28,720 --> 00:31:32,720
let's try that now oh dear doesn't like

00:31:32,080 --> 00:31:37,200
that at all

00:31:32,720 --> 00:31:40,320
okay well let's try and

00:31:37,200 --> 00:31:43,760
set up our

00:31:40,320 --> 00:31:47,200
cluster again we're gonna go

00:31:43,760 --> 00:31:50,720
with ketchup and

00:31:47,200 --> 00:31:53,760
installing to the ip but this time

00:31:50,720 --> 00:31:55,679
we're going to reinstall to eight see if

00:31:53,760 --> 00:31:57,440
we can get there

00:31:55,679 --> 00:31:59,519
if not i can still walk you through the

00:31:57,440 --> 00:32:01,600
process that you would be using here

00:31:59,519 --> 00:32:03,039
so the gist of it is that open fast

00:32:01,600 --> 00:32:04,720
comes with

00:32:03,039 --> 00:32:07,360
you have a tutorial on installing

00:32:04,720 --> 00:32:09,919
kubernetes on ubuntu with raspberry pi's

00:32:07,360 --> 00:32:11,840
i do not but i don't imagine the process

00:32:09,919 --> 00:32:15,120
would be so terribly different

00:32:11,840 --> 00:32:17,279
um the

00:32:15,120 --> 00:32:18,480
the piece that we're doing here most of

00:32:17,279 --> 00:32:19,919
the pieces that we've done

00:32:18,480 --> 00:32:22,080
i think are just generally applicable

00:32:19,919 --> 00:32:23,760
with the exception of maybe

00:32:22,080 --> 00:32:25,360
the way that ubuntu would handle the

00:32:23,760 --> 00:32:26,559
boot partition i'm not sure if that's a

00:32:25,360 --> 00:32:29,840
raspbs feature

00:32:26,559 --> 00:32:31,120
or a raspberry pi feature but let's try

00:32:29,840 --> 00:32:32,880
and get

00:32:31,120 --> 00:32:35,120
our nodes again and see how far we got

00:32:32,880 --> 00:32:35,120
here

00:32:36,880 --> 00:32:44,559
whoops cube cuddle get node anyone

00:32:42,399 --> 00:32:45,679
anyone hey look at that we've got some

00:32:44,559 --> 00:32:47,519
friends all right

00:32:45,679 --> 00:32:49,039
these ones were named correctly look at

00:32:47,519 --> 00:32:51,440
that so now

00:32:49,039 --> 00:32:53,279
we can do that thing where we get our we

00:32:51,440 --> 00:32:55,440
check our deployments

00:32:53,279 --> 00:32:57,600
let's just get all the deployments looks

00:32:55,440 --> 00:32:58,559
like our gateway is busted on this one

00:32:57,600 --> 00:33:01,039
too

00:32:58,559 --> 00:33:02,640
really doesn't like this gateway thing

00:33:01,039 --> 00:33:07,039
all right well let me see if i can

00:33:02,640 --> 00:33:08,240
curl that function here on eight

00:33:07,039 --> 00:33:10,559
yeah it's not going to allow that

00:33:08,240 --> 00:33:15,760
because the gateway is broken

00:33:10,559 --> 00:33:20,000
and i maybe can

00:33:15,760 --> 00:33:22,000
restart the deployments let's see

00:33:20,000 --> 00:33:24,159
deployments deployments deployments

00:33:22,000 --> 00:33:27,760
rollout restart deployment

00:33:24,159 --> 00:33:29,519
of gateway let's try and restart the

00:33:27,760 --> 00:33:31,360
gateway deployment but i imagine that

00:33:29,519 --> 00:33:32,640
that's what it's doing it's flapping

00:33:31,360 --> 00:33:34,320
right now

00:33:32,640 --> 00:33:36,640
so it should just be trying to do that

00:33:34,320 --> 00:33:39,919
over and over again that's sort of

00:33:36,640 --> 00:33:42,159
the point and we can do

00:33:39,919 --> 00:33:43,519
you want to switch to your terminal oh i

00:33:42,159 --> 00:33:44,880
do want to switch to my terminal thank

00:33:43,519 --> 00:33:46,720
you you all can't watch what's happening

00:33:44,880 --> 00:33:49,360
right now i mean probably for the past

00:33:46,720 --> 00:33:52,080
what's happening is our gateway is down

00:33:49,360 --> 00:33:53,760
and we are not able to

00:33:52,080 --> 00:33:56,640
use our little function which is the

00:33:53,760 --> 00:33:58,159
whole fun part but that's okay

00:33:56,640 --> 00:34:00,730
what are we going to try and do here we

00:33:58,159 --> 00:34:02,559
wanted to do logs

00:34:00,730 --> 00:34:06,000
[Music]

00:34:02,559 --> 00:34:08,079
logs gateway there's our gateway we

00:34:06,000 --> 00:34:13,200
don't need

00:34:08,079 --> 00:34:13,200
this do we can we just logs gateway

00:34:13,599 --> 00:34:16,639
in the open fast i don't think that

00:34:15,280 --> 00:34:20,320
works

00:34:16,639 --> 00:34:21,440
pods we need the actual pods let's get

00:34:20,320 --> 00:34:26,560
the pods

00:34:21,440 --> 00:34:28,480
in open fast see what we got here

00:34:26,560 --> 00:34:31,760
that one has seven restarts but one of

00:34:28,480 --> 00:34:31,760
the two of them is working

00:34:32,159 --> 00:34:37,200
oh maybe maybe not maybe that one's just

00:34:35,919 --> 00:34:39,119
coming on and off again

00:34:37,200 --> 00:34:40,800
crash loop back off see there's our

00:34:39,119 --> 00:34:45,919
problem right there

00:34:40,800 --> 00:34:45,919
all right and

00:34:46,560 --> 00:34:51,280
let's see we still got a little bit of

00:34:48,240 --> 00:34:55,440
time we made pretty good time here so

00:34:51,280 --> 00:34:58,800
um let's look at our logs

00:34:55,440 --> 00:35:00,000
deployment gateway we already restarted

00:34:58,800 --> 00:35:01,520
that

00:35:00,000 --> 00:35:04,960
what are we trying to do here we're

00:35:01,520 --> 00:35:08,240
looking at log logs this one

00:35:04,960 --> 00:35:11,920
and instead of this we want

00:35:08,240 --> 00:35:14,160
this see what we got

00:35:11,920 --> 00:35:15,440
so it looks like our health check is

00:35:14,160 --> 00:35:17,839
just

00:35:15,440 --> 00:35:17,839
failing

00:35:18,720 --> 00:35:22,800
our gateway health check is just failing

00:35:21,359 --> 00:35:28,160
all right

00:35:22,800 --> 00:35:29,920
well if we do this thing

00:35:28,160 --> 00:35:31,520
then it will give us those post install

00:35:29,920 --> 00:35:33,200
connect

00:35:31,520 --> 00:35:34,560
instructions again we could try

00:35:33,200 --> 00:35:36,560
re-rolling out the gateway

00:35:34,560 --> 00:35:38,880
using that i just want to get the actual

00:35:36,560 --> 00:35:43,040
command here so we can go

00:35:38,880 --> 00:35:45,520
to deploy our gateway

00:35:43,040 --> 00:35:46,320
we already have the fast cli installed

00:35:45,520 --> 00:35:48,800
so i'm going to just

00:35:46,320 --> 00:35:50,800
roll out get the status of the rollout

00:35:48,800 --> 00:35:52,640
here actually

00:35:50,800 --> 00:35:54,240
one old replica is our pending

00:35:52,640 --> 00:35:56,720
termination

00:35:54,240 --> 00:35:59,520
yeah see that's the one that is being

00:35:56,720 --> 00:36:01,839
real grumpy at us

00:35:59,520 --> 00:36:01,839
hmm

00:36:06,320 --> 00:36:10,839
well we don't actually need to do this

00:36:08,640 --> 00:36:12,880
we just need to do it so that we can see

00:36:10,839 --> 00:36:17,280
it

00:36:12,880 --> 00:36:19,119
but we can see our data coming in

00:36:17,280 --> 00:36:21,119
we can go ahead and edit the file let's

00:36:19,119 --> 00:36:25,200
just go ahead and edit it here

00:36:21,119 --> 00:36:28,000
so we can go to our prometheus

00:36:25,200 --> 00:36:28,800
install here and we can actually just

00:36:28,000 --> 00:36:31,359
edit

00:36:28,800 --> 00:36:34,020
our config map so there's a config map

00:36:31,359 --> 00:36:36,160
setup here for that prometheus

00:36:34,020 --> 00:36:38,160
[Music]

00:36:36,160 --> 00:36:39,599
that is going to be pulling from this

00:36:38,160 --> 00:36:40,880
this configuration here

00:36:39,599 --> 00:36:43,680
and this is the piece that you want to

00:36:40,880 --> 00:36:46,480
change to get new relic running

00:36:43,680 --> 00:36:46,800
on your cluster which maybe would help

00:36:46,480 --> 00:36:49,920
us

00:36:46,800 --> 00:36:52,320
debug this actually so we have our

00:36:49,920 --> 00:36:53,839
prometheus yaml section in this file and

00:36:52,320 --> 00:36:55,599
this is the bit that we want to change

00:36:53,839 --> 00:36:57,599
in order to generate that

00:36:55,599 --> 00:36:59,920
we're going to go to the new relic page

00:36:57,599 --> 00:37:01,359
there's a link to this in that tutorial

00:36:59,920 --> 00:37:03,599
i'm going to pop over here to the

00:37:01,359 --> 00:37:06,640
browser and you can see now

00:37:03,599 --> 00:37:08,640
that here in my new relic account i can

00:37:06,640 --> 00:37:11,839
generate a remote right url

00:37:08,640 --> 00:37:14,160
so i just select my account here

00:37:11,839 --> 00:37:16,000
and i'm going to add a label here so

00:37:14,160 --> 00:37:21,280
we'll just call this

00:37:16,000 --> 00:37:21,280
kubecon webinar is my

00:37:21,839 --> 00:37:27,920
source generating a url

00:37:25,119 --> 00:37:30,079
i have this remote right bit of code

00:37:27,920 --> 00:37:33,359
there with my bearer token

00:37:30,079 --> 00:37:37,040
i will cycle after this webinar

00:37:33,359 --> 00:37:40,400
and we are going to paste that in here

00:37:37,040 --> 00:37:42,320
all right oops

00:37:40,400 --> 00:37:44,560
let's just get them all spaced in i

00:37:42,320 --> 00:37:46,000
gotta manually space because my

00:37:44,560 --> 00:37:48,000
other bit's not but you want it on the

00:37:46,000 --> 00:37:50,320
same indentation level

00:37:48,000 --> 00:37:51,839
as global so under this prometheus yaml

00:37:50,320 --> 00:37:53,040
section you have a global section then

00:37:51,839 --> 00:37:54,960
you have a remote rewrite

00:37:53,040 --> 00:37:57,119
a remote right section so you're telling

00:37:54,960 --> 00:37:58,800
prometheus as you collect all these

00:37:57,119 --> 00:37:59,760
metrics i actually want you to store

00:37:58,800 --> 00:38:01,280
them over here

00:37:59,760 --> 00:38:03,040
and that will deliver your metrics from

00:38:01,280 --> 00:38:04,960
prometheus through the normal scraping

00:38:03,040 --> 00:38:07,680
process that prometheus uses

00:38:04,960 --> 00:38:09,119
up to the telemetry data platform so now

00:38:07,680 --> 00:38:10,960
we've got that set up here with this

00:38:09,119 --> 00:38:14,400
remote right endpoint and

00:38:10,960 --> 00:38:17,599
kubecon webinar and when we

00:38:14,400 --> 00:38:20,720
exit out of here that

00:38:17,599 --> 00:38:22,000
edited the config and we will for good

00:38:20,720 --> 00:38:27,680
measure

00:38:22,000 --> 00:38:27,680
just restart that deployment

00:38:27,920 --> 00:38:32,240
restart prometheus i actually think that

00:38:30,560 --> 00:38:33,520
prometheus live reloads this

00:38:32,240 --> 00:38:36,720
configuration

00:38:33,520 --> 00:38:38,720
in open fast but i think it's actually a

00:38:36,720 --> 00:38:40,560
configuration option that someone has to

00:38:38,720 --> 00:38:41,920
turn on or maybe maybe just part of how

00:38:40,560 --> 00:38:45,040
prometheus works

00:38:41,920 --> 00:38:46,800
inside of this but just to be sure we're

00:38:45,040 --> 00:38:48,320
going to go ahead and restart it

00:38:46,800 --> 00:38:49,920
so we can get all of our deployments

00:38:48,320 --> 00:38:51,359
there we can see that our gateway is

00:38:49,920 --> 00:38:54,800
still grumpy at us

00:38:51,359 --> 00:38:57,359
but if we go back over to our browser

00:38:54,800 --> 00:38:58,839
we should see now that we can check for

00:38:57,359 --> 00:39:01,599
data here

00:38:58,839 --> 00:39:03,480
and new relic is listening for our data

00:39:01,599 --> 00:39:06,640
and look at that we've already received

00:39:03,480 --> 00:39:09,040
223 metrics so we can go ahead and

00:39:06,640 --> 00:39:11,680
explore our data here

00:39:09,040 --> 00:39:12,640
and you get all of these metrics for

00:39:11,680 --> 00:39:14,480
free

00:39:12,640 --> 00:39:16,320
just with that one little change to your

00:39:14,480 --> 00:39:18,740
yaml file so you have your

00:39:16,320 --> 00:39:20,079
go gc and all of your

00:39:18,740 --> 00:39:23,040
[Music]

00:39:20,079 --> 00:39:23,920
metrics around the actual processes that

00:39:23,040 --> 00:39:26,160
are running

00:39:23,920 --> 00:39:27,599
and then you can track your prometheus

00:39:26,160 --> 00:39:30,720
information here as well

00:39:27,599 --> 00:39:33,200
you'll have queries here for open fast

00:39:30,720 --> 00:39:34,960
if the open fast gateway was up so the

00:39:33,200 --> 00:39:36,640
open phase gateway being down

00:39:34,960 --> 00:39:38,240
means that prometheus can't scrape it

00:39:36,640 --> 00:39:39,920
either but

00:39:38,240 --> 00:39:41,359
when it does it's actually quite a lot

00:39:39,920 --> 00:39:42,400
of fun because

00:39:41,359 --> 00:39:44,320
i'm sure when you walk through this

00:39:42,400 --> 00:39:45,440
tutorial that that particular step will

00:39:44,320 --> 00:39:46,720
go better for you but

00:39:45,440 --> 00:39:48,720
when you get to the part where the

00:39:46,720 --> 00:39:50,880
gateway is

00:39:48,720 --> 00:39:53,040
up then prometheus will scrape the

00:39:50,880 --> 00:39:54,960
function allocations and all sorts of

00:39:53,040 --> 00:39:56,320
are the function invocations and all

00:39:54,960 --> 00:39:57,520
sorts of metrics about the functions

00:39:56,320 --> 00:40:00,000
about how long they take

00:39:57,520 --> 00:40:00,560
um and then we get to run siege on those

00:40:00,000 --> 00:40:03,760
function

00:40:00,560 --> 00:40:07,200
endpoints and you know run run 100

00:40:03,760 --> 00:40:07,599
000 requests through them and and watch

00:40:07,200 --> 00:40:10,720
the

00:40:07,599 --> 00:40:12,240
graphs show up over here so but in in

00:40:10,720 --> 00:40:13,440
the meantime you can look over here in

00:40:12,240 --> 00:40:16,400
your

00:40:13,440 --> 00:40:18,560
your go information like how long your

00:40:16,400 --> 00:40:19,040
your go processes are taking look here

00:40:18,560 --> 00:40:21,680
we have

00:40:19,040 --> 00:40:22,800
how many seconds of gc we had two two

00:40:21,680 --> 00:40:24,880
seconds of gc

00:40:22,800 --> 00:40:26,240
for marco so these are these are less

00:40:24,880 --> 00:40:28,400
interesting i think than the

00:40:26,240 --> 00:40:29,680
the functions metrics but the moral of

00:40:28,400 --> 00:40:31,760
the story is

00:40:29,680 --> 00:40:32,960
you install these two lines into your

00:40:31,760 --> 00:40:34,800
yaml file

00:40:32,960 --> 00:40:37,040
and then you can immediately begin

00:40:34,800 --> 00:40:38,000
reporting data up to new relic anywhere

00:40:37,040 --> 00:40:40,079
you have

00:40:38,000 --> 00:40:41,440
prometheus prometheus is just one of the

00:40:40,079 --> 00:40:44,560
integrations of course

00:40:41,440 --> 00:40:46,640
that new relic uses that

00:40:44,560 --> 00:40:48,960
you you can plug all of your data into

00:40:46,640 --> 00:40:50,480
one central place into this telemetry

00:40:48,960 --> 00:40:51,920
data platform and build dashboards

00:40:50,480 --> 00:40:53,839
around it together with your logs and

00:40:51,920 --> 00:40:56,880
your alerts and all of the rest of your

00:40:53,839 --> 00:40:58,960
your dashboards it's a very convenient

00:40:56,880 --> 00:41:00,880
way to get information out of anything

00:40:58,960 --> 00:41:04,640
that is running from ets

00:41:00,880 --> 00:41:04,640
and let's just

00:41:04,880 --> 00:41:08,880
see if we can guess one more time the

00:41:07,119 --> 00:41:12,400
gateway is not

00:41:08,880 --> 00:41:13,280
starting up because does anyone have any

00:41:12,400 --> 00:41:15,680
ideas

00:41:13,280 --> 00:41:17,440
we're we're in this together now we have

00:41:15,680 --> 00:41:18,800
another 17 minutes

00:41:17,440 --> 00:41:21,440
on this webinar there are no more

00:41:18,800 --> 00:41:24,800
questions let's brainstorm here

00:41:21,440 --> 00:41:26,880
someone here i think knows the answer to

00:41:24,800 --> 00:41:30,720
this question

00:41:26,880 --> 00:41:33,520
i am going to cube cuddle and

00:41:30,720 --> 00:41:34,079
restart again this isn't actually doing

00:41:33,520 --> 00:41:38,079
anything

00:41:34,079 --> 00:41:38,079
is it maybe i will

00:41:39,200 --> 00:41:44,240
try turning it off and on again

00:41:42,960 --> 00:41:45,599
do you think i should try turning it off

00:41:44,240 --> 00:41:48,160
and on again i think we already tried

00:41:45,599 --> 00:41:52,240
that effectively

00:41:48,160 --> 00:41:54,160
we can't get into our gateway

00:41:52,240 --> 00:41:56,319
but i can show you other things i can

00:41:54,160 --> 00:41:58,800
show you the fast cli store that's

00:41:56,319 --> 00:41:58,800
pretty cool

00:41:59,440 --> 00:42:02,640
so this is all of the stuff that you can

00:42:01,040 --> 00:42:04,240
get from the fast cli store these are

00:42:02,640 --> 00:42:06,000
the built-in functions this is the one

00:42:04,240 --> 00:42:08,000
we were going to use this figlet one

00:42:06,000 --> 00:42:09,920
you can also get the node information to

00:42:08,000 --> 00:42:11,200
get the node info for the individual

00:42:09,920 --> 00:42:12,960
nodes

00:42:11,200 --> 00:42:14,960
can you do a describe on the gateway all

00:42:12,960 --> 00:42:16,000
right papa i'm following along you just

00:42:14,960 --> 00:42:18,160
keep asking questions

00:42:16,000 --> 00:42:19,440
with what command to run next okay i'm

00:42:18,160 --> 00:42:21,599
doing a describe

00:42:19,440 --> 00:42:23,040
on the gateway so i'm going to say cube

00:42:21,599 --> 00:42:26,000
cuddle

00:42:23,040 --> 00:42:26,000
describe

00:42:27,680 --> 00:42:34,880
our pod our

00:42:30,960 --> 00:42:34,880
deployment cube cuddle describe

00:42:36,880 --> 00:42:42,079
deployment dot apps and then i put

00:42:40,400 --> 00:42:45,599
gateway in here like this

00:42:42,079 --> 00:42:48,000
is that how i do it

00:42:45,599 --> 00:42:48,640
someone give me a hand hey i did

00:42:48,000 --> 00:42:50,160
something

00:42:48,640 --> 00:42:51,760
i think that's what i wanted to do let's

00:42:50,160 --> 00:42:56,160
see

00:42:51,760 --> 00:43:01,680
fasneties here is our gateway

00:42:56,160 --> 00:43:01,680
all right using up some memory

00:43:02,079 --> 00:43:05,359
what am i looking for here

00:43:05,599 --> 00:43:07,920
i

00:43:09,040 --> 00:43:13,839
have two unavailable replicas one

00:43:12,240 --> 00:43:16,640
desired

00:43:13,839 --> 00:43:16,640
one updated

00:43:17,440 --> 00:43:22,560
anything in here three failures lots of

00:43:20,800 --> 00:43:24,079
failures

00:43:22,560 --> 00:43:26,000
if i log them they just say they're

00:43:24,079 --> 00:43:28,160
failing their health checks

00:43:26,000 --> 00:43:31,839
there has to be a way to be getting more

00:43:28,160 --> 00:43:31,839
information out of those logs though

00:43:32,560 --> 00:43:34,960
and

00:43:36,480 --> 00:43:43,920
we don't know what it is

00:43:41,280 --> 00:43:46,560
they are not available they are

00:43:43,920 --> 00:43:46,560
progressing

00:43:52,839 --> 00:43:55,839
hmm

00:43:56,160 --> 00:44:03,200
well when in doubt

00:43:59,839 --> 00:44:03,520
we google things let's go back over here

00:44:03,200 --> 00:44:06,800
and

00:44:03,520 --> 00:44:07,119
ditch our page and we'll just search for

00:44:06,800 --> 00:44:12,160
it

00:44:07,119 --> 00:44:12,160
how about we're going to say open fast

00:44:12,480 --> 00:44:15,040
gateway

00:44:17,280 --> 00:44:24,240
what am i saying health failure

00:44:20,839 --> 00:44:27,920
health failure how about that

00:44:24,240 --> 00:44:29,359
troubleshooting a common

00:44:27,920 --> 00:44:30,880
user error is to try to invoke the

00:44:29,359 --> 00:44:32,480
gateway from within a function using

00:44:30,880 --> 00:44:34,160
this thing on localhost yeah we're not

00:44:32,480 --> 00:44:37,680
doing that

00:44:34,160 --> 00:44:43,280
an error with our fast provider

00:44:37,680 --> 00:44:43,280
no don't suppose that's true

00:44:43,920 --> 00:44:48,839
this is all for troubleshooting our open

00:44:45,839 --> 00:44:50,720
fast deployment do you have to do a port

00:44:48,839 --> 00:44:53,280
forward to

00:44:50,720 --> 00:44:55,839
this one ah yes okay so there is that

00:44:53,280 --> 00:44:55,839
piece

00:44:56,319 --> 00:45:01,440
that por forward piece though i think is

00:44:59,920 --> 00:45:05,200
if we want to use the

00:45:01,440 --> 00:45:08,240
huey to get into this piece

00:45:05,200 --> 00:45:09,290
but let's find out

00:45:08,240 --> 00:45:12,079
there's that um

00:45:09,290 --> 00:45:19,839
[Music]

00:45:12,079 --> 00:45:19,839
let's see what i'm looking for here

00:45:20,319 --> 00:45:23,599
i have in my

00:45:24,480 --> 00:45:27,359
inbox here

00:45:30,800 --> 00:45:35,200
a tutorial from alex ellis himself the

00:45:33,839 --> 00:45:38,079
creator

00:45:35,200 --> 00:45:40,400
of this thing so let's go and find

00:45:38,079 --> 00:45:44,480
alex's instructions

00:45:40,400 --> 00:45:44,480
alex will be our guide together here

00:45:44,720 --> 00:45:48,720
i'm hoping you all can see this one

00:45:47,359 --> 00:45:51,200
clearly

00:45:48,720 --> 00:45:52,000
oops looks like i tabbed away there you

00:45:51,200 --> 00:45:54,880
go

00:45:52,000 --> 00:45:56,240
so this is a tutorial that's just for

00:45:54,880 --> 00:45:57,680
connecting a single pie

00:45:56,240 --> 00:46:01,040
here he walks you through some of the

00:45:57,680 --> 00:46:04,560
tooling and when we get around

00:46:01,040 --> 00:46:08,160
to the open fast installation here

00:46:04,560 --> 00:46:10,160
let's check that out that's for the

00:46:08,160 --> 00:46:12,319
dashboard we did not set up the

00:46:10,160 --> 00:46:13,200
dashboard we installed open fast all

00:46:12,319 --> 00:46:16,000
right

00:46:13,200 --> 00:46:18,319
we've got this our open fast url is set

00:46:16,000 --> 00:46:21,520
up i wonder if that's

00:46:18,319 --> 00:46:22,880
incorrect maybe we'll see no we're not

00:46:21,520 --> 00:46:26,400
even getting that far right because we

00:46:22,880 --> 00:46:26,400
can't connect to the gateway that's the

00:46:26,839 --> 00:46:31,359
problem

00:46:28,240 --> 00:46:31,359
we could go into

00:46:32,480 --> 00:46:36,400
yeah if the gateway's down we won't be

00:46:33,920 --> 00:46:37,040
able to load it on on pyqueen.local

00:46:36,400 --> 00:46:40,160
either

00:46:37,040 --> 00:46:43,359
i mean we could try let's see let's see

00:46:40,160 --> 00:46:47,440
what that does

00:46:43,359 --> 00:46:50,079
um three one one one two

00:46:47,440 --> 00:46:52,400
thusly yeah we don't have a gateway to

00:46:50,079 --> 00:46:52,400
go to

00:46:55,040 --> 00:47:00,400
we are off the beaten track here

00:46:58,560 --> 00:47:02,640
which is fine this actually did happen

00:47:00,400 --> 00:47:02,960
to me one other time when i was spinning

00:47:02,640 --> 00:47:07,760
up

00:47:02,960 --> 00:47:07,760
these um nodes let's check

00:47:08,319 --> 00:47:15,200
one more time we don't have our gateway

00:47:12,480 --> 00:47:15,200
online here

00:47:16,640 --> 00:47:21,040
so you know wait does it say that oh no

00:47:19,599 --> 00:47:22,720
okay

00:47:21,040 --> 00:47:25,119
i thought maybe it had said that it

00:47:22,720 --> 00:47:28,640
worked once but it didn't

00:47:25,119 --> 00:47:28,640
yeah they're both unavailable

00:47:29,920 --> 00:47:34,720
and i don't think that i can install

00:47:32,240 --> 00:47:34,720
just

00:47:35,200 --> 00:47:40,800
that piece if i say

00:47:42,160 --> 00:47:46,720
get the tool install kubernetes apps

00:47:44,480 --> 00:47:49,280
from helm charts right

00:47:46,720 --> 00:47:51,520
so let's try one more time we're going

00:47:49,280 --> 00:47:54,079
to arc install

00:47:51,520 --> 00:47:56,559
uh open fast maybe it actually has like

00:47:54,079 --> 00:48:00,079
a component thing you can break it down

00:47:56,559 --> 00:48:02,480
okay when you open fast you can install

00:48:00,079 --> 00:48:04,400
the replicas of the gateway oh we could

00:48:02,480 --> 00:48:07,920
try more gateways

00:48:04,400 --> 00:48:10,480
why not let's just crank up the gateways

00:48:07,920 --> 00:48:13,200
to 11 here

00:48:10,480 --> 00:48:13,839
do i need to use no a is for the flag

00:48:13,200 --> 00:48:17,680
all right

00:48:13,839 --> 00:48:20,720
how many gateways i want five gateways

00:48:17,680 --> 00:48:23,119
give me all the gateways

00:48:20,720 --> 00:48:24,240
there we go one of these is bound to

00:48:23,119 --> 00:48:27,920
work

00:48:24,240 --> 00:48:30,880
what do you think i think we have five

00:48:27,920 --> 00:48:30,880
times the odds

00:48:30,960 --> 00:48:36,880
let's see what our status is here

00:48:35,520 --> 00:48:39,920
that would be a trip if one of these

00:48:36,880 --> 00:48:43,280
worked i would expect that

00:48:39,920 --> 00:48:45,280
that if one of them doesn't work

00:48:43,280 --> 00:48:49,280
wait four out of five new replicas have

00:48:45,280 --> 00:48:50,800
been updated so four out of five of them

00:48:49,280 --> 00:48:52,720
actually work and there's the first one

00:48:50,800 --> 00:49:02,960
didn't

00:48:52,720 --> 00:49:05,440
i mean

00:49:02,960 --> 00:49:05,440
okay

00:49:06,640 --> 00:49:17,839
is that actually what we're seeing there

00:49:07,839 --> 00:49:17,839
did it look like it worked

00:49:18,000 --> 00:49:21,440
hey we got three out of five gateways

00:49:20,000 --> 00:49:24,640
online

00:49:21,440 --> 00:49:27,760
so that's pretty good um

00:49:24,640 --> 00:49:30,160
but we're out of time so

00:49:27,760 --> 00:49:31,359
it worked we have a gateway we reported

00:49:30,160 --> 00:49:33,119
someday to the new relic

00:49:31,359 --> 00:49:35,359
i hope you enjoyed it have a wonderful

00:49:33,119 --> 00:49:35,359
day

00:49:37,520 --> 00:49:41,119
all right thank you so much jonah for

00:49:39,280 --> 00:49:43,440
your time today and thank you to all the

00:49:41,119 --> 00:49:45,920
participants who joined us

00:49:43,440 --> 00:49:47,839
as a reminder this recording will be on

00:49:45,920 --> 00:49:48,800
the linux foundation youtube page later

00:49:47,839 --> 00:49:50,000
today

00:49:48,800 --> 00:49:56,480
we hope you're able to join us for

00:49:50,000 --> 00:49:56,480

YouTube URL: https://www.youtube.com/watch?v=DYwRFVWz9zg


