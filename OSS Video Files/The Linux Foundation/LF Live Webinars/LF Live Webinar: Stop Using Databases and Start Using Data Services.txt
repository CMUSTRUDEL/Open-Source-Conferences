Title: LF Live Webinar: Stop Using Databases and Start Using Data Services
Publication date: 2021-03-17
Playlist: LF Live Webinars
Description: 
	Sponsored by DataStax

If you are building applications today, you are probably using either cloud or Kubernetes … or both! As a result, we are entering an era that we don’t have to make complex architecture decisions by weighing tradeoffs on scale, uptime, and usability. Patrick McFadin has been building and supporting scale applications for a long time and has seen all the evolution that has brought us to today. Engineer to engineer, Patrick wants to show you his journey into this world and what he’s been doing at DataStax and the Apache Cassandra project to help make it a reality.
Captions: 
	00:00:00,799 --> 00:00:05,839
wow it's so i mean it's wednesday

00:00:03,199 --> 00:00:07,040
and and if you don't know today's st

00:00:05,839 --> 00:00:10,320
patrick's day

00:00:07,040 --> 00:00:12,000
and um i feel like i have a little

00:00:10,320 --> 00:00:14,400
connection to this whole holiday being

00:00:12,000 --> 00:00:16,000
the irish guy in this co in this call so

00:00:14,400 --> 00:00:17,600
you have no idea how you double down

00:00:16,000 --> 00:00:18,960
today not only are you going to get some

00:00:17,600 --> 00:00:21,359
really interesting information

00:00:18,960 --> 00:00:22,720
i think i hope but you're also talking

00:00:21,359 --> 00:00:24,480
to st patrick

00:00:22,720 --> 00:00:26,720
so congratulations you don't even have

00:00:24,480 --> 00:00:28,320
to wear green it's a good day

00:00:26,720 --> 00:00:30,240
all right maybe not i'm not selling this

00:00:28,320 --> 00:00:33,760
am i all right um

00:00:30,240 --> 00:00:37,520
and i also want to clarify too um

00:00:33,760 --> 00:00:39,600
so this is uh this is a going to be

00:00:37,520 --> 00:00:40,559
a lot of information that i think is is

00:00:39,600 --> 00:00:42,079
new for folks

00:00:40,559 --> 00:00:44,559
and i'm really excited that we're going

00:00:42,079 --> 00:00:46,559
to go down this route together

00:00:44,559 --> 00:00:47,920
ask questions i won't be able to see the

00:00:46,559 --> 00:00:50,079
questions while i'm giving this because

00:00:47,920 --> 00:00:51,520
i'm in full screen mode for the preso

00:00:50,079 --> 00:00:53,199
but go ahead and ask the questions i'll

00:00:51,520 --> 00:00:54,160
leave plenty of time to talk about it

00:00:53,199 --> 00:00:57,039
afterwards

00:00:54,160 --> 00:00:58,000
let's dig in let's go into it i love the

00:00:57,039 --> 00:01:01,199
q a portion

00:00:58,000 --> 00:01:02,559
almost more than i like doing this so um

00:01:01,199 --> 00:01:04,720
like marissa said my name is patrick

00:01:02,559 --> 00:01:06,880
mcfadden um i do developer relations

00:01:04,720 --> 00:01:09,040
stuff here at data stacks i also

00:01:06,880 --> 00:01:10,640
work quite a bit in our open source site

00:01:09,040 --> 00:01:12,799
i do open source strategy

00:01:10,640 --> 00:01:14,400
um spend most of the time giving away

00:01:12,799 --> 00:01:16,000
software that's what i do

00:01:14,400 --> 00:01:18,240
and i work a lot with open source

00:01:16,000 --> 00:01:19,759
projects i work with cncf

00:01:18,240 --> 00:01:21,759
and i work with apache software

00:01:19,759 --> 00:01:23,119
foundation quite a bit so this is just

00:01:21,759 --> 00:01:26,720
my world i live in

00:01:23,119 --> 00:01:30,079
um but i'm also um

00:01:26,720 --> 00:01:31,119
an oracle dba yeah for a long long time

00:01:30,079 --> 00:01:34,240
and i've been building

00:01:31,119 --> 00:01:36,240
data driven apps for and i said 19

00:01:34,240 --> 00:01:37,680
i'm not going to tell you when a long

00:01:36,240 --> 00:01:39,520
time ago

00:01:37,680 --> 00:01:41,920
but you know and i was just i was

00:01:39,520 --> 00:01:43,920
certified as an oracle dba

00:01:41,920 --> 00:01:45,600
because that's how you made money back

00:01:43,920 --> 00:01:48,960
in the day and

00:01:45,600 --> 00:01:52,240
um you know this is part of my journey

00:01:48,960 --> 00:01:54,640
of working in the application space

00:01:52,240 --> 00:01:55,520
and when we started when i started doing

00:01:54,640 --> 00:01:57,200
this

00:01:55,520 --> 00:01:58,719
it was generally the database was the

00:01:57,200 --> 00:02:00,159
machine over here

00:01:58,719 --> 00:02:01,759
and then you had some other machine that

00:02:00,159 --> 00:02:03,439
was running your application logic over

00:02:01,759 --> 00:02:04,320
here and you could actually see them and

00:02:03,439 --> 00:02:08,319
touch them

00:02:04,320 --> 00:02:10,959
and that may sound crazy today but it

00:02:08,319 --> 00:02:13,200
meant that you had to really take care

00:02:10,959 --> 00:02:15,920
of all your infrastructure so

00:02:13,200 --> 00:02:16,879
i remember back in like 2000 during the

00:02:15,920 --> 00:02:18,480
com

00:02:16,879 --> 00:02:20,080
every pitch because i was involved in

00:02:18,480 --> 00:02:23,040
that dot-com craziness

00:02:20,080 --> 00:02:24,800
but every company that started the first

00:02:23,040 --> 00:02:26,080
slide that you showed a vc is

00:02:24,800 --> 00:02:28,000
how you're going to build your data

00:02:26,080 --> 00:02:29,440
center and

00:02:28,000 --> 00:02:31,840
because it was such a critical piece of

00:02:29,440 --> 00:02:33,519
the puzzle and um

00:02:31,840 --> 00:02:36,879
along that line i wrote a really good

00:02:33,519 --> 00:02:38,480
book you should use a database

00:02:36,879 --> 00:02:40,319
this is a fake book by the way i don't

00:02:38,480 --> 00:02:43,280
think it's real but

00:02:40,319 --> 00:02:44,959
um i think this was this was the most

00:02:43,280 --> 00:02:46,879
obvious thing that everyone said

00:02:44,959 --> 00:02:48,319
back in the day i mean i can't remember

00:02:46,879 --> 00:02:49,760
applications that were written that

00:02:48,319 --> 00:02:52,640
didn't need a database

00:02:49,760 --> 00:02:54,879
and especially it was when especially in

00:02:52,640 --> 00:02:57,040
the dot com era when we were like had

00:02:54,879 --> 00:02:58,080
tens and hundreds of users we needed a

00:02:57,040 --> 00:03:01,680
database

00:02:58,080 --> 00:03:04,640
but every application is data driven

00:03:01,680 --> 00:03:05,599
and because of that the database is such

00:03:04,640 --> 00:03:08,560
a critical

00:03:05,599 --> 00:03:10,400
piece of that that this is what i'm

00:03:08,560 --> 00:03:12,319
going to tell you today is stop using

00:03:10,400 --> 00:03:14,400
databases because they're too critical

00:03:12,319 --> 00:03:16,560
they've gotten way beyond what they need

00:03:14,400 --> 00:03:17,599
to be for you to be a successful

00:03:16,560 --> 00:03:20,400
developer

00:03:17,599 --> 00:03:22,080
or to be an sre that develops a good

00:03:20,400 --> 00:03:24,319
application i'm sorry that deploys

00:03:22,080 --> 00:03:26,799
applications into infrastructure

00:03:24,319 --> 00:03:29,360
just stop using databases that's the end

00:03:26,799 --> 00:03:30,840
of my talk i'll take any questions

00:03:29,360 --> 00:03:32,480
i'm kidding i'm going to prove this to

00:03:30,840 --> 00:03:34,959
you so

00:03:32,480 --> 00:03:36,480
this is like you know a good range of

00:03:34,959 --> 00:03:38,080
applications right

00:03:36,480 --> 00:03:41,040
is you know you have these web and

00:03:38,080 --> 00:03:43,599
mobile you have microservices out there

00:03:41,040 --> 00:03:44,480
iot all of these application types

00:03:43,599 --> 00:03:48,480
require

00:03:44,480 --> 00:03:50,640
the same thing a database and

00:03:48,480 --> 00:03:51,840
if you've been building any kind of

00:03:50,640 --> 00:03:53,599
applications

00:03:51,840 --> 00:03:54,799
this is probably similar this looks

00:03:53,599 --> 00:03:55,360
similar to the stack that you're

00:03:54,799 --> 00:03:56,959
building

00:03:55,360 --> 00:03:58,879
you know if it's if it's microservices

00:03:56,959 --> 00:04:00,080
you're probably distributing containers

00:03:58,879 --> 00:04:01,599
all over the place

00:04:00,080 --> 00:04:03,360
if you're doing web and mobile you have

00:04:01,599 --> 00:04:04,879
like your api gateway with

00:04:03,360 --> 00:04:06,400
what's happening on your on you know

00:04:04,879 --> 00:04:09,599
using like react

00:04:06,400 --> 00:04:11,280
js or i mean sorry react or some sort of

00:04:09,599 --> 00:04:12,959
like swift something like that on the

00:04:11,280 --> 00:04:14,720
mobile but it's always interacting

00:04:12,959 --> 00:04:18,079
eventually with the database

00:04:14,720 --> 00:04:20,720
and with iot it's pretty much

00:04:18,079 --> 00:04:22,880
the same but it's very very bespoke

00:04:20,720 --> 00:04:25,040
right iot is pouring

00:04:22,880 --> 00:04:26,639
tons of data into your database time

00:04:25,040 --> 00:04:30,320
series data into a database

00:04:26,639 --> 00:04:31,600
and in every case that database is kind

00:04:30,320 --> 00:04:34,400
of the center of the universe

00:04:31,600 --> 00:04:36,080
for everything um i don't know if uh

00:04:34,400 --> 00:04:39,440
anyone has seen this but someone at one

00:04:36,080 --> 00:04:42,479
point says data is the new oil

00:04:39,440 --> 00:04:46,080
what is it like slippery and expensive

00:04:42,479 --> 00:04:48,080
yes it's that so when we when we talk

00:04:46,080 --> 00:04:51,919
about data is the new oil

00:04:48,080 --> 00:04:54,479
um we want to make sure that you know

00:04:51,919 --> 00:04:55,840
it's it's not this really hard thing to

00:04:54,479 --> 00:04:57,759
pull out and we built that

00:04:55,840 --> 00:05:01,440
congratulations everybody

00:04:57,759 --> 00:05:01,440
um we have

00:05:03,919 --> 00:05:06,160
okay

00:05:06,960 --> 00:05:16,720
did my slides advanced

00:05:11,680 --> 00:05:16,720
oh boy hmm

00:05:18,479 --> 00:05:21,919
i think we're are we falling behind here

00:05:20,560 --> 00:05:23,840
on my slides

00:05:21,919 --> 00:05:25,680
you should be seeing an eye of soren at

00:05:23,840 --> 00:05:27,919
this point merc

00:05:25,680 --> 00:05:28,800
yeah i'm only seeing that hello here's

00:05:27,919 --> 00:05:32,560
my background

00:05:28,800 --> 00:05:32,560
slide really

00:05:35,360 --> 00:05:40,320
hold on i'm gonna i'm gonna kick it

00:05:41,360 --> 00:05:45,199
see this is why we we're doing it live

00:05:44,320 --> 00:05:53,840
fine

00:05:45,199 --> 00:05:53,840
i'm gonna reshare

00:06:00,000 --> 00:06:04,000
all right re-sharing here goes

00:06:05,120 --> 00:06:10,000
see i knew that we were going to be

00:06:06,400 --> 00:06:10,000
tempting the gods can you see that now

00:06:10,560 --> 00:06:15,360
yes okay i'm going to try again i'm

00:06:14,400 --> 00:06:17,840
going to hit present

00:06:15,360 --> 00:06:19,680
here we go okay so here's my background

00:06:17,840 --> 00:06:21,360
okay everyone got that right

00:06:19,680 --> 00:06:23,120
and then you didn't can you see my book

00:06:21,360 --> 00:06:26,560
now

00:06:23,120 --> 00:06:29,520
yes oh yes beautiful oh

00:06:26,560 --> 00:06:30,479
see where else you're traumatized by

00:06:29,520 --> 00:06:32,319
zoom at this point

00:06:30,479 --> 00:06:33,919
we're not even kind of asked questions

00:06:32,319 --> 00:06:34,560
they're like yeah zoom just did this to

00:06:33,919 --> 00:06:36,080
me

00:06:34,560 --> 00:06:38,080
all right thanks everyone for putting up

00:06:36,080 --> 00:06:40,240
with me

00:06:38,080 --> 00:06:41,759
um now the pictures of things i was

00:06:40,240 --> 00:06:44,319
talking about i'll just really

00:06:41,759 --> 00:06:46,160
catch us up here real quick um so yeah

00:06:44,319 --> 00:06:47,600
here's my fake book about using a

00:06:46,160 --> 00:06:49,280
database and i thought that was kind of

00:06:47,600 --> 00:06:50,400
funny and without the visual cue it's

00:06:49,280 --> 00:06:52,160
not even funny anymore

00:06:50,400 --> 00:06:54,479
i'm gonna i'm not gonna cry st patrick's

00:06:52,160 --> 00:06:56,160
day let's go get beer

00:06:54,479 --> 00:06:58,240
okay so i'm telling you to stop using

00:06:56,160 --> 00:06:59,520
databases this was the thing i was

00:06:58,240 --> 00:07:03,360
talking about like

00:06:59,520 --> 00:07:07,199
everything that you do has one of these

00:07:03,360 --> 00:07:10,080
right and then this is the slide that i

00:07:07,199 --> 00:07:12,240
i was hoping you would see is and

00:07:10,080 --> 00:07:16,160
marissa do you see a really

00:07:12,240 --> 00:07:19,039
really bad uh like eye of sauron slide

00:07:16,160 --> 00:07:20,560
i sure do okay good see i'm just going

00:07:19,039 --> 00:07:22,720
to keep checking on this i'm going to do

00:07:20,560 --> 00:07:26,240
checksums every like five slides okay

00:07:22,720 --> 00:07:26,560
all right so this is the world we live

00:07:26,240 --> 00:07:28,960
in

00:07:26,560 --> 00:07:31,199
right when when the database becomes

00:07:28,960 --> 00:07:33,680
like this this it's tyrannical it's just

00:07:31,199 --> 00:07:36,560
like this is the center of the universe

00:07:33,680 --> 00:07:37,680
and we have to like go ask it please can

00:07:36,560 --> 00:07:40,639
i have data

00:07:37,680 --> 00:07:41,199
i wrote this perfectly a perfect sql

00:07:40,639 --> 00:07:45,360
statement

00:07:41,199 --> 00:07:47,520
and it's like hmm i don't know and

00:07:45,360 --> 00:07:49,120
the issues that we've always run into is

00:07:47,520 --> 00:07:52,080
that developers

00:07:49,120 --> 00:07:53,599
especially have to really know a lot

00:07:52,080 --> 00:07:56,639
about databases

00:07:53,599 --> 00:07:57,759
to use them to be effective and more

00:07:56,639 --> 00:08:01,280
importantly to

00:07:57,759 --> 00:08:03,840
get the most out of it um if you don't

00:08:01,280 --> 00:08:06,240
if you're using something like mysql

00:08:03,840 --> 00:08:07,520
it's very different from implementation

00:08:06,240 --> 00:08:11,120
from say oracle

00:08:07,520 --> 00:08:12,240
and and if you're using nosql database

00:08:11,120 --> 00:08:15,840
like cassandra

00:08:12,240 --> 00:08:18,479
also very different and it required it

00:08:15,840 --> 00:08:20,160
puts a lot of knowledge and

00:08:18,479 --> 00:08:22,240
this this thing where you have to go

00:08:20,160 --> 00:08:22,960
pray to the altar of the database to get

00:08:22,240 --> 00:08:24,879
the best

00:08:22,960 --> 00:08:26,639
performance and the best use of that

00:08:24,879 --> 00:08:29,520
database

00:08:26,639 --> 00:08:31,440
i've been working on this for so long i

00:08:29,520 --> 00:08:33,519
forget sometimes that you know

00:08:31,440 --> 00:08:35,839
i know how to optimize an sql query for

00:08:33,519 --> 00:08:39,039
oracle because i know how to optimize

00:08:35,839 --> 00:08:41,039
like table scans and row scans and

00:08:39,039 --> 00:08:42,880
cassandra same thing i know how to build

00:08:41,039 --> 00:08:44,560
partition keys and clustering columns

00:08:42,880 --> 00:08:46,240
that are proper that will give you sub

00:08:44,560 --> 00:08:48,880
millisecond

00:08:46,240 --> 00:08:50,880
performance and works well in a huge

00:08:48,880 --> 00:08:53,200
thousand node cluster

00:08:50,880 --> 00:08:54,240
that's a lot of to expect from somebody

00:08:53,200 --> 00:08:56,320
who's starting

00:08:54,240 --> 00:08:58,240
or let's say the first day that they're

00:08:56,320 --> 00:08:59,680
there and then so what we've done is

00:08:58,240 --> 00:09:02,480
we've created this whole

00:08:59,680 --> 00:09:03,600
the order of the sacred dbas that we all

00:09:02,480 --> 00:09:06,480
have to like

00:09:03,600 --> 00:09:08,640
ask very politely and i was one of those

00:09:06,480 --> 00:09:10,399
people

00:09:08,640 --> 00:09:11,920
this is a group of people that whenever

00:09:10,399 --> 00:09:13,519
things are not going quite the way you

00:09:11,920 --> 00:09:16,959
expected them to

00:09:13,519 --> 00:09:20,000
uh that you call and say hey

00:09:16,959 --> 00:09:24,959
oracle dba my query is slow

00:09:20,000 --> 00:09:24,959
um and i uh

00:09:25,680 --> 00:09:29,040
i when i'm in the middle of doing like

00:09:28,640 --> 00:09:32,160
work

00:09:29,040 --> 00:09:35,200
as an oracle dba um

00:09:32,160 --> 00:09:37,040
i'm in this mode where hey um

00:09:35,200 --> 00:09:39,760
i'm gonna listen to your question but i

00:09:37,040 --> 00:09:39,760
don't think um

00:09:41,600 --> 00:09:47,040
sorry just a minute the uh when i'm in

00:09:44,880 --> 00:09:49,760
the mode of being an oracle dba

00:09:47,040 --> 00:09:51,600
um i'm gonna be listening to questions

00:09:49,760 --> 00:09:54,720
and i'm going to try to answer them

00:09:51,600 --> 00:09:55,839
well in that mode i i'm in i'm just

00:09:54,720 --> 00:09:58,240
going to be like well

00:09:55,839 --> 00:09:59,920
i'm going to help you the best i can but

00:09:58,240 --> 00:10:01,120
i'm going to be hoping that someone's

00:09:59,920 --> 00:10:02,480
going to know what they're doing because

00:10:01,120 --> 00:10:04,240
that's a lot of questions i'm going to

00:10:02,480 --> 00:10:07,040
get and you know this if you're a dba

00:10:04,240 --> 00:10:08,000
it's like hey how come i'm you know my

00:10:07,040 --> 00:10:11,200
uh

00:10:08,000 --> 00:10:12,000
my query is two milliseconds slower than

00:10:11,200 --> 00:10:13,360
the last one

00:10:12,000 --> 00:10:14,880
well i don't know let me go check the

00:10:13,360 --> 00:10:17,120
index or things like that i mean it's

00:10:14,880 --> 00:10:18,399
just a lot of deep knowledge and

00:10:17,120 --> 00:10:20,880
here's when you start learning things

00:10:18,399 --> 00:10:23,279
like explain plan right

00:10:20,880 --> 00:10:24,959
um and then this is i think this is

00:10:23,279 --> 00:10:27,200
where we where we land with

00:10:24,959 --> 00:10:28,560
using databases is we have these design

00:10:27,200 --> 00:10:31,680
time trade-offs

00:10:28,560 --> 00:10:33,200
um design time trade-offs application

00:10:31,680 --> 00:10:34,959
and you know we're going to be building

00:10:33,200 --> 00:10:36,160
our application and it's this meeting

00:10:34,959 --> 00:10:37,680
you know where you're on the whiteboard

00:10:36,160 --> 00:10:38,959
and you're saying okay look we have this

00:10:37,680 --> 00:10:42,320
thing what are we going to build

00:10:38,959 --> 00:10:43,760
and in that meeting you have to make

00:10:42,320 --> 00:10:46,720
tradeoff discussions

00:10:43,760 --> 00:10:48,240
say what are my what are the needs of

00:10:46,720 --> 00:10:50,560
the application

00:10:48,240 --> 00:10:52,160
what are the scaling requirements how do

00:10:50,560 --> 00:10:54,399
i deploy it and

00:10:52,160 --> 00:10:55,200
each one of those comes with a trade-off

00:10:54,399 --> 00:10:58,240
and

00:10:55,200 --> 00:10:59,279
the trade-offs usually are your best

00:10:58,240 --> 00:11:01,760
guess

00:10:59,279 --> 00:11:03,440
and sometimes they're not the best best

00:11:01,760 --> 00:11:06,160
guess because whenever you

00:11:03,440 --> 00:11:07,920
deploy it you learn that oh wait the

00:11:06,160 --> 00:11:08,399
scaling requirements are completely

00:11:07,920 --> 00:11:11,200
different

00:11:08,399 --> 00:11:11,680
or something else so this is a really

00:11:11,200 --> 00:11:13,440
hard

00:11:11,680 --> 00:11:14,720
and probably most stressful part of

00:11:13,440 --> 00:11:17,519
building your

00:11:14,720 --> 00:11:19,360
application like in a design phase is

00:11:17,519 --> 00:11:23,040
just making the right choices

00:11:19,360 --> 00:11:24,399
and luckily in 2021 we have better

00:11:23,040 --> 00:11:27,760
choices that give us

00:11:24,399 --> 00:11:30,399
less of those problems um

00:11:27,760 --> 00:11:31,680
and then here's this um it's funny

00:11:30,399 --> 00:11:33,200
because we're doing this with a linux

00:11:31,680 --> 00:11:35,920
foundation and cncf

00:11:33,200 --> 00:11:36,959
of course we love cloud but you all love

00:11:35,920 --> 00:11:40,240
some cloud

00:11:36,959 --> 00:11:41,600
and that has changed so much of how we

00:11:40,240 --> 00:11:44,959
do things now

00:11:41,600 --> 00:11:48,000
and running databases now um

00:11:44,959 --> 00:11:50,720
i think it from from a standpoint of

00:11:48,000 --> 00:11:53,200
cloud and database not a whole lot has

00:11:50,720 --> 00:11:55,200
changed there has been some changes but

00:11:53,200 --> 00:11:57,120
you're still probably doing like a bare

00:11:55,200 --> 00:11:58,720
metal-ish type deployment you're still

00:11:57,120 --> 00:11:59,920
under trying to understand a database

00:11:58,720 --> 00:12:02,720
but that is changing

00:11:59,920 --> 00:12:04,000
um that is hopefully going to change and

00:12:02,720 --> 00:12:04,880
we're going to get to that in a minute

00:12:04,000 --> 00:12:07,279
but

00:12:04,880 --> 00:12:08,959
um the fact that you're deploying a

00:12:07,279 --> 00:12:11,839
cloud and you're probably not

00:12:08,959 --> 00:12:13,360
racking up hardware anywhere because i i

00:12:11,839 --> 00:12:16,079
can't even remember the last time i

00:12:13,360 --> 00:12:18,160
did that um it gives us a whole lot of

00:12:16,079 --> 00:12:21,279
new opportunities right

00:12:18,160 --> 00:12:24,160
and then kubernetes come on now that is

00:12:21,279 --> 00:12:26,880
it's done don't ask questions of course

00:12:24,160 --> 00:12:29,440
it's taken over and for good reason

00:12:26,880 --> 00:12:30,320
the thing that i have really started to

00:12:29,440 --> 00:12:32,639
love about

00:12:30,320 --> 00:12:33,680
where kubernetes lands in the in the

00:12:32,639 --> 00:12:35,920
grand scheme

00:12:33,680 --> 00:12:38,320
of building applications is you know

00:12:35,920 --> 00:12:39,680
we've we've slowly abstracted layers

00:12:38,320 --> 00:12:41,839
over the years

00:12:39,680 --> 00:12:44,399
where we went from bare metal to virtual

00:12:41,839 --> 00:12:47,040
machines to containers

00:12:44,399 --> 00:12:47,760
we went from you know from bare metal

00:12:47,040 --> 00:12:50,880
that we install

00:12:47,760 --> 00:12:52,399
ourselves to instance types then

00:12:50,880 --> 00:12:54,800
eventually to

00:12:52,399 --> 00:12:56,480
you know running containers in the cloud

00:12:54,800 --> 00:12:58,160
but now kubernetes

00:12:56,480 --> 00:13:00,079
and and all of those you had to kind of

00:12:58,160 --> 00:13:01,839
run yourself now kubernetes is

00:13:00,079 --> 00:13:04,399
abstracting the next layer which is

00:13:01,839 --> 00:13:06,399
abstracting entire data centers you know

00:13:04,399 --> 00:13:08,079
kubernetes is a data center abstraction

00:13:06,399 --> 00:13:09,920
it's virtualized data center

00:13:08,079 --> 00:13:12,079
so i deployed an entire data center

00:13:09,920 --> 00:13:16,160
worth of app an application

00:13:12,079 --> 00:13:18,959
and it is really amazing how

00:13:16,160 --> 00:13:19,680
that is the timing is perfect because it

00:13:18,959 --> 00:13:21,519
keeps us from

00:13:19,680 --> 00:13:23,120
getting too locked into one thing like

00:13:21,519 --> 00:13:24,480
if we want to move from on-prem

00:13:23,120 --> 00:13:26,240
but that means that we need to really

00:13:24,480 --> 00:13:27,760
understand the entire picture

00:13:26,240 --> 00:13:29,360
of deploying an application with

00:13:27,760 --> 00:13:30,320
something like kubernetes because we're

00:13:29,360 --> 00:13:32,880
building the entire

00:13:30,320 --> 00:13:33,760
virtual data center and it needs to be

00:13:32,880 --> 00:13:36,959
able to

00:13:33,760 --> 00:13:38,320
hold up to our application needs

00:13:36,959 --> 00:13:40,639
so this is where we get to the data

00:13:38,320 --> 00:13:41,920
services so i'm saying stop using

00:13:40,639 --> 00:13:44,880
databases

00:13:41,920 --> 00:13:45,760
but use data services and this is a

00:13:44,880 --> 00:13:47,279
fundamental

00:13:45,760 --> 00:13:49,279
shift in your thinking in your

00:13:47,279 --> 00:13:53,199
deployment everything

00:13:49,279 --> 00:13:54,639
um and i'm going to go into why

00:13:53,199 --> 00:13:56,399
i don't think this will be too much of a

00:13:54,639 --> 00:13:57,839
shock but this is a this is something

00:13:56,399 --> 00:14:00,800
that i feel like we need to

00:13:57,839 --> 00:14:02,320
as a community of application builders

00:14:00,800 --> 00:14:03,680
and database professionals

00:14:02,320 --> 00:14:05,600
we need to start thinking about things

00:14:03,680 --> 00:14:06,639
in terms of data services just like how

00:14:05,600 --> 00:14:08,240
we went from

00:14:06,639 --> 00:14:11,040
deploying containers on our own data

00:14:08,240 --> 00:14:14,800
centers to deploying in kubernetes

00:14:11,040 --> 00:14:16,720
so a data service is pretty simple and

00:14:14,800 --> 00:14:19,040
there have been versions of this in the

00:14:16,720 --> 00:14:22,079
past this isn't too crazy but this is

00:14:19,040 --> 00:14:25,360
we're getting into more a defined space

00:14:22,079 --> 00:14:26,079
now um data services are an abstraction

00:14:25,360 --> 00:14:29,279
layer

00:14:26,079 --> 00:14:32,000
um the underlying the top line is

00:14:29,279 --> 00:14:34,880
the apis that developers need probably

00:14:32,000 --> 00:14:38,959
some sort of http api like rest graphql

00:14:34,880 --> 00:14:42,160
grpc um the

00:14:38,959 --> 00:14:45,040
uh sql cql document

00:14:42,160 --> 00:14:45,440
gremlin you know those are protocols

00:14:45,040 --> 00:14:48,480
that

00:14:45,440 --> 00:14:51,360
do work um and can work

00:14:48,480 --> 00:14:52,000
on your database however the data

00:14:51,360 --> 00:14:54,480
service

00:14:52,000 --> 00:14:55,279
um really wants to abstract the layer

00:14:54,480 --> 00:14:57,120
like it wants to

00:14:55,279 --> 00:14:59,600
hide the implementation from the

00:14:57,120 --> 00:15:02,320
underneath and

00:14:59,600 --> 00:15:03,199
this is what i think if you look at like

00:15:02,320 --> 00:15:04,959
the left side

00:15:03,199 --> 00:15:06,639
this is probably what you want to use

00:15:04,959 --> 00:15:08,000
mostly anyway because

00:15:06,639 --> 00:15:11,040
you're not thinking when you're using

00:15:08,000 --> 00:15:13,199
rest you're not thinking wow am i using

00:15:11,040 --> 00:15:15,120
you know am i using the right keys here

00:15:13,199 --> 00:15:17,279
for optimize query

00:15:15,120 --> 00:15:19,120
well that keeps our developers from

00:15:17,279 --> 00:15:20,639
having to overthink about what's going

00:15:19,120 --> 00:15:22,240
on below the line

00:15:20,639 --> 00:15:23,760
and the below the line is the actual

00:15:22,240 --> 00:15:26,639
database itself

00:15:23,760 --> 00:15:28,160
um and yes we're still using someone's

00:15:26,639 --> 00:15:28,959
still using a database but the data

00:15:28,160 --> 00:15:31,360
service is

00:15:28,959 --> 00:15:33,759
abstracting that layer away and you

00:15:31,360 --> 00:15:37,360
think about in terms of how we deploy it

00:15:33,759 --> 00:15:38,720
that's where it gets interesting so

00:15:37,360 --> 00:15:40,639
so there are some great examples of

00:15:38,720 --> 00:15:45,360
these out there

00:15:40,639 --> 00:15:45,360
this is uh there's um

00:15:46,959 --> 00:15:51,680
so there's a lot of these uh you know

00:15:49,680 --> 00:15:55,199
out there already

00:15:51,680 --> 00:15:58,079
and hang on

00:15:55,199 --> 00:15:59,440
so whenever we have i'm sorry we've got

00:15:58,079 --> 00:16:02,560
something that happened outside

00:15:59,440 --> 00:16:03,519
so akio is a really interesting project

00:16:02,560 --> 00:16:05,680
by facebook

00:16:03,519 --> 00:16:07,680
it's a data service that um has some

00:16:05,680 --> 00:16:09,839
really cool features like

00:16:07,680 --> 00:16:11,839
abstracts is geographics and things like

00:16:09,839 --> 00:16:14,800
that um

00:16:11,839 --> 00:16:16,560
at no point does the engineers that use

00:16:14,800 --> 00:16:18,079
it have any idea what database they're

00:16:16,560 --> 00:16:20,399
using or where it is

00:16:18,079 --> 00:16:22,240
and that's the point they want to bring

00:16:20,399 --> 00:16:26,000
in

00:16:22,240 --> 00:16:26,399
engineers that are going to be ready to

00:16:26,000 --> 00:16:28,240
use

00:16:26,399 --> 00:16:30,160
or to build the front end part of

00:16:28,240 --> 00:16:32,480
facebook and instagram

00:16:30,160 --> 00:16:33,680
on the first day they don't want to have

00:16:32,480 --> 00:16:37,040
them to go through

00:16:33,680 --> 00:16:38,800
multiple days of uh learning or multiple

00:16:37,040 --> 00:16:40,720
months of learning all the back end data

00:16:38,800 --> 00:16:42,720
systems that's just not important

00:16:40,720 --> 00:16:44,079
and akio takes away a lot of the really

00:16:42,720 --> 00:16:46,480
interesting things that

00:16:44,079 --> 00:16:47,839
um that are great for keeping your

00:16:46,480 --> 00:16:49,040
application online but

00:16:47,839 --> 00:16:51,199
developers shouldn't have to worry about

00:16:49,040 --> 00:16:53,279
like data placement and replication

00:16:51,199 --> 00:16:58,000
things like that

00:16:53,279 --> 00:17:00,160
so when we're using a database um

00:16:58,000 --> 00:17:01,120
you have some things you can do here

00:17:00,160 --> 00:17:03,839
like for instance

00:17:01,120 --> 00:17:05,439
um you're something you have to do like

00:17:03,839 --> 00:17:06,400
you have to make sure that the driver is

00:17:05,439 --> 00:17:08,959
installed

00:17:06,400 --> 00:17:10,480
that you have to initialize that

00:17:08,959 --> 00:17:12,480
connection to the database

00:17:10,480 --> 00:17:14,480
you have to create a prepared statement

00:17:12,480 --> 00:17:16,480
then you execute the statement and then

00:17:14,480 --> 00:17:18,480
you finally parse and use the result

00:17:16,480 --> 00:17:20,079
this is a block diagram but this is

00:17:18,480 --> 00:17:23,679
pretty much every database

00:17:20,079 --> 00:17:25,199
that you use um there are some you know

00:17:23,679 --> 00:17:26,799
there's some details in there of course

00:17:25,199 --> 00:17:28,559
but i mean that's mainly what we have to

00:17:26,799 --> 00:17:29,679
do every time we want to use a database

00:17:28,559 --> 00:17:32,160
it doesn't matter if you're using

00:17:29,679 --> 00:17:35,120
node.js or java or whatever

00:17:32,160 --> 00:17:35,679
um and i'm going to check are my are my

00:17:35,120 --> 00:17:39,280
slides

00:17:35,679 --> 00:17:43,039
advancing yes they are

00:17:39,280 --> 00:17:46,480
okay so you have to do that checksum

00:17:43,039 --> 00:17:48,400
so when you use a database um

00:17:46,480 --> 00:17:50,559
is this is the way it should work right

00:17:48,400 --> 00:17:53,760
well what happens when using data

00:17:50,559 --> 00:17:55,280
services we cut out a lot of that stuff

00:17:53,760 --> 00:17:56,799
from here we're just executing a

00:17:55,280 --> 00:17:57,919
statement and parsing and using the

00:17:56,799 --> 00:18:01,039
results

00:17:57,919 --> 00:18:03,200
and what this eliminates is a lot of

00:18:01,039 --> 00:18:06,320
stuff a lot of the ceremony

00:18:03,200 --> 00:18:08,240
we like to call it that but it's the

00:18:06,320 --> 00:18:09,360
am i using the correct driver for the

00:18:08,240 --> 00:18:12,640
correct database

00:18:09,360 --> 00:18:15,280
um am i managing my connections properly

00:18:12,640 --> 00:18:16,640
and if i'm not what does that do to the

00:18:15,280 --> 00:18:18,480
database

00:18:16,640 --> 00:18:20,799
you know if you work a lot with like

00:18:18,480 --> 00:18:21,520
oracle keeping open database connections

00:18:20,799 --> 00:18:24,960
forever is

00:18:21,520 --> 00:18:26,640
really a bad idea um and so uh

00:18:24,960 --> 00:18:28,000
pooling connection pooling that sort of

00:18:26,640 --> 00:18:29,679
things it puts a lot

00:18:28,000 --> 00:18:31,360
of burden inside of your application

00:18:29,679 --> 00:18:33,440
code and then eventually for application

00:18:31,360 --> 00:18:35,200
developers because all that gets

00:18:33,440 --> 00:18:37,120
you can you can hide it in

00:18:35,200 --> 00:18:38,640
implementation but eventually

00:18:37,120 --> 00:18:41,360
you know there's gonna have to be dealt

00:18:38,640 --> 00:18:43,039
with and when you're using data services

00:18:41,360 --> 00:18:45,360
over http apis

00:18:43,039 --> 00:18:47,760
you're you're just providing an endpoint

00:18:45,360 --> 00:18:50,960
and those data services provide

00:18:47,760 --> 00:18:52,720
um enough get and put operations

00:18:50,960 --> 00:18:54,400
so that developers on the front end can

00:18:52,720 --> 00:18:55,679
just keep moving and

00:18:54,400 --> 00:18:57,760
that's what we really want that's the

00:18:55,679 --> 00:19:01,440
dream right

00:18:57,760 --> 00:19:02,320
and this uh this is a great slide to

00:19:01,440 --> 00:19:05,840
show first of all

00:19:02,320 --> 00:19:07,600
danger iceberg but it's also

00:19:05,840 --> 00:19:09,360
shows the implementation like this is

00:19:07,600 --> 00:19:10,720
what we want we want this top line to

00:19:09,360 --> 00:19:12,480
look oh it's just this cute little

00:19:10,720 --> 00:19:13,600
iceberg out here it's very easy to use

00:19:12,480 --> 00:19:17,520
but that messy

00:19:13,600 --> 00:19:20,880
big mess details underneath is hidden

00:19:17,520 --> 00:19:22,799
um and so there's a

00:19:20,880 --> 00:19:24,080
there's some stuff happening at uh i

00:19:22,799 --> 00:19:25,520
can't name there's a lot of these

00:19:24,080 --> 00:19:28,240
projects out there that i can't talk

00:19:25,520 --> 00:19:31,039
about i will talk about one that i can

00:19:28,240 --> 00:19:32,000
but um because and the reason i can't

00:19:31,039 --> 00:19:34,720
talk about them because they haven't

00:19:32,000 --> 00:19:36,240
quite gone open source yet and but

00:19:34,720 --> 00:19:38,160
think of all the hyperscalers the big

00:19:36,240 --> 00:19:40,080
companies that are doing scale

00:19:38,160 --> 00:19:42,640
operations they're all moving to data

00:19:40,080 --> 00:19:45,120
services and staying away from databases

00:19:42,640 --> 00:19:46,799
and mainly because of the messy details

00:19:45,120 --> 00:19:48,720
why not have a small core group of

00:19:46,799 --> 00:19:49,919
people that manage database operations

00:19:48,720 --> 00:19:53,440
like what if i want to

00:19:49,919 --> 00:19:55,679
migrate from one database to another

00:19:53,440 --> 00:19:57,600
or i want to migrate from one data

00:19:55,679 --> 00:19:59,520
center to another

00:19:57,600 --> 00:20:01,600
you know things like that or i need to

00:19:59,520 --> 00:20:03,679
do some operations on my database that

00:20:01,600 --> 00:20:05,600
generally require me to have a

00:20:03,679 --> 00:20:07,520
negotiation with developers

00:20:05,600 --> 00:20:09,120
no just abstract the whole thing as long

00:20:07,520 --> 00:20:11,360
as the api is online

00:20:09,120 --> 00:20:12,960
everything's good it gives you the

00:20:11,360 --> 00:20:15,360
ability to change things

00:20:12,960 --> 00:20:15,360
underneath

00:20:16,400 --> 00:20:25,120
all right

00:20:20,559 --> 00:20:28,720
there we go oops

00:20:25,120 --> 00:20:30,159
so here are the three things that i

00:20:28,720 --> 00:20:34,640
would consider criteria

00:20:30,159 --> 00:20:37,520
for data services oops back back

00:20:34,640 --> 00:20:38,960
you need to have on-demand scaling you

00:20:37,520 --> 00:20:40,400
need to be elastic

00:20:38,960 --> 00:20:42,799
meaning you just pay for what you need

00:20:40,400 --> 00:20:46,720
so if it goes up it goes down

00:20:42,799 --> 00:20:48,559
and you need near 100 uptime um

00:20:46,720 --> 00:20:50,240
these things give you that maximum

00:20:48,559 --> 00:20:51,520
flexibility with the minimum amount of

00:20:50,240 --> 00:20:53,919
tradeoffs

00:20:51,520 --> 00:20:55,520
and when you think about when you're

00:20:53,919 --> 00:21:00,000
building applications

00:20:55,520 --> 00:21:01,760
um and you're having uh

00:21:00,000 --> 00:21:03,840
you're having these discussions built in

00:21:01,760 --> 00:21:04,960
this application build time

00:21:03,840 --> 00:21:06,720
these are three things that you would

00:21:04,960 --> 00:21:07,440
really love to say these are not at the

00:21:06,720 --> 00:21:09,600
problem

00:21:07,440 --> 00:21:11,440
yeah are we gonna have enough yeah we'll

00:21:09,600 --> 00:21:13,039
get whatever we want when we need it

00:21:11,440 --> 00:21:14,880
is it gonna be online no matter where we

00:21:13,039 --> 00:21:16,640
are in the world yeah should be up no

00:21:14,880 --> 00:21:18,000
problem that's what it's built to do

00:21:16,640 --> 00:21:19,679
and then finally is it going to blow out

00:21:18,000 --> 00:21:20,480
our budget nope it's not going to do

00:21:19,679 --> 00:21:22,480
that because

00:21:20,480 --> 00:21:23,679
if we don't use it it's going to scale

00:21:22,480 --> 00:21:24,720
back down and we're not going to have to

00:21:23,679 --> 00:21:27,440
pay for it

00:21:24,720 --> 00:21:29,520
great okay moving on to the other thing

00:21:27,440 --> 00:21:30,720
spaces or tabs

00:21:29,520 --> 00:21:32,720
i'll let you figure that out for

00:21:30,720 --> 00:21:36,559
yourself um but

00:21:32,720 --> 00:21:36,880
we have less of a conversation around

00:21:36,559 --> 00:21:38,720
just

00:21:36,880 --> 00:21:41,039
data and man i'll tell you this could

00:21:38,720 --> 00:21:44,799
really make your life better

00:21:41,039 --> 00:21:46,960
now open source is coming to the rescue

00:21:44,799 --> 00:21:50,320
on this one because

00:21:46,960 --> 00:21:53,360
uh cloud databases um have started

00:21:50,320 --> 00:21:56,720
going down this route and we know that

00:21:53,360 --> 00:21:58,799
you know there are cloud uh serverless

00:21:56,720 --> 00:22:00,080
databases out there or data services

00:21:58,799 --> 00:22:02,960
that

00:22:00,080 --> 00:22:03,919
um basically are there to lock you into

00:22:02,960 --> 00:22:07,200
their service

00:22:03,919 --> 00:22:09,600
and it's pretty well known you know they

00:22:07,200 --> 00:22:12,720
they want you in their walled garden

00:22:09,600 --> 00:22:15,039
so if you're in cloud x and they have a

00:22:12,720 --> 00:22:16,400
very bespoke data service that works

00:22:15,039 --> 00:22:19,120
inside of their cloud

00:22:16,400 --> 00:22:20,320
they know if you move your data into it

00:22:19,120 --> 00:22:20,799
you're probably going to be there for

00:22:20,320 --> 00:22:23,360
life

00:22:20,799 --> 00:22:25,280
right because you know how it goes oh

00:22:23,360 --> 00:22:26,720
someday we'll move our database to this

00:22:25,280 --> 00:22:27,760
other database and we'll be fine there's

00:22:26,720 --> 00:22:29,120
no lock in

00:22:27,760 --> 00:22:31,440
yeah that's called technical debt and

00:22:29,120 --> 00:22:34,159
you're never going to get out of that

00:22:31,440 --> 00:22:35,840
so this is what's been really fun to

00:22:34,159 --> 00:22:37,840
watch with kubernetes

00:22:35,840 --> 00:22:39,919
is because we're virtualizing data

00:22:37,840 --> 00:22:41,360
centers and we can do this kind of stuff

00:22:39,919 --> 00:22:43,520
like you know

00:22:41,360 --> 00:22:44,640
create the entire application including

00:22:43,520 --> 00:22:47,760
the data layer

00:22:44,640 --> 00:22:50,320
we can move this thing around so if

00:22:47,760 --> 00:22:51,840
you know if i want to run in gcp amazon

00:22:50,320 --> 00:22:53,760
and azure at the same time

00:22:51,840 --> 00:22:55,520
totally fine if i want to just run run

00:22:53,760 --> 00:22:59,200
at a time totally fine

00:22:55,520 --> 00:23:02,880
but it the data portion is the key

00:22:59,200 --> 00:23:05,600
to portability and open source

00:23:02,880 --> 00:23:07,200
to the rescue open source helped us a

00:23:05,600 --> 00:23:09,919
long time ago

00:23:07,200 --> 00:23:10,880
i remember when i was back in the 90s

00:23:09,919 --> 00:23:14,799
remember that

00:23:10,880 --> 00:23:16,720
um i was working with we had

00:23:14,799 --> 00:23:17,840
operating systems we had to pay for a

00:23:16,720 --> 00:23:21,280
lot i mean it was

00:23:17,840 --> 00:23:23,440
solaris was not cheap um but

00:23:21,280 --> 00:23:24,640
you know here comes linux and it changed

00:23:23,440 --> 00:23:27,120
our scale equation

00:23:24,640 --> 00:23:28,080
like instead of installing one big

00:23:27,120 --> 00:23:29,840
server

00:23:28,080 --> 00:23:31,440
we started installing tons of little

00:23:29,840 --> 00:23:32,960
ones and they were great and because we

00:23:31,440 --> 00:23:35,840
were using linux open source

00:23:32,960 --> 00:23:37,600
changed the economics of it same with

00:23:35,840 --> 00:23:41,760
all sorts of infrastructure

00:23:37,600 --> 00:23:44,320
um databases mysql cassandra

00:23:41,760 --> 00:23:44,799
analytics like spark they've changed the

00:23:44,320 --> 00:23:46,320
the

00:23:44,799 --> 00:23:48,559
the whole game when it comes to

00:23:46,320 --> 00:23:49,840
economics of scale and

00:23:48,559 --> 00:23:52,000
same thing is going to happen with data

00:23:49,840 --> 00:23:54,559
services

00:23:52,000 --> 00:23:55,520
now i work um like i said with

00:23:54,559 --> 00:23:58,480
kubernetes

00:23:55,520 --> 00:23:59,840
quite a bit now and this portability is

00:23:58,480 --> 00:24:01,200
really important

00:23:59,840 --> 00:24:02,720
especially when it comes to building

00:24:01,200 --> 00:24:03,440
applications developers should be able

00:24:02,720 --> 00:24:06,159
to use

00:24:03,440 --> 00:24:07,600
their laptop uh you could run it you

00:24:06,159 --> 00:24:09,679
know if you still have on-prem

00:24:07,600 --> 00:24:11,840
software hardware great if you want to

00:24:09,679 --> 00:24:14,240
run it in the cloud great

00:24:11,840 --> 00:24:15,919
all of those things should work just

00:24:14,240 --> 00:24:18,159
fine and not have to be

00:24:15,919 --> 00:24:19,440
really super different like you should

00:24:18,159 --> 00:24:21,440
not have to say well

00:24:19,440 --> 00:24:22,799
i'm going to deploy on my laptop it's

00:24:21,440 --> 00:24:24,799
going to be completely different from

00:24:22,799 --> 00:24:26,640
what i'm going to deploy in production

00:24:24,799 --> 00:24:27,840
using kubernetes now we have the ability

00:24:26,640 --> 00:24:29,679
to build

00:24:27,840 --> 00:24:31,279
not only what we need but put it into a

00:24:29,679 --> 00:24:33,520
ci cd pipeline

00:24:31,279 --> 00:24:34,559
so that the configuration of stored and

00:24:33,520 --> 00:24:36,559
get

00:24:34,559 --> 00:24:38,320
our virtual data centers run in any

00:24:36,559 --> 00:24:42,480
place that we can run kubernetes

00:24:38,320 --> 00:24:44,320
so this this equation has changed quite

00:24:42,480 --> 00:24:46,559
a bit

00:24:44,320 --> 00:24:47,679
so i work on a couple of open source

00:24:46,559 --> 00:24:48,320
projects and i'm going to kind of get

00:24:47,679 --> 00:24:50,159
into some

00:24:48,320 --> 00:24:51,840
like more specific examples and this is

00:24:50,159 --> 00:24:54,320
why i'm really one of the reasons i'm

00:24:51,840 --> 00:24:57,840
really passionate about it is because

00:24:54,320 --> 00:25:00,480
as someone who's been working with um

00:24:57,840 --> 00:25:02,400
with open source databases and like

00:25:00,480 --> 00:25:06,080
cassandra

00:25:02,400 --> 00:25:07,440
mysql for years i'm seeing like this is

00:25:06,080 --> 00:25:10,880
like the next wave

00:25:07,440 --> 00:25:11,600
is where we now take the data layer data

00:25:10,880 --> 00:25:14,960
services

00:25:11,600 --> 00:25:16,960
into kubernetes and we just use

00:25:14,960 --> 00:25:18,480
all that good stuff that we've built

00:25:16,960 --> 00:25:21,679
over the years

00:25:18,480 --> 00:25:22,799
i don't think we need a new database not

00:25:21,679 --> 00:25:25,120
at all

00:25:22,799 --> 00:25:27,840
there's lots of great databases out

00:25:25,120 --> 00:25:29,120
there that do lots of great things but

00:25:27,840 --> 00:25:31,360
what i do think is we need a new

00:25:29,120 --> 00:25:34,559
relationship with our databases

00:25:31,360 --> 00:25:37,760
in a cloud native architecture so

00:25:34,559 --> 00:25:40,159
um i'm going to go over some of these

00:25:37,760 --> 00:25:42,320
real quickly and just give you a

00:25:40,159 --> 00:25:43,760
highlight of what they do and why we're

00:25:42,320 --> 00:25:45,520
you know what these open source projects

00:25:43,760 --> 00:25:46,640
are about why i think this is the right

00:25:45,520 --> 00:25:50,080
direction

00:25:46,640 --> 00:25:51,679
so stargate is a not only a cool name

00:25:50,080 --> 00:25:54,240
for a project

00:25:51,679 --> 00:25:56,000
but it also does things like uh create

00:25:54,240 --> 00:25:59,120
http apis like rest

00:25:56,000 --> 00:26:00,559
graphql document apis and it even does

00:25:59,120 --> 00:26:03,200
native format just like i was

00:26:00,559 --> 00:26:04,080
showing you before in another in another

00:26:03,200 --> 00:26:07,279
slide

00:26:04,080 --> 00:26:10,320
but it it is built

00:26:07,279 --> 00:26:14,240
for deploying on kubernetes

00:26:10,320 --> 00:26:15,600
now this gives you this a lot of options

00:26:14,240 --> 00:26:17,039
for developers it gives you lots of

00:26:15,600 --> 00:26:18,880
options because you can just choose the

00:26:17,039 --> 00:26:22,400
right api or client a framework

00:26:18,880 --> 00:26:25,120
and it abstracts away a lot of stuff

00:26:22,400 --> 00:26:26,720
and it's it's not easy because sometimes

00:26:25,120 --> 00:26:29,120
you have to think about

00:26:26,720 --> 00:26:29,919
um what's underlying you know there is

00:26:29,120 --> 00:26:31,919
some thought

00:26:29,919 --> 00:26:33,679
when you deploy it about how you deploy

00:26:31,919 --> 00:26:35,279
it with your software or with your

00:26:33,679 --> 00:26:38,159
underlying database

00:26:35,279 --> 00:26:41,520
but you know this is left up to the sres

00:26:38,159 --> 00:26:43,919
and if we can provide that as or as sres

00:26:41,520 --> 00:26:45,679
our developers just are fine they're

00:26:43,919 --> 00:26:47,279
going to be just fine

00:26:45,679 --> 00:26:48,880
because they're going to want to use

00:26:47,279 --> 00:26:52,000
something like node.js

00:26:48,880 --> 00:26:53,679
and a rest api or graphql

00:26:52,000 --> 00:26:55,120
and not think about oh do i need to

00:26:53,679 --> 00:26:59,279
download a driver

00:26:55,120 --> 00:27:01,679
um that's don't need to do that so

00:26:59,279 --> 00:27:03,039
it really gives us the ability to

00:27:01,679 --> 00:27:06,559
separate out

00:27:03,039 --> 00:27:08,720
our traffic from our data traffic

00:27:06,559 --> 00:27:10,240
from the actual database itself and they

00:27:08,720 --> 00:27:13,919
could scale independently

00:27:10,240 --> 00:27:16,799
um and then as new apis start popping up

00:27:13,919 --> 00:27:21,200
we can add those and start building out

00:27:16,799 --> 00:27:24,159
this whole infrastructure

00:27:21,200 --> 00:27:25,600
the architecture right now for what uh

00:27:24,159 --> 00:27:28,559
stargate does

00:27:25,600 --> 00:27:29,600
is it has a the first layer is is

00:27:28,559 --> 00:27:32,799
basically just

00:27:29,600 --> 00:27:34,640
uh it accepts http calls uh from a

00:27:32,799 --> 00:27:36,240
variety of places

00:27:34,640 --> 00:27:38,159
and then negotiates with the underlying

00:27:36,240 --> 00:27:39,279
databases right now it uses cassandra

00:27:38,159 --> 00:27:40,559
because that was the first

00:27:39,279 --> 00:27:44,080
implementation

00:27:40,559 --> 00:27:47,120
there are other databases that are in in

00:27:44,080 --> 00:27:47,760
the pipeline as they say there's other

00:27:47,120 --> 00:27:49,840
open source

00:27:47,760 --> 00:27:51,919
database projects that will that will

00:27:49,840 --> 00:27:54,080
participate in stargate and

00:27:51,919 --> 00:27:55,919
make those happen um and that's the

00:27:54,080 --> 00:27:57,360
point of this is making it just so that

00:27:55,919 --> 00:28:00,159
we could have

00:27:57,360 --> 00:28:02,880
uh a meeting place for databases to

00:28:00,159 --> 00:28:04,559
present themselves as a data service

00:28:02,880 --> 00:28:06,320
and if you think about it in terms of

00:28:04,559 --> 00:28:09,200
like this is very modular

00:28:06,320 --> 00:28:11,360
just like how kubernetes is very modular

00:28:09,200 --> 00:28:14,000
we can build out all the different parts

00:28:11,360 --> 00:28:14,640
and those parts are how we deploy things

00:28:14,000 --> 00:28:17,840
into

00:28:14,640 --> 00:28:18,880
our infrastructure just like if we build

00:28:17,840 --> 00:28:22,000
storage network

00:28:18,880 --> 00:28:23,679
and storage network and compute

00:28:22,000 --> 00:28:25,039
in kubernetes that's how we consume

00:28:23,679 --> 00:28:27,279
things we can do the same things with

00:28:25,039 --> 00:28:28,880
our data layer

00:28:27,279 --> 00:28:30,559
the other project that i've been pretty

00:28:28,880 --> 00:28:32,000
heavily involved with is a project

00:28:30,559 --> 00:28:35,520
called kate sandra

00:28:32,000 --> 00:28:36,720
and this is a little more into the

00:28:35,520 --> 00:28:39,919
database side

00:28:36,720 --> 00:28:43,200
for sure but what we're trying to do is

00:28:39,919 --> 00:28:43,600
take cassandra and completely eliminate

00:28:43,200 --> 00:28:46,880
it

00:28:43,600 --> 00:28:49,120
as a an operations problem

00:28:46,880 --> 00:28:51,120
and make it easier for people to deploy

00:28:49,120 --> 00:28:54,159
it into kubernetes

00:28:51,120 --> 00:28:56,080
but ultimately with the goal of making

00:28:54,159 --> 00:28:58,720
it so that it's just a data layer for

00:28:56,080 --> 00:29:00,640
kubernetes um you're not really thinking

00:28:58,720 --> 00:29:02,640
about what the database is

00:29:00,640 --> 00:29:04,799
um yeah i know the word kate sandra is a

00:29:02,640 --> 00:29:07,520
little bit of a mashup and it's cute

00:29:04,799 --> 00:29:08,559
but you should be able to deploy it and

00:29:07,520 --> 00:29:10,399
have

00:29:08,559 --> 00:29:11,679
the three things that i talked about you

00:29:10,399 --> 00:29:14,960
should be able to have

00:29:11,679 --> 00:29:18,159
an always-on uh elastic scaling

00:29:14,960 --> 00:29:18,960
high-scaling data service without a lot

00:29:18,159 --> 00:29:21,520
of work

00:29:18,960 --> 00:29:22,320
um it's it should be an sre topic that's

00:29:21,520 --> 00:29:23,760
pretty simple and

00:29:22,320 --> 00:29:25,600
your developers should get what they

00:29:23,760 --> 00:29:29,039
need out of it

00:29:25,600 --> 00:29:31,520
so the things that are built on

00:29:29,039 --> 00:29:33,200
um we use an operator internally for

00:29:31,520 --> 00:29:35,279
cassandra

00:29:33,200 --> 00:29:37,279
we prov we use stargate so it implements

00:29:35,279 --> 00:29:40,240
stargate to provide a data gateway

00:29:37,279 --> 00:29:43,279
so when you deploy it it has it has all

00:29:40,240 --> 00:29:46,320
the services that your developers need

00:29:43,279 --> 00:29:48,000
and then it uses uh it works with

00:29:46,320 --> 00:29:51,120
traffic in this case but it works with

00:29:48,000 --> 00:29:52,880
others as well for kubernetes ingress

00:29:51,120 --> 00:29:54,640
and then it has operations tools that

00:29:52,880 --> 00:29:57,200
run automatically in the background

00:29:54,640 --> 00:29:58,480
for all the operations tasks that

00:29:57,200 --> 00:30:02,880
normally you would have to do

00:29:58,480 --> 00:30:06,000
manually it does those automatically

00:30:02,880 --> 00:30:06,799
and this is when we put all this

00:30:06,000 --> 00:30:10,320
together

00:30:06,799 --> 00:30:12,320
with metrics and observability you get a

00:30:10,320 --> 00:30:15,120
pretty usable package that

00:30:12,320 --> 00:30:16,799
you deploy pretty easily um you just

00:30:15,120 --> 00:30:18,640
deploy it

00:30:16,799 --> 00:30:20,799
developers can use it any way they need

00:30:18,640 --> 00:30:22,399
to you could deploy it anywhere

00:30:20,799 --> 00:30:23,760
and this is where open source really

00:30:22,399 --> 00:30:24,480
look at every one of these things is

00:30:23,760 --> 00:30:26,240
open source

00:30:24,480 --> 00:30:27,600
so if you want to deploy it at amazon

00:30:26,240 --> 00:30:29,679
you want to deploy it in google you want

00:30:27,600 --> 00:30:33,279
to deploy it on your laptop

00:30:29,679 --> 00:30:36,000
totally cool and it's portable

00:30:33,279 --> 00:30:37,200
and it's you know we have in open source

00:30:36,000 --> 00:30:39,760
there's freeze and freedom

00:30:37,200 --> 00:30:40,559
and freezing beer this is freezing

00:30:39,760 --> 00:30:43,039
freedom

00:30:40,559 --> 00:30:45,200
you don't have to be tied up into a

00:30:43,039 --> 00:30:47,679
certain wall of garden

00:30:45,200 --> 00:30:48,320
you can you can move it around however

00:30:47,679 --> 00:30:50,320
you need to

00:30:48,320 --> 00:30:52,000
and because these projects are all open

00:30:50,320 --> 00:30:53,760
source you can

00:30:52,000 --> 00:30:56,000
also do a lot of manipulation and

00:30:53,760 --> 00:30:58,000
changes it's one of the things with kate

00:30:56,000 --> 00:31:01,679
sanders that's really exciting

00:30:58,000 --> 00:31:03,760
is it's a lot less about code

00:31:01,679 --> 00:31:05,760
contributions from the community and if

00:31:03,760 --> 00:31:08,000
you look at the prs

00:31:05,760 --> 00:31:09,600
it's a lot it's it's a lot less about

00:31:08,000 --> 00:31:11,279
code and a whole lot more about

00:31:09,600 --> 00:31:14,799
configuration

00:31:11,279 --> 00:31:16,720
um deploying like how you deploy things

00:31:14,799 --> 00:31:19,200
so it's it's turning into like a

00:31:16,720 --> 00:31:22,240
collection area of sre knowledge

00:31:19,200 --> 00:31:24,080
around deploying scale applications in

00:31:22,240 --> 00:31:26,640
kubernetes

00:31:24,080 --> 00:31:29,919
and then we use helm eventually for a

00:31:26,640 --> 00:31:32,159
lot of this stuff to get deployed

00:31:29,919 --> 00:31:33,039
helm makes it easy it's right now this

00:31:32,159 --> 00:31:36,240
it's the

00:31:33,039 --> 00:31:38,799
the first class in the project but um

00:31:36,240 --> 00:31:39,760
we will i think we'll see soon it'll be

00:31:38,799 --> 00:31:43,519
departing it'll

00:31:39,760 --> 00:31:45,039
split away from helm so the

00:31:43,519 --> 00:31:46,640
the idea here is whenever you're

00:31:45,039 --> 00:31:49,440
building applications

00:31:46,640 --> 00:31:50,080
um and if you think about like all the

00:31:49,440 --> 00:31:53,200
things that

00:31:50,080 --> 00:31:55,679
interact with your data layer um it's

00:31:53,200 --> 00:31:57,919
creating some abstractions inside of

00:31:55,679 --> 00:31:59,279
kubernetes that allow for that to happen

00:31:57,919 --> 00:32:00,000
so if your web and mobile apps

00:31:59,279 --> 00:32:03,120
microservices

00:32:00,000 --> 00:32:05,360
etc need a data service

00:32:03,120 --> 00:32:07,360
this will provide that in kubernetes and

00:32:05,360 --> 00:32:10,399
it'll run on any infrastructure because

00:32:07,360 --> 00:32:12,080
it's just running in kubernetes

00:32:10,399 --> 00:32:14,720
the keys are really just making sure

00:32:12,080 --> 00:32:17,600
that you know you have a stable or

00:32:14,720 --> 00:32:19,279
kubernetes cluster and um some of the

00:32:17,600 --> 00:32:20,240
knowledge that we are building now is

00:32:19,279 --> 00:32:22,399
around things like

00:32:20,240 --> 00:32:25,600
making good storage choices how to work

00:32:22,399 --> 00:32:25,600
with ingress that sort of thing

00:32:25,760 --> 00:32:30,799
so back to my slide so

00:32:29,440 --> 00:32:32,640
stargate is kind of the tip of the

00:32:30,799 --> 00:32:33,039
iceberg in this case where it's just

00:32:32,640 --> 00:32:35,039
like

00:32:33,039 --> 00:32:36,399
here's the here's this little nice light

00:32:35,039 --> 00:32:36,799
little piece of ice floating on the

00:32:36,399 --> 00:32:39,360
water

00:32:36,799 --> 00:32:41,279
nothing to see here all that messy

00:32:39,360 --> 00:32:43,279
detail is handled automatically

00:32:41,279 --> 00:32:46,000
underneath through case sandra

00:32:43,279 --> 00:32:47,440
and this is an interesting this is

00:32:46,000 --> 00:32:49,039
what's interesting about this is that

00:32:47,440 --> 00:32:50,640
we're building up projects within

00:32:49,039 --> 00:32:52,000
projects we're starting to wrap projects

00:32:50,640 --> 00:32:55,519
and projects but

00:32:52,000 --> 00:32:56,799
um kubernetes is the destination for

00:32:55,519 --> 00:32:59,360
i think all of our application

00:32:56,799 --> 00:33:02,559
infrastructure eventually at least in

00:32:59,360 --> 00:33:04,399
the next 10 years and we're

00:33:02,559 --> 00:33:06,000
we're really trying to make this a place

00:33:04,399 --> 00:33:08,320
where everyone can gather

00:33:06,000 --> 00:33:09,600
and bring knowledge and share and create

00:33:08,320 --> 00:33:12,320
a community around

00:33:09,600 --> 00:33:14,640
building data services and no matter

00:33:12,320 --> 00:33:16,799
what underlying database you have

00:33:14,640 --> 00:33:18,960
no matter what deployment infrastructure

00:33:16,799 --> 00:33:22,640
you're using

00:33:18,960 --> 00:33:24,240
so that is all i have and i

00:33:22,640 --> 00:33:25,919
promised i would leave plenty of room

00:33:24,240 --> 00:33:30,000
for questions

00:33:25,919 --> 00:33:30,000
so i'm gonna do that real quick

00:33:36,720 --> 00:33:42,480
all right got a few i got

00:33:39,760 --> 00:33:42,960
a few questions i got one really good

00:33:42,480 --> 00:33:44,960
one

00:33:42,960 --> 00:33:46,159
um and feel free to ask any questions

00:33:44,960 --> 00:33:50,320
you like in here

00:33:46,159 --> 00:33:50,320
um i uh

00:33:50,399 --> 00:33:55,440
let's see i'm gonna should i is my

00:33:52,640 --> 00:33:59,039
screen still sharing right now

00:33:55,440 --> 00:34:00,480
it is yep all right um

00:33:59,039 --> 00:34:00,720
do you see my entire screen or do you

00:34:00,480 --> 00:34:02,080
see

00:34:00,720 --> 00:34:03,039
[Music]

00:34:02,080 --> 00:34:05,120
i don't even know what i'm showing

00:34:03,039 --> 00:34:07,360
anymore it's the

00:34:05,120 --> 00:34:08,240
full uh presentation screen the full

00:34:07,360 --> 00:34:12,079
powerpoint screen

00:34:08,240 --> 00:34:12,079
okay got it okay um

00:34:12,320 --> 00:34:16,320
do i have a series of sample projects

00:34:14,639 --> 00:34:20,320
based on this deployment

00:34:16,320 --> 00:34:22,879
um well uh kavina you ask a good

00:34:20,320 --> 00:34:25,839
question there are

00:34:22,879 --> 00:34:27,359
a lot of these parts like this like i'm

00:34:25,839 --> 00:34:29,200
assuming that you're talking about like

00:34:27,359 --> 00:34:33,040
the kate sanders stargate

00:34:29,200 --> 00:34:35,839
um funny enough uh data sacks astra

00:34:33,040 --> 00:34:37,440
which is our is data stacks it's a

00:34:35,839 --> 00:34:40,960
cassandra as a service

00:34:37,440 --> 00:34:44,480
runs completely on this stack

00:34:40,960 --> 00:34:47,679
so we are we actually run this um

00:34:44,480 --> 00:34:48,560
we have a we have a team an open source

00:34:47,679 --> 00:34:50,960
team that

00:34:48,560 --> 00:34:53,040
spends a lot of time on it but it's also

00:34:50,960 --> 00:34:56,000
being used to deploy our own service so

00:34:53,040 --> 00:34:57,440
we not only believe in it we got a

00:34:56,000 --> 00:35:00,720
better company on it

00:34:57,440 --> 00:35:03,280
um there are yelp just did a

00:35:00,720 --> 00:35:03,839
really cool presentation lately uh it

00:35:03,280 --> 00:35:06,079
was in

00:35:03,839 --> 00:35:06,880
a meetup in london but it's on youtube

00:35:06,079 --> 00:35:08,960
of course

00:35:06,880 --> 00:35:10,400
yelp did one on how they use stargate

00:35:08,960 --> 00:35:12,079
internally um they're

00:35:10,400 --> 00:35:13,520
slowly migrating their things over to

00:35:12,079 --> 00:35:16,880
kate sander as well

00:35:13,520 --> 00:35:18,480
um they're a big cassandra shop um there

00:35:16,880 --> 00:35:20,800
are a few others that have not been

00:35:18,480 --> 00:35:24,720
public yet but they are coming soon

00:35:20,800 --> 00:35:26,640
um for uh you know but

00:35:24,720 --> 00:35:28,320
if you look on the kate sander website

00:35:26,640 --> 00:35:30,400
there's there is some

00:35:28,320 --> 00:35:32,079
discussion about like how like different

00:35:30,400 --> 00:35:35,599
deployment scenarios and how you would

00:35:32,079 --> 00:35:38,960
deploy it in your infrastructure as well

00:35:35,599 --> 00:35:40,320
um who are the main competitors to

00:35:38,960 --> 00:35:43,599
stargate

00:35:40,320 --> 00:35:45,760
uh it is the cloud databases and

00:35:43,599 --> 00:35:48,000
this is one of the reasons we believe

00:35:45,760 --> 00:35:51,040
that open source would be a really good

00:35:48,000 --> 00:35:51,920
move for this particular thing um and

00:35:51,040 --> 00:35:55,200
the reason being

00:35:51,920 --> 00:35:58,320
is that uh when you're

00:35:55,200 --> 00:36:00,400
like i said like the dynamo dbs the

00:35:58,320 --> 00:36:02,640
cosmos dbs i forget what the one i

00:36:00,400 --> 00:36:04,240
google it at firestore

00:36:02,640 --> 00:36:05,760
you know they these are really good

00:36:04,240 --> 00:36:07,119
databases um

00:36:05,760 --> 00:36:09,680
there's nothing wrong with them but they

00:36:07,119 --> 00:36:11,520
are specific to that cloud

00:36:09,680 --> 00:36:12,720
and you know it's just like there's

00:36:11,520 --> 00:36:14,720
nothing wrong with oracle

00:36:12,720 --> 00:36:15,839
oracle's a great database nothing wrong

00:36:14,720 --> 00:36:18,880
at all um

00:36:15,839 --> 00:36:19,920
i made a great career building good

00:36:18,880 --> 00:36:22,640
stuff on it

00:36:19,920 --> 00:36:24,240
but open source changes the economics

00:36:22,640 --> 00:36:25,040
and the dynamics of how you do your

00:36:24,240 --> 00:36:27,839
applications

00:36:25,040 --> 00:36:29,200
and if you're looking at a cloud

00:36:27,839 --> 00:36:31,839
database and that

00:36:29,200 --> 00:36:33,359
in the in that space then yes those are

00:36:31,839 --> 00:36:34,960
a competitor to what stargate would be

00:36:33,359 --> 00:36:38,640
and you should look them in the same way

00:36:34,960 --> 00:36:39,359
um there's uh other open source projects

00:36:38,640 --> 00:36:42,640
that

00:36:39,359 --> 00:36:44,400
probably are come along um this is just

00:36:42,640 --> 00:36:48,320
starting to crack open

00:36:44,400 --> 00:36:50,320
um i think that akio

00:36:48,320 --> 00:36:51,839
facebook has never open source that they

00:36:50,320 --> 00:36:52,560
just keep talking about it and i don't

00:36:51,839 --> 00:36:54,160
know

00:36:52,560 --> 00:36:56,079
if they ever will open source i talked

00:36:54,160 --> 00:36:57,520
to that team several times

00:36:56,079 --> 00:36:59,040
um they seem pretty happy just

00:36:57,520 --> 00:37:00,000
developing it internally and talking

00:36:59,040 --> 00:37:03,200
about it i have

00:37:00,000 --> 00:37:04,240
okay so maybe somebody i would love to

00:37:03,200 --> 00:37:06,160
see it out there

00:37:04,240 --> 00:37:08,160
just because i think it's an open source

00:37:06,160 --> 00:37:09,440
ecosystem really thrives on having a lot

00:37:08,160 --> 00:37:12,640
of different choices and

00:37:09,440 --> 00:37:16,560
different different opinions

00:37:12,640 --> 00:37:20,640
um i don't have a demo um

00:37:16,560 --> 00:37:20,640
i don't generally i should have a demo

00:37:21,040 --> 00:37:25,440
there are there are a lot of uh

00:37:23,520 --> 00:37:26,160
workshops around this if you were you

00:37:25,440 --> 00:37:29,359
know if you

00:37:26,160 --> 00:37:29,920
hit google look for a stargate um kate

00:37:29,359 --> 00:37:32,400
sandra

00:37:29,920 --> 00:37:33,280
uh there's some workshops on actually

00:37:32,400 --> 00:37:34,880
how to do it

00:37:33,280 --> 00:37:36,400
um and that's that's something that our

00:37:34,880 --> 00:37:37,920
developer relations team does quite a

00:37:36,400 --> 00:37:40,960
bit of

00:37:37,920 --> 00:37:44,160
um so

00:37:40,960 --> 00:37:46,560
information security ah good question

00:37:44,160 --> 00:37:48,400
um and that it's actually one of the

00:37:46,560 --> 00:37:50,320
reasons that data services

00:37:48,400 --> 00:37:52,560
i didn't put it as a main reason but it

00:37:50,320 --> 00:37:53,680
is definitely on the list of a good

00:37:52,560 --> 00:37:56,880
reason to have it

00:37:53,680 --> 00:38:00,400
and so thinking of in terms of like

00:37:56,880 --> 00:38:03,839
uh infosec when it comes to databases is

00:38:00,400 --> 00:38:05,119
i think one of the it keeps um cisos up

00:38:03,839 --> 00:38:08,160
at night

00:38:05,119 --> 00:38:08,960
mainly because you can break into a web

00:38:08,160 --> 00:38:12,320
server

00:38:08,960 --> 00:38:14,640
an app server you know if uh if someone

00:38:12,320 --> 00:38:16,400
if a bad actor breaks into a web server

00:38:14,640 --> 00:38:18,880
or an app server

00:38:16,400 --> 00:38:20,800
the the threat exposure is a lot lower

00:38:18,880 --> 00:38:23,920
than if they get into your database

00:38:20,800 --> 00:38:25,839
and you know that's you hear about like

00:38:23,920 --> 00:38:27,680
the worst hacks out there it's usually

00:38:25,839 --> 00:38:28,480
so and so got a hold of all the data in

00:38:27,680 --> 00:38:31,599
the database

00:38:28,480 --> 00:38:34,880
and that's just horrible um

00:38:31,599 --> 00:38:35,760
we uh we we've looked at like how to do

00:38:34,880 --> 00:38:37,839
some of these things

00:38:35,760 --> 00:38:39,760
first of all from an inf information

00:38:37,839 --> 00:38:40,480
security abstraction is always the best

00:38:39,760 --> 00:38:42,240
plan

00:38:40,480 --> 00:38:44,079
but what it does inside of like for

00:38:42,240 --> 00:38:45,520
instance with stargate is it allows the

00:38:44,079 --> 00:38:48,880
implementation to

00:38:45,520 --> 00:38:51,200
maintain certain uh security standards

00:38:48,880 --> 00:38:51,920
so for instance um inside of kubernetes

00:38:51,200 --> 00:38:53,280
deployment

00:38:51,920 --> 00:38:55,119
you're going to have a certain security

00:38:53,280 --> 00:38:56,800
stance already you're going to have

00:38:55,119 --> 00:39:00,079
shared secrets and that sort of thing

00:38:56,800 --> 00:39:03,520
but one of the things that stargate

00:39:00,079 --> 00:39:05,119
enforces is things like tls and

00:39:03,520 --> 00:39:07,680
making sure that everything is

00:39:05,119 --> 00:39:10,640
firewalled and no open ports

00:39:07,680 --> 00:39:12,720
so i mean if you look at like some of

00:39:10,640 --> 00:39:14,640
the best practices of running a database

00:39:12,720 --> 00:39:16,880
this is fitting into that realm pretty

00:39:14,640 --> 00:39:16,880
well

00:39:18,240 --> 00:39:24,400
so uh let's see next question

00:39:22,640 --> 00:39:25,839
does key sander provide a feature for

00:39:24,400 --> 00:39:29,200
maintenance test yes

00:39:25,839 --> 00:39:32,000
actually that is um what there's

00:39:29,200 --> 00:39:32,480
two projects two apache projects in

00:39:32,000 --> 00:39:35,040
there

00:39:32,480 --> 00:39:36,400
um there's reaper and medusa which are

00:39:35,040 --> 00:39:39,680
great greek names

00:39:36,400 --> 00:39:42,000
um they uh they are there to do

00:39:39,680 --> 00:39:43,440
operations on cassandra in the back end

00:39:42,000 --> 00:39:46,560
so you don't have to

00:39:43,440 --> 00:39:47,680
um reaper does uh does repair

00:39:46,560 --> 00:39:49,200
maintenance which is

00:39:47,680 --> 00:39:51,839
just part of an eventually consistent

00:39:49,200 --> 00:39:55,760
database and medusa does backups

00:39:51,839 --> 00:39:57,200
um and there you can as just be part of

00:39:55,760 --> 00:39:59,839
your

00:39:57,200 --> 00:40:00,720
deployment inside of kubernetes you can

00:39:59,839 --> 00:40:03,040
you can deploy it

00:40:00,720 --> 00:40:04,800
and specify how often you want those to

00:40:03,040 --> 00:40:08,400
run

00:40:04,800 --> 00:40:10,240
you can deploy with backups on and

00:40:08,400 --> 00:40:12,000
destinations for backup files so for

00:40:10,240 --> 00:40:13,920
instance if you want to dump them into a

00:40:12,000 --> 00:40:15,680
an object storage like s3 or something

00:40:13,920 --> 00:40:17,119
like that um

00:40:15,680 --> 00:40:18,800
all of those things should run

00:40:17,119 --> 00:40:20,720
automatically and

00:40:18,800 --> 00:40:22,560
it will give you the full observability

00:40:20,720 --> 00:40:24,960
in you know it pipes all this stuff out

00:40:22,560 --> 00:40:26,480
to prometheus so you can in grafana

00:40:24,960 --> 00:40:28,079
so you can look and see exactly what's

00:40:26,480 --> 00:40:32,000
happening but mostly it's just

00:40:28,079 --> 00:40:32,000
set it up run it and it'll run itself

00:40:32,079 --> 00:40:36,400
question was my sequel's open source and

00:40:34,640 --> 00:40:37,359
why do we have to move on to stargate or

00:40:36,400 --> 00:40:39,440
case sandra

00:40:37,359 --> 00:40:41,280
um yes my sequel is an open source

00:40:39,440 --> 00:40:44,400
database um

00:40:41,280 --> 00:40:46,960
my uh my proposition to you is

00:40:44,400 --> 00:40:47,520
why and so is cassandra sandra's a

00:40:46,960 --> 00:40:50,800
database

00:40:47,520 --> 00:40:51,520
but um my sequel cassandra i mean

00:40:50,800 --> 00:40:54,640
there's

00:40:51,520 --> 00:40:57,839
all of these are open postgres but

00:40:54,640 --> 00:40:58,960
what i'm talking about right now is data

00:40:57,839 --> 00:41:02,319
services

00:40:58,960 --> 00:41:06,240
in a cloud native way mysql is

00:41:02,319 --> 00:41:08,640
a a database that can run in kubernetes

00:41:06,240 --> 00:41:10,000
but it does not run in the same way that

00:41:08,640 --> 00:41:12,079
kubernetes wants to run

00:41:10,000 --> 00:41:13,760
for instance if you need a lot more

00:41:12,079 --> 00:41:16,880
mysql

00:41:13,760 --> 00:41:17,839
you you can't just add more nodes um it

00:41:16,880 --> 00:41:19,839
doesn't do

00:41:17,839 --> 00:41:21,680
active active replication so for

00:41:19,839 --> 00:41:24,000
instance it's hard to

00:41:21,680 --> 00:41:25,200
stay resilient um there are ways to make

00:41:24,000 --> 00:41:26,880
it more resilient with like read

00:41:25,200 --> 00:41:29,599
replicas and things like that

00:41:26,880 --> 00:41:31,280
but mostly the data services and i'll

00:41:29,599 --> 00:41:32,720
tell you this

00:41:31,280 --> 00:41:34,720
i wouldn't be surprised if there was a

00:41:32,720 --> 00:41:37,440
mysql implementation of stargate

00:41:34,720 --> 00:41:38,560
soon i'm just gonna here's a little

00:41:37,440 --> 00:41:41,520
preview

00:41:38,560 --> 00:41:44,640
so um stargate plus my sequel might be

00:41:41,520 --> 00:41:47,839
an option here pretty soon

00:41:44,640 --> 00:41:50,640
um how long does a stack take to set up

00:41:47,839 --> 00:41:53,359
from scratch on a new project

00:41:50,640 --> 00:41:54,160
well with the helm install it's actually

00:41:53,359 --> 00:41:56,160
pretty easy

00:41:54,160 --> 00:41:57,280
um i i have it running on my local

00:41:56,160 --> 00:42:00,640
laptop right now

00:41:57,280 --> 00:42:00,960
uh it it takes about five or ten minutes

00:42:00,640 --> 00:42:02,800
to

00:42:00,960 --> 00:42:04,560
if you're completely scratched to

00:42:02,800 --> 00:42:05,839
download the containers

00:42:04,560 --> 00:42:08,720
you know get all the infrastructure

00:42:05,839 --> 00:42:11,200
going if you go to kate sander.io

00:42:08,720 --> 00:42:13,599
there's a getting started button

00:42:11,200 --> 00:42:15,200
and it will walk you through the basics

00:42:13,599 --> 00:42:16,000
if you're using something like kind on

00:42:15,200 --> 00:42:19,520
your desktop or

00:42:16,000 --> 00:42:21,839
minikube um and i think

00:42:19,520 --> 00:42:23,440
mostly it's just the time required is

00:42:21,839 --> 00:42:25,119
how much time it takes for the

00:42:23,440 --> 00:42:27,839
containers to download

00:42:25,119 --> 00:42:28,880
um and then when you're setting up an

00:42:27,839 --> 00:42:32,319
actual cluster

00:42:28,880 --> 00:42:36,319
like inside our kate sandra cluster

00:42:32,319 --> 00:42:38,240
depending on the size because we uh

00:42:36,319 --> 00:42:39,599
per node we put about a one to two

00:42:38,240 --> 00:42:41,839
minute delay

00:42:39,599 --> 00:42:44,079
on deploying each one just so to let

00:42:41,839 --> 00:42:46,640
everything inside kubernetes settle down

00:42:44,079 --> 00:42:47,520
so you know that that's how long to go

00:42:46,640 --> 00:42:50,720
um

00:42:47,520 --> 00:42:54,560
from a from a developer standpoint

00:42:50,720 --> 00:42:58,720
um not very long we do a two hour

00:42:54,560 --> 00:43:01,119
workshop on kate sandra and stargate and

00:42:58,720 --> 00:43:03,359
you can go from zero to fully running

00:43:01,119 --> 00:43:05,440
application within two hours which

00:43:03,359 --> 00:43:07,359
and that's with a lot of explanation and

00:43:05,440 --> 00:43:08,560
blah blah blah and we even play games in

00:43:07,359 --> 00:43:11,760
our workshops so

00:43:08,560 --> 00:43:13,920
um so not very long and that's the point

00:43:11,760 --> 00:43:15,119
is we want this to be a very fast and

00:43:13,920 --> 00:43:17,760
easy operation

00:43:15,119 --> 00:43:18,880
and if it isn't here's the thing i beg

00:43:17,760 --> 00:43:21,119
of you

00:43:18,880 --> 00:43:22,560
please participate in the project by

00:43:21,119 --> 00:43:26,000
giving your opinion

00:43:22,560 --> 00:43:28,720
we have a discord there's prs and

00:43:26,000 --> 00:43:30,000
issues on github like if it's like hey

00:43:28,720 --> 00:43:31,040
you know what this doesn't work the way

00:43:30,000 --> 00:43:32,800
i want it to

00:43:31,040 --> 00:43:34,960
speak up we would love to hear about it

00:43:32,800 --> 00:43:37,359
that's what open source is about and we

00:43:34,960 --> 00:43:40,319
we really do value that kind of feedback

00:43:37,359 --> 00:43:43,119
and be a part of the project

00:43:40,319 --> 00:43:44,240
um is there an option for dynamic data

00:43:43,119 --> 00:43:45,760
masking

00:43:44,240 --> 00:43:47,920
no not yet but that's interesting

00:43:45,760 --> 00:43:51,440
because that fits inside of

00:43:47,920 --> 00:43:53,040
the security part and

00:43:51,440 --> 00:43:54,720
this is actually something that i think

00:43:53,040 --> 00:43:57,040
will find its way here pretty soon

00:43:54,720 --> 00:44:00,640
because this is something that um

00:43:57,040 --> 00:44:03,760
uh sres especially

00:44:00,640 --> 00:44:05,760
are looking for for instance if

00:44:03,760 --> 00:44:07,440
i have a data service that's pulling

00:44:05,760 --> 00:44:09,839
customer information

00:44:07,440 --> 00:44:11,440
and i need to put a rule on it say based

00:44:09,839 --> 00:44:12,640
on gdpr

00:44:11,440 --> 00:44:14,640
i should be able to do that at the

00:44:12,640 --> 00:44:17,359
operation deployment level

00:44:14,640 --> 00:44:18,560
based on parameters and not leave it up

00:44:17,359 --> 00:44:19,760
to the developers because you know what

00:44:18,560 --> 00:44:21,599
happens whenever we leave it up to

00:44:19,760 --> 00:44:25,280
developers right

00:44:21,599 --> 00:44:27,680
yep that's right problems

00:44:25,280 --> 00:44:28,960
um how many data centers do i have

00:44:27,680 --> 00:44:32,000
around the world

00:44:28,960 --> 00:44:35,200
uh i don't have any data centers

00:44:32,000 --> 00:44:36,480
i read everything um yeah this isn't

00:44:35,200 --> 00:44:39,359
this isn't a uh

00:44:36,480 --> 00:44:40,880
astro just uses all the clouds so

00:44:39,359 --> 00:44:42,000
wherever the clouds have data centers

00:44:40,880 --> 00:44:45,440
that's where we are

00:44:42,000 --> 00:44:46,720
um but it's up to you um this is an open

00:44:45,440 --> 00:44:48,079
source project you can deploy it

00:44:46,720 --> 00:44:52,560
anywhere you want

00:44:48,079 --> 00:44:55,760
so um but that's an interesting question

00:44:52,560 --> 00:44:56,480
um ml support yes thank you great

00:44:55,760 --> 00:44:59,599
questions

00:44:56,480 --> 00:45:03,040
um so ml pipeline support is not

00:44:59,599 --> 00:45:05,200
there yet however um

00:45:03,040 --> 00:45:06,960
there are some api considerations with

00:45:05,200 --> 00:45:08,800
this uh

00:45:06,960 --> 00:45:10,400
i was just in a conversation this week

00:45:08,800 --> 00:45:12,800
about with somebody about

00:45:10,400 --> 00:45:14,079
um using this was like apache airflow

00:45:12,800 --> 00:45:17,119
and that sort of thing

00:45:14,079 --> 00:45:19,680
um because of where it sits inside of

00:45:17,119 --> 00:45:22,640
the infrastructure

00:45:19,680 --> 00:45:25,440
it it does lend itself to potentially

00:45:22,640 --> 00:45:26,640
being a part of an ml pipeline

00:45:25,440 --> 00:45:29,760
and i think a lot of that is

00:45:26,640 --> 00:45:33,440
implementation like using apache pulsar

00:45:29,760 --> 00:45:35,280
flink airflow there's there's a few

00:45:33,440 --> 00:45:37,280
options in there where you can start

00:45:35,280 --> 00:45:38,560
seeing how this might fit in a

00:45:37,280 --> 00:45:43,119
kubernetes deployment

00:45:38,560 --> 00:45:43,920
um the i'd say just stay tuned on this

00:45:43,119 --> 00:45:46,000
but

00:45:43,920 --> 00:45:46,960
this is i this has been a topic that's

00:45:46,000 --> 00:45:48,880
coming up

00:45:46,960 --> 00:45:49,920
especially in the data mesh world i

00:45:48,880 --> 00:45:51,599
don't know if you've been involved in

00:45:49,920 --> 00:45:54,800
data mesh yet but

00:45:51,599 --> 00:45:57,280
um kubernetes data mesh these are all

00:45:54,800 --> 00:45:58,079
topics that are starting to converge and

00:45:57,280 --> 00:46:01,839
uh

00:45:58,079 --> 00:46:01,839
data service is a key part of that

00:46:02,720 --> 00:46:07,760
all right any clue on the release of

00:46:05,760 --> 00:46:10,960
cassandra 4.0

00:46:07,760 --> 00:46:14,640
oh pedro yes soon

00:46:10,960 --> 00:46:17,680
um i will tell you uh as someone who's

00:46:14,640 --> 00:46:21,040
just as inside as everyone else uh

00:46:17,680 --> 00:46:21,920
the there are only a couple of tickets

00:46:21,040 --> 00:46:24,640
left in beta

00:46:21,920 --> 00:46:26,319
four and we're i i would suspect we're

00:46:24,640 --> 00:46:28,240
gonna see a release candidate here

00:46:26,319 --> 00:46:30,000
pretty soon um

00:46:28,240 --> 00:46:32,880
and those of you who don't know about

00:46:30,000 --> 00:46:36,079
cassandra um

00:46:32,880 --> 00:46:37,440
the whole thing around cassandra ford

00:46:36,079 --> 00:46:39,520
has been a long time since we've

00:46:37,440 --> 00:46:42,240
released a major release and

00:46:39,520 --> 00:46:43,680
the reason being is because the biggest

00:46:42,240 --> 00:46:44,640
companies in the world that use

00:46:43,680 --> 00:46:46,880
cassandra

00:46:44,640 --> 00:46:48,720
are spending a lot of time to make sure

00:46:46,880 --> 00:46:49,520
that it is the most stable database on

00:46:48,720 --> 00:46:50,800
the planet

00:46:49,520 --> 00:46:52,720
period because it runs the world's

00:46:50,800 --> 00:46:55,760
biggest workloads so

00:46:52,720 --> 00:46:57,440
these are like the alibaba's the

00:46:55,760 --> 00:47:01,200
huawei's the apples

00:46:57,440 --> 00:47:02,960
um yahoo japan

00:47:01,200 --> 00:47:04,560
they're all really intimately involved

00:47:02,960 --> 00:47:08,000
with stability of this database

00:47:04,560 --> 00:47:10,160
and so um the the project management

00:47:08,000 --> 00:47:13,040
committee will not release 4.0

00:47:10,160 --> 00:47:13,920
until it is completely green on data all

00:47:13,040 --> 00:47:17,440
the data

00:47:13,920 --> 00:47:19,119
loss data governance everything so

00:47:17,440 --> 00:47:21,359
and i think it's there we actually have

00:47:19,119 --> 00:47:21,680
a lot of folks using cassandra 4.0 beta

00:47:21,359 --> 00:47:24,680
00:47:21,680 --> 00:47:26,319
in production right now if you go to

00:47:24,680 --> 00:47:27,280
cassandra.apache.org you'll see some of

00:47:26,319 --> 00:47:32,319
those

00:47:27,280 --> 00:47:35,119
um but it's uh i think it's it's a

00:47:32,319 --> 00:47:36,720
uh it'll be soon um because we're just

00:47:35,119 --> 00:47:39,119
we're running out of things to break

00:47:36,720 --> 00:47:40,559
and it's the first time i've seen any

00:47:39,119 --> 00:47:44,000
database this stable

00:47:40,559 --> 00:47:44,480
in my career so that's my long answer

00:47:44,000 --> 00:47:47,520
but

00:47:44,480 --> 00:47:48,720
yeah thanks for asking and i think we're

00:47:47,520 --> 00:47:52,079
out of questions other than

00:47:48,720 --> 00:47:55,200
happy st patrick's day hey tristan

00:47:52,079 --> 00:47:57,200
that's not a question is it okay

00:47:55,200 --> 00:47:59,040
beautiful thank you so much patrick for

00:47:57,200 --> 00:48:01,200
your time today and thank you

00:47:59,040 --> 00:48:02,160
everyone so much for joining just as a

00:48:01,200 --> 00:48:04,800
quick reminder

00:48:02,160 --> 00:48:06,720
uh this webinar was recorded and it will

00:48:04,800 --> 00:48:07,280
be posted to the linux foundation

00:48:06,720 --> 00:48:11,160
youtube

00:48:07,280 --> 00:48:14,160
later today hey thanks so much everyone

00:48:11,160 --> 00:48:14,160

YouTube URL: https://www.youtube.com/watch?v=L4MMjKKrxek


