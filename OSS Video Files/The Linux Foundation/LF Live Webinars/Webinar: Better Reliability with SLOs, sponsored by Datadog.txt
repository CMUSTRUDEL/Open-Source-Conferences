Title: Webinar: Better Reliability with SLOs, sponsored by Datadog
Publication date: 2020-11-10
Playlist: LF Live Webinars
Description: 
	In this talk, youâ€™ll learn how to define Service Level Objectives (SLOs) by choosing the correct service level indicators (SLIs), define appropriate agreements with stakeholders, and have meaningful conversations around realistic availability.
Captions: 
	00:00:00,160 --> 00:00:04,799
thank you very much kristin and uh good

00:00:03,040 --> 00:00:06,399
afternoon linux foundation

00:00:04,799 --> 00:00:08,960
the uh it's wonderful to be with you

00:00:06,399 --> 00:00:11,519
today uh just a brief note to

00:00:08,960 --> 00:00:12,960
i'd like to thank all the organizers for

00:00:11,519 --> 00:00:13,679
everything they've done to make this go

00:00:12,960 --> 00:00:16,560
as

00:00:13,679 --> 00:00:18,000
smoothly as well it's on me now how

00:00:16,560 --> 00:00:20,000
smooth it goes so

00:00:18,000 --> 00:00:22,060
let's get on with it uh welcome to

00:00:20,000 --> 00:00:25,130
better reliability with slos

00:00:22,060 --> 00:00:25,130
[Music]

00:00:28,080 --> 00:00:32,239
if you've been familiar with it uh this

00:00:29,920 --> 00:00:35,520
is heavily adapted from dandy dog's

00:00:32,239 --> 00:00:36,480
2020 slo workshop um slightly expanded

00:00:35,520 --> 00:00:40,399
material

00:00:36,480 --> 00:00:41,040
but um it's a great primer for getting

00:00:40,399 --> 00:00:44,239
to understand

00:00:41,040 --> 00:00:46,719
how how and why to use slos but that's

00:00:44,239 --> 00:00:47,600
a large part of what we'll cover today

00:00:46,719 --> 00:00:50,000
now because

00:00:47,600 --> 00:00:51,600
of the ways that my brain is broken

00:00:50,000 --> 00:00:54,000
since talking about slos you also need

00:00:51,600 --> 00:00:57,800
to discuss slas and slis

00:00:54,000 --> 00:01:01,039
the unofficial subtitle for this talk is

00:00:57,800 --> 00:01:04,159
s-l-a-e-i-o-u and definitely why

00:01:01,039 --> 00:01:04,720
um but in to go inside baseball no

00:01:04,159 --> 00:01:07,760
matter how

00:01:04,720 --> 00:01:09,920
i tried to write uh write that out

00:01:07,760 --> 00:01:11,520
it just didn't make sense uh when you're

00:01:09,920 --> 00:01:13,680
reading it you have to hear it

00:01:11,520 --> 00:01:14,720
said and i apologize for anybody who

00:01:13,680 --> 00:01:17,280
didn't learn english

00:01:14,720 --> 00:01:18,320
as a first language you're in the u.s

00:01:17,280 --> 00:01:21,200
that's how we

00:01:18,320 --> 00:01:22,159
uh a e i o u and sometimes y is how we

00:01:21,200 --> 00:01:26,400
learn the vowels

00:01:22,159 --> 00:01:28,080
of of the alphabet so moving on uh

00:01:26,400 --> 00:01:29,759
the things that we're going to cover

00:01:28,080 --> 00:01:34,240
today are mainly

00:01:29,759 --> 00:01:36,880
slis slos and slas we want to talk about

00:01:34,240 --> 00:01:37,439
what it takes to define and what quality

00:01:36,880 --> 00:01:40,799
targets

00:01:37,439 --> 00:01:42,880
are that feeds naturally into

00:01:40,799 --> 00:01:45,520
what error budgets are and we'll talk

00:01:42,880 --> 00:01:47,119
about some practical examples

00:01:45,520 --> 00:01:48,640
but you may be wondering who that

00:01:47,119 --> 00:01:52,479
bearded beauty is and

00:01:48,640 --> 00:01:53,759
why is he talking to me well i'm waldo

00:01:52,479 --> 00:01:55,600
i used to be a productive member of

00:01:53,759 --> 00:01:57,520
society before i took this job

00:01:55,600 --> 00:01:59,680
but i come from the systems and

00:01:57,520 --> 00:02:01,600
operations engineering world

00:01:59,680 --> 00:02:02,719
before accidentally going to the right

00:02:01,600 --> 00:02:05,759
conference i was a

00:02:02,719 --> 00:02:07,439
fairly typical bitter sis admin type the

00:02:05,759 --> 00:02:10,080
devops community was still pretty new

00:02:07,439 --> 00:02:13,120
but attending velocity in 2011 was

00:02:10,080 --> 00:02:14,319
revelatory for me um that week literally

00:02:13,120 --> 00:02:16,800
changed my career

00:02:14,319 --> 00:02:18,000
i'd simply never been in an organization

00:02:16,800 --> 00:02:20,840
that didn't have a

00:02:18,000 --> 00:02:22,959
contentious and often even antagonistic

00:02:20,840 --> 00:02:23,440
relationship between the people who make

00:02:22,959 --> 00:02:27,120
things

00:02:23,440 --> 00:02:29,120
and the people who run things

00:02:27,120 --> 00:02:30,800
because of this and the relationships

00:02:29,120 --> 00:02:32,720
between devops and sre

00:02:30,800 --> 00:02:35,760
i'm here to talk about one of the steps

00:02:32,720 --> 00:02:38,640
that enables a healthy transition into

00:02:35,760 --> 00:02:41,519
incorporating sre and devops practices

00:02:38,640 --> 00:02:44,879
into your organization

00:02:41,519 --> 00:02:47,680
so technical people we love acronyms

00:02:44,879 --> 00:02:48,959
and in this case we've got three tlas

00:02:47,680 --> 00:02:51,680
that are very similar

00:02:48,959 --> 00:02:53,040
so it's easy to get them mixed up so

00:02:51,680 --> 00:02:54,560
we're going to start with some nice tidy

00:02:53,040 --> 00:02:56,000
definitions just to

00:02:54,560 --> 00:02:58,560
clear things up and make sure we're on

00:02:56,000 --> 00:02:58,560
the same page

00:02:58,640 --> 00:03:05,280
we'll start with slas sli's see

00:03:02,239 --> 00:03:07,440
a service level indicator is a

00:03:05,280 --> 00:03:09,040
quantitative measurement that expresses

00:03:07,440 --> 00:03:11,120
an aspect of the service and this is

00:03:09,040 --> 00:03:15,200
usually a metric

00:03:11,120 --> 00:03:16,879
um the key word here is quantitative

00:03:15,200 --> 00:03:18,319
we want you have to be able to measure

00:03:16,879 --> 00:03:20,080
something with a reasonable degree of

00:03:18,319 --> 00:03:23,200
accuracy

00:03:20,080 --> 00:03:24,959
this can't just be a gut feeling slis

00:03:23,200 --> 00:03:28,319
are the basis of slos

00:03:24,959 --> 00:03:29,360
so we'll look at that next a service

00:03:28,319 --> 00:03:31,760
level objective

00:03:29,360 --> 00:03:34,000
is a target value for a service as

00:03:31,760 --> 00:03:35,920
measured by an sli

00:03:34,000 --> 00:03:38,319
the idea here is to pick a reasonable

00:03:35,920 --> 00:03:41,599
value that should be maintained

00:03:38,319 --> 00:03:43,120
or striven for for a given sli we'll get

00:03:41,599 --> 00:03:44,239
into a few examples later on but the

00:03:43,120 --> 00:03:48,239
core idea here

00:03:44,239 --> 00:03:50,640
is that nestle is a target it's a goal

00:03:48,239 --> 00:03:52,159
it's something aimed for and spoiler

00:03:50,640 --> 00:03:54,159
alert is ultimately

00:03:52,159 --> 00:03:56,640
a way of measuring the success or

00:03:54,159 --> 00:04:00,080
failure of a service over time

00:03:56,640 --> 00:04:04,879
now it can be reasonably argued that slo

00:04:00,080 --> 00:04:07,680
slos are the basis for slas even if it's

00:04:04,879 --> 00:04:09,280
not how things historically have run

00:04:07,680 --> 00:04:13,920
they should be related to each other

00:04:09,280 --> 00:04:16,079
but previously slas generally were

00:04:13,920 --> 00:04:19,199
created without

00:04:16,079 --> 00:04:21,359
referencing any kind of slo but an sla

00:04:19,199 --> 00:04:23,280
is a service level agreement

00:04:21,359 --> 00:04:24,880
it's a contract that defines the results

00:04:23,280 --> 00:04:28,639
and consequences

00:04:24,880 --> 00:04:32,080
of meeting or missing one or more slos

00:04:28,639 --> 00:04:34,960
agreements targets now words like

00:04:32,080 --> 00:04:36,080
agreement and promise and contract these

00:04:34,960 --> 00:04:38,000
are all words that can be used to

00:04:36,080 --> 00:04:39,919
describe slas

00:04:38,000 --> 00:04:41,120
the important thing here is that it's a

00:04:39,919 --> 00:04:43,440
statement that codifies

00:04:41,120 --> 00:04:45,360
what happens when an slo target is

00:04:43,440 --> 00:04:47,600
missed

00:04:45,360 --> 00:04:48,720
in principle that could be that result

00:04:47,600 --> 00:04:50,320
could be anything

00:04:48,720 --> 00:04:53,280
but it commonly takes the form of a

00:04:50,320 --> 00:04:53,280
business decision

00:04:54,960 --> 00:04:59,199
now as you may be able to guess there's

00:04:57,440 --> 00:05:02,720
more than just monitoring tools

00:04:59,199 --> 00:05:04,320
at play here it's truly a team effort

00:05:02,720 --> 00:05:06,639
when it comes to identifying

00:05:04,320 --> 00:05:08,000
scoping defining and ultimately

00:05:06,639 --> 00:05:11,840
implementing slis

00:05:08,000 --> 00:05:11,840
slos and slas

00:05:12,720 --> 00:05:17,440
and in all of all of your thinking about

00:05:15,520 --> 00:05:18,639
this i want you to focus on the user

00:05:17,440 --> 00:05:21,440
experience

00:05:18,639 --> 00:05:21,919
and users in this case are customers

00:05:21,440 --> 00:05:25,440
whether

00:05:21,919 --> 00:05:27,360
internal or external

00:05:25,440 --> 00:05:30,160
so let's talk about what a quality

00:05:27,360 --> 00:05:30,160
target is

00:05:31,199 --> 00:05:38,000
again focusing on the user

00:05:34,400 --> 00:05:41,520
how do they interact with your product

00:05:38,000 --> 00:05:44,800
did they use it what is their workflow

00:05:41,520 --> 00:05:46,800
what services that you run do they

00:05:44,800 --> 00:05:50,840
interact with

00:05:46,800 --> 00:05:52,320
and what do your users want what do they

00:05:50,840 --> 00:05:54,160
expect

00:05:52,320 --> 00:05:56,000
now we should say up front that not all

00:05:54,160 --> 00:05:59,840
values make good slis

00:05:56,000 --> 00:06:02,319
um system resources uh quorum state

00:05:59,840 --> 00:06:02,880
you know number lines per commit you

00:06:02,319 --> 00:06:05,199
know these

00:06:02,880 --> 00:06:06,000
values can have use but your customers

00:06:05,199 --> 00:06:09,199
don't care about

00:06:06,000 --> 00:06:10,880
them it doesn't matter to them

00:06:09,199 --> 00:06:12,240
things you should focus on are things

00:06:10,880 --> 00:06:14,800
that

00:06:12,240 --> 00:06:16,720
impact the user experience uh things

00:06:14,800 --> 00:06:20,479
like

00:06:16,720 --> 00:06:23,919
the the realm of response and requests

00:06:20,479 --> 00:06:27,520
were they available how long did it take

00:06:23,919 --> 00:06:30,800
do you have enough resources in in play

00:06:27,520 --> 00:06:34,800
so that your customers requests can be

00:06:30,800 --> 00:06:38,000
completed efficiently and quickly um

00:06:34,800 --> 00:06:40,319
can the data be available accessed

00:06:38,000 --> 00:06:41,919
when when it's needed uh how long does

00:06:40,319 --> 00:06:43,520
it take to to grab that

00:06:41,919 --> 00:06:45,520
and if there are failures if there are

00:06:43,520 --> 00:06:47,840
hiccups if there are disturbances

00:06:45,520 --> 00:06:49,360
how long does it take you know is is the

00:06:47,840 --> 00:06:53,039
data still there when you need it and

00:06:49,360 --> 00:06:53,039
how long does it take to rectify

00:06:53,759 --> 00:06:59,120
and in the category of pipelines is the

00:06:57,199 --> 00:07:01,680
right data

00:06:59,120 --> 00:07:02,880
coming out of your uh of your data

00:07:01,680 --> 00:07:05,840
processing

00:07:02,880 --> 00:07:09,599
um and freshness how long does it take

00:07:05,840 --> 00:07:09,599
for new data to be incorporated

00:07:09,680 --> 00:07:17,120
now slis are applied values um

00:07:14,400 --> 00:07:19,759
and your indicators your sli should have

00:07:17,120 --> 00:07:22,400
a relationship to the user's experience

00:07:19,759 --> 00:07:24,080
now looking at these two examples uh the

00:07:22,400 --> 00:07:25,599
number of requests to an endpoint that

00:07:24,080 --> 00:07:27,199
completes successfully

00:07:25,599 --> 00:07:28,880
and the number of requests to an

00:07:27,199 --> 00:07:30,639
endpoint that complete within 500

00:07:28,880 --> 00:07:32,479
milliseconds

00:07:30,639 --> 00:07:34,319
consider that you know these are very

00:07:32,479 --> 00:07:36,400
subtle but important differences

00:07:34,319 --> 00:07:37,759
consider that the second one doesn't ex

00:07:36,400 --> 00:07:40,319
explicitly state

00:07:37,759 --> 00:07:41,039
a successful request only that it was

00:07:40,319 --> 00:07:45,440
completed

00:07:41,039 --> 00:07:47,280
in under 500 milliseconds

00:07:45,440 --> 00:07:49,120
reliable failure conditions are

00:07:47,280 --> 00:07:52,400
indicators too

00:07:49,120 --> 00:07:54,560
you should be able to to see a failure

00:07:52,400 --> 00:07:56,560
and be able to understand why it doesn't

00:07:54,560 --> 00:07:59,840
necessarily mean that the failure is bad

00:07:56,560 --> 00:08:02,160
but it can be an indicator of

00:07:59,840 --> 00:08:06,080
more resiliency that could be built into

00:08:02,160 --> 00:08:06,080
your processes and interior services

00:08:06,400 --> 00:08:11,919
now slos are applied slis

00:08:09,680 --> 00:08:13,120
objectives have both a target and a time

00:08:11,919 --> 00:08:16,560
window

00:08:13,120 --> 00:08:17,759
and it's not uncommon for these to be a

00:08:16,560 --> 00:08:19,599
complex

00:08:17,759 --> 00:08:22,639
statement including percentiles of a

00:08:19,599 --> 00:08:22,639
metric over time

00:08:22,879 --> 00:08:29,120
now there's usually a penalty for slas

00:08:26,639 --> 00:08:30,319
that's often financial but these kinds

00:08:29,120 --> 00:08:32,240
of things are much more common when

00:08:30,319 --> 00:08:35,680
money changes hands between

00:08:32,240 --> 00:08:39,760
companies rather than between teams

00:08:35,680 --> 00:08:43,039
or organizations within the same company

00:08:39,760 --> 00:08:45,599
these slas address expectations and

00:08:43,039 --> 00:08:45,599
impacts

00:08:46,959 --> 00:08:50,480
now coming to error budgets when we talk

00:08:50,160 --> 00:08:53,040
about

00:08:50,480 --> 00:08:53,040
slos

00:08:53,680 --> 00:08:57,839
availability over time that time

00:08:56,720 --> 00:09:01,200
remaining

00:08:57,839 --> 00:09:03,839
in short is what becomes your slo your

00:09:01,200 --> 00:09:03,839
error budget

00:09:04,320 --> 00:09:07,760
now we all love to move fast and break

00:09:06,160 --> 00:09:08,720
things but when you have customers on

00:09:07,760 --> 00:09:10,560
the line you know

00:09:08,720 --> 00:09:12,000
customers experience on the line you

00:09:10,560 --> 00:09:15,360
need to move fast and fix

00:09:12,000 --> 00:09:18,399
things failure is unavoidable

00:09:15,360 --> 00:09:20,320
but how you respond is really important

00:09:18,399 --> 00:09:21,760
the idea overarching all of this is that

00:09:20,320 --> 00:09:24,160
you want to balance your innovation

00:09:21,760 --> 00:09:26,800
and novelty with reliability and

00:09:24,160 --> 00:09:26,800
stability

00:09:26,880 --> 00:09:32,480
so building error budgets or determining

00:09:30,399 --> 00:09:35,600
what they should be

00:09:32,480 --> 00:09:38,560
an slo is ultimately defined

00:09:35,600 --> 00:09:40,080
identified by the product owner the

00:09:38,560 --> 00:09:42,399
actual objective

00:09:40,080 --> 00:09:43,680
is measured by a neutral party like a

00:09:42,399 --> 00:09:47,360
monitoring system

00:09:43,680 --> 00:09:49,360
something that can that just tells you

00:09:47,360 --> 00:09:50,800
the facts

00:09:49,360 --> 00:09:53,839
now the difference between the actual

00:09:50,800 --> 00:09:56,320
measurement and the objective

00:09:53,839 --> 00:09:56,880
or sorry the total time period and the

00:09:56,320 --> 00:09:59,920
objective

00:09:56,880 --> 00:10:01,279
is your error budget and you should

00:09:59,920 --> 00:10:04,880
spend your budgets

00:10:01,279 --> 00:10:09,920
like organizations that do annual

00:10:04,880 --> 00:10:11,920
financial planning use it or lose it um

00:10:09,920 --> 00:10:13,360
you should think of it as your error

00:10:11,920 --> 00:10:16,480
budget as time to play

00:10:13,360 --> 00:10:18,959
time to innovate um

00:10:16,480 --> 00:10:20,079
or run some experiments for instance uh

00:10:18,959 --> 00:10:23,120
if the slo

00:10:20,079 --> 00:10:26,240
is currently being met you have freedom

00:10:23,120 --> 00:10:27,440
you have room to move um so try some new

00:10:26,240 --> 00:10:28,640
features maybe something that was

00:10:27,440 --> 00:10:32,240
experimental or

00:10:28,640 --> 00:10:34,399
not quite ready for uh

00:10:32,240 --> 00:10:35,920
not quite ready for to be called

00:10:34,399 --> 00:10:36,959
complete but you're ready to get some

00:10:35,920 --> 00:10:39,519
feedback

00:10:36,959 --> 00:10:41,920
um maybe trigger some plain downtime to

00:10:39,519 --> 00:10:44,839
take care of maintenance that

00:10:41,920 --> 00:10:47,760
that's been sitting uh sitting in the

00:10:44,839 --> 00:10:50,320
sidelines now if your budget is

00:10:47,760 --> 00:10:51,600
zero or negative you should concentrate

00:10:50,320 --> 00:10:53,920
on that

00:10:51,600 --> 00:10:56,240
freeze your new feature development and

00:10:53,920 --> 00:10:57,360
improve your observability story make

00:10:56,240 --> 00:11:01,600
your

00:10:57,360 --> 00:11:03,120
make your reliability higher

00:11:01,600 --> 00:11:05,680
look at ways that your service is

00:11:03,120 --> 00:11:08,640
failing and try to mitigate

00:11:05,680 --> 00:11:08,640
those instances

00:11:10,480 --> 00:11:15,839
now having talked about that let's talk

00:11:12,240 --> 00:11:15,839
about some practical examples

00:11:16,000 --> 00:11:19,920
we have a brand new photo sharing site

00:11:18,959 --> 00:11:22,640
i'm told that

00:11:19,920 --> 00:11:23,519
the o character is pronounced f so you

00:11:22,640 --> 00:11:27,279
would say this

00:11:23,519 --> 00:11:30,320
as photosite.net which is fun and

00:11:27,279 --> 00:11:31,839
also critically not real um

00:11:30,320 --> 00:11:33,680
i also suspect that the friend that i

00:11:31,839 --> 00:11:35,680
was collaborating on with this is subtly

00:11:33,680 --> 00:11:39,040
messing with me so

00:11:35,680 --> 00:11:39,040
we can poke fun at him later

00:11:39,680 --> 00:11:45,040
but in our photo application again

00:11:42,480 --> 00:11:47,519
starting with the user's experience

00:11:45,040 --> 00:11:49,200
how do they interact with our product by

00:11:47,519 --> 00:11:52,240
clicking and viewing

00:11:49,200 --> 00:11:56,000
photos doing searches

00:11:52,240 --> 00:11:58,800
uploading photos now their workflow

00:11:56,000 --> 00:11:59,200
is they log in they search photos they

00:11:58,800 --> 00:12:02,480
view

00:11:59,200 --> 00:12:03,440
and download them what services do they

00:12:02,480 --> 00:12:07,600
interact with

00:12:03,440 --> 00:12:09,440
uh accounts back end varying

00:12:07,600 --> 00:12:11,519
viewing and uploading services things

00:12:09,440 --> 00:12:13,040
like that

00:12:11,519 --> 00:12:15,760
and what do they want what do they

00:12:13,040 --> 00:12:19,040
expect they want to be fast

00:12:15,760 --> 00:12:20,000
and they want it to be accurate so some

00:12:19,040 --> 00:12:23,279
of the indicators

00:12:20,000 --> 00:12:25,680
that photosite.net relies on

00:12:23,279 --> 00:12:26,320
um for as far as requests and responses

00:12:25,680 --> 00:12:30,000
goes

00:12:26,320 --> 00:12:31,120
we we focus one of the key features is

00:12:30,000 --> 00:12:32,800
availability

00:12:31,120 --> 00:12:34,480
could our services respond to the

00:12:32,800 --> 00:12:36,800
request

00:12:34,480 --> 00:12:38,800
in latency how long did it take to

00:12:36,800 --> 00:12:42,240
respond to that click

00:12:38,800 --> 00:12:43,839
and throughput do we have enough

00:12:42,240 --> 00:12:47,680
do we have enough back end to make sure

00:12:43,839 --> 00:12:47,680
that the requests are handled promptly

00:12:49,200 --> 00:12:54,240
in the storage category we look at

00:12:51,279 --> 00:12:57,279
availability can the data that's

00:12:54,240 --> 00:12:59,200
requested be accessed when it's needed

00:12:57,279 --> 00:13:00,480
how long does it take to read or write

00:12:59,200 --> 00:13:03,680
the data

00:13:00,480 --> 00:13:06,959
and for durability is the data there

00:13:03,680 --> 00:13:06,959
when it's needed

00:13:07,600 --> 00:13:12,240
now in the pipeline category was the

00:13:09,440 --> 00:13:13,760
right data returned this is

00:13:12,240 --> 00:13:16,480
if you click on one thing and get

00:13:13,760 --> 00:13:18,639
another you're going to be upset

00:13:16,480 --> 00:13:20,480
and freshness how long does it take for

00:13:18,639 --> 00:13:23,440
a new version of a photo

00:13:20,480 --> 00:13:26,160
or process results to appear you know

00:13:23,440 --> 00:13:27,920
resizing is a very common feature

00:13:26,160 --> 00:13:30,079
how long does it did it take to return

00:13:27,920 --> 00:13:30,079
that

00:13:32,320 --> 00:13:36,240
but not everything we when thinking

00:13:34,240 --> 00:13:38,399
about slos and the services that we run

00:13:36,240 --> 00:13:40,560
we need to consider all the services

00:13:38,399 --> 00:13:41,839
that we run and we depend on uh not

00:13:40,560 --> 00:13:45,519
everything we run

00:13:41,839 --> 00:13:49,279
are things that we wrote so in

00:13:45,519 --> 00:13:51,279
in the linux foundation diaspora

00:13:49,279 --> 00:13:53,519
i found some projects that fall very

00:13:51,279 --> 00:13:55,519
squarely into this category

00:13:53,519 --> 00:13:59,360
such as continuous integration projects

00:13:55,519 --> 00:14:02,399
like jenkins jenkins axe and spinnaker

00:13:59,360 --> 00:14:03,839
key value stores like at cd and data

00:14:02,399 --> 00:14:05,519
collectors like fluentd

00:14:03,839 --> 00:14:07,600
um there are a lot of there were a lot

00:14:05,519 --> 00:14:09,440
of products uh it's been a while since i

00:14:07,600 --> 00:14:12,320
made myself familiar with the

00:14:09,440 --> 00:14:13,920
lf catalog um and there were a lot of

00:14:12,320 --> 00:14:18,079
things i just hadn't heard of

00:14:13,920 --> 00:14:18,079
before or were pretty novel

00:14:18,560 --> 00:14:22,160
there was one about transferring uh

00:14:20,959 --> 00:14:25,519
hospital data

00:14:22,160 --> 00:14:28,880
between sites some of which were were

00:14:25,519 --> 00:14:30,720
offline or did not have internet access

00:14:28,880 --> 00:14:31,920
reliably that i thought was a really

00:14:30,720 --> 00:14:33,519
interesting project that i need to look

00:14:31,920 --> 00:14:35,279
into more

00:14:33,519 --> 00:14:36,880
but all these different services i

00:14:35,279 --> 00:14:39,760
mentioned ci

00:14:36,880 --> 00:14:40,959
key value stores and data collection and

00:14:39,760 --> 00:14:42,839
pipelines

00:14:40,959 --> 00:14:45,440
they have very different operational

00:14:42,839 --> 00:14:46,720
profiles when thinking about slos and

00:14:45,440 --> 00:14:50,079
the services that we run

00:14:46,720 --> 00:14:51,519
we need to consider all of them now in

00:14:50,079 --> 00:14:53,920
my experience

00:14:51,519 --> 00:14:55,920
these three types of services fall under

00:14:53,920 --> 00:14:58,320
one of two operational models

00:14:55,920 --> 00:15:00,160
they're either properly managed or they

00:14:58,320 --> 00:15:01,920
were thrown together and nobody owns

00:15:00,160 --> 00:15:05,040
them and they just

00:15:01,920 --> 00:15:08,079
run in the background until it fails

00:15:05,040 --> 00:15:11,519
for instance very commonly uh

00:15:08,079 --> 00:15:11,519
ci and cd tools

00:15:11,600 --> 00:15:14,880
often fall under the latter category

00:15:13,120 --> 00:15:17,440
until company reaches a certain level of

00:15:14,880 --> 00:15:17,440
maturity

00:15:17,839 --> 00:15:23,360
but these tools are most often triggered

00:15:20,320 --> 00:15:23,360
by human behavior

00:15:23,839 --> 00:15:28,480
new code releases usually ultimately

00:15:26,160 --> 00:15:32,240
come from a human initiating a change

00:15:28,480 --> 00:15:34,480
triggering build testing workflows

00:15:32,240 --> 00:15:36,560
and ultimately providing deployable

00:15:34,480 --> 00:15:39,839
artifacts

00:15:36,560 --> 00:15:42,079
now perhaps ci and cd tooling has

00:15:39,839 --> 00:15:43,440
different slos for working hours versus

00:15:42,079 --> 00:15:44,880
non-working hours

00:15:43,440 --> 00:15:47,519
um for instance if you have a team

00:15:44,880 --> 00:15:50,079
that's you know relatively co-located at

00:15:47,519 --> 00:15:53,279
least in the same time zone

00:15:50,079 --> 00:15:54,880
maybe your slo for off hours is very

00:15:53,279 --> 00:15:56,880
different than when people are expected

00:15:54,880 --> 00:15:59,040
to be working

00:15:56,880 --> 00:16:00,959
now if you work on a team that's global

00:15:59,040 --> 00:16:03,519
that kind of goes out the window

00:16:00,959 --> 00:16:05,279
and but if you do have different times

00:16:03,519 --> 00:16:07,360
where your services need to be available

00:16:05,279 --> 00:16:09,360
you should also plan on contingencies

00:16:07,360 --> 00:16:09,920
that can be put in place for situations

00:16:09,360 --> 00:16:12,240
when

00:16:09,920 --> 00:16:13,440
for instance an emergency response is

00:16:12,240 --> 00:16:17,279
needed during

00:16:13,440 --> 00:16:20,000
your typical non-working hours

00:16:17,279 --> 00:16:21,680
now key value stores might not need much

00:16:20,000 --> 00:16:22,320
in the way development or configuration

00:16:21,680 --> 00:16:24,240
changes

00:16:22,320 --> 00:16:27,199
but they do need to kept be kept up to

00:16:24,240 --> 00:16:27,199
date periodically

00:16:28,480 --> 00:16:32,240
how your your consuming apps use the

00:16:31,040 --> 00:16:34,880
data provided by

00:16:32,240 --> 00:16:36,240
for instance at cd you might need a low

00:16:34,880 --> 00:16:38,399
degree of availability

00:16:36,240 --> 00:16:39,759
such as like when processes are

00:16:38,399 --> 00:16:41,759
generally long running

00:16:39,759 --> 00:16:45,600
and they don't have much churn and the

00:16:41,759 --> 00:16:47,519
values are only checked as startup

00:16:45,600 --> 00:16:49,360
but on the other end you may have things

00:16:47,519 --> 00:16:50,399
that have require a high degree of

00:16:49,360 --> 00:16:52,800
availability

00:16:50,399 --> 00:16:53,920
like when configurations may be ch uh

00:16:52,800 --> 00:16:55,600
change live

00:16:53,920 --> 00:16:57,360
or they're supporting something like

00:16:55,600 --> 00:17:00,079
kubernetes where it's

00:16:57,360 --> 00:17:01,199
constantly spinning up new instances and

00:17:00,079 --> 00:17:03,440
uh

00:17:01,199 --> 00:17:05,839
quorum is is often needed the the

00:17:03,440 --> 00:17:08,319
configuration information is is needed

00:17:05,839 --> 00:17:09,520
fairly frequently because individual

00:17:08,319 --> 00:17:12,959
instances get

00:17:09,520 --> 00:17:14,720
uh get recycled

00:17:12,959 --> 00:17:16,400
now if you're running a data collection

00:17:14,720 --> 00:17:19,280
or data pipeline tool like

00:17:16,400 --> 00:17:20,640
fluentd you probably work in one of two

00:17:19,280 --> 00:17:22,079
modes

00:17:20,640 --> 00:17:24,000
the first one i would consider the more

00:17:22,079 --> 00:17:26,079
common where it's always on

00:17:24,000 --> 00:17:27,520
for continuous or unpredictable

00:17:26,079 --> 00:17:30,000
ingestion patterns

00:17:27,520 --> 00:17:30,960
such as a common metrics collection

00:17:30,000 --> 00:17:34,559
services

00:17:30,960 --> 00:17:36,240
or shopping cart processing

00:17:34,559 --> 00:17:38,080
on the other end you might have

00:17:36,240 --> 00:17:39,919
predictable but high burst data

00:17:38,080 --> 00:17:42,320
collections

00:17:39,919 --> 00:17:44,160
in my mind the best example is the large

00:17:42,320 --> 00:17:45,200
hadron collider at cern

00:17:44,160 --> 00:17:46,960
they know when they're running

00:17:45,200 --> 00:17:48,559
experiments and they but more

00:17:46,960 --> 00:17:51,360
importantly they know when they're not

00:17:48,559 --> 00:17:52,080
so they have a lot of downtime in

00:17:51,360 --> 00:17:55,840
between

00:17:52,080 --> 00:17:56,559
sessions when fluentd for instance if

00:17:55,840 --> 00:17:57,840
that's

00:17:56,559 --> 00:17:59,760
you know part of their tool chain

00:17:57,840 --> 00:18:01,840
doesn't need to be available and you can

00:17:59,760 --> 00:18:04,320
do a lot of maintenance and experiments

00:18:01,840 --> 00:18:05,280
in the off time but when they're going

00:18:04,320 --> 00:18:10,080
to run

00:18:05,280 --> 00:18:10,080
a lhc burst a test

00:18:10,160 --> 00:18:14,320
they need a code freeze and that service

00:18:12,160 --> 00:18:17,120
needs to be rock steady available

00:18:14,320 --> 00:18:17,120
during those times

00:18:18,320 --> 00:18:22,400
so we have very different operational

00:18:20,640 --> 00:18:24,799
profiles so they should have very

00:18:22,400 --> 00:18:26,160
different availability targets

00:18:24,799 --> 00:18:27,919
you should allow your teams to be

00:18:26,160 --> 00:18:28,640
flexible when they're describing the

00:18:27,919 --> 00:18:32,559
slos

00:18:28,640 --> 00:18:32,559
for your individual services needs

00:18:32,720 --> 00:18:36,480
so uh now that we've covered the main

00:18:35,840 --> 00:18:39,840
parts

00:18:36,480 --> 00:18:39,840
we'll cover a few tips

00:18:40,320 --> 00:18:47,120
now uh datadog has an slo product

00:18:43,679 --> 00:18:47,919
that helps you make uh decide these

00:18:47,120 --> 00:18:49,520
things make

00:18:47,919 --> 00:18:51,840
make these decisions more easily

00:18:49,520 --> 00:18:53,840
especially in terms of the day-to-day

00:18:51,840 --> 00:18:55,120
uh do are we working on feature

00:18:53,840 --> 00:18:58,320
development or

00:18:55,120 --> 00:19:00,480
resiliency we have monitor-based and

00:18:58,320 --> 00:19:03,360
event-based slos

00:19:00,480 --> 00:19:04,880
monitors are typically based on metrics

00:19:03,360 --> 00:19:06,240
there are monitors which are tied to

00:19:04,880 --> 00:19:07,919
metrics

00:19:06,240 --> 00:19:09,280
so they're values within a set time

00:19:07,919 --> 00:19:12,320
frame

00:19:09,280 --> 00:19:16,080
for instance 99 of the time we want

00:19:12,320 --> 00:19:18,480
latency to be less than 200 milliseconds

00:19:16,080 --> 00:19:19,200
or event based these are more akin to

00:19:18,480 --> 00:19:22,960
statements

00:19:19,200 --> 00:19:24,559
uh like a success ratio so we want 99 of

00:19:22,960 --> 00:19:28,160
our request to have latency

00:19:24,559 --> 00:19:28,160
less than 20 milliseconds

00:19:30,720 --> 00:19:38,480
a common go the four golden signals

00:19:35,280 --> 00:19:39,440
view of uh metrics is often a useful

00:19:38,480 --> 00:19:42,559
guide post

00:19:39,440 --> 00:19:43,760
for thinking about the different um

00:19:42,559 --> 00:19:45,840
thinking about the different types of

00:19:43,760 --> 00:19:46,160
metrics whether a metric is useful or

00:19:45,840 --> 00:19:48,160
not

00:19:46,160 --> 00:19:49,280
in this circumstance when choosing an

00:19:48,160 --> 00:19:52,160
sli

00:19:49,280 --> 00:19:53,520
so and the four golden signals gives you

00:19:52,160 --> 00:19:56,559
the acronym lets

00:19:53,520 --> 00:19:58,240
for latency error traffic and saturation

00:19:56,559 --> 00:19:59,840
there's plenty of information out there

00:19:58,240 --> 00:20:01,919
it's uh

00:19:59,840 --> 00:20:03,120
you don't need to hear me talk about it

00:20:01,919 --> 00:20:05,520
now

00:20:03,120 --> 00:20:06,400
but no matter what you do you want to

00:20:05,520 --> 00:20:09,520
focus on

00:20:06,400 --> 00:20:10,880
your users step back from the

00:20:09,520 --> 00:20:13,520
engineering

00:20:10,880 --> 00:20:15,760
interesting problems in the day-to-day

00:20:13,520 --> 00:20:18,320
develop your user stories and journeys

00:20:15,760 --> 00:20:21,360
first and then figure out what slis

00:20:18,320 --> 00:20:21,360
applied to your thing there

00:20:22,960 --> 00:20:27,600
also involve all your stakeholders your

00:20:25,840 --> 00:20:29,840
stakeholders

00:20:27,600 --> 00:20:31,840
are included of course your your product

00:20:29,840 --> 00:20:34,400
managers and product owners

00:20:31,840 --> 00:20:35,919
the engineers but also your management

00:20:34,400 --> 00:20:38,159
and executive teams

00:20:35,919 --> 00:20:39,440
um because they need to be on board with

00:20:38,159 --> 00:20:43,120
the idea that

00:20:39,440 --> 00:20:46,840
100 reliability isn't it's

00:20:43,120 --> 00:20:50,880
uh not possible and it's also not really

00:20:46,840 --> 00:20:50,880
desirable in most cases

00:20:51,760 --> 00:20:58,159
so when you're when you get into slos

00:20:55,039 --> 00:21:00,080
and starting on this journey um gain

00:20:58,159 --> 00:21:03,200
experience by

00:21:00,080 --> 00:21:04,400
by starting small like um build out

00:21:03,200 --> 00:21:07,440
experiments and

00:21:04,400 --> 00:21:10,480
see see what works for you

00:21:07,440 --> 00:21:11,600
um building out data sets to you know

00:21:10,480 --> 00:21:14,640
make sure that you have

00:21:11,600 --> 00:21:16,559
reliable data and a historical

00:21:14,640 --> 00:21:18,960
data to be able to start figuring out

00:21:16,559 --> 00:21:20,880
what what your baselines look at

00:21:18,960 --> 00:21:22,640
and at first error on the side of

00:21:20,880 --> 00:21:24,960
naivety

00:21:22,640 --> 00:21:26,320
it's a lot easier to start with a a

00:21:24,960 --> 00:21:30,320
relatively low

00:21:26,320 --> 00:21:32,720
success rate say like 80 over a week

00:21:30,320 --> 00:21:36,159
and make it more stringent over time as

00:21:32,720 --> 00:21:36,159
you find that you actually need it

00:21:36,400 --> 00:21:41,840
but the um

00:21:39,919 --> 00:21:43,280
it's much harder to convince people to

00:21:41,840 --> 00:21:45,600
say to

00:21:43,280 --> 00:21:46,320
when you start off with we need an slo

00:21:45,600 --> 00:21:48,559
of four

00:21:46,320 --> 00:21:49,360
nines to be able to say you know we

00:21:48,559 --> 00:21:51,840
really don't need

00:21:49,360 --> 00:21:52,880
that much availability uh let's start

00:21:51,840 --> 00:21:55,120
with let's go about

00:21:52,880 --> 00:21:58,799
down to two that will freak people out

00:21:55,120 --> 00:22:02,960
so start small

00:21:58,799 --> 00:22:06,799
uh and remember that slos need to change

00:22:02,960 --> 00:22:10,240
um you want to reevaluate your slos and

00:22:06,799 --> 00:22:13,600
slis as your environment and evolves

00:22:10,240 --> 00:22:14,640
and with that said slas the agreements

00:22:13,600 --> 00:22:16,960
with your customers

00:22:14,640 --> 00:22:19,600
these have to have the capability to

00:22:16,960 --> 00:22:19,600
evolve too

00:22:20,159 --> 00:22:25,039
this is common it's not a great practice

00:22:23,679 --> 00:22:28,000
but it's common when you get

00:22:25,039 --> 00:22:30,159
updated terms and conditions from any

00:22:28,000 --> 00:22:33,200
number of services from your banks

00:22:30,159 --> 00:22:37,200
to your video game services to

00:22:33,200 --> 00:22:39,600
whatever ideally being more transparent

00:22:37,200 --> 00:22:42,400
about those changes is

00:22:39,600 --> 00:22:44,720
is better but i can't make that decision

00:22:42,400 --> 00:22:44,720
for you

00:22:45,200 --> 00:22:49,200
now finally tooling matters um being

00:22:47,520 --> 00:22:52,400
able to

00:22:49,200 --> 00:22:55,280
um being able to

00:22:52,400 --> 00:22:56,880
have again that independent view of

00:22:55,280 --> 00:22:57,840
where you what your success looks like

00:22:56,880 --> 00:23:00,400
at the moment

00:22:57,840 --> 00:23:02,720
as well as being able to share what your

00:23:00,400 --> 00:23:06,320
current status is

00:23:02,720 --> 00:23:06,320
can make a world of difference

00:23:06,880 --> 00:23:09,440
for instance if you're running an

00:23:08,159 --> 00:23:10,080
experiment if you're having a little

00:23:09,440 --> 00:23:13,280
downtime

00:23:10,080 --> 00:23:15,280
that is but you still have all of your

00:23:13,280 --> 00:23:17,200
a lot of error budget to play with it's

00:23:15,280 --> 00:23:19,200
useful to be able to provide

00:23:17,200 --> 00:23:21,600
that information to your customers

00:23:19,200 --> 00:23:23,280
especially if they're internal

00:23:21,600 --> 00:23:25,919
so that they're not necessarily banging

00:23:23,280 --> 00:23:25,919
down your door

00:23:26,000 --> 00:23:29,360
when you are experimenting when you're

00:23:27,600 --> 00:23:32,320
running an experiment or

00:23:29,360 --> 00:23:33,840
experiencing an outage that just isn't

00:23:32,320 --> 00:23:36,559
that you can live with

00:23:33,840 --> 00:23:37,280
so being transparent with this

00:23:36,559 --> 00:23:40,960
information

00:23:37,280 --> 00:23:43,919
is what helps this become a wildly

00:23:40,960 --> 00:23:43,919
successful program

00:23:44,159 --> 00:23:47,200
now finally in the last section because

00:23:46,799 --> 00:23:49,720
i

00:23:47,200 --> 00:23:50,880
as i teased with our subtitle

00:23:49,720 --> 00:23:54,320
s-l-a-e-i-o-u

00:23:50,880 --> 00:23:57,520
but definitely why let's cover some more

00:23:54,320 --> 00:24:00,159
some more letters um

00:23:57,520 --> 00:24:01,279
first i'm going to do sle for

00:24:00,159 --> 00:24:02,720
environments

00:24:01,279 --> 00:24:05,279
now i've worked in places that didn't

00:24:02,720 --> 00:24:08,400
have one production environment or two

00:24:05,279 --> 00:24:10,960
but 30. everything no matter

00:24:08,400 --> 00:24:13,840
how customer facing or not was

00:24:10,960 --> 00:24:17,120
considered pager worthy

00:24:13,840 --> 00:24:18,480
this is not a great way to work if you

00:24:17,120 --> 00:24:20,640
have multiple environments

00:24:18,480 --> 00:24:22,000
as part of your slos and your api

00:24:20,640 --> 00:24:23,919
documentation

00:24:22,000 --> 00:24:26,880
you should be clear about for instance

00:24:23,919 --> 00:24:29,760
what your staging environment is for

00:24:26,880 --> 00:24:31,520
is it for your team to test things is it

00:24:29,760 --> 00:24:33,440
for other teams to test integrations

00:24:31,520 --> 00:24:35,520
with your services

00:24:33,440 --> 00:24:37,840
what kind of availability do you promise

00:24:35,520 --> 00:24:37,840
for them

00:24:38,720 --> 00:24:43,919
next we have slu for updates

00:24:41,840 --> 00:24:45,039
now these are not intended to be written

00:24:43,919 --> 00:24:47,039
in stone

00:24:45,039 --> 00:24:48,080
you should review your slos and your

00:24:47,039 --> 00:24:49,840
related metrics

00:24:48,080 --> 00:24:52,080
to make sure that they still make sense

00:24:49,840 --> 00:24:55,360
are you still using the proper metrics

00:24:52,080 --> 00:24:56,640
are you targeting the proper uptimes

00:24:55,360 --> 00:24:58,840
you know these are just some of the

00:24:56,640 --> 00:25:01,840
questions you should be looking at

00:24:58,840 --> 00:25:05,919
periodically

00:25:01,840 --> 00:25:07,679
now a common problem i've experienced is

00:25:05,919 --> 00:25:09,600
has your service become a greater

00:25:07,679 --> 00:25:12,880
dependency than was intended

00:25:09,600 --> 00:25:14,799
has become critical path

00:25:12,880 --> 00:25:16,080
for instance like you're only running at

00:25:14,799 --> 00:25:19,520
maybe two nine seven

00:25:16,080 --> 00:25:21,039
two nines of availability but somebody

00:25:19,520 --> 00:25:23,200
found it was cool and then before you

00:25:21,039 --> 00:25:24,960
know it you have a four nine service

00:25:23,200 --> 00:25:27,440
that has a hard dependency on you

00:25:24,960 --> 00:25:29,039
um and the opposite could be true too as

00:25:27,440 --> 00:25:30,960
well

00:25:29,039 --> 00:25:33,200
how many it's surprisingly common how

00:25:30,960 --> 00:25:34,240
suddenly proof of concept becomes

00:25:33,200 --> 00:25:37,520
mission critical

00:25:34,240 --> 00:25:39,919
and keeping an eye on that is is always

00:25:37,520 --> 00:25:39,919
healthy

00:25:40,000 --> 00:25:43,039
but when you think that you could use a

00:25:41,679 --> 00:25:45,760
service level update

00:25:43,039 --> 00:25:46,960
put out a quick survey or an rfc on it

00:25:45,760 --> 00:25:49,360
to your customers

00:25:46,960 --> 00:25:51,600
this is especially easy if you're if

00:25:49,360 --> 00:25:54,480
this is internal

00:25:51,600 --> 00:25:55,039
but when a decision is made to make a

00:25:54,480 --> 00:25:57,120
change

00:25:55,039 --> 00:25:58,159
update your docs and communicate your

00:25:57,120 --> 00:26:02,159
decision broadly

00:25:58,159 --> 00:26:02,159
especially to those internal customers

00:26:02,320 --> 00:26:10,720
and finally we come to sly

00:26:06,159 --> 00:26:13,360
or better stated sly

00:26:10,720 --> 00:26:15,840
coming up with an slos is a first step

00:26:13,360 --> 00:26:16,159
towards bringing sanity to the operation

00:26:15,840 --> 00:26:19,919
of

00:26:16,159 --> 00:26:23,679
products in many places any

00:26:19,919 --> 00:26:27,039
any outage is considered an emergency

00:26:23,679 --> 00:26:28,720
if our businesses demand 100 uptime

00:26:27,039 --> 00:26:30,320
we just don't have the time to

00:26:28,720 --> 00:26:33,440
experiment innovate

00:26:30,320 --> 00:26:35,679
or even make healthy mistakes here's the

00:26:33,440 --> 00:26:35,679
thing

00:26:36,400 --> 00:26:40,400
the truth is that building individual

00:26:38,080 --> 00:26:42,400
services so that the resilient defaults

00:26:40,400 --> 00:26:44,640
in their dependencies makes for a better

00:26:42,400 --> 00:26:45,919
user experience

00:26:44,640 --> 00:26:48,480
additionally having a healthier

00:26:45,919 --> 00:26:50,400
relationship with faults by preventing

00:26:48,480 --> 00:26:51,440
every fault from becoming a three-alarm

00:26:50,400 --> 00:26:53,120
emergency

00:26:51,440 --> 00:26:55,440
it allows times more comfort and

00:26:53,120 --> 00:26:57,360
flexibility for dealing with faults when

00:26:55,440 --> 00:26:59,840
they occur

00:26:57,360 --> 00:27:01,679
thus making your your product teams your

00:26:59,840 --> 00:27:03,919
engineering teams more willing

00:27:01,679 --> 00:27:07,120
to own the resilience and availability

00:27:03,919 --> 00:27:10,159
of their services

00:27:07,120 --> 00:27:10,640
now in closing things that we've covered

00:27:10,159 --> 00:27:14,799
today

00:27:10,640 --> 00:27:18,159
are slis slos and slas

00:27:14,799 --> 00:27:19,440
how to define quality targets what error

00:27:18,159 --> 00:27:21,520
budgets are and

00:27:19,440 --> 00:27:24,640
why you should use them and we've given

00:27:21,520 --> 00:27:27,039
you some practical examples

00:27:24,640 --> 00:27:28,880
with that i'd like to thank you and open

00:27:27,039 --> 00:27:30,960
things up for other questions

00:27:28,880 --> 00:27:32,399
i'll stop sharing my screen and take a

00:27:30,960 --> 00:27:34,720
look at the q a widget

00:27:32,399 --> 00:27:35,600
now if you have more questions that you

00:27:34,720 --> 00:27:38,159
haven't

00:27:35,600 --> 00:27:39,279
typed up already feel free to to jump in

00:27:38,159 --> 00:27:49,840
there

00:27:39,279 --> 00:27:49,840
thank you

00:27:54,159 --> 00:27:58,000
okay moving my window over and opening

00:27:56,240 --> 00:28:02,240
the q a widget

00:27:58,000 --> 00:28:04,720
let's see

00:28:02,240 --> 00:28:06,000
are there any from kenneth jones are

00:28:04,720 --> 00:28:07,600
there any known tools that can build a

00:28:06,000 --> 00:28:09,279
dependency chain or tree

00:28:07,600 --> 00:28:11,840
to show the software systems that

00:28:09,279 --> 00:28:13,679
underpin an sli

00:28:11,840 --> 00:28:14,880
these would be helpful to understand the

00:28:13,679 --> 00:28:18,720
full set of services

00:28:14,880 --> 00:28:22,240
that affect performance okay um

00:28:18,720 --> 00:28:22,240
i would say that you are

00:28:22,720 --> 00:28:26,000
all right i'm gonna answer this as an

00:28:24,240 --> 00:28:29,120
evangelist

00:28:26,000 --> 00:28:32,399
um having so one

00:28:29,120 --> 00:28:34,240
having documentation of how things run

00:28:32,399 --> 00:28:35,440
what their dependencies are and what are

00:28:34,240 --> 00:28:40,480
dependent on them

00:28:35,440 --> 00:28:42,720
is wholly useful is entirely

00:28:40,480 --> 00:28:44,399
necessary and often overlooked if it's

00:28:42,720 --> 00:28:47,760
not done through tooling

00:28:44,399 --> 00:28:49,440
uh properly um like it's just hard to

00:28:47,760 --> 00:28:50,000
keep documentation up to date because we

00:28:49,440 --> 00:28:52,080
always have

00:28:50,000 --> 00:28:53,279
more things to do than time to do them

00:28:52,080 --> 00:28:54,399
and documentation is

00:28:53,279 --> 00:28:56,799
unfortunately one of the things that

00:28:54,399 --> 00:28:56,799
fails

00:28:57,520 --> 00:29:00,559
you're going to have to forgive me for a

00:28:59,200 --> 00:29:02,720
moment but datadog

00:29:00,559 --> 00:29:05,440
uh with when you implement our apm

00:29:02,720 --> 00:29:09,279
product we give you a service map

00:29:05,440 --> 00:29:10,640
that shows that shows the active

00:29:09,279 --> 00:29:14,399
real-time

00:29:10,640 --> 00:29:17,120
flow of data in uh

00:29:14,399 --> 00:29:26,240
in your environment give me a second and

00:29:17,120 --> 00:29:28,559
i'll pull up an example

00:29:26,240 --> 00:29:41,840
doing this off screen so that well you

00:29:28,559 --> 00:29:41,840
know for obvious reasons

00:29:45,360 --> 00:29:54,720
just need to make sure i'm in the right

00:29:46,559 --> 00:29:57,600
organization too

00:29:54,720 --> 00:30:00,159
all right so sharing my where'd the

00:29:57,600 --> 00:30:00,159
widget go

00:30:00,480 --> 00:30:02,799
okay

00:30:07,279 --> 00:30:11,039
okay you should see a window with the

00:30:09,600 --> 00:30:14,240
datadog

00:30:11,039 --> 00:30:16,320
app under apm

00:30:14,240 --> 00:30:19,279
so when you install the apm and

00:30:16,320 --> 00:30:22,640
configure it for your service

00:30:19,279 --> 00:30:24,240
it shows automatically this gets built

00:30:22,640 --> 00:30:27,440
out a service map

00:30:24,240 --> 00:30:30,559
of all the interactions

00:30:27,440 --> 00:30:30,559
that are happening um

00:30:30,640 --> 00:30:34,399
the relationships as well as how much

00:30:32,480 --> 00:30:36,159
traffic they receive now this is a demo

00:30:34,399 --> 00:30:39,360
app so things are yeah

00:30:36,159 --> 00:30:41,600
this is actually pretty boring as far as

00:30:39,360 --> 00:30:42,480
how traffic looks but you'll see

00:30:41,600 --> 00:30:45,760
different uh

00:30:42,480 --> 00:30:47,679
different indicators change for how many

00:30:45,760 --> 00:30:49,440
requests they get or node sizes or you

00:30:47,679 --> 00:30:52,159
know this is all configurable

00:30:49,440 --> 00:30:53,039
but it shows you a real-time view of

00:30:52,159 --> 00:30:55,760
what's available

00:30:53,039 --> 00:30:57,840
where the dependencies lies and so on i

00:30:55,760 --> 00:31:01,200
apologize for the

00:30:57,840 --> 00:31:02,000
the company man aspect to that answer

00:31:01,200 --> 00:31:03,440
but yes

00:31:02,000 --> 00:31:05,200
this is something you can get with a lot

00:31:03,440 --> 00:31:05,919
of tooling you can build this out

00:31:05,200 --> 00:31:09,440
yourself

00:31:05,919 --> 00:31:12,159
uh if you you know want to but

00:31:09,440 --> 00:31:13,039
this comes for free uh using our apm

00:31:12,159 --> 00:31:15,679
product

00:31:13,039 --> 00:31:17,360
so kenneth i hope that uh i hope that

00:31:15,679 --> 00:31:20,080
answered your question

00:31:17,360 --> 00:31:23,120
if uh if not feel free to drop some

00:31:20,080 --> 00:31:26,880
follow-up in the qaa session

00:31:23,120 --> 00:31:30,480
uh from aditya pandey uh does slr

00:31:26,880 --> 00:31:32,799
sli slo and sla get affected by covid

00:31:30,480 --> 00:31:34,880
or any global situation in terms of

00:31:32,799 --> 00:31:38,159
performance finance and other aspects

00:31:34,880 --> 00:31:39,679
i'm not sure if i answer your question

00:31:38,159 --> 00:31:43,840
about or understand

00:31:39,679 --> 00:31:43,840
what you're asking but i will try to

00:31:45,039 --> 00:31:48,960
i would say that your performance

00:31:46,799 --> 00:31:52,000
targets don't necessarily change

00:31:48,960 --> 00:31:55,679
in terms of you know the world situation

00:31:52,000 --> 00:31:55,679
or um

00:31:55,760 --> 00:31:58,880
anything going on in the world that

00:31:57,039 --> 00:32:01,440
happens meta to your technology

00:31:58,880 --> 00:32:02,799
i would say that you would still still

00:32:01,440 --> 00:32:06,320
strive for the same

00:32:02,799 --> 00:32:07,200
availability targets but depending on

00:32:06,320 --> 00:32:11,279
your service

00:32:07,200 --> 00:32:13,200
you may not have as much you may have

00:32:11,279 --> 00:32:15,360
less or more traffic depending on the

00:32:13,200 --> 00:32:17,919
types of services

00:32:15,360 --> 00:32:19,679
for instance if you hit your zoom and

00:32:17,919 --> 00:32:22,320
zoom was hot on the lips of everybody

00:32:19,679 --> 00:32:25,440
when the pandemic started

00:32:22,320 --> 00:32:29,120
you probably you may have increased your

00:32:25,440 --> 00:32:30,000
various uh various availability targets

00:32:29,120 --> 00:32:33,039
because you

00:32:30,000 --> 00:32:36,320
became so because they became so key

00:32:33,039 --> 00:32:38,159
to uh to life in the pandemic whereas on

00:32:36,320 --> 00:32:41,440
the other hand uh if you're running

00:32:38,159 --> 00:32:44,640
hotels or say the disney parks

00:32:41,440 --> 00:32:44,640
something along those lines

00:32:45,360 --> 00:32:51,120
well when when foot traffic dropped

00:32:48,559 --> 00:32:51,120
way off

00:32:52,640 --> 00:32:57,120
on the one hand it was less of an impact

00:32:54,960 --> 00:32:58,960
if somebody or

00:32:57,120 --> 00:33:00,720
you didn't have as many customers coming

00:32:58,960 --> 00:33:03,279
in but the individual experience

00:33:00,720 --> 00:33:05,440
mattered more

00:33:03,279 --> 00:33:07,360
so if there was a small number of

00:33:05,440 --> 00:33:09,440
failures in the quantitative state

00:33:07,360 --> 00:33:10,640
as a percentile they became much more

00:33:09,440 --> 00:33:13,200
impactful

00:33:10,640 --> 00:33:13,760
um did you i hope i answered your

00:33:13,200 --> 00:33:16,799
question

00:33:13,760 --> 00:33:18,240
um if you have again if i

00:33:16,799 --> 00:33:20,080
wasn't helpful or if it didn't make

00:33:18,240 --> 00:33:21,600
sense please feel free to

00:33:20,080 --> 00:33:25,840
add some context around that and i'll be

00:33:21,600 --> 00:33:25,840
happy to to give it another shot

00:33:26,320 --> 00:33:31,679
from adam escamilla thank you further

00:33:30,559 --> 00:33:33,120
he says thank you for the nice

00:33:31,679 --> 00:33:34,399
constructive talk thank you for the

00:33:33,120 --> 00:33:36,480
feedback i

00:33:34,399 --> 00:33:38,399
i hope that it was helpful for you and

00:33:36,480 --> 00:33:40,640
you can have useful discussions moving

00:33:38,399 --> 00:33:40,640
on

00:33:41,679 --> 00:33:47,039
uh it seems a fear how to estimate error

00:33:45,600 --> 00:33:49,840
budgets how to get started

00:33:47,039 --> 00:33:51,200
so uh you know another version of this

00:33:49,840 --> 00:33:53,600
slide deck

00:33:51,200 --> 00:33:54,960
has the formula for this and i apologize

00:33:53,600 --> 00:33:58,480
for not having it in here

00:33:54,960 --> 00:34:02,320
so uh the the sim your error budget

00:33:58,480 --> 00:34:05,039
is a very simple um ratio

00:34:02,320 --> 00:34:05,679
or a very simple formula your error

00:34:05,039 --> 00:34:09,200
budget

00:34:05,679 --> 00:34:12,800
is the total number of valid events

00:34:09,200 --> 00:34:16,079
or good events over the total number of

00:34:12,800 --> 00:34:17,280
uh val sorry the number of good events

00:34:16,079 --> 00:34:19,520
over the number of

00:34:17,280 --> 00:34:21,040
possible events or completed

00:34:19,520 --> 00:34:24,399
successfully events

00:34:21,040 --> 00:34:25,200
um over your time period so an slo could

00:34:24,399 --> 00:34:28,240
be defined

00:34:25,200 --> 00:34:31,679
like per an uh it's a metric

00:34:28,240 --> 00:34:34,960
or a ratio over a time period so

00:34:31,679 --> 00:34:38,399
if your time period is we want 99

00:34:34,960 --> 00:34:42,079
percent of successful requests

00:34:38,399 --> 00:34:45,280
within 24 hours or within a week

00:34:42,079 --> 00:34:47,359
or a month um that's a that's a rolling

00:34:45,280 --> 00:34:49,200
number

00:34:47,359 --> 00:34:50,960
you know we don't burn up all our all

00:34:49,200 --> 00:34:53,280
our data for

00:34:50,960 --> 00:34:54,000
november we burn up our data for the

00:34:53,280 --> 00:34:57,200
last

00:34:54,000 --> 00:35:01,119
month the last rolling time period so

00:34:57,200 --> 00:35:02,480
that's uh if i didn't explain that well

00:35:01,119 --> 00:35:05,680
i'd be happy to

00:35:02,480 --> 00:35:06,160
uh to look around for the uh where i

00:35:05,680 --> 00:35:09,839
have that

00:35:06,160 --> 00:35:11,440
formula more properly formulated but uh

00:35:09,839 --> 00:35:12,880
let me know if this answer didn't work

00:35:11,440 --> 00:35:16,000
for you

00:35:12,880 --> 00:35:19,839
let's see from

00:35:16,000 --> 00:35:20,720
dave sorry david donham do you use a rmm

00:35:19,839 --> 00:35:24,079
like datto

00:35:20,720 --> 00:35:27,440
to do the sli metrics i do not know what

00:35:24,079 --> 00:35:30,480
rmm or datto are um

00:35:27,440 --> 00:35:31,520
but you can use any metrics provider um

00:35:30,480 --> 00:35:33,599
of course i'm going to talk about

00:35:31,520 --> 00:35:36,400
datadog because

00:35:33,599 --> 00:35:36,400
we're a datadog

00:35:36,880 --> 00:35:41,200
but it's any you can use any metric as

00:35:39,440 --> 00:35:44,560
long as it makes sense as long as it

00:35:41,200 --> 00:35:46,480
relates to the customer experience

00:35:44,560 --> 00:35:47,839
and again you want to avoid things like

00:35:46,480 --> 00:35:50,400
system level metrics no

00:35:47,839 --> 00:35:52,640
no customer cares about how many you

00:35:50,400 --> 00:35:55,040
know what how hot your cpu is running

00:35:52,640 --> 00:35:56,720
or how many instances you're running

00:35:55,040 --> 00:35:58,000
they just care about their request that

00:35:56,720 --> 00:36:01,920
their requests get taken care

00:35:58,000 --> 00:36:05,920
of hope that helps

00:36:01,920 --> 00:36:13,359
and if we can also take this

00:36:05,920 --> 00:36:17,920
discussion offline i suppose all right

00:36:13,359 --> 00:36:17,920
now rakesh gives us our um

00:36:18,240 --> 00:36:21,280
it gives our question how to write good

00:36:19,839 --> 00:36:23,440
slos for sas

00:36:21,280 --> 00:36:24,400
or past solution any white paper or

00:36:23,440 --> 00:36:27,520
links um

00:36:24,400 --> 00:36:30,000
so a good resource to start

00:36:27,520 --> 00:36:30,720
now i'm assuming that you you're talking

00:36:30,000 --> 00:36:36,000
about

00:36:30,720 --> 00:36:39,119
right you are running a sas or paz and

00:36:36,000 --> 00:36:42,320
your customers are external um

00:36:39,119 --> 00:36:43,920
now your slos are typically going to be

00:36:42,320 --> 00:36:45,359
internal those are for your product

00:36:43,920 --> 00:36:48,640
teams who are

00:36:45,359 --> 00:36:51,760
providing services that solve problems

00:36:48,640 --> 00:36:53,280
and ultimately those solutions are in

00:36:51,760 --> 00:36:54,400
service of the company that you're

00:36:53,280 --> 00:36:57,280
running

00:36:54,400 --> 00:36:59,920
um so that actually gets more into sla

00:36:57,280 --> 00:36:59,920
territory

00:37:00,160 --> 00:37:03,680
but the uh let's see as far as white

00:37:02,800 --> 00:37:05,200
papers or links

00:37:03,680 --> 00:37:08,480
we have a bunch of articles on the

00:37:05,200 --> 00:37:10,400
datadog blog i would also encourage you

00:37:08,480 --> 00:37:11,920
and this is again in service of slos

00:37:10,400 --> 00:37:15,040
mainly

00:37:11,920 --> 00:37:18,079
when you writing slos

00:37:15,040 --> 00:37:18,880
writing slas based on slos your slas

00:37:18,079 --> 00:37:22,480
should be much

00:37:18,880 --> 00:37:24,160
more your slos should be more stringent

00:37:22,480 --> 00:37:26,160
than your slas

00:37:24,160 --> 00:37:27,520
and for instance if you were to look at

00:37:26,160 --> 00:37:29,680
your

00:37:27,520 --> 00:37:30,800
internet provider or if you're looking

00:37:29,680 --> 00:37:34,240
at

00:37:30,800 --> 00:37:35,440
a cloud provider's uh slas

00:37:34,240 --> 00:37:37,920
what they promised for your their

00:37:35,440 --> 00:37:38,720
service it's usually a very achievable

00:37:37,920 --> 00:37:42,160
target and

00:37:38,720 --> 00:37:43,760
it's often defined in such a way

00:37:42,160 --> 00:37:46,240
that they don't suffer a financial

00:37:43,760 --> 00:37:48,560
penalty even things go horribly wrong

00:37:46,240 --> 00:37:48,560
it's

00:37:49,359 --> 00:37:52,800
another thing i didn't cover much in

00:37:51,440 --> 00:37:55,760
here is that escalates

00:37:52,800 --> 00:37:55,760
slas are usually

00:37:56,079 --> 00:37:59,760
it's the realm of lawyers and company

00:37:58,400 --> 00:38:03,520
executives

00:37:59,760 --> 00:38:05,839
whereas in slos are much more

00:38:03,520 --> 00:38:08,160
much more the realm of engineering and

00:38:05,839 --> 00:38:10,960
product management kind of things

00:38:08,160 --> 00:38:12,480
so the i would also encourage people to

00:38:10,960 --> 00:38:13,280
uh take a look at the relevant chapter

00:38:12,480 --> 00:38:16,240
in the

00:38:13,280 --> 00:38:17,440
um in google's sre book that came out in

00:38:16,240 --> 00:38:19,839
2016.

00:38:17,440 --> 00:38:19,839
it didn't

00:38:21,359 --> 00:38:26,160
it covers that material very well and

00:38:23,520 --> 00:38:26,160
also um

00:38:26,480 --> 00:38:33,040
oh way to go oh uh jennifer pettoff

00:38:30,160 --> 00:38:34,480
who works at google has also given

00:38:33,040 --> 00:38:38,000
excellent talks on

00:38:34,480 --> 00:38:41,040
uh the implementation and daily usage of

00:38:38,000 --> 00:38:41,440
slos in a day-to-day real-world context

00:38:41,040 --> 00:38:47,839
as well

00:38:41,440 --> 00:38:47,839
so i hope that helped

00:38:47,920 --> 00:38:52,480
kenneth again thank you uh i'm glad the

00:38:51,040 --> 00:38:56,800
service map helped i'm glad i

00:38:52,480 --> 00:38:59,839
thought about it uh on time let's see

00:38:56,800 --> 00:39:02,079
kenneth awesome great glad i could help

00:38:59,839 --> 00:39:02,079
um

00:39:04,880 --> 00:39:07,440
gavin

00:39:08,480 --> 00:39:13,760
excuse me my tongue is not going to do

00:39:10,079 --> 00:39:13,760
that well polyancho

00:39:13,839 --> 00:39:19,760
um again apologies um

00:39:17,760 --> 00:39:21,680
is there some guidelines to define

00:39:19,760 --> 00:39:22,960
reasonable alert thresholds to avoid

00:39:21,680 --> 00:39:26,160
false positives

00:39:22,960 --> 00:39:26,160
on reaching slos

00:39:26,400 --> 00:39:32,560
now your we do have slo monitoring

00:39:29,920 --> 00:39:34,160
within uh the datadog product you

00:39:32,560 --> 00:39:38,320
typically want to

00:39:34,160 --> 00:39:41,200
it's a good idea to have to send alerts

00:39:38,320 --> 00:39:42,720
when you're about to breach an slo but

00:39:41,200 --> 00:39:45,119
you should already be aware of

00:39:42,720 --> 00:39:46,640
the problem that you should already have

00:39:45,119 --> 00:39:47,119
a notification that there is a problem

00:39:46,640 --> 00:39:48,960
with

00:39:47,119 --> 00:39:50,800
with the service that you're get that

00:39:48,960 --> 00:39:53,440
you're running beforehand

00:39:50,800 --> 00:39:55,359
um and this would from my question yes

00:39:53,440 --> 00:39:57,440
it is a good idea to

00:39:55,359 --> 00:39:58,480
have a monitor at a slightly more

00:39:57,440 --> 00:40:00,800
stringent level

00:39:58,480 --> 00:40:01,599
than the slo you're doing when it looks

00:40:00,800 --> 00:40:04,240
like you may be

00:40:01,599 --> 00:40:06,240
about to breach it so i do think that

00:40:04,240 --> 00:40:08,839
that's

00:40:06,240 --> 00:40:10,319
i can't give you hard deadlines or hard

00:40:08,839 --> 00:40:11,680
guidelines

00:40:10,319 --> 00:40:13,440
and it's also something that you can

00:40:11,680 --> 00:40:16,480
tweak over time very easily

00:40:13,440 --> 00:40:18,880
is when you're approaching an slo limit

00:40:16,480 --> 00:40:20,960
so i hope that helps you evan and i

00:40:18,880 --> 00:40:25,119
can't apologize for

00:40:20,960 --> 00:40:28,160
my bad pronunciation

00:40:25,119 --> 00:40:32,079
let's see so

00:40:28,160 --> 00:40:34,400
next is from rasi karayuki how do

00:40:32,079 --> 00:40:35,440
how does one combine slo slis from

00:40:34,400 --> 00:40:37,359
automated tests

00:40:35,440 --> 00:40:40,000
like uptime measurement using synthetics

00:40:37,359 --> 00:40:42,000
and service specific measurements

00:40:40,000 --> 00:40:44,079
like successful transactions response

00:40:42,000 --> 00:40:47,839
times percentiles

00:40:44,079 --> 00:40:47,839
measured from actual traffic

00:40:49,440 --> 00:40:53,839
okay so

00:40:54,800 --> 00:40:57,520
okay um

00:40:58,560 --> 00:41:02,800
as far as that goes like actually all

00:41:01,280 --> 00:41:04,839
the things that the

00:41:02,800 --> 00:41:07,839
things that you mention are valuable

00:41:04,839 --> 00:41:07,839
sli's

00:41:08,319 --> 00:41:13,520
and i hesitate to recommend

00:41:14,000 --> 00:41:17,040
let's say you can have multiple slis

00:41:16,160 --> 00:41:21,839
feed into an

00:41:17,040 --> 00:41:21,839
slo but it also

00:41:22,000 --> 00:41:25,359
in terms of starting small i wouldn't

00:41:23,839 --> 00:41:29,040
start with a multi-metric

00:41:25,359 --> 00:41:29,520
slo to begin with um start small start

00:41:29,040 --> 00:41:32,560
simple

00:41:29,520 --> 00:41:33,040
you can have multiple slos for your

00:41:32,560 --> 00:41:35,040
service

00:41:33,040 --> 00:41:36,640
especially in as you're starting out

00:41:35,040 --> 00:41:39,040
especially for

00:41:36,640 --> 00:41:40,400
you know maybe the first six months um

00:41:39,040 --> 00:41:42,640
maybe the first year

00:41:40,400 --> 00:41:44,079
uh you can have multiple slos and judge

00:41:42,640 --> 00:41:48,319
on on various

00:41:44,079 --> 00:41:50,240
um various axes and as you refine your

00:41:48,319 --> 00:41:52,079
numbers and as you refine

00:41:50,240 --> 00:41:54,480
your services and and your workflow

00:41:52,079 --> 00:41:58,079
through it then i would consider

00:41:54,480 --> 00:42:01,440
maybe after a couple quarters to combine

00:41:58,079 --> 00:42:03,119
multiple measurements into into an slo

00:42:01,440 --> 00:42:04,960
i definitely wouldn't start off there

00:42:03,119 --> 00:42:07,280
though i hope that

00:42:04,960 --> 00:42:09,920
i hope that answered your question rossi

00:42:07,280 --> 00:42:12,720
if not feel free to

00:42:09,920 --> 00:42:12,720
post a follow-up

00:42:15,119 --> 00:42:21,200
now patricia funnel asks

00:42:18,319 --> 00:42:22,960
could you explain durability a bit more

00:42:21,200 --> 00:42:25,520
what type of conditions would affect

00:42:22,960 --> 00:42:27,280
durability and what's an example of an

00:42:25,520 --> 00:42:30,960
error budget for durability

00:42:27,280 --> 00:42:33,520
uh durability in terms of data i

00:42:30,960 --> 00:42:33,520
i assume

00:42:34,240 --> 00:42:37,760
this is that's a that's an excellent

00:42:36,480 --> 00:42:42,079
question that doesn't come up

00:42:37,760 --> 00:42:45,359
very often the simple matter is

00:42:42,079 --> 00:42:48,720
if the data is bad live

00:42:45,359 --> 00:42:54,240
how can i get it back to correct

00:42:48,720 --> 00:42:54,240
um and that's

00:42:56,800 --> 00:43:00,400
that's an interesting question that like

00:42:58,560 --> 00:43:04,480
i said doesn't come up very often

00:43:00,400 --> 00:43:06,480
but if you have a data storage problem

00:43:04,480 --> 00:43:07,839
i would and that's largely what this

00:43:06,480 --> 00:43:11,280
comes around to

00:43:07,839 --> 00:43:13,680
is is data storage and availability

00:43:11,280 --> 00:43:15,599
and correctness and if things should go

00:43:13,680 --> 00:43:17,839
wrong

00:43:15,599 --> 00:43:19,839
how do you recover and how long does

00:43:17,839 --> 00:43:22,000
what what is the latency between

00:43:19,839 --> 00:43:25,119
identifying a problem

00:43:22,000 --> 00:43:28,160
and being able to correct it and

00:43:25,119 --> 00:43:29,680
in that view i think it's it's going to

00:43:28,160 --> 00:43:34,400
be very much a case-by-case

00:43:29,680 --> 00:43:39,200
basis what your action is or what your

00:43:34,400 --> 00:43:41,200
um what your your objectives look like

00:43:39,200 --> 00:43:42,960
and unfortunately i think that's i hate

00:43:41,200 --> 00:43:44,079
to say it depends but i think this is a

00:43:42,960 --> 00:43:46,800
very strong case for

00:43:44,079 --> 00:43:47,680
it depends on like what kind of storage

00:43:46,800 --> 00:43:49,839
you're using

00:43:47,680 --> 00:43:52,319
what the mechanisms are available are

00:43:49,839 --> 00:43:55,359
and i think there's so much to that that

00:43:52,319 --> 00:43:56,960
that could be its own talk that you

00:43:55,359 --> 00:43:58,960
should give about

00:43:56,960 --> 00:44:00,079
your environments and and your lived

00:43:58,960 --> 00:44:03,440
experience

00:44:00,079 --> 00:44:05,599
um in trying to solve what

00:44:03,440 --> 00:44:09,839
what data is storage durability looks

00:44:05,599 --> 00:44:11,920
like and what kind of slos

00:44:09,839 --> 00:44:13,200
you looked at experimented with and

00:44:11,920 --> 00:44:16,960
solutions to

00:44:13,200 --> 00:44:16,960
to deal with that a bit more um

00:44:17,760 --> 00:44:21,680
i wish i had a more satisfying answer

00:44:19,920 --> 00:44:22,720
but i would love to see you give this

00:44:21,680 --> 00:44:26,000
talk

00:44:22,720 --> 00:44:27,920
um all right with that

00:44:26,000 --> 00:44:29,920
let's see we have a few more minutes if

00:44:27,920 --> 00:44:32,720
people have questions

00:44:29,920 --> 00:44:34,800
or follow-ups to to questions earlier

00:44:32,720 --> 00:44:36,560
questions i'd be happy to take them now

00:44:34,800 --> 00:44:38,560
but uh if we go a couple minutes without

00:44:36,560 --> 00:44:40,640
any uh

00:44:38,560 --> 00:44:42,079
without anything uh thank you all very

00:44:40,640 --> 00:44:44,880
much for attending and i hope you got

00:44:42,079 --> 00:44:44,880
something out of this

00:44:44,960 --> 00:44:48,000
yes thank you so much waldo that was

00:44:47,359 --> 00:44:49,599
great

00:44:48,000 --> 00:44:52,000
really appreciate you going through all

00:44:49,599 --> 00:44:55,200
those questions oh thank you

00:44:52,000 --> 00:44:57,359
thanks everyone for joining us and um

00:44:55,200 --> 00:45:04,720
hope you all have a great day

00:44:57,359 --> 00:45:04,720

YouTube URL: https://www.youtube.com/watch?v=PTsowzupWdA


