Title: Bring SCSI Support Into QEMU Block Layer - Yaowei Bai, Chinamobile
Publication date: 2020-11-10
Playlist: KVM Forum Europe 2020
Description: 
	Bring SCSI Support Into QEMU Block Layer - Yaowei Bai, Chinamobile
Captions: 
	00:00:05,440 --> 00:00:09,599
hello everyone

00:00:06,480 --> 00:00:10,480
my name is your weibach my work of many

00:00:09,599 --> 00:00:13,280
focuses

00:00:10,480 --> 00:00:15,679
on virtualization distribute their

00:00:13,280 --> 00:00:18,880
storage

00:00:15,679 --> 00:00:23,520
and links kernel my doctor is

00:00:18,880 --> 00:00:23,520
brings gas export into cumulative

00:00:25,519 --> 00:00:33,040
okay this topic consists of

00:00:30,000 --> 00:00:36,399
this cell several

00:00:33,040 --> 00:00:40,079
parts first i'll introduce

00:00:36,399 --> 00:00:44,640
some background and then the solution to

00:00:40,079 --> 00:00:48,160
the problems and how to

00:00:44,640 --> 00:00:51,760
implement the solution finally

00:00:48,160 --> 00:00:55,680
we will see the states of our current

00:00:51,760 --> 00:00:55,680
work and the future plan

00:00:57,039 --> 00:01:02,079
okay let's see the background

00:01:03,120 --> 00:01:11,920
um some closeting services like ocfs

00:01:08,439 --> 00:01:15,439
mscs they share discus

00:01:11,920 --> 00:01:18,880
with concurrency control mechanism

00:01:15,439 --> 00:01:21,360
mechanisms the

00:01:18,880 --> 00:01:21,920
concurrency control mechanisms are

00:01:21,360 --> 00:01:24,960
usually

00:01:21,920 --> 00:01:29,200
implemented via clear

00:01:24,960 --> 00:01:29,200
protocols like iscsi

00:01:30,720 --> 00:01:34,880
and the shared disks are supplied by

00:01:33,759 --> 00:01:41,840
distributed

00:01:34,880 --> 00:01:41,840
broker storage like seth

00:01:42,720 --> 00:01:50,360
here is the architecture we can see that

00:01:45,840 --> 00:01:54,079
the cloud service is located located

00:01:50,360 --> 00:01:57,759
jenkins guests

00:01:54,079 --> 00:02:00,560
and then access the self

00:01:57,759 --> 00:02:02,479
care cell clusters through iscsi

00:02:00,560 --> 00:02:05,920
protocol

00:02:02,479 --> 00:02:08,160
we can see that there there are iscsi

00:02:05,920 --> 00:02:11,360
initiator and

00:02:08,160 --> 00:02:12,000
first classy targeting tv in the middle

00:02:11,360 --> 00:02:14,720
of the

00:02:12,000 --> 00:02:14,720
hour path

00:02:17,520 --> 00:02:23,920
this architectural hair has some

00:02:20,879 --> 00:02:27,920
problems the first one is the

00:02:23,920 --> 00:02:31,200
lung output we can see that

00:02:27,920 --> 00:02:35,120
there are several

00:02:31,200 --> 00:02:38,800
components in the

00:02:35,120 --> 00:02:43,120
our path and these com

00:02:38,800 --> 00:02:43,120
components are in nature

00:02:44,080 --> 00:02:46,319
so

00:02:47,360 --> 00:02:52,319
it's it's hard to maintain

00:02:58,480 --> 00:03:05,840
okay let's see our

00:03:02,840 --> 00:03:05,840
solution

00:03:12,000 --> 00:03:18,879
we know that scheme you can access

00:03:15,440 --> 00:03:20,000
save cluster directly so the solution is

00:03:18,879 --> 00:03:24,400
simple

00:03:20,000 --> 00:03:24,400
we just drop the iscsi part and

00:03:25,360 --> 00:03:33,200
and turn the architecture into

00:03:30,000 --> 00:03:36,560
that in the red picture

00:03:33,200 --> 00:03:41,680
that is red letter q mu

00:03:36,560 --> 00:03:41,680
access clause save cluster

00:03:44,840 --> 00:03:49,120
directly

00:03:46,159 --> 00:03:49,680
there are there are some works to do the

00:03:49,120 --> 00:03:53,840
first one

00:03:49,680 --> 00:03:56,150
is the scarcity supporting himself

00:03:53,840 --> 00:03:57,439
this work has been done

00:03:56,150 --> 00:04:01,840
[Music]

00:03:57,439 --> 00:04:01,840
it consists of

00:04:02,000 --> 00:04:09,439
compared on the right and persisting the

00:04:05,920 --> 00:04:11,840
reservation support

00:04:09,439 --> 00:04:13,120
compare and the right part has been

00:04:11,840 --> 00:04:16,560
upstreamed

00:04:13,120 --> 00:04:19,680
where the pr part is

00:04:16,560 --> 00:04:19,680
still private

00:04:20,000 --> 00:04:26,400
the the next one is sarcastic sport

00:04:23,120 --> 00:04:29,919
in kimu this father is still

00:04:26,400 --> 00:04:32,560
mister so our work is to implement

00:04:29,919 --> 00:04:32,560
in keyboard

00:04:34,400 --> 00:04:39,360
let's see how to implement

00:04:36,400 --> 00:04:39,360
implementation

00:04:41,440 --> 00:04:44,240
this worker

00:04:45,919 --> 00:04:50,400
consists of four parts

00:04:50,479 --> 00:04:56,560
there are devices through scarcity

00:04:53,040 --> 00:04:57,680
device emulation uh block layer

00:04:56,560 --> 00:05:01,039
interface

00:04:57,680 --> 00:05:04,479
block our password interface and the

00:05:01,039 --> 00:05:10,880
local driver interface

00:05:04,479 --> 00:05:13,759
we all will see them one by one

00:05:10,880 --> 00:05:16,400
okay the first one is the scarcity

00:05:13,759 --> 00:05:20,400
devices emulation

00:05:16,400 --> 00:05:24,320
recorder locally locates on locating

00:05:20,400 --> 00:05:28,160
disk and the work is

00:05:24,320 --> 00:05:31,440
just added at the two emulation api

00:05:28,160 --> 00:05:35,280
the compare and the right and persistent

00:05:31,440 --> 00:05:39,840
reservation this part

00:05:35,280 --> 00:05:39,840
is quite simple

00:05:45,840 --> 00:05:50,479
the next one is block layer interface

00:05:48,800 --> 00:05:54,400
recorder is

00:05:50,479 --> 00:05:58,479
in the block block backend

00:05:54,400 --> 00:06:02,000
this part of me we reuse block eiop

00:05:58,479 --> 00:06:05,120
right way for compare and write

00:06:02,000 --> 00:06:08,160
and add the new

00:06:05,120 --> 00:06:12,880
block opposition reserve in our

00:06:08,160 --> 00:06:12,880
check for the pr part

00:06:19,680 --> 00:06:24,960
the third one is block our pass

00:06:22,400 --> 00:06:28,160
interface

00:06:24,960 --> 00:06:29,039
this one is quite quite same quite

00:06:28,160 --> 00:06:32,880
similar to

00:06:29,039 --> 00:06:32,880
the upper one

00:06:32,960 --> 00:06:39,759
we reuse block driver p right v

00:06:36,639 --> 00:06:41,039
for compare and write and add new block

00:06:39,759 --> 00:06:44,880
driver persistent

00:06:41,039 --> 00:06:49,039
reserving auto tracker three

00:06:44,880 --> 00:06:52,880
api for pr

00:06:49,039 --> 00:06:55,680
and it's called locating

00:06:52,880 --> 00:06:55,680
iodine c

00:07:00,479 --> 00:07:05,199
the last one is block driver interface

00:07:05,919 --> 00:07:11,120
we add four new api

00:07:11,919 --> 00:07:15,440
a block driver io compare on the right

00:07:14,319 --> 00:07:18,880
for compare and

00:07:15,440 --> 00:07:23,360
write and block driver to

00:07:18,880 --> 00:07:25,680
persistent reserve in our type 4

00:07:23,360 --> 00:07:25,680
pr

00:07:27,919 --> 00:07:33,440
and it's called in block

00:07:30,960 --> 00:07:33,440
rbd

00:07:36,720 --> 00:07:45,840
okay let's see the start

00:07:40,639 --> 00:07:45,840
this says how this works

00:07:46,000 --> 00:07:49,759
currently it's online in our cloud

00:07:48,960 --> 00:07:55,599
services

00:07:49,759 --> 00:07:55,599
and it it has it is functioning

00:07:56,840 --> 00:07:59,840
normally

00:08:01,280 --> 00:08:04,960
the patch setter also compare and the

00:08:03,680 --> 00:08:08,400
right part

00:08:04,960 --> 00:08:13,840
has been sent out you can you can find

00:08:08,400 --> 00:08:13,840
it through this link

00:08:21,039 --> 00:08:27,840
let's see the future plan

00:08:24,639 --> 00:08:27,840
of this work

00:08:30,080 --> 00:08:37,440
the work is upstream i is upstreaming

00:08:34,240 --> 00:08:40,880
in the safer community

00:08:37,440 --> 00:08:44,159
we will upstream the persistent

00:08:40,880 --> 00:08:47,279
reservation support into

00:08:44,159 --> 00:08:50,640
safe community

00:08:47,279 --> 00:08:54,320
and in kimu community we will

00:08:50,640 --> 00:08:58,000
upstream red theme

00:08:54,320 --> 00:08:58,000
a supporter

00:08:58,480 --> 00:09:06,320
ratsim has been supporting the team

00:09:01,680 --> 00:09:06,320
staff of self-self community

00:09:06,839 --> 00:09:14,959
and the persistent

00:09:09,959 --> 00:09:14,959
revelation support into

00:09:20,839 --> 00:09:34,880
kimu

00:09:22,240 --> 00:09:34,880

YouTube URL: https://www.youtube.com/watch?v=aVhWjQ58OKs


