Title: Libvirt Status Report - Daniel Berrangé, Red Hat
Publication date: 2020-11-10
Playlist: KVM Forum Europe 2020
Description: 
	Libvirt Status Report - Daniel Berrangé, Red Hat
Captions: 
	00:00:09,120 --> 00:00:11,360
hi

00:00:09,519 --> 00:00:13,360
my name is daniel berenje and i'm here

00:00:11,360 --> 00:00:17,920
to give you a status report on the

00:00:13,360 --> 00:00:20,320
libvert project covering the past year

00:00:17,920 --> 00:00:21,039
since the start of this calendar year

00:00:20,320 --> 00:00:23,840
we've

00:00:21,039 --> 00:00:25,840
released nine nine versions of the

00:00:23,840 --> 00:00:28,160
libert project and we're on course to do

00:00:25,840 --> 00:00:29,519
our usual 11 releases by the end of the

00:00:28,160 --> 00:00:31,679
year

00:00:29,519 --> 00:00:32,880
we have a regular monthly release

00:00:31,679 --> 00:00:36,079
schedule

00:00:32,880 --> 00:00:40,000
except for the start of the year when we

00:00:36,079 --> 00:00:40,000
have two releases six weeks apart

00:00:40,719 --> 00:00:44,960
we've had 144 contributors to the

00:00:44,320 --> 00:00:48,079
releases

00:00:44,960 --> 00:00:51,039
this year and of those 144

00:00:48,079 --> 00:00:52,640
87 of them have been new contributors to

00:00:51,039 --> 00:00:56,160
the project who haven't submitted any

00:00:52,640 --> 00:00:56,160
code before this calendar year

00:00:56,399 --> 00:01:02,320
the releases comprise 4100 commits

00:01:00,320 --> 00:01:03,359
and we estimate that by the end of this

00:01:02,320 --> 00:01:05,600
year

00:01:03,359 --> 00:01:07,080
um if the current rate continues we'll

00:01:05,600 --> 00:01:10,000
have up to

00:01:07,080 --> 00:01:13,520
5200.

00:01:10,000 --> 00:01:17,280
about 450 of those commits were sent by

00:01:13,520 --> 00:01:17,280
brand new contributors to the project

00:01:17,680 --> 00:01:22,320
those stats may sound great but

00:01:20,960 --> 00:01:25,119
it's useful to look at them in

00:01:22,320 --> 00:01:26,640
historical context to see whether there

00:01:25,119 --> 00:01:28,960
were getting better or worse than the

00:01:26,640 --> 00:01:30,640
previous years

00:01:28,960 --> 00:01:32,479
so if we take this graph of control

00:01:30,640 --> 00:01:35,840
contributions to the live project

00:01:32,479 --> 00:01:37,920
since it started in 2005

00:01:35,840 --> 00:01:41,360
we can see a good healthy growth in the

00:01:37,920 --> 00:01:44,479
project for the first five or six years

00:01:41,360 --> 00:01:45,439
and then it's kind of leveled out a bit

00:01:44,479 --> 00:01:47,360
at between

00:01:45,439 --> 00:01:50,000
four thousand and five thousand commits

00:01:47,360 --> 00:01:50,000
per year

00:01:50,560 --> 00:01:54,320
we can see that the vast majority of the

00:01:52,399 --> 00:01:56,320
commits are from

00:01:54,320 --> 00:01:59,360
so-called old authors these are people

00:01:56,320 --> 00:02:02,320
who've been contributing to libvert for

00:01:59,360 --> 00:02:04,880
more than one year and then we have a

00:02:02,320 --> 00:02:07,920
fairly consistent number of commits from

00:02:04,880 --> 00:02:10,239
new authors which are people who have

00:02:07,920 --> 00:02:13,039
been contributing for

00:02:10,239 --> 00:02:13,039
less than one year

00:02:14,640 --> 00:02:17,920
if we now look at the breakdown of the

00:02:16,319 --> 00:02:18,800
authors instead of the breakdown of

00:02:17,920 --> 00:02:21,599
commits

00:02:18,800 --> 00:02:22,080
we can see there's a generally a fairly

00:02:21,599 --> 00:02:25,680
even

00:02:22,080 --> 00:02:29,120
split between the long-term contributors

00:02:25,680 --> 00:02:29,120
and the new contributors

00:02:29,760 --> 00:02:35,599
last year um looking at this graph for

00:02:32,800 --> 00:02:36,800
2019 we saw a dip in the new

00:02:35,599 --> 00:02:41,599
contributors

00:02:36,800 --> 00:02:45,519
for the for their um four years between

00:02:41,599 --> 00:02:48,560
2015 and 2019

00:02:45,519 --> 00:02:50,160
it's uh good to see that this year the

00:02:48,560 --> 00:02:52,560
number of new contributors has

00:02:50,160 --> 00:02:54,560
picked up dramatically and we'll talk a

00:02:52,560 --> 00:02:57,680
little bit about why that might be

00:02:54,560 --> 00:02:57,680
later in the presentation

00:02:58,080 --> 00:03:02,000
now the lib project comprises multiple

00:03:00,239 --> 00:03:04,879
git repositories

00:03:02,000 --> 00:03:06,319
and it might be interesting to see what

00:03:04,879 --> 00:03:07,840
the breakdown is for the different git

00:03:06,319 --> 00:03:10,319
repositories

00:03:07,840 --> 00:03:11,200
so first we'll look at just the core

00:03:10,319 --> 00:03:14,000
libvert

00:03:11,200 --> 00:03:15,599
library this is um the main c library

00:03:14,000 --> 00:03:17,360
and the libra daemon

00:03:15,599 --> 00:03:19,200
which is where the bulk of the project

00:03:17,360 --> 00:03:20,560
code lives

00:03:19,200 --> 00:03:22,959
and we can see there's not much

00:03:20,560 --> 00:03:26,799
difference in the split

00:03:22,959 --> 00:03:26,799
between new and old contributors

00:03:27,440 --> 00:03:30,879
versus the previous slide it's still a

00:03:30,239 --> 00:03:32,640
fairly

00:03:30,879 --> 00:03:34,560
fairly even split and we can see there's

00:03:32,640 --> 00:03:36,159
a marked increase in the number of new

00:03:34,560 --> 00:03:38,640
contributors this year which is

00:03:36,159 --> 00:03:40,560
which is great to see after a few years

00:03:38,640 --> 00:03:45,519
of declining contributors

00:03:40,560 --> 00:03:47,920
kind of back up towards our peak

00:03:45,519 --> 00:03:51,040
then if we look at the other git

00:03:47,920 --> 00:03:56,000
repositories this is principally the

00:03:51,040 --> 00:03:57,760
language bindings to the main c library

00:03:56,000 --> 00:04:00,560
we can see this is there's a bit more

00:03:57,760 --> 00:04:03,120
variation from year to year

00:04:00,560 --> 00:04:04,480
but again we've got a growth in new

00:04:03,120 --> 00:04:07,519
contributors

00:04:04,480 --> 00:04:09,439
this year um we're not up

00:04:07,519 --> 00:04:11,599
at the level where we were a few years

00:04:09,439 --> 00:04:15,599
ago but this is this is to be expected

00:04:11,599 --> 00:04:17,680
because most of the language bindings

00:04:15,599 --> 00:04:18,959
are fairly mature once once they've got

00:04:17,680 --> 00:04:21,919
full api coverage

00:04:18,959 --> 00:04:23,680
then the activity tends to tail off so

00:04:21,919 --> 00:04:26,320
this is this is kind of to be expected

00:04:23,680 --> 00:04:28,080
to a large degree

00:04:26,320 --> 00:04:30,800
so what's happened in the product in the

00:04:28,080 --> 00:04:33,840
past year

00:04:30,800 --> 00:04:36,720
first of all we've adopted gitlab.com as

00:04:33,840 --> 00:04:38,560
the primary project infrastructure

00:04:36,720 --> 00:04:41,680
this means moving the git repositories

00:04:38,560 --> 00:04:44,080
off the libret.org server onto gitlab

00:04:41,680 --> 00:04:47,199
the issue trackers have moved off the

00:04:44,080 --> 00:04:50,720
red hat bugzilla onto gitlab

00:04:47,199 --> 00:04:51,280
the main website is now populated based

00:04:50,720 --> 00:04:54,400
on

00:04:51,280 --> 00:04:57,520
ci jobs running in gitlab

00:04:54,400 --> 00:05:00,240
and the uh the main ci for

00:04:57,520 --> 00:05:02,800
for testing the builds and unit tests of

00:05:00,240 --> 00:05:05,759
libvard has moved off the centos jenkins

00:05:02,800 --> 00:05:07,280
into gitlab so as you can see the vast

00:05:05,759 --> 00:05:09,199
majority of the project infrastructure

00:05:07,280 --> 00:05:12,560
is now using gitlab

00:05:09,199 --> 00:05:12,560
as its platform

00:05:13,199 --> 00:05:17,600
in in switching to kit lab we've also

00:05:15,520 --> 00:05:19,520
adopted a merge request workflow for a

00:05:17,600 --> 00:05:21,840
number of the repositories

00:05:19,520 --> 00:05:22,880
we rolled this out gradually and this

00:05:21,840 --> 00:05:24,880
now covers

00:05:22,880 --> 00:05:27,120
all of the repositories except for the

00:05:24,880 --> 00:05:29,199
main libert git repository

00:05:27,120 --> 00:05:30,800
so all of the language bindings in

00:05:29,199 --> 00:05:31,919
particular are using the merge request

00:05:30,800 --> 00:05:33,520
workflow

00:05:31,919 --> 00:05:35,440
and this replaces the traditional

00:05:33,520 --> 00:05:40,080
email-based workflow that we've

00:05:35,440 --> 00:05:43,520
used prior to this this year

00:05:40,080 --> 00:05:46,639
the main live dot gets repository will

00:05:43,520 --> 00:05:50,000
switch at a later date um hopefully in

00:05:46,639 --> 00:05:50,000
the not too distant future

00:05:51,199 --> 00:05:55,759
the translation platform that libvert

00:05:53,440 --> 00:05:58,240
uses has also changed

00:05:55,759 --> 00:05:58,960
the zanata project that lippert used to

00:05:58,240 --> 00:06:01,680
use was

00:05:58,960 --> 00:06:02,479
abandoned by its maintainers and so

00:06:01,680 --> 00:06:05,759
fedora

00:06:02,479 --> 00:06:07,600
adopted the web late translation system

00:06:05,759 --> 00:06:09,199
and since lippert outsources its

00:06:07,600 --> 00:06:11,600
translations to the fedora

00:06:09,199 --> 00:06:13,039
translation team uh we've adopted web

00:06:11,600 --> 00:06:14,720
late as well

00:06:13,039 --> 00:06:16,160
this has a nice property of integrating

00:06:14,720 --> 00:06:18,240
directly with gitlab

00:06:16,160 --> 00:06:20,800
so whenever new translations come in it

00:06:18,240 --> 00:06:23,360
opens merge requests on git lab

00:06:20,800 --> 00:06:25,680
and as a result we now get accurate

00:06:23,360 --> 00:06:28,800
author attribution in the commits for

00:06:25,680 --> 00:06:28,800
translations as well

00:06:29,680 --> 00:06:34,080
a big focus of the past year has been

00:06:31,440 --> 00:06:37,199
tackling technical debt

00:06:34,080 --> 00:06:39,520
one of the most notable things has been

00:06:37,199 --> 00:06:42,240
the conversion of the build system

00:06:39,520 --> 00:06:43,600
to mison this means we've eliminated the

00:06:42,240 --> 00:06:46,800
majority of shell

00:06:43,600 --> 00:06:49,280
m4 make auto conf and automate code from

00:06:46,800 --> 00:06:53,120
the project

00:06:49,280 --> 00:06:55,840
as well as being a nicer build system to

00:06:53,120 --> 00:06:56,400
read and write the mison build system

00:06:55,840 --> 00:06:58,319
has

00:06:56,400 --> 00:07:00,880
led to a dramatic speed up in the build

00:06:58,319 --> 00:07:03,759
time for libbert

00:07:00,880 --> 00:07:04,240
on my on one of my development servers

00:07:03,759 --> 00:07:06,720
the

00:07:04,240 --> 00:07:07,280
the old auto make base system would take

00:07:06,720 --> 00:07:09,280
around

00:07:07,280 --> 00:07:10,639
three minutes to do a complete build of

00:07:09,280 --> 00:07:13,440
live blurt

00:07:10,639 --> 00:07:15,440
and now with the adoption of mison we've

00:07:13,440 --> 00:07:16,960
pretty much cut that in half to one and

00:07:15,440 --> 00:07:18,319
a half minutes

00:07:16,960 --> 00:07:21,520
so that makes a big difference to

00:07:18,319 --> 00:07:21,520
developer productivity

00:07:22,720 --> 00:07:27,599
the vast majority of the build scripts

00:07:25,120 --> 00:07:29,360
have been converted to python 3.

00:07:27,599 --> 00:07:31,280
we've got a little bit of pearl code

00:07:29,360 --> 00:07:32,479
left but the majority has been converted

00:07:31,280 --> 00:07:34,000
to python

00:07:32,479 --> 00:07:36,880
and support for python 2 has been

00:07:34,000 --> 00:07:40,080
dropped at the same time

00:07:36,880 --> 00:07:42,880
we adopted the glib project

00:07:40,080 --> 00:07:44,080
and in doing so we managed to remove the

00:07:42,880 --> 00:07:46,080
gnu lib code

00:07:44,080 --> 00:07:48,080
which was a prerequisite for adopting

00:07:46,080 --> 00:07:50,879
mizon

00:07:48,080 --> 00:07:54,400
we've also converted a large portion of

00:07:50,879 --> 00:07:56,960
our website documentation to the

00:07:54,400 --> 00:07:58,000
restructured text format and we've also

00:07:56,960 --> 00:08:02,240
converted the manual

00:07:58,000 --> 00:08:02,240
pages to restructured text

00:08:03,680 --> 00:08:10,879
in adopting the glib library we have

00:08:07,440 --> 00:08:15,199
changed our memory management approach

00:08:10,879 --> 00:08:18,240
we now use an abort on out of memory

00:08:15,199 --> 00:08:19,840
paradigm and use the g-lobe allocation

00:08:18,240 --> 00:08:22,800
functions

00:08:19,840 --> 00:08:23,919
we've also adopted use of the gcc or

00:08:22,800 --> 00:08:28,400
c-lang

00:08:23,919 --> 00:08:28,400
extensions for automatic memory cleanup

00:08:28,800 --> 00:08:34,399
combined these these changes lead to

00:08:32,080 --> 00:08:36,080
code flow that's much easier to follow

00:08:34,399 --> 00:08:40,560
we've got fewer memory leaks

00:08:36,080 --> 00:08:42,159
and overall the code is more robust

00:08:40,560 --> 00:08:44,640
now looking at some of the big changes

00:08:42,159 --> 00:08:48,240
in the virtualization drivers

00:08:44,640 --> 00:08:50,880
we have refactored the block device code

00:08:48,240 --> 00:08:54,000
in the qmu driver quite significantly

00:08:50,880 --> 00:08:56,480
we now use the modern block dev

00:08:54,000 --> 00:08:58,880
approach to configuring qmu disks

00:08:56,480 --> 00:09:00,560
instead of the legacy drive approach

00:08:58,880 --> 00:09:02,720
and this has an immediate benefit for

00:09:00,560 --> 00:09:04,320
all applications using libvert

00:09:02,720 --> 00:09:07,040
because they are transparently switched

00:09:04,320 --> 00:09:08,720
to the new block dev approach

00:09:07,040 --> 00:09:10,880
and one of the notable things that this

00:09:08,720 --> 00:09:15,680
unlocks is support for new

00:09:10,880 --> 00:09:15,680
uh checkpoint or backup apis in libert

00:09:17,680 --> 00:09:21,519
the other thing we have enabled is

00:09:20,480 --> 00:09:23,760
support for

00:09:21,519 --> 00:09:25,760
firmware image auto selection which is

00:09:23,760 --> 00:09:29,279
useful when configuring

00:09:25,760 --> 00:09:32,560
uefi firmware in libvert

00:09:29,279 --> 00:09:35,040
we've introduced support for verteo fs

00:09:32,560 --> 00:09:35,600
which is a modern alternative to the

00:09:35,040 --> 00:09:39,360
nine p

00:09:35,600 --> 00:09:40,640
file system pass through and we've got

00:09:39,360 --> 00:09:44,000
nick teaming for

00:09:40,640 --> 00:09:44,000
a failover between

00:09:45,440 --> 00:09:51,120
between pci between assigned pci devices

00:09:49,360 --> 00:09:54,160
and emulated nics

00:09:51,120 --> 00:09:56,640
which allows you to do live migration

00:09:54,160 --> 00:09:58,959
when you have pci device assignment for

00:09:56,640 --> 00:09:58,959
nics

00:09:59,839 --> 00:10:04,240
in the secondary drivers we've

00:10:02,240 --> 00:10:08,000
introduced support for

00:10:04,240 --> 00:10:11,440
nat with ipv6 in our virtual network

00:10:08,000 --> 00:10:14,160
we've removed the old hal device driver

00:10:11,440 --> 00:10:15,120
which was it's been obsolete on linux

00:10:14,160 --> 00:10:18,720
for a long time

00:10:15,120 --> 00:10:19,360
and we kept it around for free bsd but

00:10:18,720 --> 00:10:22,240
now we've

00:10:19,360 --> 00:10:23,040
removed it entirely and you udev is our

00:10:22,240 --> 00:10:26,079
preferred

00:10:23,040 --> 00:10:28,240
device driver we also have support for

00:10:26,079 --> 00:10:30,959
the creation of mediated devices

00:10:28,240 --> 00:10:34,880
which goes along with support for

00:10:30,959 --> 00:10:38,240
mediated devices in the qmu driver

00:10:34,880 --> 00:10:39,040
in the other hypervisor drivers we have

00:10:38,240 --> 00:10:41,120
introduced

00:10:39,040 --> 00:10:43,279
support for qmu command line pass

00:10:41,120 --> 00:10:46,160
through in the zen driver

00:10:43,279 --> 00:10:47,360
the beehive driver for freebsd has

00:10:46,160 --> 00:10:50,320
gained support for many more

00:10:47,360 --> 00:10:53,279
configuration options

00:10:50,320 --> 00:10:53,600
we've got new active contributions for

00:10:53,279 --> 00:10:57,040
the

00:10:53,600 --> 00:10:58,480
hyper-v driver which has been looking

00:10:57,040 --> 00:11:00,160
for a maintainer for quite a number of

00:10:58,480 --> 00:11:02,320
years now

00:11:00,160 --> 00:11:03,360
and the virtualbox driver has been

00:11:02,320 --> 00:11:08,079
updated to

00:11:03,360 --> 00:11:09,839
the um 6.0 release apis

00:11:08,079 --> 00:11:12,839
and support for the older virtualbox

00:11:09,839 --> 00:11:15,839
releases has been

00:11:12,839 --> 00:11:15,839
discontinued

00:11:16,079 --> 00:11:21,519
and that is a good overall summary of

00:11:19,760 --> 00:11:24,480
the work that's gone on in the last

00:11:21,519 --> 00:11:25,920
year um the the technical debt and

00:11:24,480 --> 00:11:29,120
modernization of the

00:11:25,920 --> 00:11:31,360
of the code is an ongoing effort

00:11:29,120 --> 00:11:32,720
that will continue into the next year

00:11:31,360 --> 00:11:35,440
and

00:11:32,720 --> 00:11:37,040
we think this is is leading to very nice

00:11:35,440 --> 00:11:38,399
improvements in the maintainability of

00:11:37,040 --> 00:11:40,959
libvert

00:11:38,399 --> 00:11:42,079
and making it a more attractive project

00:11:40,959 --> 00:11:45,440
for contributors

00:11:42,079 --> 00:11:45,440
to participate in

00:11:45,920 --> 00:11:49,920
and that concludes my presentation for

00:11:53,000 --> 00:11:56,000

YouTube URL: https://www.youtube.com/watch?v=dkEDy1K19Pc


