Title: EuRuKo 2019 Keynote: I Test In Production by Charity Majors
Publication date: 2021-01-19
Playlist: EuRuKo 2019
Description: 
	Keynote: Yes, I Test In Production... And So Should You 

Testing in prod has gotten a bad rap. It's both inevitable - you can't know everything before you ship - and desirable. In modern complex systems, failure is a constant and the only guiding principle is that "users should never notice". So how do you test safely in prod, and how should you allocate your scarce engineering cycles between prod and staging?

Charity Majors - https://twitter.com/mipsytipsy
EuRuKo 2019
Captions: 
	00:00:05,839 --> 00:00:11,200
so

00:00:06,240 --> 00:00:14,240
with that said anchors away heave-ho

00:00:11,200 --> 00:00:14,960
let's start the missing mast with

00:00:14,240 --> 00:00:17,920
charity

00:00:14,960 --> 00:00:17,920
yes um

00:00:20,000 --> 00:00:27,519
she is the grand dam of infrastructure

00:00:24,160 --> 00:00:31,199
the cto of honeycomb bio and she

00:00:27,519 --> 00:00:33,360
even co-wrote a book on database

00:00:31,199 --> 00:00:35,360
reliability engineering i think that she

00:00:33,360 --> 00:00:38,480
knows what she's talking about

00:00:35,360 --> 00:00:41,680
um and i also heard um

00:00:38,480 --> 00:00:43,120
well she's well wrote a book on database

00:00:41,680 --> 00:00:45,440
reliability

00:00:43,120 --> 00:00:46,879
i thought well she might have an idea of

00:00:45,440 --> 00:00:49,920
for testing

00:00:46,879 --> 00:00:50,239
how to do that with giant data sets and

00:00:49,920 --> 00:00:51,840
then

00:00:50,239 --> 00:00:54,399
i was told she does it in production

00:00:51,840 --> 00:00:56,559
which i think

00:00:54,399 --> 00:00:57,600
well i'm going to learn something today

00:00:56,559 --> 00:00:59,039
for sure

00:00:57,600 --> 00:01:01,680
i want to have a nice round of applause

00:00:59,039 --> 00:01:01,680
for charity

00:01:03,820 --> 00:01:09,040
[Music]

00:01:05,519 --> 00:01:11,680
okay am i on i am on

00:01:09,040 --> 00:01:13,119
yay it's really my favorite thing about

00:01:11,680 --> 00:01:14,720
this talk is just getting to see the

00:01:13,119 --> 00:01:18,159
horror in some people's eyes when i say

00:01:14,720 --> 00:01:18,159
the phrase testing in production

00:01:20,640 --> 00:01:24,159
all right we'll wait for my my thing to

00:01:22,159 --> 00:01:27,759
come up um i have had such an

00:01:24,159 --> 00:01:31,040
interesting time getting here

00:01:27,759 --> 00:01:34,320
uh directions

00:01:31,040 --> 00:01:36,560
our addictions are hard anyway

00:01:34,320 --> 00:01:38,320
um well i don't want to perceive beyond

00:01:36,560 --> 00:01:39,119
yeah i have this very pretty thing that

00:01:38,320 --> 00:01:40,479
i just finished

00:01:39,119 --> 00:01:42,399
30 seconds ago so i'm gonna leave it up

00:01:40,479 --> 00:01:44,880
there um but

00:01:42,399 --> 00:01:46,960
um i will say that i brought a lot of

00:01:44,880 --> 00:01:49,520
really snarky nietzsche quotes

00:01:46,960 --> 00:01:51,119
um stickers with unicorns and rainbows

00:01:49,520 --> 00:01:52,320
and um they say angry things about

00:01:51,119 --> 00:01:53,600
technology

00:01:52,320 --> 00:01:55,119
and i'm gonna leave them in the speakers

00:01:53,600 --> 00:01:56,000
lounge so you should come and get some

00:01:55,119 --> 00:01:57,840
afterwards

00:01:56,000 --> 00:02:01,439
um they're the ones that say like 20

00:01:57,840 --> 00:02:01,439
 tools and no two agree

00:02:01,600 --> 00:02:05,280
yay there we go see isn't that pretty

00:02:06,840 --> 00:02:12,560
yay

00:02:08,720 --> 00:02:14,000
it's it's kind of like um who's in the

00:02:12,560 --> 00:02:15,920
english governance who's always like a

00:02:14,000 --> 00:02:17,280
spoonful of sugar i find that like a

00:02:15,920 --> 00:02:20,879
spoonful of rainbows

00:02:17,280 --> 00:02:22,000
helps the anger go down uh my name is

00:02:20,879 --> 00:02:25,120
charity um

00:02:22,000 --> 00:02:26,319
uh this is already in the intro um a

00:02:25,120 --> 00:02:28,000
if you have the book database

00:02:26,319 --> 00:02:29,440
reliability engineering um you'll notice

00:02:28,000 --> 00:02:31,920
it has a horse on the cover but i

00:02:29,440 --> 00:02:34,879
brought stickers so i can fix it for you

00:02:31,920 --> 00:02:36,000
um see me after after class you can't

00:02:34,879 --> 00:02:37,519
apparently have a

00:02:36,000 --> 00:02:38,800
mythical creature on your book if it's

00:02:37,519 --> 00:02:39,760
so really i don't think i think that's

00:02:38,800 --> 00:02:42,239


00:02:39,760 --> 00:02:43,040
um am i gonna get in trouble for

00:02:42,239 --> 00:02:46,560
swearing here

00:02:43,040 --> 00:02:48,800
it's europe right yes all right i'll do

00:02:46,560 --> 00:02:52,879
my best

00:02:48,800 --> 00:02:55,840
so test and prod um

00:02:52,879 --> 00:02:56,319
you um some reactions that i often get

00:02:55,840 --> 00:02:58,640
are

00:02:56,319 --> 00:02:59,760
that sounds like things that cowboys do

00:02:58,640 --> 00:03:01,840
um or

00:02:59,760 --> 00:03:03,120
like isn't that the battle days of

00:03:01,840 --> 00:03:07,440
sysadmining

00:03:03,120 --> 00:03:11,680
um it's gotten a bad rap

00:03:07,440 --> 00:03:14,000
and i blame this guy um

00:03:11,680 --> 00:03:15,519
because it's such a great meme like who

00:03:14,000 --> 00:03:16,239
of us has not had it up on their wall at

00:03:15,519 --> 00:03:18,239
some point

00:03:16,239 --> 00:03:20,959
it's so funny and he's so cool he's just

00:03:18,239 --> 00:03:24,400
like i don't always test my code

00:03:20,959 --> 00:03:28,239
when i do it's funny

00:03:24,400 --> 00:03:28,879
but it's so wrong responsible engineers

00:03:28,239 --> 00:03:32,159
test in

00:03:28,879 --> 00:03:33,280
prod constantly and irresponsible

00:03:32,159 --> 00:03:34,879
engineers

00:03:33,280 --> 00:03:37,840
do too they just don't admit it until

00:03:34,879 --> 00:03:37,840
they do it very poorly

00:03:38,000 --> 00:03:41,840
um so like first of all it it starts

00:03:40,480 --> 00:03:43,760
with like it's kind of a

00:03:41,840 --> 00:03:44,879
false dichotomy you know it sets it up

00:03:43,760 --> 00:03:45,280
as though you can only do one or the

00:03:44,879 --> 00:03:47,760
other

00:03:45,280 --> 00:03:48,799
you can only test before or after which

00:03:47,760 --> 00:03:52,959
is

00:03:48,799 --> 00:03:54,400
one hopes not true um

00:03:52,959 --> 00:03:56,159
and and i do want to make it clear a lot

00:03:54,400 --> 00:03:57,840
of people seem to just take the title

00:03:56,159 --> 00:04:00,159
and then run off and go charity says i

00:03:57,840 --> 00:04:00,480
don't have to do tests anymore and that

00:04:00,159 --> 00:04:03,200
is

00:04:00,480 --> 00:04:03,920
not what i'm trying to say i i do have

00:04:03,200 --> 00:04:06,400
respect for

00:04:03,920 --> 00:04:07,360
you know all the traditional tests um i

00:04:06,400 --> 00:04:11,200
think that

00:04:07,360 --> 00:04:12,799
you can often um spend less time doing

00:04:11,200 --> 00:04:15,280
that you know 80 percent of the

00:04:12,799 --> 00:04:16,079
check sorry 80 percent of the bugs can

00:04:15,280 --> 00:04:17,919
be cut

00:04:16,079 --> 00:04:19,600
like 20 percent of the work um don't

00:04:17,919 --> 00:04:21,519
have to ask me you can ask katie

00:04:19,600 --> 00:04:23,199
mccaffrey who's done computer science

00:04:21,519 --> 00:04:24,720
i'm a music major so like don't ask me

00:04:23,199 --> 00:04:27,440
anything about math um

00:04:24,720 --> 00:04:28,320
but when it comes to testing and

00:04:27,440 --> 00:04:31,919
production

00:04:28,320 --> 00:04:35,120
um we set we waste a lot of our energy

00:04:31,919 --> 00:04:38,000
honestly um and we waste it because

00:04:35,120 --> 00:04:39,280
we want to do a good job which is a very

00:04:38,000 --> 00:04:42,639
good motivation

00:04:39,280 --> 00:04:44,160
um but we waste because we think that

00:04:42,639 --> 00:04:47,199
there is such a thing as safety

00:04:44,160 --> 00:04:49,040
and so we chase it um and

00:04:47,199 --> 00:04:51,199
and it's just a fact of life that the

00:04:49,040 --> 00:04:54,800
scarcest resource that any of us

00:04:51,199 --> 00:04:58,479
has will always be developer cycles

00:04:54,800 --> 00:05:01,199
right engineering time um it's a finite

00:04:58,479 --> 00:05:01,680
it's a finite set even if you're google

00:05:01,199 --> 00:05:03,120
uh

00:05:01,680 --> 00:05:05,039
even then you have a finite amount of

00:05:03,120 --> 00:05:08,000
time and energy um

00:05:05,039 --> 00:05:09,280
and it sounds great to go let's catch

00:05:08,000 --> 00:05:11,600
all the bugs let's

00:05:09,280 --> 00:05:13,039
you know test all the things but in

00:05:11,600 --> 00:05:14,400
reality is that the best use of your

00:05:13,039 --> 00:05:17,360
time

00:05:14,400 --> 00:05:18,080
maybe not always anyway i won't get too

00:05:17,360 --> 00:05:22,080
much into it

00:05:18,080 --> 00:05:25,039
um please test please test

00:05:22,080 --> 00:05:26,880
um but tests are great for catching the

00:05:25,039 --> 00:05:29,120
problems we already know about

00:05:26,880 --> 00:05:30,160
right they're good for the known

00:05:29,120 --> 00:05:31,440
unknowns

00:05:30,160 --> 00:05:33,039
as soon as you find a way that your

00:05:31,440 --> 00:05:33,759
system is going to fail you write a test

00:05:33,039 --> 00:05:36,160
for it

00:05:33,759 --> 00:05:37,440
yay now we'll know if it happens again

00:05:36,160 --> 00:05:39,360
over time the set of things

00:05:37,440 --> 00:05:40,560
you know about how your system can fail

00:05:39,360 --> 00:05:42,720
should grow and grow

00:05:40,560 --> 00:05:45,600
and it should get better and better at

00:05:42,720 --> 00:05:48,639
not doing those same things again

00:05:45,600 --> 00:05:50,240
but like tests are for developers kind

00:05:48,639 --> 00:05:52,639
of like monitoring checks are for ops

00:05:50,240 --> 00:05:52,639
people

00:05:52,960 --> 00:05:56,000
and our systems are changing in ways

00:05:54,720 --> 00:05:58,880
that make

00:05:56,000 --> 00:06:02,240
these old tools catch less and less of

00:05:58,880 --> 00:06:02,240
the problems that we actually deal with

00:06:04,000 --> 00:06:07,280
this is such a meme heavy like topic but

00:06:05,840 --> 00:06:08,240
i just had to throw a couple a couple

00:06:07,280 --> 00:06:10,479
more in there

00:06:08,240 --> 00:06:12,160
um but let's look at some definitions

00:06:10,479 --> 00:06:14,160
testing

00:06:12,160 --> 00:06:16,800
checking the quality right and

00:06:14,160 --> 00:06:20,400
production where your users are

00:06:16,800 --> 00:06:23,120
and every interesting thing that happens

00:06:20,400 --> 00:06:23,919
comes at that conjunction of an artifact

00:06:23,120 --> 00:06:26,560
of code

00:06:23,919 --> 00:06:29,840
an infrastructure a point in time and an

00:06:26,560 --> 00:06:29,840
unpredictable user action

00:06:30,160 --> 00:06:35,120
and every interesting thing is an

00:06:32,240 --> 00:06:37,600
unknown unknown

00:06:35,120 --> 00:06:38,319
um so the traditional like path the

00:06:37,600 --> 00:06:39,759
deployment

00:06:38,319 --> 00:06:42,400
thing goes you know you write your code

00:06:39,759 --> 00:06:43,919
you commit it um it gets automatically

00:06:42,400 --> 00:06:45,840
rolled out to some staging thing runs

00:06:43,919 --> 00:06:46,560
all the tests on it roll up an artifact

00:06:45,840 --> 00:06:50,800
deploy

00:06:46,560 --> 00:06:53,599
production uh or promote it um

00:06:50,800 --> 00:06:54,960
but staging is not like production you

00:06:53,599 --> 00:06:58,000
know shocker right

00:06:54,960 --> 00:07:00,880
it will never be production uh

00:06:58,000 --> 00:07:02,240
you cannot clone production even if you

00:07:00,880 --> 00:07:04,240
think you do

00:07:02,240 --> 00:07:05,759
you're wrong you will always be wrong

00:07:04,240 --> 00:07:06,400
and it's better to just accept that it's

00:07:05,759 --> 00:07:08,639
wrong

00:07:06,400 --> 00:07:10,080
and and not try and just like accept the

00:07:08,639 --> 00:07:12,160
limitations of staging

00:07:10,080 --> 00:07:13,840
um and i will even i will go so far as

00:07:12,160 --> 00:07:17,039
to make a maximalist point

00:07:13,840 --> 00:07:18,560
which i will not 100 defend and say that

00:07:17,039 --> 00:07:20,319
most of you can probably get rid of

00:07:18,560 --> 00:07:23,840
staging altogether

00:07:20,319 --> 00:07:23,840
and just run things on your laptop

00:07:24,000 --> 00:07:27,919
if if you take that effort and you apply

00:07:27,520 --> 00:07:29,680
it

00:07:27,919 --> 00:07:31,680
to production to hardening it to

00:07:29,680 --> 00:07:32,479
building guardrails to making it safe to

00:07:31,680 --> 00:07:33,759
do things

00:07:32,479 --> 00:07:35,919
increasing your visibility and your

00:07:33,759 --> 00:07:37,680
observability um

00:07:35,919 --> 00:07:39,039
it's not just get rid of staging and

00:07:37,680 --> 00:07:41,520
yellow

00:07:39,039 --> 00:07:42,880
but a lot of that time is better used

00:07:41,520 --> 00:07:45,039
elsewhere

00:07:42,880 --> 00:07:47,120
staging at its worst is worse than

00:07:45,039 --> 00:07:49,280
nothing at all

00:07:47,120 --> 00:07:50,879
has anyone here ever lost a day to

00:07:49,280 --> 00:07:53,199
trying to track down a bug in staging

00:07:50,879 --> 00:07:55,599
that didn't exist in production

00:07:53,199 --> 00:07:56,319
sorry a week did anyone not last a month

00:07:55,599 --> 00:07:59,680
you know

00:07:56,319 --> 00:08:00,319
like this time adds up uh and and it is

00:07:59,680 --> 00:08:02,560
the fact that

00:08:00,319 --> 00:08:04,319
every single moment that you spend in a

00:08:02,560 --> 00:08:07,120
false environment

00:08:04,319 --> 00:08:08,960
it's not neutral time it's negative time

00:08:07,120 --> 00:08:10,639
when i think of senior engineers

00:08:08,960 --> 00:08:12,400
i think of i think of engineers whose

00:08:10,639 --> 00:08:14,560
instincts i trust

00:08:12,400 --> 00:08:16,080
right like yes we'll be data-driven and

00:08:14,560 --> 00:08:18,319
blah blah but like

00:08:16,080 --> 00:08:19,759
if they're like oh i have a bad feeling

00:08:18,319 --> 00:08:20,400
about this you know for senior year i

00:08:19,759 --> 00:08:22,000
want to

00:08:20,400 --> 00:08:23,599
okay let's think about that let's unpack

00:08:22,000 --> 00:08:26,800
it why

00:08:23,599 --> 00:08:28,400
and the more time you spend in staging

00:08:26,800 --> 00:08:30,319
the more time you're building up your

00:08:28,400 --> 00:08:33,200
muscles your intuition to think that

00:08:30,319 --> 00:08:35,599
say things like drop database blah are

00:08:33,200 --> 00:08:35,599
fine

00:08:35,760 --> 00:08:39,919
those are not good instincts the more

00:08:37,919 --> 00:08:42,240
time you spend running queries uh

00:08:39,919 --> 00:08:43,599
in staging the more the more you're

00:08:42,240 --> 00:08:45,120
you're learning about

00:08:43,599 --> 00:08:46,720
what's fast what's efficient what's

00:08:45,120 --> 00:08:47,440
what's what's um what's okay to do

00:08:46,720 --> 00:08:51,120
what's not

00:08:47,440 --> 00:08:53,760
but you're learning the wrong lessons um

00:08:51,120 --> 00:08:54,320
i believe that increasingly every single

00:08:53,760 --> 00:08:56,720
one of us

00:08:54,320 --> 00:08:58,080
even client-side developers should be

00:08:56,720 --> 00:09:01,120
spending

00:08:58,080 --> 00:09:03,279
a lot of time immersed in production um

00:09:01,120 --> 00:09:05,040
knee-deep if not neck deep same neck

00:09:03,279 --> 00:09:06,839
deep because that's where you learn the

00:09:05,040 --> 00:09:10,000
instincts that's where you learn

00:09:06,839 --> 00:09:13,120
um the lessons that actually make you

00:09:10,000 --> 00:09:14,640
good at your job all right

00:09:13,120 --> 00:09:18,000
uh i'm not saying that everyone has to

00:09:14,640 --> 00:09:18,000
get rid of staging but i would

00:09:18,080 --> 00:09:21,279
you got you have to you're not going to

00:09:20,080 --> 00:09:25,040
understand your code at all

00:09:21,279 --> 00:09:28,800
unless you watch it run with real data

00:09:25,040 --> 00:09:30,720
real users little agents of chaos

00:09:28,800 --> 00:09:34,320
real traffic real scale real concurrency

00:09:30,720 --> 00:09:34,320
real network deploys

00:09:34,839 --> 00:09:41,360
everything real what

00:09:38,240 --> 00:09:43,360
real money oh yeah it's hella expensive

00:09:41,360 --> 00:09:45,279
to spin up a coffee

00:09:43,360 --> 00:09:47,279
so why now let's backtrack just a little

00:09:45,279 --> 00:09:48,720
bit like because for a long time this

00:09:47,279 --> 00:09:50,160
really was the best practice

00:09:48,720 --> 00:09:52,240
right build all these elaborate

00:09:50,160 --> 00:09:53,440
environments automate the whole thing

00:09:52,240 --> 00:09:54,880
you know

00:09:53,440 --> 00:09:57,839
gain confidence by running all these

00:09:54,880 --> 00:10:01,279
tests well

00:09:57,839 --> 00:10:03,440
i mentioned not being a math major

00:10:01,279 --> 00:10:05,839
but i drew you a graph so you know that

00:10:03,440 --> 00:10:05,839
it's true

00:10:06,880 --> 00:10:12,640
um by my calculations things are getting

00:10:10,320 --> 00:10:14,240
more complicated

00:10:12,640 --> 00:10:16,320
we toss this word complexity around a

00:10:14,240 --> 00:10:19,279
lot but what does it actually mean

00:10:16,320 --> 00:10:21,200
what is the complexity of systems um

00:10:19,279 --> 00:10:22,560
well

00:10:21,200 --> 00:10:24,560
let's visualize this there's your lamp

00:10:22,560 --> 00:10:25,760
stack humble one on the right and let me

00:10:24,560 --> 00:10:27,839
just start out by saying if you can

00:10:25,760 --> 00:10:31,839
solve your problems with a lamp stack

00:10:27,839 --> 00:10:34,959
please do they're great

00:10:31,839 --> 00:10:37,040
unfortunately more and more of us cannot

00:10:34,959 --> 00:10:38,160
that middle one is parse anybody here

00:10:37,040 --> 00:10:41,519
use parse

00:10:38,160 --> 00:10:44,079
mobile backend as a service yeah

00:10:41,519 --> 00:10:45,120
any facebook people here then i can say

00:10:44,079 --> 00:10:47,680
how i will never

00:10:45,120 --> 00:10:48,959
forgive them for shutting it down it

00:10:47,680 --> 00:10:49,440
will hold that grudge for the rest of my

00:10:48,959 --> 00:10:52,079
life

00:10:49,440 --> 00:10:54,079
 uh that was parsons

00:10:52,079 --> 00:10:55,680
infrastructure 2015. and like that

00:10:54,079 --> 00:10:57,760
middle blob is like a few hundred

00:10:55,680 --> 00:10:59,040
mongodb replicasets

00:10:57,760 --> 00:11:00,240
running queries that we just let

00:10:59,040 --> 00:11:03,120
developers all over the world just

00:11:00,240 --> 00:11:06,480
upload and we just had to make them work

00:11:03,120 --> 00:11:06,880
co-tenancy problems what uh javascript

00:11:06,480 --> 00:11:08,480
you

00:11:06,880 --> 00:11:10,640
got to write javascript upload it we

00:11:08,480 --> 00:11:13,440
just had to make it work right

00:11:10,640 --> 00:11:14,000
reasonably complex running this system

00:11:13,440 --> 00:11:16,640
is what

00:11:14,000 --> 00:11:18,240
directly led to me starting honeycomb um

00:11:16,640 --> 00:11:19,680
and it gets worse right like this is an

00:11:18,240 --> 00:11:22,480
actual electrical grid

00:11:19,680 --> 00:11:23,680
um and this increasingly is like what we

00:11:22,480 --> 00:11:25,519
need to have

00:11:23,680 --> 00:11:27,200
in our in our heads as a mental model

00:11:25,519 --> 00:11:30,480
for how we're building systems

00:11:27,200 --> 00:11:32,560
right it is there are

00:11:30,480 --> 00:11:33,600
emergent behaviors that no one

00:11:32,560 --> 00:11:37,760
understands

00:11:33,600 --> 00:11:41,200
and that's fine things break constantly

00:11:37,760 --> 00:11:41,760
and it's fine um some problems are hyper

00:11:41,200 --> 00:11:44,640
local

00:11:41,760 --> 00:11:44,880
like uh a tree fell over and main street

00:11:44,640 --> 00:11:47,760
and

00:11:44,880 --> 00:11:48,560
small town in iowa no one could have

00:11:47,760 --> 00:11:50,800
predicted it

00:11:48,560 --> 00:11:52,560
probably um no one should have put a lot

00:11:50,800 --> 00:11:53,920
of effort into trying to predict it

00:11:52,560 --> 00:11:55,920
no one should have written a unit test

00:11:53,920 --> 00:11:57,600
for like that tree is this tree gonna

00:11:55,920 --> 00:12:00,399
fall down today

00:11:57,600 --> 00:12:01,519
uh you just have to like repair them and

00:12:00,399 --> 00:12:03,360
move on with your life

00:12:01,519 --> 00:12:04,800
um and make things resilient to run

00:12:03,360 --> 00:12:06,160
around it

00:12:04,800 --> 00:12:07,279
some other some problems are like the

00:12:06,160 --> 00:12:09,040
opposite of that some problems you can

00:12:07,279 --> 00:12:11,279
only see if you zoom way out

00:12:09,040 --> 00:12:14,160
like like uh if all of the bolts that

00:12:11,279 --> 00:12:15,360
were manufactured in 1972 are rusting 10

00:12:14,160 --> 00:12:17,360
times as fast and you want to

00:12:15,360 --> 00:12:19,200
proactively replace them

00:12:17,360 --> 00:12:21,120
right like they're just these categories

00:12:19,200 --> 00:12:22,480
of problems that

00:12:21,120 --> 00:12:24,320
you look at them you're like yeah i

00:12:22,480 --> 00:12:26,160
should not put any effort into trying to

00:12:24,320 --> 00:12:28,480
predict this whatsoever

00:12:26,160 --> 00:12:30,079
i should just invest my observability so

00:12:28,480 --> 00:12:31,440
that i'm detecting you know information

00:12:30,079 --> 00:12:34,560
at the right level of

00:12:31,440 --> 00:12:36,639
um of detail so that i can ask any

00:12:34,560 --> 00:12:38,240
question of my systems and understand it

00:12:36,639 --> 00:12:41,120
without having to ship new code to

00:12:38,240 --> 00:12:45,360
handle that that occurrence

00:12:41,120 --> 00:12:48,639
um and this roughly tracks you know

00:12:45,360 --> 00:12:51,200
uh observability uh is for unknown

00:12:48,639 --> 00:12:53,279
unknowns the weight monitoring 300 etc

00:12:51,200 --> 00:12:54,560
um but like the overall message of this

00:12:53,279 --> 00:12:58,079
is just stop

00:12:54,560 --> 00:13:00,000
trying just give up

00:12:58,079 --> 00:13:01,600
so many catastrophic states exist right

00:13:00,000 --> 00:13:04,880
now in your systems

00:13:01,600 --> 00:13:08,880
and it's fine more or less

00:13:04,880 --> 00:13:09,920
sleep tight though and this matters more

00:13:08,880 --> 00:13:11,360
and more to us

00:13:09,920 --> 00:13:12,959
we're all distributed systems engineers

00:13:11,360 --> 00:13:15,279
these days and honestly like

00:13:12,959 --> 00:13:16,560
who are the first um og distributed

00:13:15,279 --> 00:13:19,440
systems engineers

00:13:16,560 --> 00:13:20,880
web web engineers right proliferation of

00:13:19,440 --> 00:13:23,200
clients is what got us all into this

00:13:20,880 --> 00:13:23,200
mess

00:13:23,279 --> 00:13:26,639
so increasingly like the problems that

00:13:25,519 --> 00:13:28,320
we have in our systems

00:13:26,639 --> 00:13:29,440
like it used to be and i come from ops

00:13:28,320 --> 00:13:30,880
right it used to be the problems you

00:13:29,440 --> 00:13:32,800
have in our systems where like

00:13:30,880 --> 00:13:34,480
you could look at a system your lamp

00:13:32,800 --> 00:13:35,279
stack predict eighty percent of the ways

00:13:34,480 --> 00:13:36,560
it was going to break

00:13:35,279 --> 00:13:38,800
you write a bunch of monitoring checks

00:13:36,560 --> 00:13:39,360
for them over the course of the next six

00:13:38,800 --> 00:13:42,079
months

00:13:39,360 --> 00:13:43,440
you would learn the other 20 and you

00:13:42,079 --> 00:13:44,959
write checks to handle them

00:13:43,440 --> 00:13:47,279
and it was pretty rare that like

00:13:44,959 --> 00:13:48,959
something really new happened like

00:13:47,279 --> 00:13:52,240
usually you get paid you go ah that

00:13:48,959 --> 00:13:55,680
again you trying to have to repair it

00:13:52,240 --> 00:13:57,040
we don't do that anymore uh

00:13:55,680 --> 00:13:58,959
things that we're just like oh that

00:13:57,040 --> 00:14:01,279
again we automate them out of existence

00:13:58,959 --> 00:14:02,959
right it's more like now every time you

00:14:01,279 --> 00:14:04,720
get paged it should be something

00:14:02,959 --> 00:14:05,680
genuinely baffling

00:14:04,720 --> 00:14:08,240
right it should be something that you

00:14:05,680 --> 00:14:10,720
couldn't handle automatically

00:14:08,240 --> 00:14:12,240
it should be unknown unknowns and there

00:14:10,720 --> 00:14:13,760
are more and more and more of those

00:14:12,240 --> 00:14:15,680
because of the

00:14:13,760 --> 00:14:16,800
interactions between all of these

00:14:15,680 --> 00:14:19,199
ephemeral

00:14:16,800 --> 00:14:20,160
components uh blipping in and out of

00:14:19,199 --> 00:14:24,000
existence

00:14:20,160 --> 00:14:24,639
um users need i even describe it i'm

00:14:24,000 --> 00:14:27,199
sure

00:14:24,639 --> 00:14:29,760
you're on the same page and distributed

00:14:27,199 --> 00:14:31,040
systems are incredibly hostile to being

00:14:29,760 --> 00:14:34,160
cloned or imitated

00:14:31,040 --> 00:14:37,040
or even monitored at facebook

00:14:34,160 --> 00:14:37,839
um we were not going to spin up a copy

00:14:37,040 --> 00:14:41,199
of facebook

00:14:37,839 --> 00:14:43,279
to test facebook right it's not

00:14:41,199 --> 00:14:44,880
financially practical you're not going

00:14:43,279 --> 00:14:45,680
to spin up a copy of the national

00:14:44,880 --> 00:14:47,440
electrical grid

00:14:45,680 --> 00:14:49,279
to monitor the national electrical grid

00:14:47,440 --> 00:14:52,240
and even if you did it would be kind of

00:14:49,279 --> 00:14:53,839
pointless because if it's not users

00:14:52,240 --> 00:14:58,480
bringing their chaos and

00:14:53,839 --> 00:15:02,000
trying new things it's boring

00:14:58,480 --> 00:15:02,480
um and you don't actually care how

00:15:02,000 --> 00:15:05,839
things

00:15:02,480 --> 00:15:08,880
fail in false environments

00:15:05,839 --> 00:15:09,920
you do care intimately about how they

00:15:08,880 --> 00:15:11,519
fail in production

00:15:09,920 --> 00:15:13,040
and distributed systems have this like

00:15:11,519 --> 00:15:14,399
infinitely long list of things that

00:15:13,040 --> 00:15:17,600
almost never happen

00:15:14,399 --> 00:15:19,040
except that one time they do or it takes

00:15:17,600 --> 00:15:20,079
like five of them at once to trigger a

00:15:19,040 --> 00:15:22,000
bug

00:15:20,079 --> 00:15:23,519
and then you spend like a week of your

00:15:22,000 --> 00:15:24,399
life trying to re-throw it in staging

00:15:23,519 --> 00:15:28,000
like

00:15:24,399 --> 00:15:29,199
like i said give up don't you don't care

00:15:28,000 --> 00:15:30,399
it's probably not going to fail the same

00:15:29,199 --> 00:15:32,720
way in staging as it did in prague

00:15:30,399 --> 00:15:32,720
anyway

00:15:34,800 --> 00:15:38,800
staging's not production there will

00:15:36,720 --> 00:15:40,399
never be production

00:15:38,800 --> 00:15:42,800
staging is a black hole for your time

00:15:40,399 --> 00:15:45,600
and energy

00:15:42,800 --> 00:15:46,000
and a misleading set of results that

00:15:45,600 --> 00:15:48,000
will

00:15:46,000 --> 00:15:49,680
mostly result in misplaced confidence in

00:15:48,000 --> 00:15:51,199
your code

00:15:49,680 --> 00:15:53,040
and it will suck up away your life

00:15:51,199 --> 00:15:56,160
forcing your will to live like i said

00:15:53,040 --> 00:15:56,160
this is why i bring the rainbows

00:15:56,560 --> 00:16:00,639
and like how well do you even understand

00:15:58,399 --> 00:16:03,680
and notice problems when they do happen

00:16:00,639 --> 00:16:03,680
right like

00:16:04,959 --> 00:16:10,000
uh only productions production and and

00:16:08,800 --> 00:16:12,160
people will argue me down they'll be

00:16:10,000 --> 00:16:13,920
like why i i work on this system that

00:16:12,160 --> 00:16:15,199
where i can like i spin up a copy of it

00:16:13,920 --> 00:16:18,240
to test it every time

00:16:15,199 --> 00:16:19,360
i care so much about um not breaking

00:16:18,240 --> 00:16:20,880
anything

00:16:19,360 --> 00:16:22,160
but it's actually impossible because

00:16:20,880 --> 00:16:22,800
every single one of these deployed is a

00:16:22,160 --> 00:16:25,360
unique

00:16:22,800 --> 00:16:26,480
process you cannot as anyone who's ever

00:16:25,360 --> 00:16:30,160
typoed production

00:16:26,480 --> 00:16:31,920
knows you can't actually test everything

00:16:30,160 --> 00:16:33,360
and by the way deploy scripts are

00:16:31,920 --> 00:16:35,600
production code not only that they are

00:16:33,360 --> 00:16:38,320
the most important code in your system

00:16:35,600 --> 00:16:38,320
in every system

00:16:39,360 --> 00:16:42,399
which is why i don't know why we give it

00:16:40,639 --> 00:16:43,520
to the interns why do why don't we give

00:16:42,399 --> 00:16:45,920
it to senior engineers

00:16:43,520 --> 00:16:47,759
[Music]

00:16:45,920 --> 00:16:49,360
furthermore i see people sticking all

00:16:47,759 --> 00:16:51,040
this time and energy into staging when

00:16:49,360 --> 00:16:52,480
they can't explain what's going on in

00:16:51,040 --> 00:16:54,240
production

00:16:52,480 --> 00:16:56,000
um that's where you should be putting

00:16:54,240 --> 00:16:59,839
your effort if you can't

00:16:56,000 --> 00:17:02,720
explain any spike like instantly

00:16:59,839 --> 00:17:04,240
screw production sorry screw staging

00:17:02,720 --> 00:17:07,439
that really throws me off that getting

00:17:04,240 --> 00:17:09,120
swear screw screw staging like until

00:17:07,439 --> 00:17:10,720
you have a good enough observability

00:17:09,120 --> 00:17:13,120
that you can explain

00:17:10,720 --> 00:17:15,520
anything that's happening to your

00:17:13,120 --> 00:17:16,880
satisfaction

00:17:15,520 --> 00:17:19,280
you should not be pouring more energy

00:17:16,880 --> 00:17:22,240
into staging

00:17:19,280 --> 00:17:23,439
uh katie gave this great talk babies

00:17:22,240 --> 00:17:26,480
papers we love

00:17:23,439 --> 00:17:28,400
um the link is there i will post this

00:17:26,480 --> 00:17:29,760
where they showed that actually 80 of

00:17:28,400 --> 00:17:32,160
the bugs are found with 20

00:17:29,760 --> 00:17:32,880
of the effort and so i'm arguing here

00:17:32,160 --> 00:17:34,400
for taking

00:17:32,880 --> 00:17:36,000
a lot of that energy that we're putting

00:17:34,400 --> 00:17:39,280
into staging

00:17:36,000 --> 00:17:43,120
and shifting it to production because

00:17:39,280 --> 00:17:44,799
like i said you have to watch your code

00:17:43,120 --> 00:17:48,240
run with

00:17:44,799 --> 00:17:49,840
reality right um the best software

00:17:48,240 --> 00:17:52,320
engineers i know

00:17:49,840 --> 00:17:54,080
have like a window open with their ide

00:17:52,320 --> 00:17:56,240
and a window open with

00:17:54,080 --> 00:17:57,760
you know their observability tooling and

00:17:56,240 --> 00:17:59,440
they're constantly in a conversation

00:17:57,760 --> 00:18:03,600
with their code in production

00:17:59,440 --> 00:18:03,600
they're watching users use it uh

00:18:04,480 --> 00:18:08,080
you know i feel like it should be muscle

00:18:06,400 --> 00:18:09,039
memory for every engineer as soon as you

00:18:08,080 --> 00:18:11,840
ship code

00:18:09,039 --> 00:18:12,880
you go and you look at it uh you're

00:18:11,840 --> 00:18:14,400
instrumenting it right so you're gonna

00:18:12,880 --> 00:18:16,000
know if it broke

00:18:14,400 --> 00:18:17,679
so just go look at it through the lens

00:18:16,000 --> 00:18:20,160
of your instrumentation and see

00:18:17,679 --> 00:18:22,320
is it doing what you expected it to uh

00:18:20,160 --> 00:18:25,520
does anything else look weird

00:18:22,320 --> 00:18:27,039
uh you will catch like 80 of the bugs

00:18:25,520 --> 00:18:30,640
that you ship before users

00:18:27,039 --> 00:18:32,000
even get a chance to notice um

00:18:30,640 --> 00:18:34,799
you do have to have tooling that's

00:18:32,000 --> 00:18:36,559
capable of it but

00:18:34,799 --> 00:18:38,880
i'm not going to do a pitch here suffice

00:18:36,559 --> 00:18:40,840
it to say it exists

00:18:38,880 --> 00:18:42,320
our idea of the software development

00:18:40,840 --> 00:18:45,280
lifecycle

00:18:42,320 --> 00:18:46,080
is super overdue for an update um

00:18:45,280 --> 00:18:47,919
because

00:18:46,080 --> 00:18:49,280
we have this this idea of it it's in our

00:18:47,919 --> 00:18:51,440
mental model it's usually a switch

00:18:49,280 --> 00:18:53,840
right you flip it off you flip it on you

00:18:51,440 --> 00:18:57,039
flip from one version to the other

00:18:53,840 --> 00:18:59,280
it is manifestly not

00:18:57,039 --> 00:19:00,320
deploying code is not a binary switch

00:18:59,280 --> 00:19:03,039
it's a process

00:19:00,320 --> 00:19:04,960
of increasing confidence in your code

00:19:03,039 --> 00:19:07,280
just like developing code is not

00:19:04,960 --> 00:19:08,080
committing it to master and walking away

00:19:07,280 --> 00:19:09,600
it is

00:19:08,080 --> 00:19:11,120
it is committing to master and then

00:19:09,600 --> 00:19:12,880
owning it until

00:19:11,120 --> 00:19:15,760
like it's sufficiently stable for your

00:19:12,880 --> 00:19:17,679
users uh

00:19:15,760 --> 00:19:19,520
if if your deploy this is the world

00:19:17,679 --> 00:19:23,280
exists in most managers minds

00:19:19,520 --> 00:19:24,559
it's a lovely world not the real one

00:19:23,280 --> 00:19:26,559
but instead we have continuous

00:19:24,559 --> 00:19:30,000
deployments and you know

00:19:26,559 --> 00:19:34,080
rolling releases and feature flags

00:19:30,000 --> 00:19:39,919
and cherry picks and rollbacks and

00:19:34,080 --> 00:19:39,919
failed rollbacks and the occasional uh

00:19:40,640 --> 00:19:44,880
yeah there we are and the occasional

00:19:43,120 --> 00:19:46,160
well i don't really know it's just kind

00:19:44,880 --> 00:19:48,799
of a mess and then

00:19:46,160 --> 00:19:51,440
on top of that we're like chaos monkey

00:19:48,799 --> 00:19:54,480
let's do some chaos engineering

00:19:51,440 --> 00:19:55,840
oh my god um we have to recognize that

00:19:54,480 --> 00:19:57,440
the development process extends

00:19:55,840 --> 00:19:59,039
way into production and not only that

00:19:57,440 --> 00:20:02,720
but the production

00:19:59,039 --> 00:20:05,440
system extends way into into development

00:20:02,720 --> 00:20:06,000
uh because anytime like a team uses a

00:20:05,440 --> 00:20:07,919
tool

00:20:06,000 --> 00:20:09,840
and another team is another tool like

00:20:07,919 --> 00:20:13,360
those tool boundaries are what create

00:20:09,840 --> 00:20:14,480
silos and i i'm so sick of like having a

00:20:13,360 --> 00:20:15,600
tool set that you use while you're

00:20:14,480 --> 00:20:16,880
developing and then

00:20:15,600 --> 00:20:19,200
you're in a whole new land with

00:20:16,880 --> 00:20:21,679
production and that's not okay

00:20:19,200 --> 00:20:22,960
uh you should feel comfortable there

00:20:21,679 --> 00:20:25,200
they should these should be the

00:20:22,960 --> 00:20:27,039
same tool sets knitting together like

00:20:25,200 --> 00:20:28,240
the beginning and and the later stages

00:20:27,039 --> 00:20:30,640
of your code

00:20:28,240 --> 00:20:32,000
because uh no two tools are going to

00:20:30,640 --> 00:20:33,840
agree on reality

00:20:32,000 --> 00:20:36,080
and so if you're if you're not using the

00:20:33,840 --> 00:20:36,799
same tools you're not going to agree on

00:20:36,080 --> 00:20:37,840
reality

00:20:36,799 --> 00:20:41,039
and this is just going to lead to

00:20:37,840 --> 00:20:42,480
conflict um

00:20:41,039 --> 00:20:44,480
all right you want to gain confidence in

00:20:42,480 --> 00:20:47,360
your code and that means

00:20:44,480 --> 00:20:48,559
and that means that means watching it it

00:20:47,360 --> 00:20:49,760
means having the tooling to look at

00:20:48,559 --> 00:20:53,600
what's actually happening

00:20:49,760 --> 00:20:56,480
and it means showing some curiosity

00:20:53,600 --> 00:20:56,960
this may seem remedial um but i will say

00:20:56,480 --> 00:21:00,480
it again

00:20:56,960 --> 00:21:02,400
staging is not pride you can't clone the

00:21:00,480 --> 00:21:05,840
data usually for security reasons

00:21:02,400 --> 00:21:08,799
you can't spin up a copy of it um

00:21:05,840 --> 00:21:09,840
and yet we have to make some kind of

00:21:08,799 --> 00:21:10,559
declaration of what we're going to do

00:21:09,840 --> 00:21:12,480
with it right

00:21:10,559 --> 00:21:14,400
so what should we do for how should we

00:21:12,480 --> 00:21:18,400
test before prod and what should we

00:21:14,400 --> 00:21:22,400
test after prod let's see

00:21:18,400 --> 00:21:24,640
test before prod the basics right

00:21:22,400 --> 00:21:25,520
all of your known unknowns doesn't work

00:21:24,640 --> 00:21:27,760
it doesn't run

00:21:25,520 --> 00:21:29,200
does it fail in the ways the library of

00:21:27,760 --> 00:21:30,000
things that i can predict that i built

00:21:29,200 --> 00:21:31,760
up

00:21:30,000 --> 00:21:33,360
to fail in the ways that it's previously

00:21:31,760 --> 00:21:34,480
failed this is what

00:21:33,360 --> 00:21:35,450
some people think of when they say

00:21:34,480 --> 00:21:37,679
testing um

00:21:35,450 --> 00:21:41,120
[Music]

00:21:37,679 --> 00:21:41,120
but then there's all this other stuff

00:21:41,280 --> 00:21:46,640
right like experiments

00:21:44,320 --> 00:21:47,919
edge cases canaries progressive

00:21:46,640 --> 00:21:51,520
deployments

00:21:47,919 --> 00:21:54,960
um data migrations

00:21:51,520 --> 00:21:58,159
uh load tests i know i know of more than

00:21:54,960 --> 00:22:00,880
two people who run a continuous 20 load

00:21:58,159 --> 00:22:02,880
test on their systems

00:22:00,880 --> 00:22:04,559
whenever they run out of room they have

00:22:02,880 --> 00:22:07,200
20 to like

00:22:04,559 --> 00:22:10,000
turn off and and buy them some time

00:22:07,200 --> 00:22:10,000
that's a great idea

00:22:11,039 --> 00:22:14,559
uh it also like helps them find uh

00:22:13,280 --> 00:22:18,480
scaling edges

00:22:14,559 --> 00:22:22,159
really nicely um

00:22:18,480 --> 00:22:23,600
yeah more reasons

00:22:22,159 --> 00:22:25,360
chaos engineering outside of prod

00:22:23,600 --> 00:22:26,720
doesn't even make any sense

00:22:25,360 --> 00:22:29,360
i don't know i'm not really a big fan of

00:22:26,720 --> 00:22:33,440
chaos engineering i think it's just like

00:22:29,360 --> 00:22:33,440
operations but it's a new branding

00:22:34,880 --> 00:22:38,720
by the way if you are doing chaos

00:22:36,960 --> 00:22:39,679
engineering and you do not have

00:22:38,720 --> 00:22:42,080
observability

00:22:39,679 --> 00:22:43,600
the kind i was talking about you're not

00:22:42,080 --> 00:22:46,880
chaos engineering you're just

00:22:43,600 --> 00:22:49,440
chaosing just be clear

00:22:46,880 --> 00:22:50,400
um beta programs where customers can try

00:22:49,440 --> 00:22:53,360
new features

00:22:50,400 --> 00:22:54,559
facebook has a really robust way of

00:22:53,360 --> 00:22:56,720
rolling out changes where

00:22:54,559 --> 00:22:57,919
as soon as you committed it would you

00:22:56,720 --> 00:23:00,640
know merge to

00:22:57,919 --> 00:23:01,760
call the sandcastle spin up a whole

00:23:00,640 --> 00:23:04,400
isolated you know

00:23:01,760 --> 00:23:06,320
testing environment run days worth of

00:23:04,400 --> 00:23:09,760
tests against them

00:23:06,320 --> 00:23:12,640
and then build an artifact and then um

00:23:09,760 --> 00:23:14,159
and then it would deploy it first to a

00:23:12,640 --> 00:23:16,559
small section of

00:23:14,159 --> 00:23:17,840
brazil not sure what brazil ever did to

00:23:16,559 --> 00:23:20,400
them but

00:23:17,840 --> 00:23:22,159
brazil was and then it would slowly you

00:23:20,400 --> 00:23:23,520
know graduate to more and more of brazil

00:23:22,159 --> 00:23:24,720
and then like more of south america and

00:23:23,520 --> 00:23:26,960
then like more all over the world

00:23:24,720 --> 00:23:27,840
it took a few days for a deploy to go

00:23:26,960 --> 00:23:31,200
fully out

00:23:27,840 --> 00:23:32,799
and they would have dozens of versions

00:23:31,200 --> 00:23:34,640
of flight at any given time

00:23:32,799 --> 00:23:36,880
and this was really terrifying to me at

00:23:34,640 --> 00:23:38,320
first and then i realized that with high

00:23:36,880 --> 00:23:40,320
cardinality tooling

00:23:38,320 --> 00:23:42,159
it's not you can just break down my

00:23:40,320 --> 00:23:44,640
build id it's really nice be able to

00:23:42,159 --> 00:23:44,640
compare them

00:23:45,760 --> 00:23:48,080
deploys are often the tip of the spear

00:23:47,279 --> 00:23:50,559
when it comes to getting software

00:23:48,080 --> 00:23:53,279
engineers to do stuff in prod

00:23:50,559 --> 00:23:54,640
for obvious reasons so if you're looking

00:23:53,279 --> 00:23:56,320
for some place to start

00:23:54,640 --> 00:23:57,600
i recommend that like everybody should

00:23:56,320 --> 00:23:59,200
be curious about what happens to their

00:23:57,600 --> 00:24:02,559
code when it hits users right

00:23:59,200 --> 00:24:02,559
how many of you here have root

00:24:03,600 --> 00:24:07,760
how many of you deploy your own code

00:24:08,400 --> 00:24:11,039
nice how many of you think i'm

00:24:09,520 --> 00:24:13,520
absolutely insane and wrong about

00:24:11,039 --> 00:24:13,520
everything

00:24:13,919 --> 00:24:22,400
oh you liars got to be some of you here

00:24:19,120 --> 00:24:23,279
uh there are some areas where you do

00:24:22,400 --> 00:24:25,760
want to be paranoid

00:24:23,279 --> 00:24:27,440
um uh the closer you get to the data

00:24:25,760 --> 00:24:30,159
like laying bits down on disk

00:24:27,440 --> 00:24:31,360
um the more paranoid you should be and i

00:24:30,159 --> 00:24:33,279
come from the database side of the house

00:24:31,360 --> 00:24:34,640
right and i have written a piece of code

00:24:33,279 --> 00:24:37,360
three times for three different

00:24:34,640 --> 00:24:39,440
databases that all it does is sniff 24

00:24:37,360 --> 00:24:41,840
hours worth of production traffic

00:24:39,440 --> 00:24:43,600
uh for a shard or a replica or whatever

00:24:41,840 --> 00:24:44,720
and then take it offline and then you

00:24:43,600 --> 00:24:46,799
can replay it

00:24:44,720 --> 00:24:48,080
and like adjust the concurrency levels

00:24:46,799 --> 00:24:49,440
and this sort of thing

00:24:48,080 --> 00:24:50,880
and i have done that every time i've had

00:24:49,440 --> 00:24:51,760
to do a major version upgrade from a

00:24:50,880 --> 00:24:54,799
database

00:24:51,760 --> 00:24:58,240
and i every time i have gone oh my god

00:24:54,799 --> 00:24:59,840
i cannot imagine how up sorry how

00:24:58,240 --> 00:25:02,400
how screwed i would have been if i had

00:24:59,840 --> 00:25:05,679
not done this

00:25:02,400 --> 00:25:09,760
like databases are terrifying um

00:25:05,679 --> 00:25:12,799
but if you aren't a database person um

00:25:09,760 --> 00:25:14,559
there's basically no reason to do that

00:25:12,799 --> 00:25:16,000
some other terrifying things to do are

00:25:14,559 --> 00:25:18,000
um like rewrites

00:25:16,000 --> 00:25:19,120
right uh doing a rewrite from one

00:25:18,000 --> 00:25:21,120
language to another is

00:25:19,120 --> 00:25:22,880
justifiably terrifying uh so you might

00:25:21,120 --> 00:25:25,919
want to do something like um

00:25:22,880 --> 00:25:26,880
like team so this is like the request

00:25:25,919 --> 00:25:28,320
comes in

00:25:26,880 --> 00:25:30,080
um and instead of just hitting an app

00:25:28,320 --> 00:25:32,240
server it hits a splitter

00:25:30,080 --> 00:25:33,600
and the splitter goes to a version of

00:25:32,240 --> 00:25:34,400
the old api server and a version of the

00:25:33,600 --> 00:25:37,440
new one

00:25:34,400 --> 00:25:38,720
diffs the result and returns the old api

00:25:37,440 --> 00:25:40,640
server

00:25:38,720 --> 00:25:41,600
result to the user so they don't see

00:25:40,640 --> 00:25:42,080
anything different but you can just like

00:25:41,600 --> 00:25:44,559
review

00:25:42,080 --> 00:25:46,640
like all of the drift and then you can

00:25:44,559 --> 00:25:48,799
actually daisy chain two of those

00:25:46,640 --> 00:25:50,799
if you're doing testing mutating data

00:25:48,799 --> 00:25:52,559
endpoints

00:25:50,799 --> 00:25:55,600
that's pretty cool although don't

00:25:52,559 --> 00:25:58,159
rewrite if you don't have to

00:25:55,600 --> 00:25:59,840
anyway test and staging i mean i'm not

00:25:58,159 --> 00:26:02,799
gonna get super religious about this

00:25:59,840 --> 00:26:02,799
you can if you want to

00:26:03,600 --> 00:26:08,240
but uh you know i feel like we have a

00:26:07,200 --> 00:26:12,640
very

00:26:08,240 --> 00:26:12,640
low standard for for our tools

00:26:12,720 --> 00:26:15,760
how many of us have had just a wall of

00:26:14,080 --> 00:26:16,559
green dashboards while users are

00:26:15,760 --> 00:26:20,480
complaining

00:26:16,559 --> 00:26:23,679
loudly everyone

00:26:20,480 --> 00:26:26,080
uh i guarantee you don't have zero

00:26:23,679 --> 00:26:26,080
problems

00:26:26,720 --> 00:26:30,720
anyway some of the real risks like i was

00:26:28,640 --> 00:26:32,000
saying um

00:26:30,720 --> 00:26:33,360
you could expose some security

00:26:32,000 --> 00:26:34,880
vulnerabilities you need to think

00:26:33,360 --> 00:26:36,480
carefully about name spacing if you're

00:26:34,880 --> 00:26:38,000
going to run continuous

00:26:36,480 --> 00:26:40,159
say load tests along with your regular

00:26:38,000 --> 00:26:41,360
traffic you're going to want to wait to

00:26:40,159 --> 00:26:44,400
reap it

00:26:41,360 --> 00:26:46,320
delete the data expire it end-to-end

00:26:44,400 --> 00:26:49,279
checks

00:26:46,320 --> 00:26:50,799
tenancy issues app could die you could

00:26:49,279 --> 00:26:52,320
saturate a resource although you could

00:26:50,799 --> 00:26:53,279
arguably say that this is a good thing

00:26:52,320 --> 00:26:54,559
because you would find out that you're

00:26:53,279 --> 00:26:55,919
going to saturate the resource you just

00:26:54,559 --> 00:26:58,400
turn it off

00:26:55,919 --> 00:27:00,880
um chaos does tend to cascade so there

00:26:58,400 --> 00:27:03,279
is that

00:27:00,880 --> 00:27:05,120
and and much like you know martin fowler

00:27:03,279 --> 00:27:09,039
said about microservices if you're not

00:27:05,120 --> 00:27:11,840
this tall you should not ride this ride

00:27:09,039 --> 00:27:11,840
same applies

00:27:12,240 --> 00:27:15,840
but the cardinal rule here is not that

00:27:14,159 --> 00:27:18,480
nothing can break

00:27:15,840 --> 00:27:20,799
all kinds of things can break it is

00:27:18,480 --> 00:27:23,600
fantastic how many things can break

00:27:20,799 --> 00:27:24,720
before you have to care uh because the

00:27:23,600 --> 00:27:27,840
cognitive rule is just

00:27:24,720 --> 00:27:30,159
a user can't notice do you know how much

00:27:27,840 --> 00:27:32,240
stuff can break before a user has to

00:27:30,159 --> 00:27:34,159
notice it is glorious

00:27:32,240 --> 00:27:35,679
and this is a fun this is a fun way to

00:27:34,159 --> 00:27:36,559
kill a month or two just like see what

00:27:35,679 --> 00:27:38,000
all you can break

00:27:36,559 --> 00:27:39,520
how much can you break before anyone

00:27:38,000 --> 00:27:40,320
actually has to notice probably more

00:27:39,520 --> 00:27:43,120
than you think

00:27:40,320 --> 00:27:43,440
like because reliability like one of the

00:27:43,120 --> 00:27:45,919
my

00:27:43,440 --> 00:27:46,799
my life missions is is to make this a

00:27:45,919 --> 00:27:48,559
profession where

00:27:46,799 --> 00:27:49,840
every engineer can be on call and

00:27:48,559 --> 00:27:52,320
support their code

00:27:49,840 --> 00:27:53,520
and it doesn't suck right it shouldn't

00:27:52,320 --> 00:27:55,120
be life impacting

00:27:53,520 --> 00:27:57,200
it shouldn't be something you have to

00:27:55,120 --> 00:27:59,360
plan around or that wakes you up

00:27:57,200 --> 00:28:01,520
you should be over 40 and be totally

00:27:59,360 --> 00:28:03,760
happy to support your code and prod

00:28:01,520 --> 00:28:05,600
and this is a this is an achievable

00:28:03,760 --> 00:28:06,240
mission i have seen it achieved i've

00:28:05,600 --> 00:28:09,760
done it

00:28:06,240 --> 00:28:12,799
it is not pie in the sky it's not crazy

00:28:09,760 --> 00:28:14,880
but it does require getting used to

00:28:12,799 --> 00:28:16,320
dealing with failure

00:28:14,880 --> 00:28:18,000
the way that we get to this glorious

00:28:16,320 --> 00:28:19,360
place is not that we make things break

00:28:18,000 --> 00:28:20,640
less because that's just never going to

00:28:19,360 --> 00:28:22,159
happen

00:28:20,640 --> 00:28:23,760
it's we make it so that lots of things

00:28:22,159 --> 00:28:27,039
can break

00:28:23,760 --> 00:28:30,159
without it impacting our users i i find

00:28:27,039 --> 00:28:34,240
this a very optimistic worldview

00:28:30,159 --> 00:28:36,480
right people differ

00:28:34,240 --> 00:28:37,679
also builder use it is now completely

00:28:36,480 --> 00:28:39,520
possible you know if

00:28:37,679 --> 00:28:41,600
even like five years ago if you left

00:28:39,520 --> 00:28:42,960
google or facebook and

00:28:41,600 --> 00:28:44,960
you kind of went out into the real world

00:28:42,960 --> 00:28:47,360
went whoa i'm really like

00:28:44,960 --> 00:28:49,120
flying without a net here there is no

00:28:47,360 --> 00:28:50,640
tool chain that is anywhere near like

00:28:49,120 --> 00:28:54,000
what i'm used to dealing with

00:28:50,640 --> 00:28:56,720
um you can really you can put together

00:28:54,000 --> 00:28:58,480
a pretty good composable set of like a

00:28:56,720 --> 00:29:00,720
google-ish or facebook-ish

00:28:58,480 --> 00:29:02,880
pipeline using tools like this feature

00:29:00,720 --> 00:29:05,919
flags high cardinality tooling

00:29:02,880 --> 00:29:07,679
shadowing systems etc and by the way

00:29:05,919 --> 00:29:09,600
please don't build your own and i don't

00:29:07,679 --> 00:29:12,799
just say this because i'm a vendor

00:29:09,600 --> 00:29:15,760
i say this because it's it's

00:29:12,799 --> 00:29:15,760
it's stupid

00:29:16,240 --> 00:29:20,960
so many swear words tip of my tongue it

00:29:19,360 --> 00:29:22,320
is stupid it's monumental

00:29:20,960 --> 00:29:24,080
unless you have infinite engineering

00:29:22,320 --> 00:29:24,799
hours in which case be my guest but like

00:29:24,080 --> 00:29:26,159
who does

00:29:24,799 --> 00:29:28,799
i assume you don't i assume you have

00:29:26,159 --> 00:29:32,799
better things to do with your life

00:29:28,799 --> 00:29:35,679
support the ecosystem be less afraid

00:29:32,799 --> 00:29:36,880
right these are safety nets bring your

00:29:35,679 --> 00:29:38,159
designer into

00:29:36,880 --> 00:29:40,720
next time when you're working on your on

00:29:38,159 --> 00:29:43,360
your deploy code ask your designer

00:29:40,720 --> 00:29:44,240
how how we can make things that are easy

00:29:43,360 --> 00:29:46,399
um

00:29:44,240 --> 00:29:47,279
that are safe easy right and things that

00:29:46,399 --> 00:29:50,799
are dangerous

00:29:47,279 --> 00:29:52,799
hard they're really good at that um

00:29:50,799 --> 00:29:54,320
and we have for too long we have been

00:29:52,799 --> 00:29:55,279
building systems for engineers instead

00:29:54,320 --> 00:29:56,720
of humans

00:29:55,279 --> 00:29:58,240
engineers are not who you want to build

00:29:56,720 --> 00:29:59,440
for human beings are who you want to

00:29:58,240 --> 00:30:00,799
build for

00:29:59,440 --> 00:30:04,880
remember that whoever uses it is going

00:30:00,799 --> 00:30:08,000
to be 4 am and probably drunk

00:30:04,880 --> 00:30:10,080
be less afraid but the only

00:30:08,000 --> 00:30:11,679
real way to be less afraid is to get

00:30:10,080 --> 00:30:13,120
used to playing in production

00:30:11,679 --> 00:30:15,120
to just get used to breaking it and

00:30:13,120 --> 00:30:16,399
fixing it and breaking it and fixing it

00:30:15,120 --> 00:30:17,360
and realizing that the world keeps on

00:30:16,399 --> 00:30:18,320
spinning and everything's going to be

00:30:17,360 --> 00:30:20,159
okay

00:30:18,320 --> 00:30:21,679
failure's not rare no way to make it

00:30:20,159 --> 00:30:22,640
rare nobody has yet figured out how to

00:30:21,679 --> 00:30:23,840
make it rare

00:30:22,640 --> 00:30:26,640
it's probably not going to happen for

00:30:23,840 --> 00:30:29,039
you but production does not have to be

00:30:26,640 --> 00:30:29,039
scary

00:30:30,960 --> 00:30:35,039
failures when not if so does everyone on

00:30:34,399 --> 00:30:37,039
your team

00:30:35,039 --> 00:30:38,799
everyone who has the ability to merge to

00:30:37,039 --> 00:30:40,880
master

00:30:38,799 --> 00:30:42,320
should know what normal looks like if

00:30:40,880 --> 00:30:43,760
you only look at your system when things

00:30:42,320 --> 00:30:45,600
are down

00:30:43,760 --> 00:30:47,440
you don't know what normal looks like

00:30:45,600 --> 00:30:48,799
your intuition has not been correctly

00:30:47,440 --> 00:30:50,000
fed

00:30:48,799 --> 00:30:51,200
if you don't know how to deploy and roll

00:30:50,000 --> 00:30:52,480
back if you don't know how to get to a

00:30:51,200 --> 00:30:54,559
known good state before you have to

00:30:52,480 --> 00:30:56,480
escalate you're going to be terrified

00:30:54,559 --> 00:30:58,880
if you don't know how to roll out slowly

00:30:56,480 --> 00:31:02,240
and under controlled circumstances and

00:30:58,880 --> 00:31:03,600
you know how how to ship scary changes

00:31:02,240 --> 00:31:04,799
how to debug your code in production

00:31:03,600 --> 00:31:05,600
then you are going to be terrified and

00:31:04,799 --> 00:31:07,279
you should be

00:31:05,600 --> 00:31:08,880
so just learn those things you learn

00:31:07,279 --> 00:31:11,600
it's not that hard

00:31:08,880 --> 00:31:13,120
and then tonight we can test some

00:31:11,600 --> 00:31:14,559
products

00:31:13,120 --> 00:31:19,840
all right i think that's it yep that's

00:31:14,559 --> 00:31:19,840
it sweet thank you so much

00:31:28,880 --> 00:31:35,039
20 seconds left

00:31:32,000 --> 00:31:37,120
oh yeah you're doing quite well not bad

00:31:35,039 --> 00:31:39,440
not bad we've got some pieces of eight

00:31:37,120 --> 00:31:39,440
for you

00:31:40,480 --> 00:31:47,200
exactly presents yeah thank you very

00:31:44,200 --> 00:31:47,200

YouTube URL: https://www.youtube.com/watch?v=b2oota_FhGY


