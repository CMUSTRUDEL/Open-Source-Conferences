Title: EuRuKo 2019: Making Tech Documentation Better, Easier, And Less Boring by Bilawal Maheed
Publication date: 2021-01-19
Playlist: EuRuKo 2019
Description: 
	How We’re Making Tech Documentation Better, Easier, And Less Boring

Engineers optimize for scale. We think about writing the “best” code, designing non-flaky tests to give us confidence, and adopting the latest and greatest - but why do we still fail to write, maintain, and improve our docs? Given we all rely on docs, what went wrong?

Bilawal Maheed - https://twitter.com/bilawalhameed
EuRuKo 2019
Captions: 
	00:00:05,759 --> 00:00:10,400
let's move on

00:00:06,720 --> 00:00:13,759
to our next speaker bill

00:00:10,400 --> 00:00:17,039
dev at uh spotify

00:00:13,759 --> 00:00:20,080
big fan big fan of uh dev happiness

00:00:17,039 --> 00:00:20,720
i i am a big fan of well deaf happiness

00:00:20,080 --> 00:00:24,800
that's

00:00:20,720 --> 00:00:24,800
my happiness i like my happiness

00:00:25,279 --> 00:00:30,160
quite a buccaneer himself he's a

00:00:28,320 --> 00:00:31,359
developer avocado and he's here to talk

00:00:30,160 --> 00:00:33,600
to us today and

00:00:31,359 --> 00:00:34,800
we are super thankful so let's give a

00:00:33,600 --> 00:00:35,560
warm welcome

00:00:34,800 --> 00:00:42,840
to bill

00:00:35,560 --> 00:00:45,680
[Applause]

00:00:42,840 --> 00:00:46,239
oh having a slot before a break is

00:00:45,680 --> 00:00:48,239
always a

00:00:46,239 --> 00:00:49,280
dangerous territory but i'll try my best

00:00:48,239 --> 00:00:50,079
it's been a while since i've given a

00:00:49,280 --> 00:00:52,160
talk but um

00:00:50,079 --> 00:00:53,760
yeah i'm excited thank you for having me

00:00:52,160 --> 00:00:55,199
um so yeah i want to talk today about

00:00:53,760 --> 00:00:57,440
how spotify is making

00:00:55,199 --> 00:00:58,640
internal documentation better easy and

00:00:57,440 --> 00:01:00,399
less boring um

00:00:58,640 --> 00:01:02,640
i mean i work a lot with documentation

00:01:00,399 --> 00:01:04,479
i've worked as a developer advocate and

00:01:02,640 --> 00:01:05,680
also build apis et cetera so

00:01:04,479 --> 00:01:06,799
documentation has kind of been at the

00:01:05,680 --> 00:01:08,159
heart of everything i do

00:01:06,799 --> 00:01:09,840
but to be fair it's probably at the

00:01:08,159 --> 00:01:12,400
heart of what everyone does we all rely

00:01:09,840 --> 00:01:14,880
on documentation right

00:01:12,400 --> 00:01:16,240
um cool and this is very much around

00:01:14,880 --> 00:01:17,840
technical documentation this is not

00:01:16,240 --> 00:01:18,159
about your vacation policies none of

00:01:17,840 --> 00:01:21,200
that

00:01:18,159 --> 00:01:22,720
so just just to be clear uh cool so i

00:01:21,200 --> 00:01:24,400
might as well start with introduction um

00:01:22,720 --> 00:01:26,320
even though i was introduced i

00:01:24,400 --> 00:01:28,159
kind of already added these uh my name

00:01:26,320 --> 00:01:29,840
is bill i live in um

00:01:28,159 --> 00:01:31,360
well i'll slav i'm a software engineer

00:01:29,840 --> 00:01:32,880
at spyfy

00:01:31,360 --> 00:01:34,560
i'm originally from manchester england

00:01:32,880 --> 00:01:35,759
although my accent is kind of messed up

00:01:34,560 --> 00:01:38,000
these days

00:01:35,759 --> 00:01:40,240
and i currently live in stockholm sweden

00:01:38,000 --> 00:01:43,280
has anyone here been to sweden

00:01:40,240 --> 00:01:45,360
okay cool then you know how uh utopia of

00:01:43,280 --> 00:01:47,280
a country is is pretty amazing

00:01:45,360 --> 00:01:49,040
uh cool i and also i used to be a

00:01:47,280 --> 00:01:49,840
developer advocate and uh i used to work

00:01:49,040 --> 00:01:52,159
a lot with rails

00:01:49,840 --> 00:01:53,600
which is one of the reasons why i'm here

00:01:52,159 --> 00:01:54,799
cool so i want to often

00:01:53,600 --> 00:01:56,880
tell you a little bit about what this

00:01:54,799 --> 00:01:58,159
talk is um

00:01:56,880 --> 00:01:59,759
first of all it's a new talk it's the

00:01:58,159 --> 00:02:00,799
first time i've given it uh it's been a

00:01:59,759 --> 00:02:03,520
while as i mentioned

00:02:00,799 --> 00:02:04,880
that i've given a talk so bear with me

00:02:03,520 --> 00:02:06,159
uh

00:02:04,880 --> 00:02:07,759
second one is it's about developer

00:02:06,159 --> 00:02:09,599
experience um hopefully it's applicable

00:02:07,759 --> 00:02:12,000
to everyone i'll try and

00:02:09,599 --> 00:02:12,720
put in some ruby related stuff as well

00:02:12,000 --> 00:02:13,840
but

00:02:12,720 --> 00:02:16,400
yeah it's very much general around

00:02:13,840 --> 00:02:18,640
developer experience and also yeah

00:02:16,400 --> 00:02:20,080
not super specific to ruby so if you

00:02:18,640 --> 00:02:22,400
work with other languages et cetera this

00:02:20,080 --> 00:02:23,760
should be applicable to you as well

00:02:22,400 --> 00:02:25,120
and then lastly it's an opportunity to

00:02:23,760 --> 00:02:26,720
knowledge here i think that's another

00:02:25,120 --> 00:02:28,239
reason why many people here is like just

00:02:26,720 --> 00:02:30,080
let's share knowledge let's

00:02:28,239 --> 00:02:31,680
uh let's work together on these kind of

00:02:30,080 --> 00:02:33,280
things

00:02:31,680 --> 00:02:34,800
cool uh i'll very quickly go over the

00:02:33,280 --> 00:02:36,879
structure so i'm going to start off with

00:02:34,800 --> 00:02:38,319
the problems uh some inspiration that

00:02:36,879 --> 00:02:39,599
we've kind of had and maybe things that

00:02:38,319 --> 00:02:41,040
we could have used to kind of

00:02:39,599 --> 00:02:42,640
help us improve our documentation

00:02:41,040 --> 00:02:45,200
culture at spotify

00:02:42,640 --> 00:02:46,080
uh the approach we ended up taking the

00:02:45,200 --> 00:02:48,560
impact we had

00:02:46,080 --> 00:02:49,200
uh or we were having and then some

00:02:48,560 --> 00:02:50,319
takeaways

00:02:49,200 --> 00:02:52,319
something that hopefully you should be

00:02:50,319 --> 00:02:53,120
able to remember if you remember

00:02:52,319 --> 00:02:55,920
something then

00:02:53,120 --> 00:02:57,519
that to me is a success uh cool so i'll

00:02:55,920 --> 00:02:59,920
start off with the problems

00:02:57,519 --> 00:03:00,959
so documentation isn't exactly a new

00:02:59,920 --> 00:03:02,640
problem i mean

00:03:00,959 --> 00:03:04,239
since software began we've always

00:03:02,640 --> 00:03:06,480
thought okay well let's document it

00:03:04,239 --> 00:03:08,000
before we used to have books for for one

00:03:06,480 --> 00:03:10,239
piece of software now we

00:03:08,000 --> 00:03:11,040
probably have just a read me uh for many

00:03:10,239 --> 00:03:12,640
projects

00:03:11,040 --> 00:03:14,080
um but it's something that people are

00:03:12,640 --> 00:03:15,760
always thinking about it's not it's not

00:03:14,080 --> 00:03:17,440
a new field

00:03:15,760 --> 00:03:19,040
i mean isn't it supposed to be easy to

00:03:17,440 --> 00:03:20,400
create uh if we think about all these

00:03:19,040 --> 00:03:22,560
different tools that we have

00:03:20,400 --> 00:03:23,760
uh for rubios we have jekyll as well

00:03:22,560 --> 00:03:26,000
even though that's not specific to

00:03:23,760 --> 00:03:29,200
documentation that's around static sites

00:03:26,000 --> 00:03:30,400
but and mainly a blog actually but the

00:03:29,200 --> 00:03:32,480
other tools are very much around

00:03:30,400 --> 00:03:33,840
documentation but um

00:03:32,480 --> 00:03:36,080
yeah i mean it's not supposed to make it

00:03:33,840 --> 00:03:37,840
easier i mean if you look in the world

00:03:36,080 --> 00:03:40,480
of of typescript as well

00:03:37,840 --> 00:03:41,840
you have tools like ts doc where if you

00:03:40,480 --> 00:03:43,920
add annotations to your code

00:03:41,840 --> 00:03:45,680
it generates documentation uh reference

00:03:43,920 --> 00:03:47,120
documentation for you automatically

00:03:45,680 --> 00:03:49,120
so you don't even have to write any

00:03:47,120 --> 00:03:50,480
comments or any sort of documentation no

00:03:49,120 --> 00:03:53,760
copy and pasting

00:03:50,480 --> 00:03:55,120
uh it just does it for you isn't it

00:03:53,760 --> 00:03:56,959
easier than ever it's supposed to

00:03:55,120 --> 00:03:58,560
supposed to be to publish documentation

00:03:56,959 --> 00:04:00,080
as well i mean if we look in the ruby

00:03:58,560 --> 00:04:02,560
world again it's like we have

00:04:00,080 --> 00:04:04,480
rubydoc and then obviously we have this

00:04:02,560 --> 00:04:06,159
where you just copy and paste github

00:04:04,480 --> 00:04:07,920
how many people have done this with

00:04:06,159 --> 00:04:10,879
their with their projects yeah

00:04:07,920 --> 00:04:13,439
okay so not so many anymore um but this

00:04:10,879 --> 00:04:15,280
used to be very popular

00:04:13,439 --> 00:04:16,560
and of of course we have the whole world

00:04:15,280 --> 00:04:17,919
of of tools as well

00:04:16,560 --> 00:04:19,600
um but these are very much designed

00:04:17,919 --> 00:04:21,680
around static websites but we just use

00:04:19,600 --> 00:04:23,520
them for documentation as well

00:04:21,680 --> 00:04:25,280
uh which isn't a bad thing but it's what

00:04:23,520 --> 00:04:26,639
we do today

00:04:25,280 --> 00:04:28,240
and these address many of the public

00:04:26,639 --> 00:04:29,360
needs the needs to brand your projects

00:04:28,240 --> 00:04:32,320
the needs to

00:04:29,360 --> 00:04:33,840
uh yeah like have fully fledged websites

00:04:32,320 --> 00:04:36,800
that explain not just

00:04:33,840 --> 00:04:39,759
uh how your system works or why why how

00:04:36,800 --> 00:04:41,040
you get started using your system

00:04:39,759 --> 00:04:42,960
but they don't address many internal

00:04:41,040 --> 00:04:45,919
needs and what i mean by this

00:04:42,960 --> 00:04:47,199
is things like ownership things like uh

00:04:45,919 --> 00:04:48,320
what's the history behind this project

00:04:47,199 --> 00:04:49,600
these are kind of things that

00:04:48,320 --> 00:04:51,120
you don't really expect so much on the

00:04:49,600 --> 00:04:51,840
open source project maybe on the big

00:04:51,120 --> 00:04:54,560
ones

00:04:51,840 --> 00:04:56,080
like react and rails etc but that i

00:04:54,560 --> 00:04:57,360
would consider them a small percentage

00:04:56,080 --> 00:04:58,400
of all the open source projects we

00:04:57,360 --> 00:05:00,320
depend on

00:04:58,400 --> 00:05:02,000
um so they don't actually address all

00:05:00,320 --> 00:05:03,360
the internal needs and

00:05:02,000 --> 00:05:05,199
and the reasons why you do open source

00:05:03,360 --> 00:05:05,840
documentation is different to the reason

00:05:05,199 --> 00:05:06,960
you do

00:05:05,840 --> 00:05:08,560
internal internally you do it because

00:05:06,960 --> 00:05:10,000
it's your job and you're paid to do it

00:05:08,560 --> 00:05:11,199
but externally you do it because you

00:05:10,000 --> 00:05:12,400
like open source and you want to help

00:05:11,199 --> 00:05:13,759
out with this project and

00:05:12,400 --> 00:05:15,440
you actually have a vested interest

00:05:13,759 --> 00:05:17,120
because you you can choose what you want

00:05:15,440 --> 00:05:19,280
right

00:05:17,120 --> 00:05:20,800
um but how doesn't how else does it

00:05:19,280 --> 00:05:22,639
match our internal needs

00:05:20,800 --> 00:05:25,039
um i mean we have many different places

00:05:22,639 --> 00:05:27,680
to do documentation today at spotify

00:05:25,039 --> 00:05:28,320
one of them is getting pages i mean

00:05:27,680 --> 00:05:29,520
people

00:05:28,320 --> 00:05:30,880
generally internally don't want

00:05:29,520 --> 00:05:33,039
documentation websites if you're

00:05:30,880 --> 00:05:34,880
building software internally

00:05:33,039 --> 00:05:35,919
you want to provide documentation but

00:05:34,880 --> 00:05:37,600
you don't want to build a whole site

00:05:35,919 --> 00:05:39,759
around it whereas externally

00:05:37,600 --> 00:05:40,720
of course i would love to do that that's

00:05:39,759 --> 00:05:44,800
it's pretty easy

00:05:40,720 --> 00:05:46,400
um so i think the the idea is that like

00:05:44,800 --> 00:05:48,000
they want to have documentation and then

00:05:46,400 --> 00:05:49,840
when they open source this project

00:05:48,000 --> 00:05:52,400
then they'll have a whole website and a

00:05:49,840 --> 00:05:54,320
bit more around it

00:05:52,400 --> 00:05:55,759
and i think the only people internally

00:05:54,320 --> 00:05:56,319
that might do this is infrastructure

00:05:55,759 --> 00:05:57,520
teams

00:05:56,319 --> 00:05:59,680
where they do need to sell their

00:05:57,520 --> 00:06:01,919
infrastructure internally but for

00:05:59,680 --> 00:06:02,880
everyone else it's really like not an

00:06:01,919 --> 00:06:04,880
interest for them

00:06:02,880 --> 00:06:06,720
so they don't use github pages and so in

00:06:04,880 --> 00:06:08,000
the end we have a small percentage of

00:06:06,720 --> 00:06:10,080
software spotify

00:06:08,000 --> 00:06:11,680
that actually uses github pages i think

00:06:10,080 --> 00:06:13,199
i can count like four that we still use

00:06:11,680 --> 00:06:14,800
today out of the many hundreds of

00:06:13,199 --> 00:06:16,479
systems we have

00:06:14,800 --> 00:06:18,639
um but then you could argue github in

00:06:16,479 --> 00:06:21,600
general right you have readmes you have

00:06:18,639 --> 00:06:22,720
wikis you have all that and yeah people

00:06:21,600 --> 00:06:24,720
are using that people are writing

00:06:22,720 --> 00:06:26,160
documentation but it's so outdated

00:06:24,720 --> 00:06:28,560
some documentation we have is all the

00:06:26,160 --> 00:06:31,360
way back at 2007 when spotify was

00:06:28,560 --> 00:06:33,120
still a baby um that's not really

00:06:31,360 --> 00:06:34,319
helpful today we've we've deprecated

00:06:33,120 --> 00:06:36,400
we're long gone

00:06:34,319 --> 00:06:37,919
uh but still it's there um so we end up

00:06:36,400 --> 00:06:39,440
having uh

00:06:37,919 --> 00:06:41,440
lots of content but it's not actually

00:06:39,440 --> 00:06:42,319
helpful um and i think that's a problem

00:06:41,440 --> 00:06:45,280
that

00:06:42,319 --> 00:06:46,880
is slowing us down as a as a company

00:06:45,280 --> 00:06:48,960
next is confluence which

00:06:46,880 --> 00:06:50,880
i again for many technical people this

00:06:48,960 --> 00:06:52,720
is clearly a no-brainer it's not really

00:06:50,880 --> 00:06:55,759
a solution for technical documentation

00:06:52,720 --> 00:06:56,639
but but for many companies they're

00:06:55,759 --> 00:06:58,720
actually doing this

00:06:56,639 --> 00:07:00,400
uh we already speak to other companies

00:06:58,720 --> 00:07:00,960
and they're like yeah confluence is for

00:07:00,400 --> 00:07:03,120
us

00:07:00,960 --> 00:07:05,280
um and and to me i was like that doesn't

00:07:03,120 --> 00:07:07,680
work for developers i'm but it it

00:07:05,280 --> 00:07:10,639
sounds so obvious but it's not so i

00:07:07,680 --> 00:07:12,800
wanted to clarify clarify that

00:07:10,639 --> 00:07:13,840
um and then the next one is like

00:07:12,800 --> 00:07:15,440
generally speaking

00:07:13,840 --> 00:07:17,039
uh when it comes to a company like

00:07:15,440 --> 00:07:17,599
spotify when things do move very fast

00:07:17,039 --> 00:07:19,120
and i'm sure

00:07:17,599 --> 00:07:21,280
many of you here have a similar culture

00:07:19,120 --> 00:07:22,479
in your companies it's very hard to get

00:07:21,280 --> 00:07:25,680
the work prioritized

00:07:22,479 --> 00:07:27,599
it's very much like uh build the code um

00:07:25,680 --> 00:07:29,520
and in the past we won't even have tests

00:07:27,599 --> 00:07:31,440
but then we're like okay let's add tests

00:07:29,520 --> 00:07:32,720
let's make sure everything's great but

00:07:31,440 --> 00:07:33,520
documentation will be on the last and

00:07:32,720 --> 00:07:34,800
you'll be

00:07:33,520 --> 00:07:36,800
you'll very much have the mentality that

00:07:34,800 --> 00:07:40,240
let's do documentation later

00:07:36,800 --> 00:07:42,080
or at least that's what we have um and

00:07:40,240 --> 00:07:43,680
it's just not working for us and and we

00:07:42,080 --> 00:07:44,800
end up ending up being in this position

00:07:43,680 --> 00:07:46,800
where people have to

00:07:44,800 --> 00:07:48,960
know an entire code base to be able to

00:07:46,800 --> 00:07:50,080
contribute and that slowing goes down a

00:07:48,960 --> 00:07:51,599
lot

00:07:50,080 --> 00:07:53,120
um and just to give you an idea like

00:07:51,599 --> 00:07:55,360
spotify kind of

00:07:53,120 --> 00:07:57,680
everyone refers to us as like the the

00:07:55,360 --> 00:08:01,280
company that's nailed agile

00:07:57,680 --> 00:08:03,360
but i mean in some ways yes but

00:08:01,280 --> 00:08:04,560
for us internally we had many different

00:08:03,360 --> 00:08:06,319
roles in the team it was very

00:08:04,560 --> 00:08:08,000
cross-functional

00:08:06,319 --> 00:08:09,759
if you look at this which probably is

00:08:08,000 --> 00:08:12,160
reflective of spoi from the early days

00:08:09,759 --> 00:08:13,120
where we had engineers qa who quality

00:08:12,160 --> 00:08:15,199
assurance

00:08:13,120 --> 00:08:16,639
tech writers and devops not every team

00:08:15,199 --> 00:08:17,520
would have a tech writer but let's just

00:08:16,639 --> 00:08:20,639
assume for this

00:08:17,520 --> 00:08:22,639
uh that they do um devops kind of been

00:08:20,639 --> 00:08:23,759
abstracted away with kubernetes and and

00:08:22,639 --> 00:08:27,199
google cloud store

00:08:23,759 --> 00:08:28,800
google cloud engine so we have all these

00:08:27,199 --> 00:08:30,160
abstractions away for devops so you

00:08:28,800 --> 00:08:30,639
don't need devops really in a team

00:08:30,160 --> 00:08:31,759
anymore

00:08:30,639 --> 00:08:35,360
engineers just need to learn a little

00:08:31,759 --> 00:08:36,640
bit more to configure those same with qa

00:08:35,360 --> 00:08:38,560
engineers would write stuff in the past

00:08:36,640 --> 00:08:39,039
and go well my job is to make stuff not

00:08:38,560 --> 00:08:41,680
really

00:08:39,039 --> 00:08:43,120
guarantee its accuracy or its quality

00:08:41,680 --> 00:08:44,399
and that's where qa came in they would

00:08:43,120 --> 00:08:46,880
do your work for you

00:08:44,399 --> 00:08:48,480
that's not really a thing anymore tdd

00:08:46,880 --> 00:08:51,120
and all these other aspects have

00:08:48,480 --> 00:08:52,080
really changed out so now engineers are

00:08:51,120 --> 00:08:55,440
required to

00:08:52,080 --> 00:08:58,080
write documentation uh so write tests

00:08:55,440 --> 00:08:58,800
uh i think a lot about documentation and

00:08:58,080 --> 00:09:00,720
then uh

00:08:58,800 --> 00:09:02,480
tech writer as well which is responsible

00:09:00,720 --> 00:09:03,519
for making sure that people know how to

00:09:02,480 --> 00:09:04,959
use your system people

00:09:03,519 --> 00:09:07,920
are using in the way that it's intended

00:09:04,959 --> 00:09:09,440
to um even that's slowly moving out but

00:09:07,920 --> 00:09:10,800
still i think it's the last thing in out

00:09:09,440 --> 00:09:14,480
of these four that's

00:09:10,800 --> 00:09:15,519
uh moving so in the end we end up having

00:09:14,480 --> 00:09:17,279
teams full of

00:09:15,519 --> 00:09:18,800
more engineers and less of the other

00:09:17,279 --> 00:09:20,080
roles so we end up becoming less

00:09:18,800 --> 00:09:22,240
cross-functional and just making

00:09:20,080 --> 00:09:23,519
engineers more t-shaped and that's kind

00:09:22,240 --> 00:09:24,800
of the culture that spotify is going

00:09:23,519 --> 00:09:25,279
towards and i'm sure other companies are

00:09:24,800 --> 00:09:27,360
as well

00:09:25,279 --> 00:09:28,959
um so now engineers have more

00:09:27,360 --> 00:09:30,880
responsibility but it's more there's

00:09:28,959 --> 00:09:32,880
more should be more engineers

00:09:30,880 --> 00:09:34,320
um but we may end up in a future where

00:09:32,880 --> 00:09:35,600
we don't have engineers with meta

00:09:34,320 --> 00:09:36,080
programming and software that writes

00:09:35,600 --> 00:09:38,000
software

00:09:36,080 --> 00:09:39,120
but let's go back to 2019 let's keep it

00:09:38,000 --> 00:09:41,600
simple

00:09:39,120 --> 00:09:42,720
um but yeah there's a lot of there's a

00:09:41,600 --> 00:09:43,680
lot of other issues but i kind of

00:09:42,720 --> 00:09:45,440
highlight the

00:09:43,680 --> 00:09:47,279
the main ones and i wanted to kind of

00:09:45,440 --> 00:09:49,120
sum them up as three core problems

00:09:47,279 --> 00:09:51,279
the first one is too high of a barrier

00:09:49,120 --> 00:09:52,959
so a lot of engineers find it

00:09:51,279 --> 00:09:54,480
difficult surprisingly to write good

00:09:52,959 --> 00:09:55,839
documentation despite the fact that we

00:09:54,480 --> 00:09:56,880
read it all the time

00:09:55,839 --> 00:09:59,279
we don't actually know what good

00:09:56,880 --> 00:10:01,680
documentation looks like for our code

00:09:59,279 --> 00:10:02,959
which is strange um i mean for me i've

00:10:01,680 --> 00:10:04,560
been working with documentation so long

00:10:02,959 --> 00:10:06,800
i feel like

00:10:04,560 --> 00:10:08,959
i have a different view on this but this

00:10:06,800 --> 00:10:10,399
is what we've been seeing from engineers

00:10:08,959 --> 00:10:12,160
second one is undiscoverable i think

00:10:10,399 --> 00:10:13,600
this is something we very much

00:10:12,160 --> 00:10:14,959
take for granted with google we just

00:10:13,600 --> 00:10:15,839
copy and paste our error codes we get

00:10:14,959 --> 00:10:18,000
our answer

00:10:15,839 --> 00:10:19,519
internally it's a different story if

00:10:18,000 --> 00:10:20,000
your company operates entirely open

00:10:19,519 --> 00:10:21,279
source

00:10:20,000 --> 00:10:23,360
this whole talk is probably not

00:10:21,279 --> 00:10:26,640
applicable to you but

00:10:23,360 --> 00:10:28,720
most companies don't so um

00:10:26,640 --> 00:10:30,560
and if we think about the first two as

00:10:28,720 --> 00:10:32,880
the first one being crane documentation

00:10:30,560 --> 00:10:34,720
the second one around uh consuming it

00:10:32,880 --> 00:10:36,880
the third one has to be maintaining it

00:10:34,720 --> 00:10:39,120
um and one thing we've seen is

00:10:36,880 --> 00:10:40,480
we define it as trust right uh if you're

00:10:39,120 --> 00:10:41,920
reading documentation how much do you

00:10:40,480 --> 00:10:43,839
trust it does it answer the problem

00:10:41,920 --> 00:10:45,360
you're having

00:10:43,839 --> 00:10:47,120
is it going to take more time away from

00:10:45,360 --> 00:10:48,640
you and

00:10:47,120 --> 00:10:49,839
kind of all these three problems end up

00:10:48,640 --> 00:10:50,399
with a poor and slow developer

00:10:49,839 --> 00:10:52,000
experience

00:10:50,399 --> 00:10:53,760
and this is something that for me

00:10:52,000 --> 00:10:55,680
personally i i don't like

00:10:53,760 --> 00:10:57,279
i like engineers to be very fast and

00:10:55,680 --> 00:11:00,160
very efficient

00:10:57,279 --> 00:11:01,600
and just have less frustrations really

00:11:00,160 --> 00:11:03,040
so yeah in 2019

00:11:01,600 --> 00:11:05,360
spotify's trying to solve this problem

00:11:03,040 --> 00:11:07,600
is something that uh in general spotify

00:11:05,360 --> 00:11:08,959
is trying to make engineers more

00:11:07,600 --> 00:11:10,560
effective is the right word more

00:11:08,959 --> 00:11:12,640
productive means more hours so we don't

00:11:10,560 --> 00:11:14,240
want that

00:11:12,640 --> 00:11:16,160
but we wanted you to be more effective

00:11:14,240 --> 00:11:17,760
um so we kind of pitched the idea of

00:11:16,160 --> 00:11:19,760
like solving this and trying to

00:11:17,760 --> 00:11:22,079
bring out some uh good engineers to

00:11:19,760 --> 00:11:23,760
solve this and as well as tech writers

00:11:22,079 --> 00:11:25,200
and uh yeah we're doing it and we've

00:11:23,760 --> 00:11:26,800
been doing it for six months and

00:11:25,200 --> 00:11:28,720
i'm gonna share our learnings um and

00:11:26,800 --> 00:11:30,240
hopefully if you have anything that

00:11:28,720 --> 00:11:32,320
you're doing in your company we can uh

00:11:30,240 --> 00:11:33,279
we can definitely learn from you as well

00:11:32,320 --> 00:11:34,399
so yeah um

00:11:33,279 --> 00:11:37,200
when we were thinking about this six

00:11:34,399 --> 00:11:38,720
months ago we were talking a lot about

00:11:37,200 --> 00:11:41,600
can we not just use another tool we

00:11:38,720 --> 00:11:44,640
don't want to necessarily write software

00:11:41,600 --> 00:11:46,720
despite the fact i like writing software

00:11:44,640 --> 00:11:47,680
the more product aspect of my mind

00:11:46,720 --> 00:11:50,959
thinks uh

00:11:47,680 --> 00:11:52,959
that's the last solution i mean the

00:11:50,959 --> 00:11:55,440
first one is obviously why don't we just

00:11:52,959 --> 00:11:56,959
enhance our use of github right and make

00:11:55,440 --> 00:11:58,480
this better maybe with better tooling

00:11:56,959 --> 00:12:01,040
using the apis et cetera

00:11:58,480 --> 00:12:03,279
um and this is something we we kind of

00:12:01,040 --> 00:12:04,800
we we bowed a lot against because github

00:12:03,279 --> 00:12:06,959
is a great tool but

00:12:04,800 --> 00:12:07,920
um and the one thing it does really well

00:12:06,959 --> 00:12:09,680
that we

00:12:07,920 --> 00:12:11,920
we ended up taking out of it was that

00:12:09,680 --> 00:12:14,399
it's uh if you look at the readme

00:12:11,920 --> 00:12:16,160
it's always close to the code right and

00:12:14,399 --> 00:12:17,600
this is how i think about test if your

00:12:16,160 --> 00:12:18,720
tests were in a different repository to

00:12:17,600 --> 00:12:20,480
your code

00:12:18,720 --> 00:12:22,160
you'd probably let almost never update

00:12:20,480 --> 00:12:25,200
your your tests

00:12:22,160 --> 00:12:26,480
uh it'd be a lot less likely but the

00:12:25,200 --> 00:12:27,600
same thing applies documentation some

00:12:26,480 --> 00:12:28,399
people have a documentation in a

00:12:27,600 --> 00:12:30,800
separate repo

00:12:28,399 --> 00:12:32,560
or in i don't know slack notes or google

00:12:30,800 --> 00:12:34,399
docs or somewhere else

00:12:32,560 --> 00:12:35,920
but um having it close to code i think

00:12:34,399 --> 00:12:38,639
is pretty pretty great

00:12:35,920 --> 00:12:39,920
um so that's something we took from it

00:12:38,639 --> 00:12:41,040
but the the reason why we didn't end up

00:12:39,920 --> 00:12:44,639
using it was that

00:12:41,040 --> 00:12:46,800
um we just weren't able to like

00:12:44,639 --> 00:12:47,760
experiment enough with it uh for example

00:12:46,800 --> 00:12:49,680
we wanted to

00:12:47,760 --> 00:12:50,959
add solve the idea of trust and

00:12:49,680 --> 00:12:52,720
maintainability

00:12:50,959 --> 00:12:54,079
and that was the one area where we

00:12:52,720 --> 00:12:56,720
didn't really uh

00:12:54,079 --> 00:12:58,079
we would struggle to find here but that

00:12:56,720 --> 00:12:59,200
being said i still think we could end up

00:12:58,079 --> 00:13:00,639
moving back to github

00:12:59,200 --> 00:13:03,680
this isn't like oh github will never

00:13:00,639 --> 00:13:05,120
solve our needs just for now really

00:13:03,680 --> 00:13:07,360
next one is library has anyone heard of

00:13:05,120 --> 00:13:09,120
library it's an open source project

00:13:07,360 --> 00:13:10,480
okay so this one was fairly recently

00:13:09,120 --> 00:13:11,920
released and this one is actually pretty

00:13:10,480 --> 00:13:13,360
interesting because what it does is it

00:13:11,920 --> 00:13:16,399
takes google docs

00:13:13,360 --> 00:13:17,600
and you put them in a shared folder and

00:13:16,399 --> 00:13:19,839
you can just search for it it kind of

00:13:17,600 --> 00:13:22,079
just categorizes it automatically

00:13:19,839 --> 00:13:23,920
this isn't really helpful for technical

00:13:22,079 --> 00:13:25,120
or rather api documentation but if you

00:13:23,920 --> 00:13:26,399
think about rfcs and

00:13:25,120 --> 00:13:28,639
these kind of stuff are very popular in

00:13:26,399 --> 00:13:30,560
companies and rightfully so

00:13:28,639 --> 00:13:33,680
how do we like take the great things out

00:13:30,560 --> 00:13:36,000
of this and apply it to what we're doing

00:13:33,680 --> 00:13:37,680
but the the one caveat with this is that

00:13:36,000 --> 00:13:39,440
documentation's not close to the code

00:13:37,680 --> 00:13:41,279
should rfcs be closer to the code should

00:13:39,440 --> 00:13:44,399
they be closer to like

00:13:41,279 --> 00:13:47,760
um the yeah the projects that you're

00:13:44,399 --> 00:13:49,440
working with always related to next is

00:13:47,760 --> 00:13:51,680
um

00:13:49,440 --> 00:13:53,199
is a tool called readme um and many

00:13:51,680 --> 00:13:56,800
people use this and main teams use this

00:13:53,199 --> 00:13:58,639
but um this is very much designed for uh

00:13:56,800 --> 00:14:00,720
an outwards facing product team like i

00:13:58,639 --> 00:14:02,399
used to work on developer spotify.com

00:14:00,720 --> 00:14:04,560
and this was a perfect candidate for

00:14:02,399 --> 00:14:06,320
this because we kind of collect

00:14:04,560 --> 00:14:08,399
all the tooling around internally at

00:14:06,320 --> 00:14:09,920
spotify and we make it available to

00:14:08,399 --> 00:14:12,480
developers

00:14:09,920 --> 00:14:13,440
but we're that one team internally there

00:14:12,480 --> 00:14:15,519
is no one team

00:14:13,440 --> 00:14:17,279
every team has their team has their

00:14:15,519 --> 00:14:19,199
software has their documentation

00:14:17,279 --> 00:14:21,120
um so this didn't really solve our needs

00:14:19,199 --> 00:14:23,760
either um

00:14:21,120 --> 00:14:24,639
so and i wanted to bring up this quote

00:14:23,760 --> 00:14:26,880
and i think it's so

00:14:24,639 --> 00:14:28,079
true um documentation is a love letter

00:14:26,880 --> 00:14:30,160
to your future self

00:14:28,079 --> 00:14:31,440
um but i wanna like amend this quote and

00:14:30,160 --> 00:14:32,480
say that good documentation is love

00:14:31,440 --> 00:14:34,079
letter to yourself

00:14:32,480 --> 00:14:36,399
bad documentation is a hate letter to

00:14:34,079 --> 00:14:39,279
your future self um

00:14:36,399 --> 00:14:39,920
but it's true it's very much true so

00:14:39,279 --> 00:14:41,120
yeah with that

00:14:39,920 --> 00:14:43,199
what is spoifer's approach to this

00:14:41,120 --> 00:14:44,639
problem um we're not trying to be

00:14:43,199 --> 00:14:46,240
necessarily radical we just want to

00:14:44,639 --> 00:14:49,279
solve this problem

00:14:46,240 --> 00:14:52,720
um has anyone heard of dark site code

00:14:49,279 --> 00:14:54,320
no okay um so dark side code is uh

00:14:52,720 --> 00:14:56,480
it's created by this lady or popularized

00:14:54,320 --> 00:14:58,720
by this lady called angental

00:14:56,480 --> 00:14:59,760
it's a really interesting book uh but it

00:14:58,720 --> 00:15:01,440
talks about like how

00:14:59,760 --> 00:15:02,959
not just having documentation in the

00:15:01,440 --> 00:15:04,800
same repository as your

00:15:02,959 --> 00:15:06,320
code but actually thinking of it like

00:15:04,800 --> 00:15:07,760
code having parts of it that are

00:15:06,320 --> 00:15:09,199
automated parts of it are generated

00:15:07,760 --> 00:15:10,320
testing the code samples

00:15:09,199 --> 00:15:12,000
very much making it part of the

00:15:10,320 --> 00:15:13,519
developer workflow and i think when we

00:15:12,000 --> 00:15:15,040
think of it like that

00:15:13,519 --> 00:15:17,120
when we edit card related to it we'll

00:15:15,040 --> 00:15:19,600
probably edit the documentation as well

00:15:17,120 --> 00:15:20,639
and and this is a cultural thing that um

00:15:19,600 --> 00:15:21,920
that will happen

00:15:20,639 --> 00:15:23,920
or something that we're trying to push

00:15:21,920 --> 00:15:25,120
out as well and google gave a great talk

00:15:23,920 --> 00:15:26,560
about this

00:15:25,120 --> 00:15:28,160
and how they've been adopting this

00:15:26,560 --> 00:15:30,079
mentality uh and

00:15:28,160 --> 00:15:31,680
and they use a tool internally called g3

00:15:30,079 --> 00:15:33,519
docs um

00:15:31,680 --> 00:15:34,800
and yeah it's working well very well for

00:15:33,519 --> 00:15:36,399
them

00:15:34,800 --> 00:15:38,000
so with that it kind of inspired us to

00:15:36,399 --> 00:15:39,440
build on this idea um

00:15:38,000 --> 00:15:41,040
and then we ended up building this tool

00:15:39,440 --> 00:15:41,759
it was called tech docs very unoriginal

00:15:41,040 --> 00:15:43,920
for spotify

00:15:41,759 --> 00:15:46,240
please forgive me um technical

00:15:43,920 --> 00:15:50,160
documentation tech docs uh but

00:15:46,240 --> 00:15:52,160
um we had to think of a name fast um

00:15:50,160 --> 00:15:53,680
so uh and it's pretty simple uh

00:15:52,160 --> 00:15:54,000
internally spotify we have a centralized

00:15:53,680 --> 00:15:56,800
tool

00:15:54,000 --> 00:15:57,680
called backstage very very applicable to

00:15:56,800 --> 00:16:00,240
music

00:15:57,680 --> 00:16:02,160
um and then we basically have this tool

00:16:00,240 --> 00:16:04,880
where documentation lives inside of it

00:16:02,160 --> 00:16:05,360
slash docs slash the the project name

00:16:04,880 --> 00:16:07,279
and

00:16:05,360 --> 00:16:08,720
we use open source projects for this so

00:16:07,279 --> 00:16:10,160
it's not entirely we don't we haven't

00:16:08,720 --> 00:16:12,880
built this whole thing

00:16:10,160 --> 00:16:14,959
um and then the other aspect which you

00:16:12,880 --> 00:16:16,480
may see here is this right hand bar

00:16:14,959 --> 00:16:18,399
or the the box or i haven't given it

00:16:16,480 --> 00:16:20,800
official name but um

00:16:18,399 --> 00:16:22,079
any suggestions would be welcome um it's

00:16:20,800 --> 00:16:24,959
very much integrated with software's

00:16:22,079 --> 00:16:25,440
soft spotify software ecosystem it's

00:16:24,959 --> 00:16:27,040
very

00:16:25,440 --> 00:16:28,560
well connected to git github how many

00:16:27,040 --> 00:16:29,279
issues are related to documentation we

00:16:28,560 --> 00:16:30,639
scan the

00:16:29,279 --> 00:16:32,880
issues and we detect which ones are

00:16:30,639 --> 00:16:34,399
documentation laid versus code related

00:16:32,880 --> 00:16:36,720
uh who are the people you can contact

00:16:34,399 --> 00:16:37,920
related to support which team owns it

00:16:36,720 --> 00:16:39,040
when was it last updated

00:16:37,920 --> 00:16:41,120
and we want to evolve this kind of

00:16:39,040 --> 00:16:43,920
experience to get people to like

00:16:41,120 --> 00:16:45,199
see this very much how you see code if

00:16:43,920 --> 00:16:48,160
you think about git blame and all these

00:16:45,199 --> 00:16:48,160
different workflows as well

00:16:49,040 --> 00:16:53,279
but why build our own solution why why

00:16:51,040 --> 00:16:54,880
even do this why not just

00:16:53,279 --> 00:16:56,880
uh why was it worth the effort to even

00:16:54,880 --> 00:16:58,639
try this um

00:16:56,880 --> 00:17:01,040
well i mean in reality we didn't we

00:16:58,639 --> 00:17:03,600
mostly didn't um we used mk docs

00:17:01,040 --> 00:17:04,240
docker our internal ci platform google

00:17:03,600 --> 00:17:06,319
cloud

00:17:04,240 --> 00:17:07,439
um kubernetes and we built this whole

00:17:06,319 --> 00:17:08,959
thing in a week

00:17:07,439 --> 00:17:11,039
and we've basically been spending all of

00:17:08,959 --> 00:17:11,600
our time with data rather than actually

00:17:11,039 --> 00:17:15,039
with

00:17:11,600 --> 00:17:16,559
uh web but it's still very interesting

00:17:15,039 --> 00:17:18,319
and there's a lot of web related aspects

00:17:16,559 --> 00:17:19,679
to this

00:17:18,319 --> 00:17:21,360
i mean this is a very much a high level

00:17:19,679 --> 00:17:23,039
view of how the system works

00:17:21,360 --> 00:17:24,559
i mean when when you're writing your

00:17:23,039 --> 00:17:25,520
dog's co your docs folder with your

00:17:24,559 --> 00:17:27,600
markdown

00:17:25,520 --> 00:17:29,280
um you just push your code normally and

00:17:27,600 --> 00:17:31,200
in our internal ci platform

00:17:29,280 --> 00:17:32,880
just checks is that docs folder if so

00:17:31,200 --> 00:17:34,720
run our code and then

00:17:32,880 --> 00:17:35,919
um it uploads it to google cloud storage

00:17:34,720 --> 00:17:37,679
your rendered site

00:17:35,919 --> 00:17:39,520
and then we basically read out from that

00:17:37,679 --> 00:17:41,919
and then we add some injection

00:17:39,520 --> 00:17:44,240
but very basic injection and we've

00:17:41,919 --> 00:17:46,080
optimized this so engineers can actually

00:17:44,240 --> 00:17:47,360
access our google cloud storage bucket

00:17:46,080 --> 00:17:50,559
without the need of

00:17:47,360 --> 00:17:52,880
our uh proxy so every engineer spotify

00:17:50,559 --> 00:17:54,320
has access to our gcs bucket and they

00:17:52,880 --> 00:17:55,520
can just read the documentation straight

00:17:54,320 --> 00:17:57,600
off the bat so we're

00:17:55,520 --> 00:17:59,280
we're almost abstracting away the need

00:17:57,600 --> 00:18:01,280
for the proxy but it's still there

00:17:59,280 --> 00:18:02,720
as an ex for now and it's something we

00:18:01,280 --> 00:18:03,200
we want to try out and see how that

00:18:02,720 --> 00:18:04,799
works

00:18:03,200 --> 00:18:07,600
especially for non-engineers and data

00:18:04,799 --> 00:18:09,280
scientists etc

00:18:07,600 --> 00:18:11,200
so yeah we want to evolve and experiment

00:18:09,280 --> 00:18:12,799
with documentation we want to

00:18:11,200 --> 00:18:15,360
make it constantly available we want to

00:18:12,799 --> 00:18:18,080
make it very informative we want

00:18:15,360 --> 00:18:19,039
engineers to know and and people to know

00:18:18,080 --> 00:18:20,960
how

00:18:19,039 --> 00:18:22,400
within seconds if this will solve your

00:18:20,960 --> 00:18:23,679
problem um

00:18:22,400 --> 00:18:26,000
especially in a company like spotify

00:18:23,679 --> 00:18:27,520
where this changes daily

00:18:26,000 --> 00:18:29,360
and here's a little bit about how we

00:18:27,520 --> 00:18:31,120
thought about it and how we are thinking

00:18:29,360 --> 00:18:33,039
about it um

00:18:31,120 --> 00:18:34,559
i mean if we think about it in these two

00:18:33,039 --> 00:18:36,320
uh areas

00:18:34,559 --> 00:18:38,160
standards being more of a cultural thing

00:18:36,320 --> 00:18:38,480
like how do we make engineers think

00:18:38,160 --> 00:18:40,799
about

00:18:38,480 --> 00:18:42,480
documentation as code and then the

00:18:40,799 --> 00:18:43,679
workflow which is a mixture of tooling

00:18:42,480 --> 00:18:45,440
and

00:18:43,679 --> 00:18:47,120
integrations and and those kind of

00:18:45,440 --> 00:18:48,559
things

00:18:47,120 --> 00:18:50,000
and the problems i mentioned earlier

00:18:48,559 --> 00:18:51,200
about to have a barrier undiscoverable

00:18:50,000 --> 00:18:53,200
and untrustworthy

00:18:51,200 --> 00:18:54,960
how can we use standards and workflow to

00:18:53,200 --> 00:18:57,280
solve these problems

00:18:54,960 --> 00:18:58,000
um hopefully that's not too confusing

00:18:57,280 --> 00:19:00,480
but

00:18:58,000 --> 00:19:01,120
um so let's break that down a little bit

00:19:00,480 --> 00:19:03,039
actually

00:19:01,120 --> 00:19:04,480
so with standards solving using that to

00:19:03,039 --> 00:19:06,160
solve too high of a barrier

00:19:04,480 --> 00:19:07,600
um we introduced this idea of two

00:19:06,160 --> 00:19:11,200
documentation types

00:19:07,600 --> 00:19:12,720
as spotify code which is not a new type

00:19:11,200 --> 00:19:14,480
it's very much how you use it today you

00:19:12,720 --> 00:19:16,640
have a docs folder and you have code

00:19:14,480 --> 00:19:18,400
but system documentation is is a fairly

00:19:16,640 --> 00:19:20,799
new thing and something that we realize

00:19:18,400 --> 00:19:22,000
not many of the companies do

00:19:20,799 --> 00:19:25,039
and just to give you a quick explanation

00:19:22,000 --> 00:19:27,039
of how this works we have our web api

00:19:25,039 --> 00:19:28,240
um if many of you many of you have used

00:19:27,039 --> 00:19:29,919
the spotify web api

00:19:28,240 --> 00:19:32,000
each part of the web api split onto its

00:19:29,919 --> 00:19:33,679
own service we have web api users tracks

00:19:32,000 --> 00:19:36,400
albums and and many more

00:19:33,679 --> 00:19:37,039
and these are operated as as code docs

00:19:36,400 --> 00:19:39,280
they have the

00:19:37,039 --> 00:19:40,880
code and they run in production and they

00:19:39,280 --> 00:19:42,480
have a docs folder and that describes

00:19:40,880 --> 00:19:43,840
that particular system

00:19:42,480 --> 00:19:45,360
but we have nothing that describes all

00:19:43,840 --> 00:19:46,240
of web api general things like

00:19:45,360 --> 00:19:49,039
authentication

00:19:46,240 --> 00:19:50,799
although those things and that's where

00:19:49,039 --> 00:19:51,280
we have the idea of system documentation

00:19:50,799 --> 00:19:53,520
where

00:19:51,280 --> 00:19:55,840
this is a repository a github repository

00:19:53,520 --> 00:19:58,080
just has a docs folder no code

00:19:55,840 --> 00:19:59,120
could do in the future and it operates

00:19:58,080 --> 00:20:01,760
as a system doc

00:19:59,120 --> 00:20:03,039
or system documentation and this works

00:20:01,760 --> 00:20:04,159
very well for us and a lot of people are

00:20:03,039 --> 00:20:06,080
using this

00:20:04,159 --> 00:20:07,440
and then we can use how they're linking

00:20:06,080 --> 00:20:08,159
out to these other ones to build up a

00:20:07,440 --> 00:20:12,240
graph

00:20:08,159 --> 00:20:12,240
of how documentation lives at spotify

00:20:12,320 --> 00:20:16,480
and using standards as well to solve

00:20:13,919 --> 00:20:18,240
discoverability um this is simple

00:20:16,480 --> 00:20:19,440
telling people to document concepts

00:20:18,240 --> 00:20:20,799
you'll be surprised how many people

00:20:19,440 --> 00:20:24,240
don't do this

00:20:20,799 --> 00:20:24,880
if you mention uh gcs or gke or api in

00:20:24,240 --> 00:20:26,400
your code

00:20:24,880 --> 00:20:28,000
if you don't describe what api is you

00:20:26,400 --> 00:20:29,840
don't have to write a full

00:20:28,000 --> 00:20:32,720
book on it but just link out to it say

00:20:29,840 --> 00:20:32,720
check out this particular

00:20:33,120 --> 00:20:36,559
this link to read more about it having

00:20:34,799 --> 00:20:37,360
references to the concepts you use in

00:20:36,559 --> 00:20:39,039
your code is

00:20:37,360 --> 00:20:40,640
is pretty critical because otherwise

00:20:39,039 --> 00:20:43,200
you're asking engineers to

00:20:40,640 --> 00:20:45,039
uh to google more rather than like just

00:20:43,200 --> 00:20:49,120
taking them straight to the answer

00:20:45,039 --> 00:20:50,480
and that makes people slower

00:20:49,120 --> 00:20:53,039
even more so if they don't find what

00:20:50,480 --> 00:20:56,240
they're looking for

00:20:53,039 --> 00:20:56,799
and the next one um sorry the next one

00:20:56,240 --> 00:20:59,600
is uh

00:20:56,799 --> 00:20:59,919
documenting error messages so this is

00:20:59,600 --> 00:21:01,200
like

00:20:59,919 --> 00:21:05,200
a very good example there's so many

00:21:01,200 --> 00:21:08,000
times so many times that we have

00:21:05,200 --> 00:21:10,320
error codes and they don't explain what

00:21:08,000 --> 00:21:13,600
it is that we are

00:21:10,320 --> 00:21:15,919
what it means so having these documented

00:21:13,600 --> 00:21:16,960
is is pretty great and the next one is

00:21:15,919 --> 00:21:19,679
make con

00:21:16,960 --> 00:21:20,640
suits the command f workflow so so many

00:21:19,679 --> 00:21:22,960
developers

00:21:20,640 --> 00:21:24,159
uh look at documentation and they the

00:21:22,960 --> 00:21:26,400
first thing they do is command f because

00:21:24,159 --> 00:21:27,600
they want an instant answer

00:21:26,400 --> 00:21:29,440
and we've done a lot of research around

00:21:27,600 --> 00:21:30,640
this and this

00:21:29,440 --> 00:21:32,400
basically the answer to this is don't

00:21:30,640 --> 00:21:34,320
segment don't segment docs too much

00:21:32,400 --> 00:21:37,120
don't make documentation really small

00:21:34,320 --> 00:21:38,400
uh make it uh not too big either you

00:21:37,120 --> 00:21:39,919
want to separate them out so people can

00:21:38,400 --> 00:21:41,679
navigate but not too small where people

00:21:39,919 --> 00:21:43,440
can't command f

00:21:41,679 --> 00:21:44,960
so guiding people that way with

00:21:43,440 --> 00:21:47,360
standards as well and

00:21:44,960 --> 00:21:49,200
there's a very applicable example with

00:21:47,360 --> 00:21:51,120
sorbet they have a list of all the

00:21:49,200 --> 00:21:52,640
uh error error codes and then with

00:21:51,120 --> 00:21:56,480
descriptions with them this is great

00:21:52,640 --> 00:21:57,919
um so just a good example there

00:21:56,480 --> 00:21:59,840
and using standards to solve

00:21:57,919 --> 00:22:02,000
untrustworthiness

00:21:59,840 --> 00:22:03,840
these two uh um first one is

00:22:02,000 --> 00:22:05,360
documentation promotes inclusion

00:22:03,840 --> 00:22:06,960
if you think about imposter syndrome

00:22:05,360 --> 00:22:08,720
documentation is the answer to

00:22:06,960 --> 00:22:11,039
uh part of the answer at least to solve

00:22:08,720 --> 00:22:12,480
this um making it easier for people to

00:22:11,039 --> 00:22:14,080
self-serve and be able to work with your

00:22:12,480 --> 00:22:15,520
code without having to ask people

00:22:14,080 --> 00:22:17,600
that's a really important part of it for

00:22:15,520 --> 00:22:18,640
us second one is documentation is a part

00:22:17,600 --> 00:22:21,200
of tech health

00:22:18,640 --> 00:22:22,480
it's something that we should think

00:22:21,200 --> 00:22:22,799
about when we think about systems that

00:22:22,480 --> 00:22:24,080
aren't

00:22:22,799 --> 00:22:25,600
hard to maintain it's because we don't

00:22:24,080 --> 00:22:27,840
understand them because documentation

00:22:25,600 --> 00:22:29,840
isn't good

00:22:27,840 --> 00:22:31,679
so i've only got a few minutes so i'll

00:22:29,840 --> 00:22:33,440
kind of rush through these but um

00:22:31,679 --> 00:22:35,120
using workflow to solve to to have a

00:22:33,440 --> 00:22:36,960
barrier this is simple we provide

00:22:35,120 --> 00:22:38,640
tooling for skeleton documentation this

00:22:36,960 --> 00:22:41,120
is not anything new or radical every

00:22:38,640 --> 00:22:42,400
you have this as well externally

00:22:41,120 --> 00:22:44,559
previewing documentation

00:22:42,400 --> 00:22:46,159
if i go back to treating docs like code

00:22:44,559 --> 00:22:48,000
this is a very much applicable to that

00:22:46,159 --> 00:22:49,120
and we have tooling for that

00:22:48,000 --> 00:22:51,280
this is a more interesting one is

00:22:49,120 --> 00:22:53,039
continuous documentation i'm thinking

00:22:51,280 --> 00:22:55,200
about documentation as

00:22:53,039 --> 00:22:56,880
this the to me the idea of continuous

00:22:55,200 --> 00:22:58,320
integration contains deployment is that

00:22:56,880 --> 00:22:59,840
the master branch is reflective of

00:22:58,320 --> 00:23:01,280
reality and i think if we think about

00:22:59,840 --> 00:23:02,080
that with documentation we'll always try

00:23:01,280 --> 00:23:03,840
our best

00:23:02,080 --> 00:23:05,360
to make it make sure it's reflective of

00:23:03,840 --> 00:23:06,960
the reality of the code base not

00:23:05,360 --> 00:23:09,840
things are outdated so having a

00:23:06,960 --> 00:23:11,600
continuous documentation mindset is uh

00:23:09,840 --> 00:23:13,120
and this is as simple as just making

00:23:11,600 --> 00:23:15,600
things update instantly giving that

00:23:13,120 --> 00:23:17,280
impression that it is continuous

00:23:15,600 --> 00:23:18,880
friendly to power users internally we

00:23:17,280 --> 00:23:20,880
have this uh this

00:23:18,880 --> 00:23:21,600
domain hack i guess you type in docs and

00:23:20,880 --> 00:23:22,799
it takes you straight to our

00:23:21,600 --> 00:23:24,240
documentation

00:23:22,799 --> 00:23:26,240
and you can type in question mark we

00:23:24,240 --> 00:23:28,400
hijack the query params and we use it as

00:23:26,240 --> 00:23:29,440
a search query so anyone spotify can do

00:23:28,400 --> 00:23:30,720
doc's question mark

00:23:29,440 --> 00:23:32,320
on call policy and they can find all the

00:23:30,720 --> 00:23:33,679
on-call policies in the company if you

00:23:32,320 --> 00:23:34,960
want to find out just specifically in

00:23:33,679 --> 00:23:36,640
architecture you just do

00:23:34,960 --> 00:23:38,480
slash architecture and they'll search

00:23:36,640 --> 00:23:40,159
for mysql inside of architecture so it

00:23:38,480 --> 00:23:41,200
needs to work for power users as well

00:23:40,159 --> 00:23:42,640
because they're the ones who are

00:23:41,200 --> 00:23:44,799
typically maintaining the most important

00:23:42,640 --> 00:23:47,440
systems in the company

00:23:44,799 --> 00:23:48,840
github workflow integration so this one

00:23:47,440 --> 00:23:51,760
is very much around

00:23:48,840 --> 00:23:54,320
uh if we think about opening issues and

00:23:51,760 --> 00:23:57,520
prs to make changes to documentation

00:23:54,320 --> 00:23:59,679
um yeah i mean not everyone uses

00:23:57,520 --> 00:24:01,279
issues though people use jira so we

00:23:59,679 --> 00:24:03,279
can't make it necessarily use github

00:24:01,279 --> 00:24:04,559
issues but everyone uses pull requests

00:24:03,279 --> 00:24:06,400
so instead of the idea of creating an

00:24:04,559 --> 00:24:08,400
issue we're about people can create

00:24:06,400 --> 00:24:09,679
suggestions and changes shifting to a

00:24:08,400 --> 00:24:11,360
culture where

00:24:09,679 --> 00:24:12,880
every team at spotify can benefit from

00:24:11,360 --> 00:24:14,880
this rather than asking everyone to move

00:24:12,880 --> 00:24:16,640
to get up issues

00:24:14,880 --> 00:24:18,159
and this is an example of how it works

00:24:16,640 --> 00:24:19,600
internally you just highlight text give

00:24:18,159 --> 00:24:20,880
feedback open a github issue

00:24:19,600 --> 00:24:23,200
but we want to change that and make that

00:24:20,880 --> 00:24:25,360
work for pull requests instead

00:24:23,200 --> 00:24:27,600
workflow to solve this discoverability

00:24:25,360 --> 00:24:29,679
there's only two here but

00:24:27,600 --> 00:24:31,120
one is we use cloud search this is a new

00:24:29,679 --> 00:24:32,320
tool that we've just started using

00:24:31,120 --> 00:24:34,159
i highly recommend it if you're

00:24:32,320 --> 00:24:35,760
considering it internally

00:24:34,159 --> 00:24:37,600
this is basically this one is simple

00:24:35,760 --> 00:24:38,880
it's making sure that the culture that

00:24:37,600 --> 00:24:39,919
we have externally of like googling

00:24:38,880 --> 00:24:41,520
things constantly

00:24:39,919 --> 00:24:42,960
searching error messages we want to

00:24:41,520 --> 00:24:44,400
bring that internally as well

00:24:42,960 --> 00:24:46,400
so we have stackofflaw enterprise

00:24:44,400 --> 00:24:48,320
internally we have this

00:24:46,400 --> 00:24:49,919
tech docs internally and we want to

00:24:48,320 --> 00:24:52,559
basically give that culture

00:24:49,919 --> 00:24:54,640
and and this is our way of doing that

00:24:52,559 --> 00:24:55,600
next is predictable urls which is uh

00:24:54,640 --> 00:24:57,440
pretty straightforward

00:24:55,600 --> 00:24:59,279
just making things predictable engineers

00:24:57,440 --> 00:25:01,840
love predictable urls

00:24:59,279 --> 00:25:03,039
and then last part to this is uh solving

00:25:01,840 --> 00:25:04,240
trustworthiness

00:25:03,039 --> 00:25:06,000
and this one is the more interesting

00:25:04,240 --> 00:25:07,520
approach that we're trying out and we're

00:25:06,000 --> 00:25:09,279
using a lot of data and we're trying to

00:25:07,520 --> 00:25:11,200
gather data to calculate documentation

00:25:09,279 --> 00:25:12,000
trust if documentation belongs to the

00:25:11,200 --> 00:25:13,360
code

00:25:12,000 --> 00:25:14,559
we can see how often you obtain the code

00:25:13,360 --> 00:25:15,840
base how to know you'd update the

00:25:14,559 --> 00:25:17,039
documentation how often are you

00:25:15,840 --> 00:25:18,159
responding to feedback

00:25:17,039 --> 00:25:20,480
how can we use this to build

00:25:18,159 --> 00:25:22,080
quantifiable metrics that teams can then

00:25:20,480 --> 00:25:23,279
say okay well our documentation is not

00:25:22,080 --> 00:25:24,720
that good it's at 60

00:25:23,279 --> 00:25:27,120
because right now engineers don't know

00:25:24,720 --> 00:25:29,200
how good or bad the documentation is

00:25:27,120 --> 00:25:30,640
i mean they can have an instinct but

00:25:29,200 --> 00:25:33,520
that's about it

00:25:30,640 --> 00:25:34,559
so how can we um how can we do this and

00:25:33,520 --> 00:25:35,200
this is kind of how we're thinking about

00:25:34,559 --> 00:25:36,960
it it's like

00:25:35,200 --> 00:25:39,120
when you uh you're testing your

00:25:36,960 --> 00:25:41,200
documentation or you're running a test

00:25:39,120 --> 00:25:42,559
or you're calculating trust come up with

00:25:41,200 --> 00:25:44,559
issues and and

00:25:42,559 --> 00:25:45,840
raise them and bring the right issues

00:25:44,559 --> 00:25:47,200
and and this is

00:25:45,840 --> 00:25:48,880
a really complex problem if you think

00:25:47,200 --> 00:25:50,320
about it because

00:25:48,880 --> 00:25:52,400
content is text and if we think about

00:25:50,320 --> 00:25:54,640
the talk yesterday it's not easy to to

00:25:52,400 --> 00:25:56,480
decipher it always

00:25:54,640 --> 00:25:57,919
so yeah um very quickly what impact have

00:25:56,480 --> 00:25:59,600
we made we have six

00:25:57,919 --> 00:26:00,880
people on our team we're very cross

00:25:59,600 --> 00:26:02,640
functional we use a mixture of tag

00:26:00,880 --> 00:26:03,120
writers to shape culture and engineers

00:26:02,640 --> 00:26:06,480
to

00:26:03,120 --> 00:26:07,520
build tooling um we have four 400

00:26:06,480 --> 00:26:09,600
services so

00:26:07,520 --> 00:26:11,039
i think around half of spotify is using

00:26:09,600 --> 00:26:12,880
this already in six months

00:26:11,039 --> 00:26:14,640
which is a pretty big deal we have many

00:26:12,880 --> 00:26:17,440
thousands of engineers

00:26:14,640 --> 00:26:18,640
um and one metric we're using is page

00:26:17,440 --> 00:26:20,320
views to kind of calculate

00:26:18,640 --> 00:26:22,240
or people find this valuable people keep

00:26:20,320 --> 00:26:23,360
navigating around documentation

00:26:22,240 --> 00:26:24,720
and then we want to evolve that how

00:26:23,360 --> 00:26:26,000
often are people using command f and

00:26:24,720 --> 00:26:27,039
finding what they're looking for all

00:26:26,000 --> 00:26:28,320
these things we want to build these

00:26:27,039 --> 00:26:30,799
metrics out

00:26:28,320 --> 00:26:32,240
um and this is an interesting quote i

00:26:30,799 --> 00:26:35,200
wanted to just quickly highlight

00:26:32,240 --> 00:26:36,480
is a team was using it to um uh was

00:26:35,200 --> 00:26:37,600
moving to tech docs and they realized a

00:26:36,480 --> 00:26:39,440
lot more people are using their

00:26:37,600 --> 00:26:41,200
documentation

00:26:39,440 --> 00:26:42,320
a lot more people are contributing to it

00:26:41,200 --> 00:26:42,880
as well because it ties into their

00:26:42,320 --> 00:26:44,880
workflow

00:26:42,880 --> 00:26:46,720
they know how github issue works with

00:26:44,880 --> 00:26:48,720
jira they might think it's a bit foreign

00:26:46,720 --> 00:26:50,080
all these things um and they're seeing

00:26:48,720 --> 00:26:52,480
great success with it and this is one of

00:26:50,080 --> 00:26:54,960
the most important teams at spotify

00:26:52,480 --> 00:26:56,559
moving forward at least and this is kind

00:26:54,960 --> 00:26:59,120
of a growth curve of how

00:26:56,559 --> 00:26:59,760
documentation is shifted at spotify and

00:26:59,120 --> 00:27:01,440
it's slow

00:26:59,760 --> 00:27:02,960
it's not a hockey stick growth but the

00:27:01,440 --> 00:27:03,440
barrier to entry for documentation is

00:27:02,960 --> 00:27:05,520
higher

00:27:03,440 --> 00:27:06,799
people have to move from google docs

00:27:05,520 --> 00:27:07,440
they have to move mark down from another

00:27:06,799 --> 00:27:08,720
place

00:27:07,440 --> 00:27:10,080
it's not like signing up for spotify

00:27:08,720 --> 00:27:10,720
where you just get it straight away and

00:27:10,080 --> 00:27:13,840
that's it

00:27:10,720 --> 00:27:16,400
you're considered a metric

00:27:13,840 --> 00:27:17,360
so just quickly wrap up what some three

00:27:16,400 --> 00:27:18,799
takeaways

00:27:17,360 --> 00:27:20,399
one is we want to use documentation to

00:27:18,799 --> 00:27:23,360
make it better for inclusion

00:27:20,399 --> 00:27:24,799
we want people who come into spotify to

00:27:23,360 --> 00:27:26,799
be able to self-serve to be able to

00:27:24,799 --> 00:27:28,080
operate independently

00:27:26,799 --> 00:27:29,279
and then when they feel confident to be

00:27:28,080 --> 00:27:30,880
able to ask a question that they know

00:27:29,279 --> 00:27:32,399
isn't might not sound like a stupid

00:27:30,880 --> 00:27:34,320
question

00:27:32,399 --> 00:27:35,840
then they have the tools to do that of

00:27:34,320 --> 00:27:36,159
course we don't have this culture of

00:27:35,840 --> 00:27:38,080
like

00:27:36,159 --> 00:27:40,480
there's no bad question but still people

00:27:38,080 --> 00:27:41,840
feel that way so we want to empower them

00:27:40,480 --> 00:27:43,600
second is we want to make it easy to

00:27:41,840 --> 00:27:44,720
prioritize for product managers and for

00:27:43,600 --> 00:27:45,919
teams we want them to see that their

00:27:44,720 --> 00:27:47,919
documentation is

00:27:45,919 --> 00:27:49,120
a point where they need to address it

00:27:47,919 --> 00:27:50,960
and this will build a culture where we

00:27:49,120 --> 00:27:52,240
can move faster

00:27:50,960 --> 00:27:54,000
and then lastly making it less boring

00:27:52,240 --> 00:27:55,360
for engineers by giving them but also

00:27:54,000 --> 00:27:57,120
through these metrics but also hanging

00:27:55,360 --> 00:27:59,360
into their workflow not giving them new

00:27:57,120 --> 00:28:02,240
new tools to learn just something that

00:27:59,360 --> 00:28:04,159
works for them already

00:28:02,240 --> 00:28:05,460
and that's my talk and thank you so much

00:28:04,159 --> 00:28:05,680
for listening

00:28:05,460 --> 00:28:12,529
[Applause]

00:28:05,680 --> 00:28:12,529
[Music]

00:28:15,200 --> 00:28:20,000
so bill thank you so much uh i'm a big

00:28:18,159 --> 00:28:21,520
fan of documentation myself

00:28:20,000 --> 00:28:25,360
uh the most important one being of

00:28:21,520 --> 00:28:25,360
course x marks the spot

00:28:25,760 --> 00:28:28,960
but never let it be said we're not

00:28:27,039 --> 00:28:30,720
selfish here's some of our booty that we

00:28:28,960 --> 00:28:35,919
found

00:28:30,720 --> 00:28:35,919
and uh yeah thank you so much thank you

00:28:39,159 --> 00:28:42,159

YouTube URL: https://www.youtube.com/watch?v=jjVeRxQKTYU


