Title: EuRuKo 2019: The musical Ruby by Jan Krutisch
Publication date: 2021-01-19
Playlist: EuRuKo 2019
Description: 
	The musical Ruby

Let’s make some music with Ruby. After cheating a bit with the amazing SonicPi, we’ll drop down to the foundations - While explaining the basics of digital sound synthesis and a tiny bit of music theory, we’ll create a tune to dance to using nothing but pure Ruby.

Jan Krutisch - https://twitter.com/halfbyte
EuRuKo 2019
Captions: 
	00:00:06,080 --> 00:00:11,840
next up is jan

00:00:08,639 --> 00:00:13,840
young lives in hamburg he's uh

00:00:11,840 --> 00:00:15,599
helped organize quite a few conferences

00:00:13,840 --> 00:00:18,080
been to quite a few

00:00:15,599 --> 00:00:19,279
he taught me last no two months ago he

00:00:18,080 --> 00:00:20,960
taught me to beatbox

00:00:19,279 --> 00:00:23,199
gave me a little introduction on how it

00:00:20,960 --> 00:00:23,199
works

00:00:23,359 --> 00:00:27,119
it was awesome and uh today he's going

00:00:26,320 --> 00:00:29,760
to enlighten us

00:00:27,119 --> 00:00:31,920
some more about some musical stuff and

00:00:29,760 --> 00:00:34,640
so please join me in giving jan a very

00:00:31,920 --> 00:00:34,640
warm welcome

00:00:40,320 --> 00:00:46,640
thank you thank you for having me here

00:00:43,520 --> 00:00:48,160
uh it's it's a massive honor to finally

00:00:46,640 --> 00:00:50,480
speak at euroku

00:00:48,160 --> 00:00:51,600
a conference that i absolutely adore so

00:00:50,480 --> 00:00:53,840
this is great

00:00:51,600 --> 00:00:56,000
before i start real quick um the

00:00:53,840 --> 00:00:56,800
advertisement block i'm a co-founder of

00:00:56,000 --> 00:00:59,840
devfu

00:00:56,800 --> 00:01:01,199
we do automated dependency updates by

00:00:59,840 --> 00:01:04,000
sending you pull requests

00:01:01,199 --> 00:01:04,640
on the githubs and some people really

00:01:04,000 --> 00:01:08,080
like us

00:01:04,640 --> 00:01:11,040
and we brought t-shirts and stickers

00:01:08,080 --> 00:01:12,400
so yay i'm going to be in the speaker

00:01:11,040 --> 00:01:15,280
launch after this

00:01:12,400 --> 00:01:15,759
after the pitches so hit me up there and

00:01:15,280 --> 00:01:17,600
also

00:01:15,759 --> 00:01:18,960
florian is somewhere in the audience i

00:01:17,600 --> 00:01:22,799
guess my co-founder

00:01:18,960 --> 00:01:26,320
and yeah speak to us okay

00:01:22,799 --> 00:01:28,000
before i really start a quick warning

00:01:26,320 --> 00:01:29,439
please don't try to understand the code

00:01:28,000 --> 00:01:32,960
examples they're

00:01:29,439 --> 00:01:33,360
there more or less to show complexities

00:01:32,960 --> 00:01:35,439
and

00:01:33,360 --> 00:01:37,600
like give you an idea of what's going on

00:01:35,439 --> 00:01:39,759
and everything is online

00:01:37,600 --> 00:01:42,159
everything is on github there's a

00:01:39,759 --> 00:01:43,759
website called rubysynth.fun

00:01:42,159 --> 00:01:46,720
i think there's a typo in there that's

00:01:43,759 --> 00:01:48,240
nice to find that

00:01:46,720 --> 00:01:50,079
to find that while giving the

00:01:48,240 --> 00:01:52,240
presentation

00:01:50,079 --> 00:01:54,079
and you're going to find a lot more info

00:01:52,240 --> 00:01:57,759
than what i can do in 30 minutes

00:01:54,079 --> 00:02:00,320
on these on that website

00:01:57,759 --> 00:02:01,600
so let's start with some music um let's

00:02:00,320 --> 00:02:04,479
do something different

00:02:01,600 --> 00:02:06,560
um this is sonic pi how many of you have

00:02:04,479 --> 00:02:11,039
played with sonic pi real quick

00:02:06,560 --> 00:02:11,039
okay cool um let's do some music

00:02:12,879 --> 00:02:17,680
i could have life coded this but i know

00:02:15,920 --> 00:02:19,760
myself and like in the first

00:02:17,680 --> 00:02:22,720
five minutes of a talk i'm so nervous

00:02:19,760 --> 00:02:25,920
that my fingers are not really

00:02:22,720 --> 00:02:28,000
my fingers and so i thought i

00:02:25,920 --> 00:02:30,560
better make a video of this and for some

00:02:28,000 --> 00:02:32,319
reason i was really awkward on the video

00:02:30,560 --> 00:02:36,400
as well so this is going to take some

00:02:32,319 --> 00:02:39,680
time i'm sorry about that

00:02:36,400 --> 00:02:43,280
i mean is is this really me can i type

00:02:39,680 --> 00:02:45,680
did i do this before ever i don't know

00:02:43,280 --> 00:02:46,959
uh so yeah you can write some code and

00:02:45,680 --> 00:02:49,519
it will produce some music

00:02:46,959 --> 00:02:50,000
and this is really cool sonic pi has

00:02:49,519 --> 00:02:51,599
been around

00:02:50,000 --> 00:02:53,519
for a couple of years it's written by

00:02:51,599 --> 00:02:55,920
sam aaron and

00:02:53,519 --> 00:02:56,640
it's a wonderful system to both learn

00:02:55,920 --> 00:02:59,120
coding

00:02:56,640 --> 00:03:00,640
and making music and i really recommend

00:02:59,120 --> 00:03:02,000
it if you haven't looked at it go to

00:03:00,640 --> 00:03:05,280
sonicpi.net

00:03:02,000 --> 00:03:08,319
and play with it and um sam aaron has

00:03:05,280 --> 00:03:08,319
a patreon

00:03:08,400 --> 00:03:13,440
finally something that resembles music

00:03:10,959 --> 00:03:13,440
somewhat

00:03:15,120 --> 00:03:19,840
let's add another drum thing to it

00:03:25,200 --> 00:03:32,239
i really should have faked this better i

00:03:26,879 --> 00:03:35,440
should be typing here all the way

00:03:32,239 --> 00:03:38,000
look how how amazing i am uh

00:03:35,440 --> 00:03:38,000
yeah i know

00:03:40,560 --> 00:03:44,840
and now finally let's add some effects

00:03:42,799 --> 00:03:47,840
for

00:03:44,840 --> 00:03:47,840
effects

00:03:50,239 --> 00:03:53,519
come on you can do it

00:03:55,680 --> 00:04:04,640
all right

00:04:01,200 --> 00:04:07,360
cool so that was sonic pie but

00:04:04,640 --> 00:04:09,280
we want to dig deeper because i want to

00:04:07,360 --> 00:04:10,159
show you how to make music with pure

00:04:09,280 --> 00:04:12,239
ruby

00:04:10,159 --> 00:04:14,239
sonic pie uses a lot of advanced

00:04:12,239 --> 00:04:15,360
technology under the hood that is not

00:04:14,239 --> 00:04:17,919
ruby

00:04:15,360 --> 00:04:19,519
and i'm going to use pure ruby plus a

00:04:17,919 --> 00:04:24,080
thing called socks

00:04:19,519 --> 00:04:26,800
socks is short for sound exchange

00:04:24,080 --> 00:04:28,080
i think and has been conceived by lance

00:04:26,800 --> 00:04:30,400
norskog and

00:04:28,080 --> 00:04:31,280
is now maintained by chris bagwell it's

00:04:30,400 --> 00:04:33,680
been around since

00:04:31,280 --> 00:04:37,600
1991 just out of interest how many of

00:04:33,680 --> 00:04:37,600
you are born after 1991

00:04:37,919 --> 00:04:43,919
cool uh so yeah it's it's kind of a

00:04:42,240 --> 00:04:45,919
swiss army knife for audio file

00:04:43,919 --> 00:04:46,720
conversion you can convert anything into

00:04:45,919 --> 00:04:49,040
anything

00:04:46,720 --> 00:04:50,560
um and you can it can deal very well

00:04:49,040 --> 00:04:53,360
with raw data and so

00:04:50,560 --> 00:04:54,960
if you take this ruby thing at the top

00:04:53,360 --> 00:04:56,240
it's like the most simplest thing i

00:04:54,960 --> 00:05:00,000
could come up with to

00:04:56,240 --> 00:05:02,560
generate ruby's ruby sound

00:05:00,000 --> 00:05:04,000
uh sound in ruby sorry and it's it

00:05:02,560 --> 00:05:07,360
generates a square wave

00:05:04,000 --> 00:05:08,479
um and it outputs it in binary format as

00:05:07,360 --> 00:05:11,840
like an

00:05:08,479 --> 00:05:12,880
little endian floating point 32 bits

00:05:11,840 --> 00:05:15,039
thing that

00:05:12,880 --> 00:05:16,720
we can then convert into something that

00:05:15,039 --> 00:05:18,639
your sound card can understand with the

00:05:16,720 --> 00:05:22,320
play command which is part of

00:05:18,639 --> 00:05:25,919
uh the which is part of uh the sock seat

00:05:22,320 --> 00:05:27,600
but we can also save it as a wav file

00:05:25,919 --> 00:05:29,680
which is the sound file format that

00:05:27,600 --> 00:05:31,280
stores raw sound data

00:05:29,680 --> 00:05:33,680
and then we can play it in the browser

00:05:31,280 --> 00:05:38,000
so let's do that um

00:05:33,680 --> 00:05:40,639
be careful it's not very nice is it but

00:05:38,000 --> 00:05:41,120
it's sound it's something it's something

00:05:40,639 --> 00:05:44,479
right

00:05:41,120 --> 00:05:46,880
is it okay cool um

00:05:44,479 --> 00:05:48,639
so how does it work i mean how does it

00:05:46,880 --> 00:05:52,160
really work

00:05:48,639 --> 00:05:55,440
what is sound so

00:05:52,160 --> 00:05:56,080
essentially sound is a vibrating air

00:05:55,440 --> 00:05:59,120
molecule

00:05:56,080 --> 00:05:59,919
so something starts moving l molecules

00:05:59,120 --> 00:06:01,919
around

00:05:59,919 --> 00:06:03,039
and you got this wave that goes through

00:06:01,919 --> 00:06:06,479
it

00:06:03,039 --> 00:06:08,080
and this is then detected by your ear

00:06:06,479 --> 00:06:09,680
please don't make me explain how your

00:06:08,080 --> 00:06:10,560
ear works because that's really

00:06:09,680 --> 00:06:12,720
complicated i

00:06:10,560 --> 00:06:14,160
don't know a lot about it but it's

00:06:12,720 --> 00:06:16,960
complicated and

00:06:14,160 --> 00:06:18,560
it's a wonderful mechanism that allows

00:06:16,960 --> 00:06:21,440
us to hear these sound waves

00:06:18,560 --> 00:06:23,039
now we want to somehow turn electrical

00:06:21,440 --> 00:06:23,759
current into air movement because our

00:06:23,039 --> 00:06:25,919
computer

00:06:23,759 --> 00:06:27,600
works with electrical current right for

00:06:25,919 --> 00:06:31,120
that you need a loudspeaker how does a

00:06:27,600 --> 00:06:33,600
loudspeaker work well you have a

00:06:31,120 --> 00:06:36,000
an electric magnet that moves a static

00:06:33,600 --> 00:06:38,240
magnet and that static magnet is

00:06:36,000 --> 00:06:40,639
connected to a diaphragm or a membrane

00:06:38,240 --> 00:06:42,160
or something and that pushes out the air

00:06:40,639 --> 00:06:46,000
in the rhythm that you give it with the

00:06:42,160 --> 00:06:46,000
electric current and so you create

00:06:46,319 --> 00:06:52,319
air molecules moving air molecules by

00:06:49,520 --> 00:06:52,960
electric current now computers are

00:06:52,319 --> 00:06:55,120
digital

00:06:52,960 --> 00:06:57,120
so we need to somehow convert digital

00:06:55,120 --> 00:07:00,160
data to electric current

00:06:57,120 --> 00:07:02,000
and this is done by a digital to analog

00:07:00,160 --> 00:07:03,520
converter or dac

00:07:02,000 --> 00:07:05,840
please don't make me explain those as

00:07:03,520 --> 00:07:07,440
well because they are complicated um

00:07:05,840 --> 00:07:09,280
you know most modern things probably

00:07:07,440 --> 00:07:12,560
have tons of patterns on them

00:07:09,280 --> 00:07:14,000
i mean the general principle is really

00:07:12,560 --> 00:07:16,479
simple but

00:07:14,000 --> 00:07:18,000
it can get complicated in the real world

00:07:16,479 --> 00:07:20,960
now if we talk about

00:07:18,000 --> 00:07:23,280
converting a digital signal to analog

00:07:20,960 --> 00:07:25,360
signal there are a couple of challenges

00:07:23,280 --> 00:07:26,960
if you look at this very scientific

00:07:25,360 --> 00:07:29,919
graph of

00:07:26,960 --> 00:07:31,520
a digital wave and an analog wave you

00:07:29,919 --> 00:07:34,800
see that

00:07:31,520 --> 00:07:36,479
can you see the pixels you see that one

00:07:34,800 --> 00:07:37,919
has these steps and the other one

00:07:36,479 --> 00:07:40,160
doesn't i mean

00:07:37,919 --> 00:07:41,840
technically it has but you you know what

00:07:40,160 --> 00:07:45,680
i try to express with this

00:07:41,840 --> 00:07:47,199
and so and so uh yeah digital data is

00:07:45,680 --> 00:07:49,199
always discrete in both

00:07:47,199 --> 00:07:50,479
time and values and that is a problem

00:07:49,199 --> 00:07:52,560
because you know

00:07:50,479 --> 00:07:54,319
electrical current usually is not and

00:07:52,560 --> 00:07:55,120
your the stuff that you're trying to do

00:07:54,319 --> 00:07:57,680
with it

00:07:55,120 --> 00:07:58,960
um like moving a loudspeaker that would

00:07:57,680 --> 00:08:00,400
be kind of awkward

00:07:58,960 --> 00:08:02,240
so there are a couple of things you need

00:08:00,400 --> 00:08:04,400
to know the first one is about sampling

00:08:02,240 --> 00:08:05,840
frequency so that means how often do you

00:08:04,400 --> 00:08:08,720
sample a signal

00:08:05,840 --> 00:08:10,639
in the digital domain and there's this

00:08:08,720 --> 00:08:12,639
rule that you need at least double

00:08:10,639 --> 00:08:13,919
the sampling frequency to express a

00:08:12,639 --> 00:08:16,240
certain frequency

00:08:13,919 --> 00:08:18,000
so this is called the nyquist shannon

00:08:16,240 --> 00:08:20,720
theorem

00:08:18,000 --> 00:08:21,840
sampling theorem and this is the reason

00:08:20,720 --> 00:08:24,960
for example why

00:08:21,840 --> 00:08:26,160
cds use 44.1 kilohertz as a sampling

00:08:24,960 --> 00:08:28,560
rate because if you have

00:08:26,160 --> 00:08:31,199
that you're ending up at somewhere

00:08:28,560 --> 00:08:34,159
around 20 kilohertz which is roughly

00:08:31,199 --> 00:08:36,320
the boundary for human hearing um so

00:08:34,159 --> 00:08:39,360
sounds higher than 20 kilohertz

00:08:36,320 --> 00:08:40,719
i mean i'm old i'm my range is probably

00:08:39,360 --> 00:08:44,320
much smaller

00:08:40,719 --> 00:08:45,839
but like a a normal human can hear up to

00:08:44,320 --> 00:08:49,519
20 kilohertz of

00:08:45,839 --> 00:08:51,920
sound um so cds will not work for dogs

00:08:49,519 --> 00:08:53,040
really important point uh and the other

00:08:51,920 --> 00:08:56,880
thing is like you have

00:08:53,040 --> 00:08:57,920
only uh so many value values in your

00:08:56,880 --> 00:09:00,080
sampling and

00:08:57,920 --> 00:09:02,160
there's just a question of like having

00:09:00,080 --> 00:09:03,279
enough so that you don't actually hear

00:09:02,160 --> 00:09:05,360
what's going on

00:09:03,279 --> 00:09:06,720
and enough is enough if you use more

00:09:05,360 --> 00:09:08,240
bytes bits per

00:09:06,720 --> 00:09:11,040
sample that you need to you're just

00:09:08,240 --> 00:09:11,040
wasting space

00:09:11,360 --> 00:09:15,519
finally let's get back to

00:09:13,860 --> 00:09:19,200
[Music]

00:09:15,519 --> 00:09:22,480
the ruby sim thing so

00:09:19,200 --> 00:09:23,519
this is again the code it's really

00:09:22,480 --> 00:09:26,880
simple

00:09:23,519 --> 00:09:29,200
and it produces a square wave

00:09:26,880 --> 00:09:30,240
again not very beautiful um it produces

00:09:29,200 --> 00:09:32,959
a square over eight four

00:09:30,240 --> 00:09:34,959
forty hertz y for forty hertz because

00:09:32,959 --> 00:09:37,120
four forty hertz is the constant pitch

00:09:34,959 --> 00:09:38,880
it's the a above the middle c if you're

00:09:37,120 --> 00:09:39,360
a musician this means something to you

00:09:38,880 --> 00:09:41,600
if

00:09:39,360 --> 00:09:43,680
you've had some musical notation at

00:09:41,600 --> 00:09:45,600
school it should mean something to you

00:09:43,680 --> 00:09:46,959
i forgot all about these things i had to

00:09:45,600 --> 00:09:51,360
learn relearn them but

00:09:46,959 --> 00:09:53,519
that's how it is now um

00:09:51,360 --> 00:09:55,440
the thing is that i'm going to talk

00:09:53,519 --> 00:09:57,120
about western notation here

00:09:55,440 --> 00:09:58,880
and i think this is kind of important to

00:09:57,120 --> 00:10:00,320
point out because other cultures and

00:09:58,880 --> 00:10:01,839
other regions in the world use

00:10:00,320 --> 00:10:02,640
completely different systems for

00:10:01,839 --> 00:10:04,720
notation

00:10:02,640 --> 00:10:06,480
so everything i say here in the couple

00:10:04,720 --> 00:10:08,399
of next slides is going to be about

00:10:06,480 --> 00:10:12,399
western notation and our own

00:10:08,399 --> 00:10:16,240
very western way of looking at music

00:10:12,399 --> 00:10:18,480
so this is a result this resembles a

00:10:16,240 --> 00:10:21,680
musical keyboard like on a piano

00:10:18,480 --> 00:10:24,000
it has um multiple octaves

00:10:21,680 --> 00:10:25,680
an octave means that you're doubling the

00:10:24,000 --> 00:10:27,600
frequency so if you're going from a low

00:10:25,680 --> 00:10:28,959
c to the next c you're gonna double the

00:10:27,600 --> 00:10:30,560
frequency of the tone

00:10:28,959 --> 00:10:32,320
and it also means that you're going from

00:10:30,560 --> 00:10:36,320
one yeah you're going

00:10:32,320 --> 00:10:37,920
across 12 keys and these 12 keys are

00:10:36,320 --> 00:10:39,360
the the intervals between them are

00:10:37,920 --> 00:10:42,399
called half tones

00:10:39,360 --> 00:10:44,880
and so you have 12 of them c c sharp d

00:10:42,399 --> 00:10:45,519
d sharp and so on you could also call it

00:10:44,880 --> 00:10:48,720
c

00:10:45,519 --> 00:10:48,720
d flat e

00:10:49,360 --> 00:10:56,240
sorry d e flat i'm i'm i suck at this uh

00:10:53,360 --> 00:10:58,399
and it's just a way of looking at the

00:10:56,240 --> 00:10:59,040
weird black keys sometimes you count

00:10:58,399 --> 00:11:00,560
them from

00:10:59,040 --> 00:11:02,480
coming from the top and sometimes you

00:11:00,560 --> 00:11:05,680
count them coming from the bottom

00:11:02,480 --> 00:11:06,959
um they're like actually getting to the

00:11:05,680 --> 00:11:09,519
frequencies

00:11:06,959 --> 00:11:10,320
um apart from a which is always defined

00:11:09,519 --> 00:11:12,800
as this

00:11:10,320 --> 00:11:13,680
440 hertz and then you know doubling or

00:11:12,800 --> 00:11:16,079
having it

00:11:13,680 --> 00:11:17,120
is really complicated and it's not well

00:11:16,079 --> 00:11:19,040
defined it's

00:11:17,120 --> 00:11:20,959
uh it's mathematically complicated but

00:11:19,040 --> 00:11:24,000
people simplify

00:11:20,959 --> 00:11:26,240
and this is the midi tuning it's a

00:11:24,000 --> 00:11:28,000
formula that where you can simply input

00:11:26,240 --> 00:11:32,640
a note number that is a number from

00:11:28,000 --> 00:11:35,360
0 to 127 and as a zero is a very low c

00:11:32,640 --> 00:11:37,040
a 60 is a middle c and so 69 would be

00:11:35,360 --> 00:11:39,839
the concert pitch a

00:11:37,040 --> 00:11:41,920
and the thing about this is that it is

00:11:39,839 --> 00:11:42,560
just one way of tuning the notes in

00:11:41,920 --> 00:11:45,200
between

00:11:42,560 --> 00:11:46,880
and um it it doesn't really add up it's

00:11:45,200 --> 00:11:47,519
weird um if you're interested in the

00:11:46,880 --> 00:11:51,360
details

00:11:47,519 --> 00:11:53,680
um look it up it's weird so

00:11:51,360 --> 00:11:55,440
again a square wave at 440hz are you

00:11:53,680 --> 00:11:58,000
already bored by this

00:11:55,440 --> 00:11:59,279
um so this is a different way of

00:11:58,000 --> 00:12:02,160
displaying it

00:11:59,279 --> 00:12:02,480
this is the frequency spectrum and this

00:12:02,160 --> 00:12:04,560
is

00:12:02,480 --> 00:12:06,639
uh this is quite cool because it allows

00:12:04,560 --> 00:12:08,079
us to see the harmonic content of the

00:12:06,639 --> 00:12:11,279
sound that we're playing

00:12:08,079 --> 00:12:12,560
and so yeah i know it sounds horrible um

00:12:11,279 --> 00:12:14,240
to turn this into something more

00:12:12,560 --> 00:12:15,600
beautiful we need to sculpt the sound

00:12:14,240 --> 00:12:17,600
and we're using something called

00:12:15,600 --> 00:12:19,600
subtractive synthesis for this

00:12:17,600 --> 00:12:21,120
uh this is just one way of synthesizing

00:12:19,600 --> 00:12:22,880
sounds and

00:12:21,120 --> 00:12:24,720
the idea of subtractive synthesis is a

00:12:22,880 --> 00:12:26,320
little bit like sculpting like if you

00:12:24,720 --> 00:12:28,480
have a big block of marble and you want

00:12:26,320 --> 00:12:30,959
to turn it into a mermaid or

00:12:28,480 --> 00:12:31,920
a discus thrower or something like that

00:12:30,959 --> 00:12:33,360
you chisel away

00:12:31,920 --> 00:12:35,519
everything that doesn't look like a

00:12:33,360 --> 00:12:37,760
mermaid or a discus thrower

00:12:35,519 --> 00:12:38,720
that's how people explain it usually to

00:12:37,760 --> 00:12:40,880
me and

00:12:38,720 --> 00:12:41,760
uh so you can do the same thing with

00:12:40,880 --> 00:12:43,440
sound so

00:12:41,760 --> 00:12:45,360
you start with high harmonic content and

00:12:43,440 --> 00:12:48,079
you filter down like filter

00:12:45,360 --> 00:12:49,600
um yeah there are things that filter out

00:12:48,079 --> 00:12:51,600
certain parts of this

00:12:49,600 --> 00:12:53,600
spectrum we are going to use a thing

00:12:51,600 --> 00:12:55,360
called a state variable filter

00:12:53,600 --> 00:12:57,279
now the interesting thing about this

00:12:55,360 --> 00:12:59,839
block diagram is that you can turn it

00:12:57,279 --> 00:13:00,720
either into code or into electronic

00:12:59,839 --> 00:13:03,279
components

00:13:00,720 --> 00:13:06,320
so you can build this essentially sorry

00:13:03,279 --> 00:13:08,160
essentially the same filter

00:13:06,320 --> 00:13:09,839
out of electronic components or out of

00:13:08,160 --> 00:13:12,880
code which is handy

00:13:09,839 --> 00:13:15,279
so this is the elect this is the the

00:13:12,880 --> 00:13:16,160
electronic component no it's the code um

00:13:15,279 --> 00:13:18,480
so this is

00:13:16,160 --> 00:13:20,000
the code for a state variable filter and

00:13:18,480 --> 00:13:21,279
the cool thing about the state variable

00:13:20,000 --> 00:13:23,519
the other cool thing about the state

00:13:21,279 --> 00:13:25,440
variable filter is that it uh generates

00:13:23,519 --> 00:13:27,120
multiple outputs at the same time so you

00:13:25,440 --> 00:13:29,040
get different kind of filters

00:13:27,120 --> 00:13:30,959
the first one is a low pass this cuts

00:13:29,040 --> 00:13:33,920
away all the high frequency

00:13:30,959 --> 00:13:34,880
um that's yeah explaining it the wrong

00:13:33,920 --> 00:13:37,600
way around

00:13:34,880 --> 00:13:40,160
and uh it sounds like our square wave

00:13:37,600 --> 00:13:42,480
then sounds like this

00:13:40,160 --> 00:13:44,480
this is already it's still horrible but

00:13:42,480 --> 00:13:45,440
it's a bit nicer it doesn't sound so

00:13:44,480 --> 00:13:47,120
harsh

00:13:45,440 --> 00:13:50,480
the other way around you could also use

00:13:47,120 --> 00:13:50,480
a high pass that sounds bad

00:13:51,360 --> 00:13:56,000
so yeah that's not great a bandpass is

00:13:54,000 --> 00:13:56,720
the combination of both so you end up

00:13:56,000 --> 00:13:59,199
with this

00:13:56,720 --> 00:14:01,360
small frequency band it doesn't sound

00:13:59,199 --> 00:14:03,600
great either

00:14:01,360 --> 00:14:05,360
um and then you have a band reject notch

00:14:03,600 --> 00:14:07,360
filter you only use this in special

00:14:05,360 --> 00:14:09,199
cases so i won't show an example

00:14:07,360 --> 00:14:11,040
but something is still wrong here it

00:14:09,199 --> 00:14:11,600
doesn't sound musical so what can we do

00:14:11,040 --> 00:14:13,510
about that

00:14:11,600 --> 00:14:15,360
if you listen to this piano sound

00:14:13,510 --> 00:14:19,519
[Music]

00:14:15,360 --> 00:14:22,320
ah it's so much nicer right

00:14:19,519 --> 00:14:23,760
and the reason for that is it kind of

00:14:22,320 --> 00:14:25,839
doesn't start so harsh

00:14:23,760 --> 00:14:27,839
it ends really nicely in mellow and

00:14:25,839 --> 00:14:29,680
there's this part in the beginning where

00:14:27,839 --> 00:14:31,600
it sounds more harsher and then it

00:14:29,680 --> 00:14:33,600
mellows down as well so there's some

00:14:31,600 --> 00:14:35,600
filtering obviously going on

00:14:33,600 --> 00:14:37,920
not real filtering but you know you get

00:14:35,600 --> 00:14:39,600
the impact in the beginning and then you

00:14:37,920 --> 00:14:41,519
only hear the strings in the end

00:14:39,600 --> 00:14:44,000
so there's variance over time and this

00:14:41,519 --> 00:14:46,240
is important so we can do that in the

00:14:44,000 --> 00:14:49,199
digital domain with envelopes

00:14:46,240 --> 00:14:49,760
not these envelopes but these envelopes

00:14:49,199 --> 00:14:52,720
this is

00:14:49,760 --> 00:14:53,120
an attack decay sustain release envelope

00:14:52,720 --> 00:14:55,680
or

00:14:53,120 --> 00:14:56,959
short adsr the cool thing about this is

00:14:55,680 --> 00:15:00,000
that it's it's sort of a

00:14:56,959 --> 00:15:02,399
compromise of having lots of control and

00:15:00,000 --> 00:15:05,839
having very few parameters

00:15:02,399 --> 00:15:08,560
and uh yeah so the

00:15:05,839 --> 00:15:10,480
time goes on and you just shape a

00:15:08,560 --> 00:15:12,720
certain parameter with it

00:15:10,480 --> 00:15:15,120
this is how it looks like it's this is

00:15:12,720 --> 00:15:17,440
terrible code it's really inefficient as

00:15:15,120 --> 00:15:19,440
i found out throughout the last few days

00:15:17,440 --> 00:15:21,040
uh it takes a lot of time to calculate

00:15:19,440 --> 00:15:24,480
but it tries to be

00:15:21,040 --> 00:15:26,240
super perfect with all the edge cases

00:15:24,480 --> 00:15:28,560
and we can shape everything with this

00:15:26,240 --> 00:15:31,040
let's start with the volume

00:15:28,560 --> 00:15:31,600
um this is because that's gonna be much

00:15:31,040 --> 00:15:33,600
nicer

00:15:31,600 --> 00:15:34,880
um we have a filtered down sound already

00:15:33,600 --> 00:15:37,199
and we um

00:15:34,880 --> 00:15:38,839
kind of modulate the volume with or the

00:15:37,199 --> 00:15:42,160
amplitude with the

00:15:38,839 --> 00:15:44,800
envelope ah

00:15:42,160 --> 00:15:46,639
this is much better we could also

00:15:44,800 --> 00:15:47,839
modulate the filter frequency and so

00:15:46,639 --> 00:15:49,199
start with something harsh in the

00:15:47,839 --> 00:15:50,140
beginning and then mellow it down like

00:15:49,199 --> 00:15:52,320
the piano

00:15:50,140 --> 00:15:54,959
[Music]

00:15:52,320 --> 00:15:56,320
so that that sounds like something

00:15:54,959 --> 00:15:58,240
already we could also

00:15:56,320 --> 00:16:00,880
um modulate the pitch this is a little

00:15:58,240 --> 00:16:00,880
bit weird

00:16:01,279 --> 00:16:08,160
um but it's it's used sometimes in

00:16:04,880 --> 00:16:09,680
elect in in uh like in in certain

00:16:08,160 --> 00:16:12,160
instruments you can actually

00:16:09,680 --> 00:16:12,720
do this by hand and also it's really

00:16:12,160 --> 00:16:14,880
useful

00:16:12,720 --> 00:16:15,839
for generating drum sounds as we're

00:16:14,880 --> 00:16:18,079
gonna see

00:16:15,839 --> 00:16:19,920
so i wanted like we now have a palette

00:16:18,079 --> 00:16:22,000
of things we can do to sound to

00:16:19,920 --> 00:16:24,000
generate synthesizer sounds and you're

00:16:22,000 --> 00:16:27,199
going to hear them in the end

00:16:24,000 --> 00:16:27,199
and this is

00:16:27,680 --> 00:16:30,800
this is now the section where i'm going

00:16:28,959 --> 00:16:31,199
to talk about drum sounds because every

00:16:30,800 --> 00:16:33,680
good

00:16:31,199 --> 00:16:35,199
electronic music should have drum sounds

00:16:33,680 --> 00:16:37,519
so let's start with the kick drum

00:16:35,199 --> 00:16:39,360
the kick drum is like the biggest and

00:16:37,519 --> 00:16:43,120
most important part of any drum

00:16:39,360 --> 00:16:43,759
set and it's it's a it's a drum that is

00:16:43,120 --> 00:16:46,160
just a little

00:16:43,759 --> 00:16:47,360
a lot bigger than any other drum and um

00:16:46,160 --> 00:16:49,680
the way

00:16:47,360 --> 00:16:51,680
drum sounds are generated in the real

00:16:49,680 --> 00:16:53,279
world is you hit something with a stick

00:16:51,680 --> 00:16:55,600
and then the whole thing vibrates and

00:16:53,279 --> 00:16:57,600
this creates two different

00:16:55,600 --> 00:16:59,600
types of sound after each other so you

00:16:57,600 --> 00:17:01,199
have that sharp impact in the beginning

00:16:59,600 --> 00:17:02,959
and then you have the vibration of the

00:17:01,199 --> 00:17:05,919
whole thing that's gonna

00:17:02,959 --> 00:17:07,199
decay in the end and so we can kind of

00:17:05,919 --> 00:17:09,919
emulate this

00:17:07,199 --> 00:17:10,799
by taking a sine wave as the oscillator

00:17:09,919 --> 00:17:12,640
as the the

00:17:10,799 --> 00:17:14,640
sound generator and then we pitch it up

00:17:12,640 --> 00:17:15,919
like i showed you with the envelope

00:17:14,640 --> 00:17:18,799
real quick in the beginning and then

00:17:15,919 --> 00:17:20,880
pitch it down again and then just

00:17:18,799 --> 00:17:22,959
let the sound fade out and this is what

00:17:20,880 --> 00:17:25,679
it sounds like

00:17:22,959 --> 00:17:27,600
this is a not a great bass drum but it

00:17:25,679 --> 00:17:30,320
is a decent bass drum i would say

00:17:27,600 --> 00:17:32,240
so the snare drum is a smaller drum that

00:17:30,320 --> 00:17:35,280
means that if we want to

00:17:32,240 --> 00:17:36,720
use the same technique to emulate it

00:17:35,280 --> 00:17:38,880
we would just pitch it up because

00:17:36,720 --> 00:17:40,320
smaller things have higher tones that's

00:17:38,880 --> 00:17:43,360
just how physics work

00:17:40,320 --> 00:17:45,120
i guess but the snare drum also has this

00:17:43,360 --> 00:17:47,039
interesting thing where there's the

00:17:45,120 --> 00:17:49,760
actual snares which are

00:17:47,039 --> 00:17:50,720
steel wires which are lying across one

00:17:49,760 --> 00:17:52,720
of the drum heads

00:17:50,720 --> 00:17:54,320
and so if you hit it they bounce around

00:17:52,720 --> 00:17:57,840
like crazy and create this

00:17:54,320 --> 00:18:01,360
noisy thing so let's create something

00:17:57,840 --> 00:18:02,960
out of noise so we take noise

00:18:01,360 --> 00:18:06,720
uh white noise is really easy to

00:18:02,960 --> 00:18:10,640
generate rand is your friend

00:18:06,720 --> 00:18:11,760
that rhymes cool so you just generate a

00:18:10,640 --> 00:18:14,320
random number between

00:18:11,760 --> 00:18:15,919
-1 and 1 and you get white noise and

00:18:14,320 --> 00:18:16,880
then you have to filter it down because

00:18:15,919 --> 00:18:18,799
white now is also

00:18:16,880 --> 00:18:21,440
not white noise also sounds horrible and

00:18:18,799 --> 00:18:23,760
then you put you know another amplitude

00:18:21,440 --> 00:18:25,360
enviro envelope on it and then you add

00:18:23,760 --> 00:18:27,360
the bass drum sound just pitched up a

00:18:25,360 --> 00:18:28,880
little bit

00:18:27,360 --> 00:18:30,720
yeah it's a bit quiet i should have made

00:18:28,880 --> 00:18:34,000
it louder um but it is

00:18:30,720 --> 00:18:36,960
sort of resembling a snare drum

00:18:34,000 --> 00:18:37,440
sort of uh and the last thing i want to

00:18:36,960 --> 00:18:40,480
show you

00:18:37,440 --> 00:18:43,280
is a hi-hat which is this weird thing

00:18:40,480 --> 00:18:44,080
it's two symbols so these metal things

00:18:43,280 --> 00:18:46,480
and you can

00:18:44,080 --> 00:18:48,320
move them up and down with a pedal and

00:18:46,480 --> 00:18:50,559
it creates a very noisy

00:18:48,320 --> 00:18:51,679
short sound and the way you synthesize

00:18:50,559 --> 00:18:53,520
it is again you take

00:18:51,679 --> 00:18:54,880
white noise and then you have a bandpass

00:18:53,520 --> 00:18:57,200
filter because you only want like a

00:18:54,880 --> 00:18:59,120
small portion of a higher spectrum

00:18:57,200 --> 00:19:00,640
and then you have two different

00:18:59,120 --> 00:19:02,400
amplitude envelopes

00:19:00,640 --> 00:19:04,400
one is for the closed hi-hat that is

00:19:02,400 --> 00:19:06,080
when the things are put together

00:19:04,400 --> 00:19:07,760
and the other one is like if it's open

00:19:06,080 --> 00:19:09,520
and you hit it with a stick it produces

00:19:07,760 --> 00:19:14,720
a longer sound so

00:19:09,520 --> 00:19:17,840
they just differ a little bit and that's

00:19:14,720 --> 00:19:19,520
that's a hi-hat to me at least and if we

00:19:17,840 --> 00:19:25,840
combine all of this together

00:19:19,520 --> 00:19:25,840
whoa what was that with my voice there

00:19:26,160 --> 00:19:31,280
we have a drum beat okay now

00:19:36,559 --> 00:19:39,840
wait wait wait there's more

00:19:39,919 --> 00:19:43,840
okay i'm uh almost uh in time that's

00:19:43,440 --> 00:19:48,240
cool

00:19:43,840 --> 00:19:49,919
uh so uh so now we want to turn all of

00:19:48,240 --> 00:19:50,640
these sounds that we've generated into

00:19:49,919 --> 00:19:53,280
music

00:19:50,640 --> 00:19:54,640
and what i did with the drums there is i

00:19:53,280 --> 00:19:56,720
sequenced them

00:19:54,640 --> 00:19:57,919
and for understanding how sequencing

00:19:56,720 --> 00:20:01,039
work we need a couple of

00:19:57,919 --> 00:20:04,880
extra words we need to learn um so

00:20:01,039 --> 00:20:06,720
beats bars and notes and other things

00:20:04,880 --> 00:20:08,240
and everything i'm going to explain is

00:20:06,720 --> 00:20:10,080
in the context of the most simple

00:20:08,240 --> 00:20:13,200
measure you can think of it's the 4

00:20:10,080 --> 00:20:15,679
4 measure and it's what

00:20:13,200 --> 00:20:17,679
almost every pop song is made of it's

00:20:15,679 --> 00:20:19,679
what techno is usually made of

00:20:17,679 --> 00:20:22,159
you can make music much more interesting

00:20:19,679 --> 00:20:25,520
by um deviating from that

00:20:22,159 --> 00:20:27,840
but for to be able to explain it i i'll

00:20:25,520 --> 00:20:30,159
stick to that and a 4 4 is nothing else

00:20:27,840 --> 00:20:31,440
but one two three one two three one two

00:20:30,159 --> 00:20:34,559
three one two three

00:20:31,440 --> 00:20:35,200
no that's three fours one two three four

00:20:34,559 --> 00:20:38,000
one two

00:20:35,200 --> 00:20:39,360
three four one two three four one two

00:20:38,000 --> 00:20:42,640
three four

00:20:39,360 --> 00:20:45,840
wow that was a nice

00:20:42,640 --> 00:20:47,600
okay so what what so three three uh

00:20:45,840 --> 00:20:48,960
three eighths is is a really interesting

00:20:47,600 --> 00:20:51,200
rhythm

00:20:48,960 --> 00:20:52,640
so if you have a four four measure

00:20:51,200 --> 00:20:55,600
there's four beats in a bar

00:20:52,640 --> 00:20:56,880
so a bar is essentially a quarter note

00:20:55,600 --> 00:20:58,960
um yes music

00:20:56,880 --> 00:21:01,520
musicians count from one yes this is

00:20:58,960 --> 00:21:03,760
irritating to programmers

00:21:01,520 --> 00:21:04,720
it throws me off so many times and if

00:21:03,760 --> 00:21:07,280
you look at a bar

00:21:04,720 --> 00:21:08,159
a bar is just like one measurement unit

00:21:07,280 --> 00:21:10,320
of music

00:21:08,159 --> 00:21:12,480
you can have notes um in different

00:21:10,320 --> 00:21:14,480
lengths in them so you have a

00:21:12,480 --> 00:21:16,880
full note which is essentially a bar

00:21:14,480 --> 00:21:17,679
long then you have a half note a quarter

00:21:16,880 --> 00:21:19,679
note

00:21:17,679 --> 00:21:21,679
an eighth note and a 16th note and the

00:21:19,679 --> 00:21:26,240
16th note is sort of the

00:21:21,679 --> 00:21:28,559
you can go 32th and 64th but these

00:21:26,240 --> 00:21:30,159
like usually you're you're staying with

00:21:28,559 --> 00:21:32,960
16th notes and

00:21:30,159 --> 00:21:33,600
one of the reasons is that this you

00:21:32,960 --> 00:21:36,799
could also

00:21:33,600 --> 00:21:37,840
call a 16th note a step and the reason

00:21:36,799 --> 00:21:40,080
for that is that

00:21:37,840 --> 00:21:41,919
there are machines out there that are

00:21:40,080 --> 00:21:43,200
using a thing called a step sequencer

00:21:41,919 --> 00:21:44,960
and this is

00:21:43,200 --> 00:21:46,880
one of the most famous drum machines

00:21:44,960 --> 00:21:48,720
ever this is the roland 808

00:21:46,880 --> 00:21:50,720
and if you look at these colorful

00:21:48,720 --> 00:21:52,880
buttons at the bottom there

00:21:50,720 --> 00:21:54,159
they are actually that's 16 of them so

00:21:52,880 --> 00:21:56,559
you can program

00:21:54,159 --> 00:21:57,360
one bar of music with them or of drums

00:21:56,559 --> 00:22:00,159
with them

00:21:57,360 --> 00:22:03,120
and i guarantee you you have heard this

00:22:00,159 --> 00:22:04,640
drum synthesizer

00:22:03,120 --> 00:22:06,480
the other thing we need to talk about is

00:22:04,640 --> 00:22:10,640
tempo

00:22:06,480 --> 00:22:10,640
am i too fast so

00:22:11,039 --> 00:22:17,039
yeah so

00:22:14,640 --> 00:22:18,880
um yeah i couldn't think of any good

00:22:17,039 --> 00:22:22,240
ship related things sorry

00:22:18,880 --> 00:22:24,480
so so tempo is usually measured in bpm

00:22:22,240 --> 00:22:26,880
that's beats per minute or in our case

00:22:24,480 --> 00:22:28,880
quarter notes per minute and if we know

00:22:26,880 --> 00:22:32,400
that we can do some sequencer math

00:22:28,880 --> 00:22:36,080
so if you're setting the bpm to 120

00:22:32,400 --> 00:22:38,720
the computation gets gets really easy so

00:22:36,080 --> 00:22:39,280
a beat length in seconds would be half a

00:22:38,720 --> 00:22:41,200
second

00:22:39,280 --> 00:22:42,880
that's easy to calculate with a bar

00:22:41,200 --> 00:22:45,440
length would be two seconds

00:22:42,880 --> 00:22:47,200
and a sixteenth note would then be an

00:22:45,440 --> 00:22:50,720
eighth of a second

00:22:47,200 --> 00:22:55,200
now uh to turn this into something more

00:22:50,720 --> 00:22:57,200
uh concrete we have uh we want to

00:22:55,200 --> 00:22:59,360
somehow organize our musical notes

00:22:57,200 --> 00:23:01,200
around something and uh the way this is

00:22:59,360 --> 00:23:03,200
usually done is with so-called patterns

00:23:01,200 --> 00:23:05,840
patterns are collections of notes

00:23:03,200 --> 00:23:07,520
that you can then reuse think of them as

00:23:05,840 --> 00:23:09,520
like a method in in a programming

00:23:07,520 --> 00:23:13,039
language maybe you can reuse that

00:23:09,520 --> 00:23:15,039
and so a pattern um is made out of notes

00:23:13,039 --> 00:23:16,320
and then you can arrange the patterns

00:23:15,039 --> 00:23:18,400
into songs and since

00:23:16,320 --> 00:23:20,880
this is this is ableton live it's a

00:23:18,400 --> 00:23:22,960
software i sometimes use to make music

00:23:20,880 --> 00:23:24,320
but it's uh the screenshot is a bit

00:23:22,960 --> 00:23:27,280
weird so let's

00:23:24,320 --> 00:23:28,960
take a look at a simplification of that

00:23:27,280 --> 00:23:29,919
so in the bottom you have what is called

00:23:28,960 --> 00:23:33,280
a piano roll

00:23:29,919 --> 00:23:35,760
yeah the x-axis is time and the y-axis

00:23:33,280 --> 00:23:38,320
is the pitch or the notes and this is

00:23:35,760 --> 00:23:39,840
organized in like a piano keyboard thing

00:23:38,320 --> 00:23:41,360
and so you can just put the you can

00:23:39,840 --> 00:23:43,520
paint the notes into

00:23:41,360 --> 00:23:45,600
a pattern and then you can reuse that

00:23:43,520 --> 00:23:48,720
pattern on the top in the song structure

00:23:45,600 --> 00:23:50,640
and you can repeat them and you can

00:23:48,720 --> 00:23:53,039
stop them at some point and then restart

00:23:50,640 --> 00:23:55,360
them and so this is something

00:23:53,039 --> 00:23:57,039
that is really easy to work with and i

00:23:55,360 --> 00:23:58,240
want to do it in code so let's build a

00:23:57,039 --> 00:23:59,279
dsl for that

00:23:58,240 --> 00:24:00,720
i'm not going to show you the

00:23:59,279 --> 00:24:02,080
implementation i'm just going to show

00:24:00,720 --> 00:24:04,000
you how i'm using it

00:24:02,080 --> 00:24:05,279
so the first thing we want to do is drum

00:24:04,000 --> 00:24:09,120
patterns

00:24:05,279 --> 00:24:12,799
and since i like step programming i just

00:24:09,120 --> 00:24:14,159
use strings here to to show the on and

00:24:12,799 --> 00:24:16,080
off notes

00:24:14,159 --> 00:24:18,400
and this is a very typical techno beat

00:24:16,080 --> 00:24:20,480
it has the snares on the twos and the

00:24:18,400 --> 00:24:20,799
fours and the kick drum on each one of

00:24:20,480 --> 00:24:22,720
them

00:24:20,799 --> 00:24:23,919
and then the hi-hat on the eights in

00:24:22,720 --> 00:24:26,320
between

00:24:23,919 --> 00:24:26,960
and it's uh it's a very typical drum

00:24:26,320 --> 00:24:30,320
beat

00:24:26,960 --> 00:24:31,840
um heard a thousand of times for notes

00:24:30,320 --> 00:24:35,200
is a little bit more complicated

00:24:31,840 --> 00:24:36,799
because we want to be able to input

00:24:35,200 --> 00:24:38,720
nodes at certain times and there's more

00:24:36,799 --> 00:24:41,760
parameters so something like an

00:24:38,720 --> 00:24:44,960
asterisk wouldn't be enough and so

00:24:41,760 --> 00:24:48,159
we have something like

00:24:44,960 --> 00:24:50,400
a note name which is just the the

00:24:48,159 --> 00:24:52,000
the letter and the octave and then we

00:24:50,400 --> 00:24:54,480
give it a length as well

00:24:52,000 --> 00:24:55,919
and the p is just nil i i just aliased

00:24:54,480 --> 00:24:58,480
that to nil because p

00:24:55,919 --> 00:24:59,200
stands for pause and it was easier to

00:24:58,480 --> 00:25:02,080
type than

00:24:59,200 --> 00:25:03,520
nil and you can also chain notes

00:25:02,080 --> 00:25:05,600
together with commas

00:25:03,520 --> 00:25:07,360
to create chords like chords are just

00:25:05,600 --> 00:25:09,440
collection of notes

00:25:07,360 --> 00:25:11,679
played together at the same time and

00:25:09,440 --> 00:25:14,320
then we define all these patterns and

00:25:11,679 --> 00:25:16,240
then we can turn them into songs and

00:25:14,320 --> 00:25:18,000
it works a little bit like in ableton

00:25:16,240 --> 00:25:19,520
live where you say okay this pattern

00:25:18,000 --> 00:25:22,880
starts at position

00:25:19,520 --> 00:25:25,520
100 and it's repeated four times and

00:25:22,880 --> 00:25:26,480
with that you can actually build a song

00:25:25,520 --> 00:25:30,450
and this is

00:25:26,480 --> 00:25:37,730
um this is a very simple version of that

00:25:30,450 --> 00:25:37,730
[Music]

00:25:37,840 --> 00:25:43,840
yeah so this is uh yeah whatever

00:25:41,520 --> 00:25:43,840
thank you

00:25:44,720 --> 00:25:48,400
but still something is missing here and

00:25:46,880 --> 00:25:49,679
uh we're gonna figure that out in the

00:25:48,400 --> 00:25:52,960
mixing stage because

00:25:49,679 --> 00:25:56,159
uh we can fix it in the mix um

00:25:52,960 --> 00:25:58,559
and so uh yeah so

00:25:56,159 --> 00:26:00,240
if you look at any music studio you've

00:25:58,559 --> 00:26:01,919
probably seen that in the documentary if

00:26:00,240 --> 00:26:03,520
you've never been in a music studio i

00:26:01,919 --> 00:26:04,559
don't think i've ever been in a proper

00:26:03,520 --> 00:26:07,279
music studio

00:26:04,559 --> 00:26:08,000
you see these huge mixing desks and what

00:26:07,279 --> 00:26:10,000
they are

00:26:08,000 --> 00:26:11,360
are essentially a way to plug in all the

00:26:10,000 --> 00:26:15,760
instruments you have

00:26:11,360 --> 00:26:17,520
and mix them together and so

00:26:15,760 --> 00:26:20,000
we can do that in software as well of

00:26:17,520 --> 00:26:23,120
course and

00:26:20,000 --> 00:26:24,240
and the structure is a little bit like

00:26:23,120 --> 00:26:25,919
this so you have all these

00:26:24,240 --> 00:26:27,840
they are called channels and every

00:26:25,919 --> 00:26:28,720
channel would be responsible for one

00:26:27,840 --> 00:26:32,159
instrument so

00:26:28,720 --> 00:26:34,240
for example or bass drum or hi-hats or a

00:26:32,159 --> 00:26:38,000
bass sound or something like that

00:26:34,240 --> 00:26:40,080
and then you can vary various parameters

00:26:38,000 --> 00:26:42,000
on these channels and then they all get

00:26:40,080 --> 00:26:44,559
sent into the sum channel

00:26:42,000 --> 00:26:46,799
and uh additionally you have what is

00:26:44,559 --> 00:26:50,080
called send channels so you can send

00:26:46,799 --> 00:26:52,559
slight amounts of your channel data into

00:26:50,080 --> 00:26:54,880
like small amounts of your channel

00:26:52,559 --> 00:26:56,320
signal into the send channels and do

00:26:54,880 --> 00:26:58,159
interesting things with them

00:26:56,320 --> 00:27:00,480
i'm going to explain all of that later

00:26:58,159 --> 00:27:02,320
on so per channel we have volume we have

00:27:00,480 --> 00:27:04,080
an equalizer we have a compressor and we

00:27:02,320 --> 00:27:05,919
have insert effects

00:27:04,080 --> 00:27:07,600
that is like a typical thing that would

00:27:05,919 --> 00:27:09,840
happen in a mixing desk what is an

00:27:07,600 --> 00:27:11,740
equalizer an equalizer is essentially a

00:27:09,840 --> 00:27:12,960
set of filters that allow you to

00:27:11,740 --> 00:27:15,440
[Music]

00:27:12,960 --> 00:27:16,799
change the volume of different parts of

00:27:15,440 --> 00:27:19,360
the frequency spectrum

00:27:16,799 --> 00:27:20,320
why would you want that well if you're

00:27:19,360 --> 00:27:21,760
mixing together

00:27:20,320 --> 00:27:24,000
lots of different sounds you want to

00:27:21,760 --> 00:27:25,679
make sure that every sound has its own

00:27:24,000 --> 00:27:26,559
space in the frequency spectrum because

00:27:25,679 --> 00:27:28,240
you if you

00:27:26,559 --> 00:27:29,600
for example if you have a bass drum and

00:27:28,240 --> 00:27:32,080
a bass and

00:27:29,600 --> 00:27:33,679
a bassy kind of lead and you mix all of

00:27:32,080 --> 00:27:34,000
that together it's going to sound mushy

00:27:33,679 --> 00:27:36,159
real

00:27:34,000 --> 00:27:37,600
quick and with an equalizer you can try

00:27:36,159 --> 00:27:40,080
to separate these as

00:27:37,600 --> 00:27:41,919
as much as possible a compressor is an

00:27:40,080 --> 00:27:44,320
interesting thing it's not about data

00:27:41,919 --> 00:27:46,640
rate reduction or anything it means that

00:27:44,320 --> 00:27:49,600
you're compressing the dynamic range

00:27:46,640 --> 00:27:52,159
and if you look at this curve the x-axis

00:27:49,600 --> 00:27:55,679
is the input the y-axis is the output so

00:27:52,159 --> 00:27:58,000
louder signals are getting um

00:27:55,679 --> 00:27:59,520
louder signals are getting reduced in

00:27:58,000 --> 00:28:02,080
loudness and then

00:27:59,520 --> 00:28:03,679
the tricky part is um so the the whole

00:28:02,080 --> 00:28:05,279
signal gets quieter and then you can

00:28:03,679 --> 00:28:06,880
boost it up again and so suddenly

00:28:05,279 --> 00:28:08,320
everything is louder than before which

00:28:06,880 --> 00:28:09,919
is weird because we made something

00:28:08,320 --> 00:28:11,760
quieter in the beginning

00:28:09,919 --> 00:28:13,679
but that is how a compressor works so it

00:28:11,760 --> 00:28:16,080
essentially compresses down the dynamic

00:28:13,679 --> 00:28:18,880
range and makes things louder

00:28:16,080 --> 00:28:20,559
insert effects can be anything i'm i'm

00:28:18,880 --> 00:28:21,520
doing two things here the first one is a

00:28:20,559 --> 00:28:23,600
wave shaper

00:28:21,520 --> 00:28:24,960
a wave shaper is a really simple thing

00:28:23,600 --> 00:28:27,039
you have

00:28:24,960 --> 00:28:28,720
an input and you have an output x axis

00:28:27,039 --> 00:28:30,320
input yx is output

00:28:28,720 --> 00:28:32,640
and you create these curves these wave

00:28:30,320 --> 00:28:34,720
shaping curves and they distort the

00:28:32,640 --> 00:28:36,559
input signal and sometimes distortion is

00:28:34,720 --> 00:28:38,240
something we want if we want to play an

00:28:36,559 --> 00:28:38,880
electric guitar for example or if we

00:28:38,240 --> 00:28:42,480
want to make

00:28:38,880 --> 00:28:43,679
our kind of weird small bass drum

00:28:42,480 --> 00:28:46,640
sounding a little bit bigger

00:28:43,679 --> 00:28:49,360
and so this is a wave shaper and i gave

00:28:46,640 --> 00:28:52,240
you some examples of how

00:28:49,360 --> 00:28:53,200
varying the a parameter here which

00:28:52,240 --> 00:28:57,360
essentially

00:28:53,200 --> 00:29:01,279
like curves the the curvature there

00:28:57,360 --> 00:29:01,279
to make it sound more harsh

00:29:04,000 --> 00:29:08,559
you can hear that it's like the signal

00:29:06,720 --> 00:29:09,679
starts to look a little bit weird and it

00:29:08,559 --> 00:29:12,080
it starts to

00:29:09,679 --> 00:29:13,279
to crush a little bit and the last one

00:29:12,080 --> 00:29:16,240
is chorus

00:29:13,279 --> 00:29:17,360
chorus is essentially a way of taking

00:29:16,240 --> 00:29:19,760
part of the signal

00:29:17,360 --> 00:29:20,799
delaying it a tiny amount and varying

00:29:19,760 --> 00:29:22,080
this delay

00:29:20,799 --> 00:29:23,840
and then putting it together with the

00:29:22,080 --> 00:29:24,399
original so it looks a little bit like

00:29:23,840 --> 00:29:26,480
this

00:29:24,399 --> 00:29:27,840
so if you have a sawtooth wave it would

00:29:26,480 --> 00:29:29,760
just um

00:29:27,840 --> 00:29:32,559
like delay these against each other and

00:29:29,760 --> 00:29:35,120
that creates interesting

00:29:32,559 --> 00:29:36,000
effects i can't explain it let's listen

00:29:35,120 --> 00:29:39,919
to it

00:29:36,000 --> 00:29:41,840
this is without and that is with did you

00:29:39,919 --> 00:29:45,120
hear the difference

00:29:41,840 --> 00:29:47,200
uh cool stand effects

00:29:45,120 --> 00:29:48,960
um so send channels are there for

00:29:47,200 --> 00:29:50,960
effects that you want to have on all

00:29:48,960 --> 00:29:52,399
channels and in parallel so you can from

00:29:50,960 --> 00:29:52,880
every channel you can send something to

00:29:52,399 --> 00:29:55,440
it

00:29:52,880 --> 00:29:57,840
oh man i'm running out of time um so a

00:29:55,440 --> 00:30:01,279
delay is

00:29:57,840 --> 00:30:03,039
an echo this is the code

00:30:01,279 --> 00:30:04,880
you've heard that before a reverb is

00:30:03,039 --> 00:30:05,279
like a room sound so this is a pretty

00:30:04,880 --> 00:30:08,559
good

00:30:05,279 --> 00:30:10,159
acoustic thing though the way you create

00:30:08,559 --> 00:30:12,320
this in software is you have lots of

00:30:10,159 --> 00:30:14,240
echoes and then you use diffusers to

00:30:12,320 --> 00:30:17,039
mush them all together so that it sounds

00:30:14,240 --> 00:30:20,880
a little bit nicer

00:30:17,039 --> 00:30:24,720
so you hear the room in there right um

00:30:20,880 --> 00:30:27,840
gonna skip that and so

00:30:24,720 --> 00:30:31,200
for the last part um

00:30:27,840 --> 00:30:34,960
it's really inefficient and so

00:30:31,200 --> 00:30:39,760
um i need to i i pre-calculate this

00:30:34,960 --> 00:30:50,120
and examples uh no

00:30:39,760 --> 00:31:02,840
song final

00:30:50,120 --> 00:31:03,860
[Music]

00:31:02,840 --> 00:31:06,559
so

00:31:03,860 --> 00:31:19,250
[Music]

00:31:06,559 --> 00:31:22,299
go for it

00:31:19,250 --> 00:31:22,299
[Music]

00:31:23,120 --> 00:31:32,320
there's a break coming up

00:31:26,240 --> 00:31:36,680
wait for it

00:31:32,320 --> 00:31:36,680
[Music]

00:31:37,919 --> 00:31:49,199
i'm not done

00:31:46,140 --> 00:31:49,199
[Music]

00:31:51,900 --> 00:32:01,840
[Music]

00:31:56,799 --> 00:32:01,840
now i'm done

00:32:08,559 --> 00:32:13,519
and it is i'm embarrassed to say it's

00:32:11,120 --> 00:32:15,760
still the wrong url there's a dash in

00:32:13,519 --> 00:32:17,679
there and i feel terrible about this i'm

00:32:15,760 --> 00:32:20,080
sorry

00:32:17,679 --> 00:32:22,880
i will find it anyway so many places to

00:32:20,080 --> 00:32:22,880
put a dash in there

00:32:23,279 --> 00:32:26,720
thank you so much jan i don't know about

00:32:25,039 --> 00:32:30,640
the rest of you but i loved just

00:32:26,720 --> 00:32:30,640
sitting back and listening to the waves

00:32:32,720 --> 00:32:38,720

YouTube URL: https://www.youtube.com/watch?v=D6EIHoSkPYQ


