Title: GitOps as a means of distribution
Publication date: 2021-04-30
Playlist: GitOpsCon 2021
Description: 
	In GitOps we mostly talk about tooling. How you can set up the GitOps loop? How you can automate your deployments? How can you standardize your tooling and take it with you between projects? Argo or Flux?

What if we tell you that maybe not just the tooling what's worth sharing between projects?

In this talk, you will learn about two consultantsâ€™ experiences in applying GitOps at European companies, and their ideas on how to share not just the tooling, but the stacks defined in GitOps repos.

This talk is also a call to action to set up open-source reference stacks that equip your cluster with the typical cluster components. And use GitOps as a means of distribution.
Captions: 
	00:00:02,000 --> 00:00:06,720
hey folks i am lazlo and this is

00:00:04,240 --> 00:00:08,880
getups as a means of distribution i'm a

00:00:06,720 --> 00:00:10,000
consultant i operate mainly in the eu

00:00:08,880 --> 00:00:11,679
norbex region

00:00:10,000 --> 00:00:13,519
and i'm also bootstrapping an open

00:00:11,679 --> 00:00:15,360
source project called kidnataio then you

00:00:13,519 --> 00:00:16,720
can find me on twitter

00:00:15,360 --> 00:00:19,119
what you can see on the screen is a

00:00:16,720 --> 00:00:21,039
simplistic view on a github's loop

00:00:19,119 --> 00:00:23,519
up in orange you can have the github

00:00:21,039 --> 00:00:26,080
repository with the kubernetes manifest

00:00:23,519 --> 00:00:27,840
yml files and the hand releases and so

00:00:26,080 --> 00:00:28,960
on and in the bottom you can see a

00:00:27,840 --> 00:00:30,960
kubernetes cluster

00:00:28,960 --> 00:00:32,160
with flux installed as a github's

00:00:30,960 --> 00:00:34,399
controller

00:00:32,160 --> 00:00:35,840
uh so this talk about is about the

00:00:34,399 --> 00:00:36,960
github's repository so it's not about

00:00:35,840 --> 00:00:39,360
the tooling itself

00:00:36,960 --> 00:00:40,960
but what's inside that repository and

00:00:39,360 --> 00:00:42,399
you may wonder whether it's about the

00:00:40,960 --> 00:00:44,480
structure you know

00:00:42,399 --> 00:00:46,559
how to organize the folders and how many

00:00:44,480 --> 00:00:48,239
github repos should you have

00:00:46,559 --> 00:00:50,000
uh there is plenty of discussion on

00:00:48,239 --> 00:00:50,480
going right now in the community about

00:00:50,000 --> 00:00:53,360
that

00:00:50,480 --> 00:00:55,680
this talk is not about that but then

00:00:53,360 --> 00:00:57,600
instead this talk is about the tools

00:00:55,680 --> 00:01:00,000
inside the github's repository and the

00:00:57,600 --> 00:01:01,680
fact that all those tools combined

00:01:00,000 --> 00:01:04,159
give you your complete cluster

00:01:01,680 --> 00:01:06,479
environment a full uh stack

00:01:04,159 --> 00:01:08,080
uh with the observability tools with the

00:01:06,479 --> 00:01:09,840
with the network routing tools with the

00:01:08,080 --> 00:01:12,960
policy tools and everything

00:01:09,840 --> 00:01:13,760
and the beautiful core principle of

00:01:12,960 --> 00:01:15,840
github's that

00:01:13,760 --> 00:01:16,880
with a single cube city i'll apply you

00:01:15,840 --> 00:01:19,200
can bring everything

00:01:16,880 --> 00:01:21,200
up and running i can only compare this

00:01:19,200 --> 00:01:21,840
experience to my first time using docker

00:01:21,200 --> 00:01:24,560
compose

00:01:21,840 --> 00:01:26,479
it was a mesmerizing experience that out

00:01:24,560 --> 00:01:27,920
of nothing i created everything

00:01:26,479 --> 00:01:29,680
and this is kind of what i feel every

00:01:27,920 --> 00:01:30,400
time i bootstrap a new environment with

00:01:29,680 --> 00:01:32,400
ghettos

00:01:30,400 --> 00:01:34,320
or in the unlucky situation of if

00:01:32,400 --> 00:01:35,600
there's a disaster recovery scenario or

00:01:34,320 --> 00:01:37,360
just preparation for it

00:01:35,600 --> 00:01:39,680
it's just a great thing to boost up

00:01:37,360 --> 00:01:42,000
everything just by a single apply

00:01:39,680 --> 00:01:43,439
and you know i'm a consultant what i

00:01:42,000 --> 00:01:44,720
mainly do is i'm

00:01:43,439 --> 00:01:47,200
essentially delivering github's

00:01:44,720 --> 00:01:50,159
repositories with handcrafted

00:01:47,200 --> 00:01:51,600
uh little yellows inside and uh you know

00:01:50,159 --> 00:01:52,960
sometimes i'm joking with myself that

00:01:51,600 --> 00:01:54,960
i'm like a yellow artist like i'm

00:01:52,960 --> 00:01:55,680
delivering artisan yamls every client

00:01:54,960 --> 00:01:58,640
has a little

00:01:55,680 --> 00:02:00,479
different requirements so i make it hand

00:01:58,640 --> 00:02:02,640
tailored for them

00:02:00,479 --> 00:02:04,799
and you know i'm a consultant so i

00:02:02,640 --> 00:02:06,640
naturally think about productivity

00:02:04,799 --> 00:02:08,479
and how can i speed things up maybe even

00:02:06,640 --> 00:02:11,039
productize things a little bit

00:02:08,479 --> 00:02:13,040
and i was thinking like how can i make

00:02:11,039 --> 00:02:15,360
maybe ready-made stacks and uh

00:02:13,040 --> 00:02:17,040
you know if i have those stacks cannot

00:02:15,360 --> 00:02:18,560
just everyone else have those tags

00:02:17,040 --> 00:02:20,800
because that would be so cool

00:02:18,560 --> 00:02:22,239
uh and you know last summer a little

00:02:20,800 --> 00:02:23,959
service brought out of this

00:02:22,239 --> 00:02:26,400
this uh thinking called

00:02:23,959 --> 00:02:28,239
oneclickinfro.com which is an experiment

00:02:26,400 --> 00:02:30,640
where the promise was if you provide the

00:02:28,239 --> 00:02:32,319
git repository you link up your github

00:02:30,640 --> 00:02:34,800
and you choose your components the

00:02:32,319 --> 00:02:37,519
logging pieces the ingress component

00:02:34,800 --> 00:02:39,840
metrics everything then i deliver a

00:02:37,519 --> 00:02:42,879
complete environment into your

00:02:39,840 --> 00:02:45,599
git repository flux included meaning

00:02:42,879 --> 00:02:46,800
it's a self-contained automated

00:02:45,599 --> 00:02:49,200
environment

00:02:46,800 --> 00:02:50,000
i wasn't alone with this idea by the way

00:02:49,200 --> 00:02:51,280
many other people

00:02:50,000 --> 00:02:52,560
started distributing their best

00:02:51,280 --> 00:02:53,440
practices in the form of git

00:02:52,560 --> 00:02:55,760
repositories

00:02:53,440 --> 00:02:57,200
like in the raspberry pi community in

00:02:55,760 --> 00:02:57,840
this project that you can see on the

00:02:57,200 --> 00:03:01,360
screen

00:02:57,840 --> 00:03:03,840
and also uh my buddy steve from the uk

00:03:01,360 --> 00:03:05,680
uh who's also a consultant also started

00:03:03,840 --> 00:03:06,800
sharing best practices as a form of git

00:03:05,680 --> 00:03:08,400
repositories

00:03:06,800 --> 00:03:09,760
i just want to give a shout out to steve

00:03:08,400 --> 00:03:11,599
thank you steve because we planned this

00:03:09,760 --> 00:03:13,120
talk originally together

00:03:11,599 --> 00:03:15,360
after all he couldn't make it but

00:03:13,120 --> 00:03:18,959
anyways thank you steve

00:03:15,360 --> 00:03:21,360
um and what i'm seeing in the community

00:03:18,959 --> 00:03:22,720
is an emerging pattern that people start

00:03:21,360 --> 00:03:24,720
using githubs as dish

00:03:22,720 --> 00:03:26,640
distributing a complete stack or cluster

00:03:24,720 --> 00:03:29,680
environments uh with their uh

00:03:26,640 --> 00:03:31,440
peers and communities

00:03:29,680 --> 00:03:32,799
and i was thinking like what's next in

00:03:31,440 --> 00:03:35,599
this movement uh

00:03:32,799 --> 00:03:35,920
and you know i was thinking like taking

00:03:35,599 --> 00:03:38,319
uh

00:03:35,920 --> 00:03:39,280
this pattern forward one more step maybe

00:03:38,319 --> 00:03:41,440
making a tool

00:03:39,280 --> 00:03:43,760
that is not just able to share just one

00:03:41,440 --> 00:03:45,680
stack like last laws almighty stack

00:03:43,760 --> 00:03:47,440
but maybe other people's best practices

00:03:45,680 --> 00:03:48,560
as well and you know kind of like a

00:03:47,440 --> 00:03:51,280
marketplace because

00:03:48,560 --> 00:03:53,200
marketplaces are good to get started on

00:03:51,280 --> 00:03:54,879
cloud providers but they fall short on

00:03:53,200 --> 00:03:55,680
the second day of operations like how do

00:03:54,879 --> 00:03:57,439
you update

00:03:55,680 --> 00:03:59,200
uh the installed components how do you

00:03:57,439 --> 00:04:00,080
automate things and i think this is

00:03:59,200 --> 00:04:02,640
where github actually

00:04:00,080 --> 00:04:03,200
shines all those core principles githubs

00:04:02,640 --> 00:04:05,840
has

00:04:03,200 --> 00:04:06,799
make it a perfect medium to distribute

00:04:05,840 --> 00:04:08,200
stacks

00:04:06,799 --> 00:04:09,840
and you know i'm taking

00:04:08,200 --> 00:04:11,680
oneclickinfro.com this little

00:04:09,840 --> 00:04:13,040
service into an open source tool which

00:04:11,680 --> 00:04:15,280
is going to be a cli

00:04:13,040 --> 00:04:17,040
and you can deliver stacks with it you

00:04:15,280 --> 00:04:17,759
basically deliver github's repositories

00:04:17,040 --> 00:04:20,720
to your

00:04:17,759 --> 00:04:21,759
friends peers clients and it's a project

00:04:20,720 --> 00:04:24,160
on the

00:04:21,759 --> 00:04:25,360
gimbal title slash given that stack and

00:04:24,160 --> 00:04:27,199
you know if you're a

00:04:25,360 --> 00:04:28,800
consultant or an indian agency or you

00:04:27,199 --> 00:04:31,600
are part of a home lab community

00:04:28,800 --> 00:04:32,639
i think githubs is really a good way to

00:04:31,600 --> 00:04:36,240
to distribute

00:04:32,639 --> 00:04:38,639
those automated stacks and um i think

00:04:36,240 --> 00:04:40,320
you should continue doing the practice

00:04:38,639 --> 00:04:40,960
through kids repositories but if you are

00:04:40,320 --> 00:04:42,800
interested

00:04:40,960 --> 00:04:44,160
you should come and join into the gimlet

00:04:42,800 --> 00:04:46,960
stack project and uh

00:04:44,160 --> 00:04:48,479
make a tool that can uh function as a

00:04:46,960 --> 00:04:48,960
marketplace that you can take it with

00:04:48,479 --> 00:04:51,680
you

00:04:48,960 --> 00:04:56,160
so uh thank you i was laszlo and it this

00:04:51,680 --> 00:04:56,160

YouTube URL: https://www.youtube.com/watch?v=zvoi2yTJr18


