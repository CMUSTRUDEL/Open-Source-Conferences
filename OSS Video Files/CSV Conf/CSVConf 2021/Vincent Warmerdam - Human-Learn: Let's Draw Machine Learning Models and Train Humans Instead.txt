Title: Vincent Warmerdam - Human-Learn: Let's Draw Machine Learning Models and Train Humans Instead
Publication date: 2021-05-20
Playlist: CSVConf 2021
Description: 
	Back in the old days, it was common to write rule-based systems.

Systems that do; data ? -&gt; rules -&gt; labels.

Nowadays, it's much more fashionable to use machine learning instead.

Something like; (data, labels) -&gt; ML -&gt; rules.

I started wondering if we might have lost something in this transition. So I made an open source package in an attempt to keep the hype at bay. Maybe natural intelligence is just enough and maybe enough is plenty. In this talk I'll present a toolbox called "human-learn" that allows you to, literally, draw out a machine learning model. I'll demonstrate the benefits of the approach. Not only do we allows the machine to learn from a domain expert, we also force the algorithm designer to actually look at the data.
Captions: 
	00:00:03,280 --> 00:00:06,480
um so hi everyone my name is vincent and

00:00:04,960 --> 00:00:07,440
i've been working on this project called

00:00:06,480 --> 00:00:09,920
human learn

00:00:07,440 --> 00:00:10,480
um and i kind of want to give a bit of

00:00:09,920 --> 00:00:12,960
background

00:00:10,480 --> 00:00:14,160
how it started and why i'm doing this so

00:00:12,960 --> 00:00:15,360
in my mind i'm a data science

00:00:14,160 --> 00:00:16,880
practitioner i do a lot of stuff with

00:00:15,360 --> 00:00:17,680
algorithms but when i got started with

00:00:16,880 --> 00:00:19,600
this

00:00:17,680 --> 00:00:20,880
um it was actually not really common to

00:00:19,600 --> 00:00:22,160
do any machine learning what was really

00:00:20,880 --> 00:00:23,119
common in the back you know back in the

00:00:22,160 --> 00:00:24,960
good old days

00:00:23,119 --> 00:00:26,560
was you had some data then you had some

00:00:24,960 --> 00:00:28,320
domain experts that will come up with

00:00:26,560 --> 00:00:29,760
some sensible rules

00:00:28,320 --> 00:00:31,359
and this way you could come up with a

00:00:29,760 --> 00:00:32,800
system to automate decisions because you

00:00:31,359 --> 00:00:34,079
would get these labels that would come

00:00:32,800 --> 00:00:35,520
out of these rules

00:00:34,079 --> 00:00:37,680
and this was like the common practice

00:00:35,520 --> 00:00:38,160
and and since then you know we've kind

00:00:37,680 --> 00:00:39,600
of

00:00:38,160 --> 00:00:41,840
taken this different route it's a lot

00:00:39,600 --> 00:00:43,440
more fashionable a lot more modern

00:00:41,840 --> 00:00:45,280
uh to use machine learning and in this

00:00:43,440 --> 00:00:47,360
case it's different because you

00:00:45,280 --> 00:00:48,640
come up with some labels and some data

00:00:47,360 --> 00:00:49,680
and then you have a machine learning

00:00:48,640 --> 00:00:53,280
model in the middle

00:00:49,680 --> 00:00:56,239
that'll figure these rules out

00:00:53,280 --> 00:00:57,520
now all of this is well and good i mean

00:00:56,239 --> 00:00:58,640
there's benefits to this machine

00:00:57,520 --> 00:00:59,920
learning approach

00:00:58,640 --> 00:01:01,039
but recently i've really started

00:00:59,920 --> 00:01:02,480
wondering you know there's a lot of

00:01:01,039 --> 00:01:03,120
human knowledge that went into these

00:01:02,480 --> 00:01:05,119
rules

00:01:03,120 --> 00:01:06,640
and you can wonder did we maybe lose

00:01:05,119 --> 00:01:08,000
something in the transition from the

00:01:06,640 --> 00:01:09,200
rule-based system to the machine

00:01:08,000 --> 00:01:11,200
learning ones

00:01:09,200 --> 00:01:13,680
um and you know there's things like

00:01:11,200 --> 00:01:15,759
fairness also model explainability

00:01:13,680 --> 00:01:17,280
but maybe it'll be better if we start

00:01:15,759 --> 00:01:21,040
thinking about systems differently

00:01:17,280 --> 00:01:23,520
where we combine the two approaches

00:01:21,040 --> 00:01:24,320
so let's talk about a bit of an example

00:01:23,520 --> 00:01:27,280
that sort of

00:01:24,320 --> 00:01:28,720
talks a little bit about this suppose

00:01:27,280 --> 00:01:30,079
you're doing fraud

00:01:28,720 --> 00:01:31,920
like you're in a fraud scenario you're

00:01:30,079 --> 00:01:34,240
interested in figuring out which

00:01:31,920 --> 00:01:35,360
uh profiles actually require a human to

00:01:34,240 --> 00:01:36,960
sort of check out because there might be

00:01:35,360 --> 00:01:39,280
a risk for fraud

00:01:36,960 --> 00:01:41,840
if i were designing such a system right

00:01:39,280 --> 00:01:43,920
even without seeing any data whatsoever

00:01:41,840 --> 00:01:45,759
i think i could say something like look

00:01:43,920 --> 00:01:48,880
if there's a child

00:01:45,759 --> 00:01:50,240
that has a higher than median income

00:01:48,880 --> 00:01:51,920
that's a bit weird like no

00:01:50,240 --> 00:01:52,720
eight-year-old should have more money

00:01:51,920 --> 00:01:54,880
than the average

00:01:52,720 --> 00:01:57,600
you know worker so that's a risk like

00:01:54,880 --> 00:01:59,280
someone has to check that out

00:01:57,600 --> 00:02:00,640
and i would also argue you know if

00:01:59,280 --> 00:02:02,240
there's a person who has 10 bank

00:02:00,640 --> 00:02:05,840
accounts that's also kind of weird let's

00:02:02,240 --> 00:02:06,880
just be checked out now the crucial

00:02:05,840 --> 00:02:09,840
thing here

00:02:06,880 --> 00:02:10,479
is that for both of these scenarios i

00:02:09,840 --> 00:02:13,280
didn't

00:02:10,479 --> 00:02:14,720
need data to basically tell the system

00:02:13,280 --> 00:02:16,800
like hey this is fishy some

00:02:14,720 --> 00:02:18,239
someone has to check this and what's

00:02:16,800 --> 00:02:20,000
interesting about this

00:02:18,239 --> 00:02:22,160
is that it's not just that i don't need

00:02:20,000 --> 00:02:23,920
any data to be able to declare this

00:02:22,160 --> 00:02:25,360
it's also that a machine learning model

00:02:23,920 --> 00:02:25,920
will never be able to learn these

00:02:25,360 --> 00:02:28,879
patterns

00:02:25,920 --> 00:02:30,959
if there's no data for it so there's

00:02:28,879 --> 00:02:31,440
already something here that suggests

00:02:30,959 --> 00:02:33,200
that

00:02:31,440 --> 00:02:34,640
we shouldn't just throw away the domain

00:02:33,200 --> 00:02:35,120
knowledge we'd be building a better

00:02:34,640 --> 00:02:37,280
system

00:02:35,120 --> 00:02:39,920
if we maybe combine it in a sensible way

00:02:37,280 --> 00:02:41,519
with a machine learning model instead

00:02:39,920 --> 00:02:42,959
you know we can build the system further

00:02:41,519 --> 00:02:44,239
and we can add some more rules that are

00:02:42,959 --> 00:02:45,920
sensible and proven

00:02:44,239 --> 00:02:47,360
and that they're validated and then

00:02:45,920 --> 00:02:48,560
finally we might be able to fall back to

00:02:47,360 --> 00:02:50,319
a machine learning model and that like

00:02:48,560 --> 00:02:52,319
this can be a good system

00:02:50,319 --> 00:02:53,760
but you might be wondering like hey do

00:02:52,319 --> 00:02:55,760
we have tools to make this

00:02:53,760 --> 00:02:57,120
easy this is a system that's plausibly

00:02:55,760 --> 00:02:59,760
something that we like

00:02:57,120 --> 00:03:01,519
but how do we make this thing easier and

00:02:59,760 --> 00:03:03,440
that's something i've been exploring

00:03:01,519 --> 00:03:04,560
and in particular one design choice that

00:03:03,440 --> 00:03:06,640
i've made is i want to

00:03:04,560 --> 00:03:07,599
make this thing a bit more you know

00:03:06,640 --> 00:03:09,280
possible

00:03:07,599 --> 00:03:11,920
but i want to do it for the scikit-learn

00:03:09,280 --> 00:03:13,920
ecosystem so then i figured okay

00:03:11,920 --> 00:03:15,120
we're doing something for scikit-learn i

00:03:13,920 --> 00:03:16,800
think humanlearn

00:03:15,120 --> 00:03:18,319
is kind of a nice name for a package

00:03:16,800 --> 00:03:21,040
what i'm trying to

00:03:18,319 --> 00:03:22,879
achieve here so what i would like to do

00:03:21,040 --> 00:03:25,680
now is just to give you a bit of a

00:03:22,879 --> 00:03:26,159
demo of this tool so i can sort of show

00:03:25,680 --> 00:03:29,440
you

00:03:26,159 --> 00:03:30,239
what sort of features are in here um so

00:03:29,440 --> 00:03:33,760
let's do that

00:03:30,239 --> 00:03:36,640
real quick this notebook runs marvelous

00:03:33,760 --> 00:03:37,760
so very first super quick demo um you

00:03:36,640 --> 00:03:40,080
might have heard this the

00:03:37,760 --> 00:03:41,120
titanic data set the goal of the data

00:03:40,080 --> 00:03:43,120
set is that you

00:03:41,120 --> 00:03:44,959
have a column with people that survived

00:03:43,120 --> 00:03:46,720
the disaster or didn't

00:03:44,959 --> 00:03:48,799
and then you can basically that on like

00:03:46,720 --> 00:03:49,200
the class of the passenger your first

00:03:48,799 --> 00:03:51,840
second

00:03:49,200 --> 00:03:54,239
third class for your ticket there's the

00:03:51,840 --> 00:03:56,879
gender that we know there's your age

00:03:54,239 --> 00:03:58,799
and we also know how much money you paid

00:03:56,879 --> 00:04:01,120
for the ticket

00:03:58,799 --> 00:04:02,640
and let's say that i just have a curious

00:04:01,120 --> 00:04:04,000
hypothesis that i just want to turn into

00:04:02,640 --> 00:04:06,959
a machine learning model

00:04:04,000 --> 00:04:08,959
let's say that i maybe think you know if

00:04:06,959 --> 00:04:10,400
you paid more money for your ticket

00:04:08,959 --> 00:04:12,239
odds are that you were probably on the

00:04:10,400 --> 00:04:13,840
upper deck and if you're on the upper

00:04:12,239 --> 00:04:15,920
deck you're probably closer to a life

00:04:13,840 --> 00:04:19,040
raft

00:04:15,920 --> 00:04:20,639
okay let's consider that as a rule

00:04:19,040 --> 00:04:22,880
what's the easiest way in python to

00:04:20,639 --> 00:04:24,880
define that rule well

00:04:22,880 --> 00:04:26,320
i think the easiest way to do that is

00:04:24,880 --> 00:04:28,080
just write a python function

00:04:26,320 --> 00:04:29,360
you just say look here's a fare based

00:04:28,080 --> 00:04:31,600
decision that i'm making

00:04:29,360 --> 00:04:33,280
a data frame is going to go in and i

00:04:31,600 --> 00:04:34,720
have some sort of a threshold

00:04:33,280 --> 00:04:37,120
that i'm going to be applying to this

00:04:34,720 --> 00:04:38,000
fair column that i'm referring to over

00:04:37,120 --> 00:04:39,280
here

00:04:38,000 --> 00:04:41,120
and if you're you know over the

00:04:39,280 --> 00:04:42,080
threshold then let's say you survive and

00:04:41,120 --> 00:04:44,160
otherwise you don't and this will be

00:04:42,080 --> 00:04:45,919
like the machine learning model

00:04:44,160 --> 00:04:47,199
and in python this is great but the

00:04:45,919 --> 00:04:48,400
downside is it's not cycle and

00:04:47,199 --> 00:04:49,919
compatible

00:04:48,400 --> 00:04:51,600
it's a function and a scikit-learn

00:04:49,919 --> 00:04:53,600
compatible model needs to be an

00:04:51,600 --> 00:04:54,720
object with certain properties that this

00:04:53,600 --> 00:04:55,919
model currently

00:04:54,720 --> 00:04:58,880
doesn't have because it's a python

00:04:55,919 --> 00:05:01,440
function so the first main tool that

00:04:58,880 --> 00:05:02,560
humanlearn offers is this component

00:05:01,440 --> 00:05:05,120
called a function

00:05:02,560 --> 00:05:06,880
classifier it allows you to just declare

00:05:05,120 --> 00:05:08,240
any python function that you know

00:05:06,880 --> 00:05:10,479
accepts a data frame you can do any

00:05:08,240 --> 00:05:11,759
logic that you like with it but now you

00:05:10,479 --> 00:05:13,840
get a component

00:05:11,759 --> 00:05:14,880
object that is not only scikit-learn

00:05:13,840 --> 00:05:18,160
compatible

00:05:14,880 --> 00:05:20,320
but it's also searchable

00:05:18,160 --> 00:05:21,680
any keyword argument that you put inside

00:05:20,320 --> 00:05:23,280
of your function here

00:05:21,680 --> 00:05:25,360
that is something that we can now grid

00:05:23,280 --> 00:05:27,520
search over because this function

00:05:25,360 --> 00:05:31,039
classifier can do the translation to the

00:05:27,520 --> 00:05:31,680
grid search component for you now i'm

00:05:31,039 --> 00:05:33,600
not going to

00:05:31,680 --> 00:05:35,360
bore you with like all the code that

00:05:33,600 --> 00:05:36,560
actually runs this like i'm doing a grid

00:05:35,360 --> 00:05:38,000
search over here

00:05:36,560 --> 00:05:39,600
and you know it's code and i'll share

00:05:38,000 --> 00:05:41,039
the notebook but the one thing that is

00:05:39,600 --> 00:05:42,080
interesting about like doing a grid

00:05:41,039 --> 00:05:43,520
search this way like

00:05:42,080 --> 00:05:45,600
we're switching the threshold for the

00:05:43,520 --> 00:05:47,039
fare what's really cool is that when you

00:05:45,600 --> 00:05:48,639
do your grid search

00:05:47,039 --> 00:05:50,320
you're kind of also doing exploratory

00:05:48,639 --> 00:05:52,400
data analysis

00:05:50,320 --> 00:05:53,840
you can kind of test your hypothesis a

00:05:52,400 --> 00:05:55,360
bit more here

00:05:53,840 --> 00:05:57,280
because you know this is like really

00:05:55,360 --> 00:05:59,039
interpretable for this value of the

00:05:57,280 --> 00:06:02,000
threshold we have a certain precision

00:05:59,039 --> 00:06:03,120
a certain accuracy and a certain recall

00:06:02,000 --> 00:06:05,280
and you know that's something

00:06:03,120 --> 00:06:06,720
that's quite tangible and you can do

00:06:05,280 --> 00:06:09,680
human learning

00:06:06,720 --> 00:06:10,800
which i thought was a cute uh thing

00:06:09,680 --> 00:06:12,080
however so

00:06:10,800 --> 00:06:14,160
function classifier is of course super

00:06:12,080 --> 00:06:16,240
useful it's great but we might be able

00:06:14,160 --> 00:06:17,840
to go a step further because

00:06:16,240 --> 00:06:19,280
it's one thing to be able to turn domain

00:06:17,840 --> 00:06:20,000
knowledge into a rule that's and

00:06:19,280 --> 00:06:21,520
compatible but

00:06:20,000 --> 00:06:24,560
if once we get here we can also start

00:06:21,520 --> 00:06:26,800
wondering well can i maybe make tools

00:06:24,560 --> 00:06:29,520
to make it easier for you to find

00:06:26,800 --> 00:06:31,360
meaningful rules

00:06:29,520 --> 00:06:33,600
and for that i figured well let's maybe

00:06:31,360 --> 00:06:37,039
do something with visualizations

00:06:33,600 --> 00:06:40,240
so a feature that i have added since

00:06:37,039 --> 00:06:43,039
i should say yesterday is a interactive

00:06:40,240 --> 00:06:44,960
parallel coordinates chart

00:06:43,039 --> 00:06:46,560
what you see here effectively is every

00:06:44,960 --> 00:06:47,919
column is a bar

00:06:46,560 --> 00:06:49,919
this is a column in the data frame

00:06:47,919 --> 00:06:51,520
that's a column this is a column

00:06:49,919 --> 00:06:53,199
what i'm able to do is i'm able to

00:06:51,520 --> 00:06:56,560
highlight and move

00:06:53,199 --> 00:06:58,240
over it the idea is that every line that

00:06:56,560 --> 00:06:59,919
you see drawn here is a point in the

00:06:58,240 --> 00:07:02,000
data frame or a row

00:06:59,919 --> 00:07:03,039
so it was one person who had label one

00:07:02,000 --> 00:07:06,400
uh i was in this

00:07:03,039 --> 00:07:08,960
class at this this age etc

00:07:06,400 --> 00:07:10,160
but this allows me to like quickly query

00:07:08,960 --> 00:07:11,520
my data set and see if there's

00:07:10,160 --> 00:07:13,680
interesting patterns and

00:07:11,520 --> 00:07:15,120
because the label has like a color

00:07:13,680 --> 00:07:18,160
attached

00:07:15,120 --> 00:07:19,759
you know you can sort of play around

00:07:18,160 --> 00:07:21,440
so maybe people in the first class had

00:07:19,759 --> 00:07:23,120
like a bigger chance of

00:07:21,440 --> 00:07:24,880
surviving and apparently that's true you

00:07:23,120 --> 00:07:26,800
can see the color difference

00:07:24,880 --> 00:07:28,720
but it mainly seems to be women who

00:07:26,800 --> 00:07:30,720
survive

00:07:28,720 --> 00:07:32,319
okay let's see if i if i do second class

00:07:30,720 --> 00:07:34,800
as well

00:07:32,319 --> 00:07:36,080
okay also still fairly precise i would

00:07:34,800 --> 00:07:38,240
say

00:07:36,080 --> 00:07:39,520
okay if we do third class then this rule

00:07:38,240 --> 00:07:42,960
no longer holds okay

00:07:39,520 --> 00:07:44,879
so so far so good um but i think the

00:07:42,960 --> 00:07:46,240
movie titanic it said women and children

00:07:44,879 --> 00:07:49,759
first

00:07:46,240 --> 00:07:51,759
so maybe if we say well men

00:07:49,759 --> 00:07:52,800
oh okay the men also survive but only if

00:07:51,759 --> 00:07:54,879
they're quite young that's something

00:07:52,800 --> 00:07:57,440
that i can quickly pick up here

00:07:54,879 --> 00:07:58,720
okay so super quick demo obviously but

00:07:57,440 --> 00:08:00,080
this is an exploration tool that just

00:07:58,720 --> 00:08:02,080
gave me two rules

00:08:00,080 --> 00:08:03,919
one um if you're a woman in first and

00:08:02,080 --> 00:08:06,319
second class you probably survived

00:08:03,919 --> 00:08:07,360
and if you're a man first second class

00:08:06,319 --> 00:08:10,639
and you're young

00:08:07,360 --> 00:08:11,520
you probably also survived okay so those

00:08:10,639 --> 00:08:14,240
are easy rules

00:08:11,520 --> 00:08:15,360
i can put that again in a function i can

00:08:14,240 --> 00:08:16,319
again put that in the function

00:08:15,360 --> 00:08:17,599
classifier

00:08:16,319 --> 00:08:20,720
and i can again put that in the grid

00:08:17,599 --> 00:08:24,560
search to see how well this does

00:08:20,720 --> 00:08:24,560
and let's run it run it run it

00:08:25,039 --> 00:08:29,440
this takes a little bit longer with the

00:08:27,840 --> 00:08:31,360
demo thing there we go

00:08:29,440 --> 00:08:32,560
and we when you run this you mean the

00:08:31,360 --> 00:08:35,760
accuracy is like 80

00:08:32,560 --> 00:08:37,279
already the precision is 95 recall isn't

00:08:35,760 --> 00:08:39,279
perfect but i would still say this is a

00:08:37,279 --> 00:08:41,039
pretty useful model 80 accuracy is not

00:08:39,279 --> 00:08:43,519
bad especially because it's like a very

00:08:41,039 --> 00:08:45,279
simple rule that i just found

00:08:43,519 --> 00:08:47,440
here's the cool thing if i now start

00:08:45,279 --> 00:08:49,120
comparing that to a random forest like a

00:08:47,440 --> 00:08:52,399
random forest classifier let's

00:08:49,120 --> 00:08:53,680
see how this compares i mean the random

00:08:52,399 --> 00:08:55,360
forest like it definitely has like a

00:08:53,680 --> 00:08:57,120
higher recall rate

00:08:55,360 --> 00:08:59,440
but it has like a worse accuracy and

00:08:57,120 --> 00:09:01,440
certainly has a worse precision

00:08:59,440 --> 00:09:03,040
but this is the cool thing i get to

00:09:01,440 --> 00:09:05,440
compare my domain knowledge with

00:09:03,040 --> 00:09:07,120
what the machine learning model does not

00:09:05,440 --> 00:09:09,120
only will that allow me to have a more

00:09:07,120 --> 00:09:10,880
mature conversation with my data science

00:09:09,120 --> 00:09:12,640
colleagues and my domain friends

00:09:10,880 --> 00:09:14,399
but this also means that i can start

00:09:12,640 --> 00:09:15,200
asking questions well why is there a

00:09:14,399 --> 00:09:16,480
difference

00:09:15,200 --> 00:09:17,920
what has the machine learning model

00:09:16,480 --> 00:09:19,600
learned that i might be able to learn

00:09:17,920 --> 00:09:21,760
from as a rule

00:09:19,600 --> 00:09:23,839
and it's this idea of being able to turn

00:09:21,760 --> 00:09:24,399
your exploratory data analysis into a

00:09:23,839 --> 00:09:26,000
model

00:09:24,399 --> 00:09:27,519
that allows you as the human not just to

00:09:26,000 --> 00:09:30,240
teach the machine learning model but

00:09:27,519 --> 00:09:32,000
also you as a human to learn

00:09:30,240 --> 00:09:34,080
that's kind of a meta thing but i like

00:09:32,000 --> 00:09:35,279
it we're forcing you to understand the

00:09:34,080 --> 00:09:37,839
story behind your data

00:09:35,279 --> 00:09:39,040
which automatically will you know it's

00:09:37,839 --> 00:09:40,800
got to mean that less things will go

00:09:39,040 --> 00:09:42,240
wrong in production as well

00:09:40,800 --> 00:09:43,920
does not mean that kaggle let's just fit

00:09:42,240 --> 00:09:46,959
predict the whole thing anymore you're

00:09:43,920 --> 00:09:48,640
just playing with data

00:09:46,959 --> 00:09:50,720
so this is a example of rules that might

00:09:48,640 --> 00:09:52,560
be easier to make but we can do better

00:09:50,720 --> 00:09:54,399
or more i can also make other widgets

00:09:52,560 --> 00:09:56,160
that help you make rules

00:09:54,399 --> 00:09:57,230
so let's also explore that a little bit

00:09:56,160 --> 00:09:59,519
more visually

00:09:57,230 --> 00:10:01,920
[Music]

00:09:59,519 --> 00:10:03,680
so that's just another example of the

00:10:01,920 --> 00:10:07,040
penguin data set

00:10:03,680 --> 00:10:07,600
here um you know um four columns this is

00:10:07,040 --> 00:10:10,160
like

00:10:07,600 --> 00:10:11,200
column one column two and then below

00:10:10,160 --> 00:10:13,920
here i've got column

00:10:11,200 --> 00:10:15,200
three and column four but also here you

00:10:13,920 --> 00:10:16,800
can just look at the picture and go

00:10:15,200 --> 00:10:18,800
do i really need a machine learning

00:10:16,800 --> 00:10:20,640
algorithm to separate the blue dots the

00:10:18,800 --> 00:10:22,160
green dots and the red ones

00:10:20,640 --> 00:10:23,839
maybe or maybe the only thing i need is

00:10:22,160 --> 00:10:24,320
just a drawing so let's just double

00:10:23,839 --> 00:10:27,279
click

00:10:24,320 --> 00:10:28,560
click sort of make a little drawing here

00:10:27,279 --> 00:10:31,360
okay that's red

00:10:28,560 --> 00:10:32,560
it's like another little drawing here

00:10:31,360 --> 00:10:33,920
let's maybe try and say that this is

00:10:32,560 --> 00:10:36,160
blue right

00:10:33,920 --> 00:10:37,360
and this is like a drawing uh which

00:10:36,160 --> 00:10:39,680
means that you don't have to be

00:10:37,360 --> 00:10:42,160
a phd to do this you can also have

00:10:39,680 --> 00:10:44,880
people with domain knowledge do this

00:10:42,160 --> 00:10:46,720
but what's really nice is maybe the

00:10:44,880 --> 00:10:49,680
shape that i just drew

00:10:46,720 --> 00:10:51,680
maybe that's also a rule i can say is a

00:10:49,680 --> 00:10:53,360
point inside of it or is it on the

00:10:51,680 --> 00:10:55,600
outside of it

00:10:53,360 --> 00:10:57,200
and if i do that for the other chart

00:10:55,600 --> 00:10:58,480
real quick as well and i'll only do it

00:10:57,200 --> 00:11:00,240
for the blue part because there's a bit

00:10:58,480 --> 00:11:02,959
of a mix below there you know

00:11:00,240 --> 00:11:04,480
just like this but effectively i now

00:11:02,959 --> 00:11:06,160
have an object that contains data that

00:11:04,480 --> 00:11:08,640
can also make a classification

00:11:06,160 --> 00:11:11,360
so what this um package also has is this

00:11:08,640 --> 00:11:12,560
thing called an interactive classifier

00:11:11,360 --> 00:11:13,839
and the main thing that it can do is you

00:11:12,560 --> 00:11:15,440
can just listen to these interactive

00:11:13,839 --> 00:11:18,160
charts learn from it

00:11:15,440 --> 00:11:18,560
and apply that as an algorithm and i'll

00:11:18,160 --> 00:11:20,959
just

00:11:18,560 --> 00:11:22,000
quickly go through some cells to confirm

00:11:20,959 --> 00:11:23,600
that indeed

00:11:22,000 --> 00:11:25,360
i have something matplotlib here that

00:11:23,600 --> 00:11:27,519
updates so yes we are doing the

00:11:25,360 --> 00:11:29,680
predictions it is cycler and compatible

00:11:27,519 --> 00:11:31,279
but also here i would argue the power

00:11:29,680 --> 00:11:33,519
kind of comes from the fact that you're

00:11:31,279 --> 00:11:35,200
doing exploratory data analysis and that

00:11:33,519 --> 00:11:37,040
can be your first model

00:11:35,200 --> 00:11:38,399
just that benchmark is something that's

00:11:37,040 --> 00:11:39,760
great

00:11:38,399 --> 00:11:42,079
and the applications of this aren't

00:11:39,760 --> 00:11:43,519
necessarily just for models by the way

00:11:42,079 --> 00:11:45,200
we can now also say things like if

00:11:43,519 --> 00:11:46,000
there's a point outside of the drawn

00:11:45,200 --> 00:11:47,680
area

00:11:46,000 --> 00:11:48,880
okay yeah then totally that's an outlier

00:11:47,680 --> 00:11:49,839
that's also something that the library

00:11:48,880 --> 00:11:51,839
supports

00:11:49,839 --> 00:11:52,959
uh you can also make these clusters and

00:11:51,839 --> 00:11:54,399
then you can turn it into like a

00:11:52,959 --> 00:11:55,760
featurization step that's also something

00:11:54,399 --> 00:11:57,760
the library supports

00:11:55,760 --> 00:11:59,839
and you can even combine it with pandas

00:11:57,760 --> 00:12:01,760
to make sub selections of your data

00:11:59,839 --> 00:12:02,959
and for my employer a while ago i made

00:12:01,760 --> 00:12:05,279
this demo where

00:12:02,959 --> 00:12:06,800
we actually use it for labeling um you

00:12:05,279 --> 00:12:08,639
can combine this with ipython widgets

00:12:06,800 --> 00:12:10,560
inside of your jupyter notebook

00:12:08,639 --> 00:12:11,920
and basically what we did is we did the

00:12:10,560 --> 00:12:14,000
trick with like language models and

00:12:11,920 --> 00:12:15,920
embeddings and cluster points together

00:12:14,000 --> 00:12:17,200
if you want to do bulk labeling it was

00:12:15,920 --> 00:12:18,240
actually not a bad tactic this is

00:12:17,200 --> 00:12:19,680
something that the brazza we're

00:12:18,240 --> 00:12:21,600
currently playing with

00:12:19,680 --> 00:12:22,880
so also for this use case just to make

00:12:21,600 --> 00:12:23,360
it easier for you to play around with

00:12:22,880 --> 00:12:24,720
data

00:12:23,360 --> 00:12:26,959
a human learner might also be able to

00:12:24,720 --> 00:12:26,959
help

00:12:28,399 --> 00:12:32,639
but but i hear some you know i hear some

00:12:30,480 --> 00:12:34,720
people say when i when i show this

00:12:32,639 --> 00:12:35,839
like okay this great vincent cool tool

00:12:34,720 --> 00:12:39,200
nice demo

00:12:35,839 --> 00:12:40,480
but is this really state of the art um

00:12:39,200 --> 00:12:42,720
and i just want to give like i think the

00:12:40,480 --> 00:12:45,360
coolest demo

00:12:42,720 --> 00:12:46,880
what i did is i went to this blog that

00:12:45,360 --> 00:12:48,560
belongs to this deep learning tool

00:12:46,880 --> 00:12:51,120
called keras and for you know

00:12:48,560 --> 00:12:52,320
cool tool like like the api it's good

00:12:51,120 --> 00:12:54,320
stuff about it

00:12:52,320 --> 00:12:55,519
but there's a demo on the blog the

00:12:54,320 --> 00:12:57,760
official blog

00:12:55,519 --> 00:13:00,560
where it's handling this credit card

00:12:57,760 --> 00:13:02,000
fraud detection use case

00:13:00,560 --> 00:13:03,519
and you know there's a lot of stuff here

00:13:02,000 --> 00:13:04,959
and it's like properly explained as well

00:13:03,519 --> 00:13:05,600
it's a good blog just want to point that

00:13:04,959 --> 00:13:07,120
out

00:13:05,600 --> 00:13:08,800
but at the bottom here they do the deep

00:13:07,120 --> 00:13:09,600
learning thing and they have like a

00:13:08,800 --> 00:13:11,279
validation

00:13:09,600 --> 00:13:13,360
precision and a recall precision and i

00:13:11,279 --> 00:13:15,519
started wondering like

00:13:13,360 --> 00:13:16,720
is it possible for me to get like a

00:13:15,519 --> 00:13:20,800
better performance than this

00:13:16,720 --> 00:13:22,240
by doing rules so what i did

00:13:20,800 --> 00:13:23,839
is i loaded the same data set i made a

00:13:22,240 --> 00:13:25,760
training set made a test set

00:13:23,839 --> 00:13:27,839
and then i made another parallel

00:13:25,760 --> 00:13:28,959
coordinates chart

00:13:27,839 --> 00:13:30,800
and you know for all intents and

00:13:28,959 --> 00:13:32,160
purposes i'm using a fancier tool here

00:13:30,800 --> 00:13:34,399
this one is called

00:13:32,160 --> 00:13:35,600
high plot and the reason why i'm just

00:13:34,399 --> 00:13:36,880
doing on this demo is you can do

00:13:35,600 --> 00:13:39,360
something fancy

00:13:36,880 --> 00:13:41,120
uh note by the way that i'm uh i'm just

00:13:39,360 --> 00:13:42,480
eyeballing the algorithm here where most

00:13:41,120 --> 00:13:43,279
people just do the deep learning thing

00:13:42,480 --> 00:13:45,040
right away

00:13:43,279 --> 00:13:46,639
i'm able to say well you know the the

00:13:45,040 --> 00:13:48,000
fraud cases are orange the non-fraud

00:13:46,639 --> 00:13:50,560
cases are blue

00:13:48,000 --> 00:13:51,440
it's kind of an easy selection here by

00:13:50,560 --> 00:13:53,279
the way

00:13:51,440 --> 00:13:54,720
um but what i can do in high plot which

00:13:53,279 --> 00:13:56,480
is just a nice trick is i can say okay

00:13:54,720 --> 00:13:59,279
let's exclude those rows

00:13:56,480 --> 00:13:59,760
so i can more precisely just have a look

00:13:59,279 --> 00:14:00,959
at

00:13:59,760 --> 00:14:02,800
you know these other columns i can

00:14:00,959 --> 00:14:04,560
select and like say okay let's let's

00:14:02,800 --> 00:14:06,959
exclude those and i can zoom in and

00:14:04,560 --> 00:14:08,959
okay again i can come up with rules and

00:14:06,959 --> 00:14:10,800
again i could put that in a function

00:14:08,959 --> 00:14:13,279
classifier

00:14:10,800 --> 00:14:13,920
we also have this tool since two days

00:14:13,279 --> 00:14:16,320
that

00:14:13,920 --> 00:14:18,560
allows you to make like case when rules

00:14:16,320 --> 00:14:20,560
so like if the first rule applies

00:14:18,560 --> 00:14:21,839
that's the classification right away i

00:14:20,560 --> 00:14:23,839
made a couple of rules just by

00:14:21,839 --> 00:14:24,959
eyeballing this on the train set

00:14:23,839 --> 00:14:27,680
and i checked the performance on the

00:14:24,959 --> 00:14:31,519
test set uh

00:14:27,680 --> 00:14:33,680
47 position 40 recall f1 score

00:14:31,519 --> 00:14:34,639
all right again super imbalanced data

00:14:33,680 --> 00:14:37,360
set right this is like

00:14:34,639 --> 00:14:38,399
the example of kind of a harder data set

00:14:37,360 --> 00:14:41,199
because it's you know

00:14:38,399 --> 00:14:44,480
uh unbalanced et cetera if i just

00:14:41,199 --> 00:14:46,000
quickly compare that to keras

00:14:44,480 --> 00:14:47,600
seem to be outperforming a deep learning

00:14:46,000 --> 00:14:49,600
model by doing

00:14:47,600 --> 00:14:50,880
exploratory data analysis that you can

00:14:49,600 --> 00:14:53,360
eyeball

00:14:50,880 --> 00:14:55,040
but that's not even the main benefit the

00:14:53,360 --> 00:14:55,760
part that's really really cool about

00:14:55,040 --> 00:14:58,000
this

00:14:55,760 --> 00:15:00,000
is that i after you know selecting a

00:14:58,000 --> 00:15:01,360
data column here and sort of noticing

00:15:00,000 --> 00:15:02,639
like hey it's this column that is

00:15:01,360 --> 00:15:05,519
causing the fraud

00:15:02,639 --> 00:15:06,800
and i can ask the question why is that

00:15:05,519 --> 00:15:08,399
i'm actively being

00:15:06,800 --> 00:15:10,160
involved in my data and i'm trying to

00:15:08,399 --> 00:15:12,720
understand what's happening there

00:15:10,160 --> 00:15:14,079
and it's the act of doing just precisely

00:15:12,720 --> 00:15:15,680
this that i think more people should

00:15:14,079 --> 00:15:17,519
start doing

00:15:15,680 --> 00:15:20,320
and it's kind of ironic i really wanted

00:15:17,519 --> 00:15:21,760
this package to be like an easy way for

00:15:20,320 --> 00:15:24,000
you as a human to teach the machine

00:15:21,760 --> 00:15:26,320
learning thing but literally if you

00:15:24,000 --> 00:15:27,760
follow this path of modeling the human

00:15:26,320 --> 00:15:29,519
is learning too

00:15:27,760 --> 00:15:33,120
and that i thought was like really

00:15:29,519 --> 00:15:33,120
really funny coincidence

00:15:33,199 --> 00:15:36,720
so this is a quick demo of human learner

00:15:35,199 --> 00:15:38,560
there's more stuff in here and i'm

00:15:36,720 --> 00:15:40,079
working on extra tools on top of it

00:15:38,560 --> 00:15:41,680
note the parallel coordinates thing i'm

00:15:40,079 --> 00:15:42,480
trying to work that into data set as

00:15:41,680 --> 00:15:44,320
well

00:15:42,480 --> 00:15:45,759
could use some help there by the way but

00:15:44,320 --> 00:15:48,399
if you want to use it definitely feel

00:15:45,759 --> 00:15:51,680
free to because it's a pip install away

00:15:48,399 --> 00:15:53,279
do note it's not perfect i mean

00:15:51,680 --> 00:15:54,399
there's a risk of data leakage you need

00:15:53,279 --> 00:15:56,160
to keep thinking about what you're doing

00:15:54,399 --> 00:15:57,839
it's certainly possible to add a rule

00:15:56,160 --> 00:15:59,920
that's bad right

00:15:57,839 --> 00:16:02,000
keep that in mind but the reason that

00:15:59,920 --> 00:16:03,279
i'm making this is because i kind of got

00:16:02,000 --> 00:16:04,720
a little bit frightened about this

00:16:03,279 --> 00:16:06,480
kaggle attitude of let's just fit

00:16:04,720 --> 00:16:08,480
predict and call it a day

00:16:06,480 --> 00:16:09,920
in real life machine learning literally

00:16:08,480 --> 00:16:11,600
needs to play by the rules

00:16:09,920 --> 00:16:14,079
and i seriously think that this human

00:16:11,600 --> 00:16:15,120
learning idea will help out a lot in

00:16:14,079 --> 00:16:17,279
understanding

00:16:15,120 --> 00:16:18,320
and designing proper systems to make

00:16:17,279 --> 00:16:19,920
decisions

00:16:18,320 --> 00:16:22,000
and if nothing else i hope that it can

00:16:19,920 --> 00:16:23,600
make it easier to translate domain

00:16:22,000 --> 00:16:25,199
knowledge into benchmarks that machine

00:16:23,600 --> 00:16:26,959
learning models need to beat

00:16:25,199 --> 00:16:28,560
a machine learning model can be great

00:16:26,959 --> 00:16:30,720
but really it has to

00:16:28,560 --> 00:16:34,399
perform better than one or two sentences

00:16:30,720 --> 00:16:36,800
that like the main expert can tell you

00:16:34,399 --> 00:16:38,399
so having said all of that i haven't

00:16:36,800 --> 00:16:41,040
even told you about my favorite feature

00:16:38,399 --> 00:16:42,399
which is a poem um the thing is i kind

00:16:41,040 --> 00:16:44,000
of do this with all my packages it's

00:16:42,399 --> 00:16:45,920
something i learned from senpai

00:16:44,000 --> 00:16:47,680
but i try to hide a poem in every

00:16:45,920 --> 00:16:49,040
package that i make that has lessons

00:16:47,680 --> 00:16:51,040
that i've learned

00:16:49,040 --> 00:16:52,079
so if you go to human learn and you

00:16:51,040 --> 00:16:55,040
import this

00:16:52,079 --> 00:16:56,720
then you get the following poem why

00:16:55,040 --> 00:16:58,639
worry about the state of the art

00:16:56,720 --> 00:17:01,600
maybe it's time that we all admit that

00:16:58,639 --> 00:17:04,319
once size fits all suit is not bespoke

00:17:01,600 --> 00:17:05,520
and it usually does not fit computers

00:17:04,319 --> 00:17:07,600
can flow with tensor

00:17:05,520 --> 00:17:09,360
but they never really learn natural

00:17:07,600 --> 00:17:11,600
intelligence is still a good idea

00:17:09,360 --> 00:17:13,199
and artificial stability a failed

00:17:11,600 --> 00:17:15,039
concern

00:17:13,199 --> 00:17:16,799
there are many ways to solve a problem

00:17:15,039 --> 00:17:17,679
but don't let fancy tools go to your

00:17:16,799 --> 00:17:19,839
head

00:17:17,679 --> 00:17:21,600
why would you use a predefined solution

00:17:19,839 --> 00:17:25,280
if you can create a custom one

00:17:21,600 --> 00:17:26,880
instead thanks for listening um

00:17:25,280 --> 00:17:28,480
if you're interested in this human learn

00:17:26,880 --> 00:17:29,039
project and i do tons of these projects

00:17:28,480 --> 00:17:30,880
by the way

00:17:29,039 --> 00:17:32,480
definitely reach out to me on slack if

00:17:30,880 --> 00:17:34,320
you're interested in the full tutorial

00:17:32,480 --> 00:17:36,000
i maintain his website called calm code

00:17:34,320 --> 00:17:37,520
io and there's a full tutorial there if

00:17:36,000 --> 00:17:39,200
you're interested as well

00:17:37,520 --> 00:17:40,720
and before we you know call it quits i

00:17:39,200 --> 00:17:42,320
do want to give a really big shout out

00:17:40,720 --> 00:17:43,840
to my employer raza

00:17:42,320 --> 00:17:45,120
they have been super supportive of me

00:17:43,840 --> 00:17:46,640
maintaining some of these open source

00:17:45,120 --> 00:17:48,240
projects on the side

00:17:46,640 --> 00:17:49,760
and i just want to make sure that they

00:17:48,240 --> 00:17:50,640
deserve a shout out we're also hiring by

00:17:49,760 --> 00:17:51,840
the way

00:17:50,640 --> 00:17:53,039
but they've been really great they

00:17:51,840 --> 00:17:54,240
they're super supportive of everything

00:17:53,039 --> 00:17:55,679
that i'm doing here as well on the side

00:17:54,240 --> 00:17:57,520
which is nice

00:17:55,679 --> 00:17:59,440
um we might not have enough time for a

00:17:57,520 --> 00:18:03,280
lot of questions but i will be on slack

00:17:59,440 --> 00:18:03,280

YouTube URL: https://www.youtube.com/watch?v=ADFeclyd4LY


