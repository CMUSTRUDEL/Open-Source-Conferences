Title: Wendy Wong - On using AutoML to predict clinical outcomes
Publication date: 2020-05-28
Playlist: CSVConf 2020
Description: 
	AutoML allows users to create high-quality machine learning models to solve real-world problems without much coding. Recently, Automl has been used in machine learning competitions such as Kaggle and showed excellent performance. The purpose of this study is to investigate whether AutoML can be utilized for biologists who have little experience with machine learning can use AutoML to gain insights from their data.  In this study, I will re-analyze a case-control gene expression data set with open-source AutoML frameworks. I will compare the frameworks on their performance on creating a predictive model for disease using biomarkers from the expression data. I will demonstrate how to keep track of models and their hyperparameters using MLflow. Finally, I will attempt to gain insights by integrating information from explainable AI tools such as DALEX and biological pathways for gene set enrichment analysis. 

--

csv,conf,v5 is a community conference for data makers everywhere, featuring stories about data sharing and data analysis from science, journalism, government, and open source.  Held May 13-14, 2020, Online. https://csvconf.com/
Captions: 
	00:00:00,060 --> 00:00:05,670
okay hi everyone my name is Wendy Wong

00:00:03,120 --> 00:00:08,670
and today I want to share with you my

00:00:05,670 --> 00:00:11,550
little experiment on applying auto ml

00:00:08,670 --> 00:00:15,210
with biological data sets to predict

00:00:11,550 --> 00:00:18,750
clinical outcomes so automatic machine

00:00:15,210 --> 00:00:23,160
learning which is also known as Auto ml

00:00:18,750 --> 00:00:26,310
has a lot of definitions so according to

00:00:23,160 --> 00:00:29,250
Wikipedia Auto ml is the process of

00:00:26,310 --> 00:00:33,559
automating the process of applying

00:00:29,250 --> 00:00:37,290
machine learning to Europe problems and

00:00:33,559 --> 00:00:39,390
this this basically means that Auto a

00:00:37,290 --> 00:00:43,620
mouse should be able to take in raw data

00:00:39,390 --> 00:00:46,850
and come up with the optimum the

00:00:43,620 --> 00:00:50,579
prohibition learning model and as a

00:00:46,850 --> 00:00:53,070
computational biologist I have seen the

00:00:50,579 --> 00:00:56,460
inclusion of biological data in the past

00:00:53,070 --> 00:01:00,180
ten years and biology has really become

00:00:56,460 --> 00:01:02,730
a information science so according to

00:01:00,180 --> 00:01:06,350
this paper that was published in 2015

00:01:02,730 --> 00:01:11,040
Copic data astronomical or genomic oh

00:01:06,350 --> 00:01:13,770
it's predicted that in 2025 even though

00:01:11,040 --> 00:01:16,200
the acquisition of genomic data is still

00:01:13,770 --> 00:01:20,040
going to be less than astronomy data

00:01:16,200 --> 00:01:23,509
they are the storage of genomic data is

00:01:20,040 --> 00:01:26,880
going to be two to 40 times higher than

00:01:23,509 --> 00:01:28,619
astronomy data and there's we are not

00:01:26,880 --> 00:01:32,130
lacking statistical methods for

00:01:28,619 --> 00:01:34,829
analyzing all sort of biological data so

00:01:32,130 --> 00:01:38,340
there are almost 700 statistical methods

00:01:34,829 --> 00:01:42,770
written in are hosted on bioconductor

00:01:38,340 --> 00:01:45,780
which is a open source software platform

00:01:42,770 --> 00:01:48,180
so I decided to carry out a little

00:01:45,780 --> 00:01:53,040
experiment to learn more about these

00:01:48,180 --> 00:01:58,009
auto ml algorithms to see whether we can

00:01:53,040 --> 00:02:01,350
use auto ml to to quickly gain insights

00:01:58,009 --> 00:02:05,579
without knowing much about the data set

00:02:01,350 --> 00:02:10,530
itself and whether certain feature

00:02:05,579 --> 00:02:13,810
selection can be used to help to

00:02:10,530 --> 00:02:16,330
optimize better algorithms using out

00:02:13,810 --> 00:02:19,270
and finally whether Experian about a I

00:02:16,330 --> 00:02:24,190
can help us gain insight so using very

00:02:19,270 --> 00:02:26,500
generic explainable the ITU's so so

00:02:24,190 --> 00:02:30,010
before I start I want to just talk about

00:02:26,500 --> 00:02:32,739
a little bit about a biologic what's

00:02:30,010 --> 00:02:37,300
different what's different in biological

00:02:32,739 --> 00:02:40,650
data sets compared with the auto mouth

00:02:37,300 --> 00:02:45,310
which supposed to be general but mostly

00:02:40,650 --> 00:02:49,720
used for true optimizing data sets that

00:02:45,310 --> 00:02:52,360
are from large companies so one huge

00:02:49,720 --> 00:02:54,430
difference is that biological data sets

00:02:52,360 --> 00:02:56,830
usually have a lot more features than

00:02:54,430 --> 00:02:59,890
number of data points it's very

00:02:56,830 --> 00:03:02,260
difficult to collect samples especially

00:02:59,890 --> 00:03:06,190
human samples and it's even more

00:03:02,260 --> 00:03:09,340
difficult to collect cases compared to

00:03:06,190 --> 00:03:12,540
control so that often leads to a very

00:03:09,340 --> 00:03:16,120
unbalanced positive-negative samples

00:03:12,540 --> 00:03:19,630
here I'm showing the central dogma which

00:03:16,120 --> 00:03:23,980
we take the the genomic DNA gets

00:03:19,630 --> 00:03:26,769
transcribed into RNA and their RNA gets

00:03:23,980 --> 00:03:30,280
translated into protein so for a typical

00:03:26,769 --> 00:03:35,260
RNA expression data that we are looking

00:03:30,280 --> 00:03:37,600
at 30,000 non-redundant human mRNA

00:03:35,260 --> 00:03:40,930
sequences so these are and we are

00:03:37,600 --> 00:03:44,680
measuring the abundance of these mRNAs

00:03:40,930 --> 00:03:49,780
and of which 20,000 a protein encoding

00:03:44,680 --> 00:03:52,329
so i decided to look at a data set on

00:03:49,780 --> 00:03:55,420
studying preterm birth or an r gene

00:03:52,329 --> 00:03:59,079
expression so this is a data from my

00:03:55,420 --> 00:04:00,820
hang at all so they look at the gene

00:03:59,079 --> 00:04:04,359
expression from pregnant woman at two

00:04:00,820 --> 00:04:07,900
time points so preterm birth is when the

00:04:04,359 --> 00:04:10,989
baby was born before 37 weeks and this

00:04:07,900 --> 00:04:13,870
accounts for one in ten births in the US

00:04:10,989 --> 00:04:20,229
and the cause of preterm birth is

00:04:13,870 --> 00:04:23,110
largely unknown but the but the the

00:04:20,229 --> 00:04:25,180
healthy outcome is pretty severe the

00:04:23,110 --> 00:04:26,760
babies sometimes need to stay in the

00:04:25,180 --> 00:04:32,670
hospital for over

00:04:26,760 --> 00:04:35,550
six months and so on so they they use a

00:04:32,670 --> 00:04:38,190
very simple multiple logistic regression

00:04:35,550 --> 00:04:41,070
with stepwise selection and they didn't

00:04:38,190 --> 00:04:45,500
have a tight sets so they reported the

00:04:41,070 --> 00:04:50,040
five hole cross-validation AUC to be

00:04:45,500 --> 00:04:52,610
equal to 0.7 oh three for the gene

00:04:50,040 --> 00:04:57,750
expression data along a time point one

00:04:52,610 --> 00:05:00,060
so I set up my my study as follows so

00:04:57,750 --> 00:05:03,480
I'm going to a study I'm going to look

00:05:00,060 --> 00:05:06,900
at three auto mlibrary stay extra Auto

00:05:03,480 --> 00:05:09,680
ml on auto Grande which is based on Amex

00:05:06,900 --> 00:05:10,890
net and key part which is based on

00:05:09,680 --> 00:05:13,560
scikit-learn

00:05:10,890 --> 00:05:15,840
and I want to set the time limit to only

00:05:13,560 --> 00:05:21,510
20 minutes for these away from to

00:05:15,840 --> 00:05:24,150
optimize and I'm using ml fro develop at

00:05:21,510 --> 00:05:27,570
data breaks for keeping track of the

00:05:24,150 --> 00:05:30,540
parameters and results and then I'm also

00:05:27,570 --> 00:05:33,240
going to look at the weather feature

00:05:30,540 --> 00:05:35,700
selection can help so I'm using the fast

00:05:33,240 --> 00:05:38,160
correlation based filter feature

00:05:35,700 --> 00:05:41,190
selection which looks for features that

00:05:38,160 --> 00:05:43,260
have high correlation of the target for

00:05:41,190 --> 00:05:46,380
a little correlation with each other and

00:05:43,260 --> 00:05:49,290
I was also going to look at the top the

00:05:46,380 --> 00:05:50,550
French differentiated genes between

00:05:49,290 --> 00:05:52,950
preterm and pooter

00:05:50,550 --> 00:05:57,420
but I ran out of time so I didn't do

00:05:52,950 --> 00:06:00,270
that part so briefly the data I have the

00:05:57,420 --> 00:06:03,740
raw data and then I would feed all

00:06:00,270 --> 00:06:08,850
features or the FC bf selected features

00:06:03,740 --> 00:06:14,490
to the for the for waveforms including

00:06:08,850 --> 00:06:16,770
the extrude grm as my base model so I

00:06:14,490 --> 00:06:19,560
try to do as little pre-processing as

00:06:16,770 --> 00:06:24,030
possible so I downloaded the normalize

00:06:19,560 --> 00:06:27,120
data from gene expression omnibus at NIH

00:06:24,030 --> 00:06:31,260
and then I'm only going to look at time

00:06:27,120 --> 00:06:35,070
point one for this experiment so this

00:06:31,260 --> 00:06:39,660
accounts for close to 40,000 genes with

00:06:35,070 --> 00:06:40,230
only 165 samples and about one-third of

00:06:39,660 --> 00:06:42,540
them

00:06:40,230 --> 00:06:45,120
pree trim and then I split it into

00:06:42,540 --> 00:06:48,450
training and test out the are seven to

00:06:45,120 --> 00:06:51,720
three ratio and I quickly did a

00:06:48,450 --> 00:06:53,670
principal component analysis to to see

00:06:51,720 --> 00:06:55,980
whether there's outliers that I need to

00:06:53,670 --> 00:06:58,380
for our or whether there's obvious

00:06:55,980 --> 00:07:01,590
patchy facts and there doesn't seem to

00:06:58,380 --> 00:07:06,450
be any the colors represent the preterm

00:07:01,590 --> 00:07:10,320
and full-term others so this is an

00:07:06,450 --> 00:07:12,990
example code for running my little

00:07:10,320 --> 00:07:19,410
experiment using issue auto I'm out in

00:07:12,990 --> 00:07:22,530
our teapot and also auto go on our

00:07:19,410 --> 00:07:27,720
Python API so but they set up is pretty

00:07:22,530 --> 00:07:32,160
similar so I accept the experiment name

00:07:27,720 --> 00:07:38,160
with ml flow as actual oto mo because I

00:07:32,160 --> 00:07:40,080
started the using actual two for my

00:07:38,160 --> 00:07:43,830
experiment and I'm not sure using the

00:07:40,080 --> 00:07:46,550
same name for a teapot and how to go on

00:07:43,830 --> 00:07:51,270
so they are tracking the same experiment

00:07:46,550 --> 00:07:53,520
so for each run I rent the algorithm and

00:07:51,270 --> 00:07:57,200
I keep track of the parameters

00:07:53,520 --> 00:08:00,780
so here are four actual Autorama is

00:07:57,200 --> 00:08:05,400
basically one line of code I I give it

00:08:00,780 --> 00:08:10,800
the features as X and the target is y

00:08:05,400 --> 00:08:14,000
and then the the dataframe name and then

00:08:10,800 --> 00:08:17,160
our since my data is unbalanced so I

00:08:14,000 --> 00:08:21,710
said balanced crisis equal to true so

00:08:17,160 --> 00:08:24,900
when I H - Otis cross-validation will

00:08:21,710 --> 00:08:27,390
automatically over example my cases so

00:08:24,900 --> 00:08:30,690
that the case control are balanced and

00:08:27,390 --> 00:08:33,919
then I also set the number of votes for

00:08:30,690 --> 00:08:37,400
cross-validation in this case is five

00:08:33,919 --> 00:08:40,650
and I run this and then I lock all the

00:08:37,400 --> 00:08:44,970
parameters that I used so the algorithm

00:08:40,650 --> 00:08:49,770
and sexual oto mo and the boats for

00:08:44,970 --> 00:08:53,700
cross-validation and then oops one

00:08:49,770 --> 00:08:58,170
second and then I also keep track of the

00:08:53,700 --> 00:09:03,570
the model metrics so here I'm keeping

00:08:58,170 --> 00:09:08,090
track of the training a UC and training

00:09:03,570 --> 00:09:11,940
precision recall a UC so and also I

00:09:08,090 --> 00:09:15,480
tracked the top model and then I also

00:09:11,940 --> 00:09:18,600
keep track of the performance on the

00:09:15,480 --> 00:09:23,130
test set and lastly I saved the model as

00:09:18,600 --> 00:09:25,560
I said the extra did the top model and

00:09:23,130 --> 00:09:28,290
from make sure out who am l and then I

00:09:25,560 --> 00:09:33,060
locked the artifact I did the similar

00:09:28,290 --> 00:09:38,070
things with teapot and auto go on so and

00:09:33,060 --> 00:09:40,680
then I can open up the mlpro u i-24 to

00:09:38,070 --> 00:09:43,140
look at all the like the runs that I

00:09:40,680 --> 00:09:46,620
have perform and I as you can see some

00:09:43,140 --> 00:09:49,320
of my runs have failed so this is a nice

00:09:46,620 --> 00:09:54,690
way to look at everything I've done and

00:09:49,320 --> 00:09:59,790
I can see that 4x2 Auto my Top Model is

00:09:54,690 --> 00:10:02,910
extremist for this to run without any

00:09:59,790 --> 00:10:07,350
feature selection and it gave me the

00:10:02,910 --> 00:10:12,810
best the top model is a example model

00:10:07,350 --> 00:10:16,530
for for with feature selection and then

00:10:12,810 --> 00:10:19,890
with that I can now select these models

00:10:16,530 --> 00:10:22,620
and then click compare and then I get

00:10:19,890 --> 00:10:26,010
this nice table with all the parameters

00:10:22,620 --> 00:10:27,690
and metrics that have tracked and the

00:10:26,010 --> 00:10:32,190
first thing I notice is that there's

00:10:27,690 --> 00:10:34,680
very severe overfitting going on because

00:10:32,190 --> 00:10:40,110
the training metrics is so much better

00:10:34,680 --> 00:10:42,270
than the test metrics another thing that

00:10:40,110 --> 00:10:46,350
I notice is that I probably make a

00:10:42,270 --> 00:10:48,300
mistake for each tool that the this is

00:10:46,350 --> 00:10:50,310
our running time in seconds is much

00:10:48,300 --> 00:10:56,340
greater than the 20 minutes that I set

00:10:50,310 --> 00:11:00,030
up and I ask and for teapot it but for

00:10:56,340 --> 00:11:02,700
actual auto ml it finished within 5

00:11:00,030 --> 00:11:05,610
minutes would will feature selection but

00:11:02,700 --> 00:11:07,380
tea party and finish within 20 minutes

00:11:05,610 --> 00:11:10,050
even with feature selection

00:11:07,380 --> 00:11:15,660
but luckily it does give me the best

00:11:10,050 --> 00:11:19,340
model within those 20 minutes so this is

00:11:15,660 --> 00:11:24,210
your five-minute warning okay thank you

00:11:19,340 --> 00:11:27,030
so this is so we can see that a with

00:11:24,210 --> 00:11:29,730
features auction RT partners does

00:11:27,030 --> 00:11:35,070
improve because I think most mostly

00:11:29,730 --> 00:11:37,800
because it was able to do the to go

00:11:35,070 --> 00:11:41,580
through all the models more efficiently

00:11:37,800 --> 00:11:45,140
so I don't want to draw very strong

00:11:41,580 --> 00:11:48,210
conclusions based on an incomplete

00:11:45,140 --> 00:11:51,090
experiment but I have the feeling that

00:11:48,210 --> 00:11:53,430
auto ml probably those pretty well when

00:11:51,090 --> 00:11:55,740
there are a few factors with large

00:11:53,430 --> 00:11:59,640
effects on the outcome but in a

00:11:55,740 --> 00:12:02,700
biological system it's it's basically a

00:11:59,640 --> 00:12:05,460
lot of factors that contribute to the

00:12:02,700 --> 00:12:14,030
clinical outcome and each one has small

00:12:05,460 --> 00:12:16,440
effect and this I am not sure how do I

00:12:14,030 --> 00:12:19,290
deal with this and whether it could

00:12:16,440 --> 00:12:21,930
optimize efficiently to the best model

00:12:19,290 --> 00:12:24,600
and I I think that feature selection

00:12:21,930 --> 00:12:28,080
does help to at least reduce the time

00:12:24,600 --> 00:12:30,800
for finding the optimum model and to

00:12:28,080 --> 00:12:33,510
also they should also help in reducing

00:12:30,800 --> 00:12:38,640
overfitting auto we sushi or befitting

00:12:33,510 --> 00:12:41,400
the in my little experiment and I also

00:12:38,640 --> 00:12:43,860
think that Auto and Mao is very useful

00:12:41,400 --> 00:12:48,320
in this convenient but maybe we need to

00:12:43,860 --> 00:12:51,390
have some things add two more some

00:12:48,320 --> 00:12:54,530
domain specific features to be added to

00:12:51,390 --> 00:12:57,630
the auto am also like feature selection

00:12:54,530 --> 00:13:01,080
that based on poor knowledge our biology

00:12:57,630 --> 00:13:03,150
like pathway so HEPA has that feature

00:13:01,080 --> 00:13:06,330
built-in so I'm going to test that later

00:13:03,150 --> 00:13:07,830
and also custom metrics so for example

00:13:06,330 --> 00:13:09,660
if we are more interested in the

00:13:07,830 --> 00:13:12,529
sensitivity of picking operator and

00:13:09,660 --> 00:13:17,299
mothers we need to optimize that

00:13:12,529 --> 00:13:19,249
x-ray explainable aii I haven't spent

00:13:17,299 --> 00:13:22,429
too much time on that but from what I

00:13:19,249 --> 00:13:24,979
can see it was it was mostly interested

00:13:22,429 --> 00:13:28,069
in giving out individual feature

00:13:24,979 --> 00:13:32,389
importance but in Balaji we are more

00:13:28,069 --> 00:13:35,029
interested in looking for interaction

00:13:32,389 --> 00:13:39,409
between the features or whether a

00:13:35,029 --> 00:13:42,619
pathway gets changed with a sort of

00:13:39,409 --> 00:13:45,109
phenotype so that's not that we probably

00:13:42,619 --> 00:13:48,499
need to go to more specialized software

00:13:45,109 --> 00:13:50,539
for that and lastly the stability of the

00:13:48,499 --> 00:13:53,989
auto and our algorithms because we have

00:13:50,539 --> 00:13:57,289
this small sample problem so I'm not

00:13:53,989 --> 00:13:59,509
sure whether if I change my input a

00:13:57,289 --> 00:14:02,899
little bit or I change my random c2 I

00:13:59,509 --> 00:14:06,469
get a completely different model so that

00:14:02,899 --> 00:14:08,479
need to be investigated as well so so I

00:14:06,469 --> 00:14:11,629
just quickly show you the package are

00:14:08,479 --> 00:14:14,029
you so this is when I listen to other

00:14:11,629 --> 00:14:16,339
data science talks this is my favorite

00:14:14,029 --> 00:14:18,859
part too to see what tools they have

00:14:16,339 --> 00:14:20,809
news and so that I can try them out so

00:14:18,859 --> 00:14:22,879
these are the ones I used so I just want

00:14:20,809 --> 00:14:25,369
to point out that Markie is the one I

00:14:22,879 --> 00:14:29,239
use for generating these sites and where

00:14:25,369 --> 00:14:31,549
Mary was I used Murray to produce the

00:14:29,239 --> 00:14:33,319
photo chart that you see earlier and

00:14:31,549 --> 00:14:35,449
lastly I just wanna point out that I

00:14:33,319 --> 00:14:37,459
have keep track off the auto ml

00:14:35,449 --> 00:14:38,749
libraries on my github so please feel

00:14:37,459 --> 00:14:41,959
free to check it out

00:14:38,749 --> 00:14:44,509
or contribute to it and I like to thank

00:14:41,959 --> 00:14:46,849
all the organizers for organizing such

00:14:44,509 --> 00:14:49,119
an amazing event and thank you for your

00:14:46,849 --> 00:14:49,119
attention

00:14:50,049 --> 00:14:55,039
Wendy thank you very much thank you that

00:14:53,479 --> 00:15:01,189
was a fantastic book and you were

00:14:55,039 --> 00:15:02,629
exactly on time so I just wanted to

00:15:01,189 --> 00:15:04,819
point out to everybody that there's a

00:15:02,629 --> 00:15:07,489
ask a question button on the right hand

00:15:04,819 --> 00:15:10,309
side um or it's fine if you just want to

00:15:07,489 --> 00:15:11,689
put the question in the chat do we have

00:15:10,309 --> 00:15:14,539
any questions because we've got

00:15:11,689 --> 00:15:17,499
certainly time for one question maybe

00:15:14,539 --> 00:15:17,499
even two questions

00:15:24,170 --> 00:15:30,569
and if we don't have it time for any

00:15:28,620 --> 00:15:34,559
questions then please everybody have a

00:15:30,569 --> 00:15:38,490
think and you can add your questions to

00:15:34,559 --> 00:15:42,029
this session even when it's finished and

00:15:38,490 --> 00:15:43,350
Wendy you will be available to ask any

00:15:42,029 --> 00:15:45,839
questions that people have any follow up

00:15:43,350 --> 00:15:49,050
in slack on you yeah I will be checking

00:15:45,839 --> 00:15:51,499
slack favorite okay thank you very much

00:15:49,050 --> 00:15:51,499

YouTube URL: https://www.youtube.com/watch?v=WQ9BzwtEXW0


