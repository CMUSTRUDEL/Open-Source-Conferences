Title: James Perry Evans - Protected health information breaches on GitHub
Publication date: 2020-05-28
Playlist: CSVConf 2020
Description: 
	Medical scientists are encouraged to use GitHub for software development, but without training, they might leak protected health information (PHI) by inadvertently including data in what should be software-only repositories. During the fall of 2016, we attempted to identify obvious breaches of PHI on GitHub as part of an ongoing interest in patient privacy. Searching GitHub for keywords patient, dob, and ssn uncovered hundreds of repositories, which were further scanned for sensitive information (names, organizations, phone numbers, street addresses, credit cards, IPs, SSNs, and emails) using Python's common regex module and the Stanford Natural Language Toolkit. Manual investigation of the results uncovered four repositories that exposed patient information. 1) A popular health care provider exposed approximately 4000 patient names. On Dec 1, we were able to track down the healthcare provider from both the repository name and doctor names in the repository files. We contacted the organization and those repositories were taken down within the day of contact. 2) A health collection agency’s repository led to the exposure of social security numbers, dates of birth, home addresses, email addresses, and insurance and billing information of roughly 30,000 patients. After we contacted the repository owner, the data and the repository were removed from GitHub some six months after the data had first been exposed. 3) A crisis center’s long-term breach of PHI was discovered in August 2016, and from the repository commit dates, it had been up for at least three years. The original repository managed the medical records application developed for the crisis center. We contacted that organization and the repository was taken down within a few days. 4) A contractor for a health insurance wellness program leaked some patient data with names, social security numbers, addresses, and health measures such as blood pressure. This organization was contacted by our hospital compliance office and the GitHub repository was removed. Our talk will cover the discovery of these PHI breaches, and how we handled them with GitHub, our hospital compliance office, and the organizations involved.

--
csv,conf,v5 is a community conference for data makers everywhere, featuring stories about data sharing and data analysis from science, journalism, government, and open source.  Held May 13-14, 2020, Online. https://csvconf.com/
Captions: 
	00:00:00,060 --> 00:00:06,629
okay so I'm a bioinformatics scientist

00:00:04,259 --> 00:00:11,969
at the Children's Hospital of

00:00:06,629 --> 00:00:15,750
Philadelphia and I work with different

00:00:11,969 --> 00:00:17,310
labs and sort of a data science capacity

00:00:15,750 --> 00:00:19,529
it's a research hospitals there's a lot

00:00:17,310 --> 00:00:21,930
of medical research and basic research

00:00:19,529 --> 00:00:24,510
going on there and this work is done

00:00:21,930 --> 00:00:28,050
jointly with Dee Ann Taylor who's a

00:00:24,510 --> 00:00:30,869
professor at UPenn and the Children's

00:00:28,050 --> 00:00:33,180
Hospital and I'll be talking about work

00:00:30,869 --> 00:00:35,730
we did several years ago I'm looking at

00:00:33,180 --> 00:00:39,149
breaches of protected health information

00:00:35,730 --> 00:00:43,739
on github so we have to go back to

00:00:39,149 --> 00:00:46,559
September 2016 when people could still

00:00:43,739 --> 00:00:49,430
go outside and mingle without being

00:00:46,559 --> 00:00:52,199
afraid of catching diseases and

00:00:49,430 --> 00:00:56,370
Microsoft had not yet acquired github

00:00:52,199 --> 00:00:58,649
that would happen two years later out at

00:00:56,370 --> 00:01:02,570
the time and still scientists are being

00:00:58,649 --> 00:01:06,119
encouraged to use github to try to make

00:01:02,570 --> 00:01:08,060
reproducible workflows and better

00:01:06,119 --> 00:01:10,049
document the whole scientific process

00:01:08,060 --> 00:01:12,090
but they're not giving a whole lot of

00:01:10,049 --> 00:01:13,860
training before they're just told to go

00:01:12,090 --> 00:01:17,700
out and use this tool and that could can

00:01:13,860 --> 00:01:21,299
result in problems google has a tool

00:01:17,700 --> 00:01:25,590
called a bigquery and part of promoting

00:01:21,299 --> 00:01:29,390
that they had archived github from 2011

00:01:25,590 --> 00:01:33,600
to 2016 so that people could quickly

00:01:29,390 --> 00:01:35,100
investigate the whole github codebase so

00:01:33,600 --> 00:01:36,900
there are some medium posts that would

00:01:35,100 --> 00:01:40,829
look for like the most common swear

00:01:36,900 --> 00:01:42,000
words in different git commits and try

00:01:40,829 --> 00:01:47,100
to determine what the most popular

00:01:42,000 --> 00:01:49,020
language was across different domains in

00:01:47,100 --> 00:01:52,229
the news there were a bunch of concerns

00:01:49,020 --> 00:01:55,649
about privacy leaks so Yahoo had

00:01:52,229 --> 00:01:58,200
recently released data about the their

00:01:55,649 --> 00:02:00,590
2014 breach where they had leaked the

00:01:58,200 --> 00:02:03,780
information of or than 500 users and

00:02:00,590 --> 00:02:06,360
they're also sort of entertaining posts

00:02:03,780 --> 00:02:10,020
while the development side where people

00:02:06,360 --> 00:02:11,970
were talking about how they accidentally

00:02:10,020 --> 00:02:13,130
committed their Amazon and keys to

00:02:11,970 --> 00:02:14,840
github

00:02:13,130 --> 00:02:17,150
and someone had found those and was

00:02:14,840 --> 00:02:18,650
using them to rack up giant compute

00:02:17,150 --> 00:02:20,930
bills so these are like private keys

00:02:18,650 --> 00:02:23,810
there you use to interact with Amazon to

00:02:20,930 --> 00:02:25,700
prove who you are and access the ec2

00:02:23,810 --> 00:02:27,950
instances that you spun up but if you

00:02:25,700 --> 00:02:30,140
accidentally commit them to github then

00:02:27,950 --> 00:02:32,990
anyone can rack up a large bill on your

00:02:30,140 --> 00:02:35,810
Amazon account so we're thinking about

00:02:32,990 --> 00:02:37,640
these things these kinds of leaks in the

00:02:35,810 --> 00:02:40,370
context of our own jobs where we deal

00:02:37,640 --> 00:02:41,630
with patient data data that's out there

00:02:40,370 --> 00:02:44,120
in the public domain that has been

00:02:41,630 --> 00:02:47,150
de-identified and is free for anyone to

00:02:44,120 --> 00:02:49,130
use but also private data being

00:02:47,150 --> 00:02:51,830
generated at the hospital with medical

00:02:49,130 --> 00:02:54,110
records that need to be kept internal

00:02:51,830 --> 00:02:56,630
that should never be leaked out this is

00:02:54,110 --> 00:02:58,940
a Wikipedia page describing pH I so it

00:02:56,630 --> 00:03:01,430
describes pretty much anything you would

00:02:58,940 --> 00:03:04,970
need to steal someone's identity plus

00:03:01,430 --> 00:03:07,970
all of their their medical data and we

00:03:04,970 --> 00:03:10,700
asked you know given that bigquery is

00:03:07,970 --> 00:03:12,110
now archived all of github for us it

00:03:10,700 --> 00:03:14,030
seems like it would be pretty pretty

00:03:12,110 --> 00:03:17,000
easy to go through and look for

00:03:14,030 --> 00:03:17,840
different pH AI keywords and do a quick

00:03:17,000 --> 00:03:20,840
investigation

00:03:17,840 --> 00:03:23,870
so bigquery the table for github was

00:03:20,840 --> 00:03:26,600
about 1.7 terabytes and at the time it

00:03:23,870 --> 00:03:30,230
cost $5 a terabyte to do the queries and

00:03:26,600 --> 00:03:31,820
we were kind of cheap so we abandoned

00:03:30,230 --> 00:03:34,160
this route and just went straight to

00:03:31,820 --> 00:03:36,860
github itself to run a quick

00:03:34,160 --> 00:03:39,110
proof-of-concept test so with the

00:03:36,860 --> 00:03:41,510
advanced queries you can query by

00:03:39,110 --> 00:03:43,820
language and here you can look for for

00:03:41,510 --> 00:03:47,360
CSV file as a substitute for a text file

00:03:43,820 --> 00:03:50,300
and as keywords I use last name DOB for

00:03:47,360 --> 00:03:53,420
date of birth and patient to try to pick

00:03:50,300 --> 00:03:57,350
up any pho information as a first pass

00:03:53,420 --> 00:03:59,090
and I found about 30 pages and match

00:03:57,350 --> 00:04:02,720
these keywords the results looked

00:03:59,090 --> 00:04:04,490
similar to this where for each research

00:04:02,720 --> 00:04:06,830
result you're linked to the exact

00:04:04,490 --> 00:04:08,750
document the file that has it you get a

00:04:06,830 --> 00:04:10,640
highlight of where the keywords are and

00:04:08,750 --> 00:04:13,940
then you point it back to the repository

00:04:10,640 --> 00:04:16,340
so you can browse them it will so I ran

00:04:13,940 --> 00:04:18,410
this one Saturday night and I started

00:04:16,340 --> 00:04:21,530
going through the results one by one by

00:04:18,410 --> 00:04:23,630
hand and some of them obviously had some

00:04:21,530 --> 00:04:25,610
mock sample test data that I was not

00:04:23,630 --> 00:04:26,780
concerned with but I did find one

00:04:25,610 --> 00:04:29,000
repository

00:04:26,780 --> 00:04:30,889
that had several patients in it so I

00:04:29,000 --> 00:04:34,070
took those names and I cross-referenced

00:04:30,889 --> 00:04:35,960
them with with Facebook and in addition

00:04:34,070 --> 00:04:39,050
to the patient names they had social

00:04:35,960 --> 00:04:41,660
security numbers emails and physical

00:04:39,050 --> 00:04:43,970
addresses was able to check that the

00:04:41,660 --> 00:04:46,160
person's hometown on Facebook matched

00:04:43,970 --> 00:04:48,500
the address that was in the leaked

00:04:46,160 --> 00:04:50,360
github document and that's what finally

00:04:48,500 --> 00:04:53,120
convinced us that these were actual

00:04:50,360 --> 00:04:54,700
people and this other social security

00:04:53,120 --> 00:04:59,360
numbers had been leaked through github

00:04:54,700 --> 00:05:02,300
so I put in an issue on github that

00:04:59,360 --> 00:05:03,620
night on the repository so a github

00:05:02,300 --> 00:05:05,870
issue is where you can like comment on

00:05:03,620 --> 00:05:07,100
someone else's code so my comment was

00:05:05,870 --> 00:05:09,590
you've leaked a bunch of patient

00:05:07,100 --> 00:05:13,550
information a few hours later the

00:05:09,590 --> 00:05:15,380
repository was removed from github but

00:05:13,550 --> 00:05:17,540
fortunately we had we had cloned it

00:05:15,380 --> 00:05:20,090
locally and by going through the

00:05:17,540 --> 00:05:23,030
documents where we'll defined the the

00:05:20,090 --> 00:05:24,979
company that it was related with and we

00:05:23,030 --> 00:05:26,780
went to the company's website and found

00:05:24,979 --> 00:05:28,970
that the guy who owned the repository

00:05:26,780 --> 00:05:31,880
his username was the concatenation of

00:05:28,970 --> 00:05:33,650
his first and last name and he was like

00:05:31,880 --> 00:05:35,990
featured is one of the people in the

00:05:33,650 --> 00:05:38,270
company so the link was pretty obvious

00:05:35,990 --> 00:05:39,800
and we contacted the company as well so

00:05:38,270 --> 00:05:41,450
that they could contact patients and

00:05:39,800 --> 00:05:43,729
tell them that their data had been

00:05:41,450 --> 00:05:46,400
linked leaked so our novel is about

00:05:43,729 --> 00:05:49,669
30,000 patients that had been up on

00:05:46,400 --> 00:05:52,010
github for about six months but after

00:05:49,669 --> 00:05:55,760
our investigation was promptly taken

00:05:52,010 --> 00:05:59,080
down so with this in hand we went to

00:05:55,760 --> 00:06:01,550
github and notified them of the problem

00:05:59,080 --> 00:06:02,479
but they basically said they couldn't do

00:06:01,550 --> 00:06:03,590
anything about it

00:06:02,479 --> 00:06:06,350
like they weren't going to police the

00:06:03,590 --> 00:06:08,630
repositories and comb through them so we

00:06:06,350 --> 00:06:11,150
decided to comb through them for github

00:06:08,630 --> 00:06:13,789
instead so we started with bigquery and

00:06:11,150 --> 00:06:16,160
we sent an email to Google pointing them

00:06:13,789 --> 00:06:19,250
to the repository it said you know if

00:06:16,160 --> 00:06:21,140
you have an archive of github then you

00:06:19,250 --> 00:06:22,910
probably have this one repository in it

00:06:21,140 --> 00:06:25,520
and you should remove it from your

00:06:22,910 --> 00:06:27,470
public gig of archive and they emailed

00:06:25,520 --> 00:06:29,720
us back saying that they did not have

00:06:27,470 --> 00:06:33,950
that repository and it seems that the

00:06:29,720 --> 00:06:36,440
Google archive of github is not quite

00:06:33,950 --> 00:06:39,500
complete and I tested at the time that

00:06:36,440 --> 00:06:40,540
none of several my repositories were not

00:06:39,500 --> 00:06:43,210
in there so it's not

00:06:40,540 --> 00:06:44,620
a complete view so we figured out we

00:06:43,210 --> 00:06:47,350
couldn't rely on bigquery to do the

00:06:44,620 --> 00:06:50,590
search and instead went back to the

00:06:47,350 --> 00:06:52,900
github API and did automated queries of

00:06:50,590 --> 00:06:56,460
different keywords like patient date of

00:06:52,900 --> 00:06:59,410
birth and SSN to pull down a bunch of

00:06:56,460 --> 00:07:01,420
search results basically and to make the

00:06:59,410 --> 00:07:04,060
search face smaller we filtered out

00:07:01,420 --> 00:07:07,390
things that obviously look like test

00:07:04,060 --> 00:07:09,640
data so if there was like test Dame in

00:07:07,390 --> 00:07:12,160
the file or like sample in the file name

00:07:09,640 --> 00:07:15,910
that we discarded those and ended up

00:07:12,160 --> 00:07:18,280
with about 270 repositories that might

00:07:15,910 --> 00:07:21,190
contain thi so those were cloned down

00:07:18,280 --> 00:07:23,770
locally and then we used the stanford

00:07:21,190 --> 00:07:27,550
NLP toolkit along with some simple

00:07:23,770 --> 00:07:29,590
regular expressions to look for bhi key

00:07:27,550 --> 00:07:31,900
words like organizations phone numbers

00:07:29,590 --> 00:07:35,020
street addresses social security numbers

00:07:31,900 --> 00:07:39,100
and then of those results we did a

00:07:35,020 --> 00:07:41,500
manual review of each repository to try

00:07:39,100 --> 00:07:43,450
to see if these were indeed real people

00:07:41,500 --> 00:07:45,610
and then try to track down the

00:07:43,450 --> 00:07:48,820
repository owners and the companies that

00:07:45,610 --> 00:07:52,750
they were associated with so so sure the

00:07:48,820 --> 00:07:55,300
results that we found so one instance

00:07:52,750 --> 00:07:57,250
there was a crisis center that had

00:07:55,300 --> 00:08:00,490
subcontracted out some work to a

00:07:57,250 --> 00:08:03,160
software consulting studio and they had

00:08:00,490 --> 00:08:05,320
accidentally committed some of the data

00:08:03,160 --> 00:08:08,040
that they were working with about 2500

00:08:05,320 --> 00:08:09,850
patients with their medical conditions

00:08:08,040 --> 00:08:12,190
medications names Social Security

00:08:09,850 --> 00:08:16,480
numbers that had been up there for about

00:08:12,190 --> 00:08:19,780
five years the repository itself had

00:08:16,480 --> 00:08:23,170
like the company's logo in there and we

00:08:19,780 --> 00:08:24,910
were able to use that to kind of company

00:08:23,170 --> 00:08:27,010
itself so that they could contact

00:08:24,910 --> 00:08:31,390
patients and get the repository taking

00:08:27,010 --> 00:08:33,599
down the second link was at a rehab

00:08:31,390 --> 00:08:35,800
center that was done by an employee

00:08:33,599 --> 00:08:38,080
working there as a software engineer

00:08:35,800 --> 00:08:40,780
I was thousands of patients and their

00:08:38,080 --> 00:08:43,599
associated doctors it took awhile to

00:08:40,780 --> 00:08:46,420
contact the repository owner and the

00:08:43,599 --> 00:08:48,220
company so after a couple of days we

00:08:46,420 --> 00:08:50,940
reported the leak to the US Department

00:08:48,220 --> 00:08:52,630
of Health and Human Services and

00:08:50,940 --> 00:08:54,190
eventually every was tracked down the

00:08:52,630 --> 00:08:56,830
company itself

00:08:54,190 --> 00:08:59,650
and I'll get the repository removed from

00:08:56,830 --> 00:09:02,590
from the public space and then as a

00:08:59,650 --> 00:09:04,990
final leak there's a popular insurance

00:09:02,590 --> 00:09:08,560
company that had hired out a software

00:09:04,990 --> 00:09:10,390
subcontractor to promote a wellness

00:09:08,560 --> 00:09:14,470
program that was conducted over several

00:09:10,390 --> 00:09:16,420
clinics so the file paths look similar

00:09:14,470 --> 00:09:20,470
to how they look at the top so it's

00:09:16,420 --> 00:09:21,990
organized by clinic and I leaked several

00:09:20,470 --> 00:09:24,850
social security numbers dates of birth

00:09:21,990 --> 00:09:27,370
addresses and emails over a period of

00:09:24,850 --> 00:09:30,160
several months the insurance company's

00:09:27,370 --> 00:09:32,560
website branding was all over the file

00:09:30,160 --> 00:09:33,760
names so they tracked them down in

00:09:32,560 --> 00:09:37,780
contact with them they were there

00:09:33,760 --> 00:09:39,580
thorough and making sure that everything

00:09:37,780 --> 00:09:42,190
was taken down and we scrubbed all the

00:09:39,580 --> 00:09:44,110
data on our side and they had many chats

00:09:42,190 --> 00:09:47,050
with our compliance office so to

00:09:44,110 --> 00:09:48,490
conclude um just have maybe some tips

00:09:47,050 --> 00:09:51,940
that you might use in case you're

00:09:48,490 --> 00:09:54,460
working with patient data now github

00:09:51,940 --> 00:09:56,410
supports free private repositories which

00:09:54,460 --> 00:09:58,990
seems like the easiest route to take to

00:09:56,410 --> 00:10:01,270
not expose anything as an alternative if

00:09:58,990 --> 00:10:04,360
you're at a larger company you could

00:10:01,270 --> 00:10:07,480
host your own github Enterprise instance

00:10:04,360 --> 00:10:10,420
and maybe set up some internal practices

00:10:07,480 --> 00:10:13,300
for security reviews or code reviews to

00:10:10,420 --> 00:10:15,910
make sure that you're not leaking out

00:10:13,300 --> 00:10:17,590
any information when you commit if

00:10:15,910 --> 00:10:20,440
you're a developer try using mock data

00:10:17,590 --> 00:10:22,900
instead of real data and also you know

00:10:20,440 --> 00:10:24,340
tell your friends about possible PHR

00:10:22,900 --> 00:10:27,880
links and try to get the word out so

00:10:24,340 --> 00:10:32,950
that this won't happen as much so just

00:10:27,880 --> 00:10:36,340
some additional tips I use a project

00:10:32,950 --> 00:10:37,930
cookie cutter that lays out my folder

00:10:36,340 --> 00:10:40,300
structure in the same way across every

00:10:37,930 --> 00:10:42,490
project and if I have any patient data I

00:10:40,300 --> 00:10:44,230
put it in a protective folder it's also

00:10:42,490 --> 00:10:45,580
in my kit ignore files so there's no

00:10:44,230 --> 00:10:48,370
chance that it could be committed to

00:10:45,580 --> 00:10:51,370
github you can also use a gift

00:10:48,370 --> 00:10:53,230
pre-commit hook where you have could

00:10:51,370 --> 00:10:55,210
hook it up to a ph eye scanner i've

00:10:53,230 --> 00:10:57,970
linked one here on github so that it

00:10:55,210 --> 00:10:59,770
could flag and notify you before you

00:10:57,970 --> 00:11:01,030
commit anything to get hub that you

00:10:59,770 --> 00:11:04,180
might have some information on your

00:11:01,030 --> 00:11:07,180
files you could also use sites that mock

00:11:04,180 --> 00:11:09,010
up fake data for you

00:11:07,180 --> 00:11:11,260
this one is a pay side I'm sure there

00:11:09,010 --> 00:11:14,050
are free versions out there and as a

00:11:11,260 --> 00:11:16,960
final note Godot is not the only tool

00:11:14,050 --> 00:11:20,140
that we might be leaking pH I through if

00:11:16,960 --> 00:11:22,180
you're using containers also be aware

00:11:20,140 --> 00:11:24,280
that you may be putting thi into those

00:11:22,180 --> 00:11:27,490
containers and then sharing them through

00:11:24,280 --> 00:11:30,070
sites like docker hub or key they

00:11:27,490 --> 00:11:32,200
already have tools built in that will do

00:11:30,070 --> 00:11:34,300
vulnerability scans so it seems feasible

00:11:32,200 --> 00:11:37,030
that you could hook up some kind of hook

00:11:34,300 --> 00:11:40,210
or automation that could do a pH I scan

00:11:37,030 --> 00:11:43,180
as well and notify you when that happens

00:11:40,210 --> 00:11:46,030
so that's all thanks to the organizers

00:11:43,180 --> 00:11:48,670
for the conference here's my Twitter

00:11:46,030 --> 00:11:52,860
handle and my email if you want to reach

00:11:48,670 --> 00:11:56,020
out awesome thank you so much

00:11:52,860 --> 00:11:57,880
so looks like there's two questions if

00:11:56,020 --> 00:12:00,460
you're willing to we have a bit of time

00:11:57,880 --> 00:12:03,370
if you're okay to answer them yes so the

00:12:00,460 --> 00:12:10,260
first question comes in the form of as

00:12:03,370 --> 00:12:13,420
my computer slowly freezes ELISA here

00:12:10,260 --> 00:12:21,460
were these in tracks es Vegas hard-coded

00:12:13,420 --> 00:12:23,800
strings or both both great next question

00:12:21,460 --> 00:12:26,200
is fired by Marianas Comet I see so many

00:12:23,800 --> 00:12:28,300
get tutorials and I never seen one that

00:12:26,200 --> 00:12:30,160
covers privacy do you know any good

00:12:28,300 --> 00:12:33,550
tutorials forget that talk about privacy

00:12:30,160 --> 00:12:38,500
concerns I am not aware of any the

00:12:33,550 --> 00:12:41,770
mentioned privacy concerns no well ince

00:12:38,500 --> 00:12:45,550
that seems like an inspiration for start

00:12:41,770 --> 00:12:47,110
one yes and we have a third question

00:12:45,550 --> 00:12:49,480
also wondering if there these

00:12:47,110 --> 00:12:53,020
repositories were archived in software

00:12:49,480 --> 00:13:01,360
heritage archive oh I have not checked

00:12:53,020 --> 00:13:03,940
or like the wayback machine is amazing

00:13:01,360 --> 00:13:07,570
question it looks like we've answered

00:13:03,940 --> 00:13:11,620
them in record time thank you so much

00:13:07,570 --> 00:13:11,980
very funny I visit no more oh one more

00:13:11,620 --> 00:13:16,990
question

00:13:11,980 --> 00:13:19,200
listen it's just one have you talked to

00:13:16,990 --> 00:13:20,490
github do you know if there's a

00:13:19,200 --> 00:13:24,300
they're doing any work to reduce a

00:13:20,490 --> 00:13:27,900
likelihood for that they're a vector for

00:13:24,300 --> 00:13:31,280
privacy leaks let's see so initially we

00:13:27,900 --> 00:13:34,140
did reach out to github years ago they

00:13:31,280 --> 00:13:36,180
they were not any help but now that

00:13:34,140 --> 00:13:38,010
microsoft owns github they're probably

00:13:36,180 --> 00:13:39,720
more open to being accountable for the

00:13:38,010 --> 00:13:41,460
content that's posted there but we've

00:13:39,720 --> 00:13:45,810
not done a second reach out since the

00:13:41,460 --> 00:13:48,440
change of hands also well then thank you

00:13:45,810 --> 00:13:48,440

YouTube URL: https://www.youtube.com/watch?v=25SbAG8uQhA


