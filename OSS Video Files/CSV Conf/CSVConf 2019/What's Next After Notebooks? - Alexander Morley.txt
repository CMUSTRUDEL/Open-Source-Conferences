Title: What's Next After Notebooks? - Alexander Morley
Publication date: 2019-06-20
Playlist: CSVConf 2019
Description: 
	Jane is a data scientist. Jane uses Jupyter notebooks as her working environment, and her presentation environment. These “computational essays” allow Jane to present her methods and her results to her colleagues at the same time. Jane is happy with this. But sometimes it’s difficult for Jane to share notebooks with her colleagues, and even harder for them to re-mix or re-use parts of the notebook, or to share their changes back to Jane. And sometimes Jane finds it hard to explain the flow of a particular notebook, or how different notebooks are tied together. There’s no provision for keeping things modular. First, I will discuss a few up-and-coming projects that are leveraging the power of new web technologies and faster browsers to solve all of fictional Jane’s problems, and more. Second, I will present a prototype for my own solution that is also web-based, and draws inspiration from some now-uncool graphical programming languages.

Talk page: https://csvconf.com/speakers/#alexander-morley
Slides: https://zenodo.org/record/2771413#.XNiP_y-ZNQI
Captions: 
	00:00:01,520 --> 00:00:06,859
yeah hi I'm Alex last year I've been

00:00:04,970 --> 00:00:08,200
doing a fellowship with Mozilla but I'm

00:00:06,859 --> 00:00:10,250
a neuroscientist that's my background

00:00:08,200 --> 00:00:13,639
and I just wanted to talk a bit today

00:00:10,250 --> 00:00:14,959
about what's next after ditching it

00:00:13,639 --> 00:00:19,010
books the spoiler is that it's more

00:00:14,959 --> 00:00:21,140
juice two notebooks but first I just

00:00:19,010 --> 00:00:23,060
kind of give you an idea of the the

00:00:21,140 --> 00:00:25,730
motivation of why I've started working

00:00:23,060 --> 00:00:27,109
on this stuff is we're gonna do a little

00:00:25,730 --> 00:00:28,730
create our own adventure so I don't have

00:00:27,109 --> 00:00:30,890
anyone did those books as a kid where

00:00:28,730 --> 00:00:33,050
you get to choose the end of your story

00:00:30,890 --> 00:00:34,310
let's choose the path or Netflix that

00:00:33,050 --> 00:00:35,930
was banned it's not recently where you

00:00:34,310 --> 00:00:38,300
could do that as a show and we're gonna

00:00:35,930 --> 00:00:41,240
do one quickly now and then I promise

00:00:38,300 --> 00:00:42,920
you it's relevant so it's a sunny day in

00:00:41,240 --> 00:00:43,970
Portland you've just left home and

00:00:42,920 --> 00:00:46,760
you're walking to give a presentation

00:00:43,970 --> 00:00:48,950
you're super excited about but the thing

00:00:46,760 --> 00:00:50,420
you're walking on is tiled so I don't

00:00:48,950 --> 00:00:51,860
know about you but I sometimes try and

00:00:50,420 --> 00:00:53,990
step in the center of the tiles rather

00:00:51,860 --> 00:00:56,300
than on the edges maybe that's just me

00:00:53,990 --> 00:00:57,320
but so we're gonna have a vote do we

00:00:56,300 --> 00:00:59,030
think we should just ignore the tiles

00:00:57,320 --> 00:01:00,770
and walk maybe like a normal person or

00:00:59,030 --> 00:01:02,660
should we adjust our strides so that we

00:01:00,770 --> 00:01:06,469
don't step on the edges so who thinks we

00:01:02,660 --> 00:01:09,100
should walk normally a and B who thinks

00:01:06,469 --> 00:01:09,100
just annoying

00:01:10,530 --> 00:01:17,190
I'm stoked this is a good audience so

00:01:15,150 --> 00:01:19,860
unfortunately we didn't notice somebody

00:01:17,190 --> 00:01:21,299
looking at his phone and he's just felt

00:01:19,860 --> 00:01:22,799
a coffee on a shirt and we're on our way

00:01:21,299 --> 00:01:25,020
to give a talk and there's no way we can

00:01:22,799 --> 00:01:26,400
give a talking like this so we've got

00:01:25,020 --> 00:01:27,890
two choices now we can either have a

00:01:26,400 --> 00:01:30,420
look in the shop round the corner

00:01:27,890 --> 00:01:32,880
but it's the second-hand shop and they

00:01:30,420 --> 00:01:35,280
might not have our size or we can sprint

00:01:32,880 --> 00:01:36,450
all the way back home we should be able

00:01:35,280 --> 00:01:38,759
to make it there and back in time for

00:01:36,450 --> 00:01:44,190
the talk so who thinks a we should go to

00:01:38,759 --> 00:01:49,289
the shop on the corner and and B who

00:01:44,190 --> 00:01:58,200
thinks we should run back home what do

00:01:49,289 --> 00:02:01,740
we think I think I think we're gonna go

00:01:58,200 --> 00:02:03,179
with a so we walk pick pick up the pace

00:02:01,740 --> 00:02:04,890
and walk quickly two hats and cats which

00:02:03,179 --> 00:02:06,149
is your favorite clothes show luckily

00:02:04,890 --> 00:02:08,220
it's open and you have a quick look

00:02:06,149 --> 00:02:11,000
around and they have the perfect shirt

00:02:08,220 --> 00:02:14,310
and it's gonna go ace with your jacket

00:02:11,000 --> 00:02:16,320
and so that's the story I I could tell

00:02:14,310 --> 00:02:20,070
you that that was the most boring ending

00:02:16,320 --> 00:02:21,480
you could have possibly chosen you could

00:02:20,070 --> 00:02:24,410
have either adopted a cat you could have

00:02:21,480 --> 00:02:24,410
met Michelle Obama

00:02:24,640 --> 00:02:30,980
but unfortunately we got a nice share

00:02:27,200 --> 00:02:37,400
anyway and so what what what I feel how

00:02:30,980 --> 00:02:40,010
I feel that's cute is that doing data

00:02:37,400 --> 00:02:41,690
analysis is often a bit more like this

00:02:40,010 --> 00:02:44,690
choose-your-own-adventure thing than

00:02:41,690 --> 00:02:47,300
writing an essay but the way we present

00:02:44,690 --> 00:02:48,170
it is is if it's just a nice story and

00:02:47,300 --> 00:02:49,760
sometimes that's good

00:02:48,170 --> 00:02:51,230
it's nice to have a good strong

00:02:49,760 --> 00:02:53,600
narrative to be able to explain what

00:02:51,230 --> 00:02:54,980
you're doing to people sometimes we want

00:02:53,600 --> 00:02:56,510
to share the whole process we want to

00:02:54,980 --> 00:02:59,540
share these Forks these decisions we've

00:02:56,510 --> 00:03:00,890
made and we want to be able to do that

00:02:59,540 --> 00:03:02,239
while we're developing we want to be

00:03:00,890 --> 00:03:03,590
able to take different directions and

00:03:02,239 --> 00:03:06,519
and be able to see from a high level

00:03:03,590 --> 00:03:09,890
what we're doing so what I'm gonna do is

00:03:06,519 --> 00:03:12,160
describe a few pain points I guess that

00:03:09,890 --> 00:03:15,050
we've observed from watching people use

00:03:12,160 --> 00:03:18,560
notebooks and have a look at some

00:03:15,050 --> 00:03:20,560
potential new concepts for interfaces

00:03:18,560 --> 00:03:24,650
that build off the notebook stack

00:03:20,560 --> 00:03:28,340
and but allow us to have a little bit

00:03:24,650 --> 00:03:29,840
more complexity and these flows so the

00:03:28,340 --> 00:03:31,280
first set of observations I guess if

00:03:29,840 --> 00:03:32,780
anyone says they work with your

00:03:31,280 --> 00:03:34,519
notebooks and they don't have a folder

00:03:32,780 --> 00:03:38,750
that looks like this then I absolutely

00:03:34,519 --> 00:03:40,610
don't believe you the second one is

00:03:38,750 --> 00:03:41,780
people copy and pasting cells because

00:03:40,610 --> 00:03:43,310
you might want to make a little change

00:03:41,780 --> 00:03:45,290
one cell but then you want to compare

00:03:43,310 --> 00:03:46,549
how the output of the first one looks to

00:03:45,290 --> 00:03:48,440
the second one and then you scroll up

00:03:46,549 --> 00:03:50,090
and down we're seeing bunch of people

00:03:48,440 --> 00:03:51,410
going through entire cells and

00:03:50,090 --> 00:03:52,700
commenting out each line just because

00:03:51,410 --> 00:03:55,130
they're not sure whether they're going

00:03:52,700 --> 00:03:56,750
to delete that or not and these kind of

00:03:55,130 --> 00:03:59,090
I'm not sure if I'll need it later

00:03:56,750 --> 00:04:00,380
things tend to be the use case that

00:03:59,090 --> 00:04:02,120
people will say okay you should be using

00:04:00,380 --> 00:04:05,209
version control and that's great but

00:04:02,120 --> 00:04:06,769
often these small changes are not atomic

00:04:05,209 --> 00:04:08,870
things that you might want to commit as

00:04:06,769 --> 00:04:10,579
a single thing in version control and

00:04:08,870 --> 00:04:13,370
also you want to be really explicitly

00:04:10,579 --> 00:04:17,570
comparing what you had before to what

00:04:13,370 --> 00:04:19,789
change you had so we design an interface

00:04:17,570 --> 00:04:22,160
that kind of embraces there's copy one

00:04:19,789 --> 00:04:23,570
copy two thing but it does it in a

00:04:22,160 --> 00:04:27,979
little bit more of a structured manner

00:04:23,570 --> 00:04:30,380
so kind of on the on the basics this is

00:04:27,979 --> 00:04:33,440
kind of like a normal notebook maybe

00:04:30,380 --> 00:04:34,849
with some cell templating the only thing

00:04:33,440 --> 00:04:37,610
to notice that's slightly different is

00:04:34,849 --> 00:04:39,380
that we enforce that people have some

00:04:37,610 --> 00:04:43,700
text to describe what each cell is

00:04:39,380 --> 00:04:45,650
attached to itself and then we can play

00:04:43,700 --> 00:04:49,099
it and the only other thing is that we

00:04:45,650 --> 00:04:50,479
pin the output to the bottom here sorry

00:04:49,099 --> 00:04:52,849
this is a bit unclear on-screen but I

00:04:50,479 --> 00:04:54,349
think I think you'll get the idea so the

00:04:52,849 --> 00:04:57,159
key thing here is that we can then make

00:04:54,349 --> 00:05:00,320
a fork of this notebook but have it

00:04:57,159 --> 00:05:01,729
appear visually and so that we can see

00:05:00,320 --> 00:05:03,770
exactly what changes were going to make

00:05:01,729 --> 00:05:05,990
so what we've done there it just made a

00:05:03,770 --> 00:05:09,320
fork from that first cell and then we're

00:05:05,990 --> 00:05:11,240
going to make a change in that cell and

00:05:09,320 --> 00:05:12,740
we can immediately see what the change

00:05:11,240 --> 00:05:15,200
in that cell there which is highlighted

00:05:12,740 --> 00:05:18,620
has had what impact that has had on the

00:05:15,200 --> 00:05:19,970
outputs and we can do the same thing

00:05:18,620 --> 00:05:24,080
again we could make another fork from

00:05:19,970 --> 00:05:27,080
that first cell and maybe you use

00:05:24,080 --> 00:05:29,750
different style and we can compare them

00:05:27,080 --> 00:05:34,990
all you can collapse different things to

00:05:29,750 --> 00:05:34,990
see compare back to the first one

00:05:35,800 --> 00:05:41,979
tonight he's using this so slowly and we

00:05:40,449 --> 00:05:43,810
can also fork off any other sellers well

00:05:41,979 --> 00:05:49,229
not just the first one so maybe we want

00:05:43,810 --> 00:05:49,229
to change the data instead make for care

00:05:55,919 --> 00:06:00,479
and then if we decided that this in fact

00:05:58,259 --> 00:06:02,460
this last one is exactly what we want we

00:06:00,479 --> 00:06:04,110
can make it we can collapse the other

00:06:02,460 --> 00:06:12,110
ones and make this one the main branch

00:06:04,110 --> 00:06:14,759
in the end so this is concept number one

00:06:12,110 --> 00:06:16,249
so in terms of implementation this is

00:06:14,759 --> 00:06:19,710
just the connection open notebooks

00:06:16,249 --> 00:06:21,419
there's everything else is just UI on

00:06:19,710 --> 00:06:24,120
the top and but we can discuss that more

00:06:21,419 --> 00:06:26,460
in a bit if you want so the second set

00:06:24,120 --> 00:06:30,330
of observations is hidden state bugs so

00:06:26,460 --> 00:06:32,580
this is when people make a change to a

00:06:30,330 --> 00:06:35,340
variable in a notebook somewhere and or

00:06:32,580 --> 00:06:36,689
in any code and you don't realize that

00:06:35,340 --> 00:06:38,430
you've changed it somewhere else

00:06:36,689 --> 00:06:40,469
and you might be executing cells out of

00:06:38,430 --> 00:06:42,990
order and then you end up with a bug

00:06:40,469 --> 00:06:44,400
because of that we also see people will

00:06:42,990 --> 00:06:46,289
have lots of shared cells between

00:06:44,400 --> 00:06:48,930
notebooks or they're scrolling up and

00:06:46,289 --> 00:06:50,879
down and that's because you want to

00:06:48,930 --> 00:06:53,490
explore multiple different avenues for

00:06:50,879 --> 00:06:55,469
analyzing one data set but those

00:06:53,490 --> 00:06:58,319
different avenues might share a lot of

00:06:55,469 --> 00:07:01,830
code but you don't necessarily want them

00:06:58,319 --> 00:07:03,810
to share all the state so we're trying

00:07:01,830 --> 00:07:06,839
to design an interface that allows us to

00:07:03,810 --> 00:07:08,099
like explicitly share some some stuff

00:07:06,839 --> 00:07:13,550
but not share the state between

00:07:08,099 --> 00:07:13,550
different parts and

00:07:16,110 --> 00:07:24,510
and so this is one example of what it

00:07:20,280 --> 00:07:27,540
might look like I can't pause it so

00:07:24,510 --> 00:07:28,530
maybe we've loaded some data in here and

00:07:27,540 --> 00:07:29,490
then we're gonna plot it down there

00:07:28,530 --> 00:07:30,810
because that's the first thing you do

00:07:29,490 --> 00:07:34,230
when you should load data is have a look

00:07:30,810 --> 00:07:36,480
at it but there's no reason that when I

00:07:34,230 --> 00:07:38,220
normalized this time series here there's

00:07:36,480 --> 00:07:39,840
absolutely no reason that any change in

00:07:38,220 --> 00:07:41,610
state here should be affecting anything

00:07:39,840 --> 00:07:43,170
I do here because they're not part of

00:07:41,610 --> 00:07:48,720
the same they're not part of the same

00:07:43,170 --> 00:07:54,180
flow and so here we've we fill through

00:07:48,720 --> 00:07:55,650
the data and we plot it again and we can

00:07:54,180 --> 00:07:59,430
do some more things we can compare the

00:07:55,650 --> 00:08:00,690
signals down here and up here we compute

00:07:59,430 --> 00:08:03,420
the energy of the signals but again

00:08:00,690 --> 00:08:05,250
there's no reason that this anything

00:08:03,420 --> 00:08:07,530
that happens here it should be affecting

00:08:05,250 --> 00:08:09,150
the plot I made at the beginning so this

00:08:07,530 --> 00:08:12,930
idea that we can separate the state out

00:08:09,150 --> 00:08:14,370
in the user interface and also one of

00:08:12,930 --> 00:08:16,260
the nice things about having forcing

00:08:14,370 --> 00:08:18,330
people to have the text above each cell

00:08:16,260 --> 00:08:19,620
and not as a separate cell is that we

00:08:18,330 --> 00:08:22,760
can do things like this we can collapse

00:08:19,620 --> 00:08:22,760
the whole thing and see

00:08:23,240 --> 00:08:34,350
that's exactly the right reaction and ya

00:08:29,520 --> 00:08:35,460
see the the hole of flow there so the

00:08:34,350 --> 00:08:38,790
implementation of something like their

00:08:35,460 --> 00:08:40,290
stereo are a few different ways it that

00:08:38,790 --> 00:08:42,720
we're exploring that it could work the

00:08:40,290 --> 00:08:44,910
first is that each separate flow will

00:08:42,720 --> 00:08:47,670
have a different kernel and that's the

00:08:44,910 --> 00:08:49,170
easiest to do but causes some well

00:08:47,670 --> 00:08:51,420
certainly not the most performant way of

00:08:49,170 --> 00:08:54,000
doing it one of the always is in

00:08:51,420 --> 00:08:56,040
object-oriented languages or we can just

00:08:54,000 --> 00:08:57,540
serialize all of the objects that are in

00:08:56,040 --> 00:08:59,640
a particular cell and then we can do

00:08:57,540 --> 00:09:01,650
lookups when whenever you execute each

00:08:59,640 --> 00:09:04,560
cell which means you only have to excuse

00:09:01,650 --> 00:09:05,790
yourself once or we can do something

00:09:04,560 --> 00:09:07,350
that will work with all languages which

00:09:05,790 --> 00:09:09,030
is capture the whole state of the

00:09:07,350 --> 00:09:13,440
process in memory at that time and

00:09:09,030 --> 00:09:16,040
serialize that to disk how much time

00:09:13,440 --> 00:09:16,040
left

00:09:19,730 --> 00:09:29,070
okay we'll just go through this last one

00:09:26,670 --> 00:09:31,370
and serve any room

00:09:29,070 --> 00:09:33,270
so before we know that one of the I

00:09:31,370 --> 00:09:35,700
guess one of the things a lot of

00:09:33,270 --> 00:09:37,920
scientists struggle with is having

00:09:35,700 --> 00:09:41,910
really complex processing pipelines and

00:09:37,920 --> 00:09:43,560
then having to change them later so one

00:09:41,910 --> 00:09:45,900
of the things I've seen in almost every

00:09:43,560 --> 00:09:48,210
single lab I've been into is that people

00:09:45,900 --> 00:09:49,590
it's really difficult to on board a new

00:09:48,210 --> 00:09:52,830
person to the lab with the whole

00:09:49,590 --> 00:09:55,140
pipeline that they have and you have a

00:09:52,830 --> 00:09:56,850
lot of debugging or reporting stages

00:09:55,140 --> 00:09:59,700
embedded in with the actual pipeline and

00:09:56,850 --> 00:10:01,950
it's really difficult to just get an

00:09:59,700 --> 00:10:04,230
idea of what's going on without spending

00:10:01,950 --> 00:10:09,270
a lot of time diving heavily into some

00:10:04,230 --> 00:10:12,030
complex code and so one of the things

00:10:09,270 --> 00:10:13,950
we've been working on is whether we can

00:10:12,030 --> 00:10:16,800
use whether we can have a common

00:10:13,950 --> 00:10:21,270
graphical interface for a whole bunch of

00:10:16,800 --> 00:10:23,670
different pipelining languages so here

00:10:21,270 --> 00:10:26,430
we might generate a shell script at the

00:10:23,670 --> 00:10:30,510
beginning you can set it up on the right

00:10:26,430 --> 00:10:32,740
and then we can basically do anything

00:10:30,510 --> 00:10:34,420
with this so this is a bit like

00:10:32,740 --> 00:10:38,100
how to draw an owl and then we just

00:10:34,420 --> 00:10:38,100
press the button and everything comes up

00:10:43,050 --> 00:10:47,830
but the cool thing about this model is

00:10:45,820 --> 00:10:50,050
that the idea is that we're just

00:10:47,830 --> 00:10:50,950
building an interface so like Jupiter

00:10:50,050 --> 00:10:51,880
notebooks we're not building the

00:10:50,950 --> 00:10:54,100
colonel's we're just building an

00:10:51,880 --> 00:10:55,750
interface and then we can have separate

00:10:54,100 --> 00:11:00,670
pipelining kernels in the background so

00:10:55,750 --> 00:11:03,670
a pipelining kernel could just be could

00:11:00,670 --> 00:11:05,410
just be something like make so or it

00:11:03,670 --> 00:11:07,300
could be a common workflow language or

00:11:05,410 --> 00:11:09,190
it could be Apache Kafka it could be any

00:11:07,300 --> 00:11:11,590
of these amazing tools that people have

00:11:09,190 --> 00:11:14,380
already built but that are really hard

00:11:11,590 --> 00:11:15,910
to get a handle on of like exactly where

00:11:14,380 --> 00:11:21,290
the data is moving in those different

00:11:15,910 --> 00:11:29,919
tools yeah and that's it from me thanks

00:11:21,290 --> 00:11:29,919
[Applause]

00:11:30,550 --> 00:11:37,100
all right thank you

00:11:33,430 --> 00:11:40,959
okay we have about ten minutes for

00:11:37,100 --> 00:11:40,959
questions so lots of question hard

00:11:48,970 --> 00:12:20,779
this yeah so I guess if anything that's

00:12:18,380 --> 00:12:25,810
like almost better to have it in that

00:12:20,779 --> 00:12:28,040
and in that environment and so when I

00:12:25,810 --> 00:12:30,529
started working on this I was kind of

00:12:28,040 --> 00:12:33,230
looking at observable Jupiter and I died

00:12:30,529 --> 00:12:37,910
as the kind of 3d designs in the browser

00:12:33,230 --> 00:12:40,010
things and oh the work that we're gonna

00:12:37,910 --> 00:12:43,010
do is going to be just UI so it could be

00:12:40,010 --> 00:12:45,230
put anywhere and so that would be the

00:12:43,010 --> 00:12:46,550
dream starting off with Jupiter just

00:12:45,230 --> 00:12:48,680
because it's got the most users and

00:12:46,550 --> 00:12:51,440
that's the way I think have the biggest

00:12:48,680 --> 00:12:54,110
impact but yeah having where something

00:12:51,440 --> 00:12:55,610
where you don't run the code where it's

00:12:54,110 --> 00:12:56,810
reactive like observable is like the

00:12:55,610 --> 00:12:58,610
dream use case for something like this

00:12:56,810 --> 00:13:01,270
but not everyone likes to do everything

00:12:58,610 --> 00:13:01,270
in JavaScript so

00:13:12,430 --> 00:13:17,559
yeah so at the moment I have a github

00:13:15,829 --> 00:13:21,649
repository called graphical notebooks

00:13:17,559 --> 00:13:25,519
the three different things at the moment

00:13:21,649 --> 00:13:27,290
have the the name I can't remember the

00:13:25,519 --> 00:13:28,639
name of the first one the first one is

00:13:27,290 --> 00:13:32,059
up for grabs if anyone wants to name it

00:13:28,639 --> 00:13:33,680
the second one is Jupiter canvas and the

00:13:32,059 --> 00:13:39,499
third one is Jupiter flow

00:13:33,680 --> 00:13:42,620
I am currently writing a job post for a

00:13:39,499 --> 00:13:45,829
developer to prototype two of them and

00:13:42,620 --> 00:13:47,720
yeah so within the next few months we'll

00:13:45,829 --> 00:13:49,790
have prototypes and they'll be

00:13:47,720 --> 00:13:52,420
definitely links to it on the graphical

00:13:49,790 --> 00:13:52,420
notebooks Ripper

00:14:13,679 --> 00:14:19,420
branching patterns around the data

00:14:16,269 --> 00:14:22,110
exploration distinction between the

00:14:19,420 --> 00:14:22,110
exploration

00:14:24,570 --> 00:14:29,500
it's really an important distinction as

00:14:27,370 --> 00:14:32,050
you talk about this work very finding

00:14:29,500 --> 00:14:36,130
but there's an awareness and

00:14:32,050 --> 00:14:43,560
appreciation can you can you clarify

00:14:36,130 --> 00:14:43,560
exactly the kind of yeah

00:14:52,240 --> 00:15:06,920
yeah yeah so I I think that's it's like

00:15:05,630 --> 00:15:09,560
there's a really interesting conflict

00:15:06,920 --> 00:15:11,149
because I think as humans we find it

00:15:09,560 --> 00:15:14,029
much easier to understand something as a

00:15:11,149 --> 00:15:16,610
story and so it makes sense to present

00:15:14,029 --> 00:15:19,010
things in that way it's people but

00:15:16,610 --> 00:15:20,750
you're right it isn't the process that

00:15:19,010 --> 00:15:21,889
actually underlies it I think there's

00:15:20,750 --> 00:15:23,899
kind of two sides with there like

00:15:21,889 --> 00:15:26,149
hypothesis driven stuff so you could

00:15:23,899 --> 00:15:27,350
still have hypothesis like very strong

00:15:26,149 --> 00:15:29,480
hypotheses but there would still be

00:15:27,350 --> 00:15:30,589
branches and you wanted to check this

00:15:29,480 --> 00:15:32,720
and this and this there's very rarely

00:15:30,589 --> 00:15:35,630
like just one plot that's going to tell

00:15:32,720 --> 00:15:37,190
you the answer to something so I think I

00:15:35,630 --> 00:15:40,940
think yeah it's it's always difficult to

00:15:37,190 --> 00:15:43,040
know how much of the complexity you

00:15:40,940 --> 00:15:45,110
should share or how much we should just

00:15:43,040 --> 00:15:46,579
be telling people this stuff nearly

00:15:45,110 --> 00:15:49,540
always starts out crazy and then you

00:15:46,579 --> 00:15:49,540
have to trim it down

00:15:53,319 --> 00:15:59,139
the way that we use no most often is to

00:15:56,269 --> 00:15:59,139
explore

00:16:19,430 --> 00:16:23,959
at least the first pager and then

00:16:21,600 --> 00:16:23,959
Franklin

00:16:28,400 --> 00:16:31,880
the second case

00:16:37,890 --> 00:16:41,519
yeah so I mean definitely everything

00:16:40,050 --> 00:16:44,160
that we're going for here is is

00:16:41,519 --> 00:16:47,430
piggybacking off the notebook structure

00:16:44,160 --> 00:16:49,260
and so I was speaking to the team last

00:16:47,430 --> 00:16:50,310
week and I think like one of the biggest

00:16:49,260 --> 00:16:53,220
things that they've done with notebooks

00:16:50,310 --> 00:16:55,769
is have a data format that's been around

00:16:53,220 --> 00:16:57,360
for now five years that's barely changed

00:16:55,769 --> 00:16:59,579
and it's really well structured and you

00:16:57,360 --> 00:17:00,930
can do basically anything with that and

00:16:59,579 --> 00:17:02,910
what people have done so far is just

00:17:00,930 --> 00:17:04,949
hide cells in order but what we're now

00:17:02,910 --> 00:17:06,809
trying to do so how can we organize this

00:17:04,949 --> 00:17:09,420
exactly the same data format but in

00:17:06,809 --> 00:17:12,230
different ways to fit different models

00:17:09,420 --> 00:17:12,230
of data exploration

00:17:20,860 --> 00:17:27,250
so I think this is great somebody throws

00:17:23,720 --> 00:17:31,309
a lollipop to create a large notebook I

00:17:27,250 --> 00:17:33,740
wonder I know you have you worried that

00:17:31,309 --> 00:17:35,600
by adding this new tool that could help

00:17:33,740 --> 00:17:38,090
you can actually inadvertently make

00:17:35,600 --> 00:17:41,140
things worse yeah one moment

00:17:38,090 --> 00:17:41,140
now we got like 10

00:17:46,800 --> 00:17:50,190
yeah for sure

00:17:51,600 --> 00:17:56,440
the kind of idea is that instead of we

00:17:54,910 --> 00:17:58,360
probably end up having exactly the same

00:17:56,440 --> 00:18:01,540
mess but a slightly more structured mess

00:17:58,360 --> 00:18:03,460
and for me that's better but would

00:18:01,540 --> 00:18:06,220
certainly what we're planning on doing

00:18:03,460 --> 00:18:08,020
is as soon as we've got a lack of

00:18:06,220 --> 00:18:09,250
reasonable prototype going is giving

00:18:08,020 --> 00:18:11,620
this to a whole bunch of people and

00:18:09,250 --> 00:18:14,800
seeing what happens and we're totally

00:18:11,620 --> 00:18:17,250
happy to pivot if the if that is exactly

00:18:14,800 --> 00:18:17,250
what happens

00:18:38,560 --> 00:18:44,620
I see that you have different notebooks

00:18:42,160 --> 00:18:47,860
that might be regret - like this

00:18:44,620 --> 00:18:50,380
choose-your-own-adventure workflow what

00:18:47,860 --> 00:18:52,570
are you doing under the hood that links

00:18:50,380 --> 00:18:59,530
them all together or is there a schema

00:18:52,570 --> 00:19:01,930
that you're following that yeah so so

00:18:59,530 --> 00:19:06,760
that they in the forking one or than the

00:19:01,930 --> 00:19:10,570
graphing and the graph one okay so the

00:19:06,760 --> 00:19:12,310
forking one the link is is just that

00:19:10,570 --> 00:19:13,960
they would probably literally just be

00:19:12,310 --> 00:19:17,560
notebooks in a folder with a naming

00:19:13,960 --> 00:19:19,720
schema so in terms of the defin it would

00:19:17,560 --> 00:19:23,050
just we just do definitely using and be

00:19:19,720 --> 00:19:25,150
done and so there's no explicit link

00:19:23,050 --> 00:19:29,080
that's not just enforced by the

00:19:25,150 --> 00:19:30,760
interface for the graphing one where we

00:19:29,080 --> 00:19:33,580
have we have splits and things like that

00:19:30,760 --> 00:19:34,750
it would it's all still fitting in with

00:19:33,580 --> 00:19:37,840
in a notebook schema and just going to

00:19:34,750 --> 00:19:40,120
be metadata where each cell will point

00:19:37,840 --> 00:19:42,280
to its next cell and it doesn't just go

00:19:40,120 --> 00:19:43,660
to the next cell automatically and so

00:19:42,280 --> 00:19:46,870
the idea is to do as little as possible

00:19:43,660 --> 00:19:56,710
so that all of this can still be used in

00:19:46,870 --> 00:19:58,990
a regular noburo browser no you have to

00:19:56,710 --> 00:20:01,570
turn up early for your talk and then she

00:19:58,990 --> 00:20:12,450
ends up being there waiting for you

00:20:01,570 --> 00:20:18,330
I just Nora have a comment

00:20:12,450 --> 00:20:20,090
I like teams above the garage and I

00:20:18,330 --> 00:20:23,520
think a lot of thing

00:20:20,090 --> 00:20:25,380
we talk about managing teams and one

00:20:23,520 --> 00:20:28,170
thing that keeps coming up is like

00:20:25,380 --> 00:20:30,120
sanity checks and those sanity checks

00:20:28,170 --> 00:20:36,650
when you're working alone are very

00:20:30,120 --> 00:20:36,650
invisible their notebooks I don't know

00:20:58,910 --> 00:21:03,830
that's the only sort of comment that's

00:21:00,990 --> 00:21:03,830
allowed in the talk

00:21:43,380 --> 00:21:47,950
yeah

00:21:44,650 --> 00:21:52,090
so there's the best out of order bit

00:21:47,950 --> 00:21:54,850
which i think and so one of the one of

00:21:52,090 --> 00:21:56,830
the I guess one of the solutions

00:21:54,850 --> 00:22:00,400
appointed at for having these these

00:21:56,830 --> 00:22:01,900
branches is cashing individual cells so

00:22:00,400 --> 00:22:04,480
when we have something like this this is

00:22:01,900 --> 00:22:08,020
actually a directed graph and so if we

00:22:04,480 --> 00:22:10,360
once we caching what each cell does

00:22:08,020 --> 00:22:11,980
let's say let's we know how we do that

00:22:10,360 --> 00:22:16,030
we've got some cool ideas about how to

00:22:11,980 --> 00:22:17,770
do that actually if we know that we're

00:22:16,030 --> 00:22:19,390
changing something here and none of this

00:22:17,770 --> 00:22:22,180
has changed we can rerun that without

00:22:19,390 --> 00:22:24,040
any penalty so we can actually have this

00:22:22,180 --> 00:22:27,030
like observable like reactive

00:22:24,040 --> 00:22:29,590
environment but still using Jupiter

00:22:27,030 --> 00:22:31,630
still using Jupiter and Python so that's

00:22:29,590 --> 00:22:33,490
that will be one of the cool directions

00:22:31,630 --> 00:22:35,590
to go is like treat the whole thing as a

00:22:33,490 --> 00:22:38,920
directed graph and cache the state of

00:22:35,590 --> 00:22:45,910
each cell or each flow each black

00:22:38,920 --> 00:22:47,740
combination of cells it would still be

00:22:45,910 --> 00:22:51,460
the same would just be a different

00:22:47,740 --> 00:22:54,090
kernel it would be that's yeah and yeah

00:22:51,460 --> 00:22:54,090
yeah

00:23:08,940 --> 00:23:16,900
so depends so they didn't so that if

00:23:13,420 --> 00:23:19,510
you're doing the the so if you would do

00:23:16,900 --> 00:23:21,220
the hash of itself in terms of oops disk

00:23:19,510 --> 00:23:22,480
space it's the least sustainable so

00:23:21,220 --> 00:23:24,760
you're using the most expects when you

00:23:22,480 --> 00:23:26,530
serialize the state of each cell in

00:23:24,760 --> 00:23:28,180
terms of computationally it's the most

00:23:26,530 --> 00:23:30,070
efficient because you never rerun and I

00:23:28,180 --> 00:23:31,510
think that you don't need to rerun if

00:23:30,070 --> 00:23:32,650
you were to do multiple kernels it's the

00:23:31,510 --> 00:23:34,540
opposite you don't save anything today

00:23:32,650 --> 00:23:35,890
it's um a disk efficient but you have

00:23:34,540 --> 00:23:38,020
four kernels running it's in time which

00:23:35,890 --> 00:23:39,840
if you're running a big Jupiter hub

00:23:38,020 --> 00:23:41,830
finder have instances it is a big issue

00:23:39,840 --> 00:23:43,420
so those are the those are the

00:23:41,830 --> 00:23:46,470
trade-offs and when we're trying to look

00:23:43,420 --> 00:23:46,470
at which one works best

00:23:49,620 --> 00:23:52,190

YouTube URL: https://www.youtube.com/watch?v=1AJ8NPxzONE


