Title: Danny Whelan -  CSVConf 2017
Publication date: 2017-06-04
Playlist: CSVConf 2017
Description: 
	The evolution of a GTFS data pipeline
Captions: 
	00:00:00,180 --> 00:00:09,300
[Music]

00:00:06,080 --> 00:00:11,240
Thank You Nate can everyone hear me all

00:00:09,300 --> 00:00:16,260
right in the back

00:00:11,240 --> 00:00:19,920
barely okay let's let's test the

00:00:16,260 --> 00:00:21,150
microphone how's that preferable okay

00:00:19,920 --> 00:00:24,720
all right we'll stick with the

00:00:21,150 --> 00:00:28,349
microphone then thank you all for being

00:00:24,720 --> 00:00:31,199
here this is a talk I've been wanting to

00:00:28,349 --> 00:00:32,640
give for a while I'm I've compressed it

00:00:31,199 --> 00:00:35,190
down quite a bit so I hope I hit the

00:00:32,640 --> 00:00:38,070
highlights that are interesting to you

00:00:35,190 --> 00:00:40,160
so a little bit about me I work at remix

00:00:38,070 --> 00:00:44,420
remix I'll explain a little bit later

00:00:40,160 --> 00:00:46,350
and we do a couple of different things

00:00:44,420 --> 00:00:51,480
what I'm going to be focusing on today

00:00:46,350 --> 00:00:55,020
is of course GTFS and the transit data

00:00:51,480 --> 00:00:57,360
standard that we use so I have a quick

00:00:55,020 --> 00:00:59,670
question for you all actually a couple

00:00:57,360 --> 00:01:01,100
of questions which is how'd you get here

00:00:59,670 --> 00:01:06,060
today

00:01:01,100 --> 00:01:10,530
who rode transit here nice alright shout

00:01:06,060 --> 00:01:14,310
out to trimet let's see who wrote a bike

00:01:10,530 --> 00:01:18,150
here today awesome nice shout out for

00:01:14,310 --> 00:01:21,150
Portland's bike infrastructure and then

00:01:18,150 --> 00:01:24,710
who walked amazing that's that's pretty

00:01:21,150 --> 00:01:29,670
good that's a pretty good breakdown so

00:01:24,710 --> 00:01:32,340
what's that car sharing awesome yeah so

00:01:29,670 --> 00:01:36,329
there are this is this is part of why

00:01:32,340 --> 00:01:39,390
I'm here today right so if you leave

00:01:36,329 --> 00:01:42,420
here today and you are excited to go and

00:01:39,390 --> 00:01:44,729
dig into the data of your local transit

00:01:42,420 --> 00:01:45,840
agency I would be absolutely thrilled it

00:01:44,729 --> 00:01:47,850
would mean a lot to me

00:01:45,840 --> 00:01:49,560
so that is a big part of why I'm here

00:01:47,850 --> 00:01:51,149
today is to get you excited about this

00:01:49,560 --> 00:01:53,250
because it's a really wonderful

00:01:51,149 --> 00:01:56,969
community and there's just a ton of data

00:01:53,250 --> 00:01:59,290
that's easily accessible and also most

00:01:56,969 --> 00:02:03,550
of it is CSVs so

00:01:59,290 --> 00:02:05,650
talk about that a quick quote so you've

00:02:03,550 --> 00:02:08,229
probably seen this before I couldn't

00:02:05,650 --> 00:02:10,750
find an attribution but the reason I

00:02:08,229 --> 00:02:13,270
brought it up is because this statement

00:02:10,750 --> 00:02:15,480
is true of almost any urban

00:02:13,270 --> 00:02:18,640
infrastructure project right like

00:02:15,480 --> 00:02:21,070
started as soon as you can but it's also

00:02:18,640 --> 00:02:22,360
very true of data standards so if there

00:02:21,070 --> 00:02:23,560
is not a data standard it would have

00:02:22,360 --> 00:02:25,540
been great if we had one twenty years

00:02:23,560 --> 00:02:28,420
ago but let's start right now if we

00:02:25,540 --> 00:02:31,420
don't so I thought this would be an

00:02:28,420 --> 00:02:34,330
interesting way to do sort of a mid

00:02:31,420 --> 00:02:38,500
twenty year check-in because this month

00:02:34,330 --> 00:02:41,980
is the ten year anniversary of GTFS May

00:02:38,500 --> 00:02:44,920
eighteenth actually and so yeah data

00:02:41,980 --> 00:02:47,830
standards right amazing so and it was

00:02:44,920 --> 00:02:50,100
born in Portland GTFS was created here

00:02:47,830 --> 00:02:54,540
was a collaboration between trimet and

00:02:50,100 --> 00:02:58,360
Google many of you may know that the

00:02:54,540 --> 00:03:01,209
Bibiana McCue was a done and IT manager

00:02:58,360 --> 00:03:03,580
at trimet and from what I understand

00:03:01,209 --> 00:03:06,880
basically pitched this idea to Google

00:03:03,580 --> 00:03:10,090
and that kind of led into Google being

00:03:06,880 --> 00:03:14,560
the trip planner that it is today so I

00:03:10,090 --> 00:03:16,810
dug around in the archives of the GTFS

00:03:14,560 --> 00:03:22,750
mailing list and I found sort of the

00:03:16,810 --> 00:03:24,580
introduction to GTFS by Jojo Hughes from

00:03:22,750 --> 00:03:25,750
Google Transit and so there's just

00:03:24,580 --> 00:03:28,480
really a two really interesting

00:03:25,750 --> 00:03:30,790
paragraphs this slide in the next and

00:03:28,480 --> 00:03:32,950
it's the reasoning behind why they chose

00:03:30,790 --> 00:03:34,390
CSV I thought this is very relevant so I

00:03:32,950 --> 00:03:37,480
just wanted to touch on these two things

00:03:34,390 --> 00:03:40,799
to give you a better picture of the

00:03:37,480 --> 00:03:43,110
overlap here so you know obviously

00:03:40,799 --> 00:03:46,690
spreadsheet programs and text editors

00:03:43,110 --> 00:03:49,660
this is why CSVs are important and then

00:03:46,690 --> 00:03:54,580
then the the next piece which is sort of

00:03:49,660 --> 00:03:56,350
more about it's easy to create them CSVs

00:03:54,580 --> 00:03:57,730
are easy to create so I just thought

00:03:56,350 --> 00:03:59,739
this was really interesting that the the

00:03:57,730 --> 00:04:02,230
origins of GTFS are very much tied to

00:03:59,739 --> 00:04:08,260
this data format very relevant to this

00:04:02,230 --> 00:04:10,640
companies let's see so

00:04:08,260 --> 00:04:12,310
data is one of the greatest assets for

00:04:10,640 --> 00:04:17,950
cities I think this is fairly obvious

00:04:12,310 --> 00:04:20,269
and GTFS was born in part because

00:04:17,950 --> 00:04:24,800
Viviana McHugh and the people I met

00:04:20,269 --> 00:04:28,340
recognized this data is also one of the

00:04:24,800 --> 00:04:30,320
greatest challenges of cities and this

00:04:28,340 --> 00:04:34,360
is also an important thing that was

00:04:30,320 --> 00:04:39,350
recognized around the origins of GTFS

00:04:34,360 --> 00:04:41,210
and it might not always be the best for

00:04:39,350 --> 00:04:42,950
government to sort of deliver those

00:04:41,210 --> 00:04:44,660
services which what which is why those

00:04:42,950 --> 00:04:46,310
the partnership was there they delivered

00:04:44,660 --> 00:04:51,770
the data and the service was handled

00:04:46,310 --> 00:04:54,140
elsewhere quickly about remix so this is

00:04:51,770 --> 00:04:56,950
my company it's part of why I'm here

00:04:54,140 --> 00:05:00,440
today we're a team of designers

00:04:56,950 --> 00:05:03,650
Urbanists engineers and we build

00:05:00,440 --> 00:05:06,710
software for transportation planners to

00:05:03,650 --> 00:05:10,280
plan out primarily bus systems so just a

00:05:06,710 --> 00:05:12,110
quick video this is what our software

00:05:10,280 --> 00:05:13,430
looks like one of the one of the things

00:05:12,110 --> 00:05:15,740
just quickly sketching out a route

00:05:13,430 --> 00:05:18,470
you'll see sort of the cost estimate

00:05:15,740 --> 00:05:20,750
being estimated some demographic stat

00:05:18,470 --> 00:05:23,900
statistics and the cost is all based on

00:05:20,750 --> 00:05:25,820
the skate the actual schedule and it

00:05:23,900 --> 00:05:28,310
lets you quickly build out what a

00:05:25,820 --> 00:05:32,870
transit system could look like and work

00:05:28,310 --> 00:05:35,780
against the actual cost of doing that so

00:05:32,870 --> 00:05:37,280
work within your budget this is sort of

00:05:35,780 --> 00:05:40,070
the you know the major constraint of

00:05:37,280 --> 00:05:41,240
course and these are some of the

00:05:40,070 --> 00:05:44,270
problems that we're trying to solve and

00:05:41,240 --> 00:05:47,030
this is just sort of the tip of the

00:05:44,270 --> 00:05:48,850
iceberg of of what we've built but it's

00:05:47,030 --> 00:05:54,020
part of what I'll be focusing on today

00:05:48,850 --> 00:05:56,510
so remix is very much about planning for

00:05:54,020 --> 00:06:00,380
the city as it will be not as it is

00:05:56,510 --> 00:06:05,000
today not as not as it was in the past

00:06:00,380 --> 00:06:08,440
we're very forward-looking and cities

00:06:05,000 --> 00:06:12,950
are constantly changing so that means we

00:06:08,440 --> 00:06:14,900
have some interesting challenges so the

00:06:12,950 --> 00:06:16,760
the data that our users care about might

00:06:14,900 --> 00:06:18,950
be a little bit different than the data

00:06:16,760 --> 00:06:20,659
you see on open open data portals or

00:06:18,950 --> 00:06:23,659
published by the census

00:06:20,659 --> 00:06:26,210
one example of that is some of the

00:06:23,659 --> 00:06:28,669
streets that the agencies that work with

00:06:26,210 --> 00:06:31,520
us are planning against don't exist yet

00:06:28,669 --> 00:06:33,740
this is like future infrastructure that

00:06:31,520 --> 00:06:34,939
they need to plan transit against so

00:06:33,740 --> 00:06:37,459
there's some friction in there between

00:06:34,939 --> 00:06:40,729
what exists in OpenStreetMap which is

00:06:37,459 --> 00:06:42,619
sort of the now and what they actually

00:06:40,729 --> 00:06:44,270
need to be able to route against and and

00:06:42,619 --> 00:06:46,189
that routing action that kind of drawing

00:06:44,270 --> 00:06:49,490
along the street segments we rely on an

00:06:46,189 --> 00:06:54,740
open date on sorry open street map to

00:06:49,490 --> 00:06:58,129
have those nice interactions and let's

00:06:54,740 --> 00:07:00,409
see yeah so you also need to know what

00:06:58,129 --> 00:07:01,580
is the population going to be in the

00:07:00,409 --> 00:07:03,349
future where do you expect the

00:07:01,580 --> 00:07:07,219
population growth to be where do you

00:07:03,349 --> 00:07:09,740
expect job centers to be and how do you

00:07:07,219 --> 00:07:12,580
expect that growth to happen so this is

00:07:09,740 --> 00:07:16,999
important data so here's an example of

00:07:12,580 --> 00:07:21,110
this is 2025 population estimates in

00:07:16,999 --> 00:07:24,559
Seattle so this is based on their

00:07:21,110 --> 00:07:27,139
they're like very deep knowledge of the

00:07:24,559 --> 00:07:30,919
Seattle area and how they expect it to

00:07:27,139 --> 00:07:32,240
grow in the next 10 or 15 years so this

00:07:30,919 --> 00:07:34,180
is the data that they care about

00:07:32,240 --> 00:07:38,029
planning against when they're looking

00:07:34,180 --> 00:07:40,569
for long term over long term horizons so

00:07:38,029 --> 00:07:42,289
how can we best deliver transit to

00:07:40,569 --> 00:07:45,139
populations that haven't yet

00:07:42,289 --> 00:07:48,469
materialized this this is a very hard

00:07:45,139 --> 00:07:51,169
problem and you know it's it's something

00:07:48,469 --> 00:07:53,869
our something our users care a lot about

00:07:51,169 --> 00:07:56,149
so we get a lot of basically population

00:07:53,869 --> 00:08:00,709
estimates and job estimates lots of

00:07:56,149 --> 00:08:04,699
geospatial data so an another thing that

00:08:00,709 --> 00:08:07,819
we get is what I'd call pre-release GTFS

00:08:04,699 --> 00:08:10,039
this is not the GTFS that agencies would

00:08:07,819 --> 00:08:11,539
give to Google or that they would

00:08:10,039 --> 00:08:14,360
publish online or you would find on

00:08:11,539 --> 00:08:17,449
transit feeds or transit land

00:08:14,360 --> 00:08:19,430
this is GTFS that has been that they've

00:08:17,449 --> 00:08:21,289
sketched out or a consultant has put

00:08:19,430 --> 00:08:24,019
together with them and represents a

00:08:21,289 --> 00:08:27,649
scenario or scenarios that they are

00:08:24,019 --> 00:08:29,449
evaluating for you know to potentially

00:08:27,649 --> 00:08:31,750
deliver in the future and that's one of

00:08:29,449 --> 00:08:34,169
the ways GTFS has made transit systems

00:08:31,750 --> 00:08:37,110
the data about transit systems

00:08:34,169 --> 00:08:40,709
very portable and so we get this

00:08:37,110 --> 00:08:44,910
pre-release GTFS data it's often of

00:08:40,709 --> 00:08:47,910
lower quality sometimes incomplete but

00:08:44,910 --> 00:08:51,329
we've gotten very good at munging GTFS

00:08:47,910 --> 00:08:53,070
and and you know breaking it apart and

00:08:51,329 --> 00:08:56,149
putting it back together and getting to

00:08:53,070 --> 00:09:02,120
a place where it's useful for our users

00:08:56,149 --> 00:09:04,470
so I also wanted to talk about this is

00:09:02,120 --> 00:09:05,399
maybe makes sense I don't know made

00:09:04,470 --> 00:09:09,540
sense at the time I put this slide

00:09:05,399 --> 00:09:13,220
together but the idea is the way we

00:09:09,540 --> 00:09:16,500
build products is sort of we take data

00:09:13,220 --> 00:09:19,529
we care a lot about design so design is

00:09:16,500 --> 00:09:22,380
like this initial process and you really

00:09:19,529 --> 00:09:24,329
can't do the design without data which

00:09:22,380 --> 00:09:26,519
is actually what there's a talk

00:09:24,329 --> 00:09:29,910
yesterday about that and it's very very

00:09:26,519 --> 00:09:33,209
true and then there's a set of

00:09:29,910 --> 00:09:37,860
algorithms that enable you to build rich

00:09:33,209 --> 00:09:40,760
UIs which interactions over complex data

00:09:37,860 --> 00:09:43,500
to accomplish things much more quickly

00:09:40,760 --> 00:09:45,600
you know you can go and twiddle with

00:09:43,500 --> 00:09:47,250
data and accomplish the same goals you

00:09:45,600 --> 00:09:49,860
can't do it quickly and it's prone to

00:09:47,250 --> 00:09:51,600
error so investing in algorithms is a

00:09:49,860 --> 00:09:53,370
big part of what we do and that's what

00:09:51,600 --> 00:09:55,410
I'm going to be kind of talking about

00:09:53,370 --> 00:09:56,970
for the rest of the talk so some of the

00:09:55,410 --> 00:10:00,870
algorithms problems and how we've solved

00:09:56,970 --> 00:10:04,820
them like that so and then the end is

00:10:00,870 --> 00:10:04,820
some product that is useful and valuable

00:10:05,540 --> 00:10:09,449
so the first thing I want to talk about

00:10:07,380 --> 00:10:12,750
is nearby stops if you saw in that

00:10:09,449 --> 00:10:15,600
earlier that quick video as that route

00:10:12,750 --> 00:10:18,480
was being drawn we're sort of connecting

00:10:15,600 --> 00:10:22,620
it to the nearby stops those stops

00:10:18,480 --> 00:10:25,410
presumably are close to or nearby or are

00:10:22,620 --> 00:10:27,420
the actual stops that a bus route going

00:10:25,410 --> 00:10:30,779
down that corridor would be would be

00:10:27,420 --> 00:10:33,180
stopping at so what we could have done

00:10:30,779 --> 00:10:35,100
is just let the let the planner draw

00:10:33,180 --> 00:10:37,410
down that corridor and then go in and

00:10:35,100 --> 00:10:40,709
hover and select those specific stops

00:10:37,410 --> 00:10:43,709
basically do data entry data entry is

00:10:40,709 --> 00:10:45,899
very time-consuming and there's a lot of

00:10:43,709 --> 00:10:47,070
potential for just entering data

00:10:45,899 --> 00:10:50,370
everywhere in trance

00:10:47,070 --> 00:10:52,889
so this is actually an algorithms

00:10:50,370 --> 00:10:54,750
problem that we decided to solve so I'll

00:10:52,889 --> 00:10:57,029
show you a little bit of the of the

00:10:54,750 --> 00:10:58,740
background behind that I'll let this

00:10:57,029 --> 00:11:05,430
video play and then I'll explain it it's

00:10:58,740 --> 00:11:07,940
actually a gift this is that drawing

00:11:05,430 --> 00:11:07,940
action

00:11:18,950 --> 00:11:23,029
okay so what you're seeing here is

00:11:20,779 --> 00:11:24,470
behind a feature flag it's sort of a

00:11:23,029 --> 00:11:27,980
development tool that we've built

00:11:24,470 --> 00:11:29,600
internally and and it visualizes what is

00:11:27,980 --> 00:11:31,730
happening behind the scenes how we're

00:11:29,600 --> 00:11:34,550
selecting those stops so this is Market

00:11:31,730 --> 00:11:37,519
Street in San Francisco there are many

00:11:34,550 --> 00:11:40,850
many stops some are relevant to bus some

00:11:37,519 --> 00:11:44,779
are relevant to rail and you need to be

00:11:40,850 --> 00:11:47,029
able to understand which are nearby so

00:11:44,779 --> 00:11:50,720
that you can so that we can basically

00:11:47,029 --> 00:11:52,430
remove the majority of the data entry we

00:11:50,720 --> 00:11:54,440
can take that off of the plate of the

00:11:52,430 --> 00:11:56,570
transit planner and let them get to a

00:11:54,440 --> 00:11:58,699
scenario that they can evaluate faster

00:11:56,570 --> 00:12:00,680
which means they can evaluate more

00:11:58,699 --> 00:12:03,260
scenarios which means they can get to

00:12:00,680 --> 00:12:05,870
better transit faster this is very

00:12:03,260 --> 00:12:08,360
important and so basically what you're

00:12:05,870 --> 00:12:12,139
seeing is the yellow is sort of a broad

00:12:08,360 --> 00:12:16,329
pass find nearby stops the red on the

00:12:12,139 --> 00:12:18,949
right-hand side of the shape is a

00:12:16,329 --> 00:12:21,829
narrower pass and we're taking into

00:12:18,949 --> 00:12:24,199
account literally the country that we

00:12:21,829 --> 00:12:25,550
are in and the side of the road that

00:12:24,199 --> 00:12:28,699
they drive on in the side of the road

00:12:25,550 --> 00:12:30,680
that people enter the bus from and then

00:12:28,699 --> 00:12:32,480
you see these circles what we're doing

00:12:30,680 --> 00:12:35,060
is basically running clustering

00:12:32,480 --> 00:12:37,790
algorithms because if we just did

00:12:35,060 --> 00:12:40,130
proximity based that you would pick

00:12:37,790 --> 00:12:42,079
whole clusters of stops so really what

00:12:40,130 --> 00:12:44,390
you want to do is you want to take one

00:12:42,079 --> 00:12:47,420
out of a cluster and they're usually

00:12:44,390 --> 00:12:50,300
clustered around intersections so this

00:12:47,420 --> 00:12:52,519
is like layer upon layer of kind of

00:12:50,300 --> 00:12:56,360
complexity to get to an end product of

00:12:52,519 --> 00:13:00,050
saving time and getting to a scenario

00:12:56,360 --> 00:13:01,279
that makes sense much much faster so

00:13:00,050 --> 00:13:03,529
that's the first example of sort of

00:13:01,279 --> 00:13:06,620
supporting products with with data and

00:13:03,529 --> 00:13:09,829
algorithms and also design so this this

00:13:06,620 --> 00:13:12,290
whole debug panel is just tons of

00:13:09,829 --> 00:13:13,279
tweaking and we were worried actually

00:13:12,290 --> 00:13:15,769
that we were going to start to need to

00:13:13,279 --> 00:13:18,740
expose some of these parameters to users

00:13:15,769 --> 00:13:20,449
that wouldn't be good enough but well we

00:13:18,740 --> 00:13:23,569
never had to we were able to sort of

00:13:20,449 --> 00:13:27,410
tweak it enough and and to get it you

00:13:23,569 --> 00:13:30,279
know ballpark right most of the time so

00:13:27,410 --> 00:13:30,279
the next

00:13:32,060 --> 00:13:40,230
spinning ball okay Oh domitor readings

00:13:36,660 --> 00:13:43,500
so this is a really interesting transit

00:13:40,230 --> 00:13:45,990
data specific problem so you saw sort of

00:13:43,500 --> 00:13:48,660
that line string and then a set of

00:13:45,990 --> 00:13:50,940
points that represent stops so what we

00:13:48,660 --> 00:13:52,889
need to what we need to do is take that

00:13:50,940 --> 00:13:54,959
ordered set of stops and that line

00:13:52,889 --> 00:13:56,610
string and understand we're a bus to

00:13:54,959 --> 00:13:59,850
follow that path and make those stops

00:13:56,610 --> 00:14:02,040
what would its odometer read at each

00:13:59,850 --> 00:14:04,440
stop and that gives us the distance

00:14:02,040 --> 00:14:05,819
between stops and if we know the time at

00:14:04,440 --> 00:14:08,339
which those stops are made we can

00:14:05,819 --> 00:14:11,040
calculate the speed and that means we

00:14:08,339 --> 00:14:13,170
can alter the the time between stops or

00:14:11,040 --> 00:14:16,350
we can alter the speed between stops we

00:14:13,170 --> 00:14:19,230
have two levers to change the same thing

00:14:16,350 --> 00:14:22,680
and now you have a much much richer way

00:14:19,230 --> 00:14:25,230
to interact with with your system so

00:14:22,680 --> 00:14:28,259
this is actually kind of hard so this is

00:14:25,230 --> 00:14:31,319
we could call this a lasso route where

00:14:28,259 --> 00:14:32,850
it doubles back over its own path this

00:14:31,319 --> 00:14:35,579
does any one kind of see what would be

00:14:32,850 --> 00:14:40,230
hard about finding the odometer reading

00:14:35,579 --> 00:14:42,300
in this case if you just take a naive

00:14:40,230 --> 00:14:53,459
approach it will go straight from the

00:14:42,300 --> 00:14:54,779
corner yeah we it's basically this this

00:14:53,459 --> 00:14:57,509
cross-section right here we have two

00:14:54,779 --> 00:15:00,060
stops that are nearby and this would

00:14:57,509 --> 00:15:02,009
actually be okay if we had a guaranteed

00:15:00,060 --> 00:15:04,800
ordering of the stops if we had a

00:15:02,009 --> 00:15:06,259
guaranteed ordering of the stops then we

00:15:04,800 --> 00:15:09,329
could solve this particular problem

00:15:06,259 --> 00:15:13,439
pretty easily we don't always have that

00:15:09,329 --> 00:15:15,300
in this drawing UI we would if we got

00:15:13,439 --> 00:15:16,829
the data directly from the agency but

00:15:15,300 --> 00:15:19,230
from drawing new routes we actually have

00:15:16,829 --> 00:15:21,329
like an unordered set of points and a

00:15:19,230 --> 00:15:23,699
line string and we have to back into

00:15:21,329 --> 00:15:25,259
those odometer readings so again the

00:15:23,699 --> 00:15:28,050
country in which we're drawing this

00:15:25,259 --> 00:15:31,050
route comes into play because I can

00:15:28,050 --> 00:15:32,939
solve this problem now if I know that

00:15:31,050 --> 00:15:34,649
the bus stops are probably going to be

00:15:32,939 --> 00:15:36,360
on the right-hand side of the road then

00:15:34,649 --> 00:15:39,839
this becomes a reasonable problem to

00:15:36,360 --> 00:15:41,850
solve otherwise it does not so this is

00:15:39,839 --> 00:15:43,680
like another thing that you come up

00:15:41,850 --> 00:15:46,250
there actually some really good open

00:15:43,680 --> 00:15:50,490
worse examples of algorithms that

00:15:46,250 --> 00:15:52,529
address this problem and I'll I'll put

00:15:50,490 --> 00:15:55,800
to put together a doc I didn't do that

00:15:52,529 --> 00:15:57,570
before but I'll tweet it out so this

00:15:55,800 --> 00:15:58,649
this odometer reading problem is quite

00:15:57,570 --> 00:16:01,830
an interesting one something we've

00:15:58,649 --> 00:16:03,510
solved a lot okay so this next one is

00:16:01,830 --> 00:16:05,010
this is one of my favorite problems so

00:16:03,510 --> 00:16:06,450
I'm going to spend a little bit of extra

00:16:05,010 --> 00:16:08,910
time on this so this is time table

00:16:06,450 --> 00:16:11,520
headers for the amount of transit data

00:16:08,910 --> 00:16:14,640
that is out in the world the number of

00:16:11,520 --> 00:16:19,140
like the number of times it has been put

00:16:14,640 --> 00:16:22,920
into time table format and visualize is

00:16:19,140 --> 00:16:25,260
very very low time tables are a

00:16:22,920 --> 00:16:27,870
fundamental visualization of fixed route

00:16:25,260 --> 00:16:30,000
transit everyone knows how to read it

00:16:27,870 --> 00:16:33,690
almost everyone knows how to read a time

00:16:30,000 --> 00:16:38,430
table it's it's just a very easy way to

00:16:33,690 --> 00:16:42,149
look into the the specifics of what time

00:16:38,430 --> 00:16:44,820
or route runs how often it runs so the

00:16:42,149 --> 00:16:46,950
question is why haven't there been why

00:16:44,820 --> 00:16:48,779
don't people just take GTFS and turn it

00:16:46,950 --> 00:16:50,790
into timetables all the time so that

00:16:48,779 --> 00:16:52,680
they can it's an amazing debugging tool

00:16:50,790 --> 00:16:55,050
if you take GTFS and you put it in a

00:16:52,680 --> 00:16:56,880
time table you can find all sorts of

00:16:55,050 --> 00:16:59,760
problems right off the bat so why don't

00:16:56,880 --> 00:17:00,830
people do this or and I'll start with

00:16:59,760 --> 00:17:04,350
why this is hard

00:17:00,830 --> 00:17:05,880
and I'll use Caltrain as an example so

00:17:04,350 --> 00:17:08,970
Caltrain isn't actually a particularly

00:17:05,880 --> 00:17:10,470
difficult case but there are some

00:17:08,970 --> 00:17:12,569
interesting things calculating what

00:17:10,470 --> 00:17:14,640
Caltrain does really well is demonstrate

00:17:12,569 --> 00:17:18,569
that each trip sorry trips are on the

00:17:14,640 --> 00:17:21,480
vertical axis so 102 104 206 and down

00:17:18,569 --> 00:17:24,360
those columns are trips and you can see

00:17:21,480 --> 00:17:26,010
the stops on the left-hand side so what

00:17:24,360 --> 00:17:29,790
you'll notice is these trips are making

00:17:26,010 --> 00:17:33,300
different stops and that leaves gaps in

00:17:29,790 --> 00:17:36,620
the time table all right so the stops

00:17:33,300 --> 00:17:41,510
along the ordering of the stops here

00:17:36,620 --> 00:17:45,230
basically has to be a super sequence of

00:17:41,510 --> 00:17:49,230
the stops on any one of the trips and

00:17:45,230 --> 00:17:51,510
you don't just want a naive super

00:17:49,230 --> 00:17:55,389
sequence you want the shortest common

00:17:51,510 --> 00:17:57,460
super sequence of all of these sets

00:17:55,389 --> 00:18:00,629
and that is a particularly difficult

00:17:57,460 --> 00:18:05,110
problem which is why you do not see

00:18:00,629 --> 00:18:06,489
timetables made from GTFS very often so

00:18:05,110 --> 00:18:09,820
let's talk about this particular

00:18:06,489 --> 00:18:11,710
algorithm in the apps in the abstract so

00:18:09,820 --> 00:18:14,499
I've shortened super shortest common

00:18:11,710 --> 00:18:16,749
super sequence to SCS and I passed it a

00:18:14,499 --> 00:18:19,450
list of two arguments let me explain the

00:18:16,749 --> 00:18:22,899
arguments because just assume that each

00:18:19,450 --> 00:18:25,330
character in the words time table and

00:18:22,899 --> 00:18:27,850
headers just assume that each one of

00:18:25,330 --> 00:18:30,669
those is a stop identifier so T is a

00:18:27,850 --> 00:18:34,600
stop identifier and you can see that

00:18:30,669 --> 00:18:38,230
both of these both of these sets include

00:18:34,600 --> 00:18:39,759
E and a both include a so those are the

00:18:38,230 --> 00:18:44,590
same stop they both make some of the

00:18:39,759 --> 00:18:48,519
same stops right so what we want is the

00:18:44,590 --> 00:18:53,590
output of this should be one string for

00:18:48,519 --> 00:18:55,600
which each input is a subsequence like

00:18:53,590 --> 00:19:00,009
an ordered subsequence so I'll just show

00:18:55,600 --> 00:19:02,049
that so this is this is the shortest

00:19:00,009 --> 00:19:03,730
actually I don't actually know if this

00:19:02,049 --> 00:19:05,580
is the shortest possible super sequence

00:19:03,730 --> 00:19:10,299
because I'll get to that later

00:19:05,580 --> 00:19:12,039
so well the letters in red if we deleted

00:19:10,299 --> 00:19:15,309
them we would get back to the original

00:19:12,039 --> 00:19:18,460
word in in the order right so that means

00:19:15,309 --> 00:19:21,690
that each is a subsequence of that

00:19:18,460 --> 00:19:26,470
answer so you have to solve this problem

00:19:21,690 --> 00:19:28,690
for you know K patterns however many

00:19:26,470 --> 00:19:31,029
specific patterns you have in order to

00:19:28,690 --> 00:19:32,559
get to the time table header once you

00:19:31,029 --> 00:19:35,049
have the time table header the layout of

00:19:32,559 --> 00:19:37,450
the trips is easy but solving this

00:19:35,049 --> 00:19:41,799
problem is particularly hard and I'll

00:19:37,450 --> 00:19:43,600
just switch this into a table format so

00:19:41,799 --> 00:19:45,609
you can see what it would look like now

00:19:43,600 --> 00:19:48,309
we have laid out a time table

00:19:45,609 --> 00:19:50,499
there are not actually x in it but for

00:19:48,309 --> 00:19:52,659
visualization you can see kind of the

00:19:50,499 --> 00:19:55,869
problem laid out and this table happens

00:19:52,659 --> 00:19:58,450
to be transposed from the Caltrain time

00:19:55,869 --> 00:19:59,980
table itself but I hope you get the

00:19:58,450 --> 00:20:03,909
point

00:19:59,980 --> 00:20:07,379
so this is an np-complete problem it

00:20:03,909 --> 00:20:09,220
cannot be is not a tractable problem by

00:20:07,379 --> 00:20:12,549
you cannot solve it

00:20:09,220 --> 00:20:15,610
in all cases and so there's this big

00:20:12,549 --> 00:20:17,919
barrier from going from transit data to

00:20:15,610 --> 00:20:22,299
one of the fundamental visualization of

00:20:17,919 --> 00:20:25,390
fixed route transit which means that the

00:20:22,299 --> 00:20:28,960
solution is typically that someone went

00:20:25,390 --> 00:20:30,700
into software somewhere and said first I

00:20:28,960 --> 00:20:32,890
want to show this stop in the timetable

00:20:30,700 --> 00:20:34,960
header then I want to show this stop and

00:20:32,890 --> 00:20:37,750
then this one they did it manually so

00:20:34,960 --> 00:20:41,970
any timetable you see it's almost always

00:20:37,750 --> 00:20:46,140
done manually which is again data entry

00:20:41,970 --> 00:20:49,450
really annoying and always problematic

00:20:46,140 --> 00:20:52,570
so this is one of the so we basically

00:20:49,450 --> 00:20:54,340
you know had to solve this problem not

00:20:52,570 --> 00:20:57,340
necessarily you know globally optimally

00:20:54,340 --> 00:20:59,919
but in some way to get this to work and

00:20:57,340 --> 00:21:02,770
so and of course there are degenerate

00:20:59,919 --> 00:21:07,150
cases that would make the the naive

00:21:02,770 --> 00:21:09,700
approach to this just just not work so

00:21:07,150 --> 00:21:12,640
okay that that is particularly I love

00:21:09,700 --> 00:21:16,210
timetables come coming we can talk about

00:21:12,640 --> 00:21:18,190
timetables later but this is why you

00:21:16,210 --> 00:21:19,659
just don't see as many timetables you do

00:21:18,190 --> 00:21:24,039
because it's basically a manual process

00:21:19,659 --> 00:21:26,620
right now it's okay but all of these all

00:21:24,039 --> 00:21:32,890
these algorithms are only really part of

00:21:26,620 --> 00:21:34,360
the part of the problem here so but I

00:21:32,890 --> 00:21:38,710
want to actually talk about the secret

00:21:34,360 --> 00:21:41,770
sauce of a GTFS data pipeline does

00:21:38,710 --> 00:21:46,120
anyone know what the secret sauce of a

00:21:41,770 --> 00:21:52,929
GTFS data pipeline is it is a technical

00:21:46,120 --> 00:21:55,870
term any guesses CSV is a really good

00:21:52,929 --> 00:21:59,950
gas stuff that's my number two no this

00:21:55,870 --> 00:22:02,460
is what's that no thank you

00:21:59,950 --> 00:22:05,520
No

00:22:02,460 --> 00:22:09,480
no yeah this is a little bit cheesy but

00:22:05,520 --> 00:22:11,970
it literally is people so I I wish this

00:22:09,480 --> 00:22:15,000
were a joke okay I wish this were a joke

00:22:11,970 --> 00:22:16,950
it is not I wish the data were always

00:22:15,000 --> 00:22:18,360
perfectly valid and perfectly

00:22:16,950 --> 00:22:21,330
represented the system that it was

00:22:18,360 --> 00:22:24,090
intended to represent I wish that

00:22:21,330 --> 00:22:26,850
agencies always knew where they hid that

00:22:24,090 --> 00:22:30,419
darn GTFS file that would make

00:22:26,850 --> 00:22:33,600
everyone's life much much easier I wish

00:22:30,419 --> 00:22:36,390
that every agency knew what GTFS was and

00:22:33,600 --> 00:22:39,059
how valuable it would be to them if they

00:22:36,390 --> 00:22:42,029
could just create it these things are

00:22:39,059 --> 00:22:45,090
not always the case which is why you we

00:22:42,029 --> 00:22:48,090
work very closely with agencies and

00:22:45,090 --> 00:22:51,539
we've we developed in all of in our

00:22:48,090 --> 00:22:54,990
entire team a very very deep competency

00:22:51,539 --> 00:22:57,320
around data so anyone at our company can

00:22:54,990 --> 00:23:00,270
debug the GTFS file to some extent

00:22:57,320 --> 00:23:02,490
anyone anyone at our company can take a

00:23:00,270 --> 00:23:04,260
shape file open it up in QGIS and figure

00:23:02,490 --> 00:23:09,510
out roughly what's going on in the

00:23:04,260 --> 00:23:12,600
shapefile so data provenance where GTFS

00:23:09,510 --> 00:23:15,600
came from is often a mystery much more

00:23:12,600 --> 00:23:17,700
often than you would expect the software

00:23:15,600 --> 00:23:22,529
that produced it what if it was software

00:23:17,700 --> 00:23:24,360
is not always known and oftentimes for

00:23:22,529 --> 00:23:27,240
smaller agencies there's sort of

00:23:24,360 --> 00:23:29,940
regional cooperative groups that are

00:23:27,240 --> 00:23:33,299
creating the GTFS on their behalf and

00:23:29,940 --> 00:23:35,610
that means they may not be the steward

00:23:33,299 --> 00:23:38,250
of their own GTFS data so we work very

00:23:35,610 --> 00:23:45,120
closely with them to sort of back into

00:23:38,250 --> 00:23:47,850
the where their data came from and how

00:23:45,120 --> 00:23:50,309
we can get an up-to-date copy of it so

00:23:47,850 --> 00:23:52,919
people really is sort of people really

00:23:50,309 --> 00:23:54,600
are the the important part of a GTFS

00:23:52,919 --> 00:23:57,809
data pipeline because the rest of it can

00:23:54,600 --> 00:23:58,740
be automated but at the end at the end

00:23:57,809 --> 00:24:00,179
of the day you're going to need to pick

00:23:58,740 --> 00:24:02,789
up the phone or send someone an email

00:24:00,179 --> 00:24:04,590
and really get to the bottom of data and

00:24:02,789 --> 00:24:07,350
I'm sure all of you can kind of

00:24:04,590 --> 00:24:09,809
understand what that is like and but it

00:24:07,350 --> 00:24:13,500
is an important part of what we do ok

00:24:09,809 --> 00:24:20,370
before my battery runs out here

00:24:13,500 --> 00:24:23,990
so now a request please go explore

00:24:20,370 --> 00:24:27,330
transit data make art from transit data

00:24:23,990 --> 00:24:28,830
there are there are amazing fun things

00:24:27,330 --> 00:24:30,180
you can do with transit data not just

00:24:28,830 --> 00:24:34,080
putting it on a map I think that's

00:24:30,180 --> 00:24:36,270
that's the start there but there try to

00:24:34,080 --> 00:24:37,650
go try to make timetables go grab some

00:24:36,270 --> 00:24:38,550
data and try to make timetables out of

00:24:37,650 --> 00:24:41,970
it

00:24:38,550 --> 00:24:44,460
and I go find the data for your for your

00:24:41,970 --> 00:24:48,300
city so here's some quick art that I

00:24:44,460 --> 00:24:54,360
made this is if the San Francisco cable

00:24:48,300 --> 00:24:57,030
cars were a star formation I'll say so

00:24:54,360 --> 00:24:59,370
these are this and more interesting

00:24:57,030 --> 00:25:04,140
things even timetabling things you can

00:24:59,370 --> 00:25:06,300
find on my github and I want to do one

00:25:04,140 --> 00:25:08,010
last plug here which is if this sounds

00:25:06,300 --> 00:25:11,010
interesting to you if you want to work

00:25:08,010 --> 00:25:12,900
with transit agencies if you if you want

00:25:11,010 --> 00:25:14,850
to work with city government we are we

00:25:12,900 --> 00:25:16,740
are hiring you can you can go to remix

00:25:14,850 --> 00:25:18,510
telcom slash jobs or just email me come

00:25:16,740 --> 00:25:19,680
up and talk to me afterwards I'll tell

00:25:18,510 --> 00:25:23,190
you about all the amazing things that

00:25:19,680 --> 00:25:24,020
we're working on thank you all for being

00:25:23,190 --> 00:25:26,550
here

00:25:24,020 --> 00:25:33,249
[Applause]

00:25:26,550 --> 00:25:33,249

YouTube URL: https://www.youtube.com/watch?v=nKLE_fiayIM


