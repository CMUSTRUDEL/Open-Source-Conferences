Title: FreeCodeCamp Vienna, Introduction To Vue.js, December 2017
Publication date: 2018-02-15
Playlist: FreeCodeCamp Vienna
Description: 
	Robert Axelsen will be giving us an introduction to Vue.js, the JavaScript Framework. Examples and resources will be covered, enabling you to start coding with Vue.js immediately.

More about Robert: https://twitter.com/robaxelsen

More about FreeCodeCamp Vienna: https://www.meetup.com/Free-Code-Camp-Vienna/
Captions: 
	00:00:00,030 --> 00:00:04,529
my name is Rebecca Susan and this is

00:00:02,700 --> 00:00:06,960
going to be talked about vue.js two

00:00:04,529 --> 00:00:10,440
disclaimers I'm trying to keep it short

00:00:06,960 --> 00:00:13,019
in brief I know we have some beginners

00:00:10,440 --> 00:00:14,490
here that maybe you know as more than

00:00:13,019 --> 00:00:16,260
enough learning JavaScript for now and

00:00:14,490 --> 00:00:17,880
then we have some more advanced people

00:00:16,260 --> 00:00:20,340
I'll keep it more beginner friendly than

00:00:17,880 --> 00:00:22,850
advanced I'll try to cover some of the

00:00:20,340 --> 00:00:25,439
things that makes you Jess you Jess I

00:00:22,850 --> 00:00:28,230
won't go so much in depth but we'll show

00:00:25,439 --> 00:00:31,349
look at some examples together the other

00:00:28,230 --> 00:00:33,120
disclaimer is I'm on a Mac that is not

00:00:31,349 --> 00:00:35,219
mine so if I seem like I'm fumbling

00:00:33,120 --> 00:00:38,899
around that's why I'm think we'll we'll

00:00:35,219 --> 00:00:41,460
make this work cool let's get started

00:00:38,899 --> 00:00:43,920
just really briefly about me I'm a

00:00:41,460 --> 00:00:46,770
software developer meetup organizer of

00:00:43,920 --> 00:00:49,890
this free code camp meet up and also

00:00:46,770 --> 00:00:51,390
view GS Vienna and also Vienna go which

00:00:49,890 --> 00:00:54,570
is a goal-line meetup so I organized

00:00:51,390 --> 00:00:57,690
three meetups they're all monthly and

00:00:54,570 --> 00:00:59,850
obviously I'm a community youth and I'm

00:00:57,690 --> 00:01:02,190
a community enthusiast because I really

00:00:59,850 --> 00:01:03,930
love doing these kind of things you can

00:01:02,190 --> 00:01:07,920
find me on most the things that Rob

00:01:03,930 --> 00:01:09,930
axelsson Twitter github etc me and

00:01:07,920 --> 00:01:11,640
Daniel Deutsch which is mic organizer

00:01:09,930 --> 00:01:13,100
for free code camp Vienna which is also

00:01:11,640 --> 00:01:16,200
here tonight we had a talk together

00:01:13,100 --> 00:01:18,780
recently which you can see online head

00:01:16,200 --> 00:01:22,500
over to my website and you can see it in

00:01:18,780 --> 00:01:24,299
full it talks about our way from being a

00:01:22,500 --> 00:01:27,180
self-taught programmer to getting our

00:01:24,299 --> 00:01:34,200
first developer job so that's enough

00:01:27,180 --> 00:01:38,189
about me what is view Jas a brief

00:01:34,200 --> 00:01:43,229
history view Jas was created by Avenue

00:01:38,189 --> 00:01:45,689
in 2013 while he worked at Google just

00:01:43,229 --> 00:01:50,220
to give some context the first release

00:01:45,689 --> 00:01:51,630
of react was also released in 2013 they

00:01:50,220 --> 00:01:54,869
worked on it internally at Facebook

00:01:51,630 --> 00:01:58,250
before but that gives us some some

00:01:54,869 --> 00:02:00,600
context there's a quote from Avenue I

00:01:58,250 --> 00:02:02,009
started view as a personal project when

00:02:00,600 --> 00:02:05,520
I was working at Google creative labs

00:02:02,009 --> 00:02:08,910
into the 2013 my job there involved

00:02:05,520 --> 00:02:10,319
building a lot of UI prototypes after

00:02:08,910 --> 00:02:13,470
hand rolling many of them with vanilla

00:02:10,319 --> 00:02:15,660
Jas and using angular 1

00:02:13,470 --> 00:02:17,730
whew I wanted something that captured

00:02:15,660 --> 00:02:19,860
the declarative nature of angular's data

00:02:17,730 --> 00:02:22,770
binding but with a simpler more

00:02:19,860 --> 00:02:27,750
approachable API and that is how you

00:02:22,770 --> 00:02:30,690
started I know this is hard for you guys

00:02:27,750 --> 00:02:32,610
here in the audience to see but I can

00:02:30,690 --> 00:02:35,010
sum it up really briefly with the

00:02:32,610 --> 00:02:36,990
popularity this chart chart is supposed

00:02:35,010 --> 00:02:39,120
to show that November this year was the

00:02:36,990 --> 00:02:43,560
first month that was more than a million

00:02:39,120 --> 00:02:46,500
downloads of UGS last year I think

00:02:43,560 --> 00:02:50,340
October 2016 I'm not 100 percent sure

00:02:46,500 --> 00:02:52,920
they had reached their first I think it

00:02:50,340 --> 00:02:55,050
was 2 million downloads total so now

00:02:52,920 --> 00:02:57,150
we're off to instead of total we're off

00:02:55,050 --> 00:03:00,240
to monthly downloads and it's just

00:02:57,150 --> 00:03:03,210
increasing in popularity also comparable

00:03:00,240 --> 00:03:05,670
to other frameworks it has a good growth

00:03:03,210 --> 00:03:06,990
rate it's not necessarily the only

00:03:05,670 --> 00:03:09,290
reason or it's not the only reason you

00:03:06,990 --> 00:03:12,780
should use fear jest but it's one of the

00:03:09,290 --> 00:03:14,510
things to keep in mind this size here is

00:03:12,780 --> 00:03:18,060
wrong but here are some of the benefits

00:03:14,510 --> 00:03:21,180
it is now 20 kilobytes minified and

00:03:18,060 --> 00:03:22,709
zipped the size of this framework so

00:03:21,180 --> 00:03:25,860
it's quite light compared to some other

00:03:22,709 --> 00:03:28,250
frameworks we didn't cover it but just

00:03:25,860 --> 00:03:31,410
discovered now vue.js is a framework

00:03:28,250 --> 00:03:33,420
it's not a library some people have in

00:03:31,410 --> 00:03:37,080
the past and continue to call it a

00:03:33,420 --> 00:03:39,720
library but it has stuff that makes it

00:03:37,080 --> 00:03:42,150
more a framework with a lot of features

00:03:39,720 --> 00:03:44,100
it comes to the feature-rich part part

00:03:42,150 --> 00:03:47,610
there's a big API what a lot of stuff

00:03:44,100 --> 00:03:50,570
you can do out of the box with UJS or

00:03:47,610 --> 00:03:52,950
with build tools like web pack on top

00:03:50,570 --> 00:03:57,090
compared to both react and angular it

00:03:52,950 --> 00:03:59,130
has a gentler learning curve that

00:03:57,090 --> 00:04:00,900
doesn't mean it is purely gentle it's

00:03:59,130 --> 00:04:04,280
more like it doesn't have as steep of a

00:04:00,900 --> 00:04:07,260
learning curve some other frameworks

00:04:04,280 --> 00:04:09,870
might have a steeper one just starting

00:04:07,260 --> 00:04:11,940
out it will still be you know some stuff

00:04:09,870 --> 00:04:14,370
to learn and the could be quite a it

00:04:11,940 --> 00:04:17,280
could be a steep ish learning curve if

00:04:14,370 --> 00:04:20,250
it's your first framework I keep that in

00:04:17,280 --> 00:04:22,229
mind the documentation is great we'll

00:04:20,250 --> 00:04:22,919
have a look at that afterwards so we'll

00:04:22,229 --> 00:04:26,100
get to that

00:04:22,919 --> 00:04:27,389
it is reactive we'll get to that in the

00:04:26,100 --> 00:04:30,060
next slide it is

00:04:27,389 --> 00:04:31,139
has declared surrendering and it does

00:04:30,060 --> 00:04:32,759
have two-way data-binding

00:04:31,139 --> 00:04:34,770
but that's more of a default nowadays

00:04:32,759 --> 00:04:36,629
like it's not necessarily something we

00:04:34,770 --> 00:04:45,030
have to mention but if you're curious

00:04:36,629 --> 00:04:47,939
that's built in I think I'll skip back

00:04:45,030 --> 00:04:51,090
and just mention one thing that is not

00:04:47,939 --> 00:04:54,210
in the slides for those of you who for

00:04:51,090 --> 00:04:55,889
now either haven't used any JavaScript

00:04:54,210 --> 00:04:57,840
or haven't really programmed much or

00:04:55,889 --> 00:05:00,569
you've done something in JavaScript and

00:04:57,840 --> 00:05:02,460
what you've done is using javascript so

00:05:00,569 --> 00:05:04,879
vanilla JavaScript of JavaScript itself

00:05:02,460 --> 00:05:08,210
with document.getelementbyid en self

00:05:04,879 --> 00:05:11,490
manipulating the HTML Dom with

00:05:08,210 --> 00:05:14,460
JavaScript and the reason you would want

00:05:11,490 --> 00:05:16,620
to use vgs is to instead of having to do

00:05:14,460 --> 00:05:18,750
all that kind of basic stuff and

00:05:16,620 --> 00:05:22,919
structuring it out yourself you can use

00:05:18,750 --> 00:05:26,639
few GS out of the box as well you kind

00:05:22,919 --> 00:05:29,849
of get a bit ahead of the curve in terms

00:05:26,639 --> 00:05:32,580
of people have already prepared stuff

00:05:29,849 --> 00:05:34,770
for you that they've simplified so you

00:05:32,580 --> 00:05:37,949
as a developer can get more done quicker

00:05:34,770 --> 00:05:39,690
but it is more higher-level you want to

00:05:37,949 --> 00:05:41,639
silly understand everything that goes on

00:05:39,690 --> 00:05:43,680
behind the scenes but there's nothing

00:05:41,639 --> 00:05:45,569
certainly a bad thing starting out keep

00:05:43,680 --> 00:05:48,089
in mind that it might be good to look

00:05:45,569 --> 00:05:50,639
into the things as you start working

00:05:48,089 --> 00:05:53,069
with them how does this really happen

00:05:50,639 --> 00:05:54,120
with with the JavaScript itself and

00:05:53,069 --> 00:05:56,460
you're free to read the source code

00:05:54,120 --> 00:05:58,199
because it's open source I just want to

00:05:56,460 --> 00:05:59,759
get that out of the box feel free to ask

00:05:58,199 --> 00:06:01,349
questions afterwards if this is really

00:05:59,759 --> 00:06:07,050
Greek to you what we're getting into now

00:06:01,349 --> 00:06:08,940
but if you want to start out don't be

00:06:07,050 --> 00:06:10,469
afraid to skip ahead and try out Vijay s

00:06:08,940 --> 00:06:12,360
if you don't if you're not so familiar

00:06:10,469 --> 00:06:14,819
with Java Script because you still can

00:06:12,360 --> 00:06:20,969
get stuff done looking at the

00:06:14,819 --> 00:06:25,650
documentation at Blue Jays lorg so just

00:06:20,969 --> 00:06:28,529
briefly the reactive part that you might

00:06:25,650 --> 00:06:34,589
have seen that also react has as it also

00:06:28,529 --> 00:06:37,789
has in its name is the fact that it

00:06:34,589 --> 00:06:41,040
reacts to changes in state and let's get

00:06:37,789 --> 00:06:44,580
to some fundamentals before we

00:06:41,040 --> 00:06:46,860
but what makes it reactive vgs has a

00:06:44,580 --> 00:06:49,050
virtual Dom and it is a simplified copy

00:06:46,860 --> 00:06:53,910
of the HTML Dom but what is a Dom DOM is

00:06:49,050 --> 00:06:54,930
the table jecht document object yeah I

00:06:53,910 --> 00:06:56,130
was about to say module then I

00:06:54,930 --> 00:06:58,710
second-guessed myself thank you guys

00:06:56,130 --> 00:07:01,050
it's a document object model which is an

00:06:58,710 --> 00:07:03,480
abstraction of what the browser is

00:07:01,050 --> 00:07:05,040
keeping track of to render what you see

00:07:03,480 --> 00:07:05,720
in the browser in a simplified way of

00:07:05,040 --> 00:07:08,790
saying it

00:07:05,720 --> 00:07:11,880
vue.js has its own virtual Dom which is

00:07:08,790 --> 00:07:13,890
even more simplified which is its way of

00:07:11,880 --> 00:07:16,530
keeping traffic what it's gonna hook

00:07:13,890 --> 00:07:20,340
into in the browser what makes it

00:07:16,530 --> 00:07:22,530
reactive then is that it's when you make

00:07:20,340 --> 00:07:24,870
changes to the state in your app only

00:07:22,530 --> 00:07:28,410
the affected parts of the page changes

00:07:24,870 --> 00:07:31,560
and it does this by dipping so it takes

00:07:28,410 --> 00:07:33,090
you make a change in the state and it

00:07:31,560 --> 00:07:36,210
gives the change with what is in the

00:07:33,090 --> 00:07:37,920
virtual DOM and it elite elegantly only

00:07:36,210 --> 00:07:40,290
changes on the page what it needs to

00:07:37,920 --> 00:07:42,930
change instead of having to re-render

00:07:40,290 --> 00:07:44,070
the whole page so sometimes you click a

00:07:42,930 --> 00:07:46,380
button or you do something on the

00:07:44,070 --> 00:07:48,270
webpage if the whole thing we fresh is

00:07:46,380 --> 00:07:50,370
for you to see something it's not doing

00:07:48,270 --> 00:07:52,620
this so there is some magic going on in

00:07:50,370 --> 00:07:55,620
the backend and that's what the reactive

00:07:52,620 --> 00:07:57,420
part is about and it in fact acts on

00:07:55,620 --> 00:08:07,200
when you make changes to the state the

00:07:57,420 --> 00:08:08,940
state is as simple as data or stuff for

00:08:07,200 --> 00:08:10,980
example you have a unique title for each

00:08:08,940 --> 00:08:13,620
page you want to input your username

00:08:10,980 --> 00:08:16,410
like stuff that is unique to you

00:08:13,620 --> 00:08:17,610
browsing this site it is it stated let's

00:08:16,410 --> 00:08:19,230
call this state this is what we are

00:08:17,610 --> 00:08:20,850
calling State for example when you're

00:08:19,230 --> 00:08:23,430
changing the username when you're

00:08:20,850 --> 00:08:24,960
changing the title when you are clicking

00:08:23,430 --> 00:08:26,790
a button and the color of something

00:08:24,960 --> 00:08:27,840
changes that is a state that's keeping

00:08:26,790 --> 00:08:30,240
track though and when you're done

00:08:27,840 --> 00:08:32,580
changing the state it reflects into this

00:08:30,240 --> 00:08:33,930
reactiveness these are simplified ways

00:08:32,580 --> 00:08:36,979
of saying it and I'm trying to keep that

00:08:33,930 --> 00:08:39,510
in mind the clarity rendering means that

00:08:36,979 --> 00:08:41,490
basically comes down to it looks more

00:08:39,510 --> 00:08:43,979
like HTML and it's easier to write and

00:08:41,490 --> 00:08:45,570
read we declare how something should

00:08:43,979 --> 00:08:48,420
look like with HTML and Vijay has

00:08:45,570 --> 00:08:52,170
specific syntax and then the UJS takes

00:08:48,420 --> 00:08:54,950
care of the rest for us the end result

00:08:52,170 --> 00:08:56,570
is as I said easier and more

00:08:54,950 --> 00:08:59,540
code and we'll look at this in the

00:08:56,570 --> 00:09:02,030
documentation soon the two-way

00:08:59,540 --> 00:09:04,760
data-binding means that when properties

00:09:02,030 --> 00:09:07,580
in the model gets updated so does the UI

00:09:04,760 --> 00:09:10,010
when UI elements get updated the changes

00:09:07,580 --> 00:09:17,690
get propagated back to the model so if

00:09:10,010 --> 00:09:20,090
we put if we for example have a text in

00:09:17,690 --> 00:09:22,310
our page and then we have the same pack

00:09:20,090 --> 00:09:24,350
text and input field if those are bind

00:09:22,310 --> 00:09:26,930
together with two-way binding if we're

00:09:24,350 --> 00:09:29,300
changing what is in the input field the

00:09:26,930 --> 00:09:30,710
title changes instantly and again with

00:09:29,300 --> 00:09:33,980
the reactive rendering without the whole

00:09:30,710 --> 00:09:38,810
page refreshing for us we'll have a look

00:09:33,980 --> 00:09:40,790
at that also now we'll get to some code

00:09:38,810 --> 00:09:42,290
I'll use the official documentation as

00:09:40,790 --> 00:09:44,750
the basis that also makes it easier for

00:09:42,290 --> 00:09:48,430
you guys to look at it afterwards

00:09:44,750 --> 00:09:48,430
yourself and continue on if you want to

00:09:49,420 --> 00:09:54,320
before we get to that just very briefly

00:09:51,830 --> 00:09:55,640
I work at step wise we are hiring this

00:09:54,320 --> 00:09:57,830
is where you go if you're interested

00:09:55,640 --> 00:10:00,130
right now we're looking for a full stack

00:09:57,830 --> 00:10:02,660
web developer among other developer jobs

00:10:00,130 --> 00:10:04,670
if you feel like the qualifications are

00:10:02,660 --> 00:10:07,430
beyond you please just approach me or

00:10:04,670 --> 00:10:11,150
still apply because we'd like to get to

00:10:07,430 --> 00:10:14,350
know you better regardless that's it we

00:10:11,150 --> 00:10:16,730
don't need to spend more time on that so

00:10:14,350 --> 00:10:18,680
instead of demo time this time I want to

00:10:16,730 --> 00:10:20,750
call it jsfiddle time because we can get

00:10:18,680 --> 00:10:25,130
quicker to testing something out and see

00:10:20,750 --> 00:10:27,110
the results together and we have

00:10:25,130 --> 00:10:33,410
something saved for afterwards but let

00:10:27,110 --> 00:10:40,750
us do this like so this is the official

00:10:33,410 --> 00:10:43,990
VDS website if we click get started here

00:10:40,750 --> 00:10:48,440
we get here it's as simple as that

00:10:43,990 --> 00:10:50,570
it's the guide this is vue.js 2 by the

00:10:48,440 --> 00:10:54,860
way if we talk about major releases

00:10:50,570 --> 00:10:56,960
that's what where we are at now but it

00:10:54,860 --> 00:11:00,050
hasn't been angular size breaking

00:10:56,960 --> 00:11:02,300
changes so don't worry like that the

00:11:00,050 --> 00:11:06,170
fiddle that I talked about is the link

00:11:02,300 --> 00:11:07,730
that is mentioned here so I think we'll

00:11:06,170 --> 00:11:11,649
just have a look

00:11:07,730 --> 00:11:14,630
that let's get back to within a second

00:11:11,649 --> 00:11:16,550
because all these things that I

00:11:14,630 --> 00:11:18,649
mentioned now are explained well here in

00:11:16,550 --> 00:11:20,690
the documentation the clarity rendering

00:11:18,649 --> 00:11:23,240
is an example of it here you see if you

00:11:20,690 --> 00:11:25,699
know some HTML from before this is HTML

00:11:23,240 --> 00:11:27,709
with something here inside that we are

00:11:25,699 --> 00:11:32,360
like okay this is what is this but let's

00:11:27,709 --> 00:11:34,459
have a look this is a view instance this

00:11:32,360 --> 00:11:36,949
is where the magic happens okay so we

00:11:34,459 --> 00:11:39,199
got that out of the box or the yeah we

00:11:36,949 --> 00:11:39,620
got that ready this is the same thing in

00:11:39,199 --> 00:11:42,949
the browser

00:11:39,620 --> 00:11:44,660
you could do this locally just remember

00:11:42,949 --> 00:11:47,300
to use the CDN like this one to get to

00:11:44,660 --> 00:11:50,600
view J's in imported or you can download

00:11:47,300 --> 00:11:53,120
have it have it locally if that's Greek

00:11:50,600 --> 00:11:54,769
to you ask me afterwards it's I will

00:11:53,120 --> 00:11:59,810
read the documentation it's not so hard

00:11:54,769 --> 00:12:01,519
to set up here is the output so this is

00:11:59,810 --> 00:12:04,190
as if this was the web page that we have

00:12:01,519 --> 00:12:07,550
created with these with HTML together

00:12:04,190 --> 00:12:09,560
with JavaScript we are now importing the

00:12:07,550 --> 00:12:15,319
whole view J's here we are declaring

00:12:09,560 --> 00:12:17,959
this that id app is we need to clear an

00:12:15,319 --> 00:12:20,420
ID and we need to tell view where it

00:12:17,959 --> 00:12:23,029
should start to it's magic you do not

00:12:20,420 --> 00:12:25,790
have to use V J's on your whole website

00:12:23,029 --> 00:12:28,130
and on a single page on your website you

00:12:25,790 --> 00:12:30,589
don't have to use v GS only you can use

00:12:28,130 --> 00:12:35,029
it just in a small part for example

00:12:30,589 --> 00:12:37,069
gitlab they are using components where

00:12:35,029 --> 00:12:38,839
they are incrementally doing more and

00:12:37,069 --> 00:12:40,399
more of you J's for their website so

00:12:38,839 --> 00:12:41,750
they're having this approach where you

00:12:40,399 --> 00:12:43,279
don't have to think about it as we have

00:12:41,750 --> 00:12:48,310
to switch everything right now to view

00:12:43,279 --> 00:12:53,300
yes you can do it iteratively or yeah

00:12:48,310 --> 00:12:55,519
step by step so what is this this is a

00:12:53,300 --> 00:12:57,380
reference to the state to the data that

00:12:55,519 --> 00:13:00,260
we are declaring here this is a simple

00:12:57,380 --> 00:13:02,029
view instance where we are declaring the

00:13:00,260 --> 00:13:09,110
element that we're supposed to render

00:13:02,029 --> 00:13:12,529
this view instance within so the HTML

00:13:09,110 --> 00:13:16,579
element we are declaring only here data

00:13:12,529 --> 00:13:21,949
and then magically with this syntax we

00:13:16,579 --> 00:13:25,939
know with mustache braces or

00:13:21,949 --> 00:13:27,649
curly braces we know to reference that

00:13:25,939 --> 00:13:28,509
and we're outputting it this way it's

00:13:27,649 --> 00:13:31,009
that simple

00:13:28,509 --> 00:13:32,269
this is more an example of declarative

00:13:31,009 --> 00:13:35,889
rendering let's get a little bit more

00:13:32,269 --> 00:13:35,889
into other types of things we can do

00:13:44,410 --> 00:13:50,509
let's take this example here let's just

00:13:48,559 --> 00:13:58,519
let's do something fun here by the way

00:13:50,509 --> 00:14:01,360
it is as simple as okay German keyboard

00:13:58,519 --> 00:14:01,360
one second

00:14:01,569 --> 00:14:11,990
there we go so if I now and this is

00:14:09,620 --> 00:14:21,999
JavaScript if I now just say I want to

00:14:11,990 --> 00:14:26,959
have this text maybe awesome cool nice

00:14:21,999 --> 00:14:36,559
free code camp maybe I shouldn't write

00:14:26,959 --> 00:14:42,980
so much awesome so I can now do this

00:14:36,559 --> 00:14:45,350
right what you've come here awesome and

00:14:42,980 --> 00:14:51,680
I can manipulate this as well and I can

00:14:45,350 --> 00:14:53,680
say I shouldn't do this it seems that I

00:14:51,680 --> 00:14:56,680
think that actually there is a plus

00:14:53,680 --> 00:14:56,680
awesome

00:15:04,130 --> 00:15:12,290
ah if I just have a look at what is

00:15:08,089 --> 00:15:18,440
spelled on the buttons it seems to work

00:15:12,290 --> 00:15:22,069
sort of cool so we can even do stuff

00:15:18,440 --> 00:15:25,850
within curly braces to get even more

00:15:22,069 --> 00:15:27,410
fancy now we can see an example of

00:15:25,850 --> 00:15:28,550
conditionals and loops if you don't know

00:15:27,410 --> 00:15:29,899
much a program and this might be

00:15:28,550 --> 00:15:32,779
confusing but for those of you guys who

00:15:29,899 --> 00:15:34,880
know some this is really handy this is

00:15:32,779 --> 00:15:45,250
sort of like the angular style of doing

00:15:34,880 --> 00:15:53,360
things now I'm only going to take this

00:15:45,250 --> 00:15:58,069
but we're still doing the same and then

00:15:53,360 --> 00:16:02,750
we need a button or something now you

00:15:58,069 --> 00:16:04,880
see me okay let's just do it that's what

00:16:02,750 --> 00:16:10,420
they're doing so this follows the state

00:16:04,880 --> 00:16:13,730
of the seed object which has a key value

00:16:10,420 --> 00:16:17,000
the key is seen and the value is true so

00:16:13,730 --> 00:16:22,790
it's saying that if the value of seen is

00:16:17,000 --> 00:16:24,130
true show it but if it's false don't

00:16:22,790 --> 00:16:26,959
show it

00:16:24,130 --> 00:16:30,560
that's the conditional on that level of

00:16:26,959 --> 00:16:33,880
V if and that's a control statement but

00:16:30,560 --> 00:16:44,149
we can go into loops and have a for loop

00:16:33,880 --> 00:16:48,019
within our div then we can take the

00:16:44,149 --> 00:16:55,639
state which is the list so we could just

00:16:48,019 --> 00:16:57,500
say awesome not awesome okay then I

00:16:55,639 --> 00:17:01,390
should just probably pop that back in

00:16:57,500 --> 00:17:04,709
great awesome so

00:17:01,390 --> 00:17:08,880
let's just create a list of to dos and

00:17:04,709 --> 00:17:10,959
then we should have a should be an array

00:17:08,880 --> 00:17:16,839
okay I'm going to copy paste because

00:17:10,959 --> 00:17:18,310
this keyboard is not my friend but you

00:17:16,839 --> 00:17:21,880
get the idea

00:17:18,310 --> 00:17:25,060
so let's push this in so this is now an

00:17:21,880 --> 00:17:28,060
object where we have one array of

00:17:25,060 --> 00:17:31,570
objects and then we're going to show

00:17:28,060 --> 00:17:46,390
hopefully all of them something wrong in

00:17:31,570 --> 00:17:49,810
my copy pasting yeah awesome so we just

00:17:46,390 --> 00:17:53,590
had it we changed this in attentionally

00:17:49,810 --> 00:17:55,450
so I didn't know where to render so now

00:17:53,590 --> 00:17:57,790
we have a list here and depending on

00:17:55,450 --> 00:18:01,780
them data we're saying to do introduce

00:17:57,790 --> 00:18:04,000
introduce is the object that we're

00:18:01,780 --> 00:18:05,530
iterating over and then we're the same

00:18:04,000 --> 00:18:07,270
way that you were dealing your mapping

00:18:05,530 --> 00:18:08,830
over stuff you're for each or whatever

00:18:07,270 --> 00:18:10,540
you however you handling you're for

00:18:08,830 --> 00:18:12,520
loops and JavaScript you're saying that

00:18:10,540 --> 00:18:14,050
this is the item within that object and

00:18:12,520 --> 00:18:15,880
then you're iterating over that and then

00:18:14,050 --> 00:18:24,780
you're rendering out it like this for

00:18:15,880 --> 00:18:30,240
example you can also do stuff like this

00:18:24,780 --> 00:18:30,240
then we can do an unordered list and

00:18:31,020 --> 00:18:41,550
then we can say we want index and then

00:18:38,410 --> 00:18:41,550
we can even do

00:18:43,240 --> 00:18:47,580
okay let me just copy paste this

00:18:55,889 --> 00:18:58,889
awesome

00:19:11,620 --> 00:19:16,490
awesome so what's the wrong other way

00:19:14,900 --> 00:19:18,260
around but you can even work with

00:19:16,490 --> 00:19:20,150
indexes you can even have number numbers

00:19:18,260 --> 00:19:24,410
and stuff like this but let's look at

00:19:20,150 --> 00:19:25,010
something yeah let's look at two-way

00:19:24,410 --> 00:19:29,510
data-binding

00:19:25,010 --> 00:19:32,990
and then it's about time to mention

00:19:29,510 --> 00:19:35,030
something of where you can go next as a

00:19:32,990 --> 00:19:39,440
user if you want to look into more

00:19:35,030 --> 00:19:41,420
because this is view GS at its core what

00:19:39,440 --> 00:19:44,270
we are looking at now the syntax and the

00:19:41,420 --> 00:19:46,640
VJs instance when you're getting more

00:19:44,270 --> 00:19:51,050
advanced you'll use webpack or something

00:19:46,640 --> 00:19:53,510
and you have a dot view file to render

00:19:51,050 --> 00:19:54,770
it in single file components and then it

00:19:53,510 --> 00:20:00,200
starts being more like the other

00:19:54,770 --> 00:20:02,960
frameworks out there it's a bit too much

00:20:00,200 --> 00:20:05,060
to cover in this talk but let's have a

00:20:02,960 --> 00:20:08,410
look now a two way data binding and some

00:20:05,060 --> 00:20:08,410
magic happening here

00:20:18,050 --> 00:20:22,710
actually we took the wrong example we

00:20:20,910 --> 00:20:27,830
can look at this though this is reverses

00:20:22,710 --> 00:20:30,090
it for us the magic happens this is a I

00:20:27,830 --> 00:20:34,260
didn't mean to cover this but this is a

00:20:30,090 --> 00:20:36,930
an event handler with the click and then

00:20:34,260 --> 00:20:39,150
we're having a we're invoking the

00:20:36,930 --> 00:20:41,040
reverse message function and it takes

00:20:39,150 --> 00:20:44,100
the message and it reverses it for us

00:20:41,040 --> 00:20:47,190
and because this is reactive to change

00:20:44,100 --> 00:20:49,740
that state changes and then the view

00:20:47,190 --> 00:20:56,790
changes but this is more fun to play

00:20:49,740 --> 00:21:00,870
with we'll take this code here and we'll

00:20:56,790 --> 00:21:02,400
do this then we'll take this data so we

00:21:00,870 --> 00:21:06,810
basically just need to change the data

00:21:02,400 --> 00:21:14,180
right we could keep it but let's do what

00:21:06,810 --> 00:21:20,640
did I copy/paste cool let's do like so

00:21:14,180 --> 00:21:24,570
there's something wrong here right let

00:21:20,640 --> 00:21:30,660
me take a step back then no it looks

00:21:24,570 --> 00:21:31,890
good awesome so this is what we're

00:21:30,660 --> 00:21:34,050
saying when we have to date with two-way

00:21:31,890 --> 00:21:35,700
data-binding whatever i'm writing here

00:21:34,050 --> 00:21:38,670
because the state is bound both to the

00:21:35,700 --> 00:21:41,820
message and we're binding the v-model of

00:21:38,670 --> 00:21:43,200
the input message to the title that we

00:21:41,820 --> 00:21:46,800
are displaying or the message we are

00:21:43,200 --> 00:21:50,220
displaying in the P tag it now changes

00:21:46,800 --> 00:21:52,860
instantly as we're doing stuff on it I

00:21:50,220 --> 00:21:56,340
think this is a good time to run out to

00:21:52,860 --> 00:21:59,250
run up by saying that you take take this

00:21:56,340 --> 00:22:01,380
to the next level let's have a look at

00:21:59,250 --> 00:22:06,920
example first no let's do it like this

00:22:01,380 --> 00:22:06,920
simple awesome

00:22:07,799 --> 00:22:11,289
components that I briefly mentioned I

00:22:09,700 --> 00:22:17,530
will look at a quick example and then

00:22:11,289 --> 00:22:19,720
we'll round up is a system yeah it's an

00:22:17,530 --> 00:22:21,549
extract abstraction that allows us to

00:22:19,720 --> 00:22:24,010
build large-scale application composed

00:22:21,549 --> 00:22:26,860
of small self-contained and often

00:22:24,010 --> 00:22:29,380
reusable components in view a component

00:22:26,860 --> 00:22:31,750
is essentially a view instance with

00:22:29,380 --> 00:22:33,610
predefined options in a large

00:22:31,750 --> 00:22:36,159
application it is necessary to divide

00:22:33,610 --> 00:22:40,330
the whole app into components to make

00:22:36,159 --> 00:22:42,280
development manageable there is a great

00:22:40,330 --> 00:22:44,289
tool if you just look for a view CLI

00:22:42,280 --> 00:22:46,630
it's maintained by the vue.js core team

00:22:44,289 --> 00:22:49,179
that does this stuff for you is

00:22:46,630 --> 00:22:52,090
literally install something when npm run

00:22:49,179 --> 00:22:55,570
a command go into the directory and just

00:22:52,090 --> 00:22:57,100
npm run dev for example spins up it for

00:22:55,570 --> 00:23:01,960
you with backpack and you can have a

00:22:57,100 --> 00:23:04,299
look at the code and it live let's have

00:23:01,960 --> 00:23:09,039
a look at an example of a what that

00:23:04,299 --> 00:23:11,980
means not the view CLI but here's an

00:23:09,039 --> 00:23:14,740
example of how we are taking stuff to

00:23:11,980 --> 00:23:17,200
the next level it's a bit more stuff

00:23:14,740 --> 00:23:18,789
going on in one file but you can have

00:23:17,200 --> 00:23:20,740
one file for each in component you can

00:23:18,789 --> 00:23:24,820
have components within components and

00:23:20,740 --> 00:23:26,620
you can easily build up a single site a

00:23:24,820 --> 00:23:28,720
single page application you can even do

00:23:26,620 --> 00:23:30,940
server-side rendering with with VJ s and

00:23:28,720 --> 00:23:32,470
then you can put this into production

00:23:30,940 --> 00:23:34,179
and do stuff but don't be afraid to

00:23:32,470 --> 00:23:37,390
start out small and have hobby project

00:23:34,179 --> 00:23:40,150
with plain view J's instances but this

00:23:37,390 --> 00:23:42,789
is how you would do something bigger as

00:23:40,150 --> 00:23:44,710
a hobby or you would go to production if

00:23:42,789 --> 00:23:46,720
you're doing this professionally it

00:23:44,710 --> 00:23:51,370
renders on top and inside the template

00:23:46,720 --> 00:23:55,630
template tag is HTML specific we are

00:23:51,370 --> 00:23:57,400
rendering it this way this script is the

00:23:55,630 --> 00:23:59,289
day a view J's instance that we just saw

00:23:57,400 --> 00:24:01,059
as an example of and then we're keeping

00:23:59,289 --> 00:24:02,919
a style tag below here we can also use

00:24:01,059 --> 00:24:05,679
sass or stylus or whatever in there and

00:24:02,919 --> 00:24:09,429
then this together with the viewed pack

00:24:05,679 --> 00:24:11,559
web pack build environment will then

00:24:09,429 --> 00:24:14,260
render this into what you need to put on

00:24:11,559 --> 00:24:18,690
your hosting or whatever or locally to

00:24:14,260 --> 00:24:20,460
to see the resulting view J's in action

00:24:18,690 --> 00:24:25,440
yeah

00:24:20,460 --> 00:24:27,420
about it hope you had a better feel

00:24:25,440 --> 00:24:29,790
about you Jesus I knew there was a lot

00:24:27,420 --> 00:24:32,480
in a short time and only some examples I

00:24:29,790 --> 00:24:35,460
would encourage you to just simply go to

00:24:32,480 --> 00:24:37,260
again to the web page have a look at the

00:24:35,460 --> 00:24:38,880
examples there's tons of courses out

00:24:37,260 --> 00:24:43,140
there as well I can recommend some both

00:24:38,880 --> 00:24:44,640
free and paid ones and play with it and

00:24:43,140 --> 00:24:49,240
feel free to pay me if you have any

00:24:44,640 --> 00:24:53,460
questions along the way yeah thank you

00:24:49,240 --> 00:24:53,460

YouTube URL: https://www.youtube.com/watch?v=aOJEK8jXFio


