Title: Free Code Camp Vienna, DevOps - don't write it down, commit, March 2018
Publication date: 2018-03-03
Playlist: FreeCodeCamp Vienna
Description: 
	Talk by Klaus Ita
What is DevOps really all about? Klaus Ita will give an introductory talk about the field of DevOps.
Captions: 
	00:00:00,179 --> 00:00:04,770
so my introduction I haven't given you

00:00:01,949 --> 00:00:08,340
my introduction today I'm a first time

00:00:04,770 --> 00:00:11,190
actually at free code camp and already

00:00:08,340 --> 00:00:14,160
giving a talk how good is that

00:00:11,190 --> 00:00:16,470
and I'm gonna talk about DevOps it's not

00:00:14,160 --> 00:00:19,050
really coding I want to show much code

00:00:16,470 --> 00:00:20,970
but I want to show you something or talk

00:00:19,050 --> 00:00:25,470
about the culture of DevOps a little bit

00:00:20,970 --> 00:00:28,769
and I see many developers in every day

00:00:25,470 --> 00:00:32,309
and I don't see many companies that get

00:00:28,769 --> 00:00:34,559
DevOps right and it's very a very

00:00:32,309 --> 00:00:38,430
important topic and I think everybody

00:00:34,559 --> 00:00:41,370
should know something about it first

00:00:38,430 --> 00:00:45,030
thank you thanks we accelerate I think

00:00:41,370 --> 00:00:46,500
it's really great because we are

00:00:45,030 --> 00:00:50,910
starting to do more and more meetups

00:00:46,500 --> 00:00:53,190
here in this place and I think it's good

00:00:50,910 --> 00:00:57,620
to have we accelerate here and giving us

00:00:53,190 --> 00:01:01,410
the opportunity to to enjoy this venue

00:00:57,620 --> 00:01:07,830
just a few links I'll probably put the

00:01:01,410 --> 00:01:09,659
slides online and I like to do things

00:01:07,830 --> 00:01:12,869
and references first because otherwise

00:01:09,659 --> 00:01:16,799
nobody will see them anymore in in

00:01:12,869 --> 00:01:19,350
afterwards introduction Who am I I'm a

00:01:16,799 --> 00:01:22,920
software developer for 10 years or not

00:01:19,350 --> 00:01:26,250
really a starter and currently my

00:01:22,920 --> 00:01:28,080
favorite language is golang I do a lot

00:01:26,250 --> 00:01:31,799
of Perl and I do

00:01:28,080 --> 00:01:36,509
typescript mostly because I have to I'm

00:01:31,799 --> 00:01:39,810
not too good at it and I started off as

00:01:36,509 --> 00:01:43,229
a sysadmin some what 15 years ago I

00:01:39,810 --> 00:01:46,229
thought about it yesterday when I wrote

00:01:43,229 --> 00:01:48,680
my slides and was sysadmin at the

00:01:46,229 --> 00:01:52,970
University of Economics in Austria and

00:01:48,680 --> 00:01:56,579
so I had some 20,000 users we had to

00:01:52,970 --> 00:01:59,250
administer and you guess probably there

00:01:56,579 --> 00:02:01,290
wasn't much manual intervention possible

00:01:59,250 --> 00:02:04,590
doing that so we had to do a lot of

00:02:01,290 --> 00:02:08,759
coding so I switched to becoming

00:02:04,590 --> 00:02:13,090
yourself to a developer when I actually

00:02:08,759 --> 00:02:15,010
quit the University and

00:02:13,090 --> 00:02:18,879
I'm quite an expert at causing and

00:02:15,010 --> 00:02:21,000
fixing disasters causing is easy but it

00:02:18,879 --> 00:02:24,760
doesn't happen as much anymore

00:02:21,000 --> 00:02:27,580
and fixing is okay it takes some time

00:02:24,760 --> 00:02:30,060
and experience but I'm pretty relaxed

00:02:27,580 --> 00:02:33,610
with these situations I get dumped into

00:02:30,060 --> 00:02:36,670
my name is Klaus eater forgot to say

00:02:33,610 --> 00:02:40,120
that usually I have a NIC

00:02:36,670 --> 00:02:43,840
somewhat combined with coqui coqui is

00:02:40,120 --> 00:02:47,769
very quickly taking in all the public

00:02:43,840 --> 00:02:50,410
websites so look for derivative of that

00:02:47,769 --> 00:02:54,010
that's my twitter handle it's easy to

00:02:50,410 --> 00:02:56,260
remember and sorry for the layout

00:02:54,010 --> 00:02:58,569
because my slides got messed up when i

00:02:56,260 --> 00:03:00,459
arrived here they were all written in

00:02:58,569 --> 00:03:05,049
markdown and i should have some plugin

00:03:00,459 --> 00:03:07,329
that tells them to HTML converts them to

00:03:05,049 --> 00:03:10,690
HTML but something happened so i had to

00:03:07,329 --> 00:03:13,329
rewrite some macro in my editorial just

00:03:10,690 --> 00:03:15,730
quickly make HTML from my slide so for

00:03:13,329 --> 00:03:19,329
that they are pretty beautiful and I'm a

00:03:15,730 --> 00:03:21,489
total dopant CSS so please just get used

00:03:19,329 --> 00:03:26,920
to those slides and they won't get

00:03:21,489 --> 00:03:31,209
prettier than that some bars words not

00:03:26,920 --> 00:03:33,670
important is some get a feeling if you

00:03:31,209 --> 00:03:37,290
have any questions just ask them ok I

00:03:33,670 --> 00:03:39,430
don't like having all the questions

00:03:37,290 --> 00:03:46,569
afterwards because maybe you don't

00:03:39,430 --> 00:03:46,870
remember and you might have okay okay

00:03:46,569 --> 00:03:50,489
sorry

00:03:46,870 --> 00:03:55,780
no questions hate you and no cases

00:03:50,489 --> 00:03:58,900
DevOps the initial setting how did we

00:03:55,780 --> 00:04:01,750
find that DevOps or how was it incubated

00:03:58,900 --> 00:04:04,150
or whatever there was sis admins and

00:04:01,750 --> 00:04:06,130
there were developers and and there were

00:04:04,150 --> 00:04:08,889
business requirements and sales people

00:04:06,130 --> 00:04:11,829
and each of those silos actually hated

00:04:08,889 --> 00:04:18,150
each other or I think they still do more

00:04:11,829 --> 00:04:21,549
or less but something is happening so

00:04:18,150 --> 00:04:24,190
the two sides that were the most opposed

00:04:21,549 --> 00:04:25,660
sides were the scissored means and the

00:04:24,190 --> 00:04:29,050
developers and

00:04:25,660 --> 00:04:29,680
both so it's easy for me to to tell you

00:04:29,050 --> 00:04:33,220
this

00:04:29,680 --> 00:04:36,970
it gave me hard times quite often sorry

00:04:33,220 --> 00:04:41,650
for the small funds but that's my CSS

00:04:36,970 --> 00:04:43,810
skills okay so the there's a there's a

00:04:41,650 --> 00:04:45,910
conflict in sysadmin and development as

00:04:43,810 --> 00:04:47,560
a developer you always check for the

00:04:45,910 --> 00:04:49,960
latest library and you always want to

00:04:47,560 --> 00:04:52,240
have the latest and greatest tools and

00:04:49,960 --> 00:04:55,840
try this and try it try that some AI or

00:04:52,240 --> 00:04:58,990
whatever and as it says admin you

00:04:55,840 --> 00:05:00,700
usually are being paid for sitting in

00:04:58,990 --> 00:05:02,500
the back room and just keeping

00:05:00,700 --> 00:05:04,120
everything stable and as soon as

00:05:02,500 --> 00:05:06,820
something moves a little bit you just

00:05:04,120 --> 00:05:12,460
bash it down so it doesn't move anymore

00:05:06,820 --> 00:05:17,800
and so those two groups are somewhat not

00:05:12,460 --> 00:05:21,360
in sync and someone someday just said

00:05:17,800 --> 00:05:25,900
well you know we could work together and

00:05:21,360 --> 00:05:30,370
at the time I was in at that university

00:05:25,900 --> 00:05:33,010
I had told you about there was I think

00:05:30,370 --> 00:05:36,210
that there was the seed of DevOps coming

00:05:33,010 --> 00:05:40,600
up that there were configuration engines

00:05:36,210 --> 00:05:43,870
starting to get bigger and bigger and it

00:05:40,600 --> 00:05:45,880
was the very early I think puppet wasn't

00:05:43,870 --> 00:05:48,460
no puppet wood there was no puppet at

00:05:45,880 --> 00:05:51,390
that time but there was cfengine at the

00:05:48,460 --> 00:05:53,650
time and and people started scripting

00:05:51,390 --> 00:05:57,280
infrastructure and and people stopped

00:05:53,650 --> 00:06:00,669
actually doing things manually the bad

00:05:57,280 --> 00:06:02,470
thing is I still see a lot of people

00:06:00,669 --> 00:06:06,310
manually intervening with their

00:06:02,470 --> 00:06:10,000
computers and the what are the goals of

00:06:06,310 --> 00:06:12,900
depa DevOps we just want to keep a

00:06:10,000 --> 00:06:16,000
constant flow through the technology

00:06:12,900 --> 00:06:20,850
value stream so so what does that mean

00:06:16,000 --> 00:06:23,530
it's in the old days you always had

00:06:20,850 --> 00:06:25,720
infrastructure and you had development

00:06:23,530 --> 00:06:29,890
and those two didn't work well together

00:06:25,720 --> 00:06:31,540
and especially in bigger companies there

00:06:29,890 --> 00:06:34,690
was software development and software

00:06:31,540 --> 00:06:37,720
development cycles were months or years

00:06:34,690 --> 00:06:38,740
long and then there was an integration

00:06:37,720 --> 00:06:40,900
phase

00:06:38,740 --> 00:06:44,199
and that handed over the software

00:06:40,900 --> 00:06:46,660
project to the UPS people which are

00:06:44,199 --> 00:06:48,729
system administrators and they tried to

00:06:46,660 --> 00:06:51,610
figure out how to actually get a project

00:06:48,729 --> 00:06:57,310
working and running and stabili running

00:06:51,610 --> 00:07:00,400
and that pushed the launch date of every

00:06:57,310 --> 00:07:03,400
product further and further away and I

00:07:00,400 --> 00:07:05,139
still see that in many startup companies

00:07:03,400 --> 00:07:07,599
now also I mean people are developing

00:07:05,139 --> 00:07:10,090
and developing and then there's release

00:07:07,599 --> 00:07:11,919
day and they find out Oh we'd never

00:07:10,090 --> 00:07:13,960
thought about infrastructure what we

00:07:11,919 --> 00:07:18,639
actually want to run the project but it

00:07:13,960 --> 00:07:22,930
works on my machine I see that quite a

00:07:18,639 --> 00:07:25,659
lot and it's it's a lot of about culture

00:07:22,930 --> 00:07:28,900
to actually put together all the team

00:07:25,659 --> 00:07:31,270
and make everybody participate from from

00:07:28,900 --> 00:07:33,159
the team so it's not only developers or

00:07:31,270 --> 00:07:35,949
C's admins but it's also the marketing

00:07:33,159 --> 00:07:38,169
people it's the icon designers it's the

00:07:35,949 --> 00:07:41,199
I don't know CSS people are those

00:07:38,169 --> 00:07:43,570
developers yeah let's say and it's the

00:07:41,199 --> 00:07:47,259
sales people that mustn't sell things

00:07:43,570 --> 00:07:49,750
that that can't be developed or

00:07:47,259 --> 00:07:54,130
everybody needs to be in a team and this

00:07:49,750 --> 00:07:57,070
is a bit what DevOps is about also the

00:07:54,130 --> 00:08:00,190
thing I explained before they zero day

00:07:57,070 --> 00:08:05,770
one day two day and the product has to

00:08:00,190 --> 00:08:09,870
run all the time and yeah basically work

00:08:05,770 --> 00:08:13,419
together in all of phases of its life

00:08:09,870 --> 00:08:15,849
DevOps is about culture automation lean

00:08:13,419 --> 00:08:21,849
measurement and sharing these are the

00:08:15,849 --> 00:08:28,860
key points of of DevOps let's go through

00:08:21,849 --> 00:08:32,740
them culture is something I see a lot in

00:08:28,860 --> 00:08:37,320
technologies there's that boss and the

00:08:32,740 --> 00:08:40,419
boss shouts at everybody and this is

00:08:37,320 --> 00:08:42,940
this bone I mean this leads to results

00:08:40,419 --> 00:08:45,190
in short-term but people leave and

00:08:42,940 --> 00:08:48,100
people join companies people leave

00:08:45,190 --> 00:08:49,510
managers and it doesn't really lead to a

00:08:48,100 --> 00:08:52,120
good team and

00:08:49,510 --> 00:08:55,360
- good work experience and what we

00:08:52,120 --> 00:08:59,340
really want to impose it get blame free

00:08:55,360 --> 00:09:02,560
learning experiment and experimentation

00:08:59,340 --> 00:09:05,050
framework so we all make mistakes we

00:09:02,560 --> 00:09:08,130
make a lot of mistakes probably but the

00:09:05,050 --> 00:09:10,870
only difference between between a

00:09:08,130 --> 00:09:13,840
well-established developer or a DevOps

00:09:10,870 --> 00:09:16,560
guy or whatever and and the beginner is

00:09:13,840 --> 00:09:18,820
the number of mistakes they have made

00:09:16,560 --> 00:09:25,810
that that's the only difference

00:09:18,820 --> 00:09:28,570
and yeah this means we really we do have

00:09:25,810 --> 00:09:31,720
volatile in environments anything we do

00:09:28,570 --> 00:09:33,430
changes all the time and because we do

00:09:31,720 --> 00:09:35,230
experiment everybody is allowed to

00:09:33,430 --> 00:09:37,960
experiment everybody is allowed to bring

00:09:35,230 --> 00:09:43,240
in new technologies we change everything

00:09:37,960 --> 00:09:46,090
all the time but still we managed to

00:09:43,240 --> 00:09:48,670
reduce risk I'll explain that later how

00:09:46,090 --> 00:09:51,670
we manage to work that out

00:09:48,670 --> 00:09:53,190
we try to have no more silos and which

00:09:51,670 --> 00:09:55,540
is actually fun because we start

00:09:53,190 --> 00:09:58,630
actually talking to people there were

00:09:55,540 --> 00:10:02,100
some people who came here to talk to

00:09:58,630 --> 00:10:04,750
others this is true for every company

00:10:02,100 --> 00:10:07,390
the developers can start talking to

00:10:04,750 --> 00:10:09,810
marketing people and the C's admins can

00:10:07,390 --> 00:10:12,550
start talking to sales people and

00:10:09,810 --> 00:10:16,030
actually this is an interesting thought

00:10:12,550 --> 00:10:19,060
it should be it should be a baseline in

00:10:16,030 --> 00:10:21,510
every company anyway we all shared a

00:10:19,060 --> 00:10:26,560
responsibility for our finished product

00:10:21,510 --> 00:10:29,530
we all earned money that the company

00:10:26,560 --> 00:10:32,170
earns and we all have to bring in money

00:10:29,530 --> 00:10:34,990
and we all important for the company so

00:10:32,170 --> 00:10:37,020
of course we share responsibility and

00:10:34,990 --> 00:10:40,840
it's important that everybody knows that

00:10:37,020 --> 00:10:45,630
everybody is responsible for having the

00:10:40,840 --> 00:10:48,820
product out and autonomous teams is just

00:10:45,630 --> 00:10:51,910
because we share responsibility we are

00:10:48,820 --> 00:10:55,230
able to actually decide things on our we

00:10:51,910 --> 00:10:59,800
don't need to ask the boss all the time

00:10:55,230 --> 00:11:02,840
Automation there's a I think on the

00:10:59,800 --> 00:11:07,520
first slide I had those thank you

00:11:02,840 --> 00:11:10,550
things there's a book it it's a long

00:11:07,520 --> 00:11:13,550
book and it gets a bit boring after a

00:11:10,550 --> 00:11:14,930
while but it's the sre book of by google

00:11:13,550 --> 00:11:18,500
i don't know if you know a site

00:11:14,930 --> 00:11:22,010
reliability engineering and but they

00:11:18,500 --> 00:11:25,220
have amazing chapters that are really

00:11:22,010 --> 00:11:29,150
good and one of them is about automation

00:11:25,220 --> 00:11:32,630
and toil especially and I like the term

00:11:29,150 --> 00:11:36,589
it's it was created in Google I think

00:11:32,630 --> 00:11:39,680
and it means that anything you do and

00:11:36,589 --> 00:11:43,339
anything you do more than ones that can

00:11:39,680 --> 00:11:46,750
be automated must be automated and this

00:11:43,339 --> 00:11:52,790
is one of the really basic thoughts in

00:11:46,750 --> 00:11:55,400
DevOps so whatever can be triggered by

00:11:52,790 --> 00:11:57,920
whatever metrics needs to be

00:11:55,400 --> 00:12:00,529
automatically you automatically solved

00:11:57,920 --> 00:12:03,020
because otherwise what you might see you

00:12:00,529 --> 00:12:05,630
have many many busy people that do the

00:12:03,020 --> 00:12:08,650
same thing over and over and again and

00:12:05,630 --> 00:12:11,810
this is the worst that can happen okay

00:12:08,650 --> 00:12:16,040
so anything that's manual repetitive and

00:12:11,810 --> 00:12:19,730
automatable tactically important for our

00:12:16,040 --> 00:12:22,280
company has no value at all that's very

00:12:19,730 --> 00:12:25,280
important you know the webserver that

00:12:22,280 --> 00:12:28,580
needs to be restarted because whatever

00:12:25,280 --> 00:12:31,670
we have bad code and we have mem leaks

00:12:28,580 --> 00:12:34,550
or whatever and the sysadmin goes to and

00:12:31,670 --> 00:12:38,060
look logs into that web server SSH is in

00:12:34,550 --> 00:12:41,390
there and and just types in nginx

00:12:38,060 --> 00:12:44,510
restart that's a waste of time you can

00:12:41,390 --> 00:12:50,270
automate that you can just watch memory

00:12:44,510 --> 00:12:52,370
and just kill that thingy and and it'll

00:12:50,270 --> 00:12:54,350
have the same effect it's not a solution

00:12:52,370 --> 00:12:57,350
it's not a long-term solution but it it

00:12:54,350 --> 00:12:59,839
will take away work from the sysadmin

00:12:57,350 --> 00:13:02,630
who can then develop a better solution

00:12:59,839 --> 00:13:06,080
and probably reduce memories okay

00:13:02,630 --> 00:13:08,870
and doing this

00:13:06,080 --> 00:13:12,260
removing toil all the time is a huge

00:13:08,870 --> 00:13:15,290
resource saver and and imagine I mean at

00:13:12,260 --> 00:13:16,400
Google did the sree teams they are not

00:13:15,290 --> 00:13:19,910
allowed they're not

00:13:16,400 --> 00:13:23,840
even allowed to do more than 50% toil in

00:13:19,910 --> 00:13:25,460
their their work time which is I mean

00:13:23,840 --> 00:13:27,190
think of your scissored means what they

00:13:25,460 --> 00:13:31,810
do all the time

00:13:27,190 --> 00:13:35,630
least of them are actually living that

00:13:31,810 --> 00:13:38,720
well there is that term lean eliminate

00:13:35,630 --> 00:13:40,970
waste amplify learning decide as late as

00:13:38,720 --> 00:13:47,390
possible deliver as fast as possible

00:13:40,970 --> 00:13:50,330
that's all D they I mean I hope you you

00:13:47,390 --> 00:13:52,790
live by those standards no I'm empower

00:13:50,330 --> 00:13:55,250
the team build integrity and see the

00:13:52,790 --> 00:13:59,450
whole see the old is I think the only

00:13:55,250 --> 00:14:03,170
thing I really have to explain more even

00:13:59,450 --> 00:14:05,990
as developer or sysadmin or whatever

00:14:03,170 --> 00:14:09,080
person they were in whatever topic you

00:14:05,990 --> 00:14:12,110
are in just see what the goal is and and

00:14:09,080 --> 00:14:14,690
always know what is my company doing and

00:14:12,110 --> 00:14:16,640
what are we actually trying to get out

00:14:14,690 --> 00:14:19,190
to our customer it's very important to

00:14:16,640 --> 00:14:19,610
to see that all the time is what I am

00:14:19,190 --> 00:14:23,180
doing

00:14:19,610 --> 00:14:26,360
currently important for my customers

00:14:23,180 --> 00:14:30,980
does it actually give value to the

00:14:26,360 --> 00:14:34,670
customer instrumentation anything

00:14:30,980 --> 00:14:36,950
and this gets forgotten but but most I

00:14:34,670 --> 00:14:41,300
don't know how many startups are here I

00:14:36,950 --> 00:14:44,150
just saw some everybody who's making new

00:14:41,300 --> 00:14:46,790
products and many people have started

00:14:44,150 --> 00:14:49,220
new product and they forget about

00:14:46,790 --> 00:14:53,030
measurements and instrumentation and

00:14:49,220 --> 00:14:57,160
this should be one of the core built-ins

00:14:53,030 --> 00:15:00,080
in every product that you create

00:14:57,160 --> 00:15:02,480
if you don't instrument everything you

00:15:00,080 --> 00:15:06,710
do and if you don't have graphs for

00:15:02,480 --> 00:15:09,950
every whatever information you you

00:15:06,710 --> 00:15:12,830
generate in your software you will feel

00:15:09,950 --> 00:15:14,840
a DevOps because if you can't measure

00:15:12,830 --> 00:15:18,200
things and if you can't analyze things

00:15:14,840 --> 00:15:20,870
you can't react and of course a human

00:15:18,200 --> 00:15:23,330
being can react and I have a very good

00:15:20,870 --> 00:15:27,260
feeling about you I don't know I think

00:15:23,330 --> 00:15:29,780
the system is in a bad state and I have

00:15:27,260 --> 00:15:30,170
to do something but if you don't have

00:15:29,780 --> 00:15:31,880
number

00:15:30,170 --> 00:15:35,740
to prove and if you don't have numbers

00:15:31,880 --> 00:15:39,139
to analyze you can automate these things

00:15:35,740 --> 00:15:42,589
here you see a graph from this is

00:15:39,139 --> 00:15:46,670
something actually a marketing guy he

00:15:42,589 --> 00:15:48,500
created these graphs we are generating

00:15:46,670 --> 00:15:50,810
all the the information and the

00:15:48,500 --> 00:15:54,380
marketing guy just clicks together it's

00:15:50,810 --> 00:15:56,690
some health whatever tool and and they

00:15:54,380 --> 00:15:59,060
can just see okay how do the numbers

00:15:56,690 --> 00:16:00,889
perform did we I don't know we had some

00:15:59,060 --> 00:16:03,589
release and numbers went down and then

00:16:00,889 --> 00:16:06,019
other releases and we try to to get to

00:16:03,589 --> 00:16:09,410
release the numbers up again and just

00:16:06,019 --> 00:16:11,500
just to show you that anything we do and

00:16:09,410 --> 00:16:14,329
whatever whatever this is

00:16:11,500 --> 00:16:17,300
registration verified verification

00:16:14,329 --> 00:16:20,990
profiles setup so so people that try to

00:16:17,300 --> 00:16:25,730
register verify their profit profile and

00:16:20,990 --> 00:16:29,510
then or change data in the their profile

00:16:25,730 --> 00:16:35,660
which is important in this project which

00:16:29,510 --> 00:16:39,290
is measure what they do so we have the I

00:16:35,660 --> 00:16:42,560
call it the DevOps bretzel and if you go

00:16:39,290 --> 00:16:45,440
to DevOps meetups nowadays you see this

00:16:42,560 --> 00:16:48,079
brittle all the time and I just wanted

00:16:45,440 --> 00:16:50,540
to show it to you it's it's a

00:16:48,079 --> 00:16:53,740
never-ending cycle of okay you release a

00:16:50,540 --> 00:16:57,230
product you configured you monitor

00:16:53,740 --> 00:17:00,709
monitoring okay you plan for the next

00:16:57,230 --> 00:17:03,470
release you build you create you check

00:17:00,709 --> 00:17:05,600
the numbers again from monitoring you

00:17:03,470 --> 00:17:07,790
package it release it and so on and so

00:17:05,600 --> 00:17:12,370
on you know and that cycle goes forever

00:17:07,790 --> 00:17:18,770
and now the testimony I am a developer

00:17:12,370 --> 00:17:24,530
okay DevOps is something that should

00:17:18,770 --> 00:17:27,140
actually impact the whole company and I

00:17:24,530 --> 00:17:28,910
don't know much about how marketing

00:17:27,140 --> 00:17:31,160
people feel about it I mean I know that

00:17:28,910 --> 00:17:34,520
they work in my team together with me

00:17:31,160 --> 00:17:37,610
and and we have a good relationship but

00:17:34,520 --> 00:17:41,299
I don't know what they feel about the

00:17:37,610 --> 00:17:43,880
whole DevOps movement so what I can only

00:17:41,299 --> 00:17:46,880
talk about is how software

00:17:43,880 --> 00:17:49,730
it goes software operations and how we

00:17:46,880 --> 00:17:52,430
execute it okay I don't really care

00:17:49,730 --> 00:17:57,440
about the finance department there's so

00:17:52,430 --> 00:18:01,670
much okay how do we live it we use git

00:17:57,440 --> 00:18:04,280
or whatever revision control system

00:18:01,670 --> 00:18:07,250
you're using do whatever you want but I

00:18:04,280 --> 00:18:10,460
mean I think everybody uses get if

00:18:07,250 --> 00:18:13,250
you're not and I've seen that recently

00:18:10,460 --> 00:18:18,170
in the last two years actually companies

00:18:13,250 --> 00:18:20,090
not using it start using it use some

00:18:18,170 --> 00:18:23,270
integration service everybody knows what

00:18:20,090 --> 00:18:25,310
an integration service is it's an

00:18:23,270 --> 00:18:27,230
automated tool that takes your product

00:18:25,310 --> 00:18:30,500
and puts it into production

00:18:27,230 --> 00:18:33,860
it must be automated don't have someone

00:18:30,500 --> 00:18:36,620
say okay should we release today maybe

00:18:33,860 --> 00:18:39,800
you talked about releasing today but it

00:18:36,620 --> 00:18:44,150
must be automated the whole integration

00:18:39,800 --> 00:18:47,300
and releasing process must be such a non

00:18:44,150 --> 00:18:53,830
op that you do it all the time you did

00:18:47,300 --> 00:18:57,170
all the time and use build tools so

00:18:53,830 --> 00:18:59,330
however you try to make your final

00:18:57,170 --> 00:19:01,280
product I don't know if you do web

00:18:59,330 --> 00:19:04,700
design you probably have some grunt or

00:19:01,280 --> 00:19:08,930
web pack or whatever running automate

00:19:04,700 --> 00:19:12,050
that you can have it running but if it

00:19:08,930 --> 00:19:16,940
needs any parameters script that at

00:19:12,050 --> 00:19:19,610
least we have build tools built into the

00:19:16,940 --> 00:19:26,030
gate chain so if I get pushed and the

00:19:19,610 --> 00:19:28,340
product gets built and released I would

00:19:26,030 --> 00:19:33,040
recommend I mean this is not an official

00:19:28,340 --> 00:19:35,300
statement I'd recommend you use a cloud

00:19:33,040 --> 00:19:37,940
it doesn't matter if you have your own

00:19:35,300 --> 00:19:40,310
cloud if you have I don't know a service

00:19:37,940 --> 00:19:42,410
center and 2000 servers and just run

00:19:40,310 --> 00:19:45,980
your cloud find that that's fine but the

00:19:42,410 --> 00:19:48,080
concept of cloud must be implemented so

00:19:45,980 --> 00:19:50,330
so probably if you're in smaller

00:19:48,080 --> 00:19:54,050
companies use I don't know a double

00:19:50,330 --> 00:19:56,370
years Google something like that use

00:19:54,050 --> 00:19:59,100
provisioning tools for everything

00:19:56,370 --> 00:20:00,720
you don't start naming service or

00:19:59,100 --> 00:20:07,590
anything like that

00:20:00,720 --> 00:20:11,880
the a a I'll come to that later and and

00:20:07,590 --> 00:20:18,570
see your hardware as software okay

00:20:11,880 --> 00:20:20,840
so don't don't name your hardware don't

00:20:18,570 --> 00:20:25,910
don't know your hardware any more

00:20:20,840 --> 00:20:30,210
abstracted make it software okay

00:20:25,910 --> 00:20:32,670
continuous integration there's a great

00:20:30,210 --> 00:20:36,390
article by Martin Fowler about it Martin

00:20:32,670 --> 00:20:40,710
Fowler you all know Martin Fowler he's I

00:20:36,390 --> 00:20:43,550
don't know and I can in ite I take he

00:20:40,710 --> 00:20:49,590
writes articles do all of them were like

00:20:43,550 --> 00:20:53,750
15 pages long and quite quite a read but

00:20:49,590 --> 00:20:58,500
always well well thought of and

00:20:53,750 --> 00:21:01,620
well-designed and he look him up Martin

00:20:58,500 --> 00:21:04,200
Fowler and read all his articles it'll

00:21:01,620 --> 00:21:09,620
take you a month or so but it's worth it

00:21:04,200 --> 00:21:12,900
and he says continuous integration

00:21:09,620 --> 00:21:15,090
what's the base point checkout main line

00:21:12,900 --> 00:21:17,610
main line is the master branch yeah

00:21:15,090 --> 00:21:20,400
develop a quick feature and I mean we

00:21:17,610 --> 00:21:24,000
even have tools for if we have an issue

00:21:20,400 --> 00:21:26,760
or ticket that we want to work on that

00:21:24,000 --> 00:21:28,800
actually creates a branch named like

00:21:26,760 --> 00:21:32,460
that ticket so everybody who works on

00:21:28,800 --> 00:21:34,830
that same issue creates the same branch

00:21:32,460 --> 00:21:38,460
name so we can share and and interact

00:21:34,830 --> 00:21:42,240
with that build test and merge fully

00:21:38,460 --> 00:21:46,080
automated very often and always know

00:21:42,240 --> 00:21:47,760
your code is running and failing or

00:21:46,080 --> 00:21:50,340
broken builds don't make it to main line

00:21:47,760 --> 00:21:52,070
so we have all that automated except for

00:21:50,340 --> 00:21:55,679
the coding part we need to do that

00:21:52,070 --> 00:21:59,160
unfortunately and we push into the repo

00:21:55,679 --> 00:22:02,670
everything gets built I don't need to

00:21:59,160 --> 00:22:05,490
type to build and merge and whatever it

00:22:02,670 --> 00:22:09,120
all gets done by tooling and after a

00:22:05,490 --> 00:22:11,760
minute I get an email if the build fails

00:22:09,120 --> 00:22:16,550
other or pop up on my screen actually

00:22:11,760 --> 00:22:21,600
and otherwise my changes get merged into

00:22:16,550 --> 00:22:27,960
mainline and are in this staging staging

00:22:21,600 --> 00:22:28,890
environment continuous delivery deliver

00:22:27,960 --> 00:22:31,440
all the time

00:22:28,890 --> 00:22:34,500
so what I've done before I coded I

00:22:31,440 --> 00:22:38,790
merged it into mainline and now it's

00:22:34,500 --> 00:22:42,150
about delivery and every successful

00:22:38,790 --> 00:22:44,220
merge you see get into that staging

00:22:42,150 --> 00:22:47,160
environment so that we have a web page

00:22:44,220 --> 00:22:49,800
that has a total clone of everything we

00:22:47,160 --> 00:22:52,140
do we can have multiple clones also but

00:22:49,800 --> 00:22:57,480
but staging is the most important

00:22:52,140 --> 00:23:03,360
preview it runs against a real clone of

00:22:57,480 --> 00:23:06,060
the actual data and we have buttons for

00:23:03,360 --> 00:23:08,430
for creative review promote to

00:23:06,060 --> 00:23:11,280
production or rollback so there's no

00:23:08,430 --> 00:23:14,700
manual intervention with anything we do

00:23:11,280 --> 00:23:18,150
actually so what and these buttons can

00:23:14,700 --> 00:23:19,620
be pressed by a marketing guy and this

00:23:18,150 --> 00:23:22,080
is very important that it's not always

00:23:19,620 --> 00:23:25,050
the developers that decide okay we can

00:23:22,080 --> 00:23:27,060
go online no if all the tests pass and

00:23:25,050 --> 00:23:28,980
if the product looks fine to the

00:23:27,060 --> 00:23:30,840
marketing guys they are the ones that

00:23:28,980 --> 00:23:32,880
wanted to feature of course they press

00:23:30,840 --> 00:23:35,640
the button to to actually release that

00:23:32,880 --> 00:23:41,210
feature if they don't press it I press

00:23:35,640 --> 00:23:44,910
it yeah anybody can and so this is

00:23:41,210 --> 00:23:48,660
standard deployments of each of those

00:23:44,910 --> 00:23:52,290
what's that vertical lines are a

00:23:48,660 --> 00:23:55,020
deployment and that standard first that

00:23:52,290 --> 00:23:57,600
we actually deploy all the time and then

00:23:55,020 --> 00:24:00,450
you watch I don't know something happens

00:23:57,600 --> 00:24:01,830
or doesn't happen and and so we always

00:24:00,450 --> 00:24:05,100
mark everything that's the

00:24:01,830 --> 00:24:06,690
instrumentation part I talked about you

00:24:05,100 --> 00:24:09,360
need to know okay we had this code

00:24:06,690 --> 00:24:12,690
running and it had this impact on our

00:24:09,360 --> 00:24:14,280
customers so maybe we need to change

00:24:12,690 --> 00:24:18,840
something or maybe that was a good

00:24:14,280 --> 00:24:22,290
change and let's party by deploying so

00:24:18,840 --> 00:24:25,470
often we keep things unstable

00:24:22,290 --> 00:24:27,930
but we reduce risk if we deploy only

00:24:25,470 --> 00:24:30,360
once if month or only once a year or a

00:24:27,930 --> 00:24:33,270
half year then the deployment gets

00:24:30,360 --> 00:24:34,290
really tough and now we just deploy and

00:24:33,270 --> 00:24:37,080
everything is fine

00:24:34,290 --> 00:24:40,020
unless you do disaster deployment like I

00:24:37,080 --> 00:24:42,300
did last week where I blacked out for

00:24:40,020 --> 00:24:45,810
half an hour I think the whole product

00:24:42,300 --> 00:24:50,550
but that was very special didn't happen

00:24:45,810 --> 00:24:52,220
for years actually because usually we

00:24:50,550 --> 00:24:54,870
have that but this is also the

00:24:52,220 --> 00:24:59,040
experience nobody shouted at me when

00:24:54,870 --> 00:25:01,320
that happened we just found out ok what

00:24:59,040 --> 00:25:04,140
was the problem and how do we fix it and

00:25:01,320 --> 00:25:06,660
how do we prevent it from happening the

00:25:04,140 --> 00:25:08,190
next time it was my mistake I did

00:25:06,660 --> 00:25:10,500
something wrong

00:25:08,190 --> 00:25:13,920
but how can we prevent it in the future

00:25:10,500 --> 00:25:17,250
and so what we want is that we actually

00:25:13,920 --> 00:25:19,860
have the cue and it's running the deep I

00:25:17,250 --> 00:25:21,810
playing is running and it says ok sorry

00:25:19,860 --> 00:25:23,070
I can't continue something something

00:25:21,810 --> 00:25:28,740
happened I don't know what happened here

00:25:23,070 --> 00:25:31,770
but whatever and we are safe we have way

00:25:28,740 --> 00:25:33,930
too many features to test them all we've

00:25:31,770 --> 00:25:36,300
been working on this product I didn't I

00:25:33,930 --> 00:25:39,830
think for nine years or something and

00:25:36,300 --> 00:25:42,810
and it's just too many features and

00:25:39,830 --> 00:25:44,670
sometimes we have long workflows so we

00:25:42,810 --> 00:25:47,010
gather information and we export it to

00:25:44,670 --> 00:25:49,440
different clients and and and we improve

00:25:47,010 --> 00:25:52,320
the data we recycle it in and there's so

00:25:49,440 --> 00:25:54,870
many workflows they take a while and and

00:25:52,320 --> 00:25:56,610
they need to take a while and and we

00:25:54,870 --> 00:26:01,380
have different formats

00:25:56,610 --> 00:26:03,210
it just can't test everything and but we

00:26:01,380 --> 00:26:06,570
do have a large for every core business

00:26:03,210 --> 00:26:09,990
case so whatever happens we know so we

00:26:06,570 --> 00:26:12,930
see we act we know ok and and if we if

00:26:09,990 --> 00:26:15,090
we see we have a problem and we don't

00:26:12,930 --> 00:26:17,910
have measurements yet we act so we

00:26:15,090 --> 00:26:20,850
introduce measurements instrumentation

00:26:17,910 --> 00:26:23,220
for that problem and in the future we

00:26:20,850 --> 00:26:26,130
have something automated for it and we

00:26:23,220 --> 00:26:31,500
have many alerts that shouldn't trigger

00:26:26,130 --> 00:26:33,390
ok and we always know exactly when which

00:26:31,500 --> 00:26:35,610
version of code was online so we have

00:26:33,390 --> 00:26:36,240
our stats and we can always say ok at

00:26:35,610 --> 00:26:39,480
that point

00:26:36,240 --> 00:26:41,760
in time we had this revision running

00:26:39,480 --> 00:26:43,590
very important I see that a lot that

00:26:41,760 --> 00:26:46,260
people don't know they just go to

00:26:43,590 --> 00:26:48,120
service to get pull so that they think

00:26:46,260 --> 00:26:51,330
they're advanced because they use get

00:26:48,120 --> 00:26:56,940
they do get pull server restart have no

00:26:51,330 --> 00:26:58,500
idea what happens and yeah we have much

00:26:56,940 --> 00:27:00,570
better things to do than testing our

00:26:58,500 --> 00:27:03,780
code manually so I don't want to browse

00:27:00,570 --> 00:27:05,490
our website all the time and and then we

00:27:03,780 --> 00:27:08,160
have products that I don't even want to

00:27:05,490 --> 00:27:10,170
touch too much because I don't know I

00:27:08,160 --> 00:27:12,990
think I just don't like them and it's

00:27:10,170 --> 00:27:14,850
good to have that automated and we need

00:27:12,990 --> 00:27:16,290
to detect the errors as fast as possible

00:27:14,850 --> 00:27:18,540
and stopped him from passing along the

00:27:16,290 --> 00:27:22,140
value stream so even when I blacked out

00:27:18,540 --> 00:27:25,140
last week I knew it within seconds and

00:27:22,140 --> 00:27:29,780
that's very important and you know so

00:27:25,140 --> 00:27:34,650
you can act quickly and and fix things

00:27:29,780 --> 00:27:37,340
this is still markdown syntax be very

00:27:34,650 --> 00:27:39,960
disciplined so if you want to do that

00:27:37,340 --> 00:27:44,550
you and the whole team must be very

00:27:39,960 --> 00:27:48,300
disciplined we we do we create strict 12

00:27:44,550 --> 00:27:50,760
factor apps we don't ever do quick fixes

00:27:48,300 --> 00:27:53,520
even if I know ok I could just log in

00:27:50,760 --> 00:27:56,010
and change that line in nginx and and

00:27:53,520 --> 00:27:58,830
fix some I don't know proxy path or

00:27:56,010 --> 00:27:59,809
something and it would work we don't do

00:27:58,830 --> 00:28:04,440
it

00:27:59,809 --> 00:28:06,900
we create a fix we patch we commit we

00:28:04,440 --> 00:28:14,190
release and that always has to be this

00:28:06,900 --> 00:28:18,750
way and if a broken commit exists in in

00:28:14,190 --> 00:28:21,330
in your tool chain that's the most

00:28:18,750 --> 00:28:24,990
important part to fix because as soon as

00:28:21,330 --> 00:28:27,120
you let your tools down and you start to

00:28:24,990 --> 00:28:29,420
work around the tools and manually

00:28:27,120 --> 00:28:34,980
install things the whole system breaks

00:28:29,420 --> 00:28:37,590
yeah always use tools and if you can do

00:28:34,980 --> 00:28:39,870
it you can script it but that's my

00:28:37,590 --> 00:28:42,420
philosophy whatever you do it is

00:28:39,870 --> 00:28:44,429
scriptable it might be hard it might be

00:28:42,420 --> 00:28:49,770
hard to first-time it gets easier and

00:28:44,429 --> 00:28:52,080
easier ok and very important is

00:28:49,770 --> 00:28:54,950
learn all the time I read books all the

00:28:52,080 --> 00:28:58,110
time I read articles all the time

00:28:54,950 --> 00:29:02,010
there's not a single day I don't learn

00:28:58,110 --> 00:29:05,820
something and I could say that for my

00:29:02,010 --> 00:29:09,630
whole team nobody nobody ever lays these

00:29:05,820 --> 00:29:12,810
down and says okay I know enough just

00:29:09,630 --> 00:29:14,160
doesn't happen and communicate a lot I

00:29:12,810 --> 00:29:17,130
mean it's easy for us

00:29:14,160 --> 00:29:24,240
we're with less than the two pizza team

00:29:17,130 --> 00:29:27,210
I eat one pizza and but it's easy for us

00:29:24,240 --> 00:29:29,700
to communicate otherwise we're also not

00:29:27,210 --> 00:29:31,650
in danger to have desires because we are

00:29:29,700 --> 00:29:35,780
very close together we're still in one

00:29:31,650 --> 00:29:39,150
office which is in one floor so it's not

00:29:35,780 --> 00:29:41,820
not a big I don't know like unico

00:29:39,150 --> 00:29:44,220
whatever over there we have huge

00:29:41,820 --> 00:29:49,020
buildings and it's hard to communicate

00:29:44,220 --> 00:29:51,330
so for us really communication is easy I

00:29:49,020 --> 00:29:55,230
want to talk about failures things that

00:29:51,330 --> 00:29:57,770
did not work I've worked at multiple

00:29:55,230 --> 00:30:01,620
companies with multiple companies I've

00:29:57,770 --> 00:30:05,190
seen things fail I failed I failed with

00:30:01,620 --> 00:30:08,100
my team I saw teams fail after investing

00:30:05,190 --> 00:30:09,990
hundreds of thousands of Euro into dev

00:30:08,100 --> 00:30:13,020
ops what doesn't work

00:30:09,990 --> 00:30:15,230
being half committed doesn't work okay

00:30:13,020 --> 00:30:21,390
either you do it or you don't do it

00:30:15,230 --> 00:30:23,730
halfway costs a lot of money ansible

00:30:21,390 --> 00:30:25,260
or scrip deployments on pet servers

00:30:23,730 --> 00:30:28,350
everybody knows what the pet server is

00:30:25,260 --> 00:30:33,030
it's one way you know the host name it's

00:30:28,350 --> 00:30:38,010
a server you like and never have a

00:30:33,030 --> 00:30:40,680
strawberry you like okay Vicki playbooks

00:30:38,010 --> 00:30:42,930
four deployments and upgrades I see that

00:30:40,680 --> 00:30:44,160
a lot people think there's so smart

00:30:42,930 --> 00:30:46,830
because they have everything written

00:30:44,160 --> 00:30:48,600
down in Vicki and they copy and paste

00:30:46,830 --> 00:30:50,520
every line and then create a new project

00:30:48,600 --> 00:30:53,670
how we have got a new custom and

00:30:50,520 --> 00:30:54,150
creating new customer takes quarter of

00:30:53,670 --> 00:30:55,830
an hour

00:30:54,150 --> 00:30:58,500
I don't know that three hours I don't

00:30:55,830 --> 00:31:01,920
know copy-paste all the lines from Vicki

00:30:58,500 --> 00:31:03,450
I mean just script that or make make it

00:31:01,920 --> 00:31:07,769
micro service that create

00:31:03,450 --> 00:31:09,840
new customer strongly wired Services

00:31:07,769 --> 00:31:10,169
doesn't know it doesn't never work I

00:31:09,840 --> 00:31:14,610
mean

00:31:10,169 --> 00:31:17,970
we've fully migrated to my micro service

00:31:14,610 --> 00:31:21,659
environments and initially the first

00:31:17,970 --> 00:31:23,760
migration started with service a knows

00:31:21,659 --> 00:31:26,190
exactly about service B and we can talk

00:31:23,760 --> 00:31:31,529
to each other know it's like pet service

00:31:26,190 --> 00:31:36,360
it's just pet software what didn't work

00:31:31,529 --> 00:31:38,610
using KVM then or VMware in in our

00:31:36,360 --> 00:31:40,320
deployments so for the software we were

00:31:38,610 --> 00:31:42,840
trying to deploy it

00:31:40,320 --> 00:31:45,899
those virtualization technologies work

00:31:42,840 --> 00:31:47,820
very well to abstract hardware but they

00:31:45,899 --> 00:31:54,450
don't work well to abstract

00:31:47,820 --> 00:31:58,070
software for infrastructure yes but not

00:31:54,450 --> 00:32:02,279
for the deployed product itself

00:31:58,070 --> 00:32:07,649
delegating core services sorry to say

00:32:02,279 --> 00:32:10,500
whoever outsourcing companies here the I

00:32:07,649 --> 00:32:13,169
don't know DNA is hosting all these core

00:32:10,500 --> 00:32:15,950
things that are needed for your product

00:32:13,169 --> 00:32:18,480
you must do all that you know

00:32:15,950 --> 00:32:21,510
outsourcing software development didn't

00:32:18,480 --> 00:32:23,730
work for us nobody can outsource a

00:32:21,510 --> 00:32:27,120
philosophy and it's the main thing you

00:32:23,730 --> 00:32:29,669
do if you if you do software and every

00:32:27,120 --> 00:32:33,899
company does software nowadays and every

00:32:29,669 --> 00:32:36,240
day company mainly does IT nowadays

00:32:33,899 --> 00:32:39,210
different aspects of IT but everybody

00:32:36,240 --> 00:32:43,880
needs IT you can't outsource it

00:32:39,210 --> 00:32:43,880
outsourcing says admins very bad idea

00:32:44,389 --> 00:32:49,320
taking responsibility away from people

00:32:47,399 --> 00:32:51,960
we tried that with people who didn't

00:32:49,320 --> 00:32:55,529
want to dev up and who didn't want to

00:32:51,960 --> 00:32:57,480
work in that strategy so we said ok you

00:32:55,529 --> 00:33:00,029
just fix that little issue and then you

00:32:57,480 --> 00:33:04,409
commit it and we cover for the rest

00:33:00,029 --> 00:33:08,519
doesn't work you unfortunately I have to

00:33:04,409 --> 00:33:12,600
get rid of those people multiple git

00:33:08,519 --> 00:33:15,399
repositories didn't work for us we have

00:33:12,600 --> 00:33:21,839
a lot of I don't know that

00:33:15,399 --> 00:33:27,129
that company is seven 700 makes of

00:33:21,839 --> 00:33:29,710
source code and we have it all in in one

00:33:27,129 --> 00:33:31,809
repo and it's fine with Kate nobody

00:33:29,710 --> 00:33:34,450
cares and if you have multiple

00:33:31,809 --> 00:33:36,489
repositories you have to work with get

00:33:34,450 --> 00:33:42,009
sub modules and stuff doesn't work so

00:33:36,489 --> 00:33:45,129
well just use one mono repo and we do

00:33:42,009 --> 00:33:51,159
that everything you do must always be

00:33:45,129 --> 00:33:53,320
code and all truth lies in the repo so

00:33:51,159 --> 00:33:56,019
if I die today

00:33:53,320 --> 00:34:01,119
doesn't really matter because I mean I

00:33:56,019 --> 00:34:05,049
wouldn't care and and otherwise anything

00:34:01,119 --> 00:34:10,659
I've done even my talk which I just

00:34:05,049 --> 00:34:12,940
rewrote isn't get anything not committed

00:34:10,659 --> 00:34:16,750
has no value at all because it can just

00:34:12,940 --> 00:34:21,129
be gone or broken or I don't know you

00:34:16,750 --> 00:34:24,460
can't find it anymore especially in case

00:34:21,129 --> 00:34:26,549
you run into a bus and or you get hacked

00:34:24,460 --> 00:34:30,970
because we've got that Hecate server I

00:34:26,549 --> 00:34:33,099
want to see or you want to change your

00:34:30,970 --> 00:34:34,779
infrastructure which is the most

00:34:33,099 --> 00:34:37,329
important point I mean that happens

00:34:34,779 --> 00:34:39,099
frequently or frequently every few years

00:34:37,329 --> 00:34:42,609
you want to switch from one provider to

00:34:39,099 --> 00:34:46,440
another one if you don't have domain or

00:34:42,609 --> 00:34:49,389
anything actually everything script

00:34:46,440 --> 00:34:51,359
scripted you won't be able to make that

00:34:49,389 --> 00:34:55,179
move if you have to manually set up

00:34:51,359 --> 00:34:58,900
infrastructure won't work and thanks

00:34:55,179 --> 00:35:02,579
very much questions

00:34:58,900 --> 00:35:02,579

YouTube URL: https://www.youtube.com/watch?v=onFXKiuNpec


