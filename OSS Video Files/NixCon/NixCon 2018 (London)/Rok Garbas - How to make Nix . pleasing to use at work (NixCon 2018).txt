Title: Rok Garbas - How to make Nix . pleasing to use at work (NixCon 2018)
Publication date: 2018-10-27
Playlist: NixCon 2018 (London)
Description: 
	At Release Engineering within Mozilla, we develop and support Firefox release pipelines that help Firefox developers test their patches and Release Management plan and execute Firefox releases. Release Engineering manage a number of services where each one aids in achieving these pipelines. e.g. kicking off and tracking a new release, analyzing the source code, and providing external dependencies for building and testing. Currently we use Nix to manage deployment and development of these services.. For this purpose, we wrote a small wrapper around Nix, to make interaction with Nix easier, and help with on-boarding. In this talk, I would like to share my experience of Nix adoption at Mozilla, especially within the Release Engineering / Management team. How we overcome some shortcoming of Nix-the-tool and what is still waiting for us to improve. What worked well and where Nix failed us. The main goal of this talk is to help others who are looking to introduce Nix at work, to know how to set expectations and what an such effort looks like. --- Bio: Rok is a Release Engineer at Mozilla, in Berlin. He is part of the Release Engineering team which helps ship Firefox and other Mozilla products. He is the author of pypi2nix tool, which tries to package python packages in Nix. In his free time â€¦ he hasn't had free time since his son was born.
Captions: 
	00:00:00,530 --> 00:00:07,049
all right on with the show I'm really

00:00:03,810 --> 00:00:12,570
happy to I'm really happy to announce

00:00:07,049 --> 00:00:15,389
our next speaker Rock who is working at

00:00:12,570 --> 00:00:16,949
Mozilla and I'm especially happy because

00:00:15,389 --> 00:00:20,520
Rock actually happens to be the person

00:00:16,949 --> 00:00:22,350
that sort of gave me a kick start to mix

00:00:20,520 --> 00:00:23,430
quite some years ago when he was he

00:00:22,350 --> 00:00:26,580
doesn't even remember when he was

00:00:23,430 --> 00:00:29,820
running a hackathon in Berlin so that's

00:00:26,580 --> 00:00:31,560
pretty cool but today he's of course not

00:00:29,820 --> 00:00:33,829
here to talk about that but he is here

00:00:31,560 --> 00:00:37,440
to talk about his experiences

00:00:33,829 --> 00:00:40,040
introducing Nix at Mozilla and

00:00:37,440 --> 00:00:42,840
especially things that we should

00:00:40,040 --> 00:00:46,140
consider to make the experience of using

00:00:42,840 --> 00:00:48,360
and getting into Nix better so give him

00:00:46,140 --> 00:00:55,040
a small round of applause rock

00:00:48,360 --> 00:01:01,710
[Applause]

00:00:55,040 --> 00:01:06,720
November 9 2004 who can give me a guess

00:01:01,710 --> 00:01:11,420
what this date stands for I am the hint

00:01:06,720 --> 00:01:11,420
I was not born at that time

00:01:17,630 --> 00:01:26,550
exactly so firefox 1.0 what this tells

00:01:22,530 --> 00:01:29,580
us right so Firefox codebase is old I

00:01:26,550 --> 00:01:32,700
mean it gets updated it gets modernized

00:01:29,580 --> 00:01:35,250
but there are traits of old architecture

00:01:32,700 --> 00:01:38,510
in design and so goes with all the

00:01:35,250 --> 00:01:41,910
relief services release practices and

00:01:38,510 --> 00:01:46,320
release tools that come with it so there

00:01:41,910 --> 00:01:49,860
there is a bit of you have to listen to

00:01:46,320 --> 00:01:53,540
the elders when you come at the position

00:01:49,860 --> 00:01:53,540
I am and learn from them

00:01:54,320 --> 00:02:03,380
6,300,000 and a bit more it's a number

00:01:58,530 --> 00:02:08,179
of tasks which we from our Firefox CI

00:02:03,380 --> 00:02:10,649
that we ran in September previous month

00:02:08,179 --> 00:02:13,680
to kind of put it differently which is

00:02:10,649 --> 00:02:16,830
this is it's just a number how many

00:02:13,680 --> 00:02:25,250
tasks we ran but to put it in compute

00:02:16,830 --> 00:02:28,890
hours this is 227 years of compute hours

00:02:25,250 --> 00:02:30,989
so this says that we are doing a lot of

00:02:28,890 --> 00:02:33,450
building this means also running the

00:02:30,989 --> 00:02:36,510
tests verifying that the test ran

00:02:33,450 --> 00:02:37,890
successfully the chain of trust and all

00:02:36,510 --> 00:02:40,920
of this that we verify that the end

00:02:37,890 --> 00:02:44,820
product end that 80 megabytes that you

00:02:40,920 --> 00:02:46,500
download depends which version but the

00:02:44,820 --> 00:02:48,239
the final product that you download it's

00:02:46,500 --> 00:02:56,730
as safe as possible itself is we can

00:02:48,239 --> 00:02:59,640
make it so we are quite busy 265 is the

00:02:56,730 --> 00:03:02,400
number now don't hold me by the exact

00:02:59,640 --> 00:03:04,620
number but it's roughly around there the

00:03:02,400 --> 00:03:05,560
number of releases which happened this

00:03:04,620 --> 00:03:08,740
year

00:03:05,560 --> 00:03:10,990
which are the human assisted human

00:03:08,740 --> 00:03:13,030
assisted releases where humans were

00:03:10,990 --> 00:03:15,280
involved QA was involved and this is

00:03:13,030 --> 00:03:17,709
only Firefox this is excluding

00:03:15,280 --> 00:03:19,900
Knightley's these are automated it just

00:03:17,709 --> 00:03:24,130
whatever lens it goes out the same day

00:03:19,900 --> 00:03:27,100
or twice a day I think even so there is

00:03:24,130 --> 00:03:29,860
a lot of we have in place processes and

00:03:27,100 --> 00:03:32,709
you can see that we are releasing every

00:03:29,860 --> 00:03:34,690
day so if this is true we will reach 300

00:03:32,709 --> 00:03:39,340
which means almost every day we ship a

00:03:34,690 --> 00:03:47,200
release even on weekends but it's not

00:03:39,340 --> 00:03:51,280
true cos we ship multiple a day so I'm

00:03:47,200 --> 00:03:56,280
regardless I would like you I'm released

00:03:51,280 --> 00:04:02,680
engineer at Mozilla today I'd like to

00:03:56,280 --> 00:04:04,360
show you or try to explain how make how

00:04:02,680 --> 00:04:06,550
to make Nix a bit more pleasant

00:04:04,360 --> 00:04:09,760
experience to use at least the tricks I

00:04:06,550 --> 00:04:12,489
think it worked and also things which I

00:04:09,760 --> 00:04:14,650
tried and didn't work or we could

00:04:12,489 --> 00:04:19,290
improve upon right so which I'm

00:04:14,650 --> 00:04:19,290
certainly I will write RFC's after this

00:04:19,829 --> 00:04:29,200
so it released engineering we use Nick's

00:04:25,750 --> 00:04:32,530
in not in a big capacity we have some

00:04:29,200 --> 00:04:34,720
surrounding services of our build system

00:04:32,530 --> 00:04:37,210
and our build pipeline there are few

00:04:34,720 --> 00:04:40,090
surrounding services which we Nixa fide

00:04:37,210 --> 00:04:43,180
i was the main protagonist when I joined

00:04:40,090 --> 00:04:45,039
Mozilla so I I'm quite I was quite

00:04:43,180 --> 00:04:46,360
excited that I was given the opportunity

00:04:45,039 --> 00:04:50,530
to do so

00:04:46,360 --> 00:04:56,200
and that's this will be more lessons

00:04:50,530 --> 00:04:58,539
learned while doing so and in order to

00:04:56,200 --> 00:05:00,250
do so I would like to first start with

00:04:58,539 --> 00:05:02,560
the bit short introduction just what we

00:05:00,250 --> 00:05:06,160
do who is the T what kind of team it is

00:05:02,560 --> 00:05:07,270
what are our fears the desires and so

00:05:06,160 --> 00:05:10,330
did you know where we're coming from

00:05:07,270 --> 00:05:13,599
what are our tools as well so that you

00:05:10,330 --> 00:05:15,900
will have a better understanding of our

00:05:13,599 --> 00:05:19,300
limitations ours

00:05:15,900 --> 00:05:22,960
thought process so with that in mind

00:05:19,300 --> 00:05:26,400
let's start we are a team release

00:05:22,960 --> 00:05:29,080
engineering is a team of 13 people and

00:05:26,400 --> 00:05:32,320
release engineering you would say a lot

00:05:29,080 --> 00:05:36,430
of people don't understand what we

00:05:32,320 --> 00:05:37,990
actually do in as we are scattered all

00:05:36,430 --> 00:05:42,640
over the place of the release pipeline

00:05:37,990 --> 00:05:44,980
which means once the code lens is it did

00:05:42,640 --> 00:05:48,280
it landed correctly do we need to verify

00:05:44,980 --> 00:05:50,890
we don't do actually QA but we need to

00:05:48,280 --> 00:05:53,440
communicate with QA that it fits the

00:05:50,890 --> 00:05:56,410
pipeline the release pipeline afterwards

00:05:53,440 --> 00:05:58,210
once the code lands so we are in every

00:05:56,410 --> 00:06:02,230
place but we are not expert in

00:05:58,210 --> 00:06:05,530
particular subject so being 13 people is

00:06:02,230 --> 00:06:07,900
not it's a lot but it's not a lot in

00:06:05,530 --> 00:06:13,030
terms when when you have so many

00:06:07,900 --> 00:06:16,990
products and so quick release cycles we

00:06:13,030 --> 00:06:19,570
do our process we do a train releases so

00:06:16,990 --> 00:06:22,780
every six weeks roughly six weeks we do

00:06:19,570 --> 00:06:25,780
a release this means every six weeks we

00:06:22,780 --> 00:06:27,820
have three branches or repositories we

00:06:25,780 --> 00:06:32,410
have mozilla-central beta and release

00:06:27,820 --> 00:06:35,200
every tree every six weeks merge happens

00:06:32,410 --> 00:06:38,550
and then all the versions shift down so

00:06:35,200 --> 00:06:43,480
if beta was with I was just yesterday

00:06:38,550 --> 00:06:47,290
63 and now is 64 because the merge day

00:06:43,480 --> 00:06:48,850
was yesterday so and this means that

00:06:47,290 --> 00:06:52,300
once something lens in the

00:06:48,850 --> 00:06:56,740
mozilla-central it takes two times six

00:06:52,300 --> 00:07:00,790
weeks to be in release if it passes the

00:06:56,740 --> 00:07:04,170
QA and everything so the tool we use the

00:07:00,790 --> 00:07:06,610
tool we use the most and it's kind of

00:07:04,170 --> 00:07:08,860
which I want to mention is the test

00:07:06,610 --> 00:07:14,200
cluster test cluster is our CI

00:07:08,860 --> 00:07:18,970
developed in Mozilla before we were

00:07:14,200 --> 00:07:24,130
using Bill but they are reasons why we

00:07:18,970 --> 00:07:26,760
start why we wrote test cluster just the

00:07:24,130 --> 00:07:29,650
story is too long for this short talk

00:07:26,760 --> 00:07:32,260
it's open source

00:07:29,650 --> 00:07:36,310
and soon it's you will be even able to

00:07:32,260 --> 00:07:38,320
install it apart from us no it's it's

00:07:36,310 --> 00:07:40,000
just a matter of priorities so we need

00:07:38,320 --> 00:07:44,199
firstly something running that we can

00:07:40,000 --> 00:07:47,350
use that we can but then it's intended

00:07:44,199 --> 00:07:50,250
to be used also by others

00:07:47,350 --> 00:07:53,199
our main language we we use all our

00:07:50,250 --> 00:07:58,150
infrastructure and all the glue code and

00:07:53,199 --> 00:08:04,030
our even build system is Python so this

00:07:58,150 --> 00:08:09,220
is our main choice so you can see that

00:08:04,030 --> 00:08:12,370
we those six million tests come from our

00:08:09,220 --> 00:08:13,810
test cluster so if you are in that range

00:08:12,370 --> 00:08:16,960
of capacity

00:08:13,810 --> 00:08:19,810
you might start considering looking into

00:08:16,960 --> 00:08:24,000
that area especially once the the

00:08:19,810 --> 00:08:28,120
bundles which can can easily install

00:08:24,000 --> 00:08:31,080
test cluster will be available I'll

00:08:28,120 --> 00:08:35,110
start with number one of the things I

00:08:31,080 --> 00:08:38,380
almost observe now that I been here for

00:08:35,110 --> 00:08:41,529
the whole day it's one common thread

00:08:38,380 --> 00:08:44,800
that everybody is employing and the ones

00:08:41,529 --> 00:08:46,750
who don't they should when they start

00:08:44,800 --> 00:08:48,190
working on a project with Nix and they

00:08:46,750 --> 00:08:51,029
try to introduce it to their colleagues

00:08:48,190 --> 00:08:52,690
or maybe even a lander scale and this is

00:08:51,029 --> 00:08:55,690
not the kebabs

00:08:52,690 --> 00:08:58,630
but it's wrapping Nick's is the tool in

00:08:55,690 --> 00:09:00,370
itself is completely works completely

00:08:58,630 --> 00:09:01,570
fine but it takes a bit of time to get

00:09:00,370 --> 00:09:05,950
used to it

00:09:01,570 --> 00:09:09,700
what you want to do is bring the problem

00:09:05,950 --> 00:09:14,350
the the the domain problem as close as

00:09:09,700 --> 00:09:17,860
possible to your colleagues this means

00:09:14,350 --> 00:09:20,050
that while Nick's shell in Nick's build

00:09:17,860 --> 00:09:22,990
and all these tools they do do correct

00:09:20,050 --> 00:09:26,560
job you still want to fetch some secrets

00:09:22,990 --> 00:09:28,930
from your company repositories place

00:09:26,560 --> 00:09:30,790
where you store secrets you have your

00:09:28,930 --> 00:09:34,750
own CI so there are these little things

00:09:30,790 --> 00:09:37,660
which it's very easy to abstract and

00:09:34,750 --> 00:09:39,880
wrap and have a tiny wrapper I'm not

00:09:37,660 --> 00:09:43,379
talking about implementing the whole

00:09:39,880 --> 00:09:45,819
makes a tiny wrapper between

00:09:43,379 --> 00:09:47,529
executing three comments in the bash and

00:09:45,819 --> 00:09:50,459
just making a nice UI and it really

00:09:47,529 --> 00:09:52,809
takes a long way it goes a long way so

00:09:50,459 --> 00:09:57,339
next time coming to Berlin will have

00:09:52,809 --> 00:09:59,670
kpop Knicks but how could this look like

00:09:57,339 --> 00:10:07,720
and this is actually a tool we also

00:09:59,670 --> 00:10:13,059
wrote so the tool is called peace for

00:10:07,720 --> 00:10:17,679
the lack of better name so when when you

00:10:13,059 --> 00:10:19,660
want to start developing you basically

00:10:17,679 --> 00:10:21,249
say please shell and you will enter the

00:10:19,660 --> 00:10:23,379
name of the project usually there are

00:10:21,249 --> 00:10:27,519
multiple projects so you enter a shell

00:10:23,379 --> 00:10:29,259
you run a project and you run the tests

00:10:27,519 --> 00:10:34,619
of a project and you deploy a project

00:10:29,259 --> 00:10:37,689
and what happens behind those commands

00:10:34,619 --> 00:10:41,860
it's up to you now you don't have to

00:10:37,689 --> 00:10:45,790
call please it can be your company name

00:10:41,860 --> 00:10:50,739
or something similar but the idea is

00:10:45,790 --> 00:10:53,559
this is quite common scenario and the

00:10:50,739 --> 00:10:56,139
onboarding when your colleagues come is

00:10:53,559 --> 00:10:58,329
going to be much smoother because once

00:10:56,139 --> 00:11:03,779
they know how to deploy one project they

00:10:58,329 --> 00:11:05,829
know how to deploy all the projects next

00:11:03,779 --> 00:11:09,339
important thing I think this is one of

00:11:05,829 --> 00:11:12,309
the this is one of the key reasons why

00:11:09,339 --> 00:11:15,429
Nick's by my opinion why Nick's is not

00:11:12,309 --> 00:11:17,679
so widely adopted I think this is like

00:11:15,429 --> 00:11:20,709
the first I mean there are many reasons

00:11:17,679 --> 00:11:23,739
but this is the first big one which I

00:11:20,709 --> 00:11:25,989
think it when I started introducing

00:11:23,739 --> 00:11:27,970
Nick's the first thing was what do you

00:11:25,989 --> 00:11:29,889
do when you finally convince somebody

00:11:27,970 --> 00:11:32,980
and they they they have time to use

00:11:29,889 --> 00:11:35,619
Nick's they try to install it it's not

00:11:32,980 --> 00:11:36,720
so easy there are multiple ways how to

00:11:35,619 --> 00:11:40,329
install it

00:11:36,720 --> 00:11:43,169
while choices are good giving beginners

00:11:40,329 --> 00:11:45,819
choices it's not good

00:11:43,169 --> 00:11:48,910
once you install Nick's and let's say

00:11:45,819 --> 00:11:51,339
you install it you figure it out that in

00:11:48,910 --> 00:11:54,880
our setup we require in multi-user mode

00:11:51,339 --> 00:11:57,760
and it has to have a sandbox enabled

00:11:54,880 --> 00:11:59,890
there is no way I could enforce this in

00:11:57,760 --> 00:12:02,440
our in my NYX file to kind of say like

00:11:59,890 --> 00:12:06,640
these are the properties they might be

00:12:02,440 --> 00:12:14,080
actually you can read the NYX conf not

00:12:06,640 --> 00:12:16,600
sure but yeah saying there is more to

00:12:14,080 --> 00:12:19,720
come to configuring NYX than just

00:12:16,600 --> 00:12:21,580
installing it might be your custom

00:12:19,720 --> 00:12:24,460
binary caches and things like that so

00:12:21,580 --> 00:12:29,340
while this can be all wrapped in the

00:12:24,460 --> 00:12:32,590
script like the first experience in

00:12:29,340 --> 00:12:37,320
while installing this is not that great

00:12:32,590 --> 00:12:40,780
for but we must remember that this is

00:12:37,320 --> 00:12:43,300
going to years back and looking at how

00:12:40,780 --> 00:12:46,420
it's now it's much better like I can see

00:12:43,300 --> 00:12:50,080
already the big big big improvement on

00:12:46,420 --> 00:12:54,670
the stability of the Installer but both

00:12:50,080 --> 00:12:58,180
of my managers which are kind of I'll

00:12:54,670 --> 00:13:02,410
see a buffer in my tree structure they

00:12:58,180 --> 00:13:04,690
both failed to install NYX let's say the

00:13:02,410 --> 00:13:07,330
last incident was I think it was in May

00:13:04,690 --> 00:13:09,580
when for two three days there was

00:13:07,330 --> 00:13:12,850
actually mixed install script was broken

00:13:09,580 --> 00:13:17,020
so the curl wasn't working I know it was

00:13:12,850 --> 00:13:21,760
like bad propaganda but it happened so I

00:13:17,020 --> 00:13:24,910
lost that moment of I finally I could

00:13:21,760 --> 00:13:29,680
get somebody else on next but I'm almost

00:13:24,910 --> 00:13:30,370
ready to so why what I did to kind of

00:13:29,680 --> 00:13:36,600
circum

00:13:30,370 --> 00:13:40,450
to kind of go around this problem is the

00:13:36,600 --> 00:13:43,270
darker stuff things in docker so the

00:13:40,450 --> 00:13:45,340
nice thing about docker is that somebody

00:13:43,270 --> 00:13:47,700
else put the effort of documenting how

00:13:45,340 --> 00:13:52,270
to install it it works on all platforms

00:13:47,700 --> 00:13:53,560
and you can run Nix in it easily so

00:13:52,270 --> 00:13:56,080
that's what we're doing

00:13:53,560 --> 00:13:58,030
so whenever you've run please shell it

00:13:56,080 --> 00:14:01,960
will displease is actually a best script

00:13:58,030 --> 00:14:03,970
which runs itself in a docker container

00:14:01,960 --> 00:14:07,750
and then based on the environment

00:14:03,970 --> 00:14:08,649
because we detected it will do what it's

00:14:07,750 --> 00:14:11,350
supposed to do so it

00:14:08,649 --> 00:14:15,279
execute on the deployment or enter the

00:14:11,350 --> 00:14:17,019
shell when you are in when you run it

00:14:15,279 --> 00:14:21,879
from the inside the doctor environment

00:14:17,019 --> 00:14:26,740
so this way we also configure the whole

00:14:21,879 --> 00:14:29,619
darker environment so which with secrets

00:14:26,740 --> 00:14:32,379
you have access to to which not secrets

00:14:29,619 --> 00:14:34,540
binary caches you have access to so this

00:14:32,379 --> 00:14:38,410
kind of sorts all of these problems it

00:14:34,540 --> 00:14:39,999
even makes it possible to use it in in

00:14:38,410 --> 00:14:46,059
Windows

00:14:39,999 --> 00:14:49,059
so that's while being and quite having

00:14:46,059 --> 00:14:50,949
an open source policy kind of being open

00:14:49,059 --> 00:14:52,869
first at Mozilla this is important

00:14:50,949 --> 00:14:56,790
because a lot of our contributors are

00:14:52,869 --> 00:15:00,490
actually coming from Windows platforms

00:14:56,790 --> 00:15:04,449
so we put the next inside and everything

00:15:00,490 --> 00:15:09,490
is it's okay we are happy with the

00:15:04,449 --> 00:15:12,069
current solution next feature which is

00:15:09,490 --> 00:15:14,610
quite often forgotten and I think Nick's

00:15:12,069 --> 00:15:18,819
here is where Nick's really shines is

00:15:14,610 --> 00:15:21,899
Mona versus multi repo I think Nick's

00:15:18,819 --> 00:15:24,970
was made to solve this problem

00:15:21,899 --> 00:15:28,769
whenever because then there is almost no

00:15:24,970 --> 00:15:32,410
debate whether it's a Mona or multi repo

00:15:28,769 --> 00:15:35,350
because both sides have cons and pros

00:15:32,410 --> 00:15:37,660
right so what the good side of the Mona

00:15:35,350 --> 00:15:39,639
Reaper is if you have let's say three

00:15:37,660 --> 00:15:41,110
projects which closely collaborate and

00:15:39,639 --> 00:15:42,850
they're closely connected it's quite

00:15:41,110 --> 00:15:45,730
easy to have them in one project and

00:15:42,850 --> 00:15:47,920
quickly iterate right but then once they

00:15:45,730 --> 00:15:50,949
are kinda more kind of reach the

00:15:47,920 --> 00:15:54,309
maintenance level it's nice to just let

00:15:50,949 --> 00:15:56,799
them to be on their own and whenever the

00:15:54,309 --> 00:15:59,019
update is needed or some feature is

00:15:56,799 --> 00:16:00,730
missing you can only pull that

00:15:59,019 --> 00:16:04,299
repository so there are pluses and

00:16:00,730 --> 00:16:08,079
minuses right with Nicks you can

00:16:04,299 --> 00:16:09,939
actually have this top repository from

00:16:08,079 --> 00:16:11,199
which you deploy you know exactly the

00:16:09,939 --> 00:16:13,809
state you are in

00:16:11,199 --> 00:16:17,589
and then you refer to another repository

00:16:13,809 --> 00:16:20,769
so in that sense the you are you are

00:16:17,589 --> 00:16:22,000
doing a mono repo but you have you're

00:16:20,769 --> 00:16:23,650
using actually

00:16:22,000 --> 00:16:27,580
multiple you can use multiple

00:16:23,650 --> 00:16:29,620
repositories when project is in a

00:16:27,580 --> 00:16:32,800
maintenance mode when needed or when

00:16:29,620 --> 00:16:35,560
certain team prefers to work in their

00:16:32,800 --> 00:16:39,610
separate repository so you can have both

00:16:35,560 --> 00:16:42,670
with Nix yeah

00:16:39,610 --> 00:16:46,740
and having top repository which includes

00:16:42,670 --> 00:16:50,740
everything it's a nice way where you can

00:16:46,740 --> 00:16:55,690
check between services basically run

00:16:50,740 --> 00:16:59,440
gate blame git bisect and figure it out

00:16:55,690 --> 00:17:02,320
where those tricky problems occur in the

00:16:59,440 --> 00:17:08,439
whole deployment so it's also one thing

00:17:02,320 --> 00:17:10,839
one nice side effect one thing the solve

00:17:08,439 --> 00:17:15,790
the next thing which you should

00:17:10,839 --> 00:17:19,390
basically check first before you even

00:17:15,790 --> 00:17:23,500
start considering using NYX is is your

00:17:19,390 --> 00:17:25,600
language supported in NYX so how do you

00:17:23,500 --> 00:17:31,090
go about this so we open the google your

00:17:25,600 --> 00:17:34,180
brow doctor go you browse your language

00:17:31,090 --> 00:17:36,580
tunics and hopefully you'll get the

00:17:34,180 --> 00:17:40,750
result don't look for this information

00:17:36,580 --> 00:17:43,390
on Nixon's dot org it's something maybe

00:17:40,750 --> 00:17:46,660
there isn't a mailing list but we see

00:17:43,390 --> 00:17:49,000
that if we kind of hurt ourselves by not

00:17:46,660 --> 00:17:50,980
exposing these tools because when

00:17:49,000 --> 00:17:52,650
somebody comes with a project they

00:17:50,980 --> 00:17:56,320
usually come from a background

00:17:52,650 --> 00:17:59,920
JavaScript Haskell and there's like okay

00:17:56,320 --> 00:18:03,160
how do i bootstrap my project and if

00:17:59,920 --> 00:18:04,870
your language does not have this it's

00:18:03,160 --> 00:18:09,100
going to be quite rough road you can

00:18:04,870 --> 00:18:13,600
partially Nick safai your project the

00:18:09,100 --> 00:18:18,910
rest it's more of a manual work from

00:18:13,600 --> 00:18:22,510
there on like like before so luckily we

00:18:18,910 --> 00:18:26,080
have a lot of - Nick's tools some work

00:18:22,510 --> 00:18:32,920
better some work less I'd like to maybe

00:18:26,080 --> 00:18:36,020
just shout out to yarn - Nick's by for

00:18:32,920 --> 00:18:39,660
the design it has where

00:18:36,020 --> 00:18:43,050
you don't have to run a command so to

00:18:39,660 --> 00:18:45,690
actually produce the output but you'll

00:18:43,050 --> 00:18:50,210
use existing log files which yarn

00:18:45,690 --> 00:18:54,320
produces and then the integration then

00:18:50,210 --> 00:18:57,080
the trick ssin friction between

00:18:54,320 --> 00:19:00,330
development team which ones to use yarn

00:18:57,080 --> 00:19:03,320
is there is much less friction between

00:19:00,330 --> 00:19:05,670
the dev team which wants to use yarn and

00:19:03,320 --> 00:19:09,180
release management which needs to

00:19:05,670 --> 00:19:11,070
package everything because nix and yarn

00:19:09,180 --> 00:19:12,930
lock file are already in sync and there

00:19:11,070 --> 00:19:15,720
also other tunic's tools we just do this

00:19:12,930 --> 00:19:18,780
I'm just trying to kind of bring out

00:19:15,720 --> 00:19:21,720
that this is the nicest way to work with

00:19:18,780 --> 00:19:24,180
these tunics tools and through not all

00:19:21,720 --> 00:19:26,760
languages also support this lock files

00:19:24,180 --> 00:19:29,820
or have enough metadata in those lock

00:19:26,760 --> 00:19:32,520
files so that we can create this kind of

00:19:29,820 --> 00:19:34,830
tunics tools but this is really

00:19:32,520 --> 00:19:37,260
important if you don't have this you

00:19:34,830 --> 00:19:41,780
will be in a lot of trouble or you have

00:19:37,260 --> 00:19:41,780
time to write them which is also nice

00:19:44,780 --> 00:19:49,920
one nice thing is if this is quickly you

00:19:47,730 --> 00:19:54,150
can overdo it the next topic I'm trying

00:19:49,920 --> 00:20:00,540
to explain is overlays overlays are nice

00:19:54,150 --> 00:20:03,300
but don't overdo them like me you can

00:20:00,540 --> 00:20:05,190
quickly get excited and we'll put this

00:20:03,300 --> 00:20:06,860
in a box here in this in a box here and

00:20:05,190 --> 00:20:13,290
this is how it's going to be connected

00:20:06,860 --> 00:20:15,510
but you there is I would say in your

00:20:13,290 --> 00:20:18,270
company you should have a layer for your

00:20:15,510 --> 00:20:20,130
company which builds certain tools

00:20:18,270 --> 00:20:22,860
certain version of tools which are used

00:20:20,130 --> 00:20:24,840
in your company and every developer

00:20:22,860 --> 00:20:27,240
should kind of have access to that

00:20:24,840 --> 00:20:29,130
overlay then you have per project and I

00:20:27,240 --> 00:20:30,630
think that's where it kind of ends you

00:20:29,130 --> 00:20:32,940
don't have to go Raeleen more in the

00:20:30,630 --> 00:20:36,390
detail of building more and more

00:20:32,940 --> 00:20:44,430
overlays otherwise I mean it's a nice

00:20:36,390 --> 00:20:46,700
picture but it gets crazy yeah the next

00:20:44,430 --> 00:20:46,700
one

00:20:47,320 --> 00:20:53,809
introducing mix I you probably notice I

00:20:50,690 --> 00:20:55,430
asked many questions in today how did

00:20:53,809 --> 00:20:59,270
you introduce Nicks what was the

00:20:55,430 --> 00:21:03,220
reaction what was the experience what I

00:20:59,270 --> 00:21:06,580
noticed is that it's a cultural shock

00:21:03,220 --> 00:21:11,990
especially because our team is used to

00:21:06,580 --> 00:21:15,260
Python and object-oriented design when

00:21:11,990 --> 00:21:15,860
we combine code we use inheritance in

00:21:15,260 --> 00:21:22,940
Python

00:21:15,860 --> 00:21:27,020
mostly over composition so just this

00:21:22,940 --> 00:21:31,790
shift is a big kind of alert for

00:21:27,020 --> 00:21:34,850
somebody trying to learn and as whenever

00:21:31,790 --> 00:21:37,070
you will try to introduce a functional

00:21:34,850 --> 00:21:39,290
language you will face this this

00:21:37,070 --> 00:21:43,570
basically means going to somebody which

00:21:39,290 --> 00:21:48,140
is which spend the last 10 20 years

00:21:43,570 --> 00:21:53,260
learning about object-oriented or object

00:21:48,140 --> 00:22:00,490
orientated programming and saying yeah

00:21:53,260 --> 00:22:03,920
no this is better right it's going to be

00:22:00,490 --> 00:22:06,320
not accepted well so what I suggest here

00:22:03,920 --> 00:22:09,230
is be prepared there is going to be

00:22:06,320 --> 00:22:11,059
chances where people are frustrated with

00:22:09,230 --> 00:22:13,730
their current tools and you have to be

00:22:11,059 --> 00:22:16,450
ready then to step in and ask them this

00:22:13,730 --> 00:22:21,559
is an alternative this is how I came to

00:22:16,450 --> 00:22:25,670
Nix I was frustrated with Python package

00:22:21,559 --> 00:22:29,120
management still am but I came to nix

00:22:25,670 --> 00:22:31,510
and it solves most of it right a lot of

00:22:29,120 --> 00:22:34,640
stories I heard were I was struggling

00:22:31,510 --> 00:22:37,190
there is nothing better and I came so

00:22:34,640 --> 00:22:41,900
but it's important that when that moment

00:22:37,190 --> 00:22:45,620
comes the tools which are using a

00:22:41,900 --> 00:22:49,570
company need to be packaged in mix the

00:22:45,620 --> 00:22:52,010
the at least the bootstrapping the first

00:22:49,570 --> 00:22:53,840
default Nick's or shelled out Nick's

00:22:52,010 --> 00:22:56,510
should be already there in place so they

00:22:53,840 --> 00:22:58,550
can get a quick feel of it they won't

00:22:56,510 --> 00:23:00,650
switch in the first day but you need to

00:22:58,550 --> 00:23:03,110
get them but you need to be prepared and

00:23:00,650 --> 00:23:04,670
this moment will never happen during the

00:23:03,110 --> 00:23:08,120
week but it's going to be weekend I

00:23:04,670 --> 00:23:11,360
guarantee you because then that's when

00:23:08,120 --> 00:23:17,560
we have time to play around and test new

00:23:11,360 --> 00:23:25,730
things so if anybody knows this band

00:23:17,560 --> 00:23:28,280
awesome just been in the concert so kind

00:23:25,730 --> 00:23:32,840
of I added this slide I mean it's coming

00:23:28,280 --> 00:23:36,800
but based on the alcohol presentation

00:23:32,840 --> 00:23:40,400
this morning to kind of add on the list

00:23:36,800 --> 00:23:43,070
of the RFC which we need to do so when I

00:23:40,400 --> 00:23:47,210
was preparing this slide I thought what

00:23:43,070 --> 00:23:49,750
are the least amount of effort that we

00:23:47,210 --> 00:23:53,990
could put in to get the most of the

00:23:49,750 --> 00:23:56,510
results so how to make in a year when

00:23:53,990 --> 00:23:58,790
somebody in a year comes to their boss

00:23:56,510 --> 00:24:00,830
and says like let's use Nick's there is

00:23:58,790 --> 00:24:03,530
gonna be a higher chance that this

00:24:00,830 --> 00:24:04,730
succeeds this is come not completely

00:24:03,530 --> 00:24:06,880
everything of course because they're

00:24:04,730 --> 00:24:10,820
only three points but I think these are

00:24:06,880 --> 00:24:12,830
at least in my experience I encountered

00:24:10,820 --> 00:24:18,470
them a lot of these arguments so first

00:24:12,830 --> 00:24:20,600
one is Windows support I know this is in

00:24:18,470 --> 00:24:23,090
the world where everything is Linux it's

00:24:20,600 --> 00:24:25,220
not important but this is not the case a

00:24:23,090 --> 00:24:26,810
lot of times Nicks is a build tool and

00:24:25,220 --> 00:24:29,300
if we want to use it as a build tool is

00:24:26,810 --> 00:24:32,930
going to be compared against does it has

00:24:29,300 --> 00:24:35,570
a window support and sadly we don't have

00:24:32,930 --> 00:24:38,930
the good part why I say why I put it

00:24:35,570 --> 00:24:43,340
here is because there is a Windows

00:24:38,930 --> 00:24:47,720
whatever the name is subsystem yeah okay

00:24:43,340 --> 00:24:51,680
exactly that might give us an easier way

00:24:47,720 --> 00:24:56,710
to reach that goal and be able to

00:24:51,680 --> 00:25:00,820
compile by Windows executables

00:24:56,710 --> 00:25:03,309
using necks it's I know there is a poor

00:25:00,820 --> 00:25:05,860
request and it was revived just today

00:25:03,309 --> 00:25:09,610
because it was Nick's con so whoever is

00:25:05,860 --> 00:25:11,610
working on that I'd love to help I can

00:25:09,610 --> 00:25:16,539
only give moral support in beer or

00:25:11,610 --> 00:25:19,499
preferred but this is because of other

00:25:16,539 --> 00:25:23,740
reasons not because I don't want to help

00:25:19,499 --> 00:25:28,779
time the next one is which is I already

00:25:23,740 --> 00:25:30,940
kind of hinted it is dr. Enix this

00:25:28,779 --> 00:25:33,580
should be this is how people use

00:25:30,940 --> 00:25:35,619
software today like it or not this is

00:25:33,580 --> 00:25:37,629
how people try software today doesn't

00:25:35,619 --> 00:25:39,669
matter if Nick's can be removed without

00:25:37,629 --> 00:25:39,929
traces and you don't even know it's

00:25:39,669 --> 00:25:41,860
there

00:25:39,929 --> 00:25:44,139
people don't know that people need to

00:25:41,860 --> 00:25:45,519
read that but they know darker you know

00:25:44,139 --> 00:25:49,320
how to install darker so we don't have

00:25:45,519 --> 00:25:51,580
to teach them how to install Nick's

00:25:49,320 --> 00:25:53,889
mixes is going to be there inside the

00:25:51,580 --> 00:25:56,019
docker so while we work on our story of

00:25:53,889 --> 00:25:58,360
how to install Nick's we can give them a

00:25:56,019 --> 00:26:00,399
really good story of the first

00:25:58,360 --> 00:26:04,059
impression and they can start playing in

00:26:00,399 --> 00:26:06,580
the environment they're used to this is

00:26:04,059 --> 00:26:09,970
already happening from the work from

00:26:06,580 --> 00:26:14,049
tweak recently this was this is all just

00:26:09,970 --> 00:26:17,340
amazing but I think this is a with the

00:26:14,049 --> 00:26:20,350
minimal amount of effort so how as we

00:26:17,340 --> 00:26:22,629
create our table which is then picked up

00:26:20,350 --> 00:26:24,759
by the our curl install script we could

00:26:22,629 --> 00:26:27,309
as easily just push docker image with

00:26:24,759 --> 00:26:29,320
Nick's inside in a sandbox mode in

00:26:27,309 --> 00:26:32,700
multi-user installations of the hardest

00:26:29,320 --> 00:26:40,330
of all right this would save a lot of

00:26:32,700 --> 00:26:47,529
man-hours of pee beginners right and the

00:26:40,330 --> 00:26:50,169
third one it's not yet their website I'm

00:26:47,529 --> 00:26:51,340
not talking about documentation I think

00:26:50,169 --> 00:26:53,499
this is this is actually the most

00:26:51,340 --> 00:26:56,129
important one maybe I shouldn't put it

00:26:53,499 --> 00:26:56,129
at the end but

00:26:57,409 --> 00:27:04,140
I'm not talking about it we need a new

00:26:59,640 --> 00:27:07,830
design of the website when I'm away on

00:27:04,140 --> 00:27:11,640
parent to leave soon and my manager

00:27:07,830 --> 00:27:17,100
again tries to or somebody from our team

00:27:11,640 --> 00:27:19,740
or your friend tries to learn how to use

00:27:17,100 --> 00:27:22,350
next it's gonna have hard time finding

00:27:19,740 --> 00:27:24,029
this resources I know where the

00:27:22,350 --> 00:27:26,490
documentation czar I can send you the

00:27:24,029 --> 00:27:29,730
link discoverability on the website is

00:27:26,490 --> 00:27:31,470
very poor a lot of content is not there

00:27:29,730 --> 00:27:34,890
as it should be

00:27:31,470 --> 00:27:38,309
it should not take more than a minute to

00:27:34,890 --> 00:27:43,559
be at the with the next installed and

00:27:38,309 --> 00:27:46,830
with few with an example expression

00:27:43,559 --> 00:27:48,659
written and start playing from there I'm

00:27:46,830 --> 00:27:51,960
talking about getting started manual

00:27:48,659 --> 00:27:56,130
this is not tutorial or short tutorial

00:27:51,960 --> 00:27:59,580
so this is not something that it should

00:27:56,130 --> 00:28:02,250
be in the manual in such but it should

00:27:59,580 --> 00:28:04,350
be something to get people excited that

00:28:02,250 --> 00:28:07,770
this actually works because the worst

00:28:04,350 --> 00:28:11,690
feeling is when things fail and then

00:28:07,770 --> 00:28:11,690
you're like okay this mix doesn't work

00:28:12,050 --> 00:28:20,140
I don't have much time but I'm really

00:28:14,450 --> 00:28:22,550
willing to work on this personally and

00:28:20,140 --> 00:28:24,500
there is no easy solution because there

00:28:22,550 --> 00:28:26,060
are you know as many as we are here

00:28:24,500 --> 00:28:29,090
there will be different opinions what

00:28:26,060 --> 00:28:31,700
should be on the website where but I

00:28:29,090 --> 00:28:34,460
think we should start changing it and

00:28:31,700 --> 00:28:37,400
including more links exposing the

00:28:34,460 --> 00:28:39,980
content doing some testing it's you know

00:28:37,400 --> 00:28:40,910
show somebody in your company find me

00:28:39,980 --> 00:28:43,910
how to install Nix

00:28:40,910 --> 00:28:47,000
when you come to nix OS network nobody

00:28:43,910 --> 00:28:50,290
knows currently I would like to change

00:28:47,000 --> 00:28:53,940
that thank you

00:28:50,290 --> 00:28:53,940
[Applause]

00:28:57,970 --> 00:29:07,720
all righty time for questions yes all

00:29:06,710 --> 00:29:11,150
right

00:29:07,720 --> 00:29:14,930
yeah my question is about the darker and

00:29:11,150 --> 00:29:17,510
Nicky support so I used to maintain the

00:29:14,930 --> 00:29:19,250
darker image on the hub which was mostly

00:29:17,510 --> 00:29:21,950
when somebody sent me an email I would

00:29:19,250 --> 00:29:23,690
update it and now it's it's kind of

00:29:21,950 --> 00:29:26,480
automated if you go to Nick so it's

00:29:23,690 --> 00:29:29,410
slash talker you you basically just do a

00:29:26,480 --> 00:29:31,700
pull request and you can update it but

00:29:29,410 --> 00:29:34,430
I'm not sure what's really missing right

00:29:31,700 --> 00:29:36,200
I mean okay sandbox support is it is it

00:29:34,430 --> 00:29:39,020
really that useful if it's within the

00:29:36,200 --> 00:29:41,950
docker if if there is a reason we can

00:29:39,020 --> 00:29:45,070
add that probably very easily I agree

00:29:41,950 --> 00:29:49,120
multi-user yeah doesn't really fit so

00:29:45,070 --> 00:29:51,020
what do you think is missing there okay

00:29:49,120 --> 00:29:52,730
starting docker

00:29:51,020 --> 00:29:55,100
it shouldn't be docker file we should

00:29:52,730 --> 00:29:56,750
build Nix with Nick's so they are

00:29:55,100 --> 00:30:01,180
support it's possible already to have

00:29:56,750 --> 00:30:03,170
Nick's docker image built with Nick's

00:30:01,180 --> 00:30:05,450
because then we can actually just have

00:30:03,170 --> 00:30:07,250
it in Hydra and have it ins an artifact

00:30:05,450 --> 00:30:10,700
of the next build

00:30:07,250 --> 00:30:13,460
every time we commit multi-use sandbox

00:30:10,700 --> 00:30:16,210
mode I don't know who would use it

00:30:13,460 --> 00:30:19,040
without sandbox mode we just have

00:30:16,210 --> 00:30:22,280
personally if I have a project I want

00:30:19,040 --> 00:30:24,080
sandbox mode i explicitly would like to

00:30:22,280 --> 00:30:26,030
disable somebody using without sandbox

00:30:24,080 --> 00:30:30,560
mode if possible like that would be an

00:30:26,030 --> 00:30:32,990
assertion multi-user wise multi-user in

00:30:30,560 --> 00:30:35,030
our case maybe this is not really needed

00:30:32,990 --> 00:30:37,460
but in our case we need it because we

00:30:35,030 --> 00:30:39,140
have to run we installed PostgreSQL and

00:30:37,460 --> 00:30:41,390
if you want to run PostgreSQL you need

00:30:39,140 --> 00:30:44,660
to run it as a different user than root

00:30:41,390 --> 00:30:47,420
so and reusing the same image kind of

00:30:44,660 --> 00:30:49,690
makes sense so that's where I'm coming

00:30:47,420 --> 00:30:49,690
from

00:30:51,100 --> 00:30:55,660
yeah okay more questions

00:30:58,220 --> 00:31:01,550
for the third problem the website can

00:30:59,930 --> 00:31:03,710
something like a github curated list

00:31:01,550 --> 00:31:08,600
like an awesome list but more structured

00:31:03,710 --> 00:31:11,680
can that solve the problem it's a nice

00:31:08,600 --> 00:31:18,020
idea I don't think so

00:31:11,680 --> 00:31:20,360
reasons imagine a docker calm would be a

00:31:18,020 --> 00:31:21,460
list of awesome websites would you use

00:31:20,360 --> 00:31:24,500
docker

00:31:21,460 --> 00:31:25,280
right it's like I'm not saying we should

00:31:24,500 --> 00:31:27,830
be docker

00:31:25,280 --> 00:31:29,780
but I want that feeling when you come

00:31:27,830 --> 00:31:31,910
you have a getting started in five

00:31:29,780 --> 00:31:35,840
minutes you know you have a successful

00:31:31,910 --> 00:31:37,910
mix built and you're in Nick shell so

00:31:35,840 --> 00:31:40,910
you have something tangible that you can

00:31:37,910 --> 00:31:42,440
go after fifteen minutes and say like ok

00:31:40,910 --> 00:31:45,500
I will leave this I will come this to

00:31:42,440 --> 00:31:49,910
later when I have more time so having

00:31:45,500 --> 00:31:53,150
these early early adopters I like what

00:31:49,910 --> 00:31:56,690
domain is doing where where it comes

00:31:53,150 --> 00:31:59,150
these services with Kashuk Hercules this

00:31:56,690 --> 00:32:01,250
is awesome but we are still stuck with

00:31:59,150 --> 00:32:04,190
the first phase somebody actually

00:32:01,250 --> 00:32:06,770
considering Nix and I think this is

00:32:04,190 --> 00:32:11,780
where our conversion rates well I use

00:32:06,770 --> 00:32:17,690
the big word actually we lose a lot more

00:32:11,780 --> 00:32:22,220
questions yes yeah so to the same point

00:32:17,690 --> 00:32:23,930
for me like when I when I made a PR

00:32:22,220 --> 00:32:24,890
against the manual I don't remember

00:32:23,930 --> 00:32:27,890
which one it was

00:32:24,890 --> 00:32:30,220
Nick so as next packages when I realized

00:32:27,890 --> 00:32:33,530
that it would only show on the website

00:32:30,220 --> 00:32:36,020
after six months that for me that was

00:32:33,530 --> 00:32:38,600
like I was like wow okay I'm not gonna

00:32:36,020 --> 00:32:40,280
go through the trouble again so for me

00:32:38,600 --> 00:32:42,230
that was like really something that I

00:32:40,280 --> 00:32:45,680
felt like that doesn't really help

00:32:42,230 --> 00:32:49,640
contributors contribute I think this got

00:32:45,680 --> 00:32:52,580
improved already that there is a kind of

00:32:49,640 --> 00:32:54,020
unstable not yet I saw some pull

00:32:52,580 --> 00:32:56,420
requests or some discussions that

00:32:54,020 --> 00:32:58,010
surrounding this where the master

00:32:56,420 --> 00:33:01,960
documentation it will be available

00:32:58,010 --> 00:33:06,080
somewhere in the Nick so as that work

00:33:01,960 --> 00:33:09,530
might be completely wrong but it should

00:33:06,080 --> 00:33:10,850
be possible I mean this is a lot of like

00:33:09,530 --> 00:33:14,480
work we should do

00:33:10,850 --> 00:33:16,340
agree but while I'm what I want to point

00:33:14,480 --> 00:33:19,190
out with the website is not that there

00:33:16,340 --> 00:33:21,200
has to be a structure like deep nested

00:33:19,190 --> 00:33:22,970
structure just the front plate to

00:33:21,200 --> 00:33:26,600
include all the information which

00:33:22,970 --> 00:33:28,430
language tunics tools do we support list

00:33:26,600 --> 00:33:30,670
them there this is important

00:33:28,430 --> 00:33:34,250
give examples how to use those tools

00:33:30,670 --> 00:33:36,290
that's an extra bonus getting started

00:33:34,250 --> 00:33:40,430
manual in like five minutes

00:33:36,290 --> 00:33:42,410
docker image I think like that would

00:33:40,430 --> 00:33:44,270
make it easier a lot for my a lot for a

00:33:42,410 --> 00:33:47,480
lot of my co-workers and friends who I

00:33:44,270 --> 00:33:52,580
try to convince the snicks and they gave

00:33:47,480 --> 00:33:53,870
up after five minutes of doesn't work ok

00:33:52,580 --> 00:33:58,100
maybe you've got time for one more

00:33:53,870 --> 00:34:01,040
question we've got a question from the

00:33:58,100 --> 00:34:06,350
internet that's fantastic do we have

00:34:01,040 --> 00:34:07,970
telephones as well aren't you afraid

00:34:06,350 --> 00:34:09,470
that your co-workers will find another

00:34:07,970 --> 00:34:11,570
solution while you're on parental leave

00:34:09,470 --> 00:34:17,060
especially if nobody can help them debug

00:34:11,570 --> 00:34:20,140
their Nix expressions from NVP this is

00:34:17,060 --> 00:34:20,140
the fear I'm living with

00:34:20,360 --> 00:34:29,330
putting no putting this aside like the

00:34:25,320 --> 00:34:32,340
joke aside it's a valid question

00:34:29,330 --> 00:34:35,370
the next my parity leave there is going

00:34:32,340 --> 00:34:37,909
to be problems so sure I'm going to

00:34:35,370 --> 00:34:41,040
teach them so I'm going to show them but

00:34:37,909 --> 00:34:45,780
it's hard to do this when they're stuck

00:34:41,040 --> 00:34:48,960
with installing mix right so for me this

00:34:45,780 --> 00:34:51,090
is the first goal and just having like

00:34:48,960 --> 00:34:52,980
the documentation if you read it it's

00:34:51,090 --> 00:34:54,929
actually good right but you need to find

00:34:52,980 --> 00:34:55,679
it right you need to you need to know

00:34:54,929 --> 00:35:00,720
that there are three different

00:34:55,679 --> 00:35:02,970
documentation manuals I after a year of

00:35:00,720 --> 00:35:04,530
using NYX in mixed class

00:35:02,970 --> 00:35:07,440
I didn't know there is an expected is

00:35:04,530 --> 00:35:09,210
manual right I mean I'm not saying like

00:35:07,440 --> 00:35:13,350
the everything here is done with a good

00:35:09,210 --> 00:35:15,150
intention right I think for a little

00:35:13,350 --> 00:35:17,190
effort putting in the front page and

00:35:15,150 --> 00:35:19,830
gathering these resources and pointing

00:35:17,190 --> 00:35:22,920
to wiki pages to the oldest tools we

00:35:19,830 --> 00:35:28,320
could achieve a lot of better results

00:35:22,920 --> 00:35:30,330
and being a lot more friendly okay so

00:35:28,320 --> 00:35:33,000
after this nice question from the

00:35:30,330 --> 00:35:34,340
internet let's give Rock another round

00:35:33,000 --> 00:35:44,429
of applause for this very nice talk

00:35:34,340 --> 00:35:44,429

YouTube URL: https://www.youtube.com/watch?v=SEhizrN5Nac


