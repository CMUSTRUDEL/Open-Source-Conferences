Title: Niklas Hambüchen nh2 - Building static executables with Nix (NixCon 2018)
Publication date: 2018-11-06
Playlist: NixCon 2018 (London)
Description: 
	https://github.com/NixOS/nixpkgs/issues/43795
Captions: 
	00:00:00,030 --> 00:00:04,350
so I'm not sure if the display part

00:00:02,159 --> 00:00:06,990
adaptor actually works but I can to make

00:00:04,350 --> 00:00:08,730
it very short or to just talk about it

00:00:06,990 --> 00:00:11,550
you all have your laptop's with you or

00:00:08,730 --> 00:00:13,650
the man next to you or can do it for you

00:00:11,550 --> 00:00:16,170
so I wanted to shortly introduce this

00:00:13,650 --> 00:00:18,060
little side project that we have here

00:00:16,170 --> 00:00:21,869
which is bidding which is all about

00:00:18,060 --> 00:00:23,430
bidding static executables using Nix the

00:00:21,869 --> 00:00:26,730
first motivation for that was to build

00:00:23,430 --> 00:00:29,189
static Haskell executables because well

00:00:26,730 --> 00:00:30,720
there are lots of packages that use in

00:00:29,189 --> 00:00:32,759
Haskell usually and you might have

00:00:30,720 --> 00:00:37,140
easily 300 foreign dependencies making

00:00:32,759 --> 00:00:39,000
from very large Nix closure sizes

00:00:37,140 --> 00:00:40,680
essentially another thing is that we

00:00:39,000 --> 00:00:43,350
want to have in the Haskell world Static

00:00:40,680 --> 00:00:45,270
executables in general because we want

00:00:43,350 --> 00:00:47,969
to deploy stuff very easily we are very

00:00:45,270 --> 00:00:50,460
envious of go being able to provide

00:00:47,969 --> 00:00:51,629
static executables out of the box and of

00:00:50,460 --> 00:00:53,579
course we want to have something like

00:00:51,629 --> 00:00:56,090
that as well so we found at some point

00:00:53,579 --> 00:00:58,980
that this is very difficult because

00:00:56,090 --> 00:01:01,920
gilepsy does not which is a dependency

00:00:58,980 --> 00:01:04,350
of the Haskell runtime for example does

00:01:01,920 --> 00:01:06,659
not make study linking very easy in fact

00:01:04,350 --> 00:01:07,740
it's actually discouraged and that means

00:01:06,659 --> 00:01:09,360
that if you want to have a good

00:01:07,740 --> 00:01:12,210
experience with static linking you use

00:01:09,360 --> 00:01:14,340
need to use different lip see for

00:01:12,210 --> 00:01:16,740
example master so getting master

00:01:14,340 --> 00:01:18,479
available before there was a feature in

00:01:16,740 --> 00:01:20,909
stack Haskell's one of her skills build

00:01:18,479 --> 00:01:23,790
tools which was that you could build in

00:01:20,909 --> 00:01:25,710
an alpine linux docker container which

00:01:23,790 --> 00:01:27,810
provides that unfortunately that one

00:01:25,710 --> 00:01:29,520
lost support for GHC sometime ago and

00:01:27,810 --> 00:01:32,549
really wanted to have static builds back

00:01:29,520 --> 00:01:33,990
so instead I built this thing that does

00:01:32,549 --> 00:01:38,009
that using Nix

00:01:33,990 --> 00:01:44,100
so if you go to Nix packages issue 4 3 7

00:01:38,009 --> 00:01:46,950
9 5 alternatively you can go to my

00:01:44,100 --> 00:01:49,890
project repository github calm /nh 2

00:01:46,950 --> 00:01:53,759
slash static has connects with minuses

00:01:49,890 --> 00:01:56,280
in between then you can see that effort

00:01:53,759 --> 00:01:57,689
in general the summary so far is we've

00:01:56,280 --> 00:02:00,420
managed to write a little bit of an

00:01:57,689 --> 00:02:03,119
overlay style thing that supports

00:02:00,420 --> 00:02:04,680
building like 97% of the Haskell

00:02:03,119 --> 00:02:08,239
executables that Arne's takács

00:02:04,680 --> 00:02:11,099
statically so you can ask for any random

00:02:08,239 --> 00:02:13,110
package in a static fashion so for

00:02:11,099 --> 00:02:16,140
example it's a stack or

00:02:13,110 --> 00:02:18,270
or HS lock or whatever you can have them

00:02:16,140 --> 00:02:19,770
all as static executables and then

00:02:18,270 --> 00:02:23,790
easily put them anywhere

00:02:19,770 --> 00:02:25,770
we depend heavily on that muscle based

00:02:23,790 --> 00:02:27,510
tool chain that some other contributors

00:02:25,770 --> 00:02:29,580
and Nick's packages have been working on

00:02:27,510 --> 00:02:31,470
a lot in 2018 we saw that in the other

00:02:29,580 --> 00:02:33,060
talk before this is extremely useful

00:02:31,470 --> 00:02:37,620
without this this would not be possible

00:02:33,060 --> 00:02:42,050
and what this now eventually turned into

00:02:37,620 --> 00:02:47,070
is that on Nick's packages issue for the

00:02:42,050 --> 00:02:49,350
8800 3 there is an effort to make a an

00:02:47,070 --> 00:02:52,920
overlay or actually make an overlay in

00:02:49,350 --> 00:02:56,040
Nick's packages itself that provides a

00:02:52,920 --> 00:02:58,140
whole bunch of executables in Nick's OS

00:02:56,040 --> 00:03:00,690
a static version so you will just be

00:02:58,140 --> 00:03:02,700
able to say give me whatever executable

00:03:00,690 --> 00:03:04,410
available usually on mixed packages but

00:03:02,700 --> 00:03:06,900
give me the static version of that so we

00:03:04,410 --> 00:03:08,400
want to make static linking very very

00:03:06,900 --> 00:03:11,040
easy not only for Haskell but for

00:03:08,400 --> 00:03:12,750
everything else and yeah if you want to

00:03:11,040 --> 00:03:15,630
deploy something very easily this might

00:03:12,750 --> 00:03:18,530
be a thing for you and so wherever you

00:03:15,630 --> 00:03:21,959
can please help us get this done and

00:03:18,530 --> 00:03:25,260
lead to the return of static linking on

00:03:21,959 --> 00:03:31,619
Linux that's it

00:03:25,260 --> 00:03:31,619

YouTube URL: https://www.youtube.com/watch?v=7hQOiut_MiA


