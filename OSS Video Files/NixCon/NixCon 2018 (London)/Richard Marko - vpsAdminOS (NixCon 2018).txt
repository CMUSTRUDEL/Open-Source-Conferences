Title: Richard Marko - vpsAdminOS (NixCon 2018)
Publication date: 2018-11-08
Playlist: NixCon 2018 (London)
Description: 
	Description:Building a lightweight hypervisor for Linux system containers on top of NixOS and not-os. How we adopted Nix ecosystem to allow migration of our production infrastructure from OpenVZ to LXC. More at https://vpsadminos.org/
---
Bio: Opensource software and hardware hacker - https://github.com/sorki
Captions: 
	00:00:00,740 --> 00:00:07,379
hey you see you're gonna you're gonna

00:00:04,500 --> 00:00:09,510
get two rounds of applause okay so next

00:00:07,379 --> 00:00:12,980
up is is Richard and Richard is going to

00:00:09,510 --> 00:00:15,960
talk about his project called VP as

00:00:12,980 --> 00:00:18,449
admin OS and it's a lightweight

00:00:15,960 --> 00:00:19,949
hypervisor for Linux system space on an

00:00:18,449 --> 00:00:22,260
Express and I'm looking forward to hear

00:00:19,949 --> 00:00:29,580
about it so another round of applause

00:00:22,260 --> 00:00:33,590
for Richard okay thank you very much

00:00:29,580 --> 00:00:37,070
no come to my talk so my name is Richard

00:00:33,590 --> 00:00:41,160
keyboard so a few words about me I'm a

00:00:37,070 --> 00:00:41,899
software another hacker you can find me

00:00:41,160 --> 00:00:45,329
on github

00:00:41,899 --> 00:00:53,809
some of you might know me as Sergey on

00:00:45,329 --> 00:00:56,789
IRC so related to our nonprofit

00:00:53,809 --> 00:00:58,680
organization called DPS free so we are

00:00:56,789 --> 00:01:01,859
based in czech republic we offer virtual

00:00:58,680 --> 00:01:05,820
private servers for other members we

00:01:01,859 --> 00:01:07,680
started with openvz in 2009 and you can

00:01:05,820 --> 00:01:11,130
find the site of the organization and

00:01:07,680 --> 00:01:13,290
the ps3 the orc so currently we have one

00:01:11,130 --> 00:01:15,689
thousand and three hundred members we

00:01:13,290 --> 00:01:17,759
are running nearly one thousand and nine

00:01:15,689 --> 00:01:22,170
hundred containers typically these are

00:01:17,759 --> 00:01:24,720
eight cores four gigs of memory and 20

00:01:22,170 --> 00:01:26,490
weeks of disk space right because you

00:01:24,720 --> 00:01:29,400
can work with that if you need more

00:01:26,490 --> 00:01:36,329
basically this is hosted on much larger

00:01:29,400 --> 00:01:38,640
machines with like currently and we host

00:01:36,329 --> 00:01:41,990
these all these containers only on 22

00:01:38,640 --> 00:01:45,270
servers whose pass-through storage nodes

00:01:41,990 --> 00:01:48,630
so what's the deal about open busy open

00:01:45,270 --> 00:01:50,310
easy is problematic for us we are

00:01:48,630 --> 00:01:53,390
learning sitting on busy 6 which is

00:01:50,310 --> 00:01:56,280
going to be abundant very so soon

00:01:53,390 --> 00:02:00,540
vzzt is already abundant which is a tool

00:01:56,280 --> 00:02:04,170
to basically configure containers from

00:02:00,540 --> 00:02:07,259
user space also cap now is going to

00:02:04,170 --> 00:02:09,599
reach out quite soon now the kernel is 2

00:02:07,259 --> 00:02:12,000
point 6 point something very very very

00:02:09,599 --> 00:02:13,650
old and the open bt 7 is also

00:02:12,000 --> 00:02:15,440
problematic for us because

00:02:13,650 --> 00:02:18,569
there is no process transparency is not

00:02:15,440 --> 00:02:21,150
like open bc6 anymore like not the

00:02:18,569 --> 00:02:25,610
community and there are no sources it's

00:02:21,150 --> 00:02:29,220
based on 2007 and we don't want it

00:02:25,610 --> 00:02:33,209
so another issues we're starting hitting

00:02:29,220 --> 00:02:37,500
with these old kernel is that for

00:02:33,209 --> 00:02:40,079
example some distributions started to be

00:02:37,500 --> 00:02:42,840
problematic to upgrade because of some

00:02:40,079 --> 00:02:45,269
system D hardening for example we had to

00:02:42,840 --> 00:02:48,359
remove for example system core filter or

00:02:45,269 --> 00:02:50,370
memory Danny right execute from from

00:02:48,359 --> 00:02:52,049
stance every services so the

00:02:50,370 --> 00:02:55,650
distributions can still can boot and

00:02:52,049 --> 00:03:00,799
work again also mixes on other

00:02:55,650 --> 00:03:04,349
production note is also stuck in 1709

00:03:00,799 --> 00:03:05,790
that's also because of system Li and I

00:03:04,349 --> 00:03:08,909
think you deaf as well

00:03:05,790 --> 00:03:11,250
coughing vile people are debugging this

00:03:08,909 --> 00:03:13,590
I realized it with mixes you can

00:03:11,250 --> 00:03:16,109
actually get B sex life running

00:03:13,590 --> 00:03:20,400
container alive running system which is

00:03:16,109 --> 00:03:23,370
like wow crazy and I've actually managed

00:03:20,400 --> 00:03:24,950
to find the commit sometimes you hit the

00:03:23,370 --> 00:03:27,450
convinced they're not buildable but

00:03:24,950 --> 00:03:29,459
let's try the rare and I didn't

00:03:27,450 --> 00:03:31,440
automatically but you can like mark the

00:03:29,459 --> 00:03:33,859
revision manually and you arrive at the

00:03:31,440 --> 00:03:37,049
commit which actually breaks everything

00:03:33,859 --> 00:03:40,019
so we started searching for replacement

00:03:37,049 --> 00:03:43,769
I recognize been now full VM lugan fill

00:03:40,019 --> 00:03:45,900
like other containers not like

00:03:43,769 --> 00:03:58,049
containers with only one process but we

00:03:45,900 --> 00:04:01,049
are running a full system inside so we

00:03:58,049 --> 00:04:03,510
also need a reliable is a isolation due

00:04:01,049 --> 00:04:07,650
to security so other people don't see

00:04:03,510 --> 00:04:09,930
other people stuff don't see also they

00:04:07,650 --> 00:04:13,319
shouldn't be able to do anything to

00:04:09,930 --> 00:04:15,510
hosts we also need resource isolation so

00:04:13,319 --> 00:04:17,880
to apply some limits for example CP or

00:04:15,510 --> 00:04:21,150
networking limits if you are over doing

00:04:17,880 --> 00:04:24,140
something also we need powerful storage

00:04:21,150 --> 00:04:27,380
we are a ZFS house we have people that

00:04:24,140 --> 00:04:32,910
Andy has an administration

00:04:27,380 --> 00:04:35,310
so for landline Linux user namespace is

00:04:32,910 --> 00:04:39,210
a must for us what it does is basically

00:04:35,310 --> 00:04:41,250
dream ups your bit one in a container to

00:04:39,210 --> 00:04:45,180
some other bit which is not bit one on a

00:04:41,250 --> 00:04:47,400
host system and we also apply some

00:04:45,180 --> 00:04:50,430
additional protection layers there you

00:04:47,400 --> 00:04:52,380
can choose bit Alex II can choose

00:04:50,430 --> 00:04:54,360
between apparmor and as a Linux I

00:04:52,380 --> 00:04:56,610
selenium describe problematic because

00:04:54,360 --> 00:05:01,290
you need the policies for that and there

00:04:56,610 --> 00:05:04,530
is only few reference policies and I

00:05:01,290 --> 00:05:06,780
think gen 2 has some policy with a

00:05:04,530 --> 00:05:09,960
partner that's situations situation is

00:05:06,780 --> 00:05:13,650
quite easier so we chose that and we

00:05:09,960 --> 00:05:16,520
also run second if Alex see as well to

00:05:13,650 --> 00:05:20,970
limit some syscalls

00:05:16,520 --> 00:05:22,200
so we use Alexei Alexei is quite bare

00:05:20,970 --> 00:05:24,180
bones he knows how to start the

00:05:22,200 --> 00:05:27,030
container but you need to configure all

00:05:24,180 --> 00:05:29,880
the stuff manually basically you need to

00:05:27,030 --> 00:05:32,270
set user mappings you need to manage

00:05:29,880 --> 00:05:38,210
networking simony to manage C groups

00:05:32,270 --> 00:05:40,770
it's quite hard to manage by hand so

00:05:38,210 --> 00:05:46,700
also powerful storage is I said we are

00:05:40,770 --> 00:05:48,420
ZFS soul house and I've used it because

00:05:46,700 --> 00:05:52,800
it's like most

00:05:48,420 --> 00:05:56,100
I hope solution we don't like to lose

00:05:52,800 --> 00:06:00,720
data we we have backups but you know if

00:05:56,100 --> 00:06:02,970
ZFS is much better also with new ZFS

00:06:00,720 --> 00:06:05,310
there's support for native encryption

00:06:02,970 --> 00:06:10,130
and we use send and receive for backups

00:06:05,310 --> 00:06:13,170
heavily so is the administration

00:06:10,130 --> 00:06:15,870
currently our systems like our managed

00:06:13,170 --> 00:06:20,160
if salt there are these that's basically

00:06:15,870 --> 00:06:23,220
sent of six nodes running openvz we

00:06:20,160 --> 00:06:29,760
decided that we want to go some more

00:06:23,220 --> 00:06:31,760
pure way I think I don't remember the

00:06:29,760 --> 00:06:35,090
right bird didn't like the congruent

00:06:31,760 --> 00:06:35,090
configuration management

00:06:37,210 --> 00:06:40,810
the machines we build the life images

00:06:39,460 --> 00:06:44,650
you don't have any surprises

00:06:40,810 --> 00:06:50,940
you know what's running is basically

00:06:44,650 --> 00:06:53,470
what's written in the repository so

00:06:50,940 --> 00:06:59,770
looking for something foundation to

00:06:53,470 --> 00:07:01,750
build upon and heading so minimize miss

00:06:59,770 --> 00:07:05,259
Nick's OS sorry for the colors of the

00:07:01,750 --> 00:07:06,940
water I will skip that I made this we

00:07:05,259 --> 00:07:08,910
can build our own software we don't need

00:07:06,940 --> 00:07:14,949
for our companies to do that for us

00:07:08,910 --> 00:07:18,070
thanks to mixes and so we also not quite

00:07:14,949 --> 00:07:19,660
based the system on mixes it's also

00:07:18,070 --> 00:07:22,930
based on mixes and also based on

00:07:19,660 --> 00:07:27,340
notarized thanks to clever I have the

00:07:22,930 --> 00:07:28,960
chance to meet you already so thank you

00:07:27,340 --> 00:07:32,650
very much for your support for for

00:07:28,960 --> 00:07:35,319
examples of like how to like make your

00:07:32,650 --> 00:07:38,440
own OS on top of mix big packages

00:07:35,319 --> 00:07:42,310
so basically when people ask about

00:07:38,440 --> 00:07:45,130
relations to mix notarize I told them

00:07:42,310 --> 00:07:53,440
the the mix is basically one a huge

00:07:45,130 --> 00:07:59,680
repository of packages and so notice not

00:07:53,440 --> 00:08:03,909
OS actually uses that as I said it's

00:07:59,680 --> 00:08:07,800
made by was made by clever apart from

00:08:03,909 --> 00:08:10,270
the small run it based system that

00:08:07,800 --> 00:08:15,039
compounds down to 50 megabytes costs

00:08:10,270 --> 00:08:17,949
image it also supports booting from a

00:08:15,039 --> 00:08:23,159
pixie actually signed I pick C which is

00:08:17,949 --> 00:08:23,159
quite nice and clever has some examples

00:08:29,310 --> 00:08:36,880
quite similar to notice we also run it

00:08:32,260 --> 00:08:41,820
obvious mainline Linux Alexei Alexei FS

00:08:36,880 --> 00:08:44,140
and so critical thing for us was that we

00:08:41,820 --> 00:08:48,340
they need to be able to alter any

00:08:44,140 --> 00:08:50,650
component easily quickly

00:08:48,340 --> 00:08:54,190
elderly have some patches on top of

00:08:50,650 --> 00:09:00,100
Colonel on top of phallic CFS and also

00:08:54,190 --> 00:09:05,010
from on top of CFS currently each note

00:09:00,100 --> 00:09:07,620
has basically image built from single

00:09:05,010 --> 00:09:13,360
mix-up suppository

00:09:07,620 --> 00:09:16,690
this is deployed with netboot server

00:09:13,360 --> 00:09:21,550
which hosts all the images for every

00:09:16,690 --> 00:09:24,580
note we also support its own imagery so

00:09:21,550 --> 00:09:26,440
you can also boot from any of the other

00:09:24,580 --> 00:09:29,140
media if you don't want to run the

00:09:26,440 --> 00:09:33,070
full-fledged like deployment and reuse

00:09:29,140 --> 00:09:34,720
mix-ups in full control we had some

00:09:33,070 --> 00:09:37,450
issues I'm actually quite heavy user of

00:09:34,720 --> 00:09:39,460
mix-ups now we have some patches there

00:09:37,450 --> 00:09:42,970
are mostly collected community patches

00:09:39,460 --> 00:09:45,880
for example dress patch that we can mix

00:09:42,970 --> 00:09:48,340
two versions of nick's bok-goo so we can

00:09:45,880 --> 00:09:50,220
basically deploy machines you can deploy

00:09:48,340 --> 00:09:52,510
mixes machines and you can also deploy

00:09:50,220 --> 00:10:01,900
VPS at minimize meshes from one

00:09:52,510 --> 00:10:06,070
repository and the most important part

00:10:01,900 --> 00:10:09,910
is the management utility written by our

00:10:06,070 --> 00:10:13,120
colleague writer which is very powerful

00:10:09,910 --> 00:10:15,450
manages all the stuff we actually you

00:10:13,120 --> 00:10:18,280
actually need for running containers

00:10:15,450 --> 00:10:20,200
mainly user name space up or control

00:10:18,280 --> 00:10:22,390
group management content management

00:10:20,200 --> 00:10:28,110
itself you can manage devices for

00:10:22,390 --> 00:10:31,480
example you can add KVM or top devices

00:10:28,110 --> 00:10:33,220
also we added recently added a partner

00:10:31,480 --> 00:10:34,690
profile generation and management so we

00:10:33,220 --> 00:10:39,340
can have different apparmor profiles

00:10:34,690 --> 00:10:43,030
depending on watch this important for

00:10:39,340 --> 00:10:43,810
example some people are asking about

00:10:43,030 --> 00:10:46,690
Dockers

00:10:43,810 --> 00:10:50,530
or for example docker is quite hard to

00:10:46,690 --> 00:10:55,720
run on this old colonel on open bc 6 so

00:10:50,530 --> 00:10:58,230
people were running it on in KVM

00:10:55,720 --> 00:10:58,230
basically

00:10:58,450 --> 00:11:03,470
QA more inside

00:11:01,670 --> 00:11:06,350
there you can do whatever you want

00:11:03,470 --> 00:11:12,740
because if you need new kernel there's

00:11:06,350 --> 00:11:14,750
like no other option also and do network

00:11:12,740 --> 00:11:17,060
management we have two types of network

00:11:14,750 --> 00:11:19,160
configurations simple bridge networking

00:11:17,060 --> 00:11:22,550
and routing networking it also handles

00:11:19,160 --> 00:11:26,050
migrations so if you have older

00:11:22,550 --> 00:11:29,120
configuration of your containers it can

00:11:26,050 --> 00:11:31,940
during update it can update and migrate

00:11:29,120 --> 00:11:34,040
these configurations because we need to

00:11:31,940 --> 00:11:38,420
be able to run the machines for example

00:11:34,040 --> 00:11:43,330
for half a year without the reboot we

00:11:38,420 --> 00:11:49,640
also provide template Reaper histories I

00:11:43,330 --> 00:11:53,600
will show this in demo so kickstart for

00:11:49,640 --> 00:11:56,780
example when you boot the OS right quick

00:11:53,600 --> 00:11:59,360
way to actually the container is these

00:11:56,780 --> 00:12:04,820
few comments I will leave this exercise

00:11:59,360 --> 00:12:07,700
for either a first command basically in

00:12:04,820 --> 00:12:12,130
its initializes your ZFS pool then you

00:12:07,700 --> 00:12:20,360
need to create a user this mapping means

00:12:12,130 --> 00:12:27,940
user and group ID is maps to ID 5 no no

00:12:20,360 --> 00:12:31,190
I know the actual user I think that's

00:12:27,940 --> 00:12:33,170
IDs these IDs are 5000 and there are

00:12:31,190 --> 00:12:38,810
actually offset it by the six six six

00:12:33,170 --> 00:12:41,150
thousand offset which means that if you

00:12:38,810 --> 00:12:43,910
look at the container or from the host

00:12:41,150 --> 00:12:47,000
site you will see that it's it's start

00:12:43,910 --> 00:12:48,950
at six six six thousand but from the

00:12:47,000 --> 00:12:52,610
inside you have a bit one you still have

00:12:48,950 --> 00:12:56,080
bit one so when you have your user you

00:12:52,610 --> 00:13:00,920
can start the container for example

00:12:56,080 --> 00:13:04,610
table mixes and what's missing is you

00:13:00,920 --> 00:13:07,100
want probably contiguous networking the

00:13:04,610 --> 00:13:12,560
simplest way is to use provided bridge

00:13:07,100 --> 00:13:14,540
or we stop Alex CBR 0 by default this

00:13:12,560 --> 00:13:18,440
runs DHCP so

00:13:14,540 --> 00:13:19,490
by running because this simple net if

00:13:18,440 --> 00:13:23,110
Newbridge command

00:13:19,490 --> 00:13:26,589
I missed important thing I don't have to

00:13:23,110 --> 00:13:29,660
repeat the OS CDL over and over again

00:13:26,589 --> 00:13:31,579
you can like skip it and called sub

00:13:29,660 --> 00:13:34,490
commands we found that over and over

00:13:31,579 --> 00:13:36,890
again I recently added I recently added

00:13:34,490 --> 00:13:41,420
tap compilation so this is also quite

00:13:36,890 --> 00:13:43,399
pleasant to use and also there's a way

00:13:41,420 --> 00:13:46,339
to configure routed networking which we

00:13:43,399 --> 00:13:51,040
actually use in production to be able to

00:13:46,339 --> 00:13:57,380
assign like public addresses public ipv4

00:13:51,040 --> 00:13:59,570
to containers so what's cool as well

00:13:57,380 --> 00:14:01,220
is that we can do blasting galaxy so we

00:13:59,570 --> 00:14:05,420
can run contenders in containers in

00:14:01,220 --> 00:14:11,209
containers or for example we can run KVM

00:14:05,420 --> 00:14:12,980
even fully built inside containers so

00:14:11,209 --> 00:14:16,550
there's basically endless possibilities

00:14:12,980 --> 00:14:18,620
can you do there's also an example how

00:14:16,550 --> 00:14:20,480
to basically pass a device to a

00:14:18,620 --> 00:14:30,019
container this example it just passes

00:14:20,480 --> 00:14:35,600
the AVM and after that so always like

00:14:30,019 --> 00:14:37,850
some batteries included : our syslog and

00:14:35,600 --> 00:14:40,370
tcp forwarding use Greylock to collect

00:14:37,850 --> 00:14:47,029
these logs it's quite nice because after

00:14:40,370 --> 00:14:49,970
the national site we also use node

00:14:47,029 --> 00:14:54,589
exporter and clematis in graph ala bird

00:14:49,970 --> 00:14:59,360
for routing and FS for to be able to

00:14:54,589 --> 00:15:03,589
mount net regular storage only for time

00:14:59,360 --> 00:15:05,660
and also that's also quite useful

00:15:03,589 --> 00:15:10,730
because when you have like a note and

00:15:05,660 --> 00:15:12,529
you need to find some piece of software

00:15:10,730 --> 00:15:15,050
is missing you can just enter the next

00:15:12,529 --> 00:15:17,329
shell and after the shell we can just go

00:15:15,050 --> 00:15:21,380
a code collect garbage and the system is

00:15:17,329 --> 00:15:25,760
like before there's no craft left

00:15:21,380 --> 00:15:28,430
so this is all nice but we won't view

00:15:25,760 --> 00:15:30,170
like to migrate the volkl Astra and we

00:15:28,430 --> 00:15:31,910
need some notes that will actually have

00:15:30,170 --> 00:15:34,760
some persistence because you can rely

00:15:31,910 --> 00:15:37,070
like chicken egg problem we can netboot

00:15:34,760 --> 00:15:40,810
when you don't have a netbook so our

00:15:37,070 --> 00:15:45,020
storage nodes will actually be installed

00:15:40,810 --> 00:15:48,020
we actually recycled quite quite large

00:15:45,020 --> 00:15:52,370
parts of mixes generate config and mixes

00:15:48,020 --> 00:15:55,490
install is like actually I'd interesting

00:15:52,370 --> 00:16:02,690
that you can take these things and they

00:15:55,490 --> 00:16:05,740
just really small small changes you can

00:16:02,690 --> 00:16:09,830
optionally install this to disk and also

00:16:05,740 --> 00:16:12,200
as I said we need to be able to update

00:16:09,830 --> 00:16:14,060
the machines not only reboot them

00:16:12,200 --> 00:16:19,390
because people if there are like

00:16:14,060 --> 00:16:23,600
hundreds running on them so you

00:16:19,390 --> 00:16:27,440
implement it ever all I switch the

00:16:23,600 --> 00:16:30,650
configuration not sure which one is the

00:16:27,440 --> 00:16:34,190
configuration but this thing also

00:16:30,650 --> 00:16:35,960
handles run it restarting running

00:16:34,190 --> 00:16:38,810
services or reloading running services

00:16:35,960 --> 00:16:41,680
and important most importantly it

00:16:38,810 --> 00:16:46,130
reloads Alex TFS which can be like

00:16:41,680 --> 00:16:49,040
signal and the load its new library

00:16:46,130 --> 00:17:00,440
without actually destroying all your

00:16:49,040 --> 00:17:03,080
Alex EFS also if you have the nation'

00:17:00,440 --> 00:17:09,140
installed you can manage is just like

00:17:03,080 --> 00:17:11,930
mixes and generic to rebuild which this

00:17:09,140 --> 00:17:13,220
cry - no - mixes rebuilds also we have

00:17:11,930 --> 00:17:16,310
our own version of the quality of

00:17:13,220 --> 00:17:17,960
containers these are different to mixes

00:17:16,310 --> 00:17:22,780
the quality of content is that they are

00:17:17,960 --> 00:17:26,510
imported by the OSS ETL demon on boot

00:17:22,780 --> 00:17:28,370
actually syntax is quite like similar

00:17:26,510 --> 00:17:31,360
you can actually define a user as well

00:17:28,370 --> 00:17:35,740
which the container is running Andra

00:17:31,360 --> 00:17:37,990
and how it works that it actually the

00:17:35,740 --> 00:17:40,450
images are part of the image that

00:17:37,990 --> 00:17:46,990
machine boots and on boots they are

00:17:40,450 --> 00:17:49,950
actually in copies to ZFS pools and

00:17:46,990 --> 00:17:49,950
started

00:17:55,680 --> 00:17:58,220
so

00:17:59,360 --> 00:18:05,530
oh it's what I want to say that's

00:18:02,000 --> 00:18:07,760
different to n spawn basically

00:18:05,530 --> 00:18:09,860
declarative containers that it's not

00:18:07,760 --> 00:18:12,860
shared with the host but there's also a

00:18:09,860 --> 00:18:16,700
way to update all the containers NYX

00:18:12,860 --> 00:18:18,230
machinery and so if you build a new

00:18:16,700 --> 00:18:19,610
version and you want to update your

00:18:18,230 --> 00:18:23,290
content as you can do that but they are

00:18:19,610 --> 00:18:28,670
persisted on ZFS pool so you can have

00:18:23,290 --> 00:18:30,350
backups I would actually want to this

00:18:28,670 --> 00:18:33,910
feature mainly for testing so I don't

00:18:30,350 --> 00:18:36,770
have to like start the containers

00:18:33,910 --> 00:18:38,540
manually on testing stuff so this is

00:18:36,770 --> 00:18:47,360
quite handy are just a few containers

00:18:38,540 --> 00:18:52,520
defined and so you can try it quite

00:18:47,360 --> 00:18:57,620
easily make you a new is just a wrapper

00:18:52,520 --> 00:19:00,590
for next build just a moment we actually

00:18:57,620 --> 00:19:02,840
have our own for govern expect G's but

00:19:00,590 --> 00:19:05,650
that currently contains one cosmetic

00:19:02,840 --> 00:19:08,450
page which adds RB man pages basically

00:19:05,650 --> 00:19:10,910
there were like five patches on top of

00:19:08,450 --> 00:19:13,460
mix producer most of them there are

00:19:10,910 --> 00:19:15,620
upstream now I wish we could read the

00:19:13,460 --> 00:19:18,580
last page so you can build the upstream

00:19:15,620 --> 00:19:18,580
expect G's as well

00:19:20,940 --> 00:19:27,479
and some links rest very nice

00:19:25,440 --> 00:19:31,259
documentation only PS at minimus org you

00:19:27,479 --> 00:19:33,929
can find all these little things how to

00:19:31,259 --> 00:19:36,359
set up your machine out means to manage

00:19:33,929 --> 00:19:40,769
containers you can check out other

00:19:36,359 --> 00:19:45,720
repository actually actual OSS under the

00:19:40,769 --> 00:19:48,590
O / OS and you can talk to us on mixes

00:19:45,720 --> 00:19:53,940
channels or VPS of my newest channels

00:19:48,590 --> 00:19:56,759
and also recently I've also added images

00:19:53,940 --> 00:20:01,830
so these are also build with the netboot

00:19:56,759 --> 00:20:05,869
images for nodes public-facing website

00:20:01,830 --> 00:20:11,009
and all the required node images for

00:20:05,869 --> 00:20:13,889
plaster so to sum it up in production

00:20:11,009 --> 00:20:17,099
currently we have CentOS 6 with this old

00:20:13,889 --> 00:20:19,349
kernel and the environment account click

00:20:17,099 --> 00:20:24,059
on staging his VPS of mineralized links

00:20:19,349 --> 00:20:26,669
or 18 of we call it staging but we

00:20:24,059 --> 00:20:28,830
currently treated like production and I

00:20:26,669 --> 00:20:33,659
think that next year we'll start

00:20:28,830 --> 00:20:38,009
migrating quite heavily actually the

00:20:33,659 --> 00:20:41,340
missing feature is that we actually

00:20:38,009 --> 00:20:43,669
don't manage we don't use our CTL to

00:20:41,340 --> 00:20:47,549
create full-fledged

00:20:43,669 --> 00:20:50,159
admin panel for that and that's kind of

00:20:47,549 --> 00:20:53,700
future work basically to be able to

00:20:50,159 --> 00:20:57,470
deploy that as well so it basically

00:20:53,700 --> 00:21:00,029
talks to a demon and when user creates

00:20:57,470 --> 00:21:03,379
web interface you can create this new

00:21:00,029 --> 00:21:06,690
container define all the properties

00:21:03,379 --> 00:21:11,999
networking thank you are used to called

00:21:06,690 --> 00:21:14,729
providers and missing feature is

00:21:11,999 --> 00:21:16,799
actually the cloning between the old

00:21:14,729 --> 00:21:20,729
environments to the new one which is

00:21:16,799 --> 00:21:22,379
going to be probably troublesome but

00:21:20,729 --> 00:21:28,529
since these are only rodi effects images

00:21:22,379 --> 00:21:31,279
should be writable so also I mentioned

00:21:28,529 --> 00:21:35,309
this already all old class that was

00:21:31,279 --> 00:21:39,679
managed by salt salt I don't know I feel

00:21:35,309 --> 00:21:44,279
like it's like unsupportive templating I

00:21:39,679 --> 00:21:47,009
think that no no comment I actually

00:21:44,279 --> 00:21:48,539
actually use mix-ups and note exporter

00:21:47,009 --> 00:21:51,960
and dramatist there's one missing thing

00:21:48,539 --> 00:21:54,029
I don't like about this matrix based

00:21:51,960 --> 00:21:55,649
monitoring system is that they scrape

00:21:54,029 --> 00:21:57,809
the nation periodically

00:21:55,649 --> 00:22:01,039
but there is no way to get actual wife

00:21:57,809 --> 00:22:01,039
matrix to your laptop

00:22:16,800 --> 00:22:19,430
so

00:22:20,890 --> 00:22:25,320
find the correct place

00:22:28,440 --> 00:22:32,630
my manager

00:22:36,380 --> 00:22:39,400
since Thursday

00:22:41,800 --> 00:22:44,950
presentation on

00:22:49,409 --> 00:22:55,990
nevermind

00:22:51,770 --> 00:22:55,990
so I won't show you how to actually

00:23:03,030 --> 00:23:12,540
yes I have to use like external keyboard

00:23:06,750 --> 00:23:16,040
and also this or impress is throwing me

00:23:12,540 --> 00:23:16,040
now quite heavily

00:23:24,750 --> 00:23:34,770
No oh yeah there we go okay so this is

00:23:32,039 --> 00:23:36,299
the repository it actually is like kind

00:23:34,770 --> 00:23:39,780
of mono repo it contains all the

00:23:36,299 --> 00:23:45,510
utilities in always subfolder there's

00:23:39,780 --> 00:23:48,480
actually OS and also OS CTL which is a

00:23:45,510 --> 00:23:50,669
command line to link to which talks to

00:23:48,480 --> 00:23:54,419
or SCT I'll be these things are written

00:23:50,669 --> 00:23:56,580
in Ruby here heavy users of

00:23:54,419 --> 00:24:00,059
bandings as well there are some tooling

00:23:56,580 --> 00:24:09,510
basically make file only reps Nick's or

00:24:00,059 --> 00:24:12,150
bandits we also have SVC TL 2 which is

00:24:09,510 --> 00:24:16,559
Aden recently for managing run intern

00:24:12,150 --> 00:24:18,570
levels OS sub folder it's quite similar

00:24:16,559 --> 00:24:22,350
to not OS we've added a bunch of modules

00:24:18,570 --> 00:24:25,070
we reused bunch of modules from mixes

00:24:22,350 --> 00:24:28,710
for example we need get these we need

00:24:25,070 --> 00:24:34,740
BAM for example and all these batteries

00:24:28,710 --> 00:24:41,090
included stuff I mentioned so let's just

00:24:34,740 --> 00:24:41,090
run it you can build

00:24:45,190 --> 00:24:49,019
and after it

00:24:50,140 --> 00:24:53,700
your boot in a moment

00:24:59,860 --> 00:25:05,529
yeah so you can see it boot now I'd be

00:25:02,470 --> 00:25:07,809
autumn outwardly new so we made it try

00:25:05,529 --> 00:25:11,289
to make it easy for people to actually

00:25:07,809 --> 00:25:14,789
just run make um ooh and get the running

00:25:11,289 --> 00:25:21,130
system to be able to hack on it right

00:25:14,789 --> 00:25:28,980
SSH into it because of the terminal is

00:25:21,130 --> 00:25:28,980
quite bad never mind

00:25:34,200 --> 00:25:40,170
stop trolling me today and mine I will

00:25:37,230 --> 00:25:45,540
use this so I have two declarative

00:25:40,170 --> 00:25:50,550
containers that they're defined in a

00:25:45,540 --> 00:25:52,310
configuration actually looks he has some

00:25:50,550 --> 00:26:00,390
impurity called

00:25:52,310 --> 00:26:03,510
config local mix which you can just load

00:26:00,390 --> 00:26:05,640
it with your custom configuration as you

00:26:03,510 --> 00:26:08,880
can see it imports few containers which

00:26:05,640 --> 00:26:10,890
one one is simple is called web server

00:26:08,880 --> 00:26:19,440
so I don't have to create create any

00:26:10,890 --> 00:26:23,430
there's actually motd so you can just

00:26:19,440 --> 00:26:25,470
copy paste this well there you can see

00:26:23,430 --> 00:26:29,840
that we have running web server and some

00:26:25,470 --> 00:26:29,840
simple content both these are mixed so

00:26:32,600 --> 00:26:38,550
yeah I'll switch to some more other

00:26:36,750 --> 00:26:40,679
death note which there are some more

00:26:38,550 --> 00:26:43,620
stuff running you can see that you can

00:26:40,679 --> 00:26:46,020
run basically any distribution we try to

00:26:43,620 --> 00:26:54,179
support these most popular distribution

00:26:46,020 --> 00:26:57,890
and especially mixes for example you can

00:26:54,179 --> 00:26:57,890
enter the container

00:27:02,800 --> 00:27:05,400
yep

00:27:05,590 --> 00:27:09,990
yeah this one is not running let's find

00:27:07,720 --> 00:27:09,990
some

00:27:14,150 --> 00:27:24,440
what's this Alpine yeah

00:27:18,909 --> 00:27:35,960
so what I want to show you actually use

00:27:24,440 --> 00:27:49,460
hi dries well wait for some system you

00:27:35,960 --> 00:27:53,240
need to link and and the QA moon is just

00:27:49,460 --> 00:27:54,919
too good for some reason and when you

00:27:53,240 --> 00:27:56,990
actually test stuff on the real hardware

00:27:54,919 --> 00:27:59,919
stuff breaks and there are some race

00:27:56,990 --> 00:28:03,320
causation graphs and corner cases so

00:27:59,919 --> 00:28:05,870
what I'm trying to do it is like to

00:28:03,320 --> 00:28:08,330
create some like of virtual laboratory

00:28:05,870 --> 00:28:17,559
where you have machines actually take

00:28:08,330 --> 00:28:21,020
note is connected to UART

00:28:17,559 --> 00:28:26,419
to another machine which runs like some

00:28:21,020 --> 00:28:29,690
I won't go into details TCP to Syria

00:28:26,419 --> 00:28:33,169
bridge so I can just use this combo

00:28:29,690 --> 00:28:35,539
remotely and it's not all I can run on

00:28:33,169 --> 00:28:42,590
automation doing for that this is a

00:28:35,539 --> 00:28:45,370
prototype which will actually deploy use

00:28:42,590 --> 00:28:48,260
mix-ups to deploy others like

00:28:45,370 --> 00:28:51,440
development configuration and then it

00:28:48,260 --> 00:28:54,520
will actually cycle to know to write the

00:28:51,440 --> 00:28:54,520
reboot the console

00:28:56,380 --> 00:29:01,490
whoa whoa boot basically I think I could

00:29:00,380 --> 00:29:04,160
denote this as well

00:29:01,490 --> 00:29:08,120
one minute I'm not sure if that's if

00:29:04,160 --> 00:29:12,320
question or not yeah I'll just run this

00:29:08,120 --> 00:29:14,840
I hope it's not gonna build squash FS

00:29:12,320 --> 00:29:18,800
images again buddy

00:29:14,840 --> 00:29:21,080
and one last thing yeah this now it's

00:29:18,800 --> 00:29:28,010
running Nick sobs after it's done it

00:29:21,080 --> 00:29:30,320
will switch to another the second part

00:29:28,010 --> 00:29:36,770
which is sexual interaction with machine

00:29:30,320 --> 00:29:40,940
yeah it'll take some time but meanwhile

00:29:36,770 --> 00:29:42,650
yep no mind don't mind the name naming

00:29:40,940 --> 00:29:45,200
problem is quite hard but the point is

00:29:42,650 --> 00:29:48,140
that this is able to scrape the matrix

00:29:45,200 --> 00:29:59,270
from from primitives it's proof of

00:29:48,140 --> 00:30:01,840
concept I rely on some pre-made tools

00:29:59,270 --> 00:30:05,060
basically so this is life this is

00:30:01,840 --> 00:30:06,560
actually over HTTP currently but I want

00:30:05,060 --> 00:30:08,920
to use another back-end for that which I

00:30:06,560 --> 00:30:13,570
have developed it's called the SATA II

00:30:08,920 --> 00:30:13,570
some of you might know they know it

00:30:14,370 --> 00:30:21,539
yeah so that's pretty much it I leave

00:30:17,700 --> 00:30:26,520
this running so you can see how it works

00:30:21,539 --> 00:30:31,260
and how we reboot that allows me

00:30:26,520 --> 00:30:35,210
basically to deploy software on drives

00:30:31,260 --> 00:30:35,210
nodes and they will

00:30:38,220 --> 00:30:41,389
I think

00:30:46,910 --> 00:30:51,829
[Applause]

00:30:54,470 --> 00:31:10,940
yes and thank you indeed and who has got

00:30:58,160 --> 00:31:14,180
questions no yes hi very interesting

00:31:10,940 --> 00:31:17,840
stuff so you told that you're generating

00:31:14,180 --> 00:31:20,120
a pixie image and booting the servers

00:31:17,840 --> 00:31:23,390
essentially just over the net in an

00:31:20,120 --> 00:31:25,880
immutable mode but after that you told

00:31:23,390 --> 00:31:30,590
us about partitioning the disk and

00:31:25,880 --> 00:31:33,560
installing the OS anyway so what is the

00:31:30,590 --> 00:31:35,630
advantage of installing when you thought

00:31:33,560 --> 00:31:39,470
about that the real advantage is about

00:31:35,630 --> 00:31:40,910
not installing Hey I mean it's to solve

00:31:39,470 --> 00:31:42,590
this to collect problem because if you

00:31:40,910 --> 00:31:45,530
have a cluster like you need some

00:31:42,590 --> 00:31:48,290
machine which actually hosts the network

00:31:45,530 --> 00:31:51,590
server right now but you can use live

00:31:48,290 --> 00:31:53,720
images you can actually plug on some USB

00:31:51,590 --> 00:31:56,270
stick to to do that for you and that's

00:31:53,720 --> 00:31:59,450
quite that that's why we like want to

00:31:56,270 --> 00:32:02,000
have like installation so we can install

00:31:59,450 --> 00:32:05,180
the OS on two storage nodes for example

00:32:02,000 --> 00:32:10,730
and that will host the that boot images

00:32:05,180 --> 00:32:14,360
for the rest of the cluster and if other

00:32:10,730 --> 00:32:19,400
questions do we have questions from the

00:32:14,360 --> 00:32:20,390
internet I love saying that okay so I

00:32:19,400 --> 00:32:21,200
think you really very much more

00:32:20,390 --> 00:32:22,090
interesting talk

00:32:21,200 --> 00:32:30,309
thank you

00:32:22,090 --> 00:32:30,309

YouTube URL: https://www.youtube.com/watch?v=ZJnZv2TE5_Q


