Title: Lightning Talks (NixCon 2019)
Publication date: 2019-12-14
Playlist: NixCon 2019 (Brno)
Description: 
	
Captions: 
	00:00:06,270 --> 00:00:13,619
and let's get rolling we have about five

00:00:09,990 --> 00:00:25,310
of them I think first one is to mash

00:00:13,619 --> 00:00:31,949
with his next cluster hello again

00:00:25,310 --> 00:00:34,040
so I deploy a lot of servers in one of

00:00:31,949 --> 00:00:38,370
the companies I'm helping with variably

00:00:34,040 --> 00:00:43,199
we have like around 1000 hosts which is

00:00:38,370 --> 00:00:46,920
relatively fine and I used different

00:00:43,199 --> 00:00:49,500
kind of tools I use Knicks ups I use

00:00:46,920 --> 00:00:53,010
Terra forum CloudFormation whatever crap

00:00:49,500 --> 00:01:03,170
is on Azure and other of those Google

00:00:53,010 --> 00:01:07,680
services and they have some issues so

00:01:03,170 --> 00:01:11,609
the big gray box is just a tool right

00:01:07,680 --> 00:01:14,780
and it has fixed fixed logic for quite a

00:01:11,609 --> 00:01:18,000
few components one of them is fine and

00:01:14,780 --> 00:01:21,179
for me especially the rollout or deploy

00:01:18,000 --> 00:01:24,749
strategy which is hard-coded into those

00:01:21,179 --> 00:01:27,390
tools it's really really crap I have a

00:01:24,749 --> 00:01:30,049
lot of environments which are completely

00:01:27,390 --> 00:01:30,049
different right

00:01:35,010 --> 00:01:39,750
so first of all they have hard-coded

00:01:37,880 --> 00:01:43,500
abstractions I cannot create my own

00:01:39,750 --> 00:01:47,550
abstractions or maybe Nick shops is a

00:01:43,500 --> 00:01:49,140
little little easier but still the

00:01:47,550 --> 00:01:51,420
deployment strategy is fixed

00:01:49,140 --> 00:01:55,620
sometimes it's parameterized you can do

00:01:51,420 --> 00:01:59,220
parallel or sequential but can you

00:01:55,620 --> 00:02:00,810
inject your check for the database like

00:01:59,220 --> 00:02:03,360
you want to roll out your database you

00:02:00,810 --> 00:02:07,290
have 40 servers of Cassandra and you

00:02:03,360 --> 00:02:10,770
want to do one by one node and it takes

00:02:07,290 --> 00:02:15,110
like two days those tools are really not

00:02:10,770 --> 00:02:23,690
good for that and they are really buggy

00:02:15,110 --> 00:02:23,690
anybody used to refer like hell right so

00:02:24,380 --> 00:02:32,880
there is few few more sometimes you want

00:02:29,100 --> 00:02:38,040
to extend your tool and it's not always

00:02:32,880 --> 00:02:42,330
easy the state file is like another idea

00:02:38,040 --> 00:02:44,820
this concept should really die and there

00:02:42,330 --> 00:02:50,300
is more books everywhere so the idea

00:02:44,820 --> 00:02:56,910
would be to shift this tool into library

00:02:50,300 --> 00:03:00,390
so now the gray big box is our own tool

00:02:56,910 --> 00:03:03,780
so basically we use the pieces from

00:03:00,390 --> 00:03:07,950
other libraries to build our own stuff

00:03:03,780 --> 00:03:10,860
of course that makes it a little harder

00:03:07,950 --> 00:03:15,150
because a lot of glue and error handling

00:03:10,860 --> 00:03:17,940
is now on our side but that's not that

00:03:15,150 --> 00:03:21,750
bad and we can minimize it and we can

00:03:17,940 --> 00:03:23,580
try to figure it out how we can how we

00:03:21,750 --> 00:03:26,190
can minimize that and make it better

00:03:23,580 --> 00:03:28,620
so what that gives us if we switch from

00:03:26,190 --> 00:03:32,160
the framework to the library approach

00:03:28,620 --> 00:03:35,390
right we can integrate new abstractions

00:03:32,160 --> 00:03:38,760
faster we can describe whatever we want

00:03:35,390 --> 00:03:43,470
in the language we want we can put our

00:03:38,760 --> 00:03:47,459
own rollout strategy we can not use

00:03:43,470 --> 00:03:48,810
state file and we can integrate other

00:03:47,459 --> 00:03:51,239
clouds or

00:03:48,810 --> 00:03:54,959
cloud resources much faster than tools

00:03:51,239 --> 00:03:57,239
right the tool is there to make the pull

00:03:54,959 --> 00:04:00,599
request proper testing is like at least

00:03:57,239 --> 00:04:06,720
few weeks or months and then you can you

00:04:00,599 --> 00:04:08,250
have to fork it or something right so if

00:04:06,720 --> 00:04:09,780
we have different kind of deployments

00:04:08,250 --> 00:04:11,459
like Cassandra or elasticsearch

00:04:09,780 --> 00:04:14,370
sometimes you own the rest start cluster

00:04:11,459 --> 00:04:16,970
all note at once sometimes you won't

00:04:14,370 --> 00:04:19,790
deploy sequentially sometime you want to

00:04:16,970 --> 00:04:23,790
have a health check between deploying

00:04:19,790 --> 00:04:28,550
services sometime you want to just build

00:04:23,790 --> 00:04:30,930
an ami and change the cloud formation

00:04:28,550 --> 00:04:33,210
parameter just to update the auto

00:04:30,930 --> 00:04:36,180
scaling set and you really don't care

00:04:33,210 --> 00:04:37,680
about deploying through SSH itself like

00:04:36,180 --> 00:04:41,510
there are different methods and those

00:04:37,680 --> 00:04:41,510
tools are not supporting them at all so

00:04:42,169 --> 00:04:47,880
if we have those libraries then we have

00:04:45,120 --> 00:04:50,940
a lot of glue on our side that for error

00:04:47,880 --> 00:04:56,450
hand links and logic so how we can make

00:04:50,940 --> 00:04:56,450
it a lot more efficient

00:04:57,080 --> 00:05:07,680
so the error side is is a little simpler

00:05:04,940 --> 00:05:12,180
so as you see in both cases the user

00:05:07,680 --> 00:05:15,000
test coverage is the same right we have

00:05:12,180 --> 00:05:17,700
a little less coverage for testing -

00:05:15,000 --> 00:05:19,229
sorry for the tool but the user coverage

00:05:17,700 --> 00:05:21,210
is the same which is basically I have

00:05:19,229 --> 00:05:23,550
the input and what is the output is

00:05:21,210 --> 00:05:27,900
their role is the rollout did don't come

00:05:23,550 --> 00:05:30,240
completely well so so the error is fine

00:05:27,900 --> 00:05:32,669
we write our test case for that and we

00:05:30,240 --> 00:05:35,190
are if we want to switch from that tool

00:05:32,669 --> 00:05:38,970
is already done so how we minimize the

00:05:35,190 --> 00:05:41,370
glue and the logic so I wrote those two

00:05:38,970 --> 00:05:43,710
libraries they are really crap but I

00:05:41,370 --> 00:05:49,169
will be developing them for for another

00:05:43,710 --> 00:05:51,900
weeks so hopefully will be usable so the

00:05:49,169 --> 00:05:53,639
idea is to develop Bosch tools

00:05:51,900 --> 00:05:55,889
really really fast there is few

00:05:53,639 --> 00:05:58,169
libraries like that already so probably

00:05:55,889 --> 00:06:00,360
you can use them if you prefer it's

00:05:58,169 --> 00:06:03,150
basically demonstrating the concept only

00:06:00,360 --> 00:06:05,760
so it's similar to get right

00:06:03,150 --> 00:06:08,790
you have your whatever CTL or admin tool

00:06:05,760 --> 00:06:11,790
you have subcommands this is the main

00:06:08,790 --> 00:06:14,729
application you define just description

00:06:11,790 --> 00:06:17,970
and main and that's it like the other

00:06:14,729 --> 00:06:20,820
scrap and here you define the comment

00:06:17,970 --> 00:06:22,979
number one you define four options you

00:06:20,820 --> 00:06:26,370
define description and you run main and

00:06:22,979 --> 00:06:28,800
then you your logic for your cloud is

00:06:26,370 --> 00:06:31,970
just one line here but I will

00:06:28,800 --> 00:06:38,150
demonstrate it in something more cool so

00:06:31,970 --> 00:06:43,220
that was a library for bash to produce

00:06:38,150 --> 00:06:46,830
CLI interfaces quickly and now X cluster

00:06:43,220 --> 00:06:50,610
so this is just a set of functions

00:06:46,830 --> 00:06:52,949
mostly bash like this where you have

00:06:50,610 --> 00:06:58,320
something specific sets of requirements

00:06:52,949 --> 00:07:00,090
you want to deliver so in this case you

00:06:58,320 --> 00:07:03,180
have Cassandra in docker and you have

00:07:00,090 --> 00:07:05,090
Nix OS on vsh right and then you have

00:07:03,180 --> 00:07:08,669
everything inside and you can use them

00:07:05,090 --> 00:07:11,490
you can develop your own those those

00:07:08,669 --> 00:07:15,270
files don't have more than like ten

00:07:11,490 --> 00:07:20,639
lines of code pretty reusable so how we

00:07:15,270 --> 00:07:22,380
want to implement stuff for example we

00:07:20,639 --> 00:07:24,930
have our main command which is in this

00:07:22,380 --> 00:07:29,550
example the first one and then we have

00:07:24,930 --> 00:07:31,650
subt commands later okay so we have some

00:07:29,550 --> 00:07:37,349
implementation details here so how we do

00:07:31,650 --> 00:07:39,030
that okay if we have only okay so this

00:07:37,349 --> 00:07:42,960
is the probably the most important stuff

00:07:39,030 --> 00:07:44,940
we write one command we have four

00:07:42,960 --> 00:07:47,690
options like name node ID Knicks

00:07:44,940 --> 00:07:52,590
expression SSH private key path and then

00:07:47,690 --> 00:07:55,199
we source the implementation in the last

00:07:52,590 --> 00:07:57,630
line and the implementation is really

00:07:55,199 --> 00:08:00,060
just a few lines of bash which does the

00:07:57,630 --> 00:08:05,340
job so instead of using terraform or

00:08:00,060 --> 00:08:08,820
whatever let's use AWS CLI our CLI

00:08:05,340 --> 00:08:11,010
Google CLI to to deliver the cloud bash

00:08:08,820 --> 00:08:12,740
on local the tools that are working

00:08:11,010 --> 00:08:15,719
there are mature that are delivered by

00:08:12,740 --> 00:08:17,070
integrators and don't produce much code

00:08:15,719 --> 00:08:18,990
make it a simple spot

00:08:17,070 --> 00:08:29,790
Cybil and use libraries instead of

00:08:18,990 --> 00:08:31,590
frameworks thank you next up is large

00:08:29,790 --> 00:08:33,390
yellamma with mocha what makes an X

00:08:31,590 --> 00:08:35,370
formatter and I would like to remind

00:08:33,390 --> 00:08:37,289
lightning talk speakers to please keep a

00:08:35,370 --> 00:08:45,229
track of the timer over there don't run

00:08:37,289 --> 00:08:45,229
over time this one on

00:09:16,180 --> 00:09:23,310
all right

00:09:18,960 --> 00:09:28,740
then so hi I'm Lars I'm known get up as

00:09:23,310 --> 00:09:30,510
Lucas 16 I work at zero Cal and sirico

00:09:28,740 --> 00:09:32,430
asked me about eight months ago to

00:09:30,510 --> 00:09:35,180
create a formatter for Nix as there

00:09:32,430 --> 00:09:39,810
weren't any good for monsters back then

00:09:35,180 --> 00:09:42,149
so I went out and did that that was my

00:09:39,810 --> 00:09:45,089
task and I had to wonder how do you

00:09:42,149 --> 00:09:48,779
build a formatter so I started with just

00:09:45,089 --> 00:09:51,959
a parser and pretty printer and then I

00:09:48,779 --> 00:09:56,940
had to wonder how how do you determine

00:09:51,959 --> 00:09:57,950
the rules that determine how when stuff

00:09:56,940 --> 00:10:00,839
is pretty

00:09:57,950 --> 00:10:02,279
so obviously you first look at the

00:10:00,839 --> 00:10:04,920
common practices but there are still

00:10:02,279 --> 00:10:10,200
multiple styles used not everybody uses

00:10:04,920 --> 00:10:12,570
the same style and there's a few choices

00:10:10,200 --> 00:10:16,830
you can make so one is to do very

00:10:12,570 --> 00:10:19,230
specific conversions so you you just

00:10:16,830 --> 00:10:25,110
keep all the formatting that is in the

00:10:19,230 --> 00:10:29,779
original file you fix specific parts of

00:10:25,110 --> 00:10:33,000
ugly that you don't like and this

00:10:29,779 --> 00:10:36,180
doesn't change too much so you have more

00:10:33,000 --> 00:10:40,440
control but you also need to spend more

00:10:36,180 --> 00:10:45,529
manual efforts to format the file

00:10:40,440 --> 00:10:45,529
because it doesn't cover all cases so

00:10:48,020 --> 00:10:56,430
you might still end up with mixed

00:10:50,640 --> 00:11:00,450
formats from different sources and what

00:10:56,430 --> 00:11:02,790
this means is that the output is very

00:11:00,450 --> 00:11:06,300
consistent when you make like edits to

00:11:02,790 --> 00:11:10,440
your source file but the output is not

00:11:06,300 --> 00:11:13,100
as consistent between files from very

00:11:10,440 --> 00:11:13,100
different repositories

00:11:15,650 --> 00:11:19,850
so the other approach is total

00:11:18,260 --> 00:11:21,950
conversion so you throw away all the

00:11:19,850 --> 00:11:23,870
formatting it was in the original file

00:11:21,950 --> 00:11:25,900
and take it to a bound approach you

00:11:23,870 --> 00:11:28,490
start formatting everything from scratch

00:11:25,900 --> 00:11:31,250
which is the approach I've taken for

00:11:28,490 --> 00:11:32,980
next formats you might have heard about

00:11:31,250 --> 00:11:37,190
it

00:11:32,980 --> 00:11:39,890
so this forces you to implement

00:11:37,190 --> 00:11:41,870
formatting for everything and that also

00:11:39,890 --> 00:11:45,980
means you no longer need to think about

00:11:41,870 --> 00:11:47,660
what kind of you you no longer need to

00:11:45,980 --> 00:11:53,810
do any manual for one thing so you can

00:11:47,660 --> 00:11:55,490
just fire and forget it and the

00:11:53,810 --> 00:11:58,850
advantage of that is that it's like

00:11:55,490 --> 00:12:00,860
consistent based on the inputs so if you

00:11:58,850 --> 00:12:03,170
have files from two very different

00:12:00,860 --> 00:12:07,000
developers that look similar that all

00:12:03,170 --> 00:12:09,860
the codes will look familiar the diffs

00:12:07,000 --> 00:12:14,180
might get a little larger because of

00:12:09,860 --> 00:12:17,029
that when you edit files but there are

00:12:14,180 --> 00:12:18,680
the ways to get around that like you can

00:12:17,029 --> 00:12:23,500
ignore white space so we've get the F

00:12:18,680 --> 00:12:26,390
and it'll it will go and be as large and

00:12:23,500 --> 00:12:27,860
the reason why it is actually doable and

00:12:26,390 --> 00:12:31,910
Nix is because next is a pretty simple

00:12:27,860 --> 00:12:34,430
language and so there's there's few

00:12:31,910 --> 00:12:40,250
enough cases that you can actually get

00:12:34,430 --> 00:12:42,550
good formatting for all of them there's

00:12:40,250 --> 00:12:47,709
also something you have to think about

00:12:42,550 --> 00:12:51,830
which is clarity versus prettiness so

00:12:47,709 --> 00:12:54,920
it's very tempting to make every piece

00:12:51,830 --> 00:12:59,150
of code very pretty I like aligning all

00:12:54,920 --> 00:13:00,650
the assignment operators but that also

00:12:59,150 --> 00:13:03,020
takes a lot more work because it could

00:13:00,650 --> 00:13:05,480
puter cons always guess what's ready for

00:13:03,020 --> 00:13:15,920
you but it can understand what is clear

00:13:05,480 --> 00:13:18,589
so when when the code is when when code

00:13:15,920 --> 00:13:22,430
is I'll give an example actually

00:13:18,589 --> 00:13:24,200
so in our expressions the pretty

00:13:22,430 --> 00:13:27,680
printing library are used originally

00:13:24,200 --> 00:13:29,000
which is used mostly in Haskell it does

00:13:27,680 --> 00:13:31,850
this

00:13:29,000 --> 00:13:37,970
it does the one on the left the bad

00:13:31,850 --> 00:13:40,940
parts so it really wants to alright it

00:13:37,970 --> 00:13:45,170
really wants to fit as much as possible

00:13:40,940 --> 00:13:47,030
in a small space and it will actually

00:13:45,170 --> 00:13:51,080
split the inner expression which is just

00:13:47,030 --> 00:13:53,660
call rather than doing what's on the

00:13:51,080 --> 00:13:56,420
right and splitting on logical parts of

00:13:53,660 --> 00:13:58,940
the expression so I prefer that and

00:13:56,420 --> 00:14:01,730
that's why I had to change the pretty

00:13:58,940 --> 00:14:06,200
printing algorithm from the standard one

00:14:01,730 --> 00:14:09,110
in Haskell and actually what I like the

00:14:06,200 --> 00:14:10,910
best is this because the operators and

00:14:09,110 --> 00:14:17,000
the keywords are on the left and you can

00:14:10,910 --> 00:14:20,030
more easily scan the code yeah that was

00:14:17,000 --> 00:14:22,190
pretty much the entire talk so thank you

00:14:20,030 --> 00:14:23,750
all for listening and if you have any

00:14:22,190 --> 00:14:25,250
questions please come and see me after

00:14:23,750 --> 00:14:27,660
the lightning talks

00:14:25,250 --> 00:14:34,960
I'd love to talk to you

00:14:27,660 --> 00:14:34,960
[Applause]

00:15:18,320 --> 00:15:25,600
so next up is you in chat ski with Nick

00:15:21,620 --> 00:15:25,600
Scooby visualizing Nick scope and store

00:15:25,900 --> 00:15:29,919
[Applause]

00:15:30,100 --> 00:15:39,139
hello Nick sirs I want to talk about my

00:15:36,380 --> 00:15:40,579
project maybe not even a project yet but

00:15:39,139 --> 00:15:43,130
idea for hackaday

00:15:40,579 --> 00:15:48,730
although there is already some amount of

00:15:43,130 --> 00:15:48,730
work in code and work in application so

00:15:49,449 --> 00:16:00,620
when I started using ningke's and dive

00:15:53,810 --> 00:16:02,959
in deeper into the language I thought it

00:16:00,620 --> 00:16:05,569
would be a good idea to write something

00:16:02,959 --> 00:16:11,029
which would make this task easier for

00:16:05,569 --> 00:16:12,920
others and the more ambitious goal is to

00:16:11,029 --> 00:16:21,259
make something which could be usable as

00:16:12,920 --> 00:16:24,860
an installer so because I'm mostly

00:16:21,259 --> 00:16:27,860
familiar familiar with Python and QT has

00:16:24,860 --> 00:16:31,459
better multi-platform reputation and

00:16:27,860 --> 00:16:33,560
it's also not hardly bound to graphical

00:16:31,459 --> 00:16:36,260
interface and I hope it is possible to

00:16:33,560 --> 00:16:43,930
reuse modules for something like n

00:16:36,260 --> 00:16:43,930
courses I have just bite unless QT and

00:16:45,940 --> 00:16:55,180
so what should it what the GUI for

00:16:50,449 --> 00:16:59,980
ningke's should look like so I think

00:16:55,180 --> 00:17:03,199
users would expect some kind of tree

00:16:59,980 --> 00:17:05,720
visualizing the scope the attributes and

00:17:03,199 --> 00:17:11,780
allowing to read the descriptions and

00:17:05,720 --> 00:17:16,669
set values and here is what Nix has

00:17:11,780 --> 00:17:21,520
there is a flow and there are a few

00:17:16,669 --> 00:17:25,569
problems about this because for example

00:17:21,520 --> 00:17:30,549
there is no such thing as canonical path

00:17:25,569 --> 00:17:30,549
in the scope because

00:17:30,550 --> 00:17:38,320
one thing can be accessed can be

00:17:33,910 --> 00:17:44,130
accessed via multiple paths which is

00:17:38,320 --> 00:17:48,760
used a lot in the scope and it also

00:17:44,130 --> 00:17:51,250
pollutes outputs of Nick search a lot so

00:17:48,760 --> 00:17:54,300
you can see in search results for

00:17:51,250 --> 00:17:57,430
example just nixb cookies VLC and

00:17:54,300 --> 00:18:00,130
something like minks packages leaps for

00:17:57,430 --> 00:18:03,130
cutie VLC and it's the same thing and

00:18:00,130 --> 00:18:11,190
when you're new to ningke's it makes

00:18:03,130 --> 00:18:15,580
quite a confusion then there is a result

00:18:11,190 --> 00:18:18,640
of computation derivations and output

00:18:15,580 --> 00:18:22,960
paths in the store and this transition

00:18:18,640 --> 00:18:28,900
is in fact irreversible it's a problem

00:18:22,960 --> 00:18:31,720
maybe that we cannot get the state of

00:18:28,900 --> 00:18:41,680
the scope which produced the current

00:18:31,720 --> 00:18:47,560
profile and I have started with the

00:18:41,680 --> 00:18:52,540
store browser which can currently be

00:18:47,560 --> 00:18:56,500
used to choose some profile or exact

00:18:52,540 --> 00:19:00,880
store path and see the dependency tree

00:18:56,500 --> 00:19:11,500
and different information about store

00:19:00,880 --> 00:19:16,150
paths and there is also some prototype

00:19:11,500 --> 00:19:20,920
for a scope browser which uses ningke's

00:19:16,150 --> 00:19:23,040
evaluate to list attributes and parses

00:19:20,920 --> 00:19:31,120
the JSON

00:19:23,040 --> 00:19:34,330
output I don't yet have a good solution

00:19:31,120 --> 00:19:38,410
for this absence of canonical attribute

00:19:34,330 --> 00:19:46,060
path problem but the idea is maybe we

00:19:38,410 --> 00:19:49,960
should just ignore ok I will be

00:19:46,060 --> 00:19:53,350
finishing if somebody of you have strong

00:19:49,960 --> 00:19:57,870
experience with QT r it would be nice to

00:19:53,350 --> 00:20:05,440
have a talk might be to verify that my

00:19:57,870 --> 00:20:07,860
approach is good enough thank you for

00:20:05,440 --> 00:20:07,860
your attention

00:20:09,970 --> 00:20:19,020
[Applause]

00:20:14,600 --> 00:20:22,280
and next up is mark mahute and you're I

00:20:19,020 --> 00:20:22,280
believe you're gonna talk about morph

00:20:23,480 --> 00:20:26,600
thank you

00:20:31,860 --> 00:20:39,600
okay thanks hello everyone so my name is

00:20:38,070 --> 00:20:42,299
Mark mahute and I'm working from a

00:20:39,600 --> 00:20:44,549
company called Satoshi Labs you probably

00:20:42,299 --> 00:20:46,769
know set of schlubs by the company

00:20:44,549 --> 00:20:50,159
behind the first cryptocurrency hardware

00:20:46,769 --> 00:20:52,080
wallet called tracer and today I'm going

00:20:50,159 --> 00:20:54,390
to show you how we are using more for

00:20:52,080 --> 00:20:58,769
our configuration management of our onyx

00:20:54,390 --> 00:21:00,450
instances so before I jump in can I just

00:20:58,769 --> 00:21:03,630
quickly ask how many of you are familiar

00:21:00,450 --> 00:21:06,899
with morph can you raise your hands ok

00:21:03,630 --> 00:21:09,990
so a lot of people that's good I so what

00:21:06,899 --> 00:21:11,730
is Worf morph I really like the project

00:21:09,990 --> 00:21:13,529
description which is just a fancy

00:21:11,730 --> 00:21:17,519
wrapper around the tools we are already

00:21:13,529 --> 00:21:19,710
using daily the features if you compare

00:21:17,519 --> 00:21:22,769
the system is multi host which is

00:21:19,710 --> 00:21:25,889
probably given it's stateless so

00:21:22,769 --> 00:21:27,510
compared to other configuration

00:21:25,889 --> 00:21:29,010
management tools such as Nix ops you

00:21:27,510 --> 00:21:31,350
don't need to store the state of the

00:21:29,010 --> 00:21:33,840
infrastructure which is really nice if

00:21:31,350 --> 00:21:35,639
you are working in a team it has a

00:21:33,840 --> 00:21:37,620
built-in health checks so after each

00:21:35,639 --> 00:21:40,980
Depot you can verify your info section

00:21:37,620 --> 00:21:44,010
is running as expected and it has a

00:21:40,980 --> 00:21:46,860
built-in way to manage your secret's out

00:21:44,010 --> 00:21:49,919
of the next or of course you can get it

00:21:46,860 --> 00:21:51,360
on this github URL and it's of course in

00:21:49,919 --> 00:21:57,299
expectation so you can install it

00:21:51,360 --> 00:21:59,760
directly ok so this is the our directory

00:21:57,299 --> 00:22:02,450
structure for our morph configuration if

00:21:59,760 --> 00:22:05,549
you are familiar with puppet you might

00:22:02,450 --> 00:22:09,750
be familiar with this as well as we

00:22:05,549 --> 00:22:11,760
brought some ideas from them domain file

00:22:09,750 --> 00:22:14,159
which is called by morph is infra dot

00:22:11,760 --> 00:22:17,370
nix and in this file we actually just

00:22:14,159 --> 00:22:19,559
import all of the files which we call

00:22:17,370 --> 00:22:22,620
profiles so each server each instance

00:22:19,559 --> 00:22:25,830
has its own profile in this profile file

00:22:22,620 --> 00:22:28,710
we store information that are specific

00:22:25,830 --> 00:22:31,559
to the host itself so things such as IP

00:22:28,710 --> 00:22:34,559
addresses host names but also hardware

00:22:31,559 --> 00:22:36,570
configuration and most importantly each

00:22:34,559 --> 00:22:40,020
of the profile files includes a number

00:22:36,570 --> 00:22:42,299
of roles by roles we are defining we can

00:22:40,020 --> 00:22:44,130
have like we have a common role where we

00:22:42,299 --> 00:22:46,080
define something for all of the hosts

00:22:44,130 --> 00:22:48,630
such as our default package set for

00:22:46,080 --> 00:22:51,630
example but each of the profile has a

00:22:48,630 --> 00:22:54,330
row specific for its function in this

00:22:51,630 --> 00:22:57,210
example we have the role database that

00:22:54,330 --> 00:23:00,330
is directly linked to this profile the

00:22:57,210 --> 00:23:03,450
roles are actually built from modules so

00:23:00,330 --> 00:23:07,200
each role is using any modules in this

00:23:03,450 --> 00:23:10,679
example engine X and we are also having

00:23:07,200 --> 00:23:12,990
a number of secret we all sing it crypt

00:23:10,679 --> 00:23:15,750
to manage our secrets so it's actually

00:23:12,990 --> 00:23:18,419
encrypted on the remote git server but

00:23:15,750 --> 00:23:23,429
we can work it work with it just like a

00:23:18,419 --> 00:23:25,740
plain file the workflow is really simple

00:23:23,429 --> 00:23:29,090
we just execute more built to build out

00:23:25,740 --> 00:23:31,590
all our derivation for all our servers

00:23:29,090 --> 00:23:34,740
the more push we'll just copy the

00:23:31,590 --> 00:23:37,080
closures to the remote servers and then

00:23:34,740 --> 00:23:38,970
we just the poised which is which which

00:23:37,080 --> 00:23:41,809
mean it just switched the configuration

00:23:38,970 --> 00:23:43,740
on all of the all of the instances

00:23:41,809 --> 00:23:45,840
interesting thing here what it does

00:23:43,740 --> 00:23:47,730
after after the switch is completed all

00:23:45,840 --> 00:23:50,309
Sohan running the health checks and in

00:23:47,730 --> 00:23:53,250
case any of those fails it is executing

00:23:50,309 --> 00:23:57,780
a rollback so we don't have much time

00:23:53,250 --> 00:23:59,610
we know how to fix stuff and ask you man

00:23:57,780 --> 00:24:02,250
we are using most often is to upload the

00:23:59,610 --> 00:24:04,830
secrets so what this does is just take

00:24:02,250 --> 00:24:06,840
all the secrets and just plainly copy

00:24:04,830 --> 00:24:09,360
them into place leaving them out of the

00:24:06,840 --> 00:24:12,000
next store it results any services that

00:24:09,360 --> 00:24:13,710
may be dependent on those files and

00:24:12,000 --> 00:24:15,510
lastly it's around the health checks

00:24:13,710 --> 00:24:20,850
against to see if everything is all

00:24:15,510 --> 00:24:23,250
right ok so that's all actually have

00:24:20,850 --> 00:24:24,929
something that's good so that's all here

00:24:23,250 --> 00:24:26,970
the demo files and you can catch up

00:24:24,929 --> 00:24:29,039
during the lunch if you want to talk

00:24:26,970 --> 00:24:31,409
more about morph I was really hoping we

00:24:29,039 --> 00:24:33,659
get like a full morph presentation but

00:24:31,409 --> 00:24:36,299
sadly the president sent me to talk so

00:24:33,659 --> 00:24:37,450
maybe next year we look at our John

00:24:36,299 --> 00:24:42,880
thank you

00:24:37,450 --> 00:24:46,130
[Applause]

00:24:42,880 --> 00:24:47,630
so next up is Alexander I don't know how

00:24:46,130 --> 00:24:49,940
to pronounce your surnames and I'm not

00:24:47,630 --> 00:24:59,210
even gonna try but he's gonna talk about

00:24:49,940 --> 00:25:05,660
running Knicks on Android and take it

00:24:59,210 --> 00:25:08,390
away hello hello for all of you who are

00:25:05,660 --> 00:25:10,880
found yourself staring at your Android

00:25:08,390 --> 00:25:14,300
phones and thinking okay I want to try

00:25:10,880 --> 00:25:16,880
running my familiar Linux stuff there

00:25:14,300 --> 00:25:18,920
you don't have to go full Samuel you

00:25:16,880 --> 00:25:21,820
don't have to go to mix OS Mobile root

00:25:18,920 --> 00:25:24,620
there are other approaches and other

00:25:21,820 --> 00:25:27,740
distributions pioneered it way earlier

00:25:24,620 --> 00:25:30,590
than us you can also go hardcore you can

00:25:27,740 --> 00:25:34,100
embrace Android not dish it but

00:25:30,590 --> 00:25:35,990
recompile all your these two with Bionic

00:25:34,100 --> 00:25:38,390
that means porting everything to a

00:25:35,990 --> 00:25:40,400
different Lipsy I think that's hardcore

00:25:38,390 --> 00:25:44,180
butter max does that good luck to them

00:25:40,400 --> 00:25:47,660
you can also get root and hammer your

00:25:44,180 --> 00:25:49,520
Android installation as hard so it will

00:25:47,660 --> 00:25:52,160
start resembling your distro more than

00:25:49,520 --> 00:25:55,610
Android that's also always an option for

00:25:52,160 --> 00:25:58,250
power users and you can go an easier way

00:25:55,610 --> 00:26:01,280
and just use user space root emulation

00:25:58,250 --> 00:26:04,160
and I want to tell you that sometimes

00:26:01,280 --> 00:26:06,740
the lowest hanging fruit is the rapist

00:26:04,160 --> 00:26:08,690
one I'm gonna skip all the boring

00:26:06,740 --> 00:26:11,210
details I will upload it somewhere and

00:26:08,690 --> 00:26:15,170
you will look it up later if you want to

00:26:11,210 --> 00:26:17,540
i wanted to frame it as a story this

00:26:15,170 --> 00:26:20,000
spring i wanted a lightweight travel

00:26:17,540 --> 00:26:22,010
laptop i didn't like anything that i

00:26:20,000 --> 00:26:24,380
could buy but i found a nice android

00:26:22,010 --> 00:26:26,060
tablet and I thought why not the tablet

00:26:24,380 --> 00:26:28,580
I don't need much from my travel device

00:26:26,060 --> 00:26:31,880
but there was a lingering question could

00:26:28,580 --> 00:26:34,910
it on Nix I did a quick quick google

00:26:31,880 --> 00:26:37,220
lookup I did not find a definite it yes

00:26:34,910 --> 00:26:39,200
I found a lot of people with a lot of

00:26:37,220 --> 00:26:41,510
problems compiled in Nix under Android

00:26:39,200 --> 00:26:44,870
but I found this comment and it's pretty

00:26:41,510 --> 00:26:50,240
inspirational this would turn toys into

00:26:44,870 --> 00:26:52,909
semi computers I love that one but if

00:26:50,240 --> 00:26:55,099
I'm paying for a tablet I want a tablet

00:26:52,909 --> 00:26:57,889
wanna use Android apps I don't want to

00:26:55,099 --> 00:27:00,379
wait until gnome catches up with the

00:26:57,889 --> 00:27:05,509
user experience I also love my hardware

00:27:00,379 --> 00:27:08,749
working so I wanted links to coexist

00:27:05,509 --> 00:27:10,909
with Android I also just read excellent

00:27:08,749 --> 00:27:13,460
posts but made you bother about static

00:27:10,909 --> 00:27:16,639
linking and cross compilation and I was

00:27:13,460 --> 00:27:20,210
like wow I know what I gotta do I should

00:27:16,639 --> 00:27:22,369
I should just cross compile mix and

00:27:20,210 --> 00:27:25,759
statically link it on it and it will

00:27:22,369 --> 00:27:28,279
work in Android so I was pretty stoked

00:27:25,759 --> 00:27:31,220
I bought the tablet and I remember

00:27:28,279 --> 00:27:33,440
myself thinking vividly that would be

00:27:31,220 --> 00:27:38,690
super cool if I had a working prototype

00:27:33,440 --> 00:27:42,019
before next cone right yeah and I got it

00:27:38,690 --> 00:27:44,929
working the same evening the biggest

00:27:42,019 --> 00:27:47,119
problem was that I had to understand

00:27:44,929 --> 00:27:49,220
first that I don't need to do anything

00:27:47,119 --> 00:27:52,070
if I have P route

00:27:49,220 --> 00:27:55,159
I can just rewrite access to Nick stores

00:27:52,070 --> 00:27:57,590
so it looks like it is located an actual

00:27:55,159 --> 00:27:59,659
slash Nick slash store and I also

00:27:57,590 --> 00:28:01,609
thought okay I should now sit down and

00:27:59,659 --> 00:28:04,609
build a root of s with everything

00:28:01,609 --> 00:28:06,679
required to run Nick's and it turns out

00:28:04,609 --> 00:28:11,749
we have one in its code Nick's released

00:28:06,679 --> 00:28:14,799
our ball and I downloaded it IP routed

00:28:11,749 --> 00:28:20,899
into that and it worked

00:28:14,799 --> 00:28:25,129
Wow so this is kind of like a testament

00:28:20,899 --> 00:28:27,409
to thank you it just works on Android 4

00:28:25,129 --> 00:28:29,570
in overall limitations at first it was a

00:28:27,409 --> 00:28:31,519
very Hecky bash script that did

00:28:29,570 --> 00:28:33,879
everything with an intermediate

00:28:31,519 --> 00:28:37,220
distribution called Terminix but then I

00:28:33,879 --> 00:28:41,590
cut out the middleman I the app

00:28:37,220 --> 00:28:44,029
so it could run Nick's directly I

00:28:41,590 --> 00:28:47,149
started cross compiling P route the

00:28:44,029 --> 00:28:48,919
right mix way then I can thought okay

00:28:47,149 --> 00:28:51,830
just works for me and I stopped working

00:28:48,919 --> 00:28:54,080
on that and then one day I get a PR that

00:28:51,830 --> 00:28:56,869
we rise my project I mean there some

00:28:54,080 --> 00:28:58,909
lines survived but that was readme MD so

00:28:56,869 --> 00:29:03,000
it doesn't count

00:28:58,909 --> 00:29:06,179
so thanks girly for rewriting everything

00:29:03,000 --> 00:29:08,220
it's now properly built with nicks and

00:29:06,179 --> 00:29:12,210
all the hacks that are installed on

00:29:08,220 --> 00:29:14,190
device in his second PR he also put it

00:29:12,210 --> 00:29:16,440
under Nick's control and users will now

00:29:14,190 --> 00:29:19,049
have an upgrade path that is not wipe

00:29:16,440 --> 00:29:23,399
all data and reinstall it that's

00:29:19,049 --> 00:29:25,649
wonderful and I also just get it accept

00:29:23,399 --> 00:29:28,260
it into f-droid so it should be in there

00:29:25,649 --> 00:29:30,990
built queue now fingers crossed so try

00:29:28,260 --> 00:29:34,350
it from Android next week for now you

00:29:30,990 --> 00:29:37,309
can join my APK if you want to what

00:29:34,350 --> 00:29:40,019
gives you can install an app application

00:29:37,309 --> 00:29:42,240
it's a terminal emulator there's a

00:29:40,019 --> 00:29:44,210
terminal you can mix run something you

00:29:42,240 --> 00:29:47,610
are encouraged to install Home Manager

00:29:44,210 --> 00:29:51,450
you don't have to compile stuff Hydra

00:29:47,610 --> 00:29:54,179
has our age 64 binary cash it will

00:29:51,450 --> 00:29:56,730
download it and you don't need root you

00:29:54,179 --> 00:30:00,960
don't need user namespaces you don't

00:29:56,730 --> 00:30:04,679
need a cell UNIX permissive whatever but

00:30:00,960 --> 00:30:08,700
you do need an 64 bit phone or table

00:30:04,679 --> 00:30:12,149
because we don't have mixed bill for

00:30:08,700 --> 00:30:14,429
32-bit arm unfortunately it would be

00:30:12,149 --> 00:30:16,169
slow and peer route isn't exactly help

00:30:14,429 --> 00:30:18,149
in that and there are some restrictions

00:30:16,169 --> 00:30:20,690
like everything that uses peach rays

00:30:18,149 --> 00:30:22,799
won't work because Peru took that and

00:30:20,690 --> 00:30:25,260
remember that you are running stuff is

00:30:22,799 --> 00:30:27,149
an unprivileged user under another linux

00:30:25,260 --> 00:30:29,130
distro and it's not fedora or debian

00:30:27,149 --> 00:30:32,220
it's android so everything is messed up

00:30:29,130 --> 00:30:37,230
so don't try fancy stuff like top or

00:30:32,220 --> 00:30:40,230
maybe pink that won't fly but other

00:30:37,230 --> 00:30:41,880
tools work just well I have my favorite

00:30:40,230 --> 00:30:44,820
tools there I've typed said this

00:30:41,880 --> 00:30:45,779
presentation on my tablet I compiled it

00:30:44,820 --> 00:30:48,690
with pen doc

00:30:45,779 --> 00:30:51,299
it works so say my computer I think and

00:30:48,690 --> 00:30:54,389
all my Android experience is still there

00:30:51,299 --> 00:30:55,860
my Wi-Fi works I really value that but I

00:30:54,389 --> 00:30:58,230
think there's also a bigger question

00:30:55,860 --> 00:31:00,389
what do we want to do with that I think

00:30:58,230 --> 00:31:02,490
we have a quirky platform under our

00:31:00,389 --> 00:31:04,950
noses it's quirky but it's pretty

00:31:02,490 --> 00:31:07,860
uniformly quirky and it's already in our

00:31:04,950 --> 00:31:10,350
pockets maybe it's the next next Darwin

00:31:07,860 --> 00:31:12,299
but we just didn't explore it enough I

00:31:10,350 --> 00:31:15,330
don't know why we do

00:31:12,299 --> 00:31:18,869
didn't do that and you're not allowed to

00:31:15,330 --> 00:31:20,999
ask questions but I am so could we make

00:31:18,869 --> 00:31:23,909
my project a tad more official I want a

00:31:20,999 --> 00:31:26,909
fancy-looking hostname for my files or

00:31:23,909 --> 00:31:28,559
something could I maybe recompile

00:31:26,909 --> 00:31:33,059
everything that would require a lot of

00:31:28,559 --> 00:31:35,429
builders and whatever but this could get

00:31:33,059 --> 00:31:37,979
me out of P route and what's the actual

00:31:35,429 --> 00:31:41,999
endgame and is it worth the effort

00:31:37,979 --> 00:31:47,839
I don't know so please find me ask me or

00:31:41,999 --> 00:31:47,839
better answer those thank you

00:31:49,570 --> 00:31:53,270
[Music]

00:31:50,220 --> 00:31:56,070
[Applause]

00:31:53,270 --> 00:31:57,900
I've actually built my crazy Emacs

00:31:56,070 --> 00:32:01,530
config on this stuff and it works just

00:31:57,900 --> 00:32:05,090
great so but maybe next up is Domino sir

00:32:01,530 --> 00:32:05,090
and he's gonna talk about her killer ci

00:32:08,420 --> 00:32:16,680
hey everyone how are you doing all right

00:32:13,710 --> 00:32:17,960
you're still awake let's see if this

00:32:16,680 --> 00:32:21,120
works

00:32:17,960 --> 00:32:24,660
so I'm hijacking this talk a bit I'm

00:32:21,120 --> 00:32:32,270
sorry for three topics let's see if we

00:32:24,660 --> 00:32:32,270
can get please

00:32:39,340 --> 00:32:46,369
all right this might work alright so

00:32:43,999 --> 00:32:50,649
first of all I want to just briefly

00:32:46,369 --> 00:32:53,090
mention Nick sighs weakly it's like a

00:32:50,649 --> 00:32:55,999
weekly newsletter that's actually a

00:32:53,090 --> 00:32:58,489
monthly newsletter that goes out when I

00:32:55,999 --> 00:33:02,929
have time but you should either

00:32:58,489 --> 00:33:04,909
subscribe for news or there's a link

00:33:02,929 --> 00:33:08,239
somewhere at the bottom of each post

00:33:04,909 --> 00:33:09,729
where you can send your blog posts or

00:33:08,239 --> 00:33:14,899
whatever you have done with Nick's

00:33:09,729 --> 00:33:17,570
so it's featured there and I think there

00:33:14,899 --> 00:33:21,950
is about almost 1,000 people right now

00:33:17,570 --> 00:33:23,869
subscribe to it so it's pretty wide I

00:33:21,950 --> 00:33:27,129
mean you can get a nice audience and

00:33:23,869 --> 00:33:32,210
there you can see a bunch of posts there

00:33:27,129 --> 00:33:35,379
alright so getting to my third topic

00:33:32,210 --> 00:33:37,519
with the second one I wrote like a

00:33:35,379 --> 00:33:39,889
couple of year ago

00:33:37,519 --> 00:33:42,889
Kasich's which is a hosted binary cash

00:33:39,889 --> 00:33:45,019
easy to use and I don't know if you

00:33:42,889 --> 00:33:47,359
heard but github launched their CI it's

00:33:45,019 --> 00:33:49,580
called github actions so there is a

00:33:47,359 --> 00:33:52,700
classic action if you need to start

00:33:49,580 --> 00:33:55,339
really really easy with Nicks and a CI

00:33:52,700 --> 00:33:59,599
basically we call it is file into your

00:33:55,339 --> 00:34:01,519
repo or you set your keys for Kasich's

00:33:59,599 --> 00:34:04,399
and you're building mix and caching to

00:34:01,519 --> 00:34:07,279
cash checks in like 30 seconds which is

00:34:04,399 --> 00:34:12,020
pretty nice to start a simple toy

00:34:07,279 --> 00:34:14,329
project and to my last topic we're also

00:34:12,020 --> 00:34:19,069
building a complete CI replacement for

00:34:14,329 --> 00:34:22,879
Hydra so who is running Hydra alright my

00:34:19,069 --> 00:34:27,020
condolences I offer also emotional

00:34:22,879 --> 00:34:29,659
support after the the next con but

00:34:27,020 --> 00:34:31,960
besides that you can also use our CI

00:34:29,659 --> 00:34:38,089
that we've been building for the last

00:34:31,960 --> 00:34:42,970
year so I'm gonna quickly show how it

00:34:38,089 --> 00:34:48,399
works so you can click here and say

00:34:42,970 --> 00:34:57,579
I kill the CI and at the repo so you can

00:34:48,399 --> 00:35:01,780
you can whitelist which repos build so

00:34:57,579 --> 00:35:07,119
let me just show you there is a there's

00:35:01,780 --> 00:35:09,160
just one file in it it's a bit cryptic

00:35:07,119 --> 00:35:12,190
but you can build linux and darwin with

00:35:09,160 --> 00:35:16,569
this simple expression and it's built a

00:35:12,190 --> 00:35:17,430
hello world relation so nothing too

00:35:16,569 --> 00:35:27,099
fancy

00:35:17,430 --> 00:35:35,680
so if we add it now and it loads we we

00:35:27,099 --> 00:35:39,849
can start building our project so let's

00:35:35,680 --> 00:35:41,970
see where it is alright so if i push it

00:35:39,849 --> 00:35:41,970
now

00:35:47,880 --> 00:35:52,980
[Music]

00:35:49,500 --> 00:35:54,460
we should see it bill evaluate and build

00:35:52,980 --> 00:36:02,349
there we go

00:35:54,460 --> 00:36:04,869
and I go so it's but displays attributes

00:36:02,349 --> 00:36:06,910
as they're being evaluated and now it's

00:36:04,869 --> 00:36:10,660
going to dispatch this to Linux and I

00:36:06,910 --> 00:36:14,650
win and build them so yeah that's a very

00:36:10,660 --> 00:36:16,569
simple demo of it there is a the agents

00:36:14,650 --> 00:36:18,160
themselves need to be hosted by you on

00:36:16,569 --> 00:36:20,829
different infrastructure so we provides

00:36:18,160 --> 00:36:23,980
her for Nick sobs Nick's Darwin and

00:36:20,829 --> 00:36:25,839
probably other things so we are aiming

00:36:23,980 --> 00:36:28,690
to make it as simple as possible to

00:36:25,839 --> 00:36:32,589
deploy those without er scaling in the

00:36:28,690 --> 00:36:33,099
future and so on and there's if you go

00:36:32,589 --> 00:36:35,890
to dogs

00:36:33,099 --> 00:36:38,010
Hercules - CI comm you will see

00:36:35,890 --> 00:36:40,390
instructions how to deploy those agents

00:36:38,010 --> 00:36:42,910
the service is hosted so you don't have

00:36:40,390 --> 00:36:46,030
to maintain it only the agents it's free

00:36:42,910 --> 00:36:48,910
for open source so you can if you have

00:36:46,030 --> 00:36:50,559
some hardware or even on your laptop the

00:36:48,910 --> 00:36:51,940
agents are completely still a stateless

00:36:50,559 --> 00:36:53,799
so you can just run it on your laptop

00:36:51,940 --> 00:36:58,480
and when it's online it will build

00:36:53,799 --> 00:37:01,990
things and otherwise it's a paid service

00:36:58,480 --> 00:37:03,940
for private repositories and yeah this

00:37:01,990 --> 00:37:05,890
should it's a bit busy with other things

00:37:03,940 --> 00:37:10,059
right now we're rebuilding huge Haskell

00:37:05,890 --> 00:37:11,829
said so yeah that's it if you have some

00:37:10,059 --> 00:37:14,170
questions about our Hercules CI or

00:37:11,829 --> 00:37:18,059
Kasich's or even unique size lately talk

00:37:14,170 --> 00:37:18,059
to me later yeah thanks

00:37:19,190 --> 00:37:27,470
Thank You da man next up is front splits

00:37:22,400 --> 00:37:29,510
and he's gonna talk about network D so

00:37:27,470 --> 00:37:31,400
hello this one is gonna be quick just a

00:37:29,510 --> 00:37:33,590
few like what's the current state of

00:37:31,400 --> 00:37:35,540
network team because I did a talk at

00:37:33,590 --> 00:37:38,270
last next con about switching the

00:37:35,540 --> 00:37:41,150
default networking back-end to network D

00:37:38,270 --> 00:37:43,640
but obviously that hasn't happened yet

00:37:41,150 --> 00:37:45,590
and quite a lot of people came up to me

00:37:43,640 --> 00:37:48,200
at this next con to ask about the

00:37:45,590 --> 00:37:51,020
current state so I'm gonna to lightning

00:37:48,200 --> 00:37:54,010
talk about it to inform you what has

00:37:51,020 --> 00:37:57,440
happened and what's going to happen so

00:37:54,010 --> 00:38:00,190
what has happened not that much actually

00:37:57,440 --> 00:38:05,840
because due to a lack of time on my part

00:38:00,190 --> 00:38:09,230
but also we already did is for 1909 we

00:38:05,840 --> 00:38:12,890
deprecated the use of networking dot use

00:38:09,230 --> 00:38:15,980
DHCP and network D so it's not possible

00:38:12,890 --> 00:38:18,170
to to DHCP on all interfaces anymore if

00:38:15,980 --> 00:38:20,630
you use network deal because that's

00:38:18,170 --> 00:38:24,860
inherently incompatible of how network

00:38:20,630 --> 00:38:28,880
TV works what we also did is we modified

00:38:24,860 --> 00:38:32,060
NIC sauce generate convict to not enable

00:38:28,880 --> 00:38:35,600
use DHCP by default but only enable use

00:38:32,060 --> 00:38:37,550
DHCP on an interface basis so only for

00:38:35,600 --> 00:38:40,730
interfaces that are available on your

00:38:37,550 --> 00:38:44,450
system when you install next so s use

00:38:40,730 --> 00:38:48,050
DHCP will be enabled what's currently on

00:38:44,450 --> 00:38:52,160
master but locally actually did we also

00:38:48,050 --> 00:38:55,270
removed 99 the main network unit which

00:38:52,160 --> 00:38:57,800
was causing the main part of the trouble

00:38:55,270 --> 00:38:59,380
for every like network the user and

00:38:57,800 --> 00:39:04,070
black most network the users out there

00:38:59,380 --> 00:39:05,930
disable that you might actually and so

00:39:04,070 --> 00:39:10,040
the reasons why it's not ready yet

00:39:05,930 --> 00:39:12,560
and it's actually more work and like

00:39:10,040 --> 00:39:16,700
more questions arose than anticipated

00:39:12,560 --> 00:39:19,940
when I did my talk and there were some

00:39:16,700 --> 00:39:23,090
people who can up to me after the talk

00:39:19,940 --> 00:39:26,050
that still wanted to keep using scripted

00:39:23,090 --> 00:39:29,240
networking and that's a problem because

00:39:26,050 --> 00:39:32,780
network it does supports many more

00:39:29,240 --> 00:39:35,780
features and if we want to expose them

00:39:32,780 --> 00:39:38,510
as a networking option and people still

00:39:35,780 --> 00:39:41,480
want to use scripted networking we have

00:39:38,510 --> 00:39:46,280
to ensure feature parity or like do a

00:39:41,480 --> 00:39:48,620
lot of like assertions and that would

00:39:46,280 --> 00:39:51,170
make the networking module even more

00:39:48,620 --> 00:39:57,560
complex so that the problem is that we

00:39:51,170 --> 00:39:59,690
are decision how to move forward and the

00:39:57,560 --> 00:40:01,310
thing is we are going to tap recreate

00:39:59,690 --> 00:40:03,680
some of the options in the networking

00:40:01,310 --> 00:40:06,140
module anyway if we want to switch to

00:40:03,680 --> 00:40:08,600
network deal and this is actually a

00:40:06,140 --> 00:40:12,460
chance to redesign the networking module

00:40:08,600 --> 00:40:16,460
as a whole so what I am planning is to

00:40:12,460 --> 00:40:19,940
create an RFC for like this networking

00:40:16,460 --> 00:40:22,310
module redesign because when I was

00:40:19,940 --> 00:40:24,440
thinking about that I got even more

00:40:22,310 --> 00:40:25,820
questions and I wasn't sure like how to

00:40:24,440 --> 00:40:27,890
how to move forward

00:40:25,820 --> 00:40:30,230
and that's actually something the

00:40:27,890 --> 00:40:32,450
community has to answer because like I

00:40:30,230 --> 00:40:34,160
could implement what I'm thinking is

00:40:32,450 --> 00:40:38,930
right but that's probably not the right

00:40:34,160 --> 00:40:41,600
decision for the project so what's my

00:40:38,930 --> 00:40:45,620
plan I would have to have I would like

00:40:41,600 --> 00:40:48,230
to have network D trunky ready for 20 or

00:40:45,620 --> 00:40:50,690
field that means you can use networking

00:40:48,230 --> 00:40:54,470
dot use tiers at networking dot use

00:40:50,690 --> 00:40:56,930
network T in 2003 without any problems

00:40:54,470 --> 00:41:01,820
that's the idea for that we need that

00:40:56,930 --> 00:41:05,030
RFC and a little bit of that redesign of

00:41:01,820 --> 00:41:06,950
the networking module for 2009 I would

00:41:05,030 --> 00:41:09,140
like to have the redesign of the

00:41:06,950 --> 00:41:10,910
networking module in place which would

00:41:09,140 --> 00:41:13,670
break like everyone's network

00:41:10,910 --> 00:41:15,140
configuration probably but yeah that's

00:41:13,670 --> 00:41:21,020
just the thing we have to do at some

00:41:15,140 --> 00:41:25,310
point so what's coming up I so we have

00:41:21,020 --> 00:41:29,180
we have to create that RFC at least like

00:41:25,310 --> 00:41:34,630
before Christmas so I would I would like

00:41:29,180 --> 00:41:36,950
to do a network tea sprint this year

00:41:34,630 --> 00:41:39,590
what I am proposing it to do at the

00:41:36,950 --> 00:41:42,710
Munich at the Mayflower office and I've

00:41:39,590 --> 00:41:44,120
already created a doodle for that so if

00:41:42,710 --> 00:41:45,670
you have time and if you want to

00:41:44,120 --> 00:41:47,769
contribute

00:41:45,670 --> 00:41:49,450
discussing about what are the possible

00:41:47,769 --> 00:41:53,529
solutions for like a new networking

00:41:49,450 --> 00:41:56,260
module I will create a post in the

00:41:53,529 --> 00:41:58,450
discourse later today with the doodle

00:41:56,260 --> 00:42:03,779
link and some of the questions I have

00:41:58,450 --> 00:42:07,559
for you and I hope some of some people

00:42:03,779 --> 00:42:11,829
can come and maybe even attend remotely

00:42:07,559 --> 00:42:20,019
for that's for that sprint and we can

00:42:11,829 --> 00:42:22,029
create that RFC thanks a lot so next up

00:42:20,019 --> 00:42:24,730
is robbing Gloucester he's gonna talk

00:42:22,029 --> 00:42:28,809
about the nexus RFC process but I would

00:42:24,730 --> 00:42:32,460
like to know is Matthew power around no

00:42:28,809 --> 00:42:32,460
okay yeah thank you

00:42:54,360 --> 00:43:06,480
so I'll just quickly talk about Nexus FC

00:42:59,400 --> 00:43:12,170
process in March 2017 zimble Thomas

00:43:06,480 --> 00:43:14,790
hyung and Morty started the idea and

00:43:12,170 --> 00:43:19,320
established the first version of the

00:43:14,790 --> 00:43:21,300
process we had a few of sales which were

00:43:19,320 --> 00:43:24,360
really uncontroversial which were

00:43:21,300 --> 00:43:28,680
accepted otherwise everything which need

00:43:24,360 --> 00:43:33,120
him more discussion we didn't really

00:43:28,680 --> 00:43:34,770
have any way of determining if it's

00:43:33,120 --> 00:43:39,480
gonna be accept it or not

00:43:34,770 --> 00:43:42,780
so last year next cone drea myself

00:43:39,480 --> 00:43:48,480
floating and a few others sat down and

00:43:42,780 --> 00:43:52,800
wrote up an IFC trying to improve the FC

00:43:48,480 --> 00:44:02,490
processed that was accepted in January

00:43:52,800 --> 00:44:07,340
as RC 36 and in that created one team of

00:44:02,490 --> 00:44:11,790
five people who for every I've see

00:44:07,340 --> 00:44:15,720
select a team of people who are

00:44:11,790 --> 00:44:22,050
knowledgeable about that topic who in

00:44:15,720 --> 00:44:28,410
the end decide and that first team of

00:44:22,050 --> 00:44:35,850
five is the FC steering committee whose

00:44:28,410 --> 00:44:39,600
rotation was defined in our c43 that was

00:44:35,850 --> 00:44:42,660
accepted in June so we have these three

00:44:39,600 --> 00:44:46,020
teams or two teams plus the leader of

00:44:42,660 --> 00:44:52,230
the second team the FC steering

00:44:46,020 --> 00:44:57,330
committee is Elcor demesne a Mick 92 and

00:44:52,230 --> 00:45:02,870
me I think I didn't miss anyone we meet

00:44:57,330 --> 00:45:02,870
once a week and go through all our C's

00:45:03,350 --> 00:45:08,240
when a new RC is opened

00:45:08,259 --> 00:45:16,089
there's a period where people can

00:45:11,420 --> 00:45:19,910
nominate the so-called shepherds and the

00:45:16,089 --> 00:45:23,859
RC steering committee then selects three

00:45:19,910 --> 00:45:26,990
or four shepherds and the Shepherd teams

00:45:23,859 --> 00:45:32,119
over the shepherd team is responsible

00:45:26,990 --> 00:45:39,019
for trying to make sure that the

00:45:32,119 --> 00:45:45,579
conversation is may make sense and

00:45:39,019 --> 00:45:50,450
actually focuses on the topic and the

00:45:45,579 --> 00:45:53,210
Shepherd leader tries to facilitate

00:45:50,450 --> 00:45:57,980
meetings with the shepherds and the

00:45:53,210 --> 00:45:58,940
author so they can discuss points are

00:45:57,980 --> 00:46:04,880
controversial

00:45:58,940 --> 00:46:07,640
or need further explanation and we'd

00:46:04,880 --> 00:46:10,490
like to encourage the leaders to

00:46:07,640 --> 00:46:14,890
actually meet up with the other

00:46:10,490 --> 00:46:20,140
shepherds and the author more so the

00:46:14,890 --> 00:46:23,630
because we've had the experienced the

00:46:20,140 --> 00:46:26,119
meetings actually bring the most benefit

00:46:23,630 --> 00:46:29,359
in the discussion and move on I've says

00:46:26,119 --> 00:46:34,970
much faster than just commenting on the

00:46:29,359 --> 00:46:37,819
FCS the general process is right on pion

00:46:34,970 --> 00:46:42,890
I've seen then there's this shepherd

00:46:37,819 --> 00:46:46,839
nomination period of three to four

00:46:42,890 --> 00:46:51,200
people getting accepted as shepherds

00:46:46,839 --> 00:46:55,490
then a discussion until it at some point

00:46:51,200 --> 00:47:00,859
hopefully reaches a general acceptance

00:46:55,490 --> 00:47:03,740
or generally everyone agrees that it

00:47:00,859 --> 00:47:07,130
probably isn't a good idea in the form

00:47:03,740 --> 00:47:08,960
that it's mentioned in the RC and then

00:47:07,130 --> 00:47:13,250
the Shepherd's call the final comment

00:47:08,960 --> 00:47:17,990
period of ten days where they say we all

00:47:13,250 --> 00:47:19,619
unanimously agree that we'd want to

00:47:17,990 --> 00:47:23,369
accept or do

00:47:19,619 --> 00:47:28,170
or close this I say and then there's a

00:47:23,369 --> 00:47:32,010
10-day period where people can bring out

00:47:28,170 --> 00:47:36,359
new points so the discussion continues

00:47:32,010 --> 00:47:43,290
or otherwise after the ten days DRC is

00:47:36,359 --> 00:47:45,359
accepted or closed then I'm running out

00:47:43,290 --> 00:47:48,270
of time so there a number of accepted

00:47:45,359 --> 00:47:51,000
our seas and OPA half seas for example

00:47:48,270 --> 00:47:56,520
flakes and F let's is gonna open one and

00:47:51,000 --> 00:48:03,090
networking and then the RC e steering

00:47:56,520 --> 00:48:07,140
committee is going to be rotated at the

00:48:03,090 --> 00:48:09,180
end of this year we are looking for

00:48:07,140 --> 00:48:11,760
people who would like to be in it and

00:48:09,180 --> 00:48:15,450
I'm going to open a thread and discuss

00:48:11,760 --> 00:48:19,590
today please nominate yourself or other

00:48:15,450 --> 00:48:24,710
people and at the end of the year the

00:48:19,590 --> 00:48:29,180
steering committee will decide on the

00:48:24,710 --> 00:48:31,850
next steering committee for next year

00:48:29,180 --> 00:48:34,250
and a few links

00:48:31,850 --> 00:48:35,450
[Applause]

00:48:34,250 --> 00:48:38,060
[Music]

00:48:35,450 --> 00:48:40,160
and I believe that was our final

00:48:38,060 --> 00:48:43,960
lightning talk but I would like to

00:48:40,160 --> 00:48:43,960
quickly just ask

00:48:56,570 --> 00:49:01,410
yeah I would like to ask everyone to on

00:48:59,760 --> 00:49:06,150
behalf of the organ that to have a look

00:49:01,410 --> 00:49:10,230
of the the program and submit submitter

00:49:06,150 --> 00:49:12,090
review above so feedback on every talk

00:49:10,230 --> 00:49:14,520
that you you have some feedback on so

00:49:12,090 --> 00:49:16,290
you just go to the schedule and on the

00:49:14,520 --> 00:49:19,290
schedule you can click a talk and then

00:49:16,290 --> 00:49:21,180
there's a feedback button and just write

00:49:19,290 --> 00:49:25,980
your own as feedback so next con can be

00:49:21,180 --> 00:49:28,650
even more awesome next year and yeah I

00:49:25,980 --> 00:49:31,110
know you're all hungry so we have an

00:49:28,650 --> 00:49:33,800
hour lunch break and we would start

00:49:31,110 --> 00:49:40,739
again at one o'clock

00:49:33,800 --> 00:49:40,739

YouTube URL: https://www.youtube.com/watch?v=vwBxGVF3VS0


