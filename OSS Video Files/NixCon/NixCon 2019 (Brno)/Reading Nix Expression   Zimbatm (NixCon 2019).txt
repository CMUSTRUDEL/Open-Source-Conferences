Title: Reading Nix Expression   Zimbatm (NixCon 2019)
Publication date: 2019-10-26
Playlist: NixCon 2019 (Brno)
Description: 
	Slides: https://zimbatm.com/talks/reading-nix-expressions/

Nix is not a big language but the syntax is quite foreign to the usual language suspects. The goal of this talk is to demystify the language. At the end all the viewers should are able to read Nix code and start wielding Nix's super powers.
Captions: 
	00:00:00,599 --> 00:00:05,730
in radio advertising striking it is so

00:00:03,620 --> 00:00:09,809
surprised that there is so many people

00:00:05,730 --> 00:00:12,540
and this I'm also delighted maybe we

00:00:09,809 --> 00:00:14,849
should start with this really quick so

00:00:12,540 --> 00:00:17,820
this is more interactive session the

00:00:14,849 --> 00:00:20,670
goodies for you to learn how to musics

00:00:17,820 --> 00:00:23,930
and kind of go over hold of the aspects

00:00:20,670 --> 00:00:27,180
because it can be a bit difficult right

00:00:23,930 --> 00:00:32,460
so maybe we can start with a quick

00:00:27,180 --> 00:00:38,719
product maybe who knows how to reach

00:00:32,460 --> 00:00:42,390
Nick's code indeed raise your hand so

00:00:38,719 --> 00:00:48,239
who knows how to create a new package in

00:00:42,390 --> 00:00:51,120
mix vacations yes so yeah today we're

00:00:48,239 --> 00:00:53,309
gonna cover these things like or two so

00:00:51,120 --> 00:00:56,460
first our kiss or completeness code so

00:00:53,309 --> 00:00:59,550
it doesn't look too weird anymore

00:00:56,460 --> 00:01:02,280
and then we're gonna cover our next

00:00:59,550 --> 00:01:06,780
works in the internals how to get your

00:01:02,280 --> 00:01:08,070
own packages and you should if there's

00:01:06,780 --> 00:01:10,830
something that's unclear you should

00:01:08,070 --> 00:01:13,159
enjoy this and then we can just go over

00:01:10,830 --> 00:01:13,159
it right

00:01:15,110 --> 00:01:24,439
let's get started so rename the next

00:01:21,600 --> 00:01:27,659
expression language so this is a

00:01:24,439 --> 00:01:30,780
ecosystem and that's just a small part

00:01:27,659 --> 00:01:36,600
of it which is the language mix and then

00:01:30,780 --> 00:01:41,820
we're gonna see other parts so a long

00:01:36,600 --> 00:01:47,429
time ago three years which is thirty

00:01:41,820 --> 00:01:54,679
years in our star technics and I was

00:01:47,429 --> 00:01:57,929
seeing things like this or like this

00:01:54,679 --> 00:02:00,289
just when I did this sorry banging my

00:01:57,929 --> 00:02:02,670
head against and I tried until it works

00:02:00,289 --> 00:02:04,799
and so they're good of this book is that

00:02:02,670 --> 00:02:07,080
you don't have to do this and maybe

00:02:04,799 --> 00:02:09,209
after the end of this talk you will be

00:02:07,080 --> 00:02:10,670
able to just you read the code then make

00:02:09,209 --> 00:02:14,940
sense

00:02:10,670 --> 00:02:18,690
okay so what is the next language mixed

00:02:14,940 --> 00:02:22,769
languages basically you have Jason like

00:02:18,690 --> 00:02:26,220
values so it's translates she did quite

00:02:22,769 --> 00:02:28,170
well to Jason data tags the voice of the

00:02:26,220 --> 00:02:32,400
string is the same of resignation and

00:02:28,170 --> 00:02:33,959
numbers to save the lists is already a

00:02:32,400 --> 00:02:38,880
bit different because we don't have

00:02:33,959 --> 00:02:42,810
commas between atoms and to create an

00:02:38,880 --> 00:02:46,980
object life you have key equal value and

00:02:42,810 --> 00:02:51,359
then you need a semicolon to end like

00:02:46,980 --> 00:02:55,739
the expression not is not untrue forces

00:02:51,359 --> 00:02:57,670
to us so that's the Jason things and if

00:02:55,739 --> 00:02:59,970
we put them together as looks

00:02:57,670 --> 00:02:59,970
like this

00:03:03,300 --> 00:03:13,920
okay so systems of more constructors are

00:03:10,280 --> 00:03:18,900
the church representation because those

00:03:13,920 --> 00:03:20,340
submitted on strings and so one of the

00:03:18,900 --> 00:03:23,340
things that you need to know about the

00:03:20,340 --> 00:03:25,980
michigan stratis mix is going to remove

00:03:23,340 --> 00:03:30,390
this part drink for you so you can

00:03:25,980 --> 00:03:32,760
actually align your your richard in your

00:03:30,390 --> 00:03:34,050
codes won't show up in dense and it mix

00:03:32,760 --> 00:03:38,160
it's going to do the right thing and

00:03:34,050 --> 00:03:40,830
move everything that's in front if you

00:03:38,160 --> 00:03:42,540
push this a bit further then it's not

00:03:40,830 --> 00:03:44,930
going to remove this it's looking a

00:03:42,540 --> 00:03:48,720
little bit like the smallest part

00:03:44,930 --> 00:03:51,420
invoices and then finally we have a new

00:03:48,720 --> 00:03:55,320
earth light representation so you can

00:03:51,420 --> 00:03:57,180
just Acuras but this part is gonna we're

00:03:55,320 --> 00:04:02,880
thinking of deeper giving its provide

00:03:57,180 --> 00:04:06,210
I'm just mentioning completion see okay

00:04:02,880 --> 00:04:08,520
so that strings that is another type

00:04:06,210 --> 00:04:11,400
that's called the path and that's knit

00:04:08,520 --> 00:04:16,709
in their JSON data types and that allows

00:04:11,400 --> 00:04:19,500
you to reference for inspiration so

00:04:16,709 --> 00:04:23,190
there's certain additions there's one

00:04:19,500 --> 00:04:25,140
that's just you type a relative path and

00:04:23,190 --> 00:04:27,990
that's going to be a result of an

00:04:25,140 --> 00:04:32,190
obsolete bus relative to the file where

00:04:27,990 --> 00:04:35,810
has been loaded then you can use

00:04:32,190 --> 00:04:39,020
absolute path and then also completes

00:04:35,810 --> 00:04:41,750
with kids based on your home factory and

00:04:39,020 --> 00:04:44,030
then the last one which you probably

00:04:41,750 --> 00:04:47,110
you're gonna only see with next packages

00:04:44,030 --> 00:04:50,090
is this where the bracket foundation

00:04:47,110 --> 00:04:54,920
this is actually a new tip into the

00:04:50,090 --> 00:04:57,740
mixed environment whatever so I mean I'm

00:04:54,920 --> 00:04:59,840
just mentioning its for now you just

00:04:57,740 --> 00:05:02,930
need to know that this is been a result

00:04:59,840 --> 00:05:05,900
to a path and if you want to know how

00:05:02,930 --> 00:05:07,760
like what path is going to be you have

00:05:05,900 --> 00:05:12,530
to look at the mix but the magnet rival

00:05:07,760 --> 00:05:17,420
and then basically before value to see

00:05:12,530 --> 00:05:19,430
mixed packages right before so I have my

00:05:17,420 --> 00:05:26,840
own expectations check out or I just

00:05:19,430 --> 00:05:29,510
wanted to my editorial all right so now

00:05:26,840 --> 00:05:33,020
so we have only values for now so now we

00:05:29,510 --> 00:05:38,000
enter the functions so next functions

00:05:33,020 --> 00:05:41,780
are just letters so here for some people

00:05:38,000 --> 00:05:44,390
you have one final function each version

00:05:41,780 --> 00:05:46,820
has one argument and then it returns

00:05:44,390 --> 00:05:50,870
another function with one argument and

00:05:46,820 --> 00:05:54,260
then that's the body function so here we

00:05:50,870 --> 00:05:58,700
find the value to a rebind the value to

00:05:54,260 --> 00:06:01,850
b and in terms of sculpting this creates

00:05:58,700 --> 00:06:05,810
a new scope the scope is only we know

00:06:01,850 --> 00:06:09,260
the function so you don't pollute you

00:06:05,810 --> 00:06:10,780
can never go like you can do like in

00:06:09,260 --> 00:06:14,950
JavaScript when the care environment

00:06:10,780 --> 00:06:17,510
it's gonna not gonna go live anyway and

00:06:14,950 --> 00:06:20,180
then it's another representation which

00:06:17,510 --> 00:06:23,300
is a keyword arguments so it's again

00:06:20,180 --> 00:06:25,700
that's one function but with one

00:06:23,300 --> 00:06:29,210
arguments but this is going to be look

00:06:25,700 --> 00:06:32,630
like pattern matched or the you pass

00:06:29,210 --> 00:06:34,970
that you mid-size like an object it's

00:06:32,630 --> 00:06:38,260
going to extract the keys from the

00:06:34,970 --> 00:06:38,260
object and wonderment

00:06:38,930 --> 00:06:45,420
so that's you that's two ways of writing

00:06:42,300 --> 00:06:49,280
it the most popular one is this one and

00:06:45,420 --> 00:06:49,280
we're going to see more examples after

00:06:50,870 --> 00:06:57,330
so here that's the simple way but then

00:06:54,930 --> 00:07:00,480
if you pass for example in a book that

00:06:57,330 --> 00:07:02,250
has a B and C here it's going to fill

00:07:00,480 --> 00:07:04,820
that relation because it's going to

00:07:02,250 --> 00:07:08,940
contain that C is not the earth in here

00:07:04,820 --> 00:07:10,860
so this another you can do more things

00:07:08,940 --> 00:07:15,360
with this or somebody can specify

00:07:10,860 --> 00:07:17,880
default parties you can say I don't care

00:07:15,360 --> 00:07:20,220
about any extra arguments so that's

00:07:17,880 --> 00:07:23,670
going to be ignored and you can also

00:07:20,220 --> 00:07:25,820
find the original are tributes that's

00:07:23,670 --> 00:07:34,770
being passed to the function to a

00:07:25,820 --> 00:07:39,020
variable okay so now we have so now we

00:07:34,770 --> 00:07:42,510
can build just values little functions

00:07:39,020 --> 00:07:44,910
and now we starts looking into some of

00:07:42,510 --> 00:07:46,760
these functions so these are our

00:07:44,910 --> 00:07:49,190
functions are provided by the

00:07:46,760 --> 00:07:52,110
interpreter and there are organic

00:07:49,190 --> 00:07:58,800
existing functions in their environment

00:07:52,110 --> 00:08:01,950
so you have to string reports about to

00:07:58,800 --> 00:08:04,200
string the next there is no conversion

00:08:01,950 --> 00:08:05,940
automatic conversion you have to specify

00:08:04,200 --> 00:08:06,680
if you want to convert from one type to

00:08:05,940 --> 00:08:13,050
another

00:08:06,680 --> 00:08:17,070
except in in one day's budget you can

00:08:13,050 --> 00:08:19,980
import fine so what you can do is you

00:08:17,070 --> 00:08:22,650
can say import another nice file and

00:08:19,980 --> 00:08:24,780
it's going to be evaluated and that with

00:08:22,650 --> 00:08:29,669
the value from this separation is

00:08:24,780 --> 00:08:35,550
returns to your current scope you can do

00:08:29,669 --> 00:08:39,860
exceptions this like functional type

00:08:35,550 --> 00:08:43,830
things like math and forward like that

00:08:39,860 --> 00:08:47,089
so these are all capital and then we

00:08:43,830 --> 00:08:51,420
have another attribute which is written

00:08:47,089 --> 00:08:54,360
and then in very fun more functions so

00:08:51,420 --> 00:08:59,610
the traits that allow you to just print

00:08:54,360 --> 00:09:05,660
out things for debugging from pages from

00:08:59,610 --> 00:09:05,660
jason to jason and there's many more but

00:09:10,460 --> 00:09:16,440
keywords so there's a few keywords on

00:09:14,370 --> 00:09:19,890
top of that and then we're going to

00:09:16,440 --> 00:09:22,589
finish with an inertia visited so the

00:09:19,890 --> 00:09:27,240
let's binding allows you to bind the

00:09:22,589 --> 00:09:29,520
values to names and so here we actually

00:09:27,240 --> 00:09:32,700
create a new scope where we bind

00:09:29,520 --> 00:09:34,500
hello and packages into the scope and

00:09:32,700 --> 00:09:38,970
then they are available dido

00:09:34,500 --> 00:09:43,230
so you can access that one thing to know

00:09:38,970 --> 00:09:46,230
it's here you might notice the we access

00:09:43,230 --> 00:09:51,180
speak edges here because the but the

00:09:46,230 --> 00:09:53,370
names are found at this time so you can

00:09:51,180 --> 00:09:57,200
do things like you don't care about the

00:09:53,370 --> 00:10:00,690
ordering that's finding music and

00:09:57,200 --> 00:10:03,180
because next is a lazy language you if

00:10:00,690 --> 00:10:05,450
you never access one of these values

00:10:03,180 --> 00:10:05,450
there

00:10:08,100 --> 00:10:16,150
Rek is a bit of the same so if you have

00:10:12,940 --> 00:10:18,100
a natural set and you add the red

00:10:16,150 --> 00:10:20,140
keyword what it's going to do is the

00:10:18,100 --> 00:10:22,660
same like it's gonna bind all of these

00:10:20,140 --> 00:10:26,080
keys as fighters

00:10:22,660 --> 00:10:29,140
actually in Moscow so sometimes you see

00:10:26,080 --> 00:10:32,080
a red keyword and you're wondering why

00:10:29,140 --> 00:10:36,279
that is it's just because the fines the

00:10:32,080 --> 00:10:38,770
these values into the scope and it's

00:10:36,279 --> 00:10:41,460
available also did over here you can see

00:10:38,770 --> 00:10:41,460
the regression

00:10:46,790 --> 00:10:53,690
with is another keyword that imports

00:10:50,810 --> 00:10:58,070
would have values of the attributes that

00:10:53,690 --> 00:11:01,790
you pass into the narrow scope yeah this

00:10:58,070 --> 00:11:03,260
one is a bit dangerous like like in most

00:11:01,790 --> 00:11:08,330
languages where you have this keyword

00:11:03,260 --> 00:11:10,640
like here we with packages and then

00:11:08,330 --> 00:11:12,380
magically is not very explicit to it

00:11:10,640 --> 00:11:14,620
like you have these variables that are

00:11:12,380 --> 00:11:14,620
there

00:11:19,240 --> 00:11:24,940
okay good question

00:11:21,560 --> 00:11:24,940
I need to

00:11:26,690 --> 00:11:30,819
let's start the mixer

00:11:35,510 --> 00:11:42,490
so imports allows you to do things are

00:11:44,210 --> 00:11:51,980
here you get that's the value of define

00:11:47,540 --> 00:11:55,880
and then you can bind it to and that's a

00:11:51,980 --> 00:12:01,070
part of it whereas the width key words

00:11:55,880 --> 00:12:05,480
it's going to be with

00:12:01,070 --> 00:12:09,970
and that here you say we paid according

00:12:05,480 --> 00:12:09,970
for baby

00:12:12,110 --> 00:12:20,210
they only take some part of the package

00:12:15,620 --> 00:12:22,820
is not older and by them not actually

00:12:20,210 --> 00:12:24,800
right inputs allows you to load an

00:12:22,820 --> 00:12:27,610
approach from somewhere else

00:12:24,800 --> 00:12:31,790
yet the width is just a way of importing

00:12:27,610 --> 00:12:42,650
the existing attributes into our keys in

00:12:31,790 --> 00:12:45,890
to import like with this different

00:12:42,650 --> 00:12:51,500
instructors imports to load a new file

00:12:45,890 --> 00:12:54,410
into your scope and which is a way to

00:12:51,500 --> 00:12:57,070
deconstruct and as you build into

00:12:54,410 --> 00:12:57,070
different

00:13:05,990 --> 00:13:11,540
so here Pikachu's for something has been

00:13:08,930 --> 00:13:16,220
imported somewhere before and now we

00:13:11,540 --> 00:13:19,690
just create the scope and then these are

00:13:16,220 --> 00:13:31,790
variables that are available medically

00:13:19,690 --> 00:13:35,410
but we'll put the health and that is

00:13:31,790 --> 00:13:40,250
shorthand to basically instead of

00:13:35,410 --> 00:13:45,200
writing GCC for equities the GCC can say

00:13:40,250 --> 00:13:49,400
inherit frontages GCC and so it's just a

00:13:45,200 --> 00:13:51,410
way to reduce a little repetition and

00:13:49,400 --> 00:13:54,830
you can also use it that way when you

00:13:51,410 --> 00:13:58,550
inherit divine values so you don't sleep

00:13:54,830 --> 00:14:02,270
it's like teachers getting packages so

00:13:58,550 --> 00:14:07,540
if you make a dipole its thank you the

00:14:02,270 --> 00:14:07,540
main advantages you avoid making rifles

00:14:08,320 --> 00:14:18,170
if the dance and then asserts this

00:14:14,600 --> 00:14:21,110
allows you to add another expression

00:14:18,170 --> 00:14:23,150
just before so you have your code

00:14:21,110 --> 00:14:25,880
without the assert and you can insert

00:14:23,150 --> 00:14:28,280
the search just here so that's when

00:14:25,880 --> 00:14:30,620
you're debugging you want to make some

00:14:28,280 --> 00:14:35,170
assumption and very frightened you Adam

00:14:30,620 --> 00:14:38,210
asserts and you say because the next

00:14:35,170 --> 00:14:41,120
error messages are not super clear

00:14:38,210 --> 00:14:43,040
always so what you do is you sprinkle

00:14:41,120 --> 00:14:45,540
some asserts in your code and you like

00:14:43,040 --> 00:14:48,300
okay I think this should be

00:14:45,540 --> 00:14:51,140
and Senator or something and then you

00:14:48,300 --> 00:14:51,140
get so

00:14:54,720 --> 00:15:02,700
yeah Roma's there now we have arteries

00:14:59,060 --> 00:15:05,940
there's way of constructing objects that

00:15:02,700 --> 00:15:08,850
is shorter than its Jason so you don't

00:15:05,940 --> 00:15:12,930
need to you can create a deep hierarchy

00:15:08,850 --> 00:15:16,800
with just adding the dots in between so

00:15:12,930 --> 00:15:21,630
we should do 5 6 & / that device for

00:15:16,800 --> 00:15:25,760
this funding it actually bins actually I

00:15:21,630 --> 00:15:25,760
should show you part

00:15:46,040 --> 00:15:48,670
sorry

00:15:53,520 --> 00:16:00,890
so now we have a so now I have a deep

00:15:57,450 --> 00:16:07,110
perfect if you aim at five systems

00:16:00,890 --> 00:16:11,070
that's nice and you can see the devices

00:16:07,110 --> 00:16:14,330
that you given I encountered this in the

00:16:11,070 --> 00:16:14,330
next rest calculation

00:16:20,500 --> 00:16:28,660
okay this another keyword this port

00:16:25,320 --> 00:16:32,020
which allows you to test if this

00:16:28,660 --> 00:16:34,570
attribute exists then it's not return

00:16:32,020 --> 00:16:39,070
this if it does exist then you return

00:16:34,570 --> 00:16:41,410
this alternative are you and finally you

00:16:39,070 --> 00:16:45,400
have this test operator that allows you

00:16:41,410 --> 00:16:52,000
to test just returns a true force if she

00:16:45,400 --> 00:16:54,840
exists the few boolean produce my

00:16:52,000 --> 00:16:54,840
message

00:16:54,910 --> 00:17:00,940
stringing tradition so that's where

00:16:57,820 --> 00:17:04,470
conversion is that automatically or in

00:17:00,940 --> 00:17:08,280
some cases where rhombus to the string

00:17:04,470 --> 00:17:11,680
but not voice so here first would we

00:17:08,280 --> 00:17:16,770
access this we get the string and we

00:17:11,680 --> 00:17:16,770
build this string object from this value

00:17:21,630 --> 00:17:27,280
this is a merger furniture for good

00:17:24,069 --> 00:17:42,990
sense it's a flat so it doesn't do a

00:17:27,280 --> 00:17:46,450
deep marsh just they're good to say so

00:17:42,990 --> 00:17:49,720
in you when you read the next codon

00:17:46,450 --> 00:17:54,130
expectations for something you you will

00:17:49,720 --> 00:17:57,250
see and that's confusing is you see the

00:17:54,130 --> 00:18:00,850
dollar of this and then without the

00:17:57,250 --> 00:18:03,490
brackets right so this one is on the mix

00:18:00,850 --> 00:18:06,970
and language level so that is the

00:18:03,490 --> 00:18:09,790
interpolation and then this is later on

00:18:06,970 --> 00:18:12,280
used in the builder faced in the pit

00:18:09,790 --> 00:18:17,020
phase which we're going to cover later

00:18:12,280 --> 00:18:20,630
but this is just a bash liability yeah

00:18:17,020 --> 00:18:24,120
and so they look the same there

00:18:20,630 --> 00:18:27,050
you start different moments so because

00:18:24,120 --> 00:18:30,240
initially have evolution that happens

00:18:27,050 --> 00:18:32,040
then you produce the revisions and then

00:18:30,240 --> 00:18:34,280
you build the dedication so you're on a

00:18:32,040 --> 00:18:38,450
full lifecycle

00:18:34,280 --> 00:18:38,450
we're gonna currently thank you

00:18:39,750 --> 00:18:49,950
yeah like number a virtuous and alright

00:18:45,750 --> 00:18:55,860
so that's it for the language so do I

00:18:49,950 --> 00:18:58,250
have a branch here to read them it's on

00:18:55,860 --> 00:19:01,410
everything I said

00:18:58,250 --> 00:19:01,410
[Music]

00:19:06,090 --> 00:19:11,370
good alright

00:19:21,250 --> 00:19:34,370
so she's fine is definition of function

00:19:25,640 --> 00:19:39,920
right yes so we have two arguments and

00:19:34,370 --> 00:19:43,700
we have a body of function which says

00:19:39,920 --> 00:19:47,590
that we want to I don't understand this

00:19:43,700 --> 00:19:54,260
why I know that this is definition of

00:19:47,590 --> 00:19:56,180
okay yeah I don't see a sign yeah okay

00:19:54,260 --> 00:19:59,150
well that's what does meet that okay so

00:19:56,180 --> 00:20:00,710
this is a natural fit sets yeah anyway

00:19:59,150 --> 00:20:04,760
access this value

00:20:00,710 --> 00:20:08,630
yes which turns out this function okay

00:20:04,760 --> 00:20:11,840
and then we pass this over this whole

00:20:08,630 --> 00:20:12,110
object record yes because the records

00:20:11,840 --> 00:20:14,860
okay

00:20:12,110 --> 00:20:18,650
and in the record we have values and

00:20:14,860 --> 00:20:20,690
attributes and values also one other

00:20:18,650 --> 00:20:26,990
thing cute is generated by a function

00:20:20,690 --> 00:20:32,180
that was passed argument and this takes

00:20:26,990 --> 00:20:33,500
also something this is sugar six record

00:20:32,180 --> 00:20:37,190
what is the difference between Iraq and

00:20:33,500 --> 00:20:41,330
then the attribute said so

00:20:37,190 --> 00:20:45,050
so this attributed is Normand this one

00:20:41,330 --> 00:20:49,270
cause this right word that adds both of

00:20:45,050 --> 00:21:43,380
these keys to your scope

00:20:49,270 --> 00:21:43,380
so now we have this one and this one and

00:22:08,070 --> 00:22:16,930
this one is also using so when you type

00:22:13,120 --> 00:22:17,230
Fred you create a new scope right ha and

00:22:16,930 --> 00:22:20,080
cue

00:22:17,230 --> 00:22:22,480
we have no just go it's the same it's

00:22:20,080 --> 00:22:25,870
always this book is always inherited

00:22:22,480 --> 00:22:28,120
protection but then you can extend the

00:22:25,870 --> 00:22:30,190
scope you understand I understand

00:22:28,120 --> 00:22:33,340
so this one is sending something those

00:22:30,190 --> 00:22:39,370
keys they are using the scope of the

00:22:33,340 --> 00:22:43,450
where they initial if I were to use

00:22:39,370 --> 00:22:45,810
Europe you are Europe we did that

00:22:43,450 --> 00:22:47,380
actually itself I wouldn't be able

00:22:45,810 --> 00:22:52,690
unless I

00:22:47,380 --> 00:22:56,770
right before the shooting say yes so

00:22:52,690 --> 00:23:00,300
what you're asking is if I need the URL

00:22:56,770 --> 00:23:04,030
maybe another key in here within that

00:23:00,300 --> 00:23:05,280
than you would have to order it okay so

00:23:04,030 --> 00:23:11,700
that's what right now

00:23:05,280 --> 00:23:11,700
yes okay the server is recursive okay

00:23:21,720 --> 00:23:39,730
then P name and version are nuts but you

00:23:36,610 --> 00:23:46,300
can you can knows so here we use it

00:23:39,730 --> 00:23:48,490
below but you can also use it okay so

00:23:46,300 --> 00:23:51,250
next time we assign an addictive drug

00:23:48,490 --> 00:23:57,120
through and then we have another as you

00:23:51,250 --> 00:24:02,520
get better and it's generating the

00:23:57,120 --> 00:24:02,520
another a ticket set but with the

00:24:04,800 --> 00:24:10,810
previous is the time from the way yes so

00:24:08,650 --> 00:24:16,420
we can here inside we can use attribute

00:24:10,810 --> 00:24:19,170
from Lee yeah okay so so this one has

00:24:16,420 --> 00:24:19,170
access to

00:24:19,260 --> 00:24:25,109
[Music]

00:25:06,390 --> 00:25:13,510
so the food fight is a function right

00:25:10,150 --> 00:25:15,760
and if you report this you get more

00:25:13,510 --> 00:25:17,980
function okay and if I come into the

00:25:15,760 --> 00:25:22,450
next ribbon set with those two chains

00:25:17,980 --> 00:25:27,250
it'll return another attribute set uh no

00:25:22,450 --> 00:25:30,310
actually return the result in changes

00:25:27,250 --> 00:25:33,760
make the regression liberalization much

00:25:30,310 --> 00:25:37,450
yes okay that takes another trip exactly

00:25:33,760 --> 00:25:40,840
okay so it's gonna be YouTube that's how

00:25:37,450 --> 00:25:41,320
we did things net should we do another

00:25:40,840 --> 00:25:44,700
one

00:25:41,320 --> 00:25:48,150
yeah and if I'm not here for this one

00:25:44,700 --> 00:25:48,150
it's shorter

00:25:56,110 --> 00:25:59,180
[Applause]

00:26:07,740 --> 00:26:10,839
[Music]

00:26:13,040 --> 00:27:09,020
okay all right and we don't care about

00:27:05,030 --> 00:27:17,340
so and sometimes want to distract them

00:27:09,020 --> 00:27:20,950
specific arguments sometimes yeah we

00:27:17,340 --> 00:27:27,740
have this actually set and then

00:27:20,950 --> 00:27:30,350
assigned to this Japs are the contents

00:27:27,740 --> 00:27:33,170
of harbor confederation mix because all

00:27:30,350 --> 00:27:42,140
the definitions in there become part of

00:27:33,170 --> 00:27:54,110
this yeah all the why not we're just

00:27:42,140 --> 00:27:59,570
reading this okay so this concentration

00:27:54,110 --> 00:28:02,900
is it because and specified there easily

00:27:59,570 --> 00:28:05,990
just a time yeah so right now

00:28:02,900 --> 00:28:10,220
exactly so right now all we do is we

00:28:05,990 --> 00:28:14,650
actually assign this array that contains

00:28:10,220 --> 00:28:19,930
a path that's it's like it's just about

00:28:14,650 --> 00:28:19,930
and we are saying this this attributes

00:28:30,130 --> 00:28:33,269
[Music]

00:28:38,160 --> 00:29:56,320
so I don't understand how a votes he was

00:29:53,920 --> 00:29:58,540
walk-in next because like a visitor is

00:29:56,320 --> 00:30:01,230
like using four but it's not like the

00:29:58,540 --> 00:30:01,230
keyboard

00:30:14,710 --> 00:30:34,970
yeah so the key words are so your

00:30:34,309 --> 00:30:38,000
diversion

00:30:34,970 --> 00:30:39,950
baton functions which are basically by

00:30:38,000 --> 00:30:43,160
default you have the scope with all of

00:30:39,950 --> 00:30:46,760
these functions available then the key

00:30:43,160 --> 00:31:10,120
words are more than like the parsing

00:30:46,760 --> 00:31:10,120
section of the like that

00:31:23,010 --> 00:31:26,119
[Music]

00:31:51,680 --> 00:31:54,829
[Music]

00:32:01,400 --> 00:32:04,569
[Music]

00:32:17,179 --> 00:32:31,110
let's fight back and we can play similar

00:32:24,419 --> 00:32:33,149
routes that's more when you start

00:32:31,110 --> 00:32:35,899
writing next you learn when it's

00:32:33,149 --> 00:32:35,899
appropriate to use

00:32:43,670 --> 00:33:03,150
yeah yes yeah you never move it anything

00:32:59,460 --> 00:33:05,730
right you need change when you do

00:33:03,150 --> 00:33:13,800
operations you always only return new

00:33:05,730 --> 00:33:16,710
bodies from that all right so I guess so

00:33:13,800 --> 00:33:21,270
we need code Nix is a functional

00:33:16,710 --> 00:33:24,060
language it's a lazy in its pure I just

00:33:21,270 --> 00:33:27,510
want to go over that quickly so

00:33:24,060 --> 00:33:29,430
functional is this approach where you

00:33:27,510 --> 00:33:32,730
don't need anything like we're talking

00:33:29,430 --> 00:33:37,800
about and you have functions to

00:33:32,730 --> 00:33:40,680
deliberations lately is because Nick's

00:33:37,800 --> 00:33:43,410
only does the operation when you access

00:33:40,680 --> 00:33:46,050
something so you can have a whole Treaty

00:33:43,410 --> 00:33:48,870
of operation smart if you don't touch it

00:33:46,050 --> 00:33:51,540
it's not good evaluated so it's not like

00:33:48,870 --> 00:33:53,610
your scripting language words in your

00:33:51,540 --> 00:33:55,970
heads when you're second and you read

00:33:53,610 --> 00:33:59,340
the next code it's not it's not like

00:33:55,970 --> 00:34:02,090
it's not inverted where you do like does

00:33:59,340 --> 00:34:05,070
this thing then it does this thing

00:34:02,090 --> 00:34:07,710
it's only when you access the values

00:34:05,070 --> 00:34:16,440
that it's going to ever be the poor

00:34:07,710 --> 00:34:19,500
thing which maybe I should he must I can

00:34:16,440 --> 00:34:23,280
demonstrate more about this later and

00:34:19,500 --> 00:34:26,580
then finally is pure from everything I

00:34:23,280 --> 00:34:27,210
showed we are not writing anything to

00:34:26,580 --> 00:34:30,149
taste

00:34:27,210 --> 00:34:33,899
we're only reading things so there's no

00:34:30,149 --> 00:34:36,770
side effects right we are not for now

00:34:33,899 --> 00:34:41,159
what you can do from what I explained is

00:34:36,770 --> 00:34:48,050
maybe put a function values together and

00:34:41,159 --> 00:34:48,050
then producer Jason Aldean is important

00:34:51,270 --> 00:34:59,770
it is but it's pure in the sense that

00:34:54,850 --> 00:35:02,470
you don't modify anything Johnny as long

00:34:59,770 --> 00:35:07,060
as you only read it's fine here and like

00:35:02,470 --> 00:35:22,900
an observer it's a kind of thrown

00:35:07,060 --> 00:35:32,440
exception so the nice thing is if it

00:35:22,900 --> 00:35:35,830
fails it fails consistently so then

00:35:32,440 --> 00:35:37,350
that's the next jockeys birthday so but

00:35:35,830 --> 00:35:39,670
now all we're doing is we're taking

00:35:37,350 --> 00:35:40,870
bunch of values and putting them

00:35:39,670 --> 00:35:43,420
together yep

00:35:40,870 --> 00:35:46,330
and so that's the things that are

00:35:43,420 --> 00:35:48,460
missing topics the big missing topic is

00:35:46,330 --> 00:35:50,500
the derivation you know because that's

00:35:48,460 --> 00:35:55,350
where all the computation and the bits

00:35:50,500 --> 00:35:55,350
happen and we're gonna talk about this

00:35:57,250 --> 00:36:05,590
yes so we are the pure speaking function

00:36:01,690 --> 00:36:08,240
pure and functional fitting image

00:36:05,590 --> 00:36:10,280
hopefully now when you see next code is

00:36:08,240 --> 00:36:13,780
that's just like whoa what is the thing

00:36:10,280 --> 00:36:18,260
you can actually follow through and then

00:36:13,780 --> 00:36:30,350
from ducts maybe you can like it makes

00:36:18,260 --> 00:36:31,940
you more independent I wonder if it

00:36:30,350 --> 00:36:33,590
might be interesting to run that

00:36:31,940 --> 00:36:49,060
configuration about Nick's to sort of

00:36:33,590 --> 00:36:49,060
unpack it so it's building each okay

00:36:51,540 --> 00:36:55,640
I guess I can show

00:37:07,190 --> 00:37:11,770
so we have the configuration of next

00:37:09,560 --> 00:37:11,770
care

00:37:21,569 --> 00:37:26,279
I'm just going to modify it for now and

00:37:23,849 --> 00:37:29,039
you note that it's not a function

00:37:26,279 --> 00:37:35,179
because we established that we don't

00:37:29,039 --> 00:37:38,759
need any of the arguments in red and now

00:37:35,179 --> 00:37:41,159
there's a good mix instantiate that

00:37:38,759 --> 00:37:49,759
allows you to actually reach the next

00:37:41,159 --> 00:37:53,309
code and if say - and that returns

00:37:49,759 --> 00:37:55,619
values but right now you can see it's

00:37:53,309 --> 00:37:58,199
Pacey because it just returns the first

00:37:55,619 --> 00:38:03,989
step but it didn't try to forget all of

00:37:58,199 --> 00:38:05,309
the rest it was really excessive so we

00:38:03,989 --> 00:38:08,039
can say actually

00:38:05,309 --> 00:38:10,439
please be strict and now a treat just

00:38:08,039 --> 00:38:13,109
the whole thing so it's not really

00:38:10,439 --> 00:38:15,049
readable so I'm just going to generate

00:38:13,109 --> 00:38:20,299
JSON instead

00:38:15,049 --> 00:38:20,299
- thank you and now we have the question

00:38:31,580 --> 00:38:35,780
so that's what we have on the decks and

00:38:34,600 --> 00:38:39,830
here

00:38:35,780 --> 00:39:00,280
oh yeah so the pot is not a decent buddy

00:38:39,830 --> 00:39:00,280
or so it's alright if I touch this

00:39:05,480 --> 00:39:18,079
that's one I did so here we're starting

00:39:09,829 --> 00:39:20,930
to see this magic certainty what it does

00:39:18,079 --> 00:39:24,500
it's winning access is apart it imports

00:39:20,930 --> 00:39:28,400
it into the next door and that's the

00:39:24,500 --> 00:39:31,400
value of them and the is a harsher we're

00:39:28,400 --> 00:39:33,140
gonna cover that later but if you change

00:39:31,400 --> 00:39:37,430
the configuration file it changes the

00:39:33,140 --> 00:39:43,099
harvest this is forward forward forward

00:39:37,430 --> 00:39:46,820
yeah and another thing to notice is that

00:39:43,099 --> 00:39:49,310
the keys are ordered and that's first is

00:39:46,820 --> 00:39:51,920
that if you want to have because it's

00:39:49,310 --> 00:39:53,540
basically going to be more repeatable so

00:39:51,920 --> 00:39:56,000
we need to do things like ordering

00:39:53,540 --> 00:39:58,150
things so that we always get the same in

00:39:56,000 --> 00:39:58,150
them

00:39:58,510 --> 00:40:06,920
all right something we can happen that

00:40:01,640 --> 00:40:11,680
the kids will be order on a online

00:40:06,920 --> 00:40:11,680
relation is our orbit day

00:40:13,180 --> 00:40:20,700
okay that's enough enough should we take

00:40:16,720 --> 00:40:20,700

YouTube URL: https://www.youtube.com/watch?v=61MuMY9XFNo


