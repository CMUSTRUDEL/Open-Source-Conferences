Title: NixOS Security â€“ Vulnerability Roundup n+1 by Graham Christensen (NixCon 2017)
Publication date: 2017-10-30
Playlist: NixCon 2017 (Munich)
Description: 
	NixOS is receiving more and more attention from users expecting up to date packages and timely security patches. Weekly "catch-up" issues were effective, but faltered after our datasource dried up. In this talk we will explore the challenges and potential solutions around regular NixOS security patching, and how to join the famous "-distro" list.
Captions: 
	00:00:05,400 --> 00:00:11,400
so I'm just gonna introduce to you brand

00:00:08,100 --> 00:00:11,980
question which is basically the reason I

00:00:11,400 --> 00:00:15,410
can

00:00:11,980 --> 00:00:16,590
customers yes we have security updates

00:00:15,410 --> 00:00:19,300
[Music]

00:00:16,590 --> 00:00:20,890
when in his day-to-day when it's not

00:00:19,300 --> 00:00:34,379
working on the security of the is

00:00:20,890 --> 00:00:38,250
working a site reliability engineer so

00:00:34,379 --> 00:00:41,620
I'd like to start with some history on

00:00:38,250 --> 00:00:44,219
the efforts of keeping Nick so as secure

00:00:41,620 --> 00:00:47,379
over the at least since when I started

00:00:44,219 --> 00:00:50,260
and I just like note that it's actually

00:00:47,379 --> 00:00:51,730
Franz makes many many security for

00:00:50,260 --> 00:01:03,550
requests and way more than I do these

00:00:51,730 --> 00:01:07,149
days so I'd like to thank him first in

00:01:03,550 --> 00:01:12,039
early 2016 I had just joined the project

00:01:07,149 --> 00:01:15,100
like 45 days earlier and I noticed that

00:01:12,039 --> 00:01:17,410
Franz had put in dozens of patches over

00:01:15,100 --> 00:01:19,209
like an hour and I was just blown away

00:01:17,410 --> 00:01:20,200
and didn't know what he was doing or

00:01:19,209 --> 00:01:22,270
where he's getting them from but I

00:01:20,200 --> 00:01:25,869
wanted to help and I I really wanted to

00:01:22,270 --> 00:01:27,849
get involved so I asked what he was

00:01:25,869 --> 00:01:30,910
doing he said you know with there's this

00:01:27,849 --> 00:01:32,500
list of vulnerabilities on lwn net and

00:01:30,910 --> 00:01:34,300
I'm just going through basically

00:01:32,500 --> 00:01:36,429
everything from I don't know maybe the

00:01:34,300 --> 00:01:42,789
last year going through a lot of pages

00:01:36,429 --> 00:01:44,649
and what what they do is or what they

00:01:42,789 --> 00:01:46,030
did is they would track every

00:01:44,649 --> 00:01:48,700
vulnerability that came out that was

00:01:46,030 --> 00:01:52,270
announced by a bunch of different Linux

00:01:48,700 --> 00:01:54,090
distributions and then aggregate them

00:01:52,270 --> 00:01:56,289
together so if there was an issue in

00:01:54,090 --> 00:01:58,670
let's pick on bind somewhere if there

00:01:56,289 --> 00:02:02,090
was an issue in behind

00:01:58,670 --> 00:02:04,700
they would link to the issue for fedora

00:02:02,090 --> 00:02:07,850
for her red hat for Ubuntu for Debian

00:02:04,700 --> 00:02:10,039
for Gen 2 and then you could go to any

00:02:07,850 --> 00:02:13,640
one of those and find a relevant patch

00:02:10,039 --> 00:02:15,790
and it made it way easy to go and fix

00:02:13,640 --> 00:02:18,500
the issue in as little time as possible

00:02:15,790 --> 00:02:26,420
and made it easy to actually find the

00:02:18,500 --> 00:02:28,430
list of problems shortly after that this

00:02:26,420 --> 00:02:30,319
idea of going to l-dub you in and

00:02:28,430 --> 00:02:31,280
looking at their list and then patching

00:02:30,319 --> 00:02:33,800
6 months of security vulnerabilities

00:02:31,280 --> 00:02:39,920
became officially part of the release

00:02:33,800 --> 00:02:44,900
process that it's tough it's tough to do

00:02:39,920 --> 00:02:46,670
that which i think was really nicely

00:02:44,900 --> 00:02:49,130
demonstrated by the very first

00:02:46,670 --> 00:02:54,069
vulnerability roundup that I opened I

00:02:49,130 --> 00:02:59,720
believe in September of 2016 and it had

00:02:54,069 --> 00:03:02,330
850 issues for us to look at and it was

00:02:59,720 --> 00:03:05,180
broken down into what project it was

00:03:02,330 --> 00:03:08,090
related to and a link and a small

00:03:05,180 --> 00:03:09,799
description of the issue and was

00:03:08,090 --> 00:03:13,190
checkboxes on a github issue which was

00:03:09,799 --> 00:03:16,370
massive and we found a lot of issues

00:03:13,190 --> 00:03:18,739
using github issues as a database it

00:03:16,370 --> 00:03:22,209
doesn't work very well if two people

00:03:18,739 --> 00:03:25,959
tick two boxes at the same time one wins

00:03:22,209 --> 00:03:31,070
or neither wins has happened sometimes

00:03:25,959 --> 00:03:32,359
and this is just a small list of the

00:03:31,070 --> 00:03:33,859
people who are actually offering pull

00:03:32,359 --> 00:03:36,680
requests just the easy ones I could find

00:03:33,859 --> 00:03:40,549
on the issue thank you to all of these

00:03:36,680 --> 00:03:42,500
people and people reviewing the poor

00:03:40,549 --> 00:03:44,660
requests this okay I mean 850 issues

00:03:42,500 --> 00:03:46,220
opened a whole lot of port requests and

00:03:44,660 --> 00:03:49,940
certainly contributed to one of those

00:03:46,220 --> 00:03:52,760
ticks you off end and then the mergers

00:03:49,940 --> 00:03:55,609
of course a huge amount of effort went

00:03:52,760 --> 00:03:58,430
into this it took six days to actually

00:03:55,609 --> 00:04:00,290
go through that whole list I I was

00:03:58,430 --> 00:04:01,940
impressed it took six days but at the

00:04:00,290 --> 00:04:04,880
same time I sort of felt like it took a

00:04:01,940 --> 00:04:07,659
month it was maybe the longest most

00:04:04,880 --> 00:04:11,630
exhausting project I've ever worked on

00:04:07,659 --> 00:04:15,560
but we managed to get all 850 of these

00:04:11,630 --> 00:04:26,570
done in time for the 16:09 branch

00:04:15,560 --> 00:04:30,440
release and I think it made 1609 in a

00:04:26,570 --> 00:04:33,140
lot of ways one of the best first

00:04:30,440 --> 00:04:34,850
started the process that made 1609 one

00:04:33,140 --> 00:04:40,100
of the best most secure releases we've

00:04:34,850 --> 00:04:44,230
had after 1609 it started this regular

00:04:40,100 --> 00:04:47,660
weekly community effort of reviewing the

00:04:44,230 --> 00:04:50,240
issues on lwn from the previous week so

00:04:47,660 --> 00:04:52,490
we were quite up to date and regular and

00:04:50,240 --> 00:04:55,370
prompt and fast at getting all of these

00:04:52,490 --> 00:04:57,800
issues patched better than many

00:04:55,370 --> 00:05:00,980
distributions a fun thing about this

00:04:57,800 --> 00:05:02,450
process is that pretty frequently some

00:05:00,980 --> 00:05:10,520
distributions realized they hadn't

00:05:02,450 --> 00:05:12,530
patched something from 2014 again it

00:05:10,520 --> 00:05:14,540
would be like hatchback the door and the

00:05:12,530 --> 00:05:17,090
2003 passed by Debbie a few thousand

00:05:14,540 --> 00:05:19,790
four and then Jen too did this a lot

00:05:17,090 --> 00:05:21,590
patch by Jen to 2016 but we were

00:05:19,790 --> 00:05:25,490
vulnerable like this whole time and so I

00:05:21,590 --> 00:05:28,490
was really grateful for for all that

00:05:25,490 --> 00:05:30,110
that help and data that we provided and

00:05:28,490 --> 00:05:32,120
I really want to focus that this was a

00:05:30,110 --> 00:05:33,770
community effort it wasn't just a single

00:05:32,120 --> 00:05:38,210
person doing all this work and I was

00:05:33,770 --> 00:05:40,130
incredibly helpful shortly after we

00:05:38,210 --> 00:05:43,070
officially created the snick security

00:05:40,130 --> 00:05:44,780
announce mailing list something to help

00:05:43,070 --> 00:05:47,960
bring us to becoming more mature

00:05:44,780 --> 00:05:49,130
distribution that's a something that's

00:05:47,960 --> 00:05:51,560
close to my heart and something that's

00:05:49,130 --> 00:05:53,170
important to me you could subscribe to

00:05:51,560 --> 00:05:55,520
this and receive advisories

00:05:53,170 --> 00:05:58,160
unfortunately this is somewhat fallen by

00:05:55,520 --> 00:06:00,590
the wayside but I'm hoping we'll bring

00:05:58,160 --> 00:06:02,660
it back shortly

00:06:00,590 --> 00:06:04,910
pretty soon after that we formally

00:06:02,660 --> 00:06:09,950
created a nick so as security team this

00:06:04,910 --> 00:06:14,720
team has handled for five just at this

00:06:09,950 --> 00:06:17,240
point specifically around we received

00:06:14,720 --> 00:06:19,610
some embargoed security issues that we

00:06:17,240 --> 00:06:21,979
can prepare it's a patch ahead of time

00:06:19,610 --> 00:06:24,370
most of those yet end up getting leaked

00:06:21,979 --> 00:06:24,370
but not

00:06:24,560 --> 00:06:31,639
and then some critical issues that we've

00:06:26,990 --> 00:06:35,479
discovered in how Nix OS modules work a

00:06:31,639 --> 00:06:38,210
few authentication issues and then

00:06:35,479 --> 00:06:41,949
actually some some issues we've found in

00:06:38,210 --> 00:06:45,469
mix itself which is a lot of fun to find

00:06:41,949 --> 00:06:47,449
and so we had set up this wonderful

00:06:45,469 --> 00:06:49,400
weekly process we had developed this

00:06:47,449 --> 00:06:54,050
community effort and then what felt like

00:06:49,400 --> 00:06:58,759
no time at all oh sorry the March first

00:06:54,050 --> 00:07:02,419
came and we had done 24 of these try

00:06:58,759 --> 00:07:06,560
triage 1,500 reports which is blew me

00:07:02,419 --> 00:07:08,960
away when I saw that and lwn shut down

00:07:06,560 --> 00:07:11,259
their vulnerability service which broke

00:07:08,960 --> 00:07:18,830
all of the tooling that we had built and

00:07:11,259 --> 00:07:21,020
pretty much ruined our our process it

00:07:18,830 --> 00:07:23,689
was it was a bit devastating actually I

00:07:21,020 --> 00:07:26,180
remember running the script to build the

00:07:23,689 --> 00:07:29,270
report and it showed three and I thought

00:07:26,180 --> 00:07:35,120
oh boy that's it shouldn't be free it's

00:07:29,270 --> 00:07:38,770
never three there were some attempts

00:07:35,120 --> 00:07:41,900
after l-dub UN shutdown to create

00:07:38,770 --> 00:07:43,310
alternative tooling some ideas around

00:07:41,900 --> 00:07:47,029
looking at every see the e that is

00:07:43,310 --> 00:07:50,169
issued or creating issues out of every

00:07:47,029 --> 00:07:52,940
mail into the OSS security mailing list

00:07:50,169 --> 00:07:54,529
unfortunately those haven't really pans

00:07:52,940 --> 00:08:01,729
out quite yet

00:07:54,529 --> 00:08:07,430
but I'm optimistic for the future which

00:08:01,729 --> 00:08:10,639
I'm looking to discuss and to start out

00:08:07,430 --> 00:08:12,680
I think Peter and I agree I I really

00:08:10,639 --> 00:08:14,300
want Nick so as to be commercially

00:08:12,680 --> 00:08:16,039
viable and I want it to be an option

00:08:14,300 --> 00:08:16,719
that CTOs can look at and say yes that's

00:08:16,039 --> 00:08:21,949
a good idea

00:08:16,719 --> 00:08:24,169
and I think it offers real value that we

00:08:21,949 --> 00:08:26,389
need to be selling much better I don't

00:08:24,169 --> 00:08:28,789
think the value propositions Nix is that

00:08:26,389 --> 00:08:30,889
it's particularly functional I think the

00:08:28,789 --> 00:08:33,500
value proposition of Nix is that you can

00:08:30,889 --> 00:08:35,120
deploy something and undo it and and be

00:08:33,500 --> 00:08:36,680
back to where you started you

00:08:35,120 --> 00:08:38,419
accidentally installed some package you

00:08:36,680 --> 00:08:43,250
know as long as you don't update your

00:08:38,419 --> 00:08:46,640
system to use it it's just in your story

00:08:43,250 --> 00:08:49,040
it doesn't impact anything I once

00:08:46,640 --> 00:08:52,700
interviewed with a company that makes

00:08:49,040 --> 00:08:55,070
automatic cranes for ports and they run

00:08:52,700 --> 00:08:57,410
ports all over the world and it costs a

00:08:55,070 --> 00:09:00,740
million dollars in FAMAS revenue every

00:08:57,410 --> 00:09:02,410
single time they deploy per port they

00:09:00,740 --> 00:09:05,270
have to shut down everything all the

00:09:02,410 --> 00:09:07,550
ships have to wait all the trucks have

00:09:05,270 --> 00:09:09,080
to wait nothing's happening and if

00:09:07,550 --> 00:09:11,240
something goes wrong it can quickly

00:09:09,080 --> 00:09:15,130
quickly add up because this is this is

00:09:11,240 --> 00:09:15,130
an hour a million dollars in an hour

00:09:15,160 --> 00:09:23,150
they we discussed briefly using mix but

00:09:19,760 --> 00:09:28,010
again it's not quite ready but I think

00:09:23,150 --> 00:09:29,720
it it deserves a space deserves a

00:09:28,010 --> 00:09:36,350
mention in this space because of how

00:09:29,720 --> 00:09:38,930
safe it is and I think among the issues

00:09:36,350 --> 00:09:41,660
that Peter recommended or pointed out

00:09:38,930 --> 00:09:43,820
are demonstrating that we do care about

00:09:41,660 --> 00:09:46,490
security we do care about keeping our

00:09:43,820 --> 00:09:48,710
users safe and he literally said this in

00:09:46,490 --> 00:09:50,089
his in his talk isn't is you look at a

00:09:48,710 --> 00:09:53,000
small distribution and you think you

00:09:50,089 --> 00:09:54,170
know is somebody gonna leave and is

00:09:53,000 --> 00:09:58,280
their effort just gonna go away

00:09:54,170 --> 00:10:01,760
if Franz left today would our security

00:09:58,280 --> 00:10:07,310
patches evaporate many of them probably

00:10:01,760 --> 00:10:08,870
and that's that's an issue as I noted

00:10:07,310 --> 00:10:12,230
one option that we looked at was just

00:10:08,870 --> 00:10:14,990
looking at every CV that comes out I

00:10:12,230 --> 00:10:18,320
don't know if you've looked at a reason

00:10:14,990 --> 00:10:22,100
a security advisory for chrome lately

00:10:18,320 --> 00:10:23,600
but it's a hundred TVs per release it

00:10:22,100 --> 00:10:28,910
doesn't it doesn't make sense to track

00:10:23,600 --> 00:10:30,890
at that level because the the the

00:10:28,910 --> 00:10:33,200
patches don't come per CVE

00:10:30,890 --> 00:10:35,180
that patch has come per overarching

00:10:33,200 --> 00:10:38,810
issue and the overarching issue for

00:10:35,180 --> 00:10:41,680
korone might involve five CDs another

00:10:38,810 --> 00:10:45,980
issue with track and CBE's themselves is

00:10:41,680 --> 00:10:46,980
they they're issued by numbering

00:10:45,980 --> 00:10:50,310
authority

00:10:46,980 --> 00:10:52,949
they start CVE back year and then a one

00:10:50,310 --> 00:10:55,170
number that number goes up into the

00:10:52,949 --> 00:10:58,350
millions I believe every year but in

00:10:55,170 --> 00:11:00,680
reality they're broken up into like a

00:10:58,350 --> 00:11:05,279
few thousand increments it given to

00:11:00,680 --> 00:11:07,649
authorities who can issue sir CVEs

00:11:05,279 --> 00:11:09,329
themselves so and and some of those

00:11:07,649 --> 00:11:11,190
might be embargo at some of them might

00:11:09,329 --> 00:11:12,630
be reserved and then never used so you

00:11:11,190 --> 00:11:14,970
can't actually look at the space and say

00:11:12,630 --> 00:11:17,190
yes I have a contiguous series of CDs

00:11:14,970 --> 00:11:19,079
from one to a million I've got all of

00:11:17,190 --> 00:11:20,850
the CDs because there's going to be gaps

00:11:19,079 --> 00:11:26,760
it's very difficult to stay on top of

00:11:20,850 --> 00:11:28,949
this a better option is something that

00:11:26,760 --> 00:11:34,170
we tried but not very successfully which

00:11:28,949 --> 00:11:35,880
was watching OSS security and what what

00:11:34,170 --> 00:11:39,029
we looked into doing was automatically

00:11:35,880 --> 00:11:41,430
creating github issues per thread on OSS

00:11:39,029 --> 00:11:44,370
security which it took the hell of an

00:11:41,430 --> 00:11:48,720
email client and moved it to github and

00:11:44,370 --> 00:11:52,470
that's really really not any fun what

00:11:48,720 --> 00:11:54,510
most distributions do is yes they follow

00:11:52,470 --> 00:11:57,300
SS security and yes they follow full

00:11:54,510 --> 00:11:59,790
disclosure but the the process of going

00:11:57,300 --> 00:12:02,220
from an email to the list to an issue in

00:11:59,790 --> 00:12:06,120
their tracker is manual and a process of

00:12:02,220 --> 00:12:07,680
review and triage and first I mean

00:12:06,120 --> 00:12:10,920
seeing if there even if impacted by it

00:12:07,680 --> 00:12:15,269
or if they even package the the software

00:12:10,920 --> 00:12:17,339
it touches this is where a community

00:12:15,269 --> 00:12:22,050
effort comes in we're hey we wouldn't

00:12:17,339 --> 00:12:24,660
need help with this all of this is

00:12:22,050 --> 00:12:27,569
leading up to a goal again Peter set

00:12:24,660 --> 00:12:30,329
this goal a few years ago of joining the

00:12:27,569 --> 00:12:32,430
famous Linux distro list this list

00:12:30,329 --> 00:12:34,589
handles embargo and security patches

00:12:32,430 --> 00:12:35,970
it has about 10 to 15 Linux

00:12:34,589 --> 00:12:38,459
distributions on it and we would like to

00:12:35,970 --> 00:12:40,440
be one of them you can imagine that's

00:12:38,459 --> 00:12:44,339
gonna be difficult but I think we can

00:12:40,440 --> 00:12:46,230
make it and the reason we want to be on

00:12:44,339 --> 00:12:47,819
this is so that we can receive the

00:12:46,230 --> 00:12:49,410
patches ahead of time get that if

00:12:47,819 --> 00:12:54,389
prepared and then release them as soon

00:12:49,410 --> 00:12:59,069
as it goes live and keep keep our users

00:12:54,389 --> 00:13:00,320
safe one reason I find this is such a

00:12:59,069 --> 00:13:01,880
important goal is

00:13:00,320 --> 00:13:03,410
I think it sends an extremely clear

00:13:01,880 --> 00:13:07,160
message that we care and that were

00:13:03,410 --> 00:13:08,570
dedicated to the issue they getting on

00:13:07,160 --> 00:13:10,010
this list is difficult they have a lot

00:13:08,570 --> 00:13:12,080
of requirements they want to know you

00:13:10,010 --> 00:13:14,230
were serious they want to know that you

00:13:12,080 --> 00:13:16,760
are capable of handling and crypted

00:13:14,230 --> 00:13:18,920
encrypted mail they want to know that

00:13:16,760 --> 00:13:21,230
you're capable of keeping secrets they

00:13:18,920 --> 00:13:26,540
want to know that if they let you and

00:13:21,230 --> 00:13:27,590
you're not gonna spoil it I'm gonna go

00:13:26,540 --> 00:13:29,690
through some of the requirements they

00:13:27,590 --> 00:13:31,340
have one is that we unix-like and while

00:13:29,690 --> 00:13:34,250
we don't follow us at the hierarchy

00:13:31,340 --> 00:13:39,770
standard we are unix-like and we are

00:13:34,250 --> 00:13:42,710
open source we've got this one we are

00:13:39,770 --> 00:13:44,810
not an internal product if we were a

00:13:42,710 --> 00:13:46,490
Linux distribution used only exclusively

00:13:44,810 --> 00:13:53,270
inside of a greater organization we

00:13:46,490 --> 00:13:58,640
would not be allowed in we are not a

00:13:53,270 --> 00:14:00,080
downstream rebuild for example when Red

00:13:58,640 --> 00:14:01,640
Hat is a member of this list

00:14:00,080 --> 00:14:03,380
however downstream rebuilds like

00:14:01,640 --> 00:14:05,360
scientific Linux are not on this list

00:14:03,380 --> 00:14:07,250
because as soon as Red Hat issues the

00:14:05,360 --> 00:14:09,290
patches to their distribution it's very

00:14:07,250 --> 00:14:12,770
simple for scientific to then take those

00:14:09,290 --> 00:14:16,750
patches and release to their users since

00:14:12,770 --> 00:14:19,820
we are our own thing we are allowed in

00:14:16,750 --> 00:14:21,890
this one's tricky we need somebody who's

00:14:19,820 --> 00:14:24,020
already on the list to trust us enough

00:14:21,890 --> 00:14:26,050
to recommend we join the list which

00:14:24,020 --> 00:14:28,130
means if we screw it up we look poorly

00:14:26,050 --> 00:14:36,410
reflect poorly on the person who

00:14:28,130 --> 00:14:38,630
recommends us we need to do it for a

00:14:36,410 --> 00:14:41,000
year and I think that's reasonable we we

00:14:38,630 --> 00:14:43,730
have to we can't just decide one day to

00:14:41,000 --> 00:14:45,650
be serious about security and then ask

00:14:43,730 --> 00:14:47,240
for membership and get in and we need to

00:14:45,650 --> 00:14:51,400
be able to patch and release this patch

00:14:47,240 --> 00:14:54,140
the issues the fixes within 10 days and

00:14:51,400 --> 00:14:56,480
back when we were doing the weekly round

00:14:54,140 --> 00:14:58,720
ups we were we were well within that

00:14:56,480 --> 00:14:58,720
mark

00:15:02,120 --> 00:15:08,980
I think the issue is consistency in the

00:15:05,510 --> 00:15:10,940
community effort France does great work

00:15:08,980 --> 00:15:14,029
everybody else who does security

00:15:10,940 --> 00:15:15,950
patching does great work but we need to

00:15:14,029 --> 00:15:18,140
do it a lot and we need to do it

00:15:15,950 --> 00:15:19,730
continuously and we need to be really

00:15:18,140 --> 00:15:22,190
thorough and build up process and

00:15:19,730 --> 00:15:26,630
tooling around this to ensure that we

00:15:22,190 --> 00:15:28,970
are doing a good job and I'm going to

00:15:26,630 --> 00:15:30,980
read it we can't choose to be consistent

00:15:28,970 --> 00:15:32,450
here today we must choose to be

00:15:30,980 --> 00:15:34,520
consistent every day when we wake up

00:15:32,450 --> 00:15:37,550
this is this is a commitment that we

00:15:34,520 --> 00:15:43,610
have to make and I can't make it for the

00:15:37,550 --> 00:15:45,350
community now your confronts back when I

00:15:43,610 --> 00:15:48,320
started the roundups I created an issue

00:15:45,350 --> 00:15:53,000
that would go off or a reminder at 6:45

00:15:48,320 --> 00:15:55,940
every morning and every Wednesday

00:15:53,000 --> 00:16:00,410
morning sorry and that that's how I

00:15:55,940 --> 00:16:03,020
achieved consistently making this list

00:16:00,410 --> 00:16:05,330
everything every single week and I I

00:16:03,020 --> 00:16:07,640
don't I mean this works for me

00:16:05,330 --> 00:16:10,250
I'm but I think this is a personal thing

00:16:07,640 --> 00:16:12,350
that people need to commit to is doing

00:16:10,250 --> 00:16:14,540
some effort on a weekly basis to keep

00:16:12,350 --> 00:16:17,360
next to a secure and then as a

00:16:14,540 --> 00:16:19,220
organization we can organize around that

00:16:17,360 --> 00:16:23,779
and make the tooling and process to make

00:16:19,220 --> 00:16:28,160
that easy as I noted earlier most

00:16:23,779 --> 00:16:28,880
distros triage issues by hand I think

00:16:28,160 --> 00:16:32,860
this makes sense

00:16:28,880 --> 00:16:35,900
I think attempts at person TVs

00:16:32,860 --> 00:16:37,600
mechanically or doing that growth

00:16:35,900 --> 00:16:41,720
natural language parsing on emails

00:16:37,600 --> 00:16:43,940
mechanically is interesting and I would

00:16:41,720 --> 00:16:45,830
be interested in seeing what comes out

00:16:43,940 --> 00:16:47,690
of that but ultimately I think in order

00:16:45,830 --> 00:16:49,820
to be truly consistent we have to have

00:16:47,690 --> 00:16:53,080
the human element in there reading and

00:16:49,820 --> 00:16:56,600
and inspecting whether or not we are

00:16:53,080 --> 00:17:00,830
impacted we need tools and processes

00:16:56,600 --> 00:17:02,630
this is why an issue tracker something

00:17:00,830 --> 00:17:04,730
specific to security issues something

00:17:02,630 --> 00:17:06,290
that lets us record the state of whether

00:17:04,730 --> 00:17:08,689
or not they impact various different

00:17:06,290 --> 00:17:11,000
channels or releases we need to be able

00:17:08,689 --> 00:17:12,620
to document that 16:09 is continuously

00:17:11,000 --> 00:17:14,220
becoming more and more out-of-date that

00:17:12,620 --> 00:17:15,900
17:03 is becoming more and

00:17:14,220 --> 00:17:17,549
we're out of date because those are

00:17:15,900 --> 00:17:19,409
important prize to get people off of

00:17:17,549 --> 00:17:21,089
those distributions we can tell them we

00:17:19,409 --> 00:17:23,959
don't maintain it but we can't what we

00:17:21,089 --> 00:17:27,059
can't tell them 16:03 is vulnerable to a

00:17:23,959 --> 00:17:29,909
thousand issues because we don't track

00:17:27,059 --> 00:17:32,789
that right now and we must use these

00:17:29,909 --> 00:17:34,590
tools to share the load I mentioned that

00:17:32,789 --> 00:17:37,799
earlier as a question about the release

00:17:34,590 --> 00:17:39,870
process we have to build these tools in

00:17:37,799 --> 00:17:41,909
a way that is very easy for anybody to

00:17:39,870 --> 00:17:44,940
just come in and join and participate in

00:17:41,909 --> 00:17:49,220
the process one thing I liked about the

00:17:44,940 --> 00:17:52,350
checklists that we used before was that

00:17:49,220 --> 00:17:54,360
even if somebody didn't have access to

00:17:52,350 --> 00:17:55,950
ticks the boxes they could send a pull

00:17:54,360 --> 00:18:03,570
request it was easy for somebody who did

00:17:55,950 --> 00:18:07,950
that go up and take the box for as it

00:18:03,570 --> 00:18:09,690
stands now if people can help by simply

00:18:07,950 --> 00:18:12,600
monitoring mailing lists they care about

00:18:09,690 --> 00:18:14,460
or if they see on popular news websites

00:18:12,600 --> 00:18:18,080
an issue they can go and check NICs OS

00:18:14,460 --> 00:18:21,929
to see if it's secure and or they can

00:18:18,080 --> 00:18:23,640
watch the 70 commits a day to master and

00:18:21,929 --> 00:18:26,070
see the security relevant ones and back

00:18:23,640 --> 00:18:28,500
forth and to stable and if you don't

00:18:26,070 --> 00:18:29,539
know how it's a patch or are afraid to

00:18:28,500 --> 00:18:31,919
patch something there's some

00:18:29,539 --> 00:18:32,940
dependencies that spook me I don't know

00:18:31,919 --> 00:18:36,530
what they do but I know that they

00:18:32,940 --> 00:18:42,330
rebuild a lot of things open an issue

00:18:36,530 --> 00:18:45,630
and that the the most important thing is

00:18:42,330 --> 00:18:46,950
to try that this is how this is how the

00:18:45,630 --> 00:18:49,049
first one came about this is how the

00:18:46,950 --> 00:18:50,730
vulnerability roundup one came felt it

00:18:49,049 --> 00:18:52,950
wasn't anything fancy I wrote a bunch of

00:18:50,730 --> 00:18:55,289
bash scripts with curl and said a

00:18:52,950 --> 00:18:56,880
knockin and whatever and somehow that

00:18:55,289 --> 00:18:59,820
created a coherent piece of markdown

00:18:56,880 --> 00:19:02,100
that I can make into a github issue it

00:18:59,820 --> 00:19:06,510
was ugly it was nasty it got rewritten

00:19:02,100 --> 00:19:09,809
for roundup number two but I tried and

00:19:06,510 --> 00:19:14,220
it worked really well for six months and

00:19:09,809 --> 00:19:16,200
I would encourage anybody to try and I

00:19:14,220 --> 00:19:20,909
if anybody's interested in trying I

00:19:16,200 --> 00:19:22,770
would like to help you try some

00:19:20,909 --> 00:19:26,250
additional issues that we would need to

00:19:22,770 --> 00:19:27,810
address to join the district is that we

00:19:26,250 --> 00:19:29,640
have to have quite a bit of private

00:19:27,810 --> 00:19:32,070
or structure and I mean really private

00:19:29,640 --> 00:19:34,710
we have to have a bug tracker that isn't

00:19:32,070 --> 00:19:38,790
github we can't put embargoed security

00:19:34,710 --> 00:19:41,490
issues on github even a private one we

00:19:38,790 --> 00:19:45,540
have I believe we have support for

00:19:41,490 --> 00:19:48,090
private issues or private builds on

00:19:45,540 --> 00:19:49,830
Hydra but they still push to the binary

00:19:48,090 --> 00:19:51,810
cash we can't push through the binary

00:19:49,830 --> 00:19:56,730
cash we have to keep these extremely

00:19:51,810 --> 00:19:58,770
limited to two how somebody could find

00:19:56,730 --> 00:20:01,590
the issues and private code branches as

00:19:58,770 --> 00:20:03,080
well and again not on github all three

00:20:01,590 --> 00:20:06,780
of these these beyond self hosted

00:20:03,080 --> 00:20:08,760
systems that we completely control this

00:20:06,780 --> 00:20:11,580
isn't specifically spelled out and the

00:20:08,760 --> 00:20:13,620
rules of the OSS the private distro list

00:20:11,580 --> 00:20:17,900
but I'm pretty sure only because

00:20:13,620 --> 00:20:17,900
nobody's had the gall to actually ask

00:20:19,640 --> 00:20:24,960
one thing that I think is popular to

00:20:23,130 --> 00:20:27,480
talk about but isn't such an issue is

00:20:24,960 --> 00:20:32,760
how quickly it takes or how much time it

00:20:27,480 --> 00:20:35,600
takes to release patches the goal of the

00:20:32,760 --> 00:20:38,100
distro list is to get patches out to

00:20:35,600 --> 00:20:40,470
maintain errs seven to ten days before

00:20:38,100 --> 00:20:43,200
they go public and if you can release

00:20:40,470 --> 00:20:44,970
your patches as a distribution within

00:20:43,200 --> 00:20:48,140
seven days 10 days of them being

00:20:44,970 --> 00:20:51,930
becoming public you're well within your

00:20:48,140 --> 00:20:53,550
what they'd like to see if it takes

00:20:51,930 --> 00:20:55,380
longer than 10 days there's no sense in

00:20:53,550 --> 00:20:58,770
you being in the embargoed list because

00:20:55,380 --> 00:21:05,400
you simply can't benefit from the

00:20:58,770 --> 00:21:08,460
process a small the small channel that

00:21:05,400 --> 00:21:10,160
has a much reduced package set we can

00:21:08,460 --> 00:21:16,560
release a mass rebuild from that in

00:21:10,160 --> 00:21:20,600
three hours the large the full package

00:21:16,560 --> 00:21:23,760
set can be released in 24 maybe faster

00:21:20,600 --> 00:21:26,730
hydra has a existing support to auto

00:21:23,760 --> 00:21:29,930
scale up based on how many jobs are in

00:21:26,730 --> 00:21:34,290
the queue and it is also possible to

00:21:29,930 --> 00:21:35,550
scale up on automatically if we have a

00:21:34,290 --> 00:21:37,760
big issue that we want to push out

00:21:35,550 --> 00:21:37,760
quickly

00:21:38,540 --> 00:21:45,630
that said I do see our ability to merge

00:21:42,570 --> 00:21:48,410
and release patches quickly as a

00:21:45,630 --> 00:21:51,090
security relevant issue for our posture

00:21:48,410 --> 00:21:53,670
I think it is important that we be able

00:21:51,090 --> 00:21:54,900
to to merge and release as quickly as

00:21:53,670 --> 00:21:58,740
possible for when there is a true

00:21:54,900 --> 00:22:01,500
emergency one of the problems that

00:21:58,740 --> 00:22:03,360
blocks this is if there's a mass rebuild

00:22:01,500 --> 00:22:05,490
that is submitted and it breaks a lot of

00:22:03,360 --> 00:22:07,560
packages so we do need a way to be able

00:22:05,490 --> 00:22:10,020
to preflight massery village and see

00:22:07,560 --> 00:22:11,670
what the impact is I think there's a lot

00:22:10,020 --> 00:22:15,260
we can learn from the open build system

00:22:11,670 --> 00:22:18,030
and I would like I'd like somebody to

00:22:15,260 --> 00:22:21,590
study with that and try and figure out

00:22:18,030 --> 00:22:21,590
how we can bring that to the mix of us

00:22:23,780 --> 00:22:30,780
the zero Hydra failures is a project

00:22:27,480 --> 00:22:32,850
that happens before every release and it

00:22:30,780 --> 00:22:34,800
is essentially what vulnerability

00:22:32,850 --> 00:22:36,420
roundup number one was as it was looking

00:22:34,800 --> 00:22:40,710
at everything that's that started to

00:22:36,420 --> 00:22:42,240
fail since the previous release and said

00:22:40,710 --> 00:22:44,370
all right here's a massive list of

00:22:42,240 --> 00:22:48,210
things let's go fix as many as possible

00:22:44,370 --> 00:22:51,450
and then mark the rest is broken and

00:22:48,210 --> 00:22:53,610
this is fine but it's a lot of work and

00:22:51,450 --> 00:22:55,850
it's all at once and it's right when

00:22:53,610 --> 00:22:58,770
we're trying to do a lot of other things

00:22:55,850 --> 00:23:01,560
and trying to organize this release and

00:22:58,770 --> 00:23:02,880
I think it would be better if we just

00:23:01,560 --> 00:23:04,980
didn't put ourselves in that situation

00:23:02,880 --> 00:23:08,370
where we needed this massive catch-up

00:23:04,980 --> 00:23:12,080
issue something like a regular weekly

00:23:08,370 --> 00:23:17,160
zero hydro failure issue that we all

00:23:12,080 --> 00:23:19,410
rallied around and worked on sort of

00:23:17,160 --> 00:23:21,240
orthogonal project would be better PR

00:23:19,410 --> 00:23:24,360
testing and being able to more

00:23:21,240 --> 00:23:26,310
automatically review for requests so

00:23:24,360 --> 00:23:27,690
that when somebody who has merge rights

00:23:26,310 --> 00:23:31,400
goes to look at a pull request they

00:23:27,690 --> 00:23:34,670
don't have to spend their time debugging

00:23:31,400 --> 00:23:37,380
trivial issues like it's just of an eval

00:23:34,670 --> 00:23:39,540
but a maintainer shouldn't be the ones

00:23:37,380 --> 00:23:44,940
to point out that a PO request doesn't

00:23:39,540 --> 00:23:46,680
evaluate and it additionally it would be

00:23:44,940 --> 00:23:52,090
nice to have some automatic for request

00:23:46,680 --> 00:23:55,570
testing as of as a benefit if we if we

00:23:52,090 --> 00:23:57,669
on top of ours of our builds and keep

00:23:55,570 --> 00:24:00,159
everything green it's much easier to

00:23:57,669 --> 00:24:04,960
merge code because you know exactly this

00:24:00,159 --> 00:24:06,610
pull request broke it were versus the

00:24:04,960 --> 00:24:08,380
situation now which is if there's a mass

00:24:06,610 --> 00:24:09,909
rebuild and a bunch of stuff shows up

00:24:08,380 --> 00:24:11,529
broken at the end you don't know if it's

00:24:09,909 --> 00:24:13,240
already broken you don't know what the

00:24:11,529 --> 00:24:16,240
impact is it's very hard to quantify

00:24:13,240 --> 00:24:18,909
this and that is actually part of what

00:24:16,240 --> 00:24:24,600
made my first attempt at this

00:24:18,909 --> 00:24:26,830
I think fail I set up a Hydra using an

00:24:24,600 --> 00:24:28,690
astounding amount of hardware donated by

00:24:26,830 --> 00:24:30,250
packet net I highly recommend you go

00:24:28,690 --> 00:24:33,580
look look at them I don't work for them

00:24:30,250 --> 00:24:35,919
but they're really great people and the

00:24:33,580 --> 00:24:37,419
Hydra would automatically create job

00:24:35,919 --> 00:24:42,820
sets for every single poor request that

00:24:37,419 --> 00:24:44,679
came in the the the number of derivation

00:24:42,820 --> 00:24:48,399
that get built in every single pull

00:24:44,679 --> 00:24:50,830
request is a lot 40,000 and it turns out

00:24:48,399 --> 00:24:55,000
the 74 requests a day except the number

00:24:50,830 --> 00:24:58,059
17 is is a lot we had a lot of course

00:24:55,000 --> 00:25:01,090
working on this and fundamentally I

00:24:58,059 --> 00:25:02,919
think there's some scaling issues with

00:25:01,090 --> 00:25:06,340
how how Hydra is architected that makes

00:25:02,919 --> 00:25:08,080
this difficult but really what what made

00:25:06,340 --> 00:25:09,669
this difficult is it was it would build

00:25:08,080 --> 00:25:11,289
everything and it was still so hard to

00:25:09,669 --> 00:25:12,789
tell if it was a if it was a good change

00:25:11,289 --> 00:25:14,710
or a bad change if the five hundred

00:25:12,789 --> 00:25:17,950
failures are new or if the five new

00:25:14,710 --> 00:25:22,390
failures are or even is even an

00:25:17,950 --> 00:25:26,559
improvement yeah this was this was

00:25:22,390 --> 00:25:28,299
challenging a more recent attempt I got

00:25:26,559 --> 00:25:32,440
frustrated at something a few days ago

00:25:28,299 --> 00:25:37,870
and set up Graham C of Borg to

00:25:32,440 --> 00:25:39,580
assimilate all of the PRS it does two

00:25:37,870 --> 00:25:41,740
things right now one is that as soon as

00:25:39,580 --> 00:25:45,070
a pull request is in usually sometimes

00:25:41,740 --> 00:25:49,450
it's broken it does an estimate of how

00:25:45,070 --> 00:25:51,490
many jobs will have to rebuild on Hydra

00:25:49,450 --> 00:25:54,210
and it automatically labels them and it

00:25:51,490 --> 00:25:56,830
automatically thanks to Daniel people's

00:25:54,210 --> 00:25:58,659
labels them based on how many rebuilds

00:25:56,830 --> 00:26:02,200
will impact Linux and how many rebuilds

00:25:58,659 --> 00:26:04,120
will impact Darwin this has been pretty

00:26:02,200 --> 00:26:04,700
nice because I discovered things that

00:26:04,120 --> 00:26:07,400
are

00:26:04,700 --> 00:26:11,300
kind of big rebuilds that I didn't know

00:26:07,400 --> 00:26:15,020
we're big rebuilds the second thing it

00:26:11,300 --> 00:26:17,980
does is from a very small list at the

00:26:15,020 --> 00:26:21,500
moment it can accept commands to build

00:26:17,980 --> 00:26:24,740
specific attributes with specific pieces

00:26:21,500 --> 00:26:28,790
of mix packages this avoids the problem

00:26:24,740 --> 00:26:31,880
of I submitted an update to this package

00:26:28,790 --> 00:26:34,490
in an end and okay now I'm gonna go

00:26:31,880 --> 00:26:35,930
build 40,000 things nothing depends on

00:26:34,490 --> 00:26:39,080
in and then we know that because the

00:26:35,930 --> 00:26:41,120
label says it impacts 110 things why try

00:26:39,080 --> 00:26:46,070
building 40,000 when we can just build

00:26:41,120 --> 00:26:48,140
in them so this accepts a list of

00:26:46,070 --> 00:26:51,350
attributes that you'd like to test it

00:26:48,140 --> 00:26:55,070
then starts a job and builds it right

00:26:51,350 --> 00:26:58,970
now just on Linux as soon it will also

00:26:55,070 --> 00:27:02,330
be building PRS on Darwin as well which

00:26:58,970 --> 00:27:04,850
I think will be really cool this is a

00:27:02,330 --> 00:27:10,040
difficult issue actually darlin because

00:27:04,850 --> 00:27:12,920
it can be hard for people using NYX OS

00:27:10,040 --> 00:27:16,970
to know how their pour requests impacts

00:27:12,920 --> 00:27:20,450
Darwin Darwin doesn't have curl in the

00:27:16,970 --> 00:27:22,310
standard environment Darwin can't run

00:27:20,450 --> 00:27:25,670
certain software's you might add a

00:27:22,310 --> 00:27:27,500
dependency to a package and then it it

00:27:25,670 --> 00:27:28,580
ruins the standard environment for

00:27:27,500 --> 00:27:30,920
Darwin and you wouldn't even know it

00:27:28,580 --> 00:27:34,270
until one of the Darwin contributors

00:27:30,920 --> 00:27:34,270
finds out and puts in a patch

00:27:35,650 --> 00:27:40,010
surprisingly I didn't expect this but I

00:27:38,510 --> 00:27:40,970
think it's really good news and pretty

00:27:40,010 --> 00:27:44,660
neat

00:27:40,970 --> 00:27:46,760
is we've been invited to become a CNA

00:27:44,660 --> 00:27:50,870
which is who an organisation at issues

00:27:46,760 --> 00:27:54,350
CVG IDs we were asked to do this by a

00:27:50,870 --> 00:27:56,570
member of the Red Hat security team who

00:27:54,350 --> 00:28:02,960
is also part of the organisation of this

00:27:56,570 --> 00:28:05,780
the embargo distro list the CNAs I

00:28:02,960 --> 00:28:08,300
believe would help us develop a

00:28:05,780 --> 00:28:11,150
relationship with the security organic

00:28:08,300 --> 00:28:13,490
community as a whole and help us become

00:28:11,150 --> 00:28:15,559
closer and more involved and ultimately

00:28:13,490 --> 00:28:20,240
brings us closer to become

00:28:15,559 --> 00:28:22,490
part of the district list this is my

00:28:20,240 --> 00:28:24,409
contact information if you'd like to try

00:28:22,490 --> 00:28:25,519
it with me I'm pretty sure I've talked

00:28:24,409 --> 00:28:28,820
with probably most of you at some point

00:28:25,519 --> 00:28:32,059
in time I'm not very good with faces or

00:28:28,820 --> 00:28:36,789
names so I apologize but feel free to

00:28:32,059 --> 00:28:36,789
reach out yeah thank you

00:28:45,350 --> 00:29:01,230
we have ten minutes thank you hi yeah

00:28:57,150 --> 00:29:04,680
okay so can Lee I think we have a pretty

00:29:01,230 --> 00:29:07,200
liberal policy in accepting package new

00:29:04,680 --> 00:29:10,440
new packages and I guess it's not

00:29:07,200 --> 00:29:13,190
necessarily always guaranteed that they

00:29:10,440 --> 00:29:16,980
will be maintained for security updates

00:29:13,190 --> 00:29:19,440
do you have any any opinion on that or

00:29:16,980 --> 00:29:23,550
like whether we should be more or less

00:29:19,440 --> 00:29:27,570
liberal in accepting packages I think

00:29:23,550 --> 00:29:32,340
that with the advent of overlays that

00:29:27,570 --> 00:29:35,100
changes the issue I think in a lot of

00:29:32,340 --> 00:29:37,920
ways it's difficult for us to be

00:29:35,100 --> 00:29:41,790
gatekeepers on what becomes part of mix

00:29:37,920 --> 00:29:43,740
packages I think it is should be a

00:29:41,790 --> 00:29:45,840
requirement that if somebody does

00:29:43,740 --> 00:29:49,230
contribute a package they are listed as

00:29:45,840 --> 00:29:51,360
the maintainer of the package that said

00:29:49,230 --> 00:29:58,050
a lot of the maintainer workflows that

00:29:51,360 --> 00:30:00,000
exist are pre github and as the graph

00:29:58,050 --> 00:30:01,800
showed earlier we've received tons of

00:30:00,000 --> 00:30:04,940
drive-by contributions what does it look

00:30:01,800 --> 00:30:07,950
look look like to be a maintainer when a

00:30:04,940 --> 00:30:09,540
good chunk of contributions are a

00:30:07,950 --> 00:30:12,060
drive-by they're not people interested

00:30:09,540 --> 00:30:17,090
in envy and maintains I think we should

00:30:12,060 --> 00:30:20,760
accept updates from them but I wouldn't

00:30:17,090 --> 00:30:24,420
be hesitant to accept new packages if

00:30:20,760 --> 00:30:27,090
they're not willing to maintain this is

00:30:24,420 --> 00:30:29,640
actually orthogonal to the issue of

00:30:27,090 --> 00:30:31,170
people asking for new packages is if

00:30:29,640 --> 00:30:33,000
you're asking for a new package than

00:30:31,170 --> 00:30:33,539
nobody who's interested in maintaining

00:30:33,000 --> 00:30:42,440
it

00:30:33,539 --> 00:30:45,479
laughter actually I have that question

00:30:42,440 --> 00:30:48,659
they maybe use the open suits connection

00:30:45,479 --> 00:30:49,889
that's now we know we have during that

00:30:48,659 --> 00:31:00,629
talk I was trying to figure out how to

00:30:49,889 --> 00:31:03,960
make this run an open open Joseph have

00:31:00,629 --> 00:31:05,970
you spoken to the to the alumnus weekly

00:31:03,960 --> 00:31:07,109
news people who quit maintaining these

00:31:05,970 --> 00:31:09,149
things maybe they have some tooling

00:31:07,109 --> 00:31:12,210
around how they constructed such an

00:31:09,149 --> 00:31:13,739
amazing list and or maybe they there was

00:31:12,210 --> 00:31:15,389
some internal politics and maybe someone

00:31:13,739 --> 00:31:16,619
still wants to do it or like like have

00:31:15,389 --> 00:31:18,269
you spoken to the people behind it I

00:31:16,619 --> 00:31:22,559
have yeah

00:31:18,269 --> 00:31:24,899
so when I first did the first 15 or

00:31:22,559 --> 00:31:26,729
maybe was even up to 20 I hadn't

00:31:24,899 --> 00:31:30,299
actually asked permission to use the

00:31:26,729 --> 00:31:34,409
data and it wasn't specifically licensed

00:31:30,299 --> 00:31:35,879
so I I got up my courage sent them an

00:31:34,409 --> 00:31:37,710
email and said hey could I use this data

00:31:35,879 --> 00:31:39,239
been using it for a long time sorry

00:31:37,710 --> 00:31:40,889
about not asking but can I use this data

00:31:39,239 --> 00:31:45,799
and they said yes absolutely and then

00:31:40,889 --> 00:31:48,029
four weeks later they shut it down I

00:31:45,799 --> 00:31:51,119
asked them further about why they shut

00:31:48,029 --> 00:31:53,759
it down just like the distros the

00:31:51,119 --> 00:31:55,710
process is manual they have as much

00:31:53,759 --> 00:31:59,129
tooling as you and I have in our email

00:31:55,710 --> 00:32:03,509
clients to do it and I guess like a

00:31:59,129 --> 00:32:04,889
search tool unfortunately and that's why

00:32:03,509 --> 00:32:08,220
they shut it down is it didn't get a lot

00:32:04,889 --> 00:32:10,180
of interest except Wednesday morning at

00:32:08,220 --> 00:32:16,710
6 a.m.

00:32:10,180 --> 00:32:16,710
and does take you to much employee thing

00:32:26,310 --> 00:32:31,090
can you tell a bit more about the

00:32:28,630 --> 00:32:35,410
grimace your walk yeah well its current

00:32:31,090 --> 00:32:38,680
features its roadmap its scope yeah

00:32:35,410 --> 00:32:41,980
its current feature set is exactly these

00:32:38,680 --> 00:32:44,830
two things is it three flights the bill

00:32:41,980 --> 00:32:46,680
to see how many rebuild and then it'll

00:32:44,830 --> 00:32:50,200
build specific things you're asked for

00:32:46,680 --> 00:32:52,900
in terms of roadmap I wrote this in

00:32:50,200 --> 00:32:58,810
therapy so I'd like it to not be written

00:32:52,900 --> 00:33:00,970
in PHP that's probably number one number

00:32:58,810 --> 00:33:02,500
two is adding support to fan out to

00:33:00,970 --> 00:33:07,060
Darwin that's going to be probably a 20

00:33:02,500 --> 00:33:08,860
minute project this afternoon I think an

00:33:07,060 --> 00:33:12,460
important thing I really like to do is

00:33:08,860 --> 00:33:14,500
be able to sample and mass rebuild oh

00:33:12,460 --> 00:33:18,040
the most important thing is that this

00:33:14,500 --> 00:33:21,130
runs on people's laptops volunteers can

00:33:18,040 --> 00:33:24,370
install the daemon will be able to

00:33:21,130 --> 00:33:27,400
install the daemon and pickup approved

00:33:24,370 --> 00:33:28,960
job sets and build them locally that's

00:33:27,400 --> 00:33:30,610
why it doesn't build everything that's

00:33:28,960 --> 00:33:33,610
changed because it needs to be cognizant

00:33:30,610 --> 00:33:36,010
of being a visitor on somebody's lap top

00:33:33,610 --> 00:33:38,350
and that's why it only has a specific

00:33:36,010 --> 00:33:40,990
list of people who can trigger it I'd

00:33:38,350 --> 00:33:43,240
like to open that up quite wide and I

00:33:40,990 --> 00:33:47,640
think the NYX sandboxing makes that

00:33:43,240 --> 00:33:47,640
pretty safe to do but just starting spot

00:33:53,870 --> 00:33:57,470
any more questions

00:33:59,270 --> 00:34:05,120
all right if there's no more question so

00:34:01,820 --> 00:34:07,510
we can get to their pizza earlier thanks

00:34:05,120 --> 00:34:07,510

YouTube URL: https://www.youtube.com/watch?v=6esAi2OxULo


