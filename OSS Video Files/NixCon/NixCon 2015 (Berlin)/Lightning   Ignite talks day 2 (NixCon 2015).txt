Title: Lightning   Ignite talks day 2 (NixCon 2015)
Publication date: 2020-10-29
Playlist: NixCon 2015 (Berlin)
Description: 
	
Captions: 
	00:00:05,279 --> 00:00:09,760
but before we start

00:00:06,560 --> 00:00:10,719
um we will actually just connect the

00:00:09,760 --> 00:00:15,519
whole the two bits

00:00:10,719 --> 00:00:17,440
um dan from bridgewater will

00:00:15,519 --> 00:00:18,560
tell us a bit in short about what they

00:00:17,440 --> 00:00:22,560
do with nyx

00:00:18,560 --> 00:00:24,000
at their company

00:00:22,560 --> 00:00:26,160
as you probably know they're also gold

00:00:24,000 --> 00:00:27,279
sponsor and then he will continue to

00:00:26,160 --> 00:00:31,840
talk about

00:00:27,279 --> 00:00:31,840
a thing called nix code build

00:00:42,840 --> 00:00:45,840
okay

00:00:52,079 --> 00:00:56,320
hello can people okay i can hear myself

00:00:54,800 --> 00:00:59,120
so i think you can hear me

00:00:56,320 --> 00:01:00,719
um okay so i have not prepared anything

00:00:59,120 --> 00:01:02,480
about bridgewater but i will give you a

00:01:00,719 --> 00:01:05,600
very brief overview about

00:01:02,480 --> 00:01:07,040
about it so that um maybe you know why

00:01:05,600 --> 00:01:10,479
we sponsored this

00:01:07,040 --> 00:01:12,320
place um the um

00:01:10,479 --> 00:01:13,920
so that's my name i don't have anything

00:01:12,320 --> 00:01:18,320
uh any any slides about

00:01:13,920 --> 00:01:19,520
about this um bridgewater is um

00:01:18,320 --> 00:01:21,040
there's a few different ways of putting

00:01:19,520 --> 00:01:22,400
it i think the the way we'd like to

00:01:21,040 --> 00:01:26,240
describe ourselves is

00:01:22,400 --> 00:01:29,680
um a company trying to understand how

00:01:26,240 --> 00:01:31,520
world economic markets work it is

00:01:29,680 --> 00:01:33,119
technically a hedge fund if you want to

00:01:31,520 --> 00:01:37,439
put in those terms

00:01:33,119 --> 00:01:40,320
but we we basically invest money for

00:01:37,439 --> 00:01:41,119
for large pension funds sovereign wealth

00:01:40,320 --> 00:01:43,600
funds uh

00:01:41,119 --> 00:01:45,280
institutional investors in general and

00:01:43,600 --> 00:01:46,560
do so based on

00:01:45,280 --> 00:01:49,360
our understanding of world economic

00:01:46,560 --> 00:01:50,320
markets and so you can think of it as an

00:01:49,360 --> 00:01:52,000
expert system

00:01:50,320 --> 00:01:55,200
trying to trying to learn about how

00:01:52,000 --> 00:01:59,119
things relate to each other

00:01:55,200 --> 00:02:01,360
where nyx starts to come in is we

00:01:59,119 --> 00:02:03,600
well first of all we we very heavily

00:02:01,360 --> 00:02:06,000
value our intellectual property

00:02:03,600 --> 00:02:07,600
you know their their clever trading

00:02:06,000 --> 00:02:08,160
algorithms and things like that that you

00:02:07,600 --> 00:02:10,640
don't want

00:02:08,160 --> 00:02:12,080
people to steal you don't want your own

00:02:10,640 --> 00:02:13,520
employees to steal you want

00:02:12,080 --> 00:02:16,720
you're very paranoid about about this

00:02:13,520 --> 00:02:20,400
stuff because it's worth a lot of money

00:02:16,720 --> 00:02:22,879
we see nyx is a potentially

00:02:20,400 --> 00:02:24,720
basically uh almost a game changer in in

00:02:22,879 --> 00:02:25,280
how we can deal with security um there's

00:02:24,720 --> 00:02:26,959
obviously

00:02:25,280 --> 00:02:28,480
things like the the gr security thing

00:02:26,959 --> 00:02:29,760
which is great but we're seeing security

00:02:28,480 --> 00:02:32,080
in in terms of

00:02:29,760 --> 00:02:33,040
reproducibility determinism um

00:02:32,080 --> 00:02:35,440
auditability

00:02:33,040 --> 00:02:37,440
of these things which are haven't

00:02:35,440 --> 00:02:40,239
historically been focuses in nix

00:02:37,440 --> 00:02:41,599
um i i i mean you get some of those

00:02:40,239 --> 00:02:42,640
things for free some of them not for

00:02:41,599 --> 00:02:44,400
free um

00:02:42,640 --> 00:02:45,840
things like the uh the reproducible

00:02:44,400 --> 00:02:49,040
evaluations are partly

00:02:45,840 --> 00:02:50,720
um partly inspired by uh by our desire

00:02:49,040 --> 00:02:53,599
for this um

00:02:50,720 --> 00:02:55,120
and so i see nix is a as an excellent

00:02:53,599 --> 00:02:58,560
foundation to build these things upon

00:02:55,120 --> 00:03:01,200
um and of course there is uh

00:02:58,560 --> 00:03:02,159
uh you know just it's a huge

00:03:01,200 --> 00:03:06,000
productivity gain

00:03:02,159 --> 00:03:08,319
um for for me um uh

00:03:06,000 --> 00:03:09,599
and so we we see that i see it as a as

00:03:08,319 --> 00:03:12,959
having great potential there

00:03:09,599 --> 00:03:14,319
um i don't wanna lie about it we we

00:03:12,959 --> 00:03:14,959
definitely aren't using it in a very

00:03:14,319 --> 00:03:17,840
widespread

00:03:14,959 --> 00:03:20,080
manner yet it's pretty much just me and

00:03:17,840 --> 00:03:22,879
i've deployed a couple services

00:03:20,080 --> 00:03:23,360
to dev production in the sense that a

00:03:22,879 --> 00:03:25,760
large

00:03:23,360 --> 00:03:27,840
chunk of our developers use them without

00:03:25,760 --> 00:03:30,400
knowing that they're on xos

00:03:27,840 --> 00:03:31,760
but if nixos were to go down that would

00:03:30,400 --> 00:03:32,000
cause a lot of productivity issues and

00:03:31,760 --> 00:03:33,840
things

00:03:32,000 --> 00:03:35,040
like that we are not currently deploying

00:03:33,840 --> 00:03:38,400
any kind of

00:03:35,040 --> 00:03:41,920
uh economic analysis

00:03:38,400 --> 00:03:43,599
stuff on xos but i think the key aspect

00:03:41,920 --> 00:03:46,879
of it is

00:03:43,599 --> 00:03:48,080
that i have a lot of buy-in from the

00:03:46,879 --> 00:03:51,120
company um

00:03:48,080 --> 00:03:52,560
as in people people are cnix

00:03:51,120 --> 00:03:54,319
they don't use it yet but they're

00:03:52,560 --> 00:03:57,599
excited by it

00:03:54,319 --> 00:04:00,480
and so within within the company

00:03:57,599 --> 00:04:01,680
um i i have a lot of leeway to to start

00:04:00,480 --> 00:04:05,200
spreading it more widely

00:04:01,680 --> 00:04:08,400
um to uh to get other colleagues

00:04:05,200 --> 00:04:08,799
involved in it um and to uh to do work

00:04:08,400 --> 00:04:10,640
on

00:04:08,799 --> 00:04:13,120
mixed packages and things like that

00:04:10,640 --> 00:04:16,799
where it serves our needs and so

00:04:13,120 --> 00:04:19,199
things like that uh the ec2 instance

00:04:16,799 --> 00:04:20,400
instance metadata configuration from

00:04:19,199 --> 00:04:22,079
metadata which nobody has heard of

00:04:20,400 --> 00:04:25,840
because i did not document it

00:04:22,079 --> 00:04:28,240
but when you boot up an instance on aws

00:04:25,840 --> 00:04:29,120
you can configure it from from metadata

00:04:28,240 --> 00:04:32,560
um and

00:04:29,120 --> 00:04:33,680
uh and that was partially inspired by

00:04:32,560 --> 00:04:36,880
our needs at work

00:04:33,680 --> 00:04:38,880
um and so uh so that's pretty much

00:04:36,880 --> 00:04:40,080
bridgewater's relationship to nix i hope

00:04:38,880 --> 00:04:42,320
that we will we will

00:04:40,080 --> 00:04:43,600
expand our usage of it and keep

00:04:42,320 --> 00:04:46,160
supporting the

00:04:43,600 --> 00:04:46,880
community in far better ways than a logo

00:04:46,160 --> 00:04:50,160
down there

00:04:46,880 --> 00:04:51,759
um but uh yeah so that's that um

00:04:50,160 --> 00:04:54,240
i don't know is this a question and

00:04:51,759 --> 00:04:56,240
answers type thing i don't think they're

00:04:54,240 --> 00:04:57,759
okay that's it's a pitch okay it's fine

00:04:56,240 --> 00:05:01,600
um i think that's the pitch

00:04:57,759 --> 00:05:06,479
um great um okay

00:05:01,600 --> 00:05:06,479
and thank you and then

00:05:08,000 --> 00:05:11,600
and then what i actually came up here

00:05:09,280 --> 00:05:15,280
for um initially

00:05:11,600 --> 00:05:18,720
uh um aaron uh inspired me

00:05:15,280 --> 00:05:22,400
um so i tweeted about it um uh

00:05:18,720 --> 00:05:24,880
yes and so uh this uh this control tab

00:05:22,400 --> 00:05:25,759
or or in my case command shift uh you

00:05:24,880 --> 00:05:27,199
know things

00:05:25,759 --> 00:05:29,759
lets me move through my slides and so

00:05:27,199 --> 00:05:34,000
i'm going to talk about um

00:05:29,759 --> 00:05:37,280
let's see nix code build

00:05:34,000 --> 00:05:38,639
so i i generally characterize it as the

00:05:37,280 --> 00:05:39,680
most obscene abuse of next you'll see in

00:05:38,639 --> 00:05:42,000
a while

00:05:39,680 --> 00:05:44,800
and i hope you will agree with me after

00:05:42,000 --> 00:05:44,800
after seeing this

00:05:45,039 --> 00:05:51,440
so who here has looked at all

00:05:49,199 --> 00:05:52,400
at the at all the darwin work that's

00:05:51,440 --> 00:05:54,800
been happening recently

00:05:52,400 --> 00:05:56,240
has anyone um yes a few of a few of you

00:05:54,800 --> 00:05:58,479
have um

00:05:56,240 --> 00:05:59,520
i was one of the one of the main people

00:05:58,479 --> 00:06:01,759
behind it um

00:05:59,520 --> 00:06:03,280
and as part of that i'm not that's a

00:06:01,759 --> 00:06:04,080
whole different topic of conversation

00:06:03,280 --> 00:06:05,360
but as part of that

00:06:04,080 --> 00:06:07,919
there are some annoying things which i

00:06:05,360 --> 00:06:09,440
had to do apple releases a lot of source

00:06:07,919 --> 00:06:12,160
code

00:06:09,440 --> 00:06:13,919
on its open source at apple.com but they

00:06:12,160 --> 00:06:15,840
don't really put much effort into making

00:06:13,919 --> 00:06:18,080
it actually compile for anyone

00:06:15,840 --> 00:06:19,199
and if we would like a nice pure darwin

00:06:18,080 --> 00:06:22,000
standard m

00:06:19,199 --> 00:06:23,440
we need to compile it ourselves and a

00:06:22,000 --> 00:06:26,240
lot of these things don't work from

00:06:23,440 --> 00:06:28,400
the linux world for example proc ps we

00:06:26,240 --> 00:06:29,759
don't have proc on mac os and so proc ps

00:06:28,400 --> 00:06:31,039
just doesn't work and so we need our own

00:06:29,759 --> 00:06:32,880
ps

00:06:31,039 --> 00:06:34,720
how do we get our own ps we go to

00:06:32,880 --> 00:06:37,120
apple's source code

00:06:34,720 --> 00:06:38,160
releases this thing and you'll see a

00:06:37,120 --> 00:06:40,720
nice ps in there and

00:06:38,160 --> 00:06:42,319
it's the apple flavored ps and so we

00:06:40,720 --> 00:06:45,360
need to compile that

00:06:42,319 --> 00:06:45,759
unfortunately you'll see up at the top

00:06:45,360 --> 00:06:49,759
here

00:06:45,759 --> 00:06:51,440
is ad commands dot xcode proj

00:06:49,759 --> 00:06:53,520
and we really don't want to bring an

00:06:51,440 --> 00:06:55,280
xcode for this xcode is

00:06:53,520 --> 00:06:57,440
a monolithic you know several gig

00:06:55,280 --> 00:06:59,360
download it's a pain in the ass

00:06:57,440 --> 00:07:00,560
it isn't scriptable and it's closed

00:06:59,360 --> 00:07:02,000
source and doesn't really feel like the

00:07:00,560 --> 00:07:04,400
next philosophy of compiling

00:07:02,000 --> 00:07:05,280
everything and and caching it and all

00:07:04,400 --> 00:07:06,880
that

00:07:05,280 --> 00:07:08,400
and so we really don't want to be doing

00:07:06,880 --> 00:07:10,479
that so um

00:07:08,400 --> 00:07:11,759
what i do instead of um in the current

00:07:10,479 --> 00:07:15,360
next packages tree

00:07:11,759 --> 00:07:19,120
is this is the context here um

00:07:15,360 --> 00:07:21,039
what i do instead is um this which is

00:07:19,120 --> 00:07:22,560
really not very nice right um i don't

00:07:21,039 --> 00:07:24,080
even bother writing a make file i call

00:07:22,560 --> 00:07:26,319
cc a bunch of times

00:07:24,080 --> 00:07:27,360
not gcc because we don't have gcc it's

00:07:26,319 --> 00:07:29,440
just cc

00:07:27,360 --> 00:07:30,479
um please everyone stop writing gcc all

00:07:29,440 --> 00:07:32,880
over the place because it doesn't work

00:07:30,479 --> 00:07:32,880
with clang

00:07:33,199 --> 00:07:39,840
but but yes this this compiles um ps for

00:07:36,479 --> 00:07:43,039
from uh mac os and uh

00:07:39,840 --> 00:07:45,840
and gives us basically a very base a

00:07:43,039 --> 00:07:46,479
basic ps expression of course if it's a

00:07:45,840 --> 00:07:48,080
more

00:07:46,479 --> 00:07:49,759
involved project that's a pain in the

00:07:48,080 --> 00:07:50,879
ass to write out all these things

00:07:49,759 --> 00:07:52,639
because sometimes they call code

00:07:50,879 --> 00:07:57,199
generators and all these other things

00:07:52,639 --> 00:07:57,199
and so what i've wanted for a while is

00:07:57,280 --> 00:08:00,479
an xcode uh open source xcode

00:07:59,520 --> 00:08:02,879
replacement

00:08:00,479 --> 00:08:03,919
um or xcode build replacement xcode

00:08:02,879 --> 00:08:06,400
build is the

00:08:03,919 --> 00:08:07,680
is the command line version of xcode and

00:08:06,400 --> 00:08:10,000
only comes with xcode

00:08:07,680 --> 00:08:12,319
and furthermore is not open source and

00:08:10,000 --> 00:08:12,879
so i can't build that from source um and

00:08:12,319 --> 00:08:16,000
so

00:08:12,879 --> 00:08:19,120
um what actually well

00:08:16,000 --> 00:08:21,039
a lot of people use xcode here um okay

00:08:19,120 --> 00:08:23,599
um that's that's not a lot of people but

00:08:21,039 --> 00:08:26,800
um xcode comes with these

00:08:23,599 --> 00:08:28,800
pbx proj files which i'm most people

00:08:26,800 --> 00:08:31,919
have never actually seen

00:08:28,800 --> 00:08:35,519
the contents of it turns out

00:08:31,919 --> 00:08:38,880
mac os's heritage from nextstep

00:08:35,519 --> 00:08:40,399
is there are mac os plist files

00:08:38,880 --> 00:08:42,320
property list files and they come from

00:08:40,399 --> 00:08:43,519
next step way back in the day

00:08:42,320 --> 00:08:46,080
there are several different formats for

00:08:43,519 --> 00:08:47,600
these including this obsolete format

00:08:46,080 --> 00:08:49,200
which apple doesn't support anymore

00:08:47,600 --> 00:08:52,000
except inside xcode

00:08:49,200 --> 00:08:52,399
and that is the format of this thing on

00:08:52,000 --> 00:08:55,040
this

00:08:52,399 --> 00:08:56,959
xcode build project and so if i want to

00:08:55,040 --> 00:09:00,000
build xcode projects myself

00:08:56,959 --> 00:09:03,920
i need to understand this format

00:09:00,000 --> 00:09:06,959
now by an amazing amazing luck

00:09:03,920 --> 00:09:08,320
and why this is turning into a huge hack

00:09:06,959 --> 00:09:10,880
do you notice anything strange about

00:09:08,320 --> 00:09:13,120
this file um

00:09:10,880 --> 00:09:14,240
um this is this is an ancient next step

00:09:13,120 --> 00:09:16,959
format

00:09:14,240 --> 00:09:18,880
um what i'm getting at is that it is

00:09:16,959 --> 00:09:21,120
very similar to nyx

00:09:18,880 --> 00:09:22,959
nick syntax and so very similar not

00:09:21,120 --> 00:09:25,120
quite exactly similar

00:09:22,959 --> 00:09:28,399
but similar enough that i can run some

00:09:25,120 --> 00:09:31,920
obscene set over it and make it into nyx

00:09:28,399 --> 00:09:34,640
and so what i did was that and so this

00:09:31,920 --> 00:09:38,320
is this is the next version of that

00:09:34,640 --> 00:09:40,240
thank you um and so so this is

00:09:38,320 --> 00:09:42,000
this is the the build file for building

00:09:40,240 --> 00:09:42,480
that ps project and everything else with

00:09:42,000 --> 00:09:44,480
it um

00:09:42,480 --> 00:09:45,920
and nyxified um i put a few quotes

00:09:44,480 --> 00:09:47,839
around things and stuff like that

00:09:45,920 --> 00:09:49,040
um that might not be strictly necessary

00:09:47,839 --> 00:09:51,680
and it might make things easier

00:09:49,040 --> 00:09:53,360
neater later but let's just pretend this

00:09:51,680 --> 00:09:55,519
is the right way to do it

00:09:53,360 --> 00:09:57,120
you'll see i stuck a globals made of the

00:09:55,519 --> 00:09:58,880
function because they have some

00:09:57,120 --> 00:10:01,120
incorporates they bring in state from

00:09:58,880 --> 00:10:03,200
somewhere else and things like that

00:10:01,120 --> 00:10:04,160
but otherwise the format is identical

00:10:03,200 --> 00:10:07,200
it's a very large

00:10:04,160 --> 00:10:08,079
file you'll notice some annoying things

00:10:07,200 --> 00:10:10,320
about it

00:10:08,079 --> 00:10:12,480
is that the actual like once you get

00:10:10,320 --> 00:10:13,839
over the the syntax of the thing you

00:10:12,480 --> 00:10:15,120
actually still have the semantics of how

00:10:13,839 --> 00:10:17,600
to interpret it

00:10:15,120 --> 00:10:18,880
that isn't documented anywhere but with

00:10:17,600 --> 00:10:21,600
a little bit of tinkering

00:10:18,880 --> 00:10:22,480
i figured out um how to interpret it and

00:10:21,600 --> 00:10:23,680
i'll i have

00:10:22,480 --> 00:10:26,000
about a screen full of mix code that

00:10:23,680 --> 00:10:29,440
i'll show you in a second

00:10:26,000 --> 00:10:29,680
to do that which is um maybe it's more

00:10:29,440 --> 00:10:30,880
than

00:10:29,680 --> 00:10:33,360
more than a screenflow maybe it's three

00:10:30,880 --> 00:10:34,240
screenfuls or so um this is this is a

00:10:33,360 --> 00:10:36,720
code uh

00:10:34,240 --> 00:10:39,120
that can compile ps from that thing and

00:10:36,720 --> 00:10:42,320
it's written in nyx and all it does is

00:10:39,120 --> 00:10:44,959
input addcommands.nix which is the

00:10:42,320 --> 00:10:46,720
translation of the other thing

00:10:44,959 --> 00:10:48,640
and now i have a knicks object which i

00:10:46,720 --> 00:10:52,160
can treat in nixie ways

00:10:48,640 --> 00:10:55,600
um and um

00:10:52,160 --> 00:10:56,880
so there's

00:10:55,600 --> 00:10:58,880
there's a lot of things i can talk about

00:10:56,880 --> 00:11:01,440
here i i want to talk about a couple of

00:10:58,880 --> 00:11:02,880
neat little tricks let me just take this

00:11:01,440 --> 00:11:04,560
out of order a little bit

00:11:02,880 --> 00:11:07,440
you'll see if you look back at this next

00:11:04,560 --> 00:11:08,640
file this is actually

00:11:07,440 --> 00:11:10,320
there's this randomly generated

00:11:08,640 --> 00:11:11,120
identifier or semi-randomly generated

00:11:10,320 --> 00:11:14,160
identifier by

00:11:11,120 --> 00:11:15,760
by xcode and it's actually defining a

00:11:14,160 --> 00:11:17,519
horrible horrible graph

00:11:15,760 --> 00:11:19,279
um and so you have the keys at the top

00:11:17,519 --> 00:11:21,200
level here um

00:11:19,279 --> 00:11:23,279
and then they get referred to further

00:11:21,200 --> 00:11:26,800
down here

00:11:23,279 --> 00:11:28,800
and i believe peter simons or

00:11:26,800 --> 00:11:30,320
various other people have have given us

00:11:28,800 --> 00:11:32,000
a technique for dealing with this in

00:11:30,320 --> 00:11:33,600
a very clean way does anyone know what

00:11:32,000 --> 00:11:36,800
i'm talking about um

00:11:33,600 --> 00:11:39,360
okay well it is it's a lazily um

00:11:36,800 --> 00:11:40,959
and the way i i handle this or i handled

00:11:39,360 --> 00:11:44,000
this when i wrote it

00:11:40,959 --> 00:11:44,000
is a

00:11:44,079 --> 00:11:49,600
lazily expanded uh giant map

00:11:48,000 --> 00:11:51,760
and so that way i don't actually have to

00:11:49,600 --> 00:11:55,360
ever deal with those identifiers

00:11:51,760 --> 00:11:57,040
mostly i can i i basically

00:11:55,360 --> 00:11:58,399
recurse over the entire structure and

00:11:57,040 --> 00:12:01,200
whenever i see one of those things

00:11:58,399 --> 00:12:01,920
i say do i already have it in which case

00:12:01,200 --> 00:12:03,440
um

00:12:01,920 --> 00:12:05,279
replace it with this definition and so

00:12:03,440 --> 00:12:08,720
it's a fixed point of uh

00:12:05,279 --> 00:12:11,920
of of a big um

00:12:08,720 --> 00:12:14,880
dict uh or atrocity sorry

00:12:11,920 --> 00:12:16,320
um and uh so that's how that part works

00:12:14,880 --> 00:12:17,120
and then i just need to process it and

00:12:16,320 --> 00:12:19,920
processing it

00:12:17,120 --> 00:12:21,519
um involves this cute little pattern

00:12:19,920 --> 00:12:23,040
which i haven't seen used elsewhere

00:12:21,519 --> 00:12:25,040
i really wanted switch statements in

00:12:23,040 --> 00:12:27,920
knicks so i

00:12:25,040 --> 00:12:29,279
i made a another attra set and treat it

00:12:27,920 --> 00:12:32,399
as a switch statement

00:12:29,279 --> 00:12:34,720
as in the keys are the cases

00:12:32,399 --> 00:12:35,760
and the values are the behavior that i

00:12:34,720 --> 00:12:37,920
want to happen

00:12:35,760 --> 00:12:38,880
and so and then i just do cases dot

00:12:37,920 --> 00:12:41,040
switch uh

00:12:38,880 --> 00:12:42,079
over that thing um i use that all over

00:12:41,040 --> 00:12:44,320
the place in this file

00:12:42,079 --> 00:12:46,000
um because you know if i if i have a c

00:12:44,320 --> 00:12:47,200
file i need to compile it with c

00:12:46,000 --> 00:12:49,279
and if i have a lex file i need to

00:12:47,200 --> 00:12:51,279
compile in another way um

00:12:49,279 --> 00:12:52,800
and so the rest of it is just sort of

00:12:51,279 --> 00:12:54,399
boilerplate tying it all together but

00:12:52,800 --> 00:12:56,160
those are the essence that's the essence

00:12:54,399 --> 00:13:07,839
of next code build

00:12:56,160 --> 00:13:07,839
and any questions

00:13:08,560 --> 00:13:12,160
we have time for two questions

00:13:14,560 --> 00:13:18,800
will the source code dot c dot c

00:13:16,959 --> 00:13:20,880
evaluate to an attribute

00:13:18,800 --> 00:13:22,160
that has source code and then dot c and

00:13:20,880 --> 00:13:26,639
then dot c in it

00:13:22,160 --> 00:13:29,760
uh levels or will it be one identifier

00:13:26,639 --> 00:13:32,560
source code.c and this is uh this is um

00:13:29,760 --> 00:13:34,000
a construct inside the xcode build file

00:13:32,560 --> 00:13:36,160
and will it will it

00:13:34,000 --> 00:13:38,079
in nx will it evaluate it creates a

00:13:36,160 --> 00:13:39,760
derivation for every single c file and

00:13:38,079 --> 00:13:41,519
creates an o file for the name of the

00:13:39,760 --> 00:13:43,120
attribute will it be a source code and

00:13:41,519 --> 00:13:45,920
then there will be an attribute in it

00:13:43,120 --> 00:13:46,320
dot c or is it the name of the attribute

00:13:45,920 --> 00:13:48,959
is it

00:13:46,320 --> 00:13:48,959
source dot c

00:13:54,000 --> 00:13:57,279
that's literally something that apple

00:13:55,360 --> 00:14:00,639
okay yes yeah uh yes yeah

00:13:57,279 --> 00:14:03,600
sorry so how did you

00:14:00,639 --> 00:14:04,320
test that this all worked i called

00:14:03,600 --> 00:14:09,440
nick's build

00:14:04,320 --> 00:14:09,440
and got ps out of it and it okay wow

00:14:13,360 --> 00:14:18,880
so how many of these apple packages does

00:14:16,160 --> 00:14:18,880
this work for them

00:14:19,360 --> 00:14:23,199
this was me being bored one evening i

00:14:21,279 --> 00:14:23,680
have not like you can see literally in

00:14:23,199 --> 00:14:25,760
the

00:14:23,680 --> 00:14:27,839
next code build i i hard code add

00:14:25,760 --> 00:14:29,680
commands so i've tried it on ad commands

00:14:27,839 --> 00:14:32,240
and nothing else

00:14:29,680 --> 00:14:33,040
if i were feeling uh i'm motivated to

00:14:32,240 --> 00:14:34,560
work on more

00:14:33,040 --> 00:14:36,079
darwin stuff i would probably expand

00:14:34,560 --> 00:14:37,120
this and make it work for more things

00:14:36,079 --> 00:14:38,959
but

00:14:37,120 --> 00:14:40,560
it it leads like like many of these sort

00:14:38,959 --> 00:14:43,279
of knicks-based make

00:14:40,560 --> 00:14:45,199
files it needs it leads into a sort of

00:14:43,279 --> 00:14:47,199
questions about what recursivenecks is

00:14:45,199 --> 00:14:48,880
and how that like if i were to actually

00:14:47,199 --> 00:14:50,240
use it in derivations inside

00:14:48,880 --> 00:14:52,959
mixed packages i would need to be able

00:14:50,240 --> 00:14:54,560
to build something using nics inside of

00:14:52,959 --> 00:14:54,959
nyx and and that's something which is a

00:14:54,560 --> 00:14:58,079
little

00:14:54,959 --> 00:15:00,000
iffy right now um

00:14:58,079 --> 00:15:01,519
so so it was more of a let's see if i

00:15:00,000 --> 00:15:03,440
can actually do this more than uh

00:15:01,519 --> 00:15:04,639
um a useful tool if someone else wants

00:15:03,440 --> 00:15:06,000
to take it i can

00:15:04,639 --> 00:15:07,760
remove this secret thing on the gist

00:15:06,000 --> 00:15:09,440
thing and uh uh or i

00:15:07,760 --> 00:15:13,120
i i could just publish it anyway it's

00:15:09,440 --> 00:15:17,040
fine um i was ashamed of

00:15:13,120 --> 00:15:19,279
it for a while okay thank you

00:15:17,040 --> 00:15:19,279
thanks

00:15:24,160 --> 00:15:28,160
um damn i sweat

00:15:29,279 --> 00:15:36,720
johann schultz yes

00:15:33,040 --> 00:15:41,519
so this will be a talk about

00:15:36,720 --> 00:15:55,839
nixos user environment and please mate

00:15:41,519 --> 00:15:55,839
prepare you're next

00:16:48,160 --> 00:16:50,800
i think it

00:17:02,959 --> 00:17:07,199
okay i need

00:17:04,710 --> 00:17:10,959
[Music]

00:17:07,199 --> 00:17:10,959
and it's the same resolution basically

00:17:16,839 --> 00:17:19,839
okay

00:17:20,640 --> 00:17:23,280
oh come on

00:17:30,000 --> 00:17:36,640
actually while we wait for um

00:17:33,039 --> 00:17:39,919
i need to create a quick poll uh i was

00:17:36,640 --> 00:17:40,960
asked actually three times uh to ask

00:17:39,919 --> 00:17:45,120
everybody

00:17:40,960 --> 00:17:45,120
who in the crowd is actually using nixos

00:17:45,440 --> 00:17:48,799
okay so those three who asked me i have

00:17:47,440 --> 00:17:51,840
an answer

00:17:48,799 --> 00:17:54,400
and another question is

00:17:51,840 --> 00:17:55,600
so what are you guys doing tomorrow and

00:17:54,400 --> 00:17:57,919
after tomorrow

00:17:55,600 --> 00:17:59,120
uh as you know we have sprint for two

00:17:57,919 --> 00:18:01,919
days

00:17:59,120 --> 00:18:03,120
from eight and there are from ten until

00:18:01,919 --> 00:18:06,400
eight in the evening

00:18:03,120 --> 00:18:09,360
at road code office it's let's say

00:18:06,400 --> 00:18:12,160
on the other side of the thing that

00:18:09,360 --> 00:18:15,840
sticks in the middle of berlin

00:18:12,160 --> 00:18:15,840
how it's called

00:18:18,240 --> 00:18:22,000
uh so uh it's it's basically a few

00:18:20,720 --> 00:18:25,039
stations away from here

00:18:22,000 --> 00:18:27,360
with urban um so what's

00:18:25,039 --> 00:18:28,400
uh so road code is also sponsoring their

00:18:27,360 --> 00:18:30,640
the

00:18:28,400 --> 00:18:32,640
the snacks during the day so would be

00:18:30,640 --> 00:18:36,240
nice to know how many of you will come

00:18:32,640 --> 00:18:38,400
tomorrow okay

00:18:36,240 --> 00:18:40,559
let me just have a keep keep the hands

00:18:38,400 --> 00:18:40,559
up

00:18:40,640 --> 00:18:43,840
no wait

00:18:51,360 --> 00:18:57,840
okay uh and uh on tuesday

00:18:57,919 --> 00:19:01,520
okay very close so i'll just i have the

00:19:00,080 --> 00:19:05,360
overlay

00:19:01,520 --> 00:19:10,960
okay um how we're doing

00:19:05,360 --> 00:19:13,679
no can we okay

00:19:10,960 --> 00:19:14,400
somebody knows the joke i i know only

00:19:13,679 --> 00:19:16,480
one

00:19:14,400 --> 00:19:18,080
and it's actually german joke uh but

00:19:16,480 --> 00:19:20,240
everybody will get it and everybody

00:19:18,080 --> 00:19:22,320
knows it i think

00:19:20,240 --> 00:19:23,520
when a boss comes to ask you right what

00:19:22,320 --> 00:19:27,919
do you do

00:19:23,520 --> 00:19:27,919
well most of here of us will say mix

00:19:37,200 --> 00:19:42,240
so on monday or whenever you're back use

00:19:40,160 --> 00:19:42,240
it

00:19:47,039 --> 00:19:51,919
do we have somebody who has successfully

00:19:49,919 --> 00:19:55,760
connected this notebook to the projector

00:19:51,919 --> 00:19:55,760
before i can show like a html file

00:19:56,240 --> 00:20:04,840
for example maybe can

00:19:59,440 --> 00:20:07,840
can you share the because he's the next

00:20:04,840 --> 00:20:07,840
one

00:20:32,840 --> 00:20:35,840
connectors

00:21:47,679 --> 00:21:51,600
okay we'll just continue um

00:21:52,159 --> 00:22:13,840
can you yeah can you try

00:21:56,480 --> 00:22:13,840
okay this will work okay um

00:22:52,880 --> 00:22:55,840
no sick

00:23:14,880 --> 00:23:23,840
reboot always works

00:23:37,919 --> 00:23:44,320
okay so we're back with the talk about

00:23:41,840 --> 00:23:44,990
from arsenii from about mixed packages

00:23:44,320 --> 00:23:46,559
in mix build

00:23:44,990 --> 00:23:51,230
[Music]

00:23:46,559 --> 00:23:56,159
wait a second

00:23:51,230 --> 00:24:05,840
[Music]

00:23:56,159 --> 00:24:08,159
okay do you hear me okay nice so hello

00:24:05,840 --> 00:24:08,159
okay

00:24:08,880 --> 00:24:13,440
i'm too nervous uh my name is garcini

00:24:12,159 --> 00:24:16,080
sirocco

00:24:13,440 --> 00:24:17,679
uh maybe mostly you know me by my

00:24:16,080 --> 00:24:20,159
nickname jack

00:24:17,679 --> 00:24:22,640
you can find me at github nrc and in

00:24:20,159 --> 00:24:33,679
twitter my name is tc00

00:24:22,640 --> 00:24:37,440
i'm the guy who likes to merge

00:24:33,679 --> 00:24:40,240
uh so i'm going to talk about two

00:24:37,440 --> 00:24:42,400
not topics there questions exactly and

00:24:40,240 --> 00:24:46,159
the first one is about next build

00:24:42,400 --> 00:24:49,200
uh you know the nix build two

00:24:46,159 --> 00:24:49,600
you can build exactly every project that

00:24:49,200 --> 00:24:52,559
has

00:24:49,600 --> 00:24:53,919
a default mix which works in it you can

00:24:52,559 --> 00:24:56,320
just type next build and

00:24:53,919 --> 00:24:57,440
works and you'll get the result that

00:24:56,320 --> 00:25:00,559
folks

00:24:57,440 --> 00:25:01,200
and why it's cool because you don't need

00:25:00,559 --> 00:25:04,960
to know

00:25:01,200 --> 00:25:09,440
any other building tools

00:25:04,960 --> 00:25:12,960
like cable make whatever you just type

00:25:09,440 --> 00:25:15,840
next build and get the result we

00:25:12,960 --> 00:25:16,799
do already have some transformers from

00:25:15,840 --> 00:25:19,440
those

00:25:16,799 --> 00:25:20,159
configuration files to our next files

00:25:19,440 --> 00:25:23,520
that's why

00:25:20,159 --> 00:25:26,559
uh nowadays it's easy

00:25:23,520 --> 00:25:29,360
uh to transfer your project to nyx

00:25:26,559 --> 00:25:30,720
and also we have an excel which is more

00:25:29,360 --> 00:25:34,240
powerful when

00:25:30,720 --> 00:25:38,480
than such things as cabal sandbox which

00:25:34,240 --> 00:25:41,520
sometimes do the same thing but

00:25:38,480 --> 00:25:44,480
so that's a demo

00:25:41,520 --> 00:25:45,200
we have a simple haskell project where

00:25:44,480 --> 00:25:47,679
we have

00:25:45,200 --> 00:25:49,679
uh linux files for example i'm a person

00:25:47,679 --> 00:25:50,559
who don't know how to use cable i just

00:25:49,679 --> 00:25:54,960
type next build

00:25:50,559 --> 00:25:58,159
get the result and having my add effects

00:25:54,960 --> 00:26:01,840
but what's the problem if we

00:25:58,159 --> 00:26:04,960
do any changes to our project

00:26:01,840 --> 00:26:09,120
even if we add files

00:26:04,960 --> 00:26:11,919
that our project doesn't need

00:26:09,120 --> 00:26:12,880
nix build will build our project from

00:26:11,919 --> 00:26:15,919
scratch

00:26:12,880 --> 00:26:19,520
and that's pt uh

00:26:15,919 --> 00:26:22,799
sorry for my english and that said

00:26:19,520 --> 00:26:24,000
because if you have big project we will

00:26:22,799 --> 00:26:28,400
waste our time just

00:26:24,000 --> 00:26:31,840
waiting while it will finish to compile

00:26:28,400 --> 00:26:34,159
um so in our company we

00:26:31,840 --> 00:26:35,679
tries to solve this problem well exactly

00:26:34,159 --> 00:26:37,679
we started just

00:26:35,679 --> 00:26:40,559
a week ago but we want to solve this

00:26:37,679 --> 00:26:45,200
problem and

00:26:40,559 --> 00:26:47,919
what do we want to see in a result

00:26:45,200 --> 00:26:49,440
we work with haskell so now we are going

00:26:47,919 --> 00:26:50,960
to solve this problem just for this

00:26:49,440 --> 00:26:54,159
language

00:26:50,960 --> 00:26:55,760
we want to make mid-build make duration

00:26:54,159 --> 00:26:58,000
more granularly

00:26:55,760 --> 00:26:58,000
and

00:26:58,799 --> 00:27:06,080
if we succeed in this work

00:27:02,480 --> 00:27:09,360
we would like to make

00:27:06,080 --> 00:27:14,000
this solution for every language to

00:27:09,360 --> 00:27:17,840
uh forget this language specified tools

00:27:14,000 --> 00:27:22,240
just to use next build well

00:27:17,840 --> 00:27:25,520
we have several approaches now how to

00:27:22,240 --> 00:27:29,039
solve this problem

00:27:25,520 --> 00:27:32,320
for example we want to

00:27:29,039 --> 00:27:34,480
create in the result directory

00:27:32,320 --> 00:27:35,440
nyx build provides a result directly in

00:27:34,480 --> 00:27:37,919
your project

00:27:35,440 --> 00:27:39,360
we want we would like to add a directory

00:27:37,919 --> 00:27:42,000
called artifacts

00:27:39,360 --> 00:27:43,600
and some flag tunics built like minus

00:27:42,000 --> 00:27:46,720
minus devil

00:27:43,600 --> 00:27:49,679
to use your source codes

00:27:46,720 --> 00:27:52,000
and to use those artifacts indeed that's

00:27:49,679 --> 00:27:55,120
not so pure solution

00:27:52,000 --> 00:27:58,080
because sometimes

00:27:55,120 --> 00:27:59,279
we can have problems with this but a

00:27:58,080 --> 00:28:02,080
global

00:27:59,279 --> 00:28:02,080
peer solution

00:28:02,720 --> 00:28:09,360
is we haven't uh

00:28:06,240 --> 00:28:10,159
been discussing this but i think that we

00:28:09,360 --> 00:28:14,320
can

00:28:10,159 --> 00:28:17,679
think about monads because

00:28:14,320 --> 00:28:21,200
they can handle

00:28:17,679 --> 00:28:24,720
such things because uh indeed if we

00:28:21,200 --> 00:28:28,240
produce the result even if

00:28:24,720 --> 00:28:31,840
there are artifacts and no final result

00:28:28,240 --> 00:28:31,840
that's some kind of

00:28:32,880 --> 00:28:38,880
state and the next net build will

00:28:36,799 --> 00:28:41,120
get the previous state and generates new

00:28:38,880 --> 00:28:41,120
one

00:28:41,360 --> 00:28:45,840
so that's everything i wanted to say

00:28:44,240 --> 00:28:49,360
about nyx build so

00:28:45,840 --> 00:28:50,080
all your suggestions about uh how we can

00:28:49,360 --> 00:28:53,679
make it

00:28:50,080 --> 00:28:55,760
a welcome uh next thing i want to say

00:28:53,679 --> 00:28:57,279
probably and it was discussed in

00:28:55,760 --> 00:29:00,799
unconference

00:28:57,279 --> 00:29:02,880
about mixed packages as i said

00:29:00,799 --> 00:29:04,720
i like to participate in next packages

00:29:02,880 --> 00:29:08,799
repository live

00:29:04,720 --> 00:29:11,919
and nowadays we have more than 70

00:29:08,799 --> 00:29:12,880
000 commits so we have more than 800

00:29:11,919 --> 00:29:15,440
forks

00:29:12,880 --> 00:29:17,120
lots of clones and this year i saw in

00:29:15,440 --> 00:29:20,480
github statistics

00:29:17,120 --> 00:29:22,240
we have lots of views and

00:29:20,480 --> 00:29:24,000
the most significant part we have lots

00:29:22,240 --> 00:29:27,039
of unique visitors

00:29:24,000 --> 00:29:29,120
but what's the sad part

00:29:27,039 --> 00:29:31,600
uh we have lots of unclosed pull

00:29:29,120 --> 00:29:35,360
requests and lots of unclosed

00:29:31,600 --> 00:29:38,880
issues and uh lots of that issues are

00:29:35,360 --> 00:29:42,080
uh uh they are not

00:29:38,880 --> 00:29:43,120
um related to the real life so lots of

00:29:42,080 --> 00:29:46,559
them are solved

00:29:43,120 --> 00:29:50,960
already but they are opened in github

00:29:46,559 --> 00:29:54,559
so um i think i want to say

00:29:50,960 --> 00:29:57,840
that our unexpected repository is really

00:29:54,559 --> 00:30:01,200
friendly to contributors we have

00:29:57,840 --> 00:30:04,640
we already have guides how to

00:30:01,200 --> 00:30:05,760
uh write packages we have contributing

00:30:04,640 --> 00:30:08,799
guide for

00:30:05,760 --> 00:30:12,080
github for git users how we

00:30:08,799 --> 00:30:15,440
would like to see or commit names etc

00:30:12,080 --> 00:30:17,039
and the most significant part for a new

00:30:15,440 --> 00:30:18,480
contributor that we have lots of

00:30:17,039 --> 00:30:21,520
examples in our package

00:30:18,480 --> 00:30:25,360
repository and

00:30:21,520 --> 00:30:28,080
beginner can i think can start easily

00:30:25,360 --> 00:30:28,080
to create

00:30:28,880 --> 00:30:36,240
wrappers for packages to pixels

00:30:33,200 --> 00:30:38,720
and i wanted to say

00:30:36,240 --> 00:30:39,279
just two things first of all i think

00:30:38,720 --> 00:30:40,640
that we

00:30:39,279 --> 00:30:42,559
need to follow the rules that we've

00:30:40,640 --> 00:30:45,600
created

00:30:42,559 --> 00:30:48,240
and the other thing that

00:30:45,600 --> 00:30:48,640
i want to ask nixo's community to go

00:30:48,240 --> 00:30:51,200
through

00:30:48,640 --> 00:30:51,679
pull requests and issues and take a look

00:30:51,200 --> 00:30:54,640
at them

00:30:51,679 --> 00:30:55,360
and close those that are no longer no

00:30:54,640 --> 00:31:05,840
longer

00:30:55,360 --> 00:31:05,840
relevant that's all

00:31:06,480 --> 00:31:13,440
um yeah there is no time okay just one

00:31:10,000 --> 00:31:16,559
question one question and then we go on

00:31:13,440 --> 00:31:20,080
all right so i have one remark and then

00:31:16,559 --> 00:31:21,600
a proposal so for the next packages uh

00:31:20,080 --> 00:31:24,080
pull request we had like uh

00:31:21,600 --> 00:31:25,600
open session about that and i'll post

00:31:24,080 --> 00:31:28,559
notes to the naming list

00:31:25,600 --> 00:31:30,159
but um look at the core you know the

00:31:28,559 --> 00:31:31,279
main thing that we kind of figured out

00:31:30,159 --> 00:31:34,480
is

00:31:31,279 --> 00:31:36,399
when we have sprint at least once a year

00:31:34,480 --> 00:31:38,640
we should you know dedicate you know

00:31:36,399 --> 00:31:40,240
like an hour of of that

00:31:38,640 --> 00:31:43,120
for everyone to review their pull

00:31:40,240 --> 00:31:45,360
requests and they will get assigned to a

00:31:43,120 --> 00:31:47,279
10 other pull requests yeah so if we

00:31:45,360 --> 00:31:49,360
have like 20 people at the sprint that's

00:31:47,279 --> 00:31:51,919
200 pull requests that will get

00:31:49,360 --> 00:31:53,679
you know traction so for those who don't

00:31:51,919 --> 00:31:56,399
come to the sprint

00:31:53,679 --> 00:31:57,840
tomorrow if you can spend a little bit

00:31:56,399 --> 00:31:59,440
of time now that you have all the

00:31:57,840 --> 00:32:01,200
excitement about nyx

00:31:59,440 --> 00:32:02,799
and review some you know at least your

00:32:01,200 --> 00:32:04,159
pull requests and a few others that's

00:32:02,799 --> 00:32:06,000
going to help because

00:32:04,159 --> 00:32:07,200
we don't really want that to grow and

00:32:06,000 --> 00:32:09,360
and if you think that

00:32:07,200 --> 00:32:10,880
they automatically close they don't and

00:32:09,360 --> 00:32:14,000
we really have to

00:32:10,880 --> 00:32:17,760
to we really need more eyes on them

00:32:14,000 --> 00:32:21,279
um and for for your you know question of

00:32:17,760 --> 00:32:23,120
how do you um how do you kind of use the

00:32:21,279 --> 00:32:26,159
temporary folder i think

00:32:23,120 --> 00:32:27,360
by just being able to tell nick to to

00:32:26,159 --> 00:32:29,679
use the

00:32:27,360 --> 00:32:31,440
the the temporary further that it you

00:32:29,679 --> 00:32:32,159
know produced before that would help a

00:32:31,440 --> 00:32:34,960
lot in

00:32:32,159 --> 00:32:36,080
in terms of for the haskell so that that

00:32:34,960 --> 00:32:39,120
would be

00:32:36,080 --> 00:32:40,159
a quick solution to to have a flag

00:32:39,120 --> 00:32:42,080
saying you know

00:32:40,159 --> 00:32:43,679
use the you know first you would build

00:32:42,080 --> 00:32:45,919
it with minus k

00:32:43,679 --> 00:32:47,279
and then you would have a flag to say

00:32:45,919 --> 00:32:50,640
that you it can read

00:32:47,279 --> 00:32:54,000
it saves the results and start

00:32:50,640 --> 00:32:57,840
so that's all

00:32:54,000 --> 00:32:57,840
thank you

00:33:20,880 --> 00:33:27,679
oh this is the thing i'm working on uh

00:33:24,640 --> 00:33:30,640
i'm a taste of man of um

00:33:27,679 --> 00:33:31,840
well this is okay i'll just start as i

00:33:30,640 --> 00:33:34,159
prepared

00:33:31,840 --> 00:33:35,360
uh for those who don't know this is my

00:33:34,159 --> 00:33:38,720
little project

00:33:35,360 --> 00:33:42,000
it started as like like

00:33:38,720 --> 00:33:45,200
with elasticsearch look back and polymer

00:33:42,000 --> 00:33:47,039
monstrosity since then it looks lost

00:33:45,200 --> 00:33:51,279
some weight

00:33:47,039 --> 00:33:54,320
it now uses just notepad and polymer

00:33:51,279 --> 00:33:56,720
um well if somebody

00:33:54,320 --> 00:33:56,720
has been

00:33:57,760 --> 00:34:01,360
watching this project it may it might

00:34:00,799 --> 00:34:05,679
seem

00:34:01,360 --> 00:34:08,720
seemingly it would be dead

00:34:05,679 --> 00:34:12,399
sorry i'm nervous uh and uh no

00:34:08,720 --> 00:34:15,040
it's well it's not yet that no um

00:34:12,399 --> 00:34:15,679
i have been quite busy quite busy for

00:34:15,040 --> 00:34:18,800
past

00:34:15,679 --> 00:34:20,240
six months so therefore like i was

00:34:18,800 --> 00:34:23,520
slowly working on it

00:34:20,240 --> 00:34:26,800
on unstable branch which is a mess

00:34:23,520 --> 00:34:30,720
right now but i plan to do that to do

00:34:26,800 --> 00:34:33,359
more things at this print

00:34:30,720 --> 00:34:34,879
well okay the progress i'm rewriting the

00:34:33,359 --> 00:34:37,520
code to be more

00:34:34,879 --> 00:34:38,320
structured as part of upgrading polymer

00:34:37,520 --> 00:34:42,240
to

00:34:38,320 --> 00:34:42,240
version 1.0

00:34:42,879 --> 00:34:49,520
which before it wasn't very good

00:34:46,320 --> 00:34:50,000
okay it is about 90 percent done so this

00:34:49,520 --> 00:34:53,839
is

00:34:50,000 --> 00:34:57,839
um i'm finishing it right now

00:34:53,839 --> 00:35:00,400
and uh the if the usability of this

00:34:57,839 --> 00:35:02,400
program actually this is the next ui if

00:35:00,400 --> 00:35:07,200
i didn't say that already

00:35:02,400 --> 00:35:11,440
the uh nyx front end actually

00:35:07,200 --> 00:35:15,119
i at least i wish to be okay um

00:35:11,440 --> 00:35:18,160
it can be useful for nyx's graphical

00:35:15,119 --> 00:35:20,079
iso image for users to

00:35:18,160 --> 00:35:21,520
quickly discover the packages

00:35:20,079 --> 00:35:23,760
configuration options

00:35:21,520 --> 00:35:24,560
and stuff like that and to install

00:35:23,760 --> 00:35:28,240
something

00:35:24,560 --> 00:35:31,359
real fast and

00:35:28,240 --> 00:35:31,920
before actually it can be useful also

00:35:31,359 --> 00:35:34,400
for

00:35:31,920 --> 00:35:35,599
development tool as you can see the

00:35:34,400 --> 00:35:38,560
changes in the

00:35:35,599 --> 00:35:39,920
nixos modules um this this one

00:35:38,560 --> 00:35:43,839
configuration options

00:35:39,920 --> 00:35:46,960
i'll show them after i finish here

00:35:43,839 --> 00:35:50,320
and actually there comes only the

00:35:46,960 --> 00:35:52,800
one point here here plans for the sprint

00:35:50,320 --> 00:35:55,760
i will finish the rule right if somebody

00:35:52,800 --> 00:35:58,880
wants to join me just poke me

00:35:55,760 --> 00:36:01,440
okay then we'll then the next

00:35:58,880 --> 00:36:02,800
line would be to merge unstable branch

00:36:01,440 --> 00:36:06,400
to master and make

00:36:02,800 --> 00:36:11,760
a release uh right now

00:36:06,400 --> 00:36:14,880
yeah just make me so other way around

00:36:11,760 --> 00:36:16,079
uh the first thing here i mean this one

00:36:14,880 --> 00:36:20,240
is experimental

00:36:16,079 --> 00:36:23,359
it's i don't see it as

00:36:20,240 --> 00:36:26,560
really to be in the release

00:36:23,359 --> 00:36:28,480
okay let's see this one my default

00:36:26,560 --> 00:36:31,520
profile

00:36:28,480 --> 00:36:33,920
this is it so these are

00:36:31,520 --> 00:36:34,640
all the packages well not all because

00:36:33,920 --> 00:36:36,640
this would be

00:36:34,640 --> 00:36:38,240
much larger actually this is just

00:36:36,640 --> 00:36:41,839
truncated

00:36:38,240 --> 00:36:41,839
the search works

00:36:42,640 --> 00:36:48,000
like that um do you have all the

00:36:48,079 --> 00:36:54,480
well let's see this one

00:36:51,119 --> 00:36:57,760
uh it's all the uh

00:36:54,480 --> 00:37:00,960
nics can give me for this

00:36:57,760 --> 00:37:03,760
it's got all the data that

00:37:00,960 --> 00:37:03,760
probably you need

00:37:04,480 --> 00:37:08,000
even for development so you can poke if

00:37:07,200 --> 00:37:10,880
someone

00:37:08,000 --> 00:37:13,200
the maintainers if someone is if this

00:37:10,880 --> 00:37:16,240
program is not

00:37:13,200 --> 00:37:22,160
the uh this is

00:37:16,240 --> 00:37:26,079
if it has the bug or something um

00:37:22,160 --> 00:37:29,119
then okay then we can go back

00:37:26,079 --> 00:37:33,920
configuration options actually this this

00:37:29,119 --> 00:37:33,920
ui just read only for now it doesn't

00:37:34,160 --> 00:37:38,079
it doesn't give any uh it cannot install

00:37:37,520 --> 00:37:39,920
it

00:37:38,079 --> 00:37:41,520
although i have the functions already in

00:37:39,920 --> 00:37:43,440
the code but

00:37:41,520 --> 00:37:45,040
i have to just bind them inside

00:37:43,440 --> 00:37:48,839
somewhere and make a smart

00:37:45,040 --> 00:37:50,560
smart button um okay this is the

00:37:48,839 --> 00:37:54,240
configuration

00:37:50,560 --> 00:37:57,280
with nikolas he told me one trick

00:37:54,240 --> 00:38:00,800
so i reuse some old code and use hit

00:37:57,280 --> 00:38:00,800
strike and it works

00:38:01,359 --> 00:38:08,440
i mean about the values values can read

00:38:05,119 --> 00:38:12,480
this can read the values from the

00:38:08,440 --> 00:38:15,599
configuration.next and we can show them

00:38:12,480 --> 00:38:18,800
these are those are those two are

00:38:15,599 --> 00:38:22,000
set actually it says their

00:38:18,800 --> 00:38:23,520
example default value and stuff like

00:38:22,000 --> 00:38:26,720
that

00:38:23,520 --> 00:38:31,440
um well you can see

00:38:26,720 --> 00:38:34,960
all the like that and that

00:38:31,440 --> 00:38:38,160
okay if i missed somewhere

00:38:34,960 --> 00:38:41,680
okay no no matter no not that

00:38:38,160 --> 00:38:45,119
okay and this is almost over

00:38:41,680 --> 00:38:49,200
uh the planet it's

00:38:45,119 --> 00:38:52,640
well the planet it's

00:38:49,200 --> 00:38:56,400
um let's see this one

00:38:52,640 --> 00:38:58,640
it works like that and nothing special

00:38:56,400 --> 00:38:58,640
but

00:38:59,280 --> 00:39:05,520
let's see some okay this one

00:39:02,480 --> 00:39:05,920
has some code in it like that it might

00:39:05,520 --> 00:39:10,160
be

00:39:05,920 --> 00:39:13,040
useful for because uh first time i

00:39:10,160 --> 00:39:14,720
used the i didn't actually know for the

00:39:13,040 --> 00:39:19,599
nexus planet

00:39:14,720 --> 00:39:23,200
it was garbage told me someday but

00:39:19,599 --> 00:39:25,200
it's not it was not i don't know how to

00:39:23,200 --> 00:39:28,800
say

00:39:25,200 --> 00:39:32,320
known to well known

00:39:28,800 --> 00:39:36,079
so i'm just thought back

00:39:32,320 --> 00:39:39,760
and maybe i can do that too

00:39:36,079 --> 00:39:43,839
inside that's actually it

00:39:39,760 --> 00:39:43,839
thank you

00:39:49,200 --> 00:39:57,839
we have time for one question and

00:39:52,480 --> 00:39:57,839
johan please prepare meanwhile

00:40:09,359 --> 00:40:13,040
um hello no

00:40:13,760 --> 00:40:17,599
i was just sniffing a little bit into

00:40:15,359 --> 00:40:20,880
the code base and was surprised to see

00:40:17,599 --> 00:40:21,599
quite a lot of code in fact and i wonder

00:40:20,880 --> 00:40:24,800
if there is

00:40:21,599 --> 00:40:26,480
any idea of translating that maybe into

00:40:24,800 --> 00:40:29,280
python

00:40:26,480 --> 00:40:29,280
just as an idea

00:40:29,520 --> 00:40:39,839
well pearl is kind of more dead than

00:40:33,599 --> 00:40:39,839
than some other stuff and um

00:40:40,319 --> 00:40:45,359
uh okay i'll just answer it because uh

00:40:43,040 --> 00:40:47,920
you're talking about nyx

00:40:45,359 --> 00:40:49,440
yeah okay um the answer is there is a

00:40:47,920 --> 00:40:50,560
ticket already open it's going to be

00:40:49,440 --> 00:40:52,880
rewritten including

00:40:50,560 --> 00:40:54,720
c plus and it's just a matter of time so

00:40:52,880 --> 00:40:56,400
all code of nics is going to be c plus

00:40:54,720 --> 00:40:59,440
plus

00:40:56,400 --> 00:41:00,160
one day there is even a bounty hundred

00:40:59,440 --> 00:41:03,280
euros

00:41:00,160 --> 00:41:07,839
is already there for this 100

00:41:03,280 --> 00:41:07,839
yes so one day it will happen

00:41:08,400 --> 00:41:13,119
um just while we wait um

00:41:11,520 --> 00:41:14,880
those of you who haven't know we have a

00:41:13,119 --> 00:41:18,160
planet which is a collection of

00:41:14,880 --> 00:41:23,119
uh blog posts uh which you can send

00:41:18,160 --> 00:41:23,119
us your rss from your blog it's on

00:41:23,720 --> 00:41:26,720
planet.orgplanet.nixe.org

00:41:27,040 --> 00:41:30,319
to actually get to it i would actually

00:41:28,640 --> 00:41:31,839
have to show how to send you have to

00:41:30,319 --> 00:41:33,920
open a pull request

00:41:31,839 --> 00:41:35,599
or just ping somebody on rsc and they

00:41:33,920 --> 00:41:37,839
will add your rss

00:41:35,599 --> 00:41:39,280
feed and everybody will be notified

00:41:37,839 --> 00:41:43,200
about

00:41:39,280 --> 00:41:46,319
your blog post yes we are ready

00:41:43,200 --> 00:41:46,319
okay so

00:41:46,560 --> 00:41:48,720
uh

00:41:56,400 --> 00:42:00,160
okay sorry for the problem so i was the

00:41:58,400 --> 00:42:01,200
only laptop here at this conference it

00:42:00,160 --> 00:42:04,720
doesn't work

00:42:01,200 --> 00:42:08,000
okay um so basically

00:42:04,720 --> 00:42:09,359
um so i'm just i'm a scientific staff on

00:42:08,000 --> 00:42:11,200
the institute for american applied

00:42:09,359 --> 00:42:11,520
mathematics of the university of cutting

00:42:11,200 --> 00:42:14,880
i'm

00:42:11,520 --> 00:42:16,880
also the

00:42:14,880 --> 00:42:18,319
administrator for the institute and

00:42:16,880 --> 00:42:20,400
we're doing several stuff

00:42:18,319 --> 00:42:21,599
uh using at the moment the dbn based

00:42:20,400 --> 00:42:23,760
system here is

00:42:21,599 --> 00:42:25,119
with a little bit quicker about this is

00:42:23,760 --> 00:42:28,000
on compute servers so we are

00:42:25,119 --> 00:42:29,680
calculating stuff there are some some of

00:42:28,000 --> 00:42:31,760
our 400

00:42:29,680 --> 00:42:34,079
computers which which are configured

00:42:31,760 --> 00:42:36,640
through public at the moment so

00:42:34,079 --> 00:42:38,400
um we have the ring servers and several

00:42:36,640 --> 00:42:41,599
uh file systems there

00:42:38,400 --> 00:42:42,560
and some virtual machines and so this is

00:42:41,599 --> 00:42:45,119
basically the setup

00:42:42,560 --> 00:42:46,560
at the moment it runs with debian and i

00:42:45,119 --> 00:42:49,760
started using nexus

00:42:46,560 --> 00:42:51,839
lastly one year ago and

00:42:49,760 --> 00:42:53,599
already using it at home totally and

00:42:51,839 --> 00:42:54,000
then the idea was okay let's switch the

00:42:53,599 --> 00:42:57,599
whole

00:42:54,000 --> 00:43:00,960
institute to nexus okay

00:42:57,599 --> 00:43:03,040
this is this is the task and

00:43:00,960 --> 00:43:04,720
uh okay one one thing which is important

00:43:03,040 --> 00:43:05,920
here is it was

00:43:04,720 --> 00:43:07,280
the lowest thing is many client

00:43:05,920 --> 00:43:08,400
computers can and will be disconnected

00:43:07,280 --> 00:43:10,560
because there are laptops

00:43:08,400 --> 00:43:12,000
we configure laptops we can put them out

00:43:10,560 --> 00:43:13,359
of the network you can put into your

00:43:12,000 --> 00:43:17,359
network and so on

00:43:13,359 --> 00:43:18,800
so so first of all a little bit about uh

00:43:17,359 --> 00:43:20,720
what was the management at the moment as

00:43:18,800 --> 00:43:23,040
i said we use puppet

00:43:20,720 --> 00:43:24,319
but we want to get rid of this with niko

00:43:23,040 --> 00:43:26,319
xos okay

00:43:24,319 --> 00:43:28,240
um so at the moment puppet does

00:43:26,319 --> 00:43:29,760
something of the host group so there's

00:43:28,240 --> 00:43:31,440
the host group which is a laptop which

00:43:29,760 --> 00:43:32,960
has a specific configuration there is a

00:43:31,440 --> 00:43:34,720
vm which has a specific another

00:43:32,960 --> 00:43:37,200
configuration and so on

00:43:34,720 --> 00:43:37,839
uh okay we want to use nixos it's much

00:43:37,200 --> 00:43:39,599
cleaner

00:43:37,839 --> 00:43:41,119
it has rolling releases so one of the

00:43:39,599 --> 00:43:44,160
things is in a

00:43:41,119 --> 00:43:44,880
in a setup like like we have okay every

00:43:44,160 --> 00:43:46,800
two years

00:43:44,880 --> 00:43:49,040
we upgrade the system well something

00:43:46,800 --> 00:43:50,880
like this so but with nexus because of

00:43:49,040 --> 00:43:55,839
the rollback possibilities we could

00:43:50,880 --> 00:43:57,920
use yeah more or less every time i want

00:43:55,839 --> 00:43:59,040
okay and also one of the main things

00:43:57,920 --> 00:44:01,440
from the scientific

00:43:59,040 --> 00:44:03,359
viewpoint is it's easy to use reproduce

00:44:01,440 --> 00:44:05,119
with numeric calculations so you can

00:44:03,359 --> 00:44:06,560
really have some next child we can say

00:44:05,119 --> 00:44:08,079
okay this is this is one of the

00:44:06,560 --> 00:44:11,359
dependencies this is how to run

00:44:08,079 --> 00:44:13,839
and we can run it later in the same way

00:44:11,359 --> 00:44:15,839
okay because of this kind of laptop

00:44:13,839 --> 00:44:17,680
stuff we can't use nixops really

00:44:15,839 --> 00:44:19,680
because nip source is central and and

00:44:17,680 --> 00:44:20,560
deploys it on a computer which is there

00:44:19,680 --> 00:44:23,839
and prepared

00:44:20,560 --> 00:44:26,000
we don't we can't do this okay so this

00:44:23,839 --> 00:44:28,480
was the main problem there and then the

00:44:26,000 --> 00:44:31,119
graduate general idea we come up with

00:44:28,480 --> 00:44:32,560
was to okay let's let's make a channel

00:44:31,119 --> 00:44:34,079
where all the configuration for all the

00:44:32,560 --> 00:44:36,800
hosts is in

00:44:34,079 --> 00:44:38,960
um so this is mainly a linux package

00:44:36,800 --> 00:44:41,040
fork of course and

00:44:38,960 --> 00:44:42,960
and the main idea is to have additional

00:44:41,040 --> 00:44:45,040
modules which

00:44:42,960 --> 00:44:46,720
play the role of host groups so there

00:44:45,040 --> 00:44:48,839
are laptops they have a specific set of

00:44:46,720 --> 00:44:51,680
modules for specific set of

00:44:48,839 --> 00:44:53,599
options and um

00:44:51,680 --> 00:44:55,119
yeah okay this is the basic idea hydra

00:44:53,599 --> 00:44:57,200
will build all the

00:44:55,119 --> 00:44:58,800
uh the packages and all the specific

00:44:57,200 --> 00:45:00,720
pictures all the channels

00:44:58,800 --> 00:45:01,839
this is this is what we already have

00:45:00,720 --> 00:45:03,520
really

00:45:01,839 --> 00:45:05,440
but but we are only in the beginning and

00:45:03,520 --> 00:45:06,800
then in the end we want to use the

00:45:05,440 --> 00:45:09,200
experience rebuild

00:45:06,800 --> 00:45:10,240
periodically on the clients to to get

00:45:09,200 --> 00:45:12,560
update the channel

00:45:10,240 --> 00:45:14,319
and get all the configuration we changed

00:45:12,560 --> 00:45:15,520
uh on the server somehow also on the

00:45:14,319 --> 00:45:18,720
channel

00:45:15,520 --> 00:45:20,079
so the basic idea there in this setup is

00:45:18,720 --> 00:45:22,480
that we have some central

00:45:20,079 --> 00:45:24,319
module it's called non-default mix which

00:45:22,480 --> 00:45:25,280
serves as an entry point for all the

00:45:24,319 --> 00:45:28,640
modules

00:45:25,280 --> 00:45:30,319
um there we have have one switch so to

00:45:28,640 --> 00:45:34,000
say which is a variable here

00:45:30,319 --> 00:45:36,640
num dot host id which uh

00:45:34,000 --> 00:45:38,000
some the the so the idea is the client

00:45:36,640 --> 00:45:40,560
has some host id

00:45:38,000 --> 00:45:43,200
which is with uh which is defined in the

00:45:40,560 --> 00:45:46,000
next in its next os configuration

00:45:43,200 --> 00:45:48,720
file and then i i can switch in my

00:45:46,000 --> 00:45:51,359
channel which configuration it gets

00:45:48,720 --> 00:45:52,079
uh and though we call it here profile so

00:45:51,359 --> 00:45:54,480
we have some

00:45:52,079 --> 00:45:56,720
set of modules which which is like okay

00:45:54,480 --> 00:45:58,800
this is a laptop with whatever settings

00:45:56,720 --> 00:46:00,560
this is a profile and he gets it because

00:45:58,800 --> 00:46:01,599
his name of a computer is or his whole

00:46:00,560 --> 00:46:05,200
study is whatever

00:46:01,599 --> 00:46:06,880
client 52 something like this

00:46:05,200 --> 00:46:08,880
so this is basically this mapping from

00:46:06,880 --> 00:46:09,760
house id to a list of modules which i

00:46:08,880 --> 00:46:12,560
will reply to

00:46:09,760 --> 00:46:12,560
to the computer

00:46:13,200 --> 00:46:18,960
one problem there is everyone want to

00:46:14,880 --> 00:46:21,119
have because there are laptop but beyond

00:46:18,960 --> 00:46:22,560
because we have our own channel the

00:46:21,119 --> 00:46:24,240
computer has to be accessible

00:46:22,560 --> 00:46:26,000
to this channel but of course we have

00:46:24,240 --> 00:46:27,680
configuration in it which has

00:46:26,000 --> 00:46:29,680
passwords we have credentials in it

00:46:27,680 --> 00:46:31,440
their private keys whatever

00:46:29,680 --> 00:46:33,040
so we come up with some okay we have

00:46:31,440 --> 00:46:36,400
some um

00:46:33,040 --> 00:46:38,720
we need to encrypt them okay so we

00:46:36,400 --> 00:46:39,920
thought about that simply use gtb

00:46:38,720 --> 00:46:42,720
encryption

00:46:39,920 --> 00:46:43,440
and and when i've set up the computer i

00:46:42,720 --> 00:46:46,560
will

00:46:43,440 --> 00:46:48,640
create this key pair and then can

00:46:46,560 --> 00:46:50,079
um have a private key on the computer

00:46:48,640 --> 00:46:51,119
and the public key is uploaded to the

00:46:50,079 --> 00:46:55,119
server which

00:46:51,119 --> 00:46:57,200
then can decrypt the credentials

00:46:55,119 --> 00:46:59,520
when with the channel update okay

00:46:57,200 --> 00:47:02,160
basically

00:46:59,520 --> 00:47:02,720
okay so this is the installation and

00:47:02,160 --> 00:47:04,560
which is

00:47:02,720 --> 00:47:06,400
also said to do it doesn't have done yet

00:47:04,560 --> 00:47:08,480
yet so we need to have some

00:47:06,400 --> 00:47:10,240
some provisioning for the client which

00:47:08,480 --> 00:47:12,400
as i said before i can't work with

00:47:10,240 --> 00:47:15,280
nixops because there are some laptops

00:47:12,400 --> 00:47:16,319
somewhere uh i have to switch it on i

00:47:15,280 --> 00:47:17,760
have to do something

00:47:16,319 --> 00:47:19,680
and at the moment we are doing it with

00:47:17,760 --> 00:47:21,920
pc boot so

00:47:19,680 --> 00:47:25,359
we want to do this in excess also but so

00:47:21,920 --> 00:47:27,839
we have to do a simple uh

00:47:25,359 --> 00:47:30,319
bootstrap of of nexus for example with

00:47:27,839 --> 00:47:32,880
excess install then have this key

00:47:30,319 --> 00:47:34,800
key uh basic configuration where i put

00:47:32,880 --> 00:47:36,559
the host id in it so then all the

00:47:34,800 --> 00:47:38,400
computer is set up then you can

00:47:36,559 --> 00:47:40,880
can the hardware configuration is since

00:47:38,400 --> 00:47:42,559
uh of course created with nexus

00:47:40,880 --> 00:47:44,240
installed in the beginning and then i

00:47:42,559 --> 00:47:44,720
must a channel update and he gets all

00:47:44,240 --> 00:47:47,920
the

00:47:44,720 --> 00:47:49,359
uh information from from the server how

00:47:47,920 --> 00:47:52,880
he has to be configured

00:47:49,359 --> 00:47:54,800
okay um so this is the idea

00:47:52,880 --> 00:47:56,720
the user's height here is because now

00:47:54,800 --> 00:47:57,119
okay we have all users which then have

00:47:56,720 --> 00:48:00,160
these

00:47:57,119 --> 00:48:00,960
maxwell's configured laptops so they

00:48:00,160 --> 00:48:03,520
have to

00:48:00,960 --> 00:48:04,720
to work with us basically so one of the

00:48:03,520 --> 00:48:06,720
nice things of course is

00:48:04,720 --> 00:48:07,839
they need some development environments

00:48:06,720 --> 00:48:10,880
because yeah they're also

00:48:07,839 --> 00:48:12,160
coding self numerical calculations so

00:48:10,880 --> 00:48:13,760
one of the things of course is nyx

00:48:12,160 --> 00:48:15,680
shells we also come up with

00:48:13,760 --> 00:48:17,599
some idea of user profiles have some

00:48:15,680 --> 00:48:19,200
defined set of a profile

00:48:17,599 --> 00:48:20,960
and then they can easily switch between

00:48:19,200 --> 00:48:21,760
different environments this is of course

00:48:20,960 --> 00:48:24,480
standard

00:48:21,760 --> 00:48:25,119
nexus stuff one of the things which a

00:48:24,480 --> 00:48:28,480
little bit

00:48:25,119 --> 00:48:30,960
more interesting here is um

00:48:28,480 --> 00:48:31,599
okay every not every user should have

00:48:30,960 --> 00:48:33,680
the

00:48:31,599 --> 00:48:35,680
ability to to write its own nix

00:48:33,680 --> 00:48:37,359
expressions like how we can't

00:48:35,680 --> 00:48:39,359
expect that from everyone they are not

00:48:37,359 --> 00:48:41,119
that basic users but

00:48:39,359 --> 00:48:42,559
uh you know if you can't expect to write

00:48:41,119 --> 00:48:44,800
next expression from them

00:48:42,559 --> 00:48:47,440
so one of the idea was to have somehow

00:48:44,800 --> 00:48:47,760
an interface a script which which writes

00:48:47,440 --> 00:48:50,720
in

00:48:47,760 --> 00:48:51,760
the mixed expressions okay so if okay i

00:48:50,720 --> 00:48:53,760
have a package

00:48:51,760 --> 00:48:55,760
i want to add to the python environment

00:48:53,760 --> 00:48:57,520
to the each tv environment

00:48:55,760 --> 00:49:00,000
then then i want to call something like

00:48:57,520 --> 00:49:00,800
mix and and this package to exe or

00:49:00,000 --> 00:49:02,960
whatever

00:49:00,800 --> 00:49:04,559
and this writes the derivation and puts

00:49:02,960 --> 00:49:06,319
it into the config and then

00:49:04,559 --> 00:49:08,559
it gets to the and then the user can use

00:49:06,319 --> 00:49:10,880
it okay here's the question in the

00:49:08,559 --> 00:49:12,880
how to upgrade the user profile is not

00:49:10,880 --> 00:49:15,359
usually upgraded he has to do it just

00:49:12,880 --> 00:49:16,880
the user has to do it okay so but

00:49:15,359 --> 00:49:19,040
there's our questions here

00:49:16,880 --> 00:49:20,720
uh we at the moment don't know how to do

00:49:19,040 --> 00:49:21,920
it really there are another questions

00:49:20,720 --> 00:49:22,640
that's one of the main things here in

00:49:21,920 --> 00:49:25,040
the talk is

00:49:22,640 --> 00:49:26,559
we're in the beginning we want to to

00:49:25,040 --> 00:49:29,119
yeah

00:49:26,559 --> 00:49:30,960
know if this is doesn't set up might

00:49:29,119 --> 00:49:34,160
make any sense and if i have some

00:49:30,960 --> 00:49:38,000
some discussion about this um yeah

00:49:34,160 --> 00:49:38,000
okay no time i think um

00:49:38,800 --> 00:49:42,319
um yeah i mean we're more or less

00:49:40,640 --> 00:49:44,800
finished in the last site anyway

00:49:42,319 --> 00:49:46,079
so one of the questions also was do i

00:49:44,800 --> 00:49:47,920
put the configuration we have

00:49:46,079 --> 00:49:49,440
lots of configuration do i put someone's

00:49:47,920 --> 00:49:51,520
global configuration etc

00:49:49,440 --> 00:49:52,480
or part of the packages they have

00:49:51,520 --> 00:49:56,079
different

00:49:52,480 --> 00:49:58,800
cons and pros um user convenience i

00:49:56,079 --> 00:50:00,960
also talked about the slides before this

00:49:58,800 --> 00:50:02,720
is a little bit interesting thing about

00:50:00,960 --> 00:50:04,160
we don't know how to handle this

00:50:02,720 --> 00:50:06,000
there are dashboards stuff we have at

00:50:04,160 --> 00:50:09,119
the moment puppet and format which

00:50:06,000 --> 00:50:11,359
gives kind of interesting dashboard

00:50:09,119 --> 00:50:12,960
for managing all those our clients which

00:50:11,359 --> 00:50:13,599
we have not with an exercise at the

00:50:12,960 --> 00:50:16,000
moment but

00:50:13,599 --> 00:50:17,200
okay so and we have to do all the work

00:50:16,000 --> 00:50:20,000
really

00:50:17,200 --> 00:50:20,720
so um we have to do all the packages and

00:50:20,000 --> 00:50:24,000
create these

00:50:20,720 --> 00:50:26,400
nyx risk packages to

00:50:24,000 --> 00:50:27,599
to reflect our system at the moment so

00:50:26,400 --> 00:50:32,480
this is rainy

00:50:27,599 --> 00:50:32,480
okay thank you thank you

00:50:38,010 --> 00:50:41,920
[Applause]

00:50:39,520 --> 00:50:43,440
yes okay we have a time for one two

00:50:41,920 --> 00:50:46,319
question

00:50:43,440 --> 00:50:46,319
if there's any or

00:50:49,119 --> 00:50:52,720
so our users it wasn't clear but our

00:50:51,839 --> 00:50:54,559
people

00:50:52,720 --> 00:50:56,800
is part of this already implemented so

00:50:54,559 --> 00:50:57,520
are there actual users who have nix os

00:50:56,800 --> 00:51:00,880
on their machines

00:50:57,520 --> 00:51:02,400
um no we have at the moment uh

00:51:00,880 --> 00:51:04,160
a debian system which uses the next

00:51:02,400 --> 00:51:07,119
package manager

00:51:04,160 --> 00:51:08,480
so we have somehow yeah just curious

00:51:07,119 --> 00:51:09,920
about the experience of people who

00:51:08,480 --> 00:51:10,960
aren't familiar with knicks but now they

00:51:09,920 --> 00:51:12,400
have this thing on their machine that

00:51:10,960 --> 00:51:13,760
they didn't decide to put their we're

00:51:12,400 --> 00:51:15,839
using nyx package management at the

00:51:13,760 --> 00:51:22,640
moment we have debian systems with

00:51:15,839 --> 00:51:25,200
yeah there's an x okay

00:51:22,640 --> 00:51:26,160
so uh do you plan to like migrate to

00:51:25,200 --> 00:51:28,640
nexos

00:51:26,160 --> 00:51:30,000
and as a part of this question are there

00:51:28,640 --> 00:51:32,400
sources somewhere

00:51:30,000 --> 00:51:33,920
uh what is there source code of your

00:51:32,400 --> 00:51:35,359
things yeah there is there are

00:51:33,920 --> 00:51:37,920
a little bit source code but yeah of

00:51:35,359 --> 00:51:38,480
course we we think of planning this to

00:51:37,920 --> 00:51:40,480
to

00:51:38,480 --> 00:51:42,000
release at least possible stuff of

00:51:40,480 --> 00:51:44,000
course and anyway and

00:51:42,000 --> 00:51:45,440
in the end it's it's open the uh with

00:51:44,000 --> 00:51:47,119
one of the things with the secrets what

00:51:45,440 --> 00:51:51,839
in the end it's open anyway

00:51:47,119 --> 00:51:51,839
okay you can get it from anywhere

00:51:53,119 --> 00:51:59,280
uh no we maybe migrate an xos but of

00:51:56,240 --> 00:52:00,400
um this is not planned how to do it at

00:51:59,280 --> 00:52:01,760
some point at least

00:52:00,400 --> 00:52:04,480
i think we simply reinstall the

00:52:01,760 --> 00:52:09,119
computers yeah

00:52:04,480 --> 00:52:09,119
so yes huh

00:52:12,319 --> 00:52:19,839
yeah we can use this yes okay thank you

00:52:16,839 --> 00:52:19,839
okay

00:52:27,760 --> 00:52:31,040
so next

00:52:31,200 --> 00:52:35,599
presentation is going to be from nicolas

00:52:33,839 --> 00:52:38,400
about

00:52:35,599 --> 00:52:38,400
nick's demon

00:52:43,680 --> 00:52:49,920
and now okay so as you can see with the

00:52:48,240 --> 00:52:52,400
title of this presentation i like

00:52:49,920 --> 00:52:52,400
trolling

00:52:53,280 --> 00:52:56,880
so this was a presentation that i made a

00:52:56,319 --> 00:52:59,440
few months

00:52:56,880 --> 00:53:00,640
ago and i won't make all the

00:52:59,440 --> 00:53:03,760
presentation but

00:53:00,640 --> 00:53:08,000
i will go through the big parts of it

00:53:03,760 --> 00:53:10,880
and okay that's his question you

00:53:08,000 --> 00:53:11,520
all know about it uh what i wanted to

00:53:10,880 --> 00:53:14,480
talk about

00:53:11,520 --> 00:53:16,079
is not this part it's this one there is

00:53:14,480 --> 00:53:19,119
one thing which gives me to

00:53:16,079 --> 00:53:22,400
uh to the next package manager and

00:53:19,119 --> 00:53:24,559
nixos and others and this is

00:53:22,400 --> 00:53:25,680
i can i use some i can summarize it at

00:53:24,559 --> 00:53:28,880
the beginning at this

00:53:25,680 --> 00:53:30,800
table so let's do an exercise with me we

00:53:28,880 --> 00:53:32,880
have a short period of time so let's be

00:53:30,800 --> 00:53:36,400
quick uh

00:53:32,880 --> 00:53:40,160
in one side you have basically

00:53:36,400 --> 00:53:42,079
a packet manager or what it might be

00:53:40,160 --> 00:53:45,760
and on the other side you have a program

00:53:42,079 --> 00:53:45,760
so what is the file system

00:53:45,839 --> 00:53:49,920
what is the file system for a packet

00:53:47,440 --> 00:53:49,920
manager

00:53:51,599 --> 00:53:54,319
slash user

00:53:54,880 --> 00:54:00,559
i'm in for a program a namespace

00:54:03,119 --> 00:54:11,520
state memory okay

00:54:06,720 --> 00:54:14,640
what is a path

00:54:11,520 --> 00:54:18,319
a pointer okay so is that

00:54:14,640 --> 00:54:21,040
said fit with the memory uh send what's

00:54:18,319 --> 00:54:21,040
is a package

00:54:21,520 --> 00:54:29,359
a module so if you have

00:54:25,599 --> 00:54:31,280
if you have a memory and a pointer and

00:54:29,359 --> 00:54:33,520
on the file system you have a path a

00:54:31,280 --> 00:54:37,520
path points to what

00:54:33,520 --> 00:54:40,319
a structure yeah a folder on the

00:54:37,520 --> 00:54:41,920
file system so what's a pointer points

00:54:40,319 --> 00:54:45,200
to in memory

00:54:41,920 --> 00:54:47,920
a structure it sounds like a nice one

00:54:45,200 --> 00:54:49,440
so what is a packet manager if you have

00:54:47,920 --> 00:54:51,040
pointers which are pointing to

00:54:49,440 --> 00:54:55,119
structures in memory

00:54:51,040 --> 00:54:55,119
what is managing these pointers

00:54:57,119 --> 00:55:04,640
i got a garbage collector there what was

00:55:00,640 --> 00:55:07,359
somebody mentioned what did you see

00:55:04,640 --> 00:55:09,440
memory manager computer so we've got a

00:55:07,359 --> 00:55:12,799
garbage collector and memory manager

00:55:09,440 --> 00:55:14,640
so what is an installation if you have a

00:55:12,799 --> 00:55:17,839
if you have a structure in memory what

00:55:14,640 --> 00:55:23,440
is installing a structure in memory

00:55:17,839 --> 00:55:25,920
right writing allocation okay removing

00:55:23,440 --> 00:55:29,680
the allocation okay sounds simple and

00:55:25,920 --> 00:55:29,680
what is no such file or directory

00:55:32,400 --> 00:55:38,640
use after three thankful

00:55:35,520 --> 00:55:38,640
yeah that's about it

00:55:39,359 --> 00:55:44,640
so what does nyx mean in this world

00:55:46,079 --> 00:55:49,359
nix is a packet manager which is kind of

00:55:48,079 --> 00:55:52,000
different from the others

00:55:49,359 --> 00:55:53,760
and if we try to isolate mix out of the

00:55:52,000 --> 00:55:57,359
properties that we have for programs

00:55:53,760 --> 00:55:59,599
we realize that oh package or immutable

00:55:57,359 --> 00:56:00,880
we have a package manager which is a

00:55:59,599 --> 00:56:03,599
garbage collector

00:56:00,880 --> 00:56:04,319
and installing means that you are

00:56:03,599 --> 00:56:07,200
basically

00:56:04,319 --> 00:56:08,400
rooting the package that you have a root

00:56:07,200 --> 00:56:10,720
is basically

00:56:08,400 --> 00:56:12,559
from where the garbage collector starts

00:56:10,720 --> 00:56:16,000
to see what is installed

00:56:12,559 --> 00:56:17,520
and removing means i means that

00:56:16,000 --> 00:56:19,119
you lose a reference that you have no

00:56:17,520 --> 00:56:23,119
longer any route

00:56:19,119 --> 00:56:25,599
which are pointing to your package and

00:56:23,119 --> 00:56:26,799
of course no no such file directory is a

00:56:25,599 --> 00:56:29,040
sig fold

00:56:26,799 --> 00:56:30,480
which is one of the best analogy so if

00:56:29,040 --> 00:56:32,240
we continue with this id

00:56:30,480 --> 00:56:34,000
okay we have a package manager which is

00:56:32,240 --> 00:56:36,319
a garbage collector

00:56:34,000 --> 00:56:37,359
what are the properties of garbage

00:56:36,319 --> 00:56:40,799
collectors

00:56:37,359 --> 00:56:43,200
so we have two properties which are like

00:56:40,799 --> 00:56:44,160
conservative which is like basically

00:56:43,200 --> 00:56:47,920
saying

00:56:44,160 --> 00:56:48,559
i will be save me with memory and i will

00:56:47,920 --> 00:56:50,960
scan

00:56:48,559 --> 00:56:52,799
everything and say oh if there is

00:56:50,960 --> 00:56:55,119
something which looks like a pointer

00:56:52,799 --> 00:56:56,640
i will consider it as a valid pointer

00:56:55,119 --> 00:56:58,000
and that's the property that we have

00:56:56,640 --> 00:56:59,920
with nick's package manager

00:56:58,000 --> 00:57:01,119
which is like okay is there is something

00:56:59,920 --> 00:57:04,000
which looks like a path

00:57:01,119 --> 00:57:05,520
i will consider it as a valid path in

00:57:04,000 --> 00:57:08,799
into the neat store and

00:57:05,520 --> 00:57:10,319
consider it as still alive and another

00:57:08,799 --> 00:57:10,960
properties that we have with garbage

00:57:10,319 --> 00:57:14,079
collector

00:57:10,960 --> 00:57:17,359
is being independent of the language

00:57:14,079 --> 00:57:20,559
so that's why this talk is about the

00:57:17,359 --> 00:57:22,559
next demon and not the next language

00:57:20,559 --> 00:57:24,319
with the next demon words with a

00:57:22,559 --> 00:57:26,160
protocol and basically

00:57:24,319 --> 00:57:27,520
you as soon as you are able to talk to

00:57:26,160 --> 00:57:30,079
this protocol whatever

00:57:27,520 --> 00:57:30,720
whether it's in nix with the next

00:57:30,079 --> 00:57:34,400
language

00:57:30,720 --> 00:57:37,920
or maybe in python or in scheme

00:57:34,400 --> 00:57:40,480
somebody made it then

00:57:37,920 --> 00:57:41,599
you got a new language on top of a

00:57:40,480 --> 00:57:45,680
garbage collector

00:57:41,599 --> 00:57:49,119
and that's what we've got with uh

00:57:45,680 --> 00:57:50,799
with the nyx demon and i've

00:57:49,119 --> 00:57:52,319
somebody mentioned this presentation a

00:57:50,799 --> 00:57:54,640
few days ago on irc

00:57:52,319 --> 00:57:56,000
and i think it was worth presenting it

00:57:54,640 --> 00:57:58,799
here because

00:57:56,000 --> 00:57:59,200
it might not be clear to everybody so i

00:57:58,799 --> 00:58:02,480
hope

00:57:59,200 --> 00:58:05,200
i kind of clarified this ideas and

00:58:02,480 --> 00:58:05,520
give you another overview of nyx in a

00:58:05,200 --> 00:58:09,839
way

00:58:05,520 --> 00:58:09,839
that i also like

00:58:16,000 --> 00:58:24,799
thank you two questions and then we move

00:58:20,160 --> 00:58:24,799
meanwhile thomas please prepare for

00:58:25,280 --> 00:58:27,760
any question

00:58:28,960 --> 00:58:32,880
so the one thing i didn't catch is the

00:58:30,799 --> 00:58:34,559
connection with the nyx demon

00:58:32,880 --> 00:58:36,240
i mean so for instance the garbage

00:58:34,559 --> 00:58:36,880
collection is not a property of the next

00:58:36,240 --> 00:58:38,559
demon but

00:58:36,880 --> 00:58:40,319
nicks in general you can run it without

00:58:38,559 --> 00:58:43,760
a demon

00:58:40,319 --> 00:58:45,599
and it works fine so

00:58:43,760 --> 00:58:47,200
the next demon is independent of the

00:58:45,599 --> 00:58:50,319
language that you

00:58:47,200 --> 00:58:51,760
fit it also independent of the the store

00:58:50,319 --> 00:58:54,720
etc i mean you can

00:58:51,760 --> 00:58:58,480
disable the nyx demon and run as root

00:58:54,720 --> 00:58:58,480
and it all works exactly the same

00:59:00,799 --> 00:59:04,559
so those are properties of nics not the

00:59:03,040 --> 00:59:06,720
next demon that's just what i wanted to

00:59:04,559 --> 00:59:06,720
say

00:59:06,960 --> 00:59:10,079
yeah but i i meant the name's team on

00:59:09,200 --> 00:59:12,319
this as

00:59:10,079 --> 00:59:13,839
all this property of as a garbage

00:59:12,319 --> 00:59:16,240
collector and not being tied to a

00:59:13,839 --> 00:59:16,240
language

00:59:17,200 --> 00:59:24,799
yes details

00:59:21,680 --> 00:59:33,839
any other or we go forward

00:59:24,799 --> 00:59:33,839
okay thank you

00:59:39,680 --> 00:59:47,839
um to see the same thing

00:59:43,280 --> 00:59:47,839
on the screen

01:00:10,720 --> 01:00:18,960
move your cursor to the right

01:00:15,200 --> 01:00:18,960
oh okay so how do i move this

01:00:22,720 --> 01:00:24,920
so how do i get this screen to the other

01:00:24,559 --> 01:00:27,359
side

01:00:24,920 --> 01:00:43,839
[Laughter]

01:00:27,359 --> 01:00:43,839
okay try something else

01:00:54,839 --> 01:01:01,280
hmm

01:00:57,760 --> 01:01:01,280
i have no idea how to look at it

01:01:02,319 --> 01:01:08,839
it's on the right side oh you can see

01:01:05,680 --> 01:01:11,839
it a super but i don't see it here

01:01:08,839 --> 01:01:11,839
anymore

01:01:29,119 --> 01:01:35,920
okay okay um so thomas will be

01:01:33,040 --> 01:01:37,440
talking about cross-compiling

01:01:35,920 --> 01:01:41,200
cross-compilation

01:01:37,440 --> 01:01:44,480
yes yes well

01:01:41,200 --> 01:01:46,400
i'm tomas ravati and i discovered nyxos

01:01:44,480 --> 01:01:50,880
about half year ago

01:01:46,400 --> 01:01:54,319
when i was looking for a way to automate

01:01:50,880 --> 01:01:56,559
as much as possible at work and

01:01:54,319 --> 01:01:56,559
um

01:01:57,480 --> 01:02:01,359
[Music]

01:01:58,799 --> 01:02:01,920
i wrote for pretty much everything we

01:02:01,359 --> 01:02:05,359
developed

01:02:01,920 --> 01:02:09,039
i wrote nick's expressions

01:02:05,359 --> 01:02:12,079
mixed packages so we can

01:02:09,039 --> 01:02:15,599
now build everything very easily

01:02:12,079 --> 01:02:19,359
and configured hydra hydra

01:02:15,599 --> 01:02:20,720
so that we have everything that we

01:02:19,359 --> 01:02:23,119
change we have

01:02:20,720 --> 01:02:24,160
immediately or immediately reasonably

01:02:23,119 --> 01:02:27,680
immediately

01:02:24,160 --> 01:02:31,920
feedback about what we broke or

01:02:27,680 --> 01:02:31,920
what still works and

01:02:32,079 --> 01:02:38,240
this helps us a lot because we need to

01:02:35,839 --> 01:02:39,520
test against many different

01:02:38,240 --> 01:02:41,920
configurations

01:02:39,520 --> 01:02:42,799
for example different version of

01:02:41,920 --> 01:02:46,480
postgres

01:02:42,799 --> 01:02:48,960
with oracle with different versions of

01:02:46,480 --> 01:02:52,960
libreoffice for example

01:02:48,960 --> 01:02:55,110
and it's very easy to achieve with nyx

01:02:52,960 --> 01:02:57,200
and hydra

01:02:55,110 --> 01:03:00,000
[Music]

01:02:57,200 --> 01:03:02,559
once you write all the expressions

01:03:00,000 --> 01:03:04,880
that's the hard bit

01:03:02,559 --> 01:03:04,880
um

01:03:06,079 --> 01:03:13,359
so um at the moment

01:03:10,000 --> 01:03:13,920
um i would like to follow the i think

01:03:13,359 --> 01:03:18,079
rob had

01:03:13,920 --> 01:03:20,720
the plan how to achieve success with nix

01:03:18,079 --> 01:03:23,200
so find a good company so i think i

01:03:20,720 --> 01:03:26,480
succeeded in that

01:03:23,200 --> 01:03:29,359
and now i'm trying to nexify everything

01:03:26,480 --> 01:03:30,000
so what remains now is to find out how

01:03:29,359 --> 01:03:33,200
to deploy

01:03:30,000 --> 01:03:34,559
stuff so it's a bit tricky for us

01:03:33,200 --> 01:03:38,000
because i don't have a

01:03:34,559 --> 01:03:41,280
control over the machines where it runs

01:03:38,000 --> 01:03:42,960
so some customers somewhere somebody has

01:03:41,280 --> 01:03:46,000
ubuntu machines somebody has

01:03:42,960 --> 01:03:49,119
used somebody has windows some

01:03:46,000 --> 01:03:51,200
machines can be even offline so you

01:03:49,119 --> 01:03:55,119
don't have any access there

01:03:51,200 --> 01:03:56,240
um so there's the existing solutions

01:03:55,119 --> 01:03:59,760
that

01:03:56,240 --> 01:04:00,799
don't seem to fit any of the range we

01:03:59,760 --> 01:04:03,280
need so

01:04:00,799 --> 01:04:04,400
that's something i need to think about

01:04:03,280 --> 01:04:07,200
still

01:04:04,400 --> 01:04:07,760
i think even containers don't work for

01:04:07,200 --> 01:04:12,240
example

01:04:07,760 --> 01:04:14,960
on ubuntu um sorry

01:04:12,240 --> 01:04:16,000
yes this maybe that's the solution or

01:04:14,960 --> 01:04:18,319
maybe something

01:04:16,000 --> 01:04:19,359
um even simpler there are some

01:04:18,319 --> 01:04:22,960
discussions about

01:04:19,359 --> 01:04:26,400
rewriting the module system simplifying

01:04:22,960 --> 01:04:29,520
um and the

01:04:26,400 --> 01:04:33,200
one of the big remaining issues i have

01:04:29,520 --> 01:04:36,640
is um i have everything

01:04:33,200 --> 01:04:39,039
which runs on linux automated now

01:04:36,640 --> 01:04:40,559
so i make a change and i see what works

01:04:39,039 --> 01:04:45,119
and what doesn't

01:04:40,559 --> 01:04:48,480
but i don't have this on windows and

01:04:45,119 --> 01:04:52,839
um i would really love to have this

01:04:48,480 --> 01:04:56,000
ability on windows 2. and actually

01:04:52,839 --> 01:04:58,640
um the big

01:04:56,000 --> 01:05:00,079
thing with windows is that it's i have

01:04:58,640 --> 01:05:01,680
to babysit the machines

01:05:00,079 --> 01:05:03,520
they have a release machines test

01:05:01,680 --> 01:05:06,720
machines and they always keep

01:05:03,520 --> 01:05:09,599
asking for activations for some reason

01:05:06,720 --> 01:05:10,960
i don't know i need to always go to the

01:05:09,599 --> 01:05:14,319
machine and do something

01:05:10,960 --> 01:05:18,720
and telephone to microsoft and

01:05:14,319 --> 01:05:21,839
thing so and

01:05:18,720 --> 01:05:25,119
i think there is a way to do it

01:05:21,839 --> 01:05:30,160
completely on linux

01:05:25,119 --> 01:05:33,039
with vine and maybe cross compiling

01:05:30,160 --> 01:05:33,039
using ming way

01:05:34,000 --> 01:05:42,000
that already kind of works

01:05:37,760 --> 01:05:42,000
so here is a simple expression

01:05:42,160 --> 01:05:46,160
where i can define that i will be cross

01:05:44,160 --> 01:05:51,839
compiling with ming way for

01:05:46,160 --> 01:05:51,839
32-bit windows applications or 64-bit

01:05:52,400 --> 01:05:55,839
so i can simply

01:05:56,319 --> 01:06:02,880
write one line and have a next packages

01:06:00,319 --> 01:06:05,680
which will be compiled for the

01:06:02,880 --> 01:06:08,640
particular target

01:06:05,680 --> 01:06:11,039
and it works very well for example hello

01:06:08,640 --> 01:06:11,039
i can

01:06:16,839 --> 01:06:19,839
oops

01:06:30,079 --> 01:06:38,799
for example i can build

01:06:34,880 --> 01:06:43,119
a windows executable and i can see

01:06:38,799 --> 01:06:48,079
that it's a 32-bit windows executable

01:06:43,119 --> 01:06:50,880
i can do the same thing for 62-bit

01:06:48,079 --> 01:06:50,880
64-bit

01:06:57,440 --> 01:07:01,200
and i can see that i have 64-bit windows

01:07:00,160 --> 01:07:07,200
executable

01:07:01,200 --> 01:07:07,200
and i can even i haven't tried a 64-bit

01:07:12,839 --> 01:07:15,839
but

01:07:25,359 --> 01:07:32,559
so it works it wrote hello world

01:07:30,160 --> 01:07:35,200
so all the infrastructure is already

01:07:32,559 --> 01:07:38,240
there in next packages

01:07:35,200 --> 01:07:43,839
now the problem is

01:07:38,240 --> 01:07:43,839
that this was really trivial example

01:07:43,920 --> 01:07:48,160
so once i start doing something more

01:07:45,839 --> 01:07:53,599
complicated which we would need

01:07:48,160 --> 01:07:53,599
for automating all these things to hydra

01:07:53,839 --> 01:07:58,720
many things break and

01:08:02,240 --> 01:08:06,720
ideally

01:08:03,810 --> 01:08:10,640
[Music]

01:08:06,720 --> 01:08:14,480
if somebody loves nyx and loves windows

01:08:10,640 --> 01:08:17,600
and would be interested in

01:08:14,480 --> 01:08:18,799
fixing lots of stuff make it work on

01:08:17,600 --> 01:08:24,080
mingwei

01:08:18,799 --> 01:08:26,480
then please let me know

01:08:24,080 --> 01:08:26,480
thank you

01:08:32,000 --> 01:08:41,839
yeah we have time question or two

01:08:39,279 --> 01:08:42,719
okay it might be there won't be any

01:08:41,839 --> 01:08:46,080
bounty for

01:08:42,719 --> 01:08:53,839
100 but it might be a

01:08:46,080 --> 01:08:53,839
little paid project

01:08:56,560 --> 01:09:03,440
um so my question is what does

01:09:00,239 --> 01:09:06,640
make building nics on windows

01:09:03,440 --> 01:09:09,120
natively difficult is it the tool chain

01:09:06,640 --> 01:09:10,480
or is it nix depends the source code

01:09:09,120 --> 01:09:14,640
depends on specific

01:09:10,480 --> 01:09:14,640
implementations specific libraries

01:09:19,279 --> 01:09:26,000
i don't know um i think the next

01:09:22,560 --> 01:09:28,880
packages don't uh

01:09:26,000 --> 01:09:30,159
simply need to be adapted to understand

01:09:28,880 --> 01:09:33,839
that

01:09:30,159 --> 01:09:37,679
the compilation under mingwe needs

01:09:33,839 --> 01:09:40,080
something else than compilation under

01:09:37,679 --> 01:09:40,080
linux

01:09:42,960 --> 01:09:46,799
for example there are assertions if i

01:09:45,440 --> 01:09:51,040
install some package

01:09:46,799 --> 01:09:54,080
and tries to compile a lib icon

01:09:51,040 --> 01:09:56,400
and there's assertion which says that it

01:09:54,080 --> 01:09:58,560
shouldn't be on linux

01:09:56,400 --> 01:10:00,159
but the target is not linux so the

01:09:58,560 --> 01:10:02,719
assertion shouldn't

01:10:00,159 --> 01:10:04,719
fail so i think there are some things

01:10:02,719 --> 01:10:08,159
that just don't work

01:10:04,719 --> 01:10:12,320
plus there are things that the

01:10:08,159 --> 01:10:12,320
windows targets need special

01:10:14,840 --> 01:10:17,840
um

01:10:19,679 --> 01:10:24,239
maybe i don't know i haven't had the

01:10:21,440 --> 01:10:27,520
time to investigate but there's

01:10:24,239 --> 01:10:31,440
i think there is a work there that i

01:10:27,520 --> 01:10:33,360
would like to be done

01:10:31,440 --> 01:10:36,719
and i did don't have edited moment time

01:10:33,360 --> 01:10:36,719
to do it myself so

01:10:42,960 --> 01:10:47,360
oh what do you mean

01:10:45,350 --> 01:10:50,560
[Music]

01:10:47,360 --> 01:10:50,560
you did not make contributing

01:10:51,360 --> 01:10:55,679
no um i haven't made it upstream because

01:10:54,080 --> 01:10:56,480
i don't understand what the problem

01:10:55,679 --> 01:10:59,679
really is

01:10:56,480 --> 01:11:02,560
yet okay but but i mean

01:10:59,679 --> 01:11:04,000
the hello world works so so it's just a

01:11:02,560 --> 01:11:06,080
question of

01:11:04,000 --> 01:11:07,600
it's really making it more advanced

01:11:06,080 --> 01:11:10,719
until it doesn't work

01:11:07,600 --> 01:11:12,400
so i'm i'm just i i know i know that

01:11:10,719 --> 01:11:15,840
there are many problems

01:11:12,400 --> 01:11:18,239
and but i think many open source

01:11:15,840 --> 01:11:20,080
projects are not really used commonly on

01:11:18,239 --> 01:11:21,920
windows because windows has a different

01:11:20,080 --> 01:11:24,960
packaging system right so

01:11:21,920 --> 01:11:25,679
so i think many things like icon v well

01:11:24,960 --> 01:11:28,719
not really

01:11:25,679 --> 01:11:30,320
natively buildable on windows yes

01:11:28,719 --> 01:11:31,440
usually you know they would build on a

01:11:30,320 --> 01:11:33,679
sequence probably

01:11:31,440 --> 01:11:34,640
because liquid has patched them and and

01:11:33,679 --> 01:11:37,760
has their own

01:11:34,640 --> 01:11:40,800
system you know so yeah i think

01:11:37,760 --> 01:11:44,560
i identified them some

01:11:40,800 --> 01:11:47,199
uh packages that i'm sure work under

01:11:44,560 --> 01:11:49,840
mingwe that is possible to compile them

01:11:47,199 --> 01:11:53,120
on the main way

01:11:49,840 --> 01:11:55,760
i succeeded once doing that under ubuntu

01:11:53,120 --> 01:11:56,640
but i don't have any way of compiling it

01:11:55,760 --> 01:11:59,760
on

01:11:56,640 --> 01:12:03,040
nics easily i would have to really

01:11:59,760 --> 01:12:06,840
dig into it and implement it myself

01:12:03,040 --> 01:12:10,480
and find out how to do it

01:12:06,840 --> 01:12:11,440
so i know for example sbcl which would

01:12:10,480 --> 01:12:16,560
be interesting

01:12:11,440 --> 01:12:17,920
it's interesting for us here

01:12:16,560 --> 01:12:20,239
there's a package for it indexed

01:12:17,920 --> 01:12:23,600
packages

01:12:20,239 --> 01:12:24,719
i know that it works under wine and it

01:12:23,600 --> 01:12:28,080
compiles under

01:12:24,719 --> 01:12:36,159
me way but it doesn't compile

01:12:28,080 --> 01:12:38,880
if i just do this simple thing so

01:12:36,159 --> 01:12:38,880
is it clear

01:12:42,159 --> 01:12:45,199
i guess there is a chance tomorrow

01:12:43,760 --> 01:12:51,840
morning

01:12:45,199 --> 01:12:51,840
okay thank you i won't be here um

01:12:54,480 --> 01:13:01,360
thank you for potential people who are

01:12:58,400 --> 01:13:03,600
interesting interested i won't be here

01:13:01,360 --> 01:13:06,880
next week i'm on holiday

01:13:03,600 --> 01:13:10,080
so please contact me on this email i

01:13:06,880 --> 01:13:10,080
will read it when i come back

01:13:10,239 --> 01:13:16,080
thank you okay so

01:13:13,600 --> 01:13:17,440
we reached the end of the talk the first

01:13:16,080 --> 01:13:21,440
two days of the conference

01:13:17,440 --> 01:13:24,159
tomorrow it starts sprinting

01:13:21,440 --> 01:13:25,120
what i would like to thank is actually

01:13:24,159 --> 01:13:27,840
the whole

01:13:25,120 --> 01:13:28,480
crew that helped and please paulos come

01:13:27,840 --> 01:13:33,840
up

01:13:28,480 --> 01:13:33,840
because you did a big job

01:13:37,520 --> 01:13:40,560
peter please

01:13:40,960 --> 01:14:01,840
come jonas

01:13:45,199 --> 01:14:01,840
john john please

01:14:06,410 --> 01:14:09,870
[Applause]

01:14:10,800 --> 01:14:16,880
uh yo nilina

01:14:14,480 --> 01:14:16,880
come on

01:14:18,719 --> 01:14:21,920
you know that you helped right and i'm

01:14:21,040 --> 01:14:25,920
calling but i'm

01:14:21,920 --> 01:14:25,920
really low on voice come on

01:14:27,600 --> 01:14:31,920
we are on camera so uh this is the team

01:14:30,159 --> 01:14:33,280
who helped make the first nic science

01:14:31,920 --> 01:14:36,560
conference possible

01:14:33,280 --> 01:14:37,360
and they executed it and it was all lazy

01:14:36,560 --> 01:14:40,880
evaluated

01:14:37,360 --> 01:14:43,760
no worries um and

01:14:40,880 --> 01:14:44,159
yeah i'm just happy that you know um

01:14:43,760 --> 01:14:47,920
this

01:14:44,159 --> 01:14:51,040
became true and um

01:14:47,920 --> 01:14:53,600
i guess see tomorrow and if not tomorrow

01:14:51,040 --> 01:14:54,560
uh i don't know where next year but i

01:14:53,600 --> 01:14:56,560
think we

01:14:54,560 --> 01:14:57,600
we should meet next year as well right

01:14:56,560 --> 01:15:01,760
okay

01:14:57,600 --> 01:15:04,800
so um let's talk on irc where and how

01:15:01,760 --> 01:15:05,280
the details but thank you and uh just

01:15:04,800 --> 01:15:07,040
for

01:15:05,280 --> 01:15:09,440
this evening there is nothing planned i

01:15:07,040 --> 01:15:10,400
guess we can talk outside how and where

01:15:09,440 --> 01:15:13,120
to

01:15:10,400 --> 01:15:15,360
uh go maybe for drinks and but yes

01:15:13,120 --> 01:15:17,920
tomorrow we will start with sprints

01:15:15,360 --> 01:15:19,520
um 10 30 we're gonna start with the

01:15:17,920 --> 01:15:21,840
initial presentation

01:15:19,520 --> 01:15:22,960
so be there at ten you know the usual

01:15:21,840 --> 01:15:34,719
half an hour

01:15:22,960 --> 01:15:34,719

YouTube URL: https://www.youtube.com/watch?v=RKgf-TetB_k


