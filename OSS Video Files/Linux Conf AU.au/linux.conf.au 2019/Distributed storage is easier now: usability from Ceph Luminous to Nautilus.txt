Title: Distributed storage is easier now: usability from Ceph Luminous to Nautilus
Publication date: 2020-01-09
Playlist: linux.conf.au 2019
Description: 
	Tim Serong

https://2019.linux.conf.au/schedule/presentation/206/

Distributed storage is *still* complicated, but the Ceph project has put significant effort into making life easier for administrators and users over the past year.

Following on from Sage Weil's LCA 2018 presentation "Making distributed storage easy: usability in Ceph Luminous and beyond", this talk covers the changes we have made in the meantime, including major enhancements to the in-tree Ceph dashboard, centralised configuration management, placement group merging, and the beginnings of a new orchestrator module to tie in with Kubernetes, Salt and Ansible.

The Ceph Mimic release in June 2018 includes much of the above work, but we still have plenty more to do for the upcoming Ceph Nautilus release and beyond.

linux.conf.au is a conference about the Linux operating system, and all aspects of the thriving ecosystem of Free and Open Source Software that has grown up around it. Run since 1999, in a different Australian or New Zealand city each year, by a team of local volunteers, LCA invites more than 500 people to learn from the people who shape the future of Open Source. For more information on the conference see https://linux.conf.au/

#linux.conf.au #linux #foss #opensource
Captions: 
	00:00:00,030 --> 00:00:13,200
who is going to talk to us about easier

00:00:03,179 --> 00:00:17,520
distributed storage thank you

00:00:13,200 --> 00:00:20,100
so at LCA 2018 in Sydney last year saij

00:00:17,520 --> 00:00:22,830
while presented making distributed

00:00:20,100 --> 00:00:25,289
storage easy usability and safe luminous

00:00:22,830 --> 00:00:27,380
and beyond so I'm here today to present

00:00:25,289 --> 00:00:29,279
somewhat of a sequel to that talk

00:00:27,380 --> 00:00:30,900
covering the changes that we've made in

00:00:29,279 --> 00:00:36,510
the meantime and what's still coming

00:00:30,900 --> 00:00:39,390
down the track so the story so far once

00:00:36,510 --> 00:00:41,160
upon a time they were safe but if I tell

00:00:39,390 --> 00:00:43,440
that whole story I won't have any time

00:00:41,160 --> 00:00:44,730
left for the rest of this talk so you

00:00:43,440 --> 00:00:45,989
should probably watch a gentle

00:00:44,730 --> 00:00:49,219
introduction to surf which I presented

00:00:45,989 --> 00:00:51,090
two years ago and sysadmin

00:00:49,219 --> 00:00:52,320
before listening to the rest of what I'm

00:00:51,090 --> 00:00:57,149
about to say you'll have to do it very

00:00:52,320 --> 00:01:01,890
quickly go okay um if you're not

00:00:57,149 --> 00:01:03,930
familiar with surf surf is awesome it

00:01:01,890 --> 00:01:05,760
provides object block and file storage

00:01:03,930 --> 00:01:07,170
in a single horizontally scalable

00:01:05,760 --> 00:01:09,030
cluster so you can just keep making it

00:01:07,170 --> 00:01:11,189
bigger and bigger and bigger with no

00:01:09,030 --> 00:01:13,049
single points of failure it's free and

00:01:11,189 --> 00:01:15,390
open source software you can run it on

00:01:13,049 --> 00:01:17,670
commodity hardware and it tries to be

00:01:15,390 --> 00:01:20,100
self managing wherever possible so it

00:01:17,670 --> 00:01:21,450
will notice when discs fail and it will

00:01:20,100 --> 00:01:23,790
replicate data somewhere else so you

00:01:21,450 --> 00:01:26,070
know that your data is always stored

00:01:23,790 --> 00:01:26,759
reliably it does background scrubbing

00:01:26,070 --> 00:01:29,280
and things like that

00:01:26,759 --> 00:01:31,590
and it tries to balance the data evenly

00:01:29,280 --> 00:01:34,799
across the cluster but you do still need

00:01:31,590 --> 00:01:36,659
to actually administer the thing which

00:01:34,799 --> 00:01:39,320
leads to the first point I think that

00:01:36,659 --> 00:01:41,400
sage made last year Saif is hard

00:01:39,320 --> 00:01:44,149
traditionally the status display and the

00:01:41,400 --> 00:01:46,229
logs were difficult to parse visually

00:01:44,149 --> 00:01:48,750
there were and still are lots of

00:01:46,229 --> 00:01:51,960
configuration options or ther occation

00:01:48,750 --> 00:01:53,460
can be tricky to set up people who

00:01:51,960 --> 00:01:57,450
always have difficulty figuring out the

00:01:53,460 --> 00:01:59,399
number of placement groups to that each

00:01:57,450 --> 00:02:03,450
pool has them that's sort of an internal

00:01:59,399 --> 00:02:05,820
detail about how SIF shards the data

00:02:03,450 --> 00:02:08,670
across the cluster but you want to get

00:02:05,820 --> 00:02:09,899
it right and it's hard and of course the

00:02:08,670 --> 00:02:12,300
fact that you have to do everything via

00:02:09,899 --> 00:02:13,140
a command line interface unless you've

00:02:12,300 --> 00:02:16,710
got a third party to do

00:02:13,140 --> 00:02:19,680
to some kind now I'd like to be able to

00:02:16,710 --> 00:02:21,480
flip that to the past tense because a

00:02:19,680 --> 00:02:24,120
bunch of those things were already fixed

00:02:21,480 --> 00:02:27,690
in the luminous release in August 2017

00:02:24,120 --> 00:02:29,970
so the status display and the logs were

00:02:27,690 --> 00:02:34,260
cleaned up there's a balance of module

00:02:29,970 --> 00:02:35,970
that you can run to help clean up the

00:02:34,260 --> 00:02:39,060
edge cases of when when data

00:02:35,970 --> 00:02:41,100
distribution gets a bit funny crush

00:02:39,060 --> 00:02:43,830
device classes were added back in

00:02:41,100 --> 00:02:45,989
luminous so you will will notice if

00:02:43,830 --> 00:02:47,100
you're using SSDs versus hard disks and

00:02:45,989 --> 00:02:50,190
you don't have to fiddle around with

00:02:47,100 --> 00:02:54,360
custom cross profiles yourself they're

00:02:50,190 --> 00:02:59,160
sort of already there and a new entry

00:02:54,360 --> 00:03:01,380
web dashboard was added just read only

00:02:59,160 --> 00:03:03,360
so get cluster status and you can't make

00:03:01,380 --> 00:03:04,980
any changes with it but there was

00:03:03,360 --> 00:03:07,800
something that became very clear that

00:03:04,980 --> 00:03:08,970
there needed to be some sort of GUI out

00:03:07,800 --> 00:03:12,060
of the box rather than necessarily

00:03:08,970 --> 00:03:14,580
having third party tools but we can't go

00:03:12,060 --> 00:03:16,530
all the way to saying SEF was hard

00:03:14,580 --> 00:03:18,290
because that might imply that everything

00:03:16,530 --> 00:03:23,010
is now easy

00:03:18,290 --> 00:03:24,600
so until we reach that frabjous day I'm

00:03:23,010 --> 00:03:26,610
just going to say that CF is easier now

00:03:24,600 --> 00:03:34,230
and will continue to get easier in

00:03:26,610 --> 00:03:36,090
future last LCA we were halfway through

00:03:34,230 --> 00:03:37,560
the mimic development cycle other

00:03:36,090 --> 00:03:40,739
development cycles of nine months now

00:03:37,560 --> 00:03:43,350
and at that time the major usability

00:03:40,739 --> 00:03:46,260
enhancements planned for the coming

00:03:43,350 --> 00:03:47,790
releases included centralizing

00:03:46,260 --> 00:03:49,079
configuration management so that you

00:03:47,790 --> 00:03:50,820
didn't have to worry so much about

00:03:49,079 --> 00:03:55,769
having a whole lot of stuff in SEF

00:03:50,820 --> 00:03:58,530
confiture to replicate across all there

00:03:55,769 --> 00:04:04,190
was a plan to do some slick deployment

00:03:58,530 --> 00:04:08,640
stuff in kubernetes using rook the

00:04:04,190 --> 00:04:12,239
dashboard was intended to become vastly

00:04:08,640 --> 00:04:15,950
improved and actually sort of rebuilt

00:04:12,239 --> 00:04:18,720
based on and derived from the open attic

00:04:15,950 --> 00:04:21,450
third-party GUI which a team from Sousa

00:04:18,720 --> 00:04:24,120
had developed and placement group

00:04:21,450 --> 00:04:25,919
merging remember I said that it's tricky

00:04:24,120 --> 00:04:26,970
to get placement groups right when you

00:04:25,919 --> 00:04:31,170
are setting up the number of place

00:04:26,970 --> 00:04:32,610
groups for a pool if you've got it wrong

00:04:31,170 --> 00:04:34,080
on the low side you can always increase

00:04:32,610 --> 00:04:35,430
the number of placement groups if you

00:04:34,080 --> 00:04:38,550
got it run on the high side you couldn't

00:04:35,430 --> 00:04:41,150
decrease them so you were screwed did

00:04:38,550 --> 00:04:43,530
weak the pool will make it again

00:04:41,150 --> 00:04:45,860
so placement group merging is the thing

00:04:43,530 --> 00:04:49,410
that lets you reduce that number again

00:04:45,860 --> 00:04:51,750
so some of that stuff was completed for

00:04:49,410 --> 00:04:55,050
mimic which was released in June 2018

00:04:51,750 --> 00:05:01,680
and more of its coming in the Nautilus

00:04:55,050 --> 00:05:06,270
release which is due very very soon in

00:05:01,680 --> 00:05:08,370
terms of usability improvements mimic

00:05:06,270 --> 00:05:12,930
gave us the new dashboard that I

00:05:08,370 --> 00:05:15,240
mentioned this is angularjs thing both

00:05:12,930 --> 00:05:18,240
inspired by and derived from the work on

00:05:15,240 --> 00:05:21,000
open attic it had all of the features of

00:05:18,240 --> 00:05:24,830
the luminous dashboard so various status

00:05:21,000 --> 00:05:27,030
display and whatnot and on top of that

00:05:24,830 --> 00:05:29,820
too the luminous one you could just go

00:05:27,030 --> 00:05:33,780
and see it there was no authentication

00:05:29,820 --> 00:05:35,760
or anything so the dashboard v2 in mimic

00:05:33,780 --> 00:05:40,590
brought username and password

00:05:35,760 --> 00:05:42,630
authentication SSL support our BD volume

00:05:40,590 --> 00:05:46,800
management routers gateway management

00:05:42,630 --> 00:05:48,240
and a configuration setting browser the

00:05:46,800 --> 00:05:52,410
centralized configuration management

00:05:48,240 --> 00:05:54,870
part is interesting because config

00:05:52,410 --> 00:05:56,610
options can now be centrally stored on

00:05:54,870 --> 00:05:59,460
the Mons and managed managed by the

00:05:56,610 --> 00:06:01,710
monitors and what will happen now I

00:05:59,460 --> 00:06:03,750
forget the exact order but chef will go

00:06:01,710 --> 00:06:05,490
and look when it starts up it'll go and

00:06:03,750 --> 00:06:06,870
look in the visit there's a few places

00:06:05,490 --> 00:06:07,530
it looks but I look in the config file

00:06:06,870 --> 00:06:11,490
and if there's something that's not

00:06:07,530 --> 00:06:12,720
there or looking there what's been set

00:06:11,490 --> 00:06:15,270
in the mons and then it'll fall back to

00:06:12,720 --> 00:06:18,030
a default and this means that for

00:06:15,270 --> 00:06:20,340
initial cluster bootstrap you can you

00:06:18,030 --> 00:06:23,550
can get away with possibly having almost

00:06:20,340 --> 00:06:26,419
nothing and I think even to the point of

00:06:23,550 --> 00:06:28,800
using DNS service records to define

00:06:26,419 --> 00:06:30,780
which host of them on so you can do away

00:06:28,800 --> 00:06:32,880
with having to specify initial Mon hosts

00:06:30,780 --> 00:06:34,530
and things like that so that and

00:06:32,880 --> 00:06:35,970
everything else rather than having to

00:06:34,530 --> 00:06:37,560
write it to a configuration file and

00:06:35,970 --> 00:06:39,180
then copy the file to all of the other

00:06:37,560 --> 00:06:40,860
hosts I know you can do that with

00:06:39,180 --> 00:06:42,570
automation tools but

00:06:40,860 --> 00:06:44,850
and then restart demons and things you

00:06:42,570 --> 00:06:50,900
can just run safe config set whatever

00:06:44,850 --> 00:06:50,900
and we'll set that option immediately

00:06:53,480 --> 00:07:00,090
Nautilus as I said is too out really

00:06:56,460 --> 00:07:02,100
soon and will include a bunch more good

00:07:00,090 --> 00:07:05,780
stuff

00:07:02,100 --> 00:07:09,740
PG auto-scaling is interesting because

00:07:05,780 --> 00:07:11,700
Nautilus brings PG merging so we can now

00:07:09,740 --> 00:07:13,640
increase or decrease the number of

00:07:11,700 --> 00:07:18,300
placement groups through storage pool

00:07:13,640 --> 00:07:19,320
you can do that by hand if you figuring

00:07:18,300 --> 00:07:20,880
out placement groups is you've got to

00:07:19,320 --> 00:07:23,280
know how many pools have got how many

00:07:20,880 --> 00:07:27,650
disks you've got and you try to aim for

00:07:23,280 --> 00:07:31,470
about 100 per OSD and you turn you

00:07:27,650 --> 00:07:33,450
squint a little bit and chef will try to

00:07:31,470 --> 00:07:35,870
take care of this for you if you turn on

00:07:33,450 --> 00:07:40,230
PG auto-scaling

00:07:35,870 --> 00:07:42,270
based on certain storage size targets

00:07:40,230 --> 00:07:43,530
that you can set so something that you

00:07:42,270 --> 00:07:47,550
can actually think about and relate to

00:07:43,530 --> 00:07:50,390
is how much how much space I want to use

00:07:47,550 --> 00:07:52,560
for certain things rather than trying to

00:07:50,390 --> 00:07:58,170
go through your rotating calculations to

00:07:52,560 --> 00:07:59,220
figure out the number of PJ's you don't

00:07:58,170 --> 00:08:00,780
if you don't have to have it on

00:07:59,220 --> 00:08:02,280
automatically and you can episode will

00:08:00,780 --> 00:08:03,390
warn you if things go outside a certain

00:08:02,280 --> 00:08:04,860
range and then you can decide to take

00:08:03,390 --> 00:08:06,750
over by hand and change it at a time

00:08:04,860 --> 00:08:08,160
that suits you because of course

00:08:06,750 --> 00:08:09,240
changing the number of placement groups

00:08:08,160 --> 00:08:11,610
means there'll be a certain amount of

00:08:09,240 --> 00:08:15,120
data that moves around and they can get

00:08:11,610 --> 00:08:19,170
performance implications and of course

00:08:15,120 --> 00:08:21,660
further dashboard enhancements including

00:08:19,170 --> 00:08:25,740
multiple users and roles now single

00:08:21,660 --> 00:08:27,270
sign-on via sam'l - internationalization

00:08:25,740 --> 00:08:28,800
and localization there's meant to be a

00:08:27,270 --> 00:08:31,830
bunch of different languages that you

00:08:28,800 --> 00:08:35,130
can view and use this thing in now it

00:08:31,830 --> 00:08:37,530
will do I scuzzy target and NFS to

00:08:35,130 --> 00:08:40,020
condition management so if you've got a

00:08:37,530 --> 00:08:42,180
set cluster and you have legacy clients

00:08:40,020 --> 00:08:45,600
or clients that don't speak native surf

00:08:42,180 --> 00:08:47,430
protocols you might have ice cozy on

00:08:45,600 --> 00:08:51,090
Windows that you want to talk to a surf

00:08:47,430 --> 00:08:53,640
cluster or you can expose CFS via NFS

00:08:51,090 --> 00:08:57,930
and the

00:08:53,640 --> 00:08:59,190
things are not part of safe per se but

00:08:57,930 --> 00:09:00,390
they're definitely things that you would

00:08:59,190 --> 00:09:03,320
want to be able to administer from

00:09:00,390 --> 00:09:07,340
within a serf administration dashboard

00:09:03,320 --> 00:09:11,040
the dashboard also if you've configured

00:09:07,340 --> 00:09:13,350
chromatography and Prometheus the serf

00:09:11,040 --> 00:09:16,770
dashboard is capable of embedding that

00:09:13,350 --> 00:09:18,810
if you set the right option it will

00:09:16,770 --> 00:09:20,280
embed your graph on a dashboard inside

00:09:18,810 --> 00:09:21,960
there so in one place you can see all of

00:09:20,280 --> 00:09:27,240
the serf specific stuff that's going on

00:09:21,960 --> 00:09:29,580
and I have a few screenshots to follow

00:09:27,240 --> 00:09:31,170
just to give some flavor and highlight a

00:09:29,580 --> 00:09:36,450
couple of other things that's in there

00:09:31,170 --> 00:09:38,370
now that the default status screen looks

00:09:36,450 --> 00:09:41,310
something like this it would be slightly

00:09:38,370 --> 00:09:43,500
more impressive if this were a real

00:09:41,310 --> 00:09:50,040
cluster and not a toy cluster with one

00:09:43,500 --> 00:09:51,870
Mon and five disks but you get the idea

00:09:50,040 --> 00:09:53,670
this is you can easily see at a glance

00:09:51,870 --> 00:09:56,040
that health is okay the monitors are in

00:09:53,670 --> 00:09:59,100
quorum OSDs are up I've got managers

00:09:56,040 --> 00:10:00,710
metadata servers number of hosts and etc

00:09:59,100 --> 00:10:03,140
and there's a certain amount of

00:10:00,710 --> 00:10:05,460
information here we can see about

00:10:03,140 --> 00:10:12,300
performance stuff I ops throughput read

00:10:05,460 --> 00:10:14,250
and write etc when we go to OSD

00:10:12,300 --> 00:10:16,020
management this was this was not there

00:10:14,250 --> 00:10:18,150
in the previous version in terms of the

00:10:16,020 --> 00:10:22,740
things that you can do to OSC so here we

00:10:18,150 --> 00:10:26,100
can see you know disk usage reading

00:10:22,740 --> 00:10:27,840
right bytes and you can on individual OS

00:10:26,100 --> 00:10:29,970
DS you can mark them up or down or you

00:10:27,840 --> 00:10:31,710
can trigger scrubs and deep scrubs and

00:10:29,970 --> 00:10:34,410
things and you can set individual

00:10:31,710 --> 00:10:36,600
options in here or global options for

00:10:34,410 --> 00:10:38,010
the cluster if you were taking a node

00:10:36,600 --> 00:10:39,870
down to put it under maintenance you

00:10:38,010 --> 00:10:41,730
would want to sit and know out perhaps

00:10:39,870 --> 00:10:43,890
because if you've taken no down for too

00:10:41,730 --> 00:10:45,540
long SEF will go oh those disks are gone

00:10:43,890 --> 00:10:47,070
I better start rebalancing things but if

00:10:45,540 --> 00:10:49,200
you've deliberately taken a node down

00:10:47,070 --> 00:10:50,370
for for maintenance you don't want to do

00:10:49,200 --> 00:10:51,600
that so this is where you would go and

00:10:50,370 --> 00:10:53,780
set that option to stop that thing from

00:10:51,600 --> 00:10:53,780
happening

00:10:54,410 --> 00:11:01,940
the configuration it's a configuration

00:10:59,210 --> 00:11:03,590
settings editor actually will very

00:11:01,940 --> 00:11:05,360
helpfully tell you what the

00:11:03,590 --> 00:11:11,570
configuration settings actually mean and

00:11:05,360 --> 00:11:20,540
do which is quite nice if anybody's

00:11:11,570 --> 00:11:23,780
tried to work that out and of course

00:11:20,540 --> 00:11:25,940
some pool management you can create edit

00:11:23,780 --> 00:11:28,880
and delete storage pools and see various

00:11:25,940 --> 00:11:32,680
statistics you can select erase your

00:11:28,880 --> 00:11:32,680
code profiles and so on

00:11:34,990 --> 00:11:41,529
there's more in there than that but

00:11:37,470 --> 00:11:44,560
that's a few of the highlights further

00:11:41,529 --> 00:11:48,310
things coming up in Nautilus blinky

00:11:44,560 --> 00:11:51,130
lights is the ability to turn on or off

00:11:48,310 --> 00:11:52,899
the ident and fault LEDs on disks

00:11:51,130 --> 00:11:55,959
backing and giving OSD so that you can

00:11:52,899 --> 00:11:58,420
find the damn things if you've got a

00:11:55,959 --> 00:12:00,520
failed OSD and you've got a rack that

00:11:58,420 --> 00:12:01,600
rows of racks that stretch all the way

00:12:00,520 --> 00:12:03,660
down to there and you want to pull it

00:12:01,600 --> 00:12:07,990
out it'd be really nice to see it

00:12:03,660 --> 00:12:10,720
flashing the blinky light functionality

00:12:07,990 --> 00:12:12,850
I mean internally this is calling web

00:12:10,720 --> 00:12:13,779
storage management to something but

00:12:12,850 --> 00:12:15,720
you've got to be able to call that

00:12:13,779 --> 00:12:17,800
somehow so the blinky light

00:12:15,720 --> 00:12:20,290
functionality and some of the dashboard

00:12:17,800 --> 00:12:23,560
functionality notably the configuring I

00:12:20,290 --> 00:12:25,240
scuzzy gateways and NFS Ganesha means

00:12:23,560 --> 00:12:26,950
that SEF needs to be able to talk to

00:12:25,240 --> 00:12:29,500
whatever tool it was deployed with

00:12:26,950 --> 00:12:31,959
because SEF chef doesn't know much about

00:12:29,500 --> 00:12:34,240
your hardware or your environment beyond

00:12:31,959 --> 00:12:35,860
what it's already running on it doesn't

00:12:34,240 --> 00:12:37,330
know what disks you have in a nun

00:12:35,860 --> 00:12:42,040
configured box that you might want to

00:12:37,330 --> 00:12:44,529
use next you couldn't use SEF to go and

00:12:42,040 --> 00:12:46,450
blink the lights on a failed disk if the

00:12:44,529 --> 00:12:48,250
SEF OSD software on that node happened

00:12:46,450 --> 00:12:49,720
to have crashed but your orchestration

00:12:48,250 --> 00:12:51,660
tool was still running SEF couldn't

00:12:49,720 --> 00:12:55,209
couldn't help you there

00:12:51,660 --> 00:12:56,680
so SEF needs to be able to talk to to

00:12:55,209 --> 00:12:58,720
whatever tool it was that deployed the

00:12:56,680 --> 00:12:59,980
cluster which leads to the final big

00:12:58,720 --> 00:13:02,230
thing that I want to talk about for the

00:12:59,980 --> 00:13:05,520
Nautilus release which is the

00:13:02,230 --> 00:13:08,170
orchestrator module orchestrated modules

00:13:05,520 --> 00:13:11,980
so there's a bunch of ways that you can

00:13:08,170 --> 00:13:13,570
deploy SEF and as I said your deployment

00:13:11,980 --> 00:13:16,120
tool will always know more about the

00:13:13,570 --> 00:13:18,720
environment and SIF does and have more

00:13:16,120 --> 00:13:22,029
power to do things and SEF itself will

00:13:18,720 --> 00:13:23,760
but if you're managing SEF through the

00:13:22,029 --> 00:13:25,930
inbuilt dashboard and command-line tools

00:13:23,760 --> 00:13:27,520
there's there's things that you want to

00:13:25,930 --> 00:13:30,279
do from that perspective as a staff

00:13:27,520 --> 00:13:34,029
administrator like deploying your OS DS

00:13:30,279 --> 00:13:35,860
or replace a failed disk or manipulate

00:13:34,029 --> 00:13:37,149
those slightly external third-party not

00:13:35,860 --> 00:13:38,470
third-party but slightly external

00:13:37,149 --> 00:13:40,779
services like ice cozy and Arthur's

00:13:38,470 --> 00:13:42,760
Ganesha and SEF itself can't do that you

00:13:40,779 --> 00:13:44,320
can't deploy a new NBS from within SEF

00:13:42,760 --> 00:13:46,860
or a new routers gateway or a new

00:13:44,320 --> 00:13:46,860
Ganesha host

00:13:47,360 --> 00:13:51,180
so for these things you have to rely on

00:13:49,920 --> 00:13:54,630
your deployment tool whatever it happens

00:13:51,180 --> 00:13:57,030
to be and so Nautilus to facilitate this

00:13:54,630 --> 00:14:01,680
Nautilus is including an Orchestrator

00:13:57,030 --> 00:14:04,220
module orchestrated modules for several

00:14:01,680 --> 00:14:07,070
deployment tools for four ansible for

00:14:04,220 --> 00:14:09,500
deep sea which is the salt based

00:14:07,070 --> 00:14:14,820
deployment tool that we developed Souza

00:14:09,500 --> 00:14:17,160
and for rook and this means that SEF

00:14:14,820 --> 00:14:18,630
itself there's a command-line tool you

00:14:17,160 --> 00:14:19,950
can use inside after said what

00:14:18,630 --> 00:14:21,480
Orchestrator you want to use and to ask

00:14:19,950 --> 00:14:24,420
the orchestrator to give me an inventory

00:14:21,480 --> 00:14:26,070
of disks and to start to do things and

00:14:24,420 --> 00:14:27,480
all of that stuff also - will be

00:14:26,070 --> 00:14:30,630
available through the dashboard so

00:14:27,480 --> 00:14:31,680
inside SEF when you're using the command

00:14:30,630 --> 00:14:33,210
line tool or when you're looking at the

00:14:31,680 --> 00:14:36,720
dashboard SEF itself doesn't have to

00:14:33,210 --> 00:14:38,310
care how the how the backend

00:14:36,720 --> 00:14:41,160
Orchestrator tool really works just so

00:14:38,310 --> 00:14:43,710
long as each of these modules that we

00:14:41,160 --> 00:14:47,190
implement expose you know a particular

00:14:43,710 --> 00:14:48,780
API get inventory add service check

00:14:47,190 --> 00:14:52,340
server status add hours till you remove

00:14:48,780 --> 00:14:52,340
hours to replace OSD that sort of thing

00:14:53,210 --> 00:14:59,040
so that's that's that's exciting that's

00:14:56,730 --> 00:15:01,170
a bit I'm working at the moment somebody

00:14:59,040 --> 00:15:02,280
is also written ssh Orchestrator so if

00:15:01,170 --> 00:15:06,480
you're not using any of these fancy

00:15:02,280 --> 00:15:09,330
things you can still I see laughter now

00:15:06,480 --> 00:15:12,510
it's really a thing people want it

00:15:09,330 --> 00:15:14,370
so beyond Nautilus octopuses our next

00:15:12,510 --> 00:15:16,800
release two out and a bit more than nine

00:15:14,370 --> 00:15:18,480
months and on the usability front I know

00:15:16,800 --> 00:15:22,520
that we can expect more dashboard and

00:15:18,480 --> 00:15:25,710
more Orchestrator functionality the

00:15:22,520 --> 00:15:27,540
redeploying replacing OS T's and things

00:15:25,710 --> 00:15:30,330
I kind of don't expect that to be in the

00:15:27,540 --> 00:15:33,060
orchestrator in time for Nautilus

00:15:30,330 --> 00:15:38,010
don't quote me on that this is recorded

00:15:33,060 --> 00:15:40,800
and anyway but before that we've got

00:15:38,010 --> 00:15:42,780
cephalic on 2019 is coming up in

00:15:40,800 --> 00:15:45,390
Barcelona on the 19th and 20th of May

00:15:42,780 --> 00:15:48,570
attached to Kubik on and cloud native

00:15:45,390 --> 00:15:52,800
con the CFP for that closes on February

00:15:48,570 --> 00:15:57,120
the 1st so if you would like to submit

00:15:52,800 --> 00:16:01,380
something for that or attend or both I'm

00:15:57,120 --> 00:16:03,720
sure that would be most welcome

00:16:01,380 --> 00:16:06,240
and I haven't got a slide for this but

00:16:03,720 --> 00:16:08,460
if you are interested in more details

00:16:06,240 --> 00:16:10,770
than I have had time for here about

00:16:08,460 --> 00:16:12,630
things aren't just usability and you can

00:16:10,770 --> 00:16:14,340
manage to get to fold em in about a week

00:16:12,630 --> 00:16:16,560
and a half

00:16:14,340 --> 00:16:18,090
sage will be giving a rather longer talk

00:16:16,560 --> 00:16:24,030
about what's coming up next in mini

00:16:18,090 --> 00:16:26,430
comes in and with that I'm unbelievably

00:16:24,030 --> 00:16:30,060
slightly under time if you're interested

00:16:26,430 --> 00:16:31,500
in these slides including my fairly

00:16:30,060 --> 00:16:35,010
copious speaker notes you can get them

00:16:31,500 --> 00:16:36,660
here there's more laughter from the

00:16:35,010 --> 00:16:39,750
audience from the fine gentleman that I

00:16:36,660 --> 00:16:41,760
stole this presentation template from so

00:16:39,750 --> 00:16:43,310
thank you very much everybody I hope you

00:16:41,760 --> 00:16:45,480
found that informative and not too

00:16:43,310 --> 00:16:48,120
baffling or confusing for those of you

00:16:45,480 --> 00:16:56,840
who haven't I

00:16:48,120 --> 00:16:56,840
[Applause]

00:17:00,990 --> 00:17:07,199
nice talk thank you we've built several

00:17:03,930 --> 00:17:09,120
surpluses using safe deploy all the

00:17:07,199 --> 00:17:12,089
orchestrator modules going to deprecated

00:17:09,120 --> 00:17:14,610
self deploy and the orchestrator modules

00:17:12,089 --> 00:17:20,400
going to deprecated safe deploy the

00:17:14,610 --> 00:17:25,589
short answer is yes the Ceph deploy has

00:17:20,400 --> 00:17:27,540
has really it's not been under active

00:17:25,589 --> 00:17:30,570
development for some time because we

00:17:27,540 --> 00:17:33,030
sort of I mean all the pieces that we

00:17:30,570 --> 00:17:34,560
needed to add to supporting luminous to

00:17:33,030 --> 00:17:36,330
support the manager daemon and such and

00:17:34,560 --> 00:17:40,020
have all sort of been added along the

00:17:36,330 --> 00:17:42,990
way but because it's safe deployment

00:17:40,020 --> 00:17:47,490
really cumbersome to use it at scale or

00:17:42,990 --> 00:17:52,080
you know and so we really it's easy yeah

00:17:47,490 --> 00:17:56,390
this is the problem and that's a longer

00:17:52,080 --> 00:17:56,390
discussion we should talk later

00:18:01,130 --> 00:18:06,140

YouTube URL: https://www.youtube.com/watch?v=o-ncl2_jsi8


