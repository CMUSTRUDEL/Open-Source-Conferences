Title: FPGA based mobile phone: Creating a truly open and trustable mobile communications device
Publication date: 2020-01-09
Playlist: linux.conf.au 2019
Description: 
	Paul Gardner-Stephen

https://2019.linux.conf.au/schedule/presentation/115/

Modern smart-phones are untrustable.  Even if they were open-source, the sheer complexity makes them impossible to meaningfully verify, and therefore trust them.  Worse, because they contain major closed-source elements, we lack the digital sovereignty to even attempt such a verification.  These concerns are not merely theoretical, the Samsung Galaxy S2 back-door episode, as well as Spectre and Meltdown, and the surveillance facilities purposely built into the cellular network are all evidence that verifyability, trustability, and ultimately, digital sovereignty are all sorely wanted.

Past efforts to make open-source smart-phones have struggled on a number of fronts.  First, the chipsets are rarely open-source friendly.  Second, even if you find a suitable chipset, by the time you go to market, it is likely already obsolete, and the process of migrating to new chipsets every year is not sustainable for an open-source project. Third, even if you do succeed, there are enough closed-source blobs to make the whole thing untrustable, and without the user holding sovereignty over the device.

We have thus taken a fresh approach to this problem, and created a smart-phone like device that uses an FPGA as the main application processor, and coupled it with an industry standard mini-PCIe cellular modem. The result is a system where you can freely upgrade the cellular modem using commercial off-the-shelf modules, and have complete sovereignty, in that you can create your own FPGA bitstream that defines whatever application processor you want. The cellular modem is left as an untrusted and quarantined "black box".  Importantly, the microphone connects to the modem via the FPGA, so it is possible to prevent the cellular modem listening in when it shouldn't be.  Indeed, we have gone two steps further: You can cut the power to the modem, or even physically remove it.  This modular approach also leaves the door open for a truly open cellular modem to be created, without making us wait in the meantime.

As FPGA programming is not for everyone, and because the device should be fun, and because it is easier to make a less miniaturised device on a shoe-string budget, we are creating prototype devices that double as a portable game console, similar in size to a 3DS XL, and that implements both basic telephony (voice, SMS, contacts) and is backwards compatible with the Commodore 64:  The core telephony software we have created is written using an extension to Commodore 64 BASIC, and is already open-sourced, and small enough for a determined user to verify.  Naturally, you can use the tune from your favourite C64 game or demo as ringtone and/or hold music, and play your favourite games while on a call.  Thanks to our crazy full-crossbar audio mixer framework, you can even have the sound from what you are playing audible to you, but not to the other party. And because of our history with the Serval Project, we are also including some long-range UHF packet radios for good measure.

The resulting franken-phone will not be for everyone, but we believe it represents a significant milestone, in that it could well be the first long-term sustainable open-source smart-phone, and perhaps the first ever smart-phone to offer true digital sovereignty. And play Impossible Mission.

"Telephone Tennis" can finally be a game you can enjoy.

linux.conf.au is a conference about the Linux operating system, and all aspects of the thriving ecosystem of Free and Open Source Software that has grown up around it. Run since 1999, in a different Australian or New Zealand city each year, by a team of local volunteers, LCA invites more than 500 people to learn from the people who shape the future of Open Source. For more information on the conference see https://linux.conf.au/

#linux.conf.au #linux #foss #opensource
Captions: 
	00:00:10,250 --> 00:00:16,590
we were here a moment ago talking about

00:00:13,170 --> 00:00:18,570
the horrors of firmware security and now

00:00:16,590 --> 00:00:21,449
perhaps unorthodox methods of trying to

00:00:18,570 --> 00:00:22,289
reduce that Mackey was talking about the

00:00:21,449 --> 00:00:23,760
challenge of having to write a

00:00:22,289 --> 00:00:26,789
bootloader for the Commodore 64 I've

00:00:23,760 --> 00:00:29,130
done that and we can talk a little bit

00:00:26,789 --> 00:00:30,359
at that as well but really where I want

00:00:29,130 --> 00:00:33,000
to begin I mean what Matthew talked

00:00:30,359 --> 00:00:37,440
about was all of this problem of the

00:00:33,000 --> 00:00:40,350
this complexity that is opaque it is

00:00:37,440 --> 00:00:41,820
extremely hard to know you know is your

00:00:40,350 --> 00:00:43,230
management engine on version 12 and if

00:00:41,820 --> 00:00:45,719
it is is it really on version 12 or is

00:00:43,230 --> 00:00:47,129
it saying it's on version 12 you know

00:00:45,719 --> 00:00:48,660
how many divisions of the NSA are

00:00:47,129 --> 00:00:49,559
fighting for control over your SMC at

00:00:48,660 --> 00:00:52,289
the moment

00:00:49,559 --> 00:00:57,960
you know that's right all of them

00:00:52,289 --> 00:01:00,629
someone says the key is we can't tell we

00:00:57,960 --> 00:01:03,500
have point past what I call the point of

00:01:00,629 --> 00:01:06,420
magic arthur c clarke and his three laws

00:01:03,500 --> 00:01:08,220
his third law was any sufficiently

00:01:06,420 --> 00:01:09,920
advanced technology is indistinguishable

00:01:08,220 --> 00:01:12,030
from magic

00:01:09,920 --> 00:01:14,610
so on that basis I thought we should

00:01:12,030 --> 00:01:16,590
actually begin the the talk with

00:01:14,610 --> 00:01:19,229
admittedly an extremely lame magic trick

00:01:16,590 --> 00:01:20,700
but nonetheless with one nonetheless we

00:01:19,229 --> 00:01:23,340
have my laptop here we have my

00:01:20,700 --> 00:01:27,420
presentation this is all excellent we

00:01:23,340 --> 00:01:30,540
have a hoop and I can demonstrate that

00:01:27,420 --> 00:01:35,600
my laptop is not connected in any way

00:01:30,540 --> 00:01:35,600
shape or form to the HDMI output

00:01:38,850 --> 00:01:46,210
yes so for my laptop and I'll trust

00:01:42,970 --> 00:01:48,070
bento to not root keep my firmware will

00:01:46,210 --> 00:01:50,020
keep my laptop well out of the process

00:01:48,070 --> 00:01:51,910
so that from here on we know that

00:01:50,020 --> 00:01:56,350
everything I'm doing is not involving

00:01:51,910 --> 00:01:57,870
that laptop no x86 CPUs were harmed in

00:01:56,350 --> 00:02:01,990
the making of the remainder of this talk

00:01:57,870 --> 00:02:05,740
because in fact the slides are coming

00:02:01,990 --> 00:02:07,870
from the 8-bit computer we have our own

00:02:05,740 --> 00:02:12,400
presentation software that we have

00:02:07,870 --> 00:02:15,430
written so what we have here looks like

00:02:12,400 --> 00:02:17,050
a Commodore 64 and to all intents and

00:02:15,430 --> 00:02:19,720
purposes it can be in actual fact what

00:02:17,050 --> 00:02:21,580
it is is an FPGA reimplementation of the

00:02:19,720 --> 00:02:24,250
Commodore 65 with a few additional

00:02:21,580 --> 00:02:25,900
little add-ons so a few of you may know

00:02:24,250 --> 00:02:27,610
about the Commodore 65 assistive get the

00:02:25,900 --> 00:02:29,380
occasional you know whether it's a slash

00:02:27,610 --> 00:02:31,450
dot news piece or the register or

00:02:29,380 --> 00:02:33,130
someone saying about how a prototype was

00:02:31,450 --> 00:02:35,170
sold for like twenty thousand euros or

00:02:33,130 --> 00:02:36,700
eighty thousand euros or something I

00:02:35,170 --> 00:02:38,080
owned one and I sold it before they're

00:02:36,700 --> 00:02:40,360
worth quite that much which is a bit sad

00:02:38,080 --> 00:02:41,860
I had fond memories of it so I decided

00:02:40,360 --> 00:02:43,390
to make a new one and then we started

00:02:41,860 --> 00:02:45,940
thinking about some of the these

00:02:43,390 --> 00:02:48,040
security issues in particular around

00:02:45,940 --> 00:02:54,750
mobile devices and whether we could do

00:02:48,040 --> 00:02:54,750
something about it so let me we need to

00:02:56,640 --> 00:03:02,980
load up presentation software of course

00:02:59,760 --> 00:03:04,270
well let you make the CPU go fast so

00:03:02,980 --> 00:03:08,110
that we don't spend forever waiting for

00:03:04,270 --> 00:03:10,350
it to load comma eight for those who

00:03:08,110 --> 00:03:10,350
remember

00:03:12,069 --> 00:03:17,709
okay so we'll load up our presentation

00:03:15,379 --> 00:03:17,709
software

00:03:17,799 --> 00:03:21,620
it isn't course Commodore 64 suffers so

00:03:20,239 --> 00:03:27,950
it would not be complete without a crack

00:03:21,620 --> 00:03:30,140
screen even if I had to supply the

00:03:27,950 --> 00:03:35,090
originals myself to the cracking group

00:03:30,140 --> 00:03:36,920
who provided the crack so we can leave

00:03:35,090 --> 00:03:37,879
that there for a moment so that we have

00:03:36,920 --> 00:03:39,410
time to read all the greets and

00:03:37,879 --> 00:03:41,720
everything as we we go through things

00:03:39,410 --> 00:03:43,489
and so as I was making this talk it was

00:03:41,720 --> 00:03:47,079
really there are three different talks

00:03:43,489 --> 00:03:49,099
that I thought about that had you know

00:03:47,079 --> 00:03:50,900
this was really trying to do we only

00:03:49,099 --> 00:03:52,549
have time for one so each of you have to

00:03:50,900 --> 00:03:54,799
choose which talk you want to listen to

00:03:52,549 --> 00:03:56,030
and you know pay attention from that

00:03:54,799 --> 00:03:57,500
perspective

00:03:56,030 --> 00:03:59,420
so one of them is this whole question of

00:03:57,500 --> 00:04:03,500
how can we make a computer that we can

00:03:59,420 --> 00:04:05,150
trust in this modern age and another

00:04:03,500 --> 00:04:07,310
talk is this whole question of digital

00:04:05,150 --> 00:04:09,920
sovereignty how can we actually be

00:04:07,310 --> 00:04:10,849
sovereigns over the hardware we own and

00:04:09,920 --> 00:04:12,730
of course there's an open source

00:04:10,849 --> 00:04:16,760
community this is a topic that comes up

00:04:12,730 --> 00:04:19,160
repeatedly in so many different ways and

00:04:16,760 --> 00:04:21,829
finally there's one about reducing the

00:04:19,160 --> 00:04:23,479
resources required to innovate in the

00:04:21,829 --> 00:04:25,880
mobile telephony space because I mean

00:04:23,479 --> 00:04:27,590
even even my regular mobile phone is

00:04:25,880 --> 00:04:29,720
perhaps is arguably one of the best

00:04:27,590 --> 00:04:31,760
Android phones you can get from an open

00:04:29,720 --> 00:04:33,050
perspective it's a fair phone to I can

00:04:31,760 --> 00:04:35,599
take it apart I can take the screen up

00:04:33,050 --> 00:04:37,849
without any tools I can run whatever I

00:04:35,599 --> 00:04:39,349
want on it within reason but as Matthew

00:04:37,849 --> 00:04:41,240
said about in the previous talk about no

00:04:39,349 --> 00:04:43,580
idea really what's actually going on in

00:04:41,240 --> 00:04:47,650
there and it's too complex to actually

00:04:43,580 --> 00:04:50,090
have confidence so that's the three

00:04:47,650 --> 00:04:51,380
general talks that we want to have and

00:04:50,090 --> 00:04:53,180
occasionally it does this is an 8-bit

00:04:51,380 --> 00:04:56,020
computer but that's fine we can reboot

00:04:53,180 --> 00:04:56,020
it quite quickly

00:04:57,360 --> 00:05:01,630
it'll take longer for the screen to

00:04:59,949 --> 00:05:06,550
recapture than it does for the computer

00:05:01,630 --> 00:05:08,590
to boot what's and then it's the fun

00:05:06,550 --> 00:05:09,850
joys of experimental hardware on this

00:05:08,590 --> 00:05:23,199
one if you don't weave all the joystick

00:05:09,850 --> 00:05:25,600
the keyboard doesn't start working so we

00:05:23,199 --> 00:05:27,130
can run our 6402 at 40 megahertz in here

00:05:25,600 --> 00:05:31,000
rather than the usual pedestrian one

00:05:27,130 --> 00:05:33,280
which is quite other way up right so in

00:05:31,000 --> 00:05:39,610
the short way Commodore Oh to open we

00:05:33,280 --> 00:05:43,270
want slides one loading loading loading

00:05:39,610 --> 00:05:44,470
right f5 of course is presentation mode

00:05:43,270 --> 00:05:52,870
right this is universal and all things

00:05:44,470 --> 00:05:54,520
so f5 and I now have my slide clicker so

00:05:52,870 --> 00:05:56,050
really in here that the five kind of

00:05:54,520 --> 00:05:57,789
things that I want to cover through in

00:05:56,050 --> 00:05:59,620
this talk then so I want to talk about

00:05:57,789 --> 00:06:02,770
why it is so hard in fact to make an

00:05:59,620 --> 00:06:04,979
open-source smartphone this is you know

00:06:02,770 --> 00:06:07,570
there's a lot of work required to do it

00:06:04,979 --> 00:06:09,699
and you know smartphones are dangerously

00:06:07,570 --> 00:06:11,860
untrustable there's a bunch of topics on

00:06:09,699 --> 00:06:13,139
this that you know that Matthew has kind

00:06:11,860 --> 00:06:16,330
of leading in the previous talk again

00:06:13,139 --> 00:06:18,669
talk about our approach to trying to

00:06:16,330 --> 00:06:21,130
change this how we think is a viable way

00:06:18,669 --> 00:06:23,860
to do it and then I'm a great fan of

00:06:21,130 --> 00:06:25,990
proof by example so we have here this

00:06:23,860 --> 00:06:27,970
Commodore 64 so already said about some

00:06:25,990 --> 00:06:29,199
of the interesting features it has what

00:06:27,970 --> 00:06:30,370
I hadn't previously mentioned but you

00:06:29,199 --> 00:06:32,919
would have seen if you watched the

00:06:30,370 --> 00:06:36,909
teaser video I mean so this is a 4g

00:06:32,919 --> 00:06:39,130
commodore 64 and we'll get to that in

00:06:36,909 --> 00:06:40,360
due course so those of you who have a

00:06:39,130 --> 00:06:41,530
local SIM card or are willing to pay

00:06:40,360 --> 00:06:43,900
international calling rates they call a

00:06:41,530 --> 00:06:45,250
Commodore 64 you can get ready to do

00:06:43,900 --> 00:06:47,199
that bear in mind that your phone number

00:06:45,250 --> 00:06:49,030
will appear on the screen when you call

00:06:47,199 --> 00:06:50,979
so you boys

00:06:49,030 --> 00:06:55,389
yes borrow somebody else's phone to do

00:06:50,979 --> 00:06:56,620
it yes well the way you think someone

00:06:55,389 --> 00:07:00,430
tried the VoIP yesterday and it wouldn't

00:06:56,620 --> 00:07:04,360
call okay

00:07:00,430 --> 00:07:06,610
I'll trust you right so we'll go through

00:07:04,360 --> 00:07:08,560
the demo and then really know of course

00:07:06,610 --> 00:07:10,300
open source project so if anyone is

00:07:08,560 --> 00:07:11,949
interested in being involved in this

00:07:10,300 --> 00:07:14,860
whole space not necessarily about making

00:07:11,949 --> 00:07:17,410
a mobile Commodore 64 we're happy to do

00:07:14,860 --> 00:07:19,360
that but really about making the

00:07:17,410 --> 00:07:21,729
framework to make it very easy for

00:07:19,360 --> 00:07:26,949
people to innovate in this mobile space

00:07:21,729 --> 00:07:28,930
but without further ado so why on earth

00:07:26,949 --> 00:07:31,479
are mobile phones so hard to make on an

00:07:28,930 --> 00:07:33,610
open-source basis the first point is of

00:07:31,479 --> 00:07:35,590
course actually the need for NDA is to

00:07:33,610 --> 00:07:38,470
get access to the documentation for the

00:07:35,590 --> 00:07:40,690
modern chip says that it is practically

00:07:38,470 --> 00:07:41,650
impossible I would say and I'm happy to

00:07:40,690 --> 00:07:43,330
hear from if there are any mobile

00:07:41,650 --> 00:07:45,220
chipset vendors here who are happy to

00:07:43,330 --> 00:07:46,570
provide chipsets with complete

00:07:45,220 --> 00:07:47,949
documentation so that we can make

00:07:46,570 --> 00:07:50,199
something completely open from the

00:07:47,949 --> 00:07:51,970
ground up with no binary blobs I would

00:07:50,199 --> 00:07:53,620
be delighted to hear from you I am

00:07:51,970 --> 00:07:55,240
however much more likely to get run over

00:07:53,620 --> 00:07:57,789
by a unicorn running through from that

00:07:55,240 --> 00:08:04,120
door to that door at precisely 453 this

00:07:57,789 --> 00:08:07,570
afternoon yes that's right and won't be

00:08:04,120 --> 00:08:09,160
covered for us exactly and so this is

00:08:07,570 --> 00:08:10,419
the first problem and that they she

00:08:09,160 --> 00:08:12,699
didn't feed into the second problem even

00:08:10,419 --> 00:08:14,620
if you had the documentation it's a huge

00:08:12,699 --> 00:08:16,150
effort to actually pull this stuff up

00:08:14,620 --> 00:08:17,770
from the ground and if you don't have

00:08:16,150 --> 00:08:19,570
the documentation then you get to have

00:08:17,770 --> 00:08:20,680
that whole wonderful you know whodunit

00:08:19,570 --> 00:08:23,080
kind of game which is called reverse

00:08:20,680 --> 00:08:25,449
engineering to try and work out how on

00:08:23,080 --> 00:08:28,449
earth you can actually do this the next

00:08:25,449 --> 00:08:32,020
point is that miniaturization of course

00:08:28,449 --> 00:08:33,700
is also just really expensive to do and

00:08:32,020 --> 00:08:36,610
then you end up being obsolete before

00:08:33,700 --> 00:08:38,320
you begin and then you know doing large

00:08:36,610 --> 00:08:39,940
production runs of hardware is expensive

00:08:38,320 --> 00:08:43,180
and so we can sort of dive into those in

00:08:39,940 --> 00:08:45,220
a little more detail this one I think

00:08:43,180 --> 00:08:47,350
would probably actually already covered

00:08:45,220 --> 00:08:48,670
except for the comment here about you

00:08:47,350 --> 00:08:50,380
know we often get stuck with obsolete

00:08:48,670 --> 00:08:52,120
chips that we have got the documentation

00:08:50,380 --> 00:08:53,770
through some horrible accident that

00:08:52,120 --> 00:08:56,680
involved the vendor some time ago before

00:08:53,770 --> 00:08:58,360
they realized arthrosis 9k being a great

00:08:56,680 --> 00:09:00,400
example of this in the Wi-Fi space right

00:08:58,360 --> 00:09:02,500
you know the civil mesh extenders that

00:09:00,400 --> 00:09:06,130
we make we're using the Arthur Ross 9k

00:09:02,500 --> 00:09:08,230
despite it being 2004 vintage chipset

00:09:06,130 --> 00:09:10,779
something like that I reckon they are

00:09:08,230 --> 00:09:13,960
positively ancient but you can do ad hoc

00:09:10,779 --> 00:09:15,670
Wi-Fi on them and so we keep using them

00:09:13,960 --> 00:09:18,460
the reverse engineering we said is is

00:09:15,670 --> 00:09:20,710
hard and then like with the earth 9k

00:09:18,460 --> 00:09:21,790
chips I'm terrified in one sense for the

00:09:20,710 --> 00:09:23,470
day when they stop being available

00:09:21,790 --> 00:09:25,390
fortunately they're so obnoxiously cheap

00:09:23,470 --> 00:09:27,700
that everyone keeps using them and they

00:09:25,390 --> 00:09:29,200
remain in production but I would love

00:09:27,700 --> 00:09:30,459
and Athlon Kay with two serial ports

00:09:29,200 --> 00:09:31,330
instead of one but there's no hope of

00:09:30,459 --> 00:09:33,250
that because no one's going to read you

00:09:31,330 --> 00:09:36,940
the silicon because then we won't get

00:09:33,250 --> 00:09:39,160
the documentation so as we said you get

00:09:36,940 --> 00:09:40,959
the chipset you go yay let's now try and

00:09:39,160 --> 00:09:44,350
adapt a reference hardware designed as

00:09:40,959 --> 00:09:46,870
the minimum effort path to having a open

00:09:44,350 --> 00:09:47,890
source mobile phone and the fair phone

00:09:46,870 --> 00:09:50,290
is actually probably a pretty good

00:09:47,890 --> 00:09:53,620
example of that and if you talk to those

00:09:50,290 --> 00:09:56,649
guys they're fantastic but they are flat

00:09:53,620 --> 00:09:58,089
out trying to maintain the you know the

00:09:56,649 --> 00:10:00,130
port of Android to the phone and to have

00:09:58,089 --> 00:10:03,459
the open source more open source version

00:10:00,130 --> 00:10:05,860
than the the googly one and both are

00:10:03,459 --> 00:10:09,610
important and it's just you know this is

00:10:05,860 --> 00:10:11,290
insane that it's impossible to kind of

00:10:09,610 --> 00:10:13,600
you know for someone to decide that they

00:10:11,290 --> 00:10:15,100
just want to make a custom phone to meet

00:10:13,600 --> 00:10:17,589
a particular need I mean how many were

00:10:15,100 --> 00:10:19,570
here for the keynote this morning yep

00:10:17,589 --> 00:10:21,550
heaps of you so this whole idea of doing

00:10:19,570 --> 00:10:23,830
open source medical device innovation

00:10:21,550 --> 00:10:26,410
what if you wanted to make an

00:10:23,830 --> 00:10:27,760
open-source mobile phone that you know

00:10:26,410 --> 00:10:29,650
in that particular case might implement

00:10:27,760 --> 00:10:30,430
the open pancreas thing so you gotta

00:10:29,650 --> 00:10:31,600
kind of duel there's hardware

00:10:30,430 --> 00:10:32,950
integrations and then you only got one

00:10:31,600 --> 00:10:36,209
device and sever two that would be great

00:10:32,950 --> 00:10:38,290
but it's too much work for someone to do

00:10:36,209 --> 00:10:39,610
and we'll talk about this a little bit

00:10:38,290 --> 00:10:41,560
more down the track what about if you

00:10:39,610 --> 00:10:44,620
had someone who had you know who wanted

00:10:41,560 --> 00:10:46,300
a Braille screen on a phone or who had

00:10:44,620 --> 00:10:47,470
cerebral palsy and of course you know

00:10:46,300 --> 00:10:50,050
Sarah will pulls you in a number of

00:10:47,470 --> 00:10:52,330
other of these conditions manifest in

00:10:50,050 --> 00:10:53,650
different ways for different people you

00:10:52,330 --> 00:10:56,260
know some people might actually be able

00:10:53,650 --> 00:10:58,450
to use a joystick like this really well

00:10:56,260 --> 00:11:00,040
so I like a phone with a joystick or the

00:10:58,450 --> 00:11:01,959
arcade buttons can be quite Cordura they

00:11:00,040 --> 00:11:04,779
might need something that is you know

00:11:01,959 --> 00:11:05,980
quite different tactile interaction

00:11:04,779 --> 00:11:07,209
means and at the moment it's just it's

00:11:05,980 --> 00:11:11,500
impossible to actually try and make

00:11:07,209 --> 00:11:15,160
these things and then we've got this

00:11:11,500 --> 00:11:17,890
issue of you know even if we managed one

00:11:15,160 --> 00:11:20,350
project to work in this space we can't

00:11:17,890 --> 00:11:21,820
have the simultaneous exploration of

00:11:20,350 --> 00:11:23,680
different ideas and different concepts

00:11:21,820 --> 00:11:26,020
and different hardware because it's

00:11:23,680 --> 00:11:28,630
simply too much effort and we can't get

00:11:26,020 --> 00:11:33,140
enough people to do it

00:11:28,630 --> 00:11:34,970
yes little box big price in one sense

00:11:33,140 --> 00:11:36,800
it's actually not that much to say here

00:11:34,970 --> 00:11:38,840
the smaller you want to make something

00:11:36,800 --> 00:11:40,220
the higher your you know your

00:11:38,840 --> 00:11:42,440
non-returnable engineering costs will be

00:11:40,220 --> 00:11:45,460
the higher a unit costs will be it's

00:11:42,440 --> 00:11:49,430
just expensive to make teeny tiny things

00:11:45,460 --> 00:11:50,780
and so again we're talking about a small

00:11:49,430 --> 00:11:54,130
community project it's just not feasible

00:11:50,780 --> 00:11:56,930
to make mobile phone sized mobile phones

00:11:54,130 --> 00:11:58,370
because we just don't have the cash to

00:11:56,930 --> 00:12:02,000
do it even if we had the time and effort

00:11:58,370 --> 00:12:03,230
for the most part and then of course you

00:12:02,000 --> 00:12:04,850
know whatever chips that you've chosen

00:12:03,230 --> 00:12:06,410
and managed to integrate and make small

00:12:04,850 --> 00:12:10,040
and make cheap assuming that you could

00:12:06,410 --> 00:12:12,920
overcome all of these things you won't

00:12:10,040 --> 00:12:16,040
have to do it every 12 months in all

00:12:12,920 --> 00:12:16,970
likelihood to keep up to date and so you

00:12:16,040 --> 00:12:18,320
know we need to preserve we're running

00:12:16,970 --> 00:12:20,090
through every day at 4:53 in the

00:12:18,320 --> 00:12:21,800
afternoon to have any chance of keeping

00:12:20,090 --> 00:12:23,450
up with it it's just not going to happen

00:12:21,800 --> 00:12:25,540
and then of course you have to remain

00:12:23,450 --> 00:12:28,490
tain everything that you had before you

00:12:25,540 --> 00:12:30,890
and so again if you manage to solve all

00:12:28,490 --> 00:12:32,480
those issues you know an individual unit

00:12:30,890 --> 00:12:33,650
if you make one will cost a fortune and

00:12:32,480 --> 00:12:35,510
the only other option is to make a pile

00:12:33,650 --> 00:12:36,650
to bring the price per unit down but

00:12:35,510 --> 00:12:40,430
then you're still left needing a huge

00:12:36,650 --> 00:12:42,350
mountain of cash to do anything and so

00:12:40,430 --> 00:12:46,510
this is some of the problems that we try

00:12:42,350 --> 00:12:48,710
to solve so let's then talk about how

00:12:46,510 --> 00:12:49,970
dangerously untrustable smartphones are

00:12:48,710 --> 00:12:52,990
and why we actually still think that

00:12:49,970 --> 00:12:56,950
this needs to happen in some kind of way

00:12:52,990 --> 00:13:00,050
so there have been plenty of backdoors

00:12:56,950 --> 00:13:01,970
you know or at least scares of backdoors

00:13:00,050 --> 00:13:05,000
for phones and remember we're in the era

00:13:01,970 --> 00:13:07,430
of magic we can't tell necessarily

00:13:05,000 --> 00:13:09,710
whether any particular threat is

00:13:07,430 --> 00:13:10,850
actually kind of real like you know we

00:13:09,710 --> 00:13:12,860
listen to Matthew and you know this

00:13:10,850 --> 00:13:14,630
folks asking him questions about are the

00:13:12,860 --> 00:13:16,640
better vendors or worse vendors which is

00:13:14,630 --> 00:13:18,710
actually saying really in between the

00:13:16,640 --> 00:13:20,360
lines is I have no idea whether my

00:13:18,710 --> 00:13:22,640
computer is safe and I have no idea to

00:13:20,360 --> 00:13:25,130
tell whether a particular computer from

00:13:22,640 --> 00:13:27,260
a particular vendor is safe and the

00:13:25,130 --> 00:13:30,140
Galaxy S to backdoor scare was a good

00:13:27,260 --> 00:13:32,120
example of that in retrospect now nearly

00:13:30,140 --> 00:13:32,570
10 years later it probably wasn't that

00:13:32,120 --> 00:13:34,070
bad

00:13:32,570 --> 00:13:38,150
it could do some stuff but probably not

00:13:34,070 --> 00:13:39,290
everything but it took years for a few

00:13:38,150 --> 00:13:40,910
different teams of researchers to

00:13:39,290 --> 00:13:43,280
actually piece that together in

00:13:40,910 --> 00:13:46,150
- you know change that whole you know

00:13:43,280 --> 00:13:50,240
15,000 word summary - mostly harmless

00:13:46,150 --> 00:13:53,780
and we just don't have the resources to

00:13:50,240 --> 00:13:55,810
do that and so this really you know we

00:13:53,780 --> 00:14:00,320
generalized that out how can you verify

00:13:55,810 --> 00:14:05,720
anything about your modern system and I

00:14:00,320 --> 00:14:07,580
see no go back so you know we look at

00:14:05,720 --> 00:14:09,140
modern CPUs with billions of transistors

00:14:07,580 --> 00:14:10,970
and operating systems and everything

00:14:09,140 --> 00:14:12,230
with no billions of lines of COBOL time

00:14:10,970 --> 00:14:15,410
you factor in all the main applications

00:14:12,230 --> 00:14:17,570
you're running what chance do we have of

00:14:15,410 --> 00:14:21,140
actually verifying that and if we think

00:14:17,570 --> 00:14:22,940
about milk down inspector so AMD and

00:14:21,140 --> 00:14:26,390
Intel CPUs were both vulnerable to this

00:14:22,940 --> 00:14:28,760
for approximately twenty years before

00:14:26,390 --> 00:14:31,580
the problems were really picked up you

00:14:28,760 --> 00:14:33,770
know in the last 12 to 18 months think

00:14:31,580 --> 00:14:37,700
about how many hardware design

00:14:33,770 --> 00:14:41,570
verification engineers until an AMD must

00:14:37,700 --> 00:14:45,350
have how many you know verification

00:14:41,570 --> 00:14:47,780
engineer millennia went into those chips

00:14:45,350 --> 00:14:49,040
and still let these things through now

00:14:47,780 --> 00:14:50,600
might actually be that they kind of

00:14:49,040 --> 00:14:53,120
raised flags and the marketing people

00:14:50,600 --> 00:14:55,130
who stopped them from stopping it but

00:14:53,120 --> 00:14:56,180
that actually also speaks to the problem

00:14:55,130 --> 00:14:57,470
right that these things are going to

00:14:56,180 --> 00:15:00,860
continue to happen even if we could

00:14:57,470 --> 00:15:02,570
verify them and so you know it's just

00:15:00,860 --> 00:15:06,230
not possible to verify modern devices

00:15:02,570 --> 00:15:11,120
and then we have the joy that is binary

00:15:06,230 --> 00:15:14,300
blobs oh how I love the binary blob once

00:15:11,120 --> 00:15:16,100
for all never updated you know the bugs

00:15:14,300 --> 00:15:18,230
Mike Dean so they can be discovered by

00:15:16,100 --> 00:15:21,410
archaeologists in you know 4000 years

00:15:18,230 --> 00:15:23,270
time in the future and generally

00:15:21,410 --> 00:15:25,610
undermining the sovereignty over our own

00:15:23,270 --> 00:15:27,290
devices do you own the device that you

00:15:25,610 --> 00:15:28,760
think well you're in the device that you

00:15:27,290 --> 00:15:30,380
paid for let's put it that way right

00:15:28,760 --> 00:15:33,920
you've paid for it you have physical

00:15:30,380 --> 00:15:36,560
custody of it but do you actually own

00:15:33,920 --> 00:15:38,990
the device well how many other people

00:15:36,560 --> 00:15:42,140
are in the device even if you might

00:15:38,990 --> 00:15:43,400
cohabit the device with them we just be

00:15:42,140 --> 00:15:45,410
nice to intercept if you could backups

00:15:43,400 --> 00:15:49,210
for us

00:15:45,410 --> 00:15:54,430
and so this really is the central theme

00:15:49,210 --> 00:15:54,430
and I have an extra-inning there don't I

00:15:56,830 --> 00:16:02,540
okay I can use a joystick too and now

00:16:01,310 --> 00:16:04,250
you get to see there's a fun bug in this

00:16:02,540 --> 00:16:09,140
it'll like mush up a couple of letters

00:16:04,250 --> 00:16:10,310
when I go back up we have seams found

00:16:09,140 --> 00:16:16,760
and fixed the bug so I should actually

00:16:10,310 --> 00:16:21,650
say that this this presentation software

00:16:16,760 --> 00:16:25,880
was written by myself and a student in a

00:16:21,650 --> 00:16:28,940
semester radically simpler than trying

00:16:25,880 --> 00:16:30,529
to you know to make modern complicated

00:16:28,940 --> 00:16:33,670
software again I think it will come back

00:16:30,529 --> 00:16:38,589
to it so how do we get back to being

00:16:33,670 --> 00:16:40,970
sovereign over our own devices and then

00:16:38,589 --> 00:16:44,300
we have this whole problem of over

00:16:40,970 --> 00:16:46,640
integration where and I love this the

00:16:44,300 --> 00:16:49,010
microphone on a mobile phone is directly

00:16:46,640 --> 00:16:50,690
connected to the cellular modem chip

00:16:49,010 --> 00:16:52,070
which is directly connected to the

00:16:50,690 --> 00:16:55,160
lawful intercept module of a cellular

00:16:52,070 --> 00:16:59,420
network or the unlawful intercept module

00:16:55,160 --> 00:17:03,440
or the nearest stingray this is shall we

00:16:59,420 --> 00:17:04,880
say unhelpful and then just to add to

00:17:03,440 --> 00:17:07,189
the fun it's not just that it could be

00:17:04,880 --> 00:17:09,050
listening into your microphone it

00:17:07,189 --> 00:17:10,670
typically will have complete DMA access

00:17:09,050 --> 00:17:11,900
over the main memory because this is

00:17:10,670 --> 00:17:13,250
actually a cheaper way to make a mobile

00:17:11,900 --> 00:17:15,079
chipset right you have multiple cores

00:17:13,250 --> 00:17:17,000
sharing a bus and some memory and you

00:17:15,079 --> 00:17:19,459
say to the cellular modem ok good little

00:17:17,000 --> 00:17:21,170
cellular modem I only use that memory

00:17:19,459 --> 00:17:22,490
over there and this DMA transfer area

00:17:21,170 --> 00:17:24,140
that we have agreed will exchange

00:17:22,490 --> 00:17:25,610
high-speed to cellular data so we can

00:17:24,140 --> 00:17:28,030
get really fast internet on our device

00:17:25,610 --> 00:17:30,950
without having to have two chips

00:17:28,030 --> 00:17:35,240
marvelous idea if security is not what

00:17:30,950 --> 00:17:37,490
you're trying to do and so you might be

00:17:35,240 --> 00:17:39,110
thinking hold on a moment this is a

00:17:37,490 --> 00:17:40,400
crazy man giving a presentation from an

00:17:39,110 --> 00:17:42,530
8-bit computer holding a joystick the

00:17:40,400 --> 00:17:44,570
size of a small planet why should I

00:17:42,530 --> 00:17:47,420
trust anything that he has to say about

00:17:44,570 --> 00:17:50,150
modern computing and my response to that

00:17:47,420 --> 00:17:51,710
simply is proved to me beyond reasonable

00:17:50,150 --> 00:17:56,030
doubt that would hold up in a court of

00:17:51,710 --> 00:17:58,640
law that this is untrue and you can't

00:17:56,030 --> 00:18:02,380
write and this is again the heart of

00:17:58,640 --> 00:18:05,270
problem things are now so complex and so

00:18:02,380 --> 00:18:08,840
impossible to dive into an examine that

00:18:05,270 --> 00:18:10,820
we cannot tell what is going on and

00:18:08,840 --> 00:18:12,620
hence my resorting to blinking red text

00:18:10,820 --> 00:18:15,260
at the end hardware support for blinking

00:18:12,620 --> 00:18:19,400
text by the way on the AP computer hence

00:18:15,260 --> 00:18:21,080
my perhaps unwise use of it but you have

00:18:19,400 --> 00:18:23,210
you know if you think that you can

00:18:21,080 --> 00:18:25,820
actually do encrypted calls and text on

00:18:23,210 --> 00:18:29,360
a phone today and that it is actually

00:18:25,820 --> 00:18:31,520
secure against any reasonable attacker I

00:18:29,360 --> 00:18:33,610
would argue that that is a delusion that

00:18:31,520 --> 00:18:37,100
needs to be dispelled

00:18:33,610 --> 00:18:39,650
because in all probability or in all

00:18:37,100 --> 00:18:42,020
possibility at least the cellular

00:18:39,650 --> 00:18:44,780
network can remotely tell your cellular

00:18:42,020 --> 00:18:46,730
modem firmware to update to a new

00:18:44,780 --> 00:18:50,180
special upgrade supplied courtesy of

00:18:46,730 --> 00:18:52,100
wherever that will change the behavior

00:18:50,180 --> 00:18:53,690
of the phone and you know again the

00:18:52,100 --> 00:18:55,730
microphone is on the cellular modem

00:18:53,690 --> 00:18:58,580
remember not on the application

00:18:55,730 --> 00:19:00,530
processor it the application process has

00:18:58,580 --> 00:19:04,190
to ask the cellular modem nicely to have

00:19:00,530 --> 00:19:06,680
access to the microphone sure I'll just

00:19:04,190 --> 00:19:08,480
let mr. Putin hold the you know the lead

00:19:06,680 --> 00:19:10,550
to the microphone while I'm you know

00:19:08,480 --> 00:19:13,160
talking to someone about something that

00:19:10,550 --> 00:19:17,420
I don't want em to hear unwise shall we

00:19:13,160 --> 00:19:21,040
say and we've talked a little bit about

00:19:17,420 --> 00:19:23,990
this already but this combination of

00:19:21,040 --> 00:19:25,310
over integration and the potential for

00:19:23,990 --> 00:19:27,290
unlawful intercept whether that's

00:19:25,310 --> 00:19:29,450
through stingrays or oppressive regime

00:19:27,290 --> 00:19:33,590
here as a whole it's just yeah it is bad

00:19:29,450 --> 00:19:35,780
bad bad and again when you think about

00:19:33,590 --> 00:19:37,460
the DMA access to all of memory that

00:19:35,780 --> 00:19:38,480
means that they even if a lawful

00:19:37,460 --> 00:19:40,040
intercept says that they're allowed to

00:19:38,480 --> 00:19:41,930
get your metadata your phone calls your

00:19:40,040 --> 00:19:44,210
text messages because it's probably

00:19:41,930 --> 00:19:47,090
actually what the law provides for

00:19:44,210 --> 00:19:48,470
without special provision in reality HT

00:19:47,090 --> 00:19:50,210
they can get to access all the data

00:19:48,470 --> 00:19:51,470
everything that's on your SD card and

00:19:50,210 --> 00:19:55,100
everything that's in your phone because

00:19:51,470 --> 00:19:59,540
you can own the application processor so

00:19:55,100 --> 00:20:01,370
again this is quite bad and again a

00:19:59,540 --> 00:20:02,390
theme that we've touched on already and

00:20:01,370 --> 00:20:04,280
we'll keep coming back to the

00:20:02,390 --> 00:20:06,710
incomprehensible complexity of modern

00:20:04,280 --> 00:20:09,920
devices means it is impossible to make

00:20:06,710 --> 00:20:12,430
any sensible statements in support of

00:20:09,920 --> 00:20:16,070
the security of modern devices

00:20:12,430 --> 00:20:18,410
so we argue in fact then that the only

00:20:16,070 --> 00:20:20,330
way to fix this is that we need to cut

00:20:18,410 --> 00:20:22,910
the complexity of device if you want to

00:20:20,330 --> 00:20:25,880
have a secure device we simply must

00:20:22,910 --> 00:20:29,180
reduce the complexity we need to take

00:20:25,880 --> 00:20:30,320
out all that which is unnecessary and we

00:20:29,180 --> 00:20:32,150
don't need to trim just one or two

00:20:30,320 --> 00:20:34,040
orders of magnitude off because a

00:20:32,150 --> 00:20:36,110
billion lines of code even if we chop

00:20:34,040 --> 00:20:37,760
you know as you're off the end it still

00:20:36,110 --> 00:20:39,650
100 million lines of code to look at

00:20:37,760 --> 00:20:41,690
it's gonna take me quite a while even if

00:20:39,650 --> 00:20:44,180
we chop another zero off and say ok now

00:20:41,690 --> 00:20:46,430
it's only ten million lines of code this

00:20:44,180 --> 00:20:49,250
is really not feasible it needs to be

00:20:46,430 --> 00:20:52,640
probably no more than tens of thousands

00:20:49,250 --> 00:20:55,160
of lines of code I would argue for a

00:20:52,640 --> 00:20:57,950
single person or a small team to have a

00:20:55,160 --> 00:21:00,580
fighting chance and not even a certain

00:20:57,950 --> 00:21:03,410
possibility with a fighting chance of

00:21:00,580 --> 00:21:06,170
verifying what is going on in their

00:21:03,410 --> 00:21:08,450
hardware but of course we need that

00:21:06,170 --> 00:21:11,180
architecture still needs to be useful in

00:21:08,450 --> 00:21:12,260
some way right because otherwise again

00:21:11,180 --> 00:21:14,210
as Mathew is saying right here this

00:21:12,260 --> 00:21:16,310
Platonic ideal of a computer that you go

00:21:14,210 --> 00:21:20,660
yes it is a computer it is secure but it

00:21:16,310 --> 00:21:23,480
does no computation for you so how we

00:21:20,660 --> 00:21:24,590
then trying to attack this so again

00:21:23,480 --> 00:21:26,780
we'll go through these in a bit more

00:21:24,590 --> 00:21:30,860
detail but a bit of Road mapping the key

00:21:26,780 --> 00:21:33,380
is to deal with the complexity first we

00:21:30,860 --> 00:21:35,420
know that this approach and low if it is

00:21:33,380 --> 00:21:37,900
never going to keep pace with the march

00:21:35,420 --> 00:21:40,610
of technology so let's simply embrace

00:21:37,900 --> 00:21:43,580
obsolescence and where it you know with

00:21:40,610 --> 00:21:44,990
pride and let's embrace macro fication

00:21:43,580 --> 00:21:48,260
it's possibly a word that I made up and

00:21:44,990 --> 00:21:50,000
I wrote this slide rather than trying to

00:21:48,260 --> 00:21:52,690
make everything smaller at least she

00:21:50,000 --> 00:21:55,790
just embrace what is a reasonable size

00:21:52,690 --> 00:21:58,160
that is still portable and usable as a

00:21:55,790 --> 00:22:00,650
mobile device but it's actually not

00:21:58,160 --> 00:22:02,870
going to greatly increase the cost of

00:22:00,650 --> 00:22:04,190
what we're trying to do and then of

00:22:02,870 --> 00:22:05,420
course all the naughty untrusted bits in

00:22:04,190 --> 00:22:06,950
particular cellular modem we should

00:22:05,420 --> 00:22:10,340
quarantine and having a naughty little

00:22:06,950 --> 00:22:11,900
sandpit corner as best as we can and

00:22:10,340 --> 00:22:13,280
then on the basis that we don't own any

00:22:11,900 --> 00:22:14,990
chip fabs which is a bit sad well I

00:22:13,280 --> 00:22:17,120
think this it someone was telling me

00:22:14,990 --> 00:22:20,870
there's an open-source fab now that's

00:22:17,120 --> 00:22:22,100
got five micron which is actually the

00:22:20,870 --> 00:22:24,950
same as what was made for the Commodore

00:22:22,100 --> 00:22:26,029
64 was four and five micron so we we

00:22:24,950 --> 00:22:27,229
should in fact be at the

00:22:26,029 --> 00:22:31,210
point where we could actually make an

00:22:27,229 --> 00:22:34,399
8-bit class machine with fully open fab

00:22:31,210 --> 00:22:37,369
there is hope but at the end of all of

00:22:34,399 --> 00:22:40,129
this it has to be fun otherwise no one

00:22:37,369 --> 00:22:42,649
will do it so let's have a look at them

00:22:40,129 --> 00:22:44,239
to reducing the complexity let's just

00:22:42,649 --> 00:22:46,669
carve all of the cellular modem

00:22:44,239 --> 00:22:49,070
complexity out and say too hard for us

00:22:46,669 --> 00:22:52,219
to do we were simply treated as a

00:22:49,070 --> 00:22:54,859
completely untrustable naughty component

00:22:52,219 --> 00:22:56,570
we will give it power when we want it to

00:22:54,859 --> 00:22:58,580
do things we will deprive it of power

00:22:56,570 --> 00:23:00,499
the rest of the time and we will not

00:22:58,580 --> 00:23:03,979
give it any kind of access to the main

00:23:00,499 --> 00:23:05,989
application processor fortunately there

00:23:03,979 --> 00:23:07,159
are these mini PCIe form factor modules

00:23:05,989 --> 00:23:08,479
so they like the vending machines

00:23:07,159 --> 00:23:10,609
outside for the drinks have probably got

00:23:08,479 --> 00:23:12,049
one in turn the industry standard it's

00:23:10,609 --> 00:23:13,549
been a standard for nearly a decade and

00:23:12,049 --> 00:23:15,679
will hopefully continue to be a standard

00:23:13,549 --> 00:23:18,559
for time to come you can really get them

00:23:15,679 --> 00:23:20,450
4G 5g will come out at some point so we

00:23:18,559 --> 00:23:22,129
can just do a socket upgrade of any

00:23:20,450 --> 00:23:25,940
device that we make and go look haha its

00:23:22,129 --> 00:23:28,969
5g now and the interfaces are super

00:23:25,940 --> 00:23:31,009
simple we have normal you are one one

00:23:28,969 --> 00:23:34,669
five two hundred bits per second 80

00:23:31,009 --> 00:23:37,099
commands and so we can do a TD T and a

00:23:34,669 --> 00:23:39,529
phone number and it will dial and this

00:23:37,099 --> 00:23:41,629
is much easier interface to secure and

00:23:39,529 --> 00:23:43,249
much harder for the cellular network to

00:23:41,629 --> 00:23:45,559
try and give us malformed responses to

00:23:43,249 --> 00:23:48,289
80 commands to try and route keep the

00:23:45,559 --> 00:23:50,659
phone right I'm not going to say that it

00:23:48,289 --> 00:23:53,119
would be impossible but you're gonna

00:23:50,659 --> 00:23:56,450
have a much much harder job doing that

00:23:53,119 --> 00:23:58,489
and again just modularizing means that

00:23:56,450 --> 00:24:00,769
we can swap components out as we go

00:23:58,489 --> 00:24:07,609
along to really reduce the effort

00:24:00,769 --> 00:24:10,460
required to do things right so what do I

00:24:07,609 --> 00:24:12,619
mean by embracing obsolescence we know

00:24:10,460 --> 00:24:13,940
that an android like operating system is

00:24:12,619 --> 00:24:15,799
so insanely complicated that just

00:24:13,940 --> 00:24:16,969
keeping it up to date has actually

00:24:15,799 --> 00:24:19,849
become practically impossible

00:24:16,969 --> 00:24:22,129
so let's unashamedly choose something

00:24:19,849 --> 00:24:23,929
which is already obsolete

00:24:22,129 --> 00:24:27,830
perhaps like this item I have here with

00:24:23,929 --> 00:24:29,469
me we can reduce the code size and the

00:24:27,830 --> 00:24:32,029
CPU complexity to the point where

00:24:29,469 --> 00:24:34,820
meaning it you can look at documentation

00:24:32,029 --> 00:24:36,499
for the Commodore 64 and you know small

00:24:34,820 --> 00:24:39,710
children learnt how to program on this

00:24:36,499 --> 00:24:41,299
the hardware interface is so simple that

00:24:39,710 --> 00:24:42,890
can be fully documented in a book that

00:24:41,299 --> 00:24:45,020
you can read in a bathtub over a few

00:24:42,890 --> 00:24:47,570
hours what you could do that of course

00:24:45,020 --> 00:24:49,399
is much more interesting but it is

00:24:47,570 --> 00:24:51,679
simple enough that you can verify and

00:24:49,399 --> 00:24:53,450
understand it in practice and if you

00:24:51,679 --> 00:24:55,970
need to verify your machine on a regular

00:24:53,450 --> 00:24:57,770
basis this is the only way to do it

00:24:55,970 --> 00:24:58,940
because even if you said Intel with all

00:24:57,770 --> 00:25:01,909
the king's horses and all the king's men

00:24:58,940 --> 00:25:03,260
could fully verify the cpu and someone

00:25:01,909 --> 00:25:05,240
could fully verify an operating system

00:25:03,260 --> 00:25:07,490
once off which is kind of what the

00:25:05,240 --> 00:25:09,440
military do and then get surprised when

00:25:07,490 --> 00:25:11,770
things get hacked down the track you

00:25:09,440 --> 00:25:14,240
need to be able to do on-demand

00:25:11,770 --> 00:25:15,590
verification so that you can have full

00:25:14,240 --> 00:25:16,640
digital sovereignty because I think that

00:25:15,590 --> 00:25:19,370
actually is what full digital

00:25:16,640 --> 00:25:21,860
sovereignty is the trade off and again

00:25:19,370 --> 00:25:25,510
clearly I was typing slides too late at

00:25:21,860 --> 00:25:28,640
night the trade of the trade off is

00:25:25,510 --> 00:25:30,289
somewhat reduced capabilities so the

00:25:28,640 --> 00:25:31,820
question is can we make something which

00:25:30,289 --> 00:25:35,299
is still going to be useful enough which

00:25:31,820 --> 00:25:37,659
we'll come back to so macro fication by

00:25:35,299 --> 00:25:42,110
this really I mean no naughty BGA's

00:25:37,659 --> 00:25:43,399
nowhere for thin PCBs it has to be stuff

00:25:42,110 --> 00:25:45,020
that you can just go right okay I'm

00:25:43,399 --> 00:25:47,600
going to you know use a typical online

00:25:45,020 --> 00:25:49,789
service get a four layer board made put

00:25:47,600 --> 00:25:51,679
an FPGA module in a socket so that

00:25:49,789 --> 00:25:53,840
someone else's dealt with the whole BGA

00:25:51,679 --> 00:25:56,090
thing cheap to iterate you can pull your

00:25:53,840 --> 00:25:57,529
FPGA board out replace the mainboard put

00:25:56,090 --> 00:26:00,559
more components on do whatever you want

00:25:57,529 --> 00:26:03,620
so suddenly you can now put the craziest

00:26:00,559 --> 00:26:05,840
Hardware in your phone whether that be a

00:26:03,620 --> 00:26:09,500
joystick port or otherwise and you can

00:26:05,840 --> 00:26:10,929
do this cheaply and easily this starts

00:26:09,500 --> 00:26:13,700
to get really interesting

00:26:10,929 --> 00:26:15,950
we've already for the most part talked

00:26:13,700 --> 00:26:18,649
about isolating the the naughty cellular

00:26:15,950 --> 00:26:19,909
modem why not having noise directly

00:26:18,649 --> 00:26:22,250
connected so this of course actually

00:26:19,909 --> 00:26:25,700
does allow you to have fully encrypted

00:26:22,250 --> 00:26:27,320
conversation if you do a data over gsm

00:26:25,700 --> 00:26:28,549
voice and they're a bunch of codecs

00:26:27,320 --> 00:26:29,899
around there some open source work on

00:26:28,549 --> 00:26:33,649
that as well you can't get enough

00:26:29,899 --> 00:26:35,000
bandwidth to run David Rose codec to so

00:26:33,649 --> 00:26:39,080
you could actually have a full voice

00:26:35,000 --> 00:26:42,140
codec over an analog yes I am a digital

00:26:39,080 --> 00:26:43,419
GSM voice circuit narrowband but

00:26:42,140 --> 00:26:45,500
actually be fully encrypted end-to-end

00:26:43,419 --> 00:26:47,029
in the phone that we make I'm going to

00:26:45,500 --> 00:26:48,289
put a hardware one-time pad so if you

00:26:47,029 --> 00:26:49,820
want to get really paranoid

00:26:48,289 --> 00:26:51,740
you can assure you have a one-time pad

00:26:49,820 --> 00:26:53,540
protected encrypted conversation over

00:26:51,740 --> 00:26:54,950
the cellular network and no one there

00:26:53,540 --> 00:26:57,410
in theory short of having physical

00:26:54,950 --> 00:26:59,950
access to other devices should have any

00:26:57,410 --> 00:27:02,600
decent chance of getting access to that

00:26:59,950 --> 00:27:04,490
and then we're also providing a paranoid

00:27:02,600 --> 00:27:06,200
mode which I can give a mild

00:27:04,490 --> 00:27:07,910
demonstration of here if I do this key

00:27:06,200 --> 00:27:11,180
combination this is what we called the

00:27:07,910 --> 00:27:14,210
matrix mode and so now I have full

00:27:11,180 --> 00:27:16,850
access to the CPU I can stop the CPU I

00:27:14,210 --> 00:27:18,980
can inspect memory I can do whatever I

00:27:16,850 --> 00:27:21,770
want and there is nothing the CPU

00:27:18,980 --> 00:27:24,380
running behind that can do to stop it

00:27:21,770 --> 00:27:25,550
the CPU is get you running behind we can

00:27:24,380 --> 00:27:29,030
do it a dimmer with a game or something

00:27:25,550 --> 00:27:33,590
and we can modify as we go along so we

00:27:29,030 --> 00:27:36,170
can add facilities that are somewhat

00:27:33,590 --> 00:27:38,030
unthinkable with an existing kind of

00:27:36,170 --> 00:27:40,400
device we could in fact actually add a

00:27:38,030 --> 00:27:42,950
high performance x86 arm or you know

00:27:40,400 --> 00:27:45,620
risk v or whatever processor to that and

00:27:42,950 --> 00:27:47,180
the trick is all of the things like the

00:27:45,620 --> 00:27:48,920
input and output devices you want on the

00:27:47,180 --> 00:27:50,450
8-bit computer that you can trust and

00:27:48,920 --> 00:27:51,860
then when you say oh well I'm happy to

00:27:50,450 --> 00:27:54,350
do something untrustworthy like use the

00:27:51,860 --> 00:27:56,900
web you can do that in a nice ARM

00:27:54,350 --> 00:27:58,670
processor or whatever as you wish and

00:27:56,900 --> 00:28:04,850
get that balance of usability and

00:27:58,670 --> 00:28:07,520
security I'm pretty much covered all of

00:28:04,850 --> 00:28:08,510
this really I think so you know we can

00:28:07,520 --> 00:28:10,130
implement all the kind of funny

00:28:08,510 --> 00:28:14,900
interfaces that you need on a phone so

00:28:10,130 --> 00:28:16,670
we've got somewhere in the bag the 800

00:28:14,900 --> 00:28:18,230
by 480 LCD screens we're going to use on

00:28:16,670 --> 00:28:19,790
the the prototype phone that's gonna be

00:28:18,230 --> 00:28:21,830
about the size of a 3ds XL

00:28:19,790 --> 00:28:23,000
and we got the touch interface we can do

00:28:21,830 --> 00:28:27,500
all of that funky stuff we can touch

00:28:23,000 --> 00:28:28,640
dial with the phone on that and so we're

00:28:27,500 --> 00:28:30,740
moving everything to hardware it's much

00:28:28,640 --> 00:28:33,650
harder to buffer overrun VHDL than it is

00:28:30,740 --> 00:28:38,060
see partly because it's much harder to

00:28:33,650 --> 00:28:40,250
write VHDL in the first place but such

00:28:38,060 --> 00:28:42,200
is life take the good with the bad and

00:28:40,250 --> 00:28:44,330
of course we can change it as we go

00:28:42,200 --> 00:28:46,940
along again we want permissionless easy

00:28:44,330 --> 00:28:49,550
barrier free innovation to mobile phones

00:28:46,940 --> 00:28:52,580
in a way that at the moment is otherwise

00:28:49,550 --> 00:28:56,180
impossible so let's get on to the fun

00:28:52,580 --> 00:28:58,550
bits then so the Mega 65 phone is our

00:28:56,180 --> 00:29:01,340
kind of proof by example that this kind

00:28:58,550 --> 00:29:04,190
of insanity is possible to do even if

00:29:01,340 --> 00:29:06,050
misguided so we're going to make as I

00:29:04,190 --> 00:29:07,309
say something about the size of a 3dsxl

00:29:06,050 --> 00:29:11,629
it'll be about 210

00:29:07,309 --> 00:29:13,129
meters wide about 110 millimeters high

00:29:11,629 --> 00:29:15,529
and about three three and a half

00:29:13,129 --> 00:29:17,529
centimeters thick backward compatible

00:29:15,529 --> 00:29:19,820
with the Commodore 64 and Commodore 65

00:29:17,529 --> 00:29:22,249
actually very important because you

00:29:19,820 --> 00:29:24,529
don't want to have a stillborn platform

00:29:22,249 --> 00:29:25,610
to which there is no software you want

00:29:24,529 --> 00:29:26,809
something to do when you're stuck on the

00:29:25,610 --> 00:29:28,970
train with the phone right so if you

00:29:26,809 --> 00:29:31,850
can't play impossible mission then you

00:29:28,970 --> 00:29:33,409
know where are you secure audio path

00:29:31,850 --> 00:29:34,970
we've talked about crazy hardware

00:29:33,409 --> 00:29:35,870
additions and again that bug is

00:29:34,970 --> 00:29:40,460
obviously hit miss let's write in a

00:29:35,870 --> 00:29:42,259
slide so we if we can make it but will

00:29:40,460 --> 00:29:45,830
it be practical will it be usable can it

00:29:42,259 --> 00:29:49,490
do anything useful whatsoever and now we

00:29:45,830 --> 00:29:52,399
have to load part two of the slides when

00:29:49,490 --> 00:29:53,659
it comes up hello I have to get out of

00:29:52,399 --> 00:29:56,600
presentation mode first before I get my

00:29:53,659 --> 00:29:58,549
cursor back open slide two for the

00:29:56,600 --> 00:29:59,600
course we only have limited memory to

00:29:58,549 --> 00:30:01,899
hold a certain number of slides in

00:29:59,600 --> 00:30:01,899
memory

00:30:03,270 --> 00:30:13,200
right back into presentation mode okay

00:30:06,630 --> 00:30:14,820
so five cool so we already have

00:30:13,200 --> 00:30:16,380
everything working on the bench as I say

00:30:14,820 --> 00:30:17,790
we can get it down to this kind of you

00:30:16,380 --> 00:30:20,220
know roughly the size of a Nintendo 3ds

00:30:17,790 --> 00:30:21,690
but a little bit thicker the PCB layout

00:30:20,220 --> 00:30:24,090
is very excitingly happening back at

00:30:21,690 --> 00:30:25,590
Flinders University as I speak we had

00:30:24,090 --> 00:30:26,880
enough student projects working on it

00:30:25,590 --> 00:30:28,320
that we've got enough engineering

00:30:26,880 --> 00:30:29,910
workshop time allocated to the project

00:30:28,320 --> 00:30:32,460
that we could ask them very nicely to

00:30:29,910 --> 00:30:36,780
make up the PCBs for this year's batch

00:30:32,460 --> 00:30:39,270
of students work on it and because you

00:30:36,780 --> 00:30:41,790
probably to demonstrate the the ease of

00:30:39,270 --> 00:30:43,710
innovation we're adding all manner of

00:30:41,790 --> 00:30:45,450
bizarre Hardware to it that suits my

00:30:43,710 --> 00:30:47,070
particular tastes but you can make

00:30:45,450 --> 00:30:50,700
hardware that suits your particular

00:30:47,070 --> 00:30:52,380
taste so in my case I you know my big

00:30:50,700 --> 00:30:53,820
fat heavy laptop is because I kind of go

00:30:52,380 --> 00:30:56,040
chomping in the jungles event allowed to

00:30:53,820 --> 00:30:57,780
doing disaster communications work so I

00:30:56,040 --> 00:30:59,550
want to phone it has a solar panel on it

00:30:57,780 --> 00:31:01,830
so that the phone will never go flat

00:30:59,550 --> 00:31:03,870
because as you know thanks to macro

00:31:01,830 --> 00:31:06,390
fication we can get two watts of

00:31:03,870 --> 00:31:09,450
high-performance solar cell courtesy of

00:31:06,390 --> 00:31:12,690
the Flinders University solar race

00:31:09,450 --> 00:31:15,030
vehicle supplies interesting the panel

00:31:12,690 --> 00:31:18,000
Tony about ten bucks so you can put that

00:31:15,030 --> 00:31:19,440
just book on the back we wanted to sound

00:31:18,000 --> 00:31:20,670
good when we are playing games or

00:31:19,440 --> 00:31:23,220
annoying people with Sid tunes on the

00:31:20,670 --> 00:31:24,450
train so we found a supplier of four

00:31:23,220 --> 00:31:27,390
centimeter to watts

00:31:24,450 --> 00:31:30,780
three millimeters thick speakers so this

00:31:27,390 --> 00:31:31,860
will sound really good I hate noise when

00:31:30,780 --> 00:31:33,330
I want to call so we're gonna put four

00:31:31,860 --> 00:31:36,330
microphones and do active noise

00:31:33,330 --> 00:31:37,230
cancellation in hardware so that it

00:31:36,330 --> 00:31:39,150
should actually be really good at

00:31:37,230 --> 00:31:43,350
rejecting background noise out from

00:31:39,150 --> 00:31:44,130
calls and I hate TVs on in cafes and

00:31:43,350 --> 00:31:45,600
things and you're trying to talk with

00:31:44,130 --> 00:31:47,250
people and you can't hear them and all

00:31:45,600 --> 00:31:49,110
you can see is strange things happening

00:31:47,250 --> 00:31:50,760
on in the background so we found a

00:31:49,110 --> 00:31:54,840
supplier of I think they're two hundred

00:31:50,760 --> 00:31:56,700
milli watt infrared LEDs so a TV in the

00:31:54,840 --> 00:31:59,520
far back of the theater should be

00:31:56,700 --> 00:32:01,350
totally doable and probably you could

00:31:59,520 --> 00:32:04,320
sit in one cafe and turn off a TV in a

00:32:01,350 --> 00:32:05,370
cafe on the other side of the street I'm

00:32:04,320 --> 00:32:09,179
looking forward to finding out the

00:32:05,370 --> 00:32:11,880
limits of range on that and finally any

00:32:09,179 --> 00:32:14,070
real value real volume knobs one for in

00:32:11,880 --> 00:32:17,070
call audio one for speakerphone audio

00:32:14,070 --> 00:32:20,279
and one for media so if anyone remember

00:32:17,070 --> 00:32:22,289
xkcd 1884 with the perils of setting the

00:32:20,279 --> 00:32:25,169
media volume output level on mobile

00:32:22,289 --> 00:32:26,490
phones that won't be a problem for us it

00:32:25,169 --> 00:32:28,980
all have a separate knob for it and

00:32:26,490 --> 00:32:31,889
it'll be great and the full prototyping

00:32:28,980 --> 00:32:33,570
costs well this is actually not counting

00:32:31,889 --> 00:32:36,149
the engineering time of the PCB layout

00:32:33,570 --> 00:32:38,759
but the the hardware is we're talking

00:32:36,149 --> 00:32:39,450
substantially under $1000 if PG a board

00:32:38,759 --> 00:32:41,159
the whole lot

00:32:39,450 --> 00:32:42,690
we're in 3d printer case and all that

00:32:41,159 --> 00:32:45,120
kind of funky stuff and we'll actually

00:32:42,690 --> 00:32:47,370
have something which is basically a

00:32:45,120 --> 00:32:51,330
working mobile phone that will you know

00:32:47,370 --> 00:32:53,100
do feature phone kind of things with no

00:32:51,330 --> 00:32:54,629
I think we've probably put about four

00:32:53,100 --> 00:32:55,679
person years in and of course a lot of

00:32:54,629 --> 00:32:57,000
that is actually making a Commodore 64

00:32:55,679 --> 00:33:00,059
compatible so we can play all the games

00:32:57,000 --> 00:33:02,519
that we want to so it's suddenly within

00:33:00,059 --> 00:33:03,960
the reach again it's in the keynote when

00:33:02,519 --> 00:33:05,460
they're talking about making the you

00:33:03,960 --> 00:33:08,220
know that the artificial the open

00:33:05,460 --> 00:33:10,590
artificial pancreas it was possible

00:33:08,220 --> 00:33:12,330
because the amount of effort required to

00:33:10,590 --> 00:33:14,039
do something useful and interesting had

00:33:12,330 --> 00:33:15,659
been reduced down to that which was

00:33:14,039 --> 00:33:19,440
possible by a hobby project and so we're

00:33:15,659 --> 00:33:20,909
trying to do that here okay so why on

00:33:19,440 --> 00:33:22,889
earth do we want to make something

00:33:20,909 --> 00:33:24,450
Commodore 64 and Commodore 65 compatible

00:33:22,889 --> 00:33:26,759
pressing we begin at the bottom of the

00:33:24,450 --> 00:33:29,220
list and work our way up from there

00:33:26,759 --> 00:33:31,470
it is of course just plain fun to have

00:33:29,220 --> 00:33:32,879
the world's fastest Commodore 64 in a

00:33:31,470 --> 00:33:36,059
portable form factor that can take and

00:33:32,879 --> 00:33:37,710
make phone calls but also as I said the

00:33:36,059 --> 00:33:39,480
fact that there are thousands of game

00:33:37,710 --> 00:33:42,480
titles and actually productivity

00:33:39,480 --> 00:33:44,190
software that was used seriously like in

00:33:42,480 --> 00:33:45,929
Germany in particular people were still

00:33:44,190 --> 00:33:48,330
running G us on Commodore 64's in the

00:33:45,929 --> 00:33:50,340
late 90s I know because I was selling

00:33:48,330 --> 00:33:52,919
them software to connect them to old pcs

00:33:50,340 --> 00:33:56,039
to use the hard drive in the PC to power

00:33:52,919 --> 00:33:57,690
their gos based Commodore 64's and that

00:33:56,039 --> 00:34:01,559
was preferable to them rather than

00:33:57,690 --> 00:34:03,769
actually running a PC and there's lots

00:34:01,559 --> 00:34:06,240
of people who know how to write software

00:34:03,769 --> 00:34:08,310
and everything for that and people know

00:34:06,240 --> 00:34:10,770
how to get good performance out of this

00:34:08,310 --> 00:34:13,800
simple machine so to my mind it kind of

00:34:10,770 --> 00:34:15,750
has all the right ingredients in there

00:34:13,800 --> 00:34:17,879
but also helped that because we're

00:34:15,750 --> 00:34:19,950
working on making the desktop version of

00:34:17,879 --> 00:34:22,859
the Mega 65 computer we've got a bunch

00:34:19,950 --> 00:34:24,119
of crazy guys who are helping us to to

00:34:22,859 --> 00:34:25,879
do a whole part of the work as well so

00:34:24,119 --> 00:34:30,340
it's just kind of there's a bunch of

00:34:25,879 --> 00:34:35,200
factors in there oh yes

00:34:30,340 --> 00:34:37,360
so the audio isolation so again because

00:34:35,200 --> 00:34:40,180
we can hmmm how shall I do the audio

00:34:37,360 --> 00:34:42,070
path so I implemented any FPGA fabric

00:34:40,180 --> 00:34:46,420
the the audio path to the cellular modem

00:34:42,070 --> 00:34:47,770
button okay that's all well and good but

00:34:46,420 --> 00:34:49,180
how do we kind of choose whether you're

00:34:47,770 --> 00:34:51,340
in call profile and all that kind of

00:34:49,180 --> 00:34:53,530
simpler Oh stuff it I'll make a sixteen

00:34:51,340 --> 00:34:55,780
input eight output full crossbar audio

00:34:53,530 --> 00:34:58,780
mixer in hardware this is quite cheap to

00:34:55,780 --> 00:35:00,190
do in an FPGA so we can do really weird

00:34:58,780 --> 00:35:02,140
things if you want to have a private

00:35:00,190 --> 00:35:04,900
conversation with someone you could plug

00:35:02,140 --> 00:35:06,070
in your headset and have a conversation

00:35:04,900 --> 00:35:07,240
with someone on the phone while

00:35:06,070 --> 00:35:09,100
simultaneously playing completely

00:35:07,240 --> 00:35:10,870
different audio you could be playing

00:35:09,100 --> 00:35:12,550
impossible mission or some other we

00:35:10,870 --> 00:35:14,260
support whatever you like actually

00:35:12,550 --> 00:35:16,750
playing a game while you're having a

00:35:14,260 --> 00:35:17,770
discrete conversation with someone and

00:35:16,750 --> 00:35:19,000
of course that's going to make it harder

00:35:17,770 --> 00:35:20,590
for anyone who is actually trying to

00:35:19,000 --> 00:35:21,970
listen in to you to pick it out because

00:35:20,590 --> 00:35:23,260
it's background noise that they can hear

00:35:21,970 --> 00:35:24,970
that you can't hear and all that kind of

00:35:23,260 --> 00:35:28,480
fun stuff anyway it sounded like a fun

00:35:24,970 --> 00:35:30,220
idea so we did it because we could which

00:35:28,480 --> 00:35:31,690
is the whole point right whereas at the

00:35:30,220 --> 00:35:33,220
moment with the traditional approach

00:35:31,690 --> 00:35:36,340
that's just not a possibility and as we

00:35:33,220 --> 00:35:42,010
say you know a few person years and not

00:35:36,340 --> 00:35:44,680
that much cost of hardware so can it be

00:35:42,010 --> 00:35:48,250
useful and he really is kind of this

00:35:44,680 --> 00:35:51,130
question of well define useful what do

00:35:48,250 --> 00:35:52,390
you want your device to do traditionally

00:35:51,130 --> 00:35:54,640
of course we're stuck with the devices

00:35:52,390 --> 00:35:55,750
that we can buy on the open market and

00:35:54,640 --> 00:35:57,970
they can do a lot of stuff because they

00:35:55,750 --> 00:35:59,890
want to sell to a lot of people but it

00:35:57,970 --> 00:36:01,390
might actually be that you know if what

00:35:59,890 --> 00:36:03,040
you mostly want to do is to play games

00:36:01,390 --> 00:36:04,930
on the train this would be a fantastic

00:36:03,040 --> 00:36:07,030
device and not have to carry a phone

00:36:04,930 --> 00:36:10,300
separately or if you're highly paranoid

00:36:07,030 --> 00:36:11,950
about the security of communications but

00:36:10,300 --> 00:36:15,310
again I still think that the really the

00:36:11,950 --> 00:36:16,930
the killer use for this other than for

00:36:15,310 --> 00:36:19,990
you know people that are under

00:36:16,930 --> 00:36:22,920
unfriendly environments really is the

00:36:19,990 --> 00:36:25,840
ability to customise mobile phones

00:36:22,920 --> 00:36:28,600
cheaply enough that those amongst us who

00:36:25,840 --> 00:36:30,850
are not you know able to use a

00:36:28,600 --> 00:36:32,230
traditional mobile phone easily and that

00:36:30,850 --> 00:36:33,520
could be as simple as you know your

00:36:32,230 --> 00:36:36,220
grandmother who wants a phone just as

00:36:33,520 --> 00:36:38,710
one big red button that is you know call

00:36:36,220 --> 00:36:40,870
the daughter you know if you want to do

00:36:38,710 --> 00:36:44,380
that suddenly this becomes a whole lot

00:36:40,870 --> 00:36:45,720
easier to do and so you know

00:36:44,380 --> 00:36:48,789
there's a bunch of things that we can do

00:36:45,720 --> 00:36:51,549
will it be able to do everything we run

00:36:48,789 --> 00:36:54,700
PowerPoint on it probably not can we you

00:36:51,549 --> 00:36:55,989
know run a browser an email probably get

00:36:54,700 --> 00:36:59,259
some in there there are browsers for the

00:36:55,989 --> 00:37:00,630
Commodore 64 be a selection of browsers

00:36:59,259 --> 00:37:03,819
for the Commodore 64 which it becomes

00:37:00,630 --> 00:37:04,900
perhaps as a mild surprise and likewise

00:37:03,819 --> 00:37:07,690
we should be able to make it a decently

00:37:04,900 --> 00:37:09,729
functional email client as well right so

00:37:07,690 --> 00:37:11,769
really it depends on where you want to

00:37:09,729 --> 00:37:14,410
define useful what problem you're trying

00:37:11,769 --> 00:37:16,299
to solve in lots of cases this won't be

00:37:14,410 --> 00:37:18,160
the right device but there are cases at

00:37:16,299 --> 00:37:19,799
the moment where the existing devices I

00:37:18,160 --> 00:37:22,359
would argue are definitely not the right

00:37:19,799 --> 00:37:26,619
device and so it's about having that

00:37:22,359 --> 00:37:29,019
choice so let's get to the fun part of

00:37:26,619 --> 00:37:34,710
things then any questions before we move

00:37:29,019 --> 00:37:34,710
on to demos yes a question at the back

00:37:35,009 --> 00:37:40,299
how am i doing the variable with font

00:37:37,180 --> 00:37:41,710
rendering an excellent question so it's

00:37:40,299 --> 00:37:44,589
all in hardware so those who are

00:37:41,710 --> 00:37:45,999
familiar with the old 8-bit kind of

00:37:44,589 --> 00:37:48,339
space so eight by eight characters

00:37:45,999 --> 00:37:50,710
within a one bit per pixel on the Mega

00:37:48,339 --> 00:37:53,200
65 we can have eight bits per pixel so

00:37:50,710 --> 00:37:54,940
we can have 256 colors you can set a

00:37:53,200 --> 00:37:56,170
different mode that makes those alpha

00:37:54,940 --> 00:37:57,519
values between foreground and background

00:37:56,170 --> 00:37:59,680
so that's how we get the nice anti

00:37:57,519 --> 00:38:01,329
aliased text and then there is some

00:37:59,680 --> 00:38:03,519
extra bits that you can specify on the

00:38:01,329 --> 00:38:06,369
characters that sets the kerning trim on

00:38:03,519 --> 00:38:08,259
the right of the character so this is

00:38:06,369 --> 00:38:09,369
you know if we changed where the

00:38:08,259 --> 00:38:10,420
character sit was getting fetched from

00:38:09,369 --> 00:38:13,710
we'd actually see that it's all you know

00:38:10,420 --> 00:38:18,160
blocked around where the the text is

00:38:13,710 --> 00:38:20,589
cool excellent are you looking at this

00:38:18,160 --> 00:38:21,160
as potentially server replacement

00:38:20,589 --> 00:38:23,349
hardware

00:38:21,160 --> 00:38:25,509
sorry say again are you looking at this

00:38:23,349 --> 00:38:27,700
as potentially serval replacement

00:38:25,509 --> 00:38:29,799
hardware for your okay because of my

00:38:27,700 --> 00:38:31,210
serval mesh background there is

00:38:29,799 --> 00:38:32,469
naturally converging so well I didn't

00:38:31,210 --> 00:38:33,670
talk about that and it's going to be in

00:38:32,469 --> 00:38:36,789
this hardware is we're putting a pair of

00:38:33,670 --> 00:38:38,440
Laura radios in this as well in the ones

00:38:36,789 --> 00:38:40,509
that we were making in the lab so these

00:38:38,440 --> 00:38:41,890
will be Commodore 64 that you'll be able

00:38:40,509 --> 00:38:44,410
to play two player games over 10

00:38:41,890 --> 00:38:45,940
kilometres in an urban area without

00:38:44,410 --> 00:38:48,430
indecently the network so the work can

00:38:45,940 --> 00:38:49,479
go to pot and you can still be no plane

00:38:48,430 --> 00:38:52,630
could stop two or something with a

00:38:49,479 --> 00:38:54,130
friend right but more seriously again

00:38:52,630 --> 00:38:55,869
you know the solar panel and all of

00:38:54,130 --> 00:38:58,210
these things and we're putting a 32 watt

00:38:55,869 --> 00:39:01,000
hour battery this will be a fantastic

00:38:58,210 --> 00:39:02,830
big phone for off-grid use and again if

00:39:01,000 --> 00:39:05,080
we think about you know journalists

00:39:02,830 --> 00:39:07,390
under oppressive regimes and all of this

00:39:05,080 --> 00:39:09,010
kind of thing a phone which is energy

00:39:07,390 --> 00:39:11,020
independent and communications

00:39:09,010 --> 00:39:14,050
independent as much as possible actually

00:39:11,020 --> 00:39:16,330
has real value for those kind of

00:39:14,050 --> 00:39:29,800
contexts do another question or demo

00:39:16,330 --> 00:39:34,240
permission later sure I had my yeah yeah

00:39:29,800 --> 00:39:36,540
luck in Germany yeah you know as I said

00:39:34,240 --> 00:39:39,460
we tried it yesterday and it didn't work

00:39:36,540 --> 00:39:42,099
there's because I haven't run the dial a

00:39:39,460 --> 00:39:43,630
software yet but it so want to give you

00:39:42,099 --> 00:39:45,940
enough time for a few of you to note

00:39:43,630 --> 00:39:48,460
down the number yep check okay one

00:39:45,940 --> 00:39:50,260
question what while you turn away if

00:39:48,460 --> 00:39:53,500
someone has physical access to your

00:39:50,260 --> 00:39:56,140
phone still still has false feeling of

00:39:53,500 --> 00:39:58,119
trust to your phone correct that's right

00:39:56,140 --> 00:40:01,330
and so we can't solve all of the

00:39:58,119 --> 00:40:03,250
problems all in one go and that's a

00:40:01,330 --> 00:40:05,200
really hard problem to solve if you're

00:40:03,250 --> 00:40:07,119
dealing with state level actors I would

00:40:05,200 --> 00:40:12,089
actually argue that that's a unsolvable

00:40:07,119 --> 00:40:15,070
problem so we just have to keep things

00:40:12,089 --> 00:40:20,710
as much as we can so let's go back into

00:40:15,070 --> 00:40:24,250
the freeze menu so yeah what about all

00:40:20,710 --> 00:40:26,740
open BTS project who are it it seems

00:40:24,250 --> 00:40:29,650
like community worked out how to do GSM

00:40:26,740 --> 00:40:31,359
in SDR so ready yeah and that's great

00:40:29,650 --> 00:40:34,570
I'm glad they're doing it we'd love to

00:40:31,359 --> 00:40:36,820
get their implementation in a mini pcie

00:40:34,570 --> 00:40:39,670
form factor and then book put it

00:40:36,820 --> 00:40:44,010
straight in right so we decouple all of

00:40:39,670 --> 00:40:45,820
these parts so we're always said we need

00:40:44,010 --> 00:40:48,839
telephone whoops

00:40:45,820 --> 00:40:48,839
when I get down there

00:40:50,500 --> 00:40:57,430
rot let's go fast CPU zoom

00:41:06,180 --> 00:41:13,619
so this is the next kind of fun bid the

00:41:09,630 --> 00:41:18,029
dialer sorry excellent excellent

00:41:13,619 --> 00:41:21,750
well done sir the dialer like the entire

00:41:18,029 --> 00:41:24,150
like the mobile phone UI thing we've

00:41:21,750 --> 00:41:28,559
written in a slight extension to

00:41:24,150 --> 00:41:30,500
Commodore 64 basic so you are now

00:41:28,559 --> 00:41:32,880
watching that's the entire dialer

00:41:30,500 --> 00:41:36,210
software that you've just seen go past

00:41:32,880 --> 00:41:37,980
again think verification you know and

00:41:36,210 --> 00:41:39,359
you know sovereignty and all of these

00:41:37,980 --> 00:41:46,950
sorts of things you know if you want to

00:41:39,359 --> 00:41:52,920
change things so it's 28 kilobytes of

00:41:46,950 --> 00:41:59,510
untie kanai's S key text someone's

00:41:52,920 --> 00:41:59,510
trying to ring me will answer come on

00:41:59,960 --> 00:42:09,470
hello and we need to turn out the audio

00:42:03,170 --> 00:42:11,450
again hey who was beeping so the bottom

00:42:09,470 --> 00:42:12,950
of Scylla scope line that's me the

00:42:11,450 --> 00:42:14,140
microphone in here and the top one is

00:42:12,950 --> 00:42:17,140
the cellular network

00:42:14,140 --> 00:42:17,140
yes

00:42:20,010 --> 00:42:23,140
and no that's not the Silla network we

00:42:21,940 --> 00:42:28,150
can tell because it's on the top half of

00:42:23,140 --> 00:42:34,590
the the display so let's hang that call

00:42:28,150 --> 00:42:34,590
up go back to the thing

00:42:37,320 --> 00:42:40,479
[Music]

00:42:42,090 --> 00:42:57,550
hello oh we are I know no no it's cool

00:42:51,760 --> 00:42:58,810
waiting someone else's trap who is the

00:42:57,550 --> 00:43:05,470
wise guy that's trying to call at the

00:42:58,810 --> 00:43:07,630
same time you see one they stop that see

00:43:05,470 --> 00:43:13,810
what that call open have we was okay

00:43:07,630 --> 00:43:15,520
right so let's do the course they've all

00:43:13,810 --> 00:43:16,510
the 80 responses from the modem so

00:43:15,520 --> 00:43:23,050
here's another thing that your phone

00:43:16,510 --> 00:43:24,490
probably can't do if I press T so the

00:43:23,050 --> 00:43:27,240
dollar doesn't support the feature you

00:43:24,490 --> 00:43:27,240
can do it yourself

00:43:27,420 --> 00:43:38,110
are ye sure yeah it'll say ring yeah and

00:43:36,400 --> 00:43:39,310
then this will be confused because the

00:43:38,110 --> 00:43:39,550
user interface doesn't know what's going

00:43:39,310 --> 00:43:41,590
on

00:43:39,550 --> 00:43:48,640
oh hello but the audio part isn't hardly

00:43:41,590 --> 00:43:50,350
remember now what gets really fun how do

00:43:48,640 --> 00:43:53,590
audio poles turn the gain down a little

00:43:50,350 --> 00:43:59,170
bit here oh okay

00:43:53,590 --> 00:44:07,270
hello a vhq hello deep breathing from a

00:43:59,170 --> 00:44:09,670
vhq yeah we need to do some sign

00:44:07,270 --> 00:44:13,600
unsigned audio things in the mixer we

00:44:09,670 --> 00:44:15,220
need to sort out but yeah so what gets

00:44:13,600 --> 00:44:17,520
really fun is that we can what while

00:44:15,220 --> 00:44:21,280
they're still on the line right we can

00:44:17,520 --> 00:44:23,410
reset the call is the call is still in

00:44:21,280 --> 00:44:25,740
progress so below AV can you say

00:44:23,410 --> 00:44:25,740
something

00:44:30,370 --> 00:44:35,230
so for the people listening on YouTube

00:44:32,530 --> 00:44:36,790
later on there was a v HQ that's

00:44:35,230 --> 00:44:41,230
listening in a completely different room

00:44:36,790 --> 00:44:42,670
trying to Indesit so would you prefer

00:44:41,230 --> 00:44:46,780
impossible mission or would you prefer

00:44:42,670 --> 00:44:49,540
whizz ball okay you've been outvoted by

00:44:46,780 --> 00:44:52,510
everyone here they want Wes ball we have

00:44:49,540 --> 00:44:54,760
a few display glitches with Wes ball but

00:44:52,510 --> 00:44:58,180
that's fine I did I picked the disk

00:44:54,760 --> 00:45:03,310
didn't I already yeah so let's go load

00:44:58,180 --> 00:45:06,360
oh and you can hear me talking because

00:45:03,310 --> 00:45:06,360
the microphone is picking up

00:45:15,180 --> 00:45:19,480
avy can you say something do we had to

00:45:17,160 --> 00:45:24,940
hear over the

00:45:19,480 --> 00:45:28,510
lime Devils aren't well balanced not yet

00:45:24,940 --> 00:45:39,339
but again and we spare them listen to

00:45:28,510 --> 00:45:39,819
endless music indeed so yeah they're

00:45:39,339 --> 00:45:42,369
still there

00:45:39,819 --> 00:45:44,529
hey you're welcome to stand the line or

00:45:42,369 --> 00:45:47,170
you can know the note we're officially

00:45:44,529 --> 00:45:48,819
out of time we're now into the break I'm

00:45:47,170 --> 00:45:50,380
happy for us to keep having fun as long

00:45:48,819 --> 00:45:52,779
as people would like to have fun but

00:45:50,380 --> 00:45:55,660
don't feel obliged to stay so yeah I

00:45:52,779 --> 00:45:57,730
should say this before but feel free to

00:45:55,660 --> 00:45:59,170
stay and we'll have fun but on behalf of

00:45:57,730 --> 00:46:00,549
everyone here thank you very much as a

00:45:59,170 --> 00:46:01,610
small token of our appreciation that was

00:46:00,549 --> 00:46:09,470
awesome thank you very much

00:46:01,610 --> 00:46:09,470

YouTube URL: https://www.youtube.com/watch?v=KuNB4ocZDXA


