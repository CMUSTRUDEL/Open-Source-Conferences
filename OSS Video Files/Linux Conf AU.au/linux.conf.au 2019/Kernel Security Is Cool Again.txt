Title: Kernel Security Is Cool Again
Publication date: 2020-01-09
Playlist: linux.conf.au 2019
Description: 
	Casey Schaufler

https://2019.linux.conf.au/schedule/presentation/211/

Why is Linux kernel security getting so much attention all of a sudden, and where is it going? What is the Linux Hardening Project about? What are the Landlock, SARA and WhiteEgret security modules for? This can't be all about side channel attacks, can it? Is security a good place to contribute? Casey Schaufler, who has been working in kernels and security for a very long time, will talk about the current state of Linux kernel security development. The efforts to make the kernel less susceptible to attack will be outlined. New developments in access controls will be described. Infrastructure changes, including expanded security module stacking, will be covered. You'll hear about integrity, TPMs, trusted boot and more. The talk will wrap up with predictions and some areas that aren't getting the attention they may deserve.

linux.conf.au is a conference about the Linux operating system, and all aspects of the thriving ecosystem of Free and Open Source Software that has grown up around it. Run since 1999, in a different Australian or New Zealand city each year, by a team of local volunteers, LCA invites more than 500 people to learn from the people who shape the future of Open Source. For more information on the conference see https://linux.conf.au/

#linux.conf.au #linux #foss #opensource
Captions: 
	00:00:00,030 --> 00:00:03,419
we have Cathy shuffler presenting on

00:00:01,949 --> 00:00:10,740
white colonel security is cool again

00:00:03,419 --> 00:00:12,799
please welcome Cathy thank you thank you

00:00:10,740 --> 00:00:16,320
thank you

00:00:12,799 --> 00:00:23,580
so Colonel security is once I turn the

00:00:16,320 --> 00:00:25,470
switch on on thank you okay

00:00:23,580 --> 00:00:27,269
I'm Casey Schaeffler I've been doing

00:00:25,470 --> 00:00:29,340
colonel development for the Pat I'd

00:00:27,269 --> 00:00:33,660
actually looked at at the events like 40

00:00:29,340 --> 00:00:37,350
years and I've only been doing security

00:00:33,660 --> 00:00:41,129
for the past 30 so I'm relatively new

00:00:37,350 --> 00:00:44,550
comer to it but one thing we see working

00:00:41,129 --> 00:00:46,590
in security is is that it gets cool for

00:00:44,550 --> 00:00:48,840
a while and then it cools off for a

00:00:46,590 --> 00:00:50,309
while then it gets cool for a while and

00:00:48,840 --> 00:00:53,399
cools off for a while now we're in a

00:00:50,309 --> 00:00:56,100
cool face so people want to work on

00:00:53,399 --> 00:00:57,449
security people like security and the

00:00:56,100 --> 00:01:04,970
question is first question of course is

00:00:57,449 --> 00:01:07,760
why yeah what happened well thank you

00:01:04,970 --> 00:01:11,970
what happened that all of a sudden

00:01:07,760 --> 00:01:15,030
security is cool again well one of the

00:01:11,970 --> 00:01:19,909
things to happen last year we had a

00:01:15,030 --> 00:01:22,200
couple of exploits for current for

00:01:19,909 --> 00:01:24,930
hardware that had been around for

00:01:22,200 --> 00:01:26,580
decades it had been well actually well

00:01:24,930 --> 00:01:29,700
known in the security community that

00:01:26,580 --> 00:01:31,350
these things were here but people

00:01:29,700 --> 00:01:34,259
started publishing them instead of I

00:01:31,350 --> 00:01:37,470
could academic exercises as exploits and

00:01:34,259 --> 00:01:41,400
all of sudden crying and gnashing of

00:01:37,470 --> 00:01:43,920
teeth and a lot of effort and expense

00:01:41,400 --> 00:01:47,729
when it started going into addressing

00:01:43,920 --> 00:01:50,060
these kinds of issues another thing that

00:01:47,729 --> 00:01:52,560
happened and this is a kind of a

00:01:50,060 --> 00:01:55,200
community kind of thing it's a gr

00:01:52,560 --> 00:01:57,630
security went dark for for a long time

00:01:55,200 --> 00:01:59,460
gr security was the place you went to

00:01:57,630 --> 00:02:02,880
see how how to do our cane and

00:01:59,460 --> 00:02:07,520
interesting lockdowns in the linux

00:02:02,880 --> 00:02:14,220
kernel that project decided to take its

00:02:07,520 --> 00:02:15,900
public face away and not actually just

00:02:14,220 --> 00:02:20,400
yeah present that out to everybody

00:02:15,900 --> 00:02:22,890
anymore not be be open about it and that

00:02:20,400 --> 00:02:24,150
got a lot of people's attention a lot of

00:02:22,890 --> 00:02:25,710
people who were just saying well yeah

00:02:24,150 --> 00:02:27,630
this kind of kind of stuffs over there

00:02:25,710 --> 00:02:30,120
we can kind of think about it but gee

00:02:27,630 --> 00:02:31,530
our security handle set it's not going

00:02:30,120 --> 00:02:33,660
to happen there any more of that stuff's

00:02:31,530 --> 00:02:36,980
never going to get upstream if we care

00:02:33,660 --> 00:02:36,980
we got to do something about it

00:02:38,210 --> 00:02:51,390
containers containers are really popular

00:02:42,230 --> 00:03:02,160
anybody here use a container any there's

00:02:51,390 --> 00:03:04,350
one in every room and containers want to

00:03:02,160 --> 00:03:06,540
do a whole lot of things to make it easy

00:03:04,350 --> 00:03:08,790
for you to set up your environment so

00:03:06,540 --> 00:03:13,530
you can run your thing without bothering

00:03:08,790 --> 00:03:15,570
anybody else and the kernel isn't set up

00:03:13,530 --> 00:03:17,100
that way it's set up pretty much for

00:03:15,570 --> 00:03:20,910
people to interfere with each other and

00:03:17,100 --> 00:03:22,920
all kinds of interesting ways so the

00:03:20,910 --> 00:03:24,780
people who are doing containers want a

00:03:22,920 --> 00:03:26,100
set of enhancements to make the

00:03:24,780 --> 00:03:28,459
environment they're running in better

00:03:26,100 --> 00:03:32,070
for the kinds of things they want to do

00:03:28,459 --> 00:03:34,910
and the last thing I want to touch on

00:03:32,070 --> 00:03:37,920
here is 1980 security is for squares

00:03:34,910 --> 00:03:41,510
okay how many of you really understand

00:03:37,920 --> 00:03:41,510
the bell and lapacho security model

00:03:44,390 --> 00:03:50,150
three okay there three four oh there's a

00:03:47,190 --> 00:03:52,620
fourth one over there all right

00:03:50,150 --> 00:03:57,900
the security models that we brought with

00:03:52,620 --> 00:03:59,340
us from the 1970s and 1980s don't really

00:03:57,900 --> 00:04:07,470
work well on a whole lot of the modern

00:03:59,340 --> 00:04:08,550
systems we're using so one of the things

00:04:07,470 --> 00:04:11,900
that's going on these days and people

00:04:08,550 --> 00:04:14,400
are saying why do I even have user IDs

00:04:11,900 --> 00:04:15,690
you know why do I want to clutter up my

00:04:14,400 --> 00:04:19,919
system with all this information that

00:04:15,690 --> 00:04:21,900
I'm never going to use so these are the

00:04:19,919 --> 00:04:23,940
reasons so yeah the basic reasons why

00:04:21,900 --> 00:04:25,169
security is cool because we got to do

00:04:23,940 --> 00:04:27,300
something about all these things that

00:04:25,169 --> 00:04:27,610
that aren't kind of kind of right that

00:04:27,300 --> 00:04:31,780
we

00:04:27,610 --> 00:04:34,629
to do something about so first thing

00:04:31,780 --> 00:04:36,340
yours is of course hardware okay what

00:04:34,629 --> 00:04:40,000
are we gonna do about the hardware stuff

00:04:36,340 --> 00:04:42,280
yeah well we're gonna fix them hardware

00:04:40,000 --> 00:04:44,580
security bugs okay

00:04:42,280 --> 00:04:46,389
the operating system is tougher well

00:04:44,580 --> 00:04:51,370
depending on how you want to look at

00:04:46,389 --> 00:04:53,860
firmware which I don't the operating

00:04:51,370 --> 00:04:56,020
system is the thing but it's that nice

00:04:53,860 --> 00:04:59,530
little layer there that smooths out all

00:04:56,020 --> 00:05:02,319
those little bumps and crags in the

00:04:59,530 --> 00:05:05,069
hardware so this is what a lot of the

00:05:02,319 --> 00:05:08,529
the specter and meltdown stuff has been

00:05:05,069 --> 00:05:10,449
how do we address the fact that people

00:05:08,529 --> 00:05:14,889
are people who make hardware are really

00:05:10,449 --> 00:05:16,509
really really really clever and people

00:05:14,889 --> 00:05:23,529
who use it don't want to be clever to

00:05:16,509 --> 00:05:24,879
death and we also discover that there

00:05:23,529 --> 00:05:28,029
are multiple architectures you have to

00:05:24,879 --> 00:05:29,469
deal with well yeah if you've got gotten

00:05:28,029 --> 00:05:30,699
Itanium it's going to have a side

00:05:29,469 --> 00:05:35,349
channel attack that looks like this

00:05:30,699 --> 00:05:36,789
you've got a you've got a xeon core it's

00:05:35,349 --> 00:05:37,839
going to look like this you've got an

00:05:36,789 --> 00:05:41,020
ARM processor it's going to look like

00:05:37,839 --> 00:05:45,669
that if you gottem its processor it's

00:05:41,020 --> 00:05:49,210
going to look like that so the operating

00:05:45,669 --> 00:05:50,770
this is a lot of interesting stuff if

00:05:49,210 --> 00:05:53,770
you really want to wrap your brain

00:05:50,770 --> 00:05:56,169
around these things it's an area where

00:05:53,770 --> 00:05:57,639
where you can come in and say oh here's

00:05:56,169 --> 00:05:59,919
the obvious solution and look at it go

00:05:57,639 --> 00:06:05,199
wait a second that's not going to fix

00:05:59,919 --> 00:06:07,689
the problem so there are a lot of people

00:06:05,199 --> 00:06:10,120
who have a lot of brains a lot of smarts

00:06:07,689 --> 00:06:13,779
who can now work on security and begin

00:06:10,120 --> 00:06:16,060
do fun stuff we also get a bunch of

00:06:13,779 --> 00:06:18,400
people ok once you start having Hardware

00:06:16,060 --> 00:06:19,689
people being told oh well you know we've

00:06:18,400 --> 00:06:21,099
got all these security problems it's

00:06:19,689 --> 00:06:23,439
hardware they say ok great

00:06:21,099 --> 00:06:26,409
we like that we're going to implement

00:06:23,439 --> 00:06:27,819
security features and you know we're not

00:06:26,409 --> 00:06:29,620
gonna fix the bugs that's what's our

00:06:27,819 --> 00:06:31,839
first of all but we are gonna introduce

00:06:29,620 --> 00:06:33,460
a whole lot of features that make our

00:06:31,839 --> 00:06:34,659
system so much more secure than the

00:06:33,460 --> 00:06:37,270
other system that nobody's ever gonna

00:06:34,659 --> 00:06:40,650
buy those those chips again we're gonna

00:06:37,270 --> 00:06:42,419
put new memory models in we're going to

00:06:40,650 --> 00:06:46,229
protections we're going to encrypt the

00:06:42,419 --> 00:06:53,600
map encrypt the cache lines that'll

00:06:46,229 --> 00:06:53,600
really speed things up for your database

00:06:55,220 --> 00:06:59,580
and we're gonna isolate you know we're

00:06:57,750 --> 00:07:02,100
gonna have six processors on this chip

00:06:59,580 --> 00:07:03,570
and three of them are gonna be dedicated

00:07:02,100 --> 00:07:05,449
to doing these things and three are

00:07:03,570 --> 00:07:07,530
going to be dedicated to those things

00:07:05,449 --> 00:07:09,090
and they're not gonna be able to talk to

00:07:07,530 --> 00:07:10,830
each other except through this one

00:07:09,090 --> 00:07:17,430
little except through the second level

00:07:10,830 --> 00:07:19,560
cache Tuesday's dealing with the clever

00:07:17,430 --> 00:07:21,930
that the hardware people can come up

00:07:19,560 --> 00:07:25,800
with is again one of these interesting

00:07:21,930 --> 00:07:27,810
things where you can make use of the

00:07:25,800 --> 00:07:33,510
interesting ways that people who develop

00:07:27,810 --> 00:07:35,570
hardware think software people work and

00:07:33,510 --> 00:07:37,650
then of course there's the boot process

00:07:35,570 --> 00:07:39,750
alright my systems running it's running

00:07:37,650 --> 00:07:41,039
great well okay how do you know that the

00:07:39,750 --> 00:07:44,520
system you're running is the one you

00:07:41,039 --> 00:07:46,800
want to run what do you mean it looks

00:07:44,520 --> 00:07:49,680
like it's running what I want it to run

00:07:46,800 --> 00:07:51,240
it's like I can show my slides yeah well

00:07:49,680 --> 00:07:54,960
yeah but how do you know it's not also

00:07:51,240 --> 00:07:57,750
also sending all your security all the

00:07:54,960 --> 00:08:02,970
credit card numbers you've got here off

00:07:57,750 --> 00:08:06,330
to some place in in Wellington well I

00:08:02,970 --> 00:08:07,410
boot I watched it boot well how do you

00:08:06,330 --> 00:08:13,410
know it didn't lie to you when you

00:08:07,410 --> 00:08:14,880
watched it boot well because I I

00:08:13,410 --> 00:08:16,349
installed the upper you system myself

00:08:14,880 --> 00:08:17,789
well how did you know that it the

00:08:16,349 --> 00:08:19,410
operating system it booted was the one

00:08:17,789 --> 00:08:24,840
you put on not one that it downloaded

00:08:19,410 --> 00:08:28,410
about ah a test station stations

00:08:24,840 --> 00:08:30,930
signatures there's a whole plethora of

00:08:28,410 --> 00:08:33,150
stuff going on here there are people at

00:08:30,930 --> 00:08:38,070
IBM who are running a Linux kernel to

00:08:33,150 --> 00:08:40,200
boot the Linux kernel and how you get

00:08:38,070 --> 00:08:42,690
the Linux kernel that you're booting the

00:08:40,200 --> 00:08:45,570
Linux kernel with is itself a very

00:08:42,690 --> 00:08:47,220
interesting process and of course you

00:08:45,570 --> 00:08:48,690
can't just burn it into prom because if

00:08:47,220 --> 00:08:51,630
you do that then of course it's got a

00:08:48,690 --> 00:08:53,790
bug you can't update it and everybody's

00:08:51,630 --> 00:08:54,540
on it so it's a very interesting problem

00:08:53,790 --> 00:08:57,750
with all

00:08:54,540 --> 00:08:59,040
a lot of fun things to do to make it

00:08:57,750 --> 00:09:01,589
actually come out right and of course

00:08:59,040 --> 00:09:03,720
it's the the the better job you do the

00:09:01,589 --> 00:09:07,709
slower it's going to be and that's going

00:09:03,720 --> 00:09:11,009
to interfere with your databasing okay

00:09:07,709 --> 00:09:13,199
so the next thing is kernel hardening

00:09:11,009 --> 00:09:15,630
what is kernel hardening how many of the

00:09:13,199 --> 00:09:18,449
people here have not heard about kernel

00:09:15,630 --> 00:09:21,149
hardening okay there's one person who

00:09:18,449 --> 00:09:30,649
hasn't great and how large a rock do you

00:09:21,149 --> 00:09:30,649
live under there are two in this room

00:09:32,569 --> 00:09:42,720
okay so kernel hardening is really just

00:09:36,569 --> 00:09:44,250
a response to 50 years of bad coding if

00:09:42,720 --> 00:09:47,940
you think it through

00:09:44,250 --> 00:09:49,740
if there are 24 million lines of code in

00:09:47,940 --> 00:09:53,279
the Linux kernel which is the count I

00:09:49,740 --> 00:09:57,360
came up with last week that means there

00:09:53,279 --> 00:10:04,550
are 24 one-in-a-million errors in the

00:09:57,360 --> 00:10:07,230
kernel that's an awful lot of one in a

00:10:04,550 --> 00:10:08,100
100 million chance that this little this

00:10:07,230 --> 00:10:12,480
could be a problem

00:10:08,100 --> 00:10:15,060
well there's 24 of them right there and

00:10:12,480 --> 00:10:21,240
people still haven't learned things like

00:10:15,060 --> 00:10:24,120
I can do a stir I can do a stern a stern

00:10:21,240 --> 00:10:26,730
copy certain copy is safe right now the

00:10:24,120 --> 00:10:32,430
fact that I'm taking the the length of

00:10:26,730 --> 00:10:36,600
the data from user space well oh it's ok

00:10:32,430 --> 00:10:41,459
because I've put under under user on my

00:10:36,600 --> 00:10:44,160
variable and so it's ok we still see

00:10:41,459 --> 00:10:47,279
this and we've learned a lot though it's

00:10:44,160 --> 00:10:50,250
like we we have yeah there was a time

00:10:47,279 --> 00:10:51,680
when back in the in the old UNIX days

00:10:50,250 --> 00:10:54,029
there were things in the kernel that

00:10:51,680 --> 00:10:59,459
nowadays you'd get fired if you even

00:10:54,029 --> 00:11:00,930
thought about talking about but there's

00:10:59,459 --> 00:11:02,699
still a lot of errors out there and

00:11:00,930 --> 00:11:05,850
we've got new techniques for dealing

00:11:02,699 --> 00:11:08,180
with them anybody here remember running

00:11:05,850 --> 00:11:08,180
lint

00:11:08,220 --> 00:11:13,690
okay there we have it yes you used to do

00:11:11,740 --> 00:11:16,000
do make and then when the thing all

00:11:13,690 --> 00:11:18,460
compiled you go home great then you say

00:11:16,000 --> 00:11:22,210
make lint and then you cry for about

00:11:18,460 --> 00:11:24,100
half an hour no it was really brutal

00:11:22,210 --> 00:11:26,050
because Linda would actually say things

00:11:24,100 --> 00:11:27,790
like hey that's a pointer over here

00:11:26,050 --> 00:11:28,930
that's an integer over here and they're

00:11:27,790 --> 00:11:35,790
not the same size

00:11:28,930 --> 00:11:39,810
I didn't the compiler tell me that well

00:11:35,790 --> 00:11:43,120
I'll just figures out you're smart right

00:11:39,810 --> 00:11:45,580
you get so we have a lot of new compiler

00:11:43,120 --> 00:11:47,290
tricks too a lot of options you can give

00:11:45,580 --> 00:11:49,570
the compiler to warn you about things

00:11:47,290 --> 00:11:52,710
that you shouldn't be doing but that you

00:11:49,570 --> 00:11:56,710
probably are and that have always worked

00:11:52,710 --> 00:11:58,530
and warnings that'll say hey you know

00:11:56,710 --> 00:12:01,510
what maybe this should be a constant

00:11:58,530 --> 00:12:03,430
maybe this shouldn't maybe you shouldn't

00:12:01,510 --> 00:12:04,660
take this void pointer and put it into

00:12:03,430 --> 00:12:06,730
there maybe you shouldn't do this kind

00:12:04,660 --> 00:12:13,000
of arithmetic on this kind of data

00:12:06,730 --> 00:12:14,950
structure and we got scanning tools we

00:12:13,000 --> 00:12:16,330
got proprietary tools we got open source

00:12:14,950 --> 00:12:18,430
tools

00:12:16,330 --> 00:12:20,440
I'm personally an advocate that you run

00:12:18,430 --> 00:12:22,000
proprietary tools on open source and

00:12:20,440 --> 00:12:24,700
open source for source tools on

00:12:22,000 --> 00:12:28,510
proprietary because you got different

00:12:24,700 --> 00:12:31,270
mindsets and different mindsets looking

00:12:28,510 --> 00:12:37,360
at the same bit of code are gonna see

00:12:31,270 --> 00:12:39,670
different things containers containers

00:12:37,360 --> 00:12:43,450
are neither a kernel nor a security

00:12:39,670 --> 00:12:46,210
construct if you talk to the container

00:12:43,450 --> 00:12:48,730
people they were adamant that yeah oh no

00:12:46,210 --> 00:12:51,070
you know containers are not a you are

00:12:48,730 --> 00:12:52,780
not a kernel thing and they're not a

00:12:51,070 --> 00:12:54,190
security thing unless of course you're

00:12:52,780 --> 00:12:58,320
talking to the marketing people who are

00:12:54,190 --> 00:13:05,320
going to who are going to sell it as a

00:12:58,320 --> 00:13:09,790
security thing but yeah namespaces on

00:13:05,320 --> 00:13:14,200
the other hand are a kernel construct

00:13:09,790 --> 00:13:15,910
and they are security features now I

00:13:14,200 --> 00:13:17,680
used the lone ranger here because he

00:13:15,910 --> 00:13:20,190
always wears a mask because so you don't

00:13:17,680 --> 00:13:20,190
know who he is

00:13:21,110 --> 00:13:25,640
trigger on the other hand you do know

00:13:23,029 --> 00:13:30,700
who he is because he's been mapped into

00:13:25,640 --> 00:13:33,230
your namespace the point being that

00:13:30,700 --> 00:13:35,330
we've got all kinds of namespaces we got

00:13:33,230 --> 00:13:38,500
file system namespaces we got mount

00:13:35,330 --> 00:13:41,810
point namespaces we got user name spaces

00:13:38,500 --> 00:13:44,870
we've got development going on security

00:13:41,810 --> 00:13:46,610
name spaces within security modules so

00:13:44,870 --> 00:13:48,920
you can have a different apparmor policy

00:13:46,610 --> 00:13:51,339
for example on your base system and in

00:13:48,920 --> 00:13:54,140
each of the containers you're running

00:13:51,339 --> 00:13:57,050
which is kind of cool it's also kind of

00:13:54,140 --> 00:13:59,480
strange if you've been working on

00:13:57,050 --> 00:14:01,850
security at all you you kind of get into

00:13:59,480 --> 00:14:05,060
the mindset of well we know what secure

00:14:01,850 --> 00:14:07,370
is and then we say wait say but we know

00:14:05,060 --> 00:14:09,740
secure is this here and it's that there

00:14:07,370 --> 00:14:11,750
and it's what if we have the both then

00:14:09,740 --> 00:14:15,279
do we have a combination or an exclusion

00:14:11,750 --> 00:14:20,000
or oh my goodness my brain has exploded

00:14:15,279 --> 00:14:21,980
which is fine because it's cool now

00:14:20,000 --> 00:14:27,649
we've got new security models coming in

00:14:21,980 --> 00:14:30,140
coming in again the the security modules

00:14:27,649 --> 00:14:32,600
we've got currently we've got four major

00:14:30,140 --> 00:14:35,300
security modules Tamayo is the only one

00:14:32,600 --> 00:14:38,810
that's actually modern in any way a

00:14:35,300 --> 00:14:42,620
Parmer is actually a pendulum swing

00:14:38,810 --> 00:14:44,750
against bell and Lapage Allah the notion

00:14:42,620 --> 00:14:46,790
of what Bell and Podge Allah says is

00:14:44,750 --> 00:14:49,060
wrong we want to have to have the other

00:14:46,790 --> 00:14:52,459
alternative here and that's a parmer

00:14:49,060 --> 00:14:55,579
smack is is a generalization of belem

00:14:52,459 --> 00:15:01,610
Lapage Allah and selinux is an

00:14:55,579 --> 00:15:03,620
overgeneralization abdullah logic but

00:15:01,610 --> 00:15:05,899
the new modules have got we've got lent

00:15:03,620 --> 00:15:08,959
we've got coming in sometime soon near

00:15:05,899 --> 00:15:12,079
now we've got land lock which allows you

00:15:08,959 --> 00:15:13,730
to put a BPF program on a system on

00:15:12,079 --> 00:15:16,640
every system call in your program so

00:15:13,730 --> 00:15:18,949
this is a self-protection thing so you

00:15:16,640 --> 00:15:21,649
okay you're demonstrating self-control

00:15:18,949 --> 00:15:24,100
here you say all right I'm gonna put

00:15:21,649 --> 00:15:28,250
this BPF program here and any time I run

00:15:24,100 --> 00:15:30,230
say open it's going to dudes it run this

00:15:28,250 --> 00:15:33,130
program on the path name and tell me

00:15:30,230 --> 00:15:33,130
whether or not I can do that

00:15:34,520 --> 00:15:37,820
you might say well why don't I just

00:15:36,410 --> 00:15:39,200
write my program correctly then the

00:15:37,820 --> 00:15:41,630
first place so that I don't have to

00:15:39,200 --> 00:15:43,880
worry about it doing that but this is

00:15:41,630 --> 00:15:46,730
coming in in the mindset of somebody's

00:15:43,880 --> 00:15:49,580
gonna hack my application anyway or I've

00:15:46,730 --> 00:15:52,370
got no js' running on top of it or some

00:15:49,580 --> 00:15:54,920
such thing and I know bad stuff is going

00:15:52,370 --> 00:15:56,750
to happen and when it does I want I want

00:15:54,920 --> 00:15:58,160
the program to stop because I can't do

00:15:56,750 --> 00:16:02,690
anything to prevent these people from

00:15:58,160 --> 00:16:05,300
doing these wild and crazy things I've

00:16:02,690 --> 00:16:07,400
got another one called Sarah and it

00:16:05,300 --> 00:16:09,800
implements a bunch of memory protections

00:16:07,400 --> 00:16:12,530
and it has a plugin mechanism so you can

00:16:09,800 --> 00:16:16,160
can implement additional memory

00:16:12,530 --> 00:16:21,320
protections it can do filtering on the

00:16:16,160 --> 00:16:22,730
USB stack so it offers you a number of

00:16:21,320 --> 00:16:26,030
protections that you don't have right

00:16:22,730 --> 00:16:28,070
now and it's configurable so you can do

00:16:26,030 --> 00:16:32,600
all kinds of fun stuff but this is not

00:16:28,070 --> 00:16:35,390
your your father's security module white

00:16:32,600 --> 00:16:38,420
egret this is this is kind of an

00:16:35,390 --> 00:16:40,910
interesting one in that all it does is

00:16:38,420 --> 00:16:42,230
prevent you from executing programs now

00:16:40,910 --> 00:16:47,780
why don't you just turn off the mode

00:16:42,230 --> 00:16:50,360
bits I hear you cry the idea is that in

00:16:47,780 --> 00:16:52,040
addition to checking the mode bits you

00:16:50,360 --> 00:16:54,080
then have a list of programs that you're

00:16:52,040 --> 00:16:59,120
up that you're allowed to execute and

00:16:54,080 --> 00:17:01,760
you can turn them off or on and yeah at

00:16:59,120 --> 00:17:04,220
will and this is an a level of

00:17:01,760 --> 00:17:08,390
protection even if you've got a

00:17:04,220 --> 00:17:12,020
read-only file system for example and

00:17:08,390 --> 00:17:13,670
you can dynamically change it another

00:17:12,020 --> 00:17:15,410
thing we've got going is security module

00:17:13,670 --> 00:17:16,670
stacking this is my personal baby here

00:17:15,410 --> 00:17:22,030
I've only been working on it for seven

00:17:16,670 --> 00:17:24,260
years so yeah we'll get this real

00:17:22,030 --> 00:17:27,230
completed more or less real sooner but

00:17:24,260 --> 00:17:29,590
the idea is that when the security

00:17:27,230 --> 00:17:31,940
module infrastructure was put in place

00:17:29,590 --> 00:17:33,800
nobody thought you would ever want to do

00:17:31,940 --> 00:17:35,300
more than one kind of thing that every

00:17:33,800 --> 00:17:39,320
security module would take care of all

00:17:35,300 --> 00:17:40,940
the security for the system and that

00:17:39,320 --> 00:17:42,950
model would would just suffice for

00:17:40,940 --> 00:17:46,340
everything we've learned that doesn't

00:17:42,950 --> 00:17:48,770
work very well okay you want

00:17:46,340 --> 00:17:50,420
to have be able to pick and choose what

00:17:48,770 --> 00:17:54,170
kinds of things you actually want to

00:17:50,420 --> 00:17:55,580
protect so what this menu allows allow

00:17:54,170 --> 00:18:00,710
all the security modules to play

00:17:55,580 --> 00:18:05,240
together nicely so here we have their

00:18:00,710 --> 00:18:07,120
plane jump rope sorry it was the best

00:18:05,240 --> 00:18:11,090
metaphor I could come up with on short

00:18:07,120 --> 00:18:13,160
notice here the other thing that this is

00:18:11,090 --> 00:18:16,970
allowing is this is allowing new new

00:18:13,160 --> 00:18:19,070
modules to come in and work in concert

00:18:16,970 --> 00:18:20,540
with the existing security modules you

00:18:19,070 --> 00:18:24,140
have so if you have SELinux on your

00:18:20,540 --> 00:18:26,660
Fedora box and you want to try some new

00:18:24,140 --> 00:18:28,340
and interesting security model you'll be

00:18:26,660 --> 00:18:31,340
able to do that without having to turn

00:18:28,340 --> 00:18:34,340
SELinux off and upsetting your IT

00:18:31,340 --> 00:18:36,290
department how many of you by the way

00:18:34,340 --> 00:18:43,670
have IT departments that want you to run

00:18:36,290 --> 00:18:46,990
SELinux no I I saw several III saw

00:18:43,670 --> 00:18:46,990
several of course they all work at Cisco

00:18:50,110 --> 00:18:55,430
but there yeah there is value to keeping

00:18:53,030 --> 00:18:58,700
what you have and adding to it rather

00:18:55,430 --> 00:19:01,450
than necessity necessitating that

00:18:58,700 --> 00:19:04,850
everything be thrown away at every time

00:19:01,450 --> 00:19:06,980
so question is how can I join the fun ok

00:19:04,850 --> 00:19:09,440
let's say yeah you want to be one of the

00:19:06,980 --> 00:19:15,160
cool kids live the the security engineer

00:19:09,440 --> 00:19:18,470
rock rock star lifestyle what can you do

00:19:15,160 --> 00:19:20,600
well the most prominent project that's

00:19:18,470 --> 00:19:23,210
going on right now is the Linux kernel

00:19:20,600 --> 00:19:37,090
hardening project and for that you just

00:19:23,210 --> 00:19:37,090
need to find this guy I am Barristan

00:19:41,560 --> 00:19:46,850
case cook who will be talking various

00:19:45,530 --> 00:19:49,550
times during the conference today you

00:19:46,850 --> 00:19:51,200
can find him in many places has been

00:19:49,550 --> 00:19:54,490
running the Linux kernel harboring a new

00:19:51,200 --> 00:19:59,450
project for the past couple of years and

00:19:54,490 --> 00:20:03,230
it's actually been amazingly successful

00:19:59,450 --> 00:20:05,899
after years of not having hardly any

00:20:03,230 --> 00:20:10,330
work done on hardening seriously

00:20:05,899 --> 00:20:12,860
upstream it's now going gangbusters and

00:20:10,330 --> 00:20:15,860
he's the one you need to talk to about

00:20:12,860 --> 00:20:19,190
getting things what you should do what

00:20:15,860 --> 00:20:20,389
will be a bit readily available the

00:20:19,190 --> 00:20:23,240
other thing you can do is you can do

00:20:20,389 --> 00:20:26,590
your own Linux security module have a

00:20:23,240 --> 00:20:28,909
security model that makes sense for you

00:20:26,590 --> 00:20:34,850
what can you do you know what do you

00:20:28,909 --> 00:20:36,860
want for security you probably don't

00:20:34,850 --> 00:20:39,830
want telepods EULA you may not want your

00:20:36,860 --> 00:20:41,510
mode it's what what do you want what

00:20:39,830 --> 00:20:45,649
does your application you know what does

00:20:41,510 --> 00:20:48,110
your system yeah if you're running like

00:20:45,649 --> 00:20:50,570
the processor in this what security

00:20:48,110 --> 00:20:53,840
model do you want running the processor

00:20:50,570 --> 00:20:55,880
on the security module if you running a

00:20:53,840 --> 00:20:59,330
supercomputer Center what security mod

00:20:55,880 --> 00:21:01,610
but what security model do you want we

00:20:59,330 --> 00:21:05,929
want to be thinking in terms of now and

00:21:01,610 --> 00:21:08,960
and what makes sense today now the

00:21:05,929 --> 00:21:12,289
future what is the future hold because

00:21:08,960 --> 00:21:15,769
now that computer Security's kernel

00:21:12,289 --> 00:21:17,240
security is cool what if what kind of

00:21:15,769 --> 00:21:20,630
things are we going to have coming up

00:21:17,240 --> 00:21:24,100
that we'll want to work on connected

00:21:20,630 --> 00:21:24,100
devices are probably the first thing

00:21:25,899 --> 00:21:32,929
there are no users oh yeah

00:21:29,799 --> 00:21:35,389
what okay there are no users on my my

00:21:32,929 --> 00:21:39,950
little clicker thing here so what's the

00:21:35,389 --> 00:21:41,720
security polity need user IDs Android

00:21:39,950 --> 00:21:42,919
already took over the user IDs and then

00:21:41,720 --> 00:21:44,450
discovered that they wanted to have a

00:21:42,919 --> 00:21:50,929
multi-user phone they were in really

00:21:44,450 --> 00:21:52,100
deep trouble so you what do we want here

00:21:50,929 --> 00:21:53,600
and the other thing we're gonna have

00:21:52,100 --> 00:21:56,539
you've got your smart vacu vacuum

00:21:53,600 --> 00:21:59,659
cleaner out there okay how smart does it

00:21:56,539 --> 00:22:02,059
need to be does it need to be smart

00:21:59,659 --> 00:22:05,000
enough to go over to your control panel

00:22:02,059 --> 00:22:09,200
there and call in the aliens probably

00:22:05,000 --> 00:22:10,790
not do you want something

00:22:09,200 --> 00:22:13,970
do you want to have a vacuum cleaner

00:22:10,790 --> 00:22:15,110
that's so smart that after you that when

00:22:13,970 --> 00:22:24,320
you throw it away you have to have the

00:22:15,110 --> 00:22:27,490
funeral again probably not but you know

00:22:24,320 --> 00:22:31,610
what security models do we want in that

00:22:27,490 --> 00:22:34,250
special purpose processors okay what are

00:22:31,610 --> 00:22:36,920
the security implications of having all

00:22:34,250 --> 00:22:43,520
these these smart little devices hooked

00:22:36,920 --> 00:22:47,270
up to your computer you have a GPU how

00:22:43,520 --> 00:22:50,390
do you share your GPU yeah six users on

00:22:47,270 --> 00:22:51,650
your system yeah 400 GPU how do you make

00:22:50,390 --> 00:22:59,690
sure that the right person gets the

00:22:51,650 --> 00:23:01,400
Bitcoin you got your vector crypto

00:22:59,690 --> 00:23:03,650
processors how do you get them

00:23:01,400 --> 00:23:06,590
integrated in your storage processor

00:23:03,650 --> 00:23:10,070
your TCP offload who knows what your

00:23:06,590 --> 00:23:14,050
FPGA that that does some magic

00:23:10,070 --> 00:23:16,310
calculation that makes everything better

00:23:14,050 --> 00:23:19,760
another area people can be working on

00:23:16,310 --> 00:23:21,800
and of course just because we know how

00:23:19,760 --> 00:23:25,550
things work there are going to be lots

00:23:21,800 --> 00:23:28,670
and lots of bugs there give me lots and

00:23:25,550 --> 00:23:32,750
lots as quickly as we're going working

00:23:28,670 --> 00:23:35,240
at hardening the kernel people are going

00:23:32,750 --> 00:23:37,340
to be introducing more bugs that we're

00:23:35,240 --> 00:23:40,310
gonna be detecting because we're making

00:23:37,340 --> 00:23:42,230
things harder and it will be mitigating

00:23:40,310 --> 00:23:46,760
but still you don't want to have to have

00:23:42,230 --> 00:23:49,600
to have the mitigation when you can

00:23:46,760 --> 00:23:52,070
detect it and fix it in the first place

00:23:49,600 --> 00:23:55,970
yeah that is actually a picture of the

00:23:52,070 --> 00:24:01,550
first computer bug it was a moth in a

00:23:55,970 --> 00:24:04,250
relay so there we have it that's why

00:24:01,550 --> 00:24:06,920
come that's why come kernel security is

00:24:04,250 --> 00:24:09,950
cool again that's why it's a great place

00:24:06,920 --> 00:24:13,970
to work it's a great place to contribute

00:24:09,950 --> 00:24:16,480
and it's a place where you can do your

00:24:13,970 --> 00:24:20,420
bit for humanity and mankind

00:24:16,480 --> 00:24:27,990
okay so thank you

00:24:20,420 --> 00:24:36,460
[Applause]

00:24:27,990 --> 00:24:37,980
any questions okay so the question is

00:24:36,460 --> 00:24:47,790
how long is it going to be cool for

00:24:37,980 --> 00:24:51,010
generally we can count on 18 months Bao

00:24:47,790 --> 00:24:53,860
no okay so this current phase of it

00:24:51,010 --> 00:24:56,020
being cool is about six months we're

00:24:53,860 --> 00:24:59,890
about six months into it so we've got

00:24:56,020 --> 00:25:04,030
about another year and then how long

00:24:59,890 --> 00:25:11,920
will the hiatus be probably two two to

00:25:04,030 --> 00:25:13,480
four years no and then we yeah what

00:25:11,920 --> 00:25:17,160
we'll see that's like this one this is

00:25:13,480 --> 00:25:22,510
actually a very very strong cool period

00:25:17,160 --> 00:25:25,060
because because of spectrum meltdown I I

00:25:22,510 --> 00:25:27,040
have a question you talked about mixing

00:25:25,060 --> 00:25:28,690
security models together

00:25:27,040 --> 00:25:31,780
you mentioned that you see the Nexen a

00:25:28,690 --> 00:25:34,270
power when the different security

00:25:31,780 --> 00:25:37,090
approaches sometimes conflicting how do

00:25:34,270 --> 00:25:39,520
you see the overlapping or working

00:25:37,090 --> 00:25:41,650
together in that model okay so when can

00:25:39,520 --> 00:25:43,810
when when security policies conflict

00:25:41,650 --> 00:25:51,010
what you get is this wonderful situation

00:25:43,810 --> 00:25:53,410
where you have a brick and there really

00:25:51,010 --> 00:25:57,190
isn't a whole lot you can do about that

00:25:53,410 --> 00:26:00,250
except soften one of your approaches so

00:25:57,190 --> 00:26:03,310
if you want to have for example a system

00:26:00,250 --> 00:26:05,380
that has strictly capabilities where you

00:26:03,310 --> 00:26:08,230
don't have a super user and you'll want

00:26:05,380 --> 00:26:11,790
to have SELinux you are going to have a

00:26:08,230 --> 00:26:11,790
system that is going to be very

00:26:13,020 --> 00:26:19,380
difficuit e is going to be a power of

00:26:16,540 --> 00:26:23,890
two and your usefulness is going to be

00:26:19,380 --> 00:26:26,140
inverse power of two just because the

00:26:23,890 --> 00:26:31,240
the friendliness of it is going to be

00:26:26,140 --> 00:26:33,490
inverse power of two it's not that

00:26:31,240 --> 00:26:36,070
that's bad

00:26:33,490 --> 00:26:39,010
it's that that's what you're asking for

00:26:36,070 --> 00:26:41,640
and yet it's one of those things where

00:26:39,010 --> 00:26:45,010
if you ask for something really really

00:26:41,640 --> 00:26:46,659
important from technology and it's

00:26:45,010 --> 00:26:52,659
delivered you have to deal with the fact

00:26:46,659 --> 00:26:53,529
that it's been delivered going once

00:26:52,659 --> 00:26:56,799
going twice

00:26:53,529 --> 00:26:59,559
thank you Oh actually no wait a second

00:26:56,799 --> 00:27:02,590
wait wait hold the applause so

00:26:59,559 --> 00:27:04,840
presumably a lot of this work going into

00:27:02,590 --> 00:27:07,590
kernel hardening and whatnot is going

00:27:04,840 --> 00:27:10,750
into mainline kernel that's the idea

00:27:07,590 --> 00:27:13,360
what about us doing embedded devices

00:27:10,750 --> 00:27:16,890
where we're at the mercy of our vendors

00:27:13,360 --> 00:27:20,529
that giving us kernel that's in like

00:27:16,890 --> 00:27:25,260
okay so so the question is is what about

00:27:20,529 --> 00:27:28,260
when I'm getting a binary with no no

00:27:25,260 --> 00:27:28,260
okay

00:27:32,070 --> 00:27:39,250
back port it all right so when you're

00:27:37,270 --> 00:27:41,529
getting when something new comes out

00:27:39,250 --> 00:27:43,240
that makes things better and you've got

00:27:41,529 --> 00:27:46,750
something old and you can't move forward

00:27:43,240 --> 00:27:49,299
what do you do your back port okay

00:27:46,750 --> 00:27:52,630
and if that's more if that's less

00:27:49,299 --> 00:27:54,730
painful than moving moving forward then

00:27:52,630 --> 00:27:59,230
you win and if it's more painful than

00:27:54,730 --> 00:28:00,909
you lose but this is if the old prob

00:27:59,230 --> 00:28:04,090
there Pete still still devices out there

00:28:00,909 --> 00:28:07,799
running to six kernels there are lots of

00:28:04,090 --> 00:28:10,450
devices out there running to six kernels

00:28:07,799 --> 00:28:12,010
there are lots of devices out there in

00:28:10,450 --> 00:28:16,630
fact most of your phone's running three

00:28:12,010 --> 00:28:20,320
three three point something kernels even

00:28:16,630 --> 00:28:22,750
though we're on five now so it's it's an

00:28:20,320 --> 00:28:30,399
age-old problem it's the balance between

00:28:22,750 --> 00:28:35,380
updates and stability there there is no

00:28:30,399 --> 00:28:37,360
magic bullet on that if there were it

00:28:35,380 --> 00:28:40,890
would be great it'd be awesome you

00:28:37,360 --> 00:28:40,890
should get a Lisa masters three for it

00:28:40,990 --> 00:28:44,160
[Music]

00:28:50,160 --> 00:28:54,720
sorry I was gonna say you generally tend

00:28:52,770 --> 00:28:56,700
to do security by defense-in-depth

00:28:54,720 --> 00:29:01,620
and you don't rely only on the kernel to

00:28:56,700 --> 00:29:06,810
secure you that's true and thank you the

00:29:01,620 --> 00:29:09,300
networking stack but if your curl if

00:29:06,810 --> 00:29:13,170
your kernel is compromised then what you

00:29:09,300 --> 00:29:16,110
do in application space has limited use

00:29:13,170 --> 00:29:18,870
if your hardware is corrupt than what

00:29:16,110 --> 00:29:23,520
you do again in the car it has limited

00:29:18,870 --> 00:29:25,200
you so there's the defense-in-depth

00:29:23,520 --> 00:29:27,300
which says yeah we've got seven layers

00:29:25,200 --> 00:29:29,160
here so one gap isn't going to be a

00:29:27,300 --> 00:29:31,770
problem on the other hand you then have

00:29:29,160 --> 00:29:34,170
the chain the chain analogy which is if

00:29:31,770 --> 00:29:39,000
one link is dead then it doesn't matter

00:29:34,170 --> 00:29:42,420
how strong the others are and it's a

00:29:39,000 --> 00:29:45,060
balanced defense-in-depth has its places

00:29:42,420 --> 00:29:48,060
I've also seen it done to death done to

00:29:45,060 --> 00:29:49,500
it to the extent that you've got this

00:29:48,060 --> 00:29:51,000
and this and this and this and this and

00:29:49,500 --> 00:29:52,740
this and this and this and eventually

00:29:51,000 --> 00:29:56,430
they just throw it all away because it's

00:29:52,740 --> 00:29:58,650
so cumbersome and has such performance

00:29:56,430 --> 00:30:01,770
impact that you aren't getting the you

00:29:58,650 --> 00:30:05,490
side of the Machine that you want so

00:30:01,770 --> 00:30:07,560
yeah that's one reason why some of the

00:30:05,490 --> 00:30:09,990
new security models mod models come in

00:30:07,560 --> 00:30:12,390
and you can say and this is what I

00:30:09,990 --> 00:30:15,810
really care about and so I'm just going

00:30:12,390 --> 00:30:18,420
to attack that and I don't yeah the

00:30:15,810 --> 00:30:20,790
users ID stuff I don't care about so

00:30:18,420 --> 00:30:22,410
it's there i but yeah I'm not gonna

00:30:20,790 --> 00:30:29,210
count out I can just use the thing that

00:30:22,410 --> 00:30:32,120
I really do care about hi I am here

00:30:29,210 --> 00:30:33,870
slightly he put I take a question from

00:30:32,120 --> 00:30:36,210
manager point of view

00:30:33,870 --> 00:30:38,540
PHP kind of point of view if I'm

00:30:36,210 --> 00:30:41,940
building a new system X scale type

00:30:38,540 --> 00:30:44,220
hoping that it will last 50 years how

00:30:41,940 --> 00:30:47,130
many nights should I lose sleep a term

00:30:44,220 --> 00:30:49,200
in terms of security or which are the

00:30:47,130 --> 00:30:52,470
opportunities that I have to do things

00:30:49,200 --> 00:30:57,000
relatively right it's just a open

00:30:52,470 --> 00:30:59,160
question so if you're coming at security

00:30:57,000 --> 00:31:00,780
from the point okay so the question is

00:30:59,160 --> 00:31:02,700
yeah I'm gonna be deploying the system

00:31:00,780 --> 00:31:04,970
it's going to be out there for years I'm

00:31:02,700 --> 00:31:09,720
not gonna be able to update it

00:31:04,970 --> 00:31:14,009
you can design it whoa whoa there's a

00:31:09,720 --> 00:31:17,190
concept and that's really your best

00:31:14,009 --> 00:31:19,470
answer is yeah you you the better job

00:31:17,190 --> 00:31:22,049
you do identifying the environment

00:31:19,470 --> 00:31:29,220
you're going into what your threats are

00:31:22,049 --> 00:31:30,659
and what you care about the better off

00:31:29,220 --> 00:31:33,090
you're going to be one of the things

00:31:30,659 --> 00:31:35,999
that most people forget about when they

00:31:33,090 --> 00:31:38,249
design do what they call a threat model

00:31:35,999 --> 00:31:40,649
on the system and the environment is

00:31:38,249 --> 00:31:43,499
going into they forget what it is

00:31:40,649 --> 00:31:45,749
they're out to protect and they put in

00:31:43,499 --> 00:31:47,269
all kinds of things to protect all kinds

00:31:45,749 --> 00:31:49,230
of things they don't care about and

00:31:47,269 --> 00:31:52,259
leave the thing they do care about

00:31:49,230 --> 00:31:54,600
honorable because what I care it's not

00:31:52,259 --> 00:31:57,840
necessarily what the other users or

00:31:54,600 --> 00:31:59,669
funders do care which is not a strange

00:31:57,840 --> 00:32:02,220
conundrum I guess yeah

00:31:59,669 --> 00:32:04,470
so the question is often what do you

00:32:02,220 --> 00:32:05,999
care about and a lot of people come come

00:32:04,470 --> 00:32:09,240
into software design with the notion of

00:32:05,999 --> 00:32:11,999
well somebody's taking care of that so

00:32:09,240 --> 00:32:13,679
I'm just gonna I'm just gonna yeah oh

00:32:11,999 --> 00:32:15,690
yeah the system is all is all secure so

00:32:13,679 --> 00:32:16,919
I'm just gonna just assume that that's

00:32:15,690 --> 00:32:18,480
good because I don't want to have to

00:32:16,919 --> 00:32:21,149
worry about it

00:32:18,480 --> 00:32:22,049
which is one reason why we get treated

00:32:21,149 --> 00:32:23,610
like rock stars

00:32:22,049 --> 00:32:29,999
because you know we come in and we save

00:32:23,610 --> 00:32:34,020
the day all the time okay and anybody

00:32:29,999 --> 00:32:38,250
else well thank you very much

00:32:34,020 --> 00:32:38,250

YouTube URL: https://www.youtube.com/watch?v=GFGJ3e3oj2c


