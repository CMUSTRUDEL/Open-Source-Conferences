Title: px3d: a free software browser based pixel 3D nano-engine in ClojureScript
Publication date: 2020-01-14
Playlist: linux.conf.au 2020
Description: 
	Chris McCormick

https://lca2020.linux.org.au/schedule/presentation/188/

Infinite Lives is a tiny game-jamming collective from Perth. We're building games and tooling with Clojure & ClojureScript. Earlier this year we built px3d, a free software pixel 3D nano-engine that runs in the browser. Built on top of three.js it features a pixel aesthetic and live-reloading of models from Blender. This talk will show off the features of the engine and get you started using it to build games.

linux.conf.au is a conference about the Linux operating system, and all aspects of the thriving ecosystem of Free and Open Source Software that has grown up around it. Run since 1999, in a different Australian or New Zealand city each year, by a team of local volunteers, LCA invites more than 500 people to learn from the people who shape the future of Open Source. For more information on the conference see https://linux.conf.au/

Produced by NDV: https://youtube.com/channel/UCQ7dFBzZGlBvtU2hCecsBBg?sub_confirmation=1

#linux.conf.au #linux #foss #opensource

Mon Jan 13 11:55:00 2020 at Room 6
Captions: 
	00:00:00,140 --> 00:00:05,100
apparently that's my saying for the day

00:00:02,220 --> 00:00:09,150
for some reason us we're into our last

00:00:05,100 --> 00:00:11,849
talk now before lunch so you know a

00:00:09,150 --> 00:00:13,080
heavy burden no it's I always enjoy the

00:00:11,849 --> 00:00:15,230
last talk before lunch it's always my

00:00:13,080 --> 00:00:17,640
favorite talks a lot personally ah so

00:00:15,230 --> 00:00:19,109
and now we've got Chris who is going to

00:00:17,640 --> 00:00:20,730
actually be talking about making his own

00:00:19,109 --> 00:00:22,619
game engine which I actually have a soft

00:00:20,730 --> 00:00:24,359
spot for cuz at every point during my

00:00:22,619 --> 00:00:26,460
development life I make a terrible game

00:00:24,359 --> 00:00:28,349
engine and then throw it away so I have

00:00:26,460 --> 00:00:29,789
such a soft spot for people who also try

00:00:28,349 --> 00:00:31,439
to make their own engines cuz it's a

00:00:29,789 --> 00:00:40,050
fascinating challenge ah

00:00:31,439 --> 00:00:46,230
so take it away Chris turn on the

00:00:40,050 --> 00:00:48,390
microphone is this alright good

00:00:46,230 --> 00:00:49,680
afternoon my name is Chris I'm a

00:00:48,390 --> 00:00:51,449
freelance software developer and I've

00:00:49,680 --> 00:00:54,360
been running Linux on the desktop since

00:00:51,449 --> 00:00:57,059
you had to edit your own X 386 configs

00:00:54,360 --> 00:01:00,449
to get netskope running on your 486 so

00:00:57,059 --> 00:01:02,100
just showing my age I flew in from the

00:01:00,449 --> 00:01:03,690
west coast on the red-eye last night and

00:01:02,100 --> 00:01:04,379
got about one hour of sleep so I

00:01:03,690 --> 00:01:08,610
probably shouldn't be operating

00:01:04,379 --> 00:01:11,100
machinery but we'll see how we go last

00:01:08,610 --> 00:01:12,960
year I built pix 3d it's a free software

00:01:11,100 --> 00:01:14,369
pixel 3d game engine that runs in the

00:01:12,960 --> 00:01:17,939
browser and that's what I'm here to talk

00:01:14,369 --> 00:01:19,770
about today pix 3d came about as a

00:01:17,939 --> 00:01:22,080
result of participating in game jams

00:01:19,770 --> 00:01:28,110
does anyone has anyone here done a game

00:01:22,080 --> 00:01:30,360
jam yes so it's an event where people

00:01:28,110 --> 00:01:33,750
build a video game under very tight time

00:01:30,360 --> 00:01:36,420
constraints often 48 hours I really

00:01:33,750 --> 00:01:38,340
enjoy the game jam format it's a way of

00:01:36,420 --> 00:01:39,990
making games with friends in a time box

00:01:38,340 --> 00:01:42,299
that won't eat into my working hours as

00:01:39,990 --> 00:01:44,579
a freelancer game jams hold some

00:01:42,299 --> 00:01:46,829
important real-world skills as well like

00:01:44,579 --> 00:01:48,590
how to be economical with dev time how

00:01:46,829 --> 00:01:51,000
to avoid scope creep for your projects

00:01:48,590 --> 00:01:52,320
and many of the most interesting

00:01:51,000 --> 00:01:55,140
problems in computer science actually

00:01:52,320 --> 00:01:58,049
crop up in game dev so it's good for

00:01:55,140 --> 00:02:00,119
skill development I'm here as part of

00:01:58,049 --> 00:02:01,409
infinite lives where a game jamming

00:02:00,119 --> 00:02:03,299
collective from Perth started by a

00:02:01,409 --> 00:02:04,790
couple of friends we're mostly building

00:02:03,299 --> 00:02:07,950
game jam games and tooling with closure

00:02:04,790 --> 00:02:09,539
closure is a concise and expressive Lisp

00:02:07,950 --> 00:02:11,970
based language which makes it great for

00:02:09,539 --> 00:02:13,549
rapidly building things so it's perfect

00:02:11,970 --> 00:02:15,810
for the game jam format

00:02:13,549 --> 00:02:19,950
closure runs on a few different runtimes

00:02:15,810 --> 00:02:22,379
including the JVM dotnet node and the

00:02:19,950 --> 00:02:23,970
browser closure script is a variant of

00:02:22,379 --> 00:02:25,890
closure script to transpires to

00:02:23,970 --> 00:02:32,280
JavaScript and runs in the browser

00:02:25,890 --> 00:02:36,299
browser and nodejs I'm also here to tell

00:02:32,280 --> 00:02:38,450
you how to win it hack in use I when I

00:02:36,299 --> 00:02:41,040
announced pix 3d on Hacker News it got

00:02:38,450 --> 00:02:43,109
285 odd votes which is the most of any

00:02:41,040 --> 00:02:46,440
of my posts has ever got and it's spent

00:02:43,109 --> 00:02:47,730
a day on the front page we all know that

00:02:46,440 --> 00:02:49,760
hacker news popularity is the most

00:02:47,730 --> 00:02:52,290
important metric in software quality

00:02:49,760 --> 00:02:53,700
like how when Linus announced the first

00:02:52,290 --> 00:02:55,560
version of the kernel and how can use

00:02:53,700 --> 00:02:58,920
back in 1991 and that's why we're all

00:02:55,560 --> 00:03:01,049
here today anyway I'd love to see more

00:02:58,920 --> 00:03:03,659
of the deep tech from Linux conf

00:03:01,049 --> 00:03:05,280
attendees in people from the free

00:03:03,659 --> 00:03:07,109
software community on the front page of

00:03:05,280 --> 00:03:08,370
hacker news so I'll go through some of

00:03:07,109 --> 00:03:09,930
the things that seem to have worked so

00:03:08,370 --> 00:03:12,090
you can use that info when you publish

00:03:09,930 --> 00:03:14,040
your own work I'll try to avoid the

00:03:12,090 --> 00:03:16,980
dirty word marketing but that's actually

00:03:14,040 --> 00:03:20,400
what this type of activity is called so

00:03:16,980 --> 00:03:22,620
what is pix 3d exactly it's a 3d pixel

00:03:20,400 --> 00:03:25,230
aesthetic game engine that runs in the

00:03:22,620 --> 00:03:27,449
browser it's built on top of the 3GS

00:03:25,230 --> 00:03:28,980
library which itself wraps WebGL which

00:03:27,449 --> 00:03:32,310
is the layer that lets your browser make

00:03:28,980 --> 00:03:33,660
OpenGL calls directly three.js is a

00:03:32,310 --> 00:03:35,220
great library and takes care of the

00:03:33,660 --> 00:03:37,109
rendering input events and a lot of the

00:03:35,220 --> 00:03:40,919
mass basically does most of the heavy

00:03:37,109 --> 00:03:42,180
lifting deploying on the web the web is

00:03:40,919 --> 00:03:43,500
a nice way to play games because you

00:03:42,180 --> 00:03:46,590
don't have to worry about platform

00:03:43,500 --> 00:03:47,879
builds anyone who's been developing for

00:03:46,590 --> 00:03:49,410
a while will know that in the old days

00:03:47,879 --> 00:03:50,430
you'd spent half of the game Jam just

00:03:49,410 --> 00:03:53,510
trying to get the bill to working on

00:03:50,430 --> 00:03:56,159
Windows the two major features of pix 3d

00:03:53,510 --> 00:03:59,099
the opinionated pixel aesthetic and the

00:03:56,159 --> 00:04:00,810
live reloading of blender models it's

00:03:59,099 --> 00:04:04,519
built for rapid iteration during game

00:04:00,810 --> 00:04:04,519
jams rather than production video games

00:04:06,769 --> 00:04:10,019
during a game jam you have to do

00:04:08,669 --> 00:04:12,269
everything as quickly as possible and

00:04:10,019 --> 00:04:15,030
picks 3d came out of a desire to make

00:04:12,269 --> 00:04:16,859
pixel art quickly I found it was much

00:04:15,030 --> 00:04:19,680
farther faster to build a few low poly

00:04:16,859 --> 00:04:22,019
shapes in blender than it was to draw

00:04:19,680 --> 00:04:23,430
every pixel sprite by hand so I got to

00:04:22,019 --> 00:04:25,469
thinking about how to turn 3d models

00:04:23,430 --> 00:04:27,110
into pixel art the pixel thing also

00:04:25,469 --> 00:04:29,240
saves on CPU

00:04:27,110 --> 00:04:30,590
essentially only have to render at one

00:04:29,240 --> 00:04:33,169
quarter of the screen size and then

00:04:30,590 --> 00:04:35,060
scaled it up this means the engine runs

00:04:33,169 --> 00:04:37,099
pretty well in a mobile phone as a

00:04:35,060 --> 00:04:40,090
progressive web app despite the fact

00:04:37,099 --> 00:04:43,520
that it has the entire browser running

00:04:40,090 --> 00:04:46,039
I've I've also been very influenced by

00:04:43,520 --> 00:04:47,120
Lisp ripples and the library learning of

00:04:46,039 --> 00:04:50,210
code that you find in the closure

00:04:47,120 --> 00:04:52,219
universe both major closures group

00:04:50,210 --> 00:04:54,349
routing browser coding environments fig

00:04:52,219 --> 00:04:55,729
wheel and shadow clgs are built around a

00:04:54,349 --> 00:04:57,259
mechanism that hot reloads your

00:04:55,729 --> 00:04:59,539
functions into the browser when you save

00:04:57,259 --> 00:05:02,750
how many people have used a hot

00:04:59,539 --> 00:05:05,509
reloading code environment in a couple

00:05:02,750 --> 00:05:12,020
yeah how many people have used closure

00:05:05,509 --> 00:05:13,370
or closure script one two so you can

00:05:12,020 --> 00:05:15,590
change what a function does for example

00:05:13,370 --> 00:05:17,330
a click event handler save the code

00:05:15,590 --> 00:05:20,090
click the button again and see the new

00:05:17,330 --> 00:05:22,370
behavior without having to refresh and

00:05:20,090 --> 00:05:28,219
reload your application code so I'll

00:05:22,370 --> 00:05:31,129
show you an example of this I'm just

00:05:28,219 --> 00:05:39,190
going to launch the I'm gonna run the

00:05:31,129 --> 00:05:39,190
server and I'm going to edit the source

00:05:50,050 --> 00:05:59,889
oh it's down here okay all right so this

00:05:54,759 --> 00:06:01,900
is a very simple clojurescript poke a

00:05:59,889 --> 00:06:06,759
bit of closure script code running react

00:06:01,900 --> 00:06:08,770
and rendering into the browser basically

00:06:06,759 --> 00:06:13,090
I'm just going to demonstrate the live

00:06:08,770 --> 00:06:16,210
reloading so what's happening here is

00:06:13,090 --> 00:06:17,680
it's doing get element by ID on the

00:06:16,210 --> 00:06:20,979
document and getting an element called

00:06:17,680 --> 00:06:25,710
app in the HTML and that's rendering

00:06:20,979 --> 00:06:28,090
this homepage function into that app div

00:06:25,710 --> 00:06:30,909
and the home page function all it's got

00:06:28,090 --> 00:06:32,580
there is a div with an h2 tag of hello

00:06:30,909 --> 00:06:39,699
world and that's what you can see here

00:06:32,580 --> 00:06:41,979
so now if we add a little button and

00:06:39,699 --> 00:06:44,110
we're gonna save that what this button

00:06:41,979 --> 00:06:46,060
does is it has an onclick handler that

00:06:44,110 --> 00:06:48,190
throws an alert I've saved it and so the

00:06:46,060 --> 00:06:50,530
buttons appeared live in the browser I

00:06:48,190 --> 00:06:54,580
didn't have to refresh it and if I click

00:06:50,530 --> 00:06:57,550
that I get it the event handlers fired

00:06:54,580 --> 00:07:01,770
so it says hello just to prove that

00:06:57,550 --> 00:07:05,380
that's actually running I'll say goodbye

00:07:01,770 --> 00:07:07,659
save that one and when we click at this

00:07:05,380 --> 00:07:09,849
time we haven't refreshed the page but

00:07:07,659 --> 00:07:13,599
we get goodbye it does the same thing

00:07:09,849 --> 00:07:15,460
with CSS and everything else so that it

00:07:13,599 --> 00:07:18,539
means basically the development cycles

00:07:15,460 --> 00:07:24,870
very rapid you can iterate quickly on

00:07:18,539 --> 00:07:24,870
ideas and user interface ideas so yeah

00:07:27,509 --> 00:07:31,750
so coupled with the Lisp syntax where I

00:07:30,460 --> 00:07:34,000
don't know if you notice but when I was

00:07:31,750 --> 00:07:36,580
editing the editing the syntax there you

00:07:34,000 --> 00:07:40,569
get quite a you can basically grab

00:07:36,580 --> 00:07:43,270
things by the braces Lisp helps a lot

00:07:40,569 --> 00:07:44,800
with wrangling code basically makes you

00:07:43,270 --> 00:07:46,389
able to do a lot faster than other

00:07:44,800 --> 00:07:48,520
languages so coupled with the list

00:07:46,389 --> 00:07:51,759
syntax integration there you get good

00:07:48,520 --> 00:07:56,020
productivity gains but I'll try not to

00:07:51,759 --> 00:07:57,310
be too much of a lisp zealot once once

00:07:56,020 --> 00:07:58,870
you've used it it's hard to go back to

00:07:57,310 --> 00:08:00,820
other languages although of course no

00:07:58,870 --> 00:08:02,960
one wants you to deploy Lisp in

00:08:00,820 --> 00:08:05,270
production so you have to

00:08:02,960 --> 00:08:07,250
I wanted to bring this idea of live code

00:08:05,270 --> 00:08:09,289
reloading over to the art side so I

00:08:07,250 --> 00:08:11,090
built a set up that compiles and hot

00:08:09,289 --> 00:08:13,009
reloads your blender for models into the

00:08:11,090 --> 00:08:15,440
running game when you've saved the file

00:08:13,009 --> 00:08:19,580
so I'll show you that now basically what

00:08:15,440 --> 00:08:21,710
I'm going to do is go into pics 3 this

00:08:19,580 --> 00:08:25,660
is the pix 3d engine and I'm gonna say

00:08:21,710 --> 00:08:29,240
make watch and this is going to fire off

00:08:25,660 --> 00:08:32,089
to to background a background task here

00:08:29,240 --> 00:08:39,380
that watches the assets now I'm going to

00:08:32,089 --> 00:08:44,740
open up blender sorry what's going down

00:08:39,380 --> 00:08:47,510
here and I'll do that over here and

00:08:44,740 --> 00:08:50,050
minimize if a blender on the same

00:08:47,510 --> 00:08:52,420
desktop is this so you could see it

00:08:50,050 --> 00:08:59,740
Daisy

00:08:52,420 --> 00:08:59,740
minimize that one and run blender

00:09:04,490 --> 00:09:09,720
so this is the actual pix 3d engine

00:09:07,680 --> 00:09:11,730
itself whoops

00:09:09,720 --> 00:09:18,140
because he basically is rendering 3d

00:09:11,730 --> 00:09:20,940
models in a pixely kind of way and

00:09:18,140 --> 00:09:24,630
blenders started up where's that down

00:09:20,940 --> 00:09:28,260
here so now what I'm gonna do is edit

00:09:24,630 --> 00:09:29,460
those models and you should see them

00:09:28,260 --> 00:09:40,680
update so I'm going to edit this

00:09:29,460 --> 00:09:43,440
spaceship here and okay luckily I happen

00:09:40,680 --> 00:09:47,990
to have it open right there so let's

00:09:43,440 --> 00:09:50,370
grab a few of these vertices and let's

00:09:47,990 --> 00:09:53,060
make a big pole coming out of the top

00:09:50,370 --> 00:10:00,330
and then hit save whoops

00:09:53,060 --> 00:10:08,310
it's not safe and we should see a pop up

00:10:00,330 --> 00:10:10,760
here did I save this now of course

00:10:08,310 --> 00:10:14,850
something's gonna go wrong

00:10:10,760 --> 00:10:16,320
save it's probably stale code it's

00:10:14,850 --> 00:10:16,890
running the wrong code okay let's try

00:10:16,320 --> 00:10:21,330
that again

00:10:16,890 --> 00:10:23,010
so save that one now let's refresh this

00:10:21,330 --> 00:10:27,480
because it's disconnected from the

00:10:23,010 --> 00:10:30,600
server and I'm not connected to the

00:10:27,480 --> 00:10:32,990
Internet sorry just bear with me for two

00:10:30,600 --> 00:10:32,990
seconds

00:10:35,660 --> 00:10:39,530
let's connect to the internet

00:10:50,850 --> 00:10:57,419
I've got some libraries loading off the

00:10:53,429 --> 00:11:01,470
web okay so now we're connected and we

00:10:57,419 --> 00:11:10,769
should be able to refresh this one how

00:11:01,470 --> 00:11:13,999
can I work let's restart the build but

00:11:10,769 --> 00:11:13,999
so the idea is that this background

00:11:15,109 --> 00:11:18,869
where's my so the idea is this

00:11:17,639 --> 00:11:21,239
background task here where it says

00:11:18,869 --> 00:11:22,949
starting blend file rebuilder on public

00:11:21,239 --> 00:11:25,529
models assets dublin down the bottom

00:11:22,949 --> 00:11:30,899
that's watching the asset stop blend

00:11:25,529 --> 00:11:33,559
file and then converts that file into

00:11:30,899 --> 00:11:38,910
the thing that three J's can read and

00:11:33,559 --> 00:11:40,619
when it starts building compiling

00:11:38,910 --> 00:11:42,989
unfortunately one of the things about

00:11:40,619 --> 00:11:44,999
the closure tooling is that closure can

00:11:42,989 --> 00:11:48,449
be quite slow build completed okay now

00:11:44,999 --> 00:11:53,220
let's reload this okay

00:11:48,449 --> 00:11:54,479
now let's zoom in a bit on our ship so

00:11:53,220 --> 00:11:59,249
we can see what's going on now we're

00:11:54,479 --> 00:12:01,019
gonna try that edit again and obviously

00:11:59,249 --> 00:12:04,439
once you've got this all set up it's

00:12:01,019 --> 00:12:06,509
good but if you had to do this every

00:12:04,439 --> 00:12:11,659
time that would be quite annoying but

00:12:06,509 --> 00:12:15,389
now we should see it pop up finally

00:12:11,659 --> 00:12:17,939
alright so yeah the idea is you can be

00:12:15,389 --> 00:12:19,619
here in blender you know on two monitors

00:12:17,939 --> 00:12:21,600
then you can be editing your 3d models

00:12:19,619 --> 00:12:23,369
and your code at the same time and they

00:12:21,600 --> 00:12:26,549
update in the live running game

00:12:23,369 --> 00:12:32,519
and it just makes the feedback loop much

00:12:26,549 --> 00:12:34,409
much tighter so almost all the work done

00:12:32,519 --> 00:12:36,659
here is by blender 3GS and the closure

00:12:34,409 --> 00:12:38,369
script tooling you can see it you can

00:12:36,659 --> 00:12:41,089
access compiled version of that demo if

00:12:38,369 --> 00:12:46,379
you want to check it out online at

00:12:41,089 --> 00:12:48,859
infinite lives github I don't I owe P X

00:12:46,379 --> 00:12:48,859
3d

00:12:52,340 --> 00:12:59,640
so how how it works is simply a giant

00:12:57,150 --> 00:13:01,370
bowl of code spaghetti that looks like

00:12:59,640 --> 00:13:03,870
this

00:13:01,370 --> 00:13:06,390
you have your make file with a rule

00:13:03,870 --> 00:13:08,400
called watch which runs two bits of code

00:13:06,390 --> 00:13:10,140
it runs the blender the shell script

00:13:08,400 --> 00:13:12,060
called watch and build assets and the

00:13:10,140 --> 00:13:15,030
second thing it runs is the shadow seal

00:13:12,060 --> 00:13:17,340
yes closure script compiler these both

00:13:15,030 --> 00:13:21,120
sit there waiting for changes when you

00:13:17,340 --> 00:13:22,710
hit save in blender at the watch and

00:13:21,120 --> 00:13:24,240
build assets grip checks the timestamp

00:13:22,710 --> 00:13:26,220
on the file and if it's newer than the

00:13:24,240 --> 00:13:28,140
last run it it makes a call to a

00:13:26,220 --> 00:13:31,290
separate instance of blender which runs

00:13:28,140 --> 00:13:33,360
in headless mode so that's this here and

00:13:31,290 --> 00:13:38,130
it runs this Python file called export

00:13:33,360 --> 00:13:41,010
scene dot pi excuse me that exports the

00:13:38,130 --> 00:13:44,460
GLB file that three J's can import and

00:13:41,010 --> 00:13:48,090
it also writes and the md5 sum of the

00:13:44,460 --> 00:13:51,330
resulting file into assets or clj so

00:13:48,090 --> 00:13:54,330
this file here when a closure script

00:13:51,330 --> 00:13:56,070
when the closure compiler sees a changed

00:13:54,330 --> 00:13:58,020
file just like it hot reloads code

00:13:56,070 --> 00:14:00,000
anyway it assumes that you've edited

00:13:58,020 --> 00:14:02,160
that file and saved it and that's what

00:14:00,000 --> 00:14:06,360
causes it to hot reload the models back

00:14:02,160 --> 00:14:10,560
into the browser and that's how the

00:14:06,360 --> 00:14:13,020
whole thing works so how can you make a

00:14:10,560 --> 00:14:14,640
game yourself with this I've called it a

00:14:13,020 --> 00:14:16,590
game engine but it's that's a little bit

00:14:14,640 --> 00:14:18,120
aspirational at this stage it's really

00:14:16,590 --> 00:14:20,910
more of a tech demo that you can build a

00:14:18,120 --> 00:14:22,860
game on top of you have to know closure

00:14:20,910 --> 00:14:25,230
script is that's what it's built in but

00:14:22,860 --> 00:14:28,020
this might be a good language to learn

00:14:25,230 --> 00:14:29,070
anyway in the spirit of closure I've

00:14:28,020 --> 00:14:31,020
tried to find the right balance between

00:14:29,070 --> 00:14:32,910
abstract and opinionated so you can take

00:14:31,020 --> 00:14:33,390
this and use it as leverage to make your

00:14:32,910 --> 00:14:35,970
own game

00:14:33,390 --> 00:14:37,530
the pixel aesthetic 3d modeling and live

00:14:35,970 --> 00:14:38,820
reloading are opinionated but beyond

00:14:37,530 --> 00:14:41,310
that you can build whatever type of game

00:14:38,820 --> 00:14:42,840
you like probably the best way to get

00:14:41,310 --> 00:14:46,110
started is simply to fork the repository

00:14:42,840 --> 00:14:47,490
yourself and start tinkering if you do

00:14:46,110 --> 00:14:50,490
that and you have any feedback I'd love

00:14:47,490 --> 00:14:52,110
to hear about it I want to make it easy

00:14:50,490 --> 00:14:53,220
to use picks three days of library and

00:14:52,110 --> 00:14:55,290
I've been doing some work on that this

00:14:53,220 --> 00:14:59,730
month so if you're interested you can

00:14:55,290 --> 00:15:02,450
follow along we're at and infinite lives

00:14:59,730 --> 00:15:04,860
one on Twitter and on our github page

00:15:02,450 --> 00:15:05,980
infinite lives to github today oh you

00:15:04,860 --> 00:15:07,750
can find a

00:15:05,980 --> 00:15:10,480
mailing list signup which is where we

00:15:07,750 --> 00:15:13,450
post when we release new stuff so feel

00:15:10,480 --> 00:15:24,340
free to get in touch so how much time do

00:15:13,450 --> 00:15:26,170
I have cool so now I'm going to take a

00:15:24,340 --> 00:15:29,530
fork in the road and talk about how to

00:15:26,170 --> 00:15:33,370
win it hacker news because this because

00:15:29,530 --> 00:15:34,720
pix 3d went to number one and you know

00:15:33,370 --> 00:15:36,880
hype is not a great measure of quality

00:15:34,720 --> 00:15:38,410
but for something quality should be

00:15:36,880 --> 00:15:40,480
known and appreciated it does require

00:15:38,410 --> 00:15:41,530
attention if you're going to build

00:15:40,480 --> 00:15:42,790
something that you want people to use

00:15:41,530 --> 00:15:45,580
you have to let them know about it

00:15:42,790 --> 00:15:47,050
I've had quite a few projects - well on

00:15:45,580 --> 00:15:49,030
Hacker News now so I'm starting to see

00:15:47,050 --> 00:15:51,370
some trends in what I've had a lot more

00:15:49,030 --> 00:15:53,610
projects not do well so I'm able to see

00:15:51,370 --> 00:15:56,650
what kinds of things work and what doing

00:15:53,610 --> 00:15:58,390
this is a chart of the petition of oops

00:15:56,650 --> 00:16:00,880
sorry this is a chart of the position of

00:15:58,390 --> 00:16:02,290
pix 3d on the day it hit number one as I

00:16:00,880 --> 00:16:03,700
said I'd love to see more free software

00:16:02,290 --> 00:16:05,440
and deep technical content on the front

00:16:03,700 --> 00:16:06,670
page and less gimmicks and politics so

00:16:05,440 --> 00:16:09,250
hopefully you can use this to get

00:16:06,670 --> 00:16:12,180
traction for your own projects this is a

00:16:09,250 --> 00:16:15,430
scientific it's just what worked for me

00:16:12,180 --> 00:16:16,540
the first thing is to do good work they

00:16:15,430 --> 00:16:18,070
don't always get it right but people

00:16:16,540 --> 00:16:19,420
have quite an evolved sense for when

00:16:18,070 --> 00:16:20,590
you've invested time and effort to build

00:16:19,420 --> 00:16:23,200
something versus when you're selling

00:16:20,590 --> 00:16:24,520
snake oil there's no shortcut to doing

00:16:23,200 --> 00:16:27,660
good work you just have to put in the

00:16:24,520 --> 00:16:31,030
time researching and implementing things

00:16:27,660 --> 00:16:32,980
luckily that's a very fun way to spend

00:16:31,030 --> 00:16:34,090
your time so just keep doing what you're

00:16:32,980 --> 00:16:36,040
doing

00:16:34,090 --> 00:16:39,490
pick 3d was very quick to build but only

00:16:36,040 --> 00:16:41,260
happen because of several years you know

00:16:39,490 --> 00:16:48,490
working in disparate areas like browser

00:16:41,260 --> 00:16:50,860
dev games and 3d modelling my slides are

00:16:48,490 --> 00:16:52,360
not updating here less fun for nerds

00:16:50,860 --> 00:16:54,250
like us is telling people about what

00:16:52,360 --> 00:16:55,750
you're doing I've had to train myself to

00:16:54,250 --> 00:16:57,580
do this but it really does help getting

00:16:55,750 --> 00:17:00,340
the word out about your projects when I

00:16:57,580 --> 00:17:01,990
announced picks 3d it I didn't post the

00:17:00,340 --> 00:17:04,120
github page I posted a blog post about

00:17:01,990 --> 00:17:05,050
the tech all you have to do is write

00:17:04,120 --> 00:17:06,910
about what you're doing as much as

00:17:05,050 --> 00:17:08,650
possible it helps to restrict yourself

00:17:06,910 --> 00:17:10,690
in word count if you feel like you have

00:17:08,650 --> 00:17:12,640
to write 2,000 words you won't end up

00:17:10,690 --> 00:17:15,790
doing it and when you do no one will

00:17:12,640 --> 00:17:18,370
read it so writing a low impact you know

00:17:15,790 --> 00:17:19,820
280 word tweet or a short blog post

00:17:18,370 --> 00:17:22,700
setting up word 'ln

00:17:19,820 --> 00:17:24,140
it's an effective thing to do the way I

00:17:22,700 --> 00:17:25,430
think about this is what's the point of

00:17:24,140 --> 00:17:27,500
making something if someone uses it

00:17:25,430 --> 00:17:30,170
writing is a great is a way to help the

00:17:27,500 --> 00:17:31,940
people who need your thing find it so

00:17:30,170 --> 00:17:34,810
yeah I'm trying to get into habit myself

00:17:31,940 --> 00:17:37,760
a voice writing when I'm building things

00:17:34,810 --> 00:17:38,840
there's a great talk on YouTube called

00:17:37,760 --> 00:17:41,000
juice it or lose it

00:17:38,840 --> 00:17:44,000
it's a talk about adding juice to video

00:17:41,000 --> 00:17:47,000
games they take a simple platformer

00:17:44,000 --> 00:17:48,920
which is very flat and they keep adding

00:17:47,000 --> 00:17:50,780
juicy details to it until it feels super

00:17:48,920 --> 00:17:52,640
fun to play you can do the same thing

00:17:50,780 --> 00:17:55,340
with blog posts and github read means

00:17:52,640 --> 00:17:56,720
use animations and sound read some

00:17:55,340 --> 00:17:58,300
design and layout and color theory

00:17:56,720 --> 00:18:00,470
tutorials and apply what you've learned

00:17:58,300 --> 00:18:03,380
work on the copy and rewrite things

00:18:00,470 --> 00:18:06,230
often and get feedback for people the

00:18:03,380 --> 00:18:09,140
game pictured here is not the one from

00:18:06,230 --> 00:18:11,510
the talked juice it'll loosen this is a

00:18:09,140 --> 00:18:13,190
star guard and it's made by Lauren

00:18:11,510 --> 00:18:16,330
Schmidt but it's a great game and you

00:18:13,190 --> 00:18:16,330
should check it out

00:18:16,610 --> 00:18:22,010
use multiple forms of media when you're

00:18:18,830 --> 00:18:24,470
posting I use baizen's record and gif

00:18:22,010 --> 00:18:26,180
sickle to create and edit animated gifs

00:18:24,470 --> 00:18:27,380
so all the animated gifs at the

00:18:26,180 --> 00:18:30,140
beginning of the talk were made using

00:18:27,380 --> 00:18:32,840
these and term - SVG is a good utility

00:18:30,140 --> 00:18:36,050
for recording terminal sessions for the

00:18:32,840 --> 00:18:37,520
web basically it records everything

00:18:36,050 --> 00:18:39,770
you're doing and then you could save it

00:18:37,520 --> 00:18:41,300
as an SVG and publish it the great thing

00:18:39,770 --> 00:18:42,860
about that is it's just an image so it

00:18:41,300 --> 00:18:47,560
shows up on your you can put it on your

00:18:42,860 --> 00:18:49,760
github page and stuff like that so

00:18:47,560 --> 00:18:52,010
compelling title is important especially

00:18:49,760 --> 00:18:55,000
with the hacker news thing I think a

00:18:52,010 --> 00:18:57,470
title really helps that initial traction

00:18:55,000 --> 00:19:00,020
think about when you want from blog post

00:18:57,470 --> 00:19:01,850
or a github project like basically you

00:19:00,020 --> 00:19:03,770
want to learn something and you want to

00:19:01,850 --> 00:19:06,680
be entertained so do this for your own

00:19:03,770 --> 00:19:07,940
readers your title or github byline

00:19:06,680 --> 00:19:09,380
should tell the user what superpower

00:19:07,940 --> 00:19:11,270
they're going to gain by using a

00:19:09,380 --> 00:19:13,730
software your text and images should

00:19:11,270 --> 00:19:15,740
entertain them a bit so like instead of

00:19:13,730 --> 00:19:18,740
it's a widget builder implemented in

00:19:15,740 --> 00:19:21,080
Python say build web widgets faster in

00:19:18,740 --> 00:19:22,580
Python so you you know the second one

00:19:21,080 --> 00:19:24,650
tells the user what super how they're

00:19:22,580 --> 00:19:27,560
going to get when they install it and

00:19:24,650 --> 00:19:30,110
it's more fun to read the other thing is

00:19:27,560 --> 00:19:31,640
posting often because most stuff you

00:19:30,110 --> 00:19:33,590
post on how can use is going to tank

00:19:31,640 --> 00:19:35,840
most projects are going to get

00:19:33,590 --> 00:19:37,100
nor the first time you post them and as

00:19:35,840 --> 00:19:39,770
I'll show you in a second it's quite

00:19:37,100 --> 00:19:40,970
random one gets up there here's a list

00:19:39,770 --> 00:19:43,039
of some of the stuff I've posted on

00:19:40,970 --> 00:19:45,679
Hacker News most of them are show how

00:19:43,039 --> 00:19:47,990
can use items which my own projects I'm

00:19:45,679 --> 00:19:50,870
trying to spread the word about most of

00:19:47,990 --> 00:19:52,490
the only have 1 or 3 stars at first when

00:19:50,870 --> 00:19:54,230
you do this it feels bad but you get

00:19:52,490 --> 00:19:55,640
used to it after a while and it frees

00:19:54,230 --> 00:19:57,770
you from having to care about what

00:19:55,640 --> 00:20:01,570
hacker news thinks and it's more just a

00:19:57,770 --> 00:20:01,570
tool for getting your stuff out there

00:20:01,779 --> 00:20:06,140
now imagine if you spent your whole life

00:20:03,830 --> 00:20:08,510
working on one thing and then posted it

00:20:06,140 --> 00:20:10,549
once an intact that would be pretty

00:20:08,510 --> 00:20:12,080
brutal so instead you should post each

00:20:10,549 --> 00:20:15,590
time you add a new feature or make a

00:20:12,080 --> 00:20:17,510
release that way a lot of times it will

00:20:15,590 --> 00:20:21,590
tank but then sometimes you'll get some

00:20:17,510 --> 00:20:23,630
traction to demonstrate this point I

00:20:21,590 --> 00:20:25,460
have a pretty good a be test I posted

00:20:23,630 --> 00:20:26,659
one of my projects as an as a show I can

00:20:25,460 --> 00:20:28,399
use and then a couple of hours later

00:20:26,659 --> 00:20:32,720
someone posted the exact same project

00:20:28,399 --> 00:20:35,419
again my post got six up votes and his

00:20:32,720 --> 00:20:37,130
post got 100 now 48 are boots I have no

00:20:35,419 --> 00:20:39,140
idea why they were the exact same URL

00:20:37,130 --> 00:20:43,580
and the title only had two words

00:20:39,140 --> 00:20:45,590
different show HN so yeah don't worry

00:20:43,580 --> 00:20:47,000
about what I can use things increase

00:20:45,590 --> 00:20:48,559
your chances of exposure by posting

00:20:47,000 --> 00:20:52,130
stuff often and then focus on making

00:20:48,559 --> 00:20:53,600
your things quality and all this advice

00:20:52,130 --> 00:20:56,480
goes for other media too I think

00:20:53,600 --> 00:20:57,529
like Twitter product hunt etc this year

00:20:56,480 --> 00:20:59,690
I've been trying to learn about this

00:20:57,529 --> 00:21:01,429
like elusive marketing thing and this is

00:20:59,690 --> 00:21:02,929
basically what I figured out you just

00:21:01,429 --> 00:21:04,100
got to do a lot of it you'll be putting

00:21:02,929 --> 00:21:07,399
stuff out there all the time and just

00:21:04,100 --> 00:21:12,049
try and make a good quality and bring

00:21:07,399 --> 00:21:13,940
value to people so this one's less

00:21:12,049 --> 00:21:16,159
important but I generally post just

00:21:13,940 --> 00:21:18,409
before New York wakes up it's not

00:21:16,159 --> 00:21:21,200
scientific but based on an analysis of

00:21:18,409 --> 00:21:23,149
my own posts there were lots which

00:21:21,200 --> 00:21:24,529
tanked when I did post at that time but

00:21:23,149 --> 00:21:27,230
all of the ones that did well were

00:21:24,529 --> 00:21:28,760
mostly clustered around that time it

00:21:27,230 --> 00:21:32,600
could be coincidence but for my dataset

00:21:28,760 --> 00:21:33,919
it seems to hold yeah thanks very much

00:21:32,600 --> 00:21:36,169
for coming closer to me talk I hope you

00:21:33,919 --> 00:21:37,549
enjoyed it and learned some stuff if you

00:21:36,169 --> 00:21:40,549
want to stay in touch you can find me at

00:21:37,549 --> 00:21:42,289
mcCormick dot CX that's my website I

00:21:40,549 --> 00:21:44,720
also have a newsletter there you can

00:21:42,289 --> 00:21:46,840
sign up to I'm building a ton of

00:21:44,720 --> 00:21:48,050
experimental software on

00:21:46,840 --> 00:21:51,530
decentralization

00:21:48,050 --> 00:21:54,490
web stuff music tech and I post about

00:21:51,530 --> 00:21:59,030
that you can also follow me on twitter

00:21:54,490 --> 00:22:01,280
mcc rmx is my handle and i'm also giving

00:21:59,030 --> 00:22:03,320
a talk later on wednesday at in the main

00:22:01,280 --> 00:22:04,850
part of the conference on a piece of

00:22:03,320 --> 00:22:06,710
software called Picou which is a bit

00:22:04,850 --> 00:22:09,140
more technical that lets you do git push

00:22:06,710 --> 00:22:11,840
deployments to your own service so

00:22:09,140 --> 00:22:13,490
pushing stuff up into the cloud in a way

00:22:11,840 --> 00:22:15,350
that's similar to like Heroku so if

00:22:13,490 --> 00:22:17,630
you're interested in that check that

00:22:15,350 --> 00:22:21,920
talk out on Wednesday and I should have

00:22:17,630 --> 00:22:33,050
had some sleep by then so yeah thank you

00:22:21,920 --> 00:22:34,460
very much for having me no I've got one

00:22:33,050 --> 00:22:37,400
how long did it take to get the Blin to

00:22:34,460 --> 00:22:41,900
hold loading working it was about an

00:22:37,400 --> 00:22:43,340
afternoon or two but it was basically

00:22:41,900 --> 00:22:46,490
because all those pieces were written

00:22:43,340 --> 00:22:47,870
already but because I like used a bunch

00:22:46,490 --> 00:22:50,620
of different software across different

00:22:47,870 --> 00:22:52,970
fields I was able to join it together

00:22:50,620 --> 00:22:53,660
like the library loading think came from

00:22:52,970 --> 00:22:55,880
clojurescript

00:22:53,660 --> 00:22:57,380
blender is scriptable with Python and

00:22:55,880 --> 00:22:58,850
because I've done some other work in the

00:22:57,380 --> 00:23:11,810
past with that I knew how to do it quite

00:22:58,850 --> 00:23:14,270
easily have you seen people using this

00:23:11,810 --> 00:23:18,830
in game jams and what was one of your

00:23:14,270 --> 00:23:21,650
favorite things no I haven't yet because

00:23:18,830 --> 00:23:23,930
it's very it's a you don't you only

00:23:21,650 --> 00:23:26,450
released it like a couple of months ago

00:23:23,930 --> 00:23:28,250
and it's it's not that usable at the

00:23:26,450 --> 00:23:31,250
moment it's more of a tech demo but uh

00:23:28,250 --> 00:23:32,960
yeah this this during January I'm

00:23:31,250 --> 00:23:35,330
working on getting it into a bit more

00:23:32,960 --> 00:23:38,390
abstract so for example I would like to

00:23:35,330 --> 00:23:40,610
break the Python tool the blender Python

00:23:38,390 --> 00:23:41,930
integration out into a separate thing so

00:23:40,610 --> 00:23:46,180
that you could use it with just raw

00:23:41,930 --> 00:23:46,180
JavaScript if you wanted so yeah

00:23:52,330 --> 00:23:58,610
so the way this actually works with the

00:23:55,550 --> 00:24:00,500
3d drawing is that done does it use any

00:23:58,610 --> 00:24:02,360
Dom manipulation in that like you showed

00:24:00,500 --> 00:24:04,880
in that little closer demo or is this

00:24:02,360 --> 00:24:08,360
all canvas based this rendering here

00:24:04,880 --> 00:24:10,850
yeah yes so that's a hundred percent so

00:24:08,360 --> 00:24:14,080
the way it's three J's so the three J's

00:24:10,850 --> 00:24:18,080
library is a JavaScript library which

00:24:14,080 --> 00:24:20,180
abstracts away WebGL and a WebGL is a

00:24:18,080 --> 00:24:22,760
wraparound opengl so if you've ever done

00:24:20,180 --> 00:24:24,410
any OpenGL programming it's very

00:24:22,760 --> 00:24:27,650
low-level you're talking directly to the

00:24:24,410 --> 00:24:29,690
graphics card what 3GS does is add a

00:24:27,650 --> 00:24:32,120
bunch of abstraction on top of that so

00:24:29,690 --> 00:24:34,850
like that spaceship there has an object

00:24:32,120 --> 00:24:38,000
and you can you know set the x and y

00:24:34,850 --> 00:24:41,540
position and stuff like that what I've

00:24:38,000 --> 00:24:45,890
added is the particular aesthetics so

00:24:41,540 --> 00:24:48,560
making it pixelated and some of the

00:24:45,890 --> 00:24:52,040
shader like the shadows and things like

00:24:48,560 --> 00:24:54,320
that and also the hot reloading so what

00:24:52,040 --> 00:24:56,900
is that box the box that has the 3d

00:24:54,320 --> 00:24:58,550
drawing in it what is that is that like

00:24:56,900 --> 00:25:00,470
that's a browser yeah it's a browser

00:24:58,550 --> 00:25:03,770
window yeah but you've obviously got a

00:25:00,470 --> 00:25:06,380
Dom element up there as well is that is

00:25:03,770 --> 00:25:10,370
that Dom or is that within the within

00:25:06,380 --> 00:25:12,200
there is the whole thing a 3d scene or

00:25:10,370 --> 00:25:16,040
is that okay yeah I get I get everything

00:25:12,200 --> 00:25:18,410
sorry okay so yeah it's runs inside an

00:25:16,040 --> 00:25:20,960
element so you've got like a so you tell

00:25:18,410 --> 00:25:22,880
3j s rendered into this div element and

00:25:20,960 --> 00:25:24,650
I've just made that development the size

00:25:22,880 --> 00:25:28,010
of the whole window but yeah you're

00:25:24,650 --> 00:25:30,770
right this little frame rate measurement

00:25:28,010 --> 00:25:34,490
thing here is a separate give sitting on

00:25:30,770 --> 00:25:38,630
top of it and you can add stuff on top

00:25:34,490 --> 00:25:41,300
so like OpenGL is it's difficult to do

00:25:38,630 --> 00:25:42,770
text rendering but you can just do it

00:25:41,300 --> 00:25:44,840
with the browser so you can just overlay

00:25:42,770 --> 00:25:47,420
text on top which is quite useful yeah

00:25:44,840 --> 00:25:50,510
and when you win it re-renders so when

00:25:47,420 --> 00:25:52,840
it updates the model it keeps the same

00:25:50,510 --> 00:25:55,550
state in the application but it just

00:25:52,840 --> 00:25:59,780
renders a new frame is that way it works

00:25:55,550 --> 00:26:01,970
so what it's doing there is it's taking

00:25:59,780 --> 00:26:03,570
the so all of these assets are in one

00:26:01,970 --> 00:26:06,660
file

00:26:03,570 --> 00:26:08,429
3d models and they're getting repot

00:26:06,660 --> 00:26:10,440
loaded into the browser and it's

00:26:08,429 --> 00:26:13,559
replacing all the ones that are on in

00:26:10,440 --> 00:26:15,360
the mesh in the scene so 3GS has a scene

00:26:13,559 --> 00:26:17,700
graph oh do you know a scene graph ruse

00:26:15,360 --> 00:26:19,559
it's like yeah it yeah so three jet has

00:26:17,700 --> 00:26:21,210
a scene graph and it's replacing the

00:26:19,559 --> 00:26:24,870
models in the scene graph with the new

00:26:21,210 --> 00:26:27,350
ones but it's not actually re running

00:26:24,870 --> 00:26:30,120
the application from the start it's yeah

00:26:27,350 --> 00:26:31,950
yeah and that's a closure scripting is

00:26:30,120 --> 00:26:33,600
don't rerun the whole thing from the

00:26:31,950 --> 00:26:36,419
start like you can maintain state

00:26:33,600 --> 00:26:39,270
between hot reloads of your functions so

00:26:36,419 --> 00:26:40,230
if you write your code in a functional

00:26:39,270 --> 00:26:42,390
style rather than like an

00:26:40,230 --> 00:26:44,280
object-oriented style it's much easier

00:26:42,390 --> 00:26:46,110
to get it working because you've just

00:26:44,280 --> 00:26:47,940
got pure side-effect free functions and

00:26:46,110 --> 00:26:49,350
you can report they get replaced and

00:26:47,940 --> 00:26:57,150
then the new function gets called the

00:26:49,350 --> 00:26:59,720
next time you have any questions no then

00:26:57,150 --> 00:27:04,700
join me in thanking Chris once again

00:26:59,720 --> 00:27:04,700

YouTube URL: https://www.youtube.com/watch?v=Ny5CEsTDp6w


