Title: "The Psychology of Multi-Factor Authentication" - William Brown (LCA 2020)
Publication date: 2020-01-15
Playlist: linux.conf.au 2020
Description: 
	William Brown

https://lca2020.linux.org.au/schedule/presentation/113/

Multi Factor Authentication is becoming more important in our infrastructure, with organisations starting to require it for sensitive accounts and more. So why does Multi Factor Authentication ... work? How does human behaviour influence our security and interact with threats that exist online?

Come along and learn about human interaction and design, the psychology of how humans interact with systems. We'll extend this into security to understand why human error is really the fault of poor systems design. Finally we'll talk about different threats and how MFA works to protect us from them - at a psychological level.

linux.conf.au is a conference about the Linux operating system, and all aspects of the thriving ecosystem of Free and Open Source Software that has grown up around it. Run since 1999, in a different Australian or New Zealand city each year, by a team of local volunteers, LCA invites more than 500 people to learn from the people who shape the future of Open Source. For more information on the conference see https://linux.conf.au/

Produced by NDV: https://youtube.com/channel/UCQ7dFBzZGlBvtU2hCecsBBg?sub_confirmation=1

#linux.conf.au #linux #foss #opensource

Tue Jan 14 16:35:00 2020 at Room 6
Captions: 
	00:00:00,030 --> 00:00:10,590
William Brown all right thanks thank you

00:00:08,340 --> 00:00:12,179
all for coming and I know it's been a

00:00:10,590 --> 00:00:14,280
very long day this is the last session

00:00:12,179 --> 00:00:15,870
and I'm hope that you've all enjoyed the

00:00:14,280 --> 00:00:18,900
security identity and privacy mini-com

00:00:15,870 --> 00:00:21,600
it's been very interesting for me so

00:00:18,900 --> 00:00:24,050
first Who am I my name is William Brown

00:00:21,600 --> 00:00:26,369
I'm a senior software engineer at Sousa

00:00:24,050 --> 00:00:30,390
you can generally better find me online

00:00:26,369 --> 00:00:31,859
as first year I am by day I write LDAP

00:00:30,390 --> 00:00:33,750
servers so I specialize in

00:00:31,859 --> 00:00:35,489
authentication I really live and breathe

00:00:33,750 --> 00:00:37,500
that space and I also have another

00:00:35,489 --> 00:00:40,020
project for this which is carne diem

00:00:37,500 --> 00:00:41,460
based in Queensland Australia which

00:00:40,020 --> 00:00:43,350
means that for our international guests

00:00:41,460 --> 00:00:44,730
that's UTC plus 10 so the best way to

00:00:43,350 --> 00:00:47,370
contact me if you have questions later

00:00:44,730 --> 00:00:49,440
is email for those of you who aren't

00:00:47,370 --> 00:00:51,899
able to read this it's W Brown at Susi

00:00:49,440 --> 00:00:54,090
de and if anyone is wondering

00:00:51,899 --> 00:00:55,500
you may take photos of me and the slide

00:00:54,090 --> 00:00:58,680
content during the presentation of post

00:00:55,500 --> 00:01:01,109
online so enough of that let's not talk

00:00:58,680 --> 00:01:04,850
about authentication for a second let's

00:01:01,109 --> 00:01:07,560
talk about doors now here is our lovely

00:01:04,850 --> 00:01:09,030
one of our lovely mini-com Forgan eyes

00:01:07,560 --> 00:01:11,670
are standing in front of his favorite

00:01:09,030 --> 00:01:14,130
door doors are something that we

00:01:11,670 --> 00:01:16,080
interact with daily there is something

00:01:14,130 --> 00:01:17,580
that we use to keep things out such as

00:01:16,080 --> 00:01:20,310
at the moment the noise in the corridor

00:01:17,580 --> 00:01:22,530
or things in such as our pets that we

00:01:20,310 --> 00:01:24,450
love dearly doors often have

00:01:22,530 --> 00:01:27,630
authentication such as keys or bearer

00:01:24,450 --> 00:01:31,680
tokens or JWT s you have some really odd

00:01:27,630 --> 00:01:33,290
hot hobbies anyway but doors have a

00:01:31,680 --> 00:01:39,600
problem

00:01:33,290 --> 00:01:43,350
documentation it's a door why do we need

00:01:39,600 --> 00:01:46,290
to document this who here has gone to a

00:01:43,350 --> 00:01:48,689
door and pushed on it and it didn't move

00:01:46,290 --> 00:01:49,950
hands off guard who's done it for those

00:01:48,689 --> 00:01:51,290
of you who can sir the audience it's a

00:01:49,950 --> 00:01:53,490
hundred percent of people in the room

00:01:51,290 --> 00:01:55,840
because anyone who kept their hand down

00:01:53,490 --> 00:01:58,180
as a liar

00:01:55,840 --> 00:02:00,579
and the thing is is that within this

00:01:58,180 --> 00:02:03,430
room we have a lot of very smart people

00:02:00,579 --> 00:02:05,970
and yet when we go to these doors we

00:02:03,430 --> 00:02:09,340
feel stupid but that's not the case

00:02:05,970 --> 00:02:11,440
maybe we aren't stupid well I hope we're

00:02:09,340 --> 00:02:12,459
not stupid maybe there's something else

00:02:11,440 --> 00:02:14,650
here that's wrong

00:02:12,459 --> 00:02:17,280
maybe the interface the interaction that

00:02:14,650 --> 00:02:19,810
has occurred has a flaw

00:02:17,280 --> 00:02:21,670
there's an entire field of study into

00:02:19,810 --> 00:02:24,670
human interaction and human factors as

00:02:21,670 --> 00:02:27,069
part of psychology I'm no means an

00:02:24,670 --> 00:02:29,680
expert in this topic and so you know

00:02:27,069 --> 00:02:33,040
please look at other people's research

00:02:29,680 --> 00:02:35,860
before you you know go on but this thing

00:02:33,040 --> 00:02:37,720
is that this field researches the human

00:02:35,860 --> 00:02:40,720
interaction from seemingly simple things

00:02:37,720 --> 00:02:42,760
like doors cutlery chairs all the way to

00:02:40,720 --> 00:02:44,830
complex systems like a nuclear power

00:02:42,760 --> 00:02:48,160
plant control room or an airplanes

00:02:44,830 --> 00:02:51,970
cockpit in its control systems now when

00:02:48,160 --> 00:02:55,510
these interfaces do not match these

00:02:51,970 --> 00:02:57,849
human interaction principles we start to

00:02:55,510 --> 00:03:00,519
encounter problems in how those

00:02:57,849 --> 00:03:03,250
interactions unfold the Three Mile

00:03:00,519 --> 00:03:06,220
Island nuclear accident was a disaster

00:03:03,250 --> 00:03:08,350
that occurred in 1979 and the cause was

00:03:06,220 --> 00:03:11,650
determined to be a confusion about this

00:03:08,350 --> 00:03:14,680
very control room pictured the control

00:03:11,650 --> 00:03:16,930
room was confusing and ambiguous the

00:03:14,680 --> 00:03:19,000
operators of the room did not actually

00:03:16,930 --> 00:03:21,280
know that a disaster was occurring

00:03:19,000 --> 00:03:23,920
because the controls were so confusing

00:03:21,280 --> 00:03:26,290
they did not know that the entire place

00:03:23,920 --> 00:03:30,310
was about to melt down on them the human

00:03:26,290 --> 00:03:32,049
interaction was flawed at the time this

00:03:30,310 --> 00:03:34,720
incident was investigated by Don Norman

00:03:32,049 --> 00:03:37,690
who had his claims dismissed

00:03:34,720 --> 00:03:40,660
of course he's since gone on to author

00:03:37,690 --> 00:03:43,299
multiple books papers and other things

00:03:40,660 --> 00:03:44,709
on design and interaction and he signed

00:03:43,299 --> 00:03:47,560
the base set of principles about how

00:03:44,709 --> 00:03:49,540
humans interact with our systems now

00:03:47,560 --> 00:03:51,100
this is no means exhaustive but it's a

00:03:49,540 --> 00:03:53,290
really good place to start for an

00:03:51,100 --> 00:03:55,630
initial understanding of how we work

00:03:53,290 --> 00:03:58,840
with these systems and these principles

00:03:55,630 --> 00:04:02,590
our visibility affordance consistency

00:03:58,840 --> 00:04:05,760
mapping feedback and constraint so let's

00:04:02,590 --> 00:04:09,110
go through each of them visibility

00:04:05,760 --> 00:04:10,910
humans discover elements the

00:04:09,110 --> 00:04:13,300
they can interact with for an interface

00:04:10,910 --> 00:04:15,980
by visually seeing what's possible a

00:04:13,300 --> 00:04:18,260
button for example may have a contour or

00:04:15,980 --> 00:04:20,510
color around it a door handle is

00:04:18,260 --> 00:04:22,820
extruded from the door or maybe there's

00:04:20,510 --> 00:04:24,380
a different color for some people who

00:04:22,820 --> 00:04:26,450
are blind maybe the surfaces are

00:04:24,380 --> 00:04:29,000
textured in unique ways for feel or they

00:04:26,450 --> 00:04:31,160
emit noise to help them locate them here

00:04:29,000 --> 00:04:34,510
it's really obvious where the button is

00:04:31,160 --> 00:04:37,340
it's visually identifiable to you

00:04:34,510 --> 00:04:39,680
affordance these are visual attributes

00:04:37,340 --> 00:04:42,830
of the control that give a hint as to

00:04:39,680 --> 00:04:45,800
how it works a dial would turn a button

00:04:42,830 --> 00:04:47,540
is pressed and handle is pulled and this

00:04:45,800 --> 00:04:50,000
is really where our doors break down

00:04:47,540 --> 00:04:53,620
they used the wrong type of control and

00:04:50,000 --> 00:04:56,990
that affords the incorrect action

00:04:53,620 --> 00:04:59,720
consistency consistent rolls that look

00:04:56,990 --> 00:05:01,700
the same should behave the same way -

00:04:59,720 --> 00:05:04,730
dials should both rotate rather than say

00:05:01,700 --> 00:05:07,340
one push and one rotate taps are a

00:05:04,730 --> 00:05:09,890
really good example of consistency hot

00:05:07,340 --> 00:05:12,890
is always on the left so even this

00:05:09,890 --> 00:05:14,300
unmarked tap in my hotel room or it

00:05:12,890 --> 00:05:16,430
should be always be on the left and if

00:05:14,300 --> 00:05:18,520
it's not that is a violation of

00:05:16,430 --> 00:05:22,729
consistency which is exactly the problem

00:05:18,520 --> 00:05:25,100
right this this one is consistent so

00:05:22,729 --> 00:05:26,500
even though it is unmarked it works the

00:05:25,100 --> 00:05:29,690
way we expect

00:05:26,500 --> 00:05:33,140
now mapping this is the relationship

00:05:29,690 --> 00:05:35,540
between controls and its effects so the

00:05:33,140 --> 00:05:37,669
knobs on a stove should be laid out in

00:05:35,540 --> 00:05:40,340
the same arrangement as the burners so

00:05:37,669 --> 00:05:42,440
this stove is an example of poor mapping

00:05:40,340 --> 00:05:45,800
the burners are laid out horizontally

00:05:42,440 --> 00:05:48,169
and yet the knobs of vertical such as

00:05:45,800 --> 00:05:50,360
this and this means that there is now

00:05:48,169 --> 00:05:55,130
documentation on our stove to make up

00:05:50,360 --> 00:05:57,919
for the poor design feedback when a

00:05:55,130 --> 00:06:00,260
control is used we need a way to know

00:05:57,919 --> 00:06:02,870
that an action has occurred a button

00:06:00,260 --> 00:06:05,450
made a press and a sound place or an

00:06:02,870 --> 00:06:08,780
indicator and a light changes a lack of

00:06:05,450 --> 00:06:10,280
feedback can confuse people and a really

00:06:08,780 --> 00:06:12,770
good example of this is pedestrian

00:06:10,280 --> 00:06:14,540
buttons in Australian New Zealand you

00:06:12,770 --> 00:06:17,060
don't know if your input has been

00:06:14,540 --> 00:06:19,360
received this is why people stand at the

00:06:17,060 --> 00:06:21,620
lights mashing the button like this

00:06:19,360 --> 00:06:23,240
because they don't know if it's worked

00:06:21,620 --> 00:06:24,410
and I haven't been

00:06:23,240 --> 00:06:26,000
what outstanding it lights where the

00:06:24,410 --> 00:06:26,389
button input' wasn't received and had to

00:06:26,000 --> 00:06:30,380
wait

00:06:26,389 --> 00:06:32,690
and finally constraints limits on these

00:06:30,380 --> 00:06:35,690
controls to prevent invalid or unsafe

00:06:32,690 --> 00:06:37,729
States for example gas and water

00:06:35,690 --> 00:06:39,229
fittings screw the opposite direction so

00:06:37,729 --> 00:06:41,930
they can never be accidentally connected

00:06:39,229 --> 00:06:44,240
all car big ear boxes will not let you

00:06:41,930 --> 00:06:48,460
select reverse while going above a

00:06:44,240 --> 00:06:50,630
certain amount of a certain speed now

00:06:48,460 --> 00:06:53,569
computers are systems that we interact

00:06:50,630 --> 00:06:55,009
with as well all of these principles

00:06:53,569 --> 00:06:58,069
apply to how we interact with computers

00:06:55,009 --> 00:06:59,449
and there's many more on top Apple

00:06:58,069 --> 00:07:02,270
Microsoft KDE

00:06:59,449 --> 00:07:05,210
Android they all provide human interface

00:07:02,270 --> 00:07:07,580
guidelines these human interface

00:07:05,210 --> 00:07:09,710
guidelines encompass these principles

00:07:07,580 --> 00:07:11,990
were just covered and many more to help

00:07:09,710 --> 00:07:14,870
you design user interactions and

00:07:11,990 --> 00:07:16,639
graphical user interfaces and it's

00:07:14,870 --> 00:07:19,039
really important that these exist and

00:07:16,639 --> 00:07:21,110
that they are followed not just for

00:07:19,039 --> 00:07:24,409
consistency of the applications that you

00:07:21,110 --> 00:07:26,210
develop but also for accessibility a lot

00:07:24,409 --> 00:07:28,669
of accessibility tools such as screen

00:07:26,210 --> 00:07:31,849
readers rely on you adhering to your

00:07:28,669 --> 00:07:33,590
frameworks human interface guidelines so

00:07:31,849 --> 00:07:37,070
to discuss this let's actually look at a

00:07:33,590 --> 00:07:39,430
human a UI and talk about some of these

00:07:37,070 --> 00:07:42,409
elements and how we interact with them

00:07:39,430 --> 00:07:44,180
so menus have dropdowns this gives you

00:07:42,409 --> 00:07:47,150
immediate feedback that your click has

00:07:44,180 --> 00:07:49,099
been received and of course because

00:07:47,150 --> 00:07:50,750
you're using the framework all of these

00:07:49,099 --> 00:07:53,960
menu items can be found by a screen

00:07:50,750 --> 00:07:56,150
reader these menus have consistent items

00:07:53,960 --> 00:07:58,550
that don't change between invitations

00:07:56,150 --> 00:08:00,110
and they show what can be done based on

00:07:58,550 --> 00:08:02,090
current constraints which is why these

00:08:00,110 --> 00:08:06,169
items are grayed out they are now

00:08:02,090 --> 00:08:08,120
inactive keyboard shortcuts are listed

00:08:06,169 --> 00:08:10,789
next to their actions to aid in

00:08:08,120 --> 00:08:13,210
discoverability so that future uses you

00:08:10,789 --> 00:08:15,860
can then use the keyboard shortcut

00:08:13,210 --> 00:08:18,310
buttons are visually identifiable as

00:08:15,860 --> 00:08:20,960
areas to interact with as a mouse and

00:08:18,310 --> 00:08:22,610
the location that is editable is

00:08:20,960 --> 00:08:24,830
visually distinct from the mouse

00:08:22,610 --> 00:08:28,669
interaction spaces affording that you

00:08:24,830 --> 00:08:32,060
type into that area of course when these

00:08:28,669 --> 00:08:34,810
rules are abused and broken it feels

00:08:32,060 --> 00:08:37,240
like you're standing at the door again I

00:08:34,810 --> 00:08:40,089
have a look at this website called

00:08:37,240 --> 00:08:43,930
in your face calm it is a hell of an

00:08:40,089 --> 00:08:48,279
experience okay is according to my

00:08:43,930 --> 00:08:49,960
friend she said oh dear God I'm sure to

00:08:48,279 --> 00:08:53,920
trash fire on desktop but it is

00:08:49,960 --> 00:08:55,240
something special on mobile as you're

00:08:53,920 --> 00:08:57,370
going through this website and I

00:08:55,240 --> 00:08:59,470
strongly recommend you go and have a go

00:08:57,370 --> 00:09:01,450
of this website you should think about

00:08:59,470 --> 00:09:04,060
what principles are actually being

00:09:01,450 --> 00:09:07,330
broken in order to trick you and to make

00:09:04,060 --> 00:09:09,580
you have a bad experience of course

00:09:07,330 --> 00:09:11,980
these rules also get violated in order

00:09:09,580 --> 00:09:13,660
to coerce us think about modern websites

00:09:11,980 --> 00:09:16,209
they weaponize these design principles

00:09:13,660 --> 00:09:18,610
against you for example when you're

00:09:16,209 --> 00:09:21,399
visiting the reddit website it opens up

00:09:18,610 --> 00:09:24,100
there's this white box at the bottom the

00:09:21,399 --> 00:09:26,170
reddit app option looks like a default

00:09:24,100 --> 00:09:29,110
and gives no indication it's going to

00:09:26,170 --> 00:09:31,270
take you away from the page the continue

00:09:29,110 --> 00:09:33,610
option is grayed out pretending to be an

00:09:31,270 --> 00:09:36,070
inactive constraint even though it works

00:09:33,610 --> 00:09:39,310
by abusing consistency about the gray to

00:09:36,070 --> 00:09:41,320
indicate inactive and finally the

00:09:39,310 --> 00:09:42,850
distance between these options makes it

00:09:41,320 --> 00:09:45,190
hard for you to create a mapping or a

00:09:42,850 --> 00:09:47,380
relationship between the open and

00:09:45,190 --> 00:09:50,100
continue on the right and where that

00:09:47,380 --> 00:09:52,870
will actually take you on the left

00:09:50,100 --> 00:09:54,839
so let's actually look at authentication

00:09:52,870 --> 00:09:56,980
now that's apparently why we're here

00:09:54,839 --> 00:10:00,250
and this is an interaction that we

00:09:56,980 --> 00:10:03,160
really want to make secure on private so

00:10:00,250 --> 00:10:05,440
all is specifically the process of

00:10:03,160 --> 00:10:08,100
identifying yourself to a service to

00:10:05,440 --> 00:10:10,930
access resources now why do we want this

00:10:08,100 --> 00:10:11,470
resources could be sensitive they could

00:10:10,930 --> 00:10:13,450
be costly

00:10:11,470 --> 00:10:14,950
we could have personal data there there

00:10:13,450 --> 00:10:17,890
could be financial related information

00:10:14,950 --> 00:10:19,720
there's no limit to why we want to

00:10:17,890 --> 00:10:22,600
authenticate to these protected

00:10:19,720 --> 00:10:24,220
resources and this is exactly why we

00:10:22,600 --> 00:10:25,630
need authentication to know who is

00:10:24,220 --> 00:10:28,300
accessing them and to make sure that

00:10:25,630 --> 00:10:29,800
they are a legitimate individual but the

00:10:28,300 --> 00:10:32,560
service also has to authenticate itself

00:10:29,800 --> 00:10:35,260
to us because we need to know that it is

00:10:32,560 --> 00:10:38,320
the service we are connecting to so

00:10:35,260 --> 00:10:40,480
today we use passwords there are shared

00:10:38,320 --> 00:10:43,779
secret which the service should know and

00:10:40,480 --> 00:10:46,570
I know they were invented at 1960 as

00:10:43,779 --> 00:10:48,870
part of MIT s CTS s where they were used

00:10:46,570 --> 00:10:51,720
to isolate users computing resources

00:10:48,870 --> 00:10:55,709
however in the words of their own

00:10:51,720 --> 00:10:55,709
passwords have gotten out of hand

00:10:56,069 --> 00:11:00,850
there were a quick fix for a problem

00:10:58,689 --> 00:11:02,560
that existed at the time now we're never

00:11:00,850 --> 00:11:04,420
intended to survive this long the

00:11:02,560 --> 00:11:06,129
inventor said there will be better

00:11:04,420 --> 00:11:08,370
solutions we've just come up with that

00:11:06,129 --> 00:11:08,370
later

00:11:10,110 --> 00:11:19,000
yeah tech debt so of course this has led

00:11:16,269 --> 00:11:21,009
to an interesting problem people want

00:11:19,000 --> 00:11:21,879
access to these resources because

00:11:21,009 --> 00:11:24,579
they're valuable

00:11:21,879 --> 00:11:26,680
so authentication and passwords have

00:11:24,579 --> 00:11:29,740
been attacked and this has really led to

00:11:26,680 --> 00:11:31,240
an arms race it turns out that computers

00:11:29,740 --> 00:11:34,870
are really good at guessing passwords

00:11:31,240 --> 00:11:37,120
really fast who would have thought so we

00:11:34,870 --> 00:11:38,589
invented these protections that burden

00:11:37,120 --> 00:11:43,540
to the user instead of fixing the

00:11:38,589 --> 00:11:46,569
problem now I'm not sure about these

00:11:43,540 --> 00:11:49,180
rules they're a bit complicated they

00:11:46,569 --> 00:11:51,040
need blanks your ear you can't contain

00:11:49,180 --> 00:11:53,889
an eID I don't know what that is it

00:11:51,040 --> 00:11:56,470
checks a birthday which date format in

00:11:53,889 --> 00:11:59,350
which localization and dictionary words

00:11:56,470 --> 00:12:02,259
are rejected and letter trans positions

00:11:59,350 --> 00:12:04,059
are also rejected this is this is a

00:12:02,259 --> 00:12:05,920
really complicated scheme I'm not sure I

00:12:04,059 --> 00:12:09,069
could make a password to get this to

00:12:05,920 --> 00:12:10,389
pass this on the first go but people

00:12:09,069 --> 00:12:13,029
keep saying password rules are a great

00:12:10,389 --> 00:12:15,910
idea but they're not they're

00:12:13,029 --> 00:12:18,930
inaccessible human memory doesn't really

00:12:15,910 --> 00:12:21,339
work like this people are not computers

00:12:18,930 --> 00:12:25,300
humans are very bad at remembering

00:12:21,339 --> 00:12:27,309
arbitrary and complex strengths and this

00:12:25,300 --> 00:12:29,610
scheme demands a person to act and

00:12:27,309 --> 00:12:32,709
behave like a computer which we're not

00:12:29,610 --> 00:12:35,050
even worse we then came up with further

00:12:32,709 --> 00:12:36,850
schemes to insist that people would

00:12:35,050 --> 00:12:38,769
change their password at X every X

00:12:36,850 --> 00:12:40,180
number of days which means that people

00:12:38,769 --> 00:12:43,629
will never make the effort to try and

00:12:40,180 --> 00:12:45,550
remember instead they'll use predictable

00:12:43,629 --> 00:12:48,240
tricks like password one exclamation

00:12:45,550 --> 00:12:50,860
mark password two exclamation mark

00:12:48,240 --> 00:12:54,339
patterns that are trivially guessable

00:12:50,860 --> 00:12:56,819
and easy to bypass which leads to

00:12:54,339 --> 00:12:58,990
further styles of computer tax

00:12:56,819 --> 00:13:01,029
brute-forcing where you send lists of

00:12:58,990 --> 00:13:04,810
common passwords or common password

00:13:01,029 --> 00:13:08,130
transformations this works

00:13:04,810 --> 00:13:09,880
thousands of times per day on Azure ad

00:13:08,130 --> 00:13:13,240
according to their data that they've

00:13:09,880 --> 00:13:16,210
released its 20/20 now and this is still

00:13:13,240 --> 00:13:18,160
working thankfully though modern

00:13:16,210 --> 00:13:20,650
defenses are better such as rate

00:13:18,160 --> 00:13:22,570
limiting of attempts which is slowing

00:13:20,650 --> 00:13:24,730
down what attackers are able to do but

00:13:22,570 --> 00:13:28,470
that's led to new attacks so let's get

00:13:24,730 --> 00:13:31,750
into the really serious stuff phishing

00:13:28,470 --> 00:13:33,580
people attempt to fish all the time they

00:13:31,750 --> 00:13:36,460
try to trick a user to visit a fake web

00:13:33,580 --> 00:13:38,200
site and get the details who here

00:13:36,460 --> 00:13:40,570
noticed the you are really subtly

00:13:38,200 --> 00:13:41,770
different alright because I started

00:13:40,570 --> 00:13:45,610
talking about phishing you're looking

00:13:41,770 --> 00:13:47,620
for it right so this is yeah so this is

00:13:45,610 --> 00:13:49,839
this is actually a really bad Photoshop

00:13:47,620 --> 00:13:51,370
I I'm gonna say that fast mail do an

00:13:49,839 --> 00:13:53,950
excellent job of security this is not a

00:13:51,370 --> 00:13:55,839
hang-up on them they do a great job fast

00:13:53,950 --> 00:13:57,820
now if you ever want to buy screws and

00:13:55,839 --> 00:14:02,860
fastenings definitely give them a giving

00:13:57,820 --> 00:14:07,210
a look anyway the point is that this

00:14:02,860 --> 00:14:10,210
attack relies on consistency of our user

00:14:07,210 --> 00:14:13,690
interfaces there is no visual change

00:14:10,210 --> 00:14:16,240
when you are on fast mail calm to

00:14:13,690 --> 00:14:18,700
google.com or Twitter calm or my

00:14:16,240 --> 00:14:21,870
favorite app calm this URL bar is the

00:14:18,700 --> 00:14:24,610
same this password field is the same

00:14:21,870 --> 00:14:26,560
imagine if say the domain was hashed

00:14:24,610 --> 00:14:28,350
into four emoji and stuck up somewhere

00:14:26,560 --> 00:14:30,310
in the tab so that you had a very easy

00:14:28,350 --> 00:14:32,710
graphical way of seeing that you're on a

00:14:30,310 --> 00:14:35,320
different domain or perhaps even to make

00:14:32,710 --> 00:14:37,690
that information even more you know

00:14:35,320 --> 00:14:39,190
available the password field as soon as

00:14:37,690 --> 00:14:41,170
you click into it it drops down and

00:14:39,190 --> 00:14:43,000
shows a unique pattern for that website

00:14:41,170 --> 00:14:44,260
and if the pattern ever changed you

00:14:43,000 --> 00:14:45,670
would know that you're instantly on the

00:14:44,260 --> 00:14:47,860
wrong domain and could investigate

00:14:45,670 --> 00:14:49,420
further unfortunately we don't live in

00:14:47,860 --> 00:14:51,910
that world and none of us at all have

00:14:49,420 --> 00:14:56,320
the capability of changing this so this

00:14:51,910 --> 00:14:58,900
is the rider we're stuck on we also have

00:14:56,320 --> 00:15:02,320
failures of back-end systems we have

00:14:58,900 --> 00:15:03,940
database breaches dumps etc hashes for

00:15:02,320 --> 00:15:05,170
cryptographic verification are used for

00:15:03,940 --> 00:15:07,540
password storage instead of key

00:15:05,170 --> 00:15:09,100
derivation functions and this leads to

00:15:07,540 --> 00:15:10,779
people creating rainbow tables an

00:15:09,100 --> 00:15:12,700
offline brute force to recover the

00:15:10,779 --> 00:15:15,820
original passwords out of these back out

00:15:12,700 --> 00:15:18,180
of these dumps it turns out programming

00:15:15,820 --> 00:15:20,670
really sucks as a user experience

00:15:18,180 --> 00:15:22,680
there is almost no feedback no

00:15:20,670 --> 00:15:24,150
constraints and no help to make sure

00:15:22,680 --> 00:15:27,090
that you're doing the right thing

00:15:24,150 --> 00:15:28,980
programming is just a field of landmines

00:15:27,090 --> 00:15:32,280
that we can just walk through and make

00:15:28,980 --> 00:15:34,880
mistakes all the time and this has

00:15:32,280 --> 00:15:37,170
really led to other stars of attacks

00:15:34,880 --> 00:15:38,460
credential stuffing is probably the main

00:15:37,170 --> 00:15:41,730
one that has come out of this kind of

00:15:38,460 --> 00:15:43,020
thing because people reuse passwords as

00:15:41,730 --> 00:15:44,610
they were made so hard to remember

00:15:43,020 --> 00:15:47,220
people started to use one password

00:15:44,610 --> 00:15:49,230
everywhere so if one web service gets

00:15:47,220 --> 00:15:50,910
breached we can then take a username and

00:15:49,230 --> 00:15:53,390
password and replay it on every other

00:15:50,910 --> 00:15:57,300
web service and see what we get into and

00:15:53,390 --> 00:15:59,400
this works a surprising amount again

00:15:57,300 --> 00:16:02,340
Microsoft's own data from Azure ad shows

00:15:59,400 --> 00:16:06,720
that this works every day and they

00:16:02,340 --> 00:16:08,880
experience it every day so if we just

00:16:06,720 --> 00:16:09,900
have a little summary here right the

00:16:08,880 --> 00:16:13,530
things that we've tried to do with

00:16:09,900 --> 00:16:15,330
passwords just don't work passwords and

00:16:13,530 --> 00:16:16,920
even the quality checkers on passwords

00:16:15,330 --> 00:16:18,600
and what we're doing even with password

00:16:16,920 --> 00:16:22,290
managers in some cases really aren't

00:16:18,600 --> 00:16:25,560
stopping these attacks our past advice

00:16:22,290 --> 00:16:27,480
is soured are an ecosystem and we 100%

00:16:25,560 --> 00:16:29,580
rely on the human to get it right or

00:16:27,480 --> 00:16:32,520
hold it correctly we've resorted to

00:16:29,580 --> 00:16:34,980
documentation to absolve our design

00:16:32,520 --> 00:16:38,430
flaws so why do we still use these

00:16:34,980 --> 00:16:41,460
stupid things they've got no constraints

00:16:38,430 --> 00:16:43,620
poor feedback inconsistent messages and

00:16:41,460 --> 00:16:45,600
they don't even match the way that human

00:16:43,620 --> 00:16:49,230
minds think about these kind of problems

00:16:45,600 --> 00:16:50,130
have we not gotten rid of this well part

00:16:49,230 --> 00:16:53,130
of the problem is that they're very

00:16:50,130 --> 00:16:54,660
pervasive now as we heard before when a

00:16:53,130 --> 00:16:57,090
developer is starting up a new website

00:16:54,660 --> 00:16:59,040
they go ah I'm gonna add that use now

00:16:57,090 --> 00:16:59,880
password field because it's easy it's

00:16:59,040 --> 00:17:02,940
low-cost

00:16:59,880 --> 00:17:04,050
it's the first tool that we reach for we

00:17:02,940 --> 00:17:06,780
also have a problem where we as

00:17:04,050 --> 00:17:09,120
developers we say well I can manage my

00:17:06,780 --> 00:17:10,650
passwords I've got a password manager

00:17:09,120 --> 00:17:12,510
and it does random things for every

00:17:10,650 --> 00:17:14,880
website why can't everyone else works

00:17:12,510 --> 00:17:17,640
for me and that's not the attitude we

00:17:14,880 --> 00:17:19,620
should be holding we also have developed

00:17:17,640 --> 00:17:21,540
we also have a lot of legacy in our

00:17:19,620 --> 00:17:23,190
stacks we have technologies like

00:17:21,540 --> 00:17:25,770
Kerberos that really just can't be

00:17:23,190 --> 00:17:28,440
extended beyond what a password is we

00:17:25,770 --> 00:17:30,510
have technologies like in terms of IMAP

00:17:28,440 --> 00:17:31,920
things like Sassa where the code is so

00:17:30,510 --> 00:17:33,600
confusing and complicated that

00:17:31,920 --> 00:17:36,120
even the idea of adding an extended

00:17:33,600 --> 00:17:37,560
mechanism is just frightful and this is

00:17:36,120 --> 00:17:42,630
coming from me who works on LDAP and

00:17:37,560 --> 00:17:44,490
I've seen some nasty things and we've

00:17:42,630 --> 00:17:46,860
even got other authentication types like

00:17:44,490 --> 00:17:48,180
you know tokens and things and there's a

00:17:46,860 --> 00:17:50,460
problem there in terms of cost and

00:17:48,180 --> 00:17:52,190
accessibility smart cards were a

00:17:50,460 --> 00:17:54,450
nightmare

00:17:52,190 --> 00:17:56,310
we even have other things like

00:17:54,450 --> 00:17:57,930
applications need to be modified and

00:17:56,310 --> 00:18:00,690
that really takes a lot of people power

00:17:57,930 --> 00:18:02,190
we could put a to FA into IMAP today if

00:18:00,690 --> 00:18:04,070
we could get every single mail client on

00:18:02,190 --> 00:18:08,430
the planet to suddenly update the code

00:18:04,070 --> 00:18:10,890
mmm thankfully though this has started

00:18:08,430 --> 00:18:12,810
to change in a lot of ways so I really

00:18:10,890 --> 00:18:14,190
want to you know go on and start to talk

00:18:12,810 --> 00:18:17,310
about you know some of the modern

00:18:14,190 --> 00:18:21,150
multi-factor off so let's talk about exp

00:18:17,310 --> 00:18:23,190
and HTTP introduced in 2011 the way that

00:18:21,150 --> 00:18:24,990
it works is that if you have a hecho TP

00:18:23,190 --> 00:18:26,700
device you have a hardware token that

00:18:24,990 --> 00:18:29,220
looks something like this it has a

00:18:26,700 --> 00:18:31,320
counter and a private key if you have

00:18:29,220 --> 00:18:32,970
TTP it may be an app on your phone and

00:18:31,320 --> 00:18:35,520
it has a key and it uses the current

00:18:32,970 --> 00:18:37,830
time regardless what happens is that the

00:18:35,520 --> 00:18:39,480
key plus counter or time is then hashed

00:18:37,830 --> 00:18:42,750
truncated take some characters off the

00:18:39,480 --> 00:18:44,250
end bam one-time password every time you

00:18:42,750 --> 00:18:47,310
press the button the counter increment

00:18:44,250 --> 00:18:49,230
you get a new one-time password or when

00:18:47,310 --> 00:18:52,980
the time window expires you get a new

00:18:49,230 --> 00:18:55,650
password presented in your app so this

00:18:52,980 --> 00:18:57,810
seems like a pretty good solution right

00:18:55,650 --> 00:18:59,250
we've got a one-time password you know

00:18:57,810 --> 00:19:01,310
they're pretty hard to figure got a hold

00:18:59,250 --> 00:19:03,840
possession of a token that's pretty good

00:19:01,310 --> 00:19:05,970
these are TPS will be typed in a login

00:19:03,840 --> 00:19:09,000
prompt similar to this you have a

00:19:05,970 --> 00:19:10,920
username password OTP and in some cases

00:19:09,000 --> 00:19:12,300
perhaps you may have a username password

00:19:10,920 --> 00:19:15,480
and then it will print present for an

00:19:12,300 --> 00:19:18,300
OTP on the next page unfortunately this

00:19:15,480 --> 00:19:21,990
is not the world we live in we also have

00:19:18,300 --> 00:19:23,760
legacy systems and it's very common for

00:19:21,990 --> 00:19:26,220
legacy systems that can't have new

00:19:23,760 --> 00:19:29,070
authentication extensions added my own

00:19:26,220 --> 00:19:32,760
products guilty such as LDAP and

00:19:29,070 --> 00:19:35,400
Kerberos but we can't have separate OTP

00:19:32,760 --> 00:19:37,590
fields added into their protocols which

00:19:35,400 --> 00:19:39,600
means that they take the password in the

00:19:37,590 --> 00:19:42,210
OTP and they put it into one field

00:19:39,600 --> 00:19:44,040
sender the server and they say let's

00:19:42,210 --> 00:19:45,960
split the last six characters off the

00:19:44,040 --> 00:19:48,659
end and that's the OTP

00:19:45,960 --> 00:19:50,610
the first part must be the password this

00:19:48,659 --> 00:19:54,450
is really poor design though the

00:19:50,610 --> 00:19:57,809
password field is now inconsistent the

00:19:54,450 --> 00:19:59,399
password field is now two inputs but

00:19:57,809 --> 00:20:01,140
it's not clear that you're actually

00:19:59,399 --> 00:20:03,870
needing to put two things in it just

00:20:01,140 --> 00:20:05,640
says password on there it's not afforded

00:20:03,870 --> 00:20:08,880
to you that you need to add the OTP in

00:20:05,640 --> 00:20:11,700
these cases and it's still vulnerable to

00:20:08,880 --> 00:20:14,159
fishing because a person is typing it in

00:20:11,700 --> 00:20:17,669
there's no verification of the domain

00:20:14,159 --> 00:20:20,100
name occurring adoption is hard users

00:20:17,669 --> 00:20:22,649
don't like the experience it involves

00:20:20,100 --> 00:20:26,279
extra devices manual typing your codes

00:20:22,649 --> 00:20:28,470
and there are other problems the tokens

00:20:26,279 --> 00:20:30,870
may desync if you press the counter on a

00:20:28,470 --> 00:20:33,000
hecho TP too many times the server loses

00:20:30,870 --> 00:20:37,080
its counter State and suddenly it stops

00:20:33,000 --> 00:20:39,149
working or some people with totp who's

00:20:37,080 --> 00:20:41,039
had the totp racing game where you've

00:20:39,149 --> 00:20:43,200
pressed UT OTP and you've got a type of

00:20:41,039 --> 00:20:47,149
as fast as possible for it expires or do

00:20:43,200 --> 00:20:47,149
you wait those 15 seconds and try again

00:20:48,440 --> 00:20:53,240
so sometimes it can be really

00:20:51,149 --> 00:20:55,289
frustrating to use these things and

00:20:53,240 --> 00:20:58,080
sometimes a real problem is that the

00:20:55,289 --> 00:21:00,000
token is used infrequently and because

00:20:58,080 --> 00:21:02,130
it's separate from your machine it could

00:21:00,000 --> 00:21:03,360
be easy to forget you're your laptop and

00:21:02,130 --> 00:21:04,950
you need to go and scramble out of bed

00:21:03,360 --> 00:21:07,110
to find your phone so you can log in to

00:21:04,950 --> 00:21:09,870
PayPal for that late-night purchase that

00:21:07,110 --> 00:21:12,659
you've done it can be very frustrating

00:21:09,870 --> 00:21:16,260
because you also need a token for every

00:21:12,659 --> 00:21:17,340
site so my free OTP page which I don't

00:21:16,260 --> 00:21:19,890
really want to show but you can just

00:21:17,340 --> 00:21:21,690
scroll and there's so many tokens and

00:21:19,890 --> 00:21:23,520
this is really difficult because it

00:21:21,690 --> 00:21:25,289
becomes hard to make the relationship

00:21:23,520 --> 00:21:27,630
between which token to which site

00:21:25,289 --> 00:21:30,230
because the OTP app only shows a very

00:21:27,630 --> 00:21:32,309
small grade text under each one of

00:21:30,230 --> 00:21:32,880
course there are some things that can

00:21:32,309 --> 00:21:35,490
help here

00:21:32,880 --> 00:21:38,789
there are browser extensions which now

00:21:35,490 --> 00:21:40,320
can provide OTPs they can do stronger

00:21:38,789 --> 00:21:43,020
checks on a domain naming question which

00:21:40,320 --> 00:21:45,750
could prevent phishing there are some

00:21:43,020 --> 00:21:48,299
arguments against this though the tokens

00:21:45,750 --> 00:21:50,730
now on the device so there's a risk of

00:21:48,299 --> 00:21:52,289
say an untrusted application or a risk

00:21:50,730 --> 00:21:55,679
of the device being compromised and the

00:21:52,289 --> 00:21:57,330
token being extracted but if your device

00:21:55,679 --> 00:21:59,920
is compromised you have significantly

00:21:57,330 --> 00:22:01,870
bigger problems your session cook

00:21:59,920 --> 00:22:04,000
could be stolen post authentication they

00:22:01,870 --> 00:22:05,800
don't even need together anything the

00:22:04,000 --> 00:22:07,900
OTP could be key logged or stolen from

00:22:05,800 --> 00:22:09,340
your paste buffer or there's other types

00:22:07,900 --> 00:22:11,950
of data exfiltration that could be

00:22:09,340 --> 00:22:13,510
occurring from your machine so these

00:22:11,950 --> 00:22:15,010
arguments kind of fall down and so it's

00:22:13,510 --> 00:22:17,500
much better to actually have these

00:22:15,010 --> 00:22:19,600
things associated with the device to

00:22:17,500 --> 00:22:22,440
help that make it a bit easier for the

00:22:19,600 --> 00:22:25,990
person in terms of our attacks though

00:22:22,440 --> 00:22:27,430
tht P and H of P do stop most of the

00:22:25,990 --> 00:22:30,400
dangerous attacks that occur in our

00:22:27,430 --> 00:22:32,730
networks today the real the one that

00:22:30,400 --> 00:22:37,720
they really just can't stop is phishing

00:22:32,730 --> 00:22:40,570
so they can be low-cost and things like

00:22:37,720 --> 00:22:44,350
free OTP on phones is a low cost and

00:22:40,570 --> 00:22:46,660
easy accessible solution the browser

00:22:44,350 --> 00:22:47,710
extensions also a really low cost way of

00:22:46,660 --> 00:22:49,900
doing this and this is one of the

00:22:47,710 --> 00:22:51,910
reasons why first pho to be gained so

00:22:49,900 --> 00:22:54,760
much traction is that they're cheap for

00:22:51,910 --> 00:22:56,800
end users but the problem is that they

00:22:54,760 --> 00:22:59,740
have inconsistent inconsistent user

00:22:56,800 --> 00:23:01,480
interfaces for entry and a poor mapping

00:22:59,740 --> 00:23:04,420
of the token to what service you're

00:23:01,480 --> 00:23:06,790
using there's also very few constraints

00:23:04,420 --> 00:23:11,320
on entering your OTP into the wrong

00:23:06,790 --> 00:23:14,020
service so let's talk about some more

00:23:11,320 --> 00:23:17,800
modern technology such as u2f or we're

00:23:14,020 --> 00:23:19,870
both in this was introduced I think

00:23:17,800 --> 00:23:22,060
about 2017 2018 but it was really

00:23:19,870 --> 00:23:23,770
ratified in 2019 when we're both n was

00:23:22,060 --> 00:23:26,320
finalised to really make it much more

00:23:23,770 --> 00:23:29,140
Universal the way that it works is that

00:23:26,320 --> 00:23:33,790
it has a cryptographic processor on a

00:23:29,140 --> 00:23:36,400
token such as this and it often is

00:23:33,790 --> 00:23:37,480
plugged into a USB port at the moment

00:23:36,400 --> 00:23:38,650
there is actually some very exciting

00:23:37,480 --> 00:23:41,020
news which is that there's talk of

00:23:38,650 --> 00:23:42,820
Firefox shipping their soft token as

00:23:41,020 --> 00:23:45,580
part of the web browser which i think is

00:23:42,820 --> 00:23:47,170
quite cool they can be permanently

00:23:45,580 --> 00:23:48,790
embedded into computers through their

00:23:47,170 --> 00:23:50,530
small size I would lift up my laptop and

00:23:48,790 --> 00:23:52,600
show you as I've got a new bikini nano

00:23:50,530 --> 00:23:54,550
stuck in the side and this is really

00:23:52,600 --> 00:23:56,200
good because it means that it since it's

00:23:54,550 --> 00:23:58,060
not removable from the device that

00:23:56,200 --> 00:23:59,680
you're authenticating from it's always

00:23:58,060 --> 00:24:01,450
there you're not going to lose it

00:23:59,680 --> 00:24:04,960
who here knows where your phone is right

00:24:01,450 --> 00:24:08,770
now people who didn't put their hand up

00:24:04,960 --> 00:24:10,420
a liar's so we are really good at

00:24:08,770 --> 00:24:12,640
managing these personal devices and if

00:24:10,420 --> 00:24:13,690
your token is inside of it it's very

00:24:12,640 --> 00:24:16,659
easy for

00:24:13,690 --> 00:24:19,870
- then use it when we need it for

00:24:16,659 --> 00:24:21,970
example our laptops are the same and in

00:24:19,870 --> 00:24:25,000
some cases these tokens may be built

00:24:21,970 --> 00:24:29,019
completely into the device so how does

00:24:25,000 --> 00:24:30,519
it work so we have a relying party which

00:24:29,019 --> 00:24:35,230
is the website you want to authenticate

00:24:30,519 --> 00:24:38,110
to and this takes a randomized challenge

00:24:35,230 --> 00:24:40,320
of some entropy center to the client I'm

00:24:38,110 --> 00:24:43,090
heavily glossing over this by the way

00:24:40,320 --> 00:24:45,940
the client then takes that challenge and

00:24:43,090 --> 00:24:49,889
the domain name and sends it into the

00:24:45,940 --> 00:24:53,409
hardware token generally a u2f device

00:24:49,889 --> 00:24:56,409
using its private key it then takes the

00:24:53,409 --> 00:24:59,289
domain name derives a site private key

00:24:56,409 --> 00:25:02,679
and then signs that challenge data with

00:24:59,289 --> 00:25:04,809
that site-specific private key this

00:25:02,679 --> 00:25:07,440
signature is then returned to the web

00:25:04,809 --> 00:25:09,850
browser and returned to the website

00:25:07,440 --> 00:25:12,820
where it is checked against the public

00:25:09,850 --> 00:25:16,360
key that was previously provided this is

00:25:12,820 --> 00:25:20,710
the crucial step though during this the

00:25:16,360 --> 00:25:22,779
private key is derived per domain so

00:25:20,710 --> 00:25:25,120
this means that you have one token that

00:25:22,779 --> 00:25:26,980
can work on multiple domains and

00:25:25,120 --> 00:25:30,129
depending on the design of the token

00:25:26,980 --> 00:25:33,220
potentially infinite domains every

00:25:30,129 --> 00:25:34,690
domain has a unique private key and a

00:25:33,220 --> 00:25:37,090
unique Associated public here on the

00:25:34,690 --> 00:25:41,679
other end and this makes for a very

00:25:37,090 --> 00:25:44,080
important a result phishing is not

00:25:41,679 --> 00:25:46,929
possible because phishing that relies on

00:25:44,080 --> 00:25:49,539
a domain name that is visually different

00:25:46,929 --> 00:25:52,000
for a visually similar for a human the

00:25:49,539 --> 00:25:54,850
computer will pick it up and this token

00:25:52,000 --> 00:25:56,940
will use a different private key meaning

00:25:54,850 --> 00:25:58,960
that you cannot replay that

00:25:56,940 --> 00:26:00,309
challenge-response into the legitimate

00:25:58,960 --> 00:26:01,990
site because it will be using a

00:26:00,309 --> 00:26:05,379
different key and the authentication

00:26:01,990 --> 00:26:08,889
will immediately fail as well these

00:26:05,379 --> 00:26:10,690
tokens require physical interaction you

00:26:08,889 --> 00:26:13,090
have to touch the device before it will

00:26:10,690 --> 00:26:15,240
authenticate you this is visually

00:26:13,090 --> 00:26:18,039
indicated through the device flashing or

00:26:15,240 --> 00:26:19,990
very prominent on-screen prompts such as

00:26:18,039 --> 00:26:22,379
above that tell you what website would

00:26:19,990 --> 00:26:25,779
like to use your token at the moment a

00:26:22,379 --> 00:26:27,300
compromised endpoint such as one that we

00:26:25,779 --> 00:26:29,100
talked about before they

00:26:27,300 --> 00:26:31,890
extracts the key material and they

00:26:29,100 --> 00:26:33,540
actually can't even falsify an

00:26:31,890 --> 00:26:37,650
authentication attempt because you need

00:26:33,540 --> 00:26:39,870
to physically interact with it this

00:26:37,650 --> 00:26:41,370
means that as well if feedback is

00:26:39,870 --> 00:26:44,070
occurring such as the device flashing

00:26:41,370 --> 00:26:45,780
but you did not initiate it maybe your

00:26:44,070 --> 00:26:49,590
device has a problem and you should

00:26:45,780 --> 00:26:52,020
investigate it there's also future Keys

00:26:49,590 --> 00:26:53,370
like touch ID or the yubico biometric

00:26:52,020 --> 00:26:56,070
keys that are being talked about to have

00:26:53,370 --> 00:26:59,700
fingerprint readers and websites can

00:26:56,070 --> 00:27:01,650
insist on verified off what this means

00:26:59,700 --> 00:27:04,830
is that your token itself is now

00:27:01,650 --> 00:27:08,160
multiple factors possession and your

00:27:04,830 --> 00:27:10,290
biometric or a pin and this means that

00:27:08,160 --> 00:27:12,840
theft of the token does not immediately

00:27:10,290 --> 00:27:15,960
mean compromise of the token as it does

00:27:12,840 --> 00:27:18,390
previously and is these little factors

00:27:15,960 --> 00:27:19,740
these the subtle changes that really

00:27:18,390 --> 00:27:22,800
make a huge difference here

00:27:19,740 --> 00:27:24,120
it's got great visibility it's connected

00:27:22,800 --> 00:27:27,930
to your device and the prompts are

00:27:24,120 --> 00:27:30,120
noticeable and clear it's affordable in

00:27:27,930 --> 00:27:32,210
terms of psychological sense it's easy

00:27:30,120 --> 00:27:35,250
to see how it's used you touch and go

00:27:32,210 --> 00:27:37,050
it's consistent between every site you

00:27:35,250 --> 00:27:38,670
authenticate to in the way that it

00:27:37,050 --> 00:27:41,040
indicates you're about to authenticate

00:27:38,670 --> 00:27:43,020
it has excellent mapping it does one

00:27:41,040 --> 00:27:44,940
thing in one thing well you know why you

00:27:43,020 --> 00:27:48,540
are touching that token and what you

00:27:44,940 --> 00:27:50,400
intend to do it has feedback around what

00:27:48,540 --> 00:27:52,890
is going on and how you need to interact

00:27:50,400 --> 00:27:55,260
with it and it has constraints enforced

00:27:52,890 --> 00:27:57,690
at the cryptographic level to prevent

00:27:55,260 --> 00:27:59,720
incorrect usage of your token on false

00:27:57,690 --> 00:28:05,130
websites such as to prevent phishing

00:27:59,720 --> 00:28:07,440
this is awesome so I also just want to

00:28:05,130 --> 00:28:09,030
talk about some other stuff that exists

00:28:07,440 --> 00:28:12,270
within the authentication space and

00:28:09,030 --> 00:28:15,710
where we can go as developers and what

00:28:12,270 --> 00:28:18,630
we can also look at to help further here

00:28:15,710 --> 00:28:20,930
we still have passwords this is the

00:28:18,630 --> 00:28:23,100
unfortunate reality of our world

00:28:20,930 --> 00:28:25,320
passwords are hard for people to use and

00:28:23,100 --> 00:28:27,690
that's never going to change

00:28:25,320 --> 00:28:29,310
we should still continue to encourage

00:28:27,690 --> 00:28:33,300
the use of password managers they do

00:28:29,310 --> 00:28:35,100
really help in a lot of ways libraries

00:28:33,300 --> 00:28:37,500
that we can adopt in order to help

00:28:35,100 --> 00:28:39,570
actually positively improve password

00:28:37,500 --> 00:28:40,740
qualities is libraries like the zxc VPN

00:28:39,570 --> 00:28:41,850
it

00:28:40,740 --> 00:28:43,770
did take me a little while to realize

00:28:41,850 --> 00:28:45,510
that that's the bottom six characters of

00:28:43,770 --> 00:28:50,910
a QWERTY keyboard because I'm a Dvorak

00:28:45,510 --> 00:28:52,380
user but it does make it very easy it

00:28:50,910 --> 00:28:53,550
does make it very easy for all of you to

00:28:52,380 --> 00:28:55,860
look it up later if you want to

00:28:53,550 --> 00:28:58,290
integrate it with your services and what

00:28:55,860 --> 00:29:00,210
the zxe VPN does really well is it

00:28:58,290 --> 00:29:02,730
provides constructive and useful

00:29:00,210 --> 00:29:04,770
feedback here I've put in the password

00:29:02,730 --> 00:29:07,110
password and the feedback it has given

00:29:04,770 --> 00:29:09,480
is add another word or two uncommon

00:29:07,110 --> 00:29:11,700
words may be better and capitalization

00:29:09,480 --> 00:29:13,290
doesn't help very much and this is

00:29:11,700 --> 00:29:15,630
really good advice actually this is very

00:29:13,290 --> 00:29:18,660
simple it's applicable to many people

00:29:15,630 --> 00:29:20,910
and remembering say a sentence of words

00:29:18,660 --> 00:29:24,780
is a lot easier than arbitrary random

00:29:20,910 --> 00:29:26,700
strings of characters and we're also

00:29:24,780 --> 00:29:29,240
going to start to see a bit more of a

00:29:26,700 --> 00:29:32,580
shift towards devices as authentication

00:29:29,240 --> 00:29:34,080
so what this means is that you're you

00:29:32,580 --> 00:29:36,390
will log into your device whether it's a

00:29:34,080 --> 00:29:38,850
phone or a laptop or something else and

00:29:36,390 --> 00:29:41,820
then that device will continue to

00:29:38,850 --> 00:29:43,710
authenticate you further we already have

00:29:41,820 --> 00:29:45,900
seen this in specifications such as web

00:29:43,710 --> 00:29:48,030
or thin with Android key touch ID

00:29:45,900 --> 00:29:50,670
windows hello and the previously

00:29:48,030 --> 00:29:52,920
mentioned Firefox soft token we're both

00:29:50,670 --> 00:29:54,540
in may even become the single factor of

00:29:52,920 --> 00:30:00,240
authentication due to these devices

00:29:54,540 --> 00:30:01,920
becoming so prevalent verified and where

00:30:00,240 --> 00:30:04,380
both end devices such as the biometric

00:30:01,920 --> 00:30:05,850
or pin ones could even be used to

00:30:04,380 --> 00:30:08,970
replace password and we're both in in

00:30:05,850 --> 00:30:10,470
higher assurance areas and really as

00:30:08,970 --> 00:30:15,090
developers we should all be used to this

00:30:10,470 --> 00:30:18,030
model we use it daily maybe SSH keys I

00:30:15,090 --> 00:30:20,550
log in to my laptop and then my laptops

00:30:18,030 --> 00:30:22,800
SSH keys continue to authenticate me so

00:30:20,550 --> 00:30:24,330
we already understand how this works and

00:30:22,800 --> 00:30:26,130
we already have this kind of

00:30:24,330 --> 00:30:28,410
cryptographic auth but we're both n has

00:30:26,130 --> 00:30:32,940
made this publicly available to many

00:30:28,410 --> 00:30:36,600
people in the population and I also

00:30:32,940 --> 00:30:39,570
really encourage you to look at the new

00:30:36,600 --> 00:30:43,260
NIST SB 863 be digital identity

00:30:39,570 --> 00:30:45,450
guidelines it's a really fun evening

00:30:43,260 --> 00:30:48,450
read sit down pour yourself a nice

00:30:45,450 --> 00:30:51,900
bubble tea sit in your armchair and have

00:30:48,450 --> 00:30:53,790
a read it does go through a lot of these

00:30:51,900 --> 00:30:54,690
topics and it does actually think about

00:30:53,790 --> 00:30:57,870
a lot of different

00:30:54,690 --> 00:31:01,020
cases and different security levels that

00:30:57,870 --> 00:31:02,610
are interacted with but today these this

00:31:01,020 --> 00:31:03,990
document is actually very good and it

00:31:02,610 --> 00:31:05,970
does recommend a lot of the things that

00:31:03,990 --> 00:31:07,980
I've just talked about and how we can

00:31:05,970 --> 00:31:10,290
develop applications that are very good

00:31:07,980 --> 00:31:12,240
at you know providing user

00:31:10,290 --> 00:31:13,890
authentication one of the key points

00:31:12,240 --> 00:31:17,010
this document also talks about is that

00:31:13,890 --> 00:31:19,560
single sign-on is a good thing for you

00:31:17,010 --> 00:31:21,930
to rely on because that single sign-on

00:31:19,560 --> 00:31:24,990
system can have all of these standards

00:31:21,930 --> 00:31:26,700
implemented in it and then we can rely

00:31:24,990 --> 00:31:30,990
on that to have been verified and

00:31:26,700 --> 00:31:34,590
implemented correctly so I want to leave

00:31:30,990 --> 00:31:37,080
you with you know a few thoughts and

00:31:34,590 --> 00:31:40,200
that is really that humans are always

00:31:37,080 --> 00:31:41,640
part of our systems to make our systems

00:31:40,200 --> 00:31:43,980
secure we always have to think about

00:31:41,640 --> 00:31:45,210
their behavior so just going through

00:31:43,980 --> 00:31:47,700
this we've seen how some of these

00:31:45,210 --> 00:31:49,080
behavioral elements have affected the

00:31:47,700 --> 00:31:52,470
kind of attacks that are occurring on

00:31:49,080 --> 00:31:54,480
services and if people are continually

00:31:52,470 --> 00:31:55,740
making mistakes like how users are

00:31:54,480 --> 00:31:58,890
making with passwords

00:31:55,740 --> 00:32:02,280
maybe the person isn't the problem maybe

00:31:58,890 --> 00:32:03,990
our interfaces are the problem we are

00:32:02,280 --> 00:32:05,880
all developers who make these interfaces

00:32:03,990 --> 00:32:07,830
so we should all examine when our users

00:32:05,880 --> 00:32:09,600
are struggling and start to reflect and

00:32:07,830 --> 00:32:13,020
think about these interfaces and how

00:32:09,600 --> 00:32:16,620
they are being used Don Norman put out a

00:32:13,020 --> 00:32:19,260
paper in I think was 80 something called

00:32:16,620 --> 00:32:20,730
the truth about Unix and I really

00:32:19,260 --> 00:32:23,250
recommend that you read it it's a very

00:32:20,730 --> 00:32:25,850
interesting read but I want to leave you

00:32:23,250 --> 00:32:27,750
with a quote from the end of it

00:32:25,850 --> 00:32:30,180
understanding the psychology behind

00:32:27,750 --> 00:32:32,700
people's expectations needs and

00:32:30,180 --> 00:32:35,550
behaviors is the foundation of great

00:32:32,700 --> 00:32:38,550
design people have mental models of the

00:32:35,550 --> 00:32:40,050
way they expect things to work violating

00:32:38,550 --> 00:32:43,560
these connections can create frustration

00:32:40,050 --> 00:32:46,470
or confusion the price to be paid for

00:32:43,560 --> 00:32:50,040
design oversight may or may not include

00:32:46,470 --> 00:32:53,910
potential loss of life system designers

00:32:50,040 --> 00:32:55,590
take note design for the system design

00:32:53,910 --> 00:32:57,950
the system for the person not for the

00:32:55,590 --> 00:33:00,780
computer not even for yourself

00:32:57,950 --> 00:33:02,370
people are also information processing

00:33:00,780 --> 00:33:04,910
systems with varying degrees of

00:33:02,370 --> 00:33:07,350
knowledge varying degrees of experience

00:33:04,910 --> 00:33:08,730
friendly systems treat users as

00:33:07,350 --> 00:33:11,120
intelligent adults

00:33:08,730 --> 00:33:13,650
who like normal adults are forgetful

00:33:11,120 --> 00:33:15,600
distracted thinking of other things and

00:33:13,650 --> 00:33:18,240
not quite as knowledgeable as they

00:33:15,600 --> 00:33:20,510
themselves would like to be thank you

00:33:18,240 --> 00:33:20,510
very much

00:33:29,120 --> 00:33:33,419
sorry I'm early

00:33:30,659 --> 00:33:35,190
I mean you get to leave earlier it's

00:33:33,419 --> 00:33:35,610
almost banging out of 40 minutes what

00:33:35,190 --> 00:33:39,090
was that

00:33:35,610 --> 00:33:49,320
it's almost 40 minutes yeah very close

00:33:39,090 --> 00:33:51,299
yeah questions ah ah quick question I'm

00:33:49,320 --> 00:33:55,409
one of the people who sometimes

00:33:51,299 --> 00:33:57,690
factories reset the phones and if I have

00:33:55,409 --> 00:33:59,999
my second factor set up on my phone I

00:33:57,690 --> 00:34:03,899
kind of lose the whole thing and then

00:33:59,999 --> 00:34:07,409
you know yeah try to get back to the

00:34:03,899 --> 00:34:09,329
kösem bar line till we set it up it's

00:34:07,409 --> 00:34:14,159
kind of a frustrating experience do you

00:34:09,329 --> 00:34:23,750
see any let's say better ways to make

00:34:14,159 --> 00:34:23,750
this experience less excruciating yes

00:34:23,869 --> 00:34:31,260
okay um so there are many ways to make

00:34:28,919 --> 00:34:35,159
this less excruciating and it really

00:34:31,260 --> 00:34:37,230
comes down to you know as you know

00:34:35,159 --> 00:34:39,960
people who provide provide

00:34:37,230 --> 00:34:41,159
authentication services and you know one

00:34:39,960 --> 00:34:43,260
of the reasons to lean on things like

00:34:41,159 --> 00:34:45,780
SSO an existing or services is because

00:34:43,260 --> 00:34:48,960
they will often have built into their

00:34:45,780 --> 00:34:50,550
designs things like okay what happens if

00:34:48,960 --> 00:34:52,500
we have a user with a single device and

00:34:50,550 --> 00:34:54,750
they lose that device how can they go

00:34:52,500 --> 00:34:56,879
through an enable recovery if they have

00:34:54,750 --> 00:34:59,700
multiple devices how can we use from one

00:34:56,879 --> 00:35:02,280
device to get back the other or lock out

00:34:59,700 --> 00:35:03,660
the other so there are different ways to

00:35:02,280 --> 00:35:05,040
do this and if you would like more

00:35:03,660 --> 00:35:06,089
details I've spent a lot of time

00:35:05,040 --> 00:35:08,940
thinking about this exact problem

00:35:06,089 --> 00:35:10,680
recently but you know I can go through

00:35:08,940 --> 00:35:13,040
that and send you resources externally

00:35:10,680 --> 00:35:13,040
yeah

00:35:19,930 --> 00:35:26,470
how's it going you you mentioned that

00:35:23,040 --> 00:35:31,930
totp is vulnerable to replay attack

00:35:26,470 --> 00:35:34,690
whereas the token method isn't is that

00:35:31,930 --> 00:35:37,660
are you talking about so a third party

00:35:34,690 --> 00:35:41,560
in the middle yeah fishing intercepting

00:35:37,660 --> 00:35:43,690
the TOTP number and yeah yeah right okay

00:35:41,560 --> 00:35:44,860
so fishing so th P does make it harder

00:35:43,690 --> 00:35:47,380
because there is a limited time window

00:35:44,860 --> 00:35:48,520
but often there are now automated

00:35:47,380 --> 00:35:50,830
phishing attempts that will basically

00:35:48,520 --> 00:35:52,360
say okay you you've you've fallen for

00:35:50,830 --> 00:35:55,150
the fish and it will immediately do the

00:35:52,360 --> 00:35:57,790
login so the time limit of that token no

00:35:55,150 --> 00:35:59,770
longer actually is adding a reasonable

00:35:57,790 --> 00:36:01,240
defense to say oh I press the token you

00:35:59,770 --> 00:36:03,760
saw a picture of it three days later you

00:36:01,240 --> 00:36:07,690
know it's yes oh so my question is how

00:36:03,760 --> 00:36:11,380
does the authentication based token

00:36:07,690 --> 00:36:13,630
based method avoid that it derives a

00:36:11,380 --> 00:36:15,160
private key unique per domain so the

00:36:13,630 --> 00:36:16,810
domain name is involved in the private

00:36:15,160 --> 00:36:18,670
key derivation and that means that it

00:36:16,810 --> 00:36:20,650
will derive a different private key when

00:36:18,670 --> 00:36:22,990
a false domain name is used on the

00:36:20,650 --> 00:36:24,400
phishing website so the two private keys

00:36:22,990 --> 00:36:26,830
are different meaning that the challenge

00:36:24,400 --> 00:36:34,230
that is signed will never have the same

00:36:26,830 --> 00:36:34,230
signature from from the - there's a here

00:36:37,260 --> 00:36:44,160
I ran early so you can just keep asking

00:36:40,290 --> 00:36:47,910
it like I'm here for this pain you

00:36:44,160 --> 00:36:49,890
advocate you advocate single sign-on but

00:36:47,910 --> 00:36:52,290
in my experience that usually just turns

00:36:49,890 --> 00:36:54,359
into forced password reuse because

00:36:52,290 --> 00:36:55,500
everything authenticates against Active

00:36:54,359 --> 00:36:56,940
Directory and you have to tell

00:36:55,500 --> 00:36:59,580
everything what your password is so we

00:36:56,940 --> 00:37:05,300
can authenticating so is there actually

00:36:59,580 --> 00:37:05,300
a way to do it right yes

00:37:08,840 --> 00:37:15,150
okay so single sign-on is really hard

00:37:12,300 --> 00:37:17,310
and you know it's probably up there with

00:37:15,150 --> 00:37:18,780
one of those things of hey let's give

00:37:17,310 --> 00:37:21,000
out a huge prize if someone manages to

00:37:18,780 --> 00:37:22,619
solve it because every it's it's almost

00:37:21,000 --> 00:37:24,930
like that at a city every time we invent

00:37:22,619 --> 00:37:26,190
a new single sign-on you know it kind of

00:37:24,930 --> 00:37:28,080
fragments the ecosystem because

00:37:26,190 --> 00:37:29,670
realistically what you're talking about

00:37:28,080 --> 00:37:32,430
is the fact that Active Directory is

00:37:29,670 --> 00:37:34,080
heavily centered around a Kerberos

00:37:32,430 --> 00:37:36,390
distribution center and the Kerberos

00:37:34,080 --> 00:37:38,430
model but today we have a large number

00:37:36,390 --> 00:37:40,440
of applications that don't a large

00:37:38,430 --> 00:37:42,090
number of applications that do not use

00:37:40,440 --> 00:37:44,220
or interact with Kerberos in any

00:37:42,090 --> 00:37:45,990
meaningful way which means that we then

00:37:44,220 --> 00:37:48,480
have other interfaces have to sit on top

00:37:45,990 --> 00:37:50,220
of AD or interact in different ways and

00:37:48,480 --> 00:37:52,350
then we end up with other things like

00:37:50,220 --> 00:37:54,090
you know trying to put on web or thin on

00:37:52,350 --> 00:37:56,520
top of that when ad doesn't work with it

00:37:54,090 --> 00:37:58,560
or you know in these issues and this is

00:37:56,520 --> 00:38:00,090
exactly what Andrew over here was

00:37:58,560 --> 00:38:03,630
talking about the other day in his talk

00:38:00,090 --> 00:38:05,280
and that was that you know there are

00:38:03,630 --> 00:38:07,410
challenges when you have these legacy

00:38:05,280 --> 00:38:09,480
protocols and systems like what you know

00:38:07,410 --> 00:38:12,900
Microsoft has a day or samba4 with AD

00:38:09,480 --> 00:38:15,300
and these are very hard problems right

00:38:12,900 --> 00:38:19,830
really hard this is why I still have a

00:38:15,300 --> 00:38:22,320
job so you know like if authentication

00:38:19,830 --> 00:38:24,680
was solved I'll just move on but you

00:38:22,320 --> 00:38:27,210
know so I don't think there is one

00:38:24,680 --> 00:38:30,480
single way that you can solve this and

00:38:27,210 --> 00:38:32,520
if you want more details about solutions

00:38:30,480 --> 00:38:33,780
for your individual environment you

00:38:32,520 --> 00:38:35,640
should probably come and talk to Andrew

00:38:33,780 --> 00:38:37,950
and I later and we can actually talk

00:38:35,640 --> 00:38:39,750
through what is possible because this is

00:38:37,950 --> 00:38:42,359
you know probably not the forum for

00:38:39,750 --> 00:38:45,859
discussing that kind of detail and what

00:38:42,359 --> 00:38:45,859
is unique to you that you need

00:38:51,390 --> 00:38:56,850
I was just wondering what how could open

00:38:55,560 --> 00:38:58,950
know that or earlier whatever about that

00:38:56,850 --> 00:39:00,900
system you'd work on handles

00:38:58,950 --> 00:39:06,780
multi-factor authentication systems

00:39:00,900 --> 00:39:09,330
we're doing so so the domain so this is

00:39:06,780 --> 00:39:14,250
one of my very big personal frustrations

00:39:09,330 --> 00:39:15,990
is that LDAP as a protocol limits what

00:39:14,250 --> 00:39:18,030
we can do now

00:39:15,990 --> 00:39:19,740
there are things in LDAP such as SAS or

00:39:18,030 --> 00:39:22,620
which we could extend to have

00:39:19,740 --> 00:39:23,970
multi-factor authentication but we then

00:39:22,620 --> 00:39:26,190
need all the clients type they their SAS

00:39:23,970 --> 00:39:31,110
or libraries and even rolling adding

00:39:26,190 --> 00:39:33,060
softest acyl is very different and so as

00:39:31,110 --> 00:39:35,730
a result and then finally even just

00:39:33,060 --> 00:39:38,460
getting people to want to use SAS all in

00:39:35,730 --> 00:39:40,950
the client library or even binding to

00:39:38,460 --> 00:39:45,330
LDAP today is very hard LDAP is not a

00:39:40,950 --> 00:39:47,220
attractive thing to work on so it does

00:39:45,330 --> 00:39:50,460
make it really difficult because you

00:39:47,220 --> 00:39:53,640
know there are ways but there are very

00:39:50,460 --> 00:39:55,590
significant barriers to to this kind of

00:39:53,640 --> 00:39:57,420
thing and this is where we see projects

00:39:55,590 --> 00:39:59,940
like free IPA and what they are doing

00:39:57,420 --> 00:40:02,520
and what they've chosen to do is they've

00:39:59,940 --> 00:40:05,310
gone with Kerberos and OTP and they've

00:40:02,520 --> 00:40:07,950
they invented a mechanism for protecting

00:40:05,310 --> 00:40:10,380
the key the Kerberos key exchange so

00:40:07,950 --> 00:40:13,170
that use magic

00:40:10,380 --> 00:40:14,910
horrible horrible magic and then you can

00:40:13,170 --> 00:40:15,990
use otps with Kerberos basically and

00:40:14,910 --> 00:40:18,150
then they use Kerberos for everything

00:40:15,990 --> 00:40:21,000
else so they do have ways of doing this

00:40:18,150 --> 00:40:22,710
but then it comes back to you've got the

00:40:21,000 --> 00:40:25,590
password in the OTP in the one field and

00:40:22,710 --> 00:40:27,870
and it can be confusing for users and

00:40:25,590 --> 00:40:29,610
and cause problems and of course even

00:40:27,870 --> 00:40:33,240
then we get to things like web or thin

00:40:29,610 --> 00:40:35,100
and good luck getting web or thinning

00:40:33,240 --> 00:40:35,880
LDAP but that's gonna be a fun one I'm

00:40:35,100 --> 00:40:38,460
just

00:40:35,880 --> 00:40:42,390
andrew is laughing at the very thought

00:40:38,460 --> 00:40:44,160
of it and anyway so this is one of those

00:40:42,390 --> 00:40:46,260
real challenges is that what will end up

00:40:44,160 --> 00:40:50,130
happening in that space is probably that

00:40:46,260 --> 00:40:52,050
you'll see LDAP become a database where

00:40:50,130 --> 00:40:53,190
maybe the web will thin and things are

00:40:52,050 --> 00:40:55,230
stored in it but then you may have a

00:40:53,190 --> 00:40:56,940
front end processing application that

00:40:55,230 --> 00:40:59,550
knows how to actually trigger the web or

00:40:56,940 --> 00:41:01,620
thin interactions and these nice of

00:40:59,550 --> 00:41:04,680
workflows and then Arup is just used as

00:41:01,620 --> 00:41:05,190
a distributed storage so that's an

00:41:04,680 --> 00:41:07,170
example

00:41:05,190 --> 00:41:08,190
for that for that kind of thing so yeah

00:41:07,170 --> 00:41:10,200
but there of course there's other

00:41:08,190 --> 00:41:16,349
services that that can help with this

00:41:10,200 --> 00:41:19,920
too so yeah well while we're waiting for

00:41:16,349 --> 00:41:21,450
the microphone to get to Fraser if any

00:41:19,920 --> 00:41:22,650
of you ever want please come and

00:41:21,450 --> 00:41:25,200
approach me and I'm happy to talk about

00:41:22,650 --> 00:41:26,849
authentication at length which is your

00:41:25,200 --> 00:41:32,339
warning that I will talk about it at

00:41:26,849 --> 00:41:33,050
length yes William with the phishing

00:41:32,339 --> 00:41:37,800
attacks

00:41:33,050 --> 00:41:40,970
these are usually relying on the domain

00:41:37,800 --> 00:41:44,010
name looking similar or like ID in

00:41:40,970 --> 00:41:47,160
homograph attacks yeah is this an area

00:41:44,010 --> 00:41:50,760
where the principle of consistency in

00:41:47,160 --> 00:41:53,460
the UI is actually harmful yes in it so

00:41:50,760 --> 00:41:56,880
well it's the the fact that the the UI

00:41:53,460 --> 00:41:58,710
is presented in a specific way and you

00:41:56,880 --> 00:42:00,780
know the UI elements that we present and

00:41:58,710 --> 00:42:02,160
focus on when we look at a webpage is we

00:42:00,780 --> 00:42:04,230
look at the content in the center of the

00:42:02,160 --> 00:42:06,480
screen and the domain name is relegated

00:42:04,230 --> 00:42:09,420
to a tiny part on the top and that's

00:42:06,480 --> 00:42:11,849
what makes it so that we aren't focusing

00:42:09,420 --> 00:42:14,130
on that change and then it leaves us

00:42:11,849 --> 00:42:15,780
open to these attacks such as you know

00:42:14,130 --> 00:42:18,300
the Homa graphs or

00:42:15,780 --> 00:42:19,710
you know similar sort of thing like I

00:42:18,300 --> 00:42:22,140
remember one that was going around like

00:42:19,710 --> 00:42:24,560
I think it was corn Bank trying to

00:42:22,140 --> 00:42:26,760
impersonate Kahn Bank that one was good

00:42:24,560 --> 00:42:28,920
but the thing is that those are it's

00:42:26,760 --> 00:42:31,319
it's that these applications are not

00:42:28,920 --> 00:42:33,450
prioritizing hey you're on a different

00:42:31,319 --> 00:42:35,400
website and this is why I actually did

00:42:33,450 --> 00:42:39,510
suggest if you click the password field

00:42:35,400 --> 00:42:41,280
and you know how so on Firefox I it'll

00:42:39,510 --> 00:42:43,050
drop down and show you you've got this

00:42:41,280 --> 00:42:45,300
save logging but if above that imagine

00:42:43,050 --> 00:42:47,040
if it showed you say a colored pattern

00:42:45,300 --> 00:42:47,940
and if that colored pattern was ever

00:42:47,040 --> 00:42:50,550
different you know you're on a different

00:42:47,940 --> 00:42:52,950
website and that's a very amazing visual

00:42:50,550 --> 00:42:54,569
way of you know being how to quickly see

00:42:52,950 --> 00:42:55,770
you're on a different domain and it

00:42:54,569 --> 00:42:58,710
actually would enable people to then

00:42:55,770 --> 00:43:01,109
follow up and investigate and and maybe

00:42:58,710 --> 00:43:05,269
someone from Firefox hint could

00:43:01,109 --> 00:43:07,709
implement this as be amazing yeah

00:43:05,269 --> 00:43:09,150
an extension yeah an extension would

00:43:07,709 --> 00:43:11,309
would possibly do it but yeah it does

00:43:09,150 --> 00:43:14,359
rely on those consistency elements to

00:43:11,309 --> 00:43:17,459
trick us that's how it works yeah

00:43:14,359 --> 00:43:18,239
do we have time yeah we got time for a

00:43:17,459 --> 00:43:28,219
couple more questions

00:43:18,239 --> 00:43:33,929
ah don't worry about me the idea of the

00:43:28,219 --> 00:43:37,709
token getting the some kind of either

00:43:33,929 --> 00:43:41,239
the site name or the some kind of hash

00:43:37,709 --> 00:43:45,809
of that some kind of unique identifier

00:43:41,239 --> 00:43:48,390
relies on the browser taking that number

00:43:45,809 --> 00:43:53,160
and name and handing it off to that

00:43:48,390 --> 00:43:56,369
thing is that something I mean it's the

00:43:53,160 --> 00:43:57,839
security of that part that I mean we

00:43:56,369 --> 00:44:00,150
need to worry about and that's why I can

00:43:57,839 --> 00:44:03,059
see JavaScript you know a tax on that

00:44:00,150 --> 00:44:07,439
okay so there is there is JavaScript

00:44:03,059 --> 00:44:08,429
elements so what to focus that a litte

00:44:07,439 --> 00:44:10,259
bit more we're not just talking about

00:44:08,429 --> 00:44:13,739
OTPs here we're talking you split about

00:44:10,259 --> 00:44:16,079
web or thing in this case so in terms of

00:44:13,739 --> 00:44:18,569
the way that that works the JavaScript

00:44:16,079 --> 00:44:20,309
which is used for that interaction is

00:44:18,569 --> 00:44:22,739
minimal and it actually calls an

00:44:20,309 --> 00:44:25,199
in-browser API and that in browser API

00:44:22,739 --> 00:44:26,939
then contacts the main browser processes

00:44:25,199 --> 00:44:31,819
which are isolated from the rendering

00:44:26,939 --> 00:44:31,819
processes and so that way there is

00:44:32,059 --> 00:44:36,150
assurances that you know your browser is

00:44:34,890 --> 00:44:37,739
the one that is handling this and

00:44:36,150 --> 00:44:39,029
prompting with those you eyes such as

00:44:37,739 --> 00:44:40,439
the drop-down that says this website

00:44:39,029 --> 00:44:43,199
wants to authenticate you and this kind

00:44:40,439 --> 00:44:45,329
of thing so for someone to attack that

00:44:43,199 --> 00:44:46,409
would mean that they have a generic code

00:44:45,329 --> 00:44:49,049
execution within your browser

00:44:46,409 --> 00:44:52,109
environment and these things are getting

00:44:49,049 --> 00:44:55,019
harder to achieve and they are certainly

00:44:52,109 --> 00:44:57,029
worth a lot of money and so there's a

00:44:55,019 --> 00:44:59,819
lot of interesting finding and securing

00:44:57,029 --> 00:45:01,380
these things so you are absolutely

00:44:59,819 --> 00:45:03,779
correct that we are having to say yeah

00:45:01,380 --> 00:45:05,489
we we have to trust our browsers as safe

00:45:03,779 --> 00:45:07,529
you know arbitrary code execution

00:45:05,489 --> 00:45:10,679
environments which is a wonderful thing

00:45:07,529 --> 00:45:12,119
to have to rely on but you know the way

00:45:10,679 --> 00:45:14,819
that they are doing it today in terms of

00:45:12,119 --> 00:45:16,589
multi-process sandboxing the IPC's and

00:45:14,819 --> 00:45:18,960
the way that have structured the web or

00:45:16,589 --> 00:45:20,880
thin interactions actually does help to

00:45:18,960 --> 00:45:22,799
you know give you strong assurances that

00:45:20,880 --> 00:45:25,650
this process has not been tampered with

00:45:22,799 --> 00:45:27,359
so it you know it is actually reasonably

00:45:25,650 --> 00:45:29,160
secure and if you want more details I'm

00:45:27,359 --> 00:45:30,750
happy to talk about it at length I'm the

00:45:29,160 --> 00:45:33,779
author of the we're both in library for

00:45:30,750 --> 00:45:38,430
rust so you know I've had the fun of

00:45:33,779 --> 00:45:44,460
implementing all of this lucky last

00:45:38,430 --> 00:45:48,839
question row Oh perfect just a point of

00:45:44,460 --> 00:45:52,109
clarification using u2f for example on a

00:45:48,839 --> 00:45:56,130
Yubikey you mentioned that the bizarre

00:45:52,109 --> 00:45:56,760
domain-specific private key that's

00:45:56,130 --> 00:45:58,740
generated

00:45:56,760 --> 00:46:01,349
does that mean your Yubikey actually

00:45:58,740 --> 00:46:03,450
stores a different private key for every

00:46:01,349 --> 00:46:04,770
domain or every service you you use that

00:46:03,450 --> 00:46:06,299
that's a bit of a silly question maybe

00:46:04,770 --> 00:46:07,349
but it's not a silly question it's

00:46:06,299 --> 00:46:10,200
actually a really good question because

00:46:07,349 --> 00:46:12,589
the way that that is done is you know it

00:46:10,200 --> 00:46:15,210
confused me at first as well and and

00:46:12,589 --> 00:46:17,339
realistically there are two models

00:46:15,210 --> 00:46:19,380
within different security tokens for

00:46:17,339 --> 00:46:21,690
this to occur there are some security

00:46:19,380 --> 00:46:23,880
keys where it will generate a unique

00:46:21,690 --> 00:46:26,069
private key per domain and then there is

00:46:23,880 --> 00:46:28,680
a finite limit to storage on the key and

00:46:26,069 --> 00:46:30,630
- how many domains you can have and this

00:46:28,680 --> 00:46:32,190
certainly is you know for some keys I

00:46:30,630 --> 00:46:33,450
don't know off the top of my head which

00:46:32,190 --> 00:46:36,630
ones so I'm not going to make those

00:46:33,450 --> 00:46:38,220
claims but there are other keys where

00:46:36,630 --> 00:46:38,970
what they use is they use there's a

00:46:38,220 --> 00:46:41,940
private key

00:46:38,970 --> 00:46:43,770
they take the domain name they use a KDF

00:46:41,940 --> 00:46:46,289
for our hash function on that and then

00:46:43,770 --> 00:46:50,339
they combine those two elements to form

00:46:46,289 --> 00:46:53,099
a derived private key so the private key

00:46:50,339 --> 00:46:55,500
then becomes ephemeral all you need is

00:46:53,099 --> 00:46:57,089
that original private key as a seed and

00:46:55,500 --> 00:46:59,329
then the same domain name and you'll

00:46:57,089 --> 00:47:02,279
always arrive at the same private key so

00:46:59,329 --> 00:47:04,170
you can then have infinite number based

00:47:02,279 --> 00:47:06,329
on the infinite number of domains you

00:47:04,170 --> 00:47:08,369
can get and that's also what causes when

00:47:06,329 --> 00:47:09,869
the domain is slightly different it then

00:47:08,369 --> 00:47:12,390
derives a completely different private

00:47:09,869 --> 00:47:13,890
key on the fly so yeah it that is

00:47:12,390 --> 00:47:19,710
actually a really good question I'm very

00:47:13,890 --> 00:47:22,050
glad occasion thanks yeah okay please

00:47:19,710 --> 00:47:24,110
thank William for this in Cyprus all

00:47:22,050 --> 00:47:24,110

YouTube URL: https://www.youtube.com/watch?v=qOZzleJ9OEs


