Title: "Bash-my-AWS: CLI commands for managing AWS resources" - Mike Bailey (LCA 2020)
Publication date: 2020-01-14
Playlist: linux.conf.au 2020
Description: 
	Mike Bailey

https://lca2020.linux.org.au/schedule/presentation/144/

If you use Amazon AWS and prefer the command line over ClickOps(TM), this talk might just make your week.

For decades, the command line and shell scripts have been a core part of unix culture and preferred tools for many sysadmins. The existing unix commands that come with any linux/bsd distro, along with streams/pipelining, plain text and a lack of mouseclicks are just a few of the attractions.

In recent years, ClickOps seems to be on the rise - largely due to enterprise web applications with suboptimal (or absent) CLI tools.  Many of us have been spending more time in the AWS Web Console than we would like for this very reason.

Bash-my-AWS is a simple but extremely powerful set of CLI commands for managing resources on Amazon Web Services. They harness the power of Amazon's AWSCLI, while abstracting away the verbosity. The project implements some innovative patterns but (arguably) remains simple, beautiful, readable and easily extensible.

By emitting line oriented output instead of JSON, Bash-my-AWS commands work well  in pipelines with other standard unix commands. Additionally, the commands take a novel approach to handing STDIN that  greatly improves the user experience.

The talk will introduce the project and describe it's novel use of pipelining to improve the user experience.

Website: https://bash-my-aws.org
Git: https://github.com/bash-my-aws/bash-my-aws

linux.conf.au is a conference about the Linux operating system, and all aspects of the thriving ecosystem of Free and Open Source Software that has grown up around it. Run since 1999, in a different Australian or New Zealand city each year, by a team of local volunteers, LCA invites more than 500 people to learn from the people who shape the future of Open Source. For more information on the conference see https://linux.conf.au/

Produced by NDV: https://youtube.com/channel/UCQ7dFBzZGlBvtU2hCecsBBg?sub_confirmation=1

#linux.conf.au #linux #foss #opensource

Mon Jan 13 16:05:00 2020 at Arena
Captions: 
	00:00:00,170 --> 00:00:07,470
pictures hi everyone could I get no it's

00:00:04,770 --> 00:00:09,300
the end of the day on Monday so you guys

00:00:07,470 --> 00:00:12,030
probably tired and I've been sweating

00:00:09,300 --> 00:00:17,160
this all day but I get a show of hands

00:00:12,030 --> 00:00:19,380
who's using AWS Amazon Web Services ok

00:00:17,160 --> 00:00:25,109
fair for you and show of hands who's

00:00:19,380 --> 00:00:29,060
using bash my AWS awesome so for a lot

00:00:25,109 --> 00:00:29,060
of you this might make your week

00:00:29,269 --> 00:00:36,870
pull Henningsen in about a hundred years

00:00:32,910 --> 00:00:39,480
ago he was really pissed off he was a

00:00:36,870 --> 00:00:40,739
little bit princess in the peat everyone

00:00:39,480 --> 00:00:43,559
probably remembers the story of The

00:00:40,739 --> 00:00:46,739
Princess and the pea the Queen wanted to

00:00:43,559 --> 00:00:49,800
get a good wife for his son for her son

00:00:46,739 --> 00:00:52,230
she put ten mattresses up and put a pea

00:00:49,800 --> 00:00:54,510
underneath and then auditioned people

00:00:52,230 --> 00:00:57,690
just to sleep in the bed and then one

00:00:54,510 --> 00:00:59,910
person complained hard and said this was

00:00:57,690 --> 00:01:02,489
a worst sleep I've ever had and she went

00:00:59,910 --> 00:01:03,960
she's a princess and I think in those

00:01:02,489 --> 00:01:06,210
days that the story was written that was

00:01:03,960 --> 00:01:07,860
a good thing so this guy was really

00:01:06,210 --> 00:01:09,960
pissed off with lighting it was the

00:01:07,860 --> 00:01:12,570
1920s and electric lights were tutelary

00:01:09,960 --> 00:01:16,799
so he went up to his attic and spent

00:01:12,570 --> 00:01:18,540
three years up there smoking and drawing

00:01:16,799 --> 00:01:21,060
pictures and thinking about light and

00:01:18,540 --> 00:01:23,400
designing after three years coming out

00:01:21,060 --> 00:01:25,430
with a lie which everyone in Denmark

00:01:23,400 --> 00:01:27,900
knows poor Hennings and his name or pH

00:01:25,430 --> 00:01:30,150
on my little break before I thought talk

00:01:27,900 --> 00:01:33,329
about this because they've got pH lights

00:01:30,150 --> 00:01:35,400
here loads of them all they're replicas

00:01:33,329 --> 00:01:38,850
and they they're not meant to have any

00:01:35,400 --> 00:01:43,500
direct glare in your eyes so that leads

00:01:38,850 --> 00:01:46,229
to the talk bash my AWS is a project

00:01:43,500 --> 00:01:48,750
that I started five years ago it's I've

00:01:46,229 --> 00:01:51,810
put a lot of effort into it because I

00:01:48,750 --> 00:01:53,880
like working on the command line and AWS

00:01:51,810 --> 00:01:56,909
didn't really have any good command-line

00:01:53,880 --> 00:02:00,950
tools that satisfied me the things that

00:01:56,909 --> 00:02:04,290
I'm going to cover are how it works

00:02:00,950 --> 00:02:07,079
introduction to bash my aw into Amazon

00:02:04,290 --> 00:02:09,149
Web Services and the CLI and why that's

00:02:07,079 --> 00:02:12,330
not enough for me just to use day-to-day

00:02:09,149 --> 00:02:13,210
and then pipe skimming which no one's

00:02:12,330 --> 00:02:15,340
heard of because they go

00:02:13,210 --> 00:02:17,520
the name to it last week but it's been

00:02:15,340 --> 00:02:20,320
doing it for a few years in bash my AWS

00:02:17,520 --> 00:02:22,090
the project's getting about 10 stars a

00:02:20,320 --> 00:02:24,670
day since it was on Hacker News it's had

00:02:22,090 --> 00:02:28,570
300 stars in the last week on github but

00:02:24,670 --> 00:02:30,190
I think this crew can see the actual

00:02:28,570 --> 00:02:31,660
value of what it is not just that it's

00:02:30,190 --> 00:02:37,450
popular because a lot of popular things

00:02:31,660 --> 00:02:40,650
and that good the command line I love

00:02:37,450 --> 00:02:43,870
using the command line I just like it

00:02:40,650 --> 00:02:47,710
explanations for why I like being able

00:02:43,870 --> 00:02:49,690
to compose things that the creator of

00:02:47,710 --> 00:02:52,360
some GUI didn't think that I wanted to

00:02:49,690 --> 00:02:55,180
do I can wrap things I can do things how

00:02:52,360 --> 00:02:57,340
I want it I can save the output to a

00:02:55,180 --> 00:02:59,680
file instead of copying and pasting from

00:02:57,340 --> 00:03:02,950
a web interface on an enterprise web app

00:02:59,680 --> 00:03:03,880
click ops I get frustrated and I found

00:03:02,950 --> 00:03:06,130
this with AWS

00:03:03,880 --> 00:03:08,380
I was doing a lot of stuff in the

00:03:06,130 --> 00:03:10,480
workplace where I was logging into a web

00:03:08,380 --> 00:03:12,550
browser and navigating around and

00:03:10,480 --> 00:03:16,150
getting one thing and acting on it I

00:03:12,550 --> 00:03:18,280
couldn't act on 50 things or I could

00:03:16,150 --> 00:03:20,110
copy the things and I found I thought if

00:03:18,280 --> 00:03:22,090
this is the future I'm getting out of

00:03:20,110 --> 00:03:24,160
computers like I did in 1990 when I

00:03:22,090 --> 00:03:29,830
finished school for five years then the

00:03:24,160 --> 00:03:32,800
internet came along so AWS a really good

00:03:29,830 --> 00:03:35,530
thing is they've got configures code I

00:03:32,800 --> 00:03:37,450
didn't like their CloudFormation and I

00:03:35,530 --> 00:03:40,390
decided to upgrade myself rather than

00:03:37,450 --> 00:03:42,100
try and use somebody else's rewrite that

00:03:40,390 --> 00:03:44,320
would never cover all their services

00:03:42,100 --> 00:03:46,930
won't start a flame war but I like cloud

00:03:44,320 --> 00:03:49,240
formation but I still need to create the

00:03:46,930 --> 00:03:51,130
cloud formation stack which makes the

00:03:49,240 --> 00:03:53,290
resources I still need to list them and

00:03:51,130 --> 00:03:55,840
I still need to interact with the

00:03:53,290 --> 00:04:00,970
resources that are created so while all

00:03:55,840 --> 00:04:04,420
my resources are in git I need to SSH

00:04:00,970 --> 00:04:06,100
into an instance or make a call to look

00:04:04,420 --> 00:04:08,920
at the console output without exercising

00:04:06,100 --> 00:04:11,620
in I need to have look how many

00:04:08,920 --> 00:04:14,260
instances are in the auto scaling group

00:04:11,620 --> 00:04:15,880
which might be down 2-0 at night and I

00:04:14,260 --> 00:04:19,090
need it at 1 if I want it to do

00:04:15,880 --> 00:04:20,710
something or I needed it more or if I

00:04:19,090 --> 00:04:22,690
want to replace an instance I need to be

00:04:20,710 --> 00:04:25,120
able to view those things and I don't

00:04:22,690 --> 00:04:26,070
want to do clicky clicky also my wrist

00:04:25,120 --> 00:04:29,550
moves that

00:04:26,070 --> 00:04:31,950
I've got extra bone it's gotten bad over

00:04:29,550 --> 00:04:36,900
the years so I don't for accessibility I

00:04:31,950 --> 00:04:40,620
don't want to be clicking so AWS CLI I

00:04:36,900 --> 00:04:42,960
can do AWS CloudFormation lists tax to

00:04:40,620 --> 00:04:47,880
list all the CloudFormation stacks in an

00:04:42,960 --> 00:04:50,100
account in the current region and I

00:04:47,880 --> 00:04:51,870
recorded this one earlier because it

00:04:50,100 --> 00:04:54,450
took me so many takes I thought I don't

00:04:51,870 --> 00:04:56,940
want to do it now so I'm using the AWS

00:04:54,450 --> 00:05:02,190
CLI to list the stacks in this account

00:04:56,940 --> 00:05:05,280
and the output is less than readable for

00:05:02,190 --> 00:05:08,010
me it's a big thing of JSON which is

00:05:05,280 --> 00:05:09,840
really cool for computers but it's not

00:05:08,010 --> 00:05:12,540
the line oriented up what I normally

00:05:09,840 --> 00:05:14,580
expect from a UNIX command now I'll just

00:05:12,540 --> 00:05:16,890
look at the first 15 lines and we see

00:05:14,580 --> 00:05:18,450
there's a list of stack summaries with

00:05:16,890 --> 00:05:23,010
some interesting details like the stack

00:05:18,450 --> 00:05:26,670
name creation time the stack status so I

00:05:23,010 --> 00:05:28,740
can use a part of the AWS CLI that lets

00:05:26,670 --> 00:05:30,870
you query using a thing called James

00:05:28,740 --> 00:05:32,520
path look it up later

00:05:30,870 --> 00:05:33,900
James path has a spec it's been

00:05:32,520 --> 00:05:36,510
implemented in most languages

00:05:33,900 --> 00:05:39,300
it's like JQ with the spec and it

00:05:36,510 --> 00:05:42,840
compiles in my brain JQ has never really

00:05:39,300 --> 00:05:46,350
been able to do that so I've listed now

00:05:42,840 --> 00:05:49,260
just the first item in the array stack

00:05:46,350 --> 00:05:52,530
summary zero so I can work with it more

00:05:49,260 --> 00:05:54,810
easily if in the james path I then

00:05:52,530 --> 00:05:58,680
specified little array with the stack

00:05:54,810 --> 00:06:00,300
name and the stack status then running

00:05:58,680 --> 00:06:01,650
that same command will just give me

00:06:00,300 --> 00:06:04,110
those things which is a bit more

00:06:01,650 --> 00:06:08,280
manageable there's a mic working when I

00:06:04,110 --> 00:06:12,900
put my head up ok I'll go like this

00:06:08,280 --> 00:06:15,120
alright bring the chins so we've got

00:06:12,900 --> 00:06:17,310
just the first record two things that I

00:06:15,120 --> 00:06:23,370
care about that's not much better with

00:06:17,310 --> 00:06:26,160
the chins and what did i do then and

00:06:23,370 --> 00:06:31,950
then i say output equals text so I'm

00:06:26,160 --> 00:06:33,630
getting line oriented output and then I

00:06:31,950 --> 00:06:36,510
go alright that looks good so let's get

00:06:33,630 --> 00:06:37,180
rid of that little array thingy and lips

00:06:36,510 --> 00:06:44,050
but

00:06:37,180 --> 00:06:47,830
bring them all on kind of beautiful like

00:06:44,050 --> 00:06:49,509
a face a mother would love but there's a

00:06:47,830 --> 00:06:52,570
lot of crap in there it shows you every

00:06:49,509 --> 00:06:54,400
stack that ever existed that is dead so

00:06:52,570 --> 00:06:56,169
let's describe - feet and this is why I

00:06:54,400 --> 00:06:58,030
love the command line you can be sitting

00:06:56,169 --> 00:06:59,229
here and going I don't want to see that

00:06:58,030 --> 00:07:03,430
I just want to see the ones that are

00:06:59,229 --> 00:07:05,229
currently exist and then I might use

00:07:03,430 --> 00:07:08,110
another UNIX command column which

00:07:05,229 --> 00:07:10,060
everybody's got I found it through - my

00:07:08,110 --> 00:07:11,680
AWS through kneading it the other thing

00:07:10,060 --> 00:07:14,199
is UNIX is done if you need something

00:07:11,680 --> 00:07:16,599
it's written you very rarely need to

00:07:14,199 --> 00:07:20,860
write a small thing to do something with

00:07:16,599 --> 00:07:25,870
text and so here we have a simple little

00:07:20,860 --> 00:07:27,940
list the bachmeier AWS command stacks is

00:07:25,870 --> 00:07:30,460
similar to that it provides you also

00:07:27,940 --> 00:07:33,849
with the date the stack was created the

00:07:30,460 --> 00:07:36,910
date time it was updated by default

00:07:33,849 --> 00:07:40,210
bachmeier AWS is little commands like

00:07:36,910 --> 00:07:41,650
this which lists resources other

00:07:40,210 --> 00:07:45,970
commands which give you a bit more

00:07:41,650 --> 00:07:48,659
detail for the resources we've got a

00:07:45,970 --> 00:07:51,159
slide for that though lists resources

00:07:48,659 --> 00:07:54,159
some commands will give you a bit more

00:07:51,159 --> 00:07:55,750
detail if you give it a resource there

00:07:54,159 --> 00:07:56,320
isn't space on the command line to show

00:07:55,750 --> 00:08:00,250
everything

00:07:56,320 --> 00:08:01,870
I think the JSON showed that so you

00:08:00,250 --> 00:08:04,229
might want to look up an extra bit of

00:08:01,870 --> 00:08:06,490
detail that you don't need to always see

00:08:04,229 --> 00:08:08,259
also you can act on things you can kill

00:08:06,490 --> 00:08:10,780
instances you can tell an auto scaling

00:08:08,259 --> 00:08:15,610
group to scale up or scale down you can

00:08:10,780 --> 00:08:19,690
SSH into instances you can create a ec2

00:08:15,610 --> 00:08:22,120
key pair you want to SSH key on the

00:08:19,690 --> 00:08:25,599
system create it locally securely it

00:08:22,120 --> 00:08:28,000
never touches any disk unencrypted it

00:08:25,599 --> 00:08:30,250
Amazon don't give it to you the private

00:08:28,000 --> 00:08:31,979
key and you don't download it and

00:08:30,250 --> 00:08:34,839
encrypt it onto your local Drive so

00:08:31,979 --> 00:08:37,000
basic actions you'd want to do and also

00:08:34,839 --> 00:08:39,370
related resources so if I have an

00:08:37,000 --> 00:08:41,500
instance as we saw in the picture before

00:08:39,370 --> 00:08:42,219
the instance may belong to an auto

00:08:41,500 --> 00:08:44,860
scaling group

00:08:42,219 --> 00:08:47,890
what's the auto scaling group can I jump

00:08:44,860 --> 00:08:50,079
across the graph can I list go from a

00:08:47,890 --> 00:08:50,690
stack and say list the auto scaling

00:08:50,079 --> 00:08:52,970
groups in

00:08:50,690 --> 00:08:54,170
stack and then the auto scaling group to

00:08:52,970 --> 00:08:55,730
give me the instance in those auto

00:08:54,170 --> 00:09:00,380
scaling groups so I'm going to show you

00:08:55,730 --> 00:09:04,430
those in a live demo wish me luck

00:09:00,380 --> 00:09:09,620
or just enjoy it enjoy my failure

00:09:04,430 --> 00:09:11,810
so is this now I'll just do the chins

00:09:09,620 --> 00:09:17,630
okay I don't know I look like this I

00:09:11,810 --> 00:09:19,210
normally try to go I that okay okay

00:09:17,630 --> 00:09:23,480
thank you

00:09:19,210 --> 00:09:26,180
so we've got our auto scaling group with

00:09:23,480 --> 00:09:29,390
some instances we've got some stacks so

00:09:26,180 --> 00:09:33,170
I can list stacks see what's in there I

00:09:29,390 --> 00:09:36,500
can list instances also I put a little

00:09:33,170 --> 00:09:39,020
thing into my branch here so that it

00:09:36,500 --> 00:09:42,160
cuts things off at 90 characters can

00:09:39,020 --> 00:09:43,880
everyone read it can anyone not read it

00:09:42,160 --> 00:09:45,590
good

00:09:43,880 --> 00:09:47,390
so it's cutting it off at 90 there's

00:09:45,590 --> 00:09:48,680
normally a little bit more but I wanted

00:09:47,390 --> 00:09:54,500
to get something I thought people could

00:09:48,680 --> 00:09:56,180
read I can list instances what you're

00:09:54,500 --> 00:09:59,000
seeing in the first column of each of

00:09:56,180 --> 00:10:01,610
these is the resource identifier and

00:09:59,000 --> 00:10:05,090
that comes in a little bit later I can

00:10:01,610 --> 00:10:12,140
list the auto scaling groups VOC unless

00:10:05,090 --> 00:10:14,990
my key pairs and if I list the files in

00:10:12,140 --> 00:10:17,030
Lib in bash my AWS you can see a listing

00:10:14,990 --> 00:10:19,550
of all the types of things that you can

00:10:17,030 --> 00:10:24,140
list so we're going to focus on the

00:10:19,550 --> 00:10:28,370
instances now so we can go instances I

00:10:24,140 --> 00:10:30,530
have my graph honor and my Hugin and I

00:10:28,370 --> 00:10:33,810
might think alright I want to log in to

00:10:30,530 --> 00:10:35,200
refiner how do I do that I can go

00:10:33,810 --> 00:10:45,140
[Music]

00:10:35,200 --> 00:10:50,320
instance instance stack for the graph on

00:10:45,140 --> 00:10:50,320
at one unlike alright that's I

00:10:50,449 --> 00:10:54,839
and I'm feeling a little bit like the

00:10:52,769 --> 00:10:57,089
copypasta I do not want to copy and

00:10:54,839 --> 00:10:58,980
paste it I can tab complete which is

00:10:57,089 --> 00:11:01,499
handy so all the remote resources do

00:10:58,980 --> 00:11:04,829
have tab completion and I can find the

00:11:01,499 --> 00:11:07,249
stack and then I can go okay the stack

00:11:04,829 --> 00:11:13,069
is graph on a bm8 so now I can go stack

00:11:07,249 --> 00:11:16,259
outputs graph on a BA and the

00:11:13,069 --> 00:11:18,089
CloudFormation template should have some

00:11:16,259 --> 00:11:20,699
outputs that tell you anything people

00:11:18,089 --> 00:11:23,929
would want to know so I can open that

00:11:20,699 --> 00:11:30,980
link and I see my graph Anna

00:11:23,929 --> 00:11:33,569
yes so that's good that worked the

00:11:30,980 --> 00:11:35,369
another thing I can do is I can say I've

00:11:33,569 --> 00:11:41,189
only got one graph on our instance and I

00:11:35,369 --> 00:11:43,499
need more so I could say instances with

00:11:41,189 --> 00:11:45,480
all of the listing functions I can go

00:11:43,499 --> 00:11:48,679
pipe grep graph Anna

00:11:45,480 --> 00:11:51,569
of course but I can also just type

00:11:48,679 --> 00:11:53,459
something to do a pipe grip and it will

00:11:51,569 --> 00:11:54,959
do it before it column eise's so if

00:11:53,459 --> 00:11:56,399
other people have long names that are

00:11:54,959 --> 00:11:58,110
throwing things out and you only have

00:11:56,399 --> 00:12:01,769
short names your things will show up

00:11:58,110 --> 00:12:05,429
neatly on your command line so I've got

00:12:01,769 --> 00:12:07,259
one and then I can go instance auto

00:12:05,429 --> 00:12:12,660
scaling group to find out what auto

00:12:07,259 --> 00:12:14,910
scaling group that's a part of I am a

00:12:12,660 --> 00:12:17,009
princess I really don't like having to

00:12:14,910 --> 00:12:20,939
mess around typing stuff in again when I

00:12:17,009 --> 00:12:25,730
just had it on the previous line then

00:12:20,939 --> 00:12:31,619
instance a issue so I can go a SG

00:12:25,730 --> 00:12:34,230
capacity for the graph on our thing okay

00:12:31,619 --> 00:12:36,949
so it's got a minimum size of one its

00:12:34,230 --> 00:12:43,049
desired sizes one and a maximum of two

00:12:36,949 --> 00:12:44,970
so I can go a SG desired size set notice

00:12:43,049 --> 00:12:46,470
I'm using tab completion the way that

00:12:44,970 --> 00:12:49,739
the commands are all laid out you can

00:12:46,470 --> 00:12:54,419
see what all the ASG commands are ASG

00:12:49,739 --> 00:12:56,749
desired size set one for the graph Anna

00:12:54,419 --> 00:12:56,749
thing

00:12:57,740 --> 00:13:04,340
cool the type completions not working

00:12:59,330 --> 00:13:13,040
all right this is really I find this

00:13:04,340 --> 00:13:15,080
really annoying SG capacity and I should

00:13:13,040 --> 00:13:17,110
set it to what it isn't already or else

00:13:15,080 --> 00:13:25,340
you will not believe that that is

00:13:17,110 --> 00:13:26,600
working okay so it's scepter - well what

00:13:25,340 --> 00:13:28,190
about the pipes this is not a very good

00:13:26,600 --> 00:13:33,170
command-line tool if it doesn't support

00:13:28,190 --> 00:13:35,120
piping but if I say instances I can't

00:13:33,170 --> 00:13:36,530
really pipe that into the instance ASG

00:13:35,120 --> 00:13:40,660
command because it's got a whole lot of

00:13:36,530 --> 00:13:55,670
crap and what's it meant to do with that

00:13:40,660 --> 00:13:56,960
can you do it really slow so I can use

00:13:55,670 --> 00:14:03,679
pipes

00:13:56,960 --> 00:14:03,679
[Music]

00:14:14,040 --> 00:14:23,140
[Music]

00:14:15,450 --> 00:14:28,840
excuse me instance ASG I will show you

00:14:23,140 --> 00:14:31,240
that so you can pipe in as many as you

00:14:28,840 --> 00:14:36,250
like I could do all the instances and I

00:14:31,240 --> 00:14:38,020
could get all the aSG's I think this is

00:14:36,250 --> 00:14:39,970
just how interface should work it should

00:14:38,020 --> 00:14:41,830
be really short it's rude to have such a

00:14:39,970 --> 00:14:43,900
short name but it's free in the

00:14:41,830 --> 00:14:45,220
namespace nobody else has it you can

00:14:43,900 --> 00:14:46,810
call it something different when you

00:14:45,220 --> 00:14:50,170
install this if you like because they're

00:14:46,810 --> 00:14:53,110
all aliases so we've got instance ASG

00:14:50,170 --> 00:14:59,290
and then we might just say ASG capacity

00:14:53,110 --> 00:15:04,140
for all of these things they vary let's

00:14:59,290 --> 00:15:09,060
make them all the same decide size set

00:15:04,140 --> 00:15:09,060
maximum is 2 let's make everything too

00:15:14,980 --> 00:15:24,370
and it's doing its little things now all

00:15:18,040 --> 00:15:32,640
that these things are doing is just very

00:15:24,370 --> 00:15:36,660
thinly rapping if I go type instance ASG

00:15:32,640 --> 00:15:39,310
its alias to a small rapper that then

00:15:36,660 --> 00:15:42,760
sources the Bosch functions and then

00:15:39,310 --> 00:15:46,480
runs that best flash function if I use

00:15:42,760 --> 00:15:49,120
the rapper itself to run type it will

00:15:46,480 --> 00:15:52,860
show me the function so this is just an

00:15:49,120 --> 00:15:56,890
AWS CLI command here with your column

00:15:52,860 --> 00:15:59,980
and at the top it's getting the instance

00:15:56,890 --> 00:16:02,830
IDs from your arguments to the command

00:15:59,980 --> 00:16:05,950
and it's appending to the end the first

00:16:02,830 --> 00:16:08,890
item from each line on standard in so

00:16:05,950 --> 00:16:10,570
this is this is called I've named it pot

00:16:08,890 --> 00:16:12,370
skimming I'd actually love it if someone

00:16:10,570 --> 00:16:14,590
goes ha here's this thing that does that

00:16:12,370 --> 00:16:17,770
you it takes the first item from each

00:16:14,590 --> 00:16:19,510
thing you can tell me more about

00:16:17,770 --> 00:16:22,090
PowerShell people have said that's just

00:16:19,510 --> 00:16:23,140
PowerShell already does that but you can

00:16:22,090 --> 00:16:25,840
tell me more about that

00:16:23,140 --> 00:16:28,060
but I don't use Windows but I'd like to

00:16:25,840 --> 00:16:33,160
find prior art there'd be good but if it

00:16:28,060 --> 00:16:36,840
isn't I'd like people to hopefully like

00:16:33,160 --> 00:16:42,220
this and start doing it for other things

00:16:36,840 --> 00:16:44,260
so scheme standard in is a bit of a

00:16:42,220 --> 00:16:46,480
rework to the project that's on the

00:16:44,260 --> 00:16:48,460
branch that hasn't been merged yet to

00:16:46,480 --> 00:16:51,010
make it simpler presentation driven

00:16:48,460 --> 00:16:54,100
development in preparing for this I

00:16:51,010 --> 00:16:56,170
wanted to be able to solidify the idea

00:16:54,100 --> 00:17:02,370
and make it a simple thing that people

00:16:56,170 --> 00:17:07,209
could could get ahead around if I go I

00:17:02,370 --> 00:17:12,760
shared other things in this project is

00:17:07,209 --> 00:17:14,650
its hydrated it's not dry we've had the

00:17:12,760 --> 00:17:16,209
object oriented thing of dry so make

00:17:14,650 --> 00:17:19,270
people look in five different files to

00:17:16,209 --> 00:17:21,490
find out what your function does with

00:17:19,270 --> 00:17:23,439
this when you look at a function it

00:17:21,490 --> 00:17:26,280
really doesn't tend to include other

00:17:23,439 --> 00:17:31,890
things other than basic unix commands

00:17:26,280 --> 00:17:35,480
I found on Linux BSD I got a BSD friend

00:17:31,890 --> 00:17:39,090
who's like I start working on BSD and

00:17:35,480 --> 00:17:43,560
that other thing from the big company

00:17:39,090 --> 00:17:44,880
with the fruit so I support that but I

00:17:43,560 --> 00:17:48,870
don't support that if you know what I

00:17:44,880 --> 00:17:52,160
mean like it works people need to wake

00:17:48,870 --> 00:17:56,990
up so hope you're not being sponsored

00:17:52,160 --> 00:17:59,250
the scheme standard in will basically

00:17:56,990 --> 00:18:00,780
take the arguments that you give it

00:17:59,250 --> 00:18:02,850
which usually just give it your dollar

00:18:00,780 --> 00:18:10,080
app which is the arguments that your

00:18:02,850 --> 00:18:13,050
function received and just use my simple

00:18:10,080 --> 00:18:15,180
little change to how it was where I'll

00:18:13,050 --> 00:18:17,280
get those arguments I'll add the first

00:18:15,180 --> 00:18:19,320
item from each and this could easily be

00:18:17,280 --> 00:18:22,350
re-implemented happy to hear people's

00:18:19,320 --> 00:18:26,000
different idea but also you can do this

00:18:22,350 --> 00:18:26,000
in Python you can do this in whatever

00:18:26,270 --> 00:18:32,910
for bash my Spotify I'll use Python for

00:18:29,430 --> 00:18:34,680
bash my github and I've started both but

00:18:32,910 --> 00:18:37,110
I do not have the time to be doing them

00:18:34,680 --> 00:18:40,620
all yet so bash may get github I really

00:18:37,110 --> 00:18:43,070
like to go teams with the team's filter

00:18:40,620 --> 00:18:46,560
by blah find the team team members you

00:18:43,070 --> 00:18:48,480
know repos stars whatever with Spotify I

00:18:46,560 --> 00:18:51,180
had a simple command that let me look at

00:18:48,480 --> 00:18:53,700
the common tracks in all the playlists

00:18:51,180 --> 00:18:56,340
of me and somebody else and I found 68

00:18:53,700 --> 00:18:58,170
tracks that we both had in all our

00:18:56,340 --> 00:19:00,330
playlists and I made a playlist out of

00:18:58,170 --> 00:19:02,790
that and then I can play that and this

00:19:00,330 --> 00:19:05,190
is at the command line I'm not thinking

00:19:02,790 --> 00:19:06,810
these tools are not to say you can do

00:19:05,190 --> 00:19:08,820
this or this or this it's there's little

00:19:06,810 --> 00:19:11,430
things that you can string together to

00:19:08,820 --> 00:19:14,990
do what you want get the data out of

00:19:11,430 --> 00:19:14,990
things and not have to use their tools

00:19:15,710 --> 00:19:28,760
so what do we got five minutes let's get

00:19:25,920 --> 00:19:28,760
back to the slides

00:19:31,660 --> 00:19:38,230
it's not the slides there we go yep so

00:19:35,590 --> 00:19:42,100
I've covered pipe skimming I can show

00:19:38,230 --> 00:19:44,410
you a little bit more I guess of things

00:19:42,100 --> 00:19:47,799
another thing is from hearing about this

00:19:44,410 --> 00:19:49,750
to using it it's zero configuration if

00:19:47,799 --> 00:19:52,510
you google for it'll come up number one

00:19:49,750 --> 00:19:54,460
and you can follow the installation in

00:19:52,510 --> 00:19:56,799
the readme and be using it within five

00:19:54,460 --> 00:19:59,020
minutes if you can authenticate to AWS

00:19:56,799 --> 00:20:00,850
you can start listing things when you're

00:19:59,020 --> 00:20:04,450
in there to check if it works

00:20:00,850 --> 00:20:07,179
type stats if you find some stacks you

00:20:04,450 --> 00:20:10,000
might then just go what can I do with

00:20:07,179 --> 00:20:14,190
these stacks now I have them and you

00:20:10,000 --> 00:20:16,270
might want to go so they go instances

00:20:14,190 --> 00:20:18,250
what I want to do with an instance

00:20:16,270 --> 00:20:21,690
depending on who you speak to I might

00:20:18,250 --> 00:20:21,690
want to SSH into it and

00:20:25,000 --> 00:20:28,920
[Applause]

00:20:26,190 --> 00:20:33,000
demo account so I'm into one of the

00:20:28,920 --> 00:20:35,880
uptime being up a day log out into the

00:20:33,000 --> 00:20:38,580
next one blah blah blah if you're behind

00:20:35,880 --> 00:20:41,220
a bastion and you need to do a PR or

00:20:38,580 --> 00:20:42,480
find a better way or use one of the new

00:20:41,220 --> 00:20:43,920
tools to get through that because that's

00:20:42,480 --> 00:20:48,590
annoying

00:20:43,920 --> 00:20:54,950
you might want to go on a rampage so

00:20:48,590 --> 00:20:54,950
destroying stuff is fun instances

00:20:56,240 --> 00:21:03,420
instance terminate the cops or your mum

00:20:59,970 --> 00:21:05,250
are bashing down your door and you need

00:21:03,420 --> 00:21:07,590
to just get rid of the evidence of all

00:21:05,250 --> 00:21:10,350
your stuff you've been monitoring

00:21:07,590 --> 00:21:12,570
because there's an uptime that you need

00:21:10,350 --> 00:21:17,760
to say you had so things are shutting

00:21:12,570 --> 00:21:19,920
down if I list the instances yep things

00:21:17,760 --> 00:21:27,900
are shutting down good and I can go

00:21:19,920 --> 00:21:31,110
stacks clean it up to stack also I

00:21:27,900 --> 00:21:32,010
forget the commands you kind of forget

00:21:31,110 --> 00:21:34,170
them because you haven't heard of them

00:21:32,010 --> 00:21:36,900
before we're in the same boat I've built

00:21:34,170 --> 00:21:46,140
it for someone who doesn't already know

00:21:36,900 --> 00:21:53,000
stack delete yeah you sure you want to

00:21:46,140 --> 00:21:55,380
continue no no okay other ones key pairs

00:21:53,000 --> 00:21:57,090
SSH key pairs are annoying little manual

00:21:55,380 --> 00:22:06,750
thing to do

00:21:57,090 --> 00:22:12,180
I can go keep here create LCA I'm gonna

00:22:06,750 --> 00:22:15,270
do a passphrase to try and maintain any

00:22:12,180 --> 00:22:22,760
respect and I still have with undecided

00:22:15,270 --> 00:22:22,760
people and so now if I go to key pairs

00:22:23,270 --> 00:22:26,960
key pairs

00:22:27,820 --> 00:22:40,869
there's the LCA keeper and if I have a

00:22:31,059 --> 00:22:45,249
look in my this is H ll see a there's a

00:22:40,869 --> 00:22:46,929
key pair there and if I wanted to create

00:22:45,249 --> 00:22:48,429
another one because I deleted it it'll

00:22:46,929 --> 00:22:53,970
say hey you've really got an LC I keep

00:22:48,429 --> 00:22:56,970
here do you want me to be pair to lead

00:22:53,970 --> 00:22:56,970
LCA

00:23:02,919 --> 00:23:09,830
I've already got the key pssh directory

00:23:06,200 --> 00:23:11,330
so it'll go I can upload it if you want

00:23:09,830 --> 00:23:13,070
do we want to override it now just use

00:23:11,330 --> 00:23:15,469
the existing one and then re-upload it

00:23:13,070 --> 00:23:16,899
so if things get deleted out there push

00:23:15,469 --> 00:23:19,450
it out

00:23:16,899 --> 00:23:22,959
destroy it all I've got to say for now

00:23:19,450 --> 00:23:32,659
in my last minute does anyone have any

00:23:22,959 --> 00:23:35,830
questions nope oh yeah one for my friend

00:23:32,659 --> 00:23:35,830
in the front thank you sir

00:23:36,889 --> 00:23:46,549
his AWS CLI version to support it

00:23:42,009 --> 00:23:49,519
sorry is version 2 of AWS CLI supported

00:23:46,549 --> 00:23:51,859
by the scripts good question in

00:23:49,519 --> 00:23:55,700
preparing for this I saw that for the

00:23:51,859 --> 00:23:57,529
last I think since 2017 it's been in

00:23:55,700 --> 00:24:02,979
development they put out a beater a few

00:23:57,529 --> 00:24:07,489
weeks ago I installed it and I ran it I

00:24:02,979 --> 00:24:08,509
found it's not out as taking over yet

00:24:07,489 --> 00:24:10,279
they don't even know if they're going to

00:24:08,509 --> 00:24:11,989
give it a different name things were

00:24:10,279 --> 00:24:15,169
working but I haven't done comprehensive

00:24:11,989 --> 00:24:18,879
stuff and well I support it will this

00:24:15,169 --> 00:24:21,859
support it yes it will

00:24:18,879 --> 00:24:25,759
it's interesting it's a lot of digging

00:24:21,859 --> 00:24:28,099
to work out what's in there and I don't

00:24:25,759 --> 00:24:30,649
know what the future is unknown maybe in

00:24:28,099 --> 00:24:32,629
future aw the other one other thing in

00:24:30,649 --> 00:24:35,269
10 seconds is people still you gonna

00:24:32,629 --> 00:24:37,009
support all 220 plus services and no one

00:24:35,269 --> 00:24:41,059
I know at Amazon even they might know

00:24:37,009 --> 00:24:44,059
the names of the 220 but no I think thin

00:24:41,059 --> 00:24:46,429
wrappers that people can easily inspect

00:24:44,059 --> 00:24:47,929
they can easily replace and they just do

00:24:46,429 --> 00:24:50,809
the bits that are needed I think that's

00:24:47,929 --> 00:24:52,549
the way to do it I don't want to spend

00:24:50,809 --> 00:24:56,629
time that I could over with my dogs or

00:24:52,549 --> 00:24:58,549
my family or my friends just replacing

00:24:56,629 --> 00:25:00,679
what some some of the big companies

00:24:58,549 --> 00:25:02,299
build I'd rather just have a thin

00:25:00,679 --> 00:25:05,300
wrapper over the top and have a life and

00:25:02,299 --> 00:25:17,500
work on the next project

00:25:05,300 --> 00:25:17,500

YouTube URL: https://www.youtube.com/watch?v=UbH_cg7Ev1Q


