Title: "SRE for Smaller Organisations" - Allan Shone (LCA 2020)
Publication date: 2020-01-14
Playlist: linux.conf.au 2020
Description: 
	Allan Shone

https://lca2020.linux.org.au/schedule/presentation/142/

The Google Site Reliability Engineering (SRE) book is a wonderful collection of ideas and practices that ultimately are great if you work at Google. Like most people, however, you do not, so you need a slightly different set of ideas and principles to work by. Within the bounds of a smaller business, how can the principles put forward by the SRE moniker be applied on a much smaller scale? A handful of guiding principles can be taken, for instance, to give you, your team, and your business, a much easier time for achieving your goals.

linux.conf.au is a conference about the Linux operating system, and all aspects of the thriving ecosystem of Free and Open Source Software that has grown up around it. Run since 1999, in a different Australian or New Zealand city each year, by a team of local volunteers, LCA invites more than 500 people to learn from the people who shape the future of Open Source. For more information on the conference see https://linux.conf.au/

Produced by NDV: https://youtube.com/channel/UCQ7dFBzZGlBvtU2hCecsBBg?sub_confirmation=1

#linux.conf.au #linux #foss #opensource

Mon Jan 13 15:45:00 2020 at Arena
Captions: 
	00:00:00,050 --> 00:00:03,510
[Applause]

00:00:01,100 --> 00:00:09,120
cool good afternoon

00:00:03,510 --> 00:00:10,559
so sr a small organizations for anyone

00:00:09,120 --> 00:00:13,590
that is not quite familiar

00:00:10,559 --> 00:00:18,289
sree is site reliability engineering in

00:00:13,590 --> 00:00:21,900
this case for me it's it's a bit of a

00:00:18,289 --> 00:00:24,359
movement of the DevOps community the

00:00:21,900 --> 00:00:27,590
methodology is a bit of a different take

00:00:24,359 --> 00:00:30,779
on things that's come out from Google

00:00:27,590 --> 00:00:35,070
for I don't know more than a decade or

00:00:30,779 --> 00:00:37,350
something now there's a few really

00:00:35,070 --> 00:00:41,340
really interesting things that make sre

00:00:37,350 --> 00:00:43,920
stand away from DevOps and some of the

00:00:41,340 --> 00:00:46,320
traditional ops and whatever other sorts

00:00:43,920 --> 00:00:49,590
of disciplines that go hand in hand with

00:00:46,320 --> 00:00:53,460
with these types of roles and part of a

00:00:49,590 --> 00:00:57,180
business for Sree in particular there's

00:00:53,460 --> 00:01:01,079
a lot of focus on automation and taking

00:00:57,180 --> 00:01:04,580
people out of standard processes across

00:01:01,079 --> 00:01:09,119
the the normal function of a business

00:01:04,580 --> 00:01:11,880
the big way that we do that is by

00:01:09,119 --> 00:01:13,860
getting visibility on execution

00:01:11,880 --> 00:01:16,229
environments and the systems that we're

00:01:13,860 --> 00:01:19,590
we're looking to keep up and running and

00:01:16,229 --> 00:01:26,670
available for customers and all of our

00:01:19,590 --> 00:01:29,970
intended audience so what we do is we we

00:01:26,670 --> 00:01:31,950
take existing processes and systems we

00:01:29,970 --> 00:01:34,079
call them toil they're the things that

00:01:31,950 --> 00:01:36,630
people do over and over again they're

00:01:34,079 --> 00:01:38,460
the sorts of stuff that we want to

00:01:36,630 --> 00:01:40,979
automate them because people shouldn't

00:01:38,460 --> 00:01:44,460
have to be doing these things people

00:01:40,979 --> 00:01:50,549
burn out things are repetitive it's just

00:01:44,460 --> 00:01:52,740
not fun and while we want to do all of

00:01:50,549 --> 00:01:55,979
these things there's usually way too

00:01:52,740 --> 00:01:59,070
much and we have to try and work out how

00:01:55,979 --> 00:02:02,969
we decide on which ones to do when do we

00:01:59,070 --> 00:02:05,280
do them who should do them etc etc so we

00:02:02,969 --> 00:02:08,759
want to be a bit more involved when we

00:02:05,280 --> 00:02:11,310
start to make these decisions and then

00:02:08,759 --> 00:02:12,810
as we grow as a business when we're not

00:02:11,310 --> 00:02:14,660
so small anymore

00:02:12,810 --> 00:02:17,360
we want our teams to be a bit more

00:02:14,660 --> 00:02:21,660
self-sufficient a bit more autonomous

00:02:17,360 --> 00:02:26,130
let them move at their own pace and do

00:02:21,660 --> 00:02:29,239
the things that they need to do so then

00:02:26,130 --> 00:02:34,590
in a smaller organization specifically

00:02:29,239 --> 00:02:38,130
SRE can be a bit of a different topic

00:02:34,590 --> 00:02:40,410
it's it's not the same as what the

00:02:38,130 --> 00:02:44,280
Google definition is and it doesn't

00:02:40,410 --> 00:02:47,160
necessarily incorporate what is in the

00:02:44,280 --> 00:02:51,120
SRA books the handbook whatever it is

00:02:47,160 --> 00:02:53,820
there's a lot of topics that are brought

00:02:51,120 --> 00:02:56,750
up as a part of the SRA and they don't

00:02:53,820 --> 00:02:58,680
necessarily apply in a smaller business

00:02:56,750 --> 00:03:01,380
primarily just because there's not

00:02:58,680 --> 00:03:03,840
enough people there's not enough body

00:03:01,380 --> 00:03:06,420
capacity to actually get things done in

00:03:03,840 --> 00:03:09,050
that way and this is one of the big

00:03:06,420 --> 00:03:11,819
things that I found in my experience of

00:03:09,050 --> 00:03:15,959
leading asari teams and starting them

00:03:11,819 --> 00:03:19,799
and just trying to get these positive

00:03:15,959 --> 00:03:22,799
things happening in a business we need

00:03:19,799 --> 00:03:26,840
to focus on the right things at the

00:03:22,799 --> 00:03:31,860
right time to get the best benefits and

00:03:26,840 --> 00:03:35,010
accomplish what we need to accomplish so

00:03:31,860 --> 00:03:38,790
to do that I kind of came up with these

00:03:35,010 --> 00:03:39,870
five just basic principles I'm sure

00:03:38,790 --> 00:03:42,390
other people have come up with similar

00:03:39,870 --> 00:03:44,760
stuff these are the ones that I found

00:03:42,390 --> 00:03:47,400
work really well for the teams that I

00:03:44,760 --> 00:03:50,370
have led and they they work really well

00:03:47,400 --> 00:03:53,280
in a smaller organization where not

00:03:50,370 --> 00:03:55,730
everybody has just one role you you have

00:03:53,280 --> 00:03:59,310
a lot of things that you move between

00:03:55,730 --> 00:04:02,540
you're doing multiple things it's not

00:03:59,310 --> 00:04:05,840
just narrow focused it's very broad and

00:04:02,540 --> 00:04:09,870
encompasses a lot of stuff

00:04:05,840 --> 00:04:13,260
the first that I pick is everything

00:04:09,870 --> 00:04:18,989
should be reproducible and this is very

00:04:13,260 --> 00:04:20,789
much a DevOps kind of a concept we we

00:04:18,989 --> 00:04:24,950
think about things like infrastructure

00:04:20,789 --> 00:04:28,770
as code so we want to have all of our

00:04:24,950 --> 00:04:30,930
servers our load balances everything in

00:04:28,770 --> 00:04:33,500
between and everything outside of that

00:04:30,930 --> 00:04:36,360
have everything configured somewhere

00:04:33,500 --> 00:04:39,750
doesn't matter what system use puppet

00:04:36,360 --> 00:04:42,240
ansible chef terraform or a combination

00:04:39,750 --> 00:04:45,270
of those things whichever one you're

00:04:42,240 --> 00:04:47,790
happy with and then we put them in

00:04:45,270 --> 00:04:50,430
version control we review them we share

00:04:47,790 --> 00:04:52,020
them you know it's it's just if

00:04:50,430 --> 00:04:54,750
something goes wrong or if we want to

00:04:52,020 --> 00:04:58,760
build more we can reproduce it and our a

00:04:54,750 --> 00:05:03,030
huge amount of effort the next part is

00:04:58,760 --> 00:05:04,530
not trying to be perfect it doesn't

00:05:03,030 --> 00:05:07,020
matter if things are a little bit happy

00:05:04,530 --> 00:05:10,310
sometimes you know we keep track of that

00:05:07,020 --> 00:05:14,910
we don't want to make it unmaintainable

00:05:10,310 --> 00:05:18,419
but not just hounding those ten lines of

00:05:14,910 --> 00:05:19,980
code for ten days until it's absolutely

00:05:18,419 --> 00:05:23,550
perfect because it'll never be

00:05:19,980 --> 00:05:26,450
absolutely perfect so we iterate we we

00:05:23,550 --> 00:05:28,530
keep plugging away we think about

00:05:26,450 --> 00:05:33,150
whether or not we're still getting any

00:05:28,530 --> 00:05:36,030
benefit from changing and then we move

00:05:33,150 --> 00:05:38,040
on when it's time we also have to keep

00:05:36,030 --> 00:05:39,960
in mind that toil is inevitable so

00:05:38,040 --> 00:05:43,380
people will always have to be involved

00:05:39,960 --> 00:05:45,750
at some stage in any of these processes

00:05:43,380 --> 00:05:48,479
so even if we do have infrastructure as

00:05:45,750 --> 00:05:49,110
code and we can bring up servers no

00:05:48,479 --> 00:05:51,260
worries

00:05:49,110 --> 00:05:55,050
we still might need people to run those

00:05:51,260 --> 00:05:57,990
which is fine but if we plan from a

00:05:55,050 --> 00:06:00,270
disaster recovery perspective then we

00:05:57,990 --> 00:06:02,090
know that things work fine we know that

00:06:00,270 --> 00:06:06,419
we can bring them up in the event of

00:06:02,090 --> 00:06:11,330
something catastrophic or if we say run

00:06:06,419 --> 00:06:13,979
things in a couple of regions around

00:06:11,330 --> 00:06:17,520
globe wherever different data centers

00:06:13,979 --> 00:06:21,000
and we have code that we can use to

00:06:17,520 --> 00:06:22,560
bring up any a data center when

00:06:21,000 --> 00:06:24,720
something goes wrong then if we want to

00:06:22,560 --> 00:06:26,700
expand we can use the same code to add

00:06:24,720 --> 00:06:29,250
something new so there's there's

00:06:26,700 --> 00:06:33,060
multiple benefits to some of these

00:06:29,250 --> 00:06:35,300
concepts the last big point for the

00:06:33,060 --> 00:06:37,230
reproducibility is their documentation

00:06:35,300 --> 00:06:40,230
so just having

00:06:37,230 --> 00:06:42,330
code knowing where it is doesn't

00:06:40,230 --> 00:06:44,700
necessarily provide us everything we

00:06:42,330 --> 00:06:47,640
need we still need to have the

00:06:44,700 --> 00:06:51,060
documentation it could be a run book or

00:06:47,640 --> 00:06:53,960
a play book where we can say for certain

00:06:51,060 --> 00:06:56,850
repositories for certain coding

00:06:53,960 --> 00:06:58,650
infrastructure repos these are this is

00:06:56,850 --> 00:07:00,540
how you run it this is how you prepare

00:06:58,650 --> 00:07:03,060
your environment this is where you get

00:07:00,540 --> 00:07:06,120
secrets or whatever other config you

00:07:03,060 --> 00:07:09,690
might need and if we do things with dr

00:07:06,120 --> 00:07:11,190
we're constantly well occasionally re

00:07:09,690 --> 00:07:14,070
running these things so we tweak them

00:07:11,190 --> 00:07:16,290
over time we keep them up to date and we

00:07:14,070 --> 00:07:20,160
make sure that everyone is is across and

00:07:16,290 --> 00:07:23,790
able to contribute and and keep things

00:07:20,160 --> 00:07:27,090
running the second point is about

00:07:23,790 --> 00:07:29,370
automation and personally I've I've

00:07:27,090 --> 00:07:33,480
always been a massive fan of automating

00:07:29,370 --> 00:07:36,510
things I've written many systems that

00:07:33,480 --> 00:07:38,640
integrate with Jenkins to create

00:07:36,510 --> 00:07:40,860
pipelines on the fly that have all these

00:07:38,640 --> 00:07:43,230
jobs that do all these things in all

00:07:40,860 --> 00:07:45,060
these different ways and it's just

00:07:43,230 --> 00:07:47,820
because I didn't want to run a shell

00:07:45,060 --> 00:07:52,620
script it's it's a little bit crazy

00:07:47,820 --> 00:07:53,640
sometimes but not everything should be

00:07:52,620 --> 00:07:56,370
automated that way

00:07:53,640 --> 00:07:59,610
for instance we wouldn't want to

00:07:56,370 --> 00:08:01,860
automate managing databases unless we

00:07:59,610 --> 00:08:04,830
really know what's in those databases

00:08:01,860 --> 00:08:09,960
and occasionally we don't mind data

00:08:04,830 --> 00:08:14,340
going away just because and so again

00:08:09,960 --> 00:08:16,800
toil is often there but it can be

00:08:14,340 --> 00:08:19,440
avoidable and we just have to remember

00:08:16,800 --> 00:08:23,700
that it doesn't have to be perfect or

00:08:19,440 --> 00:08:27,990
anything like that there might also be

00:08:23,700 --> 00:08:30,360
some things all processes that you might

00:08:27,990 --> 00:08:33,620
want to automate but they might happen

00:08:30,360 --> 00:08:37,050
once a year so it's not really worth

00:08:33,620 --> 00:08:38,849
automating those ones because once

00:08:37,050 --> 00:08:40,860
something's automated we still need to

00:08:38,849 --> 00:08:42,540
maintain it we need to make sure that

00:08:40,860 --> 00:08:44,580
it's actually going to do what it needs

00:08:42,540 --> 00:08:46,950
to do when it gets triggered to do it

00:08:44,580 --> 00:08:47,600
and if that happens once a year but it's

00:08:46,950 --> 00:08:49,879
broken

00:08:47,600 --> 00:08:53,160
we've probably not going to remember

00:08:49,879 --> 00:08:55,709
how to actually work with the system

00:08:53,160 --> 00:09:00,420
whether that's test it debug it run it

00:08:55,709 --> 00:09:03,720
in dev whatever the third point is that

00:09:00,420 --> 00:09:08,309
security should not be ignored this is

00:09:03,720 --> 00:09:13,589
mostly because a lot of the preparation

00:09:08,309 --> 00:09:16,920
for security type topics can really be

00:09:13,589 --> 00:09:23,100
dealt with quite simply at the outset

00:09:16,920 --> 00:09:26,220
over project or some body of work for

00:09:23,100 --> 00:09:29,540
instance having the right Pony coding

00:09:26,220 --> 00:09:32,819
standards inside of a software project

00:09:29,540 --> 00:09:34,879
we might have a library that filters

00:09:32,819 --> 00:09:37,679
input automatically and as long as

00:09:34,879 --> 00:09:39,589
whenever anybody is writing code that

00:09:37,679 --> 00:09:43,649
deals with input users in that library

00:09:39,589 --> 00:09:45,629
then it's going to be filtered if we

00:09:43,649 --> 00:09:47,970
don't start off with that then there

00:09:45,629 --> 00:09:51,869
might be hundreds of places where we're

00:09:47,970 --> 00:09:54,179
pulling user input but it's not being

00:09:51,869 --> 00:09:57,209
filtered so if we then added a library

00:09:54,179 --> 00:09:59,759
later it's really hard to retrofit that

00:09:57,209 --> 00:10:03,480
into all of the different unique cases

00:09:59,759 --> 00:10:05,809
across an entire code base this type of

00:10:03,480 --> 00:10:08,689
thing applies to systems as well

00:10:05,809 --> 00:10:11,429
especially with infrastructure as code

00:10:08,689 --> 00:10:13,799
so having some of these types of things

00:10:11,429 --> 00:10:19,980
already planned and implemented up front

00:10:13,799 --> 00:10:23,970
can save a lot of time a simple is

00:10:19,980 --> 00:10:27,350
better than magical by this I really

00:10:23,970 --> 00:10:29,939
mean that things should be explicit or

00:10:27,350 --> 00:10:32,309
there shouldn't somebody who's looking

00:10:29,939 --> 00:10:35,339
at a system shouldn't have to guess at

00:10:32,309 --> 00:10:38,249
what something is the name or the

00:10:35,339 --> 00:10:40,919
description or something about that

00:10:38,249 --> 00:10:44,490
system should be explicit about what it

00:10:40,919 --> 00:10:47,549
does if if you have to have a lookup

00:10:44,490 --> 00:10:51,179
table to see that service XYZ maps to

00:10:47,549 --> 00:10:56,970
sending emails that's not necessarily a

00:10:51,179 --> 00:10:58,619
good thing as humans we all like to name

00:10:56,970 --> 00:11:01,589
things away that we like or give them

00:10:58,619 --> 00:11:02,890
labels that are funny or whatever it

00:11:01,589 --> 00:11:06,700
might be

00:11:02,890 --> 00:11:09,310
it doesn't lend itself well to being a

00:11:06,700 --> 00:11:15,930
nice maintainable visible easy-to-use

00:11:09,310 --> 00:11:18,430
system not necessarily this is also

00:11:15,930 --> 00:11:21,760
especially useful in an onboarding

00:11:18,430 --> 00:11:24,220
process having a new dev join a team

00:11:21,760 --> 00:11:26,950
with a lot of systems that have a lot of

00:11:24,220 --> 00:11:28,329
weird names it's going to take a long

00:11:26,950 --> 00:11:31,300
time for them to get up to speed with

00:11:28,329 --> 00:11:34,329
how they all fit together why they named

00:11:31,300 --> 00:11:37,959
a certain way and just understanding the

00:11:34,329 --> 00:11:39,970
language within the business itself it

00:11:37,959 --> 00:11:43,209
also helps with breaking down

00:11:39,970 --> 00:11:45,790
assumptions if people don't have to

00:11:43,209 --> 00:11:48,550
assume that something means a certain

00:11:45,790 --> 00:11:52,060
thing just because of some sort of

00:11:48,550 --> 00:11:57,130
convention then you're less likely to

00:11:52,060 --> 00:12:00,399
run into problems the final one is that

00:11:57,130 --> 00:12:04,410
visibility is key access is not the

00:12:00,399 --> 00:12:07,480
biggest part of this is primarily around

00:12:04,410 --> 00:12:12,250
production access really and by

00:12:07,480 --> 00:12:15,820
production access I mostly mean SSH onto

00:12:12,250 --> 00:12:19,420
production infrastructure it's such a

00:12:15,820 --> 00:12:21,430
common request for just developers to be

00:12:19,420 --> 00:12:24,910
able to log into his machine somewhere

00:12:21,430 --> 00:12:27,550
or I want to look at the logs or I want

00:12:24,910 --> 00:12:30,940
to see a profile of this process so

00:12:27,550 --> 00:12:34,390
whatever it might be but really that in

00:12:30,940 --> 00:12:37,660
itself is very dangerous and there's a

00:12:34,390 --> 00:12:38,950
lot of tools that mean you don't need to

00:12:37,660 --> 00:12:40,810
do that because you can get all that

00:12:38,950 --> 00:12:43,899
data to come out somewhere else into a

00:12:40,810 --> 00:12:46,770
separate system and then your devs or

00:12:43,899 --> 00:12:49,089
anyone else in your team can browse and

00:12:46,770 --> 00:12:50,529
massage or do whatever they need to do

00:12:49,089 --> 00:12:54,670
to get the information that they're

00:12:50,529 --> 00:12:57,640
trying to get this is the same for

00:12:54,670 --> 00:13:01,810
monitoring and logs so different

00:12:57,640 --> 00:13:03,310
processes different log methods just

00:13:01,810 --> 00:13:06,610
getting them all into us into the

00:13:03,310 --> 00:13:10,000
appropriate systems and looking at the

00:13:06,610 --> 00:13:12,190
documentation and all the rest of it get

00:13:10,000 --> 00:13:16,290
a lot of benefit without having to just

00:13:12,190 --> 00:13:19,750
open the doors to everyone willy nearly

00:13:16,290 --> 00:13:23,490
an easy way to think about this type of

00:13:19,750 --> 00:13:26,470
concept is referring to the production

00:13:23,490 --> 00:13:30,010
infrastructure as cattle not pets that

00:13:26,470 --> 00:13:32,470
way there's a bit a bit more attachment

00:13:30,010 --> 00:13:34,390
to things it's less about what's

00:13:32,470 --> 00:13:37,990
happening on specific machines and more

00:13:34,390 --> 00:13:41,880
just about aggregated data about system

00:13:37,990 --> 00:13:41,880
state at specific point in time

00:13:43,529 --> 00:13:52,390
so with those five concepts or

00:13:47,220 --> 00:13:55,660
principles I try and have a slightly

00:13:52,390 --> 00:13:59,110
different take on SRA and DevOps type of

00:13:55,660 --> 00:14:03,250
ecosystem I don't think there's really a

00:13:59,110 --> 00:14:05,470
right or wrong answer there's there's

00:14:03,250 --> 00:14:09,310
strange way that these can be applied

00:14:05,470 --> 00:14:12,360
and implemented but I don't think you

00:14:09,310 --> 00:14:17,440
need to go very narrow down this

00:14:12,360 --> 00:14:20,440
textbook application really it's all

00:14:17,440 --> 00:14:22,959
about just having the right visibility

00:14:20,440 --> 00:14:24,459
on what's happening in a system being

00:14:22,959 --> 00:14:26,410
able to understand all of the data

00:14:24,459 --> 00:14:28,990
that's coming out and then being able to

00:14:26,410 --> 00:14:31,660
use that data to inform the decision

00:14:28,990 --> 00:14:34,600
making process if you know that

00:14:31,660 --> 00:14:37,360
particular subsets of your system are

00:14:34,600 --> 00:14:40,000
behaving a certain way and that causes

00:14:37,360 --> 00:14:41,680
downstream issues somewhere else if you

00:14:40,000 --> 00:14:44,680
have the data to back that up you can

00:14:41,680 --> 00:14:46,450
then take that as a way to say hey we

00:14:44,680 --> 00:14:49,529
need to do work on this system here

00:14:46,450 --> 00:14:52,420
because of these cascading problems and

00:14:49,529 --> 00:14:54,130
with the data it's a lot easier to

00:14:52,420 --> 00:14:57,910
convince people who make those bigger

00:14:54,130 --> 00:15:02,589
planning decisions to say yep do that

00:14:57,910 --> 00:15:05,170
work the good thing about SRA as a whole

00:15:02,589 --> 00:15:06,760
in terms of what is in the textbook it

00:15:05,170 --> 00:15:09,370
was put together by some very smart

00:15:06,760 --> 00:15:11,250
people and there's a lot of really

00:15:09,370 --> 00:15:16,449
interesting things that they talk about

00:15:11,250 --> 00:15:19,779
things like error rates which or error

00:15:16,449 --> 00:15:23,920
budgets as well and combining these with

00:15:19,779 --> 00:15:26,500
things like SaaS and service level level

00:15:23,920 --> 00:15:28,420
objectives there's there's a lot of

00:15:26,500 --> 00:15:31,180
visibility around

00:15:28,420 --> 00:15:33,880
and the data that you get out of systems

00:15:31,180 --> 00:16:08,380
that then helps that decision-making

00:15:33,880 --> 00:16:12,570
process that's all okay thank you very

00:16:08,380 --> 00:16:15,040
much Ellen just a quick announcement if

00:16:12,570 --> 00:16:17,850
Alex or injurer here could they please

00:16:15,040 --> 00:16:21,240
come up to the front well there's one

00:16:17,850 --> 00:16:21,240

YouTube URL: https://www.youtube.com/watch?v=ZmvuLLMxhug


