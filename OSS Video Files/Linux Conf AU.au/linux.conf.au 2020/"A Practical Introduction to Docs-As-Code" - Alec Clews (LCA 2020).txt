Title: "A Practical Introduction to Docs-As-Code" - Alec Clews (LCA 2020)
Publication date: 2020-01-14
Playlist: linux.conf.au 2020
Description: 
	Alec Clews

https://lca2020.linux.org.au/schedule/presentation/193/

This talk presents a short introduction to "Docs As Code" as an approach for developers to create and manage project documentation. The majority of the talk is dedicated to showing a small demonstration project that provides a practical overview of how Docs-As-Code can work.

At the end of the talk attendees will have some practical suggestions on how they might implement Docs-As-Code on their own projects.

Tools discussed include:
* Sphinx
* GitLab CI/CD Pipeline (and other GitLab features)
* Docker
* GNU Make
* Various text linting tools
* Pandoc

linux.conf.au is a conference about the Linux operating system, and all aspects of the thriving ecosystem of Free and Open Source Software that has grown up around it. Run since 1999, in a different Australian or New Zealand city each year, by a team of local volunteers, LCA invites more than 500 people to learn from the people who shape the future of Open Source. For more information on the conference see https://linux.conf.au/

Produced by NDV: https://youtube.com/channel/UCQ7dFBzZGlBvtU2hCecsBBg?sub_confirmation=1

#linux.conf.au #linux #foss #opensource

Mon Jan 13 13:30:00 2020 at Room 8
Captions: 
	00:00:01,220 --> 00:00:06,080
okay thanks everyone we'll get our

00:00:03,480 --> 00:00:08,910
started for the afternoon sessions now

00:00:06,080 --> 00:00:11,160
so thanks everyone for coming to the

00:00:08,910 --> 00:00:15,900
next block of Doc's mini Kampf

00:00:11,160 --> 00:00:18,180
presentations just to cover some

00:00:15,900 --> 00:00:20,760
housekeeping again for new arrivals

00:00:18,180 --> 00:00:23,130
exits behind you in an emergency the

00:00:20,760 --> 00:00:26,099
volunteers and event staff can help you

00:00:23,130 --> 00:00:28,470
get to the marshaling point water

00:00:26,099 --> 00:00:30,750
available on the tables and at the water

00:00:28,470 --> 00:00:34,829
stations outside bathrooms can be found

00:00:30,750 --> 00:00:37,350
on the right as you exit the room for

00:00:34,829 --> 00:00:39,750
questions we'll be taking some questions

00:00:37,350 --> 00:00:41,940
at the end please raise your hand and

00:00:39,750 --> 00:00:47,730
our my chrono will come to you with the

00:00:41,940 --> 00:00:50,100
microphone and I believe that saw other

00:00:47,730 --> 00:00:55,350
than please tweet if you'd like to use

00:00:50,100 --> 00:00:57,480
socials the hashtags LCA 2020 and to

00:00:55,350 --> 00:01:00,570
continue our presenters today I'd like

00:00:57,480 --> 00:01:03,449
to introduce Alex Clews who's presenting

00:01:00,570 --> 00:01:05,830
an introduction to DOCSIS code today

00:01:03,449 --> 00:01:10,069
please make them feel welcome

00:01:05,830 --> 00:01:10,069
[Applause]

00:01:31,079 --> 00:01:37,899
that better right it was 40 years since

00:01:36,159 --> 00:01:39,729
I wrecked my first computer program but

00:01:37,899 --> 00:01:42,909
I'm not very good with technologies you

00:01:39,729 --> 00:01:44,020
can almost detail and for most of my

00:01:42,909 --> 00:01:46,689
life have actually been a technical

00:01:44,020 --> 00:01:48,070
consultant I work at papercut software

00:01:46,689 --> 00:01:50,979
who are sponsoring me to be here this

00:01:48,070 --> 00:01:53,759
week so thank you very much to them and

00:01:50,979 --> 00:01:57,310
at papercut I spent a lot of my time

00:01:53,759 --> 00:01:59,289
writing documentation on our api's and

00:01:57,310 --> 00:02:01,119
things like that for people so that's

00:01:59,289 --> 00:02:02,830
why I'm interested in documentation but

00:02:01,119 --> 00:02:06,069
I do come from a technical background

00:02:02,830 --> 00:02:07,899
I'm guessing most of you do as well if I

00:02:06,069 --> 00:02:09,369
start talking about git and branching

00:02:07,899 --> 00:02:12,069
and that sort of things everybody we're

00:02:09,369 --> 00:02:15,220
going to feel comfortable yeah I'm not

00:02:12,069 --> 00:02:17,470
seeing any shaking it's good ok so I

00:02:15,220 --> 00:02:19,000
really love technology if you wanna come

00:02:17,470 --> 00:02:21,640
and find me for a beer or coffee at some

00:02:19,000 --> 00:02:23,230
point then please do but I'm always

00:02:21,640 --> 00:02:26,140
happy to answer questions there at the

00:02:23,230 --> 00:02:30,910
corridor or have a chat so feel free and

00:02:26,140 --> 00:02:34,780
you can find me in the usual places so I

00:02:30,910 --> 00:02:38,170
really this talk was developed for a

00:02:34,780 --> 00:02:40,000
sort of a non-technical audience and for

00:02:38,170 --> 00:02:41,079
that reason a lot of slides I'm going to

00:02:40,000 --> 00:02:42,220
kind of skip through because I don't

00:02:41,079 --> 00:02:44,440
think you'll find them interesting and I

00:02:42,220 --> 00:02:47,200
want to get on to actually demonstrating

00:02:44,440 --> 00:02:49,690
some real techniques that I developed

00:02:47,200 --> 00:02:51,850
for doctors code so I'm just going to

00:02:49,690 --> 00:02:56,530
skip through those but the slides will

00:02:51,850 --> 00:02:59,980
be up for you to review later there is a

00:02:56,530 --> 00:03:01,930
website so this is got lots of notes on

00:02:59,980 --> 00:03:03,959
it it also serves as a demonstration for

00:03:01,930 --> 00:03:07,630
the techniques I'm about to talk about

00:03:03,959 --> 00:03:12,130
so take a snapshot of that if you want

00:03:07,630 --> 00:03:16,840
it and that's the long form of the URL

00:03:12,130 --> 00:03:19,389
down there okay docs is code Docs is

00:03:16,840 --> 00:03:22,780
code those you're not familiar with it

00:03:19,389 --> 00:03:24,519
is about using developer processes and

00:03:22,780 --> 00:03:27,819
developer tools and developer approach

00:03:24,519 --> 00:03:30,549
to developing content tradition

00:03:27,819 --> 00:03:33,250
developers develop programs but in this

00:03:30,549 --> 00:03:37,269
case we're developing documentation with

00:03:33,250 --> 00:03:38,949
onward treatments the same way okay if

00:03:37,269 --> 00:03:40,750
you're looking for doctors code on the

00:03:38,949 --> 00:03:43,160
internet you'll find lots of references

00:03:40,750 --> 00:03:46,550
it's the cool trick

00:03:43,160 --> 00:03:48,860
hip trendy thing in the documentarian

00:03:46,550 --> 00:03:51,920
world now you'll also just see him

00:03:48,860 --> 00:03:53,360
somebody described as docks like code so

00:03:51,920 --> 00:03:58,160
there's the two search terms that you

00:03:53,360 --> 00:04:01,580
need in Google I started using doctors

00:03:58,160 --> 00:04:04,610
code and if I gave a presentation at LCA

00:04:01,580 --> 00:04:05,810
2018 on my approach because I had to

00:04:04,610 --> 00:04:08,000
develop code I had to develop

00:04:05,810 --> 00:04:11,000
documentation for the for the API is and

00:04:08,000 --> 00:04:12,320
stuff a papercut and nobody told me I

00:04:11,000 --> 00:04:12,920
couldn't do it this way so I went ahead

00:04:12,320 --> 00:04:15,760
and did it

00:04:12,920 --> 00:04:17,930
our actual official documentation team

00:04:15,760 --> 00:04:21,320
currently used my account flare just to

00:04:17,930 --> 00:04:23,060
give you some sort of contrast there's

00:04:21,320 --> 00:04:24,620
also of course a push now to get

00:04:23,060 --> 00:04:27,260
developers more involved in in

00:04:24,620 --> 00:04:29,390
developing code on their projects and so

00:04:27,260 --> 00:04:31,460
you need to give them an easy on-ramp a

00:04:29,390 --> 00:04:34,040
low-friction approach I'd get them using

00:04:31,460 --> 00:04:36,290
their resisting tools and approaches and

00:04:34,040 --> 00:04:38,030
the other thing you go out using doctors

00:04:36,290 --> 00:04:40,100
card is ya don't have to go out and buy

00:04:38,030 --> 00:04:42,680
a big expensive documentation tools that

00:04:40,100 --> 00:04:45,500
you can use what already you've got I'm

00:04:42,680 --> 00:04:47,270
not going to talk too much of this but

00:04:45,500 --> 00:04:49,010
depending on your environment there's

00:04:47,270 --> 00:04:50,900
lots of assumptions and myths around

00:04:49,010 --> 00:04:52,790
doctors code around the cost the

00:04:50,900 --> 00:04:54,220
advantages of benefits they're kind of

00:04:52,790 --> 00:04:57,080
vary depending on your particular

00:04:54,220 --> 00:04:58,880
situation so don't take it don't take

00:04:57,080 --> 00:05:01,970
what you read at face value you need to

00:04:58,880 --> 00:05:03,440
do some investigation analysis on the

00:05:01,970 --> 00:05:05,750
right hand side here I've talked about

00:05:03,440 --> 00:05:07,730
small nimble teams and software projects

00:05:05,750 --> 00:05:09,710
that's not always the case the British

00:05:07,730 --> 00:05:11,140
government for instance is using doctors

00:05:09,710 --> 00:05:14,330
code across the whole of their digital

00:05:11,140 --> 00:05:18,940
transformation infrastructure so that's

00:05:14,330 --> 00:05:20,870
not a small nimble organization and

00:05:18,940 --> 00:05:23,510
actually bought a book on Amazon

00:05:20,870 --> 00:05:25,130
recently about how you can document your

00:05:23,510 --> 00:05:27,080
quality management system which again

00:05:25,130 --> 00:05:29,630
it's not example of a lightweight

00:05:27,080 --> 00:05:33,140
software project using doctors code

00:05:29,630 --> 00:05:35,180
approach so it's applicable across a

00:05:33,140 --> 00:05:37,940
variety of situations not justing in

00:05:35,180 --> 00:05:40,580
small software teams how can you do it

00:05:37,940 --> 00:05:42,740
ok so this is this is kind of where it

00:05:40,580 --> 00:05:45,710
gets a bit meaty so for a complete

00:05:42,740 --> 00:05:49,130
doctors code approach you need about

00:05:45,710 --> 00:05:50,390
four things one you need your content to

00:05:49,130 --> 00:05:53,450
be maintained and authored in a

00:05:50,390 --> 00:05:55,880
lightweight text-based markup so things

00:05:53,450 --> 00:05:56,510
like markdown asciidoc or restructured

00:05:55,880 --> 00:05:58,430
text

00:05:56,510 --> 00:06:01,580
the examples are going to see here today

00:05:58,430 --> 00:06:03,680
our restructured text I hear good things

00:06:01,580 --> 00:06:06,280
about asciidoc but I've never used it

00:06:03,680 --> 00:06:08,390
but it's definitely worth looking at and

00:06:06,280 --> 00:06:11,630
markdown is the one that everybody's

00:06:08,390 --> 00:06:15,700
heard of and is the most popular it is

00:06:11,630 --> 00:06:18,740
also the least feature-rich markdown

00:06:15,700 --> 00:06:20,960
markup format and I wouldn't necessarily

00:06:18,740 --> 00:06:23,540
recommend you however it's widely

00:06:20,960 --> 00:06:27,350
adopted and easy for people to use so

00:06:23,540 --> 00:06:30,920
that may that may actually influence

00:06:27,350 --> 00:06:33,080
your choice okay you then want to take

00:06:30,920 --> 00:06:37,700
your existing tools text editors build

00:06:33,080 --> 00:06:40,250
tools your existing processes your

00:06:37,700 --> 00:06:42,980
version control tools the way you triage

00:06:40,250 --> 00:06:45,380
requests and tickets and so on and start

00:06:42,980 --> 00:06:47,480
applying those with modifications it's

00:06:45,380 --> 00:06:49,070
not sitting at 100% just dropping the

00:06:47,480 --> 00:06:51,470
peg and appends on your individual

00:06:49,070 --> 00:06:53,390
situations but you can take that

00:06:51,470 --> 00:06:56,750
approach and bring it into develop into

00:06:53,390 --> 00:06:59,420
into into documentation processing you

00:06:56,750 --> 00:07:02,870
want to quick an easy way of deploying

00:06:59,420 --> 00:07:07,970
the resulting documentation so typically

00:07:02,870 --> 00:07:09,740
people are using static websites static

00:07:07,970 --> 00:07:12,260
web pages and they're quite good we'll

00:07:09,740 --> 00:07:14,630
see that with Sphinx in a minute I do

00:07:12,260 --> 00:07:18,740
use a wiki for various reasons it's not

00:07:14,630 --> 00:07:20,930
great but it gets the job done okay what

00:07:18,740 --> 00:07:23,030
people are not tending to use is content

00:07:20,930 --> 00:07:24,410
management systems so large systems that

00:07:23,030 --> 00:07:26,600
you stuff stuff in your database thing

00:07:24,410 --> 00:07:29,120
it's dynamically created at render time

00:07:26,600 --> 00:07:30,530
they're not using that two reasons one

00:07:29,120 --> 00:07:31,880
obviously it requires a lot more

00:07:30,530 --> 00:07:35,720
infrastructure to get set up and

00:07:31,880 --> 00:07:39,290
secondly it's it's slower and more

00:07:35,720 --> 00:07:40,760
expensive and so on and then building

00:07:39,290 --> 00:07:44,140
around that and which what I'm going to

00:07:40,760 --> 00:07:47,030
focus on later on today is the the

00:07:44,140 --> 00:07:51,260
tooling to automate as much as this as

00:07:47,030 --> 00:07:54,680
possible okay okay we're going to see

00:07:51,260 --> 00:07:56,210
some docker dock is great because it

00:07:54,680 --> 00:07:59,080
allows you to deploy a common set of

00:07:56,210 --> 00:08:01,700
documentation touring across all of your

00:07:59,080 --> 00:08:03,200
writers whether they are skilled or

00:08:01,700 --> 00:08:06,290
unskilled or no matter what platform

00:08:03,200 --> 00:08:08,810
they're on okay this is Windows laptop

00:08:06,290 --> 00:08:11,090
running winner SATA to the Linux

00:08:08,810 --> 00:08:12,950
you can who ever learning a Mac or Linux

00:08:11,090 --> 00:08:14,750
box or running a pure Windows

00:08:12,950 --> 00:08:17,200
environment you can take the same docket

00:08:14,750 --> 00:08:21,110
image and run it and get the same effect

00:08:17,200 --> 00:08:23,780
okay if you don't know much about docker

00:08:21,110 --> 00:08:25,070
there was somebody you may recognize to

00:08:23,780 --> 00:08:26,660
the presentation last year which is

00:08:25,070 --> 00:08:29,210
available online so I can take you from

00:08:26,660 --> 00:08:34,190
0 to the level of docker skill you need

00:08:29,210 --> 00:08:35,930
for this continuous integration and

00:08:34,190 --> 00:08:37,219
could use delivery just to sort of make

00:08:35,930 --> 00:08:39,560
sure we're we've got a common

00:08:37,219 --> 00:08:41,659
understanding is whereby when somebody

00:08:39,560 --> 00:08:45,110
does something in the system whether

00:08:41,659 --> 00:08:47,000
it's they pushing a change up into the

00:08:45,110 --> 00:08:49,160
version control server or whether

00:08:47,000 --> 00:08:51,380
they're doing a merge that the right

00:08:49,160 --> 00:08:52,730
things will happen automatically so

00:08:51,380 --> 00:08:54,740
things will eventually get checked

00:08:52,730 --> 00:08:57,290
verified and deployed onto your

00:08:54,740 --> 00:09:00,290
documentation site you can also generate

00:08:57,290 --> 00:09:03,250
artifacts on a big believer in using

00:09:00,290 --> 00:09:06,440
things like plant UML and graphics to

00:09:03,250 --> 00:09:10,040
generate my diagrams for me from text I

00:09:06,440 --> 00:09:12,200
don't like using diagramming tools I was

00:09:10,040 --> 00:09:15,290
never a great artist it's also more

00:09:12,200 --> 00:09:17,210
reliable linting there are more and more

00:09:15,290 --> 00:09:18,950
tools around that are taking a linting

00:09:17,210 --> 00:09:21,890
approach to language natural language

00:09:18,950 --> 00:09:24,350
verification so they'd like you to check

00:09:21,890 --> 00:09:26,900
for profane language the ability to

00:09:24,350 --> 00:09:29,780
check for reading levels these types of

00:09:26,900 --> 00:09:32,930
things and there's a link there to some

00:09:29,780 --> 00:09:36,760
examples that you can find that you can

00:09:32,930 --> 00:09:39,610
use with your button publication engines

00:09:36,760 --> 00:09:42,140
we're going to be using github pages

00:09:39,610 --> 00:09:45,230
static website nice and easy

00:09:42,140 --> 00:09:47,480
not a huge fan of CMS's then maybe

00:09:45,230 --> 00:09:49,610
situations or SEMS makes sense but

00:09:47,480 --> 00:09:54,050
generally not you're just publishing a

00:09:49,610 --> 00:09:56,930
fixed set of content you may also need

00:09:54,050 --> 00:09:59,480
to do two at the same time deploy PDF

00:09:56,930 --> 00:10:03,860
copies and we'll see that in action as

00:09:59,480 --> 00:10:05,480
well you could mix and match these

00:10:03,860 --> 00:10:06,830
components I've drawn the whole picture

00:10:05,480 --> 00:10:08,780
from content all the way through to

00:10:06,830 --> 00:10:10,790
publication you may not be to change

00:10:08,780 --> 00:10:13,360
everything but you can change parts of

00:10:10,790 --> 00:10:16,220
the tool train so I'm talking here about

00:10:13,360 --> 00:10:18,410
having a back end tool chain you

00:10:16,220 --> 00:10:20,570
publication platform you can choose you

00:10:18,410 --> 00:10:22,350
can still maintain your content in the

00:10:20,570 --> 00:10:23,700
lightweight markup language

00:10:22,350 --> 00:10:26,280
rather toiling to get between two it's

00:10:23,700 --> 00:10:28,500
obviously more work and the same thing

00:10:26,280 --> 00:10:31,140
you can't change your authoring tools I

00:10:28,500 --> 00:10:33,350
do know if people who use madcap flare

00:10:31,140 --> 00:10:35,520
at the front to do heavy weight

00:10:33,350 --> 00:10:37,920
documentation authoring another back-end

00:10:35,520 --> 00:10:39,690
they're using they're using gettin a

00:10:37,920 --> 00:10:45,630
flat file structure to actually deploy

00:10:39,690 --> 00:10:47,310
their their content and keep improving

00:10:45,630 --> 00:10:51,420
if you're a developer use this concept

00:10:47,310 --> 00:10:53,340
of sprints and retros and iteration and

00:10:51,420 --> 00:10:59,390
keep improving your process you can do

00:10:53,340 --> 00:10:59,390
the same thing with documentation okay

00:10:59,840 --> 00:11:06,690
let's have a demo so the tools that I'm

00:11:04,380 --> 00:11:09,090
going to present to you today is Fink's

00:11:06,690 --> 00:11:11,400
Sphinx comes from the Python world it's

00:11:09,090 --> 00:11:13,020
your they used to develop to document a

00:11:11,400 --> 00:11:16,740
lot of their packages and they're all

00:11:13,020 --> 00:11:18,780
things it's pretty sophisticated it's

00:11:16,740 --> 00:11:21,810
based around a markup language called

00:11:18,780 --> 00:11:23,490
restructured text and in this system

00:11:21,810 --> 00:11:27,030
we've got some restructured text files

00:11:23,490 --> 00:11:28,680
and some image files and together syncs

00:11:27,030 --> 00:11:31,740
will will create a public publish

00:11:28,680 --> 00:11:35,190
publishable set of files that we can in

00:11:31,740 --> 00:11:37,230
deploy io statically CMS some of these

00:11:35,190 --> 00:11:39,270
so we have Python so neither

00:11:37,230 --> 00:11:42,570
requirements package to actually deploy

00:11:39,270 --> 00:11:44,370
define our Python environment one of the

00:11:42,570 --> 00:11:46,860
tools were going to use is node base so

00:11:44,370 --> 00:11:49,170
we also got some some node modules to

00:11:46,860 --> 00:11:52,800
install the things driven by a new makes

00:11:49,170 --> 00:11:54,360
so we there's a key component of these

00:11:52,800 --> 00:11:56,700
sorts of projects is you need a build

00:11:54,360 --> 00:11:59,460
tool you want to automate as much as as

00:11:56,700 --> 00:12:02,250
possible you know Center you can do make

00:11:59,460 --> 00:12:03,990
Sphinx happens to provide pretty make

00:12:02,250 --> 00:12:06,480
pre-made make files for it so it's quite

00:12:03,990 --> 00:12:08,400
easy but use whatever you're used to I

00:12:06,480 --> 00:12:10,530
will be talking about docket us to some

00:12:08,400 --> 00:12:13,590
extent so your docker file store one of

00:12:10,530 --> 00:12:15,390
our project and because we're using git

00:12:13,590 --> 00:12:18,690
lab in this example then there is a

00:12:15,390 --> 00:12:21,030
camel file which defines our CI CD

00:12:18,690 --> 00:12:23,280
pipelines that's kind of the components

00:12:21,030 --> 00:12:24,870
of our projects but before we could

00:12:23,280 --> 00:12:28,200
start that we have to create a project

00:12:24,870 --> 00:12:30,140
so that's office live people are

00:12:28,200 --> 00:12:33,030
thinking well how do I even start that

00:12:30,140 --> 00:12:34,819
so I've actually got a little

00:12:33,030 --> 00:12:39,829
demonstration here

00:12:34,819 --> 00:12:39,829
so just bear with me

00:12:45,649 --> 00:12:54,860
let's make let me just cut and paste to

00:12:51,269 --> 00:12:54,860
save yourself making typing errors

00:13:08,790 --> 00:13:13,350
I've got to clear up after my last test

00:13:22,150 --> 00:13:28,800
right stuck in creating it in my project

00:13:33,089 --> 00:13:37,690
I'm just quickly going to do some

00:13:36,250 --> 00:13:39,520
configuration this is a little hack that

00:13:37,690 --> 00:13:42,610
you don't see many people do but if you

00:13:39,520 --> 00:13:45,730
are doing get with two different email

00:13:42,610 --> 00:13:46,900
addresses so I have my personal my

00:13:45,730 --> 00:13:49,839
personal email address which is what I'm

00:13:46,900 --> 00:13:51,610
using here and I also obviously used get

00:13:49,839 --> 00:13:53,710
professionally so I'm using my papercut

00:13:51,610 --> 00:13:55,680
email address you don't have to set your

00:13:53,710 --> 00:13:58,779
email at the global level because it

00:13:55,680 --> 00:14:00,670
repository like that and that way you

00:13:58,779 --> 00:14:05,080
get the right identity associated with

00:14:00,670 --> 00:14:06,720
your commits right now so what I've done

00:14:05,080 --> 00:14:09,610
now is created an empty directory and

00:14:06,720 --> 00:14:12,190
setup it and set up a git repository for

00:14:09,610 --> 00:14:13,390
my project so I know that later on I'm

00:14:12,190 --> 00:14:14,920
going to have a document and I'm going

00:14:13,390 --> 00:14:20,850
to have some images I'm creating a

00:14:14,920 --> 00:14:20,850
directory to put that stuff in and then

00:14:21,690 --> 00:14:29,170
I'm going to stop now I've got a I've

00:14:26,770 --> 00:14:31,720
got a word document so this could be

00:14:29,170 --> 00:14:39,970
anything at all that you can you can

00:14:31,720 --> 00:14:45,180
export so here's a Word document and if

00:14:39,970 --> 00:14:45,180
I open up the ebrill office

00:14:51,040 --> 00:14:56,959
so this is the closed format document

00:14:54,170 --> 00:15:00,019
I've got so far it's got some structure

00:14:56,959 --> 00:15:03,050
to it it's got some custom headings some

00:15:00,019 --> 00:15:07,880
bullet points it's got an image in it

00:15:03,050 --> 00:15:10,670
this would be important later and it's

00:15:07,880 --> 00:15:12,470
got a footnote and various bits and

00:15:10,670 --> 00:15:14,870
pieces and finally it's got a table in

00:15:12,470 --> 00:15:16,610
it okay so we want to we're going to we

00:15:14,870 --> 00:15:17,839
won't have to redo this so we want to

00:15:16,610 --> 00:15:22,579
take all this and bring it into our new

00:15:17,839 --> 00:15:28,699
documentation system so we can do that

00:15:22,579 --> 00:15:30,889
we'd github now you can either install

00:15:28,699 --> 00:15:32,269
so what I'm going to do that is use pan

00:15:30,889 --> 00:15:35,660
duck which allows us to translate from

00:15:32,269 --> 00:15:37,670
word into restructured text we can

00:15:35,660 --> 00:15:39,529
install pen doc if we wanted to but with

00:15:37,670 --> 00:15:40,940
docker it's much easier because I can

00:15:39,529 --> 00:15:46,639
just run a docker container I can run a

00:15:40,940 --> 00:15:48,110
docker image as a container and it's got

00:15:46,639 --> 00:15:50,810
the tooling audience this is a project

00:15:48,110 --> 00:15:55,540
specific docker image with all the tools

00:15:50,810 --> 00:15:55,540
in it that I need and any of my

00:15:57,130 --> 00:16:04,120
developers can run that and get what

00:16:00,050 --> 00:16:09,350
they need so now if I look in source

00:16:04,120 --> 00:16:13,610
I've got a 0 0 1 convert rst file and if

00:16:09,350 --> 00:16:15,470
I look at that that's just general so

00:16:13,610 --> 00:16:18,199
that has gone from being a binary word

00:16:15,470 --> 00:16:20,029
file into being sort of plain text with

00:16:18,199 --> 00:16:23,209
some restructured markup so things like

00:16:20,029 --> 00:16:24,709
the dashes and the underlines they mark

00:16:23,209 --> 00:16:26,600
something they mark but it points their

00:16:24,709 --> 00:16:31,750
MUX section headers and all that sort of

00:16:26,600 --> 00:16:36,829
thing what I don't have is an image ok

00:16:31,750 --> 00:16:38,750
so getting images out you can do this in

00:16:36,829 --> 00:16:44,800
Word you can do this in LibreOffice did

00:16:38,750 --> 00:16:44,800
I shut down LibreOffice I did silly boy

00:16:50,250 --> 00:16:58,030
the trick to doing this is to actually

00:16:54,070 --> 00:17:00,580
export the whole document now one

00:16:58,030 --> 00:17:02,590
mistake you'll see people make is that

00:17:00,580 --> 00:17:03,790
they will save they will instead of

00:17:02,590 --> 00:17:05,470
doing what I did with pay and dr.

00:17:03,790 --> 00:17:09,370
actually get the text out they'll say

00:17:05,470 --> 00:17:12,460
the whole thing is HTML has anybody

00:17:09,370 --> 00:17:14,800
tried speaking with word exporting a

00:17:12,460 --> 00:17:17,860
document is HTML we've seen the result

00:17:14,800 --> 00:17:28,480
it's it's not usable so the only reason

00:17:17,860 --> 00:17:29,200
I'm doing this is so that I'm just

00:17:28,480 --> 00:17:31,810
giving a different name

00:17:29,200 --> 00:17:35,020
it's so that I can get the images out

00:17:31,810 --> 00:17:41,170
I'm not sure than text at all so now I

00:17:35,020 --> 00:17:47,740
really can close this down and now what

00:17:41,170 --> 00:17:49,480
I've got is this gif file so that's

00:17:47,740 --> 00:17:53,050
always interesting I've also got the the

00:17:49,480 --> 00:17:54,880
HTML file I'm not interested in it so

00:17:53,050 --> 00:17:58,720
I'm just going to move this gif file

00:17:54,880 --> 00:18:07,750
into the magic location with the right

00:17:58,720 --> 00:18:20,620
command sources images I give it a name

00:18:07,750 --> 00:18:22,080
I know image dot gif and now here comes

00:18:20,620 --> 00:18:26,310
a developer bit we start anything some

00:18:22,080 --> 00:18:26,310
editing some restructured text

00:18:34,940 --> 00:18:48,390
you can really see my thumb to the back

00:18:37,890 --> 00:18:50,400
really yeah put that in so this is

00:18:48,390 --> 00:18:52,350
remember I said you have to have text

00:18:50,400 --> 00:18:54,240
with like mate work up this example is

00:18:52,350 --> 00:18:56,280
lightweight markup this isn't a bit of

00:18:54,240 --> 00:19:02,550
markup that says please include this

00:18:56,280 --> 00:19:03,750
image and we put some alt text because

00:19:02,550 --> 00:19:06,150
that's friendly and makes the system

00:19:03,750 --> 00:19:07,800
slightly more accessible now we save

00:19:06,150 --> 00:19:09,300
this away and if I remember to do

00:19:07,800 --> 00:19:13,910
everything oh yeah I might run a little

00:19:09,300 --> 00:19:18,620
title I might run put a title the top

00:19:13,910 --> 00:19:18,620
just to be super friendly

00:19:33,490 --> 00:19:43,779
I'm still learning um vs Kevin I'm not

00:19:36,669 --> 00:19:47,140
as good as I'm with him okay now the

00:19:43,779 --> 00:19:48,970
thing I haven't done is I haven't

00:19:47,140 --> 00:19:50,860
created a sphinx project so there's no

00:19:48,970 --> 00:19:53,679
swinging infrastructure around this at

00:19:50,860 --> 00:19:56,409
the moment but remember that I have a

00:19:53,679 --> 00:19:59,740
documentary all the tools in I need so

00:19:56,409 --> 00:20:00,970
all I have to do is to run that docker

00:19:59,740 --> 00:20:04,299
image in the same way around the docker

00:20:00,970 --> 00:20:05,740
image to do is the pen doc stuff but in

00:20:04,299 --> 00:20:07,360
order to make my life easier I've

00:20:05,740 --> 00:20:17,440
wrapped the docker image in a script

00:20:07,360 --> 00:20:19,899
called run doc tools so in and that's

00:20:17,440 --> 00:20:23,350
just running a docker image for me but

00:20:19,899 --> 00:20:25,570
this time it's ring this links

00:20:23,350 --> 00:20:30,010
QuickStart so I'm just Fink I'm now

00:20:25,570 --> 00:20:38,730
creating a sphinx project yes project

00:20:30,010 --> 00:20:41,100
name is let's call it LCA 2020 me 0.1

00:20:38,730 --> 00:20:43,630
English and away we go

00:20:41,100 --> 00:20:45,309
so it's now built some scaffolding for

00:20:43,630 --> 00:20:46,330
me and this is this is now what my

00:20:45,309 --> 00:20:49,510
project is this is where I'm going to

00:20:46,330 --> 00:20:52,480
commit in to get and share and have

00:20:49,510 --> 00:20:54,490
other people develop on it but just to

00:20:52,480 --> 00:20:58,840
be going on with I'm now going to go

00:20:54,490 --> 00:21:02,409
make HTML again I'm using I'm using my

00:20:58,840 --> 00:21:04,750
pill my pre-built docker toolkit to do

00:21:02,409 --> 00:21:10,840
all that dependency management forming

00:21:04,750 --> 00:21:15,070
installation stuff and I've forgotten to

00:21:10,840 --> 00:21:18,720
do something which is I forgot to add in

00:21:15,070 --> 00:21:18,720
that contents

00:21:27,890 --> 00:21:33,550
come on save say oh this is not saved

00:21:32,960 --> 00:21:37,090
either

00:21:33,550 --> 00:21:37,090
whatever you say things

00:21:44,710 --> 00:21:48,920
okay that's a file locking problem we

00:21:47,210 --> 00:21:58,760
won't worry about that two more because

00:21:48,920 --> 00:22:02,290
I can now go start built HTML index so

00:21:58,760 --> 00:22:08,390
that's that's our content and I can even

00:22:02,290 --> 00:22:10,520
go in here and there's the image there's

00:22:08,390 --> 00:22:13,640
the link so it's preserved all the

00:22:10,520 --> 00:22:16,190
semantics of the original Word document

00:22:13,640 --> 00:22:18,110
okay now there's a few things to notice

00:22:16,190 --> 00:22:21,410
about this the first thing is that was

00:22:18,110 --> 00:22:22,760
actually pretty fast to build so I was

00:22:21,410 --> 00:22:24,530
talk to anyone about static websites

00:22:22,760 --> 00:22:27,530
that's a static website is just a page

00:22:24,530 --> 00:22:29,690
or HTML it's easy to deploy it's also

00:22:27,530 --> 00:22:32,120
easy to review so if I want to send this

00:22:29,690 --> 00:22:34,700
to some review I can just either send

00:22:32,120 --> 00:22:36,680
them they can do a git checkout and run

00:22:34,700 --> 00:22:39,470
the same build process they don't have

00:22:36,680 --> 00:22:41,570
to have any fancy staging infrastructure

00:22:39,470 --> 00:22:44,180
to review the content that's a very

00:22:41,570 --> 00:22:52,160
significant advantage okay

00:22:44,180 --> 00:22:53,180
I already everybody happy with that okay

00:22:52,160 --> 00:22:58,280
let's look at something a bit more

00:22:53,180 --> 00:22:59,990
complex so as part of this I mentioned

00:22:58,280 --> 00:23:03,050
earlier on that as a website he was the

00:22:59,990 --> 00:23:04,820
website for the doctors code demo it's

00:23:03,050 --> 00:23:08,450
more with demos in a complete book but

00:23:04,820 --> 00:23:09,860
it is getting added to the slides are

00:23:08,450 --> 00:23:12,680
here so if you're going back and find

00:23:09,860 --> 00:23:15,830
the slides they're here and all saw the

00:23:12,680 --> 00:23:22,600
topics I'm talking about are included in

00:23:15,830 --> 00:23:22,600
here but the other thing about this is

00:23:22,750 --> 00:23:28,700
that all the files do to generate it are

00:23:26,150 --> 00:23:30,320
here on github so you can dig in and see

00:23:28,700 --> 00:23:33,410
how I did it

00:23:30,320 --> 00:23:37,700
including how I actually built docker

00:23:33,410 --> 00:23:39,200
file which I won't go into in here

00:23:37,700 --> 00:23:42,850
because that's a little talk of war and

00:23:39,200 --> 00:23:48,470
zone but we won't do that okay

00:23:42,850 --> 00:23:50,570
and then down here I'm actually building

00:23:48,470 --> 00:23:52,130
I'm verifying every time somebody does

00:23:50,570 --> 00:23:53,640
the check-in I'm verifying the content

00:23:52,130 --> 00:23:56,820
to the website against my side

00:23:53,640 --> 00:23:59,309
list check tools and I'm also deploying

00:23:56,820 --> 00:24:01,530
it automatically if people in checking

00:23:59,309 --> 00:24:06,510
checking into master or merging into

00:24:01,530 --> 00:24:10,530
master ok so that's kind of a quick

00:24:06,510 --> 00:24:11,970
overview now this is sort of got a bit

00:24:10,530 --> 00:24:13,860
of a corporate II feel to it I'll just

00:24:11,970 --> 00:24:15,780
make this a bit bigger again so I don't

00:24:13,860 --> 00:24:17,580
get bogged down the details but there's

00:24:15,780 --> 00:24:19,980
a there's a few things why it looks like

00:24:17,580 --> 00:24:21,510
this first of all to show that you can

00:24:19,980 --> 00:24:23,370
build whatever process you want

00:24:21,510 --> 00:24:26,280
so most open source projects would has

00:24:23,370 --> 00:24:28,230
something a bit simpler and secondly to

00:24:26,280 --> 00:24:30,240
show that you can include the whole of

00:24:28,230 --> 00:24:32,660
the team in your doctors code workflow

00:24:30,240 --> 00:24:34,799
so here we've got a documentarians

00:24:32,660 --> 00:24:36,630
we've got some automation tools got

00:24:34,799 --> 00:24:41,220
developer we've got people outside of

00:24:36,630 --> 00:24:43,020
the project raising change requests ok

00:24:41,220 --> 00:24:44,520
so it's up to you to design the process

00:24:43,020 --> 00:24:51,330
that makes sense for your particular

00:24:44,520 --> 00:24:55,559
environment this is just an example so

00:24:51,330 --> 00:24:57,890
let's actually make a change but bundle

00:24:55,559 --> 00:25:01,400
them oops

00:24:57,890 --> 00:25:01,400
we're going to go

00:25:16,570 --> 00:25:21,170
so for this talk I've actually focuses a

00:25:19,730 --> 00:25:23,360
lot on automation so let's go into the

00:25:21,170 --> 00:25:27,380
automation page something you do with

00:25:23,360 --> 00:25:29,360
automation you'll notice that I put page

00:25:27,380 --> 00:25:34,360
numbers on things this is page number 60

00:25:29,360 --> 00:25:36,080
they're not sequential it's basic style

00:25:34,360 --> 00:25:40,150
indexing I'm going to close this

00:25:36,080 --> 00:25:49,370
contents so here is my editor that's

00:25:40,150 --> 00:25:50,570
demonstrating the so this is this big

00:25:49,370 --> 00:25:52,490
project this is the current under for

00:25:50,570 --> 00:25:56,270
this big project so here's file sixty

00:25:52,490 --> 00:25:57,980
which talks about automation so let's

00:25:56,270 --> 00:26:06,020
write a change requested to have

00:25:57,980 --> 00:26:16,660
something useful done here so I create a

00:26:06,020 --> 00:26:16,660
new issue i doing for time

00:26:17,440 --> 00:26:21,610
I'm starting to run out small change

00:26:24,010 --> 00:26:27,770
so anybody has submitted a change they

00:26:26,630 --> 00:26:30,260
found a fault they want to make a

00:26:27,770 --> 00:26:41,600
suggestion so now I'm going to do is and

00:26:30,260 --> 00:26:42,770
create a branch for this change now this

00:26:41,600 --> 00:26:44,870
point developers in the room are getting

00:26:42,770 --> 00:26:46,910
very bored because that's exactly what

00:26:44,870 --> 00:26:52,490
you're doing development right there are

00:26:46,910 --> 00:27:01,190
no surprises here am i right yeah so now

00:26:52,490 --> 00:27:05,570
I do a git pull then behold there is my

00:27:01,190 --> 00:27:12,920
new 18 demo change so I could just do I

00:27:05,570 --> 00:27:18,590
get checkout 18 I had batch completion

00:27:12,920 --> 00:27:21,350
my I obviously have some some aliases

00:27:18,590 --> 00:27:25,000
and CEO and CI and not standard commands

00:27:21,350 --> 00:27:33,200
but they are for checking and check out

00:27:25,000 --> 00:27:34,370
switched to their a small change I'm not

00:27:33,200 --> 00:27:37,130
sure if we ought to get the public get

00:27:34,370 --> 00:27:39,950
as far as publishing all this now I'm

00:27:37,130 --> 00:27:42,920
actually going to put in a spelling

00:27:39,950 --> 00:27:45,680
mistake and the reason for doing that is

00:27:42,920 --> 00:27:48,500
that I so I've explained that that part

00:27:45,680 --> 00:27:50,990
of the CI CD process is to actually run

00:27:48,500 --> 00:27:52,400
some linting and verification checks so

00:27:50,990 --> 00:27:53,660
I've got built into this example I've

00:27:52,400 --> 00:27:55,700
got a linting check I've got a spell

00:27:53,660 --> 00:27:58,970
check and I got a link check to check

00:27:55,700 --> 00:28:01,760
all the links but it will be useful if

00:27:58,970 --> 00:28:07,310
my developers did the same thing so of

00:28:01,760 --> 00:28:08,720
course what I do have is a make I can

00:28:07,310 --> 00:28:10,700
actually want to make very fine runs all

00:28:08,720 --> 00:28:17,090
three but for speed I'll just do a

00:28:10,700 --> 00:28:19,070
spelling check and why did that work

00:28:17,090 --> 00:28:21,860
because I haven't saved the file of

00:28:19,070 --> 00:28:26,269
course I knew that

00:28:21,860 --> 00:28:28,130
just a mutagen okay okay and of course

00:28:26,269 --> 00:28:31,250
there are spelling mistakes now if as a

00:28:28,130 --> 00:28:32,840
professional developer I would fix that

00:28:31,250 --> 00:28:34,130
before I treated you but I'm a

00:28:32,840 --> 00:28:50,120
consultant so I'm just going to commit

00:28:34,130 --> 00:28:56,240
it so I'll just do a chicken kind of

00:28:50,120 --> 00:29:02,240
spell spelling and now if I do a git

00:28:56,240 --> 00:29:04,159
push now what will happen up here if

00:29:02,240 --> 00:29:06,139
everything if the demo gods are with me

00:29:04,159 --> 00:29:11,809
and they weren't playing you up earlier

00:29:06,139 --> 00:29:17,360
on is that it's actually running some

00:29:11,809 --> 00:29:22,100
automated tests on that so I'm not

00:29:17,360 --> 00:29:24,529
depending on some person like me being

00:29:22,100 --> 00:29:25,970
careless I'm actually checking before

00:29:24,529 --> 00:29:28,429
and this will not deploy this on a

00:29:25,970 --> 00:29:30,260
branch but every time somebody does a

00:29:28,429 --> 00:29:32,360
push I don't know he does these now this

00:29:30,260 --> 00:29:34,519
is if you're gonna do this in real life

00:29:32,360 --> 00:29:37,820
I wouldn't speak up into three jobs this

00:29:34,519 --> 00:29:39,320
is sufficiently but I did want to show

00:29:37,820 --> 00:29:40,880
you know that you can set up multiple

00:29:39,320 --> 00:29:44,330
parallel jobs and so on and so forth

00:29:40,880 --> 00:29:46,519
normally I just do these three things in

00:29:44,330 --> 00:29:48,230
one job this is inefficient with it

00:29:46,519 --> 00:29:51,049
setting up three identical environments

00:29:48,230 --> 00:29:53,539
to do very similar things but you can do

00:29:51,049 --> 00:29:58,639
that I'm waiting until I fir went out of

00:29:53,539 --> 00:30:00,980
my 2,000 minute limit on gitlab I'm only

00:29:58,639 --> 00:30:04,100
because that's if it's a free project so

00:30:00,980 --> 00:30:07,149
this will not take long this will depart

00:30:04,100 --> 00:30:07,149
we should eventually fail

00:30:21,530 --> 00:30:26,450
I'm sure it wasn't this slow when I did

00:30:23,760 --> 00:30:30,720
it this morning okay

00:30:26,450 --> 00:30:33,060
anyway when that fails its failed good

00:30:30,720 --> 00:30:34,860
thank yous the two parts one failed so I

00:30:33,060 --> 00:30:36,840
get an email back saying this is failed

00:30:34,860 --> 00:30:39,570
thank you

00:30:36,840 --> 00:30:51,210
and there's a message saying that failed

00:30:39,570 --> 00:30:55,470
so mmm so now if I save that and let me

00:30:51,210 --> 00:31:03,600
just do the spell check again this time

00:30:55,470 --> 00:31:14,250
it passed so if I do get checking fix

00:31:03,600 --> 00:31:16,290
spelling and do a git push nail lo and

00:31:14,250 --> 00:31:17,610
behold and this will be incredible

00:31:16,290 --> 00:31:18,690
surprise to everybody in the room I'm

00:31:17,610 --> 00:31:21,630
sure what it's going to kick offer

00:31:18,690 --> 00:31:23,790
another pipeline and this time it should

00:31:21,630 --> 00:31:25,820
powers so that one failed this one

00:31:23,790 --> 00:31:29,970
should pass I'm not gonna wait for that

00:31:25,820 --> 00:31:32,700
it's not raining so at some point I'm

00:31:29,970 --> 00:31:35,160
happy with that because it's now a

00:31:32,700 --> 00:31:37,590
system it can be reviewed it can be

00:31:35,160 --> 00:31:38,790
reviewed in the webpage quite like the

00:31:37,590 --> 00:31:40,650
way the fact that get labs got these

00:31:38,790 --> 00:31:42,720
sort of web IDs and web viewing tools so

00:31:40,650 --> 00:31:44,250
you can actually do things inside the

00:31:42,720 --> 00:31:46,800
web for people who don't want to have

00:31:44,250 --> 00:31:50,190
tooling and they want to use vs code and

00:31:46,800 --> 00:31:52,920
stuff on their laptop you can just do a

00:31:50,190 --> 00:31:55,200
get a get pull and you can you can do a

00:31:52,920 --> 00:31:57,330
make HTML the same way that I didn't pay

00:31:55,200 --> 00:31:58,950
presto you can review the change so it's

00:31:57,330 --> 00:32:02,760
very quick and easy to get to get these

00:31:58,950 --> 00:32:07,200
reviews done but eventually you will

00:32:02,760 --> 00:32:08,760
want to do a merge so this is the thing

00:32:07,200 --> 00:32:17,970
that wasn't quite working the way I

00:32:08,760 --> 00:32:20,520
wanted to but if I go into here and

00:32:17,970 --> 00:32:24,650
scroll in I've got a merge I've got some

00:32:20,520 --> 00:32:24,650
commits where the commits gone

00:32:26,940 --> 00:32:32,230
sorry push the wrong button

00:32:30,490 --> 00:32:35,470
merge requests on a create a merge

00:32:32,230 --> 00:32:49,060
request based off number of the last

00:32:35,470 --> 00:32:54,000
push to 18 yeah we're going to see IDC

00:32:49,060 --> 00:32:54,000
pipeline crossing my fingers

00:32:55,800 --> 00:33:01,540
it's deploying it so that's a better

00:32:59,620 --> 00:33:05,530
pages deploy so it's taking the content

00:33:01,540 --> 00:33:07,990
off that off that branch and deploying

00:33:05,530 --> 00:33:10,840
it and I could tell you that's perfect

00:33:07,990 --> 00:33:12,700
but actually there is a bug in there in

00:33:10,840 --> 00:33:15,010
my world I would actually be running the

00:33:12,700 --> 00:33:17,320
verification step again in case the

00:33:15,010 --> 00:33:20,800
merge introduced bugs or introduced

00:33:17,320 --> 00:33:26,800
failures so there is actually a step

00:33:20,800 --> 00:33:28,720
missing in there okay the last piece is

00:33:26,800 --> 00:33:33,790
that I'm obviously depending on docker

00:33:28,720 --> 00:33:37,540
an awful lot so what I what I what I

00:33:33,790 --> 00:33:39,730
might just spend three minutes on is

00:33:37,540 --> 00:33:42,400
talking about how I've done the docker

00:33:39,730 --> 00:33:44,710
stuff the reason for that is that it's

00:33:42,400 --> 00:33:45,640
not it took was a bit fitty to set up so

00:33:44,710 --> 00:33:48,160
if you want to do the same thing

00:33:45,640 --> 00:33:49,450
yourself this might save you some time

00:33:48,160 --> 00:33:52,840
so what I've done is I've created a

00:33:49,450 --> 00:33:56,050
docker build context and that bill

00:33:52,840 --> 00:33:58,270
context contains both a docker file that

00:33:56,050 --> 00:33:59,680
I need so it's got Python in it that's

00:33:58,270 --> 00:34:02,950
built in standard Python image

00:33:59,680 --> 00:34:06,250
it's got no that into it and then I'm

00:34:02,950 --> 00:34:09,790
just using a requirements text file to

00:34:06,250 --> 00:34:13,899
install the Python packages I need and a

00:34:09,790 --> 00:34:19,500
package.json file to include the linting

00:34:13,899 --> 00:34:22,899
tool which was excellent and excellent

00:34:19,500 --> 00:34:24,310
obviously and also I'm hoping you

00:34:22,899 --> 00:34:25,300
explained it was right good that's not

00:34:24,310 --> 00:34:28,600
actually oh sorry

00:34:25,300 --> 00:34:31,629
Alex it was Alex yes so at the moment

00:34:28,600 --> 00:34:33,490
I'm using Alex and that's all I want to

00:34:31,629 --> 00:34:35,050
add more so I've actually installed

00:34:33,490 --> 00:34:35,800
right good as well she's got more in it

00:34:35,050 --> 00:34:39,090
but I

00:34:35,800 --> 00:34:43,660
I didn't have time to do that just yet

00:34:39,090 --> 00:34:46,270
and so what happens is is if I change

00:34:43,660 --> 00:34:49,240
any of these three files it will really

00:34:46,270 --> 00:34:50,740
rebuild a docker image as part of the

00:34:49,240 --> 00:34:51,910
CIC depresses so again it's an

00:34:50,740 --> 00:34:56,220
automation step I don't have to think

00:34:51,910 --> 00:35:03,340
about it and if you're in the land of

00:34:56,220 --> 00:35:05,440
get map the way you do that and it's

00:35:03,340 --> 00:35:09,400
quite cool I think is is this setup

00:35:05,440 --> 00:35:11,230
system here so the actual script is

00:35:09,400 --> 00:35:13,480
obvious it's just logging into the local

00:35:11,230 --> 00:35:15,430
docker system using predefined passwords

00:35:13,480 --> 00:35:17,230
I'm using the docker registry on gate

00:35:15,430 --> 00:35:18,760
lab which is very convenient because I

00:35:17,230 --> 00:35:20,320
don't you don't have to make the

00:35:18,760 --> 00:35:25,150
connections or set of any web hooks or

00:35:20,320 --> 00:35:27,790
anything but I'm using their docker

00:35:25,150 --> 00:35:30,370
andhaka service here so that means that

00:35:27,790 --> 00:35:32,860
I am I've read docker container running

00:35:30,370 --> 00:35:34,810
on the CI CD system because that's the

00:35:32,860 --> 00:35:36,460
way CI CD works don't get mad but they

00:35:34,810 --> 00:35:38,410
give you document and then inside that

00:35:36,460 --> 00:35:40,420
iearning docker and building stuff so

00:35:38,410 --> 00:35:42,160
that that's that if you hear the term

00:35:40,420 --> 00:35:44,650
docking docker this is an example of it

00:35:42,160 --> 00:35:47,140
running and then I'm doing it so that

00:35:44,650 --> 00:35:49,060
only when I update on master and I make

00:35:47,140 --> 00:35:51,460
changes those specific docker bill

00:35:49,060 --> 00:35:53,110
context as this process kick off so I'm

00:35:51,460 --> 00:35:54,280
not building a docker image each time

00:35:53,110 --> 00:35:57,940
which is good because that's really

00:35:54,280 --> 00:35:59,380
expensive because it just it just does

00:35:57,940 --> 00:36:01,360
the whole thing and that takes a long

00:35:59,380 --> 00:36:05,500
time and because there's a lot of those

00:36:01,360 --> 00:36:07,570
precious 2003 minutes I've got okayness

00:36:05,500 --> 00:36:10,330
based on the stable docker image so

00:36:07,570 --> 00:36:12,280
that's how you that's how you that's how

00:36:10,330 --> 00:36:14,350
you generate a docker and docker image

00:36:12,280 --> 00:36:22,350
use docketing docker to generate a

00:36:14,350 --> 00:36:25,620
docker image okay and disappear okay

00:36:22,350 --> 00:36:34,300
that was a demo

00:36:25,620 --> 00:36:36,370
just quickly nip back to the slides so

00:36:34,300 --> 00:36:38,860
we sought ticket triaging changes

00:36:36,370 --> 00:36:41,950
verification deployment going on these

00:36:38,860 --> 00:36:43,540
are some of the tools I used what I

00:36:41,950 --> 00:36:44,950
didn't show you was to make file that I

00:36:43,540 --> 00:36:46,870
have that's actually that's actually

00:36:44,950 --> 00:36:50,890
built on a lot so it automates the

00:36:46,870 --> 00:36:53,830
generation of diagrams using plant UML

00:36:50,890 --> 00:36:55,480
and those sorts of things so things give

00:36:53,830 --> 00:36:59,560
you a basic make file you need to build

00:36:55,480 --> 00:37:02,290
on it which I do do we still need tech

00:36:59,560 --> 00:37:05,950
writers okay so there is a whole bunch

00:37:02,290 --> 00:37:08,320
of expertise around tech writing that

00:37:05,950 --> 00:37:10,630
that we are now tech writers can stop

00:37:08,320 --> 00:37:12,760
writing text and they can start doing

00:37:10,630 --> 00:37:14,890
the clever stuff which is you know

00:37:12,760 --> 00:37:16,000
producing tax Ami's and information

00:37:14,890 --> 00:37:17,470
structure and all the things that we

00:37:16,000 --> 00:37:20,740
don't understand as developers which are

00:37:17,470 --> 00:37:22,180
very important and doing prism

00:37:20,740 --> 00:37:25,170
provements capability so they can do

00:37:22,180 --> 00:37:29,650
this across more projects okay

00:37:25,170 --> 00:37:31,720
what's the downside this was very much a

00:37:29,650 --> 00:37:34,150
commercial slide so you know in most

00:37:31,720 --> 00:37:35,560
open source projects I think you'll find

00:37:34,150 --> 00:37:37,150
that you know people who embrace this

00:37:35,560 --> 00:37:38,890
because they're mainly staffed by

00:37:37,150 --> 00:37:40,270
developers anyway but in some

00:37:38,890 --> 00:37:42,910
organizations they'll be resistant to

00:37:40,270 --> 00:37:44,710
change but we've never done it that way

00:37:42,910 --> 00:37:46,210
and so on so forth so you've got to go

00:37:44,710 --> 00:37:47,860
through your normal organizational

00:37:46,210 --> 00:37:51,850
change management processes and culture

00:37:47,860 --> 00:37:53,200
change and training and you know pilot

00:37:51,850 --> 00:37:55,120
projects and all the things you'd

00:37:53,200 --> 00:37:57,670
normally do to try and bring in these

00:37:55,120 --> 00:38:00,970
sorts of changes there's a link here

00:37:57,670 --> 00:38:04,690
with lots of information so if you you

00:38:00,970 --> 00:38:06,430
know other articles books blogs this is

00:38:04,690 --> 00:38:09,370
an excellent video so I mentioned

00:38:06,430 --> 00:38:12,190
earlier on about the UK government this

00:38:09,370 --> 00:38:14,890
is the woman who managed that process

00:38:12,190 --> 00:38:18,070
and she does an excellent talking write

00:38:14,890 --> 00:38:20,460
the docs some last year that's well

00:38:18,070 --> 00:38:25,510
worth the watch says more than I could

00:38:20,460 --> 00:38:31,280
and thank you

00:38:25,510 --> 00:38:34,110
[Applause]

00:38:31,280 --> 00:38:37,970
not time for any question Oh two minutes

00:38:34,110 --> 00:38:37,970
yeah there's time for a few questions

00:38:44,030 --> 00:38:48,570
thanks for the talk

00:38:45,690 --> 00:38:51,000
do you ever move the like that linting

00:38:48,570 --> 00:38:55,140
kind of checking stage far forward and

00:38:51,000 --> 00:38:57,260
to like get pre-commit hooks so that's

00:38:55,140 --> 00:39:01,410
an option but the problem is that

00:38:57,260 --> 00:39:02,490
process can take minutes and so normally

00:39:01,410 --> 00:39:04,410
those pre-commit hooks you want

00:39:02,490 --> 00:39:06,720
something that's very rapid and isn't

00:39:04,410 --> 00:39:08,610
going to hold up the terminal for five

00:39:06,720 --> 00:39:10,260
minutes or so well that's a big

00:39:08,610 --> 00:39:14,340
generation but you know it's a trade-off

00:39:10,260 --> 00:39:16,650
yes you can I haven't done it but I'm

00:39:14,340 --> 00:39:18,090
grumpy so if somebody's commit stuff and

00:39:16,650 --> 00:39:20,160
hasn't run those checks manually I'll

00:39:18,090 --> 00:39:21,840
give them a hard time because that was

00:39:20,160 --> 00:39:23,430
quite fast when you ran it there like

00:39:21,840 --> 00:39:25,320
that that looked usable but it takes

00:39:23,430 --> 00:39:26,640
longer than that in actually well I I

00:39:25,320 --> 00:39:28,050
was only running one of the checks I

00:39:26,640 --> 00:39:29,940
wasn't wearing the linting process I was

00:39:28,050 --> 00:39:31,890
only wearing spell checking I wasn't

00:39:29,940 --> 00:39:34,230
running the link the link check takes a

00:39:31,890 --> 00:39:39,840
long time okay apparently speaking you

00:39:34,230 --> 00:39:46,850
know takes a finite amount of time the

00:39:39,840 --> 00:39:52,110
questions I have one if not impertinent

00:39:46,850 --> 00:39:54,570
so these kind of projects use a lot of

00:39:52,110 --> 00:39:56,940
jargon which is often highly specialized

00:39:54,570 --> 00:39:58,590
so use a lot of these sort of technical

00:39:56,940 --> 00:40:01,050
writing projects use jargon that's not

00:39:58,590 --> 00:40:02,970
part of human or English language

00:40:01,050 --> 00:40:03,840
generally speaking so for example lint

00:40:02,970 --> 00:40:07,970
is not a verb

00:40:03,840 --> 00:40:11,910
outside of yeah outside of the industry

00:40:07,970 --> 00:40:14,010
so do automated automating these

00:40:11,910 --> 00:40:18,810
processes where they run into the

00:40:14,010 --> 00:40:20,610
specialized jargon does that is is it

00:40:18,810 --> 00:40:22,290
difficult to integrate the the industry

00:40:20,610 --> 00:40:24,240
specific jargon or the project specific

00:40:22,290 --> 00:40:26,960
jargon that is in the documentation

00:40:24,240 --> 00:40:29,060
that's being written into the

00:40:26,960 --> 00:40:32,790
auto-graded

00:40:29,060 --> 00:40:34,260
automated spell checking and so the

00:40:32,790 --> 00:40:36,120
answer question is no so all of these

00:40:34,260 --> 00:40:37,980
tools will have a scope a cheese so like

00:40:36,120 --> 00:40:38,970
you have custom word dictionary to spell

00:40:37,980 --> 00:40:42,900
checkers

00:40:38,970 --> 00:40:45,510
the Alex tool has it so you know I had a

00:40:42,900 --> 00:40:47,580
thing in there about dead links and he

00:40:45,510 --> 00:40:50,790
didn't like the word dead apparently

00:40:47,580 --> 00:40:53,250
it's upsetting you know it's offensive

00:40:50,790 --> 00:40:54,300
to some people some cultures so they

00:40:53,250 --> 00:40:56,220
didn't like the word dead but I actually

00:40:54,300 --> 00:40:59,970
put an escape saying for this paragraph

00:40:56,220 --> 00:41:01,470
don't worry about it so so far I haven't

00:40:59,970 --> 00:41:04,410
use always been an escape hatch that

00:41:01,470 --> 00:41:04,920
says well for this instance don't worry

00:41:04,410 --> 00:41:13,710
about it

00:41:04,920 --> 00:41:16,520
so ask your question okay

00:41:13,710 --> 00:41:16,520

YouTube URL: https://www.youtube.com/watch?v=QqgaX8JFyB8


