Title: "Keynote: Who cares about Democracy?" - A Prof Vanessa Teague (LCA 2020)
Publication date: 2020-01-20
Playlist: Keynotes (LCA 2020)
Description: 
	A/Prof Vanessa Teague

https://lca2020.linux.org.au/schedule/presentation/216/

I'll begin with analysis of the Swiss e-voting system and its flawed proofs, then explain why the NSW  iVote system is even worse.  Next, I'll discuss the world's first pilot Risk-Limiting Audit of a preferential election, in San Francisco, and compare it to the completely non-existent auditing strategy for our Senate elections.

Australia, once a leader in genuine democratic innovation, lags woefully behind the rest of the world in applying basic standards of privacy, transparency and security to electronic electoral processes.  So why is it so bad, and what can we do about it?

This talk includes joint work with Michelle Blom, Andrew Conway, Chris Culnane, Sarah Jamie Lewis, Olivier Periera, Philip Stark and Peter Stuckey.

I'll conclude with some speculative ideas about improving democratic participation between elections - suggestions welcome.

linux.conf.au is a conference about the Linux operating system, and all aspects of the thriving ecosystem of Free and Open Source Software that has grown up around it. Run since 1999, in a different Australian or New Zealand city each year, by a team of local volunteers, LCA invites more than 500 people to learn from the people who shape the future of Open Source. For more information on the conference see https://linux.conf.au/

Produced by NDV: https://youtube.com/channel/UCQ7dFBzZGlBvtU2hCecsBBg?sub_confirmation=1

#linux.conf.au #linux #foss #opensource

Thu Jan 16 09:10:00 2020 at Arena
Captions: 
	00:00:00,000 --> 00:00:03,750
dr. Vanessa Teague is a cryptographer

00:00:01,620 --> 00:00:06,600
with long-standing interests in

00:00:03,750 --> 00:00:08,690
elections and privacy she divides her

00:00:06,600 --> 00:00:11,070
time between designing new protocols and

00:00:08,690 --> 00:00:13,950
explaining why other protocols are not

00:00:11,070 --> 00:00:16,020
secure recently she worked on

00:00:13,950 --> 00:00:18,630
cryptographic examinations of voting

00:00:16,020 --> 00:00:21,000
systems in Switzerland and Australia

00:00:18,630 --> 00:00:23,640
elections ordinance in California and

00:00:21,000 --> 00:00:26,210
data re-identification in Australia

00:00:23,640 --> 00:00:35,620
please welcome Vanessa to the stage

00:00:26,210 --> 00:00:38,949
[Applause]

00:00:35,620 --> 00:00:41,839
okay my talk has the cheerful title of

00:00:38,949 --> 00:00:45,769
who cares about democracy which I hope

00:00:41,839 --> 00:00:50,719
is a rhetorical question I'm going to

00:00:45,769 --> 00:00:53,629
talk in some detail about some of the

00:00:50,719 --> 00:00:55,549
analysis that a large number of other

00:00:53,629 --> 00:00:58,219
people have done and you can see this

00:00:55,549 --> 00:01:00,949
talk is based on joint work with a long

00:00:58,219 --> 00:01:02,689
list of other colleagues some of them

00:01:00,949 --> 00:01:05,659
are cryptographers who worked on the

00:01:02,689 --> 00:01:07,490
swiss post and cite all proof analysis

00:01:05,659 --> 00:01:09,740
some of them are statisticians and some

00:01:07,490 --> 00:01:12,140
of them are real computer scientists who

00:01:09,740 --> 00:01:15,440
do a constraint optimization for risk

00:01:12,140 --> 00:01:16,640
limiting audits so here's a rough

00:01:15,440 --> 00:01:18,440
outline of what I'm going to talk about

00:01:16,640 --> 00:01:19,659
through the next hour the story goes

00:01:18,440 --> 00:01:23,810
like this

00:01:19,659 --> 00:01:26,720
there are genuine nifty cryptographic

00:01:23,810 --> 00:01:29,119
techniques for providing into and

00:01:26,720 --> 00:01:30,229
verifiable electronic elections and I'll

00:01:29,119 --> 00:01:31,130
talk a little bit more about what that

00:01:30,229 --> 00:01:34,159
is in a minute

00:01:31,130 --> 00:01:37,009
but the idea is that you get real

00:01:34,159 --> 00:01:38,959
evidence throughout the process of how

00:01:37,009 --> 00:01:40,720
people intended to vote and whether or

00:01:38,959 --> 00:01:45,229
not their votes were correctly counted

00:01:40,720 --> 00:01:46,640
however the assumptions about how people

00:01:45,229 --> 00:01:48,860
behave whether they're going to check

00:01:46,640 --> 00:01:50,149
properly and so on are really too strong

00:01:48,860 --> 00:01:53,030
for government elections it's too easy

00:01:50,149 --> 00:01:55,039
to trick people so really these systems

00:01:53,030 --> 00:01:59,959
don't adequately defend against bugs and

00:01:55,039 --> 00:02:01,489
fraud for for serious elections the New

00:01:59,959 --> 00:02:04,459
South Wales I vote system Falls a long

00:02:01,489 --> 00:02:05,899
way short of this ideal anyway but you

00:02:04,459 --> 00:02:07,369
know the worst thing that's going to

00:02:05,899 --> 00:02:08,929
happen is it gets used prepared with

00:02:07,369 --> 00:02:14,209
votes in state elections in New South

00:02:08,929 --> 00:02:16,010
Wales that's not actually the worst

00:02:14,209 --> 00:02:17,239
thing about Australian election software

00:02:16,010 --> 00:02:18,650
the worst thing about Australian

00:02:17,239 --> 00:02:21,890
election software is the Senate count

00:02:18,650 --> 00:02:25,069
which is also closed source code from

00:02:21,890 --> 00:02:26,180
foreign corporations now in principle

00:02:25,069 --> 00:02:28,519
this wouldn't be a problem because it's

00:02:26,180 --> 00:02:30,409
not actually being used for the casting

00:02:28,519 --> 00:02:34,310
process you still vote on a piece of

00:02:30,409 --> 00:02:36,560
paper right and we conduct a rigorous

00:02:34,310 --> 00:02:38,930
statistical audit of those paper records

00:02:36,560 --> 00:02:40,490
to double check what the closed source

00:02:38,930 --> 00:02:42,140
software from foreign companies was

00:02:40,490 --> 00:02:46,040
telling us about who our senators were

00:02:42,140 --> 00:02:48,330
going to be but we don't

00:02:46,040 --> 00:02:49,860
well you know at least there are paper

00:02:48,330 --> 00:02:52,230
records so in principle we can check

00:02:49,860 --> 00:02:54,150
which is better than what's likely to

00:02:52,230 --> 00:02:56,580
happen in Victorian local government

00:02:54,150 --> 00:03:00,270
elections if a bill currently before the

00:02:56,580 --> 00:03:03,270
Victorian Parliament passes all right so

00:03:00,270 --> 00:03:07,010
that's where we're going here's a

00:03:03,270 --> 00:03:11,460
picture of a kind of ideal generic

00:03:07,010 --> 00:03:14,130
interim verifiable election system the

00:03:11,460 --> 00:03:18,440
details are complicated but the

00:03:14,130 --> 00:03:21,750
principle is really simple the idea is

00:03:18,440 --> 00:03:24,420
that the system should provide evidence

00:03:21,750 --> 00:03:26,850
that it did the right thing with the

00:03:24,420 --> 00:03:29,100
data at every stage of the process

00:03:26,850 --> 00:03:32,400
and that evidence should be something

00:03:29,100 --> 00:03:35,040
that you can check using your own

00:03:32,400 --> 00:03:37,980
software your own code stuff that you

00:03:35,040 --> 00:03:41,130
wrote yourself and maths that you can

00:03:37,980 --> 00:03:42,660
freely access and understand well okay

00:03:41,130 --> 00:03:44,010
understand it might be putting it a bit

00:03:42,660 --> 00:03:47,370
don't like but at least you can give it

00:03:44,010 --> 00:03:52,110
a go yourself at the far left-hand side

00:03:47,370 --> 00:03:53,730
we have I'm imagining voters using a

00:03:52,110 --> 00:03:56,340
machine maybe a machine they trust maybe

00:03:53,730 --> 00:03:59,130
machine they don't trust to make an

00:03:56,340 --> 00:04:00,750
encryption of their vote and if they

00:03:59,130 --> 00:04:02,760
don't necessarily trust that machine and

00:04:00,750 --> 00:04:04,350
they're not sure whether it entered the

00:04:02,760 --> 00:04:06,630
vote that they wanted rather than the

00:04:04,350 --> 00:04:08,850
vote that somebody else who put malware

00:04:06,630 --> 00:04:11,790
on their device wanted to cast for them

00:04:08,850 --> 00:04:14,460
instead they should get some actual

00:04:11,790 --> 00:04:16,859
evidence some real numbers that they can

00:04:14,460 --> 00:04:19,080
use on some other device any other

00:04:16,859 --> 00:04:21,780
device they want to double check for

00:04:19,080 --> 00:04:24,330
themselves whether or not the encryption

00:04:21,780 --> 00:04:26,370
they made was what they wanted so I've

00:04:24,330 --> 00:04:27,930
written you know some indicative kind of

00:04:26,370 --> 00:04:30,090
maths here right I'm checking some kind

00:04:27,930 --> 00:04:33,360
of mathematical function about the vote

00:04:30,090 --> 00:04:35,940
that was made on my glass so the voter

00:04:33,360 --> 00:04:38,820
gets a some proof proof in a real

00:04:35,940 --> 00:04:40,020
rigorous kind of mathematical sense that

00:04:38,820 --> 00:04:43,080
the vote that was recorded on their

00:04:40,020 --> 00:04:46,500
behalf is what they wanted then the next

00:04:43,080 --> 00:04:48,510
stage is a public bulletin board so

00:04:46,500 --> 00:04:50,460
think of a fancy website with some extra

00:04:48,510 --> 00:04:52,950
features to make sure that things can't

00:04:50,460 --> 00:04:55,560
be deleted or changed after people have

00:04:52,950 --> 00:04:57,090
checked and each voter gets the

00:04:55,560 --> 00:04:58,030
opportunity to check that the ciphertext

00:04:57,090 --> 00:05:00,460
that they matter

00:04:58,030 --> 00:05:05,980
I'd really did show up on that public

00:05:00,460 --> 00:05:08,350
bulletin board now if we didn't care

00:05:05,980 --> 00:05:09,670
about privacy we'd be done because we

00:05:08,350 --> 00:05:11,740
could just decrypt all those votes and

00:05:09,670 --> 00:05:13,600
that'll be the election outcome but if

00:05:11,740 --> 00:05:16,630
we don't care about privacy we don't

00:05:13,600 --> 00:05:18,970
want to just flat out decrypt the votes

00:05:16,630 --> 00:05:22,600
that everybody are uploaded to the web

00:05:18,970 --> 00:05:24,070
with their identity attached so one way

00:05:22,600 --> 00:05:26,590
of dealing with this situation that I've

00:05:24,070 --> 00:05:31,720
pictured on this slide is to have a

00:05:26,590 --> 00:05:34,150
series of servers that shuffle and re

00:05:31,720 --> 00:05:36,430
encrypt the votes so they're taking a

00:05:34,150 --> 00:05:38,290
list of encrypted votes they rearrange

00:05:36,430 --> 00:05:40,060
it and make them look different and then

00:05:38,290 --> 00:05:44,530
they pass that new list of encrypted

00:05:40,060 --> 00:05:48,880
votes on to the next mixer now the idea

00:05:44,530 --> 00:05:52,330
that assumption here remembering that if

00:05:48,880 --> 00:05:53,950
you're mixing ordinary paper votes in a

00:05:52,330 --> 00:05:55,990
big box you kind of don't know what

00:05:53,950 --> 00:05:58,060
shuffle you've applied but if you're

00:05:55,990 --> 00:06:02,640
shuffling electronic records inevitably

00:05:58,060 --> 00:06:07,060
you know what electronic permutation you

00:06:02,640 --> 00:06:09,160
coded are not coded but chosen so the

00:06:07,060 --> 00:06:11,919
way that we deal with this inevitable

00:06:09,160 --> 00:06:14,020
knowledge is we get several different

00:06:11,919 --> 00:06:16,780
mixers to do the thing and that

00:06:14,020 --> 00:06:18,130
assumption is as I've deliberately drawn

00:06:16,780 --> 00:06:19,660
them in different politically suggestive

00:06:18,130 --> 00:06:22,540
colors because the assumption is meant

00:06:19,660 --> 00:06:25,120
to be as long as they don't collude and

00:06:22,540 --> 00:06:28,210
all pull the information about what the

00:06:25,120 --> 00:06:29,740
rearrangement was then the link between

00:06:28,210 --> 00:06:31,330
the incoming votes with people's names

00:06:29,740 --> 00:06:35,200
on it and outcoming votes that get

00:06:31,330 --> 00:06:37,540
decrypted should be broken so that's all

00:06:35,200 --> 00:06:39,130
good except now we have to worry about

00:06:37,540 --> 00:06:41,110
whether those people actually fiddled

00:06:39,130 --> 00:06:42,750
the contents at the same time that they

00:06:41,110 --> 00:06:45,520
were helpfully reshuffling for privacy

00:06:42,750 --> 00:06:46,840
so again there is some fancy crypto for

00:06:45,520 --> 00:06:48,550
doing that and you can see down the

00:06:46,840 --> 00:06:50,229
bottom of my picture I've written proofs

00:06:48,550 --> 00:06:52,990
of honest mixing on the bulletin board

00:06:50,229 --> 00:06:55,180
proofs of honest decryption also on the

00:06:52,990 --> 00:06:56,620
bulletin board so this is a complicated

00:06:55,180 --> 00:06:58,900
mathematical object that we'll look at

00:06:56,620 --> 00:07:00,790
in a minute but the idea again is that

00:06:58,900 --> 00:07:03,130
the proof that they didn't fiddle with

00:07:00,790 --> 00:07:06,160
the results is made publicly available

00:07:03,130 --> 00:07:07,539
and anybody can check using code that

00:07:06,160 --> 00:07:09,190
they wrote or an implementation that

00:07:07,539 --> 00:07:09,820
they downloaded and compiled themselves

00:07:09,190 --> 00:07:13,420
in

00:07:09,820 --> 00:07:15,070
one can check this evidence that the

00:07:13,420 --> 00:07:16,990
trustees who were supposed to be

00:07:15,070 --> 00:07:18,520
shuffling the votes really did shuffle

00:07:16,990 --> 00:07:21,520
honestly instead of inserting or

00:07:18,520 --> 00:07:24,370
deleting or changing stuff and then the

00:07:21,520 --> 00:07:26,560
final step so so far we've got a well

00:07:24,370 --> 00:07:30,400
shuffled list of encrypted votes right

00:07:26,560 --> 00:07:33,040
on the far right side now we need to

00:07:30,400 --> 00:07:34,300
decrypt them and some Authority has the

00:07:33,040 --> 00:07:35,800
secret key or some collection of

00:07:34,300 --> 00:07:38,940
authorities have the secret cave and

00:07:35,800 --> 00:07:41,050
decrypting votes in the election and

00:07:38,940 --> 00:07:44,620
they have to decrypt them and tell us

00:07:41,050 --> 00:07:46,390
what they are now again we need to make

00:07:44,620 --> 00:07:49,210
sure we're not trusting that authority

00:07:46,390 --> 00:07:51,550
and running the risk that they lie about

00:07:49,210 --> 00:07:53,830
what the decryption of the votes was so

00:07:51,550 --> 00:07:55,990
again we use some cryptography to

00:07:53,830 --> 00:07:58,420
provide to force that authority to make

00:07:55,990 --> 00:08:00,310
a proof that the decryption that they're

00:07:58,420 --> 00:08:02,200
telling us really does truthfully

00:08:00,310 --> 00:08:07,840
reflect the encrypted votes that they

00:08:02,200 --> 00:08:09,400
got so that's the picture and although

00:08:07,840 --> 00:08:10,570
the mathematical details of each

00:08:09,400 --> 00:08:13,570
component are quite complicated

00:08:10,570 --> 00:08:16,180
I hope the principle is clear it's sort

00:08:13,570 --> 00:08:17,710
of a different form of openness from the

00:08:16,180 --> 00:08:19,510
form of openness that the open-source

00:08:17,710 --> 00:08:21,100
community is used to but I hope it's

00:08:19,510 --> 00:08:24,880
something that you can see is a valuable

00:08:21,100 --> 00:08:27,970
thing we're not necessarily sorry it

00:08:24,880 --> 00:08:31,390
would it would be strictly necessary and

00:08:27,970 --> 00:08:33,580
in fact it isn't sufficient to see the

00:08:31,390 --> 00:08:35,410
open source code that the authorities

00:08:33,580 --> 00:08:36,610
say that they're running for one thing

00:08:35,410 --> 00:08:39,310
they might not even be running the thing

00:08:36,610 --> 00:08:41,860
that they said they were running but

00:08:39,310 --> 00:08:43,479
what is meant to be open and completely

00:08:41,860 --> 00:08:46,480
in the control of any citizen who feels

00:08:43,479 --> 00:08:48,460
like it is the opportunity to check to

00:08:46,480 --> 00:08:50,080
verify the proofs at every stage and

00:08:48,460 --> 00:08:52,450
make sure that they're convinced that

00:08:50,080 --> 00:08:54,280
their vote went in right and that all of

00:08:52,450 --> 00:08:58,660
the votes were properly dealt neither

00:08:54,280 --> 00:09:01,920
once they arrived okay however there are

00:08:58,660 --> 00:09:01,920
some big assumptions about this

00:09:03,580 --> 00:09:08,540
let's talk first of all going to a

00:09:07,040 --> 00:09:10,220
little bit more detail about what these

00:09:08,540 --> 00:09:12,170
mixing and decryption proofs are meant

00:09:10,220 --> 00:09:14,480
to be so these are fancy cryptographic

00:09:12,170 --> 00:09:16,310
objects but the intention is pretty

00:09:14,480 --> 00:09:19,070
clear right it's meant to be an

00:09:16,310 --> 00:09:22,430
electronic analogy of this old-fashioned

00:09:19,070 --> 00:09:24,440
physical idea that scrutineers can stand

00:09:22,430 --> 00:09:26,510
in the polling place watching somebody

00:09:24,440 --> 00:09:28,220
shuffle a great big box of ballots and

00:09:26,510 --> 00:09:31,820
then tip them out on the table in

00:09:28,220 --> 00:09:33,830
preparation for counting them so there's

00:09:31,820 --> 00:09:36,020
really two different things one is we

00:09:33,830 --> 00:09:38,030
want to prove that they're shuffled

00:09:36,020 --> 00:09:40,040
properly without being manipulated and

00:09:38,030 --> 00:09:41,840
we want to prove that they're decrypted

00:09:40,040 --> 00:09:46,490
correctly and we're being told the truth

00:09:41,840 --> 00:09:47,600
about what their decryptions are so

00:09:46,490 --> 00:09:49,970
earlier this year

00:09:47,600 --> 00:09:53,360
Sarah Jeremy Lewis and Olivier Pereira

00:09:49,970 --> 00:09:56,570
and I took a look at the shuffling and

00:09:53,360 --> 00:09:58,610
decryption proofs in a an electronic

00:09:56,570 --> 00:10:01,190
voting system in Switzerland so this

00:09:58,610 --> 00:10:03,110
system was being sold by Swiss Post and

00:10:01,190 --> 00:10:06,110
the code was originally developed by an

00:10:03,110 --> 00:10:07,850
multinational company called SCYTL now

00:10:06,110 --> 00:10:09,230
the system wasn't really into end

00:10:07,850 --> 00:10:11,210
verifiable it didn't have all the steps

00:10:09,230 --> 00:10:15,200
in the picture that I showed a few

00:10:11,210 --> 00:10:17,540
minutes ago but it did have shuffling

00:10:15,200 --> 00:10:19,820
and decryption proofs so it was supposed

00:10:17,540 --> 00:10:22,130
to provide at least to some entities

00:10:19,820 --> 00:10:24,590
evidence that the encrypted votes that

00:10:22,130 --> 00:10:28,820
it received had been properly mixed and

00:10:24,590 --> 00:10:30,920
correctly decrypted we found two bugs

00:10:28,820 --> 00:10:33,710
when we looked at the code that became

00:10:30,920 --> 00:10:36,410
available the first one was in the proof

00:10:33,710 --> 00:10:39,020
that each mix net had shuffled properly

00:10:36,410 --> 00:10:40,790
and the second one was in the proof that

00:10:39,020 --> 00:10:41,960
the decryption was correct so you know

00:10:40,790 --> 00:10:43,580
there were only two things they were

00:10:41,960 --> 00:10:44,570
supposed to prove it somebody's laughing

00:10:43,580 --> 00:10:46,310
right there are only do you think they

00:10:44,570 --> 00:10:49,280
were supposed to prove they were both

00:10:46,310 --> 00:10:51,320
buggy and buggy in this context means

00:10:49,280 --> 00:10:53,630
that it's possible to generate a proof

00:10:51,320 --> 00:10:55,550
that passes verification and makes

00:10:53,630 --> 00:10:58,640
everything look okay while actually

00:10:55,550 --> 00:11:02,180
fiddling the books so let's see what

00:10:58,640 --> 00:11:04,730
that looks like and I said the principle

00:11:02,180 --> 00:11:06,890
is simple but the details are are

00:11:04,730 --> 00:11:09,080
conjugated I just need to have a little

00:11:06,890 --> 00:11:13,790
survey who thinks

00:11:09,080 --> 00:11:15,610
yeah math I love math who thinks oh dear

00:11:13,790 --> 00:11:18,490
how long is the meth gonna last

00:11:15,610 --> 00:11:19,990
okay that's pretty good that's more than

00:11:18,490 --> 00:11:26,710
I usually get out of my students to be

00:11:19,990 --> 00:11:28,210
honest we're trying to prove that when

00:11:26,710 --> 00:11:30,250
we're trying to prove correct decryption

00:11:28,210 --> 00:11:32,230
we're trying to prove a very specific

00:11:30,250 --> 00:11:34,660
mathematical fact and it's written up

00:11:32,230 --> 00:11:35,920
here on the slides we assume that

00:11:34,660 --> 00:11:37,990
there's a bunch of public information

00:11:35,920 --> 00:11:41,080
we've got the some parameters for the

00:11:37,990 --> 00:11:43,060
encryption a public key and we've got

00:11:41,080 --> 00:11:44,350
one ciphertext I'm calling it C naught C

00:11:43,060 --> 00:11:48,370
one it's a pair of numbers in this

00:11:44,350 --> 00:11:51,610
context and we want to prove that this

00:11:48,370 --> 00:11:53,140
is an encryption of one if you can prove

00:11:51,610 --> 00:11:54,040
and it's something as an encryption as

00:11:53,140 --> 00:11:56,710
one you can prove that it's an

00:11:54,040 --> 00:11:59,170
encryption or anything so what that

00:11:56,710 --> 00:12:02,980
looks like as an equation is we want to

00:11:59,170 --> 00:12:05,890
prove that there exists an X such that C

00:12:02,980 --> 00:12:08,740
one is C naught pair of X and that that

00:12:05,890 --> 00:12:11,560
X matches the secret exponent of the

00:12:08,740 --> 00:12:12,880
public key now this is easy to prove

00:12:11,560 --> 00:12:14,830
right all you have to do is tell

00:12:12,880 --> 00:12:16,660
everybody X right all the other stuff is

00:12:14,830 --> 00:12:18,750
public and so anybody could go along if

00:12:16,660 --> 00:12:20,620
you were willing to tell everybody X

00:12:18,750 --> 00:12:22,090
anybody else could go along and just

00:12:20,620 --> 00:12:25,090
check that these two equations are true

00:12:22,090 --> 00:12:27,460
unfortunately in this context X is the

00:12:25,090 --> 00:12:30,190
secret key there for decrypting

00:12:27,460 --> 00:12:31,660
everybody's votes in the election so the

00:12:30,190 --> 00:12:34,780
trick here is that we want to prove this

00:12:31,660 --> 00:12:38,710
fact is true without revealing X and

00:12:34,780 --> 00:12:42,430
that's hard fortunately this is kind of

00:12:38,710 --> 00:12:46,810
a known thing in cryptography it's like

00:12:42,430 --> 00:12:49,030
40 years old actually so the solution is

00:12:46,810 --> 00:12:50,650
a non interrupt is there not interactive

00:12:49,030 --> 00:12:52,180
zero knowledge proof of the Equality of

00:12:50,650 --> 00:12:54,100
discrete logs and you can go and find a

00:12:52,180 --> 00:13:00,270
paper from that eightieth explaining how

00:12:54,100 --> 00:13:00,270
to do this it looks almost like this

00:13:01,779 --> 00:13:06,529
you pick some rent at the the prover

00:13:04,850 --> 00:13:08,630
right the authorities trying to prove

00:13:06,529 --> 00:13:09,890
that they do the right thing picks a

00:13:08,630 --> 00:13:14,320
random value that they don't tell

00:13:09,890 --> 00:13:16,820
anybody about they make up some

00:13:14,320 --> 00:13:17,870
commitment values in step two that we

00:13:16,820 --> 00:13:22,240
don't really need to care very much

00:13:17,870 --> 00:13:24,290
about then we generate for themselves a

00:13:22,240 --> 00:13:27,200
challenge that they're not supposed to

00:13:24,290 --> 00:13:30,200
be able to predict or fiddle with in

00:13:27,200 --> 00:13:32,410
this case that H is a cryptographic hash

00:13:30,200 --> 00:13:34,040
function so they're supposed to take

00:13:32,410 --> 00:13:37,399
everything they're trying to prove

00:13:34,040 --> 00:13:39,050
something about hash it and then use the

00:13:37,399 --> 00:13:41,720
cryptographic hash as the challenge in

00:13:39,050 --> 00:13:43,250
the next thing and then the next step

00:13:41,720 --> 00:13:44,779
step four which is the thing that's

00:13:43,250 --> 00:13:47,720
supposed to be hard

00:13:44,779 --> 00:13:50,360
is they're supposed to effectively

00:13:47,720 --> 00:13:54,410
answer the challenge that they've just

00:13:50,360 --> 00:13:56,510
made for themselves and you can see if

00:13:54,410 --> 00:13:57,649
you look at the verification equations

00:13:56,510 --> 00:13:59,180
at the very bottom which are the things

00:13:57,649 --> 00:14:01,730
that any citizen is supposed to be able

00:13:59,180 --> 00:14:04,850
to run and check it I hope you can

00:14:01,730 --> 00:14:08,060
convince yourself that if the prove I

00:14:04,850 --> 00:14:09,410
was telling the truth then those two

00:14:08,060 --> 00:14:12,050
equations at the bottom are going to

00:14:09,410 --> 00:14:15,200
work out fine because basically the

00:14:12,050 --> 00:14:19,459
thing on the left is just G to the power

00:14:15,200 --> 00:14:23,660
of Z minus CX and then B 1 is just

00:14:19,459 --> 00:14:26,500
guaranteed to be again whatever it is C

00:14:23,660 --> 00:14:29,600
naught to the power of Z minus CX again

00:14:26,500 --> 00:14:30,940
you know get your pencil out and checkup

00:14:29,600 --> 00:14:33,230
yourself but it's true

00:14:30,940 --> 00:14:36,080
what's also meant to be true although

00:14:33,230 --> 00:14:38,770
it's not so obvious is you're not meant

00:14:36,080 --> 00:14:42,560
to be able to have a high probability of

00:14:38,770 --> 00:14:45,430
producing a successful Z if you don't

00:14:42,560 --> 00:14:50,390
really know excellent and so the

00:14:45,430 --> 00:14:53,209
intuition is see how Z is a function of

00:14:50,390 --> 00:14:55,579
X that slides along a linear scale right

00:14:53,209 --> 00:14:56,990
so if you happen to guess C you might be

00:14:55,579 --> 00:14:59,180
able to fill things so that you can get

00:14:56,990 --> 00:15:02,570
as if it works but in order to be able

00:14:59,180 --> 00:15:04,579
to succeed with any reasonable

00:15:02,570 --> 00:15:06,649
probability you're really going to have

00:15:04,579 --> 00:15:09,580
to be able to answer this question about

00:15:06,649 --> 00:15:12,520
zid in step 4 for whatever then

00:15:09,580 --> 00:15:15,850
of C happens to come up when your hash

00:15:12,520 --> 00:15:19,720
all your other stuff so you meant to be

00:15:15,850 --> 00:15:22,090
committed to all the input data before

00:15:19,720 --> 00:15:26,170
you have to answer the challenge that

00:15:22,090 --> 00:15:29,590
you've made for yourself so that's all

00:15:26,170 --> 00:15:32,680
fine and the corrected version works and

00:15:29,590 --> 00:15:34,720
isn't old and established unfortunately

00:15:32,680 --> 00:15:36,850
social instead of just using one of the

00:15:34,720 --> 00:15:38,260
numerous open-source opportunities you

00:15:36,850 --> 00:15:39,940
know well-written opportunities to do

00:15:38,260 --> 00:15:41,470
this from cryptographers who knew what

00:15:39,940 --> 00:15:44,740
they were doing they decided to roll

00:15:41,470 --> 00:15:47,440
their own and the reason that this third

00:15:44,740 --> 00:15:49,480
step is bold is that it actually emits

00:15:47,440 --> 00:15:51,460
an absolutely crucial step so I said

00:15:49,480 --> 00:15:52,900
it's really important that you have to

00:15:51,460 --> 00:15:56,230
hash everything you're proving something

00:15:52,900 --> 00:15:58,690
about into this venue they forgot to

00:15:56,230 --> 00:16:00,520
hash the same naught brand so that was

00:15:58,690 --> 00:16:03,130
the first element of the cipher text and

00:16:00,520 --> 00:16:06,340
if you think about yourself trying to

00:16:03,130 --> 00:16:07,450
cheat on this proof once you see that C

00:16:06,340 --> 00:16:09,220
naught is not hashed it's actually

00:16:07,450 --> 00:16:11,380
really obvious how to cheat right so

00:16:09,220 --> 00:16:13,620
make up a value for c1 whatever you know

00:16:11,380 --> 00:16:16,150
whatever the real value of the thing is

00:16:13,620 --> 00:16:19,740
make up some random values for B naught

00:16:16,150 --> 00:16:27,340
and B 1 do the hash do the thing and

00:16:19,740 --> 00:16:29,410
then find Z and C naught by solving

00:16:27,340 --> 00:16:31,450
these two equations at the bottom right

00:16:29,410 --> 00:16:32,650
so you so instead of stepping through it

00:16:31,450 --> 00:16:34,900
in order like you're supposed to and

00:16:32,650 --> 00:16:36,400
answering your challenge you start with

00:16:34,900 --> 00:16:40,150
the bits that you have to commit to and

00:16:36,400 --> 00:16:42,190
then you make the verification equations

00:16:40,150 --> 00:16:46,600
true after the fact by fiddling with

00:16:42,190 --> 00:16:47,890
those things that are still free so it

00:16:46,600 --> 00:16:50,950
just so happens that my vineyard

00:16:47,890 --> 00:16:52,660
colleague Olivier Pierrot had written

00:16:50,950 --> 00:16:54,340
had boring made this mistake himself in

00:16:52,660 --> 00:16:56,320
his own verifiable voting system and

00:16:54,340 --> 00:16:58,900
already written a paper a few years

00:16:56,320 --> 00:17:00,400
previously about how bad it was and what

00:16:58,900 --> 00:17:03,130
its implications were in how easy it was

00:17:00,400 --> 00:17:07,150
to cheat so it didn't take him very long

00:17:03,130 --> 00:17:10,690
to do the math for this one so the

00:17:07,150 --> 00:17:15,310
implication is just to summarize in that

00:17:10,690 --> 00:17:18,010
picture that I showed you the cheating

00:17:15,310 --> 00:17:20,380
if some if a malevolent party controls

00:17:18,010 --> 00:17:23,919
that mixing and decryption process

00:17:20,380 --> 00:17:27,130
they can turn a valid vote from a real

00:17:23,919 --> 00:17:28,360
citizen into nonsense that you know

00:17:27,130 --> 00:17:30,070
doesn't doesn't make any meaningful

00:17:28,360 --> 00:17:32,020
phone they don't have total freedom over

00:17:30,070 --> 00:17:33,370
what vote to turn it into because

00:17:32,020 --> 00:17:35,200
there's actually kind of only two

00:17:33,370 --> 00:17:37,690
degrees of freedom and two free things

00:17:35,200 --> 00:17:41,169
in that set of equations that we saw but

00:17:37,690 --> 00:17:42,880
they can make it into some nonsense that

00:17:41,169 --> 00:17:44,890
doesn't correspond to a real vote and

00:17:42,880 --> 00:17:46,049
still provide a proof that it seemed to

00:17:44,890 --> 00:17:48,820
be okay

00:17:46,049 --> 00:17:52,440
so it took took us a few days to do it

00:17:48,820 --> 00:17:54,370
took us days to compile their code

00:17:52,440 --> 00:17:55,870
couple of days to do the mass in a

00:17:54,370 --> 00:17:57,970
couple of more days once we got the

00:17:55,870 --> 00:17:59,950
other thing compiling to kind of code up

00:17:57,970 --> 00:18:02,770
the exploit and check that it passed

00:17:59,950 --> 00:18:04,150
their little verification test now

00:18:02,770 --> 00:18:05,710
informally it'll be obvious that

00:18:04,150 --> 00:18:07,390
something had gone wrong because like I

00:18:05,710 --> 00:18:14,070
said the votes are nonsense rather than

00:18:07,390 --> 00:18:17,380
being evaluated for something else so

00:18:14,070 --> 00:18:20,640
I'm gonna end the section on if you like

00:18:17,380 --> 00:18:23,289
idealized into in verifiable elections

00:18:20,640 --> 00:18:25,809
by just summarizing some of the good

00:18:23,289 --> 00:18:28,030
things in the bad things so on the one

00:18:25,809 --> 00:18:30,159
hand this is a really cool technology in

00:18:28,030 --> 00:18:32,169
a genuine into and verifiable system

00:18:30,159 --> 00:18:34,539
like the Helios voting system is useful

00:18:32,169 --> 00:18:36,280
in all kinds of things the International

00:18:34,539 --> 00:18:38,260
Association of Cryptologic researchers

00:18:36,280 --> 00:18:40,090
uses a system a bit like this we've

00:18:38,260 --> 00:18:42,510
proof that are not broken

00:18:40,090 --> 00:18:45,520
for our our board elections for example

00:18:42,510 --> 00:18:46,960
but if we were to think about using

00:18:45,520 --> 00:18:50,159
something like this for real government

00:18:46,960 --> 00:18:53,740
elections there are some serious

00:18:50,159 --> 00:18:57,010
concerns and limitations the first thing

00:18:53,740 --> 00:19:01,600
is that ordinary users really need to do

00:18:57,010 --> 00:19:03,520
some quite complicated work to verify

00:19:01,600 --> 00:19:06,280
for themselves that their votes are

00:19:03,520 --> 00:19:07,780
properly encoded and really we don't

00:19:06,280 --> 00:19:08,950
know how to do this I think it's G Vyas

00:19:07,780 --> 00:19:10,360
that we whether we know how to do this

00:19:08,950 --> 00:19:11,620
for first-past-the-post elections we

00:19:10,360 --> 00:19:14,770
definitely don't know how to do this

00:19:11,620 --> 00:19:17,530
well for preferential voting complicated

00:19:14,770 --> 00:19:18,960
votes like we have and if we don't do it

00:19:17,530 --> 00:19:22,570
properly then there's the risk that

00:19:18,960 --> 00:19:24,490
users can be tricked by malware on the

00:19:22,570 --> 00:19:27,250
computer or people that are pushing them

00:19:24,490 --> 00:19:29,380
around to vote in a way that doesn't

00:19:27,250 --> 00:19:30,880
reflect their intentions so that's a

00:19:29,380 --> 00:19:33,030
serious problem it's really not a soft

00:19:30,880 --> 00:19:39,070
problem at all

00:19:33,030 --> 00:19:41,200
most online systems give the user

00:19:39,070 --> 00:19:42,970
unfortunately the capacity to prove how

00:19:41,200 --> 00:19:45,490
they voted they don't necessarily reveal

00:19:42,970 --> 00:19:46,750
the vote but if you feel your client

00:19:45,490 --> 00:19:49,090
carefully and keep the randomness that

00:19:46,750 --> 00:19:50,710
you use to make your encrypted blob you

00:19:49,090 --> 00:19:51,880
can often prove how you voted that's a

00:19:50,710 --> 00:19:53,830
characteristic of Helios

00:19:51,880 --> 00:19:55,350
for example it's not a characteristic of

00:19:53,830 --> 00:19:57,429
all such systems and in particular

00:19:55,350 --> 00:19:58,870
systems where you make you go into a

00:19:57,429 --> 00:20:00,220
polling place and make your vote on a

00:19:58,870 --> 00:20:01,960
computer in the polling place don't

00:20:00,220 --> 00:20:04,929
always have that property but it's

00:20:01,960 --> 00:20:06,549
certainly a thing to worry about you've

00:20:04,929 --> 00:20:09,400
probably noticed that actually

00:20:06,549 --> 00:20:11,010
understanding the verification actually

00:20:09,400 --> 00:20:14,110
understanding how to verify the proofs

00:20:11,010 --> 00:20:15,400
requires significant expertise which may

00:20:14,110 --> 00:20:18,070
or may not be acceptable in a democracy

00:20:15,400 --> 00:20:21,190
and the final point which i think is

00:20:18,070 --> 00:20:23,440
pretty obvious is that subtle bugs can

00:20:21,190 --> 00:20:25,630
totally undermine all of the security

00:20:23,440 --> 00:20:26,860
properties of the whole system and again

00:20:25,630 --> 00:20:28,480
that's a little bit different from the

00:20:26,860 --> 00:20:31,600
occasional problems that happen in

00:20:28,480 --> 00:20:33,929
paper-based systems because you don't as

00:20:31,600 --> 00:20:36,700
a result of one little subtle problem

00:20:33,929 --> 00:20:38,290
handover a capacity for total

00:20:36,700 --> 00:20:42,130
manipulation of all of the votes to one

00:20:38,290 --> 00:20:43,720
entity so in summary I think there are

00:20:42,130 --> 00:20:45,549
some reasonable ways of doing electronic

00:20:43,720 --> 00:20:46,990
voting in a polling place and anyone who

00:20:45,549 --> 00:20:48,010
wants to come and talk to me about that

00:20:46,990 --> 00:20:51,610
throughout the rest of the day is very

00:20:48,010 --> 00:20:54,610
welcome but we just don't know how to do

00:20:51,610 --> 00:20:58,419
remote electronic voting properly in a

00:20:54,610 --> 00:21:02,380
way that really safeguards the election

00:20:58,419 --> 00:21:05,710
against manipulation on software bugs so

00:21:02,380 --> 00:21:08,660
that's that's the good news this is the

00:21:05,710 --> 00:21:11,500
most optimistic kind of a talk

00:21:08,660 --> 00:21:18,380
what does all that have to do with ivett

00:21:11,500 --> 00:21:20,450
well really not a lot remember in two

00:21:18,380 --> 00:21:23,090
and idealized in two and verifiable

00:21:20,450 --> 00:21:25,370
voting system let's think about drawing

00:21:23,090 --> 00:21:27,740
a picture like that so I vote so the

00:21:25,370 --> 00:21:29,600
first step was voters got to make an

00:21:27,740 --> 00:21:31,850
encrypted vote and they got to use

00:21:29,600 --> 00:21:33,680
software under their control to check

00:21:31,850 --> 00:21:38,380
the maths and make sure their vote had

00:21:33,680 --> 00:21:38,380
been properly recorded as they requested

00:21:38,410 --> 00:21:45,500
actually in I vote voters use a you know

00:21:43,340 --> 00:21:48,920
some some JavaScript from social in

00:21:45,500 --> 00:21:52,670
their web browser to vote I found

00:21:48,920 --> 00:21:55,940
company by the way and then if they want

00:21:52,670 --> 00:21:58,790
to verify they use a different closed

00:21:55,940 --> 00:22:01,700
source app from the same company to ask

00:21:58,790 --> 00:22:03,470
them whether or not their vote was

00:22:01,700 --> 00:22:07,370
probably recorded it was close the

00:22:03,470 --> 00:22:08,840
source of election time so there's kind

00:22:07,370 --> 00:22:10,220
of this sort of basic logical problem

00:22:08,840 --> 00:22:11,900
right on the one hand you're trusting

00:22:10,220 --> 00:22:13,940
some code from a certain company to

00:22:11,900 --> 00:22:15,680
record your vote correctly and if you

00:22:13,940 --> 00:22:17,030
don't necessarily trust them then you

00:22:15,680 --> 00:22:22,610
get to ask them nicely whether they

00:22:17,030 --> 00:22:24,560
recorded your vote correctly after the

00:22:22,610 --> 00:22:26,390
election some of the code was made

00:22:24,560 --> 00:22:28,070
available under a reasonable NDA but at

00:22:26,390 --> 00:22:29,240
the time of the election you know you

00:22:28,070 --> 00:22:32,680
didn't even know where the app was doing

00:22:29,240 --> 00:22:37,550
on your behalf so let's update that

00:22:32,680 --> 00:22:39,080
let's update our picture in the

00:22:37,550 --> 00:22:42,170
beginning voters queries and closed

00:22:39,080 --> 00:22:44,240
source software to ask it whether it

00:22:42,170 --> 00:22:46,100
recorded their vote correctly or not so

00:22:44,240 --> 00:22:47,150
they don't get any proof of honest vote

00:22:46,100 --> 00:22:49,940
recording at all

00:22:47,150 --> 00:22:53,560
at best they get to query something that

00:22:49,940 --> 00:22:55,640
they can't really examine for themselves

00:22:53,560 --> 00:22:56,900
but at least they must have had a public

00:22:55,640 --> 00:22:58,670
bulletin board right so at least you can

00:22:56,900 --> 00:23:01,700
check that a vote actually went in there

00:22:58,670 --> 00:23:04,280
for you well actually no they have a

00:23:01,700 --> 00:23:06,140
secret bulletin board so there's sort of

00:23:04,280 --> 00:23:07,460
some list of accepted votes that gets

00:23:06,140 --> 00:23:09,560
passed around within the Electoral

00:23:07,460 --> 00:23:11,630
Commission but ordinary citizens can't

00:23:09,560 --> 00:23:15,950
check that their vote went in there

00:23:11,630 --> 00:23:17,840
properly now remember we said we needed

00:23:15,950 --> 00:23:20,420
a series of independently administered

00:23:17,840 --> 00:23:21,630
mixed service because we were protecting

00:23:20,420 --> 00:23:23,730
privacy by

00:23:21,630 --> 00:23:28,170
assuming that they didn't all collude

00:23:23,730 --> 00:23:30,210
together to reconstruct the pathway of

00:23:28,170 --> 00:23:33,540
where one person's vote went in and got

00:23:30,210 --> 00:23:38,640
decrypted actually I vote has one mixed

00:23:33,540 --> 00:23:40,710
server so you know if you get to read

00:23:38,640 --> 00:23:43,260
information from the mixed server you

00:23:40,710 --> 00:23:45,110
can see exactly how every incoming

00:23:43,260 --> 00:23:49,710
encrypted vote corresponds to the

00:23:45,110 --> 00:23:53,220
subsequent decrypted book so it's not

00:23:49,710 --> 00:23:54,870
anything approaching even the ideal kind

00:23:53,220 --> 00:23:57,000
of verifiable election system that I

00:23:54,870 --> 00:24:00,990
already argued was probably not adequate

00:23:57,000 --> 00:24:02,070
for running a real election and if you

00:24:00,990 --> 00:24:04,170
were listening carefully you might have

00:24:02,070 --> 00:24:06,180
noticed that it happens to be provided

00:24:04,170 --> 00:24:07,830
by exactly the same provider whose code

00:24:06,180 --> 00:24:11,720
we were already having a good look at in

00:24:07,830 --> 00:24:11,720
the context of this was a voting system

00:24:12,740 --> 00:24:17,250
it turned out and I was actually quite

00:24:15,690 --> 00:24:19,800
surprised by this because they've never

00:24:17,250 --> 00:24:21,660
had any kind of proofs of though they

00:24:19,800 --> 00:24:24,600
never had any kind of proof of anything

00:24:21,660 --> 00:24:26,730
but it turned out when the information

00:24:24,600 --> 00:24:30,650
about the first bug that we found in the

00:24:26,730 --> 00:24:33,000
proof of shuffle when that went public

00:24:30,650 --> 00:24:35,820
the Electoral Commission put out an

00:24:33,000 --> 00:24:39,180
announcement saying well actually it

00:24:35,820 --> 00:24:41,700
affected us as well now the Swiss had

00:24:39,180 --> 00:24:42,960
made their code available six months in

00:24:41,700 --> 00:24:44,970
advance of the election who were

00:24:42,960 --> 00:24:47,910
intending to run with it so that they

00:24:44,970 --> 00:24:51,360
could get some open examination of its

00:24:47,910 --> 00:24:52,830
security properties before six months

00:24:51,360 --> 00:24:56,310
before election time you know plenty of

00:24:52,830 --> 00:24:57,510
time to understand in patch the New

00:24:56,310 --> 00:25:00,300
South Wales Electoral Commission was

00:24:57,510 --> 00:25:01,650
already using it for early voting so you

00:25:00,300 --> 00:25:04,440
can I hope you can see the dates from

00:25:01,650 --> 00:25:06,360
back there this is March 13th Election

00:25:04,440 --> 00:25:07,620
Day and the decryption was March 23rd

00:25:06,360 --> 00:25:09,360
and early voting in New South Wales

00:25:07,620 --> 00:25:11,190
starts two weeks beforehand so they're

00:25:09,360 --> 00:25:13,110
already receiving votes on this system

00:25:11,190 --> 00:25:14,700
they put out a press release which I

00:25:13,110 --> 00:25:17,490
think Justin Henry just summarized

00:25:14,700 --> 00:25:22,530
beautiful here yes we do have that

00:25:17,490 --> 00:25:26,210
critical title crypto defect but don't

00:25:22,530 --> 00:25:26,210
worry we're gonna use it anyway

00:25:28,570 --> 00:25:35,850
it got patched and they put up this is

00:25:33,340 --> 00:25:37,990
press release which says look this is a

00:25:35,850 --> 00:25:40,660
you know this is an incredibly difficult

00:25:37,990 --> 00:25:43,870
bug to exploit you it would be

00:25:40,660 --> 00:25:45,910
incredibly hard to get access nobody

00:25:43,870 --> 00:25:47,800
could possibly get access to our loading

00:25:45,910 --> 00:25:50,110
server during our election it's so

00:25:47,800 --> 00:25:53,170
carefully secured we're really careful

00:25:50,110 --> 00:25:55,510
about luck how'd we run and we're going

00:25:53,170 --> 00:26:02,050
to install a new slight or patch any day

00:25:55,510 --> 00:26:03,520
now now that was the first bug we found

00:26:02,050 --> 00:26:05,650
what about that second bug we found that

00:26:03,520 --> 00:26:07,630
I showed you earlier in the process

00:26:05,650 --> 00:26:08,950
remembering that now we realize that

00:26:07,630 --> 00:26:11,380
they're running basically the same

00:26:08,950 --> 00:26:12,820
mixing and decryption code did that bug

00:26:11,380 --> 00:26:15,640
in the decryption proofs that I just

00:26:12,820 --> 00:26:19,930
showed you which we found out about a

00:26:15,640 --> 00:26:23,580
few days like a week or two after this

00:26:19,930 --> 00:26:25,690
announcement did that affect them to

00:26:23,580 --> 00:26:27,760
remember at the time the code for this

00:26:25,690 --> 00:26:29,560
system is not available except under a

00:26:27,760 --> 00:26:33,040
very restrictive in DEA that we didn't

00:26:29,560 --> 00:26:37,270
sign so we didn't know when we found the

00:26:33,040 --> 00:26:39,820
second bug this is the 22nd of March day

00:26:37,270 --> 00:26:43,240
before Election Day they put out this

00:26:39,820 --> 00:26:45,910
press release saying the Electoral

00:26:43,240 --> 00:26:48,490
Commission is confident that the new

00:26:45,910 --> 00:26:52,660
issue is not relevant to the iPhone

00:26:48,490 --> 00:26:54,010
system this was highly implausible at

00:26:52,660 --> 00:26:55,570
the time right I could have very well

00:26:54,010 --> 00:26:57,160
believed that they weren't running any

00:26:55,570 --> 00:26:59,320
of the site or mixing and decryption

00:26:57,160 --> 00:27:00,670
stuff that Swiss posted been running and

00:26:59,320 --> 00:27:03,670
I could very well have believed that

00:27:00,670 --> 00:27:05,920
neither bug was relevant either but it

00:27:03,670 --> 00:27:07,150
was highly implausible that the first

00:27:05,920 --> 00:27:09,310
one was relevant cuz they were running

00:27:07,150 --> 00:27:10,690
basically the same code but the second

00:27:09,310 --> 00:27:13,420
bug in exactly the same codebase

00:27:10,690 --> 00:27:15,100
was not relevant but we didn't know

00:27:13,420 --> 00:27:20,410
because we didn't have any access to the

00:27:15,100 --> 00:27:21,490
code in advance of the election if you

00:27:20,410 --> 00:27:23,530
wanted to have a look at the code you

00:27:21,490 --> 00:27:24,970
had to sign an NDA that promised not to

00:27:23,530 --> 00:27:30,250
disclose anything about your findings

00:27:24,970 --> 00:27:32,800
for five years which I did not sign four

00:27:30,250 --> 00:27:34,390
months after the election it was made

00:27:32,800 --> 00:27:36,340
available so like a middle of middle of

00:27:34,390 --> 00:27:39,710
last year it was made available on much

00:27:36,340 --> 00:27:43,010
better tips with a 45 day with a 45 day

00:27:39,710 --> 00:27:47,660
quiet period so I signed up and had a

00:27:43,010 --> 00:27:51,070
look now one theme that I want to bring

00:27:47,660 --> 00:27:53,350
out through this talk is that laws about

00:27:51,070 --> 00:27:56,150
election software really matter

00:27:53,350 --> 00:27:58,490
Switzerland has very good laws New South

00:27:56,150 --> 00:28:02,360
Wales has very bad horse have a quick

00:27:58,490 --> 00:28:03,680
look at this one so this is this is

00:28:02,360 --> 00:28:06,710
basically all of the security

00:28:03,680 --> 00:28:08,810
requirements for electronic voting the

00:28:06,710 --> 00:28:10,790
first one says not that the system has

00:28:08,810 --> 00:28:12,140
to protect about privacy but that if you

00:28:10,790 --> 00:28:13,160
find out that it doesn't protect about

00:28:12,140 --> 00:28:15,980
privacy you're not allowed to tell

00:28:13,160 --> 00:28:18,890
anyone the second one says not that the

00:28:15,980 --> 00:28:20,420
system has to be secure but that if you

00:28:18,890 --> 00:28:22,100
tell anybody anything about the source

00:28:20,420 --> 00:28:23,390
code without asking if the Electoral

00:28:22,100 --> 00:28:27,710
Commission of first you can go to jail

00:28:23,390 --> 00:28:29,600
for two years so there's no law that

00:28:27,710 --> 00:28:31,670
says anything about transparency and

00:28:29,600 --> 00:28:33,200
openness this isn't a small sample of an

00:28:31,670 --> 00:28:36,020
otherwise along a decent set of

00:28:33,200 --> 00:28:38,750
legislation mandating transparent and

00:28:36,020 --> 00:28:40,910
secure electoral processes this is what

00:28:38,750 --> 00:28:42,230
substitutes for legislation mandating

00:28:40,910 --> 00:28:47,060
secure and transparent electoral

00:28:42,230 --> 00:28:50,120
processes guess what actually the

00:28:47,060 --> 00:28:51,650
decription proof spoke was relevant this

00:28:50,120 --> 00:28:53,210
is just a little snippet from the note

00:28:51,650 --> 00:28:55,640
that I read if you are real glutton for

00:28:53,210 --> 00:28:57,260
punishment you can follow that little

00:28:55,640 --> 00:28:58,790
link down there and see and I'm saying

00:28:57,260 --> 00:29:00,020
the notation is slightly different from

00:28:58,790 --> 00:29:02,900
this thing I showed you a few minutes

00:29:00,020 --> 00:29:07,010
ago but remember that the crucial fix

00:29:02,900 --> 00:29:08,810
was they had to have seen not so the

00:29:07,010 --> 00:29:11,360
previous broken version didn't have seen

00:29:08,810 --> 00:29:15,740
not easy simple fixes all I have to do

00:29:11,360 --> 00:29:19,850
is hash see not what did they do well I

00:29:15,740 --> 00:29:22,160
don't understand why but for some weird

00:29:19,850 --> 00:29:23,900
reason instead of just doing the obvious

00:29:22,160 --> 00:29:30,080
simple straightforward thing in hashing

00:29:23,900 --> 00:29:33,020
C naught they made up a random value s1

00:29:30,080 --> 00:29:36,110
here and they has to C naught to the

00:29:33,020 --> 00:29:39,680
power of this one I didn't even

00:29:36,110 --> 00:29:42,170
understand why now at this point it is

00:29:39,680 --> 00:29:44,420
clearly not the case that it was not

00:29:42,170 --> 00:29:47,180
relevant right though somebody's patched

00:29:44,420 --> 00:29:48,530
this they just haven't done it I just

00:29:47,180 --> 00:29:50,320
haven't applied the simple and obvious

00:29:48,530 --> 00:29:52,630
patch that we recommend it

00:29:50,320 --> 00:29:55,840
secondly I'm kind of staring at this for

00:29:52,630 --> 00:29:58,240
a while thinking does that fix the

00:29:55,840 --> 00:30:02,649
problem it doesn't seem like it fixes

00:29:58,240 --> 00:30:04,330
the problem and actually it's quite easy

00:30:02,649 --> 00:30:06,820
to see why it doesn't fix the problem

00:30:04,330 --> 00:30:08,919
now this is all modular arithmetic mod a

00:30:06,820 --> 00:30:09,970
prime but the reason that it doesn't fix

00:30:08,919 --> 00:30:11,970
the problem is actually quite

00:30:09,970 --> 00:30:14,320
understandable from ordinary arithmetic

00:30:11,970 --> 00:30:16,240
the whole point of hashing it here is

00:30:14,320 --> 00:30:17,649
supposed to commit me to a value of C

00:30:16,240 --> 00:30:20,259
naught right you're not supposed to be

00:30:17,649 --> 00:30:22,529
able to do the thing and then make up

00:30:20,259 --> 00:30:24,879
your value of C naught after the fact

00:30:22,529 --> 00:30:28,809
but committing to C naught to the power

00:30:24,879 --> 00:30:30,580
of some random value that you also

00:30:28,809 --> 00:30:31,899
haven't committed to doesn't actually

00:30:30,580 --> 00:30:33,100
commit you to a value of C naught right

00:30:31,899 --> 00:30:36,009
you know even in ordinary arithmetic

00:30:33,100 --> 00:30:38,019
that 2 to the power of 6 is the same as

00:30:36,009 --> 00:30:39,940
8 to the power of 2 is the same as 4 to

00:30:38,019 --> 00:30:41,470
the power of 3 that kind of thing is

00:30:39,940 --> 00:30:43,960
true in fact it's even more true in

00:30:41,470 --> 00:30:47,500
arithmetic modulo a prime so you can

00:30:43,960 --> 00:30:49,629
commit to C naught to the power of s1 do

00:30:47,500 --> 00:30:51,399
the thing get to the bottom and then

00:30:49,629 --> 00:30:53,950
decide exactly what values have C naught

00:30:51,399 --> 00:30:55,570
and s 1 you want after the fact so it is

00:30:53,950 --> 00:30:58,330
relevant and the way they fixed it

00:30:55,570 --> 00:31:01,960
doesn't fix it that went down really

00:30:58,330 --> 00:31:03,629
well obviously if the code had been

00:31:01,960 --> 00:31:07,269
openly available it election time

00:31:03,629 --> 00:31:09,309
instead of 4 months afterwards we could

00:31:07,269 --> 00:31:11,559
have done the to net spot check that it

00:31:09,309 --> 00:31:14,679
took to see whether or not they patched

00:31:11,559 --> 00:31:16,690
it properly at election time and then

00:31:14,679 --> 00:31:18,970
they could have run a non broken version

00:31:16,690 --> 00:31:20,470
at the actual state election time as it

00:31:18,970 --> 00:31:24,210
was we didn't find out about it until

00:31:20,470 --> 00:31:27,759
four months afterwards so they ran the

00:31:24,210 --> 00:31:31,000
manipulable decryption proof during the

00:31:27,759 --> 00:31:32,980
election because they've chosen not to

00:31:31,000 --> 00:31:34,750
make it openly available to scrutiny by

00:31:32,980 --> 00:31:36,370
people who knew what they were doing and

00:31:34,750 --> 00:31:38,169
it's not a hard fix right it's a simple

00:31:36,370 --> 00:31:41,830
fix it would have been simple to check

00:31:38,169 --> 00:31:44,139
that they'd fix the project so what can

00:31:41,830 --> 00:31:47,940
you do what can you do look for yourself

00:31:44,139 --> 00:31:52,929
right I if you're willing to sign a 45

00:31:47,940 --> 00:31:54,940
days silence NDA which is you know in my

00:31:52,929 --> 00:31:57,220
opinion not too shocking you can have a

00:31:54,940 --> 00:31:59,169
look yourself so I only spent 5 minutes

00:31:57,220 --> 00:32:01,570
looking at the particular thing that

00:31:59,169 --> 00:32:02,650
we'd already found there's heaps and

00:32:01,570 --> 00:32:04,000
heaps of code there

00:32:02,650 --> 00:32:05,980
you might have all kinds of valuable

00:32:04,000 --> 00:32:07,690
expertise in all kinds of other areas

00:32:05,980 --> 00:32:10,090
that I don't know anything about and

00:32:07,690 --> 00:32:11,290
didn't look at have a look if they're

00:32:10,090 --> 00:32:14,950
going to use it again you might as well

00:32:11,290 --> 00:32:16,810
find bugs and get them fixed and thus

00:32:14,950 --> 00:32:19,210
rose the standard very slightly above

00:32:16,810 --> 00:32:21,520
what it is now and even better if you

00:32:19,210 --> 00:32:23,260
have a look at it you'll be able to make

00:32:21,520 --> 00:32:25,390
some informed judgments for your own

00:32:23,260 --> 00:32:27,520
recommendations to your own Parliament

00:32:25,390 --> 00:32:29,620
or people about whether or not this is a

00:32:27,520 --> 00:32:33,340
good thing to use so that's what you can

00:32:29,620 --> 00:32:41,650
do number one okay so who's in New South

00:32:33,340 --> 00:32:48,810
Wales anybody who's I vote okay

00:32:41,650 --> 00:32:53,950
here swing Victoria feeling smug because

00:32:48,810 --> 00:32:56,980
I'm from Victoria take in Victoria at

00:32:53,950 --> 00:32:58,600
the very end of last year a bill passed

00:32:56,980 --> 00:33:01,810
the lower half of our Legislative

00:32:58,600 --> 00:33:03,340
Assembly saying for local government

00:33:01,810 --> 00:33:07,420
elections right not for state elections

00:33:03,340 --> 00:33:10,480
obviously that the minister from now on

00:33:07,420 --> 00:33:12,640
gets to choose the voting system for

00:33:10,480 --> 00:33:16,180
universal use in all local government

00:33:12,640 --> 00:33:19,360
elections and the Minister can choose

00:33:16,180 --> 00:33:22,090
either postal voting which comes with a

00:33:19,360 --> 00:33:23,620
you know few pages worth of carefully

00:33:22,090 --> 00:33:25,420
written regulations about security and

00:33:23,620 --> 00:33:28,930
privacy and proper process and so forth

00:33:25,420 --> 00:33:33,820
or attendance voting which comes with an

00:33:28,930 --> 00:33:35,860
even older set of strong requirements

00:33:33,820 --> 00:33:37,780
about good electoral process dating way

00:33:35,860 --> 00:33:40,890
back to the 1850s when we introduced the

00:33:37,780 --> 00:33:40,890
secret ballot for the first time

00:33:41,010 --> 00:33:47,680
anything else he feels like with no

00:33:42,790 --> 00:33:49,390
restrictions whatsoever so it's clear

00:33:47,680 --> 00:33:50,800
what the agenda is here right nobody is

00:33:49,390 --> 00:33:54,430
seriously proposing that we're going to

00:33:50,800 --> 00:33:56,890
go and vote with bronze discs or little

00:33:54,430 --> 00:33:58,810
shards of pottery it's clearly intended

00:33:56,890 --> 00:34:00,370
to facilitate large-scale totally

00:33:58,810 --> 00:34:03,040
unregulated electronic voting

00:34:00,370 --> 00:34:04,480
compulsorily for everybody at every

00:34:03,040 --> 00:34:08,169
local government election in Victoria

00:34:04,480 --> 00:34:11,500
from now on and it's coming before the

00:34:08,169 --> 00:34:14,350
Legislative Assembly in February so if

00:34:11,500 --> 00:34:15,770
you're in Victoria I in fact you've got

00:34:14,350 --> 00:34:17,869
another 15 minutes

00:34:15,770 --> 00:34:19,460
stay here in this letter Sarah find out

00:34:17,869 --> 00:34:21,470
who you're a member of the legislative

00:34:19,460 --> 00:34:23,149
councils your members of the Legislative

00:34:21,470 --> 00:34:25,340
Council are you should have five and

00:34:23,149 --> 00:34:27,139
email more and tell them to get rid of

00:34:25,340 --> 00:34:29,690
this because this is a disgrace

00:34:27,139 --> 00:34:33,080
and once we lose the capacity to do

00:34:29,690 --> 00:34:34,340
genuine democratic elections in local

00:34:33,080 --> 00:34:37,730
government in Victoria we're never going

00:34:34,340 --> 00:34:39,740
to get it back we don't know for sure

00:34:37,730 --> 00:34:41,090
that they're going to use I vote but

00:34:39,740 --> 00:34:42,440
it's a fair guess that they're probably

00:34:41,090 --> 00:34:44,570
going to a given that the electoral

00:34:42,440 --> 00:34:47,600
Commissioner recently wrote a long

00:34:44,570 --> 00:34:48,860
heartfelt opinion piece about how

00:34:47,600 --> 00:34:52,639
wonderful it was and how it had proven

00:34:48,860 --> 00:34:53,929
how secure it was but even if they use

00:34:52,639 --> 00:34:55,340
something else it's also going to be bad

00:34:53,929 --> 00:34:59,619
right there isn't a good solution at

00:34:55,340 --> 00:35:03,520
this point for remote voting anyway so

00:34:59,619 --> 00:35:05,750
even if there was doing it without any

00:35:03,520 --> 00:35:08,840
legislative minimal standards of any

00:35:05,750 --> 00:35:12,170
kind would be utterly irresponsible so

00:35:08,840 --> 00:35:14,750
at an absolute minimum if they insist

00:35:12,170 --> 00:35:18,230
upon doing this they should be writing

00:35:14,750 --> 00:35:19,850
some standards and minimal things about

00:35:18,230 --> 00:35:21,980
privacy and verification into the

00:35:19,850 --> 00:35:22,550
legislation if they're not even going to

00:35:21,980 --> 00:35:24,619
do that

00:35:22,550 --> 00:35:26,810
I firmly believe the whole thing should

00:35:24,619 --> 00:35:28,220
be scratched but don't take my word for

00:35:26,810 --> 00:35:29,450
it log in and have a look at the I vote

00:35:28,220 --> 00:35:33,280
source code and then write whatever

00:35:29,450 --> 00:35:33,280
email you watch to your and I'll say

00:35:33,880 --> 00:35:41,080
okay so that ends the first half of my

00:35:38,619 --> 00:35:45,740
lecture which is all about electronic

00:35:41,080 --> 00:35:49,490
voting the second half is going to be

00:35:45,740 --> 00:35:53,570
all about electronic counting of paper

00:35:49,490 --> 00:35:55,790
records now this in some ways is an

00:35:53,570 --> 00:36:00,170
easier problem actually in every way

00:35:55,790 --> 00:36:02,240
this is an easier problem because if

00:36:00,170 --> 00:36:05,119
we've got a bunch of paper ballots that

00:36:02,240 --> 00:36:09,140
were filled in by real voters we've sort

00:36:05,119 --> 00:36:11,390
of got a basis of evidence assuming that

00:36:09,140 --> 00:36:14,000
those paper records have been properly

00:36:11,390 --> 00:36:15,500
secured and appropriately scrutinized on

00:36:14,000 --> 00:36:18,410
their way into the ballot box and so

00:36:15,500 --> 00:36:20,480
forth which is a big assumption but you

00:36:18,410 --> 00:36:22,310
know at least it's an observable

00:36:20,480 --> 00:36:24,940
assumption based on Australian

00:36:22,310 --> 00:36:28,400
scrutineering law

00:36:24,940 --> 00:36:32,360
an American scrutineering la flama de if

00:36:28,400 --> 00:36:35,660
we've got a basis of paper ballots then

00:36:32,360 --> 00:36:38,300
an electronic counting system may or may

00:36:35,660 --> 00:36:43,640
not be trustworthy or secure but has the

00:36:38,300 --> 00:36:46,070
capacity to be double-checked and this

00:36:43,640 --> 00:36:49,370
is the thing in the United States it's a

00:36:46,070 --> 00:36:50,960
big thing those constituencies that have

00:36:49,370 --> 00:36:53,210
all those local governments rather that

00:36:50,960 --> 00:36:57,980
have paper records that are

00:36:53,210 --> 00:37:00,200
electronically counted often do serious

00:36:57,980 --> 00:37:02,030
statistical audits of those paper

00:37:00,200 --> 00:37:04,790
records in order to check that the

00:37:02,030 --> 00:37:06,380
electronic count was okay those

00:37:04,790 --> 00:37:07,610
constituents that don't have paper

00:37:06,380 --> 00:37:09,890
records of the votes are another

00:37:07,610 --> 00:37:13,580
question that is unfortunately outside

00:37:09,890 --> 00:37:16,030
the scope of today's talk but there's a

00:37:13,580 --> 00:37:18,560
lot of sophisticated technical methods

00:37:16,030 --> 00:37:20,870
sophisticated statistics for trying to

00:37:18,560 --> 00:37:26,170
understand exactly what kind of auditing

00:37:20,870 --> 00:37:29,690
you should do in order to gain genuine

00:37:26,170 --> 00:37:30,980
statistically sound confidence think you

00:37:29,690 --> 00:37:33,770
got the right answer instead of being

00:37:30,980 --> 00:37:39,110
tricked by a bug or a piece of malware

00:37:33,770 --> 00:37:41,690
in the counting software the the best

00:37:39,110 --> 00:37:43,880
method in my humble opinion has been

00:37:41,690 --> 00:37:45,290
pioneered by a berkeley professor called

00:37:43,880 --> 00:37:47,810
philip stark and it's called risk

00:37:45,290 --> 00:37:49,670
limiting audits and the idea of this is

00:37:47,810 --> 00:37:52,900
you start the very beginning of the

00:37:49,670 --> 00:37:55,280
election you decide for yourself what

00:37:52,900 --> 00:38:00,050
probability of being tricked

00:37:55,280 --> 00:38:01,100
you're willing to live with because if

00:38:00,050 --> 00:38:02,120
you're doing random sampling there's

00:38:01,100 --> 00:38:03,170
also something there's always some

00:38:02,120 --> 00:38:05,390
probability they're going to be tricked

00:38:03,170 --> 00:38:09,710
right but at least you should know what

00:38:05,390 --> 00:38:11,540
it is and then there's a bunch of clever

00:38:09,710 --> 00:38:14,540
statistics papers by Philip and his

00:38:11,540 --> 00:38:16,430
colleagues explaining exactly how to do

00:38:14,540 --> 00:38:17,990
the audit and compute relevant

00:38:16,430 --> 00:38:21,260
statistics so that you can guarantee

00:38:17,990 --> 00:38:23,420
that if you were tricked into accepting

00:38:21,260 --> 00:38:24,710
a wrong election outcome you would have

00:38:23,420 --> 00:38:28,220
discovered that trick with high

00:38:24,710 --> 00:38:30,170
probability or as you run your process

00:38:28,220 --> 00:38:31,880
you get suspicious and you can't confirm

00:38:30,170 --> 00:38:34,730
the election outcome then you just do a

00:38:31,880 --> 00:38:36,260
full hand count so this is fine this is

00:38:34,730 --> 00:38:37,400
a thing in America they do it in

00:38:36,260 --> 00:38:38,600
Colorado they written Keller

00:38:37,400 --> 00:38:42,650
for Nia and a bunch of other states

00:38:38,600 --> 00:38:44,840
Rhode Island and so forth however they

00:38:42,650 --> 00:38:47,660
have this really weird primitive voting

00:38:44,840 --> 00:38:50,000
system all you do is choose one

00:38:47,660 --> 00:38:53,380
candidate out of a list of multiple

00:38:50,000 --> 00:38:55,640
candidates and then the audit is just

00:38:53,380 --> 00:38:57,080
counting the audit is just double

00:38:55,640 --> 00:39:01,960
checking which candidate got the highest

00:38:57,080 --> 00:39:06,290
tally right except a small number of

00:39:01,960 --> 00:39:08,530
weirdo progressive counties do this

00:39:06,290 --> 00:39:13,850
thing they call Instant Runoff voting

00:39:08,530 --> 00:39:15,770
which in Australia is called voting and

00:39:13,850 --> 00:39:17,120
they're starting to get into this weird

00:39:15,770 --> 00:39:18,380
idea that you could have a first

00:39:17,120 --> 00:39:20,420
preference and then a second preference

00:39:18,380 --> 00:39:21,920
and then some other preferences and you

00:39:20,420 --> 00:39:26,330
could tell you up the votes by

00:39:21,920 --> 00:39:29,510
elimination except and it's a great it's

00:39:26,330 --> 00:39:32,660
a great system right but it breaks the

00:39:29,510 --> 00:39:37,790
risk limiting audit statistics that

00:39:32,660 --> 00:39:42,440
they're so proud of putting in place so

00:39:37,790 --> 00:39:44,660
we had a project this is joint work with

00:39:42,440 --> 00:39:46,490
Michelle Blum and Henry Conway and Peter

00:39:44,660 --> 00:39:48,470
Stuckey and Philip stock and a bunch of

00:39:46,490 --> 00:39:52,010
people at the San Francisco elections

00:39:48,470 --> 00:39:55,700
department we had a project trying to

00:39:52,010 --> 00:39:59,450
combine our Australian understanding of

00:39:55,700 --> 00:40:02,900
how preferential elections work with

00:39:59,450 --> 00:40:06,830
Philips tax work on how to do risk

00:40:02,900 --> 00:40:11,060
limiting audits and we ran this as a

00:40:06,830 --> 00:40:12,950
pilot in the most recent San Francisco

00:40:11,060 --> 00:40:14,390
elections in November so Americans have

00:40:12,950 --> 00:40:15,590
elections in November even if there's no

00:40:14,390 --> 00:40:17,510
presidential election right now it

00:40:15,590 --> 00:40:18,800
doesn't tinge the news doesn't tend to

00:40:17,510 --> 00:40:19,880
come all the way out to Australia but

00:40:18,800 --> 00:40:21,230
they're always doing something in this

00:40:19,880 --> 00:40:23,900
case they were voting for a bunch of

00:40:21,230 --> 00:40:25,760
local races like Mir and district

00:40:23,900 --> 00:40:27,290
attorney and a bunch of other stuff and

00:40:25,760 --> 00:40:31,550
they were voting for District Attorney

00:40:27,290 --> 00:40:34,670
by Instant Runoff voting so had four

00:40:31,550 --> 00:40:36,740
candidates and it actually turned out to

00:40:34,670 --> 00:40:39,110
be a really close race because there

00:40:36,740 --> 00:40:41,420
were two very politically different

00:40:39,110 --> 00:40:43,970
candidates for district attorney it was

00:40:41,420 --> 00:40:47,099
quite a hard-fought battle and the end

00:40:43,970 --> 00:40:51,210
result was a really close so we decided

00:40:47,099 --> 00:40:55,019
that we'd try and pilot our risk

00:40:51,210 --> 00:40:56,579
limiting audit software on that race now

00:40:55,019 --> 00:41:00,720
there are some important technical

00:40:56,579 --> 00:41:02,339
details here first of all the reasons

00:41:00,720 --> 00:41:03,119
that you can come and ask me about if

00:41:02,339 --> 00:41:06,229
you really care

00:41:03,119 --> 00:41:08,519
we only got access to the postal votes

00:41:06,229 --> 00:41:09,630
not to the votes that had been cast in

00:41:08,519 --> 00:41:11,309
the precinct which turned out to me

00:41:09,630 --> 00:41:12,539
about two-thirds of the votes so this is

00:41:11,309 --> 00:41:14,039
really just this is not actually

00:41:12,539 --> 00:41:15,599
providing any evidence for this

00:41:14,039 --> 00:41:17,910
particular election that this particular

00:41:15,599 --> 00:41:21,150
election outcome was right it's just a

00:41:17,910 --> 00:41:23,489
pilot to give everybody an idea of how

00:41:21,150 --> 00:41:26,720
this kind of clever stuff could work so

00:41:23,489 --> 00:41:29,099
we're just looking at the postal votes

00:41:26,720 --> 00:41:31,680
it just happened in this particular

00:41:29,099 --> 00:41:33,809
election that the winner according to

00:41:31,680 --> 00:41:36,210
the postal votes was the opposite of the

00:41:33,809 --> 00:41:37,769
winner if you counted the whole thing

00:41:36,210 --> 00:41:39,119
because the people who voted in polling

00:41:37,769 --> 00:41:40,529
places in San Francisco voted

00:41:39,119 --> 00:41:41,519
overwhelmingly for the other guy but

00:41:40,529 --> 00:41:43,019
never mind

00:41:41,519 --> 00:41:44,819
that doesn't really affect the mess nor

00:41:43,019 --> 00:41:47,039
does it really affect principle of how

00:41:44,819 --> 00:41:53,549
the thing in its ideal form should work

00:41:47,039 --> 00:41:58,400
so again the key concept here is an idea

00:41:53,549 --> 00:42:02,960
of completely open publicly available

00:41:58,400 --> 00:42:06,239
verification and auditing tools the

00:42:02,960 --> 00:42:08,640
actual vote counting system which is a

00:42:06,239 --> 00:42:11,309
sort of scanning you know take a paper

00:42:08,640 --> 00:42:15,269
ballot scanner digitize it and count it

00:42:11,309 --> 00:42:17,219
system is a proprietary system from a

00:42:15,269 --> 00:42:19,589
company called Dominion whom I would not

00:42:17,219 --> 00:42:20,549
trust any more than I trust cycle no

00:42:19,589 --> 00:42:24,210
opportunities you should look at that

00:42:20,549 --> 00:42:26,400
code we're just but we get to look at

00:42:24,210 --> 00:42:28,140
its answers right so we get at the

00:42:26,400 --> 00:42:31,140
beginning of the audit we have this list

00:42:28,140 --> 00:42:35,519
that says you know the seventh speller

00:42:31,140 --> 00:42:38,219
in bag 52 is has this list of

00:42:35,519 --> 00:42:40,799
preferences and the eighth ballot in bag

00:42:38,219 --> 00:42:43,969
whatever has this list of preferences so

00:42:40,799 --> 00:42:47,759
what we do is we make a random selection

00:42:43,969 --> 00:42:49,289
from the an advertised list of

00:42:47,759 --> 00:42:51,930
supposedly correct to detect

00:42:49,289 --> 00:42:54,539
digitization and then we go in fetch

00:42:51,930 --> 00:42:56,579
each one of the paper ballots and we

00:42:54,539 --> 00:42:58,950
check we keep a tally of the

00:42:56,579 --> 00:42:59,800
discrepancies between what Dominion told

00:42:58,950 --> 00:43:01,990
us

00:42:59,800 --> 00:43:06,310
the ballot said and what the paper

00:43:01,990 --> 00:43:08,320
record actually shows so we need to do

00:43:06,310 --> 00:43:09,790
two things or two different sets of

00:43:08,320 --> 00:43:11,560
maths here which I will not inflict on

00:43:09,790 --> 00:43:19,050
you because you know it's nearly morning

00:43:11,560 --> 00:43:22,690
tea time what is a very careful analysis

00:43:19,050 --> 00:43:25,650
of which parts of the preferential

00:43:22,690 --> 00:43:28,390
election are important because you know

00:43:25,650 --> 00:43:30,550
if we're doing a whole lot of

00:43:28,390 --> 00:43:34,440
eliminations and redistributions that

00:43:30,550 --> 00:43:37,750
sometimes one of the early comparisons

00:43:34,440 --> 00:43:40,330
really matters right sometimes if you

00:43:37,750 --> 00:43:42,970
flip the elimination order early in the

00:43:40,330 --> 00:43:46,150
process that cascades into a completely

00:43:42,970 --> 00:43:48,400
different winner but usually it doesn't

00:43:46,150 --> 00:43:51,400
usually actually don't have to care and

00:43:48,400 --> 00:43:53,110
usually you can just count it either way

00:43:51,400 --> 00:43:56,200
and eliminate all the little people

00:43:53,110 --> 00:43:58,570
first and pay attention to the end so

00:43:56,200 --> 00:44:01,810
the tool that we developed with Michelle

00:43:58,570 --> 00:44:03,510
Blum and Peter Stuckey does a very

00:44:01,810 --> 00:44:07,540
careful analysis of this particular

00:44:03,510 --> 00:44:09,340
election and kicks which of those

00:44:07,540 --> 00:44:13,390
comparisons you really need to care

00:44:09,340 --> 00:44:14,950
about and ignores the rest so that's the

00:44:13,390 --> 00:44:17,440
first thing and then the second thing is

00:44:14,950 --> 00:44:19,150
now we've done this careful analysis of

00:44:17,440 --> 00:44:20,500
which comparisons you really have to

00:44:19,150 --> 00:44:24,970
check carefully in which ones you don't

00:44:20,500 --> 00:44:28,530
we can then use some software by Phillip

00:44:24,970 --> 00:44:32,770
Stark to do the careful statistics for

00:44:28,530 --> 00:44:39,220
eliminating the possibility that the

00:44:32,770 --> 00:44:41,470
comparison was made wrongly so you can't

00:44:39,220 --> 00:44:42,880
go and watch that particular election

00:44:41,470 --> 00:44:45,400
audit although the citizens caught I

00:44:42,880 --> 00:44:46,930
should have said so the people standing

00:44:45,400 --> 00:44:49,090
here and pointing are officials but the

00:44:46,930 --> 00:44:50,440
people who are a little bit blurry on

00:44:49,090 --> 00:44:51,790
the left are just a bunch of citizens

00:44:50,440 --> 00:44:54,370
who felt like showing up citizens are

00:44:51,790 --> 00:44:55,960
allowed to shop and you can see exactly

00:44:54,370 --> 00:44:58,600
you can see the process for generating

00:44:55,960 --> 00:45:01,270
the random sequence of balance you can

00:44:58,600 --> 00:45:03,910
see exactly what ballots are fished out

00:45:01,270 --> 00:45:06,570
you can see the Dominions claim about

00:45:03,910 --> 00:45:09,580
what that ballot was supposed to be and

00:45:06,570 --> 00:45:12,760
you can get the code for doing all of

00:45:09,580 --> 00:45:13,130
the analysis and statistical testing

00:45:12,760 --> 00:45:16,490
you're

00:45:13,130 --> 00:45:17,900
if you want so in practice is quite

00:45:16,490 --> 00:45:20,930
complicated and it's been hard to see

00:45:17,900 --> 00:45:24,050
and so on but in principle its touch

00:45:20,930 --> 00:45:27,470
that auditing process is totally open to

00:45:24,050 --> 00:45:29,870
anybody who wants to completely redoing

00:45:27,470 --> 00:45:32,630
the whole analysis themselves with code

00:45:29,870 --> 00:45:34,550
that's openly available you can you can

00:45:32,630 --> 00:45:35,870
even think up some cleverest statistical

00:45:34,550 --> 00:45:37,400
tests or some different statistical

00:45:35,870 --> 00:45:40,250
tests if you want or you can check other

00:45:37,400 --> 00:45:42,650
facts if you want and again what you can

00:45:40,250 --> 00:45:45,970
do is try it yourself

00:45:42,650 --> 00:45:48,620
so the the first link is full of the

00:45:45,970 --> 00:45:50,420
preferential voting analyzer from

00:45:48,620 --> 00:45:52,070
Australia and the second link is for the

00:45:50,420 --> 00:45:59,380
nifty statistics for actually testing

00:45:52,070 --> 00:46:00,950
effects okay so we see this structure

00:45:59,380 --> 00:46:03,020
completely different structure from

00:46:00,950 --> 00:46:05,150
electronic voting right but very similar

00:46:03,020 --> 00:46:08,390
kind of philosophy about how to check it

00:46:05,150 --> 00:46:11,740
the thing isn't necessarily very open

00:46:08,390 --> 00:46:15,680
but there is a completely open

00:46:11,740 --> 00:46:17,480
possibility for citizens to check every

00:46:15,680 --> 00:46:21,620
step of the actual data for this

00:46:17,480 --> 00:46:22,820
particular election what does this have

00:46:21,620 --> 00:46:25,520
to do with the Australian Senate count

00:46:22,820 --> 00:46:32,330
you've probably already guessed not a

00:46:25,520 --> 00:46:35,240
lot this is a transcript from the only

00:46:32,330 --> 00:46:36,710
hearing so far of the federal Joint

00:46:35,240 --> 00:46:38,960
Standing Committee on electoral matters

00:46:36,710 --> 00:46:40,820
senator Larissa waters is asking the

00:46:38,960 --> 00:46:44,180
Australian Electoral Commission err Tom

00:46:40,820 --> 00:46:48,110
Rogers about the integrity of the Senate

00:46:44,180 --> 00:46:50,240
count she starts off by saying dear did

00:46:48,110 --> 00:46:52,850
the AEC attempt to ensure the quality of

00:46:50,240 --> 00:46:54,740
its data entry by manually checking the

00:46:52,850 --> 00:46:56,360
preferences recorded in ballots XML

00:46:54,740 --> 00:47:00,020
files against the physical bellator

00:46:56,360 --> 00:47:03,470
images of them if so what proportion

00:47:00,020 --> 00:47:06,140
which hit and who did that checking not

00:47:03,470 --> 00:47:07,490
a hard question mr. Rodgers isn't quite

00:47:06,140 --> 00:47:09,320
sure he's going to take that one notice

00:47:07,490 --> 00:47:14,780
he's not sure whether there was any

00:47:09,320 --> 00:47:17,060
attempt to check preferences out of the

00:47:14,780 --> 00:47:20,900
closed source software from Fuji Xerox

00:47:17,060 --> 00:47:23,390
and SCYTL against the physical ballots

00:47:20,900 --> 00:47:26,909
that Australian voters filled it

00:47:23,390 --> 00:47:31,979
so sensual waters continues on undaunted

00:47:26,909 --> 00:47:35,489
she says I came was there an estimate of

00:47:31,979 --> 00:47:38,549
the error rate of data entry for the

00:47:35,489 --> 00:47:40,079
Senate scanning solution and she's she's

00:47:38,549 --> 00:47:41,669
not brave enough to ask what that error

00:47:40,079 --> 00:47:44,159
estimate was she just asks whether there

00:47:41,669 --> 00:47:48,199
was one the Electoral Commission account

00:47:44,159 --> 00:47:51,979
remember he's not sure about finally

00:47:48,199 --> 00:47:54,719
she's a very brave woman she says okay

00:47:51,979 --> 00:47:56,549
the last time we did this right the last

00:47:54,719 --> 00:47:58,529
time there was a parliamentary inquiry

00:47:56,549 --> 00:48:01,380
and the previous election we recommended

00:47:58,529 --> 00:48:04,019
that an independent impartial expert

00:48:01,380 --> 00:48:06,029
scrutineer be appointed for each state

00:48:04,019 --> 00:48:08,579
and territory did you do that and all of

00:48:06,029 --> 00:48:10,229
a sudden mr. Rogers memory is you know

00:48:08,579 --> 00:48:13,259
right on the ball he remembers exactly

00:48:10,229 --> 00:48:16,109
why the very idea of independent

00:48:13,259 --> 00:48:17,759
impartial expert scrutiny implies that a

00:48:16,109 --> 00:48:19,259
senator what is just you know she just

00:48:17,759 --> 00:48:20,880
missed conceived the role of that AAA

00:48:19,259 --> 00:48:23,309
see she doesn't really understand what

00:48:20,880 --> 00:48:25,559
what they really need but before he

00:48:23,309 --> 00:48:26,789
launches into a long explanation of why

00:48:25,559 --> 00:48:28,289
it's just a mistake to even think about

00:48:26,789 --> 00:48:30,269
such an independent impartial scrutiny

00:48:28,289 --> 00:48:33,119
which unfortunately didn't fit up maybe

00:48:30,269 --> 00:48:35,579
fortunately didn't fit on my side he

00:48:33,119 --> 00:48:37,890
says well first of all it was a

00:48:35,579 --> 00:48:40,919
recommendation only it wasn't actually

00:48:37,890 --> 00:48:44,130
mandated and then he goes on to say they

00:48:40,919 --> 00:48:46,709
didn't do it now I actually think this

00:48:44,130 --> 00:48:50,579
is a little bit of truth that is really

00:48:46,709 --> 00:48:53,159
important for the question that I that I

00:48:50,579 --> 00:48:55,939
think we need to answer right it was a

00:48:53,159 --> 00:49:02,219
recommendation only it wasn't mandated

00:48:55,939 --> 00:49:04,079
so we didn't do it and I'm guessing but

00:49:02,219 --> 00:49:05,279
one possible guess is that that's

00:49:04,079 --> 00:49:07,939
actually the true answer for the

00:49:05,279 --> 00:49:14,249
previous two or three questions as well

00:49:07,939 --> 00:49:17,880
so what can we do well I've now looked

00:49:14,249 --> 00:49:20,659
at not only election systems but

00:49:17,880 --> 00:49:24,089
electrum regulations and legislation in

00:49:20,659 --> 00:49:26,659
Switzerland California New South Wales

00:49:24,089 --> 00:49:26,659
Victoria

00:49:28,470 --> 00:49:33,329
the Swiss internet learning regulations

00:49:30,990 --> 00:49:35,490
are really really good they're detailed

00:49:33,329 --> 00:49:37,859
the thorah there are answers around

00:49:35,490 --> 00:49:40,050
privacy of individual votes transparency

00:49:37,859 --> 00:49:41,640
of the process publication of the source

00:49:40,050 --> 00:49:43,730
code and so forth they're not perfect

00:49:41,640 --> 00:49:45,720
but they're really good

00:49:43,730 --> 00:49:51,210
Switzerland found out about their

00:49:45,720 --> 00:50:00,150
problems as soon as they forced the

00:49:51,210 --> 00:50:01,800
source code to be open New South Wales

00:50:00,150 --> 00:50:06,060
found about that problem found out about

00:50:01,800 --> 00:50:08,430
their problems 12 days before Election

00:50:06,060 --> 00:50:09,240
Day when it was just not feasible to

00:50:08,430 --> 00:50:15,319
patch it properly and they obviously

00:50:09,240 --> 00:50:19,140
didn't patch a problem California has

00:50:15,319 --> 00:50:21,450
again not perfect but pretty decent laws

00:50:19,140 --> 00:50:23,460
about election auditing you have to

00:50:21,450 --> 00:50:25,890
either conductor I think it's a 1%

00:50:23,460 --> 00:50:28,319
manual telly or a rigorous risk limiting

00:50:25,890 --> 00:50:32,310
orders and this is mandated by

00:50:28,319 --> 00:50:34,560
California law Australian Senate

00:50:32,310 --> 00:50:36,900
scrutineering rules just haven't been

00:50:34,560 --> 00:50:38,310
updated since back in the old days when

00:50:36,900 --> 00:50:41,940
they counted the long paper which was a

00:50:38,310 --> 00:50:45,569
long time ago and at best what they say

00:50:41,940 --> 00:50:48,869
is roughly that the Electoral Commission

00:50:45,569 --> 00:50:50,040
has to allow scrutineers to stand in the

00:50:48,869 --> 00:50:52,770
room while they do their thing on their

00:50:50,040 --> 00:50:54,510
computers which really doesn't say

00:50:52,770 --> 00:50:56,250
anything about providing meaningful

00:50:54,510 --> 00:50:59,430
evidence that what the computers are

00:50:56,250 --> 00:51:02,339
doing is correct so it seems to me that

00:50:59,430 --> 00:51:05,339
in the case of the Senate count there's

00:51:02,339 --> 00:51:07,650
a really really simple solution we don't

00:51:05,339 --> 00:51:09,720
have to write the perfect law we just

00:51:07,650 --> 00:51:13,140
have to write something that says there

00:51:09,720 --> 00:51:16,470
must be a meaningful statistical order

00:51:13,140 --> 00:51:18,510
of the paper ballots against the public

00:51:16,470 --> 00:51:20,220
list of digitization of digitized

00:51:18,510 --> 00:51:22,050
preferences that comes out of whatever

00:51:20,220 --> 00:51:25,109
Fuji Xerox and social software they use

00:51:22,050 --> 00:51:27,750
to derive it and that even if the

00:51:25,109 --> 00:51:30,000
process of deriving it isn't a public

00:51:27,750 --> 00:51:31,950
and you know they fought long and hard

00:51:30,000 --> 00:51:35,670
to keep the source code of that system

00:51:31,950 --> 00:51:38,099
secret as long as the process of

00:51:35,670 --> 00:51:40,650
auditing is openly available to genuine

00:51:38,099 --> 00:51:41,339
scrutineering then we should be able to

00:51:40,650 --> 00:51:44,999
get some

00:51:41,339 --> 00:51:47,460
kind of evidence that the Senate outcome

00:51:44,999 --> 00:51:48,690
they announce is correct and they're not

00:51:47,460 --> 00:51:51,059
going to do it without being forced

00:51:48,690 --> 00:51:58,529
right so it has to be mandated in

00:51:51,059 --> 00:52:00,119
legislation so here's my little summary

00:51:58,529 --> 00:52:05,219
of the state of Australian election

00:52:00,119 --> 00:52:07,589
software there are reasonable solutions

00:52:05,219 --> 00:52:10,049
for electronically assistant voting in a

00:52:07,589 --> 00:52:11,219
polling place which I don't really

00:52:10,049 --> 00:52:13,999
talked about very much but they exist

00:52:11,219 --> 00:52:16,140
there's plenty of sensible things to do

00:52:13,999 --> 00:52:17,190
we just shouldn't be doing it over the

00:52:16,140 --> 00:52:19,319
internet because we don't know how to do

00:52:17,190 --> 00:52:21,839
it properly it's just too easy to fiddle

00:52:19,319 --> 00:52:24,599
the results and even if the standard of

00:52:21,839 --> 00:52:26,430
I vote was substantially improved up to

00:52:24,599 --> 00:52:27,599
something approximating that ideal

00:52:26,430 --> 00:52:30,390
standard that I outlined at the

00:52:27,599 --> 00:52:32,160
beginning we still don't really know how

00:52:30,390 --> 00:52:33,749
to make sure that ordinary voters can

00:52:32,160 --> 00:52:37,920
verify that the vote that's going in

00:52:33,749 --> 00:52:40,859
accurately reflects their intentions so

00:52:37,920 --> 00:52:45,239
we should just stop or not start as the

00:52:40,859 --> 00:52:48,450
case may be the Senate count is also I

00:52:45,239 --> 00:52:51,839
think a serious risk for undetectable

00:52:48,450 --> 00:52:54,749
electoral fraud particularly with those

00:52:51,839 --> 00:52:56,190
last few seats that get allocated after

00:52:54,749 --> 00:52:57,479
lots and lots of preference shifting has

00:52:56,190 --> 00:53:00,299
gone along because there's no

00:52:57,479 --> 00:53:02,729
independent count like there is for the

00:53:00,299 --> 00:53:04,200
first few seats you kind of get an idea

00:53:02,729 --> 00:53:05,819
from based on counts in the polling

00:53:04,200 --> 00:53:07,410
place of how many first preferences go

00:53:05,819 --> 00:53:08,869
to the major parties and I think it

00:53:07,410 --> 00:53:11,279
would be hard to fiddle that very much

00:53:08,869 --> 00:53:14,009
but I think mother-tongue we're talking

00:53:11,279 --> 00:53:16,109
about the half a dozen seats in any

00:53:14,009 --> 00:53:17,640
given election that go down to lots and

00:53:16,109 --> 00:53:19,369
lots and lots of preference passing and

00:53:17,640 --> 00:53:22,170
are quite hard to predict in advance

00:53:19,369 --> 00:53:24,710
that's really a risk that is totally

00:53:22,170 --> 00:53:27,469
dependent on this completely obscure

00:53:24,710 --> 00:53:29,729
foreign designed and implemented

00:53:27,469 --> 00:53:32,729
software and we really don't know what's

00:53:29,729 --> 00:53:34,529
going on however we're in a much better

00:53:32,729 --> 00:53:37,049
position than we are for internet voting

00:53:34,529 --> 00:53:39,749
because we've got the paper records of

00:53:37,049 --> 00:53:42,210
how Australians really budget so all we

00:53:39,749 --> 00:53:44,339
have to do is a rigorous statistical

00:53:42,210 --> 00:53:46,259
audit in the presence of scrutineers

00:53:44,339 --> 00:53:49,200
with meaningful opportunity to actually

00:53:46,259 --> 00:53:51,770
double-check the numbers and make sure

00:53:49,200 --> 00:53:56,270
that that electronic results accurately

00:53:51,770 --> 00:54:02,300
the paper ballots okay so in my last

00:53:56,270 --> 00:54:05,780
five minutes I want to end on a slightly

00:54:02,300 --> 00:54:08,480
update note even though it's pretty

00:54:05,780 --> 00:54:10,190
scary I'm thinking about a new project

00:54:08,480 --> 00:54:13,640
right I don't necessarily want to spend

00:54:10,190 --> 00:54:15,460
all of 2020 picking holes in bad

00:54:13,640 --> 00:54:18,080
software written by other people so

00:54:15,460 --> 00:54:21,830
here's one suggestion for a new thing

00:54:18,080 --> 00:54:25,010
that we could build democracy is a lot

00:54:21,830 --> 00:54:30,160
more than just elections and anybody who

00:54:25,010 --> 00:54:33,830
well I always got quite engaged in the

00:54:30,160 --> 00:54:35,990
shocking train wreck that was our anti

00:54:33,830 --> 00:54:38,030
encryption laws that passed at the end

00:54:35,990 --> 00:54:39,290
of the year before last a whole lot of

00:54:38,030 --> 00:54:41,150
intelligent people spent a whole lot of

00:54:39,290 --> 00:54:43,100
time trying to persuade various members

00:54:41,150 --> 00:54:44,780
of parliament not to do it or at the

00:54:43,100 --> 00:54:49,310
very least to amend it in some way

00:54:44,780 --> 00:54:50,750
before they did it which is a process I

00:54:49,310 --> 00:54:56,540
never want to have anything to do we get

00:54:50,750 --> 00:54:59,570
either again but the part is actually

00:54:56,540 --> 00:55:03,170
quite open about its bills and proposals

00:54:59,570 --> 00:55:05,060
on legislation right you can get you can

00:55:03,170 --> 00:55:07,850
get the text of just about any bill

00:55:05,060 --> 00:55:09,470
that's proposed it's available under

00:55:07,850 --> 00:55:11,210
Creative Commons there are already a

00:55:09,470 --> 00:55:13,340
bunch of really good organizations like

00:55:11,210 --> 00:55:16,250
the open Australia people and

00:55:13,340 --> 00:55:19,970
right-to-know that put up this

00:55:16,250 --> 00:55:24,760
legislation what if we had some kind of

00:55:19,970 --> 00:55:27,500
nice little cryptographic voting and

00:55:24,760 --> 00:55:30,080
open source amendment scheme that let

00:55:27,500 --> 00:55:32,360
people make suggestions for editing

00:55:30,080 --> 00:55:35,090
legislation vote up or vote down other

00:55:32,360 --> 00:55:36,770
people's amendments maybe make some

00:55:35,090 --> 00:55:39,410
suggestions for questions in Senate

00:55:36,770 --> 00:55:42,080
estimates or just actively participate a

00:55:39,410 --> 00:55:46,340
little bit more as input into this

00:55:42,080 --> 00:55:47,810
process rather than writing 50,000

00:55:46,340 --> 00:55:49,870
different submissions to successive

00:55:47,810 --> 00:55:52,490
inquiries that ignore what we're at I

00:55:49,870 --> 00:55:55,390
also kind of like the idea of putting up

00:55:52,490 --> 00:55:58,310
a version that lets teenagers practice

00:55:55,390 --> 00:56:00,140
debating online right if you're not from

00:55:58,310 --> 00:56:04,080
Melbourne you may or may not have been

00:56:00,140 --> 00:56:06,180
subjected to the formal

00:56:04,080 --> 00:56:10,170
parlimentary kind of debating thing that

00:56:06,180 --> 00:56:12,540
we make teenage children do we make them

00:56:10,170 --> 00:56:14,400
take a political issue and have this

00:56:12,540 --> 00:56:16,800
sort of back and forwards between

00:56:14,400 --> 00:56:18,740
different private schools about whatever

00:56:16,800 --> 00:56:20,520
euthanasia or an abortion or whatever

00:56:18,740 --> 00:56:22,710
but we're just tell them to stay off

00:56:20,520 --> 00:56:23,850
Twitter until they're 18 and then they

00:56:22,710 --> 00:56:27,390
just go on Twitter without any practice

00:56:23,850 --> 00:56:29,730
we could use a system like this to give

00:56:27,390 --> 00:56:32,210
them some practice about participating

00:56:29,730 --> 00:56:34,800
in democracy in an electronic way and

00:56:32,210 --> 00:56:37,440
crypto can do a good job of protecting

00:56:34,800 --> 00:56:39,810
people's privacy while also aggregating

00:56:37,440 --> 00:56:43,500
their opinions and proving that they

00:56:39,810 --> 00:56:44,880
were truthfully aggregated so I'd like

00:56:43,500 --> 00:56:45,900
to do something like this I'm going to

00:56:44,880 --> 00:56:47,280
be hanging around for the rest of the

00:56:45,900 --> 00:56:49,560
day and anybody is welcome to come and

00:56:47,280 --> 00:56:50,640
either tell me that this is a bad idea

00:56:49,560 --> 00:56:52,860
or I tell me that you've got a better

00:56:50,640 --> 00:56:55,350
idea or refine this idea or something

00:56:52,860 --> 00:56:57,180
the total lack of a secure Australian

00:56:55,350 --> 00:57:00,690
digital ID makes it hard right it's

00:56:57,180 --> 00:57:03,990
going to be hard to trust any kind of

00:57:00,690 --> 00:57:05,820
aggregation that is built on not really

00:57:03,990 --> 00:57:09,210
knowing who we're talking to but I think

00:57:05,820 --> 00:57:10,620
we just have to accept that it's not

00:57:09,210 --> 00:57:14,460
going to be perfect but maybe it could

00:57:10,620 --> 00:57:17,670
be okay alright I am now done questions

00:57:14,460 --> 00:57:18,720
are welcome if there's time or questions

00:57:17,670 --> 00:57:21,290
are welcome throughout the rest of the

00:57:18,720 --> 00:57:21,290
day I'll be here

00:57:31,720 --> 00:57:36,500
thank you very much Vanessa we are out

00:57:34,250 --> 00:57:40,580
of time because Monti is being served

00:57:36,500 --> 00:57:42,320
now but first a small gift for us to you

00:57:40,580 --> 00:57:44,920
thank you very much for presenting and

00:57:42,320 --> 00:57:48,459
thanks for the early morning maths

00:57:44,920 --> 00:57:48,459

YouTube URL: https://www.youtube.com/watch?v=xfpy5c3thQo


