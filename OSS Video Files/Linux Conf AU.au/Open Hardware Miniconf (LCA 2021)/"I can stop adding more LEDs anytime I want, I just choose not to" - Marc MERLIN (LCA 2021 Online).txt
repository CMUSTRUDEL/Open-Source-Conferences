Title: "I can stop adding more LEDs anytime I want, I just choose not to" - Marc MERLIN (LCA 2021 Online)
Publication date: 2021-02-18
Playlist: Open Hardware Miniconf (LCA 2021)
Description: 
	Marc MERLIN

https://lca2021.linux.org.au/schedule/presentation/109/

Learn about the rabbithole of LEDs, how it went from a single tri-color LED on my first OHMC project, to a "it was only there because LEDs are bling" neopixel ring on garduino, to a "few" LEDs on my party shirt, and then shirt and pants, to "it's gotten out of hands",  a 1538 pixels on panels driven by ESP8266, then 12288 pixels driven by ESP32, and now 49152 pxels driven by a raspberry pi. 
Amazingly the last 3 projects, despite using very different hardware, use the same codebase and graphics library I wrote, Framebuffer::GFX.

linux.conf.au is a conference about the Linux operating system, and all aspects of the thriving ecosystem of Free and Open Source Software that has grown up around it. Run since 1999, in a different Australian or New Zealand city each year, by a team of local volunteers, LCA invites more than 500 people to learn from the people who shape the future of Open Source. For more information on the conference see https://linux.conf.au/

Produced by Next Day Video Australia: https://nextdayvideo.com.au

#linux.conf.au #linux #foss #opensource

Sat Jan 23 11:40:00 2021 at Rusty R. Hall
Captions: 
	00:00:10,820 --> 00:00:14,060
[Music]

00:00:15,120 --> 00:00:18,480
welcome back

00:00:16,240 --> 00:00:20,560
next up we have mark merlin a regular

00:00:18,480 --> 00:00:22,880
here at the open hardware mini conf

00:00:20,560 --> 00:00:24,640
he's going to run a pre-recorded

00:00:22,880 --> 00:00:25,439
presentation which will go for about 12

00:00:24,640 --> 00:00:28,320
minutes

00:00:25,439 --> 00:00:29,519
and then take questions at the end so

00:00:28,320 --> 00:00:31,359
any questions that come up

00:00:29,519 --> 00:00:33,360
please put them into the chat and we

00:00:31,359 --> 00:00:36,480
will do those at the end so for now

00:00:33,360 --> 00:00:36,480
here's the presentation

00:00:38,480 --> 00:00:42,320
hello everyone sorry for not being here

00:00:41,280 --> 00:00:44,079
in person

00:00:42,320 --> 00:00:45,920
uh hopefully we'll get to this again

00:00:44,079 --> 00:00:49,280
next year in the meantime

00:00:45,920 --> 00:00:51,120
here's my presentation on how leds got

00:00:49,280 --> 00:00:53,120
out of control and i think the first

00:00:51,120 --> 00:00:55,039
ones are free and then it ends up being

00:00:53,120 --> 00:00:56,960
a very expensive hobby

00:00:55,039 --> 00:00:58,640
so those are all the links you'll want

00:00:56,960 --> 00:01:00,239
uh if you want to look at other projects

00:00:58,640 --> 00:01:01,840
you can go back and rewind

00:01:00,239 --> 00:01:03,920
to this little slide and it will have

00:01:01,840 --> 00:01:06,960
the links to everything else you need

00:01:03,920 --> 00:01:09,920
here specifically is a whole story of

00:01:06,960 --> 00:01:12,880
uh basically this talk in a much longer

00:01:09,920 --> 00:01:15,840
page if you'd like to have details

00:01:12,880 --> 00:01:17,439
so let's start with the first well one

00:01:15,840 --> 00:01:18,640
of the first arduino mini comps which

00:01:17,439 --> 00:01:21,759
had

00:01:18,640 --> 00:01:23,200
a slightly improved board it had

00:01:21,759 --> 00:01:24,880
some shiny thing they had different

00:01:23,200 --> 00:01:26,960
colors on it that you can see on the

00:01:24,880 --> 00:01:30,400
screen and then i had an

00:01:26,960 --> 00:01:32,320
lcd that i wrote a glue driver for

00:01:30,400 --> 00:01:33,520
that one i made a menu for where i could

00:01:32,320 --> 00:01:37,119
actually select

00:01:33,520 --> 00:01:40,640
the color components for the led

00:01:37,119 --> 00:01:44,079
and how quickly would pulse uh using the

00:01:40,640 --> 00:01:46,079
potentiometer here so that was my

00:01:44,079 --> 00:01:48,399
first project as i said the first one is

00:01:46,079 --> 00:01:48,399
free

00:01:48,560 --> 00:01:52,799
i thought well if i get a few more of

00:01:50,159 --> 00:01:54,479
these i get this little guy that was

00:01:52,799 --> 00:01:55,840
super cheap

00:01:54,479 --> 00:01:58,719
the problem is that they didn't have

00:01:55,840 --> 00:02:00,479
enough input to control the led so their

00:01:58,719 --> 00:02:03,040
control line by line

00:02:00,479 --> 00:02:04,719
um line scanning and you could select on

00:02:03,040 --> 00:02:06,560
each row which color

00:02:04,719 --> 00:02:08,000
you want it on or off and by flipping

00:02:06,560 --> 00:02:10,080
the colors very quickly on or off

00:02:08,000 --> 00:02:12,000
you could create color components and i

00:02:10,080 --> 00:02:12,800
wrote a driver for that which it shows

00:02:12,000 --> 00:02:14,800
uh

00:02:12,800 --> 00:02:16,720
is shown in this picture uh that kind of

00:02:14,800 --> 00:02:17,920
burned the christmas but hey it was an

00:02:16,720 --> 00:02:20,560
interesting

00:02:17,920 --> 00:02:22,080
a good little ex experience and actually

00:02:20,560 --> 00:02:22,879
related to what i'm doing now on the

00:02:22,080 --> 00:02:26,560
bigger panels

00:02:22,879 --> 00:02:29,520
that i'm currently using all right so

00:02:26,560 --> 00:02:31,760
this brings us to this project um from a

00:02:29,520 --> 00:02:32,959
later mini conference 2016

00:02:31,760 --> 00:02:35,519
uh that was supposed to take care of

00:02:32,959 --> 00:02:36,239
your plants and see how your dirt uh

00:02:35,519 --> 00:02:39,519
humidity

00:02:36,239 --> 00:02:40,160
temperature and you'd um you dirt to see

00:02:39,519 --> 00:02:43,200
how

00:02:40,160 --> 00:02:43,920
um how much water you were doing it

00:02:43,200 --> 00:02:46,319
seems kind of

00:02:43,920 --> 00:02:47,200
obvious to add a new pixel ring to that

00:02:46,319 --> 00:02:50,080
because

00:02:47,200 --> 00:02:51,760
bling i guess and bling is good right so

00:02:50,080 --> 00:02:54,160
blings make smiles

00:02:51,760 --> 00:02:55,920
um so that was probably my first set of

00:02:54,160 --> 00:02:58,800
neopixels a lot of fun to

00:02:55,920 --> 00:03:00,640
program um i had more fun with newer

00:02:58,800 --> 00:03:04,080
pixels and actually the

00:03:00,640 --> 00:03:07,280
main reason to use that board sorry

00:03:04,080 --> 00:03:08,720
guys and then the following year

00:03:07,280 --> 00:03:10,000
well if you have a lot of pixels

00:03:08,720 --> 00:03:11,360
actually creates a screen and that's

00:03:10,000 --> 00:03:14,720
what that tft is

00:03:11,360 --> 00:03:15,120
um so i got to play with the programming

00:03:14,720 --> 00:03:17,920
that

00:03:15,120 --> 00:03:19,680
made an entire interface but as you'll

00:03:17,920 --> 00:03:21,120
notice there's two more neopixels there

00:03:19,680 --> 00:03:22,080
i guess no matter what you do newer

00:03:21,120 --> 00:03:23,440
pixels end up

00:03:22,080 --> 00:03:26,000
in the projects that you get at the

00:03:23,440 --> 00:03:27,200
minicom so i think the hint was pretty

00:03:26,000 --> 00:03:29,599
clear

00:03:27,200 --> 00:03:31,200
if you have a few more than two you end

00:03:29,599 --> 00:03:32,560
up with a string and if you have string

00:03:31,200 --> 00:03:36,400
you can do

00:03:32,560 --> 00:03:39,599
cool stuff so that's what this is

00:03:36,400 --> 00:03:42,400
i made an outfit that had uh

00:03:39,599 --> 00:03:44,000
three sorry four new pixel strings on

00:03:42,400 --> 00:03:45,599
the arms and legs

00:03:44,000 --> 00:03:47,040
so those are all controllable

00:03:45,599 --> 00:03:48,879
independently and i had

00:03:47,040 --> 00:03:50,799
moving patterns on them and in the

00:03:48,879 --> 00:03:51,599
middle of the shirt was just leds that

00:03:50,799 --> 00:03:52,720
didn't change

00:03:51,599 --> 00:03:54,959
they could change color but they were

00:03:52,720 --> 00:03:56,879
all together um so you can see the

00:03:54,959 --> 00:03:58,799
difference between the neopixels here

00:03:56,879 --> 00:04:00,640
and these guys that are all the same and

00:03:58,799 --> 00:04:01,360
that's all the circuitry that i made for

00:04:00,640 --> 00:04:04,400
that

00:04:01,360 --> 00:04:07,280
so that was back in 2017. um

00:04:04,400 --> 00:04:08,959
that was fun and it kind of got out of

00:04:07,280 --> 00:04:12,239
hand a little bit

00:04:08,959 --> 00:04:14,480
so just uh i guess a little bit over a

00:04:12,239 --> 00:04:16,000
year and a half later

00:04:14,480 --> 00:04:18,479
i had issues with the previous shirt

00:04:16,000 --> 00:04:20,079
where washing it was a problem because

00:04:18,479 --> 00:04:22,560
everything was glued onto it

00:04:20,079 --> 00:04:24,479
and yes so there was a problem i figured

00:04:22,560 --> 00:04:25,919
well what if i make the leds removable

00:04:24,479 --> 00:04:28,240
i should probably put a panel or

00:04:25,919 --> 00:04:31,360
something and by then you can

00:04:28,240 --> 00:04:32,160
you can buy those neopixel panels uh

00:04:31,360 --> 00:04:35,120
there was eight

00:04:32,160 --> 00:04:36,560
times 32 so i had three of them in peril

00:04:35,120 --> 00:04:38,160
and i made a panel to

00:04:36,560 --> 00:04:40,560
go in the front of the shirt in the back

00:04:38,160 --> 00:04:43,600
and of course now i got a matrix of it

00:04:40,560 --> 00:04:44,960
so that was the next version i have so i

00:04:43,600 --> 00:04:46,560
have a whole page that explains kind of

00:04:44,960 --> 00:04:48,960
what i can do with it and

00:04:46,560 --> 00:04:49,759
you know how it was made and built and

00:04:48,960 --> 00:04:52,160
how

00:04:49,759 --> 00:04:52,800
yeah how it goes you can see the pixels

00:04:52,160 --> 00:04:55,280
are actually

00:04:52,800 --> 00:04:56,639
um still reasonably big they're about

00:04:55,280 --> 00:04:59,680
one centimeter

00:04:56,639 --> 00:05:01,440
um the wiring isn't terrible and this

00:04:59,680 --> 00:05:04,720
shows one pixel being replaced

00:05:01,440 --> 00:05:06,320
a pixel that died uh all the pixels are

00:05:04,720 --> 00:05:07,759
in line so one pixel dies everything

00:05:06,320 --> 00:05:09,759
after that stops working

00:05:07,759 --> 00:05:12,400
but even for my bad soldering skills it

00:05:09,759 --> 00:05:15,120
was manageable

00:05:12,400 --> 00:05:16,560
now yeah this happened uh someone who

00:05:15,120 --> 00:05:20,000
hates me gave me

00:05:16,560 --> 00:05:20,800
a 4 000 pixel or a few more than 4

00:05:20,000 --> 00:05:23,039
thousand

00:05:20,800 --> 00:05:24,160
so the obvious thing was to do a 6464

00:05:23,039 --> 00:05:26,720
matrix

00:05:24,160 --> 00:05:29,039
that burned an entire week of my life do

00:05:26,720 --> 00:05:31,919
not do this it's extremely stupid

00:05:29,039 --> 00:05:32,720
um and yeah it was a lot of work to lay

00:05:31,919 --> 00:05:36,800
them all out

00:05:32,720 --> 00:05:36,800
um the output looked like this

00:05:36,960 --> 00:05:40,400
it was very nice and you'll see the next

00:05:38,880 --> 00:05:42,400
version of my uh

00:05:40,400 --> 00:05:43,680
shirt next to it and you can notice

00:05:42,400 --> 00:05:46,800
they're running the same pattern and

00:05:43,680 --> 00:05:50,160
that's kind of the general idea

00:05:46,800 --> 00:05:50,720
so um this is where frame buffer gfx

00:05:50,160 --> 00:05:53,600
came in

00:05:50,720 --> 00:05:55,280
after doing some work with different uh

00:05:53,600 --> 00:05:57,360
pieces of hardware i realized hey i need

00:05:55,280 --> 00:05:59,680
to have a common

00:05:57,360 --> 00:06:02,560
library that controls everything so that

00:05:59,680 --> 00:06:04,880
my code can run everywhere the same

00:06:02,560 --> 00:06:06,080
so you can see you can some really weird

00:06:04,880 --> 00:06:08,960
mappings like this

00:06:06,080 --> 00:06:09,840
would be a user of mine did those are

00:06:08,960 --> 00:06:13,759
using

00:06:09,840 --> 00:06:15,440
uh digits and made with neopixels and

00:06:13,759 --> 00:06:16,479
you did a custom mapping so that you

00:06:15,440 --> 00:06:20,000
could write

00:06:16,479 --> 00:06:21,360
as if it were a temp rectangle of uh

00:06:20,000 --> 00:06:23,360
pixels but it would actually end up in

00:06:21,360 --> 00:06:25,759
the right pixels in the middle using uh

00:06:23,360 --> 00:06:26,720
that mapping the more typical mappings

00:06:25,759 --> 00:06:29,840
are sorry

00:06:26,720 --> 00:06:31,600
um these were the

00:06:29,840 --> 00:06:33,759
you have pre-made matrices like these

00:06:31,600 --> 00:06:34,080
and they're daisy chains but as you can

00:06:33,759 --> 00:06:36,080
see

00:06:34,080 --> 00:06:37,759
now the numbers are not in sequence and

00:06:36,080 --> 00:06:38,400
that's what neometrics does it does a

00:06:37,759 --> 00:06:41,600
mapping

00:06:38,400 --> 00:06:43,520
of pixel you know eight eight and it

00:06:41,600 --> 00:06:46,960
puts in the right place

00:06:43,520 --> 00:06:50,240
since the ordering has to be changed

00:06:46,960 --> 00:06:51,680
um so going back to this library so now

00:06:50,240 --> 00:06:54,160
i have the same code

00:06:51,680 --> 00:06:55,360
and i can be running either on neopixels

00:06:54,160 --> 00:06:58,160
using newer matrix

00:06:55,360 --> 00:06:59,520
or rgb panels are running on top of

00:06:58,160 --> 00:07:01,520
smart matrix

00:06:59,520 --> 00:07:02,960
that was using esp32 you can also do

00:07:01,520 --> 00:07:05,280
that on a tv

00:07:02,960 --> 00:07:06,400
and so i made a glue library that goes

00:07:05,280 --> 00:07:08,960
on top of that

00:07:06,400 --> 00:07:11,440
so that way i can use frame buffer gfx

00:07:08,960 --> 00:07:13,280
on both

00:07:11,440 --> 00:07:15,120
so let me show you a little bit of a

00:07:13,280 --> 00:07:17,520
graph ascii art

00:07:15,120 --> 00:07:19,919
is the best obviously frame buffer gfx

00:07:17,520 --> 00:07:23,520
is basically the frame buffer 24 bits

00:07:19,919 --> 00:07:26,560
per pixel um it

00:07:23,520 --> 00:07:27,840
talks to adafruit gfx underneath uh it

00:07:26,560 --> 00:07:29,680
can emulate

00:07:27,840 --> 00:07:31,520
so it can be compatible with led matrix

00:07:29,680 --> 00:07:33,919
which is a different api

00:07:31,520 --> 00:07:35,599
on top of near neopixels so if you write

00:07:33,919 --> 00:07:37,199
your code for new pixels using any

00:07:35,599 --> 00:07:40,400
matrix you can actually run it on

00:07:37,199 --> 00:07:42,479
everything else that i support

00:07:40,400 --> 00:07:44,080
and there's also the fast led api which

00:07:42,479 --> 00:07:46,160
is supported so this is where cool

00:07:44,080 --> 00:07:47,759
because you can write the fast led codes

00:07:46,160 --> 00:07:49,599
but then by going through frame buffer

00:07:47,759 --> 00:07:53,199
gfx you can run it on anything

00:07:49,599 --> 00:07:54,720
underneath that is not uh neopixels so

00:07:53,199 --> 00:07:57,199
on the top side of course you do have

00:07:54,720 --> 00:08:00,000
neopixels then you have smart matrix

00:07:57,199 --> 00:08:03,440
for rgb panels those are tfts so i wrote

00:08:00,000 --> 00:08:06,319
a blue library to talk to tfts

00:08:03,440 --> 00:08:07,759
underneath i realized hey that would be

00:08:06,319 --> 00:08:09,039
really cool if i could run my code on

00:08:07,759 --> 00:08:10,960
linux because i would

00:08:09,039 --> 00:08:13,120
write it so much quicker i could run the

00:08:10,960 --> 00:08:13,680
gdb i don't have the compiled upload

00:08:13,120 --> 00:08:16,000
cycle

00:08:13,680 --> 00:08:18,879
and just win all around the next reason

00:08:16,000 --> 00:08:20,720
of course was to run on our raspberry pi

00:08:18,879 --> 00:08:22,400
because there's that really good driver

00:08:20,720 --> 00:08:25,120
rpi rgb panel

00:08:22,400 --> 00:08:27,440
um that allows you to run a lot more rgb

00:08:25,120 --> 00:08:32,080
panels quicker than you can do with a

00:08:27,440 --> 00:08:34,159
smaller chip um like uh team z

00:08:32,080 --> 00:08:35,519
all right so i'll go quickly so this is

00:08:34,159 --> 00:08:39,680
basically uh

00:08:35,519 --> 00:08:43,039
my shirt running rgb panels

00:08:39,680 --> 00:08:44,560
running a higher resolution that's 64.96

00:08:43,039 --> 00:08:46,320
and yeah if you go back to those pieces

00:08:44,560 --> 00:08:48,720
you'll get a video that shows you

00:08:46,320 --> 00:08:49,839
uh all the patterns running on it i have

00:08:48,720 --> 00:08:52,320
to go quickly

00:08:49,839 --> 00:08:54,160
so now this is the exact same size in

00:08:52,320 --> 00:08:56,640
rgb panels the pixels that used to be

00:08:54,160 --> 00:09:00,720
four millimeter are mergers two

00:08:56,640 --> 00:09:02,320
and this is uh 128 times 64 per panel

00:09:00,720 --> 00:09:04,480
and you can see here there's our

00:09:02,320 --> 00:09:06,800
raspberry pi with a

00:09:04,480 --> 00:09:08,160
electro dragon board on top and it has

00:09:06,800 --> 00:09:10,640
three different channels

00:09:08,160 --> 00:09:11,519
so it's running those uh panels in

00:09:10,640 --> 00:09:13,360
parallel

00:09:11,519 --> 00:09:15,040
for to refresh them at full speed

00:09:13,360 --> 00:09:17,279
because they basically

00:09:15,040 --> 00:09:19,279
um full refresh panels you have to keep

00:09:17,279 --> 00:09:20,880
refreshing the lines over and over again

00:09:19,279 --> 00:09:22,480
and that's how you emulate colors a

00:09:20,880 --> 00:09:25,920
little bit like the first

00:09:22,480 --> 00:09:28,160
eight by matrix that i showed you

00:09:25,920 --> 00:09:30,080
so i wrote again the two library to make

00:09:28,160 --> 00:09:32,399
this work so now i have my already code

00:09:30,080 --> 00:09:33,279
running on top of raspberry pi with no

00:09:32,399 --> 00:09:34,839
rewrite

00:09:33,279 --> 00:09:37,600
on a completely different piece of

00:09:34,839 --> 00:09:40,880
hardware

00:09:37,600 --> 00:09:43,600
then i told you about linux so

00:09:40,880 --> 00:09:45,839
i can definitely run that code on linux

00:09:43,600 --> 00:09:48,000
as shown here

00:09:45,839 --> 00:09:49,600
let's see if i can play it for you there

00:09:48,000 --> 00:09:53,040
we go so

00:09:49,600 --> 00:09:55,279
this is the esp32 running on

00:09:53,040 --> 00:09:56,240
its own rgb panel it is connected to

00:09:55,279 --> 00:09:58,880
linux vr

00:09:56,240 --> 00:10:00,399
usb port and linux is running the same

00:09:58,880 --> 00:10:02,480
code

00:10:00,399 --> 00:10:04,560
but run independently so it's getting

00:10:02,480 --> 00:10:07,680
the command um

00:10:04,560 --> 00:10:09,200
to wi-fi right now from esp32 usb 32

00:10:07,680 --> 00:10:10,320
saying hey i'm running demo number

00:10:09,200 --> 00:10:13,120
whatever

00:10:10,320 --> 00:10:14,959
and then it gets to linux which says oh

00:10:13,120 --> 00:10:17,040
okay i should run the same demo

00:10:14,959 --> 00:10:19,040
and it renders it locally in a

00:10:17,040 --> 00:10:20,320
resolution that's four times as big

00:10:19,040 --> 00:10:23,760
so this is how i was writing and

00:10:20,320 --> 00:10:23,760
debugging the code very quickly

00:10:24,480 --> 00:10:28,800
from here i also made some really big

00:10:27,440 --> 00:10:30,480
panels um

00:10:28,800 --> 00:10:32,720
okay this is starting to get a little

00:10:30,480 --> 00:10:35,360
bit expensive the panels on the left

00:10:32,720 --> 00:10:36,320
were actually free um the ones because

00:10:35,360 --> 00:10:39,600
they were returned

00:10:36,320 --> 00:10:42,240
they were not compatible uh at the time

00:10:39,600 --> 00:10:43,600
but um with the people who bought them

00:10:42,240 --> 00:10:44,880
let me see if i can actually play this

00:10:43,600 --> 00:10:46,640
video

00:10:44,880 --> 00:10:48,800
the play button is being hidden let me

00:10:46,640 --> 00:10:52,320
see click that

00:10:48,800 --> 00:10:54,240
there we go um so the ones that left for

00:10:52,320 --> 00:10:57,279
free the ones on the right are

00:10:54,240 --> 00:11:00,959
64 128 those panels actually

00:10:57,279 --> 00:11:02,560
cost 50 a piece um so if you do the math

00:11:00,959 --> 00:11:04,480
it adds up a little bit

00:11:02,560 --> 00:11:05,839
but look at this isn't that gorgeous

00:11:04,480 --> 00:11:08,880
right

00:11:05,839 --> 00:11:11,360
so this is basically uh what you can do

00:11:08,880 --> 00:11:14,320
when you go bigger

00:11:11,360 --> 00:11:16,480
all right but back to my shirt so the

00:11:14,320 --> 00:11:19,040
idea is you can see on top of the screen

00:11:16,480 --> 00:11:20,880
that was my old panel that was 96.60

00:11:19,040 --> 00:11:24,720
sorry 64.96 the new one

00:11:20,880 --> 00:11:26,399
is now twice as much 128 times 192.

00:11:24,720 --> 00:11:28,079
i say twice it's actually four times the

00:11:26,399 --> 00:11:32,079
number of pixels

00:11:28,079 --> 00:11:34,160
so basically the esp32 is still getting

00:11:32,079 --> 00:11:36,240
the commands of what to do

00:11:34,160 --> 00:11:37,600
and it's rendering now to a panel that

00:11:36,240 --> 00:11:39,920
will not be connected

00:11:37,600 --> 00:11:41,600
it's then connected to the raspberry pi

00:11:39,920 --> 00:11:42,800
and the raspberry pi will be doing its

00:11:41,600 --> 00:11:44,800
own rendering

00:11:42,800 --> 00:11:46,959
um and the resolution that's four times

00:11:44,800 --> 00:11:47,680
bigger so some demos are the same like

00:11:46,959 --> 00:11:49,760
these

00:11:47,680 --> 00:11:51,279
and they're being rendered separately on

00:11:49,760 --> 00:11:54,639
the raspberry pi so this is going to be

00:11:51,279 --> 00:11:54,639
the new shirt i'm going to be wearing

00:11:55,519 --> 00:11:59,600
all right and i think that gives you a

00:11:57,360 --> 00:12:02,320
reasonable idea of what it looks like

00:11:59,600 --> 00:12:04,320
um again the idea is that it all runs on

00:12:02,320 --> 00:12:06,639
top of frame buffer gfx it's all the

00:12:04,320 --> 00:12:10,880
same code it was written for arduino

00:12:06,639 --> 00:12:13,519
now it runs on esp8266 esp32 team z

00:12:10,880 --> 00:12:14,800
uh raspberry pi and linux and the best

00:12:13,519 --> 00:12:17,279
part again on linux is i can

00:12:14,800 --> 00:12:18,880
just debug the code and do it on my

00:12:17,279 --> 00:12:20,079
laptop without having to do the upload

00:12:18,880 --> 00:12:21,839
cycle

00:12:20,079 --> 00:12:23,120
so there you go uh if you have any

00:12:21,839 --> 00:12:24,079
questions hopefully i'll be here to

00:12:23,120 --> 00:12:26,720
answer them

00:12:24,079 --> 00:12:27,760
hey welcome back so thank you mark for

00:12:26,720 --> 00:12:29,519
that presentation

00:12:27,760 --> 00:12:31,519
that was pre-recorded but i have mark

00:12:29,519 --> 00:12:33,120
live right here now so that he can

00:12:31,519 --> 00:12:34,320
answer any questions that you might have

00:12:33,120 --> 00:12:36,560
so if you have questions

00:12:34,320 --> 00:12:38,800
it's not too late put them in the chat

00:12:36,560 --> 00:12:40,800
there was a question from nicola

00:12:38,800 --> 00:12:43,440
who asked what's your favorite led

00:12:40,800 --> 00:12:44,399
technology is it matrices strip leds

00:12:43,440 --> 00:12:47,839
neopixels

00:12:44,399 --> 00:12:49,680
something else right all right so

00:12:47,839 --> 00:12:51,600
uh hi everyone uh there were so many

00:12:49,680 --> 00:12:53,040
demos that i was just asking for a demo

00:12:51,600 --> 00:12:56,320
fail so i cheated a little bit

00:12:53,040 --> 00:12:59,360
i hope you'll forgive me um so um

00:12:56,320 --> 00:13:02,560
leds i well i guess i'm gonna

00:12:59,360 --> 00:13:04,079
try to make everyone's uh seasick um

00:13:02,560 --> 00:13:06,000
i'll probably show you since i have on

00:13:04,079 --> 00:13:09,040
my desk now so those are rgb

00:13:06,000 --> 00:13:12,079
panels um these guys are the same

00:13:09,040 --> 00:13:14,639
those which are just low resolution um

00:13:12,079 --> 00:13:15,519
if you look up there they're still rgb

00:13:14,639 --> 00:13:18,000
panels

00:13:15,519 --> 00:13:18,720
and as you can see they're pretty big

00:13:18,000 --> 00:13:20,800
right

00:13:18,720 --> 00:13:21,920
so the panels on the right there's

00:13:20,800 --> 00:13:23,680
actually

00:13:21,920 --> 00:13:25,360
a new condom right there's 12 of them

00:13:23,680 --> 00:13:28,079
and they're 50 bucks a piece us

00:13:25,360 --> 00:13:29,920
so they are not that cheap uh but if you

00:13:28,079 --> 00:13:32,959
count there's actually about a thousand

00:13:29,920 --> 00:13:34,959
sorry a hundred thousand pixels and if

00:13:32,959 --> 00:13:36,000
one pixel is three leds that's actually

00:13:34,959 --> 00:13:39,120
00:13:36,000 --> 00:13:42,240
000 leds so that's a lot um

00:13:39,120 --> 00:13:44,240
new pixels are just easy to drive where

00:13:42,240 --> 00:13:45,600
they remember what you tell them you

00:13:44,240 --> 00:13:47,120
don't have to keep refreshing them you

00:13:45,600 --> 00:13:50,160
don't have to emulate colors

00:13:47,120 --> 00:13:51,440
there's just easier to work with but

00:13:50,160 --> 00:13:53,519
turns out if you thought that was

00:13:51,440 --> 00:13:56,079
expensive the one up there in

00:13:53,519 --> 00:13:57,440
newer pixels it would cost about i think

00:13:56,079 --> 00:13:59,360
about 10 times more

00:13:57,440 --> 00:14:01,519
because neopixels of course have a chip

00:13:59,360 --> 00:14:03,680
in each led

00:14:01,519 --> 00:14:05,519
or each pixel and that adds to the cost

00:14:03,680 --> 00:14:08,639
also they can only be so small

00:14:05,519 --> 00:14:10,480
um so the ones i have uh i showed you

00:14:08,639 --> 00:14:13,279
like on the left and right

00:14:10,480 --> 00:14:14,800
those are on the left here they're two

00:14:13,279 --> 00:14:17,519
millimeter per pixel

00:14:14,800 --> 00:14:18,560
those are four and then here you can see

00:14:17,519 --> 00:14:20,480
new pixels

00:14:18,560 --> 00:14:21,839
that's one pixel right so they can be a

00:14:20,480 --> 00:14:22,880
little bit smaller than that but you can

00:14:21,839 --> 00:14:26,240
see the scale

00:14:22,880 --> 00:14:28,480
as a huge difference in scale so um

00:14:26,240 --> 00:14:30,880
so those are basically the two main ones

00:14:28,480 --> 00:14:34,000
to pick from um if you want to go big

00:14:30,880 --> 00:14:35,839
of course the next one is tfts so i had

00:14:34,000 --> 00:14:38,480
a few things on my

00:14:35,839 --> 00:14:40,160
desk since uh we're doing this so this

00:14:38,480 --> 00:14:42,880
is the uh the badge

00:14:40,160 --> 00:14:44,240
uh that you saw this is running with

00:14:42,880 --> 00:14:45,920
micro python

00:14:44,240 --> 00:14:47,680
and it has touch sensors so i can make

00:14:45,920 --> 00:14:49,680
it go forward and backwards

00:14:47,680 --> 00:14:51,279
uh for people who didn't get the badge

00:14:49,680 --> 00:14:53,519
this is how to make your own one

00:14:51,279 --> 00:14:55,199
uh with a your own board this is running

00:14:53,519 --> 00:14:56,639
c plus plus to see how quickly i can

00:14:55,199 --> 00:14:58,800
flip the image

00:14:56,639 --> 00:15:00,720
um and this is the the franken board

00:14:58,800 --> 00:15:03,040
that uh was mentioned earlier

00:15:00,720 --> 00:15:04,399
i'm still working on the code um the dog

00:15:03,040 --> 00:15:06,240
in my homework i'm sorry

00:15:04,399 --> 00:15:08,880
i was writing c plus bus in the middle

00:15:06,240 --> 00:15:12,240
and basically i just added on the back

00:15:08,880 --> 00:15:15,279
um an extra connections to do spi

00:15:12,240 --> 00:15:16,320
to a screen that is 9664 color so it's a

00:15:15,279 --> 00:15:18,880
lot nicer

00:15:16,320 --> 00:15:20,560
um i just have to fix this a little bit

00:15:18,880 --> 00:15:22,720
and if you really just want to go high

00:15:20,560 --> 00:15:25,760
in pixels that's what i used to do

00:15:22,720 --> 00:15:27,360
i used to run those tfts that one is a

00:15:25,760 --> 00:15:31,279
320 240

00:15:27,360 --> 00:15:33,040
if you remember um the iotas that's

00:15:31,279 --> 00:15:35,680
actually the screen that we had on it

00:15:33,040 --> 00:15:38,079
and this one allowed me to write codes

00:15:35,680 --> 00:15:40,800
in the plane while traveling without

00:15:38,079 --> 00:15:42,880
carrying something stupid big like that

00:15:40,800 --> 00:15:45,759
big and heavy and breakable

00:15:42,880 --> 00:15:46,240
now um the next level if you want to

00:15:45,759 --> 00:15:49,199
program

00:15:46,240 --> 00:15:50,880
is to actually run this on your computer

00:15:49,199 --> 00:15:53,279
and this was what i was saying earlier

00:15:50,880 --> 00:15:54,320
as uh about the presentation uh know i

00:15:53,279 --> 00:15:56,480
can write all the code

00:15:54,320 --> 00:15:58,399
on my laptop i can debug it in the plane

00:15:56,480 --> 00:16:00,399
uh i don't have to be running anything

00:15:58,399 --> 00:16:02,639
any hardware and then later on i just

00:16:00,399 --> 00:16:04,959
flip it to actual hardware

00:16:02,639 --> 00:16:05,759
and okay here i'll show you the remote

00:16:04,959 --> 00:16:09,279
so the remote

00:16:05,759 --> 00:16:10,320
talks the the sp32 is doing its own

00:16:09,279 --> 00:16:13,279
display

00:16:10,320 --> 00:16:14,560
uh the raspberry pi here which is hidden

00:16:13,279 --> 00:16:17,040
in the back there

00:16:14,560 --> 00:16:18,959
is connected to the esp32 and it does

00:16:17,040 --> 00:16:20,560
its own display and you can see that

00:16:18,959 --> 00:16:22,000
going higher resolution makes a

00:16:20,560 --> 00:16:24,800
difference and how

00:16:22,000 --> 00:16:26,320
nice uh it looks like this this is a

00:16:24,800 --> 00:16:28,320
probably pretty good example of

00:16:26,320 --> 00:16:29,600
a much nicer resolution hopefully you

00:16:28,320 --> 00:16:32,000
can see it on video

00:16:29,600 --> 00:16:33,759
yep sure i can okay well thanks mark we

00:16:32,000 --> 00:16:37,199
are pretty much at the end of our

00:16:33,759 --> 00:16:37,920
time slot now you you always bring the

00:16:37,199 --> 00:16:41,360
bling

00:16:37,920 --> 00:16:43,040
we can rely on you for that uh so

00:16:41,360 --> 00:16:44,560
uh mark i'm sure we'll be hanging around

00:16:43,040 --> 00:16:46,160
for more of the conference although he

00:16:44,560 --> 00:16:47,920
is not in a very good time zone it's

00:16:46,160 --> 00:16:49,680
probably late at night right now

00:16:47,920 --> 00:16:50,959
sorry it's not terrible i'll be honest

00:16:49,680 --> 00:16:53,040
not too bad okay

00:16:50,959 --> 00:16:54,880
so we're going to go to another break um

00:16:53,040 --> 00:16:55,199
probably in about eight or nine minutes

00:16:54,880 --> 00:16:57,199
we

00:16:55,199 --> 00:16:59,040
will be back with the next presentation

00:16:57,199 --> 00:17:00,639
which will be leon wright

00:16:59,040 --> 00:17:03,519
talking about hardware hacking for hugs

00:17:00,639 --> 00:17:06,000
and profit so thank you very much

00:17:03,519 --> 00:17:12,000
and stick with us see ya all right nice

00:17:06,000 --> 00:17:12,000

YouTube URL: https://www.youtube.com/watch?v=GmCv6f3BQa0


