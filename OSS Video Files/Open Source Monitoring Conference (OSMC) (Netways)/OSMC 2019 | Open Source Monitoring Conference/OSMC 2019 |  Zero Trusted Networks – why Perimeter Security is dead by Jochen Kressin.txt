Title: OSMC 2019 |  Zero Trusted Networks â€“ why Perimeter Security is dead by Jochen Kressin
Publication date: 2019-11-18
Playlist: OSMC 2019 | Open Source Monitoring Conference
Description: 
	In the days of microservices, cloud, Saas and Paas, perimeter security, albeit still widely used, is not sufficient anymore. Inside attacks have become more prominent than outside attacks, posing a huge risk to your network and data. The Zero Trusted Networks approach treats all hosts and components as if they were internet-facing and considers the entire network to be compromised and hostile.


NETWAYS
Konferenzen: https://www.netways.de/events
Schulungen: https://www.netways.de/schulungen
Shop: https://shop.netways.de/
Blog: http://blog.netways.de/
NWS: https://nws.netways.de

Webinare
Archiv Link: https://www.netways.de/webinare/archi...
Aktuell: https://www.netways.de/wb

Social Media
SlideShare: http://de.slideshare.net/netways
YouTube: https://www.netways.de/youtube
Facebook: https://www.facebook.com/netways
Twitter: https://twitter.com/netways
Instagram: https://www.instagram.com/netwaysgmbh/

Musik: FRAMETRAXX
Captions: 
	00:00:05,120 --> 00:00:08,719
[Music]

00:00:16,710 --> 00:00:22,740
yeah thanks thanks for coming so early

00:00:19,800 --> 00:00:25,949
in the morning so my first question

00:00:22,740 --> 00:00:29,039
would be do you want me to do with the

00:00:25,949 --> 00:00:34,200
talk in English or in in German English

00:00:29,039 --> 00:00:36,030
okay all right okay so first of all just

00:00:34,200 --> 00:00:38,160
a little bit about me so my name is

00:00:36,030 --> 00:00:40,260
johan christine i'm the cofounder of

00:00:38,160 --> 00:00:42,750
flora gun game aha

00:00:40,260 --> 00:00:46,379
we're the makers of such card which is a

00:00:42,750 --> 00:00:51,120
security suite for elasticsearch and the

00:00:46,379 --> 00:00:54,600
elks tech company was founded in 2012 so

00:00:51,120 --> 00:00:56,480
we were located in Berlin but it's

00:00:54,600 --> 00:00:59,940
already been told I'm originally from

00:00:56,480 --> 00:01:02,219
Franconia and we have some partner

00:00:59,940 --> 00:01:05,880
offices in Seattle New York and in Latin

00:01:02,219 --> 00:01:08,820
America as well so first of all a word

00:01:05,880 --> 00:01:10,170
of warning today in my talk I'm of

00:01:08,820 --> 00:01:12,570
course talking about CEO trusted

00:01:10,170 --> 00:01:16,409
networks so the examples that I'm using

00:01:12,570 --> 00:01:18,330
our focus towards elasticsearch but you

00:01:16,409 --> 00:01:20,220
can actually exchange elasticsearch with

00:01:18,330 --> 00:01:22,560
any other product like MongoDB or cough

00:01:20,220 --> 00:01:24,750
code or whatever so I'm just using it

00:01:22,560 --> 00:01:28,380
because as an example because I'm using

00:01:24,750 --> 00:01:30,210
it a lot in my day-to-day work and the

00:01:28,380 --> 00:01:34,170
second one is that I'm not going to talk

00:01:30,210 --> 00:01:36,170
about deep deep technological stuff it's

00:01:34,170 --> 00:01:42,960
more about concepts in a new way of

00:01:36,170 --> 00:01:49,670
thinking about network security so why

00:01:42,960 --> 00:01:52,380
this topic well well first of all I'm

00:01:49,670 --> 00:01:56,130
naturally talking a lot with customers

00:01:52,380 --> 00:01:57,840
about elasticsearch so we have a lot of

00:01:56,130 --> 00:02:00,899
customers during very sensitive data

00:01:57,840 --> 00:02:02,460
it's not only lock data so the AXA is

00:02:00,899 --> 00:02:04,500
typically used for lock analytics that's

00:02:02,460 --> 00:02:07,079
that's for sure but well as of customers

00:02:04,500 --> 00:02:09,390
from the financial area which store

00:02:07,079 --> 00:02:11,099
financial transaction data from the

00:02:09,390 --> 00:02:13,860
healthcare sector which store patient

00:02:11,099 --> 00:02:16,020
data or any other personal

00:02:13,860 --> 00:02:19,320
identifiable information in

00:02:16,020 --> 00:02:21,980
elasticsearch and when they come to us

00:02:19,320 --> 00:02:25,890
since we're offering a security solution

00:02:21,980 --> 00:02:28,080
my first question would always be so if

00:02:25,890 --> 00:02:30,090
you're storing sensitive information in

00:02:28,080 --> 00:02:32,550
your data like elasticsearch in that

00:02:30,090 --> 00:02:35,880
case and now you need some form of

00:02:32,550 --> 00:02:38,570
security also what security measures did

00:02:35,880 --> 00:02:41,790
you have before and the answers are

00:02:38,570 --> 00:02:45,990
obviously quite scary because most of

00:02:41,790 --> 00:02:46,860
the time we hear that it's totally

00:02:45,990 --> 00:02:49,700
unprotected

00:02:46,860 --> 00:02:52,709
so you're probably heard about you know

00:02:49,700 --> 00:02:54,239
data leaks regarding especially

00:02:52,709 --> 00:02:55,650
elasticsearch but also other

00:02:54,239 --> 00:02:59,670
technologies and I have a few examples

00:02:55,650 --> 00:03:02,160
in a moment but even the very large

00:02:59,670 --> 00:03:04,610
companies and I'm talking about fortune

00:03:02,160 --> 00:03:07,770
500 companies or tax 100 companies

00:03:04,610 --> 00:03:10,709
sometimes say well we don't have any

00:03:07,770 --> 00:03:14,640
security in place for our sensitive data

00:03:10,709 --> 00:03:16,650
in our data Lake the second answer is

00:03:14,640 --> 00:03:18,360
well keeping everything's fine because

00:03:16,650 --> 00:03:21,959
we're behind a firewall and that's

00:03:18,360 --> 00:03:24,989
typically sufficient so we keep the

00:03:21,959 --> 00:03:26,580
attackers at bay and everything that's

00:03:24,989 --> 00:03:31,470
happening inside our network is

00:03:26,580 --> 00:03:33,150
inherently secure and trusted and the

00:03:31,470 --> 00:03:35,220
third one is we have a VPN and a

00:03:33,150 --> 00:03:38,250
firewall which is a little bit a little

00:03:35,220 --> 00:03:41,430
bit better but basically it's it's it's

00:03:38,250 --> 00:03:43,709
it's the same so people think that these

00:03:41,430 --> 00:03:46,890
you know setups or infrastructures or

00:03:43,709 --> 00:03:49,440
measures are sufficient to protect your

00:03:46,890 --> 00:03:52,049
data so and this is typically called

00:03:49,440 --> 00:03:54,959
parameter security which typically looks

00:03:52,049 --> 00:03:58,019
like that so on the left hand side you

00:03:54,959 --> 00:04:00,810
have the evil internet with all the you

00:03:58,019 --> 00:04:03,630
know bad guys in it and then you have

00:04:00,810 --> 00:04:06,299
your parameter which is secured for

00:04:03,630 --> 00:04:11,190
example by a firewall VPN and some other

00:04:06,299 --> 00:04:13,350
network appliances and then you have

00:04:11,190 --> 00:04:15,840
your data stored in your data link and

00:04:13,350 --> 00:04:17,519
the concept behind parameter security is

00:04:15,840 --> 00:04:19,320
that on the left-hand side

00:04:17,519 --> 00:04:20,579
everything's untrusted and on the

00:04:19,320 --> 00:04:22,349
right-hand side

00:04:20,579 --> 00:04:25,700
everything's trusted which is your

00:04:22,349 --> 00:04:25,700
trusted parameter

00:04:26,319 --> 00:04:31,759
so this concept has a few assumptions so

00:04:30,379 --> 00:04:33,289
the first assumption is that your

00:04:31,759 --> 00:04:35,060
traffic from the outside cannot be

00:04:33,289 --> 00:04:36,740
trusted this is something that I would

00:04:35,060 --> 00:04:38,509
agree of course they are you know bad

00:04:36,740 --> 00:04:40,669
guys out there trying to hack into your

00:04:38,509 --> 00:04:42,500
network and steal your data ok that's

00:04:40,669 --> 00:04:44,629
that's for sure

00:04:42,500 --> 00:04:47,479
but then already the second one that the

00:04:44,629 --> 00:04:52,069
traffic inside the parameter can be

00:04:47,479 --> 00:04:54,830
trusted is flawed this whole concept of

00:04:52,069 --> 00:04:58,099
parameter security worked like 10 years

00:04:54,830 --> 00:04:59,650
ago or 15 years ago but it doesn't work

00:04:58,099 --> 00:05:03,050
nowadays

00:04:59,650 --> 00:05:05,810
so the third assumption is that the

00:05:03,050 --> 00:05:09,770
actual access to the parameter can be

00:05:05,810 --> 00:05:12,319
fully controlled so as a consequence

00:05:09,770 --> 00:05:15,229
VPNs firewalls and stuff like that are

00:05:12,319 --> 00:05:17,750
sufficient to protect your data at any

00:05:15,229 --> 00:05:21,560
point in time you actually know who is

00:05:17,750 --> 00:05:24,080
inside your network and has and which

00:05:21,560 --> 00:05:28,099
access rights this person or this device

00:05:24,080 --> 00:05:30,319
has therefore the traffic inside your

00:05:28,099 --> 00:05:32,690
VPN doesn't necessarily have to be

00:05:30,319 --> 00:05:35,840
encrypted so what we're seeing a lot is

00:05:32,690 --> 00:05:38,210
that you have some let's say TLS

00:05:35,840 --> 00:05:40,520
encryption but at some point inside a

00:05:38,210 --> 00:05:44,110
network its terminated and everything's

00:05:40,520 --> 00:05:48,469
it's unencrypted the concerns are well

00:05:44,110 --> 00:05:50,270
if I do end-to-end encryption I get some

00:05:48,469 --> 00:05:51,919
performance penalty that I have to pay

00:05:50,270 --> 00:05:55,159
and since we inside the trusted

00:05:51,919 --> 00:05:57,710
parameter I don't need to do that and

00:05:55,159 --> 00:06:00,830
the last one is that the security

00:05:57,710 --> 00:06:03,580
breaches if security breaches happen can

00:06:00,830 --> 00:06:09,949
and will be detected so these are the

00:06:03,580 --> 00:06:12,770
assumptions this is based on so the main

00:06:09,949 --> 00:06:13,610
question here is does parameter security

00:06:12,770 --> 00:06:16,069
still work

00:06:13,610 --> 00:06:19,210
I mean obviously it worked for for some

00:06:16,069 --> 00:06:26,930
time but is it sufficient nowadays

00:06:19,210 --> 00:06:29,750
because because if it's the works why

00:06:26,930 --> 00:06:32,479
are we still seeing so many data

00:06:29,750 --> 00:06:36,800
breaches and data losses on a daily

00:06:32,479 --> 00:06:39,139
basis and I just have a couple of

00:06:36,800 --> 00:06:40,639
examples

00:06:39,139 --> 00:06:42,830
that happened in the last couple of

00:06:40,639 --> 00:06:48,139
months so there was the state of which

00:06:42,830 --> 00:06:51,139
@x actus the US company so they lost 340

00:06:48,139 --> 00:06:53,300
million of personal data phone number

00:06:51,139 --> 00:06:56,150
home address number age gender and stuff

00:06:53,300 --> 00:06:59,150
like that and there was this quote it

00:06:56,150 --> 00:07:00,770
seems like this database is a like this

00:06:59,150 --> 00:07:02,719
is the database with pretty much every

00:07:00,770 --> 00:07:04,639
US citizen in it so it's quite a quite a

00:07:02,719 --> 00:07:09,020
major breach and I think there was even

00:07:04,639 --> 00:07:10,550
Social Security number in it so why did

00:07:09,020 --> 00:07:13,129
this happen well this was an example

00:07:10,550 --> 00:07:15,319
where an elastic search installation was

00:07:13,129 --> 00:07:18,590
open to the public and didn't have any

00:07:15,319 --> 00:07:21,439
security measures installed so that

00:07:18,590 --> 00:07:23,240
means well you could say the parameter

00:07:21,439 --> 00:07:24,919
was not secured at all or he could also

00:07:23,240 --> 00:07:26,110
argue there was no parameter at all

00:07:24,919 --> 00:07:31,639
because everything was publicly

00:07:26,110 --> 00:07:33,729
available on the on the internet data

00:07:31,639 --> 00:07:37,789
breach at Apple also very interesting

00:07:33,729 --> 00:07:42,139
Apple lost many millions of customer

00:07:37,789 --> 00:07:43,969
data from an internal database why did

00:07:42,139 --> 00:07:45,919
this happen well they work together with

00:07:43,969 --> 00:07:48,349
distributors and these distributors had

00:07:45,919 --> 00:07:52,669
access to internal systems at Apple

00:07:48,349 --> 00:07:54,349
including the customer database and yeah

00:07:52,669 --> 00:07:56,659
they just stole the data sold it on the

00:07:54,349 --> 00:08:00,800
black market for a couple of million

00:07:56,659 --> 00:08:03,199
dollars which means that Apple as a

00:08:00,800 --> 00:08:06,770
company granted and distributor access

00:08:03,199 --> 00:08:08,509
rights to some internal system and it

00:08:06,770 --> 00:08:11,689
didn't control what this distributor did

00:08:08,509 --> 00:08:14,240
with the data so this is a classic

00:08:11,689 --> 00:08:19,969
example of an attacker attacker which is

00:08:14,240 --> 00:08:24,110
already inside your parameter BEST

00:08:19,969 --> 00:08:26,990
WESTERN also just a recent leak customer

00:08:24,110 --> 00:08:29,089
booking details have been leaked and

00:08:26,990 --> 00:08:31,580
this was through a system called auto

00:08:29,089 --> 00:08:34,419
clerk which is used for hotel

00:08:31,580 --> 00:08:40,339
reservation or reservations in general

00:08:34,419 --> 00:08:43,010
again name date of birth gone why this

00:08:40,339 --> 00:08:45,320
was a cluster hosted on a double yes so

00:08:43,010 --> 00:08:48,890
it comes the clout into the end of the

00:08:45,320 --> 00:08:51,680
picture and this was this one is

00:08:48,890 --> 00:08:52,940
interesting because auto clerk is one

00:08:51,680 --> 00:08:55,850
platform which

00:08:52,940 --> 00:08:58,670
multiple client data so it was not only

00:08:55,850 --> 00:09:01,400
not only BEST WESTERN was affected but

00:08:58,670 --> 00:09:04,010
many other companies as well which

00:09:01,400 --> 00:09:05,840
raises a question in that case so how do

00:09:04,010 --> 00:09:07,550
you define your parameter so you have

00:09:05,840 --> 00:09:09,680
the service running in the cloud you

00:09:07,550 --> 00:09:12,700
have multiple clients so where's the

00:09:09,680 --> 00:09:19,430
parameter for each for each client

00:09:12,700 --> 00:09:21,560
unless one is a cosmetics company 6

00:09:19,430 --> 00:09:23,900
million orders exposed also including

00:09:21,560 --> 00:09:27,320
name home address phone number and and

00:09:23,900 --> 00:09:30,140
the 1 and also even internal data from

00:09:27,320 --> 00:09:32,540
before she stopped traffic turnover

00:09:30,140 --> 00:09:36,410
order volumes this is pretty interesting

00:09:32,540 --> 00:09:38,750
because this data is very interesting

00:09:36,410 --> 00:09:40,280
also for competitors so it's not only

00:09:38,750 --> 00:09:42,500
about you know getting some personal

00:09:40,280 --> 00:09:43,820
information from customers stuff like

00:09:42,500 --> 00:09:46,550
that and selling them on the black

00:09:43,820 --> 00:09:50,090
market or the dark web or whatever but

00:09:46,550 --> 00:09:53,270
in this case even internal KPIs of this

00:09:50,090 --> 00:09:56,540
company have been leaked again this was

00:09:53,270 --> 00:09:58,730
an unsecured elasticsearch set up which

00:09:56,540 --> 00:09:59,360
was operated by I didn't know this this

00:09:58,730 --> 00:10:02,330
company

00:09:59,360 --> 00:10:04,870
Ellis net it's a consulting company in

00:10:02,330 --> 00:10:07,940
France as far as I know and actually

00:10:04,870 --> 00:10:11,480
you're consulting many many companies

00:10:07,940 --> 00:10:15,620
which raises the question like they ask

00:10:11,480 --> 00:10:17,300
here other clients of them are also at

00:10:15,620 --> 00:10:20,510
risk and they don't know if there are

00:10:17,300 --> 00:10:22,550
any other unsecured databases out there

00:10:20,510 --> 00:10:24,650
that haven't been discovered yet

00:10:22,550 --> 00:10:28,100
so and these are just like for example

00:10:24,650 --> 00:10:33,290
from for many many that you see on on a

00:10:28,100 --> 00:10:35,240
daily basis so oh sorry I have one more

00:10:33,290 --> 00:10:37,790
and this is an interesting one

00:10:35,240 --> 00:10:40,670
one login I think that was already last

00:10:37,790 --> 00:10:43,340
year and this is especially interesting

00:10:40,670 --> 00:10:46,160
because it's a password and identity

00:10:43,340 --> 00:10:49,160
management platform and as far as I know

00:10:46,160 --> 00:10:51,830
they suffer data breaches twice so this

00:10:49,160 --> 00:10:53,630
was the the second one also very

00:10:51,830 --> 00:10:59,000
interested interesting they are hosting

00:10:53,630 --> 00:11:01,190
on AWS and they lost a key to AWS

00:10:59,000 --> 00:11:03,980
so an attacker could not access the

00:11:01,190 --> 00:11:06,190
systems directly but they could gain

00:11:03,980 --> 00:11:09,070
access from an intermediate

00:11:06,190 --> 00:11:11,560
host now and and and this shows how

00:11:09,070 --> 00:11:14,530
critical that could be because one login

00:11:11,560 --> 00:11:16,600
had to tell all the customers that they

00:11:14,530 --> 00:11:19,300
need to change all the passwords they're

00:11:16,600 --> 00:11:22,450
all tokens and create new certificates I

00:11:19,300 --> 00:11:26,650
mean that's a that's that's a major well

00:11:22,450 --> 00:11:29,140
so with one stolen key to a double yes

00:11:26,650 --> 00:11:31,900
an attacker was able to do much much

00:11:29,140 --> 00:11:34,180
damage and harm so just imagine you're a

00:11:31,900 --> 00:11:35,830
customer this is your identity and

00:11:34,180 --> 00:11:37,000
credential management platform and they

00:11:35,830 --> 00:11:40,330
tell you okay you have to change

00:11:37,000 --> 00:11:43,420
everything because we yeah we lost the

00:11:40,330 --> 00:11:47,890
key and your data so this can be very

00:11:43,420 --> 00:11:49,930
very critical and that's that's one that

00:11:47,890 --> 00:11:51,340
I can remember maybe you read that I

00:11:49,930 --> 00:11:54,940
think that was a company from the

00:11:51,340 --> 00:11:57,970
Netherlands they suffered a it was an

00:11:54,940 --> 00:12:00,040
angry admin as far as I remember and he

00:11:57,970 --> 00:12:02,650
was fired from the company and he just

00:12:00,040 --> 00:12:05,350
erased everything right service data

00:12:02,650 --> 00:12:06,610
backups everything and this company

00:12:05,350 --> 00:12:08,860
actually went out of business because

00:12:06,610 --> 00:12:11,680
they just they lost the trust with their

00:12:08,860 --> 00:12:13,360
customers they moved elsewhere and once

00:12:11,680 --> 00:12:16,540
you lose the trust it's nearly

00:12:13,360 --> 00:12:18,130
impossible to to regain it so these are

00:12:16,540 --> 00:12:20,560
just you know a couple of examples of

00:12:18,130 --> 00:12:23,590
data breaches and how let's say how

00:12:20,560 --> 00:12:26,200
massive they can be and how they can

00:12:23,590 --> 00:12:26,830
actually affect your your business in a

00:12:26,200 --> 00:12:30,490
big way

00:12:26,830 --> 00:12:33,430
so your first reaction to these data

00:12:30,490 --> 00:12:35,890
breaches could be if you ask why does do

00:12:33,430 --> 00:12:37,630
this data breaches happen could be well

00:12:35,890 --> 00:12:39,430
you know you just have dumped admins and

00:12:37,630 --> 00:12:43,870
they're stupid and they can't protect

00:12:39,430 --> 00:12:46,120
the data that's maybe in a couple of

00:12:43,870 --> 00:12:49,450
cases that might be true but that's not

00:12:46,120 --> 00:12:51,790
that's not the real story I don't think

00:12:49,450 --> 00:12:53,440
so because I think that the general

00:12:51,790 --> 00:12:56,790
concept of parameter security is

00:12:53,440 --> 00:13:02,050
generally broken and and flawed nowadays

00:12:56,790 --> 00:13:03,760
so if it doesn't work anymore and it has

00:13:02,050 --> 00:13:05,620
worked at some point we have to ask the

00:13:03,760 --> 00:13:06,160
question what has changed in the

00:13:05,620 --> 00:13:08,350
meantime

00:13:06,160 --> 00:13:11,710
and a lot of things have actually

00:13:08,350 --> 00:13:15,040
changed so the first thing is access

00:13:11,710 --> 00:13:16,870
control a couple of years back you had

00:13:15,040 --> 00:13:19,170
your offices and you had your data

00:13:16,870 --> 00:13:21,600
center you had your internal network

00:13:19,170 --> 00:13:23,639
and you granted access from your office

00:13:21,600 --> 00:13:26,760
network for example to your data center

00:13:23,639 --> 00:13:29,100
and stuff like that but this isn't isn't

00:13:26,760 --> 00:13:30,630
true anymore first of all you have not

00:13:29,100 --> 00:13:32,100
only your employees working on your

00:13:30,630 --> 00:13:34,139
project so we're living in a time where

00:13:32,100 --> 00:13:36,180
you bring in people you bring in

00:13:34,139 --> 00:13:38,519
freelancers you bring in part-time

00:13:36,180 --> 00:13:41,279
contractors so it's not only your own

00:13:38,519 --> 00:13:43,860
staff that you need to manage security

00:13:41,279 --> 00:13:47,430
wise but also all the the other people

00:13:43,860 --> 00:13:50,370
working on the on a project and since

00:13:47,430 --> 00:13:51,930
these people need access to your data

00:13:50,370 --> 00:13:53,660
because they're working on a project and

00:13:51,930 --> 00:13:56,279
need access to a database or whatever

00:13:53,660 --> 00:13:58,500
these are all potential inside threats

00:13:56,279 --> 00:14:00,630
so even if it's if it's if it's a

00:13:58,500 --> 00:14:02,459
contractor and again just take the

00:14:00,630 --> 00:14:05,010
example of the angry admin you know

00:14:02,459 --> 00:14:09,649
there was an employee it was an insight

00:14:05,010 --> 00:14:14,040
attack so to speak so that has changed

00:14:09,649 --> 00:14:16,589
the second one is the locations you have

00:14:14,040 --> 00:14:19,350
remote offices you have remote workers

00:14:16,589 --> 00:14:21,660
so we for example as a company we're

00:14:19,350 --> 00:14:23,640
located in Berlin but we have people in

00:14:21,660 --> 00:14:26,850
Italy and in the Ukraine and in

00:14:23,640 --> 00:14:29,070
Scandinavia and at various places in

00:14:26,850 --> 00:14:31,019
Germany in addition to the people

00:14:29,070 --> 00:14:34,620
working at the office so we're quite a

00:14:31,019 --> 00:14:36,660
remote company so and of course someone

00:14:34,620 --> 00:14:40,079
working from Italy needs to have access

00:14:36,660 --> 00:14:42,510
to you know our internal systems the

00:14:40,079 --> 00:14:45,750
same way that and that's the office

00:14:42,510 --> 00:14:48,720
working and Berlin needs so you have to

00:14:45,750 --> 00:14:51,360
manage various various locations that

00:14:48,720 --> 00:14:54,660
devices have exploded you have of course

00:14:51,360 --> 00:14:58,230
laptops but you have smartphones tablets

00:14:54,660 --> 00:15:00,690
and generally the you know approach of

00:14:58,230 --> 00:15:03,480
bring your own device and it's the same

00:15:00,690 --> 00:15:06,089
for us if we bring in freelancers for

00:15:03,480 --> 00:15:08,880
example usually they all bring in their

00:15:06,089 --> 00:15:11,160
own device so this device is now inside

00:15:08,880 --> 00:15:14,069
your network you know it's plugged in do

00:15:11,160 --> 00:15:16,380
you know what's on this device did you

00:15:14,069 --> 00:15:19,500
scan it do you know what this this I

00:15:16,380 --> 00:15:24,350
don't know what kind of software they

00:15:19,500 --> 00:15:24,350
have on it it's a very critical issue

00:15:24,620 --> 00:15:31,350
even more critical is cloud computing so

00:15:29,010 --> 00:15:32,339
we have cloud storage okay that's for

00:15:31,350 --> 00:15:33,870
sure

00:15:32,339 --> 00:15:35,910
but we're living in a hedge of

00:15:33,870 --> 00:15:38,040
microservices software as a service

00:15:35,910 --> 00:15:42,480
platform as a service infrastructure as

00:15:38,040 --> 00:15:45,600
a service so I would say nearly half of

00:15:42,480 --> 00:15:48,749
the world's using maybe AWS or Asia or

00:15:45,600 --> 00:15:50,370
some kind of you know cloud provider so

00:15:48,749 --> 00:15:52,680
the question is if you are using

00:15:50,370 --> 00:15:54,689
services or if you're storing data on a

00:15:52,680 --> 00:15:58,439
cloud provider is this part of your

00:15:54,689 --> 00:16:01,559
parameter yes or no and if your store

00:15:58,439 --> 00:16:02,759
data on let's say aw yes do you know who

00:16:01,559 --> 00:16:05,100
has access to your data

00:16:02,759 --> 00:16:07,589
I mean someone because it's a managed

00:16:05,100 --> 00:16:10,499
service right so someone some some admin

00:16:07,589 --> 00:16:13,470
from AWS or Escher itself access to your

00:16:10,499 --> 00:16:15,720
machines to your to your data so if I

00:16:13,470 --> 00:16:18,360
open an account that I a double yes I

00:16:15,720 --> 00:16:21,149
don't know who has access to my data and

00:16:18,360 --> 00:16:22,740
people just you know happily store their

00:16:21,149 --> 00:16:27,300
stuff there and run their stuff there

00:16:22,740 --> 00:16:30,389
and just trusting the provider Azure

00:16:27,300 --> 00:16:32,519
Amazon whatever that they do things

00:16:30,389 --> 00:16:36,139
right right and protect your services

00:16:32,519 --> 00:16:36,139
and and protect your data

00:16:36,259 --> 00:16:41,279
containerization is a very big topic at

00:16:38,939 --> 00:16:44,309
the moment of course dr kubernetes etc

00:16:41,279 --> 00:16:47,430
where you have to deal with very dynamic

00:16:44,309 --> 00:16:50,279
infrastructures dynamic IPs and we are

00:16:47,430 --> 00:16:53,339
firing up parts and destroying them as

00:16:50,279 --> 00:16:56,040
you need them so traditionally a

00:16:53,339 --> 00:16:59,430
traditional IP based security is also

00:16:56,040 --> 00:17:00,870
not really working anymore so we have a

00:16:59,430 --> 00:17:03,000
lot of decentralized systems

00:17:00,870 --> 00:17:05,399
decentralized clusters data is

00:17:03,000 --> 00:17:07,079
decentralized and then on top of that

00:17:05,399 --> 00:17:09,299
all you have Internet of Things

00:17:07,079 --> 00:17:11,280
we have all these very tiny small

00:17:09,299 --> 00:17:15,409
devices each device containing

00:17:11,280 --> 00:17:20,610
collecting data storing it somewhere so

00:17:15,409 --> 00:17:22,530
big issue so the traditional approach

00:17:20,610 --> 00:17:25,770
like I said is you have a parameter

00:17:22,530 --> 00:17:28,110
which runs typically a data center where

00:17:25,770 --> 00:17:31,470
you have some services you have

00:17:28,110 --> 00:17:34,500
locations and devices accessing data and

00:17:31,470 --> 00:17:36,720
services in the data center and in

00:17:34,500 --> 00:17:40,169
addition to that you have the cloud

00:17:36,720 --> 00:17:44,470
storage software service and platform as

00:17:40,169 --> 00:17:47,179
a service for example so

00:17:44,470 --> 00:17:49,040
if we're thinking about where the parent

00:17:47,179 --> 00:17:50,960
where we should draw the line regarding

00:17:49,040 --> 00:17:54,110
the parameter it becomes quite quite

00:17:50,960 --> 00:17:56,750
difficult so if we revisit the

00:17:54,110 --> 00:18:00,160
traditional approach where we had an

00:17:56,750 --> 00:18:02,840
untrusted and a trusted area so to speak

00:18:00,160 --> 00:18:06,650
and compare that with the situation that

00:18:02,840 --> 00:18:09,290
we have right now this is this is your

00:18:06,650 --> 00:18:12,410
parameter right now right so it includes

00:18:09,290 --> 00:18:15,049
everything and everything is untrusted

00:18:12,410 --> 00:18:18,590
and this is the basic or the fundamental

00:18:15,049 --> 00:18:20,900
principle of zero trusted networks so

00:18:18,590 --> 00:18:25,040
zero trusted networks came as far as I

00:18:20,900 --> 00:18:27,860
remember from Google so they published a

00:18:25,040 --> 00:18:31,120
paper a couple of years ago the exam was

00:18:27,860 --> 00:18:34,429
beyond Corp M as far as I remember so

00:18:31,120 --> 00:18:36,980
they came up with this idea over this

00:18:34,429 --> 00:18:39,559
paradigm because of course Google is

00:18:36,980 --> 00:18:41,059
also very remote company many people and

00:18:39,559 --> 00:18:43,160
they had the problem of actually

00:18:41,059 --> 00:18:47,600
controlling access to their sensitive

00:18:43,160 --> 00:18:50,780
data so they applied the sewer trusted

00:18:47,600 --> 00:18:52,910
Network principles internally first and

00:18:50,780 --> 00:18:55,130
then kind of evolved that into a basic

00:18:52,910 --> 00:18:57,919
you know principle or or a paradigm and

00:18:55,130 --> 00:19:01,400
then published these these papers and

00:18:57,919 --> 00:19:03,169
from from that point onwards it kind of

00:19:01,400 --> 00:19:06,440
you know the idea took off

00:19:03,169 --> 00:19:09,830
I know of many companies trying to adopt

00:19:06,440 --> 00:19:12,200
these zero trusted Network principles so

00:19:09,830 --> 00:19:13,880
you can read from I don't know how big

00:19:12,200 --> 00:19:15,950
companies out there yesterday I read

00:19:13,880 --> 00:19:19,190
from article from I think was github

00:19:15,950 --> 00:19:22,010
that they're moving very strict in in

00:19:19,190 --> 00:19:27,350
that direction and how they're going to

00:19:22,010 --> 00:19:30,320
implement these these principles so

00:19:27,350 --> 00:19:33,309
let's do a quick fact check fact is that

00:19:30,320 --> 00:19:35,929
companies do not have full control

00:19:33,309 --> 00:19:39,230
anymore we have the explosion of the

00:19:35,929 --> 00:19:41,750
devices we have data and services moving

00:19:39,230 --> 00:19:44,540
to the cloud running in combination with

00:19:41,750 --> 00:19:47,990
data and services in your data center or

00:19:44,540 --> 00:19:49,970
data centers if you have more many

00:19:47,990 --> 00:19:52,929
devices collecting data storing data

00:19:49,970 --> 00:19:55,309
talking to each other internet of things

00:19:52,929 --> 00:19:57,919
and then you have the fact that inside

00:19:55,309 --> 00:19:58,490
attacks are ever increasing so there was

00:19:57,919 --> 00:20:02,539
a

00:19:58,490 --> 00:20:05,919
study from IBM in 2016

00:20:02,539 --> 00:20:08,990
that nowadays more than 60% of all

00:20:05,919 --> 00:20:11,419
attacks originated from the inside and I

00:20:08,990 --> 00:20:15,220
would suspect that this was from 2016

00:20:11,419 --> 00:20:19,610
maybe we're already at 70% I don't know

00:20:15,220 --> 00:20:22,879
so yes the and it's not only you know

00:20:19,610 --> 00:20:25,279
your typical say angry admin or angry

00:20:22,879 --> 00:20:28,129
employee a lot of stuff goes on via

00:20:25,279 --> 00:20:30,320
social engineering it's pretty and maybe

00:20:28,129 --> 00:20:32,450
you saw some you know some some talks

00:20:30,320 --> 00:20:36,529
about that already but it's pretty easy

00:20:32,450 --> 00:20:40,190
to gain access to some internal systems

00:20:36,529 --> 00:20:43,249
via social engineering and now with the

00:20:40,190 --> 00:20:46,519
you know AI arriving things will get

00:20:43,249 --> 00:20:48,980
more more funny maybe you heard about

00:20:46,519 --> 00:20:51,440
this one social engineering attack which

00:20:48,980 --> 00:20:54,940
I found very interesting so they

00:20:51,440 --> 00:20:57,559
actually simulated the voice of a CEO

00:20:54,940 --> 00:20:59,779
and you know they called one of their

00:20:57,559 --> 00:21:01,850
subsidiaries and said well we have a

00:20:59,779 --> 00:21:03,139
very important financial transaction to

00:21:01,850 --> 00:21:05,779
make because we have this big project

00:21:03,139 --> 00:21:07,309
habla so we need you to transfer I don't

00:21:05,779 --> 00:21:10,190
know a million to this and that bank

00:21:07,309 --> 00:21:14,539
account which they actually did and the

00:21:10,190 --> 00:21:17,749
money was well so you know with all this

00:21:14,539 --> 00:21:20,299
you know AI were able to fake you know

00:21:17,749 --> 00:21:23,320
videos and voices and stuff like that

00:21:20,299 --> 00:21:27,169
I think we're facing very interesting

00:21:23,320 --> 00:21:29,869
times so the lines between the inside

00:21:27,169 --> 00:21:31,249
and the outside nowadays are if there

00:21:29,869 --> 00:21:31,700
exists at all I mean they are they're

00:21:31,249 --> 00:21:39,169
blurry

00:21:31,700 --> 00:21:42,110
at best so the actual shift in paradigm

00:21:39,169 --> 00:21:44,720
is is first of all that and that's in

00:21:42,110 --> 00:21:47,509
the word zero trusted networks that no

00:21:44,720 --> 00:21:48,860
traffic can be trusted so it doesn't

00:21:47,509 --> 00:21:51,679
matter where the whether--whether

00:21:48,860 --> 00:21:53,360
request or the traffic originates it

00:21:51,679 --> 00:21:55,279
doesn't matter if it's from a I don't

00:21:53,360 --> 00:21:58,249
know inside your data center from one

00:21:55,279 --> 00:22:00,799
particular machine or if it's from China

00:21:58,249 --> 00:22:02,210
or from I don't know from the other part

00:22:00,799 --> 00:22:06,529
of the world

00:22:02,210 --> 00:22:10,129
no traffic can can be trusted you cannot

00:22:06,529 --> 00:22:12,200
apply or you cannot rely on kind of IP

00:22:10,129 --> 00:22:14,029
based security or traditional

00:22:12,200 --> 00:22:17,330
firewall approach where you know I have

00:22:14,029 --> 00:22:20,779
blocked some IPS and open or closed some

00:22:17,330 --> 00:22:24,049
some some ports and the same is true for

00:22:20,779 --> 00:22:27,649
for users so no user can be trusted not

00:22:24,049 --> 00:22:31,760
even your your admins because at one

00:22:27,649 --> 00:22:33,139
point they may decide to delete your

00:22:31,760 --> 00:22:36,679
data because you made them angry

00:22:33,139 --> 00:22:42,740
so inside and outside personnel has to

00:22:36,679 --> 00:22:47,720
be treated exactly the same way so one

00:22:42,740 --> 00:22:51,500
very important paradigm is move security

00:22:47,720 --> 00:22:53,630
to where the data lives that means if

00:22:51,500 --> 00:22:56,929
you have a traditional approach with a

00:22:53,630 --> 00:23:00,080
firewall or proxy and some examples

00:22:56,929 --> 00:23:02,480
later on that means you're not actually

00:23:00,080 --> 00:23:04,010
protecting you know your your data Lake

00:23:02,480 --> 00:23:06,740
or the place where the data actually

00:23:04,010 --> 00:23:09,110
lives and you move the access control

00:23:06,740 --> 00:23:13,149
before the actual systems which is very

00:23:09,110 --> 00:23:17,000
very dangerous because at some point

00:23:13,149 --> 00:23:19,429
once someone an insider or an outsider

00:23:17,000 --> 00:23:21,320
has passed this access control he

00:23:19,429 --> 00:23:25,159
basically has full access to your data

00:23:21,320 --> 00:23:28,399
alright so that means you cannot have

00:23:25,159 --> 00:23:29,870
any unsecured and services and you need

00:23:28,399 --> 00:23:33,130
you need to make sure that each and

00:23:29,870 --> 00:23:36,590
every service that you run is inherently

00:23:33,130 --> 00:23:38,919
secure you cannot have unencrypted

00:23:36,590 --> 00:23:42,559
traffic and that again comes from the

00:23:38,919 --> 00:23:45,139
comes from the assumption that the

00:23:42,559 --> 00:23:48,500
attackers already in your network so if

00:23:45,139 --> 00:23:51,289
you have some part of your it's a

00:23:48,500 --> 00:23:54,880
network which is unsecured it can be and

00:23:51,289 --> 00:23:59,240
it can and it will be attacked and the

00:23:54,880 --> 00:24:02,179
the interesting thing is that I talked

00:23:59,240 --> 00:24:05,960
about cloud providers before and I have

00:24:02,179 --> 00:24:07,940
some some some knowledge about you know

00:24:05,960 --> 00:24:09,409
it's some bigger cloud providers how

00:24:07,940 --> 00:24:12,820
they're doing and managing their stuff

00:24:09,409 --> 00:24:15,080
internally you would be surprised if you

00:24:12,820 --> 00:24:16,850
if you have a look at the at the

00:24:15,080 --> 00:24:19,490
infrastructure in your architecture so

00:24:16,850 --> 00:24:20,149
if you think that you know everything's

00:24:19,490 --> 00:24:21,769
encrypted

00:24:20,149 --> 00:24:23,870
everything's end-to-end encrypted

00:24:21,769 --> 00:24:25,610
because you're at you know these big

00:24:23,870 --> 00:24:27,919
cloud providers

00:24:25,610 --> 00:24:31,399
you're dead wrong it's just not the case

00:24:27,919 --> 00:24:34,759
so every everyone's you know just in

00:24:31,399 --> 00:24:37,009
Germany would say cooking with water so

00:24:34,759 --> 00:24:40,460
even even the big ones yeah you have

00:24:37,009 --> 00:24:45,440
unsecured unencrypted parts in their big

00:24:40,460 --> 00:24:46,970
cloud infrastructure it's it's there so

00:24:45,440 --> 00:24:49,489
yeah assume attackers are already in

00:24:46,970 --> 00:24:52,399
network and then apply lease privilege

00:24:49,489 --> 00:24:54,019
strategies so by default no one should

00:24:52,399 --> 00:24:57,289
have access to any data that should be

00:24:54,019 --> 00:25:00,679
the default right and then you should

00:24:57,289 --> 00:25:05,029
only provide access kind of on a case by

00:25:00,679 --> 00:25:07,489
case by case basis and the last one is

00:25:05,029 --> 00:25:11,059
also very important inspect and lock all

00:25:07,489 --> 00:25:12,889
the traffic it's not only to detect any

00:25:11,059 --> 00:25:15,139
ongoing data breach

00:25:12,889 --> 00:25:18,559
somebody's no sucking data from your

00:25:15,139 --> 00:25:20,269
network but if a data breach happens

00:25:18,559 --> 00:25:25,759
like the data breaches I showed before

00:25:20,269 --> 00:25:28,759
you need to be able to to know what kind

00:25:25,759 --> 00:25:31,519
of data you actually lost you know which

00:25:28,759 --> 00:25:33,259
records and what was in it and when did

00:25:31,519 --> 00:25:36,799
the data breach happen when did it stop

00:25:33,259 --> 00:25:39,259
stuff like that so logging monitoring

00:25:36,799 --> 00:25:46,070
auditing that's also very important part

00:25:39,259 --> 00:25:48,590
of this whole paradigm so let's have a

00:25:46,070 --> 00:25:50,590
look at a couple of examples and like I

00:25:48,590 --> 00:25:52,820
said I will talk a little bit about

00:25:50,590 --> 00:25:56,830
elastic search in my examples but you

00:25:52,820 --> 00:26:01,429
can apply this to any other let's say

00:25:56,830 --> 00:26:03,679
database data like big data storage so

00:26:01,429 --> 00:26:07,489
this is a very typical example where you

00:26:03,679 --> 00:26:09,710
have unencrypted traffic inside your

00:26:07,489 --> 00:26:12,109
network typically you have your load

00:26:09,710 --> 00:26:14,869
balancer or proxy which terminates your

00:26:12,109 --> 00:26:18,950
TLS traffic this is a scenario that we

00:26:14,869 --> 00:26:21,559
see very very often which means that

00:26:18,950 --> 00:26:24,730
this complete part here on the right is

00:26:21,559 --> 00:26:27,559
actually vulnerable because you have the

00:26:24,730 --> 00:26:33,080
attackers already lurking in your

00:26:27,559 --> 00:26:35,269
network access control outside your data

00:26:33,080 --> 00:26:38,570
storage I already talked about that so

00:26:35,269 --> 00:26:39,350
especially with elastic search that

00:26:38,570 --> 00:26:41,299
would be a tipping

00:26:39,350 --> 00:26:43,910
set up so people would say okay we have

00:26:41,299 --> 00:26:45,890
our elasticsearch cluster running and we

00:26:43,910 --> 00:26:48,770
have sensitive data in it how do we

00:26:45,890 --> 00:26:51,320
control access to it well we have a

00:26:48,770 --> 00:26:53,870
proxy and let's say the proxy doesn't

00:26:51,320 --> 00:26:57,320
terminate TLS so its entry and encrypted

00:26:53,870 --> 00:27:00,140
we implement a TLS pass through and we

00:26:57,320 --> 00:27:02,840
set up some some access control lists of

00:27:00,140 --> 00:27:05,900
our rules regarding who can access which

00:27:02,840 --> 00:27:08,870
data in elasticsearch why are we able to

00:27:05,900 --> 00:27:12,049
do that well it's pretty easy because if

00:27:08,870 --> 00:27:13,820
I inspect the URL so in that case / my

00:27:12,049 --> 00:27:16,370
data my data would be the name of the

00:27:13,820 --> 00:27:19,520
index where the data is stored so I have

00:27:16,370 --> 00:27:21,559
it in my URL I can say okay with my

00:27:19,520 --> 00:27:23,750
nginx I'm doing some I don't know LDAP

00:27:21,559 --> 00:27:25,789
authentication for example and now I

00:27:23,750 --> 00:27:29,179
implement some rules and I can say ok

00:27:25,789 --> 00:27:31,039
user a has access to this my data index

00:27:29,179 --> 00:27:33,260
and the data inside the index and

00:27:31,039 --> 00:27:36,490
another user does not have access to it

00:27:33,260 --> 00:27:41,240
the main problem with this particular

00:27:36,490 --> 00:27:44,510
example here is that at the proxy level

00:27:41,240 --> 00:27:50,780
you actually don't really know what data

00:27:44,510 --> 00:27:53,000
and the user is accessing why because in

00:27:50,780 --> 00:27:55,100
elasticsearch and also other systems you

00:27:53,000 --> 00:27:58,190
have things like for example a white

00:27:55,100 --> 00:28:01,850
card so if I don't use my data but my

00:27:58,190 --> 00:28:04,730
data - star again I don't know at the

00:28:01,850 --> 00:28:07,070
proxy level which in it sees are behind

00:28:04,730 --> 00:28:09,230
that white card it could be one it could

00:28:07,070 --> 00:28:11,780
be a hundred I just don't know that so I

00:28:09,230 --> 00:28:14,929
don't have any chance of implementing

00:28:11,780 --> 00:28:17,960
fine-grained access control when I'm not

00:28:14,929 --> 00:28:21,169
directly at the system where the data is

00:28:17,960 --> 00:28:24,289
stored and especially with with

00:28:21,169 --> 00:28:27,260
elasticsearch you have also stuff like

00:28:24,289 --> 00:28:30,320
an alias for an index so my data might

00:28:27,260 --> 00:28:32,720
not be the actual name of the index you

00:28:30,320 --> 00:28:35,330
have I have date math based index name

00:28:32,720 --> 00:28:37,820
you have Park API is where a lot of

00:28:35,330 --> 00:28:41,059
images are affected my t get multi

00:28:37,820 --> 00:28:43,520
search so what I want to say with this

00:28:41,059 --> 00:28:46,179
or Express with this example is if

00:28:43,520 --> 00:28:48,770
you're not really implementing security

00:28:46,179 --> 00:28:51,350
inside the system where the data is

00:28:48,770 --> 00:28:53,240
hosted you're probably not able to

00:28:51,350 --> 00:28:56,149
actually secure the

00:28:53,240 --> 00:28:58,279
because every system before that doesn't

00:28:56,149 --> 00:29:01,190
really know the internal details of your

00:28:58,279 --> 00:29:10,340
data structure and in that case index

00:29:01,190 --> 00:29:13,309
names so in a clustered system we also

00:29:10,340 --> 00:29:17,570
need to talk about into a node traffic

00:29:13,309 --> 00:29:20,750
so let's say you have end-to-end or you

00:29:17,570 --> 00:29:22,940
have HTTP implemented TLS path through

00:29:20,750 --> 00:29:24,289
the request hits you note ok

00:29:22,940 --> 00:29:27,289
everything's fine everything's encrypted

00:29:24,289 --> 00:29:31,370
on the on the left side but the question

00:29:27,289 --> 00:29:33,620
is what about this traffic here that's

00:29:31,370 --> 00:29:36,700
travelling between your notes so in

00:29:33,620 --> 00:29:39,080
every cluster or distributed system

00:29:36,700 --> 00:29:43,220
where you want to get some data the data

00:29:39,080 --> 00:29:45,320
is probably stored on many nodes in your

00:29:43,220 --> 00:29:48,260
in your system so the nodes need to talk

00:29:45,320 --> 00:29:52,309
to each other to fulfill your search

00:29:48,260 --> 00:29:55,070
request so in that case again since I

00:29:52,309 --> 00:29:57,020
know that already you know I might have

00:29:55,070 --> 00:29:59,600
attackers already in the network they

00:29:57,020 --> 00:30:01,640
could also decide to access the internal

00:29:59,600 --> 00:30:04,640
traffic and just sniff the traffic there

00:30:01,640 --> 00:30:06,649
so I mean it's a it's probably a binary

00:30:04,640 --> 00:30:08,659
protocol but you can you know reverse

00:30:06,649 --> 00:30:13,340
engineer it you can gain access to the

00:30:08,659 --> 00:30:16,880
clear text data and this is some

00:30:13,340 --> 00:30:19,159
objection we hear quite often and their

00:30:16,880 --> 00:30:21,740
objections always well if I use TLS to

00:30:19,159 --> 00:30:24,710
secure my traffic inside my cluster I

00:30:21,740 --> 00:30:26,210
would lose some performance and the

00:30:24,710 --> 00:30:30,350
answer is yes of course you will lose

00:30:26,210 --> 00:30:34,789
some some performance but is it worth

00:30:30,350 --> 00:30:36,140
sacrificing the integrity of your data

00:30:34,789 --> 00:30:38,630
just because of performance

00:30:36,140 --> 00:30:42,110
considerations and again if you go back

00:30:38,630 --> 00:30:44,000
to the examples of the data breaches you

00:30:42,110 --> 00:30:46,159
see that if a data breach happens that

00:30:44,000 --> 00:30:49,450
can get really costly and that can

00:30:46,159 --> 00:30:53,110
actually destroy an entire business and

00:30:49,450 --> 00:30:56,750
the problem when talking with customers

00:30:53,110 --> 00:30:58,820
we sometimes and faces that the

00:30:56,750 --> 00:31:01,669
customers don't don't we are they don't

00:30:58,820 --> 00:31:03,230
want to pay for security regarding money

00:31:01,669 --> 00:31:06,770
regarding performance regarding

00:31:03,230 --> 00:31:10,220
resources and people because they

00:31:06,770 --> 00:31:12,020
realize that well yes it costs money it

00:31:10,220 --> 00:31:15,140
cost some performance but it will be

00:31:12,020 --> 00:31:17,240
even costlier and maybe deadly if

00:31:15,140 --> 00:31:18,950
something happens and that's the main

00:31:17,240 --> 00:31:21,350
the main the main problem

00:31:18,950 --> 00:31:24,470
it gets costly only when the damages is

00:31:21,350 --> 00:31:26,750
already done and that's why in my

00:31:24,470 --> 00:31:31,309
experience is sometimes really hard to

00:31:26,750 --> 00:31:33,500
convince people that they need to secure

00:31:31,309 --> 00:31:34,850
all other traffic even if that means

00:31:33,500 --> 00:31:37,340
they need to buy some additional

00:31:34,850 --> 00:31:40,429
hardware they will lose a couple of

00:31:37,340 --> 00:31:44,270
percent of of performance but these

00:31:40,429 --> 00:31:46,070
attacks also happened in the wild right

00:31:44,270 --> 00:31:46,820
so it's not something that I thought I

00:31:46,070 --> 00:31:49,160
just made up

00:31:46,820 --> 00:31:51,110
if this traffic is unencrypted it can

00:31:49,160 --> 00:31:56,240
sniff it you can tamper with it and you

00:31:51,110 --> 00:31:59,450
can steal it so last one I think this is

00:31:56,240 --> 00:32:03,080
my favorite and this is actually how the

00:31:59,450 --> 00:32:05,750
one login breach happened they didn't

00:32:03,080 --> 00:32:07,730
say whether it was elasticsearch where

00:32:05,750 --> 00:32:09,710
there was a MongoDB whether it was I

00:32:07,730 --> 00:32:13,870
don't know my secret with master-slave

00:32:09,710 --> 00:32:15,980
replication but it works in any case so

00:32:13,870 --> 00:32:17,929
let's say you have your cluster and

00:32:15,980 --> 00:32:20,540
everything's you know security of a

00:32:17,929 --> 00:32:22,820
three node cluster what an attacker can

00:32:20,540 --> 00:32:25,070
actually do is if they have access to

00:32:22,820 --> 00:32:27,920
some parts of your network they can just

00:32:25,070 --> 00:32:30,050
spin up another node let this node join

00:32:27,920 --> 00:32:32,179
your cluster this node gets data

00:32:30,050 --> 00:32:34,309
replicated to it and since it's another

00:32:32,179 --> 00:32:37,220
control of your attacker you know they

00:32:34,309 --> 00:32:40,820
they have gained or access to your data

00:32:37,220 --> 00:32:42,800
and this is true for every system that

00:32:40,820 --> 00:32:44,870
uses some kind of replication or data

00:32:42,800 --> 00:32:46,760
distribution and that's exactly what

00:32:44,870 --> 00:32:49,429
happened with with one look and someone

00:32:46,760 --> 00:32:51,230
they didn't manage to get you know hold

00:32:49,429 --> 00:32:53,330
of the of the main systems but what they

00:32:51,230 --> 00:32:55,880
could do is they could do spin up

00:32:53,330 --> 00:32:57,920
another note like I said it isn't

00:32:55,880 --> 00:33:00,290
mentioned if it's my sequel what system

00:32:57,920 --> 00:33:01,730
it was but it doesn't matter they spun

00:33:00,290 --> 00:33:04,400
up another node and they got data

00:33:01,730 --> 00:33:09,830
replicated to it and of course then no

00:33:04,400 --> 00:33:14,840
control over it so the audit logging

00:33:09,830 --> 00:33:17,150
monitoring example so the the question

00:33:14,840 --> 00:33:19,240
here is let's say we did everything that

00:33:17,150 --> 00:33:20,360
we could and again a data breach

00:33:19,240 --> 00:33:23,269
happened

00:33:20,360 --> 00:33:25,309
so now we need to be able to tell

00:33:23,269 --> 00:33:27,950
exactly what data has been accessed and

00:33:25,309 --> 00:33:30,200
what data has been stolen

00:33:27,950 --> 00:33:32,779
who was it at least I don't know from

00:33:30,200 --> 00:33:36,710
which IP for how long did it the state

00:33:32,779 --> 00:33:38,690
of each last not only to I don't know

00:33:36,710 --> 00:33:41,840
give a statement to your customers but

00:33:38,690 --> 00:33:44,720
if I take gdpr for example into

00:33:41,840 --> 00:33:46,460
consideration its explicitly mentioned

00:33:44,720 --> 00:33:49,909
what you have to do in case of a data

00:33:46,460 --> 00:33:52,490
breach and if you're not able to fulfill

00:33:49,909 --> 00:33:56,929
these requirements it can be really

00:33:52,490 --> 00:34:00,529
really really costly so the question is

00:33:56,929 --> 00:34:04,220
if something happens how do you know the

00:34:00,529 --> 00:34:05,600
details and if you don't have any some

00:34:04,220 --> 00:34:09,320
college audit logging some college

00:34:05,600 --> 00:34:10,879
monitoring so the terms differ here I'm

00:34:09,320 --> 00:34:14,260
a little bit if you don't have anything

00:34:10,879 --> 00:34:18,710
in place and you're not able to actually

00:34:14,260 --> 00:34:22,419
you know determine what was going on

00:34:18,710 --> 00:34:29,000
it could get costly and can get also

00:34:22,419 --> 00:34:32,089
embarrassing so and the last one yeah so

00:34:29,000 --> 00:34:35,510
again it's the same example but the

00:34:32,089 --> 00:34:38,359
question is if you're not applying all

00:34:35,510 --> 00:34:40,030
these privileges strategy then it also

00:34:38,359 --> 00:34:43,010
will be very very hard to determine

00:34:40,030 --> 00:34:48,950
which users able to access what what

00:34:43,010 --> 00:34:53,780
data so what are approaches that we can

00:34:48,950 --> 00:34:55,760
you know use and leverage like I said

00:34:53,780 --> 00:34:58,010
this is this is not a specific

00:34:55,760 --> 00:35:00,290
technology that you can just put inside

00:34:58,010 --> 00:35:02,960
your data center and then you have zero

00:35:00,290 --> 00:35:06,230
trusted a network implemented no it's

00:35:02,960 --> 00:35:08,240
more of a let's say approach or a

00:35:06,230 --> 00:35:11,359
paradigm and kind of a new way of

00:35:08,240 --> 00:35:15,530
thinking about security inside your

00:35:11,359 --> 00:35:16,940
inside your network so the first thing

00:35:15,530 --> 00:35:22,480
that you should do is should identify

00:35:16,940 --> 00:35:25,040
the protect surface and this is mainly

00:35:22,480 --> 00:35:30,589
summarized under critical data assets

00:35:25,040 --> 00:35:33,170
applications and services daas so in my

00:35:30,589 --> 00:35:34,070
example before this could be an elastic

00:35:33,170 --> 00:35:38,150
search cluster

00:35:34,070 --> 00:35:40,280
MongoDB some micro service whatever the

00:35:38,150 --> 00:35:43,000
second thing to do is to map the actual

00:35:40,280 --> 00:35:46,730
transaction flows and this is the

00:35:43,000 --> 00:35:49,010
interdependency between your surfaces

00:35:46,730 --> 00:35:53,230
like the das infrastructure service and

00:35:49,010 --> 00:35:55,430
users so you need to identify which

00:35:53,230 --> 00:35:57,050
basically it's very easy which system is

00:35:55,430 --> 00:35:58,880
talking to what other system which user

00:35:57,050 --> 00:36:04,370
needs to have access to water to what

00:35:58,880 --> 00:36:06,800
system and yeah where where's where or

00:36:04,370 --> 00:36:09,230
how is your data flowing from system to

00:36:06,800 --> 00:36:11,360
system and this includes cloud of course

00:36:09,230 --> 00:36:13,760
as well like I said before if we say

00:36:11,360 --> 00:36:17,360
everything's our parameter or inside our

00:36:13,760 --> 00:36:19,430
parameter that means as the cloud

00:36:17,360 --> 00:36:23,420
services in cloud storage I have to be

00:36:19,430 --> 00:36:28,040
taken into consideration as well then

00:36:23,420 --> 00:36:31,490
well build zero trust architecture this

00:36:28,040 --> 00:36:34,480
is mainly move the access controls as

00:36:31,490 --> 00:36:37,460
close to the protect surface as possible

00:36:34,480 --> 00:36:40,010
so avoid approach is like putting a

00:36:37,460 --> 00:36:42,350
proxy putting a firewall and then you

00:36:40,010 --> 00:36:45,020
know controlling access to your systems

00:36:42,350 --> 00:36:49,850
outside these systems try to move it as

00:36:45,020 --> 00:36:52,760
close to the system as possible this is

00:36:49,850 --> 00:36:54,830
then called a micro parameter and of

00:36:52,760 --> 00:36:56,900
course created zero trust policy which

00:36:54,830 --> 00:37:00,140
means that by default no user should be

00:36:56,900 --> 00:37:02,630
given any access to any data this should

00:37:00,140 --> 00:37:05,570
be the default and the last one of

00:37:02,630 --> 00:37:09,440
course monitor and maintain so be able

00:37:05,570 --> 00:37:12,020
to detect data breaches of course and

00:37:09,440 --> 00:37:14,240
monitor what's going on in your network

00:37:12,020 --> 00:37:18,800
and make sure that you can access this

00:37:14,240 --> 00:37:20,810
information afterwards so in the last

00:37:18,800 --> 00:37:24,610
couple of I don't know weeks or month

00:37:20,810 --> 00:37:27,950
I saw the term micro parameter

00:37:24,610 --> 00:37:30,470
very often and this directly refers to

00:37:27,950 --> 00:37:35,450
move controls as close to protect

00:37:30,470 --> 00:37:38,120
surface as possible so if we say the

00:37:35,450 --> 00:37:41,870
parameter security model doesn't doesn't

00:37:38,120 --> 00:37:45,050
work anymore so how can we kind of you

00:37:41,870 --> 00:37:46,760
know define the boundaries on between

00:37:45,050 --> 00:37:47,510
our systems and that's where the micro

00:37:46,760 --> 00:37:50,840
parameter

00:37:47,510 --> 00:37:53,690
term comes comes into play means that

00:37:50,840 --> 00:37:58,190
every every device and every data source

00:37:53,690 --> 00:38:01,040
is in fact a separate parameter that

00:37:58,190 --> 00:38:03,200
means this was the model that we had

00:38:01,040 --> 00:38:05,420
before so we had a couple of systems

00:38:03,200 --> 00:38:08,720
which are living inside one parameter

00:38:05,420 --> 00:38:11,540
and micro parameter basically means that

00:38:08,720 --> 00:38:14,690
each and every system has its own

00:38:11,540 --> 00:38:16,760
boundary and this boundary is now your

00:38:14,690 --> 00:38:21,410
micro parameter and you need to look at

00:38:16,760 --> 00:38:24,290
each and every system and and determine

00:38:21,410 --> 00:38:27,170
or think about how to protect this

00:38:24,290 --> 00:38:35,570
individual system with this micro

00:38:27,170 --> 00:38:38,680
parameter this is all good in theory in

00:38:35,570 --> 00:38:42,290
practice it poses a lot of challenges to

00:38:38,680 --> 00:38:44,230
companies like I said it's a concept

00:38:42,290 --> 00:38:47,270
it's not a blueprint or it's not a

00:38:44,230 --> 00:38:49,610
step-by-step instruction and if you're

00:38:47,270 --> 00:38:51,290
talking about zero trusted networks the

00:38:49,610 --> 00:38:53,300
implementation will be different from

00:38:51,290 --> 00:38:55,900
company to company to company because

00:38:53,300 --> 00:38:58,940
infrastructures are inherently different

00:38:55,900 --> 00:39:02,600
there's also no really agreed-upon

00:38:58,940 --> 00:39:04,310
general definition what it exactly is

00:39:02,600 --> 00:39:07,730
there are some concepts there are some

00:39:04,310 --> 00:39:09,860
thoughts there are some approaches but

00:39:07,730 --> 00:39:11,480
if you if you ask 10 people what's your

00:39:09,860 --> 00:39:14,060
trusted networks means to them you will

00:39:11,480 --> 00:39:17,060
get 10 different answers so it's more

00:39:14,060 --> 00:39:20,540
about a paradigm shift or a new way of

00:39:17,060 --> 00:39:24,170
thinking then following some you know

00:39:20,540 --> 00:39:27,680
some cookbook and checking's taking some

00:39:24,170 --> 00:39:29,810
some boxes it's not not a single

00:39:27,680 --> 00:39:32,900
technical solution there are vendors out

00:39:29,810 --> 00:39:34,820
there that will promise you okay so if

00:39:32,900 --> 00:39:37,370
you just use our services our appliances

00:39:34,820 --> 00:39:40,370
or you know services then you have CEO

00:39:37,370 --> 00:39:42,230
trusted network implemented this is

00:39:40,370 --> 00:39:45,290
simply not true this is marketing yada

00:39:42,230 --> 00:39:48,560
yada and it doesn't doesn't know anymore

00:39:45,290 --> 00:39:50,570
in practice so it's there's a lot of

00:39:48,560 --> 00:39:52,280
manual work you know a lot of menu and a

00:39:50,570 --> 00:39:56,270
lot of thinking critical thinking

00:39:52,280 --> 00:39:58,040
involved in it it's and it's not only a

00:39:56,270 --> 00:39:59,450
matter of technology it's not only a

00:39:58,040 --> 00:40:01,220
matter of you know implementing

00:39:59,450 --> 00:40:04,609
firewalls and rules and doing

00:40:01,220 --> 00:40:08,240
just purely technical stuff processes

00:40:04,609 --> 00:40:10,849
matter as well so I talked about these

00:40:08,240 --> 00:40:13,940
privileges approach a lot which means if

00:40:10,849 --> 00:40:15,200
no one had default any any excess so

00:40:13,940 --> 00:40:16,849
this is a default but then the question

00:40:15,200 --> 00:40:19,310
is okay but people need to work with

00:40:16,849 --> 00:40:22,180
data so what is our process of

00:40:19,310 --> 00:40:25,339
controlling who gets access to what

00:40:22,180 --> 00:40:28,130
parameter Micro parameter at what time

00:40:25,339 --> 00:40:31,280
for how long and why and why is pretty

00:40:28,130 --> 00:40:32,869
pretty pretty important here because if

00:40:31,280 --> 00:40:36,079
someone says okay I need access to this

00:40:32,869 --> 00:40:41,720
DS net data of course the first question

00:40:36,079 --> 00:40:44,119
should always be why so by default no

00:40:41,720 --> 00:40:46,480
one should have access to any data but

00:40:44,119 --> 00:40:49,880
there must be a process in place for

00:40:46,480 --> 00:40:51,349
granting data also regarding monitoring

00:40:49,880 --> 00:40:54,079
for example you need to have some

00:40:51,349 --> 00:40:56,060
processes in place how to store your

00:40:54,079 --> 00:40:58,369
audit logs who has access to your audit

00:40:56,060 --> 00:41:00,349
logs how to analyze order logs in case

00:40:58,369 --> 00:41:04,220
of a data breach so these are all

00:41:00,349 --> 00:41:07,430
process related questions which means

00:41:04,220 --> 00:41:08,890
that well at least at the moment many

00:41:07,430 --> 00:41:10,880
people would probably agree that

00:41:08,890 --> 00:41:14,270
implementing a CEO trusted Network

00:41:10,880 --> 00:41:17,480
approach is costly why is it costly well

00:41:14,270 --> 00:41:18,770
I talked about these micro parameters

00:41:17,480 --> 00:41:21,829
and you need to have a look at each of

00:41:18,770 --> 00:41:23,990
this micro parameter and determine okay

00:41:21,829 --> 00:41:27,950
what access control can i implement on

00:41:23,990 --> 00:41:29,720
this micro parameter so it's much more

00:41:27,950 --> 00:41:31,490
work than just having you know one

00:41:29,720 --> 00:41:33,440
firewall and then leave all the other

00:41:31,490 --> 00:41:36,890
systems inside your parameter alone

00:41:33,440 --> 00:41:38,900
because it's it's safe but like I said

00:41:36,890 --> 00:41:41,150
if you if you think about it on the

00:41:38,900 --> 00:41:43,640
other hand if you have actually or if

00:41:41,150 --> 00:41:46,700
you suffer from a data breach this can

00:41:43,640 --> 00:41:48,859
be costly so if you compare the the

00:41:46,700 --> 00:41:51,290
costs of implementing and sewer trust

00:41:48,859 --> 00:41:53,230
network approach with a potential cost

00:41:51,290 --> 00:41:56,540
of a data breach you know they're just

00:41:53,230 --> 00:42:03,010
different can add a couple of zeros to

00:41:56,540 --> 00:42:05,839
the to the second one so coming back to

00:42:03,010 --> 00:42:10,310
elastic search because that's what we do

00:42:05,839 --> 00:42:12,740
mainly when we kind of you know thought

00:42:10,310 --> 00:42:15,020
about how to secure an elastic search

00:42:12,740 --> 00:42:18,380
cluster with a zero trusted

00:42:15,020 --> 00:42:20,240
I'm approached in mind I'd like to talk

00:42:18,380 --> 00:42:23,180
a little bit about the you know kind of

00:42:20,240 --> 00:42:26,030
solutions or implementation details that

00:42:23,180 --> 00:42:27,830
we've come up with so on your right-hand

00:42:26,030 --> 00:42:30,980
side you have your data link and that

00:42:27,830 --> 00:42:34,070
case elasticsearch and you need to have

00:42:30,980 --> 00:42:37,850
access from some location from some

00:42:34,070 --> 00:42:39,290
device so I think that's a no-brainer

00:42:37,850 --> 00:42:42,980
so the first thing that we implemented

00:42:39,290 --> 00:42:45,770
was TLS everywhere so on on the rest

00:42:42,980 --> 00:42:51,880
layer but also inside the elastic search

00:42:45,770 --> 00:42:54,500
gesture so you can do of course GLS

00:42:51,880 --> 00:42:55,940
protects you from data sniffing and

00:42:54,500 --> 00:42:58,130
tampering with your data

00:42:55,940 --> 00:43:02,090
but you can add host and verification as

00:42:58,130 --> 00:43:04,520
well DNS lookups you can use it for a

00:43:02,090 --> 00:43:08,150
TLS client authentication and more

00:43:04,520 --> 00:43:11,060
importantly by using TLS also for the

00:43:08,150 --> 00:43:13,280
inter cluster traffic we can make sure

00:43:11,060 --> 00:43:15,619
that only trusted nodes join are able to

00:43:13,280 --> 00:43:18,890
join your cluster so in order to join a

00:43:15,619 --> 00:43:21,619
cluster you need to have a valid we call

00:43:18,890 --> 00:43:24,230
a TLS note certificate which would

00:43:21,619 --> 00:43:26,119
eliminate the attack scenario where some

00:43:24,230 --> 00:43:28,970
of you just you know add another node

00:43:26,119 --> 00:43:31,130
antitrust oh so the whole security

00:43:28,970 --> 00:43:37,550
concept of search card is based heavily

00:43:31,130 --> 00:43:41,390
heavily on TLS then of course role based

00:43:37,550 --> 00:43:43,520
access control and again when you first

00:43:41,390 --> 00:43:47,660
install a search card what we don't have

00:43:43,520 --> 00:43:50,480
is any let's say default user or default

00:43:47,660 --> 00:43:53,420
role so we don't have an admin user we

00:43:50,480 --> 00:43:55,820
don't have a super user if you install

00:43:53,420 --> 00:43:57,290
it then the first thing that happens is

00:43:55,820 --> 00:43:59,119
you don't have access to your data

00:43:57,290 --> 00:44:01,790
anymore because we do the lease

00:43:59,119 --> 00:44:05,270
privileges approach so by default there

00:44:01,790 --> 00:44:09,500
are no rules there are no users and ya

00:44:05,270 --> 00:44:12,200
know no privileges now okay how can you

00:44:09,500 --> 00:44:14,600
actually how can you actually set up

00:44:12,200 --> 00:44:16,820
some rules because now it's quite

00:44:14,600 --> 00:44:19,790
unusable if no one has access to your

00:44:16,820 --> 00:44:23,590
data so the idea that we came up with

00:44:19,790 --> 00:44:27,950
again based on TLS so we have a deal as

00:44:23,590 --> 00:44:28,640
we call it TLS admin certificate this is

00:44:27,950 --> 00:44:31,220
a TLS

00:44:28,640 --> 00:44:32,630
certificate which you can configure in

00:44:31,220 --> 00:44:36,170
elasticsearch and give it admin

00:44:32,630 --> 00:44:39,140
privileges and by using this admin

00:44:36,170 --> 00:44:42,170
certificate you can actually set up your

00:44:39,140 --> 00:44:45,140
users and your roles now the thing is

00:44:42,170 --> 00:44:47,360
that this admin client certificate has

00:44:45,140 --> 00:44:49,520
to be generated by the customer it's not

00:44:47,360 --> 00:44:53,810
generated by us we don't ship you know

00:44:49,520 --> 00:44:56,300
some some default certificate so the

00:44:53,810 --> 00:45:03,560
admin access to the system is under full

00:44:56,300 --> 00:45:06,140
control of the of the customer then of

00:45:03,560 --> 00:45:08,120
course we have the document level field

00:45:06,140 --> 00:45:10,310
level security so fine grained access

00:45:08,120 --> 00:45:13,430
control to your data in elastic search

00:45:10,310 --> 00:45:16,430
and search card is implemented as a

00:45:13,430 --> 00:45:18,470
plugin to elastic search which means

00:45:16,430 --> 00:45:21,560
that we can apply the security measures

00:45:18,470 --> 00:45:23,300
directly on your cluster it's not some

00:45:21,560 --> 00:45:25,190
system that's running before elastic

00:45:23,300 --> 00:45:27,260
search it's running inside elastic

00:45:25,190 --> 00:45:30,680
search which makes it possible to

00:45:27,260 --> 00:45:33,430
determine exactly which data in which

00:45:30,680 --> 00:45:37,540
index is being accessed by which user

00:45:33,430 --> 00:45:40,460
which documents are returned by a query

00:45:37,540 --> 00:45:42,830
which fields are returned by a career

00:45:40,460 --> 00:45:45,920
stuff like that so since we're hooking

00:45:42,830 --> 00:45:49,490
into elastic search request flow we're

00:45:45,920 --> 00:45:52,670
able to actually yeah do that and then

00:45:49,490 --> 00:45:54,830
of course monitor everything so you can

00:45:52,670 --> 00:45:56,600
track if you so wish you can track

00:45:54,830 --> 00:45:58,430
everything that's going on in your in

00:45:56,600 --> 00:46:01,040
your cluster you can track of course

00:45:58,430 --> 00:46:03,440
stuff like failed login attempts or as

00:46:01,040 --> 00:46:06,190
someone tries to spoof a TLS certificate

00:46:03,440 --> 00:46:08,960
but if you so wish you can also track

00:46:06,190 --> 00:46:11,270
successful searches you can track which

00:46:08,960 --> 00:46:13,520
user has executed what search you can

00:46:11,270 --> 00:46:15,950
track what documents this particular

00:46:13,520 --> 00:46:19,040
user accessed you can also track what

00:46:15,950 --> 00:46:21,080
fields a particular user has accessed so

00:46:19,040 --> 00:46:23,480
you get a complete audit trail of

00:46:21,080 --> 00:46:27,080
everything that's going on in your

00:46:23,480 --> 00:46:29,030
cluster now you might say ok but if I

00:46:27,080 --> 00:46:31,220
have a class that's heavily under load

00:46:29,030 --> 00:46:33,590
where do I store that information

00:46:31,220 --> 00:46:34,910
that's probably topic for a different

00:46:33,590 --> 00:46:38,660
talk of course you need to store it

00:46:34,910 --> 00:46:41,630
somewhere but at least you can you can

00:46:38,660 --> 00:46:42,380
generate this this audit trail so we

00:46:41,630 --> 00:46:44,300
have encrypt

00:46:42,380 --> 00:46:46,730
end-to-end encryption if the first one

00:46:44,300 --> 00:46:50,000
were able to control who's able to join

00:46:46,730 --> 00:46:52,640
your cluster we have a role based access

00:46:50,000 --> 00:46:55,990
control with a lease privileges approach

00:46:52,640 --> 00:46:58,010
means we don't ship any roles by default

00:46:55,990 --> 00:47:00,320
instead we use the GLS client

00:46:58,010 --> 00:47:02,510
certificate we can control access to

00:47:00,320 --> 00:47:04,730
your data from cluster all the way down

00:47:02,510 --> 00:47:07,310
to the individual feed level and we can

00:47:04,730 --> 00:47:09,140
generate complete order log information

00:47:07,310 --> 00:47:13,040
of everything that's that's going on in

00:47:09,140 --> 00:47:14,870
your cluster so that's our our CEO

00:47:13,040 --> 00:47:18,890
trusted Network approach for this

00:47:14,870 --> 00:47:21,350
particular product like I said this talk

00:47:18,890 --> 00:47:22,810
is not about pure elasticsearch like I

00:47:21,350 --> 00:47:24,620
said this can be applied to any other

00:47:22,810 --> 00:47:27,970
technology as well

00:47:24,620 --> 00:47:32,360
MongoDB Kafka Redis you know you name it

00:47:27,970 --> 00:47:37,810
but that would be an example how we how

00:47:32,360 --> 00:47:43,370
we try to do that inside our product so

00:47:37,810 --> 00:47:45,800
if there are only two things for you to

00:47:43,370 --> 00:47:48,650
take away from this talk then I would

00:47:45,800 --> 00:47:51,050
like it to be trust no one and the

00:47:48,650 --> 00:47:55,270
second one assume that the attacker is

00:47:51,050 --> 00:48:02,849
already in your network thanks very much

00:47:55,270 --> 00:48:05,650
[Applause]

00:48:02,849 --> 00:48:13,029
so I guess we have some minutes for any

00:48:05,650 --> 00:48:15,039
questions there any yeah I see one we

00:48:13,029 --> 00:48:17,440
are in the front please speak into the

00:48:15,039 --> 00:48:19,900
microphone yes hello

00:48:17,440 --> 00:48:21,670
thanks for a great talk I have one point

00:48:19,900 --> 00:48:25,630
to add and one question the question

00:48:21,670 --> 00:48:27,819
first how is there a plan in this

00:48:25,630 --> 00:48:30,400
concept how to micromanage all these

00:48:27,819 --> 00:48:35,160
policies because then I need a policy

00:48:30,400 --> 00:48:39,690
manager it's a very good question so

00:48:35,160 --> 00:48:43,509
there's no single product that I know of

00:48:39,690 --> 00:48:46,029
to manage the policies for let's say all

00:48:43,509 --> 00:48:49,180
these micro parameters that's a big

00:48:46,029 --> 00:48:51,069
challenge at the moment so there are

00:48:49,180 --> 00:48:52,930
people kind of you know working on that

00:48:51,069 --> 00:48:55,960
but as far as I know no ready-made

00:48:52,930 --> 00:48:57,910
product at the moment so it is a lot of

00:48:55,960 --> 00:49:00,400
you know menu of work a lot of

00:48:57,910 --> 00:49:02,619
documentation that you need to do that's

00:49:00,400 --> 00:49:05,200
why I said it's it's costly and then

00:49:02,619 --> 00:49:07,059
also involves processes so I don't know

00:49:05,200 --> 00:49:09,849
of any product that would give you that

00:49:07,059 --> 00:49:12,609
out of the box at the moment ok then my

00:49:09,849 --> 00:49:15,910
point to add when you do automation like

00:49:12,609 --> 00:49:19,329
puppet or protect the server because we

00:49:15,910 --> 00:49:21,999
had an internal audit and the first

00:49:19,329 --> 00:49:23,799
thing the internal attacker was owning

00:49:21,999 --> 00:49:29,049
the puppet server and then deploying

00:49:23,799 --> 00:49:34,499
would use on all servers we have to

00:49:29,049 --> 00:49:37,509
check automation has to be secure and

00:49:34,499 --> 00:49:40,079
that's a good point and maybe I would

00:49:37,509 --> 00:49:44,049
like to add one more I didn't talk about

00:49:40,079 --> 00:49:46,749
encryption yet at rest so a lot of

00:49:44,049 --> 00:49:48,069
people if they have data on a cloud

00:49:46,749 --> 00:49:53,319
let's say owner has three bucket or

00:49:48,069 --> 00:49:54,880
somewhere it's in in many cases the data

00:49:53,319 --> 00:49:57,729
is not encrypted so it's just sitting

00:49:54,880 --> 00:50:00,339
there in plain text and that's when

00:49:57,729 --> 00:50:01,719
where I always wonder ok if I have my

00:50:00,339 --> 00:50:04,119
sensitive data they are sitting in plain

00:50:01,719 --> 00:50:06,640
text and I have some administrator from

00:50:04,119 --> 00:50:08,319
Asia from AWS which needs to have access

00:50:06,640 --> 00:50:10,960
to this machine for I don't know

00:50:08,319 --> 00:50:14,179
maintenance or whatever then this person

00:50:10,960 --> 00:50:17,809
you know has also access to my data

00:50:14,179 --> 00:50:20,059
and I mean call me paranoid maybe that

00:50:17,809 --> 00:50:22,729
didn't happen but you know if someone

00:50:20,059 --> 00:50:29,569
has access to your data the potentials

00:50:22,729 --> 00:50:41,599
there that the data can get lost okay

00:50:29,569 --> 00:50:44,059
any other question well now hello when

00:50:41,599 --> 00:50:46,999
you audit the data or the search result

00:50:44,059 --> 00:50:49,009
from a customer or user do you record

00:50:46,999 --> 00:50:52,369
them at the moment when they get that

00:50:49,009 --> 00:50:54,739
search result yes you can so what you

00:50:52,369 --> 00:50:56,899
can do is you can configure search cut

00:50:54,739 --> 00:50:58,969
in a way that you say let's say you have

00:50:56,899 --> 00:51:00,919
PRI data stored in a system including

00:50:58,969 --> 00:51:01,729
first name last name email that falls

00:51:00,919 --> 00:51:03,799
under gdpr

00:51:01,729 --> 00:51:07,849
so you can say I want to have an audit

00:51:03,799 --> 00:51:11,659
trail of all users that access this

00:51:07,849 --> 00:51:13,309
particular PII data in my index and then

00:51:11,659 --> 00:51:15,890
we will generate an audit trail saying

00:51:13,309 --> 00:51:17,959
that user a did a search which looked

00:51:15,890 --> 00:51:20,209
like that isn't that and the search

00:51:17,959 --> 00:51:23,839
engine returned these and that documents

00:51:20,209 --> 00:51:27,049
with this particular PII fields in it so

00:51:23,839 --> 00:51:30,339
it's really the auditing the actual

00:51:27,049 --> 00:51:40,399
search result as well you can do that

00:51:30,339 --> 00:51:41,889
thank you okay it's like it an auction

00:51:40,399 --> 00:51:46,130
don't raise your hand

00:51:41,889 --> 00:51:49,449
okay I guess thank you for your stories

00:51:46,130 --> 00:51:49,449
one week after Halloween

00:51:50,030 --> 00:52:04,760
[Applause]

00:51:53,360 --> 00:52:04,760
[Music]

00:52:08,350 --> 00:52:11,119

YouTube URL: https://www.youtube.com/watch?v=5KQzjS0cFjU


