Title: OSMC 2019 | HRS-Connect â€“ Open Source IoT Monitoring by Nicolai Buchwitz
Publication date: 2019-11-18
Playlist: OSMC 2019 | Open Source Monitoring Conference
Description: 
	The expansion of hydrogen refueling stations in Germany and Europe is progressing rapidly. But how to maintain the overview of all relevant parameters and fault messages? How can the refuelling processes be analysed in realtime in order to improve the systems together with the manufacturers? And how does the data from the system actually get into the monitoring system? This presentation will show how a powerful IoT monitoring solution was developed based on the hardware of the RevPi platform and open source software such as Ansible, Icinga2, InfluxDB and Grafana, which helps to ensure the availability of the hydrogen infrastructure and optimize it further.


NETWAYS
Konferenzen: https://www.netways.de/events
Schulungen: https://www.netways.de/schulungen
Shop: https://shop.netways.de/
Blog: http://blog.netways.de/
NWS: https://nws.netways.de

Webinare
Archiv Link: https://www.netways.de/webinare/archi...
Aktuell: https://www.netways.de/wb

Social Media
SlideShare: http://de.slideshare.net/netways
YouTube: https://www.netways.de/youtube
Facebook: https://www.facebook.com/netways
Twitter: https://twitter.com/netways
Instagram: https://www.instagram.com/netwaysgmbh/

Musik: FRAMETRAXX
Captions: 
	00:00:13,050 --> 00:00:21,760
thank you yeah I will try to bring to

00:00:18,490 --> 00:00:23,920
you our approach how we fit both words

00:00:21,760 --> 00:00:26,950
of classic industrial components within

00:00:23,920 --> 00:00:30,520
modern IT it could be quite a challenge

00:00:26,950 --> 00:00:33,730
and yeah we worked last year on a

00:00:30,520 --> 00:00:36,700
project which I will present to you so

00:00:33,730 --> 00:00:38,440
Who am I I'm Nicola buffett's I work for

00:00:36,700 --> 00:00:41,410
a small company based in Berlin called

00:00:38,440 --> 00:00:43,059
Enda we mostly do monitoring and

00:00:41,410 --> 00:00:45,960
software solutions for federal agencies

00:00:43,059 --> 00:00:49,720
and also the European Commission and

00:00:45,960 --> 00:00:51,550
also for industrial customers like this

00:00:49,720 --> 00:00:56,070
one was responsible for building

00:00:51,550 --> 00:00:58,300
hydrogen fueling stations in Germany

00:00:56,070 --> 00:01:01,060
what is a project

00:00:58,300 --> 00:01:03,820
I want to talk about we are monitoring

00:01:01,060 --> 00:01:06,880
hydrogen refueling stations in real time

00:01:03,820 --> 00:01:10,180
real time means within 100 to 500

00:01:06,880 --> 00:01:13,509
milliseconds per metric and we are

00:01:10,180 --> 00:01:16,960
monitoring the refueling process of cars

00:01:13,509 --> 00:01:19,719
will come by and refill hydrogen we do

00:01:16,960 --> 00:01:23,950
some sort of predictive maintenance to

00:01:19,719 --> 00:01:26,979
see when components might be yeah

00:01:23,950 --> 00:01:29,259
failure or something has to be changed

00:01:26,979 --> 00:01:31,270
like a ball for what is mounted on such

00:01:29,259 --> 00:01:33,069
stations we've built a maintenance

00:01:31,270 --> 00:01:35,560
application which also has a task

00:01:33,069 --> 00:01:38,170
scheduler for all the staff who's

00:01:35,560 --> 00:01:40,960
responsible of taking care of sea

00:01:38,170 --> 00:01:43,630
stations so every maintenance work

00:01:40,960 --> 00:01:45,490
on-site is scheduled within and big I

00:01:43,630 --> 00:01:48,399
think a web module which is integrated

00:01:45,490 --> 00:01:50,979
in the rest of the monitoring we also do

00:01:48,399 --> 00:01:55,659
some sort of availability reporting and

00:01:50,979 --> 00:01:57,939
also for customers as an app so if

00:01:55,659 --> 00:01:59,529
you're on hydrogen a few said driver you

00:01:57,939 --> 00:02:01,959
can look on your smartphone it's a

00:01:59,529 --> 00:02:04,270
station nearby it's working you know can

00:02:01,959 --> 00:02:06,100
do your planning and see where the next

00:02:04,270 --> 00:02:08,170
ation is because we don't have so much

00:02:06,100 --> 00:02:10,149
mental stations in Germany you have

00:02:08,170 --> 00:02:12,940
around 100 stations by the end of the

00:02:10,149 --> 00:02:16,980
year so it could be helpful to see where

00:02:12,940 --> 00:02:16,980
the next station and station working

00:02:17,610 --> 00:02:24,670
while is in HS the HS and hydrogen

00:02:21,520 --> 00:02:26,770
refueling station is an somehow complex

00:02:24,670 --> 00:02:31,030
system but you could

00:02:26,770 --> 00:02:32,530
bring it down to this basic components

00:02:31,030 --> 00:02:39,040
like you have some source of hydrogen

00:02:32,530 --> 00:02:41,410
which could be a large cube on site or

00:02:39,040 --> 00:02:44,800
even smaller tubes like you know from

00:02:41,410 --> 00:02:46,750
school from chemical lessons there's

00:02:44,800 --> 00:02:49,180
always a compressor to bring up the

00:02:46,750 --> 00:02:52,330
hydrogen to a certain treasure because

00:02:49,180 --> 00:02:55,390
hydrogen is refilled with 700 bars in

00:02:52,330 --> 00:02:58,180
cars and 350 bars for larger trucks or

00:02:55,390 --> 00:03:01,830
buses so you need to compress the

00:02:58,180 --> 00:03:05,350
hydrogen and store it into two different

00:03:01,830 --> 00:03:07,990
steps middle pressure pink whereas a

00:03:05,350 --> 00:03:10,870
hydrogen is thought around 400 to 500

00:03:07,990 --> 00:03:15,430
Bao and also a high pressure bank where

00:03:10,870 --> 00:03:19,600
the hydrogen is at 7 700 750 bar right

00:03:15,430 --> 00:03:22,990
to fill it into account because you have

00:03:19,600 --> 00:03:24,940
to cool it down to such a low

00:03:22,990 --> 00:03:27,160
temperature you have a specific cooling

00:03:24,940 --> 00:03:29,590
solution which is one of the components

00:03:27,160 --> 00:03:33,550
who are likely to fail in such a station

00:03:29,590 --> 00:03:36,010
especially in the summer and Dispenza

00:03:33,550 --> 00:03:38,980
which is responsible for refueling your

00:03:36,010 --> 00:03:44,950
car you already know from from classic

00:03:38,980 --> 00:03:47,110
refueling stations where can review yeah

00:03:44,950 --> 00:03:50,410
what's the situation in Germany we have

00:03:47,110 --> 00:03:52,660
at least four manufacturers from now two

00:03:50,410 --> 00:03:55,870
of them are known as gas companies like

00:03:52,660 --> 00:03:59,530
Lindy and Ellicott there's also an oven

00:03:55,870 --> 00:04:01,960
- a Danish one and new one from the

00:03:59,530 --> 00:04:05,230
Netherlands which will build stations

00:04:01,960 --> 00:04:08,500
next year so we have 50 manufacturer

00:04:05,230 --> 00:04:11,680
model combinations because it's a fastly

00:04:08,500 --> 00:04:14,320
developing technology we get every year

00:04:11,680 --> 00:04:17,530
or two a new station so we have to adapt

00:04:14,320 --> 00:04:19,770
new parameters new control systems and

00:04:17,530 --> 00:04:22,750
keep on track with the technology

00:04:19,770 --> 00:04:24,820
there's also the app I'm n shinned so if

00:04:22,750 --> 00:04:27,910
you're hydrogen driver you already will

00:04:24,820 --> 00:04:30,520
know it's called h2 life you can

00:04:27,910 --> 00:04:35,669
download and play store or on Google

00:04:30,520 --> 00:04:38,710
Play this isn't quick overview about the

00:04:35,669 --> 00:04:40,070
stations in Germany you can see they are

00:04:38,710 --> 00:04:43,220
located

00:04:40,070 --> 00:04:46,640
in the west of Germany and where the big

00:04:43,220 --> 00:04:48,800
cities are and also in the south we are

00:04:46,640 --> 00:04:52,010
the car manufacturers are which are

00:04:48,800 --> 00:04:55,640
doing research on hydrogen cars and in

00:04:52,010 --> 00:04:57,890
bigger areas like Berlin or Hamburg but

00:04:55,640 --> 00:05:00,080
there's also a growing amount of

00:04:57,890 --> 00:05:03,560
stations and the eastern of Germany's

00:05:00,080 --> 00:05:06,320
blue ones on a building process so

00:05:03,560 --> 00:05:08,870
they're highly likely to open this year

00:05:06,320 --> 00:05:11,240
or in the beginning of the next year in

00:05:08,870 --> 00:05:13,130
the region of Nuremberg we have one

00:05:11,240 --> 00:05:16,220
directly in Rome back and five around

00:05:13,130 --> 00:05:18,380
and by Road in people read filled Chanel

00:05:16,220 --> 00:05:20,860
Adolphe on the Erlang these are two

00:05:18,380 --> 00:05:23,570
stations this is one in Nuremberg and

00:05:20,860 --> 00:05:26,230
freshly opened stations this year in

00:05:23,570 --> 00:05:28,880
filt which is located at a Shell station

00:05:26,230 --> 00:05:30,980
because Michelle and turtle are

00:05:28,880 --> 00:05:33,470
shareholders of the h2 mobility who

00:05:30,980 --> 00:05:35,900
built the station so most of the

00:05:33,470 --> 00:05:42,680
stations were integrated into existing

00:05:35,900 --> 00:05:44,890
filling stations the system we had the

00:05:42,680 --> 00:05:47,480
challenge to access industrial

00:05:44,890 --> 00:05:50,540
components and everyone who has ever

00:05:47,480 --> 00:05:52,280
talked to industrial engineers now how

00:05:50,540 --> 00:05:56,000
complicated could be to integrate

00:05:52,280 --> 00:05:58,190
existing control system because for them

00:05:56,000 --> 00:06:01,190
communication is like uploading a text

00:05:58,190 --> 00:06:03,860
file on ftp server but it's not data

00:06:01,190 --> 00:06:07,430
exchange as we mean we talk about api's

00:06:03,860 --> 00:06:08,980
jason mqtt was a fun stuff and as they

00:06:07,430 --> 00:06:13,760
come around with plain text files

00:06:08,980 --> 00:06:16,820
we've given format so there's a company

00:06:13,760 --> 00:06:19,340
and Germany it's called canvas who is

00:06:16,820 --> 00:06:22,160
doing very cool stuff around the

00:06:19,340 --> 00:06:24,320
raspberry pi community they took the

00:06:22,160 --> 00:06:29,030
Raspberry Pi computer modules computing

00:06:24,320 --> 00:06:30,970
those three and build little computers

00:06:29,030 --> 00:06:33,860
which can be mounted on din rail and

00:06:30,970 --> 00:06:37,160
also build a lot of extension modules

00:06:33,860 --> 00:06:40,960
like digital input/output analog modules

00:06:37,160 --> 00:06:43,580
or even gateways for the big industrial

00:06:40,960 --> 00:06:46,370
protocols like poofy net profit boosts

00:06:43,580 --> 00:06:49,310
or in mypos

00:06:46,370 --> 00:06:51,650
they have patched the linux kernel with

00:06:49,310 --> 00:06:53,600
real-time pictures because you want to

00:06:51,650 --> 00:06:57,110
access the data on a

00:06:53,600 --> 00:06:59,930
highly frequencies like 100 milliseconds

00:06:57,110 --> 00:07:03,200
or more so there was a lot of work to do

00:06:59,930 --> 00:07:04,760
but it's all on github you can find

00:07:03,200 --> 00:07:07,910
these sources you can find the

00:07:04,760 --> 00:07:11,870
schematics of the hardware and there's

00:07:07,910 --> 00:07:14,330
always yeah what you can do and there's

00:07:11,870 --> 00:07:15,410
also a mega kit so if you want to build

00:07:14,330 --> 00:07:19,130
your own hardware on this platform

00:07:15,410 --> 00:07:25,700
there's a housing and a platform you can

00:07:19,130 --> 00:07:27,890
build on that's a system we built we

00:07:25,700 --> 00:07:30,560
mounted on each station three components

00:07:27,890 --> 00:07:32,840
basically at the compute model it's like

00:07:30,560 --> 00:07:35,720
the Raspberry Pi digital input and

00:07:32,840 --> 00:07:40,670
output modules for some binary sensors

00:07:35,720 --> 00:07:42,410
or to control a pump on site if we have

00:07:40,670 --> 00:07:45,290
some problem with water in the control

00:07:42,410 --> 00:07:48,770
cabinet and to have some input outputs

00:07:45,290 --> 00:07:51,550
and also a gateway module to access the

00:07:48,770 --> 00:07:54,220
field post could be one of these three

00:07:51,550 --> 00:07:57,680
but there are a lot of more possible

00:07:54,220 --> 00:08:00,410
solutions and after that we are pre

00:07:57,680 --> 00:08:04,310
processing the data on the Raspberry Pi

00:08:00,410 --> 00:08:07,610
and sending it why mqtt encrypted with

00:08:04,310 --> 00:08:11,150
TLS into our cloud where are we doing or

00:08:07,610 --> 00:08:12,680
the compute stuff like reporting writing

00:08:11,150 --> 00:08:17,360
metrics to the time series database

00:08:12,680 --> 00:08:20,120
alerting and so on that's how the

00:08:17,360 --> 00:08:24,470
situation on site looks like it's not a

00:08:20,120 --> 00:08:26,690
typical data center but a bit similar

00:08:24,470 --> 00:08:30,290
you have the components like a router

00:08:26,690 --> 00:08:32,990
power supply and so on and very useless

00:08:30,290 --> 00:08:35,030
part here it's a heating system for a

00:08:32,990 --> 00:08:38,060
control cabinet but modern computers

00:08:35,030 --> 00:08:41,650
produce a lot of heat so we never had

00:08:38,060 --> 00:08:45,680
the case we needed two heating system

00:08:41,650 --> 00:08:48,320
all components are fully independent of

00:08:45,680 --> 00:08:50,330
the rest of the station because we only

00:08:48,320 --> 00:08:52,310
have a power supply but if the power

00:08:50,330 --> 00:08:54,200
supply is cotton with bigger problems

00:08:52,310 --> 00:08:56,650
than our monitoring system but

00:08:54,200 --> 00:09:00,370
everything else is fully redundant and

00:08:56,650 --> 00:09:04,010
independent from the rest of the system

00:09:00,370 --> 00:09:06,390
the data collection started with icing

00:09:04,010 --> 00:09:09,060
a2 on there are three piles

00:09:06,390 --> 00:09:11,610
it's why we also supported building

00:09:09,060 --> 00:09:15,360
packages for the Raspberry Pi platform

00:09:11,610 --> 00:09:18,000
for icinga but we faced issues because

00:09:15,360 --> 00:09:22,170
we wanted to gather metrics at a higher

00:09:18,000 --> 00:09:25,520
level and also at 100 to 500

00:09:22,170 --> 00:09:27,690
milliseconds with 200 metrics it's not

00:09:25,520 --> 00:09:30,330
something you want to do with a single

00:09:27,690 --> 00:09:32,880
on a Raspberry Pi and it's it's not

00:09:30,330 --> 00:09:35,490
built for that so we build our own data

00:09:32,880 --> 00:09:39,410
acquisition agent which is basically a

00:09:35,490 --> 00:09:42,210
small Python program there's a library

00:09:39,410 --> 00:09:45,270
for for this hyper platform and it's

00:09:42,210 --> 00:09:48,020
sending the metrics with MQTT to our

00:09:45,270 --> 00:09:50,250
cloud where Telegraph and influx DB is

00:09:48,020 --> 00:09:53,450
responsible for handling all the metrics

00:09:50,250 --> 00:09:57,110
and writing it on to database we're also

00:09:53,450 --> 00:10:00,990
writing aggregated refueling logs into a

00:09:57,110 --> 00:10:03,270
squirrel database and also monitoring

00:10:00,990 --> 00:10:08,310
on-site these sources hydrogen nitrogen

00:10:03,270 --> 00:10:10,730
other gases and triggering refueling at

00:10:08,310 --> 00:10:16,260
the vendor who is responsible for

00:10:10,730 --> 00:10:18,720
bringing new stuff it's very easy to

00:10:16,260 --> 00:10:20,520
write such a program it's a bit of

00:10:18,720 --> 00:10:24,450
Python code you'll need two libraries

00:10:20,520 --> 00:10:27,030
like PI Mario it's the library is

00:10:24,450 --> 00:10:30,570
responsible to communicate with the ref

00:10:27,030 --> 00:10:33,420
type platform and power MQTT for the m

00:10:30,570 --> 00:10:35,250
QT stuff but you can also do other

00:10:33,420 --> 00:10:38,160
databases of write it to a MySQL

00:10:35,250 --> 00:10:42,450
PostgreSQL or everything you want to run

00:10:38,160 --> 00:10:45,110
on your raspberry pi it's fully written

00:10:42,450 --> 00:10:48,330
in Python 3 because python 2 is obsolete

00:10:45,110 --> 00:10:51,420
some of you will hopefully have migrated

00:10:48,330 --> 00:10:56,090
everything to Python tree if not it's

00:10:51,420 --> 00:11:00,380
time I can say and it's very easy to

00:10:56,090 --> 00:11:03,990
getting started with similar programs

00:11:00,380 --> 00:11:06,900
our visual is visualization is done

00:11:03,990 --> 00:11:09,720
within ravana because agra fauna is very

00:11:06,900 --> 00:11:12,360
easy for us to bring in on metrics from

00:11:09,720 --> 00:11:16,140
different systems like from SQL database

00:11:12,360 --> 00:11:18,540
also from influx TP and also write own

00:11:16,140 --> 00:11:20,040
data sources for graph on ax because we

00:11:18,540 --> 00:11:22,829
have a lot of data too

00:11:20,040 --> 00:11:24,630
driving the stations like a name of a

00:11:22,829 --> 00:11:27,449
sensor where's the sensor located in the

00:11:24,630 --> 00:11:30,269
station what's a manufacturer of the

00:11:27,449 --> 00:11:32,190
sensor and so on and so we built a

00:11:30,269 --> 00:11:35,759
custom data source to make it possible

00:11:32,190 --> 00:11:38,839
for our supervisor to access all the

00:11:35,759 --> 00:11:42,240
data within a specific dashboard and

00:11:38,839 --> 00:11:44,639
it's so easy that our supervisors who

00:11:42,240 --> 00:11:45,630
are mostly technical stuff started to

00:11:44,639 --> 00:11:47,910
use Gahanna

00:11:45,630 --> 00:11:50,040
and build their own dashboards and it's

00:11:47,910 --> 00:11:53,370
very funny to see a technician on site

00:11:50,040 --> 00:11:55,740
with a notebook on the top of the car

00:11:53,370 --> 00:11:57,540
working on his station and looking at

00:11:55,740 --> 00:11:59,459
life values from the station with a

00:11:57,540 --> 00:12:02,519
custom dashboard he or she builds

00:11:59,459 --> 00:12:05,089
herself and so it's very easy to start

00:12:02,519 --> 00:12:08,250
with gravano

00:12:05,089 --> 00:12:12,000
we have built one basic dashboard for

00:12:08,250 --> 00:12:13,829
each station type we have because it's

00:12:12,000 --> 00:12:17,940
not similar what the hardware looks like

00:12:13,829 --> 00:12:20,399
so we have different sensors and types

00:12:17,940 --> 00:12:22,279
of stations and if you are bringing in

00:12:20,399 --> 00:12:24,810
all events on this station with

00:12:22,279 --> 00:12:27,290
annotations like refueling it happened

00:12:24,810 --> 00:12:30,209
or alarm was raised on the station

00:12:27,290 --> 00:12:32,190
station is out of opening hours and so

00:12:30,209 --> 00:12:35,430
on so it can easily access this kind of

00:12:32,190 --> 00:12:37,680
data with a new dashboard we also build

00:12:35,430 --> 00:12:40,470
special dashboards like our refueling

00:12:37,680 --> 00:12:43,050
archive where supervisor can see all

00:12:40,470 --> 00:12:45,569
refuelings all over Germany or for a

00:12:43,050 --> 00:12:48,449
specific station and deep dive into the

00:12:45,569 --> 00:12:51,290
data and do problem analysis for

00:12:48,449 --> 00:12:54,600
specific queries he is interested in and

00:12:51,290 --> 00:12:56,610
some months ago the CEO asked okay I

00:12:54,600 --> 00:12:59,010
have seen all the cool dashboards I want

00:12:56,610 --> 00:13:01,529
also one could I have a big screen in my

00:12:59,010 --> 00:13:04,079
office and I want to see metrics like

00:13:01,529 --> 00:13:06,269
how much hydrogen we have sailed

00:13:04,079 --> 00:13:07,980
what's the availability about our

00:13:06,269 --> 00:13:10,410
stations and so we are building new

00:13:07,980 --> 00:13:15,180
dashboards for new parts of the company

00:13:10,410 --> 00:13:17,819
from the same data it's an example that

00:13:15,180 --> 00:13:20,399
dashboard what we have done with our

00:13:17,819 --> 00:13:23,939
data you can see a compressor in the

00:13:20,399 --> 00:13:27,889
station it's like here you have sea

00:13:23,939 --> 00:13:30,200
pressure pings and you can slowly

00:13:27,889 --> 00:13:32,810
pressure goes up

00:13:30,200 --> 00:13:34,730
and you can also see how the compressor

00:13:32,810 --> 00:13:37,970
is working like up and down up and down

00:13:34,730 --> 00:13:39,560
you can see what's actually happening

00:13:37,970 --> 00:13:42,880
inside of the compressor and if

00:13:39,560 --> 00:13:47,150
something is faulty you would see one

00:13:42,880 --> 00:13:51,740
when panel goes down and you can in deep

00:13:47,150 --> 00:13:54,680
dive into problem analysis this is how

00:13:51,740 --> 00:13:57,470
our refueling archive looks like we have

00:13:54,680 --> 00:14:01,610
aggregated all refuelings with beginning

00:13:57,470 --> 00:14:03,560
and we are was a refuelling which type

00:14:01,610 --> 00:14:05,360
of station we are talking about you see

00:14:03,560 --> 00:14:07,070
a communication because when you're

00:14:05,360 --> 00:14:08,540
going with your hydrogen car to a

00:14:07,070 --> 00:14:10,160
station there's an infrared

00:14:08,540 --> 00:14:12,980
communication between the car and the

00:14:10,160 --> 00:14:15,040
station to talk about certain limits

00:14:12,980 --> 00:14:17,630
like the upper pressure which is maximum

00:14:15,040 --> 00:14:20,660
like how full is a tank

00:14:17,630 --> 00:14:22,310
seeker wants to abort the fueling

00:14:20,660 --> 00:14:26,120
process in case of an arrow or something

00:14:22,310 --> 00:14:29,000
and but it's also possible to refuel car

00:14:26,120 --> 00:14:32,660
without this kind of communication but

00:14:29,000 --> 00:14:34,850
then the station works within certain

00:14:32,660 --> 00:14:36,920
boundaries and so it's very important

00:14:34,850 --> 00:14:39,860
for us to keep track of this kind of

00:14:36,920 --> 00:14:41,540
information also for the sales

00:14:39,860 --> 00:14:44,420
department the most interesting part is

00:14:41,540 --> 00:14:47,810
how much hydrogen we have put into the

00:14:44,420 --> 00:14:51,020
car and how full it's called suc state

00:14:47,810 --> 00:14:52,880
of charge it's also a metric electric

00:14:51,020 --> 00:14:56,750
drivers with batteries will know because

00:14:52,880 --> 00:14:59,480
it describes how full you car was after

00:14:56,750 --> 00:15:02,530
as a refueling process and also this

00:14:59,480 --> 00:15:05,510
metric was a refuelling okay or not

00:15:02,530 --> 00:15:08,480
because if not you can click on the link

00:15:05,510 --> 00:15:10,940
and deep dive into directly into the

00:15:08,480 --> 00:15:13,730
refueling process and see every metric

00:15:10,940 --> 00:15:17,540
every spike the blue line here is for

00:15:13,730 --> 00:15:20,780
example the cooling we style around 20

00:15:17,540 --> 00:15:23,090
degrees ambient temperature and then it

00:15:20,780 --> 00:15:25,910
goes down down down down down and there

00:15:23,090 --> 00:15:28,310
spike at the end it's nearly frozen it's

00:15:25,910 --> 00:15:30,680
a big problem of the first generation of

00:15:28,310 --> 00:15:33,110
hydrogen stations because the nozzle was

00:15:30,680 --> 00:15:36,380
frozen in the car and in the winter it

00:15:33,110 --> 00:15:38,690
was some time necessary to bring hot

00:15:36,380 --> 00:15:41,530
water and put it over the nozzle to get

00:15:38,690 --> 00:15:44,030
the nozzle from the car and such kind of

00:15:41,530 --> 00:15:49,550
failures we want to monitor and

00:15:44,030 --> 00:15:56,930
access the data to change the limits of

00:15:49,550 --> 00:15:58,790
the station we also built custom P&ID

00:15:56,930 --> 00:16:02,270
diagrams P&ID is piping and

00:15:58,790 --> 00:16:04,520
Instrumentation it's likely language gas

00:16:02,270 --> 00:16:08,150
engineers are talking like a schematic

00:16:04,520 --> 00:16:11,090
of something and often they have big

00:16:08,150 --> 00:16:14,360
pdfs with this kind of information and

00:16:11,090 --> 00:16:17,030
want live metrics within these plants so

00:16:14,360 --> 00:16:19,340
there's a very cool plugin it's called

00:16:17,030 --> 00:16:21,860
image it panel for graph onna where I

00:16:19,340 --> 00:16:24,680
can put image in the background and then

00:16:21,860 --> 00:16:28,880
put live metrics onto existing images

00:16:24,680 --> 00:16:31,970
and see information visualized with yams

00:16:28,880 --> 00:16:35,030
information you want to see we also

00:16:31,970 --> 00:16:37,550
using a single it's like a typical day

00:16:35,030 --> 00:16:39,290
for me looks like not only for men

00:16:37,550 --> 00:16:43,700
whereas the helmets is also a singer

00:16:39,290 --> 00:16:47,330
helmet now and we are monitoring the

00:16:43,700 --> 00:16:50,180
usual metrics of each system like this

00:16:47,330 --> 00:16:52,250
memory temperature and so on but we're

00:16:50,180 --> 00:16:54,500
also monitoring the heart via system

00:16:52,250 --> 00:16:57,050
because we only have one uplink to the

00:16:54,500 --> 00:16:58,850
plant control system and if this uplink

00:16:57,050 --> 00:17:01,160
is gone missing with a big problem

00:16:58,850 --> 00:17:03,890
because we can't see anything so it's in

00:17:01,160 --> 00:17:07,610
one of the most important metrics to me

00:17:03,890 --> 00:17:11,270
for and so we have kept record this is

00:17:07,610 --> 00:17:13,040
always okay there's always something you

00:17:11,270 --> 00:17:16,160
have to update like it from there

00:17:13,040 --> 00:17:17,930
also on industry hardware and it could

00:17:16,160 --> 00:17:20,240
be necessary because when you're

00:17:17,930 --> 00:17:22,819
introduces new feature and then we have

00:17:20,240 --> 00:17:26,900
to keep track that on our side protocol

00:17:22,819 --> 00:17:30,230
as always the newest one we are also

00:17:26,900 --> 00:17:32,620
doing the notification with a singer all

00:17:30,230 --> 00:17:36,050
metrics in a singer we are talking about

00:17:32,620 --> 00:17:38,960
from in flux TB so we talking from a

00:17:36,050 --> 00:17:41,330
singer to in flux DB and checking

00:17:38,960 --> 00:17:43,940
against the influx DB and not locally on

00:17:41,330 --> 00:17:45,830
the rift PI's with this kind of

00:17:43,940 --> 00:17:49,550
information we are able to notify our

00:17:45,830 --> 00:17:51,800
supervisors via telegram we have several

00:17:49,550 --> 00:17:57,770
groups and direct notifications for the

00:17:51,800 --> 00:17:59,950
supervisors this is how usual I sing too

00:17:57,770 --> 00:18:03,620
but look like you can see we are using

00:17:59,950 --> 00:18:06,200
Karstens famous graph on a plug-in with

00:18:03,620 --> 00:18:08,240
a lot of graphs this is I think for the

00:18:06,200 --> 00:18:11,780
LTE routers to see all the signal

00:18:08,240 --> 00:18:14,690
quality there are sometimes issues even

00:18:11,780 --> 00:18:16,429
in bigger regions you can see when

00:18:14,690 --> 00:18:19,059
people are starting to work and when

00:18:16,429 --> 00:18:22,540
they finish to work because the mobile

00:18:19,059 --> 00:18:24,770
quality is good or bad depending on its

00:18:22,540 --> 00:18:28,580
neighborhood where people live or work

00:18:24,770 --> 00:18:31,940
and so we have to do some adjustments on

00:18:28,580 --> 00:18:33,440
the routers we also build a lot of

00:18:31,940 --> 00:18:36,020
custom checks for the Raspberry Pi

00:18:33,440 --> 00:18:37,250
platform which will be released I think

00:18:36,020 --> 00:18:39,290
within the next weeks

00:18:37,250 --> 00:18:41,570
so if you're planning industrial project

00:18:39,290 --> 00:18:43,160
on the ref PI platform keep eye on my

00:18:41,570 --> 00:18:46,960
github account there were a lot of

00:18:43,160 --> 00:18:48,920
checks to integrate in icing or

00:18:46,960 --> 00:18:52,900
monitoring system were able to

00:18:48,920 --> 00:18:55,970
understand synodos compatible plugins

00:18:52,900 --> 00:18:59,450
also we are using the map plugin the map

00:18:55,970 --> 00:19:01,130
plug-in was yeah one one of the first

00:18:59,450 --> 00:19:04,010
components we developed in this project

00:19:01,130 --> 00:19:06,080
because we need to see where the

00:19:04,010 --> 00:19:09,170
stations are located and it's a problem

00:19:06,080 --> 00:19:11,840
and especially with mobile it could be

00:19:09,170 --> 00:19:14,150
really helpful to see where is a station

00:19:11,840 --> 00:19:15,980
it's a station neighbor nearby which

00:19:14,150 --> 00:19:19,700
also has a problem so maybe it's a

00:19:15,980 --> 00:19:22,190
mobile outage or power outage and we can

00:19:19,700 --> 00:19:24,380
also see ongoing maintenance Burke is

00:19:22,190 --> 00:19:28,400
especially interesting if you're putting

00:19:24,380 --> 00:19:31,100
these highways as an layer on the map

00:19:28,400 --> 00:19:32,720
and you can see ok this is a region

00:19:31,100 --> 00:19:34,580
which could be problematic because all

00:19:32,720 --> 00:19:35,990
stations on this highway are currently

00:19:34,580 --> 00:19:38,600
under maintenance so we can call

00:19:35,990 --> 00:19:40,610
supervisor and say ok we have to cancel

00:19:38,600 --> 00:19:43,220
maintenance work on this station because

00:19:40,610 --> 00:19:48,380
we need at least some stations working

00:19:43,220 --> 00:19:50,660
on this highway we laugh - bots most

00:19:48,380 --> 00:19:54,500
most people in a singer

00:19:50,660 --> 00:19:57,200
I don't think use dashboards as much as

00:19:54,500 --> 00:20:03,050
they could or should I think a lot of

00:19:57,200 --> 00:20:05,140
you have seen me he's dashing and using

00:20:03,050 --> 00:20:07,490
it for dashboards but you could also

00:20:05,140 --> 00:20:09,860
integrate everything you can see in a

00:20:07,490 --> 00:20:11,270
single web as a dashlet there's a small

00:20:09,860 --> 00:20:13,190
icon on top you can click and say

00:20:11,270 --> 00:20:16,160
to dashlet and you can build dashboards

00:20:13,190 --> 00:20:19,130
of every filter or you every nearly

00:20:16,160 --> 00:20:21,350
every plugin in a single web provides a

00:20:19,130 --> 00:20:27,530
functionality to build your custom

00:20:21,350 --> 00:20:30,170
dashboard so we have to keep track of

00:20:27,530 --> 00:20:32,809
all the mqtt clients on our f pies and

00:20:30,170 --> 00:20:35,270
can see is somewhere in QT decline

00:20:32,809 --> 00:20:38,960
program like something wrong with our

00:20:35,270 --> 00:20:42,230
code because no code is perfect we can

00:20:38,960 --> 00:20:45,770
monitor the plc connection to see if

00:20:42,230 --> 00:20:49,640
somewhere plc is broken or the cable is

00:20:45,770 --> 00:20:52,429
not fully put correctly and also we have

00:20:49,640 --> 00:20:55,280
written a custom plugin for a single web

00:20:52,429 --> 00:20:58,309
to keep an eye on all the relevant

00:20:55,280 --> 00:21:00,800
metrics like AC station available for

00:20:58,309 --> 00:21:04,910
the end-user enough hydrogen and the

00:21:00,800 --> 00:21:08,330
tank as a payment system working and how

00:21:04,910 --> 00:21:10,610
I see CPU temperature of CRF pi because

00:21:08,330 --> 00:21:12,559
in the summer it was very warm in

00:21:10,610 --> 00:21:16,070
Germany and we have a lot of outages

00:21:12,559 --> 00:21:19,460
because the control cabinet is mostly

00:21:16,070 --> 00:21:21,950
located directly in the Sun and it's

00:21:19,460 --> 00:21:24,170
made from metal and so it could be very

00:21:21,950 --> 00:21:27,350
hot in there so we have a lot of

00:21:24,170 --> 00:21:31,100
maintenance work with mounting fans into

00:21:27,350 --> 00:21:32,960
the stations yeah also we are keeping

00:21:31,100 --> 00:21:35,990
track of down times it's mostly for me

00:21:32,960 --> 00:21:38,679
to see if you are doing updates on some

00:21:35,990 --> 00:21:41,720
stations which station could be affected

00:21:38,679 --> 00:21:45,500
our supervisors also have their own

00:21:41,720 --> 00:21:47,200
dashboards like each supervisor sees the

00:21:45,500 --> 00:21:51,440
station he or she is responsible for

00:21:47,200 --> 00:21:54,110
also on a map and we've seen other real

00:21:51,440 --> 00:21:59,300
and metrics like the connection to the

00:21:54,110 --> 00:22:04,670
POC or sundown times it's fully mobile

00:21:59,300 --> 00:22:07,309
compatible and well I think most I think

00:22:04,670 --> 00:22:10,850
our modules with the newest in a web

00:22:07,309 --> 00:22:15,980
mobile compatible because there's a lot

00:22:10,850 --> 00:22:18,770
of efforts to bring yeah the best in the

00:22:15,980 --> 00:22:23,000
CSS stylesheet to keep it working on

00:22:18,770 --> 00:22:24,650
mobiles our custom module could be this

00:22:23,000 --> 00:22:28,520
if you have it

00:22:24,650 --> 00:22:30,470
so and if you hadn't counted 90 degrees

00:22:28,520 --> 00:22:35,090
you can see more information because you

00:22:30,470 --> 00:22:37,280
have more space on the screen we have a

00:22:35,090 --> 00:22:39,290
detail view for each station where you

00:22:37,280 --> 00:22:42,140
can switch the status of the station

00:22:39,290 --> 00:22:44,870
from auto to on off because sometimes it

00:22:42,140 --> 00:22:46,880
could be necessary to keep a manual

00:22:44,870 --> 00:22:49,250
track of the status because if PSC

00:22:46,880 --> 00:22:51,230
sending the wrong values or the station

00:22:49,250 --> 00:22:54,470
things it's not operated because the

00:22:51,230 --> 00:22:56,000
compressor is out of order but there's

00:22:54,470 --> 00:22:58,760
enough hydrogen in the tank so a

00:22:56,000 --> 00:23:00,230
customer could come by and refill so we

00:22:58,760 --> 00:23:03,710
have to switch the station manually on

00:23:00,230 --> 00:23:05,929
and they also see how much hydrogen is

00:23:03,710 --> 00:23:08,059
left in the tank there are actions like

00:23:05,929 --> 00:23:10,040
the plant monitoring of the manufacturer

00:23:08,059 --> 00:23:12,080
where supervisor can click and is

00:23:10,040 --> 00:23:15,440
directly linked to other systems and

00:23:12,080 --> 00:23:18,710
there's also a possibility to fill in a

00:23:15,440 --> 00:23:20,690
schedule work like maintenance or when a

00:23:18,710 --> 00:23:24,470
station is broken the date when the

00:23:20,690 --> 00:23:26,900
station should be operational again also

00:23:24,470 --> 00:23:30,880
important the last refueling at a

00:23:26,900 --> 00:23:33,800
station so if there is any indication of

00:23:30,880 --> 00:23:37,640
failing it is a refueling process you

00:23:33,800 --> 00:23:40,640
would see an red X and supervised I

00:23:37,640 --> 00:23:42,470
could keep and close look and the

00:23:40,640 --> 00:23:44,750
station and see okay if it's a broken

00:23:42,470 --> 00:23:50,059
car or is there something in the station

00:23:44,750 --> 00:23:52,220
we should look at we also built a big

00:23:50,059 --> 00:23:54,770
maintenance application into icinga web

00:23:52,220 --> 00:23:56,809
is very easy because it's mostly PHP

00:23:54,770 --> 00:23:59,950
code and I've written in the Zen

00:23:56,809 --> 00:24:03,590
framework so I have a colleague who's a

00:23:59,950 --> 00:24:05,960
Zen tavella / he started to rebuild the

00:24:03,590 --> 00:24:08,690
custom application where all maintenance

00:24:05,960 --> 00:24:11,570
work or reports everything is done

00:24:08,690 --> 00:24:13,730
within this company and module for a

00:24:11,570 --> 00:24:17,710
single web so it's very easy to

00:24:13,730 --> 00:24:17,710
integrate your own plan applications a

00:24:17,770 --> 00:24:24,140
few words on provisioning this was my

00:24:20,960 --> 00:24:27,770
desk when the first Hardware arrived and

00:24:24,140 --> 00:24:31,010
we asked ourselves how could we bring

00:24:27,770 --> 00:24:33,950
our own software onto like a IOT device

00:24:31,010 --> 00:24:36,300
because there's nothing like PXE there

00:24:33,950 --> 00:24:39,070
is no possibility to

00:24:36,300 --> 00:24:43,180
do processing like when I have been

00:24:39,070 --> 00:24:46,780
metal so we build it like a desk where

00:24:43,180 --> 00:24:49,570
we could all mount the hardware and

00:24:46,780 --> 00:24:52,270
started to sink and we found out that

00:24:49,570 --> 00:24:55,870
there's a default credential on every

00:24:52,270 --> 00:24:58,450
device and we could scan the MAC address

00:24:55,870 --> 00:25:00,670
and so on within backward scanner put it

00:24:58,450 --> 00:25:03,780
into a database and then we discovered

00:25:00,670 --> 00:25:06,760
and Zabur and ansible is perfect because

00:25:03,780 --> 00:25:10,330
perry ford and SS agent is running on

00:25:06,760 --> 00:25:12,910
each FBI so we are starting to work on

00:25:10,330 --> 00:25:15,910
in Zabul and developed a lot of ends of

00:25:12,910 --> 00:25:18,190
the code and now we have everything

00:25:15,910 --> 00:25:21,460
which is configured on this kind of

00:25:18,190 --> 00:25:23,800
devices in ensberg there's nothing you

00:25:21,460 --> 00:25:25,780
could do manually for everything there's

00:25:23,800 --> 00:25:30,280
a playbook and deformation in a

00:25:25,780 --> 00:25:32,650
PostgreSQL database which is yeah

00:25:30,280 --> 00:25:35,500
deployed by in zubur onto the devices

00:25:32,650 --> 00:25:38,560
it's very helpful because sometimes

00:25:35,500 --> 00:25:43,330
Harper gets broken and you have to yeah

00:25:38,560 --> 00:25:45,790
find quickly replacement so a colleague

00:25:43,330 --> 00:25:47,830
could take a new Raspberry Pi and put it

00:25:45,790 --> 00:25:49,870
on the station press a button to choose

00:25:47,830 --> 00:25:52,510
the station on a touchscreen we have and

00:25:49,870 --> 00:25:54,730
then put on deploy and I think one hour

00:25:52,510 --> 00:25:56,170
so the new hardware is ready and it

00:25:54,730 --> 00:26:00,640
could be sent to the supervisor to

00:25:56,170 --> 00:26:03,100
mounted on the station we also developed

00:26:00,640 --> 00:26:05,410
some custom instable stuff for the ref

00:26:03,100 --> 00:26:08,110
pi platform like custom effects to keep

00:26:05,410 --> 00:26:11,680
track of the model of the module status

00:26:08,110 --> 00:26:16,390
and so on and it's also soon published

00:26:11,680 --> 00:26:18,430
on github and a very cool part I think

00:26:16,390 --> 00:26:21,520
is that we are doing some low level

00:26:18,430 --> 00:26:25,150
stuff if ansible like flashing custom

00:26:21,520 --> 00:26:30,100
film the images or if new images why I

00:26:25,150 --> 00:26:32,800
use be on the ref PI's it has a tool

00:26:30,100 --> 00:26:34,750
which could be you stand stand alone but

00:26:32,800 --> 00:26:36,310
also with an Zabur because ends birds

00:26:34,750 --> 00:26:40,200
Python code and everything you could

00:26:36,310 --> 00:26:40,200
write em - you could use it in an open

00:26:40,710 --> 00:26:48,040
so to resume our project we have around

00:26:45,640 --> 00:26:49,720
80 stations for now we are gathering

00:26:48,040 --> 00:26:54,070
metrics within resolution

00:26:49,720 --> 00:26:58,090
of I think 500 milliseconds at least we

00:26:54,070 --> 00:27:01,210
have 15 different ajs types and we've

00:26:58,090 --> 00:27:04,720
around 3000 refuelings per month and

00:27:01,210 --> 00:27:08,020
gathering 20000 metrics per second and

00:27:04,720 --> 00:27:10,780
it's only possible because of great open

00:27:08,020 --> 00:27:12,520
source projects and I think you couldn't

00:27:10,780 --> 00:27:14,350
say it enough thank you to all

00:27:12,520 --> 00:27:17,140
open-source developers because there's

00:27:14,350 --> 00:27:20,530
such a lot of free software could use

00:27:17,140 --> 00:27:22,750
and often people who are here only if

00:27:20,530 --> 00:27:24,430
something is broken but you should also

00:27:22,750 --> 00:27:27,240
thank you in advance and say ok it's

00:27:24,430 --> 00:27:54,520
cool software and yeah thanks for having

00:27:27,240 --> 00:27:58,180
this thank you how do you secure the

00:27:54,520 --> 00:28:00,670
raspberry PI's in the inside in this

00:27:58,180 --> 00:28:04,150
metal box I mean it's it's it's a punch

00:28:00,670 --> 00:28:06,730
possible attack vector to get into the

00:28:04,150 --> 00:28:10,810
systems and some it's it's acute

00:28:06,730 --> 00:28:13,360
dialogue but there's also no physical

00:28:10,810 --> 00:28:17,290
access because all TT Y's on the earth

00:28:13,360 --> 00:28:19,630
third PI disabled there's only a VPN

00:28:17,290 --> 00:28:21,940
connection to our management network

00:28:19,630 --> 00:28:24,640
where we can access this kind of devices

00:28:21,940 --> 00:28:26,800
and even if you have access to the

00:28:24,640 --> 00:28:28,710
control cabinet you can't really do

00:28:26,800 --> 00:28:35,110
something with the hardware besides

00:28:28,710 --> 00:28:38,080
dismounting it and taking somewhere good

00:28:35,110 --> 00:28:40,360
afternoon good afternoon my question

00:28:38,080 --> 00:28:42,490
would be you talked about having four

00:28:40,360 --> 00:28:44,710
windows could you elaborate on the

00:28:42,490 --> 00:28:46,660
challenges you had to face integrating

00:28:44,710 --> 00:28:51,580
those four different systems with your

00:28:46,660 --> 00:28:54,670
your solution yeah we have four windows

00:28:51,580 --> 00:28:57,730
and for windows who had have different

00:28:54,670 --> 00:28:59,890
interests in in this project because two

00:28:57,730 --> 00:29:01,930
of the four windows are shareholders of

00:28:59,890 --> 00:29:03,250
the company edge to mobility so they

00:29:01,930 --> 00:29:06,310
have a certain interest

00:29:03,250 --> 00:29:09,760
Shems this kind of data because it helps

00:29:06,310 --> 00:29:12,700
them to build better stations and also

00:29:09,760 --> 00:29:15,340
we are getting gathering metrics they

00:29:12,700 --> 00:29:18,280
don't have so the interest income to us

00:29:15,340 --> 00:29:20,950
is okay and can we have data and there

00:29:18,280 --> 00:29:23,440
are other vendors who are interested in

00:29:20,950 --> 00:29:25,330
selling stations but not interested in

00:29:23,440 --> 00:29:27,190
sharing information so it could be very

00:29:25,330 --> 00:29:31,150
complicated to get all the information

00:29:27,190 --> 00:29:33,520
we want and yeah it's it's a lot about

00:29:31,150 --> 00:29:37,860
tactics and finding the right words to

00:29:33,520 --> 00:29:37,860
the right persons to get all the data

00:29:42,030 --> 00:29:48,780
thank you for a very interesting talk on

00:29:45,400 --> 00:29:51,460
one of your initial slides you had a

00:29:48,780 --> 00:29:54,040
bullet point that you send metrics via

00:29:51,460 --> 00:29:56,890
MQTT and they use telegraph to go to

00:29:54,040 --> 00:30:01,210
influx DB are those two separate

00:29:56,890 --> 00:30:04,930
channels or do you send Telegraph

00:30:01,210 --> 00:30:08,920
metrics also out via MQTT we are sending

00:30:04,930 --> 00:30:11,590
directly why MQTT the metrics with the

00:30:08,920 --> 00:30:14,500
influx line protocol so it's not Jason

00:30:11,590 --> 00:30:18,030
so we somehow directly write writing to

00:30:14,500 --> 00:30:18,030
the influx DB why MQTT

00:30:19,420 --> 00:30:33,089
[Applause]

00:30:22,280 --> 00:30:33,089
[Music]

00:30:36,690 --> 00:30:39,469

YouTube URL: https://www.youtube.com/watch?v=4iaInDiEiQg


