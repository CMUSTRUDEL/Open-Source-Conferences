Title: OSMC 2019 | Monitoring Alerts and Metrics on Large Power Systems Clusters by Marcelo Perazolo
Publication date: 2019-11-18
Playlist: OSMC 2019 | Open Source Monitoring Conference
Description: 
	In this talk we’ll introduce an open source project being used to monitor large Power Systems clusters, such as in the IBM collaboration with Oak Ridge and Lawrence Livermore laboratories for the Summit project, a large deployment of custom AC922 Power Systems nodes augmented by GPUs that work in tandem to implement the (currently) largest Supercomputer in the world.
Data is collected out-of-band directly from the firmware layer and then redistributed to various components using an open source component called Crassd. In addition, in-band operating-system and service level metrics, logs and alerts can also be collected and used to enrich the visualization dashboards. Open source components such as the Elastic Stack (Elasticsearch, Logstash, Kibana and select Beats) and Netdata are used for monitoring scenarios appropriate to each tool’s strengths, with other components such as Prometheus and Grafana in the process of being implemented. We’ll briefly discuss our experience to put these components together, and the decisions we had to make in order to automate their deployment and configuration for our goals. Finally, we lay out collaboration possibilities and future directions to enhance our project as a convenient starting point for others in the open source community to easily monitor their own Power Systems environments.

NETWAYS
Konferenzen: https://www.netways.de/events
Schulungen: https://www.netways.de/schulungen
Shop: https://shop.netways.de/
Blog: http://blog.netways.de/
NWS: https://nws.netways.de

Webinare
Archiv Link: https://www.netways.de/webinare/archi...
Aktuell: https://www.netways.de/wb

Social Media
SlideShare: http://de.slideshare.net/netways
YouTube: https://www.netways.de/youtube
Facebook: https://www.facebook.com/netways
Twitter: https://twitter.com/netways
Instagram: https://www.instagram.com/netwaysgmbh/

Musik: FRAMETRAXX
Captions: 
	00:00:05,120 --> 00:00:08,719
[Music]

00:00:10,060 --> 00:00:16,009
[Applause]

00:00:14,740 --> 00:00:21,170
hello

00:00:16,009 --> 00:00:25,279
thank you guys so this is a project that

00:00:21,170 --> 00:00:28,820
we started a IBM it was a kind of

00:00:25,279 --> 00:00:33,350
getting pieces from multiple places you

00:00:28,820 --> 00:00:36,019
know and it's a small team it's not a

00:00:33,350 --> 00:00:39,670
big product or anything and we wanted to

00:00:36,019 --> 00:00:44,409
put in open source from the start right

00:00:39,670 --> 00:00:49,100
and its intent its to make it easier to

00:00:44,409 --> 00:00:51,470
to run the same popular tools that you

00:00:49,100 --> 00:00:55,190
guys always run in your day-to-day right

00:00:51,470 --> 00:00:58,699
and in power systems just out of

00:00:55,190 --> 00:01:01,820
curiosity who hear that the room has

00:00:58,699 --> 00:01:08,260
ever heard or though what a power system

00:01:01,820 --> 00:01:10,990
is okay yeah more than expected so

00:01:08,260 --> 00:01:16,870
powers a different architecture

00:01:10,990 --> 00:01:20,540
everybody's it's familiar with x86 amd64

00:01:16,870 --> 00:01:24,200
etc so these are CPU architectures right

00:01:20,540 --> 00:01:27,800
so power a long time ago was derived

00:01:24,200 --> 00:01:30,670
from risk 6000 architecture so was

00:01:27,800 --> 00:01:35,320
supposed to be a reduced instruction set

00:01:30,670 --> 00:01:38,870
with the years later it evolved and it

00:01:35,320 --> 00:01:41,480
started to get closer and closer to the

00:01:38,870 --> 00:01:41,870
Intel and AMD architectures right was

00:01:41,480 --> 00:01:45,110
Mertz

00:01:41,870 --> 00:01:49,430
see scared teachers so - transformed

00:01:45,110 --> 00:01:53,260
over the over the years and it it powers

00:01:49,430 --> 00:01:57,080
a lot of other older systems from IBM

00:01:53,260 --> 00:02:01,670
that used to run AIX Agassi acts a lot

00:01:57,080 --> 00:02:08,390
more heard about it right in a few years

00:02:01,670 --> 00:02:10,819
ago IBM kind of changed the not changed

00:02:08,390 --> 00:02:12,769
terrifying has the architecture the

00:02:10,819 --> 00:02:17,569
low-level architecture and the power

00:02:12,769 --> 00:02:20,690
systems - were also run Linux so the way

00:02:17,569 --> 00:02:23,090
that you organize organize the data and

00:02:20,690 --> 00:02:28,670
errors right so the older legacy systems

00:02:23,090 --> 00:02:31,570
from IBM they used to to have a date

00:02:28,670 --> 00:02:33,550
organization called big-endian so it's a

00:02:31,570 --> 00:02:36,920
most signature of

00:02:33,550 --> 00:02:39,680
bite first and the or significative bout

00:02:36,920 --> 00:02:42,770
by bite leader so in order to make it

00:02:39,680 --> 00:02:45,250
more compatible with their the Intel

00:02:42,770 --> 00:02:48,140
word everything else so that they

00:02:45,250 --> 00:02:50,120
started supporting little-endian

00:02:48,140 --> 00:02:53,750
as well which is what Intel supports

00:02:50,120 --> 00:02:57,410
right so I'm going to give a brief

00:02:53,750 --> 00:02:59,600
introduction about why power is using

00:02:57,410 --> 00:03:02,570
some workloads what's the motivation

00:02:59,600 --> 00:03:05,720
when everything and just let me just

00:03:02,570 --> 00:03:08,810
show the agenda of so first introduction

00:03:05,720 --> 00:03:11,090
a little bit more about white powers is

00:03:08,810 --> 00:03:15,970
popular with some types of workloads

00:03:11,090 --> 00:03:18,410
right later and when I talk of a special

00:03:15,970 --> 00:03:21,260
component one of the components that we

00:03:18,410 --> 00:03:26,320
pulled was related to a project that we

00:03:21,260 --> 00:03:32,120
had with the choral project so this is a

00:03:26,320 --> 00:03:34,160
collaboration between big three big

00:03:32,120 --> 00:03:36,860
laboratories in the United States so

00:03:34,160 --> 00:03:38,750
they got together and they design and

00:03:36,860 --> 00:03:43,970
they put together get for a

00:03:38,750 --> 00:03:47,390
supercomputer for processing civil and

00:03:43,970 --> 00:03:48,470
military applications right so I'm gonna

00:03:47,390 --> 00:03:50,840
talk a little bit about the

00:03:48,470 --> 00:03:54,320
supercomputer and what this component

00:03:50,840 --> 00:03:56,060
component is used for in there and later

00:03:54,320 --> 00:03:59,239
I'm going to talk about

00:03:56,060 --> 00:04:01,370
okay so then we extract their component

00:03:59,239 --> 00:04:05,420
fuel components from other places and we

00:04:01,370 --> 00:04:08,330
kind of carve together and we created

00:04:05,420 --> 00:04:11,540
this open project right which is with

00:04:08,330 --> 00:04:13,940
intent of running the exact same tools

00:04:11,540 --> 00:04:16,040
that you guys already run but on this

00:04:13,940 --> 00:04:20,030
platform and making sure that there is a

00:04:16,040 --> 00:04:24,080
low cost of entry for the platforms and

00:04:20,030 --> 00:04:27,380
then if there is time and if the VPN

00:04:24,080 --> 00:04:30,350
collaborates yeah then I'm going to just

00:04:27,380 --> 00:04:33,260
show some of the dashboards that we put

00:04:30,350 --> 00:04:34,550
together right these dashboards are

00:04:33,260 --> 00:04:37,879
interesting because they

00:04:34,550 --> 00:04:40,370
they combined both data that is out of

00:04:37,879 --> 00:04:42,979
band and in band out of being this data

00:04:40,370 --> 00:04:47,120
that you collect from the firmer

00:04:42,979 --> 00:04:49,039
directly right and in band is data that

00:04:47,120 --> 00:04:50,870
you collect from agents running after

00:04:49,039 --> 00:04:52,490
the operating system boots up and

00:04:50,870 --> 00:04:56,930
everything so I'm going to show

00:04:52,490 --> 00:05:01,629
telemetry logs alerts things that come

00:04:56,930 --> 00:05:01,629
from both both kinds of data right and

00:05:01,690 --> 00:05:09,440
the end just what are our plans for the

00:05:06,379 --> 00:05:12,949
future right and questions and answers

00:05:09,440 --> 00:05:15,229
of course so I have to time the

00:05:12,949 --> 00:05:19,430
presentation so we we get time for a

00:05:15,229 --> 00:05:22,340
question and answer session so first

00:05:19,430 --> 00:05:26,000
slide here's a why power is popular for

00:05:22,340 --> 00:05:31,190
certain workloads right so one of the

00:05:26,000 --> 00:05:34,129
biggest draw of this platform is the way

00:05:31,190 --> 00:05:37,819
that the architecture the buses and the

00:05:34,129 --> 00:05:40,219
communications internally it's compared

00:05:37,819 --> 00:05:44,479
to what AMD and Intel are doing nowadays

00:05:40,219 --> 00:05:46,940
right it's they we get more speed my

00:05:44,479 --> 00:05:50,180
Mora you speed out of these

00:05:46,940 --> 00:05:54,500
architectures so you can see that there

00:05:50,180 --> 00:05:57,620
is a much much more powerful buzz

00:05:54,500 --> 00:06:01,490
between the CPU itself and the GPUs

00:05:57,620 --> 00:06:06,529
right so three channels of 25 gigabit

00:06:01,490 --> 00:06:10,219
per second and then there is a special

00:06:06,529 --> 00:06:12,680
protocol between both CPUs so there are

00:06:10,219 --> 00:06:15,199
models that you have choose abuse and

00:06:12,680 --> 00:06:19,370
models that we can get up to four CPUs

00:06:15,199 --> 00:06:22,880
right in power systems there is a direct

00:06:19,370 --> 00:06:26,599
attach to memory well 170 gigabit per

00:06:22,880 --> 00:06:30,380
second so it's a super fast as well so

00:06:26,599 --> 00:06:33,560
things that need a lot of bandwidth

00:06:30,380 --> 00:06:36,949
between the the the GPUs and decibels

00:06:33,560 --> 00:06:40,849
and between the memory and CPUs usually

00:06:36,949 --> 00:06:43,310
power has a better cost benefit again

00:06:40,849 --> 00:06:45,649
for certain workloads right so we're

00:06:43,310 --> 00:06:48,870
closer to process a lot of data in

00:06:45,649 --> 00:06:50,970
memory or you

00:06:48,870 --> 00:06:53,490
take that data to be processed by the

00:06:50,970 --> 00:06:57,930
GPUs and then you get results back so

00:06:53,490 --> 00:07:02,729
this kind of data is conducive on this

00:06:57,930 --> 00:07:05,370
platform right there is some just some a

00:07:02,729 --> 00:07:08,520
few order statistics for those who don't

00:07:05,370 --> 00:07:11,490
know you can tell you usually have two

00:07:08,520 --> 00:07:13,500
threads per core right in power you can

00:07:11,490 --> 00:07:16,620
configure that you have symmetric

00:07:13,500 --> 00:07:19,229
multiprocessing so you can have from

00:07:16,620 --> 00:07:22,350
just one thread or up to eight threads

00:07:19,229 --> 00:07:24,270
per core so we configure where you you

00:07:22,350 --> 00:07:29,850
want it and depending on applications

00:07:24,270 --> 00:07:32,160
well if you count the birth speeds and

00:07:29,850 --> 00:07:36,389
everything that I showed before and

00:07:32,160 --> 00:07:40,200
compared to same generation on Intel I

00:07:36,389 --> 00:07:44,100
didn't do that the count myself but what

00:07:40,200 --> 00:07:47,940
they they advertise is 9.5 X I think

00:07:44,100 --> 00:07:50,310
this is an average getting a speed

00:07:47,940 --> 00:07:52,229
between the GPUs and CPUs and memory

00:07:50,310 --> 00:07:55,320
speeds and everything so they do an

00:07:52,229 --> 00:07:57,389
average can get up to that and because

00:07:55,320 --> 00:08:01,020
of the speed on the memory transfer you

00:07:57,389 --> 00:08:03,539
can get more memory as well and another

00:08:01,020 --> 00:08:09,470
thing is uh I don't know if that matters

00:08:03,539 --> 00:08:13,770
but was the first platform to deliver PC

00:08:09,470 --> 00:08:16,470
expects press gen 4 speeds right so I

00:08:13,770 --> 00:08:19,289
guess they call they're out for to show

00:08:16,470 --> 00:08:21,599
that it's always we're always try to

00:08:19,289 --> 00:08:24,900
innovate in this platform are always

00:08:21,599 --> 00:08:28,910
trying to bring the biggest benefits in

00:08:24,900 --> 00:08:31,770
IO and a memory bandwidth right so

00:08:28,910 --> 00:08:34,289
that's a very brief introduction for

00:08:31,770 --> 00:08:36,810
power so if anybody asks you guys you

00:08:34,289 --> 00:08:38,510
cannot say you never heard about it any

00:08:36,810 --> 00:08:43,140
more

00:08:38,510 --> 00:08:46,230
ok so now when I talk a little bit somes

00:08:43,140 --> 00:08:50,160
just some fun facts right about that

00:08:46,230 --> 00:08:52,890
there's a project called coral it's

00:08:50,160 --> 00:08:55,380
short for collaboration of our Creed

00:08:52,890 --> 00:08:59,490
arguin and Lawrence Livermore these are

00:08:55,380 --> 00:09:00,430
three big laboratories in the u.s. they

00:08:59,490 --> 00:09:02,950
do

00:09:00,430 --> 00:09:05,740
stuff for the department in energy and a

00:09:02,950 --> 00:09:08,920
few other departments in there

00:09:05,740 --> 00:09:14,290
to do research on simulations for

00:09:08,920 --> 00:09:16,480
nuclear weapons they do of course there

00:09:14,290 --> 00:09:19,510
there's a lot of civilian research done

00:09:16,480 --> 00:09:24,070
as well things that you need to process

00:09:19,510 --> 00:09:27,220
a big data and hadoop or or elastic is

00:09:24,070 --> 00:09:31,360
very very very much used there as well

00:09:27,220 --> 00:09:35,410
for data processing right and there are

00:09:31,360 --> 00:09:40,540
several other workloads that are in this

00:09:35,410 --> 00:09:44,620
area for AI analytics big data right so

00:09:40,540 --> 00:09:47,950
it's all the the were closer to alike

00:09:44,620 --> 00:09:49,600
the power platform right so when they

00:09:47,950 --> 00:09:52,630
brought this project

00:09:49,600 --> 00:09:55,390
IBM had a few partners and they want

00:09:52,630 --> 00:09:59,370
this this bid for producing these

00:09:55,390 --> 00:10:03,100
supercomputers so they're Chu today and

00:09:59,370 --> 00:10:06,580
up to I'm not sure exactly anymore but

00:10:03,100 --> 00:10:08,890
up to the beginning of the year some it

00:10:06,580 --> 00:10:11,980
was they were the fastest one and

00:10:08,890 --> 00:10:14,140
they're in the word if you get in terms

00:10:11,980 --> 00:10:19,840
of our operations per second was the

00:10:14,140 --> 00:10:22,270
fastest so some it is the biggest or the

00:10:19,840 --> 00:10:26,620
two it's located in Oak Ridge in

00:10:22,270 --> 00:10:29,380
Tennessee and there is a the the Sierra

00:10:26,620 --> 00:10:32,080
model it has the same number for nodes

00:10:29,380 --> 00:10:34,480
but it has a node that is a little bit

00:10:32,080 --> 00:10:38,920
less capable than the the summit

00:10:34,480 --> 00:10:41,590
computer and this Sierra one is located

00:10:38,920 --> 00:10:46,000
in California a lower receiver more and

00:10:41,590 --> 00:10:48,430
it mostly does nuclear simulations

00:10:46,000 --> 00:10:51,040
things like that right and the the one

00:10:48,430 --> 00:10:55,300
in in Tennessee is more used for

00:10:51,040 --> 00:10:59,050
civilian applications was the first

00:10:55,300 --> 00:11:03,850
computer to reach exa ops performs so X

00:10:59,050 --> 00:11:07,900
is the 10 to the power 6 I believe and

00:11:03,850 --> 00:11:11,740
then there are some fun facts so the

00:11:07,900 --> 00:11:13,070
summit itself only the summit has 185

00:11:11,740 --> 00:11:15,820
miles of

00:11:13,070 --> 00:11:20,240
fibrotic inter connecting the nodes

00:11:15,820 --> 00:11:22,610
there is a lot of floor space you can

00:11:20,240 --> 00:11:25,550
imagine that that takes a lot of power

00:11:22,610 --> 00:11:27,770
consumption right there is a lot of our

00:11:25,550 --> 00:11:30,170
cooling involved to cool all this

00:11:27,770 --> 00:11:32,750
hardware there's a three hundred and

00:11:30,170 --> 00:11:36,980
forty tons not only the harder but they

00:11:32,750 --> 00:11:39,100
also the all ciliary assets that they

00:11:36,980 --> 00:11:42,440
need to have in a data center right

00:11:39,100 --> 00:11:45,890
power supplies transformers although

00:11:42,440 --> 00:11:48,110
that kind of stuff and then a computers

00:11:45,890 --> 00:11:50,390
are the the supercomputer itself it's

00:11:48,110 --> 00:11:53,980
it's a bunch of nodes connected together

00:11:50,390 --> 00:11:58,580
so it's a four forty six hundred nodes

00:11:53,980 --> 00:12:01,730
there is six GPUs per node and you can

00:11:58,580 --> 00:12:05,390
make the the calculations your it gives

00:12:01,730 --> 00:12:10,100
twenty twenty seven thousand GPUs right

00:12:05,390 --> 00:12:12,920
so that's a lot of processing power has

00:12:10,100 --> 00:12:16,910
to a hundred gigabytes of bandwidth

00:12:12,920 --> 00:12:20,930
between the nodes he has two hundred

00:12:16,910 --> 00:12:23,630
petaflop and like I said before the

00:12:20,930 --> 00:12:27,260
actual ops performs various per

00:12:23,630 --> 00:12:29,270
application so it reached up to a three

00:12:27,260 --> 00:12:29,690
point three if I'm not mistaken three

00:12:29,270 --> 00:12:33,320
point three

00:12:29,690 --> 00:12:35,450
EXO ops on doing genetic simulations or

00:12:33,320 --> 00:12:37,160
things like the episode depends on

00:12:35,450 --> 00:12:39,650
application in varies between one

00:12:37,160 --> 00:12:46,520
exaflop and three point something extra

00:12:39,650 --> 00:12:49,010
slots alright so this is just some so

00:12:46,520 --> 00:12:50,810
this was an article actually I thought

00:12:49,010 --> 00:12:53,600
it was interesting so I brought it here

00:12:50,810 --> 00:12:57,650
because it is directly related to the

00:12:53,600 --> 00:13:01,370
this data that we helped collect from

00:12:57,650 --> 00:13:05,000
the firmware so that this component that

00:13:01,370 --> 00:13:07,940
we ferment it for them it's called cross

00:13:05,000 --> 00:13:11,930
D I have a shortly next next chart is is

00:13:07,940 --> 00:13:18,050
about it it collects things like

00:13:11,930 --> 00:13:21,950
temperature current the voltage the fan

00:13:18,050 --> 00:13:24,560
speed so they collate all this data data

00:13:21,950 --> 00:13:25,340
they they get from there their cooling

00:13:24,560 --> 00:13:29,180
equipment

00:13:25,340 --> 00:13:32,000
and then they intelligently they very

00:13:29,180 --> 00:13:34,310
those they tweak those parameters right

00:13:32,000 --> 00:13:36,650
to make sure that the cooling is just

00:13:34,310 --> 00:13:39,440
appropriate for what what was running

00:13:36,650 --> 00:13:47,080
the on the platform at any any point

00:13:39,440 --> 00:13:49,910
right so we for this intelligent cooling

00:13:47,080 --> 00:13:56,840
system Erica quits cooling tweaking they

00:13:49,910 --> 00:14:03,980
they they got from 13 megawatts I think

00:13:56,840 --> 00:14:08,060
was the MC yeah 13 megawatts they got

00:14:03,980 --> 00:14:13,960
down to 10.1 megawatt singing average so

00:14:08,060 --> 00:14:16,880
this saving a lot of power there it's

00:14:13,960 --> 00:14:19,610
there is a list called green 500 class

00:14:16,880 --> 00:14:24,560
it's one of these big computers where

00:14:19,610 --> 00:14:28,690
they they try to beat each other which

00:14:24,560 --> 00:14:35,150
one saves the most power purr purr purr

00:14:28,690 --> 00:14:37,850
petaflop of of speed right summit was

00:14:35,150 --> 00:14:39,770
the number one and CEO earlier this this

00:14:37,850 --> 00:14:41,600
year I think it's symbol chill right now

00:14:39,770 --> 00:14:46,190
right now but the number one is is a

00:14:41,600 --> 00:14:48,890
much smaller computers I am computing in

00:14:46,190 --> 00:14:53,300
VDI think it has it's one tenth of the

00:14:48,890 --> 00:14:56,540
size of some summit so it's so great

00:14:53,300 --> 00:14:59,570
accomplishment being in this category

00:14:56,540 --> 00:15:04,280
for big computers and being able to save

00:14:59,570 --> 00:15:07,820
as much energy right okay and then

00:15:04,280 --> 00:15:10,340
there's a few other so this is a person

00:15:07,820 --> 00:15:13,550
from Oak Ridge Laboratory the person who

00:15:10,340 --> 00:15:15,650
is actually responsible for maintaining

00:15:13,550 --> 00:15:19,670
the reciprocal curator and doing the

00:15:15,650 --> 00:15:24,470
operation right so she published this

00:15:19,670 --> 00:15:27,200
this article in HPC wires magazine for

00:15:24,470 --> 00:15:29,090
high-performance computing if you guys

00:15:27,200 --> 00:15:33,740
don't know about it it's an interesting

00:15:29,090 --> 00:15:36,140
reading but I just put the link here if

00:15:33,740 --> 00:15:38,830
somebody wants to follow up and read

00:15:36,140 --> 00:15:38,830
more about it

00:15:39,570 --> 00:15:45,630
now a little bit more about the kind of

00:15:42,990 --> 00:15:48,330
the architecture how the nodes are

00:15:45,630 --> 00:15:52,440
interconnected and where this monitoring

00:15:48,330 --> 00:15:54,630
is is running right so usually in

00:15:52,440 --> 00:15:58,080
high-performance computing I mean

00:15:54,630 --> 00:16:01,620
there's not a lot you can vary you have

00:15:58,080 --> 00:16:05,990
lots of racks with lots of nodes crammed

00:16:01,620 --> 00:16:10,250
into them usually you have storage

00:16:05,990 --> 00:16:11,760
storage racks that is are separated but

00:16:10,250 --> 00:16:14,850
interconnected through the same

00:16:11,760 --> 00:16:18,810
InfiniBand right and and then you can

00:16:14,850 --> 00:16:22,160
have management management nodes where

00:16:18,810 --> 00:16:25,560
you run your applications and where you

00:16:22,160 --> 00:16:27,690
you kind of drive the applications that

00:16:25,560 --> 00:16:31,310
go into the the actual nodes for

00:16:27,690 --> 00:16:34,950
processing right so in this case here

00:16:31,310 --> 00:16:37,440
you guys can see there is a what we call

00:16:34,950 --> 00:16:41,970
service node these numbers that you see

00:16:37,440 --> 00:16:44,310
there SN 0 1 0 2 up to 16 right so these

00:16:41,970 --> 00:16:49,500
are service nodes and they're double

00:16:44,310 --> 00:16:53,550
link it to collection of 16 racks each

00:16:49,500 --> 00:16:56,430
so each of the 16 racks have 18 nodes I

00:16:53,550 --> 00:16:59,670
believe so it's easy to do the

00:16:56,430 --> 00:17:01,610
calculation 18 times 16 times 16

00:16:59,670 --> 00:17:05,670
collection racks

00:17:01,610 --> 00:17:12,420
it has to be 4,000 and the order number

00:17:05,670 --> 00:17:16,320
that I I showed here's 4608 it's

00:17:12,420 --> 00:17:19,290
probably 18 so there are double linked

00:17:16,320 --> 00:17:22,260
if one of these service nodes go down so

00:17:19,290 --> 00:17:24,180
the other one takes over there the

00:17:22,260 --> 00:17:26,550
monitoring is a little bit degraded in

00:17:24,180 --> 00:17:28,890
that case until they they fix this the

00:17:26,550 --> 00:17:32,670
other seven service node that goes down

00:17:28,890 --> 00:17:35,190
it rarely happens I think I heard about

00:17:32,670 --> 00:17:40,650
two occasions only then one was planned

00:17:35,190 --> 00:17:43,230
that they had to do that but in these

00:17:40,650 --> 00:17:46,960
service racks so they run the the this

00:17:43,230 --> 00:17:50,200
component that goes and monitors the

00:17:46,960 --> 00:17:53,379
the their the firmware for every every

00:17:50,200 --> 00:17:58,059
single note so it goes to all the 16

00:17:53,379 --> 00:18:00,039
times 16 times 18 notes each one has a

00:17:58,059 --> 00:18:02,470
firmware in each one subscribes

00:18:00,039 --> 00:18:06,159
telemetry so they collect the telemetry

00:18:02,470 --> 00:18:09,460
and they aggregate it and then they they

00:18:06,159 --> 00:18:12,669
take it out of that big data store the

00:18:09,460 --> 00:18:15,220
right side right and there's other

00:18:12,669 --> 00:18:17,889
things that are monitored as well they

00:18:15,220 --> 00:18:21,519
are not going to go into a lot of detail

00:18:17,889 --> 00:18:25,090
but ESS is a lassic storage is another

00:18:21,519 --> 00:18:28,330
product that you can aggregate and you

00:18:25,090 --> 00:18:33,389
can manage and monitor metrics from from

00:18:28,330 --> 00:18:36,100
storage right there is other stuff DEP

00:18:33,389 --> 00:18:41,799
Oakridge itself is running that we don't

00:18:36,100 --> 00:18:43,509
even know about but so in this in this

00:18:41,799 --> 00:18:46,990
President issued if the focus here is

00:18:43,509 --> 00:18:50,649
just to to tell how Class D is is is

00:18:46,990 --> 00:18:56,169
running in this situated in this this

00:18:50,649 --> 00:19:02,499
design right ok so now it's a little bit

00:18:56,169 --> 00:19:05,799
more busy chart here but this is more or

00:19:02,499 --> 00:19:09,340
less how the monitoring works so each

00:19:05,799 --> 00:19:13,450
computer node here you have their own

00:19:09,340 --> 00:19:18,399
board controller that connects to main

00:19:13,450 --> 00:19:21,039
memory connects to the GPUs then there

00:19:18,399 --> 00:19:23,559
you have the host OS and there is

00:19:21,039 --> 00:19:25,860
another product called CSM I'm not going

00:19:23,559 --> 00:19:29,350
to enter in detail as well but this is

00:19:25,860 --> 00:19:33,909
what in their environment is taking the

00:19:29,350 --> 00:19:36,549
place of all the goodies popular tools

00:19:33,909 --> 00:19:40,899
that we generally use instead right so

00:19:36,549 --> 00:19:44,590
instead of having a fire bit or metric

00:19:40,899 --> 00:19:46,389
bit or fluent D or something else they

00:19:44,590 --> 00:19:49,659
they have this product here to collect

00:19:46,389 --> 00:19:52,029
some metrics from time to time in the

00:19:49,659 --> 00:19:52,690
others cross D that does the the outer

00:19:52,029 --> 00:19:54,580
band

00:19:52,690 --> 00:19:57,929
data collection directly from the fumer

00:19:54,580 --> 00:20:00,580
right so you can see that the data flows

00:19:57,929 --> 00:20:03,610
out the data is

00:20:00,580 --> 00:20:06,880
taking out the big data store and then

00:20:03,610 --> 00:20:09,519
from that big data store they they they

00:20:06,880 --> 00:20:13,570
process this data together and they have

00:20:09,519 --> 00:20:15,700
graph and dashboards where they see how

00:20:13,570 --> 00:20:21,149
the metrics correlate with each other

00:20:15,700 --> 00:20:24,750
right but cross D itself so already

00:20:21,149 --> 00:20:28,330
envisioning it's using other places we

00:20:24,750 --> 00:20:32,080
we made it so that you can just drop

00:20:28,330 --> 00:20:34,840
smaller small plugins it's really just

00:20:32,080 --> 00:20:37,539
something that I call gets the data and

00:20:34,840 --> 00:20:40,570
puts in a socket and sends it to to

00:20:37,539 --> 00:20:43,299
other applications right so you can just

00:20:40,570 --> 00:20:48,970
drop plugins in crazy and it can send to

00:20:43,299 --> 00:20:53,500
permit use or elasticsearch or other

00:20:48,970 --> 00:20:56,860
other other tools out there right and

00:20:53,500 --> 00:21:00,429
then when I talked about the package

00:20:56,860 --> 00:21:02,799
that with publishing in open source it's

00:21:00,429 --> 00:21:05,620
a it's a different project we call power

00:21:02,799 --> 00:21:07,960
ups because incorporates how these open

00:21:05,620 --> 00:21:09,309
source tools right then I'm going to

00:21:07,960 --> 00:21:16,360
talk a little bit more about how it

00:21:09,309 --> 00:21:18,130
integrates of crazzy ok so this is a

00:21:16,360 --> 00:21:23,649
nutshell how crusty works

00:21:18,130 --> 00:21:26,169
oh one other thing so crusty today it

00:21:23,649 --> 00:21:30,240
supports a multiple protocols to talk to

00:21:26,169 --> 00:21:33,639
firmware so they're all there was that

00:21:30,240 --> 00:21:36,639
all other models of systems that they

00:21:33,639 --> 00:21:38,019
only have IPM I guess you guys heard

00:21:36,639 --> 00:21:41,350
about our PMI right

00:21:38,019 --> 00:21:45,340
so it's an older protocol now there is a

00:21:41,350 --> 00:21:47,409
new protocol coming into place into the

00:21:45,340 --> 00:21:49,269
place of IPMI but as some systems

00:21:47,409 --> 00:21:51,309
support both some systems in the future

00:21:49,269 --> 00:21:54,490
support only the Disney one it's called

00:21:51,309 --> 00:21:59,919
redfish so we're adding support for

00:21:54,490 --> 00:22:05,919
redfish now and the BNC is a special DMC

00:21:59,919 --> 00:22:08,740
called Open DMC so open be emceeing

00:22:05,919 --> 00:22:11,529
addition to these protocols it also has

00:22:08,740 --> 00:22:13,990
a REST API so it's amazing what you can

00:22:11,529 --> 00:22:19,029
do we can cry me

00:22:13,990 --> 00:22:22,360
into a small firmware right but it does

00:22:19,029 --> 00:22:27,879
have you can create sensors and you can

00:22:22,360 --> 00:22:30,070
specify what's the the the what's the

00:22:27,879 --> 00:22:32,169
pewte that you want the telemetry to be

00:22:30,070 --> 00:22:34,210
sent back to you so it's a very very

00:22:32,169 --> 00:22:37,240
flexible interface right and Kirsty

00:22:34,210 --> 00:22:43,749
makes use of that makes use of the REST

00:22:37,240 --> 00:22:47,460
API from open BMC okay so now a little

00:22:43,749 --> 00:22:51,490
bit more about the this other

00:22:47,460 --> 00:22:54,129
encompassing project so we got crusty

00:22:51,490 --> 00:22:57,460
because we saw some potential in it it's

00:22:54,129 --> 00:23:02,590
been using these supercomputers there is

00:22:57,460 --> 00:23:04,619
interest from the IBM cloud so a IBM

00:23:02,590 --> 00:23:08,320
cloud for those who don't know it's same

00:23:04,619 --> 00:23:11,409
it is the competitor product to Amazon

00:23:08,320 --> 00:23:13,869
AWS or Google Cloud it's the one there

00:23:11,409 --> 00:23:16,690
are IBM operates right and it has both

00:23:13,869 --> 00:23:19,779
x86 and now it has power nodes in there

00:23:16,690 --> 00:23:22,809
as well so they they got interested and

00:23:19,779 --> 00:23:25,840
they're using these this technology as

00:23:22,809 --> 00:23:29,529
well so internally you don't see it if

00:23:25,840 --> 00:23:33,220
you subscribe to a vert on loading IBM

00:23:29,529 --> 00:23:34,899
cloud of course it's managed under the

00:23:33,220 --> 00:23:38,110
covers right but the operators inside

00:23:34,899 --> 00:23:40,570
IBM they they they have dashboards where

00:23:38,110 --> 00:23:43,240
they see the firmware data alongside

00:23:40,570 --> 00:23:47,850
other data that they collect through the

00:23:43,240 --> 00:23:51,340
nodes so it's a big environment as well

00:23:47,850 --> 00:23:53,529
so we saw some potential engines and we

00:23:51,340 --> 00:23:57,909
wanted to publish in open source right

00:23:53,529 --> 00:24:02,320
and but we can we didn't want to use

00:23:57,909 --> 00:24:05,440
these legacy tools like CSM or something

00:24:02,320 --> 00:24:08,919
that we created out of the order for our

00:24:05,440 --> 00:24:11,730
own minds right so we wanted to use

00:24:08,919 --> 00:24:14,769
tools that everybody uses day-to-day so

00:24:11,730 --> 00:24:17,259
so we started thinking what's the

00:24:14,769 --> 00:24:21,070
character is what's the most popular

00:24:17,259 --> 00:24:23,499
tools in categories and then we started

00:24:21,070 --> 00:24:26,499
doing some integration so there there

00:24:23,499 --> 00:24:28,509
are other products in open-source as

00:24:26,499 --> 00:24:32,820
well things that we participated before

00:24:28,509 --> 00:24:39,340
where we did monitoring on power systems

00:24:32,820 --> 00:24:41,799
that gave us some some initial may get

00:24:39,340 --> 00:24:44,429
maybe it easier because if you start to

00:24:41,799 --> 00:24:47,769
migrate some of these tools to to power

00:24:44,429 --> 00:24:50,129
initially they they don't work on out of

00:24:47,769 --> 00:24:53,609
the box right so some tools you have to

00:24:50,129 --> 00:24:56,080
compiled binaries you have you have a

00:24:53,609 --> 00:24:59,769
slightly different matrix in power

00:24:56,080 --> 00:25:02,909
things like that so there were some to

00:24:59,769 --> 00:25:05,919
some other product projects that I use

00:25:02,909 --> 00:25:10,119
the elastic stack so we reuse that code

00:25:05,919 --> 00:25:12,269
as well there was one that was also

00:25:10,119 --> 00:25:17,470
being prepared for these supercomputers

00:25:12,269 --> 00:25:20,049
HPC projects that they were using net

00:25:17,470 --> 00:25:21,669
data right so net date is another two

00:25:20,049 --> 00:25:28,169
that is getting more and more popular

00:25:21,669 --> 00:25:30,369
and also an hour or to-do list is a

00:25:28,169 --> 00:25:32,940
parameter using your phone which is a

00:25:30,369 --> 00:25:35,019
super popular as well so it's using

00:25:32,940 --> 00:25:37,600
stacks where you find

00:25:35,019 --> 00:25:40,659
containers or you find virtual machines

00:25:37,600 --> 00:25:44,259
the open shift is is using it now right

00:25:40,659 --> 00:25:48,669
so it's super popular as well so we

00:25:44,259 --> 00:25:51,039
wanted to get these tools in those two

00:25:48,669 --> 00:25:55,230
so these tools are more appropriate for

00:25:51,039 --> 00:25:58,720
different different use cases so have a

00:25:55,230 --> 00:26:03,490
collection of data that you have to hold

00:25:58,720 --> 00:26:07,720
over a long period of time so code is a

00:26:03,490 --> 00:26:09,730
historical data right versus more real

00:26:07,720 --> 00:26:12,070
time data so if you look at that data

00:26:09,730 --> 00:26:15,009
for example it is more appropriate for

00:26:12,070 --> 00:26:18,549
real time because it has several the

00:26:15,009 --> 00:26:20,830
dashboards are very dynamic right and

00:26:18,549 --> 00:26:23,139
it's more appropriate for drill drilling

00:26:20,830 --> 00:26:25,779
down into a small number of systems as

00:26:23,139 --> 00:26:27,999
opposed to elastic stack where you have

00:26:25,779 --> 00:26:30,639
the the database behind it

00:26:27,999 --> 00:26:32,919
elastic search we can cram and store a

00:26:30,639 --> 00:26:36,669
lot of data in there right you can

00:26:32,919 --> 00:26:41,259
configure the dashboards to look over

00:26:36,669 --> 00:26:44,259
I don't know as months older months of

00:26:41,259 --> 00:26:48,190
data so if you want a visualize data

00:26:44,259 --> 00:26:50,019
that is more historical you you would be

00:26:48,190 --> 00:26:52,119
more appropriate for for using one of

00:26:50,019 --> 00:26:55,299
those systems instead right so we

00:26:52,119 --> 00:26:59,590
started with this elasticsearch has a

00:26:55,299 --> 00:27:03,009
good handle of historical data and then

00:26:59,590 --> 00:27:04,899
that data for drilling down into some of

00:27:03,009 --> 00:27:08,200
the nodes we're experiencing problems

00:27:04,899 --> 00:27:14,440
that you want to see more real time kind

00:27:08,200 --> 00:27:16,690
of telemetry in there right and there

00:27:14,440 --> 00:27:18,700
are some comments so what value putting

00:27:16,690 --> 00:27:22,239
something like this together brings

00:27:18,700 --> 00:27:24,279
bread so somebody that wants to use

00:27:22,239 --> 00:27:28,809
power because of how those those

00:27:24,279 --> 00:27:30,879
benefits processing AI or analytics you

00:27:28,809 --> 00:27:34,450
don't have to start putting together

00:27:30,879 --> 00:27:36,850
recompiling binaries and repackaging

00:27:34,450 --> 00:27:39,779
stuff so this project is supposed to

00:27:36,850 --> 00:27:43,869
give you our head start right of course

00:27:39,779 --> 00:27:45,700
so it has only uh some sample dashboards

00:27:43,869 --> 00:27:47,679
you are going to want to configure your

00:27:45,700 --> 00:27:50,429
dashboards differently or you want to

00:27:47,679 --> 00:27:52,210
collect data from different different

00:27:50,429 --> 00:27:55,989
agents and things like that

00:27:52,210 --> 00:27:57,190
so but but but the the good thing is

00:27:55,989 --> 00:28:00,220
that you don't have to start from

00:27:57,190 --> 00:28:02,379
scratch some some specific things that

00:28:00,220 --> 00:28:06,340
you need to do in order for these tools

00:28:02,379 --> 00:28:09,009
to work on power already already built

00:28:06,340 --> 00:28:14,259
in and they are already automated as

00:28:09,009 --> 00:28:17,799
well so just going ahead this is a what

00:28:14,259 --> 00:28:21,580
we do for automation so we we didn't

00:28:17,799 --> 00:28:23,859
want to show only produce a set of a

00:28:21,580 --> 00:28:25,690
tools pre-configured and crammed down

00:28:23,859 --> 00:28:28,480
into a docker container or something

00:28:25,690 --> 00:28:31,419
like that right so we wanted to give you

00:28:28,480 --> 00:28:36,100
a flexible way to automate deploying

00:28:31,419 --> 00:28:38,259
multiple environments so we chose

00:28:36,100 --> 00:28:40,210
ansible for that it's one of the most

00:28:38,259 --> 00:28:42,820
popular configuration management

00:28:40,210 --> 00:28:47,950
measurement solutions right deployment

00:28:42,820 --> 00:28:50,590
and configuration manager it's there

00:28:47,950 --> 00:28:52,850
were some some assets that are already

00:28:50,590 --> 00:28:56,330
implemented in ansible before that I

00:28:52,850 --> 00:29:02,870
talked about so we got there for free as

00:28:56,330 --> 00:29:06,230
well and it kind of uh gives gives a

00:29:02,870 --> 00:29:09,980
head start on how to deploy using to

00:29:06,230 --> 00:29:12,260
multiple topologies so we we made the

00:29:09,980 --> 00:29:15,710
play books flexible in a way that you

00:29:12,260 --> 00:29:18,140
can choose if you want to deploy all

00:29:15,710 --> 00:29:20,540
these tools together or if you want to

00:29:18,140 --> 00:29:22,700
separate them so for bigger clusters

00:29:20,540 --> 00:29:25,430
usually you will have multiple nodes

00:29:22,700 --> 00:29:28,660
with elasticsearch running in parallel

00:29:25,430 --> 00:29:32,390
right so you can do that with these

00:29:28,660 --> 00:29:34,520
ansible play books so just go there you

00:29:32,390 --> 00:29:39,170
specify how many of the nodes or

00:29:34,520 --> 00:29:41,570
controllers specify how to discover the

00:29:39,170 --> 00:29:45,500
the the range of IPs that you want to

00:29:41,570 --> 00:29:48,440
discover for the endpoints and you of

00:29:45,500 --> 00:29:50,270
course you have to configure a few other

00:29:48,440 --> 00:29:53,030
variables as well and then you click a

00:29:50,270 --> 00:29:55,160
button and it starts deploying and half

00:29:53,030 --> 00:29:57,130
an hour later it's all ready and running

00:29:55,160 --> 00:30:01,700
and you can point to the browser right

00:29:57,130 --> 00:30:04,070
like I said this is just a head start so

00:30:01,700 --> 00:30:06,280
it comes with some - words you may want

00:30:04,070 --> 00:30:10,670
to configure you want to may want to

00:30:06,280 --> 00:30:13,610
collect additional data but it's a head

00:30:10,670 --> 00:30:17,300
start right so that's the intent of this

00:30:13,610 --> 00:30:21,110
project is to get people to collaborate

00:30:17,300 --> 00:30:25,040
so if if somebody else in the Power

00:30:21,110 --> 00:30:28,280
community builds integration for I don't

00:30:25,040 --> 00:30:31,880
know another - like zabbix for example

00:30:28,280 --> 00:30:37,430
or builds just kind of a plug ins for

00:30:31,880 --> 00:30:40,240
zabbix - to get to get some other kind

00:30:37,430 --> 00:30:43,730
of data - I mean something like get

00:30:40,240 --> 00:30:47,210
information from GPUs attached to power

00:30:43,730 --> 00:30:49,010
nodes so we wanted to have a place where

00:30:47,210 --> 00:30:52,820
they could go there and drop their their

00:30:49,010 --> 00:30:57,350
their their stuff and it would work with

00:30:52,820 --> 00:31:03,360
other tools as well right so that's

00:30:57,350 --> 00:31:05,430
doesn't end here ok so it speaking

00:31:03,360 --> 00:31:08,760
just just a little bit more about the

00:31:05,430 --> 00:31:10,740
the structure of the the ansible

00:31:08,760 --> 00:31:14,010
playbooks your there are three three

00:31:10,740 --> 00:31:18,930
steps so there's one that we called

00:31:14,010 --> 00:31:22,530
bring up so we wanted to support

00:31:18,930 --> 00:31:27,210
multiple multiple target environments

00:31:22,530 --> 00:31:31,050
right so in by target environment I mean

00:31:27,210 --> 00:31:32,400
you could deploy these into virtual

00:31:31,050 --> 00:31:35,790
machines

00:31:32,400 --> 00:31:39,210
I don't know from KVM or there is

00:31:35,790 --> 00:31:43,080
another hypervisor that works on power

00:31:39,210 --> 00:31:46,290
so it's called power VM right this part

00:31:43,080 --> 00:31:49,230
of him is not it's not done yet but but

00:31:46,290 --> 00:31:52,590
you could you could just create another

00:31:49,230 --> 00:31:54,450
row some basic interfaces that all the

00:31:52,590 --> 00:31:57,720
rules for bringing up have to follow

00:31:54,450 --> 00:31:59,600
drop it here and then you choose I want

00:31:57,720 --> 00:32:03,420
to deploy it into a power VM

00:31:59,600 --> 00:32:07,640
infrastructure right and and and then it

00:32:03,420 --> 00:32:11,190
you know just integrate seamlessly here

00:32:07,640 --> 00:32:14,370
there is a stuff from converged

00:32:11,190 --> 00:32:16,260
infrastructures or hyper-converged

00:32:14,370 --> 00:32:19,650
infrastructure they have recipe.i

00:32:16,260 --> 00:32:23,370
different recipe eyes you could use one

00:32:19,650 --> 00:32:25,920
of these infrastructures at all anybody

00:32:23,370 --> 00:32:29,880
here knows and no tonics so no tonics is

00:32:25,920 --> 00:32:32,970
one such such a platform out there right

00:32:29,880 --> 00:32:35,280
so underneath its KVM but they have some

00:32:32,970 --> 00:32:39,000
nice recipe is that you can use instead

00:32:35,280 --> 00:32:43,430
of doing verse commands and things like

00:32:39,000 --> 00:32:46,590
there to create the VMS under k vm so

00:32:43,430 --> 00:32:49,370
and i I mentioned that because this is

00:32:46,590 --> 00:32:52,680
one of the integrations we already done

00:32:49,370 --> 00:32:57,930
kind of reused again from another

00:32:52,680 --> 00:33:01,200
project right but you could you could

00:32:57,930 --> 00:33:04,560
put another another row here that would

00:33:01,200 --> 00:33:06,990
create things into docker containers and

00:33:04,560 --> 00:33:09,000
in fact there is one of my colleagues is

00:33:06,990 --> 00:33:13,980
working on supporting con containers

00:33:09,000 --> 00:33:17,280
right now right okay so this is hardly

00:33:13,980 --> 00:33:20,190
deploy I kind of I actually think I went

00:33:17,280 --> 00:33:22,860
ahead of these lines so this is supposed

00:33:20,190 --> 00:33:25,830
to be the picture that talks more about

00:33:22,860 --> 00:33:28,020
the deploy phase so it's like I said you

00:33:25,830 --> 00:33:29,570
have ansible roles special ansible rules

00:33:28,020 --> 00:33:32,280
that can deploy to multiple

00:33:29,570 --> 00:33:34,260
infrastructures right and you can just

00:33:32,280 --> 00:33:36,480
draw up another one and you're

00:33:34,260 --> 00:33:41,790
specifying the variables which one you

00:33:36,480 --> 00:33:48,210
want to use and gets from there then the

00:33:41,790 --> 00:33:49,800
infrastructure so this is layer it's

00:33:48,210 --> 00:33:53,640
called a infrastructure and a service

00:33:49,800 --> 00:33:56,660
right so it it's supposed to do the

00:33:53,640 --> 00:34:00,060
bring up and configuration of them other

00:33:56,660 --> 00:34:01,980
nodes that are in the architecture right

00:34:00,060 --> 00:34:06,840
so you have three types of nodes then

00:34:01,980 --> 00:34:09,140
have builders and builder is just a

00:34:06,840 --> 00:34:12,990
special node because as some of these

00:34:09,140 --> 00:34:16,680
some of these packages and projects we

00:34:12,990 --> 00:34:19,860
kind of a compiled and then or kind of

00:34:16,680 --> 00:34:23,340
are in the middle of the the process

00:34:19,860 --> 00:34:28,140
you're right so for example one example

00:34:23,340 --> 00:34:31,290
is the golang package is available power

00:34:28,140 --> 00:34:35,520
but the golgi mo is a binary isn't right

00:34:31,290 --> 00:34:38,220
so we build a small script just to go

00:34:35,520 --> 00:34:41,370
and compile the go daemon and package it

00:34:38,220 --> 00:34:46,020
for for power or both debian and read

00:34:41,370 --> 00:34:47,730
health packages so these builders they

00:34:46,020 --> 00:34:50,730
compile with stuff that is not yet

00:34:47,730 --> 00:34:53,580
available for power and take it to a

00:34:50,730 --> 00:34:56,220
repository that then is used in the

00:34:53,580 --> 00:34:58,770
other phase right then there's our

00:34:56,220 --> 00:35:01,620
controllers there is where the server

00:34:58,770 --> 00:35:05,910
side of the applications run for example

00:35:01,620 --> 00:35:11,460
elastic stack of the components running

00:35:05,910 --> 00:35:13,560
there across the server you can run

00:35:11,460 --> 00:35:16,650
everything in a single controller if you

00:35:13,560 --> 00:35:18,660
wish or you can spread over just

00:35:16,650 --> 00:35:21,480
changing variables in there playbooks

00:35:18,660 --> 00:35:24,510
right and then there's the endpoints you

00:35:21,480 --> 00:35:25,830
just define which which are the

00:35:24,510 --> 00:35:27,780
endpoints the

00:35:25,830 --> 00:35:31,530
the address ranges that you want and

00:35:27,780 --> 00:35:33,510
then if it is a virgin to can even bring

00:35:31,530 --> 00:35:37,950
up the all those nodes and create them

00:35:33,510 --> 00:35:40,470
as VMs or containers and instantiate the

00:35:37,950 --> 00:35:47,640
the initial configuration for deployment

00:35:40,470 --> 00:35:51,000
right the next session here's a well hi

00:35:47,640 --> 00:35:54,240
I got ahead again and so it's the build

00:35:51,000 --> 00:35:56,520
phase so this is the bring up here is

00:35:54,240 --> 00:35:59,040
the build right so it's a what I said

00:35:56,520 --> 00:36:01,290
you build stuff that is not yet

00:35:59,040 --> 00:36:05,310
available for power the intention of

00:36:01,290 --> 00:36:07,470
this is to be a temporary one of the

00:36:05,310 --> 00:36:09,510
things we want to do we're were small

00:36:07,470 --> 00:36:11,700
team right but we want to reach out to

00:36:09,510 --> 00:36:16,190
these communities for example they be

00:36:11,700 --> 00:36:19,410
it's the elastic community up to this v5

00:36:16,190 --> 00:36:23,370
it's more or less architecture

00:36:19,410 --> 00:36:27,720
independent it's all Java Java code that

00:36:23,370 --> 00:36:30,120
runs anywhere right but then if you

00:36:27,720 --> 00:36:32,340
start looking at a v7 there are some

00:36:30,120 --> 00:36:35,790
bynars in there and patches that don't

00:36:32,340 --> 00:36:38,750
immediately exist on power so we started

00:36:35,790 --> 00:36:41,730
looking into these and how to initially

00:36:38,750 --> 00:36:44,430
build those packages for power right so

00:36:41,730 --> 00:36:47,700
it will be part of this section of the

00:36:44,430 --> 00:36:50,580
playbooks so it automate building and

00:36:47,700 --> 00:36:54,060
packaging those packages for elastic v7

00:36:50,580 --> 00:36:56,700
we're working on the up right now but at

00:36:54,060 --> 00:36:59,880
some point we want to up string this

00:36:56,700 --> 00:37:03,030
back into the elastic community right so

00:36:59,880 --> 00:37:05,820
I didn't we didn't even start talking to

00:37:03,030 --> 00:37:09,120
anybody up but then it was just as an

00:37:05,820 --> 00:37:12,360
example right so as tools get more

00:37:09,120 --> 00:37:13,830
integrated we want to consume this

00:37:12,360 --> 00:37:19,440
directly from there they're open

00:37:13,830 --> 00:37:22,470
communities right and then finally there

00:37:19,440 --> 00:37:26,910
the last the last phase here's the

00:37:22,470 --> 00:37:29,280
deploy phase so this basically gets all

00:37:26,910 --> 00:37:34,350
that was missing on power on that

00:37:29,280 --> 00:37:36,390
repository on the right side there I get

00:37:34,350 --> 00:37:38,460
those binaries get other binders that

00:37:36,390 --> 00:37:38,940
are already available for power and

00:37:38,460 --> 00:37:41,880
don't

00:37:38,940 --> 00:37:45,329
oh damn from from their existing

00:37:41,880 --> 00:37:47,579
repository is right and then is just on

00:37:45,329 --> 00:37:49,950
the way and the PlayBook variables you

00:37:47,579 --> 00:37:52,950
would define how you interconnect them

00:37:49,950 --> 00:37:56,540
how the flow data goes from one node to

00:37:52,950 --> 00:37:59,040
the other and just the deploy phase

00:37:56,540 --> 00:38:03,390
deploy is in configures the N and

00:37:59,040 --> 00:38:07,380
creates the dashboards that we have by

00:38:03,390 --> 00:38:11,510
default right there is a few dashboards

00:38:07,380 --> 00:38:13,920
so we're almost to the end here you know

00:38:11,510 --> 00:38:17,250
then next I'm going to show you there

00:38:13,920 --> 00:38:20,010
are four dashboards right now one is for

00:38:17,250 --> 00:38:22,920
metric bit it's more or less the same as

00:38:20,010 --> 00:38:25,650
they standard metric dashboards but we I

00:38:22,920 --> 00:38:29,730
did some tweaks on them to be able to

00:38:25,650 --> 00:38:33,000
work well on power right there is the

00:38:29,730 --> 00:38:37,130
the dashboard as very simple - murder

00:38:33,000 --> 00:38:42,359
created for getting logs from the most

00:38:37,130 --> 00:38:46,770
most most Yuma most important log files

00:38:42,359 --> 00:38:50,640
in Linux systems right so like the out

00:38:46,770 --> 00:38:53,960
log file the kernel the syslog things

00:38:50,640 --> 00:38:59,940
like that there is a one metric

00:38:53,960 --> 00:39:02,430
dashboard for cross D alerts so if there

00:38:59,940 --> 00:39:04,170
is any problem the firmware it's going

00:39:02,430 --> 00:39:07,020
to show us an alert and it's going to

00:39:04,170 --> 00:39:09,930
show in the elastic search as well and

00:39:07,020 --> 00:39:12,380
then there is the the net data dashboard

00:39:09,930 --> 00:39:15,890
where you can see near real-time

00:39:12,380 --> 00:39:20,550
telemetry flowing from tragedy as well

00:39:15,890 --> 00:39:22,770
and and this is the so this is not

00:39:20,550 --> 00:39:25,250
exactly the the environment they aren't

00:39:22,770 --> 00:39:29,930
going to show in the demo but it's close

00:39:25,250 --> 00:39:32,940
so these this was the the old a go ahead

00:39:29,930 --> 00:39:37,680
we had to use those those systems for

00:39:32,940 --> 00:39:42,000
another project so what I did I kind of

00:39:37,680 --> 00:39:44,700
a those two bare metal where bare metal

00:39:42,000 --> 00:39:47,250
nodes where we had net data separate

00:39:44,700 --> 00:39:49,770
from the elastic search right I kind of

00:39:47,250 --> 00:39:52,530
a they had to be used for something else

00:39:49,770 --> 00:39:53,970
so I just created a VM and

00:39:52,530 --> 00:39:57,930
crammed everything together in the same

00:39:53,970 --> 00:40:02,130
VM that's the difference here and in

00:39:57,930 --> 00:40:05,100
here we're have a Boston Boston is a

00:40:02,130 --> 00:40:08,750
code name for the power 9 right so there

00:40:05,100 --> 00:40:13,440
is a scale up and scale out systems

00:40:08,750 --> 00:40:16,860
Boston is a scale scale out system so it

00:40:13,440 --> 00:40:18,720
means that it doesn't it's more

00:40:16,860 --> 00:40:21,000
appropriate for enterprise applications

00:40:18,720 --> 00:40:22,770
right and then there's the scale app

00:40:21,000 --> 00:40:25,500
systems are more appropriate for high

00:40:22,770 --> 00:40:28,860
performance computing so those systems

00:40:25,500 --> 00:40:30,990
are the ones I've been using the summit

00:40:28,860 --> 00:40:37,440
supercomputer it's their their code name

00:40:30,990 --> 00:40:40,020
is me Huck so Indian so III added to me

00:40:37,440 --> 00:40:45,420
hacks here just to get a limit read 8

00:40:40,020 --> 00:40:49,320
and show that in app data so it's gonna

00:40:45,420 --> 00:40:57,060
be it's gonna give like different kinds

00:40:49,320 --> 00:41:01,680
of telemetry than the Boston ok so let

00:40:57,060 --> 00:41:05,520
me let me see however on time ok

00:41:01,680 --> 00:41:15,120
just five minutes I think could give a

00:41:05,520 --> 00:41:19,170
good idea of of of the demo here so this

00:41:15,120 --> 00:41:22,620
is a system I have back on IBM it goes

00:41:19,170 --> 00:41:29,580
through my VPN if it is a stewing in

00:41:22,620 --> 00:41:33,870
place I guess so I have three three

00:41:29,580 --> 00:41:37,830
bookmarks here one is the one is the

00:41:33,870 --> 00:41:42,330
elastic search indices so you guys can

00:41:37,830 --> 00:41:44,850
see that it's a small letter but you can

00:41:42,330 --> 00:41:50,100
see that there are indexes for metric

00:41:44,850 --> 00:41:52,410
bit and it's not kind of a most used way

00:41:50,100 --> 00:41:55,200
or for organisations of once a day right

00:41:52,410 --> 00:41:58,460
so I have a once a day index for metric

00:41:55,200 --> 00:42:02,810
be it once the days were for log stash

00:41:58,460 --> 00:42:02,810
the metric me it gets

00:42:03,340 --> 00:42:10,210
in band data from agents running each of

00:42:07,450 --> 00:42:13,900
the end points and from the metric big

00:42:10,210 --> 00:42:14,560
bit agent it's off right and the

00:42:13,900 --> 00:42:17,350
logstash

00:42:14,560 --> 00:42:21,400
illnesses they they get collection from

00:42:17,350 --> 00:42:25,660
file bit the log files we get from those

00:42:21,400 --> 00:42:30,400
most most important Linux log files

00:42:25,660 --> 00:42:32,890
right and it gets the alerting data from

00:42:30,400 --> 00:42:36,160
from Class D as well so we cram all

00:42:32,890 --> 00:42:37,660
together these log stash indexes you

00:42:36,160 --> 00:42:40,390
could configure it differently if you

00:42:37,660 --> 00:42:43,060
want to separate the indexes in a

00:42:40,390 --> 00:42:47,010
different way you could changing the

00:42:43,060 --> 00:42:52,090
variables in the ansible playbook right

00:42:47,010 --> 00:42:57,880
then there is the bookmark for the

00:42:52,090 --> 00:43:03,220
dashboards on Cabana right little bit

00:42:57,880 --> 00:43:06,580
Intuit loads and because firmer data is

00:43:03,220 --> 00:43:08,980
not as frequent at least alerting data

00:43:06,580 --> 00:43:12,400
right it's not as frequent as other

00:43:08,980 --> 00:43:15,310
kinds of alerts you guys can see that I

00:43:12,400 --> 00:43:17,380
have a large period of time here that

00:43:15,310 --> 00:43:23,530
I'm visualizing right so visualizing

00:43:17,380 --> 00:43:26,260
year-to-date I could have 4th generation

00:43:23,530 --> 00:43:27,640
of more log files if I want it but I did

00:43:26,260 --> 00:43:31,230
that a long time ago

00:43:27,640 --> 00:43:34,330
so I just wanted to show those those

00:43:31,230 --> 00:43:40,060
logs that I force it for the generation

00:43:34,330 --> 00:43:42,340
just to give an example right so so this

00:43:40,060 --> 00:43:44,190
is these are alerts are coming from the

00:43:42,340 --> 00:43:46,359
firmware itself so if you have a

00:43:44,190 --> 00:43:48,700
situation of a high temperature for

00:43:46,359 --> 00:43:51,460
example it's gonna generate an event and

00:43:48,700 --> 00:43:54,070
it's going to come here right and in

00:43:51,460 --> 00:43:56,350
this dashboard it's a simple dashboard

00:43:54,070 --> 00:44:00,550
it has the list of events in here so you

00:43:56,350 --> 00:44:03,670
can filter in elastic search by keywords

00:44:00,550 --> 00:44:07,090
or whatever you want then I I created

00:44:03,670 --> 00:44:10,090
like just a small visualization per type

00:44:07,090 --> 00:44:12,850
and severity so a severity is critical

00:44:10,090 --> 00:44:15,350
warning or something so you can just

00:44:12,850 --> 00:44:18,280
click on the end and filter by that if

00:44:15,350 --> 00:44:22,010
just to see the political events right

00:44:18,280 --> 00:44:25,160
and that then the types of events you

00:44:22,010 --> 00:44:28,640
might be interested on just the events

00:44:25,160 --> 00:44:32,120
for memory for example or they've an

00:44:28,640 --> 00:44:35,180
record on recoverable events so you can

00:44:32,120 --> 00:44:37,160
filter out from here as well and I have

00:44:35,180 --> 00:44:39,500
another small visualization that there

00:44:37,160 --> 00:44:43,010
is a small flag in this now the former

00:44:39,500 --> 00:44:46,190
fields in firmer alerts that if they are

00:44:43,010 --> 00:44:48,080
called home eligible and then there are

00:44:46,190 --> 00:44:51,620
other applications that make use of that

00:44:48,080 --> 00:44:53,900
right and if they are serviceable or not

00:44:51,620 --> 00:44:56,960
so it's just another visualization

00:44:53,900 --> 00:44:59,630
showing the division of the events how

00:44:56,960 --> 00:45:02,990
they classify Burdette and then there's

00:44:59,630 --> 00:45:07,250
the top ten cents or types of events in

00:45:02,990 --> 00:45:10,100
here there's another one that is per per

00:45:07,250 --> 00:45:13,550
source so you can see here that here's

00:45:10,100 --> 00:45:15,500
the Boston one so it's showing IP

00:45:13,550 --> 00:45:17,480
address because on my configuration file

00:45:15,500 --> 00:45:22,130
I just had the IP address instead of the

00:45:17,480 --> 00:45:26,960
name but and you have to make sure that

00:45:22,130 --> 00:45:28,760
it's has a DNS backing for that and then

00:45:26,960 --> 00:45:33,170
there's the chummy hacks that I added

00:45:28,760 --> 00:45:36,710
later gives more types of alerts in here

00:45:33,170 --> 00:45:39,440
so you can see that I think most of the

00:45:36,710 --> 00:45:42,410
events are me hike one and the Boston

00:45:39,440 --> 00:45:45,620
this one has little a small number of

00:45:42,410 --> 00:45:48,680
events then there's another field on the

00:45:45,620 --> 00:45:52,370
alert so it's called subsystem and tells

00:45:48,680 --> 00:45:55,640
which component of the system the alert

00:45:52,370 --> 00:45:58,850
is is about right and then there is a

00:45:55,640 --> 00:46:03,740
stage so you can filter throughout that

00:45:58,850 --> 00:46:07,130
and then just a bottom I just put a heat

00:46:03,740 --> 00:46:11,200
map for the kind of the the biggest

00:46:07,130 --> 00:46:14,000
hitters of alerts so you can see that

00:46:11,200 --> 00:46:16,490
this number one here it means score

00:46:14,000 --> 00:46:18,590
number one right so core number one is

00:46:16,490 --> 00:46:23,330
the one that is having most problems I

00:46:18,590 --> 00:46:25,940
don't know why didn't analyze yet then

00:46:23,330 --> 00:46:28,230
there's a other cores and the genes so

00:46:25,940 --> 00:46:31,080
you can see which component my

00:46:28,230 --> 00:46:34,470
a lot of events and if my need to be

00:46:31,080 --> 00:46:37,770
changed in the future it has a record of

00:46:34,470 --> 00:46:40,410
events associated to that or not and

00:46:37,770 --> 00:46:42,900
then there is a similar kind of a

00:46:40,410 --> 00:46:47,010
visualization but it is just a cloud tag

00:46:42,900 --> 00:46:50,760
map so the the biggest fonts go so the

00:46:47,010 --> 00:46:52,890
ones that get more alerts right so like

00:46:50,760 --> 00:46:54,960
I said it's a simple dashboard but it

00:46:52,890 --> 00:46:57,210
gives you a good summary of what's

00:46:54,960 --> 00:47:02,359
happening at the level of humor so you

00:46:57,210 --> 00:47:06,560
can see by even type severity etc so

00:47:02,359 --> 00:47:11,310
that's that's the the across the alerts

00:47:06,560 --> 00:47:13,080
let me see however long time okay three

00:47:11,310 --> 00:47:17,070
more minutes I'm going to go quickly

00:47:13,080 --> 00:47:20,730
over the other ones okay let me just

00:47:17,070 --> 00:47:22,940
show these two quickly because they're

00:47:20,730 --> 00:47:27,060
not as important these are for the

00:47:22,940 --> 00:47:29,790
Indian data and is collected by far bit

00:47:27,060 --> 00:47:34,340
and metric bit I created a simple

00:47:29,790 --> 00:47:38,609
dashboard just to show where the log

00:47:34,340 --> 00:47:40,650
events come from so this one these

00:47:38,609 --> 00:47:43,080
realizations are per source of the Lord

00:47:40,650 --> 00:47:45,840
so you can see if it comes from the

00:47:43,080 --> 00:47:48,000
messages log in Ubuntu or comes from the

00:47:45,840 --> 00:47:50,609
syslog in Red Hat

00:47:48,000 --> 00:47:55,530
there's the carrier log there's the out

00:47:50,609 --> 00:47:57,210
log itself and and you can see as well

00:47:55,530 --> 00:48:02,220
that this produces a lot more events

00:47:57,210 --> 00:48:04,440
than firmware events of course divided

00:48:02,220 --> 00:48:07,470
by the family of operating system they

00:48:04,440 --> 00:48:09,740
came from it's interesting to visualize

00:48:07,470 --> 00:48:14,369
if you have a mix of operating system

00:48:09,740 --> 00:48:15,960
which ones because usually in production

00:48:14,369 --> 00:48:19,130
these operating systems there are also

00:48:15,960 --> 00:48:22,020
configured by something like ansible or

00:48:19,130 --> 00:48:26,310
puppet or something like that so if you

00:48:22,020 --> 00:48:29,070
have a big imbalance between events that

00:48:26,310 --> 00:48:30,330
come from from Ubuntu versus Red Hat you

00:48:29,070 --> 00:48:32,869
might need to do something your

00:48:30,330 --> 00:48:38,180
configuration for open to for example to

00:48:32,869 --> 00:48:40,380
make it less prone to two problems right

00:48:38,180 --> 00:48:44,640
then you have

00:48:40,380 --> 00:48:49,130
these events over time event

00:48:44,640 --> 00:48:49,130
distribution if it is a message or

00:48:49,400 --> 00:48:55,770
something from isolation of a package so

00:48:53,430 --> 00:48:58,490
there are types of events right as if it

00:48:55,770 --> 00:49:01,170
is out out in the education event and

00:48:58,490 --> 00:49:02,940
then per source as well so it's a

00:49:01,170 --> 00:49:07,920
something very simple just to get

00:49:02,940 --> 00:49:11,190
started right then there are other one

00:49:07,920 --> 00:49:14,300
in in in cabana it's it

00:49:11,190 --> 00:49:17,180
it was reused from the metric bit

00:49:14,300 --> 00:49:21,000
dashboards that they standard dashboards

00:49:17,180 --> 00:49:23,220
they they didn't run is mostly off the

00:49:21,000 --> 00:49:25,530
shelf when in this environment we have

00:49:23,220 --> 00:49:30,500
to do some tweaks but if you guys swing

00:49:25,530 --> 00:49:34,200
there before so they have a big summary

00:49:30,500 --> 00:49:37,080
dashboard that gives you an idea of how

00:49:34,200 --> 00:49:38,610
much load you have on the whole cluster

00:49:37,080 --> 00:49:45,750
so these are numbers for the whole

00:49:38,610 --> 00:49:48,870
clusters not on a single system for a

00:49:45,750 --> 00:49:52,650
single system right and then you can dig

00:49:48,870 --> 00:49:57,750
dig dig into your CPU consumption memory

00:49:52,650 --> 00:49:59,880
etc so can have a visualization you can

00:49:57,750 --> 00:50:03,150
see that it's not been long since I

00:49:59,880 --> 00:50:05,520
started this this cluster here so it's

00:50:03,150 --> 00:50:12,740
been collecting data just for a couple

00:50:05,520 --> 00:50:15,750
days in etc has memory has metrics for

00:50:12,740 --> 00:50:18,740
processes that are running here on

00:50:15,750 --> 00:50:21,150
memory the left side swap and this

00:50:18,740 --> 00:50:23,370
endpoints so they're configure very very

00:50:21,150 --> 00:50:25,230
simply so there they have no subspace

00:50:23,370 --> 00:50:33,090
that's why we're not seeing anything

00:50:25,230 --> 00:50:37,290
here so network i/o throughput storage

00:50:33,090 --> 00:50:39,840
file systems utilization right is

00:50:37,290 --> 00:50:44,040
similar to metric bit dashboards if you

00:50:39,840 --> 00:50:47,670
guys sing there before in lastly I

00:50:44,040 --> 00:50:51,020
wanted to show just what we did for on

00:50:47,670 --> 00:50:54,150
that data to get the telemetry from from

00:50:51,020 --> 00:50:57,180
crusty right so in

00:50:54,150 --> 00:51:01,529
data there are several plugins that you

00:50:57,180 --> 00:51:04,799
can get a turn on or turn off so they

00:51:01,529 --> 00:51:07,259
give several metrics on CPU memory

00:51:04,799 --> 00:51:10,349
against any it's more real-time it's

00:51:07,259 --> 00:51:12,930
different from elasticsearch that you

00:51:10,349 --> 00:51:14,640
collect less that's our amount of matrix

00:51:12,930 --> 00:51:19,170
but you store then over a long time

00:51:14,640 --> 00:51:23,460
right so you dig dig deeper into a

00:51:19,170 --> 00:51:25,349
particular problem you can see what

00:51:23,460 --> 00:51:29,549
other characteristics are influencing

00:51:25,349 --> 00:51:31,920
the problem in that data so these things

00:51:29,549 --> 00:51:35,490
are all the full plugins that come from

00:51:31,920 --> 00:51:38,220
that data so monitors disk etc so it's

00:51:35,490 --> 00:51:41,369
all in band stuff as well and then the

00:51:38,220 --> 00:51:44,900
out band stuff the telemetry that comes

00:51:41,369 --> 00:51:48,269
from that from crowds D it's what were

00:51:44,900 --> 00:51:50,160
so it just create a section for each of

00:51:48,269 --> 00:51:52,470
the systems that we're monitoring so

00:51:50,160 --> 00:51:55,769
there's a one for it's very small font

00:51:52,470 --> 00:51:58,200
you guys are probably not seen but this

00:51:55,769 --> 00:52:01,529
one is a section for the mehak one and

00:51:58,200 --> 00:52:04,710
then there's a section for the mehak the

00:52:01,529 --> 00:52:09,630
second mehak it's actually me hot 9 the

00:52:04,710 --> 00:52:11,940
name of the node right so it gives a 5/5

00:52:09,630 --> 00:52:14,549
very important matrix the ones that are

00:52:11,940 --> 00:52:17,039
utilized by that cooling intelligence

00:52:14,549 --> 00:52:22,440
system on the summit supercomputer rate

00:52:17,039 --> 00:52:24,569
so there's a current at so this date is

00:52:22,440 --> 00:52:29,190
coming every second you can of course

00:52:24,569 --> 00:52:31,170
configure that but if you it depends on

00:52:29,190 --> 00:52:34,859
your application if you want to have a

00:52:31,170 --> 00:52:36,749
response time that is quickly on on the

00:52:34,859 --> 00:52:39,420
cooling plant or something like that you

00:52:36,749 --> 00:52:41,730
need to collect data or more more

00:52:39,420 --> 00:52:45,299
frequent basis right so there is a

00:52:41,730 --> 00:52:47,309
current utilized there is a fan tax

00:52:45,299 --> 00:52:49,529
speed for the multiple fans you can see

00:52:47,309 --> 00:52:53,099
that they have different many different

00:52:49,529 --> 00:52:56,789
fans on each system of these there's

00:52:53,099 --> 00:52:59,249
power consumed in multiple sensors so

00:52:56,789 --> 00:53:01,079
you can see what's being consumed you

00:52:59,249 --> 00:53:03,180
can see there are some fluctuations

00:53:01,079 --> 00:53:06,359
sometimes but if you still are look

00:53:03,180 --> 00:53:07,890
fluctuation in power consumption

00:53:06,359 --> 00:53:11,059
it means that

00:53:07,890 --> 00:53:11,059
you need more cooling right

00:53:11,339 --> 00:53:17,309
there's temperature sensors all over the

00:53:13,890 --> 00:53:20,130
system as well and then there's voltages

00:53:17,309 --> 00:53:22,349
the power supply is the biggest one and

00:53:20,130 --> 00:53:27,900
then there are voltages of the processor

00:53:22,349 --> 00:53:32,640
memory etc so these five are very

00:53:27,900 --> 00:53:34,799
helpful in order to manage your data

00:53:32,640 --> 00:53:37,049
center right that combined with the

00:53:34,799 --> 00:53:40,230
metrics that are collecting band you can

00:53:37,049 --> 00:53:48,900
correlate things together you can do all

00:53:40,230 --> 00:53:51,510
sorts of useful stuff okay that's what I

00:53:48,900 --> 00:53:56,130
had so before we go to questions just

00:53:51,510 --> 00:53:57,210
one second I just wanna show this for

00:53:56,130 --> 00:53:59,640
just one second

00:53:57,210 --> 00:54:02,339
so these are next steps and there are

00:53:59,640 --> 00:54:07,109
two important things that when I do

00:54:02,339 --> 00:54:09,510
write you too - so one is to grow this

00:54:07,109 --> 00:54:12,690
project in the power community and it's

00:54:09,510 --> 00:54:15,569
not only the traditional power users

00:54:12,690 --> 00:54:18,000
like the legacy ones that you still use

00:54:15,569 --> 00:54:20,579
the ax but also the new ones that use

00:54:18,000 --> 00:54:24,089
the power early systems a little engine

00:54:20,579 --> 00:54:28,380
right run Linux and run all these modern

00:54:24,089 --> 00:54:31,109
tools already right so when a kind of a

00:54:28,380 --> 00:54:33,210
foster collaboration with these teams

00:54:31,109 --> 00:54:35,940
when a foster collaboration with the

00:54:33,210 --> 00:54:38,519
contributors of the tools yourselves if

00:54:35,940 --> 00:54:42,660
we can get support for power we don't

00:54:38,519 --> 00:54:44,279
need to build an on the on the fly on

00:54:42,660 --> 00:54:46,440
the project you're right so it will be

00:54:44,279 --> 00:54:49,619
much easier if I was already being

00:54:46,440 --> 00:54:54,000
supported upstream that the binders and

00:54:49,619 --> 00:54:56,759
everything is needed for power and then

00:54:54,000 --> 00:54:59,759
the second part here is we won enhanced

00:54:56,759 --> 00:55:02,970
this way when I add new tools we want to

00:54:59,759 --> 00:55:05,970
add new environments like containers

00:55:02,970 --> 00:55:12,750
that were working on that we went to add

00:55:05,970 --> 00:55:16,799
I don't know deployment over PowerVM for

00:55:12,750 --> 00:55:20,569
the legacy guys so and we want other

00:55:16,799 --> 00:55:20,569
people to collaborate as well right

00:55:20,700 --> 00:55:28,050
and lastly we want to add support for

00:55:24,750 --> 00:55:32,370
more stuff more goodies one thing that a

00:55:28,050 --> 00:55:36,810
lot of people needs alongside power is

00:55:32,370 --> 00:55:39,030
GPU monitoring right so we wanna add GPU

00:55:36,810 --> 00:55:41,400
monitoring both in band and out of band

00:55:39,030 --> 00:55:45,030
as well through the BMC and through the

00:55:41,400 --> 00:55:49,500
operating system we went to add support

00:55:45,030 --> 00:55:53,520
for other equipment this de storage side

00:55:49,500 --> 00:55:55,950
of the equation so there are several

00:55:53,520 --> 00:55:58,680
tools that already do this kind of

00:55:55,950 --> 00:56:01,950
monitoring so we want to test this and

00:55:58,680 --> 00:56:06,420
make sure that works well in power right

00:56:01,950 --> 00:56:10,830
and lastly currency so we're working to

00:56:06,420 --> 00:56:13,920
support a newest elastic stack now we

00:56:10,830 --> 00:56:16,740
wanna support AIX as an end point for

00:56:13,920 --> 00:56:20,280
the legacy guys are going to support

00:56:16,740 --> 00:56:23,910
more beats and of course other tools

00:56:20,280 --> 00:56:27,270
we won't always get support as much

00:56:23,910 --> 00:56:32,460
current as possible for the tools right

00:56:27,270 --> 00:56:36,390
the latest releases for elastic net data

00:56:32,460 --> 00:56:39,320
and later prometheus graph on ax so we

00:56:36,390 --> 00:56:43,380
want to start supporting those as well

00:56:39,320 --> 00:56:47,190
okay so that's what I had I think we

00:56:43,380 --> 00:56:49,850
have very little time five minutes for

00:56:47,190 --> 00:56:49,850
questions and answers

00:56:50,230 --> 00:56:58,449
[Applause]

00:56:58,960 --> 00:57:07,780
so anybody yep just a second

00:57:09,820 --> 00:57:19,700
thank you very much is there is this a

00:57:14,450 --> 00:57:22,130
replacement for ITM from IBM no it's not

00:57:19,700 --> 00:57:25,760
a replacement if if I say it is there

00:57:22,130 --> 00:57:29,030
they're probably gonna kill me but we we

00:57:25,760 --> 00:57:31,760
recognize that there is there is

00:57:29,030 --> 00:57:35,810
different communities right and we want

00:57:31,760 --> 00:57:38,090
the the environment itself power systems

00:57:35,810 --> 00:57:41,720
because they are very important for some

00:57:38,090 --> 00:57:45,530
kinds of applications ai analytics we're

00:57:41,720 --> 00:57:48,590
gonna plug the the the entry the entry

00:57:45,530 --> 00:57:50,930
level of effort that it takes for you to

00:57:48,590 --> 00:57:53,210
run these modern tools into that

00:57:50,930 --> 00:57:56,810
platform as well right that there's

00:57:53,210 --> 00:58:01,040
still gonna be a niche for users of ITM

00:57:56,810 --> 00:58:05,440
and then for users that are more open

00:58:01,040 --> 00:58:05,440
open source kind of a users ready

00:58:14,710 --> 00:58:19,539
any more questions

00:58:20,109 --> 00:58:27,589
okay we're short in time so that's

00:58:22,220 --> 00:58:30,080
fitting first of all thank you to our

00:58:27,589 --> 00:58:33,930
speaker thank you

00:58:30,080 --> 00:58:44,080
[Applause]

00:58:33,930 --> 00:58:44,080
[Music]

00:58:47,320 --> 00:58:50,459
you

00:58:47,670 --> 00:58:50,459

YouTube URL: https://www.youtube.com/watch?v=2TOcQ17br4U


