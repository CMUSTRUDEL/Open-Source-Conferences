Title: OSMC 2019 | Windows: One Framework to Monitor them all by Christian Stein
Publication date: 2019-11-18
Playlist: OSMC 2019 | Open Source Monitoring Conference
Description: 
	Windows environments are nothing new within the monitoring community. There have been many attempts for integrating Microsofts Operating System including their software solutions with plenty of different attempts. Well, now here is another attempt â€“ trying to bring the Best of both Worlds together and allowing an easier integration of Windows systems including the monitoring components. The new Icinga Monitoring will hopefully not only attract system engineers, but also encourage Developers to bring in own custom Plugins and Checks more easily.


NETWAYS
Konferenzen: https://www.netways.de/events
Schulungen: https://www.netways.de/schulungen
Shop: https://shop.netways.de/
Blog: http://blog.netways.de/
NWS: https://nws.netways.de

Webinare
Archiv Link: https://www.netways.de/webinare/archi...
Aktuell: https://www.netways.de/wb

Social Media
SlideShare: http://de.slideshare.net/netways
YouTube: https://www.netways.de/youtube
Facebook: https://www.facebook.com/netways
Twitter: https://twitter.com/netways
Instagram: https://www.instagram.com/netwaysgmbh/

Musik: FRAMETRAXX
Captions: 
	00:00:15,320 --> 00:00:21,570
yeah so thank you very much and welcome

00:00:18,810 --> 00:00:26,369
everyone um next year I hopefully get to

00:00:21,570 --> 00:00:29,580
pick a room so we're talking about about

00:00:26,369 --> 00:00:32,279
a new framework for monitoring windows

00:00:29,580 --> 00:00:34,410
so at first Who am I my name is mr.

00:00:32,279 --> 00:00:36,110
Stein working for networ since almost

00:00:34,410 --> 00:00:40,530
eight years now in the sales department

00:00:36,110 --> 00:00:42,570
so in my spare time I do lots of windows

00:00:40,530 --> 00:00:46,649
development I maintain two YouTube

00:00:42,570 --> 00:00:48,989
channels jogging skiing and everything

00:00:46,649 --> 00:00:52,589
else that I have still time for and

00:00:48,989 --> 00:01:02,210
today we are talking about a singer and

00:00:52,589 --> 00:01:05,070
Windows so what do we have we have

00:01:02,210 --> 00:01:09,020
plenty of possibilities to monitor

00:01:05,070 --> 00:01:09,020
actual Windows environments so we have

00:01:09,110 --> 00:01:14,729
we have we my interfaces we have DNS

00:01:12,300 --> 00:01:17,400
client with PowerShell we have some sort

00:01:14,729 --> 00:01:21,570
of tools and plugins and whatever but

00:01:17,400 --> 00:01:25,230
it's really not user friendly experience

00:01:21,570 --> 00:01:29,970
in general so who saw my last two talks

00:01:25,230 --> 00:01:33,420
at awesome see okay instead of you so

00:01:29,970 --> 00:01:36,420
basically um what did we all start at

00:01:33,420 --> 00:01:40,980
first we had one simple PowerShell

00:01:36,420 --> 00:01:43,500
module to ensure we can actually make

00:01:40,980 --> 00:01:45,660
the installation of the singer agent

00:01:43,500 --> 00:01:48,510
easier so take care of certificate

00:01:45,660 --> 00:01:51,000
generation installed agent update the

00:01:48,510 --> 00:01:53,910
agent and simply ensure your singer is

00:01:51,000 --> 00:01:57,000
running that is the result that's only

00:01:53,910 --> 00:02:00,300
the first 200 lines of code and the

00:01:57,000 --> 00:02:03,390
result in the end over three thousand

00:02:00,300 --> 00:02:08,310
four hundred lines of code in one singer

00:02:03,390 --> 00:02:13,319
PowerShell script file the funny part is

00:02:08,310 --> 00:02:15,090
it's not even close to describe the

00:02:13,319 --> 00:02:17,610
complexity of the module because it's

00:02:15,090 --> 00:02:19,170
very hard to maintain I see lots of

00:02:17,610 --> 00:02:21,659
complaints about that you can't extend

00:02:19,170 --> 00:02:27,250
it you can't fix bugs properly and yeah

00:02:21,659 --> 00:02:30,840
it just grow over time so then last

00:02:27,250 --> 00:02:33,790
I showed a first prototype of a new

00:02:30,840 --> 00:02:36,940
PowerShell module what a powerful module

00:02:33,790 --> 00:02:39,130
did was to ensure it it collect all the

00:02:36,940 --> 00:02:42,940
windows metrics you actually have on

00:02:39,130 --> 00:02:48,340
your system and then display them in a

00:02:42,940 --> 00:02:51,550
single web to was a great idea but also

00:02:48,340 --> 00:02:54,340
here we have a problem we have no real

00:02:51,550 --> 00:02:56,500
communication layer to ensure that you

00:02:54,340 --> 00:02:58,330
get data from one point to another to a

00:02:56,500 --> 00:03:00,790
singer too because this thing a cluster

00:02:58,330 --> 00:03:03,580
protocol only works with a singer too

00:03:00,790 --> 00:03:06,250
you have T singer Web API but it's hard

00:03:03,580 --> 00:03:09,940
for distributed environments for getting

00:03:06,250 --> 00:03:13,630
actually data over closed network zones

00:03:09,940 --> 00:03:15,820
to your master or whatever and the

00:03:13,630 --> 00:03:17,560
monitoring was quite tricky because when

00:03:15,820 --> 00:03:20,230
you collect data from something and you

00:03:17,560 --> 00:03:21,940
apply a check locking on it for example

00:03:20,230 --> 00:03:24,160
you get every five minutes you get data

00:03:21,940 --> 00:03:26,770
from your window system you check every

00:03:24,160 --> 00:03:29,800
minute you will always have five minutes

00:03:26,770 --> 00:03:32,080
of the same data so it's not very useful

00:03:29,800 --> 00:03:36,730
at all and that also applies to

00:03:32,080 --> 00:03:39,910
monitoring so we are going to of a new

00:03:36,730 --> 00:03:53,110
way and as Java is running on every

00:03:39,910 --> 00:03:55,030
device we're going with Java I'm very

00:03:53,110 --> 00:03:59,400
glad this expression happened from you

00:03:55,030 --> 00:03:59,400
guys so what do we have

00:04:52,580 --> 00:04:57,050
[Music]

00:04:59,350 --> 00:05:26,220
[Music]

00:05:24,870 --> 00:05:29,250
[Applause]

00:05:26,220 --> 00:05:31,200
[Music]

00:05:29,250 --> 00:05:46,329
[Applause]

00:05:31,200 --> 00:05:46,329
[Music]

00:05:53,660 --> 00:06:09,960
[Music]

00:06:17,050 --> 00:06:36,970
I love editing videos don't worry I will

00:06:33,789 --> 00:06:37,509
do the day more little slower so what do

00:06:36,970 --> 00:06:41,229
we have

00:06:37,509 --> 00:06:44,379
we took the module with it last year and

00:06:41,229 --> 00:06:46,690
redesigned it entirely from scratch so

00:06:44,379 --> 00:06:50,500
what we wanted to give everyone was an

00:06:46,690 --> 00:06:53,500
easy framework for installation for

00:06:50,500 --> 00:06:58,210
updating and for writing own is singer

00:06:53,500 --> 00:07:00,940
plugins so everything works simply from

00:06:58,210 --> 00:07:03,220
the framework itself that's installed in

00:07:00,940 --> 00:07:05,639
the window system and each plugin will

00:07:03,220 --> 00:07:08,469
hook up into the framework and use all

00:07:05,639 --> 00:07:10,840
available components so you don't have

00:07:08,469 --> 00:07:13,090
to take care about performance metrics

00:07:10,840 --> 00:07:15,460
you don't have to care about anything

00:07:13,090 --> 00:07:18,460
else for comparing values together

00:07:15,460 --> 00:07:20,919
because the framework will easily do

00:07:18,460 --> 00:07:26,139
most of the stuff for you and it will

00:07:20,919 --> 00:07:28,750
work starting with powershell 4.0 so

00:07:26,139 --> 00:07:31,719
every single window system running

00:07:28,750 --> 00:07:36,699
PowerShell 4.0 should actually work we

00:07:31,719 --> 00:07:41,500
tested it with 2012 r2 2000 2016 and

00:07:36,699 --> 00:07:45,569
2019 and you can get it on the github

00:07:41,500 --> 00:07:50,080
repository a single powershell framework

00:07:45,569 --> 00:07:52,659
now what do we have in general in mind

00:07:50,080 --> 00:07:55,150
we have actually four single

00:07:52,659 --> 00:07:56,860
repositories we have our powerful kick

00:07:55,150 --> 00:07:59,620
starter that's what you saw quickly in

00:07:56,860 --> 00:08:01,300
the video that's simply a short

00:07:59,620 --> 00:08:03,940
PowerShell script you can download

00:08:01,300 --> 00:08:06,460
directly into your shell to get started

00:08:03,940 --> 00:08:09,909
very easily we also will provide

00:08:06,460 --> 00:08:11,469
PowerShell gallery modules this week so

00:08:09,909 --> 00:08:14,110
we are just working with PowerShell

00:08:11,469 --> 00:08:17,169
gallery to get everything up there but

00:08:14,110 --> 00:08:19,090
every module will be released as well we

00:08:17,169 --> 00:08:21,759
have to free our framework in general

00:08:19,090 --> 00:08:25,930
and the framework will manage all the

00:08:21,759 --> 00:08:29,589
plugins and possible daemons we have to

00:08:25,930 --> 00:08:30,729
plug in collection every plugin is with

00:08:29,589 --> 00:08:33,909
an own power

00:08:30,729 --> 00:08:36,490
github repository which means if you

00:08:33,909 --> 00:08:38,260
wish to update plugins you only have to

00:08:36,490 --> 00:08:39,880
update the plugins you don't have to

00:08:38,260 --> 00:08:42,389
touch the framework if there's a bug in

00:08:39,880 --> 00:08:43,899
a plugin simply update the plugins and

00:08:42,389 --> 00:08:46,959
there you go

00:08:43,899 --> 00:08:49,389
no is single agent update required no

00:08:46,959 --> 00:08:53,110
framework update required simply update

00:08:49,389 --> 00:08:54,670
a plug-in and it will just work and we

00:08:53,110 --> 00:08:57,130
have a service daemon and it's written

00:08:54,670 --> 00:09:00,100
in c-sharp that allows us to run

00:08:57,130 --> 00:09:02,709
PowerShell as a background daemon to

00:09:00,100 --> 00:09:05,769
ensure that we get for example metrics

00:09:02,709 --> 00:09:07,180
out of our system so when I talk to

00:09:05,769 --> 00:09:09,790
people we have G&S client for example

00:09:07,180 --> 00:09:11,110
the main advantage they say is well in

00:09:09,790 --> 00:09:13,209
Esther is running as a daemon it's

00:09:11,110 --> 00:09:15,600
collects my CPU metrics and I've one

00:09:13,209 --> 00:09:18,250
minute srimant five minutes and average

00:09:15,600 --> 00:09:20,470
this is what a PowerShell demon will do

00:09:18,250 --> 00:09:22,329
in addition and of course you can write

00:09:20,470 --> 00:09:25,449
your own demons if you require something

00:09:22,329 --> 00:09:26,050
to check regularly regularly to do

00:09:25,449 --> 00:09:32,290
regulary

00:09:26,050 --> 00:09:34,180
it's not a big problem so now we talked

00:09:32,290 --> 00:09:38,350
about lots about what we have and

00:09:34,180 --> 00:09:40,500
actually when is the launch where do you

00:09:38,350 --> 00:09:42,819
get it and how to use it

00:09:40,500 --> 00:09:44,410
ok that it takes longer than expected I

00:09:42,819 --> 00:09:46,440
want to make sure that the enterprise

00:09:44,410 --> 00:09:49,360
launch cool but we release it today

00:09:46,440 --> 00:09:53,440
everything is released in its own

00:09:49,360 --> 00:09:55,750
repository right now with RC one so if

00:09:53,440 --> 00:09:59,079
you want to use it you can download it

00:09:55,750 --> 00:10:02,589
you can get started and please give us

00:09:59,079 --> 00:10:06,300
feedback for that so let's do it quick

00:10:02,589 --> 00:10:06,300
demo and hopefully this works

00:10:07,230 --> 00:10:22,949
close this will it work close yeah ok so

00:10:18,130 --> 00:10:26,260
what do we have we have two windows I

00:10:22,949 --> 00:10:30,279
have two windows systems here Windows

00:10:26,260 --> 00:10:34,029
2019 with nothing changed we have a

00:10:30,279 --> 00:10:36,940
plain installation of windows with all

00:10:34,029 --> 00:10:41,069
updates installed and when you want to

00:10:36,940 --> 00:10:44,260
get started we have for example our

00:10:41,069 --> 00:10:48,280
PowerShell framework

00:10:44,260 --> 00:10:49,840
now what the framework allows you is the

00:10:48,280 --> 00:10:51,970
use the installation guide to get

00:10:49,840 --> 00:10:53,800
started very quickly we have right now

00:10:51,970 --> 00:10:56,560
the manual installation so what you

00:10:53,800 --> 00:10:58,750
simply can do is you download the stay

00:10:56,560 --> 00:11:00,550
latest stable version copy it into your

00:10:58,750 --> 00:11:03,220
Windows PowerShell module directly and

00:11:00,550 --> 00:11:06,100
do everything by yourself or you can

00:11:03,220 --> 00:11:08,830
automate it the third one will be

00:11:06,100 --> 00:11:10,510
PowerShell gallery with you can see will

00:11:08,830 --> 00:11:12,550
be PowerShell gallery which will release

00:11:10,510 --> 00:11:16,780
during the week and we have our

00:11:12,550 --> 00:11:20,830
kickstart script so the kickstart script

00:11:16,780 --> 00:11:24,190
looks quite messy but what it will do it

00:11:20,830 --> 00:11:27,070
it will get to the using a powerful

00:11:24,190 --> 00:11:31,810
kickstart repository and actually load

00:11:27,070 --> 00:11:34,750
the script file into your shell I know

00:11:31,810 --> 00:11:38,830
it's not very common but that was a very

00:11:34,750 --> 00:11:40,990
easy way for not having PowerShell

00:11:38,830 --> 00:11:41,800
gallery so I'm starting the chalice

00:11:40,990 --> 00:11:45,280
administrator

00:11:41,800 --> 00:11:53,920
I hope the internet connection will work

00:11:45,280 --> 00:11:58,800
with me hello hello live demos it's so

00:11:53,920 --> 00:12:06,360
great can I just play the video again

00:11:58,800 --> 00:12:06,360
with slower speed of course hello hello

00:12:09,120 --> 00:12:21,270
yeah make a life team when it works

00:12:11,200 --> 00:12:21,270
always I can't copy okay

00:12:22,079 --> 00:12:30,970
hello Internet Explorer my old friend

00:12:28,470 --> 00:12:33,190
Marcos for editing the video afterwards

00:12:30,970 --> 00:12:35,230
can you play can you please at hello my

00:12:33,190 --> 00:12:37,079
hello my old friend the song that would

00:12:35,230 --> 00:12:40,360
be great

00:12:37,079 --> 00:12:43,860
that's get up you can show up yeah it

00:12:40,360 --> 00:12:43,860
still works in Internet Explorer great

00:12:45,569 --> 00:12:51,519
at least I can hopefully copy my kicks

00:12:49,660 --> 00:12:54,100
that stripped out of it the funny part

00:12:51,519 --> 00:12:55,690
is I tested as 20 times and every time

00:12:54,100 --> 00:12:57,399
it worked of course when you are

00:12:55,690 --> 00:13:01,930
standing here into the presentation of

00:12:57,399 --> 00:13:11,019
course it fails okay so now we're

00:13:01,930 --> 00:13:12,970
getting started I was too quick so what

00:13:11,019 --> 00:13:15,430
the script will first ask you if you

00:13:12,970 --> 00:13:18,759
provide an own repository for the

00:13:15,430 --> 00:13:20,949
framework so if your machines are not

00:13:18,759 --> 00:13:24,540
able to connect to the internet you can

00:13:20,949 --> 00:13:27,189
provide an own repository URL right now

00:13:24,540 --> 00:13:28,959
we will switch it late in addition that

00:13:27,189 --> 00:13:32,709
you can provide providing a local share

00:13:28,959 --> 00:13:34,860
right now you can only have a web site

00:13:32,709 --> 00:13:37,569
for example and place all of your

00:13:34,860 --> 00:13:39,970
components there that includes the

00:13:37,569 --> 00:13:42,670
plugins the service and the framework

00:13:39,970 --> 00:13:44,800
itself so I'm using internet right now

00:13:42,670 --> 00:13:47,410
and now it asks me if I want to install

00:13:44,800 --> 00:13:49,209
the snapshot or the stable build so

00:13:47,410 --> 00:13:53,860
snapshot is very simple it will go to

00:13:49,209 --> 00:13:56,319
the to the master branch and just clone

00:13:53,860 --> 00:13:59,380
the repository tier stable we'll get the

00:13:56,319 --> 00:14:01,269
latest stable version and then it will

00:13:59,380 --> 00:14:05,709
ask me where do you want to actually

00:14:01,269 --> 00:14:08,230
install the module into you see here's

00:14:05,709 --> 00:14:10,269
one part it's recommended to install it

00:14:08,230 --> 00:14:12,850
on the Program Files please do not

00:14:10,269 --> 00:14:16,149
install it in your local or in your

00:14:12,850 --> 00:14:18,519
private user folder if you intend to use

00:14:16,149 --> 00:14:20,290
the module with for example the network

00:14:18,519 --> 00:14:22,689
service user because the network service

00:14:20,290 --> 00:14:26,680
user will not be able to access it by

00:14:22,689 --> 00:14:28,329
default so we're doing that and now it

00:14:26,680 --> 00:14:30,550
will download a framework and install

00:14:28,329 --> 00:14:32,740
everything and ensure the files are

00:14:30,550 --> 00:14:35,709
unblocked that you can start using it

00:14:32,740 --> 00:14:36,370
and once we are done it will ask me now

00:14:35,709 --> 00:14:39,730
if we

00:14:36,370 --> 00:14:42,730
and to actually install the agent or run

00:14:39,730 --> 00:14:44,080
th and install wizard so who knows the

00:14:42,730 --> 00:14:47,650
PowerShell module for a single

00:14:44,080 --> 00:14:54,760
installation module okay are you happy

00:14:47,650 --> 00:14:57,460
with it okay I hit a yes okay so

00:14:54,760 --> 00:15:00,370
basically what the installation wizard

00:14:57,460 --> 00:15:02,710
does you can every thing I type in now

00:15:00,370 --> 00:15:06,610
you can add as an argument for

00:15:02,710 --> 00:15:08,230
automation however if you get to know

00:15:06,610 --> 00:15:10,750
the two hundred lines of code for each

00:15:08,230 --> 00:15:12,700
single argument what argument is for

00:15:10,750 --> 00:15:14,470
what in how is the combination with how

00:15:12,700 --> 00:15:16,630
do you do it

00:15:14,470 --> 00:15:21,460
the wizard well afterwards give you

00:15:16,630 --> 00:15:23,290
everything as an output so we won't use

00:15:21,460 --> 00:15:25,000
the director self-service API because

00:15:23,290 --> 00:15:28,740
that one took me the entire weekend to

00:15:25,000 --> 00:15:42,600
fix it and to get it working properly so

00:15:28,740 --> 00:15:45,600
sales net is come on come on yes so and

00:15:42,600 --> 00:15:49,360
note ask me if I want to overwrite

00:15:45,600 --> 00:15:52,570
arguments by this single director so if

00:15:49,360 --> 00:15:56,080
you use the API from director if you

00:15:52,570 --> 00:15:58,959
know who knows the self-service API okay

00:15:56,080 --> 00:16:01,300
a few for those who don't know it the

00:15:58,959 --> 00:16:04,150
self-service API gives us the

00:16:01,300 --> 00:16:07,900
possibility to fetch a template or a

00:16:04,150 --> 00:16:11,820
host with an API key and based on this

00:16:07,900 --> 00:16:16,420
key you will get a list of configuration

00:16:11,820 --> 00:16:18,940
you did either manually and of course in

00:16:16,420 --> 00:16:20,980
which zone the agent actually is running

00:16:18,940 --> 00:16:24,010
into so if here for example a master

00:16:20,980 --> 00:16:25,959
satellite and a singer the windows host

00:16:24,010 --> 00:16:28,300
is placed here the director will know

00:16:25,959 --> 00:16:29,950
that a single house is placed here so it

00:16:28,300 --> 00:16:31,930
will automatically generate your

00:16:29,950 --> 00:16:36,100
configuration they do connect to these

00:16:31,930 --> 00:16:39,339
endpoints later on and so the

00:16:36,100 --> 00:16:41,050
communication is very easy so I don't

00:16:39,339 --> 00:16:44,560
want to override it and now I need the

00:16:41,050 --> 00:16:50,370
self-service API key oh yeah I can't

00:16:44,560 --> 00:16:57,699
copy paste um so what we will do

00:16:50,370 --> 00:16:59,290
windows agent you know so this is the

00:16:57,699 --> 00:17:03,310
call of the old module that will

00:16:59,290 --> 00:17:04,900
automate everything in general what will

00:17:03,310 --> 00:17:06,220
now do is we will copy the key and

00:17:04,900 --> 00:17:21,370
hopefully it works this time

00:17:06,220 --> 00:17:23,309
he's just work you know life the most

00:17:21,370 --> 00:17:26,110
are great next time Nixie entire

00:17:23,309 --> 00:17:30,760
everything as a as a radio and just

00:17:26,110 --> 00:17:34,419
showed that so we can of course call it

00:17:30,760 --> 00:17:39,240
again um let's keep the safe service API

00:17:34,419 --> 00:17:42,520
did so now it asked me if I want to

00:17:39,240 --> 00:17:44,440
manual specify a host name write the

00:17:42,520 --> 00:17:47,679
default values always an uppercase here

00:17:44,440 --> 00:17:49,929
so you can say yeah I want the fqdn and

00:17:47,679 --> 00:17:52,179
I want to transform it to lowercase and

00:17:49,929 --> 00:17:54,400
will print me out a name and yes the

00:17:52,179 --> 00:17:57,159
issue is the old map module that dot

00:17:54,400 --> 00:17:58,030
work group was assigned is fixed here so

00:17:57,159 --> 00:18:00,640
that won't happen again

00:17:58,030 --> 00:18:04,059
and I want to install this single agent

00:18:00,640 --> 00:18:07,539
now I want to use packages a single calm

00:18:04,059 --> 00:18:09,640
and now it asks me which version I want

00:18:07,539 --> 00:18:14,140
to install what's new you can either

00:18:09,640 --> 00:18:16,480
type in two 1102 eleven one or you can

00:18:14,140 --> 00:18:21,940
simply use latest which is also the

00:18:16,480 --> 00:18:24,659
default now I can do my endpoint

00:18:21,940 --> 00:18:24,659
configuration

00:18:30,730 --> 00:18:38,990
so if I want to use a different part I

00:18:35,210 --> 00:18:41,360
can assign the port here and if my

00:18:38,990 --> 00:18:42,890
endpoint can actually connect to the

00:18:41,360 --> 00:18:44,780
master for all the certificate

00:18:42,890 --> 00:18:46,940
generation so we have three ways to

00:18:44,780 --> 00:18:49,730
generate our certificates for leasing

00:18:46,940 --> 00:18:52,310
agent using a ticket using the

00:18:49,730 --> 00:18:54,290
self-service API or using the single CA

00:18:52,310 --> 00:18:56,990
proxy or without ticket so it's for

00:18:54,290 --> 00:18:59,990
actually what happens in general is that

00:18:56,990 --> 00:19:01,700
this module will cover everything so

00:18:59,990 --> 00:19:03,920
let's have one use case for example

00:19:01,700 --> 00:19:06,080
you're an operator of your monitoring

00:19:03,920 --> 00:19:08,720
environment and you have the windows

00:19:06,080 --> 00:19:11,180
team deploying a new window system they

00:19:08,720 --> 00:19:13,490
can simply deploy the system with all

00:19:11,180 --> 00:19:16,370
the agent installed with everything

00:19:13,490 --> 00:19:20,570
ready and what you will get is a signing

00:19:16,370 --> 00:19:24,250
request for a certificate later that's

00:19:20,570 --> 00:19:28,400
very easy and I hopefully can show it

00:19:24,250 --> 00:19:32,360
then week one for example can open the

00:19:28,400 --> 00:19:34,430
firewall we get a network destinations

00:19:32,360 --> 00:19:36,410
and that one is automatically built

00:19:34,430 --> 00:19:38,570
based on the input you did before it

00:19:36,410 --> 00:19:41,540
will automatically build the

00:19:38,570 --> 00:19:43,130
configuration for connections where your

00:19:41,540 --> 00:19:45,950
services locator warehouse is located

00:19:43,130 --> 00:19:49,160
the port and you can also override it

00:19:45,950 --> 00:19:51,590
here the default zone is master I will

00:19:49,160 --> 00:19:53,930
leave it that way yes we wanted to add

00:19:51,590 --> 00:19:56,810
director global we want global templates

00:19:53,930 --> 00:20:00,470
and now you can also add custom global

00:19:56,810 --> 00:20:02,780
zones for example then we have for our

00:20:00,470 --> 00:20:06,530
if we use a different host for our CI

00:20:02,780 --> 00:20:08,840
master for the certificate authority we

00:20:06,530 --> 00:20:10,040
can edit here by default it will just

00:20:08,840 --> 00:20:14,990
pick the first one

00:20:10,040 --> 00:20:19,520
you entered above now we have a ticket

00:20:14,990 --> 00:20:21,290
no we don't have a ticket now it asks us

00:20:19,520 --> 00:20:22,910
if you want to change the single service

00:20:21,290 --> 00:20:25,970
by default it's running under the

00:20:22,910 --> 00:20:27,920
network service we don't want to change

00:20:25,970 --> 00:20:34,430
it and yes we want to install the single

00:20:27,920 --> 00:20:35,450
plugins we want to do a stable here so

00:20:34,430 --> 00:20:38,540
you see it's a lot it's a lot of

00:20:35,450 --> 00:20:40,100
pressing enter using default then it

00:20:38,540 --> 00:20:42,680
asks if you want to use the powerful

00:20:40,100 --> 00:20:44,090
framework as a service yes

00:20:42,680 --> 00:20:48,049
no we have

00:20:44,090 --> 00:20:51,730
custom source we use the default install

00:20:48,049 --> 00:20:55,159
location and now we get an output of all

00:20:51,730 --> 00:20:58,159
arguments we are having is this

00:20:55,159 --> 00:21:02,360
configuration correct yes and now it

00:20:58,159 --> 00:21:04,520
asks us if you want to run it or if you

00:21:02,360 --> 00:21:06,350
don't want to run it and in any way it

00:21:04,520 --> 00:21:08,750
will print you the entire configuration

00:21:06,350 --> 00:21:10,789
string out so you can copy it and paste

00:21:08,750 --> 00:21:18,860
it on another window system and you're

00:21:10,789 --> 00:21:29,750
good to go so that takes a while let's

00:21:18,860 --> 00:21:36,580
see if the other one yeah yeah sure then

00:21:29,750 --> 00:21:40,549
it will not install it as a service and

00:21:36,580 --> 00:21:42,679
so basically when you you can start the

00:21:40,549 --> 00:21:44,659
PowerShell it has an argument for if you

00:21:42,679 --> 00:21:47,929
want to run it as a daemon and then it

00:21:44,659 --> 00:21:49,760
was simply endlessly loop so if you want

00:21:47,929 --> 00:21:51,950
have scheduled tasks for example you can

00:21:49,760 --> 00:21:53,450
do it you can have it open as when it

00:21:51,950 --> 00:21:56,330
was in a hidden powershell for example

00:21:53,450 --> 00:21:58,460
directly at your windows boot up so you

00:21:56,330 --> 00:22:01,340
don't actually require to run it as a

00:21:58,460 --> 00:22:06,409
service so you can run it also in the

00:22:01,340 --> 00:22:10,539
foreground for example if you wish to so

00:22:06,409 --> 00:22:10,539
let's see if I can do copy-paste here

00:22:12,039 --> 00:22:19,059
please just work that would be great

00:22:16,059 --> 00:22:19,059
hello

00:22:22,779 --> 00:22:31,999
yeah it's right maybe it's maybe it's

00:22:26,330 --> 00:22:34,149
okay we'll do something else never

00:22:31,999 --> 00:22:41,210
change never change something that's

00:22:34,149 --> 00:23:15,710
properly working so let's do the

00:22:41,210 --> 00:23:20,950
old-fashioned way net o s MC if isn't

00:23:15,710 --> 00:23:20,950
two hearts four letters so administrator

00:23:21,279 --> 00:23:39,859
yes and you can specify for example when

00:23:35,359 --> 00:23:44,479
you start the the wizard you can add all

00:23:39,859 --> 00:23:46,970
the arguments that are required so it

00:23:44,479 --> 00:23:50,239
were true and we also have some test

00:23:46,970 --> 00:23:54,320
output here I will get to it later

00:23:50,239 --> 00:23:57,200
so we have what you have here this is

00:23:54,320 --> 00:23:59,359
the actual configuration the wizard

00:23:57,200 --> 00:24:01,460
gives you so if you take that and run it

00:23:59,359 --> 00:24:03,919
on another Windows host then it will

00:24:01,460 --> 00:24:07,840
just use this configuration and do

00:24:03,919 --> 00:24:07,840
exactly the same configuration there

00:24:11,049 --> 00:24:20,980
ah that's not yet supportive but that

00:24:18,519 --> 00:24:22,720
could be that could be done but it's not

00:24:20,980 --> 00:24:30,610
yet supported but that's a good idea

00:24:22,720 --> 00:24:33,399
anybody down please thank you so okay

00:24:30,610 --> 00:24:38,940
let's get that one hopefully it works

00:24:33,399 --> 00:24:41,289
here please yeah we have composed so

00:24:38,940 --> 00:24:44,080
let's do it with the self-service API

00:24:41,289 --> 00:24:45,730
from the director now all I do is I

00:24:44,080 --> 00:24:51,850
simply copy paste the script here as

00:24:45,730 --> 00:24:54,730
well and do the same stuff there so

00:24:51,850 --> 00:25:02,070
install the module and now it will ask

00:24:54,730 --> 00:25:05,759
me to run the wizard takes a while

00:25:02,070 --> 00:25:05,759
any questions so far

00:25:13,799 --> 00:25:28,149
yes you will no longer require DNS

00:25:16,389 --> 00:25:31,450
client that's true yes so basically the

00:25:28,149 --> 00:25:34,119
plugins are designed more or less a

00:25:31,450 --> 00:25:35,679
standalone there's one dependency you

00:25:34,119 --> 00:25:37,450
have that's the framework but if you

00:25:35,679 --> 00:25:39,460
have the framework installed and the

00:25:37,450 --> 00:25:41,080
plugins will take care of it and you can

00:25:39,460 --> 00:25:45,059
also execute them through an S client or

00:25:41,080 --> 00:25:45,059
any other monitoring solution

00:25:56,149 --> 00:26:04,289
yeah yes so the question was if you want

00:26:03,120 --> 00:26:07,620
to replace and that's why the first

00:26:04,289 --> 00:26:22,020
place and the second question was for

00:26:07,620 --> 00:26:23,070
the framework yeah so so the question

00:26:22,020 --> 00:26:24,809
was if you can run the plugins in

00:26:23,070 --> 00:26:29,520
PowerShell then for example the direct

00:26:24,809 --> 00:26:30,929
ANSI line yet yes that's possible so

00:26:29,520 --> 00:26:39,929
this time we use to direct a safe

00:26:30,929 --> 00:26:43,679
service API I type this URL the entire

00:26:39,929 --> 00:26:45,950
weekend I think and also do the wrong

00:26:43,679 --> 00:26:53,220
great

00:26:45,950 --> 00:26:55,770
so direc tour yeah seems correct so no I

00:26:53,220 --> 00:26:59,299
don't want to overwrite them and now we

00:26:55,770 --> 00:27:00,899
are taking the self-service API key

00:26:59,299 --> 00:27:06,539
please what No

00:27:00,899 --> 00:27:08,279
please work yeah so now it will fetch

00:27:06,539 --> 00:27:11,630
the configuration and now it ask them

00:27:08,279 --> 00:27:11,630
again if I want to install the plugins

00:27:13,580 --> 00:27:18,960
stable and if I want to install it as a

00:27:16,590 --> 00:27:20,190
service and you can also skip the plugin

00:27:18,960 --> 00:27:21,600
installation you can skip the plugin

00:27:20,190 --> 00:27:25,799
installation you can skip the framework

00:27:21,600 --> 00:27:30,299
installation it's not a big deal looking

00:27:25,799 --> 00:27:32,610
at a time so okay it's also here you can

00:27:30,299 --> 00:27:34,260
simply copy that one and then you can

00:27:32,610 --> 00:27:36,480
deploy it on a different system that

00:27:34,260 --> 00:27:41,370
will automatically install updates in

00:27:36,480 --> 00:27:43,020
the framework there as well so now what

00:27:41,370 --> 00:27:46,799
it will do

00:27:43,020 --> 00:27:48,960
hopefully it's already--as let's see we

00:27:46,799 --> 00:27:52,649
have a new host like the old module it

00:27:48,960 --> 00:27:55,679
will register the host within the

00:27:52,649 --> 00:27:58,039
director and now I simply add the

00:27:55,679 --> 00:28:01,620
operating system let's say it's Windows

00:27:58,039 --> 00:28:06,649
2019 and then I will deploy the

00:28:01,620 --> 00:28:06,649
configuration yes

00:28:10,680 --> 00:28:15,640
because that's something that's

00:28:13,390 --> 00:28:18,280
currently not allowed in the director

00:28:15,640 --> 00:28:20,650
you can't over because I'm using the

00:28:18,280 --> 00:28:22,960
self-service API and the self-service

00:28:20,650 --> 00:28:26,160
API does not allowed adding custom

00:28:22,960 --> 00:28:30,400
variables total to the system right now

00:28:26,160 --> 00:28:32,230
that's and truly an option we would or I

00:28:30,400 --> 00:28:34,360
would like to see I have to discuss with

00:28:32,230 --> 00:28:36,280
Tom but what he thinks about it but that

00:28:34,360 --> 00:28:38,170
would be of course a great idea on the

00:28:36,280 --> 00:28:41,110
other hand the problem is what you have

00:28:38,170 --> 00:28:43,360
when you have the host register by self

00:28:41,110 --> 00:28:44,650
service API with some well use and for

00:28:43,360 --> 00:28:46,450
example you have an import source and

00:28:44,650 --> 00:28:48,670
assume grew in the director it will

00:28:46,450 --> 00:28:52,270
always overwrite itself again and again

00:28:48,670 --> 00:28:55,870
and again so that's something where we

00:28:52,270 --> 00:28:57,970
somehow need to find a solution for that

00:28:55,870 --> 00:29:01,600
but I will discuss it with home when

00:28:57,970 --> 00:29:02,920
he's back in the office so now what

00:29:01,600 --> 00:29:05,770
happens what you will see is we have

00:29:02,920 --> 00:29:14,370
some outputs here if some past outputs

00:29:05,770 --> 00:29:17,110
so basically what happens is hello test

00:29:14,370 --> 00:29:19,540
is sinh age and you can run it manually

00:29:17,110 --> 00:29:22,270
and for example you will get an output

00:29:19,540 --> 00:29:24,130
if the service is installed if the user

00:29:22,270 --> 00:29:25,960
your scientist service - can actually

00:29:24,130 --> 00:29:30,130
run as a service and if all directories

00:29:25,960 --> 00:29:33,280
are readable and writeable required then

00:29:30,130 --> 00:29:36,040
we for example can enable a single agent

00:29:33,280 --> 00:29:37,720
feature and I want to say then enable

00:29:36,040 --> 00:29:41,500
the debug lock for example which will

00:29:37,720 --> 00:29:43,960
work if we do it again we will get a

00:29:41,500 --> 00:29:46,660
warning that a debug log is enabled so

00:29:43,960 --> 00:29:57,340
you will never forget again to disable

00:29:46,660 --> 00:29:59,410
your debug log then for those read is

00:29:57,340 --> 00:30:05,770
single agent lock file you can also read

00:29:59,410 --> 00:30:07,180
the log file like a tail on on Linux

00:30:05,770 --> 00:30:09,880
thank you

00:30:07,180 --> 00:30:11,020
it's a simple command of course if you

00:30:09,880 --> 00:30:13,570
know PowerShell you can do it all

00:30:11,020 --> 00:30:15,880
yourself but there are plenty of helper

00:30:13,570 --> 00:30:18,220
functions and plenty of utilities built

00:30:15,880 --> 00:30:19,180
into this entire framework to make your

00:30:18,220 --> 00:30:21,880
life and maintaining

00:30:19,180 --> 00:30:26,830
agent a lot easier and also writing

00:30:21,880 --> 00:30:29,430
plugins a lot easier so now let's take

00:30:26,830 --> 00:30:34,680
another use case for example let's say

00:30:29,430 --> 00:30:41,350
you don't like the service running as

00:30:34,680 --> 00:30:50,880
network service user so let's get to

00:30:41,350 --> 00:30:52,570
users and add a new user here is so user

00:30:50,880 --> 00:30:58,720
new user

00:30:52,570 --> 00:31:00,940
we call it the singer a singer and of

00:30:58,720 --> 00:31:04,480
course a very secure password that fits

00:31:00,940 --> 00:31:07,810
every Microsoft guidelines so we don't

00:31:04,480 --> 00:31:15,520
want to change it user cannot change any

00:31:07,810 --> 00:31:18,480
lessons off ok so we have the user set

00:31:15,520 --> 00:31:27,550
is singer or god

00:31:18,480 --> 00:31:29,920
agent service user user password get so

00:31:27,550 --> 00:31:38,280
that's it that's a secure string so we

00:31:29,920 --> 00:31:38,280
have to do get credential password and

00:31:39,420 --> 00:31:53,830
we want to set permissions afterwards so

00:31:43,840 --> 00:31:57,750
let's get a prompt yeah I missed one

00:31:53,830 --> 00:31:57,750
argument you was a singer

00:32:04,929 --> 00:32:14,989
so I hope it didn't miss type it it's

00:32:13,039 --> 00:32:18,379
running as a different user and what

00:32:14,989 --> 00:32:20,359
happens it will also if you set a set

00:32:18,379 --> 00:32:22,969
permission flag it will automatically

00:32:20,359 --> 00:32:25,489
update all directory permissions that is

00:32:22,969 --> 00:32:28,249
singer used and you do secret it can

00:32:25,489 --> 00:32:30,859
access it right log files so the agent

00:32:28,249 --> 00:32:32,659
will no longer crash if you change the

00:32:30,859 --> 00:32:36,169
user and don't know know why is the

00:32:32,659 --> 00:32:40,609
agent crash crashing so let's see if the

00:32:36,169 --> 00:32:52,399
agent is running yeah here it is

00:32:40,609 --> 00:32:55,939
let's see if we can restart it okay it's

00:32:52,399 --> 00:32:59,149
running so that's very simple now

00:32:55,939 --> 00:33:02,719
plugins whenever you install the plugins

00:32:59,149 --> 00:33:09,529
they will automatically be loaded and

00:33:02,719 --> 00:33:11,899
for example let's get the load check so

00:33:09,529 --> 00:33:13,369
we have a check package that CPU load if

00:33:11,899 --> 00:33:14,809
you follow up my follow me on Twitter

00:33:13,369 --> 00:33:17,869
and you will already see something

00:33:14,809 --> 00:33:23,239
similar and we can also for example say

00:33:17,869 --> 00:33:26,449
ok we weren't a warning with 30% ok

00:33:23,239 --> 00:33:29,989
great thank you give me a warning

00:33:26,449 --> 00:33:32,289
ok so now we have a warning and each

00:33:29,989 --> 00:33:37,069
single core we're having right now is

00:33:32,289 --> 00:33:40,129
affected so when you have 60s read CPU

00:33:37,069 --> 00:33:41,599
it will check every single core because

00:33:40,129 --> 00:33:44,029
for example you have one single threaded

00:33:41,599 --> 00:33:46,069
application that's killing qualify for

00:33:44,029 --> 00:33:48,349
example you maybe want to get to know

00:33:46,069 --> 00:33:54,499
the and know about it so what you can

00:33:48,349 --> 00:33:56,809
also do is manually specify just the

00:33:54,499 --> 00:34:00,469
core and then its core total for example

00:33:56,809 --> 00:34:03,129
the average what also happens is when we

00:34:00,469 --> 00:34:07,989
for example say we want to have critical

00:34:03,129 --> 00:34:07,989
14 that extra was was Marcos idea

00:34:09,960 --> 00:34:19,200
let's say 56 let's see what happened

00:34:13,710 --> 00:34:23,069
yeah no oh come on stop flapping that

00:34:19,200 --> 00:34:25,740
much okay now we have it what happens is

00:34:23,069 --> 00:34:29,700
this is the first line that's this plate

00:34:25,740 --> 00:34:31,710
was in is singer what - it will

00:34:29,700 --> 00:34:34,859
automatically tell you the check package

00:34:31,710 --> 00:34:37,379
itself it's critical critical is core

00:34:34,859 --> 00:34:39,419
one and these course are all warning so

00:34:37,379 --> 00:34:42,809
it will sort of filter everything it

00:34:39,419 --> 00:34:48,540
will filter them by name and by state

00:34:42,809 --> 00:34:51,119
and yeah now we have a simple CPU check

00:34:48,540 --> 00:34:55,440
here now let's say for example register

00:34:51,119 --> 00:35:02,000
is Singha service check so what is does

00:34:55,440 --> 00:35:09,480
I can now tell the demon behind or the

00:35:02,000 --> 00:35:11,700
the service the forgotten name the the

00:35:09,480 --> 00:35:11,940
windows x time seeing how was it called

00:35:11,700 --> 00:35:17,700
again

00:35:11,940 --> 00:35:20,660
thank you yes to run the framework and I

00:35:17,700 --> 00:35:24,750
want check amount invoking a check CPU I

00:35:20,660 --> 00:35:27,119
want interval every 10 seconds and then

00:35:24,750 --> 00:35:30,000
time index s let's say for example 1

00:35:27,119 --> 00:35:36,059
minute 3 minute 5 minutes 10 minutes 50

00:35:30,000 --> 00:35:42,960
minutes and 30 minutes so restart using

00:35:36,059 --> 00:35:47,069
a service so what now happens is it will

00:35:42,960 --> 00:35:49,319
register the CPU check was in the demon

00:35:47,069 --> 00:35:52,260
and the demon will now execute this

00:35:49,319 --> 00:35:54,599
check every 10 seconds and store all the

00:35:52,260 --> 00:35:57,900
metrics and build all the well Yoshi if

00:35:54,599 --> 00:36:02,010
it was in a time indexes and print them

00:35:57,900 --> 00:36:03,990
out automatically without doing anything

00:36:02,010 --> 00:36:07,380
to the plug-in you will automatically

00:36:03,990 --> 00:36:10,260
get all metrics from the system so there

00:36:07,380 --> 00:36:11,430
lot of metrics right now I see a core 2

00:36:10,260 --> 00:36:15,720
00:36:11,430 --> 00:36:18,349
for example core 1 3 minutes cause 350

00:36:15,720 --> 00:36:21,359
minutes and so on so this is also a

00:36:18,349 --> 00:36:23,670
reboot safe if you restart the 80

00:36:21,359 --> 00:36:27,089
PowerShell agent it will simply low

00:36:23,670 --> 00:36:30,900
up the previous values and work with

00:36:27,089 --> 00:36:33,260
them again so how does this look now

00:36:30,900 --> 00:36:33,260
when you're single

00:36:33,650 --> 00:36:49,530
we did some checks here so let's see if

00:36:40,049 --> 00:36:52,410
they are all working so oh no I will clo

00:36:49,530 --> 00:36:56,309
check it's not working why we're from

00:36:52,410 --> 00:36:58,530
permission error that the plug-in is not

00:36:56,309 --> 00:37:00,809
able or the framework is not able to

00:36:58,530 --> 00:37:03,180
fetch performance counters so what we

00:37:00,809 --> 00:37:05,940
did was to ensure that in case you're

00:37:03,180 --> 00:37:07,500
lacking permissions to do something the

00:37:05,940 --> 00:37:09,030
framework will not just crash it will

00:37:07,500 --> 00:37:11,520
not just give you an empty string with

00:37:09,030 --> 00:37:14,220
unknown it will actually tell you what

00:37:11,520 --> 00:37:17,369
is the problem why it happened and how

00:37:14,220 --> 00:37:23,660
you can fix it so what we can't do for

00:37:17,369 --> 00:37:30,390
example now how many time have okay so

00:37:23,660 --> 00:37:38,220
groups and now we have for example I

00:37:30,390 --> 00:37:41,609
think it's that one so any singer let's

00:37:38,220 --> 00:37:45,270
add the user here it actually tells it

00:37:41,609 --> 00:37:47,309
tells that you running into performance

00:37:45,270 --> 00:37:49,260
lock users group you have to simply add

00:37:47,309 --> 00:37:58,640
the use into this group and then it

00:37:49,260 --> 00:37:58,640
should work and now when we restart do

00:38:00,260 --> 00:38:06,990
so and now when the age has restarted we

00:38:04,890 --> 00:38:07,770
should actually get performance metrics

00:38:06,990 --> 00:38:09,480
out of it

00:38:07,770 --> 00:38:11,700
same goes for disk it's the same issue

00:38:09,480 --> 00:38:14,160
we're using plenty of performance

00:38:11,700 --> 00:38:18,359
counters here and you can get this state

00:38:14,160 --> 00:38:23,609
out so we also have an service check for

00:38:18,359 --> 00:38:25,020
the single service and as long as every

00:38:23,609 --> 00:38:26,900
single screen you won't get any

00:38:25,020 --> 00:38:30,420
information about it we have for example

00:38:26,900 --> 00:38:34,079
the ID host we have the service here and

00:38:30,420 --> 00:38:36,630
it's fine now let's see what the load

00:38:34,079 --> 00:38:37,680
check will do and here it works gives

00:38:36,630 --> 00:38:40,349
you all the metrics out

00:38:37,680 --> 00:38:42,359
for every single core that's just a

00:38:40,349 --> 00:38:43,829
robot city flag right now because it's

00:38:42,359 --> 00:38:47,160
turned out to max then it will print out

00:38:43,829 --> 00:38:48,720
every single check package graph and

00:38:47,160 --> 00:38:50,880
give you all the status out of it by

00:38:48,720 --> 00:38:54,210
default if everything is okay you will

00:38:50,880 --> 00:38:58,529
only see this line as for example with

00:38:54,210 --> 00:39:01,680
the service yeah so service

00:38:58,529 --> 00:39:07,740
configuration for example what we have

00:39:01,680 --> 00:39:10,950
is that let's get get is sing oh no we

00:39:07,740 --> 00:39:13,200
do it differently so because I'm little

00:39:10,950 --> 00:39:17,549
running out of time so basically what we

00:39:13,200 --> 00:39:21,510
can do is we create unplugging now let's

00:39:17,549 --> 00:39:26,599
say we call it a single OS MC so new

00:39:21,510 --> 00:39:40,099
file a single or some CPS and one and

00:39:26,599 --> 00:39:43,099
for example what you can do is I want

00:39:40,099 --> 00:39:43,099
better

00:39:44,339 --> 00:39:55,469
I just have to adjust this a little bit

00:39:45,809 --> 00:39:57,420
so invoke is saying check OS MC so very

00:39:55,469 --> 00:40:00,150
important is to automatically being

00:39:57,420 --> 00:40:03,359
detected by the framework you require to

00:40:00,150 --> 00:40:06,299
use this first place invoke a single

00:40:03,359 --> 00:40:08,130
check that's the actual name space every

00:40:06,299 --> 00:40:10,140
plugin will follow and if this is

00:40:08,130 --> 00:40:12,569
followed every single plug-in is

00:40:10,140 --> 00:40:15,359
automatically detected by the framework

00:40:12,569 --> 00:40:18,239
and you can get configuration out of it

00:40:15,359 --> 00:40:29,960
so let's say for example you're in the

00:40:18,239 --> 00:40:37,619
parameter date I always mess this up

00:40:29,960 --> 00:40:38,969
early really oops really well it said no

00:40:37,619 --> 00:40:41,119
it was not

00:40:38,969 --> 00:40:48,329
I always mess the syntax up here is

00:40:41,119 --> 00:40:51,839
let's for example we want Band Christian

00:40:48,329 --> 00:40:55,410
and Alexander because Alexander assisted

00:40:51,839 --> 00:40:57,420
very very hard with this module it did

00:40:55,410 --> 00:41:03,029
lots of work with it and now we have for

00:40:57,420 --> 00:41:09,960
example the attendee argument and for

00:41:03,029 --> 00:41:14,279
example let's say that's Louisa and for

00:41:09,960 --> 00:41:19,469
example warning I still have some time

00:41:14,279 --> 00:41:20,849
and so now to use the framework I will

00:41:19,469 --> 00:41:24,180
have used a sing and what I do now is

00:41:20,849 --> 00:41:27,059
I've load into power shock into Visual

00:41:24,180 --> 00:41:30,420
Studio code and now I have the code

00:41:27,059 --> 00:41:34,799
completion active I can do new single

00:41:30,420 --> 00:41:37,979
check that will requires a name let's

00:41:34,799 --> 00:41:40,469
say for example we call it output we add

00:41:37,979 --> 00:41:43,109
a value let's say 10 and we want to add

00:41:40,469 --> 00:41:45,569
you can also add minimum a maximum for

00:41:43,109 --> 00:41:51,710
example we want to be a percentage unit

00:41:45,569 --> 00:41:57,869
and now we for example want check and

00:41:51,710 --> 00:41:58,619
worn out of range with our warning

00:41:57,869 --> 00:42:02,309
threshold

00:41:58,619 --> 00:42:05,940
so what this will do who's familiar with

00:42:02,309 --> 00:42:09,900
the Nagios develop a guideline on how

00:42:05,940 --> 00:42:13,229
these arguments were a quiz okay at

00:42:09,900 --> 00:42:15,660
least at least two three four okay some

00:42:13,229 --> 00:42:17,999
people are so what there are two

00:42:15,660 --> 00:42:19,650
functions worn out of range and quit out

00:42:17,999 --> 00:42:21,660
of range what it will simply do

00:42:19,650 --> 00:42:31,349
everything that's covered by the plug-in

00:42:21,660 --> 00:42:33,269
itself for example at 10.20 for example

00:42:31,349 --> 00:42:35,430
it will automatically translate it so

00:42:33,269 --> 00:42:38,130
you can for example automatically get if

00:42:35,430 --> 00:42:40,710
it's inside the range outside the range

00:42:38,130 --> 00:42:45,109
greater equal whatever that's simply

00:42:40,710 --> 00:42:52,190
done here and now what we do is return

00:42:45,109 --> 00:42:57,029
new missing check results with our check

00:42:52,190 --> 00:43:01,319
and no path data for example false and

00:42:57,029 --> 00:43:07,710
we want to compile it so let's open up a

00:43:01,319 --> 00:43:11,549
shell and see what happens invoke is

00:43:07,710 --> 00:43:13,739
sing check OS MC oh no remote your fails

00:43:11,549 --> 00:43:24,529
why because we need to initialize the

00:43:13,739 --> 00:43:24,529
framework and now we get our output

00:43:25,190 --> 00:43:43,279
performance metrics are missing why you

00:43:29,190 --> 00:43:43,279
missing a check that's weird at work

00:43:43,470 --> 00:43:58,869
let's do it again what do you get the

00:43:48,820 --> 00:44:02,560
idea I don't know it should work so what

00:43:58,869 --> 00:44:05,140
were you so I'm not spending outside

00:44:02,560 --> 00:44:08,650
zones of time to fix this and so get a

00:44:05,140 --> 00:44:11,460
singer check come on come much Justin

00:44:08,650 --> 00:44:16,480
something missing we want to check

00:44:11,460 --> 00:44:19,690
invoke a sing check OS MC let's for

00:44:16,480 --> 00:44:29,140
example place it directly under C come

00:44:19,690 --> 00:44:33,400
on users documents so now I've exported

00:44:29,140 --> 00:44:35,950
this command and it will automatically

00:44:33,400 --> 00:44:39,790
generate now a basket file and this

00:44:35,950 --> 00:44:43,240
basket file we can use to upload it into

00:44:39,790 --> 00:44:49,859
the single director so what happens is

00:44:43,240 --> 00:44:55,740
as we actually know what well you our

00:44:49,859 --> 00:44:58,810
awesome C as you know was that exactly

00:44:55,740 --> 00:45:03,970
what arguments you are having what type

00:44:58,810 --> 00:45:10,000
there actually are you can do that

00:45:03,970 --> 00:45:14,260
upload take a snapshots we have one data

00:45:10,000 --> 00:45:16,210
list two commands and two data fields it

00:45:14,260 --> 00:45:19,210
will create a new data list a single

00:45:16,210 --> 00:45:27,430
check awesome C user it will actually

00:45:19,210 --> 00:45:33,520
create it restore so and now when I go

00:45:27,430 --> 00:45:37,060
to commands I will have hopefully the OS

00:45:33,520 --> 00:45:40,480
MC plug in here and was an automatic

00:45:37,060 --> 00:45:43,510
drop down field what values are actually

00:45:40,480 --> 00:45:47,650
allowed to run for so you can do parent

00:45:43,510 --> 00:45:50,440
here and in a warning and you go to go

00:45:47,650 --> 00:45:53,290
for example so that's very easy because

00:45:50,440 --> 00:45:55,720
the more you maintain your code was in

00:45:53,290 --> 00:45:57,040
the actual plugin the more information

00:45:55,720 --> 00:46:00,630
you will

00:45:57,040 --> 00:46:03,540
right inside you're a singer director so

00:46:00,630 --> 00:46:07,720
for example let's have a check on the

00:46:03,540 --> 00:46:12,070
service check you can add multiple

00:46:07,720 --> 00:46:14,200
services here if we add a description

00:46:12,070 --> 00:46:16,450
for this actual argument it will

00:46:14,200 --> 00:46:19,150
automatically be imported inside the

00:46:16,450 --> 00:46:20,590
singer director and if you specify an

00:46:19,150 --> 00:46:22,450
argument as an array it will

00:46:20,590 --> 00:46:24,640
automatically render it as an error in

00:46:22,450 --> 00:46:26,619
the director it's very simple but very

00:46:24,640 --> 00:46:28,690
user-friendly because you no longer have

00:46:26,619 --> 00:46:32,490
to take care of okay what is this well

00:46:28,690 --> 00:46:37,660
you what can I input there so everything

00:46:32,490 --> 00:46:38,320
everything is just here it's an integer

00:46:37,660 --> 00:46:44,590
value

00:46:38,320 --> 00:46:47,410
let's see check up time I sing here you

00:46:44,590 --> 00:46:50,580
can add a unit so the uptime can be for

00:46:47,410 --> 00:46:55,090
example 20 hours you simply add that and

00:46:50,580 --> 00:46:57,520
the actual threat info within the

00:46:55,090 --> 00:47:00,220
director will tell you what to do or

00:46:57,520 --> 00:47:02,380
what you can type in so you can also say

00:47:00,220 --> 00:47:06,010
no performance data you can simply flag

00:47:02,380 --> 00:47:09,190
it you can add a velocity level and yeah

00:47:06,010 --> 00:47:16,359
you're good to go so it sing I have nine

00:47:09,190 --> 00:47:17,200
minutes correct okay so it's it's so far

00:47:16,359 --> 00:47:19,540
I won't

00:47:17,200 --> 00:47:23,590
I just want to ensure that you have

00:47:19,540 --> 00:47:31,000
enough time for possible questions any

00:47:23,590 --> 00:47:42,460
questions no questions okay so wait wait

00:47:31,000 --> 00:47:44,260
I'm not finished so it's a short wrap-up

00:47:42,460 --> 00:47:45,850
of actually what you what you can do

00:47:44,260 --> 00:47:51,640
with there was the framework and with

00:47:45,850 --> 00:47:54,820
the with the current state and what's

00:47:51,640 --> 00:47:56,770
next we will like I said before we will

00:47:54,820 --> 00:47:58,359
publish it on PowerShell gallery so you

00:47:56,770 --> 00:48:00,480
can install it directly from there if

00:47:58,359 --> 00:48:04,240
you're more comfortable doing that and

00:48:00,480 --> 00:48:06,430
we will extend the plugins with mssql

00:48:04,240 --> 00:48:08,200
active directory exchange in hyper-v

00:48:06,430 --> 00:48:10,480
that are the next parts including with

00:48:08,200 --> 00:48:12,820
some Network checks and of

00:48:10,480 --> 00:48:17,800
your contribution so writing checks

00:48:12,820 --> 00:48:19,060
should be a lot easier hopefully but we

00:48:17,800 --> 00:48:22,180
would be happy to actually get your

00:48:19,060 --> 00:48:25,000
Fitbit here back here and Liam asked me

00:48:22,180 --> 00:48:26,770
one thing if you would like to we would

00:48:25,000 --> 00:48:28,780
love to invite you to fill out your

00:48:26,770 --> 00:48:30,880
single survey to tell you what you think

00:48:28,780 --> 00:48:45,670
about the singer and how use it so

00:48:30,880 --> 00:48:46,780
that's so far from my side you know

00:48:45,670 --> 00:48:55,150
Thank You Christian

00:48:46,780 --> 00:48:57,520
are there any questions no come on you

00:48:55,150 --> 00:48:59,350
just showed that the modules are

00:48:57,520 --> 00:49:01,690
installed manually during the

00:48:59,350 --> 00:49:03,460
installation process once they're also

00:49:01,690 --> 00:49:06,610
functioning cruet that will do updates

00:49:03,460 --> 00:49:11,770
regularly so that new functions are edit

00:49:06,610 --> 00:49:14,370
and new yeah stuff because managing that

00:49:11,770 --> 00:49:18,220
on a large-scale environment probably a

00:49:14,370 --> 00:49:19,260
little bit hard to maintain let me show

00:49:18,220 --> 00:49:25,540
you something

00:49:19,260 --> 00:49:30,130
install a singer framework plugins so

00:49:25,540 --> 00:49:31,930
let's do it so stable your singer

00:49:30,130 --> 00:49:33,580
plugins are up to date so when a new

00:49:31,930 --> 00:49:36,370
release is available it will ultimately

00:49:33,580 --> 00:49:42,670
get it and if you wish to install

00:49:36,370 --> 00:49:44,020
snapshot I hopefully it works now 9 yeah

00:49:42,670 --> 00:49:47,980
that's a little it's a little issue with

00:49:44,020 --> 00:49:49,660
was read protection but general yes you

00:49:47,980 --> 00:49:53,880
can update a framework you can update

00:49:49,660 --> 00:49:55,750
the plugins simply by a command that's

00:49:53,880 --> 00:50:05,760
possible so you can automate it

00:49:55,750 --> 00:50:05,760
for example that's possible anymore

00:50:07,490 --> 00:50:15,690
okay we'll leave it for that thank you

00:50:10,200 --> 00:50:22,010
again ends the round of applause

00:50:15,690 --> 00:50:32,170
[Applause]

00:50:22,010 --> 00:50:32,170
[Music]

00:50:35,069 --> 00:50:38,519
you

00:50:35,750 --> 00:50:38,519

YouTube URL: https://www.youtube.com/watch?v=OccVrf4njtQ


